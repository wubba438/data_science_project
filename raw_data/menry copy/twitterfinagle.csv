finagle,"A fault tolerant, protocol-agnostic RPC system"
username,timestamp,url,sha,message
hamdiallam,2019-09-16 18:37:33,https://api.github.com/repos/twitter/finagle/git/commits/bbf88eb27321c85d1034a59b9d88fca28be858a6,bbf88eb27321c85d1034a59b9d88fca28be858a6,"OSS Mid-September post-release

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 19.10.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

JIRA Issues: CSL-8794

Differential Revision: https://phabricator.twitter.biz/D369069"
enbnt,2019-09-16 18:09:54,https://api.github.com/repos/twitter/finagle/git/commits/12621ff85ffcc2340955637afed823e6edc12a7f,12621ff85ffcc2340955637afed823e6edc12a7f,"finagle-http2: modify H2ServerFilter to no longer swallow exceptions

Problem/Solution

The `H2ServerFilter` currently swallows any exceptions that get
fired down the pipeline. There is nothing we currently know of
that should explicitly need to be caught here and blindly
swallowing exceptions could mask other issues. Let's remove
it.

JIRA Issues: CSL-8654

Differential Revision: https://phabricator.twitter.biz/D369185"
ryanoneill,2019-09-12 00:50:17,https://api.github.com/repos/twitter/finagle/git/commits/99d5de4ad68470f0e4f33c8937e843b0d62ef1a2,99d5de4ad68470f0e4f33c8937e843b0d62ef1a2,"finagle: Add All Projects to Travis CI Config

Problem / Solution

We are not currently testing all finagle projects within Travis CI.
We should add the ones that are missing and make sure that they pass.

JIRA Issues: CSL-8777

Differential Revision: https://phabricator.twitter.biz/D369465"
slyphon,2019-09-10 22:04:17,https://api.github.com/repos/twitter/finagle/git/commits/d5aa74d3c3155dc886ea4f3fdcfbfbb304364914,d5aa74d3c3155dc886ea4f3fdcfbfbb304364914,"finagle-redis: Add hashed-key based partitioning/routing support to redis

Problem:

It would be advantageous in some circumstances to be able to use a cluster of
redis servers without requiring the use of a central coordinating service.

Solution:

Take advantage of the new finagle-partitioning module to implement a
partitioned client for redis.

Result:

A new redis client stack that uses the (somewhat ill-named)
KetamaPartitioningService to provide key-based routing to a number of backend
servers. The standard and transactional clients have not changed. This review
only adds a new configuration, and handles an appropriate subset of redis
commands (ones that do not have an implicit assumption that they're talking to
a single backend node). Note that the hashing algorithm is configurable, and
the code is hash-implementation agnostic.

Differential Revision: https://phabricator.twitter.biz/D362798"
hamdiallam,2019-09-10 19:56:19,https://api.github.com/repos/twitter/finagle/git/commits/a27f9d21a631433571e84854ddb3f2f75308f23e,a27f9d21a631433571e84854ddb3f2f75308f23e,"Mid-September OSS release

Problem

We want to release the next versions of our Twitter OSS libraries 19.9.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-8794

Differential Revision: https://phabricator.twitter.biz/D368464"
mosesn,2019-09-10 19:14:21,https://api.github.com/repos/twitter/finagle/git/commits/30c187c4a02519fdd2f188834bf1420bcfc64d82,30c187c4a02519fdd2f188834bf1420bcfc64d82,"finagle-core: Rearranged BUILD files to avoid relative paths

Problem

Pants doesn't play nicely when you have "".."" in your path, because it makes it
harder to track changes to your file system.  Nice and easy when you just have
to look in subdirectories.

Solution

Move the BUILD file up a level, and add a redirect at the old location.

JIRA Issues: DPB-11645

Differential Revision: https://phabricator.twitter.biz/D368349"
martijnhoekstra,2019-09-05 16:58:07,https://api.github.com/repos/twitter/finagle/git/commits/f21a54e0d759e005e089e9996113548078044498,f21a54e0d759e005e089e9996113548078044498,"finagle-core: -> 2.13

Problem

There is no 2.13 release for finagle core

Solution

Make a 2.13 build

Result

A 2.13 build

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D364013"
luciferous,2019-09-05 16:33:29,https://api.github.com/repos/twitter/finagle/git/commits/d314bd6293fa7b42a8a64107eda8cfb10d37b9cf,d314bd6293fa7b42a8a64107eda8cfb10d37b9cf,"finagle-netty4-http: Remove PayloadSizeHandler from streaming enabled case

Problem

At the moment messages that are larger than 2GB cannot be processed due
to the fact that the MaxRequest/Response size is capped at 2GB. This
renders to be a problem especially in the situation when we have
`fixedLengthStreamedAfter`. This is because even though a request for
example shall be streamed if its above a certain size, if it is larger
than `MaxRequestSize` it will be rejected.

Solution

Remove the PayloadSizeHandler when Streaming is Enabled in order to
allow for arbitrary long messages to be processed in a streaming
fashion.

Fixes #780

Signed-off-by: Neuman Vong <nvong@twitter.com>

JIRA Issues: CSL-8585

Differential Revision: https://phabricator.twitter.biz/D361445"
kevinoliver,2019-09-04 17:35:41,https://api.github.com/repos/twitter/finagle/git/commits/381c19c5cf3260b5d093fa1f7a6c6b920538dbf6,381c19c5cf3260b5d093fa1f7a6c6b920538dbf6,"finagle-core: Minor CachingPool tweaks

Problem / Solution

`CachingPool` was changed recently (PHAB_ID=D3487690) and while
working in there a few items were noted for future work. This commit
addresses them.

Result

- The `Service` always returns `Future.Done`.

- Closing of the underlying `Service` happens outside of the
  synchronization block.

JIRA Issues: CSL-8678

Differential Revision: https://phabricator.twitter.biz/D364199"
ole-magnus,2019-09-04 16:07:13,https://api.github.com/repos/twitter/finagle/git/commits/0c43561aa5d30f1fdaf4f80f400539cf1a1a44f0,0c43561aa5d30f1fdaf4f80f400539cf1a1a44f0,"finagle-http: Add 'None' as valid SameSite value

Problem

The SameSite attribute is intended to accept Lax, Strict and None as values (0). Currently, only Lax and Strict is supported.

Also, as motivation, Chrome is supposedly planning to treat SameSite=None as a way to signal you want to use x-site cookies as of February 2020 (1).

Solution

Added None in the sealed trait as a valid case.

Result

You can set SameSite=None in the cookie.

(0): https://tools.ietf.org/html/draft-west-first-party-cookies-07
(1): https://blog.chromium.org/2019/05/improving-privacy-and-security-on-web.html

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D365170"
noxiouz,2019-09-03 21:39:26,https://api.github.com/repos/twitter/finagle/git/commits/c5cfff07dee069fc36ad7790dfd679610262d68c,c5cfff07dee069fc36ad7790dfd679610262d68c,"finagle-mux: Fix mux_dissector for Wireshark 3.x

Problem

info() is no longer available as of Wireshark 3.0

Solution

Use print() instead of info() as an Wireshark documentation suggests
https://wiki.wireshark.org/LuaAPI/Utils#info.28text.29
This change is backward compatible with 2.x

Result

The dissector works on both 2.x and 3.x Wireshark branches

Differential Revision: https://phabricator.twitter.biz/D364722"
vkostyukov,2019-08-29 19:38:16,https://api.github.com/repos/twitter/finagle/git/commits/50f238417824d7e26477fac0dc09e0432022ab5e,50f238417824d7e26477fac0dc09e0432022ab5e,"finagle-docs: Clarify some latency stats

Problem

Certain latency stats need clarification with regards to how they relate and what they cover.

Solution

Improve the documentation.

JIRA Issues: CSL-8241

Differential Revision: https://phabricator.twitter.biz/D362611"
enbnt,2019-08-29 17:37:04,https://api.github.com/repos/twitter/finagle/git/commits/d608bd4611186f9e12a5620d6147a71fc38072b6,d608bd4611186f9e12a5620d6147a71fc38072b6,"finagle-http: ensure streaming tests test HTTP/2 properly

Problem

The `AbstractStreamingTest` exposes an `impl` property
to allow clients and servers to swap out implementation.
The `impl` property is never used when configuring the
clients, meaning that HTTP/2 is not being tested. We
also do not have explicit coverage for the legacy and
`MultiplexHandler` based HTTP/2 clients.

Solution

Modify the way clients and servers get configured for
the tests so that we can remove the `impl` property.
Be more explicit about whether or not to use HTTP/2.

Result

We now test HTTP/2 clients for streaming.

JIRA Issues: CSL-8769

Differential Revision: https://phabricator.twitter.biz/D363420"
mosesn,2019-08-28 22:38:02,https://api.github.com/repos/twitter/finagle/git/commits/ce0f689b20c6fed774da911b072a2d59044621f8,ce0f689b20c6fed774da911b072a2d59044621f8,"csl: bump the sbt version across the board

Problem

We have mismatched sbt versions, but 1.2.8 seems to work better for 2.13.

Solution

Get consistent sbt versions across the board.

JIRA Issues: CSL-8768

Differential Revision: https://phabricator.twitter.biz/D363311"
enbnt,2019-08-27 23:29:21,https://api.github.com/repos/twitter/finagle/git/commits/219243554a31a06d294d18a55ec4dc30f91c1037,219243554a31a06d294d18a55ec4dc30f91c1037,"dodo: update travis config to use trust dist, update scala/jdk

Problem

The dodo .travis.yml configuration is using the default travis
build image, which has been moved to dist: xenial and does
not have the oraclejdk8 available.

Solution

Explicitly list dist: trusty, as the other Twitter ecosystem projects
do. Modify the Scala version to match our other projects. Move
all projects to `openjdk8`.

Result

Dodo build should pass.

JIRA Issues: CSL-8640

Differential Revision: https://phabricator.twitter.biz/D362555"
mosesn,2019-08-27 22:11:19,https://api.github.com/repos/twitter/finagle/git/commits/b0b9d1c90a9cd165f85f637a083984d14794e194,b0b9d1c90a9cd165f85f637a083984d14794e194,"finagle: Update .travis.yml to disable fast_finish for fewer emails

Problem

There's a bug where if you enable allow_failures and fast_finish you get a bunch
of emails.

Solution

Disable fast_finish to make sure we get fewer emails

JIRA Issues: CSL-8747

Differential Revision: https://phabricator.twitter.biz/D362535"
slyphon,2019-08-27 21:26:19,https://api.github.com/repos/twitter/finagle/git/commits/f27073dce6064cf732032a1e9f3ca02256633679,f27073dce6064cf732032a1e9f3ca02256633679,"finagle-memcached: Move all paritioning-related code under the partitioning package

Problem:

In order to make use of the Ketama related partitioning classes for
other protocols, it will be necessary to move them to a new top-level
finagle package that the memcache and redis protocols can share.

Solution:

Create a new top-level finagle project 'finagle-partitioning' and move all relevant classes to the new module. Update references throughout the codebase.

Result:

The memcache client partitioning classes are all collected under the
c.t.f.m.partitioning package in the finagle-partitioning module.

JIRA Issues: CSL-8740

Differential Revision: https://phabricator.twitter.biz/D359303"
vkostyukov,2019-08-27 20:04:57,https://api.github.com/repos/twitter/finagle/git/commits/368f6acf0476730b24dbc0649bdcfbfcf545fb05,368f6acf0476730b24dbc0649bdcfbfcf545fb05,"finagle-docs: Mention offload CLI flag in the ThreadingModel.rst

Problem

Threading model docs don't mention a CLI flag that enables offloading for the
entire application.

Solution

Mention the flag.

Differential Revision: https://phabricator.twitter.biz/D362314"
yufangong,2019-08-27 18:26:06,https://api.github.com/repos/twitter/finagle/git/commits/aa59815363770061ccd697050765bd83591268e2,aa59815363770061ccd697050765bd83591268e2,"finagle-exp: Concurrency limit tests should avoid test limit

Problem
CLF exports a variable limit which depends on windowed latency and pending
requests.  In our end to end test, we only want to test against dropped request
but leave limit since we can only anticipate the trend but not data points.

Solution
Remove assert limit.

JIRA Issues: CSL-8728

Differential Revision: https://phabricator.twitter.biz/D361181"
lfuTwitter,2019-08-27 03:23:43,https://api.github.com/repos/twitter/finagle/git/commits/f9b76a0f3e861697a13db8fc3bf15026c11f0d13,f9b76a0f3e861697a13db8fc3bf15026c11f0d13,"finagle-base-http: Remove a side effect of c.t.f.http.Message#cookies

Problem

Accessing the `cookies` field of a `Message` may add an empty `Cookie` entry
in its `headerMap`:
```
import com.twitter.finagle.http.Request

val request = Request()
request.headerMap // Map()
request.cookies
request.headerMap // Map(Cookie -> )
```
This behavior is unexpected because `.cookies` should be without any side
effect.

It only happens when the lazy `cookies` field of a `Message` is accessed for
the first time, i.e. during the initialization of a `CookieMap`.

Solution

Call the header resetting logic in `CookieMap#rewriteCookieHeaders` only
when there exist some cookie(s) in the cookie map.

This solution not only resolves the problem above, but also removes the
`Cookie` header of a `Message` whenever its cookie map becomes empty.

JIRA Issues: CSL-8743

Differential Revision: https://phabricator.twitter.biz/D361326"
bryce-anderson,2019-08-27 01:47:36,https://api.github.com/repos/twitter/finagle/git/commits/0a7fefd94211b125514d3315f35a7f6b03edc7fc,0a7fefd94211b125514d3315f35a7f6b03edc7fc,"finagle-http2: Don't cancel HTTP/2 client stream opens

Problem

The Netty `Http2StreamChannelBootstrap` doesn't support cancellation of
the `ChannelFuture` returned from the `.open()` call.

Solution

Don't support cancellation. The operation should only entail registering
the child stream with the event loop so there isn't a lot worth
cancelling, anyway.

JIRA Issues: CSL-8748

Differential Revision: https://phabricator.twitter.biz/D361887"
enbnt,2019-08-27 00:18:09,https://api.github.com/repos/twitter/finagle/git/commits/7f343d876642a03d3c30a1cc1c4fd0893db38bc2,7f343d876642a03d3c30a1cc1c4fd0893db38bc2,"finagle: clarify Response Classifcation doc when using ThriftMux with requests

Problem/Solution

The ResponseClassifier documentation gives an example matching against
Scrooge Request types. This can be misleading, as a match will not
occur if an error happens at the Mux layer. Let's clarify the doc for
now.

JIRA Issues: CSL-8721

Differential Revision: https://phabricator.twitter.biz/D360914"
enbnt,2019-08-26 19:47:47,https://api.github.com/repos/twitter/finagle/git/commits/8af327429dff08c8508798d945d4755aeae01587,8af327429dff08c8508798d945d4755aeae01587,"finagle-http: enable Ping Failure Detection for MultiplexHandler based HTTP/2 clients

Problem

Ping based failure detection is disable for HTTP/2 clients, due to
issues with the `ConnectionHandler` based implementation.

Solution

Remove ping based failure detection from the `ConnectionHandler`
based implementation, but enable for HTTP/2 clients.

Result

`MultiplexHandler` based HTTP/2 clients will have ping failure
detection on by default and the problematic ping failure detection
in the legacy `ConnectionHandler` based implementation will be
removed completely to prevent it from being accidentally re-enabled.

JIRA Issues: CSL-8670

Differential Revision: https://phabricator.twitter.biz/D360712"
kevinoliver,2019-08-26 16:32:55,https://api.github.com/repos/twitter/finagle/git/commits/b2af98f84ac5dac25d733797b093b13ae067ad83,b2af98f84ac5dac25d733797b093b13ae067ad83,"finagle-thrift: Fix support for JDK9+

Problem

`c.t.f.thrift.Protocols.TFinagleBinaryProtocol` has an optimization
that stopped working with JDK 9's compact strings.

Solution

Only use the optimization for JDK 8.

JIRA Issues: CSL-8500

Differential Revision: https://phabricator.twitter.biz/D360682"
martijnhoekstra,2019-08-23 18:40:00,https://api.github.com/repos/twitter/finagle/git/commits/e2c28ddbac8897282b54015b849153e1b7b69992,e2c28ddbac8897282b54015b849153e1b7b69992,"finagle: Migrate scalatest to scalatestplus

Problem

Many deprecated constructs make upgrading difficult

Solution

Update deprecated terms and language constructs

Result

Far fewer deprecation warnings

Signed-off-by: Yufan Gong <yufang@twitter.com>

JIRA Issues: CSL-8736

Differential Revision: https://phabricator.twitter.biz/D360354"
ecoffey,2019-08-23 16:23:02,https://api.github.com/repos/twitter/finagle/git/commits/ae17d3d90b87f53b44431164a64caf37f53aacfe,ae17d3d90b87f53b44431164a64caf37f53aacfe,"finagle-mysql: Adds ServerErrorMonitor to suppress ServerErrors

Problem

Finagle's MonitorFilter bubbles up `com.twitter.finagle.mysql.ServerError` to
the `DefaultMonitor` even if the application is explicitly handling the
ServerError. This causes noisy logging and confusion.

Solution

Introduced a `ServerErrorMonitor` type that, by default, will log a more compact
and helpful message about the ServerError, including instructions on how to
suppress a particular code.

Result

Application users will be able to both explicitly handle different ServerError
code variants, and suppress spurious logging about those errors.

Differential Revision: https://phabricator.twitter.biz/D358706"
enbnt,2019-08-22 18:44:39,https://api.github.com/repos/twitter/finagle/git/commits/001b094077834583dcfeda445876e3d9dea23358,001b094077834583dcfeda445876e3d9dea23358,"finagle: Upgrade to Netty 4.1.39.Final

Problem/Solution

Upgrade to Netty 4.1.39.Final

JIRA Issues: CSL-8681

Differential Revision: https://phabricator.twitter.biz/D355848"
bryce-anderson,2019-08-22 16:23:47,https://api.github.com/repos/twitter/finagle/git/commits/7825077f3ee502349c2c9baad8452e480855ed5b,7825077f3ee502349c2c9baad8452e480855ed5b,"finagle-http2: Fix starvation condition when H2 fails to upgrade

Problem

When we abort the H2C upgrade we switch the Netty pipeline back to the
configured backpressure, typically auto-read off. This may result in the
channel no longer thinking there is a read interest even though the
`ChannelTransport` is awaiting a message, leading to starvation.

Solution

Make sure we signal interest in reading at least one more message.

JIRA Issues: CSL-8686

Differential Revision: https://phabricator.twitter.biz/D359464"
roanta,2019-08-21 17:57:44,https://api.github.com/repos/twitter/finagle/git/commits/84c2082394fb028714b7a365934b3e340be782d3,84c2082394fb028714b7a365934b3e340be782d3,"finagle-docs: improve docs around cancellation and interrupts

Problem / Solution

Our FAQ on the exceptions related to cancellation don't
include the exception types in mux and also don't mention
how to ignore them from a server's perspective. Update them
to do so.

JIRA Issues: CSL-8589

Differential Revision: https://phabricator.twitter.biz/D356889"
bryce-anderson,2019-08-21 16:23:02,https://api.github.com/repos/twitter/finagle/git/commits/9e6f093d3a378e14907bc94f96766ed16bf53018,9e6f093d3a378e14907bc94f96766ed16bf53018,"finagle-http: Remove some dead code

Problem / Solution

We have a dead method in a test that we can delete.

Differential Revision: https://phabricator.twitter.biz/D359387"
bryce-anderson,2019-08-20 20:23:50,https://api.github.com/repos/twitter/finagle/git/commits/d9b30e8a240c79ffe4fa5da32e01084b784b01bc,d9b30e8a240c79ffe4fa5da32e01084b784b01bc,"Remove console formatting

Problem

When we moved the environment variables to the sbt build scripts we
accidentally moved the sbt log formatting variables as well.

Solution

Move them back.

JIRA Issues: CSL-8718

Differential Revision: https://phabricator.twitter.biz/D358876"
ryanoneill,2019-08-19 19:03:48,https://api.github.com/repos/twitter/finagle/git/commits/68cf34b8275d5bde04f7652cc7bc281760207fd2,68cf34b8275d5bde04f7652cc7bc281760207fd2,"finagle-core: Promote Address.ServiceFactory

Problem / Solution

Address.ServiceFactory has been in the 'exp' namespace
for around 3 years now. It's used in a few places, and
could be further utilized for testing clients. Let's
promote it out of 'exp'.

JIRA Issues: CSL-8183

Differential Revision: https://phabricator.twitter.biz/D357122"
bryce-anderson,2019-08-19 15:54:49,https://api.github.com/repos/twitter/finagle/git/commits/70ca711bc193ddbb5801a20ef02dd763416e18e5,70ca711bc193ddbb5801a20ef02dd763416e18e5,"finagle-http2: Migrate to netty Http2MultiplexHandler

Problem

Netty has deprecated the Http2MultiplexCodec in favor of the
Http2MultiplexHandler + Http2FrameCodec.

Solution

Migrate to the new API's.

JIRA Issues: CSL-8635

Differential Revision: https://phabricator.twitter.biz/D352065"
ryanoneill,2019-08-16 23:26:50,https://api.github.com/repos/twitter/finagle/git/commits/acac9c38283d562462eb9456b8121e6ed9855dff,acac9c38283d562462eb9456b8121e6ed9855dff,"finagle-http: Remove Use of Request.response from NotFoundService

Problem / Solution

Use of finagle-http's `Request.response` is deprecated and
highly discouraged. This commit removes the use of
`Request.response` from `NotFoundService`.

JIRA Issues: CSL-8393

Differential Revision: https://phabricator.twitter.biz/D357348"
ryanoneill,2019-08-16 17:00:19,https://api.github.com/repos/twitter/finagle/git/commits/8a40b76ff0fb67b47a5d83824e2e570699eb2427,8a40b76ff0fb67b47a5d83824e2e570699eb2427,"finagle: Remove Use of RunWith Annotation in Tests

Problem / Solution

The `RunWith` annotation is no longer necessary for
running tests in SBT or Pants. Let's remove it for
all Finagle tests.

Differential Revision: https://phabricator.twitter.biz/D357096"
ryanoneill,2019-08-16 01:16:15,https://api.github.com/repos/twitter/finagle/git/commits/d549547322696982585300e4bc1923131e86609a,d549547322696982585300e4bc1923131e86609a,"finagle-http: Remove Use of Request.response from MethodRequiredFilter

Problem / Solution

Use of finagle-http's `Request.response` is deprecated and
highly discouraged. This commit removes the use of
`Request.response` from `MethodRequiredFilter`.

JIRA Issues: CSL-8392

Differential Revision: https://phabricator.twitter.biz/D356967"
jyanJing,2019-08-16 00:04:11,https://api.github.com/repos/twitter/finagle/git/commits/9cd527076ee521b46eaf497785062694734f24d3,9cd527076ee521b46eaf497785062694734f24d3,"finagle-thriftmux: remove checking for remote address in the test

Problem
With JDK 11, we throw a `ChannelClosedException` without remote address being
available

Solution/Result
remove asserting remote address being present in the test

JIRA Issues: CSL-8501

Differential Revision: https://phabricator.twitter.biz/D354919"
ryanoneill,2019-08-15 23:53:50,https://api.github.com/repos/twitter/finagle/git/commits/479b916258c3608d670f67ed1a5e91969610c6ee,479b916258c3608d670f67ed1a5e91969610c6ee,"finagle-http: Remove Use of request.response from HeadFilter

Problem / Solution

Use of finagle-http's `Request.response` is deprecated and
highly discouraged. It is unsafe to assume that the `Response`
returned by a `Service` or a `Filter` will be the `Response`
contained within the `Request`. This commit removes the use
of `Request.response` from `HeadFilter`.

JIRA Issues: CSL-8390

Differential Revision: https://phabricator.twitter.biz/D356930"
hamdiallam,2019-08-15 23:37:09,https://api.github.com/repos/twitter/finagle/git/commits/da689b20a650995637eed2bb927bfc7e9b03c596,da689b20a650995637eed2bb927bfc7e9b03c596,"finagle-stats-core: Move flags into their own file for easier sharing

Problem:

The global statsfilter flags are bound the the finagle-stats-core target

Solution:

Make the flags their own target that can be used by other modules

JIRA Issues: CSL-8628

Differential Revision: https://phabricator.twitter.biz/D356072"
bryce-anderson,2019-08-15 23:12:55,https://api.github.com/repos/twitter/finagle/git/commits/c600878ad5984841388f534a5af09bd3d79e4e3f,c600878ad5984841388f534a5af09bd3d79e4e3f,"finagle-http: Test multiplex client with failed server upgrades

Problem

We don't have test coverage for the H2 multiplex client for the case
where the server doesn't accept the upgrade.

Solution

Abstract the ClientFailHttp2UpgradeTest test around the client and
create both classic and multiplex versions of it.

JIRA Issues: CSL-8692

Differential Revision: https://phabricator.twitter.biz/D356647"
ryanoneill,2019-08-15 21:40:03,https://api.github.com/repos/twitter/finagle/git/commits/cd4877c1f8ab92d48d4ab4d0a0300e672f22898b,cd4877c1f8ab92d48d4ab4d0a0300e672f22898b,"finagle-mysql: Move Connection Phase to Session Acquisition

Problem / Solution

We have added the ability for SSL/TLS to be used with MySQL. To do so
for TLS, the MySQL Connection Phase occurs as part of session acquisition
in the `MysqlTransporter`. This change moves the Connection Phase for plain
text connections there as well.

JIRA Issues: CSL-8683

Differential Revision: https://phabricator.twitter.biz/D355549"
yufangong,2019-08-15 21:02:02,https://api.github.com/repos/twitter/finagle/git/commits/ffd3f462ae3efce74f8ef102f1bf32cdf8d8a7e1,ffd3f462ae3efce74f8ef102f1bf32cdf8d8a7e1,"Twitter-oss: update OSS libraries post-release to 19.9.0

Problem

Update to the next SNAPSHOT version of our Twitter OSS libraries 19.9.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Result

We have only published a patch release for util 19.8.1

JIRA Issues: CSL-8688

Differential Revision: https://phabricator.twitter.biz/D356784"
yufangong,2019-08-15 18:21:05,https://api.github.com/repos/twitter/finagle/git/commits/6c8298d08c18f7d2b87e155659b2c34a485bc47e,6c8298d08c18f7d2b87e155659b2c34a485bc47e,"Twitter-oss: Prepare OSS util for release 19.8.1

Problem

We want to release the next versions of our Twitter OSS util 19.8.1

Solution

Prepare util for their next releases.

Result

We will need to temporarily upgrade all versions for passing build.
But we will only publish util 19.8.1.
post-release will reset all versions back to 19.9.0-SNAPSHOT.

JIRA Issues: CSL-8688

Differential Revision: https://phabricator.twitter.biz/D356166"
bryce-anderson,2019-08-15 16:45:03,https://api.github.com/repos/twitter/finagle/git/commits/3914a2da6da6c6898b73c3b39b9a986ade70ac24,3914a2da6da6c6898b73c3b39b9a986ade70ac24,"Move JVM flags from the sbt script to build.sbt

Problem / Solution

We should be defining the JVM flags as part of the build, not part of
the sbt script, so lets move them.

JIRA Issues: CSL-8245

Differential Revision: https://phabricator.twitter.biz/D354562"
bryce-anderson,2019-08-15 00:04:07,https://api.github.com/repos/twitter/finagle/git/commits/a90c52da1d724f28e20d165e1bc902183cad837e,a90c52da1d724f28e20d165e1bc902183cad837e,"finagle: Add banderson to OWNERS

Problem / Solution

I have been working in Finagle for some time now and have a good
understanding of how the pieces work and fit together. As such, it's
time to add myself as an owner.

Differential Revision: https://phabricator.twitter.biz/D356357"
kevinoliver,2019-08-14 16:43:57,https://api.github.com/repos/twitter/finagle/git/commits/5c0586395a549eef22812502de44ce63fc7eaab6,5c0586395a549eef22812502de44ce63fc7eaab6,"finagle-core: Remove synchronization from CachingPool

Problem

High throughput clients see lock contention in `CachingPool`.

Solution

Change the data structure used into one that does not need
synchronization.

The prior implementation in ``D339657`` had 2 race conditions.  One
was between `pollFirst` and `removeIf`, where `removeIf` could end up
closing a `Service` that was already in use. This was addressed by
adding additional state to the `WrappedService` so that usage would be
exclusive.

The other existed previously, but was less likely to be triggered and
would happen when a transport level read timeout would fall around the
same time as the CachingPool's expiry. This was addressed by running
the expiry task more frequently.

Result

Less contention.

JIRA Issues: CSL-8580

Differential Revision: https://phabricator.twitter.biz/D348769"
enbnt,2019-08-14 04:46:52,https://api.github.com/repos/twitter/finagle/git/commits/d733a32fb321c31f88003e9c87df362ff30ff72e,d733a32fb321c31f88003e9c87df362ff30ff72e,"finagle-http2: rename H2Filter to H2ServerFilter

Problem/Solution

We have introduced an `H2ClientFilter` that is
specific to multiplexed client pipelines. The
`H2Filter` name is ambiguous, so we should
change it to reflect the fact that is only
intended for servers now.

JIRA Issues: CSL-8665

Differential Revision: https://phabricator.twitter.biz/D354649"
luciferous,2019-08-13 13:45:54,https://api.github.com/repos/twitter/finagle/git/commits/a044dafff644182a84c8a42dcfeafabfb4a0c529,a044dafff644182a84c8a42dcfeafabfb4a0c529,"finagle: move flags out of package objects

Problem

Declaring flags inside package objects is problematic because the name
of the flag ends up being not what we expect.

    scala> com.twitter.finagle.thrift.maxReusableBufferSize.name
    res0: String = com.twitter.finagle.thrift.package$maxReusableBufferSize

Solution

Remove all flags from package objects and ensure that they are in the
namespaces (and have the names) that we expect.

Result

    scala> com.twitter.finagle.thrift.maxReusableBufferSize.name
    res0: String = com.twitter.finagle.thrift.maxReusableBufferSize

JIRA Issues: CSL-8267

Differential Revision: https://phabricator.twitter.biz/D353045"
enbnt,2019-08-13 00:49:14,https://api.github.com/repos/twitter/finagle/git/commits/229b1a24ddbda9d108a7615179af1cb8cadb0f2d,229b1a24ddbda9d108a7615179af1cb8cadb0f2d,"finagle-http2: add Ping FailureDetector to Multiplex based clients

Problem/Solution

MultiplexCodec based HTTP/2 clients do not have support for
Ping based failure detection. Let's add it and have pings
handle status in a similar style to Mux.

Note: The FailureDetector.Param is still set to NullConfig
and is not modified as part of this change. Pings will
not be enabled until that is changed.

JIRA Issues: CSL-8250

Differential Revision: https://phabricator.twitter.biz/D352720"
enbnt,2019-08-12 17:39:32,https://api.github.com/repos/twitter/finagle/git/commits/1a94cbac26c72844ec229c71891062570eb40bbe,1a94cbac26c72844ec229c71891062570eb40bbe,"finagle-http2: fix location of H2UriValidatorHandler in pipeline

Problem

The `H2UriValidatorHandler` is essentially dead code, as its
placement in the Netty pipeline results in never seeing
HTTP/2 frames. We were still returning a 400 response, because
the post HTTP/2 -> HTTP/1.1 conversion would enter the
`UriValidatorhandler` before being removed from the pipeline.

Solution

Put the `H2UriValidatorHandler` in a place where it can see
the HTTP/2 frames earlier. Fix the type of response we're
returning and update the tests.

Result

We will eject bad URI paths in a pure HTTP/2 pipeline earlier
and with less overhead.

JIRA Issues: CSL-8638

Differential Revision: https://phabricator.twitter.biz/D353659"
kevinoliver,2019-08-12 17:23:23,https://api.github.com/repos/twitter/finagle/git/commits/38fae80296dbc6316b169f30edb7ee3f7a5ac6cb,38fae80296dbc6316b169f30edb7ee3f7a5ac6cb,"finagle-core: Improve concurrency in NackAdmissionFilter

Problem

Under heavy throughput clients see lock contention in the `Ema` used
by `NackAdmissionFilter`.

Solution

Replace the implementation with a version that trades some loss of
accuracy for less contention.

This tradeoff seems worthwhile, as the assumption is that for updates
that come in at roughly the same time do not have a meaningful effect
on the moving average. This is a result of the math used in the
computation. More details are available in `LossyEma.update`.

This fixes the previous attempt at this in ``D346532``. That was
reverted as it was missing the update to `lastTime` in
`LossyEma.update`.  This patch takes care of that and adds more tests.

Result

No more contention.

JIRA Issues: CSL-8614

Differential Revision: https://phabricator.twitter.biz/D351249"
bryce-anderson,2019-08-12 14:17:28,https://api.github.com/repos/twitter/finagle/git/commits/1968bb99a41c9c6d74ed3c792b047af2cfee7b4d,1968bb99a41c9c6d74ed3c792b047af2cfee7b4d,"finagle-netty4: Remove alpn test from Netty4ClientEngineFactoryTest

Problem / Solution

We have a test in Netty4ClientEngineFactoryTest which expects the JDK
TLS API to not support ALPN. This test is broken for JDK 9+, so lets remove
it as it's on the verge of no longer being relevant and will only cause pain
during the transition period.

JIRA Issues: CSL-8498

Differential Revision: https://phabricator.twitter.biz/D354102"
enbnt,2019-08-06 22:26:42,https://api.github.com/repos/twitter/finagle/git/commits/f6ce45299c2e014c930be01bdc9e30fdf042ea9f,f6ce45299c2e014c930be01bdc9e30fdf042ea9f,"finagle-http: improve performance of StatsFilter

Problem

The `c.t.f.http.filters.StatsFilter` manages
metrics by converting the response status
code to a String on every invocation. There
is no need for doing this on every call.

Solution

Keep references to valid HTTP status code
ranges, where they can be referenced by
the status code's Int value, without
allocating a new String on each request.
Also change the memoization of a specific
status code to be based off of the Int value.

Additionally, the allocation of a `Duration`
is removed by changing how the elapsed time
in milliseconds is determined.

JIRA Issues: CSL-8375

Differential Revision: https://phabricator.twitter.biz/D350733"
dotordogh,2019-08-06 17:25:25,https://api.github.com/repos/twitter/finagle/git/commits/ddbd669d7672712c9d8e37268ed9b94bc22ec766,ddbd669d7672712c9d8e37268ed9b94bc22ec766,"Twitter-oss: update OSS libraries post-release to 19.9.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 19.9.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D351636"
bryce-anderson,2019-08-06 16:11:35,https://api.github.com/repos/twitter/finagle/git/commits/2d588c755bc283a2e2420f6a2be02430c10ed1c3,2d588c755bc283a2e2420f6a2be02430c10ed1c3,"finagle-http2: The MultiplexCodec backed ClientSession should close when streams are exhausted

Problem

We don't currently know what the behavior will be when we exhaust the
stream identifiers available for H2 (the maximum unsigned 31bit
integer).

Solution

Be proactive and declare a H2 session closed once the number of
remaining stream identifiers is less than 50. This will cause the
pooling layer to discard the session.

Differential Revision: https://phabricator.twitter.biz/D351431"
dotordogh,2019-08-05 21:51:10,https://api.github.com/repos/twitter/finagle/git/commits/91a366ca88ba7231eeced7987f3835ff1eb0a0c1,91a366ca88ba7231eeced7987f3835ff1eb0a0c1,"Twitter-oss: Prepare OSS libraries for release 19.8.0

Problem

We want to release the next versions of our Twitter OSS libraries 19.8.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D351288"
bryce-anderson,2019-08-05 20:46:05,https://api.github.com/repos/twitter/finagle/git/commits/4863f23fbd5df339df159327d96fd05cac1023a5,4863f23fbd5df339df159327d96fd05cac1023a5,"finagle-http2: Swich multiplex codec based clients to a better pooling strategy

Problem

We don't have the correct representation of the H2 session in our stack.
Specifically, we treat each stream as a unique session which is
wasteful.

Solution

Develop a dynamic pooling strategy that switches between the singleton
pool or the default pool for the H2 and H1 sessions, respectively.

JIRA Issues: CSL-8437

Differential Revision: https://phabricator.twitter.biz/D346236"
enbnt,2019-08-03 00:12:15,https://api.github.com/repos/twitter/finagle/git/commits/ea4905836e66ff7a2d760ecaf3d65e1d7a5c60bd,ea4905836e66ff7a2d760ecaf3d65e1d7a5c60bd,"finagle: modify travis CI config to no-longer use apt/xmlstarlet

Problem/Solution

Travis CI has been flaky since introducing the use of apt-get
in our setup script. When experimenting, even using Travis'
own dependency management of xmlstarlet, it is flaky. There's
not much we can do, besides not depend on that external
dependency. We'll use some bash instead.

JIRA Issues: CSL-8617

Differential Revision: https://phabricator.twitter.biz/D350791"
mosesn,2019-08-02 15:11:26,https://api.github.com/repos/twitter/finagle/git/commits/2872b7aaedee154b81c22c5110150868d3d261b9,2872b7aaedee154b81c22c5110150868d3d261b9,"finagle-base-http: Change tests to account for DST in jdk9+

Problem

In jdk8, there's a bug where DST isn't always handled properly.  MessageTest
tests that DST isn't handled properly, so it breaks when we start handling it
correctly. https://bugs.openjdk.java.net/browse/JDK-8066982

Solution

Check whether the test is being run on jdk8 or jdk11, and change what the
expected output is as appropriate.

JIRA Issues: CSL-8489

Differential Revision: https://phabricator.twitter.biz/D349914"
vkostyukov,2019-08-02 01:44:16,https://api.github.com/repos/twitter/finagle/git/commits/05b0297535c9c90be9fb34640ada4bdac3368b83,05b0297535c9c90be9fb34640ada4bdac3368b83,"Revert ""finagle-core: Improve concurrency in NackAdmissionFilter""

This reverts commit 1732fd18099105aeed93388b66b5c632d01b55b5.

JIRA Issues: CSL-8614

Differential Revision: https://phabricator.twitter.biz/D350184"
bryce-anderson,2019-08-01 23:03:58,https://api.github.com/repos/twitter/finagle/git/commits/6dc05b64c91696838860f8334450a5d9b1b80420,6dc05b64c91696838860f8334450a5d9b1b80420,"finagle-http2: Introduce some new constructs needed for better H2 pooling

Problem / Solution

We want to have a better representation of pooling in H2 that properly
represents the session as a Service, but we need some additional
tooling. This is part of that tooling.

JIRA Issues: CSL-8437

Differential Revision: https://phabricator.twitter.biz/D349181"
kevinoliver,2019-08-01 16:39:29,https://api.github.com/repos/twitter/finagle/git/commits/e4db25435e0588ca9d382d6b90c3c838fbb11feb,e4db25435e0588ca9d382d6b90c3c838fbb11feb,"finagle-core: Improve concurrency in NackAdmissionFilter

Problem

Under heavy throughput clients see lock contention in the `Ema` used
by `NackAdmissionFilter`.

Solution

Replace the implementation with a version that trades some loss of
accuracy for less contention.

This tradeoff seems worthwhile, as the assumption is that for updates
that come in at roughly the same time do not have a meaningful effect
on the moving average. This is a result of the math used in the
computation. More details are available in `LossyEma.update`.

Result

No more contention.

JIRA Issues: CSL-7980

Differential Revision: https://phabricator.twitter.biz/D346532"
vkostyukov,2019-07-31 23:45:49,https://api.github.com/repos/twitter/finagle/git/commits/e67c2503291123fc15de64712f05224e0f05e700,e67c2503291123fc15de64712f05224e0f05e700,"finagle-core: Clarify that withTranpsort.(read|write)Timeout are for idle connections too

Problem / Solution

Our docs for `withTransport` read-write timeouts could do a better job explaining how
these are handing idle (cached) connections.

JIRA Issues: CSL-8598

Differential Revision: https://phabricator.twitter.biz/D349024"
enbnt,2019-07-31 20:08:48,https://api.github.com/repos/twitter/finagle/git/commits/23532f19a47ac931ca2ba32773b829a630396127,23532f19a47ac931ca2ba32773b829a630396127,"finagle: Upgrade to Netty 4.1.38.Final

Problem/Solution

Upgrade to Netty 4.1.38.Final

JIRA Issues: CSL-8533

Differential Revision: https://phabricator.twitter.biz/D346259"
enbnt,2019-07-30 23:18:12,https://api.github.com/repos/twitter/finagle/git/commits/da4a0a2b87687d4ba2cbc0896ec86fc4ecb979a4,da4a0a2b87687d4ba2cbc0896ec86fc4ecb979a4,"finagle: modify build.sbt file to allow for testing with Netty SNAPSHOT build

Problem

We have a manual process of validating Netty versions post-release. This
results in discovering breakages late in the cycle and can delay moving
to the next release.

Solution

Modify the `build.sbt` file to allow for providing properties to change
the Netty build version. If the build is a SNAPSHOT build, the snapshot
repo will be added to the resolvers.

JIRA Issues: CSL-8566

Differential Revision: https://phabricator.twitter.biz/D346056"
luciferous,2019-07-29 16:23:23,https://api.github.com/repos/twitter/finagle/git/commits/9b30ef9977862332419411737a5f84b3d3f3c12a,9b30ef9977862332419411737a5f84b3d3f3c12a,"Revert ""finagle-core: Remove synchronization from CachingPool""

This reverts `D339657`.

JIRA Issues: CSL-8580

Differential Revision: https://phabricator.twitter.biz/D347518"
bryce-anderson,2019-07-26 19:04:03,https://api.github.com/repos/twitter/finagle/git/commits/4da42333ce7ca3ca33db50c9edd5fa2766abd87a,4da42333ce7ca3ca33db50c9edd5fa2766abd87a,"finagle: Give the anonymous exception in ChannelTransport a name

Problem

We are throwing an anonymous exception in ChannelTransport which can
make it tough to figure out what it is.

Solution

Make it a named exception.

Differential Revision: https://phabricator.twitter.biz/D346929"
tigerlily-he,2019-07-26 00:37:27,https://api.github.com/repos/twitter/finagle/git/commits/3c0a507af7999d2c5d14968d5dc2b4d3385c5291,3c0a507af7999d2c5d14968d5dc2b4d3385c5291,"finagle-exp: concurrency limit filter end to end test

Problem:

Need test that inserts ConcurrencyLimitFilter into stack

Solution/Result:

Adds ConcurrencyEndToEndTest that injects the
ConcurrencyLimitFilter into the stack client. Verifies that stats receiver
collects dropped_request metrics. Checks that dropped_request only counts
requests that were dropped because of concurrency limit overload

JIRA Issues: CSL-8444

Differential Revision: https://phabricator.twitter.biz/D341223"
enbnt,2019-07-26 00:04:44,https://api.github.com/repos/twitter/finagle/git/commits/67c9943df52f84aa6fa363f500c732583007a867,67c9943df52f84aa6fa363f500c732583007a867,"finagle-http: MultiplexCodec H2C and TLS client transports use Http2Transport fast path

Problem

After introducting the SingletonPool method for PriorKnowledge HTTP/2 clients,
the H2C and TLS transports were using the inefficient `HttpTransport` instead
of the `Http2Transport`. Performance when using the MultiplexCodec based client
has degraded severely.

Solution

We ensure that the `Http2Transport` gets used for all `StreamChannelTransport`s.

Result

H2C and TLS performance should return.

JIRA Issues: CSL-8569

Differential Revision: https://phabricator.twitter.biz/D346559"
joybestourous,2019-07-25 19:44:10,https://api.github.com/repos/twitter/finagle/git/commits/f1c4d5890c14e2131d9543f1a5fa6dd59e908306,f1c4d5890c14e2131d9543f1a5fa6dd59e908306,"scrooge-generator: Remove ReqRepThriftServiceBuilder from struct.mustache

Problem:
Scrooge is generating too much unused code. `ReqRepThriftServiceBuilder` has
been deprecated since January 2018.

Solution:
Remove `ReqRepThriftServiceBuilder` from struct template.

Result:
Less scrooge-generated code.

JIRA Issues: CSL-8564

Differential Revision: https://phabricator.twitter.biz/D345740"
yufangong,2019-07-25 18:41:58,https://api.github.com/repos/twitter/finagle/git/commits/464ae7516926d36bcd111266b26c09288648ff16,464ae7516926d36bcd111266b26c09288648ff16,"Update Jackson to 2.9.9

Problem
In order to make util cross building with scala 2.13, we need to move to Jackson
2.9.9 for 2.13 support.

Solution
Upgrade it.

Result
As a bonus, Jackson fixes a bug
https://github.com/FasterXML/jackson-core/issues/531 when feeding async json
parser, remove the `slicedOffset` as now parser records the right position.

Differential Revision: https://phabricator.twitter.biz/D345969"
bryce-anderson,2019-07-24 17:56:57,https://api.github.com/repos/twitter/finagle/git/commits/d79f4dbbcd0e94685e43859de8d5db21a4102800,d79f4dbbcd0e94685e43859de8d5db21a4102800,"finagle-http: Use the singleton pool for multiplexed H2 prior knowledge

Problem

In the case of prior knowledge H2 it's advantageous to use the singleton
pool strategy because we know we have a multiplexed session, just like
in Mux.

Solution

Restructure multiplex codec based, prior-knowledge H2 implementation to
use the SingletonPool strategy.

JIRA Issues: CSL-8526

Differential Revision: https://phabricator.twitter.biz/D344117"
kevinoliver,2019-07-23 23:02:42,https://api.github.com/repos/twitter/finagle/git/commits/616500f16b7c872ff84a9b080d85002ef734255d,616500f16b7c872ff84a9b080d85002ef734255d,"finagle-http: Optimize HttpMuxer.route

Problem

`c.t.f.http.HttpMuxer.route` could be faster.

Solution

Optimize it to avoid allocations and work.

Result

For exact path matches, 45% faster and 0 allocations vs 96 bytes/call.

JIRA Issues: CSL-8520

Differential Revision: https://phabricator.twitter.biz/D344258"
bryce-anderson,2019-07-23 18:25:23,https://api.github.com/repos/twitter/finagle/git/commits/b06fab3edceabb010783c3d5ba86c16bfe3b7067,b06fab3edceabb010783c3d5ba86c16bfe3b7067,"finagle-http2: Handle upgrade events properly in APCH

Problem / Solution

The AdapterProxyChannelHandler is relying on a Netty but that was fixed
sometime between version 4.1.35 and 4.1.37. We're not upgrading to 4.1.37
but we should fix the behavior anyway.

JIRA Issues: CSL-8436

Differential Revision: https://phabricator.twitter.biz/D336428"
kevinoliver,2019-07-22 17:38:58,https://api.github.com/repos/twitter/finagle/git/commits/0ef03b8927fc8a925852a63e95b648077720d9f2,0ef03b8927fc8a925852a63e95b648077720d9f2,"finagle-http: Optimize HttpMuxer.normalize

Problem

`c.t.f.http.HttpMuxer.normalize` is slower than it could be.

Solution

Optimize it.

Result

Significantly faster and far less allocations. The common case when
the path is already normalized is 96% faster and has 0 allocations.

JIRA Issues: CSL-8520

Differential Revision: https://phabricator.twitter.biz/D343261"
bryce-anderson,2019-07-22 14:48:56,https://api.github.com/repos/twitter/finagle/git/commits/4b0493c6842c222cff71e3b4667fc8e958e3220c,4b0493c6842c222cff71e3b4667fc8e958e3220c,"finagle-core: Split the ClientDispatcher.scala file into parts

Problem

We have a lot of different things going on in ClientDispatcher.scala that
don't need to be in the same file.

Solution

Split it into multiple files.

Differential Revision: https://phabricator.twitter.biz/D342883"
dotordogh,2019-07-19 01:54:55,https://api.github.com/repos/twitter/finagle/git/commits/44b11e3456e2623de0ef835fcd76419e3467f6db,44b11e3456e2623de0ef835fcd76419e3467f6db,"Twitter-oss: update OSS libraries post-release to 19.8.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries: 19.8.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D342926"
jyanJing,2019-07-18 19:25:35,https://api.github.com/repos/twitter/finagle/git/commits/e6d1a5f58acdb9804a7b6f701a8317ebad9fab2a,e6d1a5f58acdb9804a7b6f701a8317ebad9fab2a,"finagle: Correct Streaming Metric Name in Doc

Problem
We did not specify the `http` prefix on some streaming metrics in
go/finaglemetrics

Solution
Add the `http` prefix in the metrics description

JIRA Issues: CSL-8508

Differential Revision: https://phabricator.twitter.biz/D342374"
roanta,2019-07-17 18:47:07,https://api.github.com/repos/twitter/finagle/git/commits/7e95d80f3d068080813bd9d7665dff75fba34024,7e95d80f3d068080813bd9d7665dff75fba34024,"Twitter-oss: Prepare OSS libraries for release 19.7.0

Problem

We want to release the next versions of our Twitter OSS libraries 19.7.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D342141"
kevinoliver,2019-07-16 17:22:22,https://api.github.com/repos/twitter/finagle/git/commits/ec00086b065dc6e3882494b219f27b9abd669bd1,ec00086b065dc6e3882494b219f27b9abd669bd1,"finagle-core: Remove synchronization from CachingPool

Problem

High throughput clients see lock contention in `CachingPool`.

Solution

Change the data structure used into one that does not need
synchronization.

JIRA Issues: CSL-7979

Differential Revision: https://phabricator.twitter.biz/D339657"
bryce-anderson,2019-07-15 15:55:12,https://api.github.com/repos/twitter/finagle/git/commits/1338e508dff6517a1801454cdcad95c1a4b94779,1338e508dff6517a1801454cdcad95c1a4b94779,"finagle-http: Move the creation of the endpointer out of the Http object

Problem

The code in the Http.scala file is getting pretty hairy, making it tough
to make changes that may benefit HTTP/2.

Solution

Change the http client implementation configuration to be based on
providing an endpointer instead of transporter oriented tooling and
put this all in a new object, ClientEndpointer.

Differential Revision: https://phabricator.twitter.biz/D337136"
tigerlily-he,2019-07-12 21:02:17,https://api.github.com/repos/twitter/finagle/git/commits/e331491cb7c9013ac0292e1d39b6fd9f16374b99,e331491cb7c9013ac0292e1d39b6fd9f16374b99,"finagle-exp: add ConcurrencyLimitFilter

Problem

Concurrency limits are statically set by users. This leads to great variation
and suboptimal concurrency limits.

Solution

This change adds ConcurrencyLimitFilter. Filter depends on Netflix
concurrency-limits library, which provides algorithms for calculating
concurrency limit based off the round trip time of requests.

Result

The new filter continuously estimates concurrency limit and rejects incoming
requests if the service has reached its concurrency limit.

JIRA Issues: CSL-8302, CSL-8303

Differential Revision: https://phabricator.twitter.biz/D328815"
yufangong,2019-07-12 00:36:00,https://api.github.com/repos/twitter/finagle/git/commits/2d5ab5513855b716d7aadc4db21c0c1fd17816b1,2d5ab5513855b716d7aadc4db21c0c1fd17816b1,"finagle-core: Remove extra comma for sbt compile

Problem/Solution

The trailing comma failed sbt scala 2.11 compile.
Remove it.

Differential Revision: https://phabricator.twitter.biz/D339825"
fwbrasil,2019-07-11 17:27:01,https://api.github.com/repos/twitter/finagle/git/commits/2bd4d61b896d261b3928ce5b6858e7d250e2be39,2bd4d61b896d261b3928ce5b6858e7d250e2be39,"finagle-core: OffloadFilter flag to reduce network contention

**Problem**

We simulated a scenario when the service is close to its redline and profiled it with vtune. One of the top methods is a lock queue used for networking (`queued_spin_lock_slowpath`)

**Solution**

The contention seemed to be due to finagle applications reusing the netty event loop to run application code. Vladimir mentioned the new `OffloadFilter` that was created to deal with applications that do blocking operations and we decided to re-use it to test the hypothesis. The results are promising. After the change to use the offload filter with a fixed thread pool by default, there is a significant reduction in contention

**Notes**

- Looking at the [[ https://t.co/Ls5YZYpX2n?amp=1 | source code ]] of the system call, we noticed that the contention seems to happen when there are concurrent flushes and that the lock happens at the level of the network device. Our theory is that having fewer threads allocated to the event loop reduces the concurrency and makes the mux batching more effective, reducing the rate of flushes. It's possible that applications running with this configuration will become better neighbors when running in a shared aurora host since the lock happens at the network device level.

- Additionally, with this new configuration the netty threads are always available to handle channel events, helping to reduce the latency. Since a channel is always pinned to a specific thread by netty, without the offload filter channels eventually have to wait for the thread to finish executing the application code to have their network events handled.

- I haven't created any tests since the stack parameter is initialized statically. Please let me know if you think of a way to unit test the change.

Differential Revision: https://phabricator.twitter.biz/D331502"
yufangong,2019-07-11 01:07:22,https://api.github.com/repos/twitter/finagle/git/commits/11f4e32cd8e5fcab9fc0de998f3e844f37ab741c,11f4e32cd8e5fcab9fc0de998f3e844f37ab741c,"finagle-http: PayloadSizeFilter now measures streaming messages

Problem

We used to pass by streaming messages (isChunked) in PayloadSizeFilter.

Solution

Fork the filter in HTTP and measure chunked messages. Wrap the reader with an
onRead callback which measures the payload size. Return a request proxy wrapping
the reader we have callback there.

JIRA Issues: CSL-8134

Differential Revision: https://phabricator.twitter.biz/D337877"
luciferous,2019-07-10 22:15:57,https://api.github.com/repos/twitter/finagle/git/commits/bf55a70f1dc1d61dafa16a59d8d5a0c87f10036e,bf55a70f1dc1d61dafa16a59d8d5a0c87f10036e,"util: Default to bypassing scheduler in Future.map

Problem / Solution

Bypassing the scheduler in ConstFuture's map is toggled on (via
c.t.u.BypassScheduler) by default. This has been in production for over
a quarter with minimal issue. Removing the toggle so that we always
bypass the scheduler from now on.

JIRA Issues: CSL-7806

Differential Revision: https://phabricator.twitter.biz/D338487"
bryce-anderson,2019-07-08 18:32:49,https://api.github.com/repos/twitter/finagle/git/commits/568ce69713e6632eca7f96f0b325bd401fc9f7db,568ce69713e6632eca7f96f0b325bd401fc9f7db,"finagle-http2: Stop relying on synthetic connection headers to close h2 client streams

Problem

We use a `Connection: close` header to trigger a stream channel to
close, but this will bubble up to the application.

Solution

Introduce `Http2Transport` that it knows that it's a single-dispatch
construct and manages state accordingly.

JIRA Issues: CSL-7931

Differential Revision: https://phabricator.twitter.biz/D333564"
gpoulin,2019-07-08 15:52:34,https://api.github.com/repos/twitter/finagle/git/commits/5521bc830f792862bb2aa06847f3f8493c673412,5521bc830f792862bb2aa06847f3f8493c673412,"finagle-core: Allow to use SOCKS proxy for localhost

Problem

SOCKS proxy is bypassed when connecting to localhost and there's no way to
override this behaviour. Using a SOCKS proxy when connecting to localhost can be
useful to easily capture communication between local services for debugging.

Solution

Add a flags to enable SOCKS proxy for localhost.

Result

You can now force the use of SOCKS proxy for localhost with
-com.twitter.finagle.socks.socksProxyForLocalhost. Without this flag, the
behaviour of bypassing the SOCKS proxy is kept.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

JIRA Issues: CSL-8450

Differential Revision: https://phabricator.twitter.biz/D337073"
bryce-anderson,2019-07-03 16:13:55,https://api.github.com/repos/twitter/finagle/git/commits/9940f52130eebab533096f374b12254842130af8,9940f52130eebab533096f374b12254842130af8,"finagle-http2: Remove gauges when a H2 client sessions closes

Problem / Solution

We have some H2 client gauges that should be explicitly removed when we
close the session so lets just close them.

Differential Revision: https://phabricator.twitter.biz/D336589"
bryce-anderson,2019-07-02 17:42:28,https://api.github.com/repos/twitter/finagle/git/commits/a626eea5dbceee7726a71b8d60952a7b496de318,a626eea5dbceee7726a71b8d60952a7b496de318,"finagle-core: Make details of SingletonPool private

Problem / Solution

We don't need to leak the state machine of the c.t.f.pool.SingletonPool
so let's make it private.

Differential Revision: https://phabricator.twitter.biz/D335782"
enbnt,2019-07-01 22:52:03,https://api.github.com/repos/twitter/finagle/git/commits/9156f0f82c31b0df689a851712cefcce490aa50f,9156f0f82c31b0df689a851712cefcce490aa50f,"finagle-http: reduce overhead of creating Http Dispatchers

Problem

There is a large overhead in creating new HTTP/2
streams. The Dispatchers that get created
will generate new Loggers and  StatsReceivers,
per instance - in HTTP/2 these are created per
Request/Response stream.

Solution

Move Loggers to companion objects, create and
re-use a single StatsReceiver for client and
server dispatchers, and modify dispatchers to
use a `ExceptionStatsHandler` for rolling up
errors, instead of allocating new scoped
`StatsReceiver`s per instance.

Result

Fewer allocations for all HTTP clients and Servers.

JIRA Issues: CSL-8402

Differential Revision: https://phabricator.twitter.biz/D335114"
bryce-anderson,2019-07-01 16:02:06,https://api.github.com/repos/twitter/finagle/git/commits/fed9e8e584247d9de40b4fad06da9dd3b36fbb16,fed9e8e584247d9de40b4fad06da9dd3b36fbb16,"finagle-http2: MultiplexCodec stream pipelines configure backpressure correctly

Problem

We don't currently support the configured mode of backpressure in H2
stream channels, instead just enabling it regardless of what
configuration the params have.

Solution

Honor the backpressure settings specified in the params in the
MultiplexCodec stream channel bootstrap.

JIRA Issues: CSL-8420

Differential Revision: https://phabricator.twitter.biz/D334268"
crispywalrus,2019-06-28 20:46:04,https://api.github.com/repos/twitter/finagle/git/commits/87218372d0ae81d93c551a0752aec57b3fdaf60d,87218372d0ae81d93c551a0752aec57b3fdaf60d,"finagle-base-http: Add support for new ""b3"" tracing header

Problem

OpenZipkin has created a new set of header to carry
trace information. These headers are not compatible
with the old ones and are needed to interoperate
with services that use the new version of the header.

Solution

If a ""b3"" header exists in the request this extracts
all the new information and populates finagles
tracing header with the existing values.

https://github.com/twitter/finagle/pull/749
Signed-off-by: Ian Bennett <ibennett@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D334419"
ryanoneill,2019-06-27 19:06:38,https://api.github.com/repos/twitter/finagle/git/commits/6e44cc3937c0693cb265b7402b86f1ce0390aea2,6e44cc3937c0693cb265b7402b86f1ce0390aea2,"finagle-core: Remove SslClientEngineFactory.getHostname

Problem

The use of `SslClientEngineFactory.getHostname` is highly discouraged
because it uses the `getHostName` method of the passed in `InetSocketAddress`
if the hostname within the `SslClientConfiguration` is None. The `getHostName`
method of `InetSocketAddress` performs a reverse DNS lookup when provided with
an IP address, which is undesriable.

Solution

Remove `SslClientEngineFactory.getHostname` and encourage folks to use
`SslClientEngineFactory.getHostString` instead.

JIRA Issues: CSL-8416

Differential Revision: https://phabricator.twitter.biz/D334087"
ryanoneill,2019-06-27 15:46:38,https://api.github.com/repos/twitter/finagle/git/commits/54d4acf1918fba9d1711f3591f667fd62fc4e2da,54d4acf1918fba9d1711f3591f667fd62fc4e2da,"finagle-http: Remove Use of request.response from ExceptionFilter

Problem / Solution

Use of 'request.response' within Finagle is an anti-pattern. Let's
remove its use from finagle-http's `ExceptionFilter`.

JIRA Issues: CSL-8391

Differential Revision: https://phabricator.twitter.biz/D333509"
mgodave,2019-06-26 20:07:07,https://api.github.com/repos/twitter/finagle/git/commits/232e36b36bb9d01080847bc507125fa2dc6f7e91,232e36b36bb9d01080847bc507125fa2dc6f7e91,"finagle/twitter-server: Add admin endpoint for info about clients connected to servers

Problem

There is no way to get information about clients currently connected to a
finagle server.

Solution/Result

Add an admin endpoint to list basic information about each client connected, as
well as information about the connection's encryption status, for each listening
server.

JIRA Issues: CSL-8104

Differential Revision: https://phabricator.twitter.biz/D329940"
bryce-anderson,2019-06-26 19:32:26,https://api.github.com/repos/twitter/finagle/git/commits/d094aa5db6409501c440715c6f09ba355b8ca511,d094aa5db6409501c440715c6f09ba355b8ca511,"finagle-core: Explicitly remove some gauges

Problem / Solution

Gauges can be cleaned up by the GC but that can be costly since we
cannot know when a GC cycle will occur. It's better to explicitly remove
them as part of the life cycle of the object we're instrumenting.

Differential Revision: https://phabricator.twitter.biz/D333057"
ryanoneill,2019-06-26 19:01:46,https://api.github.com/repos/twitter/finagle/git/commits/455718a5bec275452d904d09351d10ab0727973a,455718a5bec275452d904d09351d10ab0727973a,"finagle-http: Remove Use of request.response from Cors

Problem / Solution

Use of 'request.response' is an anti-pattern in finagle-http. Let's
remove its use in `com.twitter.finagle.http.Cors`.

JIRA Issues: CSL-8389

Differential Revision: https://phabricator.twitter.biz/D332765"
bryce-anderson,2019-06-25 22:41:48,https://api.github.com/repos/twitter/finagle/git/commits/45e7104d9c5b29d23f305bf3f0b2519bb32f7c4d,45e7104d9c5b29d23f305bf3f0b2519bb32f7c4d,"finagle-thriftmux: Remove dead method

Problem / Solution

We have some dead code in VanillaThriftSession, so lets just get rid of
it.

Differential Revision: https://phabricator.twitter.biz/D333072"
ryanoneill,2019-06-25 21:47:35,https://api.github.com/repos/twitter/finagle/git/commits/45c1e9ce21248ec6436d4d18eac48e428a4b6763,45c1e9ce21248ec6436d4d18eac48e428a4b6763,"finagle-base-http: Remove Use of request.response in DelayedReleaseServiceTest

Problem / Solution

request.response is an anti-pattern. Stop using it in `DelayedReleaseServiceTest`.

JIRA Issues: CSL-8388

Differential Revision: https://phabricator.twitter.biz/D332619"
ryanoneill,2019-06-25 19:23:45,https://api.github.com/repos/twitter/finagle/git/commits/178e0ca9620e6c19b39875d5cc693b0ad22c0eb6,178e0ca9620e6c19b39875d5cc693b0ad22c0eb6,"finagle: Rewrite FlatSpec Tests as FunSuite

Problem / Solution

For Finagle, FunSuite is the recommended testing approach when
using Scalatest. Let's rewrite the tests that are still using
FlatSpec to use FunSuite instead.

JIRA Issues: CSL-8383

Differential Revision: https://phabricator.twitter.biz/D332802"
bryce-anderson,2019-06-24 22:58:45,https://api.github.com/repos/twitter/finagle/git/commits/a2e6c0ba5a1e9381fe7306ae128acca92df16021,a2e6c0ba5a1e9381fe7306ae128acca92df16021,"finagle-http2: Don't honor the Netty x-http2-stream-dependency-id header

Problem

We don't provide an API for discovering stream id's so it's not possible
for the users to set the relative priorities.

Solution

Don't honor the header.

JIRA Issues: CSL-7930

Differential Revision: https://phabricator.twitter.biz/D332191"
ryanoneill,2019-06-24 21:51:55,https://api.github.com/repos/twitter/finagle/git/commits/7ae208df0499b89bc3e632502a36463303172074,7ae208df0499b89bc3e632502a36463303172074,"finagle-core: Remove all ServerBuilder#build deprecated methods

There are multiple 'build' methods on `ServerBuilder` that have
been deprecated for many years. Let's remove them.

JIRA Issues: CSL-8337

Differential Revision: https://phabricator.twitter.biz/D331011"
bryce-anderson,2019-06-24 14:54:58,https://api.github.com/repos/twitter/finagle/git/commits/fb47537e1bdabf28b428da52c89c2470424ce979,fb47537e1bdabf28b428da52c89c2470424ce979,"finagle-http2: Stop generating an unnecessary UnsupportedOperationException

Problem

We are calling `channel.connect` on stream channels in the h2
`ClientSessionImpl` which is an unsupported operation. As such it
generates an exception (which we promptly discard) which is a
performance problem.

Solution

Don't call `connect` for new stream channels.

JIRA Issues: CSL-7994

Differential Revision: https://phabricator.twitter.biz/D332006"
enbnt,2019-06-21 23:52:31,https://api.github.com/repos/twitter/finagle/git/commits/963e9b84153584184fc47c03c32b5cd5feda8bdc,963e9b84153584184fc47c03c32b5cd5feda8bdc,"finagle-core: ensure ClientDispatcher queueSize gauge is removed on transport close

Problem

The `GenSerialClientDispatcher` has a `queueSize` gauge
that gets registered for every instance. The `HttpClientDispatcher`
extends from this class, thus registering this gauge.
For the HTTP/2 implementation, a `HttpClientDispatcher`
is created for every new stream, increasing the number of
registered gauges. As currently implemented, these gauges
will be cleaned up upon GC.

Solution

Be a little more aggressive and remove the registered
gauge on the close of the transport, instead of waiting
for GC.

Result

Less memory pressure from gauges and less overhead
during metrics collection.

JIRA Issues: CSL-8378

Differential Revision: https://phabricator.twitter.biz/D331923"
ryanoneill,2019-06-21 23:08:50,https://api.github.com/repos/twitter/finagle/git/commits/6a462e6b0b1728a2371ff73531c92a2f2336872c,6a462e6b0b1728a2371ff73531c92a2f2336872c,"finagle-http: Stop Using Request.response in Tests

Problem / Solution

Using request.response is considered bad practice, because it
can be incorrect. This is why it was deprecated in 2016. One
day we would like to remove it, so let's remove its use in our
own tests.

JIRA Issues: CSL-8384

Differential Revision: https://phabricator.twitter.biz/D331936"
gregpoulos,2019-06-21 18:07:51,https://api.github.com/repos/twitter/finagle/git/commits/3981fc813e8783ec4e706bec6f5fdee9df83e508,3981fc813e8783ec4e706bec6f5fdee9df83e508,"Ensure read from files as bytes for Python 3-compatibility

Use of the `includecode` directive was causing doc build failures in Python 3. The failures were related to differences in how Python 2 and 3 natively encode strings. The resolution is to enforce opening the file in binary mode within the extension.

JIRA Issues: TECHDOCS-2451

Differential Revision: https://phabricator.twitter.biz/D331358"
ryanoneill,2019-06-20 00:12:15,https://api.github.com/repos/twitter/finagle/git/commits/cda049e7db679f62588eda1a18eadc846acb0b30,cda049e7db679f62588eda1a18eadc846acb0b30,"twitter-oss: Update OSS Libraries Post-Release to 19.7.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries: 19.7.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

JIRA Issues: CSL-8329

Differential Revision: https://phabricator.twitter.biz/D330715"
crispywalrus,2019-06-19 23:45:45,https://api.github.com/repos/twitter/finagle/git/commits/96cb072f1678b45811e3e5d3800b44cc3ea4e441,96cb072f1678b45811e3e5d3800b44cc3ea4e441,"Update PeakEwma.scala

update link to Eckner paper.

Signed-off-by: Yufan Gong <yufang@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D330551"
omerzach,2019-06-19 22:49:05,https://api.github.com/repos/twitter/finagle/git/commits/9dcfa22f5a3fdea2956740b9c360c00aee37df42,9dcfa22f5a3fdea2956740b9c360c00aee37df42,"Change Sigma to Merit in ADOPTERS.md

Sigma is now known as Merit (and is still using Finagle!)
https://www.merits.com/blog/sigma-rebrands-as-merit

Signed-off-by: Yufan Gong <yufang@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D330561"
bryce-anderson,2019-06-19 21:01:50,https://api.github.com/repos/twitter/finagle/git/commits/20b37b0be21b345622ebe48ad1b16fabd58b7f03,20b37b0be21b345622ebe48ad1b16fabd58b7f03,"Remove deprecated methods from c.t.f.http.Response

Remove the deprecated `setStatusCode` and `getStatusCode` methods
from `c.t.f.http.Response`.

JIRA Issues: CSL-7774

Differential Revision: https://phabricator.twitter.biz/D326326"
ryanoneill,2019-06-19 18:43:56,https://api.github.com/repos/twitter/finagle/git/commits/37fa238053546162945dd568d28351d14d70eb8c,37fa238053546162945dd568d28351d14d70eb8c,"finagle-core: Remove a single deprecated method from ServerBuilder

Problem / Solution

It is strongly recommended that folks use `StackServer` and its
derivatives instead of the legacy `ServerBuilder`. Additionally,
we would like to remove `ServerBuilder` at some point in the future.
We can make that task easier by starting to remove methods which
have been deprecated for many years. This commit removes one of the
deprecated build methods.

JIRA Issues: CSL-8337

Differential Revision: https://phabricator.twitter.biz/D330348"
ryanoneill,2019-06-19 03:48:20,https://api.github.com/repos/twitter/finagle/git/commits/afb191ab8eda132197dd2679cd614fc968767fc4,afb191ab8eda132197dd2679cd614fc968767fc4,"twitter-oss: Prepare OSS Libraries for Release 19.6.0

Problem

We want to release the next version of our Twitter OSS libraries 19.6.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next release.

JIRA Issues: CSL-8329

Differential Revision: https://phabricator.twitter.biz/D329712"
vkostyukov,2019-06-19 03:37:43,https://api.github.com/repos/twitter/finagle/git/commits/6c63dc7154cee12ce235f54c68add6a470fdf8ee,6c63dc7154cee12ce235f54c68add6a470fdf8ee,"finagle-doc: ThreadingModel docs clean up

Problem / Solution

Cleaning up Threading Model docs.

JIRA Issues: CSL-8053

Differential Revision: https://phabricator.twitter.biz/D330112"
ryanoneill,2019-06-19 03:19:20,https://api.github.com/repos/twitter/finagle/git/commits/2a53531d8d7d8904934498a8ede8c7bafb867d49,2a53531d8d7d8904934498a8ede8c7bafb867d49,"finagle-core: Remove Unused SSL/TLS Exceptions

Problem / Solution

finagle-core contains two legacy SSL/TLS exceptions which are no longer
used, `SslHandshakeException` and `SslHostVerificationException`. Since
they are no longer used, they should be removed.

JIRA Issues: CSL-8347

Differential Revision: https://phabricator.twitter.biz/D330138"
kevinoliver,2019-06-19 00:40:55,https://api.github.com/repos/twitter/finagle/git/commits/21d0c6659e7a99260375a5f85de0f2e2ed485303,21d0c6659e7a99260375a5f85de0f2e2ed485303,"finagle-core: Fix flakey unit test from StatsFilter change

Problem

The recent change to `StatsFilter` broke a `MethodBuilder` unit test
that was relying on using `Stopwatch.Elapsed`.

Solution

Make this configurable via a `Stack.Param` and use it in the test.

Result

Happy and predictable unit tests.

JIRA Issues: CSL-8343

Differential Revision: https://phabricator.twitter.biz/D330019"
vkostyukov,2019-06-18 23:19:54,https://api.github.com/repos/twitter/finagle/git/commits/aeaa1abaab95b98e4830abd3b14c26c5f94644b6,aeaa1abaab95b98e4830abd3b14c26c5f94644b6,"finagle-docs: Add section about threading model

Problem

There is no documentation about Finagle's threading model.

Solution

Let's add some.

JIRA Issues: CSL-8053

Differential Revision: https://phabricator.twitter.biz/D328368"
ryanoneill,2019-06-18 22:52:40,https://api.github.com/repos/twitter/finagle/git/commits/4c57afda4402cc033a30b7dd35fe4b560250b873,4c57afda4402cc033a30b7dd35fe4b560250b873,"finagle-mysql: Rename 'cap' to 'capabilities'

Problem / Solution

Quite a few folks have been confused by the meaning
of 'cap' within the finagle-mysql code. It is short
for 'capabilities', so use the full word in APIs and
variable names instead.

JIRA Issues: CSL-8008

Differential Revision: https://phabricator.twitter.biz/D329603"
kevinoliver,2019-06-18 22:51:12,https://api.github.com/repos/twitter/finagle/git/commits/411dea2cdc1069335e5ca36bc57d3ce4efbfa693,411dea2cdc1069335e5ca36bc57d3ce4efbfa693,"finagle/scrooge: Generate less classes

Problem

While merging Scrooge PR 310, it was noted that a few things could be
tightened up.

Solution

Remove Scrooge's versions of `ThriftMethodStats` which were generated
per service and instead use the version in
`com.twitter.finagle.thrift`.  Additionally, create a singleton
``ThriftMethodStats.Null` which can be used as a sentinel.

Differential Revision: https://phabricator.twitter.biz/D329764"
kevinoliver,2019-06-18 19:42:46,https://api.github.com/repos/twitter/finagle/git/commits/b3db92dbcdf63bfd3a8eafc61602940059b4d803,b3db92dbcdf63bfd3a8eafc61602940059b4d803,"finagle-core: Avoid Stopwatch.elapsed when possible

Problem

`StatsFilter` and `FailureAccrualPolicy.successRateWithinDuration` use
`Stopwatch.elapsed` for timing. While nice for testing, this allocates
`Durations` when they aren't strictly necessary.

Solution

Use the `() => Long` variants in `Stopwatch` and default to the
`System` backed ones. Allow for tests to use the `Time` backed
versions.

Result

Less allocations.

JIRA Issues: CSL-7971

Differential Revision: https://phabricator.twitter.biz/D328825"
kevinoliver,2019-06-18 18:09:29,https://api.github.com/repos/twitter/finagle/git/commits/be030c24e30f2f967ac14385be2f727fb9cedb91,be030c24e30f2f967ac14385be2f727fb9cedb91,"finagle-base-http: Http1ConnectionManager can do less work

Problem

`c.t.f.http.codec.Http1ConnectionManager.mustCloseOnFinish` uses
`Message.contentLength.isEmpty`. This grabs the Content-Length header
field, and then boxes the value into a `Long` with a call to
`Option.map`.

Solution

As we are only interested in the existence of the header, use
`HeaderMap.contains` instead.

Result

Less allocations.

JIRA Issues: CSL-7970

Differential Revision: https://phabricator.twitter.biz/D329159"
kevinoliver,2019-06-18 17:31:20,https://api.github.com/repos/twitter/finagle/git/commits/260e6e5d0c3c09083c1c14bcc8c75738349c0036,260e6e5d0c3c09083c1c14bcc8c75738349c0036,"finagle-http2: Loggers belong on companion objects

Problem

In general, instances of loggers are singletons, and should live on
the companion object.

Solution

Move a few loggers being instanciated on classes over to their
companion objects.

JIRA Issues: CSL-7924

Differential Revision: https://phabricator.twitter.biz/D329147"
kevinoliver,2019-06-17 21:17:46,https://api.github.com/repos/twitter/finagle/git/commits/5df5d200ed1b96e7add88f95b43a9cf004d79a26,5df5d200ed1b96e7add88f95b43a9cf004d79a26,"finagle-http: Optimize ClientNackFilter

Problem

`ClientNackFilter` runs on all requests and allocates more objects
than necessary.

Solution

Prefer `Future.transform` and use `Future.const` to avoid the creation
of some intermediate objects.

JIRA Issues: CSL-7973

Differential Revision: https://phabricator.twitter.biz/D328792"
jyanJing,2019-06-17 20:26:23,https://api.github.com/repos/twitter/finagle/git/commits/1286c438f98afea8bb918aa793f5e8782936430e,1286c438f98afea8bb918aa793f5e8782936430e,"finagle-http: Remove Deprecated response_size from Finagle Http Stats

Problem
response_size stat is deprecated because it is a duplicate stat of
response_payload_bytes

Solution/Result
Remove deprecated response_size stat

JIRA Issues: CSL-7914

Differential Revision: https://phabricator.twitter.biz/D328254"
ryanoneill,2019-06-14 23:01:17,https://api.github.com/repos/twitter/finagle/git/commits/a995ef8a5925c445797489c46c23950214a0f941,a995ef8a5925c445797489c46c23950214a0f941,"finagle-core: Fix Spelling of Aperture in Logs

Problem / Solution

""Aperture"" was misspelled as ""Apeture"" in some log messages. Let's correct them.

Differential Revision: https://phabricator.twitter.biz/D328644"
ryanoneill,2019-06-14 22:41:31,https://api.github.com/repos/twitter/finagle/git/commits/0b6c20acc22267abe901c606352fb818e6345247,0b6c20acc22267abe901c606352fb818e6345247,"finagle-mysql: Add Support for SSL/TLS

Problem

MySQL contains support for SSL/TLS via messages sent
during the connection phase of the MySQL protocol. However,
finagle-mysql does not support the sending of the messages
in the correct sequence in order to negotiate SSL/TLS.

Solution

Add a `SecureHandshake` which is capable of sending the proper
sequence of messages to negotiate SSL/TLS with MySQL.

JIRA Issues: CSL-7939

Differential Revision: https://phabricator.twitter.biz/D328077"
dotordogh,2019-06-13 23:55:08,https://api.github.com/repos/twitter/finagle/git/commits/99e9dd43332e63eca0e37f08845ac098bf938a06,99e9dd43332e63eca0e37f08845ac098bf938a06,"util-core: Use locals at callback creation for Future's interrupt handler

Problem

Future's interrupt handler was using the raiser's locals which is inconsistent
with other callbacks.

Solution

Add the locals to `Interruptible` and use the captured locals in the handler.
Hide it behind a toggle that is turned off, and eventually have it on by
default.

Result

When toggled on with `com.twitter.util.UseLocalInInterruptible`, the interrupt
handler uses the locals at the time of the callback creation rather than the
raiser's locals.

JIRA Issues: CSL-8234

Differential Revision: https://phabricator.twitter.biz/D324315"
ryanoneill,2019-06-13 23:30:18,https://api.github.com/repos/twitter/finagle/git/commits/9ed8608d73fc4245bf0fe018d68e64ea7d2cc789,9ed8608d73fc4245bf0fe018d68e64ea7d2cc789,"finagle-core: Really Remove Hybrid FailureAccrual Toggle

Problem / Solution

A prior commit removed the use of the toggle, but not the
toggle itself. Let's entirely remove the toggle this time.

Differential Revision: https://phabricator.twitter.biz/D327776"
ryanoneill,2019-06-13 18:29:15,https://api.github.com/repos/twitter/finagle/git/commits/d6e4042fb71a4e41e8ce6025b770a1c0542cf325,d6e4042fb71a4e41e8ce6025b770a1c0542cf325,"finagle-mysql: Split Request and Protocol Messages

Problem

Finagle models `Service`s as a function from a `Request` to a
`Future` of a `Response`. For each particular protocol, this definition
of a `Service` is publicly accessible, and for finagle-mysql it follows.
However, finagle-mysql's `Request` class is a mixture of both protocol
level messages and user run commands. This can make APIs awkward since
`Request` is public, but the protocol level messages should not be. Also
since `Request` is sealed, all the extensions need to be contained within
the `Request` file.

Solution

Extract a higher trait from `Request` named `ProtocolMessage` which has
a sequence number and can be converted to a `Packet`. This allows protocol
level messages to extend that, and not `Request`. This then leaves user
level commands as `Request`s, and allows us to remove the synthetic
`Command.COM_NO_OP` which is intended to work around the fact that protocol
level messages are not commands.

JIRA Issues: CSL-7990

Differential Revision: https://phabricator.twitter.biz/D327554"
kevinoliver,2019-06-13 17:01:17,https://api.github.com/repos/twitter/finagle/git/commits/0b2ec2013741350263540117ada22cdebb8a5a6a,0b2ec2013741350263540117ada22cdebb8a5a6a,"finagle-http2: Disable FrameLoggers by default

Problem

`FrameLoggers` are running by default for clients despite not being
used the overwhelming majority of the time.

Solution

Disable them by default. Service owners can enable them with the
`c.t.f.http2.param.FrameLogging.Enabled` Stack Param. For example:
`Http.client.configured(FrameLogging.Enabled)`.

JIRA Issues: CSL-7976

Differential Revision: https://phabricator.twitter.biz/D326727"
kevinoliver,2019-06-13 16:40:30,https://api.github.com/repos/twitter/finagle/git/commits/6a1e13aac9e5c328a19662f82d28cb2877af4a1f,6a1e13aac9e5c328a19662f82d28cb2877af4a1f,"finagle-base-http: Thread-safety for Request/Response

Problem

`Request` and `Response` have mutable state and can be
modified/accessed across threads. Yet there is no internal correctness
provided for correctly publishing the changes across threads. The JVM
does not guarantee other threads will see the updates.

Solution

Mark the mutable fields as volatile.

Result

Modifications will now be seen across threads.

JIRA Issues: CSL-8287

Differential Revision: https://phabricator.twitter.biz/D326689"
ryanoneill,2019-06-13 00:58:49,https://api.github.com/repos/twitter/finagle/git/commits/6f85c56e99aaf684054379803670580b3fc2c36d,6f85c56e99aaf684054379803670580b3fc2c36d,"finagle-core: Make Hybrid FailureAccrual the Default

Problem

Hybrid failure accrual has been running in production for over a year and
so should be made the default failure accrual policy.

Solution

Remove the toggle for controlling which policy (hybrid, consecutive
failures) acts as the default, and make hybrid the default.

JIRA Issues: CSL-7897

Differential Revision: https://phabricator.twitter.biz/D327394"
ryanoneill,2019-06-12 22:15:42,https://api.github.com/repos/twitter/finagle/git/commits/b6d658e460c5b66c12d8c583f7365a1c8f371b49,b6d658e460c5b66c12d8c583f7365a1c8f371b49,"finagle-mysql: Add sslCalculatedClientCap to HandshakeSettings

Problem / Solution

For the `SslConnectionRequest`, the client capabilities need
to be specified with the `CLIENT_SSL` set. To make this easy, add a
method to `HandshakeSettings` which takes the calculated capabilities
and forces `CLIENT_SSL` to be set.

Differential Revision: https://phabricator.twitter.biz/D327253"
RyanGuthrie,2019-06-12 19:45:14,https://api.github.com/repos/twitter/finagle/git/commits/29cfffe6a0eafb1dd514712fc5294879394c5bf6,29cfffe6a0eafb1dd514712fc5294879394c5bf6,"finagle-mysql: Don't log exceptions if we fail to rollback a transaction and it was a ChannelClosedException

Problem:
If a rollback fails due to a ChannelClosedException, the logs are very
spammy and leads devs triaging issues to falsely blame them.

Solution:
If the rollback fails due to a ChannelClosedException (which happens if the
underlying service has already been closed by a lower-level call), don't log
the exception

Result:
Any rollbacks that fail due to a ChannelClosedExceptions don't log the exception,
but we still poison the connection and try and close it again.

JIRA Issues: CSL-8242

Differential Revision: https://phabricator.twitter.biz/D327111"
ryanoneill,2019-06-12 18:51:37,https://api.github.com/repos/twitter/finagle/git/commits/e50f864c38858d58637af85e62563d5f522195b7,e50f864c38858d58637af85e62563d5f522195b7,"finagle-mysql: Remove ClientSsl from Transporter Params

Problem

If a `finagle-mysql` client desires to use SSL/TLS, a `Transport.ClientSsl`
param will be passed to the `MysqlTransporter`. However, that param cannot
be passed directly to the underlying `Netty4Transporter`, because doing so
will cause SSL/TLS to attempt to be negotiated as part of connection
establishment, instead of waiting until the appropriate point in handshaking.

Solution

Remove the `Transport.ClientSsl` param from the collection of params that are
sent to the underlying `Netty4Transpoter` so that the `SslHandler` is not
added to the Netty pipeline initially.

Result

The `Netty4Transporter` does not attempt to negotiate SSL/TLS as part of
connection establishment, but we still can add it at the right time later.

Differential Revision: https://phabricator.twitter.biz/D326780"
ryanoneill,2019-06-11 23:57:04,https://api.github.com/repos/twitter/finagle/git/commits/aa011be3dcb0721c33e3e4296037d49d3840f16e,aa011be3dcb0721c33e3e4296037d49d3840f16e,"finagle-core: Use ClientConnection for ServerRegistry Connections

Problem / Solution

For servers, we would like to be able to expose whether incoming connections
are using SSL/TLS. So, change the unused `ServerRegistry.connectionRegistry`
to instead store the `ClientConnection` instead of just the remote address,
and also make it accessible by TwitterServer.

JIRA Issues: CSL-8117

Differential Revision: https://phabricator.twitter.biz/D326277"
ryanoneill,2019-06-11 22:33:49,https://api.github.com/repos/twitter/finagle/git/commits/014b2947de79baae6ae8894a0422416d617961ba,014b2947de79baae6ae8894a0422416d617961ba,"finagle-mysql: Use PlainHandshake Directly in ClientDispatcher

Problem

For `finagle-mysql`, handshaking within the `ClientDispatcher` is
considered a legacy path, and will be eventually removed. So, we don't
want to add any new handshaking functionality to that pathway. Therefore,
we should be instantiating `PlainHandshake` directly instead of calling
`Handshake.apply` so that the `ClientDispatcher` is only ever capable of
instantiating plain text sessions.

Solution

Change the use of `Handshake.apply` to `new PlainHandshake` in the
`ClientDispatcher`.

Differential Revision: https://phabricator.twitter.biz/D326705"
kevinoliver,2019-06-11 20:42:04,https://api.github.com/repos/twitter/finagle/git/commits/38b111a204e764edf5df0769d66c0a2270af51d0,38b111a204e764edf5df0769d66c0a2270af51d0,"finagle-base-http: Lazily create RecordSchemas

Problem

`Request` and `Response` implementations eagerly create
`RecordSchemas`. This is paid for regardless of whether or not they
are used.

Solution

Lazily create these as needed which allows those not using this
functionality to not pay for it.

JIRA Issues: CSL-7974

Differential Revision: https://phabricator.twitter.biz/D324865"
kevinoliver,2019-06-11 17:40:21,https://api.github.com/repos/twitter/finagle/git/commits/6bd6cbf91a092eb838fca204cf960c493e166ed0,6bd6cbf91a092eb838fca204cf960c493e166ed0,"finagle-core: Optimize Cache

Problem

`c.t.f.util.Cache.put` was showing up in allocation profiling.

Solution

Optimize away the Options by using separate ArrayDeques. One for
expiry and one for values. Avoid an Option for the TimerTask.

Result

After iteration specific overhead is removed (CacheBenchmark.baseline)
JMH benchmarks show improvements.

- `put` is 10.4% faster, 26.7% less allocations.
- `putThenGet` is 9.6% faster, 25% less allocations
- `putOverTheLimit` is 10.3% faster, 39.5% less allocations

JIRA Issues: CSL-7972

Differential Revision: https://phabricator.twitter.biz/D326050"
kevinoliver,2019-06-11 16:56:09,https://api.github.com/repos/twitter/finagle/git/commits/4e343f0ed41779f791abf644d608386e48922cf8,4e343f0ed41779f791abf644d608386e48922cf8,"finagle-http: `RecordSchema.Record` is now thread-safe

Problem

`c.t.f.http.collection.RecordSchema.Record` is not thread-safe, and
this differs from most other public facing APIs in Finagle.

Solution

Push the thread-safety down into `Record` to prefer correctness. It
is not likely that this code is used in any highly contended manner
across threads.

JIRA Issues: CSL-8270

Differential Revision: https://phabricator.twitter.biz/D325700"
vkostyukov,2019-06-11 01:13:56,https://api.github.com/repos/twitter/finagle/git/commits/40431bb43526efb7450a254e95baf52eda5dc997,40431bb43526efb7450a254e95baf52eda5dc997,"finagle-core: Introduce a way to shift users work off of IO threads

Problem

Finagle is inherently sensitive to application-level code blocking (or running
CPU intensive work on) its IO threads: not being able to make progress in
the IO threads results in degraded system's responsiveness.

Although possible to workaround, shifting all user-defined work off of IO
threads was never built into Finagle.

Solution

For both clients and servers, add first-class support for shifting users work off
of IO threads, into a given `FuturePool` or `ExecutorService`.

JIRA Issues: CSL-7611

Differential Revision: https://phabricator.twitter.biz/D325049"
ryanoneill,2019-06-11 00:30:01,https://api.github.com/repos/twitter/finagle/git/commits/8d602c6e2a00e66e1c61ba91ea21cd02a11bccc6,8d602c6e2a00e66e1c61ba91ea21cd02a11bccc6,"finagle-core: Move TransportClientConnection Out of StdStackServer

Problem / Solution

It would be beneficial for testing if we could pick and choose pieces
of a server and stitch them together without having to build a full on
`StackServer`. This can be done for a client today, but not for a server.
Some necessary functionality is contained directly within the logic for
`StdStackServer`, including the ability to create a
`TransportClientConnection`. Let's extract `TransportClientConnection` so
that it can be used outside.

Differential Revision: https://phabricator.twitter.biz/D325375"
ryanoneill,2019-06-10 23:50:33,https://api.github.com/repos/twitter/finagle/git/commits/8487ff77b9302fa734748619e7b00924fb851986,8487ff77b9302fa734748619e7b00924fb851986,"finagle-mysql: Add Test Certs and Keys

Problem / Solution

We want folks to be able to use SSL/TLS when running MySQL integration tests,
yet there are no instructions nor pre-generated certificates and keys to use
to do so. This commit removes the pre-generated certificates obstacle by
providing pre-generated certificates and keys.

JIRA Issues: CSL-8283

Differential Revision: https://phabricator.twitter.biz/D326168"
yufangong,2019-06-10 21:36:33,https://api.github.com/repos/twitter/finagle/git/commits/f556b973d5679393f4469b6c0b0bb4d16d76ed1d,f556b973d5679393f4469b6c0b0bb4d16d76ed1d,"Revert ""finagle-mysql: Don't try and close a connection that is already closed""

This reverts commit dc4dcd4706a16455b2d0ee59b33cbae34b22c6d8
and Phab https://phabricator.twitter.biz/D322588.

JIRA Issues: CSL-8275

Differential Revision: https://phabricator.twitter.biz/D325988"
kevinoliver,2019-06-10 16:38:37,https://api.github.com/repos/twitter/finagle/git/commits/eee6835546e32ea42d429db626c80e6a864fc9ff,eee6835546e32ea42d429db626c80e6a864fc9ff,"finagle-base-http: Optimize Status.fromCode

Problem

Allocation profiling showed `Status.fromCode` which was surprising, as
it uses cached `Status` objects.

Solution

Use a switch statement.

Result

JMH results:

```
Baseline
Benchmark                                               Mode  Cnt     Score     Error   Units
StatusBenchmark.fromCode_Cached                         avgt    5    14.909 ±   2.700   ns/op
StatusBenchmark.fromCode_Cached:·gc.alloc.rate.norm     avgt    5    32.000 ±   0.001    B/op
StatusBenchmark.fromCode_NotCached                      avgt    5     6.611 ±   0.131   ns/op
StatusBenchmark.fromCode_NotCached:·gc.alloc.rate.norm  avgt    5    32.000 ±   0.001    B/op

Patched
Benchmark                                               Mode  Cnt     Score     Error   Units
StatusBenchmark.fromCode_Cached                         avgt    5     4.338 ±   0.647   ns/op
StatusBenchmark.fromCode_Cached:·gc.alloc.rate.norm     avgt    5    ≈ 10⁻⁷              B/op
StatusBenchmark.fromCode_NotCached                      avgt    5     4.125 ±   0.103   ns/op
StatusBenchmark.fromCode_NotCached:·gc.alloc.rate.norm  avgt    5    16.000 ±   0.001    B/op
```

JIRA Issues: CSL-7975

Differential Revision: https://phabricator.twitter.biz/D324509"
dotordogh,2019-06-10 04:42:20,https://api.github.com/repos/twitter/finagle/git/commits/6f9d7f0d2d362bc0d3555fc9a7f1eca48115ec9c,6f9d7f0d2d362bc0d3555fc9a7f1eca48115ec9c,"finagle-core: Add a Stack Module with 7 parameters

Problem

It can be inconvenient to create a stackable module with seven parameters and
the resulting code is less clear.

Solution

Add a convenience class to construct a stackable module with seven parameters.

Result

An easier way to create a module with seven parameters.

Differential Revision: https://phabricator.twitter.biz/D325382"
ryanoneill,2019-06-06 23:49:28,https://api.github.com/repos/twitter/finagle/git/commits/8d984963d545009f8abd7a155c1ae30054a4ea9a,8d984963d545009f8abd7a155c1ae30054a4ea9a,"finagle-core: UsingSslSessionInfo Fails When Local Certificates are Null

Problem / Solution

`UsingSslSessionInfo` takes in an `SSLSession` and calls the session's
`getLocalCertificates` method to retrieve the collection of local
certificates sent as part of this `SSLSession`. However, that method
can return 'null', and when it does, construction of `UsingSslSessionInfo`
fails. Add a guard which checks for 'null'.

JIRA Issues: CSL-8262

Differential Revision: https://phabricator.twitter.biz/D324499"
luciferous,2019-06-06 23:08:59,https://api.github.com/repos/twitter/finagle/git/commits/a799e2294e2148fae5b37b9c20a8a8bf2b5f4362,a799e2294e2148fae5b37b9c20a8a8bf2b5f4362,"scrooge: Handle Ignorable response class

Problem

Finagle clients and servers generated by scrooge are not handling
Ignorable, a recently added type constructor for ResponseClass.

Solution

Add a case for Ignorable.

JIRA Issues: CSL-8253

Differential Revision: https://phabricator.twitter.biz/D324576"
ryanoneill,2019-06-06 21:10:57,https://api.github.com/repos/twitter/finagle/git/commits/c91bad196824fe4774bd08e59aae1915c9acd2c7,c91bad196824fe4774bd08e59aae1915c9acd2c7,"finagle-core: Stop Using Deprecated Transport Methods

Problem / Solution

`StdStackServer` and `GenSerialClientDispatcher` are using methods from `Transport`
which are marked as deprecated. They should instead be using methods from `TransportContext`
that are not deprecated.

Differential Revision: https://phabricator.twitter.biz/D324610"
ryanoneill,2019-06-06 18:39:10,https://api.github.com/repos/twitter/finagle/git/commits/a661fef4634bdaf4592f50ab8bf11aa5d8b46ff4,a661fef4634bdaf4592f50ab8bf11aa5d8b46ff4,"finagle-http: Properly set Transport.peerCertificate for HTTP/2

Problem

The `ChannelTransportContext` is responsible for retrieving
`SslSessionInfo` from a Netty4 `Channel`. It does so by extracting
the `SslHandler` out of the `ChannelPipeline`, and if it exists, uses
the `SSLEngine` contained within to construct an `SslSessionInfo`
appropriately.

However, when using a Netty multiplexed protocol, such as HTTP/2, the
`Channel` that is processing the request is not the one where we want
to be looking for the `SslHandler`. Instead, that should be in the
parent `Channel`s `ChannelPipeline`.

Solution

Modify the `ChannelTransportContext` to check the current
`Channel` for an `SslHandler`. If found, use it, otherwise check
the `Channel`s parent until one is found, or the chain ends.

JIRA Issues: CSL-8249

Differential Revision: https://phabricator.twitter.biz/D324392"
kevinoliver,2019-06-06 16:43:23,https://api.github.com/repos/twitter/finagle/git/commits/e04b1762940f294cd6aa73bf888216fdaf1910b9,e04b1762940f294cd6aa73bf888216fdaf1910b9,"finagle-core: Optimize PayloadSizeFilter

Problem

`PayloadSizeFilter` is on every request/response path
and could be optimized.

Solution

Avoid some allocations (Integer.toString) and check
if tracing is on.

Result

JMH results:
Without Tracing: 52.3% faster, 51.1% fewer allocations
With Tracing: 8.4% faster, 22.2% fewer allocations

JIRA Issues: CSL-7969

Differential Revision: https://phabricator.twitter.biz/D324167"
ryanoneill,2019-06-05 20:25:02,https://api.github.com/repos/twitter/finagle/git/commits/69a28c1049158cc4fca0250250723aedd27a0cc3,69a28c1049158cc4fca0250250723aedd27a0cc3,"finagle-core: Add SSL/TLS Session Information to ClientConnection

Problem

We would like to be able to export and monitor more information about
whether particular connections are using SSL/TLS, and if so, the
specifics about that connection. For servers, we track connections
based on information contained within the `ClientConnection` class.

Solution

Add `SslSessionInfo` to `ClientConnection` so that server connections
can track whether connections are using SSL/TLS and the specifics
related to a secure connection.

Differential Revision: https://phabricator.twitter.biz/D323305"
glegoux,2019-06-05 18:59:59,https://api.github.com/repos/twitter/finagle/git/commits/03d1ad8bc6de13676d3164484c4448b8936007b5,03d1ad8bc6de13676d3164484c4448b8936007b5,"finagle-core: Fix rate limiter if negative rate or after window

Problem

When rate is negative then request could be executed, and
after one elapsed time windows rate is not well modified.

Solution

Refuse request when rate is negative and reset correctly limit
after one elapsed time windows.

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

https://github.com/twitter/finagle/pull/766

Differential Revision: https://phabricator.twitter.biz/D322952"
kevinoliver,2019-06-04 23:49:31,https://api.github.com/repos/twitter/finagle/git/commits/53901a2838b7164bf6861acfa6752360ae732d6f,53901a2838b7164bf6861acfa6752360ae732d6f,"finagle-zipkin-core: Address race condition in DeadlineSpanMap

Problem

DeadlineSpanMap uses a mutable structure, `MutableSpan`, to buffer up
changes for a given TraceId. It has an async task, `flush`, that runs
periodically and can cause calls to `update` to be dropped.

Solution

Use locking to check when this occurs and if it does, run the update
operation again and immediately run `logSpans` on that.

Result

No more lost updates.

JIRA Issues: CSL-8210

Differential Revision: https://phabricator.twitter.biz/D319367"
luciferous,2019-06-04 18:36:59,https://api.github.com/repos/twitter/finagle/git/commits/256b79b8c9b61144ca63b2d23940597588aeab9e,256b79b8c9b61144ca63b2d23940597588aeab9e,"finagle-core: ResponseClass for ignorable failures

Problem

We want to classify certain outcomes as ignorable for the purposes of
stats, but the ResponseClass facility only knows how to classify
request-response pairs into success or failure.

Ignorable failures are handled ad hoc, by first checking if a failure is
ignorable, and then applying the ResponseClassifier, e.g.:

    case Throw(f: FailureFlags[_]) if f.isIgnorable =>
      // Do nothing.
    case rep =>
      rc.applyOrElse(ReqRep(req, rep), ResponseClassifier.Default) match {
        case ResponseClass.Successful(_) => // Yay!
        case ResponseClass.Failed(_) => // Oh no...
      }

But this means that users cannot specify ignorable outcomes via
a ResponseClassifier.

Solution

Create a third ResponseClass representing failures which are ignorable.
Users can return this class in ResponseClassifiers for outcomes they
want ignored by stats.

Note: We still explicitly do nothing with FailureFlags.Ignorable in
StatsFilter, but now users can map (via custom classifiers) additional
cases to Ignore. The consequence of this is that all Failures currently
ignored by StatsFilter will continue to be ignored.

JIRA Issues: CSL-6989

Differential Revision: https://phabricator.twitter.biz/D316884"
ryanoneill,2019-06-04 17:07:58,https://api.github.com/repos/twitter/finagle/git/commits/0d07d436ef85028546bd3d485ed9e011287f932a,0d07d436ef85028546bd3d485ed9e011287f932a,"finagle-netty4: Add BufCodecPipeline

Problem / Solution

Creating a Finagle protocol based on `Buf` is the most straightforward
way for creating and testing a Finagle protocol. To do so, this generally
requires creating a function capable of manipulating a Netty pipeline to add
`BufCodec` so that `ByteBuf`s can be converted to and from Twitter `Buf`s.
Let's add something which does this generically within Finagle.

Differential Revision: https://phabricator.twitter.biz/D322731"
h-ikio,2019-06-04 17:00:02,https://api.github.com/repos/twitter/finagle/git/commits/6fc2de054ed4090d8b070ab36e92a32e44f60ac7,6fc2de054ed4090d8b070ab36e92a32e44f60ac7,"finagle: Add FOLIO to adopters

Almost all of backend microservices at FOLIO are built using Finagle(Finatra) and communicate using Thrift protocol.

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D322939"
ryanoneill,2019-06-04 16:40:54,https://api.github.com/repos/twitter/finagle/git/commits/a8e9d0a012a184abc2709f64eb5ad487ff44e554,a8e9d0a012a184abc2709f64eb5ad487ff44e554,"finagle-mysql: Move `Handshake` to `PlainHandshake`

Problem

MySQL's `Handshake` needs to be extended to support a `SecureHandshake`, in
addition to supporting the plain handshake.

Solution

Refactor `Handshake` to be an abstract base class which allows for extension
for both `PlainHandshake` and `SecureHandshake`.

Differential Revision: https://phabricator.twitter.biz/D322690"
RyanGuthrie,2019-06-04 15:15:53,https://api.github.com/repos/twitter/finagle/git/commits/020d61ea9b5ae959f18c572fa99dd7a99a5f69c6,020d61ea9b5ae959f18c572fa99dd7a99a5f69c6,"finagle-mysql: Don't try and close a connection that is already closed

Problem:
If a connection is already closed, the RollbackFactory will also attempt
to poison the connection and close it.  This causes alarming spam in the logs.

Solution:
If the rollback fails due to a ChannelClosedException, don't do anything else.

Result:
An already closed connection, that has an attempted rollback, doesn't result
in a log message that says the close() call failed.

JIRA Issues: DINF-1081

Differential Revision: https://phabricator.twitter.biz/D322588"
cacoco,2019-06-03 21:08:14,https://api.github.com/repos/twitter/finagle/git/commits/72851dd79b250b81b6d27b53217e376a59d37648,72851dd79b250b81b6d27b53217e376a59d37648,"twitter-oss: Update CONTRIBUTING docs to include section on sbt script

Problem/Solution

We should add a section about the local `sbt` script that we expect
users to use when building the project.

Differential Revision: https://phabricator.twitter.biz/D322805"
vkostyukov,2019-06-03 17:56:17,https://api.github.com/repos/twitter/finagle/git/commits/ea5b0c7741eef612180255661aa96db9cc12eeb3,ea5b0c7741eef612180255661aa96db9cc12eeb3,"finagle-http2: Disable ping-based failure detector

Problem

There is something funky about how ping-based failure detector is wired in H2 that
it does more harm than good: when/if it kicks in, the client is having a really hard time
to recover. Disabling it and relying on other circuit breakers in the stack instead, makes
client way more stable under a high load.

Solution

Disable ping-based failure detector in H2 until we better understand what's
wrong with it.

JIRA Issues: CSL-8039

Differential Revision: https://phabricator.twitter.biz/D322357"
wiwa,2019-06-03 02:59:07,https://api.github.com/repos/twitter/finagle/git/commits/1e55c2802bc669827f2f473b0174158f565e9e08,1e55c2802bc669827f2f473b0174158f565e9e08,"Workaround for Rsc mixed compile public/private scoping

Problem

In preparation of supporting compilation of finagle with Rsc,
a manual workaround needs to be merged regarding
a public/private scoping inconsistency.

Solution

Remove the ""private"" modifier of PostRequestEvidence.

Result

We will be able to apply an automatic rewrite to the rest of
finatra/http/src/test/scala for Rsc compatiblility.

Differential Revision: https://phabricator.twitter.biz/D322570"
jyanJing,2019-06-01 00:06:39,https://api.github.com/repos/twitter/finagle/git/commits/d9b69bdcce055650d4c5dbb93df6843d1c3d0899,d9b69bdcce055650d4c5dbb93df6843d1c3d0899,"finagle: Add statsFilter for streaming

Problem

The Finagle Http StatsFilter is only enabled with `withHttpStats`, however, we
need all stream related stats to be populated as long as `isChunked` is set to
true in request or response.

Solution

Have a StatsFilter dedicated for stream metrics.

Result

Created a StreamingStatsFilter, moved stream duration metrics from
`http/StatsFilter` to it, added counters for closed streams, total streams, and
stream failures.

Note: We are collecting stream failures metrics in `HttpClientDispatcher` and
`HttpServerDispatcher` as `stream/failures/<exception_name>` and
`stream/failures`. However, we don't distinguish a request stream failure from a
response stream failure. Also, maintaining stats in a dispatcher is expensive as
the stats are initialized for every connection. The plan is to deprecate these
counters after this change is approved.

JIRA Issues: CSL-8041

Differential Revision: https://phabricator.twitter.biz/D315041"
vkostyukov,2019-05-30 22:20:40,https://api.github.com/repos/twitter/finagle/git/commits/f175ceaee369ae331edecb2f4939c8437b7be10e,f175ceaee369ae331edecb2f4939c8437b7be10e,"finagle-mux: Change SharedNegotiationStats init order so it does not throw NPE

Problem / Solution

Make sure the object referenced from a gauge is initialized the moment gauge is created.

JIRA Issues: CSL-8237

Differential Revision: https://phabricator.twitter.biz/D321502"
martinffx,2019-05-29 21:44:15,https://api.github.com/repos/twitter/finagle/git/commits/b78da58ecbb2e9d749de513bf5fa38073d3b49bc,b78da58ecbb2e9d749de513bf5fa38073d3b49bc,"finagle-redis: Add RPOPLPush Command

Problem

In order to implement a reliable queueing mechanism using redis
you need this command.

Solution

Added command to `ListCommands`

Differential Revision: https://phabricator.twitter.biz/D320203"
martinffx,2019-05-29 21:42:57,https://api.github.com/repos/twitter/finagle/git/commits/2042c6ee63d08deb4504ad5bf70bb659c26aa483,2042c6ee63d08deb4504ad5bf70bb659c26aa483,"finagle-redis: Add new SortedSet Commands from redis 5

Problem

I want to use the new SortedSet commands in Redis 5

Solution

Add new Commands to SortedSetCommands

Signed-off-by: Neuman Vong <nvong@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D319714"
ryanoneill,2019-05-29 15:41:25,https://api.github.com/repos/twitter/finagle/git/commits/54b7589b042fb78a5ca643cebe66b1f1112d8a50,54b7589b042fb78a5ca643cebe66b1f1112d8a50,"finagle-core: Remove Extraneous OWNERS Files

Problem / Solution

There are OWNERS files underneath finagle-core which are no longer providing
value due to the current ownership of finagle-core overall. The information in
these OWNERS files is now redundant. Let's remove them and leave the
finagle-core OWNERS file as is.

Differential Revision: https://phabricator.twitter.biz/D320469"
vkostyukov,2019-05-28 23:32:34,https://api.github.com/repos/twitter/finagle/git/commits/824596f0a3064db3369b75b98692df18cd541673,824596f0a3064db3369b75b98692df18cd541673,"finagle-netty4: Include size of thread-local caches in /finagle/netty/pooling/used

Problem

`finagle/netty/pooling/used` gauge doesn't include the direct memory allocated in
thread-local caches, where the majority of allocations are happening anyway.

Solution

Hold thread-local caches accountable for direct memory too.

Differential Revision: https://phabricator.twitter.biz/D320021"
vkostyukov,2019-05-28 21:12:10,https://api.github.com/repos/twitter/finagle/git/commits/edbc71e69cc3645053f530fb6f07e1f189594fbf,edbc71e69cc3645053f530fb6f07e1f189594fbf,"finagle|util: Add vkostyukov as an owner

I gained some understanding of a couple of things in Finagle/Util in the last ~five years.

I feel comfortable to be a top-level owner for those two libraries and want to continue
learning them while helping with review burden.

Differential Revision: https://phabricator.twitter.biz/D319772"
ChrisRomary,2019-05-28 21:03:04,https://api.github.com/repos/twitter/finagle/git/commits/58233cf086324600b9ba4e5d8943223c4db0a42a,58233cf086324600b9ba4e5d8943223c4db0a42a,"finagle-mysql: Close prepared statements when removed from cache

Problem

In a system that uses a high number of prepared statements, but has low
gc,  finagle-mysql would not eagerly close PreparedStatements on the server.
This  could result in the database server running out of PreparedStatements.
finagle-mysql caches PreparedStatements and enforces a limit on the number
of  prepared statements that can be cached at any one time. Releasing
the  PreparedStatement on the database server was only done after
the  PreparedStatement is no longer referenced, and gc occurs.

The need to release PreparedStatements after all references were released was
because `PreparedStatement.apply` within a transaction loses the checkout
semantics guaranteed by the DefaultPool since we replace the factory for a
client with a singleton factory. This is problematic since we can now interleave
`PrepareRequest`s which can subsequently evict `PrepareOk` results we've
returned to the application.

Solution

finagle-mysql now releases PreparedStatements immediately, when ejected from
the  cache.  Introduce an async mutex within `session` (the building block for
`transaction`) which allows the underlying service to be used exclusively until
a call to `close`, matching the semantics in `DefaultPool`.

Result

The maximum number of PreparedStatements open on the database server
is  guaranteed to be # of connections * PreparedStatement cache size.  Only a
single level of nested transactions are supported. Attempting to nest  more than
that will result in an IllegalStateException.  Any support for nested
transactions may be removed at a later time. Use of  nested transactions with
finagle-mysql is discouraged as it is not supported by  MySql and is unlike to
work as the developer expects.

JIRA Issues: CSL-4741

Differential Revision: https://phabricator.twitter.biz/D318568"
vkostyukov,2019-05-28 17:44:17,https://api.github.com/repos/twitter/finagle/git/commits/9447a1ecda81e1f958159f4cc13fce15052ccb44,9447a1ecda81e1f958159f4cc13fce15052ccb44,"finagle-http: Faster QueryParamDecoder

Problem

Decoding URL-encoded strings using Java's standard decoder is too expensive and produces too
much garbage.

Solution

Use freakishly fast Netty 4 `QueryStringDecoder` instead of a standard one.

We already have a dependency on Netty 4 from finagle-base-http and we can immediately
benefit from using their decoder at the cost of very local and private exposure to their API.

Our benchmarks report 2x running time speedup with 30% fewer allocations.

JIRA Issues: CSL-5555

Differential Revision: https://phabricator.twitter.biz/D319817"
ryanoneill,2019-05-24 18:25:12,https://api.github.com/repos/twitter/finagle/git/commits/3a8e5c19c639e1cd4d98b3cba1e82a2a4919cc3a,3a8e5c19c639e1cd4d98b3cba1e82a2a4919cc3a,"finagle-netty4: Do Not Set Auto Read When Using LocalChannel

Problem

Turning off the AUTO_READ channel option causes SSL/TLS to not
work properly when using Finagle with a Netty `LocalChannel`.

Solution

Do not set the AUTO_READ channel option and let it use the default
value instead.

Result

SSL/TLS works in Finagle when using a Netty `LocalChannel`.

JIRA Issues: CSL-8197

Differential Revision: https://phabricator.twitter.biz/D319011"
vkostyukov,2019-05-23 19:48:58,https://api.github.com/repos/twitter/finagle/git/commits/5552605dee16a60ca1792be38da2ef78ae1de055,5552605dee16a60ca1792be38da2ef78ae1de055,"finagle-http: Optimize CookieMap.iterator

Problem

Iterating over a CookieMap is expensive and produces too much garbage.

Solution

While anticipating little-to-no collisions (cookies with the same name), use a simple
linked list as an underlying data structure. This makes CookieMap iteration as cheap
as a list traversal.

Our benchmarks report 4x speedup compared to the previous implementation.

JIRA Issues: CSL-8160

Differential Revision: https://phabricator.twitter.biz/D318101"
vkostyukov,2019-05-22 23:45:54,https://api.github.com/repos/twitter/finagle/git/commits/4127cf6df7c91d43fcac9a3d7f6cf827815faebc,4127cf6df7c91d43fcac9a3d7f6cf827815faebc,"finagle-http: Introduce CookieMap add/remove methods that don't rewrite headers

Problem

Finagle's `CookieMap` is surprisingly defensive of its underlying headers (COOKIE or SET_COOKE)
in a sense that it's eagerly trying to keep its own content in sync with what's in the message header.

This strategy is terribly inefficient when users need to manipulate with cookies in bulk, removing or
adding multiple items at once.

Solution

To accommodate use cases requiring adding/removing multiple cookies, we're adding two new API
variants, `addAll` and `removeAll` to allow users ""batch"" multiple changes behind a single header
rewrite.

JIRA Issues: CSL-8160

Differential Revision: https://phabricator.twitter.biz/D318013"
slyphon,2019-05-21 21:44:28,https://api.github.com/repos/twitter/finagle/git/commits/19c676363939bfbe0dd5f084ca8a6c25f2c11c75,19c676363939bfbe0dd5f084ca8a6c25f2c11c75,"[finagle-thrift] Add the trace_id_high field to Span.

Problem:

Zipkin can use a 128b ID. It does this by adding a second 64b id to each span.
This was included in the `RequestHeader` struct, but not in the `Span` struct.

Solution:

Add the missing field to the `Span` struct.

Result:

The `Span` struct now has an optional `trace_id_high` field.

JIRA Issues: CSL-8204

Differential Revision: https://phabricator.twitter.biz/D317847"
enbnt,2019-05-21 20:10:14,https://api.github.com/repos/twitter/finagle/git/commits/9ffbf7a74e53330672e45fd58baf07b623cc8348,9ffbf7a74e53330672e45fd58baf07b623cc8348,"finagle: upgrade to Netty 4.1.35.Final and netty-tcnative 2.0.25.Final

Problem/Solution

Upgrade Netty to 4.1.35.Final and netty-tcnative to 2.0.25.Final
and change `c.t.f.netty4.http.handler.FixedLengthMessageAggregator` to leverage
the Netty `isStartMessage` change (https://github.com/netty/netty/pull/8793).

JIRA Issues: CSL-7908

Differential Revision: https://phabricator.twitter.biz/D312439"
ryanoneill,2019-05-21 19:00:36,https://api.github.com/repos/twitter/finagle/git/commits/f1f976725eb875f3aa82e9a92f6847aa277d2f95,f1f976725eb875f3aa82e9a92f6847aa277d2f95,"twitter-oss: Update OSS libraries post-release to 19.6.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 19.6.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D317825"
ryanoneill,2019-05-21 00:30:23,https://api.github.com/repos/twitter/finagle/git/commits/21b8a8b3eeca571eedc7094df53d5eb806856b61,21b8a8b3eeca571eedc7094df53d5eb806856b61,"twitter-oss: Prepare OSS libraries for point release 19.5.1

Problem

We want to release a point release version of our Twitter OSS libraries 19.5.1
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libaries for their point release.

Differential Revision: https://phabricator.twitter.biz/D317491"
vkostyukov,2019-05-20 18:29:17,https://api.github.com/repos/twitter/finagle/git/commits/9673c45943ed7efc95e11cbe1b0579e666328d43,9673c45943ed7efc95e11cbe1b0579e666328d43,"csl: Post-release CSL libraries 19.6.0-SNAPSHOT

The release is done. Move to the next version.

JIRA Issues: CSL-8130

Differential Revision: https://phabricator.twitter.biz/D316720"
kevinoliver,2019-05-20 17:08:59,https://api.github.com/repos/twitter/finagle/git/commits/439cde5c67bd548e9b34f465ee8755c7185ee5c0,439cde5c67bd548e9b34f465ee8755c7185ee5c0,"finagle-core: Fix logic for Aperture.dapertureActive

Problem

`Aperture.dapertureActive` does not include a check for whether or not
a `ProcessCoordinate` is defined. As such, the result of
`dapertureActive` is not accurate.

`D303833` caused a regression as a result of this for services without
a coordinate.  The load band would no longer change offered size and
thus be fixed.

Solution

Include the `ProcessCoordinate` check in `dapertureActive`.

Result

This allows `LoadBand` to have the correct check, allowing the load
band to expand properly when there isn't a `ProcessCoordinate`.

JIRA Issues: CSL-8078

Differential Revision: https://phabricator.twitter.biz/D315028"
vkostyukov,2019-05-17 18:23:01,https://api.github.com/repos/twitter/finagle/git/commits/09c125a3a67f302a3e8d01a9fd4fa711db8a434b,09c125a3a67f302a3e8d01a9fd4fa711db8a434b,"csl: Release CSL libraries 19.5

It's a release day. Let's cut a May release.

JIRA Issues: CSL-8130

Differential Revision: https://phabricator.twitter.biz/D315909"
enbnt,2019-05-16 21:37:23,https://api.github.com/repos/twitter/finagle/git/commits/a7dae7ea84f828313cdf37cabf2b792435661ec7,a7dae7ea84f828313cdf37cabf2b792435661ec7,"finagle-http: ensure server returns 400 with non-ascii characters in URL

Problem

HTTP requests that contain invalid (non-ascii) characters in the URI are not
consistently handled between HTTP/1.1 and HTTP/2 servers.

Solution

Add filtering earlier in the Netty pipeline that will ensure that HTTP requests
containing invalid characters are rejected with a `400 Bad Request` response.

Result

Finagle HTTP servers will more consistently handle requests containing
invalid characters, regardless of HTTP version.

JIRA Issues: CSL-8018

Differential Revision: https://phabricator.twitter.biz/D312009"
ryanoneill,2019-05-16 18:19:23,https://api.github.com/repos/twitter/finagle/git/commits/8b92e57ddf7a1a83d31538492a52ba348b02e08a,8b92e57ddf7a1a83d31538492a52ba348b02e08a,"finagle-netty4: Make Client and Server Components Work with LocalAddress

Problem / Solution

Netty's `LocalChannel` is a great avenue for being able to test `Channel` and
`ChannelPipeline` related functionality without requiring full on sockets. It
sits in the spot between an `EmbeddedChannel` and a full on `Channel`. Let's
extend Finagle's `ConnectionBuilder` and `ListeningServerBuilder` to support it
via a Netty `LocalAddress`.

JIRA Issues: CSL-8038

Differential Revision: https://phabricator.twitter.biz/D315320"
ryanoneill,2019-05-16 18:15:26,https://api.github.com/repos/twitter/finagle/git/commits/77a3cdfd17695e814d9263cff3ad888ab4646a59,77a3cdfd17695e814d9263cff3ad888ab4646a59,"finagle-core: Prefer `SocketAddress` to `InetSocketAddress`

Problem / Solution

`EndpointerModule` and `PushStackClient` use `java.net.InetSocketAddress` in
public APIs when using the abstract `java.net.SocketAddress` works just as
well. Being able to use the abstract definition gives us some added
flexibility when testing Finagle client and server components and stacks. Let's
change these APIs to use `java.net.SocketAddress` instead.

JIRA Issues: CSL-8159

Differential Revision: https://phabricator.twitter.biz/D315111"
ryanoneill,2019-05-16 17:37:39,https://api.github.com/repos/twitter/finagle/git/commits/30c7c5a3a987304b7a701d43a3c2fbcc22d45d6a,30c7c5a3a987304b7a701d43a3c2fbcc22d45d6a,"finagle: Add ryano to OWNERS

Problem / Solution

I have made numerous changes to the core components and protocols of Finagle,
and rewritten entire sections. I thoroughly understand how all the pieces fit
together at this point, and already am an owner of most of them. It's time to
add myself as a top level owner.

Differential Revision: https://phabricator.twitter.biz/D315494"
mosesn,2019-05-16 17:24:50,https://api.github.com/repos/twitter/finagle/git/commits/bd4ef5039cba94d39e694ef8e91a3f07f793f0c7,bd4ef5039cba94d39e694ef8e91a3f07f793f0c7,"finagle: Removed vestigial deps on commons-lang in build.sbt

Problem

We removed the references to commons-lang, but didn't actually remove the dep
from our build.sbt files.

Solution

Remove 'em!

Differential Revision: https://phabricator.twitter.biz/D315631"
cacoco,2019-05-16 17:10:26,https://api.github.com/repos/twitter/finagle/git/commits/90d5bcbfe87809f27bb24e2c4b4f9e3490b0d519,90d5bcbfe87809f27bb24e2c4b4f9e3490b0d519,"Update to Jackson 2.9.8

Problem/Solution

Update Jackson dependencies to version `2.9.8`.

JIRA Issues: CSL-7986

Differential Revision: https://phabricator.twitter.biz/D304193"
vkostyukov,2019-05-15 21:35:40,https://api.github.com/repos/twitter/finagle/git/commits/2ab13f9e4e3b979e8a70f571110669d0b606498b,2ab13f9e4e3b979e8a70f571110669d0b606498b,"finagle-http: Faster keys iteration in DefaultHeaderMap

Problem

Standard HashMap implementations for `keySet` is fairly efficient but in order to leverage it,
we need to provide a correct implementation of `keysIterator`.

What's challenging is by contract `keysIterator` returns unique header names (no duplicates).

Solution

Implement a new iterator for `Headers` that traverses over unique header names without
bouncing through several interim representations.

JIRA Issues: CSL-8137

Differential Revision: https://phabricator.twitter.biz/D313973"
ryanoneill,2019-05-15 18:38:50,https://api.github.com/repos/twitter/finagle/git/commits/5eb3ae242289b074771deef2bd574636959e4d56,5eb3ae242289b074771deef2bd574636959e4d56,"finagle-http: Remove Misleading MaxRequest/MaxResponse Size Methods

Problem

The `MaxRequestSize` param within Finagle HTTP is applicable to Finagle
HTTP servers only. The `MaxResponseSize` param is applicable to Finagle
HTTP clients only. It is incorrect and misleading to have a
`client.withMaxRequestSize(size)` method and a
`server.withMaxResponseSize(size)` method, since while they change the
underlying `Stack` params for that client or server, changing that `Stack`
param for that particular side has no effect.

Solution

Remove the `client.withMaxRequestSize(size)` and
`server.withMaxResponseSize(size)` methods, and more clearly document the
underlying params to indicate that `MaxRequestSize` is for HTTP servers only,
and `MaxResponseSize` is for HTTP clients only.

JIRA Issues: CSL-8121

Differential Revision: https://phabricator.twitter.biz/D314019"
vkostyukov,2019-05-14 23:43:15,https://api.github.com/repos/twitter/finagle/git/commits/d48c02f4bd1691de6c50e3cc394420393a1fd257,d48c02f4bd1691de6c50e3cc394420393a1fd257,"finagle-mux: Share SSL and framing stats between multiple connections

Problem / Solution

This is a follow up for our previous attempt to share stats between server's connections.
Now shared stats are created with `Server` and `Client` objects and additionally include
TLS/SSL upgrade counters.

JIRA Issues: CSL-7148

Differential Revision: https://phabricator.twitter.biz/D309556"
slyphon,2019-05-13 18:16:13,https://api.github.com/repos/twitter/finagle/git/commits/6ccb74d7b60f0ad59978b7952d32b299d6956bda,6ccb74d7b60f0ad59978b7952d32b299d6956bda,"finagle-core: Expose the TraceId context Key

Problem

We use pub/sub libraries for many purposes here. Unfortunately, when a
traced request ends at a publisher, there is no way to relate that trace
to the subscriber that picks up the event. In order to accomplish that,
we'd need to be able to serialize the current trace context along with
the event payload, then deserialize it at the subscriber and set the
appropriate context for the request. To do that, we need access to the
`Context.broadcast.Key[T]` instance that finagle uses to serialize the
context.

Solution

This change exposes that Key by renaming `idCtx` to `TraceIdContext` on the
`c.t.f.tracing.Trace` object and making it `private[twitter]`.

Result

The `Context.broadcast.Key[TraceId]` is now accessible to things in the
`com.twitter` package.

JIRA Issues: IOP-386

Differential Revision: https://phabricator.twitter.biz/D313547"
yufangong,2019-05-10 20:01:33,https://api.github.com/repos/twitter/finagle/git/commits/88eeb155d844876f8eaab7896af8b3b8cf4d1af3,88eeb155d844876f8eaab7896af8b3b8cf4d1af3,"finagle-thrift: Update scaladoc for TProtocolFactory params

Problem/Solution

Update scaladoc to indicate both stringLengthLimit and containerLengthLimit are
two different params need to be set separately.

JIRA Issues: CSL-7966

Differential Revision: https://phabricator.twitter.biz/D311541"
mgodave,2019-05-09 17:48:39,https://api.github.com/repos/twitter/finagle/git/commits/b17575c44f82e8c9556f2b12cfa33aca45515813,b17575c44f82e8c9556f2b12cfa33aca45515813,"finagle: display svg files correctly in rst docs

Problem

SVG images don't display in finagle docs, instead the actual rst directive is
shown in it's place.

Solution

Include SVG images using the raw html directive.

Result

SVG images are now displayed inline.

JIRA Issues: CSL-7987

Differential Revision: https://phabricator.twitter.biz/D312399"
ryanoneill,2019-05-08 21:55:14,https://api.github.com/repos/twitter/finagle/git/commits/4f67f2ff9e3edf89d886f2e5f25fc234d25937a3,4f67f2ff9e3edf89d886f2e5f25fc234d25937a3,"all: Audit gitignore Contents

Problem / Solution

Our open source project gitignore files have accumulated quite a bit of
cruft. Let's unify them, remove no longer necessary entries, and call
out project specific items.

JIRA Issues: CSL-7911

Differential Revision: https://phabricator.twitter.biz/D311962"
vkostyukov,2019-05-06 19:52:57,https://api.github.com/repos/twitter/finagle/git/commits/7004aa80df253f01b5cbfc646ef86e272058652f,7004aa80df253f01b5cbfc646ef86e272058652f,"finagle-mux: Create orphaned_tdiscard counter on demand in ServerTracker

Problem

Creating a stat per server connection could be costly for servers handling tens of thousands of connections.

Mux's ServerTracker's `orphaned_tdiscard` counter seems to be incremented very rarely under normal
operations yet allocated and held for each connection.

Solution

Allocate a counter on-demand, only when the exceptional condition is met.

JIRA Issues: CSL-7148

Differential Revision: https://phabricator.twitter.biz/D309994"
ryanoneill,2019-05-06 18:55:01,https://api.github.com/repos/twitter/finagle/git/commits/8138a3f7cda166fa5c3cc2491488400aaa661b46,8138a3f7cda166fa5c3cc2491488400aaa661b46,"scrooge-generator: Provide Implementation for ServicePerEndpoint.filtered

Problem / Solution

Classes which extend `ServicePerEndpoint` are not provided with a working
implementation of its `filtered` method. This can be confusing for users
who attempt to apply a TypeAgnostic filter and find that it does't work
without overriding the `filtered` method to provide a concrete implementation.
Compounding the problem is that using `ServicePerEndpoint.apply` does return
an instance with a working `filtered` method. So, let's delegate the
implementation of the extension to the companion object.

JIRA Issues: CSL-8042

Differential Revision: https://phabricator.twitter.biz/D309920"
mosesn,2019-05-06 18:39:46,https://api.github.com/repos/twitter/finagle/git/commits/ec0953f12acd85485994c009c4a349caf776f268,ec0953f12acd85485994c009c4a349caf776f268,"finatra-http: Get rid of MediaType

Problem

MediaType is one of our last guava dependencies, so we'll be able to start
removing guava once we can get rid of it.

Solution

Replace MediaType with a String everywhere the finatra API requires a MediaType,
and rely on method in finagle's MediaType to check equality for media types and
handle utf8 charsets.

JIRA Issues: CSL-5672

Differential Revision: https://phabricator.twitter.biz/D308761"
vkostyukov,2019-05-03 01:05:20,https://api.github.com/repos/twitter/finagle/git/commits/29948ea60cacc865c55814fc3741a7d058553ac5,29948ea60cacc865c55814fc3741a7d058553ac5,"finagle-core: Clarify that session pool settings are per-host

Problem / Solution

Session pooling docs could be more explicit about being applied per-host and not per-client.

JIRA Issues: CSL-7758

Differential Revision: https://phabricator.twitter.biz/D308564"
kevinoliver,2019-05-01 23:29:43,https://api.github.com/repos/twitter/finagle/git/commits/ee9cb4ec2c17b810354b36ff97816fc97efb6394,ee9cb4ec2c17b810354b36ff97816fc97efb6394,"finagle-core: Disable request logging by default

Problem / Solution

The cost of request logging, even when not being used,
outweighs the cost of having it on by default.

Result

Service owners can manually enable it using the `RequestLogger`
Stack param.

JIRA Issues: CSL-7729

Differential Revision: https://phabricator.twitter.biz/D308476"
vkostyukov,2019-04-30 03:17:41,https://api.github.com/repos/twitter/finagle/git/commits/872be5f2b147fa50351bdbf08b003a26745e1df8,872be5f2b147fa50351bdbf08b003a26745e1df8,"finagle-http2: Stop leaking connections in priorknowledge clients

Problem

Prior-knowledge H2 clients have a race condition that enables connection leak under a high
contention.

Solution

Fix race condition and stop leaking connection in H2 clients with prior-knowledge enabled.

JIRA Issues: CSL-8035

Differential Revision: https://phabricator.twitter.biz/D306859"
enbnt,2019-04-29 21:32:26,https://api.github.com/repos/twitter/finagle/git/commits/a7684d4f7b8fc8731916540f0cfb331d5b53a4b4,a7684d4f7b8fc8731916540f0cfb331d5b53a4b4,"finagle-mux: make OpportunisticTls.Level enum values sequence accessible

Problem
The `OpportunisticTls.Level` definitions are treated as an enum type, but
are not enumerable.

Solution
Expose the `OpportunisticTls.Level` values as a sequence.

JIRA Issues: CSL-8021

Differential Revision: https://phabricator.twitter.biz/D305771"
vkostyukov,2019-04-26 02:38:32,https://api.github.com/repos/twitter/finagle/git/commits/08aaae65beb4eb01f54e50403db6f3f7a2b4481e,08aaae65beb4eb01f54e50403db6f3f7a2b4481e,"finagle-mux: Remove unused onClose argument from FragmentDecoder

Problem / Solution

It's no longer used.

Differential Revision: https://phabricator.twitter.biz/D306114"
vkostyukov,2019-04-25 21:26:10,https://api.github.com/repos/twitter/finagle/git/commits/ff1985383239b537294eae703556d0762b454049,ff1985383239b537294eae703556d0762b454049,"finagle-mux: Share per-connection stats between connections

Problem

Per-connection cumulative stats (gauges) could be very costly for servers operating under
a high concurrency (tens of thousands of connections). Although we're already handling
such stats properly in most of the cases via introducing a specialized shared stats holder,
Mux's framer stats (2 gauges) are plain vanilla gauges.

Solution

Similar to `SharedChannelStats`, introduce `FramerStats` and share them between connections.

JIRA Issues: CSL-7170, CSL-7149, SNOWFLAKE-171, CSL-7148

Differential Revision: https://phabricator.twitter.biz/D305624"
vkostyukov,2019-04-24 22:44:28,https://api.github.com/repos/twitter/finagle/git/commits/0d7881a2fe547cc046ad137ca4a45f94c7db3131,0d7881a2fe547cc046ad137ca4a45f94c7db3131,"finagle-stats: Add flag c.t.f.stats.verbose to allowlist debug metrics via CLI

Problem

There is no way to supply `verbose` allow-list via a CLI flag although many users prefer this
way for simplicity.

Solution

Add a new global flag, `c.t.finagle.stats.verbose` that has a lower-priority compared to the
same tunable.

JIRA Issues: CSL-8002

Differential Revision: https://phabricator.twitter.biz/D304615"
yufangong,2019-04-24 18:55:40,https://api.github.com/repos/twitter/finagle/git/commits/a2888032db21454366e2bcf1202e672e6b0a33da,a2888032db21454366e2bcf1202e672e6b0a33da,"finagle: Add test command in CONTRIBUTING.md

Problem/Solution

This is brought up here
https://github.com/twitter/finagle/pull/763#issuecomment-482652508.

Differential Revision: https://phabricator.twitter.biz/D303302"
ryanoneill,2019-04-24 00:09:18,https://api.github.com/repos/twitter/finagle/git/commits/f0ab09a6504925893e82400d10531817e6dd9d01,f0ab09a6504925893e82400d10531817e6dd9d01,"finagle-mysql: Split HandshakeResponse into Plain and Secure Versions

Problem / Solution

The connection phase of establishing a MySQL session follows a slightly
different path when using encryption instead of plain text. When using
a plain handshake, the handshake response is sent immediately after
receiving the initial handshake from the server. When using a secure
handshake, the handshake response isn't sent until after an ssl connection
request is sent and SSL/TLS has been negotiated. That means that the
handshake response ends up with a different sequence number. To simplify
workflows, we split the `HandshakeResponse` into `PlainHandshakeResponse`
and `SecureHandshakeResponse`.

JIRA Issues: CSL-7989

Differential Revision: https://phabricator.twitter.biz/D304512"
kevinoliver,2019-04-23 00:40:58,https://api.github.com/repos/twitter/finagle/git/commits/e12780603b1c4170c333288b5184ced542d1b062,e12780603b1c4170c333288b5184ced542d1b062,"finagle-core: Optimize SpanId.toString

Problem

`SpanId.toString` is a commonly called method. Ideally it would be
faster and allocate less.

Solution

Use a thread local to avoid some allocations and speed things up.

Result

42% faster and 48% less allocations.

JMH:
Baseline:
Benchmark                                                  Mode  Cnt     Score     Error   Units
SpanIdBenchmark.toString                                   avgt    5    64.179 ±  11.201   ns/op
SpanIdBenchmark.toString:·gc.alloc.rate.norm               avgt    5   144.000 ±   0.001    B/op

Patched:
Benchmark                                                  Mode  Cnt     Score     Error   Units
SpanIdBenchmark.toString                                   avgt    3    36.933 ±   1.379   ns/op
SpanIdBenchmark.toString:·gc.alloc.rate.norm               avgt    3    74.867 ±   0.183    B/op

JIRA Issues: CSL-7978

Differential Revision: https://phabricator.twitter.biz/D303767"
kevinoliver,2019-04-23 00:34:38,https://api.github.com/repos/twitter/finagle/git/commits/20029ac5437dba59eb580398cbf2207e43de020e,20029ac5437dba59eb580398cbf2207e43de020e,"finagle-core: Do less work for d-daperture balancers

Problem

Deterministic aperture load balancers track offered load but never
utilize that information as their apertures are a fixed size. As such
this work is unneccessary and can be avoided.

Solution

Do less in `LoadBand` for d-aperture balancers.

Result

Deterministic aperture (d-aperture) load balancers do less work and no
longer export ""loadband"" scoped metrics: ""widen"", ""narrow"",
""offered_load_ema"".

JIRA Issues: CSL-7985

Differential Revision: https://phabricator.twitter.biz/D303833"
kevinoliver,2019-04-23 00:12:36,https://api.github.com/repos/twitter/finagle/git/commits/252c67a354a6f7d74612f781ce3e7392fbece263,252c67a354a6f7d74612f781ce3e7392fbece263,"finagle-base-http: Optimize HeaderMap iteration

Problem

Iteration through the `HeaderMap` allocates a `Tuple2` for each name/value
pair. These allocations can be avoided.

Solution

Introduce a finagle-private API for iteration that avoids the Tuple2s.

JIRA Issues: CSL-7977

Differential Revision: https://phabricator.twitter.biz/D303734"
ryanoneill,2019-04-22 19:29:17,https://api.github.com/repos/twitter/finagle/git/commits/d2e2562daff8a28649f076285fd02a66f099d059,d2e2562daff8a28649f076285fd02a66f099d059,"finagle-mysql: Moved Request Components from vals to defs

Problem / Solution

Finagle-Mysql's `Request` trait contains `seq` and `cmd` definitions
which are marked as vals, however using a val is unnecessary. Let's
change them to defs to lower the footprint of the classes based on
`Request`.

JIRA Issues: CSL-7996

Differential Revision: https://phabricator.twitter.biz/D303766"
ryanoneill,2019-04-22 18:00:52,https://api.github.com/repos/twitter/finagle/git/commits/170c2d6be77f7fa623d1d09328db5d604aed9315,170c2d6be77f7fa623d1d09328db5d604aed9315,"finagle-mysql: Add SslConnectionRequest

Problem / Solution

Using SSL/TLS with MySQL requires sending an SSL Request (aka an SSL connection
request) as part of the connection phase. We don't have support for it within
finagle-mysql. Let's add it.

JIRA Issues: CSL-7981

Differential Revision: https://phabricator.twitter.biz/D303519"
enbnt,2019-04-19 16:17:57,https://api.github.com/repos/twitter/finagle/git/commits/ce504f5b9bb0c2040c9c96c4f23a81cf2b06a66d,ce504f5b9bb0c2040c9c96c4f23a81cf2b06a66d,"Twitter-oss: update OSS libraries post-release to 19.5.0

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 19.5.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D302995"
slyphon,2019-04-18 21:58:55,https://api.github.com/repos/twitter/finagle/git/commits/484147698d302c3b0bd412e86766917165fe1c52,484147698d302c3b0bd412e86766917165fe1c52,"finagle-thrift: Add scala to tracing BUILD file

Problem:

I need to deal with zipkin data stored in an offline context, using
scala. The finagle-thrift BUILD file for tracing.thrift doesn't specify
a target for generating scrooge classes.

Solution:

Add a target for generating scala bindings

Result:

There is now a target for generating scala bindings of the contents of
tracing.thrift

Differential Revision: https://phabricator.twitter.biz/D302701"
enbnt,2019-04-17 23:10:08,https://api.github.com/repos/twitter/finagle/git/commits/15ae0aba979a2c11ed4a71774b2e995f5df918b4,15ae0aba979a2c11ed4a71774b2e995f5df918b4,"Twitter-oss: Prepare OSS libraries for release 19.4.0

Problem

We want to release the next versions of our Twitter OSS libraries 19.4.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D302314"
ryanoneill,2019-04-17 20:39:26,https://api.github.com/repos/twitter/finagle/git/commits/fe4d8919922115cf5aa4d4c03305b04c89abb362,fe4d8919922115cf5aa4d4c03305b04c89abb362,"finagle-mysql: Add Toggle for Moving Handshaking

Problem

MySQL session establishment (via the handshaking in the connection phase)
should occur as part of service acquisition within the transporter. Instead
today it occurs as part of the client dispatcher. We would prefer session
establishment to happen when creating the transport, and feel that it is
necessary to do so when adding SSL/TLS, as SSL/TLS requires manipulation of
the underlying Netty pipeline, and it is easier to do that via the
transporter and transport.

Solution

Add a toggle for moving handshaking out of the client dispatcher and into
the transporter.

JIRA Issues: CSL-7938

Differential Revision: https://phabricator.twitter.biz/D301456"
mosesn,2019-04-17 19:30:55,https://api.github.com/repos/twitter/finagle/git/commits/4776d7d073fc3f47b7bfbf5739650c64ed194018,4776d7d073fc3f47b7bfbf5739650c64ed194018,"finagle-core: Reordered field so it can't be referenced before it's initialized

Problem

We pass a call-by-name parameter when we initialize a field that references
another field that hasn't been initialized yet.  This is legal because it's a
call-by-name parameter, so it could in theory used safely, and it typically is,
but we've received reports that there are occasionally NullPointerExceptions.

Solution

Initialize the field before we construct the call-by-name parameter that refers
to it.

JIRA Issues: CSL-7849

Differential Revision: https://phabricator.twitter.biz/D301661"
VaughnGH,2019-04-16 19:50:19,https://api.github.com/repos/twitter/finagle/git/commits/b57db6881f500351dbcd50ddbbd849c37589d349,b57db6881f500351dbcd50ddbbd849c37589d349,"finagle-core: Fixing incorrect documentation for RetryOnTimeout

Problem

According to the documentation, ResponseClassifier.RetryOnTimeout is
the ResponseClassifier analog to
RetryPolicy.TimeoutAndWriteExceptionsOnly. However,
RetryPolicy.WriteExceptionsOnly is included in
RetryPolicy.TimeoutAndWriteExceptionsOnly, whereas
ResponseClassifier.RetryOnWriteExceptions is not included in
ResponseClassifier.RetryOnTimeout.

Solution

This change corrects the incorrect documentation.

Result

The documentation will correctly describe the proper
ResponseClassifier equivalent to
RetryPolicy.TimeoutAndWriteExceptionsOnly.

JIRA Issues: CSL-7926

Differential Revision: https://phabricator.twitter.biz/D301219"
yufangong,2019-04-15 22:06:38,https://api.github.com/repos/twitter/finagle/git/commits/0da5604c7361292837dbbcfe2533bc4a16ed4e70,0da5604c7361292837dbbcfe2533bc4a16ed4e70,"finagle/http: Static Logger for BadRequestHandler

Problem

A logger is expensive to instantiate for every connection.

Solution

Lift the logger to BadRequestHandler object and only instantiate per server.

JIRA Issues: CSL-7907

Differential Revision: https://phabricator.twitter.biz/D300899"
cacoco,2019-04-15 19:26:45,https://api.github.com/repos/twitter/finagle/git/commits/675630dfaace1a0f06104c4ac8719a581fa44851,675630dfaace1a0f06104c4ac8719a581fa44851,"finagle-core, twitter-server: Add `c.t.finagle.DtabFlags`

Problem

There is currently no defined way for users of the `c.t.finagle.Dtab` API to
append to the `Dtab.base` delegation table with a supplemental value that is
passed at runtime.

Solution

Add the `c.t.finagle.DtabFlags` trait which defines a `c.t.app.Flag`, ""dtab.add""
that can provide a supplemental delegation table (`Dtab`) to append to the
current server `Dtab.base`.

The trait exposes a `addDtabs()` function which applies the parsed Flag value
and appends it to the current `Dtab.base`.

Result

Users are able to augment the base delegation table (`Dtab.base`) of the server
with a value passed at runtime via the command line.

JIRA Issues: CSL-7766

Differential Revision: https://phabricator.twitter.biz/D297596"
cacoco,2019-04-12 22:31:36,https://api.github.com/repos/twitter/finagle/git/commits/792c1da870bc666890cafd2922c3f99c73c0abcd,792c1da870bc666890cafd2922c3f99c73c0abcd,"finagle: Use HTTPS URLs

Problem/Solution

Use `https://` where possible.

JIRA Issues: OSS-3907

Differential Revision: https://phabricator.twitter.biz/D300155"
jyanJing,2019-04-11 19:40:04,https://api.github.com/repos/twitter/finagle/git/commits/916f4a2683aef99bc5e0c29bbdad0523cebb7bc1,916f4a2683aef99bc5e0c29bbdad0523cebb7bc1,"finagle: Add stats for streaming duration

Problem/Solution/Result

Add stream_duration_ms histograms for HTTP streams for request and response

JIRA Issues: CSL-7768

Differential Revision: https://phabricator.twitter.biz/D297900"
dotordogh,2019-04-10 19:01:18,https://api.github.com/repos/twitter/finagle/git/commits/d4791e8272c0988c233c08a35678cbf0232963c6,d4791e8272c0988c233c08a35678cbf0232963c6,"finagle-core: Change AC enabled param name

Problem

When custom admission controllers are disabled, but admission controllers in
general are enabled, it can lead to confusing UX.

For example:

```
""CustomAdmissionControl"": {
  ""name"": ""hi-server"",
  ""param"": ""Off"",  //on-off switch for CustomAdmissionControl
  ""enabled"": ""false"",  // on-off switch for admission control
  ""statsReceiver"": ""NullStatsReceiver"",
  ""timer"": ""DefaultTimer(Timer)""
} ```

Solution

The confusing UX can be changed by changing the name of the `enabled` param to
`serverAdmissionControlEnabled`.

Result

With the new name, it is more clear that admission control is enabled, but a
particular controller is disabled.
```
""CustomAdmissionControl"": {
  ""name"": ""hi-server"",
  ""customAC"": ""Off"",  //on-off switch for CustomAdmissionControl
  ""serverAdmissionControlEnabled"": ""false"",  // global on-off switch
  ""statsReceiver"": ""NullStatsReceiver"",
  ""timer"": ""DefaultTimer(Timer)""
}
```

JIRA Issues: CSL-7178

Differential Revision: https://phabricator.twitter.biz/D296774"
vkostyukov,2019-04-10 18:08:39,https://api.github.com/repos/twitter/finagle/git/commits/5b2e9f9540b865983e060b65cb7dae83cbf93a22,5b2e9f9540b865983e060b65cb7dae83cbf93a22,"finagle-base-http: validate header chars per RFC 7230

Problem

In the DefaultHeaderMap we don't consider all the invalid chars as
defined by RFC 7230.

Solution

Get up to speed with the spec.

JIRA Issues: CSL-7002

Differential Revision: https://phabricator.twitter.biz/D247125"
ryanoneill,2019-04-09 23:45:59,https://api.github.com/repos/twitter/finagle/git/commits/2fd09fa48919aa4fc435af87b257fafc6a500020,2fd09fa48919aa4fc435af87b257fafc6a500020,"finagle-mysql: Move ConnectionPhase to Handshake

Problem

Right now, handshaking for finagle-mysql only supports a plain handshake, and
only within the `ClientDispatcher`. We would like to move the handshaking to
be done as part of service acqusition, and also be able to add support for
SSL/TLS.

Solution

Remove the particulars of the handshaking from the `ClientDispatcher`, and move
them into a reworked `Handshake` class.

JIRA Issues: CSL-7917

Differential Revision: https://phabricator.twitter.biz/D298400"
vkostyukov,2019-04-09 04:15:57,https://api.github.com/repos/twitter/finagle/git/commits/03c773a506aa838c562e37a3e586fb862cfa1a6a,03c773a506aa838c562e37a3e586fb862cfa1a6a,"finagle: Goodbye Netty 3

Problem

Finagle's Netty 3 dependency and implementation no longer spark joy.

Solution

Drop Netty 3 dependency in Finagle and remove finagle-netty3.

Thank you, Netty 3. We had a good run.

JIRA Issues: CSL-7263

Differential Revision: https://phabricator.twitter.biz/D291221"
roanta,2019-04-08 22:59:38,https://api.github.com/repos/twitter/finagle/git/commits/bdbff0160bded0c24866316880a750331d00ce08,bdbff0160bded0c24866316880a750331d00ce08,"finagle-thriftmux: remove com.twitter.finagle.thriftmux.UsePushMuxServer toggle

Problem / Solution

Dangling toggle that is no longer referenced in code.

JIRA Issues: CSL-7898

Differential Revision: https://phabricator.twitter.biz/D297077"
kevinoliver,2019-04-08 19:50:36,https://api.github.com/repos/twitter/finagle/git/commits/e2cf43409c7dc081283842cd9124ffe3719c409a,e2cf43409c7dc081283842cd9124ffe3719c409a,"finagle-core: Optimize map lookups in BindingFactory

Problem

Profiling shows an unexpected amount of time in the 3
`ServiceFactoryCaches` in `BindingFactory`.

Solution

Introduce a mixin `CacheHashCode` that lazily computes the `hashCode`
and returns that calculation on subsequent calls.

Result

Less time spent on `hashCode` in `BindingFactory` at the cost of an
extra member on a few classes.

JIRA Issues: CSL-7791

Differential Revision: https://phabricator.twitter.biz/D296662"
kevinoliver,2019-04-08 18:03:45,https://api.github.com/repos/twitter/finagle/git/commits/f63d7f7a28157318f98ec8ca44821856aa7f550f,f63d7f7a28157318f98ec8ca44821856aa7f550f,"finagle-netty4: Leak detection disabled by default

Problem

Leaks are a rare event and have not been seen in the wild for quite
some time. The leak tracking code drags down throughput more than the
value we get out of having this on by default.

Solution

Default to having leak tracking disabled. This can be changed by
setting the flag `com.twitter.finagle.netty4.trackReferenceLeaks` to
`true`.

JIRA Issues: CSL-5493

Differential Revision: https://phabricator.twitter.biz/D297031"
mgodave,2019-04-08 16:30:41,https://api.github.com/repos/twitter/finagle/git/commits/1ec020a5b80b35f1d0158aac181b14d7942aaa66,1ec020a5b80b35f1d0158aac181b14d7942aaa66,"finagle-core: Add latency compensation to service acquisition

Problem

Latency compensation allows clients to dynamically inject additional timeout
budget for requests or connection establishment. It does not apply to session
acquisition timeouts which is problematic for a protocol such as mux, which has
the ability to do opportunistic TLS as part of the session acquisition phase.

Solution/Result

Apply latency compensation to the entire session acquisition phase of a service.

JIRA Issues: CSL-7078

Differential Revision: https://phabricator.twitter.biz/D285574"
ryanoneill,2019-04-06 13:15:42,https://api.github.com/repos/twitter/finagle/git/commits/f113a49fac37a3c414e73317d88ffd230eac0232,f113a49fac37a3c414e73317d88ffd230eac0232,"finagle-mysql: Introduce MysqlTransport

Problem / Solution

We are moving MySQL session establishment from the domain of the
`ClientDispatcher` to the domain of the `MysqlTransporter` and the
created `Transport`. Having a specific `MysqlTransport` which knows
about `Packet`s and how to properly `close` a MySQL session allows
us greater flexibility in placing functionality in the appropriate
locations. It will also allow for future manipulation of the underlying
Netty channel during SSL/TLS handshaking. So, let's add it.

JIRA Issues: CSL-7902

Differential Revision: https://phabricator.twitter.biz/D296902"
ryanoneill,2019-04-04 18:08:42,https://api.github.com/repos/twitter/finagle/git/commits/4aa57666bbc922119e3fd148cffc2d56cbad6302,4aa57666bbc922119e3fd148cffc2d56cbad6302,"finagle-mysql: Move Tests to Proper Location (Unit)

Problem / Solution

Some test files were placed in the wrong location due to
finagle-mysql using specific 'unit' and 'integration' test
directories which are not part of the namespace. Let's move
the files to the proper location.

Differential Revision: https://phabricator.twitter.biz/D296336"
ryanoneill,2019-04-03 23:35:19,https://api.github.com/repos/twitter/finagle/git/commits/158e7567f3b569bf914f9487617dae91a4535ba7,158e7567f3b569bf914f9487617dae91a4535ba7,"finagle-mysql: MysqlTransporter Should Work with Packets

Problem / Solution

The `MysqlTransporter` follows the encapsulated `Netty4Transporter` in providing
a `Transport` which is capable of reading and writing `Buf`s. However, for
MySQL, we immediately modify the created `Transport` to instead work with
`Packet`s. Let's change the `MysqlTransporter` to instead return a `Transport`
directly which works with `Packet`s.

JIRA Issues: CSL-7900

Differential Revision: https://phabricator.twitter.biz/D295978"
ryanoneill,2019-04-03 19:22:22,https://api.github.com/repos/twitter/finagle/git/commits/426b0f9ab034b29a129e87096d98d252319f5d59,426b0f9ab034b29a129e87096d98d252319f5d59,"finagle-mysql: Move LostSyncException Out of ClientDispatcher

Problem / Solution

LostSyncException is a generic exception within finagle-mysql which
indicates that communication with the server has been corrupted and
both sides are no longer in sync. With the effort to move where
session establishment takes place for finagle-mysql, it will be
possible for this to happen outside of the `ClientDispatcher`, and
so this functionality should be usable outside of the `ClientDispatcher`.
Let's move it.

JIRA Issues: CSL-7878

Differential Revision: https://phabricator.twitter.biz/D295425"
vkostyukov,2019-04-03 18:39:30,https://api.github.com/repos/twitter/finagle/git/commits/41bd061a4b8afbd170c6bc108eb7de2b77a298d2,41bd061a4b8afbd170c6bc108eb7de2b77a298d2,"finagle-http: Add metrics rejected_invalid_header_names and rejected_invalid_header_values

Problem

There is no visibility into a number of requests rejected by a Finagle HTTP server
due to their headers being invalid. Adding some metrics around this could be
helpful for service operators.

Solution

Add two new counters, `rejected_invalid_header_names` and `rejected_invalid_header_values`
that increment each time a request with invalid headers is rejected by a server.

JIRA Issues: CSL-7872

Differential Revision: https://phabricator.twitter.biz/D294754"
ryanoneill,2019-04-02 23:51:36,https://api.github.com/repos/twitter/finagle/git/commits/0ad432a5f746c26dedb84cd5174c4685fc64f6ab,0ad432a5f746c26dedb84cd5174c4685fc64f6ab,"finagle-mysql: Break Out Settings from Handshake

Problem

The `Handshake` class contains both settings for a MySQL
session as well as behavior for how to create one. This is
undesirable, as we want to change how and where the session
is created.

Solution

Separate out the settings from the behavior. Place the settings
in a new `HandshakeSettings` class.

JIRA Issues: CSL-7874

Differential Revision: https://phabricator.twitter.biz/D294836"
ryanoneill,2019-04-02 20:10:10,https://api.github.com/repos/twitter/finagle/git/commits/946176893a41b16869646138256fd00dbfa2a4dc,946176893a41b16869646138256fd00dbfa2a4dc,"finagle-mysql: Introduce MysqlTransporter

Problem

MySQL session establishment currently occurs in the `connPhase` of
the `ClientDispatcher`. However, it should occur instead earlier as
part of the session acquisition phase within a Transporter. This will
also be the proper place to implement SSL encrypted session establishment
also.

Solution

Encapsulate the use of the `Netty4Transporter` within a new `MysqlTransporter`,
which will also act as an extension point for switching where finagle-mysql does
session establishment for the MySQL protocol.

JIRA Issues: CSL-7176

Differential Revision: https://phabricator.twitter.biz/D294790"
cacoco,2019-04-02 16:55:33,https://api.github.com/repos/twitter/finagle/git/commits/726f76107d41081bb3de4e3b19b99794a714032e,726f76107d41081bb3de4e3b19b99794a714032e,"twitter-oss: Revert sbt update to 1.2.8

Problem

Using `sbt 1.2.8` does not allow our projects to build
with Scala 2.11.x. Even following the advice to set the
root project `crossScalaVersions` to `Nil` seems to still
fail (see: https://www.scala-sbt.org/1.x/docs/Cross-Build.html).

Solution

Revert back to `sbt 1.1.4` until we can resolve the issues
with building against Scala 2.11.x or we drop support for
said Scala versions.

Result

Green TravisCI builds.

Differential Revision: https://phabricator.twitter.biz/D294569"
CrimsonVoid,2019-04-02 16:45:48,https://api.github.com/repos/twitter/finagle/git/commits/d3d2f8cbb50785bf940427d539a30befc011f0d5,d3d2f8cbb50785bf940427d539a30befc011f0d5,"finagle-mysql: Make DateValue.unapply charset agnostic

Problem

Some MySQL-speaking databases send DateValue's with `UTF-8` charsets, which results in failing
pattern matches. It doesn't seem like there needs to be a restriction on what charset `DateValue.unapply`
accepts when `Value.isBinary` is unset.

Solution

Use v.charset for String creation

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D294198"
vkostyukov,2019-04-02 00:48:43,https://api.github.com/repos/twitter/finagle/git/commits/99e2aa810d7dfb659e3f618bbc0b5437a8c72865,99e2aa810d7dfb659e3f618bbc0b5437a8c72865,"finagle-netty4: Add pending_io_events gauge

Problem

There is no visibility into the workload that's queued up in the Netty's pipeline (in the IO
thread pool) before it enters the Finagle space. This kind of overload scenario typically
arises when the thread (event-loop) servicing a multiplexed connection is blocked so it
can no longer process new IO events.

Solution

Add a new metric, `pending_io_events` that exports the number of pending tasks in the
Netty's event-loops servicing the given client or server. The new metric (a gauge) allows
to quickly identify a source of a slowdown in Finagle applications.

Additionally, the new metric can point to a ""bad neighbor"" when a client/server slowdown
is caused by a misbehaving sibling client/server (running in the same IO thread pool)
overloading an IO thread.

JIRA Issues: CSL-3586

Differential Revision: https://phabricator.twitter.biz/D293376"
vkostyukov,2019-03-29 00:20:06,https://api.github.com/repos/twitter/finagle/git/commits/5e6c44a4674edf2fc8a1bd450ce8f44efa3e2902,5e6c44a4674edf2fc8a1bd450ce8f44efa3e2902,"finagle-http: Strip overhead from trailers when they are empty

Problem

Additional `HeaderMap` is allocated for each HTTP message to accommodate trailers, even
if they are empty (the majority of the cases).

Solution

We can strip these allocations and reduce message's footprint for certain types of messages:
inbound chunked messages, inbound full messages that don't have trailers, and all outbound
messages.

Result

We only pay (at the cost of allocations) for trailers when they are present. If there are no trailers
on the wire, they are free.

JIRA Issues: CSL-7827

Differential Revision: https://phabricator.twitter.biz/D292530"
luciferous,2019-03-28 19:15:16,https://api.github.com/repos/twitter/finagle/git/commits/14d03f4c60493c4ea1e7b62fd49351ed630bc524,14d03f4c60493c4ea1e7b62fd49351ed630bc524,"finagle: Tags stack param

Problem / Solution

Tags are a more powerful Label.

Tags associate Finagle clients and servers with a set of keywords. Labels
are simply Tags with a single keyword.

Tags provide a general purpose configuration mechanism for functionality
that is not yet known. This is powerful, but also easily misused. As such,
be conservative in using them.

Frameworks that create services for each endpoint should tag them with
endpoint metadata, e.g.,

    val showPost = Http.server.withLabels(""GET"", ""/posts/show"")
    val createPost = Http.server.withLabels(""POST"", ""PUT"", ""/posts/create"")

Differential Revision: https://phabricator.twitter.biz/D289540"
vkostyukov,2019-03-27 21:09:38,https://api.github.com/repos/twitter/finagle/git/commits/351c43c15861f644b77ca3c5e627a0225001c615,351c43c15861f644b77ca3c5e627a0225001c615,"finagle-http: Transmit trailers through Request/Response

Problem

Finagle doesn't support HTTP trailers thereby can't really act as a fully-featured HTTP/2 (gRPC) proxy.

Solution

Support HTTP trailers in both HTTP/1.1 and HTTP/2 implementations.

Trailers are propagated through the inbound path if the message is chunked or was aggregated from
an HTTP stream terminating with trailers. Trailers are propagated through the outbound path only
via streaming messages.

JIRA Issues: CSL-7759

Differential Revision: https://phabricator.twitter.biz/D283999"
kevinoliver,2019-03-26 19:22:51,https://api.github.com/repos/twitter/finagle/git/commits/e6e455c32db620c5ecbd1105ee3e29b57c373aff,e6e455c32db620c5ecbd1105ee3e29b57c373aff,"finagle-base-http: Optimize Message.charset

Problem

`c.t.f.http.Message.charset` can be implemented more efficiently.

Solution

Optimize it to avoid most allocations and thus run faster.
Hat-tip to @vkostyukov who implemented this in finch [1].

Result

In the case where ""charset="" is not included in the content type
header, it runs 69% faster and allocations drop from 104 bytes/op
to 0.

In the case where ""charset="" is included in the content type
header, it runs 81% faster and allocations drop 83%, from
432 bytes/op to 72.

[1] https://github.com/finagle/finch/pull/946

JIRA Issues: CSL-7619

Differential Revision: https://phabricator.twitter.biz/D291072"
cacoco,2019-03-26 18:28:19,https://api.github.com/repos/twitter/finagle/git/commits/0e4d4c6e19bf9efb595edd65c1c9231fab39fa19,0e4d4c6e19bf9efb595edd65c1c9231fab39fa19,"util,scrooge,fingle,twitter-server,finatra: Update sbt version from 1.1.4 to 1.2.8

Problem/Solution

Update sbt version from 1.1.4 to 1.2.8

Differential Revision: https://phabricator.twitter.biz/D291366"
dotordogh,2019-03-25 21:41:57,https://api.github.com/repos/twitter/finagle/git/commits/9e8f8c139f0f67f0451db2ccfe1e286f25892fb3,9e8f8c139f0f67f0451db2ccfe1e286f25892fb3,"finagle-core: Change iterator logic in WPH to allow for serialization

Problem

Currently, when we try to serialize a sequence of BucketAndCount it fails
because of the iterator logic (the HDR Histogram's custom iterator doesn't play
well with the jackson object mapper).

Solution

The solution is to return a HDR histogram specific iterator.

Result

Serialization to json works as a result.

Differential Revision: https://phabricator.twitter.biz/D290721"
kevinoliver,2019-03-25 18:05:29,https://api.github.com/repos/twitter/finagle/git/commits/aa36f56b7e47eb2af8fadca83f204fa57a38603e,aa36f56b7e47eb2af8fadca83f204fa57a38603e,"finagle-core: Client nack admission control using global flag

Problem

The client nack admission controller was backed by a toggle,
`com.twitter.finagle.core.UseClientNackAdmissionFilter`, for rollout
purposes. It has now been in use for quite some time and no longer
needs the ability to disable it at runtime.

Solution

Convert the toggle to a global flag, `com.twitter.finagle.client.useNackAdmissionFilter`,
that defaults to true. This can be disabled by setting the flag to false.

Result

All finagle clients are more resilient to the backends sending
too many nacks. See `c.t.f.filter.NackAdmissionFilter` for details.

JIRA Issues: CSL-7792

Differential Revision: https://phabricator.twitter.biz/D289583"
luciferous,2019-03-23 13:43:38,https://api.github.com/repos/twitter/finagle/git/commits/0ef9b8e11b7d973b7c45bc93787832fa75a59475,0ef9b8e11b7d973b7c45bc93787832fa75a59475,"finagle-http: Remove toggle c.t.f.http.UseNetty4CookieCodec

Problem / Solution

Netty4 cookies have been running as the default cookie codec with no
issues.

JIRA Issues: CSL-7585

Differential Revision: https://phabricator.twitter.biz/D269579"
vkostyukov,2019-03-20 21:11:29,https://api.github.com/repos/twitter/finagle/git/commits/ad7e428c48927a5d14a6786fff62f3a5e6b1278a,ad7e428c48927a5d14a6786fff62f3a5e6b1278a,"finagle-http: Hide Chunk implementation details

Problem / Solution

This change reduces the visibility of `Chunk`s implementations as well as adds a new
smart constructor, `Chunk.contentWithTrailers`.

JIRA Issues: CSL-7759

Differential Revision: https://phabricator.twitter.biz/D289055"
isnotinvain,2019-03-19 23:18:23,https://api.github.com/repos/twitter/finagle/git/commits/233150a9f20dca50ed75c41b80f351674c17a862,233150a9f20dca50ed75c41b80f351674c17a862,"[finagle-thrift] Allow users to specify stringLengthLimit and containerLengthLimit

Problem

Currently we only expose 1 setting ""readLength"" which we end up using
as the stringLengthLimit. containerLengthLimit is hardcoded to -1.
Container length limit is important for dealing with corrupt records.

Additionally, the documentation claims that readLength is used to
limit object size, but it's actually only used to limit the size of
each string encountered.

Solution

1) Rename readLimit argument to stringLengthLimit  in Protocols.binaryFactory
2) Add containerLengthLimit argument in Protocols.binaryFactory
3) Introduce 2 new system properties and marked the original
   (ambiguously named readLimit) as deprecated.  It appears that
   ""org.apache.thrift.readLength"" is actually no longer used in apache
   thrift, so I put the new properties under
   com.twitter.finagle.thrift instead.
4) Introduce Protocols.compactFactory for TCompactProtocol
    which also respects the system properties

Result

Users can now configure both properties directly in code, or via
system properties. The old system property is deprecated but still
respected.

Differential Revision: https://phabricator.twitter.biz/D286346"
dotordogh,2019-03-19 22:12:52,https://api.github.com/repos/twitter/finagle/git/commits/de4af788b62a2601c28ab5097b319ad92c6b48ff,de4af788b62a2601c28ab5097b319ad92c6b48ff,"finagle-core: Add a way to convert an HDR histogram to BucketAndCounts

Problem

We'd like to be able to represent the WindowedPercentileHistogram in JSON. The
JSON representation will later be sent to an admin endpoint and aggregated with
other histograms.

Solution

I added a new method that converts the current histogram to a sequence of
BucketAndCount. I've also added a test to exercise this behavior.

Result

With this change, we can convert a WindowedPercentileHIstogram to a format that
can be easily serialized to JSON.

Differential Revision: https://phabricator.twitter.biz/D262166"
vkostyukov,2019-03-19 01:39:17,https://api.github.com/repos/twitter/finagle/git/commits/f65f2c739f5fe6b189a9784c9a7f78420f5ab477,f65f2c739f5fe6b189a9784c9a7f78420f5ab477,"finagle-http2: Transmit trailers from full HTTP requests in clients

Problem

One can imagine that one day it would be possible to attach trailers to a fully-buffered Finagle
message (request in this case). When this happens, our transports should be ready to handle
these types of messages. The only component that's not ready is H2's client outbound
HTTP/1.1 -> HTTP/2 converters.

Solution

Properly encode trailers attached to fully-buffered HTTP requests in H2 clients.

JIRA Issues: CSL-7787

Differential Revision: https://phabricator.twitter.biz/D287246"
vkostyukov,2019-03-15 23:50:22,https://api.github.com/repos/twitter/finagle/git/commits/f050e1a647a2aa1d97b97d99edcaf3c255496cc8,f050e1a647a2aa1d97b97d99edcaf3c255496cc8,"finagle-http: Validate trailers on the inbound path

Problem

We're about to start transmitting HTTP trailers in Finagle HTTP clients and servers. Before doing so,
we must ensure trailers are properly validated in our stacks.

Solution

Wire in trailers validation by analogy with regular header validation. As trailers are transmitted within
a very last chunk in HTTP streams, we can't any longer reply with a 400 response as application-layer
could have already replied at that point. The only sub-optimal thing we can do is to hang up on these
connections.

JIRA Issues: CSL-7785

Differential Revision: https://phabricator.twitter.biz/D285487"
vkostyukov,2019-03-15 21:47:13,https://api.github.com/repos/twitter/finagle/git/commits/8ac793d7800e2965ebb5f63b57cbf7dda6158d5d,8ac793d7800e2965ebb5f63b57cbf7dda6158d5d,"finagle-http2: Transmit trailers in client's inbound path

Problem

Trailing headers aren't transmitted through the HTTP/2 -> HTTP/1.1 converters in our clients.

Solution

Transmit trailing headers in H2 client's inbound path.

JIRA Issues: CSL-7778

Differential Revision: https://phabricator.twitter.biz/D286630"
ryanoneill,2019-03-15 04:03:37,https://api.github.com/repos/twitter/finagle/git/commits/dc4bfbcf226adc7b1a5f52366148f8ac36690a71,dc4bfbcf226adc7b1a5f52366148f8ac36690a71,"finagle-core: Change Transport to Have Robust SSL/TLS Session Info

Problem

The `Transport` (via the `TransportContext`) and the `PushChannelHandle`
provides access to the peer certificate associated with the connection
if the connection is using SSL/TLS. It is desirable to have access to more
information from the SSL/TLS session when the underlying connection is using
SSL/TLS.

Solution

Change the `TransportContext` and `PushChannelHandle` to work with an
`SslSessionInfo` instead of a peer certificate directly. This provides
more direct information, and also access to the `SSLSession` being used by the
underlying connection.

Result

Eventually the `Transport.peerCertificate` Finagle context can be deprecated and
a new API can be added where the SSL/TLS session information is provided instead.
Also this information can be more actively tracked and monitored.

Differential Revision: https://phabricator.twitter.biz/D285926"
ryanoneill,2019-03-15 00:16:16,https://api.github.com/repos/twitter/finagle/git/commits/811fe004a835620c834f2cac87dc69fa8b347d35,811fe004a835620c834f2cac87dc69fa8b347d35,"finagle-core: Rename `SslSessionInfo` and Make It Public

Problem / Solution

`SslTransportContext` was added to provide users with more detailed
information about the SSL/TLS session being used by an existing connection.
We would like to start using it, but also don't like the name. Let's rename
it to `SslSessionInfo` and make it public, so that it can be used as part
of Finagle's API.

Differential Revision: https://phabricator.twitter.biz/D286242"
vkostyukov,2019-03-14 23:07:04,https://api.github.com/repos/twitter/finagle/git/commits/efd098d6266d88027ba265846b0e750304d6a6bd,efd098d6266d88027ba265846b0e750304d6a6bd,"finagle-http2: Extract StreamMessage into its own file

Problem / Solution

Extracting `StreamMessage` into its own file to make it more discoverable.

JIRA Issues: CSL-7778

Differential Revision: https://phabricator.twitter.biz/D286297"
kevinoliver,2019-03-14 20:26:58,https://api.github.com/repos/twitter/finagle/git/commits/48f54e82c2df35a5546a55c889286e99622b8b44,48f54e82c2df35a5546a55c889286e99622b8b44,"finagle-http,thriftmux: Tracing annotation for backup requests

Problem

It is valuable to know in traces when a server is processing a request
that was initiated by a backup request. There is no indiciation of
this in traces today.

Solution

Add a binary annotation, ""srv/backup_request_processing"", to HTTP and
ThriftMux servers that indicates this.

JIRA Issues: CSL-7753

Differential Revision: https://phabricator.twitter.biz/D285486"
yufangong,2019-03-13 21:01:56,https://api.github.com/repos/twitter/finagle/git/commits/04f3677759f72c18ffa51d001aebc0ccc0b1e3ff,04f3677759f72c18ffa51d001aebc0ccc0b1e3ff,"Twitter-oss: update OSS libraries post-release to 19.4.0

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries
19.4.0.

 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D285562"
yufangong,2019-03-13 18:00:29,https://api.github.com/repos/twitter/finagle/git/commits/1e67068d1075c5cce656691af48d2fb2e6fa094b,1e67068d1075c5cce656691af48d2fb2e6fa094b,"Twitter-oss: Prepare OSS libraries for release 19.3.0

Problem

We want to release the next versions of our Twitter OSS libraries 19.3.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D285479"
vkostyukov,2019-03-13 04:03:51,https://api.github.com/repos/twitter/finagle/git/commits/7aec8137f19b4f1d1b56ea42b7cca5c32817d0b2,7aec8137f19b4f1d1b56ea42b7cca5c32817d0b2,"finagle-http: Handle last empty chunks more thoughtfully

Problem / Solution

We're not doing anything special about last empty chunks (both trailers and payload are empty)
although they are fairly popular in our pipelines. Let's handle them explicitly and save some
allocations.

JIRA Issues: CSL-7728

Differential Revision: https://phabricator.twitter.biz/D284623"
vkostyukov,2019-03-13 01:18:25,https://api.github.com/repos/twitter/finagle/git/commits/472b4473f8c65aaf0d21b90d28b7f5fa28d08cd8,472b4473f8c65aaf0d21b90d28b7f5fa28d08cd8,"finagle-http2: Transmit trailers in the client's outbound path

Problem

We want to support HTTP trailers, but they aren't propagated on the outbound path in our clients,
when the connection is H2.

Solution

Propagate trailers in the outbound H2 connections in clients.

JIRA Issues: CSL-7777

Differential Revision: https://phabricator.twitter.biz/D284126"
kevinoliver,2019-03-12 21:54:41,https://api.github.com/repos/twitter/finagle/git/commits/0ae8f7f80505cb2204c575564985a2533cea929b,0ae8f7f80505cb2204c575564985a2533cea929b,"finagle: Bump OpenCensus version to 0.19.1

Problem / Solution

We want to upgrade to 0.19.1 from 0.16.1.

JIRA Issues: CSL-7788

Differential Revision: https://phabricator.twitter.biz/D284989"
luciferous,2019-03-11 20:16:34,https://api.github.com/repos/twitter/finagle/git/commits/3fabcfabbcb056db3b9b264e270c44a525599f2a,3fabcfabbcb056db3b9b264e270c44a525599f2a,"finagle-core: Service.pending converts a Future of Service to a Service

Problem

Finagle Stack modules compose into ServiceFactories. Some APIs (e.g. Finatra)
are Service-oriented, composed with Filters.

It's possible to convert a Service into a ServiceFactory, which then can make
use of Stack module functionality. But there is no way to convert back to a
Service (well, there is FactoryToService, but it's not what we want here).

Solution

We can get a Future[Service] from the ServiceFactory. And Future[Service] can
be a reasonable implementation of Service.

Requests wait behind resolution of the future. If resolution fails, all
requests to this service reflect the same failure. While resolution is pending,
the status of the service is Busy, otherwise it's whatever the underlying
service reports.

Closing the service is uninterruptible and instant: failing all subsequent
requests, and interrupting those in flight. Close returns Future.Done always,
independent of the underlying service.

    val svc = Service.pending(Future.never)
    val rep = svc(1)
    val closed = svc.close()

    Await.result(closed) // Future.Done
    Await.result(rep)    // Exception: Service is closed

Note: Because queued requests rely on queue order of future callbacks,
it's not guaranteed that requests to the underlying service will be
received in the same order they were sent.

JIRA Issues: CSL-7673

Differential Revision: https://phabricator.twitter.biz/D280401"
kevinoliver,2019-03-11 19:56:26,https://api.github.com/repos/twitter/finagle/git/commits/0586f657cdba87bbfddbb3f171d646139ec20fdf,0586f657cdba87bbfddbb3f171d646139ec20fdf,"finagle-core: Improved garbage collection tracing annotations

Problem

The garbage collection tracing annotations from `MkJvmFilter` are hard
to use due to wide variability in the annotation used.

Solution

Standardize the annotations.

Result

New annotations that are more easily used.

- Timestamped annotations ""GC Start"" and ""GC End"" for each garbage collection
  event that occurred during the request.
- Binary annotation ""jvm/gc_count"", with the total number of garbage collection
  events that occurred during the request.
- Binary annotation ""jvm/gc_ms"", with the total milliseconds of garbage collection
  events that occurred during the request.

JIRA Issues: CSL-7663

Differential Revision: https://phabricator.twitter.biz/D282590"
vkostyukov,2019-03-08 16:45:06,https://api.github.com/repos/twitter/finagle/git/commits/abc22fed658e5d1967dc7fc7b3d5cb549326aad9,abc22fed658e5d1967dc7fc7b3d5cb549326aad9,"finagle-http: Wire in intial bits to support HTTP Trailers

Problem

We need to support HTTP trailers in Finagle and we want users to consume them via `Reader`.
Trailers follow the data frames hence should be the last item an HTTP reader returns (EOS).

Solution

This change introduces a new data type, `Chunk`, an ADT with two cases, `Cons` (just data) and `Last`
(data and trailers) and does some initial plumbing to wire `Chunk` into our HTTP transports.

JIRA Issues: CSL-6335

Differential Revision: https://phabricator.twitter.biz/D277029"
kevinoliver,2019-03-06 21:17:49,https://api.github.com/repos/twitter/finagle/git/commits/5201f6237ce5185c4208d5945b33813b47507570,5201f6237ce5185c4208d5945b33813b47507570,"finagle: Add tracing annotations to backup requests

Problem

There are no tracing annotations for backup requests.  Adding them is
not particularly difficult, however this runs into a problem with how
MethodBuilder uses them as the backup requests happen before the
client's trace initialization.

Solution

Have MethodBuilder take over placement of trace initialization and add
anotations to `BackupRequestFilter`.

Result

Timestamped annotations for:

 - ""Client Backup Request Issued""
 - ""Client Backup Request Won"" or ""Client Backup Request Lost""

Binary annotations for

 - ""clnt/backup_request_threshold_ms"" with the current value of the latency threshold, in milliseconds
 - ""clnt/backup_request_span_id"" with the span id of the backup request

JIRA Issues: CSL-7731, CSL-7593

Differential Revision: https://phabricator.twitter.biz/D280998"
luciferous,2019-03-04 23:52:57,https://api.github.com/repos/twitter/finagle/git/commits/18679761facd23026685b6279804508e35bf8817,18679761facd23026685b6279804508e35bf8817,"finagle-core: Stackable ""type-agnostic"" filters

Problem / Solution

Filter.TypeAgnostic, like Filter, is ""stackable"" to Service and
ServiceFactory. We just need to provide implementations.

JIRA Issues: CSL-7673

Differential Revision: https://phabricator.twitter.biz/D280390"
vkostyukov,2019-02-28 20:01:34,https://api.github.com/repos/twitter/finagle/git/commits/06a723acbfcea6df8d8a24823f87459bc9a559e7,06a723acbfcea6df8d8a24823f87459bc9a559e7,"finagle: Remove deprecated client setting .withSession.maxIdleTime

Problem / Solution

As an effort to unify connection lifetime parameters in Finagle clients, we're removing `withSession.maxIdleTime`.
Use `withSessionPool.ttl` instead.

JIRA Issues: CSL-2421

Differential Revision: https://phabricator.twitter.biz/D276768"
kevinoliver,2019-02-27 23:13:20,https://api.github.com/repos/twitter/finagle/git/commits/870c86393c59f8df1beda9174654261ade4ed19d,870c86393c59f8df1beda9174654261ade4ed19d,"finagle-stats-core: Add MetricsView.of

Problem

There is no built-in functionality for merging two `MetricsViews`.

Solution

Introduce `MetricsView.of`.

JIRA Issues: CSL-7167

Differential Revision: https://phabricator.twitter.biz/D279199"
yufangong,2019-02-26 21:54:19,https://api.github.com/repos/twitter/finagle/git/commits/0307ddf8cab25d68295268dc2e60f33e91455061,0307ddf8cab25d68295268dc2e60f33e91455061,"finagle-thriftmux: Split MethodBuilder tests from EndToEndTest

Problem
EndToEndTest is gigantic.

Solution
Incrementally split it, now MethodBuilder tests can be its own test file.

Result
Add one test at the end that `MethodBuilder` is closed after all
`ServicePerEndpoint`s closed.

JIRA Issues: CSL-7706

Differential Revision: https://phabricator.twitter.biz/D278298"
kevinoliver,2019-02-26 00:14:23,https://api.github.com/repos/twitter/finagle/git/commits/8396d212c2814abd250dcf8f2c8ab4e24061865c,8396d212c2814abd250dcf8f2c8ab4e24061865c,"finagle-core, http: Add broadcast context for backup requests

Problem

Backends do not know if they are processing a backup request or not.

Solution

Add a new broadcast context that is propagated across ThriftMux and
HTTP RPCs to indicate this.

Result

This information is available via
`c.t.f.context.BackupRequest.wasInitiated`.

JIRA Issues: CSL-7591

Differential Revision: https://phabricator.twitter.biz/D277802"
ryanoneill,2019-02-22 19:54:07,https://api.github.com/repos/twitter/finagle/git/commits/ca646bd850fae230f6d35a6aeb67be00679ccd97,ca646bd850fae230f6d35a6aeb67be00679ccd97,"finagle-core: Remove Deprecated Legacy Multi-Param TLS Methods

Problem / Solution

There are legacy methods for configuring TLS for both `ServerBuilder` and
`ServerTransportParams` which no longer make sense given the current
configuration-based APIs. They are already deprecated, so let's now remove
them.

JIRA Issues: CSL-7685

Differential Revision: https://phabricator.twitter.biz/D277045"
ryanoneill,2019-02-22 01:02:17,https://api.github.com/repos/twitter/finagle/git/commits/34c84019fc939f57349a549f1493bbd1ad32f53b,34c84019fc939f57349a549f1493bbd1ad32f53b,"twitter-oss: Update OSS Libraries Post-Release to 19.3.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 19.3.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

JIRA Issues: CSL-7681

Differential Revision: https://phabricator.twitter.biz/D276994"
ryanoneill,2019-02-21 18:48:01,https://api.github.com/repos/twitter/finagle/git/commits/7576e54f801ef5b74dc86ca50b365fbe0de780d9,7576e54f801ef5b74dc86ca50b365fbe0de780d9,"twitter-oss: Prepare OSS libraries for release 19.2.0

Problem

We want to release the next versions of our Twitter OSS libraries 19.2.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D276537"
mgodave,2019-02-21 17:36:31,https://api.github.com/repos/twitter/finagle/git/commits/47a2c91643002532c653f940f53918dfb0145ebb,47a2c91643002532c653f940f53918dfb0145ebb,"finagle-thriftmux: Trace negative serialization timing values as errors

Problem

We are seeing cases in production where de-serialization times are, but
serialization times are not, being traced. This is due to a negative
serialization timing value but do not have any other information regarding what
that value is because it is discarded.

Solution

Trace negative timing values as an error annotation so we can debug this issue.
If the value is Time.Bottom it is possible that there is a race condition and
the value is not being set on the object we think we should be setting it on,
any other value would indicate that we are somehow incorrectly calculating how
we time these operations.

JIRA Issues: CSL-7584

Differential Revision: https://phabricator.twitter.biz/D274708"
vkostyukov,2019-02-21 04:50:19,https://api.github.com/repos/twitter/finagle/git/commits/0f060e3701f48e27f108a4911e156b8180f0c5aa,0f060e3701f48e27f108a4911e156b8180f0c5aa,"finagle-core: Deprecate $client.withSession.maxIdleTime

Problem

There are two ways to configure the session's idle time timeout (a duration it's allowed to be idle), via
`ExpiringService` (`.withSession.maxIdleTime`) and via `DefaultPool` (`withSessionPool.ttl`). We want
to unify theses parameters and simplify existing implementations.

The idle-time timeout (or TTL) seems to be much easier to implement within a `CachingPool` as it just
becomes a cache's TTL parameter. It also automatically does the right thing for streaming connections
as their TTL only starts applying after they been returned to the pool.

Solution

With that in mind, we want to keep `DefaultPool`s TTL param and remove `ExpiringService`s idleTime param.

JIRA Issues: CSL-2421

Differential Revision: https://phabricator.twitter.biz/D272370"
kevinoliver,2019-02-20 16:20:35,https://api.github.com/repos/twitter/finagle/git/commits/714086db44970b13f99c53dacf90fc5e32dd8391,714086db44970b13f99c53dacf90fc5e32dd8391,"finagle: Update docs on request draining module

Problem / Solution

The client docs have a section on Request Draining which
refer to a ""Drain"" module which should instead be referred to
""RequestDraining"".

JIRA Issues: CSL-6150

Differential Revision: https://phabricator.twitter.biz/D273467"
vkostyukov,2019-02-19 20:16:35,https://api.github.com/repos/twitter/finagle/git/commits/ccf10dbc54f33313860d4f1a229537a2d9677a07,ccf10dbc54f33313860d4f1a229537a2d9677a07,"finagle-base-http: Remove deprecated c.t.f.h.Methods

Problem / Solution

`c.t.f.http.Methods` has been deprecated for about two years. We're removing them as our Scala API
works just fine in Java too.

JIRA Issues: CSL-7475

Differential Revision: https://phabricator.twitter.biz/D273235"
luciferous,2019-02-19 19:46:18,https://api.github.com/repos/twitter/finagle/git/commits/f5e99ae705a40f80f9400a7477d6399ea22d2f41,f5e99ae705a40f80f9400a7477d6399ea22d2f41,"util-core: bypass scheduler for map/transformTry

Problem

transformTry and map can't express recursive computations so there's no
stack to unwind.

Solution

Just apply the function passed to map.

Benchmarks

```
Before

Benchmark                                           Mode  Cnt     Score    Error   Units
FutureBenchmark.fromConstMap                        avgt   10    56.712 ±  1.415   ns/op
FutureBenchmark.fromConstMap:·gc.alloc.rate.norm    avgt   10   104.000 ±  0.001    B/op

After

Benchmark                                           Mode  Cnt     Score    Error   Units
FutureBenchmark.fromConstMap                        avgt   10    36.494 ±  0.243   ns/op
FutureBenchmark.fromConstMap:·gc.alloc.rate.norm    avgt   10    72.000 ±  0.001    B/op
```

JIRA Issues: CSL-7650

Differential Revision: https://phabricator.twitter.biz/D271962"
mosesn,2019-02-15 22:46:17,https://api.github.com/repos/twitter/finagle/git/commits/562e73fc490ec4efff931426d639ff26e9239f3a,562e73fc490ec4efff931426d639ff26e9239f3a,"finagle: Improve documentation for ""logical"" stats

Problem

Even very sophisticated users of finagle are often confused about what exactly
a ""logical"" stat represents.

Solution

Add a diagram which explains how to interpret ""logical"" stats.

JIRA Issues: CSL-7453

Differential Revision: https://phabricator.twitter.biz/D274317"
roanta,2019-02-15 20:17:19,https://api.github.com/repos/twitter/finagle/git/commits/2b811771cb60663c05031e83290290a097f6ffd3,2b811771cb60663c05031e83290290a097f6ffd3,"finagle-core: improve FailureAccrual docs

Problem / Solution

The failure accrual docs still had reference to the original baked in
policy as if it was the only one available. Update the docs to now
discuss the policy more generically. Also, make mention of the probe
feature.

JIRA Issues: CSL-2595

Differential Revision: https://phabricator.twitter.biz/D273411"
yufangong,2019-02-15 03:23:02,https://api.github.com/repos/twitter/finagle/git/commits/23affacc34d7559d89bbd7ce9d0fe9720f584e92,23affacc34d7559d89bbd7ce9d0fe9720f584e92,"finagle-thrift/scrooge: Clean up c.t.f.thrift.ThriftServiceIface

Problem

ThriftServiceIface#Filterable was deprecated since Nov 2017. ThriftServiceIface
should upgrade its name and location align with new scrooge generated APIs.

Solution
Removed Filterable, renamed ThriftServiceIface to ThriftServicePerEndpoint and
moved to c.t.f.thrift.serivce package.

JIRA Issues: CSL-7648

Differential Revision: https://phabricator.twitter.biz/D272427"
yufangong,2019-02-15 01:50:19,https://api.github.com/repos/twitter/finagle/git/commits/c6eb20207376a86f59ef34753da39a27390faf18,c6eb20207376a86f59ef34753da39a27390faf18,"finagle-thrift{mux}: Remove deprecated methods in Thrift/ThriftMux

Problem/Solution

Removed deprecated APIs located in Thrift.scala and ThriftMux.scala.

```
1. c.t.f.Thrift.Client.stats
	=> use c.t.f.Thrift.Client.clientParam.clientStats
2. c.t.f.Thrift.withProtocolFactory
	=> use c.t.f.Thrift.client.withProtocolFactory
3. c.t.f.Thrift.withClientId
	=> usec.t.f.Thrift.client.withClientId
4. c.t.f.Thrift.Server.serverLabel
	=> use c.t.f.Thrift.Server.serverParam.serviceName
5. c.t.f.Thrift.Server.serverStats
	=> use c.t.f.Thrift.Server.serverParam.serverStats
6. c.t.f.Thrift.Server.maxThriftBufferSize
	=> use c.t.f.Thrift.Server.serverParam.maxThriftBufferSize
7. c.t.f.ThriftMux.Client.stats
	=> use c.t.f.ThriftMux.Clien.clientParam.clientStats
8. c.t.f.ThriftMux.Server.serverLabel
	=> use c.t.f.ThriftMux.Server.serverParam.serviceName
9. c.t.f.ThriftMux.Server.serverStats
	=> use c.t.f.ThriftMux.Server.serverParam.serverStats
10. c.t.f.ThriftMux.Server.maxThriftBufferSize
	=> use c.t.f.ThriftMux.Server.serverParam.maxThriftBufferSize
```

JIRA Issues: CSL-7652

Differential Revision: https://phabricator.twitter.biz/D272811"
vkostyukov,2019-02-14 23:43:32,https://api.github.com/repos/twitter/finagle/git/commits/35fe9ae0b6447bdcde8d5d34b9af69533853d999,35fe9ae0b6447bdcde8d5d34b9af69533853d999,"finagle-core: Add scaladoc for withMonitor

Problem / Solution

Finagle's monitors. What are they used for? Do they handle exceptions? Let's find out.

JIRA Issues: CSL-3481

Differential Revision: https://phabricator.twitter.biz/D273550"
kevinoliver,2019-02-14 21:11:08,https://api.github.com/repos/twitter/finagle/git/commits/9878a9ec32e9605caa58728e469d694c18fed1e7,9878a9ec32e9605caa58728e469d694c18fed1e7,"finagle-serversets: Deprecate ZkResolver

Problem

`c.t.f.zookeeper.ZkResolver` should be avoided in
favor of `com.twitter.finagle.serverset2.Zk2Resolver`.

Solution

Deprecate it.

JIRA Issues: CSL-7100

Differential Revision: https://phabricator.twitter.biz/D273608"
kevinoliver,2019-02-13 21:07:40,https://api.github.com/repos/twitter/finagle/git/commits/efa2c663bf5b44aa3a438528d210e586e81929d8,efa2c663bf5b44aa3a438528d210e586e81929d8,"Fix usage of com.twitter.conversions.time in comments

Problem / Solution

A few usages of `com.twitter.conversions.time` slipped
past in comments. This replaces them with
`com.twitter.conversions.DurationOps`.

Differential Revision: https://phabricator.twitter.biz/D273370"
kevinoliver,2019-02-13 19:45:00,https://api.github.com/repos/twitter/finagle/git/commits/6283c6ce95bf4dda1c826c41cd3a6a2b15f38327,6283c6ce95bf4dda1c826c41cd3a6a2b15f38327,"finagle-thriftmux,scrooge: Server tracing of serde timings

Problem

Users have limited visibility into how much time Thrift servers spend
deserializing requests and serializing responses.

Solution

Wire this up as new binary tracing annotations.

Result

The annotation keys are ""srv/request_deserialization_ns"" and
""srv/response_serialization_ns"". Both use nanoseconds as the time
unit.

JIRA Issues: CSL-7615

Differential Revision: https://phabricator.twitter.biz/D272934"
roanta,2019-02-13 01:25:44,https://api.github.com/repos/twitter/finagle/git/commits/0d017e013cebd5fb1c486dc60e15ff46af7e09ee,0d017e013cebd5fb1c486dc60e15ff46af7e09ee,"finagle-mux: remove gracefulShutdownEnabled flag

Problem / Solution

`gracefulShutdownEnabled` was a temporary flag while rolling out
mux draining. It's no longer needed and should always be set to true.

Differential Revision: https://phabricator.twitter.biz/D271693"
yufangong,2019-02-11 23:16:37,https://api.github.com/repos/twitter/finagle/git/commits/773b6e57ab38c45c0dbecc4438fe0b3d9bcb2e12,773b6e57ab38c45c0dbecc4438fe0b3d9bcb2e12,"finagle-thrift: Clean up ThriftRichClient.MultiplexedThriftClient

Problem/Solution

Remove deprecated methods.

Differential Revision: https://phabricator.twitter.biz/D271774"
luciferous,2019-02-11 19:03:15,https://api.github.com/repos/twitter/finagle/git/commits/02d3d524b64dd6ba9af4f4b5104c901abeb9b9f5,02d3d524b64dd6ba9af4f4b5104c901abeb9b9f5,"finagle: remove BackupRequestLost

Problem / Solution

BackupRequestLost has been deprecated since v17.12.0. Time to remove it.

JIRA Issues: CSL-5585

Differential Revision: https://phabricator.twitter.biz/D270833"
sgerstein,2019-02-11 17:39:55,https://api.github.com/repos/twitter/finagle/git/commits/6e3bf33f83cfe211163233ce430d17b533b2fe14,6e3bf33f83cfe211163233ce430d17b533b2fe14,"finagle-core: Remove filter of rolled-up failures in MethodBuilder

Problem

Clients built with MethodBuilder do not emit a rolled-up failures metric at
the logical scope. This is a consistency issue (raw scope does), and makes it
difficult to calculate an accurate SR (in any given minute, success + failures
is not necessarily == requests).

Solution

Stop filtering the rolled-up failure metric at the logical scope.

Result

Clients built with MethodBuilder will emit rolled-up failures metrics.

JIRA Issues: CSL-7132

Differential Revision: https://phabricator.twitter.biz/D271195"
mosesn,2019-02-08 22:33:17,https://api.github.com/repos/twitter/finagle/git/commits/1213f7f697af21c5ddc30a3e12c2f7995b40adcc,1213f7f697af21c5ddc30a3e12c2f7995b40adcc,"{util, finagle}: remove remnants of util-collection from sbt

Problem

util-collection isn't a thing, but we're still trying to make it a thing.

Solution

Stop trying to make util-collection happen

JIRA Issues: CSL-7623

Differential Revision: https://phabricator.twitter.biz/D271602"
mosesn,2019-02-08 20:05:22,https://api.github.com/repos/twitter/finagle/git/commits/b672bfa3ab79b246d82a69b080e2c87f12dfe972,b672bfa3ab79b246d82a69b080e2c87f12dfe972,"util-collection: Delete it

Problem

util-collection does not have very much stuff in it anymore, and of those things
they don't seem to be very valuable.

Solution

Let's delete it.

Result

Never have to worry about util-collection ever again.

JIRA Issues: CSL-6493

Differential Revision: https://phabricator.twitter.biz/D270548"
dotordogh,2019-02-08 19:34:59,https://api.github.com/repos/twitter/finagle/git/commits/d3d7212811531604ed514649e384a842aee2e42b,d3d7212811531604ed514649e384a842aee2e42b,"finagle-mysql: Handle empty values in CanBeParameter's write and sizeOf

Problem

When compiling finagle-mysql, there were compile warnings for CanBeParameter's
write and sizeOf methods indicating that not all cases were being handled.

Solution

Handle the unmatched cases.

Result

No warnings upon compile.

JIRA Issues: CSL-7280

Differential Revision: https://phabricator.twitter.biz/D270336"
mosesn,2019-02-08 19:14:31,https://api.github.com/repos/twitter/finagle/git/commits/3330ea30400127c68bfd536e5155e59141588e8a,3330ea30400127c68bfd536e5155e59141588e8a,"finagle: Made language more inclusive

Problem / Solution

finagle uses a lot of non-inclusive language, let's instead use more inclusive
language.

JIRA Issues: CSL-7049

Differential Revision: https://phabricator.twitter.biz/D271236"
mosesn,2019-02-08 16:20:49,https://api.github.com/repos/twitter/finagle/git/commits/f13baf5cb0cca2da119a7ef32fbd0cdc3a9bc75d,f13baf5cb0cca2da119a7ef32fbd0cdc3a9bc75d,"util-core: Rename BlacklistStatsReceiver to DenylistStatsReceiver

Problem

BlacklistStatsReceiver uses non-inclusive language.

Solution

Rename it to DenylistStatsReceiver

JIRA Issues: CSL-7049

Differential Revision: https://phabricator.twitter.biz/D270526"
ShaneDelmore,2019-02-07 22:38:28,https://api.github.com/repos/twitter/finagle/git/commits/6183d65b91e4dfb1ad053b95d58303fae991a04a,6183d65b91e4dfb1ad053b95d58303fae991a04a,"finagle: Remove Existentials Imports in Favor of Compiler Flags

Problem / Solution

The scala.language.existentials import is not needed in 2.12 and existentials can
be used via the '-language:existentials' compiler flag in 2.11. Let's remove the
imports and depend on the compiler flag instead.

Differential Revision: https://phabricator.twitter.biz/D270115"
dotordogh,2019-02-07 22:35:26,https://api.github.com/repos/twitter/finagle/git/commits/3f4a25b03741befdf36ca905c72c89eb2c59cf80,3f4a25b03741befdf36ca905c72c89eb2c59cf80,"finagle-example: Update example of http server configuration

Problem

We are moving away from ServerBuilder and it doesn't make sense for an example
to use something we plan to deprecate at some point.

Solution

Update the example so that it uses the Finagle 6 API.

Result

An up to date example for folks to reference.

JIRA Issues: CSL-7395

Differential Revision: https://phabricator.twitter.biz/D269928"
kevinoliver,2019-02-07 22:29:50,https://api.github.com/repos/twitter/finagle/git/commits/32d9b56b905b13035bf5f92ad9639371e9e7e631,32d9b56b905b13035bf5f92ad9639371e9e7e631,"finagle-thriftmux,scrooge: Client tracing of serde timings

Problem

Users have limited visibility into how much time Thrift clients spend
serializing requests and deserializing responses.

Solution

Wire this up as new binary tracing annotations.

Result

The annotation keys are ""request serialization ns"" and ""response
deserialization ns"". Both use nanoseconds as the time unit.

JIRA Issues: CSL-7584

Differential Revision: https://phabricator.twitter.biz/D270597"
luciferous,2019-02-06 22:49:19,https://api.github.com/repos/twitter/finagle/git/commits/2133620e9a18a42300da97984df7aeaeb29c6199,2133620e9a18a42300da97984df7aeaeb29c6199,"finagle-core: return an empty balancer in partition instead of nothing

Problem

TrafficDistributor constructs balancers from endpoints. Sometimes endpoints is
empty, which we handle as a special case by returning a balancer with an empty
address set. If endpoints is empty in two consecutive updates, we end up
removing the ""empty"" balancer and returning nothing.

To illustrate why this happens, imagine we have a balancer set (1, 2, 3) and
receive an empty endpoint set. At the end of the scanLeft,

   balancers.keySet -- weightedGroups.keySet // Set(1, 2, 3) -- Set() == Set(1, 2, 3)

Folding over `merged` to remove (1, 2, 3) leaves us with balancer 0 for the
next iteration. Upon receiving the second empty endpoint set, we compare again
but now `balancers.keySet == Set(0)` which ends up removing the ""empty""
balancer.

Solution

Restructure the code so that adding an ""empty"" balancer is the last thing it
does if the result would otherwise be an empty set.

JIRA Issues: CSL-7509

Differential Revision: https://phabricator.twitter.biz/D262960"
mosesn,2019-02-06 22:12:40,https://api.github.com/repos/twitter/finagle/git/commits/75a4a2097540d3577f1a72611340c371974b8406,75a4a2097540d3577f1a72611340c371974b8406,"finagle-base-http: Remove c.t.f.http.Statuses

Problem / Solution

We deprecated Statuses in Feb 2017 but never removed it.  It's time to die.

JIRA Issues: CSL-7476

Differential Revision: https://phabricator.twitter.biz/D269224"
vkostyukov,2019-02-06 20:18:25,https://api.github.com/repos/twitter/finagle/git/commits/d93bb1c97c96312fb2354d552fc6d83f29e6e975,d93bb1c97c96312fb2354d552fc6d83f29e6e975,"finagle-http: Remove Response.Ok

Problem / Solution

Finagle HTTP's `Response.Ok` was deprecated two years ago. We're removing it.

JIRA Issues: CSL-7473

Differential Revision: https://phabricator.twitter.biz/D269737"
mosesn,2019-02-06 16:57:43,https://api.github.com/repos/twitter/finagle/git/commits/f191f1db1cbcb8d5dac7e9e295e7e09c21762a75,f191f1db1cbcb8d5dac7e9e295e7e09c21762a75,"finagle-base-http: Remove c.t.f.http.Versions

Problem / Solution

We deprecated Versions in Feb 2017 but never removed it.  It's time to die.

JIRA Issues: CSL-7477

Differential Revision: https://phabricator.twitter.biz/D269207"
kevinoliver,2019-02-06 02:58:38,https://api.github.com/repos/twitter/finagle/git/commits/c69a22f8a174e86aca2e72ddcdc98f3a5927157b,c69a22f8a174e86aca2e72ddcdc98f3a5927157b,"finagle-thriftmux, scrooge: Clients now trace rpc method name

Problem

ThriftMux clients did not trace the method name of their RPC.
This was difficult in part because the ""thrift"" code happens
outside of the Finagle stack which has tracers properly
initialized.

Solution

Expand the scope of `ClientDeserializeCtx` to also include
a spot for the method name. Then read this value as part of
the ThriftMux Finagle stack.

JIRA Issues: CSL-7574

Differential Revision: https://phabricator.twitter.biz/D269383"
mosesn,2019-02-06 00:50:08,https://api.github.com/repos/twitter/finagle/git/commits/239dc81d84d6b1238ddd99fbb6e035616c9041bb,239dc81d84d6b1238ddd99fbb6e035616c9041bb,"util-core: Remove silly shim CountDownLatch

Problem / Solution

`com.twitter.util.CountDownLatch` is an extremely thin shim around the java stdlib
one.  We should stop using it.

JIRA Issues: CSL-7533

Differential Revision: https://phabricator.twitter.biz/D269404"
mosesn,2019-02-06 00:22:22,https://api.github.com/repos/twitter/finagle/git/commits/58d31f83b4e6af5976c98e431deb86b261fa645d,58d31f83b4e6af5976c98e431deb86b261fa645d,"hdrhistogram: Bump version to 2.1.11

Problem / Solution

Update HdrHistogram to 2.1.11

JIRA Issues: CSL-7529

Differential Revision: https://phabricator.twitter.biz/D269843"
vkostyukov,2019-02-05 23:58:42,https://api.github.com/repos/twitter/finagle/git/commits/90333b1acaae9ebf2d34358b183574598c3b1c83,90333b1acaae9ebf2d34358b183574598c3b1c83,"finagle-thriftmux: Remove non-push Mux leftovers

Problem / Solution

ThriftMux has some leftovers after the non-push implementation was removed. This removes
them completely.

Result

We have fewer tests to run now (no duplicates): **down to 97 from 280**.

Differential Revision: https://phabricator.twitter.biz/D269373"
masahitojp,2019-02-05 22:36:46,https://api.github.com/repos/twitter/finagle/git/commits/ce8a52ca2a2be6b9f8c096f8f71f71692e34703f,ce8a52ca2a2be6b9f8c096f8f71f71692e34703f,"finagle: Upgrade Scala to 2.12.8

Problem (Motivation)

I'd like to upgrade scala 2.12.x version.
https://www.scala-lang.org/news/2.12.8

Solution

I upgrade version for 2.12.8(latest version for Scala 2.12.x series)

Result

nothing special

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D266202"
kevinoliver,2019-02-05 19:55:35,https://api.github.com/repos/twitter/finagle/git/commits/7fbeb97ebc2e80dd959baf34ac3e6defa4fa6c44,7fbeb97ebc2e80dd959baf34ac3e6defa4fa6c44,"finagle-core: Remove duplicated FilterTest

Problem

`ctf.service.FilterTest` has only a few tests, all of
which are covered by `ctf.FilterTest`.

Solution

Remove it.

Result

The new year's resolution holds up for at least another week.

JIRA Issues: CSL-7577

Differential Revision: https://phabricator.twitter.biz/D269573"
vkostyukov,2019-02-05 19:28:22,https://api.github.com/repos/twitter/finagle/git/commits/ae0571c9dbc88b1708f2dc338c2511318812c3c3,ae0571c9dbc88b1708f2dc338c2511318812c3c3,"finagle-core: Remove unused ExpiringServerDispatcher

Problem / Solution

`ExpiringServerDispatcher` is a dead forest. Remove it.

JIRA Issues: CSL-4702

Differential Revision: https://phabricator.twitter.biz/D269331"
kevinoliver,2019-02-05 19:26:22,https://api.github.com/repos/twitter/finagle/git/commits/a2ddc72761885782fbf7ee8dec335aeb190dc027,a2ddc72761885782fbf7ee8dec335aeb190dc027,"finagle-core: Faster Filters

Problem

Application of Filter chains via `Filter.apply` are not as fast as
they could be.

Solution

Avoid the unneccary wrapping of `Filter` application in a
`Service.rescue`.

Result

The `Filter.andThenFilter` microbenchmark shows a 35.4% reduction in
runtime per operation.

JIRA Issues: CSL-7578

Differential Revision: https://phabricator.twitter.biz/D269003"
baroquebobcat,2019-02-05 00:36:31,https://api.github.com/repos/twitter/finagle/git/commits/29d8a2b3c9a1f67ea810f99b22117bb184f2d5c4,29d8a2b3c9a1f67ea810f99b22117bb184f2d5c4,"Fix Pants invalidation issue for Scala/Java compile

Problem

Pants has an issue where java source changes don't invalidate compilation units
that include both Scala and Java in some circumstances (see
https://github.com/pantsbuild/pants/issues/7200).

Solution

This patch works around that issue by adding a second target that owns the same
sources and making it a dependency of the scala_library. This causes the Java
files contents to affect the scala_library's compile cache key, invalidating it,
and does it in a way that doesn't introduce a cycle in the target dependency
graph.

Result

Now, when changes are made to Java sources, subsequent Pants
compiles will also recompile the associated Scala sources against the Java
changes.

JIRA Issues: DPB-10793

Differential Revision: https://phabricator.twitter.biz/D269076"
ryanoneill,2019-02-04 20:02:02,https://api.github.com/repos/twitter/finagle/git/commits/454c155b7c5c32604fd7c80214df3e834b18065f,454c155b7c5c32604fd7c80214df3e834b18065f,"finagle,finatra: Remove jparker

Differential Revision: https://phabricator.twitter.biz/D269058"
vkostyukov,2019-02-04 19:57:01,https://api.github.com/repos/twitter/finagle/git/commits/aff4476592a1eaeb7b58811438e048f9d4e48bd4,aff4476592a1eaeb7b58811438e048f9d4e48bd4,"finagle-http: DelayedReleaseService can substitute RefCountedService (request draining)

Problem

Both `RefcountedService` and `DelayedReleaseService` solve exactly the same problem (graceful close
allowing for request draining), except for the latter also takes care about streamed messages. We don't
really need both in our HTTP clients.

Solution

Replace `RefcountedService` with `DelayedReleaseService` in our HTTP clients. Our client stacks are now
slimmer and simpler.

JIRA Issues: CSL-4702

Differential Revision: https://phabricator.twitter.biz/D266743"
vkostyukov,2019-02-04 17:56:48,https://api.github.com/repos/twitter/finagle/git/commits/88a2d0ba683124fb390d8e9367ccd5959bd5df27,88a2d0ba683124fb390d8e9367ccd5959bd5df27,"finagle-http: Delay session release until streaming request terminates

Problem

Finagle HTTP clients assume sessions with streaming requests are immediately reusable once
the response is received. This is not right and leads to borked HTTP sessions.

Solution

Delay releasing of HTTP connections until their streaming requests terminate and responses
received.

JIRA Issues: CSL-6236

Differential Revision: https://phabricator.twitter.biz/D264985"
blorente,2019-02-01 11:43:46,https://api.github.com/repos/twitter/finagle/git/commits/631a63fa88463917e1574a31768b391834e32407,631a63fa88463917e1574a31768b391834e32407,"finagle-toggle: Add missing dependency on jackson-core

Problem / Solution

`JsonToggleMap` usesjackson-core but doesn't explicitly declare a
pants dependency on it.

Differential Revision: https://phabricator.twitter.biz/D267818"
kevinoliver,2019-01-30 22:34:53,https://api.github.com/repos/twitter/finagle/git/commits/2de928ce4bb6973fe38160de3e174ecfc147f5b0,2de928ce4bb6973fe38160de3e174ecfc147f5b0,"finagle-http: Remove expensive cookie accounting

Problem

`com.twitter.finagle.http.CookieMap.rewriteCookieHeaders` is
expensive.

Solution

Remove the debug counter, `http/cookie/dropped_samesites"" that was the
cause of the expense. While doing so, remove
`http/cookie/flagless_samesites`, as well.

JIRA Issues: CSL-7564

Differential Revision: https://phabricator.twitter.biz/D267239"
vkostyukov,2019-01-29 03:08:28,https://api.github.com/repos/twitter/finagle/git/commits/27888d6be1946d7ef8691c0b930fcb307883bc44,27888d6be1946d7ef8691c0b930fcb307883bc44,"Revert ""finagle-core: return an empty balancer in partition instead of nothing""

This reverts commit 38e03e3acd2d366da284ce469671b570a17b09cc (OSS SHA 9c810dd3b5f5111f2ad4abdab56a6b09a65cc05d).

JIRA Issues: CSL-7557

Differential Revision: https://phabricator.twitter.biz/D266256"
ryanoneill,2019-01-28 20:00:02,https://api.github.com/repos/twitter/finagle/git/commits/fbfc6d1aac4bd242bd546a9bbfa87deb53bea280,fbfc6d1aac4bd242bd546a9bbfa87deb53bea280,"finagle-core: Deprecate Legacy Multi-Param TLS Methods

Problem / Solution

There are legacy methods for configuring TLS for both `ServerBuilder` and
`ServerTransportParams` which no longer make sense given the current
configuration-based APIs. Let's deprecate the multi-param methods and
eventually remove them.

JIRA Issues: CSL-7552

Differential Revision: https://phabricator.twitter.biz/D265844"
ryanoneill,2019-01-25 20:28:34,https://api.github.com/repos/twitter/finagle/git/commits/b4a9e8cdbc79c27d6ff909f810e072115c7cbc4b,b4a9e8cdbc79c27d6ff909f810e072115c7cbc4b,"finagle-core: Add `CertsAndKey` to `KeyCredentials`

Problem / Solution

It is sometimes useful to have the certificate and certificate
chain within the same file, e.g. for an http server that does
not use mutual TLS. Let's support it.

JIRA Issues: CSL-7507

Differential Revision: https://phabricator.twitter.biz/D264325"
luciferous,2019-01-25 14:00:56,https://api.github.com/repos/twitter/finagle/git/commits/9c810dd3b5f5111f2ad4abdab56a6b09a65cc05d,9c810dd3b5f5111f2ad4abdab56a6b09a65cc05d,"finagle-core: return an empty balancer in partition instead of nothing

Problem

TrafficDistributor constructs balancers from endpoints. Sometimes endpoints is
empty, which we handle as a special case by returning a balancer with an empty
address set. If endpoints is empty in two consecutive updates, we end up
removing the ""empty"" balancer and returning nothing.

To illustrate why this happens, imagine we have a balancer set (1, 2, 3) and
receive an empty endpoint set. At the end of the scanLeft,

   balancers.keySet -- weightedGroups.keySet // Set(1, 2, 3) -- Set() == Set(1, 2, 3)

Folding over `merged` to remove (1, 2, 3) leaves us with balancer 0 for the
next iteration. Upon receiving the second empty endpoint set, we compare again
but now `balancers.keySet == Set(0)` which ends up removing the ""empty""
balancer.

Solution

Restructure the code so that adding an ""empty"" balancer is the last thing it
does if the result would otherwise be an empty set.

JIRA Issues: CSL-7509

Differential Revision: https://phabricator.twitter.biz/D262960"
xeno-by,2019-01-25 02:03:16,https://api.github.com/repos/twitter/finagle/git/commits/d8081c11f22f4794ec284d897977d9b39f91051c,d8081c11f22f4794ec284d897977d9b39f91051c,"Change Finagle and friends to be compatible with Rsc

Problem

Some Scala code in Finagle and friends is incompatible with Rsc.
While the majority of these incompatibilities can be fixed automatically
with the RscCompat rewrite (these fixes will be submitted in a separate
pull request), there are a few problems that stem from missing
functionality or bugs in Rsc.

Recently, I fixed a significant number of tickets in Rsc, but there
is some stuff left for full compatibility with Finagle and friends.
Unfortunately, all that stuff is pretty challenging, which suggests
that it may be more practical to work around.

Solution

I've manually worked around the following tickets on the Rsc
issue tracker:
  * https://github.com/twitter/rsc/issues/91
  * https://github.com/twitter/rsc/issues/100
  * https://github.com/twitter/rsc/issues/224
  * https://github.com/twitter/rsc/issues/263
  * https://github.com/twitter/rsc/issues/268
  * https://github.com/twitter/rsc/issues/273
  * https://github.com/twitter/rsc/issues/294
  * https://github.com/twitter/rsc/issues/331

Result

All Scala code in Finagle and friends will be compatible with Rsc,
at least to the degree required for our current internal Rsc test
suite to pass.

Differential Revision: https://phabricator.twitter.biz/D264602"
vkostyukov,2019-01-24 22:46:37,https://api.github.com/repos/twitter/finagle/git/commits/58d878473e6ee33be9c3014c1e0bc6813c447a6e,58d878473e6ee33be9c3014c1e0bc6813c447a6e,"finagle-http: DelayedReleaseService in terms of Reader.onClose

Problem

Finagle's `DelayedReleaseService` wraps HTTP response's reader with a bonus reader that release a
latch when underlying stream terminates. We have better tools now to do that.

Solution

`Reader.onClose` does exactly what bonus reader from `DelayedReleaseService` is supposed to do.
Using it instead greatly simplifies implementation as well as removes overhead from double wrapping
readers and their responses.

JIRA Issues: CSL-7504

Differential Revision: https://phabricator.twitter.biz/D262984"
jyanJing,2019-01-23 20:23:58,https://api.github.com/repos/twitter/finagle/git/commits/068a15e685dc5dda02ef098b1031378c04f1b9cc,068a15e685dc5dda02ef098b1031378c04f1b9cc,"finagle-core: Add gauge to measure the number of failed fast hosts

Problem

We are missing metrics of how many hosts had been marked as failed fast.

Solution

Added a gauge of whether the host is marked as dead(1) or not(0).

JIRA Issues: CSL-5734

Differential Revision: https://phabricator.twitter.biz/D263552"
kevinoliver,2019-01-22 16:44:06,https://api.github.com/repos/twitter/finagle/git/commits/4d915148c12531e35c886a5952a60d0ecbf6ca65,4d915148c12531e35c886a5952a60d0ecbf6ca65,"finagle-opencensus-tracing: Fix markdown in readme

Problem / Solution

The headers in README.md were not using correct markdown.

JIRA Issues: CSL-7506

Differential Revision: https://phabricator.twitter.biz/D262543"
luciferous,2019-01-22 16:40:34,https://api.github.com/repos/twitter/finagle/git/commits/fccd92c6f9a1ebc4053f07f90047e4fcbab8414e,fccd92c6f9a1ebc4053f07f90047e4fcbab8414e,"finagle-http: Upgrade cookie codec to Netty4

Problem / Solution

The Netty4 cookie codec is replacing the current Netty3 codec. This
change toggles the flag in CookieMap which determines which cookie codec
to use.

After this change, we will be removing our dependency on Netty3.

JIRA Issues: CSL-7508

Differential Revision: https://phabricator.twitter.biz/D262776"
bryce-anderson,2019-01-17 22:52:32,https://api.github.com/repos/twitter/finagle/git/commits/c066773f71698198c3d6e8fef0569a5eb5d5e117,c066773f71698198c3d6e8fef0569a5eb5d5e117,"finagle-netty4-http: Unify inbound header validation

Problem

We're using Netty4 header validation on the inbound pathway which is
both incorrect in its implementation and we don't do it consistently
between HTTP/1.x and HTTP/2.

Solution

Add RFC 7230 header validation as a pipeline stage in both client and
server pipelines and disable the Netty validation.

JIRA Issues: CSL-7433

Differential Revision: https://phabricator.twitter.biz/D256689"
yufangong,2019-01-17 22:34:30,https://api.github.com/repos/twitter/finagle/git/commits/eee349333dc37773939d5dce47958bf8caad5540,eee349333dc37773939d5dce47958bf8caad5540,"finagle/finatra: More documentation for ResponseClassification

Problem/Solution

  # Added doc about the default ResponseClassifier for Finatra servers.
  # Explained that ResponseClassificationSyntheticException is applied for
  bookkeeping when use ThriftExceptionAsFailure;
  # Added doc that thrift Per-endpoint StatsFilter can record the specific
  thriftExceptions when enabled in RichClientParam/RichServerParam.

JIRA Issues: CSL-7432

Differential Revision: https://phabricator.twitter.biz/D261148"
mosesn,2019-01-17 04:21:19,https://api.github.com/repos/twitter/finagle/git/commits/8794437119a6b7c492657e3e13ead7f0021d0494,8794437119a6b7c492657e3e13ead7f0021d0494,"finagle-http: Remove withCompressionLevel config from Http.Client

Problem

The `withCompressionLevel` method doesn't do anything on Http.Client. Since it's
visible, users might think it does something, when actually, it does nothing.

Solution

Remove it.  The migration plan is that users just delete it.

JIRA Issues: CSL-7470

Differential Revision: https://phabricator.twitter.biz/D260077"
roanta,2019-01-16 19:37:02,https://api.github.com/repos/twitter/finagle/git/commits/815c05315ff47db151a6433c32bcf421c7e1e940,815c05315ff47db151a6433c32bcf421c7e1e940,"finagle-core: fix concurrency bug in WatermarkPool#close

Problem

Under high concurrency, the load balancer would get into a
bad state because of a `ConcurrentModificationException` thrown
in the `close` method of `WatermarkPool`. The pool was accessing
`waiters` concurrently because `toSeq` proxies to the underlying
data structure (rather than creating a new one).

Solution

Call `toArray` on `waiters` to get a new collection. Additionally,
catch exceptions in `close` in the balancer so that we don't enter
a bad state.

JIRA Issues: CSL-7468

Differential Revision: https://phabricator.twitter.biz/D261349"
vkostyukov,2019-01-15 21:51:14,https://api.github.com/repos/twitter/finagle/git/commits/069b807ed26afd7beb6721478248885bfdd0c401,069b807ed26afd7beb6721478248885bfdd0c401,"finagle-http: Restructure Netty4 bijections to support header conversion

# Problem / Solution

We're enabling trailers support in finagle-http and we need converters between Netty and Finagle headers.

JIRA Issues: CSL-7011

Differential Revision: https://phabricator.twitter.biz/D260665"
mosesn,2019-01-15 21:41:52,https://api.github.com/repos/twitter/finagle/git/commits/aec73b0c88a812d689db74e47f742368287aebd5,aec73b0c88a812d689db74e47f742368287aebd5,"finagle-core: MethodBuilder#idempotent no longer clobbers response classifiers

Problem

MethodBuilder#idempotent clobbers the specified response classifier. This is
because it only considers the response classifier on the stack when it combines
it with the protocol-supplied response classifier. This means that the method
builder config response classifier gets clobbered.

Solution

Use the stack response classifier for stack stuff, and the config response
classifier for config stuff.  We also ensure that everything is retryable when
you use the MethodBuilder#idempotent, and that nothing is retryable (except
known-good write exceptions) when you use nonIdempotent.

Result

It should be easier to reason about MethodBuilder#idempotent and
MethodBuilder#nonIdempotent.

Follow-up work

Late-bind stack params in MethodBuilder--this entire thing would be easier to
reason about if we weren't trying to muck with two different kinds of parameters
at the same time.

JIRA Issues: CSL-7385

Differential Revision: https://phabricator.twitter.biz/D255275"
enbnt,2019-01-11 23:48:38,https://api.github.com/repos/twitter/finagle/git/commits/4588bc1f0a64f3ff6ab1e241bb0726a79f72ca14,4588bc1f0a64f3ff6ab1e241bb0726a79f72ca14,"finagle-stats-core: introduce flag to allow logging metrics on service shutdown

Problem

Finagle metrics stats collection will not occur between the last collection
 via periodic metrics collection polls and shutdown. As the stats are held
 in memory, they are lost on JVM shutdown and less likely to surface
 issues that may have caused the JVM to exit.

Solution

Modify `c.t.f.s.MetricsExporter` to log metrics when the `com.twitter.finagle.stats.logOnShutdown`
flag is enabled.

Result

Users can configure a flag to allow logging stats that would otherwise be lost after the final
periodic metrics collection.

JIRA Issues: CSL-7305

Differential Revision: https://phabricator.twitter.biz/D253590"
bryce-anderson,2019-01-11 20:59:45,https://api.github.com/repos/twitter/finagle/git/commits/f9875a5b9c047f2b4c3633fa05bd2074e64f1a75,f9875a5b9c047f2b4c3633fa05bd2074e64f1a75,"finagle: Add aperture docs

Problem

We have some docs for the two aperture load balancers but they are not
in the finagle documentation.

Solution

Move them to the finagle docs.

JIRA Issues: CSL-7343

Differential Revision: https://phabricator.twitter.biz/D259446"
mosesn,2019-01-10 22:23:53,https://api.github.com/repos/twitter/finagle/git/commits/54a6cd327968733df168bbeb545283ae46b23846,54a6cd327968733df168bbeb545283ae46b23846,"twitter-oss: update OSS libraries post-release to 19.2.0

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries <Next Version>
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

JIRA Issues: CSL-7429

Differential Revision: https://phabricator.twitter.biz/D259499"
bryce-anderson,2019-01-10 18:23:06,https://api.github.com/repos/twitter/finagle/git/commits/b031e757a624ba082397a849e7fad26073b6e6f1,b031e757a624ba082397a849e7fad26073b6e6f1,"finagle-http: Strip retryable flag from failures during dispatch of chunked requests in ClientNackFilter

Problem

Our `ClientNackFilter` strip the retryable in 503 responses but in HTTP/2
a nack comes back as a `FailureFlags[_]` already, and the `Retryable` flag isn't
stripped.

Solution

Strip it, and add a test.

JIRA Issues: CSL-1527

Differential Revision: https://phabricator.twitter.biz/D258719"
ryanoneill,2019-01-09 00:15:15,https://api.github.com/repos/twitter/finagle/git/commits/5e87e61653078251f1c86bfe51fdb1b051ed808f,5e87e61653078251f1c86bfe51fdb1b051ed808f,"finagle-netty4: Allow Internal Extension of SharedChannelStats

Problem

In some cases, it may be necessary or desirable to track
additional client or server wide metrics which are not accounted
for in the `ChannelStatsHandler`'s `SharedChannelStats`.

Solution

Make `SharedChannelStats` extensible within Finagle. Then provide
a `Stack.Param` which is a constructor function for swapping out the
implementation of `SharedChannelStats` which is used for a particular
client or server.

JIRA Issues: CSL-6941

Differential Revision: https://phabricator.twitter.biz/D258247"
bryce-anderson,2019-01-08 20:15:09,https://api.github.com/repos/twitter/finagle/git/commits/d2c943b5cf71f59ea45a2b9da32e43e94aec700e,d2c943b5cf71f59ea45a2b9da32e43e94aec700e,"finagle-base-http: Change Rfc7230HeaderValidation API

Problem

We want to make the return type of header validation richer to avoid
ambiguities.

Solution

Return variants of a result type instead of booleans, units, and
throwing exceptions.

Differential Revision: https://phabricator.twitter.biz/D258232"
mosesn,2019-01-08 20:13:00,https://api.github.com/repos/twitter/finagle/git/commits/2dd2b13b84b7e3747ab1265ec96f824ad5b74dc6,2dd2b13b84b7e3747ab1265ec96f824ad5b74dc6,"twitter-oss: Prepare OSS libraries for release 19.1.0

Problem

We want to release the next versions of our Twitter OSS libraries 19.1.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-7429

Differential Revision: https://phabricator.twitter.biz/D258182"
yufangong,2019-01-08 18:56:26,https://api.github.com/repos/twitter/finagle/git/commits/ff25b87d14bbff08089069fc2aa8bf1d20d6ffed,ff25b87d14bbff08089069fc2aa8bf1d20d6ffed,"finagle-thrift: Update one test with generic wording.

Problem/Solution:

Update one test with generic wording.

Differential Revision: https://phabricator.twitter.biz/D257955"
nawordar,2019-01-08 18:32:00,https://api.github.com/repos/twitter/finagle/git/commits/601151639898e19669d312208bf8823e3c941abe,601151639898e19669d312208bf8823e3c941abe,"finagle: Added missing space after comma.

Problem/Solution
doc update.

Signed-off-by: Yufan Gong <yufang@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D258057"
ryanoneill,2019-01-07 22:03:59,https://api.github.com/repos/twitter/finagle/git/commits/e33baf8210d0acd4f2fab9877acd1ceea287ab40,e33baf8210d0acd4f2fab9877acd1ceea287ab40,"finagle-thrift: Remove `protocolFactory` from ThriftRichClient/Server

Problem / Solution

The implementations of `ThriftRichClient.protocolFactory` and
`ThriftRichServer.protocolFactory` were deprecated in August 2017.
It is now safe to remove them. This commit removes `protocolFactory`
and the existing implementations.

JIRA Issues: CSL-7425

Differential Revision: https://phabricator.twitter.biz/D256217"
ryanoneill,2019-01-07 19:12:44,https://api.github.com/repos/twitter/finagle/git/commits/e57d2a9156d72ada8a81a590714ece676e423ce6,e57d2a9156d72ada8a81a590714ece676e423ce6,"finagle-thriftmux: Fix `withOpportunisticTls` for ThriftMux Java Users

Problem

Using `withOpportunisticTls` from Java for ThriftMux clients
and servers can be problematic due to confusion as far as what
type the method generically returns.

Solution

Implement the methods concretely in ThriftMux `Client` and
`Server` so that it works without requiring a cast.

JIRA Issues: CSL-6395

Differential Revision: https://phabricator.twitter.biz/D256027"
ryanoneill,2019-01-07 18:59:02,https://api.github.com/repos/twitter/finagle/git/commits/b85f43a0a80d53766eef22c16c5f7c3497b34e87,b85f43a0a80d53766eef22c16c5f7c3497b34e87,"finagle-core: Make Transport Address Methods Final

Problem / Solution

The `Transport.localAddress` and `Transport.remoteAddress` methods
have been deprecated in favor of the respective methods on `TransportContext`
for over a year. They cannot, however, be removed at this time. This commit
provides a default implementation which points at `TransportContext` and marks
the `Transport` methods as final.

JIRA Issues: CSL-7365

Differential Revision: https://phabricator.twitter.biz/D256257"
ryanoneill,2019-01-07 18:54:46,https://api.github.com/repos/twitter/finagle/git/commits/8f5774cbb8d8342ae5785f1bbeb66f5a07420810,8f5774cbb8d8342ae5785f1bbeb66f5a07420810,"finagle-core: Classify Failed Writes As ChannelClosedExceptions

Problem / Solution

Some failed writes are incorrectly classified as `UnknownChannelException`s,
when they should be classified as `ChannelClosedException`s. This is due to a
missing entry for an expected response when a peer closes a connection. Add the
proper response to 'ChannelClosedStrings' so that failed writes are seen
properly as `ChannelClosedException`s.

JIRA Issues: CSL-7399

Differential Revision: https://phabricator.twitter.biz/D256007"
bryce-anderson,2019-01-07 18:37:53,https://api.github.com/repos/twitter/finagle/git/commits/8c685705e1511ab558030136a5b682c77c9d1310,8c685705e1511ab558030136a5b682c77c9d1310,"finagle-base-http: Make the ConnectionManager an interface

Problem

We may want to use different logic in the ConnectionManager for HTTP/1.x
and HTTP/2 but right now we can't because ConnectionManager is a
concrete implementation.

Solution

Make ConnectionManager a trait and make the current ConnectionManager an
implementation of it.

Differential Revision: https://phabricator.twitter.biz/D257291"
mosesn,2019-01-07 17:17:09,https://api.github.com/repos/twitter/finagle/git/commits/c362194c184035375c7d918a0e67ff7afb746480,c362194c184035375c7d918a0e67ff7afb746480,"finagle-stats: Update BUILD file to be more narrow

Problem / Solution

We can narrow the globs for finagle/finagle-stats since it's just one file.

JIRA Issues: CSL-7428

Differential Revision: https://phabricator.twitter.biz/D256506"
bryce-anderson,2019-01-03 23:06:24,https://api.github.com/repos/twitter/finagle/git/commits/9132d0eb2c355a3a26a2eb569af22e1bbb037385,9132d0eb2c355a3a26a2eb569af22e1bbb037385,"finagle-http: Consolidate HTTP codec construction

Problem

We make new instances of the Netty HttpClientCodec and HttpServerCodec
in a number of places repeating the same configuration logic each time.

Solution

Consolidate construction into two helper methods.

JIRA Issues: CSL-7439

Differential Revision: https://phabricator.twitter.biz/D256944"
vkostyukov,2019-01-03 23:05:27,https://api.github.com/repos/twitter/finagle/git/commits/578a9138ce03da2b53eea47e1ee7a5c80750e06c,578a9138ce03da2b53eea47e1ee7a5c80750e06c,"util-core: Move Writer.FailingWriter under finagle-http

Problem

There is no need for a ""failing"" `Writer[Buf]`  instance defined under until-core.

Solution

Move `Writer.FailingWriter` under finagle-http, where it's used.

JIRA Issues: CSL-7011

Differential Revision: https://phabricator.twitter.biz/D256615"
bryce-anderson,2019-01-03 20:57:20,https://api.github.com/repos/twitter/finagle/git/commits/9658ea877f6f36195745172fa425fb0e8d9e56c0,9658ea877f6f36195745172fa425fb0e8d9e56c0,"finagle-http: Remove old test Feature flags

Problem

We have some old Feature flags that are no longer used to disable tests.

Solution

Remove them.

Differential Revision: https://phabricator.twitter.biz/D256901"
mosesn,2019-01-02 21:09:17,https://api.github.com/repos/twitter/finagle/git/commits/d554d2911e1007b23158653be629d04ab9b8f8b2,d554d2911e1007b23158653be629d04ab9b8f8b2,"csl: Http2ToggleTest demonstrates the test issue

Problem

We don't have a good way of confirming that the h2 toggle is also toggled up in
CI / production because local tests don't inspect configbus.

Solution

Provide a test which runs locally without configbus and in CI with configbus.

Differential Revision: https://phabricator.twitter.biz/D247188"
bryce-anderson,2019-01-02 21:01:25,https://api.github.com/repos/twitter/finagle/git/commits/1fe1838ea80acd7e3b4f7bdfa428d8f0aa70bfbc,1fe1838ea80acd7e3b4f7bdfa428d8f0aa70bfbc,"finagle-base-http: Refine the exception thrown in Rfc7230HeaderValidation

Problem

Rfc7230HeaderValidation currently throws an IllegalArgumentException
which is quite vague making it difficult to gracefully handle header
validation failures.

Solution

Refine the exception type thrown.

JIRA Issues: CSL-7427

Differential Revision: https://phabricator.twitter.biz/D256403"
cosmicexplorer,2018-12-27 22:38:01,https://api.github.com/repos/twitter/finagle/git/commits/a423e16a0c151b62b2ca43c5c2ace8689afcaeb0,a423e16a0c151b62b2ca43c5c2ace8689afcaeb0,"finagle: add back rglobs(""*.scala"") for containing scala files

JIRA Issues: DPB-10626

TBR=true

Differential Revision: https://phabricator.twitter.biz/D256026"
bryce-anderson,2018-12-21 22:15:52,https://api.github.com/repos/twitter/finagle/git/commits/ed568c98cfa2d8a1c6f1f59a9e3de63916497bc4,ed568c98cfa2d8a1c6f1f59a9e3de63916497bc4,"finagle-base-http: Introduce tooling for RFC-7230 header validation

Problem

We want to be more rigorous with regard to header validation.

Solution

Introduce validation methods that are RFC compliant.

Differential Revision: https://phabricator.twitter.biz/D255580"
acidghost,2018-12-21 21:46:32,https://api.github.com/repos/twitter/finagle/git/commits/a544fc441e6beb2e3181d57dea5a1b4fd1d4cce8,a544fc441e6beb2e3181d57dea5a1b4fd1d4cce8,"finagle-example: Scala ThriftClient exits without printing response

Problem

The Thrift example was not working properly causing the client to exit without
printing anything. Moreover deprecated methods were used.

Solution

Added Await.result in the client so that it waits for the future to complete
before exiting. Thrift.client.newIface has been replaced with
Thrift.client.build.

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

JIRA Issues: CSL-7397

Differential Revision: https://phabricator.twitter.biz/D255298"
mosesn,2018-12-20 20:15:35,https://api.github.com/repos/twitter/finagle/git/commits/6475680d241f3e9b026b3c3aa6eb94da8c1c37d4,6475680d241f3e9b026b3c3aa6eb94da8c1c37d4,"twitter-server: Ensure admin server and muxer get closed on shutdown

Problem

Shutdown doesn't propagate to admin server handlers, so it can be difficult to
coordinate cleanup for the admin server.

Solution

Thread the close through properly.

Result

Shutting down a TwitterServer can now propagate down to the HttpMuxers that are
set up through service loading.

JIRA Issues: CSL-7407

Differential Revision: https://phabricator.twitter.biz/D254656"
bryce-anderson,2018-12-20 00:16:09,https://api.github.com/repos/twitter/finagle/git/commits/bd4c999aa67c82555dedf4663f3ac315f3000c57,bd4c999aa67c82555dedf4663f3ac315f3000c57,"finagle-base-http: DefaultHeaderMap should reject out of bound characters

Problem

Finagle's `DefaultHeaderMap` doesn't correctly validate header values and
allows out of bounds chars which will be encoded as `?` making it difficult
to know why header values are messed up.

Solution

Reject such header values at the source so it's easy to identify
where invalid characters are being set.

JIRA Issues: CSL-7392

Differential Revision: https://phabricator.twitter.biz/D253702"
kevinoliver,2018-12-19 22:28:22,https://api.github.com/repos/twitter/finagle/git/commits/fe669e56f7a5b271b3e349748aaf4116dcf2bef6,fe669e56f7a5b271b3e349748aaf4116dcf2bef6,"Avoid deprecated com.twitter.conversions

Problem

In phab D249403 these conversions were deprecated.

Solution

Use the new versions.

JIRA Issues: CSL-7356

Differential Revision: https://phabricator.twitter.biz/D254765"
mosesn,2018-12-19 19:13:13,https://api.github.com/repos/twitter/finagle/git/commits/3d039bb2a6f35ee144628e47e21c5943538344e9,3d039bb2a6f35ee144628e47e21c5943538344e9,"finagle: Remove duplicate entry in changelog

Problem / Solution

We added the same entry twice in the changelog.

Differential Revision: https://phabricator.twitter.biz/D254381"
ryanoneill,2018-12-19 18:08:40,https://api.github.com/repos/twitter/finagle/git/commits/eb66ee71b7054112ab6f4618e3e985d56aaa1f44,eb66ee71b7054112ab6f4618e3e985d56aaa1f44,"finagle-core: Remove `ServerBuilder` `Server` Bridge Type

Problem / Solution

The `c.t.f.b.Server` type provides no additional functionality over
`c.t.f.ListeningServer`. Its one method, `localAddress`, has been
deprecated for 4 years and is just a rename of
`ListeningServer.boundAddress`. Let's remove `Server` and change
all uses of it to `ListeningServer` instead.

JIRA Issues: CSL-7402

Differential Revision: https://phabricator.twitter.biz/D254339"
kevinoliver,2018-12-19 03:12:45,https://api.github.com/repos/twitter/finagle/git/commits/8e2958aa6a3b69f602f3f9fa560f84e7bfb88e15,8e2958aa6a3b69f602f3f9fa560f84e7bfb88e15,"Avoid deprecated com.twitter.conversions

Problem

In phab D249403 these conversions were deprecated.

Solution

Use the new versions. Note that `c.t.c.time` and
non-wildcard imports still need conversions.

JIRA Issues: CSL-7356

Differential Revision: https://phabricator.twitter.biz/D254011"
bryce-anderson,2018-12-18 00:09:36,https://api.github.com/repos/twitter/finagle/git/commits/de5fadbe8702438d08b5893b81c5e562a67b72a6,de5fadbe8702438d08b5893b81c5e562a67b72a6,"finagle-base-http: Don't include header values in exceptions

Problem

We add the header value to the details of the IllegalArgumentException
thrown when a header value fails validation.

Solution

Don't add the value to the details but do add the header name.

JIRA Issues: CSL-7398

Differential Revision: https://phabricator.twitter.biz/D253907"
mgodave,2018-12-17 20:08:57,https://api.github.com/repos/twitter/finagle/git/commits/25e5551b0853395f0e742a43ef6b5d60f5521bfc,25e5551b0853395f0e742a43ef6b5d60f5521bfc,"finagle-core: Extend WireTracingFilter to the server

Problem

Finagle servers do not annotate traces with WireReceive or WireSend annotations.

Solution

Add WireReceive and WireSend annotations as close to the bottom as possible for
the StackServer. Move the ServerReceive and ServerSend annotations close to the
listener.

Result

Finagle servers will generate traces with WireReceive, ServerReceive,
ServerSend, and WireSend annotations, in that order.

JIRA Issues: CSL-7201

Differential Revision: https://phabricator.twitter.biz/D246503"
ryanoneill,2018-12-17 19:07:45,https://api.github.com/repos/twitter/finagle/git/commits/9f637b5e41b9ea77129c4a48f4327e3b51787526,9f637b5e41b9ea77129c4a48f4327e3b51787526,"finagle-core: Have `StackBasedServer` Extend `Stack.Transformable`

Problem

`StackBasedClient` extends `Stack.Transformable` while `StackBasedServer`
does not. With recent changes to `ServerBuilder` to maintain a hold on a
`StackBasedServer` instance, it would be beneficial to be able to manipulate
the `Stack` via that `StackBasedServer` instance.

Solution

Have `StackBasedServer` extend `Stack.Transformable`, which also brings it
into parity with `StackBasedClient` on this front.

JIRA Issues: CSL-7390

Differential Revision: https://phabricator.twitter.biz/D253542"
ryanoneill,2018-12-17 18:53:23,https://api.github.com/repos/twitter/finagle/git/commits/5be016a6c666029a92917a1223aa3e5c5b7066d8,5be016a6c666029a92917a1223aa3e5c5b7066d8,"finagle-mux: Move OpportunisticTlsConfig to the Correct Location

Problem / Solution

`c.t.f.m.t.OpportunisticTlsConfig` is not in the correct directory
based on its namespace. Move it.

JIRA Issues: CSL-7393

Differential Revision: https://phabricator.twitter.biz/D253602"
bryce-anderson,2018-12-14 05:11:42,https://api.github.com/repos/twitter/finagle/git/commits/e3f349a637d544e283ed58d2ba0dfcc9250ced28,e3f349a637d544e283ed58d2ba0dfcc9250ced28,"finagle-http: More cleanup for AbstractStreamingTest

Problem

We have some complex logic in AbstractStreamingTest for closing server
connections when we already have that: `server.close()`.

Solution

Remove the complex stuff and replace it with `server.close()`.

Differential Revision: https://phabricator.twitter.biz/D253025"
vkostyukov,2018-12-13 20:01:01,https://api.github.com/repos/twitter/finagle/git/commits/2f182d501780d6ab214df86c041a30803a3f6439,2f182d501780d6ab214df86c041a30803a3f6439,"finagle-http: Add tests verying that Reader.onClose and Writer.onClose propagate closures

Problem:

We need tests that ensure `Reader.onClose` and `Writer.onClose` propagate closures initiated remotely.

Solution:

Add these tests.

JIRA Issues: CSL-7103

Differential Revision: https://phabricator.twitter.biz/D251936"
bryce-anderson,2018-12-13 16:14:56,https://api.github.com/repos/twitter/finagle/git/commits/6f12247c9c526426c808a055888a6a120193135f,6f12247c9c526426c808a055888a6a120193135f,"finagle-http: Cleanup Http2StreamingTest

Problem

The Http2StreamingTest has some special logic for only disconnecting
the stream channels, but this is really weird because what we really
want to do is cut the connection and cutting the stream transport only
closes the stream.

Solution

Remove the special casing.

Differential Revision: https://phabricator.twitter.biz/D249701"
ryanoneill,2018-12-13 05:32:31,https://api.github.com/repos/twitter/finagle/git/commits/4be953d433899b0dc4d4a6155283699c8cd8c06d,4be953d433899b0dc4d4a6155283699c8cd8c06d,"finagle-core: Change ServerBuilder to Act Like ClientBuilder

Problem / Solution

`ServerBuilder` does not maintain a reference to the underlying
`Stack` implementation except through means of a function which
constructs a `Server`. This means that extensions to `ServerBuilder`
are incapable of manipulating the underlying `Stack` (to add a `Stack`
module as an example). `ClientBuilder` allows this. With the change to
remove a deprecated `stack` method from `ServerBuilder`, `ServerBuilder`
can too. Change `ServerBuilder` to hold onto the underlying `Stack`
implementation directly and work more like `ClientBuilder`.

JIRA Issues: CSL-7384

Differential Revision: https://phabricator.twitter.biz/D252142"
mosesn,2018-12-12 22:38:33,https://api.github.com/repos/twitter/finagle/git/commits/5f96fcb2b042f641de7db10428981b8bcb2a4e0a,5f96fcb2b042f641de7db10428981b8bcb2a4e0a,"finagle-http2: Server shouldn't require httpCompressor

Problem

Http2CleartextServerInitializer adds H2Filter before the httpCompressor role
in the netty pipeline, but the httpCompressor role doesn't always get added.
In particular, when the compression level is set to 0, we skip adding it
entirely.

Solution

Change from adding it before the httpCompressor role to instead adding it after
the Http2MultiplexCodec#0 role, which is the same position, but the multiplex
codec gets added unconditionally.

JIRA Issues: CSL-7376

Differential Revision: https://phabricator.twitter.biz/D251320"
mgodave,2018-12-12 19:20:41,https://api.github.com/repos/twitter/finagle/git/commits/bd3ac0def94518f2a2a7d5aa47bfe03e1269e3dc,bd3ac0def94518f2a2a7d5aa47bfe03e1269e3dc,"Twitter-oss: update OSS libraries post-release to 19.1.0

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 19.1.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D252019"
kevinoliver,2018-12-12 19:10:03,https://api.github.com/repos/twitter/finagle/git/commits/b9fe5c8d41e7246e0dda31e9c178ae0d7d09c571,b9fe5c8d41e7246e0dda31e9c178ae0d7d09c571,"finagle-stats: Split module

Problem

finagle-stats includes service loading which
makes it difficult to reuse the implementation.

Solution

Split the implementation into finagle-stats-core
and leave service loading in finagle-stats.

Result

Devs can reuse the implementation for other purposes.

Differential Revision: https://phabricator.twitter.biz/D249875"
mgodave,2018-12-12 17:51:24,https://api.github.com/repos/twitter/finagle/git/commits/2f3fbab2c21f1f4ed381cb6bdae26fa02551eba4,2f3fbab2c21f1f4ed381cb6bdae26fa02551eba4,"finagle: Update finagle CHANGES with correct PHAB_ID tag

Problem

An incorrect PHAB_ID was given for a redis change.

Solution

Update CHANGES with the correct PHAB_ID

Differential Revision: https://phabricator.twitter.biz/D252034"
ryanoneill,2018-12-12 02:32:58,https://api.github.com/repos/twitter/finagle/git/commits/a05e5e7b69d1b8237d8a6360d00c031172a2db0f,a05e5e7b69d1b8237d8a6360d00c031172a2db0f,"finagle-core: Remove Deprecated ServerBuilder.stack Method

Problem / Solution
The `ServerBuilder.stack` method which takes a function has
been deprecated for at least three years. It prevents the `ServerBuilder`
class from being structured in a similar fashion to `ClientBuilder` and
should be removed. This commit removes it.

JIRA Issues: CSL-7377

Differential Revision: https://phabricator.twitter.biz/D251975"
mgodave,2018-12-11 15:28:48,https://api.github.com/repos/twitter/finagle/git/commits/8d741a599d0af0975d1a4a94674d989c187f6c79,8d741a599d0af0975d1a4a94674d989c187f6c79,"Twitter-oss: Prepare OSS libraries for release 18.12.0

Problem

We want to release the next versions of our Twitter OSS libraries 18.12.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D251041"
roanta,2018-12-10 23:10:13,https://api.github.com/repos/twitter/finagle/git/commits/2d3c74643fcc37613803cea207a1a29c863edfdf,2d3c74643fcc37613803cea207a1a29c863edfdf,"finagle-core: allow the ability to set a global trace service name

Problem

It's useful to derive a service name for a trace from the environment.
For example, using a process coordinate can be more descriptive than
the user specified label.

Solution

Expose an API which allows us to set the label globally and prefer
it when it is available.

JIRA Issues: CSL-7279

TBR=true

Differential Revision: https://phabricator.twitter.biz/D242655"
ryanoneill,2018-12-10 18:54:28,https://api.github.com/repos/twitter/finagle/git/commits/ab0432b4a56f993802c68af9b3633f0b461ec97a,ab0432b4a56f993802c68af9b3633f0b461ec97a,"finagle-core: Remove Deprecated `Transport.peerCertificate` Method

Problem / Solution

The `Transport.peerCertificate` method (not the Finagle context of the
same name) is deprecated in favor of `TransportContext.peerCertificate`.
This commit removes the deprecated method.

JIRA Issues: CSL-7324

Differential Revision: https://phabricator.twitter.biz/D250027"
bryce-anderson,2018-12-10 17:06:12,https://api.github.com/repos/twitter/finagle/git/commits/29d80c88db634bee169b12fcc31632cd230f2d9a,29d80c88db634bee169b12fcc31632cd230f2d9a,"finagle-netty4: Remove the ServerBridge from the Netty pipeline after activation

Problem / Solution

After the ServerBridge stage has installed the Transport and initiated
server execution it doesn't need to be in the pipeline, so lets eject
it after it's done its work to keep things lean and clean.

Differential Revision: https://phabricator.twitter.biz/D250416"
bryce-anderson,2018-12-10 16:31:11,https://api.github.com/repos/twitter/finagle/git/commits/d74586a1dee9ee590db321f71596cd325d6b7fa9,d74586a1dee9ee590db321f71596cd325d6b7fa9,"finagle-http2: Even better shutdown in H2Filter

Problem

If the close deadline had already expired we don't attempt the smart
graceful shutdown, and also don't set the Http2ConnectionHandlers
graceful shutdown time, which by default is set to 30 seconds. If we
don't send a GOAWAY ourselves, as in the case of the deadline already
being expired, we end up using the default.

Solution

If we don't send a GOAWAY ourselves then set the deadline.

JIRA Issues: CSL-7372

Differential Revision: https://phabricator.twitter.biz/D250492"
ryanoneill,2018-12-06 00:44:16,https://api.github.com/repos/twitter/finagle/git/commits/cddfbb45420873e7562d1d71360b3f10d930a77d,cddfbb45420873e7562d1d71360b3f10d930a77d,"finagle-core: Remove LegacyContext

Problem / Solution

`LegacyContext` mixes methods from `Transport` and `TransportContext` in
a way that was meant to act as a temporary bridge. In order to remove the
deprecated methods on `Transport`, we need to remove `LegacyContext`. So,
this commit removes `LegacyContext`.

JIRA Issues: CSL-7325

Differential Revision: https://phabricator.twitter.biz/D249453"
paradigmsort,2018-12-05 22:06:36,https://api.github.com/repos/twitter/finagle/git/commits/c4a301a003a87ba4aded3993a50c02dec95b1d8a,c4a301a003a87ba4aded3993a50c02dec95b1d8a,"Update scalafmt config for finagle.

Problem:
  The scalafmt config doesn't match the Twitter Style Guide.
  This causes angst and makes onboarding new folks onto scalafmt
  a difficult sell.

Solution:
  Update the scalafmt config, and everyone who has opted into
  automatic application of scalafmt.

Result:
  The code automatically matches the style guide, and people
  are happier to adopt scalafmt."
kevinoliver,2018-12-05 01:13:08,https://api.github.com/repos/twitter/finagle/git/commits/803d644825192416bb7803a95e997774f7ef5e43,803d644825192416bb7803a95e997774f7ef5e43,"finagle-http: Fix flaky AbstractHttp2EndToEndTest test

Problem / Solution

The unit test ""AbstractHttp2EndToEndTest.client closes properly when
closed"" would sometimes fail as the `closes` counter was not always
updated synchronously.

JIRA Issues: CSL-7338

Differential Revision: https://phabricator.twitter.biz/D248897"
kevinoliver,2018-12-04 22:06:54,https://api.github.com/repos/twitter/finagle/git/commits/f75f31863eef8e2743b7d473639e176547746f99,f75f31863eef8e2743b7d473639e176547746f99,"finagle-opencensus-tracing: Add integration module

Problem

There is a desire for some Finagle-based services to
integrate with OpenCensus (https://opencensus.io/) tracing.

Solution

Introduce a new experimental module, finagle-opencensus-tracing, that
does so.

Result

This lets Finagle clients and servers participate in OpenCensus
tracing as requests flow from a Finagle client to a Finagle server to
an OpenCensus-instrumented service (e.g. GCP's Bigtable).

Clients and servers can install this functionality by using
`StackClientOps` and `StackServerOps`.

Notes:

 - This is not an implementation of Finagle's tracing APIs
 - HTTP and ThriftMux are the supported protocols

This module does not specify an OpenCensus exporter. As such, your
application must add the proper dependencies to export to a specific
backend.

For example, to use GCP Stackdriver you would add the dependency on
`io.opencensus:opencensus-exporter-trace-stackdriver`.

JIRA Issues: CSL-7184

Differential Revision: https://phabricator.twitter.biz/D246544"
bryce-anderson,2018-12-04 20:17:35,https://api.github.com/repos/twitter/finagle/git/commits/095a557a724d003cc8d11041c4c02a8c5eea8a73,095a557a724d003cc8d11041c4c02a8c5eea8a73,"finagle-netty4: Remove workaround for already closed channels

Problem

We introduced an 'already closed' mechanism in the `ChannelTransport` to
avoid an out-of-order events situation with the Http2MultiplexCodec
StreamChannel. That has now been fixed.

Solution

Remove the workaround.

JIRA Issues: CSL-7297

Differential Revision: https://phabricator.twitter.biz/D248337"
bryce-anderson,2018-12-04 18:14:53,https://api.github.com/repos/twitter/finagle/git/commits/0180ea0972cf13984a252b834645bff9b6b90d88,0180ea0972cf13984a252b834645bff9b6b90d88,"finagle-core: Shave some overhead in FailAccrualFactory

Problem

We're making some extra junk by using an extra future callback in
FailureAccrualFactory.

Solution

Clean it up.

Differential Revision: https://phabricator.twitter.biz/D248563"
dschobel,2018-12-04 01:20:37,https://api.github.com/repos/twitter/finagle/git/commits/ec76176c9a6b1b657b5e0afd176353ac0cd5c76a,ec76176c9a6b1b657b5e0afd176353ac0cd5c76a,"finagle/util/scrooge/twitter-server: update owners

Problem / Solution

Update OWNERS files.

Differential Revision: https://phabricator.twitter.biz/D248571"
mosesn,2018-12-03 16:31:27,https://api.github.com/repos/twitter/finagle/git/commits/43c0b69c04be6ea31e5eaf6feb0fd9bbd1856f77,43c0b69c04be6ea31e5eaf6feb0fd9bbd1856f77,"finagle-http: Renaming toggle from UseH2CClients to UseH2CClients2

Problem / Solution

Renaming the toggle from UseH2CClients to UseH2CClients2.

JIRA Issues: PCM-85166

TBR=true

Differential Revision: https://phabricator.twitter.biz/D247320"
bryce-anderson,2018-12-01 00:17:56,https://api.github.com/repos/twitter/finagle/git/commits/4916ea3f8267a9f8e02484f396cbaf7892dbd4c7,4916ea3f8267a9f8e02484f396cbaf7892dbd4c7,"finagle-netty4-http: Allow revalidation of Netty headers

Problem / Solution

Netty validation is slightly different than Finagle header validation
and folks should be able to enable consistent validation of headers in
and out of Finagle types.

Solution

Add a new flag (default off) that enables Finagle validation of headers
when converting from Netty types.

JIRA Issues: CSL-7304

Differential Revision: https://phabricator.twitter.biz/D247810"
ryanoneill,2018-11-30 22:03:51,https://api.github.com/repos/twitter/finagle/git/commits/1bd89b5f418885561b92ce4801b00c7aa6c08487,1bd89b5f418885561b92ce4801b00c7aa6c08487,"finagle-core: Stop Using Deprecated peerCertificate in Finagle

Problem / Solution

The `peerCertificate` method within the `Transport` class is deprecated
and will eventually be removed in favor of `TransportContext.peerCertificate`.
This commit switches the code to use the supported method instead of the
deprecated one.

JIRA Issues: CSL-7328

Differential Revision: https://phabricator.twitter.biz/D247874"
ryanoneill,2018-11-29 21:36:07,https://api.github.com/repos/twitter/finagle/git/commits/fd97536f63a3f72c868fa4ae5e17772b21ccfc14,fd97536f63a3f72c868fa4ae5e17772b21ccfc14,"finagle-core: Remove Deprecated 'status' Method from `TransportContext`

Problem / Solution

The 'status' method on `TransportContext` within finagle-core is deprecated
in favor of the 'status' method on `Transport` itself. Remove the deprecated
'status' method on `TransportContext`.

JIRA Issues: CSL-7323

Differential Revision: https://phabricator.twitter.biz/D247234"
kevinoliver,2018-11-29 21:15:16,https://api.github.com/repos/twitter/finagle/git/commits/f1a980cfdb780963d1e4e146d9031a93b43b107d,f1a980cfdb780963d1e4e146d9031a93b43b107d,"finagle-core: Introduce a `StackServer.withStack` overload

Problem

When using a server protocol object (e.g. `c.t.finagle.Http.server`),
modifying the `Stack` is unnatural when paired with the usual method
chaining style.

Solution

Introduce a `StackServer.withStack` overload that makes
modifying the existing `Stack` easier when using method chaining.

JIRA Issues: CSL-7224

Differential Revision: https://phabricator.twitter.biz/D246893"
bryce-anderson,2018-11-29 03:49:06,https://api.github.com/repos/twitter/finagle/git/commits/5c11b61a06faebaa435202e512d53d52358c9326,5c11b61a06faebaa435202e512d53d52358c9326,"finagle/finatra: Validate more headers

Problem / Solution

We should err on the side of caution and validate some headers that are
probably, but not obviously, safe.

Differential Revision: https://phabricator.twitter.biz/D246889"
bryce-anderson,2018-11-28 23:16:38,https://api.github.com/repos/twitter/finagle/git/commits/51c4f789f106a8ca433956b72a6d478c2189f5f0,51c4f789f106a8ca433956b72a6d478c2189f5f0,"finagle-base-http: Replace obs-fold in header values

Problem

As of RFC 7230, the HTTP obs-fold is obsolete and shouldn't be
directly interpreted or forwarded.

Solution

Replace them in header value validation with a SP char, which
is the recommended thing to do per RFC 7230.
https://tools.ietf.org/html/rfc7230#section-3.2.4

JIRA Issues: CSL-7002

Differential Revision: https://phabricator.twitter.biz/D245928"
ryanoneill,2018-11-27 01:57:03,https://api.github.com/repos/twitter/finagle/git/commits/b8b850bb9e37449854f4c983bbc8f821987cdb59,b8b850bb9e37449854f4c983bbc8f821987cdb59,"finagle-core: Remove `Closable` from `TransportContext`

Problem / Solution

There are a group of methods which are duplicated between
`Transport` and `TransportContext`, with some being deprecated
on each side. Let's remove the deprecated 'close' related methods
and traits from `TransportContext`.

JIRA Issues: CSL-7294

Differential Revision: https://phabricator.twitter.biz/D244742"
ryanoneill,2018-11-27 00:22:42,https://api.github.com/repos/twitter/finagle/git/commits/9f01db22ce77b700d3b1fcefc11ea8a2b9c73e67,9f01db22ce77b700d3b1fcefc11ea8a2b9c73e67,"finagle-netty4: Make `Channel` in `ChannelTransportContext` Accessible

Problem / Solution

For certain protocols, it is necessary to be able to grab the Netty
`Channel` via the `ChannelTransportContext` in order to manipulate
the pipeline to add other handlers, e.g. SSL/TLS handlers. Make the
`Channel` that is passed in via the `ChannelTransportContext`
constructor accessible.

JIRA Issues: CSL-7296

Differential Revision: https://phabricator.twitter.biz/D244805"
ryanoneill,2018-11-26 23:45:50,https://api.github.com/repos/twitter/finagle/git/commits/4afe144604e7f0799ac1231f015f92dd3da060ae,4afe144604e7f0799ac1231f015f92dd3da060ae,"finagle-mysql: Add Timeouts to Tests

Problem / Solution

Multiple calls to `Await.result` and `Await.ready` in finagle-mysql
tests are missing timeouts. Add them.

JIRA Issues: CSL-7298

Differential Revision: https://phabricator.twitter.biz/D244843"
ryanoneill,2018-11-26 23:39:03,https://api.github.com/repos/twitter/finagle/git/commits/20c8d50f248d8ef3f32c5dc3140f37c69ec726dc,20c8d50f248d8ef3f32c5dc3140f37c69ec726dc,"finagle-mysql: Make `Handshake` Private

Problem / Solution

The `Handshake` class and companion object are used within
the non-public `ClientDispatcher`. The `Handshake` class also
needs to change substantially to support SSL/TLS. Having it be
public is unnecessary and prevents further changes. Let's make
it private.

JIRA Issues: CSL-7269

Differential Revision: https://phabricator.twitter.biz/D244734"
roanta,2018-11-26 21:34:17,https://api.github.com/repos/twitter/finagle/git/commits/8354680f29780dd9af1dbe196c9227f1d7f1ed60,8354680f29780dd9af1dbe196c9227f1d7f1ed60,"finagle-zipkin-core: add timestamp to Span (and thrift)

Problem / Solution

The zipkin collector will ""guess"" the timestamp a span is created
at if there is no timestamp present. It's easy to generate correct
timestamps locally and serialize them so the collector doesn't have
to employ any (potentially incorrect and complex) heuristics.

Differential Revision: https://phabricator.twitter.biz/D242204"
kenchan0130,2018-11-26 20:56:36,https://api.github.com/repos/twitter/finagle/git/commits/dfa92b56161be867dc305a5ebf958055d8a5e370,dfa92b56161be867dc305a5ebf958055d8a5e370,"util-core: Change `Future.???` method from val to def

Problem

Currently, Future.??? always returns the same instance and
therefore we cannot get valid stacktrace (information on where it
is defined).

Solution

Change Future.??? from a val to def.

Result

The exception has a relevant stacktrace.

Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-7301

Differential Revision: https://phabricator.twitter.biz/D245326"
mosesn,2018-11-26 19:47:07,https://api.github.com/repos/twitter/finagle/git/commits/e9906207cd461df40f064078775af9a6382e8074,e9906207cd461df40f064078775af9a6382e8074,"util-core: Provide a way to listen for stream termination

Problem

It can be useful to know when a stream is closed for implementing many common
questions, like ""how long has my stream taken to finish"" or ""did my stream
finish successfully?"" but there is not currently a good way to tell.

Solution

Provide Reader#onClose which will be satisfied after the stream is finished,
discarded, or failed.

JIRA Issues: CSL-6813

TBR=true

Differential Revision: https://phabricator.twitter.biz/D236311"
luciferous,2018-11-26 19:36:04,https://api.github.com/repos/twitter/finagle/git/commits/8e0f4b868c34259350fb0def2e7fee5d3d77fece,8e0f4b868c34259350fb0def2e7fee5d3d77fece,"finagle: Bump Netty to version 4.1.31.Final

Problem / Solution

We're bumping our Netty version to the latest release to get a number of
bug fixes and improvements.

JIRA Issues: CSL-7135

Differential Revision: https://phabricator.twitter.biz/D235402"
bryce-anderson,2018-11-26 18:38:49,https://api.github.com/repos/twitter/finagle/git/commits/ce06034d7e2c4e25f288267e2f30852aaf7d2e2f,ce06034d7e2c4e25f288267e2f30852aaf7d2e2f,"finagle-base-http: Add a comment about an intermediate promise

Problem

It's not obvious why we use an intermediate Promise in `HttpTransport`
and it seems unnecessary, but it's needed to avoid a race condition.

Solution

Add a code comment.

Differential Revision: https://phabricator.twitter.biz/D245339"
bryce-anderson,2018-11-26 17:53:39,https://api.github.com/repos/twitter/finagle/git/commits/1c3c702e65187e4d6a3db8614bce1ec38e08bf84,1c3c702e65187e4d6a3db8614bce1ec38e08bf84,"finagle-redis: Don't run stream command integration tests on redis < 5.0.0

Problem

The new stream commands require redis version 5.0 or later which is
pretty new and may not be in every test environment. This can lead to
false positives.

Solution

Ignore the stream command tests in environments that don't have the
minimum required redis version of 5.0.0.

JIRA Issues: CSL-7300

Differential Revision: https://phabricator.twitter.biz/D244946"
ryanoneill,2018-11-21 01:13:07,https://api.github.com/repos/twitter/finagle/git/commits/0344d2867a7e9f62072c7c6609a0422102d09ae4,0344d2867a7e9f62072c7c6609a0422102d09ae4,"finagle-mysql: Remove `Handshake` from `ClientDispatcher` API

Problem

When TLS is added to finagle-mysql, the `Handshake` will no longer
occur as part of the `ClientDispatcher` and will instead happen as
part of an eventual `MysqlTransporter`. Currently, `Handshake` is
part of the `ClientDispatcher` construction API. This prevents it
from being moved and eventually removed.

Solution

Change the `ClientDispatcher` to take a generic set of `Stack.Params`,
and make the `Handshake` an implementation detail.

JIRA Issues: CSL-7284

Differential Revision: https://phabricator.twitter.biz/D244357"
chrisbenincasa,2018-11-20 23:58:10,https://api.github.com/repos/twitter/finagle/git/commits/ba578c1445b2e241687ad3c89eec4f3d93431a76,ba578c1445b2e241687ad3c89eec4f3d93431a76,"finagle-redis: Add support for Stream APIs

Problem

Redis 5.0 was released recently and brought with it the new Stream
API. The finagle-redis client should support these new APIs.

Solution

Added support for the Stream API in the finagle-redis client.

Result

Users of the finagle-redis library will be able to access the new Stream
API which is now generally available on Redis >=5.0.

Signed-off-by: Jordan Parker <jparker@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D244329"
ryanoneill,2018-11-20 23:36:46,https://api.github.com/repos/twitter/finagle/git/commits/d8210a9c65be6ea72f016e200c4477af5305d107,d8210a9c65be6ea72f016e200c4477af5305d107,"finagle-core: Remove `ContextBasedTransport`

Problem / Solution

`ContextBasedTransport` appears to be no longer used, and it's access
level is set as 'private[finagle]'. So, let's remove it.

JIRA Issues: CSL-7053

Differential Revision: https://phabricator.twitter.biz/D221863"
dadjeibaah,2018-11-20 22:24:58,https://api.github.com/repos/twitter/finagle/git/commits/21664df3700257de3165511c2625d232c399322b,21664df3700257de3165511c2625d232c399322b,"finagle-core: Handle empty address sets in TrafficDistributor

Problem

Finagle's TrafficDistributor is used to build endpoints with their associated
weight classes. This endpoint-to-weight class grouping is used to create load
balancers used to balance requests for a particular endpoint stack. A
TrafficDistributor's load balancer are tracked in the global BalancerRegistry
every time there is an address set change for a particular service. The issue is
that TrafficDistributor has two places in its code that creates a load balancer
and one of these balancers never gets destroyed when a service is closed. This
causes a leak in BalancerRegistry This scenario is evident when a service's
address set alternates periodically between an empty address set to a valid
populated address set.

Solution

This PR removes code that extraneously creates an empty load balancer and adds
it to the partition method in TrafficDistributor. This causes TrafficDistributor
to manage address state in one area and avoids the object leak.

Signed-off-by: Jordan Parker <jparker@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D244335"
luciferous,2018-11-20 18:39:26,https://api.github.com/repos/twitter/finagle/git/commits/12998e901cd5c558fa68fb4dc946d51a15951d55,12998e901cd5c558fa68fb4dc946d51a15951d55,"finagle: Preemptively remove unsupported ciphers

Problem

While preparing to upgrade Netty and tcnative, we discovered that an
upstream dependency (boringssl) had removed support for CBC ciphers.

Solution

Remove unsupported ciphers.

JIRA Issues: CSL-7293

Differential Revision: https://phabricator.twitter.biz/D244189"
ryanoneill,2018-11-20 17:31:57,https://api.github.com/repos/twitter/finagle/git/commits/17747e1a969ee5a39c45852ca3d5486cb9600c10,17747e1a969ee5a39c45852ca3d5486cb9600c10,"finagle-mysql: Remove Deprecated Client.apply Method

Problem / Solution

An overloaded version of the `c.t.f.m.Client.apply` method has
been deprecated for over a year and is now preventing other changes.
Let's remove it.

JIRA Issues: CSL-7285

TBR=true

Differential Revision: https://phabricator.twitter.biz/D243038"
cacoco,2018-11-19 22:25:58,https://api.github.com/repos/twitter/finagle/git/commits/f46e1f771477102c93f4f82a54d0d1292a4dffba,f46e1f771477102c93f4f82a54d0d1292a4dffba,"finagle-thrift: Add c.t.finagle.thrift.MethodMetadata#asCurrent

Problem/Solution

It can be useful to set the `MethodMetadata` to a current value.
Add a way to do this easily.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D243625"
ryanoneill,2018-11-15 18:42:15,https://api.github.com/repos/twitter/finagle/git/commits/d30c5549500e9e6876647a9365823ceae1cddd0b,d30c5549500e9e6876647a9365823ceae1cddd0b,"finagle-mysql: Move Params to com.twitter.finagle.mysql.param

Problem / Solution

`Stack` params for finagle-mysql are split between the `Mysql` object
and the `Handshake` object. Let's move them all to a consistent namespace
and place.

JIRA Issues: CSL-7270

TBR=true

Differential Revision: https://phabricator.twitter.biz/D242473"
kevinoliver,2018-11-15 18:32:01,https://api.github.com/repos/twitter/finagle/git/commits/30a8000c4a910134219fc1317cead9735ca97cbb,30a8000c4a910134219fc1317cead9735ca97cbb,"finagle-core: Add Java compatibility for Name

Problem

Some of `c.t.f.Name` was difficult to use from Java.

Solution

Add Java compatibility and tests.

JIRA Issues: CSL-7228

Differential Revision: https://phabricator.twitter.biz/D242084"
ryanoneill,2018-11-15 02:02:44,https://api.github.com/repos/twitter/finagle/git/commits/05354cd55a2307d51b9cec24bd747786cd6db068,05354cd55a2307d51b9cec24bd747786cd6db068,"finagle-mysql: Rename `Charset` Object to `MysqlCharset`

Problem / Solution

The `c.t.f.m.Charset` name can clash with the `Charset` `Stack`
parameter. Rename the `Charset` object to `MysqlCharset` to resolve
the ambiguity.

JIRA Issues: CSL-7268

TBR=true

Differential Revision: https://phabricator.twitter.biz/D240965"
grimreaper,2018-11-15 01:53:27,https://api.github.com/repos/twitter/finagle/git/commits/18995b77beb0438de5dd4fedc66e5ab596fd0488,18995b77beb0438de5dd4fedc66e5ab596fd0488,"[cleanup] Remove zookeeper-server where it is not needed

This was a really naive diff. I first
(a) removed zookeeper-server from everything
(b) added it back to a handful of ""obvious"" places
(c) ran sandbox compile only. I then blindly followed its directions
w.r.t. missing dependencies. This mostly added the *client* to a
few places.
(d) ran sandbox and blindly added the server to all failing targets.
(e) ran sandbox and observed everything pass.
(f) rebased
(g) edited things to pass sandbox again

It is possible that zookeeper-server is still over-linked; but it is
much better than before.

Differential Revision: https://phabricator.twitter.biz/D242209"
kevinoliver,2018-11-14 23:02:42,https://api.github.com/repos/twitter/finagle/git/commits/cff9aeddc0ae6ceb4c50cb8d67b3418a133d30f9,cff9aeddc0ae6ceb4c50cb8d67b3418a133d30f9,"finagle-core: Java compat for TypeAgnostic.Identity

Problem

Java users don't have a clean API to access `Filter.TypeAgnostic.Identity`.

Solution

Introduce `Filter.typeAgnosticIdentity()`.

JIRA Issues: CSL-7227

Differential Revision: https://phabricator.twitter.biz/D242006"
roanta,2018-11-14 21:20:26,https://api.github.com/repos/twitter/finagle/git/commits/bee587485169b81e26e52c412c1d092c666e16ff,bee587485169b81e26e52c412c1d092c666e16ff,"finagle-{http,mux}: move payload size filter in the stack

Problem / Solution

Because the [[PayloadSizeFilter]] now traces, its relative position in the
stack is important. That is, if we don't have the tracing context initialized
before a request reaches the filter, it won't trace. To fix this, we move the
filter ""after"" the [[TraceInitializationFilter]].

Differential Revision: https://phabricator.twitter.biz/D242037"
cacoco,2018-11-14 20:10:54,https://api.github.com/repos/twitter/finagle/git/commits/7b22e4efb5efd14296f2a080b1eb2ccab38db804,7b22e4efb5efd14296f2a080b1eb2ccab38db804,"finagle-thrift,scrooge-generator: Add `c.t.finagle.thrift.MethodMetadata`

Problem

It is not easy to obtain information about the current Thrift method being invoked
in the application `Service[-R, +R]` being executed.

Solution

Set a new `MethodMetadata` which contains information about the Thrift method
being invoked in the generated Java and Scala code via a `LocalContext` Key and
accessor provided by the new `c.t.finagle.thrift.MethodMetadata`.

Result

Application code being executed can look in the `LocalContext` to determine the
current Thrift method being executed.

JIRA Issues: CSL-7282

Differential Revision: https://phabricator.twitter.biz/D241295"
kevinoliver,2018-11-13 16:34:08,https://api.github.com/repos/twitter/finagle/git/commits/44f75b9a1beb287928df7cc6dc423c6c52623c4c,44f75b9a1beb287928df7cc6dc423c6c52623c4c,"Twitter-oss: update OSS libraries post-release to 18.12

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries <Next Version>
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D241161"
ryanoneill,2018-11-13 02:28:40,https://api.github.com/repos/twitter/finagle/git/commits/24a0b91c1e1dbcce8d118dacbc9a11fc9db3a4e5,24a0b91c1e1dbcce8d118dacbc9a11fc9db3a4e5,"finagle-mysql: Use Fully Qualified Param Import In RollbackFactory

Problem / Solution

`RollbackFactory` uses a relative import for accessing the `Stats` param. This
becomes a problem for further refactorings which will move finagle-mysql params
to the 'com.twitter.finagle.mysql.param' namespace. So, use a fully-qualified
import in `RollbackFactory` instead.

JIRA Issues: CSL-7267

Differential Revision: https://phabricator.twitter.biz/D240927"
bryce-anderson,2018-11-13 01:09:37,https://api.github.com/repos/twitter/finagle/git/commits/c190b84ab6f4230f1ef2e4ffebed223fbc6c4d57,c190b84ab6f4230f1ef2e4ffebed223fbc6c4d57,"finagle-http2: Add stats about different Http2Exceptions in the h2 server

Problem

It would be nice to know what types of Http2Exceptions are happening in
the Netty layer.

Solution

Add a `Http2FrameListener` proxy that increments counters for all the
various exceptions that the H2 server sees in the frame decode pathway.

Differential Revision: https://phabricator.twitter.biz/D233830"
ryanoneill,2018-11-13 00:59:54,https://api.github.com/repos/twitter/finagle/git/commits/958a5b1a4bfa845dd68d996119a0f55b7f1180f5,958a5b1a4bfa845dd68d996119a0f55b7f1180f5,"finagle-mysql: Remove RunWith Annotation from Tests

Problem / Solution

The 'RunWith' annotation is no longer necessary for running tests. This
commit removes it for the rest of the tests within finagle-mysql that
were still using it.

JIRA Issues: CSL-7281

Differential Revision: https://phabricator.twitter.biz/D240993"
ryanoneill,2018-11-12 23:40:51,https://api.github.com/repos/twitter/finagle/git/commits/c83c88091d18c2e1508ea141386b63240db3793c,c83c88091d18c2e1508ea141386b63240db3793c,"finagle-mysql: Refer to Capabilities by Full Name

Problem

Capability names overlap with finagle-mysql parameter names (e.g.
FoundRows). So, importing `Capability._` causes naming clashes
and prevents further refactorings.

Solution

Refer to all capabilities with their full name (e.g. Capability.FoundRows.)

Result

Naming conflicts from Capability(ies) should not prevent further refactorings.

JIRA Issues: CSL-7266

Differential Revision: https://phabricator.twitter.biz/D240889"
kevinoliver,2018-11-12 18:46:00,https://api.github.com/repos/twitter/finagle/git/commits/884a4c5e4a4e9e0245e3144f083597b5fb0f0cab,884a4c5e4a4e9e0245e3144f083597b5fb0f0cab,"Twitter-oss: Prepare OSS libraries for release 18.11

Problem

We want to release the next versions of our Twitter OSS libraries 18.11
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-7204

Differential Revision: https://phabricator.twitter.biz/D240782"
bryce-anderson,2018-11-12 15:44:20,https://api.github.com/repos/twitter/finagle/git/commits/28099ff598332391011e8297b5e6f24646970262,28099ff598332391011e8297b5e6f24646970262,"finagle-http2: Introduce Http2MultiplexCodec based HTTP/2 client

Problem

We want to migrate to the Nettty Http2MultiplexCodec based H2 api's for our
client so that we can maintain less code and have symmetry with our server
implementation.

Solution

Introduce a Http2MultiplexCodec based H2 client that can be enabled via stack
param or toggle.

JIRA Issues: CSL-6324

Differential Revision: https://phabricator.twitter.biz/D222800"
roanta,2018-11-09 21:16:45,https://api.github.com/repos/twitter/finagle/git/commits/69c6f84439808519725706c43d7d648e4fe9f68e,69c6f84439808519725706c43d7d648e4fe9f68e,"finagle-core: Add payload size trace annotation.

Problem / Solution

We'd like to trace the payload sizes as annotations so
we add them to the `PayloadSizeFilter`.

JIRA Issues: CSL-7202

Differential Revision: https://phabricator.twitter.biz/D239689"
vkostyukov,2018-11-09 04:20:00,https://api.github.com/repos/twitter/finagle/git/commits/842e5e1a2b5613307add41fd064ebb589cc22bef,842e5e1a2b5613307add41fd064ebb589cc22bef,"finagle-http: Merge Streaming and FixedLengthStreamedAfter params

# Problem

We only configure `fixedLengthStreamedAfter` param when streaming is enabled. Let's encode this property
in a param type itself and merge `Streaming` and `FixedLengthStreamedAfter` into a single entity.

JIRA Issues: CSL-7231

TBR=true

Differential Revision: https://phabricator.twitter.biz/D236573"
vkostyukov,2018-11-09 00:33:38,https://api.github.com/repos/twitter/finagle/git/commits/d48c50bdc397ce8cd112a6fc2ab924f85a4c89be,d48c50bdc397ce8cd112a6fc2ab924f85a4c89be,"finagle|finatra: Skip validation of headers we control

# Problem / Solution

We recently added an API to `HeaderMap` that allows us skip header name/value validation on per-header basis.
Let's use it to skip validation of headers we control (always valid).

JIRA Issues: CSL-6998

Differential Revision: https://phabricator.twitter.biz/D239253"
mosesn,2018-11-08 16:49:56,https://api.github.com/repos/twitter/finagle/git/commits/c32839337c687e96b7e859aac13b741cad93565a,c32839337c687e96b7e859aac13b741cad93565a,"util-core: Make Stopwatch.timeNanos monotone

Problem

Stopwatch.timeNanos is intended to be used for measuring durations, but it's
easy to shoot yourself in the foot with it since it's non-monotone.  The
comments give the caveat that it's only for us in testing, but even we screwed
it up, which indicates it's better to be safe than sorry.

Solution

Make Stopwatch.timeNanos monotone when it's not using the supplied time control.

Result

Stopwatch.timeNanos is monotone, so it's usable in production.

before
```
Benchmark                                                             Mode  Cnt    Score     Error   Units
StopwatchBenchmark.timeSystemNanos                                    avgt    5   33.117 ±  0.847   ns/op
StopwatchBenchmark.timeSystemNanos:·gc.alloc.rate.norm                avgt    5   ≈ 10⁻⁶             B/op
StopwatchBenchmark.timeTimeNanos                                      avgt    5   39.073 ±  3.524   ns/op
StopwatchBenchmark.timeTimeNanos:·gc.alloc.rate.norm                  avgt    5   23.996 ±  0.036    B/op
```

after
```
Benchmark                                                             Mode  Cnt    Score     Error   Units
StopwatchBenchmark.timeSystemNanos                                    avgt    5   34.309 ±   2.924   ns/op
StopwatchBenchmark.timeSystemNanos:·gc.alloc.rate.norm                avgt    5   ≈ 10⁻⁶              B/op
StopwatchBenchmark.timeTimeNanos                                      avgt    5   40.920 ±  25.137   ns/op
StopwatchBenchmark.timeTimeNanos:·gc.alloc.rate.norm                  avgt    5   ≈ 10⁻⁶              B/op
```

JIRA Issues: CSL-7233, CSL-7217

Differential Revision: https://phabricator.twitter.biz/D236629"
bryce-anderson,2018-11-05 23:29:25,https://api.github.com/repos/twitter/finagle/git/commits/63d5858f0a7d5f926ec8107233bf95d42c6fcda7,63d5858f0a7d5f926ec8107233bf95d42c6fcda7,"finagle-http2: Introduce the MultiplexCodec compatible UpgradeRequestHandler

Problem

We need a different UpgradeRequestHandler implementation to refactor the
netty pipeline to use the Http2MultiplexCodec.

Solution

Introduce a new implementation that reshapes the pipeline and manages
events accordingly.

JIRA Issues: CSL-7230

Differential Revision: https://phabricator.twitter.biz/D236245"
cacoco,2018-11-05 23:09:08,https://api.github.com/repos/twitter/finagle/git/commits/b247f941e97fe5c3bcf667ae69c27128f3cf1c52,b247f941e97fe5c3bcf667ae69c27128f3cf1c52,"finagle-exp, finatra-thrift: Update `DarkTrafficFilter#handleFailedInvocation` to include request

Problem

When handling the failed invocation it can be useful to have the original request.

Solution

Also pass the request to `DarkTrafficFilter#handleFailedInvocation`.

JIRA Issues: CSL-3034

TBR=true

Differential Revision: https://phabricator.twitter.biz/D237484"
steveniemitz,2018-11-05 16:25:53,https://api.github.com/repos/twitter/finagle/git/commits/160710883174e35d01f8460a80c4ad616653961a,160710883174e35d01f8460a80c4ad616653961a,"finagle-netty4: Export tcp retransmits and window size stats when using epoll transport

Problem

We want to be able to measure low-level TCP statistics when using the epoll
transport.

Solution

Export a retransmit counter and window size histogram periodically.

Result

TCP statistics are visible in exported stats.

Differential Revision: https://phabricator.twitter.biz/D218772"
bryce-anderson,2018-11-01 22:33:27,https://api.github.com/repos/twitter/finagle/git/commits/2c501d2e1f6c2cb55a36b99b1549aa8884a7504d,2c501d2e1f6c2cb55a36b99b1549aa8884a7504d,"finagle-netty4: Add a more generic entry to ConnectionBuilder

Problem

Sometimes it would be nice to have a way to build Netty client channels
without ultimately turning them into a `Transport`.

Solution

Add a raw entry point into `ConnectionBuilder` and expand its scope to the
`finagle` package.

Differential Revision: https://phabricator.twitter.biz/D236660"
kevinoliver,2018-11-01 21:19:21,https://api.github.com/repos/twitter/finagle/git/commits/ab3abca87c331ce0db715710bca15ab03341c26a,ab3abca87c331ce0db715710bca15ab03341c26a,"finagle-netty3: Fix logging of exceptions

Problem / Solution

The wrong logging method was being called which lead to the
exception not being logged.

Differential Revision: https://phabricator.twitter.biz/D236531"
bryce-anderson,2018-11-01 16:43:11,https://api.github.com/repos/twitter/finagle/git/commits/5102120d0b2fc6548f3097224f5193545f518562,5102120d0b2fc6548f3097224f5193545f518562,"finagle-http2: Don't set the maxChunkSize in the HttpServerCodec

Problem

During a merge we regressed our setting of the `maxChunkSize` param
of Http2ServerCodec to the `maxRequestSize`, which isn't what we want.

Solution

Fix the regression.

Differential Revision: https://phabricator.twitter.biz/D236234"
vkostyukov,2018-11-01 01:05:10,https://api.github.com/repos/twitter/finagle/git/commits/24271b29e5030230e16d9b628de1a7ab029e99e5,24271b29e5030230e16d9b628de1a7ab029e99e5,"finagle-http: Leverage fixedLengthStreamedAfter param in clients

# Problems

HTTP servers expose `fixedLengthStreamedAfter` parameter so users can configure a size limit (in bytes) after which
Finagle gives up on aggregating messages with a known `Content-Length` value. Clients, on the other hand, do not
expose this knob and use a constant 8k instead.

# Solution

Leverage `fixedLengthStreamedAfter` in clients too.

JIRA Issues: CSL-7196

Differential Revision: https://phabricator.twitter.biz/D234882"
vkostyukov,2018-10-31 22:08:24,https://api.github.com/repos/twitter/finagle/git/commits/96c8c38007098b490c22e1df562bc8cb916a3120,96c8c38007098b490c22e1df562bc8cb916a3120,"finagle: Enable scalafmt

# Problem / Solution

We're enabling scalafmt in CSL's projects. This changes does it for Finagle.

JIRA Issues: CSL-7225

Differential Revision: https://phabricator.twitter.biz/D235692"
mgodave,2018-10-31 21:40:40,https://api.github.com/repos/twitter/finagle/git/commits/87b3b781d0ba601d1fd91293741fc264264671f8,87b3b781d0ba601d1fd91293741fc264264671f8,"finagle-mysql: Manage tx session close with lifetime of Future.

Problem

We introduced automatic session management but are not using it internally.

Solution

Wrap transactions in session management.

Differential Revision: https://phabricator.twitter.biz/D234647"
bryce-anderson,2018-10-31 19:08:26,https://api.github.com/repos/twitter/finagle/git/commits/93fee4994e3ac83078a4342be5d8a31f921a094f,93fee4994e3ac83078a4342be5d8a31f921a094f,"finagle-http2: Even more graceful draining of H2 server sessions

Problem

When we drain a server we immediately send a GOAWAY with the last
observed stream id. This tells the client that all streams after that id
were not processed and are safe to retry. However, if the client is
racing a request with this GOAWAY that it cannot retry it's still a
lost request.

Solution

Instead of sending the GOAWAY with the last observed stream id we send
it with Int.MaxValue. This lets racing streams be processed. If they
don't terminate within the deadline we force the session closed to
prevent resource leaks.

JIRA Issues: CSL-6803

Differential Revision: https://phabricator.twitter.biz/D206683"
kevinoliver,2018-10-30 19:39:31,https://api.github.com/repos/twitter/finagle/git/commits/8f69e83366c7e275fbe1cbf7671f04e0e3daab70,8f69e83366c7e275fbe1cbf7671f04e0e3daab70,"finagle-core: Introduce a `StackClient.withStack` overload

Problem

When using a client protocol object (e.g. `c.t.finagle.Http.client`),
modifying the `Stack` is unnatural when paired with the usual method
chaining style.

Solution

Introduce a `StackClient.withStack` overload that makes
modifying the existing `Stack` easier when using method chaining.

JIRA Issues: CSL-7205

Differential Revision: https://phabricator.twitter.biz/D234739"
cacoco,2018-10-29 23:53:53,https://api.github.com/repos/twitter/finagle/git/commits/eb9bec0ec83792a1bfb1e1fc94ecd214efdf0c48,eb9bec0ec83792a1bfb1e1fc94ecd214efdf0c48,"finagle-base-http: Add c.t.finagle.http.Message.httpDateFormat(millis)

Problem/Solution

Add a way to format epoch millis in c.t.finagle.http.Message#httpDateFormat.

JIRA Issues: CSL-7207

Differential Revision: https://phabricator.twitter.biz/D234867"
bryce-anderson,2018-10-29 19:27:31,https://api.github.com/repos/twitter/finagle/git/commits/b60efda72dca015b2f5921191d064fc3b0295c4e,b60efda72dca015b2f5921191d064fc3b0295c4e,"finagle-mysql: Sequence the singleton session in the Session

Problem

When getting a singleton service for use with queries that require the
same session, like transactions, we internally store the Future[Service]
from the underlying call meaning that we return a client eagerly, but
we don't have a backing session.

Solution

We can do better by waiting until we have a backing session to return
session client. In the failure to acquire case we avoid the overhead of
making queries against the pinned session client.

Differential Revision: https://phabricator.twitter.biz/D234619"
cacoco,2018-10-29 19:02:09,https://api.github.com/repos/twitter/finagle/git/commits/f58bcedc3e1ac8f88a8e4a59baf40e73ddce8a01,f58bcedc3e1ac8f88a8e4a59baf40e73ddce8a01,"finagle-base-http: Minor updates to `c.t.finagle.http.Message`

Problem/Solution

Minor updates to `c.t.finagle.http.Message`.

Differential Revision: https://phabricator.twitter.biz/D232600"
kevinoliver,2018-10-29 18:52:41,https://api.github.com/repos/twitter/finagle/git/commits/9cd333830b3e5156b0ce584639f64b9731b2c403,9cd333830b3e5156b0ce584639f64b9731b2c403,"finagle: Introduce grpc-context module

Problem

Finagle users want interop between gRPC contexts and Twitter Futures.

Solution

Introduce an implementation that uses a `c.t.util.Local` for storage.

Note

Credit to Steve Niemitz for the initial version used as the basis for
this implementation.

JIRA Issues: CSL-7115

Differential Revision: https://phabricator.twitter.biz/D234595"
vkostyukov,2018-10-29 18:17:25,https://api.github.com/repos/twitter/finagle/git/commits/990c8650366e5374ea062c753a4628c5971fc40e,990c8650366e5374ea062c753a4628c5971fc40e,"finagle-http: Do not limit chunk size in HTTP codecs

# Problem

There is no need to limit the chunk size Netty HTTP codecs emit. Instead of absorbing several smaller chunks one by one,
we're better off getting the entire payload as soon as it's available so the data could be put into use quicker.

# Solution

Unset `maxChunkSize` parameter for HTTP codecs.

JIRA Issues: CSL-7169

Differential Revision: https://phabricator.twitter.biz/D233538"
bryce-anderson,2018-10-29 18:15:41,https://api.github.com/repos/twitter/finagle/git/commits/f127b29ab87588b0f546289fdb5074f9ff80118a,f127b29ab87588b0f546289fdb5074f9ff80118a,"finagle-http2: Minor cleanup

Problem

During the normal churn a few things get out of whack such as the name
of a ChannelHandler and we were clobbering a setting that we shouldn't
have been and the behavior of the `Http2ClientEventMapper` didn't capture
the event in the right exception pathway.

Solution

Clean things up. The `Http2ClientEventMapper` now transforms
`HeaderListSizeException`s in the write promise instead of the `exceptionCaught`
pathway since this is where they now surface in `Http2MultiplexCodec`.

Differential Revision: https://phabricator.twitter.biz/D234115"
mgodave,2018-10-29 14:38:29,https://api.github.com/repos/twitter/finagle/git/commits/506e8d09f816db8899e95cb46687f8db28de6417,506e8d09f816db8899e95cb46687f8db28de6417,"finagle-mysql: re-introduce session

Problem

Many MySQL operations require keeping session state, this recently came up in
the context of advisory locks. As it turns out, there are several uses for this
functionality. The current workaround is to do all session work within a
transaction but this has the effect of wrapping all session operations in a
transaction, which may not be the desired behavior. Since this is a common
pattern in MySQL we should expose the ability for users to ""check-out"" a session
for the duration of some series of operations.

Solution

Provide a method, session that allows a user to reserve a client connection so
that they may perform operations that require client/server state. This also
adds the ability for the user to discard a session if they have determined that
an operation has put the session in an unrecoverable state.

JIRA Issues: CSL-7018

Differential Revision: https://phabricator.twitter.biz/D233390"
mgodave,2018-10-29 14:18:01,https://api.github.com/repos/twitter/finagle/git/commits/27715ad4a1a6b7f4bd7f294c14c35335565a08c7,27715ad4a1a6b7f4bd7f294c14c35335565a08c7,"finagle-mysql: Try binding to correct address to check for mysql process

Problem

The finagle-mysql integration tests do not check whether mysqld is running on
localhost:3306 by default, this prevents the integration tests from correctly
detecting whether mysqld is running.

Solution

Explicitly bind to ""localhost"" to check for running mysqld process.

JIRA Issues: CSL-7177

Differential Revision: https://phabricator.twitter.biz/D233628"
vkostyukov,2018-10-27 03:34:24,https://api.github.com/repos/twitter/finagle/git/commits/45be34f97613959e23e515b870b7c0a41ff2eb94,45be34f97613959e23e515b870b7c0a41ff2eb94,"source: Reader.read() no longer takes size

CSL is changing the Reader API such that it's more high-level (think polymorphic; has `flatMap`, etc).
One of the conditions for this is dropping the `n` argument in `Reader.read(n)` such that every read
returns all available bytes instead of `n`.

JIRA Issues: CSL-6689

TBR=true

Differential Revision: https://phabricator.twitter.biz/D228385"
edio,2018-10-26 23:19:38,https://api.github.com/repos/twitter/finagle/git/commits/a3094f37478bde2ae599d4f45f8ce3631cce14a5,a3094f37478bde2ae599d4f45f8ce3631cce14a5,"finagle-http: Introduce fixedLengthStreamedAfter param for server-side streaming

Problem

Server.withStreaming(true) only enables streaming for requests with
chunked encoding. Requests without Transfer-Enconding are still buffered
up to max allowed request size. This is not desirable for some use cases

https://github.com/twitter/finagle/issues/538

Solution

Introduce new stack parameter MinChunkSize which determines the maximum
content length for the FixedLengthMessageAggregator in netty server
pipeline.

Default value for the new parameter is 0 which forces streaming of all
messages (changes former behavior).

Result

Server-side:

  val server = Http.server
    .withStreaming(true)

will stream messages both with and without Transfer-Encoding. To revert
to previous behavior minChunkSize must be set to non-zero value

  val server = Http.server
    .withStreaming(true, minChunkSize = 5.megabytes)

Signed-off-by: Neuman Vong <nvong@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D234171"
luciferous,2018-10-26 21:18:52,https://api.github.com/repos/twitter/finagle/git/commits/d42566edca8ec11d046b7bc773257b991ce7ec2d,d42566edca8ec11d046b7bc773257b991ce7ec2d,"finagle-http2: reinstate Http2ListenerTest

Problem

Http2ListenerTest was ignored because it was failing in CI. But now it
seems to be failing outside of CI too.

Solution

Fix and reinstate Http2ListenerTest.

JIRA Issues: CSL-7188

Differential Revision: https://phabricator.twitter.biz/D234161"
vkostyukov,2018-10-26 18:39:06,https://api.github.com/repos/twitter/finagle/git/commits/3cc5cfbbe83ab99ea7206f599ebda82ec3bf4a1e,3cc5cfbbe83ab99ea7206f599ebda82ec3bf4a1e,"finagle-http: Override DefaultHeaderMap.getOrNull for performance

# Problem / Solution

`HeaderMap.getOrNull` was meant as a lightweight variant of `get(key).orNull` (fewer allocations),
but was never implemented in `DefaultHeaderMap`. Let's implement it.

JIRA Issues: CSL-6993

Differential Revision: https://phabricator.twitter.biz/D233086"
luciferous,2018-10-25 23:47:17,https://api.github.com/repos/twitter/finagle/git/commits/e53d0298d05d7f827fdc40e53e2f4e2604bee78c,e53d0298d05d7f827fdc40e53e2f4e2604bee78c,"tsi: LinuxCpuAC as a StackTransformer

Problem / Solution

Now that we have StackTransformer, we can load LinuxCpuAC via the
default stack mechanism instead of relying on ServerAdmissionControl.

JIRA Issues: CSL-7043

Differential Revision: https://phabricator.twitter.biz/D232168"
bryce-anderson,2018-10-25 22:38:51,https://api.github.com/repos/twitter/finagle/git/commits/35d1a474179d0ecb62fed8dd0f64d22a1efb4196,35d1a474179d0ecb62fed8dd0f64d22a1efb4196,"finagle-http2: Make Http2UpgradingTransport more generic

Problem

The `Http2UpgradingTranpsort` is hardwired for use with the older H2
client implementation.

Solution

Make it more generic, consolidating the `StreamTransportFactory` specific
parts in the `UpgradeRequestHandler`, which will have its own
implementation in the new H2 client.

JIRA Issues: CSL-7123

Differential Revision: https://phabricator.twitter.biz/D229808"
mgodave,2018-10-25 04:11:28,https://api.github.com/repos/twitter/finagle/git/commits/f30646770af4e001a22ff082b7335d1fb71b5018,f30646770af4e001a22ff082b7335d1fb71b5018,"finagle-mysql: Revert ""finagle-mysql: introduce session""

Problem

Introducing session introduced a regression which would cause a connection leak.

Solution

Revert the commit.

JIRA Issues: CSL-7018

TBR=true

Differential Revision: https://phabricator.twitter.biz/D233323"
ryanoneill,2018-10-24 23:55:08,https://api.github.com/repos/twitter/finagle/git/commits/1b69831b40a5d46ee032d52d2cbb2316ebe2386d,1b69831b40a5d46ee032d52d2cbb2316ebe2386d,"finagle-mysql: Make Integration Tests More Resilient

Problem

One finagle-mysql integration test can fail if the
integration tests are run as a non-root user, which
they should be to mimic production environments. Another
can fail if the default character set of the MySQL server
is not set to a particular value.

Solution

Change the integration tests to work regardless of whether
a root or non-root user is used and when the default MySQL
character set is used.

JIRA Issues: CSL-7174

Differential Revision: https://phabricator.twitter.biz/D233142"
ryanoneill,2018-10-24 23:31:12,https://api.github.com/repos/twitter/finagle/git/commits/d133a98ac2b4e682d0e1114954e994efcdccbf12,d133a98ac2b4e682d0e1114954e994efcdccbf12,"finagle-mysql: Add ryano to Owners

Differential Revision: https://phabricator.twitter.biz/D233156"
mgodave,2018-10-24 22:09:11,https://api.github.com/repos/twitter/finagle/git/commits/a06f7d672dce4b9e131356634f18e168e68f3692,a06f7d672dce4b9e131356634f18e168e68f3692,"finagle-mysql: introduce session

Problem

Many MySQL operations require keeping session state, this recently came up in
the context of advisory locks. As it turns out, there are several uses for this
functionality. The current workaround is to do all session work within a
transaction but this has the effect of wrapping all session operations in a
transaction, which may not be the desired behavior.  Since this is a common
pattern in MySQL we should expose the ability for users to ""check-out"" a session
for the duration of some series of operations.

Solution

Provide a method, `session` that allows a user to reserve a client connection so
that they may perform operations that require client/server state. This also
adds the ability for the user to `discard` a session if they have determined that
an operation has put the session in an unrecoverable state.

JIRA Issues: CSL-7018

TBR=true

Differential Revision: https://phabricator.twitter.biz/D219322"
stefanlance,2018-10-24 17:57:21,https://api.github.com/repos/twitter/finagle/git/commits/b6e13903a757bd20602824b52e18566c5ce84dbf,b6e13903a757bd20602824b52e18566c5ce84dbf,"finagle-base-http: Fix Cookie problems

Problem

1. RFC 6265 does not prohibit Cookie names starting with `$`.
2. If a Cookie's MaxAge is explicitly set to Duration.Bottom and the
   Netty4CookieCodec is used, `cookieToNetty` will set the Netty Cookie's
   MaxAge to Duration.Bottom.inSeconds == Int.MinValue, because
   Duration.Bottom != Int.MinValue.seconds. But Netty 4's ""never expires"" value
   is Long.MIN_VALUE, so such a Cookie will immediately expire, which is not
   desirable.

Solution

1. Remove the `$` Cookie name validation.
2. Convert the Durations compared in `cookieToNetty` to Ints before making the
   comparison. This way a Cookie with a MaxAge of Duration.Bottom OR
   Int.MinValue.seconds will cause `cookieToNetty` to not set a MaxAge on the
   Netty 4 Cookie, so the default of Long.MIN_VALUE (indicating ""never expires"")
   will be used.

Also change `DefaultMaxAge` to `Duration.Bottom` since this is semantically more
correct than `Int.MinValue.seconds`.

JIRA Issues: CSL-7134

TBR=true

Differential Revision: https://phabricator.twitter.biz/D229579"
yufangong,2018-10-24 01:15:28,https://api.github.com/repos/twitter/finagle/git/commits/05a1d76a2bda83346363587f36ccf1e14e9f0a17,05a1d76a2bda83346363587f36ccf1e14e9f0a17,"util-core: Rename ReaderDiscarded to ReaderDiscardedException

Problem/Solution:

ReaderDiscarded is an exception, let's make it more explicit.

JIRA Issues: CSL-7090

TBR=true

Differential Revision: https://phabricator.twitter.biz/D231969"
bryce-anderson,2018-10-22 21:43:37,https://api.github.com/repos/twitter/finagle/git/commits/503bece2aaeb104eb6742eab4d9323ea7973b027,503bece2aaeb104eb6742eab4d9323ea7973b027,"finagle-mux: Cleanup gauges when the session closes

Problem

We have some gauges that end up dangling and are not cleaned up when the
session closes. Since mux sessions are commonly long lived the
application typically needs to wait for an old-gen GC cycle to remove
them, and those GC cycles are hopefully infrequent.

Solution

Explicitly remove the gauges when the session closes.

JIRA Issues: CSL-7148

Differential Revision: https://phabricator.twitter.biz/D231534"
bryce-anderson,2018-10-19 20:25:05,https://api.github.com/repos/twitter/finagle/git/commits/2e09f2770dc6f9388b7095c3863ed8491f54ea59,2e09f2770dc6f9388b7095c3863ed8491f54ea59,"finagle-redis: Fix flaky integration tests

Problem

We have a race condition in PubSubClientIntegrationSuite2 where on a
subscription update we satisfy the pending Promise and then update the
message count map. In the assert, we only await the Promise resolution
before checking the map, meaning that if the update pauses after setting
the Promise the asserting thread exits it's `Await.result` successfully
only to find out that the message count is still 0.

Solution

Make the updates to the two different collections atomic through
explicit synchronization.

JIRA Issues: CSL-7147

Differential Revision: https://phabricator.twitter.biz/D230965"
yufangong,2018-10-19 18:31:13,https://api.github.com/repos/twitter/finagle/git/commits/2bf248a27755e673a59acb90e8015f0903b89c65,2bf248a27755e673a59acb90e8015f0903b89c65,"finagle-thriftmux: Fix some flaky tests

Problem:

Some tests that are failing in TravisCI.

Solution:

Add a latch to wait for the connection established in draining test. Ignore the
""closed already"" exception when trying to close the connection.

Differential Revision: https://phabricator.twitter.biz/D229079"
kevinoliver,2018-10-16 03:48:43,https://api.github.com/repos/twitter/finagle/git/commits/d91944ba911824111843434662b0b6d84c4057a6,d91944ba911824111843434662b0b6d84c4057a6,"util-core: Move concurrent.AsyncStream.fromReader to io.Reader.toAsyncStream

Problem

In the interest of having finer grained pants build targets the source
code within util-core should not have cycles.

Solution

Move `c.t.concurrent.AsyncStream.fromReader` to
`c.t.io.Reader.toAsyncStream`.

Result

Removes the cycle between the `c.t.concurrent` and `c.t.io` packages.

JIRA Issues: CSL-7094

TBR=true

Differential Revision: https://phabricator.twitter.biz/D228277"
jvican,2018-10-15 23:15:06,https://api.github.com/repos/twitter/finagle/git/commits/ac17b4574068dca1f9dd2bf28c4892b4e87d7efe,ac17b4574068dca1f9dd2bf28c4892b4e87d7efe,"finagle: Upgrade to Scala 2.12.7

Problem / Solution

Upgrade scalac from 2.12.6 to 2.12.7.

Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-7110

Differential Revision: https://phabricator.twitter.biz/D228368"
bryce-anderson,2018-10-12 18:33:13,https://api.github.com/repos/twitter/finagle/git/commits/ed5f8d275a16d0f907ca269018d40fd5ab4cb6fb,ed5f8d275a16d0f907ca269018d40fd5ab4cb6fb,"finagle-base-http: Reduce log level of GenStreamingSerialServerDispatcher

Problem / Solution

The log messages in GenStreamingSerialServerDispatcher are at debug
level but they are so un-notable that they should be at TRACE level.

JIRA Issues: CSL-7101

Differential Revision: https://phabricator.twitter.biz/D227991"
kevinoliver,2018-10-11 23:05:40,https://api.github.com/repos/twitter/finagle/git/commits/b66d4fdc655127f4019517c6d086636e35ce8548,b66d4fdc655127f4019517c6d086636e35ce8548,"util-core: Remove forwarding types on c.t.util package object

Problem

In the interest of having finer grained pants build targets the source
code within util-core should not have cycles.

Solution

Remove the forwarding types `c.t.util.TimeConversions` and
`c.t.util.StorageUnitConversions`.  Use `c.t.conversions.time` and
`c.t.conversions.storage` directly as replacements.

Result

Removes the cycle between the `c.t.util` and `c.t.conversions`
packages.

JIRA Issues: CSL-7094

Differential Revision: https://phabricator.twitter.biz/D227363"
bryce-anderson,2018-10-10 23:54:43,https://api.github.com/repos/twitter/finagle/git/commits/54f1886ecb7690063e5a7d74a7362111c35be374,54f1886ecb7690063e5a7d74a7362111c35be374,"finagle-http2: Change the status computation of Http2NegotiatingTransporter

Problem

The Http2NegotiatingTransporter will bubble up the status of a dead
ClientSession as Status.Closed and cause higher levels to avoid this
endpoint.

Solution

Consider a cached session in the closed state to really be a Status.Open
since it will be evicted and we're happy to establish a new session.

Make status logic easier to read

JIRA Issues: CSL-7088

Differential Revision: https://phabricator.twitter.biz/D226416"
bryce-anderson,2018-10-10 18:13:09,https://api.github.com/repos/twitter/finagle/git/commits/6cd9df56089eb7f4ad449b633cf36324941d1c40,6cd9df56089eb7f4ad449b633cf36324941d1c40,"finagle-http2: Add banderson to OWNERS

Problem

I do a lot of work in the finagle-http2 package but am not an owner.

Solution

Add myself as an owner.

Differential Revision: https://phabricator.twitter.biz/D226253"
bryce-anderson,2018-10-10 16:17:07,https://api.github.com/repos/twitter/finagle/git/commits/0f8d79d8d926b102ea3b420da6a5cf6a8b633c39,0f8d79d8d926b102ea3b420da6a5cf6a8b633c39,"finagle-http: Make ServerCodec more generic

Problem / Solution

Building a Http2MultiplexCodec is currently specialized for the server
use case so we're rebranding ServerCodec to MultiplexCodecBuilder and making
it more generic.

JIRA Issues: CSL-7083

Differential Revision: https://phabricator.twitter.biz/D225584"
bryce-anderson,2018-10-09 22:06:59,https://api.github.com/repos/twitter/finagle/git/commits/25ee50023428541937a8230fc923ac2940c3798f,25ee50023428541937a8230fc923ac2940c3798f,"finagle-mysql: Poison requests don't close the underlying connection

Problem

A poison request doesn't necessarily imply a close of the underlying
connection and other machinery will also try to close the session later.

Solution

Instead of calling close on the underlying resource we make the service
inactive to future calls and make the status `Closed`.

JIRA Issues: CSL-7058

Differential Revision: https://phabricator.twitter.biz/D225767"
bryce-anderson,2018-10-09 19:29:05,https://api.github.com/repos/twitter/finagle/git/commits/54253a544208717c9877aa4399ea88645e17c6aa,54253a544208717c9877aa4399ea88645e17c6aa,"finagle-core: Remove gauges on close of FailFastFactory

Problem

We don't manually remove gauges when we close a FailFastFactory so we
get stale data until the gauges are GC'ed to clean them up.

Solution

Remove them when the FailFastFactory is closed.

Differential Revision: https://phabricator.twitter.biz/D226066"
bryce-anderson,2018-10-09 16:48:39,https://api.github.com/repos/twitter/finagle/git/commits/3aebd8af566a2f96b160974300844b721c62e13c,3aebd8af566a2f96b160974300844b721c62e13c,"finagle-mysql: Close clients after the test

Problem

We have a test that attempts to saturate the max default mysql
connections but after the test is complete we don't close the sessions
causing other tests to fail.

Solution

Close the generated clients where we're finished.

JIRA Issues: CSL-7084

Differential Revision: https://phabricator.twitter.biz/D225790"
bryce-anderson,2018-10-08 15:45:10,https://api.github.com/repos/twitter/finagle/git/commits/13433822d544586f4ccbe9ed07d42763f14868fe,13433822d544586f4ccbe9ed07d42763f14868fe,"finagle-http2: Make HTTP/2 stream channel initialization support clients and servers

Problem

Our stream channel initialization is specialized for the server use
case but we're trying to use the Http2MultiplexCodec for the client
side as well.

Solution

Make a more generic implementation that supports both use cases.

JIRA Issues: CSL-7033

Differential Revision: https://phabricator.twitter.biz/D220318"
bryce-anderson,2018-10-08 15:07:03,https://api.github.com/repos/twitter/finagle/git/commits/15aefbea6c8e5d98064f6edab9a83b4dc7aff69f,15aefbea6c8e5d98064f6edab9a83b4dc7aff69f,"finagle-core: Remove the UseDeterministicAperture toggle

Problem / Solution

This has been enabled for a long time so lets remove it.

JIRA Issues: CSL-7048

Differential Revision: https://phabricator.twitter.biz/D223218"
bryce-anderson,2018-10-05 18:19:46,https://api.github.com/repos/twitter/finagle/git/commits/514b121f07505062f35936c3e85f1e93eec5ea4a,514b121f07505062f35936c3e85f1e93eec5ea4a,"finagle-http2: Evict dead sessions when they are encountered in Http2NegotiatingTransporter

Problem

When a HTTP/2 client session closes, either due to draining or a problem,
we will encounter it on the next iteration through the Http2Transporter and
yield a DeadTransporter. This will go against the clients retry budget but it's
a very normal thing to have happen and thus shouldn't.

Solution

If the Http2Transporter encounters a dead ClientSession it will evict it and
try again. We don't encounter a loop since the re-initialization of the ClientSession
will also yield the Transport to use for the initiating request, thus terminating the
loop.

JIRA Issues: CSL-7037

Differential Revision: https://phabricator.twitter.biz/D220597"
vkostyukov,2018-10-03 00:18:21,https://api.github.com/repos/twitter/finagle/git/commits/59d2f0efcd8a1c4769a1945b2179b24b80361863,59d2f0efcd8a1c4769a1945b2179b24b80361863,"finagle-core: Expand visibility of LengthFieldFramer

# Problem / Solution

There are a couple of places we could use it internally. Let's make it available to `com.twitter`.

JIRA Issues: CSL-6689

Differential Revision: https://phabricator.twitter.biz/D223332"
bryce-anderson,2018-10-02 17:27:45,https://api.github.com/repos/twitter/finagle/git/commits/b225376e12bcea9d3302a69e9232aafcac640c9d,b225376e12bcea9d3302a69e9232aafcac640c9d,"finagle: Add documentation concerning the defaultBalancer flag

Problem / Solution

We want some documentation about when to use the 'random_aperture' value
for the `com.twitter.finagle.loadbalancer.defaultBalancer` flag.

Differential Revision: https://phabricator.twitter.biz/D223022"
bryce-anderson,2018-10-02 16:33:28,https://api.github.com/repos/twitter/finagle/git/commits/beb5c32f57c1c142de2b5d3d5e3d83eacfe57bf7,beb5c32f57c1c142de2b5d3d5e3d83eacfe57bf7,"finagle-core: Allow explicit configuration of random aperture

Problem

Sometimes in non-typical scenarios where cluster sizes are small, for
example testing clusters of size 1, deterministic aperture is not
appropriate but a form of subsetting is still advantageous.

Solution

Add the ability to explicitly request random aperture.

JIRA Issues: CSL-5750

Differential Revision: https://phabricator.twitter.biz/D222682"
roanta,2018-10-01 21:52:50,https://api.github.com/repos/twitter/finagle/git/commits/090453dc6be0e7b4946df2b9e070aee311316263,090453dc6be0e7b4946df2b9e070aee311316263,"finagle-core: improve precision in Ring.range

Problem

The range method in [[Ring]] was too coarse grained when
detecting the boundary cases. This causes issues when
computing a `width` that is near 1.0, for example.

Solution

Compute the boundary cases based on the start and end indices
rather than absolute values of `width` which are hard to compare
at arbitrary precision.

JIRA Issues: CSL-7038

Differential Revision: https://phabricator.twitter.biz/D221127"
cacoco,2018-09-29 20:06:29,https://api.github.com/repos/twitter/finagle/git/commits/0b00ea889610a11171c5a7f1650ef84344cae089,0b00ea889610a11171c5a7f1650ef84344cae089,"TravisCI: Remove Build Stages configuration

Problem

Time is a flat circle. Everything we've ever done or
will do, we're going to do over and over again.

Build stages rely on the caching of artifacts to S3
in order fro jobs to share state. While this seems
like a great idea in theory. The practice has proven
to be somewhat untenable.

Solution

Walk away from build stages. This really only affects
the Finagle build as it is the only build which remains
a matrix build and thus the only build which potentially
runs the dodo step multiple times. Given the complexity
around trying to get build stages to work and the
cache to be properly created and shared for different
scala versions, this is an acceptable amount of overhead.

JIRA Issues: CSL-7054

TBR=true

Differential Revision: https://phabricator.twitter.biz/D222286"
ryanoneill,2018-09-28 01:27:09,https://api.github.com/repos/twitter/finagle/git/commits/9ae6d978c9b0c77309e7d199f6f71c6cc5d58586,9ae6d978c9b0c77309e7d199f6f71c6cc5d58586,"finagle-netty3: Rebalance Deprecated Transport and TransportContext Methods

Problem

It has been decided that the proper balance of deprecated methods on
`Transport` is to only move half of them to `TransportContext`.

Solution

Remove the deprecation warnings on some methods on `Transport`, and add them to
those methods on `TransportContext`. Also, start the migration process by
fixing finagle-netty3.

JIRA Issues: CSL-7050

Differential Revision: https://phabricator.twitter.biz/D221528"
cacoco,2018-09-28 00:29:12,https://api.github.com/repos/twitter/finagle/git/commits/3fc110aa3cf5fc0903c57dce4952616c63b6ab6c,3fc110aa3cf5fc0903c57dce4952616c63b6ab6c,"TravisCI: Turn down the Slack notifications

Problem

The Slack notification on TravisCI builds is fairly noisy.

Solution

Change to only notify on change of either status.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D221661"
bryce-anderson,2018-09-27 18:51:10,https://api.github.com/repos/twitter/finagle/git/commits/a14296e688519754b5c41112f02ca2bbdbf5fe5c,a14296e688519754b5c41112f02ca2bbdbf5fe5c,"finagle-core: Fix leak in SingletonPool

Problem

If allowInterrupts=false and a service acquisition needs to make a
new connection and the acquisition is interrupted from higher in the
stack it will leak a ref-count to the underlying service if it
successfully connects.

Solution

Don't leak it.

JIRA Issues: CSL-7041

Differential Revision: https://phabricator.twitter.biz/D220953"
ryanoneill,2018-09-27 17:44:41,https://api.github.com/repos/twitter/finagle/git/commits/977b29de316aaf4b1f9d8768ac2188d941520ad4,977b29de316aaf4b1f9d8768ac2188d941520ad4,"twitter-oss: Update OSS Libraries Post-Release Back to 18.10.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 18.10.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D221275"
kevinoliver,2018-09-27 17:41:25,https://api.github.com/repos/twitter/finagle/git/commits/5a7b020ca4ba9be385a70f93a1ebcc07e641e49e,5a7b020ca4ba9be385a70f93a1ebcc07e641e49e,"finagle-core: Remove need for synchronization on Ema.last

Problem

High throughput clients using the NackAdmissionFilter were seeing lock
contention on its Ema.

Solution

Mark the field as volatile which allows calls to Ema.last without
synchronization.

JIRA Issues: CSL-7023

Differential Revision: https://phabricator.twitter.biz/D220971"
ryanoneill,2018-09-26 20:14:03,https://api.github.com/repos/twitter/finagle/git/commits/63182f815cb20549ced80c99465879609b05d94b,63182f815cb20549ced80c99465879609b05d94b,"twitter-oss: Prepare OSS libraries for release 18.9.1

Problem

We want to release the next versions of our Twitter OSS libraries 18.9.1
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D220746"
stefanlance,2018-09-26 17:11:54,https://api.github.com/repos/twitter/finagle/git/commits/cc2838f8c004439a72df404342b72f0ac212c156,cc2838f8c004439a72df404342b72f0ac212c156,"finagle-mux: Clean up behavior after negotiation and draining

Problem

  1. If the MuxClientNegotiatingSession's negotiation finishes but the channel
     handle is closed, it will log the failure and attempt to register the
     session. The registration will fail and add noise to the logs.

  2. If the session receives ByteReaders after it has been drained, it will add
     them to its queue.

  3. If the session is interrupted, the client label and remote address aren't
     logged.

Solution

  1. Don't attempt to register the session if the channel handle is closed.

  2. Check if the session has been drained before enqueuing ByteReaders.

  3. If the session is interrupted, log the client label and remote address.

Result

Session failure logs are cleaner and more informative. ByteReaders are released
if they arrive after the session is drained.

JIRA Issues: CSL-6997

Differential Revision: https://phabricator.twitter.biz/D218894"
mosesn,2018-09-25 23:29:36,https://api.github.com/repos/twitter/finagle/git/commits/509602fe7bed29187fe3801a3dd6a6c8549dbe78,509602fe7bed29187fe3801a3dd6a6c8549dbe78,"finagle-core: Stop sending backup requests when we exceed cutoff latency

Problem

In overload scenarios where many request latencies exceed the highest measurable
amount, some services can see traffic amplification because we retry a large
proportion of requests.

Solution

We should fail more politely by never sending more load when the configured
percentile latency exceeds the highest measurable amount, instead of risking
that we might send too little load.

Result

Overload scenarios will never get surprising traffic amplification from BRF.

JIRA Issues: CSL-7030

Differential Revision: https://phabricator.twitter.biz/D220043"
mosesn,2018-09-25 21:08:14,https://api.github.com/repos/twitter/finagle/git/commits/8737db3df7b7d71176aef19a90869aa1c33fd722,8737db3df7b7d71176aef19a90869aa1c33fd722,"finagle-mux: Preserve RetryableNackFailure log level when reusing flags from context

Problem

If RdispatchNack propagates flags, it should still have similar behavior to if flags aren't propagated.

Solution

Copy the RetryableNackFailure instead of constructing a wholly new Failure.

Result

Instead of using the default log level, we reuse the RetryableNackFailure log level.  Nothing else is changed.

Differential Revision: https://phabricator.twitter.biz/D214841"
bryce-anderson,2018-09-25 20:19:11,https://api.github.com/repos/twitter/finagle/git/commits/3c3fedc620cd010bfe524b27c54d7c91279a2200,3c3fedc620cd010bfe524b27c54d7c91279a2200,"finagle-http: Consider `Retry-After: 0` header a retryable nack

Problem

Our finagle servers use magic headers to signal to the client that a
request was nacked and is safe to retry. However, this only works if
your client is a finagle client.

Solution

Begin using a `Retry-After: 0` header to represent the same retryable
nack information.

JIRA Issues: CSL-6380

Differential Revision: https://phabricator.twitter.biz/D216539"
yufangong,2018-09-25 16:30:59,https://api.github.com/repos/twitter/finagle/git/commits/3025425b5193644d8a56cf9e8c4e35cf6966e288,3025425b5193644d8a56cf9e8c4e35cf6966e288,"util-core: Writer extends Closable

Problem/Solution:

`Writer` should support for initiating closures.

JIRA Issues: CSL-6688

TBR=true

Differential Revision: https://phabricator.twitter.biz/D218453"
xerial,2018-09-24 23:25:59,https://api.github.com/repos/twitter/finagle/git/commits/de668dbc06d71b302bc2918fbd297a614fd698f8,de668dbc06d71b302bc2918fbd297a614fd698f8,"finagle: Add a link to airframe-http

finagle: Add a link to airframe-http

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D219577"
yufangong,2018-09-24 21:19:18,https://api.github.com/repos/twitter/finagle/git/commits/b109f4cf08732b7de1fa831f606c42c172be0ca9,b109f4cf08732b7de1fa831f606c42c172be0ca9,"finagle-http: Mark more tests as flaky

Problem/Solution:

Mark tests failing on TravisCI related to the known deadlock issue as flaky.

JIRA Issues: CSL-6991

Differential Revision: https://phabricator.twitter.biz/D219388"
cacoco,2018-09-24 17:59:36,https://api.github.com/repos/twitter/finagle/git/commits/58ec78d89e87a01375a51eed62c2743ef88e548d,58ec78d89e87a01375a51eed62c2743ef88e548d,"twitter-oss: Introduce Dodo build stage in TravisCI config

Problem

Currently, running the dodo script to build the dependencies
of a project happens *before every job* when it only needs
to run only once before all jobs. This causes unnecessary
computation and churn. Additionally, we are running
""./sbt update"" unnecessarily as it was done because of the
flakiness with `maven.twttr.com` in resolving dependencies
which would kill builds. Since we no longer rely on it, we can
remove the manual resolution of dependencies in the jobs.

Solution

Introduce a Dodo build stage and order it before the default
test stage such that it runs before any testing and only
once. The output is cached, which is then used in the subsequent
jobs in the test build stage.

This has the additional benefit of removing the time spent
building with dodo from the test jobs, which means they have more
time to finish within the TravisCI job timeout.

Result

Better stability with our TravisCI testing. Building with Dodo
is only run once for the TravisCI build, it has up to the default
time for a job to finish, and every test afterwards also now
can spend up to the maximum timeout to actually run tests.

JIRA Issues: CSL-6974

Differential Revision: https://phabricator.twitter.biz/D219136"
bryce-anderson,2018-09-21 20:56:32,https://api.github.com/repos/twitter/finagle/git/commits/87da8f3370e302e612987a2d909d981329c02097,87da8f3370e302e612987a2d909d981329c02097,"finagle-http2: Make the H2Filter handler name a value

Problem

We hand code ""H2Filter"" in a number of places which makes manipulating it
in the Netty pipeline prone to typos.

Solution

Make it a value on the object itself so that the compiler does the typo
checking on our behalf.

Differential Revision: https://phabricator.twitter.biz/D218852"
bryce-anderson,2018-09-21 03:00:44,https://api.github.com/repos/twitter/finagle/git/commits/17794e7c9780f90568a15ee3631792ca83cc77ed,17794e7c9780f90568a15ee3631792ca83cc77ed,"finagle-http2: alpn/npn wait for singleton session to resolve for concurrent requests

Problem

For ALPN or NPN based HTTP/2 session negotiation it's nice to just wait
for the result of negotiation for racing second requests instead of falling
back to HTTP/1.x.

Solution

For the ALPN or NPN pathway we wait while for HTTP/1.x we make
temporary HTTP/1.x sessions.

JIRA Issues: CSL-7005

Differential Revision: https://phabricator.twitter.biz/D217855"
cacoco,2018-09-20 23:43:29,https://api.github.com/repos/twitter/finagle/git/commits/a607d47067360e1989914bb605d9e57958a64d11,a607d47067360e1989914bb605d9e57958a64d11,"twitter-oss: Update TravisCI to use sudo = required

Problem

It has been recommended by the TravisCI support that we switch our
builds to use `sudo: required` in order to get a fully virtualized
environment for running our builds.

See:
https://docs.travis-ci.com/user/reference/trusty/#fully-virtualized-via-sudo-required

We hadn't switched as we were beholden to needing a Java install which
wasn't readily available previously but is available in the TravisCI ""trusty""
image.

Solution

Switch the TravisCI configuration to use `sudo: required` and `dist: trusty`.

Differential Revision: https://phabricator.twitter.biz/D218377"
stefanlance,2018-09-20 21:52:57,https://api.github.com/repos/twitter/finagle/git/commits/3454f95dd3623b44e8de725fed7e29d4b84da45d,3454f95dd3623b44e8de725fed7e29d4b84da45d,"finagle-base-http: Dedupe HTTP 1.1 header validation

Problem

When we convert HTTP 1.1 headers from Netty to Finagle, we validate the headers
twice: once in Netty and once in Finagle.

Solution

Create an API for adding headers to the HeaderMap without validating them and
use this method in the Netty -> Finagle bijection.

Result

We dedupe this validation and set ourselves up for deduping other validations
that occur in Finagle's HTTP projects.

JIRA Issues: CSL-6990

Differential Revision: https://phabricator.twitter.biz/D217035"
luciferous,2018-09-20 21:31:32,https://api.github.com/repos/twitter/finagle/git/commits/417d641b278b179d10404667c1c474afb204acbf,417d641b278b179d10404667c1c474afb204acbf,"finagle-core: allow user to configure BRF histogram

Problem / Solution

BackupRequestFilter uses a histogram implementation that can track
values up to 2000. Services with latency ranges that exceed this for
regular traffic must specify the upper bound in order for BRF to behave
correctly.

JIRA Issues: CSL-6885

Differential Revision: https://phabricator.twitter.biz/D217801"
ShaneDelmore,2018-09-20 16:36:36,https://api.github.com/repos/twitter/finagle/git/commits/3a4670f811e5f63cc6e4b856a21caa95bd2e7e0f,3a4670f811e5f63cc6e4b856a21caa95bd2e7e0f,"finagle: Changes for Scala 2.12

Problem / Solution

There are a few warnings in Scala 2.12 that need to be addressed.

Differential Revision: https://phabricator.twitter.biz/D217635"
isabelmartin,2018-09-19 23:11:32,https://api.github.com/repos/twitter/finagle/git/commits/c05f583224d570f92afe0b1520e3769b80b0e61b,c05f583224d570f92afe0b1520e3769b80b0e61b,"finagle-core: Remove ThresholdFailureDetector's slow host detection

Problem:

The slow host detection in ThresholdFailureDetector doesn't improve either
average or long tail request latency when combined with a load balancer that
uses an intelligent load metric. Simulations were run that injected latency into
both requests and pings, examining various request rates, amounts of injected
latency, and at various configurations of the ThresholdFailureDetector. Although
latency is improved when using a simple load balancer like round robin, there is
no significant effect when using a load balancer such as p2c. This has been
observed to be true at both low RPS and high RPS, and even if ping frequency is
increased.

Solution:

Remove it! We are electing to leave in the close threshold in
ThresholdFailureDetector, since this functionality is still useful for detecting
bad connections.

JIRA Issues: CSL-6549

TBR=true

Differential Revision: https://phabricator.twitter.biz/D210015"
bryce-anderson,2018-09-19 21:42:36,https://api.github.com/repos/twitter/finagle/git/commits/150a269239b13997e48657fc90a7f2d472ee4708,150a269239b13997e48657fc90a7f2d472ee4708,"finagle-http2: Add Http2MultiplexCodec backed ClientSession implementation

Problem

We want to use the Netty Http2MultiplexCodec for our HTTP/2 client
implementation.

Solution

Provide a ClientSession implementation that is backed by the
Http2MultiplexCodec.

JIRA Issues: CSL-6981

Differential Revision: https://phabricator.twitter.biz/D216117"
cacoco,2018-09-19 20:44:38,https://api.github.com/repos/twitter/finagle/git/commits/4c4167318a7eba3e23e1e6edeca887904ff46c73,4c4167318a7eba3e23e1e6edeca887904ff46c73,"twitter-oss: Update to Scala 2.11.12 and 2.12.6 in SBT build

Problem/Solution

We should update our SBT builds to Scala 2.11.12 and 2.12.6.

Additionally, the Slack credentials for each project are out-of-date
and need to be updated.

JIRA Issues: CSL-6972, CSL-6975

Differential Revision: https://phabricator.twitter.biz/D216930"
luciferous,2018-09-19 18:19:40,https://api.github.com/repos/twitter/finagle/git/commits/fd26ed6bdf50adbbe29461525d4ed20fa425de11,fd26ed6bdf50adbbe29461525d4ed20fa425de11,"finagle-core: allow access to NonRetryable from twitter

Problem / Solution

We want to access NonRetryable from outside of finagle.

Differential Revision: https://phabricator.twitter.biz/D217367"
bryce-anderson,2018-09-19 15:10:20,https://api.github.com/repos/twitter/finagle/git/commits/2ea69de4fa382b64abf48109ab28b0a92e8b0743,2ea69de4fa382b64abf48109ab28b0a92e8b0743,"finagle-http2: Introduce the abstract Http2UpgradingTransport

Problem

The Http2Transporter implements generic session caching
concerns in addition to its specific role of initiating a
HTTP/2 client upgrade which will be useful for alternative
HTTP/2 Transporter implementations.

Solution

Separate the concerns of caching a shared session into
their own abstraction.

JIRA Issues: CSL-6950

Differential Revision: https://phabricator.twitter.biz/D212296"
yufangong,2018-09-18 21:09:59,https://api.github.com/repos/twitter/finagle/git/commits/2e62216dbc848fcd80eeb93c3a51a5cc61539ece,2e62216dbc848fcd80eeb93c3a51a5cc61539ece,"finagle-memcached: Don't run finagle-core tests

Problem/Solution:

finagle-memchached tests only need target stringprotocol, make it
depend on that specific target.

JIRA Issues: CSL-6992

Differential Revision: https://phabricator.twitter.biz/D216748"
kevinoliver,2018-09-18 19:50:03,https://api.github.com/repos/twitter/finagle/git/commits/4ece3d2aa5e893ad11969c93e981294d6a6ed754,4ece3d2aa5e893ad11969c93e981294d6a6ed754,"finagle-core: FailureFlags.asNonRetryable no longer modifies non-FailureFlags

Problem

Wrapping non-FailureFlags exceptions can lead to surprising behavior
for users.

Solution

Leave them alone.

JIRA Issues: CSL-6847

Differential Revision: https://phabricator.twitter.biz/D216281"
kevinoliver,2018-09-17 18:43:07,https://api.github.com/repos/twitter/finagle/git/commits/11b790515703dcca7d5b3ea2d81a56b7edde8193,11b790515703dcca7d5b3ea2d81a56b7edde8193,"Disable false positives for StoreGaugesAsMemberVariables lint rule

Problem

We have a new scalafix lint rule, StoreGaugesAsMemberVariables, that
flags cases where Gauges are not stored in member variables.

However, because it is a syntactic rule, it sometimes flags some false
positives.

Solution

Disable the rule where appropriate.

JIRA Issues: CSL-6746

TBR=true

Differential Revision: https://phabricator.twitter.biz/D214652"
luciferous,2018-09-17 16:53:59,https://api.github.com/repos/twitter/finagle/git/commits/f7151135fc26f7a213ce8eaa2b7b927239cdca0a,f7151135fc26f7a213ce8eaa2b7b927239cdca0a,"Twitter-oss: update OSS libraries post-release to 18.10.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 18.10.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D214858"
hongikeam,2018-09-14 23:59:12,https://api.github.com/repos/twitter/finagle/git/commits/79c9cfd305340697ded4f29249b273533758c6c0,79c9cfd305340697ded4f29249b273533758c6c0,"finagle-redis: Fix discard transaction bug

Problem

Send MULTI command when discard transaction.

Solution

Change command MULTI to DISCARD.

Result

Successfully transaction discarded.

Signed-off-by: Jordan Parker <jparker@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D215139"
coduinix,2018-09-14 01:19:57,https://api.github.com/repos/twitter/finagle/git/commits/1d42c39a585f81663edf3a010e033db5be0e4e91,1d42c39a585f81663edf3a010e033db5be0e4e91,"finagle-core: Use current dtabs in NoBrokersAvailableException

Problem

In some cases the Dtab information shows as empty in the
NoBrokersAvailableException, even if there was a Dtab (base and/or local) set.
This might be confusing when debugging resolver issues.

Solution

If no Dtab was given to the NoBrokersAvailableException, look up the Dtab when
constructing the exceptionMessage.

Result

Actual effective Dtab is shown in NoBrokersAvaialbleException, fixes #716

Signed-off-by: Jordan Parker <jparker@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D215111"
mosesn,2018-09-13 23:16:17,https://api.github.com/repos/twitter/finagle/git/commits/2bb92e1282dc1f2203fdb094fda828bb01e638c4,2bb92e1282dc1f2203fdb094fda828bb01e638c4,"finagle-http2: Add lastStreamId to GOAWAY exception

Problem

When we receive GOAWAYs, we don't have that much information.

Solution

We should at least see what the last stream id is, and log that.

JIRA Issues: CSL-6819

Differential Revision: https://phabricator.twitter.biz/D214765"
yufangong,2018-09-13 22:29:34,https://api.github.com/repos/twitter/finagle/git/commits/b37adc3bb3b234ed62de8b673d069fcd068a8452,b37adc3bb3b234ed62de8b673d069fcd068a8452,"util-internal: Update ConfigbusSubscriber after ServerInfo initialized

Problem:

ConfigbusTunable map won't compose json files defined with $environment or
$instanceId. This is because Tunable map is loaded before ServerInfo
initialized, and the map does not have the environment info. This is introduced
after we added a new tunable in finagle-stats which changed loading lifecycle.

Solution:

Reload all `StandardTunableMap`s and re-subscribe `ConfigbusTunableMap`s
after ServerInfo.intialized().

JIRA Issues: CSL-6801

Differential Revision: https://phabricator.twitter.biz/D208027"
bryce-anderson,2018-09-13 00:28:11,https://api.github.com/repos/twitter/finagle/git/commits/5980f22b79bc708097cef1b674ee1d1255b1a2e4,5980f22b79bc708097cef1b674ee1d1255b1a2e4,"finagle-netty4: Reuse the Netty4 Bootstrap in ConnectionBuilder

Problem / Solution

Instead of remaking the Netty4 Boostrap on every invocation of
ConnectionBuilder we should reuse it.

JIRA Issues: CSL-6949

Differential Revision: https://phabricator.twitter.biz/D211926"
roanta,2018-09-13 00:10:21,https://api.github.com/repos/twitter/finagle/git/commits/c22b840a0e163bdd6778512fc02bc01e337164dc,c22b840a0e163bdd6778512fc02bc01e337164dc,"finagle-mux: Enable service acquisition interrupts

Problem

We currently don't allow interrupts during mux + TLS/SSL hanshaking.
This means that if either of those processes are black holed by their
peer, then the client has no mechanism to avoid this failure mode.

Solution

Mask interrupts of service acquistion in the SingletonPool since it's
a shared resource and we don't want individual dispatches to interrupt it.
Instead, we offer a mechanism for aborting sessions that stall in the
acquisition phase by moving the TimeoutFactory from above the Balancer
to below the SingletonPool.

JIRA Issues: CSL-6226, CSL-6523

Differential Revision: https://phabricator.twitter.biz/D209563"
sboobna,2018-09-12 22:46:27,https://api.github.com/repos/twitter/finagle/git/commits/8e3b1cb4893cce389fd61243215ae382b8a14e05,8e3b1cb4893cce389fd61243215ae382b8a14e05,"finagle-serversets: initialize zkHealth to Unknown

Problem

On start up, the zkHealth reports ""Healthy"" when the client is not able
to connect to zookeeper. On debugging, I noticed that the ClientHealth
was being initialized to Healthy.

Solution

The ClientHealth should be initialized to Unknown, and it will become
Healthy only when it connects to zookeeper (which internally means the
session changing to SyncConnected)

Result

If the client isn't able to connect to zookeeper on startup, it will
report its health as Unknown.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D213768"
cosmicexplorer,2018-09-12 00:40:07,https://api.github.com/repos/twitter/finagle/git/commits/f181820af0a4efeb3757368b8a4d89e584f6ae7b,f181820af0a4efeb3757368b8a4d89e584f6ae7b,"Convert deprecated fatal_warnings usages to use the new compiler_option_sets from pants 1.9.x!

Problem

`fatal_warnings` is now deprecated in favor of the more extensible
`compiler_option_sets` pants provides in 1.9.x.

Solution

Convert all `fatal_warnings` arguments to use the new 1.9.x
`compiler_option_sets` in all `pants.ini.*`, `BUILD`, and other files. This was
done with a combination of `rg` and `sed`:

``` rg -l 'fatal_warnings\s*=\s*.?True' \ | parallel -L50 ""sed -r -i -e
's#fatal_warnings(\s*=\s*)\""?True\""?\s*,#compiler_option_sets\1{\""fatal_warnings\""},#g'""
\ && rg -l 'fatal_warnings\s*=\s*.?False' \ | parallel -L50 ""sed -r -i -e
's#fatal_warnings(\s*=\s*)\""?False\""?\s*,#compiler_option_sets\1\{\},#g'"" \ &&
rg -l 'fatal_warnings.*=' ```

Result

Fixes deprecation warnings when running pants on jvm code.

JIRA Issues: DPB-10250

TBR=true

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D213208"
luciferous,2018-09-11 18:47:41,https://api.github.com/repos/twitter/finagle/git/commits/857231aca7f38adb9bb52432c3ccbd46809efcfd,857231aca7f38adb9bb52432c3ccbd46809efcfd,"Twitter-oss: Prepare OSS libraries for release 18.9

Problem

We want to release the next versions of our Twitter OSS libraries 18.9
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-6957

Differential Revision: https://phabricator.twitter.biz/D213029"
bryce-anderson,2018-09-11 01:38:49,https://api.github.com/repos/twitter/finagle/git/commits/b49a29790293bb157e943a3c783c7d34062bfabe,b49a29790293bb157e943a3c783c7d34062bfabe,"finagle-http: Use HeaderMap.set to add the retryable marker header to requests

Problem

If a HTTP request that has had the retryable marker header attached gets
retried, it will get another marker header. This results in header
amplification.

Solution

Use HeaderMap.set to add the header to clear any existing headers.

JIRA Issues: CSL-6964

Differential Revision: https://phabricator.twitter.biz/D213126"
bryce-anderson,2018-09-10 21:34:49,https://api.github.com/repos/twitter/finagle/git/commits/482c5c81b5c279bf1a844819fee4442717085490,482c5c81b5c279bf1a844819fee4442717085490,"finagle-http2: Introduce ClientSession abstraction

Problem / Solution

We need a more generic notion of what a HTTP/2 client session
provides in order to begin building a client session based on
the Netty Http2MultiplexCodec.

JIRA Issues: CSL-6950

Differential Revision: https://phabricator.twitter.biz/D212271"
vkostyukov,2018-09-07 20:45:03,https://api.github.com/repos/twitter/finagle/git/commits/6f9f4b6613ab8615990fc223d4bbc6b5849fa412,6f9f4b6613ab8615990fc223d4bbc6b5849fa412,"finagle-doc: Add Flags.rst

# Problem / Solution

Finagle uses flags extensively for its global configuration means. Let's document those flags under a new doc section.

JIRA Issues: CSL-6948

Differential Revision: https://phabricator.twitter.biz/D212021"
vkostyukov,2018-09-07 20:28:03,https://api.github.com/repos/twitter/finagle/git/commits/07495a14672ff871a892355f1fcb0372c201dc48,07495a14672ff871a892355f1fcb0372c201dc48,"finagle-netty4: Remove useUnpooledByteBufAllocator flag

# Problem / Solution

There is no good reason to opt-out of a more efficient, pooled allocator. We should not encourage
our users doing that.

JIRA Issues: CSL-6951

Differential Revision: https://phabricator.twitter.biz/D212097"
vkostyukov,2018-09-06 23:16:15,https://api.github.com/repos/twitter/finagle/git/commits/137f56721fd7aa750101aee29203649d6f0e539c,137f56721fd7aa750101aee29203649d6f0e539c,"finagle-netty4: Promote UseNativeEpollV2 toggle into a flag, useNativeEpoll

# Problem / Solution

We've been running Finagle with Netty's native epoll transport for about a year (since Oct 2017). We're ready
to promote a toggle into a command-line flag (enabled by default) to allow users opt-out should they need to.

JIRA Issues: CSL-6912

Differential Revision: https://phabricator.twitter.biz/D208088"
luciferous,2018-09-06 21:04:59,https://api.github.com/repos/twitter/finagle/git/commits/0b6844cdfbc176a499b908d8cf71b171b3aac2d0,0b6844cdfbc176a499b908d8cf71b171b3aac2d0,"finagle-core: move Stack.NamedTransformer to top-level

Problem / Solution

Because NamedTransformer is defined inside of Stack, it has to be
addressed as Stack$NamedTransformer, which is sort of confusing. We can
avoid this by bringing it up to the top-level.

JIRA Issues: CSL-6915

Differential Revision: https://phabricator.twitter.biz/D207980"
bryce-anderson,2018-09-06 20:01:23,https://api.github.com/repos/twitter/finagle/git/commits/ee10a5c6e963ff9c3c2b0e86627c6e004cb747fa,ee10a5c6e963ff9c3c2b0e86627c6e004cb747fa,"finagle-http2: Consolidate some HTTP/2 concerns

Problem

We duplicate some logic in various HTTP/2 implementation details. So,
lets clean it up. In the process it was found that the prior-knowledge
HTTP/2 client doesn't have a mechanism for closing the singleton
session which is also addressed.

JIRA Issues: CSL-6931

Differential Revision: https://phabricator.twitter.biz/D210716"
bryce-anderson,2018-09-05 14:34:29,https://api.github.com/repos/twitter/finagle/git/commits/d1baeff95b7e464e2827d8800da6a3ef65526128,d1baeff95b7e464e2827d8800da6a3ef65526128,"finagle-mux: Remove the pull-mux implementation

Problem / Solution

The push-based mux implementation has been running in production for
some time now so it is time to get rid of the old pull based mux
implementation.

JIRA Issues: CSL-6914

TBR=true

Differential Revision: https://phabricator.twitter.biz/D208737"
steveniemitz,2018-09-05 01:23:08,https://api.github.com/repos/twitter/finagle/git/commits/0f2f7ba93ae06b557ec7d4508c94ae30dbba6912,0f2f7ba93ae06b557ec7d4508c94ae30dbba6912,"finagle-netty4: Use FastThreadLocalThreads for finagle worker pools

Problem

The finagle-netty4 implementation overrides the default thread
factory supplied by netty to its event loop groups.  By doing so,
it no longer creates special `FastThreadLocalThread`s that netty
is optimized for, but instead normal threads.

Solution

Use the netty `DefaultThreadFactory` when creating the executor for
the netty event loop groups.  This will create `FastThreadLocalThread`s,
as was as continue to provide the other functionality the finagle
customizations provided.

Differential Revision: https://phabricator.twitter.biz/D207981"
stefanlance,2018-09-05 00:18:56,https://api.github.com/repos/twitter/finagle/git/commits/89484ecc216b94ac1dcdfadc16d9f179ccf3c345,89484ecc216b94ac1dcdfadc16d9f179ccf3c345,"finagle-mysql: Add error code to handshake exception

Problem

If the client encounters an error byte during the handshake, a
LostSyncException is thrown but the MySQL error code is not reported.

Solution

If the packet contains an error code, throw an exception that reports the code.

JIRA Issues: CSL-6910

TBR=true

Differential Revision: https://phabricator.twitter.biz/D207632"
Wingfril,2018-09-04 17:48:24,https://api.github.com/repos/twitter/finagle/git/commits/a91f95bdc3f64d43be8eec7e524d76c8e0e89580,a91f95bdc3f64d43be8eec7e524d76c8e0e89580,"Finagle-Mux: Adding some logging statements

JIRA Issues: CSL-6384

Differential Revision: https://phabricator.twitter.biz/D207064"
stefanlance,2018-09-04 17:47:24,https://api.github.com/repos/twitter/finagle/git/commits/a734b2565080ea9cf333aed926a47a152052ce3e,a734b2565080ea9cf333aed926a47a152052ce3e,"finagle-mysql: Give client MultiResults capability

Problem

Executing stored procedures requires the CLIENT_MULTI_RESULTS capability flag
but it's not in the client's flag list.

Solution

Add it to the list.

JIRA Issues: CSL-6918

Differential Revision: https://phabricator.twitter.biz/D208699"
stefanlance,2018-08-31 22:48:02,https://api.github.com/repos/twitter/finagle/git/commits/9cd9ad5c0a22425237272a5cec5f38ab0aaa2b00,9cd9ad5c0a22425237272a5cec5f38ab0aaa2b00,"finagle-core: Clarify docs on stack module orientation

Problem

The choice of wording to describe stack module orientation is not fully
explained and is inconsistent.

Solution

Clarify the terminology and fix the inconsistencies.

JIRA Issues: CSL-6591

Differential Revision: https://phabricator.twitter.biz/D208799"
cacoco,2018-08-31 19:38:11,https://api.github.com/repos/twitter/finagle/git/commits/432fc9eab725980f773e6d248d0fe8f88b8e86aa,432fc9eab725980f773e6d248d0fe8f88b8e86aa,"finagle-toggle: Fix overlapping Pants BUILD targets

Problem

finagle-toggle/src/main/scala/BUILD defines sources
with a recursive `rglobs` which ends up including
the `com.twitter.finagle.server` package which defines
it's own BUILD configuration thus causing confusion
and havoc for IntelliJ.

Solution

Don't use rglobs here and list out the sources
accordingly. Remove the BUILD under finagle/finagle-toggle/src/main/scala/com/twitter/finagle/toggle
as it is redundant, add finagle/finagle-toggle/src/main/scala/com/twitter/finagle/server
as an exported dependency. This should be equivalent
but without the overlapping sources.

Differential Revision: https://phabricator.twitter.biz/D209023"
mosesn,2018-08-31 16:31:33,https://api.github.com/repos/twitter/finagle/git/commits/8128f8b8b785f62d8b56f846473b8a909e366c3a,8128f8b8b785f62d8b56f846473b8a909e366c3a,"finagle-http2: Fixes race condition on h2c upgrade

Problem

We're seeing a race condition in travisci where we close the reftransport and
then try to update it.

Solution

Simplify the model so that it's OK to close the reftransport and continue using
it, but we make sure to call close on every subsequent transport that it's
updated with.

JIRA Issues: CSL-6925

Differential Revision: https://phabricator.twitter.biz/D209440"
jimmycasey,2018-08-30 17:56:59,https://api.github.com/repos/twitter/finagle/git/commits/f5d6342f9ebcd0a9c7fa7365138b40e23a1ce3ec,f5d6342f9ebcd0a9c7fa7365138b40e23a1ce3ec,"finagle: Fixed Spelling.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D208865"
vkostyukov,2018-08-29 22:38:56,https://api.github.com/repos/twitter/finagle/git/commits/c0a1f295f58d699a77142ea2720965b63203cc89,c0a1f295f58d699a77142ea2720965b63203cc89,"finagle-memcached: Remove UsePushMemcachedToggle

# Problem / Solution

We've been running push-based memcached clients since the beginning of 2018. We're now ready to remove both
the toggle and the non-push implementation.

JIRA Issues: CSL-6911

Differential Revision: https://phabricator.twitter.biz/D208047"
mosesn,2018-08-29 17:49:20,https://api.github.com/repos/twitter/finagle/git/commits/9b9523d0982869496dd8f4bfaba28afc855a2498,9b9523d0982869496dd8f4bfaba28afc855a2498,"jackson: Upgrade from 2.8.4 to 2.9.6

Problem

We're on a version of jackson from October 2016, and it has a [CVE][0] against it.
Furthermore, there are bugfixes and feature improvements in new jackson, which
we would like to use.

Solution

Upgrade to the latest and greatest version of jackson.

[0]: https://nvd.nist.gov/vuln/detail/CVE-2017-7525

JIRA Issues: CSL-6599

Differential Revision: https://phabricator.twitter.biz/D204133"
yufangong,2018-08-28 23:20:24,https://api.github.com/repos/twitter/finagle/git/commits/8d27dee599bc6643ad178bbba23888ce278ce1ff,8d27dee599bc6643ad178bbba23888ce278ce1ff,"finagle/doc: Remove unused metric documantation

Problem/Solution:

The metric `srv/thrift/buffer/resetCount` was removed,
remove the doc as well.

JIRA Issues: CSL-6571

Differential Revision: https://phabricator.twitter.biz/D208352"
bryce-anderson,2018-08-28 20:55:56,https://api.github.com/repos/twitter/finagle/git/commits/e6f5e6effcf188bf9b8144969c93a58a91746395,e6f5e6effcf188bf9b8144969c93a58a91746395,"finagle-mux: Remove OptTls headers toggle

Problem / Solution

It's been enabled for a long time and is now fundamental to how we
operate so we should remove the toggle.

JIRA Issues: CSL-6900

Differential Revision: https://phabricator.twitter.biz/D206419"
bryce-anderson,2018-08-28 15:09:33,https://api.github.com/repos/twitter/finagle/git/commits/c08364446596c45b8db4d88ca59b0d671791e049,c08364446596c45b8db4d88ca59b0d671791e049,"finagle-core, finagle-mux: Introduce some conventions for using the single executor pattern

Problem

The serial executor concurrency pattern is great for managing
concurrency but it can be tough to know what state is safe to modify
when.

Solution

Introduce some conventions for using the serial executor. First, methods
that are intended to be called from within the serial executor are
prefixed with the word `handle`. Second, fields that should only be used
from within the serial executor is prefixed with `h_`.

Example:
`def handleMutateSomeState(): Unit = { h_counter += 1 }`

Add a README.md

JIRA Issues: CSL-6784

Differential Revision: https://phabricator.twitter.biz/D203680"
kevinoliver,2018-08-27 18:23:59,https://api.github.com/repos/twitter/finagle/git/commits/65089dd0c0c73a51b6608ec4857ab2b8e6485565,65089dd0c0c73a51b6608ec4857ab2b8e6485565,"Add symlinks to CHANGELOG.rst from CHANGES

Problem / Solution

CHANGES got moved to CHANGELOG.rst. By leaving a symlink
we keep existing posts and whatnot working.

JIRA Issues: CSL-6799

Differential Revision: https://phabricator.twitter.biz/D207399"
kevinoliver,2018-08-27 18:21:54,https://api.github.com/repos/twitter/finagle/git/commits/394f4eaebadcd57a763eaf5afd403c39d244ec04,394f4eaebadcd57a763eaf5afd403c39d244ec04,"Dedent CHANGELOG.rst to remove blockquotes

Problem

The CHANGELOGs display with block quotes which is not intended.

Solution

Dedent the bullet points. Also, add the changelogs to user guides
where missing.

Result

Nicer looking changelogs.

JIRA Issues: CSL-6799

Differential Revision: https://phabricator.twitter.biz/D207427"
steveniemitz,2018-08-27 14:57:05,https://api.github.com/repos/twitter/finagle/git/commits/3097c8525429613cbadaaaa631941b8d399eee59,3097c8525429613cbadaaaa631941b8d399eee59,"finagle-core: fix a (rare) deadlock in ForkJoinScheduler

Problem:

When using the ForkJoinScheduler, in certain (rare) circumstances,
using Await can cause a deadlock.

Solution:

Like the Bridged and Local schedulers, flush() needs to be implemented
to empty the local scheduler before blocking.

JIRA Issues: CSL-6902

Differential Revision: https://phabricator.twitter.biz/D206881"
ryanoneill,2018-08-24 22:02:58,https://api.github.com/repos/twitter/finagle/git/commits/4cdd15d91180e3a05369063061cee213b3642e69,4cdd15d91180e3a05369063061cee213b3642e69,"finagle-netty3: Move `ChannelTransport` off of `LegacyContext`

Problem

`Transport`s which use `LegacyContext` prevent the removal of
deprecated methods on `Transport`. Finagle-Netty3's `ChannelTransport`
is one of those `Transport`s.

Solution

Add a `ChannelTransport` specific `ChannelTransportContext`.

Result

One less `Transport` that prevents removal of `Transport`s deprecated methods.

Differential Revision: https://phabricator.twitter.biz/D205473"
ryanoneill,2018-08-24 18:08:35,https://api.github.com/repos/twitter/finagle/git/commits/edce8093e8e741b4b3f671702298ed4b06fb8735,edce8093e8e741b4b3f671702298ed4b06fb8735,"finagle-netty4: Change `ChannelTransport` to Use `ChannelTransportContext`

Problem

`Transport`s which use `TransportContext`s which delegate
back to the original `Transport` prevent deprecated methods
from being removed from `Transport` entirely. Finagle-Netty4's
`ChannelTransport` is one of those.

Solution

Rename `Netty4Context` to `ChannelTransportContext` and change
the methods on it to stop delegating back to a `Transport`.

Result

One more `Transport` is using a proper `TransportContext` and is
no longer blocking the removal of deprecated methods on `Transport`.

Differential Revision: https://phabricator.twitter.biz/D205794"
stefanlance,2018-08-24 17:56:15,https://api.github.com/repos/twitter/finagle/git/commits/0f96f6ca3b6d0ad7dba4233af43b80a9abe19ce3,0f96f6ca3b6d0ad7dba4233af43b80a9abe19ce3,"finagle-redis: Add integration tests Pants target & add README

Problem

The integration tests live in `src/it` instead of `src/test` and do not have
a Pants target or a README, so it's unclear how to run them.

Solution

- Add a Pants target and add a README explaining how to run them.
- Clean up the tests by removing unnecessary imports.
- Mark failing tests as `ignore`.
- Since the tests now have a Pants target and will run in CI, we ensure that
  they run only if the `redis-server` binary exists.

JIRA Issues: CSL-6203

TBR=true

Differential Revision: https://phabricator.twitter.biz/D206380"
kevinoliver,2018-08-24 15:44:39,https://api.github.com/repos/twitter/finagle/git/commits/7822a64db8244204f4f17193e22f1c746f0d53db,7822a64db8244204f4f17193e22f1c746f0d53db,"Rename CHANGES to CHANGELOG.rst

Problem

Github renders reStructuredText (rst) files. While our changelog
is written in rst, because it does not have that as its file type
it is rendered as plain text.

Solution

Rename to CHANGELOG.rst. This uses changelog instead of changes,
which seems to be the more canonical name.

Result

Changelogs are rendered nicely in the Github UI.

Differential Revision: https://phabricator.twitter.biz/D206432"
Wingfril,2018-08-23 23:01:14,https://api.github.com/repos/twitter/finagle/git/commits/438c4086122867b4bcafb044d15add0c0f5d6e41,438c4086122867b4bcafb044d15add0c0f5d6e41,"finagle-netty4: Add Handshake latency stats

Problem

There isn't a way to see the handshake latency for tls for all protocols.

Solution
Add a stat that will measure the handshake latency

Result
It's there.

JIRA Issues: CSL-5685

Differential Revision: https://phabricator.twitter.biz/D205123"
dschobel,2018-08-23 20:24:30,https://api.github.com/repos/twitter/finagle/git/commits/0a9ae786211cd3d122cf99b684296e9b142818cb,0a9ae786211cd3d122cf99b684296e9b142818cb,"finagle-integration: document redis buffer lifecycle test coverage

Problem / Solution

Document buffer lifecycle test for redis.

JIRA Issues: CSL-3889

Differential Revision: https://phabricator.twitter.biz/D206162"
kevinoliver,2018-08-23 19:09:13,https://api.github.com/repos/twitter/finagle/git/commits/ebe814e634cb715c7a2742eb8f01a793ca206e9a,ebe814e634cb715c7a2742eb8f01a793ca206e9a,"util-stats: InMemoryStatsReceiver eagerly creates Counters and Stats

Problem

`InMemoryStatsReceiver` lazily creates the mappings for Counters and
Stats which is misleading. They would not be created until the first
`incr` and `add`, respectively.

Solution

Eagerly create the Counters and Stats at creation time.

Result

Test code now closer matches production behavior.

JIRA Issues: CSL-6751

TBR=true

Differential Revision: https://phabricator.twitter.biz/D205760"
roanta,2018-08-23 18:51:37,https://api.github.com/repos/twitter/finagle/git/commits/c83ad5d1a3727ee8a8638bff8669cf37edecbeab,c83ad5d1a3727ee8a8638bff8669cf37edecbeab,"finagle-core: make interrupts configurable in SingletonPool

Problem

SingletonPool guards an underlying shared resource. However, it allows
interrupts to propagate directly to the underlying service acquisition
requests which can cause one interrupt (e.g. a timeout) to kill the
acquisition for others waiting on the same resource.

Solution

Instead, this behavior should be configurable and up to the discretion
of the protocol implementation to determine. We introduce a parameter
for this which is passed into the constructor for `SingletonPool`.

Differential Revision: https://phabricator.twitter.biz/D205433"
jcrossley,2018-08-22 18:57:47,https://api.github.com/repos/twitter/finagle/git/commits/f8184f450d524224a8d27e8b46a5ade77c0f8950,f8184f450d524224a8d27e8b46a5ade77c0f8950,"finagle-core: Use PendingRequestFilter or RequestSemaphoreFilter based on maxWaiters

Problem

RequestSemaphoreFilter is configured with a semaphore that's
commonly constructed with a maxWaiters of zero (e.g, configuring
maxConcurrentRequests on a server creates an AsyncSemaphore
with a maxWaiters of zero). In this case, we pay the unnecessary cost
of lock synchronization and submitting a future callback to the scheduler.

Solution

If maxWaiters is zero, create a PendingRequestFilter, which performs better.
Otherwise, create a RequestSemaphoreFilter.

Differential Revision: https://phabricator.twitter.biz/D194207"
zackangelo,2018-08-22 16:59:41,https://api.github.com/repos/twitter/finagle/git/commits/0316ac8940f056b86e3d5463ba63b6033a539886,0316ac8940f056b86e3d5463ba63b6033a539886,"finagle-netty4: allow sockets to be configured with the SO_REUSEPORT option

Problem

Would like to be able to build servers that open sockets with the
SO_REUSEPORT option on Linux. SO_REUSEPORT allows multiple processes
to bind and accept connections from the same address and port.

Our particular use-case involves being able to support near
zero-downtime restarts with finagle servers. We'd like to be able to
start a new, simultaneously-running finagle process, listen on the
same interface and port and then gracefully shutdown the old PID when
the new process is healthy.

Solution

Support for SO_REUSEPORT is available when using the native-epoll
transport in netty4 (netty/netty@d1d8a6b). Allow this option to be
configured using Transport.Options.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

JIRA Issues: CSL-6895

Differential Revision: https://phabricator.twitter.biz/D205535"
stefanlance,2018-08-22 16:35:39,https://api.github.com/repos/twitter/finagle/git/commits/48056d5b08529a841eef094388d4272684a2a081,48056d5b08529a841eef094388d4272684a2a081,"finagle-mysql: Document interrupt handler behavior

Problem / Solution

There is no documentation on how interrupts are handled by the client
dispatcher. Add documentation.

JIRA Issues: CSL-6205

Differential Revision: https://phabricator.twitter.biz/D204747"
ryanoneill,2018-08-22 01:48:12,https://api.github.com/repos/twitter/finagle/git/commits/1456ef118a40e95d1b94234e5f3c2763fd77e460,1456ef118a40e95d1b94234e5f3c2763fd77e460,"finagle-http: Update HttpTransportTest to Test Transport.status

Problem / Solution

Methods such as 'status' on `Transport` are deprecated in favor of the
`TransportContext` versions. However, there are certain subtle pieces
of functionality incorporated into existing Transports, which are not
being tested and make migration more difficult. `HttpTransport.status`
is one of those. Let's add a portion of a test that will fail if that
functionality is not adequately migrated.

Differential Revision: https://phabricator.twitter.biz/D205285"
roanta,2018-08-21 21:41:04,https://api.github.com/repos/twitter/finagle/git/commits/4c46b80d69108e079c7761425504d19647f152fd,4c46b80d69108e079c7761425504d19647f152fd,"finagle-core: distinct roles for TimeoutFactory

Problem / Solution

We need to be able to identify the various `TimeoutFactory`
modules inserted into `StackClient`. It's not possible to do
this if they have the same role, so we give them unique roles.

Differential Revision: https://phabricator.twitter.biz/D204647"
dschobel,2018-08-21 21:10:11,https://api.github.com/repos/twitter/finagle/git/commits/6f559fb6252ec28e212f5069fe75481baee6d208,6f559fb6252ec28e212f5069fe75481baee6d208,"finagle-http: fix flaky streaming test

Problem / Solution

We flakied a test that would infrequently show channel closed
exceptions in response to a client streaming an excessive
amount of data. It turns out that hanging up is valid server
behavior so we update the test to reflect this.

JIRA Issues: CSL-2753

Differential Revision: https://phabricator.twitter.biz/D205140"
kevinoliver,2018-08-21 17:38:09,https://api.github.com/repos/twitter/finagle/git/commits/b9183636450bd338e6d72e283cb19ce94bdafa85,b9183636450bd338e6d72e283cb19ce94bdafa85,"finagle-doc: Add MethodBuilder to Metrics.rst

Problem

MetricBuilder's metrics were only documented on the Method Builder
page while not included on the standalone Metrics page.

Solution

Factor them out and include them in both pages. While here, there were
some RST warnings on the changelog that also got addressed.

JIRA Issues: CSL-6753

Differential Revision: https://phabricator.twitter.biz/D204782"
bryce-anderson,2018-08-21 16:22:06,https://api.github.com/repos/twitter/finagle/git/commits/5678dfabeb02c2e4b03311cb76e6c1b6bbee47b0,5678dfabeb02c2e4b03311cb76e6c1b6bbee47b0,"finagle-core: Fix flaky property test sampling

Problem / Solution

Property tests will give up if they reject to many samples due to a
`whenever` clause in order to avoid wasting resources. Instead of
rejecting invalid values we instead only generated valid values.

JIRA Issues: CSL-6884

Differential Revision: https://phabricator.twitter.biz/D205072"
Wingfril,2018-08-21 00:51:47,https://api.github.com/repos/twitter/finagle/git/commits/aa259dccd73f064602cd3a22e74894b50a981970,aa259dccd73f064602cd3a22e74894b50a981970,"finagle-core: Adding TLS Info to Client Registry

Problem

There was no TLS info for clients in the generated Registry.Json.

Solution

Add the export module.

JIRA Issues: CSL-4832

Differential Revision: https://phabricator.twitter.biz/D202381"
roanta,2018-08-21 00:19:02,https://api.github.com/repos/twitter/finagle/git/commits/9e6734b21f55d0aed95e33dc299ce05b3c524748,9e6734b21f55d0aed95e33dc299ce05b3c524748,"d-aperture: introduce shuffle based ring entropy

Problem

Historically, d-aperture rotated the peer ring in an attempt to avoid
hotspots on the server ring when the algorithm was based on discrete
ring coordinates. However, when we moved to a continous coordinate space,
we guarantee that the server ring is equally loaded for any given peer ring.
The peer ring rotation lives as a vestigial artifact which we rationalized
as adding some entropy to any given peer/server ring pair. This form of
entropy is poor as it generally has more chances of collisions across
peer rings.

Solution

Introduce shuffle based entropy in which each peer ring uses a well distributed
seed to shuffle its server ring. This simplifies the `PeerCoordinate` implementation
significantly and instead allows each peer ring to pass a seed to the ordering used
to sort a given server ring.

Result

More entropy in the system – each peer ring orders its target server rings
with a relatively unique seed. Concretely, this means that when nodes on the
server ring go down, load is spread more randomly across the remainder of the
apertures. For example, given the following topology (see attached), we can
construct the following scenarios:

Rotational Entropy
----------------------

PeerRingA#0 @ 100rps
(ServerRing#0, 1.0: 42rps), (ServerRing#1, 1.0: 42rps), (ServerRing#2, 1/3: 16rps)

PeerRingB#0 @ 100rps
(ServerRing#6, 1/3: 16rps), (ServerRing#0, 1.0: 42rps), (ServerRing#1, 1.0: 42rps)

ServerRing#1 goes down
ServerRing#0: 140rps
ServerRing#1: 0rps
ServerRing#2: 30rps
ServerRing#6: 30rps

Shuffle Entropy
------------------

PeerRingA#2 @ 100rps
(ServerRing#1, 1.0: 42rps), (ServerRing#4, 1.0: 42rps), (ServerRing#3, 1/3: 16rps)

PeerRingB#2 @ 100rps
(ServerRing#1, 1.0: 42rps), (ServerRing#5, 1.0: 42rps), (ServerRing#6, 1/3: 16rps)

ServerRing#1 goes down
ServerRing#1: 0rps
ServerRing#3: 30rps
ServerRing#4: 60rps
ServerRing#5: 60rps
ServerRing#6: 30rps

{F10852727}

JIRA Issues: CSL-6769

TBR=true

Differential Revision: https://phabricator.twitter.biz/D199545"
kevinoliver,2018-08-20 22:22:51,https://api.github.com/repos/twitter/finagle/git/commits/6e0bb3e4e03c8a6e978fd5c709d3e3a62775c654,6e0bb3e4e03c8a6e978fd5c709d3e3a62775c654,"scrooge: Generate exceptions which implement FailureFlags

Problem

Scrooge generated Thrift exceptions are part of the Finagle ecosystem.
As such, there is a desire for them to carry failure metadata.

Solution

Change the generators for Java and Scala to have exceptions implement
`c.t.finagle.FailureFlags`.

Result

Scrooge exceptions work better in the Finagle ecosystem.

JIRA Issues: CSL-6845

TBR=true

Differential Revision: https://phabricator.twitter.biz/D204132"
bryce-anderson,2018-08-20 22:18:05,https://api.github.com/repos/twitter/finagle/git/commits/cdba2a6c86a8a4ddc1cb42669b1af1e2aa3b593e,cdba2a6c86a8a4ddc1cb42669b1af1e2aa3b593e,"finagle-http: Make assertions more informative

Problem

We've seen some failures in Travis that only say that a Future was
defined but we don't know if it failed or succeeded, so it's not very
informative.

Solution

Check the structure of the result so that we can see if it failed,
succeeded, or wasn't yet defined.

JIRA Issues: CSL-6860

Differential Revision: https://phabricator.twitter.biz/D204799"
stefanlance,2018-08-20 21:30:28,https://api.github.com/repos/twitter/finagle/git/commits/e29970cc7e92a6c4cec2a9a3da9c6d96d6e54f23,e29970cc7e92a6c4cec2a9a3da9c6d96d6e54f23,"finagle-mysql: Add prepared statement integration test

Problem / Solution

The test for prepared statements handling empty strings was a no-op. Convert it
to an actual test. Also, clean up some finagle-mysql documentation.

Differential Revision: https://phabricator.twitter.biz/D204706"
roanta,2018-08-20 21:13:36,https://api.github.com/repos/twitter/finagle/git/commits/81ef478f6e14d891bc9a681a8f3386950f1bc728,81ef478f6e14d891bc9a681a8f3386950f1bc728,"finagle-mux: push tls handshaking into `negotatingSession`

Problem

We would like the `newSession` promise handed back to the
user to encompass tls handshaking so that service acquisition
timeouts properly represent both the mux and tls handshake.

Solution

Wire up the `OnSslHandshakeComplete` callback into `newSession`.

Result

The `negotiatedSession` promise inside `MuxClientNegotiatingSession`
now also represent tls handshaking. It will close the session when
it is interrupted, but the behavior is gated behind a flag for now.

Differential Revision: https://phabricator.twitter.biz/D202820"
stefanlance,2018-08-20 16:32:33,https://api.github.com/repos/twitter/finagle/git/commits/c404078f4d2ae1dbbbe5799a2aa554fd216b09dd,c404078f4d2ae1dbbbe5799a2aa554fd216b09dd,"finagle-mysql: Create `CursorStats` only when calling `cursor`

Problem

A new `CursorStats` instance is created every time a MySQL client is created.
Calling `transact` creates a new service and therefore a new `CursorStats`
instance, which is unnecessary.

Solution

Move `CursorStats` creation to the `cursor` method.

JIRA Issues: CSL-6828

Differential Revision: https://phabricator.twitter.biz/D204023"
mgodave,2018-08-20 15:21:13,https://api.github.com/repos/twitter/finagle/git/commits/4d7bb9a3a55f9820cb5fe1f8c48efdcea80f3671,4d7bb9a3a55f9820cb5fe1f8c48efdcea80f3671,"[util/finagle] Move from Writable to Pipe

Problem

`Reader.writable()` and `Writable` are deprecated in favor of `Pipe`

Solution

Replace Usage of `Reader.writable()` and `Writable` with `Pipe`

JIRA Issues: CSL-6812

Differential Revision: https://phabricator.twitter.biz/D203960"
ryanoneill,2018-08-20 04:52:49,https://api.github.com/repos/twitter/finagle/git/commits/db062ee74131188152ba1eb7b2a967f4c651ce2a,db062ee74131188152ba1eb7b2a967f4c651ce2a,"finagle-core: Introduce `SslTransportContext`

Problem / Solution

`Transport.peerCertificate` is one small piece of information regarding the security of
the underlying transport for each request. The presence or lack of peer certificate is
not enough in many cases to determine the security of the connection. Let's introduce
new types for migrating towards a more feature-rich context for security information.

JIRA Issues: CSL-6323

Differential Revision: https://phabricator.twitter.biz/D203032"
kevinoliver,2018-08-17 00:12:58,https://api.github.com/repos/twitter/finagle/git/commits/4596ac26a890ac007c43067428f9d0814ffeb811,4596ac26a890ac007c43067428f9d0814ffeb811,"finagle-core: Document ServiceFactory.apply and ClientConnection

Problem / Solution

`ServiceFactory.apply` and `ClientConnection` can do a better job
of explaining what the `ClientConnection` represents on the client,
or initiating side.

JIRA Issues: CSL-6794

Differential Revision: https://phabricator.twitter.biz/D203506"
bryce-anderson,2018-08-16 20:21:23,https://api.github.com/repos/twitter/finagle/git/commits/5f34657bff3e6a8ab9bf2f4f48b8cca734a039c6,5f34657bff3e6a8ab9bf2f4f48b8cca734a039c6,"finagle-netty4: Bump Netty to version 4.1.28.Final

Problem / Solution

We're bumping our Netty version to the latest release to get a number of
bug fixes and improvements.

JIRA Issues: CSL-5875

Differential Revision: https://phabricator.twitter.biz/D195565"
hamdiallam,2018-08-16 17:59:46,https://api.github.com/repos/twitter/finagle/git/commits/064085bcebb567ecf97719363d7626a5e72541ba,064085bcebb567ecf97719363d7626a5e72541ba,"finagle-core: Fix stack overflow  in `Stack.insertAfter`

Problem

`insertAfter` when used with the implicit `CanStackFrom` reuses the same target
role for the created module, causing `transform` to repeatedly add the module
till overflowing.

Solution

Implement `insertAfter` similar to the implementation of `insertBefore` without
the use of `transform`.

JIRA Issues: CSL-5740

Differential Revision: https://phabricator.twitter.biz/D202954"
kevinoliver,2018-08-15 22:49:13,https://api.github.com/repos/twitter/finagle/git/commits/e83e7d85c089991de27c60885904f19a29be45fa,e83e7d85c089991de27c60885904f19a29be45fa,"finagle-core: Fix doc link

Problem / Solution

A prior commit introduced a trailing dollar sign to a companion object
in a Javadoc `@link`. Sbt's doc command would fail on this. Removing
the trailing dollar sign fixes the doc command.

JIRA Issues: CSL-6858

Differential Revision: https://phabricator.twitter.biz/D202930"
yufangong,2018-08-15 18:59:40,https://api.github.com/repos/twitter/finagle/git/commits/a8be34bdff98c794482f536ed6dd6432b7c23f06,a8be34bdff98c794482f536ed6dd6432b7c23f06,"finagle-thrift{mux}: Enable server side Response Classification

Problem:

For the Thrift server, the requests flow through the Finagle stack first and
then Scrooge stack. However, Scrooge stack does request deserialization and
response serialization, which means Finagle does not see the response
type, but instead the serialized bytes.

Solution:

In the Scrooge generated server code, inject the `ReqRep` in a
`Contexts.local`. Finagle stack can then get it and do classification.

Result:

`DeserializeCtx` becomes `ClientDeserializeCtx` and added
`ServerToReqRep` to handle server responses.

Differential Revision: https://phabricator.twitter.biz/D196032"
kevinoliver,2018-08-15 15:52:31,https://api.github.com/repos/twitter/finagle/git/commits/e6389831e527b8634de82ecbb275705578c0f688,e6389831e527b8634de82ecbb275705578c0f688,"finagle-core: Promote FailureFlags to a public API

Problem

`FailureFlags` is an important part of the Finagle APIs
yet it is inaccessible to other packages due to it being
scoped to `private[finagle]`.

Solution

Promote it to a public API and add the necessary Java.

JIRA Issues: CSL-6844

Differential Revision: https://phabricator.twitter.biz/D202374"
luciferous,2018-08-14 15:12:21,https://api.github.com/repos/twitter/finagle/git/commits/8ad96f9619a889f93195e44b7f3be27c0cfebfd3,8ad96f9619a889f93195e44b7f3be27c0cfebfd3,"finagle-core: change percentile to be between 0..1

Problem / Solution

WindowedPercentileHistogram accepts a percentile parameter between 0 and
100 (where 95.0 means 95th percentile). We should change it to be
between 0 and 1 (e.g. 0.95 means 95th percentile) to match our other
percentile APIs.

JIRA Issues: CSL-6787

Differential Revision: https://phabricator.twitter.biz/D198915"
Wingfril,2018-08-13 23:58:01,https://api.github.com/repos/twitter/finagle/git/commits/490e83c509369b8787081da7de258b14bb0ff939,490e83c509369b8787081da7de258b14bb0ff939,"Finagle-mux: Add java forwarding method for OpportunisticTls

Problem

It was ugly to use OpportunisticTls.Level in java

Solution

Create forwarding methods

Result

It's no longer ugly and everything compiles.
You can use `OpportunisticTlsConfig.OFF|DESIRED|REQUIRED` in java.

Differential Revision: https://phabricator.twitter.biz/D200884"
stefanlance,2018-08-13 23:33:29,https://api.github.com/repos/twitter/finagle/git/commits/51fa339d72acb377376bc69a21a1ffc0f4aee388,51fa339d72acb377376bc69a21a1ffc0f4aee388,"finagle-mysql: Close cursor result in client integration test

Problem

The cursor result is not closed in the test ""CursorResult does not store head of
 stream"". This makes it impossible for the client to execute any more commands.

Solution

Close the result at the end of the test.

JIRA Issues: CSL-6187

Differential Revision: https://phabricator.twitter.biz/D201780"
luciferous,2018-08-10 19:01:27,https://api.github.com/repos/twitter/finagle/git/commits/5d5a4163dc9e2330c76e91fb1768213078f3e1ef,5d5a4163dc9e2330c76e91fb1768213078f3e1ef,"slo: Install SLIs as a NamedTransformer

Problem / Solution

Now that we have a way of manipulating the default stack. We can use it
for installing SLIs.

JIRA Issues: CSL-6763

Differential Revision: https://phabricator.twitter.biz/D199895"
mosesn,2018-08-10 18:53:37,https://api.github.com/repos/twitter/finagle/git/commits/d5fe9cc0bbafa58bf717fdd029db0be4654b20c6,d5fe9cc0bbafa58bf717fdd029db0be4654b20c6,"finagle-core: Moved creation of ServiceClosedException in LazyEndpointFactory to the close method

Problem

ServiceClosedException in LazyEndpointFactory tells you who tried to use the
endpoint factory after it was closed, but not who closed it.

Solution

Create ServiceClosedException only once, when it's closed, and remember it
thereafter.  Also provide a useful exception message to SCE.

JIRA Issues: CSL-6816

Differential Revision: https://phabricator.twitter.biz/D200423"
yufangong,2018-08-10 01:11:10,https://api.github.com/repos/twitter/finagle/git/commits/bb2654e13674a2e6304be2354caa02387df52589,bb2654e13674a2e6304be2354caa02387df52589,"finagle-thrift: ThriftCodec handles exceptions first

# Problem

This is reported here https://github.com/twitter/scrooge/issues/294. Thrift
clients constructed via ServicePerEndpoint sometimes swallow exceptions, this
happens when the method returns Unit.

# Solution

`successField` for void methods are `Some(Unit)`, this makes it escaped
ThriftCodec's exception check. Swap the pattern match in ThriftCodec.filter to
check exception fields first.

JIRA Issues: CSL-6821

Differential Revision: https://phabricator.twitter.biz/D200690"
ryanoneill,2018-08-10 00:28:15,https://api.github.com/repos/twitter/finagle/git/commits/4493aee608479e6cafbeae430f090f1d66e015f2,4493aee608479e6cafbeae430f090f1d66e015f2,"finagle-core: Rename StdStackServerTest Filename to Match Class Name

Problem / Solution

`StdStackServerTest` is contained in a file which doesn't match its
name, and it's the only class in the file. Let's modify it to match
so that it's easier to find.

Differential Revision: https://phabricator.twitter.biz/D200755"
Wingfril,2018-08-09 19:59:21,https://api.github.com/repos/twitter/finagle/git/commits/da275d11c7a875b5a2e1a621097d67a45a631b71,da275d11c7a875b5a2e1a621097d67a45a631b71,"finagle-mux: Make opptls in Mux java compatible

Problem

There was not a mk() method for opptls in mux, making it impossible to access it in java.

Solution

Add mk() method

Result

Java compilation tests for opptls in mux compiles.

Differential Revision: https://phabricator.twitter.biz/D200448"
bryce-anderson,2018-08-09 17:02:42,https://api.github.com/repos/twitter/finagle/git/commits/7b1134e3b46e773cecee503743dc0d72ec126f66,7b1134e3b46e773cecee503743dc0d72ec126f66,"finagle-mux: Use encapsulation for application headers in mux protocol

Problem

We currently mix application headers with traditional mux
broadcast context entries but don't have a strategy to separate
them on the peer. This leads to mixing and due to the need to
allow multiple application values for the same key, this can lead
to amplification of context entries.

Solution

Encapsulate application headers into a single broadcast context
entry. This gives us a mechanism for distinguishing the application
and broadcast context entries and allowing the different
header semantics.

JIRA Issues: CSL-6662

Differential Revision: https://phabricator.twitter.biz/D195974"
dschobel,2018-08-08 19:06:03,https://api.github.com/repos/twitter/finagle/git/commits/6f5098fc611838ffbf07bdd0f3c32fd3aba6d432,6f5098fc611838ffbf07bdd0f3c32fd3aba6d432,"finagle-core: resurrect Failure.Wrapped and Restartable

Problem / Solution

Resurrect Failure.Wrapped and Restartable to give some teams more time to fix
their usage.

JIRA Issues: PUBSUB-29985

Differential Revision: https://phabricator.twitter.biz/D199978"
bryce-anderson,2018-08-08 15:07:16,https://api.github.com/repos/twitter/finagle/git/commits/e38c8254be902522f794067442c66a0039728555,e38c8254be902522f794067442c66a0039728555,"finagle: Expand on the docs for the 'vector_hash' metric

Problem

The documentation for the load balancer 'vector_hash' metric doesn't
provide any guidance for how to use it.

Solution

Expand on the description.

JIRA Issues: CSL-6798

Differential Revision: https://phabricator.twitter.biz/D199378"
dschobel,2018-08-07 17:36:10,https://api.github.com/repos/twitter/finagle/git/commits/54435221ae361b3eef3fe0b4b6846099f1504421,54435221ae361b3eef3fe0b4b6846099f1504421,"finagle-core: rm deprecated Failure members

Problem / Solution

Remove deprecated members in Failure now that we've had a
release cycle.

JIRA Issues: CSL-6749

Differential Revision: https://phabricator.twitter.biz/D199361"
kevinoliver,2018-08-07 17:19:37,https://api.github.com/repos/twitter/finagle/git/commits/1042a62f1db05e4236168df7bdeff1fc22c9dba3,1042a62f1db05e4236168df7bdeff1fc22c9dba3,"finagle-core: Move SummarizingStatsReceiver's Scaladoc

Problem

The Scaladoc for SummarizingStatsReceiver was sitting up above the
imports.

Solution

Move it to its correct location above the class definition. While in
here, there was also a bit of light house cleaning done.

Differential Revision: https://phabricator.twitter.biz/D199163"
dschobel,2018-08-07 03:49:35,https://api.github.com/repos/twitter/finagle/git/commits/9ad9143b45d3ac91e3b6eb9701fe07ea44c56a91,9ad9143b45d3ac91e3b6eb9701fe07ea44c56a91,"Twitter-oss: update OSS libraries post-release to 18.9.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 18.9.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D199228"
vkostyukov,2018-08-07 01:04:29,https://api.github.com/repos/twitter/finagle/git/commits/5242d49d8e6aa9041626311ae66405b2634136b2,5242d49d8e6aa9041626311ae66405b2634136b2,"finagle|finatra|util: Introduce polymorphic Reader/Writer

# Problem

Both `Reader` and `Writer` are efficient and easy to reason about streaming APIs. Yet their usages
are very limited given the fixed in/out types they operate on (`Buf`).

# Solution

Abstract both `Reader` and `Writer` over their produced/consumed type.

```
// before
trait Reader {
  def read(): Future[Option[Buf]]
}

trait Writer {
  def write(b: Buf): Future[Unit]
}

// after
trait Reader[+A] {
   def read(): Future[Option[A]]
}

trait Writer[-A] {
  def write(a: A): Future[Unit]
}
```

JIRA Issues: CSL-6684

TBR=true

Differential Revision: https://phabricator.twitter.biz/D195638"
dschobel,2018-08-06 21:22:26,https://api.github.com/repos/twitter/finagle/git/commits/b12759650084cd4eaa890045f1f921127b368d20,b12759650084cd4eaa890045f1f921127b368d20,"Twitter-oss: Prepare OSS libraries for release 18.8

Problem

We want to release the next versions of our Twitter OSS libraries 18.8
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-6773

Differential Revision: https://phabricator.twitter.biz/D199004"
roanta,2018-08-06 18:02:25,https://api.github.com/repos/twitter/finagle/git/commits/ae4e6d603a497a59be5d5218eb68f8365ba83549,ae4e6d603a497a59be5d5218eb68f8365ba83549,"finagle-mux: cache calls to `locals` in dispatch

Problem / Solution

In order to avoid prematurely caching the `peerCertificate`
in mux, we recompute the locals per dispatch. However,
we can cache them after the first dispatch since they don't
change and are a performance overhead to recompute.

JIRA Issues: CSL-6772

Differential Revision: https://phabricator.twitter.biz/D198633"
dschobel,2018-08-03 23:20:16,https://api.github.com/repos/twitter/finagle/git/commits/0e0c7b43b2329941ccbde203d9f2b2fc6b011720,0e0c7b43b2329941ccbde203d9f2b2fc6b011720,"finagle-core: deprecate Failure constants in favor of FailureFlags

Problem / Solution

There's little value in having a duplicate set of failure
metadata constants so we deprecate one set in anticipation
of removal.

JIRA Issues: CSL-6717

TBR=true

Differential Revision: https://phabricator.twitter.biz/D195647"
stefanlance,2018-07-30 21:19:57,https://api.github.com/repos/twitter/finagle/git/commits/5e5ea39079f0445fc8823f5947ea2e504574c564,5e5ea39079f0445fc8823f5947ea2e504574c564,"finagle-base-http: Move supportSameSiteCodec out of exp package

Problem / Solution

The supportSameSiteCodec has not seen any issues in production so let's move it
out of exp.

JIRA Issues: CSL-6725

TBR=true

Differential Revision: https://phabricator.twitter.biz/D196517"
roanta,2018-07-27 17:20:11,https://api.github.com/repos/twitter/finagle/git/commits/e3221597377dafa6dfc7739b644d05622fdef923,e3221597377dafa6dfc7739b644d05622fdef923,"finagle-mysql: rollback off the request path

Problem

It's possible for a rollback from `RollbackFactory` to
take a significant amount of time and, thus, shouldn't be on
the request path.

Solution

Modify `RollbackFactory` to issue a rollback when we put
a connection back into the pool rather than when we check one out.

Result

As written, the additional work incurred for the rollback may
result in less  throughput from the connection pool, however, this
gives users a clear knob for addressing the issue (i.e. via configuring
the pool to offer more available connections).

JIRA Issues: CSL-6760

Differential Revision: https://phabricator.twitter.biz/D196673"
luciferous,2018-07-26 20:07:37,https://api.github.com/repos/twitter/finagle/git/commits/99479f320e71f903d0854686a2f425bdfbb6dff0,99479f320e71f903d0854686a2f425bdfbb6dff0,"finagle-core: introduce Stack.map; protect Stack.transform

Problem

Stack.transform is too powerful. We want its ability to modify each node
in the Stack without the ability to grow/shrink the Stack, and also
without the ability to modify params.

Solution

To do this, we reinstate the protected status of Stack.transform and
offer a safer alternative: Stack.map. Stack.map is similar to the map
operation over lists: it applies a function to each node in the stack,
creating a new stack, but it does so without growing/shrinking the
stack, and the function can't access params.

JIRA Issues: CSL-6757

Differential Revision: https://phabricator.twitter.biz/D195938"
luciferous,2018-07-26 15:31:47,https://api.github.com/repos/twitter/finagle/git/commits/755b17fa0151dea7f14b1cc62e19c74a87d3292a,755b17fa0151dea7f14b1cc62e19c74a87d3292a,"finagle-core: introduce Stack.NamedTransformer

Problem

There isn't a good way to customize a Finagle server for a specific operating
environment. One approach we've taken with server admission control is to
insert a placeholder Stack module (ServerAdmissionControl) into which we can
register user-defined admission control filters.  This works fine but we need a
way to do this more generally. There should be a standard mechanism for
transforming the default shape of the Stack.

Solution

NamedTransformer is a standard mechanism for transforming the default shape of
the Stack. It is a Stack.Transformer with a name.  Registration and retrieval
of transformers from global state is managed by StackServer.DefaultTransformer.
The transformers will run at materialization time for Finagle servers, allowing
users to mutate a Stack in a consistent way.

JIRA Issues: CSL-6447

Differential Revision: https://phabricator.twitter.biz/D193922"
luciferous,2018-07-26 15:17:06,https://api.github.com/repos/twitter/finagle/git/commits/cc49ee8300481d47cd1efdea439458c0930b9b67,cc49ee8300481d47cd1efdea439458c0930b9b67,"finagle-core: privatize type of Stack constructors

Problem

Leaf and Node allow public access to the internals of Stack via
pattern matching.

Solution

Make Leaf and Node private. Turn the type constructors into methods that
return `Stack[T]` instead of the underlying type.

JIRA Issues: CSL-6758

Differential Revision: https://phabricator.twitter.biz/D195924"
kevinoliver,2018-07-25 23:16:28,https://api.github.com/repos/twitter/finagle/git/commits/cddc074f126aca9151ff34eca2626694768c4459,cddc074f126aca9151ff34eca2626694768c4459,"finagle-thriftmux: Do not eagerly create metrics with MethodBuilder

Problem

MethodBuilder creates counters and stats even for endpoints that are
not used.

Solution

Lazily create the Service and Filters on the first request.

JIRA Issues: CSL-6387

Differential Revision: https://phabricator.twitter.biz/D196214"
Mandar-Shinde,2018-07-25 21:44:54,https://api.github.com/repos/twitter/finagle/git/commits/54c6f2728c2ed6e091909b447e362f04ab6fe81e,54c6f2728c2ed6e091909b447e362f04ab6fe81e,"finagle: Update README

Problem / Solution

Updated README with text formatting and banner image.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D196563"
spockz,2018-07-25 21:16:12,https://api.github.com/repos/twitter/finagle/git/commits/c0efc7759c64d99d14ca9244dab1b4f064f59782,c0efc7759c64d99d14ca9244dab1b4f064f59782,"finagle-core: Expose the poll interval in the apply methods

Problem

Users trying to use the InetResolver cannot specify the DNS poll interval.

Solution

Add an apply constructor method with the DNS poll interval added.

Result

Users can now specify the DNS poll interval when using their own instance of the InetResolver.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D196541"
roanta,2018-07-25 20:55:07,https://api.github.com/repos/twitter/finagle/git/commits/41a3da191bff0b97bd1e04c600a48795e40f890c,41a3da191bff0b97bd1e04c600a48795e40f890c,"finagle-mux: make peerCertificate a def

Problem

Transport.peerCertificate was memoized incorrectly because it was captured
at the wrong time during session establishment.

Solution

Make peerCertificate a def so it is re-evaluated each invocation.

JIRA Issues: CSL-6738

Differential Revision: https://phabricator.twitter.biz/D196202"
dschobel,2018-07-25 18:31:07,https://api.github.com/repos/twitter/finagle/git/commits/88948e6499a7f3f9ad8d76320faf63dc66175eb8,88948e6499a7f3f9ad8d76320faf63dc66175eb8,"finagle-http2: shave a write path allocation

Problem / Solution

Turn two write path allocations into one session-scoped allocation.

JIRA Issues: CSL-6755

Differential Revision: https://phabricator.twitter.biz/D196392"
dschobel,2018-07-25 18:00:48,https://api.github.com/repos/twitter/finagle/git/commits/2acab907a4f3e18e16c398528cbc65aef96261ea,2acab907a4f3e18e16c398528cbc65aef96261ea,"finagle-http2: fixup flaky payloadsize test

Problem

The Http2EndToEndTest can be flaky due to a race in
recording response payload sizes of the handshake
response.

Solution

Allow for the handshake response in the assert.

JIRA Issues: CSL-6744

Differential Revision: https://phabricator.twitter.biz/D196120"
stefanlance,2018-07-25 17:11:02,https://api.github.com/repos/twitter/finagle/git/commits/24d22ae7b49739864ba5a89c6a9ad7c326fc7489,24d22ae7b49739864ba5a89c6a9ad7c326fc7489,"finagle-core: Add example configs to `NackAdmissionFilter` docs

Problem

The `NackAdmissionFilter` docs do not describe how to choose values for the
params `nackRateThreshold` and `window`.

Solution

Add examples.

JIRA Issues: CSL-6750

Differential Revision: https://phabricator.twitter.biz/D196002"
stefanlance,2018-07-24 19:02:05,https://api.github.com/repos/twitter/finagle/git/commits/b486772d4a9471a33b151ae4f5bf8a05bb04fc30,b486772d4a9471a33b151ae4f5bf8a05bb04fc30,"finagle-mysql: Correctly convert java.sql.{Date,Timestamp} to Parameter

Problem

The java.sql.Date and java.sql.Timestamp implicits are ignored and the
java.util.Date conversion is used instead, because of the contravariance of the
CanBeParameter type parameter and the fact that java.sql.Date and
java.sql.Timestamp extend java.util.Date.

Solution

Use only one implicit (for the supertype) and pattern match within it to create
the correct Parameter.

JIRA Issues: CSL-6021

TBR=true

Differential Revision: https://phabricator.twitter.biz/D195351"
jcrossley,2018-07-24 09:50:08,https://api.github.com/repos/twitter/finagle/git/commits/77a6a3144e0a615c7d1672d5e8ed994217dc9186,77a6a3144e0a615c7d1672d5e8ed994217dc9186,"finagle-core: Ability to disable RequestLogger

Problem / Solution

RequestLogger can add unnecessary resource overhead,
even when not enabled. Add ability to remove it
via stack param configuration.

Differential Revision: https://phabricator.twitter.biz/D195459"
bryce-anderson,2018-07-23 21:33:33,https://api.github.com/repos/twitter/finagle/git/commits/307ec184b6cc198435fb1677c1bd23cca28b0e46,307ec184b6cc198435fb1677c1bd23cca28b0e46,"finagle-mux: Add `eventually` to some tests

Problem / Solution

We're checking some in-memory-stats in the Mux end-to-end tests without
accounting for racy behavior, so place them in `eventually` blocks.

Differential Revision: https://phabricator.twitter.biz/D195484"
mosesn,2018-07-23 18:28:58,https://api.github.com/repos/twitter/finagle/git/commits/81e809ba0ff68156561900401c247620622be483,81e809ba0ff68156561900401c247620622be483,"finagle-http2: Hook up HeaderSensitivityDetector properly for cleartext

Problem

HeaderSensitivityDetector is hooked up properly for h2, but not for h2c or
prior knowledge.

Solution

Hook up the header sensitivity detector unconditionally.

JIRA Issues: CSL-6657

Differential Revision: https://phabricator.twitter.biz/D195258"
bryce-anderson,2018-07-23 17:28:31,https://api.github.com/repos/twitter/finagle/git/commits/0b022e5f06bfe65912097ba6fcb7c2e8069df9e0,0b022e5f06bfe65912097ba6fcb7c2e8069df9e0,"finagle-http2: Consolidate HTTP/2 server codec configuration

Problem

We duplicate the HTTP/2 server codec configuration between h2c, TLS, and
prior knowledge implementations resulting in duplicate code and risking
inconsistent behavior in future modifications.

Solution

Consolidate the configuration of server codecs into one place. While
doing so we also thread through any configured header sensitivity
detector.

JIRA Issues: CSL-6733

Differential Revision: https://phabricator.twitter.biz/D194770"
bryce-anderson,2018-07-23 16:51:18,https://api.github.com/repos/twitter/finagle/git/commits/741c396939a3ed2af4cfc50a6f55928b81a516a0,741c396939a3ed2af4cfc50a6f55928b81a516a0,"finagle-thriftmux: Fix some tests that are flaky in Travis-CI

Problem / Solution

We have some racy behavior that tends to surface a lot in Travis-CI. The
behavior seems to be expected, so lets fix the asserts.

JIRA Issues: CSL-6731

Differential Revision: https://phabricator.twitter.biz/D194976"
stefanlance,2018-07-23 15:16:56,https://api.github.com/repos/twitter/finagle/git/commits/e01f02f5886ffecff67ee0037e35c1f12d135800,e01f02f5886ffecff67ee0037e35c1f12d135800,"finagle-mysql: Use preferred `TimestampValue` ctor; make injectionTimeZone UTC

Problem

`CanBeParameter.timestampCanBeParameter` and `javaDateCanBeParameter` use the
deprecated `TimestampValue` constructor, causing the message ""Injecting
timezone-less `java.sql.Timestamp` with a hardcoded local timezone"" to appear in
the log.

Also, the `TimestampValue` singleton's injection timezone is machine-dependent,
which can lead to unexpected results.

Solution

Use the preferred `TimestampValue` constructor. Change the singleton's
injection timezone to UTC.

JIRA Issues: CSL-6014

Differential Revision: https://phabricator.twitter.biz/D182920"
vkostyukov,2018-07-20 19:30:40,https://api.github.com/repos/twitter/finagle/git/commits/6d46121b21e07c27c9bc12929930a83c89b6ce99,6d46121b21e07c27c9bc12929930a83c89b6ce99,"finagle-core: Reuse TraceId decoding in contexts

# Problem / Solution

We should not repeat ourselves and instead reuse `TraceId.deserialize` method that does
exactly the same thing as `Trace.tryUnmarshal`.

JIRA Issues: CSL-6634

Differential Revision: https://phabricator.twitter.biz/D194078"
roanta,2018-07-20 16:58:35,https://api.github.com/repos/twitter/finagle/git/commits/514d15d9f446edfe5740a27e9a8d3989a1342608,514d15d9f446edfe5740a27e9a8d3989a1342608,"finagle-mux: change internal API to support async negotation

Problem

In order for a client's service acquistion to depend
on the tls handshake, we need to support async negotation.

Solution

Change the internal API of `MuxClientNegotiatingSession` to
support this.

Differential Revision: https://phabricator.twitter.biz/D192339"
stefanlance,2018-07-20 16:39:18,https://api.github.com/repos/twitter/finagle/git/commits/927ae3bd98f3c332747f66530ba1ecee82f6b11f,927ae3bd98f3c332747f66530ba1ecee82f6b11f,"finagle-base-http: Change `cookieCodec` from val to def

Problem

While transitioning from the Netty3CookieCodec to the Netty4CookieCodec there
is no way to fall back to the N3CC without restarting the service.

Solution

Change the codec from a val to a def so it can be toggled during runtime.

JIRA Issues: CSL-6729

Differential Revision: https://phabricator.twitter.biz/D194344"
jcrossley,2018-07-20 07:09:53,https://api.github.com/repos/twitter/finagle/git/commits/4bd1450fada660f3ba35ce268d363c80dd3bdb54,4bd1450fada660f3ba35ce268d363c80dd3bdb54,"finagle-core: Minimum `sendBackupAfter` of 1ms in BackupRequestFilter

Problem

If the latency at the percentile at which the BackupRequestFilter
is configured to send a backup request is close to zero, the
""sendBackupAfter"" can frequently be zero and thus a backup is sent
immediately, which is unnecessary.

Solution

Have a minimum of 1ms ""sendBackupAfter"".

Differential Revision: https://phabricator.twitter.biz/D194230"
dschobel,2018-07-19 23:30:50,https://api.github.com/repos/twitter/finagle/git/commits/b06ca0d4a7b2b8510e35b4e49c7d69bc9863573a,b06ca0d4a7b2b8510e35b4e49c7d69bc9863573a,"finagle/doc: fixup security links

Problem / Solution

Prefer the protocol agnostic TLS api.

Differential Revision: https://phabricator.twitter.biz/D194577"
dschobel,2018-07-19 22:21:50,https://api.github.com/repos/twitter/finagle/git/commits/b82b3f2d70cd7481ff7c1b5095ce8722cb938d4b,b82b3f2d70cd7481ff7c1b5095ce8722cb938d4b,"finagle/util/finatra: prefer FailureFlags constants over Failure aliases

Problem / Solution

We have duplicate constants for failure metadata. Since FailureFlags
is the preferred api, we replace the Failure.* constant aliases with
the real thing.

JIRA Issues: CSL-6717

Differential Revision: https://phabricator.twitter.biz/D194411"
dschobel,2018-07-19 21:44:29,https://api.github.com/repos/twitter/finagle/git/commits/66fb02cd9cae48bf7b17334875cb719763d745f0,66fb02cd9cae48bf7b17334875cb719763d745f0,"finagle/doc: document basics of TLS and SPNEGO

Problem / Solution

We have no documentation on configuring TLS or SPNEGO so we add some
along with code samples.

JIRA Issues: CSL-6728

Differential Revision: https://phabricator.twitter.biz/D194271"
bryce-anderson,2018-07-19 18:37:11,https://api.github.com/repos/twitter/finagle/git/commits/22a79bdcb257b26057e0ded5cb24167ddf23a797,22a79bdcb257b26057e0ded5cb24167ddf23a797,"finagle-serversets: Consider ip address when sorting Addresses

Problem

If a serverset comes back with all the same metadata which can happen
due to announcement bugs we don't have anything to sort against.

Solution

In the case where the shard id metadata is the same for both addresses
we fall back to sorting based on ip address and port. Since these are
unique, there is a unique ordering for the serverset.

JIRA Issues: CSL-6675

Differential Revision: https://phabricator.twitter.biz/D192203"
roanta,2018-07-19 16:45:06,https://api.github.com/repos/twitter/finagle/git/commits/0cf85eb3427d6c2d2f230921a5db0f785c2aad90,0cf85eb3427d6c2d2f230921a5db0f785c2aad90,"finagle-netty4: add a `OnSslHandshakeComplete` param

Problem

We want to expose an internal API which allows us to hook
into netty's `SslHandler.handshakeFuture`.

Solution

Add a `OnSslHandshakeComplete` Stack.Param which is exposed
internally (i.e. private[finagle]) only.

JIRA Issues: CSL-6523

Differential Revision: https://phabricator.twitter.biz/D192749"
vkostyukov,2018-07-19 03:57:43,https://api.github.com/repos/twitter/finagle/git/commits/33841d214af7506750d6106fdeb0d95fbd95cc42,33841d214af7506750d6106fdeb0d95fbd95cc42,"finagle-core: Call Trace.isActivelyTracing less

# Problem

We call `isActivelyTracing` too often to prevent unnecessarily structures from materializing (a very simple
proxy reports 12 calls/request). The overhead of `isActivelyTracing` (about 5% of CPU profile) may outweigh
the benefits of saving allocations.

Additionally, a canonical usage pattern requires users to guard tracing operations behind the `isActivelyTracing`
result, which pretty much doubles the number of checks we do today.

# Solution

Do not check `isActivelyTracing` internally before materializing annotations and rely on callers checking
that externally. This cuts the number of `isActivelyTracing` calls in a proxy in half: from 12 to 7.

JIRA Issues: CSL-5625

Differential Revision: https://phabricator.twitter.biz/D193300"
kevinoliver,2018-07-18 23:30:47,https://api.github.com/repos/twitter/finagle/git/commits/b1ca8f894781c065ce6073863dddbe032a4b431d,b1ca8f894781c065ce6073863dddbe032a4b431d,"finagle-mysql: Rollback connections by default

Problem

The connection pool should prioritize correctness first
and as such, without a ROLLBACK, a connection can
accidentally commit another connection's partially completed
work.

Solution

Default to rolling back and provide a means to opt-out.

JIRA Issues: CSL-6723

Differential Revision: https://phabricator.twitter.biz/D193923"
bryce-anderson,2018-07-18 19:55:02,https://api.github.com/repos/twitter/finagle/git/commits/735a6bae3f8352b569ff153ec47d97a54914eee2,735a6bae3f8352b569ff153ec47d97a54914eee2,"finagle-thriftmux: Remove push-based thriftmux server toggle

Problem / Solution

The push-based thriftmux implementation has been working well in
production now for a while so the time has come to remove the toggle and
make the push-based server muxer the default implementation.

JIRA Issues: CSL-6718

Differential Revision: https://phabricator.twitter.biz/D193630"
roanta,2018-07-18 19:11:24,https://api.github.com/repos/twitter/finagle/git/commits/51a767319e712bfb614d7f50e1058f3c8cdda3b5,51a767319e712bfb614d7f50e1058f3c8cdda3b5,"finagle-mysql: move rollback factory into a `with`-style API

Problem / Solution

We recently introduced the option to install
a `RollbackFactory` in your mysql client. However,
the API entry point introduced a new convention
instead of composing the ServiceFactory using the
stack. This patch moves the installation into a
`with`-style method and uses the stack instead.

Differential Revision: https://phabricator.twitter.biz/D193706"
dschobel,2018-07-18 16:47:31,https://api.github.com/repos/twitter/finagle/git/commits/4baf7655da15eeabf8c0c2c5ece5b12c3b74dd16,4baf7655da15eeabf8c0c2c5ece5b12c3b74dd16,"finagle-mux: server dispatcher should be aware of failure-flag encoded nacks

Problem

The server dispatcher fails to identify failure flag encoded nacks.

Solution

Make it aware of failure flags.

JIRA Issues: CSL-6715

Differential Revision: https://phabricator.twitter.biz/D193456"
vkostyukov,2018-07-18 00:57:58,https://api.github.com/repos/twitter/finagle/git/commits/50c00d8847e0e5f3ade029ee3a51b5e2e795f115,50c00d8847e0e5f3ade029ee3a51b5e2e795f115,"finagle-core: Promote parameter-less annotation classes to objects

# Problem / Solution

Parameter-less annotations (`c.t.f.tracing.Annotation`) could be promoted to objects for the sake of
reducing a footprint / allocation churn.

In order to preserve the Java-friendly API, new facade-like methods were added to `Trace` such that
all annotations are now covered by it (were only partially covered before).

JIRA Issues: CSL-6696

TBR=true

Differential Revision: https://phabricator.twitter.biz/D192598"
dschobel,2018-07-18 00:12:52,https://api.github.com/repos/twitter/finagle/git/commits/bcf4df380d878ae22230977dfa7ed31195163f20,bcf4df380d878ae22230977dfa7ed31195163f20,"finagle-core: nack admission filter should be aware of failure-flag encoded rejections

Problem

Failure-flag encoded rejections are ignored by the nack admission filter.

Solution

Make it aware of failure flags.

JIRA Issues: CSL-6715

Differential Revision: https://phabricator.twitter.biz/D193390"
jcrossley,2018-07-17 21:51:04,https://api.github.com/repos/twitter/finagle/git/commits/b792a0566c851355edcde25ed7bef7cd533f8d41,b792a0566c851355edcde25ed7bef7cd533f8d41,"finagle-core: Ignore exceptions flagged Failure.Ignorable in FailureAccrualFactory

Problem

FailureAccrualFactory currently ignores Failures flagged Failure.Ignorable, but
not exceptions extending FailureFlags with flag Failure.Ignorable.

Solution

Ignore exceptions extending FailureFlags with flag Failure.Ignorable (note that
Failure extends FailureFlags).

JIRA Issues: CSL-5928

Differential Revision: https://phabricator.twitter.biz/D193294"
luciferous,2018-07-17 21:37:26,https://api.github.com/repos/twitter/finagle/git/commits/2f350540599b71bcd7b43df7f34e1d0702e67f00,2f350540599b71bcd7b43df7f34e1d0702e67f00,"finagle-http: avoid Seq allocation on join

Problem / Solution

`Seq.apply` calls traced back to HttpClientDispatcher accounts for 0.3%
of the CPU profile on an HTTP/2 client. The overhead can be avoided by
using `a.joinWith(b)`.

JIRA Issues: CSL-6621

Differential Revision: https://phabricator.twitter.biz/D188091"
hamdiallam,2018-07-17 18:02:09,https://api.github.com/repos/twitter/finagle/git/commits/485406690b5a6bc240931ccf263bfa1f723ca14d,485406690b5a6bc240931ccf263bfa1f723ca14d,"finagle/finagle-core: Accept double in Ema.update

Problem:

The value for the Ema can be reset or initialized to a specific value through
the first update call. Internally, the ema value is of the Double data type but
the update function accepts a Long. This prevents updating, initializing, or
resetting the ema to a decimal value even though it is stored as a decimal
internally.

Solution:

Change the api for updating the ema to accept a Double instead of a Long.

Differential Revision: https://phabricator.twitter.biz/D192938"
bryce-anderson,2018-07-17 15:19:27,https://api.github.com/repos/twitter/finagle/git/commits/eedd1fd890da85c6efcdc0ff597e22055967d811,eedd1fd890da85c6efcdc0ff597e22055967d811,"finagle: Make the push-based tools and protocol implementations public

Problem / Solution

We've had a lot of success internally with the push-based protocol
implementations so the time seems right to make them publicly available.

JIRA Issues: CSL-6559

Differential Revision: https://phabricator.twitter.biz/D189187"
vkostyukov,2018-07-17 04:41:07,https://api.github.com/repos/twitter/finagle/git/commits/547cd86465109e6777d2afb98a7560d6a053b7b4,547cd86465109e6777d2afb98a7560d6a053b7b4,"finagle-core: Restructure Trace API for better performance

# Problem

Finagle `Trace` API is expensive as it performs context lookups on each operation.

# Solution

Introduce a new, ""capture""-like API that allows users to re-use already looked-up tracing context.

```
// Before (6 context lookups)
if (Trace.isActivelyTracing) {
  Trace.record(""foo"")
  Trace.record(""bar"")
}

// After (2 context lookups)
val trace = Trace()
if (trace.isActivelyTracing) {
  trace.record(""foo"")
  trace.record(""bar"")
}
```

JIRA Issues: CSL-5625

Differential Revision: https://phabricator.twitter.biz/D190670"
fsareshwala,2018-07-17 01:11:37,https://api.github.com/repos/twitter/finagle/git/commits/db7f59b9b9ca64b87aa6e9eaeada98a9ae5064ad,db7f59b9b9ca64b87aa6e9eaeada98a9ae5064ad,"source: move more cache-team mentions to rts-team

TBR=true

Differential Revision: https://phabricator.twitter.biz/D192962"
bryce-anderson,2018-07-13 21:52:48,https://api.github.com/repos/twitter/finagle/git/commits/22fc5c1fefe7c32c355391c94e8c4c9d6c6d17cb,22fc5c1fefe7c32c355391c94e8c4c9d6c6d17cb,"fingle-thriftmux: Fix flaky end-to-end test

Problem

We send a warmup request with really tight timeouts.

Solution

Freeze time for the warmup to make it only bound by the 5 second `await`
timeout.

JIRA Issues: CSL-6683

Differential Revision: https://phabricator.twitter.biz/D192118"
mosesn,2018-07-13 21:39:09,https://api.github.com/repos/twitter/finagle/git/commits/6406cb33650e6af1358cb339038f16db0bce97af,6406cb33650e6af1358cb339038f16db0bce97af,"finagle-http2: Provide AlwaysSensitive configuration option

Problem

It's not easy to mark everything as sensitive, which can be useful for disabling
caching in the header table.

Solution

Provide a configuration option that marks everything as sensitive.

Differential Revision: https://phabricator.twitter.biz/D191775"
vkostyukov,2018-07-13 17:29:33,https://api.github.com/repos/twitter/finagle/git/commits/d87f9c8ae4e50284f3ed46f133ca5d522af3571a,d87f9c8ae4e50284f3ed46f133ca5d522af3571a,"finagle-core: Mark ServerDestTracingProxy package-private

# Problem / Solution

`c.t.f.tracing.ServerDestTracingProxy` doesn't have to be public. Let's mark it package-private.

JIRA Issues: CSL-5625

Differential Revision: https://phabricator.twitter.biz/D191793"
viktortnk,2018-07-11 17:57:43,https://api.github.com/repos/twitter/finagle/git/commits/60187e275dfe75dbb81ae1a8e6e4e2f86430196d,60187e275dfe75dbb81ae1a8e6e4e2f86430196d,"finagle: add Whisk to adopters

Whisk is actively using finagle for it's APIs (Finatra) and
inter-service communication (finagle-thrift).

Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-6667

Differential Revision: https://phabricator.twitter.biz/D191071"
ben-ng,2018-07-11 17:53:27,https://api.github.com/repos/twitter/finagle/git/commits/6c02812036ebf0036a0f34275796fda4ea083248,6c02812036ebf0036a0f34275796fda4ea083248,"finagle: Add Etsy to adopters

Add Etsy to adopters with a link to how Etsy uses Finagle for
search.

Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-6667

Differential Revision: https://phabricator.twitter.biz/D191068"
roanta,2018-07-10 22:14:02,https://api.github.com/repos/twitter/finagle/git/commits/b12379aebe69fefaa9047b871fda1d0d85174485,b12379aebe69fefaa9047b871fda1d0d85174485,"Twitter-oss: update OSS libraries post-release to 18.8.0-SNAPSHOT

Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 18.8.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D190776"
roanta,2018-07-10 20:32:58,https://api.github.com/repos/twitter/finagle/git/commits/271f741636e03171d61180f03f6cbfe532de1396,271f741636e03171d61180f03f6cbfe532de1396,"csl: pre-release for july release

Problem

We want to release the next versions of our Twitter OSS libraries: 18.7.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D190739"
bryce-anderson,2018-07-10 18:17:36,https://api.github.com/repos/twitter/finagle/git/commits/24662bea872a28e4d429e0240db7b13e909c042b,24662bea872a28e4d429e0240db7b13e909c042b,"finagle-base-http: Remove limit in the number of query params that will be parsed

Problem

We limit the number of query params we will parse to 1024 in order to
guard against DoS attacks related to hash collisions in a hashmap. Since
Java 8, this is no longer an issue since HashMap and LinkedHashMap will
degrade to a tree map once a hash bucket becomes sufficiently occupied.
This changes worst case performance from O(n) to O(log(n)), mitigating the
attack vector for reasonably sized param payloads.

Solution

Remove the limit.

JIRA Issues: CSL-6649

Differential Revision: https://phabricator.twitter.biz/D190113"
bryce-anderson,2018-07-09 22:17:36,https://api.github.com/repos/twitter/finagle/git/commits/02041b15239d2b732f63f2ff25865d6d2d93d02e,02041b15239d2b732f63f2ff25865d6d2d93d02e,"finagle-base-http: Fix flaky DefaultHeaderMapTest

Problem

We're generating a valid header name (valid according to our
implementation) and checking that it gets rejected, which it doesn't so
the test can fail.

Solution

Fix the bounds used to generate an invalid header name.

JIRA Issues: CSL-6613

Differential Revision: https://phabricator.twitter.biz/D190356"
bryce-anderson,2018-07-09 18:06:58,https://api.github.com/repos/twitter/finagle/git/commits/b8765db0f74b02ab6c9a7ef8e77ac24fa3c96c82,b8765db0f74b02ab6c9a7ef8e77ac24fa3c96c82,"finagle-netty4-http: Cleanup initClientFn

Problem / Solution

The static function `initClientFn` method doesn't need to emit a new
lambda of type `ChannelPipeline => Unit` since the ChannelPipeline is
unused: all manipulations happen via the `fn` parameter.

Differential Revision: https://phabricator.twitter.biz/D189894"
bryce-anderson,2018-07-09 17:20:58,https://api.github.com/repos/twitter/finagle/git/commits/9a3c90707c413a3db747778e632c75cb38e476c2,9a3c90707c413a3db747778e632c75cb38e476c2,"finagle: Compress handling of dispatcher write failures

Problem / Solution

We have a pattern in dispatchers of performing a
`write(msg).rescue(wrapWriteException).before(read())`. The `rescue` and
`before` calls can be compressed into a single `transform` removing
unnecessary Future transformations.

JIRA Issues: CSL-6645

Differential Revision: https://phabricator.twitter.biz/D189639"
vkostyukov,2018-07-06 19:25:00,https://api.github.com/repos/twitter/finagle/git/commits/b96bb137d7813b166dc2af3601c3ea2a9f4e8cc4,b96bb137d7813b166dc2af3601c3ea2a9f4e8cc4,"finagle-core: Optimize Trace Context for efficiency

# Problem

Finagle's `Trace` API stores its contexts in two different places: current tracers and a `terminal` flag in
the local context; current trace id in a broadcast context. This model requires 1 read from and 2 writes
into the contexts (1rw for updating the `terminal` flag in the local context; 1w for storing a new id).

This counterintuitive model comes at the cost of context lookups, which is quite significant in our tests.

# Solution

Move the trace id  `terminal` flag under the `TraceId` object so only one context update needed to set a
new trace id (instead of 2 reads and 1 write before). The new structure also enables flattening the trace
context storing the current list of tracers.

Decoupling the `terminal` flag from tracers enables unwrapping the list of tracers and store them directly
as `List[Tracer]` (instead of `Ctx(tracer: List[Tracer])`).

Finally, keeping the list of tracers as distinct saves both allocations and running time on each `record`.

JIRA Issues: CSL-5625

Differential Revision: https://phabricator.twitter.biz/D188389"
Axxiss,2018-07-06 18:25:19,https://api.github.com/repos/twitter/finagle/git/commits/942fb33a5454a28702c52bae46321712fea41c13,942fb33a5454a28702c52bae46321712fea41c13,"finagle: Add time unit to connection_duration documentation

Problem

Time unit is not present in the metric name neither is mentioned in the
documentation.

Solution

Add time unit to the documentation.

Result

Dev won't have to check finagle's source code to know which is the unit of
`connection_duration`

Signed-off-by: Stefan Lance <slance@twitter.com>

JIRA Issues: CSL-6643

TBR=true

Differential Revision: https://phabricator.twitter.biz/D189487"
jcrossley,2018-07-05 11:17:22,https://api.github.com/repos/twitter/finagle/git/commits/3b755c8ab863c45ca9514c40f8f04d66c3ec3aea,3b755c8ab863c45ca9514c40f8f04d66c3ec3aea,"finagle-core: Capture server-side rejections from RequestSemaphoreFilter in StatsFilter

Problem

Because RequestSemaphoreFilter is before StatsFilter, there
is no visibility into the number of rejections.

Solution

Move RequestSemaphoreFilter after StatsFilter so the rejected/restartable
exceptions are captured. This also achieves parity with the other AdmissionControl
filters, which are after StatsFilter.

Differential Revision: https://phabricator.twitter.biz/D187127"
bryce-anderson,2018-07-03 20:52:51,https://api.github.com/repos/twitter/finagle/git/commits/eadb97a88074e329577c79a2e72108bb655d4e94,eadb97a88074e329577c79a2e72108bb655d4e94,"finagle-mux: Add myself to OWNERS

Problem / Solution

I know enough about the finagle-mux implementation that I feel
comfortable adding myself as an owner.

Differential Revision: https://phabricator.twitter.biz/D188759"
roanta,2018-07-03 20:40:22,https://api.github.com/repos/twitter/finagle/git/commits/d6ea488f4ddaa00471472116f69d08c95100d081,d6ea488f4ddaa00471472116f69d08c95100d081,"finagle-mux: Better docs for the `SessionT` type

Problem / Solution

The relationship between `newSession` and `toService` in push
mux is subtle and warrants a comment in `MuxPush`.

Differential Revision: https://phabricator.twitter.biz/D188721"
isabelmartin,2018-07-03 18:51:48,https://api.github.com/repos/twitter/finagle/git/commits/174c5be87dce5bd8094af8fa850776a430f9e39f,174c5be87dce5bd8094af8fa850776a430f9e39f,"finagle-core: Document changes needed when a FailureFlag is added

Problem:

There are some non-obvious changes that are necessary when adding a new
FailureFlag.

Solution:

Document them in a comment in the FailureFlag file. Also, add Ignorable to
ShowMask since it should be there.

JIRA Issues: CSL-6612

Differential Revision: https://phabricator.twitter.biz/D187966"
isabelmartin,2018-06-28 19:00:03,https://api.github.com/repos/twitter/finagle/git/commits/5b797e93f3c0ce4a2157e9603481236dc0e855ef,5b797e93f3c0ce4a2157e9603481236dc0e855ef,"finagle-core: Add DeadlineFilter to StackServer in DarkMode

Problem:

We would like to evaluate whether `DeadlineFilter` can be turned on by default.

Solution:

Add `DeadlineFilter` to `StackServer` in `DarkMode` so we can gather stats on
`DeadlineFilter`'s behavior in production.

JIRA Issues: CSL-6306

Differential Revision: https://phabricator.twitter.biz/D183750"
hamdiallam,2018-06-28 18:19:43,https://api.github.com/repos/twitter/finagle/git/commits/295e6a39bc422d2aabf0c0ffc4188daee4b49b46,295e6a39bc422d2aabf0c0ffc4188daee4b49b46,"finagle-benchmark: Add failure mode to LB simulation

Problem

The load balancer simulation does not account for node failures.

Solution

Similar to the LatencyProfile, a FailureProfile is defined to tell
whether next incoming response should be failed or fulfilled.
The failure profile can be loaded from a file using experimental data
or instantiated and given durations. The ServerNode uses the profile
to determine how to respond to a request.

Result

Additional available flag when running the simulation that adds an
unhealthy backend node to the server set that fails for 33% of the simulation.

JIRA Issues: CSL-6584

Differential Revision: https://phabricator.twitter.biz/D183789"
kevinoliver,2018-06-28 17:01:14,https://api.github.com/repos/twitter/finagle/git/commits/f3431a3c409b0bbd0caf32dd3d4044a9d6bba458,f3431a3c409b0bbd0caf32dd3d4044a9d6bba458,"finagle-core: Split out classes from Id.scala and Tracer.scala

Problem

Id.scala and Tracer.scala have many classes bundled within them.

Solution

Rename Id.scala to TraceId.scala and split out:
- SpanId.scala
- TraceId128.scala

Split out from Tracer.scala:
- Annotation.scala
- BroadcastTracer.scala
- BufferingTracer.scala
- ConsoleTracer.scala
- DefaultTracer.scala
- NullTracer.scala
- Record.scala

JIRA Issues: CSL-6605

Differential Revision: https://phabricator.twitter.biz/D186957"
vkostyukov,2018-06-28 16:44:57,https://api.github.com/repos/twitter/finagle/git/commits/5a5ceb63740480381a2a137474afa5c39ad23981,5a5ceb63740480381a2a137474afa5c39ad23981,"finagle-core: Introduce c.t.f.tracing.enabled flag to disable/enable tracing

# Problem / Solution

Tracing in Finagle could be expensive even when no tracers are configured for a given
client/server. To allow certain applications (load tests, benchmarks, etc) to opt-out entirely
from any tracing machinery,  we introduce a new global flag.

```
-com.twitter.finagle.tracing.enabled=false
```

JIRA Issues: CSL-5625

Differential Revision: https://phabricator.twitter.biz/D186557"
bryce-anderson,2018-06-27 23:34:40,https://api.github.com/repos/twitter/finagle/git/commits/9aa148d844e11e6dcf707f1aa8fe1c99ea8daf92,9aa148d844e11e6dcf707f1aa8fe1c99ea8daf92,"finagle-http2: Don't leak connections on connection races

Problem

If we have concurrent requests attempting to initiate a HTTP/2 upgrade
in the Http2Transporter they may both establish new connections but the
loser of the race will discard theirs without releasing the resources.

Solution

Pick a winner of the race condition before we make any connections.

Differential Revision: https://phabricator.twitter.biz/D186940"
kevinoliver,2018-06-27 21:41:23,https://api.github.com/repos/twitter/finagle/git/commits/9fc3a4557d7fd7df1051d5d8c1447b1888904a0b,9fc3a4557d7fd7df1051d5d8c1447b1888904a0b,"finagle-core: Memoize TraceCtx.tracers.distinct

Problem

`Trace.uncheckedRecord` calls `TraceCtx.tracers.distinct` on each
call.  This value is the same each time and thus is unnecessary work.

Solution

Add a memoized value on `TraceCtx` and use it in `uncheckedRecord`.

JIRA Issues: CSL-6611

Differential Revision: https://phabricator.twitter.biz/D186757"
kevinoliver,2018-06-27 17:33:35,https://api.github.com/repos/twitter/finagle/git/commits/015d7ec2a849855aee697ee0f4edc65d922973bc,015d7ec2a849855aee697ee0f4edc65d922973bc,"finagle-core: Remove lazy from TraceId.sampled

Problem

TraceId.sampled is lazy and there doesn't seem to be a good reason for
that.

Solution

Change it to a method.

Result

Benchmarks remain unchanged.

JIRA Issues: CSL-6606

Differential Revision: https://phabricator.twitter.biz/D186329"
vkostyukov,2018-06-26 20:49:08,https://api.github.com/repos/twitter/finagle/git/commits/64963bd8cd8f67cc7e18da17ea6930f55769afb0,64963bd8cd8f67cc7e18da17ea6930f55769afb0,"finagle-core: Add an implicit instance for a DefaultTimer

# Problem

Finagle's `DefaultTimer` is our preferred timer implementation yet it doesn't come
with an implicit instance making its use with Twitter Futures a bit more verbose.

# Solution

Introduce `DefaultTimer.Implicit`, an implicit instance that could be imported into
the scope.

JIRA Issues: CSL-4541

Differential Revision: https://phabricator.twitter.biz/D185896"
stefanlance,2018-06-26 00:02:46,https://api.github.com/repos/twitter/finagle/git/commits/bbca48c7100e46e9f07f5ec42cf8179447c43805,bbca48c7100e46e9f07f5ec42cf8179447c43805,"finagle-mysql: Make it easier to use a ctu.Time with PreparedStatements

Problem

To use a ctu.Time with a PreparedStatement, the Time must be converted to a
java.sql.Timestamp.

Solution

Add an implicit so one does not need to explicitly do the conversion.

JIRA Issues: CSL-6011

Differential Revision: https://phabricator.twitter.biz/D182973"
vkostyukov,2018-06-22 23:51:39,https://api.github.com/repos/twitter/finagle/git/commits/b8523a4541953d6bbc6a64b9409d75ff162afcd9,b8523a4541953d6bbc6a64b9409d75ff162afcd9,"finagle-netty4: Disable Netty 4 Recyclers

Problem

While not drastically improving the allocation profile, Netty 4 Recyclers come at the cost of significant CPU overhead.

Solution

Disable Netty 4 Recyclers.

JIRA Issues: CSL-5709

Differential Revision: https://phabricator.twitter.biz/D124851"
stefanlance,2018-06-22 19:43:24,https://api.github.com/repos/twitter/finagle/git/commits/550a92094b4b102e41fcdfb73abc46759b9c00b0,550a92094b4b102e41fcdfb73abc46759b9c00b0,"finagle-base-http: Remove semicolon from N4CC's set of wrappable chars

Problem

The comment above `ShouldWrapCharsBitSet` suggests that semicolons are legal
according to Netty 4's encoder and decoder, but they are not.

Solution

Remove the semicolon character from the bit set.

Result

Now the bit set is correctly aligned with Netty 4's strict validation rules and
the comment is correct. There is no difference in behavior since validation
happens after unwrapping: a semicolon in a cookie value will cause the
validation to fail regardless of whether the value is wrapped.

JIRA Issues: CSL-6592

Differential Revision: https://phabricator.twitter.biz/D184708"
usrinivasan,2018-06-22 14:13:07,https://api.github.com/repos/twitter/finagle/git/commits/04f4281fc170990b1be475fc287a03c074c7de17,04f4281fc170990b1be475fc287a03c074c7de17,"remove Procedure syntax using scalafix on the remaining Source scala files

Final round of Procedure syntax removal using scalafix.
However, lint.scalafix cannot be enabled by default as the 3rdparty/ directory cannot be fixed.

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D185091"
isabelmartin,2018-06-21 22:38:38,https://api.github.com/repos/twitter/finagle/git/commits/219fa56ce617c17f6f1b75e7d67fa5bc1cf1e92c,219fa56ce617c17f6f1b75e7d67fa5bc1cf1e92c,"finagle-core: Add toString for DeadlineExceeded FailureFlag

Problem:

When the DeadlineExceeded FailureFlag was added, no `toString` method was added
to allow recording of stats.

Solution:

Add it.

JIRA Issues: CSL-6594

Differential Revision: https://phabricator.twitter.biz/D184843"
mosesn,2018-06-21 21:51:20,https://api.github.com/repos/twitter/finagle/git/commits/fe8c64966f7fdf51eb5cd93c521e419234250d73,fe8c64966f7fdf51eb5cd93c521e419234250d73,"finagle-mux: Propagates `Ignorable` status over the network

Problem

When a BackupRequestFilter raises on a dispatch that has already been sent over
the wire, mux sends a Tdiscarded message so that the remote peer knows that the
work is no longer needed.  When the server receives the message, it interrupts
the dispatch on its end.  However, it loses the `Ignorable` status when it goes
over the network.

Solution

We should inspect the `why` section of the Tdiscarded to see if it's from
BackupRequestFilter, and if it is, then we should mark it as `Ignorable`.

Result

Stats and failure accrual on receivers don't get polluted by BackupRequestFilter
interruptions from the receiver's callers.

JIRA Issues: CSL-6516

Differential Revision: https://phabricator.twitter.biz/D183456"
isabelmartin,2018-06-20 19:31:19,https://api.github.com/repos/twitter/finagle/git/commits/f161e82ea0a4305437fef87c36558c9bbae52ffe,f161e82ea0a4305437fef87c36558c9bbae52ffe,"finagle-core: Add new FailureFlag for DeadlineFilter, DeadlineExceeded

Problem:

We need a new FailureFlag for `DeadlineExceededException` since neither
`Retryable` nor `NonRetryable` are exactly accurate. `Retryable` would indicate
the client could retry despite the deadline being expired, and `NonRetryable` is
inaccurate since the client could choose to resend the request with a later
deadline.

Solution:

Add the new `DeadlineExceeded` FailureFlag.

JIRA Issues: CSL-6518

Differential Revision: https://phabricator.twitter.biz/D181012"
usrinivasan,2018-06-20 05:53:16,https://api.github.com/repos/twitter/finagle/git/commits/ba43550f113cddffa03adb6b3a6d5d702a92382d,ba43550f113cddffa03adb6b3a6d5d702a92382d,"Remove Scala Procedure syntax using distributed-scalafix from majority of Source targets

Remove Scala Procedure syntax using distributed-scalafix from majority of Source targets

JIRA Issues: LANG-555

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D183988"
yufangong,2018-06-19 20:56:31,https://api.github.com/repos/twitter/finagle/git/commits/043ce828ed3120cb1ee822f7c858b676522a63a5,043ce828ed3120cb1ee822f7c858b676522a63a5,"util: Local.Context better representation

Problem:

The Local.Context is using a mutable Array to hold all locals, and it does two
deep copies every time we invoke the let method.

Solution:

Local.Context becomes a Key-Value structured type, it stores key as Local.Key
and value as Option[Any]. In this case, we can avoid wrapping the value in an
Option as Map does, and it avoid copying the entire array everytime as before.
This type has the better run-time performance for our use cases.

JIRA Issues: CSL-5667

Differential Revision: https://phabricator.twitter.biz/D182478"
luciferous,2018-06-19 18:18:50,https://api.github.com/repos/twitter/finagle/git/commits/29c4f51e61a3046d1be2a41224de6fddc02dd450,29c4f51e61a3046d1be2a41224de6fddc02dd450,"finagle-internal/slo: implement latency indicator

Problem

Latency indicators are necessary for adding SLOs to Finagle.

Solution

This implementation is adapted from the outline of LatencyIndicator in the
SLO design doc [1].

[1] https://docs.google.com/document/d/1MZDO7_dyitqaEsUd6nBWJblOiJhrwaaDFsfsNe_XwA4/edit

JIRA Issues: CSL-6433

Differential Revision: https://phabricator.twitter.biz/D182699"
mosesn,2018-06-18 15:39:25,https://api.github.com/repos/twitter/finagle/git/commits/0fff9228d056a6052b412a80c2166543a2cb8d61,0fff9228d056a6052b412a80c2166543a2cb8d61,"finagle-stats: Decrease contention in MetricsBucketedHistogram#add

Problem

When we profile h2 servers, we see contention in MetricsBucketedHistogram#add.

Solution

Change BucketedHistogram to be memory safe and remove intrinsic locking from
MetricsBucketedHistogram.  I tried ReentrantReadWriteLock in BucketedHistogram,
but it was too slow.  I tried several cheap read-write lock implementations
(lock on updating an integer and spin, atomic integer and spin, semaphore, StampedLock)
before finally settling on AQS, which is very fast.  I also started using an
AtomicIntegerArray so that racing in `add` would be safe.  However, converting
`num` and `total` to AtomicIntegers also lost us some speed.

JIRA Issues: CSL-5626

Differential Revision: https://phabricator.twitter.biz/D173413"
cacoco,2018-06-15 01:02:27,https://api.github.com/repos/twitter/finagle/git/commits/85189813cf3b07cd56b3b643883f1acc2ef879c6,85189813cf3b07cd56b3b643883f1acc2ef879c6,"Twitter-oss: update OSS libraries post-release to 18.7.0-SNAPSHOT

Summary: Problem

We want to update to the next SNAPSHOT version of our Twitter OSS libraries 18.7.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next SNAPSHOT version.

Differential Revision: https://phabricator.twitter.biz/D182495"
cacoco,2018-06-14 21:24:44,https://api.github.com/repos/twitter/finagle/git/commits/5b9961ef6ce11aa58376a8dc6d9d1f45175c7404,5b9961ef6ce11aa58376a8dc6d9d1f45175c7404,"Twitter-oss: Prepare OSS libraries for release 18.6.0

Summary: Problem

We want to release the next versions of our Twitter OSS libraries 18.6.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D182450"
usrinivasan,2018-06-14 20:12:26,https://api.github.com/repos/twitter/finagle/git/commits/1a1af42d31c986ade61f6971b18cbc767f680b2e,1a1af42d31c986ade61f6971b18cbc767f680b2e,"Remove deprecated Scala ""Procedure"" syntax for tests/scala/:: target using Scalafix

Remove deprecated Scala Procedure syntax for tests/scala/:: target using Scalafix

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D182275"
ShaneDelmore,2018-06-14 18:15:58,https://api.github.com/repos/twitter/finagle/git/commits/55455446fde3d1a8c9acfb22b0a64f9579d27ba7,55455446fde3d1a8c9acfb22b0a64f9579d27ba7,"Update usage of DefaultTimer to currently recommended methods

Remove deprecated com.twitter.finagle.util.DefaultTimer.get and com.twitter.util.NonFatal

Differential Revision: https://phabricator.twitter.biz/D181918"
roanta,2018-06-14 15:04:04,https://api.github.com/repos/twitter/finagle/git/commits/fd5babdda0529c8eecdb5fb4368c5c3b6b1cb5c3,fd5babdda0529c8eecdb5fb4368c5c3b6b1cb5c3,"finagle-mux: wrap interrupt in `CancelledRequestException` for push impl.

Problem / Solution

To maintain parity with the old mux implementation when we interrupt/drain a
session, we wrap the interrupt in a `CancelledRequestException`.

JIRA Issues: TL-10589

Differential Revision: https://phabricator.twitter.biz/D181766"
ShaneDelmore,2018-06-13 18:00:11,https://api.github.com/repos/twitter/finagle/git/commits/595a70fe70e20d05ae0b22b983c6e246e402fbbc,595a70fe70e20d05ae0b22b983c6e246e402fbbc,"finagle, util: Remove usages of deprecated NonFatal and DefaultTimer.twitter

Problem / Solution

The util NonFatal and DefaultTimer.twitter are deprecated so we're removing
a number of usages.

Differential Revision: https://phabricator.twitter.biz/D181199"
bryce-anderson,2018-06-12 23:57:54,https://api.github.com/repos/twitter/finagle/git/commits/1014b4145a3066b7457a90d26b314389084ae821,1014b4145a3066b7457a90d26b314389084ae821,"finagle-netty4-http: Remove dead field in Netty4ClientStreamTransport

Problem / Solution

The `transport` field of Netty4ClientStreamTransport is dead code, so we
can just remove it.

Differential Revision: https://phabricator.twitter.biz/D181509"
isabelmartin,2018-06-12 22:05:03,https://api.github.com/repos/twitter/finagle/git/commits/7c4691f809a1bb71ea4abfa23fcc3593096152d1,7c4691f809a1bb71ea4abfa23fcc3593096152d1,"finagle-core: Make DeadlineFilter.Mode public

Problem:

Finagle users would like to be able to configure `DeadlineFilter` using the
`.configured` method in addition to `.withAdmissionControl.deadlines`.

Solution:

Make the `Mode` param public.

Differential Revision: https://phabricator.twitter.biz/D181448"
bryce-anderson,2018-06-12 19:58:29,https://api.github.com/repos/twitter/finagle/git/commits/3d84e2975fb46982d5cedeb1f43e2c9c89221840,3d84e2975fb46982d5cedeb1f43e2c9c89221840,"finagle-core: By default, D-Aperture doesn't expand based on the loadband

Problem

When d-aperture expands its aperture based on the loadband, which is
influenced by a degree of randomness, d-aperture inherits that
randomness and we can find ourselves with severe banding.

Solution

Don't expand the aperture based on load. This would only be helpful in
the case where a small number of instances are experiencing elevated
traffic, but it still has negative effects on neighboring backends. In
the case where everyone is experiencing elevated load, the whole ring is
already evenly loaded, so expanding isn't productive.

JIRA Issues: CSL-6540

Differential Revision: https://phabricator.twitter.biz/D180922"
cacoco,2018-06-12 18:31:45,https://api.github.com/repos/twitter/finagle/git/commits/b6c256875b45c961fa36ee6fe8c8531fb831d1ec,b6c256875b45c961fa36ee6fe8c8531fb831d1ec,"finagle-core: Fix ServiceTest for Scala 2.12

Summary: Problem/Solution

`getClass#getName` is different in Scala 2.12 from Scala 2.11
for anonymous inner classes, causing the `ServiceFactory#toString`
to produce a different String representation between the two
Scala versions. The `ServiceTest` was hardcoded to the Scala
2.11 representation which fails in Scala 2.12.

Remove the brittle test case, add a new one based on an instance.

JIRA Issues: CSL-6511

Differential Revision: https://phabricator.twitter.biz/D181192"
ShaneDelmore,2018-06-12 04:31:51,https://api.github.com/repos/twitter/finagle/git/commits/5a3f48dc70dd89def43fdc4eef46acd8af474512,5a3f48dc70dd89def43fdc4eef46acd8af474512,"replace deprecated org.scalatest.mock.MockitoSugar with org.scalatest.mockito.MockitoSugar

removed deprecated usage of org.scalatest.mock.MockitoSugar

Differential Revision: https://phabricator.twitter.biz/D181165"
kevinoliver,2018-06-11 19:33:29,https://api.github.com/repos/twitter/finagle/git/commits/0fdee9deba6ecf9aff4f1759d538b1bd73f2c67b,0fdee9deba6ecf9aff4f1759d538b1bd73f2c67b,"finagle-http2: Remove StreamTransportFactory.Active allocations

Problem

`StreamTransportFactory.Active` allocations are a big allocation for
HTTP/2 clients.

Solution

Refactor the code to use 4 constant permutations of `Active`.

Result

No more allocations.

JIRA Issues: CSL-6522

Differential Revision: https://phabricator.twitter.biz/D180030"
yufangong,2018-06-11 18:54:59,https://api.github.com/repos/twitter/finagle/git/commits/85c1b43fb49cfaf6b762285ce3d666fbaf111715,85c1b43fb49cfaf6b762285ce3d666fbaf111715,"Upgrade sbt-jmh plugin version

Problem:

sbt-jmh integrated with async-proflier since 0.3.0, we were on 0.2.27.

Solution:

Upgrade to the newest so can use it.

JIRA Issues: CSL-6524

Differential Revision: https://phabricator.twitter.biz/D180532"
kevinoliver,2018-06-11 17:06:59,https://api.github.com/repos/twitter/finagle/git/commits/5be2fca882f892b26101d45142360c4ccf3ca343,5be2fca882f892b26101d45142360c4ccf3ca343,"finagle/doc: Document RequestLogger

Problem

Users and developers may want to know where time is spent within a
Finagle client or server stack. While `RequestLogger` exists for this
purpose, there is no documentation on how to use it.

Solution

Add an entry to the FAQ which explains it.

JIRA Issues: CSL-5756

Differential Revision: https://phabricator.twitter.biz/D180132"
luciferous,2018-06-08 18:12:39,https://api.github.com/repos/twitter/finagle/git/commits/aad62b4ff8c49b714460a79c0af0646acaa91e33,aad62b4ff8c49b714460a79c0af0646acaa91e33,"finagle-docs: Warn about blocking operations

Problem

The warning ""don't block a finagle thread"" went missing in a docs
migration.

Solution

Add a warning about blocking operations to the section on concurrent
programming with Futures. Also went into further detail adapted from the
util docs.

JIRA Issues: CSL-1556

Differential Revision: https://phabricator.twitter.biz/D176455"
luciferous,2018-06-07 23:51:19,https://api.github.com/repos/twitter/finagle/git/commits/c5f620f9e611b90f2098237397ec394cd9551a07,c5f620f9e611b90f2098237397ec394cd9551a07,"finagle-http: test that empty buf doesn't close stream prematurely

HTTP streams rely on chunked transfer encoding, which encodes the end of
stream as an empty chunk. Our design intent is to shield users from the
underlying encoding, such that writing an empty Buf to an HTTP stream
must not translate to an empty chunk (prematurely signaling EOS) - this
would be a very serious bug.

These tests show that no such bug is present.

JIRA Issues: CSL-2742

Differential Revision: https://phabricator.twitter.biz/D176670"
spockz,2018-06-07 01:58:06,https://api.github.com/repos/twitter/finagle/git/commits/c863ca0b606455d78350588595b3190165efe26b,c863ca0b606455d78350588595b3190165efe26b,"finagle-{core, netty4}: Support javax.net.ssl.[Key|Trust]Manager in Key and Trust credentials.

This is reviewed at https://github.com/twitter/finagle/pull/693

Problem

Proper H2 support is only provided when configuring the Http client with the new
Ssl[Client|Server]Configuration which takes KeyCredentials and TrustCredentials.
Before this PR those could only be constructed from PEM files. We use .jks files
to ship our credentials which are not usable with the KeyCredentials and
TrustCredentials.

For more background see #650.

Solution

I've added extra case classes for both KeyCredentials and TrustCredentials and
made sure they are passed through to netty.

Signed-off-by: Yufan Gong <yufang@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D177484"
mosesn,2018-06-06 01:55:25,https://api.github.com/repos/twitter/finagle/git/commits/fd4d2b23112809ee2e1e0060aeef0e3118ddadcc,fd4d2b23112809ee2e1e0060aeef0e3118ddadcc,"finagle-stats: Fast bucket finding with logarithms

Problem

We use binary search to find which bucket to use with our histograms, which
incurs a bunch of comparison operations.

Solution

Since our bucketing scheme is exponential, we can take the logarithm to look
up which bucket to use.

Result

Old:
Result ""com.twitter.finagle.stats.StatsReceiverBenchmark.addMetrics"":
  305.403 ±(99.9%) 21.344 ns/op [Average]
  (min, avg, max) = (279.395, 305.403, 320.314), stdev = 14.118
  CI (99.9%): [284.059, 326.747] (assumes normal distribution)

New:

Result ""com.twitter.finagle.stats.StatsReceiverBenchmark.addMetrics"":
  237.653 ±(99.9%) 16.106 ns/op [Average]
  (min, avg, max) = (225.779, 237.653, 259.360), stdev = 10.653
  CI (99.9%): [221.546, 253.759] (assumes normal distribution)

~20% faster

JIRA Issues: CSL-6430

Differential Revision: https://phabricator.twitter.biz/D173981"
jcrossley,2018-06-01 07:43:48,https://api.github.com/repos/twitter/finagle/git/commits/1855566d418f11d6159266a0ee767b12f454acab,1855566d418f11d6159266a0ee767b12f454acab,"finagle-core: Make NackAdmissionFilter public

Problem / Solution

Increase visibility of NackAdmissionFilter to public.

Differential Revision: https://phabricator.twitter.biz/D177322"
sameerparekh,2018-05-31 16:15:55,https://api.github.com/repos/twitter/finagle/git/commits/e189a25d4ef77407a05b1f7c43341cb9a6ba4230,e189a25d4ef77407a05b1f7c43341cb9a6ba4230,"finagle-core: Add failed hosts string to parser error when ':' not present

Problem

When `InetSocketAddressUtil` fails to find a ':' in the hosts string that it
gets, it produces an error message that doesn't include the string that failed
to parse, making it harder to figure out which host:port was improperly
configured.

Solution

Add the string that failed to parse properly to the exception message.

Differential Revision: https://phabricator.twitter.biz/D176324"
kevinoliver,2018-05-30 00:48:15,https://api.github.com/repos/twitter/finagle/git/commits/8b1f2a9c61c6e7d10d1f25cfce744f5cc796fc60,8b1f2a9c61c6e7d10d1f25cfce744f5cc796fc60,"finagle-mysql: Add docs to OK

Problem / Solution

`OK` is a commonly used part of the finagle-mysql API and it is
undocumented.

JIRA Issues: CSL-6010

Differential Revision: https://phabricator.twitter.biz/D175534"
cacoco,2018-05-29 18:36:36,https://api.github.com/repos/twitter/finagle/git/commits/25474da16ff5cbaf18a764f199e42e569c152452,25474da16ff5cbaf18a764f199e42e569c152452,"finagle-core: Add toString to c.t.finagle.{Filter, Service}

Summary: Problem

We'd like increased visibility into the make up of composed
Filters (and the terminal Service or ServiceFactory) in a
Filter chain which helps understand what is going on in a
myriad of situations including when step-through debugging.

Solution

Add `toString` implementations for `c.t.finagle.Filter` and
`c.t.finagle.Service` and properly manipulate the toString
implementation during `andThen` composition.

Result

A better default `toString` implementation for Service,
ServiceFactory and ServiceProxy, a more useful `toString`
for a Filter composition and for a composed Service (a Filter
chain with a terminal Service or ServiceFactory).

JIRA Issues: CSL-5355

Differential Revision: https://phabricator.twitter.biz/D172526"
edio,2018-05-29 17:36:56,https://api.github.com/repos/twitter/finagle/git/commits/0c39217724c2c701b2b7f46932ee5869a997c061,0c39217724c2c701b2b7f46932ee5869a997c061,"finagle-stats: fix MetricsBucketedHistogram latch period

Problem

`MetricsBucketedHistogram` allows specifying custom
latchPeriod to control size of the window for snapshot
calculation. However `snapshot` would set the end of the
window to the beginning of next minute if it is the first
snapshot ever or if previous snapshot is older than
`2 * latchPeriod`

Solution

Replace beginning of the next minute in
`MetricsBucketedHistogram.snapshot` with `Time.now + latchPeriod`

Issues: #687

Signed-off-by: Isabel Martin <imartin@twitter.com>

JIRA Issues: CSL-6408

Differential Revision: https://phabricator.twitter.biz/D172927"
isabelmartin,2018-05-24 23:00:36,https://api.github.com/repos/twitter/finagle/git/commits/cb6975af67c76d1fc917b68d5eba8939fd0a85bc,cb6975af67c76d1fc917b68d5eba8939fd0a85bc,"finagle-core: Introduce `.withDeadlines` API for admission control

Problem:

We would like deadline admission control to be turned on by default.

Solution:

Introduce new APIs so that servers can be configured with
`Server.withAdmissionControl.deadlines` to turn deadlines on,
`.darkModeDeadlines` to turn deadlines on in dark mode, and `.noDeadlines` so
that `DeadlineFilter` can be turned on off. We also introduce more params for
configuring `DeadlineFilter`'s window for when `DeadlineFilter` is enabled or in
dark mode.

JIRA Issues: CSL-6304

Differential Revision: https://phabricator.twitter.biz/D172402"
dschobel,2018-05-24 17:03:50,https://api.github.com/repos/twitter/finagle/git/commits/2c89cb9eff9a2d2ed2f7bd8cef747128b5d6b89e,2c89cb9eff9a2d2ed2f7bd8cef747128b5d6b89e,"finagle-http2: unprocessed streams are retryable on GOAWAY

Problem

The semantics of GOAWAYs allow for unprocessed streams to be
retried elsewhere but the current implementation does not
mark them as retryable.

Solution

Mark them as retryable.

JIRA Issues: CSL-6420

Differential Revision: https://phabricator.twitter.biz/D174401"
bryce-anderson,2018-05-23 23:14:52,https://api.github.com/repos/twitter/finagle/git/commits/a34f5614d547ff372631234d814354a00ffc04fd,a34f5614d547ff372631234d814354a00ffc04fd,"finagle-core: Explicitly remove the ema gauge in LoadBand

Problem

We rely on GC to cleanup our LoadBand ema guage, which can be a long
time since our balancer instances often find themselves in old-gen.

Solution

Explicitly close remove the gauge on closure of the Balancer instances.

JIRA Issues: CSL-6462

Differential Revision: https://phabricator.twitter.biz/D174323"
cacoco,2018-05-22 17:17:40,https://api.github.com/repos/twitter/finagle/git/commits/ca045b538ce347e95318286d600eed0fc613c60b,ca045b538ce347e95318286d600eed0fc613c60b,"finagle-core: Update MethodBuilderTest

Problem/Solution

There is a potentially flaky test in `c.t.finagle.client.MethodBuilderTest`.

Update the test.

Differential Revision: https://phabricator.twitter.biz/D173862"
dschobel,2018-05-21 22:51:33,https://api.github.com/repos/twitter/finagle/git/commits/368cd190d899fa4f314c4840c1011ce41efea7e6,368cd190d899fa4f314c4840c1011ce41efea7e6,"finagle-http2: expose error codes in stream closed exceptions

Problem:

RST + Goaways carry error information which can be useful to understand
system behavior. This information is currently dropped.

Solution:

Don't drop it.

JIRA Issues: CSL-6402

Differential Revision: https://phabricator.twitter.biz/D172971"
bryce-anderson,2018-05-21 21:22:18,https://api.github.com/repos/twitter/finagle/git/commits/d30e004b911bc5126113a7d1c88d15a5713855be,d30e004b911bc5126113a7d1c88d15a5713855be,"finagle-mux: Disable mux client negotiation interruption

Problem

Push-based mux includes mux handshaking as part of service creation and
for some situations, that can take longer than a reasonable request
timeout. This results in a request timeout being able to terminate
session acquisition, meaning the next one has to start from scratch, and
if the timeouts are too tight, this can kick in fail-fast behavior.

Solution

Disable interruption by default until we can more gracefully handle the
long service acquisition times.

JIRA Issues: CSL-6415

Differential Revision: https://phabricator.twitter.biz/D173487"
cacoco,2018-05-21 17:56:47,https://api.github.com/repos/twitter/finagle/git/commits/c60c7910f7b67d9d5a56211cd0977483f400974e,c60c7910f7b67d9d5a56211cd0977483f400974e,"finagle-core: Fix overlapping Pants build testing targets

Summary: Problem/Solution

Fix overlapping Pants build targets in
finagle/finagle-core/src/test/scala/BUILD.

Differential Revision: https://phabricator.twitter.biz/D173167"
robertpanzer,2018-05-21 17:26:52,https://api.github.com/repos/twitter/finagle/git/commits/940809af1a5f1874af0513c9cdca3b1c3b2ce03c,940809af1a5f1874af0513c9cdca3b1c3b2ce03c,"finagle-netty4: Avoid NoClassDefFoundError if netty-transport-native-epoll is excluded

Problem

Currently Finagle fails at startup when netty-transport-native-epoll is not
available on the classpath.  Even on OS X, or if epoll is explicitly disabled.
(If I have seen correctly it is even disabled by default here:
finagle/finagle-netty4/src/main/resources/com/twitter/toggles/configs/com.twitter.finagle.netty4.json

Lines 3 to 7 in 835b6c3
   ""id"": ""com.twitter.finagle.netty4.UseNativeEpollV2"", ""description"": ""Enable
   native epoll transport for netty4. Requires linux-x86_64"", ""fraction"": 0.0
)

Solution

The solution is to move the creation of the different EventLoopGroups into own
methods with an explicit type signature returning just EventLoopGroup.

Result

As a result it should be possible to exclude netty-transport-native-epoll from
the classpath and therefore reduce the size of the bundle.

Side note: I see that I didn't add any tests. Unfortunately my sbt know how is
not existing, so I don't know how to set up separate tests with different
dependencies.

Signed-off-by: Isabel Martin <imartin@twitter.com>

JIRA Issues: CSL-6407

Differential Revision: https://phabricator.twitter.biz/D172924"
cacoco,2018-05-18 17:46:24,https://api.github.com/repos/twitter/finagle/git/commits/6534e459302f48ba252cd7729eb57653c3b49b93,6534e459302f48ba252cd7729eb57653c3b49b93,"finagle-core: Make Filter.TypeAgnostic an abstract class

Summary: Problem/Solution

`Filter.TypeAgnostic` isn't extendable in Java. Make it
an abstract class.

JIRA Issues: CSL-6401

Differential Revision: https://phabricator.twitter.biz/D172716"
kevinoliver,2018-05-17 21:07:22,https://api.github.com/repos/twitter/finagle/git/commits/1403bae1fac1eba7d44fd2533171fc5eaf4ba711,1403bae1fac1eba7d44fd2533171fc5eaf4ba711,"finagle-core: Improve toString on ResponseClassifier.named.orElse

Problem

Named ResponseClassifiers lose their nice toStrings when they get
orElse-d.

Solution

Give the returned ResponseClassifier a nice toString.

Differential Revision: https://phabricator.twitter.biz/D172371"
kevinoliver,2018-05-17 20:58:28,https://api.github.com/repos/twitter/finagle/git/commits/e72b786049dae24e2070ac12c580fd852b3af3b2,e72b786049dae24e2070ac12c580fd852b3af3b2,"finagle-core, twitterserver: Introduce a load balancer registry

Problem

Load balancers have a lot of configuration and state which can be
invaluable while trying to understand behavior.

Solution

Introduce a registry that can expose the metadata in a key value
format. Put this to use on a new TwitterServer admin HTTP endpoint,
""/admin/balancers.json"".

Result

Developers have better visibility into the state of load balancers.

JIRA Issues: CSL-6343

Differential Revision: https://phabricator.twitter.biz/D171589"
bryce-anderson,2018-05-17 00:18:26,https://api.github.com/repos/twitter/finagle/git/commits/816771be83df43f76308a2061d5cdd71ae8cf26f,816771be83df43f76308a2061d5cdd71ae8cf26f,"finagle-mux: Push based negotiation should be interruptable

Problem

The SingletonPool may try to close a session that is still being
created via interrupting it, but right now we don't handle interruptions
of the push-mux client handshake.

Solution

Add an interrupt handler that will fail the negotiation phase with a
retryable Failure.

JIRA Issues: CSL-6173

Differential Revision: https://phabricator.twitter.biz/D148359"
cacoco,2018-05-16 22:27:38,https://api.github.com/repos/twitter/finagle/git/commits/ccd094ffc4b58a8e9549d5a1a67d0fb1914d6bdc,ccd094ffc4b58a8e9549d5a1a67d0fb1914d6bdc,"finagle-core: Optimize Filter.TypeAgnostic.Identity

Summary: Problem/Solution

`Filter.TypeAgnostic.Identity` is not optimized in the
same manner as `Filter.Identity`. Optimize it for when
it is included in a filter chain.

JIRA Issues: CSL-6390

Differential Revision: https://phabricator.twitter.biz/D171858"
stefanlance,2018-05-16 22:18:50,https://api.github.com/repos/twitter/finagle/git/commits/df2ff484cb8ee6146a192dac47f390648c7f1a2f,df2ff484cb8ee6146a192dac47f390648c7f1a2f,"Give SameSite metrics debug verbosity

Problem / Solution

Unexpected SameSite behavior has not been reported so let's remove these metrics
by setting their verbosity level to debug.

JIRA Issues: CSL-6275

Differential Revision: https://phabricator.twitter.biz/D171802"
mosesn,2018-05-16 20:51:30,https://api.github.com/repos/twitter/finagle/git/commits/101880d2bcc9d8a844585ab4cd571ec7d4715ca1,101880d2bcc9d8a844585ab4cd571ec7d4715ca1,"finagle-core: Reduce lock contention in Closables

Problem

We have to register and deregister a closable in Closables every time we receive
a new request and then respond to it in h2.  High throughput servers have seen
lock contention from this.

Solution

Use a ReadWriteLock instead of an intrinsic lock, and switch to using a CHM
instead of a HashSet.

JIRA Issues: CSL-5971

Differential Revision: https://phabricator.twitter.biz/D171480"
mosesn,2018-05-15 22:42:46,https://api.github.com/repos/twitter/finagle/git/commits/835b6c3f155c066b679294083fba638111f52a39,835b6c3f155c066b679294083fba638111f52a39,"finagle-http: Unflakify AbstractStreamingTest

Problem

Various tests were marked as flaky, some correctly, some incorrectly.

Solution

Unflaky everything!  After running this test 1000 times there were 0 failures.

JIRA Issues: CSL-5888

Differential Revision: https://phabricator.twitter.biz/D171344"
bryce-anderson,2018-05-15 20:10:41,https://api.github.com/repos/twitter/finagle/git/commits/5e8a4276979f9fc1bb41c9a80fd470e3e94dfac8,5e8a4276979f9fc1bb41c9a80fd470e3e94dfac8,"finagle-http2: Make sure we don't pass non-HTTP/1.x frames in child pipeline

Problem

The server HTTP/2 child pipeline can accidentally leak
Http2WindowUpdateFrame messages to the end of the pipeline that is
expecting only HttpObject messages, causing the stream to fail.

Solution

Refactor the RstHandler to strip all messages other than the HttpObject
messages and raise an exception if unexpected frames are observed.

JIRA Issues: CSL-6375

Differential Revision: https://phabricator.twitter.biz/D169594"
dschobel,2018-05-14 16:25:30,https://api.github.com/repos/twitter/finagle/git/commits/91d7fb0ea24ab45603d91776269819f010643579,91d7fb0ea24ab45603d91776269819f010643579,"finagle-core: don't satisfy promise in WatermarkPool while holding lock

Problem

Satisfying promises while holding a lock has a history of producing deadlocks.

Solution

Don't do that.

JIRA Issues: CSL-5994

Differential Revision: https://phabricator.twitter.biz/D169252"
vkostyukov,2018-05-11 20:55:41,https://api.github.com/repos/twitter/finagle/git/commits/396b1d54c1cab79ec710825f4c3aa64ea88fdbee,396b1d54c1cab79ec710825f4c3aa64ea88fdbee,"finagle: Fix flaky StringServerTest

# Problem

`StringServerTest` isn't just flaky, but also runs twice, as part of finagle-core and finagle-netty
test suites.

# Solution

Only depend on `stringprotocol` target in finagle-netty4 so we don't run tests twice. Also, move
asserts that rely on the ordering of events under `eventually`. Finally, add a new `clear()` method
to `ConnectionRegistry` that clears the underlying hash map before each test (to avoid collision
with other finishing tests).

JIRA Issues: CSL-6134

Differential Revision: https://phabricator.twitter.biz/D170235"
yufangong,2018-05-11 19:47:48,https://api.github.com/repos/twitter/finagle/git/commits/0f1ff3eb88de7e270254956b8bf5f2936c7d9947,0f1ff3eb88de7e270254956b8bf5f2936c7d9947,"finagle-thrift{mux}: Disable client per-endpoint stats by default

Problem:
When building a client ServicePerEndpoint, per-endpoint stats exported for all
endpoints, including the ones not being accessed. This increased the number of
metrics service exported.

Solution:
Disable per-endpoint stats filter by default for `.servicePerEndpoint`. It can
be enabled by explicitly setting c.t.f.thrift.RichClientParam or
Thrift.client.withPerEndpointStats.

Result:
This change doesn't affect building a client via ThriftRichClient#build, which
records stats for invoked endpoints. Service constructed via MethodBuilder may
look at MethodBuilder metrics for the endpoint instead:
https://twitter.github.io/finagle/guide/MethodBuilder.html?highlight=methodbuilder#metrics.

JIRA Issues: CSL-6087

Differential Revision: https://phabricator.twitter.biz/D169427"
isabelmartin,2018-05-09 17:59:23,https://api.github.com/repos/twitter/finagle/git/commits/8041fbb958b28b17d61e6fd28c6049cd0a9121b0,8041fbb958b28b17d61e6fd28c6049cd0a9121b0,"finagle-core: Add PropagateDeadlines param to TimeoutFilter

Problem:
`TimeoutFilter` always propagates deadlines to outbound requests, but this isn't
correct for all clients.

Solution:
Add an API for disabling this behavior through a `Stack.Param`.

JIRA Issues: CSL-6303

Differential Revision: https://phabricator.twitter.biz/D168405"
vkostyukov,2018-05-08 21:46:09,https://api.github.com/repos/twitter/finagle/git/commits/0ed730c94018ae37253810c13cd5515c9a6a4dae,0ed730c94018ae37253810c13cd5515c9a6a4dae,"csl: Bump OSS libraries versions to 18.6-SNAPSHOT

Summary: Problem / Solution

Bumping versions back to SNAPSHOTS.

JIRA Issues: CSL-6337

Differential Revision: https://phabricator.twitter.biz/D168276"
ryanoneill,2018-05-08 19:06:27,https://api.github.com/repos/twitter/finagle/git/commits/263e97866386d8d82f89838b045248daadad1564,263e97866386d8d82f89838b045248daadad1564,"finagle-netty4: Supply Correct Address to SslServerSessionVerifier

Problem / Solution

Currently `SslServerSessionVerifier` always receives an address of
`Address.failing`. This is due to incorrect logic in checking
that the channel's remote address is an `InetSocketAddress`.
It is accidentally checking whether the `Channel` itself is an
instance of `InetSocketAddress`, which is never the case. Change
the logic to test whether the `Channel.remoteAddress` is an instance
of `InetSocketAddress` instead. Then the address is properly supplied
to the `SslServerSessionVerifier`.

JIRA Issues: CSL-6262

Differential Revision: https://phabricator.twitter.biz/D168334"
bryce-anderson,2018-05-08 15:06:36,https://api.github.com/repos/twitter/finagle/git/commits/b208adfcc84a4cd10ee249ef9faf9295e43a7bc9,b208adfcc84a4cd10ee249ef9faf9295e43a7bc9,"finagle-core: Add flag for disabling deterministic apertures dynamic width expansion

Problem

Finagles deterministic-aperture implementation can adjust its logical
aperture based on load information, but that load information is based
on the stochastic processes. That means that under some conditions,
our deterministic aperture isn't deterministic. As deterministic-aperture
typically has highly concentrated load due to reduced connection counts,
traffic banding as high as 2x has been observed.

Solution

Add a temporary flag to disallow the expansion of deterministic-apertures
aperture. After the new behavior proves to be what we want, it will be
removed.

JIRA Issues: CSL-6354

Differential Revision: https://phabricator.twitter.biz/D167988"
vkostyukov,2018-05-07 21:00:47,https://api.github.com/repos/twitter/finagle/git/commits/225a244e96935278721ea40a54aa2c2e53412f21,225a244e96935278721ea40a54aa2c2e53412f21,"csl: Prepare OSS libraries for release 18.05

# Problem

We want to release the next versions of our Twitter OSS libraries 18.5
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

# Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-6337

Differential Revision: https://phabricator.twitter.biz/D168160"
kevinoliver,2018-05-07 20:55:03,https://api.github.com/repos/twitter/finagle/git/commits/476ff7d1cde7114bd4e07fbb8ccf944d33fc7e5a,476ff7d1cde7114bd4e07fbb8ccf944d33fc7e5a,"finagle-core: Include failures in MethodBuilder metrics, take 2

Problem / Solution

Users are interested in what failures are happening for a specific
endpoint. The change in D167589 was flawed. This fixes it correctly
and includes the necessary test updates.

JIRA Issues: CSL-6317

Differential Revision: https://phabricator.twitter.biz/D168095"
yufangong,2018-05-07 19:49:52,https://api.github.com/repos/twitter/finagle/git/commits/7b0281c52469a33a345f985161c5c0535b508073,7b0281c52469a33a345f985161c5c0535b508073,"finagle-thrift{mux}: Disable per-endpoint statsFilter by default

Problem:

Per-endpoint stats filters created stats counters for all endpoints, including
the ones not being accessed. This increased the number of metrics server
exported.

Solution:
Disable per-endpoint stats filter by default. It can be enabled by explicitly
setting `c.t.f.thrift.RichServerParam` or calling
`Thrift.server.withPerEndpointStats`.

JIRA Issues: CSL-6087

Differential Revision: https://phabricator.twitter.biz/D167433"
kevinoliver,2018-05-07 16:56:40,https://api.github.com/repos/twitter/finagle/git/commits/f58ab46f0df812fa7efbf7b4252235a35a8968d6,f58ab46f0df812fa7efbf7b4252235a35a8968d6,"finagle-core: Include failures in MethodBuilder metrics

Problem

Users are interested in what failures are happening for a specific
endpoint.

Solution

Add them back.

JIRA Issues: CSL-6317

Differential Revision: https://phabricator.twitter.biz/D167589"
mosesn,2018-05-05 00:04:12,https://api.github.com/repos/twitter/finagle/git/commits/8b136a22e486d9d1e012acbad46592a003ddf98e,8b136a22e486d9d1e012acbad46592a003ddf98e,"finagle-toggle: Make StandardToggleMap mutable

Problem

StandardToggleMap has an underlying mutable map, but it's difficult to access.

Solution

Make StandardToggleMap a `ToggleMap.Mutable` that proxies the mutating method
to the underlying mutable map.

JIRA Issues: CSL-6348

Differential Revision: https://phabricator.twitter.biz/D167046"
yufangong,2018-05-03 18:39:51,https://api.github.com/repos/twitter/finagle/git/commits/9deb18b45415b0961c7ca26b44ce967d6f73a18e,9deb18b45415b0961c7ca26b44ce967d6f73a18e,"finagle-thrift: Removed duplicated libthrift files

Problem:

finagle-thrift includes files copied from libthrift that cause assembly merge
conflicts. These files are for supporting libthrift-0.9.1 and greater versions.
This is reported here https://github.com/twitter/finagle/issues/688.

Solution:

Remove those files as we upgraded libthrift.

JIRA Issues: CSL-6310

Differential Revision: https://phabricator.twitter.biz/D165455"
bryce-anderson,2018-05-02 23:34:40,https://api.github.com/repos/twitter/finagle/git/commits/c295fe30681038a9277e86c3a30044c5a70ae4ad,c295fe30681038a9277e86c3a30044c5a70ae4ad,"finagle-netty4: Remove LeakSafeCompositeByteBuf

Summary: Problem

Now that we're using reference counting correctly in our pipelines, we
no longer need LeakSafeCompositeByteBuf.

Solution

Remove it and it's supporting cast.

Differential Revision: https://phabricator.twitter.biz/D166099"
bryce-anderson,2018-05-02 23:02:55,https://api.github.com/repos/twitter/finagle/git/commits/0d1c93d3c1630508e1bffd0018d3c81f4534e42b,0d1c93d3c1630508e1bffd0018d3c81f4534e42b,"finagle-core: Fix flaky DefaultTracingTest

Summary: Problem

DefaultTracingTest is flaky, potentially due to a race on the server
between sending the response and adding the tracing annotation. We
only await the response on the client side, so it's possible that the server
adds the annotation after the client has already received it.

Solution

Use an `eventually` block to allow the racy behavior to resolve.

JIRA Issues: CSL-6347

Differential Revision: https://phabricator.twitter.biz/D165777"
dschobel,2018-05-02 02:30:12,https://api.github.com/repos/twitter/finagle/git/commits/db82793dae192e9d1222a680c47ef1128298e970,db82793dae192e9d1222a680c47ef1128298e970,"finagle-http2: higher starting id for alpn + priorknowledge client sessions

Summary: Problem

There is a bug in netty's http2 FrameCodec which causes NPEs when the first
stream is deregistered which only affects non-H2C sessions.

Solution

Increase the initial stream id for prior-knowledge + alpn sessions.

JIRA Issues: CSL-6329

Differential Revision: https://phabricator.twitter.biz/D165657"
bryce-anderson,2018-05-01 17:13:29,https://api.github.com/repos/twitter/finagle/git/commits/91458c152ce838ecbbaaae24a790aa2a482a3a0a,91458c152ce838ecbbaaae24a790aa2a482a3a0a,"finagle-netty4: Extend timeout for Netty4SslTest

Summary: Problem / Solution

The Netty4SslTest is a bit flaky, potentially due to stingy timeouts, so
we just extend them a bit to give CI a chance.

JIRA Issues: CSL-6342

Differential Revision: https://phabricator.twitter.biz/D165885"
bryce-anderson,2018-04-30 16:10:01,https://api.github.com/repos/twitter/finagle/git/commits/3598046344697f02b61b3f24dc41d06f7486df28,3598046344697f02b61b3f24dc41d06f7486df28,"finagle-netty4: Delete the ByteBufAsBuf class

Summary: Problem

We keep getting burned by ByteBufAsBuf because it often leaks it's
underlying ByteBuf in one form or another. Furthermore, it's essentially
unused at this time.

Solution

Delete it.

JIRA Issues: CSL-6070

Differential Revision: https://phabricator.twitter.biz/D141010"
mosesn,2018-04-27 19:06:31,https://api.github.com/repos/twitter/finagle/git/commits/16dbe1705303ec61e3cd75cf1f63957ef7f6405f,16dbe1705303ec61e3cd75cf1f63957ef7f6405f,"finagle-toggle: Improve java compatibility

Summary: Problem

ToggleMap and Toggle found a bunch of java compatibility landmines.

1. traits that extend abstract classes don't propagate their inheritance
to java.
2. methods that return generics with a primitive subtype are compiled
as if they return an object subtype.  jdk8 disallowed casting from Gen<Object>
to Gen<SpecificType>.
3. PartialFunction[A, Boolean]#apply returns an Object instead of a boolean.

Solution

Add helpers to ToggleMap and Toggle to return a better type in java, and change
everything that extends ToggleMap to be an abstract class.  For ToggleMap.Proxy,
which is mixed in with other classes, we should instead change it to no longer
extend ToggleMap, and instead have a self-type which conforms to ToggleMap.

JIRA Issues: CSL-6325

Differential Revision: https://phabricator.twitter.biz/D164489"
yufangong,2018-04-26 20:18:33,https://api.github.com/repos/twitter/finagle/git/commits/fe4b399bbe6844d05a9c694558c5461f630602ac,fe4b399bbe6844d05a9c694558c5461f630602ac,"Upgrade sbt to 1.1.4

Summary: Problem/Solution:

Upgrading sbt to a newer version.

Result:

Adaptive Scrooge generates some java class files and it is causing sbt compile
failing, temporary turn it off.

JIRA Issues: CSL-5992

Differential Revision: https://phabricator.twitter.biz/D163144"
mosesn,2018-04-26 17:40:55,https://api.github.com/repos/twitter/finagle/git/commits/fe8a05d46681ad830cbbba23f6630499e2bbe2ed,fe8a05d46681ad830cbbba23f6630499e2bbe2ed,"finagle-doc: Document our policy on nulls

Summary: Problem

Although it's clear to scala users of finagle that none of our APIs take nulls,
some java users can be confused by this.

Solution

Document our policy on nulls in the FAQ.

Differential Revision: https://phabricator.twitter.biz/D163810"
kevinoliver,2018-04-26 04:52:07,https://api.github.com/repos/twitter/finagle/git/commits/f145f8480423ec48da1775a3a56505e9c230c346,f145f8480423ec48da1775a3a56505e9c230c346,"finagle-mysql: Add examples to mysql.Client scaladocs

Summary: Problem / Solution

Examples can be illuminating for the commonly used APIs.

JIRA Issues: CSL-6006

Differential Revision: https://phabricator.twitter.biz/D163889"
bryce-anderson,2018-04-25 22:54:50,https://api.github.com/repos/twitter/finagle/git/commits/cc33315126a7fd5f2c798d0fefc28d92053b59b0,cc33315126a7fd5f2c798d0fefc28d92053b59b0,"finagle-thriftmux: Make the push-based ThriftMux client the default

Summary: Problem / Solution

The push-based ThriftMux client has been running in production for a
while now so it seems safe enough to make it the default ThriftMux
client muxer.

JIRA Issues: CSL-6223

Differential Revision: https://phabricator.twitter.biz/D158134"
kevinoliver,2018-04-25 19:32:56,https://api.github.com/repos/twitter/finagle/git/commits/7ca095fc7a320c458e7f65301d666a4340ff3381,7ca095fc7a320c458e7f65301d666a4340ff3381,"finagle-docs: Update deprecated usages in docs

Summary: Problem

Some docs and examples were using the deprecated ServiceIface and
MethodIface.

Solution

Update the docs to point to ServicePerEndpoint and MethodPerEndpoint.

JIRA Issues: CSL-6311

Differential Revision: https://phabricator.twitter.biz/D163366"
kevinoliver,2018-04-25 19:01:40,https://api.github.com/repos/twitter/finagle/git/commits/e72eb78f769c3602c002b27a2b6f674a48be8337,e72eb78f769c3602c002b27a2b6f674a48be8337,"finagle-mysql: Document public APIs returning Result

Summary: Problem

`Result` is a large ADT and is exposed in some public APIs
without much documentation on what to expect for output.

Solution

Document the return types for `Client.query` and
`PreparedStatement.apply`.

JIRA Issues: CSL-6168

Differential Revision: https://phabricator.twitter.biz/D163224"
kevinoliver,2018-04-24 17:42:25,https://api.github.com/repos/twitter/finagle/git/commits/80e8733be54950e872c1a04846d1d3f5b83c6cbe,80e8733be54950e872c1a04846d1d3f5b83c6cbe,"finagle-mysql: Optimize Row's typed APIs

Summary: Problem

The newly added typed APIs are not as performant as using `apply`.

Solution

Introduce an internal `indexOfOrSentinel: Int` method that can
be used.

Result

Latency and allocations for the typed APIs now match or beat `apply`.

JIRA Issues: CSL-6242

Differential Revision: https://phabricator.twitter.biz/D162732"
kevinoliver,2018-04-24 17:04:45,https://api.github.com/repos/twitter/finagle/git/commits/fb995901e927bb36e23127789381d32c756b5a66,fb995901e927bb36e23127789381d32c756b5a66,"finagle-mysql: Optimize number fields in StringEncodedRow

Summary: Problem

`StringEncodedRow` does number parsing by creating a `String` then
converting to the proper numeric type. This is wasteful and can be
made faster.

Solution

Parse the bytes directly into a number.

Result

33% faster and 30% less allocations.

JIRA Issues: CSL-6242

Differential Revision: https://phabricator.twitter.biz/D162538"
stefanlance,2018-04-24 00:06:28,https://api.github.com/repos/twitter/finagle/git/commits/c5bac801d28bddef3d7f6be7c1ce728880c6f688,c5bac801d28bddef3d7f6be7c1ce728880c6f688,"finagle: Mention derived Netty code in NOTICE

Summary: Problem / Solution

We recently copied and lightly modified code from the Netty project into
Finagle for the SameSite Cookie attribute patches. We should note this
in Finagle's NOTICE.

Differential Revision: https://phabricator.twitter.biz/D162870"
kevinoliver,2018-04-23 21:33:55,https://api.github.com/repos/twitter/finagle/git/commits/ab2f39e5696db0465a0f5716c3f9e6dd03940951,ab2f39e5696db0465a0f5716c3f9e6dd03940951,"finagle-mysql: Optimize BinaryEncodedRow.values

Summary: Problem / Solution

`BinaryEncodedRow.values` is called once per row and there are some
basic optimizations we can apply.

JIRA Issues: CSL-6242

Differential Revision: https://phabricator.twitter.biz/D162627"
bryce-anderson,2018-04-23 16:25:54,https://api.github.com/repos/twitter/finagle/git/commits/2d2b10b11298d0e1a2c1981259584abfc9733473,2d2b10b11298d0e1a2c1981259584abfc9733473,"finagle-netty4: Propagate ChannelExceptions from Netty4PushChannelHandle.onClose

Summary: Problem

Some exceptions from the Netty channel may be of interest to the
application layer, such as SSLExceptions, but we don't propagate them at
all.

Solution

If the handle is closed due to an exception other than
ChannelClosedException, we propagate that through the failure channel of
the `onClose` promise.

JIRA Issues: CSL-6261

Differential Revision: https://phabricator.twitter.biz/D160475"
bryce-anderson,2018-04-23 16:11:30,https://api.github.com/repos/twitter/finagle/git/commits/cd795522d4398b37e556c3888899938fb7ed3906,cd795522d4398b37e556c3888899938fb7ed3906,"finagle-core: Fix flaky test

Summary: Problem

DefaultTracingTest uses the same tracer for both client and server, but
the response events have been observed to be reordered from time to
time. This is likely due to recording those events via a `respond`
block, which doesn't guarantee an order with respect to the other
continuations attached to the Future.

Solution

Don't interleave client and server events in the same Tracer.

JIRA Issues: CSL-6294

Differential Revision: https://phabricator.twitter.biz/D162478"
kevinoliver,2018-04-20 20:22:10,https://api.github.com/repos/twitter/finagle/git/commits/fc377352e27dba5af7d7405fc4593e99daa29fad,fc377352e27dba5af7d7405fc4593e99daa29fad,"finagle: Remove LatencyHistogram

Summary: Problem

`LatencyHistogram` is private[finagle] and part of finagle-exp.  The
only usage is in finagle-mux's `RequestSnooper`. Making it a good
candidate for code removal.

Solution

Remove it and replace the lone usage with
`WindowedPercentileHistogram`.

JIRA Issues: CSL-6289

Differential Revision: https://phabricator.twitter.biz/D161534"
bryce-anderson,2018-04-20 01:39:46,https://api.github.com/repos/twitter/finagle/git/commits/78897853e6b68e3254820dc51e31066ce5519289,78897853e6b68e3254820dc51e31066ce5519289,"finagle-netty4: Remove debug metrics from the connect logic of ConnectionBuilder

Summary: Problem / Solution

The metrics previously added to ConnectionBuilder are no longer useful,
so we can remove them.

JIRA Issues: CSL-6290

Differential Revision: https://phabricator.twitter.biz/D161579"
stefanlance,2018-04-19 22:16:38,https://api.github.com/repos/twitter/finagle/git/commits/44abf7521a1f26848d0cb71c9be099bc7d5e0a6b,44abf7521a1f26848d0cb71c9be099bc7d5e0a6b,"finagle-base-http: Add SameSite to DefaultCookie

Summary: Problem

The Netty 3 cookie decoder does not parse the SameSite attribute. When our
decoder encounters a SameSite token in a Set-Cookie header containing multiple
cookies, it passes this header to the Netty 3 cookie decoder which parses
out SameSite as its own cookie. Then our decoder sees the SameSite token in the
header and applies it to all cookies.

E.g., if the server intends to set:

  set-cookie: foo=bar
  set-cookie: baz=qux; SameSite=Lax
  set-cookie: quux=quuz

It would actually set:

  set-cookie: foo=bar; SameSite=Lax
  set-cookie: baz=qux; SameSite=Lax
  set-cookie: quux=quuz; SameSite=Lax
  set-cookie: SameSite=Lax

Solution

Extend Netty 3's http DefaultCookie and add a SameSite field. This solves the
first problem.

Copy the Netty 3 CookieDecoder and allow it to parse SameSite. Allow our
Netty3Cookie -> c.t.f.http.Cookie bijection to parse SameSite from our new
DefaultCookie subclass. Use the new decoder in Netty3CookieCodec.decodeClient.
Now we don't have to call decodeSameSite, which solves the second problem.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D161091"
kevinoliver,2018-04-19 18:36:05,https://api.github.com/repos/twitter/finagle/git/commits/67d6f1296367d0a262b22cec633c13ac18d244e5,67d6f1296367d0a262b22cec633c13ac18d244e5,"finagle-mysql: Optimize TimestampValue.fromString

Summary: Problem

`TimestampValue.fromString` as implemented could be made faster
without much effort.

Solution

Apply a few small optimizations.

Result

Modest runtime and allocation improvements.

JIRA Issues: CSL-6247

Differential Revision: https://phabricator.twitter.biz/D161180"
bryce-anderson,2018-04-19 16:14:34,https://api.github.com/repos/twitter/finagle/git/commits/4377f02a83f19cb9c790d43d84d6269e62d1f76a,4377f02a83f19cb9c790d43d84d6269e62d1f76a,"finagle-core, finagle-http: Add ability to suppress ServerAC

Summary: Problem

ServerAdmissionControl is responsible for nacking requests but it does
so without any context as to whether the client could even retry it if
it wanted to. For example, a HTTP client may be streaming a body from a
Reader that it didn't generate directly, so if that request gets
nacked, there is no way to get back any data that was read during the
first dispatch, and therefore the request couldn't be retried even if
it is known the server didn't process it.

Solution

Create a local context value that acts as a signal for
ServerAdmissionControl to interpret as 'this cannot be retried, so don't
nack this request'. Since HTTP is our only protocol that suffers from this
property (thus far) HTTP servers will signal that all requests that have
a body shouldn't be nacked if they are either
1. chunked- our HTTP/1.x server requires chunked requests be consumed
    which we can't do in the nack filter, resulting in a borked session.
2. have a body and don't have the magic header sent by the client that
    signals that it is able to retry the request body.

JIRA Issues: CSL-4614

Differential Revision: https://phabricator.twitter.biz/D134209"
kevinoliver,2018-04-19 15:25:26,https://api.github.com/repos/twitter/finagle/git/commits/dcbaac5a1cf9be5121464eea218d20acaeee264f,dcbaac5a1cf9be5121464eea218d20acaeee264f,"finagle-mysql: More docs on Parameter

Summary: Problem

It is unclear to some developers if it is ok to use the explicit
version of creating a `Parameter`, in part due to its scary sounding
name, `unsafeWrap`.

Solution

Add a friendlier method name, `of`, and add clarifying documentation.

JIRA Issues: CSL-6243

Differential Revision: https://phabricator.twitter.biz/D160919"
kevinoliver,2018-04-18 23:48:54,https://api.github.com/repos/twitter/finagle/git/commits/2f3650cf600f5a666a2e95fc6631f819b515d55d,2f3650cf600f5a666a2e95fc6631f819b515d55d,"finagle-mysql: Add read and modify APIs to Client & PreparedStatement

Summary: Problem

The `Result` ADT returned by `c.t.f.mysql.Client.query`,
`c.t.f.mysql.Client.ping` and `c.t.f.mysql.PreparedStatement.apply` is
a mixture of both internal and external types. This makes using those
APIs unnecessarily complicated and verbose.

Solution

Introduce `read` and `modify` to `Client` and `PreparedStatement`.
These return `ResultSet` and `OK` respectively. `Client.ping` now
returns a `Future[Unit]`.

Result

The APIs are easier to use and less verbose. Migration from the
existing APIs can be done at the user's leisure.

JIRA Issues: CSL-6266

TBR=true

Differential Revision: https://phabricator.twitter.biz/D160215"
mosesn,2018-04-18 22:18:43,https://api.github.com/repos/twitter/finagle/git/commits/0dd0a425df4ca78305fd455055ee53e272cf842c,0dd0a425df4ca78305fd455055ee53e272cf842c,"finagle-base-http: Provide Uri for doing URI things

Summary: Problem

The c.t.f.http.Request class has a hodge-podge of things on it, and it's often
difficult to divine what the different pieces are doing.  As an example, the
`Request#params` refer to things that don't come from the HTTP spec, URI query
parameters and the application/x-www-form-urlencoded MIME-type.

Solution

Start breaking out the non-HTTP pieces of `c.t.f.http.Message` and friends so
that in the long run we can slim down `c.t.f.http.Message` to something
reasonable.

Result

It's now easy to extract the URI parameters as a ParamMap.

JIRA Issues: CSL-6251

Differential Revision: https://phabricator.twitter.biz/D160298"
mosesn,2018-04-18 19:06:24,https://api.github.com/repos/twitter/finagle/git/commits/75287ab1b6b119e5b6ed6c7e2f67362a9aaf3fd5,75287ab1b6b119e5b6ed6c7e2f67362a9aaf3fd5,"finagle-http: Fix a flaky HTTP/2 test

Summary: Problem / Solution

Fixed a test to be consistent with the rest of the HTTP/2 tests so that we
consistently upgrade before testing.

JIRA Issues: CSL-6230

Differential Revision: https://phabricator.twitter.biz/D160789"
kevinoliver,2018-04-18 16:46:52,https://api.github.com/repos/twitter/finagle/git/commits/f4543472574ab6a03d0218bf5154e86734d80850,f4543472574ab6a03d0218bf5154e86734d80850,"finagle-core: Copy other Throwable fields in `FailureFlags.withFlags`

Summary: Problem

`FailureFlags.withFlags` did not retain the stack trace, cause, or any
suppressed exceptions.

Solution

Include them making the copies higher-fidelity.

JIRA Issues: CSL-6252

Differential Revision: https://phabricator.twitter.biz/D160402"
mosesn,2018-04-17 21:41:07,https://api.github.com/repos/twitter/finagle/git/commits/7497e65d7eaf306cb87b0fbf015ea920542a7c8a,7497e65d7eaf306cb87b0fbf015ea920542a7c8a,"finagle-http: Fix a metrics race condition

Summary: Problem / Solution

One of our HTTP/2 end to end tests is flaky because of a race between when
we update some metrics and when we reset the metrics after the upgrade.

JIRA Issues: CSL-6248

Differential Revision: https://phabricator.twitter.biz/D159867"
bryce-anderson,2018-04-17 19:03:21,https://api.github.com/repos/twitter/finagle/git/commits/955a0b3e48751c826c6bdf5cead7b800e5e17161,955a0b3e48751c826c6bdf5cead7b800e5e17161,"finagle-core: Add c.t.f.SslException

Summary: Problem / Solution

With SSL/TLS becoming more prominent, we should provide a more concrete
representation for the exceptions it may generate to make it easier to
diagnose potential issues.

JIRA Issues: CSL-6259

Differential Revision: https://phabricator.twitter.biz/D158344"
bryce-anderson,2018-04-17 00:01:57,https://api.github.com/repos/twitter/finagle/git/commits/aa73d24d1ce830bc26455ac9d3c65753e93834c3,aa73d24d1ce830bc26455ac9d3c65753e93834c3,"finagle-base-http: Make DefaultHeaderMap durable to concurrent modification

Summary: Problem

Non-thread safe HashMaps can get into infinite loops if used
concurrently which has been observed with our HeaderMap implementation.

Solution

Synchronize access of our backing map to suppress concurrent access.
This should be relatively cheap in the case of non-concurrent access,
which should be the vast majority of case.

JIRA Issues: CSL-6148

Differential Revision: https://phabricator.twitter.biz/D159250"
mosesn,2018-04-16 21:21:25,https://api.github.com/repos/twitter/finagle/git/commits/56b3a2c6551b2a25ce6d68704eb001dc3cf00600,56b3a2c6551b2a25ce6d68704eb001dc3cf00600,"finagle-integration: Unflaky DynamicTimeoutTest

Summary: Problem / Solution

DynamicTimeoutTest had a race in swapping out the transport in RefTransport that
was fixed when we switched to upgrading only on messages without bodies.

JIRA Issues: CSL-5979

Differential Revision: https://phabricator.twitter.biz/D159801"
stefanlance,2018-04-14 05:31:19,https://api.github.com/repos/twitter/finagle/git/commits/4b0a58b0e0eaa246b9ffbca29f6a9de15d7b2584,4b0a58b0e0eaa246b9ffbca29f6a9de15d7b2584,"finagle-base-http: add SameSite attribute to Cookie

Summary: Problem

Finagle's Cookies do not support the SameSite attribute.

Solution

Allow the attribute to be added via the Cookie constructor.

Differential Revision: https://phabricator.twitter.biz/D157942"
kevinoliver,2018-04-12 21:12:23,https://api.github.com/repos/twitter/finagle/git/commits/f67978aaa48b7b65e20de787b0d84354cb5a968e,f67978aaa48b7b65e20de787b0d84354cb5a968e,"finagle-mysql: Add Java support for CursoredStatement

Summary: Problem

Using `CursoredStatement` from Java isn't very friendly.

Solution

Add a Java-friendly API via `CursoredStatement.asJava`
and add a bunch of documentation on usage.

JIRA Issues: CSL-6237

Differential Revision: https://phabricator.twitter.biz/D158399"
ryanoneill,2018-04-12 18:06:50,https://api.github.com/repos/twitter/finagle/git/commits/ed7ca3ea36652cc6c491aaf5029a0ae5a1d77d06,ed7ca3ea36652cc6c491aaf5029a0ae5a1d77d06,"finagle-base-http: Add Better Docs and Tests for Request.params

Summary: Problem / Solution

The current docs for `Request.params` have a tendency to be misunderstood
by finagle-http users. Add more explicit documentation to say what parameters
are included in `Request.params` and provide an example. Also add some
additional tests.

JIRA Issues: CSL-6257

Differential Revision: https://phabricator.twitter.biz/D158436"
kevinoliver,2018-04-12 16:59:45,https://api.github.com/repos/twitter/finagle/git/commits/ebde8ebe203a88b8cba481c39033dac3c71e02e9,ebde8ebe203a88b8cba481c39033dac3c71e02e9,"finagle-mysql: Add `Row` support for booleans, byte arrays, Timestamps

Summary: Problem

`Row` recently got a new API for easier access to common data types
but lacked support for Booleans, Byte arrays, and Timestamps.

Solution

Expose the new APIs:

* booleanOrFalse / getBoolean
* bytesOrNull / getBytes
* timestampOrNull / getTimestamp

JIRA Issues: CSL-6241

Differential Revision: https://phabricator.twitter.biz/D157360"
bryce-anderson,2018-04-12 14:38:07,https://api.github.com/repos/twitter/finagle/git/commits/bf09dd4c1bb7b6e9a5af0e5c0381f88333888906,bf09dd4c1bb7b6e9a5af0e5c0381f88333888906,"finagle-http: Don't cleartext upgrade on requests with a body

Summary: Problem

It's extremely difficult to perform the h2c upgrade if the request has a
body.

Solution

Don't even try.

Differential Revision: https://phabricator.twitter.biz/D153986"
bryce-anderson,2018-04-11 00:05:38,https://api.github.com/repos/twitter/finagle/git/commits/34a7bd25a11257861c320a6445333754effe820d,34a7bd25a11257861c320a6445333754effe820d,"Twitter-oss: Update OSS libraries post release to 18.5.0-SNAPSHOT

Summary: Problem

We want to update the next version of our Twitter OSS libraries 18.5.0-SNAPSHOT

  - util
  - scrooge
  - finagle
  - twitter-server
  - finatra

Solution

Update the libraries post release.

Differential Revision: https://phabricator.twitter.biz/D157916"
kevinoliver,2018-04-10 22:33:39,https://api.github.com/repos/twitter/finagle/git/commits/f3676d3186fb5dddb4fc2a833c79094af5fb460e,f3676d3186fb5dddb4fc2a833c79094af5fb460e,"finagle-mysql: Introduce new APIs for Row

Summary: Problem

The current API for accessing columns from a Row is not very Java
friendly. It is also more verbose than I'd like for the common usage
patterns.

Solution

Introduce new APIs for the common data types. These come in `Option`
versions which are useful for dealing with nullable columns. There are
also non-`Option` versions for not null columns.

JIRA Issues: CSL-6237

TBR=true

Differential Revision: https://phabricator.twitter.biz/D156926"
bryce-anderson,2018-04-10 20:09:10,https://api.github.com/repos/twitter/finagle/git/commits/82da7ddebf5de885f2adaf556d91ef39c2ffe937,82da7ddebf5de885f2adaf556d91ef39c2ffe937,"Twitter-oss: Prepare OSS libraries for release 18.4.0

Summary: Problem

We want to release the next versions of our Twitter OSS libraries 18.4.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D157722"
bryce-anderson,2018-04-09 19:29:32,https://api.github.com/repos/twitter/finagle/git/commits/d87c0fe4347bf35a1bbad25defd2b4c4f3131dd3,d87c0fe4347bf35a1bbad25defd2b4c4f3131dd3,"finagle-netty4: Always satisfy the connect future

Summary: Problem

The c.t.f.netty4.ConnectionBuilder would fail to satisfy the returned
Future if the Netty connect future fails with a fatal error as it will
fail to be matched.

Solution

Capture all exceptions in the last match case.

Differential Revision: https://phabricator.twitter.biz/D156133"
bryce-anderson,2018-04-09 19:20:40,https://api.github.com/repos/twitter/finagle/git/commits/650c9721c83d0ad32bea78b88230806e228dccc1,650c9721c83d0ad32bea78b88230806e228dccc1,"finagle-netty4: ConnectionBuilder shouldn't interrupt threads

Summary: Problem

The c.t.f.netty4.ConnectionBuilder will attempt to cancel the Netty
connect future specifying that it's potentially okay to interrupt a
thread to do so. This is a bit extreme considering that we share
threads.

Solution

Change the `mayInterruptIfRunning` parameter to `false` for cancellation
attempts.

Differential Revision: https://phabricator.twitter.biz/D156184"
kevinoliver,2018-04-09 18:34:29,https://api.github.com/repos/twitter/finagle/git/commits/c5bd6b975657782607ad33b73ea414661a54f544,c5bd6b975657782607ad33b73ea414661a54f544,"finagle-mysql: Add Java support for PreparedStatement

Summary: Problem

Using `PreparedStatement` from Java isn't very friendly.

Solution

Add a Java-friendly API via `PreparedStatement.asJava`
and add a bunch of documentation on usage.

JIRA Issues: CSL-6237

Differential Revision: https://phabricator.twitter.biz/D156755"
dschobel,2018-04-09 18:03:33,https://api.github.com/repos/twitter/finagle/git/commits/36aac62c70b50e4de0f0c2598c7783d8e64b8bd4,36aac62c70b50e4de0f0c2598c7783d8e64b8bd4,"finagle-core: closing NullServer is a no-op

Summary: Problem

NullServer has single-use process global state to support closing which
introduces a risk of non-deterministic behavior from any given thread's
POV.

Solution / Result

Closing NullServer is a no-op and times out all Await attempts.

JIRA Issues: CSL-6186

Differential Revision: https://phabricator.twitter.biz/D156098"
stuhood,2018-04-06 19:00:10,https://api.github.com/repos/twitter/finagle/git/commits/03b72551371252006be262504b261bebaf021c75,03b72551371252006be262504b261bebaf021c75,"Remove dead benchmark alias

Summary: Fixes breakage caused by https://phabricator.twitter.biz/D156259.

TBR=true

NO-QUEUE=true

Differential Revision: https://phabricator.twitter.biz/D156572"
kevinoliver,2018-04-06 18:15:53,https://api.github.com/repos/twitter/finagle/git/commits/6ae390476b7f83edecd686f25461b36f9f24cfa6,6ae390476b7f83edecd686f25461b36f9f24cfa6,"finagle-exp: Remove dead build target

Summary: Problem / Solution

This target has nothing in it, so lets clean up.

Differential Revision: https://phabricator.twitter.biz/D156259"
kevinoliver,2018-04-06 17:59:07,https://api.github.com/repos/twitter/finagle/git/commits/48f688d1b52ed51499eb3c693a4fe253a5b67100,48f688d1b52ed51499eb3c693a4fe253a5b67100,"finagle-mysql: Add Parameter support for Options

Summary: Problem

Options are a natural fit for nullable columns in SQL.
However, there is no out of the box support for them in
`c.t.f.mysql.Parameter` or `c.t.f.mysql.CanBeParameter`
making them difficult to use.

Solution

- Add support for them via a new implicit method on `Parameter`.
- Beef up Java support and give them a friendlier named API,
  `Parameters.of` instead of the scary, `Parameters.unsafeWrap`.
- Spruce up the Scaladocs

Result

Modeling your nullable database columns with an `Option` is
far more pleasant.

JIRA Issues: CSL-6016

Differential Revision: https://phabricator.twitter.biz/D156186"
kevinoliver,2018-04-05 19:09:53,https://api.github.com/repos/twitter/finagle/git/commits/3a4bdab7ee4e1e7d265a01b9d32b0bc989e38260,3a4bdab7ee4e1e7d265a01b9d32b0bc989e38260,"finagle-mysql: Add more unit tests for Parameter

Summary: Problem

There is not a lot of coverage on the existing Parameter
conversions via CanBeParameter.

Solution

Add tests.

JIRA Issues: CSL-6016

Differential Revision: https://phabricator.twitter.biz/D155962"
mosesn,2018-04-04 15:50:01,https://api.github.com/repos/twitter/finagle/git/commits/9b91994b5ac54993b806a5da4157a8499364549f,9b91994b5ac54993b806a5da4157a8499364549f,"finagle-http2: Oversized headers result in TooLongMessageException

Summary: Problem

If the remote server returns a header list that's too big, we just swallow the
error.  It would be better if we matched h1 behavior, which is to hand back
a TooLongMessageException.

Solution

Whenever Http2ConnectionHandler#onStreamError is called with an
HeaderListSizeException, match http/1.1 behavior by handing back a
TooLongMessageException

JIRA Issues: CSL-5810

Differential Revision: https://phabricator.twitter.biz/D154113"
kevinoliver,2018-04-03 16:42:42,https://api.github.com/repos/twitter/finagle/git/commits/1b9111eb3e8576c41977b05447a3f17ef1c1a5f9,1b9111eb3e8576c41977b05447a3f17ef1c1a5f9,"finagle-mysql: Protect transaction rollbacks

Summary: Problem

If a mysql client is interrupted during a transaction the rollback
will also fail.

Solution

Protect the rollback statement using `Future.masked`. This allows it
to run regardless of any prior interrupts.

JIRA Issues: CSL-6169

Differential Revision: https://phabricator.twitter.biz/D154441"
isabelmartin,2018-04-03 02:12:46,https://api.github.com/repos/twitter/finagle/git/commits/b6caf3ddd0edd92541263d74950f71684f7fa955,b6caf3ddd0edd92541263d74950f71684f7fa955,"finagle-core: Add request threshold for successRateWithinDuration FailureAccrual

Summary: Problem:

If a node receives low rps, there can be a situation where it receives only a
single request in a window. If that single request fails, FailureAccrual will
remove that node. In this case, success rate isn't a very good indicator of
health.

Solution:

Add a minimum number of requests within each window before FailureAccrual can be
allowed to kick in.

JIRA Issues: CSL-6215

Differential Revision: https://phabricator.twitter.biz/D154129"
bryce-anderson,2018-04-03 00:26:22,https://api.github.com/repos/twitter/finagle/git/commits/1b78b49a8ed8c57bd94747c49b5a8655a94c87f8,1b78b49a8ed8c57bd94747c49b5a8655a94c87f8,"finagle-netty4: ConnectPromiseDelayListeners is now an object

Summary: Problem / Solution

c.t.f.netty4.ConnectPromiseDelayListeners offers no value as a trait
since everything it does is invariant of the object it's mixed into. As
such, we can just make these functions on an object.

Differential Revision: https://phabricator.twitter.biz/D154713"
isabelmartin,2018-04-03 00:08:25,https://api.github.com/repos/twitter/finagle/git/commits/ede663bca9236c7182624fe476f55d9d9dd1289f,ede663bca9236c7182624fe476f55d9d9dd1289f,"finagle-core: Add toggle for hybrid FailureAccrual

Summary: Problem:

We want to be able to roll out hybrid FailureAccrual.

Solution:

Add a toggle!

JIRA Issues: CSL-6128

Differential Revision: https://phabricator.twitter.biz/D153005"
wisechengyi,2018-04-02 23:01:20,https://api.github.com/repos/twitter/finagle/git/commits/12dc4925902decc1e4e2c88b24bce49d1e7bad70,12dc4925902decc1e4e2c88b24bce49d1e7bad70,"Dedup netty-codec-http

TBR=true

Differential Revision: https://phabricator.twitter.biz/D154593"
bryce-anderson,2018-03-30 17:43:00,https://api.github.com/repos/twitter/finagle/git/commits/c60eb24844855102d82a5621e1a3998d314aa98c,c60eb24844855102d82a5621e1a3998d314aa98c,"finagle-netty4: Add debug metrics to the connect logic of ConnectionBuilder

Summary: Problem / Solution

It's been observed that client connect attempts can hang for a very long
time somewhere in the connect logic but it's not clear where. To help
sort it out, we're adding some debug level metrics to the connect
process.

JIRA Issues: CSL-6148

Differential Revision: https://phabricator.twitter.biz/D153943"
GEverding,2018-03-29 22:55:21,https://api.github.com/repos/twitter/finagle/git/commits/2c17f19bf5965926e9fe94eaf790855726564ab0,2c17f19bf5965926e9fe94eaf790855726564ab0,"finagle-serversets: Preserve host/ip provided in serveIface

Summary: Problem

I'm deploying Finagle ThriftMux with Zookeeper ServerSets inside
Kubernetes and pod hostname is being set as the host in Zookeeper
instead of the IP of the pod which is what I'm binding to when initing
the ThriftMux server.

Solution

In k8s getHostName returns the name of the pod which is not accessible
from other pods in the cluster. getHostString returns the IP of the
pod.

Fixes #684

Signed-off-by: Kevin Oliver <koliver@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D153429"
kevinoliver,2018-03-29 16:53:16,https://api.github.com/repos/twitter/finagle/git/commits/e7d06816495b13286a056916613e2ab1a8c6ac71,e7d06816495b13286a056916613e2ab1a8c6ac71,"finagle-integration: Mark a test as flaky

Summary: Problem / Solution

""HTTP/2 client can use dynamic timeouts"" in
com.twitter.finagle.integration.DynamicTimeoutTest
seems to fail occasionally. Mark it flaky until
we have time to investigate and fix the root cause.

JIRA Issues: csl-6210

Differential Revision: https://phabricator.twitter.biz/D153413"
bryce-anderson,2018-03-28 21:43:00,https://api.github.com/repos/twitter/finagle/git/commits/24690b137dc147e436fee42807502d1c24189621,24690b137dc147e436fee42807502d1c24189621,"finagle-netty4: Track ByteBuf leaks by default

Summary: Problem

We really want to know if we're leaking a buffer, but we don't record
that via metrics by default, limiting our visibility to the logs Netty
emits, which can be tough to monitor on a large scale.

Solution

Restructure the counter so that it isn't created unless we actually
detect a leak and turn on leak detection by default.

JIRA Issues: CSL-5964

Differential Revision: https://phabricator.twitter.biz/D152828"
mkhq,2018-03-27 18:56:30,https://api.github.com/repos/twitter/finagle/git/commits/86b151bf641534304c9c9102d93e1e8e3ea9348a,86b151bf641534304c9c9102d93e1e8e3ea9348a,"finagle-redis: Redis cluster management

Summary: Problem

The current finagle-redis client does not have support for the CLUSTER
commands introduced in Redis 3.0.0.

Solution

This adds support for a number of new cluster commands that are
necessary to setup and manage a redis cluster.

- CLUSTER ADDSLOT, assigns a storage slot to a server
- CLUSTER SETSLOT, updates the state of a slot
- CLUSTER SLOTS, returns a list of slots known to the server
- CLUSTER GETKEYSINSLOT, returns keys stored in a slot
- CLUSTER REPLICATE, changes a node to become a replica of a server
- CLUSTER MEET, introduces cluster nodes to each other
- CLUSTER NODES, returns the list of cluster nodes known to the server
- CLUSTER INFO, returns the cluster specific info
- MIGRATE, used to transfer keys to another node

Result

Using the introduced commands it is possible to setup a redis cluster
for testing and live re-sharding. This is the first step in
implementing the redis cluster client protocol. The next step is to
handle operation redirects, i.e. when the server returns ASK or MOVED.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D152186"
jcrossley,2018-03-27 18:35:46,https://api.github.com/repos/twitter/finagle/git/commits/2b0507715a9ed17297b2ea61ba41ed0a59ea7191,2b0507715a9ed17297b2ea61ba41ed0a59ea7191,"finagle-base-http: Clean up Cookie

Summary: Problem / Solution

Now that Cookie is immutable, we can clean up and
remove a bunch of methods.

Differential Revision: https://phabricator.twitter.biz/D152365"
jcrossley,2018-03-27 11:46:24,https://api.github.com/repos/twitter/finagle/git/commits/4bdd261b4249bc59547f31310b97505e144118d5,4bdd261b4249bc59547f31310b97505e144118d5,"finagle-base-http: Remove deprecated path_=, domain_=, and and value_= methods from Cookie

Summary: Problem / Solution

path_=, domain_=, and value_= methods on c.t.f.http.Cookie
are deprecated. Migrate usages to use the Cookie copy
constructor.

JIRA Issues: CSL-6107

TBR=true

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D148266"
cacoco,2018-03-25 23:04:38,https://api.github.com/repos/twitter/finagle/git/commits/36b9b5f2dc6dec3bf954d9bdbc533840ef60dd20,36b9b5f2dc6dec3bf954d9bdbc533840ef60dd20,"finagle-memcached: Fix issue due to scala bug: 10151

Summary: Problem

Code added to `c.t.finagle.memcached.MockClient` is encountering
a Scala compiler bug in Scala 2.12:

https://issues.scala-lang.org/browse/SI-10151

Solution

Update to work around the issue by explicitly returning a Unit value
after the match statement in the foreach loop.

Result

Code compiles in both Scala 2.11 and Scala 2.12

TBR=true

Differential Revision: https://phabricator.twitter.biz/D151827"
yufangong,2018-03-23 19:59:23,https://api.github.com/repos/twitter/finagle/git/commits/56f586a949e8f3a9005adbc34c069ded3de380e0,56f586a949e8f3a9005adbc34c069ded3de380e0,"finagle-thrift,thriftmux: Use new generated names in tests

Summary: Problem/Solution:

Upgrade tests to use new Scrooge generated types and finagle methods.

JIRA Issues: CSL-6181

Differential Revision: https://phabricator.twitter.biz/D150811"
slyphon,2018-03-23 19:38:22,https://api.github.com/repos/twitter/finagle/git/commits/5d21a6f1e2a01d0cdf08d86e51620111d5de4b32,5d21a6f1e2a01d0cdf08d86e51620111d5de4b32,"finagle-memcached: MockClient now understands expiry and flags

Summary: Problem

As a user of MockClient I want to be able to make assertions about the
expiry time that is associated with items written to cache. The
current MockClient ignores these values, forcing users to use Mockito
to make assertions.

Solution

`MockClient` now stores wrapped values in a mutable `Map`. The wrapper
contains the expiry `Time`, flags `Int`, and value `Buf`. On access,
the expiry time is checked, and if the item has expired, the mock acts
as if the item is missing.

JIRA Issues: CACHE-12277

TBR=true

Differential Revision: https://phabricator.twitter.biz/D148862"
kevinoliver,2018-03-23 17:41:25,https://api.github.com/repos/twitter/finagle/git/commits/3d2d8741f8804f6e64aa1f72e58fa6390b404eec,3d2d8741f8804f6e64aa1f72e58fa6390b404eec,"finagle: Add docs for backup requests

Summary: Problem

The MethodBuilder docs in the user guide don't discuss backup requests
in enough depth.

Solution

Add a new section underneath idempotency that goes into the details
for backup requests.

JIRA Issues: csl-6188

Differential Revision: https://phabricator.twitter.biz/D151049"
yufangong,2018-03-22 02:49:00,https://api.github.com/repos/twitter/finagle/git/commits/261e7c40f1a77711a8a17baa5b86cee018a1d456,261e7c40f1a77711a8a17baa5b86cee018a1d456,"pants: Rename {lib,}thrift-0.5.0 to {lib,}thrift

Summary: Problem

When we change the version of thrift, we don't want to have to rename the lib,
which entails changing many BUILD files.

Solution

Since we only have one thrift, we can drop the version-specific suffix.

JIRA Issues: CSL-5593

TBR=true

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D149423"
kevinoliver,2018-03-21 22:37:10,https://api.github.com/repos/twitter/finagle/git/commits/5a54f45da4b78f22ccc001164f7c3df5314b34ce,5a54f45da4b78f22ccc001164f7c3df5314b34ce,"finagle-mysql: Include executing SQL in exceptions

Summary: Problem

When there is an exception executing SQL the message
does not include the SQL making debugging and fixing
a challenge.

Solution

Include the SQL in the exception's message when possible.

JIRA Issues: csl-6018

Differential Revision: https://phabricator.twitter.biz/D150503"
bryce-anderson,2018-03-20 15:24:05,https://api.github.com/repos/twitter/finagle/git/commits/6ece00a3b02122fd644d5b63f7053eb56bd76169,6ece00a3b02122fd644d5b63f7053eb56bd76169,"finagle-netty4: Add cancellation latency to the ""failed_connect_latency_ms"" histogram

Summary: Problem / Solution

We don't know how long it took to cancel connections because the
duration is not added to any histogram. Since successful cancellation results in a
failure to connect, we can just add it to the ""failed_connect_latency_ms""
histogram.

Differential Revision: https://phabricator.twitter.biz/D149556"
bryce-anderson,2018-03-19 22:40:05,https://api.github.com/repos/twitter/finagle/git/commits/4b33ced268ebe3b7d95a37799b6da9aa0916fcaa,4b33ced268ebe3b7d95a37799b6da9aa0916fcaa,"finagle-mux: Add ""negotiating"" gauge to MuxClientNegotiatingSession

Summary: Problem / Solution

We want to get some visibility into how many sessions are currently
negotiating, so we add a gauge to capture that data.

JIRA Issues: CSL-6178

Differential Revision: https://phabricator.twitter.biz/D149410"
cacoco,2018-03-19 22:38:20,https://api.github.com/repos/twitter/finagle/git/commits/7a175a9875cb3f897a17f18e6dcb6dfb0da1974a,7a175a9875cb3f897a17f18e6dcb6dfb0da1974a,"finagle-thrift: Move stateless `ThriftRichClient` methods to a new trait

Summary: Problem

Certain methods in the `c.t.finagle.thrift.ThriftRichClient` are stateless
in that they work only over the inputs, however because they are defined
on the Thrift or ThriftMux client class, they look like they work over the
mutated params of the class, when they do not.

Solution

Move the stateless methods which are mere functions to wrap or convert the
input parameters to a companion trait which is mixed into the Client class
companion.

Result

Less confusion about these methods which are mere convienence methods and
not stack methods.

JIRA Issues: CSL-6108

TBR=true

Differential Revision: https://phabricator.twitter.biz/D143185"
ShaneDelmore,2018-03-15 06:54:14,https://api.github.com/repos/twitter/finagle/git/commits/b08b792c6f73c2c8f4451116f1fdfab9b4651584,b08b792c6f73c2c8f4451116f1fdfab9b4651584,"This automated removal > 13,000 unused imports brought to you by the Advanced Scala Tools team Contact us if you have automated code cleanups or migrations you would like to run (#scalafix-scalameta in Slack) Consider adding fatal_warnings = True...

Summary: ...to your BUILD files to prevent regressions

TBR=true

NO-QUEUE=true

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D147853"
yufangong,2018-03-15 05:58:27,https://api.github.com/repos/twitter/finagle/git/commits/61c7a71182866250e53f9731c46f31dde28d464c,61c7a71182866250e53f9731c46f31dde28d464c,"Upgrade libthrift to 0.10.0

Summary: Problem:

We are sitting on an ancient libthrift version for a long time.

Solution:

Upgrade it.

JIRA Issues: CSL-1406

TBR=true

Differential Revision: https://phabricator.twitter.biz/D124620"
jcrossley,2018-03-14 15:38:03,https://api.github.com/repos/twitter/finagle/git/commits/c4c7391d3ae80f00751c1e709ce645e6861790c0,c4c7391d3ae80f00751c1e709ce645e6861790c0,"finagle-base-http: Remove deprecated httpOnly_= and maxAge_= methods from Cookie

Summary: Problem

`httpOnly_=` and `maxAge_=` methods on com.twitter.finagle.http.Cookie
are deprecated.

Solution

Remove and replace usages with their copy-constructor variants.

JIRA Issues: CSL-6106

TBR=true

Differential Revision: https://phabricator.twitter.biz/D143177"
ryanoneill,2018-03-14 08:44:37,https://api.github.com/repos/twitter/finagle/git/commits/911a01cee08852f47385ac7b9d709cf3fc5422a9,911a01cee08852f47385ac7b9d709cf3fc5422a9,"finagle-netty4: Add SSL/TLS Connections Gauge

Summary: Problem / Solution

When running Finagle clients and servers which use SSL/TLS it is useful
to track the number of connections which are currently open that use
SSL/TLS. Add a 'tls/connections' gauge which tracks the number of open
SSL/TLS connections per Finagle client or server.

JIRA Issues: CSL-5946

Differential Revision: https://phabricator.twitter.biz/D144184"
kevinoliver,2018-03-13 21:10:02,https://api.github.com/repos/twitter/finagle/git/commits/06052165f1924961a9a0c92769efc3caf1312d55,06052165f1924961a9a0c92769efc3caf1312d55,"finagle: Don't include password in stack registry

Summary: Problem

Some Stack.Params include sensitive information such as a password and
these values are included in the registry by default.

Solution

Override `Stack.Param.show` where appropriate.

JIRA Issues: csl-6120

Differential Revision: https://phabricator.twitter.biz/D146948"
bryce-anderson,2018-03-13 18:18:13,https://api.github.com/repos/twitter/finagle/git/commits/f56a53fdfd9b4ae9e7f6f60b97293e5d8c793afb,f56a53fdfd9b4ae9e7f6f60b97293e5d8c793afb,"finagle-netty4: ChannelStatsHandler needs to always propagate channel-inactive

Summary: Problem

If the channel didn't receive a `channelActive` event, the
ChannelStatsHandler won't propagate a `channelInactive` event.

Solution

Propagate the event unconditionally.

JIRA Issues: CSL-6142

Differential Revision: https://phabricator.twitter.biz/D145918"
stefanlance,2018-03-12 22:24:05,https://api.github.com/repos/twitter/finagle/git/commits/6f8adbfe90a6573de98b0653223d4fd0b6c4a4ed,6f8adbfe90a6573de98b0653223d4fd0b6c4a4ed,"finagle-example: Replace `AtomicLongMap` with `ConcurrentHashMap`

Summary: Problem

`AtomicLongMap` is part of Guava but we do not depend on Guava.

Solution

Replace the `AtomicLongMap` with a `ConcurrentHashMap`.

JIRA Issues: CSL-6151

Differential Revision: https://phabricator.twitter.biz/D146882"
kevinoliver,2018-03-12 20:43:05,https://api.github.com/repos/twitter/finagle/git/commits/e6b0395ccc6ccf3a3d458f8a22c482dd8ff49d2e,e6b0395ccc6ccf3a3d458f8a22c482dd8ff49d2e,"finagle-mysql: Document the dest parameter

JIRA Issues: csl-6012

Differential Revision: https://phabricator.twitter.biz/D146888"
ryanoneill,2018-03-09 03:52:25,https://api.github.com/repos/twitter/finagle/git/commits/1313d9ba77b35da0a9a6fce3599dfc7c4c5e137d,1313d9ba77b35da0a9a6fce3599dfc7c4c5e137d,"finagle-core: Stop Using Sun's HostnameChecker Directly

Summary: Problem

`HostnameVerifier` uses Sun's `HostnameChecker` directly for hostname
verification. This is no longer allowed in JDK 9 and will result in an
`IllegalAccessException`.

Solution

Change Finagle's SSL/TLS configurations to use `HostnameChecker` indirectly
by setting `SSLParameters#setEndpointIdentificationAlgorithm` to 'HTTPS'
when a hostname has been included as part of an `SslClientConfiguration`.

Result

Hostname verification continues to work and an impediment for moving to JDK
9 has been removed.

JIRA Issues: CSL-2956

Differential Revision: https://phabricator.twitter.biz/D144149"
bryce-anderson,2018-03-09 03:36:58,https://api.github.com/repos/twitter/finagle/git/commits/dd1bba4f28fe79711967406ac90aad62269bb75f,dd1bba4f28fe79711967406ac90aad62269bb75f,"finagle-core: remove part of a race in PendingRequestFilter

Summary: Problem / Solution

We have a bunch of noise and caveats about how a race exists but is okay
in the PendingRequestFilter, which are true, but we might as well just
honor the limit the user provided as best as we can and eliminate the
noise.

Differential Revision: https://phabricator.twitter.biz/D145814"
kevinoliver,2018-03-08 22:04:08,https://api.github.com/repos/twitter/finagle/git/commits/eb5aef7322b38b067dc83419b10d28e5da53eb9c,eb5aef7322b38b067dc83419b10d28e5da53eb9c,"finagle-mysql: Document null password in Client.withCredentials

Summary: Problem

There was a lack of documentation around how to connect to a database
without credentials.

Solution

Add a note to the scaladocs.

JIRA Issues: csl-6013

Differential Revision: https://phabricator.twitter.biz/D145944"
kevinoliver,2018-03-08 18:44:39,https://api.github.com/repos/twitter/finagle/git/commits/d8e44b2dc4d4d5c7276c3daa2b937ce15a7321b9,d8e44b2dc4d4d5c7276c3daa2b937ce15a7321b9,"finagle-mysql: Add CanBeParameter for BigDecimal

Summary: Problem

There is no support for using `BigDecimals` with `PreparedStatements`.

Solution

Add a `CanBeParameter` for it and tests showing their usage.

Also did some light housecleaning around other files as I poked
around.

JIRA Issues: csl-6017

Differential Revision: https://phabricator.twitter.biz/D145583"
stefanlance,2018-03-08 18:20:01,https://api.github.com/repos/twitter/finagle/git/commits/387d87d45d7cd334c121ba43b8d6a43f3d97f8e4,387d87d45d7cd334c121ba43b8d6a43f3d97f8e4,"finagle-core: Disable `NackAdmissionFilter` if rps is too low

Summary: Problem

The `NackAdmissionFilter` uses an ema over a default window of two minutes to
determine whether to drop requests. It behaves as expected when requests are
frequent but it may not behave as expected when the request rate is low
(relative to the window size).

More specifically, the `NackAdmissionFilter` drops more requests than necessary
if the server nacks a lot during a period of low qps and the qps then spikes.

Solution

Don't drop requests or lower the ema value if the request rate is below an
empirically found threshold.

Result

The `NackAdmissionFilter` will not be swayed by nacks during low qps periods.

JIRA Issues: CSL-5543

Differential Revision: https://phabricator.twitter.biz/D143996"
kevinoliver,2018-03-07 17:56:58,https://api.github.com/repos/twitter/finagle/git/commits/d2a415b05f57be76dc26aba67bb3e834a0db5d38,d2a415b05f57be76dc26aba67bb3e834a0db5d38,"finagle: Mark two tests as flaky

Summary: Problem / Solution

We have observed these tests to fail on occasion.

JIRA Issues: csl-6134

Differential Revision: https://phabricator.twitter.biz/D145229"
mosesn,2018-03-07 03:33:16,https://api.github.com/repos/twitter/finagle/git/commits/ff4efee1cc7ec0d36edfcc3a21a7daa7595354f4,ff4efee1cc7ec0d36edfcc3a21a7daa7595354f4,"finagle-core: Make ClosedChannelExceptions implement FailureFlags

Summary: Problem

Sometimes ClosedChannelExceptions should be retryable.

Solution

Make them FailureFlags, which means that they can easily be marked Retryable.

Also fixed a flaky test that started failing consistently.

JIRA Issues: CSL-6113

Differential Revision: https://phabricator.twitter.biz/D144740"
stefanlance,2018-03-07 00:24:28,https://api.github.com/repos/twitter/finagle/git/commits/ec61a7d1dde9c7ef8d348a93f391227ea1864dca,ec61a7d1dde9c7ef8d348a93f391227ea1864dca,"Twitter-oss: Update OSS libraries post release to 18.4.0-SNAPSHOT

Summary: Problem

We want to update the next version of our Twitter OSS libraries 18.4.0-SNAPSHOT

  - util
  - scrooge
  - finagle
  - twitter-server
  - finatra

Solution

Update the libraries post release.

JIRA Issues: CSL-6115

TBR=true

Differential Revision: https://phabricator.twitter.biz/D144978"
stefanlance,2018-03-06 18:17:19,https://api.github.com/repos/twitter/finagle/git/commits/87424ce8cee3075f9140082a0f91b4a3256a1f50,87424ce8cee3075f9140082a0f91b4a3256a1f50,"twitter-oss: Prepare OSS libraries for release 18.3.0

Summary: Problem

We want to release the next versions of our Twitter OSS libraries 18.3.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-6115

TBR=true

Differential Revision: https://phabricator.twitter.biz/D144231"
jcrossley,2018-03-03 00:31:49,https://api.github.com/repos/twitter/finagle/git/commits/62c6d0f78e909d33145c34ef161cd0ac6b4b4f61,62c6d0f78e909d33145c34ef161cd0ac6b4b4f61,"finagle-core: Provide guidance on choosing maxExtraLoad for idempotent method on MethodBuilder

Summary: Problem / Solution

Give some guidance on choosing `maxExtraLoad`
for the `idempotent` method on MethodBuilder.

JIRA Issues: CSL-6097

Differential Revision: https://phabricator.twitter.biz/D143966"
jcrossley,2018-03-01 23:55:13,https://api.github.com/repos/twitter/finagle/git/commits/350d8821d5e82393335260f130c35a5c8b95e133,350d8821d5e82393335260f130c35a5c8b95e133,"finagle-exp: Removed deprecated com.twitter.finagle.exp.BackupRequestFilter

Summary: Problem / Solution

com.twitter.finagle.exp.BackupRequestFilter is deprecated.
Remove it.

JIRA Issues: CSL-6112

Differential Revision: https://phabricator.twitter.biz/D143333"
jcrossley,2018-03-01 16:18:06,https://api.github.com/repos/twitter/finagle/git/commits/3f3380270b3571feaa0a87691ab9ce4c4fca09c4,3f3380270b3571feaa0a87691ab9ce4c4fca09c4,"finagle-memcached: Remove unnecessary cast

Summary: Problem / Solution

We cast a RetrievalCommand to a RetrievalCommand.
Remove the unnecessary cast.

Differential Revision: https://phabricator.twitter.biz/D143232"
jcrossley,2018-03-01 04:05:06,https://api.github.com/repos/twitter/finagle/git/commits/6c9020cc0f0c48e10e511b97ea2d82f7edf7669f,6c9020cc0f0c48e10e511b97ea2d82f7edf7669f,"finagle-base-http: Remove deprecated version field from Cookie

Summary: Problem

The version field has been removed per https://jira.twitter.biz/browse/RFC-6265.
This field is deprecated on Cookie and should be removed.

Solution

Remove this field.

JIRA Issues: CSL-6104

TBR=true

Differential Revision: https://phabricator.twitter.biz/D142672"
jcrossley,2018-02-28 02:13:51,https://api.github.com/repos/twitter/finagle/git/commits/33d75b95a03a38d33c2e4744ef75ee8a1d910669,33d75b95a03a38d33c2e4744ef75ee8a1d910669,"finagle-base-http: Remove deprecated isSecure and isSecure_= methods from Cookie

Summary: Problem

Setter/getter for Cookie.isSecure are deprecated.

Solution

Remove it and replace getter usages with Cookie.secure, and
 migrate setter usages to use Cookie's copy constructor.

JIRA Issues: CSL-5996

TBR=true

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D140435"
dschobel,2018-02-28 02:01:15,https://api.github.com/repos/twitter/finagle/git/commits/f5cdda14cf5675eb4f0fea230b8efb1ab7bbff95,f5cdda14cf5675eb4f0fea230b8efb1ab7bbff95,"finagle-core: Requeue module can leak sessions

Summary: Problem

Finagle's requeue module will swallow sessions depending on their status without
closing the session. This causes a resource leak.

Solution

Close the sessions before swallowing them.

JIRA Issues: CSL-6100

Differential Revision: https://phabricator.twitter.biz/D142457"
mosesn,2018-02-27 22:28:58,https://api.github.com/repos/twitter/finagle/git/commits/0fe5a0a7c0e61e1701db92f59b7775529a494d42,0fe5a0a7c0e61e1701db92f59b7775529a494d42,"finagle: Change .travis.yml to use finagle-zipkin-scribe

Summary: Problem / Solution

We renamed finagle-zipkin to finagle-zipkin-scribe, but missed
.travis.yml.

JIRA Issues: CSL-6090

Differential Revision: https://phabricator.twitter.biz/D142383"
mosesn,2018-02-27 18:40:40,https://api.github.com/repos/twitter/finagle/git/commits/c23ef398dd76219ee3b789432f86a0e5e7883405,c23ef398dd76219ee3b789432f86a0e5e7883405,"finagle-zipkin-scribe: Renamed finagle-zipkin to finagle-zipkin-scribe

Summary: Problem

finagle-zipkin was originally named when scribe was the only transport
for zipkin, so zipkin structs over scribe was the zipkin protocol. That's no
longer the case--there are many different possible transports, and the
openzipkin folks want to remove the scribe transport.

Solution

Rename finagle-zipkin to finagle-zipkin-scribe so it's clear it's just an
implemenation, instead of the default.  This will discourage folks from adopting
it by default.

JIRA Issues: CSL-6090

Differential Revision: https://phabricator.twitter.biz/D141940"
ryanoneill,2018-02-26 22:53:32,https://api.github.com/repos/twitter/finagle/git/commits/3b20d39dea34ebe3b4582fc2c8fc9e716781f68f,3b20d39dea34ebe3b4582fc2c8fc9e716781f68f,"finagle-netty4: Refactor `Netty4SslTest`

Summary: Problem / Solution

The components used in `Netty4SslTest` would be useful for testing
other SSL/TLS related functionality where an SSL handshake is required.
Rewrite the test to be more generic and switch to using `StringClient`
and `StringServer`.

JIRA Issues: CSL-6094

Differential Revision: https://phabricator.twitter.biz/D141886"
bryce-anderson,2018-02-26 21:20:28,https://api.github.com/repos/twitter/finagle/git/commits/41bcd9f93ee111b2df6a9cce9209768a93a87152,41bcd9f93ee111b2df6a9cce9209768a93a87152,"finagle-mux/finagle-http2: ClientDiscardedRequestException shouldn't have a stack trace

Summary: Problem

There is little value in the stack trace for
ClientDiscardedRequestException since it doesn't represent an actual
failure: it's purpose is to provide a notice that work being performed
by a server is no longer necessary. Since this is often logged, we end
up diminishing the value of logs by saturating them with these stack
traces.

Solution

Make the ClientDiscardedRequestException extend the NoStackTrace trait
to suppress stack trace generation.

JIRA Issues: CSL-6069

Differential Revision: https://phabricator.twitter.biz/D141184"
jcrossley,2018-02-26 21:10:52,https://api.github.com/repos/twitter/finagle/git/commits/8ddbe0a45cf5b083cf1662d2e31bba7c54deb7ff,8ddbe0a45cf5b083cf1662d2e31bba7c54deb7ff,"finagle-core: Use the same client RetryBudget in retries/backup requests

Summary: Problem

If the retry budget is not configured, BackupRequest and Retries will
each get a new instance of the default budget. Because BackupRequests
does not deposit into this budget, it quickly runs out (and we want them
to share a budget)

Solution

Add the retry budget when configuring idempotency.

JIRA Issues: CSL-6078

Differential Revision: https://phabricator.twitter.biz/D141525"
kevinoliver,2018-02-26 19:17:25,https://api.github.com/repos/twitter/finagle/git/commits/a61b18006c279222b93a0ae92df80b0878e5206b,a61b18006c279222b93a0ae92df80b0878e5206b,"finagle: Two minor optimizations

Summary: Problem / Solution

While working elsewhere, I noticed a few small opportunities for
improvements.

- HTTP/2's StreamTransportFactory can avoid allocating a Runnable
- Mux's ClientSessionDataPlane can avoid a function allocation

Differential Revision: https://phabricator.twitter.biz/D139399"
stefanlance,2018-02-26 18:15:39,https://api.github.com/repos/twitter/finagle/git/commits/655132a7e6a027ea8c8ded57cb5e8e626e4dd408,655132a7e6a027ea8c8ded57cb5e8e626e4dd408,"finagle, util: Add benchmarks to measure `Buf.concat`

Summary: Problem

We would like more insight into how `Buf.concat` performs.

Solution

Add benchmarks to measure `Buf.concat` for small `Composite`s, and split up
the Mux Message benchmarks so we can measure `Buf.concat` in just the encode
code path.

JIRA Issues: CSL-6080

Differential Revision: https://phabricator.twitter.biz/D141516"
bryce-anderson,2018-02-23 17:30:04,https://api.github.com/repos/twitter/finagle/git/commits/8d37d24fba316cecc6d4018ba925f26e48a3cdd9,8d37d24fba316cecc6d4018ba925f26e48a3cdd9,"finagle-mux: IncompatibleNegotiationException should extend NoStackTrace

Summary: Problem

The IncompatibleNegotiationException emits a number of stacktraces into
build logs which provide no value and it's unlikely the stacktrace would
be particularly helpful to users.

Solution

Consistent with similar exceptions like NoBrokersAvailableException, we
should extend the NoStackTrace trait to suppress stacktrace generation.

JIRA Issues: CSL-6065

Differential Revision: https://phabricator.twitter.biz/D140501"
bryce-anderson,2018-02-22 23:04:21,https://api.github.com/repos/twitter/finagle/git/commits/78e188d8d1f4b3a29f470d58cfdda9a561b6fa6d,78e188d8d1f4b3a29f470d58cfdda9a561b6fa6d,"finagle-netty4-http: Fix bug in Netty4FormPostEncoder

Summary: Problem

The Netty4FormPostEncoder can generate a request with a content that is
backed by an underlying Netty4 ByteBuf, which gets unwrapped and
decremented in the Netty encoding logic. This can lead to reference
count exceptions if the request is reused.

Solution

Make sure we don't emit any ByteBufAsBuf instances.

JIRA Issues: CSL-6068

Differential Revision: https://phabricator.twitter.biz/D140853"
bryce-anderson,2018-02-22 16:54:27,https://api.github.com/repos/twitter/finagle/git/commits/4307a467ef444a04f80d52026976220e0dfbd75c,4307a467ef444a04f80d52026976220e0dfbd75c,"finagle-netty4: Use SafeRunnable to cut some allocs in Netty4PushChannelHandle

Summary: Problem

In the c.t.f.n.e.p.Netty4PushChannelHandle we proxy all `Runnable`
instances to ensure that if they throw an exception we log loudly and the
channel is closed to prevent resource leaks. This results in an extra
`Runnable` allocation on many operations.

Solution

Make a new type, SafeRunnable, that only lives in the
Netty4PushChannelHandle and can be used directly for operations within
the handle, avoiding the proxy instance.

JIRA Issues: CSL-6050

Differential Revision: https://phabricator.twitter.biz/D139732"
bryce-anderson,2018-02-22 00:00:23,https://api.github.com/repos/twitter/finagle/git/commits/760618bec2208280a56bbc13855635e869ddfe73,760618bec2208280a56bbc13855635e869ddfe73,"finagle-mux: Rename ClientSessionDataPlane to ClientTracker

Summary: Problem

The naming between the abstractions responsible for handling dispatches
is asymmetric between the push-mux client and server implementations.

Solution

Rename the ClientSessionDataPlane to ClientTracker which is symmetric
with the server ServerTracker.

JIRA Issues: CSL-6059

Differential Revision: https://phabricator.twitter.biz/D140168"
jcrossley,2018-02-21 20:02:41,https://api.github.com/repos/twitter/finagle/git/commits/0469f5b155a30fe3806911c3ae37b84cabd1a842,0469f5b155a30fe3806911c3ae37b84cabd1a842,"finagle-base-http: Remove deprecated ports field from Cookie

Summary: Problem

The ports field has been removed per RFC-6265.
This field is deprecated on Cookie and should be removed.

Solution

Remove this field.

JIRA Issues: CSL-5998

Differential Revision: https://phabricator.twitter.biz/D139243"
vkostyukov,2018-02-21 19:13:53,https://api.github.com/repos/twitter/finagle/git/commits/eafcc511fb25c918156630a8225ddffe315c2b8c,eafcc511fb25c918156630a8225ddffe315c2b8c,"util-core: Remove UseLifo toggle and switch Twitter Futures to LIFO

Summary: # Problem / Solution

Twitter Futures now use LIFO callback execution order.

JIRA Issues: CSL-5816

Differential Revision: https://phabricator.twitter.biz/D135407"
bryce-anderson,2018-02-21 18:24:21,https://api.github.com/repos/twitter/finagle/git/commits/f6971d76459e79c49b71172a6701b9e79251bb98,f6971d76459e79c49b71172a6701b9e79251bb98,"finagle-core: Remove deprecated c.t.f.l.DefaultBalancerFactory

Summary: Problem / Solution

It's been deprecated for a release or two so now is a good time to
remove it.

JIRA Issues: CSL-6054

Differential Revision: https://phabricator.twitter.biz/D139814"
jcrossley,2018-02-21 04:47:20,https://api.github.com/repos/twitter/finagle/git/commits/43e0f007a18f923c4280b7e2746952f2986eac28,43e0f007a18f923c4280b7e2746952f2986eac28,"finagle-core: Java-friendly API for creating a Param map

Summary: Problem

Creating a Param map from Java currently looks like this:
    Stack.Param<TimeoutFilter.Param> timeoutParam = TimeoutFilter.Param.param();
    Stack.Params$.MODULE$.empty()
        .$plus(TimeoutFilter.Param.apply(Duration.Top), timeoutParam);
This is a suboptimal API for Java users.

Solution

Now it's much nicer:
   Stacks.EMPTY_PARAMS.plus(new TimeoutFilter.Param(Duration.Top()).mk());

JIRA Issues: CSL-6023

Differential Revision: https://phabricator.twitter.biz/D139660"
stefanlance,2018-02-21 02:09:46,https://api.github.com/repos/twitter/finagle/git/commits/e5adfed916723828bc5b5ee883cc214ca5a9080a,e5adfed916723828bc5b5ee883cc214ca5a9080a,"finagle-core: Add EMA value gauge to `NackAdmissionFilter`

Summary: Problem / Solution

Expose the `NackAdmissionFilter`'s EMA value in our stats to gain insight into
the filter's behavior in low QPS scenarios.

JIRA Issues: CSL-6052

Differential Revision: https://phabricator.twitter.biz/D139760"
bryce-anderson,2018-02-21 00:00:01,https://api.github.com/repos/twitter/finagle/git/commits/f6f25822ca6d82d57309beb3d6a9af6b590563ee,f6f25822ca6d82d57309beb3d6a9af6b590563ee,"finagle-netty3: Fix race condition in ChannelStatsHandler.channelClosed

Summary: Problem

If two threads are calling `channelClosed` simultaneously they may race
to set the `elapsed` field to null, with the loser potentially finding
itself in an NPE situation.

Solution

Make the `elapsed` field an AtomicReference to protect against races.

JIRA Issues: CSL-6041

Differential Revision: https://phabricator.twitter.biz/D139755"
jcrossley,2018-02-20 22:59:04,https://api.github.com/repos/twitter/finagle/git/commits/463b3f5b3309214516427f902054a36026f41165,463b3f5b3309214516427f902054a36026f41165,"Remove jillianc from CSL owners files

Summary: Problem / Solution

jillianc is no longer part of CSL and should be removed
from the relevant OWNERS files. *sadness*

Differential Revision: https://phabricator.twitter.biz/D139910"
dschobel,2018-02-20 21:09:00,https://api.github.com/repos/twitter/finagle/git/commits/37c29e9e06dbecac64ffc97385e6f1bde4b5ff7e,37c29e9e06dbecac64ffc97385e6f1bde4b5ff7e,"finagle-core: WatermarkPool Service instances should be resilient to multiple closes

Summary: Problem

Closing Service instances returned by the WatermarkPool multiple times leads
to accounting errors.

Solution

Only allow a ServiceWrapper instance to register a single close.

JIRA Issues: CSL-5977

Differential Revision: https://phabricator.twitter.biz/D137198"
illicitonion,2018-02-20 01:13:59,https://api.github.com/repos/twitter/finagle/git/commits/a488bf1b5f6d7bef96bd5012653622dde88df8f5,a488bf1b5f6d7bef96bd5012653622dde88df8f5,"Format all BUILD files in source/{e,f,g,h,i,j,k,l}* with buildifier

Summary: If you are finding it hard to rebase past this commit, try running:
`curl https://cgit.twitter.biz/source/plain/devprod/linting/scripts/rebase_past_build_formatting.sh | bash`

This also enables the auto-fix linter for those directories.

See go/buildifier for more information.

If you run into any problems, or need any help, please file a ticket
under DPB or email build@.

JIRA Issues: DPB-9555

TBR=true

Differential Revision: https://phabricator.twitter.biz/D139561"
jcrossley,2018-02-16 19:30:19,https://api.github.com/repos/twitter/finagle/git/commits/0e03b63020ef045b5e8968e6f344472bdf30d12b,0e03b63020ef045b5e8968e6f344472bdf30d12b,"finagle-base-http: Remove deprecated isDiscard field on Cookie

Summary: Problem

The isDiscard field has been removed per
https://jira.twitter.biz/browse/RFC-6265. This field is deprecated on
Cookie and should be removed.

Solution

Remove this field.

JIRA Issues: CSL-5997

TBR=true

Differential Revision: https://phabricator.twitter.biz/D138109"
bryce-anderson,2018-02-15 19:13:38,https://api.github.com/repos/twitter/finagle/git/commits/1632856ce70d4c03756805620e173c44497d7c3d,1632856ce70d4c03756805620e173c44497d7c3d,"finagle-http: Move RequestBuilder to finagle-http and use Netty4 and the encoder

Summary: Problem

We're still using Netty3 extensively in `RequestBuilder` which is tying us
to the past.

Solution

Refactor `RequestBuilder` to be Netty independent itself, and move the
multipart encoding logic to a new interface `FormPostEncoder`, which has
an implementation that uses Netty4's codecs.

JIRA Issues: CSL-3674

TBR=true

Differential Revision: https://phabricator.twitter.biz/D122227"
bryce-anderson,2018-02-15 16:45:56,https://api.github.com/repos/twitter/finagle/git/commits/dbf1d6b8531d34bd034e90118ca4c7be14ea4f42,dbf1d6b8531d34bd034e90118ca4c7be14ea4f42,"finagle-thriftmux: Add toggle to use PushMux.Server as the underlying ThriftMux server muxer

Summary: Problem / Solution

We want to be able to use the push-based mux server as the default muxer
for ThriftMux, so we add a toggle for transitioning to the new server
implementation.

JIRA Issues: CSL-5229

Differential Revision: https://phabricator.twitter.biz/D138222"
jcrossley,2018-02-15 15:34:59,https://api.github.com/repos/twitter/finagle/git/commits/17a32d4461929a20e543117c9c0c82c2cb8159a1,17a32d4461929a20e543117c9c0c82c2cb8159a1,"finagle-base-http: Cookie.maxAge is DefaultMaxAge if set to None

Summary: Problem

In Cookie's copy constructor, we can set maxAge to None,
but encoding to Netty will throw an NPE when we try to
call Cookie.maxAge.inSeconds on a null max-age. The other getters
are fine returning null because no methods are called on the results.

Solution

Return Cookie.DefaultMaxAge if maxAge is None.

JIRA Issues: CSL-6028

TBR=true

Differential Revision: https://phabricator.twitter.biz/D138393"
bryce-anderson,2018-02-15 01:17:20,https://api.github.com/repos/twitter/finagle/git/commits/f9a98fd465a8109d7c10c39fb161f2a163cbd005,f9a98fd465a8109d7c10c39fb161f2a163cbd005,"finagle-core: PushStackServer should register itself in the GlobalRegistry

Summary: Problem / Solution

The PushStackServer doesn't register itself with the global registry,
limiting observability into whether it's being used or not.

JIRA Issues: CSL-6002

Differential Revision: https://phabricator.twitter.biz/D138116"
vkostyukov,2018-02-15 00:39:28,https://api.github.com/repos/twitter/finagle/git/commits/345d7a2943c2f39c67e05d354a3c2ec43f65e37e,345d7a2943c2f39c67e05d354a3c2ec43f65e37e,"finagle: Stop using RichU64 bits

Summary: # Problem / Solution

RichU64* is our early (and far from efficient) attempt to implement unsigned longs support in Finagle.
Given Java 8 provides the same API, we prefer it to our own implementation.

`SpanId` benchmark reports ~80% reduction in the running time and ~92% reduction in allocations.

JIRA Issues: CSL-5689

Differential Revision: https://phabricator.twitter.biz/D137698"
mosesn,2018-02-14 21:15:36,https://api.github.com/repos/twitter/finagle/git/commits/135a0f5d2b5fbab5520c00f9d5a6ff2ad88306ec,135a0f5d2b5fbab5520c00f9d5a6ff2ad88306ec,"finagle: Remove finagle-netty3-http from the travisci build

Summary: Problem / Solution

The travisci build became misconfigured after we deleted finagle-netty3-http.

JIRA Issues: CSL-6024

Differential Revision: https://phabricator.twitter.biz/D138209"
jcrossley,2018-02-14 18:22:33,https://api.github.com/repos/twitter/finagle/git/commits/13a6bd2c75339397eb8dbada68dcf0a85d6529aa,13a6bd2c75339397eb8dbada68dcf0a85d6529aa,"finagle/finagle-base-http: Remove deprecated comment and commentUrl fields from Cookie

Summary: Problem

comment and commentUrl fields have been removed per
RFC-6265. These fields are deprecated on Cookie and should
be removed.

Solution

Remove these fields.

JIRA Issues: CSL-5988

TBR=true

Differential Revision: https://phabricator.twitter.biz/D137950"
yufangong,2018-02-13 21:38:37,https://api.github.com/repos/twitter/finagle/git/commits/6b318521c0e79d1be6cbe99a0f8621f5a605696a,6b318521c0e79d1be6cbe99a0f8621f5a605696a,"sbt: Add finagle-core/test as a dep of finagle-thriftmux

Summary: Problem:
finagle-thriftmux sbt is mising a denpendency.

Solution:
Add it.

JIRA Issues: CSL-5990

Differential Revision: https://phabricator.twitter.biz/D137648"
bryce-anderson,2018-02-13 19:39:59,https://api.github.com/repos/twitter/finagle/git/commits/ef9fedb1aa7a049b9161937dbda498c7a86da42e,ef9fedb1aa7a049b9161937dbda498c7a86da42e,"finagle-netty3-http: Remove the Netty3Impl from Http

Summary: Problem / Solution

We want to drop Netty3 support from the Finagle HTTP
implementation so we delete it.

JIRA Issues: CSL-5976

Differential Revision: https://phabricator.twitter.biz/D136705"
dschobel,2018-02-13 19:24:55,https://api.github.com/repos/twitter/finagle/git/commits/ce779ec7f8ab0fcf39a8c0e9797af2b074214777,ce779ec7f8ab0fcf39a8c0e9797af2b074214777,"finagle-core: CachingPool protects against multiple closes

Summary: Problem

Closing a checked out service instance from `CachingPool` can insert
the same underlying service into the cache multiple times.

Solution

Only allow the service wrapper to be closed once.

JIRA Issues: CSL-5977

Differential Revision: https://phabricator.twitter.biz/D136781"
bryce-anderson,2018-02-13 18:10:44,https://api.github.com/repos/twitter/finagle/git/commits/1a65b4b611a6db2784a278306db383f77fe422f5,1a65b4b611a6db2784a278306db383f77fe422f5,"finagle-thriftmux: Introduce the push-based ThriftMux server implementation

Summary: Problem

We want to use the push-based Mux server implementation as the ThriftMux
servers underlying muxer, but this requires the ability to downgrade to
standard thrift for legacy clients.

Solution

Introduce a downgrade handshaker and a vanilla thrift server session to
downgrade to.

JIRA Issues: CSL-5227

Differential Revision: https://phabricator.twitter.biz/D133423"
jcrossley,2018-02-13 17:22:42,https://api.github.com/repos/twitter/finagle/git/commits/d23e6260547e88dabf4bef3555cad676c711ff6b,d23e6260547e88dabf4bef3555cad676c711ff6b,"finagle/finagle-doc: Docs for backup request stats in Methodbuilder

Summary: Problem / Solution

Add docs for the backup request stats to the MethodBuilder
docs.

JIRA Issues: CSL-5983

Differential Revision: https://phabricator.twitter.biz/D137444"
jcrossley,2018-02-13 06:01:30,https://api.github.com/repos/twitter/finagle/git/commits/ac075921da2806b7f49124b3fd7794ecfd551db9,ac075921da2806b7f49124b3fd7794ecfd551db9,"finagle-core: Scope metrics to <clientname>/<methodname> for backup requests in MethodBuilder

Summary: Problem

Metrics for backup requests do not use the scoped stats
receiver in MethodBuilder.

Solution

Scope metrics to <clientname>/<methodName>, the same as
for the other added filters, in MethodBuilder.

Differential Revision: https://phabricator.twitter.biz/D137306"
bryce-anderson,2018-02-12 16:14:53,https://api.github.com/repos/twitter/finagle/git/commits/a787955bc277a9f6928c29a05bb5ee7ddc3185df,a787955bc277a9f6928c29a05bb5ee7ddc3185df,"finagle-http: The HTTP client shouldn't retry nacked chunked requests

Summary: Problem

When a client makes a dispatch of a chunked request, it consumes the
reader, but if it gets nacked, it may try them again anyway.

Solution

The c.t.f.h.f.ClientNackFilter doesn't mark chunked requests that were
nacked retryable.

JIRA Issues: CSL-5970

Differential Revision: https://phabricator.twitter.biz/D136053"
ryanoneill,2018-02-09 23:49:12,https://api.github.com/repos/twitter/finagle/git/commits/d10a42b8392cf32ecdd5fcb73df7f9a47b0b522c,d10a42b8392cf32ecdd5fcb73df7f9a47b0b522c,"finagle-core: Remove Legacy Finagle SSL/TLS Stack

Summary: Problem / Solution

`c.t.finagle.ssl.Ssl` and related classes were replaced as the primary way of
using SSL/TLS within Finagle in release 6.44.0 (April 2017). It's time to remove
them.

JIRA Issues: CSL-5969

Differential Revision: https://phabricator.twitter.biz/D135908"
kevinoliver,2018-02-09 23:48:16,https://api.github.com/repos/twitter/finagle/git/commits/ae3f83bcf8dd669f9cf4ad3fe7aba642ad823654,ae3f83bcf8dd669f9cf4ad3fe7aba642ad823654,"finagle-core: Promote Retries context to public API

Summary: Problem

Finagle broadcasts the retry attempt across RPC boundaries
via `com.twitter.finagle.context.Retries.current`. However,
service owners cannot use this information as it is not
public API.

Solution

Expose this API publicly and add documentation on it.

Result

Service owners can utilize this information when making
decisions about how to process a request.

JIRA Issues: csl-5968

Differential Revision: https://phabricator.twitter.biz/D136185"
kevinoliver,2018-02-09 19:05:13,https://api.github.com/repos/twitter/finagle/git/commits/14fc0a60f868c195fe61e84daf9f881f16396006,14fc0a60f868c195fe61e84daf9f881f16396006,"finagle-core: Fix typo in ClientBuilder scaladocs

Summary: Problem

The example in the scaladocs for `ClientBuilder.timeout` refers
to the wrong `MethodBuilder` method.

Solution

Replace `withTotalTimeout` with `withTimeoutTotal`.

Differential Revision: https://phabricator.twitter.biz/D136494"
mosesn,2018-02-09 16:33:48,https://api.github.com/repos/twitter/finagle/git/commits/83c8bf2701e57012d5461c649e25551769b5374e,83c8bf2701e57012d5461c649e25551769b5374e,"finagle-http2: Stop closing the transport repeatedly.

Summary: Problem

We close the ChannelTransport many times on stream closure, which makes a bunch
of new exceptions.  These exceptions have to walk the stack trace, so they have
a performance impact.

Solution

1. Don't close the channel if channelInactive has been called on the channel.
2. Don't allow two closes.
3. Don't walk the stack when we make an exception when streams are closed.

JIRA Issues: CSL-5882

Differential Revision: https://phabricator.twitter.biz/D131457"
dschobel,2018-02-09 02:11:24,https://api.github.com/repos/twitter/finagle/git/commits/c336f6eae6359fb3877f6f63c6f5e3ee0f8d99f2,c336f6eae6359fb3877f6f63c6f5e3ee0f8d99f2,"finagle-core: fix race in CachingPool

Summary: Problem / Solution

There is a race when closing checked-out service instances
which makes it possible to forever hide a close from them
and insert them into a cache which might never be cleared.

JIRA Issues: CSL-5974

Differential Revision: https://phabricator.twitter.biz/D136251"
bryce-anderson,2018-02-08 18:28:09,https://api.github.com/repos/twitter/finagle/git/commits/22e08e9d4f09ad6aaf22c569dde32194ab7547e3,22e08e9d4f09ad6aaf22c569dde32194ab7547e3,"finagle-core: Bump the minimum aperture for D-Aperture to 12

Summary: Problem

It has been observed that finagle clients using the
determinstic-aperture load balancer have an increase in latency,
especially during the deployment of backends, in which case a number of
nodes are expected to be down.

Solution

Increase the minimum aperture from 8 to 12 to allow for more healthy
connections in the aperture during backend deployments.

JIRA Issues: CSL-5915

Differential Revision: https://phabricator.twitter.biz/D132434"
jcrossley,2018-02-08 01:27:21,https://api.github.com/repos/twitter/finagle/git/commits/b227d98821ae5aa7bfa39f5c46b354e3407204d1,b227d98821ae5aa7bfa39f5c46b354e3407204d1,"finagle-core: Widen visibility of BackupRequestFilter.filterService

Summary: Problem

For generic [Req, Rep] services that cannot use MethodBuilder at
present, we need to be able to add a BackupRequestFilter.

Solution

Widen visibility of BackupRequestFilter.filterService to public.

Differential Revision: https://phabricator.twitter.biz/D135484"
mosesn,2018-02-08 00:31:04,https://api.github.com/repos/twitter/finagle/git/commits/274945fb24553bc6328e82bd035b820d974bc89f,274945fb24553bc6328e82bd035b820d974bc89f,"finagle-http2: Disable push promises

Summary: Problem

Our http/2 client doesn't support push promises, but it sometimes receives them
from eager-beaver servers, and then barfs.  Barfing should never be the solution
when the remote peer is following the spec.

Solution

Indicate in the initial http/2 settings that we disable server push.

JIRA Issues: CSL-5958

Differential Revision: https://phabricator.twitter.biz/D135151"
jcrossley,2018-02-07 23:59:20,https://api.github.com/repos/twitter/finagle/git/commits/512894cf5b98b7d7b5e7ec7261a7db447a8e7f06,512894cf5b98b7d7b5e7ec7261a7db447a8e7f06,"finagle-core: FailureAccrualFactory takes no action on Failure.Ignorable responses

Summary: Problem

FailureAccrualFactory uses Failure.Ignorable failures as signal
according to the ResponseClassifier (which, by default and for
all built-in classifiers, means a failure). ""Ignorable"" failures should
not be tripping FailureAccrual.

Solution

Take no action on Failure.Ignorable failures in FailureAccrualFactory.

JIRA Issues: CSL-5369

Differential Revision: https://phabricator.twitter.biz/D135435"
jcrossley,2018-02-07 22:18:32,https://api.github.com/repos/twitter/finagle/git/commits/78fdc9aa62c55cc73bf7fe78a0d7c0b7376f5567,78fdc9aa62c55cc73bf7fe78a0d7c0b7376f5567,"finagle-base-http: Wrap N4 cookie values if they would be wrapped in N3

Summary: Problem

In Netty 3, there is automatic wrapping of Cookie values that
contain certain characters. In Netty 4, wrapping must be specified
manually. This means that the cookie values could be different in
Netty 3 vs Netty 4; i.e, double-quoted vs. not.

Solution

Wrap Netty 4 Cookie values that would be wrapped in Netty 3.

JIRA Issues: CSL-5909

Differential Revision: https://phabricator.twitter.biz/D134566"
bryce-anderson,2018-02-07 19:29:36,https://api.github.com/repos/twitter/finagle/git/commits/aed443e9048ebb6cf2cb6a2b553d6363fa31302e,aed443e9048ebb6cf2cb6a2b553d6363fa31302e,"finagle-core: Don't use Updater in Balancer

Summary: Problem

We use the Updater primitive to manage concurrency in our Balancer
implementation but are not using it right. For example, we may call
`Balancer.rebuild()` and then ask for a new node from the new
distributor but we may not actually be the one to run the `rebuild` so
we actually request a node from the old `Distributor`. Measurements show
that operations on `Balancer` are almost never run concurrently so it's not
providing any meaningful benefit through its event stream pre-processing
logic.

Solution

Remove the `Updater` and use plain old synchronization for rebuild and
update operations. This reduces complexity and makes our usages of
`rebuild` correct.

JIRA Issues: CSL-5751

Differential Revision: https://phabricator.twitter.biz/D126486"
bryce-anderson,2018-02-07 19:00:39,https://api.github.com/repos/twitter/finagle/git/commits/9d7c3aa99d62eee9dac4ab786dca97d961d700b0,9d7c3aa99d62eee9dac4ab786dca97d961d700b0,"finagle-core: Fix typos and delete dead code in NameTreeParsers

Summary: Problem / Solution

We have some dead code and types, so fix some of them.

Differential Revision: https://phabricator.twitter.biz/D133565"
dschobel,2018-02-06 22:36:07,https://api.github.com/repos/twitter/finagle/git/commits/9ea7c820448b4531e38bc144b211d32fcded863e,9ea7c820448b4531e38bc144b211d32fcded863e,"finagle-http2: docs for AdapterProxyChannelHandler

Summary: Problem / Solution

Why AdapterProxyChannelHandler suppresses channelInactive on close
is subtle and deserves docs.

Differential Revision: https://phabricator.twitter.biz/D135176"
dschobel,2018-02-06 19:44:34,https://api.github.com/repos/twitter/finagle/git/commits/1a48c5eb6ccbd1a5dce42a833c4c5f5c549f5a03,1a48c5eb6ccbd1a5dce42a833c4c5f5c549f5a03,"finagle-http2: AdapterProxyChannelHandler's embedded handlers should see disconnects

Summary: Problem

AdapterProxyChannelHandler suppresses channel inactive messages from reaching
embedded inbound handlers, denying them the chance to clean up any residual
state or retained content.

Solution

Explicitly fire a channelInactive into the embedded handlers on channel close.

Result

Stateful handlers such as HttpObjectAggregator, HttpContentDecompressor, et al
may clean up state and release buffers on stream termination.

JIRA Issues: CSL-5824

Differential Revision: https://phabricator.twitter.biz/D134906"
yufangong,2018-02-06 18:31:32,https://api.github.com/repos/twitter/finagle/git/commits/9a2d8b8a1e46fff64dfd63d0d41a0c62dbf5c3c4,9a2d8b8a1e46fff64dfd63d0d41a0c62dbf5c3c4,"Twitter-oss: Updtae OSS libraries post release to 18.3.0-SNASHOT

Summary: Problem

We want to update the next version of our Twitter OSS libraries 18.3.0-SNAPSHOT

  - util
  - scrooge
  - finagle
  - twitter-server
  - finatra

Solution

Update the libraries post release.

Differential Revision: https://phabricator.twitter.biz/D134961"
stefanlance,2018-02-06 18:28:35,https://api.github.com/repos/twitter/finagle/git/commits/a2bd12da9bcb9385a31558581524e53978a31ed7,a2bd12da9bcb9385a31558581524e53978a31ed7,"finagle-core: Clarify NackAC failure message

Summary: Problem
The `NackAdmissionFilter` failure message uses the phrasing, ""failed fast"". This
is confusing because the failure is not actually a `FailedFastException`.

Solution
Remove the ""failed fast"" phrase from the failure message.

JIRA Issues: CSL-5950

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D134748"
yufangong,2018-02-05 23:17:46,https://api.github.com/repos/twitter/finagle/git/commits/adf0592c63489659fc2c661923d29073baaac50b,adf0592c63489659fc2c661923d29073baaac50b,"Twitter-oss: Prepare OSS libraries for release 18.2.0

Summary: Problem

We want to release the next versions of our Twitter OSS libraries 18.2.0

  - util
  - scrooge
  - finagle
  - twitter-server
  - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-5938

Differential Revision: https://phabricator.twitter.biz/D134680"
dschobel,2018-02-05 20:12:06,https://api.github.com/repos/twitter/finagle/git/commits/1ab7ab8d18f53982ce9bc83d360ccbf6297c9b10,1ab7ab8d18f53982ce9bc83d360ccbf6297c9b10,"finagle-http2: fix accounting bug in StreamTransportFactory

Summary: Problem / Solution

There is a stream accounting bug where missing streams will never be reported as missing.

JIRA Issues: CSL-5944

Differential Revision: https://phabricator.twitter.biz/D134241"
cacoco,2018-02-05 18:57:09,https://api.github.com/repos/twitter/finagle/git/commits/7a593a3da5744ed69f5ef8cdb4a6d06a2cbbbdaa,7a593a3da5744ed69f5ef8cdb4a6d06a2cbbbdaa,"finagle: Update build.sbt finagleBaseHttp dependencies

Summary: Problem/Solution

the finagle-base-http library is missing some dependencies
in the build.sbt. Add them.

Differential Revision: https://phabricator.twitter.biz/D134527"
jcrossley,2018-02-05 14:44:30,https://api.github.com/repos/twitter/finagle/git/commits/2a82ce73f752dc3a9281118f85c328cdf4b45668,2a82ce73f752dc3a9281118f85c328cdf4b45668,"finagle: Move toggles from finagle-http to finagle-base-http

Summary: Problem

Users may test Requests and Responses independently of
using any finagle-http classes (Requests and Responses are in
finagle-base-http). This means that toggles in finagle-http are not
evaluated in the test run; specifically, the toggle for the cookie encoding
codec.

Solution

Move toggles in finagle-http to finagle-base-http.

JIRA Issues: CSL-5900

Differential Revision: https://phabricator.twitter.biz/D132162"
dschobel,2018-02-02 21:49:22,https://api.github.com/repos/twitter/finagle/git/commits/70211823a11d3ed1bf71b83bf8baeaf9450ab646,70211823a11d3ed1bf71b83bf8baeaf9450ab646,"finagle-http: remove expect continue header stripping in favor of netty impl

Summary: Problem / Solution

We upstreamed our expect header stripping to netty so we can remove our implementation.

JIRA Issues: CSL-5942

Differential Revision: https://phabricator.twitter.biz/D134029"
jcrossley,2018-01-31 01:34:46,https://api.github.com/repos/twitter/finagle/git/commits/f3d57fb9da3938c43254209e5a26037f2a450947,f3d57fb9da3938c43254209e5a26037f2a450947,"finagle/doc: Document BackupRequestFilter stats

Summary: Problem / Solution

Add documentation for the stats in c.t.f.client.BackupRequestFilter.

JIRA Issues: CSL-5549

Differential Revision: https://phabricator.twitter.biz/D132953"
dschobel,2018-01-30 22:19:57,https://api.github.com/repos/twitter/finagle/git/commits/55ce72145bb7d23180bb962bea907d3755386cbf,55ce72145bb7d23180bb962bea907d3755386cbf,"finagle-netty4: better toString for Netty4PushChannelHandle

Summary: Problem / Solution

Add channel information to Netty4PushChannelHandle's toString method.

JIRA Issues: CSL-5676

Differential Revision: https://phabricator.twitter.biz/D132771"
bryce-anderson,2018-01-30 21:13:34,https://api.github.com/repos/twitter/finagle/git/commits/ceac0872cb37303bd4fdadc7b9003740fdcc3ecd,ceac0872cb37303bd4fdadc7b9003740fdcc3ecd,"finagle-mux: Fix potential NPE in c.t.f.m.e.pushsession.ServerTracker

Summary: Problem

In the `ServerTracker.renderResponse` method, we check that the wrong
pointer is not null in ServerTracker which could result in an NPE since
the pointer that could  be null could end up being dereferenced.

Solution

Restructure the method into a match block which allows us to avoid
naming the pointer until after we've done the null check.

Differential Revision: https://phabricator.twitter.biz/D132698"
bryce-anderson,2018-01-30 00:02:45,https://api.github.com/repos/twitter/finagle/git/commits/c1967fcb38b7c68aae5084799381f4499ec2a223,c1967fcb38b7c68aae5084799381f4499ec2a223,"finagle-http2: Fix memory leak in AdapterProxyChannelHandler

Summary: Problem

The AdapterProxyChannelHandler is potentially leaking reference counted
memory when a race occurs between the client resetting a stream and the
peer sending more stream data, in which case the AdapterProxyChannelHandler
just discards the message where it should be releasing it.

Solution

Release the message under these circumstances.

JIRA Issues: CSL-5899

Differential Revision: https://phabricator.twitter.biz/D132315"
isabelmartin,2018-01-29 19:02:45,https://api.github.com/repos/twitter/finagle/git/commits/8c1e718e9b724afbe07e7ecf995eb72b7f6650d1,8c1e718e9b724afbe07e7ecf995eb72b7f6650d1,"finagle-core: Add orElse to allow composition of `FailureAccrualPolicy`s

Summary: Problem:

Our current FailureAccrual solutions aren't performant in all situations.

Solution:

Add method to allow composition of `FailureAccrualPolicy`s so that they can
account for each other's weaknesses.

Differential Revision: https://phabricator.twitter.biz/D131156"
jcrossley,2018-01-27 00:49:29,https://api.github.com/repos/twitter/finagle/git/commits/d8e010d6f0d4c0bc64e5628b4832ca148212e8b8,d8e010d6f0d4c0bc64e5628b4832ca148212e8b8,"finagle: Methodbuilder service create methods that do not take a methodName

Summary: Problem

We'd like to be able to use MethodBuilder to wrap whole clients,
without passing a `methodName`.

Solution

Add methods on `http.MethodBuilder` and `ThriftMux.Methodbuilder`
to create clients without a `methodName`.

JIRA Issues: CSL-5893

Differential Revision: https://phabricator.twitter.biz/D131809"
mosesn,2018-01-26 17:54:13,https://api.github.com/repos/twitter/finagle/git/commits/0d960398d63e362c0296798a59a6c7854ba1ac70,0d960398d63e362c0296798a59a6c7854ba1ac70,"finagle-http: Rename the toggle and start again from 0%

Summary: Problem

The ping memory leaks make it untenable to keep using the old toggle name.

Solution

Let's switch to a new toggle, and split up the client and server toggles.

JIRA Issues: CSL-5880

Differential Revision: https://phabricator.twitter.biz/D130988"
leonmaia,2018-01-25 23:23:43,https://api.github.com/repos/twitter/finagle/git/commits/a376dc91f7cbec1276ee5114cd89b9e9a50bac69,a376dc91f7cbec1276ee5114cd89b9e9a50bac69,"finagle: Add tradeshift to the list of adopters

Summary: Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-5890

Differential Revision: https://phabricator.twitter.biz/D131535"
mosesn,2018-01-25 20:30:40,https://api.github.com/repos/twitter/finagle/git/commits/547d50ad42accdd9e3cbfa8f64833e68bca9ffc1,547d50ad42accdd9e3cbfa8f64833e68bca9ffc1,"finagle-http2: Don't get in an RST loop

Summary: Problem

We sometimes send an RST after we receive an RST, which is explicitly disallowed
by the spec.  Although we don't seem to be getting into RST loops, it's possible
if both the client and the server are badly behaved, so we should avoid having
badly behaved clients.

Solution

Mark the transport as Dead so that it knows it doesn't need to RST.

JIRA Issues: CSL-5879

Differential Revision: https://phabricator.twitter.biz/D130963"
mosesn,2018-01-24 20:17:01,https://api.github.com/repos/twitter/finagle/git/commits/1a778999f265ef3fe8af77fde6820f343c09f100,1a778999f265ef3fe8af77fde6820f343c09f100,"finagle-http2: Stop leaking streams on RST

Summary: Problem

We are leaking streams in the AdapterProxyChannelHandler when we send or receive
an RST.

Solution

Make sure to tear down a stream when we send or receive an RST.  If there's a
race and we later receive a message for a stream that has already received an
RST, we drop the message.

JIRA Issues: CSL-5872

Differential Revision: https://phabricator.twitter.biz/D130464"
dschobel,2018-01-24 19:33:21,https://api.github.com/repos/twitter/finagle/git/commits/02841dfd3022470f0a0c7b5866cfa1c2efcbc61c,02841dfd3022470f0a0c7b5866cfa1c2efcbc61c,"finagle-http2: don't leak ping bodies

Summary: Problem / Solution

Servers currently leak inbound ping payloads so we copy the payloads onheap
while releasing the originals.

JIRA Issues: CSL-5866

Differential Revision: https://phabricator.twitter.biz/D130503"
jcrossley,2018-01-24 16:27:20,https://api.github.com/repos/twitter/finagle/git/commits/292058f07902f2477278ceadfa3a440e87f0ab35,292058f07902f2477278ceadfa3a440e87f0ab35,"finagle-netty4-http: Toggle for using Netty4CookieCodec

Summary: Problem / Solution

We'd like to be able to switch from using Netty3CookieCodec
to Netty4CookieCodec. Introduce a toggle.

JIRA Issues: CSL-5730

TBR=true

Differential Revision: https://phabricator.twitter.biz/D130356"
yufangong,2018-01-24 02:11:31,https://api.github.com/repos/twitter/finagle/git/commits/94777a1cf160e0d44f806066ef358f971ad013f9,94777a1cf160e0d44f806066ef358f971ad013f9,"scrooge: Add asClosable.close method for thrift rich client

Summary: Problem:

Request from https://github.com/twitter/finagle/issues/572, it is currently not
possible to close clients instantiated via the MethodPerEndpoint interface.

```
val client: LoggerService.MethodPerEndpoint =
  Thrift.client.build[LoggerService.MethodPerEndpoint](""localhost:1234"")
```

We want a method to close the connection. e.g.:

```
client.asClosable.close()
```

Solution:

Update scrooge service generators to provide `asClosable` method which returns
a `Closable`, and automatically disable `asClosable` method when detected a
user-defined one.

JIRA Issues: CSL-3618

Differential Revision: https://phabricator.twitter.biz/D129645"
dschobel,2018-01-24 00:22:28,https://api.github.com/repos/twitter/finagle/git/commits/11c3c20a6f6594a75578858178fadecdc3769950,11c3c20a6f6594a75578858178fadecdc3769950,"finagle-netty4: introduce context reloading SSL engine factories

Summary: Problem

SSL Contexts are sufficiently expensive to create and updated infrequently enough
that we'd like to refresh them out-of-band to session acquisition.

Solution

Introduce a ContextReloader which updates an engine factory's SSL Context at a
fixed interval.

JIRA Issues: CSL-5769

Differential Revision: https://phabricator.twitter.biz/D128708"
stefanlance,2018-01-24 00:00:58,https://api.github.com/repos/twitter/finagle/git/commits/2e0191b99aa42bae8e284811b1718c01131d5da2,2e0191b99aa42bae8e284811b1718c01131d5da2,"finagle-memcached: Call `getPartitionFor` less

Summary: Problem

When a request needs to be sent to multiple partitions, the following occurs:

1. `PartitioningService.apply` calls `partitionRequest`;
2. `partitionRequest` calls `groupByPartition`;
3. `groupByPartition` returns a `Map[Future[Service[Req, Rep]], Iterable[Key]]`,
   but we throw out the returned `Future[Service[Req, Rep]]`s. These are the
   same ones we want to pass to `applyService`.

This requires us to make what would otherwise be an unnecessary call to
`getPartitionFor`.

Solution

Change the return type of `partitionRequest` from `Seq[Rep]` to
`Seq[(Req, Future[Service[Req, Rep]])]`. Use the `Future[Service[Req, Rep]]`s
returned by `groupByPartition`.

JIRA Issues: CSL-5699

Differential Revision: https://phabricator.twitter.biz/D124453"
jcrossley,2018-01-23 15:23:09,https://api.github.com/repos/twitter/finagle/git/commits/cc10034cd679b32cf1d9e9591b51e47ea64ff975,cc10034cd679b32cf1d9e9591b51e47ea64ff975,"finagle-netty4-http: Netty4CookieCodec that uses Netty 4 Encoder/Decoder

Summary: Problem

We want to switch from Netty 3 to Netty 4 encoding/decoding
for Cookies. Thus, we need an implementation of CookieCodec
that uses a Netty 4 encoder/decoder.

Solution

Introduce Netty4CookieCodec. Note that this codec is not yet
used; we will switch over from Netty3CookieCodec using a
toggle (will be wired in in a future commit).

JIRA Issues: CSL-5790

Differential Revision: https://phabricator.twitter.biz/D127954"
jcrossley,2018-01-23 00:32:10,https://api.github.com/repos/twitter/finagle/git/commits/632560d04d5ab45fffc36f69f04b678c09000543,632560d04d5ab45fffc36f69f04b678c09000543,"finagle: Use ""x.percent"" in docs and tests for configuring maxExtraLoad for BackupRequestFilter

Summary: Problem / Solution

We have nice sugar for expressing fractional Doubles as
""x.percent""; use this in the BackupRequestFilter tests and
documentation.

JIRA Issues: CSL-5847

Differential Revision: https://phabricator.twitter.biz/D130127"
cacoco,2018-01-22 21:17:26,https://api.github.com/repos/twitter/finagle/git/commits/a7d33cc4e27fb44ea20c985d40c5273d1eca2e3f,a7d33cc4e27fb44ea20c985d40c5273d1eca2e3f,"finagle-thrift: Update `c.t.finagle.thrift.ThriftRichClient#build` scaladoc

Summary: Problem/Solution

Update the `ThriftRichClient` scaladocs for the `#build` functions to
refer to the correct type parameter and Scrooge-generated constructs.

Differential Revision: https://phabricator.twitter.biz/D129946"
ryanoneill,2018-01-22 19:56:05,https://api.github.com/repos/twitter/finagle/git/commits/0b8a2890a175d7ab5983683953c25db6038a0698,0b8a2890a175d7ab5983683953c25db6038a0698,"finagle-core: Deprecate Finagle-Core `Ssl` and Related Classes

Summary: Problem / Solution

Finagle's `Ssl` (`JSSE` and `OpenSSL`) classes were fully replaced
via the configuration and engine factory model as of release
6.44.0 (April 2017). It's time to deprecate and subsequently remove
them.

JIRA Issues: CSL-5849

Differential Revision: https://phabricator.twitter.biz/D129692"
vkostyukov,2018-01-22 19:55:15,https://api.github.com/repos/twitter/finagle/git/commits/b9d71e36b64eaced148a5da48eb200b0a5725c88,b9d71e36b64eaced148a5da48eb200b0a5725c88,"finagle-http: Remove deprecated request.multipart

Summary: Problem / Solution

`Request.mutltipart` is gone. Use `MultipartDecoder` instead.

JIRA Issues: CSL-5815

TBR=true

Differential Revision: https://phabricator.twitter.biz/D129158"
jcrossley,2018-01-22 19:21:13,https://api.github.com/repos/twitter/finagle/git/commits/2ae9d396969ca6b0bc9cfe9a130fbc384dc95abe,2ae9d396969ca6b0bc9cfe9a130fbc384dc95abe,"finagle-core: idempotent method on MethodBuilder that takes a Tunable

Summary: Problem

BackupRequestFilter can be configured with a Tunable `maxExtraLoad`.
Because we'd like MethodBuilder to be the entry point for configuring
BackupRequestFilter, we need a method that takes a Tunable `maxExtraLoad`.

Solution

Add idempotent method on MethodBuilder that takes a Tunable[Double]
for `maxExtraLoad`.

JIRA Issues: CSL-5848

Differential Revision: https://phabricator.twitter.biz/D129836"
bryce-anderson,2018-01-22 17:47:45,https://api.github.com/repos/twitter/finagle/git/commits/ae7925505cd87e4743f9d11a4bd6c4c3089f36eb,ae7925505cd87e4743f9d11a4bd6c4c3089f36eb,"finagle-mux: Fix expired server testing certificate

Summary: Problem / Solution

The certificate used for end-to-end testing has expired. Replace it with
one which doesn't expire for another 9 years.

JIRA Issues: CSL-5850

Differential Revision: https://phabricator.twitter.biz/D129840"
ryanoneill,2018-01-20 22:01:14,https://api.github.com/repos/twitter/finagle/git/commits/7e64d3c5a26351a27fbbfaa711283a322d8df723,7e64d3c5a26351a27fbbfaa711283a322d8df723,"finagle-thriftmux: Fix Expired Server Testing Certificate

Summary: Problem / Solution

The certificate used for end-to-end thriftmux testing has expired. Replace
it with one which doesn't expire for another 9 years.

JIRA Issues: CSL-5851

TBR=true

Differential Revision: https://phabricator.twitter.biz/D129739"
jcrossley,2018-01-20 00:35:40,https://api.github.com/repos/twitter/finagle/git/commits/2312f235206a580245486394363b9ee7d60ee185,2312f235206a580245486394363b9ee7d60ee185,"finagle-core: BackupRequestFilter can be configured with a Tunable maxExtraLoad

Summary: Problem

It would be useful for services to be able to dynamically tune
the amount of backups sent, or disable backups altogether.

Solution

Add a configuration method to BackupRequestFilter that takes
a Tunable. This will be integrated into MethodBuilder in a future
commit.

JIRA Issues: CSL-5768

Differential Revision: https://phabricator.twitter.biz/D128662"
mosesn,2018-01-19 17:45:11,https://api.github.com/repos/twitter/finagle/git/commits/a370b702c657d66dd1e4517c825d240e9a77cf0c,a370b702c657d66dd1e4517c825d240e9a77cf0c,"finagle-http: Fix disabling http/2, and make it easy to do

Summary: Problem

Right now, it's impossible to disable http/2 if it's toggled up.

Solution

Check if http/2 has been explicitly enabled or disabled, and ignore the toggle
in that case.  I also made a helper method to make it easy to enable to disable
HTTP/2.

JIRA Issues: CSL-5809

Differential Revision: https://phabricator.twitter.biz/D129068"
DieBauer,2018-01-19 01:49:59,https://api.github.com/repos/twitter/finagle/git/commits/88e7bea9bf29bc5fed3207782bf82b25bf869c4a,88e7bea9bf29bc5fed3207782bf82b25bf869c4a,"finagle-core: Don't Calculate the Hashcode of Stream in Budget

Summary: Problem / Solution

Calculating the hashcode of an instance of `Retries.Budget` could end up
in an infinite computation. Since the case class gives us a default
implementation including all fields, including the `requeueBackoffs` field
with a possibly infinite `Stream[Duration]`, we need to override this behaviour.
This is done by ignoring the fact that there is a field with a `Stream`.
The equality of the class is implemented with
http://www.artima.com/lejava/articles/equality.html in mind.

Closes #669.

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

JIRA Issues: CSL-5823

Differential Revision: https://phabricator.twitter.biz/D128594"
cacoco,2018-01-19 01:29:20,https://api.github.com/repos/twitter/finagle/git/commits/653e2696b424adc27c5fe67d0479cb896b31fdbd,653e2696b424adc27c5fe67d0479cb896b31fdbd,"finagle-thriftmux: Expose the underlying configured client label in MethodBuilder

Summary: Problem/Solution

We want to expose the underlying configured client `label` in the
`c.t.finagle.thriftmux.MethodBuilder`. Expose it as a val field.

Differential Revision: https://phabricator.twitter.biz/D129109"
jcrossley,2018-01-18 22:35:39,https://api.github.com/repos/twitter/finagle/git/commits/efeb7adf2ba53076a49ae7b65ae92b6f6b062a58,efeb7adf2ba53076a49ae7b65ae92b6f6b062a58,"finagle/doc: MethodBuilder docs for idempotency

Summary: Problem / Solution

The MethodBuilder docs are missing a section for idempotency.
Add it, and modify the example to use idempotent/nonIdempotent
methods.

JIRA Issues: CSL-5774

Differential Revision: https://phabricator.twitter.biz/D128417"
bryce-anderson,2018-01-18 16:48:04,https://api.github.com/repos/twitter/finagle/git/commits/350953aee0c6cae3a550cdf34bc1a30c4bfc5beb,350953aee0c6cae3a550cdf34bc1a30c4bfc5beb,"finagle-http: Move HttpCodec to finagle-http and use Netty4 codecs

Summary: Problem / Solution

The `c.t.f.h.codec.HttpCodec` object represents a HTTP implementation in
that it converts HTTP/1.x byte/string representations to and from HTTP
model objects. We should move it out of our HTTP model package and
convert it to use Netty 4 so we can remove our dependency on Netty 3.

JIRA Issues: CSL-5631

Differential Revision: https://phabricator.twitter.biz/D116364"
cacoco,2018-01-17 23:46:37,https://api.github.com/repos/twitter/finagle/git/commits/30397d4a68ffd8fad4ee0bddc842733cd7302940,30397d4a68ffd8fad4ee0bddc842733cd7302940,"Twitter-oss: Update OSS libraries post release to 18.2.0-SNAPSHOT

Summary: Problem

We want to update the next version of our Twitter OSS libraries 18.2.0-SNAPSHOT
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Update the libraries post release.

JIRA Issues: CSL-5786

Differential Revision: https://phabricator.twitter.biz/D128600"
cacoco,2018-01-17 22:16:38,https://api.github.com/repos/twitter/finagle/git/commits/e4a6b28e179c5432606076336c7f1f6a5f05a5ec,e4a6b28e179c5432606076336c7f1f6a5f05a5ec,"Twitter-oss: Prepare OSS libraries for release 18.1.0

Summary: We want to release the next versions of our Twitter OSS libraries 18.10.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-5786

Differential Revision: https://phabricator.twitter.biz/D128555"
jcrossley,2018-01-17 21:13:39,https://api.github.com/repos/twitter/finagle/git/commits/80c3c5108abb1586f44518e8719f3930396f956b,80c3c5108abb1586f44518e8719f3930396f956b,"finagle-core: Make Configured case class on BackupRequestFilter private

Summary: Problem / Solution

Because there are considerations to make BackupRequestFilter take a
Tunable[Double] for maxExtraLoad, we'd like to reduce the visibility
of the Configuration case class so that the constructor can be safely
changed. We already have Configured method, so the case class is not
necessary for configuration.

Differential Revision: https://phabricator.twitter.biz/D128463"
jcrossley,2018-01-17 20:19:17,https://api.github.com/repos/twitter/finagle/git/commits/2c1105e5e57abf5048f991339f9c54f2570fa7ea,2c1105e5e57abf5048f991339f9c54f2570fa7ea,"finagle-core: Introduce idempotency to MethodBuilder

Summary: Problem

Many endpoints are idempotent but Finagle doesn't have any high-level
understanding of that.

Solution

Introduce `idempotent` to `MethodBuilder`.

Result

This allows Finagle to set a more aggressive default retry policy as
well as giving an entry point into properly configuring backup
requests.

JIRA Issues: CSL-5723

Differential Revision: https://phabricator.twitter.biz/D122087"
vkostyukov,2018-01-17 19:13:01,https://api.github.com/repos/twitter/finagle/git/commits/ed6800a3c7b8f01c31a963377bbe5b0147ffd6cc,ed6800a3c7b8f01c31a963377bbe5b0147ffd6cc,"finagle-http2: Add a gauge of the # of opened streams on a server

Summary: # Problem
There is no visibility into the number of currently active streams on an H2 server.

# Solution
Add a gauge that exposes the number of H2 streams.

JIRA Issues: CSL-5818

Differential Revision: https://phabricator.twitter.biz/D127667"
jcrossley,2018-01-17 01:57:12,https://api.github.com/repos/twitter/finagle/git/commits/8ef6acb144c57d64dae78d32df724623c29c36e5,8ef6acb144c57d64dae78d32df724623c29c36e5,"finagle-toggle: Make Toggles independent

Summary: Problem

Toggles all use the same hash seed (a constant integer), so
that when the server id is applied to a toggle to produce an
on/off value, toggles with the same fraction have the same
distribution and thus have the same on/off state.

Solution

Change the constant integer hash seed to be a hash of the
Toggle id.

JIRA Issues: CSL-5817

Differential Revision: https://phabricator.twitter.biz/D128172"
jcrossley,2018-01-16 16:24:47,https://api.github.com/repos/twitter/finagle/git/commits/05378f230f0abdbb062a8b88b9e9ea6e66bf9456,05378f230f0abdbb062a8b88b9e9ea6e66bf9456,"finagle-core: Move ExceptionSourceFilter to source all request failures

Summary: Problem

ExceptionSourceFilter is part of the endpoint stack, which
means that any request failures that occur after that in the
filter chain (such as overload failures) are not sourced.

Solution

Move ExceptionSourceFilter near the top of the stack so it
catches all request failures.

JIRA Issues: CSL-5812

Differential Revision: https://phabricator.twitter.biz/D127628"
jcrossley,2018-01-16 15:56:50,https://api.github.com/repos/twitter/finagle/git/commits/c6705ec506ee548c6e1f7beb4d2ebb64b0641778,c6705ec506ee548c6e1f7beb4d2ebb64b0641778,"finagle/finagle-base-http: Refactor CookieMap tests to be more comprehensive

Summary: Problem

There's a lot we don't test in CookieMapTest (e.g, testing
behavior with requests but not responses), and we need
a way to easily test CookieMap using a Netty 4 encoder
without copying over the tests.

Solution

Make CookieMapTest abstract, and have the Netty 3 version
define the N3-specific cookie encode/decode behavior.
The N4 version (to come) will test the N4-specific
behavior.

JIRA Issues: CSL-5791

Differential Revision: https://phabricator.twitter.biz/D126482"
cacoco,2018-01-13 02:41:00,https://api.github.com/repos/twitter/finagle/git/commits/f61b6f99c7d108b458d5adcb9891ff6ddda7f125,f61b6f99c7d108b458d5adcb9891ff6ddda7f125,"scrooge-generator: Update MethodPerEndpointBuilder to generate MethodPerEndpoint types

Summary: Problem

It is not currently possible to generate a method-per-endpoint client that
wraps a `ServicePerEndpoint` as a `MyService.MethodPerEndpoint` because the
`MethodPerEndpointBuilder` implementations generated by Scrooge always use the
higher-kinded form e.g., `MyService[Future]`.

Solution

Update the current implementations of `MethodPerEndpointBuilder` generated by
Scrooge to use the preferred `MyService.MethodPerEndpoint` form. Introduce a
(deprecated) new builder, `ThriftServiceBuilder` for backwards compatibility
which generates a ""method-per-endpoint"" client in the higher-kinded form.

Update associated classes as required for support.

JIRA Issues: CSL-5800

Differential Revision: https://phabricator.twitter.biz/D127538"
ryanoneill,2018-01-12 20:12:45,https://api.github.com/repos/twitter/finagle/git/commits/d05d1299032673d03b13b32afe668c83de3fd65c,d05d1299032673d03b13b32afe668c83de3fd65c,"finagle-core: Remove Reverse Lookup from SslClientEngineFactories

Summary: Problem

SslClientEngineFactories can perform an undesirable reverse lookup when a
hostname is not provided as part of the `SslClientConfiguration`. This is because
`InetSocketAddress.getHostName` is used on the supplied address.

Solution

Change from using `InetSocketAddress.getHostName` to
`InetSocketAddress.getHostString`.

JIRA Issues: CSL-5754

Differential Revision: https://phabricator.twitter.biz/D124369"
vkostyukov,2018-01-12 20:05:59,https://api.github.com/repos/twitter/finagle/git/commits/add0050e29ff466c8f94dfa48023a7618c8564df,add0050e29ff466c8f94dfa48023a7618c8564df,"finagle-http2: Add a gauge of the # of opened streams from a client

Summary: # Problem

There is no visibility into the number of currently active streams on an H2 client.

# Solution

Add a gauge that exposes the number of H2 streams.

JIRA Issues: CSL-5808

Differential Revision: https://phabricator.twitter.biz/D127238"
yannick-polius,2018-01-12 19:19:25,https://api.github.com/repos/twitter/finagle/git/commits/269e18150f776c640745d5cc27b16211f6629678,269e18150f776c640745d5cc27b16211f6629678,"finagle-redis: Give attribution for a recent commit

Summary: Problem

Attribution of the starting point for the recent redis Geo Commands
changes was missing and needs to be included.

Solution

Modify the finagle/CHANGES file to explicitly attribute the changes to
the Github PR listed.

JIRA Issues: GEO-4519

Differential Revision: https://phabricator.twitter.biz/D127521"
vkostyukov,2018-01-11 19:18:13,https://api.github.com/repos/twitter/finagle/git/commits/a205bd207c29e4a6d5cf1273db4ea277f56feda8,a205bd207c29e4a6d5cf1273db4ea277f56feda8,"finagle-http: Introduce MultipartDecoder

Summary: Problem

Multipart decoding exposed via `Request.multipart` makes Netty 3 removal complicated (as there is
no vanilla decoder available in Finagle).

Solution

By introducing a `MultipartDecoder`, we're allowing users to choose the decoder of their preference
(i.e., Netty 3 or Netty 4 decoder).

For the sake of smooth migration, the singleton `MultipartDecoder` instance points to a Netty 4
decoder right now (via service-loading machinery).

JIRA Issues: CSL-5738

Differential Revision: https://phabricator.twitter.biz/D126013"
bryce-anderson,2018-01-11 01:23:30,https://api.github.com/repos/twitter/finagle/git/commits/a69652fce3c7d8f0cfe27b7f5b570c0a37780233,a69652fce3c7d8f0cfe27b7f5b570c0a37780233,"finagle-core: Rename Aperture.aperture to Aperture.logicalAperture

Summary: Problem / Solution

We have two notions of what an aperture is, a logical and a physical
aperture (in the case of vanilla Aperture they are the same) but we have
a lot of things named 'aperture' which can be confusing, especially the
stats that we emit.

Solution

Rename the things called 'aperture' to 'logicalAperture' (or 'logical_aperture'
for the stat) so as to be clear which one we're working with.

JIRA Issues: CSL-5752

Differential Revision: https://phabricator.twitter.biz/D126357"
jcrossley,2018-01-10 17:52:09,https://api.github.com/repos/twitter/finagle/git/commits/80e8b7f3a478504f76f6ec9e9f9b94fd42cc8bd7,80e8b7f3a478504f76f6ec9e9f9b94fd42cc8bd7,"finagle/finagle-mysql: Don't roll back a transaction if the failure was a wrapped ChannelClosedException

Summary: Problem

Transactions are rolled back even if the failure was a
ChannelClosedException. This is unnecessary because
if the channel is closed, the rollback will also fail with
a CCE.

Solution

Don't roll back a transaction if the failure was a wrapped
ChannelClosedException. We need to unwrap the exception
because currently, CCEs are wrapped in a WriteException
(and there could potentially be more levels of wrapping). We
also no longer log transaction rollback failures if the failure
was a wrapped CCE, because this cannot be mitigated by
the user.

Differential Revision: https://phabricator.twitter.biz/D126526"
jcrossley,2018-01-09 22:12:45,https://api.github.com/repos/twitter/finagle/git/commits/a601ed357301a2dd7afea35d2a7ec31d9a18dbfd,a601ed357301a2dd7afea35d2a7ec31d9a18dbfd,"finagle-mysql: Add failure that caused rollback to log of rollback failure

Summary: Problem

When a transaction fails and is rolled back, we log if
the rollback fails and include the failure that caused
the rollback to fail. However, the original failure is not
logged and it's confusing to users whether the logged
failure is the one that caused the rollback, or the one
that caused the rollback to fail.

Solution

Include the failure that caused the rollback in the log.

JIRA Issues: CSL-5794

Differential Revision: https://phabricator.twitter.biz/D126350"
bryce-anderson,2018-01-09 21:26:25,https://api.github.com/repos/twitter/finagle/git/commits/31ca21efdb3c9b5bb99b4cab0ce5b89744220ea6,31ca21efdb3c9b5bb99b4cab0ce5b89744220ea6,"finagle-core: Increase the min Deterministic Aperture size to 8

Summary: Problem

We've observed that we can get 4 nodes down in a Deterministic Aperture,
and since we don't have a mechanism for evicting unhealthy nodes for
this distributor, we effectively kill the instance that depends on this
client.

Solution

To decrease the probability of finding a completely dead set of nodes we
increase the minimum to 8. This will be revisited as we consider the
case of allowing the Deterministic Aperture to adjust for unhealthy
nodes in its slice.

JIRA Issues: CSL-5746

Differential Revision: https://phabricator.twitter.biz/D123187"
dschobel,2018-01-09 20:16:20,https://api.github.com/repos/twitter/finagle/git/commits/559ae4ad3eb6bae4c2f885fb3149b492c6bf46a0,559ae4ad3eb6bae4c2f885fb3149b492c6bf46a0,"finagle-core: don't use unauthenticated host values in SslServerSessionVerifier

Summary: Problem / Solution

Rather than use the unauthenticated host data in SSLSession, parameterize
 SslServerSessionVerifier by Address.

JIRA Issues: CSL-5691

Differential Revision: https://phabricator.twitter.biz/D124815"
jcrossley,2018-01-09 20:14:49,https://api.github.com/repos/twitter/finagle/git/commits/e5c0d56ba36a35885822e2524acf5ba5214f38c9,e5c0d56ba36a35885822e2524acf5ba5214f38c9,"finagle-base-http: Introduce CookieCodec abstraction

Summary: Problem

We'd like to add a Toggle to switch from using the Netty 3 cookie
encoder/decoder to Netty 4. In order to transparently swap
out encoders/decoders, we need them to have a common
interface.

Solution

Introduce CookieCodec, which provides methods to
encode/decode, and an implementation that uses the
Netty 3 versions of encoders/decoders.

JIRA Issues: CSL-5771

Differential Revision: https://phabricator.twitter.biz/D124988"
kevinoliver,2018-01-08 22:15:29,https://api.github.com/repos/twitter/finagle/git/commits/203fed55335633173b2a36b98c30c55336baaf3a,203fed55335633173b2a36b98c30c55336baaf3a,"finagle: Introduce request logging

Summary: Problem

There is a lack of visibility into where request/response time is
spent, both synchronously and asynchronously, within the Finagle
stack.

Solution

Introduce `c.t.f.filter.RequestLogger` which logs at trace level to
the ""com.twitter.finagle.request.Logger"" logger.

Result

Better visibility for users and operators.

JIRA Issues: csl-5671

Differential Revision: https://phabricator.twitter.biz/D124352"
bryce-anderson,2018-01-08 18:07:50,https://api.github.com/repos/twitter/finagle/git/commits/68e9d0862e94919658f5613a55fcd2d9f893cb1c,68e9d0862e94919658f5613a55fcd2d9f893cb1c,"finagle-mux: Add support for OppTLS in push-based mux server

Summary: Problem / Solution

We need to support Opportunistic TLS in the push-based mux server, so
add it via expanding on the new server handshake logic.

JIRA Issues: CSL-5341

Differential Revision: https://phabricator.twitter.biz/D122349"
kevinoliver,2018-01-08 17:52:07,https://api.github.com/repos/twitter/finagle/git/commits/338096f0128858282f562aeee2fd9874425f2ca1,338096f0128858282f562aeee2fd9874425f2ca1,"finagle-memcached: Speedup Buf to Int conversion

Summary: Problem

The memcached protocol often returns lengths encoded as bytes, encoded
as ascii, ""101"" for example. These need to be parsed into their
integer form. The bytes are in Bufs, and the code is writing them to a
byte array to then be parsed.

Solution

Skip the middle man, the byte array, and parse the Buf directly.

Result

A 7.4% runtime reduction in a benchmark for decoding GETs.

JIRA Issues: CSL-5775

Differential Revision: https://phabricator.twitter.biz/D125543"
yannick-polius,2018-01-05 23:12:28,https://api.github.com/repos/twitter/finagle/git/commits/d32d123665fab5bada54a653029d60a88a29b1a6,d32d123665fab5bada54a653029d60a88a29b1a6,"finagle-redis: Add support for Geo commands

Summary: Problem

The client lacks support for Geo commands.

Solution

Modified the client to include Geo Commands.

JIRA Issues: GEO-4491

Differential Revision: https://phabricator.twitter.biz/D123167"
kevinoliver,2018-01-05 17:30:29,https://api.github.com/repos/twitter/finagle/git/commits/d3935669eafea3261a1d8b078baac1c55fe4608c,d3935669eafea3261a1d8b078baac1c55fe4608c,"finagle-mysql: Fix handling of failed transaction rollbacks

Summary: Problem

The fix for transaction rollback in `D122771` was broken when the code
went into ""Failure closing connection after rollback failure"" case [1]
causing the `Service` to become unusable as all usages would get
`com.twitter.finagle.ServiceClosedException` exceptions.

Solution

Simplify that code to only remove the connection.

[1] https://github.com/twitter/finagle/blob/4b76bfc2fc86d4b713edb382e0cf38ac79371542/finagle-mysql/src/main/scala/com/twitter/finagle/mysql/Client.scala#L257-L261

JIRA Issues: csl-5766

Differential Revision: https://phabricator.twitter.biz/D124936"
kevinoliver,2018-01-04 22:19:28,https://api.github.com/repos/twitter/finagle/git/commits/196ffce546488e73a666d45f2d3894eb03255387,196ffce546488e73a666d45f2d3894eb03255387,"finagle-core: Add test for synchronous exceptions in Filter.andThen

Summary: Problem / Solution

The code is doing the right thing, but we were missing test coverage
for when a `Service` throws a synchronous exception and a `Filter`
composed on top of it depends on it being lifted into a
`Future.exception`.

JIRA Issues: csl-5770

Differential Revision: https://phabricator.twitter.biz/D124991"
bryce-anderson,2018-01-04 20:06:59,https://api.github.com/repos/twitter/finagle/git/commits/b5715eaf4d17167e86233169a0ad858624ecd316,b5715eaf4d17167e86233169a0ad858624ecd316,"finagle-mux: Add handshake logic to push-based mux server

Summary: Problem / Solution

The push-based mux server needs to be able to handshake.

JIRA Issues: CSL-5226

Differential Revision: https://phabricator.twitter.biz/D115801"
dschobel,2018-01-03 23:17:39,https://api.github.com/repos/twitter/finagle/git/commits/fafc3ba037f1e93e8e070078e3389e38f6fdc0d2,fafc3ba037f1e93e8e070078e3389e38f6fdc0d2,"finagle-http2: fix racey access of StreamTransportFactory

Summary: Problem

Http2Transporter uses StreamTransportFactory's non-threadsafe apply method which
can cause dispatch errors.

Solution

Bounce the apply call through StreamTransportFactory's serial executor.

Result

Test case error-rate drops from ~2% to 0.

JIRA Issues: CSL-5291

Differential Revision: https://phabricator.twitter.biz/D124292"
jcrossley,2018-01-03 19:25:31,https://api.github.com/repos/twitter/finagle/git/commits/1c5d9eacd8bacf3ecc6007f17769854cd8a630e0,1c5d9eacd8bacf3ecc6007f17769854cd8a630e0,"finagle-memcached: Remove UseTwoConnections toggle

Summary: Problem / Solution

We've successfully had `UseTwoConnections` toggled on
for several months. Remove the toggle.

JIRA Issues: CSL-5693

Differential Revision: https://phabricator.twitter.biz/D119619"
jcrossley,2018-01-03 17:43:36,https://api.github.com/repos/twitter/finagle/git/commits/1460af913bd5bf7a3c0ed77b9ec268e026640267,1460af913bd5bf7a3c0ed77b9ec268e026640267,"finagle-memcached: Move client/server-specific encoding/decoding to respective packages

Summary: Problem

Show.scala contains several classes for client and server
encoding/decoding. This is confusing for readers and makes
navigating the code more difficult.

Solution

Move them into their own files in the client/server packages.

JIRA Issues: CSL-4693

TBR=true

Differential Revision: https://phabricator.twitter.biz/D123057"
ryanoneill,2018-01-02 23:14:27,https://api.github.com/repos/twitter/finagle/git/commits/767df26bef7f15d722197a1889afeb8a91d16d68,767df26bef7f15d722197a1889afeb8a91d16d68,"finagle-netty4: Refactor Netty 4 Engine Factories

Summary: Problem / Solution

The `Netty4ClientEngineFactory` and `Netty4ServerEngineFactory` contains
logic which would be useful in other circumstances. Create
`Netty4ClientSslConfigurations` and `Netty4ServerSslConfigurations`
respectively.

JIRA Issues: CSL-5722

Differential Revision: https://phabricator.twitter.biz/D122929"
stefanlance,2018-01-02 17:20:41,https://api.github.com/repos/twitter/finagle/git/commits/4b1315a030b3ebf38916417d3513ba957b89a2ae,4b1315a030b3ebf38916417d3513ba957b89a2ae,"finagle: Remove dead link from user guide

Summary: Problem / Solution

Remove a dead link in the finagle user guide.

JIRA Issues: CSL-5753

Differential Revision: https://phabricator.twitter.biz/D123649"
yufangong,2017-12-28 02:55:25,https://api.github.com/repos/twitter/finagle/git/commits/4ffbe5d4a97065cb51a2049e4c64cffaa768ef7f,4ffbe5d4a97065cb51a2049e4c64cffaa768ef7f,"finagle/doc: Fix code block links

Summary: Problem:

Some code examples in `Extending Finagle` are missing.

Solution:

Find them.

Differential Revision: https://phabricator.twitter.biz/D123573"
ryanoneill,2017-12-26 20:02:30,https://api.github.com/repos/twitter/finagle/git/commits/6b13bed23b1e6b4fe1dadb1bac5f532aa63bc5a8,6b13bed23b1e6b4fe1dadb1bac5f532aa63bc5a8,"finagle-netty4: Add ryano to OWNERS

Differential Revision: https://phabricator.twitter.biz/D122395"
cacoco,2017-12-21 19:55:57,https://api.github.com/repos/twitter/finagle/git/commits/9737ead820eef60896f562b13881c6f8cd9bb67e,9737ead820eef60896f562b13881c6f8cd9bb67e,"finagle-thrift, finagle-thriftmux: Remove `ReqRep` specific methods

Summary: Problem

Exposing two different APIs for `ServicePerEndpoint` and `ReqRepServicePerEndpoint`
in the ThriftRichClient, meant that any APIs built on-top also had to carry
this bifurcation, in some cases making it challenging to provide a clear
API. Since the only difference between the two are the Service types, it should be
possible to use a single API over differing types.

Solution

The main cause of the bifurcation was that were two non-related builders defined,
one the `ServicePerEndpointBuilder` and one the `ReqRepServicePerEndpointBuilder`.

These builers are now related with the `ReqRepServicePerEndpointBuilder` being
a subclass (a more specialized version) of the `ServicePerEndpointBuilder`.

This allows us to express an API purely in terms of the parent-type and in turn
makes having specific ""ReqRep"" methods unncessary, thus we remove them.

Differential Revision: https://phabricator.twitter.biz/D123341"
jcrossley,2017-12-21 19:37:23,https://api.github.com/repos/twitter/finagle/git/commits/57ec412336664dcca167e08c3ea6fa8f5998cf41,57ec412336664dcca167e08c3ea6fa8f5998cf41,"finagle-core: Close BackupRequestFilter before underlying service

Summary: Problem

BackupRequestFilter may still have outstanding requests
when closed. For the sake of correctness, we should
keep it in a good state until closed; if closed before the service
is, the WindowedPercentile could have data added to it after
being closed.

Solution

Close the underlying service before BRF.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D123412"
jcrossley,2017-12-20 22:56:13,https://api.github.com/repos/twitter/finagle/git/commits/e4f6e99a73409788ac2160cf3006a64fa7723f29,e4f6e99a73409788ac2160cf3006a64fa7723f29,"finagle-core: Split BackupRequestFilter into Factory + Filter

Summary: Problem

We'd like to be able to use BackupRequestFilter (which is
really a ServiceFactory) as a filter for usage with MethodBuilder.

Solution

Split BackupRequestFilter into a Factory and a Filter. The Filter
extends Closable so that its resources are cleaned, and the Factory
closes the created Filter when closed.

JIRA Issues: CSL-5735

Differential Revision: https://phabricator.twitter.biz/D122650"
utkarshcmu,2017-12-20 22:55:23,https://api.github.com/repos/twitter/finagle/git/commits/dac39f21b121898cd8f905ba61536ad07e62bab5,dac39f21b121898cd8f905ba61536ad07e62bab5,"finagle: Added Tinder in the Adopters list

Summary: Signed-off-by: Christopher Coco <ccoco@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D123244"
stefanlance,2017-12-20 22:31:40,https://api.github.com/repos/twitter/finagle/git/commits/4b65e03262e3219cc7f3659865ff72866a9927e9,4b65e03262e3219cc7f3659865ff72866a9927e9,"finagle-core: Optimize `AsyncLatch`

Summary: Problem

`AsyncLatch` enqueues its waiting tasks in an `ArrayBuffer`. Using an
`ArrayBuffer` is expensive, especially since instances of `AsyncLatch` almost
always enqueue only one or two tasks.

Solution

Replace the `ArrayBuffer` with a `List`.

JIRA Issues: CSL-5687

Differential Revision: https://phabricator.twitter.biz/D122561"
kevinoliver,2017-12-20 16:18:11,https://api.github.com/repos/twitter/finagle/git/commits/4b76bfc2fc86d4b713edb382e0cf38ac79371542,4b76bfc2fc86d4b713edb382e0cf38ac79371542,"finagle-mysql: Fix bug with transaction rollbacks

Summary: Problem

If an exception happens during a transaction's rollback,
the connection can be left with uncommitted state.

Solution

Close the connection when the rollback fails.

Result

Avoid state leaking across connections.

JIRA Issues: csl-5727

Differential Revision: https://phabricator.twitter.biz/D122771"
cacoco,2017-12-20 02:03:03,https://api.github.com/repos/twitter/finagle/git/commits/f66e0db504028ca39bfb68781afb519e1861180a,f66e0db504028ca39bfb68781afb519e1861180a,"finagle-thrift: ReqRep builders should just subclass counterparts

Summary: Problem/Solution

The `c.t.finagle.thrift.service.ReqRepMethodPerEndpointBuilder` and
the `c.t.finagle.thrift.service.ReqRepServicePerEndpointBuilder`
should simply subclass their non-ReqRep counterparts.

We need separate builders as the scrooge generated implementations
currently return unrelated types. However, having the builders
related simplifies creating APIs over these constructs.

Differential Revision: https://phabricator.twitter.biz/D121621"
vkostyukov,2017-12-20 01:30:21,https://api.github.com/repos/twitter/finagle/git/commits/2c75bef4d144d0ca8eeb06007edf35ad73f6353d,2c75bef4d144d0ca8eeb06007edf35ad73f6353d,"finagle-thrift: Reduce allocations in headers

Summary: Problem

Not every Thrift request/response has headers yet we allocate a new `ArrayBuffer` (size 16) to accommodate
them.

Solution

Rebrand `Headers.Values` into a class that only maintains a reference to headers (represented as a `Seq`).

JIRA Issues: CSL-5724

Differential Revision: https://phabricator.twitter.biz/D122498"
bryce-anderson,2017-12-19 17:20:19,https://api.github.com/repos/twitter/finagle/git/commits/e2a90ba5e1bab84faf255a11afa191b9fd2b1462,e2a90ba5e1bab84faf255a11afa191b9fd2b1462,"finagle-netty[3|4]/finagle-netty[3|4]-http: Add myself to OWNERS files

Summary: Problem / Solution

I'm able to review code in these packages but am not an OWNER, so add
myself to the OWNERS files.

Differential Revision: https://phabricator.twitter.biz/D122431"
bryce-anderson,2017-12-19 16:30:58,https://api.github.com/repos/twitter/finagle/git/commits/24e74e5270d0f3c31b50cc1d39181a3908a2ac67,24e74e5270d0f3c31b50cc1d39181a3908a2ac67,"finagle-base-http: Make some fields of HTTP messages abstract

Summary: Problem / Solution

By making the `ctx` and `headerMap` fields of HTTP messages abstract
we can avoid the overhead of allocating an unused `Record` for the `ctx`
and using a lazy val for `headerMap` for proxy implementations which
define these in terms of the underlying message.

JIRA Issues: CSL-5708

Differential Revision: https://phabricator.twitter.biz/D120931"
jcrossley,2017-12-19 14:32:08,https://api.github.com/repos/twitter/finagle/git/commits/3326d2fd9435c6e34ba61e2f0b100ea447cbadbe,3326d2fd9435c6e34ba61e2f0b100ea447cbadbe,"finagle-exp: Deprecate BackupRequestFilter

Summary: Problem / Solution

c.t.f.client.BackupRequestFilter subsumes c.t.f.exp.BackupRequestFilter.
Deprecate c.t.f.exp.BackupRequestFilter.

JIRA Issues: CSL-5731

Differential Revision: https://phabricator.twitter.biz/D122344"
stuhood,2017-12-18 23:04:42,https://api.github.com/repos/twitter/finagle/git/commits/ee7f65a21f30c3bdd74249f371c3c1271f36311a,ee7f65a21f30c3bdd74249f371c3c1271f36311a,"Switch from a blacklist to a whitelist of deps for zookeeper

Summary: Switch from a blacklist to a whitelist of deps for zookeeper-client and zookeeper-server.

This should help prevent any stray binary copies of twitter libraries from making it into source.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D121939"
jcrossley,2017-12-18 21:55:01,https://api.github.com/repos/twitter/finagle/git/commits/afeac56131102f2ea487a0f59a94177e3f4e2a0e,afeac56131102f2ea487a0f59a94177e3f4e2a0e,"finagle-core: New BackupRequestFilter

Summary: Problem / Solution

Introduce new BackupRequestFilter into finagle-core.
The BackupRequestFilter in finagle-exp will be deprecated
in a future commit.

JIRA Issues: CSL-5729

Differential Revision: https://phabricator.twitter.biz/D122268"
yufangong,2017-12-18 21:10:27,https://api.github.com/repos/twitter/finagle/git/commits/8cd6a882bf560bf78594057a756d2dcaa4b0d7d5,8cd6a882bf560bf78594057a756d2dcaa4b0d7d5,"{finagle-base-http, finagle-http}: Bye bye Apache Commons Lang.

Summary: Problem:

The only place using commons-lang is our dateFormatter, and it can be replaced
by Java 8's DateTimeFormatter.

Solution:

Converted java.util.Date to java.time.ZonedDateTime which is required by
DateTimeFormatter, and remove commons-lang as our dependency.

JIRA Issues: CSL-3180

Differential Revision: https://phabricator.twitter.biz/D121479"
mosesn,2017-12-17 00:19:32,https://api.github.com/repos/twitter/finagle/git/commits/781cb0cbdcb19db0b27377fdfc577c1614a97d72,781cb0cbdcb19db0b27377fdfc577c1614a97d72,"finagle-http2: Bump the default header list size

Summary: Problem

Folks see increased rates of 431s when migrating from http/1.1 to http/2.
This seems to be because of a bug in netty which miscounts the size of headers
by double counting header names.

See https://github.com/netty/netty/issues/7511.

Solution

The longterm fix is to fix netty, but the short term is to bump the max header
list size.

JIRA Issues: CSL-5725

Differential Revision: https://phabricator.twitter.biz/D121912"
yufangong,2017-12-15 23:58:22,https://api.github.com/repos/twitter/finagle/git/commits/2624a717239042a1fe6412c3b5e31102534a790f,2624a717239042a1fe6412c3b5e31102534a790f,"finagle-mux: Mark AlarmTest and CoordinatorTest as flaky

Summary: Problem:

finagle-mux frequently hangs in Travis-ci build. Logs show that failure builds
always stopped before printing out AlarmTest result.

Solution:

Do an elimination approach, mark AlarmTest and CoordinatorTest flaky in CI.

JIRA Issues: CSL-5357

Differential Revision: https://phabricator.twitter.biz/D121854"
cacoco,2017-12-14 21:35:02,https://api.github.com/repos/twitter/finagle/git/commits/f996de153887728a83680f11e4368356aa827631,f996de153887728a83680f11e4368356aa827631,"twitter-oss: Add Slack notification configuration to TravisCI

Summary: Problem/Solution

Move from Hipchat to Slack TravisCI notifications for:
util, scrooge, finagle, twitter-server, and finatra.

Differential Revision: https://phabricator.twitter.biz/D121452"
mosesn,2017-12-13 20:03:56,https://api.github.com/repos/twitter/finagle/git/commits/38c280b963e7d958c67f82647cf8aec260d6c8af,38c280b963e7d958c67f82647cf8aec260d6c8af,"finagle-http2: Start supplying boringssl by default

Summary: Problem

http/2 users who are on JDK < 9 who want ALPN need to bring their own ALPN
implementation.

Solution

Supply tcnative-boringssl with finagle-http2 by default.

JIRA Issues: CSL-5393

Differential Revision: https://phabricator.twitter.biz/D119562"
mosesn,2017-12-13 16:46:20,https://api.github.com/repos/twitter/finagle/git/commits/ad8a51b89232029da682165fdf57e10d01541c94,ad8a51b89232029da682165fdf57e10d01541c94,"finagle-http2: Downgrade correctly with ALPN

Summary: Problem

Right now our ALPN downgrade drops the old connection on the ground and then
makes a new http/1.1 connection

Solution

Instead of dropping the old connection on the ground, change the pipeline to
http/1.1 and continue to use it.

Result

We no longer leak connections when the ALPN upgrade fails.

JIRA Issues: CSL-5425

Differential Revision: https://phabricator.twitter.biz/D118687"
bryce-anderson,2017-12-13 16:26:17,https://api.github.com/repos/twitter/finagle/git/commits/2857af8d07e58e5b8791f05a26850bfd16374442,2857af8d07e58e5b8791f05a26850bfd16374442,"finagle-base-http: Request should be Netty 3 free

Summary: Problem / Solution

We want to decouple Finagle HTTP model from Netty 3 so we remove another
usage of Netty 3 codecs in favor of our own implementations.

JIRA Issues: CSL-5422

Differential Revision: https://phabricator.twitter.biz/D116018"
kevinoliver,2017-12-12 22:49:51,https://api.github.com/repos/twitter/finagle/git/commits/502a91d5f927c8c60f02e3d75e87262f407ae068,502a91d5f927c8c60f02e3d75e87262f407ae068,"finagle-{core, memcached}: remove `ConcurrentLoadBalancerFactory` in favor of stack param.

Summary: Problem

It can be useful to duplicate addresses inside the load balancer as
to increase concurrency. For example, this can remove head-of-line
blocking for pipelined protocols or when servers pin connections to
a thread for their lifetime.

Solution

`finagle-memcached` had this built in via a `LoadBalancerFactory` extension.
We remove that extension in favor of a simple stack param inside the LBF.

JIRA Issues: CSL-5679

Differential Revision: https://phabricator.twitter.biz/D119394"
stefanlance,2017-12-12 18:40:14,https://api.github.com/repos/twitter/finagle/git/commits/1bc837c4feafc0096e43c0e98516a8e1c50c4421,1bc837c4feafc0096e43c0e98516a8e1c50c4421,"finagle-core: Optimize PeakEwma

Summary: Problem / Solution

Use `respond` instead of `ensure` in `PeakEwma`.

JIRA Issues: CSL-5527

Differential Revision: https://phabricator.twitter.biz/D119855"
cacoco,2017-12-12 04:54:04,https://api.github.com/repos/twitter/finagle/git/commits/d2a04fb81ac685ad595dbd3313aa4a26d9073580,d2a04fb81ac685ad595dbd3313aa4a26d9073580,"finagle: Really remove guavaLib from build.sbt

Summary: Problem/Solution

Some occurrences of the ""guavaLib"" variable were
left in the finagle/build.sbt. Remove them.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D120234"
kevinoliver,2017-12-12 02:23:49,https://api.github.com/repos/twitter/finagle/git/commits/246be7e560e5089396335462b0585214e2f75983,246be7e560e5089396335462b0585214e2f75983,"finagle-serverset: Remove Guava dependency

Summary: Problem / Solution

Trying to minimize our Guava dependency.

JIRA Issues: csl-5680

Differential Revision: https://phabricator.twitter.biz/D119555"
isabelmartin,2017-12-12 00:56:00,https://api.github.com/repos/twitter/finagle/git/commits/f8ad720657aec21553bde813a8adb333b117713f,f8ad720657aec21553bde813a8adb333b117713f,"finagle: Only add `NackAdmissionFilter` to protocols with Nack support

Summary: Problem

finagle-memcached, finagle-mysql, and finagle-redis clients do not support
Nacks, so the `NackAdmissionFilter` is unnecessary.

Solution

Remove `NackAdmissionFilter` from the default client stack. Explicitly add it to
the finagle-{http,mux} client stacks and do not add it to the
finagle-{memcached,mysql,redis} client stacks. Note that it is added to
finagle-http2 via finagle-http and finagle-thriftmux via finagle-mux.

JIRA Issues: csl-5641

Differential Revision: https://phabricator.twitter.biz/D116722"
stefanlance,2017-12-11 21:34:25,https://api.github.com/repos/twitter/finagle/git/commits/3d2e9e68bcc48b33f1c77e2719e6b02f99d50925,3d2e9e68bcc48b33f1c77e2719e6b02f99d50925,"finagle: Make OSS instructions for locally building docs more explicit

Summary: Problem / Solution

Clarify instructions for locally building the site to test OSS changes.

JIRA Issues: CSL-5690

Differential Revision: https://phabricator.twitter.biz/D119565"
cacoco,2017-12-11 20:20:31,https://api.github.com/repos/twitter/finagle/git/commits/fadf557c9a85c3cb66ebf2084527dd2a733c6f79,fadf557c9a85c3cb66ebf2084527dd2a733c6f79,"twitter-oss: Update to sbt-coursier 1.0.0-RC13

Summary: Problem/Solution

The sbt-coursier issue (https://github.com/coursier/coursier/issues/694) has been
reported to be fixed with release 1.0.0-RC13. Update and enabled the plugin
in the util, scrooge, finagle, twitter-server, and finatra builds.

Differential Revision: https://phabricator.twitter.biz/D119436"
isabelmartin,2017-12-11 19:28:22,https://api.github.com/repos/twitter/finagle/git/commits/4732df1a0ac4352f4a33fb3d1faeb5137771e569,4732df1a0ac4352f4a33fb3d1faeb5137771e569,"Twitter-oss: Post release

Summary: Problem/Solution:

The 17.12.0 release is finished, so we need to move to 18.1.0-SNAPSHOT.

Differential Revision: https://phabricator.twitter.biz/D119471"
vkostyukov,2017-12-10 18:39:06,https://api.github.com/repos/twitter/finagle/git/commits/4910280968ee6c1873f2160a69665b3ce9eebdf0,4910280968ee6c1873f2160a69665b3ce9eebdf0,"finagle-mux: Message.makeHeader optimization

Summary: Problem / Solution

To make sure a Scala compiler optimization kicks in and optimizes out a call to `Array.apply`,
we're removing its parameter.

Results

- 20% (50 ns) cut in the running time in Mux' message benchmark
- 9% (56 bytes) cut in the allocations in Mux's message benchmark
- 4% (56 bytes) cut in the allocations in Mux's pipeline benchmark (exercised by both regular and push-session clients and servers)

JIRA Issues: CSL-5614

Differential Revision: https://phabricator.twitter.biz/D118480"
ryanoneill,2017-12-08 23:39:20,https://api.github.com/repos/twitter/finagle/git/commits/c255a57dcccc97c6a6f5509c03bdb44c82f8c22a,c255a57dcccc97c6a6f5509c03bdb44c82f8c22a,"finagle-netty4: Rename SSL Handlers to Channel Initializers

Summary: Problem

The `Netty4ClientSslHandler` and `Netty4ServerSslHandler` classes are
channel initializers and not descendants of Netty's `SslHandler`. This
can lead to confusion, especially as we move to add our own generic SSL
handler which is a descendant of Netty's `SslHandler`.

Solution

Rename them to `Netty4ClientSslChannelInitializer` and
`Netty4ServerSslChannelInitializer` respectively.

JIRA Issues: CSL-5681

Differential Revision: https://phabricator.twitter.biz/D119375"
isabelmartin,2017-12-08 19:18:08,https://api.github.com/repos/twitter/finagle/git/commits/82d00660373582d6bfe56df8155b52528df36691,82d00660373582d6bfe56df8155b52528df36691,"Twitter-oss: Prepare OSS libraries for release 17.12.0

Summary: Problem

We want to release the next versions of our Twitter OSS libraries 17.12.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D119343"
mosesn,2017-12-07 20:54:24,https://api.github.com/repos/twitter/finagle/git/commits/ace6d1c4b22eb736faf6f9b0cf0d1f22226eda59,ace6d1c4b22eb736faf6f9b0cf0d1f22226eda59,"finagle-http2: Strip more headers in more places

Summary: Problem

We aren't stripping the special header http2-settings from our http requests.
This header should only exist for the upgrade request, and it isn't necessary
after the upgrade has completed.

Solution

We should strip it, and we should generally santize both incoming and outgoing
requests for both the client and the server.  I also split out the sanitization
into its own channel handler, so it's a bit cleaner now.

JIRA Issues: CSL-5644

Differential Revision: https://phabricator.twitter.biz/D117676"
kevinoliver,2017-12-07 17:53:28,https://api.github.com/repos/twitter/finagle/git/commits/182eed1f38fc704438bc4f298945769f918ea6e4,182eed1f38fc704438bc4f298945769f918ea6e4,"finagle-netty4: Improve ByteBuf snooping

Summary: Problem / Solution

When snooping on ByteBufs the content was insufficient.

JIRA Issues: csl-5650

Differential Revision: https://phabricator.twitter.biz/D118399"
cacoco,2017-12-07 01:42:15,https://api.github.com/repos/twitter/finagle/git/commits/c912dd4bff6f11d587b7fd7f42d976a7b6762f14,c912dd4bff6f11d587b7fd7f42d976a7b6762f14,"finagle-core: Expose setting timeouts with Tunables

Summary: Problem/Solution

Expose tunables for timeout configurations in MethodBuilder

JIRA Issues: CSL-5647

Differential Revision: https://phabricator.twitter.biz/D118114"
vkostyukov,2017-12-06 01:18:26,https://api.github.com/repos/twitter/finagle/git/commits/dfdc9bf5ed781e091f0d26a9905fc4fd69349702,dfdc9bf5ed781e091f0d26a9905fc4fd69349702,"finagle-http: Replace DefaultHeaderMap.canonicalName with custom hashing

Summary: Problem / Solution

Instead of using a canonical name (i.e., `toLowerCase(Locale.US)` to support a case-insensitive
nature of headers, we can roll our own (inspired by the Netty 3 implementation) hash function
and equals method for the `HashMap`. This allows eliminating the need for allocating a string
and going through `toLowerCase` logic, which happened to be quite expensive compute-wise.

The new version features:

 - 1.4x throughput improvements for `createAndAdd`
 - 3x throughput improvements for `get`

JIRA Issues: CSL-5322

Differential Revision: https://phabricator.twitter.biz/D117065"
kevinoliver,2017-12-05 22:25:11,https://api.github.com/repos/twitter/finagle/git/commits/7611ec6a7595986fc383b15bdfd8967b28e6428d,7611ec6a7595986fc383b15bdfd8967b28e6428d,"finagle-thriftmux: Make StandardThriftSmuxTest more robust

Summary: Problem

We have seen occasional test failures in the
'StandardThriftSmuxTest.can talk to each other with opportunistic'
test.

Solution

Increase timeouts.

JIRA Issues: csl-5650

Differential Revision: https://phabricator.twitter.biz/D117961"
bryce-anderson,2017-12-05 20:52:29,https://api.github.com/repos/twitter/finagle/git/commits/0da4625685b46f76ad364ccebdb50c78ab212a2f,0da4625685b46f76ad364ccebdb50c78ab212a2f,"finagle-base-http: Decouple ParamMap from netty

Summary: Problem

Our model is dependant on Netty 3 for doing query param codec work
but we'd like to drop our dependency on Netty 3.

Solution

Implement our own codecs which are strongly influenced by Netty 3.

JIRA Issues: CSL-5187

Differential Revision: https://phabricator.twitter.biz/D110859"
bryce-anderson,2017-12-04 18:37:45,https://api.github.com/repos/twitter/finagle/git/commits/d63186f147653b5c222e613ba50ae0686ab071e3,d63186f147653b5c222e613ba50ae0686ab071e3,"finagle-mux: Add push-based mux server

Summary: Problem / Solution

The push-based model is a good fit for the mux server.

JIRA Issues: CSL-5225

Differential Revision: https://phabricator.twitter.biz/D114259"
bryce-anderson,2017-12-04 17:06:10,https://api.github.com/repos/twitter/finagle/git/commits/93d211b9a6a0e7fa9a4a4aa3c37e71d53d17f1a8,93d211b9a6a0e7fa9a4a4aa3c37e71d53d17f1a8,"finagle-mux: Improve representation of pre-encoded messages

Summary: Problem

Our current representation of pre-encoded messages overloads the
Message.buf field to represent the Message.encode(msg) form, which
includes the type and tag, contrary to the definition of the field in
the Message trait.

Solution

Make a new message type, PreEncoded, which caches the encoded
representation of parent messages.

JIRA Issues: CSL-5640

Differential Revision: https://phabricator.twitter.biz/D116547"
kevinoliver,2017-12-01 19:36:03,https://api.github.com/repos/twitter/finagle/git/commits/e14d058bd99be522a40426d2b75a027a7ce67750,e14d058bd99be522a40426d2b75a027a7ce67750,"finagle-zipkin: Remove Guava dependency

Summary: Problem / Solution

Trying to minimize our Guava dependency.

JIRA Issues: csl-5635

Differential Revision: https://phabricator.twitter.biz/D116592"
kevinoliver,2017-12-01 18:05:49,https://api.github.com/repos/twitter/finagle/git/commits/61f3a3638c5cebe0ef7aa00cd4210d3a4901c5da,61f3a3638c5cebe0ef7aa00cd4210d3a4901c5da,"finagle-base-http, finagle-http: Remove Guava dependency

Summary: Problem / Solution

Trying to minimize our Guava dependency.

JIRA Issues: csl-5636

Differential Revision: https://phabricator.twitter.biz/D116426"
vkostyukov,2017-12-01 06:47:40,https://api.github.com/repos/twitter/finagle/git/commits/1052cd362dc0eae3d1fea011a7a634db81573f8e,1052cd362dc0eae3d1fea011a7a634db81573f8e,"finagle-http: Only trigger multipart decoding on form/data-multipart requests

Summary: # Problem

`Request.multipart` triggers a multipart decoding even for non-multipart requests while
technically discarding the results.

# Solution

Only trigger a multipart decoding for a non-chunked, multipart requests.

JIRA Issues: CSL-5474

TBR=true

Differential Revision: https://phabricator.twitter.biz/D114966"
bryce-anderson,2017-12-01 01:06:02,https://api.github.com/repos/twitter/finagle/git/commits/89c8d8839e33e189dda437f3aef596acf4062068,89c8d8839e33e189dda437f3aef596acf4062068,"finagle-mux: Be less vocal when MessageWriter fails with a ChannelClosedException

Summary: Problem / Solution

We're getting a lot of messages in the logs from closing with an
exception which happens to be a ChannelClosedException, which is not
unexpected, so lower the log level on these events to debug while
elevating the log level of other types of exceptions to warning.

JIRA Issues: CSL-5638

Differential Revision: https://phabricator.twitter.biz/D116514"
mosesn,2017-12-01 00:15:58,https://api.github.com/repos/twitter/finagle/git/commits/cb4554d5e2cd5fddd44ba3d7e9ecaab951f8df64,cb4554d5e2cd5fddd44ba3d7e9ecaab951f8df64,"Revert ""finagle: Remove `NackAdmissionFilter` from protocols without Nack support""

Summary: This reverts the commit for PHAB_ID=D111722

Differential Revision: https://phabricator.twitter.biz/D116539"
kevinoliver,2017-11-30 23:14:48,https://api.github.com/repos/twitter/finagle/git/commits/6495fb7a17a552d9b3b10b10a90491f000460379,6495fb7a17a552d9b3b10b10a90491f000460379,"finagle-memcached: Remove Guava dependency

Summary: Problem / Solution

Trying to minimize our Guava dependency.

JIRA Issues: csl-5634

Differential Revision: https://phabricator.twitter.biz/D116402"
kevinoliver,2017-11-30 20:52:49,https://api.github.com/repos/twitter/finagle/git/commits/f2f47ce3468df24aa3d5861452384c87f2e36cae,f2f47ce3468df24aa3d5861452384c87f2e36cae,"finagle-thrift: Remove Guava dependency

Summary: Problem / Solution

Trying to minimize our Guava dependency.

JIRA Issues: csl-5633

Differential Revision: https://phabricator.twitter.biz/D116381"
bryce-anderson,2017-11-30 20:47:53,https://api.github.com/repos/twitter/finagle/git/commits/006de6a3e762f3725c0c26176145c2634fba3a65,006de6a3e762f3725c0c26176145c2634fba3a65,"finagle-base-http: Remove [Request|Response].[encode|decode][Bytes|String] methods

Summary: Problem / Solution

We need to remove these if we want to move c.t.f.http.codec.HttpCodec out of
finagle-base-http, which is necessary to decouple that package from HTTP
implementations.

JIRA Issues: CSL-5627

Differential Revision: https://phabricator.twitter.biz/D116350"
kevinoliver,2017-11-30 19:54:43,https://api.github.com/repos/twitter/finagle/git/commits/f786f8ab5d783a942ef1acd22f1ece5ad6123ff1,f786f8ab5d783a942ef1acd22f1ece5ad6123ff1,"finagle-core: Remove Guava dependency

Summary: Problem / Solution

Trying to minimize our Guava dependency.

JIRA Issues: CSL-5632

Differential Revision: https://phabricator.twitter.biz/D116372"
cacoco,2017-11-30 01:29:23,https://api.github.com/repos/twitter/finagle/git/commits/3abaa52437032c2bbc481e5819d9ca19e12a2b11,3abaa52437032c2bbc481e5819d9ca19e12a2b11,"finagle-thriftmux: Add support for ServicePerEndpoint and ReqRepServicePerEndpoint to thriftmux.MethodBuilder

Summary: Problem/Solution

The `c.t.f.thriftmux.MethodBuilder` does not support the new `ServicePerEndpoint` and
`ReqRepServicePerEndpoint` types. Add the functionality.

JIRA Issues: CSL-5612

Differential Revision: https://phabricator.twitter.biz/D116081"
stefanlance,2017-11-29 22:52:09,https://api.github.com/repos/twitter/finagle/git/commits/b35494bd901e2ac6720fda5911d13cd0e503bbc6,b35494bd901e2ac6720fda5911d13cd0e503bbc6,"finagle-netty4: Don't use attributes to store per-channel stats in `ChannelRequestStatsHandler`

Summary: Problem / Solution

Follow-up to not using attributes to store per-channel stats in
`ChannelStatsHandler`.

JIRA Issues: CSL-5533

Differential Revision: https://phabricator.twitter.biz/D114587"
cacoco,2017-11-29 21:30:58,https://api.github.com/repos/twitter/finagle/git/commits/e9b2b74db7f7d0618950034005ec204b6465a2be,e9b2b74db7f7d0618950034005ec204b6465a2be,"finagle-thrift: Update reqRepMethodPerEndpoint type param

Summary: Problem/Solution

The `ThriftRichClient#reqRepMethodPerEndpoint` MethodPerEndpoint type
param is confusingly using the old-style `FutureIface` terminology.

Update the type param to the new `MethodPerEndpoint` terminology.

JIRA Issues: CSL-5607

Differential Revision: https://phabricator.twitter.biz/D115844"
mosesn,2017-11-29 20:21:17,https://api.github.com/repos/twitter/finagle/git/commits/c2a104b8e13a7d67a9643a86746050839a839aac,c2a104b8e13a7d67a9643a86746050839a839aac,"finagle-http2: Close connections properly in h2

Summary: Problem

Connections aren't being closed properly in http/2 when the client shuts down.

Solution

Propagate it all the way in AdapterProxyChannelHandler.

JIRA Issues: CSL-5425

Differential Revision: https://phabricator.twitter.biz/D111678"
roanta,2017-11-29 20:02:08,https://api.github.com/repos/twitter/finagle/git/commits/2f1076c3e3c461bd5eaa9c8dded965ca1ab24a05,2f1076c3e3c461bd5eaa9c8dded965ca1ab24a05,"finagle-core: create setter for process global load balancer

Summary: Problem

We'd like to be able to set the default load balancer programmatically
so that we can easily configure it based on the environment (e.g. via toggles).

Solution

Create a global var inside the load balancer package which references the
current default and rename the `DefaultBalancerFactory` object to
`FlagBalancerFactory` is more appropriate given its function.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D115335"
kevinoliver,2017-11-29 19:40:18,https://api.github.com/repos/twitter/finagle/git/commits/df1617582fca5ed3832c18d440dae644d9500cb4,df1617582fca5ed3832c18d440dae644d9500cb4,"finagle-thrift, thriftmux, scrooge: Move Tracing of RPC method names

Summary: Problem

The tracing of Thrift method names happens in the Finagle layer which
does not have easy access to the method being called. In order to do
tracing at this layer, part of the Thrift message must be decoded,
which is a waste of resources.

Solution

Push the tracing down into the generated code where the method name is
known.

JIRA Issues: csl-5577

Differential Revision: https://phabricator.twitter.biz/D115294"
stefanlance,2017-11-29 19:00:20,https://api.github.com/repos/twitter/finagle/git/commits/d3d264a03773411136b02159431534b2a15bbd9a,d3d264a03773411136b02159431534b2a15bbd9a,"finagle-memcached: Optimize `PartitioningService.apply` for single-partition requests

Summary: Problem

`PartitioningService.apply` is agnostic to the given request's type. If the
request is a `StorageCommand`, an `ArithmeticCommand`, or a `Delete`, the
request will have just one key and therefore the service will have to speak to
just one partition. `apply` calls `partitionRequest` and `getPartitionKeys` with
these requests even though the returned `Seq`s are discarded. This is wasteful,
especially if a significant fraction of a service's requests are destined for
just one partition.

Solution

Do not call `partitionRequest` if given a `StorageCommand`, an
`ArithmeticCommand`, or a `Delete`.

JIRA Issues: CSL-5517

Differential Revision: https://phabricator.twitter.biz/D114518"
stefanlance,2017-11-29 18:50:25,https://api.github.com/repos/twitter/finagle/git/commits/e1c3f84e95e1b24cb8a899891e9bf6b95e6742e8,e1c3f84e95e1b24cb8a899891e9bf6b95e6742e8,"finagle-memcached: Change `MemcachedPartitioningService`'s `Key` from `String` to `Buf`

Summary: Problem

`MemcachedPartitioningService`'s `Key` is a `String` but gets converted to a
`Buf` before use. This conversion is expensive and unnecessary.

Solution

Change `MemcachedPartitioningService`'s `Key` from `String` to `Buf`.

JIRA Issues: CSL-5530

Differential Revision: https://phabricator.twitter.biz/D113939"
roanta,2017-11-29 18:15:24,https://api.github.com/repos/twitter/finagle/git/commits/77daa02be7f2e5b5a80c3875729a9102e87be0d9,77daa02be7f2e5b5a80c3875729a9102e87be0d9,"finagle-core: add per-thread stats in verbose mode

Summary: Problem / Solution

It can be useful to have a per-thread breakdown of latency
and request distribution when analyzing server performance
or anomalies. This patch adds these stats at debug level.

JIRA Issues: CSL-5519

Differential Revision: https://phabricator.twitter.biz/D115041"
kevinoliver,2017-11-29 17:58:44,https://api.github.com/repos/twitter/finagle/git/commits/d542eae771e7ce97dde2ccf09b0418ab9f44b25c,d542eae771e7ce97dde2ccf09b0418ab9f44b25c,"util-app, finagle-toggle: Java compatibility tests for `Flag.let`

Summary: Problem / Solution

We don't have Java examples for calling `Flag.let` or
`GlobalFlag.let`.

JIRA Issues: csl-5271

Differential Revision: https://phabricator.twitter.biz/D115620"
cacoco,2017-11-29 07:38:54,https://api.github.com/repos/twitter/finagle/git/commits/fcf66bae591ba1d2707bed97585186268c5b29ff,fcf66bae591ba1d2707bed97585186268c5b29ff,"finagle-thrift: Move ThriftUtil, ThriftRichClient, ThriftRichServer

Summary: Problem/Solution

Move these files to `c.t.finagle.thrift`.

JIRA Issues: CSL-5361

TBR=true

Differential Revision: https://phabricator.twitter.biz/D115284"
adriancole,2017-11-29 01:27:37,https://api.github.com/repos/twitter/finagle/git/commits/76b6c9a90e4e08b2b97941266f02786fdb13c9a9,76b6c9a90e4e08b2b97941266f02786fdb13c9a9,"finagle: Ensures 128bit trace IDs are propagated in outbound http requests

Summary: Problem

When `com.twitter.finagle.tracing.traceId128Bit=true` outbound requests don't
include the entire trace ID, rather only the lower 64 bits. This can result in
broken traces, depending on if Zipkin is set to operate tolerantly.

Solution

This was due to a missed change where we missed setting the trace ID header
according to `traceIdHigh`. This fixes that and backfills tests

Result

`X-B3-TraceId` values should be 32 lowerhex length when
`com.twitter.finagle.tracing.traceId128Bit=true` and a new trace is sent
downstream

See #651

Signed-off-by: Isabel Martin <imartin@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D115342"
bryce-anderson,2017-11-28 23:57:46,https://api.github.com/repos/twitter/finagle/git/commits/e7d8a915926397654e4f82ebd2264646cf93da68,e7d8a915926397654e4f82ebd2264646cf93da68,"finagle-netty4: Fail push session on uncaught exception in serial executor

Summary: Problem / Solution

Currently, if an exception is thrown in the Executor provided by the
Netty4PushChannelHandle, it may end up only as a log message. Instead,
we should log loudly and fail the channel handle.

JIRA Issues: CSL-5603

Differential Revision: https://phabricator.twitter.biz/D115432"
stefanlance,2017-11-28 22:10:39,https://api.github.com/repos/twitter/finagle/git/commits/84a0f82a5f3dab51c8cbe60d63073329b40dad4d,84a0f82a5f3dab51c8cbe60d63073329b40dad4d,"finagle-memcached: Make `AbstractCommandToBuf.encodeCommandWithData` more efficient

Summary: Problem

`AbstractCommandToBuf.encodeCommandWithData` converts the data's size
(in bytes) to a `String` and then writes it to the `Buf`. This is
relatively expensive allocation-wise.

Solution

Write the size digit-by-digit using `ByteWriter.writeByte`.

JIRA Issues: CSL-5518

Differential Revision: https://phabricator.twitter.biz/D112775"
stefanlance,2017-11-28 20:36:49,https://api.github.com/repos/twitter/finagle/git/commits/730ffd26d278ecdb8402e18158de76610d01efc1,730ffd26d278ecdb8402e18158de76610d01efc1,"finagle-core: Reduce allocations in `FailureAccrualFactory.apply`

Summary: Problem

`FailureAccrualFactory.apply` uses `map` and `onFailure`.

Solution

Use `transform` and `respond` instead of `map` and `onFailure`.

JIRA Issues: CSL-5590

Differential Revision: https://phabricator.twitter.biz/D114405"
jcrossley,2017-11-28 18:02:00,https://api.github.com/repos/twitter/finagle/git/commits/0d162d17ab8de8f3dd8c317e3abcdbfc11b451f7,0d162d17ab8de8f3dd8c317e3abcdbfc11b451f7,"finagle-core: Removing ""pipelining/pending"" stat

Summary: Problem  / Solution

The ""pipelining/pending"" stat is not helpful; we already
have a ""pending"" stat, and because pending accounting
is different in the push/non-push pipelining implementations,
it's confusing for users. Remove it.

JIRA Issues: CSL-5583

Differential Revision: https://phabricator.twitter.biz/D113424"
jcrossley,2017-11-28 15:27:31,https://api.github.com/repos/twitter/finagle/git/commits/fb37aed5d0518349f2531f5deddac9344610bbfb,fb37aed5d0518349f2531f5deddac9344610bbfb,"finagle: Introduce Failure.Ignorable Failure Flag

Summary: Problem

The logic in StatsFilter is coupled to BackupRequestFilter;
it knows about BackupRequestLost in order to omit such
exceptional responses from Stats. We'd like to remove
this coupling.

Solution

Introduce the Failure flag Failure.Ignorable. In StatsFilter,
we now check for this flag when determining whether or
not to stat a response. BackupResponseLost has been
deprecated. Note that BackupRequestFilter still uses
BackupResponseLost, but this filter will soon be replaced
by a new version.

JIRA Issues: CSL-5495

Differential Revision: https://phabricator.twitter.biz/D113466"
bryce-anderson,2017-11-21 20:55:12,https://api.github.com/repos/twitter/finagle/git/commits/83946db6d357d90508493c6b92b6e9dec8a28769,83946db6d357d90508493c6b92b6e9dec8a28769,"finagle-mux: Don't Scope MuxPush channel stats  to ""mux""

Summary: Problem / Solution

The channel stats that are not mux specific are accidentally being
lifted into the mux namespace.

JIRA Issues: CSL-5584

Differential Revision: https://phabricator.twitter.biz/D113477"
yufangong,2017-11-20 22:48:27,https://api.github.com/repos/twitter/finagle/git/commits/058e9adeee3e4f577e69b73702c66de145f9859e,058e9adeee3e4f577e69b73702c66de145f9859e,"finagle-thrift: Add .build in ThriftRichClient

Summary: Problem:

The .newIface[Iface] is not a good method name anymore for constructing a thrift
client with MethodPerEndpoint.

Solution:

Rename it to .build, and change the generic type name to ThriftService. Also
moved the new methods test for MultiplexedThriftClient to MultiplexedServiceTest
from scalaIntegrationTest.

Differential Revision: https://phabricator.twitter.biz/D113564"
dschobel,2017-11-20 21:52:18,https://api.github.com/repos/twitter/finagle/git/commits/4be99a48a2d6a26a601d47c1992b89ac34408015,4be99a48a2d6a26a601d47c1992b89ac34408015,"finagle-h2: fix more reference leaks

Summary: Problem / Solution

Reference leaks are bad. Let's not.

Differential Revision: https://phabricator.twitter.biz/D113109"
kevinoliver,2017-11-17 23:12:39,https://api.github.com/repos/twitter/finagle/git/commits/816f54a9b03efd1fd7f1f2c16419772c3f362631,816f54a9b03efd1fd7f1f2c16419772c3f362631,"finagle-mux,thriftmux: Remove protoTracing

Summary: Problem

The ""protoTracing"" `Stack.Role` is used by Mux and ThriftMux but not
adding value and thus wasting cycles.

Solution

Remove them.

JIRA Issues: csl-5575

Differential Revision: https://phabricator.twitter.biz/D113021"
kevinoliver,2017-11-17 22:33:57,https://api.github.com/repos/twitter/finagle/git/commits/53a2c8c54e6be0a3d82def27b35a03ee8f945820,53a2c8c54e6be0a3d82def27b35a03ee8f945820,"finagle-core: Optimize AnnotatingTracingFilter

Summary: Problem / Solution

The `respond` callback can be lifted into a `Function1` to reduce
allocations.

JIRA Issues: csl-5576

Differential Revision: https://phabricator.twitter.biz/D112988"
jcrossley,2017-11-17 21:20:40,https://api.github.com/repos/twitter/finagle/git/commits/9957757dc687e3e0f69c9e9b2bedfcef831fb6e4,9957757dc687e3e0f69c9e9b2bedfcef831fb6e4,"finagle-core: Configure Retries.Budget param in Retries.moduleRequeueable

Summary: Problem

Filters/factories lower than Retries in the stack may also
make use of the RetryBudget param. However, if this param is
not configured explicitly, the default is used, which creates
a new, unshared RetryBudget. It would be useful to have this
be a shared, per-client budget

Solution

When Retries.moduleRequeueable is materialized, add the RetryBudget
to the params passed to the next ServiceFactory Stackable, so that the budget
can be shared.

JIRA Issues: CSL-5535

Differential Revision: https://phabricator.twitter.biz/D111622"
dschobel,2017-11-17 19:43:08,https://api.github.com/repos/twitter/finagle/git/commits/779ab853e087669e4c1a68f3a2fd56f9881a1b1a,779ab853e087669e4c1a68f3a2fd56f9881a1b1a,"finagle-http2: fix reference leak in RstHandler

Summary: Problem

RstHandler swallows outbound messages but fails to release them.

Solution

Release them.

JIRA Issues: CSL-5494

Differential Revision: https://phabricator.twitter.biz/D112910"
stefanlance,2017-11-17 01:30:02,https://api.github.com/repos/twitter/finagle/git/commits/29fa93566b34c4c6531e1599c4782edff26a23f8,29fa93566b34c4c6531e1599c4782edff26a23f8,"finagle: Remove `NackAdmissionFilter` from protocols without Nack support

Summary: Problem

finagle-memcached, finagle-mysql, and finagle-redis clients do not support
Nacks, so the `NackAdmissionFilter` is unnecessary.

Solution

Remove `NackAdmissionFilter` from the default client stack. Explicitly
add it to the finagle-{http,mux,thriftmux} client stacks and do not add
it to the finagle-{memcached,mysql,redis} client stacks. Note that it is
added to finagle-http2 via finagle-http.

JIRA Issues: CSL-5516

Differential Revision: https://phabricator.twitter.biz/D111722"
kevinoliver,2017-11-17 01:01:55,https://api.github.com/repos/twitter/finagle/git/commits/5f4338e5055fd9c73d1091bc25f643e3b1f35bd6,5f4338e5055fd9c73d1091bc25f643e3b1f35bd6,"util/finagle: Optimize some frequently called methods

Summary: Problem / Solution

Future's combinators are generally pass throughs to `transform`
and `respond` and entail a `Function1` allocation in order to
conform to those interfaces. For frequently called code,
it can be worth trading the readability for the inlining.

JIRA Issues: CSL-5547

Differential Revision: https://phabricator.twitter.biz/D112284"
mosesn,2017-11-16 23:36:26,https://api.github.com/repos/twitter/finagle/git/commits/3086bd61f0402788a75792e85590b3a906ebb154,3086bd61f0402788a75792e85590b3a906ebb154,"csl: post-release mode oh yeah

Differential Revision: https://phabricator.twitter.biz/D112670"
ryanoneill,2017-11-16 21:53:50,https://api.github.com/repos/twitter/finagle/git/commits/dc36bb24a47f9552c57461a98260d5d782a60b64,dc36bb24a47f9552c57461a98260d5d782a60b64,"finagle-netty4: Make SimpleChannelSnooper Sharable

Summary: Problem

`SimpleChannelSnooper` can be useful for watching channel events when
debugging. Netty throws a `ChannelPipelineException` and complains that it
""is not a @Sharable handler, so can't be added or removed multiple times"".

Solution

Add the @Sharable annotation to `SimpleChannelSnooper`.

JIRA Issues: CSL-5559

Differential Revision: https://phabricator.twitter.biz/D112448"
cacoco,2017-11-16 21:46:28,https://api.github.com/repos/twitter/finagle/git/commits/076c3e24e5fb5295e734878ae64c28da857241e1,076c3e24e5fb5295e734878ae64c28da857241e1,"finagle-thriftmux: Reponse headers not being correctly returned on clients

Summary: Problem/Solution

The new `ReqRepServicePerEndpoint` functionality was not
correctly returning `scrooge.Response` headers in all
cases. Wire responses up properly and add more test cases
including using a standard `MethodPerEndpoint` client with
a `ReqRepServicePerEndpoint` server.

JIRA Issues: CSL-5557

Differential Revision: https://phabricator.twitter.biz/D112304"
yufangong,2017-11-16 18:53:35,https://api.github.com/repos/twitter/finagle/git/commits/3db31025e78c1c487f4d87c451ebca0ab2fa63a4,3db31025e78c1c487f4d87c451ebca0ab2fa63a4,"finagle-base-http: Replace apache commons-lang StringUtils.split.

Summary: Problem:

We only use apache commons-lang StringUtils.split and FastDateFormat in
finagle-base-http, it is possible to replace those.

Solution:

Replace StringUtils.split with our own.

JIRA Issues: CSL-5454

Differential Revision: https://phabricator.twitter.biz/D107122"
dschobel,2017-11-16 17:39:16,https://api.github.com/repos/twitter/finagle/git/commits/9870f09e26be26562b65c8c819cbea6a2582b773,9870f09e26be26562b65c8c819cbea6a2582b773,"finagle/scrooge/util: add dschobel to owners

Summary: add dschobel to OWNERS.

Differential Revision: https://phabricator.twitter.biz/D112350"
cacoco,2017-11-16 00:08:53,https://api.github.com/repos/twitter/finagle/git/commits/df5f10bd00b070809ea1f1995becc9bbac6c3089,df5f10bd00b070809ea1f1995becc9bbac6c3089,"finagle-thriftmux: Request/Response headers in ThriftMux

Summary: Problem

There is currently no way to pass information outside of the encoded
thrift RPC args and method response. For instance, a way to pass extra
data, e.g., ""headers"" bi-directionally would allow clients to send additional
data to servers and vice-versa that could be used for specifying
information orthogonal to the RPC method being called.

The Scrooge and Finagle frameworks would also like a way to evolve
by being able to explicitly exchange header information across clients and
servers.

Solution

Introduce `scrooge.Request` and `scrooge.Response` envelopes which
are used in `ReqRepServicePerEndpoint` interfaces and associated code.
The scrooge `Request` and `Response` allow for passing ""header"" information (via
ThriftMux Message contexts) between clients and servers. For instance, a
server can implement a `ReqRepServicePerEndpoint`, and set response headers
along with a method response, e.g.,

 ```
  class MyService extends MyService.ReqRepServicePerEndpoint {

    def foo: Service[Request[Foo.Args], Response[Foo.SuccessType]] = {
      Service.mk[Request[Foo.Args], Response[Foo.SuccessType]] { request: Request[Foo.Args] =>
        val result = ... // computations
        Future
          .value(
            Response(
              headers = Map(""myservice.foo.header"" -> Seq(Buf.Utf8(""value1""))),
              result)
      }
    }
  }
 ```

 This `ServicePerEndpoint` can then be served using `ThriftMux`:

 ```
  ThriftMux.server.serveIface("":9999"", new MyService().toThriftService)
 ```

  These response headers will be transported as `Mux#contexts` to the client. If
  the client is using the client-side `ReqRepServicePerEndpoint` it will be able
  to read the headers from the returned `Response` directly. E.g.,

 ```
  val client = ThriftMux.client.reqRepServicePerEndpoint[MyService.ReqRepServicePerEndpoint]

  val response: Response[Foo.SuccessType] = Await.result(client.foo(..))

  if (response.headers.contains(""myservice.foo.header"")) {
    ...
 ```

Result

Clients and servers can be generated in terms of a `ReqRepServicePerEndpoint`
such that clients may send `c.t.scrooge.Request` headers and read
`c.t.scrooge.Response` headers and that servers can send `c.t.scrooge.Response`
headers and read incoming `c.t.scrooge.Request` headers.

JIRA Issues: CSL-5286

Differential Revision: https://phabricator.twitter.biz/D107397"
bryce-anderson,2017-11-15 22:27:18,https://api.github.com/repos/twitter/finagle/git/commits/eb744c8d220772cd2ff3b5b897ccc2b7188ab449,eb744c8d220772cd2ff3b5b897ccc2b7188ab449,"finagle-mux: Add stream metrics to the push-mux implementations

Summary: Problem / Solution

When using fragmenting we'd like to have some observability into the
state of the encoder and decoder, so we add some metrics which are
equivalent to the standard mux implementation at the debug verbosity
level.

JIRA Issues: CSL-5544

Differential Revision: https://phabricator.twitter.biz/D111908"
mosesn,2017-11-15 22:05:21,https://api.github.com/repos/twitter/finagle/git/commits/0e856777363f378f7760ada021cca7a5774c92e2,0e856777363f378f7760ada021cca7a5774c92e2,"csl: Removed coursier to fix the build

Summary: Problem

There seems to be a bug with sbt 1.0.x, sbt-pgp, and coursier.
See https://github.com/coursier/coursier/issues/694

Solution

Stop using coursier to unblock publishing.

JIRA Issues: CSL-5520

Differential Revision: https://phabricator.twitter.biz/D112092"
yufangong,2017-11-15 20:25:04,https://api.github.com/repos/twitter/finagle/git/commits/3c568d5af101368a0c4352748b8e5cf53e4e9647,3c568d5af101368a0c4352748b8e5cf53e4e9647,"finagle-thrift: Add scaladoc for ThriftRichClient.servicePerEndpoint

Summary: Problem/Solution:

Add missing scaladoc for new servicePerEndpoint methods.

Differential Revision: https://phabricator.twitter.biz/D111955"
stefanlance,2017-11-15 19:38:20,https://api.github.com/repos/twitter/finagle/git/commits/988386e5ed9f3e6e0697d9dea346e5bc4ebc0dd9,988386e5ed9f3e6e0697d9dea346e5bc4ebc0dd9,"finagle-memcached: Use `transform` in `PartitioningService.apply`

Summary: Problem

`PartitioningService.apply` uses `map`, which results in an extra function
allocation on top of `transform`.

Solution

Replace `map` with `transform`.

JIRA Issues: CSL-5525

Differential Revision: https://phabricator.twitter.biz/D111736"
mosesn,2017-11-15 18:50:13,https://api.github.com/repos/twitter/finagle/git/commits/213242c1e789e1cef1bdaaaadb86e07a1177ad76,213242c1e789e1cef1bdaaaadb86e07a1177ad76,"twitter-oss: Prepare OSS libraries for release 17.11.0

Summary: Problem

We want to release the next versions of our Twitter OSS libraries 17.11.0
 - util
 - scrooge
 - finagle
 - twitter-server
 - finatra

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-5520

Differential Revision: https://phabricator.twitter.biz/D111937"
yufangong,2017-11-15 01:55:55,https://api.github.com/repos/twitter/finagle/git/commits/9d1ee1dec275e9f0a2c8a6b157e8860b53a510bb,9d1ee1dec275e9f0a2c8a6b157e8860b53a510bb,"scrooge: New names for some generated classes

Summary: Problem:

We want to make Scrooge generated classes have friendly names,

Solution:

Here is the list of old names to new names:
`FutureIface        ` -> `MethodPerEndpoint`,
`MethodIface        ` -> `MethodPerEndpoint.apply()`,
`MethodIfaceBuilder ` -> `MethodPerEndpointBuilder`,
`BaseServiceIface   ` -> `ServicePerEndpoint`,
`ServiceIface       ` -> `ServicePerEndpoint.ServicePerEndpointImpl`,
`ServiceIfaceBuilder` -> `ServicePerEndpointBuilder`.

JIRA Issues: CSL-5352, CSL-5267

Differential Revision: https://phabricator.twitter.biz/D105791"
dschobel,2017-11-14 22:11:35,https://api.github.com/repos/twitter/finagle/git/commits/1b1219313ff0064b86f81326da1c447d38df106d,1b1219313ff0064b86f81326da1c447d38df106d,"finagle-mux: turn down handshake log level

Summary: Problem / Solution

Info is overly noisy for an event that happens on each session so we turn it
down to debug.

JIRA Issues: CSL-5538

Differential Revision: https://phabricator.twitter.biz/D111476"
vkostyukov,2017-11-14 21:34:59,https://api.github.com/repos/twitter/finagle/git/commits/e17510ac3abc8c387a439f3ec976bb2ac0c0a4be,e17510ac3abc8c387a439f3ec976bb2ac0c0a4be,"finagle: Add toggle for LIFO continuations

Summary: We're adding a toggle so LIFO continuations can be rolled out smoothly.

JIRA Issues: CSL-5524

Differential Revision: https://phabricator.twitter.biz/D111175"
stefanlance,2017-11-14 19:26:12,https://api.github.com/repos/twitter/finagle/git/commits/b1098a8b2c03ef2741e8dc920bf0124daaa238da,b1098a8b2c03ef2741e8dc920bf0124daaa238da,"finagle-netty4: Don't use attributes to store per-channel stats

Summary: Problem

Our current `ChannelStatsHandler` implementation is a shareable Netty
ChannelHandler because we want to aggregate stats over a collection of channels.
However, some variables are channel-specific. Currently we use channel
attributes to store these but we could increase performance if these variables
were per-channel fields.

Solution

Move the `ChannelStatsHandler` variables to their own class,
`SharedChannelStats`, which is instantiated once per
`AbstractNetty4ClientChannelInitializer` instance. Also change
`ChannelStatsHandler` to be per-channel and use fields instead of channel
attributes.

JIRA Issues: CSL-4809

Differential Revision: https://phabricator.twitter.biz/D108259"
bryce-anderson,2017-11-13 16:32:33,https://api.github.com/repos/twitter/finagle/git/commits/6462bdee8ce99d5ffb01ebdd9aba6f41394e89ff,6462bdee8ce99d5ffb01ebdd9aba6f41394e89ff,"finagle-mux: Always run negotiation logic before building a session

Summary: Problem

Smux is implemented in the negotiation logic of the mux client and server,
but if a malicious peer doesn't attempt to negotiate it can circumvent
security for peers that have been configured to require it.

Solution

Always execute the handshake logic.

JIRA Issues: CSL-5417

Differential Revision: https://phabricator.twitter.biz/D107056"
mosesn,2017-11-10 19:45:33,https://api.github.com/repos/twitter/finagle/git/commits/759c463191ff93e18b03e4819c2bf844629ccdfe,759c463191ff93e18b03e4819c2bf844629ccdfe,"csl: Updated pushsites scripts for sbt 1.0.x

Summary: Problem / Solution

We need to switch to camelCase and away from kebab-case to get sbt 1.0.x
working.

JIRA Issues: CSL-5504

Differential Revision: https://phabricator.twitter.biz/D110255"
mosesn,2017-11-10 18:09:36,https://api.github.com/repos/twitter/finagle/git/commits/c8b8e79418aa6820188c4e06594968e205903a99,c8b8e79418aa6820188c4e06594968e205903a99,"finagle-http2: Stop re-decompressing responses in clients

Summary: Problem

We decompress headers in the http/1.1 layer, and we have a switch we can use to
enable or disable it.  That switch isn't being respected because we also
decompress in the http/2 layer.

Solution

Never decompress in the h2 layer.

JIRA Issues: CSL-5413

Differential Revision: https://phabricator.twitter.biz/D110243"
jimschubert,2017-11-09 21:25:15,https://api.github.com/repos/twitter/finagle/git/commits/d452f91db121cec8b34b900e89bfe68319a3f255,d452f91db121cec8b34b900e89bfe68319a3f255,"finagle: Enable propagation of 128-bit TraceID

Summary: Problem

Finagle currently only ""tolerates"" 128-bit TraceID by dropping the high 64-bits.

My target tracing system uses all 128-bit ids (trace, parent, and span)
generated from UUIDs, so support for propagating 128-bit TraceID is preferable.

Solution

Allows 128-bit TraceID to be consumed and propagated through the stack while
defaulting to generating 64-bit TraceIDs.

Result

Finagle tracing continues to also support 64-bit trace identifiers. The upper
64-bit of a 128-bit TraceID is included on the wire format as below:

Big Endian spanId:8 parentId:8 traceId:8 flags:8 (traceIdHigh:8)

Here if the upper 8 bytes are set, they're treated as the upper 64-bit part of a
TraceID.

Signed-off-by: Jillian Crossley <jillianc@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D106338"
roanta,2017-11-08 17:59:04,https://api.github.com/repos/twitter/finagle/git/commits/60ef1f4dfa59742616851ff47c2e1210fc2dc12b,60ef1f4dfa59742616851ff47c2e1210fc2dc12b,"finagle-core: fix usage of epsilon in Ring

Summary: Problem

We defined an epsilon in aperture's ring with the intent to detect
a range of zero when selecting indices in `pick2`. However, we never
normalized its usage which can be dangerous since it can detect
legitimate ranges for sufficiently large ring sizes.

Solution

Remove the usage of epsilon since we don't really need it and can
compare the edge cases directly in both `pick2` and `range`.

JIRA Issues: CSL-5433

Differential Revision: https://phabricator.twitter.biz/D104976"
kevinoliver,2017-11-07 23:45:22,https://api.github.com/repos/twitter/finagle/git/commits/cdf4aefa6c741d3671fde7b72ff86485ff0d812e,cdf4aefa6c741d3671fde7b72ff86485ff0d812e,"finagle-core: Remove empty package.scala

Summary: Problem / Solution

This package object was not adding any value.

JIRA Issues: csl-5455

Differential Revision: https://phabricator.twitter.biz/D108780"
cacoco,2017-11-07 21:26:59,https://api.github.com/repos/twitter/finagle/git/commits/e3799ec9ba24ce85f1f941996876355a5a18ab63,e3799ec9ba24ce85f1f941996876355a5a18ab63,"scrooge-generator: Change java generator to not output `org.slf4j` imports

Summary: Problem

The scrooge generator over specifies imports for java generation,
writing out `org.slf4j` imports which are mostly unused. Generated
services do create an slf4j Logger and log an error message of
questionable usefulness.

Solution

Until we fully move framework code over to the `slf4j-api`, remove the
`org.slf4j` imports and limited usage.

Note: This is a BREAKING API change.

Result

Less confusion around differing logging subsystems.

JIRA Issues: CSL-5462, CSL-5468

Differential Revision: https://phabricator.twitter.biz/D108113"
bryce-anderson,2017-11-07 17:28:54,https://api.github.com/repos/twitter/finagle/git/commits/ea5438067e4db78bf5177a1dcde67f19fa8c185b,ea5438067e4db78bf5177a1dcde67f19fa8c185b,"finagle-mux/finagle-thriftmux: Fail fast on invalid OppTls configuration

Summary: Problem

It's possible to create a mux/thriftmux client or server that has an
illegal opportunistic TLS configuration. Specifically, we can configure
that we want to do opportunistic TLS but don't actually add the security
configuration. This can potentially lead to negotiating TLS but never
upgrading the Netty pipeline, so we then try to interpret ciphertext as
cleartext data which fails at best, and can cause OOM errors at its
worst.

Solution

Fail to create a client of server with an invalid configuration.

JIRA Issues: CSL-5430

Differential Revision: https://phabricator.twitter.biz/D107280"
sullis,2017-11-07 00:35:40,https://api.github.com/repos/twitter/finagle/git/commits/80149d9b8836dae8f09d15a467116d7e6f367642,80149d9b8836dae8f09d15a467116d7e6f367642,"finagle: Upgrade sbt Scala version to 2.12.4

Summary: Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-5472

Differential Revision: https://phabricator.twitter.biz/D108345"
cacoco,2017-11-06 21:55:26,https://api.github.com/repos/twitter/finagle/git/commits/45832aad31aa33e9bddbe18c9e721e825617a159,45832aad31aa33e9bddbe18c9e721e825617a159,"finagle-mux: Correctly send mux.Request#contexts

Summary: Problem/Solution

There are some cases in which we are not dispatching
mux.Request#contexts. Wire those together properly.

JIRA Issues: CSL-5456

Differential Revision: https://phabricator.twitter.biz/D107921"
stefanlance,2017-11-06 20:17:30,https://api.github.com/repos/twitter/finagle/git/commits/95a8010e6bd237d4a7b9637e53ed8afc7483259f,95a8010e6bd237d4a7b9637e53ed8afc7483259f,"finagle, util: Add recommended reflectiveCalls imports

Summary: Problem

Compiling `c.t.util.ClosableTest` and
`c.t.finagle.zipkin.thrift.ScribeRawZipkinTracer` produces warnings
recommending importing `scala.language.reflectiveCalls`.

Solution

Import it.

JIRA Issues: CSL-5117

Differential Revision: https://phabricator.twitter.biz/D107781"
sullis,2017-11-06 18:14:37,https://api.github.com/repos/twitter/finagle/git/commits/753b721f2515b64c9a27894f21d592c4bd20f8e8,753b721f2515b64c9a27894f21d592c4bd20f8e8,"finagle: update sbt version 1.0.0 -> 1.0.3

Summary: Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-5465

Differential Revision: https://phabricator.twitter.biz/D108023"
brutkin,2017-11-02 22:50:57,https://api.github.com/repos/twitter/finagle/git/commits/3d292b49e737538babb387ae39e6ee9124a641ed,3d292b49e737538babb387ae39e6ee9124a641ed,"finagle-core: Add ResponseClassifiers for commonly retried exceptions

Summary: Problem/Solution:
Finagle provides a RetryPolicy for ClientBuilder with a set of commonly
retried exceptions but this cannot be used with MethodBuilder because it only
takes a ResponseClassifier. Add equivalent ResponseClassifiers for use in
MethodBuilder.

Differential Revision: https://phabricator.twitter.biz/D106706"
kevinoliver,2017-11-01 22:47:33,https://api.github.com/repos/twitter/finagle/git/commits/947884f5ad9119eb9f985c60607927cc7bcafeb2,947884f5ad9119eb9f985c60607927cc7bcafeb2,"finagle-exp: Fix race condition in LatencyHistogram

Summary: Problem

There is a race between `quantile` and data points aging out
of the tab's buckets. This can lead to `clipDuration`
being returned as the quantile.

Solution

Use a stamped lock to ensure that data points are consistent
during computation of `quantile`.

JIRA Issues: csl-5418

Differential Revision: https://phabricator.twitter.biz/D106330"
vkostyukov,2017-11-01 19:18:17,https://api.github.com/repos/twitter/finagle/git/commits/28a28fee1241a2571a60ebafad9aacb871737ed7,28a28fee1241a2571a60ebafad9aacb871737ed7,"finagle-http: Decouple Multipart decoding from N3

Summary: Problem

Finagle HTTP has been using Netty 3 primitives to decode multipart requests
on the server-side. This complicates the removal of the Netty 3 dependency.

Solution

Structure out decoding of multipart payloads into its own abstraction, `MultipartDecoder`.

This allows attaching a specific decoder at the moment of request creation. Right now, the
following approach is taken:

 - Attach either N3 or N4 decoder (based on current transport) to requests received from peers.
 - Attach N3 decoder to requests created locally.

JIRA Issues: CSL-3675

Differential Revision: https://phabricator.twitter.biz/D105000"
mosesn,2017-11-01 17:47:49,https://api.github.com/repos/twitter/finagle/git/commits/89456a9d170f86faf64ffec087b54e26759d6da6,89456a9d170f86faf64ffec087b54e26759d6da6,"csl: Migrate to sbt 1.0.0

Summary: Problem

There's a new version of sbt in town, and it's bigger and better.

Solution

Migrate to sbt 1.0.0

JIRA Issues: CSL-5003

Differential Revision: https://phabricator.twitter.biz/D101910"
roanta,2017-11-01 17:42:33,https://api.github.com/repos/twitter/finagle/git/commits/3c45c7e1655fbc07430a343b4bef3c49a0eb0669,3c45c7e1655fbc07430a343b4bef3c49a0eb0669,"finagle-core: use `P2CPick` interface for RandomAperture

Summary: Problem / Solution

We redefine the code in the general `P2CPick` mixin inside `RandomAperture`
when we could reuse it.

Differential Revision: https://phabricator.twitter.biz/D106103"
bryce-anderson,2017-11-01 16:32:27,https://api.github.com/repos/twitter/finagle/git/commits/bac292a9fe9e5e3475016863ab4c829babc018d6,bac292a9fe9e5e3475016863ab4c829babc018d6,"finagle-mux: push-mux client supports opportunistic TLS

Summary: Problem / Solution

Mux is getting support for opportunistic TLS, and the push-based
implementation needs to support it as well.

Notes:
Instead of adding a 'Context' that is propagated down into the
Transporter level, I opted to go with a simple/localized approach of
specializing the PushChannelHandle in the MuxPush object and
downcasting, also in that object. This has the advantage of being simple
and local but is not scalable. That said, we don't need to scale it yet,
and by being local we can easily expand it later. There are two
reasonable alternatives:
- Build the def context: Context into the push-based stack
- Propagate the Stack.Params through the push-based stack

Both of these were rejected since they are general solutions to a local
problem and both can be implemented later, if we need to expand this
idea.

JIRA Issues: CSL-5339

Differential Revision: https://phabricator.twitter.biz/D105634"
mosesn,2017-10-31 21:04:18,https://api.github.com/repos/twitter/finagle/git/commits/454761f89e86daf15e0beb32eda0e9fa6bd4916c,454761f89e86daf15e0beb32eda0e9fa6bd4916c,"finagle-netty4: Clients should only try to speak ALPN for now

Summary: Problem

NPN support in netty isn't robust enough to support web crawlers.  We should
disable NPN until it's robust enough.  See
https://github.com/netty/netty/issues/7346 for more details.

Solution

Disable NPN on the client-side for now.

JIRA Issues: CSL-5415

Differential Revision: https://phabricator.twitter.biz/D105701"
kevinoliver,2017-10-31 18:51:42,https://api.github.com/repos/twitter/finagle/git/commits/e87b894fa3dab4807594a96f1b1472afddc59831,e87b894fa3dab4807594a96f1b1472afddc59831,"finagle-core: Add a CanStackFrom version of Stack.prepend

Summary: Problem

The `CanStackFrom` sugar is handy and lets devs use a `Function1` to
create a `Stackable`.

Solution

Add `Stack.prepend` that takes an implicit `CanStackFrom`.

Result

A sweeter dev experience in time for Halloween.

JIRA Issues: csl-5439

Differential Revision: https://phabricator.twitter.biz/D106003"
kevinoliver,2017-10-31 18:10:27,https://api.github.com/repos/twitter/finagle/git/commits/77b3ec94613c082602580252fcc9c699154a4878,77b3ec94613c082602580252fcc9c699154a4878,"finagle-benchmark: Make sure the code compiles

Summary: Problem

This commit [1] broke a public API in Zk2Resolver's constructors.
For code with diamond dependencies this can cause problems.

Solution

This change use a constructor available in both implementations
to unblock developers.

[1] https://github.com/twitter/finagle/commit/a9bb335c78adbd2054b5fae7a0fc00b701a30c74

Differential Revision: https://phabricator.twitter.biz/D106064"
dschobel,2017-10-31 16:55:39,https://api.github.com/repos/twitter/finagle/git/commits/7c084011c03aaf0121e35734c29d5515e6acf0db,7c084011c03aaf0121e35734c29d5515e6acf0db,"finagle-mux: pre-encode ping responses

Summary: Problem / Solution

We can leverage mux's well-known ping tag to pre-encode and cache a ping response
thereby eliminating the response object allocation.

Differential Revision: https://phabricator.twitter.biz/D105844"
kevinoliver,2017-10-31 15:39:51,https://api.github.com/repos/twitter/finagle/git/commits/ecc06dc46c914662e1e3a05a29569c5abd1dace3,ecc06dc46c914662e1e3a05a29569c5abd1dace3,"finagle/docs: Add missing word in MethodBuilder

JIRA Issues: csl-5426

Differential Revision: https://phabricator.twitter.biz/D105915"
cacoco,2017-10-31 05:02:32,https://api.github.com/repos/twitter/finagle/git/commits/4e63590e72dee517cfed98eae99b9be65deb4c5d,4e63590e72dee517cfed98eae99b9be65deb4c5d,"finagle-core: Fix method name typo

Summary: Problem/Solution

""addToRegisty"" --> ""addToRegistry""

Differential Revision: https://phabricator.twitter.biz/D105909"
yozhao,2017-10-30 21:54:21,https://api.github.com/repos/twitter/finagle/git/commits/ac30be3a5aa68e25f8d0ee287fe6f692c2b0e14e,ac30be3a5aa68e25f8d0ee287fe6f692c2b0e14e,"finagle: Add XiaoMi to ADOPTERS.md

Summary: Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-5432

Differential Revision: https://phabricator.twitter.biz/D105736"
ryanoneill,2017-10-30 20:50:11,https://api.github.com/repos/twitter/finagle/git/commits/3ce475dbdb800a635bbed944139b9690418e09d9,3ce475dbdb800a635bbed944139b9690418e09d9,"finagle-netty4: Make Netty4Transporter and Netty4Listener Accessible

Summary: Problem / Solution

For external users attempting to extend Finagle running on Netty 4,
currently those users need to add code to the `com.twitter.finagle`
namespace due to the access levels of `Netty4Transporter` and
`Netty4Listener`. These entities should be made public instead so that
external users may develop protocols without this workaround.

JIRA Issues: CSL-5431

Differential Revision: https://phabricator.twitter.biz/D105627"
ryanoneill,2017-10-30 19:05:55,https://api.github.com/repos/twitter/finagle/git/commits/8120f7b1252b811cea7b2b0e02a4eb539739d0df,8120f7b1252b811cea7b2b0e02a4eb539739d0df,"util-security: Make Ability to Read PrivateKey Files Public

Summary: Problem / Solution

Currently, the reading of a PKCS#8 PEM formatted `PrivateKey` file is
contained within finagle-netty4. This code is useful outside of its
current context and thus should be made publicly accessible. Move the
code to `PrivateKeyFile` in util-security.

JIRA Issues: CSL-5427

Differential Revision: https://phabricator.twitter.biz/D105266"
mosesn,2017-10-27 22:00:59,https://api.github.com/repos/twitter/finagle/git/commits/fe4e9564ee682a376bedb713a09b0f11faba1a33,fe4e9564ee682a376bedb713a09b0f11faba1a33,"finagle: Fixed some typos

Differential Revision: https://phabricator.twitter.biz/D105103"
bryce-anderson,2017-10-26 20:33:52,https://api.github.com/repos/twitter/finagle/git/commits/731046c2eed5a128d4dd1cf2c43ab8b1c6d5b824,731046c2eed5a128d4dd1cf2c43ab8b1c6d5b824,"finagle-core: Fix race in ProcessCoordinate

Summary: Problem

We use a Witness to update the AtomicReference that holds the result of
the `ProcessCoordinate.apply()` function, but that can race with
listeners of the `ProcessCoorindate.changes` Event who are using the
result of `.apply()`, such as Aperture.

Solution

Set the atomic reference directly in the ProcessCoordinate
`setCoordinate` and `unsetCoordinate` functions before notifying the
Event.

JIRA Issues: CSL-5334

Differential Revision: https://phabricator.twitter.biz/D104465"
vkostyukov,2017-10-26 01:37:11,https://api.github.com/repos/twitter/finagle/git/commits/bc43d56a766c13905f9411ca932683f8ea67d97d,bc43d56a766c13905f9411ca932683f8ea67d97d,"finagle: Remove both N3 and N3 HeaderMaps

Summary: Problem / Solution

There is no need to keep N3 and N4 header maps (and their tests) around,
they aren't used in Finagle.

As a bonus, this change renames `MapHeaderMap` to `DefaultHeaderMap`.

JIRA Issues: CSL-5310

Differential Revision: https://phabricator.twitter.biz/D97346"
vkostyukov,2017-10-25 22:09:49,https://api.github.com/repos/twitter/finagle/git/commits/199dc51cfcf573349fe436d7eaf594a857667657,199dc51cfcf573349fe436d7eaf594a857667657,"finagle-http: Use MapHeaderMap as a default HeaderMap implementation

Summary: Problem / Solution

Finagle HTTP doesn't have to use Netty 3 `HeaderMap`. Its own implementation
provides the same features along with comparable performance.

JIRA Issues: CSL-5318

TBR=true

Differential Revision: https://phabricator.twitter.biz/D99127"
ryanoneill,2017-10-25 21:25:50,https://api.github.com/repos/twitter/finagle/git/commits/6b822e94e309f0946ace6586095a511d47fa152b,6b822e94e309f0946ace6586095a511d47fa152b,"finagle-netty4: TrustManager.Insecure Works with Native Engines

Summary: Problem

Specifying `TrustManager.Insecure` forces the underlying `SslProvider`
to be set to use the JDK version for the Netty 4 engine factories. At
the time it was written, the provider was forced due to a restriction
within Netty, which no longer exists.

Solution

Remove the forcing of the JDK `SslProvider` when `TrustManager.Insecure`
is specified.

Result

`tlsWithoutValidation` can be used with native engines, and for
protocols like HTTP/2 that require a native engine at this time.

JIRA Issues: CSL-5406

Differential Revision: https://phabricator.twitter.biz/D103766"
roanta,2017-10-25 21:09:17,https://api.github.com/repos/twitter/finagle/git/commits/102dbcc5c4eda75780beaf86a96f0b3db3af2118,102dbcc5c4eda75780beaf86a96f0b3db3af2118,"finagle-core: fix race in RandomAperture.pick

Summary: Problem / Solution

It's possible for the value of `aperture` to change across calls within
`pick` so we need to take a snapshot at the start.

JIRA Issues: CSL-5411

Differential Revision: https://phabricator.twitter.biz/D104049"
roanta,2017-10-24 22:37:10,https://api.github.com/repos/twitter/finagle/git/commits/8c529096f401e1d4c2a4ff23771b10f6a5806e37,8c529096f401e1d4c2a4ff23771b10f6a5806e37,"finagle-core: log more in Aperture

Summary: Problem / Solution

It's useful to log data which we can't export via stats so we beef up
the logging in Aperture to do so.

Differential Revision: https://phabricator.twitter.biz/D103121"
roanta,2017-10-23 21:48:01,https://api.github.com/repos/twitter/finagle/git/commits/154a079a0aa47ce4ab77e87f6d3be22e0fa05bf2,154a079a0aa47ce4ab77e87f6d3be22e0fa05bf2,"finagle-core: add num_weight_classes gauge to traffic distributor

Summary: Problem / Solution

It would be useful to know the number of weight classes in the traffic
distributor so we add a gauge.

Differential Revision: https://phabricator.twitter.biz/D102553"
mosesn,2017-10-23 20:00:05,https://api.github.com/repos/twitter/finagle/git/commits/e910537bcb01f22d6c7861a00810c184f47139cb,e910537bcb01f22d6c7861a00810c184f47139cb,"finagle-http: Split the http/2 toggle into cleartext and encrypted

Summary: Problem

Our h2c implementation is more stable than our h2 implementation, so we want to
be able to roll them forward separately.

Solution

Split the toggle into and h2 and an h2c one.

JIRA Issues: CSL-5391

Differential Revision: https://phabricator.twitter.biz/D102373"
yufangong,2017-10-23 19:08:54,https://api.github.com/repos/twitter/finagle/git/commits/088bff5f289b2d969cecd2168cc8fb1a50aacd2d,088bff5f289b2d969cecd2168cc8fb1a50aacd2d,"scrooge: Re-enable per-endpoint StatsFilter and ResponseClassification

Summary: Problem:

Per-endpoint statsFilter was sitting before serdeFilter so it was missing some
exceptions.

Solution:

Move statsFilter to the outermost so that it can capture all exceptions happened
in server service. Per-endpoint ResponseClassifier falls in statsfilter.

JIRA Issues: CSL-5347

Differential Revision: https://phabricator.twitter.biz/D100649"
kevinoliver,2017-10-23 16:42:40,https://api.github.com/repos/twitter/finagle/git/commits/9925204ad6c3717f08584cfd37fe9c5cdd154dd9,9925204ad6c3717f08584cfd37fe9c5cdd154dd9,"finagle MethodBuilder: Add logging of unsuccessful requests

Summary: Problem

When there are failures on specific methods, it is difficult for
service owners to know what the cause of them are as failure counters
are not kept in order to keep the metrics to a minimum.

Solution

Add a new Filter that logs unsuccessful results at debug level.

Result

Service owners have better tools to investigate the cause of problems.

JIRA Issues: csl-5182

Differential Revision: https://phabricator.twitter.biz/D102152"
kevinoliver,2017-10-20 23:27:30,https://api.github.com/repos/twitter/finagle/git/commits/7b0a1ace0a8100522e8434da11947c5893bdc8e9,7b0a1ace0a8100522e8434da11947c5893bdc8e9,"finagle-zipkin-core: Endpoint should protect against unresolved addresses

Summary: Problem / Solution

It is possible to pass an unresolved `InetSocketAddress` into
`Endpoint.fromSocketAddress` and this leads to a NullPointerException.
Now the code protects against this case and returns `0` for the ipv4.

JIRA Issues: csl-5395

Differential Revision: https://phabricator.twitter.biz/D102518"
jcrossley,2017-10-19 17:49:32,https://api.github.com/repos/twitter/finagle/git/commits/34a323d0771c4b1e0ad07786aab8a5b1b558d024,34a323d0771c4b1e0ad07786aab8a5b1b558d024,"finagle/finagle-mux: Add timeout to `Thread.join` call in AbstractEndToEndTest

Summary: Problem / Solution

If the server thread in AbstractEndToEndTest does not die,
we could end up waiting forever in `Thread.join`. Add a timeout.

Differential Revision: https://phabricator.twitter.biz/D101678"
mosesn,2017-10-19 16:43:37,https://api.github.com/repos/twitter/finagle/git/commits/926f733b339c102b9326651debbcd3d535866cfd,926f733b339c102b9326651debbcd3d535866cfd,"finagle-mux: Longer timeout in SmuxTest

Summary: Problem / Solution

SmuxTest had a couple of errors in CI from not having a long enough timeout.

JIRA Issues: CSL-5364

Differential Revision: https://phabricator.twitter.biz/D101438"
roanta,2017-10-18 22:55:38,https://api.github.com/repos/twitter/finagle/git/commits/9e3fe4a2f330ff13a3625a16a80f52ed8433b5f8,9e3fe4a2f330ff13a3625a16a80f52ed8433b5f8,"finagle-core: remove status-order from d-aperture

Summary: Problem

Ordering the incoming vector by status for d-aperture can have adverse effects
since it can create an inconsistent view of the world for semi-transient
periods. We have observed this in larger production services where instances
can enter a bad state and take time to be removed from the active server set.

Solution

Remove status-order from d-aperture since it doesn't add value. Even if we want
to swap out the aperture entirely in certain scenarios, the current implementation
doesn't work across all nodes (i.e. the tail of the vector will be the current aperture
for a node).

Differential Revision: https://phabricator.twitter.biz/D100500"
bryce-anderson,2017-10-18 20:38:02,https://api.github.com/repos/twitter/finagle/git/commits/9dad89963ef664bfd76d40212c63fcb7cdfcd9bd,9dad89963ef664bfd76d40212c63fcb7cdfcd9bd,"finagle-core: Metrics for assessing consistency of peerset and serversets

Summary: Problem

We don't have a good handle as to whether our load balancers are getting
consistent views of the serverset and we don't know if all clients think
they are in the same peerset.

Solution

Add a gauge that tracks a hash of the serverset and a guage that tracks
the size of the peerset.

JIRA Issues: CSL-5380

Differential Revision: https://phabricator.twitter.biz/D101365"
bryce-anderson,2017-10-18 19:10:49,https://api.github.com/repos/twitter/finagle/git/commits/9edcab0227ab177fe11f64ce1eadcec2d15a36d0,9edcab0227ab177fe11f64ce1eadcec2d15a36d0,"finagle-netty4: ConnectionBuilder guards against closed channels

Summary: Problem / Solution

The ChannelFutureListener added to the Netty connect ChannelFuture can
be executed when the channel is already closed which could lead to
building a pipeline around a channel that no longer will be emitting
events.

JIRA Issues: CSL-5302

Differential Revision: https://phabricator.twitter.biz/D96519"
jcrossley,2017-10-17 20:07:25,https://api.github.com/repos/twitter/finagle/git/commits/b82c02be5b507ccd65eae603217fc800c7810d76,b82c02be5b507ccd65eae603217fc800c7810d76,"finagle-mux: Ensure the range passed to `Gen.choose` is always positive

Summary: Problem

If `start` >= max - min, the range passed to Gen.choose for  `end`
could be negative, which causes the cryptic
""java.lang.InternalError: Malformed class name"" error.

Solution

Set the bounds appropriately so the range passed to `Gen.choose`
for `end` is always positive.

JIRA Issues: CSL-5357

Differential Revision: https://phabricator.twitter.biz/D100912"
kevinoliver,2017-10-17 18:04:50,https://api.github.com/repos/twitter/finagle/git/commits/3a8218f1718fd53ced1b89abe48fdd3bf0965244,3a8218f1718fd53ced1b89abe48fdd3bf0965244,"finagle-thrift: Split rich.scala into a file per object

Summary: Problem / Solution

rich.scala has 3 separate entities in it: ThriftUtil,
ThriftRichClient, and ThriftRichServer. Each of these is deserving of
its own file.

JIRA Issues: csl-5346

Differential Revision: https://phabricator.twitter.biz/D100715"
mosesn,2017-10-17 17:38:21,https://api.github.com/repos/twitter/finagle/git/commits/71ad8f23b5b236799a1beec136f27c3762bb9366,71ad8f23b5b236799a1beec136f27c3762bb9366,"finagle-core: Marked part of TrafficDistributorTest as flaky

Summary: Problem / Solution

`TrafficDistributorTest#increment weights on a shard` is flaky, so we should
mark it flaky.

JIRA Issues: CSL-5316

Differential Revision: https://phabricator.twitter.biz/D100868"
bryce-anderson,2017-10-17 15:27:29,https://api.github.com/repos/twitter/finagle/git/commits/5f458f354c6c7a5a7e03569703135c2cf1a020d0,5f458f354c6c7a5a7e03569703135c2cf1a020d0,"finagle-thriftmux: Add toggled-off push-based client muxer

Summary: Problem / Solution

We need to pipe in the push-based mux client to the thriftmux client in
order to use it, so do so behind a toggle.

JIRA Issues: CSL-5228

Differential Revision: https://phabricator.twitter.biz/D99397"
jcrossley,2017-10-17 04:56:40,https://api.github.com/repos/twitter/finagle/git/commits/e384a7140c4072088e06986f8ad7d8e804cdebe1,e384a7140c4072088e06986f8ad7d8e804cdebe1,"finagle-stats: Underlying metrics maps are shared by default

Summary: Problem

The underlying metrics maps (stats, gauges, counters) are not shared
across Metrics instances. This means that when there are multiple
stats receivers, counters and stats (which are created per-registry)
are created twice.

Solution

Make metrics maps shared by default, and add a function, `createDetached`,
to Metrics, which uses new maps. This restores the behavior prior to
D73497, which removed the ability to created ""detached"" Metrics and
switched all usages to be undetached.

JIRA Issues: CSL-5343

Differential Revision: https://phabricator.twitter.biz/D99005"
bryce-anderson,2017-10-16 18:55:59,https://api.github.com/repos/twitter/finagle/git/commits/a5d34cc0043a30a17666172a04c7b6615762ad61,a5d34cc0043a30a17666172a04c7b6615762ad61,"finagle-core: Implement PushStackServer

Summary: Problem / Solution

To make push-based StackServer instances, we could really use an analog
to StdStackServer which deals in push-based abstractions.

JIRA Issues: CSL-5283

Differential Revision: https://phabricator.twitter.biz/D98102"
bryce-anderson,2017-10-16 18:11:56,https://api.github.com/repos/twitter/finagle/git/commits/1c31e3848e337f3bc5b8bfd687daadffc64dbb94,1c31e3848e337f3bc5b8bfd687daadffc64dbb94,"finagle-mux: Remove lease gauge and make leaseCounter debug

Summary: Problem / Solution

The lease gauge will end up being summed among the different client
instances making it useless at best, and confusing in the common case.
Additionally, the mux client sessions `leaseCounter` was set as a
debug level metric since we don't actually send leases at this time.

JIRA Issues: CSL-5247

Differential Revision: https://phabricator.twitter.biz/D100357"
doismellburning,2017-10-13 20:39:09,https://api.github.com/repos/twitter/finagle/git/commits/ade45cf58451f6e372665ac27476d50c5c5d34c9,ade45cf58451f6e372665ac27476d50c5c5d34c9,"finagle-doc: GitHub not Github

Summary: Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D100023"
vkostyukov,2017-10-11 22:35:35,https://api.github.com/repos/twitter/finagle/git/commits/198aeb3abe1c2025e7387aa9823b39bdd6caf2d5,198aeb3abe1c2025e7387aa9823b39bdd6caf2d5,"finagle-http: Make MapHeaderMap N3-alike

Summary: Problem

`MapHeaderMap` and Netty 3 header maps have different behavior when being
misused (i.e., used as thread-safe structures while they are not).

Solution

By using a very similar to Netty 3 internal representation in `MapHeaderMap`, we
make them behaving similarly under good and bad use cases.

As a bonus, this change also improves the performance of `MapHeaderMap`: it's
now cheaper to `add` and `iterate` on `MapHeaderMap`.

JIRA Issues: CSL-5318

Differential Revision: https://phabricator.twitter.biz/D98148"
mosesn,2017-10-11 16:53:32,https://api.github.com/repos/twitter/finagle/git/commits/bb01393fc2a41a34e7ff92e1e7dc24bcadbef954,bb01393fc2a41a34e7ff92e1e7dc24bcadbef954,"finagle: Update the netty version to 4.1.16.Final

Summary: Problem

4.1.16.Final fixes several issues around http/2 that we want to pick up, as it
uses a new architecture for the new http/2 api.

Solution

Upgrade to 4.1.16.Final, patching around issues in netty.

JIRA Issues: CSL-5130, CSL-5202

Differential Revision: https://phabricator.twitter.biz/D98069"
roanta,2017-10-10 23:26:44,https://api.github.com/repos/twitter/finagle/git/commits/078659b58f7b9267a387925666c900c778b8a05b,078659b58f7b9267a387925666c900c778b8a05b,"finagle-core: more granular scope of aperture logging

Summary: Problem / Solution

For instances with a large amount of clients which large cluster sizes,
logging the entire endpoint set isn't practical. Instead we move such logging
to `trace`.

Differential Revision: https://phabricator.twitter.biz/D98652"
yufangong,2017-10-09 23:23:20,https://api.github.com/repos/twitter/finagle/git/commits/bac25dc5aa4486cd77a56d3799a8f4daf0bbbf69,bac25dc5aa4486cd77a56d3799a8f4daf0bbbf69,"scrooge: Enable per-endpoint StatsFilter and ResponseClassifier

Summary: Problem:

Per-endpoint statsFilter was sitting before serdeFilter so it was missing some
exceptions.

Solution:

Move statsFilter to the outermost so that it can capture all exceptions happened
in server service. Per-endpoint ResponseClassifier falls in statsfilter.

JIRA Issues: CSL-4878

Differential Revision: https://phabricator.twitter.biz/D92065"
bryce-anderson,2017-10-09 17:24:18,https://api.github.com/repos/twitter/finagle/git/commits/9629c9a70bc405420e12e5c9f03c1fe400f25d5f,9629c9a70bc405420e12e5c9f03c1fe400f25d5f,"finagle-core: Log more data in Aperture

Summary: Problem / Solution

We only log (at level DEBUG) the clients own slice of the aperture, but
in order to debug consistency problems between clients we need to know
what the entire vector of endpoints looks like.

JIRA Issues: CSL-5315

Differential Revision: https://phabricator.twitter.biz/D97662"
bryce-anderson,2017-10-09 15:14:17,https://api.github.com/repos/twitter/finagle/git/commits/15bafae83a8c4f138be6538a6dc1abd6e226f0fc,15bafae83a8c4f138be6538a6dc1abd6e226f0fc,"finagle-netty4: Netty4PushChannelHandle swallows ChannelClosedExceptions

Summary: Problem

In the Netty4PushChannelHandle we are propagating exceptions through the
Throw channel of the onClose Future, which is different from how the
ChannelTransport does it, which is via the Return(Throwable) pathway.
This can lead to exceptions bubbling up that had otherwise been
swallowed when using client or server implementations build using the
Transport+Dispatcher model.

Solution

Swallow all pipeline exceptions since they should have been logged the
ChannelExceptionHandler and have little-to-no remaining value.

JIRA Issues: CSL-5303

Differential Revision: https://phabricator.twitter.biz/D96665"
bryce-anderson,2017-10-06 20:13:41,https://api.github.com/repos/twitter/finagle/git/commits/7dc790977f69f0a416b2825c7883a28067c88415,7dc790977f69f0a416b2825c7883a28067c88415,"Revert ""finagle-http: Use MapHeaderMap as a default HeaderMap implementation""

Summary: This reverts Phab D92445.

JIRA Issues: CSL-5314

TBR=true

NO-QUEUE=true

Differential Revision: https://phabricator.twitter.biz/D97570"
yufangong,2017-10-06 19:41:03,https://api.github.com/repos/twitter/finagle/git/commits/0d29d849d8eed0968a7fd0d1488beff013301793,0d29d849d8eed0968a7fd0d1488beff013301793,"finagle-thrift: move RichParam from c.t.f to c.t.f.thrift

Summary: Problem/Solution:

`RichClientParam` and `RichServerParam` should be in in
`com.twitter.finagle.thrift` package instead of `com.twitter.finagle"".

JIRA Issues: CSL-5305

TBR=true

Differential Revision: https://phabricator.twitter.biz/D97196"
dotordogh,2017-10-06 06:25:39,https://api.github.com/repos/twitter/finagle/git/commits/ab4e351dea282a59b9708ad71d2cbb6535dafbab,ab4e351dea282a59b9708ad71d2cbb6535dafbab,"[scala-strict-deps] Remove strict_deps=True for all remaining targets in source

Summary: This is an automated change. We’re not expecting you to review the individual changes to the BUILD files you own, but we want you to be aware that they are happening.

This patch removes strict_deps=True for the remaining targets in Source because it is enabled by default globally.

The script only removes the explicit setting of `strict_deps=True` in BUILD files, and does not change any other aspect of the build file. For more information about strict_deps, please refer to http://go/strict-deps.

Strict deps restricts what is on the compile classpath to improve compile times. This means you spend less time waiting for your builds. However, with this change, you need to remember that transitive dependencies don't work so if you need something to compile code, you need to add it directly to your dependencies.

TBR=true

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D97364"
vkostyukov,2017-10-05 23:53:18,https://api.github.com/repos/twitter/finagle/git/commits/85ef77d90b16e5eed6cd9bfc27f849ee4fbf6a7e,85ef77d90b16e5eed6cd9bfc27f849ee4fbf6a7e,"finagle-http: Use MapHeaderMap as a default HeaderMap implementation

Summary: Problem / Solution

Finagle HTTP doesn't have to use Netty 3 `HeaderMap`. It's own
implementation provides the same features along with comparable
performance.

JIRA Issues: CSL-5070

Differential Revision: https://phabricator.twitter.biz/D92445"
vkostyukov,2017-10-05 19:47:07,https://api.github.com/repos/twitter/finagle/git/commits/68b19bf13b5b7b1877a84455912fac72dce44c21,68b19bf13b5b7b1877a84455912fac72dce44c21,"Revert ""finagle-http: Use Java HashMap as MapHeaderMap""

Summary: This reverts PHAB_ID=D96679

Differential Revision: https://phabricator.twitter.biz/D96976"
mosesn,2017-10-05 18:29:09,https://api.github.com/repos/twitter/finagle/git/commits/7771cd14f1efb699a37fd7eb6684d8acee7250ee,7771cd14f1efb699a37fd7eb6684d8acee7250ee,"finagle-mux: Added metrics to TLS upgrade

Summary: Problem

It's difficult to tell if clients or servers are upgrading successfully to TLS.

Solution

Add a debug log line and a metric when we successfully upgrade.

JIRA Issues: CSL-5240

Differential Revision: https://phabricator.twitter.biz/D96579"
dschobel,2017-10-05 16:38:18,https://api.github.com/repos/twitter/finagle/git/commits/405e16bb89a01ac615ef3d2a2a2f1be89c121cda,405e16bb89a01ac615ef3d2a2a2f1be89c121cda,"twitter-server: serve everything but ping + healthcheck out of non-global threadpool

Summary: Problem

There's risk in serving admin endpoints out of the global Finagle worker pool as any
blocking work can impede the server's ability to serve actual traffic.

Solution

Serve everything but ping + lifecycle endpoints (healthcheck, etc) out of a
separate thread pool.

JIRA Issues: CSL-5150

Differential Revision: https://phabricator.twitter.biz/D96633"
dotordogh,2017-10-05 07:05:51,https://api.github.com/repos/twitter/finagle/git/commits/8aeaf1581c9eebe268de47bfda669699fb4973a1,8aeaf1581c9eebe268de47bfda669699fb4973a1,"[scala-strict-deps] Remove strict_deps=True for targets between featureswitches/featureswitches-dashboard/src/main/scala/com/twitter/featureswitches/dashboard/controllers/BUILD and itbi...

Summary: ...-ea/scalding/src/main/scala/com/twitter/itbi/sc_users_userroles/BUILD

This is an automated change. We’re not expecting you to review the individual changes to the BUILD files you own, but we want you to be aware that they are happening.

This patch removes strict_deps=True for a partition of the Scala targets in Source because it is enabled by default globally. The changes were generated by a script locally that is very similar to the CI job, https://ci.twitter.biz/job/enable_strict_deps_scala that initially enabled strict_deps.

The script only removes the explicit setting of `strict_deps=True` in BUILD files, and does not change any other aspect of the build file. For more information about strict_deps, please refer to the [[http://go/strict-deps-scala-rollout | Strict Deps Implementation]] doc.

Strict deps restricts what is on the compile classpath to improve compile times. This means you spend less time waiting for your builds. However, with this change, you need to remember that transitive dependencies don't work so if you need something to compile code, you need to add it directly to your dependencies.

The targets affected are Scala targets with strict_deps enabled and names between
  - featureswitches/featureswitches-dashboard/src/main/scala/com/twitter/featureswitches/dashboard/controllers/BUILD
  - itbi-ea/scalding/src/main/scala/com/twitter/itbi/sc_users_userroles/BUILD

TBR=true

Differential Revision: https://phabricator.twitter.biz/D96896"
mosesn,2017-10-04 23:16:04,https://api.github.com/repos/twitter/finagle/git/commits/9c69a0f16cd1e4bffb6a40844c2c8fed619c6bec,9c69a0f16cd1e4bffb6a40844c2c8fed619c6bec,"finagle-http2: Provide a default for MaxHeaderListSize

Summary: Problem

Netty doesn't behave well when we don't set a default for MaxHeaderListSize

Solution

Set a default

JIRA Issues: CSL-5223

Differential Revision: https://phabricator.twitter.biz/D92859"
vkostyukov,2017-10-04 22:52:48,https://api.github.com/repos/twitter/finagle/git/commits/fd34d5cd8c552e55ec2c1179437f99f3d4eba94b,fd34d5cd8c552e55ec2c1179437f99f3d4eba94b,"finagle-http: Use Java HashMap as MapHeaderMap

Summary: Problem

`MapHeaderMap` is slightly more expensive to create than `Netty3HeaderMap`.

Solution

Java's `HashMap` is cheaper to create than Scala's `HashMap`. Given we don't
rely on any Scala-only map operations, we can easily replace an underlying map
implementation, thereby reduce the gap between us and N3.

Result

`MapHeaderMap` is now 6x cheaper to instantiate (2x fewer allocations).

JIRA Issues: CSL-5070

Differential Revision: https://phabricator.twitter.biz/D96679"
bryce-anderson,2017-10-04 15:35:15,https://api.github.com/repos/twitter/finagle/git/commits/b2d528ee10eca9d29e193c37a471269e629d1ef5,b2d528ee10eca9d29e193c37a471269e629d1ef5,"finagle-netty4: Introduce Netty4PushListener

Summary: Problem / Solution

If we want to make a push-based server we need an implementation of the
PushListener.

JIRA Issues: CSL-5055

Differential Revision: https://phabricator.twitter.biz/D95302"
bryce-anderson,2017-10-04 15:32:31,https://api.github.com/repos/twitter/finagle/git/commits/a31c8b01ae9bb529ab8e3ddc57501e4177a5f2b7,a31c8b01ae9bb529ab8e3ddc57501e4177a5f2b7,"fingle-netty4: Fix race in Netty4PushChannelHandle

Summary: Problem

When Netty4 sets a channel to inactive, it removes all handlers from the
pipeline. This can race with the `DelayStage.installSessionDriver` method
which tries to remove the DelayStage, but ends up throwing a
NoSuchElementException and subsequently fails to update a Promise,
resulting in a TimeoutException.

Solution

Check if the DelayStage has been removed from the pipeline before
attempting to continue.

JIRA Issues: CSL-5287

Differential Revision: https://phabricator.twitter.biz/D95726"
kevinoliver,2017-10-03 19:04:32,https://api.github.com/repos/twitter/finagle/git/commits/48b870305059947dd34f7d4c05aa29954d9b4271,48b870305059947dd34f7d4c05aa29954d9b4271,"finagle-stats: Move JSONExporter work to a FuturePool

Summary: Problem

If a service has a large number of metrics, and their admin
server is using the same threads as the application, this service
can cause implicit blocking of the event loop.

Solution

Move the work to a `FuturePool`.

JIRA Issues: csl-5300

Differential Revision: https://phabricator.twitter.biz/D95950"
bryce-anderson,2017-10-03 15:21:37,https://api.github.com/repos/twitter/finagle/git/commits/f849ad30f1b8e148ba1cd1c8eea758a6bc4ce3e6,f849ad30f1b8e148ba1cd1c8eea758a6bc4ce3e6,"finagle-mysql: Split Row.scala into separate files and remove unused method params

Summary: Problem / Solution

Row.scala contains the trait definition as well as the private class
implementations. Additionally, the private methods
TimestampValue.fromString and TimestampValue.fromBytes take
unused/unnecessary TimeZone parameters which have been removed.

Differential Revision: https://phabricator.twitter.biz/D95750"
kevinoliver,2017-10-03 00:40:30,https://api.github.com/repos/twitter/finagle/git/commits/240b04ebc9f7b97d92368cdb70937f1c116ee769,240b04ebc9f7b97d92368cdb70937f1c116ee769,"util/finagle: Rewrite `Future.onSuccess` as `Future.respond`

Summary: Problem

`Future.onSuccess` is written in terms of `Future.respond` and code
that calls `onSuccess` then has an allocation of an additional
`Function1` to adapt to the `respond` API.

Solution

Use an experimental scalafix [1] rewrite rule to do the initial
rewrite from `onSuccess` to `respond`.

Result

Less allocations in util and finagle.

[1] https://github.com/scalacenter/scalafix

JIRA Issues: csl-5258

Differential Revision: https://phabricator.twitter.biz/D95553"
ity,2017-10-02 17:21:05,https://api.github.com/repos/twitter/finagle/git/commits/a4595a9266aa7ae489bf628ba1a85ca3caec165c,a4595a9266aa7ae489bf628ba1a85ca3caec165c,"Upgrade Pants in Source to the latest release (1.4.0.dev8)

JIRA Issues: DPB-8967

TBR=true

Differential Revision: https://phabricator.twitter.biz/D81667"
bryce-anderson,2017-10-02 16:47:00,https://api.github.com/repos/twitter/finagle/git/commits/f57b9a2e9a2a99a5d0f0d00844dfedef281c8d54,f57b9a2e9a2a99a5d0f0d00844dfedef281c8d54,"finagle-core: Break apart StackClient and StackServer.scala files

Summary: Problem / Solution

StackClient.scala and StackServer.scala both contain numerous type
definitions and it would be easier to read/search if we move these types
into their own files.

JIRA Issues: CSL-5281

Differential Revision: https://phabricator.twitter.biz/D95236"
bryce-anderson,2017-10-02 15:28:37,https://api.github.com/repos/twitter/finagle/git/commits/256e3211d3f5bf5e03504b03c1b9c11d68b6efe7,256e3211d3f5bf5e03504b03c1b9c11d68b6efe7,"finagle-core: Break apart Service.scala file

Summary: Problem / Solution

The Service.scala file defines the following 7 types:
Service, ServiceProxy, ClientConnection, FactoryToService,
ServiceFactory, ServiceFactoryProxy, and finally ServiceFactoryWrapper.

JIRA Issues: CSL-5278

Differential Revision: https://phabricator.twitter.biz/D95183"
bryce-anderson,2017-10-02 15:25:39,https://api.github.com/repos/twitter/finagle/git/commits/f4df7b9f20f5a24f00007214171cee7b69b8d0a5,f4df7b9f20f5a24f00007214171cee7b69b8d0a5,"finagle-mux: Add handshaking for push-based mux client

Summary: Problem / Solution

We need to be able to negotiate settings if we want to use things like
opportunistic TLS and message fragmenting in the push-based mux client.

JIRA Issues: CSL-5224

Differential Revision: https://phabricator.twitter.biz/D94689"
mosesn,2017-09-30 00:04:31,https://api.github.com/repos/twitter/finagle/git/commits/da6405c134c04566b141994683fca8bf4f67c80b,da6405c134c04566b141994683fca8bf4f67c80b,"finagle-mux: Default to negotiating to tls ""off""

Summary: Problem

We should always send a ""tls"" header in mux, but if opportunistic tls is
disabled, we don't send it.

Solution

Ensure we always send a ""tls"" header in mux.

Result

Behavior won't change, since it treats ""no header"" and ""tls: off"" the same.

JIRA Issues: CSL-5282

Differential Revision: https://phabricator.twitter.biz/D95277"
kevinoliver,2017-09-29 18:52:04,https://api.github.com/repos/twitter/finagle/git/commits/47ccf38c0ba290de9e40201164f1da1f3d116596,47ccf38c0ba290de9e40201164f1da1f3d116596,"util, finagle, finatra: Fix publishing of root project

Summary: Problem

Finatra was still trying to publish its root module. This was due to
the `publishTo` key not being set. Interestingly, util and finagle
were working, but it appears to be due to ordering and how that key
was set.

Solution

Explictly set the `publishTo` key to a dummy value.

Result

Finatra will no longer try to publish its root project and
util/finagle's build files are more robust to this regressing in the
future.

JIRA Issues: csl-5171

Differential Revision: https://phabricator.twitter.biz/D95145"
brutkin,2017-09-29 18:46:34,https://api.github.com/repos/twitter/finagle/git/commits/b80a1df4156fc6f7e4b35399d996bc46af465881,b80a1df4156fc6f7e4b35399d996bc46af465881,"DeadlineFilter: Deprivatize the DeadlineFilter class

Summary: Problem/Solution
With access only to the DeadlineFilter object, it can only be pushed on to a
stack.  It is useful to have direct access to the class so that it can be
chained as a regular filter.

Result
A new DeadlineFilter can be created and chained with other Filters and Services

Differential Revision: https://phabricator.twitter.biz/D94517"
bryce-anderson,2017-09-29 15:43:39,https://api.github.com/repos/twitter/finagle/git/commits/0430b27924965ff9560eddda7d39202a81e9d2d1,0430b27924965ff9560eddda7d39202a81e9d2d1,"finagle-mux: fix NPE in MuxClientSession shutdown

Summary: Problem / Solution

When shutting down the MuxClientSession doesn't ensure that an
outstanding ping exists before trying to shut it down, so check first.

JIRA Issues: CSL-5270

Differential Revision: https://phabricator.twitter.biz/D94808"
fsareshwala,2017-09-29 00:08:51,https://api.github.com/repos/twitter/finagle/git/commits/380cf264b2fb8d6cfe56e15b59764e2484d7b157,380cf264b2fb8d6cfe56e15b59764e2484d7b157,"finagle: add 308 Permanent Redirect to the list of statuses

Summary: Problem
The HTTP spec supports a 308 Permanent Redirect which is similar to 301
Moved Permanently, except that it does not allow changing the request
method from POST to GET. However, Finagle doesn't contain the status
code constants yet. At the moment, developers who use APIs which take in
a finagle Status won't be able to use 308 Permanent Redirect.

Solution
Add 308 Permanent Redirect status code constants.

Differential Revision: https://phabricator.twitter.biz/D94861"
cacoco,2017-09-27 19:55:21,https://api.github.com/repos/twitter/finagle/git/commits/f0f46785a24daa09a68ebcf2f4b841474df31114,f0f46785a24daa09a68ebcf2f4b841474df31114,"finagle-mux: Expose transport contexts in mux.Request and mux.Response

Summary: Problem

The mux transport layer has the ability to pass message contexts
but these are not exposed in the higher-level mux.Request and
mux.Response types.

Solution

Expose the contexts in the higher-level mux.Request and
mux.Response types.

JIRA Issues: CSL-4939

Differential Revision: https://phabricator.twitter.biz/D92998"
jcrossley,2017-09-27 17:57:17,https://api.github.com/repos/twitter/finagle/git/commits/2d37c2c1684132121f15423b2f08054785f8e29c,2d37c2c1684132121f15423b2f08054785f8e29c,"finagle-memcached: Turned-off toggle for push-based Memcached client

Summary: Problem

We want to be able to toggle on the push-based Memcached client.

Solution

Introduce a turned-off toggle, and add tests for the non-push-based
client.

JIRA Issues: CSL-5238

Differential Revision: https://phabricator.twitter.biz/D93396"
dschobel,2017-09-27 17:56:18,https://api.github.com/repos/twitter/finagle/git/commits/6eed8eebfb1ff8a9f1eaaa8dbf235d4418945906,6eed8eebfb1ff8a9f1eaaa8dbf235d4418945906,"finagle-netty4: hide some native transport internals

Summary: Problem / Solution

Lower the visibility of some of the internals of native epoll.

Differential Revision: https://phabricator.twitter.biz/D94215"
dschobel,2017-09-27 03:59:13,https://api.github.com/repos/twitter/finagle/git/commits/23eb70ce1d28bbe14828845812f881c81c275fe4,23eb70ce1d28bbe14828845812f881c81c275fe4,"util-app: generic Flag.let

Summary: Problem / Solution

Making Flag.let and letClear generic in their return type improves
their expressive power.

Differential Revision: https://phabricator.twitter.biz/D93951"
bryce-anderson,2017-09-26 21:47:13,https://api.github.com/repos/twitter/finagle/git/commits/0f1fd190f897856405c513f353f35e93c18b4b93,0f1fd190f897856405c513f353f35e93c18b4b93,"finagle-mux: Introduce push-based mux client

Summary: Problem / Solution

Introduce the push-based MuxClientSession which provides the steady
state behavior of the mux client session.

JIRA Issues: CSL-5056

Differential Revision: https://phabricator.twitter.biz/D92943"
jcrossley,2017-09-25 23:45:32,https://api.github.com/repos/twitter/finagle/git/commits/f23c7eed7dc5b3d0da23af7ffb8f83039e8f5723,f23c7eed7dc5b3d0da23af7ffb8f83039e8f5723,"finagle-memcached: Introduce underlying client, hard-coded to be non-push

Summary: Problem

We want to be able to toggle Memcached to use the push
implementation. To do that, we need some way to change
which implementation (push/non-push) we use.

Solution

Introduce Memcached.Client.NonPushClient and
Memcached.Client.PushClient. These clients expose their
endpointers, which Memcached.Client can then use through
the ""underlying"" client (currently hard-coded to be
Memcached.Client.NonPushClient).

JIRA Issues: CSL-5233

Differential Revision: https://phabricator.twitter.biz/D92974"
jcrossley,2017-09-22 14:44:56,https://api.github.com/repos/twitter/finagle/git/commits/ea9a4bf094dfb5dd6a5a080de37c64ba898282c6,ea9a4bf094dfb5dd6a5a080de37c64ba898282c6,"finagle-core: Push-based pipelining client

Summary: Problem

To facilitate a push-based Memcached client, we need
a pipelined push session.

Solution

Introduce PipeliningClientPushSession.

JIRA Issues: CSL-5205

Differential Revision: https://phabricator.twitter.biz/D91475"
vkostyukov,2017-09-21 19:46:16,https://api.github.com/repos/twitter/finagle/git/commits/6d0cd5ae8a02de46baba0ecae7a6c94fbfa2c54d,6d0cd5ae8a02de46baba0ecae7a6c94fbfa2c54d,"finagle-http: Optimize MapHeaderMap

Summary: Problem

Our own `HeaderMap` implementation isn't efficient as Netty 3 one, which makes
migration problematic.

Solution

Improve the performance of `MapHeaderMap`:

 - 16% faster `add`
 - 600% faster `iterator`
 - 400% faster `get`

Implementation Details:

- `ArrayBuffer` is used instead of `Vector`
- Most of the closures are now cached
- Iterator implementation is now custom and is based on a) cheap random access to `ArrayBuffer` and b) access to `Map.entriesIterator`

JIRA Issues: CSL-5070

Differential Revision: https://phabricator.twitter.biz/D92348"
bryce-anderson,2017-09-21 18:05:36,https://api.github.com/repos/twitter/finagle/git/commits/683a784b3d26e139b7f473e79ba8cb85484afcd6,683a784b3d26e139b7f473e79ba8cb85484afcd6,"finagle-mux: Make mux client Message => Response method more generic

Summary: Problem

I want to reuse the logic in ReqRepFilter.reply that converts a mux
clients Message => Response in the push based mux client but need
the Try[Response] instead of a Future[Response].

Solution

Since the method is entirely synchronous delay wrapping the result
via Future.const until after the synchronous transformation.

Differential Revision: https://phabricator.twitter.biz/D92551"
gshannon,2017-09-21 16:49:57,https://api.github.com/repos/twitter/finagle/git/commits/1224721ccf25930e5f2cede3f4ecedfca219dee9,1224721ccf25930e5f2cede3f4ecedfca219dee9,"finagle-mysql: Move cursor method to Client, remove Cursors trait

Summary: Problem

Running multiple SQL statements inside a transaction is an important and
fundamental feature of an RDBMS.  Using the `cursor` method is a valid and
supported way of querying, just as `select` is, but today you can only access
the `cursor` method with a `Client with Cursors` instance.  This means you
cannot use that with the `transaction` method, which requires a `Client`.
This limitation becomes important in use cases where one needs to run two or
more queries with read consistency, and one of the queries is a cursored query.
Without a transaction, the statements are not guaranteed to have read
consistency.  Also, when reading from a read-only database via a load balancer,
each query could be directed to a different host, which may not be in the same
replication state.

Solution

Moved `cursor` into the `Client` trait, and removed the `Cursors` trait.
Removed all references to `Cursors` trait in the source tree.
Added stub and pass-through `cursor` methods to test code implementations of
`Client`.

Result

Users will now be able to use cursors inside transactions.

JIRA Issues: CSL-4828

Differential Revision: https://phabricator.twitter.biz/D91789"
jcrossley,2017-09-20 20:54:13,https://api.github.com/repos/twitter/finagle/git/commits/14beb975d1c3aa4f57cf2ee3a0ab46c766496737,14beb975d1c3aa4f57cf2ee3a0ab46c766496737,"finagle-base-http: Configuration methods on Cookie to create a new Cookie with a field set

Summary: Problem

Sometimes when building a Cookie, we have Optional
values for configuration parameters. We are deprecating
the mutability of Cookie, so doing something like
`optDomain.forEach(cookie.domain = _)` will no longer
work. It would be useful to be able to configure an existing
cookie with a new param.

Solution

For each configurable field on `Cookie`, introduce a corresponding
method that creates a new `Cookie` with that field set.

JIRA Issues: CSL-5080

Differential Revision: https://phabricator.twitter.biz/D83226"
vkostyukov,2017-09-20 18:45:56,https://api.github.com/repos/twitter/finagle/git/commits/d6ec0ab0d529827e2a603f5a12a2724e9d7189fa,d6ec0ab0d529827e2a603f5a12a2724e9d7189fa,"finagle-benchmark: Add HeaderMap benchmark

Summary: Introducing a JMH benchmark for `HeaderMap` so we can compare
Netty 3 against our own implementation.

JIRA Issues: CSL-5186

Differential Revision: https://phabricator.twitter.biz/D91676"
bryce-anderson,2017-09-20 15:22:17,https://api.github.com/repos/twitter/finagle/git/commits/6ccda6c2044412965881f5d8d43adc2d64762e4c,6ccda6c2044412965881f5d8d43adc2d64762e4c,"finagle-mux: Fix lease logic in server

Summary: Problem / Solution

The lease logic in the server has two main problems.
* It will swallow issuing a new lease if the current lease is about to
  expire which is an important time we would want to send a new lease.
* When determining if the server is accepting it considers the issued
  duration but not whether it had expired.

JIRA Issues: CSL-5216

Differential Revision: https://phabricator.twitter.biz/D91645"
jcrossley,2017-09-20 02:29:48,https://api.github.com/repos/twitter/finagle/git/commits/da4a983e24dca09a11bdda0159759b9fdda07875,da4a983e24dca09a11bdda0159759b9fdda07875,"finagle-memcached: Remove unused encoding objects

Summary: Problem

There are encoding pieces that are unused in finagle-memcached.

Solution

Remove these unused objects.

JIRA Issues: CSL-5203

Differential Revision: https://phabricator.twitter.biz/D91224"
jcrossley,2017-09-20 00:14:48,https://api.github.com/repos/twitter/finagle/git/commits/17577ad837956d0a6af63718e89e2ef73cfad09a,17577ad837956d0a6af63718e89e2ef73cfad09a,"finagle-memcached: Encoding entirely in the Channel Pipeline

Summary: Problem

Encoding in Memcached is split between the Transport (Command-to-Buf)
and Channel Pipeline (Buf-to-ByteBuf). For symmetry with decoding, and to
lay the groundwork for push-based Memcached, we should move encoding
entirely into the Channel Pipeline.

Solution

Move Command-to-Buf encoding into the Channel Pipeline.

JIRA Issues: CSL-5199

Differential Revision: https://phabricator.twitter.biz/D91016"
mosesn,2017-09-19 23:18:20,https://api.github.com/repos/twitter/finagle/git/commits/f536e5ab6c1ba78044781972bc0da21c4379a049,f536e5ab6c1ba78044781972bc0da21c4379a049,"finagle-http2: Make the stream closed exceptions more useful

Summary: Problem

When we see a StreamClosedException, it's not actionable

Solution

Add a bit more context around StreamClosedExceptions so that we know better what
happened.

Differential Revision: https://phabricator.twitter.biz/D91829"
vkostyukov,2017-09-19 23:16:04,https://api.github.com/repos/twitter/finagle/git/commits/20b89fc9c45065d35618abba7742c856bae90b47,20b89fc9c45065d35618abba7742c856bae90b47,"finagle-http: Add header validation for MapHeaderMap

Summary: Finagle HTTP needs its own `HeaderMap` implementation that also supports
header validation. This change adds such validation (can not be disabled
yet) that's ported from Netty 3 to preserve the current behavior.

JIRA Issues: CSL-5070

Differential Revision: https://phabricator.twitter.biz/D90359"
wpK,2017-09-18 21:41:18,https://api.github.com/repos/twitter/finagle/git/commits/fae2e69d81faeef7cf0dee0340cb4ec27d2bcf10,fae2e69d81faeef7cf0dee0340cb4ec27d2bcf10,"finagle-mysql: ability to toggle CLIENT_FOUND_ROWS flag

Summary: Problem

Original issue: #637

Unable to change the CLIENT_FOUND_ROWS flag. The flag (which
finagle-mysql enables by default) changes the behavior of
affected-rows for UPDATE and INSERT ... ON DUPLICATE KEY UPDATE
statements.

From the manual (v5.7):

For UPDATE statements, the affected-rows value by default is the
number of rows actually changed. If you specify the CLIENT_FOUND_ROWS
flag to mysql_real_connect() when connecting to mysqld, the
affected-rows value is the number of rows “found”; that is, matched by
the WHERE clause.

For INSERT ... ON DUPLICATE KEY UPDATE statements, the affected-rows
value per row is 1 if the row is inserted as a new row, 2 if an
existing row is updated, and 0 if an existing row is set to its
current values. If you specify the CLIENT_FOUND_ROWS flag, the
affected-rows value is 1 (not 0) if an existing row is set to its
current values.

Solution

Added withAffectedRows() on Mysql.client which when used removes the
FoundRows capability when connecting to the server.

My implementation adds another argument to the Handshake case class to
follow how ConnectWithDB is handled. I've also considered checking for
the param in Handshake.apply and if added passing it with
Capability.baseCap - Capability.FoundRows.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

JIRA Issues: CSL-5211

Differential Revision: https://phabricator.twitter.biz/D91406"
bryce-anderson,2017-09-18 21:29:23,https://api.github.com/repos/twitter/finagle/git/commits/5b004430b38bb3587d8a82cda8fc7d52890762d1,5b004430b38bb3587d8a82cda8fc7d52890762d1,"finagle-mux: Add push mux MessageWriter

Summary: Problem / Solution

The MessageWriter is charged with controlling the encoding/fragmenting of
mux protocol messages and scheduling writes to the socket.

JIRA Issues: CSL-5195

Differential Revision: https://phabricator.twitter.biz/D90337"
kevinoliver,2017-09-18 17:49:54,https://api.github.com/repos/twitter/finagle/git/commits/f7824ff1caf39e218d61b5ba4082418e5e805651,f7824ff1caf39e218d61b5ba4082418e5e805651,"finagle-netty3: Remove numWorker test

Summary: Problem / Solution

The numWorkers was dependent on the host having 4 or more
processors. This caused a failure on a recent Travis CI run
where it had less than 4 processors. Removing the test as it
doesn't add much value nor is it worth copying the business
logic into the unit test.

JIRA Issues: csl-5207

Differential Revision: https://phabricator.twitter.biz/D91420"
jcrossley,2017-09-18 17:16:22,https://api.github.com/repos/twitter/finagle/git/commits/717600969e4d4e7db047e758deae0ba30282461d,717600969e4d4e7db047e758deae0ba30282461d,"finagle-base-http: Decouple Cookie from Netty 3 Cookie

Summary: Problem

In order to remove Netty 3, we need to decouple Cookie from
Netty 3 Cookie.

Solution

Cookie is no longer backed by a Netty 3 cookie. We are moving
towards making Cookie immutable, so we deprecate all set methods
(a ""CookieBuilder"" will be introduced in another commit). We add
bijections to go from one type to the other.

JIRA Issues: CSL-3669

Differential Revision: https://phabricator.twitter.biz/D82164"
bryce-anderson,2017-09-15 22:50:17,https://api.github.com/repos/twitter/finagle/git/commits/4f533fc1f0fbebc265b45473c0f9d12ea8e62ac4,4f533fc1f0fbebc265b45473c0f9d12ea8e62ac4,"finagle-mux: Implement MuxMessageDecoder

Summary: Problem / Solution

The push-based mux implementation is going to need a way to decode
messages that can be configured at the session level due to handshake
reasons. Provide an abstract class as an interface and an implementation
that will decode messages, aggregating fragments as necessary.

JIRA Issues: CSL-5196

Differential Revision: https://phabricator.twitter.biz/D90468"
mkhq,2017-09-13 22:07:30,https://api.github.com/repos/twitter/finagle/git/commits/7d5f2696462f12124b4dc5d599028a27f326add3,7d5f2696462f12124b4dc5d599028a27f326add3,"finagle-redis: Enable running integration tests in finagle-redis.

Summary: Problem

Unit tests and integration tests are mixed in the finagle-redis project
under the test path. In addition, the SBT configuration is only running
unit tests. This solves issue #360.

Solution

Added configuration for IntegrationTest in the finagle-redis project
and moved integration tests to the correct path. Redis process shutdown
always includes all processes.

Result

Running 'test' only executes unit tests. Running 'it:test' executes the
integration tests.

Signed-off-by: Bryce Anderson <banderson@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D90176"
mosesn,2017-09-12 21:37:21,https://api.github.com/repos/twitter/finagle/git/commits/d9458270d1251f75fa9336ce2b97f1cdf55d2b42,d9458270d1251f75fa9336ce2b97f1cdf55d2b42,"finagle-http2: Upgrade to netty 4.1.15.Final

Summary: Problem

Finagle's http/2 implementation relies heavily on netty's, which has several
bugs.  Some of those bugs are fixed in 4.1.15, but it changes the API
substantively too.

Solution

Upgrade finagle's usage to the new API.  The new API also introduces some new
bugs, so we have two work-arounds for them.  There's a reference-counting bug at
upgrade time in h2c upgrades, and there's a null pointer exception, also at h2c
upgrade time.  The work-around for the reference-counting is to add in an extra
increment, and for the null pointer exception, to set the fields that are unset.

https://github.com/netty/netty/issues/7172
https://github.com/netty/netty/issues/7173

Result

Finagle's http/2 implementation is less buggy--in particular, it can tell more
when something has been written successfully or not.

JIRA Issues: CSL-5130

Differential Revision: https://phabricator.twitter.biz/D87685"
vkostyukov,2017-09-12 21:24:50,https://api.github.com/repos/twitter/finagle/git/commits/7418f7cd24a3987ab9f4226dfb600344615b378e,7418f7cd24a3987ab9f4226dfb600344615b378e,"finagle-netty4: Add finagle/netty4/pooling/used gauge to track used memory

Summary: Problem / Solution

Adding a new ""debug"" gauge to make it easier to track memory usage in
pooled allocators.

JIRA Issues: CSL-4417

Differential Revision: https://phabricator.twitter.biz/D89836"
roanta,2017-09-12 17:48:49,https://api.github.com/repos/twitter/finagle/git/commits/8cfbcd3fe04dac7b626a93e236e71b5cf9726f8d,8cfbcd3fe04dac7b626a93e236e71b5cf9726f8d,"finagle-core: create toggle for d-aperture

Summary: Problem / Solution

We want to introduce a toggle for d-aperture which allows us
to switch over Finagle clients which are currently using random
aperture.

Depends on D88389

JIRA Issues: CSL-4967

Differential Revision: https://phabricator.twitter.biz/D88445"
mosesn,2017-09-11 21:17:32,https://api.github.com/repos/twitter/finagle/git/commits/882808e798edd327b10c20668ae11ffbb9534b9d,882808e798edd327b10c20668ae11ffbb9534b9d,"finagle-{thrift,}mux: Unit test the bejeezus out of smux

Summary: Problem

We tested a few examples of configuration pairs, but not all of them

Solution

Test 'em all

JIRA Issues: CSL-5162

Differential Revision: https://phabricator.twitter.biz/D89108"
cacoco,2017-09-11 20:58:27,https://api.github.com/repos/twitter/finagle/git/commits/dc3230e3a98fb6ec68f23f8fc00c703401db5738,dc3230e3a98fb6ec68f23f8fc00c703401db5738,"finagle-netty4: Validate loaded certs in `Netty4ClientEngineFactory` and `Netty4ServerEngineFactory`

Summary: Problem

When creating a client or server ssl engine we do not currently validate the loaded
X.509 certificates in all cases.

Solution

Properly check that the current date is within the specified range in loaded certs
when creating a client or server ssl engine.

JIRA Issues: CSL-5125

Differential Revision: https://phabricator.twitter.biz/D88664"
roanta,2017-09-11 19:37:57,https://api.github.com/repos/twitter/finagle/git/commits/d5ec25a4d830b38b3f03621c7798e34dea8b36f8,d5ec25a4d830b38b3f03621c7798e34dea8b36f8,"finagle-core: make `useDeterministicOrdering` a tri-state parameter

Summary: Problem

We need to be able to distinguish between the default value and
an explicit off state for `useDeterministicOrdering` in order
to toggle it on.

Solution

Make the parameter an Option[Boolean] where `None` is the default
value and means the feature can be toggle on.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D89287"
roanta,2017-09-08 21:35:09,https://api.github.com/repos/twitter/finagle/git/commits/21d29b1051a23fdce81f2652524cb7ce61a23a3e,21d29b1051a23fdce81f2652524cb7ce61a23a3e,"finagle-core: ignore user-defined minAperture when using d-aperture

Summary: Problem

Setting a `minAperture` serves two primary purposes:

1. Ensure that the respective client is resilient and has enough
    warm sessions in case one goes down. Essentially, we want to
    ensure the client has more than one in this case.

2.  Mitigate the effects of the load distribution when using random aperture.
     That is, by expanding the min, it allows each client in a distributed system to
     talk to more of the backends and tighten the load distribution.

Both of these are obsolete when using d-aperture. #1 is solved since we already
set a min of `4` in order to respect node weights and #2 is the chief problem
which d-aperture is designed to solve.

Solution

Ignore the user-defined `minAperture` when using d-aperture. This will
additionally allow us to toggle this feature on without having to worry
about stale user configuration.

Differential Revision: https://phabricator.twitter.biz/D88848"
vkostyukov,2017-09-08 21:04:41,https://api.github.com/repos/twitter/finagle/git/commits/a3a190c07c725b16c501c5f3a5e343c12a3dd771,a3a190c07c725b16c501c5f3a5e343c12a3dd771,"finagle-http: Move ReaderUtils to finagle-netty3-http

Summary: Problem / Solution

`ReaderUtils` can be safely moved into finagle-netty3-http (it's only used there).

This change also moves the following N3 pieces:

- `Netty3HeaderMap` is now defined under `netty3` package
- `netty.Bijections` renamed to `netty3.Bijections`
- `Netty3StreamingTest` is moved to a root test package (for consistency)

TBR=true

Differential Revision: https://phabricator.twitter.biz/D86815"
mosesn,2017-09-08 00:28:45,https://api.github.com/repos/twitter/finagle/git/commits/9855b8d6b729258989abc27a5fdd3ec6f1a10a8c,9855b8d6b729258989abc27a5fdd3ec6f1a10a8c,"finagle-core: ServerBuilder propagates `params` correctly with `stack` method

Summary: Problem

Although params are propagated properly to construct the server when you call
stack, they aren't also propagated to the `params` field.

Solution

Pass them to the `params` field.

Differential Revision: https://phabricator.twitter.biz/D88550"
mosesn,2017-09-08 00:04:19,https://api.github.com/repos/twitter/finagle/git/commits/64c971815933e4dda8666181673634472f6492dd,64c971815933e4dda8666181673634472f6492dd,"finagle-mux: Ensure we actually turn on tls

Summary: Problem

We don't have a good way of checking that we actually enable TLS.

Solution

Pass a function as a param to change how we enable TLS, so that we can record
the bytes that are sent over the wire and be sure that we're turning on TLS
successfully.  This has the side benefit of regularizing how to tls-ify the
handler between the client and server.

JIRA Issues: CSL-5143

Differential Revision: https://phabricator.twitter.biz/D87948"
roanta,2017-09-07 23:15:37,https://api.github.com/repos/twitter/finagle/git/commits/7671a56f486947a9247e4e959cf16d5822f15a3c,7671a56f486947a9247e4e959cf16d5822f15a3c,"finagle-toggle: Add `clusterId` to ServerInfo

Summary: Problem / Solution

In certain cases, it is useful to define toggles per-cluster granularity
rather than per-instance. In order to do so, we expose a `clusterId`
which is uniform across clusters.

Differential Revision: https://phabricator.twitter.biz/D88389"
roanta,2017-09-07 22:20:19,https://api.github.com/repos/twitter/finagle/git/commits/d466336a0717c59c0415b0cc3ad9aada20d7060e,d466336a0717c59c0415b0cc3ad9aada20d7060e,"finagle-core: refactor logical aperture calculation

Summary: Problem

While calculating the aperture in terms of our unit space [0, 1], we were
jumping from the unit space to the integral space. This was more complex
than needed and caused certain issues around the edge case where we need
a width of 1.0.

Solution

Calculate the aperture while remaining in the unit space and bound the
`Coord.width` to be between [0, 1] to avoid any floating point precision
errors.

Differential Revision: https://phabricator.twitter.biz/D88180"
bryce-anderson,2017-09-07 17:48:34,https://api.github.com/repos/twitter/finagle/git/commits/e5c13aef3f7190a4fd20dba4ba991c66db6fb2c4,e5c13aef3f7190a4fd20dba4ba991c66db6fb2c4,"util-core: Make Updatable contravariant in T

Summary: Problem / Solution

The type parameter T of Updatable could be contravariant which allows
for making a singleton empty instance that can be shared regardless
of the update type.

JIRA Issues: CSL-5170

Differential Revision: https://phabricator.twitter.biz/D88192"
bryce-anderson,2017-09-07 15:37:40,https://api.github.com/repos/twitter/finagle/git/commits/6ec813b2da3b32e4dc5af003e4aeb91d343c27b3,6ec813b2da3b32e4dc5af003e4aeb91d343c27b3,"finagle-mux: Fix tag collision in ClientDispatcher

Summary: Problem

Interrupting a dispatch can result in a tag collision where the
interrupt can accidentally fail a subsequent dispatch, not the one that
the interrupt belongs to.

Solution

Change the synchronization scheme of the TagMap such that its the
ClientDispatchers responsibility, making it simple to perform a 'compare
and set' like operation in one atomic action. This lets us check if the
Promise in the TagMap is the one associated with the dispatch, and if
not, we leave it alone.

JIRA Issues: CSL-5167

Differential Revision: https://phabricator.twitter.biz/D87933"
mosesn,2017-09-07 01:11:11,https://api.github.com/repos/twitter/finagle/git/commits/4747636576d502045e06d2b8e226b9338e589eac,4747636576d502045e06d2b8e226b9338e589eac,"finagle-thriftmux: Enable opportunistic tls for thriftmux too

Summary: Problem

We want to be able to use opportunistic tls with thriftmux.

Solution

Add parameters that let opportunistic tls be used with thriftmux.

JIRA Issues: CSL-5132

Differential Revision: https://phabricator.twitter.biz/D85152"
yufangong,2017-09-07 00:11:04,https://api.github.com/repos/twitter/finagle/git/commits/883659e7899484296fdea45dc675624dea75d4f5,883659e7899484296fdea45dc675624dea75d4f5,"{scrooge, finagle-thrift}: Use `RichClientParam` and `RichServerParam` for generated server/client

Summary: Problem:

We want users to be able to config their reusableBuffer size used in thrift
generated code. Previously our scrooge generated code is always using 16K.

Solution:

Wrap config params such as `TProtocolFactory`, `StatsReceiver`,
`ResponseClassifier` and `MaxReusableBufferSize` in RichServerParam and
RichClientParam, this is also helpful for future use when we want to pass new params
to scrooge generated code.

Use passed maxThriftBufferSize to config `TReusableBuffer`.

Add `withMaxReusableBufferSize` for client side.

JIRA Issues: CSL-5051, CSL-5089

TBR=true

Differential Revision: https://phabricator.twitter.biz/D83190"
bryce-anderson,2017-09-06 20:58:20,https://api.github.com/repos/twitter/finagle/git/commits/45bbfca882c20c262c861644bc4610b930356d2c,45bbfca882c20c262c861644bc4610b930356d2c,"finagle: Change private[scope] of some types

Summary: Problem / Solution

Some types are more public than necessary and others are less public
than necessary, so clean it up.

Differential Revision: https://phabricator.twitter.biz/D87939"
kevinoliver,2017-09-06 18:32:31,https://api.github.com/repos/twitter/finagle/git/commits/37212517b530319f4ba08cc7473c8cd8c4b83479,37212517b530319f4ba08cc7473c8cd8c4b83479,"finagle, finatra, scrooge, twitter-server, util: September release

Summary: Problem

We want to release the next versions of our Twitter OSS libraries:
 - util -> 7.1.0
 - scrooge -> 4.20.0
 - finagle -> 7.1.0
 - twitter-server -> 1.32.0
 - finatra -> 2.13.0

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D87932"
bryce-anderson,2017-09-05 21:24:24,https://api.github.com/repos/twitter/finagle/git/commits/f621032462ca4dfb18a1a759b7b516d97466e9fe,f621032462ca4dfb18a1a759b7b516d97466e9fe,"finagle-mux: MuxFramer handles discards correctly

Summary: Problem

On receiving a discard message, the MuxFramer is checking its tagMap for
the wrong tag so it could end up prepending existing fragments of the
associated dispatch message. Additionally, if it had been using the
right tag, it would have swallowed the message and the associated
Rdiscarded would have been lost to the client due to it being not
propagated in the client case or not sent in the server case.

Solution

Use the right tag and synthesize/propagate the Rdiscarded message as
appropriate.

JIRA Issues: CSL-5149

Differential Revision: https://phabricator.twitter.biz/D87096"
roanta,2017-09-05 18:33:59,https://api.github.com/repos/twitter/finagle/git/commits/06406cf97524e7f3a7646af37ccb6c914094ed8a,06406cf97524e7f3a7646af37ccb6c914094ed8a,"finagle-core: integrate minor feedback into Ring/Aperture

Summary: Problem / Solution

We shipped Ring/Aperture and missed some trailing minor feedback,
so we integrate it separately.

Differential Revision: https://phabricator.twitter.biz/D87485"
roanta,2017-09-05 17:49:34,https://api.github.com/repos/twitter/finagle/git/commits/83c3348fc6d79d98b7112e631aab36f6f30d843b,83c3348fc6d79d98b7112e631aab36f6f30d843b,"csl: add stack traces to asserts in sbt

Summary: Problem / Solution

In cases where we use asserts in java tests, it's useful
to see the stack traces when they fail so we can more
easily debug the offending test.

Differential Revision: https://phabricator.twitter.biz/D87482"
cacoco,2017-09-01 21:46:32,https://api.github.com/repos/twitter/finagle/git/commits/71790be38627a0794b6d46292feb61120c90112f,71790be38627a0794b6d46292feb61120c90112f,"util,scrooge,finagle,ts: Address skip_flaky parameter passing for testing

Summary: Problem

Forking for tests is generally problematic. Setting SKIP_FLAKY doesn't
appear to work without forking.

Catch-22

Solution

Do not try to fork. Rely on the running environments to set SKIP_FLAKY.

Result

Reclaiming my time.

Differential Revision: https://phabricator.twitter.biz/D87120"
roanta,2017-09-01 17:58:24,https://api.github.com/repos/twitter/finagle/git/commits/aa6537545e4e304cf90e7eb8e62f5bce266fbae9,aa6537545e4e304cf90e7eb8e62f5bce266fbae9,"finagle-core: Fix Ring.range when width is 1.0

Summary: Problem / Solution

In cases where an offset is present, we don't calculate
the range correctly for a full rotation. To remedy this,
we add a special case for this and return the the `size`
of the ring.

Differential Revision: https://phabricator.twitter.biz/D86955"
cacoco,2017-09-01 01:53:22,https://api.github.com/repos/twitter/finagle/git/commits/504f1f731105bd0c04454b90a293dfa3b6496a8d,504f1f731105bd0c04454b90a293dfa3b6496a8d,"Twitter OSS: Consistently skip flaky tests in projects

Summary: Problem

The build.sbt files for util, scrooge, finagle, twitter-server, and
finatra do not consistently set the SKIP_FLAKY system
property by default for tests. Additionally, the travis configuration
for said projects is inconsistent, making it hard to spot potential
issues.

Solution

Try to fork when testing and pass the SKIP_FLAKY paramater
to the forked testing process. Every project already specified
that parallel test running in the forked process should be disabled.
However in the case of Finagle this was not enough, so an
additional restriction was added (like in Finatra) to ensure that
tests are not run in parallel in the forked process since test
state will collide.

Result

Tests marked as flaky will be skipped when building with sbt.

JIRA Issues: CSL-5017

Differential Revision: https://phabricator.twitter.biz/D86877"
vkostyukov,2017-08-31 21:40:03,https://api.github.com/repos/twitter/finagle/git/commits/f4efc2d10d080e950ca2bd96112f95caaa286db6,f4efc2d10d080e950ca2bd96112f95caaa286db6,"finagle-core: Capture a cause for a FailFastExceptiotion

Summary: Problem

`FailFastException` is a static failure that doesn't capture what causes it. This makes
user experience a bit more unpleasant.

Solution

Capture the last known cause for a `FailFastException`.

JIRA Issues: CSL-5122

Differential Revision: https://phabricator.twitter.biz/D86396"
mosesn,2017-08-31 20:52:20,https://api.github.com/repos/twitter/finagle/git/commits/7013d5b5bd41e53ec06d785087f326173cb2943f,7013d5b5bd41e53ec06d785087f326173cb2943f,"finagle-netty4: Refactor ssl connect handlers to always verify

Summary: Problem

Opportunistic tls doesn't do SSL verification because it removes the connect
handlers.

Solution

Do SSL verification regardless of whether the handlers are there for connection
or not, and insert the connect handlers back into the pipeline, now renamed to
verification handlers.

JIRA Issues: CSL-5134

Differential Revision: https://phabricator.twitter.biz/D85172"
cacoco,2017-08-31 20:36:15,https://api.github.com/repos/twitter/finagle/git/commits/baa19d0314a9c968075c80455db603dff6be18de,baa19d0314a9c968075c80455db603dff6be18de,"finagle-integration: Add test dependency on finagle-redis

Summary: Problem/Solution

finagle-integration needs a test dependency on finagle-redis.
Add the dependency.

JIRA Issues: CSL-5151

Differential Revision: https://phabricator.twitter.biz/D86745"
roanta,2017-08-31 15:44:47,https://api.github.com/repos/twitter/finagle/git/commits/2fa89b52798f57250fa22a6be3ff62551f02207d,2fa89b52798f57250fa22a6be3ff62551f02207d,"finagle: defer evaluation of client/server aliases

Summary: Problem

In cases where the `Client`/`Server` case classes have initialization
dependencies on the respective protocol objects, we can put the
`client`/`server` vals in a bad state. In particular, the following
can lead to NPEs:

```
$Protocol.Client()
$Protocol.client.newService(...)
```

Solution

We adopt the convention of making the client/server aliases `def`s since
these object allocations should be generally short lived and cheap. Additionally,
the protocol object APIs are most commonly used by caching the result of
`newService` or `serve` (the intermediate values aren't very useful).

JIRA Issues: CSL-5137

Differential Revision: https://phabricator.twitter.biz/D85927"
mosesn,2017-08-31 01:41:27,https://api.github.com/repos/twitter/finagle/git/commits/27f9c4984fd3103dea0311c3179d7a0b335445d4,27f9c4984fd3103dea0311c3179d7a0b335445d4,"finagle-mux: Supports opportunistic tls

Summary: Problem

We want to be able to migrate clients and servers from cleartext to tls.

Solution

Introduce a scheme that allows them to choose whether to upgrade or not in the
mux handshake.

JIRA Issues: CSL-4957, CSL-4962

Differential Revision: https://phabricator.twitter.biz/D82927"
roanta,2017-08-30 23:37:12,https://api.github.com/repos/twitter/finagle/git/commits/a7b51c5817d8430dddcbc73fe618bbb691d38d66,a7b51c5817d8430dddcbc73fe618bbb691d38d66,"finagle-core: support fractional apertures when using d-aperture

Summary: Problem

When we restrict apertures to positive integers, we can not evenly cover the
ring without a sufficiently large aperture. In particular, the aperture must be
the least common multiple between the number of servers and clients. Indeed, this
does not scale, and in some cases (i.e. # of servers and clients are relatively prime),
we need the aperture to be fully open.

Solution

Add support for fractional apertures. That is, clients can talk a portion of a server.
This allows us to naturally express full ring coverage – each client must simply talk
to the servers which fall within its portion of the ring. However, it does require
that our aperture increase/decrease by the ring unit of a client. For example, if
a client covers 3.33 of the server ring, then we need to increment the aperture by 3.33.

In terms of implementation, `Ring` now  implements a `pick2` method which picks
two indices, without replacement, over a  specified range. We remove the notion
of ring order, since it is implicitly and naturally conveyed as part of the pick.
This does, however, mean we need to expose the indices that are part of the aperture
so that features like expiration can work correctly.

JIRA Issues: CSL-5063

Differential Revision: https://phabricator.twitter.biz/D84452"
kevinoliver,2017-08-30 22:15:40,https://api.github.com/repos/twitter/finagle/git/commits/410c18c6b9dce98f0b3bd5effc31b62824a364c2,410c18c6b9dce98f0b3bd5effc31b62824a364c2,"finagle-core: Add metrics to surface request handling imbalance

Summary: Problem

Service owners don't have a good metric they can examine to know if
their threads are not handling requests in a balanced fashion.

Solution

Introduce a stack module for servers, `ThreadUsage`, which produces a
gauge ""srv/$server_name/thread_usage/requests/relative_stdev"". When
this value is close to 0.0, it indicates good balance of request
handling by threads.

JIRA Issues: csl-4800

Differential Revision: https://phabricator.twitter.biz/D85848"
mosesn,2017-08-30 21:39:42,https://api.github.com/repos/twitter/finagle/git/commits/800848a4a99b158af51353af053fae64ddcb2ab6,800848a4a99b158af51353af053fae64ddcb2ab6,"finagle-http2: Specialize a transport for executors

Summary: Problem

We don't want every single transport to have to expose an executors method

Solution

Only do it for netty4!

Differential Revision: https://phabricator.twitter.biz/D84188"
mosesn,2017-08-30 00:04:09,https://api.github.com/repos/twitter/finagle/git/commits/e015f4b642eec39d90d2a236f6b96719a8d0a312,e015f4b642eec39d90d2a236f6b96719a8d0a312,"finagle-core: Change Transport to take a generic TransportContext

Summary: Problem

Transport is beginning to become overgrown with connection-level methods since
it's the only reasonable place to put them.  This includes protocol-specific
stuff.

Solution

Parameterize the Transport with a Context that lets us provide new methods on
a per-protocol basis.

JIRA Issues: CSL-5124

Differential Revision: https://phabricator.twitter.biz/D83972"
rashmur,2017-08-29 23:19:10,https://api.github.com/repos/twitter/finagle/git/commits/9bf1c9e581783b9af289c57dfb209b50cdc71db6,9bf1c9e581783b9af289c57dfb209b50cdc71db6,"finagle-redis: Fix hash integration tests, implement key persist and Hash hstrlen command and tests

Summary: Problem:
Hash integration tests for hmergeex were broken.
Key persist command , Hash hstrlen command were not implemented.
Hash's Hval command was not fully implemented.

Solution:
Fix hmergeex tests. Implement persist, hstrlen commands and their tests. Fix hval implementation.

Differential Revision: https://phabricator.twitter.biz/D85609"
bryce-anderson,2017-08-29 21:02:26,https://api.github.com/repos/twitter/finagle/git/commits/cdb02244686c981bea2e275eb6b808c62b9cff25,cdb02244686c981bea2e275eb6b808c62b9cff25,"finagle-base-http: Don't use ChannelBufferOutputStream internally

Summary: Problem / Solution

We want to remove Netty3 but we're using its ChannelBufferOutputStream as
an implementation detail in our `c.t.f.http.Message` type. We can remove it
and remain efficient by subclassing the ByteArrayOutputStream type from the
Java standard library.

JIRA Issues: CSL-4925

Differential Revision: https://phabricator.twitter.biz/D85663"
dschobel,2017-08-29 18:34:20,https://api.github.com/repos/twitter/finagle/git/commits/f28705d556077cbd56b19ce90eba35be7203ad07,f28705d556077cbd56b19ce90eba35be7203ad07,"finagle: bump netty to 4.1.14

Summary: Problem / Solution

Update Netty to 4.1.14.

JIRA Issues: CSL-4834

Differential Revision: https://phabricator.twitter.biz/D84542"
bryce-anderson,2017-08-29 15:40:26,https://api.github.com/repos/twitter/finagle/git/commits/f970bd5b0c1b3f968694dcde33b47b21869b9f0e,f970bd5b0c1b3f968694dcde33b47b21869b9f0e,"finagle-base-http: Fix cookies and ctx forwarding for Request and Response

Summary: Problem

The `c.t.f.http.Request.Proxy` and `c.t.f.http.Response.Proxy` types are
inconsistent on forwarding the `ctx` from the underlying message and the
`cookies` are not forwarded at all.

Solution

Forward the fields and write tests to avoid regressions.

JIRA Issues: CSL-3668

Differential Revision: https://phabricator.twitter.biz/D85504"
bryce-anderson,2017-08-29 00:26:06,https://api.github.com/repos/twitter/finagle/git/commits/d43126704e1b7049f21d1a69d2c1e0341254ed3b,d43126704e1b7049f21d1a69d2c1e0341254ed3b,"finagle: Add finagle-netty3-http to the root sbt project

Summary: Problem / Solution

The new project finagle-netty3-http is not a part of the root project
and as such isn't published unless done so explicitly.

Differential Revision: https://phabricator.twitter.biz/D85536"
bryce-anderson,2017-08-28 22:10:44,https://api.github.com/repos/twitter/finagle/git/commits/143f6f0f83765783808a11f990179d881daecb66,143f6f0f83765783808a11f990179d881daecb66,"finagle-http: Move Netty3 specific logic to finagle-netty3-http

Summary: Problem

We want to get rid of the Netty 3 implementation at some point.

Solution

Move the Netty3 code into its own project so it will be easy to
remove when the time comes.

JIRA Issues: CSL-3955

TBR=true

Differential Revision: https://phabricator.twitter.biz/D84101"
vkostyukov,2017-08-28 20:58:05,https://api.github.com/repos/twitter/finagle/git/commits/6c666ab5c3363ae5bd22b0fbd96f33995fe36ac7,6c666ab5c3363ae5bd22b0fbd96f33995fe36ac7,"finagle-stats: Turn on verbosity levels

Summary: Finagle should start respecting verbosity levels out of the box. We're
turning them on: debug-levels metrics aren't exported by default from
now on.

JIRA Issues: CSL-4986

Differential Revision: https://phabricator.twitter.biz/D85278"
rashmur,2017-08-28 20:40:19,https://api.github.com/repos/twitter/finagle/git/commits/8f7efec0b860ab2dddff3beadf80c303bcb2522d,8f7efec0b860ab2dddff3beadf80c303bcb2522d,"fingale-redis: Implementation for DBSize and tests for the command.

Summary: Problem:

DBSIZE command interface is not implemented in finagle-redis

Solution:

finagle interface for DBSize command and integration tests for DBSIZE.

JIRA Issues: CACHE-9818

Differential Revision: https://phabricator.twitter.biz/D85305"
vkostyukov,2017-08-28 19:47:55,https://api.github.com/repos/twitter/finagle/git/commits/f334084d414548118574275dff76fcf56f45068b,f334084d414548118574275dff76fcf56f45068b,"finagle-core: Remove deprecated httpProxyTo

Differential Revision: https://phabricator.twitter.biz/D84077"
jcrossley,2017-08-24 23:52:30,https://api.github.com/repos/twitter/finagle/git/commits/c97c9d4e59bc3f265a12bc4b1ce380d84909144e,c97c9d4e59bc3f265a12bc4b1ce380d84909144e,"finagle-core: Fix ServerBuilder test flakiness

Summary: Problem

The registry entries for a server contains the entry
Entry(List(server, string, test, Listener), Netty4Listener).
This entry does not contain the bound address, but does
start with the ""server, string, test"" prefix, so the test that
looks for the bound address fails when this entry is the head
of the server entries list and we look for the bound address
in the head element.

Solution

Also filter by entries that contain an address when we construct
the list of server entries.

JIRA Issues: CSL-5120

Differential Revision: https://phabricator.twitter.biz/D84316"
dschobel,2017-08-24 20:44:47,https://api.github.com/repos/twitter/finagle/git/commits/b6d7f3352c487af76c430f96ffd4424121d64226,b6d7f3352c487af76c430f96ffd4424121d64226,"finagle-*: standardize formatting

Summary: Problem / Solution

Standardize file formatting.

Differential Revision: https://phabricator.twitter.biz/D84250"
dschobel,2017-08-24 19:26:22,https://api.github.com/repos/twitter/finagle/git/commits/e7205483d4175976608fd59686b18417968ef09b,e7205483d4175976608fd59686b18417968ef09b,"finagle-memcached: fix compilation error

Summary: Problem / Solution

Fixup compilation failure.

JIRA Issues: CSL-5127

Differential Revision: https://phabricator.twitter.biz/D84399"
bryce-anderson,2017-08-24 16:09:45,https://api.github.com/repos/twitter/finagle/git/commits/4404d72dc4a753c6914a02fbb5a3a5ee16879ef3,4404d72dc4a753c6914a02fbb5a3a5ee16879ef3,"finagle-netty4: Add Netty4PushTransporter and StackClient implementations

Summary: Problem / Solution

We need implementations of the PushTransporter and StackClient to start
building clients on the push API's.

JIRA Issues: CSL-5054

Differential Revision: https://phabricator.twitter.biz/D83544"
jcrossley,2017-08-24 14:51:04,https://api.github.com/repos/twitter/finagle/git/commits/5f58761d6b4a6392e1596a3356f054071a523b54,5f58761d6b4a6392e1596a3356f054071a523b54,"finagle-memcached: Remove java package and rename java Client to JavaClient

Summary: Problem

Having a java package in Memcached makes importing
java classes painful.

Solution

Remove the java package. Move the  java Client and ClientBase
into the memcached package, and rename to JavaClient and
JavaClientBase respectively, to avoid conflicts with the existing
scala Client object in that package. Fix all usages.

JIRA Issues: CSL-5118

TBR=true

Differential Revision: https://phabricator.twitter.biz/D83719"
rashmur,2017-08-24 12:46:05,https://api.github.com/repos/twitter/finagle/git/commits/bf5b91adfd53e68773f7fa70b2e6d4a9641d393a,bf5b91adfd53e68773f7fa70b2e6d4a9641d393a,"finagle-redis: Handling cache miss on btree range command.

Summary: Problem

Redis returns EmptyBulkReply on a cache miss.
Finagle's bRange doesn't handle the response returned by redis on a cache miss and throws an IllegalStateException.

Solution

bRange to handle EmptyBulkReply and return Nil to indicate a cache miss.

JIRA Issues: CACHE-9803

Differential Revision: https://phabricator.twitter.biz/D84002"
enbnt,2017-08-23 22:58:28,https://api.github.com/repos/twitter/finagle/git/commits/9eabd12c434b6c304b6845691c9efe7521ee7f23,9eabd12c434b6c304b6845691c9efe7521ee7f23,"finagle-core: reduce PEMEncodedKeyManager thread and resource leaks

Summary: Problem

PEMEncodedKeyManager results in spawning new JVM ShutdownHook
threads for each SSL request termination. This results in leaking resources
that cause increasingly frequent service failures as the leak grows.

Solution

Improve error handling of potential leaking resources (try/finally blocks).
Change TempDirectory use to not create a new ShutdownHook thread
for each invokation, as resources are already cleaned up in the
makeKeystore method. New try/finally blocks should ensure better
resource clean-up.

Result

JVM ShutdownHook threads will no longer spawn on each makeKeystore
invokation. Resources will be less likely to leak if exceptions are thrown
during makeKeystore method execution.

JIRA Issues: OBSERVE-23695

Differential Revision: https://phabricator.twitter.biz/D83859"
mosesn,2017-08-23 22:38:25,https://api.github.com/repos/twitter/finagle/git/commits/3d6670c5096079893ba0a5d47ca52e29057f9614,3d6670c5096079893ba0a5d47ca52e29057f9614,"finagle-http: Add a metric for client-side midstream errors

Summary: Problem

Our streaming story can be a bit messy, and part of this is that errors
midstream have poor visibility, especially client-side.

Solution

Specifically export a metric for midstream errors.

JIRA Issues: CSL-4862

Differential Revision: https://phabricator.twitter.biz/D83708"
jcrossley,2017-08-23 22:06:17,https://api.github.com/repos/twitter/finagle/git/commits/4a419c5ec91f634c54d3d8577800100e4d7756be,4a419c5ec91f634c54d3d8577800100e4d7756be,"finagle-core: DynamicTimeoutModule uses current value of Tunable as default

Summary: Problem

DynamicTimeout uses the value of the TimeoutFilter Tunable param
at the time of filter construction as its default timeout. If the value
of the Tunable changes, the default timeout does not.

Solution

DynamicTimeout now applies the Tunable on every request (if there
is no set timeout for that request) to get the default timeout to use.

JIRA Issues: CSL-5057

Differential Revision: https://phabricator.twitter.biz/D81886"
baroquebobcat,2017-08-23 21:33:27,https://api.github.com/repos/twitter/finagle/git/commits/700e0a4a715f3b0aa54752b9f263c60fa2423e28,700e0a4a715f3b0aa54752b9f263c60fa2423e28,"[strict-deps] Mark remaining CSL targets as strict_deps=True. Add exports to CSL targets

Summary: Problem

Not all CSL targets use strict_deps. Many targets that depend on CSL targets implicitly rely on those targets dependencies being on the compile classpath.

Solution

This changeset converts the remaining core targets to strict_deps, and adds exports to the targets that expose types from their dependencies. For the most part this was done using a script that analyzed the used types in the compiled class files.

The export generation script generated exports for dependencies that are necessary to compile against the types within a given target. It did that by collecting the dependencies that owned super types or annotations used in each target.

Result

All CSL targets have strict_deps enabled. For CSL targets that have annotations or super types that may be necessary for their dependent targets to compile, they export their dependencies that provide those annotations and types.

Things to note:
* There are some cases where it appears to have removed dependencies. This is because there are places where the script would prune dependencies that were provided by an alias.
* The script doesn't take into account pickled Scala types, so the cases where they were the source of compilation failures were handled manually.
* Sorting. The script sorted the dependency lists and the export lists. In the cases where the lists were already sorted, that wasn't a large change, but some targets dependencies were only partially sorted before.

Differential Revision: https://phabricator.twitter.biz/D80632"
jcrossley,2017-08-23 14:50:54,https://api.github.com/repos/twitter/finagle/git/commits/1baef63160e287dfff6b2e2e8efea4d82fae7248,1baef63160e287dfff6b2e2e8efea4d82fae7248,"finagle-http: HttpCodec object for encoding/decoding Requests/Responses

Summary: Problem

We'd like to separate encoding/decoding Requests/Responses to/from
Strings and byte arrays from the Request/Response types.

Solution

Introduce HttpCodec and appropriate encoding/decoding methods.
Deprecate encoding/decoding methods on Request/Response, and
migrate all usages to use HttpCodec.

JIRA Issues: CSL-4924

TBR=true

NO_USER_HOOK=1

Differential Revision: https://phabricator.twitter.biz/D81341"
jcrossley,2017-08-23 14:34:20,https://api.github.com/repos/twitter/finagle/git/commits/7de28ac5e67eaba7a7e123ab01f3412530f45636,7de28ac5e67eaba7a7e123ab01f3412530f45636,"finagle-core: Mark ServerBuilderTest#registers server with bound address as flaky

Summary: Problem / Solution

The test fails often. Mark it as flaky for now and fix later.

JIRA Issues: CSL-5119

Differential Revision: https://phabricator.twitter.biz/D83712"
kevinoliver,2017-08-22 19:53:36,https://api.github.com/repos/twitter/finagle/git/commits/5dfcf51239d5f51bfd7577aa78e4dd711bc6a29d,5dfcf51239d5f51bfd7577aa78e4dd711bc6a29d,"finagle-memcached: Remove deprecated BaseClient.release

Summary: Problem / Solution

`BaseClient.release` was deprecated in favor of `close` for the 7.0
release. This change removes that API.

JIRA Issues: csl-4760

TBR=true

Differential Revision: https://phabricator.twitter.biz/D83168"
bryce-anderson,2017-08-22 18:35:49,https://api.github.com/repos/twitter/finagle/git/commits/a968135159edacf50f1a131c9e0d4bf87a983e99,a968135159edacf50f1a131c9e0d4bf87a983e99,"finagle-core: Convert String[Client|Server] to objects

Summary: Problem / Solution

There is no value in making StringClient and StringServer traits/mixins
since there is nothing that can be overridden etc, so let's just make
them objects like all our other server and client implementations.

JIRA Issues: CSL-5112

Differential Revision: https://phabricator.twitter.biz/D83483"
vkostyukov,2017-08-22 18:29:19,https://api.github.com/repos/twitter/finagle/git/commits/4ab287779f355a1391750c20f0e227ce2ad4618a,4ab287779f355a1391750c20f0e227ce2ad4618a,"finagle|util|ts: Run (not just compile) Java compilation tests from sbt

Summary: Problem

Depending on JUnit from sbt tests isn't enough to run them (enough to compile though).

Solution

Depend on `junit-interface` instead (as described in http://www.scala-sbt.org/0.13/docs/Testing.html#JUnit).

JIRA Issues: CSL-5096

Differential Revision: https://phabricator.twitter.biz/D83295"
cacoco,2017-08-22 01:09:00,https://api.github.com/repos/twitter/finagle/git/commits/5d8dd660dd18ee58ea7cf470c7826145ae10cb05,5d8dd660dd18ee58ea7cf470c7826145ae10cb05,"finagle-core: Unregister ServerRegistry entry on StackServer close

Summary: Problem

A StackServer is registered in the ServerRegistry on #serve but not
removed from the registry on close.

Solution

Unregister the StackServer entry from the ServerRegistry on close
of the StackServer

JIRA Issues: CSL-5090

TBR=true

Differential Revision: https://phabricator.twitter.biz/D83200"
bryce-anderson,2017-08-21 17:22:01,https://api.github.com/repos/twitter/finagle/git/commits/ce811a206411ea61b0fb309306614e3056b88908,ce811a206411ea61b0fb309306614e3056b88908,"finagle-netty: Don't consider ch.isWritable in ChannelTransport.status

Summary: Problem / Solution

We don't get a lot of benefit from checking whether the channel is
considered writable when reporting the status of the ChannelTransport,
and this is inconsistent with the Netty3 ChannelTransport behavior, so
remove it.

JIRA Issues: CSL-5084

Differential Revision: https://phabricator.twitter.biz/D82670"
ryanoneill,2017-08-18 20:45:40,https://api.github.com/repos/twitter/finagle/git/commits/0ceabb45259f232b5ab8ef480b9d135941162472,0ceabb45259f232b5ab8ef480b9d135941162472,"util,finagle,finatra: Stop Publishing Root Projects

Summary: Problem / Solution

The root projects for `util`, `finagle`, and `finatra` are currently
being published to Maven Central. This change disables publishing for
those root projects.

JIRA Issues: CSL-4730

Differential Revision: https://phabricator.twitter.biz/D82506"
kevinoliver,2017-08-18 20:19:29,https://api.github.com/repos/twitter/finagle/git/commits/c8fe89e9a84aacce9c16dac6e9112994725b13f3,c8fe89e9a84aacce9c16dac6e9112994725b13f3,"util-events: Remove sbt build dependencies

Summary: Probem / Solution

util-events was removed but a few stray sbt references
remained lurking in the shadows. This removes them.

Differential Revision: https://phabricator.twitter.biz/D82756"
bryce-anderson,2017-08-18 19:45:45,https://api.github.com/repos/twitter/finagle/git/commits/b71ec3d36b546fa53c13a62d61a0b0406162ebb1,b71ec3d36b546fa53c13a62d61a0b0406162ebb1,"finagle-netty4: Add Netty4 PushChannelHandle implementation

Summary: Problem / Solution

We need a Netty4 implementation of the PushChannelHandle before we can
make the Netty4 PushListener and PushTransporter implementations.

JIRA Issues: CSL-5053

Differential Revision: https://phabricator.twitter.biz/D81857"
gshannon,2017-08-18 14:58:10,https://api.github.com/repos/twitter/finagle/git/commits/a00c3c2617da2e5f3a1bdc2d47454212b9a4bddc,a00c3c2617da2e5f3a1bdc2d47454212b9a4bddc,"Added Utf8_bin collation definition to Charset

JIRA Issues: DSTR-3495

Differential Revision: https://phabricator.twitter.biz/D82307"
ryanoneill,2017-08-18 01:04:00,https://api.github.com/repos/twitter/finagle/git/commits/93618f4fe7849d775e422d7c1d6bbb5b8f0ba1b5,93618f4fe7849d775e422d7c1d6bbb5b8f0ba1b5,"finagle-netty4: Engine Factories Should Load All Chain Certs

Summary: Problem

The `Netty4ClientEngineFactory` and `Netty4ServerEngineFactory` only
load the first chain certificate in the file when using
`KeyCredentials.CertKeyAndChain`.

Solution

Change the respective implementations to load all certificates in the
chain file.

JIRA Issues: CSL-5046

Differential Revision: https://phabricator.twitter.biz/D82414"
dschobel,2017-08-17 23:16:34,https://api.github.com/repos/twitter/finagle/git/commits/ace2573d91237170a54b688503557647c931af7e,ace2573d91237170a54b688503557647c931af7e,"twitter-server: make shadow admin server compatible with native transport

Summary: Problem

Twitter-server's shadow admin server expliciltly configures a NIO workerpool
which is incompatible when the native transport is configured within Finagle.

Solution

Check native transport configuration and instantiate the correct worker pool
type.

JIRA Issues: CSL-5082

Differential Revision: https://phabricator.twitter.biz/D82326"
ryanoneill,2017-08-17 20:17:04,https://api.github.com/repos/twitter/finagle/git/commits/8ea7c3dc77a214706dd6063330db08ff88dec16c,8ea7c3dc77a214706dd6063330db08ff88dec16c,"finagle-thrift: Change EndToEndTest to use Mutual Authentication

Summary: Problem / Solution

The SSL/TLS end to end test for finagle-thrift currently uses one-way
authentication and does not verify the certificate. Change this test
to use mutual authentication and verify the certificates.

JIRA Issues: CSL-5073

Differential Revision: https://phabricator.twitter.biz/D82312"
jcrossley,2017-08-17 18:31:34,https://api.github.com/repos/twitter/finagle/git/commits/960f026c91e824c76368f208a61069d953f7df5a,960f026c91e824c76368f208a61069d953f7df5a,"finagle-core: StringClient and StringServer on N4

Summary: Problem / Solution

We're working towards removing Netty 3, so migrate StringClient and
StringServer to Netty 4.

JIRA Issues: CSL-5012

Differential Revision: https://phabricator.twitter.biz/D80825"
kevinoliver,2017-08-16 20:35:19,https://api.github.com/repos/twitter/finagle/git/commits/95107b2762fa5ea894dc59a8421aca291348b33e,95107b2762fa5ea894dc59a8421aca291348b33e,"finagle: Add docs around logical requests to retries

Summary: Problem

The client docs for Retries do not mention logical requests
or how these are accounted for.

Solution

Add docs about how retries are accounted for with appropriate
links.

JIRA Issues: csl-4678

Differential Revision: https://phabricator.twitter.biz/D81779"
vkostyukov,2017-08-16 18:33:52,https://api.github.com/repos/twitter/finagle/git/commits/71436f420d403d4b5d2ac04caa0ccdab11dc8bb8,71436f420d403d4b5d2ac04caa0ccdab11dc8bb8,"finagle-docs: Document Finagle debug metrics

Summary: Some of the Finagle metrics are now marked ""debug"". We're documenting them
in this change.

JIRA Issues: CSL-4886

Differential Revision: https://phabricator.twitter.biz/D81549"
jcrossley,2017-08-16 00:18:57,https://api.github.com/repos/twitter/finagle/git/commits/f07ebb6475ec38ee8ef77f526c724d98c2b2d95e,f07ebb6475ec38ee8ef77f526c724d98c2b2d95e,"finagle, util: Promote Tunables to public

Summary: Problem / Solution

Tunables have been successfully used internally for a while.
Let's make them public and add a friendlier client configuration
API.

JIRA Issues: CSL-4255

TBR=true

Differential Revision: https://phabricator.twitter.biz/D80751"
ryanb93,2017-08-15 23:42:42,https://api.github.com/repos/twitter/finagle/git/commits/b4e73eef3d93487284173a4f884e06c307ff1749,b4e73eef3d93487284173a4f884e06c307ff1749,"finagle: Update ADOPTERS.md

Summary: Problem / Solution
Add Hotels.com to Finagle adopters.

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

JIRA Issues: CSL-5071

Differential Revision: https://phabricator.twitter.biz/D81561"
dschobel,2017-08-15 21:59:37,https://api.github.com/repos/twitter/finagle/git/commits/fae57e6086e3131a20130999e609bb187adb4bbd,fae57e6086e3131a20130999e609bb187adb4bbd,"twitter-oss: Prepare OSS libraries for release

Summary: Problem

We want to release the next versions of our Twitter OSS libraries:

util -> 7.0.0
scrooge -> 4.19.0
finagle -> 7.0.0
twitter-server -> 1.31.0
finatra -> 2.12.0

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-4761

Differential Revision: https://phabricator.twitter.biz/D81321"
ryanoneill,2017-08-15 21:07:44,https://api.github.com/repos/twitter/finagle/git/commits/83b71295455d7a0a71043acfa72d1da875840afa,83b71295455d7a0a71043acfa72d1da875840afa,"finagle: Update Test Certificates Expiration Dates

Summary: Problem / Solution

All the test certificates used with Finagle are set to expire within
the next year. Regenerate them to expire 10 years from now instead
(August 2027).

JIRA Issues: CSL-4860

Differential Revision: https://phabricator.twitter.biz/D81376"
vkostyukov,2017-08-15 03:08:13,https://api.github.com/repos/twitter/finagle/git/commits/98e8d6edc30f01c716d2755f57ff739021cb0234,98e8d6edc30f01c716d2755f57ff739021cb0234,"finagle-netty4-http: Promote Finagle HTTP/1.1 implementation based on Netty 4 out of exp

Summary: Finagle HTTP/1.1 implementation is no longer experimental hence should be moved
out the `exp` package.

JIRA Issues: CSL-5032

Differential Revision: https://phabricator.twitter.biz/D80181"
vkostyukov,2017-08-15 01:38:34,https://api.github.com/repos/twitter/finagle/git/commits/b89042a35ab0f39637e48bb89b170c80c95f03cf,b89042a35ab0f39637e48bb89b170c80c95f03cf,"finagle-netty4: Convert trackReferenceLeaks into a flag (from a toggle)

Summary: Finagle's `trackReferenceLeaks` could be a CLI flag (no need for toggle).

JIRA Issues: CSL-5052

Differential Revision: https://phabricator.twitter.biz/D80654"
kevinoliver,2017-08-15 00:47:05,https://api.github.com/repos/twitter/finagle/git/commits/65d32659f87492e1133ee5dc8cc002bdd1f9029b,65d32659f87492e1133ee5dc8cc002bdd1f9029b,"finagle, util, twitterserver: Relocate JVM metrics

Summary: Problem

The JVM metrics are a useful building block that live in TwitterServer
and the exported metrics are only lightly documented.

Solution

* Move the code to util-jvm and registration into Finagle's
  initialization.

* Deprecate `JvmStats` in TwitterServer in favor of util-jvm version.

* Add documentation to the many exported metrics.

Result

More better docs and code that can be used with less dependencies.

JIRA Issues: csl-4813

Differential Revision: https://phabricator.twitter.biz/D80883"
vkostyukov,2017-08-15 00:04:46,https://api.github.com/repos/twitter/finagle/git/commits/caf7fa6b19888f6666e3ca52f03aea3c4e465331,caf7fa6b19888f6666e3ca52f03aea3c4e465331,"finagle-netty4: Export N4 metrics as part of Netty4Init

Summary: Now that we have `Netty4Init` that runs on Finagle initialization, we can move there
exporting N4 metrics and registry entries.

Differential Revision: https://phabricator.twitter.biz/D80561"
bryce-anderson,2017-08-14 23:47:39,https://api.github.com/repos/twitter/finagle/git/commits/d2961ab3adee04c774ff0173f8e21318718147ab,d2961ab3adee04c774ff0173f8e21318718147ab,"finagle-http: Allow Content-Length header in chunked response

Summary: Problem

Sometimes its nice to stream a HTTP response back to the peer with a
Content-Length header but right now any Response that is considered
chunked as defined by Response.isChunked will have its Content-Length
header stripped and Transfer-Encoding: chunked header added.

Solution

Do a more elaborate evaluation process for chunked responses that allows
for responses to be streamed and have a content-length header.

JIRA Issues: CSL-5037

Differential Revision: https://phabricator.twitter.biz/D80087"
dschobel,2017-08-14 22:53:19,https://api.github.com/repos/twitter/finagle/git/commits/f432bd443c4998431e4cbfeb6934916e7310c9a8,f432bd443c4998431e4cbfeb6934916e7310c9a8,"finagle-mux: remove ref-counting control toggle

Summary: Problem / Solution

The ref-counting control toggle has been at 100% for over
two months so it's safe to assume that it's ready to be
the exclusive option.

JIRA Issues: CSL-5033

Differential Revision: https://phabricator.twitter.biz/D80225"
dschobel,2017-08-14 22:04:53,https://api.github.com/repos/twitter/finagle/git/commits/7610016b6d01a267c4cc824a1753cce1eb81d2d2,7610016b6d01a267c4cc824a1753cce1eb81d2d2,"finagle-http: configurable expect-continue responses

Summary: Problem / Solution

It is not always correct to send 100-CONTINUE responses to 'expect' headers, for
example when operating as a proxy, so we add the ability for servers to disable
automatic 100-CONTINUE responses.

JIRA Issues: CSL-4995

Differential Revision: https://phabricator.twitter.biz/D80017"
bryce-anderson,2017-08-14 21:53:48,https://api.github.com/repos/twitter/finagle/git/commits/907fa97991ce40708ed00b96d09577cad4788774,907fa97991ce40708ed00b96d09577cad4788774,"finagle-base-http: Remove Netty 3 types from the finagle HTTP model

Summary: Problem

The finagle HTTP model is a proxy over the Netty 3 HTTP model.
This hinders the remove of Netty 3 and adds a vector for users
of fingle-http to keep using the underlying implementation details.

Solution

Don't back the finagle HTTP models representation by Netty HttpMessage
and its subtypes. Note that while we still use the Netty packages for
doing things like multipart and store headers, there are not any Netty
types accessible from the finagle model.

JIRA Issues: CSL-4006

TBR=true

Differential Revision: https://phabricator.twitter.biz/D74519"
isabelmartin,2017-08-14 21:51:45,https://api.github.com/repos/twitter/finagle/git/commits/95c54bc1356312d8b3831a0ef0fb37c21c99d592,95c54bc1356312d8b3831a0ef0fb37c21c99d592,"finagle-stats: Add tunable SBT dependency

Summary: Problem:
A missing util Tunable dependency is causing the SBT build to fail.

Solution:
Add it!

JIRA Issues: CSL-5058

Differential Revision: https://phabricator.twitter.biz/D80786"
mosesn,2017-08-14 21:47:40,https://api.github.com/repos/twitter/finagle/git/commits/c1cb65567a78da59575270c5c7dacc2c5b832501,c1cb65567a78da59575270c5c7dacc2c5b832501,"{util,scrooge,finagle,twitter-server,finatra}: Update sbt plugins

Summary: Problem

We want to be ready to upgrade to sbt 1.0 when the time comes.

Solution

Upgrade to recent versions of sbt plugins in preparation.

JIRA Issues: CSL-5003

Differential Revision: https://phabricator.twitter.biz/D80617"
mehmetgunturkun,2017-08-14 20:07:42,https://api.github.com/repos/twitter/finagle/git/commits/598acc5416798d37e4c796ab115cbda9a34fb787,598acc5416798d37e4c796ab115cbda9a34fb787,"finagle-mysql: Support unsigned integer

Summary: Problem

finagle-mysql does not support unsigned integers. If an integer field is
with unsigned attribute, it has larger maximum limit (4294967295) than
signed integer. Since there is no support for unsigned integer in Java,
if the value is higher than Integer.MAX_VALUE (2147483647), it is
interpreted as IntValue(-1)

Solution

In order to understand the field is unsigned or not, I added bit masks
for type attributes and a function to Field class. Bit masks for
attributes are listed in the source code of mysql
(https://github.com/mysql/mysql-server/blob/5.7/include/mysql_com.h).
During field decoding, if the field is unsigned, I created a LongValue
and used readUnsignedIntLE function from MysqlBufReader.

Additionally, added an integration test case into
com.twitter.finagle.mysql.integration.TypeTest.NumericTypeTest.Added
unsigned int field, inserted an integer value higher than
Integer.MAX_VALUE, and expected to be parsed as LongValue.

Signed-off-by: Bryce Anderson <banderson@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D80878"
bryce-anderson,2017-08-14 18:13:54,https://api.github.com/repos/twitter/finagle/git/commits/7cf3a02ac6641469023720744e1ddd4ed9ea78ef,7cf3a02ac6641469023720744e1ddd4ed9ea78ef,"Revert ""finagle-mysql: Support unsigned integer""

Summary: This reverts commit ba1438af3971129c7e6c80080efdf669a7fde4e3.

This commit is based on a Github PR, #618, and the authorship wasn't merged
correctly so this will revert the work, then a follow up will revert-the-revert to
fix the authorship.

Differential Revision: https://phabricator.twitter.biz/D80814"
bryce-anderson,2017-08-14 17:14:07,https://api.github.com/repos/twitter/finagle/git/commits/8500e000cfd17969ef8fed296c4c13ab18ff6c41,8500e000cfd17969ef8fed296c4c13ab18ff6c41,"finagle-mysql: Support unsigned integer

Summary: Problem

finagle-mysql does not support unsigned integers. If an integer field is
with unsigned attribute, it has larger maximum limit (4294967295) than
signed integer. Since there is no support for unsigned integer in Java,
if the value is higher than Integer.MAX_VALUE (2147483647), it is
interpreted as IntValue(-1)

Solution

In order to understand the field is unsigned or not, I added bit masks
for type attributes and a function to Field class. Bit masks for
attributes are listed in the source code of mysql
(https://github.com/mysql/mysql-server/blob/5.7/include/mysql_com.h).
During field decoding, if the field is unsigned, I created a LongValue
and used readUnsignedIntLE function from MysqlBufReader.

Additionally, added an integration test case into
com.twitter.finagle.mysql.integration.TypeTest.NumericTypeTest. Added
unsigned int field, inserted an integer value higher than
Integer.MAX_VALUE, and expected to be parsed as LongValue.

Signed-off-by: Bryce Anderson <banderson@twitter.com>

JIRA Issues: CSL-4698

Differential Revision: https://phabricator.twitter.biz/D78721"
bryce-anderson,2017-08-14 16:39:51,https://api.github.com/repos/twitter/finagle/git/commits/ebf04cfbb47ea99ad3f3563b8e5a8aee4ecfb41f,ebf04cfbb47ea99ad3f3563b8e5a8aee4ecfb41f,"finagle-core: Add experiment push based session abstractions

Summary: Problem

Multiplexing protocols are generally eager in the read path making them
best represented by a push based abstraction, but we only provide pull
based abstractions such as Transport and Dispatcher.

Solution

Build some experimental tools for building push based session
implementations in finagle.

JIRA Issues: CSL-5004

Differential Revision: https://phabricator.twitter.biz/D79610"
vkostyukov,2017-08-11 23:42:09,https://api.github.com/repos/twitter/finagle/git/commits/bf30a78e1d67c834906b9f4bc0ba37a8ff9f2337,bf30a78e1d67c834906b9f4bc0ba37a8ff9f2337,"finagle-stats: Respect verbosity levels while exporting (currently disabled)

Summary: Problem

`JsonExrpoter` does not respect metrics verbosity levels.

Solution

This change introduces a new tunable `com.twitter.finagle.stats.verbose` (can be
adjusted at runtime, no restart required) that allows to whitelist debug-level
metrics, that are not exported otherwise.

Currently, the initial value for a whitelist is * so all debug-metrics are still
being exported.

JIRA Issues: CSL-4892

Differential Revision: https://phabricator.twitter.biz/D79571"
ryanoneill,2017-08-11 22:34:15,https://api.github.com/repos/twitter/finagle/git/commits/fbef7703c4fbeedd2e66c21bfb047fe1b5c759ab,fbef7703c4fbeedd2e66c21bfb047fe1b5c759ab,"finagle-netty4: Add CertKeyAndChain for Netty4ServerEngineFactory

Summary: Problem / Solution

The `Netty4ClientEngineFactory` supports using a `CertKeyAndChain`
option for `KeyCredentials`, whereas the `Netty4ServerEngineFactory`
does not. This change adds support for `CertKeyAndChain` to the
`Netty4ServerEngineFactory`.

JIRA Issues: CSL-5044

Differential Revision: https://phabricator.twitter.biz/D80494"
ryanoneill,2017-08-11 18:35:05,https://api.github.com/repos/twitter/finagle/git/commits/d06ac2af01187538c353cbc3b300f4659450644a,d06ac2af01187538c353cbc3b300f4659450644a,"finagle-memcached: Charset SBT Changes

Summary: Problem

finagle-memcached contains a reference to Apache IO's `Charsets`,
which is not provided as a dependency via SBT.

Solution

Replace the use of Apache IO's `Charsets` with Java's
`StandardCharsets`.

JIRA Issues: CSL-5042

Differential Revision: https://phabricator.twitter.biz/D80455"
kevinoliver,2017-08-10 23:00:52,https://api.github.com/repos/twitter/finagle/git/commits/4315fd4d3ff603abcad6eb344ecd007ccfd012fb,4315fd4d3ff603abcad6eb344ecd007ccfd012fb,"finagle-core: Optimize MonitorFilter

Summary: Problem/Solution

`MonitorFilter` can do less allocations by utilizing the new
`Monitor.getOption` and `Monitor.setOption` APIs.

Result

Reduce allocations in `apply` by 30%, 32 bytes/call.

JIRA Issues: csl-5021

Differential Revision: https://phabricator.twitter.biz/D80076"
bryce-anderson,2017-08-10 19:58:07,https://api.github.com/repos/twitter/finagle/git/commits/d588c680cc06f957c401ee4c5c13b1b83348bad8,d588c680cc06f957c401ee4c5c13b1b83348bad8,"finagle-core: Fix Failure helper functions

Summary: Problem / Solution

Failure.wrap will add the `Wrapped` flag to a Failure even if we are only
adding the flag to a Failure which was passed in, which may not be wrapped.
The Failure.retryable function doesn't ensure that the passed Throwable
isn't already flagged `NonRetryable`.

JIRA Issues: CSL-5040

Differential Revision: https://phabricator.twitter.biz/D79993"
vkostyukov,2017-08-10 19:42:25,https://api.github.com/repos/twitter/finagle/git/commits/229f2e6bf980db8805db050152421fd06a02b0c4,229f2e6bf980db8805db050152421fd06a02b0c4,"finagle-stats: Only assign verbosity at metric's creation

Summary: # Problem

There is a bug when verbosity level of a gauge is only assigned when it's being queried/created for
the second time, which never happens in practice (thanks to cumulative gauges in SR).

# Solution

Always assign the verbosity of any given metric once, when it's created.

JIRA Issues: CSL-4916

Differential Revision: https://phabricator.twitter.biz/D79337"
jcrossley,2017-08-10 18:33:20,https://api.github.com/repos/twitter/finagle/git/commits/e250727b5c9a1231608711f58a610364fb215929,e250727b5c9a1231608711f58a610364fb215929,"finagle-memcached: Change ""UseOneConnection"" toggle to ""UseTwoConnections""

Summary: Problem

Having one connection to from a Finagle Memcached client
to a Memcached server makes the client too susceptible to tcp
issues.

Solution

Change the ""UseOneConnection"" toggle to ""UseTwoConnections"";
this mitigates the effects of a single poor connection.

JIRA Issues: CSL-5028

Differential Revision: https://phabricator.twitter.biz/D79943"
mosesn,2017-08-10 02:08:29,https://api.github.com/repos/twitter/finagle/git/commits/9ab770434310efa186d406c0c3ee4c4ee857fd60,9ab770434310efa186d406c0c3ee4c4ee857fd60,"finagle-mux: Add a toggle and the ability to encode and decode headers

Summary: Problem

We want to start passing 'tls' headers, but don't want to actually send them
until they're ready.

Solution

Add a toggle that will let us add headers safely (and slowly!) and the ability
to encode and decode the headers.

JIRA Issues: CSL-4958, CSL-4960

Differential Revision: https://phabricator.twitter.biz/D79371"
bryce-anderson,2017-08-09 19:03:00,https://api.github.com/repos/twitter/finagle/git/commits/e9e70628803008b2a4b19474731ccd01655786dc,e9e70628803008b2a4b19474731ccd01655786dc,"finagle-http: Convert client HTTP nack logic into a Filter

Summary: Problem

    The HttpClientDispatcher contains logic for converting a HTTP nack
    response to a nack Failure which mixes two unrelated concerns.

    Solution

    Move it into a filter and add it via a Stack module.

JIRA Issues: CSL-4734

Differential Revision: https://phabricator.twitter.biz/D78902"
yufangong,2017-08-09 18:39:47,https://api.github.com/repos/twitter/finagle/git/commits/4d8c23a02004700a50a1caf84cab873997914342,4d8c23a02004700a50a1caf84cab873997914342,"finagle-doc: Update broken links

Summary: Problem:

We have some outdated links in the homepage, user-guide pages, and doc pages.

Solution:

Update them!

JIRA Issues: CSL-4467

Differential Revision: https://phabricator.twitter.biz/D79080"
roanta,2017-08-09 18:26:08,https://api.github.com/repos/twitter/finagle/git/commits/ac11aa55a53f0f54c7db5dae833a5b73e6f1b42c,ac11aa55a53f0f54c7db5dae833a5b73e6f1b42c,"finagle: order aperture ring by shard id

Summary: Problem

The default  socket address ordering for clients is good, but has some shortcomings.
In particular, in environments like Aurora where nodes can be rescheduled
arbitrarily (and assigned new socket addresses), we get more ring churn
than necessary. Instead, in environments like this, we have a  more stable
server identifier – the shard id. We previously were ordering by shard id, but
because we also roll our cluster by shard id, the correlation caused large chunks
of the ring to be impacted. This can be remedied by hashing the shard id with
a well distributed deterministic hash.

Solution

Introduce the ability to set a global address ordering (again) and create a hash
shard id ordering in finagle-serversets.

Result

We have a stable (across process boundary) order that is a well distributed and avoids
any linear correlation between consecutive integers.

JIRA Issues: CSL-4964

Differential Revision: https://phabricator.twitter.biz/D79242"
vkostyukov,2017-08-09 01:35:22,https://api.github.com/repos/twitter/finagle/git/commits/16ef3a4eaee1262c0af40703cd59b9a4c8cf62eb,16ef3a4eaee1262c0af40703cd59b9a4c8cf62eb,"finagle-netty4: Disable default timeouts for SSL handshakes

Summary: We should rely on Finagle's own timeouts (either session acquisition or request timeouts) to interrupt
client-side SSL handshakes instead of keeping Netty timeouts in place.

JIRA Issues: CSL-4987

Differential Revision: https://phabricator.twitter.biz/D78500"
bryce-anderson,2017-08-08 22:57:59,https://api.github.com/repos/twitter/finagle/git/commits/0ed09aa055042e64c7e575ee660c2f44de4a6a4a,0ed09aa055042e64c7e575ee660c2f44de4a6a4a,"finagle-core: Close AsyncSemaphore with retryable failure

Summary: Problem

    The GenSerialClientDispatcher closes its AsyncSemaphore with the result
    of the Transport.onClose Future which may not be retryable. However, we
    know that we never dispatched the request so it is always safe to retry.

    Solution

    Wrap the exception in a Failure with the Retryable flag set to let the
    RequeueFilter give it another shot with a fresh service.

JIRA Issues: CSL-4990

Differential Revision: https://phabricator.twitter.biz/D78904"
ryanoneill,2017-08-08 20:01:36,https://api.github.com/repos/twitter/finagle/git/commits/80a354795c0adb80c93daaafb04722191f3f7d94,80a354795c0adb80c93daaafb04722191f3f7d94,"finagle-memcached sbt test changes

Summary: Problem

finagle-memcached's tests depend on finagle-core's `StringClient`
and `StringServer`. These classes require a dependency on
finagle-netty3 code, which finagle-memcached was missing.

Solution

Add a test dependency on finagle-netty3 to finagle-memcached before
the dependency on finagle-core, so that the correct set of classes is
included when running tests with SBT.

JIRA Issues: CSL-5011

Differential Revision: https://phabricator.twitter.biz/D78865"
yufangong,2017-08-08 17:21:50,https://api.github.com/repos/twitter/finagle/git/commits/6bd620a670c62aba4d3a6236268820f512484126,6bd620a670c62aba4d3a6236268820f512484126,"finagle-doc: Link API doc to com.twitter.finagle

Summary: Problem/Solution:
Our API doc link previous pointed to the package root, change it
to com.twitter.finagle for saving users several clicks.

JIRA Issues: CSL-4617

Differential Revision: https://phabricator.twitter.biz/D78794"
roanta,2017-08-08 15:52:01,https://api.github.com/repos/twitter/finagle/git/commits/48052172d3a961eafd6b33b66f7a4b9ac1897efa,48052172d3a961eafd6b33b66f7a4b9ac1897efa,"finagle-core: test for transient aperture order when nodes are busy

Summary: Problem / Solution

It would be useful to have test which demonstrates that our deterministic ordering
is respected after nodes which are busy transition to a healthy state.

JIRA Issues: CSL-4966

Differential Revision: https://phabricator.twitter.biz/D78592"
yufangong,2017-08-08 06:37:06,https://api.github.com/repos/twitter/finagle/git/commits/896b95a7bb9984266adb27047e4cb1050624c02d,896b95a7bb9984266adb27047e4cb1050624c02d,"scrooge: Change function to service in scala generated finagleService code

Summary: Problem/Solution:

Scrooge now generates functions for server side `ThriftService` method
implementation. We want to change it to `Services` with `Filters`,
making it more composable.

JIRA Issues: CSL-4858

Differential Revision: https://phabricator.twitter.biz/D73619"
vkostyukov,2017-08-08 00:22:29,https://api.github.com/repos/twitter/finagle/git/commits/8d9f4b9d3f3a759cae3050b06ca7d2b06ba27de7,8d9f4b9d3f3a759cae3050b06ca7d2b06ba27de7,"finagle-stats: Keep track of debug metrics

Summary: We need to keep track of debug-level metrics such that we can filter them out while exporting on TwitterServer.

JIRA Issues: CSL-4916

Differential Revision: https://phabricator.twitter.biz/D78150"
vkostyukov,2017-08-07 22:30:24,https://api.github.com/repos/twitter/finagle/git/commits/feeb240a34b790cc488a63c541103b418138eef2,feeb240a34b790cc488a63c541103b418138eef2,"finagle-netty4: Use FinagleInit to set Netty 4 system properties

Summary: Relying on class initialization order while setting Netty 4 system properties is subtle. We should
use Finagle's built-in machinery for it: FinagleInit.

JIRA Issues: CSL-4973

Differential Revision: https://phabricator.twitter.biz/D78454"
roanta,2017-08-07 21:42:57,https://api.github.com/repos/twitter/finagle/git/commits/c98488e1fb5f5c4b6779502e4a11bce5fcda4469,c98488e1fb5f5c4b6779502e4a11bce5fcda4469,"finagle-core: improve logging of aperture window

Summary: Problem / Solution

We can improve the logging of the aperture window by avoiding logging when
we first initialize the class (i.e. aperture size == 0) and also including
the busy vector in the log.

JIRA Issues: CSL-4965

Differential Revision: https://phabricator.twitter.biz/D78506"
dschobel,2017-08-07 19:35:36,https://api.github.com/repos/twitter/finagle/git/commits/df2ee00f60a8ea64ae23893fee53b7a75d2b58f0,df2ee00f60a8ea64ae23893fee53b7a75d2b58f0,"finagle-core: enable internal finagle-init

Summary: Problem / Solution

Depend on internal FinagleInit.

JIRA Issues: CSL-4993

Differential Revision: https://phabricator.twitter.biz/D78504"
mosesn,2017-08-07 19:04:51,https://api.github.com/repos/twitter/finagle/git/commits/fa32ff5c6c1d2e4f4e2cd7aea5f2598a1911f49e,fa32ff5c6c1d2e4f4e2cd7aea5f2598a1911f49e,"{util,finagle,scrooge,twitter-server}: Stop using shields.io

Summary: Problem

shields.io seems to have a poor success rate.

JIRA Issues: CSL-5005

Differential Revision: https://phabricator.twitter.biz/D78550"
bryce-anderson,2017-08-07 18:52:16,https://api.github.com/repos/twitter/finagle/git/commits/06bb9b410f68a3bdfa1684b8dc6593138c3ad5a7,06bb9b410f68a3bdfa1684b8dc6593138c3ad5a7,"finagle-mysql: Decode binary medium row as 4 bytes

Summary: Problem / Solution

The spec dictates that a medium is decoded as 4 bytes with the last byte
always being 0x00, but we are decoding as 3 bytes, so change it read a
little endian int32.

JIRA Issues: CSL-4991

Differential Revision: https://phabricator.twitter.biz/D78505"
jcrossley,2017-08-07 18:25:31,https://api.github.com/repos/twitter/finagle/git/commits/7e7fa67877acc6a58c921a4bd2107ab1c961a888,7e7fa67877acc6a58c921a4bd2107ab1c961a888,"finagle-netty4, finagle-http, finagle-http2: Override the allocator.maxOrder system property in time

Summary: Problem

We aren't overriding the io.netty.allocator.maxOrder system property in time,
causing the pooled buffer chunk size to be of order 11, not 7 as desired.

Solution

Force loading of Toggle code in Netty4Transporters/Listeners, which
sets this property.

JIRA Issues: CSL-4971

Differential Revision: https://phabricator.twitter.biz/D77832"
jcrossley,2017-08-03 21:05:43,https://api.github.com/repos/twitter/finagle/git/commits/9cc08d15216497bb03a1cafda96b7266cfbbcff1,9cc08d15216497bb03a1cafda96b7266cfbbcff1,"finagle: Fix unidoc

Summary: Problem

Unidoc generation was failing because we don't make scaladoc for
finagle-serversets Java files.

Solution

Exclude these files from unidoc.

Differential Revision: https://phabricator.twitter.biz/D77668"
bryce-anderson,2017-08-03 14:09:09,https://api.github.com/repos/twitter/finagle/git/commits/3f26d7465bdcbb17e335abcc54f12c3656ee50ca,3f26d7465bdcbb17e335abcc54f12c3656ee50ca,"finagle-http2: Fix race between stream writing and resetting

Summary: Problem

In the HTTP/2 ChildTransport construct, there is a race between
receiving the Response LastHttpContent from the channel, writing the
Request LastHttpContent and subsequently setting the state to Idle,
and actually reading the LastHttpContent from
the AsyncQueue.

Solution

Make the checkFinished method ensure that all messages have been read
from the AsyncQueue before setting the ChildTransport state to Idle.

JIRA Issues: CSL-4856

Differential Revision: https://phabricator.twitter.biz/D76435"
mosesn,2017-08-02 23:28:46,https://api.github.com/repos/twitter/finagle/git/commits/a647fb9cb051ddccaf8efff1533844264cdcc1d1,a647fb9cb051ddccaf8efff1533844264cdcc1d1,"finagle-stats: Remove dependency on commons metrics

Summary: Problem

finagle-stats has a dependency on commons which inflates its footprint and makes
it more difficult to manage.  However, this is complicated by the fact that some
tooling relies upon the shared dependency where they assume they can use the
commons API and the finagle one interchangeably.

Solution

Reverse the dependency, so that you can still use the two APIs interchangeably,
but finagle-stats backs commons metrics, instead of the other way around.

Result

finagle-stats no longer pulls in commons metrics.

JIRA Issues: CSL-2447

Differential Revision: https://phabricator.twitter.biz/D73497"
dschobel,2017-08-01 23:56:51,https://api.github.com/repos/twitter/finagle/git/commits/4f47e6b8ae4a14b1ebb4c6cb78bb4ffbe4a7e165,4f47e6b8ae4a14b1ebb4c6cb78bb4ffbe4a7e165,"finagle-init: introduce module to support service loading init code

Summary: Problem

It is generally useful to discover and run initialization code for Finagle
applications.

Solution

Introduce a module to support loading initialization code based on the runtime
environment.

JIRA Issues: CSL-4938

Differential Revision: https://phabricator.twitter.biz/D75950"
bryce-anderson,2017-08-01 17:30:23,https://api.github.com/repos/twitter/finagle/git/commits/0f55d952c62b281084858561926b7a431d2b6e7e,0f55d952c62b281084858561926b7a431d2b6e7e,"finagle-netty4: Extract generic parts of Netty4Transporter

Summary: NOTE: Unfortunately it's difficult to see, but the vast majority of this change is moving the `Netty4Transporter.build` logic into the helper class, copy paste. The difference is in how the Promise is satisfied, and it has been made into a generic type `T` instead of a `ChannelTransport[In, Out]`, which is not refined at the use site in `Netty4Transporter`. The builder returns a `Future[T]` instead of a raw `T` to facilitate the push model. This allows extracting a `Service` from the `ServiceFactory` (a Future) and initializing the session before the pipeline starts to get data (it waits until the `Future` has resolved).

Problem / Solution

Much of the logic in Netty4Transporter is not specific to the
Transporter model so to prepare for the experimental push-based API we
extract the majority of it so that it can be shared.

JIRA Issues: CSL-4935

Differential Revision: https://phabricator.twitter.biz/D75423"
stuhood,2017-08-01 06:06:06,https://api.github.com/repos/twitter/finagle/git/commits/79ade1ee95a1166b47ef6a90818a23348a01fbe5,79ade1ee95a1166b47ef6a90818a23348a01fbe5,"Re-enable scalafmt in Source.

Summary: Re-enables scalafmt in Source. Depends on https://phabricator.twitter.biz/D76290

JIRA Issues: EE-525

TBR=true

NO-QUEUE=true

Differential Revision: https://phabricator.twitter.biz/D76301"
jcrossley,2017-08-01 04:08:03,https://api.github.com/repos/twitter/finagle/git/commits/9969cebe126b1a4fd6429141bff638f51593ceea,9969cebe126b1a4fd6429141bff638f51593ceea,"finagle-memcached: Decode using ByteReader

Summary: Problem

We can cut out the intermediate Buf representation when decoding by extracting
directly from a ByteReader that wraps the underlying Netty ByteBuf. Less
allocations mean efficiency gains.

Solution

Have the FramingDecoder decode from a ByteReader.

JIRA Issues: CSL-4853

Differential Revision: https://phabricator.twitter.biz/D70256"
yufangong,2017-08-01 01:11:20,https://api.github.com/repos/twitter/finagle/git/commits/e3bca49423d2a8ded85a8545bab376efec8107d7,e3bca49423d2a8ded85a8545bab376efec8107d7,"finagle-mux: Add time bounds on the thread.join calls in WindowedByteCounterTest

Summary: Problem:

WindowedByteCounterTest hung in Travis ci.

Solution:

Add time bounds for thread.join calls.

JIRA Issues: CSL-4843

Differential Revision: https://phabricator.twitter.biz/D76197"
vkostyukov,2017-07-31 23:25:15,https://api.github.com/repos/twitter/finagle/git/commits/cc56f241f0819938689997f4a535f2217dcf6fb1,cc56f241f0819938689997f4a535f2217dcf6fb1,"finagle: Disable client metrics on zipkin-tracer

Summary: Problem / Solution

Zipkin tracer doesn't have to report all Finagle-level metrics under
`clnt/zipkin-tracer/`. Having just `requests`/`success`/`failures`
reported is essential for operations.

JIRA Issues: CSL-4581, CSL-4582

Differential Revision: https://phabricator.twitter.biz/D71965"
stuhood,2017-07-28 17:07:11,https://api.github.com/repos/twitter/finagle/git/commits/1a2472c843e8e0db274d00f59e558169b2cbda1f,1a2472c843e8e0db274d00f59e558169b2cbda1f,"Enable scalafmt in Source: Part 14

Scalafmt is being enabled in Source: please see http://go/scalafmt for more information.

RB_ID=920554
TBR=true
NO_USER_HOOK=1"
stuhood,2017-07-28 09:33:57,https://api.github.com/repos/twitter/finagle/git/commits/adcdab68be41ec8e694522a85b25f2d688f0b8de,adcdab68be41ec8e694522a85b25f2d688f0b8de,"Enable scalafmt in Source: Part 12

Scalafmt is being enabled in Source: please see http://go/scalafmt for more information.

RB_ID=920544
TBR=true
NO_USER_HOOK=1"
vkostyukov,2017-07-28 00:51:19,https://api.github.com/repos/twitter/finagle/git/commits/4fe0f199e3f694bb8841ff11c4f00c77cdcddc7c,4fe0f199e3f694bb8841ff11c4f00c77cdcddc7c,"finagle: Mark some of Finagle metrics  as Verbosity.Debug (not yet respected)

Summary: This change marks an initial list of Finagle metrics as ""debug"".

NOTE: The verbosity levels aren't yet respected so this change has zero effect at runtime.

The following metrics now defined as `Verbosity.Debug`.

- `request_payload_bytes` (histogram)
- `response_payload_bytes` (histogram)
- `finagle/netty4/*` (8 counters)
- `connection_sent_bytes` (histogram)
- `connection_received_bytes` (histogram)
- `connection_duration` (histogram)
- `socket_writable_ms` (counter)
- `socket_unwritable_ms`(counter)
- `failuredetector/ping_latency_us` (histogram)
- `finagle/timer/pending_tasks` (histogram)
- `finagle/timer/deviation_ms` (histogram)

JIRA Issues: CSL-4891

Differential Revision: https://phabricator.twitter.biz/D74937"
bryce-anderson,2017-07-27 21:54:08,https://api.github.com/repos/twitter/finagle/git/commits/d7a5fd47486ea4324108fdc3655302f0e8528991,d7a5fd47486ea4324108fdc3655302f0e8528991,"finagle-mux: Add size method to TagMap

Summary: Problem / Solution

It can be useful to know the number of mapped tags so we add a `size`
method to `TagMap`.

Differential Revision: https://phabricator.twitter.biz/D75258"
dschobel,2017-07-27 17:59:29,https://api.github.com/repos/twitter/finagle/git/commits/7aaee71830963f57d96ad7c238f307cf2c55c1ad,7aaee71830963f57d96ad7c238f307cf2c55c1ad,"finagle-netty4: use new-style toggles for native transport

Summary: Problem

We want to roll out new netty4 features (like native transport) with
new-style toggles.

Solution

Change the toggle to be new-style.

Differential Revision: https://phabricator.twitter.biz/D74824"
stuhood,2017-07-27 06:38:04,https://api.github.com/repos/twitter/finagle/git/commits/9cb72b1d7f8a6dba335c548448cce70f4a736a14,9cb72b1d7f8a6dba335c548448cce70f4a736a14,"Enable scalafmt in Source: Part 7

Scalafmt is being enabled in Source: please see http://go/scalafmt for more information.

RB_ID=920464
TBR=true
NO_USER_HOOK=1"
vkostyukov,2017-07-27 06:12:41,https://api.github.com/repos/twitter/finagle/git/commits/a70b4b92bf025e30284d4ef96d1d3150c298ef97,a70b4b92bf025e30284d4ef96d1d3150c298ef97,"finagle-netty4: Remove UsePooling toggle

Summary: We've been running with pooling enable for 1.5 months and we think it's safe to remove the
toggle now (and switch to pooling by default).

JIRA Issues: CSL-4929

Differential Revision: https://phabricator.twitter.biz/D75014"
mosesn,2017-07-27 00:53:17,https://api.github.com/repos/twitter/finagle/git/commits/094e7bdc516d799fafa1af8b382170c771a8860b,094e7bdc516d799fafa1af8b382170c771a8860b,"finagle-http: Rename the h2 toggle

Summary: Problem

We want to roll out new http features (like h2) with new-style toggles.

Solution

Change the toggle to be new-style and rename it to v2.

JIRA Issues: CSL-4883

Differential Revision: https://phabricator.twitter.biz/D74028"
bryce-anderson,2017-07-27 00:36:52,https://api.github.com/repos/twitter/finagle/git/commits/523ad68cdc4464b3e4cebc46479a422df190f1a0,523ad68cdc4464b3e4cebc46479a422df190f1a0,"finagle-netty4: Remove unused type params from ListeningServerBuilder

Summary: Problem / Solution

ListeningServerBuilder has type params that it doesn't use so we remove
them.

Differential Revision: https://phabricator.twitter.biz/D75063"
stuhood,2017-07-26 21:23:48,https://api.github.com/repos/twitter/finagle/git/commits/69499a33b39ea119459e4b3457e6932f178054c9,69499a33b39ea119459e4b3457e6932f178054c9,"Enable scalafmt in Source: Part 5

Scalafmt is being enabled in Source: please see http://go/scalafmt for more information.

RB_ID=920366
TBR=true
NO_USER_HOOK=1"
bryce-anderson,2017-07-26 17:11:48,https://api.github.com/repos/twitter/finagle/git/commits/7f264a24939a0cf1ab7457c0a230320c3ff5cd7d,7f264a24939a0cf1ab7457c0a230320c3ff5cd7d,"finagle-netty4: Extract general parts of Netty4Listener

Summary: Problem / Solution

Netty4Listener is specialized to the Transport model, but the majority
of the logic is not specific to Transport. To enable the construction of
Listeners that don't use the Transport model we should extract the
generic parts which are everything but the installation of the
ServerBridge.

JIRA Issues: CSL-4921

Differential Revision: https://phabricator.twitter.biz/D74426"
bryce-anderson,2017-07-26 16:42:19,https://api.github.com/repos/twitter/finagle/git/commits/5cf7fec783806f0ccf373c383b890fe298f22588,5cf7fec783806f0ccf373c383b890fe298f22588,"finagle-mux: Reduce synchronization points in TagMap/TagSet

Summary: Problem / Solution

Both TagMap and TagSet do extensive synchronization on `self` to provide
memory safety, but much of it isn't necessary. To remove some of it, we
make TagSet an implementation detail of TagMap and remove TagSets
internal synchronization, relying on TagMap to manage access safely, which
it already does.

JIRA Issues: CSL-4918

Differential Revision: https://phabricator.twitter.biz/D74207"
stuhood,2017-07-26 14:00:31,https://api.github.com/repos/twitter/finagle/git/commits/5c89631c0003b31f29a53a823142c441c55318ec,5c89631c0003b31f29a53a823142c441c55318ec,"Enable scalafmt in Source: Part 6

Scalafmt is being enabled in Source: please see http://go/scalafmt for more information.

RB_ID=920368
TBR=true
NO_USER_HOOK=1"
stuhood,2017-07-26 09:28:52,https://api.github.com/repos/twitter/finagle/git/commits/a5310b04546586fe56fd095999429ae10cc76560,a5310b04546586fe56fd095999429ae10cc76560,"Enable scalafmt in Source: Part 3

Scalafmt is being enabled in Source: please see http://go/scalafmt for more information.

RB_ID=920362
TBR=true
NO_USER_HOOK=1"
stuhood,2017-07-26 06:23:00,https://api.github.com/repos/twitter/finagle/git/commits/b6b1d0414fa24ed0c8bb5112985a4e9c9bcd3c9e,b6b1d0414fa24ed0c8bb5112985a4e9c9bcd3c9e,"Enable scalafmt in Source: Part 0

Scalafmt is being enabled in Source: please see http://go/scalafmt for more information.

RB_ID=920344
TBR=true
NO_USER_HOOK=1"
roanta,2017-07-25 21:00:31,https://api.github.com/repos/twitter/finagle/git/commits/49487a88bfaa371bbfb2b476fa4f5a9dd64cb89a,49487a88bfaa371bbfb2b476fa4f5a9dd64cb89a,"finagle-core: log aperture contents

Summary: Problem / Solution

It's useful to inspect the contents of a clients aperture for verification and debugging.
There isn't an easy way to export this data via stats so we opt to log the contents
of the aperture. We log on each distributor rebuild – rebuilds are not frequent and
usually concentrated around events where this information would be valuable (i.e.
coordinate changes or host add/removes). To be sure that we don't flood the log,
we only log a slice of size min(aperture, 100).

JIRA Issues: CSL-4796

Differential Revision: https://phabricator.twitter.biz/D74064"
rashmur,2017-07-25 19:46:23,https://api.github.com/repos/twitter/finagle/git/commits/47fa582c3e7f557e9bb5ff727b2a2a488593dd7a,47fa582c3e7f557e9bb5ff727b2a2a488593dd7a,"finagle-redis: Implement hmeregex, bmergeex, hmsetex APIs and fix pttl, brange api implementations.

Summary: Problem

Need to add support for Twitter specific hash and btree commands -
hmergeex, hmsetex, bmergeex.

Redis provides specific return values to distinguish between 'key does not
exist' and 'ttl not set' for pTtl api.

Twitter's Btree Range commands requires a count parameter which is currently not
supported in finagle's btree Range APIs.

Solution

New Btree and Hash command implementation to support hmsetex,
hmergeex, bmergeex and unit tests for them.

Changed the pTtl api to return -1 for ttl not set case, and None for key does
not exist case.

Btree's bRange will now take count of keys to return as an input, and return
'count' number of keys.

JIRA Issues: CACHE-9587

Differential Revision: https://phabricator.twitter.biz/D71749"
vkostyukov,2017-07-25 19:28:29,https://api.github.com/repos/twitter/finagle/git/commits/fa91412d243eae8146465a439d69c78a1caca9c6,fa91412d243eae8146465a439d69c78a1caca9c6,"finagle|util: Verbosity levels for StatsReceivers

Summary: This change introduces the concept of verbosity levels (go/verbose-metrics) for `StatsReceiver`s.

Each metric created via a stats receiver has a `Verbosity` level attached to it. Distinguishing verbosity
levels for metrics is optional and is up to a concrete implementation. Doing this, however, helps to
separate `Verbosity.Debug` metrics (only helpful in troubleshooting) from their operationally required
counterparts (provide a corresponding degree of visibility into a healthy process) thus
potentially reducing the observability cost.

JIRA Issues: CSL-4564

TBR=true

Differential Revision: https://phabricator.twitter.biz/D70112"
bryce-anderson,2017-07-25 16:27:33,https://api.github.com/repos/twitter/finagle/git/commits/28aec2ce945749a14b818e5157534650fff4c906,28aec2ce945749a14b818e5157534650fff4c906,"finagle-mux: Split decoding of the message body from general message decoding function

Summary: Problem / Solution

It would be nice to be able to decode just the body of a mux message if
you have already consumed the head (type + tag) of the message. To do
so, we split the `decode(byteReader)` method into a part that reads the
head (still `decode(ByteReader)`) and a new method,
`decodeMessageBody(typ, tag, byteReader)`.

JIRA Issues: CSL-4903

Differential Revision: https://phabricator.twitter.biz/D74090"
matsu-chara,2017-07-25 00:54:59,https://api.github.com/repos/twitter/finagle/git/commits/0fd63b01b646a0a04147dedc4e7568ff1e0c9fb4,0fd63b01b646a0a04147dedc4e7568ff1e0c9fb4,"finagle: Move to build.sbt

Summary: Problem

Build trait was deprecated

Solution

step1: move project/Build.scala to build.sbt
step2.1: remove Build trait
step2.2: remove unnecessary imports (sbt, Keys, and some plugins)
step3: remove unnecessary settings
  Defaults.coreDefaultSettings which is loaded by CorePlugin
  JmhPlugin.projectSettings which is loaded by JmhPlugin

Result

Migration is completed

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D74005"
mosesn,2017-07-24 19:20:33,https://api.github.com/repos/twitter/finagle/git/commits/a8dd15e3178524a10c561bbe77f38d3600c781be,a8dd15e3178524a10c561bbe77f38d3600c781be,"finagle-core: Export tls information to the R* Registry

Summary: Problem

We don't have a good way of telling how a client or server is configured
tls-wise.

Solution

Make sure that clients and servers export their tls parameters to the R*
Registry.  For the server, there wasn't a great place to do it so I introduced a
generic `Dispatcher` module which doesn't do anything.

JIRA Issues: CSL-3028

Differential Revision: https://phabricator.twitter.biz/D72766"
mosesn,2017-07-24 19:11:08,https://api.github.com/repos/twitter/finagle/git/commits/06056bc438f6473040f14ed4f45fadb0ca2bda9d,06056bc438f6473040f14ed4f45fadb0ca2bda9d,"finagle-http: Transmogrify serverErrorsAsFailuresV2 into a flag

Summary: Problem

serverErrorAsFailuresV2 has been turned up to 1.0 for a while, so it's time to
graduate it from toggle school.

Solution

Turn it into a flag!

JIRA Issues: CSL-4882

Differential Revision: https://phabricator.twitter.biz/D73265"
roanta,2017-07-24 17:47:05,https://api.github.com/repos/twitter/finagle/git/commits/a949e1512db78db9cd7341d8ed04e85bdd3cbc2e,a949e1512db78db9cd7341d8ed04e85bdd3cbc2e,"finagle-core: Pass in Stack params in LoadBalancerFactory

Summary: Problem

It useful for load balancer implementations to have access to the entire
stack context. For example, we currently pass in a timer to the aperture
balancers instead of using the stack's timer because we don't have access
to it.

Solution

Change the API for LoadBalancerFactory#newBalancer to take Stack.Params.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D73129"
dschobel,2017-07-21 22:04:14,https://api.github.com/repos/twitter/finagle/git/commits/0765ad2a5251cb2a19cf99064630d08737743443,0765ad2a5251cb2a19cf99064630d08737743443,"Revert ""twitter-oss: Prepare OSS libraries for release""

Summary: This reverts commit d35549eb3d1a6494b92d5d618d97ba9657648570.

The July release is being cancelled to avoid releasing at the midway point of a
multi-step refactor.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D73557"
dschobel,2017-07-21 17:22:26,https://api.github.com/repos/twitter/finagle/git/commits/7dfd49c8b25cf95a5e52633a4eb9bbbb4b73e972,7dfd49c8b25cf95a5e52633a4eb9bbbb4b73e972,"twitter-oss: Prepare OSS libraries for release

Summary: Problem

We want to release the next versions of our Twitter OSS libraries:
 - util -> 7.0.0
 - scrooge -> 4.19.0
 - finagle -> 7.0.0
 - twitter-server -> 1.31.0
 - finatra -> 2.12.0

Solution

Prepare libraries for their next releases.

JIRA Issues: CSL-4739

Differential Revision: https://phabricator.twitter.biz/D71795"
jcrossley,2017-07-21 03:29:23,https://api.github.com/repos/twitter/finagle/git/commits/fede95e24068da57fbb126f34d2b3617b30ba3bf,fede95e24068da57fbb126f34d2b3617b30ba3bf,"finagle-memcached: bytesBeforeLineEnd function that takes a ByteReader

Summary: Problem

When the FramingDecoding in finagle-memcached is changed to take a ByteReader
instead of a Buf, we need a way to determine the number of bytes before a newline
in order to slice appropriately.

Solution

Add a `bytesBeforeLineEnd` function to Framer that takes a ByteReader. We already have
a version of that function that takes a Buf, so it's been copied. We can remove the Buf
version once FrameDecoder no longer needs it. Tests for the ByteReader version have
been added to FramerTest (there aren't any tests for the Buf version, but there's no point
adding them now).

JIRA Issues: CSL-4852

Differential Revision: https://phabricator.twitter.biz/D70440"
vkostyukov,2017-07-21 01:37:33,https://api.github.com/repos/twitter/finagle/git/commits/bb1660e5769a8569bbc506b01b5c4d827be146d3,bb1660e5769a8569bbc506b01b5c4d827be146d3,"finagle-netty4: Do not retry proxy connect failures

Summary: When proxy support is enabled on a client, any proxy connect failure (e.g., the HTTP(s)
proxy server returns non-200 response on HTTP CONNECT) will be automatically retried
by Finagle. This may not be the right thing to do given those failures usually indicate user
errors (e.g., wrong URL/hostname, bad credentials, etc).

This change wraps proxy connect failures with newly introduced `ProxyConnectException`
so that these could be filtered out of retries.

Note: TCP connect failures during the proxy connect are still retried.

JIRA Issues: CSL-4533

Differential Revision: https://phabricator.twitter.biz/D70470"
jcrossley,2017-07-21 01:34:05,https://api.github.com/repos/twitter/finagle/git/commits/b242dd5f2ecfd1d0eb424f73b47e345b51df3560,b242dd5f2ecfd1d0eb424f73b47e345b51df3560,"util-core, finagle-netty4: Add `process` function to ByteReader

Summary: Problem

When decoding bytes in the Netty pipeline using a ByteReader, it
is necessary for some protocols (e.g., Memcached) to be able
to ""peek"" at bytes in the underlying buffer without advancing
the reader byte cursor. This can be accomplished by adding
a `process` function to ByteReader.

Solution

Add a `process` function to ByteReader. This will be used in
finagle-memcached (in future commits, when the decoder decodes
directly from a ByteReader) to determine the number of bytes before
a line end, and extract bytes from the ByteReader appropriately.

JIRA Issues: CSL-4844

Differential Revision: https://phabricator.twitter.biz/D69785"
mosesn,2017-07-20 20:39:21,https://api.github.com/repos/twitter/finagle/git/commits/21f66fec792291bcf451d5cbd43d8119790bf097,21f66fec792291bcf451d5cbd43d8119790bf097,"commons-metrics: Shrink the API surface area

Summary: Problem

The commons-metrics API surface area is too big, so conversion from
finagle-stats to commons-metrics is lossy.

Solution

Shrink the commons-metrics API. Removes some APIs from
com.twitter.common.metrics.Metrics.

Result

commons-metrics is more tractable.

JIRA Issues: CSL-4694

Differential Revision: https://phabricator.twitter.biz/D72535"
matsu-chara,2017-07-20 16:53:35,https://api.github.com/repos/twitter/finagle/git/commits/dffc7d3a58b340480ab6dce03023a318c4da5bf9,dffc7d3a58b340480ab6dce03023a318c4da5bf9,"finagle: fix sbt deprecated warnings

Summary: Problem

Some sbt operators are deprecated

Solution

fix warnings.

Result

no warn (without Build trait deprecation)

Signed-off-by: Yufan Gong <yufang@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D71969"
adleong,2017-07-20 00:31:50,https://api.github.com/repos/twitter/finagle/git/commits/3e3ab1926845890687556129133e3540c219c2c1,3e3ab1926845890687556129133e3540c219c2c1,"finagle-http: Scope dispatcher stats under client label

Summary: Problem

Dispatcher stats are not scoped under the client label.  This is inconsistent
with all other client stats.

Solution

Modify the endpointer module to use the StatReceiver from the Stack.Params
passed into the module rather than the Stack.Params set on the StackClient.
These are mostly identicial except that `newClient` scopes the StatsReceiver
with the label and passes it into the Stack but does not update the
Stack.Params on the StackClient.

Result

Dispatcher stats are scoped under the client label.

Signed-off-by: Jordan Parker <jparker@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D72265"
mosesn,2017-07-18 23:36:05,https://api.github.com/repos/twitter/finagle/git/commits/695663bdaf9df5a1d3a89811b153b564362323d3,695663bdaf9df5a1d3a89811b153b564362323d3,"finagle-http2: Stop leaking queues when we close ChildTransport

Summary: Problem

We clean up behind ourselves properly when we finish a request cleanly, but when
we mark a stream as dead, it never gets removed from the hashmap that keeps
track of them.

Solution

Make sure we always remove a stream from the hashmap when it's marked as dead.

JIRA Issues: CSL-4874

Differential Revision: https://phabricator.twitter.biz/D71766"
jcrossley,2017-07-18 19:32:42,https://api.github.com/repos/twitter/finagle/git/commits/0f499f95b67ff6ae7764be8ccf1bc52fe61fe3a4,0f499f95b67ff6ae7764be8ccf1bc52fe61fe3a4,"finagle-netty4: Fix for BufAsByteBuf.process throwing an exception from Netty

Summary: Problem

`BufAsByteBuf.process` can throw an IndexOutOfBoundsException when
we pass a non-zero start index. ByteBuf.forEach, which `process` calls,
takes an offset and length, and the length we pass can cause the slice
to exceed the length of buf. We define `length` as the minimum of
`readableBytes` and (`until` - `from`). So, a valid value of `length` is
`readableBytes`, but when ByteBuf.forEach iterates over the slice,
it goes from `offset` to (`offset` + `length` - 1). When `offset` is non-zero,
(`offset` + `length` - 1) exceeds the last index of the buffer and throws the
exception.

Solution

Make length the minimum of (`length` - `from`, `until` - `from`). `length` - `from`
is the number of bytes left in the buffer when iterating from `offset`.

JIRA Issues: CSL-4867

Differential Revision: https://phabricator.twitter.biz/D71246"
bryce-anderson,2017-07-17 18:52:56,https://api.github.com/repos/twitter/finagle/git/commits/1e23d0807a5d20ce727521b931a6e9b75644641c,1e23d0807a5d20ce727521b931a6e9b75644641c,"util-core: Move slow task detection into a ProxyTimer

Summary: Problem / Solution

We can make the tools for detecting slow timer tasks to a ProxyTimer
to make them more generic. They can now be enabled and turned in
the DefaultTimer via global flags.

JIRA Issues: CSL-4838

Differential Revision: https://phabricator.twitter.biz/D70279"
jcrossley,2017-07-17 17:49:00,https://api.github.com/repos/twitter/finagle/git/commits/b02e75ff9ffeaacc05890cbd8ad974cc439134ab,b02e75ff9ffeaacc05890cbd8ad974cc439134ab,"finagle-memcached: Handler for decoding using a decoder that takes a ByteReader

Summary: Problem

We want to make finagle-memcached's FramingDecoder take a ByteReader.
In order to do this, we need a handler that calls a decoder with a
ByteReader wrapping the Netty ByteBuf in the pipeline.

Solution

Create a ByteReaderDecoderHandler that wraps the Netty ByteBuf in a
ByteReader and calls the decoder. Because the current FramingDecoder
does not satisfy this API, also added a ByteReaderDecoder class
temporarily to make it compile. This will be removed once FramingDecoder
is changed in a future commit.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D70341"
mosesn,2017-07-14 17:21:29,https://api.github.com/repos/twitter/finagle/git/commits/b6d20c55056d2db643b99903ae573ab3fb9c6f6f,b6d20c55056d2db643b99903ae573ab3fb9c6f6f,"finagle-http2: Strips bad headers from the client-side

Summary: Problem

We weren't stripping headers that HTTP/1.1 allowed, but HTTP/2 doesn't allow on
the client-side, even though we were on the server side.

Solution

Strip them on the client-side too.

JIRA Issues: CSL-4863

Differential Revision: https://phabricator.twitter.biz/D70896"
isabelmartin,2017-07-13 18:06:16,https://api.github.com/repos/twitter/finagle/git/commits/bfb633e8962ab80100665ef4728b93470802f371,bfb633e8962ab80100665ef4728b93470802f371,"finagle-core: Make ServerAdmissionControl filters aware of server close

Summary: Problem:

Filters added to ServerAdmissionControl have no knowledge of when a server
closes and can remain after a server has closed. This can cause a memory leak.

Solution:

Add onServerClose so these filters can see when the server is closed

JIRA Issues: CSL-4787

Differential Revision: https://phabricator.twitter.biz/D68628"
gshannon,2017-07-13 16:22:54,https://api.github.com/repos/twitter/finagle/git/commits/1cd1894504b7f1ed064721f9a8c859b32e85a002,1cd1894504b7f1ed064721f9a8c859b32e85a002,"finagle-mysql: Added the ability to set Isolation Level on transactions

Summary: Problem

There are 4 transaction isolation levels supported by MySQL innodb:

- READ UNCOMMITTED
- READ COMMITTED
- REPEATABLE READ
- SERIALIZABLE

The global default at Twitter is READ COMMITTED, but it is sometimes necessary
for applications to override this based on application logic. Specifically, READ
COMMITTED may allow rows committed by another transaction after your transaction
has started to be seen by your transaction, and this can cause problems if your
logic depends on a higher level of isolation.

Solution

Added an IsolationLevel trait with 4 case objects, and added a new
Transactions.transactionWithIsolation function so the level may be specified
when executing a transactional lambda.

Result

The specified isolation level will only apply to that single transaction, and
not to the session or global environment.

Differential Revision: https://phabricator.twitter.biz/D68944"
kevinoliver,2017-07-13 01:33:09,https://api.github.com/repos/twitter/finagle/git/commits/2d2289d0c01d479491e0258be37d91c57c70b795,2d2289d0c01d479491e0258be37d91c57c70b795,"finagle-serversets: Move work off the default timer

Summary: Problem

We want to avoid doing slow work on the single threaded
default timer thread. This can happen via Zk2Resolver's
usage of `Epochs`.

Solution

Use `Stabilizer.epochs` to create `Epochs` that run on
a separate timer.

JIRA Issues: csl-4850

Differential Revision: https://phabricator.twitter.biz/D70327"
mosesn,2017-07-12 23:20:19,https://api.github.com/repos/twitter/finagle/git/commits/97346837a19fcea7d8ae1f786373f0d7c91ede44,97346837a19fcea7d8ae1f786373f0d7c91ede44,"util-stats: Widen Counter#add to take a long

Summary: Problem

Counter#add should be able to take a long as an argument, especially since we
allow longs as values. Right now, Counter's API is very different from commons
Counter's API, which makes having commons Counter depend on util-stats Counter
difficult.

Solution

Widen Counter#add to take a long instead of an int, and fix places where this
causes a problem.

Result

It will be easier to have commons Counter depend on util-stats Counter.

JIRA Issues: CSL-4700

Differential Revision: https://phabricator.twitter.biz/D69064"
bryce-anderson,2017-07-12 23:17:17,https://api.github.com/repos/twitter/finagle/git/commits/342826914cf3e4fa54028769c9fb322c753656cb,342826914cf3e4fa54028769c9fb322c753656cb,"finagle-memcached: Add myself as an OWNER

Summary: Problem / Solution

I'm relatively familiar with the finagle memcached implementation so I'm
adding myself to the OWNERS file so I can contribute more to reviews.

Differential Revision: https://phabricator.twitter.biz/D70458"
vkostyukov,2017-07-12 23:09:34,https://api.github.com/repos/twitter/finagle/git/commits/bfea693c3331833648bb991a9fc9c6ded6ce23d4,bfea693c3331833648bb991a9fc9c6ded6ce23d4,"finagle-docs: Document new web proxy support

Summary: Finagle's proxy support needed some new docs around `HttpProxyTo` param. This change adds
new docs as well as amends the `ClientTransportParams.httpProxyTo` configuration API to make it
more Java-friendly and consistent with the rest of the configuration methods.

JIRA Issues: CSL-3121

Differential Revision: https://phabricator.twitter.biz/D69810"
jcrossley,2017-07-12 21:32:51,https://api.github.com/repos/twitter/finagle/git/commits/32659e553218257a23707e00a7a8c7fa465b0793,32659e553218257a23707e00a7a8c7fa465b0793,"finagle/finagle-netty4: BufEncoder

Summary: Problem

When we change the Memcached client's decoder to take a ByteReader,
we're removing the intermediate Buf representation. We need a
ChannelHandler that only encodes to Bufs, not decodes to them.

Solution

Create BufEncoder, a ChannelOutboundHandlerAdapter that encodes
Bufs to ByteArrays.

Differential Revision: https://phabricator.twitter.biz/D69989"
kevinoliver,2017-07-11 00:05:49,https://api.github.com/repos/twitter/finagle/git/commits/aec80e628454945c51c5a031a18d7b3ace25f141,aec80e628454945c51c5a031a18d7b3ace25f141,"finagle-netty4: Add visibility into slow or blocked Timer tasks

Summary: Problem

The Netty timer should not have blocking tasks on it, much like the
usual for the Netty event loop. However, service owners lack visibility
into what is blocking or ""sluggish"" for their Timer when it occurs
without happening to catch a stacktrace at that moment.

Solution

Introduce some visibility with a new ""finagle/timer/slow"" metric
that counts the number of times it has observed a timer task running
for more than 2 seconds. All of the stack traces are also logged,
but to limit output, this will be limited to at most once in a reasonable
time period. Note that the slow checks are done inline with scheduling new
work so as to avoid creating yet another thread. This does imply that
new work must be created in order to trigger this code path.

Result

Service owners get more visibility.

JIRA Issues: CSL-4825

Differential Revision: https://phabricator.twitter.biz/D69274"
monkey-mas,2017-07-10 21:42:43,https://api.github.com/repos/twitter/finagle/git/commits/f8208cd202fb98b2b071d53e8882457c4b4af208,f8208cd202fb98b2b071d53e8882457c4b4af208,"finagle-http: Remove body (and Content-Length) from 1xx, 204 and 304 responses

Summary: # Problem

We currently have two problems. Firstly, as described in RFC2616 and
RFC7230, 1xx, 204 and 304 responses must not contain a message-body. This
requirement was not enforced in finagle, i.e., a message-body can be
added. Moreover, a Content-Length header field can be added to 1xx and
204 responses, which is not allowed as mentioned in RFC7230#section-3.3.2.

# Solution

Firstly, we have to clear a message-body, which we call content in finagle,
if the response status code is either 1xx, 204 or 304 to satisfy RFC7230.
Then, we need to remove a Content-Length header field in 1xx and 204 responses
to follow RFC7230#section-3.3.2. With regard to a 304 response, we don't
intentionally remove it even though a Content-Length header field is set.

# Result

We follow the specification of RFC with regard to a message-header and
message-body except that we have not added some header fields required in a
response with status code 304 to satisfy RFC7232#section-4.1; Any of the
following header fields must be generated: Cache-Control, Content-Location,
Date, ETag, Expires, and Vary.

JIRA Issues: CSL-4750

Differential Revision: https://phabricator.twitter.biz/D68920"
bryce-anderson,2017-07-10 20:25:39,https://api.github.com/repos/twitter/finagle/git/commits/9cb4878dd09c08ffaeea8faf205ad9286cc189a9,9cb4878dd09c08ffaeea8faf205ad9286cc189a9,"finagle-memcached: precisely size buffers for command encoding

Summary: Problem / Solution

We know the size of the buffers so we might as well just add them up and
use a precisely sized BufByteWriter to avoid wasted space or resizing.

JIRA Issues: CSL-4709

Differential Revision: https://phabricator.twitter.biz/D67970"
dschobel,2017-07-10 19:43:58,https://api.github.com/repos/twitter/finagle/git/commits/a5f03924bcea15f58cc157fe618afa7b6fcab36b,a5f03924bcea15f58cc157fe618afa7b6fcab36b,"finagle-core: exception handler should know about native epoll connection

Summary: Problem / Solution

We whitelist routine pipeline exceptions to spare applications from noisey logs.
The whitelist is missing the new exceptions for the native epoll transport so we
add them.

JIRA Issues: CSL-4807

Differential Revision: https://phabricator.twitter.biz/D69198"
willfeather,2017-07-10 17:41:41,https://api.github.com/repos/twitter/finagle/git/commits/b95ce19d21849bf061c8146927a12785a637b787,b95ce19d21849bf061c8146927a12785a637b787,"finagle-benchmark: Deprecate srvns namer

Summary: Problem
Srvns namer has been deprecated, and related dtabs need to be removed.

Solution
Remove srvns from base dtabs.

Differential Revision: https://phabricator.twitter.biz/D68795"
kevinoliver,2017-07-10 17:13:06,https://api.github.com/repos/twitter/finagle/git/commits/ed86a005c8f0486cefc23bf3453355fe56384bc0,ed86a005c8f0486cefc23bf3453355fe56384bc0,"finagle-netty3,4: Protect ChannelStatsHandlers from multiple closes

Summary: Problem

The ""connections"" gauge in `ChannelStatsHandler` can end up negative.
See https://github.com/twitter/finagle/issues/616 for details.

Solution

Protect the code from multiple calls.

Result

The gauge should no longer end up negative.

Differential Revision: https://phabricator.twitter.biz/D68497"
mosesn,2017-07-08 04:58:16,https://api.github.com/repos/twitter/finagle/git/commits/e6447f5ddbcb8589ef27d48eaada403169da674e,e6447f5ddbcb8589ef27d48eaada403169da674e,"twitter-server: /admin/ redirects to /admin

Summary: Problem

Since /admin is a portal that points to several other /admin/ pages, it seems
like it should act like a directory, where it should be able to be ended with a
/.  However, today /admin/ doesn't point anywhere.  Some of our New York users
are especially distressed by this.

Also, it turns out that the TwitterServer HttpMuxer wasn't behaving as expected,
because it combined two HttpMuxers that didn't have knowledge of each other.
The TwitterServer HttpMuxer should behave correctly now.

Solution

Redirect /admin/ to prevent some suffering.

JIRA Issues: CSL-4771

Differential Revision: https://phabricator.twitter.biz/D66569"
ryanoneill,2017-07-07 20:02:04,https://api.github.com/repos/twitter/finagle/git/commits/e8aa0ac79dc7689bbfdd072663851c984bf80389,e8aa0ac79dc7689bbfdd072663851c984bf80389,"finagle-core: Add tls Methods for Session Verifiers

Summary: Problem

Users configure SSL/TLS in Finagle clients and servers through the tls methods
on `ClientBuilder`/`ServerBuilder` or through the withTransport.tls methods on
`StackClient`/`StackServer` available via `ClientTransportParams`/
`ServerTransportParams`. Session verifiers are not currently configurable via
these methods.

Solution

Add tls methods which take an `SslClientSessionVerifier` or an
`SslServerSessionVerifier` as a parameter.

JIRA Issues: CSL-4811

Differential Revision: https://phabricator.twitter.biz/D68645"
jcrossley,2017-07-07 01:41:14,https://api.github.com/repos/twitter/finagle/git/commits/212db9da00bfa3ae53dc983dab4a23122f855a66,212db9da00bfa3ae53dc983dab4a23122f855a66,"finagle-toggle: Toggle.min combinator for fractional Toggles

Summary: Problem

We'd like to be able to combine fractional toggles into a toggle
that uses the minimum fraction from the input toggles.

Solution

Introduce Toggle.min.

JIRA Issues: CSL-4082

Differential Revision: https://phabricator.twitter.biz/D66526"
jcrossley,2017-07-06 21:19:33,https://api.github.com/repos/twitter/finagle/git/commits/3b0f011444a537f97744efbc04ed946372a9201b,3b0f011444a537f97744efbc04ed946372a9201b,"finagle-memcached: Turned-off toggle to change the default number of connections to 1

Summary: Problem

We'd like to reduce the default number of connection in the finagle-memcached client from
4 to 1. First we need a toggle.

Solution

Add a turned-off toggle to set the default number of connections to 1.

Differential Revision: https://phabricator.twitter.biz/D66623"
ryanoneill,2017-07-06 20:33:04,https://api.github.com/repos/twitter/finagle/git/commits/1a70a250832f0a497ae134e0a9412cdad509c631,1a70a250832f0a497ae134e0a9412cdad509c631,"finagle-core: Introduce SSL/TLS Client/Server Session Verifiers

Summary: finagle-core: Introduce SSL/TLS Client/Server Session Verifiers

Problem

There are reasons why a user or system would want to perform
additional custom verification steps on a newly established SSL/TLS
session (e.g. authorization, auditing, connection limiting, degraded
mode). However, there is currently no way for a user to configure this.

Solution

Introduce `SslClientSessionVerifier`, `SslServerSessionVerifier`, and
their respective `Stack` params, which allow the configuration of custom
verification procedures.

JIRA Issues: CSL-3499

Differential Revision: https://phabricator.twitter.biz/D63256"
isabelmartin,2017-07-05 23:45:15,https://api.github.com/repos/twitter/finagle/git/commits/da2523e9ad0c0dc789a60f21b05ae2cac871fd4e,da2523e9ad0c0dc789a60f21b05ae2cac871fd4e,"finagle-core: Properly close ListeningStackServer's serviceFactory

Summary: Problem:

In ListeningStackServer's closeServer method, serviceFactory is never actually
closed.

Solution:

Close it!

JIRA Issues: CSL-4792

Differential Revision: https://phabricator.twitter.biz/D67310"
kevinoliver,2017-07-05 21:32:41,https://api.github.com/repos/twitter/finagle/git/commits/4d1e5c878b83b13e8ca870b2414c1e09ab0e4f1f,4d1e5c878b83b13e8ca870b2414c1e09ab0e4f1f,"finagle, scrooge: Improve docs on ServiceIface and FutureIface

Summary: Problem

The documentation for Scrooge's ServiceIface and FutureIface/MethodIface
was lacking and in some cases confusing.

Solution

Tweak the examples and documentation to add clarity.

JIRA Issues: csl-4680

Differential Revision: https://phabricator.twitter.biz/D67345"
omerzach,2017-07-05 18:52:17,https://api.github.com/repos/twitter/finagle/git/commits/8ea728af2857ff2c2149aad4b0d595c27c8c1cf7,8ea728af2857ff2c2149aad4b0d595c27c8c1cf7,"finagle: Add Sigma to ADOPTERS.md

Summary: Signed-off-by: Kevin Oliver <koliver@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D67861"
roanta,2017-06-30 20:07:19,https://api.github.com/repos/twitter/finagle/git/commits/fe9860fe7db7a538fff9f5a7bf1b88459255a4b2,fe9860fe7db7a538fff9f5a7bf1b88459255a4b2,"finagle-core: Reduce variance in Aperture's LoadBand controller

Summary: Problem

The current configuration for the aperture controller leaves room
for clients to diverge since the load band is relatively large.
With a `lowLoad` of 0.5 and `highLoad` of 2.0, we allow the average
load to exists across a range of 1.5.  For example, given a total
offered load of 15, the aperture could be as high as 30 and low as
8 (with no other min/max constraints). In practice, we don't find
such a broad range since our offered load across instances is
relatively uniform (and the controller makes small, discrete
adjustments), but we do see some distribution. This is especially
problematic when using d-aperture since we want a uniform aperture
across clients.

Solution

Tighten the high and load bands and extend the averaging window.
We want the controller to converge on an average load of 1.0 per
aperture serving unit  so we narrow the range to 0.25 (low 0.875,
high 1.125). There are other control algorithms that would allow
us to express this (e.g. a PID controller), but for the time being
the current load band algo is simple and the tuning has proven to
work well with the tests I've run. Additionally, we add some
instrumentation to the controller so we can better observe how it
behaves in production.

Result

In tests, we see distributed clients converge on a uniform aperture
where they once would diverge. Additionally, we tested this with a
prod service and, as per the new instrumentation, the control
algorithm works as expected.

JIRA Issues: CSL-4784

Differential Revision: https://phabricator.twitter.biz/D66795"
vkostyukov,2017-06-28 23:57:22,https://api.github.com/repos/twitter/finagle/git/commits/49d4d0df6d7e0a5dcac85ca6564efcae101c8e04,49d4d0df6d7e0a5dcac85ca6564efcae101c8e04,"finagle: Decouple finagle-core from Netty 3. Meet finagle-netty3

Summary: !!I will --tbr that on Wednesday, 6/28!!

Finagle was heavily coupled to Netty 3. After an enormous amount of work, we're ready to decouple it
from Netty 3. This change introduces a new package `finagle-netty3` that `finagle-core` **doesn't depend on**.

The following Finagle packages still depend on `finagle-netty3`:

- finagle-http (see CSL-3667)
- finagle-core:tests (tests are still using Netty 3 constructs, this will change with CSL-4755)

JIRA Issues: CSL-4224

TBR=true

Differential Revision: https://phabricator.twitter.biz/D65268"
vkostyukov,2017-06-27 21:33:50,https://api.github.com/repos/twitter/finagle/git/commits/49c502c8b850b38d25bac0668250dd169a20b1f7,49c502c8b850b38d25bac0668250dd169a20b1f7,"finagle-serversets: Do not use Netty 3 HWT in Stabilizer

Summary: # Problem / Solution

`Stabilizer` doesn't need to use HTW timer based on Netty 3, any other `Timer` implementation should
work just fine. This change migrates it to use `ScheduledThreadPoolTimer` instead (no external dependencies).

JIRA Issues: CSL-4773

Differential Revision: https://phabricator.twitter.biz/D65571"
jcrossley,2017-06-27 00:18:09,https://api.github.com/repos/twitter/finagle/git/commits/eca5eaf24b696788f10d6b5e2642fc42e901f7f1,eca5eaf24b696788f10d6b5e2642fc42e901f7f1,"finagle-memcached: Remove Decoding type from server decoding

Problem / Solution

We have removed the Decoding type from the client decoding pipeline;
although the server is used only to test the client and doesn't have
the same performance constraints, for symmetry and readability we also
remove Decoding from the server pipeline.

RB_ID=917774"
dschobel,2017-06-26 19:10:22,https://api.github.com/repos/twitter/finagle/git/commits/e577b572b6abb7c99db5783d8b98ccb1b049a6ba,e577b572b6abb7c99db5783d8b98ccb1b049a6ba,"abstract application: introduce toggles admin endpoint

Summary: Problem / Solution

AbstractApplication needs a way to introspect on toggle values so we provide
a new admin endpoint.

JIRA Issues: CSL-4721

Differential Revision: https://phabricator.twitter.biz/D63665"
vkostyukov,2017-06-24 03:52:17,https://api.github.com/repos/twitter/finagle/git/commits/e70690afa9e0413e8be6ef5f6244cfed0c8e9145,e70690afa9e0413e8be6ef5f6244cfed0c8e9145,"finagle-core: Remove ClientBuilder/ServerBuilder.codec

Summary: Problem / Solution

Finagle is no longer exposing any protocols as Codecs (stacks are used instead),
which means we can safely remove ClientBuilder.codec and ServerBuilder.codec.

This should be good to go as long as following changes have landed:

- D65015 (vowpalwabbit)
- D64997 (observer-collector-varnish)
- D64973 (Ibis)
- D64966 (Kestrel)

Here is my work-in-progress ""note"": {F7412770}

JIRA Issues: CSL-4400

TBR=true

Differential Revision: https://phabricator.twitter.biz/D63526"
kevinoliver,2017-06-23 18:05:07,https://api.github.com/repos/twitter/finagle/git/commits/ac7943dedb70bd73f0c0abe85af0cef3a281d880,ac7943dedb70bd73f0c0abe85af0cef3a281d880,"util-events: Deprecate in preparation for removal

Summary: Problem

`util-events` has not seen the adoption I had hoped for.

Solution

Deprecate the code and remove the wiring from finagle-stats and
finagle-zipkin-core. A future release will remove the util-events code
as well as the admin endpoint in twitter-server.

JIRA Issues: csl-4758

TBR=true

Differential Revision: https://phabricator.twitter.biz/D64437"
vkostyukov,2017-06-23 17:17:25,https://api.github.com/repos/twitter/finagle/git/commits/a278e5c853c3110714761d1d9f7facd8eb1b3e33,a278e5c853c3110714761d1d9f7facd8eb1b3e33,"finagle-core: Move codec-based servers/clients into Codec

Summary: # Problem

Finagle's `ClientBuilder` and `ServerBuilder` are coupled to `Codec`s, which eventually
should go away.

# Solution

Provide legacy converters from `Codec` to both `StackServer` and `StackClient` so
`ClientBuilder`/`ServerBuilder` can be decoupled from codecs.

JIRA Issues: CSL-4766

Differential Revision: https://phabricator.twitter.biz/D64377"
bryce-anderson,2017-06-23 05:01:19,https://api.github.com/repos/twitter/finagle/git/commits/62027148afb017104fdd2f39a4e010af20b4fbcb,62027148afb017104fdd2f39a4e010af20b4fbcb,"util-core: Add methods for reading/writing strings to ByteWriter/Reader

Summary: Problem / Solution

We can potentially be more efficient reading and writing Strings in our
ByteReader and ByteWriter interfaces by avoiding an intermediate
Array[Byte] representation and encoding the data directly to the backing
buffer.

JIRA Issues: CSL-4728

Differential Revision: https://phabricator.twitter.biz/D63987"
yufangong,2017-06-23 00:02:11,https://api.github.com/repos/twitter/finagle/git/commits/b37937c0b92b3c4d39a1a24d212d0378448ba45f,b37937c0b92b3c4d39a1a24d212d0378448ba45f,"Add coursier plugin to speed up build

Summary: Problem/Solution:

Use coursier sbt plugin for a better Artifact Fetching, reduce sbt build time.

Result:

Build time down to 40 mins on average now.

JIRA Issues: CSL-4742

Differential Revision: https://phabricator.twitter.biz/D64117"
jennazz,2017-06-22 23:00:24,https://api.github.com/repos/twitter/finagle/git/commits/bdc6a7f4522033fd63fec48750febca714cff731,bdc6a7f4522033fd63fec48750febca714cff731,"Make all endpoints of MemcachedRichClient honor the LocalMemcache

Summary: **Problem**
I found that among the four endpoints of MemcachedRichClient trait, only the
newTwemcacheClient(dest: Name, label: String) endpoint supports LocalMemcache in
the Memcache.Client implementation. We should make the rest three endpoints have
the same logic.

**Solution**
Add logic to use local memcache if it's turned on

**Result**
All endpoints of MemcachedRichClient will opt to use local memcache
dest if it's turned on.

JIRA Issues: TF-1142

Differential Revision: https://phabricator.twitter.biz/D64264"
vkostyukov,2017-06-22 17:46:17,https://api.github.com/repos/twitter/finagle/git/commits/c0473abebc48bc4ba3692424b9edc2d3504f41b6,c0473abebc48bc4ba3692424b9edc2d3504f41b6,"finagle-http: Add Http.Server.withMaxHeaderSize

Summary: # Problem / Solution

By some reason, this API was missing.

Differential Revision: https://phabricator.twitter.biz/D64341"
kevinoliver,2017-06-22 06:49:47,https://api.github.com/repos/twitter/finagle/git/commits/879c884e1f20ec1af3731967e77736afa8a75e20,879c884e1f20ec1af3731967e77736afa8a75e20,"finagle-core: Remove c.t.f.tracing.debugTrace

Summary: Problem / Solution

The functionality of the global flag `c.t.f.tracing.debugTrace`
is mixed in with the generic `Trace` code. This functionality can
instead be acheived by using an implementation thus keeping this
code clean.

JIRA Issues: csl-4677

TBR=true

Differential Revision: https://phabricator.twitter.biz/D63252"
kevinoliver,2017-06-22 00:50:32,https://api.github.com/repos/twitter/finagle/git/commits/f1b970f1c859077bce9721a004351cfb30608480,f1b970f1c859077bce9721a004351cfb30608480,"finagle-memcached: Add `Closable` to `BaseClient`

Summary: Problem / Solution

`c.t.f.memcached.BaseClient` does not implement the standard
`c.t.util.Closable` trait.

JIRA Issues: csl-3814

TBR=true

Differential Revision: https://phabricator.twitter.biz/D63970"
bryce-anderson,2017-06-21 22:36:14,https://api.github.com/repos/twitter/finagle/git/commits/8a361829ff7c804bb9c220c3e5154638b29b0fce,8a361829ff7c804bb9c220c3e5154638b29b0fce,"finagle-thrift: Remove Netty 3 Thrift implementation

Summary: Problem / Solution

We still have Netty 3 vanilla thrift code in finagle, so remove it.

JIRA Issues: CSL-4221

Differential Revision: https://phabricator.twitter.biz/D63670"
willfeather,2017-06-21 02:02:51,https://api.github.com/repos/twitter/finagle/git/commits/a9344d883bf01cef28a0b1b4a7b36345e2c333f9,a9344d883bf01cef28a0b1b4a7b36345e2c333f9,"finagle-core: Change DNS failure logging to debug in InetResolver

Summary: Problem

InetResolver pulls DNS every few seconds and invalid hosts may exhaust  logs.

Solution

Change the logging to debug level, and DNS status can still be verified via stats.

JIRA Issues: FES-2146

Differential Revision: https://phabricator.twitter.biz/D63532"
vkostyukov,2017-06-21 01:46:18,https://api.github.com/repos/twitter/finagle/git/commits/9bd6256ee35eac4f2d636ca81c441211fc7fcd0e,9bd6256ee35eac4f2d636ca81c441211fc7fcd0e,"finagle-netty4: Remove reflection machinery for Netty4Timer

Summary: Problem / Solution

There is no need to query `pendingTimeouts` via reflection. It's publicly available
as of Netty 4.1.11.

JIRA Issues: CSL-4751

Differential Revision: https://phabricator.twitter.biz/D63536"
bryce-anderson,2017-06-20 22:59:35,https://api.github.com/repos/twitter/finagle/git/commits/4470e25f617fbc18fed4b2db7a08b2b44af39c23,4470e25f617fbc18fed4b2db7a08b2b44af39c23,"finagle-netty4-http: Aggregate messages that won't have a body

Summary: Problem

The Netty4 based Finagle HTTP client with streaming enabled will emit a
chunked response even in the cases where the response may not have a
body such as responses with status code 204 (No Content).

Solution

We aggregate this class of responses in order to consume the Netty4
LastHttpContent and emit a non-chunked finagle response.

JIRA Issues: CSL-4749

Differential Revision: https://phabricator.twitter.biz/D63417"
vkostyukov,2017-06-20 21:59:32,https://api.github.com/repos/twitter/finagle/git/commits/b5cbb3e2ef23c82f30dbff6479c834048992e6fe,b5cbb3e2ef23c82f30dbff6479c834048992e6fe,"Revert ""finagle-http: Remove body (and Content-Length) from 1xx, 204 and 304 responses""

Summary: This reverts commit RB_ID=917827

Differential Revision: https://phabricator.twitter.biz/D63307"
bryce-anderson,2017-06-20 17:36:40,https://api.github.com/repos/twitter/finagle/git/commits/62753260ed288b31d56b295be4f22bed8626076d,62753260ed288b31d56b295be4f22bed8626076d,"finagle: Upgrade Netty to 4.1.12

Summary: Problem / Solution

We need to upgrade the Netty library to continue advancing different
parts of the finagle library, namely Http2.

JIRA Issues: CSL-4687

Differential Revision: https://phabricator.twitter.biz/D60438"
kevinoliver,2017-06-20 16:20:22,https://api.github.com/repos/twitter/finagle/git/commits/06e0e6abf396b7790ba4e29985aa968073cbeaba,06e0e6abf396b7790ba4e29985aa968073cbeaba,"Add CODE_OF_CONDUCT.md

Summary: Problem / Solution

Github has support [1] and this opts us into it.

[1] https://help.github.com/articles/adding-a-code-of-conduct-to-your-project/

JIRA Issues: csl-4616

Differential Revision: https://phabricator.twitter.biz/D61784"
plaflamme,2017-06-16 00:01:36,https://api.github.com/repos/twitter/finagle/git/commits/affced891e62428e156f31e2c14dd32121404582,affced891e62428e156f31e2c14dd32121404582,"finagle-core: pipelining dispatcher improvements

Summary: reviewed @ https://github.com/twitter/finagle/pull/624
=============
Problem

PipeliningDispatcher has the following limitations:

Same type signature as the underlying Transport;
Hardcoded timeout for detecting a stalled pipeline;
Does not allow tracking more than the dispatched Promise in the
pipeline.

Solution

Abstract over the dispatcher / transport types, add another type
parameter for what is being tracked in the pipeline.

Add a new Param to allow configuring the stall timeout.

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D62299"
vkostyukov,2017-06-15 20:18:48,https://api.github.com/repos/twitter/finagle/git/commits/91408cd90e918d3aefb3aad6bbd2e588a1c33705,91408cd90e918d3aefb3aad6bbd2e588a1c33705,"util, finagle: StatsReceiver cleanups

Summary: # Problem/Solution

This change makes `StatsReceiver.repr` a `def` instead of a `val` so it could be just
delegated through the entire chain of stats receivers (no need to allocate a val in each
wrapping `StatsReceiver`).

In addition to that, this change re-uses `StatsReceiverProxy` where it's possible.

JIRA Issues: CSL-4715

Differential Revision: https://phabricator.twitter.biz/D59762"
bryce-anderson,2017-06-15 03:18:37,https://api.github.com/repos/twitter/finagle/git/commits/462643f4f89e70150307d3005711c4deb8e563e1,462643f4f89e70150307d3005711c4deb8e563e1,"util-core: Move owned(): Buf method from ByteWriter to BufByteWriter

Summary: Problem

ByteWriter is a useful interface for encoders, but encoders don't usually
care about the end result. ByteWriter currently joins these two concerns
through the `owned(): Buf` method making it difficult to correctly
implement different buffer destinations such as the Netty4 ByteBuf.

Solution

Move the `owned(): Buf` method to a sub trait, BufByteWriter.

JIRA Issues: CSL-4727

Differential Revision: https://phabricator.twitter.biz/D61215"
bryce-anderson,2017-06-14 22:07:18,https://api.github.com/repos/twitter/finagle/git/commits/66f14feb5d92bcdcce471b48d191c697935c4e8f,66f14feb5d92bcdcce471b48d191c697935c4e8f,"finagle-memcached: Compose the client decoder directly into the framer

Summary: Problem / Solution

The Finagle memcached implementation can be more efficient
by composing the decoder directly with the framer instead
of returning intermediate objects and pushing them down a
pipeline.

JIRA Issues: CSL-4691

Differential Revision: https://phabricator.twitter.biz/D60054"
roanta,2017-06-14 18:38:54,https://api.github.com/repos/twitter/finagle/git/commits/29217ec681f4267d0f121d93933200d193ee01d0,29217ec681f4267d0f121d93933200d193ee01d0,"finagle-core: change the default load balancer address ordering to be based on a hash of the octets

Summary: Problem

We use the Aurora shard id to create a consistent endpoint ordering
across process boundaries. Since we roll clusters in shard id order,
the rationale was that when using Aperture with a deterministic
ordering, it would be easier to avoid failure if we remove an entire
contiguous slice of the Ring. However, it turns out that this makes
it more difficult for clients to be resilient to rolls because
clients walk the Ring sequentially when they encounter a down node
and each client has to determine liveness independently.

Solution

Change the default address ordering to be based on a MurmurHash3
of the address octets.  Additionally, remove the ability to set an
address ordering globally as it isn't necessary and the per client
granularity should be sufficient.

Result

Shards are uniformly distributed across an Aperture's ring but still
deterministic across process boundaries.

JIRA Issues: CSL-4724

Differential Revision: https://phabricator.twitter.biz/D60698"
ChrisRegado,2017-06-13 23:12:07,https://api.github.com/repos/twitter/finagle/git/commits/614bcbe156423ba33b4030e1e4baad38c20a4020,614bcbe156423ba33b4030e1e4baad38c20a4020,"finagle-core: Make DynamicTimeout public

Problem

Users want to dynamically set timeouts based on app-level logic.

Solution

Expose `DynamicTimeout` to allow this to be done without using
`MethodBuilder`.

RB_ID=918314"
kevinoliver,2017-06-13 22:44:25,https://api.github.com/repos/twitter/finagle/git/commits/ea324570353143a2c3a0c0ccff094636e8c6954b,ea324570353143a2c3a0c0ccff094636e8c6954b,"finagle-core: Point users to MethodBuilder from ClientBuilder

Summary: Problem / Solution

The march away from `ClientBuilder` continues with updated docs
pointing users towards `MethodBuilder` where appropriate.

JIRA Issues: csl-3874

Differential Revision: https://phabricator.twitter.biz/D61347"
kevinoliver,2017-06-13 17:41:35,https://api.github.com/repos/twitter/finagle/git/commits/353e34046f3dab208cb3f6cf26bbc6e5610fe913,353e34046f3dab208cb3f6cf26bbc6e5610fe913,"finagle-http: Remove unused toggle

Summary: Problem / Solution

The `com.twitter.finagle.http.serverErrorsAsFailures` was replaced by
`com.twitter.finagle.http.serverErrorsAsFailuresV2` and is no longer
necessary. This patch removes it.

JIRA Issues: csl-4726

Differential Revision: https://phabricator.twitter.biz/D60908"
bryce-anderson,2017-06-12 17:45:39,https://api.github.com/repos/twitter/finagle/git/commits/486c9445ca2bbd8fb3b7124df707fa4d22ab7a27,486c9445ca2bbd8fb3b7124df707fa4d22ab7a27,"finagle-http: Lower log level of ResponseConformanceFilter log entries

Summary: Problem / Solution

    The error level is a bit too aggressive so we lower it to info and also
    include the value of the content-length header in the log message for
    debugging purposes.

JIRA Issues: CSL-4725

Differential Revision: https://phabricator.twitter.biz/D60526"
bryce-anderson,2017-06-12 16:45:58,https://api.github.com/repos/twitter/finagle/git/commits/a82829e217264058de39eadacd693ccb1371991c,a82829e217264058de39eadacd693ccb1371991c,"util-core: Make ByteWriter a true trait

Summary: Problem

The ByteWriter type has two main problems. First, is that it is specialized
for writing to an underlying Array[Byte] which may not  be useful for other
potential implementations, for example, one that writes to an underlying
Netty4 ByteBuf. Second, it has methods that are private[io], meaning it
cannot be extended outside of the com.twitter.io package, thus limiting the
number of useful implementations.

Solution

Make ByteWriter a true trait with only public methods and move the current
definition to a private abstract implementation.

JIRA Issues: CSL-4649

Differential Revision: https://phabricator.twitter.biz/D59996"
bryce-anderson,2017-06-12 15:24:19,https://api.github.com/repos/twitter/finagle/git/commits/6e6d1c6d1e624cc25aec1bcbc072a5616545daec,6e6d1c6d1e624cc25aec1bcbc072a5616545daec,"finagle-memcached: Remove the KeyValidation trait

Summary: Problem / Solution

The purpose of KeyValidation is to mix it into a class to perform
validation during that classes construction. It is only used that way in
one abstract class, so we can simply inline it and remove an unnecessary
trait from the classes type.

Differential Revision: https://phabricator.twitter.biz/D60311"
kevinoliver,2017-06-09 18:59:43,https://api.github.com/repos/twitter/finagle/git/commits/82686947935c2867899ce824b3d3d5bbfd6be3ab,82686947935c2867899ce824b3d3d5bbfd6be3ab,"finagle-http, thriftmux: Promote MethodBuilder out of experimental

Summary: Problem

`MethodBuilder` was marked experimental while we validated its APIs.

Solution

The APIs have been validated and it is now ready for primetime.

JIRA Issues: csl-4184

Differential Revision: https://phabricator.twitter.biz/D60032"
kevinoliver,2017-06-09 17:18:15,https://api.github.com/repos/twitter/finagle/git/commits/785ddbee9de08fad1c2290147647467d4c16044e,785ddbee9de08fad1c2290147647467d4c16044e,"finagle-core: Refactor RemoteInfo.Available members

Summary: Problem

`c.t.f.context.RemoteInfo.Available` takes `ClientIds` which are
Twitter's Thrift specific concept. This should be more generic.

Solution

Have it take `Strings`.

JIRA Issues: csl-4682

Differential Revision: https://phabricator.twitter.biz/D60136"
roanta,2017-06-08 23:47:45,https://api.github.com/repos/twitter/finagle/git/commits/d29813935351a8c693fe6e27b4b8d4202fbb925b,d29813935351a8c693fe6e27b4b8d4202fbb925b,"finagle-thrift: remove UseNetty4 toggle

Summary: Problem / Solution

The toggle is ramped up to 100% in production so it's safe to remove it.
This also removes some stale references to the UseNetty4 toggle in other
finagle-* projects.

TBR=true

Differential Revision: https://phabricator.twitter.biz/D59298"
bryce-anderson,2017-06-08 23:31:47,https://api.github.com/repos/twitter/finagle/git/commits/2238d7990a9a24f9798f4d2782c2ee0f34fbed38,2238d7990a9a24f9798f4d2782c2ee0f34fbed38,"finagle-memcached: More efficient key validation

Summary: Problem

Some Memcached commands only have one key but our validation logic asks
them to provide a collection of keys to check, so they make a collection for one
element and then iterating over the one element.

Solution

For commands that have a single key validate that key directly avoiding
the overhead of making a collection then iterating over it.

JIRA Issues: CSL-4720

Differential Revision: https://phabricator.twitter.biz/D60146"
kevinoliver,2017-06-08 23:04:05,https://api.github.com/repos/twitter/finagle/git/commits/e69b5f6d24c523a7ab93deda4fe282c0d369cb37,e69b5f6d24c523a7ab93deda4fe282c0d369cb37,"finagle-core: Move ExceptionRemoteInfoFactory to client package

Summary: Problem / Solution

`ExceptionRemoteInfoFactory` is in `c.t.f.service` despite being
client-side functionality. This moves it to `c.t.f.client` to address
that.

JIRA Issues: csl-4711

Differential Revision: https://phabricator.twitter.biz/D60062"
bryce-anderson,2017-06-08 22:05:22,https://api.github.com/repos/twitter/finagle/git/commits/0eface79771031015e7f6b9548cdc7b0ba3de540,0eface79771031015e7f6b9548cdc7b0ba3de540,"finagle-memcached: Add timeouts to Await calls in tests

Summary: Problem / Solution

finagle-memcached has a number of tests that use Await.result without a
timeout which could lead to indefinite hangs if something goes wrong so
we add a timeout.

Differential Revision: https://phabricator.twitter.biz/D60134"
bryce-anderson,2017-06-08 17:54:56,https://api.github.com/repos/twitter/finagle/git/commits/8e00890ecdfc108f644dce51af5a737ca951a1bb,8e00890ecdfc108f644dce51af5a737ca951a1bb,"finagle: Fix CHANGES entry

Summary: Problem / Solution

    This change didn't make the 6.45.0 release.

Differential Revision: https://phabricator.twitter.biz/D60005"
bryce-anderson,2017-06-07 22:31:08,https://api.github.com/repos/twitter/finagle/git/commits/ee0bb64a273fc95d76dda27ce3fb15e663b50a3b,ee0bb64a273fc95d76dda27ce3fb15e663b50a3b,"finagle-core: Make Framer a specialized version of a Decoder

Summary: Problem / Solution

The finagle Framer type alias is a decoder that is
specialized to the result type Buf. If we generalize
it we can make more interesting decoders and reuse
the same pipeline integration abstractions.

JIRA Issues: CSL-4712

Differential Revision: https://phabricator.twitter.biz/D59495"
kevinoliver,2017-06-07 19:04:05,https://api.github.com/repos/twitter/finagle/git/commits/1fd19542194d2e5a25ad46fbfa2dd140fa1d0ae9,1fd19542194d2e5a25ad46fbfa2dd140fa1d0ae9,"finagle-thriftmux: Fix ExceptionRemoteInfoFactory

Summary: Problem

ClientId is set too early for thriftmux clients, all the way at the
top of the stack. This can cause the incorrect information to be shown
if an exception happens inside the finagle client stack, say a
FailedFastException.

Solution

Change ExceptionRemoteInfoFactory to read from a new local Context.

JIRA Issues: csl-4438, csl-4438

Differential Revision: https://phabricator.twitter.biz/D59469"
mosesn,2017-06-07 18:40:54,https://api.github.com/repos/twitter/finagle/git/commits/e8832609b080f1e495851ea8a9bb5b0b9e2394a3,e8832609b080f1e495851ea8a9bb5b0b9e2394a3,"finagle-netty4: Support passing a chain file for mutual authentication

Summary: Problem

It's impossible to pass a chain file to the client, so the server needs to pass
the intermediate certificates if it wants the client to recognize a root that it
trusts through an intermediate certificate.

Solution

Add support for the CertKeyAndChain API in netty 4, which makes it possible to
pass a chain file to the client.

JIRA Issues: CSL-4686

Differential Revision: https://phabricator.twitter.biz/D59531"
roanta,2017-06-06 22:36:59,https://api.github.com/repos/twitter/finagle/git/commits/fadc80cdd804f2885ebc213964542d5568a4f485,fadc80cdd804f2885ebc213964542d5568a4f485,"csl: June Release

Summary: Problem

We want to release the next versions of our Twitter OSS libraries:
 - util -> 6.45.0
 - scrooge -> 4.18.0
 - finagle -> 6.45.0
 - twitter-server -> 1.30.0
 - finatra -> 2.11.0

Solution

Prepare libraries for their next releases.

Differential Revision: https://phabricator.twitter.biz/D59353"
kevinoliver,2017-06-06 18:06:37,https://api.github.com/repos/twitter/finagle/git/commits/5f6ea578c4a0f8385fe7c8a969022c8631bffff5,5f6ea578c4a0f8385fe7c8a969022c8631bffff5,"finagle-doc: Spruce up request timeouts docs

Summary: Problem

The docs on request timeouts could use a little sprucing up.

Solution

Spruce them.

JIRA Issues: csl-3880

Differential Revision: https://phabricator.twitter.biz/D59280"
bryce-anderson,2017-06-06 17:56:06,https://api.github.com/repos/twitter/finagle/git/commits/4a19d7d0102a18b30bb04ddc8a8b94ea199d2e5f,4a19d7d0102a18b30bb04ddc8a8b94ea199d2e5f,"finagle-memcached: remove Decoding type from client decoder workflow

Problem / Solution

The finagle-memcached client decoder pushes everything through an intermediate
'Decoding' type which is unnecessary so we lift the transformation from tokens
and data to protocol messages into the ClientDecoder type.

RB_ID=917685"
monkey-mas,2017-06-06 15:39:57,https://api.github.com/repos/twitter/finagle/git/commits/1e4252e305f03cba808ce635ff9d5837eb5e5404,1e4252e305f03cba808ce635ff9d5837eb5e5404,"finagle-http: Remove body (and Content-Length) from 1xx, 204 and 304 responses

Problem

We currently have two problems. Firstly, as described in RFC2616 and
RFC7230, 1xx, 204 and 304 responses must not contain a message-body. This
requirement was not enforced in finagle, i.e., a message-body can be
added. Moreover, a Content-Length header field can be added to 1xx and
204 responses, which is not allowed as mentioned in RFC7230#section-3.3.2.

Solution

Firstly, we have to clear a message-body, which we call content in finagle,
if the response status code is either 1xx, 204 or 304 to satisfy RFC7230.
Then, we need to remove a Content-Length header field in 1xx and 204 responses
to follow RFC7230#section-3.3.2. With regard to a 304 response, we don't
intentionally remove it even though a Content-Length header field is set.

Result

We follow the specification of RFC with regard to a message-header and
message-body except that we have not added some header fields required in a
response with status code 304 to satisfy RFC7232#section-4.1; Any of the
following header fields must be generated: Cache-Control, Content-Location,
Date, ETag, Expires, and Vary.

Signed-off-by: Bryce Anderson <banderson@twitter.com>

RB_ID=917827"
vkostyukov,2017-06-06 04:38:57,https://api.github.com/repos/twitter/finagle/git/commits/a106faeea1a59ebd8b4f4ffbfb50fa92fa300f02,a106faeea1a59ebd8b4f4ffbfb50fa92fa300f02,"finagle-http: Remove UseNetty4 toggle

Problem / Solution

There is no need for the UseNetty4 toggle. The migration is complete and we're removing
the toggle. Use `.configured(Http.Netty3Impl)` to switch the implementation over to Netty 3.

RB_ID=917936"
vkostyukov,2017-06-05 22:52:13,https://api.github.com/repos/twitter/finagle/git/commits/09b32f85dbd3b0f4b5f93a1678f60f4ad79f8c2a,09b32f85dbd3b0f4b5f93a1678f60f4ad79f8c2a,"finagle-netty4: Remove poolReceiveBuffers toggle

Problem / Solution

`poolReceiveBuffers` toggle is suppressed by `UsePooling`. Remove the unused
toggle and its utilities.

RB_ID=917912"
bryce-anderson,2017-06-05 20:46:52,https://api.github.com/repos/twitter/finagle/git/commits/30bc64ec0504d9c8c6fb95850703dd3fa00e0a24,30bc64ec0504d9c8c6fb95850703dd3fa00e0a24,"finagle-mysql: BinaryEncodedRow should decode Int24 as mediumLE

Problem / Solution

Fix a bug in the BinaryEncodedRow deserialization logic that reads 4
bytes when decoding an Int24 instead of the required 3 bytes.

RB_ID=917824"
mosesn,2017-06-05 17:32:05,https://api.github.com/repos/twitter/finagle/git/commits/ece3e2188f28101583c2cbfe39bbd22537c249d3,ece3e2188f28101583c2cbfe39bbd22537c249d3,"finagle-http: Change default http implementation to netty4

Summary: Problem

We have high confidence in the netty4 http implementation from running it in
production for months, but we continue to use netty3 by default in OSS.

Solution

Cut over to netty4 by default.

Result

OSS users of finagle will now use the netty4 http implementation by default.

JIRA Issues: CSL-4703

Differential Revision: https://phabricator.twitter.biz/D58698"
dschobel,2017-06-02 00:52:50,https://api.github.com/repos/twitter/finagle/git/commits/7f19e26888c86aa211d354aea2cd8074548710e5,7f19e26888c86aa211d354aea2cd8074548710e5,"finagle-mux: disable non-copying decoder for fragmenting clients

Summary: Problem

Aggregating fragmented message payloads eliminates the performance
benefit of the non-copying decoder slicing along payload boundaries.

Solution

Disable it when message fragmention is configured.

JIRA Issues: CSL-4670

Differential Revision: https://phabricator.twitter.biz/D58153"
jcrossley,2017-06-01 23:49:02,https://api.github.com/repos/twitter/finagle/git/commits/7317d448286ad145f7652a0df752d1a14172e164,7317d448286ad145f7652a0df752d1a14172e164,"finagle-memcached: Remove intermediate Decoding in server encoding pipeline

Problem

Encoding in the Finagle Memcached server has two steps;
first, convert the Response to a Decoding, then write
that Decoding to a Buf. The intermediate Decoding representation
means unnessecary object allocations.

Solution

On the server side, encode Responses directly to Bufs.

RB_ID=917644"
dschobel,2017-06-01 22:41:47,https://api.github.com/repos/twitter/finagle/git/commits/1737d74178f998d0b3ec28538e9116615e0daea3,1737d74178f998d0b3ec28538e9116615e0daea3,"finagle-http: replace RespondToExpectContinue with HttpServerExpectContinueHandler

Summary: Problem / Solution

After upstreaming our RespondToExpectContinue handler to Netty we can
remove Finagle's version.

JIRA Issues: CSL-4168

Differential Revision: https://phabricator.twitter.biz/D58191"
roanta,2017-06-01 22:29:37,https://api.github.com/repos/twitter/finagle/git/commits/3bab82eebed901d8562d71761ae6e468e2387777,3bab82eebed901d8562d71761ae6e468e2387777,"finagle-core: ensure Aperture's expired counter is accurate

Problem

We expire an endpoint and then we don't reset the `idleTime`.
In which case, on subsequent ticks of the expiry clock with no
request activity, we will increment the `expired` counter while
`remake` is a nop.

Solution

Reset the `idleTime` to the sentinel value when we expire.

RB_ID=917715"
yufangong,2017-06-01 18:21:35,https://api.github.com/repos/twitter/finagle/git/commits/832c95b7d3613a73aa4d98b1e651cc44859e78f1,832c95b7d3613a73aa4d98b1e651cc44859e78f1,"Bump sbt build from 2.11.8 to 2.11.11

Summary: Problem/Solution:

Bump our sbt build crossScalaVersion to 2.11.11 since pants bumped theirs. Also,
move Finatra examples from 2.11.8 to 2.12.1.

JIRA Issues: CSL-4555

Differential Revision: https://phabricator.twitter.biz/D56970"
jcrossley,2017-05-30 21:31:35,https://api.github.com/repos/twitter/finagle/git/commits/0bcd85ea359ebc4daafe41c766200e3cc88de583,0bcd85ea359ebc4daafe41c766200e3cc88de583,"finagle-memcached: Don't create unnecessary Seqs when encoding

Problem

When encoding a command with associated data, we create
a Seq of 4 elements: name, key, flags, and expiry, and
iterate over this seq to encode each element. It's
unnecessary to create this Seq.

Solution

Save an allocation by passing the name, key, flags, and expiry
to the encoding function directly.

RB_ID=917552
TBR=true"
roanta,2017-05-30 17:32:15,https://api.github.com/repos/twitter/finagle/git/commits/2c3bdc832c9fdb637dd6ed9d49db904c554b5165,2c3bdc832c9fdb637dd6ed9d49db904c554b5165,"finagle-core: expire endpoints outside of aperture

Problem

Endpoints can fall out the aperture window and become idle.
In these cases, we would like to reclaim these resources.

Solution

Implement expiration on the Node type inside the Aperture load
balancer, which respects the aperture window. That is, nodes that
become idle are only expired iff they are also outside the aperture
window.

We set the idle time as a function of the aperture's smooth window.
Aperture changes are dampened by this window so after X windows
have passed, we can be sufficiently confident that an idle session
is no longer needed. We choose a default of 10 for X which should
give us a high degree of confidence and, based on the default smooth
windows, should be on the order of minutes.

Result

The number of active endpoints (and sessions in multiplexed protocols)
continually converges towards the aperture size.

RB_ID=916508"
bryce-anderson,2017-05-30 16:48:14,https://api.github.com/repos/twitter/finagle/git/commits/f47ffdfa1f67d1c029e5dc7d782e8d22de2d56a6,f47ffdfa1f67d1c029e5dc7d782e8d22de2d56a6,"finagle-memcached: optimize ParserUtil.split function

Problem / Solution

The ParserUtils.split(data, delimiter) method is
very inefficient.

RB_ID=917298"
jcrossley,2017-05-30 15:37:39,https://api.github.com/repos/twitter/finagle/git/commits/62261628a97f500ca258bccfa142f3a7ee37981a,62261628a97f500ca258bccfa142f3a7ee37981a,"finagle-memcached: Remove intermediate Decoding representation when encoding

Problem

Encoding in the Finagle Memcached client has two steps;
first, convert the `Command` to a `Decoding`, then write
that `Decoding` to a `Buf`. The intermediate `Decoding` representation
means unnessecary object allocations.

Solution

On the client side, encode `Command`s directly to `Buf`s. Before,
both the client and server used `Encoder` to encode `Decoding`s.
Now, only the server uses it. Once the server also has its
intermediate `Decoding` representation removed, the client and server
can have separate encoders, and `AbstractCommandToBuf` can be replaced
by the client's encoder.

RB_ID=917214"
jcrossley,2017-05-30 15:33:03,https://api.github.com/repos/twitter/finagle/git/commits/7f4b052b10aac702d985d8288bf6c7afaec4e514,7f4b052b10aac702d985d8288bf6c7afaec4e514,"finagle-memcached: Combine map/handle in ConnectedClient.rawGet

Problem / Solution

We can save a function allocation in ConnectedClient.rawGet
by combining `map`/`handle` in `transform`.

RB_ID=917166"
jcrossley,2017-05-26 21:08:44,https://api.github.com/repos/twitter/finagle/git/commits/2c7138848533bcfe1231c907fa8bb824123b4b3e,2c7138848533bcfe1231c907fa8bb824123b4b3e,"Revert ""finagle: Upgrade to Netty 4.1.11-Final""

Problem / Solution

Reverting the Netty upgrade because of a regression in
encoding.

RB_ID=917532
TBR=true"
mosesn,2017-05-25 23:12:47,https://api.github.com/repos/twitter/finagle/git/commits/e964e3afcc6e72560b60a011c5638af902d399e2,e964e3afcc6e72560b60a011c5638af902d399e2,"finagle-mux: Removed the dependency on commons stats

Summary: Problem

finagle-mux depends on commons stats to compute latency quantiles.  It then uses
that to decide how long to give clients in leases.  However, it only uses a
single class from commons stats, and commons stats is a relatively heavy
dependency, so it would be better to avoid it if possible.

Solution

Switch from WindowedApproxHistogram to LatencyHistogram, which lives in
finagle-exp.

Result

finagle-mux no longer depends on commons.

JIRA Issues: CSL-4665

Differential Revision: https://phabricator.twitter.biz/D55598"
thirstycrow,2017-05-25 18:52:12,https://api.github.com/repos/twitter/finagle/git/commits/b9cb4883ce35e4f5a88c37d0fc4eeb507ddda0a0,b9cb4883ce35e4f5a88c37d0fc4eeb507ddda0a0,"finagle-thrift: Serve multiple thrift ifaces

Problem

Finagle uses an early version of libthrift, which does not support
service multiplexing.

Solution

Since 0.9.1, thrift added several classes to handle service
multiplexing.
On the client side, TMultiplexedProtocol is used to decorate the
original protocol, by prefixing a user specified service name as part of
the name of request message. Finagle uses the protocols from libthrift.
All we have to do is copying TMultiplexedProtocol and related classes
from a newer version of libthrfit.

On the server side, TMultiplexedProcessor is used to inspect the
beginning of the incoming message names, and dispatch the message
to an appropriate underlying processor. Finagle does not use
processors, so we have to re-implement this.

Result

Multiple thrift services can be served through a single port, by passing
a map from service names to service implementations.

```
val serviceMap = Map(
  ""echo"" -> new EchoService(),
  ""extendedEcho"" -> new ExtendedEchoService()
)

val server = Thrift.server.serveIfaces(address, serviceMap)
```

Multiple Ifaces/ServiceIfaces can be created sharing the same underlying
thrift client.

```
val client = Thrift.client.multiplex(address, ""client"") { client =>
  new {
    val echo = client.newIface[Echo.FutureIface](""echo"")
    val extendedEcho =
    client.newServiceIface[ExtendedEcho.ServiceIface](""extendedEcho"")
  }
}

client.echo.echo(""hello"")
client.extendedEcho.getStatus(ExtendedEcho.GetStatus.Args())
```

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=916493"
rashmur,2017-05-24 22:42:33,https://api.github.com/repos/twitter/finagle/git/commits/7826abadea7aa698a69db3e83a5b1be572b86b1e,7826abadea7aa698a69db3e83a5b1be572b86b1e,"Adding getWithFlag and getsWithFlag apis for Memcache client

Summary: Cache team is implementing hot key detection feature, and we intend to use the flags in the protocol to send hints on what keys can be cached on the client side. Today, get and gets commands drop the flags in the middle of the stack. We want to propagate it to the client, but via 2 new APIs, getWithFlag and getsWithFlag.

As per discussion with Jillian, added tests to MemcachedTest.scala for the 2 APIs.

Basing it off of Kevin's initial change - https://phabricator.twitter.biz/D53083

JIRA Issues: CACHE-8279

Differential Revision: https://phabricator.twitter.biz/D55210"
kevinoliver,2017-05-24 22:10:24,https://api.github.com/repos/twitter/finagle/git/commits/a651b074827b38556f69a2961308e4c2fe7a579b,a651b074827b38556f69a2961308e4c2fe7a579b,"finagle-thriftmux: Minimize work when not tracing

Summary: Problem / Solution

Thriftmux does a bunch of work to produce tracing output, when most of
the time it is unnecessary as most of the time a request is not being
traced.

JIRA Issues: csl-4676

Differential Revision: https://phabricator.twitter.biz/D55984"
jcrossley,2017-05-24 06:53:05,https://api.github.com/repos/twitter/finagle/git/commits/9c3c43a9b9aa0d4aed4c6526c07c9eb75cd2fa5e,9c3c43a9b9aa0d4aed4c6526c07c9eb75cd2fa5e,"finagle: Upgrade to Netty 4.1.11-Final

Problem / Solution

Upgrade to the latest Netty version. Note that Netty 4.1.11-Final
fixes a regression in OpenSSLEngine that was introduced
in 4.1.10-Final.

RB_ID=916826"
mehmetgunturkun,2017-05-24 02:19:36,https://api.github.com/repos/twitter/finagle/git/commits/e62c326aebd6475cbe4c05ced54c880886d35eba,e62c326aebd6475cbe4c05ced54c880886d35eba,"util-core: Enable ByteReader to Read Unsigned Longs

Problem

readUnsignedLongBE and readUnsignedLongLE are missing in ByteReader
implementation.

Solution

Added readUnsignedLongBE and readUnsignedLongLE to ByteReader and
implemented in ByteReaderImpl.

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

RB_ID=917289"
edma2,2017-05-24 00:05:14,https://api.github.com/repos/twitter/finagle/git/commits/9b0ebc12bc40a1b52dd1c7c03f8531028167b979,9b0ebc12bc40a1b52dd1c7c03f8531028167b979,"finagle-core: introduce service-loaded NameInterpreter

Problem:

There is no way to change the default `NameInterpreter` except for mutating a
global variable. This is inconvenient if there isn't a clear lifecycle phase to
do it.

Solution:

Provide a `LoadedNameInterpreter` that loads a `NameInterpreter` from the
classpath. It is an error if more than one is available. If none are found,
falls back to `DefaultInterpreter` (this makes it backwards-compatible).

RB_ID=917082"
bryce-anderson,2017-05-23 17:49:43,https://api.github.com/repos/twitter/finagle/git/commits/5978d6bf6083cc778c8bcfe0f8ad0d63d8514226,5978d6bf6083cc778c8bcfe0f8ad0d63d8514226,"finagle-memcached: Optimize key validation

Problem / Solution

We extract a Buf to an Array[Byte] to check for invalid characters but
we can just as well use the Processor mechanism and avoid the
allocations.

RB_ID=917246"
jcrossley,2017-05-23 17:12:38,https://api.github.com/repos/twitter/finagle/git/commits/905911fcf95e3e6b1e5e4637db4dc7e0ae27cd02,905911fcf95e3e6b1e5e4637db4dc7e0ae27cd02,"finagle-benchmark: Benchmark for Memcached ConnectedClient.getResult

Problem / Solution

We plan to make optimizations to ConnectedClient.rawGet,
so it would be good to have a benchmark.

RB_ID=917189"
bryce-anderson,2017-05-23 16:14:07,https://api.github.com/repos/twitter/finagle/git/commits/32150a118a85104437e691e637d89fd392a238e8,32150a118a85104437e691e637d89fd392a238e8,"finagle-memcached: Seal the memcached Command type

Problem

The memcached CommandToEncoding class has a type
parameter but doesn't actually use it since it matches
on the concrete Command trait. This effectively discards
the type system which normally ensures that our match
statements are complete.

Solution

Remove the type parameter and sealing the Command structure.

RB_ID=917181"
bryce-anderson,2017-05-23 15:32:51,https://api.github.com/repos/twitter/finagle/git/commits/96cd8ce843bf85d3d2bd6bfb2ae280867bad62e2,96cd8ce843bf85d3d2bd6bfb2ae280867bad62e2,"finagle-memcached: Make Response subtypes case objects

Problem / Solution

The memcached Response family of types contains a number of
parameterless case classes which would be better as case objects.

RB_ID=917137
TBR=true"
jcrossley,2017-05-22 23:10:06,https://api.github.com/repos/twitter/finagle/git/commits/cc25ad8bc6a1d235528a15b6cd72a409402d010a,cc25ad8bc6a1d235528a15b6cd72a409402d010a,"finagle-{thrift, thriftmux}, scrooge: Use ResponseClassifier for newServiceIface

Problem

Clients created using `newServiceIface` do not use
the configured `responseClassifier`.

Solution

Apply the `responseClassifier` in the per-method stats filter,
and set the deserialization context for usage in the standard
StackClient filters.

RB_ID=917010"
bryce-anderson,2017-05-22 21:34:10,https://api.github.com/repos/twitter/finagle/git/commits/de1c53910c710ec6a33fcb9f3b7f8a0109cc37de,de1c53910c710ec6a33fcb9f3b7f8a0109cc37de,"util-core: Add ByteWriter method for writing Buf instances

Problem / Solution

We must extract an Array[Byte] from a Buf to write it to a ByteWriter.
To avoid the overhead of potentially copying the underlying data, we
make writing a Buf a part of the ByteWriter type.

RB_ID=917094"
roanta,2017-05-22 21:19:53,https://api.github.com/repos/twitter/finagle/git/commits/e7ab0eefb3765de5baf87fd73206206c7a24c911,e7ab0eefb3765de5baf87fd73206206c7a24c911,"finagle-core: Introduce the ability to explicitly rebuild in EndpointFactory

Problem

We need to be able to churn endpoint resources in the load balancers.
However, closing an EndpointFactory is terminal.

Solution

Augment EndpointFactory with the ability to remake its underlying
resources while still remaining available for service acquistion
requests. Additionaly, EndpointFactory was pushed through all
the load balancer instances.

RB_ID=916956
TBR=true"
mosesn,2017-05-22 18:58:44,https://api.github.com/repos/twitter/finagle/git/commits/2e419c507195ea9ff50f29b7e5f9f557048d774d,2e419c507195ea9ff50f29b7e5f9f557048d774d,"finagle-serversets: Remove the dependency on commons

Problem

finagle-serversets has a dependency on twitter commons which complicates the
dependency graph.

Solution

Uncomplicate it by manually shading it and vendoring it.

RB_ID=916931"
ryanoneill,2017-05-17 19:41:18,https://api.github.com/repos/twitter/finagle/git/commits/3c581c5a57f4fc4299e684734692e3acdd7fc851,3c581c5a57f4fc4299e684734692e3acdd7fc851,"finagle-core: Refactor SSL Connection Handlers for Netty 3

Problem / Solution

Work is scheduled to change the SSL / TLS connection handlers for
Finagle running on Netty 3. This is more difficult than necessary
because of where these items are located, how they are named, and how
they are structured. This change renames these items and structures them
in accordance with how the corresponding items are in Finagle running on
Netty 4.

RB_ID=916932"
adriancole,2017-05-16 23:50:34,https://api.github.com/repos/twitter/finagle/git/commits/a6de338c0ffb0e7b6924f326cd0feac0bc9dad0a,a6de338c0ffb0e7b6924f326cd0feac0bc9dad0a,"finagle-http: Tolerates X-B3-Sampled: 1

Summary: This change makes Finagle tolerantly read `X-B3-Sampled: 1`, so that
traces made by other libraries don't stop when they hit a Finagle
service.

Currently, when the http codec reads `X-B3-Sampled: true`, a trace is
continued. Otherwise, it is stopped (as opposed to restarting), as other
values are interpreted as false. Most Zipkin instrumentation send
`X-B3-Sampled: 1` even if they tolerantly read `X-B3-Sampled: true`.

This change tolerantly reads '1', and also skips allocating an exception
for other values. In a future version of Finagle, we should start
writing `1`, IMHO.

See #617

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

Differential Revision: https://phabricator.twitter.biz/D53426"
vkostyukov,2017-05-16 23:42:16,https://api.github.com/repos/twitter/finagle/git/commits/9bbf69e1ff9d7816b70058185391dd025f121963,9bbf69e1ff9d7816b70058185391dd025f121963,"finagle-http: Reduce allocations in HttpTransport.read

Problem / Solution

There are ways to reduce allocations in each `HttpTransport`

 1. HttpTransport.readFn could be embedded into `self` (less allocations per each connect)
 2. Use `respond` instead of `onSuccess` (less allocations per each request)

RB_ID=916876"
kevinoliver,2017-05-16 17:30:19,https://api.github.com/repos/twitter/finagle/git/commits/da9f66a8bb89989fd8dc09ea5ee989e049a83507,da9f66a8bb89989fd8dc09ea5ee989e049a83507,"finagle-http, thriftmux: MethodBuilder scaladocs

Problem / Solution

MethodBuilder's scaladocs needed some spit and polish.

RB_ID=916820"
roanta,2017-05-16 17:27:15,https://api.github.com/repos/twitter/finagle/git/commits/d251edf29e1e89d7930e55462e7e92fa9c3a563e,d251edf29e1e89d7930e55462e7e92fa9c3a563e,"finagle-core: Introduce EndpointFactory

Problem

We would like to unify our root representation of an endpoint
in the load balancer code. We have several instances today
that manipulate or augment an endpoint stack (e.g. via laziness
and address).

Solution

Create a named class that encompasses both of these and is created
by the TrafficDistributor.

RB_ID=916467"
roanta,2017-05-16 17:22:43,https://api.github.com/repos/twitter/finagle/git/commits/e22de81b0bf671da03be39b7934587604419c0b6,e22de81b0bf671da03be39b7934587604419c0b6,"finagle-core: fully relinquish closes from balancer

Problem / Solution

We lifted the management of endpoint resources into traffic
distributor but neglected to avoid closes when a balancer's
set shrinks. This can cause ServiceClosedExceptions when
weights change and endpoints move across balancer instances.
This patch removes the remainder of closes from balancers.

RB_ID=916811"
jcrossley,2017-05-16 01:16:24,https://api.github.com/repos/twitter/finagle/git/commits/bfa0753f4bec4a876afee49017b57f79d28fee01,bfa0753f4bec4a876afee49017b57f79d28fee01,"finagle-netty4: Log read/write TimeoutExceptions at DEBUG level

Problem

If the read/write timeout is configured on the transport and is
exceeded, ReadTimeoutExceptions and WriteTimeoutExceptions are
expected and thus shouldn't be logged at WARNING level.

Solution

Log these exceptions at DEBUG level.

RB_ID=916822"
kevinoliver,2017-05-15 23:23:09,https://api.github.com/repos/twitter/finagle/git/commits/411275abd4bf45182e9fc558d966a628edcedcdf,411275abd4bf45182e9fc558d966a628edcedcdf,"finagle-core: Add docs for two missing metrics

Problem / Solution

Two metrics, `retries/not_open` and `retries/cannot_retry`, were
missing from the metrics documentation. This change now covers them.

RB_ID=916800"
yufangong,2017-05-15 21:30:23,https://api.github.com/repos/twitter/finagle/git/commits/6d440cb1deefff7d301057939c36ad4a1de37c61,6d440cb1deefff7d301057939c36ad4a1de37c61,"scrooge: Reduce byte array allocations

Problem:

We want to reduce object allocations by avoid copying byte arrays.

Solution:

1. Change the generated code in Example$FinagleClient.encodeRequest to use a
`TReusableMemoryTransport` as we do on the server side.
2. Change TFieldBlob to use a Owned Buf which does not copy arrays.

Result:
Add a thin wrapper to create threadlocal `TReusableMemoryTransport` named
`TReusableBuffer` which is used in finagleClient and finagleService.

RB_ID=914874"
roanta,2017-05-15 18:14:09,https://api.github.com/repos/twitter/finagle/git/commits/131c2303a695a6a7958e9194518565dac25c8015,131c2303a695a6a7958e9194518565dac25c8015,"finagle-core: Manage endpoint closes entirely in TrafficDistributor

Problem

With the introduction of TrafficDistributor, the life cycle of a
load balancer instance changed. In particular, each weight class
receives a new load balancer instance and weight classes are usually
transient. However, the endpoints that back a load balancer instance
have a separate and distinct life cycle. In the past, we managed
this by creating close gates which only open when the endpoints can
be closed as well. However, with the advent of expiring endpoints
(e.g. in aperture), close gates have proven to be rigid and inflexible.

Solution

Lift the management of endpoints into TrafficDistributor entirely.
This is semantically correct since the TrafficDistributor also
creates them.

Result

Endpoints can now be closed without needing to manage gates.

RB_ID=916415"
vkostyukov,2017-05-15 18:11:48,https://api.github.com/repos/twitter/finagle/git/commits/3b8024fe13fb0c0ab1dc6b2f9d87cedccf72af71,3b8024fe13fb0c0ab1dc6b2f9d87cedccf72af71,"finagle-netty4: Remove some worakrounds for 4.1.9

Problem / Solution

Netty 4.1.10 allows us to remove some workarounds:

- No need to check for empty buffers in UnpoolHttpHandler
- No need to schedule a connect promise run in the event loop

RB_ID=916193"
jcrossley,2017-05-15 14:44:20,https://api.github.com/repos/twitter/finagle/git/commits/59b0445b8012d285cf3c47f13f08cdafbd3c108d,59b0445b8012d285cf3c47f13f08cdafbd3c108d,"finagle-core: Remove deprecated Trace.recordRpcName

Problem / Solution

com.twitter.finagle.tracing.Trace.recordRpcName is
deprecated. Remove it and migrate usage to
Trace.recordServiceName and Trace.recordRpc.

RB_ID=916426
TBR=true"
jcrossley,2017-05-12 21:31:27,https://api.github.com/repos/twitter/finagle/git/commits/f303826287fcdcbc12bf6f41367de4a9fbbd46ae,f303826287fcdcbc12bf6f41367de4a9fbbd46ae,"finagle-core: Remove c.t.f.builder.Cluster

Problem / Solution

c.t.f.builder.Cluster is deprecated. Remove it.

RB_ID=916162"
jcrossley,2017-05-12 16:06:06,https://api.github.com/repos/twitter/finagle/git/commits/546c25ef6c4d42cdf4762b30b842c2596a8b9f57,546c25ef6c4d42cdf4762b30b842c2596a8b9f57,"finagle-mysql: Remove deprecated methods on com.twitter.finagle.Mysql

Problem / Solution

Several methods on com.twitter.finagle.Mysql are deprecated.
Remove them.

RB_ID=916418
TBR=true"
bryce-anderson,2017-05-11 16:03:45,https://api.github.com/repos/twitter/finagle/git/commits/b745b3732d4bdc32839d4a3991184019e7a727b6,b745b3732d4bdc32839d4a3991184019e7a727b6,"finagle: Add a floor of 8 to the default c.t.f.nettyX.numWorkers

Problem

For systems where c.t.jvm.numProcs evaluates to a very low value like 1,
the default Finagle worker pool sizes will be very small.

Solution

Add a floor of 8 to the default value.

RB_ID=916465"
kevinoliver,2017-05-10 23:38:14,https://api.github.com/repos/twitter/finagle/git/commits/b9093d5eb408f22b58f2ca96716defff5f87ba68,b9093d5eb408f22b58f2ca96716defff5f87ba68,"finagle-core: Config for LB behavior when no nodes Open

Problem

There is no means of customizing the load balancer's behavior when
none of its nodes have a `Status` of `Open`. It always picks one node
at random.

Solution

Allow configuration of this behavior through the
`c.t.f.loadbalancer.LoadBalancerFactory.WhenNoNodesOpenParam` Stack
param.

RB_ID=916145"
yufangong,2017-05-10 20:07:51,https://api.github.com/repos/twitter/finagle/git/commits/8ec49933532c9be54c71e5e9e95d937267c1ef74,8ec49933532c9be54c71e5e9e95d937267c1ef74,"Problem/Solution:

Update all projects except finatra to sbt-0.13.15, finatra is going with 406 PR.

RB_ID=916485"
yufangong,2017-05-10 18:41:02,https://api.github.com/repos/twitter/finagle/git/commits/cbb309d2e811e0ebfe71a17b806694609d4e7195,cbb309d2e811e0ebfe71a17b806694609d4e7195,"Revert ""update sbt to 0.13.9 to 0.13.15""

Problem:

It took so long, I forget it is a PR. I used git review submit.

Solution:

Revert it and split to two commits for PR and our internal changes.

RB_ID=916480"
yufangong,2017-05-10 17:11:37,https://api.github.com/repos/twitter/finagle/git/commits/6c8f8e23e30e83789a6561c7cb949588107a865c,6c8f8e23e30e83789a6561c7cb949588107a865c,"update sbt to 0.13.9 to 0.13.15

Problem

Some sbt operators are deprecated in newest version.

Solution

update to 0.13.15 from 0.13.9 (was released at 11 Aug 2015)

Signed-off-by: Yufan Gong <yufang@twitter.com>

RB_ID=916200"
vkostyukov,2017-05-10 03:19:28,https://api.github.com/repos/twitter/finagle/git/commits/d047b4568e07a56b481b5f7c193b0e8c5ec6ff71,d047b4568e07a56b481b5f7c193b0e8c5ec6ff71,"finagle: DefaultTimer is now service-loaded
Problem

Historically, Finagle's default timer was Netty 3 `HashedWheelTimer` and was
defined in `finagle-core`. This makes it difficult to decouple `finagle-core`
from Netty 3. We need a default timer implementation w/o Netty dependency.

Solution

Given that all Finagle protocols are running Netty 4 with Netty 4 `HashedWheelTimer`
by default, we can safely service-load the timer and fallback to just `JavaTimer`
when no timers are available on the classpath.

RB_ID=915924"
roanta,2017-05-09 22:57:55,https://api.github.com/repos/twitter/finagle/git/commits/cd8af86a2332b2a80649acc82119ee4019c26fd9,cd8af86a2332b2a80649acc82119ee4019c26fd9,"finagle-core: move BindingFactory into naming package

Problem / Solution

BindingFactory is a naming implementation detail and as such should
be in Finagle's naming package.

RB_ID=916350
TBR=true"
jcrossley,2017-05-09 22:53:21,https://api.github.com/repos/twitter/finagle/git/commits/689085c80e8c9c3274d2bd3eac60ab15887ea269,689085c80e8c9c3274d2bd3eac60ab15887ea269,"finagle-exception: Remove deprecated clientReporter and sourceReporter methods

Problem / Solution

c.t.f.exception.Reporter.{clientReporter, sourceReporter} are
deprecated. Remove them.

RB_ID=916403"
mosesn,2017-05-09 21:42:01,https://api.github.com/repos/twitter/finagle/git/commits/4de34430ce13138035ba25fc31a2eaad91462f8b,4de34430ce13138035ba25fc31a2eaad91462f8b,"finagle-http2: Sets the draining timeout correctly

Problem

Netty http/2 support already does a graceful shutdown, but we don't configure
how long the shutdown should be.

Solution

Since we want to be able to late-bind the shutdown timeout, we should pass a
preparatory closable which we can ensure closes before anything else.

RB_ID=915234"
roanta,2017-05-09 19:09:58,https://api.github.com/repos/twitter/finagle/git/commits/fc2c954deaaa6e57b48e4dd6c0306d6f6e8a5ccb,fc2c954deaaa6e57b48e4dd6c0306d6f6e8a5ccb,"finagle-core: bind lb Node type at construction

Problem

The Node type is typically defined by a load metric. In which case,
only the `load` and `pending` fields are needed. However, different
balancers may need to attach additional data to the Node type.  For
example, Aperture needs a `token` to sort the nodes. This was added
to the `NodeT` trait but only used by Aperture forcing the load
metrics to know the internal details of Aperture.

Looking forward, we will want to refine the `NodeT` type to implement
expiration but don't necessarily want these fields directly on `NodeT`.

Solution

Load metrics now can refine the `NodeT` type, but the final binding
is left to the implementation. That is, each implementation has to
implement the `Node` type, `newNode` and `failingNode`.

RB_ID=915772"
roanta,2017-05-09 18:20:27,https://api.github.com/repos/twitter/finagle/git/commits/dfc86fc923ecda0d9e5b52f7ccc30c6275673286,dfc86fc923ecda0d9e5b52f7ccc30c6275673286,"finagle-core: move TrafficDistributor into load balancer package

Problem / Solution

TrafficDistributor is an implementation detail of LoadBalancerFactory,
it should be co-located with the loadbalancer code.

RB_ID=916346"
bryce-anderson,2017-05-08 23:23:35,https://api.github.com/repos/twitter/finagle/git/commits/2ab94e7d580406c9f5bc0d1c20c40c888c784183,2ab94e7d580406c9f5bc0d1c20c40c888c784183,"util-core: ByteReader extends AutoClosable

Problem

The ByteReader represents an intrinsically mutable representation
of raw data with an implicit notion of owner that codec
implementations can consume. However, it doesn't contain a notion of
resource management making it difficult to represent the semantics
of data sources like the Netty 4 ByteBuf which needs to manage a
reference count.

Solution

Make ByteReader extend AutoClosable to give ByteReader a hook for
managing underlying resources.

RB_ID=916086"
jcrossley,2017-05-06 06:00:34,https://api.github.com/repos/twitter/finagle/git/commits/6b6ca5f98b59e75dbda548b236a60cbadc80fe1c,6b6ca5f98b59e75dbda548b236a60cbadc80fe1c,"finagle: Remove deprecated ClientBuilder.tracerFactory

Problem / Solution

com.twitter.finagle.builder.ClientBuilder.tracerFactory is
deprecated, as is com.twitter.finagle.tracing.Tracer.Factory.
Remove them.

RB_ID=915481
TBR=true
NO_USER_HOOK=1"
jcrossley,2017-05-06 05:10:52,https://api.github.com/repos/twitter/finagle/git/commits/1bc967352f4cd30d0e64ea694b5edd2284c80907,1bc967352f4cd30d0e64ea694b5edd2284c80907,"finagle: Add note about resources dir to Tunables docs

Problem / Solution

Clarify that the resources directory needs to be packaged with
the application.

RB_ID=916196"
rpless,2017-05-05 21:28:43,https://api.github.com/repos/twitter/finagle/git/commits/dbe0165a0289bc04ec1bce5eaa72600044ac43e8,dbe0165a0289bc04ec1bce5eaa72600044ac43e8,"Add Threat Stack to the adopters list

Signed-off-by: Yufan Gong <yufang@twitter.com>

RB_ID=916212"
theel0ja,2017-05-05 21:25:59,https://api.github.com/repos/twitter/finagle/git/commits/0a75ae7df2c3558410bddc5098400f8661621076,0a75ae7df2c3558410bddc5098400f8661621076,"Improved formatting of markdown

Signed-off-by: Yufan Gong <yufang@twitter.com>

RB_ID=916210"
jcrossley,2017-05-04 00:00:15,https://api.github.com/repos/twitter/finagle/git/commits/a5874546f03d25d7a0fa8e0ef0265083923a1236,a5874546f03d25d7a0fa8e0ef0265083923a1236,"finagle-memcached: Remove ""is_pipelining"" from registry

Problem

Now that all created Finagle Memcached clients are pipelined,
there's no need to record this in the registry.

Solution

Remove it.

RB_ID=916005"
vkostyukov,2017-05-03 20:45:19,https://api.github.com/repos/twitter/finagle/git/commits/b23dd64abfe7ec10dda8fb45ecfcfd69e044429a,b23dd64abfe7ec10dda8fb45ecfcfd69e044429a,"finagle-redis: Remove remaining Netty 3 bits

Problem / Solution

There were some Netty 3 imports in finagle-redis that turned out to be
a dead code. Remove them.

RB_ID=916015
TBR=true"
vkostyukov,2017-05-02 18:16:00,https://api.github.com/repos/twitter/finagle/git/commits/9d80616eb4e9c4339e25939e136b3c99a2a241dd,9d80616eb4e9c4339e25939e136b3c99a2a241dd,"finagle: Wire in Netty 4 default timer

Problem / Solution

Finagle protocols depending on Netty 4 (literally every single protocol)
must be using `Netty4HashedWheelTimer` as their timer. Let's override the
`Timer` stack param for them explicitly.

RB_ID=915703"
jcrossley,2017-05-01 21:37:02,https://api.github.com/repos/twitter/finagle/git/commits/fcb98aec34578de11038ab879f87b6366ecd68ed,fcb98aec34578de11038ab879f87b6366ecd68ed,"finagle-core: Remove deprecated c.t.f.builder.ClientBuilder.{group, cluster} methods

Problem / Solution

com.twitter.finagle.builder.ClientBuilder.{group, cluster} are
deprecated. Remove them.

RB_ID=915098
TBR=true"
zaneli,2017-04-29 01:08:50,https://api.github.com/repos/twitter/finagle/git/commits/18ff67c794373a13a5fb01163e251c163df7259c,18ff67c794373a13a5fb01163e251c163df7259c,"finagle-{core, http, redis, thrift}: Remove semicolons at end of lines

Problem

The semicolon at the end of the line is unnecessary.

Solution

Removed semicolons.

Signed-off-by: Yufan Gong <yufang@twitter.com>

RB_ID=915723"
jcrossley,2017-04-28 21:51:41,https://api.github.com/repos/twitter/finagle/git/commits/e27c6fe8ed85a234b9980e8e3e40ae41a0de3496,e27c6fe8ed85a234b9980e8e3e40ae41a0de3496,"finagle-thriftmux: Remove deprecated ThriftMux.{withClientId, withProtocolFactory}

Problem / Solution

c.t.f.ThriftMux.withClientId and
c.t.f.ThriftMux.withProtocolFactory are deprecated. Remove them.

RB_ID=915655
TBR=true"
vkostyukov,2017-04-28 20:09:14,https://api.github.com/repos/twitter/finagle/git/commits/b3eeab67ceb5d9bbd880599d392113bc38363d61,b3eeab67ceb5d9bbd880599d392113bc38363d61,"finagle-netty4: Add default instance of Netty4Timer

Problem / Solution

We need a default, singleton `Netty4HashedWheelTimer` instance that we can share
across the JVM process running Finagle clients/servers.

Implementation Notes

Please, note all the stats machinery is basically stolen from Netty 3
timer implementation, but it's now embedded into the timer itself.

I was on a fence trying to decide if we need to
make it abstract but given that Netty 3 timer is going away, I don't
think it's worth the effort.

Instead of exposing configuration knobs as constructor params, I made
them global flags. I think this approach makes more sense given the timer
is shared across the process (flags are great for configuring singletons).

RB_ID=915557"
jcrossley,2017-04-28 19:33:22,https://api.github.com/repos/twitter/finagle/git/commits/531b444fb5e59f73445f9335b327fd208e3eaccf,531b444fb5e59f73445f9335b327fd208e3eaccf,"finagle-thrift: Remove deprecated ThriftServerBufferedCodec

Problem / Solution

c.t.f.thrift.transport.netty3.ThriftServerBufferedCodec and
c.t.f.thrift.transport.netty3.ThriftServerBufferedCodecFactory
are deprecated. Remove them.

RB_ID=915656"
jcrossley,2017-04-28 18:14:16,https://api.github.com/repos/twitter/finagle/git/commits/158fc7e29c2ea3700c65c98ca8fc0b1b228090f9,158fc7e29c2ea3700c65c98ca8fc0b1b228090f9,"finagle-http: Remove deprecated c.t.f.http.filter.ValidateRequestFilter

Problem / Solution

c.t.f.http.filter.ValidateRequestFilter is deprecated. Remove it.

RB_ID=915548"
jcrossley,2017-04-28 15:24:09,https://api.github.com/repos/twitter/finagle/git/commits/eb1fc13d081095e7efbd8a616cc43b42cae74a11,eb1fc13d081095e7efbd8a616cc43b42cae74a11,"finagle-http: Remove deprecated c.t.f.http.HttpMuxer.pattern

Problem / Solution

c.t.f.http.HttpMuxer.pattern is deprecated. Remove it.

RB_ID=915551"
jamesmeador,2017-04-28 01:48:40,https://api.github.com/repos/twitter/finagle/git/commits/b8d8b2d621da8e12db0546f54b62a759cb041733,b8d8b2d621da8e12db0546f54b62a759cb041733,"Removed 53 former employees from 677 files.

RB_ID=915639"
jcrossley,2017-04-27 17:52:30,https://api.github.com/repos/twitter/finagle/git/commits/30f4a43b78c1547c588d25cdd39159beb99bad58,30f4a43b78c1547c588d25cdd39159beb99bad58,"finagle-base-http: Remove deprecated Message.ContentTypeWwwFrom

Problem / Solution

c.t.f.http.Message.ContentTypeWwwFrom is deprecated. Remove it.

RB_ID=915543"
jcrossley,2017-04-27 15:50:04,https://api.github.com/repos/twitter/finagle/git/commits/d0d91f9fc233b1c50458350f91993ff8edcd7c29,d0d91f9fc233b1c50458350f91993ff8edcd7c29,"finagle-core: Remove deprecated c.t.f.Deadline

c.t.f.Deadline is deprecated. Remove it.

RB_ID=915550"
roanta,2017-04-27 00:01:25,https://api.github.com/repos/twitter/finagle/git/commits/95a165d376e601b0c91a4947740e61ac44f6a383,95a165d376e601b0c91a4947740e61ac44f6a383,"Revert ""finagle-core: Reclaim idle sessions when using aperture""

Problem / Solution

We aren't respecting the min aperture when measuring idleness which
can cause connection churn if the aperture window is over
provisioned. Revert the idleness patch for now.

RB_ID=915498"
vkostyukov,2017-04-26 23:21:33,https://api.github.com/repos/twitter/finagle/git/commits/3aa941a63ee1d46d7dd4a6e1eb891f99d7b85c2a,3aa941a63ee1d46d7dd4a6e1eb891f99d7b85c2a,"finagle-netty4: Make AnyToHeap HTTP-specific

Problem

`AnyToHeapInboundHadler` is too generic/powerful and yet only used within the HTTP
pipelines (for the rest of the pipleines we use `BufCodec` given that it solves the
same problem in a much better way).

Solution

Make it HTTP-specific and move it out of finagle-netty4 (into `finagle-http`).

RB_ID=915251"
vkostyukov,2017-04-26 21:29:02,https://api.github.com/repos/twitter/finagle/git/commits/c86789cf0e064483ebf4509b52c9a216c31dd134,c86789cf0e064483ebf4509b52c9a216c31dd134,"finagle-netty4: Run the Netty4ProxyHandler connect promise later

Problem

When Netty 4 proxy support is enabled, it's possible to satisfy the transport
promise, and essentially start a client, before the underlying `ProxyHandler`
removes its pieces from the pipeline. This leads to properly encoded messages
being sent over the malformed pipeline.

See https://github.com/netty/netty/issues/6671

Solution

Run the connect promise satisfaction later, in the channel's event loop, and
give the underlying `ProxyHandler` a chance to properly clean up the pipeline.

RB_ID=915286"
kevinoliver,2017-04-26 21:20:52,https://api.github.com/repos/twitter/finagle/git/commits/0af98b0e63065754642632ef8a2147d52ace4e66,0af98b0e63065754642632ef8a2147d52ace4e66,"finagle: Fix Java API for withStack

Problem

Due to a Scala issue [1], we need to add method overrides
in order for Java users to get the correct types on
`$Protocol.withStack`.

Solution

Override this on the protocols. For example,
`c.t.f.Http.client().withStack` and `c.t.f.Http.server().withStack`.

Result

Java user happiness.

[1] https://issues.scala-lang.org/browse/SI-8905

RB_ID=915440"
nhnFreespirit,2017-04-26 18:37:49,https://api.github.com/repos/twitter/finagle/git/commits/d72d11a5eb298bcc005882436af2685a5ce58f08,d72d11a5eb298bcc005882436af2685a5ce58f08,"Make TraceInitializerFilter visible

Problem:
For advanced configurations of an Http.Server you might need
access to the role from TraceInitializerFilter. This currently
has private visibility.

Solution:
Make TraceInitializerFilter public.

Result:
You can now configure servers with, for example:
.withStack(Http.server.stack.remove(TraceInitializerFilter.role))

RB_ID=915407"
mosesn,2017-04-26 16:25:40,https://api.github.com/repos/twitter/finagle/git/commits/e03c0d86693c574643be2a4c9e79f00003ca5492,e03c0d86693c574643be2a4c9e79f00003ca5492,"finagle-http: Disable the failure detector in http/2

Problem

The threshold failure detector seems to make dead services flap in http/2.

Solution

Disable it for now.

RB_ID=915336"
kevinoliver,2017-04-25 21:21:22,https://api.github.com/repos/twitter/finagle/git/commits/58148ecb69a154f0627aab263b8e9558fdccb767,58148ecb69a154f0627aab263b8e9558fdccb767,"finagle-ostrich4: Remove from the project

Problem / Solution

As noted in our blog post [1], we are removing the finagle-ostrich4 module.

[1] https://finagle.github.io/blog/2017/04/06/announce-removals/

RB_ID=915327"
kevinoliver,2017-04-25 20:05:29,https://api.github.com/repos/twitter/finagle/git/commits/18c7bb4692c94e6c21ec83cd0ac7107b3f628945,18c7bb4692c94e6c21ec83cd0ac7107b3f628945,"finagle-mdns: Remove from the project

Problem / Solution

As noted in our blog post [1], we are removing the finagle-mdns module.

[1] https://finagle.github.io/blog/2017/04/06/announce-removals/

RB_ID=915216
TBR=true"
kevinoliver,2017-04-25 18:06:52,https://api.github.com/repos/twitter/finagle/git/commits/e89946ecdc9163fd63ac33e8bfbbde6019d65536,e89946ecdc9163fd63ac33e8bfbbde6019d65536,"finagle-kestrel: Remove from the project

Problem / Solution

As noted in our blog post [1], we are removing the finagle-kestrel module.

[1] https://finagle.github.io/blog/2017/04/06/announce-removals/

RB_ID=915221
TBR=true"
kevinoliver,2017-04-24 23:50:21,https://api.github.com/repos/twitter/finagle/git/commits/7bf84b5ce4319ca5aa73a998284c36aec3257734,7bf84b5ce4319ca5aa73a998284c36aec3257734,"finagle-native: Remove from the project

Problem / Solution

As noted in our blog post [1], we are removing the finagle-native module.

[1] https://finagle.github.io/blog/2017/04/06/announce-removals/

RB_ID=915204"
kevinoliver,2017-04-24 23:32:59,https://api.github.com/repos/twitter/finagle/git/commits/b94eae4e6d047e68d2b2769e4390b10924480f78,b94eae4e6d047e68d2b2769e4390b10924480f78,"finagle-stream: Remove from the project

Problem / Solution

As noted in our blog post [1], we are removing the finagle-stream module.

[1] https://finagle.github.io/blog/2017/04/06/announce-removals/

RB_ID=915200"
kevinoliver,2017-04-24 23:22:31,https://api.github.com/repos/twitter/finagle/git/commits/47c40110ec30c384ed6be464d68ba48c433f991b,47c40110ec30c384ed6be464d68ba48c433f991b,"docs: update CONTRIBUTING.md

Problem / Solution

Last week we updated Finagle's CONTRIBUTING.md and now we want to
apply those changes to our other projects: util, finatra,
twitter-server, scrooge.

RB_ID=915195"
jcrossley,2017-04-24 22:53:06,https://api.github.com/repos/twitter/finagle/git/commits/1b5b79541d4a39618636be9b66ae6a06912b6095,1b5b79541d4a39618636be9b66ae6a06912b6095,"finagle-kestrel: Remove deprecated MultiReader constuctors

Problem / Solution

Several c.t.f.kestrel.MultiReader constructors are
deprecated. Remove them.

RB_ID=914910
TBR=true"
zaneli,2017-04-24 22:49:06,https://api.github.com/repos/twitter/finagle/git/commits/8fbabf3761c71e0f055315f6ed4fcbdc67bbff6e,8fbabf3761c71e0f055315f6ed4fcbdc67bbff6e,"finagle-{core, memcached, ostrich4}: Use collection.breakOut

Problem

use `map(...)(breakOut)` is slightly more efficient than `map(...).toSeq` and so
on.

Solution

replace `map(...).toSeq`, `toList`, `toMap` with `map(...)(breakOut)`.

Signed-off-by: Yufan Gong <yufang@twitter.com>

RB_ID=915217"
vkostyukov,2017-04-24 19:53:45,https://api.github.com/repos/twitter/finagle/git/commits/e503b2cde876b157a58804cf2fc6c4cb781c0287,e503b2cde876b157a58804cf2fc6c4cb781c0287,"finagle: No need for AnyToHeap in the pipelines with BufCodec

Problem / Solution

`AnyToHeap` inbound handler isn't that necessary for pipelines with `BufCodec`s installed given that
we merge their logic. This not only makes most of our pipelines thinner and simpler but also slightly
helps performance-wise. Now we're going to `Buf` directly avoiding allocations of one extra `ByteBuf`
wrapper (in `AnyToHeap`).

Note that HTTP pipelines still have `AnyToHeap` since they don't use `BufCodec`.

RB_ID=915122"
roanta,2017-04-24 17:59:17,https://api.github.com/repos/twitter/finagle/git/commits/d204b7604bebceb5a21b4297e3d3e3341b03e89f,d204b7604bebceb5a21b4297e3d3e3341b03e89f,"finagle-core: Reclaim idle sessions when using aperture

Problem

It is possible for sessions to fall out of an aperture after
being used and become idle. For example, during a rolling restart
this will certainly happen.

Solution

Detect if a client is using aperture (and doesn't have a session
idle time set) and set one in this case. The idle time is calculated
as a multiple of the aperture's smooth window. The rationale is
that as the number of smooth windows that pass increases, and a
session remains idle, our degree of certainty that it will remain
idle also increases.

RB_ID=914962"
roanta,2017-04-24 17:50:35,https://api.github.com/repos/twitter/finagle/git/commits/65216c5d6c2664a51237e9c0e02f5c4c1e0c166c,65216c5d6c2664a51237e9c0e02f5c4c1e0c166c,"finagle-core: cleanup apply in Balancer

Problem / Solution

Remove unused parameters passed to `apply`/`pick` in `Balancer`.

RB_ID=915128"
yufangong,2017-04-22 02:31:58,https://api.github.com/repos/twitter/finagle/git/commits/9480b6441467c73d65516fc55735c1e0d57ab612,9480b6441467c73d65516fc55735c1e0d57ab612,"finagle-thriftmux: Add withStack and filtered to Server

Problem:

ThriftMux.Server does not have a `withStack()` method as ThriftMux.Client has
that allow users to replace things on the stack.

Solution:

Add `withStack()`, also add `filtered()` to allow servers to be filtered.

RB_ID=915095"
vkostyukov,2017-04-21 23:25:49,https://api.github.com/repos/twitter/finagle/git/commits/b73677acb743dbd07bba5c01d067a9484f106eda,b73677acb743dbd07bba5c01d067a9484f106eda,"finagle-netty4: Remove Shared variants of BufAsByteBuf and ByteBufAsBuf

Problem

`Shared` variants of `BufAsByteBuf` and `ByteBufAsBuf` aren't used and don't actually
make a lot of sense given the nature of Netty 4 <-> Finagle buffers conversion. There
is no need to keep maintaining them.

Solution

Remove `Shared` variants for Netty 4 wrappers.

RB_ID=915100"
kevinoliver,2017-04-21 23:24:35,https://api.github.com/repos/twitter/finagle/git/commits/9b7c47befd30b41b737cb329a78092237d6d03e3,9b7c47befd30b41b737cb329a78092237d6d03e3,"finagle: Update docs on contributing

Problem / Solution

There are additional expectations that we have for pull requests. As
much as possible, these should be explicit instead of implicit or
found out about after the fact.

RB_ID=915125"
dschobel,2017-04-21 22:07:11,https://api.github.com/repos/twitter/finagle/git/commits/99a751258a205b2bf492038c55b0a69882e6adfc,99a751258a205b2bf492038c55b0a69882e6adfc,"finagle-core: expose ServiceFactoryCache as public

Problem / Solution

Caching ServiceFactory instances is generally useful for applications
which need to talk to arbitrary backends repeatedly. Expose
ServiceFactoryCache as public.

RB_ID=915064"
vkostyukov,2017-04-21 21:17:11,https://api.github.com/repos/twitter/finagle/git/commits/b9038219981648bf2f7a56c837be1aade01a938a,b9038219981648bf2f7a56c837be1aade01a938a,"finagle-netty4: Do not leak Netty 4 byte buffers into the application code

Problem

While `ByteBufAsBuf` provides a reasonably cheap conversion from Netty 4 ByteBuf
to Finagle Buf it may not be a necessarily safe one to use. Because there is no way
to tell if a user is going to store this `ByteBufAsBuf` for a future need and then
serve it back through a Finagle server (that is going to release the buffer once
it's written), it's not safe to assume the buffer will stay accessible as long as
it's reachable. This may break lots of assumptions about JVM memory management

Solution

Make ByteBufAsBuf smart constructor even smarter such that it produces `Buf.ByteArray`s
when possible. This not only prevents Netty 4 buffers from leaking into the application
code (given our current setup with `AnyToHeap`), but also makes sure to use our fastest
`Buf` implementation when possible.

RB_ID=915022"
jcrossley,2017-04-21 18:38:27,https://api.github.com/repos/twitter/finagle/git/commits/b31ac40fdd9e07832879e4c47d3dddca8dca60f0,b31ac40fdd9e07832879e4c47d3dddca8dca60f0,"finagle-memcached: Remove deprecated cas method

Problem

The ""cas"" method in finagle-memcached has been deprecated in
favor of the higher-fidelity ""checkAndSet"". We want to remove it.

Solution

Remove the deprecated method and migrate usages to ""checkAndSet"".

RB_ID=914678"
bryce-anderson,2017-04-20 22:46:18,https://api.github.com/repos/twitter/finagle/git/commits/14f2e5af36f448b55950ba0f2b493f383baff957,14f2e5af36f448b55950ba0f2b493f383baff957,"finagle-netty4: Add ByteBufByteReader

Problem / Solution

We want to implement finagle decoding logic in terms of finagle types
such as ByteReader. Here we introduce an abstract implementation of
ByteReader that reads values directly from a netty4 ByteBuf and a
concrete  refinement that guarentees all emitted values are not tied
to the lifetime of the ByteBuf.

RB_ID=914924"
jcrossley,2017-04-20 22:39:07,https://api.github.com/repos/twitter/finagle/git/commits/9e76cca3848e74982a1ebc402077dcde63cf8ea8,9e76cca3848e74982a1ebc402077dcde63cf8ea8,"finagle-memcached: Remove CachePoolConfig

Problem

CachePoolConfig is not used and we'd like to remove the dependency on
c.t.common.io:json and gson.

Solution

Remove it, and the dependency.

RB_ID=914623"
ryanoneill,2017-04-20 20:59:51,https://api.github.com/repos/twitter/finagle/git/commits/ef94604c6db76959610eeb8fb2bb06810022061f,ef94604c6db76959610eeb8fb2bb06810022061f,"Twitter-oss: Prepare OSS libraries for release

Problem

We want to release the next versions of our Twitter OSS libraries:
 - util -> 6.43.0
 - ostrich -> 9.27.0
 - scrooge -> 4.16.0
 - finagle -> 6.44.0
 - twitter-server -> 1.29.0
 - finatra -> 2.10.0

Solution

Prepare libraries for their next releases.

RB_ID=915023"
kevinoliver,2017-04-20 19:25:31,https://api.github.com/repos/twitter/finagle/git/commits/e78c3a98873a555c0a98ad2605116243146eeab1,e78c3a98873a555c0a98ad2605116243146eeab1,"finagle: Add links to blog from docs

Problem / Solution

Finagle has a blog, but our docs don't point users to it.

RB_ID=914972"
jcrossley,2017-04-20 19:06:29,https://api.github.com/repos/twitter/finagle/git/commits/699ecd3488a28d5a8f214caff82d8ea9d25d33c3,699ecd3488a28d5a8f214caff82d8ea9d25d33c3,"finagle-core: Remove deprecated c.t.f.Resolver.resolve

Problem / Solution

c.t.f.Resolver.resolve is deprecated. Remove it.

RB_ID=914986"
zaneli,2017-04-20 19:04:22,https://api.github.com/repos/twitter/finagle/git/commits/477476dcc5dd36a5eebe51a307b5b7f9e67be8c5,477476dcc5dd36a5eebe51a307b5b7f9e67be8c5,"finagle-core: Fix Scaladoc param name

Problem

There is some difference between Scaladoc and real param name.

Solution

Fix Scaladoc param name.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=914942"
jcrossley,2017-04-20 15:51:37,https://api.github.com/repos/twitter/finagle/git/commits/33082c573295263ddef29ec046c68de2ea7c6067,33082c573295263ddef29ec046c68de2ea7c6067,"finagle-memcached: Remove CachePoolCluster

Problem

The ability to create a memcached client from a
CachePoolCluster has been removed, so we want to remove
CachePoolCluster.

Solution

Remove it.

RB_ID=914915
TBR=true"
bryce-anderson,2017-04-20 15:35:55,https://api.github.com/repos/twitter/finagle/git/commits/2e48323ca31a4716271a87b10d84d2af9a89b27f,2e48323ca31a4716271a87b10d84d2af9a89b27f,"finagle-core: Fix connection leak in ListeningStackServer

Problem / Solution

There is a race condition in Listening stack server between a new
connection being accepted and registered with the server and the server
being closed. We fix it by ensuring that all connections that attempt to
register themselves after the server has been closed are immediately
closed with the passed deadline.

RB_ID=914846"
jcrossley,2017-04-20 15:32:58,https://api.github.com/repos/twitter/finagle/git/commits/4fff5e29591dc10bf1ff8fd0c186fbb26eed0396,4fff5e29591dc10bf1ff8fd0c186fbb26eed0396,"finagle: Remove c.t.f.Client.{newClient, newService} methods that take a Group

Problem / Solution

c.t.f.Client.{newClient, newService} methods that take a Group
are deprecated. Remove them.

RB_ID=914787"
jcrossley,2017-04-19 19:38:38,https://api.github.com/repos/twitter/finagle/git/commits/7487969c5f140405bd059d157456bfca7b421749,7487969c5f140405bd059d157456bfca7b421749,"finagle-memcached: Enable fatal warnings

Problem / Solution

Enable fatal warnings to keep things clean, and fix
resulting errors.

RB_ID=914868"
roanta,2017-04-19 17:59:01,https://api.github.com/repos/twitter/finagle/git/commits/04e263a64d55da0efcdb2ec913d28691bad6a558,04e263a64d55da0efcdb2ec913d28691bad6a558,"finagle-core: remove MinimumSetCluster

Problem / Solution

It has been deprecated for quite some time and ripe
for removal.

RB_ID=914849"
jcrossley,2017-04-19 14:26:39,https://api.github.com/repos/twitter/finagle/git/commits/3bcc4273fcb6eadfc4e6b3b48de50b4b95a49394,3bcc4273fcb6eadfc4e6b3b48de50b4b95a49394,"finagle-core: Remove Group usages in tests

Problem / Solution

Group is deprecated, so we remove its usages in tests
that are not testing its functionality.

RB_ID=914887"
bryce-anderson,2017-04-19 02:49:24,https://api.github.com/repos/twitter/finagle/git/commits/b1bd72adaa826b74b0fef75165cb471d516cd01b,b1bd72adaa826b74b0fef75165cb471d516cd01b,"finagle-*: Refactor HttpNackFilter and expose its Role

Problem

The HttpNackFilter is private[finagle] so users don't have a way of
accessing its Role, forcing them to make their own from the String name
which is a private implementation detail.

Solution

Expose the Role. While doing so, we clean up some of the nack related
constants defined in HttpNackFilter but duplicated in finagle-mux.

RB_ID=914828"
roanta,2017-04-18 23:36:33,https://api.github.com/repos/twitter/finagle/git/commits/80a8ded2ca8c49f295289530152845cf6c2454a1,80a8ded2ca8c49f295289530152845cf6c2454a1,"finagle-core: Improve handling of unavailable nodes when using deterministic aperture

Problem

We want to ensure that Aperture can deal with down
nodes efficiently across configuration. The default
configuration (when deterministic ordering is off)
shuffles all the healthy nodes to the front of the aperture.
This works really well and we can use the same model when
ordering matters, so long as we return to the original order
when the transient failure is gone.

Note, we also cannot keep the ordering intact and simply expand
the aperture. For example, we can't rely on the load band controller
to quickly widen the aperture and avoid down nodes since,
by definition, it tries to dampen the rate of changes to the
aperture.

Solution

Shuffle the healthy nodes to the front and keep track
of the busy ones. When the busy nodes recover, trigger
a rebuild.

Result

All aperture configurations can sustain a rolling restart
batch size of at least 40% percent of the cluster while
maintaining a success rate of 100%, if the backend capacity
permits.

RB_ID=914653"
jcrossley,2017-04-18 23:31:49,https://api.github.com/repos/twitter/finagle/git/commits/7b336039bf32afc9939b7598b9306f2ffafe46b2,7b336039bf32afc9939b7598b9306f2ffafe46b2,"finagle-core: Deprecate ClientBuilder.{group, cluster}

Problem

Group and Cluster are deprecated. We want to remove methods
that use them.

Solution

Deprecate ClientBuilder methods that use Group and Cluster.

RB_ID=914879"
jcrossley,2017-04-18 22:54:12,https://api.github.com/repos/twitter/finagle/git/commits/f8d3cfd397b6bc2173c0dc9d74ae440d5465cd01,f8d3cfd397b6bc2173c0dc9d74ae440d5465cd01,"finagle: ListeningServer no longer extends Group

Problem

c.t.f.Group is deprecated and we want to remove references
to it.

Solution

c.t.f.ListeningServer no longer extends c.t.f.Group.

RB_ID=914693"
kevinoliver,2017-04-18 22:26:48,https://api.github.com/repos/twitter/finagle/git/commits/fc800041347e8109bc8d7dd8c66c3608bf169a8a,fc800041347e8109bc8d7dd8c66c3608bf169a8a,"finagle-exp: Fix log levels on failures in DarkTrafficFilter

Problem

`DarkTrafficFilter` logs failed requests at `error` level which is too
high, and also disregards `HasLogLevel`.

Solution

Respect the level set if `HasLogLevel`, else use `warning`.

RB_ID=914805"
jcrossley,2017-04-18 21:23:58,https://api.github.com/repos/twitter/finagle/git/commits/87f4e7c2ed19b6209b075bf14fa271689b8cabe3,87f4e7c2ed19b6209b075bf14fa271689b8cabe3,"finagle-memcached: Remove deprecations

Problem / Solution

There are various deprecations in finagle-memcached.
Remove them.

RB_ID=914827"
jcrossley,2017-04-18 20:20:12,https://api.github.com/repos/twitter/finagle/git/commits/4adac821ecbb201f6017c4b88140f6ecb48093e0,4adac821ecbb201f6017c4b88140f6ecb48093e0,"finagle-core: Remove deprecated c.t.f.group.StabilizingGroup

Problem / Solution

c.t.f.group.StabilizingGroup is deprecated. Remove it.

RB_ID=914823"
vkostyukov,2017-04-18 19:03:34,https://api.github.com/repos/twitter/finagle/git/commits/a0cbf4dc00e043ec0066c455e67ec25f41423efe,a0cbf4dc00e043ec0066c455e67ec25f41423efe,"finagle-netty4: Introduce Netty4Timer

Problem / Solution

Introducing `Netty4Timer` that provides Twitter's `Timer` API for
Netty 4 `HashedWheelTimer` and, in future, will replace Finagle's
default timer.

RB_ID=914786"
kevinoliver,2017-04-18 18:37:05,https://api.github.com/repos/twitter/finagle/git/commits/b662a9774742bc6dd83493017ad93d0dea89a62f,b662a9774742bc6dd83493017ad93d0dea89a62f,"finagle-core: Define ChannelException in terms of Options

Problem

Constructors for `c.t.f.ChannelException` and its subclasses take arguments
which are often `null`. This is not idiomatic for a public Scala API.

Solution

The constructors now have overloads that take `Options` instead of
allowing `null`. While the existing constructors remain, and forward
to the new ones, this can still cause compilation failures when the
arguments are ambiguous.

RB_ID=914800"
jcrossley,2017-04-18 17:54:13,https://api.github.com/repos/twitter/finagle/git/commits/39abc4f822c1cccf3557e92cc51a5f17d4266c5d,39abc4f822c1cccf3557e92cc51a5f17d4266c5d,"finagle-memcached: Fix flakey test in integration.MemcachedTest

Problem

The ""re-hash when a bad host is ejected"" test in
integration.MemcachedTest is flakey because we can't control
which node (server) the Distributer picks as the backend for
a partitioned client of the hash of a given key (even if we
can control the hashing function); thus, for a given number
of backends, and a client partitioned for N keys,
we can't guarantee 100% usage of the backends, and shutting
one down will not trigger ejection and cache misses if it is not
used by any of the clients.

Solution

Shut down N - 1 of the backends; it's very unlikely that all
partitioned clients hash to the same backend, and thus shutting
down the servers will trigger ejection.

RB_ID=914768"
jcrossley,2017-04-18 16:08:00,https://api.github.com/repos/twitter/finagle/git/commits/8f77fa56517476d37f19970f717ba4869888adb2,8f77fa56517476d37f19970f717ba4869888adb2,"finagle-core: Fix Retries docs and add test for svc acquisition requeues

Problem

The docs for c.t.f.service.Retries suggest that service
application requeues are gated by `RequeueFilter` (and thus
a budget), but this is not the case.

Solution

Fix docs and add a test showing that we always retry retryable
service acquisition failures `Retries.Effort` times, regardless of
the budget set for RequeueFilter.

RB_ID=914659"
isabelmartin,2017-04-17 23:59:27,https://api.github.com/repos/twitter/finagle/git/commits/9a84a5c5e971ce3aee329c9004990c2e45e3dda7,9a84a5c5e971ce3aee329c9004990c2e45e3dda7,"finagle-core: Add a Java-friendly version of ServiceFactory.const()

Problem

ServiceFactory.const() cannot be called from Java since ""const"" is a keyword.

Solution

Add an identical Java-friendly version called ""constant"".

RB_ID=914749"
dschobel,2017-04-17 22:35:44,https://api.github.com/repos/twitter/finagle/git/commits/ebdc196d96fd69d5c42aef57b971a9e5285544e4,ebdc196d96fd69d5c42aef57b971a9e5285544e4,"finagle-mux: client pipeline optimization

Problem / Solution

Being smarter about slice boundaries when copying data in mux's framing
handler lets us eliminate a copy of all inbound client payloads.

RB_ID=914611"
matsu-chara,2017-04-17 22:31:13,https://api.github.com/repos/twitter/finagle/git/commits/48d9e52b18192460ea2d5bd9984f4e574c4938aa,48d9e52b18192460ea2d5bd9984f4e574c4938aa,"finagle-doc: fix incorrect link

Problem

- HeapBalancer.scala was moved to HeapLeastLoaded.scala.

- StatsFilter.scala was moved to finagle-http module.

Solution

fix it.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=914717"
torao,2017-04-17 20:07:21,https://api.github.com/repos/twitter/finagle/git/commits/154b3dc830adaf06a4e0e8bee847db5c6ad31769,154b3dc830adaf06a4e0e8bee847db5c6ad31769,"finagle-base-http: fix to force English to HTTP date format

Problem

In `finagle-base-http`, `Message.httpDateFormat()` uses JavaVM-default
locale to format the specified date. For this reason, it generate
incorrect HTTP date headers in non-English locales and some HTTP
clients cannot recognize the value as date.

    scala> System.getProperty(""user.language"")
    res2: String = ja
    scala> com.twitter.finagle.http.Message.httpDateFormat(new Date(0L))
    res3: String = 木, 01 1 1970 00:00:00 GMT

In Japanese, the  means Thu but it violates wkday for HTTP Full Date
Spec [1]. The `Message.httpDateFormat()` used by `date_=()`,
`expires_=()` and `lastModified_=()` in class `Message`.

Solution

I added `Locale.ENGLISH` parameter to `FastDateFormat.getInstance()`
to force wkday in English. It seems to work very well in Japanese
environment.

The other workaround is to use `headerMap.add(String,Date)` instead of
these. This method uses another date-format implimentation in
`HeaderMap.format(Date)`.

[1] https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=914721"
bryce-anderson,2017-04-17 16:33:17,https://api.github.com/repos/twitter/finagle/git/commits/97871580fca9962129f754c65e497289fdff573b,97871580fca9962129f754c65e497289fdff573b,"finagle-core: Hoist logic from StdStackServer into an intermediate, ListeningStackServer

Problem

The StdStackServer is based on the transport + disaptcher model for
establishing connections and dispatching requests. In addition, it
contains most of the logic used for tracking sessions and registering
connections. This makes it difficult to build servers that don't rely
on the transport + dispatcher model.

Solution

Create a new intermediate type, ListeningStackServer, which acts as an
implemenentation template that isn't dependant on a specific session
pattern. The logic from StdStackServer responsible for preparing the
ServiceFactory and tracking sessions is hoisted into this new template.

RB_ID=914124"
kevinoliver,2017-04-14 19:52:55,https://api.github.com/repos/twitter/finagle/git/commits/d40556907e44f34a261b20362366a678470cf295,d40556907e44f34a261b20362366a678470cf295,"finagle-doc: Add MethodBuilder to user guide

Problem / Solution

`MethodBuilder`, while experimental, is a significant new API for
clients and needs coverage in the user guide.

RB_ID=914559"
kevinoliver,2017-04-14 19:29:15,https://api.github.com/repos/twitter/finagle/git/commits/369ecbd4882ef1a95cb2e032422d3361f316c3b2,369ecbd4882ef1a95cb2e032422d3361f316c3b2,"docs: Use https links for github

Problem / Solution

Github serves our pages over SSL but our links were not always using it.

RB_ID=914614"
kevinoliver,2017-04-14 16:31:06,https://api.github.com/repos/twitter/finagle/git/commits/a9fe8c732c37f882c05c98b61e4839c163ab3866,a9fe8c732c37f882c05c98b61e4839c163ab3866,"finagle-integration: Mark MethodBuilder tests as flaky

Problem

Rarely (1 in 10,000+ runs) these tests fail due to a test timeout
instead. Stacktrace looks like:

    org.scalatest.exceptions.TestFailedException: Expected exception com.twitter.finagle.IndividualRequestTimeoutException to be thrown, but com.twitter.util.TimeoutException was thrown
    at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:528)
    at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
    at org.scalatest.Assertions$class.intercept(Assertions.scala:812)
    at org.scalatest.FunSuite.intercept(FunSuite.scala:1560)
    at com.twitter.finagle.integration.MethodBuilderTest$$anonfun$testPerRequestTimeout$1.apply$mcV$sp(MethodBuilderTest.scala:112)
    at com.twitter.finagle.integration.MethodBuilderTest$$anonfun$testPerRequestTimeout$1.apply(MethodBuilderTest.scala:101)
    at com.twitter.finagle.integration.MethodBuilderTest$$anonfun$testPerRequestTimeout$1.apply(MethodBuilderTest.scala:101)
    at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
    at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
    at org.scalatest.Transformer.apply(Transformer.scala:22)
    at org.scalatest.Transformer.apply(Transformer.scala:20)
    at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
    at org.scalatest.TestSuite$class.withFixture(TestSuite.scala:196)
    at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
    at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:183)
    at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
    at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:196)
    at org.scalatest.SuperEngine.runTestImpl(Engine.scala:289)
    at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:196)
    at org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
    at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
    at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:229)
    at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:396)
    at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:384)
    at scala.collection.immutable.List.foreach(List.scala:381)
    at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:384)
    at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:379)
    at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:461)
    at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:229)
    at org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
    at org.scalatest.Suite$class.run(Suite.scala:1147)
    at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
    at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
    at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:233)
    at org.scalatest.SuperEngine.runImpl(Engine.scala:521)
    at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:233)
    at org.scalatest.FunSuite.run(FunSuite.scala:1560)
    at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:99)

Solution

Mark the tests as flaky.

RB_ID=914260"
vkostyukov,2017-04-13 22:15:19,https://api.github.com/repos/twitter/finagle/git/commits/de9e8e5e77a51ab91c862bf52752f9bf83ec735f,de9e8e5e77a51ab91c862bf52752f9bf83ec735f,"finagle-netty4: Bypass SOCKS5 proxy if remote is localhost

Problem / Solution

Finagle's Netty 3 implementation of a transporter (i.e., `Netty3Transporter`) was
bypassing SOCKS5 proxy if the remote destination was localhost. We need to port
this behavior to finagle-netty4.

RB_ID=914494"
dschobel,2017-04-13 21:01:36,https://api.github.com/repos/twitter/finagle/git/commits/e95999a3a9f81657e401276d8e3b4f6fe0a9b00a,e95999a3a9f81657e401276d8e3b4f6fe0a9b00a,"finagle-core: make string protocol publicly visible

Problem / Solution

The string protocol traits will be more useful to projects outside
finagle if they're actually accessible.

RB_ID=914548"
roanta,2017-04-13 18:47:30,https://api.github.com/repos/twitter/finagle/git/commits/d608d3095e6e5f0fb1061eee70e07ae96ec29cd2,d608d3095e6e5f0fb1061eee70e07ae96ec29cd2,"finagle-core: fix flaky ApertureTest

Problem / Solution

It's possible for the underlying balancer updater to not
inline rebuilds when setting the coordinate for aperture.
In this case, we are at the mercy of another thread updating
the coordinate. To avoid this, we manually trigger the rebuild
after we set the coordinate.

RB_ID=914509"
vkostyukov,2017-04-13 18:46:06,https://api.github.com/repos/twitter/finagle/git/commits/c0558199f66ebd2a50038d1cda7b96fa0018ef60,c0558199f66ebd2a50038d1cda7b96fa0018ef60,"finagle-netty4: Export pooling metrics when pooling is enabled

Problem / Solution

This part was lost during the rebase. Essentially, pooling metrics should
be exported either when `poolReceiveBuffers()` or `usePooling()` is enabled.

RB_ID=914510"
dschobel,2017-04-13 17:21:47,https://api.github.com/repos/twitter/finagle/git/commits/7222f4f5db9f7b77163df5056cd9e1cd38bbf519,7222f4f5db9f7b77163df5056cd9e1cd38bbf519,"Problem / Solution

Introduce a resource aware async queue to support messages backed
by external resources.

RB_ID=914191"
roanta,2017-04-12 22:07:30,https://api.github.com/repos/twitter/finagle/git/commits/af6ad7cd4b4171ecaf61c3d132f2af4040724612,af6ad7cd4b4171ecaf61c3d132f2af4040724612,"finagle-core: set min aperture when number of clients < servers

Problem

In cases where there are fewer clients than servers, we want to
additionally ensure that we get full ring coverage. For example,
imagine the degenerate case where we have an min aperture of size
1 and fewer clients than servers – we know that we will at most cover
`numClients` of the server ring. Thus, we need a min aperture size
of at least ceil(`numServers` / `numClients`).

Solution

Calculate the min aperture in this case.

RB_ID=914322"
dschobel,2017-04-11 23:43:01,https://api.github.com/repos/twitter/finagle/git/commits/c8d3481614440c2f4a411eba436196895c5741a1,c8d3481614440c2f4a411eba436196895c5741a1,"finagle-core: export string protocol in BUILD

Problem / Solution

StringClient + Server are useful testing pieces. Export them for
use by other projects.

RB_ID=914363"
jcrossley,2017-04-11 23:24:32,https://api.github.com/repos/twitter/finagle/git/commits/77fb8a0d1fb2936afdccf42fa1ee30e1b7177d83,77fb8a0d1fb2936afdccf42fa1ee30e1b7177d83,"finagle-tunable, util-tunable: Set TunableMap source for maps composing StandardTunableMap

Problem

We'd like to be able to show a meaningful source for the TunableMaps
displayed on the Twitter-Server admin endpoint.

Solution

Add a meaningful source to all maps composing StandardTunableMap.

RB_ID=913797"
jcrossley,2017-04-11 22:00:34,https://api.github.com/repos/twitter/finagle/git/commits/7f884bb28b2362cf8a42b013aa09bf4a895f44cd,7f884bb28b2362cf8a42b013aa09bf4a895f44cd,"util-tunable, finagle-tunable: Support for env and instance-specific Tunables from other sources

Problem

In addition to being able to load per-instance and per-environment
Tunables from local files, we'd like to be able to load these
files from other sources.

Solution

Add support for per-instance and per-environment configurations
for other sources.

RB_ID=913695"
kevinoliver,2017-04-11 21:44:21,https://api.github.com/repos/twitter/finagle/git/commits/7149405e5551192e1e0831ac996c9c9dba5bbcd8,7149405e5551192e1e0831ac996c9c9dba5bbcd8,"finagle-{http, thriftmux}: Widen MethodBuilder visibility

Problem / Solution

While `MethodBuilder` is still experimental, it is now ready to be
canaried. In order to do this, the access modifiers must be widened to
public.

RB_ID=914337"
mosesn,2017-04-11 21:29:09,https://api.github.com/repos/twitter/finagle/git/commits/6c34905ed2fdfc732238f7332841ea6f1bd43c82,6c34905ed2fdfc732238f7332841ea6f1bd43c82,"finagle-http2: Stop upgrading before request has finished

Problem

When we send an h2c upgrade request, we can receive an upgrade response
immediately, but we shouldn't upgrade the pipeline until we've finished sending
the rest of the h2c upgrade request.

Solution

When the upgrade is successful, delay upgrading until after the initial upgrade
request has finished.

RB_ID=914104"
bryce-anderson,2017-04-11 20:27:51,https://api.github.com/repos/twitter/finagle/git/commits/b1fa2f15ca817525e7ff434fa66cb325a50b4ba1,b1fa2f15ca817525e7ff434fa66cb325a50b4ba1,"finagle-mux: Make ByteReader the nugget for mux mesage decoding

Problem / Solution

We decode mux messages in terms of the `Buf` type which necessitates the
creation of a number of intermediate `ByteReader` instances. We can
simplify things by making `ByteReader` the base case for decoding and
preserve the API by wrapping a `Buf` with a `ByteReader`.

RB_ID=914303"
jcrossley,2017-04-11 19:48:42,https://api.github.com/repos/twitter/finagle/git/commits/5365731e1fd311a80ef8176f6df9b7736e2f76c8,5365731e1fd311a80ef8176f6df9b7736e2f76c8,"finagle-tunable, util-tunable: Links to docs

Problem / Solution

Now that we have docs for Tunables, we should link to them
where applicable!

RB_ID=914310"
vkostyukov,2017-04-11 19:43:37,https://api.github.com/repos/twitter/finagle/git/commits/f5a130970d7f3f45a780420d8ce05ab2bb9bd00f,f5a130970d7f3f45a780420d8ce05ab2bb9bd00f,"finagle-mux: Remove Netty 3 implementation

Problem / Solution

Finagle's Mux implementation has been running Netty 4 for quite a while.
We're confident in the current implementation and are removing the old
one based on Netty 3.

RB_ID=914239"
roanta,2017-04-11 17:55:49,https://api.github.com/repos/twitter/finagle/git/commits/776fcd5491a32bc5803f97e6898b3b46b0b9784f,776fcd5491a32bc5803f97e6898b3b46b0b9784f,"finagle-core: simplify the AddressOrdering param and log on failure

Problem / Solution

It's possible for the activity pipeline in between TrafficDistribtor
and building a new distributor in `Balancer` to fail. We want to log
when this happens so it's easier to debug. This patch also simplifies
the interface for AddressOrdering to no longer take a StatsReceiver
since orderings were simplified.

RB_ID=914113"
kevinoliver,2017-04-11 16:43:02,https://api.github.com/repos/twitter/finagle/git/commits/12a28aa65697f36c19714dab5af20edb63abce35,12a28aa65697f36c19714dab5af20edb63abce35,"finagle-zipkin: Update README to use Finagle 6 APIs

Problem

The finagle-zipkin README still references the old
ClientBuilder/ServerBuilder style of creation.

h/t to cacoco to pointing this out.

Solution

Update the docs to use the Finagle 6 style APIs.

RB_ID=914265"
dschobel,2017-04-11 01:12:53,https://api.github.com/repos/twitter/finagle/git/commits/4f204420b50f4a2b92adaf6cd63fb4a880629306,4f204420b50f4a2b92adaf6cd63fb4a880629306,"finagle-netty4: parameterize ChannelTransport by queue

Problem / Solution

Parameterizing ChannelTransport by the backing queue allows swapping
in different queue management logic transparently to ChannelTransport.

RB_ID=914184"
roanta,2017-04-10 17:59:14,https://api.github.com/repos/twitter/finagle/git/commits/03549871ea0c4e7eb122999b78e4b5325348824b,03549871ea0c4e7eb122999b78e4b5325348824b,"finagle-serversets: Fix AddressOrdering

Problem

It's possible for `AddressOrdering` to fail when passed into the
default java util sort methods since it is inconsistent across
comparisons. For example, transitivity doesn't hold with the
following example if we fallback to sorting by octets when
the shardId is missing:

a: shardId: Some(2), octects: 1.2.3.3
b: shardId: None, octects: 1.2.3.4
c: shardId: Some(1), octects: 1.2.3.5

a < b
b < c
a > c (non-transitive ordering!)

In general, it's dangerous to compose orderings like this.

Solution

Remove the `fallback` ordering in `ZkMetadata.AddressOrdering`,
and handle all the cases to compare two addresses with varying
metadata.

RB_ID=914111"
jcrossley,2017-04-10 16:49:34,https://api.github.com/repos/twitter/finagle/git/commits/00e668089fa95167f22ec4df01250ac04991a50b,00e668089fa95167f22ec4df01250ac04991a50b,"finagle, twitter-server: Tunables docs

Problem

Tunables could use some docs.

Solution

Add docs for Tunables!

RB_ID=913982"
kevinoliver,2017-04-07 22:36:34,https://api.github.com/repos/twitter/finagle/git/commits/bf271a0b0827336780cb8c9637089fd95ab6cf7d,bf271a0b0827336780cb8c9637089fd95ab6cf7d,"finagle-http: MethodBuilder from a ClientBuilder

Problem

Users need an API to migrate from the `ClientBuilder` API over to
an HTTP `MethodBuilder`.

Solution

Introduce a `c.t.f.http.MethodBuilder.from(ClientBuilder)` API.

Result

Users of HTTP ClientBuilders can now migrate in the same way as
`c.t.f.thriftmux.MethodBuilder`.

RB_ID=914058"
vkostyukov,2017-04-07 05:51:05,https://api.github.com/repos/twitter/finagle/git/commits/2528b7bea9feeae0cc1ab815a5a473531b9cdec9,2528b7bea9feeae0cc1ab815a5a473531b9cdec9,"finagle-netty4: Add toggle for enabling pooling

Problem / Solution

To be able to enable pooling in Finagle in a controlled manner we're introducing
a new toggle `com.twitter.finagle.netty4.UsePooling` (disabled by default).

Notes:

1. `poolReceiveBuffers` still exists but will eventually be suppressed by just `UsePooling`
2. Since there are two purposes on pooled allocators in Finagle (receive buffers vs. everything)
   we configure them with different chunk sizes (128kb for receiver buffers, 1mb for everything)
3. `UnpooledAllocator` had to be moved to `Allocator.Unpooled` to resolve the initialization
   order problems hence make `netty4/package.scala` a bit simpler/smaller.

RB_ID=912789"
zaneli,2017-04-07 02:11:23,https://api.github.com/repos/twitter/finagle/git/commits/96f38130d432c683b561e6ddca0347c61c7bcb24,96f38130d432c683b561e6ddca0347c61c7bcb24,"finagle-core: Add tailrec annotation

Problem

Some tail recursive methods have no `@tailrec` annotation.

Solution

Added `@tailrec` annotation.

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=914046"
vkostyukov,2017-04-07 01:54:41,https://api.github.com/repos/twitter/finagle/git/commits/db2a5159c1965b2feea312a6d2689dce87262d7c,db2a5159c1965b2feea312a6d2689dce87262d7c,"finagle-netty4: Rebrand DirectToHeap to AnyToHeap
Problem / Solution

Netty treats composite buffers with at least one heap component as non-directs,
which may leak direct buffers into the users space. We rebrand DirectToHeap
to copy **everything** on to the unpooled/heap no matter what `isDirect` returns
(since we can not trust it).

RB_ID=913984"
kevinoliver,2017-04-07 01:16:01,https://api.github.com/repos/twitter/finagle/git/commits/6c48d891f9bdcec3e1adea6089a735b78b586c22,6c48d891f9bdcec3e1adea6089a735b78b586c22,"finagle-toggle, twitter-server: Capture the last value of Toggle

Problem

For toggles that are fractionally enabled, it is hard for developers
to know the state of their toggle across their cluster.

Solution

Introduce `Toggle.Captured` which is used by the standard toggle
mechanisms. This captures the last value of `Toggle.apply` and can be
introspected.

Result

Users can introspect TwitterServer's /admin/toggles endpoint to see
the lastValue.

For example, here is a server running with
`com.twitter.finagle.netty4.poolReceiveBuffers` enabled and lastValue
appears as true.

    $ curl -s http://0.0.0.0:7090/admin/toggles/com.twitter.finagle.netty4/com.twitter.finagle.netty4.poolReceiveBuffers
    {
      ""libraries"" : [
        {
          ""libraryName"" : ""com.twitter.finagle.netty4"",
          ""toggles"" : [
            {
              ""current"" : {
                ""id"" : ""com.twitter.finagle.netty4.poolReceiveBuffers"",
                ""fraction"" : 1.0,
                ""lastValue"" : true,
                ""description"" : ""Enable pooling of receive buffers on Netty 4""
              },
              ...

RB_ID=913925"
zaneli,2017-04-07 00:06:07,https://api.github.com/repos/twitter/finagle/git/commits/1e0b86593bd6b66ee5a92155e22759ebd9fd63be,1e0b86593bd6b66ee5a92155e22759ebd9fd63be,"finagle-core: Fix BufChannelBuffer.getLong()

Problem

In the case of specifying LITTLE_ENDIAN, due to lack of `|` operator `BufChannelBuffer.getLong()` returns incorrect value.

Solution

Fix `BufChannelBuffer.getLong()` method by adding `|` operator.

Result

Even in the case of specifying LITTLE_ENDIAN, `BufChannelBuffer.getLong()` returns correct value.

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=913899"
matsu-chara,2017-04-06 23:34:01,https://api.github.com/repos/twitter/finagle/git/commits/0114a84edd8097b788f55aa728910ea0d178db14,0114a84edd8097b788f55aa728910ea0d178db14,"finagle-doc: fix finagle/clientregistry/size metrics description

Problem

document of finagle/clientregistry/size is wrong.

`finagle/clientregistry/size` is a ClientRegistry metrics but,
description is `registered in the HashedWheelTimer.Default.`

ref: https://github.com/twitter/finagle/commit/4acff045686f90

Solution

fix it

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=914048"
kevinoliver,2017-04-06 23:02:42,https://api.github.com/repos/twitter/finagle/git/commits/f5a06cede65c883b2b65ffbdc24a514c60844a64,f5a06cede65c883b2b65ffbdc24a514c60844a64,"finagle-core,thriftmux: MethodBuilder from a ClientBuilder

Problem

Users need an API to migrate from the `ClientBuilder` API over to
`MethodBuilder`.

Solution

Introduce a `c.t.f.thriftmux.MethodBuilder.from(ClientBuilder)` API.

Result

Users of ThriftMux ClientBuilders can now migrate. This will be later
applied to `c.t.f.http.MethodBuilder` if this is deemed succesful.

RB_ID=913800"
roanta,2017-04-06 22:04:15,https://api.github.com/repos/twitter/finagle/git/commits/0724de62228301711d535c141e1df3b94d075d87,0724de62228301711d535c141e1df3b94d075d87,"finagle-core: Introduce AperturePeakEwma

Problem / Solution

PeakEwma has lots of advantages over the standard least loaded.
We'd like to be able to take advantage of those when using Aperture
so this patch adds a constructor for a new balancer with the relevant
traits mixed-in.

RB_ID=913862"
kevinoliver,2017-04-06 19:54:54,https://api.github.com/repos/twitter/finagle/git/commits/32ac4e4e59652241a16d8003153d5e2099bc3abf,32ac4e4e59652241a16d8003153d5e2099bc3abf,"finagle-core: MethodBuilder annotates Failures with the method name

Problem

We have metadata about the name of the method that failed but do not
add it to `Failures` sources.

Solution

Annotate a `Failure` with the method name that failed.

Result

More information conveyed to the user about where the Failure happened.

RB_ID=913812"
jcrossley,2017-04-05 22:16:57,https://api.github.com/repos/twitter/finagle/git/commits/c7b3f18dae4412514d936a8ec4fe98de47c2eeb3,c7b3f18dae4412514d936a8ec4fe98de47c2eeb3,"finagle-{toggle, tunable}: Use ServerInfo.instanceId when loading JSON files

Problem

ServerInfo.id is a String that may contain characters that are illegal
in file names, and we would prefer to use reference the instance id
when looking for Tunable configuration files with names of the form
""instance-$instanceId.json""

Solution

Add an instanceId field to ServerInfo, and use that when looking for
files in StandardTunableMap.

RB_ID=913604"
matsu-chara,2017-04-05 18:32:19,https://api.github.com/repos/twitter/finagle/git/commits/46e83fcd2efa770755a4dc4d7e27cc3514ee65a0,46e83fcd2efa770755a4dc4d7e27cc3514ee65a0,"Problem

some doc link target was incorrect.
scaladoc url schema has changed, so link to the scaladoc was broken

Solution

fix it.

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=913804"
vkostyukov,2017-04-05 01:51:15,https://api.github.com/repos/twitter/finagle/git/commits/17fba7931240e75fb5c0adffea499dd0f043705c,17fba7931240e75fb5c0adffea499dd0f043705c,"finagle: Revert ChannelTransport changes around ref-counting

Reverting rb/901673

RB_ID=913796"
mosesn,2017-04-04 23:48:01,https://api.github.com/repos/twitter/finagle/git/commits/d055f204d2bc5d0d24406396f4790f1f8feadf3a,d055f204d2bc5d0d24406396f4790f1f8feadf3a,"finagle-http2: Make sensitive headers configurable client-side

Problem

HPACK can sometimes lead to increased GC churn when the defaults for which
headers to mark sensitive aren't set correctly.

Solution

Allow users to configure a SensitivityDetector for use on the client-side.

RB_ID=913744"
mosesn,2017-04-04 22:01:36,https://api.github.com/repos/twitter/finagle/git/commits/93f9802f5cbd94b9370035b22140890f55df6c0f,93f9802f5cbd94b9370035b22140890f55df6c0f,"finagle-http2: Reduce log level on interrupt

Problem

We now log loudly if a connection fails the http upgrade.  However, sometimes it
fails the upgrade for a normal reason, like it's interrupted while trying to
establish a connection, or the remote peer cuts the connection.  We typically
don't want to log in this case.

Solution

Provide a guidance log level to log at a better level in the common case.

RB_ID=913743"
bryce-anderson,2017-04-04 18:19:05,https://api.github.com/repos/twitter/finagle/git/commits/588e3a74cedac57b9a4c43cbebc1d3e0c4ec1676,588e3a74cedac57b9a4c43cbebc1d3e0c4ec1676,"finagle-core/finagle-netty4: Transporter implementations emit better error on connect failure

Problem

We have a minor discrepancy in the Netty 3 and Netty 4 Transporter
implementations: on failure to establish a connection, the Netty 4
implementation returns a Failure.rejected(String) with the
underlying exception wrapped while Netty 3 returns a WriteException.

Solution

Change both implementations to return a
Failure(ConnectionFailedException). In addition, The exception
emitted when connection establishment is canceled was changed from
a WriteException to a CancelledConnectionException wrapped in a
Failure.

RB_ID=912113"
roanta,2017-04-04 04:40:38,https://api.github.com/repos/twitter/finagle/git/commits/61bcac050108b613dbe5d3a99d2e1dd15e474b84,61bcac050108b613dbe5d3a99d2e1dd15e474b84,"Problem / Solution

We export the coordinate gauge per load balancer instance, but we don't need
to since it's process global. It also makes it harder to reason about
since we could have multiple lb instances when weights change, for example.

RB_ID=913668"
zaneli,2017-04-03 21:23:30,https://api.github.com/repos/twitter/finagle/git/commits/cf4c0f5a42f32da057b04211895f519ffc2f3abc,cf4c0f5a42f32da057b04211895f519ffc2f3abc,"finagle-toggle: Remove unused params

Problem

loadJsonConfig method receives libraryName and configName params, but finally the
latter only seems to be used.

Solution

Remove libraryName from loadJsonConfig and loadJsonConfigWithEnv method.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=913524"
apakulov,2017-04-03 17:59:50,https://api.github.com/repos/twitter/finagle/git/commits/1ea5da7c51625dae461bd5a118bf9ae2b3aebaff,1ea5da7c51625dae461bd5a118bf9ae2b3aebaff,"finagle: Add Fitbit to ADOPTERS.md

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=913526"
davoclavo,2017-04-03 17:53:15,https://api.github.com/repos/twitter/finagle/git/commits/3b8feb37f65018123a82b9c019a1825714675353,3b8feb37f65018123a82b9c019a1825714675353,"finagle-doc: Fix Services & Filters docs

Problem / Solution

The type signature of a service should be `Service[Req, Rep]` but it is currently
showing `Service[Req, Req]` in the docs.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=913525"
tomas-edwardsson,2017-04-03 17:41:36,https://api.github.com/repos/twitter/finagle/git/commits/e89eacba5471456a86db3177a2540c85424c08bc,e89eacba5471456a86db3177a2540c85424c08bc,"Problem

In Redis 3.2 and newer, the property `pending-commands` was renamed to
`link-pending-commands`. The current implementation only checks for
the former in the `props` and so throws an invalid property exception.

Solution

Check for both properties in `props` to preserve compatibility.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

comments and CHANGES

more changes fixes

RB_ID=913516"
mosesn,2017-04-01 06:11:51,https://api.github.com/repos/twitter/finagle/git/commits/70281462555fa5693d226d5e1ade623a8f0640ee,70281462555fa5693d226d5e1ade623a8f0640ee,"finagle-http2: Fixed an h2c upgrade race

Problem

There's a race when there's an interrupt during the h2c upgrade, where the
connection might not be kicked out immediately.

Solution

Kick out the connection immediately, and ensure that there's no racing funny
business.

Result

Tests are less flaky, and h2c is less racy.

RB_ID=913459"
jcrossley,2017-04-01 00:49:48,https://api.github.com/repos/twitter/finagle/git/commits/9414b55c60d0733b921f1d886580795c937b92ef,9414b55c60d0733b921f1d886580795c937b92ef,"twitter-server, util-tunable: Endpoint to update Tunables

Problem

We'd like to be able to manipulate in-memory Tunables via
an endpoint in Twitter Server admin.

Solution

Add the /admin/tunables/ endpoint to twitter-server. PUT requests
with JSON bodies can be used to update Tunables for a given id
by making a request to /admin/tunables/$id. Other commands to follow
in separate commits.

RB_ID=912645"
vkostyukov,2017-04-01 00:13:59,https://api.github.com/repos/twitter/finagle/git/commits/2e08384a7cf17821cbd6cf1d0175808bc045daa1,2e08384a7cf17821cbd6cf1d0175808bc045daa1,"finagle-netty4: Export some handy N4 static metrics under the Registry

Problem / Solution

There are certain pooling metrics that aren't changed at runtime and yet might
be a valuable contribution into the visibility of the N4 process. Let's export
them (chunkSize, numDirectArenas, numHeapArenas) into a Registry.

As a bonus, this new Registry entries might be used to track pooling adoption.

RB_ID=913530"
mosesn,2017-03-31 23:55:12,https://api.github.com/repos/twitter/finagle/git/commits/40a1fb05a39ab45b94ed12b69daaaab6176377ff,40a1fb05a39ab45b94ed12b69daaaab6176377ff,"finagle-http2: Liveness detection via pings

Problem

We want support for the resiliency feature from mux in http/2 too.

Solution

Hook up the FailureDetector to pings on the client-side.  Netty responds to
pings automatically, so we don't need to do it explicitly on the server-side.

Result

finagle's http/2 implementation can take advantage of PINGs

RB_ID=913341"
jcrossley,2017-03-31 22:40:47,https://api.github.com/repos/twitter/finagle/git/commits/0cf4e2ddcb006d14aba2e776d179e1c56c2da4bc,0cf4e2ddcb006d14aba2e776d179e1c56c2da4bc,"finagle-tunable: Per-environment and per-instance TunableMaps from local files

Problem

In addition to loading the TunableMap from a file ""instances.json"",
which configures Tunables for all instances in all environments, we also
want to be able to specify per-environment and per-instance configuration
files and have these be loaded and composed by StandardTunableMap.

Solution

When loading the JSON-backed TunableMap, StandardTunableMap now composes
TunableMaps by looking for configurations in the following order:
  - environment and instance-specific
  - environment-specific for all instances
  - instance-specific
  - all instances

RB_ID=911909"
isabelmartin,2017-03-31 22:09:50,https://api.github.com/repos/twitter/finagle/git/commits/406fec2c9dd3981069e0b49b1307f13e89af8d8f,406fec2c9dd3981069e0b49b1307f13e89af8d8f,"finagle-core: Fix StringServerTest

Problem

StringServerTest has tests that were disabled due to flakiness. The tests were
flaky since they didn't account for how ConcurrentHashMap aggregate operations
are updated across threads.

Solution

Fix the tests so they can be reenabled.

RB_ID=913519"
roanta,2017-03-31 21:09:32,https://api.github.com/repos/twitter/finagle/git/commits/071c8f1cce830880d2730da3b8142a414ffa62ef,071c8f1cce830880d2730da3b8142a414ffa62ef,"finagle-core: skip flaky CodecFactory test

Problem / Solution

We have a CodecFactory test that fails under high-concurrency.
Codec's are technically deprecated, so we mark this as flaky
in the interim.

RB_ID=913514"
jcrossley,2017-03-31 20:32:25,https://api.github.com/repos/twitter/finagle/git/commits/dafd46465acffe11fc8a7dc3c10bc8c12f1d3967,dafd46465acffe11fc8a7dc3c10bc8c12f1d3967,"finagle-kestrel: Remove Kestrel N4 toggle config

Problem / Solution

We've removed this toggle so we can remove the configuration file.

RB_ID=913497"
jcrossley,2017-03-31 20:00:42,https://api.github.com/repos/twitter/finagle/git/commits/071e71a0ce05529120f33f7daf371041260953a0,071e71a0ce05529120f33f7daf371041260953a0,"finagle-memcached, science/search: Remove Memcached N4 toggle config

Problem / Solution

We've removed this toggle so we can remove the configuration files.

RB_ID=913496"
vkostyukov,2017-03-31 00:31:37,https://api.github.com/repos/twitter/finagle/git/commits/6e2b4a196008586606f0787c3cbb059938513b8d,6e2b4a196008586606f0787c3cbb059938513b8d,"finagle-netty4: Swallow payloads in handshake responses from HTTP proxy servers

Problem

Netty's `MessageAggregator` doesn't manage the read-flow, which is critical
for pipelines with auto-read disabled (Finagle's default) in a way that it
helps preventing connection stalls. Finagle's `HttpProxyConnectHandler` is
one special kind of handler that operates before the `Transport` is created
and no read-requests are issued. This means HTTP proxy connection handshakes
can stall the connection if the proxy server sends handshake response with
fairly big payloads (usually, HTML errors) not fitting into a single chunk.

Solution

Don't rely on `MessageAggregator` and swallow the response payload manually."
nhnFreespirit,2017-03-31 00:04:29,https://api.github.com/repos/twitter/finagle/git/commits/6d59aa032ca81a48e7732f3020bcdfc34ddabe05,6d59aa032ca81a48e7732f3020bcdfc34ddabe05,"Finagle: Make using local Netty jars possible

Problem:
It is currently not possible to build finagle with local
Netty jar files when using pants as certain dependencies
cannot be found

Solution:
Add the dependencies that it complains about to the
relevant Build files

Results:
If modified to point to a local version of the Netty jars
it is now possible to build Finagle with pants

RB_ID=913395"
jcrossley,2017-03-30 20:03:47,https://api.github.com/repos/twitter/finagle/git/commits/a1645e7712be1e176e0ea5836e3790d73113cc00,a1645e7712be1e176e0ea5836e3790d73113cc00,"finagle-core: Change aperture coordinate gauge to never be Float.NaN

Problem

Due to a Stats implementation, the Float.NaN value of the
Aperture coordinate gauge (in the case of missing a missing coordinate)
was causing stats to disappear.

Solution

Change the missing coordinate case in the gauge to be 0f.

RB_ID=913364"
jcrossley,2017-03-30 16:16:50,https://api.github.com/repos/twitter/finagle/git/commits/2eb3f2cbe135ae9b31a39ddbbe0a3edce66a7743,2eb3f2cbe135ae9b31a39ddbbe0a3edce66a7743,"util, finagle: Move StandardTunableMap in util to finagle

Problem

StandardTunableMap needs to access c.t.f.server.ServerInfo
in order to do instance and environment-specific configuration.
This is a Finagle concern.

Solution

Move StandardTunableMap to finagle-tunable.

RB_ID=911777"
vkostyukov,2017-03-30 03:16:00,https://api.github.com/repos/twitter/finagle/git/commits/9ec7b39993b2c7f64cf55527e6b0bb6a9e9fd40a,9ec7b39993b2c7f64cf55527e6b0bb6a9e9fd40a,"source: Migrate Finagle off HTTP codec (use HTTP stack instead)

Disclaimer: Half of this (if not more) is done by Moses Nakamura.

CSL is in the middle of [migrating Finagle HTTP from Netty 3 to Netty 4][1] and we
want to make sure **all users** will be migrated no matter what API they use to
configure HTTP clients/servers. Because of that we move services using HTTP codec
(became package private as part of this RB) to HTTP stack such that they will join
the Netty 4 migration train.

[1]: https://groups.google.com/a/twitter.com/forum/#!topic/finaglers/aijSf9ZRiCw

RB_ID=912427
TBR=true
NO_USER_HOOK=1"
vkostyukov,2017-03-30 02:31:27,https://api.github.com/repos/twitter/finagle/git/commits/3d247b78d40fd9e7db5c0020757e3a6f291cb8f9,3d247b78d40fd9e7db5c0020757e3a6f291cb8f9,"finagle-http2: Copy parent channel's allocator to Http2StreamChannel

Problem / Solution

`Http2StreamChannel` used to maintain H2 streams in Netty and finagle-http2 override channel allocator
to Netty's default (pooled). We copy parent channel's allocator over to `Http2StreamChannelBootstrap`
to make sure newly created H2 channels will use Finagle's default allocator.

See https://github.com/netty/netty/pull/6552

RB_ID=912975"
mosesn,2017-03-30 01:26:44,https://api.github.com/repos/twitter/finagle/git/commits/528789e92fffdcd4c8261bbfba49eeaf24832485,528789e92fffdcd4c8261bbfba49eeaf24832485,"finagle-core: Simplify client construction with endpoint clients

Problem

Our hands are somewhat tied with how to implement an endpoint, because we assume
that all implementations use Netty and that Netty is consistent, neither of
which is always the case.

Solution

Provide a helper class, EndpointerStackClient, that doesn't need to use a
Transporter and Dispatcher.  Among other things, this lets us simplify our
implementation of h2, so we can make Transporter not extend Closable anymore!

Result

It's easier to add custom logic at the endpointer layer.

RB_ID=912889"
mosesn,2017-03-30 01:02:55,https://api.github.com/repos/twitter/finagle/git/commits/74d6a9a421275a7c95ae9fbfd1a25833cd16fd47,74d6a9a421275a7c95ae9fbfd1a25833cd16fd47,"finagle-mux: Remove unneeded BUILD file

Problem

We deleted the files but forgot to delete the BUILD file.

Solution

Delete the BUILD file :P

RB_ID=913291
TBR=true"
vkostyukov,2017-03-29 23:56:48,https://api.github.com/repos/twitter/finagle/git/commits/452af7896f478a604558eb14463417810e76023e,452af7896f478a604558eb14463417810e76023e,"finagle-http: Move DirectToHeap down the pipeline

Problem / Solution

Prior enabling Netty 4 pooling in Finagle, we want to make sure that pooled objects
are never leaking into the user's space (consumed in a server-side `Service`; returned
from a client-side `Service`). The only two protocols having this problem are finagle-http
and finagle-http2 (the rest of the Finagle protocol implementations are already doing
the right thing).

To fix this, we're moving DirectToHeap handler down the HTTP pipelines (it should be
placed right before `ChannelTransport`) such that pooled object will never enter the
user's space.

RB_ID=911689"
vkostyukov,2017-03-28 23:48:27,https://api.github.com/repos/twitter/finagle/git/commits/277617e1782837a799cdf70f4c07247c55df1f50,277617e1782837a799cdf70f4c07247c55df1f50,"finagle: Add new direct-lifecycle test that covers HTTP/1.1 & HTTP/2

Problem / Solution

Let's extend our integration tests enforcing the lifecycles of direct buffers
to cover all the possible HTTP (1.1, 2) client <-> HTTP (1.1, 2) server
combinations. This test should pass when pooling is enabled.

RB_ID=912011"
mosesn,2017-03-28 22:35:40,https://api.github.com/repos/twitter/finagle/git/commits/119884cdc086ee69f3d386ec0bc2c3f1171564e6,119884cdc086ee69f3d386ec0bc2c3f1171564e6,"finagle-{mux,core}: Move FailureDetector to core

Problem

FailureDetector is in mux, so we can't use it elsewhere, but we want to do
liveness detection in h2.

Solution

Move FailureDetector from mux to core, and move it to the new namespace
com.twitter.finagle.liveness.

RB_ID=912337"
mosesn,2017-03-27 23:55:30,https://api.github.com/repos/twitter/finagle/git/commits/7ca62762f79df62bd9ca6d999ad728df26de7f35,7ca62762f79df62bd9ca6d999ad728df26de7f35,"finagle-http2: Hook up pings

Problem

finagle-http2 clients don't know what to do about pings or how to initiate them.

Solution

Add raw support for pings to finagle-http2.

RB_ID=912349"
roanta,2017-03-27 18:45:29,https://api.github.com/repos/twitter/finagle/git/commits/1c1668da34f4dc5659fb3d872765c2b24fcc440e,1c1668da34f4dc5659fb3d872765c2b24fcc440e,"finagle-core: Wire in DeterministicOrdering into Aperture

Problem / Solution

The `Aperture` trait needs to take advantage of deterministic
ordering. This patch wires it up, together with the ring, and allows
the feature to be activated via a boolean at construction time.

RB_ID=911541"
dschobel,2017-03-27 17:54:03,https://api.github.com/repos/twitter/finagle/git/commits/d78a03699b1f196e099f883676c0d6edcf164634,d78a03699b1f196e099f883676c0d6edcf164634,"finagle-*: update BUILD files to avoid deprecated syntax

Problem / Solution

The resources key has been deprecated so move those entries to
dependencies.

RB_ID=911835"
dschobel,2017-03-24 23:19:32,https://api.github.com/repos/twitter/finagle/git/commits/24ecb7bec7ef83e5692b6d99449a9d322c55dc39,24ecb7bec7ef83e5692b6d99449a9d322c55dc39,"finagle-stats: fix flaky tests

Problem

A few finagle-stats tests assumed they weren't in the next collection
window which is not true for 1 second out of every minute.

Solution

Fix the time.

RB_ID=912371"
kevinoliver,2017-03-24 23:04:13,https://api.github.com/repos/twitter/finagle/git/commits/3e11f8f68b3f0c014dc3c973758f4536609de1b6,3e11f8f68b3f0c014dc3c973758f4536609de1b6,"finagle-core: Remove NoStackTrace from ConnectionFailedException and ChannelClosedException

Problem / Solution

While much of the stacktrace for these exceptions will not be terribly
interesting given that they will originate in Netty, it can still be
helpful to see what event triggered them.

RB_ID=912437"
dschobel,2017-03-24 21:56:12,https://api.github.com/repos/twitter/finagle/git/commits/11c09b94aa097e457b98bf3844b668ca7da0d47b,11c09b94aa097e457b98bf3844b668ca7da0d47b,"finagle-netty4: register native epoll status in global registry

Problem / Solution

Replace logging with registry for native epoll status.

RB_ID=912409"
jcrossley,2017-03-23 22:43:42,https://api.github.com/repos/twitter/finagle/git/commits/33424563f3c2b55636e906f873bb06c458e9debd,33424563f3c2b55636e906f873bb06c458e9debd,"finagle-core: Support mutable Stack.Param values in StackRegistry

Problem

StackRegistry.Entry.modules is an immutable data structure that contains
the names and values of Stack.Params. For mutable Stack.Params, this
means that the param values in StackRegistry.Entry.modules do not reflect
changes.

Solution

Make StackRegistry.Entry.modules a function that gets a snapshot of the
current stack and param values.

RB_ID=911713"
vkostyukov,2017-03-23 21:50:50,https://api.github.com/repos/twitter/finagle/git/commits/b1240499f5e3ecbd175b2f05029b40dcb0f4d64e,b1240499f5e3ecbd175b2f05029b40dcb0f4d64e,"finagle-netty4: Use new API for pulling pooling metrics

Problem / Solution

Pooled allocator metrics API has evolved in 4.1.9. Let's migrate off the deprecated API.

RB_ID=912071"
ryanoneill,2017-03-23 01:08:42,https://api.github.com/repos/twitter/finagle/git/commits/796ac1037d3fb53dbbee25b085621949a97fc374,796ac1037d3fb53dbbee25b085621949a97fc374,"finagle-core: Add Public SSL/TLS APIs Based on Configurations

Problem

Using configurations (`SslClientConfiguration`,
`SslServerConfiguration`) and engine factories
(`SslClientEngineFactory`, `SslServerEngineFactory`) are the recommended
approach for fully configuring SSL/TLS on Finagle clients and servers.
These values are not easy to set via the existing APIs.

Solution

Add new SSL/TLS APIs for Finagle clients and servers which use
configurations and engine factories.

RB_ID=911209"
kevinoliver,2017-03-23 00:52:34,https://api.github.com/repos/twitter/finagle/git/commits/e2278ee73382fd07277692dfba50172210ea8e48,e2278ee73382fd07277692dfba50172210ea8e48,"finagle-core: Replace ClientBuilder's GlobalTimeout Param

Problem

Since we want to support relatively easy migration from
`ClientBuilder` to `MethodBuilder`, we can simplify the code by
reducing the stack params down to the single
`TimeoutFilter.TotalTimeout`.

Solution

This revealed a need to share this module make code across the now 3
separate usages.

Result

Less code to maintain and more consistency in our Stack Params.

RB_ID=911943"
kevinoliver,2017-03-23 00:15:12,https://api.github.com/repos/twitter/finagle/git/commits/4087bf9a4c4bf39dcef5faa7c4a971edfe0d1f3e,4087bf9a4c4bf39dcef5faa7c4a971edfe0d1f3e,"finagle-core: Fix MethodBuilder's default timeouts

Problem

The docs for `MethodBuilder` timeouts were a lie and claimed that
there were no defaults. However, in practice users would get the
configuration from the underlying `StackClient`. While working on
adding tests for this, I uncovered a bug with regards to disabling
timeouts on a `MethodBuilder`.

Solution

The docs now reflect the reality and users can now disable timeouts.

RB_ID=911761"
jcrossley,2017-03-22 19:25:57,https://api.github.com/repos/twitter/finagle/git/commits/14bdfdf89e3d3bdda06d9f58bb9d5747b8f25240,14bdfdf89e3d3bdda06d9f58bb9d5747b8f25240,"finagle-kestrel: Remove Netty 3 dependency

Problem

The Finagle Kestrel client uses Netty 4. We should remove the dependency
on Netty 3.

Solution

Remove the Netty 3 dependency from finagle-kestrel.

RB_ID=911182"
dschobel,2017-03-22 19:04:50,https://api.github.com/repos/twitter/finagle/git/commits/c60c184c03c4be075fe8ce8f2132da3847710ab2,c60c184c03c4be075fe8ce8f2132da3847710ab2,"finagle-core: fix flaky ClientRegistryTest

Problem / Solution

ClientRegistryTest implicitly makes assertions about all registered
clients since the ClientRegistry is a global shared resource across
the process, leading to unpredictable results. Instead we assert
the membership of the clients we control.

RB_ID=911869"
jcrossley,2017-03-22 17:15:22,https://api.github.com/repos/twitter/finagle/git/commits/2a3dbb6a6a196ed5d5c18696e134fd953a0b193f,2a3dbb6a6a196ed5d5c18696e134fd953a0b193f,"finagle-memcached, finagle-kestrel: Remove Netty 3 dependency from Memcached and ability to configure Netty 3 from Kestrel

Problem

finagle-memcached has been on Netty 4 for a while now and we
want to remove all the Netty 3 dependencies.

Solution

Remove Netty 3 dependencies from finagle-memcached. finagle-kestrel
depends on parts of finagle-memcached, so removing the Netty 3
dependency from finagle-memcached necessitated removing the ability
to configure finagle-kestrel for Netty 3. Netty 3 dependencies will
be removed from finagle-kestrel in a separate commit.

RB_ID=911031"
dschobel,2017-03-22 00:30:16,https://api.github.com/repos/twitter/finagle/git/commits/0aaecfe1725fb4d4bf248ba842ba6c92f33246ce,0aaecfe1725fb4d4bf248ba842ba6c92f33246ce,"finagle-integration: turn off fail fast in methodbuilder test

Problem / Solution

Fail fast was causing some flakiness so we disable it.

RB_ID=911559"
dschobel,2017-03-22 00:19:52,https://api.github.com/repos/twitter/finagle/git/commits/2d8b78516e269c192cf796445e89f6991c19582a,2d8b78516e269c192cf796445e89f6991c19582a,"finagle-integration: reenable context propagation test

Test was failing with a timeout so we bump the duration.

RB_ID=911753"
ryanoneill,2017-03-21 22:44:26,https://api.github.com/repos/twitter/finagle/git/commits/c23af7660c3d5723dfa415963dd130ddc903a2d8,c23af7660c3d5723dfa415963dd130ddc903a2d8,"util, finagle: Move and Rename BufReader and BufWriter

Problem

`BufReader` and `BufWriter` in finagle-core are useful for working
with `Buf`s, e.g. writing a Netty 4 framed `Buf` protocol
implementation. They are currently inaccessible in `c.t.f.util` in
finagle-core.

Solution

Move `BufReader` and `BufWriter` to util-core's `c.t.io` namespace. Also
rename these to `ByteReader` and `ByteWriter` respectively, and open
them up publicly for use by others.

RB_ID=911639"
ryanoneill,2017-03-21 21:19:57,https://api.github.com/repos/twitter/finagle/git/commits/ab95620e5dbdfef36ff76831d79d63411b89b415,ab95620e5dbdfef36ff76831d79d63411b89b415,"finagle: Update BoringSSL to 2.0.0.Final

Problem / Solution

When we updated Finagle to use Netty 4.1.9, we also should have updated
the BoringSSL dependency to 2.0.0.Final. The version we are using is
1.1.33.Fork26 which is no longer compatible.

RB_ID=911671"
vkostyukov,2017-03-21 20:46:14,https://api.github.com/repos/twitter/finagle/git/commits/4dcb262db8004481dda9424b06cea6f52656425b,4dcb262db8004481dda9424b06cea6f52656425b,"finagle-netty4: DirectToHeap should handle zero-capacity buffers correctly

Problem / Solution

Some HTTP/2 pipelines can emit zero-capacity buffers (usually slices) that are not instances
of `EmptyByteBuf`. We should handle those explicitly before moving `DirectToHeap` down the
pipeline since otherwise, it would result in `IllegalArgumentException`s and dropped connections.

RB_ID=911543"
kevinoliver,2017-03-21 18:43:42,https://api.github.com/repos/twitter/finagle/git/commits/3f6be8131f1262260960705702ed259b172df491,3f6be8131f1262260960705702ed259b172df491,"finagle-thrift: Cull support for old versions of Scrooge

Problem

There is support in rich.scala for some very old versions of Scrooge.
This made the code difficult to maintain.

Solution

Remove support for old versions of Scrooge generated code and document
the ones that remain.

RB_ID=911515"
roanta,2017-03-21 02:09:58,https://api.github.com/repos/twitter/finagle/git/commits/e1fa7a302d1049826f68832c1733a8c4dd3a4930,e1fa7a302d1049826f68832c1733a8c4dd3a4930,"finagle-core: Introduce mechanism to set process global coordinate

Problem / Solution

We need a mechanism to track a processes coordinate on a
shared coordinate space for deterministic aperture. This
patch introduces getters and setters for the coordinate
on a process global object.

RB_ID=910750"
bryce-anderson,2017-03-21 02:00:22,https://api.github.com/repos/twitter/finagle/git/commits/b12cc4e66deeafc01cf383b2f140dedec83995f8,b12cc4e66deeafc01cf383b2f140dedec83995f8,"finagle-http2: Fix PriorKnowledgeHandler ByteBuf slicing

Problem

The PrioKnowledgeHandler is using `buf.capacity() - buf.readerIndex()`
as the length to slice when it should be using `buf.readableBytes()`.

Solution

Make it the next handlers problem and don't slice the ByteBuf and just
pass the ByteBuf along as is. This also fixes a potential memory leak
where an empty ByteBuf was not released.

RB_ID=911519"
kevinoliver,2017-03-21 00:32:40,https://api.github.com/repos/twitter/finagle/git/commits/7a5b8519ccedcd82eb8b4cd38ccede632c9fed0e,7a5b8519ccedcd82eb8b4cd38ccede632c9fed0e,"finagle-integration: Loosen timeouts for MethodBuilderTest

Problem / Solution

We have seen some flakyness in these tests, likely due to the timeouts
being too stringent.

RB_ID=911547"
mosesn,2017-03-20 23:41:36,https://api.github.com/repos/twitter/finagle/git/commits/9ab02ac5c071b626e57a00d063c0761e496c84a8,9ab02ac5c071b626e57a00d063c0761e496c84a8,"finagle-memcached: Remove DarkRead, DarkWrite

Problem

DarkRead and DarkWrite are old, and no longer used.  Let's kill them!

Solution

Kill 'em dead.

RB_ID=911367"
dschobel,2017-03-20 21:36:22,https://api.github.com/repos/twitter/finagle/git/commits/97cae35d62be448366861e67740f1161c019af5f,97cae35d62be448366861e67740f1161c019af5f,"finagle-integration: make ContextPropagationTest as flaky

Problem / Solution

ContextPropagationTest is flaky so we tag it.

RB_ID=911443"
ryanoneill,2017-03-20 19:00:05,https://api.github.com/repos/twitter/finagle/git/commits/241f57beb4254da3e6b612da12c3dcddd350d463,241f57beb4254da3e6b612da12c3dcddd350d463,"finagle-core: Add ryano as OWNER

Problem / Solution

I've modified a good deal of the code in finagle-core at this point, so
I'm adding myself to the OWNERS file.

RB_ID=911389"
roanta,2017-03-20 18:30:52,https://api.github.com/repos/twitter/finagle/git/commits/aad286ec3fd901759543a365e4239678cb6c6184,aad286ec3fd901759543a365e4239678cb6c6184,"finagle-core: Introduce a Ring for deterministic aperture

Problem / Solution

We need a Ring that we can use to derive ordering for clients.
This patch introduces such a Ring with several iterators that
can be used to walk it in constant time.

RB_ID=910749"
bryce-anderson,2017-03-20 18:25:07,https://api.github.com/repos/twitter/finagle/git/commits/e09998359f2f141691fd2da320b5708f6668c921,e09998359f2f141691fd2da320b5708f6668c921,"finagle: Consolidate the Strings we use to match IOExceptions with their cause

Problem

We have duplicated the static sets of strings that we use to classify
common IOExceptions between netty3, netty4, and the ChannelException
logic.

Solution

Make a new central location that contains these sets that all
interested parties can use.

RB_ID=910969"
dschobel,2017-03-20 17:55:36,https://api.github.com/repos/twitter/finagle/git/commits/dd532c6f3962e30dd09439ec110d4717b8281c0b,dd532c6f3962e30dd09439ec110d4717b8281c0b,"finagle-core: mark ClientRegistry test flaky

Problem / Solution

Mark ""ClientRegistry.expAllRegisteredClientsResolved handles Addr.Bound"" as flaky.

RB_ID=911331"
mosesn,2017-03-18 00:08:30,https://api.github.com/repos/twitter/finagle/git/commits/ef0c5103d3e1cd887778520c284556bc7d066b95,ef0c5103d3e1cd887778520c284556bc7d066b95,"finagle-memcached: Remove old clients

Problem

finagle-memcached has a bunch of old, unused clients that are pretty crufty, and
they're the only reason why we have a dep on commons.

Solution

Remove the old, bad clients and stop having to depend on commons.
finagle-memcached is smaller now!

RB_ID=910986"
roanta,2017-03-17 21:39:37,https://api.github.com/repos/twitter/finagle/git/commits/a8483ac4b8c1da61c7e276a07df9c0068cee5eb1,a8483ac4b8c1da61c7e276a07df9c0068cee5eb1,"finagle: provide a default order for Addresses backed by ZkMetadata

Problem

We want to provide an environment specific ordering for finagle `Address`es
that contain finagle-serversets `ZkMetadata`.

Solution

This patch creates the orderings in finagle-serversets and wires them up.

RB_ID=910506"
jcrossley,2017-03-17 20:57:01,https://api.github.com/repos/twitter/finagle/git/commits/9437a0da718e5cb5bca1855df1d5a1ff66c4b1fe,9437a0da718e5cb5bca1855df1d5a1ff66c4b1fe,"finagle-kestrel: Remove commands not supported by the client

Problem

There are classes for Kestrel commands that the client doesn't
support the encoding of.

Solution

Remove them.

RB_ID=911206"
mosesn,2017-03-16 06:45:46,https://api.github.com/repos/twitter/finagle/git/commits/0ed6ca65e5deddb52da03fd9c6a4a405c1b7bc87,0ed6ca65e5deddb52da03fd9c6a4a405c1b7bc87,"finagle: Fixup .travis.yml to rm finagle-commons-stats

Problem

rg doesn't search hidden files by default, so we missed fixing up the
.travis.yml to no longer try to test finagle-commons-stats.

Solution

Remove the reference to finagle-commons-stats.

RB_ID=911039
TBR=true"
mosesn,2017-03-16 02:14:58,https://api.github.com/repos/twitter/finagle/git/commits/d68d0efde0ab22ea72a6a8aa4259c10d351be394,d68d0efde0ab22ea72a6a8aa4259c10d351be394,"finagle: RIP finagle-commons-stats

Problem

finagle-commons-stats is a connector for the deprecated commons-stats library.
We should no longer maintain it, as it's not widely used.

Solution

RIP finagle-commons-stats

RB_ID=910964
TBR=true"
vkostyukov,2017-03-15 21:51:07,https://api.github.com/repos/twitter/finagle/git/commits/829e4a0ad45520f424345ab8b1803439882ef511,829e4a0ad45520f424345ab8b1803439882ef511,"source: Upgrade Netty 4 to 4.1.9

New Netty 4 version is out. Let's upgrade.

RB_ID=910507"
ryanoneill,2017-03-15 21:50:17,https://api.github.com/repos/twitter/finagle/git/commits/4f7fbedf9dbb4cabcb529dd523a3cc9696f7fbaa,4f7fbedf9dbb4cabcb529dd523a3cc9696f7fbaa,"finagle-netty4: SSL/TLS Param Changes for Finagle on Netty 4

Problem

SSL/TLS params, configurations, and code are out of date, not
customizable, and inconsistent between versions.

Solution

Replace the SSL/TLS params for Finagle on Netty 4 with separate
configuration and engine creation parameters which are extensible. These
params now match those which have recently changed for Finagle on Netty
3.

RB_ID=910500"
mosesn,2017-03-15 18:08:03,https://api.github.com/repos/twitter/finagle/git/commits/5571e01a07116ec11d5075155963d1e7519bc388,5571e01a07116ec11d5075155963d1e7519bc388,"finagle-benchmark: Remove StatsReceiverBenchmark

Problem

We're consolidating our versions of StatsReceiver, so we don't need the
benchmark anymore.

Solution

Get rid of StatsReceiverBenchmark, which is the only thing that needs
CommonsStatsReceiver (in preparation for deleting it).

RB_ID=910847"
bryce-anderson,2017-03-15 18:05:50,https://api.github.com/repos/twitter/finagle/git/commits/d9c066998e7173c7d0602d22fca47bf2ed09a36a,d9c066998e7173c7d0602d22fca47bf2ed09a36a,"finagle-serversets: Fix sbt build

Problem / Solution

Our sbt build is broken because of a missing dependency on
org.apache.zookeeper:zookeeper.

RB_ID=910904"
jcrossley,2017-03-15 16:48:25,https://api.github.com/repos/twitter/finagle/git/commits/125cff9e13780b550e3a2b292df861a84ebe7745,125cff9e13780b550e3a2b292df861a84ebe7745,"finagle-core: Stack.Param.show method for non-case-class params

Problem

Some Params are not case classes and thus don't show up in ts-admin.

Solution

Create a show() method in Stack.Param that such params (or those which we'd like
to display in a custom way) can override.

RB_ID=909887"
roanta,2017-03-15 00:30:48,https://api.github.com/repos/twitter/finagle/git/commits/c66b96865815f56e2e25ad1dc28719cba7a98b66,c66b96865815f56e2e25ad1dc28719cba7a98b66,"finagle-core: Introduce mechanism to provide an ordering for load balancer endpoints

Problem

We need to hand each load balancer implementation a stable ordering
across process boundaries so that implementations that do something
other than shuffle the endpoints (e.g. deterministic aperture) can
have ordering guarantees. Today, there is no guarantee of this as
we are at the mercy of the namer. Whats more, we lose any guarantees
by shoving the endpoint collection inside a `Set`.

Solution

1. Change the load balancer constructor APIs that require a `Set` to
  require a `IndexedSeq`. This admits both ordering and efficient
  random access which (outside of heap balancer) are properties
  that the balancer implementations benefit from.

2. Introduce a param which can control the ordering of endpoints.
  This required threading the finagle `Address` through the
  TrafficDistributor. Also, this parameter has the ability to be
  set via a process global so that it can be set for all finagle
  clients in a process.

Result

Clients can now set an order per-client via:

```
$Protocol.client.configured(LoadBalancerFactory.AddressOrdering(...))
```

or for all the clients in a process:

```
com.twitter.finagle.loadbalancer.defaultAddressOrdering(...)
```

RB_ID=910372
TBR=true"
mosesn,2017-03-14 20:36:27,https://api.github.com/repos/twitter/finagle/git/commits/cef6240b97ccb9c1af205da9895629ee1758e712,cef6240b97ccb9c1af205da9895629ee1758e712,"util: Stop depending on com.twitter.common libs

Problem

Util is going on a diet, and doesn't need to depend so much on
com.twitter.common anymore.

Solution

Remove dependencies, and get rid of util-zk-common altogether, which is a silly
lib.

Result

Util is much more svelte and sleek.

RB_ID=910721"
mosesn,2017-03-14 00:46:04,https://api.github.com/repos/twitter/finagle/git/commits/b0651d84fd040290b835b37f6fbdb8a0286c6762,b0651d84fd040290b835b37f6fbdb8a0286c6762,"finagle-core: Only log that we stalled after stalling

Problem

We were logging every time we saw an interruption, instead of only when the
future times out.

Solution

Only log when the second interruption happens.

RB_ID=910421"
jcrossley,2017-03-11 17:52:15,https://api.github.com/repos/twitter/finagle/git/commits/b62ce540f6ef16749ac5a0baa0b8c5a366318f89,b62ce540f6ef16749ac5a0baa0b8c5a366318f89,"finagle-memcached: Remove deprecated Memcached codec object

Problem

c.t.f.memcached.protocol.text.Memcached is deprecated
and we want to remove it.

Solution

Remove c.t.f.memcached.protocol.text.Memcached.

RB_ID=908442"
jcrossley,2017-03-11 08:36:13,https://api.github.com/repos/twitter/finagle/git/commits/162e70595f347a0f0bb1afd1693c78af1f187f14,162e70595f347a0f0bb1afd1693c78af1f187f14,"finagle-memcached: Remove deprecated KetamaClientBuilder

Problem

KetamaClientBuilder creates non-pipelined Memcached clients
and is deprecated. We want to remove it.

Solution

Remove KetamaClientBuilder.

RB_ID=907352"
vkostyukov,2017-03-11 07:45:59,https://api.github.com/repos/twitter/finagle/git/commits/0a8ff52d38594d6e496b0a25d1a8dbd5e6eb0c7f,0a8ff52d38594d6e496b0a25d1a8dbd5e6eb0c7f,"finagle-netty4: Use channel's allocator on the outbound path of BufCodec

Problem

We're almost ready to enable pooling and want to make sure we'll take an advantage
of it when it's finally here.

Solution

Using current channel's allocator in `BufCodec` (outbound path) would allow us to
not only benefit from pooling (when enabled) but also reduce allocations needed to
send `Buf.Composite` messages (literally, every Finagle message).

There is no zero-copy converters available from `Buf.Composite` to `CompositeByteBuf`
and it's not that trivial to write those. However, it's possible to reduce the allocations
on the outbound path for `Buf.Composite` knowing a bit of details on how Netty handles
the outbound buffers.

In other words, this change serves two purposes:

 - Prepares the ground for pooled allocators
 - Improves the performance of Finagle clients/servers sending composite `Buf`s
   over the wire (ThriftMux does that)

RB_ID=910000"
mosesn,2017-03-11 04:06:18,https://api.github.com/repos/twitter/finagle/git/commits/6468086967a1b023297992afc472f2479874d022,6468086967a1b023297992afc472f2479874d022,"finagle-http2: No more retries in PriorKnowledgeTransporter

Problem

We are still doing retries in PriorKnowledgeTransporter, even though we should be doing them in the retries module instead.

Solution

Hand back a dead transport to signal that it should be done.

RB_ID=910446"
edma2,2017-03-11 01:40:13,https://api.github.com/repos/twitter/finagle/git/commits/08c2171dd2189c0bc3eddd5b7d8db67b03274fe5,08c2171dd2189c0bc3eddd5b7d8db67b03274fe5,"finagle-core: fix ConcurrentModificationException from ServiceFactoryCache.close

Problem:

Calling `ServiceFactoryCache.close` throws a `ConcurrentModificationException`
because we attempt to access a stale `HashMap` iterator after clearing the map.
The iterator is hidden by `toSeq`.

Solution:

Instead of calling `toSeq`, explicitly iterate through the map values, and move
each element.

Result:

No more `ConcurrentModificationException`.

RB_ID=910407"
isabelmartin,2017-03-10 23:30:02,https://api.github.com/repos/twitter/finagle/git/commits/494d336279792deb44797dd57bb572ee747f84f0,494d336279792deb44797dd57bb572ee747f84f0,"finagle-core: Ignore flaky tests in StringServerTest

Problem

ConnectionRegistry tests in StringServerTest are flaky.

Solution

Ignore them until a proper solution is found.

RB_ID=910518"
mosesn,2017-03-10 23:28:46,https://api.github.com/repos/twitter/finagle/git/commits/5fb43028d6304d42f1216536f0b34d6db5cb60d6,5fb43028d6304d42f1216536f0b34d6db5cb60d6,"twitter-oss: Prepare OSS libraries for release

Problem

We want to release the next versions our of Twitter OSS libraries:
 - util -> 6.42.0
 - ostrich -> 9.26.0
 - scrooge -> 4.15.0
 - finagle -> 6.43.0
 - twitter-server -> 1.28.0
 - finatra -> 2.9.0

Solution

Prepare libraries for their next releases.

RB_ID=910499"
bryce-anderson,2017-03-10 20:12:48,https://api.github.com/repos/twitter/finagle/git/commits/ad3151344dde7d6b35571122743e95fbad5c2e46,ad3151344dde7d6b35571122743e95fbad5c2e46,"finagle-core/finagle-netty4: Fix Buf.write(ByteBuffer) implementations

Problem / Solution

The implementations of write(ByteBuffer) for ByteBufAsBuf and
ChannelBufferBuf will throw an IndexOutOfBoundsException if the
destination ByteBuffer has more capacity than the length of the Buf. We
fix it by temporarily manipulating the input ByteBuffers limit, and
restore it after writing.

RB_ID=910417"
mosesn,2017-03-10 19:36:01,https://api.github.com/repos/twitter/finagle/git/commits/0e4a1191fbb684c55e6da3e8a030228310053385,0e4a1191fbb684c55e6da3e8a030228310053385,"finagle-netty4: Add metrics that netty4 was missing

Problem

Forgot to port over a few metrics to netty4, which might be a surprise for
people switching over.

Solution

Port 'em.

RB_ID=910304"
vkostyukov,2017-03-10 04:36:18,https://api.github.com/repos/twitter/finagle/git/commits/086e67909085567505334e457c3283dad53c4809,086e67909085567505334e457c3283dad53c4809,"finagle-netty4: Prefer hostnames instead of IP addresses as HTTP proxy destinations

Problem / Solution

Netty 4 prefers IP address as an HTTP proxy destination if it's already resolved.
This is different from our home-made HTTP proxy implementation in Finagle/Netty 3.

To make sure both implementations behave identical, in `finagle-netty4` we're
substituting a resolved `InetSocketAddress` with unresolved one before it reaches
Netty's `HttpProxyHandler`. This way, Netty will be forced to use hostname as a
proxy server destination since the IP address isn't available.

RB_ID=910392"
isabelmartin,2017-03-09 23:15:22,https://api.github.com/repos/twitter/finagle/git/commits/15bcee4afa5504eaee611d0374033e681a06515c,15bcee4afa5504eaee611d0374033e681a06515c,"finagle-core: Fix ConnectionRegistry tests

Problem

The ConnectionRegistry tests in StringServerTest don't account for how the
ConnectionRegistry is global and can contain entries before the test starts.
This can cause the tests to fail.

Solution

Capture the initial state of the registry to ensure the ConnectionRegistry test
isn't affected by other tests that may also register.

RB_ID=910375"
kevinoliver,2017-03-09 23:01:14,https://api.github.com/repos/twitter/finagle/git/commits/d73910e7f43b6fc057a9cce2af8036dee8196ad4,d73910e7f43b6fc057a9cce2af8036dee8196ad4,"finagle-core: Make TrafficDistributorTest more reliable

Problem / Solution

The `TrafficDistributorTest#increment weights on a shard` test failed
in CI due to the Balancer being closed and racing with a GC.

RB_ID=910335"
kevinoliver,2017-03-09 20:25:05,https://api.github.com/repos/twitter/finagle/git/commits/4e33db0fafee9d340f2d6896c652fdc0ea98e4c7,4e33db0fafee9d340f2d6896c652fdc0ea98e4c7,"finagle-thriftmux, finatra, scrooge: Introduce MethodBuilder for ThriftMux

Problem

ThriftMux clients should be able to use the MethodBuilder API.

Solution

Introduce `ThriftMux.Client.methodBuilder` as the entry point.

Result

Users get an API with retries, timeouts, and logical success metrics.

Using the following example IDL:

    exception AnException {
      1: i32 errorCode
    }

    service SomeService {
      i32 TheMethod(
        1: i32 input
      ) throws (
        1: AnException ex1,
      )
    }

This gives you a `Service` that has timeouts and retries on
`AnException` when the `errorCode` is `0`:

    import com.twitter.conversions.time._
    import com.twitter.finagle.ThriftMux
    import com.twitter.finagle.service.{ReqRep, ResponseClass}
    import com.twitter.util.Throw

    val client: ThriftMux.Client = ???
    val svc: Service[TheMethod.Args, TheMethod.SuccessType] =
      client.methodBuilder(""inet!example.com:5555"")
        .withTimeoutPerRequest(50.milliseconds)
        .withTimeoutTotal(100.milliseconds)
        .withRetryForClassifier {
          case ReqRep(_, Throw(AnException(errCode))) if errCode == 0 =>
            ResponseClass.RetryableFailure
        }
        .newServiceIface(""the_method"")
       .theMethod

RB_ID=909987
TBR=true"
isabelmartin,2017-03-09 19:57:01,https://api.github.com/repos/twitter/finagle/git/commits/c95c6dc02fabcb48b7e45652fee27bbcdf2c6bad,c95c6dc02fabcb48b7e45652fee27bbcdf2c6bad,"finagle-core: Add ConnectionRegistry to track which clients are connected to a finagle server

Problem

There is currently no way to see which clients are connected to a finagle
server. This would be useful information for monitoring clients that create
too many connections and other similar issues.

Solution

Add a registry that will track the remote address of a client and when the
connection was established.

RB_ID=909656"
vkostyukov,2017-03-09 09:08:25,https://api.github.com/repos/twitter/finagle/git/commits/1ffa5dc1873f1b5f6101973578761c5eb90cc181,1ffa5dc1873f1b5f6101973578761c5eb90cc181,"finagle-netty4: Default to Unpooled in DirectToHeap handler

Problem / Solution

Before enabling pooling in `finagle-netty4` we need to make sure pooled
buffers aren't leaking into the user space (either being returned from
a client or being consumed in a server). Defaulting `DirectToHeap` to
use `Unpooled` while allocating a destination buffer would do the trick.

RB_ID=910217"
bryce-anderson,2017-03-09 06:05:45,https://api.github.com/repos/twitter/finagle/git/commits/15da792092977015c7956b01572af74c53943cb2,15da792092977015c7956b01572af74c53943cb2,"util-core: Add method to Buf for efficient writing to nio ByteBuffer

Problem / Solution

We often use Buf in the context of doing IO operations, and the Java
asynchronous API's deal in nio ByteBuffers, and in particular, the IO
operations will require copying the data to a direct nio ByteBuffer. To
make this simpler, we add a method to Buf to write its contents to a nio
ByteBuffer.

RB_ID=910152"
kevinoliver,2017-03-09 00:01:31,https://api.github.com/repos/twitter/finagle/git/commits/2b3563f4fef8ddddb5abdd2cd549280d5aabec4b,2b3563f4fef8ddddb5abdd2cd549280d5aabec4b,"finagle-thrift: Use generator instead of generated code

Problem

There is Scrooge generated code that is not tied to the current
releases in finagle-thrift.

Solution

Use the standard mechanism of generating the code at build time.

RB_ID=910197"
mosesn,2017-03-08 20:19:08,https://api.github.com/repos/twitter/finagle/git/commits/ff2dfb14beaa8aefc3c56832283833a6309aad9a,ff2dfb14beaa8aefc3c56832283833a6309aad9a,"finagle-netty4: Stop depending on boringssl except as a test dep

Problem

Folks ran into issues because we introduced a dep on boringssl.

Solution

Remove the dependency, so folks can add it themselves if they need it.

RB_ID=910093"
mosesn,2017-03-08 18:51:04,https://api.github.com/repos/twitter/finagle/git/commits/a624e88fb419b0a66d91cb1bf8c01daa55f834bf,a624e88fb419b0a66d91cb1bf8c01daa55f834bf,"finagle-http: Don't run a flaky ALPN test

Problem

One of the tests is a little flaky.  We should investigate it later, but for now, we should make the test less useless.

Solution

Kill the test for now.

RB_ID=910091"
vkostyukov,2017-03-08 03:43:41,https://api.github.com/repos/twitter/finagle/git/commits/f239bf29cb3f3ff66c38759a59f13b0500bca081,f239bf29cb3f3ff66c38759a59f13b0500bca081,"finagle-netty4: Accumulate up to 10kb of HTTP proxy handshake responses

Problem

Some HTTP proxy servers (including Squid) sending their error responses (handshake errors)
within fancy-formated HTML pages. This makes Finagle throwing N4's `TooLongFrameException`
back to the user whenever the proxy handshake is failed since no payload is expected with
a handshake response at this point.

Solution

Accumulate up to 10kb of handshake responses to make sure we're not leaking N4 exceptions
into a users space and report something meaningful instead.

RB_ID=909972"
roanta,2017-03-07 20:30:35,https://api.github.com/repos/twitter/finagle/git/commits/1f1986d6e7de3b02ceaeaa19f4d122856494be24,1f1986d6e7de3b02ceaeaa19f4d122856494be24,"finagle-core: Remove Ring from Aperture in favor of a stock P2C selection

Problem

Aperture used a relatively complex Ring implementation to pick two
distinct nodes from its collection of endpoints. The added complexity
was neccessary when load balancers supported weights, since each endpoint
could support a range of serving units. However, this is no longer the
case. We want to simplify this, especially with the advent of deterministic
aperture which will use a Ring topology to determine ordering.

Solution

Extract the stock pick from the P2C implementation and share it between P2C
and Aperture.

RB_ID=909718"
dschobel,2017-03-07 18:57:27,https://api.github.com/repos/twitter/finagle/git/commits/516a1d47a80ebc11f8dbbb228564a1fca99ff286,516a1d47a80ebc11f8dbbb228564a1fca99ff286,"finagle-netty4: better leak detection model

Problem

Netty's leak detection model distinguishes between composite byte
buffers with unpooled offheap components and unpooled off heap byte
buffers. It considers unreleased instances of the former to be leaks
but not so with the latter. This is a problem for finagle protocols
that use netty's decoders (such as http) because despite our pipelines
being set up to copy all data on heap, leaks can be declared after
passing the onheap unpooled buffers through a netty decoder.

Solution

Introduce a composite bytebuffer which is aware of its components
and only allows GC-releasable resource. We also introduce a
LeakDetectingAllocator so that we can produce instances of our new
buffer type.

Result

We bend netty's leak detection to the model we actually want, where
unreleased pooled or direct buffers are leaks and anything unpooled
and onheap is not.

RB_ID=908588"
kevinoliver,2017-03-07 18:12:07,https://api.github.com/repos/twitter/finagle/git/commits/085e0fd11a762ebd3a5011d67ff56751c0adc0d7,085e0fd11a762ebd3a5011d67ff56751c0adc0d7,"finagle-http: Fix skipping of flaky tests

Problem / Solution

The logic for skipping tests in `AbstractEndToEndTest` was too easy to
get wrong. Move it into `test` so it can't be missed.

RB_ID=909966"
kevinoliver,2017-03-07 09:24:36,https://api.github.com/repos/twitter/finagle/git/commits/40a08a7c2e3a42ce90d3257625aa9e903477e76e,40a08a7c2e3a42ce90d3257625aa9e903477e76e,"finagle-http: Introduce MethodBuilder for HTTP

Problem

HTTP clients should be able to use the MethodBuilder API.

Solution

Introduce `Http.Client.methodBuilder` as the entry point.

Result

Users get an API with retries, timeouts, and logical success metrics.
As an example, this produces a `Service` that has timeouts and retries
on a 418 status code.

    import com.twitter.conversions.time._
    import com.twitter.finagle.Http
    import com.twitter.finagle.service.{ReqRep, ResponseClass}
    import com.twitter.util.Return

    val client: Http.Client = ???
    client.methodBuilder(""inet!example.com:80"")
     .withTimeoutPerRequest(50.milliseconds)
     .withTimeoutTotal(100.milliseconds)
     .withRetryForClassifier {
       case ReqRep(_, Return(rep)) if rep.statusCode == 418 => ResponseClass.RetryableFailure
     }
     .newService(""an_endpoint_name"")

RB_ID=909793"
kevinoliver,2017-03-06 22:38:51,https://api.github.com/repos/twitter/finagle/git/commits/f34a73443679ac4fe76bc011bfb36a5b1abe9e5e,f34a73443679ac4fe76bc011bfb36a5b1abe9e5e,"finagle-http: Server errors now considered failures

Problem

The HTTP protocols (1.1 and 2) treat responses with 500 status codes
as successful for the purposes of metrics and failure accrual. This is
surprising to users.

Solution

Change the behavior to classify these as unsuccessful. Users can opt
out of this via the
`com.twitter.finagle.http.serverErrorsAsFailuresV2` toggle.

RB_ID=909315"
vkostyukov,2017-03-04 01:58:20,https://api.github.com/repos/twitter/finagle/git/commits/f621af6fd7b1c947aef4b8461583df9422b7272d,f621af6fd7b1c947aef4b8461583df9422b7272d,"finagle-core: Remove ClientBuilder.{expHttpProxy, expSocksProxy} configurations

Problem

There is no direct analogy of `expHttpProxy`/`expSocksProxy` configurations
in Netty 4 transports. However, there is a better alternative available via
the `.withTransport.httpProxyTo` API that allows reusing naming/load balancing
over the proxy servers.

Solution

Given that `expHttpProxy`/`expSocksProxy` were experimental and intended to
only temporary solve the issue (of using a single HTTP proxy server in a client),
we're removing it now to unblock Netty 4 migration.

RB_ID=909739"
isabelmartin,2017-03-04 00:32:32,https://api.github.com/repos/twitter/finagle/git/commits/906057f4bd5a290063807c2825ecdb481d22ab2e,906057f4bd5a290063807c2825ecdb481d22ab2e,"Twitter-oss: Bump commons dependencies

Problem/Solution

New versions of the commons libraries have been published so the dependencies
should be updated accordingly.

RB_ID=908725"
kevinoliver,2017-03-03 07:58:22,https://api.github.com/repos/twitter/finagle/git/commits/6c22af09d24376088bb4967b15287d109174a43c,6c22af09d24376088bb4967b15287d109174a43c,"finagle-core: Refactor MethodBuilder

Problem

In order to have a useful `MethodBuilder` for Thrift/ThriftMux, which
have different request and response types per-endpoint, the APIs
needed some refactoring.

Solution

`MethodBuilder` now works in terms of `Filter.TypeAgnostic` so
that the filters will be usable by Thrift and ThriftMux clients.

Result

This clears the path for a future commit that will allow Thrift and
ThriftMux clients to utilize `MethodBuilder`.

RB_ID=909497"
jcrossley,2017-03-02 21:45:20,https://api.github.com/repos/twitter/finagle/git/commits/d73481db6f22da5de0cc44affe84d930daf096d9,d73481db6f22da5de0cc44affe84d930daf096d9,"finagle-netty4: Add forceJdk parameter to Netty4 SSL engine factories

Problem

We want to be able to force the jdk ssl engine for testing.

Solution

Add a param to Netty4ClientEngineFactory/Netty4ServerEngineFactory,
forceJdk, to set the SSL provider to JDK if true.

RB_ID=909339"
roanta,2017-03-02 21:19:57,https://api.github.com/repos/twitter/finagle/git/commits/cdc75ad4f95ef3ff094bb82c06eaa895edc75f0b,cdc75ad4f95ef3ff094bb82c06eaa895edc75f0b,"finagle-core: divorce Aperture's load band from a node's load metric

Problem

The `LoadBand` trait implemented a Node in order to keep track
of the total number of pending requests. This made it less reusable and,
in fact, it need not know anything about a Node type.

Solution

Create a new entry point in `Balancer` that allows traits to have access
to the underlying `ServiceFactory`. This allows `LoadBand` to do the
neccessary bookkeeping to track the total number of pending requests.

RB_ID=909474"
jcrossley,2017-03-02 01:03:24,https://api.github.com/repos/twitter/finagle/git/commits/084bea3f57f0510f8098c6fc105ef6688462c615,084bea3f57f0510f8098c6fc105ef6688462c615,"finagle-http: Set Netty4 toggle to 0

Problem / Solution

The Netty4 toggle was mistakenly turned up in the local configuration
location. Turn it down to 0.

RB_ID=909513"
bryce-anderson,2017-03-01 20:49:11,https://api.github.com/repos/twitter/finagle/git/commits/91b42f2635c633a26e02c06b3ba710dcbdc7640c,91b42f2635c633a26e02c06b3ba710dcbdc7640c,"finagle-base-http: Remove most protected[finagle] methods from HTTP Response

Problem

The Finagle HTTP model includes a number of protected[finagle]
methods exposing the underlying Netty 3 types that back the model,
keeping us coupled to Netty 3. These can also be used from Java
and make it difficult encapsulate the Netty 3 implementation
details.

Solution

Remove most of these or make them legitimate protected so that
they can easily be removed later as we transition away from a
HTTP model which is a proxy to a Netty type.

RB_ID=908409
TBR=true"
roanta,2017-03-01 19:30:12,https://api.github.com/repos/twitter/finagle/git/commits/fd9317477c92ea4da755f13279679fabcd2f840b,fd9317477c92ea4da755f13279679fabcd2f840b,"finagle-core: scope load balancer algorithm under ""algorithm""

Problem / Solution

The ""aperture"" gauge was exported twice under the ""loadbalancer""
scope with different semantics. In order to avoid future name
conflicts, the gauges used to indicate which lb algorithm a client
is using was moved under ""algorithm"".

RB_ID=909309"
kevinoliver,2017-03-01 17:45:21,https://api.github.com/repos/twitter/finagle/git/commits/b53a0e6f2e473f44120649c37e5f16e191f99f75,b53a0e6f2e473f44120649c37e5f16e191f99f75,"scrooge, finagle-thrift, finatra: Revisit ServiceIface API

Problem

The ServiceIfaces generated by Scrooge for Scala's Service
per-endpoint are a c.t.f.Service[ThriftMethod.Args, ThriftMethod.Result].
Unfortunately, Result here is is not a very pleasant interface to
work with as they are a ThriftResponse[ThriftMethod.Success] and
this means you have to do some odd pattern matching to use them.

For example, using an example IDL:

exception AnException {
  1: i32 errorCode
}
exception AnotherException {
  1: i32 errorCode
}
service SomeService {
  i32 TheMethod(
    1: i32 input
  ) throws (
    1: AnException ex1,
    2: AnotherException ex2
  )
}

This is roughly what pattern matching against a
SomeService.TheMethod.Result looks like:

result match {
  case Return(SomeService.TheMethod.Result(Some(v), _, _))) =>
    // Successful
  case Return(SomeService.TheMethod.Result(_, Some(e), _))) =>
    // AnException
  case Return(SomeService.TheMethod.Result(_, _, Some(e)))) =>
    // AnotherException
  case Throw(_) =>
    // an exception not from Thrift
}

Solution

The ServiceIface is better modelled as a Service from ThriftMethod.Args
to ThriftMethod.SuccessType. This is far more idiomatic as the result
of the Service is a Future[SuccessType] and thus it already is a Try.

This turns that pattern match into roughly:

result match {
  case Return(success) =>
  case Throw(AnException(_)) =>
  case Throw(AnotherException(_)) =>
  case Throw(_) =>
}

Result

While this is a breaking API change, it should be fairly superficial.
Translating from a Result to a SuccessType is fairly
straightforward and an example can be seen in Scrooge's
ThriftServiceIface.resultFilter.

RB_ID=909434
TBR=true
NO-QUEUE=true"
roanta,2017-03-01 16:00:08,https://api.github.com/repos/twitter/finagle/git/commits/f3d16fed418d69d0b50c95883f1e745b1c9a8270,f3d16fed418d69d0b50c95883f1e745b1c9a8270,"finagle-core: cleanup loadbalancer package

Problem

The `loadbalancer` package co-located implementations with
traits and helpers. This made it difficult to read and understand
and most importantly expand.

Solution

This patch cleans up the directory in several ways:

1. Each algorithm gets its own sub package.
2. Algorithms were renamed to more clearly reflect their selection algorithm and load metric.
3. The test package was restructured in the same way.
3. Other small cleanups.

RB_ID=909245
TBR=true"
brutkin,2017-03-01 09:33:04,https://api.github.com/repos/twitter/finagle/git/commits/5fc359232db9ce9dbf0d3f8f7eee907681fe6475,5fc359232db9ce9dbf0d3f8f7eee907681fe6475,"finagle-http: Do not swallow LoginException stack traces in SpengoAuthenticator

Problem/Solution

log.debug will swallow a stack trace if the exception is placed after a string.
This orders them so the trace will get written to the appropriate handler and
debugging will be possible.

RB_ID=909304"
dschobel,2017-03-01 04:53:55,https://api.github.com/repos/twitter/finagle/git/commits/11b2c37b43c5e9b881b76fe177051c826fbccd45,11b2c37b43c5e9b881b76fe177051c826fbccd45,"Revert ""scrooge, finagle-thrift, finatra: Revisit ServiceIface API"".
This reverts commit 0f7373b831748eb8f37e2d53c113a3a959b24db2

RB_ID=909404
TBR=true
NO-QUEUE=true"
kevinoliver,2017-02-28 23:13:32,https://api.github.com/repos/twitter/finagle/git/commits/686747fa7a98dea29f4477ea5a5bb3597a99e2ee,686747fa7a98dea29f4477ea5a5bb3597a99e2ee,"scrooge, finagle-thrift, finatra: Revisit ServiceIface API

Problem

The `ServiceIfaces` generated by Scrooge for Scala's Service
per-endpoint are a `c.t.f.Service[ThriftMethod.Args, ThriftMethod.Result]`.
Unfortunately, `Result` here is is not a very pleasant interface to
work with as they are a `ThriftResponse[ThriftMethod.Success]` and
this means you have to do some odd pattern matching to use them.

For example, using an example IDL:

    exception AnException {
      1: i32 errorCode
    }
    exception AnotherException {
      1: i32 errorCode
    }
    service SomeService {
      i32 TheMethod(
        1: i32 input
      ) throws (
        1: AnException ex1,
        2: AnotherException ex2
      )
    }

This is roughly what pattern matching against a
`SomeService.TheMethod.Result` looks like:

    result match {
      case Return(SomeService.TheMethod.Result(Some(v), _, _))) =>
        // Successful
      case Return(SomeService.TheMethod.Result(_, Some(e), _))) =>
        // AnException
      case Return(SomeService.TheMethod.Result(_, _, Some(e)))) =>
        // AnotherException
      case Throw(_) =>
        // an exception not from Thrift
    }

Solution

The `ServiceIface` is better modelled as a `Service` from `ThriftMethod.Args`
to `ThriftMethod.SuccessType`. This is far more idiomatic as the result
of the `Service` is a `Future[SuccessType]` and thus it already is a `Try`.

This turns that pattern match into roughly:

    result match {
      case Return(success) =>
      case Throw(AnException(_)) =>
      case Throw(AnotherException(_)) =>
      case Throw(_) =>
    }

Result

While this is a breaking API change, it should be fairly superficial.
Translating from a `Result` to a `SuccessType` is fairly
straightforward and an example can be seen in Scrooge's
`ThriftServiceIface.resultFilter`.

RB_ID=908846
TBR=true"
roanta,2017-02-27 19:37:11,https://api.github.com/repos/twitter/finagle/git/commits/9b69361fcbfbd92d910e12a817b75624617f4985,9b69361fcbfbd92d910e12a817b75624617f4985,"finagle-core: rm OnReady from load balancer implementations

Problem / Solution

OnReady is not used anymore at the creation site of load balancers
(i.e. the TrafficDistributor), therefore, is no longer needed.

RB_ID=908863"
mosesn,2017-02-24 23:55:20,https://api.github.com/repos/twitter/finagle/git/commits/b382ebfc17ad42512f6c23daf22bfc2b8af926aa,b382ebfc17ad42512f6c23daf22bfc2b8af926aa,"finagle: Fix travisci build for real

Problem

Netty SSL barfs in TravisCI if you include the static BoringSSL jar.

Solution

In the long term, it would be great if it didn't barf.  In the short term, move
the dep to finagle-http tests, and make sure it doesn't touch SSL in CI in
finagle-http.

RB_ID=909011
TBR=true"
jcrossley,2017-02-24 23:38:52,https://api.github.com/repos/twitter/finagle/git/commits/96a487560c0c1945c0f2554eebd6680166b737ee,96a487560c0c1945c0f2554eebd6680166b737ee,"finagle: Add finagle-core test dependency to finagle-memcached

Problem

ConcurrentLoadbalancerFactory was moved to finagle-memcached, but
the tests depend on StringClient/StringServer, which are in the finagle-core
tests. We are missing this dependency for sbt.

Solution

Add a test dependency on finagle-core to finagle-memcached.

RB_ID=908995
TBR=true"
roanta,2017-02-24 19:07:32,https://api.github.com/repos/twitter/finagle/git/commits/36ab44e5fb8f480506cb606179939065ff774523,36ab44e5fb8f480506cb606179939065ff774523,"finagle: mv ConcurrentLoadBalanacerFactory into finagle-memcached

Summary:
Problem / Solution

ConcurrentLoadBalanacerFactory is only used in one place – finagle-memcached.
It doesn't seem generally useful since it is specific to pipelined protocols that
have stateless sessions, of which we only have one (finagle-memcached). This patch
moves it into the finagle-memcached directory and fixes up source to reflect
the change.

Test Plan: ./pants test <relevant projects>

Reviewers: O22826 source:/src/scala/com/twitter/mediascience/!, banderson, O22963 source:/src/scala/com/twitter/taxi/!, vkostyukov, O1553 source:/media-analysis-service/!, mnakamura, O1805 source:/notifications-delivery/!, jillianc, O5308 source:/user-image-service/!, koliver, O1567 source:/mediaservices/!, yao, O5146 source:/thumbingbird/!, ryano, O1802 source:/mynahbird/!, dschobel, O948 source:/iesource/!, jdonham, O523 source:/bouncer/!, O5276 source:/udaan/!, O536 source:/cache/!, O8689 source:/ads/review/common/!, cflanagan

Reviewed By: jillianc, koliver, dschobel

Subscribers: ee-phabricator-cron, #rb_traffic, #rb_notifications-infra-team, #rb_sss, #rb_media-platform, #rb_csl, #rb_media-science-eng, #rb_growth-bangalore-eng, #rb_te-eng, #rb_cache-team, #rb_core-data-metrics, #rb_abuse-eng

JIRA Issues: CSL-4067

TBR:

TBR=true

Differential Revision: https://phabricator.twitter.biz/D29215"
mosesn,2017-02-24 03:17:44,https://api.github.com/repos/twitter/finagle/git/commits/29f3fef6784aee5eea42219e1f223797298829da,29f3fef6784aee5eea42219e1f223797298829da,"finagle-http: Only use ALPN when we have some OpenSSL goodness

Problem

TravisCI barfs on ALPN.  Let's make sure to disable it specially when we don't have
an OpenSSL we can use.

Solution

Check if we have OpenSSL before actually sending it out.

RB_ID=908850"
mosesn,2017-02-24 01:14:01,https://api.github.com/repos/twitter/finagle/git/commits/4300570e7a30d3cd4c2125a8ec76daece8fb417d,4300570e7a30d3cd4c2125a8ec76daece8fb417d,"finagle-http2: Turn down logging from ERROR to TRACE

Problem

Accidentally left logging turnt up.

Solution

Turn down the volume to a more manageable amount.

RB_ID=908857"
mkhq,2017-02-23 21:23:50,https://api.github.com/repos/twitter/finagle/git/commits/894a7b04a49c9e3698156281944747513fb3bec6,894a7b04a49c9e3698156281944747513fb3bec6,"finagle-redis: Replace PATTERN with MATCH in SCAN

Problem

HSCAN and SCAN commands take an optional argument for pattern matching.
This argument is called MATCH and not PATTERN.

Solution

Replace PATTERN with MATCH in SCAN and HSCAN.

Result

Redis clients can execute SCAN and HSCAN with an optional pattern match
argument.

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

RB_ID=908817"
jcrossley,2017-02-23 20:29:23,https://api.github.com/repos/twitter/finagle/git/commits/19f18f5dc76cafe5cd81b153d311de3944ee7d0e,19f18f5dc76cafe5cd81b153d311de3944ee7d0e,"finagle-http: Initialize connection to be KeepAlive

In ConnectionManager, the connection starts off with ""isKeepAlive = false"".
Because the connection is initially idle, ConnectionManager returns ""true""
for shouldClose(), which is called by Retries before a request is made (if the
client is constructed without FactoryToService) to get the status of the connection.
We don't want a connection to start off in a closed state because service acquisition
will be retried until exhausted.

Solution

Initialize ""isKeepAlive"" to ""true"".

RB_ID=908622"
dschobel,2017-02-23 19:51:37,https://api.github.com/repos/twitter/finagle/git/commits/aa385f71ff6b132efc1aecab875e82c90cdc5a68,aa385f71ff6b132efc1aecab875e82c90cdc5a68,"finagle-netty4: fixup StatsLeakDetectorFactoryTest

Problem / Solution

Fixup the reflection in one test and rm another for more reliable
test runs.

RB_ID=908703"
ryanoneill,2017-02-23 06:18:57,https://api.github.com/repos/twitter/finagle/git/commits/68899dd8b933d7dd3959181ca998c06f3317b296,68899dd8b933d7dd3959181ca998c06f3317b296,"finagle: Fix BoringSSL SBT Dependency

Problem / Solution

The Netty TCNative BoringSSL dependency in the SBT Build file contains a
typo. Fix it.

RB_ID=908769
TBR=true"
mosesn,2017-02-23 02:57:31,https://api.github.com/repos/twitter/finagle/git/commits/af72fbe6a05ad8c3a3869d36b322bf22c7ae2e4b,af72fbe6a05ad8c3a3869d36b322bf22c7ae2e4b,"finagle-http: Adds a toggle for http/2

Problem

We want to have a toggle for turning on http/2 slowly in production.

Solution

Add a toggle for http/2.

RB_ID=908419"
mosesn,2017-02-23 01:07:01,https://api.github.com/repos/twitter/finagle/git/commits/ab1d3080957aa1bd71215a0a1e9e8847b1d3e58a,ab1d3080957aa1bd71215a0a1e9e8847b1d3e58a,"finagle-http2: Added support for ALPN

Problem

In practice, http/2 is only implemented on the web by clients and servers that
speak over TLS.  They use ALPN, which isn't easily accessible in finagle.

Solution

Add a finagle-internal way of configuring ALPN on a per-protocol basis, and hook
up the finagle-http2 upgrade path to ALPN on the client-side.

Result

finagle-http2 clients and servers that are set up for TLS will handle ALPN
properly now!

RB_ID=908310"
ryanoneill,2017-02-23 00:34:54,https://api.github.com/repos/twitter/finagle/git/commits/7594d414299fabc93565c0dab6d3cc74832b84c4,7594d414299fabc93565c0dab6d3cc74832b84c4,"finagle-core: SSL/TLS Param Changes for Finagle on Netty 3

Problem

SSL/TLS params, configurations, and code are out of date, not
customizable, and inconsistent between versions.

Solution

Replace the SSL/TLS params for Finagle on Netty 3 with separate
configuration and engine creation parameters which are extensible. These
params will soon be migrated to Netty 4 as well for consistency.

RB_ID=907923"
bryce-anderson,2017-02-22 23:16:43,https://api.github.com/repos/twitter/finagle/git/commits/75d26a0243dace4650e5b1106441ea666e5d1ee9,75d26a0243dace4650e5b1106441ea666e5d1ee9,"finagle-http: Clients don't force close the connection on 1xx, 204, or 304

Problem

If a finagle-http client receives a 1xx, 204, or 304 response,
which typically don't include transfer-encoding or content-length
headers because they are defined to not have a body in RFC 7230,
the client forces the connection closed because it believe the
response body must be delimited by the end of connection.

Solution

Check to see if the status code is one that must not have a body
when determining if the connection must be closed.

RB_ID=908593"
isabelmartin,2017-02-22 22:50:36,https://api.github.com/repos/twitter/finagle/git/commits/e9aab9da64618ca22a847814861db9441ec5bbcf,e9aab9da64618ca22a847814861db9441ec5bbcf,"Twitter-oss: Bump guava to 19.0 in OSS builds

Problem/Solution

Guava has been bumped to 19.0 internally so the OSS builds should match that.

RB_ID=907807"
dschobel,2017-02-22 02:38:09,https://api.github.com/repos/twitter/finagle/git/commits/7cf3f2c78d3cb1da93c0cf563d4c36d8d54095ce,7cf3f2c78d3cb1da93c0cf563d4c36d8d54095ce,"twitter-server: add reference leak lint rule

Problem / Solution

Reference leaks are unambiguously bugs and since we can measure
them we should alert users to them.

RB_ID=908396"
vkostyukov,2017-02-21 22:27:30,https://api.github.com/repos/twitter/finagle/git/commits/484a7e7749c1c3cb362910460a08a4147a95f575,484a7e7749c1c3cb362910460a08a4147a95f575,"finagle-http: Toggle Netty 4 to 1%

RB_ID=908508"
vkostyukov,2017-02-18 19:52:07,https://api.github.com/repos/twitter/finagle/git/commits/e88751e25e05f98640f463b329e86273a6535ed2,e88751e25e05f98640f463b329e86273a6535ed2,"finagle-http: Do not validate headers twice when N4 is enabled

Problem

When Netty 4 is enabled in finagle-http, headers are validated twice: first by
N3 `DefaultHttpHeaders` (when a Finagle message is being constructed) and then
by N4 `DefaultHttpHeaders` (when a Finagle message is being converted to N4).
This is not only inefficient but also introduces a behavioral difference between
N4 and N3 implementations: headers with null-chars were allowed in N3 but prohibited
in N4.

Solution

To preserve the N3 behavior and not perform the same work twice, we're skipping
headers validation in the N4 bijections since they were already validated by N3
at that point.

RB_ID=908368"
bryce-anderson,2017-02-17 00:39:56,https://api.github.com/repos/twitter/finagle/git/commits/c6449c8337a70bd901902bb4e152c49cae70e345,c6449c8337a70bd901902bb4e152c49cae70e345,"finagle/finagle-base-http: Remove most protected[finagle] methods from Request

Problem

The c.t.f.http.Request type has a number of protected[finagle]
methods that deal in Netty 3 types, hindering the Netty 4
migration.

Solution

Remove or make the methods private. To improve the usage of the
HTTP model from Java, a number of new methods were added to
c.t.f.http.Message and c.t.f.http.Request including
- `Message.contentLength(Long): this.type`
- `Message.contentLengthOrElse(default: Long): Long`
- `Request.method(Method): this.type`

RB_ID=907501
TBR=true"
bryce-anderson,2017-02-16 22:51:12,https://api.github.com/repos/twitter/finagle/git/commits/f6d0ab12a696f138eeff984e20ee280bc01ecc4c,f6d0ab12a696f138eeff984e20ee280bc01ecc4c,"finagle-base-http: Deprecate Java friendly Methods, Statuses, and Versions

Problem / Solution

Due to changes in the finagle HTTP model, the Java helpers
`c.t.f.http.Statuses`, `c.t.f.http.Methods`, and
`c.t.f.http.Versions` are no longer necessary and are now
deprecated.

RB_ID=907680
TBR=true"
mosesn,2017-02-16 19:54:18,https://api.github.com/repos/twitter/finagle/git/commits/36c3e616ed7a235b7fbc47db7df0b45334c04a24,36c3e616ed7a235b7fbc47db7df0b45334c04a24,"finagle-core: Make Transporter coherent

Problem

We construct a new Transporter for each remote host to support different latency
compensation for each name.  However, Transporter takes a socket address when
constructing a new Transport, which makes it seem like we construct a single
Transporter per client.

Solution

In order to make this more clear, make Transporter no longer take SocketAddress
as an argument.  Instead, StackClient directly injects it into the new Transporter.

In general the edits were small, but in finagle-http2, which was written with
the assumption that Transporters were shared across connections, we're able to
change from using a ConcurrentHashMap to an AtomicReference, which represents a
substantial simplification of the model.

Result

The Transporter api now reflects the way it actually works.

RB_ID=907544"
mosesn,2017-02-16 02:40:43,https://api.github.com/repos/twitter/finagle/git/commits/173a090a26745afaddbb686f0f04553b3cd1ebb5,173a090a26745afaddbb686f0f04553b3cd1ebb5,"finagle-http2: Notice when remote peers cut connections

Problem

Our cleartext clients disable autoread when they fail the http/2 client upgrade,
which is a state transition that wasn't accounted for in ChannelTransport.  This
means that ChannelTransport's bookkeeping is incorrect.

Solution

Always do the bookkeeping in ChannelTransport, but only trigger the extra read
when autoread is enabled.  Also, cut the connection when a read encounters an
error in MultiplexedTransporter.

Result

Http/2 clients eagerly notice when the remote peer has disconnected, even when
they downgrade to http/1.1.

RB_ID=908081"
dschobel,2017-02-15 20:27:35,https://api.github.com/repos/twitter/finagle/git/commits/de2f71a84fb25ae5b0d1d96750122fa4293b21c8,de2f71a84fb25ae5b0d1d96750122fa4293b21c8,"finagle-netty4: export reference leak counter

Problem / Solution

Leverage netty's reference leak tracking to export a leak counter.

RB_ID=907692"
bryce-anderson,2017-02-14 20:39:04,https://api.github.com/repos/twitter/finagle/git/commits/89b30f31d2749aa350018093df00bc60e70cc07c,89b30f31d2749aa350018093df00bc60e70cc07c,"finagle-core/finagle-mux: Force sized ByteArrays for context entries

Problem

Our MarshalledContext attempts to copy ByteBufferBuf types into the heap
in an effort to avoid keeping a strong reference to a large buffer only to
expose a small view of them. This is Netty 3 specific and won't be helpful
for Netty 4 users.

Solution

Force the Buf to a ByteArray with the exact sized backing Array[Byte],
making a copy if necessary, which is expected to be the common case for Mux.
This logic is moved to the Mux decoder where we have the scope to know that
the Buf represents a view of the larger message. Other protocols that use
MarshalledContext (vanilla thrift, HTTP) are already doing the right thing
and therefore doesn't need modification.

RB_ID=907663"
bryce-anderson,2017-02-14 01:05:38,https://api.github.com/repos/twitter/finagle/git/commits/ad62ec490499268751e06e752d36fcef7763c1dc,ad62ec490499268751e06e752d36fcef7763c1dc,"finagle-base-http: Move HeaderMap types into their own files

Problem / Solution

We publicly expose the MapHeaderMap implementation, which have no business
being public API, so we should make it private. I've also moved MapHeaderMap
and Netty3HeaderMap into their own files.

RB_ID=907397"
cacoco,2017-02-12 19:23:02,https://api.github.com/repos/twitter/finagle/git/commits/d372fd514e9fd13dc94c854d690440b3c57a92ae,d372fd514e9fd13dc94c854d690440b3c57a92ae,"finagle-thrift, finatra-thrift: Fix support for inherited BaseServiceIface implementations

Problem

When BaseServiceIface implementations that extend other services are
converted into a MethodIface and served we don't currently instantiate
the correct class as the case is not found. Instead we end up
instantiating the superclass and serving that service as the endpoint
which can lead to errors of the form:

`org.apache.thrift.TApplicationException: Invalid method name: 'ping'`

when attempting to make an RPC call to a function defined in the child
service as only the parent is being served. The primary user of this
use case is the Finatra framework thrift support.

Solution

Extend the `tryScroogeFinagleService` method in `rich.scala` to also
take into account a class in the form of `Service$MethodIface` which
is the class type for BaseServiceIface services which extends other
services.

Result

Finatra thrift servers can serve thrift services which extend another
service.

RB_ID=907608"
ryanoneill,2017-02-11 04:18:17,https://api.github.com/repos/twitter/finagle/git/commits/c506dc364c085b24393b1af777b008cc8ba8b5a4,c506dc364c085b24393b1af777b008cc8ba8b5a4,"finagle-core: Provide LegacyKeyServerEngineFactory for PKCS#1 Keys

Problem / Solution

Some folks are currently using PKCS#1 PEM-encoded keys with Finagle.
Moving forward, Finagle will only explicitly support PKCS#8 PEM-encoded
keys. Provide a temporary bridge until folks are able to swap out their
existing keys.

RB_ID=907642"
bryce-anderson,2017-02-11 01:17:02,https://api.github.com/repos/twitter/finagle/git/commits/282cbc39e1a7ad0150c55d87b9cef4839bf6786e,282cbc39e1a7ad0150c55d87b9cef4839bf6786e,"finagle-thrift: Deprecate rest of the Netty 3 codec types

Problem / Solution

If we want to move finagle-thrift off of Netty 3, we have to get
rid of the Codec types. We will start by deprecating them.

RB_ID=907626"
vkostyukov,2017-02-10 22:07:32,https://api.github.com/repos/twitter/finagle/git/commits/358957cd03389eec103f9f09ef81cb831d51d210,358957cd03389eec103f9f09ef81cb831d51d210,"finagle: Export ClientId for Thrift and ThriftMux into a Registry

Problem / Solution

It can be useful to inspect the `ClientId` via the registry. Let's export
it for both ThriftMux and Mux.

Look for the following key: `client.$protocol.$label.ClientId`

RB_ID=906382"
kevinoliver,2017-02-10 21:03:00,https://api.github.com/repos/twitter/finagle/git/commits/c33257ae0787c6bf1c5c69b4bc15c5ffc373a385,c33257ae0787c6bf1c5c69b4bc15c5ffc373a385,"util-core: Remove deprecated classes

Problem

These classes have been deprecated for years and its time for them to
go to their happy place.

Solution

* Remove `c.t.util.RingBuffer`, use Guava's `EvictingQueue`.
* Remove `c.t.concurrent.ConcurrentPool`, use Finagle's `c.t.f.pool.BufferingPool`.
* Remove `c.t.concurrent.ConcurrentMultiMap`, use Guava's Multimap.

RB_ID=907516"
kevinoliver,2017-02-10 20:17:46,https://api.github.com/repos/twitter/finagle/git/commits/6288e1a5ef421d1f67e017b717cc1dede8d6ee2e,6288e1a5ef421d1f67e017b717cc1dede8d6ee2e,"finagle-netty4: Handle null Channel from SslHandler

Problem

As of Netty 4.1.8 the SslHandler will now also satisfy the
sslCloseFuture on failures. This would lead to a NPE logged.

Solution

Handle this case and keep the logs quiet.

RB_ID=907549"
jcrossley,2017-02-10 19:41:19,https://api.github.com/repos/twitter/finagle/git/commits/153514af77597d4f66bc0f8a1bd3ae4686706963,153514af77597d4f66bc0f8a1bd3ae4686706963,"finagle-memcached: Deprecate c.t.f.memcached.replication.ReplicationClient

Problem

c.t.f.memcached.ReplicationClient uses the deprecated
c.t.f.memcached.KetamaClientBuilder, which we want to remove.

Solution

Deprecate c.t.f.ReplicationClient before removal.

RB_ID=907384"
jcrossley,2017-02-09 19:27:04,https://api.github.com/repos/twitter/finagle/git/commits/813dcc9bb1d52d976cc9042467d8f175e4a5c592,813dcc9bb1d52d976cc9042467d8f175e4a5c592,"util/util-tunable: Introduce TunableMap for accessing Tunables

Problem

Because users will not be creating Tunables directly to use as
configuration parameters for Finale clients/servers, we need
a mechanism for accessing Tunables.

Solution

Create a TunableMap that maps keys containing Tunable ids and types to Tunables.
Tunables retrieved from this map see updates to their values when the values
of the Tunables within the map are updated.

RB_ID=906547"
jcrossley,2017-02-09 18:36:53,https://api.github.com/repos/twitter/finagle/git/commits/a76965afcb4bd26011e8577d830aad7bd538aa68,a76965afcb4bd26011e8577d830aad7bd538aa68,"finagle-kestrel: Remove deprecated `c.t.f.kestrel.protocol.Kestrel`

Problem

The `c.t.f.kestrel.protocol.Kestrel` protocol object is deprecated and
we want to remove it.

Solution

Remove it.

RB_ID=907422
TBR=true"
kevinoliver,2017-02-09 18:13:09,https://api.github.com/repos/twitter/finagle/git/commits/296f3ae50f89f8686ab80a677540d4823e0a1c30,296f3ae50f89f8686ab80a677540d4823e0a1c30,"finagle-thriftmux: Speedup EndToEndTest

Problem

There are two 5 seconds Awaits which are unnecessarily long in ""drain
downgraded connections"".

Solution

Shorten how long we are willing to wait.

Result

The tests run faster.

RB_ID=907425"
mosesn,2017-02-09 05:25:29,https://api.github.com/repos/twitter/finagle/git/commits/298a8b45f5f1ad79982209b9c31583c0d6d3723e,298a8b45f5f1ad79982209b9c31583c0d6d3723e,"finagle-http2: Adds support for nacking

Problem

finagle-http uses headers to signal that it wants to nack, but
http/2 can do better by using RSTs and normal http error codes.

Solution

We add a handler which converts from the special headers into RSTs.
Then, on the client side, we ensure that those RSTs are handled
properly.  As a side effect of this change, it means that if a
server nacks a client that has a connection pool of size one, which
is the common case, its connection pool will drop to size zero and
the connection will be closed, since connections are ref-counted.

Instead of ref-counting streams, we instead say that connections
won't be closed until the client asks for them to close, and make
Transporters Closable.  This seems a little strange because
Transporters ask for a SocketAddress, so it seems like closing a
Transporter would close all connections.  However, this is a legacy
of the old model of Transporters–Transporters are now created newly
for each socket address, so no two socket addresses share the same
Transporter.  This is important for LatencyCompensation to adjust
TCP Connect Timeouts correctly.  We will clean up the Transporter
API in the future.

In the mean time, we provided a default implementation for close
and ensure that Http2Transporter specially closes the underlying
transport if one exists, and it has upgraded to http/2.  Importantly,
it doesn't matter in the downgrade case, because those transports
can be closed directly instead.

Result

Finagle's http/2 implementation is now properly hooked up with its
NACKing API.

RB_ID=907292"
kevinoliver,2017-02-08 23:15:34,https://api.github.com/repos/twitter/finagle/git/commits/14869eb7968a9de0d7e7c676471c9ce9320e0520,14869eb7968a9de0d7e7c676471c9ce9320e0520,"finagle-netty4: Stop setting SO_LINGER=0

Problem

Not all Channels support setting SO_LINGER and as such Netty 4 logs a
warning when the option is set on channels without support.

Solution

While we could push this setting down to after the `Channel` is
established, we could not find a good reason to keep this setting,
which appears to be simply carried over from our Netty 3
implementation.

Result

SO_LINGER is no longer set to 0 for Netty 4 servers.

RB_ID=907325"
kevinoliver,2017-02-08 21:45:03,https://api.github.com/repos/twitter/finagle/git/commits/7c9b760e5f27473892efaf6430a3d746c01a2149,7c9b760e5f27473892efaf6430a3d746c01a2149,"util-core: Promote Buf.Indexed API

Problem

The `c.t.io.Buf.Indexed` API is marked as `private[twitter]` but it is
generally useful for end-users.

Solution

Promote it to be part of `Buf`. This required renaming the indexed
byte lookup method to `get` from `apply` to avoid the naming conflict
with the `Buf.apply` on the companion object.

RB_ID=907231"
jcrossley,2017-02-08 20:50:07,https://api.github.com/repos/twitter/finagle/git/commits/49063eb08a900092a6a73e19695123fd2c3754ef,49063eb08a900092a6a73e19695123fd2c3754ef,"finagle-kestrel: Remove c.t.f.kestrel.Server

Problem

The Finagle Kestrel server is created using the Kestrel codec
object, c.t.f.kestrel.codec. We want to remove this object.

Solution

Remove the server, used only in testing. We already have tests
for the client.

RB_ID=907334"
bryce-anderson,2017-02-08 18:36:50,https://api.github.com/repos/twitter/finagle/git/commits/97a9a2b2b28c95dc35eadce970420efd4cd1f5f7,97a9a2b2b28c95dc35eadce970420efd4cd1f5f7,"finagle-netty4-http: Rectify client behavior for fixed-length responses

Problem

The Netty 4 HTTP client implementation has a significant
behavioral difference from the Netty 3 client when receiving
a response with a content-length header and streaming enabled:
Netty 4 will attempt to aggregate the message regardless of
size, which may fail depending on the configured
`MaxRepsonseSize` parameter while Netty 3 will begin to chunk
the response if it's content-length is greater than 8 KB.

Solution

When streaming is enabled, only aggregate fixed-length messages
on the client if their content-length is less than or equal to
8 KB.

RB_ID=906849"
ryanoneill,2017-02-08 06:07:59,https://api.github.com/repos/twitter/finagle/git/commits/902fa6139a94e6fe9e262f436ff33d0e5b08bd90,902fa6139a94e6fe9e262f436ff33d0e5b08bd90,"finagle-core, netty4: Make Configurations and Engine Factories Public

Problem / Solution

Open up SSL/TLS configurations and engine factories for use outside of
Finagle, since they will soon be the way to configure TLS with Finagle.

RB_ID=907191"
mosesn,2017-02-08 02:32:32,https://api.github.com/repos/twitter/finagle/git/commits/2929ae796d5cae836f0dc8638ace0922f6ce2602,2929ae796d5cae836f0dc8638ace0922f6ce2602,"finagle-http: Added a new interrupt test

Problem / Solution

I got nervous about a corner case that I hadn't added a test for, so I added a
test for it.  Works fine.

RB_ID=907230"
jcrossley,2017-02-08 01:44:39,https://api.github.com/repos/twitter/finagle/git/commits/404d5249fd48bf1277d3ad41b5043adae0fc50e9,404d5249fd48bf1277d3ad41b5043adae0fc50e9,"finagle/finagle-core: Add a `typeAgnostic` method to c.t.f.TimeoutFilter that takes a Tunable

Problem

There is no way for a TimeoutFilter created using `TimeoutFilter.typeAgnostic`
to use a Tunable param.

Solution

Add a `TimeoutFilter.typeAgnostic` method that takes a Tunable, and delegate
the non-tunable version to the new method using a Tunable.Const.

RB_ID=906283"
kevinoliver,2017-02-08 01:35:09,https://api.github.com/repos/twitter/finagle/git/commits/83101f551c2aa836648c494ab3a1d500d7ab0171,83101f551c2aa836648c494ab3a1d500d7ab0171,"finagle-stats: Remove com.twitter.finagle.stats.exportEmptyHistograms toggle

Problem / Solution

The toggle no longer serves any value and the
`com.twitter.finagle.stats.includeEmptyHistograms` flag is sufficient
now that it defaults to false.

RB_ID=907186"
jcrossley,2017-02-07 22:29:03,https://api.github.com/repos/twitter/finagle/git/commits/ad8e8c9ce5abc12040efdef6d069ce3f71d91f50,ad8e8c9ce5abc12040efdef6d069ce3f71d91f50,"finagle/finagle-kestrel: Remove deprecated c.t.f.kestrel.MultiReaderMemcache.codec

Problem

c.t.f.kestrel.MultiReaderMemcache.codec is deprecated.

Solution

Remove it.

RB_ID=907184"
dschobel,2017-02-07 20:50:42,https://api.github.com/repos/twitter/finagle/git/commits/73a83fbc24a5e0efaf6ef551c46edc0f2b0237c1,73a83fbc24a5e0efaf6ef551c46edc0f2b0237c1,"finagle-netty4: native epoll support

Problem / Solution

Netty4 introduces a native epoll implementation which claims
performance improvements so we wire it in for testing.

RB_ID=906913"
jcrossley,2017-02-07 20:24:27,https://api.github.com/repos/twitter/finagle/git/commits/2ae27fc1d1e8a6837dc5e83d4aec8193021d8f5b,2ae27fc1d1e8a6837dc5e83d4aec8193021d8f5b,"finagle/finagle-core: Wire Tunables into TimeoutFilter

Problem

We want to be able to configure some modules with Tunables.

Solution

Starting with TimeoutFilter, add a Param constructor that takes
a Tunable and uses it get the timeout for a request.
The constructor is private[twitter] for now, while the API and usage
is still in development.

RB_ID=905395"
vkostyukov,2017-02-07 04:24:21,https://api.github.com/repos/twitter/finagle/git/commits/29efcffaedd8f8c9e983b04056eff277dc49582b,29efcffaedd8f8c9e983b04056eff277dc49582b,"finagle-netty4-http: Respect decoder result in HTTP clients

Problem / Solution

Not all Netty 4 HTTP pieces fire an exception into the pipeline when
something bad happens. Some just set the `decoderResult` on the inbound
message to a failure. We already respect that on a server-side and have
appropriate checks/converters in place for malformed HTTP requests. We
should do the same things for clients.

RB_ID=907096"
bryce-anderson,2017-02-07 02:48:02,https://api.github.com/repos/twitter/finagle/git/commits/0f6669bb700e71464d4472ff79bd16171953b811,0f6669bb700e71464d4472ff79bd16171953b811,"finagle-base-http: http Version is modeled by a single case class

Problem

There is no reason to distinguish each HTTP version by
type by making them case objects, which are difficult to
use from Java.

Solution

Convert them to a final case class and store Http10 and
Http11 instances as values. As a bonus for Java users, add
a Java friendly Version setting method,
`Message.version(Version)`.

RB_ID=906946"
vkostyukov,2017-02-07 01:42:43,https://api.github.com/repos/twitter/finagle/git/commits/f9b1d5f7da010d04003df4390ed40d154939bbb0,f9b1d5f7da010d04003df4390ed40d154939bbb0,"finagle-netty4: DirectToHeap should bypass empty buffers

Problem / Solution

Empty payloads (represented as `EmptyByteBuf`s) are quite common for both HTTP
requests and HTTP responses. We should handle them explicitly in the DirectToHeap
handler.

RB_ID=906816"
ryanoneill,2017-02-07 01:33:55,https://api.github.com/repos/twitter/finagle/git/commits/32b41f7083b91961b3d6d8c408435230a8d29727,32b41f7083b91961b3d6d8c408435230a8d29727,"finagle-native: Remove Certificate and Key Generation from Tests

Problem / Solution

Finagle-Native uses openssl to generate certificates from the command
line when running tests. This is unnecessary, as predefined certs and
keys as resources will work equally well. Also, the format which is
generated for the private key is not one which will be supported going
forward, as it is not PEM-encoded PKCS#8. This changes the tests to use
predefined certificates and keys.

RB_ID=907115"
bryce-anderson,2017-02-07 00:42:47,https://api.github.com/repos/twitter/finagle/git/commits/6a36583f18e6975799a90bb0afe445d63c0791a9,6a36583f18e6975799a90bb0afe445d63c0791a9,"finagle-base-http/finage-netty4-http: Fix HeaderMap descendants

Problem

The behavior of the descendants of HeaderMap are not self-consistent.
More specifically, the Netty4HeaderMap was inconsistent with its
key iterators/set and the behavior of `+=`, which was a synonym for
`.add(..)` as opposed to `.set(..)` for the other HeaderMap impls.
MapHeaderMap behavior of `+=` also had some weird quirks that set
it apart from the Netty3HeaderMap.

Solution

Consolidate the HeaderMap tests into one abstract unit,
AbstractHeaderMapTest, which can be used to check the behavior
of all the HeaderMap implementations. Next, fix the things that
are broken.

RB_ID=906406"
bryce-anderson,2017-02-06 19:41:17,https://api.github.com/repos/twitter/finagle/git/commits/f3efe0f01c0df9832a0e2d407827377dc9ed9437,f3efe0f01c0df9832a0e2d407827377dc9ed9437,"finagle-base-http: Refine c.t.f.http.Method

Problem

Our model of the HTTP method uses sub-objects of the abstract Method class
for common method names, but they have no different behavior, meaning
its just a bunch of useless .class files and artificial subtype
relationships. Additionally, the only way to get the name of the HTTP
method is from the `.toString` method, which is generally reserved for
debugging and, in general, shouldn't be used for business logic.

Solution

Make a single final Method class that has a `.name` method. Common HTTP
methods are just cached instances of the same Method class, and getting
a Method instance is only possible by using a cached instances or the
`Method.apply(String)` factory function.

RB_ID=906697"
mosesn,2017-02-04 02:37:40,https://api.github.com/repos/twitter/finagle/git/commits/aa43e1ac7209258a79e74d24087d540f0447f098,aa43e1ac7209258a79e74d24087d540f0447f098,"finagle-http: Reverse dependencies for finagle-http2

Problem

We need finagle-http to depend on finagle-http2 so that we can start toggling it
on easily.

Solution

Reverse the dependency order.

RB_ID=905333"
cacoco,2017-02-04 01:16:55,https://api.github.com/repos/twitter/finagle/git/commits/61c7beb09e18f3eee5a3fd3fb2c8a0bcf54c6b9d,61c7beb09e18f3eee5a3fd3fb2c8a0bcf54c6b9d,"util,ostrich,scrooge,finagle,twitter-server: Update TravisCI configuration

Problem/Solution

Add scala 2.12.1 version to TravisCI configurations.

RB_ID=906909"
bryce-anderson,2017-02-03 23:53:53,https://api.github.com/repos/twitter/finagle/git/commits/f48520b6809792d8cb87c5d81a13075fd01c051d,f48520b6809792d8cb87c5d81a13075fd01c051d,"Twitter-oss: Prepare OSS libraries for release

Problem

We want to release the next versions our of Twitter OSS libraries:
 - util -> 6.41.0
 - ostrich -> 9.25.0
 - scrooge -> 4.14.0
 - finagle -> 6.42.0
 - twitter-server -> 1.27.0
 - finatra -> 2.8.0

Solution

Prepare libraries for their next releases.

RB_ID=906879"
ryanoneill,2017-02-03 23:41:14,https://api.github.com/repos/twitter/finagle/git/commits/18ec923a2bf4ce4b1e2435a490dcc67942f2eea2,18ec923a2bf4ce4b1e2435a490dcc67942f2eea2,"finagle-core: Improved Java Compatibility for Ssl Configuration Options

Problem / Solution

Ssl configuration options are structured in Scala as sealed traits with
inherited values implemented in the associated companion object. This
makes it difficult to use from Java. So, introduce some new APIs for
better Java support.

RB_ID=906165"
kevinoliver,2017-02-03 22:35:02,https://api.github.com/repos/twitter/finagle/git/commits/f0c7d473cff11e01f029a51c4d639b3eeefc3b02,f0c7d473cff11e01f029a51c4d639b3eeefc3b02,"finagle-core: Address closing of MethodBuilder

Problem

`MethodBuilder` needs to properly handle closing of its resources.
This includes both per-method resources (data in the ClientRegistry)
as well as shared (the underlying `Service`).

Solution

Cleanup the ClientRegistry on individual closes and use reference
counting to handle closing of the underlying `Service`.

Result

No leaks and no closes effecting other methods.

RB_ID=906119"
cacoco,2017-02-03 21:11:07,https://api.github.com/repos/twitter/finagle/git/commits/b653aac5213c9f16a951dc1f17f69610a8ea6099,b653aac5213c9f16a951dc1f17f69610a8ea6099,"util,finagle: Turn off scaladoc generation for benchmarks and examples

Problem/Solution

We'd like to skip scaladoc generation for projects where it is not
useful and wastes resources to generate them.

RB_ID=906847"
vkostyukov,2017-02-03 06:03:40,https://api.github.com/repos/twitter/finagle/git/commits/cf4fa6873379fb52952a0a120ab98ecc48d17a73,cf4fa6873379fb52952a0a120ab98ecc48d17a73,"finagle-netty4: Make DirectToHeap handler ByteBufHolder-aware

Problem / Solution

We want to open a way to either prefer direct byte buffers or enable pooling
by default. One way or another we need to make our `DirectToHeap` handler a
bit smarter. Being aware of `ByteBufHolder` types means we could move
`DirectToHeap` to the last resort handler for HTTP pipelines thereby making
sure HTTP payloads will always be released and copied off heap before entering
the Finagle land.

RB_ID=906602"
kevinoliver,2017-02-02 21:07:47,https://api.github.com/repos/twitter/finagle/git/commits/e4b3f0def5d4c8eb8236dc949a517e26a43a088a,e4b3f0def5d4c8eb8236dc949a517e26a43a088a,"finagle-benchmark: Remove BufCodecBenchmark

Problem / Solution

BufReaderBenchmark already superseded the decode portion of
BufCodecBenchmark and this patch adds a similar BufWriterBenchmark.

Result

JMH results of BufWriterBenchmark (note that the allocations are an
artifact of the setup from SingleShotTime):

1000 writeByte calls/op and 200 writeBytes calls/op

Benchmark                                               Mode  Cnt      Score       Error   Units
BufWriterBenchmark.writeByteFixed                         ss   50  64537.440 ± 16615.425   ns/op
BufWriterBenchmark.writeByteFixed:·gc.alloc.rate.norm     ss   50    520.000 ±     0.001    B/op
BufWriterBenchmark.writeBytesFixed                        ss   50  27194.840 ±  2684.882   ns/op
BufWriterBenchmark.writeBytesFixed:·gc.alloc.rate.norm    ss   50    520.640 ±     2.240    B/op

RB_ID=906593"
bryce-anderson,2017-02-02 01:41:07,https://api.github.com/repos/twitter/finagle/git/commits/1bb6b85d847ef05eab1756da0c5eed9d98aefc69,1bb6b85d847ef05eab1756da0c5eed9d98aefc69,"finagle-netty4: Change names of Netty4Transporter.apply(..) overloads

Problem / Solution

The Netty4Transporter.apply(..) overloads are dangerous because
they have very different behavior. More specifically, one provides
a raw pipeline that does not concern itself if freeing pooled
resources, while the other does. These overloads should be given
more specific names and some doc strings to make their behavioral
differences more obvious.

I've also moved some subclasses into their own files.

RB_ID=906499"
bryce-anderson,2017-02-01 22:39:52,https://api.github.com/repos/twitter/finagle/git/commits/5dc8ad7f1e650f239681a0fad915fe1730da2200,5dc8ad7f1e650f239681a0fad915fe1730da2200,"finage-base-http: Deprecate parts of HeaderMap API

Problem / Solution

Parts of the HeaderMap API could use some cleanup, so deprecate
them as to give users some warning before their removal.

* The HeaderMap `+= (String, Date)` operator can collide with the
  `+= (String, String)` operator of the parent `Map[String, String]`
  trait after erasure is applied.

* MapHeaderMap is just an implementation of HeaderMap and should not
  be a public class.

RB_ID=906497"
bryce-anderson,2017-02-01 03:06:24,https://api.github.com/repos/twitter/finagle/git/commits/7e04354553ecacf241157f57edf53d2825529aaa,7e04354553ecacf241157f57edf53d2825529aaa,"finagle-http: Deprecate protected Message.headers method

Problem

We are exposing the netty3 `HttpHeaders` type, which is
making it impossible to fully upgrade to netty4. In addition,
its scoped protected, which means Java users see it as public
and then it escapes our control.

Solution

Deprecate it and remove all usages. In the process, the `getAll(key)`
method has been changed to return a `Seq[String]` as opposed to an
`Iterable[String]`.

RB_ID=905019"
ryanoneill,2017-02-01 02:37:55,https://api.github.com/repos/twitter/finagle/git/commits/1a1f9ca314d2b34d4b41a6d93f759bb1cf99f0eb,1a1f9ca314d2b34d4b41a6d93f759bb1cf99f0eb,"finagle-core: Restrict Values for ApplicationProtocols

Problem / Solution

String values for ApplicationProtocols have been restricted to
ones which are registered with the IANA for use with Application-Layer
Protocol Negotiation (ALPN) and ones previously used with Next Protocol
Negotiation (NPN). Also, a `fromString` method has been added for
convenience.

RB_ID=906294"
vkostyukov,2017-02-01 02:03:38,https://api.github.com/repos/twitter/finagle/git/commits/225c86ddf04723d0346fcd7a76bfa547aaefd39f,225c86ddf04723d0346fcd7a76bfa547aaefd39f,"finagle: Specialize ProxyThreadFactory

Problem / Solution

Finagle's `ProxyThreadFactory` is too generic and might be specialized/simplified. As a side
bonus, this fixes the Scala 2.12 warning from Netty.

RB_ID=906180"
kevinoliver,2017-02-01 00:33:04,https://api.github.com/repos/twitter/finagle/git/commits/42149876fa51d84747cfe9f39b68aa62c9e694ee,42149876fa51d84747cfe9f39b68aa62c9e694ee,"finagle-core: Rewrite BufReader in terms of Buf.Indexed

Problem

`BufReader` can be more performant in terms of latency and
allocations.

Solution

Rewrite it in terms of the new `Buf.Indexed` API.

While working on this, bugs in `ByteBufferAsBuf` when `readerIndex` is
not 0 were also addressed.

Result

Significant improvements in terms of latency and allocations in
microbenchmarks.

Using a heap `ByteBufAsBuf`:
- `readByte` 85% faster, 99% less allocations
- `readLongBE` 45% faster, 96% less allocations
- `readBytes` 26% faster, 47% less allocations

Using a direct `ByteBufAsBuf`:
- `readByteDirect` 85% faster, 98% less allocations
- `readLongBE` 77% faster, 96% less allocations
- `readBytes` 31% faster, 96% less allocations

RB_ID=906201"
dschobel,2017-01-31 23:56:42,https://api.github.com/repos/twitter/finagle/git/commits/94a1950a87c6dec90b7acfbf56f28bcdb5149c78,94a1950a87c6dec90b7acfbf56f28bcdb5149c78,"[Buf, Buf]# finagle-mux: ref counted control plane
finagle-mux: ref counted control plane

Problem / Solution

The fact that Mux's control messages never hit application code
allows us to eliminate a copy in the decode pipeline.

Result

Control messages are faster and cheaper to decode.

RB_ID=894873"
mosesn,2017-01-31 21:14:16,https://api.github.com/repos/twitter/finagle/git/commits/5d53333f26b7156a0dd3e93fbbefb46ddce01b44,5d53333f26b7156a0dd3e93fbbefb46ddce01b44,"finagle: Bump the netty4 version to 4.1.8

Problem

We're on 4.1.7, but 4.1.8 has some stuff we need.

Solution

Cut over to 4.1.8.  This has a side benefit of fixing some previously broken
tests!

RB_ID=906249"
bryce-anderson,2017-01-31 20:03:11,https://api.github.com/repos/twitter/finagle/git/commits/86977b152cec490b8de084c1b19a725ab1c1b60a,86977b152cec490b8de084c1b19a725ab1c1b60a,"Problem

We do a number of unchecked casts of our Transport[In, Out] type, which is
due to Java type erasure, that can lead to `ClassCastException`s far away
from where the cast actually happened, making it difficult to debug.

Solution

Require a Class[T] when performing the cast, which we can use to verify that
the instance in question is assignable as a T. This results in fail-fast
behavior.

RB_ID=902053"
ryanoneill,2017-01-31 18:00:53,https://api.github.com/repos/twitter/finagle/git/commits/84f63bdce07305f725e967ddbe17c03384b7a3b9,84f63bdce07305f725e967ddbe17c03384b7a3b9,"finagle-thrift: Move SSL E2E Test to Use PKCS#8 Private Key

Problem

The ""Configuring SSL over stack param"" test currently uses a PKCS#1 PEM
formatted private key (BEGIN RSA PRIVATE KEY). Finagle mostly says that
it supports PKCS#8 PEM formatted private keys (BEGIN PRIVATE KEY), so
the fact that this works currently is an implementation detail and not
something that is explicitly supported.

Solution

Move the ""Configuring SSL over stack param"" test to use a PKCS#8 PEM
formatted private key instead.

RB_ID=906250"
mosesn,2017-01-31 02:23:34,https://api.github.com/repos/twitter/finagle/git/commits/ebdfba313d687254ca02ca4cfbc2785d31cb25c9,ebdfba313d687254ca02ca4cfbc2785d31cb25c9,"finagle-http2: Re-enable failfast

Problem

We use exceptions for flow control in the MultiplexedTransporter when we close
the connection during normal operation.  We had to remove FailFast so that it
wouldn't be triggered by this, so http/2 doesn't use FailFast right now.

Solution

Return a dead service when the connection is dead, and make sure that clients
know to interpret that as a cue to retry.

Result

We can turn on fail fast again in http/2!

RB_ID=905445"
bryce-anderson,2017-01-30 23:51:46,https://api.github.com/repos/twitter/finagle/git/commits/a79d3874d0b82f50bd9552e1778387b5b13f4f0c,a79d3874d0b82f50bd9552e1778387b5b13f4f0c,"finagle-http: Add client exception TooLongMessageException

Problem

We don't always handle important netty exceptions in finagle,
such as the TooLongFrameException on the client side, so folks
need to do that themselves. Unfortunately this is a leak of the
underlying Netty implementation, and that makes it hard to move
seamlessly from Netty 3 to Netty 4, since they both offer an
exception of the same name, but they are of different type because
they are from totally different packages.

Solution

Catch these Netty exceptions in the Netty pipeline and wrap them
in a named finagle ChannelException, so the backend no longer
matters.

As a bonus, I fixed a bug in the netty4 client where fixed length
messages were bounded to the `maxChunkSize` instead of the appropriate
`maxResponseSize`.

RB_ID=905567"
bryce-anderson,2017-01-30 16:47:59,https://api.github.com/repos/twitter/finagle/git/commits/9e4c18aaf7cf94fa580af38c70a21c226766d679,9e4c18aaf7cf94fa580af38c70a21c226766d679,"finagle: delete finagle-spdy

Problem / Solution

finagle-spdy is build on Netty 3 specific codecs and is unused at
Twitter, and appears unused in the OSS community, so it should be
deleted.

RB_ID=906033"
edma2,2017-01-28 00:57:52,https://api.github.com/repos/twitter/finagle/git/commits/9a04ff30f684c32b34bb01f0aef31d50c26bcae8,9a04ff30f684c32b34bb01f0aef31d50c26bcae8,"Problem
-----

BindingFactory caches service factories to ensure good performance when
NameInterpreter activity changes, and occasional dtab overrides are
added. Those caches evict lazily when new entries need to be added. As a
consequence, observations of one-shot overrides are kept until enough new
resolutions have been performed to require eviction, putting unnecessary strain
on service discovery systems.

Solution
-----

Proactively evict idle entries from BindingFactory caches.

Result
-----

Resources associated with unused service factories are actively reclaimed,
including an entire stack, Var observations and stats.

RB_ID=898920"
kevinoliver,2017-01-27 21:34:49,https://api.github.com/repos/twitter/finagle/git/commits/470425a3170544dfaede65e86c4208b1c41e08ee,470425a3170544dfaede65e86c4208b1c41e08ee,"util-core: Begin using Buf.Indexed

Problem

There are is a variety of code utilizing `Bufs` that lend themselves
nicely to efficient random access.

Solution

Begin switching code to utilize the new `Buf.Indexed` APIs.

* Buf.equals
* Buf.hashBuf
* Deadline.tryUnmarshal
* BufReader.remainingUntil
* memcached's ParserUtils.isDigits
* memcached's Framer.extractFrame

Result

The performance improvements in microbenchmarks vary from call to
call. A good high-level signal is that this patch reduces allocations
rates by 1-2% in an example service.

This change also begins work to free us from needing Bufs to be on
heap for alot of operations which is another step towards off-heap
implementations.

RB_ID=905253"
ryanoneill,2017-01-27 21:10:11,https://api.github.com/repos/twitter/finagle/git/commits/f3456d674f6d6ac7a84956459b507eeb2ef1ebae,f3456d674f6d6ac7a84956459b507eeb2ef1ebae,"finagle-netty4: Introduce Engine Factories for Netty 4

Problem / Solution

Using Netty 4's SslContextBuilder and netty-tcnative will be the way
forward for using native SSL/TLS engines with Finagle. Implement an
instance of SslClientEngineFactory and SslServerEngineFactory which
is capable of using it.

RB_ID=904885"
bryce-anderson,2017-01-27 19:16:01,https://api.github.com/repos/twitter/finagle/git/commits/8ef4356a2e3b5035b3f2a08d5cfcda2654e8935a,8ef4356a2e3b5035b3f2a08d5cfcda2654e8935a,"finagle-http: Make get/setContent methods on Message fully protected

Problem

The getContent and setContent methods on http.Message are
protected[finagle], meaning they can be easily used from Java, hindering
their removal during the Netty 3 to Netty 4 transition.

Solution

Make them bonafide protected.

RB_ID=905711"
bryce-anderson,2017-01-27 17:31:40,https://api.github.com/repos/twitter/finagle/git/commits/3bb41deac541265c523d2a7ac0ad35c9ec416ad9,3bb41deac541265c523d2a7ac0ad35c9ec416ad9,"finagle-http: Deprecate http Request Response protected[finagle] methods

Problem / Solution

Most of these methods deal in Netty 3 specific types which is hindering
the transition to Netty 4, so they should be deprecated then removed.
The `setUri(String)` method of `Request` is also deprecated and a public
`uri(String)` method is added to offer a reasonable public API for Java
users.

RB_ID=905761"
kevinoliver,2017-01-26 22:20:23,https://api.github.com/repos/twitter/finagle/git/commits/b3abe07eb5bf95d8982ad7c034fe2eefa15c7094,b3abe07eb5bf95d8982ad7c034fe2eefa15c7094,"util, finagle, twitterserver: Add favicons to documentation

Problem / Solution

We don't have a favicons for our documentation leading to a plain old
looking tab in browsers.

util's favicon from:
https://github.com/twitter/twemoji/blob/gh-pages/2/72x72/1f3d7.png

twitterserver's favicon from:
https://github.com/twitter/twemoji/blob/gh-pages/2/72x72/1f52e.png

RB_ID=905443"
ryanoneill,2017-01-26 21:22:24,https://api.github.com/repos/twitter/finagle/git/commits/72a6e5a260a05c99a1e3ef354701f46f7deba08f,72a6e5a260a05c99a1e3ef354701f46f7deba08f,"finagle-core: Introduce LegacyServerEngineFactory

Problem

Changing how SSL/TLS configuration and engine creation within
Finagle will leave those using the current `Ssl` class without
a clear path forward.

Solution

Introduce `LegacyServerEngineFactory`, which uses `Ssl` under the
hood, which can act as a temporary bridge from old to new system.

RB_ID=905573"
bryce-anderson,2017-01-26 20:30:06,https://api.github.com/repos/twitter/finagle/git/commits/83329b3f9cf38cc7a60708df15db4b1ac77d95cd,83329b3f9cf38cc7a60708df15db4b1ac77d95cd,"finagle: fix Travis build

Problem / Solution

Travis is still looking for finagle-http-compat, so remove it from
the .travis.yml build matrix.

RB_ID=905629"
b-hoyt,2017-01-26 20:11:57,https://api.github.com/repos/twitter/finagle/git/commits/f4b23dc18a2dcd30303363e045f15979667e35e2,f4b23dc18a2dcd30303363e045f15979667e35e2,"Add Salesforce to adopter list

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=905617"
bryce-anderson,2017-01-26 19:13:37,https://api.github.com/repos/twitter/finagle/git/commits/319d2e7f83635bdb353866cdc12e69f55a026420,319d2e7f83635bdb353866cdc12e69f55a026420,"finagle-http: Add content(Buf) to Message

Problem

It's difficult to use our http types from Java because many of our
mutator methods are of the `name_=(..)` style. This is true for the
`Message` content as well. In addition, our only existing
`setContent(ChannelBuffer)` method is package protected but easy to use
from Java so it's being heavily used outside of finagle, hindering the
migration to Netty 4.

Solution

Deprecate the `getContent: ChannelBuffer` and `setContent(ChannelBuffer)`
methods and add a new method, `content(Buf)` which should be easier to
use from Java but uses the appropriate twitter types.

RB_ID=904749"
kevinoliver,2017-01-26 02:07:14,https://api.github.com/repos/twitter/finagle/git/commits/023e7b16225d4613bd07b7c24ab2081471451df3,023e7b16225d4613bd07b7c24ab2081471451df3,"finagle-core: Filter out some metrics in MethodBuilder

Problem

`MethodBuilder` has the potential to add a significant number of
metrics.

Solution

Use a `BlacklistStatsReceiver` to keep the metrics down to a minimum.

RB_ID=904791"
vkostyukov,2017-01-26 00:36:33,https://api.github.com/repos/twitter/finagle/git/commits/7ed636082dde2e5f4b8ed230d8b43ad0c2a0236a,7ed636082dde2e5f4b8ed230d8b43ad0c2a0236a,"finagle-netty4: Netty4ProxyConnectHandler should not buffer writes

Problem

While `NettyProxyConnectHandler` buffers writes it doesn't properly drain them
when the proxy handshake is finished. Instead of removing the HTTP pieces from the
pipeline and then draining writes it does it in the reverse order, which leads
to TLS/SSL (when configured) handshake hello message beeing dropped on the floor
(by HTTP codec).

Solution

Do not buffer writes on the `NettyProxyConnectHandler` and let the `ProxyHandler`
(placed right after) do this job.

RB_ID=904803"
mosesn,2017-01-25 22:01:05,https://api.github.com/repos/twitter/finagle/git/commits/a2187dd391d7c193d0ed14f4368653888b0fe700,a2187dd391d7c193d0ed14f4368653888b0fe700,"finagle-http: Add a test for interruptions

Problem

We don't have a test for what happens in an interruption.

Solution

Add a test!

RB_ID=905211"
vkostyukov,2017-01-25 21:26:02,https://api.github.com/repos/twitter/finagle/git/commits/40413f04d92b788d42d8ad41be314d8649cbb4f4,40413f04d92b788d42d8ad41be314d8649cbb4f4,"source: Remove finagle-http-compat

Problem / Solution

finagle-http-compat is a band aid we had to use while migrating everyone to
the new HTTP API (Netty-free HTTP types). Now that migration has completed we're
ready to rip it off and clear the way to Netty-3-less finagle-http.

RB_ID=903647
TBR=true"
vkostyukov,2017-01-25 04:33:48,https://api.github.com/repos/twitter/finagle/git/commits/1044427a176d59e344f92e9083cc17a3aca597ed,1044427a176d59e344f92e9083cc17a3aca597ed,"finagle-netty4: Aggregate HTTP responses before HttpProxyConnectHandler

Problem / Solution

Given that there is no insight on how `HTTP/1.1 200` with no body is going to
be decoded by the HTTP pipeline (chunked? full HTTP response?), we need to make
sure `HttpProxyConnectHandler` is getting full responses hence aggregate HTTP
objects for it.

RB_ID=904831"
mosesn,2017-01-24 23:40:11,https://api.github.com/repos/twitter/finagle/git/commits/45169bc22255b6dd93faed8830e7d1b9072f44b5,45169bc22255b6dd93faed8830e7d1b9072f44b5,"finagle-http2: Log trace-level stuff at TRACE level

Problem

We were filling up our logs with messages about http/2 frames.  Let's only do
that when we really really want to.

Solution

Reduce log level for http/2 frames to TRACE.

RB_ID=904983"
kevinoliver,2017-01-24 20:41:23,https://api.github.com/repos/twitter/finagle/git/commits/b25edfe418054398d8d0f61488c765dd96b35a64,b25edfe418054398d8d0f61488c765dd96b35a64,"util-core: Introduce Buf.Indexed for positional access to Bufs

Problem

The `c.t.io.Buf` abstraction lacks a cheap mechanism to do indexed
access to the underlying bytes. Without this, the code relies on
access to a byte-array being a cheap operation. While this is often
the case today, it is not always the case, and is an impediment to
moving towards off-heap buffers.

Solution

Introduce the `Buf.Indexed` abstraction that adds a positional API
`apply` and a scanning API `process`. Existing `Buf` implementations
in util and finagle are updated to implement the API.

Result

A benchmark comparing `slice` and `write` to `apply` shows the
performance differences, and this is done giving slice and write an
advantage by reusing the byte-array. Future commits will put the API
to use.

RB_ID=904559"
jcrossley,2017-01-24 20:23:01,https://api.github.com/repos/twitter/finagle/git/commits/138c6e8ffbd034b2bd7fb38ee5e47b9e0c67a736,138c6e8ffbd034b2bd7fb38ee5e47b9e0c67a736,"finagle-http: Don't set Transfer-Encoding to chunked when Content-Length present

Problem

There is a discrepency between Netty 3 and Netty 4 Finagle
client behavior. If a request has content-length set in N3,
and is chunked (but does not have the Transfer-Encoding header
set), it will *not* be sent with Transfer-Encoding: chunked.

In Netty 4, however, if a request is chunked, the request is sent
with Transfer-Encoding: chunked and Content-Length is set to 0.
This causes an issue when servers examine the content body of the request
and find it empty.

Solution

Only set the Transfer-Encoding to ""chunked"" when a request does not
have a content length.

RB_ID=903657"
kevinoliver,2017-01-23 23:48:56,https://api.github.com/repos/twitter/finagle/git/commits/40f655b2d5c206fad924b4b2b37b5f93fc198a1f,40f655b2d5c206fad924b4b2b37b5f93fc198a1f,"finagle-core: Add MethodBuilders into Registry

Problem

For informational and debugging purposes we want to be able to see
what MethodBuilders a service is running. This is an extension of what
we already register for Finagle clients.

Solution

Put the details into the GlobalRegistry and then they can ve viewed
using TwitterServer's /admin/registry.json endpoint.

Result

Better visibility into what is happening at runtime.

RB_ID=904683"
vkostyukov,2017-01-22 00:52:59,https://api.github.com/repos/twitter/finagle/git/commits/327a8f3e2feef647602df79b6dbf0a4b33deea33,327a8f3e2feef647602df79b6dbf0a4b33deea33,"finagle-http: Introduce HeaderMap.getOrNull

Problem

Preserving Netty behavior w.r.t. retrieving header values is hard in Java since
there is no easy way of getting a header or `null` if it does not exist. In Scala,
this could be mimicked with `get(""foo"").orNull`, which is not accessible from Java
(think of implicit param for `orNull`). It's still possible to `getOrElse` from
Java but it requires pre-allocating a `Function0` instance that returns a default
value (this is painful).

Solution

Introduce Java-friendly `headerMap.getOrNull` method.

RB_ID=904093"
ryanoneill,2017-01-21 01:41:07,https://api.github.com/repos/twitter/finagle/git/commits/ea4516659616771d89507290c7efcf52cb0e6ce4,ea4516659616771d89507290c7efcf52cb0e6ce4,"finagle-core: Loosen Access Restrictions for SSL/TLS Primitives

Problem

To continue with development, new SSL/TLS code primitives need to be accessible
from other parts of Finagle. Currently, they are only accessible within
the `com.twitter.finagle.ssl` namespace.

Solution

Change the access modifier from `private[ssl]` to `private[finagle]` to
allow access from within Finagle.

RB_ID=904523"
kevinoliver,2017-01-21 00:41:02,https://api.github.com/repos/twitter/finagle/git/commits/4b746bd6b5c4168844f9754edb3fb8d910f6abdb,4b746bd6b5c4168844f9754edb3fb8d910f6abdb,"util-core, finagle-core: Misc Buf changes

Problem / Solution

This commit covers a couple of miscellaneous changes to Buf or usage
of Buf. None of which are critical. They include:

* Fixes to BufBenchmark for hashCode and equality.
* Add benchmarks for Netty3 and Netty4 Buf implementations.
* Improve Buf's caching of hashCode to avoid repeated recalculations.
* Use `Buf.apply(Seq(Buf))` instead of `Buf.concat` when there are more than 1 Buf.
* Add a bit of scaladoc to Buf

RB_ID=904403"
ryanoneill,2017-01-20 21:38:08,https://api.github.com/repos/twitter/finagle/git/commits/de4e09df5f0f69861b4f362fad16cfe6b3530724,de4e09df5f0f69861b4f362fad16cfe6b3530724,"finagle-core: Introduce SslServerEngineFactory and Implementation

Problem

SSL/TLS code within Finagle for both Netty3 and Netty4 colocates
how an SSL/TLS engine is created with how it is configured.

Solution

Introduce new types which are to be used for creating an SSL/TLS
engine using a separate configuration.

RB_ID=903355"
mosesn,2017-01-20 19:34:25,https://api.github.com/repos/twitter/finagle/git/commits/978d6562662d4141b7988ef50998df3d7f5bf7f9,978d6562662d4141b7988ef50998df3d7f5bf7f9,"finagle-commons-stats: Provide an exporter for TwitterServer

Problem

Folks could report stats with commons stats, but TwitterServer couldn't export
them.  This made it difficult to switch to TwitterServer while still using
commons stats.

Solution

Write an exporter that works with finagle-commons-stats for TwitterServer.

Result

Folks can switch separately to TwitterServer without having to abandon commons
stats.

RB_ID=902921"
vkostyukov,2017-01-20 05:35:14,https://api.github.com/repos/twitter/finagle/git/commits/e8819c863765e33b7a7906196e1bc3ba28049b9a,e8819c863765e33b7a7906196e1bc3ba28049b9a,"finagle-netty4: Remove workaround for Netty-5933

Problem / Solution

As of Netty 4.1.7 we don't have to issue a read request during the proxy
handshake when auto-read is disabled.

RB_ID=903473"
kevinoliver,2017-01-20 01:30:30,https://api.github.com/repos/twitter/finagle/git/commits/77eeebe7441d73836d95d553feb0b3d9835740e8,77eeebe7441d73836d95d553feb0b3d9835740e8,"finagle-core: Add logical stats to MethodBuilder

Problem

Users want to know the ""logical"" success rate and latency for their
clients.

Solution

Provide this functionality in `MethodBuilder` by adding method name
scoped stats for this.

This work also surfaced that `MethodBuilder` was not properly scoping
its `StatsReceiver`.

Result

Metrics that are scoped to the method, for example:

`clnt/the_client_label/the_method_name/logical/requests`
`clnt/the_client_label/the_method_name/logical/success`
`clnt/the_client_label/the_method_name/logical/request_latency_ms`

RB_ID=903665"
mosesn,2017-01-19 20:43:44,https://api.github.com/repos/twitter/finagle/git/commits/4c7f21913b7471f8f163161cd11dbfe5c20b53df,4c7f21913b7471f8f163161cd11dbfe5c20b53df,"finagle-http2: Mark more tests as fixed

Problem

We weren't running some tests in http/2, even though they're fixed now.

Solution

Run ze tests!!!

Result

finagle-http2 is pretty dang close to finagle-http's behavior now.

RB_ID=903953"
kevinoliver,2017-01-18 21:21:09,https://api.github.com/repos/twitter/finagle/git/commits/b61e6aab8235da9b9b1c90a6982c3e70b40a5065,b61e6aab8235da9b9b1c90a6982c3e70b40a5065,"Bump JMH version to 1.17.3

Problem / Solution

The version of JMH being used was pretty long in the tooth. This bumps
us to 1.17.3.

RB_ID=903753"
nhnFreespirit,2017-01-18 20:12:19,https://api.github.com/repos/twitter/finagle/git/commits/77a78e85ecbdaf266a4da2e7141720bc6b229126,77a78e85ecbdaf266a4da2e7141720bc6b229126,"finagle-http2: Allow initial settings to Http2Codec

Problem:
While possible when creating a Finagle client, there is currently
no way to specify initial Http/2 settings for the Http2Codec when
creating a server in Finagle.

Solution:
Netty 4.1.7 introduces a way to specify settings when instantiating
an Http2Codec. Thread the existing Settings Param through to the
places where this happens.

Result:
It is now possble to specify initial Http/2 settings for Finagle
servers

RB_ID=903667"
bryce-anderson,2017-01-18 03:54:53,https://api.github.com/repos/twitter/finagle/git/commits/df3b7e510db021dc7b43a0923d7e889fdf4865d8,df3b7e510db021dc7b43a0923d7e889fdf4865d8,"finagle-core: Log warning on marshalled context decode failure

Problem / Solution

It's probably a surprise to have a marshalled context value fail to
decode and we should log such events to make debugging easier instead of
silently dropping the entry.

RB_ID=902653"
nhnFreespirit,2017-01-17 23:29:17,https://api.github.com/repos/twitter/finagle/git/commits/37d13f5cc49318dba913c2926b7734a38f601d22,37d13f5cc49318dba913c2926b7734a38f601d22,"Bump Netty to 4.1.7-Final

Problem:
We would like to use the latest version of Netty as we have several fixes in
this version.

Solution:
Bump Netty dependency and fix check against string which has changed.

Result:
We are now on Netty 4.1.7-Final

RB_ID=892771"
jcrossley,2017-01-17 20:02:37,https://api.github.com/repos/twitter/finagle/git/commits/1344af78f6418d6d9180c0e3346572e74458a017,1344af78f6418d6d9180c0e3346572e74458a017,"finagle/finagle-memcached: Upgrade finagle-memcache from Group to Var[Addr] (again)

Problem

c.t.f.Group is deprecated. Memcached cache ring management uses the c.t.f.Group.

Solution

Replace c.t.f.Group with c.t.f.Var[Addr] in the Memcached internals.

RB_ID=897201"
dschobel,2017-01-17 19:56:58,https://api.github.com/repos/twitter/finagle/git/commits/3c10ba2a424b1f0b78353da5ff59cbab03b58869,3c10ba2a424b1f0b78353da5ff59cbab03b58869,"finagle-netty4: ChannelTransport supports messages which are backed by external resources

Problem / Solution

The netty4 ChannelTransport needs to support messages which need
cleanup in order to support ref-counting in finagle protcols.

RB_ID=901673"
stuhood,2017-01-17 06:24:20,https://api.github.com/repos/twitter/finagle/git/commits/56bdef09912720319be28eaea6e41309c033c8cb,56bdef09912720319be28eaea6e41309c033c8cb,"Science Is All Around Us

See https://phabricator.twitter.biz/D16592 : this review exists to allow for `--no-queue` of this change.

RB_ID=903365
NO-QUEUE=true
NO_USER_HOOK=1"
ryanoneill,2017-01-14 01:56:47,https://api.github.com/repos/twitter/finagle/git/commits/5561a74c3c6ff78e7528f70c16a701a3962e973b,5561a74c3c6ff78e7528f70c16a701a3962e973b,"finagle-core: Introduce SslClientEngineFactory and Implementations

Problem

SSL/TLS code within Finagle for both Netty3 and Netty4 colocates
how an SSL/TLS engine is created with how it is configured.

Solution

Introduce new types which are to be used for creating an SSL/TLS
engine using a separate configuration.

RB_ID=902945"
tonyd3,2017-01-13 01:46:11,https://api.github.com/repos/twitter/finagle/git/commits/bc2fb305f03200931ac1305b592d9ba6e85a1ae3,bc2fb305f03200931ac1305b592d9ba6e85a1ae3,"finagle-serverset: Make statetracker cache counter instead of state.

Problem:
The statetracker creates a new counter everytime it samples and
outputs the time in current state.

Solution:
Instead of caching the current state, we can just cache the a
counter which will prevent a new counter from being created.

RB_ID=902951"
dschobel,2017-01-13 01:03:53,https://api.github.com/repos/twitter/finagle/git/commits/a4b2997b1fe336302806f94a1f79bb59c742bbce,a4b2997b1fe336302806f94a1f79bb59c742bbce,"finagle: dschobel to root owners

Problem / Solution

add dschobel to owners

RB_ID=902899"
kevinoliver,2017-01-13 00:38:10,https://api.github.com/repos/twitter/finagle/git/commits/af94e3d33fb1a7347293e5b76b701a55b19144a0,af94e3d33fb1a7347293e5b76b701a55b19144a0,"finagle-core: Support per-request timeouts in MethodBuilder

Problem

We want first-class support for configuring per-request timeouts in
`c.t.f.client.MethodBuilder`.

Solution

Introduce an API to support it:

    import com.twitter.conversions.time._
    import com.twitter.finagle.client.MethodBuilder

    val builder: MethodBuilder[Int, Int] = ???
    builder.withTimeout.perRequest(50.milliseconds)

Result

`MethodBuilder` now allows each method to have different configuration
for per-request timeouts.

RB_ID=901991"
mosesn,2017-01-12 23:56:16,https://api.github.com/repos/twitter/finagle/git/commits/abae70ca4913fbd29a54474a5e8c3dfa60e0ad61,abae70ca4913fbd29a54474a5e8c3dfa60e0ad61,"finagle-http2: Stop leaking connections

Problem

There's no way for clients to hang up the tcp connection in http/2.

Solution

After all of the virtual connections have been torn down, tear down the TCP
connection and purge the entry from the cache.  In order to let RequeueFilter
handle retrying, we unfortunately have to disable FailFast temporarily, since it
marks itself as busy regardless of the kind of exception.  In the future, we
should discriminate in FailFast.

Result

Http/2 no longer leaks connections, but now doesn't support fail fast.  Will be
fixed in a subsequent commit.

RB_ID=901165"
bryce-anderson,2017-01-12 20:41:54,https://api.github.com/repos/twitter/finagle/git/commits/a38e49f88df44932da53160823d8d3f4ad1e51d5,a38e49f88df44932da53160823d8d3f4ad1e51d5,"finagle-http: Cleanup ValidateRequestFilter

Problem / Solution

We should be handling ill formed requests, as far as the HTTP
codec is concerned, in the Dispatcher or lower so they should
never reach the Service, where this filter would live. That
means we don't need to check for them in the ValidateRequestFilter.

RB_ID=899895"
bryce-anderson,2017-01-12 19:20:46,https://api.github.com/repos/twitter/finagle/git/commits/3fa9df318208279863e9dd9afba6c5503aa3e873,3fa9df318208279863e9dd9afba6c5503aa3e873,"finagle-http: Remove Message.write(ChannelBuffer) method

Problem

The `Message.write(ChannelBuffer)` method is netty3 specific and
must go in order to present a netty free API. In addition, the
semantics of the different write methods are very different and
a may have incorrect comment strings (specifically withOutputStream).

A further problem is the methods behavior when the message is chunked:
the base `.write(ChannelBuffer)` method, used by many other methods,
checks to see if the message is chunked, and if it is, it attempts to
write it to the messages `Writer`. This poses a few problem:

* If the `Writer` is busy this throws an exception. There is no way to
  probe the state of the `Writer` other than through catching
  exceptions.
* There is no reasonable way to close the `Writer` since we don't have
  a handle to the `Future` generated by the write which signals when
  the previous operation is complete.

Solution

Remove the `Message.write(ChannelBuffer)` and replace it with an
overload `Message.write(Buf)` with the same semantics for non-chunked
messages and throws an `IllegalStateException` if the message is
chunked.

RB_ID=900091"
bryce-anderson,2017-01-11 21:23:11,https://api.github.com/repos/twitter/finagle/git/commits/9b285ab8b63877774f9ca57c020364ba364a684b,9b285ab8b63877774f9ca57c020364ba364a684b,"finagle-core: Back Context with a Map and reduce the API surface

Problem

The structure of c.t.f.context.Context is a linked list of
cons cells and tombstones that is never reduced, leading to
the possibility of unbounded collection growth. This can result
in memory leaks and StackOverflowErrors since the traversal
functions are not tail recursive.

Solution

Change the internal representation to an immutable Map which has
effectively constant update and access operations. Benchmarks show
this to be slightly slower than the linked list structure (~15%, 10 ns)
and creates a bit more garbage than for inserts/shadows (~20 bytes/op)
and slightly less for clears, but the reduction in complexity is
well worth it since these are relatively rare operations.

RB_ID=896663"
mosesn,2017-01-11 01:18:31,https://api.github.com/repos/twitter/finagle/git/commits/0979a34a779aa08917735a39f18c4d77549798eb,0979a34a779aa08917735a39f18c4d77549798eb,"finagle-http2: Handle overflowing stream ids

Problem

If a client kicks it up 11, eventually their stream ids will roll over, which is
illegal.  Instead of continuing, they should kill themselves.

Solution

Check if your stream id is invalid and mark yourself dead before anything else.

RB_ID=901143"
bryce-anderson,2017-01-09 23:33:41,https://api.github.com/repos/twitter/finagle/git/commits/513cfd675b37f8fec06cb64be677a6262fa18fcb,513cfd675b37f8fec06cb64be677a6262fa18fcb,"finagle-redis: Plug memory leak

Problem

We now use netty4 as our I/O back-end for finagle-redis, but we didn't
remember to free the netty4 ByteBuf's.

Solution

Add the DirectToHeapInboundHandler to copy our ref-counted buffers onto
the heap and release the ref counted buffers, removing the memory leak.

RB_ID=901737"
jcrossley,2017-01-09 21:09:46,https://api.github.com/repos/twitter/finagle/git/commits/99e71e83c5c648d20881a369d88f28193c5c78d0,99e71e83c5c648d20881a369d88f28193c5c78d0,"Problem

`c.t.f.memcached.protocol.text.Memcached protocol` creates non-pipelined, Netty 3-only
Finagle Memcached clients. We want to remove the ability to create non-pipelined
clients.

Solution

Deprecate `c.t.f.memcached.protocol.text.Memcached` and fix all instances.

RB_ID=899009
TBR=true"
kevinoliver,2017-01-09 20:27:43,https://api.github.com/repos/twitter/finagle/git/commits/4a659a3b0a1bbf5c15d42a8da86447cc9462726a,4a659a3b0a1bbf5c15d42a8da86447cc9462726a,"finagle-netty4: Fix bug in BufAsByteBuf.apply

Problem / Solution

`c.t.f.netty4.BufAsByteBuf.apply` was improperly computing the length
when converting from a `Buf.ByteArray`.

RB_ID=901605"
jcrossley,2017-01-09 20:26:11,https://api.github.com/repos/twitter/finagle/git/commits/93450364d64743975e7c31bf1b1b5f319709254f,93450364d64743975e7c31bf1b1b5f319709254f,"finagle/finagle-http: Fix typo

Summary:
Problem / Solution

Fix typo in ContentTypeWwwForm.

Test Plan: sandbox passed: https://ci.twitter.biz/job/source_sandbox/27956/

Reviewers: O959 source:/insights/!, O846 source:/finagle/!, O890 source:/finatra/!, O19312 source:/finagle/finagle-base-http/, dschobel, O473 source:/b2c-platform/, ssaengsuwarn, O5383 source:/zipbird/, mmahoney, O4846 source:/science/tests/scala/com/twitter/cdl/, bpence, O720 source:/digits/web/, O1055 source:/macaw-digits-api/, mbangalore, O5284 source:/useng/, skoneru, fpaulo, O5220 source:/tweetdeck/, docrualaoich

Reviewed By: O19312 source:/finagle/finagle-base-http/, dschobel, O473 source:/b2c-platform/, ssaengsuwarn, O5383 source:/zipbird/, mmahoney, O4846 source:/science/tests/scala/com/twitter/cdl/, bpence, O720 source:/digits/web/, O1055 source:/macaw-digits-api/, mbangalore, O5284 source:/useng/, skoneru, fpaulo, O5220 source:/tweetdeck/, docrualaoich

Subscribers: docrualaoich, mbangalore, mmahoney, ssaengsuwarn, #rb_useng, #rb_plattools, #rb_csl, #rb_insights, #rb_macaw-digits-team, #rb_processing-tools, #rb_tweetdeck

TBR=true

Differential Revision: https://phabricator.twitter.biz/D17588"
cacoco,2017-01-09 17:23:14,https://api.github.com/repos/twitter/finagle/git/commits/1121c51ef289303c5243d01c8b257965b76c7d5f,1121c51ef289303c5243d01c8b257965b76c7d5f,"oss libraries: Cache Dodo build artifacts

Problem/Solution

The TravisCI builds for the Twitter OSS libraries are using Dodo
but aren't configured to cache the Dodo state maintained in the
`$HOME/.dodo` directory. Update the configurations to add that directory
to the caching directive in the configurations.

RB_ID=901495"
jcrossley,2017-01-06 20:37:07,https://api.github.com/repos/twitter/finagle/git/commits/8cd78d90825f7c21a5fb5d2e03a327d69c9a28c8,8cd78d90825f7c21a5fb5d2e03a327d69c9a28c8,"finagle/finagle-core: Change log level of Failure in DeadlineFilter to Debug

Problem

If DeadlineFilter is rejecting a significant number of requests, the failures
fill up a lot of the logs.

Solution

Rejections from DeadlineFilter can be monitored effectively through stats. Changed
the log level of these failures to Debug.

RB_ID=901219"
stuhood,2017-01-06 06:05:12,https://api.github.com/repos/twitter/finagle/git/commits/cdd87d53e26af5ac910c52f2c9f7c625404f5a23,cdd87d53e26af5ac910c52f2c9f7c625404f5a23,"Bump the junit-runner version to bring in scalatest support

Summary:
Problem

Pants' junit-runner used to require a `RunWith(classOf[JUnitRunner])` annotation on scalatest tests, which involved an annoying bit of error-prone boilerplate.

Solution

Include Pants' new support for directly invoking Scalatest suites ([from](https://rbcommons.com/s/twitter/r/4361/)), and mark all newly-running tests that had bitrotted `ignore`. Additionally, where test superclasses extended Suite classes, mark abstract.

Result

Scalatest suites run directly without the need for the RunWith annotation.

Test Plan: https://ci.twitter.biz/job/source_sandbox_phab_production/359/

Reviewers: alexlevenson, ity, mlandis, kwilson, acardenas, peiyu, O4772 source:/science/tests/scala/com/twitter/ads/batch/job/roi/id_bridging/!, O826 source:/escherbird/tests/scala/com/twitter/escherbird/scalding/jobs/!, O505 source:/birdherd/src/test/scala/com/twitter/birdherd/gizmoduck/!, O4881 source:/science/tests/scala/com/twitter/frontpage/!, O4976 source:/science/tests/scala/com/twitter/whoop/!, O5154 source:/timelines/data_processing/!, O5190 source:/tv-platform/metadata/!, O538 source:/card-rules-service/!, O5308 source:/user-image-service/!, O912 source:/gizmoduck-thrift/!, O908 source:/geoduck/yelp/!, O1185 source:/macaw-pages/!, O822 source:/escherbird/!, O5058 source:/spamacaw/!, O1857 source:/passbird/!, O1799 source:/mustache/!, O5351 source:/web-core/!, O903 source:/geoduck/!, O5177 source:/tsdb/!, O546 source:/cdn/!, O4932 source:/science/tests/scala/com/twitter/scalding_internal/, bpence, O4833 source:/science/tests/scala/com/twitter/amplify/!, O330 source:/audio-video/amplify-metadata-service/!, O342 source:/audio-video/integrationtest/!, O1216 source:/macaw-relevance/, abeal, O5047 source:/servo/, O1001 source:/limiter/, O858 source:/finagle/finagle-mux/, koliver, jhoyt, O1840 source:/pandabear/, dgriffin, O5090 source:/syndication/, jpu, O301 source:/advertiser-api/, astein, O610 source:/cortex-common/, warnold

Reviewed By: peiyu, O4932 source:/science/tests/scala/com/twitter/scalding_internal/, bpence, O1216 source:/macaw-relevance/, abeal, O5047 source:/servo/, O1001 source:/limiter/, O858 source:/finagle/finagle-mux/, koliver, jhoyt, O1840 source:/pandabear/, dgriffin, O5090 source:/syndication/, jpu, O301 source:/advertiser-api/, astein, O610 source:/cortex-common/, warnold

Subscribers: warnold, rmagen, astein, dgriffin, koliver, jhoyt, enovales, ee-phabricator-cron

Differential Revision: https://phabricator.twitter.biz/D15253"
kevinoliver,2017-01-06 01:30:23,https://api.github.com/repos/twitter/finagle/git/commits/a80f0c6c103abb6adb4068c732b7bddb66044fea,a80f0c6c103abb6adb4068c732b7bddb66044fea,"util-core: Begin replacing ConcatBuf API

Problem

`c.t.io.ConcatBuf` is exposed as a public API which allows users to
create them in ways we'd prefer they did not and it exposes more
implementation than we'd like. For example, users can create an empty
`ConcatBuf` which instead should be a `Buf.Empty`.

Solution

Deprecate `c.t.io.ConcatBuf` and introduce `Buf.apply` to construct
instances from multiple `Bufs`. This also introduces the `Buf.Composite`
trait which implements much of what was done in `ConcatBuf`. There is
a private implementation in `Buf.Composite.Impl` which optimizes `length`
and `isEmpty`.

Result

This allows us to evolve the implementation going forward as seen in
`Buf.Composite.Impl`.

RB_ID=899623"
elifdd,2017-01-05 23:46:11,https://api.github.com/repos/twitter/finagle/git/commits/8cdabcdffb6449a8ed9e6e3522c49155eaca25c4,8cdabcdffb6449a8ed9e6e3522c49155eaca25c4,"finagle-memcached: Configure defaults for FailureAccrualFactory and PendingRequestFilter

Problem / Solution

FailureAccrualFactory:
Memcached traffic is usually generated by large number of client instances. By default, each memcached client maintains multiple connections to every backend which splits the per client rps between each connection. Thus, even though overall rps from a service is high, per connection rps is a lot lower. *(per_conn_rps = total_rps/(number_of_clients\*number_of_backends\*number_of_conn_per_client)*
Memcached backends do not tend to show transient errors that one would expect on JVM based services since there is no GC time involved. Most of the time an error returning cache backend does not recover and should be removed from the serverset. Clients should backoff early and long enough to let a failing backend removed from the cache ring.
Therefore, simply looking at a smaller number of consecutive failures we can safely mark an endpoint dead.

PendingRequestFilter:
There is not a limit on how many requests can stay pending in the pipeline. This can become an issue creating memory pressure on the clients. We are setting a default pipeline limit.

RB_ID=891772"
kevinoliver,2017-01-05 23:12:58,https://api.github.com/repos/twitter/finagle/git/commits/1df445d7905a2de68ff1f73caaf560cc109c1979,1df445d7905a2de68ff1f73caaf560cc109c1979,"finagle-core: Slim down MethodBuilderRetry APIs

Problem

`MethodBuilderRetry` has a few too many ways to accomplish the same
thing.

Solution

Get an early start on its 2017 New Years resolutions to slim down.

RB_ID=900885"
mosesn,2017-01-05 18:26:03,https://api.github.com/repos/twitter/finagle/git/commits/e56ff3f5ea6c05cd9de8821193d98f378e29ac6d,e56ff3f5ea6c05cd9de8821193d98f378e29ac6d,"util,scrooge,ostrich,twitter-server: More 2.12

Problem

We're inconsistent about which scala version is the default.  In finagle and
TwitterServer we use 2.12.1, but elsewhere we use 2.11.8.

Solution

Move everything to 2.12

RB_ID=900809"
bryce-anderson,2017-01-05 17:57:07,https://api.github.com/repos/twitter/finagle/git/commits/c1f8fc19a0db6caa613991ddf546ac7f955d4885,c1f8fc19a0db6caa613991ddf546ac7f955d4885,"finagle-http: remove BadRequest

Problem

The finagle-http pipeline convolutes the Request type with
codec error handling by making a sentinel type, BadRequest,
that must be explicitly managed in the dispatcher.

Solution

Push codec related errors down to the netty pipeline level
where the error originates.

RB_ID=898517"
kevinoliver,2017-01-04 21:58:37,https://api.github.com/repos/twitter/finagle/git/commits/d093ba4291c9769253737d8e3029384ed05ef560,d093ba4291c9769253737d8e3029384ed05ef560,"util-core: Standardize argument checking in Buf.write,slice

Problem

The implementations of `c.t.io.Buf.write` and `Buf.slice` had a bunch
of duplication along with a bunch of slight differences. Additionally,
some of implementations were using the 2-argument version of
`Predef.require` which allocates a `Function0`. And, implementations
did not always include the input argument that was invalid in the
failure message.

Solution

Factor out the logic into protected methods on `Buf` and then use
them.

Result

More consistent behavior.

RB_ID=899935"
bryce-anderson,2017-01-04 20:29:11,https://api.github.com/repos/twitter/finagle/git/commits/3490e86d2215d513741751309307214c78723504,3490e86d2215d513741751309307214c78723504,"finagle-core: More efficient Transport.map(..).write(..)

Problem / Solution

We make a lot of intermediates when doing a write on a mapped Transport
in order to capture errors in the returned Future which can be replaced
with a simple try/catch block.

RB_ID=899761"
bryce-anderson,2017-01-04 02:28:40,https://api.github.com/repos/twitter/finagle/git/commits/b9ea9d389310290b89d17c4033747b078d72fecf,b9ea9d389310290b89d17c4033747b078d72fecf,"finagle-http: Deprecate Response attached to Request

Problem

Having a Response field on the Request is a dangerous pattern because
the Response returned by the Service doesn't need to be the same as
that attached to the Request. However, many filters operate under this
assumption and do potentially dangerous things such as setting response
headers on the \`request.response\` which may end up unused.

Solution

Deprecate the response field in preparation for removal.

RB_ID=899983"
kevinoliver,2017-01-03 20:56:32,https://api.github.com/repos/twitter/finagle/git/commits/916cea5ce46ef9ea548ae313f06cee813fa75a72,916cea5ce46ef9ea548ae313f06cee813fa75a72,"finagle-toggle: Hash the inputs to ToggleMap Toggles

Problem

It is too easy for users to have inputs with poor distributions
into the `Toggles` created by a `ToggleMap` which can lead to
unexpectedly bad distributions of the fractional toggles.

Solution

Apply a murmur3 hash to the input to give a better distribution.

Result

This allows even poorly distributed values to be used as inputs
to these `Toggles`.

RB_ID=899195"
jcrossley,2017-01-03 18:41:34,https://api.github.com/repos/twitter/finagle/git/commits/85ac3df775fde9cc5551ff35632ab8492943c352,85ac3df775fde9cc5551ff35632ab8492943c352,"finagle/finagle-memcached: Deprecate non-pipelined creation methods and remove deprecations

Problem

`c.t.f.memcached.Client` can be used to create a non-pipelined client.
We are removing the non-pipelined client, so we want to remove these
facilities.

Solution

Remove the deprecated methods on `c.t.f.memcached.Client` and deprecate the
remaining methods.

RB_ID=899331"
mosesn,2016-12-29 21:22:08,https://api.github.com/repos/twitter/finagle/git/commits/3d53c0953471c3d6e9bd561ab2db3860fe34c657,3d53c0953471c3d6e9bd561ab2db3860fe34c657,"finagle-memcached: More microbenchmarking for key validation

Problem

We do four comparisons for key validation.

Solution

Get it down to one comparison for the normal case (valid printable chars only).

RB_ID=898820"
jcrossley,2016-12-22 16:17:35,https://api.github.com/repos/twitter/finagle/git/commits/12a70d9f14fe3f8e18f14014786e1b6d6de65941,12a70d9f14fe3f8e18f14014786e1b6d6de65941,"finagle/finagle-memcached: Remove deprecated `cluster` method on KetamaClientBuilder

Problem

The `cluster` method on KetamaClientBuilder is deprecated and we
want to remove it.

Solution

Remove the unused `cluster` method.

RB_ID=898365
TBR=true"
kevinoliver,2016-12-22 01:05:38,https://api.github.com/repos/twitter/finagle/git/commits/72cac55fecfd13daf00a4cfed4dad11b926baa8d,72cac55fecfd13daf00a4cfed4dad11b926baa8d,"finagle-core: Use ResponseClassifier for default MethodBuilder retry policy

Problem / Solution

`MethodBuilder` should have good default values and using the stack
client's `ResponseClassifier` fits the bill.

RB_ID=898620"
vkostyukov,2016-12-21 23:08:23,https://api.github.com/repos/twitter/finagle/git/commits/1671f20c6ac3638caee83fb11923dba205d70075,1671f20c6ac3638caee83fb11923dba205d70075,"finagle-redis: Switch transport to Netty 4

Problem / Solution

Introducing `finagle-redis` transport based on Netty 4.

RB_ID=895728"
vkostyukov,2016-12-21 20:53:37,https://api.github.com/repos/twitter/finagle/git/commits/0e34f9a2d1688c405affebb9460ad71babc337ad,0e34f9a2d1688c405affebb9460ad71babc337ad,"finagle-redis: Lift decoding/encoding onto a Transport level

Problem / Solution

This moves the decoding logic from the Netty pipeline into a Finagle
transport. At this point, `finagle-redis` pipeline represented by a
single handler turning Netty byte buffers into Finagle buffers
(i.e., `BufCodec`).

RB_ID=895705"
jcrossley,2016-12-21 13:01:05,https://api.github.com/repos/twitter/finagle/git/commits/4517c3ea1ee50f430430c6603a3d73b6da3933dc,4517c3ea1ee50f430430c6603a3d73b6da3933dc,"csl: Fix Finagle pushsite for 2.12

Change the ""2.11"" string to ""2.12"" because we publish 2.12
by default.

RB_ID=898937"
vkostyukov,2016-12-20 23:55:16,https://api.github.com/repos/twitter/finagle/git/commits/efc7415080e814ce040c7dcb66a83957317210ca,efc7415080e814ce040c7dcb66a83957317210ca,"finagle-core: Use updateIfEmpty to satisfy the response promise in pipelining dispatcher

Problem / Solution

Satisfying the response promise in pipelining dispatcher could be racy between
an underlying transport (`transport.read`) and the interrupt handler detecting a
stalled pipeline. Using `updateIfEmpty` makes the first party win, which is quite
accepted in this case. Note serial dispatcher is also using `udpateIfEmpty` by this
very reason.

RB_ID=898613"
jcrossley,2016-12-20 23:25:41,https://api.github.com/repos/twitter/finagle/git/commits/915588945a8043e41109f5863b412a7904d623a2,915588945a8043e41109f5863b412a7904d623a2,"finagle/finagle-memcached: Include Remote Info in FAF exceptions

Problem

The FailureAccrualFactoryException thrown in KetamaFailureAccrualFactory
doesn't have Remote Info attached.

Solution

Move ExceptionRemoteInfoFactory above FailureAccrualFactory so Remote
Info is added to FA exceptions.

RB_ID=898786"
jcrossley,2016-12-20 23:02:14,https://api.github.com/repos/twitter/finagle/git/commits/95eedf5f41f78414fae25d93cc8fae02eeb5a75d,95eedf5f41f78414fae25d93cc8fae02eeb5a75d,"Twitter-oss: Prepare OSS libraries for release

Problem

We want to release the next versions our of Twitter OSS libraries:
  - util -> 6.40.0
  - ostrich -> 9.24.0
  - scrooge -> 4.13.0
  - finagle -> 6.41.0
  - twitter-server -> 1.26.0
  - finatra -> 2.7.0

Solution

Prepare libraries for their next releases.

RB_ID=898872"
vkostyukov,2016-12-20 18:53:41,https://api.github.com/repos/twitter/finagle/git/commits/04f8d1aecdaa4aff8a827504b0b5518e21e0beb0,04f8d1aecdaa4aff8a827504b0b5518e21e0beb0,"finagle-redis: Decoding with Bufs

Problem / Solution

Decoding in `finagle-redis` should be Netty-agnostic and implemented
in terms of Twitter's `Buf`s.

Results

This is big PR that restructures most of the `finagle-redis` internals
as well as introduces some new concepts. As a bonus, it removes around
1000 lines of code that was never used.

Here is the summary of the changes.

**Naggati is dead**
Naggati codec is gone. The new `StageDecode` is inspired by Naggati
so it reuses a lot from the previous implementation, but it's less
powerful (not so generic) and simple enough to fit in less than a
hundred lines of code.

**Async decoding**
The decoding is now done asynchronously (see `NextStep.Accumualte`)
in the meaning is that if some parts of the array reply are missing
the decoder will still be able to decode (and buffer) it partially.
Previously, it has be returning ""need more data"" until the full response
is arrived.

**Further steps**
Decoding and framing are still represent a single step in the Netty
pipeline (although they are encoded in a separate, reusable concept).
For the sake of simplicity as well as reducing the diff size this RB
promotes a very simple (and less risky) approach and keeps everything
in the pipeline (as it was before). The next step is to figure if it
makes sense to move that out into `Transport` as well as bring the
Netty 4 implementation. The intention was to make this decision/discussion
(where the decoding should be done) explicit and prepare the ground for
any possible outcome.

RB_ID=894009"
jcrossley,2016-12-20 17:04:43,https://api.github.com/repos/twitter/finagle/git/commits/df2510fca25b8c64ca8581ec761ac5596f5312f4,df2510fca25b8c64ca8581ec761ac5596f5312f4,"finagle, twitter-server: cross-build for Scala 2.12

Problem

We'd like to publish a 2.12 version of Finagle and twitter-server.

Solution

Cross-build Finagle and Twitter-server for 2.11/2.12 and update dependencies.

RB_ID=889191"
taylorleese,2016-12-19 20:00:17,https://api.github.com/repos/twitter/finagle/git/commits/cb97c059c8f05e36f2f10fdbce7593c181ec86e6,cb97c059c8f05e36f2f10fdbce7593c181ec86e6,"Remove af and finatra groups

Problem / Solution

AF became part of CSL in late 2015.

Result

Update GROUPS and CONFIG.ini files from api/finatra to csl.

RB_ID=898161"
jcrossley,2016-12-19 14:43:09,https://api.github.com/repos/twitter/finagle/git/commits/086f3728fe7f3578425a4c3e8f790e943f09d1b8,086f3728fe7f3578425a4c3e8f790e943f09d1b8,"finagle/finagle-memcached: Test for adding and removing nodes

Problem

There is no test for the LoadBalancer behavior when adding
and removing memcache nodes.

Solution

Add a test that verifies redistributes and adds/removes/rebuilds/updates
in the LB when nodes are added and removed from the backend serverset.

RB_ID=897637"
jcrossley,2016-12-19 14:27:16,https://api.github.com/repos/twitter/finagle/git/commits/af4372686f9d6050222d5429c801c51610a8acd9,af4372686f9d6050222d5429c801c51610a8acd9,"finagle/doc: Add docs for Memcached metrics

Problem

We don't have docs for Memcached client metrics.

Solution

Document Memcached metrics.

RB_ID=898213"
jcrossley,2016-12-16 23:54:01,https://api.github.com/repos/twitter/finagle/git/commits/78380f2e84e5a60ebc6a107df25445d1a2207743,78380f2e84e5a60ebc6a107df25445d1a2207743,"finagle/finagle-core: More documentation in PendingRequestFilter and rejections counter

Problem

It's confusing for users when they have a pending request limit
configured, and the ""/pending"" stat does not suggest the client
is respecting this limit. It's also unclear what the difference
is between ""/pending"" and ""/dispatcher/..../pending""

Solution

Add docs to clarify what stats will show the effecs of PendingRequestFilter,
and add a counter for rejections above the limit.

RB_ID=898184"
kevinoliver,2016-12-16 23:03:11,https://api.github.com/repos/twitter/finagle/git/commits/eb402966853d5a5bc08c52f47ba21cd16a6775b1,eb402966853d5a5bc08c52f47ba21cd16a6775b1,"finagle-memcached: Improve perf of KetamaPartitionedClient.clientOf

Problem / Solution

`c.t.f.memcached.KetamaPartitionedClient.clientOf` is called
frequently and can be optimized by using `String.getBytes(String)`.

Result

Less CPU and allocations. JMH results:

Benchmark                                                    (len)  Mode  Cnt    Score     Error   Units
KeyHasherBenchmark.hashStringKetamaCharset                      50  avgt   10  919.872 ±  57.762   ns/op
KeyHasherBenchmark.hashStringKetamaCharset:·gc.alloc.rate.norm  50  avgt   10  697.112 ±   2.394    B/op
KeyHasherBenchmark.hashStringKetamaString                       50  avgt   10  885.978 ±  21.786   ns/op
KeyHasherBenchmark.hashStringKetamaString:·gc.alloc.rate.norm   50  avgt   10  608.002 ±   0.005    B/op

RB_ID=898234"
yufangong,2016-12-16 22:39:20,https://api.github.com/repos/twitter/finagle/git/commits/1cef1edb2bafc5f095623e93715adbfdaca6f3f6,1cef1edb2bafc5f095623e93715adbfdaca6f3f6,"finagle/core: Override FailureAccrual policy toString method

Problem

FailureAccrualPolicy's value is ""<function0>"" in Registry.

Solution

Override `() => FailureAccrualPolicy` toString method to provide more info.

RB_ID=896206"
kevinoliver,2016-12-16 22:18:24,https://api.github.com/repos/twitter/finagle/git/commits/b45c6fc31664f0d0ca774f7a5ab1facedf936aa0,b45c6fc31664f0d0ca774f7a5ab1facedf936aa0,"finagle-memcached: Improve perf of KeyValidation initialization

Problem / Solution

`c.t.f.memcached.protocol.KeyValidation.invalidByteIndex` is called
for most memcached commands that are created and it can be optimized
to run faster.

Result

Creating a `Get` command is 49% faster, JMH results:

Benchmark                                  Mode  Cnt    Score    Error   Units
KeyValidationBenchmark.createGetBaseline   avgt   10  200.736 ±  9.765   ns/op
KeyValidationBenchmark.createGetPatched    avgt   10  102.805 ±  5.473   ns/op

RB_ID=898271"
kevinoliver,2016-12-16 01:17:03,https://api.github.com/repos/twitter/finagle/git/commits/e7c6fe0e6b9601da2c78e6a17521c421c0651c41,e7c6fe0e6b9601da2c78e6a17521c421c0651c41,"finagle-core: Improve performance for 3 Tracers

Problem

Some services are running with 3 active tracers but we had only
optimized up to 2.

Solution

Introduce `BroadcastTracer.Three` and simplified
`Trace.isActivelyTracing`. Added property based tests to `TracerTest`
to increase coverage.

RB_ID=898114"
kevinoliver,2016-12-15 21:15:57,https://api.github.com/repos/twitter/finagle/git/commits/f743ba59e7615ce15682b044e2c868589ad196f8,f743ba59e7615ce15682b044e2c868589ad196f8,"finagle-netty4: Improve performance of ChannelStatsHandler

Problem / Solution

`c.t.f.netty4.channel.ChannelStatsHandler` uses `AtomicLongs` where
`LongAdders` are a better fit, as these values are written to more
frequently than they are read.

Result

In a perf report of a representative service,
`ChannelStatsHandler.channelRead` was 0.12% before the patch and no
longer shows up afterwards.

RB_ID=898008"
roanta,2016-12-14 21:46:35,https://api.github.com/repos/twitter/finagle/git/commits/899c5be2fe560be78d21bbb8cb7ae3169c1da711,899c5be2fe560be78d21bbb8cb7ae3169c1da711,"Problem / Solution

finagle-mdns is unnecessarily complex by having two implementations of mdns.
This patch unifies the announcer and resolvers on the platform independent jmdns
implementation. It also includes minor cleanup to modernize finagle-mdns with
some of our new conventions.

RB_ID=897917"
jcrossley,2016-12-14 15:02:15,https://api.github.com/repos/twitter/finagle/git/commits/c795305afad9af71e840160c35b7fbb9f8ea0d5a,c795305afad9af71e840160c35b7fbb9f8ea0d5a,"finagle-core: Introduce optional DeadlineFilter module

Problem

Some services would like to use DeadlineFilter where
appropriate. It is currently turned off and is only
collecting stats.

Solution

Remove DeadlineStatsFilter from the server stack. Introduce
DeadlineFilter module that can be interted into a stack.

RB_ID=895820"
kevinoliver,2016-12-13 18:53:17,https://api.github.com/repos/twitter/finagle/git/commits/c857d5d10720c61c73993a1aefc71568d7b4fc0f,c857d5d10720c61c73993a1aefc71568d7b4fc0f,"finagle-core: Speed up unit tests

Problem

The unit tests for finagle-core were taking a bit over a minute to run
on my laptop.

Solution

Ask for a new laptop and optimize the slowest of the tests.

Result

Still waiting on a new laptop but the tests now complete in 18 seconds.

RB_ID=897336"
roanta,2016-12-12 23:55:43,https://api.github.com/repos/twitter/finagle/git/commits/40de134f64240097799630c88d0aa630fba3559b,40de134f64240097799630c88d0aa630fba3559b,"finagle-netty4: do not cancel writes on interrupt

Problem

While migrating services to netty4, we have noticed that some services
run into strange issues (increased GC and failed health checks) when
cancelling writes. We suspect that the symptoms are a secondary effect
of the cancellation, but we haven't been able to find any probable cause.

Solution

We would like to divorce the rollout of netty 4 from write cancellations so
we revert the netty 4 `ChannelTransport` to have the same semantics as
netty 3 (i.e. no write cancellation).

RB_ID=896757"
kevinoliver,2016-12-12 20:38:30,https://api.github.com/repos/twitter/finagle/git/commits/a751bead1c769c5ae479574555df4d5b3a186237,a751bead1c769c5ae479574555df4d5b3a186237,"finagle-core: DefaultMonitor works harder to choose log level

Problem

`c.t.f.util.DefaultMonitor` has logic regarding the log level used by
treating `c.t.util.TimoutExceptions` and
`com.twitter.logging.HasLogLevel` differently. However, this mechanism
does not traverse the causes of the `Throwable` which can lead to
surprising behavior for chained exceptions.

Solution

Update the algorithm used to:

* Traverse the chain for any `c.t.u.TimoutException` exceptions, using
`Level.TRACE` if found.
* If not found, traverse the chain looking for a `HasLogLevel` cause,
using its `logLevel` if found.
* If not found, use `Level.WARNING`.

RB_ID=896695"
mosesn,2016-12-09 23:21:20,https://api.github.com/repos/twitter/finagle/git/commits/6247dc05f414a6262946e93a6fbcb06cadd45ada,6247dc05f414a6262946e93a6fbcb06cadd45ada,"finagle-core: Remove one of the Filter#andThen overloads

Problem

In scala 2.12, Service is a SAM, so Filter#andThen(Service) collides with Filter#andThen(Req => Future[Rep]).

Solution

Remove the Filter#andThen(Req => Future[Rep]) overload.

Result

We can support scala 2.12 in finagle.

RB_ID=896524
TBR=true
NO_USER_HOOK=1"
jcrossley,2016-12-09 20:59:51,https://api.github.com/repos/twitter/finagle/git/commits/150e5a4412c63835880a14bb4f341cbfb3320b37,150e5a4412c63835880a14bb4f341cbfb3320b37,"Revert ""finagle/finagle-memcached: Upgrade finagle-memcache from Group to Var[Addr]""

Problem

A service saw some issues when testing, bisected to this commit

Solution

Reverting for now while we investigate.

RB_ID=897073"
isabelmartin,2016-12-09 18:58:24,https://api.github.com/repos/twitter/finagle/git/commits/7ae8119d6f5935303bfd1d20e6ee8dae0cbe74e1,7ae8119d6f5935303bfd1d20e6ee8dae0cbe74e1,"finagle-kestrel: Use StackClient methods instead of ClientBuilder methods in MultiReader

Problem

We prefer to use StackClient methods instead of ClientBuilder ones when
available.

Solution

Change c.t.f.kestrel.MultiReader's ClientBulder methods to the StackClient
equivalents. Also deprecated codec method on c.t.f.kestrel.MultiReaderMemcache.

RB_ID=895989"
kevinoliver,2016-12-08 23:57:23,https://api.github.com/repos/twitter/finagle/git/commits/9335280aaa494f1a3b844ceec668d5a9317d3174,9335280aaa494f1a3b844ceec668d5a9317d3174,"finagle-core: Split up MethodBuilderTest into their respective modules

Problem / Solution

The tests for `MethodBuilder` are all in a single monolithic test
class. This splits them into their respective modules and leaves
`MethodBuilderTest` as the place for cross cutting tests.

RB_ID=896766"
mosesn,2016-12-08 04:17:12,https://api.github.com/repos/twitter/finagle/git/commits/ba8a0563e92006c74845e5c847d07fec3fcbb707,ba8a0563e92006c74845e5c847d07fec3fcbb707,"finagle-http: java friendly Http.client.configuredParams

Problem

We didn't finish the java compat job the first time.

Solution

Keep defining configuredParams until it makes sense in java.

RB_ID=895836"
vkostyukov,2016-12-08 01:54:11,https://api.github.com/repos/twitter/finagle/git/commits/ce9ebfdb137d1c5eb2b75a72ef9848084abb33db,ce9ebfdb137d1c5eb2b75a72ef9848084abb33db,"finagle-netty4: Thin the finagle.netty4 package object

Problem

`c.t.f.netty4` package object has grown recently and has become quite flaky when it
comes it its initialization. There are initialization-order dependencies that
aren't defined explicitly and may cause runtime exceptions.

Solution

Make `c.t.netty4` package object thinner and simpler.

1) Move `poolReceiveBuffers` into its own file
2) Move call to `exportNetty4Metrics` into Netty 4 transporter/listener constructors
3) Move inner `param` object (including the stack params) into their own package

RB_ID=896401"
dschobel,2016-12-08 01:37:35,https://api.github.com/repos/twitter/finagle/git/commits/740ef0b9795a6a62e4d430e3759d6bfcabbb1379,740ef0b9795a6a62e4d430e3759d6bfcabbb1379,"util-core: remove deprecated charset constants

Problem / Solution

c.t.io.Charset's constants have been deprecated for at least one
OSS release so it's time to remove them.

RB_ID=893542
TBR=true"
jcrossley,2016-12-08 00:53:05,https://api.github.com/repos/twitter/finagle/git/commits/b1f927c909cdd85a7cc360a0987c81ed35b1a261,b1f927c909cdd85a7cc360a0987c81ed35b1a261,"finagle-core: Remove deprecated ClientBuilder methods

Problem

Methods in c.t.f.ClientBuilder were deprecated because they were
not broadly applicable to clients. Now that a release has been done
with those deprecations, the methods can be removed.

Solution

Remove the methods.

RB_ID=893147
TBR=true"
kevinoliver,2016-12-07 19:11:51,https://api.github.com/repos/twitter/finagle/git/commits/bf0e9caf1ac1f32c2019b6659ca9ae14dd21e7fc,bf0e9caf1ac1f32c2019b6659ca9ae14dd21e7fc,"finagle-core: Improve logging levels used in DefaultMonitor

Problem

The logging level used in `c.t.f.util.DefaultMonitor` defaulted to
`FATAL` and for `HasLogLevel` exceptions it did not respect the level
if it was `INFO` or above. Both of these decisions were surprising to
end-users.

Solution

Always respect the level used in `HasLogLevel` and default to `WARNING`.

RB_ID=895983"
vkostyukov,2016-12-07 03:52:50,https://api.github.com/repos/twitter/finagle/git/commits/3f228b9e91c74729ad6e9a587a6eadfb180cb36f,3f228b9e91c74729ad6e9a587a6eadfb180cb36f,"finagle-netty4: Reject (by default) client initiated TLS/SSL session renegotiations

Problem / Solution

We want to provide a sane default and do the right thing out
of the box, by rejecting the client initiated TLS/SSL session
renegotiations. By doing that, we also preserve the behavior
of Finagle running Netty 3.

RB_ID=895871"
bryce-anderson,2016-12-07 00:53:20,https://api.github.com/repos/twitter/finagle/git/commits/05ca0ea965c535e8f21561cc74e16ae5efe7000c,05ca0ea965c535e8f21561cc74e16ae5efe7000c,"finagle-thrift: Deprecate ThriftClientFramedCodec{Factory}

Problem

ThriftClientFramedCodecFactory is netty3 specific and hinders migration
to netty4.

Solution

Migrate the last usage to the StackClient. This also completes the removal
of internal usages of ThriftClientFramedCodec{Factory} and we can now
deprecate them.

RB_ID=894709"
bryce-anderson,2016-12-07 00:15:35,https://api.github.com/repos/twitter/finagle/git/commits/29f2e92225c7b80fdec3c43de3cf3c2025887000,29f2e92225c7b80fdec3c43de3cf3c2025887000,"finagle-core: Add banderson as OWNER

Problem / Solution

I'm reasonably familiar with finagle-core so I'm adding myself
to the OWNERS file.

RB_ID=896189"
jcrossley,2016-12-06 18:32:26,https://api.github.com/repos/twitter/finagle/git/commits/785a78e80577a14ba9f4f4f3db3dd5fda74eef4c,785a78e80577a14ba9f4f4f3db3dd5fda74eef4c,"finagle/finagle-memcached: Upgrade finagle-memcache from Group to Var[Addr]

Problem

c.t.f.Group is deprecated. Memcached cache ring management uses the c.t.f.Group.

Solution

Replace c.t.f.Group with c.t.f.Var[Addr] in the Memcached internals.

RB_ID=892376"
kevinoliver,2016-12-06 02:26:24,https://api.github.com/repos/twitter/finagle/git/commits/a0cba0cac921a3457cc4038fef2de333b8106908,a0cba0cac921a3457cc4038fef2de333b8106908,"finagle-core: Audit exception logging levels

Problem

Some exceptions in finagle-core are ""expected"" behavior and should not
pollute the `DefaultMonitor` logs with noise.

Solution

Audit the exceptions and lower the log level where appropriate.

Result

The following exceptions are logged at debug level:

- CancelledRequestException
- TooManyWaitersException
- CancelledConnectionException
- FailedFastException

The singleton `Status.ClosedException` got `NoStackTrace` mixed into
it in order to avoid misleading stacktraces.

RB_ID=895702"
nhnFreespirit,2016-12-06 01:37:43,https://api.github.com/repos/twitter/finagle/git/commits/48fa8948432a5497484ec654f067df25abd18192,48fa8948432a5497484ec654f067df25abd18192,"Remove duplicated initializer in Http2CleartextServerInitializer

Problem:
Some duplicated code made it in with the Prior Knowledge
change.

Solution:
Remove duplicated code.

Result:
Less code to maintain.

RB_ID=895739"
roanta,2016-12-05 21:34:10,https://api.github.com/repos/twitter/finagle/git/commits/ef02ed5c10c75e82de568e538271c00a5e05f4af,ef02ed5c10c75e82de568e538271c00a5e05f4af,"finagle-mysql: remove reference to head of stream in StdCursorResult

Problem

The recommended usage for the cursor API in finagle-mysql
results in OOM for large streams because the internal objects
in finagle-mysql hold on to the head of the AsyncStream.

For example:

```
client.cursor(""..."")
 .apply(..., ...)(...)
 // the transformed promise here stores a reference to
 // the `StdCursorResult` which keeps a reference to the
 // the head of the stream as a lazy val.
 .flatMap(cursoredResult => cursoredResult.stream)
 .foreach { asyncStream => /* operate on elements of stream */ }
```

Solution

Make the `stream` call a def so it isn't a member field of a
`StdCursorResult` instance.

RB_ID=893499"
jcrossley,2016-12-05 19:18:04,https://api.github.com/repos/twitter/finagle/git/commits/078ce25399a3dbfdb3d6d9b539fe3753ea44952c,078ce25399a3dbfdb3d6d9b539fe3753ea44952c,"finagle/finagle-kestrel: Create MultiReaderThriftMux and migrate all usages of MultiReaderThrift

Problem

As part of the migration to ThriftMux, we want Kestrel's MultiReader to
use ThriftMux.

Solution

Create MultiReaderThriftMux and migrate all usages of MultiReaderThrift to
MultiReaderThriftMux.

RB_ID=894847"
ryanoneill,2016-12-03 02:42:00,https://api.github.com/repos/twitter/finagle/git/commits/18fcc22c053b1678f9feadaec627d04f829344fa,18fcc22c053b1678f9feadaec627d04f829344fa,"finagle-core: Introduce New Configuration Types for SSL/TLS

Problem

SSL/TLS code within Finagle for both Netty3 and Netty4 colocates
how an SSL/TLS engine is created with how it is configured.

Solution

Introduce new types which are to be used only for the configuration of
the SSL/TLS engine and are indifferent to how the engine is created.

RB_ID=890512"
kevinoliver,2016-12-02 21:03:01,https://api.github.com/repos/twitter/finagle/git/commits/abad8f99bc9a248aacc2651d3703572f8947d4ba,abad8f99bc9a248aacc2651d3703572f8947d4ba,"finagle-core: Compute a better logLevel for Failure

Problem

The `logLevel` used in `c.t.f.Failure` factory methods that take a
`Throwable` defaults to using `Level.WARNING`. This is not wrong per
se, but it loses fidelity when the `Throwable` is a
`c.t.logging.HasLogLevel`.

Solution

Compute a more accurate `Level` by traversing the exception chain
looking for `HasLogLevel` and using that when found. If not found, the
existing behavior of using `Level.WARNING` is kept.

RB_ID=894629"
nhnFreespirit,2016-12-02 19:44:09,https://api.github.com/repos/twitter/finagle/git/commits/b46a3f96002da7a7d50d197b8907d968fc4640ca,b46a3f96002da7a7d50d197b8907d968fc4640ca,"finagle-http2: handle prior knowledge simultaneously with 1.1 upgrade

Problem:
The current implementation of prior knowledge requires that you configure the
server to use prior knowledge exclusively.

Solution:
Add a handler before the Http codec that intercepts the first bytes off the wire
and compares with the fixed HTTP/2 client preface. If it matches a preface,
replace Http codec with an HTTP/2 codec, remove self and send a new client
preface down the pipeline. If the initial bytes do not match the preface, remove
self and send any consumed bytes down the pipeline.

Result:
We can now have a single cleartex server handle both Http 1.x, Http 1.1 to
HTTP/2 upgrades and prior knowledge HTTP/2 at the same time. This aligns better
with the HTTP/2 specs as I understand it.

RB_ID=874695"
vkostyukov,2016-12-01 21:58:25,https://api.github.com/repos/twitter/finagle/git/commits/4dfb0305e37dfbafaa4ef3d4fde7b5e0477fae43,4dfb0305e37dfbafaa4ef3d4fde7b5e0477fae43,"finagle-redis: Property-based tests for decoding Redis replies

Problem / Solution

Testing for decoding Redis replies is written directly in terms of
Netty codecs/channel buffers. We have to restructure those so our
new N4 implementation can be tested as well.

Property-based tests:

Testing is now done entirely with Scalacheck so it covers lots of
possible inputs (including deeply-nested array responses) quite
well and reduces the code size dramatically.

RB_ID=894524"
vkostyukov,2016-12-01 21:28:52,https://api.github.com/repos/twitter/finagle/git/commits/fc2a52a7630779a177698befda30842169766369,fc2a52a7630779a177698befda30842169766369,"finagle-core: Zero-copy BufReader.readAll

Problem / Solution

Since `Buf`s are immutable no need for making a slice (a copy of the
`Buf` object) in `BufReader.readAll`.

Note that most of the `Buf` implementations will figure out that
`slice(0, length)` is a special case and return `this`. Although, this
is not a consistent behaviour.

RB_ID=894479"
bryce-anderson,2016-12-01 19:25:17,https://api.github.com/repos/twitter/finagle/git/commits/2ef63c5c93d7704468f206b4ebd69c7b2724f3f4,2ef63c5c93d7704468f206b4ebd69c7b2724f3f4,"finagle-kestrel: Fix broken ThriftClientFramedCodec related doc

Problem / Solution

A previous commit changed the API in a way that rendered a doc
comment invalid. This commit fixes the doc comment.

RB_ID=894672"
bryce-anderson,2016-12-01 01:10:20,https://api.github.com/repos/twitter/finagle/git/commits/54491400a76e1f4bb865cea0f4e10922709588a7,54491400a76e1f4bb865cea0f4e10922709588a7,"finagle-kestrel: Migrate to StackClient

Problem

kestrel uses ThriftClientFramedCodec which is netty3 specific,
prohibiting the migration to netty4.

Solution

Migrate it to use the stack client for its protocol implementation.

RB_ID=894297"
jordanly,2016-12-01 00:37:48,https://api.github.com/repos/twitter/finagle/git/commits/40206eecd0efbf1ef543189416902e8e6fc64f2f,40206eecd0efbf1ef543189416902e8e6fc64f2f,"finagle-http: Fix SpnegoAuthenticator test failing due to missing realm

Problem / Solution

We create a KerberosPrincipal in SpnegoAuthenticatorTest so we can test the
validity of a ticket under that principal. KerberosPrincipal has a check to see
if a realm has been provided (an @SOMETHING appended to the end). If a realm is
not provided, the constructor will look on the machine running the test to see
if a default realm has been configured. Since CI does not have a default realm
configured, the test failed. We append a realm to the end of the name provided
to KerberosPrincipal in order to avoid this exception.

RB_ID=894514"
vkostyukov,2016-11-30 23:24:22,https://api.github.com/repos/twitter/finagle/git/commits/21d39c4fe0288512c31ac54ec3052c90201f0027,21d39c4fe0288512c31ac54ec3052c90201f0027,"finagle-redis: Remove Naggati's HTTP and Memcached implementations

Problem / Solution

There are HTTP and Memecached implemenations in terms of Naggati in `finagle-redis`
no one is using. Let's remove them.

RB_ID=894046"
jordanly,2016-11-30 22:08:35,https://api.github.com/repos/twitter/finagle/git/commits/83cf8a5277e6231a1601a68a570d145f5b37cbde,83cf8a5277e6231a1601a68a570d145f5b37cbde,"finagle-http: Fix race condition in SpnegoAuthenticator

Problem / Solution

c.t.f.http.SpnegoAuthenticator has a race condition when doing privileged
actions using a LoginContext's subject. When a TGT expires, it is possible for
a subject that is being used to be logged out by another thread. This will
destroy the credentials in the subject, causing a 'Failed to find any Kerberos
tgt' exception when it goes to do its privileged action. We expanded the lock
to cover the action done by a subject so the subject cannot be modified mid-
action.

RB_ID=893951"
kevinoliver,2016-11-30 02:01:26,https://api.github.com/repos/twitter/finagle/git/commits/1cbf63b50dcd17bbfd0e05f1017f2cca49b96463,1cbf63b50dcd17bbfd0e05f1017f2cca49b96463,"finagle-core: Remove allocations from Transport.cast

Problem / Solution

`c.t.f.transport.Transport.cast` creates two unnecessary function
closures per call. These can be easily avoided.

RB_ID=893618"
vkostyukov,2016-11-29 01:51:08,https://api.github.com/repos/twitter/finagle/git/commits/c5a6e2c3d4e19e3f5d5e357d87e0d728df79fdcd,c5a6e2c3d4e19e3f5d5e357d87e0d728df79fdcd,"source: Deprecate com.twitter.util.NonFatal

RB_ID=893628
TBR=true
NO_USER_HOOK=1"
jcrossley,2016-11-28 19:38:54,https://api.github.com/repos/twitter/finagle/git/commits/f9bf97624912959165ba26d4ca8839f2b66be0d4,f9bf97624912959165ba26d4ca8839f2b66be0d4,"finagle/finagle-http: Remove files duplicated in finagle-base-http

Problem

 /src/main/scala/com/twitter/finagle/http/codec/ChannelBufferManager.scala and
 /src/main/scala/com/twitter/finagle/http/param/params.scala are in both
 finagle-http and finagle-base-http. Because finagle-http depends on
 finagle-base-http, multiple identical classes were being loaded and clashing.

 Solution

 Remove those files from finagle-http.

RB_ID=893095"
mosesn,2016-11-24 04:24:58,https://api.github.com/repos/twitter/finagle/git/commits/59ab12ddc70b51bc765f7b56316bfda391db7a4a,59ab12ddc70b51bc765f7b56316bfda391db7a4a,"finagle-http2: Add protocol library to http/2 configuration

Problem

It's not that easy to tell if a client or server has been configured with http/2
or not.

Solution

Add it as a configuration parameter to http/2.

RB_ID=893013"
mosesn,2016-11-23 23:37:23,https://api.github.com/repos/twitter/finagle/git/commits/441c035c03b2719113966c09e27502867078c286,441c035c03b2719113966c09e27502867078c286,"finagle-core: Improved the type that params expose to java

Problem

The types inferred for some of these param defaults were not too good from
java's perspective.

Solution

Annotate the types so they don't look like Object anymore.

RB_ID=893268"
bryce-anderson,2016-11-23 03:38:51,https://api.github.com/repos/twitter/finagle/git/commits/58a1d673ae3c065d283b3213f0b65a881a9747ce,58a1d673ae3c065d283b3213f0b65a881a9747ce,"finagle-*: Use MurmurHash3 for Toggle inputs

Problem

We have been using the ServerInfo().id.hashCode for the input to the
Toggle which determines if the server will be pseudo-randomly chosen to
toggle on behavior. Unfortunately the String.hashCode function is tuned
for speed and not entropy, yielding sequential hash codes for sequential
string representations, which is often the case in practice.

Solution

Switch to the Murmur3 hashing function for the same ServerInfo().id
String to get better distribution of hash codes even for sequential
String inputs.

RB_ID=892851"
herberteuler,2016-11-22 23:58:30,https://api.github.com/repos/twitter/finagle/git/commits/f29c39cb686fc98b18b0449f854b44b9ed01a291,f29c39cb686fc98b18b0449f854b44b9ed01a291,"Make WorkerPool public (again)

Invoking `WorkerPool.rebuildSelectors` might be desired if the service load is not high in most of the time.  Making it public would be handy for such circumstances.

Signed-off-by: Jillian Crossley <jillianc@twitter.com>

RB_ID=892752"
jcrossley,2016-11-22 23:15:13,https://api.github.com/repos/twitter/finagle/git/commits/53cf698eb9b89e95c06f6b8d8dd0febc43f9142c,53cf698eb9b89e95c06f6b8d8dd0febc43f9142c,"Twitter-oss: Prepare OSS libraries for release

Problem

We want to release the next versions our of Twitter OSS libraries:
  - util -> 6.39.0
  - ostrich -> 9.23.0
  - scrooge -> 4.12.0
  - finagle -> 6.40.0
  - twitter-server -> 1.25.0
  - finatra -> 2.6.0

Solution

Prepare libraries for their next releases.

RB_ID=892743
TBR=true"
jordanly,2016-11-22 18:33:33,https://api.github.com/repos/twitter/finagle/git/commits/3758a46a54a5c942bb39b62e25a0f998bb12a7cb,3758a46a54a5c942bb39b62e25a0f998bb12a7cb,"finagle-http: Login once per Kerberos expiration in SpnegoAuthenticator

Problem

The current SpnegoAuthenticator ClientFilter/ServerFilter code creates a new
LoginContext and logs in for each request it processes. The reason the
ClientFilter/ServerFilter needs to log in is because it needs to get a TGT from
the KDC in order to authenticate to the TGS.
However, it does not need to log in every request as the TGT can persist for a
duration specified by the KDC administrator. This means there are redundant
calls going to the KDC for each request it filters.

Additionally, the ClientFilter does not run 'initSecContext' using the logged in
Subject's privileges. This means that the session ticket it receives in the
initial call will not be stored. This also results in redundant calls going to
the KDC for each request it filters.

Solution

In the load() method in 'trait JAAS', only create a context and call login()
after initialization and after expiration periods.

In the init() method in 'JAASClientSource', initContextAction using the current
Subject's privileges so the session ticket can be stored in its private
credentials.

Result

For each ServerFilter filter, there will be 1 fewer request going to the KDC
(except on initializaion and TGT expiration). For each ClientFilter filter,
there will be 2 fewer requests going to the KDC (except on initialization and
TGT expiration).

RB_ID=888228"
jcrossley,2016-11-22 18:16:06,https://api.github.com/repos/twitter/finagle/git/commits/d6ee988adf0f659a4cd2968242e47ce42fdd7813,d6ee988adf0f659a4cd2968242e47ce42fdd7813,"finagle-core: Make `transform` in c.t.f.Stack protected

Problem

The `transform` function in c.t.f.Stack is too powerful for users and
should be unnecessary.

Solution

Make it protected.

RB_ID=892359"
mosesn,2016-11-22 07:01:43,https://api.github.com/repos/twitter/finagle/git/commits/23c3613648915f35f7f650da48cb3da8b647586a,23c3613648915f35f7f650da48cb3da8b647586a,"finagle-core: Remove old deadline histograms

Problem

We have histograms lying around that we used in making Deadline originally, but
that we don't need for understanding whether or not we should turn Deadline on
again in the future.

Solution

Remove them, or make them easier to parse and take advantage of the histogram
optimization.

Result

TimeoutFilter no longer needs a StatsReceiver!  We're exporting fewer metrics!

RB_ID=891380"
vkostyukov,2016-11-22 03:47:19,https://api.github.com/repos/twitter/finagle/git/commits/4118e9efe4976ee6aefa3bd4966e180fbed0acec,4118e9efe4976ee6aefa3bd4966e180fbed0acec,"Pin FinagleProxy to Netty 3

Problem / Solution

Some TLS/SSL params are not wired in correctly in N4. To be safe
and unblock adoption, we pin TLS/SSL users to N3 for now.

RB_ID=892425"
dschobel,2016-11-21 19:55:06,https://api.github.com/repos/twitter/finagle/git/commits/31c19e9f5f823dc4f0e7ae4181aa18ee9e43dfab,31c19e9f5f823dc4f0e7ae4181aa18ee9e43dfab,"finagle-netty4: rethrow bind failures

Problem

Bind failures are bad news, we shouldn't swallow them.

Solution

Don't swallow them.

RB_ID=892217"
dschobel,2016-11-21 19:08:10,https://api.github.com/repos/twitter/finagle/git/commits/6b28e64793c2ec0bd766a7c0c98d487a48a57b2b,6b28e64793c2ec0bd766a7c0c98d487a48a57b2b,"finagle-core: remove unneeded synchronization in PipeliningDispatcher

Problem

We have additional synchronization of pipelining dispatches beyond
what's needed since GenSerialClientDispatcher already guarantees
serialization of dispatches.

Solution

Rm it.

RB_ID=891591"
yufangong,2016-11-18 09:02:10,https://api.github.com/repos/twitter/finagle/git/commits/53038ec92aa3e88673e74b310daf9f0ac0405d3b,53038ec92aa3e88673e74b310daf9f0ac0405d3b,"finagle-base-http: Provide JSON patch ContentType

Problem/Solution:

Provide a ""JsonPatch"" type that could parse JSON Patch request body.  JSON Patch
is a format for describing changes to JSON document. It can be used to avoid
sending a whole document when only part has changed. JSON Patch is specified in
RFC_6902.

JSON Patch Operations and specs:
[
  { ""op"": ""test"", ""path"": ""/a/b/c"", ""value"": ""foo"" },
  { ""op"": ""remove"", ""path"": ""/a/b/c"" },
  { ""op"": ""add"", ""path"": ""/a/b/c"", ""value"": [ ""foo"", ""bar"" ] },
  { ""op"": ""replace"", ""path"": ""/a/b/c"", ""value"": 42 },
  { ""op"": ""move"", ""from"": ""/a/b/c"", ""path"": ""/a/b/d"" },
  { ""op"": ""copy"", ""from"": ""/a/b/d"", ""path"": ""/a/b/e"" }
]

RB_ID=891776"
vkostyukov,2016-11-18 04:49:51,https://api.github.com/repos/twitter/finagle/git/commits/ee7ac291ff48e0cf3e40e907483e778477a13bc5,ee7ac291ff48e0cf3e40e907483e778477a13bc5,"finagle-core: Wire in TlsConfig in ServerBuilder

Problem / Solution

There is a mismatch in how TLS/SSL params (N3 and N4) are wired in
between `ServerBuilder` and `with`-API. This commit fixes this.

RB_ID=891573"
kevinoliver,2016-11-18 00:48:52,https://api.github.com/repos/twitter/finagle/git/commits/3966721c6a7da1742408d6c6755609e56461dbdf,3966721c6a7da1742408d6c6755609e56461dbdf,"finagle-memcached: Remove usage of deprecated cas

Problem / Solution

`cas` has been deprecated and superceded by `checkAndSet`.
This commit makes it easier to transition to the new API
and updates code accordingly.

RB_ID=891628"
kevinoliver,2016-11-17 23:32:03,https://api.github.com/repos/twitter/finagle/git/commits/3f0e99361ea949d2b6046525943ea5ef7a47de74,3f0e99361ea949d2b6046525943ea5ef7a47de74,"finagle-core: Break MethodBuilder into modules

Problem

We want users to understand the broad categories of configuration in
`MethodBuilder`.

Solution

Separate out the code into separate modules. Currently this is timeouts
and retries.

RB_ID=891255"
isabelmartin,2016-11-17 23:26:28,https://api.github.com/repos/twitter/finagle/git/commits/241ae5eb9f83a04b55a88a3285dc4a384875f92c,241ae5eb9f83a04b55a88a3285dc4a384875f92c,"twitter-server, finagle-http: Remove special casing in IndexView and add Method field to RouteIndex

Problem

IndexView has special casing for the ""Abort Server"" and ""Quit Server"" admin
endpoints. This is because they are the only two POST methods.

Solution

Add a Method field to the c.t.finagle.http.RouteIndex,
c.t.server.AdminHttpServer.Route, and c.t.server.IndexView.Link case classes
then base the special casing on that, not the endpoint name.

RB_ID=891127"
kevinoliver,2016-11-17 19:56:34,https://api.github.com/repos/twitter/finagle/git/commits/e04a989bb17bad6dc81fae0ff0924293227fe6b1,e04a989bb17bad6dc81fae0ff0924293227fe6b1,"finagle-thrift: Remove deprecated methods from ThriftRichClient

Problem

Removed deprecated `ThriftRichClient.newServiceIface` methods which
did not take a label. Removed deprecated `ThriftRichClient.newIface`
methods based on `Groups`

Solution

For `newServiceIface`, use the versions that take a `String` label.
For `newIface`, use the versions that a `dest` or `Name`.

RB_ID=891004
TBR=true"
vkostyukov,2016-11-17 18:16:16,https://api.github.com/repos/twitter/finagle/git/commits/437ac5a83f49a5e02661c1b5ade75754928683c0,437ac5a83f49a5e02661c1b5ade75754928683c0,"finagle: Remove Netty3ListenerTLSConfig

Problem / Solution

Finagle's `Netty3ListenerTLSConfig` is redundant and could easily be
replaced with the with-API (or existing stack params). Removing this
makes it easier (and safer) for us to migrate to Netty 4.

RB_ID=891270"
vkostyukov,2016-11-17 00:47:50,https://api.github.com/repos/twitter/finagle/git/commits/9c4677c8578d634ecd8bb45395392369db6539b0,9c4677c8578d634ecd8bb45395392369db6539b0,"finagle: Remove Netty3TransporterTLSConfig

Problem / Solution

Finagle's `Netty3TransporterTLSConfig` is redundant and could easily be
replaced with the with-API (or existing stack params). Removing this
makes it easier (and safier) for us to migrate to Netty 4.

RB_ID=890935"
kevinoliver,2016-11-16 21:01:36,https://api.github.com/repos/twitter/finagle/git/commits/fac5d128adc594903bc39aa6ad72c66398088578,fac5d128adc594903bc39aa6ad72c66398088578,"finagle-memcached: Improve client documentation

Problem

The primary API for memcached clients is a bit underdocumented.

Solution

Fill in the gaps.

RB_ID=890822"
kevinoliver,2016-11-16 06:07:17,https://api.github.com/repos/twitter/finagle/git/commits/17d2399999a60911eddc798b2ffe9c3cff5eaeaa,17d2399999a60911eddc798b2ffe9c3cff5eaeaa,"finagle-core: MethodBuilder, version 1

Problem

Users want the ability to customize aspects of a client on a per
method, or call, basis without having to create separate Finagle
clients for each.

Solution

Introduce `c.t.f.client.MethodBuilder` as an API for doing so.

Result

While this commit is only a partial step towards the final goals, this
allows clients to have dynamic total timeouts and application level
retry policies.

While the current version is experimental and `private[finagle]`, my
hope is that it will progress quickly out of this state.

RB_ID=889738"
vkostyukov,2016-11-16 05:08:39,https://api.github.com/repos/twitter/finagle/git/commits/8d016aeb48d3dc138831c53c8590f680aaa5fd03,8d016aeb48d3dc138831c53c8590f680aaa5fd03,"finagle-core: Wire in N4 SSL/TLS params in ClientBuilder

Problem / Solution

There is a mismatch in how TLS/SSL params (N3 and N4) are wired in
between `ClientBuilder` and `with`-API. This commit fixes this.

RB_ID=890878"
dschobel,2016-11-16 03:49:47,https://api.github.com/repos/twitter/finagle/git/commits/9dbf8be6c7d2363a48cd81458cd7df7a6b7384a5,9dbf8be6c7d2363a48cd81458cd7df7a6b7384a5,"finagle-*: evaluate netty4 toggle at stack construction time

Problem

Most netty4 finagle protocols evaluate the n4 toggle at session
initialization time. This has led to confusion since sessions
typically are long lived and so operators might not see the runtime
changes they expect.

Solution

Evaluate the netty4 toggle once at stack construction time which
effectively ties the toggle evaluation to the life of the VM.

RB_ID=890654"
kevinoliver,2016-11-15 23:47:26,https://api.github.com/repos/twitter/finagle/git/commits/1e8da890c5b95110a3ad33237fc4106e303cd6bd,1e8da890c5b95110a3ad33237fc4106e303cd6bd,"finagle-docs: Add FAQ entry for ResponseClassificationSyntheticException

Problem / Solution

ResponseClassificationSyntheticException is ""unusual"" and as such we
want it to be easier for users to find out what it indicates.

RB_ID=890509"
yufangong,2016-11-15 21:28:42,https://api.github.com/repos/twitter/finagle/git/commits/62adb171a8923376cbc80fe3d8a6ea241c6e8e5e,62adb171a8923376cbc80fe3d8a6ea241c6e8e5e,"Problem:

A few finagle tests using Funsuite with GeneratorDrivenPropertyChecks are not
doing the test properly.

Solution:

Fix it by adding assert method. Did global search of
GeneratorDrivenPropertyChecks in util and finagle

Result:

In ""c.t.finagle.context.DeadlineTest"", ""Deadline marshalling"" test failed in the
special case Deadline(sometime, Time.Top), because the
""c.t.fingale.context.Deadline"" marshal method will treat Time.Top as
Long.MaxValue

For marshal method, we should not pass Time.Top, Time.Bottom or Time.Undefined
to it.

RB_ID=889583"
bryce-anderson,2016-11-15 20:55:33,https://api.github.com/repos/twitter/finagle/git/commits/65fa2e1901960009f0ecc42a9d82b171293490a6,65fa2e1901960009f0ecc42a9d82b171293490a6,"finagle-netty4: Revert netty4 write behavior to mimic netty3

Problem

The Netty4 ChannelTransport deviated in the behavior of our netty3
implementation by examining the channels write buffer and dropping
writes if it found the to be 'unwritable'. This change in behavior was
not accounted for in the protocol implementations so it may cause subtle
problems.

Solution

Revert to the netty3 behavior while we consider mechanisms for write
channel backpressure.

RB_ID=890646"
nhnFreespirit,2016-11-14 19:40:45,https://api.github.com/repos/twitter/finagle/git/commits/53e988593c503760861ee79d8c32875d421e9ee7,53e988593c503760861ee79d8c32875d421e9ee7,"Extract util method for creating Http2Settings

Problem:
A utility method for converting Params into an Http2Settings object was added to
Http2Transporter to allow specifying intial settings for the client. Pending
changes in Netty we want similar functionality when creating servers.

Solution:
Move util method into new Settings object  to make it generically useful.

Result:
Util method can now be used from other places.

RB_ID=888849"
bryce-anderson,2016-11-14 19:34:35,https://api.github.com/repos/twitter/finagle/git/commits/a4ffcc341f4fa7f7acb7824adcdd8fecd3a73d65,a4ffcc341f4fa7f7acb7824adcdd8fecd3a73d65,"finagle-netty4: Make handler names uniform camelCase

Problem

The finagle-netty4 project is using ""space separated"" names for channel
handlers while the remainder of the finagle library (with the exception
of a few in finagle-mux, also addressed) are using lowerCamelCase.

Solution

Use lowerCamelCase in finagle-netty4 and finagle-mux.

RB_ID=887913"
mosesn,2016-11-14 19:07:49,https://api.github.com/repos/twitter/finagle/git/commits/e89516690452de5bf3bf33168f7ebe690473840c,e89516690452de5bf3bf33168f7ebe690473840c,"finagle: Futures breakdown for developers

Problem

We have good docs for end-users, but none for people who might want to
contribute to finagle.  This is the first in a series of attempts to make this
better when onboarding to the finagle project.

The Futures implementation is difficult to read because it has a big surface
area and it's optimized to death.  We've historically explained it via oral
tradition, but it's time to do better.

Solution

Explain the history of Twitter futures, how they're different from the scala and
java Future implementations, and why that works well for us.

RB_ID=889272"
bryce-anderson,2016-11-14 17:34:00,https://api.github.com/repos/twitter/finagle/git/commits/f962564c79ed7d3628acea4ad09e77d298fe9869,f962564c79ed7d3628acea4ad09e77d298fe9869,"Fix (some more) deprecated usage of ThriftClientFramedCodec

Problem

Finagle is moving away from `Codec`, which is Netty 3 specific.

Solution

Switch (some more) code to use the recommended `stack` client code.

RB_ID=889797
TBR=true"
jcrossley,2016-11-12 02:49:55,https://api.github.com/repos/twitter/finagle/git/commits/76865efdf2be9a02e048d5b3034e047b9c0bd273,76865efdf2be9a02e048d5b3034e047b9c0bd273,"csl libs: Upgrade scalatest to scalatest 3.0.0 for sbt build

Problem

We want our OSS/internal builds to be on the same scalatest version.

Solution

Bump the version and fix tests and dependencies.

RB_ID=889527
TBR=true"
kevinoliver,2016-11-12 00:12:45,https://api.github.com/repos/twitter/finagle/git/commits/50331a5afa3361f6a9cc1afad79e61089aa84853,50331a5afa3361f6a9cc1afad79e61089aa84853,"finagle-core: RetryFilter should not retry any non-retryable failures

Problem

`RetryFilter` intends to not retry on any `Failure` that is flagged as
being non-retryable, but it only applied on the first response value.

Solution

Use `RetryPolicy.filterEach` to get the correct behavior.

RB_ID=889779"
cacoco,2016-11-11 21:24:13,https://api.github.com/repos/twitter/finagle/git/commits/cec0134af0dd5f585a459525faf46e19be01e673,cec0134af0dd5f585a459525faf46e19be01e673,"util, finagle, twitter-server, finatra, ostrich - Upgrade to Jackson 2.8.4

Problem/Solution

Upgrade Jackson dependencies to version 2.8.4

RB_ID=889884"
vkostyukov,2016-11-11 21:18:24,https://api.github.com/repos/twitter/finagle/git/commits/9d49f66738b5ca479600bccb7f9a0cd64a3e0e5e,9d49f66738b5ca479600bccb7f9a0cd64a3e0e5e,"finagle-core: Add BufReader.remainingUntil

Problem / Solution

Decoding of text-based, character-delimited protocols (eg: Redis, Memcached)
is dramatically simplified when an API for locating the firs occurrence of the
given byte is present. (both N3 and N4 provide similar APIs).

This commit extends `BufReader` with a new method `remainingUntil` that does
this very trick and simplifies the decoding of CLRF-separated lines.

RB_ID=889344"
bryce-anderson,2016-11-10 18:24:00,https://api.github.com/repos/twitter/finagle/git/commits/b6da4c0ae99c1b3931c44c03193c486e043bb653,b6da4c0ae99c1b3931c44c03193c486e043bb653,"finagle-http2: Disable flaky test pending netty fix

Problem

There is another flaky test due to the same netty bug of hanging up on
the client without giving notice, resulting in a race condition where
the client may try to reuse the connection before detecting the close
event.

Solution

Disable the test pending the release of netty 4.1 which contains a fix.

RB_ID=889509"
isabelmartin,2016-11-09 23:12:15,https://api.github.com/repos/twitter/finagle/git/commits/73e275b087a4459a2aac48a13ceb9bf025d2d5f5,73e275b087a4459a2aac48a13ceb9bf025d2d5f5,"twitter-server: Add ability to specify admin interface UI grouping, alias, and path for admin handlers

Problem

Some UI elements in the TwitterServer admin page are named after endpoints and
others have a more user-friendly name. In addition, it is currently not possible
for users to classify which category their admin handlers fall into.

Solution

Allow users to specify a group for their admin handler in addition to just the
pattern, as well as a user-friendly alias, and the path if necessary by adding
the Route and RouteIndex case classes.

RB_ID=886829"
jcrossley,2016-11-09 20:25:42,https://api.github.com/repos/twitter/finagle/git/commits/85bcc528e1984eedc8ce556ed5e8ca1557f8430c,85bcc528e1984eedc8ce556ed5e8ca1557f8430c,"Upgrade source to scalatest-3

In preparation for Scala 2.12, upgrade to the new version of scalatest,
and fix all related tests.

RB_ID=888813
TBR=true
NO_USER_HOOK=1"
vkostyukov,2016-11-09 18:57:32,https://api.github.com/repos/twitter/finagle/git/commits/7f7fa26c093671731d10f44c4cec33ca93fbcb05,7f7fa26c093671731d10f44c4cec33ca93fbcb05,"finagle-redis: Remove unused Command Parsers

Problem / Solution

`finagle-redis` still has some unused code we can safely delete. This
time we remove command parsers that are no longer used (since the server-side
support has been removed previously).

RB_ID=888865"
mosesn,2016-11-08 21:43:21,https://api.github.com/repos/twitter/finagle/git/commits/cd4903d1e51a04e7b6ba175e48a23095cc015d38,cd4903d1e51a04e7b6ba175e48a23095cc015d38,"finagle-core: Mark ConcurrentRingBuffer private

Problem

finagle has a big surface area, let's shrink it whenever we find a
not useful API.

Solution

Remove an infrequently used public-facing API.

RB_ID=888801"
cacoco,2016-11-08 21:14:43,https://api.github.com/repos/twitter/finagle/git/commits/2ae7cdd6124d5d10c9bcbf7c68a0ef2784abf968,2ae7cdd6124d5d10c9bcbf7c68a0ef2784abf968,"finagle-thrift: Remove unused silly-thrift test dependency

Problem/Solution

The silly#silly-thrift dependency is defined as a test
dependency for finagle-thrift. This dependency is only
available on maven.twttr.com and is not used.

Let's remove it.

RB_ID=888860"
kevinoliver,2016-11-08 19:25:49,https://api.github.com/repos/twitter/finagle/git/commits/c14037a65c1a3b1e53544ad6ecb5a7ba67dc1511,c14037a65c1a3b1e53544ad6ecb5a7ba67dc1511,"finagle-core: Performance improvements to Refcounted{Service,Factory}

Problem / Solution

`RefcountedService` and `RefcountedFactory` have an easy opportunity
for removing allocations on the fast path by lifting the closure into
a member variable.

RB_ID=888561"
fsareshwala,2016-11-08 02:49:01,https://api.github.com/repos/twitter/finagle/git/commits/e09b5434fe9f9de6c23e7c7ca6a046873ccbc191,e09b5434fe9f9de6c23e7c7ca6a046873ccbc191,"finagle: update WireTracingFilter's role to be correct

RB_ID=884373"
bryce-anderson,2016-11-07 20:04:49,https://api.github.com/repos/twitter/finagle/git/commits/c83ea6d3b9228e653e8bd3ade9345f8c946fedfd,c83ea6d3b9228e653e8bd3ade9345f8c946fedfd,"finagle-http2: Disable flaky test

Problem

The test 'return 413s for chunked requests which stream too much data'
is flaky due to a race condition where the server closes the connection
without notice and the client may attempt to reuse it.

Solution

Disable the test until the fix for the netty library is released.

RB_ID=888396"
dschobel,2016-11-07 19:39:08,https://api.github.com/repos/twitter/finagle/git/commits/b8bcc358c4a322095043dd41ee4ab10b9667cd76,b8bcc358c4a322095043dd41ee4ab10b9667cd76,"finagle-netty4: use default unsafe buffers

Problem / Solution

An invariant of finagle-netty4 is that protocols must manage the
lifecycle of inbound direct bytebuffers, this frees us from having
to use the Cleaner based buffer implementation. Instead we can use
the default unsafe byte buffer implementation.

Result

1. We're once again using netty's default configuration and unsafe
buffer impl which hopefully translates to fewer regressions going
forwards.

2. If we fail to release a direct buffer it will be forever leaked so
we lose the Cleaner safety net.

3. Theoretically a performance gain from no longer allocating a
Cleaner instance per buffer.

RB_ID=887219"
wisechengyi,2016-11-05 21:52:07,https://api.github.com/repos/twitter/finagle/git/commits/ce9af41708d1965dc86dc9153c61c6c4d176409b,ce9af41708d1965dc86dc9153c61c6c4d176409b,"Remove Target “default” name in BUILD files - batch 2

RB_ID=888270
NO_USER_HOOK=1"
vkostyukov,2016-11-04 23:27:36,https://api.github.com/repos/twitter/finagle/git/commits/6b9bdafe6e27ece62243b1b77ec0dade9a4b0a26,6b9bdafe6e27ece62243b1b77ec0dade9a4b0a26,"finagle-http: Introduce the UseNetty4 toggle

Problem / Solution

Introducing the `com.twitter.finagle.http.UseNetty4` toggle that
switches HTTP transport implementation from Netty 3 to Netty 4.

RB_ID=887755"
bryce-anderson,2016-11-04 20:57:12,https://api.github.com/repos/twitter/finagle/git/commits/66c8d94dcca6a1ebbe68490dde35720cdf63ec30,66c8d94dcca6a1ebbe68490dde35720cdf63ec30,"finagle-thrift: Bump gem verison number

Problem/Solution

If we are going to cut a release, we need to bump the version number.

RB_ID=887670"
kevinoliver,2016-11-04 19:05:43,https://api.github.com/repos/twitter/finagle/git/commits/5012595b68a532735b4c994434cb6d3ebac2c58a,5012595b68a532735b4c994434cb6d3ebac2c58a,"finagle-http: Improve performance of TraceInfo

Problem

`c.t.f.http.TraceInfo` has some easy opportunities for optimizimation.

Solution

Do our basics:

* Convert `Option.map` into `match`
* Avoid `foreach` when manual iteration will do
* Use `try-catch` instead of a `Try`

Result

Less allocations in common code.

This also moves the code off of the internally exposed Netty3 APIs
onto our public APIs.

Also removes some `private[finagle]` code that was only used in tests.

RB_ID=887684"
kevinoliver,2016-11-03 22:19:31,https://api.github.com/repos/twitter/finagle/git/commits/74360a98177e87d62b46c3de309540e90376fd0a,74360a98177e87d62b46c3de309540e90376fd0a,"finagle-core: Introduce a module for dynamic client timeouts

Problem

There are cases where clients need the ability to specify a timeout
dynamically.

Solution

Introduce `c.t.f.client.DynamicTimeout` which provides `Stack` modules
and helper methods to enable this behavior in Finagle's clients.

Result

Dynamic timeouts are now possible. End-to-end examples are provided
in `c.t.f.integration.DynamicTimeoutTest`.

RB_ID=885005"
vkostyukov,2016-11-03 19:53:02,https://api.github.com/repos/twitter/finagle/git/commits/9a1de771dce5525347584715b9a82dbd7aedb668,9a1de771dce5525347584715b9a82dbd7aedb668,"finagle: Extract base HTTP pieces into finagle-base-http

Problem / Solution

While `finagle-http` implementation based on Netty 4 is nearly complete,
there is no way to smoothly switch existing clients/servers to a new transport
given that it's defined in a separate project/traget.

This change introduces a new finagle module `finagle-base-http` that provides
a common ground for both implementations (N3 and N4), which `finagle-http` now
depends on. This allows us to toggle between different transports w/o affecting
the caller site (users code).

Note: This RB is our first step towards distinct transport implementations for
HTTP. The essential goal is to make N3 and N4 modules as thin as possible and
make `finagle-base-http` Netty-free. This RB is not aiming to achieve that yet,
but makes a decent progress in that direction while minimizing the diff as much
as possible.

RB_ID=884614"
francknouama,2016-11-03 16:26:40,https://api.github.com/repos/twitter/finagle/git/commits/e56f2cab040b861c62327baabac96713df8c88ba,e56f2cab040b861c62327baabac96713df8c88ba,"Adding EnerNOC Inc to the list of adopters

Signed-off-by: Bryce Anderson <banderson@twitter.com>

RB_ID=887536"
dschobel,2016-11-03 16:10:15,https://api.github.com/repos/twitter/finagle/git/commits/9c7c801f3b6bd0f507b51ccf9c6ef461e37d1b0f,9c7c801f3b6bd0f507b51ccf9c6ef461e37d1b0f,"[finagle|util]-benchmark: fixup sbt invocation docs for jmh

Problem / Solution

fix sbt invocation docs for jmh benchmarks.

RB_ID=887525"
mosesn,2016-11-03 15:06:13,https://api.github.com/repos/twitter/finagle/git/commits/89230e78e33b9368be5df8b29c2ae9b6c6ad3201,89230e78e33b9368be5df8b29c2ae9b6c6ad3201,"finagle-http2: Get streaming working pretty dang well.

Problem

Streaming is still sort of crummy in http/2

Solution

Add the generic StreamingTest so we can be confident that it works for http/2.
Also fix a ton of generic streaming bugs.

One notable change here is that we have a read loop now that reads as fast as it
can, so that we can detect RSTs and similar.

RB_ID=885299"
edma2,2016-11-03 08:25:37,https://api.github.com/repos/twitter/finagle/git/commits/47d47ee14fb55fb17471cc1a5d110430fe297016,47d47ee14fb55fb17471cc1a5d110430fe297016,"finagle/finagle-serversets: clean up com.twitter.serverset namer

Problem:

`com.twitter.server` namer can be cleaned up:

* directly call `Zk2Resolver` instead of calling `Resolver.eval(""zk2!..."")`
* uses composition (decorator pattern) instead of traits

Solution:

Implement the above improvements.

RB_ID=882548"
vkostyukov,2016-11-03 04:43:20,https://api.github.com/repos/twitter/finagle/git/commits/ca6b238fb69c09a92cb774a3b813c657baff7ede,ca6b238fb69c09a92cb774a3b813c657baff7ede,"finagle-redis: Restructure the Command API and encoding

Problem

Finagle Redis didn't get enough of attention in the past and its code base
(as one of the oldest in Finagle) became quite unmaintainable. In addition
to that it's written and structured in the style that requires some
modernization.

Solution

Let's refactor the API around `Command` to make it easy to understand and
maintain. As a side bonus, let's remove duplicated and dead code.

What was changed:

  - `RedisMessage` (a common parent for both `Command` and `Reply`) is
    removed since it adds nothing but extra complexity.
  - The encoding machinery was changed to eliminate duplicates hence
    reduce the code size we need to maintain.
  - Lot's of no-longer-relevant parts were removed.

Result

The `Command` API now consist of two methods `name` and `body` that
return `Buf`-representation of its name and body correspondingly.
This allows to reuse parts of the encoding logic in lots of places.

Around 500 lines of old Scala code were removed. Nearly zero impact
on the end-user.

RB_ID=885811"
bryce-anderson,2016-11-02 21:32:17,https://api.github.com/repos/twitter/finagle/git/commits/89154bd64526fc6c67304c80fb4095792fd18b72,89154bd64526fc6c67304c80fb4095792fd18b72,"finagle: Fix sbt build failure due to transient libthrift dependencies

Problem

Transient dependencies are looking for 'org.apache.thrift' libthrift and
can't find it because we've removed the resolver for maven.twttr.com.

Solution

Add a couple of exclusion rules.

RB_ID=887263"
vkostyukov,2016-11-02 20:52:49,https://api.github.com/repos/twitter/finagle/git/commits/67686c08f44ac0474e6d60d9c954c7506cae0c8f,67686c08f44ac0474e6d60d9c954c7506cae0c8f,"finagle-http: Put HttpImpl.mk() back

Problem / Solution

`HttpImpl.mk()` was accidentally removed in RB 885155 (moving stack params
under their own package), which makes it unusable from Java. Let's put it
back.

RB_ID=887117"
cacoco,2016-11-02 20:32:13,https://api.github.com/repos/twitter/finagle/git/commits/b2ca91add397455a4a297b50d8f7852876abab03,b2ca91add397455a4a297b50d8f7852876abab03,"finagle,finatra,scrooge,twitter-server,util: Update site scripts

Problem/Solution

A lot of times site generation fails due to a scaladoc issue
but we dev/null the output making it hard to debug and fix.

Let's stop sending the site and scaladoc output to dev/null.

RB_ID=887173"
dschobel,2016-11-02 18:29:14,https://api.github.com/repos/twitter/finagle/git/commits/5a3cb15fdd125fb4b7d70c57bf5c4606983788bc,5a3cb15fdd125fb4b7d70c57bf5c4606983788bc,"finagle-*: delegate direct buffer management to protocols

Problem / Solution

Delegating direct buffer management to protocols allows them to
enable ref-counting and gives a small performance boost of ~5%
reduction in gc time for large payloads without regressing in
throughput or cpu usage.

RB_ID=881648"
bryce-anderson,2016-11-02 01:10:32,https://api.github.com/repos/twitter/finagle/git/commits/498b5257d39c154e81cedb0e49c489c4d522572b,498b5257d39c154e81cedb0e49c489c4d522572b,"finagle-core: ServiceTimeoutException extends NoStackTrace

Problem

ServiceTimeoutException is used in a manner where the stack trace is
misleading at best.

Solution

Remove the stack trace from the exception by mixing NoStackTrace into
ServiceTimeoutException.

RB_ID=886809"
kevinoliver,2016-11-01 23:55:03,https://api.github.com/repos/twitter/finagle/git/commits/ca1610bab7d0242e22f312d38d992a26479d70c9,ca1610bab7d0242e22f312d38d992a26479d70c9,"Bump version of Caffeine to 2.3.4

Problem

Recently we upgraded Caffeine to 2.3.3 just missing the release of
version 2.3.4 [1].

Solution

Upgrade to version 2.3.4.

[1] https://github.com/twitter/finagle/commit/e321b8efb6df955e495a968e1a766ff61630fe4c#commitcomment-19640764

RB_ID=886770"
bryce-anderson,2016-11-01 23:08:49,https://api.github.com/repos/twitter/finagle/git/commits/93e633e56ca9ee80ae4c15355fd632f4c75da792,93e633e56ca9ee80ae4c15355fd632f4c75da792,"finagle-*: use libthrift from central repository

Problem

We now have a libthrift artifact published under the com.twitter
organization in Central Repository, but we don't use it.

Solution

Use it.

RB_ID=885879"
nhnFreespirit,2016-11-01 22:29:16,https://api.github.com/repos/twitter/finagle/git/commits/368f47e6f76a0bb35311e7205b7cfde29a6f4036,368f47e6f76a0bb35311e7205b7cfde29a6f4036,"finagle-http2 - Allow client to specify stream dependency and weight

Problem:
Netty's HttpToHttp2ConnectionHandler allows the client to set headers for stream
dependency and weight which is then applied to the http/2 stream created.
Finagle's RichHttpToHttp2ConnectionHandler does not preserve this behavior.

Solution:
Since the writeHeaders method in HttpToHttp2ConnectionHandler which is
responsible for this logic is private, the bits of code for reading and applying
these values have been copied into RichHttpToHttp2ConnectionHandler

Result:
Clients can now specify stream dependency and weight by using the appropriate
headers.  Note that in Netty, in addition to these two headers, the stream id
itself can also be chosen via a header, but because of the way finagle uses the
stream ids, adding support for this is a much larger task

RB_ID=886324"
dschobel,2016-11-01 18:59:06,https://api.github.com/repos/twitter/finagle/git/commits/4e61b64dabc5ca75d217b65cf720dfea4b66005b,4e61b64dabc5ca75d217b65cf720dfea4b66005b,"3rdparty / csl: bump jmh to latest

Problem

Our version of jmh is ~15 months out of date.

Solution

Bump 3rdparty dep to 1.15 and sbt-plugin to 0.2.16 (jmh 1.14.1)

RB_ID=886570"
bryce-anderson,2016-10-31 23:15:32,https://api.github.com/repos/twitter/finagle/git/commits/69d658f8ea749b532e5676564ce785b818c7f593,69d658f8ea749b532e5676564ce785b818c7f593,"finagle-http: Swallow the body of a nack response

Problem

Http nack responses contain a body. This body is typically fully
buffered on the response, but it need not be if the client allows chunked
responses. That means that if the entire body isn't decoded in one pass,
the Response will be followed by a byte chunk and the `isChunked` flag will
be set to true. The problem is that the HttpClientDispatcher
will observe the nack response and ignore any potential body that _may_ be
coming as chunks. This results in a ClassCastException for the
subsequent request because it finds a body chunk instead of a Response
in the pipeline.

Solution

Swallow the body.

RB_ID=884081"
kevinoliver,2016-10-31 19:07:33,https://api.github.com/repos/twitter/finagle/git/commits/e321b8efb6df955e495a968e1a766ff61630fe4c,e321b8efb6df955e495a968e1a766ff61630fe4c,"Bump version of Caffeine to 2.3.3

Problem

The caffeine library we are using is not the latest.

Solution

Upgrade to 2.3.3 from 2.3.0.

RB_ID=885896"
vkostyukov,2016-10-30 20:20:45,https://api.github.com/repos/twitter/finagle/git/commits/28d8b6f6b4fdcfb4d971dd0b6b406208287687bf,28d8b6f6b4fdcfb4d971dd0b6b406208287687bf,"finagle-http: Move stack params under their own package

Problem / Solution

As part of Netty 4 adoption in `finagle-http`, we need to restructure
HTTP modules/projects such that `finagle-http` depends on both
implementations (N3 and N4) that share a common code base. The first
step in this direction is extracting HTTP stack params from an inner
object `Http.param` into their own package `http.param` so they can
be shared between N3 and N4 implementations/projects.

RB_ID=885155"
ecoffey,2016-10-27 23:57:06,https://api.github.com/repos/twitter/finagle/git/commits/e3bf6549018dca938ac0955e11f2d182414a34e7,e3bf6549018dca938ac0955e11f2d182414a34e7,"finagle-mysql: Add support for streaming result sets

Problem

Consuming a large result set from mysql (via .query() or.prepare().apply())
can be prohibitive in terms of memory and latency.

Solution

Expose ""cursored"" result sets so that a large result set can be ""streamed""
out of the database, reducing the memory footprint and latency of app code
first working with the result set.

RB_ID=754080
TBR=true"
nhnFreespirit,2016-10-27 21:54:12,https://api.github.com/repos/twitter/finagle/git/commits/4b63e45b99e7afa6be1e86c2981eea3d683ffdf3,4b63e45b99e7afa6be1e86c2981eea3d683ffdf3,"finagle-http2 - Allow initial Http/2 settings to be threaded through to client

Problem:
It is currently not possible to specify the initial Http/2 settings used by the
client. It is also not possible to specify the ""ignore max header list size""
parameter. This makes it hard to test servers as the client cannot be made to
""misbehave""

Solution:
Add configuration parameters for individually setting the various http/2
settings Al on the client. Also make it possible to set the ""ignore max header
list size"" on the client.

Result:
It is now possible to specify the initial http/2 settings for a client, as well
as to instruct it to ignore the max header size list requested by the server.
Currently it is not possible to specify the initial settings for servers. This
will be added in a separate review if and when some needed changes to netty
land.

RB_ID=885094"
kevinoliver,2016-10-27 00:28:31,https://api.github.com/repos/twitter/finagle/git/commits/dab62bfc10611f81d1305913623571269b8944ef,dab62bfc10611f81d1305913623571269b8944ef,"finagle-mux: Prefer StampedLock over ReentrantReadWriteLock

Problem / Solution

`ReentrantReadWriteLock` has issues around starvation which was a
reason why `StampedLock` was added to Java 8. Now that Finagle
requires Java 8 we can switch our usage.

RB_ID=884376"
bryce-anderson,2016-10-26 16:37:13,https://api.github.com/repos/twitter/finagle/git/commits/5ceb2937b9dddbaddb0baccd3a6aa62f8d6cee22,5ceb2937b9dddbaddb0baccd3a6aa62f8d6cee22,"finagle-http: Fix close of GenSerialServerDispatcher

Problem

The finagle-http GenSerialServerDispatcher has a broken `close`
method: if a dispatch is in progress and `close` is called the underlying
transport will not close until the dispatch completes, which may be much
later than the specified deadline (and may never happen at all) potentially
resulting in resource leaks.

Solution

Use a timer to ensure that the transport is closed within the deadline
regardless of the behavior of the Future returned by `dispatch`.

Note: additional cleanup was performed to optimize the implementation of
the dispatch loop.

RB_ID=882898"
bryce-anderson,2016-10-26 02:15:43,https://api.github.com/repos/twitter/finagle/git/commits/775aba09b69acc3167b831bbb57a84bb6c2c7ed1,775aba09b69acc3167b831bbb57a84bb6c2c7ed1,"finagle-core: Fix close of GenSerialServerDispatcher

Problem

If close() is called on the GenSerialServerDispatcher while a
transaction is being processed the underlying transport is never closed.

Solution

Close the transport after the transaction has been completed or the
deadline has been exceeded, whichever happens first.

Note: a similar change is required for the http
GenSerialServerDispatcher.

RB_ID=881100"
fsareshwala,2016-10-26 00:06:46,https://api.github.com/repos/twitter/finagle/git/commits/a17de791e8ee544b920a7cfc35270bc340383aa5,a17de791e8ee544b920a7cfc35270bc340383aa5,"finagle: format StackBuilder creation

Problem
The StackBuilder creation was on two separate lines even though it could fit on
one while still being within the character limits for a single line.

Solution
Join the two lines.

RB_ID=884369"
bryce-anderson,2016-10-25 22:44:22,https://api.github.com/repos/twitter/finagle/git/commits/f84dcd300aa92c5066d8c3a543855b482f510235,f84dcd300aa92c5066d8c3a543855b482f510235,"finagle-thrift: lower log level in Netty4Transport

Problem

The server transport initialization order is such that custom
initialization is done before the general initialization. The netty4
transport implementation in finagle-thrift attempts to remove the
DirectToHeapInboundHandler in the custom initialization phase when it
has not yet been added to the pipeline, which naturally fails and logs
a message at level INFO which is a little scary to those not familiar
with what it means.

Solution

Removing this handler is not strictly necessary, so the logging level
on that message should be set to DEBUG.

RB_ID=884242"
kevinoliver,2016-10-25 21:53:25,https://api.github.com/repos/twitter/finagle/git/commits/36b09bf9daf83ff2da3b0f1fb41083aa6a44d539,36b09bf9daf83ff2da3b0f1fb41083aa6a44d539,"finagle-core: Improve performance of ServiceFactoryCache

Problem

`c.t.f.factory.ServiceFactoryCache` can be optimized a bit.

Solution

* Use a `StampedLock` instead of `ReentrantReadWriteLock`.
* Use a `j.u.HashMap` and remove some unnecessary lookups.
* Lift functions into members to avoid allocations at runtime.

Result

Better performance with less variability. JMH results:

Before, single threaded:
[info] Benchmark                              Mode  Cnt     Score     Error   Units
[info] ServiceFactoryCacheBenchmark.apply     avgt   10   355.839 ±  92.010   ns/op

Patched, single threaded:
[info] Benchmark                              Mode  Cnt     Score     Error   Units
[info] ServiceFactoryCacheBenchmark.apply     avgt   10   284.675 ±  10.635   ns/op

Before, 4 threads:
[info] Benchmark                              Mode  Cnt     Score     Error   Units
[info] ServiceFactoryCacheBenchmark.apply     avgt   10  2212.352 ± 642.135   ns/op

Patched, 4 threads:
[info] Benchmark                              Mode  Cnt     Score     Error   Units
[info] ServiceFactoryCacheBenchmark.apply     avgt   10  1961.655 ± 341.187   ns/op

RB_ID=884210"
mosesn,2016-10-25 21:24:34,https://api.github.com/repos/twitter/finagle/git/commits/390ed8ec4becac636179f1f05c5c1baaef365ce9,390ed8ec4becac636179f1f05c5c1baaef365ce9,"netty: Upgrade version to 4.1.6.Final

Problem

We want new features only in the new netty!

Solution

Upgrade netty!  Also, netty moved the logic for detecting headers that are too
big into the client-side, in http/2, so make sure that can still return a 431.

RB_ID=881608"
ryanoneill,2016-10-25 20:09:20,https://api.github.com/repos/twitter/finagle/git/commits/48c753d055a55aac7554dfbcfe850846b9239c66,48c753d055a55aac7554dfbcfe850846b9239c66,"finagle-netty4: Add Workaround for Disabled AutoRead Socks5 Connection

Problem

If AutoRead (ChannelOption.AUTO_READ) is turned off for a channel, as it
is by default for Netty4 via the Netty4Transporter.Backpressure param,
as of Netty 4.1.4, the read of the Socks5 proxy server is not kicked
off and so must be done manually.

Solution

Manually kick off the read, if the initial write is successful and the
channel configuration is set to not use AutoRead. A subsequent pull
request is being submitted to Netty (Netty Issue 5933).

RB_ID=884344"
kevinoliver,2016-10-25 19:53:24,https://api.github.com/repos/twitter/finagle/git/commits/223466e32a54aa809d5acb1e0d23727b01318112,223466e32a54aa809d5acb1e0d23727b01318112,"finagle-mux: Improve performance in TagMap and TagSet

Problem

`c.t.f.mux.util.{TagMap, TagSet}` have room for some simple
performance improvements.

Solution

TagMap:
* Remove the ""fast"" array path and use Netty4's `IntObjectHashMap`.
This is another usage of the Netty 4 dependency, but it is kept
internal to the class and could be swapped out in the future for
another primitive hash map implementation.

* Replace `Option.map` with `match` in `TagMap.map`.

* Replace 3 `HashMap` operations (`containsKey`, `remove`, `put`) with
a single `HashMap.put` in `TagMap.maybeRemap` and `TagMap.unmap`.

* Remove unused `iterator` method.

* Push down synchronization past the `inRange` checks as they are
invariant.

TagSet:
* Change `TagSet.iterator.next` to reduce the allocation caused by
`Int` boxing.

Result

Fewer allocations and less work done.

RB_ID=884063"
kevinoliver,2016-10-25 19:42:51,https://api.github.com/repos/twitter/finagle/git/commits/9390f1d1c96916cf424ea12969801a2a93ede55a,9390f1d1c96916cf424ea12969801a2a93ede55a,"finagle-core: Allow for dynamic timeouts

Problem

There are cases where `TimeoutFilter` is too rigid with its single timeout.

Solution

Allow timeouts to be computed at runtime via `() => Duration` in
`c.t.f.service.TimeoutFilter`.

Result

While current behavior is unchanged, this opens the door to more
control over timeouts in future commits.

RB_ID=883705"
roanta,2016-10-25 19:24:31,https://api.github.com/repos/twitter/finagle/git/commits/09c2ecde91b7436020582bc446da8cd1c87e1122,09c2ecde91b7436020582bc446da8cd1c87e1122,"finagle-benchmark: Refactor load balancer simulation to allow for multiple clients

Problem

It's useful to be able to run our local load balancer simulation
with more than one client. For example, we may want to test clients
operating with various load balancer configs.

Solution

Introduce the flag `nClients` to represent how many clients will be
talking to the same group of servers. This also contains a larger
cleanup of the simulation since it was becoming a bit unwieldy to
manage.

RB_ID=884044"
kevinoliver,2016-10-25 18:24:17,https://api.github.com/repos/twitter/finagle/git/commits/280047f2d8bc9f17660844c4f6430a4a75d4570e,280047f2d8bc9f17660844c4f6430a4a75d4570e,"finagle-{core,zipkin}: Reduce allocations in Tracers

Problem / Solution

There are some unnecessary allocations in `BroadcastTracer` and
`RawZipkinTracer` that are easy to omit.

RB_ID=883753"
ryanoneill,2016-10-25 18:00:33,https://api.github.com/repos/twitter/finagle/git/commits/4a2fdef7caf1ecde9968ab10136cec7f12aecf46,4a2fdef7caf1ecde9968ab10136cec7f12aecf46,"finagle-doc: Fix Links for Clients and Servers on Extending Page

Problem

The links to `StackClient.newStack` and `StackServer.newStack` are
incorrect on the ""Extending Finagle"" doc page.

Solution

Fix the links

RB_ID=884413"
vkostyukov,2016-10-24 19:02:35,https://api.github.com/repos/twitter/finagle/git/commits/792498babeb42a22827b7577639654d2cc0e6474,792498babeb42a22827b7577639654d2cc0e6474,"finagle-redis: Rewrite encoding in terms of Bufs

Problem / Solution

Some APIs from `finagle-redis` are still exposing Netty 3's `ChannelBuffer`s,
which makes it impossible to migrate the protocol implementation to the next
Netty version.

This RB cleans up the API such that all encoding is done in terms of `Buf`s
(at the `Trasport` level), hence agnostic to the Netty version.

Summary of what's changed:

  - Removed `toChannelBuffer` from `Reply` since we no longer encode them
    (server side support was removed previously).

  - `toChannelBuffer` is now part of `Command` and was renamed to `toBuf`.

  - Every command type (a case class) was udpated to be encoded in terms
    of `Buf`s

  - A couple of commands had to be updated to use `Buf`s (were missed in
    the previous rounds of udpates).

  - Dispatcher now takes a transport bi-mapped to `_.toBuf` and `indentity`
    functions so we encode in transport, but decoding is still happening
    in the pipeline.

  - Nagatti codec now uses NONE encoder and just passes outbound messages
    through (they are already encoded by transport).

  - We use an ad-hoc version of `BufCodec` that only works one-way (outbound)
    and passes inbound messages through.

RB_ID=882622"
bryce-anderson,2016-10-24 16:42:56,https://api.github.com/repos/twitter/finagle/git/commits/fa8cef1c30e635366c763ae12de4133133a1f50b,fa8cef1c30e635366c763ae12de4133133a1f50b,"finagle-http: Gracefully handle ill formed responses to a HEAD request

Problem

Finagle doesn't handle HEAD requests as it should. Specifically, the
response to a HEAD request should never have a body, but we don't enforce
that.

Solution

Make HttpServerDispatcher aware of HEAD request semantics by preparing
the response for the netty pipeline. This is done in a mandatory Filter
which has subsumed most of the conformance logic that was previously in the
`handle` method of the dispatcher. The semantics that must be adhered to
downstream are:

* The encoder MUST NOT add Content-Length or Content-Encoding headers
* A Message that is not flagged as 'chunked' is the final element in
the HTTP response and the encoder MUST be in a state that will properly
interpret the next element as the next response.

Result

Responses to HEAD requests should no longer result in a HTTP protocol
error.

RB_ID=872106"
bryce-anderson,2016-10-19 22:32:41,https://api.github.com/repos/twitter/finagle/git/commits/b975ff9e315a9df01fb1ad0ea104198c19e7a4ef,b975ff9e315a9df01fb1ad0ea104198c19e7a4ef,"finagle-http2: Fix HTTP/2 cleartext server Listener

Problem

The cleartext upgrade handler will fail to serve multiple connections
because it currently attempts to reuse the same HttpServerCodec for each
new pipeline initialization.

Solution

Make a new HttpServerCodec for each initialization and retrieve it when
needed by the marshalling initializer using the netty pipeline.get
method.

RB_ID=882512"
kevinoliver,2016-10-19 19:50:00,https://api.github.com/repos/twitter/finagle/git/commits/bec7fba4f137a8d3e9d68a3ab7985b6335836106,bec7fba4f137a8d3e9d68a3ab7985b6335836106,"finagle-stats: Default com.twitter.finagle.stats.exportEmptyHistograms to off

Problem

We want to default to not exporting the full empty histogram.

Solution

Set the default for `com.twitter.finagle.stats.exportEmptyHistograms`
toggle to `0.0`.

RB_ID=882522"
vkostyukov,2016-10-19 03:06:18,https://api.github.com/repos/twitter/finagle/git/commits/730dab51a60e5978bd6a120bb47a9a28532bf6c9,730dab51a60e5978bd6a120bb47a9a28532bf6c9,"finagle-netty4: Drain writes when proxy handshake is done

Problem / Solution

There is a bug in our implementation of `Netty4ProxyConnectHandler` where
we simply drops pending writes (if there are any) instead of draining them
when the handshake is done.

Note, it's quite unlikely to hit that given that Finagle never writes into
a channel that's not yet connected. Although, some of the Netty handlers
may do that (eg: SSL/TLS handler).

RB_ID=882438"
kevinoliver,2016-10-19 00:25:35,https://api.github.com/repos/twitter/finagle/git/commits/6f2067be0d9154d9873034ba68ca02bca7292813,6f2067be0d9154d9873034ba68ca02bca7292813,"finagle-http: Fix bug in toggled ResponseClassifier

Problem

The toggled ResponseClassifier to ServerErrorsAsFailures could end up
with a MatchError. This means the toggle should not be used.

Solution

Fix the definition to properly check isDefinedAt and create a new
toggle `com.twitter.finagle.http.serverErrorsAsFailuresV2` to use
instead.

RB_ID=882151"
vkostyukov,2016-10-19 00:06:40,https://api.github.com/repos/twitter/finagle/git/commits/db2d02ff45e140e4f8b54c53089742eb645ae86b,db2d02ff45e140e4f8b54c53089742eb645ae86b,"finagle-netty4: Introduce N4 metrics (for pooling)

Problem / Solution

Given that pooling will be an essential part of Finagle (i.e., `finagle-netty4`),
it would be handy to export some pooling-related stats under the `finagle/netty4`
scope.

This RB introduces `Netty4Metrics` that export several gauges to keep track of
huge/normal/small/tiny allocations made via a pooled allocator. These number may
come in handy if we need some insights on whether or not the chunk size we picked
is sufficient for a given application.

Technically, every `huge` increment means the allocation request was short-circuit
to the unpooled allocator b/c, the buffer size was bigger than a chunk size.

RB_ID=882205"
ryanoneill,2016-10-18 19:19:12,https://api.github.com/repos/twitter/finagle/git/commits/08c167f61535e9e566bef9df1d1eb8d250000cae,08c167f61535e9e566bef9df1d1eb8d250000cae,"finagle-benchmark: Remove dependency on metrics-data-sample

Problem

Finagle-benchmark contains a dependency on
com.twitter.commons#metrics-data-sample, which is only published to
maven.twttr.com.

Solution

Add the real_latencies.data file directly to finagle-benchmark so that
the dependency on maven.twttr.com for finagle-benchmark can be removed.

RB_ID=882170"
kevinoliver,2016-10-18 17:59:03,https://api.github.com/repos/twitter/finagle/git/commits/66bb81c2a7b7494dcf10aaddc7b5b84209b43777,66bb81c2a7b7494dcf10aaddc7b5b84209b43777,"finagle-core: Deprecate more methods in ClientBuilder

Problem

`c.t.f.builder.ClientBuilder` still has a *lot* of functionality in
it, some of which is not broadly applicable to clients.

Solution

Deprecate some of the seldom used methods for removal in an upcoming
release.

  - `hostConnectionIdleTime`
  - `hostConnectionMaxIdleTime`
  - `hostConnectionMaxLifeTime`
  - `hostConnectionMaxWaiters`

RB_ID=881612
TBR=true"
ryanoneill,2016-10-18 03:34:07,https://api.github.com/repos/twitter/finagle/git/commits/fb85b26cc7674a72a8cda91012fbc2b842e47782,fb85b26cc7674a72a8cda91012fbc2b842e47782,"finagle: Fix SBT Build File for finagle-memcached

Problem

The finagle-memcached SBT build is currently broken as it attempts to
download com.twitter.commons#metrics and
com.google.testing#test-libraries-for-java as part of its
com.twitter.common#zookeeper-testing dependency. The specific versions
of these jars are only available on maven.twttr.com.

Solution

Add ExclusionRules to the finagle-memcached section for
com.twitter.commons#metrics and
com.google.testing#test-libraries-for-java.

RB_ID=882199
TBR=true"
bryce-anderson,2016-10-18 01:07:46,https://api.github.com/repos/twitter/finagle/git/commits/c71574a722996278d5360eaa844461776742dad4,c71574a722996278d5360eaa844461776742dad4,"finagle-http: Use Keep-Alive to close connection on bad request

Problem

The HttpServerDispatcher closes the connection when responding to a bad
request by calling `this.close()` before returning the response. This
causes two problems:

- The semantics of `this.close()` should close the dispatcher and this the
transport immediately but due to an implementation detail that doesn't
happen and the response is allowed to pass through. This blocks fixing the
dispatcher behavior.
- The peer doesn't get any warning that the connection is going to close.

Solution

Using the keep-alive semantics to close the connection. Instead of directly
call `.this.close()` when we receive a bad request we attach a
'Connection: close' header to the generated response which will cause the
ConnectionManager to close the connection.

RB_ID=880007"
bryce-anderson,2016-10-18 00:59:31,https://api.github.com/repos/twitter/finagle/git/commits/b65eb4a34340da28fdcbd54540ec540cff358abe,b65eb4a34340da28fdcbd54540ec540cff358abe,"finagle-core: Remove unused method from ClientDispatcher

Problem

The method: protected def read(permit: Permit): Future[Rep]
on SerialClientDispatcher is unused and unnecessary.

Solution

Remove it.

RB_ID=881978"
ryanoneill,2016-10-17 20:26:18,https://api.github.com/repos/twitter/finagle/git/commits/fd30b1e7b411a3c507188814afeb09af19ba739d,fd30b1e7b411a3c507188814afeb09af19ba739d,"finagle-core: IgnorantTrustManager now extends X509ExtendedTrustManager

Problem

Finagle's IgnorantTrustManager, which is used with the
'withTlsWithoutValidation' API for testing purposes, fails to properly
bypass certificate validation in some cases in Java 8.

Solution

Change IgnorantTrustManager to extend X509ExtendedTrustManager instead
of X509TrustManager. Implementing the methods that are part of the
X509ExtendedTrustManager interface fixes the issue for Finagle users.

RB_ID=881660"
vkostyukov,2016-10-17 20:21:34,https://api.github.com/repos/twitter/finagle/git/commits/500c8dfc9f95106f2740724068cc3874325d6a15,500c8dfc9f95106f2740724068cc3874325d6a15,"finagle-core: Add vkostyukov as owner

Problem / Solution

I've been contributing quite a while into Finagle's core I feel quite
comfortable (and ready!) beeing its owner.

RB_ID=881572"
vkostyukov,2016-10-17 18:38:19,https://api.github.com/repos/twitter/finagle/git/commits/50d037120ab5f86df1cd876ceaac9ffbbda987a1,50d037120ab5f86df1cd876ceaac9ffbbda987a1,"finagle-netty4: Change pooled allocator chunk size from 2mb to 128kb

Problem / Solution

Our default value for a chunk size of Netty's pooled allocator
is unrealistically big (2mb), which results in increased memory
footprint for applications with pooling enabled.

After running a couple of experiments and identifying the maximum
receive buffer we might want to allocate in production, we decided
to change chunk size to 128kb, which should be enough for many
applications.

Note that even if the new value doesn't cover some extreme cases,
the worst thing that could happen (when a requested size is bigger
than a chunk size) is falling back to unpooled allocator (which we
do today anyway).

RB_ID=881639"
bryce-anderson,2016-10-17 17:39:19,https://api.github.com/repos/twitter/finagle/git/commits/e9bd253311ea72bfa8557e831d2e214fc5bce5ca,e9bd253311ea72bfa8557e831d2e214fc5bce5ca,"finagle-thrift: Add Toggle for netty3 to netty4 rollout

Problem

We want to be careful when we deploy high risk changes and switching
the transport implementation for finagle-thrift is one of those risky
changes.

Solution

Use a Toggle to slowly transition production machines to the netty4
transport implementation.

RB_ID=880224"
ryanoneill,2016-10-17 17:32:36,https://api.github.com/repos/twitter/finagle/git/commits/3f2fd25ef1539639e91553fe60af625b52d2beba,3f2fd25ef1539639e91553fe60af625b52d2beba,"finagle-core: Add com.twitter.finagle.ssl OWNERS file

RB_ID=881670"
bryce-anderson,2016-10-17 17:04:33,https://api.github.com/repos/twitter/finagle/git/commits/2f52e6152302beec662072319bde56ad2383211e,2f52e6152302beec662072319bde56ad2383211e,"finagle-http: Add banderson as owner

Problem / Solution

I've spent quite a bit of time wading through finagle-http and feel
like I am ready to review commits.

RB_ID=881663"
bryce-anderson,2016-10-17 16:54:42,https://api.github.com/repos/twitter/finagle/git/commits/2cc43a62cdbbd5fa531ce3a9d60ccb5f14fc94b6,2cc43a62cdbbd5fa531ce3a9d60ccb5f14fc94b6,"finagle-http: Ensure Connection: close header is present when the connection is closed

Problem

The ConnectionManager is responsible for ensuring the persistence of an
HTTP/1.x connection, partially mediated by the Connection header.
However, when the ConnectionManager decides that it needs to close the
connection it doesn't ensure the 'Connection: close' header is set. This
may end up in an unexpected hang-up for the clients perspective.

Solution

Ensure the 'Connection: close' header is set if the ConnectionManager
intends to close the connection.

RB_ID=880280"
vkostyukov,2016-10-14 22:29:35,https://api.github.com/repos/twitter/finagle/git/commits/ff517028f8ec408e1c95b1d5431d9ed181492dfa,ff517028f8ec408e1c95b1d5431d9ed181492dfa,"finagle-netty4: poolReceiveBuffers is now a (disabled) toggle

Problem / Solution

`poolReceiveBuffers` is now a flag which makes it difficult to change its
default value in a controlled manner. Let's make it a toggle.

RB_ID=880558"
kevinoliver,2016-10-14 18:11:00,https://api.github.com/repos/twitter/finagle/git/commits/d36560e45cf6e36420ca3cdd2acd57066e03691a,d36560e45cf6e36420ca3cdd2acd57066e03691a,"finagle-thriftmux: Remove deprecated ThriftMux{Client,Server}

Problem / Solution

`c.t.f.ThriftMuxClient`, `c.t.f.ThriftMuxServer`,
`c.t.f.ThriftMuxClientLike`, and `c.t.f.ThriftMuxServerLike` have been
deprecated a long time and have good replacements in
`c.t.f.ThriftMux.client` and `c.t.f.ThriftMux.server`.

RB_ID=880924
TBR=true"
mosesn,2016-10-14 17:58:07,https://api.github.com/repos/twitter/finagle/git/commits/cd6e623aa7ae4df472c6e44768ef0071cd78aa02,cd6e623aa7ae4df472c6e44768ef0071cd78aa02,"finagle: Pointed deps to new service-thrift

Problem

We had trouble publishing service-thrift before, so it wasn't on maven central.
Now that we have succeeded in publishing, no more reason to point to
maven.twttr.com for a couple more modules.

Solution

Stop pointing to maven.twttr.com!

RB_ID=881295"
isabelmartin,2016-10-14 17:27:17,https://api.github.com/repos/twitter/finagle/git/commits/29f267782e6958d2dc9454fe3aa0072025d1623a,29f267782e6958d2dc9454fe3aa0072025d1623a,"finagle-core: Expose configured method on ServerBuilder

Problem

Currently, the configured method in ServerBuilder is protected. Changes in
ClientBuilder, ThriftMux.Client, Thrift.Client, Http.Client, ServerBuilder,
ThriftMux.Server, Thrift.Server, and Http.Server require it to be accessible.

Solution

Make ServerBuilder's configure accessible similar to how ClientBuilder is now.

RB_ID=879487"
mosesn,2016-10-13 21:47:39,https://api.github.com/repos/twitter/finagle/git/commits/1a966b62cfcdc415bffbd26b5400c2b2fc3c702f,1a966b62cfcdc415bffbd26b5400c2b2fc3c702f,"finagle: Depend on real metrics-data-sample

Problem

We're depending on the wrong metrics-data-sample and I don't know how anything works

Solution

Depend on the right one.

RB_ID=880783"
kevinoliver,2016-10-13 19:00:11,https://api.github.com/repos/twitter/finagle/git/commits/f552d11d5e4579de31b68248303742b1f510afc0,f552d11d5e4579de31b68248303742b1f510afc0,"util,finagle-core: Improve toStrings

Problem / Solution

There are a variety of commonly used classes and defaults that end up
in the runtime registry which do not have a good `toString`
implementation.

RB_ID=880664"
vkostyukov,2016-10-13 18:46:06,https://api.github.com/repos/twitter/finagle/git/commits/459b733b710cad4063c18478ce2085f1452898d4,459b733b710cad4063c18478ce2085f1452898d4,"finagle-core: Better logging in DefaultMonitor

Problem

Finagle's logging monitors need some love.

  - Right now the logging logic is spread between `DefaultMonitor` and `RootMonitor`
    that use different loggers (different logging libraries).
  - Exceptions logged by a monitor lack the remote peer infomation, which might
    be super helpful while debugging/troubleshooting.

Solution

  - Let's make `DefaultMonitor` (based on Twitter's logging) the only logging party in
    Finagle and not delegate calls to the `RootMonitor`, which is defined in `until-core`
    and doesn't depend on `util-logging`. NOTE: Fatal exceptions are still propagated
    to the `RootMonitor` from future/promise closures that throw exceptions such that
    this behaviour is unchanged.
  - The final monitor used in monitor filter is now composed (`orElse`) of `DefaultMonitor`
    and a user-defined montior passed via a stack param. This makes the configuring
    monitors predictable and easy to reason about: all unhandled exceptions are propagated
    to their last resort - default monitor.
  - Let's log upstream address, downstream address, and the local label in the
    `DefaultMonitor` to make it easier to indentify the source of the problem.

RB_ID=878890"
kevinoliver,2016-10-13 18:24:50,https://api.github.com/repos/twitter/finagle/git/commits/307baefe2df678b32a2e0b2f4cfb6fb411bff20f,307baefe2df678b32a2e0b2f4cfb6fb411bff20f,"finagle-thrift,thrift-mux: Fix scaladocs

Problem / Solution

Fixed a bunch of broken scaladoc inheritance and tags.

RB_ID=880495"
kevinoliver,2016-10-13 18:13:31,https://api.github.com/repos/twitter/finagle/git/commits/fff3997f8309253b952075faaff941a09bb3b21c,fff3997f8309253b952075faaff941a09bb3b21c,"finagle-{commons-stats,ostrich4}: Fix Stats naming collision

Problem / Solution

The `com.twitter.finagle.stats.Stats` object has some some collisions
in finagle-commons-stats and finagle-ostrich4.

RB_ID=880777"
mosesn,2016-10-12 01:21:38,https://api.github.com/repos/twitter/finagle/git/commits/67f9102820ef7dd46f7401b33a98806628356719,67f9102820ef7dd46f7401b33a98806628356719,"source: Upgrade jackson to 2.8.3

Problem

We're beginning to start thinking about 2.12.x, now that 2.12.0-RC1 is a thing.
jackson-module-scala has been published for 2.12.0-RC1, but not in the version
that we're on today.

Solution

Let's move source to 2.8.3!

Result

We can pull in an ostrich PR that starts cross-publishing for scala 2.12.0-RC1.

RB_ID=878518"
jcrossley,2016-10-11 01:01:36,https://api.github.com/repos/twitter/finagle/git/commits/f49b26aa1a89cbaec5aa7ac956ae7f379b4a5d97,f49b26aa1a89cbaec5aa7ac956ae7f379b4a5d97,"Twitter-oss: Prepare OSS libraries for release

Problem

We want to release the next versions our of Twitter OSS libraries:
  - util -> 6.38.0
  - ostrich -> 9.22
  - scrooge -> 4.12.0
  - finagle -> 6.39.0
  - twitter-server -> 1.24
  - finatra -> 2.5.0

Solution

Prepare libraries for their next releases.

RB_ID=879557"
mosesn,2016-10-10 23:10:15,https://api.github.com/repos/twitter/finagle/git/commits/695694ea710bda551ed3da7702a2bd5776ce4e20,695694ea710bda551ed3da7702a2bd5776ce4e20,"csl: Fix resolvers to maven.twttr.com

RB_ID=879617"
bryce-anderson,2016-10-10 20:47:40,https://api.github.com/repos/twitter/finagle/git/commits/94b3d1872f3f51bd232e6b336dc866ce11f971e8,94b3d1872f3f51bd232e6b336dc866ce11f971e8,"finagle-thrift: Implement netty4 transport

Problem

The finagle-thrift project doesn't have a netty4 transport
implementation.

Solution

Add one.

Result

We can now use netty4 as the transport implementation for
thrift clients and servers. This commit also contains more
refactoring, moving netty3 specific types to the netty3
package. The public interface has not been changed.

RB_ID=874460"
bryce-anderson,2016-10-10 19:22:44,https://api.github.com/repos/twitter/finagle/git/commits/77b66eeb9cc65b8df4efae35d5ee53afafd9776d,77b66eeb9cc65b8df4efae35d5ee53afafd9776d,"finagle-zipkin: Use the Thrift.client instead of ThriftClientFramedCodec

Problem

If we want to use a non-netty3 transport layer with zipkin we need to
move away from using Codec because it is netty3 specific.

Solution

Use the Thrift StackClient to get the underlying transport in the
zipkin ScribeRawZipkinTracer type.

RB_ID=879252"
bryce-anderson,2016-10-10 16:36:20,https://api.github.com/repos/twitter/finagle/git/commits/e2912a6a7b1ef1fbdc0a396d86cf8c7e9c3789d4,e2912a6a7b1ef1fbdc0a396d86cf8c7e9c3789d4,"finagle-netty4: Buffer one message to proactively close sockets

Problem

The Java TCP socket implementation doesn't signal closed events until
an operation is attempted on the channel, potentially leaving a
netty4 ChannelTransport open long after the peer has hung up.

Solution

Change the netty4 ChannelTransport implementation to buffer 1 inbound
message. This will often result in a pending read operation which will
cause close events to be eagerly propagated to the netty pipeline. By
only buffering 1 message we make a compromise between detecting close
events and avoiding unnecessary memory consumption: after one message
is buffered the ChannelTransport is again blind to close events until
all inbound messages have been consumed.

RB_ID=876164"
mosesn,2016-10-08 05:13:12,https://api.github.com/repos/twitter/finagle/git/commits/facb1c3e3bb5af0445d522ed168d4070150b4cd9,facb1c3e3bb5af0445d522ed168d4070150b4cd9,"csl: Remove dependency on maven.twttr.com

Problem

maven.twttr.com is a bummer

Solution

Stop depending on it, now that we've published to maven central!

RB_ID=878967"
cacoco,2016-10-08 01:30:33,https://api.github.com/repos/twitter/finagle/git/commits/f8d76655ffcdc321f6e59e1d87be59f3160644f2,f8d76655ffcdc321f6e59e1d87be59f3160644f2,"finagle-thrift: Update `ThriftServiceIface` to count failed Responses in failure counter

Problem

The `c.t.finagle.thrift.ThriftServiceIface#statsFilter only currently
counts successful responses which encode an exception as failures. It
would be great to also track any failed Response in this counter since
the counter is scoped to the RPC method. This is also tracked at the
client level but the method for which the Response failed is lost at
that granularity.

Solution

Add an onFailure case in the `ThriftServiceIface#statsFilter` to incr
the failures when the Response fails.

Result

A more complete picture of failures from the method scope stats
tracked by the `c.t.finagle.thrift.ThriftServiceIface#statsFilter`.

RB_ID=879075"
vkostyukov,2016-10-07 22:14:54,https://api.github.com/repos/twitter/finagle/git/commits/79e6ad8ee90f37a03c7e25715b8619131057e06b,79e6ad8ee90f37a03c7e25715b8619131057e06b,"finagle-doc: Fix typo in P2C docs w.r.t. load bounds

Problem / Solution

The P2C doc is misleading about load bounds on each node in the cluster.

RB_ID=870179"
mosesn,2016-10-07 21:58:22,https://api.github.com/repos/twitter/finagle/git/commits/5e05c6e0bc7c08699e787425f8ab625eea573887,5e05c6e0bc7c08699e787425f8ab625eea573887,"csl: Commons release script

Problem

We need to make it easy to release the commons libraries to maven central.

Solution

Provide a commons release script which describes commons dependencies etc.

RB_ID=879026"
spockz,2016-10-07 19:47:51,https://api.github.com/repos/twitter/finagle/git/commits/2b65e4187aacc0f7a08f04692854a8d3b1e50c31,2b65e4187aacc0f7a08f04692854a8d3b1e50c31,"Problem

com.twitter.finagle.http.filter.StatsFilter Is missing a corresponding module
so it cannot be conveniently added to a Stack.

Solution

Added the module, added the withHttpStats methods to Client and Server.

Result

It is now possible to effortlessly enable Http specific statistics on both
http servers and clients.

 Signed-off-by: Jillian Crossley <jillianc@twitter.com>

RB_ID=878465"
mosesn,2016-10-07 00:18:16,https://api.github.com/repos/twitter/finagle/git/commits/c7b1a922203d64a257179b7f666332087e625806,c7b1a922203d64a257179b7f666332087e625806,"common: Publish the deps we need to maven central

Problem

We don't want our users to have to add maven.twttr.com as a dependency.

Solution

Start publishing the common stuff to maven central.

RB_ID=878684"
jcrossley,2016-10-06 21:16:48,https://api.github.com/repos/twitter/finagle/git/commits/4ddd9138f8302a88f163dd2f0d6d3208a24969f9,4ddd9138f8302a88f163dd2f0d6d3208a24969f9,"finagle/finagle-memcached: Partitioned clients use configured label if dest not labelled

Problem

Clients created using ""newTwemcacheClient"" with an unlabelled ""dest""
will have no label, even if it has been configured in stack params.

Solution

If the label is empty, use the label from the stack params.

RB_ID=878630"
kevinoliver,2016-10-06 19:18:23,https://api.github.com/repos/twitter/finagle/git/commits/c845b4cbc1ff7c3dd77731cba12c2b6500f79629,c845b4cbc1ff7c3dd77731cba12c2b6500f79629,"finagle-core: ClientBuilder deprecations

Problem

`c.t.f.builder.ClientBuilder` has a *lot* of functionality in it, some
of which is not broadly applicable to clients.

Solution

Deprecate some of the seldom used methods for removal in an upcoming
release.

- `readerIdleTimeout`
- `writerIdleTimeout`
- `recvBufferSize`
- `sendBufferSize`
- `channelFactory`
- `expHostConnectionBufferSize`

RB_ID=878009
TBR=true"
kevinoliver,2016-10-05 22:56:54,https://api.github.com/repos/twitter/finagle/git/commits/f38ccccebb57c6c2688dc57345196174042dd56e,f38ccccebb57c6c2688dc57345196174042dd56e,"finagle-thrift: Remove allocations in ThriftServiceIface

Problem / Solution

There are a few closures in `c.t.f.thrift.ThriftServiceIface` that can
be lifted into member variables, then saving allocations at runtime.

RB_ID=878221"
vkostyukov,2016-10-04 21:20:09,https://api.github.com/repos/twitter/finagle/git/commits/0a36005ca346b7ac6813685b1ff2c0cf9eed768f,0a36005ca346b7ac6813685b1ff2c0cf9eed768f,"finagle-netty4: Introduce receive_buffer_bytes (only available with pooling)

Problem

While pooling of receive buffers is still experimental, it's important to provide
a means for users to tune that properly. One of the most important inputs for the
tuning is the distribution of the sizes of the receive buffers.

Solution

Add a new stat `receive_buffer_bytes` (only available when pooling is enabled) that
keeps track of a histogram of the receive buffer sizes.

RB_ID=877080"
jcrossley,2016-10-03 19:08:10,https://api.github.com/repos/twitter/finagle/git/commits/f1ad6f39d0c38331eaacc0a0b74f44468ab00f98,f1ad6f39d0c38331eaacc0a0b74f44468ab00f98,"finagle/finagle-example: Re-enable checkstyle and fix errors

Problem / Solution

Un-suppress checkstyle suppression for
finagle/finagle-example/src/main/java/com/twitter/finagle/example/java/http/.*.java
and fix resulting errors.

RB_ID=877045"
edma2,2016-09-30 20:01:48,https://api.github.com/repos/twitter/finagle/git/commits/538eaf5b543810b97d1686a3d6c70ed13c2db7fd,538eaf5b543810b97d1686a3d6c70ed13c2db7fd,"finagle-serversets: handle shard ID in Zk2Resolver.addrOf

Problem:

Zk2Resolver does not understand shard ID.

Solution:

Add `shardId` parameter to `addrOf`, which will filter the serverset by the given shard ID.

RB_ID=868114"
vkostyukov,2016-09-30 19:09:37,https://api.github.com/repos/twitter/finagle/git/commits/00dff903bbd7462aea48581c6282445dad91038f,00dff903bbd7462aea48581c6282445dad91038f,"finagle-core: Add rolling restart unit-test for Aperture

Problem / Solution

Aperture is missing a unit-test checking a load is spread uniformly during and after
the deploys of both servers and clients. This critical test should be added to gain
more confidence in the changes we do in Aperture.

RB_ID=868026"
jcrossley,2016-09-30 01:16:16,https://api.github.com/repos/twitter/finagle/git/commits/48abb49f638d58eaca1ab3674c4ea7dfd6debdfa,48abb49f638d58eaca1ab3674c4ea7dfd6debdfa,"finagle/finagle-kestrel: Add turned-off toggle to turn on Netty 4

Problem

We'd like a way to slowly roll out Netty 4 for the
Finagle Kestrel client.

Solution

Add a toggle, com.twitter.finagle.kestrel.UseNetty4,
currently turned off, that can be used to turn on Netty4.

RB_ID=871831"
kevinoliver,2016-09-30 00:53:06,https://api.github.com/repos/twitter/finagle/git/commits/7a3749893de93f31a9526b664b7ab7b43c38da0c,7a3749893de93f31a9526b664b7ab7b43c38da0c,"finagle-core: Expose ClientBuilder.configured as public API

Problem

In the interest of removing some lesser used `ClientBuilder` methods
client sometimes need access to modify the underlying `Stack.Params`.

Solution

Expose `configured` methods publicly. While in there, I added some
comments and fixed some static analysis warnings in ClientBuilder and
Stack.scala.

RB_ID=876099"
jcrossley,2016-09-29 20:24:14,https://api.github.com/repos/twitter/finagle/git/commits/299c84b20138a7731ceac65dc051095ca4dd67ec,299c84b20138a7731ceac65dc051095ca4dd67ec,"finagle/finagle-kestrel: Add configuration for Netty version to stack client

Problem

In order to migrate the Kestrel client to Netty 4, we
need to provide a configuration option so we can roll
out this change to users.

Solution

Introduce Kestrel.param.KestrelImpl.{Netty3, Netty4} that
is used to configure the stack client.

RB_ID=866612"
spockz,2016-09-29 00:37:32,https://api.github.com/repos/twitter/finagle/git/commits/67998ef2208109cd095c7fcf719350d1e8f44a53,67998ef2208109cd095c7fcf719350d1e8f44a53,"finagle-http: Memoisation of counters and stats in StatsFilter

Problem

Outstanding todo for memoisation.

Solution

Added a Map with default value that creates the Stat/Counter on first
use.

Result

Cached Counters and Stats will be using in http.filter.StatsFilter.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=876135"
jcrossley,2016-09-27 21:52:14,https://api.github.com/repos/twitter/finagle/git/commits/a7049f7052be4a0bcacb0d0b3865378696dc3633,a7049f7052be4a0bcacb0d0b3865378696dc3633,"Kestrel: Migrate all Kestrel Finagle clients to use the stack client

Problem

Methods on c.t.f.kestrel.protocol.Kestrel are now deprecated.
Their usage with .codec() on ClientBuilder was blocking
the migration of Finagle Kestrel clients to Netty4.

Solution

Migrate all Kestrel clients to use the stack client.

RB_ID=870686
TBR=true"
kevinoliver,2016-09-27 18:08:20,https://api.github.com/repos/twitter/finagle/git/commits/67fb07093cf472f3e4d5b171725895232f15cf3e,67fb07093cf472f3e4d5b171725895232f15cf3e,"finagle-http: ServerErrorsAsFailures toggle now updates at runtime

Problem

The toggle `com.twitter.finagle.http.serverErrorsAsFailures` is only
changeable by restarts of the service which adds unnecessary friction.

Solution

Change the ResponseClassifier to check the toggle for every request.

RB_ID=875367"
bryce-anderson,2016-09-26 18:07:18,https://api.github.com/repos/twitter/finagle/git/commits/ceff1f8eb3a1274f332101cd7cb1e24f834781c5,ceff1f8eb3a1274f332101cd7cb1e24f834781c5,"finagle-thrift: abstract transport implementation

Problem

The finagle-thrift project is structured in a way that
exposes many netty3 types and has a package layout that makes
it difficult to add a netty4 implementation.

Solution

Restructure the package to remove netty3 types from most of
the public interface and move the netty3 specifics to a new
package, com.twitter.finagle.thrift.transport.netty3. The
notable exceptions are the ThriftServerFramedCodec and
ThriftClientFramedCodec which are both part of the public API
and widely used at this time.
The types in the c.t.f.thrift.legacy package have been removed
or moved to the netty3 specific package. The only public types
that were removed were those in Types.scala.

RB_ID=873982"
adriancole,2016-09-26 17:14:30,https://api.github.com/repos/twitter/finagle/git/commits/f8e76124d1b5f344176b79697b5c911e2c8f44fc,f8e76124d1b5f344176b79697b5c911e2c8f44fc,"finagle tracing: Tolerates reads of 128 bit X-B3-TraceId

Problem / Solution

The first step of transitioning to 128bit `X-B3-TraceId` is tolerantly
reading 32 character long ids by throwing away the high bits (any
characters left of 16 characters). This allows the tracing system to
more flexibly introduce 128bit trace id support in the future.

Ex. when `X-B3-TraceId: 463ac35c9f6413ad48485a3953bb6124` is received,
parse the lower 64 bits (right most 16 characters ""48485a3953bb6124"")
as the trace id.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=874365"
kevinoliver,2016-09-24 00:00:28,https://api.github.com/repos/twitter/finagle/git/commits/d885d9f0d363525314112354b4e477187dbbfa86,d885d9f0d363525314112354b4e477187dbbfa86,"finagle-mux: Add missing sbt dependency

Problem / Solution

sbt build broke when mux took a dependency on finagle-toggle

RB_ID=874957"
vkostyukov,2016-09-23 21:22:15,https://api.github.com/repos/twitter/finagle/git/commits/bbae00793c84a21c72146207432ebfe4c5808c25,bbae00793c84a21c72146207432ebfe4c5808c25,"finagle-netty4: Introduce pooling for receive buffers (default: disabled)

Problem

Finagle doesn't use yet one of the Netty 4's strong sides - pooling allocators.

Solution

While the end-to-end solution (pooling application-level buffers) requires a
major rework of an entire stack, there is something we can do today to make use
of pooling.

Given that we always copy receive buffers on the heap, they never leave the
pipeline hence may safely be pooled.

This RB introduces a new Finagle flag: `com.twitter.finagle.netty4.poolReceiveBuffers`
that enables/disables pooling of receive buffers (default: disabled).

We set the default chunk size to 2mb by various of reasons:

  1. This is the jemaloc default.
  2. We assume it should cover 99% of the allocation requests for recevie buffers
     and maintain a reasonaly low memory footprint.

The chunk size can be overriden using the `io.netty.allocator.maxOrder`.

**NOTE:** When enabled, it preallocates `N * 2 * 2mb` megabytes of the direct memory
at the application startup, where N is the number of logical cores JVM runs on

Result

This not only improves the CPU usage (fewer allocations/deallocations of the
direct buffers) and reduces allocations, but also makes the Netty 4 transport
implementation behave as Netty 3 implementation (that did a very primitive
pooling).

RB_ID=872940"
vkostyukov,2016-09-23 21:03:09,https://api.github.com/repos/twitter/finagle/git/commits/dddf83bb33c914ab2813175a7c42eccd14bff87e,dddf83bb33c914ab2813175a7c42eccd14bff87e,"finagle-netty: Remove NETTY-5294 workaround

Problem / Solution

We had to workaround a [Netty issue][0] and override the default allocator
(i.e., `ByteBufUtil.DEFAULT_ALLOCATOR`) via a system property.. This was fixed
in 4.1.1.Final and we're on 4.1.4.Final so we can safely remove the workaround.

[0]: https://github.com/netty/netty/issues/5294

RB_ID=873590"
roanta,2016-09-23 19:03:16,https://api.github.com/repos/twitter/finagle/git/commits/8cfd1b9a938664c3fb67b98ed9d4519fb66bcf6f,8cfd1b9a938664c3fb67b98ed9d4519fb66bcf6f,"finagle-mux: introduce toggle for netty4

Problem / Solution

We want to be able to start toggling the netty4 implementation for
thrift-mux. This patch introduces a toggle for the transport and
listener impls in mux.

RB_ID=874300"
cacoco,2016-09-23 18:50:46,https://api.github.com/repos/twitter/finagle/git/commits/4f29de2a8512fa4709ef70fc38c37b13bd14504b,4f29de2a8512fa4709ef70fc38c37b13bd14504b,"finagle-thriftmux: Allow ThriftMux.Clients to be filtered.

Problem

ThriftMux.Clients do not currently support a `filtered` method.
This is supported in the the `StdStackClient` but ThriftMux.Client
is a `StackBasedClient` (a superclass of the `StdStackClient`).

Solution

Implement a `filtered` method directly on ThriftMux.Client.

Result

Users will be able to directly filter on the ThriftMux.Client
in the same manner supported by Thrift.Client.

RB_ID=874560"
dschobel,2016-09-22 19:23:57,https://api.github.com/repos/twitter/finagle/git/commits/6ac0d8697044cb7754e1fed53c01b3eba4c9138f,6ac0d8697044cb7754e1fed53c01b3eba4c9138f,"finagle-mux: refactor tests to cover both netty impls

Problem / Solution

Refactor mux tests so that both n3 and n4 configs are tested.

RB_ID=874247"
nhnFreespirit,2016-09-21 20:37:09,https://api.github.com/repos/twitter/finagle/git/commits/727d148c7165270813a5f7cc6a5a25f6e1f285c0,727d148c7165270813a5f7cc6a5a25f6e1f285c0,"finagle-http2 support for NPN and ALPN over TLS

Problem

Currently finagle-http2 does not support ALPN or NPN.

Solution

Add NPN and ALPN support to finagle-http2 servers by adding a specialized
ApplicationProtocolNegotiationHandler to the pipeline if using TLS.

Result

If an HTTP/2 server is configured to use TLS and uses an SSL
implementation which supports it, clients can now use ALPN or NPN to
negotiate the protocol to use.

RB_ID=870193"
mosesn,2016-09-21 18:25:22,https://api.github.com/repos/twitter/finagle/git/commits/9c5a44e65aee761f8699c0221630a3c7a64ad396,9c5a44e65aee761f8699c0221630a3c7a64ad396,"finagle-core: strict_deps again

Problem / Solution:
Need a dep on util-app/java

RB_ID=873636"
kevinoliver,2016-09-21 00:29:27,https://api.github.com/repos/twitter/finagle/git/commits/fdac1bb71fc65bd7a0b8482706393f16ccb75585,fdac1bb71fc65bd7a0b8482706393f16ccb75585,"finagle: Enable fatal_warnings for more targets

Problem / Solution

There are compiler warnings throughout that prevent us from turning on
`fatal_warnings` in our builds. This commit fixes the warnings and
enables `fatal_warnings` for many targets:

- finagle-exception
- finagle-http
- finagle-kestrel
- finagle-mux
- finagle-thrift
- finagle-thriftmux

RB_ID=873299"
mosesn,2016-09-20 23:38:34,https://api.github.com/repos/twitter/finagle/git/commits/cf703139709d094e7abfa7b9c064b64626dc7442,cf703139709d094e7abfa7b9c064b64626dc7442,"finagle-http: Cleaned up generic tests

Problem

Many tests are duplicated in AbstractEndToEndTest

Solution

Stop running so many tests we don't care about over and over again
for ClientBuilder / ServerBuilder!

Result

End to end tests run faster and we have better coverage for StackClient
(ie what we actually care about).

RB_ID=873225"
kevinoliver,2016-09-19 23:09:50,https://api.github.com/repos/twitter/finagle/git/commits/58b7ec506ebee35bbdd83d6e41037c259cdf2545,58b7ec506ebee35bbdd83d6e41037c259cdf2545,"finagle-core: Fix warnings

Problem

There are compilation warnings throughout `finagle-core` which prevent
us from enabling `fatal_warnings` on builds.

Solution

Fix the code and enable `fatal_warnings` across all 4 targets.

RB_ID=872681"
dschobel,2016-09-19 22:10:09,https://api.github.com/repos/twitter/finagle/git/commits/d5cd21d0e627f568e7949967457136315dcd13b7,d5cd21d0e627f568e7949967457136315dcd13b7,"finagle-netty4: offer queue draining in channel transport

Problem

Reading off the underlying channel when there is buffered data in
ChannelTransport needlessly buffers additional messages while also
delaying our application of backpressure.

Solution

Drain the offer queue before reading off the channel.

Result

Less data buffered, faster application of backpressure at the
transport level.

RB_ID=872639"
jcrossley,2016-09-19 18:09:20,https://api.github.com/repos/twitter/finagle/git/commits/86adacfcc84eafe9d85079c5961bc1d90fb9aa9d,86adacfcc84eafe9d85079c5961bc1d90fb9aa9d,"finagle/finagle-memcached: Make netty4 toggle work

Problem

There was no test for the Netty4 toggle working in Memcached,
and it did not work; it could not be changed from the default.

Solution

Fix the toggle reading and add a test for it.

RB_ID=872105"
bryce-anderson,2016-09-19 17:52:38,https://api.github.com/repos/twitter/finagle/git/commits/50b2b950729e9c408ea0134b8324be6f80150451,50b2b950729e9c408ea0134b8324be6f80150451,"finagle-http: HttpNackFilter shouldnt return a body on HEAD request

Problem

The c.t.f.h.f.HttpNackFilter doesn't consider the request method when
forming a response from a Failure, which is a problem for HEAD
requests because the HttpNackFilter includes a body generated response,
which is a protocol error for a response to a HEAD request.

Solution

Don't add a body if the nacked request was a HEAD request.

RB_ID=872242"
bryce-anderson,2016-09-19 17:45:47,https://api.github.com/repos/twitter/finagle/git/commits/a48f4b2f3d65b3d7e4d1a6b0e897e1298d8b86fc,a48f4b2f3d65b3d7e4d1a6b0e897e1298d8b86fc,"finagle-mux: Wrap BadMessageException in Failure

Problem

The message from BadMessageException doesn't offer any details about the
peer that sent the message, making it more difficult to debug.

Solution

Wrap BadMessageException in Failure so that information about the peer
can be set by the filter chain and will be manifest in the exception
message.

RB_ID=870309"
atollena,2016-09-16 21:49:21,https://api.github.com/repos/twitter/finagle/git/commits/3a8d654b975d751ec78a8670124ed06eed57fb92,3a8d654b975d751ec78a8670124ed06eed57fb92,"Remove myself from OWNERS files

Good bye!

RB_ID=872591
TBR=true"
ryanoneill,2016-09-16 18:59:12,https://api.github.com/repos/twitter/finagle/git/commits/37cb866e5d04ddcef4bf17e3025faedd5046d8d9,37cb866e5d04ddcef4bf17e3025faedd5046d8d9,"finagle-core: Refactor Netty3 Listener and Transporter to use Params

Problem

Params are individually passed into the Netty3Transporter and the
Netty3Listener class constructors. This limits the ability to evolve
the internals of the listener and transporter without drastically
changing the API each time. Also, some parameters are updated
during the course of execution, and providing access to those
parameters is beneficial.

Solution

Modify the APIs of both Netty3Transporter and Netty3Listener to use
the Stack Params internally instead of converting the Params into
individual arguments.

RB_ID=871251"
cacoco,2016-09-16 17:57:01,https://api.github.com/repos/twitter/finagle/git/commits/2b903553716db03471d1b44eeed3531d294530a7,2b903553716db03471d1b44eeed3531d294530a7,"finagle-http: Revert ""Fix ResponseProxy for chunked transfers""

Problem

The change in RB 851799 actually causes the stated problem in
classes that extend ResponseProxy (as opposed to instantiating
an anonymous ResponseProxy in a filter) and thus breaks the
`c.t.inject.server.ResponseBuilder#EnrichedResponse` for chunked
responses in Finatra.

Solution

Revert the change and add a test that shows how to make the
intended use in a filter work along with a new test that tests
subclasses of ResponseProxy which fails without the revert
to ResponseProxy.

RB_ID=871611"
mosesn,2016-09-16 05:12:14,https://api.github.com/repos/twitter/finagle/git/commits/045c24ce5207277306637182f886b23d5dc2691b,045c24ce5207277306637182f886b23d5dc2691b,"finagle-http2: Allow connections to start with prior knowledge

Problem

We have many tests for http that don't convert well to http/2
cleartext, because in http/2 cleartext the first request is secretly
an http/1.1 request.  This means that instead of testing the http/2
implementation, we're still secretly testing the http/1.1 implementation.

Solution

The http/2 spec describes an alternate way of starting an http/2
connection, called ""prior knowledge"".  Both client and server must
know that they are speaking prior-knowledge http/2, and then they
can skip the upgrade step.

We introduce a PriorKnowledge configuration option, and when we
turn it on we remove the upgrade step from our pipelines.  On the
client-side, we can also simplify our transporter, which takes much
of its inherent complexity from having to judge whether each
connection is upgraded, so we've introduced the PriorKnowledgeTransporter,
a thin wrapper around an unbounded FutureCache[SocketAddress,
MultiplexedTransporter].

We've also added a ChannelHandler that
buffers requests to the prior knowledge http/2 client-side pipeline,
to avoid a race between when clients call `write` and the handler
has `channelActive` called on it, which is when it writes the
connection preface.

Result

We can reuse http tests like AbstractStreamingTest in our http/2
suite, and in the future, we will also be able to interoperate with
other http implementations that only support prior knowledge, like
grpc in particular.

RB_ID=870052"
cacoco,2016-09-14 21:15:43,https://api.github.com/repos/twitter/finagle/git/commits/227dd5b8a5cecdcb1ae80ddc762fa60d01f4bab9,227dd5b8a5cecdcb1ae80ddc762fa60d01f4bab9,"finagle-netty4: Revert ""Enable pooling of receive buffers""

Problem

RB 870956 may be responsible for a memory leak.

Solution

Fully revert the changes pending further investigation.

RB_ID=871685
NO-QUEUE=true"
dschobel,2016-09-14 17:54:45,https://api.github.com/repos/twitter/finagle/git/commits/77dd263cef47bb9a595c40e1abab30b1ceb52dbc,77dd263cef47bb9a595c40e1abab30b1ceb52dbc,"finagle-mux: reassemble tcp segments in wireshark mux dissector

Problem

The mux wireshark plugin fails to classify fragmented mux messages.
This limits the practical utility of the dissector as all messages
in excess of 1500 bytes are fragmented by the MTU imposed by ethernet.

Solution

Use the dissect_tcp_pdus api to desegment the fragmented mux messages.
This patch also add the ""mux overhead"" field to the dissector which
trivializes graphing the network efficiency of mux traffic.

RB_ID=871474"
vkostyukov,2016-09-13 21:45:29,https://api.github.com/repos/twitter/finagle/git/commits/8262af2f403e9207a9b5c6cdc00924b63952983b,8262af2f403e9207a9b5c6cdc00924b63952983b,"finagle-netty4: Enable pooling of receive buffers

Problem

Finagle doesn't use yet one of the Netty 4's strong sides - pooling allocators.

Solution

While the end-to-end solution (pooling application-level buffers) requires a
major rework of an entire stack, there is something we can do today to make use
of pooling.

Given that we always copy receive buffers on the heap, they never leave the
pipeline hence may safely be pooled.

This not only improves the CPU usage (fewer allocations/deallocations of the
direct buffers) and reduces allocations, but also makes the Netty 4 transport
implementation behave as Netty 3 implementation (that did a very primitive
pooling).

It's also important to mention that this is the first Netty 4 change that makes
our new transport implementation (Netty 4) faster than the old one (Netty 3).

RB_ID=870956"
kevinoliver,2016-09-13 20:16:50,https://api.github.com/repos/twitter/finagle/git/commits/416e26e1e1b3f44278b6914cc7bf0e1c898fb172,416e26e1e1b3f44278b6914cc7bf0e1c898fb172,"finagle-core: Add scaladocs to ClientBuilder.keepAlive

Problem

Its not as clear as it could be for how users should migrate to the
Stack-based API for `ClientBuilder.keepAlive`.

Solution

Provide example code in the Scaladocs.

RB_ID=871106"
cacoco,2016-09-13 19:53:36,https://api.github.com/repos/twitter/finagle/git/commits/7bc0bc2b20dbc6a85a20e1bce08400ede0c95bad,7bc0bc2b20dbc6a85a20e1bce08400ede0c95bad,"finagle-http: Fix issue in `c.t.finagle.http.RequestBuilder` when the URI host contains underscores

Problem

java.net.URI will return a `null` when a URI host contains a
technically invalid underscore (""_""\) character.

Solution

In this case we fallback to the host from the URL.

Result

The ability to build requests to URLs that contain underscores.

RB_ID=870978"
ryanoneill,2016-09-13 19:10:34,https://api.github.com/repos/twitter/finagle/git/commits/247b78b4d218b06003a0c076e47d080ed392ec1a,247b78b4d218b06003a0c076e47d080ed392ec1a,"finagle-core: Redo Tests for Netty3Transporter and Netty3Listener

Problem

The unit tests for Netty3Transporter and Netty3Listener are either
incomplete (Netty3Transporter) or non-existant (Netty3Listener).
They do not fully run through the criteria used for adding handlers
to each pipeline. This makes refactoring more difficult than it
should be.

Solution

Add a unit test for Netty3Listener and rework the existing ones for
Netty3Transporter.

RB_ID=870971"
kevinoliver,2016-09-13 19:06:23,https://api.github.com/repos/twitter/finagle/git/commits/7f97ba09719d54cf2923d9392467c17426d5f6b8,7f97ba09719d54cf2923d9392467c17426d5f6b8,"oss: Remove --error from travis commands

Problem / Solution

When Scalatests fail, they log at info level which means we don't have
enough details in our logs to diagnose problems. See [1] for example.

[1] https://s3.amazonaws.com/archive.travis-ci.org/jobs/159412682/log.txt

RB_ID=871128"
kevinoliver,2016-09-13 00:55:19,https://api.github.com/repos/twitter/finagle/git/commits/4219561f9f3bf50ffc30bfeb5f25e39a9d9c4c54,4219561f9f3bf50ffc30bfeb5f25e39a9d9c4c54,"Revert ""finagle-core: Make LoadBalancerFactory.StackModule concurrent""

This reverts RB ID 870208.

RB_ID=870930
TBR=true
NO-QUEUE=true"
kevinoliver,2016-09-12 22:13:34,https://api.github.com/repos/twitter/finagle/git/commits/20752def2d52469ddfc53975b89989d612facfbc,20752def2d52469ddfc53975b89989d612facfbc,"finagle-core: Make LoadBalancerFactory.StackModule concurrent

Problem

There is unnecessary synchronization in `LoadBalancerFactory.StackModule`.

Solution

Make the code concurrent via an `AtomicReference`.

RB_ID=870208"
mosesn,2016-09-08 23:06:21,https://api.github.com/repos/twitter/finagle/git/commits/06908573ecd71a9142c3992d5671e4b4c772e922,06908573ecd71a9142c3992d5671e4b4c772e922,"finagle-http2: Removed byte handlers from http2 frame pipeline

Problem

After constructing the child handlers in the http/2 server-side
codec, we then add all of the same initializers to each of the child
handlers.  This works OK, until we turn on SSL, at which point SSL
dies because it expects bytes and doesn't know what to do with
http/2 frames.  We should make sure that none of the handlers which
expect bytes are in the http/2 child handlers.

Solution

Separate the byte handlers and the domain object handlers into two
separate ChannelInitializers, and only pass the domain object ones
to the user.

Result

The child handlers have all of the stuff we expect them to have,
and none of the stuff we don't expect them to have!

RB_ID=868869"
ryanoneill,2016-09-08 20:40:23,https://api.github.com/repos/twitter/finagle/git/commits/4522a40a95392861cd008576dc1ce412a033fd5c,4522a40a95392861cd008576dc1ce412a033fd5c,"finagle-core: Remove Unused Import Warnings from Tests

Problem

When working in finagle-core, unused import warnings are causing
a great deal of noise and distraction.

Solution

Fix them by removing the unused imports.

RB_ID=869774"
kevinoliver,2016-09-08 16:20:51,https://api.github.com/repos/twitter/finagle/git/commits/493a768eb6beca039f522c5fd45027f3d808e743,493a768eb6beca039f522c5fd45027f3d808e743,"finagle-http: Introduce toggle for treating 500s as failures

Problem

`finagle-http` uses the default `ResponseClassifier` and as such does
not treat server error status codes (500-599) as failures. This in
turn means without user effort, the default behavior for stats is
surprising and the client behavior for failure accrual is suboptimal.

Solution

Introduce a toggle, ""com.twitter.finagle.http.serverErrorsAsFailures"",
so that this functionality can be changed in a controlled manner.

RB_ID=869303"
olix0r,2016-09-08 00:34:00,https://api.github.com/repos/twitter/finagle/git/commits/d0caaedd8e66a7ec926eb71b7f22bcf94f7679c7,d0caaedd8e66a7ec926eb71b7f22bcf94f7679c7,"finagle-http: fix connection management for non-keepalive requests.

Problem

When issuing HTTP/1.0 or non-keep-alive requests (i.e. with Connection: close),
the connection may be marked as closable before a request/response has
completed.  Specifically, when finagle-http's ConnectionManager observes a
non-keepalive request, it may satisfy onClose before a response is observed.
This causes the entire connection to be torn down (and the response canceled)
before the response can be received.

Solution

Consider a connection as closable only when an equal number of requests and
responses have been observed.

Fixes twitter/finagle#549

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=868767"
jcrossley,2016-09-07 23:21:03,https://api.github.com/repos/twitter/finagle/git/commits/56972ae78d2e3ac4226789319238657918904c3e,56972ae78d2e3ac4226789319238657918904c3e,"finagle/doc: Fix error in doc file formatting

Problem / Solution

Sphinx needed some spacing removed to not throw
errors when generating docs.

RB_ID=869422
TBR=true"
jcrossley,2016-09-07 23:19:33,https://api.github.com/repos/twitter/finagle/git/commits/40c54abbc1d3fa8e379fc5ecdbb2611135a4c026,40c54abbc1d3fa8e379fc5ecdbb2611135a4c026,"finagle/finagle-memcached: Add turned-off toggle to turn on Netty 4

Problem

We'd like a way to slowly roll out Netty 4 for the
Finagle Memcached client.

Solution

Add a toggle, com.twitter.finagle.memcached.UseNetty4,
currently turned off, that can be used to turn on Netty4.

RB_ID=868540"
asheshambasta,2016-09-07 22:43:54,https://api.github.com/repos/twitter/finagle/git/commits/022cab918c6e020860f28a5cf43077fc1add0b13,022cab918c6e020860f28a5cf43077fc1add0b13,"specify Scala version in quickstart for versions >= `6.36.0`.

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=868916"
kevinoliver,2016-09-07 21:36:36,https://api.github.com/repos/twitter/finagle/git/commits/3b000fbc8e1974541db2b0ae1ccf8053bf5c0193,3b000fbc8e1974541db2b0ae1ccf8053bf5c0193,"finagle-http: Properly classify retryable nacks

Problem

`HttpResponseClassifier.ServerErrorsAsFailures` classifies a retryable
nack as a `ResponseClass.NonRetryableFailure` when it is in fact
retryable.

Solution

Classify it as a `ResponseClass.RetryableFailure`.

RB_ID=869182"
jcrossley,2016-09-07 17:19:50,https://api.github.com/repos/twitter/finagle/git/commits/56e7cf55b5174fbb3e481e73984ea62a3a3c63da,56e7cf55b5174fbb3e481e73984ea62a3a3c63da,"twitter-oss: Prepare OSS libraries for release

Problem

We want to release the next versions our of Twitter OSS libraries:
  - util -> 6.37.0
  - ostrich -> 9.21
  - scrooge -> 4.10.0
  - finagle -> 6.38.0
  - twitter-server -> 1.23
  - finatra -> 2.4.0

Solution

Prepare libraries for their next releases.

RB_ID=868959"
kevinoliver,2016-09-07 16:43:15,https://api.github.com/repos/twitter/finagle/git/commits/4f146db7561f9a1210e754b4cceb387d9b85e0ee,4f146db7561f9a1210e754b4cceb387d9b85e0ee,"Update docs on contributing

Problem / Solution

The docs for contributions have gotten a bit out of date and were in
need of some touchups.

RB_ID=868780"
kevinoliver,2016-09-07 16:40:25,https://api.github.com/repos/twitter/finagle/git/commits/d09ee24e231acc5c42c604cba285cd2eb6e6bf55,d09ee24e231acc5c42c604cba285cd2eb6e6bf55,"finagle-stats: Add dependency on finagle-toggle

The sbt build for `finagle-stats` did not include a dependency on
`finagle-toggle`.

RB_ID=869157"
mosesn,2016-09-07 16:02:23,https://api.github.com/repos/twitter/finagle/git/commits/e863e2a84b468522317239929c7dcaa817f6cd63,e863e2a84b468522317239929c7dcaa817f6cd63,"finagle-http2: Implement client-side streaming

Problem

We want to be able to reuse the http/1.1 netty pipeline, but some
of the netty objects don't have a place to put the stream id, so
we can only use the subset of netty http objects that have headers.
We also need each stream to be able to use the http/1.1 netty
pipeline separately, so that aggregation and disaggregation works
properly–imagine a handler accidentally aggregating over several
different pipelines.

Solution

We can get around this by using a wrapper object that has space for
a stream id, and then unwrapping the wrapper object, sending it
through a synthetic netty pipeline just for that stream, and then
rewrapping the wrapper object.  By having a synthetitc netty pipeline
per stream, this also solves our problem around aggregation and
disaggregation.

While we were in here, we moved the SchemifyingHandler to only be
added on upgrade, which simplifies the downgrade path.  I also
figured out that a test that seemed wrong was actually right, but
I had screwed up aggregation, which was why it was breaking.

Result

Client-side streaming works, which means that http/2 now works end
to end in finagle.

RB_ID=866174"
kevinoliver,2016-09-06 23:45:38,https://api.github.com/repos/twitter/finagle/git/commits/2dad41c80b8730677e2bb4c281fcec40ee3a84f7,2dad41c80b8730677e2bb4c281fcec40ee3a84f7,"finagle-stats: Add toggle for histogram export

Problem

By default, finagle-stats exports full histogram details even when
there were no data points recorded. We want to change this behavior,
and we want to do it in a controlled manner.

Solution

Introduce a toggle, ""com.twitter.finagle.stats.exportEmptyHistograms""
which we will use to change the default behavior in the future.

RB_ID=868317"
kevinoliver,2016-09-06 23:09:37,https://api.github.com/repos/twitter/finagle/git/commits/8ead03844597897a4a5e759ed2573c228e044078,8ead03844597897a4a5e759ed2573c228e044078,"finagle-toggle: Promote out of experimental status

Problem / Solution

`finagle-toggle` is no longer considered experimental.

RB_ID=868819"
ryanoneill,2016-09-06 19:37:30,https://api.github.com/repos/twitter/finagle/git/commits/bdf3d5cb6868bdcaca4d7677eabfe18c4e19132b,bdf3d5cb6868bdcaca4d7677eabfe18c4e19132b,"finagle-core: Change TlsConfig Parameter Names from content to context

Problem

The ClientSslContext and ClientSslContextAndHostname TlsConfig options
contain a parameter incorrectly named as 'content' instead of 'context'.

Solution

Rename them from 'content' to 'context'.

RB_ID=868791"
cacoco,2016-09-01 23:24:21,https://api.github.com/repos/twitter/finagle/git/commits/54f8afb566d45429542c5e1edfe8f33709ca0ff1,54f8afb566d45429542c5e1edfe8f33709ca0ff1,"twitter-oss: Use sbt 0.13.9 and update Travis CI configuration

Problem

Some of our oss libraries say they use sbt 0.13.9 in the
project/build.properties but still download the sbt-launch for
0.13.8 in their respective sbt scripts. Additionally we'd like
to disable sbt colorized output and reduce logging verbosity
in our TravisCI builds.

Solution

Update the necessary sbt scripts to specify an sbt version of
0.13.9.

Make the necessary changes to the .travis.yml files.

Result

Less logging and easier to read logs in TravisCI. Actual use
of the specified sbt version.

RB_ID=868087
TBR=true"
dschobel,2016-09-01 19:13:45,https://api.github.com/repos/twitter/finagle/git/commits/60ce332ea71f384deae4e053dfd85e62332249ed,60ce332ea71f384deae4e053dfd85e62332249ed,"finagle/*, util/*, csl/* - replace c.t.io.Charset usage with java StandardCharsets

Problem / Solution

s/c.t.io.Charset/java.nio.charset.StandardCharsets/ to remove deprecation warnings.

RB_ID=867497"
dschobel,2016-09-01 19:04:24,https://api.github.com/repos/twitter/finagle/git/commits/cdcd946ab7c26387be1b79b0a1f1c4d9abfa1ad2,cdcd946ab7c26387be1b79b0a1f1c4d9abfa1ad2,"finagle-mux: more dissector fixes + add missing field to mux spec for tdiscard

Problem(s)

1. Marker messages (tlease and tdiscard) aren't dissected because
   the plugin sets a minimum tag of 1 while marker messages have tag 0.
2. Tdiscard's `why` field is ignored.
3. The old (but used) encoding type of tdiscard is missing.
4. The mux spec's description of tdiscard omits the encoding of the
   tag to be discarded.

Solution(s)

Fixes for 1-4 should be self-explanatory. This patch also introduces
a special case in the dissector for the magic `can tinit` packet
so that it doesn't appear as a normal RErr message in traces.

RB_ID=865991"
roanta,2016-09-01 18:37:38,https://api.github.com/repos/twitter/finagle/git/commits/6df34c39548bf43e0849aa8a6dffc8339dd803e0,6df34c39548bf43e0849aa8a6dffc8339dd803e0,"finagle-netty4: Fix I/O thread leak

Problem

rb/865672 introduced a bug by scaling the number of I/O workers
with clients and servers. Each `NioEventLoopGroup` will create
a fixed amount of threads and we create one instance per client
and server.

Solution

Change the `WorkerPool` param to create the `EventLoopGroup`. This
leaks netty4 types, but it's in the finagle-netty4 package so it
seems legitimate.

RB_ID=867862"
jcrossley,2016-09-01 18:17:59,https://api.github.com/repos/twitter/finagle/git/commits/be405415caeb29c7bc0dbb4ebcb1e62c83ab4bcd,be405415caeb29c7bc0dbb4ebcb1e62c83ab4bcd,"finagle/finagle-thriftmux: Remove gauges in ThriftEmulator

Problem

We create gauges per-connection in ThriftEmulator
on the hotpath. Gauge creation can be slow if gauge cleanup
is happening on another thread, which stalls the connection.

Solution

Remove the gauges in ThriftEmulator, because it already contains
counters for the same stats. If, later, we decide that these gauges
are useful, they will need to be moved to the ListeningServer and
references passed into ThriftEmulator. This way, the gauges are tied
to the lifecycle of the ListeningServer, and not created per-connection
in ThriftEmulator.

RB_ID=867459"
kevinoliver,2016-09-01 01:45:38,https://api.github.com/repos/twitter/finagle/git/commits/9b3ae5ce84ab248a483a89af875247119efa1ef7,9b3ae5ce84ab248a483a89af875247119efa1ef7,"finagle-toggle: Add optional source to ToggleMap.newMutable

Problem / Solution

There are times when the `toString` output of `ToggleMap.newMutable`
is not as informative as you'd like. This change introduces an
optional String field that allows it to be customized.

RB_ID=867107"
mosesn,2016-08-31 23:10:08,https://api.github.com/repos/twitter/finagle/git/commits/a8db4b3d10b250000e06a4f921a94d7d360bcf10,a8db4b3d10b250000e06a4f921a94d7d360bcf10,"finagle-http: Make StreamingTest generic and provide a netty4 implementation

Problem

We have nice end to end streaming tests, but they're only for netty3
for now.

Solution

Make them abstract so that they can be used with other implementations.

Result

We now have a solid streaming test suite for netty4 http, which
helps us be more confident in our netty4 http implementation.  Once
we add support for using http2 without the handshake works, we'll
be able to use the abstract test suite for that too.

RB_ID=867121"
bryce-anderson,2016-08-31 17:15:07,https://api.github.com/repos/twitter/finagle/git/commits/813caf312b6f3bcabd37069ad388a3ca017da09d,813caf312b6f3bcabd37069ad388a3ca017da09d,"finagle-mux: Increase verbosity of mux decoding error message

Problem

The error message returned by the mux Message.decode function could be
more useful by including more information about the remaining message.

Solution

Include information about the payload size and print the first 16 bytes
of the payload in the exception message.

RB_ID=867156"
atollena,2016-08-31 17:03:10,https://api.github.com/repos/twitter/finagle/git/commits/0cc1eb4d779d6219c2c27087c5d311489107ac87,0cc1eb4d779d6219c2c27087c5d311489107ac87,"finagle-core: move InetResolver into its own file

Problem
--

`InetResolver` is implemented in Resolver.scala. It makes it difficult
to find and read.

Solution
--

Move InetResolver into the InetResolver.scala

RB_ID=867171"
stefanlance,2016-08-30 23:31:27,https://api.github.com/repos/twitter/finagle/git/commits/c762f9f8c4cca81c5d56993a76db04958b273e14,c762f9f8c4cca81c5d56993a76db04958b273e14,"finagle-core: Make nack AC filter tests less likely to fail

Problem

We cannot control exactly how much a NACK / non-NACK will change the Ema, so
it's possible for the last call to `testGetNack()` in a while loop to drop the
`emaValue` below the `DefaultAcceptRateThreshold`, making `assert`s like
`assert(1 > multiplier * successRate)` fail.

Solution

1. Increase `extraProbability`, to make the `emaValue` stop updating when it is
farther from the `DefaultAcceptRateThreshold`, and
2. Increase the unit tests' Ema window duration, to make individual NACKs /
non-NACKs cause smaller changes in the `emaValue`.

Results

The nack AC filter unit tests that use `extraProbability` will fail less often.

RB_ID=866948"
stuhood,2016-08-30 01:36:40,https://api.github.com/repos/twitter/finagle/git/commits/e4f6a8380f885938023647ee50c5d3336445500f,e4f6a8380f885938023647ee50c5d3336445500f,"Strip unused scrooge dependencies

Problem

When used with [pants](http://www.pantsbuild.org), scrooge codegen decides
whether to add `service` or `structs` dependencies based on examining symbols in
the thrift files. Thrift `exception` definitions currently require the same
dependencies as `services`, but are not detected as such.

Solution

To avoid adding service dependencies to all structs-only definitions, we add a
dummy service to targets which declare exceptions, but don't declare services.

Result

Unnecesary deps are pruned from generated java/scala services/structs.

RB_ID=866726"
stefanlance,2016-08-30 01:26:11,https://api.github.com/repos/twitter/finagle/git/commits/875056137ebe174152f959d6ee737d28360f067d,875056137ebe174152f959d6ee737d28360f067d,"finagle-core: Give nack AC filter initial seed of 1

Problem

If the first request the client sends is NACKed, the filter's Ema value will
update to 0. This means the filter will drop every subsequent request and the
Ema value will never increase.

Solution

Initialize the Ema value at 1.

Results

The filter will avoid situations in which a NACK on first request causes the
filter to drop every subsequent request.

RB_ID=866721"
vkostyukov,2016-08-29 23:48:44,https://api.github.com/repos/twitter/finagle/git/commits/723fdf90feb68bd269f0f70d8a915716c7db20c3,723fdf90feb68bd269f0f70d8a915716c7db20c3,"finagle|util: Make N3 worker pool initialize lazy

Problem

Netty 3 worker pool is always initialized (threads are created, file descriptors registered, etc)
no matter if it's used or not in Finagle (i.e., when Netty 4 is enabled for all clients and servers).

This happens during `GlobalFlag`s initialization, which attempts to load very scala object and check
if it could be a flag. To perform this check (check if a given annotation is present), a class
should be loaded and initialized.

Solution

The RB involves the following changes to make N3 worker pool lazy - only initialised we needed.

  - Ensure `GlobalFlag` API skips Scala package objects that could never be flags
  - Move N3 `WorkerPool` definition from its  own objects into an enclosing `c.t.f.netty3` as `val`

This also moves N4 global flag for the number of workers to make it more user friendly and symmetric
to its N3 version.

Before:

```
 -com.twitter.finagle.netty4$.package$.numWorkers=5
```

After:

```
-com.twitter.finagle.netty4.numWorkers=5
```

RB_ID=865831"
jcrossley,2016-08-29 18:38:16,https://api.github.com/repos/twitter/finagle/git/commits/137845527ca9273a31caaffd775cd45ce90162b4,137845527ca9273a31caaffd775cd45ce90162b4,"finagle-http: Include Retries context in request header

Problem

We propagate the Retries on a request in the request's Context.
For HTTP, we also want to serialize/deserialize this context
in the request's headers.

Solution

Write and read the Retries context to/from the HTTP request's
headers.

RB_ID=864852"
dschobel,2016-08-26 20:26:18,https://api.github.com/repos/twitter/finagle/git/commits/3889710ecda3ae6c01aaf1b9e6ac18b21c1ea0aa,3889710ecda3ae6c01aaf1b9e6ac18b21c1ea0aa,"finagle-http2: add dschobel to owners

add dschobel to finagle-http2 owners

RB_ID=866158"
mosesn,2016-08-26 19:22:10,https://api.github.com/repos/twitter/finagle/git/commits/0e4c7d640f602971d604378e51364129c6346b07,0e4c7d640f602971d604378e51364129c6346b07,"finagle-http2: Ban too long stream test

Problem

Travis seems to have a problem with the TooLongStream test in the
client downgrade test.

Solution

Disable it until we can sort it out.

RB_ID=866154"
cacoco,2016-08-26 01:17:35,https://api.github.com/repos/twitter/finagle/git/commits/aa4f855a8bea18429c2ad99f6184bcd4d4645227,aa4f855a8bea18429c2ad99f6184bcd4d4645227,"twitter-oss: Prepare OSS libraries for release

Problem

We want to release the next versions our of Twitter OSS libraries:
 - util -> 6.36.0
 - ostrich -> 9.20
 - scrooge -> 4.9.0
 - finagle -> 6.37.0
 - twitter-server -> 1.22
 - finatra -> 2.3.0

Solution

Prepare libraries for their next releases.

RB_ID=865948
TBR=true"
roanta,2016-08-25 22:48:52,https://api.github.com/repos/twitter/finagle/git/commits/84d8f78f2e33ef9be4a68b53ae24d46994f73288,84d8f78f2e33ef9be4a68b53ae24d46994f73288,"finagle-netty4: Introduce WorkerPool param

Problem

There are instances where we want coarse grained control over the
thread pool which executes I/O work. For example, we may want
isolation from the standard thread pool to facilitate debugging
(e.g. ShadowAdminServer). There is no way to configure the worker
thread pool in netty4.

Solution

Introduce the worker pool param as a generic and netty independent
parameter which takes a `java.util.concurrent.ExecutorService`.
Thread this through for clients and servers.

RB_ID=865672"
dschobel,2016-08-25 21:04:10,https://api.github.com/repos/twitter/finagle/git/commits/e61c61c9532419caa4b6a7128f9829a4e455617e,e61c61c9532419caa4b6a7128f9829a4e455617e,"finagle-core: specify how maxConcurrentRequests is applied
Problem / Solution

maxConcurrentRequests's scaladoc doesn't specify whether the limit
is applied globally or per connection so let's specify it.

RB_ID=865732"
dschobel,2016-08-25 20:11:04,https://api.github.com/repos/twitter/finagle/git/commits/89bb7f8bee47c4c26e357c092cee352c19b9da0e,89bb7f8bee47c4c26e357c092cee352c19b9da0e,"finagle-mux: wireshark dissector fixups

Problem

The wireshark mux dissector omits the deprecated but in-use rerr type
code and is off by one on the minimum valid tag. Consequently the heuristic
dissector misses mux handshakes.

Solution

Add the missing message type and fix the minimum tag value.

Result

The mux dissector's heuristic indentifies mux handshakes.

RB_ID=865583"
jcrossley,2016-08-25 19:35:11,https://api.github.com/repos/twitter/finagle/git/commits/3da02f4a3ac0ab7cba1d2230416da1f24ccbc967,3da02f4a3ac0ab7cba1d2230416da1f24ccbc967,"finagle: Include dependencies for finagle-integration in Build.scala

Problem / Solution

Include scrooge and test dependencies of finagle-thriftmux
for finagle-integration.

RB_ID=865779
TBR=true"
kevinoliver,2016-08-25 17:56:17,https://api.github.com/repos/twitter/finagle/git/commits/d8ae50d7534c424ea3bd6c2f6b725395c6399938,d8ae50d7534c424ea3bd6c2f6b725395c6399938,"finagle-http: Various nitpicky cleanups

Problem / Solution

finagle-http had a smattering of minor nitpick cleanups that had been
waiting for after the httpx migration. The migration is long done and
these can be completed.

RB_ID=865085"
stefanlance,2016-08-24 21:41:34,https://api.github.com/repos/twitter/finagle/git/commits/b64f1728e502ebe743275f0326cb02aa72f64ae3,b64f1728e502ebe743275f0326cb02aa72f64ae3,"finagle, finagle-core: Change ""success"" terminology to ""accept"" in nack AC filter

Problem

The nack AC filter imprecisely used the term ""success"" (as in ""success rate""): a
""success"" to the filter is actually any response that is not a nack. This can
include Finagle `Failure`s.  Furthermore, the success rate is defined as the
number of successes divided by the number of reqeusts in some period of time,
but this is not what the filter's ""success rate"" is, because of what it
considers to be a ""success."" This imprecise use of the term ""success"" is
confusing.

Solution

Change all instances of ""success"" that actually mean ""not a nack"" to be
""accept.""

Results

The filter is easier to understand and will be easier for future developers and
service owners to reason about.

RB_ID=865104"
mosesn,2016-08-24 21:05:56,https://api.github.com/repos/twitter/finagle/git/commits/3f2a577c153471ed013090e7b7575394eef0d1ec,3f2a577c153471ed013090e7b7575394eef0d1ec,"finagle-http2: Client-side streaming responses

Problem

Netty doesn't have a built-in solution for streaming responses, so
we need to roll our own.

Solution

Provide an analog to InboundHttp2ToHttpAdapter that converts to a
message that preserves the stream id.

Result

Client-side streaming works for responses (although still not for
requests).

RB_ID=862437"
jcrossley,2016-08-24 17:31:12,https://api.github.com/repos/twitter/finagle/git/commits/c546c3baa295b7deabcf28dc32b7c3d464eb0d08,c546c3baa295b7deabcf28dc32b7c3d464eb0d08,"finagle/finagle-core: Propagate retries on a request in the Context

Problem

We'd like to be able to record the number of retries on a request
from the server's perspective. In order to do this, the number
of retries need to be propagated.

Solution

Propagate the number of retries (from one level up) in the Context
of a request.

RB_ID=862640"
kevinoliver,2016-08-24 17:11:45,https://api.github.com/repos/twitter/finagle/git/commits/8f35ad45af4b51c2f567139b6a0b876be29da115,8f35ad45af4b51c2f567139b6a0b876be29da115,"finagle-core: Remove deprecated methods from ClientBuilder

Problem

There are some deprecated methods on `c.t.f.builder.ClientBuilder`
that have reached the end of their lives.

Solution

Removed
- `connectionTimeout`, use `tcpConnectTimeout`
- `expFailFast`, use `failFast`
- `buildFactory`, use other `buildFactory` methods
- `build`, use other `build` methods

RB_ID=864622
TBR=true"
jcrossley,2016-08-22 21:59:19,https://api.github.com/repos/twitter/finagle/git/commits/7516f95fbf4b9d224b61e5ade6b2111357d9e028,7516f95fbf4b9d224b61e5ade6b2111357d9e028,"finagle: Move Deadline into c.t.f.context package

Problem

As we add more keys onto a requests's context, those
objects are organized in the com.twitter.finagle.context
package. Deadline should also move into this package.

Solution

Move com.twitter.finagle.Deadline into
com.twitter.finagle.context.Deadline.

RB_ID=864148
TBR=true"
stefanlance,2016-08-22 19:04:54,https://api.github.com/repos/twitter/finagle/git/commits/e4a7b201dbbc79332f84f7518b603aa6185f6a64,e4a7b201dbbc79332f84f7518b603aa6185f6a64,"finagle-core: Add Nack admission control metrics to Finagle's metrics docs

Problem

The metrics exported by the Nack admission control filter are not documented.

Solution

Add them to Finagle's metrics docs.

Results

Service owners can more easily understand the Nack AC metrics.

RB_ID=864066"
stefanlance,2016-08-22 18:04:07,https://api.github.com/repos/twitter/finagle/git/commits/b49fa22d6daa450a7ff452a9c202500f0b46af67,b49fa22d6daa450a7ff452a9c202500f0b46af67,"finagle: Consider only NACKs as failures in Nack AC filter

Problem

The filter decreases its success rate EMA when it receives any kind of
`Failure`. The purpose of the filter is to back off when the cluster is
overloaded, and Finagle servers typically respond with NACKs to indicate
overload. Therefore the filter can undesirably drop requests if the cluster is
not overloaded.

Solution

Make the filter decrease its EMA only when it receives NACKs.

Results

The filter drops requests only when the cluster is overloaded.

RB_ID=863040"
kcraigie,2016-08-22 17:19:23,https://api.github.com/repos/twitter/finagle/git/commits/8cfe2fdbf2424304f25ac9f9351cb7b9f36908d0,8cfe2fdbf2424304f25ac9f9351cb7b9f36908d0,"[finagle-core] Zk2Resolver should retry on DNS failures

Problem:

FixedInetResolver, which is used by Zk2Resolver for cached name resolution,
never retries a failed DNS lookup.

Solution:

Changed FixedInetResolver to optionally retry failed DNS requests with a
configurable backoff scheme, and preserve the old non-retrying behavior by
default.  Only Zk2Resolver is using the retry logic, to avoid breaking existing
clients.

Specific changes:

- Changed FixedInetResolver to optionally accept a backoff stream to retry DNS
failures
- Added a FixedInetResolver unit test around retrying DNS failures
- Changed Zk2Resolver to accept an InetResolver to facilitate testing

RB_ID=860058"
jcrossley,2016-08-20 00:22:14,https://api.github.com/repos/twitter/finagle/git/commits/8db76bf5abad9cd24eb9fc00c6d17b75f5d102fc,8db76bf5abad9cd24eb9fc00c6d17b75f5d102fc,"finagle/finagle-memcached: Fix broken external memcached tests

Problem

Tests using external Memcached were broken in MemcachedTest
and ReplicationClientTest.

Solution

Fix the tests.

RB_ID=864104"
stefanlance,2016-08-19 23:58:45,https://api.github.com/repos/twitter/finagle/git/commits/9f06008c19fb2c0f9eeb0e7aae94a400d80494d5,9f06008c19fb2c0f9eeb0e7aae94a400d80494d5,"finagle: Change threshold AC filter EMA window size parameter from Long to Duration

Problems

1. The threshold AC filter's EMA window size parameter is a unitless `Long`.
This is difficult to reason about.
2. When the filter processes a request it increases its EMA timestamp by 1.
Therefore the timestamp counts the number of generated requests. The problem
with this is that the EMA is updated to the same final value when it receives a
burst of 1000 requests over 1 ms as when it receives 1000 requets over 1 minute
(for example). In other words, the EMA's value is not sensitive to the time
delta between each request. Respecting time deltas between requests is important
in reality, because we want recent requests to influence the EMA more than older
requests.

Solutions

1. Update the window size parameter to be a `Duration` instead of a `Long`.
2. Use a timestamp based on the actual time instead of on the number of
generated requests.

RB_ID=862392"
kevinoliver,2016-08-19 22:38:01,https://api.github.com/repos/twitter/finagle/git/commits/9319d50e7ed492a81b772e902bae224ae6fb71a7,9319d50e7ed492a81b772e902bae224ae6fb71a7,"finagle, twitter-server: Document Toggles

Problem

Toggles needed to be covered in the user guide and Toggles
lacked a few basic primitives to make working with them easier.

Solution

Add sections to the user guide and added a few primitives.

RB_ID=863319"
vkostyukov,2016-08-19 20:02:02,https://api.github.com/repos/twitter/finagle/git/commits/1e8f3e51a64a03a07b8c8f073a5d3e4e8bdb24f5,1e8f3e51a64a03a07b8c8f073a5d3e4e8bdb24f5,"finagle-netty4: Copy direct buffers onto heap to match Netty 3 behavior

Problem

Netty 4 (N4) uses slightly different strategy than Netty 3 (N3) for its receive buffers.
While both N3 and N4 use direct buffers to receive bytes from a socket, N3 immediately
copies it onto heap and (possibly) cleans the direct buffer. N4 does the opposite -
it just shoots the direct buffer into the pipeline with the hope that it will be
cleared/released manually by a user.

Given that Finagle never releases anything, those direct buffers should be released as
part of the GC cycle, when heap is filled up. This makes each GC cycle quite expensive
given how many of direct buffers maybe be on a heap (each native buffer takes 64b so we
need lots of them to fill up a heap).

Solution

To reduce GC times and match N3 behavior, we want to release direct buffers manually
(earlier) instead of waiting for a GC cycle. This will offload deallocations (freeing
a native memory) from the GC threads to application threads, hence reduce the GC times.

RB_ID=863267"
stefanlance,2016-08-19 17:53:02,https://api.github.com/repos/twitter/finagle/git/commits/acddca31fbeee36cbf22ec2e2efb78aed49b0c2b,acddca31fbeee36cbf22ec2e2efb78aed49b0c2b,"finagle: Add module to Nack AC filter and replace multiplier param with success rate threshold

Problem

The `NackAdmissionFilter` companion object does not have a module, so
service owners cannot add it to their clients' stacks. Also, the multiplier
param is harder to understand and configure than it needs to be.

Solution

Add a module to the companion object, and replace the `multiplier` param with a
`successRateThreshold` param. This param is the inverse of the multiplier and it
represents the lowest success rate the filter tolerates before probabilistically
dropping requests. E.g., with a `successRateThreshold` of `9D/10`, the filter
will probabilistically drop requests when the success rate falls below 90%.

Results

Now service owners can add the filter to their client stacks and can configure
the filter more easily.

RB_ID=861931"
edma2,2016-08-18 21:53:05,https://api.github.com/repos/twitter/finagle/git/commits/7ff8a79d10ff5eb953f2c59324637af2631e9bca,7ff8a79d10ff5eb953f2c59324637af2631e9bca,"finagle-serversets: consolidate serverset path parsing

Problem:

Serverset paths are parsed in an ad-hoc manner in each namer (e.g.
each of them manually splits a string by "":"").  This can be cleaned
up by introducing a layer of abstraction (ServersetPath) and sharing
logic.

Result:

There is now a single place where serverset paths are parsed, which
makes future changes to path syntax easier.  This patch will parse
shard ID but it will be acted on in a future patch.

RB_ID=862740"
kevinoliver,2016-08-18 21:42:48,https://api.github.com/repos/twitter/finagle/git/commits/ad036d635a60b9a2518cb9466c42a3f87b9e316d,ad036d635a60b9a2518cb9466c42a3f87b9e316d,"finagle-toggle: Fix Scaladoc warnings

Problem / Solution

Fix the warnings emitted in the finagle-toggle scaladocs.

RB_ID=863495"
bryce-anderson,2016-08-16 04:37:29,https://api.github.com/repos/twitter/finagle/git/commits/ca4c237bf550cb0856e140d2b73b6168d325c089,ca4c237bf550cb0856e140d2b73b6168d325c089,"finagle-core: Revert ""finagle-core: Use timestamps in Aperture to prioritize nodes that were around longer""

This reverts commit e94077acaceadc7653e17070dba70c0fed0c1ef6 (RB 859546).

Commit e94077acace biases against the oldest nodes during a redeploy which
is the intended behavior. However, if these nodes become unhealthy but don't
fail completely low success rates can result.

RB_ID=862505"
edma2,2016-08-16 01:08:58,https://api.github.com/repos/twitter/finagle/git/commits/644d988f9d1e2b819e2933b24473b8bd97b5f709,644d988f9d1e2b819e2933b24473b8bd97b5f709,"finagle-serversets: manually trigger epochs in serverset2.Stabilizer
when period is Duration.Zero

Problem:

When `removalWindow` is 0 seconds, we want to surface removals from
ZK immediately without waiting for an epoch period. We currently
handle this corner case in `Zk2Resolver` by not calling `Stabilizer.apply`,
but this is wrong because calling `Stabilizer` with 0 seconds should
return a `Var[Addr]` that caches previously observed addresses to
protect against expected, intermittent ZK failures (such as session
disconnects).

Solution:

If `removalWindow` is 0 seconds, manually trigger two removal epoch
events. One complete epoch period will elapse and removed addresses
will be reflected immediately. This change allow us to keep using
all the logic that already exists in `Stabilizer` (such as address
caching) by simply providing a different event stream. Similarly
for `batchUpdate`, we can simply skip it if period is zero seconds
instead of using a timer.

Result:

Calling `Stabilizer.apply` with 0 second windows behaves as expected,
but without the cost of the timer.

RB_ID=861561"
olix0r,2016-08-15 22:32:14,https://api.github.com/repos/twitter/finagle/git/commits/5c6f9167723c40e24485a98039ec9cf61a258732,5c6f9167723c40e24485a98039ec9cf61a258732,"Problem

When a finagle-http server receives a non-keepalive request (i.e. with
Connection: close), it does not close the underlying transport. Instead it waits
for the client to teardown the connection. This causes undesirable behavior:
client connections go into TIME_WAIT on the remote side since they do not
receive a FIN from the serverside. This can cause clients to exhaust ports when
not using keepalive connections.

Solution

HttpServerDispatcher should terminate connections eagerly when a client requests
that the connection be closed.

Signed-off-by: Jordan Parker <jparker@twitter.com>

RB_ID=854542"
mosesn,2016-08-15 20:36:03,https://api.github.com/repos/twitter/finagle/git/commits/dfbbb17d4bbfe82606c0afb90c4ec83c19c7e313,dfbbb17d4bbfe82606c0afb90c4ec83c19c7e313,"finagle-http2: Server-side downgrades

Problem

Our servers need to be compatible with clients that don't speak http/2.

Solution

Get downgrades working!

RB_ID=859289"
bryce-anderson,2016-08-12 21:52:17,https://api.github.com/repos/twitter/finagle/git/commits/6e4d0b330b9f773a250fd70ccb6d7fae57f1a2f0,6e4d0b330b9f773a250fd70ccb6d7fae57f1a2f0,"finagle: Remove unused (empty) java project from finagle-http2

Problem

Project without any source files doesn't contribute anything except build
time.

Solution

Remove it.

RB_ID=861886"
jbkt,2016-08-12 20:34:20,https://api.github.com/repos/twitter/finagle/git/commits/fc33c9c2fdee74ebce8671a83a489de0abbb6af9,fc33c9c2fdee74ebce8671a83a489de0abbb6af9,"finagle: Add Criteo to ADOPTERS.md

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

RB_ID=861833"
vkostyukov,2016-08-12 01:20:56,https://api.github.com/repos/twitter/finagle/git/commits/69e39d75fe76a16fce776fc7656435dae4159f93,69e39d75fe76a16fce776fc7656435dae4159f93,"finagle-core: Use timestamps in Aperture to prioritize nodes that were around longer

Problem

When server set update is triggered by the underlying namer, a random token is
assigned to each new node. This results in some portion of new nodes making it
to the front of the server set (when sorted by `token`), hence into an Aperture's
slice. This causes connections churn (and resource leaks) since instead of reusing
old nodes/connections, Aperture is forced to establish new connections for new
nodes while dropping the old ones (leaking opened connections).

Solution

Instead of randomized token, use counter to prioritize old nodes in the server set
so Aperture is trying to stick with nodes/connections that were already
materialized/established.

RB_ID=859546"
wisechengyi,2016-08-11 22:50:02,https://api.github.com/repos/twitter/finagle/git/commits/d3b5f0909108b0e3abb01fdc36eee5e088ad6cf3,d3b5f0909108b0e3abb01fdc36eee5e088ad6cf3,"Remove empty finagle resources

RB_ID=861456"
kevinoliver,2016-08-10 18:11:58,https://api.github.com/repos/twitter/finagle/git/commits/0ea842bf1a147e354a6fa35f9fee8fa25057c2ed,0ea842bf1a147e354a6fa35f9fee8fa25057c2ed,"finagle-toggle: Allow duplicate JSON resource files in StandardToggleMap

Problem

Some deployments add the same resource file multiple times which
causes `StandardToggleMap.apply` to fail.

Solution

Ignore duplicate resources.

RB_ID=860530"
vkostyukov,2016-08-10 00:32:19,https://api.github.com/repos/twitter/finagle/git/commits/d748c187d828da2cecc430004f04b039838279ee,d748c187d828da2cecc430004f04b039838279ee,"finagle-core: Add vkostyukov to LB owners

I spent last six weeks digging into Finagle's LB algorithms (especially Aperture and P2C).
I now feel quite comfortable reviewing changes and discussing design decisions in our LBs.

RB_ID=860444"
vkostyukov,2016-08-10 00:10:16,https://api.github.com/repos/twitter/finagle/git/commits/1e379403b96e753fcfef2f0544b4b27c7b2b5087,1e379403b96e753fcfef2f0544b4b27c7b2b5087,"finagle-core: Zero copy conversion from Buf.ByteArray to ByteBuf

Problem / Solution

Our `BufAsByteBuf` wrapper is missing a case for doing zero-copy conversions
from `Buf.ByteArray` when offset is not zero.

The problem was discovered by Ruben Oanta.

RB_ID=860327"
lightyang,2016-08-09 19:39:00,https://api.github.com/repos/twitter/finagle/git/commits/97c4e6910f15292ad8c7881a8f2a0af6c5f9b561,97c4e6910f15292ad8c7881a8f2a0af6c5f9b561,"finagle-thrift: Make maxThriftBufferSize in Thrift.Server Tunable

Problem

The MaxReusableBufferSize parameter was introduced to make maxThriftBufferSize
tunable but it's currently only available in ThriftMux.Server.

Solution

Use the parameter value in Thrift.Server.

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

RB_ID=860102"
edma2,2016-08-09 00:42:05,https://api.github.com/repos/twitter/finagle/git/commits/de7493c01aa8af98f171d509a0e2de34fd0e6347,de7493c01aa8af98f171d509a0e2de34fd0e6347,"finagle-serversets: disable serverset2 Addr stabilization if windows
are 0 seconds

Problem:

There isn't an efficient way to disable stabilization in `Zk2Resolver`.
You can set the `batchWindow` and `removalWindow` to 0 seconds but
this causes the epoch to trigger on every tick which seems wasteful.

Solution:

Check the corner case where `batchWindow` and `removalWindow` are
both 0 seconds. Return the `Addr` as is.

RB_ID=859276"
willfeather,2016-08-09 00:05:11,https://api.github.com/repos/twitter/finagle/git/commits/57f9f92617674587e8cd5f97f55c82ac02240433,57f9f92617674587e8cd5f97f55c82ac02240433,"finagle: Fix tests cases that do DNS resolution

Problem

Some naming related test cases broke CI builds due to connection to
non-localhost, which are not allowed by test run security manager.

Solution

Modify all testing hosts to be localhost, and remove unncessary test
cases (ex. resolveHostPorts('dummy.com', 80)).

Result

Tests marked as ""flaky"" should run and succeed in CI builds.

RB_ID=859677"
jcrossley,2016-08-08 22:06:10,https://api.github.com/repos/twitter/finagle/git/commits/c74e786ab39e1ea82bcfb65ebe74691db002951a,c74e786ab39e1ea82bcfb65ebe74691db002951a,"finagle: Re-add silly dependency

We depend on Silly. Re-added it.

RB_ID=860027"
jcrossley,2016-08-08 19:12:21,https://api.github.com/repos/twitter/finagle/git/commits/2857863b1875190874a77045f932f5d387eea431,2857863b1875190874a77045f932f5d387eea431,"finagle/finagle-memcached: Add missing dependency on c.t.io:json

Problem

There was a missing dependency on science/src/java/com/twitter/common/io:json.

Solution

Add the dependency.

RB_ID=859855"
jcrossley,2016-08-08 18:35:10,https://api.github.com/repos/twitter/finagle/git/commits/86c14465a5ed0c85ef178383ef94dc9fc398f77c,86c14465a5ed0c85ef178383ef94dc9fc398f77c,"finagle: Update Netty version in SBT to latest

Update Netty version in SBT from 4.1.3.Final to 4.1.4.Final.

RB_ID=859807"
willfeather,2016-08-08 18:05:04,https://api.github.com/repos/twitter/finagle/git/commits/69b86aedb593629f47027d34be783260f4db575d,69b86aedb593629f47027d34be783260f4db575d,"finagle-serversets: Remove RandomSocket from ZkAnnouncerTest

Problem

We want to remove RandomSocket from tests since it may result in race
conditions (ex. port can be occurpied between the period it is created and
actually bound), and thus it doesn't make any guaratee that addresses
returned are available, which fail CI builds.

Solution

Use hard-coded ports instead since ZK announcer doesn't actually
bind to the ports. It's safe to provide any valid ports for these tests.
After your change, what will change
Dependency of RandomSocket has been removed.

RB_ID=859063"
jcrossley,2016-08-08 18:02:34,https://api.github.com/repos/twitter/finagle/git/commits/fd35e6a02b1354d1b98a13215dd744bfabc854b8,fd35e6a02b1354d1b98a13215dd744bfabc854b8,"finagle: remove unused deps in sbt build

Problem

The SBT build file has unused/transitive deps.

Solution

Fix up the dependencies.

RB_ID=858458"
edma2,2016-08-08 17:37:34,https://api.github.com/repos/twitter/finagle/git/commits/9fb57e6519f8b50d30bc4a86c247309c1885cbf7,9fb57e6519f8b50d30bc4a86c247309c1885cbf7,"remove ngreen from OWNERS

RB_ID=859835
TBR=true"
bryce-anderson,2016-08-08 16:29:27,https://api.github.com/repos/twitter/finagle/git/commits/30831046029728b8f1f8cbce8b3abfa604e37060,30831046029728b8f1f8cbce8b3abfa604e37060,"finagle: Don't run a specific thriftmux test on sbt builds

Problem

The test in finagle-thriftmux c.t.f.t.EndToEndTest:""ThriftMux client to
Thrift server "" allocates a 2 GB byte array, and this causes problems
with the 2 GB memory limit of Travis and sbt builds.

Solution

Disable the test on sbt builds using a flag, ""SKIP_SBT"".

RB_ID=859659"
jcrossley,2016-08-05 21:47:31,https://api.github.com/repos/twitter/finagle/git/commits/f7ad5de1f2aec9c61f747ae7272e89ce023678bb,f7ad5de1f2aec9c61f747ae7272e89ce023678bb,"finagle/finagle-memcached: Fix broken flaky tests

Problem

Two flaky tests in CacheNodeGroupTest failed reliably.

Solution

Fix ""and and remove"" test to remove checks on the pool size staying
the same after new nodes nodes have been added. The CacheNodeGroup
used now controls the serverset clients see through the cluster manager,
so manual size updates through configuration are not necessary.

Node key remapping is not used anywhere on the clients so that test
has been removed.

RB_ID=859548"
mosesn,2016-08-05 20:10:41,https://api.github.com/repos/twitter/finagle/git/commits/080d8f2a2fa47bfec0242a09e1da26eba6e70fc6,080d8f2a2fa47bfec0242a09e1da26eba6e70fc6,"finagle-http2: Client-side cleartext downgrades

Problem

We want to be able to turn on http2 on the client-side before the
server-side has upgraded.  This will allow us to upgrade without
checking first if servers have upgraded, so upgrading doesn't have
to be phased.  This also unblocks potentially turning on http2
automatically for users, ie with toggles.

Solution

We capture upgrades, surface them to the transporter layer, and use
that to inform how it creates connections.

One subtle part is what to do when an upgrade is in progress.
Instead of buffering them, I've chosen to initiate them as http/1.1
connections, so that they can make progress even if the upgrade
takes a while (for example if the request that initiates the upgrade
is really wide).

This has a few results.  First, it means that clients can only talk
to servers that can downgrade to http/1.1 if it doesn't want to
buffer its requests.  This is required by the spec, but in practice
some servers can't.

We may change this in the future, especially when ALPN comes on
line, and moves protocol negotiation into the connection setup.

Result

Clients will upgrade or downgrade automatically and don't need input
from users.

RB_ID=856637"
vkostyukov,2016-08-03 19:27:31,https://api.github.com/repos/twitter/finagle/git/commits/49eeb26b78516c2370fb26521d2118a64e9cf60e,49eeb26b78516c2370fb26521d2118a64e9cf60e,"finagle-core: Add loadbalancer/updates counter

Problem / Solution

There is no clear way to figure out how many times the underlying
namer triggers updates, which makes difficult to chase LBs/Namer
problems. Let's add a counter for that.

RB_ID=858292"
vkostyukov,2016-08-01 17:03:23,https://api.github.com/repos/twitter/finagle/git/commits/3bd9661da354a30bbf7cf22a10bd854759beddd1,3bd9661da354a30bbf7cf22a10bd854759beddd1,"finagle-redis: Add vkostyukov to OWNERS

I removed the code I didn't understand in `finagle-redis` (50% of the code)
and I feel quite confident with what's left.

RB_ID=856801"
bryce-anderson,2016-07-30 05:03:35,https://api.github.com/repos/twitter/finagle/git/commits/e900a3369e74a568985e01508e4f75238a0c4fd5,e900a3369e74a568985e01508e4f75238a0c4fd5,"finagle: Fix memcached ""live_nodes"" and ""dead_nodes"" gauges

Problem

The ""live_nodes"" and ""dead_nodes"" gauges in the memcached client are
getting GC'ed.

Solution

Make strong references to them so they stick around for the lifetime of
the Client.

RB_ID=857406"
mosesn,2016-07-30 01:16:55,https://api.github.com/repos/twitter/finagle/git/commits/eb6cad50aea2564425b58231f5dd42424bf01092,eb6cad50aea2564425b58231f5dd42424bf01092,"finagle: Add dep on finagle-netty4 to finagle-memcached

Problem

We didn't add a dep on finagle-netty4 from finagle-memcached, which breaks the OSS build.

Solution

Add the dep!

RB_ID=857418
TBR=true"
lucascs,2016-07-29 20:05:52,https://api.github.com/repos/twitter/finagle/git/commits/ca5827c1760c3cf7b2efd02a29fb318567958e40,ca5827c1760c3cf7b2efd02a29fb318567958e40,"Adding Nubank to adopters list

Problem/Solution

Add Nubank to the adopters list.

Signed-off-by: Bryce Anderson <banderson@twitter.com>

RB_ID=857238"
jcrossley,2016-07-29 19:57:57,https://api.github.com/repos/twitter/finagle/git/commits/2ec1e393465190130a6307d6069377293ee34ef8,2ec1e393465190130a6307d6069377293ee34ef8,"finagle-memcached: Configurable Netty implementations

Problem

We want to be able to configure which Netty implementation to use
 while testing Netty4.

Solution

Add a MemcachedImpl param to configure which Netty version to use,
Netty3 or Netty4.

RB_ID=836559"
stefanlance,2016-07-29 19:09:23,https://api.github.com/repos/twitter/finagle/git/commits/4b692470edd4a376a47a3bd36a3ce324f27b6a2f,4b692470edd4a376a47a3bd36a3ce324f27b6a2f,"finagle: move threshold admission control filter to finagle

Problem

The threshold admission control filter needs to be part of
finagle/finagle-core to be enabled in the client stack.

Solution

Move the filter to finagle/finagle-core.

Results

Now the filter can be added to the client stack.

RB_ID=856985"
bryce-anderson,2016-07-29 00:06:11,https://api.github.com/repos/twitter/finagle/git/commits/486bcaa7bb35a7d8e1294bab5f702d2894d5cf30,486bcaa7bb35a7d8e1294bab5f702d2894d5cf30,"finagle: IllegalArgumentException in Aperture sort

Problem

The new Aperture rebuild function attempts to sort the nodes by Status, but
this can change during the sort, resulting in an
IllegalArgumentException from the underlying java TimSort algorithm.

Solution

Only perform a true sort on the token, which is immutable, and then
perform a 'counting sort' based on the mutable status, discarding any
Status transitions that occur during the sort.

RB_ID=856861"
roanta,2016-07-28 16:21:17,https://api.github.com/repos/twitter/finagle/git/commits/0b27091c08f066ce3c7717956c0c73f379c672b2,0b27091c08f066ce3c7717956c0c73f379c672b2,"finagle: re-add roanta to owners

RB_ID=855682"
mosesn,2016-07-28 01:29:01,https://api.github.com/repos/twitter/finagle/git/commits/cb42b062f9cace3dff1cef9a469d7b766067c770,cb42b062f9cace3dff1cef9a469d7b766067c770,"finagle-core: Delete IdleConnectionFilter

Problem

We don't use IdleConnectionFilter anymore, but the code is still there.

Solution

Baleet it.

RB_ID=856377"
vkostyukov,2016-07-27 20:28:44,https://api.github.com/repos/twitter/finagle/git/commits/191858dffd23d784e27dc729f10dd13d8d19b246,191858dffd23d784e27dc729f10dd13d8d19b246,"finagle-core: Reduce number of useless rebuilds for P2C/Aperture

Problem

Finagle's randomized LBs (i.e., Aperture, P2C/LeastLoaded, P2C/EWMA) are implemented
in a way that they partition the input replica set to distinct `down` and `up` nodes
so that only `up` is used by the distributor.

While this approach is pretty straightforward, it comes with an additional cost in
re-partitioning (allocations/GC, CPU) when a) one of the down nodes is up b) one
of the up nodes is down. The picture is getting worse when a service with large
cluster doing a rolling restart of its nodes/replicas with big batches.

For example, with batch size 10% of the 100-nodes cluster, the chances of hitting a
dead node with P2C are 19%. We either:

 (a) pick two deads (10/100 * 9/99) or
 (b) pick one dead and one alive (10/100 * 90/99) or
 (c) pick alive and then dead (90/100 * 10/99)

Technically, this means that every 5th request will be triggering LB rebuilds
when 10% of the cluster is down. Good news - LBs have some logic to collapse this
kind of updates, and in fact, this helps a lot. But given the high rate of
update-requests, the huge chunk of them is still reaching the LB, causing extremally
high resources usage.

Solution

Let's use math/probability to see how often LBs will be hitting dead nodes if
they **don't partition at all**.

Let's have a look at the extreme case when 50% of the cluster is down. With P2C
and max-effort = 5 (number of times we're willing to retry on LB), the
probability of returning a dead node out of half-dead cluster after 5 attempts
is 0.1% (0.25^5, where 0.25 is the probability of picking two dead nodes in row).

This means that if the half of the cluster is down, P2C will be able to mitigate
that and only return sub-optimal choices (when a better choice may have been
available) for about 0.1% (1/10 of the percent) of requests. That doesn't mean
that 0.1% of requests will be failed by a given client, because there is an
additional layer of requeues involved above those ""bad picks"".

Now let's have a look at the less extreme case, 10% of the cluster is down. With
max-effort = 5, the probability of hitting a dead node is 0.00000000001% (almost
zero).

With Aperture, those probabilities are even less since they consist of two
dependent actions - 1) including a dead node into an aperture and 2) picking
a dead node out of the aperture. In practice, we've seen that Aperture mitigates
situations when 10% of the cluster is dead much better than P2C. Math also
confirms that.

**Putting it all together**, instead of relying on partitioning (with the cost of
CPU, GC, and rebuild-storms) in mitigating temporary unavailability of individual
nodes, this RB suggests to put math (not computers) into work and using the fact
that the probability of hitting a temporary dead node is extremely low,
**do not rebuild the server set when the dead node is seen** in P2C/Aperture.

This not only reduces the number of LB rebuilds (allocations, CPU) when cluster
is doing a rolling restart, but also helps in a general case (there is always a
dead node somewhere in the cluster that we will never hit, but it trigger
useless rebuilds).

One way or another, LBs are still relying on the underlying namer to trigger
rebuilds and exclude permanently unavailable nodes (restarted, unannounced, etc)
from the server set.

Result

Our experiments showed that services using this change mitigated rolling restarts
of their dependencies (CPU and GC were flat) and also improved overall p99 latency
by up to ~20%.

RB_ID=855030"
bryce-anderson,2016-07-27 20:22:35,https://api.github.com/repos/twitter/finagle/git/commits/ebf8294f6fc43f7917ad3acef6f34beca8414bae,ebf8294f6fc43f7917ad3acef6f34beca8414bae,"finagle: Enable code coverage in Finagle Travis build

Problem

We are not collecting code coverage stats via Codecov.

Solution

Re-enable Codecov support in the .travis.yml file.

Result

Codecov appears to pick up coverage stats from a PR which
re-enables the tests.

__Note:__ The JVM heap size limit (-Xmx) for travis builds
had to be decreased from 4GB to 3.5GB in order to avoid
receiving SIGKILL signals from Travis, which limits
memory usage to 4GB total.

RB_ID=856052"
jcrossley,2016-07-27 19:01:50,https://api.github.com/repos/twitter/finagle/git/commits/17e467b86779721d42c877ed839b6c07549c66d3,17e467b86779721d42c877ed839b6c07549c66d3,"finagle-memcached: Introduce Client and Server Transports to handle encoding/decoding

Problem

As part of the migration to Netty4, we want to isolate Netty3 and Netty4
types. The only Netty types should be in the framer.

Solution

Introduce a Netty3Framer which frames and decodes to/from bufs. The Client and
Server Transports are netty-agnostic and handle decoding/encoding Commands/Responses
to/from Bufs. The Client and Server Pipeline Factories are still being uses by clients
constructed using ClientBuilder.codec, so those pipelines still contain the complete encoding/
decoding process with Netty3 types. Once all instances clients/servers constructed using
ClientBuilder.codec are replaced with .stack, those pipelines can go away and the only Netty
types will be in the Netty3Framer/Netty4Framer.

RB_ID=836470"
bryce-anderson,2016-07-27 16:20:04,https://api.github.com/repos/twitter/finagle/git/commits/48643a4fed233eccc44ecf7b12ed43f49f4314b9,48643a4fed233eccc44ecf7b12ed43f49f4314b9,"finagle: Remove while loop in P2C load balancer pick function

Problem

The P2C load balancer trait uses a while loop to attempt to ensure that
it doesn't randomly pick the same node twice for the following comparison logic
, and gives up after 10 retries. It is possible for this to fail (although
unlikely, ~1 in 20 million and the repercussions are not very serious).

Solution

Replace the loop with logic that is guaranteed to pick a different node in a
single step.

RB_ID=855635"
jcrossley,2016-07-27 00:51:07,https://api.github.com/repos/twitter/finagle/git/commits/e0c74116439bd30fd2114184bdfd537155065ca4,e0c74116439bd30fd2114184bdfd537155065ca4,"finagle/finagle-memcached: Move storage commands list into companion object of StorageCommand class

Problem

As we use the server storage commands in more places in the move
to Netty4, they should be in one place.

Solution

Move storage commands list into companion object of StorageCommand class.

RB_ID=850189"
jcrossley,2016-07-26 20:27:25,https://api.github.com/repos/twitter/finagle/git/commits/6dc07c4ad9838f5b2bb801c28d3b3abd8b0a37bd,6dc07c4ad9838f5b2bb801c28d3b3abd8b0a37bd,"finagle/finagle-memcached: Added jillianc to OWNERS

Added jillianc to owners.

RB_ID=855760"
jcrossley,2016-07-26 19:16:33,https://api.github.com/repos/twitter/finagle/git/commits/287853faa32051d2f74b6a9c1b8784ffdc1dafc0,287853faa32051d2f74b6a9c1b8784ffdc1dafc0,"finagle/finagle-memcached: Decoder on Buf

Problem

As we move to Netty 4, we want decoding to be in terms of Buf,
not ChannelBuf.

Solution

Make decoding in terms of Buf.

RB_ID=851730
TBR=true"
olix0r,2016-07-25 22:35:47,https://api.github.com/repos/twitter/finagle/git/commits/f320909985c5756eb48d612d99abaed939765066,f320909985c5756eb48d612d99abaed939765066,"finagle: Upgrade Netty4 to version 4.1.3.Final

Problem

There are necessary improvements to Http2 codecs in Netty-4.1.3

Solution

Upgrade Netty! Note that Netty's OneTimeTask utility has been
removed. All uses internal to Netty have been replaced with `Runnable`.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=855295"
edma2,2016-07-25 17:01:17,https://api.github.com/repos/twitter/finagle/git/commits/e1e74237d79a447989d23fe3a78963ba24a9ed01,e1e74237d79a447989d23fe3a78963ba24a9ed01,"finagle/doc: fix comment in dtab example

RB_ID=855077"
bryce-anderson,2016-07-23 01:24:07,https://api.github.com/repos/twitter/finagle/git/commits/c42701af3e6df5a34bb3553be2d79b2ad6f5c952,c42701af3e6df5a34bb3553be2d79b2ad6f5c952,"finagle-core: Remove Java 6 compatibility code from FinagleScheduler

Problem

FinagleScheduler.switchToBridged uses the class loader to attempt to instance a
j.u.c.LinkedTransferQueue, and on failure, doesn't continue with switching the
scheduler. This is a compatibility layer for Java 6. We no longer support
Java < 8, so this check is no longer necessary.

Solution

Create the class instance using the new operator.

RB_ID=855000"
cacoco,2016-07-22 21:35:24,https://api.github.com/repos/twitter/finagle/git/commits/29fe32e46d50df43e0b6750b839788714aacd232,29fe32e46d50df43e0b6750b839788714aacd232,"ostrich, scrooge, finagle, twitter-server, finatra: Update TravisCI configurations

Problem

We'd like to consolidate the logic of building the DAG that represents
the dependency graph of Twitter OSS projects on each other. We recently
introduced the Dodo project for this and now want to use it across our
OSS TravisCI build configurations.

See: https://github.com/twitter/dodo

Solution

Update the .travis.yml for projects which were previously using different
scripts to build their dependencies to use Dodo.

Result

Less moving pieces for when changes need to happen.

RB_ID=854739"
kevinoliver,2016-07-22 01:42:27,https://api.github.com/repos/twitter/finagle/git/commits/df43c76390a7fdadd755fa0c27598a3b8d53a726,df43c76390a7fdadd755fa0c27598a3b8d53a726,"finagle-core: Fix bug in scheduler metrics

Problem

In rb 828289 I broke the ""scheduler/dispatches"" and
""scheduler/blocking_ms"" gauges.

Solution

Keep a reference to the gauges by mutating the `gauges` list and add a
test to verify this.

RB_ID=854494"
jcrossley,2016-07-20 16:31:02,https://api.github.com/repos/twitter/finagle/git/commits/85bf84060ccfdf973ef1af51dfb9ae7fb7bed815,85bf84060ccfdf973ef1af51dfb9ae7fb7bed815,"finagle/doc: Update 'Extending Finagle' section for Netty 4

Problem

We want to include out best practices for protocol implementations
in the documentation, as well as information on how to use Netty 4 types.

Solution

Update 'Extending Finagle' documentation to include Netty 4 examples
and best practices.

RB_ID=852131"
maheshkelkar,2016-07-19 23:49:35,https://api.github.com/repos/twitter/finagle/git/commits/f0d0b642c2b43f7e11cb014ab2f137ddfe459d70,f0d0b642c2b43f7e11cb014ab2f137ddfe459d70,"Add transition to ProbeClosed in onServiceAcquisitionFailure

Problem

- If a memcached node is inactive, FAF pointing to the node enters DEAD state
- After markDeadFor timeout, the FAF enters the startProbing state
- When next probing (i.e. attempt to execute the request) fails, because node
  is still down, and factory (underlying(conn)) throws an exception
- Currently, onServiceAcquisitionFailure function fails to close the probe
- The FAF remains stuck in the ProbeOpen state and thus causing continuous
  failure

Solution

- Inside onServiceAcquisitionFailure, put transition the state into
  ProbeClosed state

Describe the modifications you've done.
- Added stopProbing method
- The onServiceAcquisitionFailure calls stopProbing before calling didFail

Result

Signed-off-by: Jillian Crossley <jillianc@twitter.com>

RB_ID=853048"
adriancole,2016-07-19 23:41:43,https://api.github.com/repos/twitter/finagle/git/commits/cd04959b5005b01b9842c3f4d39fc1cef92ff32b,cd04959b5005b01b9842c3f4d39fc1cef92ff32b,"finagle-zipkin-core: Remove package protection for RawZipkinTracer

Problem

RawZipkinTracer is a base class that is extended to support other transports
like http or kafka. The current implementation requires subtypes to be in the
com.twitter package. This isn't likely intentional.

Solution

This removes the constraint that requires such subtypes to be in the
com.twitter package.

Result

RawZipkinTracer can be extended from other packages, such as zipkin.finagle

Signed-off-by: Jordan Parker <jparker@twitter.com>

RB_ID=853430"
kevinoliver,2016-07-19 22:17:16,https://api.github.com/repos/twitter/finagle/git/commits/427e423983875ca73385eb4a6ed5fd03e844ac2e,427e423983875ca73385eb4a6ed5fd03e844ac2e,"finagle-core: Refactor loadbalancer's Distributor code

Problem

The user guide lacked information on the load balancer's behavior when
all nodes are down. While working on documenting this, I found the
`DistributorT` implementations to have a lot of repetition.

Solution

Refactor much of the shared code up into `DistributorT` and then document
the behavior in the user guide that Finagle uses a node it believes to be
down.

RB_ID=852565"
vkostyukov,2016-07-19 17:59:42,https://api.github.com/repos/twitter/finagle/git/commits/bbdb3f2bc16828461fb21e168d5461f3c8dfd5c4,bbdb3f2bc16828461fb21e168d5461f3c8dfd5c4,"finagle-core: Reduce allocations & running time of Balancer.update

Problem / Solution

`Balancer.update` might be called quite often during an intensive rolling
restart of a service it subscribed to. Big server set only makes it worse.
We might want to reduce allocations and running time of this function to
make we don't waste services' resources doing a background task.

Results

 ~4.3x fewer running time
 ~9.1x fewer allocations

 Pairs (before and after)

 [info] Benchmark                                             Mode  Cnt        Score        Error  Units
 [info] BalancerBench.update5000x500                          avgt   10  2595081.432 ± 190806.841  ns/op
 [info] BalancerBench.update5000x500                          avgt   10   596893.398 ±  20023.940  ns/op

 [info] BalancerBench.update5000x500:·gc.alloc.rate.norm      avgt   10  3810860.727 ±   3302.709  B/op
 [info] BalancerBench.update5000x500:·gc.alloc.rate.norm      avgt   10   416814.503 ±     18.194  B/op

RB_ID=852174"
vkostyukov,2016-07-18 23:53:59,https://api.github.com/repos/twitter/finagle/git/commits/2ef9c3076ecb55812b33d32fac7681e60b7b5855,2ef9c3076ecb55812b33d32fac7681e60b7b5855,"finagle-redis: Remove Codec [HUGE]

Problem / Solution

This is one more step towards Netty 4 support in `finagle-redis`. We're removing
Redis codec (i.e., `c.t.f.Codec` implementation) now to simplify the rest of the
migration process and minimize the maintenance burden.

Please, note that this change also removes the server-side support for the Redis
protocol in `finagle-redis` (serving `Service[Command, Reply]` within a Finagle
server), which was previously supported via codec.

RB_ID=848815
TBR=true"
olix0r,2016-07-18 23:07:05,https://api.github.com/repos/twitter/finagle/git/commits/6b64687dd92c1830127c81e660ac06375863524f,6b64687dd92c1830127c81e660ac06375863524f,"finagle-http2: Fix Http2Transporter cache removal

Problem

The Http2Transporter will never remove cached transporters, since the value
comparison always fails.

Solution

Pass the proper value into the transport cache remove() call.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=852471"
cacoco,2016-07-18 19:22:26,https://api.github.com/repos/twitter/finagle/git/commits/70baaa0dec832e7c50c9bb71a29187be8d845e4a,70baaa0dec832e7c50c9bb71a29187be8d845e4a,"finagle-exp: Abstract out parts of the DarkTrafficFilter for potential re-use

Problem

Parts of the DarkTrafficFilter are useful to be defined in one place for re-use.
Additionally, the current stat scoping is inconsistent with current Finagle best
practices so has been changed from camelCase to snake_case (""darkTrafficFilter"" ->
""dark_traffic_filter"").

Solution

Create an AbstractDarkTrafficFilter trait which encapsulated potentially
re-usable functionality.

Result

If another filter with a different type signature is created it can re-use the
important components of the DarkTrafficFilter through sub-classing the
AbstractDarkTrafficFilter.

RB_ID=852548"
mosesn,2016-07-18 18:09:28,https://api.github.com/repos/twitter/finagle/git/commits/1095ada280dcf58e551292c799c8d18ce3fa3a94,1095ada280dcf58e551292c799c8d18ce3fa3a94,"finagle-http2: Handle goaways properly client-side

Problem

Clients swallow GOAWAYs instead of following normal client behavior.

Solution

As a temporary measure, we're going to satisfy all oustanding
requests with a fabricated 4XX based on the GOAWAY we received.

We also changed the http2 end to end tests to test the http2 case,
which will be the common case, instead of the http2 upgrade, which
is interesting but not as urgent as making sure http2 works.

Result

Http2 clients don't hang randomly anymore.

RB_ID=852038"
roanta,2016-07-15 21:02:47,https://api.github.com/repos/twitter/finagle/git/commits/f3bbb47fadb0a362f5fe158f0620ad12cdbf83d8,f3bbb47fadb0a362f5fe158f0620ad12cdbf83d8,"Problem

We want to inspect the netty version at runtime for both clients
and servers.

Solution

Export the Transporter/Listener details in StackClient/StackServer.

RB_ID=851622"
kevinoliver,2016-07-15 17:44:45,https://api.github.com/repos/twitter/finagle/git/commits/7c9fa689b10c834579beec42152c1ec18db3f940,7c9fa689b10c834579beec42152c1ec18db3f940,"finagle-core: Improve docs for request timeouts

Problem / Solution

The Scaladocs for request timeouts did not cover whether or not the
Future was interrupted.

RB_ID=852190"
kevinoliver,2016-07-15 17:26:06,https://api.github.com/repos/twitter/finagle/git/commits/fcebebbd07539a88a5b2e7ffa691ebd4aef05365,fcebebbd07539a88a5b2e7ffa691ebd4aef05365,"finagle/doc: Add docs on disable Twitter Thrift upgrade

Problem / Solution

There was no documentation in the user guide on how to disable the
Twitter Thrift upgrade for clients.

RB_ID=852249"
kevinoliver,2016-07-15 00:25:50,https://api.github.com/repos/twitter/finagle/git/commits/07651c0a1e0742fc6778b4c5ed4e57b88a51aad1,07651c0a1e0742fc6778b4c5ed4e57b88a51aad1,"finagle-toggle: Add ServerInfo.id

Problem

For toggles that are only evaluated once at initialization time, it is
useful to have a consistent id to use as the input into
`Toggle.apply`.

Solution

Introduce `c.t.f.server.ServerInfo.id` which is a String which can be
used for this purpose.

RB_ID=851762
TBR=true"
kevinoliver,2016-07-14 18:14:46,https://api.github.com/repos/twitter/finagle/git/commits/f84ada8ca39e149bb691c5fc2b76902e11af258f,f84ada8ca39e149bb691c5fc2b76902e11af258f,"util-core, finagle-core: Expose metrics for default FuturePools

Problem

Service owners lack visibility into the state of util's default
`c.t.util.FuturePools`.

Solution

Provide metrics for `FuturePool.unboundedPool` and
`interruptibleUnboundedPool` via `FinagleStatsReceiver`.

Result

Developers will now have insight via new gauges:

 * finagle/future_pool/pool_size
 * finagle/future_pool/active_tasks
 * finagle/future_pool/completed_tasks

RB_ID=850652"
kcraigie,2016-07-14 17:33:27,https://api.github.com/repos/twitter/finagle/git/commits/5faedb79e5952255746abcef25db3d6fe22fcc73,5faedb79e5952255746abcef25db3d6fe22fcc73,"finagle-http: Fix ResponseProxy for chunked transfers

Problem

Due to ResponseProxy's not overriding Message's reader member in terms of the
proxied response, chunked responses were not getting passed through properly and
the response would hang in Finagle.

Solution

Fixed by overriding the reader member in ResponseProxy per how RequestProxy does
it. Added a unit test that breaks without this fix.

RB_ID=851799"
kevinoliver,2016-07-14 15:51:44,https://api.github.com/repos/twitter/finagle/git/commits/92fc49034512f64f05e0c86599395d153d8ab058,92fc49034512f64f05e0c86599395d153d8ab058,"finagle-stats: Flag to disable exporting empty histograms

Problem

Even for empty histograms the full details are always exported. This
is wasteful for services with many empty histograms.

Solution

Introduce a flag, `com.twitter.finagle.stats.includeEmptyHistograms`
which by setting to `false`, allows teams to only export a single
value, `count=0` for those histograms.

Result

Far less metrics are exported.

RB_ID=851485"
hurrycane,2016-07-14 01:02:49,https://api.github.com/repos/twitter/finagle/git/commits/57d9cee8ca315600f1000983af18cc22ccfc2d45,57d9cee8ca315600f1000983af18cc22ccfc2d45,"finagle-core: Changed c.t.f.TimeoutException to mixin HasLogLevel so that DefaultMonitor always logs it as TRACE

RB_ID=849132"
kevinoliver,2016-07-11 22:39:56,https://api.github.com/repos/twitter/finagle/git/commits/f0149a5a770ea8010b4ff6a37a7e84a3b5f6f9b8,f0149a5a770ea8010b4ff6a37a7e84a3b5f6f9b8,"twitter-server: Admin endpoint for Toggle mutations

Problem

Service owners need an API for updating the in-memory Toggles.

Solution

Provide PUT/DELETE methods on /admin/toggles so that
create/update/deletes can be performed.

Result

To create or update the in-memory version of a toggle:
`PUT /admin/toggles/$libraryName/$id?fraction=$fraction`

To remove the in-memory version of a toggle:
`DELETE /admin/toggles/$libraryName/$id`

RB_ID=849906"
yinquanteo,2016-07-09 00:03:33,https://api.github.com/repos/twitter/finagle/git/commits/23157cad3d86f56578cdc70f20adef2fa52105f1,23157cad3d86f56578cdc70f20adef2fa52105f1,"Revert ""finagle/finagle-memcached: Decoder on Buf""

Reverting because it causes ads editor download to fail

This reverts commit dfa87f2fb8785381c06bc58f70b027c81283f2b5.

RB_ID=850427
TBR=true"
roanta,2016-07-08 19:13:45,https://api.github.com/repos/twitter/finagle/git/commits/8fe2c9b8b40a0f92c5a229fe6dd06d25271e4197,8fe2c9b8b40a0f92c5a229fe6dd06d25271e4197,"finagle-{core, memcached}: Simplify construction of FailureAccrualFactory

Problem

The construction of a FailureAccrualFactory was becoming unwieldy.
It has numerous constructor which aren't used and caused varying
runtime behavior. In particular, logging didn't work well when
using some of the constructors and they allowed the user to avoid
thinking about response classification, which is an important
consideration.

Solution

Create one constructor with no default parameters. Move logging into
the `didMarkDead` method instead of making it configurable via the
constructor. Additonally, thread through response classification in
the custom failure accrual module in finagle-memcached.

RB_ID=849660"
roanta,2016-07-08 17:14:53,https://api.github.com/repos/twitter/finagle/git/commits/2fb6de48f58d038bc6069569249264345c1e7e90,2fb6de48f58d038bc6069569249264345c1e7e90,"finagle-core: rm println from ExpiringService

RB_ID=849779"
roanta,2016-07-08 17:13:52,https://api.github.com/repos/twitter/finagle/git/commits/e769d7cffb29082c420af9de94a557ff0490b793,e769d7cffb29082c420af9de94a557ff0490b793,"finagle-mysql: use direct executor for Caffeine in PrepareCacheTest

Problem

PrepareCacheTest is flaky when we ported the underlying cache
to caffeine. This is likely because caffeine delegates some
of its work to an executor which doesn't inline the work.

Solution

Refactor `PrepareCache` to take a caffeine cache as a parameter
and configure the executor for tests.

RB_ID=849798"
jcrossley,2016-07-07 22:55:00,https://api.github.com/repos/twitter/finagle/git/commits/0d51cd6caa8aaffa797029ae5cde9edf68f2fc7d,0d51cd6caa8aaffa797029ae5cde9edf68f2fc7d,"finagle/finagle-memcached: Decoder on Buf

Problem

As we move to Netty 4, we want decoding to be in terms of Buf,
not ChannelBuf.

Solution

Make decoding in terms of Buf.

RB_ID=836404"
vkostyukov,2016-07-07 22:41:00,https://api.github.com/repos/twitter/finagle/git/commits/7efeb4cc2babd7c99731090fa76ad960627fce14,7efeb4cc2babd7c99731090fa76ad960627fce14,"csl: Release CSL libraries

Problem / Solution

Finagle 6.36
Util 6.35
Ostrich 9.19
TwitterServer 1.21
Finatra 2.2.0
Scrooge 4.8.0

RB_ID=849873"
jcrossley,2016-07-07 17:54:59,https://api.github.com/repos/twitter/finagle/git/commits/06c69dc8c691782037807aef8713146640f31411,06c69dc8c691782037807aef8713146640f31411,"finagle/finagle-memcached: Buf framer for Memcached

Problem

As part of the move to Netty 4, we want framing in terms of Buf.

Solution

Introduce Buf framers in Memcached.

RB_ID=848795"
stuhood,2016-07-06 22:44:00,https://api.github.com/repos/twitter/finagle/git/commits/89ba5ee4fd65bb26e9a3371e260ca3608a07c230,89ba5ee4fd65bb26e9a3371e260ca3608a07c230,"Fix response-classifier HTTP example

Problem:

Response classifier docs have a mismatched example for HTTP.

Solution:

Fixed the HTTP example.

RB_ID=849136"
cacoco,2016-07-06 22:32:20,https://api.github.com/repos/twitter/finagle/git/commits/e10bd48ede349349e0eb3c3acdc36f340941847d,e10bd48ede349349e0eb3c3acdc36f340941847d,"Twitter OSS: Add ISSUE_TEMPLATE

Problem

Open source contributors don't have a standardized way of including information we
would like to be included when contributors open issues.

Solution

Create an ISSUE template for opening issues. The template is useful for customizing
and standardizing information we'd like to have contributors include when opening
an issue against a library.

Result

More help when creating issues in our Twitter OSS repositories.

RB_ID=849239"
mosesn,2016-07-06 21:09:20,https://api.github.com/repos/twitter/finagle/git/commits/4a88fc8f08fa3a5ed6debf6c60862b3df6f23861,4a88fc8f08fa3a5ed6debf6c60862b3df6f23861,"finagle-http2: Turn off Http2TransporterTests too

Problem

We're still failing our travisci build because of a tiny test in http2.

Solution

Short-term: disable it!  Long-term: Re-enable it once we figure out
why it's breaking.

RB_ID=849381
TBR=true"
mosesn,2016-07-06 18:46:37,https://api.github.com/repos/twitter/finagle/git/commits/888da4b0d34c7dc7b5436d4855c093274d9bbd3d,888da4b0d34c7dc7b5436d4855c093274d9bbd3d,"finagle-http2: Turn off flaky test

Problem

We're failing our travisci build because of a tiny test in http2.

Solution

Short-term: disable it!  Long-term: Re-enable it once we figure out
why it's breaking.

RB_ID=849268"
kevinoliver,2016-07-05 21:49:46,https://api.github.com/repos/twitter/finagle/git/commits/e14a14944a3ed7f6078b0a93ea519a990154668d,e14a14944a3ed7f6078b0a93ea519a990154668d,"finagle-toggle: Make JSON description optional

Problem

For a service owner's JSON configuration files, it is detrimental to
require the description field. This is because the library owner has
defined the toggle in their configuration file and as such, requiring
the service owner to also add a description is wasteful and could lead
to confusion in the future if they input something incorrect.

Solution

Ignore the description field for service owner's config files.

Also, in preparation for future work, `ToggleMap.newMutable` and
`ToggleMap.Proxy` have been made public.

RB_ID=848340"
roanta,2016-07-05 20:35:14,https://api.github.com/repos/twitter/finagle/git/commits/c3e758b1b8161cab0fe1287b5af494243acaa50b,c3e758b1b8161cab0fe1287b5af494243acaa50b,"Problem

We want mux and thrift-mux on netty4.

Solution

Introduce a pipeline implementation of mux framing on netty4
and wire in all the neccessary configuration for clients and
servers to talk over netty4.

Result

ThriftMux.client
 .configured(Mux.param.MuxImpl.Netty4)
 .newService(dest)

ThriftMux.server
  .configured(Mux.param.MuxImpl.Netty4)
  .serveIface(...)

RB_ID=842869"
cacoco,2016-07-05 18:53:44,https://api.github.com/repos/twitter/finagle/git/commits/e68d9e3b67c2f931dbb0c10fce94d8869523d931,e68d9e3b67c2f931dbb0c10fce94d8869523d931,"finagle: Ensure TravisCI configuration is exhaustive

Problem

Not every testable finagle sub-project is listed in the
.travis.yml configuration.

Solution

Add testable projects.

Result

More exhaustive TravisCI testing.

RB_ID=848844"
jcrossley,2016-07-01 22:40:50,https://api.github.com/repos/twitter/finagle/git/commits/125658ebbff8b3588b231d14282094856b8948a0,125658ebbff8b3588b231d14282094856b8948a0,"finagle/finagle-core: Correctly include time to wait for stalled pipeline in dispatcher error msg

Moved variable declaration above use in error msg string, so it's not null.

RB_ID=848502"
kevinoliver,2016-06-30 05:49:52,https://api.github.com/repos/twitter/finagle/git/commits/14fcabc604ced9706ee0865817bf70caf6e6161d,14fcabc604ced9706ee0865817bf70caf6e6161d,"finagle-toggle, twitter-server: Add admin UI for Toggles

Problem

We lack visibility into a service's `Toggle` configuration.

Solution

finagle-toggle:

* Add a source field to `Toggle.Metadata` to cover where a `Toggle`
  comes from. Often this will be a `ToggleMap.toString`.

* Add `ToggleMap.components(ToggleMap): Seq[ToggleMap]` which
  extracts all of the composite `ToggleMaps` that make up the given
  `ToggleMap`.

* Add `StandardToggleMap.registeredLibraries` which returns a mapping
  of libraryName to `ToggleMap` for all `ToggleMaps` created with
  `StandardToggleMap`.

twitter-server:

* Add a new admin endpoint ""/admin/toggles.json"" that renders all
  `StandardToggleMap` registered toggles.

Result

Better visibility into Toggle configuration at runtime.

RB_ID=847434"
kevinoliver,2016-06-30 00:39:01,https://api.github.com/repos/twitter/finagle/git/commits/1b0efde0ff6223cec789e146e7343ba18934975e,1b0efde0ff6223cec789e146e7343ba18934975e,"finagle-toggle: Various minor changes

Problem

As work on toggles has progressed there are small bits of API changes
and implementation details that needed some touch ups.

Solution

* Rename `ToggleMap.MutableToggleMap` to `ToggleMap.Mutable`
* Remove global `ToggleMap.mutable`
* Validate libraryName in `StandardToggleMap.apply`

RB_ID=847202"
atollena,2016-06-29 20:49:44,https://api.github.com/repos/twitter/finagle/git/commits/5d2cb2a51520170e007c47ea39f8955e953bcabf,5d2cb2a51520170e007c47ea39f8955e953bcabf,"finagle-core: Use InetResolver in the /$/inet Namer

Problem
--

Names of the form `/$/inet` resolve hostnames via a call to `new
InetSocketAddress`.  This constructor can block on DNS resolution, potentially
inside a finagle thread. In addition, resolution is only performed once when
using `/$/inet`. If DNS configuration changes for this name, changes are never
surfaced in the resulting address.  The logic to work around those problems
already exists in `InetResolver`, but `/$/inet` names do not use it.

Solution
--

Use InetResolver when resolving `/$/inet`, causing resolution to happen in a
separate thread pool.  To avoid timing issues in tests, explicitly use a local
address with `/$/inet/localhost/<port>` and `/$/inet/<port>`.

Result
--

DNS resolution for `/$/inet` names are performed in a thread pool, and DNS
configuration changes are taken into consideration.

RB_ID=835411"
mosesn,2016-06-29 06:05:44,https://api.github.com/repos/twitter/finagle/git/commits/45aa48c3c0abcfae2ccd2c947d7297aef7e99a60,45aa48c3c0abcfae2ccd2c947d7297aef7e99a60,"finagle-http2: Adds {client,server}-specific tests

Problem

End to end tests are too coarse to understand where a given problem is.

Solution

Add {client,server}-specific tests.

RB_ID=847081"
kevinoliver,2016-06-28 23:58:56,https://api.github.com/repos/twitter/finagle/git/commits/8f4100b21efcb0ef69284265a68dbecd7ac3f915,8f4100b21efcb0ef69284265a68dbecd7ac3f915,"finagle-toggle: ToggleMap.orElse should keep Metadata descriptions

Problem

Most `Toggle.Metadata` does not have a `description` as the
`ToggleMap` implementations don't have this data. When we combine
`ToggleMaps` with `orElse` we should try to keep `description` when we
can.

Solution

Continue to prefer the rest of the `Metadata` from `self` but use
descriptions from `that` if its not defined.

RB_ID=847122"
kristofa,2016-06-28 22:02:10,https://api.github.com/repos/twitter/finagle/git/commits/5c8862984b9f01e6863459d8bba4f548981b2629,5c8862984b9f01e6863459d8bba4f548981b2629,"finagle-memcached: Bugfix memcached Zipkin integration

Problem

When getting a value from memcached the cache hit/miss annotation
was submitted after the cr annotation was submitted.

Submitting the cache hit/miss annotation after the cr annotation resulted
in the span being recreated and ending up in the DeadlineSpanMap.
When the deadline exceeded the span was submitted a 2nd time overwriting
the correct duration of the original span.  Once that happened
the span was also annotated with 'finagle.flush'.

Solution

Update the memcached specific tracing filter so memcached specific
annotations are submitted in between cs and cr annotations.

Result

The memcached span is not re-submitted a 2nd time and does not end
up in DeadlineSpanMap. The duration is correct when viewed in zipkin-web
and there is no 'finagle.flush' annotation anymore.

Signed-off-by: Jillian Crossley <jillianc@twitter.com>

RB_ID=847035"
stefanlance,2016-06-28 21:17:18,https://api.github.com/repos/twitter/finagle/git/commits/c8332024d7b95816d8b3b4f63f06d902c93444cf,c8332024d7b95816d8b3b4f63f06d902c93444cf,"finagle: Uncomment finagle-thrift and finagle-thriftmux from .travis.yml build matrix

Problem:

The finagle-thrift and finagle-thriftmux lines are commented out in Finagle's
.travis.yml build matrix, because the Scrooge SBT plugin fails to build them.

Solution:

Make the Scrooge SBT plugin build finagle-thrift and finagle-thriftmux tests via
a previous commit, and then uncomment the commented out lines in .travis.yml.

Result:

Finagle's .travis.yml file now includes all Finagle subprojects in its build
matrix.

RB_ID=847108"
kevinoliver,2016-06-28 19:16:42,https://api.github.com/repos/twitter/finagle/git/commits/cdf0026241d2b8c4f7c89c9d2f75931642d7e171,cdf0026241d2b8c4f7c89c9d2f75931642d7e171,"finagle-toggle: Fix bug in ToggleMap.of

Problem

`ToggleMap.of` was adding the first `ToggleMap` two times. This should
not have caused any changes in behavior, but it adds unnecessary
overhead.

Solution

Only add the first element once.

RB_ID=847080"
kevinoliver,2016-06-28 17:34:50,https://api.github.com/repos/twitter/finagle/git/commits/a1c56defdb04d82d0ba1fec14b5a6a457b61dee7,a1c56defdb04d82d0ba1fec14b5a6a457b61dee7,"finagle-core: Prevent HashedWheelTimer.Default from being stopped

Problem

Finagle has an expectation that `HashedWheelTimer.Default` is always
running. However we don't prevent users from shutting it down.

Solution

Make `HashedWheelTimer.Default` have a wrapper that prevents `stop()`
and includes logging to help users track down the caller.

RB_ID=846194"
stefanlance,2016-06-28 16:45:37,https://api.github.com/repos/twitter/finagle/git/commits/682dd7f8f35e9e9eb4d3678ad453b03c4687de0c,682dd7f8f35e9e9eb4d3678ad453b03c4687de0c,"scrooge-sbt-plugin, finagle: Handle compiling for multiple languages and update Finagle Build.scala to build Java and Scala bindings

Problem:

The Scrooge SBT plugin fails to build the `finagle-thriftmux` and
`finagle-thrift` tests, because they require both Scala and Java bindings, but
Scrooge can only to generate bindings for one language. After fixing this
problem, the ""ThriftMux client to Thrift server "" test fails with an
OutOfMemoryError.

Solution:

Change the Scrooge language SettingKey from a `SettingKey[String]` to a
`SettingKey[Seq[String]]`, and set `scroogeLanguages` to `Seq(""java"", ""scala"")`
in Finagle's `Build.scala` file. Also, increase Finagle's SBT memory limit from
2G to 4G.

Result:

Now the Scrooge SBT plugin can generate bindings for multiple languages.

RB_ID=846198"
edma2,2016-06-27 21:58:04,https://api.github.com/repos/twitter/finagle/git/commits/f14cd46dd0058ecb20d60ecaec58414bae57514f,f14cd46dd0058ecb20d60ecaec58414bae57514f,"finagle-core: fix flaky FixedInetResolverTest

Problem:

Cache size is computed via `Cache.estimatedSize()`, which is
documented as being potentially inaccurate.

Solution:

Refactor InetResolver into more granular components and inject a
cache via constructor.

Result:

Cache stats are cleaned up before assertions which makes tests pass.

RB_ID=846215"
vkostyukov,2016-06-27 17:24:16,https://api.github.com/repos/twitter/finagle/git/commits/b98237f28fc7baeaaf37bec027eff62223396513,b98237f28fc7baeaaf37bec027eff62223396513,"finagle-redis: Replace CB with Buf in sorted set commands

Problem / Solution

Redis client exposes N3 `ChannelBuffer` in its API. It's important for us to
remove it and unblock N4 migration for finagle-redis.

This change migrates `SortedSetCommands` to `Buf`s.

RB_ID=846074
TBR=true"
kevinoliver,2016-06-24 17:11:20,https://api.github.com/repos/twitter/finagle/git/commits/3c6a25910092219eeabfbf5b4ba95ef0338d88d9,3c6a25910092219eeabfbf5b4ba95ef0338d88d9,"finagle-toggle: Introduce environment into StandardToggleMap

Problem

A safer rollout for a toggle in many cases is to enable the feature
for staging environments before turning it on in production.

Solution

Introduce `ServerInfo.environment` which can report the enviroment a
server is running in. This is utilized by `StandardToggleMap` to
prefer environment-specific JSON configuration before
non-environment-specific JSON configuration.

Result

Library owners will be able to enable Toggles in a safer manner.

RB_ID=845877"
dschobel,2016-06-24 05:28:00,https://api.github.com/repos/twitter/finagle/git/commits/1314c6919089971051c00d3c0f231940eee61364,1314c6919089971051c00d3c0f231940eee61364,"finagle-http: add IoEngineImpl to registry

Problem / Solution

We want to track netty4 adoption for http 1.1, add a registry entry
which records `IoEngineImpl`.

RB_ID=845674"
ryanoneill,2016-06-23 22:28:20,https://api.github.com/repos/twitter/finagle/git/commits/5a91b3c1b5313e7a2d4daa7fa0fc9adb34a848b3,5a91b3c1b5313e7a2d4daa7fa0fc9adb34a848b3,"finagle-core: Remove Call of setEnableSessionCreation on SSLEngines

Problem

For SSLEngines created by and passed into Finagle for use with TLS,
the setEnableSessionCreation method is called on the engine with a
value of true. true is the default for JSSE implementations, and
finagle-native treats this call as a no-op. However, for other native
engines this call can be an unsupported operation, because there is no
available way to turn off session creation.

Solution

Remove this call from the internals of finagle, so that exceptions
are not thrown when trying to call setEnableSessionCreation on
SSLEngines which do not support it.

RB_ID=845765"
vkostyukov,2016-06-23 18:17:11,https://api.github.com/repos/twitter/finagle/git/commits/071bb6eb2e95b26a4335e5501663a5d6290975b0,071bb6eb2e95b26a4335e5501663a5d6290975b0,"finagle-redis: Replace CB with Buf in set commands

Problem / Solution

Redis client exposes N3 `ChannelBuffer` in its API. It's important for us to
remove it and unblock N4 migration for finagle-redis.

This change migrates `SetCommands` to `Buf`s.

RB_ID=845578"
vkostyukov,2016-06-23 17:33:10,https://api.github.com/repos/twitter/finagle/git/commits/d9402e5acc8efabf2c7ce5a3a622e16c5e01a42c,d9402e5acc8efabf2c7ce5a3a622e16c5e01a42c,"finagle-redis: Replace CB with Buf in pub/sub commands

Problem / Solution

Redis client exposes N3 `ChannelBuffer` in its API. It's important for us to
remove it and unblock N4 migration for finagle-redis.

This change migrates `PubSubCommands` to `Buf`s.

RB_ID=845087"
kevinoliver,2016-06-22 23:24:47,https://api.github.com/repos/twitter/finagle/git/commits/f3e8f7ef351ae42ad868ba7a170a5fe4165393d2,f3e8f7ef351ae42ad868ba7a170a5fe4165393d2,"finagle-toggle: optimize NullToggleMap.orElse and Toggle.Undefined.orElse

Problem

`NullToggleMap.orElse` and `Toggle.Undefined.orElse` create
unnecessary work as their returned instances will always end up
delegating to the instance passed into them.

Solution

Optimize these away by returning the passed in values.

RB_ID=845099"
olix0r,2016-06-22 22:54:54,https://api.github.com/repos/twitter/finagle/git/commits/caa4da809a754c8327be2433fb7ef90e2d289422,caa4da809a754c8327be2433fb7ef90e2d289422,"Ensure that Transport.collate's future is satisfied before its reader is closed

Problem

There is a subtle race condition between DelayedReleaseService and
HttpTransport. DelayedReleaseService may be notified that a stream has
completed before the underlying transport has observed this update. This allows
services to be released to the CachingPool before HttpTransport has an
opportunity to update its ConnectionManager's state. This may manifest as a
ConnectionClosedException, when a closed transport is returned as valid by
CachingPool.

Solution

Update Transport.collate to satisfy its closure promise before actually closing
the response stream. This allows the ConnectionManager to observe the state
update before a response's Readers are notified.

Fixes twitter/finagle#517

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=844959"
roanta,2016-06-22 21:36:37,https://api.github.com/repos/twitter/finagle/git/commits/d0a03e99e27cf277fd580b12a6bd2335b2c13a66,d0a03e99e27cf277fd580b12a6bd2335b2c13a66,"finagle-mysql: flaky PrepareCacheTest

Problem / Solution

The PrepareCacheTest was flaky because it strictly checked for LRU
eviction which isn't the case with a Caffeine cache. We don't need
that guarantee, so it's okay to not test for it strictly.

RB_ID=845267"
vkostyukov,2016-06-22 21:35:19,https://api.github.com/repos/twitter/finagle/git/commits/35142c5fe517fc929ded9c90cc87709728e27d35,35142c5fe517fc929ded9c90cc87709728e27d35,"finagle-redis: Replace CB with Buf in HyperLog commands

Problem / Solution

Redis client exposes N3 `ChannelBuffer` in its API. It's important for us to
remove it and unblock N4 migration for finagle-redis.

This change migrates `HyperLogLogCommands` to `Bufs`.

RB_ID=844945
TBR=true"
vkostyukov,2016-06-22 18:20:49,https://api.github.com/repos/twitter/finagle/git/commits/a7befeddc8a14a10badaa2b83155f27288b64315,a7befeddc8a14a10badaa2b83155f27288b64315,"finagle-redis: Replace CB with Buf in btree commands

Problem / Solution

Redis client exposes N3 ChannelBuffer in its API. It's important for us to
remove it and unblock N4 migration for finagle-redis.

This change migrates `BtreeSortedSetCommands` to `Bufs`.

RB_ID=844862
TBR=true"
mosesn,2016-06-22 01:00:03,https://api.github.com/repos/twitter/finagle/git/commits/1adadec15ed906c3e29fc533efe63a79e67237c2,1adadec15ed906c3e29fc533efe63a79e67237c2,"finagle-core: Unrevert + fix pipelining interrupts improvement

Problem

We figured that services probably knew what they were doing when
they interrupted pipelined connections manually, and probably really
wanted to kill that connection, but forgot that folks sometimes
have clients who have really tight timeouts who want to cause them
trouble.  We also stopped failing the future, since we realized
that it's going to be trickier to rollout than we first anticipated.

Solution

Handle all interrupts uniformly.

RB_ID=843153"
dschobel,2016-06-21 20:49:20,https://api.github.com/repos/twitter/finagle/git/commits/7596608d30de2df68726399ec50b7a46941228ed,7596608d30de2df68726399ec50b7a46941228ed,"finagle-http: re-enable http end to end tests

Problem / Solution

Flakiness is confined to a single n3 http 1.1 test. Mark that the
feature flaky while re-enabling the rest of the suite.

RB_ID=844766"
vkostyukov,2016-06-21 20:23:43,https://api.github.com/repos/twitter/finagle/git/commits/39b0e364912dfd16812f94417d4e93204c9a8150,39b0e364912dfd16812f94417d4e93204c9a8150,"finagle-redis: Replace CB with Buf in list commands

Problem / Solution

Redis client exposes N3 `ChannelBuffer` in its API. It's important for us to
remove it and unblock N4 migration for `finagle-redis`.

This change migrates `ListCommands` to `Buf`s.

RB_ID=844596
TBR=true"
vkostyukov,2016-06-21 17:20:37,https://api.github.com/repos/twitter/finagle/git/commits/053c801a333ff1c4a14aac07213ca8698463ad88,053c801a333ff1c4a14aac07213ca8698463ad88,"finagle-redis: Replace CB with Buf in hash commands

Problem / Solution

Redis client exposes N3 ChannelBuffer in its API. It's important for us to
remove it and unblock N4 migration for finagle-redis.

This change migrates `HashCommands` to `Buf`s.

RB_ID=843596
TBR=true"
dschobel,2016-06-21 07:17:06,https://api.github.com/repos/twitter/finagle/git/commits/f9d024f9e8c45a7a20b404484686cc6acbb150ae,f9d024f9e8c45a7a20b404484686cc6acbb150ae,"finagle-stats: tag flaky tests

Problem / Solution

In aggregate these three tests cause a 7.5% failure rate in iron-sandbox.
Mark them as flaky.

RB_ID=844708
TBR=true"
dschobel,2016-06-21 05:22:45,https://api.github.com/repos/twitter/finagle/git/commits/62c515f771da0968d693230a5bb5e41b844efb2a,62c515f771da0968d693230a5bb5e41b844efb2a,"finagle-core: mark FixedInetResolverTest as flakey

Problem / Solution

Test fails reliably. Mark it as flakey.

RB_ID=844701"
dschobel,2016-06-21 00:34:00,https://api.github.com/repos/twitter/finagle/git/commits/24b186a4a76e62cde16e18f05c2754007efd9d5f,24b186a4a76e62cde16e18f05c2754007efd9d5f,"finagle-netty4-http: propagate remote host address to http request

Problem

Finagle's netty4 http dispatcher fails to copy the address of the
client host to the inbound http request.

Solution

Copy the remote address.

RB_ID=844076"
mosesn,2016-06-20 22:29:08,https://api.github.com/repos/twitter/finagle/git/commits/460324221433c95afa12a99c1b518e02ef511593,460324221433c95afa12a99c1b518e02ef511593,"finagle-{core,netty4}: Adds tests for cutting the connection

Problem

Still trying to narrow down why netty4 doesn't see cut connections.  Feels like we're getting closer.

Solution

Added more tests

RB_ID=843795"
vkostyukov,2016-06-20 20:56:00,https://api.github.com/repos/twitter/finagle/git/commits/626dd73d014f22467fcb5607dd407dcfbd978d7c,626dd73d014f22467fcb5607dd407dcfbd978d7c,"finagle-redis: Remove deprecated methods on Client

Problem / Solution

Redis client exposes N3 `ChannelBuffer` in its API. It's important for us to
remove it and unblock N4 migration for `finagle-redis`.

This change only removes methods that have been deprecated three months ago.

RB_ID=843455
TBR=true"
kevinoliver,2016-06-20 17:54:16,https://api.github.com/repos/twitter/finagle/git/commits/9b04fc2bdec148f0c481bb265f43e741f03f0350,9b04fc2bdec148f0c481bb265f43e741f03f0350,"finagle-toggle: Log when mutable Toggles change state

Problem

There is no audit trail of changes to mutable Toggles making it harder
for service owners to know what changed.

Solution

Log changes to mutable Toggles.

RB_ID=844156"
kevinoliver,2016-06-20 17:23:57,https://api.github.com/repos/twitter/finagle/git/commits/d6eb29539580d4e331814eee176fa8bc37a9c4e8,d6eb29539580d4e331814eee176fa8bc37a9c4e8,"finagle-toggle: Add metrics to Toggles

Problem

Users need visibility into how `Toggles` are configured.

Solution

Introduce `ToggleMap.observed` which adds a gauge that summarizes the
current state of its `Toggles` into a checksum. This can be useful for
comparing state across a cluster or over time.

Result

A new gauge is added: ""toggles/$libraryName/checksum""

RB_ID=843634"
niw,2016-06-20 17:11:32,https://api.github.com/repos/twitter/finagle/git/commits/cc891eb3903e452d8d283c2cb5338a8e4fd53726,cc891eb3903e452d8d283c2cb5338a8e4fd53726,"finagle-mysql: Fix TimestampValue extractor to accept any character sets

Problem

The current `TimestampValue` extractor used for MySQL protocol
expects binary character set, however, this assumption is not always
true. For example, MySQL sends the default connection character set for
the timetamp columns in views.

Solution

* Remove `Charset.Binary` from the pattern match, take care of
  character set sent from server for text protocl or ignore it for
  binary protocol.

RB_ID=844252"
kevinoliver,2016-06-17 17:00:53,https://api.github.com/repos/twitter/finagle/git/commits/9da89ce94e0530ab2d01dad538728cb24f97b65b,9da89ce94e0530ab2d01dad538728cb24f97b65b,"finagle-toggle: Add optional comment field in JSON

Problem

It is useful to be able to leave comments in your configuration files
to explain why decisions were made. Unfortunately, JSON doesn't
support inline comments.

Solution

Add an optional ""comments"" field to the ""toggle"" hash which is ignored
in the creation of the `ToggleMap` and serves a similar purpose.

RB_ID=843410"
mosesn,2016-06-15 21:48:48,https://api.github.com/repos/twitter/finagle/git/commits/22b9a2e36cb9bb46118a8d0790b4d44ad3b4c645,22b9a2e36cb9bb46118a8d0790b4d44ad3b4c645,"finagle-netty4: Validate that clients hang up properly

Problem

Still trying to debug this hangup issue.  More tests coming.

Solution

Netty4 clients are radddd!

RB_ID=842677"
elifdd,2016-06-15 21:03:54,https://api.github.com/repos/twitter/finagle/git/commits/3054063f3943e58ad7b8a4413916b4f4a993cf8f,3054063f3943e58ad7b8a4413916b4f4a993cf8f,"finagle-redis: Add HLEN to HashCommands

Problem
finagle-redis HashCommands do not have HLEN implementation. (http://redis.io/commands/hlen).

Solution
Add HLEN implementation.

RB_ID=842710"
kevinoliver,2016-06-15 17:05:35,https://api.github.com/repos/twitter/finagle/git/commits/1b2d3155836fab27be3baee81089a047867009ec,1b2d3155836fab27be3baee81089a047867009ec,"finagle-toggle: Add JSON configs to StandardToggleMap

Problem

`StandardToggleMap` was eagerly awaiting the day when it could load
JSON configs via resource files.

Solution

Wire up loading of JSON resource files.

Result

The day has come and now JSON configs are now loaded from resources.
Next step is to add environment specific JSON configuration.

RB_ID=842405"
mosesn,2016-06-15 00:30:09,https://api.github.com/repos/twitter/finagle/git/commits/34d7e82c126ab1aaaac530f53daaa67c20d45d9f,34d7e82c126ab1aaaac530f53daaa67c20d45d9f,"finagle-core: Interrupt pipelined failures after waiting for a long time

Problem

We never cut connections on timeouts, even if they're hung.

Solution

Wait after a timeout to see if the pipeline ever clears–if it
doesn't, but continues to back up, cut the connection.

Result

Even if a pipelined connection hangs on a single request, we're
able to restart the connections and begin to make progress again.

RB_ID=827731"
vkostyukov,2016-06-14 23:28:58,https://api.github.com/repos/twitter/finagle/git/commits/befcf45852684895fc8892104667bd67853aa912,befcf45852684895fc8892104667bd67853aa912,"finagle-core: Remove socksProxy from ClientTransportParams

Problem / Solution

There is a `with`-API method for configuring SOCKS proxy per client
transport, which is misleading given that it will be eventually
suppressed by a CLI flag. Let's remove it before it's too late.

RB_ID=842512"
mosesn,2016-06-14 20:40:03,https://api.github.com/repos/twitter/finagle/git/commits/54baabeb30faca36a431269abefac2b30cf5efe8,54baabeb30faca36a431269abefac2b30cf5efe8,"finagle-http2: Hook up http-specific netty stuff

Problem

We have a bunch of http-specific netty stuff that we hadn't hooked
up to http2 yet.

Solution

Hook it up.  One interesting impedance mismatch was that since we
pass pipeline manipulations as a ChannelInitializer, it's easiest
to reason about the rest of the initializations as a ChannelInitializations
too.

RB_ID=841987"
mosesn,2016-06-14 20:18:24,https://api.github.com/repos/twitter/finagle/git/commits/1d0df1572647b986cab24546a833fc91cd95743c,1d0df1572647b986cab24546a833fc91cd95743c,"finagle-netty4: Cleans up ChannelTransport tests

Problem

I'm trying to debug why interrupts don't seem to cut the connection
in netty4

Solution

Poke around at unit tests to improve my understanding

Result

I'm confident in the existing implementation.

RB_ID=842058"
vkostyukov,2016-06-14 19:21:42,https://api.github.com/repos/twitter/finagle/git/commits/bdbf1ab1536d39b058608423dff9845aa7913e6b,bdbf1ab1536d39b058608423dff9845aa7913e6b,"finagle-netty4: Wire up Netty 3 related params for proxies

Problem

`finagle-netty4` supports slightly new approach for HTTP/SOCKS proxies
and doesn't wire up `Transporter.*Proxy` params.

Solution

Provide backward-compatible proxy support in `finagle-netty4` that's
completely aligned with what's in `finagle-core` (Netty 3) today.

RB_ID=842096"
dschobel,2016-06-14 18:20:13,https://api.github.com/repos/twitter/finagle/git/commits/751bff3dd002a3e5dd8a1455123795e85b987be5,751bff3dd002a3e5dd8a1455123795e85b987be5,"finagle-netty4: fix direct buffer leak

Problem

In the 4.1.1.Final release netty changed the default
direct byte buffer allocator to require ref counting by
disabling their ""Cleaner"" mechanism.

Solution

Opt out of the optimization and force the Cleaner enabled
direct byte bufs.

RB_ID=842389"
vkostyukov,2016-06-14 17:47:58,https://api.github.com/repos/twitter/finagle/git/commits/f263898dda042b13a84602dd127d54acad1d3992,f263898dda042b13a84602dd127d54acad1d3992,"finagle-docs: Add section on HTTP/SOCKS5 proxies to Clients.rst

Problem / Solution

Finagle User Guide lacks documentation on client transport params.
Let's start a good tradition by adding the new `Transport` section to
the `Clients.rst` file and explaining proxies support in Finagle.

RB_ID=842044"
cacoco,2016-06-13 22:12:13,https://api.github.com/repos/twitter/finagle/git/commits/ec66454c0658d9597a49ad6a5d6af6bc2421bead,ec66454c0658d9597a49ad6a5d6af6bc2421bead,"finagle: Remove finagle-cacheresolver from TravisCI project list

Problem

finagle-cacheresolver is no longer a thing.

Solution

Remove it from the TravisCI configuration.

RB_ID=842074"
kevinoliver,2016-06-10 20:43:40,https://api.github.com/repos/twitter/finagle/git/commits/a0b8373ab798c9874664bf1faf4ee43f927c5ffe,a0b8373ab798c9874664bf1faf4ee43f927c5ffe,"finagle-toggle: Add sbt dependencies

Problem / Solution

finagle-toggle was missing jackson dependencies in the sbt build.

RB_ID=841584"
cacoco,2016-06-10 19:56:08,https://api.github.com/repos/twitter/finagle/git/commits/e9b66a1f17b958c03deb41827ddf1925a18cd35d,e9b66a1f17b958c03deb41827ddf1925a18cd35d,"finagle: Update TravisCI configuration

Problem

The last updates did not work as expected.

Solution

Update .travis.yml configuration to properly build
the sub-projects across VMs and remove the test
coverage reporting for now since this is not
expected to work when the tests are run across
VMs.

RB_ID=841301"
kevinoliver,2016-06-10 17:23:37,https://api.github.com/repos/twitter/finagle/git/commits/c0c889afd33914ad308cc317ce7e0810133833ed,c0c889afd33914ad308cc317ce7e0810133833ed,"finagle-toggle: Add JSON ToggleMap configuration format

Problem

Toggle configuration will soon be specified by JSON configuration
files and we need a way to parse them.

Solution

Introduce `JsonToggleMap` to parse JSON into a `ToggleMap`.

Result

A first step towards file-based Toggle configuration.

RB_ID=840989"
sveinnfannar,2016-06-09 23:13:23,https://api.github.com/repos/twitter/finagle/git/commits/989edc58084fa01b6e6557ff5b6adda594ba469f,989edc58084fa01b6e6557ff5b6adda594ba469f,"finagle-zipkin: Extract transport agnostic code into finagle-zipkin-core

Problem

Address issue #465 (Add http and kafka transports to zipkin-tracer).
Zipkin can receive traces via Kafka, HTTP and Scribe. Some Finagle
users (including Quizup) already using Kafka are reluctant to
introduce Scribe into their stack as it is no longer maintained.  So
the purpose of this PR is to support Kafka as a transport for Zipkin
traces, as well as structuring the code such that it allows other
transports to be added (like HTTP).

Solution

Extract most of finagle-zipkin into finagle-zipkin-core, leaving
finagle-zipkin with only scribe specific stuff (with no api breaking
changes to finagle-zipkin of course).

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=840494
TBR=true"
olix0r,2016-06-09 22:47:00,https://api.github.com/repos/twitter/finagle/git/commits/ce4ab7ffd917104efe333b58d1409df00aa4b408,ce4ab7ffd917104efe333b58d1409df00aa4b408,"finagle-core: Move HTTP Context filters into the Http client and server stacks

Problem

The headers used to propagate context information are hardcoded into the Http
client and server, provided by Http.{Client,Server}.newDispatcher.

It can be useful to to admit other specific headers, so it should be possible to
replace those filters.

Solution

Insert a ServerContextFilter module at the top of the server stack and a
ClientContextFilter module at the bottom of the client stack. Include the
DtabFilter in the ServerContextFilter module since it extracts similar
contextual information.

Signed-off-by: Antoine Tollenaere <atollenaere@twitter.com>

RB_ID=840600"
kevinoliver,2016-06-09 21:03:55,https://api.github.com/repos/twitter/finagle/git/commits/3291e5eca260d46b4461a9c4f8a4ad060a5dda8e,3291e5eca260d46b4461a9c4f8a4ad060a5dda8e,"finagle-core: Trivial cleanups in Dtab.scala

Problem / Solution

Found and fixed a few minor style issues and such in Dtab.scala and
NameInterpreter.scala.

RB_ID=841027"
vkostyukov,2016-06-09 18:56:42,https://api.github.com/repos/twitter/finagle/git/commits/54b91f511a4b70eefe316d009b0b7ac1f6cb42b7,54b91f511a4b70eefe316d009b0b7ac1f6cb42b7,"finagle-netty4: Enable SOCKS5 proxy support

Problem / Solution

Netty 4 implementation lacks SOCKS proxy support.

**Differences between N3 and N4**

 1. N4 implementation uses CLI flags for SOCKS, but doesn't use stack param `Transporter.SocksProxy`.
    As a long term, we want to keep only one way of configuring SOCKS and should be CLI flags.
 2. N4 implementation doesn't implement SOCKS protocol from scratch but reuses Netty's
    `Socks5ProxyHandler` that does exactly what's needed.
 3. N4 implementation doesn't port `SocketAddressResolveHandler`, a temporary workaround we had
    to introduce to mitigate a problem when all clients from a cluster started talking to a
    single proxy server. We don't port it since we agreed that SOCKS is for development only
    and HTTP (for which, a cluster address represented as a Finagle dest) should be used for
    a production traffic.

RB_ID=839856"
cacoco,2016-06-09 16:34:46,https://api.github.com/repos/twitter/finagle/git/commits/3c3ea9d4b5cff0139df491c8da4413d84099f483,3c3ea9d4b5cff0139df491c8da4413d84099f483,"finagle: Parallelize TravisCI build

Problem

The current finagle build times out due to limitations in TravisCI

Solution

Following the guidelines here:
https://docs.travis-ci.com/user/speeding-up-the-build/

we introduce parallelization by environment variables.

Result

Builds run in parallel and ideally all complete.

RB_ID=840833"
mosesn,2016-06-09 06:30:14,https://api.github.com/repos/twitter/finagle/git/commits/c08737c04215a173b98d862304481f3531a69520,c08737c04215a173b98d862304481f3531a69520,"finagle: Bump netty in build.sbt

RB_ID=840911
TBR=true"
mosesn,2016-06-09 01:15:52,https://api.github.com/repos/twitter/finagle/git/commits/9871fc8612336f04d57ce7bb19a5cee25b984bb5,9871fc8612336f04d57ce7bb19a5cee25b984bb5,"3rdparty: bump netty to 4.1.1.Final

RB_ID=840122"
mosesn,2016-06-08 21:12:57,https://api.github.com/repos/twitter/finagle/git/commits/8321ee66f71be11587960d26565c897ef2ed77c6,8321ee66f71be11587960d26565c897ef2ed77c6,"finagle: Removed all of the guava caches from finagle

Problem

Guava is a very widely used dependency, so it's a pain to OSS users of finagle to have to deal with the dependency in finagle.

Solution

As a first step, let's remove all of the uses of guava cache.  We can replace them with Caffeine, which is a spiritual successor and much simpler.

Result

Many fewer dependencies on Guava!

RB_ID=833970
TBR=true"
roanta,2016-06-08 20:48:24,https://api.github.com/repos/twitter/finagle/git/commits/d7b73dcb54946b8f2e7ee3afe7b8682da3bdf67f,d7b73dcb54946b8f2e7ee3afe7b8682da3bdf67f,"finagle-thriftmux: thrift emulator

Problem

We want to be netty agnostic in thriftmux.

Solution

Move logic built in terms of pipelines into Finagle primitives.

RB_ID=840547"
cacoco,2016-06-08 20:33:34,https://api.github.com/repos/twitter/finagle/git/commits/1554c0f3282fb4637ab9f6a791325f5852fbba00,1554c0f3282fb4637ab9f6a791325f5852fbba00,"util, ostrich, scrooge, finagle, twitter-server: Update to use codecov.io

Problem

We'd like to update to different code coverage tooling.

Solution

Update the projects travis.yml and plugins.sbt files accordingly.

Result

New code coverage instrumentation.

RB_ID=840597"
timxzl,2016-06-07 22:15:53,https://api.github.com/repos/twitter/finagle/git/commits/18a8387e6c1157595c77447f9942e46fed39c8a3,18a8387e6c1157595c77447f9942e46fed39c8a3,"finagle-redis: Add scripting commands

Problem

We want to use scripting commands with finagle-redis, but it doesn't
have support for them.

Solution

Add support for scripting commands!

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=837538"
roanta,2016-06-07 21:57:08,https://api.github.com/repos/twitter/finagle/git/commits/e557d8bda764ffc060bad8302a9fcb82260b2436,e557d8bda764ffc060bad8302a9fcb82260b2436,"finagle-core: Introduce StatsTransport

Problem

As we move more logic into transports, we need to have a principled way of recording
useful metrics at that layer. Today, we have `ChannelStatsHandler` to collection metrics
at the netty layer, `StatsFilter` for the service layer, and nothing for the layer that
glues the two together.

Solution

Create StatsTransport with an initial implementation which records failures in read/write.

RB_ID=839664"
mosesn,2016-06-07 21:27:50,https://api.github.com/repos/twitter/finagle/git/commits/94fa9f50507f479256ec2ff69d8e2e2bf07958e1,94fa9f50507f479256ec2ff69d8e2e2bf07958e1,"integ: Adds a test that shows off leasing

Problem

We didn't have a simulation which demonstrated that leasing worked.

Solution

Provide a simulation and a validation that leasing works.

RB_ID=837553"
kevinoliver,2016-06-06 22:30:30,https://api.github.com/repos/twitter/finagle/git/commits/27f5352c959a57391b0cf3230700d7db7a009c16,27f5352c959a57391b0cf3230700d7db7a009c16,"finagle: Override Codec.protocolLibraryName

Problem

RB 838075 changed how we calculate the protocol library name to always
use the Codec's implementation. Many of the Codecs did not override
this leaving the default of ""not-specified"" used.

Solution

Override the `protocolLibraryName` to do the right thing.

RB_ID=839610"
roanta,2016-06-06 20:47:42,https://api.github.com/repos/twitter/finagle/git/commits/850ff947362892cb611101fba53d83864b9a4a2e,850ff947362892cb611101fba53d83864b9a4a2e,"Problem / Solution

ExpiringService was implemented for ServerBuilder, but not for stack based servers.
This patch moves it to the default server stack.

RB_ID=837726"
vkostyukov,2016-06-06 19:02:28,https://api.github.com/repos/twitter/finagle/git/commits/df311a5b9d3dd988f2dff1a45301ebb4fb05f35a,df311a5b9d3dd988f2dff1a45301ebb4fb05f35a,"finagle-core: Remove RequestSerialisingFilter

Problem / Solution

`RequestSerialisingFitler` is (almost) exact copy of `ReqeustSemaphoreFilter`
and nobody use it.

RB_ID=839372"
yzhuang,2016-06-06 18:19:01,https://api.github.com/repos/twitter/finagle/git/commits/9f8aca9c9a59f83c4b1c703aaea09bd85efbbe3f,9f8aca9c9a59f83c4b1c703aaea09bd85efbbe3f,"[Finagle-exp; DarkTrafficFilter] Change DarkTrafficFilter to forward cancellations to dark service.

RB_ID=839286"
kevinoliver,2016-06-06 16:51:48,https://api.github.com/repos/twitter/finagle/git/commits/89590a7deb17eca699cd3c71b4473f26662c0198,89590a7deb17eca699cd3c71b4473f26662c0198,"finagle-docs: Fix typo in ThriftMux metric docs

RB_ID=839510"
mosesn,2016-06-05 09:15:29,https://api.github.com/repos/twitter/finagle/git/commits/3fc8ab17977e788c123d91c000a57330e41f156f,3fc8ab17977e788c123d91c000a57330e41f156f,"util-codec: Stop depending on apache commons codec

Problem

commons-codec is a pretty big dependency, and now that we're on
jdk8, we don't need it!

Solution

rm it

Result

Smaller dependency tree!

RB_ID=833478
TBR=true"
mosesn,2016-06-04 22:23:56,https://api.github.com/repos/twitter/finagle/git/commits/919cd8fbf8881148e0c2136854ab9524c4e72d4f,919cd8fbf8881148e0c2136854ab9524c4e72d4f,"finagle-netty4: move initialization to ChannelHandler#handlerAdded

Problem

We have to jump through some hoops so that we don't accidentally
write to a channel before it's channelActive is called, but there
shouldn't actually be an ordering dependency between these two
events, because we sometimes learn that a channel is active before
channelActive is called.

Solution

Do all initialization in handlerAdded instead of channelActive

RB_ID=806342"
mosesn,2016-06-04 17:01:57,https://api.github.com/repos/twitter/finagle/git/commits/86ce970435af42859b699c7c33dc3a48e338044d,86ce970435af42859b699c7c33dc3a48e338044d,"finagle-core: Unracify PipeliningDispatcher

Problem

Some memcached users were reporting out-of-order responses in a
pipeline, but in a tcp dump, the responses all seemed correct.  This
suggested there was a bug in the client, and in particular around
the order in which responses are given.

Although it's unlikely, it's possible that writes could race, so
that one write finishes before the other, but enqueues its Promise
later.

Solution

Serialize the write and enqueue step, so that it's no longer possible.

Result

Pipelined protocols are deracinated.

RB_ID=834927"
kevinoliver,2016-06-03 22:13:49,https://api.github.com/repos/twitter/finagle/git/commits/bb9707a9e23de6edc386752f48d6e2cd28734bc4,bb9707a9e23de6edc386752f48d6e2cd28734bc4,"finagle-doc: Document ThriftMux-specific metrics

Problem / Solution

A few `ThriftMux` specific metrics were not covered in the user guide.
Also fixed a few lint warnings in the user guide while in there.

RB_ID=838827"
kevinoliver,2016-06-02 23:22:21,https://api.github.com/repos/twitter/finagle/git/commits/c37d394fe5d33f3135c12814a4cfc8e2f6c80679,c37d394fe5d33f3135c12814a4cfc8e2f6c80679,"finagle-core: Improve scaladocs in ClientBuilder, ServerBuilder

Problem

Some of the methods in `ClientBuilder` and `ServerBuilder` are not
relevant for some protocol implementations.

Solution

Add notes to the scaladocs calling this out.

RB_ID=838633"
kevinoliver,2016-06-02 21:10:34,https://api.github.com/repos/twitter/finagle/git/commits/028070ceea84e4330cec0d3c2f3f3658fa46856d,028070ceea84e4330cec0d3c2f3f3658fa46856d,"finagle-thrift: Remove ThriftClientBufferedCodec

Problem

Finagle's `c.t.finagle.Codec` is tightly tied to Netty 3 in their
public API and their existence will prevent us from removing that
dependency as we move to Netty 4.

Solution

Add `c.t.f.Thrift.Client.withBufferedTransport` to ease migration.

Remove `c.t.f.thrift.ThriftClientBufferedCodec` and
`c.t.f.thrift.ThriftClientBufferedCodecFactory` which were used by
`ClientBuilder.codec` and `ServerBuilder.codec`. Users can replace
usage with `ClientBuilder.stack(Thrift.client.withBufferedTransport)`
or `ServerBuilder.stack(Thrift.server.withBufferedTransport)`.

Result

One less `Codec` in Finagle.

RB_ID=838146
TBR=true"
vkostyukov,2016-06-02 21:04:47,https://api.github.com/repos/twitter/finagle/git/commits/5942ab22047685617bf623c639c72f78a8647194,5942ab22047685617bf623c639c72f78a8647194,"finagle-serverset: Rename resolve to resolve0 to avoid conflicts

Problem / Solution

`c.t.f.Namer` is now abstract class with a static method `resolve`. This
causes a compilation error on `BaseServersetNamer` that also contains
a method (protected) with this very name. Let's rename that to `resolve0`
and keep Java-friendly API for `Namer`.

RB_ID=838381
TBR=true"
kevinoliver,2016-06-02 20:25:48,https://api.github.com/repos/twitter/finagle/git/commits/a60909d4996ff87d016187fe4abf2f899d466e75,a60909d4996ff87d016187fe4abf2f899d466e75,"finagle-doc: Fix up the quickstart

Problem / Solution

The quickstart had a few problems as noted in
https://github.com/twitter/finagle/issues/477

RB_ID=838282"
olix0r,2016-06-02 07:09:28,https://api.github.com/repos/twitter/finagle/git/commits/6b277536a49fb6c4a40032c7e03635c45bc0479b,6b277536a49fb6c4a40032c7e03635c45bc0479b,"Add channel stats to Netty4 clients

Problem

Netty3 includes channel stats (connects, closes, etc) for clients, but the
Netty4 client pipeline does not include channel stats.

Solution

Add ChannelStatsHandler to the Netty4 client pipeline.

Fixes #506

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=837541"
kevinoliver,2016-06-02 03:23:59,https://api.github.com/repos/twitter/finagle/git/commits/30f0fa60a239bad04354c511f50c76e8cd78c18a,30f0fa60a239bad04354c511f50c76e8cd78c18a,"finagle-core: Capture protocolLibraryName for all ClientBuilder.codec methods

Problem

Two of the three `ClientBuilder.codec` methods would capture the
`Codec.protocolLibraryName`, but not the `CodecFactory[Req1,
Rep1]#Client` variant. This leads to information gaps in the registry.

Solution

Create a throw-away `Codec` in that method in order to capture the
protocol's library name.

RB_ID=838075"
mosesn,2016-06-01 17:12:01,https://api.github.com/repos/twitter/finagle/git/commits/ef4612937ebcf9d51bda552fee84187ed7f20593,ef4612937ebcf9d51bda552fee84187ed7f20593,"Revert ""finagle-thriftmux: Lift thrift emulation into a transport""

RB_ID=837991
TBR=true
NO-QUEUE=true"
kevinoliver,2016-06-01 16:59:19,https://api.github.com/repos/twitter/finagle/git/commits/6ba040b30c159a857302351f1b74bd387954c8ee,6ba040b30c159a857302351f1b74bd387954c8ee,"util-core: Remove deprecated Future.isReturn and isThrow

Problem

`c.t.util.Future.isReturn` and `Future.isThrow` are deprecated because
they make it a little too easy to do a blocking operation.

Solution

Remove the methods as users can use the more explicit
`c.t.util.Await.result(Future.liftToTry).isReturn` and
`c.t.util.Await.result(Future.liftToTry).isThrow`.

RB_ID=837329
TBR=true"
atollena,2016-06-01 16:56:00,https://api.github.com/repos/twitter/finagle/git/commits/eb7fdd5edbae9cd31ec777a01b2f60dc8fc076d5,eb7fdd5edbae9cd31ec777a01b2f60dc8fc076d5,"finagle-core: java API for Namer.resolve

Problem
--

It is difficult to use Namer.resolve from Java.

Solution
--

Make Namer an `abstract class` to generate static forwarders on the Namer object
that can be called from Java.

RB_ID=837901"
vkostyukov,2016-06-01 00:27:58,https://api.github.com/repos/twitter/finagle/git/commits/59eed88bbec87a838ca97be5c4f1349013cf4a5b,59eed88bbec87a838ca97be5c4f1349013cf4a5b,"source: NoStacktrace is dead. Long live NoStackTrace

Problem / Solution

Both Finagle and Util have their own versions of `NoStacktrace`, which are
basically copies of the one provided by Scala's standard library. Let's use
what's already out there and reduce both the amount of code we need to maintain
and confusion around three different options. Also, Scala's implementation
supports re-enabling stacktraces via a system-wide option, which might be
useful for debugging.

RB_ID=833188
TBR=true
NO_USER_HOOK=1"
jennazz,2016-05-31 19:20:51,https://api.github.com/repos/twitter/finagle/git/commits/19d4977785dc75f351a771ab3bbc936a4ae0d027,19d4977785dc75f351a771ab3bbc936a4ae0d027," Add CAS support on the server side protocol of memcache

RB_ID=833441"
olix0r,2016-05-31 18:41:35,https://api.github.com/repos/twitter/finagle/git/commits/4488767656c64e6ad67c4eff4099739c18579b2d,4488767656c64e6ad67c4eff4099739c18579b2d,"finagle-http: Implement streaming disconnection tests

Problem

finagle-http's streaming test coverage misses some important cases

Solution

Introduce new tests to http.StreamingTest to validate that

1. A client behaves well when a connection is lost before a server responds.
2. A server closes the transport after responding, as described in twitter/finagle#475.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=837540"
kevinoliver,2016-05-31 18:15:14,https://api.github.com/repos/twitter/finagle/git/commits/df557415d62c5b48f67c620296cfd5de0d62e4f2,df557415d62c5b48f67c620296cfd5de0d62e4f2,"finagle-toggle: Add constraints on ids

Problem

Toggles lack constraints on what their ids can be. Without constraints
there is a high likelyhood of emoji ids. While this may sound
entertaining, it will almost certainly not be for future mainainers.

Solution

Add restrictions on what is allowed to be `A-Za-z0-9._-` and update
existing unit tests to conform.

RB_ID=836828"
kevinoliver,2016-05-31 17:26:59,https://api.github.com/repos/twitter/finagle/git/commits/e82910c914890dd2f05ec0e579e063dbd21b37e5,e82910c914890dd2f05ec0e579e063dbd21b37e5,"finagle-core: Remove duplicate load gauge from StatsFilter

Problem

`StatsFilter` has duplicate gauges which is which both wasteful and confusing.

Solution

Remove the ""load"" gauge.

RB_ID=835199"
kevinoliver,2016-05-31 16:32:13,https://api.github.com/repos/twitter/finagle/git/commits/2759f69a16b25ad2e1fad4cdb6653f765e7c62d0,2759f69a16b25ad2e1fad4cdb6653f765e7c62d0,"finagle-core: Remove duplicated counters from ChannelStatsHandler

Problem

`ChannelStatsHandler` has duplicated metrics which are which are both
wasteful and add confusion.

Solution

Remove its ""closechans"" and ""closed"" counters.

RB_ID=835194"
roanta,2016-05-31 14:22:03,https://api.github.com/repos/twitter/finagle/git/commits/a20e00c2341612ebca9ce1cc27d28e8625e07a73,a20e00c2341612ebca9ce1cc27d28e8625e07a73,"finagle-mux: fix sbt deps

RB_ID=837154"
drewdeponte,2016-05-30 03:22:03,https://api.github.com/repos/twitter/finagle/git/commits/31da47473a049b14a3360a6c34e3897c3d170a7b,31da47473a049b14a3360a6c34e3897c3d170a7b,"Add thrift dependency

Problem

This gem doesn't specify that it depends on thrift in it's gemspec. This
causes problems when then gem is installed and used because its
necessary dependencies are not installed and therefore when it is used
it throws an exception trying to load the thrift dependency.

Solution

Add the thrift dependency to the gemspec.

Result

When this gem is installed rubygems will make sure that the thrift gem
is installed as a dependency. This in turn will make sure that when
people use this gem that it doesn't throw an exception trying to load
the thrift dependency.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=836952"
roanta,2016-05-27 01:25:37,https://api.github.com/repos/twitter/finagle/git/commits/f58d8cca91e36b49ab92b352298c71cb76f4895f,f58d8cca91e36b49ab92b352298c71cb76f4895f,"finagle-mux, thriftmux: Introduce netty4 implementations

Problem

We want mux and thrift-mux on netty4.

Solution

Introduce a pipeline implementation of mux framing on netty4
and wire in all the neccessary configuration for clients and
servers to talk over netty4.

Result

ThriftMux.client
 .configured(Mux.param.MuxImpl.Netty4)
 .newService(dest)

ThriftMux.server
  .configured(Mux.param.MuxImpl.Netty4)
  .serveIface(...)

RB_ID=835088
TBR=true"
mosesn,2016-05-26 20:58:28,https://api.github.com/repos/twitter/finagle/git/commits/f616fae94bab79d0998b1cda21589fcf3930080b,f616fae94bab79d0998b1cda21589fcf3930080b,"csl: Bump scalacheck to 1.12.5

RB_ID=836280"
kevinoliver,2016-05-26 17:47:14,https://api.github.com/repos/twitter/finagle/git/commits/6ca2b5d541d93c720979ee34e9d865e7682b6720,6ca2b5d541d93c720979ee34e9d865e7682b6720,"util-core: Remove deprecated method Future.get(Duration)

Problem

`c.t.util.Future.get(Duration)` is deprecated because it makes it a
little too easy to do a blocking operation.

Solution

Remove the method as users can use the more explicit
`c.t.util.Await.result(Future.liftToTry, Duration)`.

RB_ID=836066
TBR=true"
dschobel,2016-05-25 18:15:00,https://api.github.com/repos/twitter/finagle/git/commits/1b67f5562aac076de32b544229ce30e42a477285,1b67f5562aac076de32b544229ce30e42a477285,"finagle-netty4-http: fix content decompression for non-streaming clients

Problem

Netty4's content decompressor emits http chunks but in its current
pipeline location (after the content dechunker) the client stream
transport will see content chunks for non chunk-encoded messages which
effectively turns a fixed length non-chunked message into a chunked one.

Solution

Decompress content bodies before aggregation.

RB_ID=836213"
mosesn,2016-05-25 03:57:19,https://api.github.com/repos/twitter/finagle/git/commits/52a56fe514285d4510de77143d68535065bab04f,52a56fe514285d4510de77143d68535065bab04f,"csl: Updated OWNERS files

RB_ID=835851"
mosesn,2016-05-25 03:40:28,https://api.github.com/repos/twitter/finagle/git/commits/4fa77da11ea86440ae99e22b43fd9f223fa60402,4fa77da11ea86440ae99e22b43fd9f223fa60402,"csl: Bumped to scalatest 2.2.6

Problem

We want to start cross-building for scala 2.12.x, but there isn't
a published 2.2.4 on 2.12.x

Solution

Bump to scalatest 2.2.6, where there is a published version on
2.12.x.

Result

Crossbuilding goes more smoothly!

RB_ID=835850"
twenovales,2016-05-24 17:34:09,https://api.github.com/repos/twitter/finagle/git/commits/c32fe8c4f6da0f9a249d38af1c5e7dd274c123f6,c32fe8c4f6da0f9a249d38af1c5e7dd274c123f6,"finagle-core: add aperture as option for defaultBalancer

RB_ID=817252"
jcrossley,2016-05-24 17:20:35,https://api.github.com/repos/twitter/finagle/git/commits/ecf12542ceabed1e2357de1a9cec017a0a90b023,ecf12542ceabed1e2357de1a9cec017a0a90b023,"finagle-{memcached, kestrel}: Use BufWriter.dynamic for encoding

Problem

For a Netty 4 enabled memcached client/server, the message encoder
in the pipeline will need to be in terms of Buf.

Solution

Re-write the encoder in terms of Buf and add a Buf => ChannelBuf
handler after it in the pipleline. We plan to unify the conversion across
protocols but this is a first step.

RB_ID=829643"
roanta,2016-05-23 20:12:47,https://api.github.com/repos/twitter/finagle/git/commits/cfd13fe37a6c67086d770af85780497420c4936a,cfd13fe37a6c67086d770af85780497420c4936a,"finagle-netty4: reorder params for consistency

Problem / Solution

Instantiating a netty4 Listener and Transporter is unneccesarily inconsistent.
This patch fixes it.

RB_ID=835443"
ryanoneill,2016-05-23 18:17:11,https://api.github.com/repos/twitter/finagle/git/commits/dccfc055368ba3e6971cf97b46a7a6200f00d004,dccfc055368ba3e6971cf97b46a7a6200f00d004,"finagle-http: Add HTTP Status Code 451

Problem

RFC7725, ""An HTTP Status Code to Report Legal Obstacles"" was published
in February 2016. It is a valid HTTP/1.1 response code, but is not
currently a part of com.twitter.finagle.http.Status.

Solution

Add it to com.twitter.finagle.http.Status (for Scala) and
com.twitter.finagle.http.Statuses (for Java).

RB_ID=834997"
dschobel,2016-05-23 17:36:09,https://api.github.com/repos/twitter/finagle/git/commits/11747fb3a3422ac6e029f354b748caa595d70564,11747fb3a3422ac6e029f354b748caa595d70564,"finagle-cacheresolver: merge contents back into finagle-memcached and rm package

Problem

Finagle-cacheresolver was a transitional bandaid for when we had two
finagle-memcached packages. Since we no longer have two implementations
we don't need a standalone package.

Solution

Move finagle-cacheresolver contents into finagle-memcached.

RB_ID=833602
TBR=true"
dschobel,2016-05-23 17:15:25,https://api.github.com/repos/twitter/finagle/git/commits/496d9a1cc0235ccc985218f7d0c1982abf89d87b,496d9a1cc0235ccc985218f7d0c1982abf89d87b,"finagle-netty4: workaround netty handler allocation bug

Problem

Netty4 uses a pattern of implementing content encoding and decoding
using EmbeddedChannels. The handlers they install into those
EmbeddedChannels use the EmbeddedChannels ChannelContext rather
than the application's ChannelContext. This means that regardless
of which allocator the application bootstrap configures, the global
default allocator is used.

Solution

Make the global default allocator unpooled until
https://github.com/netty/netty/issues/5294 is resolved.

RB_ID=835350"
cacoco,2016-05-23 16:51:59,https://api.github.com/repos/twitter/finagle/git/commits/30417d07138822b3ae161712025903ba8d79a207,30417d07138822b3ae161712025903ba8d79a207,"finagle-http2: Update build dependencies for client-side multiplexing

Problem

Tests in finagle-http2 and finagle-netty4-http need to have access to
the AbstractEndToEndTest in finagle-http.

Solution

Update the dependencies for finagle-http2 and finagle-netty4-http to
indicate that their test depends on finagle-http test. As per sbt
documentation here: http://www.scala-sbt.org/0.13/docs/Multi-Project.html

Result

Code builds and tests run.

RB_ID=835275"
roanta,2016-05-23 16:43:02,https://api.github.com/repos/twitter/finagle/git/commits/a3685dbcbe36bbdae83fbc53723848a9926e1ff2,a3685dbcbe36bbdae83fbc53723848a9926e1ff2,"finagle-thriftmux: Lift thrift emulation into a transport

Problem

We want to be netty agnostic in thriftmux.

Solution

Move logic built in terms of pipelines into Finagle primitives.

RB_ID=828972"
atollena,2016-05-21 00:01:55,https://api.github.com/repos/twitter/finagle/git/commits/a4eddb5617a3d65e6a648085f086f1095139f2ef,a4eddb5617a3d65e6a648085f086f1095139f2ef,"finagle-kestrel: Do not empty cluster when it becomes Pending

Problem
--

Some service discovery implementations (most notably Zk2Resolver) use the Pending state to signal
that the underlying mechanism is currently unavailable (e.g. ZooKeeper is not reachable). Kestrel
MultiReader interprets it as an empty set of Addresses, causing the cluster to empty when service
discovery is not reachable.

Solution
--

Do not empty the server set when Addr goes to Pending.

RB_ID=832923"
mosesn,2016-05-20 22:18:04,https://api.github.com/repos/twitter/finagle/git/commits/9089647a1047482d9d149cec50372a22aecbdeaa,9089647a1047482d9d149cec50372a22aecbdeaa,"finagle-http2: Client-side multiplexing

Problem

http2 clients didn't support multiplexing, which is one of the core
features of http2.

Solution

Created a MultiplexedTransport, which can make Transports which
each represent a given Http2 stream

Result

Without having to change any of the outside logic, streaming now
works for free.

RB_ID=832569"
vkostyukov,2016-05-20 21:18:27,https://api.github.com/repos/twitter/finagle/git/commits/1797802c7625283a6089c6e068282814669f6647,1797802c7625283a6089c6e068282814669f6647,"finagle: Fix sbt build (proper bijection dependency)

Problem / Solution

Broken sbt dependency to `bijection-core` from Finagle.

RB_ID=835098"
roanta,2016-05-20 20:43:16,https://api.github.com/repos/twitter/finagle/git/commits/90c3fda539f29c86cc4e3abbe9a21bc5a9356c4e,90c3fda539f29c86cc4e3abbe9a21bc5a9356c4e,"finagle-netty4: thread through write promise in BufCodec

Problem

Writes hang with BufCodec in the pipeline since it ignores
the incoming promise.

Solution

Foward it to the `ctx.write` call.

RB_ID=834978"
vkostyukov,2016-05-20 19:06:03,https://api.github.com/repos/twitter/finagle/git/commits/752639138303357acbf101b77a49065851d9488b,752639138303357acbf101b77a49065851d9488b,"source: Replace c.t.u.Bijection with c.t.bijection.Bijection

Problem

`c.t.u.Bijection` has been deprecated for about 2 years (since June 2014).
It's time to say goodbye.

Solution

Replace `c.t.u.Bijection` usages with `c.t.bijection.Bijection` (hence
fix our oldest tech-debt ticket).

RB_ID=834383
TBR=true"
kevinoliver,2016-05-20 00:52:37,https://api.github.com/repos/twitter/finagle/git/commits/eddeb3b8552702f7fb2b5d756440552d7ad94947,eddeb3b8552702f7fb2b5d756440552d7ad94947,"finagle-thrift,thrift-mux: ResponseClassification of unencoded failures

Problem

Response classification for Thrift and ThriftMux did not handle the
case where a failure is not Thrift-encoded. For example, both
`BackupRequestLost` and `IndividualRequestTimeoutException` are
produced on the client side and thus will not be encoded as a
`Return`.

Solution

Ask the classifiers to handle these without deserialization.

Result

Response classification works as users expect it should.

RB_ID=834212"
vkostyukov,2016-05-19 23:31:06,https://api.github.com/repos/twitter/finagle/git/commits/abc361d31a330bb21b9798f73ec34f7c054d0948,abc361d31a330bb21b9798f73ec34f7c054d0948,"finagle-core: Remove ClientBuilder.socksProxy(SocketAddress)

Problem / Solution

As  part of rethinking the SOCKS support in Finagle, let's cleanup
`ClientBuilder` API w.r.t. to SOCKS params.

RB_ID=834634
TBR=true"
vkostyukov,2016-05-19 18:43:19,https://api.github.com/repos/twitter/finagle/git/commits/080789f4b0c9b22680f013768e846c3e64a182c0,080789f4b0c9b22680f013768e846c3e64a182c0,"finagle-core: Do not trace/stat in clients when Tracer/StatsReceiver is null

Problem / Solution

It doesn't make a lot of sense to trace/stat in clients whose `Tracer`
and `StatsReceiver` are disabled. Let's skip tracing/stats instead
and save some allocations/runnig time.

RB_ID=834465"
kevinoliver,2016-05-19 18:08:43,https://api.github.com/repos/twitter/finagle/git/commits/6cfa420f3afa0238180f927791c0fda1db0fc139,6cfa420f3afa0238180f927791c0fda1db0fc139,"finagle-core: Prevent unbounded memory leak from FailFastFactory

Problem

`FailFastFactory` has a singleton `Stream` that is used as the default
for backoffs. Due to the way `Stream` works, if there is a
""permanently"" dead host we leak a `Stream.Cons` every time we issue a
backoff.

Solution

Cap the backoffs after a reasonably sized number (16) then use a
constant backoff which prevents the space leak.

(discovery of the bug, along with the fix, is courtesy of vkostyukov).

RB_ID=834328"
roanta,2016-05-19 18:07:30,https://api.github.com/repos/twitter/finagle/git/commits/6ce7beb5c96aedee2a52d545e9e57431d23a41a3,6ce7beb5c96aedee2a52d545e9e57431d23a41a3,"finagle-mux: Move BufCodec into finagle-core so it can be shared

Problem / Solution

ChannelBuffer <-> Buf codec is generally useful among our
protocol implementations.

RB_ID=834266"
roanta,2016-05-19 18:04:47,https://api.github.com/repos/twitter/finagle/git/commits/83c47cb2455986d0328df2710c892e62f68f73a6,83c47cb2455986d0328df2710c892e62f68f73a6,"finagle-http: kill ParameterizableTransporter

Problem / Solution

Remove ParameterizableTransporter since it is vestigial and
replaced by `HttpImpl`

RB_ID=834550"
kevinoliver,2016-05-19 17:52:11,https://api.github.com/repos/twitter/finagle/git/commits/90d23faa5936471c7664e75051e248ce63876689,90d23faa5936471c7664e75051e248ce63876689,"finagle-core: Avoid newline output in Failure

Problem

Newlines in exception output makes analyzing logs problematic, as
developers often use line oriented tools for this.

Solution

Omit the newlines in `Failure.toString`

RB_ID=834274"
roanta,2016-05-19 17:18:02,https://api.github.com/repos/twitter/finagle/git/commits/6f104d383068cd2356a0ec1d565996e7ec0625cf,6f104d383068cd2356a0ec1d565996e7ec0625cf,"finagle-netty4: Introduce a ByteBuf to Buf codec handler

Problem

We want to share the pipeline bits between our protocol
implementations.

Solution

Introduce a ByteBuf to Buf codec handler.

RB_ID=834514"
dschobel,2016-05-18 23:07:01,https://api.github.com/repos/twitter/finagle/git/commits/f38b0254425b6614d6689f379896fc752d8adbca,f38b0254425b6614d6689f379896fc752d8adbca,"finagle-http: deprecate channelBufferUsageTracker

Problem / Solution

Dubious feature in light of maxRequestSize limit and we're not going
to port it to http 1.1 on netty4.

RB_ID=831233"
cacoco,2016-05-18 22:31:17,https://api.github.com/repos/twitter/finagle/git/commits/471b110b9be0a91a0bcb84621a49573d9e94bb19,471b110b9be0a91a0bcb84621a49573d9e94bb19,"finagle: Create sbt build target for some sub-modules

Problem

We'd like to aggregate some finagle sub-projects in the Build.scala

Solution

Create a target over the desired sub-projects.

RB_ID=833911"
vkostyukov,2016-05-18 19:51:46,https://api.github.com/repos/twitter/finagle/git/commits/dd3ddfca9ad47741274111f06b7e82a94b530157,dd3ddfca9ad47741274111f06b7e82a94b530157,"source: No need for jsr166e. Java 8 has everything is needed.

Problem / Solution

We no longer need our own clone of JSR166e given that we're now on Java 8.

RB_ID=833652
TBR=true"
jcrossley,2016-05-18 19:23:04,https://api.github.com/repos/twitter/finagle/git/commits/5e4752d1bf007d9dc35cc73eb3daa67a29d61ec6,5e4752d1bf007d9dc35cc73eb3daa67a29d61ec6,"finagle-core: BufWriter implementors only implement `arrayToWrite`

Problem

As we add different writers and writing methods to BufWriter, it would be nice
if we didn't have to implement all those methods in subclasses.

Solution

All writing methods in BufWriter now use `arrayToWrite(bytes: Int)`, which is
implemented by the subclasses and returns the array to write to and the starting
index.

RB_ID=833394"
vkostyukov,2016-05-18 18:38:38,https://api.github.com/repos/twitter/finagle/git/commits/ccbd91c0f03a9dd33c7dab21065d8c39bf91c309,ccbd91c0f03a9dd33c7dab21065d8c39bf91c309,"finagle-memcached: Exclude ring redistribution from a request path

Problem

`KetamaPartitionedClient` redistributes its hash ring on a request path, which
causes latency spikes when cluster gets updated.

Solution

Redistribute the hash ring asynchronously, once cache `Group` is updated.

RB_ID=832753"
mosesn,2016-05-17 19:27:41,https://api.github.com/repos/twitter/finagle/git/commits/35a7586b5e5d2d629e1923ff0a6ca67836ad5e60,35a7586b5e5d2d629e1923ff0a6ca67836ad5e60,"finagle-core: MonitorFilter installs parameterized monitor

Problem

Previously, MonitorFilter would fail a request if a synchronous
exception was thrown anywhere within the service.  This led to
surprising results, since a callback that seemingly didn't have an
effect on the normal execution, like logging a failure, could fail
the entire request if they threw an exception.

Solution

Change MonitorFilter to instead use the parameterized Monitor, which
is NullMonitor by default.  This matches the behavior described in
the scaladoc, and has a less surprising result.

Result

Finagle services are more deterministic, and code that is added
just for side-effects will not spuriously fail requests.

RB_ID=832979"
kevinoliver,2016-05-17 16:45:58,https://api.github.com/repos/twitter/finagle/git/commits/fbe520c4173948375ee3b69baa672a77f70f0634,fbe520c4173948375ee3b69baa672a77f70f0634,"finagle-mux: Update muxshark with latest protocol additions

Problem

Muxshark was not kept in sync with the changes to the protocol.

Solution

Update it to know about the new types and the basics of fragments.

RB_ID=833406"
mosesn,2016-05-17 01:59:57,https://api.github.com/repos/twitter/finagle/git/commits/f82ad827cf06de687384158182c3e025b231fdeb,f82ad827cf06de687384158182c3e025b231fdeb,"finagle-http: Fix up build warnings and add strict deps

RB_ID=832983"
dschobel,2016-05-17 00:20:24,https://api.github.com/repos/twitter/finagle/git/commits/3df5ebec99668c9568964dfc22ac6eb2f4db7b74,3df5ebec99668c9568964dfc22ac6eb2f4db7b74,"finagle-netty4-http: dispatcher + bijection fixes

Problems

1. HttpLastContent chunks can have data. We assume an empty last chunk.
2. HttpObject decoder will emit multiple chunks for fixed length
   messages. We assume only chunked encoded messages will arrive in
   chunks.

Solutions

1. Introduce a transport collation function that allows EOS messages to carry data.
2. Install a HttpObjectAggregator for fixed length requests even when streaming.

RB_ID=831576"
jcrossley,2016-05-16 21:36:46,https://api.github.com/repos/twitter/finagle/git/commits/42ac4fddc6b67ab4ccfe79d0629c40a3c30f0e5f,42ac4fddc6b67ab4ccfe79d0629c40a3c30f0e5f,"finagle-mux: Correct instructions for locating wireshark plugins folder

The plugins directory for OSX has changed from that instructions
($HOME/.wireshark/plugins); it's now $HOME/.config/wireshark/plugins.
Edited the instructions to describe how to locate the correct directory.

RB_ID=833274"
jcrossley,2016-05-16 20:49:03,https://api.github.com/repos/twitter/finagle/git/commits/3793d8454b6db970d0a31ddfa22c31ec244944eb,3793d8454b6db970d0a31ddfa22c31ec244944eb,"finagle-core: Dynamic BufWriter

Problem

It would be useful to have a BufWriter whose size grows dynamically
as needed.

Solution

Add BufWriter.dynamic

RB_ID=831191"
dschobel,2016-05-16 18:09:00,https://api.github.com/repos/twitter/finagle/git/commits/752a89e8a62b8709deac81d983a449c74afd0f1f,752a89e8a62b8709deac81d983a449c74afd0f1f,"finagle-netty4-http: add owners + groups files

Problem / Solution

Add missing OWNERS + GROUPS

RB_ID=833123"
mosesn,2016-05-14 05:46:42,https://api.github.com/repos/twitter/finagle/git/commits/5a13e7634fcd22d6cbf407585414a56adeef72ec,5a13e7634fcd22d6cbf407585414a56adeef72ec,"finagle-http: Removes duplicates for StreamTransport versions

Problem

We had a bunch of older versions of different Http building blocks
that weren't on StreamTransport yet, because the codecs weren't cut
over.

Solution

Cut over the codecs, and replace the old building blocks with the
new ones.  We still need to find good homes for a few new ones in
exp, but at least we no longer have duplicates anymore.

RB_ID=830150"
kevinoliver,2016-05-12 19:27:04,https://api.github.com/repos/twitter/finagle/git/commits/5d6acc8389add2e5c879b73e7fa171fb94131a1d,5d6acc8389add2e5c879b73e7fa171fb94131a1d,"finagle-toggle: Add project to sbt build

Problem

Right now this is ""working"" because nothing in Finagle depends on
finagle-toggle, but this will change soon and that would break the
build.

Solution

Add it.

RB_ID=832179"
mosesn,2016-05-12 19:06:16,https://api.github.com/repos/twitter/finagle/git/commits/c7f4941660f070c6ad6cfd787587a9319f642e7c,c7f4941660f070c6ad6cfd787587a9319f642e7c,"0;95;c# finagle-http2: Hooked up the HttpImpl
finagle-http2: Hooked up the HttpImpl

Problem

We need to be able to thread the listener and transporter through the finagle stack.

Solution

Provide an HttpImpl!

RB_ID=831595"
kevinoliver,2016-05-11 22:49:33,https://api.github.com/repos/twitter/finagle/git/commits/74216fca7b4358eef8da8bbe649079f8f63c652f,74216fca7b4358eef8da8bbe649079f8f63c652f,"finagle-toggle: Introduce ServiceLoadedToggleMap and StandardToggleMap

Problem

We need a way to load different `ToggleMap` implementations
dynamically and a standardized ordering and mechanism for composing
various `ToggleMaps` together.

Solution

Introduce `ServiceLoadedToggleMap` for dynamic implementations and
`StandardToggleMap` for the standard.

Result

Incremental progress on the way to a full fledged feature toggle
implementation.

RB_ID=831268
TBR=true"
mosesn,2016-05-11 01:00:17,https://api.github.com/repos/twitter/finagle/git/commits/0d5aaafab4d1280853ab57c0b88eb585698865ae,0d5aaafab4d1280853ab57c0b88eb585698865ae,"finagle-http2: Adds a listener for http2

Problem

We can't listen for the sweet sounds of http2.

Solution

Add an http2 listener!  Since the new netty http2 api works for
child channels, we need to finesse our ChannelInitializer to act
on those child channels, instead of on the bootstrap itself.  In
order to avoid writing yet another Netty4StreamTransport (for now)
we're converting from http2 <=> http1.1, so these messages speak
http1.1.

Result

We can set up listeners which listen for http2!

RB_ID=829778"
dschobel,2016-05-10 23:57:38,https://api.github.com/repos/twitter/finagle/git/commits/e89c759baab68a9a6c860339d14f3226d777558e,e89c759baab68a9a6c860339d14f3226d777558e,"finagle-netty4: don't rely on netty to satisfy the shutdown promise

Problem

1) We pass deadlines as timeouts which are interpretted as
millis since the unix epoch which yields a ttl of ~30 years.

2) We rely on netty to satisfy the shutdown promise which leaves
us vulnerable to both satisfying the promise beyond the reqeust
deadline or not at all.

Solution

Convert the deadline to a timeout and add a timeout to the shutdown promise.

RB_ID=830584"
edma2,2016-05-10 22:41:48,https://api.github.com/repos/twitter/finagle/git/commits/9b83f1ce1d42272ebc60ff3af2908628d104a48d,9b83f1ce1d42272ebc60ff3af2908628d104a48d,"finagle-kestrel: prepend _root_ to java imports

Problem:

There exists a `com.twitter.finagle.kestrel.java` package.
This apparently confuses SBT since Scala imports are relative.

Solution:

Force absolute import resolution with `__root__`.

RB_ID=831365
NO_USER_HOOK=1"
edma2,2016-05-10 19:08:36,https://api.github.com/repos/twitter/finagle/git/commits/83b174d0d503a282eadf9a39099849144380b374,83b174d0d503a282eadf9a39099849144380b374,"finagle-kestrel: support unbound Name.Path destinations

Problem:

Multi-reader kestrel does not support unbound destinations
(`Name.Path`).

Solution:

In `MultiReaderMemcache` and `MultiReaderThrift`, call `Namer.resolve`
to transform `Name.Path` inputs into `Var[Addr]`. Note that because
we pre-resolve the unbound `Name` to something concrete, client-side
dynamic Dtab behavior (e.g. with `Dtab.local`) won't affect resulting
address set. However, this is irrelevant in practice since reading
from Kestrel is not on the request path. Also, weights will be discarded.

Result:

Clients can pass `Name.Path` typed names into `apply` methods without
causing a runtime exception.

RB_ID=830756
NO_USER_HOOK=1"
dschobel,2016-05-10 05:16:31,https://api.github.com/repos/twitter/finagle/git/commits/485608165d58592b5dc9993dc9764d17c4489fc7,485608165d58592b5dc9993dc9764d17c4489fc7,"finagle-netty4-http: reject oversize messages when streaming

Problem

Finagle-http's contract promises to enforce payload size limits
even when the server is streaming. It does not enforce this limit
now.

Solution

Introduce a payload size limit handler for use when streaming.

RB_ID=830681"
kevinoliver,2016-05-10 00:37:53,https://api.github.com/repos/twitter/finagle/git/commits/aa528bf09523cb2edfacf9501291e4f2c9f9c598,aa528bf09523cb2edfacf9501291e4f2c9f9c598,"util-app: Move LoadService from finagle-core

Problem

`c.t.finagle.util.LoadService` is useful outside of finagle-core while
having no significant dependencies on finagle.

Solution

Move it to `c.t.app.LoadService` in util-app.

There was very similar, but ever so different, code in
`c.t.f.util.ClassPath` and `c.t.app.ClassPath` which required some
refactoring in order to have reuse.

Note that there were 2 `GlobalFlags` in `c.t.finagle.util` for
`LoadService` and in order to retain backwards compatibility, they
somewhat awkwardly remain in that package but in util-app.

Result

`LoadService` is now usable without a finagle-core dependency.

RB_ID=829897"
olix0r,2016-05-09 23:06:36,https://api.github.com/repos/twitter/finagle/git/commits/dd5736a31f44ce145aed6327586504e75fda753c,dd5736a31f44ce145aed6327586504e75fda753c,"finagle-core: Lazily instantiate StackServer's JvmFilter

Problem

StackServer statically instantiates a `MkJvmFilter` with a `c.t.jvm.Jvm`. This
creates a timer thread that samples JVM stats. We'd like to disable the
JvmFilter stack module during profiling, but this is not currently possible
since stats polling is initiated regardless of whether the module is used.

Solution

Lazily instantiate StackServer's JvmFilter.

Result

The stats polling timer is only initiated when the JvmFilter server module is
enabled.

Also-by: Steve Jenson <stevej@buoyant.io>

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=830764"
olix0r,2016-05-09 21:45:35,https://api.github.com/repos/twitter/finagle/git/commits/7f06de3c17a50e550a99cc78e994ee3be4615f23,7f06de3c17a50e550a99cc78e994ee3be4615f23,"Make (some of) CI Green Again

Problem

https://travis-ci.org/twitter/finagle/jobs/117016513 shows several test failures.

The SKIP_FLAKY flag was not being passed properly.  It was set as an
environment variable, which does nothing, and as a javaOption in sbt, which did
not take effect because tests were not forked.

Furthermore, running tests takes quite some time because twitter dependencies
are built regardless of whether they are already cached.

Solution

Ensure tha -DSKIP_FLAKY=1 is set properly.

Mark the following tests flaky:
- FailFastFactory, test as flaky, since it plainly fails
- finagle-stream EndToEnd, since Await frequently times out

Move to container based builds, which affords us an additional 1G of memory,
and allows builds to use a cache.

Use the build cache to store which SHAs of twitter dependencies (util, ostrich,
scrooge) have already been built.  These snapshot dependencies are published
(to the build cache) whenever a repo changes.

Result

scala-2.11 builds are green ;D
scala-2.10 builds OOM ;(

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=830933"
dschobel,2016-05-09 21:23:23,https://api.github.com/repos/twitter/finagle/git/commits/fda08c9df7e36504efeadf883b73e2d1b3e2dd19,fda08c9df7e36504efeadf883b73e2d1b3e2dd19,"revert ""finagle: travis ci fixes""

revert ""finagle: travis ci fixes"" 2a94356db1adcda484befbafb7fdfdc71b28b5e3
to fix attribution

RB_ID=830899"
jcrossley,2016-05-09 21:06:29,https://api.github.com/repos/twitter/finagle/git/commits/b994e4aee8db2e10567c038594b25658954bf4af,b994e4aee8db2e10567c038594b25658954bf4af,"finagle-core: DeadlineFilter is now DeadlineStatsFilter and only records stats

Problem

Because we've decided not to do Deadline Admisssion Control right now,
it's confusing to still have configuration parameters and request rejection
logic inside DeadlineFilter.

Solution

Rename DeadlineFilter to DeadlineStatsFilter, and only record stats for the
number of requests with exceeded deadlines, the remaining deadline budget,
and the transit latency.

RB_ID=829372"
dschobel,2016-05-09 17:26:18,https://api.github.com/repos/twitter/finagle/git/commits/d306e1fc1193a2ef3fbaaee59b6a3c191499b561,d306e1fc1193a2ef3fbaaee59b6a3c191499b561,"finagle-netty4: parameterize autoread

Problem / Solution

Netty4Listener's AUTO_READ param isn't configurable so we add a BackPressure param.

RB_ID=830538"
dschobel,2016-05-07 19:42:15,https://api.github.com/repos/twitter/finagle/git/commits/3cd9acb69a518524eb8d6d6f6a7fe2d55aaa8f98,3cd9acb69a518524eb8d6d6f6a7fe2d55aaa8f98,"finagle-netty4: add ref-counting tests + don't retain wrapped bufs

Problem / Solution

Retaining all wrapped buffers worked around a ref-counting bug in
the Netty4 ChannelTransport which is no longer need it. Remove it.

RB_ID=829648"
lukiano,2016-05-07 19:23:43,https://api.github.com/repos/twitter/finagle/git/commits/2f1786b4658c60a0f22dafc83b0cdfcccba5619d,2f1786b4658c60a0f22dafc83b0cdfcccba5619d,"finagle-netty4: Do not automatically release buffers

Problem

Buffers are being stored on a queue to be handled by different threads, but
immediately afterwards they were freed. When other thread tried to work with
them, an Exception occurred.

Solution

Do not release the buffers, as they will be accessed in the future.
This is done by changing a flag to disable automatic release.

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=830197"
edma2,2016-05-06 18:01:13,https://api.github.com/repos/twitter/finagle/git/commits/27b811d5039e2f3823824b47fecc8423caff7932,27b811d5039e2f3823824b47fecc8423caff7932,"finagle-serversets: add GlobalFlag for configuring DNS cache size

Problem:

There's no way to configure `Zk2Resolver`'s DNS cache.

Solution:

Add `c.t.f.serverset2.dnsCacheSize` global flag to configure it.
The default is 16,000 which is the same as `FixedInetResolver`'s
default.

RB_ID=830122"
edma2,2016-05-05 22:29:12,https://api.github.com/repos/twitter/finagle/git/commits/f8dd20bfaf31e5faa4e9fcb84f892cc160524a1c,f8dd20bfaf31e5faa4e9fcb84f892cc160524a1c,"finagle-core: parameterize FixedInetResolver with maxCacheSize

Problem:

FixedInetResolver DNS cache max size is currently 16k entries.
There's no way to configure it.

Solution:

Add a `maxCacheSize` parameter with default of 16k. Long.MaxValue
means no upper bound.

Result:

Clients that to configure the upper bound on cache size can use
`maxCacheSize`.

RB_ID=829169"
vkostyukov,2016-05-05 22:00:41,https://api.github.com/repos/twitter/finagle/git/commits/e107007de2d0061159dd37c2a2a8b8e5163bd151,e107007de2d0061159dd37c2a2a8b8e5163bd151,"finagle-netty4: Enable TLS

Difference between Netty 3 and Netty 4 implementations

 1. We no longer need to do handshake manually - `SslHandler` takes care about that.
 2. This RB introduces a new (and I think quite reasonable) conention: it makese sense
    for client to delay the connect-promise satisfaction until the extra work after
    original connect is done and succeed (eg: ssl handshake, http proxy connect, etc).
    For servers, OTOH, it't totally fine to start listenning traffic on `channelActive`
    since listenning is most of the time quite cheap in opposed to clients. Given the
    nature of our high-traffice services, the client might collect quite a number of
    pendding writes that should be failed if the handhsake fails. Thus, we don't start
    serving traffic on clients until we're 100% sure the connection is valid.
 3. We no longer need `TlsShutdownHandler` keeping in mind that we're going to use
    SSL engines provided by Netty so it's should be (again) handled by `SslHandler`
 4. Our new user-facing API doesn't accept `SSLEngine` directly, but still accecpts
    `SSLContext` (which is concidered a factory for engines).
 5. Previously, we've been using OpenSSL only for server-side encryption. Now Netty
    takes care about that and tries to use OpenSSL and then JDK SSL on both sides.
 6. Netty 4 enforces the 10s timeout (was disabled in Netty 3) on SSL/TLS handshake
    so it's now impossible to get the connection stall if service aquisition timeout
    is disabled (see https://github.com/twitter/finagle/issues/345#issuecomment-210676924)

Problem / Solution

`finagle-netty4` lacks TLS/SSL support.

RB_ID=816806"
kevinoliver,2016-05-05 17:28:10,https://api.github.com/repos/twitter/finagle/git/commits/d832ef50493b269590bce4f0cd5d23d0335e1876,d832ef50493b269590bce4f0cd5d23d0335e1876,"Switch to Java 8 and Scala 2.11

Problem

Its time to drop support for Java 7 and Scala 2.10 as per the blog
post [1].

Solution

Update sbt builds.

[1] https://finagle.github.io/blog/2016/04/20/scala-210-and-java7/

RB_ID=828898"
dschobel,2016-05-05 01:24:46,https://api.github.com/repos/twitter/finagle/git/commits/4caf789d75e6f0d75df5a50eab6cc074c5eda9b5,4caf789d75e6f0d75df5a50eab6cc074c5eda9b5,"[trivial] finagle-netty4-http: fix config object visibility

Problem / Solution

The HttpImpl case class + implicit instance need to be publicly
visible to be usable outside the finagle namespace.

RB_ID=829694
TBR=true"
jcrossley,2016-05-04 19:55:58,https://api.github.com/repos/twitter/finagle/git/commits/ac5ca75b6504a9482d29d35a60b476f79b381b06,ac5ca75b6504a9482d29d35a60b476f79b381b06,"finagle/doc: Add documentation for RemoteInfo.Upstream.addr

Add documentation for RemoteInfo.Upstream.addr

RB_ID=829407"
dschobel,2016-05-04 01:53:36,https://api.github.com/repos/twitter/finagle/git/commits/e322c395a5667e2f50ce664594c67c59c24349f1,e322c395a5667e2f50ce664594c67c59c24349f1,"finagle-netty4-http: expose Netty4Impl to the world

Problem / Solution

Allow clients and servers to configure the netty4 implementation of http 1.1

RB_ID=828188"
dschobel,2016-05-04 01:31:18,https://api.github.com/repos/twitter/finagle/git/commits/4fbdf0d33f3a185c9bafada3e4fbed4d4f0f704c,4fbdf0d33f3a185c9bafada3e4fbed4d4f0f704c,"finagle-netty4-http: support content compression for http 1.1

Problem / Solution

Add content compression support for http 1.1 for netty4.

RB_ID=827511"
dschobel,2016-05-04 00:05:03,https://api.github.com/repos/twitter/finagle/git/commits/97f54f8e847c57f757cbe342e143ff41599941d0,97f54f8e847c57f757cbe342e143ff41599941d0,"finagle-netty4-http: client + server stream transport impl

Problem / Solution

Introduces the Http4Impl which ports the existing netty4-http
1.1 client dispatcher and adds the server side. This allows clients
and servers to configure netty4 http 1.1 implementation.

RB_ID=825605"
dschobel,2016-05-03 20:40:16,https://api.github.com/repos/twitter/finagle/git/commits/8ccab27c27d696e730500697212b22ea0bad8a22,8ccab27c27d696e730500697212b22ea0bad8a22,"finagle-http: gracefully handle requests which stream excessive data

Problem

Http servers which aggregate http chunks return a transport level
failure when the client request stream exceeds the configured
request size limit.

Solution

Handle failures in content aggregation decoder gracefully and return
a 4xx code.

Result

A bogus transport failure is lifted into the http domain.

RB_ID=828741"
kevinoliver,2016-05-03 18:28:34,https://api.github.com/repos/twitter/finagle/git/commits/81ec47e06df3d578270a87258b4b05b500b9d361,81ec47e06df3d578270a87258b4b05b500b9d361,"util-core, finagle-core: Add Scheduler.blockingTimeNanos and gauge

Problem

Users may not realize that they are doing blocking work on threads
which in turn can be bad for latency and even prevent progress.

Solution

Add `c.t.concurrent.Scheduler.blockingTimeNanos` which exposes the
total time spent in blocking operations on threads that opt into this
accounting via `Awaitable.CanAwait.trackElapsedBlocking`. Typically
threads should opt-in only where blocking is discouraged.

A gauge, ""scheduler/blocking_ms"", is added to finagle-core's
`c.t.finagle.stats.DefaultStatsReceiver` to expose this value as a
metric.

Result

Service owners have visibility into how much blocking is happening in
their service.

RB_ID=828289"
roanta,2016-05-03 16:44:55,https://api.github.com/repos/twitter/finagle/git/commits/42187878cd9ca412d6c42be80ae7b80d6abc46e1,42187878cd9ca412d6c42be80ae7b80d6abc46e1,"finagle-{mux, thriftmux}: Remove ChannelBuffer usage

Problem

We want mux and thriftmux to be netty agnostic.

Solution

Remove ChannelBuffer usage. This is all internal so
it doesn't change the public facing API.

RB_ID=825982"
vkostyukov,2016-05-03 00:27:38,https://api.github.com/repos/twitter/finagle/git/commits/3119e51a438b46e1376bf51e71e091c3212e1939,3119e51a438b46e1376bf51e71e091c3212e1939,"finagle-netty4: Introduce Netty4SslHandler

Problem / Solution

This introduces a `Netty4SslHandler` channel handler that upgrades the given pipeline
with missing TLS/SSL pieces requried for either server- or cliet-side encryption.

In other words, this RB wires up `TlsConfig`, `SslConnectHandler` and Netty's `SslHandler`
together.

RB_ID=826986"
jcrossley,2016-05-02 22:20:13,https://api.github.com/repos/twitter/finagle/git/commits/abe1af4f09b5eb236e6ef63c6b45a4eb20c093bd,abe1af4f09b5eb236e6ef63c6b45a4eb20c093bd,"finagle: make Thrift/ThriftMux not extend ThriftRichClient

Problem

Thrift/ThriftMux servers are now only created using Thrift.server and
ThriftMux.server respectively. Clients should also only be created
using Thrift.client and ThriftMux.client respectively.

Solution

Remove the ThriftRichClient mixin trait from Thrift/ThriftMux objects
and change all instances of Thrift and ThriftMux client to use
Thrift.client and ThriftMux.client respectively.

RB_ID=825612
TBR=true"
kevinoliver,2016-05-02 19:11:24,https://api.github.com/repos/twitter/finagle/git/commits/b0f162079aa83a02ae51b905defda86d71a257fd,b0f162079aa83a02ae51b905defda86d71a257fd,"finagle-toggle: Introduce new feature toggle module

Problem

As library owners, we don't sufficient control over how slowly a
change is rolled out into production.

Solution

Introduce the concept of feature toggles into Finagle. This commit is
the first part of more to follow and as such it is not terribly useful
yet.

Result

While the APIs are experimental and subject to change, this is a good
building block for the future work to be done.

RB_ID=822194"
ryangreenberg,2016-04-29 07:57:54,https://api.github.com/repos/twitter/finagle/git/commits/db02447d9051a992752d2d7967166df25c6e9412,db02447d9051a992752d2d7967166df25c6e9412,"finagle-core: Document components of TraceId

Problem

The distinction between trace id and span id is not obvious to
people reading the API documentation; the contrast between the trace
id and span id components of a TraceId is limited to the word
""particular"".

Solution

Provide further explanation of the components of TraceId with
examples.

RB_ID=825871"
kevinoliver,2016-04-28 23:13:49,https://api.github.com/repos/twitter/finagle/git/commits/52c5ef08b12c4151756793783b2db444b31f7da1,52c5ef08b12c4151756793783b2db444b31f7da1,"Replace calls to Future.get with Await.result

Problem

c.t.util.Future.get is deprecated because it makes it a little too
easy to do a blocking operation.

Solution

Replace usages with c.t.util.Await.result so it is explicit.

RB_ID=825451"
jcrossley,2016-04-27 20:40:58,https://api.github.com/repos/twitter/finagle/git/commits/b6221ec1a597c8a7bb6fcbaffabe33503bc9f2d8,b6221ec1a597c8a7bb6fcbaffabe33503bc9f2d8,"finagle: make Thrift/ThriftMux not extend ThriftRichServer

Problem

Because the Thrift and ThriftMux objects extend ThriftRichServer, it is
possible to create a server using Thrift(Mux).serveIface(...). However,
the default params on the Thrift and ThriftMux objects are client params.
The `serveIface` method creates a server using these client params
(such as the stats receiver) using `serverFromIface` *before* calling `serve`
on a properly configured Thrift/ThriftMux server. This means that the Scrooge-
constructed server has the incorrect client params, while all the filters and
factories above it have the correct server params.

Solution

Make Thrift/ThriftMux not extend ThriftRichServer, and update all instances
of Thrift(Mux).serveIface to Thrift(Mux).server.serveIface

RB_ID=824865
TBR=true"
cacoco,2016-04-27 18:25:49,https://api.github.com/repos/twitter/finagle/git/commits/4f353f2d009ea37dc853bbee875a04cf8f720b52,4f353f2d009ea37dc853bbee875a04cf8f720b52,"finagle: Update scrooge-sbt-plugin version to 4.7.0

Problem

The scrooge-sbt-plugin version should be updated to 4.7.0 for release

Solution

Update the version.

RB_ID=826940
TBR=true"
vkostyukov,2016-04-27 05:42:57,https://api.github.com/repos/twitter/finagle/git/commits/6f6a29c27fba718a3163c9a4f48f7bf8e4a59ad7,6f6a29c27fba718a3163c9a4f48f7bf8e4a59ad7,"finagle-core: Introduce SessionVerifier (SSL/TLS hostname validation)

Problem / Soltuion

Both Netty 3 and Netty 4 implementations need to perform SSL session validation
(i.e., hostname validation), which doesn't depend on a Netty version. We introduce
package-private `SessionVerifier` so we can share it between different transport
implementations.

RB_ID=826628"
cacoco,2016-04-27 05:19:16,https://api.github.com/repos/twitter/finagle/git/commits/fa2bb0e406231b5a6dca060fe602eaf075f3455a,fa2bb0e406231b5a6dca060fe602eaf075f3455a,"Twitter OSS: Prepare libraries for next release

Problem

We're releasing the next versions of the Twitter OSS libraries:
util - 6.34.0
ostrich - 9.18.0
scrooge - 4.7.0
finagle - 6.35.0
twitter-server - 1.20.0
finatra - 2.1.6

Solution

Update to the release version.

RB_ID=826660"
vkostyukov,2016-04-26 20:50:07,https://api.github.com/repos/twitter/finagle/git/commits/d03b30888db6c0a4a61dcff5d51fb274cae9911d,d03b30888db6c0a4a61dcff5d51fb274cae9911d,"finagle-netty4: Introduce SslConnectHandler

Problem

We need to have a proper tooling around delaying the transport connection until
the SSL/TLS handshake is done and the session is verified.

Solution

`SslConectHandler` reuses the ideas introduced in `HttpProxyConnectHandler` and delays
the propagation of the connect promise back to a transport until SSL handshake is
succeed.

RB_ID=824682"
dschobel,2016-04-26 04:39:11,https://api.github.com/repos/twitter/finagle/git/commits/81f32b68dd32681cf8ff51a1d6bcee0aae68b4a1,81f32b68dd32681cf8ff51a1d6bcee0aae68b4a1,"finagle-http: bundle netty-related config in a single param

Problem

Allowing independent configuration of listener and transporter
implementations can yield an incoherent system which will fail at
runtime.

Solution

Bundle related protocol implementation configuration behind a
HttpImpl param.

RB_ID=825370"
dschobel,2016-04-26 02:43:16,https://api.github.com/repos/twitter/finagle/git/commits/66f46a99523bbfdc43b929af8c6a74ffc0c969da,66f46a99523bbfdc43b929af8c6a74ffc0c969da,"finagle-http: netty agnostic bad request handling

Problem

We need netty agnostic encoding of bad http requests.

Solution

Introduce UriTooLong and HeaderFieldsTooLarge marker traits and
push identifying bad requests down a level to the netty-specific
StreamTransport implementation.

RB_ID=825401"
cacoco,2016-04-26 01:35:00,https://api.github.com/repos/twitter/finagle/git/commits/186f7a42f35eb7e9e789651aa37610c345a37ac1,186f7a42f35eb7e9e789651aa37610c345a37ac1,"finagle-stats: Verify that histogram snapshotting works after a lapse in snapshotting

Problem

When snapshotting does not occur for serveral minutes, the 60-second snapshotting is not
honored. If snapshotting does not occur for two minutes, histogram windowin will not be
properly honored until snapshot has been called twice.

Solution

Change snapshot windowing to be based on the current time.

Fixes [twitter/twitter-server#33](https://github.com/twitter/twitter-server/issues/33)

RB_ID=826149"
vkostyukov,2016-04-22 18:09:10,https://api.github.com/repos/twitter/finagle/git/commits/fb7e9548c26e4e1aca54f4b251facfc848135838,fb7e9548c26e4e1aca54f4b251facfc848135838,"finagle-core: Make backoffs go to Backoff.const when they hit their max

Problem

Some of our backoffs (`linear`, `exponential`, `equalJittered`) produce an infinite
tail of their max value (const) thereby allocating a new `Stream.Cons` for each of
the identical cells. This is not only a potential memory leak but also an unnecessary
GC pressure we can easily avoid.

Solution

Go to `Backoff.const` (zero allocations) once a given backoff hits its maximum value.

Result

Fewer allocations for some of the backoffs. No potential memory leaks.

RB_ID=824943"
cacoco,2016-04-21 20:34:00,https://api.github.com/repos/twitter/finagle/git/commits/9285bd7f759049b2b4c579ea5ce20fa72b7f9b80,9285bd7f759049b2b4c579ea5ce20fa72b7f9b80,"finagle/finatra/scrooge/twitter-server: bin/travisci updates and fixes

Problem

The order of building needs to be updated for twitter-server and scrooge
as building finagle should now happen after building the scrooge-sbt-plugin.
The finagle/finatra builds are complaining about not finding the 2.10 version of
the scrooge-generator.

Solution

Update the order of building in twitter-server and scrooge scripts.
Specifically, publish the scrooge-generator for 2.10 in the finagle
script.

RB_ID=824936
TBR=true"
cacoco,2016-04-21 18:22:57,https://api.github.com/repos/twitter/finagle/git/commits/915bf987fe0585808f0cc7395aa2867bd473a9e4,915bf987fe0585808f0cc7395aa2867bd473a9e4,"finagle/finatra/scrooge/twitter-server: Update travisci scripts for scrooge-sbt-plugin

Problem

The TravisCI build is currently in error for listed projects as the 2.10
SNAPSHOT version of the scrooge-sbt-plugin is not being published locally
for the downstream dependencies.

Solution

Ensure the scala 2.10 SNAPSHOT version of the scrooge-sbt-plugin is
published locally for downstream projects to pick up.

RB_ID=824864"
cacoco,2016-04-20 23:05:24,https://api.github.com/repos/twitter/finagle/git/commits/a0d5914bb05be8408a908309d7f8b002f871491a,a0d5914bb05be8408a908309d7f8b002f871491a,"finatra/finagle/twitter-server/scrooge - Update travisci scripts

Problem

A recent update to scrooge's project/Build.scala means that the
scrooge-sbt-plugin needs to be explicitly published locally for
downstream use.

Solution

Update the listed projects' bin/travisci to ensure that the
scrooge-sbt-plugin target is published locally for downstream
dependencies.

Result

Happy TravisCI builds!

RB_ID=824504"
vkostyukov,2016-04-20 22:13:03,https://api.github.com/repos/twitter/finagle/git/commits/def012a74fa0da4cc6eb8c5f51d34ce500858fd2,def012a74fa0da4cc6eb8c5f51d34ce500858fd2,"finagle-netty: Fix resource leak in http proxy connect handler

Problem

As discussed on Github [1], it's not only a good idea to interrupt a handshake
(either SSL/TLS handshake or HTTP proxy handshake) on interrupted connect future
(eg: interrupted by `TimeoutFactory`) it's absolutely necessary to do in order to
prevent resource leaks from channels remaining open.

Imagine the following scenario:

1. A client sends an HTTP proxy handshake message `CONNECT /twitter.com`
2. A server accepts that but never sends a response back
3. A client stalls the connection waiting for a response from a server
4. `TimeoutFactory` kicks in and interrupts the connect promise
5. Finagle stack will create a new channel for a next request, but this will remain open

Solution

Close the channel and fail pending writes when a connect promise is interrupted.

Note that this RB also fixes the behavior when channel is closed by remote peer
so we no longer need to wait for a handshake to complete.

[1]: https://github.com/twitter/finagle/issues/345#issuecomment-210754044

RB_ID=823927"
mosesn,2016-04-20 17:06:24,https://api.github.com/repos/twitter/finagle/git/commits/c80cccfc575494275cfb9d9fbb6a6800b1e7409d,c80cccfc575494275cfb9d9fbb6a6800b1e7409d,"finagle-http: Turn on StreamTransport implementation by default for clients

Problem

StreamTransport seems to work pretty good for clients.

Solution

Turn it on for all the things!

RB_ID=823901"
elifdd,2016-04-20 16:53:12,https://api.github.com/repos/twitter/finagle/git/commits/5d981d677b20b1e091486e5b88ff3a674aabba9e,5d981d677b20b1e091486e5b88ff3a674aabba9e,"Finagle-core: Change log level for marking dead message in FailureAccrualFactory to INFO

Problem
When an endpoint is marked dead in FailureAccrualFactory we log the remote address using log level DEBUG. Most services run with log level INFO therefore this information is not recorded in the logs unless clients explicity increase the log level. However this remote address is mostly helpful for both client and server side debuging.

Solution
Change the log level for marking dead message in FailureAccrualFactory to INFO.

RB_ID=823648"
roanta,2016-04-20 00:26:09,https://api.github.com/repos/twitter/finagle/git/commits/61d8056588a243da78e815f2775ed4fc0bc83132,61d8056588a243da78e815f2775ed4fc0bc83132,"Problem / Solution

Make ChannelBufferBuf properly account for the readerIndex in slice.

RB_ID=823934"
roanta,2016-04-19 22:07:20,https://api.github.com/repos/twitter/finagle/git/commits/6ad925a0e94e9575f56afb1d7b0ecc575f29ba9b,6ad925a0e94e9575f56afb1d7b0ecc575f29ba9b,"finagle-mux: refactor writes in MuxFramer using Offer/Broker

Problem

Our current implementation for flushing writes in MuxFramer
doesn't scale well with the number of connections in a process.
The flush timer spins unneccessarily. More importantly, any flush
cadence we choose that is out of band with non-fragmented writes
will make it difficult to ensure that we are acheiving our primary
goal of stream equity over the session.

Solution

Reimplement our write logic in terms of Offer/Broker. We have three
processes that need to synchronize:

1. Add a new stream (i.e. an incoming write)
2. Interrupt an active stream.
3. Flush active streams in a round-robin fashion.

This is naturally modeled using offer/broker and allows us to remove
any mention of the execution mechanics. When we have a new stream to write,
we begin the `writeLoop` and concurrent streams can join an
active `writeLoop`.

RB_ID=819520"
kevinoliver,2016-04-19 18:10:51,https://api.github.com/repos/twitter/finagle/git/commits/45b5b638f2abbf772c38f600782a26f9d568f979,45b5b638f2abbf772c38f600782a26f9d568f979,"util/finagle: Add various toString

Problem

TwitterServer's /admin/registry.json heavily uses `Object.toString` to
display various configurations. Often these are the default
implementation and could be improved.

Solution

Add some `toString` to various classes.

Result

It is more obvious what is in use by clients and servers.

RB_ID=823344"
codeferret,2016-04-19 18:04:52,https://api.github.com/repos/twitter/finagle/git/commits/93c0ae22eed0a16e9b0931b793eb035a56c95382,93c0ae22eed0a16e9b0931b793eb035a56c95382,"finagle-core: Add a numWaiters gauge to dns resolvers semaphore

Problem:
We have no insight into how many dns resolutions are pending

Solution:
Add a gauge for how many waiters there are for dns resolution

Result:
We have a stat for how many waiters there are for dns resolution

RB_ID=822410"
vkostyukov,2016-04-19 04:42:33,https://api.github.com/repos/twitter/finagle/git/commits/6f868db4cdaab34729509b32fc49b11c9390f118,6f868db4cdaab34729509b32fc49b11c9390f118,"finagle: Introduce TlsConfig

Problem / Solution

Finagle needs modern configuration bits that are abstracted over the underlying TLS/SSL
implementation.

This introduces `TlsConfig` ADT that will bring TLS/SSL support on Netty 4.

RB_ID=822320"
jcrossley,2016-04-15 23:59:40,https://api.github.com/repos/twitter/finagle/git/commits/59658ef1c0208b20449553429fa5157659650a2b,59658ef1c0208b20449553429fa5157659650a2b,"finagle/finagle-core: Fix flaky builder.EndtoEndTest

Problem

test(""IndividualRequestTimeoutException should include RemoteInfo"") sometimes
fails.

Solution

The test fails because the request has not reached TimeoutFilter when the
time is advanced (to force a request timeout exception). We now wait until
the request hits the service to advance the time.

RB_ID=822888"
jcrossley,2016-04-15 22:09:13,https://api.github.com/repos/twitter/finagle/git/commits/29e871e5fccbe75b8d4c8ef6f3ca40c804676514,29e871e5fccbe75b8d4c8ef6f3ca40c804676514,"finagle: Client-side response classification for Java

Problem

Java thrift and thriftmux clients do not use response classification.

Solution

Add response classification for Java clients.

RB_ID=808552"
mosesn,2016-04-15 00:18:42,https://api.github.com/repos/twitter/finagle/git/commits/8a11393d8aa8afbe5bc334b713a73e47b9558670,8a11393d8aa8afbe5bc334b713a73e47b9558670,"finagle-http: StreamTransport no longer exp for servers

Problem

We want everyone to use the StreamTransport

Solution

Turn on StreamTransport for servers!

RB_ID=821244"
jcrossley,2016-04-15 00:10:27,https://api.github.com/repos/twitter/finagle/git/commits/aec9db51c200627b009e82493c572e94ae1044f0,aec9db51c200627b009e82493c572e94ae1044f0,"finagle/finagle-core: Move ExceptionRemoteInfoFactory to capture all failures

Problem

Exception RemoteInfoFactory needs to be higher up in the stack so it
captures all failures (like timeout exceptions).

Solution

Move ExceptionRemoteInfoFactory higher in the stack.

RB_ID=821956"
kevinoliver,2016-04-14 04:21:32,https://api.github.com/repos/twitter/finagle/git/commits/cab053ad927f214962f9f43f104cd1b876d31789,cab053ad927f214962f9f43f104cd1b876d31789,"finagle/finatra/scrooge: Really fix sbt builds

Problem

The sbt builds were still failing even after yesterday's changes.

Solution

Fix them harder.

RB_ID=821864"
vkostyukov,2016-04-13 02:27:25,https://api.github.com/repos/twitter/finagle/git/commits/b9b222cb5877b8c4faca755ce9d9f947024ab638,b9b222cb5877b8c4faca755ce9d9f947024ab638,"finagle-netty4: Enable HTTP proxy support

Problem / Solution

`finagle-netty4` lacks an HTTP proxy support used in its transport. Given that our
current implementation is completely broken by design, this RB introduces slightly
different approach:

Now client's destination points to an HTTP proxy server while an ultimate destination
(a host to which a proxy server should connect to) is passed as a string (in a stack
param). This simplifies the implementation a lot as well as making a proper use of
Finagle ecosystem (i.e., load balancing) while resolving the proxy server address
so we don't need to port that workaround for ad-hoc DNS name resolution for proxy
servers, Finagle takes care about that.

There is also a new client transport param that's only wired up with Netty 4
implementation:

val Http.client
  .withTransport.httpProxyTo(""giphy.com"")
  .newSerivce(""our-own-http-proxy-cluster"")

RB_ID=819752"
dschobel,2016-04-13 00:38:39,https://api.github.com/repos/twitter/finagle/git/commits/cd46d5e6a1a5980143b72d16735eef3c5c23ed95,cd46d5e6a1a5980143b72d16735eef3c5c23ed95,"finagle-netty4: disable leak detector and stop duplicating buffers

Problem / Solution

We copied n4 buffers to circumvent the leak-detector in n4 protocols.
Now that we can opt out of leak-detection we can use 0-copy wrappers
again.

RB_ID=821281"
kevinoliver,2016-04-12 22:18:57,https://api.github.com/repos/twitter/finagle/git/commits/442dd70cf08fe84ae8964e6a304b9efdde1ca83f,442dd70cf08fe84ae8964e6a304b9efdde1ca83f,"finagle: Fix sbt build

Problem

Finagle is not using the correct version of the scrooge-sbt-plugin.

Solution

Use the current version, 4.6.0, when building on master.
Use version 4.6.0-SNAPSHOT if building on any other branch.

RB_ID=821061"
jcrossley,2016-04-12 21:45:18,https://api.github.com/repos/twitter/finagle/git/commits/39cfd4e8ec0ad3af37f26f7c20bea0fbaddf4447,39cfd4e8ec0ad3af37f26f7c20bea0fbaddf4447,"finagle/finagle-http: Add function to remove the Deadline from an Http request

Problem

We want to be able to remove the Deadline header from an Http request.

Solution

Add function to remove the Deadline heder form an Http request.

RB_ID=821080"
jcrossley,2016-04-12 18:25:37,https://api.github.com/repos/twitter/finagle/git/commits/0b2e9b198cac8b06fc9020e286745b831649a1a9,0b2e9b198cac8b06fc9020e286745b831649a1a9,"finagle/finagle-thrift: Remove duplicate ""thrift"" label on Thrift/ThriftMux server stats

Problem

Thrift/ThriftMux scrooge-related server stats are incorrectly
scoped to ""srv/thrift/thrift/[endpoint name]/<stat name>""

Solution

Properly scope stats by not duplicating the thrift label

RB_ID=816825
TBR=true"
kevinoliver,2016-04-12 18:14:16,https://api.github.com/repos/twitter/finagle/git/commits/78a2cfe3caca127d1a1d25ad9fc52992e5bfbbc3,78a2cfe3caca127d1a1d25ad9fc52992e5bfbbc3,"finagle: Improve migration docs for Stack-based APIs

Problem

The documentation for migrating to the Stack-based APIs from
ClientBuilder/ServerBuilder are a bit short on details and leave much
up to the user.

Solution

Make the migration steps more explicit:

* Beef up the user-guide documentation

* Include commonly used configuration methods in the FAQ's example

* Add Scaladoc for the migration path to almost all ClientBuilder and
  ServerBuilder methods.

Result

Easier migration path for users.

RB_ID=820547"
dschobel,2016-04-11 17:44:00,https://api.github.com/repos/twitter/finagle/git/commits/81894c2c9242c2da52ce7359380f150d36a41a4b,81894c2c9242c2da52ce7359380f150d36a41a4b,"finagle: travis ci fixes

Problem

travisci hits a global time out, fails on flakey tests and
intermittently OOMs.

Solution

add a build cache for travisci, use containerized builds, mark
finagle-stream test as flaky, longer timeouts for test cases, split
some test cases up to address OOM.

RB_ID=820193"
mosesn,2016-04-08 22:19:38,https://api.github.com/repos/twitter/finagle/git/commits/c8a0def6026c83d1e665ae326fbe21abae4eec5c,c8a0def6026c83d1e665ae326fbe21abae4eec5c,"finagle-stats: Ensures that there are histograms immediately when we call counts

Problem

No histograms show up when you first query the /admin/histograms
endpoint.  This is because we cache the endpoint, and only refresh
minutely when we read /admin/metrics.json, the same way metrics
does.

Solution

Eagerly compute the histogram the first time you hit the endpoint
so we have something to see.

RB_ID=819459"
j3h,2016-04-08 21:57:27,https://api.github.com/repos/twitter/finagle/git/commits/440cf65df14ff0c22a07d39ab9809db975e6a20d,440cf65df14ff0c22a07d39ab9809db975e6a20d,"finagle: Add `andThen` overloads for Filter.TypeAgnostic

Problem
-------

When composing Filter chains, it's often necessary to add boilerplate
type annotations that make the code harder to read, even when there is
only one possible type.

Solution
--------

Add method overrides for composing `Filter.TypeAgnostic` with `Filter`,
`Service`, etc. This enables seamless mixing of `Filter` and
`Filter.TypeAgnostic`, which will be specialized to the required type
when it is composed.

RB_ID=811012"
mosesn,2016-04-07 04:16:17,https://api.github.com/repos/twitter/finagle/git/commits/0bd55b81806540315517f0096a71b24078c04db5,0bd55b81806540315517f0096a71b24078c04db5,"finagle-http: Hook up server-side StreamTransport

Problem

We want to be able to use StreamTransport for real in our http servers

Solution

Provide a parameter that servers can use to use the new logic.

RB_ID=818238"
elifdd,2016-04-06 22:55:51,https://api.github.com/repos/twitter/finagle/git/commits/5418c3d397aa3c604699d1a544bd393680eb9f6f,5418c3d397aa3c604699d1a544bd393680eb9f6f,"finagle-redis: Add OWNERS

Problem
Only owner in finagle-redis is marius

Solution
Add owners from finagle root and cache team

RB_ID=818257"
mosesn,2016-04-06 22:18:49,https://api.github.com/repos/twitter/finagle/git/commits/917f1ed950745234a5a80572e03a8e5e98ffad90,917f1ed950745234a5a80572e03a8e5e98ffad90,"finagle-http: Hooks up client side of StreamTransport

Problem

We want to be able to try out the StreamTransport http implementation

Solution

Hook up StreamTransport everywhere in duplicated implementations
and provide a stack parameter that lets you opt into using it.

RB_ID=818208"
mosesn,2016-04-06 18:47:06,https://api.github.com/repos/twitter/finagle/git/commits/b6641fef5a457d13a5976407da845f0c6a880e7d,b6641fef5a457d13a5976407da845f0c6a880e7d,"finagle-http: Request and Response don't proxy netty Req/Rep

Problem

The finagle Request and Response proxy netty3 Req / Rep under the
hood behind a package private class, which is hunky dory except
that java users can still see the package private class and call
its methods.

Solution

Get rid of the Http*Proxy classes and simplify the Request / Response
class hierarchy.

Result

It's now safe to provide a base finagle Request trait which isn't
tied to a specific implementation.

RB_ID=818606"
atollena,2016-04-06 17:53:35,https://api.github.com/repos/twitter/finagle/git/commits/9c41fe35cbfd777239fb12bf3fbd44a58cf1a7b4,9c41fe35cbfd777239fb12bf3fbd44a58cf1a7b4,"finagle-core: Java compatibility method for Dentry.Prefix

Problem
--

There is no java friendly API for creating a `Dentry.Prefix`, which is
a nested object.

Solution
--

Add java helpers for `Dentry.Prefix.read`.

Result
--

It is easier to use Dentries from Java.

RB_ID=818875"
olix0r,2016-04-06 01:48:13,https://api.github.com/repos/twitter/finagle/git/commits/4d6dfc1f2186150d6807c4f20f9317c007be84f7,4d6dfc1f2186150d6807c4f20f9317c007be84f7,"finagle-core: allow comments in dtabs

Problem

There is no way to annotate Dtabs with commentary.

Solution

Support line-oriented comments beginning with '#'.

NameTreeParser's `eatWhitespace` method has been modified to consume
lines or
line-endings once the '#' character is encountered in the context of
whitespace.

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=818752"
dschobel,2016-04-05 21:08:00,https://api.github.com/repos/twitter/finagle/git/commits/a2ba5e92c78c44c01ba1f5383b0f1d48caedaa30,a2ba5e92c78c44c01ba1f5383b0f1d48caedaa30,"finagle: remove finagle-testers and finagle-validate

Problem / Solution

finagle-testers and finagle-validate have no dependees and don't
add any test coverage to finagle. remove them.

RB_ID=818726"
kevinoliver,2016-04-05 20:51:56,https://api.github.com/repos/twitter/finagle/git/commits/d873ba5b581917d8308011349b95898c769caf4d,d873ba5b581917d8308011349b95898c769caf4d,"finagle-mysql: Add irana to OWNERS

Adding a new owner from the database side.

RB_ID=818008"
dschobel,2016-04-05 01:21:43,https://api.github.com/repos/twitter/finagle/git/commits/748673e96944400b159ba3d5db4b17f9d4b2a818,748673e96944400b159ba3d5db4b17f9d4b2a818,"finagle-redis: deprecate channel buffer api from string commands

Problem / Solution

netty3 types need to be removed from finagle-redis public api.

RB_ID=817766"
elifdd,2016-04-04 22:00:03,https://api.github.com/repos/twitter/finagle/git/commits/7cccabf986973ac1e1447dff2f337a6939c3cddd,7cccabf986973ac1e1447dff2f337a6939c3cddd,"finagle-redis: Add newTransactionalClient functions to RedisRichClient
Problem
RedisRichClient does not have a function to create transactional clients.
We cannot create a transactional client using Redis.client.newTransactionalClient.

Solution
Add newTransactionalClient functions to RedisRichClient trait.

RB_ID=816974"
mosesn,2016-04-02 04:49:59,https://api.github.com/repos/twitter/finagle/git/commits/15f21ead5d3d84148c6242ec0dc4deaf55c214b5,15f21ead5d3d84148c6242ec0dc4deaf55c214b5,"finagle-http: Introduces the StreamTransport abstraction for multipart stream objects

Problem

We want to have a common finagle API that we can build our
implementations against.  Right now it's a Service[Request, Response],
which means that we have to reimplement dispatchers for every
service, which is a pain.

Solution

Provide a StreamTransport abstraction which can handle streaming
where a single object represent multiple parts over the wire.

Result

There's now a new Http implementation abstraction, a
StreamTransport[Request, Response].  This will allow us to share
HttpClientDispatcher, HttpServerDispatcher, ConnectionManager, and
HttpTransport across implementations.

RB_ID=816986"
vkostyukov,2016-04-01 20:14:55,https://api.github.com/repos/twitter/finagle/git/commits/f40752ba0d29fb5372ff72af44dbccd276a5dc67,f40752ba0d29fb5372ff72af44dbccd276a5dc67,"finagle-core: Use predefined jittered Backoff in FailFastFactory

Problem

`FailFastFactory` uses its own jitter applied to exponential backoff thereby
a) building a new version of the backoff on each ""died -> alive"" state transition and
b) maintaing its own version of the code that already exists in `Backoff`

Solution

Given that it's ok to share a jitter across endpoint stacks, using `Backoff.exponentialJitterred`
instead a) reduces allocations b) reuses the concept/code.

RB_ID=815962"
roanta,2016-04-01 17:31:18,https://api.github.com/repos/twitter/finagle/git/commits/e1bee8b44422e3699eb91387c93b96bcc1f81830,e1bee8b44422e3699eb91387c93b96bcc1f81830,"finagle-mux: disable framer on sentinal value

Problem

There is no sense in composing if the framer if it isn't enabled.

Solution

Omit it when we receive a sentinal window size.

RB_ID=817297"
dschobel,2016-03-31 17:56:07,https://api.github.com/repos/twitter/finagle/git/commits/2d93663bb1f7999a9839f64a59811b76d172d3f6,2d93663bb1f7999a9839f64a59811b76d172d3f6,"finagle-http: parametrizable listener

Problem

listener instances (whether netty3 or netty4 or whatever's next) should be configurable
in the stack.

Solution

introduce ParameterizableListener param.

RB_ID=816242"
jcrossley,2016-03-30 23:39:52,https://api.github.com/repos/twitter/finagle/git/commits/5342f6b09eefcda558ac862468ca243d1effc743,5342f6b09eefcda558ac862468ca243d1effc743,"finagle/finagle-core: Remove unneeded stats/tracing from Deadline/TimeoutFilter

Problem

We no longer need most of the stats/tracing in DeadlineFilter and TimeoutFilter
added for debugging purposes.

Solution

Remove unneeded stats/tracing.

RB_ID=816633"
mosesn,2016-03-30 22:24:45,https://api.github.com/repos/twitter/finagle/git/commits/adb9ac9e46527dc0f087e02a4c11e58496a08505,adb9ac9e46527dc0f087e02a4c11e58496a08505,"finagle-http2: Provides parts to configure Http client with Http2

Problem

We want to hook up http2 to the regular finagle-http protocol object.

Solution

Provide a Transporter implementation that's interoperable with the
status quo.

Result

We can make clients like:

Http.client.withTransporter(Http2).newClient(""twitter.com"")

RB_ID=813347"
olix0r,2016-03-30 01:12:51,https://api.github.com/repos/twitter/finagle/git/commits/1ff06d07e1e53589d828a96238adb6d5fc4db562,1ff06d07e1e53589d828a96238adb6d5fc4db562,"Allow wildcard elements in Dtab prefixes

Problem

In some cases, it is convenient to simply ignore parts of a path when
processing dtabs. This is currently quite awkward to accomplish with
custom namers.

Consider the case when a name like the following is processed:

   /http/1.1/GET/host/resource

Solution

Alter the Dtab syntax to support wildcards in prefix paths. This enables
dtabs in the form:

   /http/1.1/* => /h

This would allow the above name to easily be processed to
/h/host/resource.

Signed-off-by: Antoine Tollenaere <atollenaere@twitter.com>

RB_ID=813914"
olix0r,2016-03-30 00:44:54,https://api.github.com/repos/twitter/finagle/git/commits/3a80b7138b005702c5227214764927a846757a26,3a80b7138b005702c5227214764927a846757a26,"finagle: clean CHANGES merge cruft

Problem

Merge conflict cruft was committed to CHANGES.

Solution

Cruft-be-gone!

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=816332"
vkostyukov,2016-03-29 21:08:42,https://api.github.com/repos/twitter/finagle/git/commits/6e368706f5be0a85deea21eb566e8f9119fef295,6e368706f5be0a85deea21eb566e8f9119fef295,"Update Netty to 4.1.0.RC5

Problem / Solution

Netty 4.1.0.CR5 is released today (already on MC) with our [own fix to `SslHandler`][1].
This should unblock TLS work.

[1]: https://github.com/netty/netty/pull/5039

RB_ID=815930"
cacoco,2016-03-29 19:02:40,https://api.github.com/repos/twitter/finagle/git/commits/903a87c7a76df9f02d35156c5f4b2797e6a0b894,903a87c7a76df9f02d35156c5f4b2797e6a0b894,"finagle-redis: Changes to support PubSub do not compile in 2.10.6

Problem

The current code has several issues which do not compile in Scala
2.10.6. In the Transactions trait, the value ""svc"" is shadowed and
failing compilation in 2.10.6 (recursive call without a defined
return type). Additionally, in Client the passed in factory is not
visible for subclasses which mix in the trait.

Solution

Disambiguate the proxied ""svc"" in the Transactions trait and add
typing. Make the factory constructor arg in Client visible to
subclasses.

Result

Code that compiles in both Scala 2.10.6 and 2.11.7.

RB_ID=815777"
roanta,2016-03-29 18:24:05,https://api.github.com/repos/twitter/finagle/git/commits/51e0c322ad52435f9e5a3c150102293358b2464a,51e0c322ad52435f9e5a3c150102293358b2464a,"Problem

Mux shares a session with multiple tag streams but offers no mechanism
to ensure that an individual stream is not dominating a session.
This is particularly problematic in the presence of large payloads
which can cause head-of-line blocking for an entire session. Ideally,
we would share a session uniformly across streams to increase
goodput.

Solution

In order for a tag stream to yield, we need to defer flushing its
writes to the OS buffer. This implies that we add some some latency
to writes. In netty3, a call to write will immediately flush the
bytes to the OS buffer if there is space (which is the common case).
For example, the following will sit in a tight loop and flush all
the fragments to the OS buffer:

def write(fragments: Iterator[ChannelBuffer]): Future[Unit] =
 if (!fragments.hasNext) Future.Done else
 trans.write(fragments.next()).before(write(fragments))

In other words, trans.write is usually synchronous. To address this
we queue and flush writes periodically (note, netty4 introduces
distinct operations for writing (enqueueing) and flushing). The
current implementation flushes writes on read and uses a scheduled
timer to ensure that we flush regularly if throughput is low. As
mentioned earlier, this does entail a latency penalty. Because we
are now buffering payloads in mux, we get nice cancellation semantics.
This does require that we introduce a new mux message type (Rdispatch)
to assure the sender of a Tdispatch they can safely clear their
buffers.

Any fragment larger than `com.twitter.finagle.mux.maxFrameSize` is
fragmented into `maxFrameSize` sized chunks. The window size is
fixed in the current implementation and future work may include a
flow control algorithm which dynamically sizes it.

Results

The resuls are extracted from a simple client/server setup where
the server responds with 500kb payloads for each request (i.e. all
of our responses are fragmented). The request rate is such that we
are not saturating our NIC allocation (< 37.5 MB/s).

Ping p99: With fragmentation, we see smoother ping latencies and
up to a 50% decrease during peaks.

CPU: With fragmentation, we see ~20-30% less system CPU usage on
both clients and servers (likely due to less syscalls since we batch
writes).

Request p99: Request latency does take a big hit and increases by
~80%.  Future work includes experimenting to see if we can do better
by batching writes on the event-loop thread and avoid having to set
a separate cadence on the `flow-writer` thread.

Allocations/request: no statistical difference between the two

RB_ID=794641"
edma2,2016-03-29 18:16:03,https://api.github.com/repos/twitter/finagle/git/commits/000e8a46cdcd6ef9609cd0543e4c1b06f91cf544,000e8a46cdcd6ef9609cd0543e4c1b06f91cf544,"finagle-serverset2: set ZkMetadata shard ID to None if Int.MinValue

Problem:

com.twitter.finagle.serverset2.Endpoint represents shard ID as an
Int with sentinel value (Int.MinValue) to represent absence of shard
ID. We pass it on directly to ZkMetadata instead of checking for
the sentinel value. Clients interpret the shard ID as Some(Int.MinValue)
rather than None when missing.

Solution:

Check for Int.MinValue and return None if equal to that.

Result:

Clients handle missing shard ID correctly.

RB_ID=815873"
olix0r,2016-03-29 01:29:36,https://api.github.com/repos/twitter/finagle/git/commits/d928ba5f01175e1ab8e1eebbaa5d461252a6f2c4,d928ba5f01175e1ab8e1eebbaa5d461252a6f2c4,"Insert DelayedReleaseService into the HTTP client stack

Problem

FactoryToService releases HTTP services before their response stream has
completed.  This causes busy connections to be returned to the available
connection pool prematurely such that multiple streaming requests may not be
processed simultaneously by an Http service.

Solution

Use the StackClient.Role.prepFactory slot as it was intended: to prevent
premature closure of a Service.  The http.DelayedRelease module wraps all
services in a http.DelayedReleaseService to ensure that close() is not called
on the underlying service until chunked responses have been read or discarded.

Fixes #471

Also-by: Andrew Seigner <siggy@buoyant.io>

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=813110"
jcrossley,2016-03-28 05:17:13,https://api.github.com/repos/twitter/finagle/git/commits/363330f0d330c2fc302f86a3e0d47f023652502e,363330f0d330c2fc302f86a3e0d47f023652502e,"finagle/finagle-core: Verify TimoutFilter can send expired deadlines

Problem

We want to verify the incorrect behavior of TimeoutFilter sending expired deadlines.

Solution

Added a test that confirms TimeoutFilter can send expired deadlines.

TimeoutFilter records the stat ""expired_deadline_ms"" when a deadline has expired,
to verify this behavior happens in practice.

RB_ID=815199
TBR=true"
olix0r,2016-03-26 17:24:57,https://api.github.com/repos/twitter/finagle/git/commits/21a1ba9cbfc8ae1106d024d3681cece5495dfc8a,21a1ba9cbfc8ae1106d024d3681cece5495dfc8a,"finagle-http: Encode local dtabs in the Dtab-Local header

Problem

Finagle's HTTP server may read Dtabs in two forms: the Dtab-local header
and X-Dtab-NN-[A|B} header pairs.  The latter was designed before the
Dtab syntax stabilized; and Dtab-local was introduced to simplify this
in 88ede12847c996547381a2b990b3aaf4f8f99759.  The old X-Dtab is more
complicated and is no longer necessary, since the Dtab-local header has
been supported since August 2014.

Solution

Change Finagle's HTTP client to encode Dtab-local headers.  The old
X-Dtab syntax may still be read by servers, but clients will set only
the Dtab-local header.

Fixes #485

Signed-off-by: Antoine Tollenaere <atollenaere@twitter.com>

RB_ID=815092"
blackicewei,2016-03-25 19:32:59,https://api.github.com/repos/twitter/finagle/git/commits/d8a9d3133ca179a616a30d71472c63ed9d29ee83,d8a9d3133ca179a616a30d71472c63ed9d29ee83,"finagle-redis: remove KeyCommands away from netty3 ChannelBuffer

more netty3 ChannelBuffer free in finagle-redis

RB_ID=814769"
roanta,2016-03-25 18:55:42,https://api.github.com/repos/twitter/finagle/git/commits/ab3b7cb5d967695ea7b4e8b03771c4b06a51b1d8,ab3b7cb5d967695ea7b4e8b03771c4b06a51b1d8,"finagle: fix merge cruft in CHANGES

RB_ID=814920"
jcrossley,2016-03-25 16:57:33,https://api.github.com/repos/twitter/finagle/git/commits/b13ac11942108b1383addb99ec89def29b9fd28b,b13ac11942108b1383addb99ec89def29b9fd28b,"finagle-thrift: Allow any type of request in DeserializeCtx

Problem

DeserializeCtx takes a request param of type ThriftStruct, but the args types
in generated Thrift Java services are not subtypes of ThriftStruct. In order
to do client-side response classification for Java services, a deserialization
context must be created for the request args.

RB_ID=812142"
stevej,2016-03-24 23:55:36,https://api.github.com/repos/twitter/finagle/git/commits/fc6452179168db49797ae620fafe1f70206b9aaf,fc6452179168db49797ae620fafe1f70206b9aaf,"finagle-core: Added Round Robin load balancer and improved Simulation.scala

Problem

We wanted to compare Round Robin load balancing with the choices
available in Finagle.

Solution

We added a simple round robin loadbalancer to the finagle-core package
along with a unit test suite.

We also added improvements to Simulation.scala such as printing
individual latency numbers, adding a slow client in the middle of a
simulation run.

We added a .roundRobin() function to Balancers.scala as well as a
newline to .aperture()'s comment to improve the scaladoc output.

We added a type constraint to DistributorT#This to enforce by the
compiler what was being done by convention.

We changed protection modifiers to several member classes and traits of
loadbalancer package to allow running their tests from sbt.

Result

  * Added Round Robin load balancer for testing purposes.
  * Modified Simulation to allow a slow client in the middle.
  * Modified Simulation to allow tracing latency per request.
  * Added a shell script to automatically run all the Simulations I care about
  * Added some R code in a literate file to help me build nice graphs.
  * Added a newline for improved scaladoc in Balancers.scala

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=814447"
jcrossley,2016-03-24 20:24:56,https://api.github.com/repos/twitter/finagle/git/commits/da49304c037814e0e511779ee2b338d6d4644efd,da49304c037814e0e511779ee2b338d6d4644efd,"finagle: DeadlineFilter per connection

Problem

DeadlineFilter should be per-connection so the rejection budget is
not shared across clients. With the previous behavior, when the
more than the budget % of requests can be rejected from a single client.

Solution

Create a DeadlineFilter per connection.

RB_ID=813731"
atollena,2016-03-24 19:57:52,https://api.github.com/repos/twitter/finagle/git/commits/a1af6869b1ee311c85f4f482c20233cac5c55904,a1af6869b1ee311c85f4f482c20233cac5c55904,"finagle-core: Force keeping observation of first resolved addresses

Problem
--

`Var` producers that manage observation lifecycle properly may release resources
right after `expAllRegisteredClientsResolved` returns, since it creates an
ephemeral observation of the `Var` via `changes.toFuture`. Therefore it does not
fulfil its role of pre-resolving addresses: they will need re-resolution when
requests are sent through the client (at which point observation in
`BindingFactory` and `TrafficDistributor` will force new resolution).

Solution
--

Explicitly observe the `Var` in ClientRegistryModule, to avoid releasing
associated resources until the client is closed.

RB_ID=806940"
elifdd,2016-03-24 19:56:57,https://api.github.com/repos/twitter/finagle/git/commits/0e593cdc6511b48684940e3a62dd7f1671048f28,0e593cdc6511b48684940e3a62dd7f1671048f28,"finagle-memcached: add key information to the exceptions of ClientError
Problem
Clients often would like to know the offending key for ClientError exceptions.

Solution
Append the key to the ClientError exception message.

RB_ID=814040"
sunnykaka,2016-03-24 18:34:27,https://api.github.com/repos/twitter/finagle/git/commits/766f38974663b80509f7d19ae9263c659b11d8a6,766f38974663b80509f7d19ae9263c659b11d8a6,"finagle-example: Example of how to use zookeeper with finagle

Problem

Lack of examples and documents about how to using zookeeper with
finagle.

Solution

Create a simple example of how to use zookeeper with finagle.

Result

It's an example, it does not affect other modules.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=814170"
jcrossley,2016-03-24 17:51:33,https://api.github.com/repos/twitter/finagle/git/commits/14a8844f2a632961c157641d58a9d2c2b0099783,14a8844f2a632961c157641d58a9d2c2b0099783,"finagle: Trace when request rejected

Problem

To aid in debugging, we want to trace when a request is rejected in DeadlineFilter, and record the time since the deadline exired.

Solution

Record ""finagle.deadlineFilter.rejected"" when rejecting, and add to /admission_control/deadline/past_deadline_ms

RB_ID=814310"
blackicewei,2016-03-24 00:47:24,https://api.github.com/repos/twitter/finagle/git/commits/c228e95efba6a9e9ec0dc9c215b2c4a72c328396,c228e95efba6a9e9ec0dc9c215b2c4a72c328396,"finagle-redis: first stab at removing ChannelBuffer from public API

Problem

Finagle-redis should be free from netty3 ChannelBuffer
type.

Solution

Move info, watch, auth to twitter.io.Buf type.

RB_ID=812251
TBR=true"
mosesn,2016-03-23 21:13:46,https://api.github.com/repos/twitter/finagle/git/commits/3cceb0cd7deea2099ffbfa04d082f299396a3441,3cceb0cd7deea2099ffbfa04d082f299396a3441,"finagle-http: Provide mechanism to configure http internals

Problem

We must support a way for clients to specify their internal
implementation

Solution

Provide a with-style method that under the hood changes the
transporter.

RB_ID=804652"
elifdd,2016-03-23 18:27:56,https://api.github.com/repos/twitter/finagle/git/commits/25700665aa032be2d6cf5d932508b9ab117e67f1,25700665aa032be2d6cf5d932508b9ab117e67f1,"finagle-cacheresolver: remove ZookeeperCacheNodeGroup
Problem
KetamaPartitionedClient stops refreshing the view of the cache serverset and simply hangs if there is a mismatch between the number of nodes in the serverset and ""cachePoolSize"" value in the zookeeper node.

Solution
We don'care about ""cachePoolSize"" anymore. So remove ZookeeperCacheNodeGroup which does checks for this.

RB_ID=811190"
vkostyukov,2016-03-23 03:02:56,https://api.github.com/repos/twitter/finagle/git/commits/6747bb8a95f832e8420411fe259146f6648bb375,6747bb8a95f832e8420411fe259146f6648bb375,"finagle-netty4: A number of cleanups and new tests

Problem / Solution

This PR involves a few changes I made along on my way to TLS support so
I decided to discuss them as separate review. The following changes are
made:

1. Using Netty4's `WriteTimeoutHandler` instead our own `WriteCompletionHandler` -
   they literally do the same thing (please, correct me if not), I don't know why we
   had `WriteCompletionHandler` in the first place)
2. Downgrading `ClientChannelInitializer` to `Channel` instead of `SocketChannel` so
   we can use `EmbeddedChannel` to test it
3. Making allocator configurable via stack param.

RB_ID=812818"
wangtianthu,2016-03-23 02:19:42,https://api.github.com/repos/twitter/finagle/git/commits/27a55c9f219013cc12a8d71f418ce744f65d3d0f,27a55c9f219013cc12a8d71f418ce744f65d3d0f,"[finagle] add a convenient mk() method to a filter

RB_ID=813795"
jcrossley,2016-03-22 21:13:21,https://api.github.com/repos/twitter/finagle/git/commits/a64d1a21cfb1bfc40514521ac2211e4afce359c9,a64d1a21cfb1bfc40514521ac2211e4afce359c9," finagle-core: Record more deadline information in stats

Problem

We need more visibility into the conditions under which DeadlineFilter
discards requests.

Solution

TimeoutFilter now records the current timestamp and configured timeout,
the incoming deadline from the request, and the new deadline resulting
from combining the current deadline with the configured
timeout.

DeadlineFilter now records the current time, and the remaining deadline budget as a
negative number instead of 0.

RB_ID=813010"
dschobel,2016-03-22 18:15:24,https://api.github.com/repos/twitter/finagle/git/commits/dfb6c11462fc981b36aa7a8268b2cc9ae297cc3f,dfb6c11462fc981b36aa7a8268b2cc9ae297cc3f,"3rdparty / finagle: bump netty4 to CR4

Problem / Solution

netty4 bump to latest rev

RB_ID=813092"
roanta,2016-03-22 05:08:32,https://api.github.com/repos/twitter/finagle/git/commits/04a841aa9d802aa5f582eb6481e7da902f3229db,04a841aa9d802aa5f582eb6481e7da902f3229db,"finagle-core: Remove DefaultClient

Problem

DefaultClient is irrelevant and implementors should use
StackClient instead.

Solution

Remove it.

RB_ID=812681
TBR=true"
mosesn,2016-03-22 04:12:18,https://api.github.com/repos/twitter/finagle/git/commits/8903d3cdaf0bc1333e1214d0483d3430d64fcf3e,8903d3cdaf0bc1333e1214d0483d3430d64fcf3e,"finagle-netty4: Simplify client initialization

Problem

Netty4ClientChannelInitializers create transports when there's no
reason they need to know about the Transport abstraction.

Solution

Move transport creation into the transporter.

RB_ID=806035"
dschobel,2016-03-21 20:24:59,https://api.github.com/repos/twitter/finagle/git/commits/a0abea0a8b64677e35516e70ac063dba860af101,a0abea0a8b64677e35516e70ac063dba860af101,"3rdparty: bump netty4

Problem / Solution

new version of netty 4.1 is out, let's use it.

RB_ID=812965"
roanta,2016-03-21 19:03:52,https://api.github.com/repos/twitter/finagle/git/commits/2f2d93ab55aa723a8635010dadeb11e6ed70475e,2f2d93ab55aa723a8635010dadeb11e6ed70475e,"finagle-core: Remove DefaultServer

Problem

DefaultServer is no longer relevant and completely
subsumed by StackServer.

Solution

Remove it.

RB_ID=811918
NO_USER_HOOK=1"
mosesn,2016-03-19 01:01:36,https://api.github.com/repos/twitter/finagle/git/commits/a067b4faa20713ce082376e6843334c100e7d3ad,a067b4faa20713ce082376e6843334c100e7d3ad,"finagle-http2: Cleartext http2 transport

Problem

We want to support http2

Solution

The netty http2 codec is still experimental, so for now, in the
name of getting this out the door, we're going to use their http
=> http2 converter, which will have a slightly smaller featureset
than if we were using the http2 api directly.  We can't hook it up
to finagle quite yet because there isn't a conversion from finagle
Request / Response to netty4 Request / Response, but when it lands,
we can start hooking it up on the client side.

One example of the slight weirdness of the netty http2 codec is
that it's incompatible with turning off autoread.  You have to call
a method on the connection handler to get it working.

Other than not doing backpressure, this doesn't handle waiting for
settings properly, so in theory there's a race condition with
upgrading, but since this is experimental, and I want to get this
out the door so we can start experimenting with listeners, I am OK
with shipping it as is.

Result

We can play with an http2-themed finagle Transport!

RB_ID=807769"
mosesn,2016-03-19 00:51:07,https://api.github.com/repos/twitter/finagle/git/commits/3e43ca0209a7ce87f549457ba15a1cfef43f3c92,3e43ca0209a7ce87f549457ba15a1cfef43f3c92,"finagle: Add more modules to coverage individually

Problem

Since we don't have a monolithic task we run in finagle, we must
add each module separately to coverage.

Solution

Add the modules we've been leaving out to coverage and testing.

RB_ID=810887"
thirstycrow,2016-03-19 00:29:10,https://api.github.com/repos/twitter/finagle/git/commits/b6bc1601bdb6bbe8fda8c9c193b540166fa48fb4,b6bc1601bdb6bbe8fda8c9c193b540166fa48fb4,"finagle-redis: Add support for pubsub clients

Problem

finagle-redis doesn't support pubsub redis commands, and finagle doesn't
have good support for streaming.  Redis sessions that are subscribed
also can't send other kinds of requests.

Solution

Provide a streaming api for subscribers, where when you subscribe to a
channel, you also provide a handler.  Segregate subscription connections
from other kinds of connections in a special RedisPool.

Result

Pubsub works without being too fiddly.

RB_ID=810610"
dschobel,2016-03-18 22:59:24,https://api.github.com/repos/twitter/finagle/git/commits/2e944eac9ff4d09bdfd183959c393e73791580cf,2e944eac9ff4d09bdfd183959c393e73791580cf,"finagle-netty4-http: introduce stack client for http 1.1 on netty4

Problem / Solution

finagle-netty4-http needs a client object as an entry point to
creating http 1.1 clients.

RB_ID=811129"
leonmaia,2016-03-18 20:27:57,https://api.github.com/repos/twitter/finagle/git/commits/b7803106c3469d478f2cb03e96c4b1c390357d2a,b7803106c3469d478f2cb03e96c4b1c390357d2a,"Problem

Lack of examples to create a Http server using java.

Solution

Build a very minimal example showing how to create a server, some
filters, and a very basic routing.

Result

More examples of how to start a java project using Finagle.

RB_ID=812035"
thirstycrow,2016-03-18 18:06:36,https://api.github.com/repos/twitter/finagle/git/commits/238f98dfb126700d71c221186a71a4a026b4dd45,238f98dfb126700d71c221186a71a4a026b4dd45,"finagle-redis: Adds support for sentinel commands

Problem

finagle-redis doesn't support sentinel commands.

Solution

Provide support for sentinel commands.

RB_ID=810663"
kevinoliver,2016-03-18 17:59:01,https://api.github.com/repos/twitter/finagle/git/commits/58dcb3379face18e035e294824f77fdd6742f6ef,58dcb3379face18e035e294824f77fdd6742f6ef,"util-core: Remove deprecated Future.apply methods

Problem

`c.t.util.Future.apply` is deprecated because it makes it a little too
easy to do a blocking operation.

Solution

Replace usages with `c.t.util.Await.result` so it is explicit.

RB_ID=811617
TBR=true"
kevinoliver,2016-03-18 04:36:31,https://api.github.com/repos/twitter/finagle/git/commits/f95dd31ee6b735fd9ff79996ecbbf4bb19d46837,f95dd31ee6b735fd9ff79996ecbbf4bb19d46837,"finagle-core: Revert accidental changes to Stack/ServerRegistry

Problem

In the commit for RB 809100 I accidentally included some debugging
code from another branch in `StackRegistry` and `ServerRegistry`.

Solution

Code goes back to the way it once was.

RB_ID=812365
TBR=true"
kevinoliver,2016-03-17 19:48:05,https://api.github.com/repos/twitter/finagle/git/commits/439b269951fe7f3b6d887859bb36ebf239aaddd7,439b269951fe7f3b6d887859bb36ebf239aaddd7,"util-core: Fix leak in Var.apply(T, Event[T]) and Var.patch

Problem

Creating of a Var from an Event via `Var.apply[T](T, Event[T])`
(the canonical way to modify a `Var`) eagerly subscribes to
the passed in `Event`. This subscription keeps a reference to the
resulting `Var` in order to update it. However, because the event
is passed to `Closable.closeOnCollect` it prevents the var from
ever being collected.

The same issue occurs with `Var.patch` as well.

(this great bug report brought to you by Antoine Tollenaere
<atollenaere@twitter.com>)

Solution

Only hold a `WeakReference` back to the `Var` avoiding the strong
reference.

Result

The `Var` can be garbage collected.

RB_ID=809100"
mosesn,2016-03-16 19:12:10,https://api.github.com/repos/twitter/finagle/git/commits/9d61a835c0dcea55f5e0816d506413d22a579614,9d61a835c0dcea55f5e0816d506413d22a579614,"Revert ""finagle-core: Turn on DeadlineFilter""

RB_ID=811469
TBR=true
NO-QUEUE=true"
cacoco,2016-03-16 17:18:43,https://api.github.com/repos/twitter/finagle/git/commits/ec1c1b360bdbdb56994ae7a313aa87bc47a28d57,ec1c1b360bdbdb56994ae7a313aa87bc47a28d57,"finagle-doc: Remove extraneous comma from code-snippet

Problem

There's an extra comma in the concurrency-limit code-snippet.

Solution

Remove the comma.

Result

Less comma.

RB_ID=811299"
dschobel,2016-03-15 23:12:27,https://api.github.com/repos/twitter/finagle/git/commits/0a94817afb1ecdabc55f00c646b5e5e095b5dc71,0a94817afb1ecdabc55f00c646b5e5e095b5dc71,"finagle-netty4: fix data starvation in ChannelTransport when auto-read is disabled

Problem

ChannelTransport only reads its channel once per transport read,
this read isn't guaranteed to deliver sufficient bytes to satisfy
the transport read.

Solution

Track the number of requested `Out` messages and keep reading off
the channel until the number is satisfied.

RB_ID=810804"
jcrossley,2016-03-15 22:35:30,https://api.github.com/repos/twitter/finagle/git/commits/5c6500857328f33741134360b71672d6f1684e56,5c6500857328f33741134360b71672d6f1684e56,"finagle-core: Turn on DeadlineFilter

Problem
Requests past their deadline should be discarded.

Solution
DeadlineFilter rejects requests past their deadline.

RB_ID=811038"
vkostyukov,2016-03-15 18:49:30,https://api.github.com/repos/twitter/finagle/git/commits/0af7dfd228f1db52f46fb8b5ca58c6e759938289,0af7dfd228f1db52f46fb8b5ca58c6e759938289,"finagle-core: Do not trace when Tracer is null

Problem

Both `StatsReceiver` and `Tracer` may be set to null in Finagle server. It
makese sense to skip all the tracing- and stats-related filters in that
case while materializing the stack.

Solution

Introduce `Tracer.isNull` so we can check that in every filter that does
tracing and skip it if needed.

RB_ID=809574"
nrinaudo,2016-03-15 00:53:43,https://api.github.com/repos/twitter/finagle/git/commits/7b5eaaebf4a9b7c11808207af51bd3001f0ef609,7b5eaaebf4a9b7c11808207af51bd3001f0ef609,"finagle-http: Decompress requests on the server

Problem

Finagle currently fails to decode legal client-submitted encoded request
entities (typically, gzipped or deflated).

See #476 and #469 for more details.

Solution

Hook HttpContentDecompressor into server pipelines whenever configured
to support it.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=810629"
kevinoliver,2016-03-14 19:04:25,https://api.github.com/repos/twitter/finagle/git/commits/fc321f804a22a695ec419902505c8509ffbd594d,fc321f804a22a695ec419902505c8509ffbd594d,"util-core: Remove deprecated methods from Buf.scala

Problem

There are a handful of methods in Buf.scala that have been deprecated
for a while.

Solution

Remove them and fix usage with the proper replacements.

- `c.t.io.Buf.ByteArray.apply` => `Buf.ByteArray.Owned.apply`
- `c.t.io.Buf.ByteArray.unapply` => `Buf.ByteArray.Owned.unapply`
- `c.t.io.Buf.ByteBuffer.apply` => `Buf.ByteBuffer.Owned.apply`
- `c.t.io.Buf.toByteBuffer` => `Buf.ByteBuffer.Owned.extract`

RB_ID=809948
TBR=true"
roanta,2016-03-14 18:59:22,https://api.github.com/repos/twitter/finagle/git/commits/e1e3a1ab085a62da637dbf84834872a565919200,e1e3a1ab085a62da637dbf84834872a565919200,"finagle-mux: Interrupt writes in server dispatcher

Problem

When writing a response in mux, we lose track of the writer
promise (i.e. write and forget). This is unfortunate because
we want to attempt to interrupt the write if we receive a
cancellation from the client. For example, this becomes
increasingly important with large responses that are more likely
to timeout.

Solution

Compose writes as part of our pending state on the mux server.
This has some implications which are subtle. Namely, because
netty3 doesn't guarantee that write closures will be executed on
the event loop thread, it means that we can now race with a mux
client which reuses tags eagerly. To mitigate this, we change
the way we do writes in ChannelTransport which closes the window
for one potential race. Additionally, we make the server more
lenient by servicing duplicate tags and forcing pathalogical
clients to deal with it.

RB_ID=802514"
dschobel,2016-03-11 20:47:45,https://api.github.com/repos/twitter/finagle/git/commits/14beaed73b88b1d44234e5d028294e8d048b8c11,14beaed73b88b1d44234e5d028294e8d048b8c11,"finagle-http-netty4: add client dispatcher

Problem / Solution

netty4's http 1.1 impl needs a client dispatcher.

RB_ID=809285"
roanta,2016-03-11 20:25:29,https://api.github.com/repos/twitter/finagle/git/commits/ee9e47a94ae8652fbfb9ebe0b2855df8128742f5,ee9e47a94ae8652fbfb9ebe0b2855df8128742f5,"finagle-mux: proxy peerCert during handshake

Problem

We capture the peerCert inside a local when constructing
a dispatcher. However, we defer the resolution of it until
we are done handshaking in `DeferredTransport`. We have access
to it before the handshake and it isn't likely to change.

Solution

Proxy the synchronous methods while we are handshaking.

RB_ID=809235"
kevinoliver,2016-03-11 19:28:12,https://api.github.com/repos/twitter/finagle/git/commits/316f875000a02cc291476fc38cc8995830298568,316f875000a02cc291476fc38cc8995830298568,"finagle-core: Fix docs for WriteException

Problem

The docs for `WriteException` were a bit misleading as discussed on
finaglers@ [1].

Solution

Fix up the docs.

[1] https://groups.google.com/forum/#!topic/finaglers/6fagCGpTMZU

RB_ID=809675"
roanta,2016-03-11 18:26:22,https://api.github.com/repos/twitter/finagle/git/commits/0bfa440bdf839d0f32c3ef6e6c081025094d683d,0bfa440bdf839d0f32c3ef6e6c081025094d683d,"finagle-mux: fix flaky failure detector test

Problem

We are racing with the `closeTimeout`.

Solution

Disable `closeTimeout` for this test since we aren't
expecting it to be set.

RB_ID=809463"
cacoco,2016-03-10 23:14:38,https://api.github.com/repos/twitter/finagle/git/commits/44f444f606b10582c2da8d5770b7879ddd961211,44f444f606b10582c2da8d5770b7879ddd961211,"Bump versions - util/ostrich/finagle/scrooge/twitter-server

Prepare libraries for release.

RB_ID=809587"
vkostyukov,2016-03-10 20:46:45,https://api.github.com/repos/twitter/finagle/git/commits/823c3ede2f85422fb21ac83e3ae7244b60407339,823c3ede2f85422fb21ac83e3ae7244b60407339,"finagle-core: FailureAccrualPolicy is mutable and should never be shared

Problem

`FailureAccrualPolicy` maintains a mutable state that `FailureAccrualFactory` uses
to determine whether or not an endpoint should be marked unavailable. Given that
it's mutable, it should never be shared across different endpoint stacks (endpoints)
in a single Finagle client. This is why using `Param(p: FailureAccrualPolicy)` may
lead to a surprising results when different endpoints interfere with each other.

Solution

`FaulureAccrualPolicy` should be passed as a function (factory) instead.

RB_ID=802953
TBR=true"
dschobel,2016-03-10 20:33:02,https://api.github.com/repos/twitter/finagle/git/commits/60b11df920daea263bd866509596359677fce9bd,60b11df920daea263bd866509596359677fce9bd,"finagle-core: fail pending requests when GenSerialClientDispatcher's transport closes

Problem

GenSerialClientDispatcher queues concurrent requests but fails to
satisfy them when either the dispatcher or the underlying transport
are closed.

Solution

Fail pending and future requests when the transport is closed.

RB_ID=807590"
kevinoliver,2016-03-10 17:42:01,https://api.github.com/repos/twitter/finagle/git/commits/cdd883b8f7ad9d3970840abf8fb58b9c772e3c79,cdd883b8f7ad9d3970840abf8fb58b9c772e3c79,"Add PULL_REQUEST_TEMPLATEs

Problem

We want to make it as easy as possible for our contributors to do the
right thing.

Solution

Use Github's PR templates[1] to help them do this.

Result

Pull requests are more likely to be formatted correctly.

[1] https://help.github.com/articles/creating-a-pull-request-template-for-your-repository/

RB_ID=808946"
stuhood,2016-03-10 02:14:08,https://api.github.com/repos/twitter/finagle/git/commits/a6a7f4696baab2fb9b1b06691a72cfa9461498e5,a6a7f4696baab2fb9b1b06691a72cfa9461498e5,"Enable warnings for unused imports for scala

Problem:

Many projects have unused imports that they are unaware of. This will occasionally cause them to have false-dependencies on other code, which slows down builds unnecessarily.

Solution:

Enable warnings for unused imports for scalac, and remove unused imports for `fatal_warnings` targets (since an unused import will now be an error for them).

RB_ID=808875"
dschobel,2016-03-10 00:47:42,https://api.github.com/repos/twitter/finagle/git/commits/8f1d278c73db6fb32c549c003fc02fd4c68b1230,8f1d278c73db6fb32c549c003fc02fd4c68b1230,"finagle-http-netty4: scaffolding + utilities for netty4 / http 1.1

Problem / Solution

Our http 1.1 implementation for netty4 needs a new module and
some helper classes to map between the finagle and netty domain

RB_ID=806460"
kevinoliver,2016-03-09 20:10:18,https://api.github.com/repos/twitter/finagle/git/commits/2613ca001c483fa3cae37389724929704c127f47,2613ca001c483fa3cae37389724929704c127f47,"util-core: Add Java friendly API for Stopwatch

Problem

The `c.t.u.Stopwatch` companion object does not have a Java friendly API.

Solution

Introduce `c.t.u.Stopwatches` for Java users.

Result

Less `MODULE$s`.

RB_ID=808474
TBR=true"
mosesn,2016-03-08 06:06:38,https://api.github.com/repos/twitter/finagle/git/commits/8fd556f3295477c74716bf507655244f4d4dd303,8fd556f3295477c74716bf507655244f4d4dd303,"finagle-netty4: isSharable override => Sharable annotation

Problem

Some handlers are sharable, and others are not.

Solution

Mark sharable handlers with the Sharable annotation, which seems
to be idiomatic.

RB_ID=807798"
roanta,2016-03-07 20:12:21,https://api.github.com/repos/twitter/finagle/git/commits/d3fa465aa3baf451a158333db97dc866cbe3015d,d3fa465aa3baf451a158333db97dc866cbe3015d,"Problem

In some cases, when receiving a message which can't be translated to thrift,
the downgrader would echo an Rerr message back into the dispatcher. This isn't
exactly to spec and there are better ways to handle this case. What's worse,
this could cause an infinite recursion where we keep sending `Rerr`s between
the dispatcher and the syntethic client.

Solution

Uniformly handle errors by throwing in the pipeline. This will be handled by
Finagle's server bridge and be logged.

RB_ID=805589"
edma2,2016-03-04 23:27:51,https://api.github.com/repos/twitter/finagle/git/commits/675ef8a69e2d6838522b40a4891a92951d6dc9fa,675ef8a69e2d6838522b40a4891a92951d6dc9fa,"finagle/doc: Update Addr documentation with c.t.f.Address

Problem:

c.t.f.Addr documentation references SocketAddresses, which were replaced by c.t.f.Address.

Solution:

Update the reference to c.t.f.Address.

RB_ID=807360"
roanta,2016-03-04 20:04:41,https://api.github.com/repos/twitter/finagle/git/commits/4388598c9205554e93ed13273ef9e938e0574183,4388598c9205554e93ed13273ef9e938e0574183,"Problem

While laying the groundwork for moving finagle-mux to netty4, it
became apparent that c.t.io.Buf has a clumsy API for decoding
numeric values. For example, the Mux protocol makes heavy use of
length encoded fields. So to decode a field we need to do the
following:

```
val values = ArrayBuffer()
var b0 = buf
while (b0.length > 0) {
  val Buf.U32BE(len, b1) = b0
  val field = b1.slice(0, len)
  b0 = b1.slice(len, b1.length)
  values += field
}
```

Compare this with a stateful API like Netty's ChannelBuffer:

```
val values = ArrayBuffer()
while (cb.readableBytes() > 0) {
  val field = cb.readSlice(cb.readInt())
  values += field
}
```

What's more concerning though is the performance profile. Because
Bufs can only be created dynamically via concat, this results in a
suboptimal memory layout (i.e. we forgo the optimizations that come
with sequential array access). This is apparent in a simple benchmark:
https://gist.github.com/roanta/6f024386c270dc5e9d66

Solution

Introduce a stateful API for constructing a Buf and extracting
numeric values.  The API is simple and currently only has an
implementation for writing and reading big-endian numeric values.
It's private finagle and we can decide to promote it to util as we
start porting more of the protocols and settle on a stable API.

Result

Decoding (and encoding) becomes much more natural to express:

```
val values = new ArrayBuffer[Buf]
val br = BufReader(buf)
while (br.remaining > 0) {
  val v = br.readBytes(br.readIntBE())
  values += v
}
```

and the performance is quite nice across the board:

[info] BufCodecBenchmark.decodeBuf                                         100  avgt   10    57.431 ±   4.626   ns/op
[info] BufCodecBenchmark.decodeBuf:·gc.alloc.rate.norm                     100  avgt   10   272.003 ±   0.001    B/op

[info] BufCodecBenchmark.decodeCB                                          100  avgt   10   964.125 ±  71.177   ns/op
[info] BufCodecBenchmark.decodeCB:·gc.alloc.rate.norm                      100  avgt   10  5048.054 ±   0.006    B/op

[info] BufCodecBenchmark.encodeBuf                                         100  avgt   10  1698.580 ±  55.522   ns/op
[info] BufCodecBenchmark.encodeBuf:·gc.alloc.rate.norm                     100  avgt   10  3376.092 ±   0.009    B/op

[info] BufCodecBenchmark.encodeCB                                          100  avgt   10  1211.978 ±  16.924   ns/op
[info] BufCodecBenchmark.encodeCB:·gc.alloc.rate.norm                      100  avgt   10   952.063 ±   0.007    B/op

RB_ID=801488"
niw,2016-03-03 23:11:15,https://api.github.com/repos/twitter/finagle/git/commits/d9ff8f2059723e9fde353d2b2ac610518e6a7d55,d9ff8f2059723e9fde353d2b2ac610518e6a7d55,"finagle-core: Defer resolving socket address for proxies when it is needed

Problem:

Current Finagle client takes a SocketAddress given to the Params before establish connections to Socks or HTTP proxy.
That SocketAddress has already been resolved since Java InetSocketAddress implementation resolves host name immediately and pick the first resovled address when it's instantiated.
Because of this, if the proxies are using be DNS round robin yet the client keeps using same resolved address.

Modifications:

- Add a new channel handler that defers resolving SocketAddress until it's need.
- Randomly selecting one of resolved addresses to make DNS round robin work.

RB_ID=804787"
blackicewei,2016-03-03 22:53:53,https://api.github.com/repos/twitter/finagle/git/commits/90e42937e3c63b66586e2df73f35e67dd439837c,90e42937e3c63b66586e2df73f35e67dd439837c,"finagle-core: TrafficDistributor status becomes best of all weight classes

Problem

The retry module only retries when the underlying
ServiceFactory is in an Open status. Currently
TrafficDistributor becomes busy if any weight classes
is busy. This prevent retryable failures from being retried.

Solution

Change the status of TrafficDistributor to be the
best of all weight classes. Added status stats in the
retry module to make the problem easier to detect.

RB_ID=803588"
edma2,2016-03-03 18:41:51,https://api.github.com/repos/twitter/finagle/git/commits/a2c92890727131a87f951f130a66fdfa8d7b577e,a2c92890727131a87f951f130a66fdfa8d7b577e,"finagle-memcached: add test for KetamaClientBuilder.dest()

Problem:

Calling `Group.fromVarAddr` strips away metadata from `c.t.f.Address`.
This bug was fixed in SHA f9a94e904 by calling `CacheNodeGroup.fromVarAddr`
instead. There wasn't a unit test for that change.

Solution:

Add a unit test for this change to prevent future regressions.

RB_ID=806219"
grimreaper,2016-03-01 00:30:19,https://api.github.com/repos/twitter/finagle/git/commits/bb54d7d3fc6325c4aab260ecb0a1eebf89bb24e2,bb54d7d3fc6325c4aab260ecb0a1eebf89bb24e2,"Fix speeling mistakes in source

Fix speeling mistakes in source

\- fix spelling mistakes across source
\- exclude directories with data files from spelling linter

This was an automated change, but somewhat manually reviewed (in order to exclude files)

RB_ID=805009
TBR=true
NO_USER_HOOK=1"
jcrossley,2016-02-29 22:12:55,https://api.github.com/repos/twitter/finagle/git/commits/6716980a5f313cdc4488c578ea3a642cdfb9d4fa,6716980a5f313cdc4488c578ea3a642cdfb9d4fa,"finagle: Include upstream/downstream addresses/client ids and trace id in exceptions

Problem

When a server throws an error on a request, there isn't an easy way to
determine where the request came from.

Solution

Include upstream/downstream addresses/client ids and trace id in exceptions.
The upstream address is propagated through a local context from the server
to the client.

RB_ID=797082
TBR=true"
edma2,2016-02-27 03:09:05,https://api.github.com/repos/twitter/finagle/git/commits/d8c085ce124e79da8b4438a297d7ac57fa655b96,d8c085ce124e79da8b4438a297d7ac57fa655b96,"Unrevert c.t.f.Address and fix finagle-memcached

Problem:

.dest() is broken for KetamaClientBuilder. It calls Group.fromVarAddr
which strips the cache node metadata from the request. This means
custom keys (e.g. shard ID) are not seen by KetamaPartitionedClient,
lowering cache hit rate. Furthermore, Java clients calling .group()
may see runtime exceptions due to typecasting - change them to call
.dest().

Solution:

KetamaClientBuilder.dest() calls CacheNodeGroup.fromVarAddr to
recover cache node metadata from the c.t.f.Address. Fix Java clients
calling .group().

RB_ID=804407
TBR=true"
grimreaper,2016-02-26 17:58:24,https://api.github.com/repos/twitter/finagle/git/commits/7086e5efcde3d28f671654fb3b70d880659f761a,7086e5efcde3d28f671654fb3b70d880659f761a,"Fix some lint errors in CONFIG.ini and OWNERS - missing newlines - trailing whitespace

RB_ID=804492
TBR=true
NO_USER_HOOK=1"
edma2,2016-02-26 00:45:11,https://api.github.com/repos/twitter/finagle/git/commits/194c6f73ce67f13146c56b1044ec697a396d82fc,194c6f73ce67f13146c56b1044ec697a396d82fc,"revert  finagle-core: introduce c.t.f.Address to represent physical locations of endpoints

Revert to unblock earlybird. See https://jira.twitter.biz/browse/SEARCH-9773

RB_ID=804110"
edma2,2016-02-24 21:49:14,https://api.github.com/repos/twitter/finagle/git/commits/dece5410a3144cfae5ddf8e9131fa6025273999d,dece5410a3144cfae5ddf8e9131fa6025273999d,"finagle-serversets: expose shard ID in ZkMetadata

Problem:

Shard ID is needed by cache clients, so they currently rely on
twcache resolver. There could be a way to use Zk2Resolver instead
if it exposed a shard ID for each address.

Solution:

Define ZkMetadata which contains the shard ID.

RB_ID=803618"
vkostyukov,2016-02-23 23:37:15,https://api.github.com/repos/twitter/finagle/git/commits/b7359dee8309f9655802e08ec00e9c7e2eeee17d,b7359dee8309f9655802e08ec00e9c7e2eeee17d,"finagle-http: Add extractors for Status of HTTP Response

Problem

When writing response classifiers, and other code that deals with responses,
in a generic manner, it is currently inconvenient to match against specific
ranges of errors such as Server Errors or Client errors.

Solution

By adding extractors for the different categories (Unknown, Informational,
Successful, Redirection, Client Error, and Server Error) it becomes possible
to easily determine in which category a response falls.

Result

Determining whether a response was succesful is as easy as matching
on `Successful(_)`.

RB_ID=802332"
edma2,2016-02-23 21:47:19,https://api.github.com/repos/twitter/finagle/git/commits/ab4924dec77e068389c16837399bc60160e2ae93,ab4924dec77e068389c16837399bc60160e2ae93,"finagle-core: introduce c.t.f.Address to represent physical locations
of endpoints

Problem:

Finagle's API directly exposes SocketAddress for clients to use
when writing c.t.f.Resolvers and consuming c.t.f.Addr.  SocketAddress
is an empty interface, so Finagle must check the underlying type
at runtime to do anything useful with it (WeightedSocketAddress,
InetSocketAddress, etc.). Also, we often need to propagate metadata
about the SocketAddress to ServiceFactories, such as weight (in the
future, also shard ID). We currently represent this as a SocketAddress
subclass. The proliferation of subclasses coupled with runtime type
checking makes the code fragile.

Solution:

Introduce c.t.f.Address which encapsulates the idea of a concrete
service endpoint. Make it a sealed trait so that we have more control
over what types Finagle allows.

RB_ID=792209
TBR=true"
esamson,2016-02-23 16:53:03,https://api.github.com/repos/twitter/finagle/git/commits/7d87d18e817bc97f6251bdada6c894af91d23eef,7d87d18e817bc97f6251bdada6c894af91d23eef,"Update dependencies in sample code to 6.33.0

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=802344"
ryangreenberg,2016-02-20 01:38:04,https://api.github.com/repos/twitter/finagle/git/commits/d279f69573d736ad46d09472b02d382f5adb7c27,d279f69573d736ad46d09472b02d382f5adb7c27,"finagle-http: Rename lime to time

Problem

Access logs do not contain any information about limes.

Solution

Rename lime to time.

RB_ID=802287"
jcrossley,2016-02-19 04:02:58,https://api.github.com/repos/twitter/finagle/git/commits/28c03353024a2372513657030ba1c940c6f1b9b8,28c03353024a2372513657030ba1c940c6f1b9b8,"finagle: Response classification on the server for HTTP

Problem

There is no way to classify responses as successes or failures on the server.

Solution

HTTP Servers can now be configured with a response classifier.

RB_ID=800179"
vkostyukov,2016-02-19 00:54:29,https://api.github.com/repos/twitter/finagle/git/commits/9bf44841e7b8855a9fb0d1277f8d441e1f288e25,9bf44841e7b8855a9fb0d1277f8d441e1f288e25,"finagle-core: Do not allocate new cons on Backoff.const

Problem

`Backoff.const` used by many Finagle modules is implemented in terms of `Stream.continually`
that infinitelly _allocates_ new cons for each element in the infinite stream. This results
in a huge memory consumption by clients doing infinite retries.

Solution

Lets reuse the lazy cons intead of creating a new one.

RB_ID=801504"
dschobel,2016-02-18 22:04:33,https://api.github.com/repos/twitter/finagle/git/commits/e700bbf2b9d182af9a9d70b52a763edae4ab7411,e700bbf2b9d182af9a9d70b52a763edae4ab7411,"3rdparty + finagle-netty4: bump netty4.1 to CR1 and fix deprecations

Problem

netty deprecated #order api for accessing the endianess of a byte
buffer in favor of little-endian specific accessors [0].

[0] https://github.com/netty/netty/pull/4477/

Solution

remove usage of #order.

RB_ID=800763"
kevinoliver,2016-02-18 21:53:08,https://api.github.com/repos/twitter/finagle/git/commits/6b230c7032efe4ac1f07118da19bb1d8eeb54869,6b230c7032efe4ac1f07118da19bb1d8eeb54869,"finagle-core: Remove deprecated methods

These finagle-core methods have been deprecated a long time and have
simple replacements.

- Removed `c.t.f.Service.release`, replace usage with `Service.close()`.
- Removed `c.t.f.ServiceFactory.make`, replace usage with `ServiceFactory.apply`.
- Removed `c.t.f.ProxyServiceFactory`, replace usage with `ServiceFactoryProxy`.
- Removed `c.t.f.service.FailureAccrualFactory` constructor.
- Removed `c.t.f.netty3.ChannelBufferBuf.apply`, replace usage with `ChannelBufferBuf.Owned.apply`.
- Removed `c.t.f.util.InetAddressUtil.Loopback`, replace usage with `java.net.InetAddress.getLoopbackAddress`.
- Removed `c.t.f.tracing.TracingFilter`, replace usage with `TraceInitializationFilter` and `(Client|Server)TracingFilter`.

RB_ID=800974
TBR=true"
kevinoliver,2016-02-18 00:03:46,https://api.github.com/repos/twitter/finagle/git/commits/5617e9f941f95674619f7f8792795f0928c28068,5617e9f941f95674619f7f8792795f0928c28068,"finagle-core: Minor cleanups in c.t.f.loadbalancer

Motivation

In preparation for future work, this is a collection of minor cleanups
in the `loadbalancer` package.

Result

All nested and separate classes in `Balancer.scala` are moved to their
own files.

RB_ID=800149"
dschobel,2016-02-17 22:08:53,https://api.github.com/repos/twitter/finagle/git/commits/6dd9cb03cb49c8cc6e7bf088de9e4adcefe52cef,6dd9cb03cb49c8cc6e7bf088de9e4adcefe52cef,"finagle-netty4: add netty pipeline ctor for transporter

Problem

transporter needs to expose the netty pipeline for protocols where we'll use netty's implementation.

Solution

new ctor for transporter which exposes a pipeline callback.

RB_ID=800640"
kevinoliver,2016-02-17 06:07:40,https://api.github.com/repos/twitter/finagle/git/commits/9b1c41e732f9c870339204e25b5768ea40de68c9,9b1c41e732f9c870339204e25b5768ea40de68c9,"finagle: Add links to user guide from scaladocs

Motivation

Devs may be looking at the code or scaladocs and there is often have
more detailed documentation in the user guide.

Solution

Add links to help devs discover these docs.

RB_ID=800483"
vkostyukov,2016-02-16 20:54:51,https://api.github.com/repos/twitter/finagle/git/commits/35e466ff35a1630c17aba6ee1fbd593aa0d9b697,35e466ff35a1630c17aba6ee1fbd593aa0d9b697,"Introduce PayloadSizeFilter (reports histograms of payload sizes)

Problem

There is no way to get a distribution of the sizes of the requests and responses
in Finagle.

Solution

There are three ways of building Finagle clients/servers so we'd need to make
sure that our new module/filter will be picked up, no matter what API was used:
`*Builder.stack(...)`, `*Builder.codec()`, `Protocol.*`.

This RB introduces the `PayloadSizeFilter` and enables it for four protocols
(HTTP, Mux, Thrift and ThriftMux).

Finagle users don't need to take any actions no matter what way/API they used
to build clients and servers.

RB_ID=797821
TBR=true"
kevinoliver,2016-02-16 20:25:35,https://api.github.com/repos/twitter/finagle/git/commits/a918fc5faf75f4500b334740cc5363805ab181f1,a918fc5faf75f4500b334740cc5363805ab181f1,"finagle-core: Mixin NoStacktrace to NilService's Exception

Motivation

The stacktrace provided by `c.t.f.service.NilService` is arbitrary.

Solution

Mixin `NoStacktrace` to minimize confusion.

RB_ID=800223"
roanta,2016-02-16 19:10:40,https://api.github.com/repos/twitter/finagle/git/commits/d21fe77b7445cd9732a57980661e56f0e75bb91b,d21fe77b7445cd9732a57980661e56f0e75bb91b,"finagle-mux: handshakes

Problem

We need to be able to iterate on our mux implementations in a
principled way. Session negotiation and versioning is supported
by the mux spec, but is not part of our implemention.

Solution

Introduce session handshaking for both clients and servers.

The mux spec allows for (re)negotiation to happen arbitrarily through
out a session, but for simplicity, our implementation assumes it
at the start of a session. It is implemented in terms of a Transport
so that negotiation can sit transparently below client and server
dispatchers and easily install features based on the exchanged
version and headers.

Unfortunately, we didn't ship Mux with handshakes, so we need to jump
through some hoops for backwards compatibility. We implement a
""pre-handshake"" which checks whether or not a server can understand
the Tinit message. This allows us to roll out the patch without coordinating
updates between servers and clients.

RB_ID=793350"
kevinoliver,2016-02-12 20:24:47,https://api.github.com/repos/twitter/finagle/git/commits/f59eecd80258027a971ae9b726740a7f94c1cb9f,f59eecd80258027a971ae9b726740a7f94c1cb9f,"finagle: Document Contexts

`c.t.f.context.Contexts` are begging to have their story heard,
this gives them a voice.

RB_ID=799410"
kevinoliver,2016-02-11 17:27:19,https://api.github.com/repos/twitter/finagle/git/commits/0f0474068122ac62facc28608cbe16b3747df9e3,0f0474068122ac62facc28608cbe16b3747df9e3,"finagle: Various small documentation cleanups

Fixed a handful of warnings and broken documenation windows.

RB_ID=799026"
kevinoliver,2016-02-10 23:54:34,https://api.github.com/repos/twitter/finagle/git/commits/59e1613839d4bb939e57f42032815f9496ae5a71,59e1613839d4bb939e57f42032815f9496ae5a71,"finagle-memcached: Add information to runtime registry

Motivation

Its useful to know if memcached clients are using pipelining or not.

Solution

Add this info into the runtime registry under
`client/memcached/$client_name/is_pipelining`.

RB_ID=798753"
atollena,2016-02-10 01:31:00,https://api.github.com/repos/twitter/finagle/git/commits/ebe248745d5c472aa4a1c9769c9effc549b9dd74,ebe248745d5c472aa4a1c9769c9effc549b9dd74,"finagle-core: Handle conflicts between service failures and policy in failure accrual

Problem
--

When FailureAccrualFactory is in probing state and a failing response is
recorded, we rely on the FailureAccrualPolicy to decide when to retry. However,
if the policy decides that we are healthy (for instance if we are above success
rate for the current window), we stay stucked in ProbeClosed state and never
retry. In other words, FailureAccrualFactory assumes that the policy internal
state cannot improve on failure, but has no way to ensure that this invariant
holds.

Solution
--

When the underling service fails but the policy indicates that we should not
mark dead, move back to probing state.

Result
--

FailureAccrualFactory cannot get stucked in ProbeClosed state, regardless of the
policy.

RB_ID=797807"
vkostyukov,2016-02-09 20:10:54,https://api.github.com/repos/twitter/finagle/git/commits/572618797b2b8243e42149dc10f0f486b80d1d26,572618797b2b8243e42149dc10f0f486b80d1d26,"finagle: Fix broken docs

Problem / Solution

Some of the Finagle docs are broken and outdated so people are starting
to complain about them. Let's fix it.

RB_ID=797997"
dschobel,2016-02-09 20:06:25,https://api.github.com/repos/twitter/finagle/git/commits/1988ee2050726349e48de25a04a8dde0ac77a26d,1988ee2050726349e48de25a04a8dde0ac77a26d,"finagle-core: fix race in failure accrual factory probing transition

Problem

The ProbeOpen => ProbeClosed transition locks on session intrinsic
locks rather than the service factory instance's lock. This allows
invalid state transitions from Alive | Dead => ProbeClosed.

Solution

Guard on the service factory instance's lock everywhere.

RB_ID=798313"
kevinoliver,2016-02-08 21:25:26,https://api.github.com/repos/twitter/finagle/git/commits/33fe29f589adf1c66c9e57df944de1b449ea5d66,33fe29f589adf1c66c9e57df944de1b449ea5d66,"finagle-core: StatsFilter: Use a synthetic exception for non-Exception failures

Motivation

The `ResponseClassification` code now allows `Returns` to be
classified as failures. The current code in `StatsFilter` does not
count these as failures in its `ExceptionStatsHandler` leading to some
confusion.

Solution

Create a synthetic exception, `ResponseClassificationSyntheticException`,
that is used when non-`Throws` are classified as failures.

Result

More accurate metrics.

RB_ID=797433"
roanta,2016-02-08 18:32:57,https://api.github.com/repos/twitter/finagle/git/commits/fb093dbb4c784c14f7595e642bf647d5ddbe90ec,fb093dbb4c784c14f7595e642bf647d5ddbe90ec,"Revert ""finagle-mux: Interrupt server writes on Tdiscarded""

RB_ID=797556"
kevinoliver,2016-02-04 19:05:31,https://api.github.com/repos/twitter/finagle/git/commits/ec53d0844d47b9dbb0149ffbdc50468ec4407e82,ec53d0844d47b9dbb0149ffbdc50468ec4407e82,"finagle-core: Skip TimeoutFilter when possible

Motivation

Clients add a `c.t.f.service.TimeoutFilter` to their stack of filters
even when the supplied duration does not make sense. This is a waste
of resources and can be easily avoided, much as was being done for
servers.

Solution

Avoid adding the filter when the duration is not finite or if is not
positive.

While working on this, I also fixed up the server's name that is
passed into `SourceTrackingMonitor` as well as touched up the output
from said monitor.

RB_ID=795936"
cacoco,2016-02-04 18:58:41,https://api.github.com/repos/twitter/finagle/git/commits/7a5cdab490b205d3aeccf7dcf0821baf99c2c4f8,7a5cdab490b205d3aeccf7dcf0821baf99c2c4f8,"finagle - Update scrooge-sbt-plugin version

RB_ID=797020"
kevinoliver,2016-02-04 18:50:03,https://api.github.com/repos/twitter/finagle/git/commits/2fd3d58ba9a035ddb59300068d8170137b820b91,2fd3d58ba9a035ddb59300068d8170137b820b91,"finagle-core: Suppress c.t.u.TimeoutExceptions in DefaultMonitor

Motivation

The `c.t.u.TimeoutException` from `c.t.f.service.TimeoutFilter`
sometimes makes its way to the `DefaultMonitor` and then gets logged
via `RootMonitor`. This is basically noise to our users as there is
nothing actionable they can do beyond suppressing these themselves by
configuring their own `Monitor`.

Solution

Change `DefaultMonitor` to log them at `Level.TRACE`.

Result

Less noisy logs for all users.

RB_ID=796202"
dschobel,2016-02-04 17:54:29,https://api.github.com/repos/twitter/finagle/git/commits/21a102f2f90c731f67e58fd0fbf06d0ef49eedd1,21a102f2f90c731f67e58fd0fbf06d0ef49eedd1,"add dschobel to finagle-core, finagle-mux, finagle-thriftmux owners

RB_ID=796809"
cacoco,2016-02-04 00:39:55,https://api.github.com/repos/twitter/finagle/git/commits/21d0ee8b5070b735eda5c84d7aa6fbf1ba7b1635,21d0ee8b5070b735eda5c84d7aa6fbf1ba7b1635,"release: Prepare libraries for OSS release

RB_ID=796660"
ryanoneill,2016-02-03 22:24:00,https://api.github.com/repos/twitter/finagle/git/commits/199ee1a134b5f65179e59402023bcdb4e9937be6,199ee1a134b5f65179e59402023bcdb4e9937be6,"util, finagle, scrooge: Add ryano to More Owners Files

RB_ID=796566"
Saisi,2016-02-03 21:39:45,https://api.github.com/repos/twitter/finagle/git/commits/29f951a0026d5955cda43b3f590121cb1d5dddb7,29f951a0026d5955cda43b3f590121cb1d5dddb7,"finagle-*: fix typos

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=796502"
daviddenton,2016-02-03 18:47:36,https://api.github.com/repos/twitter/finagle/git/commits/4032597344b489b72a732a6e06c76aa064f01913,4032597344b489b72a732a6e06c76aa064f01913,"finagle-site: add link to fintrospect

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=796498"
taylorleese,2016-02-03 06:36:38,https://api.github.com/repos/twitter/finagle/git/commits/45fac2a0e001a967ad39870f886c8719f660a9b3,45fac2a0e001a967ad39870f886c8719f660a9b3,"Fix scrooge plugin in sbt build

RB_ID=780746"
dschobel,2016-02-02 22:32:25,https://api.github.com/repos/twitter/finagle/git/commits/b2734f672081500b2510074f38e5e015963a8d6c,b2734f672081500b2510074f38e5e015963a8d6c,"finagle-core: limit pending requests per client dispatcher

Problem

We want to bound the number of pending requests on a single connection
to stop clients from overwhelming their counter-parties.

Solution

Introduce PendingRequestFilter module and ClientAdmissionController param.

RB_ID=795491"
cacoco,2016-02-02 21:18:24,https://api.github.com/repos/twitter/finagle/git/commits/dab8002c73a1d728e011a13073c98d43f65dc0be,dab8002c73a1d728e011a13073c98d43f65dc0be,"Prepare for open-source release of CSL libraries

RB_ID=796003"
cacoco,2016-02-02 01:58:17,https://api.github.com/repos/twitter/finagle/git/commits/21397f47cf5517dca1b57f6bb2d80965c6af8595,21397f47cf5517dca1b57f6bb2d80965c6af8595,"finagle-core: Expose a server's actual bound port in its ServerRegistry entry

Problem

We currently register a server being served in the ServerRegistry with the
addr requested and not the actual bound addr. This makes the registry somewhat
less than useful when using ephemeral ports as we end up reporting "":0"" as
opposed to the bound address. The registry is then able to accurately report
a running server's bound port.

Resolution

Update ServerBuilder#serve to register the server with the
underlying.boundAddress which is the actual bound port of the server.

Result

Better information reported in the ServerRegistry that can be used to query
for a running server's port.

RB_ID=795441"
taylorleese,2016-02-02 00:24:02,https://api.github.com/repos/twitter/finagle/git/commits/92dc6ece7328a6720a782a32416c5c9e97cc14a4,92dc6ece7328a6720a782a32416c5c9e97cc14a4,"Disable openjdk7 in Travis CI builds

RB_ID=786579"
jcrossley,2016-01-29 22:17:31,https://api.github.com/repos/twitter/finagle/git/commits/8850c3fde05517a29888f57311e7e1a76921f506,8850c3fde05517a29888f57311e7e1a76921f506,"twitter-server, finagle/finagle-core: Expose set of resolved endpoints for each client

Problem
There is no visibility into the set of resolved endpoints for each client

Solution
Added a new 'Endpoints' section on client pages, listing the weights, paths, and resolved endpoints for each dtab.

RB_ID=779001"
bmdhacks,2016-01-29 01:42:17,https://api.github.com/repos/twitter/finagle/git/commits/a589a25b2e7f63e57aa5d0d42a7f87bff7dc85f9,a589a25b2e7f63e57aa5d0d42a7f87bff7dc85f9,"you don't need specs

Specs has been deprecated for many years now.  This removes all the
inclusions of it in projects that don't use it.  It also adds it some
places where people use it but don't depend on it.

RB_ID=763547"
vkostyukov,2016-01-28 21:59:43,https://api.github.com/repos/twitter/finagle/git/commits/fd69c226c4b2d3ab318f05663df5c3a7317fd984,fd69c226c4b2d3ab318f05663df5c3a7317fd984,"finagle: Java-friendly API for discoverable stack params

Problem

Discoverable stack params are built with Scala's type system feature called
""F-bounded polymorphism"", which is one the unfriendliest things for Java ->
Scala interop. As a result, Java users are not able to properly use new API.

Solution

A well-known workaround is to override polymoprhic methods to use conreete
types. The solution is quite verbose, but still makes sense given that params
do not change that offten.

Result

Discoverable stack params are usable from Java.

RB_ID=794290"
blackicewei,2016-01-27 23:06:29,https://api.github.com/repos/twitter/finagle/git/commits/d638aa574bd38ea7ff76f941be68fb471261ad1f,d638aa574bd38ea7ff76f941be68fb471261ad1f,"finagle-mux: ping failure detector to close session by default

Problem

After a session is marked busy in mux, it is stuck in the
busy state until the session is closed. This is problematic
when there is an alternative good networking path, but client
never has the chance to reestablish the session on the good
path.

Solution

Close the session by default when ping RTT excceeds 4 seconds,
to allow a new session to be esbalished.

RB_ID=773649"
tonyd3,2016-01-27 23:02:54,https://api.github.com/repos/twitter/finagle/git/commits/5995eb5701359fb1010b9435f2b1b3ff9ee94a24,5995eb5701359fb1010b9435f2b1b3ff9ee94a24,"finagle-core: use strict dependencies + fixup commons-codec versioning
Problem
Having a lot of dependencies makes using these libraries within
different repos a lot harder to do. There has to be a lot of
dependency exclusion to make it workng.

Solution
Start clarifying all dependencies by making them explicit and
removing unused dependencies.

RB_ID=793372"
donghual,2016-01-27 22:32:10,https://api.github.com/repos/twitter/finagle/git/commits/4aef140e233a2e378d120d46e2f0260cb4116975,4aef140e233a2e378d120d46e2f0260cb4116975,"finagle-stats: Let flag statsFilterFile take multiple files

Problem

The flag statsFilterFile takes one filename. An app may need to load filters from multiple files.

Solution

Define flag statsFilterFile as GlobalFlag[Set[File]] to take comma-separated files.

Result

Compatible with current flags and is able to handle multiple files from flag statsFilterFile.

RB_ID=793397"
kevinoliver,2016-01-26 00:28:09,https://api.github.com/repos/twitter/finagle/git/commits/e5dbeeb4b600633207b51b98d2c515c307b215cd,e5dbeeb4b600633207b51b98d2c515c307b215cd,"finagle-thrift(mux): Wire up ResponseClassifier to per-method metrics

Motivation

The Scrooge changes to enable a custom `ResponseClassifier` for
per-method metrics (from RB 791465) needs to be wired up.

Solution

Use the `ResponseClassifier` when possible.

RB_ID=791470"
amartinsn,2016-01-25 23:52:25,https://api.github.com/repos/twitter/finagle/git/commits/5dbcbd1b614de1b57c589404fef4e5d14cbfa4a8,5dbcbd1b614de1b57c589404fef4e5d14cbfa4a8,"finagle: Adding Link to Configuring Fault Tolerant Finagle Clients

Signed-off-by: Ryan O'Neill <ryano@twitter.com>

RB_ID=793064"
roanta,2016-01-25 22:36:35,https://api.github.com/repos/twitter/finagle/git/commits/17f1ab3881c2d44813bf1445dee4379b23909eed,17f1ab3881c2d44813bf1445dee4379b23909eed,"finagle-mux: Interrupt server writes on Tdiscarded

Problem

When writing a response in mux, we lose track of the writer
promise (i.e. write and forget). This is unfortunate because
we want to attempt to interrupt the write if we receive a
cancellation from the client. For example, this becomes
increasingly important with large responses that are more likely
to timeout.

Solution

Compose writes as part of our pending state on the mux server.

RB_ID=792186"
kevinoliver,2016-01-25 20:48:32,https://api.github.com/repos/twitter/finagle/git/commits/a8b1e89e4a268c69a380fc4175bc44309c9802d0,a8b1e89e4a268c69a380fc4175bc44309c9802d0,"finagle-core: Clear Contexts for StdStackClient.newDispatcher

Motivation

The change in RB_ID 785435 only touched Mux's dispatcher, but the same
issue could exist on other stack clients, such as
`c.t.f.dispatch.PipeliningDispatcher`.

Solution

Move the `Contexts.letClear` call up to where `newDispatcher` is
called in `StdStackClient.endpointer`.

RB_ID=792054"
jcrossley,2016-01-25 17:01:57,https://api.github.com/repos/twitter/finagle/git/commits/e3e349cdee2487dc317061ff1d3ebd0906443f4b,e3e349cdee2487dc317061ff1d3ebd0906443f4b,"finagle/finagle-core: Logic improvements in DeadlineFilter

Problem
Requests past their deadline should be discarded.

Solution
DeadlineFilter records stats when requests past their deadline.

RB_ID=792018"
kevinoliver,2016-01-22 22:32:46,https://api.github.com/repos/twitter/finagle/git/commits/06ab71a0963d690a867abd7ca52c0c8693fa754a,06ab71a0963d690a867abd7ca52c0c8693fa754a,"finagle: Add links to our Code of Conduct

Motivation

Finagle has a code of conduct via Twitter OSS but it is not obvious
from looking at our README or project page.

Solution

Add links to it.

RB_ID=792258"
kevinoliver,2016-01-22 18:04:42,https://api.github.com/repos/twitter/finagle/git/commits/9873aa3d2cb674f12b7480e8203ff26ccf3cf45d,9873aa3d2cb674f12b7480e8203ff26ccf3cf45d,"finagle-(thrift)mux: Disable failure detection for end-to-end tests

Motivation

There is some amount of flakiness in the Mux/ThriftMux end-to-end
tests due to the failure detector. We want these tests running and
passing 100% of the time.

Solution

Disable the failure detector for the tests.

RB_ID=791889"
roanta,2016-01-22 17:29:56,https://api.github.com/repos/twitter/finagle/git/commits/6b244e0e8d91d8b60d69fc5db2dae2e28a488c88,6b244e0e8d91d8b60d69fc5db2dae2e28a488c88,"finagle-test: remove package

Problem

The package was only used by one test in finagle-thrift.

Solution

Remove it and copy the code inside the test.

RB_ID=789553"
cacoco,2016-01-21 21:11:16,https://api.github.com/repos/twitter/finagle/git/commits/90152732da45afe31b89aaf8c45f50deacb73ae9,90152732da45afe31b89aaf8c45f50deacb73ae9,"finagle-core - Fix issue in ServerBuilder around protocol library

Problem

When using the ServerBuilder there is a bug where the protocol
library is not correctly picked up from the Stack Params. The
means that the server is incorrectly registered in the server
registry availble via the admin interface.

Resolution

Fix the anonymous function that converts from Stack params to
a Server to correctly use the fully configured params when
determining if the protocol library param should be added to
the list of server params.

Result

The protocol library is correctly configured for services
using the ServerBuilder.

RB_ID=791538"
bdd,2016-01-19 13:15:04,https://api.github.com/repos/twitter/finagle/git/commits/9f1317e7d362d0dc40ad3367abed947cd4d95ed4,9f1317e7d362d0dc40ad3367abed947cd4d95ed4,"Revert ""finagle-mux: fragment payloads for data messages.""

Probable IM-2118 (SEV0) root cause:

RB_ID=790358
TBR=true
NO-QUEUE=true"
roanta,2016-01-19 06:51:39,https://api.github.com/repos/twitter/finagle/git/commits/0f25777eeca5ca0ac598da74c895a91997769ad5,0f25777eeca5ca0ac598da74c895a91997769ad5,"finagle-mux: fragment payloads for data messages.

Problem

Mux shares a session with multiple tag streams but offers no
mechanism to ensure that an individual stream is not dominating a
session. This is particularly problematic in the presence of
large payloads which can cause head of line blocking for an entire
session. What's more, because we share an I/O thread for reads
and writes per session, large payloads can cause writes to
dissproportionally occupy a threads time which can add latency to
important control messages (e.g. pings and cancellation). Ideally,
we would share a session uniformly across streams to increase
goodput.

Solution

In order for a tag stream to yield, we need to defer flushing its writes
to the OS buffer. This implies that we add some some latency to
writes. In netty3, a call to write will immediately flush the bytes
to the OS buffer if there is space (which is the common case).  For
example, the following will sit in a tight loop and flush all the
`fragments` to the OS buffer:

def write(fragments: Iterator[ChannelBuffer]): Future[Unit] =
 if (!fragments.hasNext) Future.Done
 else trans.write(fragments.next()).before(write(fragments))

In other words, `trans.write` is synchronous in the common case.
To fix this, we need to queue and flush writes periodically (note,
netty4 introduces distinct operations for writing (enqueueing) and
flushing). The current implementation flushes writes on read and
uses a scheduled timer to ensure that we flush regularly if throughput
is low. As mentioned earlier, this does entail a latency penalty.
On our test cluster, I see a ~60% increase in latency for large
payloads (more in results section). Because we are now buffering
payloads in mux, we get nice cancellation semantics. This does
require that we introduce a new mux message type (Rdispatch) to
assure the sender of a Tdispatch they can safely clear their buffers.

Any payload larger than 64KiB is fragmented into 64KiB sized chunks.
The window size is fixed in the current implementation and future work may
include a flow control algorithm which dynamically sizes it.

Results

The resuls are extracted from a simple client/server setup where
the server responds with 500kb payloads for each request (i.e. all
of our responses are fragmented). The request rate is such that we
are not saturating our NIC allocation (< 37.5 MB/s).

Ping p99: With fragmentation, we see less spiky ping latencies and
up to a 50% decrease in peaks.

CPU: With fragmentation, we see ~20-30% less system CPU usage on
both clients and servers (likely due to less syscalls since we batch
writes).

Request p99: Request latency does take a big hit and increases by
~80%.

Allocations/request: no statistical difference between the two.

(links to graphs attached below.)

RB_ID=774742"
vkostyukov,2016-01-16 08:15:26,https://api.github.com/repos/twitter/finagle/git/commits/7d0b3399eb7c3088bf77c4c1060be3e95d086ee5,7d0b3399eb7c3088bf77c4c1060be3e95d086ee5,"finagle: Enable with-prefixed API for all protocols

Problem

There is a new, user-friendly API with `with` methods which only available
for HTTP, but not the rest of Finagle protocols.

Solution

Enable the `with` API for the all the Finagle protocols.

The challenge here is to be able to exclude/include some group of params
depending on the protocol. It turns out there are two group of params in
Finagle, which are not included into its every protocol: session pooling
(default pool vs. singleton pool) and load balancing (dafault balancer vs.
concurrent balancer).

The following table illustates what params should be enabled/disabled for
a particular protocol:

+--------------------------------------+
| Protocol  | Pool        | Balancer   |
+--------------------------------------+
| Http      | default     | default    |
| Mux       | singleton   | default    |
| MySql     | default     | default    |
| Thrift    | default     | default    |
| ThriftMux | singleton   | default    |
| Redis     | singleton   | default    |
| Memcached | singleton   | concurrent |
+--------------------------------------+

To solve this problem in a generic way this RB introduces `WithX` traits
that contains a single `withX` method pointing to a proper configuration
(e.g. `ConcurrentLoadBalancingParams` vs. `DefaultLoadBalancingParams`).

In addition to ability to mix-in a required configuration to every client,
the `WithX` traits are also quite useful to inheric Scaladoc and not copy
same test all over the places.

RB_ID=789092"
dschobel,2016-01-16 02:34:26,https://api.github.com/repos/twitter/finagle/git/commits/a74abdcf083ab82d30b7cc277b88b721439048e4,a74abdcf083ab82d30b7cc277b88b721439048e4,"finagle-netty4: transporter

Introduce a transporter for netty4.

The transporter is responsible for configuring client socket options
and bridging the netty connection future to the finagle transport
promise.

The channel initializer is responsible for configuring handlers in the
netty pipeline.

RB_ID=768039"
kevinoliver,2016-01-15 18:18:34,https://api.github.com/repos/twitter/finagle/git/commits/60ab48e30dc218da7d33863e2f55f35667c13630,60ab48e30dc218da7d33863e2f55f35667c13630,"finagle docs: Add response classification to user guide

Response classification is an important tool for client configuration
and should be covered in the user guide.

RB_ID=788240"
vkostyukov,2016-01-14 23:50:21,https://api.github.com/repos/twitter/finagle/git/commits/e0c0bdbbb9f2de02e0b181a565cb71e1b2642074,e0c0bdbbb9f2de02e0b181a565cb71e1b2642074,"finagle: Update docs to use new Stack API

Problem / Solution

There is a new human and IDE friendly stack API so let's use it in docs.

RB_ID=787601"
kevinoliver,2016-01-14 19:26:37,https://api.github.com/repos/twitter/finagle/git/commits/246986aa055e865f521eba0e09d7c0b42880e0ac,246986aa055e865f521eba0e09d7c0b42880e0ac,"finagle-thrift: Add response classification

Motivation

finagle-thrift should have the ability to do response classification
on the deserialized response objects just as finagle-thriftmux does.

Solution

Introduce `ThriftResponseClassifier` which is similar to what is in
finagle-thriftmux that enables classification for developers.

While in here, added `ResponseClassifier.named` to give classifiers
human readable `toString` output.

RB_ID=780728"
vkostyukov,2016-01-14 03:44:25,https://api.github.com/repos/twitter/finagle/git/commits/042078bdf122f2e0d5b1d5904f067cd201fbc0a0,042078bdf122f2e0d5b1d5904f067cd201fbc0a0,"finagle: Introduce discoverable stack params

Problem

Stack API params used to configure Finagle clients and servers are not
discoverable by IDEs so it's hard to configure Finagle unless you
absolutely know what you're doing.

Example: How to configure concurrency limit of the Finagle server?

  server.configured(RequestSemaphoreFilter.Param(Some(new AsyncSemaphore(
    initialPermits = 10, maxWaiters = 10
  ))))

The code above says _nothing_ about the feature it's enabling, but about its
implementation details that a user should be aware of.

Solution

Intruduce discoverable Stack API params (a modern replacement for
Client-/Server-Builders) available on every Finagle client or server [1]
via `with*` methods (i.e., `Http.client.withLabel(""foo"")`).

Result

== before ==

  import com.twitter.concurrent.AsyncSemaphore
  import com.twitter.finagle.Http
  import com.twitter.finagle.param
  import com.twitter.finagle.Transport
  import com.twitter.finagle.filter.RequestSemaphoreFilter
  import com.twitter.util.Duration

  val server = Http.server
    .configured(RequestSemaphoreFilter.Param(Some(new AsyncSemaphore(
      initialPermits = 10, maxWaiters = 10
     ))))
    .configured(param.Label(""foo""))
    .configured(Transport.Verbose(enabled = true))
    .configured(Transport.BufSizes(Some(1024), Some(2048)))
    .serve("":8080"", service)

== after ==

  import com.twitter.finagle.Http
  import com.twitter.conversions.storage._

  val server = Http.server
    .withAdmissionControl.concurrencyLimit(maxConcurrentRequests = 10, maxWaiters = 10)
    .withLabel(""foo"")
    .withTransport.verbose
    .withTrasnport.sendBufferSize(1.kilobyte)
    .withTransport.receiveBufferSize(2.kilobytes)
    .serve("":8080"", service)

RB_ID=781833
TBR=true"
kevinoliver,2016-01-14 01:22:57,https://api.github.com/repos/twitter/finagle/git/commits/3192738abbd7f66514b59ad6fdfbe5ccce54d751,3192738abbd7f66514b59ad6fdfbe5ccce54d751,"finagle-mux: Clear Contexts while creating a Dispatcher

Motivation

Finagle can hold onto request scoped Contexts for too long when
session scoped objects are created that are not tied to the request
lifecycle, but have request-scoped objects attached via a
c.t.f.context.Context.

This was happening in mux.ClientDispatcher and
mux.ThresholdFailureDetector which lead to large deserialized Thrift
responses being held in memory due to RB 772931 which stored
deserialized Thrift responses in a Context.local.

Solution

Clear Contexts.local and Contexts.broadcast before creating a new
dispatcher.

Result

Context lifetime becomes more correct and as a nice side-effect,
shorter.

RB_ID=785435"
dschobel,2016-01-14 00:45:15,https://api.github.com/repos/twitter/finagle/git/commits/92bfc23b2360f40288c479e082d08b39b037514f,92bfc23b2360f40288c479e082d08b39b037514f,"finagle-netty4: framing handlers

Problem

Netty4 channels need handlers to make use of
com.twiter.finagle.codec.Frame[En|De]Coders.

Solution

Introduce framing handlers to install FrameEncoder and FrameDecoder
instances into the netty message pipeline.

RB_ID=768026"
dschobel,2016-01-12 23:19:29,https://api.github.com/repos/twitter/finagle/git/commits/1491bc0691b853f2042f8a3d8fa35062dcf5ad85,1491bc0691b853f2042f8a3d8fa35062dcf5ad85,"finagle-netty4: twitter buf / netty bytebuf wrappers

Problem

we need byte buffer wrappers for use at the boundary between netty
and finagle.

Solution

introduce BufAsByteBuf and ByteBufAsBuf.

RB_ID=785260"
mosesn,2016-01-11 22:14:19,https://api.github.com/repos/twitter/finagle/git/commits/69fd925ea838ed047249556249e26ea8f993df13,69fd925ea838ed047249556249e26ea8f993df13,"finagle-mux: Add mnakamura to OWNERS

RB_ID=785192"
kevinoliver,2016-01-11 05:16:25,https://api.github.com/repos/twitter/finagle/git/commits/50d373af1550ffd34422bda6ca6f2dbbc686d88c,50d373af1550ffd34422bda6ca6f2dbbc686d88c,"util, finagle: Port allocation benchmarks to JMH

Motivation

There are a handful of allocation benchmarks that we had written on an
internal test tool before JMH supported allocation profiling. These
are more valuable as JMH tests.

Solution

Port them to util-benchmark and finagle-benchmark

RB_ID=784722"
blackicewei,2016-01-10 19:13:18,https://api.github.com/repos/twitter/finagle/git/commits/0f0e228cf27e47427bb50ebde64766358e7184f4,0f0e228cf27e47427bb50ebde64766358e7184f4,"finagle-core: introduce Admission controller in the server stack

Problem

The Finagle server does not have a way to dynamically
reject requests when it's overloaded. It can go into
failure spiral without a way to recover until it's
restarted.

Solution

Introduce the `c.t.f.filter.ServerAdmissionControl` module
in the server Stack, which is enabled through param
`c.t.f.param.EnableServerAdmissionControl`. There are can be
multiple implementations of admission control filters
which are registered through `ServerAdmissionControl.register`
method. It's up to each AC filter to define their own
way of detecting server over capacity and configuration.

Server admission control is on by default in the server
Stack except for TwitterServer admin server.

Result

Provide users a way to define their own admission control
logic, and hook it up in the server Stack.

RB_ID=776385"
vkostyukov,2016-01-08 22:16:47,https://api.github.com/repos/twitter/finagle/git/commits/25aab598284d7bcbb78ae45fd2144fa861d3bc84,25aab598284d7bcbb78ae45fd2144fa861d3bc84,"finagle: Remove unused/deprecated exceptions

RB_ID=774658
TBR=true"
kevinoliver,2016-01-08 19:18:16,https://api.github.com/repos/twitter/finagle/git/commits/47bd460a10158437430f6f8be6714135615fef5d,47bd460a10158437430f6f8be6714135615fef5d,"finagle-mux: Fix synchronization in TagSet

Motivation

In the `iterator` on the `TagSet.apply` TagSet, the synchronization on
`TagSet.this` was using the outer `TagSet` companion object instead of
the anonymous class. This can be observed by examining the bytecode
output.

Solution

Use an explicit `self` reference for synchronization.

Result

Correct synchronization.

Snippet of `next()` bytecode before:
```
  6: getstatic     #450                // Field com/twitter/finagle/mux/util/TagSet$.MODULE$:Lcom/twitter/finagle/mux/util/TagSet$;
  9: dup
 10: astore_2
 11: monitorenter
```

Snippet of `next()` bytecode after:
```
  7: getfield      #446                // Field $outer:Lcom/twitter/finagle/mux/util/TagSet$$anon$1;
 10: dup
 11: astore_2
 12: monitorenter
```

RB_ID=785034"
atollena,2016-01-08 18:42:33,https://api.github.com/repos/twitter/finagle/git/commits/f1f40b69c080dbd16c18c446be07c25a4dee4489,f1f40b69c080dbd16c18c446be07c25a4dee4489,"[finagle-serversets] Remove newZk flag

Problem
--

zk2 has been enabled by default for more than a year. The old zk! scheme should not be used.

Solution
--

Remove the option to use the zk! scheme for wily paths and the serverset! scheme. Unfortunately
we need to keep the scheme around for the many places where zk! is used directly.

RB_ID=780169"
blackicewei,2016-01-08 05:41:07,https://api.github.com/repos/twitter/finagle/git/commits/91f874b4f7110ad246dc1517d629a841ed20ef42,91f874b4f7110ad246dc1517d629a841ed20ef42,"finagle-core: remove onClose promise in Netty3 pipeline handlers

Problem

The `onClose` promise callbacks save per-request contexts
in locals until the connection is closed. This causes memory
leaks.

Solution

Remove `onClose` in the pipeline handlers. Callbacks are
implemented through Netty event handlers.

RB_ID=783682"
vkostyukov,2016-01-07 00:28:31,https://api.github.com/repos/twitter/finagle/git/commits/12a8f1c5532fa306b060b790785e70f61c91df92,12a8f1c5532fa306b060b790785e70f61c91df92,"finagle: Add missing imports in docs

Problem

Finagle docs are outdated and not consistent.
Solution

1. Add imports to _all_ the examples in docs
2. Be consistent in temrs of styles for code literals (monospace)
3. Add a couple of new Finagle's companion projects

RB_ID=780793"
taylorleese,2016-01-06 00:36:48,https://api.github.com/repos/twitter/finagle/git/commits/9334bdde8b9b9ce4f7e0d51376b18b417f451acb,9334bdde8b9b9ce4f7e0d51376b18b417f451acb,"Bump Scala from 2.10.5 to 2.10.6 for Travis CI

Problem:

The Travis CI builds use Scala 2.10.5, but our build.sbt and Build.scala files use 2.10.6. We should bump the Travis builds to use 2.10.6.

Solution:

Bump the .travis.yml files to 2.10.6.

Result:

Travis CI uses 2.10.6 rather than 2.10.5.

RB_ID=781291"
stevegury,2016-01-05 19:48:45,https://api.github.com/repos/twitter/finagle/git/commits/9a5d4af4ed5d36f314962797636d8bfc9381b95a,9a5d4af4ed5d36f314962797636d8bfc9381b95a,"finagle-core: Increase the Penalty in p2cEwma to a higher value

Problem

The PeakEWMA load balancer applies a penalty to the load of a server when it
doesn't have any historical latency. That penalty is initialized at
Double.MaxValue/2, and we add the number of outstanding messages to compute
the load of a server. The idea behind that, is that the load balancer behaves
like LeastLoaded at start-up before having any historical data.

The problem is that the Penalty is a very big double, and adding a small
integer will not change its value because of the lack of double precision in
that range.

Solution

Choosing a bigger Penalty (e.g. Long.MaxValue >> 16 ~= 140737 seconds or 39 hours)
fixes the problem and also works well with potentially extremely latent systems.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=780176
NO-QUEUE=true"
roanta,2016-01-05 19:41:30,https://api.github.com/repos/twitter/finagle/git/commits/2d22f7d0632ef969121691032ce9f2602dac6fa0,2d22f7d0632ef969121691032ce9f2602dac6fa0,"csl: disable fatal warnings in java targets

RB_ID=783517
TBR=true"
codeferret,2016-01-05 19:22:22,https://api.github.com/repos/twitter/finagle/git/commits/8abab316930067f29c32eb2f02f8d4bcdbe715e3,8abab316930067f29c32eb2f02f8d4bcdbe715e3,"finagle-serversets: Don't use per-member stats

Problem
We increment a read_fail stat per zk member, this creates far too many stats
for large serversets.

Solution
Make read_fail per cluster.

Result
There are less stats.

RB_ID=783518"
olix0r,2016-01-05 01:23:03,https://api.github.com/repos/twitter/finagle/git/commits/62297a9c08212976784bf34cd586c4893b53ce42,62297a9c08212976784bf34cd586c4893b53ce42,"finagle-thrift: Control Thrift transport framing with a Stack.Param

Problem:

It is cumbersome to control whether Thrift clients and servers are framed
because there is no Stack.Param that influences this behavior.

Solution:

Introduce a Stack.Param, Thrift.param.Framed, and remove the Client/Server
boolean attribute.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=780738"
roanta,2016-01-04 19:39:06,https://api.github.com/repos/twitter/finagle/git/commits/dd56dc1108246b4bdba4e8620f14215f37d44a09,dd56dc1108246b4bdba4e8620f14215f37d44a09,"finagle-mysql: Fix tracing test

Problem

The mysql tracing test didn't pass in the correct credentials
when testing tracing which caused the test to fail.

Solution

Wire in the env specific integration test credentials.

RB_ID=782938"
blackicewei,2015-12-31 02:40:02,https://api.github.com/repos/twitter/finagle/git/commits/a568b2cfd3b9ec8005c3352e6513bdfaa67623e4,a568b2cfd3b9ec8005c3352e6513bdfaa67623e4,"finagle: fix a bug of null check for DeserializeCtxOnly

RB_ID=781805"
vkostyukov,2015-12-24 21:20:49,https://api.github.com/repos/twitter/finagle/git/commits/92b19e00db570d81cebbe686ecd80c6b4eb0d17a,92b19e00db570d81cebbe686ecd80c6b4eb0d17a,"finagle: Improve docs for servers

Problem / Solution

Finagle docs for servers (i.e., `Servers.rst`) are outdate and not consistent.

RB_ID=780427"
kevinoliver,2015-12-24 01:03:53,https://api.github.com/repos/twitter/finagle/git/commits/ad42b4e2429c8a690a6f907164b7c40e8b250929,ad42b4e2429c8a690a6f907164b7c40e8b250929,"finagle-core: Stat on per request requeue distribution

Motivation

Without this stat it can be hard to tell how many times individual
requests get requeued.

Result

With this new stat, requeues_per_request, it will give better insight
into production issues.

RB_ID=780914
TBR=true"
siggy,2015-12-23 18:56:30,https://api.github.com/repos/twitter/finagle/git/commits/80f4769834929f09249cf10392d9e0a7f0cbb018,80f4769834929f09249cf10392d9e0a7f0cbb018,"finagle: modified travisci script to default to scala 2.11.7

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=780691"
codeferret,2015-12-23 00:43:43,https://api.github.com/repos/twitter/finagle/git/commits/8746b14efa3dbbdf0d1368c4ce38889c27970315,8746b14efa3dbbdf0d1368c4ce38889c27970315,"[finagle-serversets] Zk2Resolver should never give up when attempting to set watches.

Problem:

Zk2Resolver is fatally unhealthy if it cannot set watches. Current logic stops setting watches in perfectly valid failure scenarios.

Solution:

Never stop trying to set watches - with the caveat that all zk operations should backoff on failure and be self-throttled/limited to preserve Zk health. The *only* valid scenario to not set watches is when a session moves to Expired status (since the session watcher will start a new session at that point) or Disconnected (since the session itself will attempt to reconnect).

RB_ID=780566"
taylorleese,2015-12-22 21:42:23,https://api.github.com/repos/twitter/finagle/git/commits/763084bbeb258e005fb54e491d457eb4eac1b904,763084bbeb258e005fb54e491d457eb4eac1b904,"finagle: cleanup build warnings

Problem:

There were multiple problems related to the sbt build:
a) the publishM2 task is provided by the latest version of sbt so it's unnecessary
b) build warnings for the Build.scala file weren't enabled
c) deprecated sbt methods were in use

There were additional build warnings unrelated to sbt that needed fixing as well.

Solution:

1) fix all the sbt related warnings
2) fix as many of the build warnings as possible

Result:

1) sbt warnings are resolved
2) 17/35 src targets with fatal warnings enabled
3) 23/36 test targets with fatal warnings enabled

RB_ID=780248"
kevinoliver,2015-12-22 19:56:32,https://api.github.com/repos/twitter/finagle/git/commits/bb91e967618f8884af98e655eb989dd20cd79e61,bb91e967618f8884af98e655eb989dd20cd79e61,"finagle: Java APIs for response classification

Motivation

Response classification should be usable by Java users.

Solution

Provide `ResponseClasses` and Java compilation tests.

RB_ID=780422"
kevinoliver,2015-12-22 17:53:56,https://api.github.com/repos/twitter/finagle/git/commits/20e2452c06808e6e84a143385726ede7a17210e4,20e2452c06808e6e84a143385726ede7a17210e4,"finagle-thriftmux: Deserialize even when a ResponseClassifier isn't provided

Motivation

While the changes in RB 779754 fixed the underlying issue, it made
things inconsistent in terms of when deserialization would happen. If
a `ResponseClassifier` was provided, it happened eagerly, if it was not
then it happened late.

Solution

When a `ResponseClassifier` is not provided use one that deserializes
using `DeserializationCtx` but ignores the result. This retains the behavior
while making when deserialization happens consistent.

RB_ID=779843"
jcrossley,2015-12-22 00:58:05,https://api.github.com/repos/twitter/finagle/git/commits/24c23712310d190a2a94ec8388f035e35f530415,24c23712310d190a2a94ec8388f035e35f530415,"finagle/finagle-core: Fix illegal state transitions in FailureAccrualFactory

Problem

FailureAccrualFactory can transition between states in an unexpected way due to race
conditions.

Solution

Prevent illegal state transitions. FailureAccrualFactory can transition between
states in an unexpected way due to race conditions. Now, it transitions to
Alive only when in the ProbeClosed state, so transitions Dead => Alive and
ProbeOpen => Alive are no longer possible. It also transitions to Dead before
starting the timer, so transitions Alive => ProbeOpen are no longer possible.

RB_ID=779641"
vkostyukov,2015-12-22 00:25:23,https://api.github.com/repos/twitter/finagle/git/commits/b9502beeba5822854290f31aafc782020360a6d5,b9502beeba5822854290f31aafc782020360a6d5,"finagle: Improve docs for clients
Problem / Solution

Finagle docs for clients (`Clients.rst`) are outdated and not consistent.

RB_ID=779822"
blackicewei,2015-12-21 20:43:34,https://api.github.com/repos/twitter/finagle/git/commits/310502b6f01b4a1d2a38e1d8bb54af66637e2d89,310502b6f01b4a1d2a38e1d8bb54af66637e2d89,"finagle: provide stats in HttpNackFilter and statsReceiver in codec.prepareConnFactory

Problem

There is no stats in `c.t.f.http.filter.HttpNackFilter`.
It's hard to see the number of retryable 503 response returned
from the Http server.

Solution

Add a counter in `HttpNackFilter`.

RB_ID=779085"
mosesn,2015-12-21 20:26:22,https://api.github.com/repos/twitter/finagle/git/commits/966b92a983481a8b44f3718bf4ff86d53ca45a07,966b92a983481a8b44f3718bf4ff86d53ca45a07,"finagle: Wire up ResponseClassifier in FailureAccrual

Problem

FailureAccrualFactory wasn't completely wired properly.

Solution

Wire it up.

RB_ID=780373"
tonyd3,2015-12-21 18:22:30,https://api.github.com/repos/twitter/finagle/git/commits/27186aac849e2e6312e2510783c0b6a1f43067e3,27186aac849e2e6312e2510783c0b6a1f43067e3,"finagle-mysql: Add Parameters object for easier Java access.

Problem
The Parameter trait hides its companion object. To access the
companion object you'd need to use Parameter$.Module$.

Solution
Add an object that can be accessed easily in Java.

RB_ID=780262"
kevinoliver,2015-12-18 23:17:08,https://api.github.com/repos/twitter/finagle/git/commits/4acff045686f90388d84888ffd315db04d8b68e9,4acff045686f90388d84888ffd315db04d8b68e9,"finagle-docs: Fixes for metrics section of the user guide

A wide ranging cleanup, mostly in terms of formatting, links, and
consistency.

RB_ID=779711"
atollena,2015-12-18 02:08:22,https://api.github.com/repos/twitter/finagle/git/commits/b3fc368ccd16f96381f9f032d2edbef8bc10ccec,b3fc368ccd16f96381f9f032d2edbef8bc10ccec,"[finagle-core] Disable logging of ChannelExceptions

Problem
--

`ChannelException`s are mostly benign and we have good stats for them, but they show up as SEVERE in
the log when handled by the root monitor.

Solution
--

Mix HasLogLevel in and set it to debug for all ChannelException.

RB_ID=779857"
kevinoliver,2015-12-17 22:28:44,https://api.github.com/repos/twitter/finagle/git/commits/8aa86867299dfccb5f16f022b1bc7b4191243a65,8aa86867299dfccb5f16f022b1bc7b4191243a65,"finagle-thriftmux: Fix how ResponseClassifiers are hooked up

Motivation

A minor change during code review of how the ThriftMux
ResponseClassifier gets wired up lead to it being used incorrectly. I
failed to rerun the tests with the necessary scrooge changes wired up
which lead to this going unnoticed.

Solution

Only wire up the ResponseClassifier when specified. Leave comments
explaining why.

RB_ID=779754"
kevinoliver,2015-12-17 22:02:43,https://api.github.com/repos/twitter/finagle/git/commits/db1899f862b6b905863040ce38bfec77bb62db2f,db1899f862b6b905863040ce38bfec77bb62db2f,"finagle-mux: Wireshark dissector for Mux

Motivation

Sometimes a tcpdump is necessary for debugging network protocols. Mux
is unknown to Wireshark and as such it is just appears as an opaque
frame of TCP bytes. Being able to introspect basic functionality would
aid in debugging and understanding of the protocol.

Solution

Add `mux_dissector.lua` to enable decoding of Mux frame giving
you size, message type and tag number for all messages and detailed
decoding of `Tdispatch` messges.

Result

Sample (edited) output from `tshark -O mux` on the included pcap file:

```
Frame 5: 64 bytes on wire (512 bits), 64 bytes captured (512 bits)
Internet Protocol Version 4, Src: 127.0.0.1 (127.0.0.1), Dst: 127.0.0.1 (127.0.0.1)
Transmission Control Protocol <...>
Mux Protocol
    Size: 4
    Message type: Tping (65)
    Tag: 1
    Payload Length: 0

Frame 7: 64 bytes on wire (512 bits), 64 bytes captured (512 bits)
Internet Protocol Version 4, Src: 127.0.0.1 (127.0.0.1), Dst: 127.0.0.1 (127.0.0.1)
Transmission Control Protocol <...>
Mux Protocol
    Size: 4
    Message type: Rping (191)
    Tag: 1
    Payload Length: 0

Frame 295: 279 bytes on wire (2232 bits), 279 bytes captured (2232 bits)
Internet Protocol Version 4, Src: 127.0.0.1 (127.0.0.1), Dst: 127.0.0.1 (127.0.0.1)
Transmission Control Protocol <...>
Mux Protocol
    Size: 219
    Message type: Tdispatch (2)
    Tag: 2
    Contexts: 3
        com.twitter.finagle.thrift.ClientIdContext
            Name: test.service
        com.twitter.finagle.tracing.TraceContext
            Span id: 14852471808386315780
            Parent id: 14852471808386315780
            Trace id: 14852471808386315780
            Flags: 0x0000000000000000
        com.twitter.finagle.Deadline
            Timestamp (micros after epoch): 1450308651197000
            Deadline (micros after epoch): 9223372036854775
    Payload Length: 27

Frame 297: 104 bytes on wire (832 bits), 104 bytes captured (832 bits)
Internet Protocol Version 4, Src: 127.0.0.1 (127.0.0.1), Dst: 127.0.0.1 (127.0.0.1)
Transmission Control Protocol <...>
Mux Protocol
    Size: 44
    Message type: Rdispatch (254)
    Tag: 2
    Payload Length: 40

```

RB_ID=779482"
dschobel,2015-12-15 21:38:02,https://api.github.com/repos/twitter/finagle/git/commits/1daa5208bb1922543aaac081dd0aaccb1b317ddf,1daa5208bb1922543aaac081dd0aaccb1b317ddf,"finagle-integration: introduce package + client session tests for mux, http, mysql + memcache

Problem

Missing test coverage around session status allowed a regression to get merged.

Solution

Add tests.

RB_ID=778565"
kevinoliver,2015-12-15 18:52:33,https://api.github.com/repos/twitter/finagle/git/commits/555185c926bc7ba04f80fead30813a13c401e9e5,555185c926bc7ba04f80fead30813a13c401e9e5,"finagle: Docs for ResponseClassification

`ResponseClassification` is a new user facing feature and needs docs
in order for users to understand it and put it to use.

Along the way I cleaned up a handful of small broken windows in the
docs.

RB_ID=778379"
kevinoliver,2015-12-15 01:47:37,https://api.github.com/repos/twitter/finagle/git/commits/4c5f4fc949b747c6bd275c7f321c00653c2db098,4c5f4fc949b747c6bd275c7f321c00653c2db098,"finagle-thrift,thriftmux: Initial steps towards Thrift ResponseClassifiers

A followup to RB_ID 772906 this is the the beginning of the necessary
wiring for `ResponseClassifiers` for ThriftMux (and later Thrift as
well). This includes the Scrooge changes but it awaits a Scrooge
version bump before it can be fully enabled. This will enable
developers to classify Thrift exceptions or status codes in the
response as failures.

See `c.t.f.thriftmux.service.ThriftMuxResponseClassifier` and
`c.t.f.ThriftMux.withResponseClassifier` to simplify writing and
wiring up classifiers for ThriftMux.

RB_ID=772931"
mosesn,2015-12-14 23:48:54,https://api.github.com/repos/twitter/finagle/git/commits/4f59e8ac6e449fb0c4c23ccc6b520557a8d2a4d1,4f59e8ac6e449fb0c4c23ccc6b520557a8d2a4d1,"finagle-core: Actually run JvmFilterTest

RB_ID=777316"
vkostyukov,2015-12-14 23:36:23,https://api.github.com/repos/twitter/finagle/git/commits/5213a17d202c5ab39dcdf1259d15519ac8c04d18,5213a17d202c5ab39dcdf1259d15519ac8c04d18,"finagle-stats: Introduce CommonsStats formatter

Problem

There is no Commons Stats formatter available for TwitterServer
so it might block users from migrating off of AbstractApplication.

Solution

Introduce Commons Stats `StatsFormatter` so TwitterServer might
export stats in the AbstractApplication-alike format.

RB_ID=775312"
adleong,2015-12-14 19:46:55,https://api.github.com/repos/twitter/finagle/git/commits/ae107bb0f39ed42deabf39397ef29ace1eb8c2e8,ae107bb0f39ed42deabf39397ef29ace1eb8c2e8,"Send dark traffic on the outbound path.

RB_ID=777642"
jcrossley,2015-12-12 00:12:25,https://api.github.com/repos/twitter/finagle/git/commits/24fe827f8f78fdc1b6032217751f6b8ad7d014f8,24fe827f8f78fdc1b6032217751f6b8ad7d014f8,"finagle/finagle-http: propagate contexts over HTTP

Problem
Contexts are not sent over HTTP, which means deadlines are not propagated.

Solution
Deadlines are sent in Finagle-Ctx request headers.

RB_ID=778123
TBR=true"
kevinoliver,2015-12-10 22:50:34,https://api.github.com/repos/twitter/finagle/git/commits/6e7583225e1b88cb7f1d75aa570062ee164c4a46,6e7583225e1b88cb7f1d75aa570062ee164c4a46,"finagle-core: Minor load balancing and retry changes

Motivation

We identified a few small gaps in metrics around load balancing and requeues.

Solution

1. Improve balancer logic for P2C to rebuild more aggressively when it finds a
   down node.

2. Add stats:

""loadbalancer/max_effort_exhausted""

     A counter of the number of times a balancer failed find a node that was
    `Status.Open` within `com.twitter.finagle.loadbalancer.Balancer.maxEffort`
    attempts. When this occurs, a non-open node may be selected for that
    request.

""retries/request_limit""

    A counter of the number of times the limit of retry attempts for a logical
    request has been reached

RB_ID=776235"
amartinsn,2015-12-10 21:13:13,https://api.github.com/repos/twitter/finagle/git/commits/65b232c470f52ad69b14e5531d3bfc56952d3897,65b232c470f52ad69b14e5531d3bfc56952d3897,"finagle-core: implementing RequestMeterFilter based on new AsyncMeter

Problem

We wanted to be able to control access to rate limited resources, by slowing down requests to fit on the request rate accepted by these resources.

Solution

We ended up implementing a filter named RequestMeterFilter using Twitter util's AsyncMeter to achieve that. Feedback on naming are really welcomed.

Result

As a result, I've added this Filter so other users with the same needs can use this solution.

Signed-off-by: Alex Leong <aleong@twitter.com>

RB_ID=777050"
jcrossley,2015-12-10 19:22:31,https://api.github.com/repos/twitter/finagle/git/commits/2fa6d0bf4b3aace06009d61e3fc02f6ee6e82429,2fa6d0bf4b3aace06009d61e3fc02f6ee6e82429,"finagle-core: Introduce a DeadlineFilter for tardy requests

Problem
Requests past their deadline should be discarded

Solution
DeadlineFilter logs requests that should be rejected to a 'rejected' stat.

RB_ID=769460"
drewdeponte,2015-12-09 23:21:57,https://api.github.com/repos/twitter/finagle/git/commits/500548e7636478299f487afd0fe6a57f784f88f0,500548e7636478299f487afd0fe6a57f784f88f0,"Add homepage and source reference to gemspec

Problem

There is no easy way to find the source code for the project from the
rubygems or the installed gem source.

Solution

Add the homepage and source_code meta data references to the gemspec.

Result

Both the homepage and the source_code urls are visible on rubygems.org
when looking at the finagle-thrift gem and accessible from the installed
gem source.

Signed-off-by: Alex Leong <aleong@twitter.com>

RB_ID=777043"
ldematte,2015-12-09 23:12:33,https://api.github.com/repos/twitter/finagle/git/commits/d93ed3b330a00000625d747e2a00b63ee71e938f,d93ed3b330a00000625d747e2a00b63ee71e938f,"Update ADOPTERS.md

Added Südtirol Pass (South Tyrol Transportation System)

Signed-off-by: Alex Leong <aleong@twitter.com>

RB_ID=777020"
robsonpeixoto,2015-12-09 22:59:35,https://api.github.com/repos/twitter/finagle/git/commits/e561d6a5dfb304ed873cf936576f05accb57b6fd,e561d6a5dfb304ed873cf936576f05accb57b6fd,"Avoid netty types

Signed-off-by: Alex Leong <aleong@twitter.com>

RB_ID=776983"
kevinoliver,2015-12-09 21:11:14,https://api.github.com/repos/twitter/finagle/git/commits/7868b5a3b37e0bb7a9acba46c5d5a7178d52fa9c,7868b5a3b37e0bb7a9acba46c5d5a7178d52fa9c,"finagle-http: ResponseClassifiers for HTTP

A followup to RB_ID 772906 this adds
`c.t.f.http.service.HttpResponseClassifier` and
`c.t.f.Http.withResponseClassifier` to simplify writing and wiring up
classifiers for HTTP.

RB_ID=772917
NO-QUEUE=true"
sameerparekh,2015-12-09 20:46:21,https://api.github.com/repos/twitter/finagle/git/commits/77139a04dbb25a11a7a342724bed2740c4bd0a53,77139a04dbb25a11a7a342724bed2740c4bd0a53,"Revert ""finagle/finagle-http: propagate contexts over HTTP""

\- Revert ""finagle/finagle-http: propagate contexts over HTTP""

This caused a dev0, was originally submitted --no-queue due to DPT-5518

RB_ID=776891
TBR=true
NO-QUEUE=true"
kevinoliver,2015-12-09 18:06:20,https://api.github.com/repos/twitter/finagle/git/commits/9d30212187b2f31a35b8d5381c35331610fa3ab8,9d30212187b2f31a35b8d5381c35331610fa3ab8,"finagle-core: Introduce ResponseClassifier

Motivation

Finagle lacks application level knowledge of success and failure
which limits its ability to do failure accrual and present success
rate metrics.

Solution

Introduce `c.t.f.service.ResponseClassifier` which allows developers
to give Finagle the additional application specific knowledge
necessary in order to properly classify them. This is now used by
`StatsFilter` and `FailureAccrualFactory` so that more than just
transport level failures be used for both success metrics and failure
accrual.

Result

Developers can use `ClientBuilder.responseClassifier` or
`configured(param.ResponseClassifier)` to attach a custom classifier.
This will improve the efficacy of failure accrual and the success rate
stats for clients.

RB_ID=772906
NO-QUEUE=true"
jcrossley,2015-12-09 17:25:39,https://api.github.com/repos/twitter/finagle/git/commits/73be0f0361e448173d5b8209dee98cca7dbfd806,73be0f0361e448173d5b8209dee98cca7dbfd806,"finagle/finagle-http: propagate contexts over HTTP

Problem
Contexts are not sent over HTTP, which means deadlines are not propagated.

Solution
Deadlines are sent in Finagle-Ctx request headers.

RB_ID=773800
NO-QUEUE=true"
kevinoliver,2015-12-08 22:41:22,https://api.github.com/repos/twitter/finagle/git/commits/baca2a5a598454b5388608dc428bbaceb26a64e6,baca2a5a598454b5388608dc428bbaceb26a64e6,"finagle-core: Add gauges in dispatchers

Motivation

There isn't visibility into the queues on `GenSerialClientDispatcher`
or the pending requests for `PipeliningDispatcher`. This information
can be valuable for investigations.

Solution

Pass in a `StatsReceiver` and add gauges.

Result

New gauges ""serial/queue_size"" and ""pipelining/pending"" exported for
clients.

RB_ID=774296
NO-QUEUE=true"
tonyd3,2015-12-08 07:58:29,https://api.github.com/repos/twitter/finagle/git/commits/414ea09efe8c3c7656a28ef15f8974c67b1d4d9e,414ea09efe8c3c7656a28ef15f8974c67b1d4d9e,"[finagle-memcached,mysql,redis] Override configure function for Java compatability.

Problem
It's not possible to configure custom params using Java in these clients.

Solution
Similar to what was done for http and thrift, we override the Java friendly
configure function so that the correct types are returned for Java.

RB_ID=775934"
slyphon,2015-12-07 22:34:28,https://api.github.com/repos/twitter/finagle/git/commits/23e99a719b4209a9843fc094a41f0fd4f57050e2,23e99a719b4209a9843fc094a41f0fd4f57050e2,"finagle-memcache Client.cas should differentiate between NotFound and Exists

The ConnectedClient does not differentiate between [Exists and NotFound responses](https://github.com/twitter/finagle/blob/develop/finagle-memcached/src/main/scala/com/twitter/finagle/memcached/Client.scala#L453-L455).
One could argue that these are both failures, however this presents a
problem when trying to expose the client as a service, as it's a lossy
representation to the caller.

I've added a cas2 method that returns a CASResult for each of the three
states: Stored, NotFound, and Exists. I've re-written the cas method in
terms of cas2, and fixed all of the subclasses of BaseClient where
people were redefiniting cas.

There will be a cas2 method that will expose the difference between a
NotFound and Exists response. All existing API consumers will be
unaffected.

RB_ID=771779"
tonyd3,2015-12-07 19:33:05,https://api.github.com/repos/twitter/finagle/git/commits/36ef5ea7d1b84bdbe7b343a1c1ac9131c0468b20,36ef5ea7d1b84bdbe7b343a1c1ac9131c0468b20,"finagle-thrift: Add ability to configure Thrift Client/Server in Java.

Problem
It's not possible to configure custom params using Java in a Thrift Client/Server.

Solution
Override the Java friendly configure function within Thrift Client/Server
so that the correct types are returned in Java.

RB_ID=774505"
dschobel,2015-12-07 18:35:04,https://api.github.com/repos/twitter/finagle/git/commits/038ceb672eaaa3efc273d29710533f3a3885c065,038ceb672eaaa3efc273d29710533f3a3885c065,"finagle-mux: status should consider transport status

Revert the change to the status calculation introduced by
c509709ca964828bcf21ed8d8e29e7f101f17aab which excludes transport
status.

RB_ID=775263"
dschobel,2015-12-04 23:42:13,https://api.github.com/repos/twitter/finagle/git/commits/f825d14f0fb2adcdcad66319cf4176be5937d4d7,f825d14f0fb2adcdcad66319cf4176be5937d4d7,"finagle-http: fix non-http 1.x match error

Problem

Since netty 3's HttpVersion can express arbitrary protocols and
major and minor versions while finagle-http cannot our conversion
function throws a MatchError on messages which can be decoded as
http 1.x but declare a non-1.x protocol.

Solution

Introduce a base case.

RB_ID=774626"
codeferret,2015-12-04 21:02:48,https://api.github.com/repos/twitter/finagle/git/commits/efc1d6ab247212b85672bb642746926c4107ffd6,efc1d6ab247212b85672bb642746926c4107ffd6,"finagle-serversets: Fix stabilizers treatment of Neg as a failure

Problem:
The Stabilizer is supposed to prevent ZK errors from propagating through
the Activity of Addr returned by bind. However, if a serverset is empty,
then ZK errors are immediately propagated as empty serversets are not
stabilized b/c Addr.Negs are treated like Addr.Errors in the Stabilizer.

Solution:
Treat Negs as successful but empty entries, but still don't overwrite
Addr.Bounds with Addr.Negs, so we will still stabilize a serverset
against both Failed and Neg.

Result:
We don't surface errors during ZK issues when watching empty serversets.

RB_ID=773798"
j3h,2015-12-04 18:57:56,https://api.github.com/repos/twitter/finagle/git/commits/d29f985253467e5b82bb555348758156f651520c,d29f985253467e5b82bb555348758156f651520c,"finagle: Fix Filter.TypeAgnostic.andThen().toFilter

Problem
-------

Filter.TypeAgnostic.andThen's `toFilter` method accidentally
refers to its own `toFilter` method rather than the enclosing
class' `toFilter`, leading to infinite recursion and a stack
overflow when calling toFilter on a composed Filter.TypeAgnostic.

Separately, there is no TypeAgnostic analog to Filter.identity.

Solution
--------

- Explicitly refer to the outer class' toFilter method in the
  inner class created in Filter.TypeAgnostic.andThen.
- Add a Filter.TypeAgnostic.Identity.

RB_ID=774406"
vkostyukov,2015-12-03 23:46:24,https://api.github.com/repos/twitter/finagle/git/commits/50d3bb0eea5ad3ed332111d707184c80fed6a506,50d3bb0eea5ad3ed332111d707184c80fed6a506,"csl: Release OSS libraries

Finagle 6.31
Util 6.30
Scrooge 4.2
TwitterServer 1.16
Ostrich 9.14

RB_ID=774633
TBR=true"
vkostyukov,2015-12-03 21:10:21,https://api.github.com/repos/twitter/finagle/git/commits/200f8b542e7c5f51707f4606128ad7a3d4177d7a,200f8b542e7c5f51707f4606128ad7a3d4177d7a,"finagle: TCP_NODELAY and SO_REUSEADDR are now stack params

Problem

There is no convinient and finagle-idiomatic way of configuring socket options
for both listeners and transportes.

Solution

Make `TCP_NODELAY` and `SO_REUSEADDR` stack params so users could easily override
them. Keep the defaults unchanged (`TCP_NODELAY=true`, `SO_REUSEADDR=true`).

RB_ID=773824"
tonyd3,2015-12-03 05:51:12,https://api.github.com/repos/twitter/finagle/git/commits/ef6ada9228f8fd15772cf46451ba4b118fff8648,ef6ada9228f8fd15772cf46451ba4b118fff8648,"finagle-core, finagle-http: Add ability to configure HttpClients in Java.

Problem
It's not possible to configure custom params in an Http Client.

Solution
Override the Java friendly configure function within Http Client/Server
and StackClient/StackServer so that the correct types are returned in Java.

RB_ID=773504"
atollena,2015-12-02 02:39:24,https://api.github.com/repos/twitter/finagle/git/commits/616868b122c6dbfd6b5440030c70e38caf285725,616868b122c6dbfd6b5440030c70e38caf285725,"[finagle-serversets] Per-ZK serverset stats

Problem
--

Some users of Zk2Resolver resolve via multiple zookeeper clusters. ZooKeeper and resolvestats
are cumulated across zookeeper clients, making troubleshooting difficult.

Solution
--

Prefix ZooKeeper stats with the hostname used to connect to it.

RB_ID=772084"
ryanoneill,2015-12-01 23:19:52,https://api.github.com/repos/twitter/finagle/git/commits/1f7a39151a870bd1d48ac66aab91e318febec666,1f7a39151a870bd1d48ac66aab91e318febec666,"finagle: Documentation Generation Cleanup

Problem

The CHANGES file has an incorrect layout for displaying release 6.29.0
and 6.30.0 within the documentation. Also, the pushsite script is
still looking for documentation generated based on Scala 2.10.

Solution

Modify the CHANGES file to use the correct format for release 6.29.0
and 6.30.0. Also modify the pushsite script to look for documentation
in the 2.11 folder, and add a note to the README regarding the
version used within the generated documentation.

RB_ID=771755"
kevinoliver,2015-12-01 20:17:38,https://api.github.com/repos/twitter/finagle/git/commits/be8f20152006bea15c41e88f8dd0ad94b17ebd0a,be8f20152006bea15c41e88f8dd0ad94b17ebd0a,"finagle-core: Add Java tests for StatsReceivers

Some singleton StatsReceivers didn't have Java compilation tests.

Also, some of these tests were only compiling and not running due to
not being public.

RB_ID=771672"
atollena,2015-12-01 18:37:32,https://api.github.com/repos/twitter/finagle/git/commits/4af6acc2540ee74d3aa3e6a1f9efc1e0ac34556f,4af6acc2540ee74d3aa3e6a1f9efc1e0ac34556f,"[finagle-serversets] Add traffic owners

RB_ID=773289"
olix0r,2015-12-01 05:16:20,https://api.github.com/repos/twitter/finagle/git/commits/7ce8661c784b8d714a73b7ce83c60246d558d59a,7ce8661c784b8d714a73b7ce83c60246d558d59a,"finagle-core: make RegistryEntryLifecycle.role static

Problem

RegistryEntryLifecycle's role may not be accessed without instantiating a new
module.  This is cumbersome when referencing this module via e.g.
Stack.insertAfter.

Solution

Make RegistryEntryLifecycle.role static.

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=773211"
dschobel,2015-11-30 23:42:49,https://api.github.com/repos/twitter/finagle/git/commits/5eecf0395d461454df79dd05bb1d9d4f547c419f,5eecf0395d461454df79dd05bb1d9d4f547c419f,"finagle-netty4: private listener

listener shouldn't be public yet. make it private.

RB_ID=773072"
dschobel,2015-11-30 20:33:13,https://api.github.com/repos/twitter/finagle/git/commits/f1a68774c33ec5abc8bea967f86956d93d5e3184,f1a68774c33ec5abc8bea967f86956d93d5e3184,"finagle-netty4: wire channeltransport into listener

now that we have a netty4 channel transport, let's use it.

bonus: make tcp_nodelay configurable.

RB_ID=772498"
kevinoliver,2015-11-30 19:42:47,https://api.github.com/repos/twitter/finagle/git/commits/e18de6de58118c96e00e3d62ce6dc379d921b4e9,e18de6de58118c96e00e3d62ce6dc379d921b4e9,"util-core: Avoid various allocations

Motivation

There are a handful of places in util where we create
`java.util.concurrent.atomic` objects. Some of these are created often
and have very little concurrent access. There is overhead in creating
the extra object reference.

Solution

For these candidates we can instead use `synchronization` in order to
avoid the object allocations.

* `Future.monitored`
* `Promise.attached`
* `Timer.doAt`

Result

Less allocations and about the same or better performance.

RB_ID=768656"
codeferret,2015-11-30 15:28:37,https://api.github.com/repos/twitter/finagle/git/commits/5b6386021382f921a0465a097cae9b3a2578ebe7,5b6386021382f921a0465a097cae9b3a2578ebe7,"finagle-serversets: notify Stabilizer timers in separate threads

Problem:
The timers in Stabilizer call notify() from the timer thread, the
code run as a result of notify() takes a bit of time, causing timer
deviation as it's running in the timer thread.

Solution:
Call notify() in a separate thread.

Result:
Timer deviation mitigated

RB_ID=750527"
atollena,2015-11-25 21:18:47,https://api.github.com/repos/twitter/finagle/git/commits/d10031496356bafdb55b964e9ffc754b51bae6f5,d10031496356bafdb55b964e9ffc754b51bae6f5,"[finagle-core] Initialize endpoint stacks lazily

Problem
--

For large server sets, initializing the entire set of endpoint stacks can take seconds (typically
around 1 ms per endpoint stack, and server sets can have thousands of entries). This was done
synchronously on server set change, causing clients with a large underlying server set to be slow at
satisfying their first request, causing timeouts.

Solution
--

Instead of waiting for all endpoint stacks to be ready before satisfying the first requests,
initialize each endpoint stack on the first request to a given endpoint. The first request takes the
hit for creating a single endpoint stack. The overhead of creating a single endpoint stack is
typically low.

Result
--

Clients are ready sooner.

RB_ID=769492"
vkostyukov,2015-11-24 21:43:39,https://api.github.com/repos/twitter/finagle/git/commits/f8f02e6949707e5d60a8fb8bbe4e4b80b22e417c,f8f02e6949707e5d60a8fb8bbe4e4b80b22e417c,"finagle-core: Netty 4 socket channel transport

Problem / Solution

Finagle's missing a Netty 4 `ChannelTransport` implementation.

RB_ID=763435"
wisechengyi,2015-11-24 02:35:56,https://api.github.com/repos/twitter/finagle/git/commits/bcf33f5a534da46297b625525e96c23521dcb939,bcf33f5a534da46297b625525e96c23521dcb939,"maven layout goes away

RB_ID=771595
NO_USER_HOOK=1"
ryanoneill,2015-11-23 23:36:32,https://api.github.com/repos/twitter/finagle/git/commits/b5c05f05f983917d788e70e4f9242a2ad91dd7c5,b5c05f05f983917d788e70e4f9242a2ad91dd7c5,"finagle: Fix quoting in CHANGES file

Problem

One of the entries in the changes file is incorrectly quoting the
RB_ID.

Solution

Properly enclose the RB_ID in double backticks.

RB_ID=771599"
vkostyukov,2015-11-23 18:36:27,https://api.github.com/repos/twitter/finagle/git/commits/ed5b0e022ed824737a34b23cf287ba1f5a6df7d7,ed5b0e022ed824737a34b23cf287ba1f5a6df7d7,"finagle-core: Refactor Multipart to support in-memory/on-disk file uploads

Problem

1. Finagle `Multipart` API doesn't distinct in-memory/on-disk file uploads, which
   forces users materialize _all_ in comming files into memory, even if they don't
   read the file contents.
2. Given that `Multipart.decodeNonCunked` mutates the underlying request, it totally
   makes sense to wire _lazy_ instance of `Multipart` to each requset. That said,
   use the same pattern we use for `ParamMap`.

Solution

1. Redesign the `Multipart` ADT to support both in-memory and on-disk file uploads.
2. Add a lazy field `Request.multipart` that captures the multipart data for each
   request.

RB_ID=769889
TBR=true"
jcrossley,2015-11-21 02:04:36,https://api.github.com/repos/twitter/finagle/git/commits/624da215542816ff26f1519f1d2df8be8d4b998c,624da215542816ff26f1519f1d2df8be8d4b998c,"finagle/finagle-core: FailureAccrualFactory uses a policy to determine when to mark endpoint dead

Problem
FailureAccrualFactory uses only 'numFailures' to determine when to mark an endpoint dead.

Solution
FailureAccrualFactory now uses a FailureAccrualPolicy to determine when to mark an endpoint dead.
The default, FailureAccrualPolicy.consecutiveFailures() mimicks existing functionality, and
FailureAccrualPolicy.successRate() operates on the exponential moving average success
rate over a window of requests.

RB_ID=756921"
dschobel,2015-11-20 15:31:13,https://api.github.com/repos/twitter/finagle/git/commits/8d4d8bf8171e8f57db7446ef5cb73081759bab98,8d4d8bf8171e8f57db7446ef5cb73081759bab98,"finagle-core: introduce framing

Problem

We want netty-agnostic protocol implementations, this requires
new framing primitives which are netty-free.

Solution

Introduce framing types + an implementation of fixed-length framing.

N.B.

Our decoding type implies a message handler which observes a stream
of byte buffers of arbitrary size and is tasked with emitting a
variable number of typed frames in response to each subsequent
buffer.

RB_ID=767970"
dschobel,2015-11-20 04:16:39,https://api.github.com/repos/twitter/finagle/git/commits/8e415c063af922f8773f44bb65b47d4a0b15c9f8,8e415c063af922f8773f44bb65b47d4a0b15c9f8,"finagle-netty4: introduce netty4 listener

Introduce a Listener for netty4.

RB_ID=718688"
mariusae,2015-11-19 23:02:33,https://api.github.com/repos/twitter/finagle/git/commits/31851ccf64ff792661af8a2cd3846e1d01b37bf1,31851ccf64ff792661af8a2cd3846e1d01b37bf1,"Activity: add constructor from Event[State[T]]

This mirrors the one available in Var.

RB_ID=770338"
zfy0701,2015-11-19 20:45:55,https://api.github.com/repos/twitter/finagle/git/commits/d2453314d0a9411a20c82d83cd9eebbfc7fd3288,d2453314d0a9411a20c82d83cd9eebbfc7fd3288,"finagle-thrift: Update serverFromIface to try new style constructor.

Problem:
In https://github.com/twitter/scrooge/pull/211, a new constructor with
service name as parameter is added.

Solution:
Try to find the new style constructor but fallback to old one if not
found.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=767949
TBR=true"
roanta,2015-11-19 19:19:08,https://api.github.com/repos/twitter/finagle/git/commits/bba8f201a0adb575868a876e515c7ac870bdb402,bba8f201a0adb575868a876e515c7ac870bdb402,"finagle-mux: Refactor ClientDispatcher

Problem

The mux ClientDispatcher was becoming unwieldy. It handles translating
Requests/Responses to mux messages, managing control messages/the
state of a session, and tag management. By teasing these apart we can
make it easier to understand and more extensible.

Solution

The dispatcher now is primarily responsible for outstanding messages and
tag management, and thus, is a Service[Int => Message, Message]. This allows
us to move Request/Response translation to a filter above it. Finally, session
management is moved into a separate class.

RB_ID=760326"
adleong,2015-11-17 20:51:56,https://api.github.com/repos/twitter/finagle/git/commits/56fa4e8de5b2dfe28a6ebcd127600d8f8dbecf99,56fa4e8de5b2dfe28a6ebcd127600d8f8dbecf99,"finagle: Avoid using String.format in tracing

Problem:
String.format is inefficient and does a lot of allocation.

Solution:
Use string interpolation instead.

RB_ID=767487"
blackicewei,2015-11-16 22:23:22,https://api.github.com/repos/twitter/finagle/git/commits/9bede1511d3017cb0c2f10214f2ab72a951e1e20,9bede1511d3017cb0c2f10214f2ab72a951e1e20,"finagle-mux: remove failureDetector darkmode config

FailureDetector is fully on by default, we can remove darkmode config now.

RB_ID=766642"
mosesn,2015-11-16 21:14:04,https://api.github.com/repos/twitter/finagle/git/commits/ea272c51d76869002b94eec5440dbf68f73ae647,ea272c51d76869002b94eec5440dbf68f73ae647,"csl: Replace === with == in scalatest 2.x tests

Problem

We've been nagging each other about == vs ===.

Solution

ag -l ' === ' \
  ./util \
  ./ostrich \
  ./finagle \
  ./twitter-server \
  ./scrooge \
  ./twitter-server-internal | \
  grep '\.scala' | \
  xargs sed -i '' 's/ === / == /'

ag -l ' ===' \
  ./util \
  ./ostrich \
  ./finagle \
  ./twitter-server \
  ./scrooge \
  ./twitter-server-internal | \
  grep '\.scala' | \
  xargs sed -i '' 's/ ===$/ ==/'

Result

No more === nags in RB

RB_ID=766849"
kevinoliver,2015-11-16 18:35:16,https://api.github.com/repos/twitter/finagle/git/commits/385dba9dfe7a2a8195b8ed142c1b2c9691f8765f,385dba9dfe7a2a8195b8ed142c1b2c9691f8765f,"finagle-core: Default to a finite budget for RetryFilter & RetryExceptionsFilter

Motivation

`RetryFilter` and `RetryExceptionsFilter` are the common mechanisms
for retrying failed requests. Previously, there was an infinite budget
for retries to use which can lead to amplification of problems when
downstream service's problems are not transient.

Solution

Give a default `RetryBudget` to `RetryFilter` and
`RetryExceptionsFilter` in order to mitigate the amplification
effects.

RB_ID=766302"
vkostyukov,2015-11-14 00:19:11,https://api.github.com/repos/twitter/finagle/git/commits/2334a04c40c092cf764fa4abd0ae29666c1ea804,2334a04c40c092cf764fa4abd0ae29666c1ea804,"finagle-core: Cancel timer tasks in FailFastFactory

Problem

`FailFastFactory` is not consistent in terms of canceling the
scheduled timer tasks: only transition `Timeout -> Success` cancels
the previous task, while transition `Timeout -> TimeoutFail` doesn't.

It's unlikely that this inconsistency can cause memory leaks, since
Netty's `HashwheeledTimer` (which is used by default) guarantees
canceling/removing tasks that were executed, but it doesn't say
when the cleanup will happen. Another point is that we shouldn't
rely on a particular timer implementation so we could painlessly
switch it in future and do not end up debugging memory leaks.

Solution

Cancel tasks we're no longer insterested in.

RB_ID=767928"
vkostyukov,2015-11-12 05:23:11,https://api.github.com/repos/twitter/finagle/git/commits/2bfe368837c65e563cb61567d7b7bdf0ce626725,2bfe368837c65e563cb61567d7b7bdf0ce626725,"finagle-core: Fix race condition in FailureAccrual' revive timer task
Problem

FailureAccrual's `reviveTimerTask` (the one we run periodically to check if
the dead host is back alive) has a race condition over its reference.

  1. [thread 1] Host goes down and we mark it dead for `x` seconds
  2. [thread 1] We run the timer task (`revivalTask`) to check if it's back alive in `x` seconds
  3. [thread 2] A `ServiceFactory` that wraps Failure Accrual calls `close` on it so we cancel the
     timer task (which is `None`) via `cancelReviveTimerTasks`
  4. [thread 1] Stores the reference to a timer task into `reviveTimerTask`

Since `cancelReviveTimerTasks` is not syncrhonized there is a race condition between 2 and 3 so there
is quite a chance we won't cancel the task seeing a `None` instead of `Some(task)` (memory leak).

Solution

Mark `cancelReviveTimerTasks` syncrhronized to make sure it will see the most recent value for
`reviveTimerTask`.

RB_ID=766119"
mosesn,2015-11-11 22:27:25,https://api.github.com/repos/twitter/finagle/git/commits/eb5b1aa5a5f1af6073c8c9db2308fc649695f9b0,eb5b1aa5a5f1af6073c8c9db2308fc649695f9b0,"util-core: Provides an AsyncMeter, which asynchronously rate limits traffic

Problem

We have very fast sources, and want to space out production in a
safe way.

Solution

AsyncMeter is an explicit schedule for waiters that allows them
asynchronously, allowing one waiter every `interval` duration.

RB_ID=756333"
nik-johnson-net,2015-11-11 17:42:10,https://api.github.com/repos/twitter/finagle/git/commits/e896f0dd82e400051ebf1ccd244b80a136053b9d,e896f0dd82e400051ebf1ccd244b80a136053b9d,"finagle-stats: Add a flag for loading stats filters from a file

Problem

The only way to load stats filters is via a CSV list passed on the command line.

Solution

Add a flag which accepts a path to a file and load the file as the list of stats filters. Combine both lists for a complete list.

Only a new flag is added; current behavior does not change.

RB_ID=764914"
codeferret,2015-11-10 21:39:37,https://api.github.com/repos/twitter/finagle/git/commits/f1e956c3a8bc709adc3b54bbb666ad783c47e27d,f1e956c3a8bc709adc3b54bbb666ad783c47e27d,"finagle-serversets: Use FutureCache for pending getData calls

Problem:

We were not caching futures for calls to getData, thus we
sometimes called getData redundantly for the same node, wasting
effort and allocations.

Solution:

Properly cache futures for getData calls. Use util-cache's
LoadingFutureCache. Also simplified the code to make it
easier to reason about.

Result:

We don't call getData redundantly, we allocated less memory
when fetching serversets.

RB_ID=753634"
vkostyukov,2015-11-08 17:53:59,https://api.github.com/repos/twitter/finagle/git/commits/f60a996f8b7c2e7946411a71cb35f0e69fb8c422,f60a996f8b7c2e7946411a71cb35f0e69fb8c422,"finagle-core: Less allocations for Backoffs and Duration

Problem
Default backoff for Failure Accrual has been changed recently from const function `() => Duration`
to `Backoff.equalJittered`, which allocates around 728 bytes per each call `tail`/`head` (due to
high allocation rate for `Duration.*(Long)`). Give that this operation happens pretty much on every
failed request, it makes sense to reduce allocations and improve performace of jittered backoffs.

Solution
Optimize `Duration.*(Long)` (scale by long number).

RB_ID=764212"
kevinoliver,2015-11-06 02:16:56,https://api.github.com/repos/twitter/finagle/git/commits/39e1163ee2f6e3e177e2c8131685e96948959ef1,39e1163ee2f6e3e177e2c8131685e96948959ef1,"finagle: Introduce a budget for retrying failed requests

Motivation

Currently, clients can specify a `RetryPolicy` which determines which
types of failed requests are retried and how many retries to attempt.
This is flexible and gives users a good amount of control. However,
when downstream services are under duress, so called ""retry storms""
can amplify the effects.

As an example, given a common setup of a front end talking to a middle
tier which talks to a backend. If both the front end and the middle
tier allow for 4 retries, and things go south on the backend, the
resulting amplification is 25x onto the backend service.

Solution

Introduce a dynamic budget that controls when it is okay to retry a
failed request such that whether or not a request can be retried is
now checked against both the policy as well as the budget.

The default budget `RetryBudget.apply()` allows for 20% of the total
requests to be retried on top of a minimum of 10 retries per second
to accomodate clients that have just started issueing requests or
clients that issue a low rate of requests per second.

Clients configured via `ClientBuilder` can customize the budget via
`ClientBuilder.retryBudget(Retries.Budget)` and clients configured via
`Stack` can use `configured(Retries.Budget)`.

RB_ID=760213"
ryanoneill,2015-11-05 20:20:53,https://api.github.com/repos/twitter/finagle/git/commits/1d750f052dffea926cfb854a7e62748dd4609845,1d750f052dffea926cfb854a7e62748dd4609845,"finagle-core: Update StatsReceiver Link on Clients Page of User Guide

Problem:

The StatsReceiver link on the Clients page of the Finagle User Guide
points to StatsReceiver.scala within finagle-core. This file is now
located in util/util-stats.

Solution:

Change the StatsReceiver link in the documentation to point to the
util/util-stats version of the file on GitHub.

Result:

A working StatsReceiver link on the Clients page of the Finagle User
Guide.

RB_ID=764458"
kevinoliver,2015-11-05 18:43:00,https://api.github.com/repos/twitter/finagle/git/commits/5837bbdc9d4e531e9a1191f5bd5322db2bb2d93a,5837bbdc9d4e531e9a1191f5bd5322db2bb2d93a,"finagle-core, util-logging: Introduce HasLogLevel trait

Motivation

More control over the log level used for exceptions is necessary.
While `Failure` provides for this, it is marked as `final` and it can
be difficult to shoehorn other existing exception classes into it.

Solution

Introduce a small interface, `HasLogLevel` with a single method
`logLevel` that can be mixed into other exceptions as necessary.

Result

`Failure` mixes it in as does
`c.t.f.mux.ClientDiscardedRequestException`.

RB_ID=762874"
brutkin,2015-11-04 21:43:00,https://api.github.com/repos/twitter/finagle/git/commits/7830952bcb5c385204f1545ceed790ba332fec63,7830952bcb5c385204f1545ceed790ba332fec63," Problem:
  The new lint rules can help identify if StatsReciver metric creation is being requested repeatedly at runtime but it does not help in identifying which specific metrics are being requested.

 Solution:
  Add trace level logging to MetricsStatsReceiver to make debugging easier.  It can be enabled at runtime via admin interface when using Twitter-Server.

RB_ID=763368"
roanta,2015-11-03 19:09:16,https://api.github.com/repos/twitter/finagle/git/commits/e3c79bf709df0da5c41895d55b75d9ab5ff37951,e3c79bf709df0da5c41895d55b75d9ab5ff37951,"finagle-mux: Push message enc/dec into transports

Problem

We don't have a good way to build mux components that need to be
shared between clients and servers. For example, both senders and
receivers need to implement pings, handshake logic, and payload
splitting.

Solution

Map the mux `Transport[ChannelBuffer, ChannelBuffer]` to `Transport[Message, Message]`.
This allows us to start implementing this logic at the finagle transport layers.

RB_ID=759707"
vkostyukov,2015-10-30 17:18:38,https://api.github.com/repos/twitter/finagle/git/commits/a424ec3aeff66c3f4faeee959d809123fb697a30,a424ec3aeff66c3f4faeee959d809123fb697a30,"csl: Add Gitter badges and fix HipChat template and skip flaky tests

There are (still) plenty of problems with our Github repos:

a) Finagle build is broken;
b) READMEs don't have a link to Gitter room;

Solution

a) Add `SKIP_FLAKY` env variable to Travis' config to skip all the
   flakey tests;
b) Add Gitter badge for all the projects (except for Ostrich) that
   redirects to Finagle's room;

RB_ID=761629"
blackicewei,2015-10-30 02:37:59,https://api.github.com/repos/twitter/finagle/git/commits/1c7aed44a16fb621b56b1be7a549b0539dd11d96,1c7aed44a16fb621b56b1be7a549b0539dd11d96,"finagle-mux: turn on session based failure detection by default.

RB_ID=756213"
adleong,2015-10-29 22:00:28,https://api.github.com/repos/twitter/finagle/git/commits/203c4ec15b28eb8beca683c401c274a911e51d65,203c4ec15b28eb8beca683c401c274a911e51d65,"finagle: Avoid overflow when bitshifting in Backoff calculations.

Problem:
The maximum backoff value for equalJittered and exponentialJittered can be negative if a bit shift overflows into the sign bit.  This causes java.lang.IllegalArgumentExceptions.

Solution:
Implement a maximum amount to shift to protect the sign bit.

RB_ID=761435"
vkostyukov,2015-10-28 20:50:12,https://api.github.com/repos/twitter/finagle/git/commits/b6ef451c9e5aceed3eb66965278bcf1e4a27ea86,b6ef451c9e5aceed3eb66965278bcf1e4a27ea86,"csl: Fix OSS builds

Problem
OSS build is still broken by the following reasons:

1. My recent patch of `bin/travisci` had a typo under Scrooge (`.sbt` instead `./sbt`). Sorry.
2. Sbt runs the tests in the order that differers from pants. And somehow, the order matters
   for `fiangle-http` due to some tests that use ""addr=lable"" address format. The reason for
   this is a global mutable state per `ServerRegistry` that is shared acroos Finagle instance
   and _overrides_ the server label.
3. Finagle uses an old version of scrooge-sbt-plugin that had [a bug dealing with hierarchical
   thrift structures][1].

Solution

1. Fix typo in `scrooge/bin/travisci`.
2. Do not use `addr=label` format as address in tests to avoid using `ServerRegistry`.
3. Update Scrooge to the [most recent version][2].

RB_ID=760532"
blackicewei,2015-10-28 18:38:06,https://api.github.com/repos/twitter/finagle/git/commits/065ff90db28c13d893b0ed5f332ca7c8c939ce2d,065ff90db28c13d893b0ed5f332ca7c8c939ce2d,"finagle-mux: change closeThreshold to be duration in failureDetector

Problem

With long tail latency, closeThreshold is hard to
config as a multiplier.

Solution

Change it to time duration, so much easier to reason
about.

RB_ID=759406"
jcrossley,2015-10-27 19:36:30,https://api.github.com/repos/twitter/finagle/git/commits/782e46e909417f8b252a7f4ea0a4e804ee344469,782e46e909417f8b252a7f4ea0a4e804ee344469,"finagle-core, finagle-memcached: FailureAccrualFactory probing works with memcache

Problem
Probing did not work correctly with memcache because ejected hosts were never returned to the ring.

Solution
Ejected hosts are now returned to the ring when probing starts.

RB_ID=759194"
adriancole,2015-10-27 18:00:41,https://api.github.com/repos/twitter/finagle/git/commits/3a98a8330f7ab46e995ef96249a07a51fa539cdb,3a98a8330f7ab46e995ef96249a07a51fa539cdb,"Adds documentation to annotations as they are often misunderstood

Instrumentation libraries almost always get some aspect of annotations
wrong. This is an attempt to document them, so that folks have a better
chance at creating portable implementations.

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=759633"
luciferous,2015-10-27 17:12:27,https://api.github.com/repos/twitter/finagle/git/commits/47b27438758782fcfbf37f2bd9947d7a49709b85,47b27438758782fcfbf37f2bd9947d7a49709b85,"Optimize Filter.andThen

Problem

The definition of `andThen` which accepts a `Filter` parameter is the
most common usage for composing filters and a service, e.g.,

    filterA andThen filterB andThen service

The resulting Service allocates an additional Service per filter for
every request. Merely associating `andThen` to the right avoids the
allocations.

    filterA andThen (filterB andThen service)

This is possible because the right-associated pattern invokes the
definition of `andThen` which accepts a Service parameter. However, it
is not possible to do this if the user wants to build a filter chain
without a service on hand.

Solution

Introduce a hidden type (`AndThen`) to wrap a continuation, which when
ready to build the Service, we can use to magically re-associate the
`andThen`s to the most efficient pattern: to the right.

The continuation represents the prefix filter chain applied to a suffix
Service received as the argument, and therefore has the same type as the
`andThen` which takes a Service parameter: `Service[ReqOut, RepIn] =>
Service[ReqIn, RepOut]`.

Benchmark

Old
                                   (numAndThens)  Mode  Cnt     Score     Error   Units
andThenFilter                                  1  avgt   10    10.162 ±   0.077   ns/op
andThenFilter:·gc.alloc.rate.norm              1  avgt   10    ≈ 10⁻⁵              B/op
andThenFilter                                 10  avgt   10    95.834 ±   1.872   ns/op
andThenFilter:·gc.alloc.rate.norm             10  avgt   10   240.000 ±   0.001    B/op
andThenFilter                                 20  avgt   10   212.385 ±   3.959   ns/op
andThenFilter:·gc.alloc.rate.norm             20  avgt   10   480.000 ±   0.001    B/op

New
                                   (numAndThens)  Mode  Cnt   Score    Error   Units
andThenFilter                                  1  avgt   10  11.199 ±  0.181   ns/op
andThenFilter:·gc.alloc.rate.norm              1  avgt   10  ≈ 10⁻⁵             B/op
andThenFilter                                 10  avgt   10  47.235 ±  0.507   ns/op
andThenFilter:·gc.alloc.rate.norm             10  avgt   10  ≈ 10⁻⁴             B/op
andThenFilter                                 20  avgt   10  85.747 ±  1.062   ns/op
andThenFilter:·gc.alloc.rate.norm             20  avgt   10  ≈ 10⁻⁴             B/op

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=759635"
blackicewei,2015-10-27 01:47:56,https://api.github.com/repos/twitter/finagle/git/commits/2dd3ed0f7352be9f5a8367b4da40eba2c34d7862,2dd3ed0f7352be9f5a8367b4da40eba2c34d7862,"finagle-mux: remove close() from failureDetector, make session recoverable from TPing failures

Problem

Session lifetime management should be managed by the layer
above `ThresholdFailureDetector`.

When one ping returns as exception, the session is marked busy
forever without a way to recover from faiures.

Solution

Remove close() from `ThresholdFailureDetector`. It's enough
to mark its Status as Closed. SingletonPool does the right
thing to close the transport and reconnects.

When Tping fails, mark Status as Closed.

RB_ID=756833"
vkostyukov,2015-10-27 01:19:09,https://api.github.com/repos/twitter/finagle/git/commits/745ef2b75022836e540f840903891ca32871bfe7,745ef2b75022836e540f840903891ca32871bfe7,"csl: Fix TravisCI builds

Problem
TwitterServer depends on `finagle-zipkin`, which depends on `finagle-thrift`,
which depends on `finagle-core`, which depends on `scrooge-core`.

Solution
Publish local all the required dependencies for twitter-server. Cleanup the rest
of the travisci scripts.

RB_ID=759759"
blackicewei,2015-10-27 00:17:24,https://api.github.com/repos/twitter/finagle/git/commits/d7d823e36145fc4d3f49d6013570cd4766efcf5c,d7d823e36145fc4d3f49d6013570cd4766efcf5c,"finagle: add bing to owner of finagle-core, finagle-thriftmux
I am confident to review those changes.

RB_ID=759885"
vkostyukov,2015-10-26 23:43:27,https://api.github.com/repos/twitter/finagle/git/commits/ed81c42ed609f51332d7aa4cf4a86d4eb5da0d58,ed81c42ed609f51332d7aa4cf4a86d4eb5da0d58,"csl: Add maven-central badges to finagle, util, twitter-server and scrooge

RB_ID=759680"
vkostyukov,2015-10-26 23:23:04,https://api.github.com/repos/twitter/finagle/git/commits/697b63869e3e6e4241fed5c1d8dfcc6036bbc772,697b63869e3e6e4241fed5c1d8dfcc6036bbc772,"Add Brigade to adopters list

RB_ID=759630"
kevinoliver,2015-10-26 04:06:50,https://api.github.com/repos/twitter/finagle/git/commits/7ebdb29112b07c21180b3aaa9da98e98c589e4cd,7ebdb29112b07c21180b3aaa9da98e98c589e4cd,"util-core: Promote AsyncStream out of experimental

Motivation

`AsyncStream` has been in `com.twitter.concurrent.exp` to allow it to
sort out any issues. It has been a success so far and it is time to
promote it to `com.twitter.concurrent`.

Solution

The code has moved but there are deprecated forwarding types in the
`com.twitter.concurrent.exp` package objects that should allow Scala
devs to migrate seamlessly. Java devs will need to update their code.

Thank you to Neuman Vong for getting AsyncStream to this point.

RB_ID=758061
TBR=true"
vkostyukov,2015-10-24 02:16:35,https://api.github.com/repos/twitter/finagle/git/commits/571bbe4a0168f582d725698ca8880321d465618d,571bbe4a0168f582d725698ca8880321d465618d,"finagle-http: Convert unhandled exceptions into 500s

Problem
Any unhandled excpetion from the HTTP stack results into
a closed channel (drops connection) instead of sending out
a very basic HTTP 500 response.

Solution
Turn any unhandled exceptions into 500s.

Result
HTTP services buit with Finagle behave healthier in the
default configuration.

RB_ID=755846"
adleong,2015-10-24 01:08:35,https://api.github.com/repos/twitter/finagle/git/commits/5558d648a261f5f6b5c7b2912f67dbcda46ec55f,5558d648a261f5f6b5c7b2912f67dbcda46ec55f,"finagle-core: Add a serveAndAnnounce variant that accepts a SocketAddress.

Problem
Server#serveAndAnnounce does not have a variant that accepts a SocketAddress.

Solution
Add a Server#serveAndAnnounce variant that accepts a SocketAddress.

RB_ID=758862"
vkostyukov,2015-10-23 23:31:47,https://api.github.com/repos/twitter/finagle/git/commits/f10f2d76142eb9a273b5cf6b689c6ca5c42e82ab,f10f2d76142eb9a273b5cf6b689c6ca5c42e82ab,"util-stats: Remove deprecated methods on StatsReceiver

RB_ID=757414
TBR=true"
kevinoliver,2015-10-23 19:39:55,https://api.github.com/repos/twitter/finagle/git/commits/c334cc3e6086e1173afd17cf632e00081cb404e8,c334cc3e6086e1173afd17cf632e00081cb404e8,"finagle-core: DefaultMonitor respects Failure.logLevel

Motivation

Exceptions that propagate to the default `Monitor` became logged at
Warning level. This lead to excessive logging for `BackupRequestLost`.

Solution

`DefaultMonitor` is now the default `Monitor` and it respects
`Failure.logLevel`. This also necessitated a change so that
`BackupRequestLost` is no longer a singleton Exception. Instead, use
`BackupRequestLost.Exception`.

RB_ID=758056"
vkostyukov,2015-10-23 18:45:33,https://api.github.com/repos/twitter/finagle/git/commits/8adde8077b3d8939386d0f0cee23c9f2282b9d10,8adde8077b3d8939386d0f0cee23c9f2282b9d10,"finagle-http: Add vkostyukov to the finagle-http owners

RB_ID=758804"
blackicewei,2015-10-22 22:29:49,https://api.github.com/repos/twitter/finagle/git/commits/1f144b7046b675b458d396d5dc1f5bc71d1665de,1f144b7046b675b458d396d5dc1f5bc71d1665de,"finagle: revert two recent failureAccrual changes
Problem

We introduced a bug for Memcache when hostEjection is on. Once a host
is ejected from cache ring, there is no way for failureAccrual probe
to work, thus the node is never added back into the ring.

Solution

For now revert two related commits:

Revert ""finagle/finagle-core:: Revived FailureAccrualFactory must satisfy a request before accepting more""
Revert ""finagle/finage-core: Make FailureAccrual markDeadFor use exponential backoff by default""

RB_ID=758383
NO-QUEUE=true"
blackicewei,2015-10-22 19:30:38,https://api.github.com/repos/twitter/finagle/git/commits/2627735b5d9ee1dde73d68114bdd02c8d7892d12,2627735b5d9ee1dde73d68114bdd02c8d7892d12,"finagle-core: ClientRegistry cleans up duplicates when service closes

Problem

ClientRegistry does not remove entries from a duplicate
list it maintains. It can causes memory leak if services
create lots of clients.

Solution

clean up the duplicate buffer when client closes.

RB_ID=757874"
adleong,2015-10-22 18:23:44,https://api.github.com/repos/twitter/finagle/git/commits/75bf9853f85cc61078b3f2611d45d3783492ae0a,75bf9853f85cc61078b3f2611d45d3783492ae0a,"Replace macaw group with api group.  Cleanup OWNERS and GROUPS files accordingly.

RB_ID=758183"
dschobel,2015-10-21 00:23:28,https://api.github.com/repos/twitter/finagle/git/commits/ab5a3b145b190fff602229371d2159576518cec4,ab5a3b145b190fff602229371d2159576518cec4,"finagle-core: fix protocol library name configuration in builders
Problem

The global registry can't access the protocol name for CodecFactory#Client
and CodecFactory#Service instances which leads to unspecified
protocols even for CodecFactory's with defined protocols names.

Solution

Configure the protocol name at stack eval time.

Result

Fewer unregistered protocols.

RB_ID=757260"
vkostyukov,2015-10-20 23:58:24,https://api.github.com/repos/twitter/finagle/git/commits/d998a16bc501effa079f35c60abcf8c00177150e,d998a16bc501effa079f35c60abcf8c00177150e,"finagle-http: Check for potential integer overflow of the HTTP message size

Problem
If HTTP server or client are configured with request/response size bigger than 2Gb,
they will fail at runtime (when `ListenningServer` or `Transporter` are constructed)
and will drop the connection.

Solution
Fail fast instead of instantiating a wrongly configured server/client.

RB_ID=757256"
kevinoliver,2015-10-20 17:18:58,https://api.github.com/repos/twitter/finagle/git/commits/47925f5543932ee09ff47933c165ea3a8009713e,47925f5543932ee09ff47933c165ea3a8009713e,"util-core: Timers should propagate Locals

Motivation

`com.twitter.util.Timer` typically runs code in a different execution
context from where they scheduled. If the corresponding
`com.twitter.util.Locals` are not propagated, this can lead to
unexpected behavior. Finagle's most commonly used `Timer`
implementation is `com.twitter.finagle.util.HashedWheelTimer` which
has this behavior. However, two other implementations, `JavaTimer` and
`ScheduledThreadPoolTimer`, did not.

Solution

`Timer` now has final implementations for `schedule` which delegate to
new protected `scheduleOnce` and `schedulePeriodically` methods. This
is done to ensure that `Locals` are captured when the task is
scheduled and then used when the task is run. Existing `Timer`
implementations should rename their existing `schedule` methods to
work with the new interface.

Result

`Locals` are available when the task is run, as would be expected.

RB_ID=755387
TBR=true"
kevinoliver,2015-10-20 03:30:34,https://api.github.com/repos/twitter/finagle/git/commits/c5049b1413daae63cd2defbf408bcc03c5819df8,c5049b1413daae63cd2defbf408bcc03c5819df8,"finagle: Flaky tests

Cleanup for some flaky tests

RB_ID=756955"
dturner-tw,2015-10-20 01:03:58,https://api.github.com/repos/twitter/finagle/git/commits/2b83fa5e29c64721dfb7a90c3eca4bde2751a343,2b83fa5e29c64721dfb7a90c3eca4bde2751a343,"Revert ""finagle-http: Check for potential integer overflow of the HTTP message size""

This is breaking the build.

RB_ID=757293
TBR=true
NO-QUEUE=true"
kevinoliver,2015-10-19 21:49:34,https://api.github.com/repos/twitter/finagle/git/commits/eb3b0f8f1f9384d75f8df42a739918ceb1efe636,eb3b0f8f1f9384d75f8df42a739918ceb1efe636,"finagle, scrooge: Remove caliper

Motivation

We have moved to JMH from Caliper for microbenchmarks. A few
references and benchmarks remained.

Solution

Port the one interesting benchmark to JMH and remove the others.

RB_ID=756942"
vkostyukov,2015-10-19 19:09:53,https://api.github.com/repos/twitter/finagle/git/commits/e917f276bb3c9c17c67f1aa345eabe8355356565,e917f276bb3c9c17c67f1aa345eabe8355356565,"finagle-http: Check for potential integer overflow of the HTTP message size

RB_ID=756352"
arnarthor,2015-10-16 05:12:07,https://api.github.com/repos/twitter/finagle/git/commits/169a91946b13fb6e5c062f8e159eb9313ca8a414,169a91946b13fb6e5c062f8e159eb9313ca8a414,"finagle: Adding QuizUp to adopters list

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=756337"
vkostyukov,2015-10-16 04:58:47,https://api.github.com/repos/twitter/finagle/git/commits/485a4ae9ed8dd025a51a30d224c772860dedfffb,485a4ae9ed8dd025a51a30d224c772860dedfffb,"finagle|util: Fix broken changelogs

- Dublicated section ""Runtime Behavior Changes"" under the 6.30.0 relase in finagle.
- Wrong idenetation in util's cahngelog.
- Missing changelog for TwitterServer.

RB_ID=756329"
vkostyukov,2015-10-16 00:56:26,https://api.github.com/repos/twitter/finagle/git/commits/89bb1eb232b34318657481ba6b9f628fba4bafc1,89bb1eb232b34318657481ba6b9f628fba4bafc1,"finagle: Log exceptions occurred in the server stack

Problem
Unhandled exceptions from the Finagle server stack are silently dropped.

Solution
Replaced `DefaultMonitor` with `RootMonitor`, which logs all the unhandled
exceptions.

RB_ID=728585"
vkostyukov,2015-10-15 22:17:11,https://api.github.com/repos/twitter/finagle/git/commits/3cb59bee80718a5925da12ad251e5ccf18f4955b,3cb59bee80718a5925da12ad251e5ccf18f4955b,"util-stats: Improve docs for InMemoryStatsReceiver

RB_ID=755684"
roanta,2015-10-15 21:52:52,https://api.github.com/repos/twitter/finagle/git/commits/745578b931893c432e51da623287144e548cc489,745578b931893c432e51da623287144e548cc489,"csl: bump lib versions

RB_ID=756082
TBR=true"
jcrossley,2015-10-15 18:39:56,https://api.github.com/repos/twitter/finagle/git/commits/0aec0a7b789146e73d9b24c97661165a92ec2c1c,0aec0a7b789146e73d9b24c97661165a92ec2c1c,"finagle/finage-core: Make FailureAccrual markDeadFor use exponential backoff by default

Problem
The default value for markDeadFor in FailureAccrualFactory is a constant,
so frequently failing nodes are regularly reinstated after a timeout.

Solution
FailureAccrualFactory uses jittered backoffs (starting at 5s, up to 300s)
as the duration to mark dead for, if markDeadFor is not configured.

RB_ID=746930"
kevinoliver,2015-10-14 23:51:04,https://api.github.com/repos/twitter/finagle/git/commits/5dfe12daf28240f728f2dd2ba56c92bb0dc6dfbc,5dfe12daf28240f728f2dd2ba56c92bb0dc6dfbc,"util-lint: Add lint package to flag questionable practices

Motivation

There are a variety of best practices we can identify at runtime and
use to help our users improve their service.

Solution

Introduce a new util-lint module at com.twitter.util.lint which allows
us to register `Rules` which when run can return 0 or more `Issues`.

This commit adds a few rules:

 * Multiple `StatsReceivers` registered.

 * Large cumulative gauges.

 * Large number of requests to `StatsReceiver.{stat,counter,addGauge}`.

 * Duplicate names used for clients or servers.

Result

Users can visit /admin/lint with TwitterServer and see if there is
anything they can improve with their service.

RB_ID=754348"
roanta,2015-10-14 16:54:41,https://api.github.com/repos/twitter/finagle/git/commits/ed082f5c673856c50797e3659aa23f07b92fe90d,ed082f5c673856c50797e3659aa23f07b92fe90d,"finagle: add Hotel Urbano as an adopter

RB_ID=755152"
roanta,2015-10-13 00:57:27,https://api.github.com/repos/twitter/finagle/git/commits/0dc723b732b345dca8f876bb1d6a9c52f5bce971,0dc723b732b345dca8f876bb1d6a9c52f5bce971,"finagle-core: eagerly remove `Balancers` gauges on close

Problem

Balancers can be re-constructed across the lifetime of a
client via wily. Thus, it's important to cleanup exposed
gauges when their context is closed in order to avoid avoid exposing
noisy stats and occupying memory for longer than neccessary.

Solution

Cleanup gauges exposed by the `Balancers` factory methods.

RB_ID=754652"
dschobel,2015-10-12 22:04:03,https://api.github.com/repos/twitter/finagle/git/commits/7a8575ca8ce77517da798d4461e73165091a00e3,7a8575ca8ce77517da798d4461e73165091a00e3,"finagle-http: improve handling of oversized request payloads

Problem

Rather than returning a usable error status code on oversized request
payloads our http codec implementation will throw an exception and
forcibly close the offending client connection. This turns an
application level error into a transport level failure which leaves
clients guessing at what exactly went wrong.

Related to this, finagle http servers will respond in the affirmative
(100 CONTINUE) to clients seeking confirmation that a large payload
is in fact allowed, moments before closing the client connection.

Solution

Insert a pipeline handler before the chunk aggregator and before
the ExpectContinue handler which fails fast on oversized requests
and returns the correct error code.

Result

An actionable client side error code for oversized requests and no
spurious 100 Continue responses to doomed client requests.

RB_ID=753664"
vkostyukov,2015-10-10 00:47:52,https://api.github.com/repos/twitter/finagle/git/commits/bf4b0ea8b4bb34f4cb98fa6da06723bc58635487,bf4b0ea8b4bb34f4cb98fa6da06723bc58635487,"finagle-mux: Avoid synchronization on WindowedMax.get

RB_ID=753980"
dschobel,2015-10-09 22:13:15,https://api.github.com/repos/twitter/finagle/git/commits/b010e5bc59cadcfbf3c2648099a3ef64d437c2e8,b010e5bc59cadcfbf3c2648099a3ef64d437c2e8,"finagle-core: disable highres timer

Replace default highres timer instance with default hashwheel timer so that context is preserved.

RB_ID=753966"
jcrossley,2015-10-08 23:40:38,https://api.github.com/repos/twitter/finagle/git/commits/faf04794207a0de01cdf6ca1e63dec62717e71b8,faf04794207a0de01cdf6ca1e63dec62717e71b8,"finagle/finagle-core:: Revived FailureAccrualFactory must satisfy a request before accepting more

Problem
A service revived after failing can immediately accept many requests.
It is more likely to fail these requests than a healthy service; it
should be conservative after revival.

Solution
After being revived, a FailureAccrualFactory enters a
'probing' state wherein it must successfully satisfy a request before
accepting more. If the request fails, it waits for the next 'markDeadFor'
period.

RB_ID=747541"
kevinoliver,2015-10-08 22:52:14,https://api.github.com/repos/twitter/finagle/git/commits/eb9982850db5d3a639e0e85370abb185867f843b,eb9982850db5d3a639e0e85370abb185867f843b,"finagle-core: RetryPolicy.tries now uses jittered backoffs

Motivation

The simplest way of specifying a `RetryPolicy` via `ClientBuilder` is
`ClientBuilder.retries` and this retry policy does not wait at all in
between retries. This can have negative impacts on the downstream
service should it already be struggling.

Solution

Use a jittered backoff starting at 5 milliseconds and then using
random backoff between 5 millis and 3x the previous backoff for the
following retries. These backoffs are capped at 200 milliseconds.

This is used by callers to `RetryPolicy.tries` which impacts
`ClientBuilder.retries` and `RetryingService.tries`.

`Backoff` was moved into its own file and adding some additional
capabilities such as being able to specify a maximum for `linear`
and `exponential` as well as introducing two new jittered backoffs,
`exponentialJittered` and `decorrelatedJittered`.

Result

Better behaving clients should lead to more systemic resilience.

RB_ID=752629"
vkostyukov,2015-10-08 22:38:03,https://api.github.com/repos/twitter/finagle/git/commits/a7e51dd119046c5c04c3cb5b6c79a16fc66edf45,a7e51dd119046c5c04c3cb5b6c79a16fc66edf45,"finagle: Remove finagle-swift

RB_ID=752826
TBR=true"
amartinsn,2015-10-08 19:35:42,https://api.github.com/repos/twitter/finagle/git/commits/490f6f8e88dab2486c7f584659ca118f68c6f872,490f6f8e88dab2486c7f584659ca118f68c6f872,"Adding Globo.com to the list of adopters.

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=753204"
vkostyukov,2015-10-08 19:09:53,https://api.github.com/repos/twitter/finagle/git/commits/80e9287dda278902b170aeebd6ca6c83df4dfe97,80e9287dda278902b170aeebd6ca6c83df4dfe97,"util-core: Remove deprecated methods on Time and Duration

RB_ID=751771
TBR=true"
luciferous,2015-10-08 10:05:08,https://api.github.com/repos/twitter/finagle/git/commits/84c9907bd45e2a4444592a95c642e91faaf0e747,84c9907bd45e2a4444592a95c642e91faaf0e747,"Rename finagle-httpx to finagle-http

Problem / Solution

Rename finagle-httpx to finagle-http.

RB_ID=751876
TBR=true
USER_HOOK_ARGS=--i-am-evil -x .hooks/PRESUBMIT/validate-config-ini macaw-roi/.hooks/PRESUBMIT macaw-swift/.hooks/PRESUBMIT/check-swoop"
roanta,2015-10-07 23:54:23,https://api.github.com/repos/twitter/finagle/git/commits/d62ffa1e9a925a96cbdc5608ebf3b9e7e5de86b4,d62ffa1e9a925a96cbdc5608ebf3b9e7e5de86b4,"finagle-core: Remove weights from c.t.f.util.Ring

Problem

We removed weights from the load balancer in a previous patch,
but there are some residual references to weights that needed
to be cleaned up.

Solution

Remove weights from c.t.f.util.Ring which is used by aperture.
This simplifies the construction of the aperture ring.

RB_ID=752149"
dschobel,2015-10-07 22:36:26,https://api.github.com/repos/twitter/finagle/git/commits/47a941ef4cf4d0d272826b719ffb3a9f817851da,47a941ef4cf4d0d272826b719ffb3a9f817851da,"make 2.11.7 the default scala version for csl OSS
Make 2.11.7 the default scala version for csl OSS and bump patch
level of 2.10.

RB_ID=752868"
dschobel,2015-10-07 22:04:46,https://api.github.com/repos/twitter/finagle/git/commits/91bd4c417000e55c8161eac02326dd17b3230930,91bd4c417000e55c8161eac02326dd17b3230930,"finagle-mux: fix flaky request draining test
Problem

Mux's ClientTest is asserting properties against a global log which
picks up messages beyond the test events we want to inspect. This
makes the test flaky.

Solution

Rewrite based on metrics and a local SR instance.

RB_ID=752850"
nshkrob,2015-10-07 21:59:07,https://api.github.com/repos/twitter/finagle/git/commits/7d46e514e01b077707e77bdb1fff376f741f76b4,7d46e514e01b077707e77bdb1fff376f741f76b4,"finagle-thrift: Fix thrift server construction for extended services

Problem

Given a thrift service ExtendedEcho that extends service Echo, constructing a service with
```
Thrift.serveIface(addr, new ExtendedEcho.FutureIface { ... } )
```
produces an Echo server, i.e. a server that's not aware of ExtendedEcho's methods. The symptom is that the server throws 'TApplicationException: Invalid method name' when called with the methods from ExtendedEcho. The cause is a bug in reflection code (the constructor takes ExtendedEcho[Future], not ExtendedEcho$FutureIface).

Solution

Use the correct class when searching for the constructor.

RB_ID=752469"
vkostyukov,2015-10-07 20:14:10,https://api.github.com/repos/twitter/finagle/git/commits/0327caaf48cbc0787588edd068ed0efa7a2d4e61,0327caaf48cbc0787588edd068ed0efa7a2d4e61,"finagle: Remove finagle-stress

Problem
`finagle-stress` is pretty dead and should be removed.

Solution
Remove `finagle-stress` and its the only one dependee (which is also pretty
dead) - `caccie/cassie-stress`.

Result
1500 LOCs have been removed.

RB_ID=752201"
mosesn,2015-10-07 09:15:12,https://api.github.com/repos/twitter/finagle/git/commits/86d9b05dfd6480d3392d47565ba2955ef961ec6d,86d9b05dfd6480d3392d47565ba2955ef961ec6d,"finagle-core: Stop recording transit latency and deadline budget for clients

Problem

Finagle records transit latency for clients, but only servers
care about it.

Solution

Move the transit latency stat out of StatsFilter and into
ServerStatsFilter. Handletime is also a server-specific stat,
so moved that into ServerStatsFilter too, and deleted
HandletimeFilter.  This has the added advantage of recording
transit latency at the same time we do handletime, which is one
of the earliest points.

This review also handles some other miscellaneous cleanup,
making no-allocation, testable, elapsed duration easier to use,
adding tests for handletime, transit latency and deadline budget.

Result

Finagle services no longer export transit_latency_ms or
deadline_budget_ms for clients.  It's not useful for clients,
so it's safe to remove it.

RB_ID=751268"
nshkrob,2015-10-07 03:44:18,https://api.github.com/repos/twitter/finagle/git/commits/a5d6bb30770993f677d57fad1ee3eae68510bf5a,a5d6bb30770993f677d57fad1ee3eae68510bf5a,"finagle: [docs, tiny] Fix newServiceIface usage in scaladoc

Problem

newServiceIface takes a ServiceIface type param.

Solution

Correct the usage in the comment.

RB_ID=752200"
nshkrob,2015-10-07 01:27:42,https://api.github.com/repos/twitter/finagle/git/commits/968e426aafd5fe96f3544585e79c68581d9f16a7,968e426aafd5fe96f3544585e79c68581d9f16a7,"finagle-benchmark: Move the thrift out to work around the nested object bug

Problem

Due to https://issues.scala-lang.org/browse/SI-2034, JMH doesn't work on scrooge-generated scala files after the service-per-endpoint patch.

The problem is the triple-nested objects introduced in the service-per-endpoint Scrooge patch. E.g.
```
object Hello {
  object Hi {
    object Args {}
  }
}

val args: Hello.Hi.Args = Hello.Hi.Args()
println(args.getClass.getSimpleName) // throws InternalError: Malformed class name
```

Solution

Work around the bug by moving thrift out of finagle-benchmark into a new sbt project finagle-benchmark-thrift.

Result

JMH only introspects classes in the current project, not the dependencies, so finagle-benchmark works.

Alternative approach

I've tried changing the outer 'object Hello' to a namespace. That doesn't work because it encloses implicit objects that must be in an enclosing object scope.

RB_ID=752209"
adriancole,2015-10-06 23:05:48,https://api.github.com/repos/twitter/finagle/git/commits/0214ef2eadf4f5d2fed0c784a2d23d380e3878d7,0214ef2eadf4f5d2fed0c784a2d23d380e3878d7,"Removes zipkin annotation.duration

The OpenZipkin project dropped support for Annotation.duration. This
field was rarely used, and when used often incorrectly. Moreover, the
zipkin query and web interfaces didn't support it. Dropping it
implicitly fixed bugs and confusion around the topic. This happened in
zipkin 1.9, and finagle-zipkin is the last trace instrumentation library
left to adjust.

See https://github.com/openzipkin/zipkin/pull/717

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=751986"
dschobel,2015-10-05 20:23:40,https://api.github.com/repos/twitter/finagle/git/commits/b6f91799a6c73a0808bd4a6a7954bd6125750625,b6f91799a6c73a0808bd4a6a7954bd6125750625,"finagle-core: ignore consistently failing tests

RB_ID=751473"
vkostyukov,2015-10-05 19:41:35,https://api.github.com/repos/twitter/finagle/git/commits/cb429dc0c5df360061190c4922459f09b8558b70,cb429dc0c5df360061190c4922459f09b8558b70,"finagle-mux: Optimize WindowedMax

Problem
`WindowedMax` which is used by our `ThresholdFailureDetector` creates small structs, `AgedLong`s,
which have the unfortunate behavior of having medium lifetimes which is what the JVM's garbage
collector wants to avoid.

Solution
Allocate once. Use everywhere.

Result
Zero allocations for `add`. Slightly better peformance.

RB_ID=751193"
atollena,2015-10-02 22:04:46,https://api.github.com/repos/twitter/finagle/git/commits/615ad20eecbfac6072a237a4df7f0fc24b9db50c,615ad20eecbfac6072a237a4df7f0fc24b9db50c,"Revert ""finagle-serversets: Use FutureCache for pending getData calls""

This seems to cause problems resolving the eventbus provisioning serverset
(serverset!eventbus/prod/provisioning). I could reproduce by creating a tunnel to nest in atla.

RB_ID=750974
TBR=true"
roanta,2015-10-02 21:13:29,https://api.github.com/repos/twitter/finagle/git/commits/7678e3ba16be8174e844dc34b65a3b0da873defb,7678e3ba16be8174e844dc34b65a3b0da873defb,"util-core: decommission scheduler clock stats

The Scheduler clock stats were decommissioned as they only make
sense relative to `wallTime` and the tracking error we have experienced
in production between `wallTime` and `*Time` make it impossible to use
them reliably. It is not worth the performance and code complexity
to support them.

RB_ID=750239"
codeferret,2015-10-02 18:35:53,https://api.github.com/repos/twitter/finagle/git/commits/ca0c813d6f614a56104712fde0a9678b56c6aec7,ca0c813d6f614a56104712fde0a9678b56c6aec7,"finagle-serversets: Use FutureCache for pending getData calls

Problem:

We were not caching futures for calls to getData, thus we
sometimes called getData redundantly for the same node, wasting
effort and allocations.

Solution:

Properly cache futures for getData calls. Use util-cache's
LoadingFutureCache. Also simplified the code to make it
easier to reason about.

Result:

We don't call getData redundantly, we allocated less memory
when fetching serversets.

RB_ID=749042"
luciferous,2015-10-02 00:36:34,https://api.github.com/repos/twitter/finagle/git/commits/553835d51464a08a9256014d118cfd556766f821,553835d51464a08a9256014d118cfd556766f821,"Privatize Netty types in DefaultTimer and TimerFromNettyTimer

Problem

DefaultTimer and TimerFromNettyTimer leak org.jboss.netty.util.Timer.

Solution

Rename TimerFromNettyTimer to HashedWheelTimer, make them private to
finagle and provide compatible generic constructors. To migrate, users
should be able to pass the same parameters used to construct the Netty
HashedWheelTimer directly into Finagle HashedWheelTimer.

Previously:

    val timer = new TimerFromNettyTimer(
      new netty.HashedWheelTimer(tickDuration, TimeUnit.MILLISECONDS))

Now:

    val timer = finagle.HashedWheelTimer(tickDuration.milliseconds)

RB_ID=748514
TBR=true"
dschobel,2015-10-01 19:41:26,https://api.github.com/repos/twitter/finagle/git/commits/eaa64c767c0f7c85acc0d1008218122c38fa32d5,eaa64c767c0f7c85acc0d1008218122c38fa32d5,"finagle-core: add netty3 owners file

RB_ID=750160"
roanta,2015-10-01 16:33:05,https://api.github.com/repos/twitter/finagle/git/commits/e8cb4e881f57be0ec1bfceed6ee0309859e287c9,e8cb4e881f57be0ec1bfceed6ee0309859e287c9,"finagle-redis: remove concurrent lb

Problem

Redis is a stateful protocol, so we can't introduce
concurrency without managing the state across connections.

Solution

Drop the concurrent lb and return to a single pipelined
connection per client.

RB_ID=749874"
kevinoliver,2015-09-30 05:09:13,https://api.github.com/repos/twitter/finagle/git/commits/8ac8b953c4600a9b1c085c7c1e26eb7701027dce,8ac8b953c4600a9b1c085c7c1e26eb7701027dce,"finagle-core: Add a deny list to LoadService

Motivation

`c.t.f.util.LoadService` puts users at the mercy of their transitive
dependencies as to what implementation gets loaded. This is simple but
can be difficult for users to manage and control.

Solution

Introduce a global flag that is a deny list for implementations.
For a given LoadService interface, if the implementation is found in the
deny list, it will not be loaded.

  -com.twitter.finagle.util.loadServiceDenied=com.twitter.finagle.stats.OstrichStatsReceiver,com.twitter.finagle.stats.CommonsStatsReceiver

Result

Users have more control over the loaded implemetation when needed.

RB_ID=748750
TBR=true"
baroquebobcat,2015-09-30 03:13:53,https://api.github.com/repos/twitter/finagle/git/commits/538d12e79f716aeb1c5059f2a2882477a0ba3a10,538d12e79f716aeb1c5059f2a2882477a0ba3a10,"Update junit security manager, mark failing tests as flaky, update security manager publish instructions

After landing https://reviewboard.twitter.biz/r/747778/, I published the 0.0.6 jar to artifactory. This change bumps the BUILD.tools version to use the new artifact.

With this change, System.exit in tests will trigger a SecurityException and produce output on stderr. The change also ensures that tests that attempt to access the network on threads other than the main thread will fail with a security exception. The previous version would just output a stacktrace without raising an exception. That allowed tests to pass when running with multiple test run threads, though they should have failed.

I found test failures due to unsupported operations being used. I marked these tests as flaky and filed tickets for them, which I've attached as bugs on this review.

This also updates the junit-sm publish instructions as they were based on pre-monobuild layout.

RB_ID=749074"
blackicewei,2015-09-29 18:58:10,https://api.github.com/repos/twitter/finagle/git/commits/a281c3271dcbce45312766e3b018ac5a94cf1ada,a281c3271dcbce45312766e3b018ac5a94cf1ada,"finagle: add bing to some sub-proj owner

I am familiar with the code base, and confident to review

RB_ID=747151"
nshkrob,2015-09-28 19:02:15,https://api.github.com/repos/twitter/finagle/git/commits/2cdd62c788b1397e0a3e01618f499b53b2e2ae66,2cdd62c788b1397e0a3e01618f499b53b2e2ae66,"finagle: Fix travis build

Problem

finagle CI build fails because it depends on scrooge-core.

Solution

Clone and build scrooge-core before building finagle.

RB_ID=748353"
nshkrob,2015-09-28 17:53:38,https://api.github.com/repos/twitter/finagle/git/commits/5f4f8b8b9420082468fb99c95e90fd5f924e09e5,5f4f8b8b9420082468fb99c95e90fd5f924e09e5,"Release CSL libraries (Sept 2015).

- Release finagle, ostrich, scrooge, twitter-server, util (Sept 2015).

RB_ID=747942"
luciferous,2015-09-26 21:00:35,https://api.github.com/repos/twitter/finagle/git/commits/47bf5dae5e72cfbc84e891a84ad73dd119aba031,47bf5dae5e72cfbc84e891a84ad73dd119aba031,"Remove finagle-http

Problem

finagle-http is deprecated in favor of finagle-httpx and should be
removed.

See our blog post on upgrading to Netty 4 for more information[1]. Drop
by finaglers[2] if you have any questions.

Solution

Remove finagle-http and convert its dependents to finagle-httpx.

[1] https://finagle.github.io/blog/2014/10/20/upgrading-finagle-to-netty-4/
[2] https://groups.google.com/d/forum/finaglers

RB_ID=746510"
roanta,2015-09-25 18:01:02,https://api.github.com/repos/twitter/finagle/git/commits/150bbf14ccff580bf156e6ef185f54fd4fc75e76,150bbf14ccff580bf156e6ef185f54fd4fc75e76,"talon: move to httpx

finagle-http will soon be deprecated in favor of finagle-httpx. In
preparation for this change, we're assisting each team in converting
their targets that depend on finagle-http to finagle-httpx.

This RB contains changes for: talon/http

This spreadsheet tracks what targets have already been converted:
https://docs.google.com/spreadsheets/d/1ABj_r642UUjN-zNN9PM8AS_2cC06lSmks9SyGA20OGY

RB_ID=746574
TBR=true"
codeferret,2015-09-25 01:26:57,https://api.github.com/repos/twitter/finagle/git/commits/e2aee53c08654371e83071227c51861331789774,e2aee53c08654371e83071227c51861331789774,"finagle-serversets: Avoid Future.collect when calling getData

Problem
If any getData call fails, we will fail to fetch the entire serverset

Solution
Use collectToTry, not collect.

Result
If some getData calls fail, we still fetch the rest of the serverset

RB_ID=747536"
codeferret,2015-09-24 18:58:17,https://api.github.com/repos/twitter/finagle/git/commits/fc158518eb0f6bf0e5b571568f4d35d1fdf2c593,fc158518eb0f6bf0e5b571568f4d35d1fdf2c593,"finagle-serversets: Don't cache all ZK node date indefinitely

Problem

We currently Memoize the result of calls to getData. Since Memoize does not
offer an evict/remove feature, we thus cache all retrieved data indefinitely
as Entries/Vectors. This results in a memory leak corresponding to serverset
churn.

Solution

Do not use Memoize to cache getData calls. Instead use a concurrent.TrieMap
and remove nodes from cache when they are no longer present in ZK.
Note: The stabilizer will still maintain these in it's own cache until they
are removed by the stabilizer.

Result

We leak a lot less memory. However, because Memoize was caching Futures
(including failures), and this patch caches results, we may call getData
multiple times for the same node. (See comment in ServiceDiscovererTest.scala).

RB_ID=745830"
gdickinson,2015-09-24 15:27:56,https://api.github.com/repos/twitter/finagle/git/commits/0a17626ec74c372b383a031c64015fe7def70890,0a17626ec74c372b383a031c64015fe7def70890,"Modify finagle-memcached to expose the KetamaClient's `numReps` parameter

RB_ID=745441"
kevinoliver,2015-09-23 20:32:09,https://api.github.com/repos/twitter/finagle/git/commits/d396830352b83c6abf392252c008d63a147e35a9,d396830352b83c6abf392252c008d63a147e35a9,"finagle-thrift: Add more patience to EndToEndTest

Motivation

This new test is marked as flaky sometimes in continuous integration
tests.

Solution

Give it longer to succeed which helps avoid short slowdowns.

RB_ID=746528"
jcrossley,2015-09-23 19:00:02,https://api.github.com/repos/twitter/finagle/git/commits/fca5f0b6c55e551409ac72a1036654b9fd76b59e,fca5f0b6c55e551409ac72a1036654b9fd76b59e,"finagle/finagle-httpx: Add @varargs annotation to HeaderMap.apply for Java compat

Problem
Calling HeaderMap.apply() with no arguments from Java results in a error.

Solution
Adds @varargs annotation to HeaderMap.apply

RB_ID=746504"
nshkrob,2015-09-23 18:34:30,https://api.github.com/repos/twitter/finagle/git/commits/ae16cd8b844bd33b58320527dd38d38de091d171,ae16cd8b844bd33b58320527dd38d38de091d171,"finagle: Add resolver for libthrift to fix the sbt build

Problem

Finagle fails to resolve the libthrift jar when resolving plugins (when compiling project/Build.scala). libthrift is a dependency of the scrooge-sbt-plugin.

Solution

Add the https://maven.twttr.com resolver for libthrift.

RB_ID=746529"
nshkrob,2015-09-23 01:51:23,https://api.github.com/repos/twitter/finagle/git/commits/152c4efe88e5c342766dc930203d782fa4754874,152c4efe88e5c342766dc930203d782fa4754874,"finagle: Readability improvements for FailFastFactory

Problem

Improve readability of FailFastFactory. This came out some other work that got shelved.

Solution

* Removed an unused Retrying.done Promise.
* Reordered case handling to match the order of events.
* Renamed self -> underlying.

RB_ID=744793"
luciferous,2015-09-22 23:16:13,https://api.github.com/repos/twitter/finagle/git/commits/487a6749373f669a1d1ef6635e739d39588d3628,487a6749373f669a1d1ef6635e739d39588d3628,"Convert finagle-native to finagle-httpx

Problem

finagle-http is going to be deprecated in favor finagle-httpx.

Solution

Convert dependents to finagle-httpx.

RB_ID=746186"
atollena,2015-09-22 18:56:57,https://api.github.com/repos/twitter/finagle/git/commits/fe4722d382dc02719ceb5328c4585fbb245376df,fe4722d382dc02719ceb5328c4585fbb245376df,"[finagle-core] Log the Dtab on negative resolution

Problem
--

Services that receive a lot of traffic with overriddes have
their logs covered with ""service_name: Name resolution is
negative"". Those are often inocuous since they are the result of an
override's serverset becoming empty.

Solution
--

Log the local Dtab. It makes it easy to distinguish the inocuous case
(with local dtab) from the dangerous one (no local dtab).

RB_ID=738736"
jennazz,2015-09-22 01:03:37,https://api.github.com/repos/twitter/finagle/git/commits/272770a6cef23fbb691e9df7590408a7a00fb1bb,272770a6cef23fbb691e9df7590408a7a00fb1bb," added flags to use Locak Memcache

RB_ID=742338"
vkostyukov,2015-09-21 23:55:31,https://api.github.com/repos/twitter/finagle/git/commits/11e383a15934d70440cf6541c5de36d6e717be3b,11e383a15934d70440cf6541c5de36d6e717be3b,"finagle-httpx: Introduce Multipart for reading file uploads

Problem
The current version of the RequestDecoder (under httpx.util) doesn't
support reading file uploads from the multipart/form-data HTTP POST requests.

Solution
Introduce c.t.f.httpx.Multipart, a set of classes and methods for decoding
both FileUploads and Attributes from the multipart/form-data requests.

RB_ID=730102"
blackicewei,2015-09-21 19:53:02,https://api.github.com/repos/twitter/finagle/git/commits/30d8a2719ecdb2f5dfd212a87af636c4f1a98658,30d8a2719ecdb2f5dfd212a87af636c4f1a98658,"finagle-mux: make dark mode failure detector as default

Problem

We want to turn on failure detector as default for
all mux services.

Solution

To do this with extra caution, introduce a darkmode config
as a intermediate step, which sends pings and increase a
busy counter, but does not expose busy status to loadbalancer
yet.

RB_ID=744609"
kevinoliver,2015-09-21 19:14:52,https://api.github.com/repos/twitter/finagle/git/commits/3402dce4f8d6964fe9da3342f35fc48b62cdd906,3402dce4f8d6964fe9da3342f35fc48b62cdd906,"util-core: Remove deprecated methods from Var

Motivation

Both `c.t.util.Var` and `c.t.util.Event` were in need of some polish.

Solution

Cleanup code, fix warnings, and remove deprecated methods from `Var`.

 * To migrate `observe` and `foreach`, given `aVar.observe { t => somethingWith(t) }`
   you would write `aVar.changes.register(Witness({ t => somethingWith(t) }))`.

 * To migrate `observeUntil`, given `aVar.observeUntil(_ == something)`,
   you would write `aVar.changes.filter(_ == something).toFuture()`.

 * To migrate `observeTo`, given `aVar.observeTo(anAtomicReference)`,
   you would write `aVar.changes.register(Witness(anAtomicReference))`.

RB_ID=744282"
roanta,2015-09-21 00:07:05,https://api.github.com/repos/twitter/finagle/git/commits/8713db993ac0244a4e06f6b5ab1968d90f66ac0a,8713db993ac0244a4e06f6b5ab1968d90f66ac0a,"finagle-httpx: Add java forwarders for Status

RB_ID=743445"
wmorgan,2015-09-18 20:05:14,https://api.github.com/repos/twitter/finagle/git/commits/0475bd888d7c5c7007a28f90e4ddcef990617249,0475bd888d7c5c7007a28f90e4ddcef990617249,"Add Buoyant to ADOPTERS.md

Blatant self-promotion / selflessly doing my part to demonstrate adoption.

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=741476"
olix0r,2015-09-18 18:59:56,https://api.github.com/repos/twitter/finagle/git/commits/96e91a9b629edb408052cdfa5323ae6507e2a257,96e91a9b629edb408052cdfa5323ae6507e2a257,"finagle-core: Make ServiceFactoryCache publicly accessible.

Problem

The logic encapsulated by `ServiceFactoryCache` is generally useful to
applications that build clients in dynamic ways.

Solution

Modify the classifier on the `ServiceFactoryCache` definition to
`private[finagle]`.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=744208"
kevinoliver,2015-09-18 16:51:55,https://api.github.com/repos/twitter/finagle/git/commits/861c003643010bb621a030dfd90a85f9758291d6,861c003643010bb621a030dfd90a85f9758291d6,"finagle-httpx: Add Response.decodeBytes

Motivation

This API is useful in some cases when you have binary data.

Solution

Add decodeBytes which decodeString delegates to.

RB_ID=744318"
atollena,2015-09-18 02:05:37,https://api.github.com/repos/twitter/finagle/git/commits/4aa5d4dd1e0fcb3c2b0609247b7b069f7173f619,4aa5d4dd1e0fcb3c2b0609247b7b069f7173f619,"[finagle-core] Make Name.all private

Problem
--

There is no obvious way to combine a set of name into an address, because we have no
way to merge metadata. Name.all should not be used directly.

Solution
--

Make Name.all private to finagle. Remove some unused functions while I was at it.

RB_ID=743261"
suls,2015-09-17 22:38:51,https://api.github.com/repos/twitter/finagle/git/commits/e769040f9a2208792796c591b2bd89b4de75e687,e769040f9a2208792796c591b2bd89b4de75e687,"finagle-thrift: Add test for configuring TLS via stack param

Problem

PR #412 fixed the netty-pipeline for Thrift but didn't add a test.

Solution

Added end-to-end test-case for Thrift/TLS for stack based client and
server.

Result

Green ;)

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=743938"
dschobel,2015-09-17 21:32:58,https://api.github.com/repos/twitter/finagle/git/commits/a95d1c3e17da1b254fa4c1393d045ee1bc883ba9,a95d1c3e17da1b254fa4c1393d045ee1bc883ba9,"finagle-core: use orNull

use the more idiomatic orNull form instead of getOrElse(null)

RB_ID=729406"
kevinoliver,2015-09-17 17:47:31,https://api.github.com/repos/twitter/finagle/git/commits/bb072c072632a5d15863641cc70378aa0fa1c89d,bb072c072632a5d15863641cc70378aa0fa1c89d,"finagle-core: Fix lifecycle of meanweight gauge

Problem

The meanweight gauge that is associated with a
`TrafficDistributor.Distributor` is not explicitly closed when weight
classes change. This can manifest as a form of a memory leak as the
gauges will not be garbage collected as fast as they should be.

Solution

Move the gauge to `TrafficDistributor` and explicitly manage
updates of the size on changes and remove it on close.

RB_ID=743315"
kevinoliver,2015-09-17 01:49:15,https://api.github.com/repos/twitter/finagle/git/commits/548a988d95c1564d53f385b6ef709d41b36f2fec,548a988d95c1564d53f385b6ef709d41b36f2fec,"finagle-core: Export metrics from Netty's HashedWheelTimer

Motivation

There is currently no visibility into `DefaultTimer` which is a
service's primary `Timer`. This can help identify services that
may be blocking their timer or doing operations that may be better
offloaded to a separate thread pool.

Solution

  * Expose a stat that tracks the deviation from the expected time
    a task is expected to run at.

  * Expose a stat that tracks the number of pending tasks to be run.

Result

The fog is cleared. The metrics are exported at:

  ""finagle/timer/deviation_ms""
  ""finagle/timer/pending_tasks""

RB_ID=743233"
nshkrob,2015-09-16 02:43:46,https://api.github.com/repos/twitter/finagle/git/commits/ba19ab2143d976c8f7b7524ce606c5fac8dc3fa9,ba19ab2143d976c8f7b7524ce606c5fac8dc3fa9,"finagle: Set log level for Failure.rejected (Restartable) to DEBUG

Problem

SourceTrackingMonitor logs Failure.rejected as SEVERE. The condition is normal, and shouldn't be logged at SEVERE level.

Solution

Set log level for Failure.Restartable to DEBUG so it's logged at FINE ( = DEBUG) level only.
Use the Failure.logLevel in SourceTrackingMonitor.

RB_ID=727737"
nshkrob,2015-09-14 22:24:25,https://api.github.com/repos/twitter/finagle/git/commits/2cec510025d2237c9ce19f374ebe33afca0c8b89,2cec510025d2237c9ce19f374ebe33afca0c8b89,"finagle-memcached: Fix sbt compilation

Problem

sbt compilation fails in finagle-memcached:
[error] /Users/nshkrob/code/source/finagle/finagle-memcached/src/main/scala/com/twitter/finagle/Memcached.scala:24: object net is not a member of package com.twitter.finagle.memcached.java
[error] import java.net.SocketAddress

Solution

Import `_root_.java.net.SocketAddress` before `com.twitter.finagle.memcached._` to avoid the collision.

RB_ID=742320"
roanta,2015-09-14 17:09:28,https://api.github.com/repos/twitter/finagle/git/commits/6673b5f86a7767e877f0a92c0f56f873ec0273ef,6673b5f86a7767e877f0a92c0f56f873ec0273ef,"finagle-redis: Move to StackClient

Problem

We have one last client/server subprojects to move over
to StackClient before we can get rid of Default{Client, Server}.

Solution

Port finagle-redis to StackClient.

RB_ID=741103"
jcrossley,2015-09-12 05:53:42,https://api.github.com/repos/twitter/finagle/git/commits/b12582f437d604e8d6ef46d05c1f61d85b79a87f,b12582f437d604e8d6ef46d05c1f61d85b79a87f,"finagle/finagle-core: RetryingFilter can retry on successful requests

Problem
RetryingFilter allows retries on Throwables only. It would be useful to be able
to retry on successful responses that aren't sufficient.

Solution
RetryFilter now takes a RetryPolicy[(Req, Try[Rep])] to invoke on requests. The old
RetryingFilter, which took a RetryPolicy[Try[Nothing]], has been renamed to
RetryExceptionsFilter and is a subclass of RetryFilter.

RB_ID=732848
TBR=true"
kevinoliver,2015-09-11 18:19:48,https://api.github.com/repos/twitter/finagle/git/commits/5651a5f670210ae40c9302c8991a8acf46a8d96d,5651a5f670210ae40c9302c8991a8acf46a8d96d,"util-stats: Improve StatsReceiver.toString

Motivation

The current implemenations of `StatsReceiver.toString` use the default
implemenation from `Object.toString`. As an example:

    ""com.twitter.finagle.stats.StatsReceiver$$anon$1@1a6d1901""

This is not as helpful as it could be when looking at registries in
TwitterServer or in heap dumps.

Solution

Override `toString` for most of the standard `StatsReceivers`. This is
particularly useful when there is one or more `StatsReceiver.scope` in
use.

Result

More readable and useful output such as:

    ""InMemoryStatsReceiver/srv/thrift""
    ""MetricsStatsReceiver/clnt/auth""

RB_ID=740845"
roanta,2015-09-10 21:17:00,https://api.github.com/repos/twitter/finagle/git/commits/ce9244bbe8745c4592e8070adc555654ffdc8e10,ce9244bbe8745c4592e8070adc555654ffdc8e10,"finagle-memcached: Java compilation test

RB_ID=740382"
danielpcox,2015-09-09 22:16:13,https://api.github.com/repos/twitter/finagle/git/commits/53d69f32591be8085914d987e8aa23f8829dd97a,53d69f32591be8085914d987e8aa23f8829dd97a,"Use params when constructing Listeners in Thrift

Problem

Thrift Servers construct a Netty3Listener using just the pipeline and a
hardcoded name, ignoring the params.

Solution

Use the newer constructor that takes a pipeline and params.

Signed-off-by: Neuman Vong <nvong@twitter.com>
Github: Closes #412

RB_ID=739586"
jcrossley,2015-09-09 21:31:17,https://api.github.com/repos/twitter/finagle/git/commits/3bb3498be8a9687d30004e853ac7b6e756eaaf5d,3bb3498be8a9687d30004e853ac7b6e756eaaf5d,"finagle/finagle-core: ClientConfig params private to builder

Problem
The params in ClientConfig are only applied inside ClientBuilder,
they shouldn't be exposed since they just cause confusion.

Solution
Make ClientConfig params (except Retries, for historical reasons) private to builder.

RB_ID=727245
TBR=true"
kevinoliver,2015-09-09 16:27:59,https://api.github.com/repos/twitter/finagle/git/commits/258b68368c0f09159c0d00a450656a5f67fdad95,258b68368c0f09159c0d00a450656a5f67fdad95,"finagle-httpx: Add Date handling to HeaderMap

Motivation

Netty's Headers has special handling for `j.u.Date`, `j.u.Calendar`
and `j.l.Number` which have to manually done with finagle-httpx's
`HeaderMap`.

Solution

Add specialized methods for `Date` that have the equivalent behavior.

Notes:

  * `Calendar` was omitted because you can convert it to a `Date`
     via `Calendar.getTime`.

  * `Number` was omitted because its handling is just a trivial
    `Number.toString`.

Result

Users are more likely to have correctly formatted HTTP headers with
dates in them.

RB_ID=739003"
roanta,2015-09-09 16:23:28,https://api.github.com/repos/twitter/finagle/git/commits/577b41073c87a66f7482725a11f89a0f7ba80d02,577b41073c87a66f7482725a11f89a0f7ba80d02,"finagle-memcached: Unify stack based com.twitter.finagle.Memcached

Problem

finagle-memcached exposes several entry points which span across
several iterations of Finagle APIs. This makes it confusing to
construct and use.

Solution

Remove Default{Client, Server} based APIs and unify the constructor
which we recently added in com.twitter.finagle.memcached.Memcached.
This brings it up-to-speed with the protocol object convention.
I also took the opportunity to simplify the internal constructors too.
For example, `KetamaClient` is now collapsed into `KetamaPartitionedClient`.

From an API perspective, I removed the distinction between a ""ketama"" client
and a rich client. The user shouldn't care about the difference -- it will
just partition across shards when we get a name that is bound to multiple
hosts.

RB_ID=737959
TBR=true
USER_HOOK_ARGS=--i-am-evil -x macaw-swift/.hooks/PRESUBMIT/check-swoop"
kevinoliver,2015-09-09 15:54:59,https://api.github.com/repos/twitter/finagle/git/commits/2dda3a90f409a305c99f883da56897081463f0c2,2dda3a90f409a305c99f883da56897081463f0c2,"finagle-stress: Migrate to finagle-httpx

RB_ID=739925"
roanta,2015-09-08 23:24:13,https://api.github.com/repos/twitter/finagle/git/commits/8dadafbf3611af84d3a0a2dfb0aeb66c7a366ed9,8dadafbf3611af84d3a0a2dfb0aeb66c7a366ed9,"finagle-core: Introduce StdStackClient.filtered(filter)

Problem

When using with `StdStackClient` implementations that expose
a rich API on top of `Service`, it's difficult to compose filters
without understanding stack internals.

Solution

Add a filtered method that makes this trivial to do.

RB_ID=737942"
kevinoliver,2015-09-04 00:59:57,https://api.github.com/repos/twitter/finagle/git/commits/0a674904ebf186a9ef918396705bda2be6b50bf4,0a674904ebf186a9ef918396705bda2be6b50bf4,"finagle-stats: Handle misbehaving Gauges

Motivation

Evaluating a user's code for a `Gauge` can throw exceptions which then
destroys the entire response.

Solution

Capture the exceptions both in the underlying commons-metrics code on
a per Gauge basis as well as in finagle-stats code on an aggregate
basis.

Result

A single misbehaving Gauge will no longer wreck the entire response.

RB_ID=738643"
kevinoliver,2015-09-03 17:17:49,https://api.github.com/repos/twitter/finagle/git/commits/75c894d5e24440f046e353a153ce1daca56b5e01,75c894d5e24440f046e353a153ce1daca56b5e01,"Add various Java compatibility APIs

Motivation

Some APIs do not have nice usage from Java.

Solution

Introduce buddy objects to improve their usability.

RB_ID=737654"
rodrickbrown,2015-09-02 20:22:54,https://api.github.com/repos/twitter/finagle/git/commits/93ec79134426c0859717517704021aeab1985489,93ec79134426c0859717517704021aeab1985489,"Add OrchardPlatform to ADOPTERS.md

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=737919"
tarossi,2015-09-01 21:51:58,https://api.github.com/repos/twitter/finagle/git/commits/1dc81418793fdb6a122bfd36ec7fbf3a9facb333,1dc81418793fdb6a122bfd36ec7fbf3a9facb333,"New adopter: despegar.com

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=737492"
jtrobec,2015-09-01 21:11:45,https://api.github.com/repos/twitter/finagle/git/commits/c190de4a9a6fecbb7abb7608edb39e98227d6d7c,c190de4a9a6fecbb7abb7608edb39e98227d6d7c,"[scala 2.11] Add an override to Httpx.Server to work around a bug in scala 2.11
Problem

The finagle java demo for Httpx.Server fails to compile against scala 2.11 built libs, with a missing method error. The issue is related to the scala compiler producing bytecode that sometimes has methods from traits returning type Object rather than the correct type (see: https://issues.scala-lang.org/browse/SI-8905)

Solution:

Work around the issue by adding an override in the extending class that simply calls the super.

RB_ID=737010"
luciferous,2015-08-29 23:34:14,https://api.github.com/repos/twitter/finagle/git/commits/5cac6cbf6148f3b24bfb000f7891797f46eb452b,5cac6cbf6148f3b24bfb000f7891797f46eb452b,"Twitter Server on Finagle HTTPx

Problem

Twitter Server is on Finagle HTTP, but Finagle HTTP is all but dead.

Solution

Finagle HTTPx is the future. Get Twitter Server on Finagle HTTPx and
update everyone affected by the change.

RB_ID=736032
TBR=true"
atollena,2015-08-29 02:40:58,https://api.github.com/repos/twitter/finagle/git/commits/3e53ef534a1040b2fb5f5395b1e2f645de46a0e2,3e53ef534a1040b2fb5f5395b1e2f645de46a0e2,"[finagle-core] Remove empty file TracerFilter

I keep opening this file hoping to find useful things in it. The one I'm
usually looking for is TraceInitializerFilter.scala.

RB_ID=735937"
jcrossley,2015-08-28 22:00:52,https://api.github.com/repos/twitter/finagle/git/commits/2ad5c2e88602c20004c6c1a5945d81da91e76e1a,2ad5c2e88602c20004c6c1a5945d81da91e76e1a,"finagle/finagle-core: ServerConfig params private to builder

Problem
The params in ServerConfig are only applied inside ServerBuilder,
they shouldn't be exposed since they just cause confusion.

Solution
Make ServerConfig params private to builder.

RB_ID=730865"
jcrossley,2015-08-28 21:54:30,https://api.github.com/repos/twitter/finagle/git/commits/d053d4c26b26286d55eb3eb771c63e5210836abe,d053d4c26b26286d55eb3eb771c63e5210836abe,"finagle/finagle-core:: Make FailureAccrualFactory and FailFastFactory log
remoteAddress on mark dead

Problem
The remote address is not logged when the Failure Accrual Factory or Fail Fast Factory mark a connection dead. This information would be helpful.

Solution
The remote address of the connection is now logged.

RB_ID=727578"
nshkrob,2015-08-28 21:48:32,https://api.github.com/repos/twitter/finagle/git/commits/d6bc0fc8ee297b31186ed596df81141e97ee4956,d6bc0fc8ee297b31186ed596df81141e97ee4956,"finagle-thrift: Update docs for service-per-endpoint

Problem

Finagle-thrift docs at http://twitter.github.io/finagle/guide/Protocols.html#using-finagle-thrift need to be updated after the service-per-endpoint scrooge patch: https://github.com/twitter/scrooge/commit/3fbb635936d82c00456b332647ea9136841f3227

Solution

Update the docs.
Bring back the ThriftServiceIfaceExample.scala that the doc is based on.

RB_ID=734564"
travisbrown,2015-08-27 22:20:46,https://api.github.com/repos/twitter/finagle/git/commits/de123b8f9d074c4e345ebd67e1a0e870bb921544,de123b8f9d074c4e345ebd67e1a0e870bb921544,"Release CSL stack

RB_ID=735615"
travisbrown,2015-08-27 19:18:16,https://api.github.com/repos/twitter/finagle/git/commits/7677c980d80101a1b7981548a99431b77f6c7a28,7677c980d80101a1b7981548a99431b77f6c7a28,"Update dependency and plugin versions in SBT builds

Problem

Some of the dependency and plugin versions in our SBT builds were not
up-to-date. These builds also still used non-SSL maven.twitter.com
URLS.

Solution

Update versions and URLs in builds and docs. For Scrooge in particular
this involved some additional changes because recent versions of some
of the plugins it uses have switched to SBT's auto-plugin system.

RB_ID=735075"
ianoc,2015-08-27 17:58:04,https://api.github.com/repos/twitter/finagle/git/commits/41e08dc149677cb0cbbebaf9636650a9b2c497f0,41e08dc149677cb0cbbebaf9636650a9b2c497f0,"2.11 fixes: Another usage of annotation.target

RB_ID=735529"
ianoc,2015-08-27 17:30:21,https://api.github.com/repos/twitter/finagle/git/commits/34043be6962f1a38e008bdf42fad6a54600879ee,34043be6962f1a38e008bdf42fad6a54600879ee,"- Case classes must have an empty args constructor
- 0 prefixed integers are blocked as part of not interpreting them as octal
- Updated some annotation imports from deprecated ones

RB_ID=735382"
luciferous,2015-08-27 09:22:03,https://api.github.com/repos/twitter/finagle/git/commits/07699f02909094cf36da4672c1f6b8e4ba8dbd44,07699f02909094cf36da4672c1f6b8e4ba8dbd44,"Rename finagle-memcachedx to finagle-memcached

Problem

finagle-memcachedx was created to aid the transition from finagle-memcached.
Now that the transition is complete, we can drop the x.

Solution

Rename finagle-memcachedx to finagle-memcached.

RB_ID=730337
TBR=true
USER_HOOK_ARGS=--i-am-evil -x macaw-swift/.hooks/PRESUBMIT/check-swoop"
kevinoliver,2015-08-25 01:10:21,https://api.github.com/repos/twitter/finagle/git/commits/8bf6d259296e2dc0d223abc4b26cb48a04c0406b,8bf6d259296e2dc0d223abc4b26cb48a04c0406b,"Motivation

`MetricsBucketedHistogram` have a larger memory footprint than
necessary.

Solution

Store the data for the previous window's snapshot in a mutable struct
that can be used to create an immutable `Snapshot` as needed.

Result

Memory footprint drops to 7.4 Kb from 14.5 Kb per instance.

Due to the change in synchronization, `add` improves in performance.

RB_ID=733126"
kevinoliver,2015-08-25 00:55:04,https://api.github.com/repos/twitter/finagle/git/commits/f29297b8cf48958ef37b64fd8c9d0229d575d922,f29297b8cf48958ef37b64fd8c9d0229d575d922,"finagle-core: Add Java API for Resolver.{eval,evalLabeled}

Problem

Using `c.t.f.Resolver.{eval,evalLabeled}` from Java leads to funny
$-signs and MODULE's in the callers code.

Solution

Introduce a Java API facade, `c.t.f.Resolvers` to hide that.

RB_ID=733335"
jcrossley,2015-08-24 17:47:41,https://api.github.com/repos/twitter/finagle/git/commits/fde15f447cf1cab92e893b8fbf8f9378c6d9f00a,fde15f447cf1cab92e893b8fbf8f9378c6d9f00a,"finagle/finagle-mysql: Support MySQL logins with no password

Problem
finagle-mysql does not support logins with no password.

Solution
Add support for MySQL logins with no password.

RB_ID=732635"
dschobel,2015-08-21 06:33:49,https://api.github.com/repos/twitter/finagle/git/commits/a7f431719fc40689ee817e489cd0e67c8eabf0f4,a7f431719fc40689ee817e489cd0e67c8eabf0f4,"port macaw and finatra to finagle-httpx

RB_ID=728679
TBR=true
USER_HOOK_ARGS=--i-am-evil -x .hooks/PRESUBMIT/validate-config-ini"
kevinoliver,2015-08-20 20:54:21,https://api.github.com/repos/twitter/finagle/git/commits/4d60ae731c39f8bcb5a5417384babcf2e0b517d4,4d60ae731c39f8bcb5a5417384babcf2e0b517d4,"util-hashing, finagle-memcached: Improve performance

Problem

Performance of cache clients can be optimized in terms
or CPU and allocations.

Solution

* finagle-memcached: Introduce `NotFound` which can be faster
  in some cases than `keys -- hits` for calculating cache misses.

* finagle-memcached: Constants for `c.t.f.memcachedx.protocol.Response`
  objects.

* finagle-memcached: Constant for `GetResult.Empty`

* finagle-memcached: Prefer ""builders"" when constructing
  immutable data structures.

* finagle-memcached: `KeyValidation.init` lifted the key validation
  function and improve `invalidByteIndex`.

* util-hashing: Avoid wrapping in an unnecessary `ByteBuffer` in
  `Hashable.MD5_LEInt`.

* util-hashing: Avoid unnecessary `Option` creation in
  `KetamaDistributor.mapEntryForHash`.

Result

Improved allocations in a production use case.

RB_ID=731829"
DuncanHills,2015-08-20 20:23:59,https://api.github.com/repos/twitter/finagle/git/commits/34ea8bb66f8bfffa260c55d2fa6cf8f30cbefb13,34ea8bb66f8bfffa260c55d2fa6cf8f30cbefb13,"[finagle-exp] fire backup request in BackupRequestFilter if first attempt fails before the planned wait period

Problem

Currently the BackupRequestFilter passes on failures from the original request, if they happen before the backup request is fired due to its histogram/quantile-based timer. This can result in reduced resiliency for clients switching from a simple RetryFilter to a BackupRequestFilter.

Solution

The backup request is now fired if the original request fails, regardless of timing. Currently, this happens when any failure is encountered by this filter, but eventually it may take a RetryPolicy-like object for configuration.

RB_ID=714074"
atollena,2015-08-19 00:06:15,https://api.github.com/repos/twitter/finagle/git/commits/0e55ed13ba0e0fc4a09c330e316ed5a1ffcc6ca5,0e55ed13ba0e0fc4a09c330e316ed5a1ffcc6ca5,"[util-core] `dedup` and `dedupWith` methods for Event

Problem
--

When registering callbacks on an `Event`, we often want to avoid
unnecessary work by ignoring updates that are not relevant. It is
often particularly useful to ignore update when the value did not
change.

Solution
--

Add two methods to `Event`: `dedup` and `dedupWith` to mask
updates. `dedup` filters updates that do not change the
underlying value (according to object equality), while
`dedupWith` allows to pass a custom predicate.

Result
--

We can register to an event stream without being notified of
events that are not of interest.

RB_ID=717437"
kevinoliver,2015-08-17 22:10:06,https://api.github.com/repos/twitter/finagle/git/commits/a3e43119ec5ad9dbc934f3841b8cd25e429d7937,a3e43119ec5ad9dbc934f3841b8cd25e429d7937,"finagle-core,mux: Various performance improvements

Improve performance and/or allocations:

* P2C.Distributor.pick: eliminate calls to ServiceFactoryProxy.equals

* Flags.apply: Use a constant

* Trace.nextId: Eliminate the closures

* TrafficDistributor.Distributor.status: lift status function into
  member variable

* mux.ClientDispatcher.dispatch: Use match instead of getOrElse

RB_ID=729150"
nshkrob,2015-08-17 18:58:50,https://api.github.com/repos/twitter/finagle/git/commits/3b3ef25974213d530fbfa934200c5f1161984ef4,3b3ef25974213d530fbfa934200c5f1161984ef4,"Reduce allocations in filter andThen service.

Problem

Unnecessary Service.rescue getting called on every request.

Solution

Reuse the Service.

RB_ID=730199"
kevinoliver,2015-08-12 19:31:36,https://api.github.com/repos/twitter/finagle/git/commits/05925355a39e92cb80750220c1a4951f45ba664a,05925355a39e92cb80750220c1a4951f45ba664a,"finagle-stats: Make the test deterministic

Problem

MetricsBucketedHistogramTest would fail occasionally.

This was due to the window check being forgiving about
coming in up to 1 second before the snap after as well
as the clock advancing by 61 seconds.

Solution

Pick a time that should always work.

RB_ID=727835"
luciferous,2015-08-12 19:27:00,https://api.github.com/repos/twitter/finagle/git/commits/01f90d879525d16783b11e8a1f95333d66d70b68,01f90d879525d16783b11e8a1f95333d66d70b68,"finagle-httpx: Decoder for POST requests

Problem

Netty has a utility for decoding the body of a POST request into a map
of string to values.

Solution

Provide a thin wrapper around this decoding utility. The wrapper limits
functionality, but keeps Netty types sealed.

RB_ID=723835"
kevinoliver,2015-08-12 00:18:17,https://api.github.com/repos/twitter/finagle/git/commits/9348c37bf22dc5d00025c12a5feccca986974d1b,9348c37bf22dc5d00025c12a5feccca986974d1b,"finagle-memcached: Fix typo in doc

Fix typo in scaladoc for `AbstractDecoder.decodeLine`

RB_ID=727843
TBR=true"
codeferret,2015-08-07 21:59:27,https://api.github.com/repos/twitter/finagle/git/commits/8d7d30e8ff4d22c22b104eab44d7dc7a23524341,8d7d30e8ff4d22c22b104eab44d7dc7a23524341,"finagle-serversets: Change serverset at most every N seconds in stabilizer

Please provide a meaningful and concise commit message for
your change. The automatically generated one below is taken from
the ReviewBoard summary and description:

finagle-serversets: Change serverset at most every N seconds in stabilizer

Problem

During periods of high serverset churn serverset adds will be triggered
for each serverset change, though removes are ""stabilized"". This results
in more updates than neccessary.

Solution

Batch serverset updates. Only update serversets every N seconds so
that changes are batched during periods of high churn.

Result

Serversets update at most once per N seconds. Default of 5 seconds.

RB_ID=719742"
kevinoliver,2015-08-07 19:01:38,https://api.github.com/repos/twitter/finagle/git/commits/15c0ae9dda9ea7932bb200870a69723ca29fec10,15c0ae9dda9ea7932bb200870a69723ca29fec10,"finagle-stats: Stop exporting stddev

Problem

We were exporting stddev as a constant 0.0 which can be confusing.

Solution

Stop exporting it.

RB_ID=726309"
fasholaide,2015-08-07 03:34:55,https://api.github.com/repos/twitter/finagle/git/commits/de45f581ba9b2ac1bd47252945d45d687f23233c,de45f581ba9b2ac1bd47252945d45d687f23233c," Implemented CAS and GETS Commands in the Interpreter Class of finagle-memcachedx module.

RB_ID=723947"
atollena,2015-08-07 01:38:46,https://api.github.com/repos/twitter/finagle/git/commits/f5b6ec05b27616f4af13af3a96c0b7622ec6fa17,f5b6ec05b27616f4af13af3a96c0b7622ec6fa17,"[finagle-serverset] Properly cache entries and vectors

Problem
--

Registering new observers to a given server set causes the library to
throw away its cache, resulting in unnecessary reads to zookeeper. In
addition, the fact that pending vector nodes are treated as weight one
can cause lots of server set changes to be triggered, and a lot of
unnecessary bookeeping in the load balancer.

Solution
--

Use Var.async to ensure simultaneous observations of the server set does
not cause eviction of the memo tables. Surface `Pending` and `Failed`
status of the vector node in the resulting activity, instead of
defaulting to weight 1.

Result
--

Caching works properly. Reduced number of ZooKeeper reads required to
update server set. No additional work is created for the load balancer
when Vector reads are pending.

RB_ID=726208"
blackicewei,2015-08-06 19:56:26,https://api.github.com/repos/twitter/finagle/git/commits/da1b2fe0ce0590503805269c4ca034a328b7ab0b,da1b2fe0ce0590503805269c4ca034a328b7ab0b,"finagle-mux: move FailureDetector config out of exp package

A few clean up around FailureDetector:
- move failureDetector config out of exp package
- rename the detector implementation file
- add metrics doc

RB_ID=725350"
atollena,2015-08-06 18:21:00,https://api.github.com/repos/twitter/finagle/git/commits/b7c68b85c3b7e0ebd0eb7a58d9a6ab4c85181e58,b7c68b85c3b7e0ebd0eb7a58d9a6ab4c85181e58,"[finagle-core] Properly manage balancer gauges lifecycle

Problem
--

We recently changed the way load balancers handle weights: we now
create a new load balancer for each weight class. Each load balancer
exposes stats (size, available, etc.), but since those are added via
`addGauge`, the load balancer stats exposed are summed over any load
balancer object that has not been garbage collected yet.

Solution
--

Properly manage gauge lifecycle by calling `gauge.remove()` when
`TrafficDistributor` or `Balancer` close.

Result
--

More accurate loadbalancer stats.

RB_ID=725181"
kevinoliver,2015-08-05 23:45:20,https://api.github.com/repos/twitter/finagle/git/commits/6000c1ba2755c6f102a12fb245799b0c3efe6a26,6000c1ba2755c6f102a12fb245799b0c3efe6a26,"finagle: Various allocation improvements

Small changes across a wide variety of code to reduce allocations:

* core: PipeliningDispatcher.loop — lift a constant function and
  combine `Future` combinators into a single `respond` block.

* core: P2C.Distributor.pick — avoid unnecessary allocations from
  Scala's `Tuple2` sugar and Java's `Integer` boxing.

* memcached: AbstractDecoder.decodeData — use a
  `ChannelBufferIndexFinder` to find ""\r\n""s.

* memcached: CommandToEncoding — use the fact that most commonly
  flags and expiry will be 0 and as such the `Buf` can be made a
  constant.

* memcached: CommandToEncoding — replace `Seq(Constant) ++ otherSeq`
  with `Constant +: otherSeq`.

* mux: Message.{T,R}dispatch.buf — avoid some `Tuple2` allocations and
  use manual loop iteration.

* mux: Processor — lift a constant function and avoid `Tuple`
  destructuring sugar allocations.

RB_ID=724940"
kevinoliver,2015-08-05 00:16:58,https://api.github.com/repos/twitter/finagle/git/commits/68b877500b4c7c553ce8b23b0c6c14c32f695603,68b877500b4c7c553ce8b23b0c6c14c32f695603,"finagle-core: Introduce Context.getOrElse

Problem

`c.t.f.context.Context` does not have a `getOrElse` method leading to
usage patterns that could improved. Sometimes, `Context.contains`
followed by `Context.apply` is used, but this leads to two linear
scans of the `Context` chain. Alternatively, `Context.get` is used
which leads to an allocation of a `Some` when the key is defined in
the context.

Solution

Introduce `Context.getOrElse[A](key, Key[A], orElse: () => A): A`
which provides a clear and performant solution to both of those
patterns.

Result

Improvement in runtime performance or allocations depending on the
usage pattern.

RB_ID=724386"
ruttenberg,2015-08-04 23:20:50,https://api.github.com/repos/twitter/finagle/git/commits/50b055277a8b33c5bfe042f2c650731e98398aae,50b055277a8b33c5bfe042f2c650731e98398aae,"Fix sbt errors that occur when copying build.sbt from this page.

Signed-off-by: Nik Shkrob <nshkrob@twitter.com>

RB_ID=725333"
dschobel,2015-08-04 20:02:41,https://api.github.com/repos/twitter/finagle/git/commits/5ecfa03c405bee7fff670c512e5bf25c1b370f8c,5ecfa03c405bee7fff670c512e5bf25c1b370f8c,"finagle-core: java-compat for LocalContext

Problem

It's impossible to create a context key from java.

Solution

Add java-friendly key constructor.

RB_ID=724973"
blackicewei,2015-08-03 06:22:23,https://api.github.com/repos/twitter/finagle/git/commits/9d90948d948c7bef52638c687bd5d72938fd73b0,9d90948d948c7bef52638c687bd5d72938fd73b0,"finagle: use max ping instead of ema in FailureDetector

Problem

Services has a long tail in ping latency. Latency excceeds
Ema easliy, thus marks Status.Busy unnecessarily when remote
peers are in a good state.

The default number of pings is too many compared with the number
of requests served on the same session. This costs services
unnessary CPUs.

Solution

Use a much longer default ping interval. Since failureDetector
ping in seconds intervals; and ping latency is in ms or us, use
max ping latency as a cutoff to mark busy.

RB_ID=693482"
luciferous,2015-07-31 19:19:33,https://api.github.com/repos/twitter/finagle/git/commits/80b576449682d0237fa1ddc57d626274333afc97,80b576449682d0237fa1ddc57d626274333afc97,"finagle-httpx: remove Method.unapply

Problem

Method.unapply is inconsistent with case class semantics.  It's
unnecessary now that toString is an adequate extractor for the name of
the custom type.

Solution

Remove unapply.

RB_ID=722913"
kevinoliver,2015-07-31 17:32:47,https://api.github.com/repos/twitter/finagle/git/commits/6da7e52939c193092597cb1f22bcc59d1f0efe1a,6da7e52939c193092597cb1f22bcc59d1f0efe1a,"finagle-httpx: Improve Version.toString

Problem

`c.t.f.httpx.Version.toString` is simply the name of the object.

Solution

Customize the `toString` method to return the name of the protocol.
For example, ""HTTP/1.1"".

RB_ID=723340"
luciferous,2015-07-29 22:20:22,https://api.github.com/repos/twitter/finagle/git/commits/3aa8fd99212e3932efce9939513fd2bd331d065f,3aa8fd99212e3932efce9939513fd2bd331d065f,"finagle-httpx: reason phrase for status

Problem

The common HTTP statuses have an associated reason phrase.
It's convenient for applications to use this instead of the
toString of the case class.

Solution

Map the common statuses to reason phrases, exposed using
the method `reason` on the status.

Result

`println(Status.HttpVersionNotSupported.reason)` prints
""HTTP Version Not Supported"" instead of the previous
""HttpVersionNotSupported"".

For statuses without a common reason phrase, we fall back
to a generic phrase for the class of status (Informational,
Successful, Redirection, etc...).

RB_ID=722261"
vkostyukov,2015-07-29 17:21:40,https://api.github.com/repos/twitter/finagle/git/commits/b12af3406db2342933ab380bd5f1c616a8d37bf4,b12af3406db2342933ab380bd5f1c616a8d37bf4,"finagle: Replace JSR166y with Java 7 API

RB_ID=720903"
luciferous,2015-07-29 07:20:16,https://api.github.com/repos/twitter/finagle/git/commits/2da8c3dd0e143cb72d813960a7b8bfd60ef7001d,2da8c3dd0e143cb72d813960a7b8bfd60ef7001d,"finagle-httpx: Give Method an all caps string representation

Problem

1. It's conventional for HTTP methods to be represented in all caps.
2. HTTP methods are case sensitive, but the Method constructor ignores case.

Solution

1. Give common method types an all caps string representation.
2. Observe case when constructing custom types.

RB_ID=721630"
roanta,2015-07-28 22:35:05,https://api.github.com/repos/twitter/finagle/git/commits/b29d2a8c62b6c15ba2e0d3c51807baff1f88e958,b29d2a8c62b6c15ba2e0d3c51807baff1f88e958,"finagle-core: drop queue tail with a Failure.rejected in RequestSemaphoreFilter

Problem

RequestSemaphore filter has an unbounded queue when it has exceeded
its max concurrency.

Solution

Set a default max waiters of 0 which effectively drops the tail when
we exceed our max concurrency. The failed requests are wrapped in
`Failure.Restartable` exceptions which are handled gracefully by
protocols that support it (e.g. Http, ThriftMux).

RB_ID=696934
TBR=true"
roanta,2015-07-28 01:35:26,https://api.github.com/repos/twitter/finagle/git/commits/8c1c8e085bb361f0bf7cabe08633a1e7f062388c,8c1c8e085bb361f0bf7cabe08633a1e7f062388c,"finagle-core: decouple weight interpretation from load balancers

Problem

A nodes weight is interpreted proportionally to its load. This is problematic because
an accurate measure of load may behave in a non-linear fashion which leads to the
following issues:

- It is difficult to adjust the weight when load behaves non-linearly.

- Clients may be deployed with various load metrics which causes a
  non-uniform interpretation of weights.

- We would like to be free to measure load in the balancers using
  arbitrary metrics.

Solution

Instead, we interpret weight proportional to offered load. We introduce the TrafficDistributor
which partitions the collection of endpoints into subsets where each subset shares the same weight.
A subset receives a new load balancer which is responsible for servicing its requests.
The weights are normalized by the number of nodes in the subset to maintain equity.
Finally, when picking a node, we first roll a biased die to select the subset and then
route traffic to its load balancer. This effectively moves the weight distribution one
layer above load distribution.

Results

Weights are no longer tied to load, but they can still be thought of as rough multipliers
for traffic. For example, a node with weight 2.0 should receive roughly twice the traffic
that a node with weight 1.0 will receive.

RB_ID=677416"
vkostyukov,2015-07-27 23:14:51,https://api.github.com/repos/twitter/finagle/git/commits/65df1512aadc8b79871a6dcafbbd210fd088b055,65df1512aadc8b79871a6dcafbbd210fd088b055,"Release CSL Stack

RB_ID=721327"
luciferous,2015-07-27 21:19:21,https://api.github.com/repos/twitter/finagle/git/commits/f60e9d821e73b3e39e5ba67655d896f4ce1fe88d,f60e9d821e73b3e39e5ba67655d896f4ce1fe88d,"finagle: rename FailedFast onOrOff to enabled

Problem

`onOrOff` is a confusing name for a boolean parameter.

Solution

Rename it to `enabled`.

RB_ID=720781
TBR=true
USER_HOOK_ARGS=--i-am-evil -x macaw-swift/.hooks/PRESUBMIT/check-swoop"
mariusae,2015-07-27 19:34:20,https://api.github.com/repos/twitter/finagle/git/commits/33df2bd74e7bab2b38e430637b39a46b0134682d,33df2bd74e7bab2b38e430637b39a46b0134682d,"finagle: make Resolve.evalLabeled public

This is useful for protocol implementations outside of Finagle proper.

RB_ID=721075"
dschobel,2015-07-27 18:39:56,https://api.github.com/repos/twitter/finagle/git/commits/5500a97d531a684adcaa1170a73878c987737d96,5500a97d531a684adcaa1170a73878c987737d96,"finagle-swift|finagle-serversets: remove bogus netty dep

RB_ID=720848"
kevinoliver,2015-07-27 16:51:23,https://api.github.com/repos/twitter/finagle/git/commits/81fbeca9ef57a767bba8aa8dce509e0da85d8fff,81fbeca9ef57a767bba8aa8dce509e0da85d8fff,"finagle-core: Improve BufChannelBuffer.apply

Problem

The construction of a `ChannelBuffer` via `BufChannelBuffer.apply`
for two cases of `Buf`s can be improved.

Solution

 * Remove an unnecessary `ChannelBuffer.slice` in the case of a
   `Buf.ByteArray.Owned`.

 * Add a case for `Buf.ByteBuffer.Owned` and pass its ByteBuffer
   directly to `ChannelBuffers.wrappedBuffer`.

RB_ID=720329"
vkostyukov,2015-07-25 01:53:10,https://api.github.com/repos/twitter/finagle/git/commits/207d5155de059e05088e7cd5579ea32a89991f1c,207d5155de059e05088e7cd5579ea32a89991f1c,"finagle|util: Use ClassTag instead of ClassManifest

RB_ID=720455"
kevinoliver,2015-07-24 22:26:45,https://api.github.com/repos/twitter/finagle/git/commits/d7b94b5b38e0294df7d5bb5c7d2110f3540a098d,d7b94b5b38e0294df7d5bb5c7d2110f3540a098d,"finagle-stats: Fix race condition between latching and snapshots

Problem

RB 717647 introduced a race condition to `MetricsBucketedHistogram`
between latching and snapshots which could lead to snapshots returning
empty data.

1. Snapshot thread, Ts, comes in with current=a and grabs prev=b.
2. Latching thread, Tl, comes in with current=a, sets next=b,
   then does b.clear and sets current=b.
3. Snapshot thread Ts resumes running, but b is now empty.

Solution

Make rolling over to new windows the responsibility of threads calling
into `snapshot`.

Result

Threads should have a safe and consistent view.

RB_ID=719773"
tonyd3,2015-07-24 04:54:44,https://api.github.com/repos/twitter/finagle/git/commits/d5fae2035578223070f52a5aa20e544d512e092e,d5fae2035578223070f52a5aa20e544d512e092e,"Fix memcached error parsing

Problem
parseErrorMessage only returns the last string, instead of the entire message.
i.e. FAT [20150721-20:26:43.792] memcache: com.twitter.finagle.memcached.protocol.ServerError: object

Solution
Parse all of the tokens instead of the head.

Result
com.twitter.finagle.memcached.protocol.ServerError: out of memory storing object

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=719993"
nshkrob,2015-07-23 01:28:44,https://api.github.com/repos/twitter/finagle/git/commits/ba43705062f1b333e8a7befed3c0979d94d51798,ba43705062f1b333e8a7befed3c0979d94d51798,"scrooge: Generate a finagle Service per thrift method

Problem

Scrooge-generated services are not finagle Services, so they do not allow using Filters.

Solution

Generate a wrapper service that delegates to the underlying thrift service.

Result

For a thrift service, e.g.

service Logger {
  string log(1: string message, 2: i32 logLevel);
  i32 getLogSize();
}

Scrooge generates:

class Logger$ServiceImpl(underlying: Logger[Future]) {
  val log: com.twitter.finagle.Service[(String, Int), String] = ...
  val getLogSize: com.twitter.finagle.Service[Unit, Int] = ...
}

Usage in finagle:

val client = ThriftMux.newServiceIface(Logger, ""localhost:8080"")

client.log(Logger.Log.Args(""message"", 1)) onSuccess {...}

This avoids the reflection-based initialization (ThriftRichClient) by collecting the relevant types during generation.

Compatibility constructor to build a FutureIface from a ServiceIface:

val loggerFutureIface = Logger.newFutureIface(loggerServiceIface)
loggerFutureIface.log(""msg"")

Client configuration is done by e.g.

ThriftMux.client.withClientId(ClientId(""asdf"")).newServiceIface(Logger, dest)

RB_ID=663690"
roanta,2015-07-22 19:18:14,https://api.github.com/repos/twitter/finagle/git/commits/b14f2328c9b591bb18cb6fe69d411c9e6cb12d06,b14f2328c9b591bb18cb6fe69d411c9e6cb12d06,"finagle-mysql: Add missing parameter case to avoid NPE in Parameter#unsafeWrap

Problem

Parameter.unsafeWrap can throw an NPE if the unknown parameter
is null.

Solution

Special case null to Parameter.NullParameter.

RB_ID=718399"
thirstycrow,2015-07-22 18:19:22,https://api.github.com/repos/twitter/finagle/git/commits/206eb46d33a2ee0c82defdfbe40e0b5bb8cb2a98,206eb46d33a2ee0c82defdfbe40e0b5bb8cb2a98,"finagle-core: LoadService may fail with StackOverflowError

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=718937"
kevinoliver,2015-07-21 23:17:07,https://api.github.com/repos/twitter/finagle/git/commits/5f9426cbb7af1511b51f1628804214a4ad6951e0,5f9426cbb7af1511b51f1628804214a4ad6951e0,"finagle-stats: Improve perf of Stat.add

Problem

The cost of finagle-stats' `Stat.add()` is too expensive.

Solution

Various changes that drastically improve the performance:

* The separate tracking of average/min/max is now part of
  BucketedHistogram. This drops support for standard deviation
  which is too expensive to track.

* Member variables in BucketedHistogram are `private[this]`.

* MetricsBucketedHistogram's windowing is faster, simpler and
  more space efficient. It uses 2 windows, current and previous
  while the previous implementation used 4: 3 for previous plus
  1 current.

Result

The performance is now more or less bound to the performance
of `Arrays.binarySearch`.

RB_ID=717647"
vkostyukov,2015-07-21 20:53:05,https://api.github.com/repos/twitter/finagle/git/commits/de232ad8a5df5708407da6ec3bc6d0e262554444,de232ad8a5df5708407da6ec3bc6d0e262554444,"finagle: Add query benchmark for CommonsStatsReceiver (upgrade JMH)

RB_ID=717603"
vkostyukov,2015-07-21 19:53:52,https://api.github.com/repos/twitter/finagle/git/commits/9c76b6a2271c782c76b23a4e39d37427d15cfeca,9c76b6a2271c782c76b23a4e39d37427d15cfeca,"finagle-stats: Allow to pass separator (as flag) to MetricsStatsReceiver

RB_ID=717129"
spockz,2015-07-21 18:07:49,https://api.github.com/repos/twitter/finagle/git/commits/c8490355e6182f5fe778aa94add0470d4a9c5e4e,c8490355e6182f5fe778aa94add0470d4a9c5e4e,"Changed localhost to 127.0.0.1 to prevent ipv6 ip

Problem

Tests fail in environments that have both IPv4 and IPv6 interfaces.
This is because the endpoints are added to the load-balancer twice and
therefore the tests fail that expect to observe only a single message.

Solution

Change localhost to 127.0.0.1 in the affected tests.

Signed-off-by: Neuman Vong <nvong@twitter.com>
Github: Closes #353

RB_ID=718181"
luciferous,2015-07-21 17:36:36,https://api.github.com/repos/twitter/finagle/git/commits/bc9b0eb13dd87e499ed49f26c85a79ea814d7ee6,bc9b0eb13dd87e499ed49f26c85a79ea814d7ee6,"Introduce ServiceFactorySocketAddress so that Names may bind local services

Problem:

When building a client using a Name--i.e. via Dtabs--there is no mechanism to
cause a client to bind to a local Service reference.

Imagine, for example, a program `zoo` that exposes exposes an http
endpoint `/api/birds`; and satisfying these requests requires a
downstream client to a service `/s/birds`.

We may typically run `zoo` with a base dtab like:

    /s => /$/io.bouyant.sd

`/s/birds` may be served by a downstream service, but it may also be
served from directly within the process (e.g. by an in-memory buffer).
This situation may arise when migrating functionality between processes
(e.g. decomposing a service) or mocking downstream clients. In these
cases, we want these requests routed in-process with a dentry like:

    /s/birds => /$/io.buoyant.birds.local

The workaround today is to have zoo bind to an ephemeral port and
control redirects to that ephemeral port:

    /localPort => /$/inet/127.1
    /s/birds => /localPort$/${birdsPort}

However, this approach incurs a full serialization roundtrip.

Solution:

Introduce a SocketAddress type that encapsulates a ServiceFactory.
StdStackClient's default endpointer bypasses the client's Transporter
when such an address is encountered. In the example described above, we
bypass the entire networking stack for local requests.

Result:

Local services may be named.

Signed-off-by: Neuman Vong <nvong@twitter.com>
Github: Closes #396

RB_ID=717989"
svetlyak40wt,2015-07-21 16:43:23,https://api.github.com/repos/twitter/finagle/git/commits/d1d0c4155180f189638db1d7b0094816c3f8c6e5,d1d0c4155180f189638db1d7b0094816c3f8c6e5,"finagle: Fix 6.26.0 header level in CHANGES

Signed-off-by: Vladimir Kostyukov <vkostyukov@twitter.com>

RB_ID=717983"
ity,2015-07-21 00:30:52,https://api.github.com/repos/twitter/finagle/git/commits/ecbe74d4cf3c40e2b1136637a5c8847e1f76b66f,ecbe74d4cf3c40e2b1136637a5c8847e1f76b66f,"Switch Source to Monobuild - go/monobuildproject

RB_ID=709801
NO-QUEUE=true"
vkostyukov,2015-07-20 22:08:53,https://api.github.com/repos/twitter/finagle/git/commits/038dc3f2f3bdbdb50d2dd227c969a3fcceebd5f3,038dc3f2f3bdbdb50d2dd227c969a3fcceebd5f3,"finagle: Kill RichChannelFuture

RB_ID=717720"
cacoco,2015-07-17 19:13:11,https://api.github.com/repos/twitter/finagle/git/commits/7faddd55b54a1eda1e6c5fb9deae16b17f478250,7faddd55b54a1eda1e6c5fb9deae16b17f478250,"     site: Update Finatra project link and blurb

     Problem

     The finagle/site/index.html has an outdated github link to the Finatra project.

     Solution

     Updated the link to the official github project and update the blurb.

     Result

     The rendered page in github will point users to the correct place for the Finatra project.

RB_ID=717011"
kevinoliver,2015-07-16 23:13:46,https://api.github.com/repos/twitter/finagle/git/commits/f7c031d43ee5f8eb352c5cc1394326a79eef7607,f7c031d43ee5f8eb352c5cc1394326a79eef7607,"util, finagle, twitter-server: Introduce Sink.recording

Problem

Calling into `Sink.event` can be too expensive, even when using a
`NullSink`.

This is due to the expense of finding the Trace Id and making all of
the other calls.

Solution

Introduce the notion of recording which can be toggled at runtime via
/admin/events/{recordOn,recordOff} and gets a nice UI treatment of
/admin/events.

RB_ID=715712"
nshkrob,2015-07-16 18:56:59,https://api.github.com/repos/twitter/finagle/git/commits/8c4420fe9bbd746eeb2f3627234e0100a6798043,8c4420fe9bbd746eeb2f3627234e0100a6798043,"util: Don't forward interrupts to a completed Future

Problem

Promise.forwardInterruptsTo(other: Future) allocates chains of Transforming state objects. This is unnecessary if the other future is completed.

Solution

Make forwardInterruptsTo a no-op if the other future is completed.

RB_ID=714420"
luciferous,2015-07-16 18:55:05,https://api.github.com/repos/twitter/finagle/git/commits/9ac7f79876c72c6e1d39c228807906c4fe81e8fc,9ac7f79876c72c6e1d39c228807906c4fe81e8fc,"finagle-core: Label FailFastExceptions for more useful log messages

Problem

It's difficult to know which endpoint is marked dead from the log
message of a FailFastException. While this can be inferred by observing
""marked_dead"" counter increments in the same time range, adding the name
of the endpoint to the exception message makes it much easier.

Solution

Customize the exception message with a Label in the Stack scope.

RB_ID=716021"
kevinoliver,2015-07-16 04:37:57,https://api.github.com/repos/twitter/finagle/git/commits/0c2222f37a9d45216ec7b62ef69dd33ea447b682,0c2222f37a9d45216ec7b62ef69dd33ea447b682,"finagle-core: Expose Netty's TrafficClass configuration

Problem

There is no way for clients or servers to configure Netty's traffic
class[1].

Solution

Expose this via a new Stack.Params `Listener.TrafficClass` and
`Transporter.TrafficClass`.

[1] http://netty.io/3.10/api/org/jboss/netty/channel/socket/SocketChannelConfig.html#setTrafficClass(int)

RB_ID=714721"
vkostyukov,2015-07-16 02:58:54,https://api.github.com/repos/twitter/finagle/git/commits/2c20142442fc5f38940e3b9be82d220876e9ac2c,2c20142442fc5f38940e3b9be82d220876e9ac2c,"twitter-server|finagle: Enable syntax highlighting in the docs

RB_ID=710457"
stuhood,2015-07-16 00:53:39,https://api.github.com/repos/twitter/finagle/git/commits/8b1884f0a7f8327bca35af935c4278b1134811d8,8b1884f0a7f8327bca35af935c4278b1134811d8,"Disable flaky finagle-stats test

RB_ID=716108
TBR=true"
jcrossley,2015-07-15 21:20:23,https://api.github.com/repos/twitter/finagle/git/commits/500ff96c53de8788bf08a25f494483e700e416f0,500ff96c53de8788bf08a25f494483e700e416f0,"finagle-core: Made Client/Server Tracing Filters not private[finagle]

Problem

The client and server tracing annotations are required and used to live in the codec tracing filter (replaced with TraceInitializerFilter, etc.).

Solution

Made (Client|Server)TracingFilter public.

RB_ID=714265"
blackicewei,2015-07-15 19:18:47,https://api.github.com/repos/twitter/finagle/git/commits/c3dd3cb73f699cfd197333ad0824c08b08e03c35,c3dd3cb73f699cfd197333ad0824c08b08e03c35,"finagle-core: exclude UnresolvedAddressException from RetryableWriteException

Problem

All `WriteException`s are retryable, and all Netty level IO
exceptions are wrapped as `WriteException`. That's the case
for `UnresolvedAddressException`, which should not be retried.

Solution

Exclude `UnresolvedAddressException` from `RetryableWriteException`.

RB_ID=714007"
blackicewei,2015-07-14 22:26:44,https://api.github.com/repos/twitter/finagle/git/commits/72261ed9f97cdbaf66474a4f2b695e2b65142a03,72261ed9f97cdbaf66474a4f2b695e2b65142a03,"finagle-memcachedx: reduce compile warnings

reduce compile warnings

RB_ID=714976"
kevinoliver,2015-07-14 21:40:48,https://api.github.com/repos/twitter/finagle/git/commits/ed7e492777954c423187d6565c04a075ac33ffee,ed7e492777954c423187d6565c04a075ac33ffee,"finagle-zipkin: Improve concurrency of DeadlineSpanMap

Problem

`c.t.f.zipkin.thrift.DeadlineSpanMap` uses coarse grained locks for
thread-safety.

Solution

Use finer grained synchronization on the individual MutableSpan's via
a `j.u.c.ConcurrentHashMap`.

RB_ID=714446"
travisbrown,2015-07-13 23:42:47,https://api.github.com/repos/twitter/finagle/git/commits/3bbb502b58ca0d0f0ff5037000c361fcce2376af,3bbb502b58ca0d0f0ff5037000c361fcce2376af,"Add missing SBT dependency

RB_ID=714548"
dschobel,2015-07-13 22:36:44,https://api.github.com/repos/twitter/finagle/git/commits/d9276f9ecbb53737da9d6c513198693816e1be40,d9276f9ecbb53737da9d6c513198693816e1be40,"finagle-http: set content-length header in netty http client dispatcher

Problem

The client dispatcher for netty http doesn't define the content-length
header for non-chunked requests.

Solution

Set the header.

RB_ID=714267"
atollena,2015-07-13 17:48:24,https://api.github.com/repos/twitter/finagle/git/commits/53aaa8f39e1c6da20af471cf64277e19bceec939,53aaa8f39e1c6da20af471cf64277e19bceec939,"[finagle-core] Add a test for namers that return unbound names

Problem
--

No test caught the fact that DefaultInterpreter didn't call back to the dtab
when namers return unbound names.

Solution
--

Add a test.

RB_ID=713856"
atollena,2015-07-10 23:41:46,https://api.github.com/repos/twitter/finagle/git/commits/c4440f1339465cc18fb4b755dc8374a690ebd2ee,c4440f1339465cc18fb4b755dc8374a690ebd2ee,"[finagle-core] Properly recurse to the Dtab when namers return an unbound name

Problem
--

When looking up a name via the DefaultInterpreter, if the Dtab lookup
yields Neg we directly bind via global namer (which resolves names of
the for /$), and never recurse back to the Dtab. This breaks dtabs
refering to namers that return an unbound names.

Solution
--

Properly use Namer.global.lookup rather than Namer.global.bind.

RB_ID=713828"
atollena,2015-07-10 20:08:01,https://api.github.com/repos/twitter/finagle/git/commits/719d505b64f8083c2214fca7da207ce06858963c,719d505b64f8083c2214fca7da207ce06858963c,"[finagle-core] Remove Namer trait from Dtab

Problem
--

We have multiple ways to bind a name via a Dtab: Dtab itself
is a `Namer`, and `NameInterpreter` convert a Path to a bound
name, taking the Dtab into account.

Solution
--

Make local dtab resolution a NameInterpreter.

Result
--

One mechanism for resolving a path to a bound name using the
dtab.

RB_ID=711681
TBR=true"
dschobel,2015-07-10 18:20:31,https://api.github.com/repos/twitter/finagle/git/commits/158250c766f508cab4d490a6466343ff584cc38f,158250c766f508cab4d490a6466343ff584cc38f,"finagle-http|x: add dschobel to owners

RB_ID=713162"
blackicewei,2015-07-10 00:43:44,https://api.github.com/repos/twitter/finagle/git/commits/a10d17ee7952a6c6a2ca4dd74417b53bad205eb7,a10d17ee7952a6c6a2ca4dd74417b53bad205eb7,"finagle-mux: unmap promise from tagMap to avoid races

Problem

There is a race where promises in mux dispatcher can be
updated twice.

Solution

`unmap` the `promise` from `TagMap` before setting a
value to the `promise`. `TagMap`'s synchronized operations
gaurantee a `promise` won't be fetched twice, thus be set
a value twice.

RB_ID=712013"
luciferous,2015-07-10 00:36:29,https://api.github.com/repos/twitter/finagle/git/commits/e2f4187d050e1a51aa9cf849427c6fb04d909fdd,e2f4187d050e1a51aa9cf849427c6fb04d909fdd,"finagle-httpx: Set Content-Length header

Problem

The client dispatcher is responsible for setting the Content-Length
header on outgoing requests, but it doesn't.

Solution

Set the Content-Length header.

RB_ID=713124"
legalosLOTR,2015-07-08 23:57:02,https://api.github.com/repos/twitter/finagle/git/commits/526aef0d2365f4d664ade76ba29c99efd7a4526e,526aef0d2365f4d664ade76ba29c99efd7a4526e,"finagle-core: Support passing http proxy credentials to ClientBuilder

Problem
- ClientBuilder allows you to set a httpProxy but you cannot specify credentials for auth, therefore it cannot work with authenticated http proxies (like the one we use with mesos).

Solution
- Add method to pass in credentials to ClientBuilder.
- If credentials are supplied, add a Proxy-Authorization header to the CONNECT request.

RB_ID=710481"
vkostyukov,2015-07-08 04:18:34,https://api.github.com/repos/twitter/finagle/git/commits/6f7c6a882bf5679a2033c743bfefeb4f02646efd,6f7c6a882bf5679a2033c743bfefeb4f02646efd,"docs: Add the ""why-migrate"" section to the util-stats docs

RB_ID=709505"
kevinoliver,2015-07-07 23:37:02,https://api.github.com/repos/twitter/finagle/git/commits/44e62e8a35248b873a5ea472a3892a4af010ca6c,44e62e8a35248b873a5ea472a3892a4af010ca6c,"finagle-core: Improve performance of Filter.andThen.apply()

Problem

c.t.finagle.Filter.andThen's `apply()` method is a very commonly used
method in Finagle services.

Solution

Copy-paste a bit of code to avoid allocations and improve performance.

Result

Less allocations and better performance.

Baseline:
[info] Benchmark                                                       (numAndThens)  Mode  Cnt     Score      Error   Units
[info] FilterBenchmark.andThenFilter                                               1  avgt   10    14.629 ±    7.833   ns/op
[info] FilterBenchmark.andThenFilter:·gc.alloc.rate.norm                           1  avgt   10    48.000 ±    0.001    B/op
[info] FilterBenchmark.andThenFilter                                              10  avgt   10   185.234 ±  121.924   ns/op
[info] FilterBenchmark.andThenFilter:·gc.alloc.rate.norm                          10  avgt   10   504.000 ±    0.002    B/op
[info] FilterBenchmark.andThenFilter                                              20  avgt   10   253.850 ±   23.857   ns/op
[info] FilterBenchmark.andThenFilter:·gc.alloc.rate.norm                          20  avgt   10   984.000 ±    0.002    B/op

Patched:
[info] Benchmark                                                       (numAndThens)  Mode  Cnt     Score     Error   Units
[info] FilterBenchmark.andThenFilter                                               1  avgt   10     8.644 ±   0.441   ns/op
[info] FilterBenchmark.andThenFilter:·gc.alloc.rate.norm                           1  avgt   10    24.000 ±   0.001    B/op
[info] FilterBenchmark.andThenFilter                                              10  avgt   10   103.514 ±  35.700   ns/op
[info] FilterBenchmark.andThenFilter:·gc.alloc.rate.norm                          10  avgt   10   264.000 ±   0.001    B/op
[info] FilterBenchmark.andThenFilter                                              20  avgt   10   145.070 ±   4.226   ns/op
[info] FilterBenchmark.andThenFilter:·gc.alloc.rate.norm                          20  avgt   10   504.000 ±   0.001    B/op

RB_ID=711037"
cacoco,2015-07-07 20:52:40,https://api.github.com/repos/twitter/finagle/git/commits/4d03fa4db73fb052681144e805a324cbe55c5e83,4d03fa4db73fb052681144e805a324cbe55c5e83,"finagle-core: Close resource in Init and expose finagleBuildRevision

Problem

com.twitter.finagle.Init attempts to load and read the
/com/twitter/{finagle-core}/build.properties file currently by opening an
InputStream to the resource but never closing the stream. Additionally, there
is the need to consume the ""build_revision"" value from the build.properties.

Solution

Rewrite the tryProps(..) method to ensure that the opened InpuStream is closed
after reading the Stream into a java.util.Properties object. Also, expose a
new method: ""finagleBuildRevision"" which returns the value of the
""build_revision"" key in the found Finagle build.properties.

Result

The open file descriptor for the loaded resource will be properly closed and
consumers will access to the Finagle ""build_revision"" value through the
com.twitter.finagle.Init#finagleBuildRevision(..) method.

RB_ID=711518"
atollena,2015-07-07 19:19:09,https://api.github.com/repos/twitter/finagle/git/commits/e9c472b67560dbea740082a4105e1399269c76c1,e9c472b67560dbea740082a4105e1399269c76c1,"[finagle-core] Counter measuring initial resolution time

Problem
--

Initial client resolution takes a long time, but we don't know
how long.  We want to track how much we gain on startup by using
a different service discovery mechanism.

Solution
--

Add a counter.

RB_ID=710201"
nshkrob,2015-07-06 19:07:25,https://api.github.com/repos/twitter/finagle/git/commits/26dae347b9ce7806d02f781ebbe528e86b724924,26dae347b9ce7806d02f781ebbe528e86b724924,"finagle-thrift: Replace manually-compiled files with a thrift target

Problem

finagle/finagle-thrift/src/main/java/com/twitter/finagle/thrift/thrift/ has java files that can be generated from tracing.thrift instead.

Solution

Replace the manually-generated files with the proper thrift target. This was blocked by lack of java support in scrooge-sbt-plugin.

RB_ID=707520"
luciferous,2015-07-03 23:08:07,https://api.github.com/repos/twitter/finagle/git/commits/0557ccd5b50029bef07e5f4abd056afd9801bed8,0557ccd5b50029bef07e5f4abd056afd9801bed8,"[finagle-stream] Stream dispatcher not converting headers

Problem

The server dispatcher is missing the headers in the conversion from
StreamResponse to the underlying codec type (HttpResponse).

Solution

Fix the StreamResponse conversion so that everything is properly
converted. Add a test.

RB_ID=710513"
vkostyukov,2015-07-02 23:16:05,https://api.github.com/repos/twitter/finagle/git/commits/074bf9737bd9235fb75acedf4c574a105b46a373,074bf9737bd9235fb75acedf4c574a105b46a373,"finagle|util: Mention Java compilation tests in CONTRIBUTING.md

RB_ID=710340"
luciferous,2015-07-02 22:43:25,https://api.github.com/repos/twitter/finagle/git/commits/6ec9d2ed222a5c8232754ff9e871c3d82b9eb15f,6ec9d2ed222a5c8232754ff9e871c3d82b9eb15f,"[finagle-httpx] Java friendly Method and Version

Problem

Method and Version are difficult to use from Java (e.g.
Method.Get$.MODULE$).

Solution

Provide Methods and Versions for Java usage.

RB_ID=710187"
luciferous,2015-07-02 17:09:32,https://api.github.com/repos/twitter/finagle/git/commits/afd6d14137b811da9a0012ef58b30b364af4bb91,afd6d14137b811da9a0012ef58b30b364af4bb91,"[finagle-example] Reinstate streaming examples using httpx

Problem

The streaming examples that were removed are actually quite interesting.
There is an HTTP streaming story, we should use that instead of
ommitting streaming examples entirely.

Solution

Reinstate the streaming examples, but using finagle-httpx instead of
finagle-stream.

RB_ID=709946"
luciferous,2015-07-01 01:33:49,https://api.github.com/repos/twitter/finagle/git/commits/12b2f5fb9b09d9b968844216e038ed00a769dfc4,12b2f5fb9b09d9b968844216e038ed00a769dfc4,"[finagle-example] Remove stream examples

Problem

finagle-http/x has a good story for HTTP streaming, finagle-stream is
redundant and we want to discourage further adoption of it.

Solution

Remove stream examples.

RB_ID=708944"
luciferous,2015-06-30 23:07:09,https://api.github.com/repos/twitter/finagle/git/commits/2bf91d72f8acf2284137d9152d1c32433d4a34ed,2bf91d72f8acf2284137d9152d1c32433d4a34ed,"finagle-stream: Remove netty types from public API

Problem

finagle-stream leaks netty types in its public API, this should be a
hidden implementation detail.

Solution

Replace netty types with more portable types.

RB_ID=695896"
travisbrown,2015-06-30 18:44:23,https://api.github.com/repos/twitter/finagle/git/commits/e42d011426f001cfdd9aa43f195c5918a0d28247,e42d011426f001cfdd9aa43f195c5918a0d28247,"Fix Travis CI and add code coverage for Finagle and related projects

Problem

This change addresses three closely related problems. The first is that our
Travis CI builds have been broken for a long time, in part because of the fact
that since we don't publish snapshots, the current development versions aren't
able to find their dependencies unless these are published locally. (Travis CI
also recently changed containerized builds to be the default, and we're still
unable to use the containerized build system with Finagle because of travis-ci
issue #3120, so I've turned this off for the relevant projects.) The second
issue is that we're not currently clearly indicating project status (whether a
project is retired, deprecated, or actively maintained). Finally, we want to
publish code coverage information for these projects.

Solution

This commit extends the work in Scrooge to provide a Travis CI script that
downloads and publishes dependencies locally. It also adds retries for the
dependency resolution and downloading step for each Travis CI config, as well as
caching for dependencies. It also adds a shields.io badge to the top of each
project README indicating the status of the project, and turns on Scoverage code
coverage reporting (and publication to Coveralls) for each project.

Result

If our Travis builds are failing, it's much more likely to be for legitimate
reasons. We also now clearly indicate code coverage stats and project status.

RB_ID=704444"
blackicewei,2015-06-30 01:51:19,https://api.github.com/repos/twitter/finagle/git/commits/7a9f14fbbc0d3a4b16ef728885e9a94513e2047b,7a9f14fbbc0d3a4b16ef728885e9a94513e2047b,"finagle-http: support Nack

add Nack support in http as well for users haven't upgraded to httpx

RB_ID=705948"
atollena,2015-06-27 00:30:29,https://api.github.com/repos/twitter/finagle/git/commits/e26e0338e579b3537e034096f1b0d322c1407a18,e26e0338e579b3537e034096f1b0d322c1407a18,"[finagle-core] Introduce NameInterpreter

Problem
--

The Dtab and the name resolution mechanism are conflated: it is not
possible to resolve a name without first resorting to the Dtab, and the
Namer interface does not take the Dtab into consideration.  Resolution
must happen partly in the client.  This prevents outsourcing name
resolution and centralizing the Dtab into a separate service in a way
that retains existing use-cases.

Solution
--

Add an optional indirection, NameInterpreter, between (dtab, path) and
bound names, used by BindingFactory.

Result
--

We can override how dtab and path interact.

RB_ID=689726"
atollena,2015-06-26 17:26:48,https://api.github.com/repos/twitter/finagle/git/commits/480e4e331956253154996d1f39d858056ab5b1bd,480e4e331956253154996d1f39d858056ab5b1bd,"[finagle-core] trivial style fixes to Namer

(followup on RB 697114)

RB_ID=705450"
olix0r,2015-06-25 20:00:50,https://api.github.com/repos/twitter/finagle/git/commits/de6c058d25a840098e8cd99e9075609315aa7c6e,de6c058d25a840098e8cd99e9075609315aa7c6e,"finagle-core: Improve Name.Bound documentation.

Problem

The 'id' and 'path' fields of Name.Bound were insufficiently documented.

Solution

Clarify that 'path' should only contain unbound residual path components
and that 'id' should only reflect the bound path.

Github PR #378

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=704664"
dschobel,2015-06-23 21:57:40,https://api.github.com/repos/twitter/finagle/git/commits/f8ea987f8da7dbe34a4fe1cb481446b5a0d34b56,f8ea987f8da7dbe34a4fe1cb481446b5a0d34b56,"release CSL OSS

release new minor version of all CSL OSS.

twitter-server: 1.11.0
scrooge: 3.19.0
finagle-*: 6.26.0
ostrich: 9.9.0
util: 6.25.0

RB_ID=701418
TBR=true"
luciferous,2015-06-23 20:54:13,https://api.github.com/repos/twitter/finagle/git/commits/ae65b7ddc9260e9e9f295aad56583dffa1307151,ae65b7ddc9260e9e9f295aad56583dffa1307151,"[finagle-stream] Make dispatchers less private

Problem

Stream dispatchers aren't visible to stream users who want to customize
the StreamCodec.

Solution

Increase visibility slightly.

RB_ID=701952"
atollena,2015-06-23 18:36:46,https://api.github.com/repos/twitter/finagle/git/commits/88a862fc579830819d454f11183fae5eb84bc025,88a862fc579830819d454f11183fae5eb84bc025,"[finagle-core] Prefer Ok when binding NameTree Unions

Problem
--

We use Activity.collect to aggregate NameTree unions on binding.  As a
consequence, the resulting Activity is Failed (or Pending) if any of the
union members is Failed (or Pending).

A typical use case for weighted unions is failover:

    /s => 75 * /srv/dc1 & 25 * /srv/dc2

If either one of `/srv/dc1` or `/srv/dc2` is pending resolution, the
entire result is pending regarless of the state of individual
components. As a result 100% of requests fail.

Solution
--

Implement custom rules for aggregating NameTree union activities:

- if one or more components of the union are in Ok state, return them
- if all components are in pending state, the result is pending
- if no member is in Ok state, and some are Failed, return the first
  failure (this matches Activity.collect behavior).

Result
--

We can safely use NameTree unions for cases where one component may fail
or be left pending.

RB_ID=697114"
blackicewei,2015-06-23 17:51:46,https://api.github.com/repos/twitter/finagle/git/commits/0b9cb36ef04ac17bc36e2fe7e444a0a322626793,0b9cb36ef04ac17bc36e2fe7e444a0a322626793,"finagle-memcachedx: enable FactoryToService in pipelining client

Problem

Memcached pipeling client does not have FactoryToService
enabled, so it retries service acquistion up to 25 times
in `Requeues` module, this causes connection retry storm
when memcache applies connection rate limit on the server
side.

Solution

Use `StackClient.newService` to build the client, so the
leaky bucket retry logic kicks in during service acquistion.
That gives us an upper limit on number of retries based
on qps.

RB_ID=700568"
adleong,2015-06-22 23:13:39,https://api.github.com/repos/twitter/finagle/git/commits/2ca3721b77cce46efc16149e1f518f30aac23c20,2ca3721b77cce46efc16149e1f518f30aac23c20,"Filter.TypeAgnostic
TypeAgnostic filters are like SimpleFilters but they but they leave the Rep and Req types unspecified until `.toFilter` is called.  This allows a TypeAgnostic filters to be applied to services with different type parameters.

RB_ID=675046"
vkostyukov,2015-06-19 00:16:46,https://api.github.com/repos/twitter/finagle/git/commits/c89d5a994fc0916166c4f7c2185f2c30eddde2da,c89d5a994fc0916166c4f7c2185f2c30eddde2da,"finagle: Refactor FailureAccrual Stack Params

RB_ID=689076"
roanta,2015-06-18 22:19:00,https://api.github.com/repos/twitter/finagle/git/commits/abb4a4cc79123615ad1cef3378aac46eafcdb68b,abb4a4cc79123615ad1cef3378aac46eafcdb68b,"csl/integ: Introduce a balancer test into our integration suite.

RB_ID=698056"
blackicewei,2015-06-18 20:09:49,https://api.github.com/repos/twitter/finagle/git/commits/d00e7bbadb088d016085108ef92dcaaff4ad71cf,d00e7bbadb088d016085108ef92dcaaff4ad71cf,"finagle: add stats to failureDetector

Problem

FailureDetector expose minimal stats, making it hard to debug.

Solution

add counters and stat.

RB_ID=697128"
nshkrob,2015-06-18 19:13:57,https://api.github.com/repos/twitter/finagle/git/commits/ee883579e0d517f0d8e1261eb9b9b5d115c55d63,ee883579e0d517f0d8e1261eb9b9b5d115c55d63,"finagle: Disable MdnsTest in CI

Problem

MdnsTest announcer and resolver communicate over network, which doesn't work in CI.

Solution

Disable the test in CI by marking it flaky.

RB_ID=697028"
kevinoliver,2015-06-18 18:28:06,https://api.github.com/repos/twitter/finagle/git/commits/20acce35637cab47605047ae98adf437bd8f25a9,20acce35637cab47605047ae98adf437bd8f25a9,"finagle: Make BackupRequestFilter less resource intensive

Problem

BackupRequestFilter is resource intensive in terms of both resident
memory size as well as CPU.

Solution

Changes to use less resident memory as well as lessen the cost of
sending a backup request.

BackupRequestFilter

 * Only recalculate the cutoff for a percentage of requests.

 * Minimize allocations and unnecessary work when sending a backup
   request.

LatencyHistogram

 * Introduce `error` which controls the granularity of how accurate
   the latency quantile will be. This allows you to tradeoff resident
   memory for accuracy.

WindowedAdder

 * Examined switching to `AtomicLongs` from `LongAdders` but didn't
   make the switch. If there is no contention, there is little extra
   in terms of memory used. However, we may at some point decide the
   minimal performance wins even under heavy contention are not worth
   the memory footprint overhead.

Result

JMH results. Note, error=-1.0 disables errors and perfoms as the baseline.

[info] Benchmark                       (error)  (maxDurationMs)  Mode  Cnt      Score      Error  Units
[info] LatencyHistogramBench.add          -1.0             1000  avgt   10    257.410 ±   27.619  ns/op
[info] LatencyHistogramBench.add          0.01             1000  avgt   10    256.716 ±   47.596  ns/op
[info] LatencyHistogramBench.add          0.05             1000  avgt   10    224.338 ±   30.683  ns/op
[info] LatencyHistogramBench.quantile     -1.0             1000  avgt   10  60711.140 ± 6873.934  ns/op
[info] LatencyHistogramBench.quantile     0.01             1000  avgt   10   7116.885 ±  813.226  ns/op
[info] LatencyHistogramBench.quantile     0.05             1000  avgt   10   1499.244 ±  322.476  ns/op

Minor win on the order of 50 bytes/op in terms of memory allocations
for `BackupRequestFilter.apply`.

By recalculating the cutoff for only 1% of requests, this saves 59 µs
for the other 99% of requests.

RB_ID=693552"
kevinoliver,2015-06-18 17:39:50,https://api.github.com/repos/twitter/finagle/git/commits/88193d8c6898248d9542bd0f2f79b05c9b8a6815,88193d8c6898248d9542bd0f2f79b05c9b8a6815,"finagle-core: Customizable TimeUnit for StatsFilter

Problem

For some use cases the millisecond timeunit resolution of
`com.twitter.finagle.service.StatsFilter` is too coarse grained.

Solution

Allow the TimeUnit to be customizable.

RB_ID=695258"
kevinoliver,2015-06-17 23:51:04,https://api.github.com/repos/twitter/finagle/git/commits/efce5ec80c1eb37231c787ba502a19397f531f38,efce5ec80c1eb37231c787ba502a19397f531f38,"finagle-core: Fix loading of build.properties

Problem

The finagle version was not always being read properly
in `com.twitter.finagle.Init` leading to an unknown
version used for `Init.finagleVersion`.

Solution

Look in more locations for the version and add a test
to verify that this does not regress in the future.

RB_ID=694814"
ecoffey,2015-06-17 21:06:09,https://api.github.com/repos/twitter/finagle/git/commits/fe4057b68ab7e2925e88503c107920df864eb711,fe4057b68ab7e2925e88503c107920df864eb711," finagle/mysql Client.transaction correctly resolves after ROLLBACK

 Problem: finagle/mysql Client.transaction can fail the returned future
 before finishing the transaction rollback

 If the transaction block fails, then we need to `""ROLLBACK""` the DB
 transaction. Previously we did this via `respond`, which meant that the
 Future transaction returns could resolve before the DB transaction is
 rolled back. This is confusing and surprising to client code.

 Solution: Use `transform` instead of `respond` for mysql transactions.

 Instead we use `transform` and chain the resolving the future to the
 resolution of the `""ROLLBACK""`.

RB_ID=695984"
kevinoliver,2015-06-17 16:22:53,https://api.github.com/repos/twitter/finagle/git/commits/f60073b656152cbb0ffa29a1a54eef21fc9d8c4a,f60073b656152cbb0ffa29a1a54eef21fc9d8c4a,"Add RB_IDs to CHANGES

Problem

It should be easier to see the details of what motivated
a given change in our CHANGES files.

Solution

Add the ids to the changelogs.

RB_ID=695076"
roanta,2015-06-17 05:46:01,https://api.github.com/repos/twitter/finagle/git/commits/c0522eefc20efb60a455625cad0a3821d07b4b6d,c0522eefc20efb60a455625cad0a3821d07b4b6d,"finagle-docs: Update client docs wrt default balancer

RB_ID=694830"
nshkrob,2015-06-17 00:04:07,https://api.github.com/repos/twitter/finagle/git/commits/aab64af741c7d0ead8a0ba3681615d19c3b3c2cb,aab64af741c7d0ead8a0ba3681615d19c3b3c2cb,"finagle: Fix flaky BalancerStackModuleTest

Problem

BalancerStackModuleTest has a race between Addr resolution and the metric being available.

Solution

Use Eventiually.

RB_ID=695440"
luciferous,2015-06-16 20:53:41,https://api.github.com/repos/twitter/finagle/git/commits/85cee0474d81ec7143e0dbe81817a5a393c7f59f,85cee0474d81ec7143e0dbe81817a5a393c7f59f,"[finagle] Remove finagle-memcached

Problem

finagle-memcached is deprecated in favor of finagle-memacachedx.

Solution

Remove finagle-memcached.

RB_ID=694580"
roanta,2015-06-15 19:15:06,https://api.github.com/repos/twitter/finagle/git/commits/7cecfecce6ffa17acfbae5c9eabe7581badf885c,7cecfecce6ffa17acfbae5c9eabe7581badf885c,"finagle-core: Change default balancer to P2C

Problem

The P2C balancer is strictly better than the heap based balancer
for our intended uses. However, the heap is the default for
Finagle clients.

Solution

Change the default load balancer for Finagle clients to P2C.
To override this, use the `com.twitter.finagle.loadbalancer.Balancers`
API per finagle client.

```
val balancer = Balancers.heap()
Protocol.configured(LoadBalancerFactory.Param(balancer))
```

RB_ID=693450"
nshkrob,2015-06-12 19:30:35,https://api.github.com/repos/twitter/finagle/git/commits/146081e3eae97256b3d173735371eadf227ce2e1,146081e3eae97256b3d173735371eadf227ce2e1,"finagle-thrift: Document the buffer/resetCount stat

Problem

Missing docs for thrift/buffer/resetCount stat.

Solution

Add docs;

Also fix the duplicate /thrift in the stat name.

RB_ID=691388"
luciferous,2015-06-12 19:06:00,https://api.github.com/repos/twitter/finagle/git/commits/5e13b9e97c1d27512155f19742f35710df703c0a,5e13b9e97c1d27512155f19742f35710df703c0a,"[finagle-core] Netty3 corralling

Problem

Corralling Netty 3 handlers into their own namespace. This will help
isolation when we introduce Netty 4 corresponding types into the space.

Solution

Move types that will have Netty 4 specific implementations into netty3
namespace (the Netty 4 types will presumably be under netty4).

RB_ID=691746"
luciferous,2015-06-11 19:37:46,https://api.github.com/repos/twitter/finagle/git/commits/63592105c705a3d355d9349ad0eb7461371e1407,63592105c705a3d355d9349ad0eb7461371e1407,"[finagle-http] Preserve reader and writer state when constructing request and response

Problem

The constructor for Responses and Requests that takes HttpResponse and
HttpRequest should perform a match to see if the parameter is already a
Response or Request, and in those casesjust return them. This is so that
the state of thereader and writer is preserved.

Solution

Return the param if it's already the correct type, and if we need to
create a new object, make sure to copy the reader and writer.

RB_ID=690768"
kevinoliver,2015-06-11 17:02:55,https://api.github.com/repos/twitter/finagle/git/commits/0eac1ad1508ba90f272402192f4bb42809d7c8a2,0eac1ad1508ba90f272402192f4bb42809d7c8a2,"finagle-core: Remove allocations from HandletimeFilter

Problem

HandletimeFilter uses Stopwatch when it does not need to.

Solution

Use `System.nanoTime` and compute elapsed time directly.

RB_ID=689140"
kevinoliver,2015-06-11 16:54:41,https://api.github.com/repos/twitter/finagle/git/commits/b30fd484bc0f9ed10f855b26bddb78f2dc70ee77,b30fd484bc0f9ed10f855b26bddb78f2dc70ee77,"finagle-core: Fix ExitGuardTest

Problem

ExitGuardTest assumes that no other ExitGuards have been registered
and remain guarded.
This is not the case when running finagle-core's tests.

Solution

Fix the test to handle both categories.

RB_ID=690240"
blackicewei,2015-06-10 23:37:53,https://api.github.com/repos/twitter/finagle/git/commits/14b631c11c647e196159056f2a80296ad895278d,14b631c11c647e196159056f2a80296ad895278d,"finagle-thriftmux: avoid convert restartable exceptions to TApplicationEx

Problem

`c.t.f.thriftmux.ThriftMux.Server.ExnHandler` in the
ThriftMux stack converts any non-`org.apache.thrift.TException`
to `org.apache.thrift.TApplication`, which is encoded as
a successful mux response (RdispatchOk). Thus, restartable
failures from service level are not reenqueued on the client side.

Solution

Does not convert restartable exceptions in ExnHandler.

Result

When thriftmux server talks to thriftmux client, restartable
failures are returned as RdispatchNack response, thus auto
retried on client side.

RB_ID=686582"
kevinoliver,2015-06-09 20:43:24,https://api.github.com/repos/twitter/finagle/git/commits/518d6756d4bbef6e52bec873a3a91f17a3509572,518d6756d4bbef6e52bec873a3a91f17a3509572,"finagle-stats: Add explicit dependencies

Problem

finagle-stats directly uses some code that is not explicitly
declared in its BUILD file.

Solution

Add the explicit dependencies.

RB_ID=688276"
kevinoliver,2015-06-09 20:25:14,https://api.github.com/repos/twitter/finagle/git/commits/cb8150607a5d1dcf2f5e7f5b4bf8f999a04369ad,cb8150607a5d1dcf2f5e7f5b4bf8f999a04369ad,"finagle-stats: Give details when perHostStats are disabled

Problem

It is not obvious on /admin/per_host_metrics.json if per host stats
are being collected or not.

Solution

Detect if the perHostStats flag is disabled and provide a response
guiding them on how to enable the feature.

RB_ID=687636"
kevinoliver,2015-06-04 16:51:03,https://api.github.com/repos/twitter/finagle/git/commits/6486790cd104a2be0485396f70fe6dcce992b775,6486790cd104a2be0485396f70fe6dcce992b775,"finagle-memcachedx: Client performance improvements

Problem

The memcached client could be more performant.

Solution

Made many small changes that will help in aggregate:

AbstractDecoder:

* `decodeLine`s needsData now uses an Int and a sentinel instead of
  `Option`

Decoder:

* Avoid allocating a closure for AwaitingResponse's call to decodeLine

* Use :+ instead of wrapping a single element in a Seq and using ++

* Converted `AwaitingResponse` to a singleton case object

* Use a singleton `EmptyValueLines` when possible

RichChannelBuffer:

* Is now a value class to avoid unnecessary allocations

* Optimized `toInt` to avoid conversion to String

* Properly sized the `ArrayBuffer` in `split`

* Replace `scratch.slice(0, 0)` with `ChannelBuffers.EMPTY_BUFFER`

ConnectedClient:

* Use `collection.breakOut` in `rawGet`

* Use `Future.flatMap` and constants for `Future(true|false)`

RB_ID=680348"
blackicewei,2015-06-03 21:42:33,https://api.github.com/repos/twitter/finagle/git/commits/2f1343a174b61a1c08def936838b6a28bde60420,2f1343a174b61a1c08def936838b6a28bde60420,"finagle-core: propagate Status in ServiceFactory.flatMap

Problem

`Status` is not override correctly in `ServiceFactory.flatMap`.
It defaults to `Status.Open`, which drops the failure detection
results from other layers of the stack. It results in
unexpected behavior in admimission controllers or requeues which
depends on the `Status` value.

Solution

Override `Status` in ``ServiceFactory.flatMap`.

RB_ID=677986"
kevinoliver,2015-06-01 23:51:37,https://api.github.com/repos/twitter/finagle/git/commits/00184340024d1c4d4ad7a095825cf32089c1060f,00184340024d1c4d4ad7a095825cf32089c1060f,"finagle-core: Use LongAdder in StatsFilter

Problem

StatsFilter uses an AtomicInteger where an LongAdder might give
better performance under contention.

Solution

LongAdders should give better update performance at the tradeoff of
more memory used.

RB_ID=678512"
roanta,2015-06-01 21:57:09,https://api.github.com/repos/twitter/finagle/git/commits/1e81a0a7a11a5f8bc6b03b1a112c75b75e5f248c,1e81a0a7a11a5f8bc6b03b1a112c75b75e5f248c,"finagle-benchmark/util-benchmark: Bump jmh version

RB_ID=679950"
blackicewei,2015-06-01 21:42:08,https://api.github.com/repos/twitter/finagle/git/commits/a0d5ee7e561577991a932cee7c40dc873a81f827,a0d5ee7e561577991a932cee7c40dc873a81f827,"finagle: finalize isAvailable in Service and ServiceFactory

Problem

In `Service` and `ServiceFactory`, `Status` supresses
`isAvaiable`. There is no need to override `isAvaible`
in subclasses.

Solution

Finalize `isAvaiable` method.

RB_ID=678588"
tnarg,2015-06-01 21:23:25,https://api.github.com/repos/twitter/finagle/git/commits/cbf6c691f33501966dee8921a290c6f76e847356,cbf6c691f33501966dee8921a290c6f76e847356,"lleweraf

Problem
tnarg is leaving

Solution
Remove tnarg from OWNERS files

Result
No one else has to do this

RB_ID=679802"
codeferret,2015-06-01 19:45:52,https://api.github.com/repos/twitter/finagle/git/commits/75e8c18696f698d0b32e44b95e72bf686429fefb,75e8c18696f698d0b32e44b95e72bf686429fefb,"finagle-core: Add Annotations indicating ServiceFactoryCache failure

Problem

If the ServiceFactoryCache, or in fact anything else in the request
filter, fails, the zipkin trace shows just two annotations:
ClientSend
ClientReceive

This is deceptive as there was nothing sent or received, and there was
an error that is not indicated here.

Solution

1. Annotate cache misses when the ServiceFactoryCache begins naming,
and annotate with success on success and failure on failures including
when service acquisition times out.

2. Add an event for when the request is actually sent over the wire,
since ""Client Send"" does not in fact indicate that the client has sent
anything.

3. If there is an exception in the request chain, annotate the exception
in addition to Client Receive so it's clear that something has gone
wrong.

Result

All successful client spans now have 4, not 2, events:
ClientSend
WireSend
WireReceive
ClientReceive

Traces with ServiceFactoryCache errors (and other errors) now add
annotations on exceptions.

RB_ID=653628"
blackicewei,2015-05-31 23:42:32,https://api.github.com/repos/twitter/finagle/git/commits/e7d2a8c5efbe9331806d381f1a4b760406435e22,e7d2a8c5efbe9331806d381f1a4b760406435e22,"finagle-httpx: nack support

Problem

When HTTP server throws retryable exceptions, it fails
the request and the connection is torn down.

Solution

Introduce a new HTTP header ""finagle-http-nack"". When server
fails with retrable exceptions, it sends back Nack response,
i.e. 503 response with the header. Client auto reenqueues
those requests.

RB_ID=670046"
kevinoliver,2015-05-29 17:17:55,https://api.github.com/repos/twitter/finagle/git/commits/bd67b1b434d38ea725a304e45a75946b867915cc,bd67b1b434d38ea725a304e45a75946b867915cc,"finagle-exception: ExceptionReporter is no longer the default service

Problem

finagle-exception declared ExceptionReporter as the default service
for `com.twitter.finagle.util.ReporterFactory`.

Solution

Remove the declaration from META-INF/services

RB_ID=674646"
whiter4bbit,2015-05-29 01:06:46,https://api.github.com/repos/twitter/finagle/git/commits/65eb49ddb548f3748438c445012fd09e2ae1373b,65eb49ddb548f3748438c445012fd09e2ae1373b,"update written bytes statistics after completion

Signed-off-by: Bing Wei <bing@twitter.com>

RB_ID=675592"
kevinoliver,2015-05-27 17:17:05,https://api.github.com/repos/twitter/finagle/git/commits/eb945641b8b8bff2ea81eb23450210a5b60a5e3a,eb945641b8b8bff2ea81eb23450210a5b60a5e3a,"finagle-exception,zipkin: Improve client configuration

Problem

The Finagle clients used by Reporter and RawZipkinTracer are not well
behaved in the face of a poorly behaved server and there is no
visibility into their stats.

Solution

Export stats to ClientStatsReceiver, add an upper bound on max waiters
and a global timeout of 1 second.

Result

Visibility into the client behavior and removal of an unbounded queue
which can manifest as a memory leak.

RB_ID=674628"
kevinoliver,2015-05-21 17:39:09,https://api.github.com/repos/twitter/finagle/git/commits/a2187854593f8d7f01d945e46132942bce11eeb3,a2187854593f8d7f01d945e46132942bce11eeb3,"finagle-core: Clarify synchronization in WatermarkPool

Problem

It was not very obvious to the reader if the synchronization
in WatermarkPool was always synchronizing on the WatermarkPool.

Solution

Alias WatermarkPool to thePool and use that for synchronization
consistently.

RB_ID=670634"
dschobel,2015-05-21 17:32:29,https://api.github.com/repos/twitter/finagle/git/commits/6792489613910340de8d2205143a4d990565040d,6792489613910340de8d2205143a4d990565040d,"finagle-doc: de-nettyify quickstart

Use httpx for quickstart docs. Bonus version bump to latest stable packages.

RB_ID=669490"
aoen,2015-05-20 20:49:51,https://api.github.com/repos/twitter/finagle/git/commits/04db343e96d4b7be3f0a6608f15f8c0df9fde0b2,04db343e96d4b7be3f0a6608f15f8c0df9fde0b2,"Fix target types of 'fake' jar library targets

RB_ID=668822
TBR=true
NO_USER_HOOK=1"
kevinoliver,2015-05-20 17:40:04,https://api.github.com/repos/twitter/finagle/git/commits/841e333efb05d82a7ce205cb72d296221453001e,841e333efb05d82a7ce205cb72d296221453001e,"finagle: Add registry entry for latched counters

Problem

Its not immediately obvious if counters are latched or not.

Solution

Introduce an Registry entry that exposes this.

Result

A snippet from a service's /admin/registry.json
now gives you this information clearly.

    ""stats"" : {
      ""commons_metrics"" : {
        ""counters_latched"" : ""true""
      }
    },

RB_ID=667890"
roanta,2015-05-19 21:56:55,https://api.github.com/repos/twitter/finagle/git/commits/5c0250d5d4e0a59c5fc0464d69b0a901609a7b91,5c0250d5d4e0a59c5fc0464d69b0a901609a7b91,"finagle-core: Remove Aperture flags

Problem

Configuring per-client settings globally is generally not a good idea.

Solution

Remove the aperture flags and update our internal usage to configure it
per-client configuration instead.

RB_ID=663194
TBR=true
USER_HOOK_ARGS=--i-am-evil -x birdcage/macaw-swift/.hooks/PRESUBMIT/check-swoop"
dschobel,2015-05-19 21:30:19,https://api.github.com/repos/twitter/finagle/git/commits/32b30da3601c3d6ab86a29f093e977df929f4f98,32b30da3601c3d6ab86a29f093e977df929f4f98,"birdcage: rm deprecated kestrel package and s/kestrelx/kestrel/

There are no more users of finagle-kestrel in Source so we can rm it.

Patch created with:

git rm -r finagle/finagle-kestrel/
git mv finagle/finagle-kestrelx/ finagle/finagle-kestrel/
perl to s/kestrelx/kestrel/ + some manual deletion of duplicate kestrel refs

RB_ID=667920
TBR=true"
roanta,2015-05-19 19:03:55,https://api.github.com/repos/twitter/finagle/git/commits/8d056de621762c7be91451c0159850fb471a7fcf,8d056de621762c7be91451c0159850fb471a7fcf,"finagle-core: unify loadbalancer constructors

Problem

Constructing a new Balancer that can be injected into a Finagle client
is unnecessarily complex and non-uniform.

Solution

Remove the legacy constructors around defining the collection of endpoints
and simplified the interface to `LoadBalancerFactory`. Now,
`com.twitter.finagle.loadbalancer.Balancers` defines the collection of balancer
constructors which are uniform and also compatible from Java.

RB_ID=660730
TBR=true
USER_HOOK_ARGS=--i-am-evil -x birdcage/macaw-swift/.hooks/PRESUBMIT/check-swoop"
blackicewei,2015-05-15 22:16:12,https://api.github.com/repos/twitter/finagle/git/commits/12336c598e627a996c6d5b3157f2b40d30601f58,12336c598e627a996c6d5b3157f2b40d30601f58,"finagle-core: public concurrency param for ConcurrentLoadBalancerFactory

Problem
`ConcurrentLoadBalancerFactory#Param` is private to finagle,
impossible for users to config it.

Solution
Change it to be public

RB_ID=665390"
blackicewei,2015-05-15 06:11:52,https://api.github.com/repos/twitter/finagle/git/commits/9cd3d448c689cb4ab8231641af08209ca5b7b1bd,9cd3d448c689cb4ab8231641af08209ca5b7b1bd,"finagle-memcached: Use fixed number of connections for pipelining memcache client

Problem

When memcache client use pipelining with singleton pool,
p9999 is worse than non pipelining with multiple
connections due to head of line blocking.

Solution

Using a samll fixed number of connections, and load
balance among those connections based on outstanding
requests and time.

Result

A customized pipline memcache client, using ewma P2C
loadbalancer. With much fewer connections, Memcache
pipelining client achieve similar tail latency as non
pipelining client.

RB_ID=614228"
roanta,2015-05-13 17:31:00,https://api.github.com/repos/twitter/finagle/git/commits/a7ecb970fe5c584607ad9fb5d02b35cc1b9a495e,a7ecb970fe5c584607ad9fb5d02b35cc1b9a495e,"finagle: fix config for docbird

RB_ID=661948"
kevinoliver,2015-05-12 16:37:25,https://api.github.com/repos/twitter/finagle/git/commits/294ebf79e35095ebe92d5f74ff26e5bf5a5c9f97,294ebf79e35095ebe92d5f74ff26e5bf5a5c9f97,"finagle-kestrel(x): Longer Awaits for tests

Problem

These tests had been marked as flakey.

Solution

Increase the time for Await in the case of a slow
CI machine.

RB_ID=660798"
kevinoliver,2015-05-11 22:13:34,https://api.github.com/repos/twitter/finagle/git/commits/0a20790f78225ff72cc684d892f5e6c6cadf656e,0a20790f78225ff72cc684d892f5e6c6cadf656e,"finagle-memcached(x): Fix flakey tests

Problem

Two cache tests were marked as flakey.

Solution

Fix the tests by using `Time.withCurrentTimeFrozen`.

RB_ID=660632"
stevegury,2015-05-08 20:57:21,https://api.github.com/repos/twitter/finagle/git/commits/150c542f601d3f869d4a5454ed550a50fd4cc373,150c542f601d3f869d4a5454ed550a50fd4cc373,"Goodbye
Remove stevegury from various OWNERS files.

RB_ID=658898"
blackicewei,2015-05-07 19:17:34,https://api.github.com/repos/twitter/finagle/git/commits/74187f8d32fee51f073ca51c054f3fdf2fb530ed,74187f8d32fee51f073ca51c054f3fdf2fb530ed,"finagle-core: more stats around failures and draining in mux

Problem

Requeue budget is a gauge, it's hard to see when budget
exhausts due to granuality of stats collection.

There are draining/drained counters in mux.Server, but
those counters may not be collected when server shutsdown
or runs into problem.

Failures can be a string with certain flags with casue,
where flags imbed much meaning of it. It would be nice to
expose flags in stats reporting, so that we know
for example requeues or retries happen as expected.

Solution

- add a budget_exhausted counter.
- add draining/drained counters in mux.Client.
- expose Failure.flag as failure categories in StatsFilter.

RB_ID=639924"
kevinoliver,2015-05-06 18:30:39,https://api.github.com/repos/twitter/finagle/git/commits/5853859275e6b65d1036f3dac42356e2f6e88aac,5853859275e6b65d1036f3dac42356e2f6e88aac,"finagle: add koliver to top-level OWNERS

RB_ID=654738"
stevegury,2015-05-05 22:34:15,https://api.github.com/repos/twitter/finagle/git/commits/624d377bb3c9e2a0afd6e9878bfdec32f4a66044,624d377bb3c9e2a0afd6e9878bfdec32f4a66044,"Fix sbt jar retrieval

Problem

Typesafe recently moved their jar repo to bintray.
Now every jar fetching command (curl) fails because curl doesn't
follow Http 302 by default.

Solution

Add the required parameter to curl to follow the 302 redirect.

RB_ID=654736
TBR=true"
dschobel,2015-05-05 22:05:41,https://api.github.com/repos/twitter/finagle/git/commits/96fc826df207b6ffd88fd4d287885fc96e930df1,96fc826df207b6ffd88fd4d287885fc96e930df1,"finagle-httpx: cherry pick patches to sync with finagle-http

cherry pick missing patches from finagle-http onto finagle-httpx:

""introduce DynamicRecord to implement Request.ctx, Response.ctx"" https://reviewboard.twitter.biz/r/570316/
???Use Netty's RFC-6585 HTTP response codes.??? https://reviewboard.twitter.biz/r/554884/

RB_ID=654306"
kevinoliver,2015-05-05 21:36:14,https://api.github.com/repos/twitter/finagle/git/commits/798eeecae33de0b0ca6b9f4b4f78df3e78ba4e95,798eeecae33de0b0ca6b9f4b4f78df3e78ba4e95,"finagle-metrics: Bump Commons versions

Problem

Commons Metrics is stricter than Ostrich regarding name collisions.
See RB 640376 for details on the fix that this picks up.

Solution

Bump versions of Commons to latest.

RB_ID=654708"
roanta,2015-05-05 17:43:58,https://api.github.com/repos/twitter/finagle/git/commits/8882e2464878390729c5f01c2871092888c5a154,8882e2464878390729c5f01c2871092888c5a154,"finagle-core: Improve client Balancer docs

Problem

We don't have any documentation we can point people to that
explains the difference balancers and their motivations. I'd
like to eventually unify how we instantiate different balancers
and add code snippets for how to change / experiment with each
balancer.

Solution

Add docs to finagle/doc which is also synced to docbird and github.
Also, I added some in-code documentation as I was re-reading some
of the balancer code.

RB_ID=647240"
luciferous,2015-05-05 16:58:45,https://api.github.com/repos/twitter/finagle/git/commits/d1dd777c691f4c4f563e2533b4238d564b202d82,d1dd777c691f4c4f563e2533b4238d564b202d82,"[finagle-stream] Mark finagle-stream test as flaky

Problem

Flaky test in finagle-stream failing in CI.

Solution

Mark it flaky. Added a comment about why it sometimes fails: where we
expect the client to receive the last HTTP chunk via MessageEvent we
sometimes see an ExceptionEvent suggesting that the connection was
closed before the last chunk was sent.

RB_ID=653736"
luciferous,2015-05-05 16:43:43,https://api.github.com/repos/twitter/finagle/git/commits/ebb4250955656cd8c08a2851baa4547a4cb044ff,ebb4250955656cd8c08a2851baa4547a4cb044ff,"[finagle-core] Mark ExitGuardTest flaky

Problem

Flaky test ""guard creates thread, unguard kills thread"".

Solution

Marking flaky.

RB_ID=654472"
blackicewei,2015-05-04 21:50:28,https://api.github.com/repos/twitter/finagle/git/commits/79f7123d75689c795d0814adc154a11d015d7961,79f7123d75689c795d0814adc154a11d015d7961,"finagle-core: fix flaky test in ClientBuilder EndToEndTest

Problem

Flaky test depends on no server is running on
a socket address to verify write exceptions.

Solution

use a fake `SocketAdress` to gaurantee write exceptions.

RB_ID=652606"
atollena,2015-05-04 17:53:04,https://api.github.com/repos/twitter/finagle/git/commits/2765af75f657da0ef388388872ce5c73112a4a91,2765af75f657da0ef388388872ce5c73112a4a91,"Fix ZK session metrics doc

The documentation does not reflect the current code.

RB_ID=651974"
note,2015-05-02 00:14:20,https://api.github.com/repos/twitter/finagle/git/commits/e058eeec0c194aab0fbf701da984c7942793750d,e058eeec0c194aab0fbf701da984c7942793750d,"quickstart doc updated

Problem

Http client snipped from quickstart does not work

Solution

Doc updated

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=652608"
mosesn,2015-04-29 23:48:39,https://api.github.com/repos/twitter/finagle/git/commits/4426d625502282232791154df7982f3688b8cb70,4426d625502282232791154df7982f3688b8cb70,"Revert ""Revert ""finagle-exp: Make BackupRequestFilter allocate less""""

Problem

The old version of this review occasionally used nanoTime with a Timer, which broke it, since nanoTime should only be used for durations.

Solution

nowMs is only used for durations, never for current time.

RB_ID=649078"
nshkrob,2015-04-28 18:31:05,https://api.github.com/repos/twitter/finagle/git/commits/0492f2969f6787210ea111343fd794daef97fe3c,0492f2969f6787210ea111343fd794daef97fe3c,"finagle: Fix tests for classpath isolation

Problem

Tests rely on how file classloaders work and fail with jar classloaders.

Solution

LoadServiceTest: read the whole buffer when loading classes.
SslTest: When resources are in a jar, there are no jar entries for directories (only files). So create a temp directory rather than extracting one from classpath.

RB_ID=647592"
zdavep,2015-04-27 16:46:08,https://api.github.com/repos/twitter/finagle/git/commits/3fc7971cf69035be189e8cadefa1970417d7d56a,3fc7971cf69035be189e8cadefa1970417d7d56a,"Add SoFi to Adopters list

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=645616"
nshkrob,2015-04-25 00:20:46,https://api.github.com/repos/twitter/finagle/git/commits/ab224eed4a3809c06160d0c40117953e77f3a413,ab224eed4a3809c06160d0c40117953e77f3a413,"finagle: Reduce allocations

Problem

Unnecessary allocations in finagle-serversets and ConstFuture.

Solution

- Make counters persistent in finagle-serverset2.
- Make ZkConversion-related types value classes.
- Override ConstFuture.isDone.

RB_ID=643270"
mosesn,2015-04-24 23:32:36,https://api.github.com/repos/twitter/finagle/git/commits/1b9fe8d154d2cd9d3253f55e0f9ebfd2c8fc93c3,1b9fe8d154d2cd9d3253f55e0f9ebfd2c8fc93c3,"Revert ""finagle-exp: Make BackupRequestFilter allocate less""

RB_ID=645748"
mosesn,2015-04-24 19:22:27,https://api.github.com/repos/twitter/finagle/git/commits/99d80b10bf6f3f3bf1f8cfb16b372e37da32eec1,99d80b10bf6f3f3bf1f8cfb16b372e37da32eec1,"finagle-serversets: Exclude slf4j-log4j12 explicitly

Problem

Zookeeper brings in slf4j-log4j12, which causes your program to
break if you also depend on log4j-over-slf4j.

Solution

Remove it.  If you depend on finagle-serversets, you can choose for
yourself.

RB_ID=641898"
mosesn,2015-04-24 04:01:50,https://api.github.com/repos/twitter/finagle/git/commits/c8d4e06528beb54cb6647b5560edd94199c7d8b5,c8d4e06528beb54cb6647b5560edd94199c7d8b5,"myriad cleanup
Cleaned up a bunch of build warnings, added Try.getOrElse

RB_ID=643354"
mosesn,2015-04-24 00:33:13,https://api.github.com/repos/twitter/finagle/git/commits/c5382b3ae8d8df61b5c8eef91a69b302b41e42a5,c5382b3ae8d8df61b5c8eef91a69b302b41e42a5,"finagle: Report protocol to /admin/registry.json

Problem

Protocols aren't reported to /admin/registry.json, despite them
being an interesting piece of runtime configuration data.

Solution

Report protocols as part of the ClientRegistry export, in the
hierarchical name.

RB_ID=640896"
dschobel,2015-04-23 22:41:41,https://api.github.com/repos/twitter/finagle/git/commits/4f9233b91086a41622babe97733a23886686b56f,4f9233b91086a41622babe97733a23886686b56f,"cuckoo/*: port to memcachedx and httpx

Port cuckoo/* to finagle-memcachedx and finagle-httpx.

RB_ID=639516"
missingfaktor,2015-04-23 19:33:44,https://api.github.com/repos/twitter/finagle/git/commits/536a630691fa668e7910f3d061e5390c0128f0c6,536a630691fa668e7910f3d061e5390c0128f0c6,"finagle-mysql: Make PreparedStatment parameters type safe.

Problem

In the current Finagle MySQL, PreparedStatement#apply has a type
Seq[Any] => Future[Result]. This means that one might accidentally
end up passing things that cannot be written, and be in for surprises.
(Happened to us quite a few times now.) This might be revealed in
the warnings and the tests, but we can do much better: We can
eliminate such errors at compile time itself.

Solution

Change PreparedToStatement#apply to have type Seq[Parameter] =>
Future[Result]. Parameter is a class that makes use of existential
types and packs a value A and an implicit instance CanBeParameter[A]
together. CanBeParameter is a type-class. If you have an instance
of CanBeParameter[A] available, that serves as an evidence that,
well, a value of A can be a used as a parameter.

This PR ensures that all the types that were supported before are
still supported the same way.

null required special handling in a couple of places:

Parameter.wrap doesn't kick in for null because null is already a
member of Parameter type. So we need to sanitize the Seq[Parameter]
in ExecuteRequest#apply, and replace all nulls with NullParameter.
If there is a null with a static type A for which there is a
CanBeParameter[A] evidence available, then we might end up with,
for example, a stringCanBeParameter instance (if A is String) and
typeCode etc will yield wrong values. To avoid this, Parameter.wrap
has to guard for null and return a NullParameter in that case.  This
PR retains the support for null as is, for backwards compatibility.

Going forward, we could stop supporting null altogether and avoid
the complications I talked about before. We could instead support
Option which is a more principled way to deal with these sort of
things.

RB_ID=636592
TBR=true"
atollena,2015-04-23 19:07:01,https://api.github.com/repos/twitter/finagle/git/commits/ccb74ae3135fd1b4d690d266b651a1f335ba5951,ccb74ae3135fd1b4d690d266b651a1f335ba5951,"[finagle-http] Add an assertion for cookie removal

Problem

We don't test for header removal when a cookie is removed.

Solution

Add an assertion.

RB_ID=644112"
atollena,2015-04-22 18:32:58,https://api.github.com/repos/twitter/finagle/git/commits/625793a39fc189433b97da00c502d9655ae0bf6c,625793a39fc189433b97da00c502d9655ae0bf6c,"[finagle-core] Namer abstract class for java compatibility

Problem

It is difficult to specialize Namer from Java because traits are
converted to interfaces, and we lose the implementation of bind and
bindAndEval.

Solution

Provide an abstract class AbstractNamer that can be inherited from
Java.

RB_ID=641952"
kevinoliver,2015-04-22 17:45:37,https://api.github.com/repos/twitter/finagle/git/commits/f308d9f12bc56f7603b147e46ae4a7d5fbdb1199,f308d9f12bc56f7603b147e46ae4a7d5fbdb1199,"finagle-core: Handle when DefaultTracer.self is null

Problem

In a situation where a `Logger` depends on Tracing but the Tracer has
not yet been initialized, `DefaultTracer.self` can be null.

Solution

Add defensive null checks in `DefaultTracer`.

RB_ID=639874
TBR=true"
luciferous,2015-04-22 01:29:50,https://api.github.com/repos/twitter/finagle/git/commits/ac8b6eb31f5a50a1194739f99332318854d016fd,ac8b6eb31f5a50a1194739f99332318854d016fd,"[finagle] Cleanup compile warnings

Problem

There are lots of compile warnings in finagle.

Solution

Fix some of them.

RB_ID=640914"
tianxiao-ma,2015-04-21 21:34:50,https://api.github.com/repos/twitter/finagle/git/commits/aad73448b74f9f98b487c8dbd376dcb134927d9d,aad73448b74f9f98b487c8dbd376dcb134927d9d,"finagle-core: Use UTF-8 charset in LoadService

Problem

LoadService uses the platform's default charset
when reading files which can be incorrect.

Solution

Always use UTF-8.

RB_ID=641262"
roanta,2015-04-21 20:43:06,https://api.github.com/repos/twitter/finagle/git/commits/a2cf274ed7dabc90f46497a2568401ad8c1a97e6,a2cf274ed7dabc90f46497a2568401ad8c1a97e6,"finagle: add roanta as a top-level owner

RB_ID=641192"
mosesn,2015-04-21 19:30:53,https://api.github.com/repos/twitter/finagle/git/commits/78909170b7cc97044481274e297805d770465110,78909170b7cc97044481274e297805d770465110,"csl: Publish externally with pants, sbt, and friends

Problem

It's difficult to publish util, finagle, etc. because we haven't
updated them for the new maven-less world.

Solution

Scripts that make it easy to publish with sbt and pants.  Bumped
the server-set version because we stopped publishing thrift
externally in ci.  Changed an ExitGuard test which broke under
weird sbt conditions.

Result

We're in a position where we can start publishing finagle, etc
again!

RB_ID=633570"
kevinoliver,2015-04-21 18:40:32,https://api.github.com/repos/twitter/finagle/git/commits/4193264c05a778e1c5aca85b51f7ed8d3c6ca49f,4193264c05a778e1c5aca85b51f7ed8d3c6ca49f,"finagle-core: Deal with flakey tests

Problem

A few tests are being noticed as flakey in CI.

Solution

Mark some of the tests as flakey given the current situation.  Mixin
IntegrationPatience as needed as well.

RB_ID=640212"
roanta,2015-04-20 23:10:30,https://api.github.com/repos/twitter/finagle/git/commits/38dff0f97924e72f453ba60d39d3dd86160bdb4e,38dff0f97924e72f453ba60d39d3dd86160bdb4e,"finagle-core: Move finagle-mux requeues into the default stack

Problem

The requeue module in finagle-core lacked support for service
acquisition failures under certain conditions. The requeue
module in mux supports this plus requeues are credited at a ratio
of requests.

Solution

Move the mux requeue module into the default client stack.

RB_ID=627412"
mosesn,2015-04-20 21:46:00,https://api.github.com/repos/twitter/finagle/git/commits/e12c9402e57e5e992e6bdfcceac3567a8cc7706a,e12c9402e57e5e992e6bdfcceac3567a8cc7706a,"finagle-exp: Make BackupRequestFilter allocate less

Problem

BackupRequestFilter was allocating right, left, and center.

Solution

Remove as many allocations as possible while maintaining correctness
and clarity.

RB_ID=634734"
luciferous,2015-04-18 01:14:09,https://api.github.com/repos/twitter/finagle/git/commits/bf87f0537e2ad523a32a9e893b265c2ffff57422,bf87f0537e2ad523a32a9e893b265c2ffff57422,"[trivial] Display Trace and Span IDs in hexadecimal

Problem

TraceId and SpanId values are displayed as Longs. They are more readable
as hexadecimal, which is the conventional presentation.

Solution

Display TraceId and SpanId values as hexadecimal.

RB_ID=639192"
vkostyukov,2015-04-18 01:10:34,https://api.github.com/repos/twitter/finagle/git/commits/45dea7d2e6b8330fc0b667452fd0c72cd6a3e564,45dea7d2e6b8330fc0b667452fd0c72cd6a3e564,"finagle-zipkin: Add name to the RawZipkinTracer shutdown hook thread

RB_ID=639186"
kevinoliver,2015-04-17 19:18:04,https://api.github.com/repos/twitter/finagle/git/commits/b4c918cc20e1299d1c24b1dc34ee811d7a357fe4,b4c918cc20e1299d1c24b1dc34ee811d7a357fe4,"finagle-memcache(x): Mark more integration tests as flaky

Problem

The flaky tests continue to be found.

Solution

Mark them as flaky until they can be addressed holistically.

RB_ID=637974"
atollena,2015-04-17 01:42:47,https://api.github.com/repos/twitter/finagle/git/commits/37e4e9c6f2cc0eee94d37ac06acc35650ff15b27,37e4e9c6f2cc0eee94d37ac06acc35650ff15b27,"[finagle-core] Fix Path and NameTree grammar descrition

Problem:

The grammars described in NameTree and Path do not match the parser.

- Path rejects '/' but it's explicitly listed as a valid path

- NameTree weights do not support full c-style float syntax.

Also the parser blows up with weights composed of a single '.'.

Solution:

Make the grammar description match the parser, fix the parser on
. weights.

RB_ID=637410"
nshkrob,2015-04-16 21:40:51,https://api.github.com/repos/twitter/finagle/git/commits/effd91ecfb17de8a9319bc7352adc6088555e4f6,effd91ecfb17de8a9319bc7352adc6088555e4f6,"scrooge: Reduce allocations in generated code

Problem

Scrooge-generated code allocates reusable growable byte arrays for the response bytes up to a fixed size. If the size exceedes the max size, the array is discarded. For services with large response sizes, this leads to a large allocation for every response.

Solution

Make the max buffer size tunable.

- Add a maxThriftBufferSize parameter to the server constructor and a Stack param for it.
- Add a srv/thrift/buffer/resetCount stat.
- Increase the default maxCapacity of the reusable buffer in $FinagleService from 4K to 16K.
- Replace orElse with pattern matching to avoid allocating a Function1.

Result

133124 bytes/iter -\> 102131 bytes/iter in allocation testing.

RB_ID=628710
TBR=true"
travisbrown,2015-04-15 17:30:58,https://api.github.com/repos/twitter/finagle/git/commits/3e752511bbb98d96b52303ec376946d2684d616d,3e752511bbb98d96b52303ec376946d2684d616d,"Update SBT's ScalaCheck and ScalaTest versions to match 3rdparty

RB_ID=627742"
vkostyukov,2015-04-14 21:39:17,https://api.github.com/repos/twitter/finagle/git/commits/40993a301ff8e2753c16a9ddb4ebaf126b9d586b,40993a301ff8e2753c16a9ddb4ebaf126b9d586b,"finagle-http(x): Improve HttpMuxer routing

RB_ID=634438"
dschobel,2015-04-14 16:23:59,https://api.github.com/repos/twitter/finagle/git/commits/93dcce1ebfe7fc28a97490c2782ce9d32380409f,93dcce1ebfe7fc28a97490c2782ce9d32380409f,"finagle-memcached[|x]: flaky MigrationClient and ReplicationClient integration tests

Tag flaky Migration and Replication client tests as flaky and mark
for low-priority follow up.

RB_ID=634214"
vkostyukov,2015-04-14 03:55:34,https://api.github.com/repos/twitter/finagle/git/commits/f5724e9abf80bff5f7da6fc597cfaacdc4dc99e6,f5724e9abf80bff5f7da6fc597cfaacdc4dc99e6,"finagle-mux: Decrease severity of a noisy logger in mux client

RB_ID=633826"
mosesn,2015-04-13 23:33:10,https://api.github.com/repos/twitter/finagle/git/commits/1339f824f63d03de75fe42d11178c632b2f799b9,1339f824f63d03de75fe42d11178c632b2f799b9,"finagle-core: Removes old registry entries when they're no longer referenced

Problem

Although creating many finagle clients is typically an antipattern,
it's occasionally necessary, for example for web crawlers or link
shorteners.

Solution

We remove old registry entries when they're no longer referenced.
This requires adding a \`remove\` method to Registry, and hooking
it up to closing the ServiceFactory you're handed.

Result

As long as users close their resources, registry ""just works"".

RB_ID=625826"
luciferous,2015-04-12 18:52:07,https://api.github.com/repos/twitter/finagle/git/commits/3b7e62c919e8c3c094fd1711a24b6a295f5d9fed,3b7e62c919e8c3c094fd1711a24b6a295f5d9fed,"[trivial] Add withStreaming to Httpx protocol object

Problem

The other params (e.g. MaxRequestSize) have with-helpers (e.g.
`withMaxRequestSize()`) to help configure the parameter. The
Streaming param is missing a with-helper.

Solution

Add `withStreaming()`.

Result

Users can write `Httpx.server.withStreaming(true)` instead of
`Httpx.server.configured(Httpx.param.Streaming(true))`. Also
the Streaming param follows the same convention as the other
Httpx params.

RB_ID=631164"
mosesn,2015-04-10 23:51:07,https://api.github.com/repos/twitter/finagle/git/commits/c953a9422c4484661b692b3f2c1f45312339b523,c953a9422c4484661b692b3f2c1f45312339b523,"finagle-core: Doesn't create negative stats

Problem

Ostrich logs whenever someone sends it a negative value, and because
of clock skew, we often have negative values when comparing timestamps
between machines.

Solution

Replace negative values with 0.

RB_ID=631574"
kevinoliver,2015-04-10 01:20:04,https://api.github.com/repos/twitter/finagle/git/commits/09d490f8568a3e6db7e1fd6318dafa3bc934c4e2,09d490f8568a3e6db7e1fd6318dafa3bc934c4e2,"util/finagle: Small changes to avoid allocations

Problem

In various places we use methods that rely on Scala's implicits to
enrich them. This typically at the cost of an unnecessary object
allocation. There are some other simple changes to be made that
avoid allocations as well.

Solution

Use methods that do not require allocations. Some examples:

* String.nonEmpty => !String.isEmpty
* String.size => String.length
* StringBuilder.size => StringBuilder.length
* Array.size => Array.length
* Seq.empty => Nil

RB_ID=630964"
dschobel,2015-04-09 22:17:38,https://api.github.com/repos/twitter/finagle/git/commits/d4595fe5a329b5f8bc7a0522b3eb0630259b24df,d4595fe5a329b5f8bc7a0522b3eb0630259b24df,"finagle-core: fix flakyiness in c.t.finagle.builder.EndToEndTest

Problem

Two c.t.finagle.builder.EndToEndTest tests are sporadically failing
with timeout exceptions.

Solution

Remove timeouts.

RB_ID=631366"
dschobel,2015-04-09 00:22:45,https://api.github.com/repos/twitter/finagle/git/commits/f6ce8cd45f6eb6d03c171befc7cf0bf873818c57,f6ce8cd45f6eb6d03c171befc7cf0bf873818c57,"finagle-memcached[|x]: fix race in c.t.f.memcached.integration.MemcachedTest

Problem

Test ""re-hash when a bad host is ejected"" is non-deterministically
failing in asserting the eviction of a failed client.

Solution

Lower the failure threshold and block on cache #set in test.

RB_ID=628512"
keeth,2015-04-08 19:50:14,https://api.github.com/repos/twitter/finagle/git/commits/96450e4e499868aa00067e4f695f3b8a4e827871,96450e4e499868aa00067e4f695f3b8a4e827871,"Add Spright to Finagle adopters list

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=629782"
kachayev,2015-04-07 22:20:41,https://api.github.com/repos/twitter/finagle/git/commits/46320e1722a9d027e5ed49fc39e9820fc2f3f9bb,46320e1722a9d027e5ed49fc39e9820fc2f3f9bb,"Updated list of adopters with Attendify

* keeping alphabetical order

* link to the main page (there is no appropriate blog post just now)

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=628550"
mariusae,2015-04-06 21:20:42,https://api.github.com/repos/twitter/finagle/git/commits/d541441b815e9046225979659f0c8659e131e72e,d541441b815e9046225979659f0c8659e131e72e,"finagle-core: maintain stats for transit times and deadline budgets

This will provide some helpful production numbers to tune a
threshold-based admissions controller.

RB_ID=627580"
travisbrown,2015-04-06 17:24:49,https://api.github.com/repos/twitter/finagle/git/commits/feb3c5e07a34e9b5a96cd0c5a672a0f262226b19,feb3c5e07a34e9b5a96cd0c5a672a0f262226b19,"Use sbt-unidoc plugin and remove out-of-date copy-pasted version

Problem

A couple of months ago I set up our SBT builds to include API doc links in the
POMs, which makes it possible for e.g. Finagle's API docs to link to Util's.
This didn't actually work because we were using an old copy-pasted version of
Unidoc, and unfortunately the same bug was present in the sbt-unidoc plugin.

Solution

My fix for the sbt-unidoc bug is now available in the 0.3.2 release, so we can
switch to using it. I've also added an API doc link to TwitterServer's SBT
config, even though historically we haven't published TwitterServer's API docs
(I'd like to start).

Result

We can build Finagle's API docs with Unidoc and have references to classes from
Util and the Scala standard library automatically linked to their definitions in
those projects' API docs.

RB_ID=627082"
travisbrown,2015-04-03 22:13:45,https://api.github.com/repos/twitter/finagle/git/commits/af37ec95d30957110f2bdce96158253f480fe9b3,af37ec95d30957110f2bdce96158253f480fe9b3,"Fix problems with SBT and Travis CI builds, update Scala and SBT versions

Problem

SBT builds for Finagle and associated projects were failing for a number of
reasons, including third-party dependency versions that had been updated for
Pants but not SBT, new tests that are run differently by the SBT test runner,
and changes to JSON serialization that don't work the same on Scala 2.10 and
2.11. Our SBT and Scala versions were also out of date.

Also Travis CI's container-based infrastructure currently has a bug that causes
the build to crash when getting the local hostname with IPv4 on OpenJDK 7
(reported in #3120 on GitHub). Moving back to the standard Travis infrastructure
is a trivial change, so I've included it here.

Solution

I've updated the SBT and Scala versions throughout, and have updated third-party
dependency versions to match the configuration in 3rdparty (note that I've
followed the last update to scrooge/project/build.properties in not updating the
custom SBT script for Scrooge). TwitterServer now uses scala.xml, which is a
separate module in Scala 2.11, so I've added a conditional dependency in the SBT
build.

The new ExitGuard tests were failing on SBT because clients were being left open
in other test suites. I've daemonized all of these clients so that they don't
create exit guards.

In JsonSinkTest in TwitterServer I've desugared an implicit conversion
provided by a view bound because Scala 2.11 prohibits Object as the target of an
implicit conversion.

Because Jackson doesn't correctly serialize Scala case classes that are defined
locally in vals on Scala 2.11, I've moved three case classes out of vals and
into the enclosing objects, changing names where necessary to avoid collisions,
and making each case class private to the object.

I've also switched all projects with a custom SBT script back to the standard
Travis CI infrastructure.

Result

We're on the most recent versions of Scala and SBT, the SBT builds actually
work, and Travis CI won't fail spuriously on OpenJDK 7.

RB_ID=619988"
kevinoliver,2015-04-03 21:39:41,https://api.github.com/repos/twitter/finagle/git/commits/7431f03963471e8d25d482038068d7e8b8bd95b5,7431f03963471e8d25d482038068d7e8b8bd95b5,"util-stats: Fix deadlock in CumulativeGauge

Problem

Lock acquisition order was not always consistent between
`CumulativeGauge` and `StatsReceiverWithCumulativeGauges` which can
lead to deadlocks.

Solution

Remove synchronization from `StatsReceiverWithCumulativeGauges`.

RB_ID=624714"
travisbrown,2015-04-03 19:15:41,https://api.github.com/repos/twitter/finagle/git/commits/4cbd42db29197692191855630904bb3a5ea98021,4cbd42db29197692191855630904bb3a5ea98021,"Update documentation about contributing

Problem

The contributing documentation currently recommends submitting pull requests
against master.

Solution

Update the contributing documentation to reflect the current workflow, and add
a note about branches to the main README.

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=623652"
stuhood,2015-04-03 17:08:57,https://api.github.com/repos/twitter/finagle/git/commits/f11e534632f2b385457ef03d1322a5bb33214ea8,f11e534632f2b385457ef03d1322a5bb33214ea8,"birdcage: Fix finagle-kestrelx provides clause

- Fix finagle-kestrelx provides clause

http://static-ci.twitter.biz/publish-birdcage-snapshot/2015-04-03_13-00-00/6/console.html

RB_ID=625956
TBR=true"
dschobel,2015-04-03 01:04:24,https://api.github.com/repos/twitter/finagle/git/commits/c6bbbfe7069c9ab029210d9bb6266552589bb093,c6bbbfe7069c9ab029210d9bb6266552589bb093,"birdcage/*: migrate to finagle-kestrelx

Migrate birdcage from finagle-kestrel to finagle-kestrelx as part
of Twitter's netty4 migration.

RB_ID=618432"
roanta,2015-04-02 17:50:52,https://api.github.com/repos/twitter/finagle/git/commits/812613a99d3ce92d03883093c3d19b7e2c528530,812613a99d3ce92d03883093c3d19b7e2c528530,"finagle-benchmark: convert thrift benchmarks to jmh / smokestack

RB_ID=623478"
luciferous,2015-04-02 17:49:47,https://api.github.com/repos/twitter/finagle/git/commits/817c258018e15d4e74766f3d8ac76511282fa41e,817c258018e15d4e74766f3d8ac76511282fa41e,"[finagle-core] Fail readq before close

Problem

Failures sent upstream from netty (via handleUpstream), don't fail the
readq quickly enough. The fail calls close(), which hands execution back
to netty (via Channels.close).

We observe in one case that after sending a failure, netty is still able
to send a subsequent message, which ends up on the readq, before we fail
it.

The related issue is that Netty sends upstream a partially deserialized
and corrupt HttpResponse after sending failure.  The ChannelTransport
should, upon receiving this failure, set the readq to Failing, which
causes rejection of subsequent offers. But because of the order in which
we call readq and close, the corrupt HttpResponse makes it into the
readq before it is set to Failing.

Solution

We fail the readq before close. This causes readq to reject any offers
after the receipt of the first failure.

Now, when Netty sends a failure and then the corrupted Response, the
client dispatcher fails instead of passing the bad Response back to the
user.

RB_ID=624140"
mariusae,2015-04-01 16:21:39,https://api.github.com/repos/twitter/finagle/git/commits/dc6bd22af512ce13523b4d3ff04f1aeed3823eac,dc6bd22af512ce13523b4d3ff04f1aeed3823eac,"finagle-mux: rewrite server dispatcher

Problem

My previous change to add metrics made it very obvious that
the Mux server dispatcher was becoming increasingly difficult
to reason about, especially in terms of session state.

Solution

Rewrite the server dispatcher in a more sustainable way. Indeed
this process found more races. Among the changes are:

 *	Separate out request processing from session management
 *	Remove unnecessary configuration (canDispatch, ping), and
	move their functionality into a filter chain.
 *	Introduce a separate transaction tracker that manages draining.
 *	Introduce a fine-grained session state so that we can tell the
	difference between draining, client, and server hangups.

This also introduces 4 new metrics to track draining stats:

**draining**
  the number of times the server has initiated session draining

**drained**
  the number of times the server has succesfully completed the draining protocol within its allotted time

**clienthangup**
  the number of times sessions have been abruptly terminated by the client

**serverhangup**
  the number of times sessions have been abruptly terminated by the server

Result

Much easier to reason about the server dispatcher code and session states.

Smokestack

old:
	mux	1000000	16555 bytes/iter
	muxsess	1000000	30348 bytes/iter

new:
	mux	1000000	16867 bytes/iter
	muxsess	1000000	31555 bytes/iter

RB_ID=580754"
mariusae,2015-03-31 22:54:34,https://api.github.com/repos/twitter/finagle/git/commits/02704ce319bfeb6cc852c1b18bb2302030b2b3a1,02704ce319bfeb6cc852c1b18bb2302030b2b3a1,"finagle-core: introduce a deadline context

Problem

We'd like to communicate deadlines across process boundaries so that
we can use this information to implement better queueing policies.
Furthermore, even if there isn't an available deadline, we'd like to
know the walltime on the sending host so that we can understand IPC
queueing times, and implement load conditioning when hosts are
overloaded.

Solution

Introduce a deadline context, com.twitter.finagle.Deadline. This will
propagate through all prototols that support contexts.

RB_ID=601720"
kevinoliver,2015-03-31 03:49:02,https://api.github.com/repos/twitter/finagle/git/commits/5304064cdd10dc3591e566748571cd08c67959d0,5304064cdd10dc3591e566748571cd08c67959d0,"Problem

Scala creates Functions instead of a PartialFunction when used
anonymously as in:

  Future.onFailure { case NonFatal(e) => ... }

This meant that the special handling introduced in RB_ID=588992 failed
to actually help. The unit test ""lied"" because it passed explicit
PartialFunctions instead of the more idiomatic anonymous ones.

Solution

Revert the changes introduced in RB_ID=588992 and fix the call sites
that were using it incorrectly.

RB_ID=620938"
dschobel,2015-03-31 01:00:30,https://api.github.com/repos/twitter/finagle/git/commits/9a4c2f5d53935cc073ba5ee453ff5bdfc6d45a2f,9a4c2f5d53935cc073ba5ee453ff5bdfc6d45a2f,"finagle-core: HeapBalancer's status calculation should discard dummy node

Problem

HeapBalancer calculates status inclusive of its dummy head node, a
node which has perpetually Open status. This results in the
HeapBalancer's status being perpetually Open.

Solution

Discard the head node when calculating status.

Result

Higher fidelity cluster status for HeapBalancer and by extension
fewer requeues when they have a poor chance of success. We also
gain consistency in status semantics between heap, choice and
aperture balancers for empty and entirely unavailable clusters.

RB_ID=620638"
kevinoliver,2015-03-30 20:39:23,https://api.github.com/repos/twitter/finagle/git/commits/8a9551222b275b86804907efd404de5317145d8f,8a9551222b275b86804907efd404de5317145d8f,"finagle-stats: Alternative histogram implementation

Problem

Given the minimal space constraints the Commons Metrics histograms
do not have a high enough guarantee on their error. The epsilon is
currently 0.021 which means that the 99.99% can only be guaranteed to
be a 97.89%. While in practice it is typically much tighter than this,
we prefer tighter guarantees.

Solution

Use a bucketing algorithm that with configurable error bounds, E,
between 0 and 1, such that that for any given percentile the value
will be at most (1 + E) percent off from the actual percentile.

Result

An implementation heavily based on Ostrich's `Histogram` while
fairly tight error bounds and a memory footprint of ~29kb per `Stat`.

RB_ID=616918"
roanta,2015-03-30 17:53:54,https://api.github.com/repos/twitter/finagle/git/commits/6f07f6008fa081feaa9063bf155356c06b3ad221,6f07f6008fa081feaa9063bf155356c06b3ad221,"finagle-benchmark: more jmh less caliper

RB_ID=619028"
atollena,2015-03-28 01:13:36,https://api.github.com/repos/twitter/finagle/git/commits/4e0ce43871b3474778b3dcfd3fc54839743ed241,4e0ce43871b3474778b3dcfd3fc54839743ed241,"[finagle-http] trivial typo fix in finagle-httpx publishing

RB_ID=620392"
roanta,2015-03-26 19:14:37,https://api.github.com/repos/twitter/finagle/git/commits/3cdd00888191fe7a6ce1f29113b76535c62ac2bd,3cdd00888191fe7a6ce1f29113b76535c62ac2bd,"finagle-benchmark: Convert Pool Benchmark to JMH

RB_ID=616930"
roanta,2015-03-26 18:40:39,https://api.github.com/repos/twitter/finagle/git/commits/0f4af6887235d768c2a2a4158580532ee8fa4c74,0f4af6887235d768c2a2a4158580532ee8fa4c74,"finagle-benchmark: Add JMH benchmarks for Balancers

RB_ID=617996"
mariusae,2015-03-25 17:15:07,https://api.github.com/repos/twitter/finagle/git/commits/4caf45797649a7046892292525ed718837b19158,4caf45797649a7046892292525ed718837b19158,"finagle-core: eliminate some allocations in context processing

Problem

The deadline branch introduced a standard context that is now shipped
in basically all clients and servers. This resulted in a relatively steep
allocation regression in the mux smoke tests (~20%). With this change,
we recoup all of it.

Solution

Reduce allocation during key processing and comparison:

1. Make sure context keys are ByteBuffers so that we can;
2. compare them directly without copying them.

On master, we get this in the Mux allocation test

	before 8552 bytes/iter
	after 18486 bytes/iter

The effect is (much) more pronounced in the deadlines branch.

RB_ID=606326
TBR=true"
luciferous,2015-03-24 02:30:50,https://api.github.com/repos/twitter/finagle/git/commits/e24642d3c80e6e3c78374d622e587ebeac7c8395,e24642d3c80e6e3c78374d622e587ebeac7c8395,"Upgrade to netty-3.10.1.Final

RB_ID=615714
TBR=true"
spockz,2015-03-23 21:44:31,https://api.github.com/repos/twitter/finagle/git/commits/24d6e3e307c814410278ceca20c6ff5f7caeb161,24d6e3e307c814410278ceca20c6ff5f7caeb161,"Made RetryingFilter extendable.

Problem

The main logic of the RetryingFilter is good enough for me, however it does not
pass the request to the policy. In my case I always want to retry GET requests.
Therefore, I want to extend the RetryingFilter such that the new apply() method
can use the request to create a new policy. In the current situation that is not
possible because the dispatch method is private. Consequently, the
RetryingFilter is not extendable.

Solution

Changed the access modifier from private to protected.

Result

Classes that extend the RetryingFilter can now call dispatch.

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=615154"
dschobel,2015-03-23 21:07:21,https://api.github.com/repos/twitter/finagle/git/commits/dec760082f3be6e6ca61178145286d7a525f16be,dec760082f3be6e6ca61178145286d7a525f16be,"finagle-core: make FailedFastException a WriteException

Problem

FailedFastExceptions are guaranteed to not be written to the network
since they only arise in response to connection failures. This makes
them WriteExceptions and safe to re-enqueue.

Solution

Categorize FailFastException as WriteExceptions.

Result

New behavior:

  In the case where all hosts are down*: zero requeues, failed request.

  In the case of a race where one host is failed-fast after
    load balancer selection: potentially saved request via requeueing.

Old behavior:

  Failed request in both cases.

*or any other component of the stack beneath the requeue filter has
  status < Open

RB_ID=569636"
mosesn,2015-03-23 19:55:46,https://api.github.com/repos/twitter/finagle/git/commits/9bcde40421075361f0b4da38fbd7afb40cff53a6,9bcde40421075361f0b4da38fbd7afb40cff53a6,"macaw-framework: Use raw finagle types

Problem

Macaw servers don't support streaming.  The netty / finagle converter
kills streaming by accident.

Solution

Use ServerBuilder until macaw is on httpx, where the Http.serve
will use the finagle types natively.  Also, change RequestProxy to
proxy reader and writer.

RB_ID=613120"
stevegury,2015-03-23 19:17:12,https://api.github.com/repos/twitter/finagle/git/commits/e724f1988da4bc5892cf1821baa4a0042bd7bc78,e724f1988da4bc5892cf1821baa4a0042bd7bc78,"finagle-mux: FailureDetector closes connections on long inactivity

Problem

When a network partition occurs, the connection used by Mux may never be closed.
This is usually not a problem because Timeout/FailFast/FailureAccrual and others
will mark the status of the ServiceFactory as Busy. But for clients configured
with only one server, this never closes the connection.

Solution

Modify the FailureDetector, to close the underlying connection after a
(configurable) period of inactivity (no response to ping).
This period is configured as a multiple of the moving average of the ping latency.
By default, this is disabled but I recommend using a pretty large value (in the
range of 1000).

Modifications

I also introduced a new stats ""failuredetector/ping_latency_us"" which expose an
histogram of the ping latency in microseconds.

RB_ID=613666"
blackicewei,2015-03-23 18:56:44,https://api.github.com/repos/twitter/finagle/git/commits/4692ebc36f2b6808b8d399fb54fd145db11638eb,4692ebc36f2b6808b8d399fb54fd145db11638eb,"finagle-memcached: stack based pipelining finagle-memcache client

Problem

`KetamaClientBuilder` does not use pipelining, and is based on ClientBuilder.

Solution
add a Stack based Ketama client builder which uses pipelining.

RB_ID=571806
TBR=true"
luciferous,2015-03-20 00:30:26,https://api.github.com/repos/twitter/finagle/git/commits/819e034548c2b88768d89c4e0f1e90b2a17a5c6a,819e034548c2b88768d89c4e0f1e90b2a17a5c6a,"[util] Use proxyTo instead of become

Problem

In the case where it is passed a promise, Promise.become merges the
listeners of two promises, an operation which requires modifying the
internal state of both Promises. The complication arises when the
promises each have an interrupt handler: one gets overwritten.

Consider the following, which demonstrates the behavior of `become` on
promises with interrupt handlers.

    val a, b = new Promise[Unit]
    a.setInterruptHandler { case _ => println(""A"") }
    b.become(a)
    b.setInterruptHandler { case _ => println(""B"") }
    a.raise(new Exception)

This prints ""B"", the action in the interrupt handler for `b`, which is
unexpected because we raised on `a`.

Solution

A cleaner solution is to use proxyTo, which does not merge listeners,
but relies only on the standard Future.respond. We can set an interrupt
handler on proxy, which will raise on the proxied future.

RB_ID=610718"
travisbrown,2015-03-19 16:47:36,https://api.github.com/repos/twitter/finagle/git/commits/6a73425343bdd07ccc9eabd0e8be94c000b01a1b,6a73425343bdd07ccc9eabd0e8be94c000b01a1b,"Remove unused finagle-protobuf project

Problem

finagle-protobuf is not being compiled, tested, or used at Twitter and is badly
out of date.

Solution

I've created a new finagle-protobuf project in the Finagle organization on
GitHub from the subproject here (after rebasing #91). This commit completes the
move by deleting the unused subproject and removing the commented-out build
config.

Result

finagle-protobuf lives in the Finagle organization.

RB_ID=611556"
penland365,2015-03-18 19:33:03,https://api.github.com/repos/twitter/finagle/git/commits/377e7ad38bc41a0d14a3d21ee3c9dd7cf6d53237,377e7ad38bc41a0d14a3d21ee3c9dd7cf6d53237,"Problem

finagle-redis's tests use the specs framework, which is not available for Scala
2.11. Their structure is also not ideal.

Solution

Migrate all tests from specs to ScalaTest, restructuring as appropriate based on
conversations with Moses Nakamura and others, and adding FLUSHALL support to
facilitate integration testing. Parts of the test migration were completed by
Travis Brown.

Result

Finagle no longer has any test dependencies on specs.

RB_ID=607602"
mosesn,2015-03-18 17:41:12,https://api.github.com/repos/twitter/finagle/git/commits/b8adec4c035ca686906a49fbc9d1b101956f15b2,b8adec4c035ca686906a49fbc9d1b101956f15b2,"finagle-core: Handle broken pipes correctly

Problem

We don't handle sigpipe nicely.

Solution

Turn java.io.IOException(""Broken pipe"") into a ChannelClosedException.

RB_ID=610632"
mosesn,2015-03-17 17:48:54,https://api.github.com/repos/twitter/finagle/git/commits/4503b9c7c7a25e73822f0997102588826e86bd0a,4503b9c7c7a25e73822f0997102588826e86bd0a,"finagle-httpx-compat: Rename artifact

RB_ID=609848"
stevegury,2015-03-17 17:06:21,https://api.github.com/repos/twitter/finagle/git/commits/96f039fa58b31a199e00291cddb4d20a165789cf,96f039fa58b31a199e00291cddb4d20a165789cf,"finagle-mux: GCA use com.twitter.hotspot.System.minorGc instead of System.minorGc

Problem

The next release of the JVM will remove the API System.{minor,full}Gc in
favor of com.twitter.hotspot.System.minorGc

Solution
Update the usage in GC-Avoidance (GCA).

RB_ID=556948"
dschobel,2015-03-17 17:05:20,https://api.github.com/repos/twitter/finagle/git/commits/981fb61b19129a86da3763e5f66cbe0c63895470,981fb61b19129a86da3763e5f66cbe0c63895470,"finagle-kestrelx: cherry pick MultiReader patch from finagle-kestrel

cherry pick https://reviewboard.twitter.biz/r/461785/ onto kestrelx

RB_ID=609460"
dschobel,2015-03-16 17:46:12,https://api.github.com/repos/twitter/finagle/git/commits/b53494ecc831d6bcc43610e88ec70f91cd96c5f7,b53494ecc831d6bcc43610e88ec70f91cd96c5f7,"finagle-thrift: fix load-balancer assumption in test

Problem

""finagle client vs. synchronous thrift server should talk to multiple servers"" asserts
that a cluster of N hosts will each receive a single request when N requests are dispatched.
This assertion does not hold for any load balancer other than the HeapBalancer.

Solution

Test balancer flag and ignore non-heap configurations.

RB_ID=602678"
mosesn,2015-03-14 05:53:36,https://api.github.com/repos/twitter/finagle/git/commits/7961eef0beacc5f410f1086762c5b1e013ba70a1,7961eef0beacc5f410f1086762c5b1e013ba70a1,"util-registry: Allow /

Problem

There are actually a lot of strings that have / in them, like zk resolver strings, that we want to know about the /.

Solution

Allow /.  It should be fine with our current APIs.

RB_ID=607844"
mosesn,2015-03-14 04:10:05,https://api.github.com/repos/twitter/finagle/git/commits/4f514f6f7f5389b9b12a44410a6e4a23014926d3,4f514f6f7f5389b9b12a44410a6e4a23014926d3,"finagle-core: Register LoadService entries

Problem

It should be easy to see which classes are being service-loaded,
like metrics or ostrich stats.

Solution

Register LoadService entries in the R* Registry.

RB_ID=607690"
csaltos,2015-03-13 17:13:49,https://api.github.com/repos/twitter/finagle/git/commits/9223c180c806eff83a9b56ae3f3fb86cc07c121c,9223c180c806eff83a9b56ae3f3fb86cc07c121c,"Adding Talenteca to the adopters page

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=607414"
vkostyukov,2015-03-12 21:45:42,https://api.github.com/repos/twitter/finagle/git/commits/6113a892be38475373e9c76f4861fc6ed6d623a3,6113a892be38475373e9c76f4861fc6ed6d623a3,"finagle-core: Fix early channel closure with TLS enabled

RB_ID=604786"
atollena,2015-03-12 21:10:49,https://api.github.com/repos/twitter/finagle/git/commits/d001401e7e52856874f105276d96f3c80a6214b4,d001401e7e52856874f105276d96f3c80a6214b4,"finagle-core: Expose latency compensation as a Stack.Param

Problem

LatencyCompensation operates by adding a compensation to the timeout
parameters for Transporter and TimeoutFilter. This prevents other
modules from applying compensation.

Solution

Expose the compensation as a Param, and read it in Transporter and
TimeoutFilter.

Result

New modules can apply latency compensation if needed.

RB_ID=603102"
kevinoliver,2015-03-12 17:34:25,https://api.github.com/repos/twitter/finagle/git/commits/f607f170a193c8db62814710d53f9229acca2311,f607f170a193c8db62814710d53f9229acca2311,"finagle-thriftmux: Improve Java compatibility for ThriftMux.server

Problem

Java cannot see `ThriftMux.server` as having the proper types
it needs to be used in `ServerBuilder.stack`.

Solution

Introduce `StackBasedServer` that mirrors `StackBasedClient`
and is also usable from Java.

RB_ID=603476"
kevinoliver,2015-03-12 17:12:28,https://api.github.com/repos/twitter/finagle/git/commits/32577dc423c0345befd5a0dfcbb42d3ee4fe2260,32577dc423c0345befd5a0dfcbb42d3ee4fe2260,"finagle-{stats,ostrich4}: Use httpx instead of http

Problem

We are migrating to finagle-httpx from finagle-http and
as part of that we need to fix our internal dependencies
to avoid using finagle-http.

Solution

Switch to using finagle-httpx and have twitter-server serve
the metrics endpoints properly as well.

twitter-server now depends on both finagle-http and -httpx
as a bridge until it is migrated to just using httpx.

RB_ID=604718"
luciferous,2015-03-11 19:46:59,https://api.github.com/repos/twitter/finagle/git/commits/a4befe1ba26ffc5c23c2fd7c31f147d6f1726080,a4befe1ba26ffc5c23c2fd7c31f147d6f1726080,"[twitter-server] Add Sink admin endpoint

Problem

We don't have a nice interface via which we can look at events in the
sink.

Solution

Create an admin page renders HTML of the sink in tabular form. Adding a
JSON Accept header to the request returns a response in line delimited
JSON.

RB_ID=602998"
mosesn,2015-03-11 19:33:51,https://api.github.com/repos/twitter/finagle/git/commits/478e81e07c7ebb822a72f562be0c1e327afe91a5,478e81e07c7ebb822a72f562be0c1e327afe91a5,"util-core: Add `Once` for doing something exactly once

Problem

We often want to do something exactly once.

Solution

Provide a simple primitive for doing something exactly once.

RB_ID=598510"
edwelker,2015-03-11 15:22:55,https://api.github.com/repos/twitter/finagle/git/commits/f65655c1b519ca28b2e6599e700e50efc332dae5,f65655c1b519ca28b2e6599e700e50efc332dae5,"add NCBI to adopters list

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=603898"
kevinoliver,2015-03-10 23:52:04,https://api.github.com/repos/twitter/finagle/git/commits/de932e447990385d889b683e2e1dd0e7bb33303a,de932e447990385d889b683e2e1dd0e7bb33303a,"finagle-stats: Fix latched counter deltas

Problem

Latched counters were wildly wrong depending on what time
their values were queried.

Solution

Be more Ostrich like and calculate the deltas for the each
time period at update time. The current absolute value is
also kept in order to compute the delta for the next update.

Result

Ostrich compatibility mode is more ""Ostrichy"".

RB_ID=600710"
kevinoliver,2015-03-10 21:19:55,https://api.github.com/repos/twitter/finagle/git/commits/0b960fdda639d34c6714914e15f7bb774e1dee36,0b960fdda639d34c6714914e15f7bb774e1dee36,"finagle-stats: Do not read format flag eagerly

Problem

The global flag, `-com.twitter.finagle.stats.format` was
being read before flag parsing had finished leading to
the wrong formatter used at runtime.

Also, 0.95 percentile was not being formatted as p95.

Solution

Read this flag as needed and render p95 properly.

RB_ID=601486"
takei-shg,2015-03-10 17:15:27,https://api.github.com/repos/twitter/finagle/git/commits/13154f5cf4b2534512e303291aa5340173cdfe6a,13154f5cf4b2534512e303291aa5340173cdfe6a,"add SmartNews to the Adopters list

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=603332"
mosesn,2015-03-10 05:41:16,https://api.github.com/repos/twitter/finagle/git/commits/9ff8e54510b9980b76f9ed92aee08aa56a515bf2,9ff8e54510b9980b76f9ed92aee08aa56a515bf2,"finagle-mux: Treat closed connections as successful closes

Problem

There's a race where a connection gets closed, but a server has
already selected it for server dispatching.  Normally this would
be OK, but Future.join relies upon every Future being successful
to not be satisfied, since a failure short-circuits it, and we're
relying on the joined futures being alive to keep TwitterServer
alive.  After the future has been satisfied, the program exits,
shutting down all of the sockets without waiting for the graceful
shutdown to finish, even if there's time remaining.

Solution

Turn that frown upside down!  ChannelClosedExceptions are now
successful close results.

Result

TwitterServer users of graceful shutdowns can handle racy client
hangups.

RB_ID=601282"
dschobel,2015-03-07 03:38:12,https://api.github.com/repos/twitter/finagle/git/commits/6bdffad54cb37ed6eacb5b985902aaa807eee5c8,6bdffad54cb37ed6eacb5b985902aaa807eee5c8,"finagle-core: fix exit guard leak in integration tests

Problem

c.t.finagle.IntegrationBase creates non-daemonized clients which
are leaking exit guards because the clients aren't being closed.
This causes test flakiness in our ExitGuard tests which want to
assert things dependent on the global shared state intrinsic
to exit guards.

Solution

Daemonize the clients so we don't create the exit guards in the first
place.

Result

Less ExitGuard test flakiness.

RB_ID=601212"
edma2,2015-03-06 22:41:20,https://api.github.com/repos/twitter/finagle/git/commits/57b68d22caa00f91e5a70a6d00c720d071dfed4b,57b68d22caa00f91e5a70a6d00c720d071dfed4b,"finagle-core: Service.rescue should only catch NonFatal exceptions

Problem:

Service.rescue catches ""synchronous"" fatal exceptions.

Solution:

Don't catch all exceptions, just NonFatal ones.

Result:

Fatal exceptions aren't wrapped inside Futures when you call Service.rescue.

RB_ID=601006"
kevinoliver,2015-03-06 22:35:22,https://api.github.com/repos/twitter/finagle/git/commits/2b54fd32980d413a6403697e9e40a23a66eb3e05,2b54fd32980d413a6403697e9e40a23a66eb3e05,"finagle-http(x): Fix flakey StreamingTest

Problem

Some of finagle-http(x)'s StreamingTest fail occasionally.

Solution

Fix the tests to properly sequence the client requests.

RB_ID=599686"
dschobel,2015-03-06 05:42:51,https://api.github.com/repos/twitter/finagle/git/commits/2086fca67d99f60824ca465ed3ac08e58fad46cd,2086fca67d99f60824ca465ed3ac08e58fad46cd,"finagle-core: stabilize ExitGuard test

Problem

An ExitGuard test is unreliable because it verifies interrupt state.

Solution

Test isAlive state instead.

RB_ID=600120"
mariusae,2015-03-05 23:32:32,https://api.github.com/repos/twitter/finagle/git/commits/d9d256704b1868e5d44f51410ba08aa67fb1d4f5,d9d256704b1868e5d44f51410ba08aa67fb1d4f5,"finagle-core: mark closed service returns as Restartable

RB_ID=599760"
mariusae,2015-03-05 19:01:12,https://api.github.com/repos/twitter/finagle/git/commits/78d5588f9598745028fbed22210ebbbbde0090be,78d5588f9598745028fbed22210ebbbbde0090be,"finagle-thriftmux: queue writes that happen before protocol negotiation

Problem

RB 592182 handles writes as Mux->Thrift conversions while waiting
for protocol negotiation. This introduces a race where, if we send a
control message while still undergoing negotiation, a Tdrain message
could be interpreted as a channel close event. This could make
draining less useful when rejection sessions, e.g., on startup.

Solution

Instead of converting the writes, queue them and after negotiation,
replay them through the whole pipeline, as if they were newly
originated.

RB_ID=598872"
nshkrob,2015-03-05 03:15:56,https://api.github.com/repos/twitter/finagle/git/commits/d6a180dcf1e63632445f0be9e7a1e530d3b164ec,d6a180dcf1e63632445f0be9e7a1e530d3b164ec,"finagle: Revert two RetryingFilter changes that cause retries stats to disappear

Problem

These two changes cause the retries stats to not be shown; requests are potentially not retried.

Solution

Revert until further investigation.

- Revert ""finagle-core: make ClientBuilder RetryingFilter a Stack.Module and insert it down the stack""
- Revert ""finagle-core: move RequeueingFilter below BindingFactory""

RB_ID=599320
TBR=true"
luciferous,2015-03-04 19:05:35,https://api.github.com/repos/twitter/finagle/git/commits/c9851aa0a539addcd7be368ae9523081d263ae10,c9851aa0a539addcd7be368ae9523081d263ae10,"finagle-zipkin: Remove de/serialization support for BinaryAnnotation

Problem

BinaryAnnotation is a key-value pair where the type of value is `Any`.
Jackson sometimes tries to deserialize the value into a base64 encoded
byte stream. It does this even for JSON numbers.

Solution

Remove support for de/serializing BinaryAnnotation, for now.

RB_ID=597744"
mariusae,2015-03-03 23:49:02,https://api.github.com/repos/twitter/finagle/git/commits/f40aaab0c84b23270b604e9000d8551e7a67b4bf,f40aaab0c84b23270b604e9000d8551e7a67b4bf,"finagle-core, aperture balancer: allow minimum aperture sizes; defaults by flag

Problem

1. There's no way to specify minimum aperture size (e.g., to control
load banding).

2. Parameterization of the aperture load balancer is fixed; this makes
it difficult to experiment with different parameters.

Solution

Introduce parameter minAperture so that we can have a minimum aperture
size. Add flag com.twitter.finagle.loadbalancer.apertureParam to
control defaults.

RB_ID=592374"
mosesn,2015-03-03 21:14:23,https://api.github.com/repos/twitter/finagle/git/commits/bded7873426ba133b245a733db09d39d7ac2648e,bded7873426ba133b245a733db09d39d7ac2648e,"finagle-benchmark: {spanid,statsreceiver} caliper => jmh

Problem

We should migrate finagle's benchmarks from caliper to jmh.

Solution

Set up finagle for jmh, migrate a few simple tests

RB_ID=595572"
dschobel,2015-03-03 20:47:39,https://api.github.com/repos/twitter/finagle/git/commits/95dd3bdf3b5efa6b156ac6f62e7c424a58f3358c,95dd3bdf3b5efa6b156ac6f62e7c424a58f3358c,"Problem

It's hard to know what's preventing the process from exiting once
you've closed all the clients/servers you thought was holding them
open.

Solution

Make the ExitGuard.guard API private since it's only used by finagle
(see Marius' comment on the linked ticket). Then add a label to the
exit guard so that we can identify which client/server is keeping
the process alive if it hasn't shut down. Users who wish to see
this can use the ExitGuard.explainGuards() method.

Result

ExitGuard.explainGuards() will give a human-readable explanation
of why the process is guarded from exiting.

RB_ID=597192
TBR=true"
mosesn,2015-03-03 20:12:05,https://api.github.com/repos/twitter/finagle/git/commits/8055deb89c657a3b9ac683306d0072e90aba1ab8,8055deb89c657a3b9ac683306d0072e90aba1ab8,"finagle-core: Add Client and Server Stack params to the registry

Problem

We want to export Stack params to the registry

Solution

Reuse StackRegistry#register to register params in the GlobalRegistry

RB_ID=593178"
nshkrob,2015-03-03 00:54:19,https://api.github.com/repos/twitter/finagle/git/commits/1ea34e59f415ec2d508788a503542ed968511e53,1ea34e59f415ec2d508788a503542ed968511e53,"csl sbt build: Use git rev-parse instead of symbolic-ref

Problem

sbt build calls 'git symbolic-ref' which fails in a detached HEAD state. This breaks github travis builds, e.g. https://travis-ci.org/twitter/util/jobs/52793532

Solution

Use 'git rev-parse --abbrev HEAD' instead.

RB_ID=596030"
bmckown,2015-03-02 20:39:01,https://api.github.com/repos/twitter/finagle/git/commits/b0673b0aab11eb701a6cb777a41a73e5f61a8175,b0673b0aab11eb701a6cb777a41a73e5f61a8175,"Update domain to raw.githubusercontent.com

Signed-off-by: Daniel Schobel <dschobel@twitter.com>

RB_ID=595728"
luciferous,2015-03-02 19:18:04,https://api.github.com/repos/twitter/finagle/git/commits/2a45450962822250d115522b5c62d5e20c97a777,2a45450962822250d115522b5c62d5e20c97a777,"util: Add TraceId/SpanId to Event

Problem

It would be helpful if the flight recorder events included the
TraceId/SpanId so that we can correlate events from a given request.

Solution

Add two additional fields to the Event type to store the TraceId and
SpanId encoded as Longs.

Smokestack

nullsink.event   1000000 1 bytes/iter
sizedsink.event  1000000 8 bytes/iter
sizedsink.record 1000000 7 bytes/iter
sizedsink.trace  1000000 8 bytes/iter

RB_ID=593314"
vkostyukov,2015-02-28 00:50:41,https://api.github.com/repos/twitter/finagle/git/commits/f6c0a3a133a3d4eb3ca0a774517142c96fbb8d4d,f6c0a3a133a3d4eb3ca0a774517142c96fbb8d4d,"finagle-core: Fix sbt build/tests

RB_ID=594100"
mosesn,2015-02-27 22:46:16,https://api.github.com/repos/twitter/finagle/git/commits/7b64868f160fa36485e34276134785970535ac95,7b64868f160fa36485e34276134785970535ac95,"util-stats: Deprecates StatsReceiver.time{,Future}

Problem

StatsReceiver#time{,Future} encourage the bad habit of creating a
new Stat instance every time you time something.

Solution

Instead of letting a method hide the Stat creation, require that
the Stat be passed in explicitly.  This was done in an earlier
review, this review deprecates the StatsReceiver#time{,Future}
methods and replaces most of the uses in birdcage and science.

Result

StatsReceiver#time{,Future} are no longer widely used in the twitter
code base, and we have created a path to removing the
StatsReceiver#time{,Future} methods.

RB_ID=588854
TBR=true"
luciferous,2015-02-26 21:33:56,https://api.github.com/repos/twitter/finagle/git/commits/5826880c27f37fd45939be2a08be47beefd2e440,5826880c27f37fd45939be2a08be47beefd2e440,"twitter-server, util, finagle: Sink import and export

Problem

No way to inspect events captured by the Sink.

Solution

A JSON serializer and deserializer for Events. The sink is an iterator
of Events and can be serialized into line delimited JSON, where each
line represents a single Event.

    {""id"": <string>, ""when"": <long>, ""data"": <json>}

We don't store the longVal and doubleVal at the top level because these
can be encoded as specializations of the objectVal.

Example of a sink of three events, each event is delimited by ""\r\n"".

{""id"":""Trace"", ""when"":123, ""data"":[""ClientSend"", {}]}\r\n
{""id"":""Record"", ""when"":123, ""data"":{""level"":""INFO""},""message"":""hello""}}\r\n
{""id"":""StatAdd"", ""when"":123, ""data"":{""name"":""foo"", ""delta"":9999}}\r\n

The Event.Type constructions implement how to de/serialize the object
value. The Sink dispatches JSON to the event types after decoding the
line delimited payloads.

Smokestack

nullsink.event   1000000 0 bytes/iter
sizedsink.event  1000000 6 bytes/iter
sizedsink.record 1000000 6 bytes/iter
sizedsink.trace  1000000 6 bytes/iter

RB_ID=584664"
blackicewei,2015-02-26 18:47:58,https://api.github.com/repos/twitter/finagle/git/commits/ed5ff1776a01b5c3319f0882e3248a3c505f392f,ed5ff1776a01b5c3319f0882e3248a3c505f392f,"finagle-memcached: revert the change which disables failFast

Problem

Turning failFast off by default may cause clients who previous
rely on it for failure management to see problems.

Solution

Keep failFast on as before. Up to client to toggle this
param.

RB_ID=592762"
mariusae,2015-02-26 18:35:41,https://api.github.com/repos/twitter/finagle/git/commits/5501e2472af8f3053b75026362b7695755f39d66,5501e2472af8f3053b75026362b7695755f39d66,"finagle-thriftmux: don't pass writes before protocol negotiation

Problem

finagle-thriftmux installs protocol conversion code to account for
legacy clients. Before we know whether the session is a TFramed or
TTwitter session, it simply passes writes through.

This means that a Mux message (e.g., a Tdrain from a rejected session)
passes through unconverted. This causes the client to attempt to
interpret the Mux frame as a Thrift frame. In the case of Tdrain, this
leads to a client-side OOM while trying to read the method name.

Solution

Don't do it. Convert downstream messages while upgrading. Since it is
illegal for the dispatcher to send R messages at this time, only
control T messages are subject -- Tping, Tdrain, and so-on. Here we
want the default actions.

RB_ID=592182"
mariusae,2015-02-25 19:06:38,https://api.github.com/repos/twitter/finagle/git/commits/e63437b728cfd566e0a1ad2c5833b70dc0b570af,e63437b728cfd566e0a1ad2c5833b70dc0b570af,"finagle-core: remove default implementation of Client.newService

Problem

Client.newService is redefined in StackClient to pass parameter
FactoryToService.Enabled(true). This is important to downstream
behavior.

In several places, most troublingly in the canonical
'Proto.newService' (incl., Thrift.newIface, ThriftMux.newIface), the
default implemenation is used, and FactoryToService.Enabled(false).

Solution

Don't define 'newService' by default. It's clearly implementation
specific and we don't have a safe default implementation.

RB_ID=591192"
dschobel,2015-02-25 01:16:37,https://api.github.com/repos/twitter/finagle/git/commits/8460d36ec5282b071e7db74d6acd260c629853c2,8460d36ec5282b071e7db74d6acd260c629853c2,"finagle-core: load balancer status reflects node status + requeues are contigent on Open stack

Problem

Load balancers have perpetually Open status which limits our decision
making higher in the stack.

Solution

Define load balancer status as a function of constituent node health.
Use this status to make better requeueing decisions.

Result

More information higher in the stack. RequeueingFilter can now requeue
conditionally on underlying stack status.

RB_ID=588222"
mosesn,2015-02-25 00:53:57,https://api.github.com/repos/twitter/finagle/git/commits/1045b696cc3da43469fff4a4e78ba9c96e523a9d,1045b696cc3da43469fff4a4e78ba9c96e523a9d,"util-app: Adds Flags to registry

Problem

Flags with interesting values should be added to the registry.

Solution

There is a solution in a few parts.

1.  How to hook into flags?

The simplest solution is to do it at read time.  Reading is done
in a few different places, but the simplest way is to just put it
in the getValue method of Flag, which works for both GlobalFlags and
for regular Flags.

2.  Which registry to register in?

The registry is global, and it seems somewhat silly to program as
if it's not, so I've taken the same approach as we do with Time.

Result

Flags are added to the registry after read time, and are structured
like so:

/registry/flags/foo = true

RB_ID=587044"
mariusae,2015-02-24 22:17:25,https://api.github.com/repos/twitter/finagle/git/commits/7a33a59643d45d1f79bc6dcfb86b21cc41c3e47f,7a33a59643d45d1f79bc6dcfb86b21cc41c3e47f,"finagle-core: overhaul c.t.f.Failure

Problem

c.t.f.Failure is becoming increasingly unwieldy.

 *	The injectors and extractors did not correspond one-to-one
	with their named flags. For example, Failure.Rejected(x) defined
	more flags than Failure.isRejected.
 *	Flags conflated properties with interpretation of those properties.
 	For example, Failure.Rejected defined Unwritten|Rejected|Retryable,
 	but weren't necessarily true (e.g., a rejected request isn't necessarily
 	unwritten).
 *	Rejected was potentially passed through to the user. This can be
 	dangerous. (And hints at an assymetry in how flags need to be
 	interpreted.)

Solution

Simplify Failures, treat flags purely, and don't pretend to have separate
failure classes for each flag. There are now just a set of uniform
constructors and a single extractor. We also introduce Failure.adapt
and Failure.wrap, to facilitate uniformly modifying/wrapping failures.

I also took the opportunity to do some general cleanup, like introducing
type safety in the treatment of sources.

Note

This is the first of two changes that promote Failure to the primary
failure handling mechanism in Finagle. After this change, I will
introduce a change that wraps every Finagle-originated exception
with Failure.wrap, and a module to maintain statistics and unwrap
these for user presentation.

RB_ID=585792
TBR=true"
nshkrob,2015-02-24 19:38:33,https://api.github.com/repos/twitter/finagle/git/commits/96f1543f7d92c123a969dbfac293a088342a4f65,96f1543f7d92c123a969dbfac293a088342a4f65,"finagle: Fix compile error in KetamaClientStress

RB_ID=590400
TBR=true"
mariusae,2015-02-19 20:48:10,https://api.github.com/repos/twitter/finagle/git/commits/c568204d27bb5cf8180167b6012048eac50956ce,c568204d27bb5cf8180167b6012048eac50956ce,"finagle-mux: rate limit request reissues (retry budget)

Problem

RequeueingFilter blindly reissues requests up to 25 times. This could
cause bad load spikes exactly when systems are rejecting the most
load. (e.g., imagine an entire cluster teetering).

Solution

Introduce a retry budget. We use a leaky token bucket (with a reserve)
to reissue requests at a maximum 1:5 ratio with normal issue. This
will allow us to safely use the reissue mechanism in large-scale
settings.

RB_ID=571896"
dschobel,2015-02-19 20:07:30,https://api.github.com/repos/twitter/finagle/git/commits/c7403b6bc81d2d859a74385a8a666c95aa3f3f9c,c7403b6bc81d2d859a74385a8a666c95aa3f3f9c,"finagle-core: more consistent DynNameFactory and BindingFactory status

Problem

BindingFactory does not expose the status of the stack beneath it.
This results in inconsistent status semantics depending on whether you
configure the stack with a bound or unbound name. The former propagates
the status of the stack below, the latter is perpetually Open.

Solution

Update DynNameFactory's status to reflect the state of name resolution
and the status of the underlying service factory.
Update BindingFactory to reflect the status of the cached DynNameFactory
instance for the current base + local dtab.

Result

BindingFactoryModule consistently propagates status from the stack below
irrespective of the destination type.

RB_ID=580578"
mariusae,2015-02-18 23:50:33,https://api.github.com/repos/twitter/finagle/git/commits/456307b9f597ce9b71b097086dd04e946a3aa127,456307b9f597ce9b71b097086dd04e946a3aa127,"finagle-core/mux: reject sessions gracefully

Problem

Servers may throw exceptions during service acquisition. (An example:
Gizmoduck does this to rate limit session creation during startup.)
This is not handled gracefully. We simply close the transport. Since
almost every session creation is followed immediately by a request
issue, this will basically always result in a failed request.

We can do much better for protocols that support nacking and/or
graceful shutdown.

Solution

Always create sessions, but if service acquisition fails: (1) install
a Service.const that always fails with a Failure.Rejected; (2)
immediately close the session.

The combination of these two allow protocols like Mux to gracefully
decline the session; requests will be transparently reissued by the
client.

RB_ID=572580"
vkostyukov,2015-02-18 02:42:56,https://api.github.com/repos/twitter/finagle/git/commits/861659581dfc01eac6c8a168afc54e68b66fe92a,861659581dfc01eac6c8a168afc54e68b66fe92a,"finagle-core: Close the channel if peer closed the TLS session

RB_ID=579260"
tonyd3,2015-02-18 01:33:32,https://api.github.com/repos/twitter/finagle/git/commits/392e3ed01d0c7e78cd5de8a999861e68e0b045c3,392e3ed01d0c7e78cd5de8a999861e68e0b045c3,"Problem

ThriftClientBufferedCodec class extends ThriftClientBufferedCodec,
so when we call ThriftClientBufferedCodec.get() it actually
returns ThriftClientFramedCodec

Solution

Implement get function in the ThriftClientBufferedCodec
object so that it returns ThriftClientBufferedCodec.

Result

You should be able to call ThriftClientBufferedCodec.get() and
return a correct value, which is very useful for Java development.

RB_ID=583920"
dschobel,2015-02-18 01:07:33,https://api.github.com/repos/twitter/finagle/git/commits/a7d4adf43b18811250edd026ec7b1efd5f1a3813,a7d4adf43b18811250edd026ec7b1efd5f1a3813,"finagle-memcached: fix indefinite blocking calls in ClusterClientTest

RB_ID=579928"
tonyd3,2015-02-18 00:32:33,https://api.github.com/repos/twitter/finagle/git/commits/27aa087dc93dc635265905a09debbdc39ff2076f,27aa087dc93dc635265905a09debbdc39ff2076f,"finagle-core: Add get Function to Aperture.scala for Java access

Problem
We want to use the Aperture LoadBalancerFactory in a Java client.

Solution
Implement a get function in the object, so it can have Java access.

Result
You should be able to call ApertureBalancerFactory.get() and return
the object, which is very useful for Java development.

Signed-off-by: Kevin Oliver <koliver@twitter.com>

RB_ID=583902"
blackicewei,2015-02-17 06:35:01,https://api.github.com/repos/twitter/finagle/git/commits/df630977195037d17bfe9779661d2a6279634504,df630977195037d17bfe9779661d2a6279634504,"finagle-memcache: KetamaFailureAccrual checks failureCount before failing immediately

Problem

There is a bug in KetamaFailureAccrualFactory, when the underlying
service is in a busy status, it fails immediately without checking
accumulated failure counts.

Solution

Check the state of KetamaFailureAccrualFactory instead of status,
since busy value of the latter can be inherited from the underlying
serviceFactory, while the former is set purely based on failureCount.

RB_ID=576904"
luciferous,2015-02-13 17:55:44,https://api.github.com/repos/twitter/finagle/git/commits/00abce555285a19147bf9b38a1fd480959e26489,00abce555285a19147bf9b38a1fd480959e26489,"trivial: java => javaapi for http/x

Problem

The last namespace change introduced c.t.f.http{,x}.java
which breaks compilation for java.*.

Solution

Rename java to javaapi (like it was previously), but preserve
the http/x prefix.

RB_ID=580046"
mosesn,2015-02-13 17:24:46,https://api.github.com/repos/twitter/finagle/git/commits/e7c15e5915c11b5fb836e10c1dc472bdf6a438fe,e7c15e5915c11b5fb836e10c1dc472bdf6a438fe,"finagle-core: TimeoutFactory's Failure should be Unwritten

Problem

Failure.Retryable is not retried automatically, TimeoutFactory's failure should have been called ""Unwritten"".

Solution

Failure.Retryable => Failure.Unwritten

RB_ID=581468"
kevinoliver,2015-02-12 19:07:48,https://api.github.com/repos/twitter/finagle/git/commits/1a6d40eea78536893f4d95dfdac120396bd9194f,1a6d40eea78536893f4d95dfdac120396bd9194f,"finagle-stats: Easier migration from Ostrich

Problem

It is a bit more work necessary for users to migrate
from finagle-ostrich4 to finagle-stats. This is due to
counters not being delta-ed in finagle-stats as they are
in Ostrich as well as histogram labels having slightly
different names.

Solution

Add two flags that enable a compatibility mode:

  -com.twitter.finagle.stats.useCounterDeltas=true
  -com.twitter.finagle.stats.format=ostrich

The first flag enables per-minute delta computations
of counters on calls to ""/admin/stats.json?period=60""
and the second flag makes the histograms use the same
labels as Ostrich.

Result

finagle-ostrich4 users should be able to migrate more
easily to finagle-stats.

RB_ID=571868"
vkostyukov,2015-02-10 20:19:22,https://api.github.com/repos/twitter/finagle/git/commits/df55c256323f428a597c50f8a07b3549013cf6dd,df55c256323f428a597c50f8a07b3549013cf6dd,"finagle-core: Add method Client.newService(dest, label)

RB_ID=577966"
mosesn,2015-02-10 05:08:49,https://api.github.com/repos/twitter/finagle/git/commits/2eddc7b424efd9963c316a4c5fda6b25eeb27ccf,2eddc7b424efd9963c316a4c5fda6b25eeb27ccf,"finagle-core: Interrupted Futures are failed with Failure.InterruptedBy

Problem

It's difficult to match on interruptions, which may be desirable
for things like counting, or retries.

Solution

All interruptions should be marked Failure.InterruptedBy.  TimeoutFactory
hides the result when it interrupts, and should also be marked as
retryable, so I'm omnibus-ing it on since they're related.  Technically,
if you're interrupted in the WatermarkPool, it's also Retryable,
but we don't want to actually retry on them, so we're changing the
WriteExceptionsOnly to not support InterruptedBy | Retryable failures.

RB_ID=565232"
mosesn,2015-02-10 04:08:38,https://api.github.com/repos/twitter/finagle/git/commits/8fdd3431e43e38ee96abab1254245fd1512f98db,8fdd3431e43e38ee96abab1254245fd1512f98db,"goodbye jeff (?????????`???)
find . -name OWNERS | xargs grep -l '^jeff$' | xargs sed -i '' '/jeff/d'

RB_ID=569806
TBR=true"
kevinoliver,2015-02-09 19:33:48,https://api.github.com/repos/twitter/finagle/git/commits/65b7961b385b69bfa229cb5d97fe7e6275d9e4af,65b7961b385b69bfa229cb5d97fe7e6275d9e4af,"finagle-core: Improve Scaladocs for ClientBuilder

Problem

The scaladocs for `c.t.f.builder.ClientBuilder.retries`
could be improved.

ClientBuilder's scaladocs in general needed some formatting
fixes as well.

Solution

Fix the formatting and add more color to `retries`.

RB_ID=575760"
travisbrown,2015-02-09 18:59:18,https://api.github.com/repos/twitter/finagle/git/commits/a6c64d7a073ca2c4bb89675857ad6f99462151a4,a6c64d7a073ca2c4bb89675857ad6f99462151a4,"Add API docs URL to SBT config for POM

Problem

Since Scala 2.10.2 and SBT 0.13 it's been possible to allow clients of a library
to automatically link against API documentation via some extra metadata in the
published POM. We're not currently providing this metadata for Finagle or Util.

Solution

Add the appropriate settings to the SBT builds for Util and Finagle.

Result

Projects that depend on Util or Finagle can have references in their API docs
automatically linked to ours.

RB_ID=575544"
edma2,2015-02-05 20:21:03,https://api.github.com/repos/twitter/finagle/git/commits/015e359428c3ef7e471465cb5eedc8053e3032e0,015e359428c3ef7e471465cb5eedc8053e3032e0,"[finagle-http] add request.ctx to RequestProxy

Problem: finagle-http RequestProxy doesn't proxy ctx
Solution: finagle-http RequestProxy should proxy ctx
Result: finagle-http RequestProxy now proxies ctx

RB_ID=574562"
luciferous,2015-02-05 19:40:45,https://api.github.com/repos/twitter/finagle/git/commits/daded4f72e3d48cfa3cae9c693f3438b49e71f16,daded4f72e3d48cfa3cae9c693f3438b49e71f16,"[trivial]: Use bufSize in streamChunks recursive case

Problem

streamChunks takes an optional bufSize argument, but it discards it in
the recursive case. This means bufSize is respected in only the initial
call to read(), subsequent calls default bufSize to Int.MaxValue.

Note: This bug is impossible for the user to encounter because of the
access of Reader.streamChunks (i.e. only http/x packages can use it).
All call sites omit the bufSize argument, and so the recursive case has
the correct bufSize. However, it's possible to run into this issue by
packaging code under the http/x namespace, thereby subverting the access
barrier to call Reader.streamChunks directly.

Solution

Use bufSize in the recursive case.

RB_ID=574416"
orrsella,2015-02-05 05:36:49,https://api.github.com/repos/twitter/finagle/git/commits/bed163eb630fe18a38770d114eb273695712cf96,bed163eb630fe18a38770d114eb273695712cf96,"Clients.rst ??? Fix StatsReceiver src link

Had a missing `.scala` file extension.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=573292"
orrsella,2015-02-05 05:29:07,https://api.github.com/repos/twitter/finagle/git/commits/7ac1d9e1bafdf80f982c25926adb08a2972e6053,7ac1d9e1bafdf80f982c25926adb08a2972e6053,"Protocols.rst ??? Fix wording

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=573300"
mosesn,2015-02-04 21:27:27,https://api.github.com/repos/twitter/finagle/git/commits/36e518a777442a8cd9180511bf096c14ee02a667,36e518a777442a8cd9180511bf096c14ee02a667,"finagle-core: Make Aperture's use of Ema monotonic

Problem

Folks were seeing assertion errors of ""nonmonotonic timestamp"" in the wild.  Assertion errors are pretty unpleasant, so they're hard to recover from, and it meant that Ema's assumption of monotony was broken.  It seems that this was happening because Monotime could provide timestamps monotonically, but then the user of Monotime didn't guarantee that update() using those timestamps would be used atomically with picking them up.

Solution

This is the simplest solution, which is to wrap sample and update in a synchronized block, which guarantees that update doesn't race with another timestamp.

RB_ID=573116"
luciferous,2015-02-04 03:17:37,https://api.github.com/repos/twitter/finagle/git/commits/1c7d918c3a59593e694897e7bb39ec626d6dc896,1c7d918c3a59593e694897e7bb39ec626d6dc896,"[finagle-mux] Use a cheaper placeholder for discarded requests

Problem

When a request times out, its response promise is replaced with a
stand-in to reserve the tag until the peer responds, acknowledging the
discard. This makes each canceled request more costly than it needs to
be.

Solution

Because stand-ins have no waiters, we can create just one to be a
sentinel. When the peer responds, we resolve promise, if it's not the
sentinel.

Result

Timedout requests are cheaper because they avoid the creation of a new
promise with each cancellation.

RB_ID=568258"
mosesn,2015-02-04 02:52:36,https://api.github.com/repos/twitter/finagle/git/commits/fe7d1062f4258c562ffe166a4b5cf40bb83aab5a,fe7d1062f4258c562ffe166a4b5cf40bb83aab5a,"csl: Use snapshot versions in sbt while off master

Problem

It's a hassle to develop off of the `develop` branch in OSS, because
a given `develop` may depend on an unpublished `develop` in another
repository.

Solution

Although a long-term solution may entail getting [dbuild][0] working,
that's not yet satisfactory for internal twitter usage, since dbuild
assumes that there is one repository per [sbt project][1].

An interim solution is to check whether we're on the master branch,
and use a ""-SNAPSHOT"" suffix otherwise.

Result

If you want to develop on finagle, but depend on new changes in
util, checkout util/develop, `./sbt publish-local`, and then checkout
finagle/develop and just `./sbt compile`.  It should ""just work"".

[0]: http://typesafehub.github.io/dbuild
[1]: https://github.com/typesafehub/dbuild/issues/159

RB_ID=569590"
luciferous,2015-02-03 21:58:47,https://api.github.com/repos/twitter/finagle/git/commits/620f7a93fc589c884a671a5a2a992dff000b5ae4,620f7a93fc589c884a671a5a2a992dff000b5ae4,"[trivial]: Namespace javaapi tests for http/x

Problem

Duplicate classes in http/httpx clash when built
together.

Solution

Move javaapi under http or httpx namespace.

RB_ID=568790"
evnm,2015-02-03 17:40:42,https://api.github.com/repos/twitter/finagle/git/commits/ac9d96b68d015fe44f54de1889f4742bb5cadf63,ac9d96b68d015fe44f54de1889f4742bb5cadf63,"birdcage: Update all references to deprecated `pants goal` command

Problem

The Pants `goal` command was recently removed, but still appears in
most documentation and build scripts.

Solution

git grep -l './pants goal' | uniq | xargs gsed -i 's/\.\/pants goal/\.\/pants/g'

This branch differs from RB 568424. Buildstats changes in the review
have been reverted in this commit.

RB_ID=568424
NO_USER_HOOK=true"
blackicewei,2015-01-30 18:20:18,https://api.github.com/repos/twitter/finagle/git/commits/61ed16c41ad1a4b1dbb6fa0afa0c725e09d0500a,61ed16c41ad1a4b1dbb6fa0afa0c725e09d0500a,"finagle: fix a merge confict in CHANGES

RB_ID=568954"
kevinoliver,2015-01-30 02:10:34,https://api.github.com/repos/twitter/finagle/git/commits/3c51a771f6818ee1df1fc87c6b7740ba035495cb,3c51a771f6818ee1df1fc87c6b7740ba035495cb,"finagle-core: Reduce logging in ClientRegistry

Problem

For large clusters, `c.t.f.client.ClientRegistry` is quite
verbose when outputting the resolved `Addr`.

Solution

Reduce the amount logged in the common case of `Addr.Bound`.

Existing behavior can be kept by setting log level to `Level.FINER`.

RB_ID=567404"
blackicewei,2015-01-29 20:08:32,https://api.github.com/repos/twitter/finagle/git/commits/64a158812926473a9f4fdd8cda4d58022f262c7b,64a158812926473a9f4fdd8cda4d58022f262c7b,"finagle-memcache: wired StatsReceiver in KetamaFailureAccrualFactory, add jitter in markDeadFor

Problem

KetamaFailureAccrualFactory does not have StatsReceiver wired in, so
there is no way to observe revivals/removals counters in production.
And with current markDeadFor duration, it's possible all memcache
clients start to send traffic to the dead memcache node at the same
time.

Solution

Use DefaultStatsReceiver in KetamaFailureAccrualFactory. And add
10% jitter in markDeadFor duration.

RB_ID=562290"
evnm,2015-01-29 05:29:42,https://api.github.com/repos/twitter/finagle/git/commits/1e1fa65f4e2b2c87e9bd2df917cb382fe1a54fb4,1e1fa65f4e2b2c87e9bd2df917cb382fe1a54fb4,"finagle-core: Include full Dtab in NoBrokersAvailableException message

Problem

NoBrokersAvailableExceptions' error message don't provide any context
on the Dtab through which a failed name is passed. This is a missed
opportunity to aid confused users who are debugging their rewrite
rules.

Solution

Include both the base and local Dtabs in NBAE's error message.

RB_ID=564828"
mariusae,2015-01-28 23:05:07,https://api.github.com/repos/twitter/finagle/git/commits/f354eb71a6bd4cd8e451e5f01a1beef825306cda,f354eb71a6bd4cd8e451e5f01a1beef825306cda,"finagle-mux: transit Failure.Rejected as nacks

Problem

While Mux has NACK support, its API is currently internal only. (e.g.,
NACKs are used during draining.) We want to expose this to users so
that servers can indicate transient unavailability, and the client can
transparently requeue the request.

Solution

Introduce Failure.Rejected, a failure indicating rejected dispatch.
These are translated to NACKs. We also tidy up the handling of NACKs
in the client. In particular, we ditch the custom
""RequestNackedException"" with a standard Failure. Additionally, _only_
Failure.Rejected should receive automatic requeue treatment; not any
Failure.Retryable.

RB_ID=562366"
vkostyukov,2015-01-28 20:44:07,https://api.github.com/repos/twitter/finagle/git/commits/c69a01da0844814a08054cf3ae17d2bfb6a2c479,c69a01da0844814a08054cf3ae17d2bfb6a2c479,"finagle-http{x}: Add missing compression params to Http/Httpx stacks

RB_ID=566220"
evnm,2015-01-28 00:24:09,https://api.github.com/repos/twitter/finagle/git/commits/6a38f2a78b60616821fe52841be1e5a5e444733c,6a38f2a78b60616821fe52841be1e5a5e444733c,"Rm evm from all OWNERS files

RB_ID=566130
TBR=true"
dschobel,2015-01-27 20:25:33,https://api.github.com/repos/twitter/finagle/git/commits/9160100ce380537dec28941e810236953fb496d4,9160100ce380537dec28941e810236953fb496d4,"finagle-memcached: mark two flaky tests as flaky

RB_ID=565426"
mariusae,2015-01-27 20:12:44,https://api.github.com/repos/twitter/finagle/git/commits/30e39c181ccf85efd9dd24fd141fe68d3c556473,30e39c181ccf85efd9dd24fd141fe68d3c556473,"finagle-mux: Introduce a session failure detector

Problem

We don't have a way to measure session layer liveness. Currently we
rely on connection cutting (which could be due to TCP keepalives, but
they are not really tuned sensibly for our use) and a fail-fast module
to gauge session liveness. This is fickly and unpredictable: we'd like
to extend the notion of liveness in to the application, where it is
much better measured. It's in the same latency and failure domain as
the actual code we're interested in invoking.

Further, TCP keepalives admit little dynamism: we must pick a static
timeout and cannot make any sort of sophisticated or gradual judgement
about an application's state.

Solution

We use Mux's Tping message to transmit periodic messages that are then
used to gauge the peer's liveness. We implement a failure detector,
coined the ""Threshold Failure Detector"" which dynamically determines
an appropriate timeout based on history.

/**
 * The threshold failure detector uses sessions pings to gauge the health
 * of a peer. It sends ping messages periodically and records their RTTs.
 * These RTTs are averaged over a number of observations.
 *
 * The session is marked [[Status.Busy]] until the first successful ping
 * response has been received.
 *
 * If a ping has been sent and has been outstanding for a time greater
 * than the threshold multiplied by the current exponentially moving
 * average, the session is marked as [[Status.Busy]]. It is marked
 * [[Status.Open]] when the ping message returns.
 *
 * This scheme is pretty conservative, fairly it requires little apriori
 * knowledge: the parameters are used only to tune its sensitivity to
 * history and to bound its failure detection time. The time to detection
 * is bound by the ping period plus the threshold multiplied by the
 * average ping RTT.
*/

Performance notes

We'd like the ping code path to be economical in allocation, since it
scales with the number of sessions (client and server). This change
does a little to improve things, like caching encoded messages, but we
could do a lot more. It may be prudent to push ping processing down to
Netty to gain fine-grained control over allocation. We may also
consider implementing a global rate limit for ping messages. (This
dynamism is permissible in the current threshold detector; it amounts
to adjusting the period dynamically, which presents the trade off of
slower convergence with fewer allocations.) Additionally, we could
dedicate a thread to maintain the health of all Mux sessions, to avoid
extra timer overhead, etc.

RB_ID=542094"
kevinoliver,2015-01-26 17:57:51,https://api.github.com/repos/twitter/finagle/git/commits/5c20338af824c4698fe80f94ca637d6266431ded,5c20338af824c4698fe80f94ca637d6266431ded,"finagle-core: Use IntegrationPatience in StatusTest

Make `StatusTest.whenOpen` more deterministic by giving it
more time to reach the desired state.

RB_ID=562624"
stuhood,2015-01-23 01:23:38,https://api.github.com/repos/twitter/finagle/git/commits/2706e3b3543ad8087c65d80270b5c7bc7cd012f8,2706e3b3543ad8087c65d80270b5c7bc7cd012f8,"birdcage: Split out 3rdparty deps to be opened

These 3rdparty BUILD files will be ""open sourced"" to support their (already opened) dependees. As a side benefit, the massive 3rdparty/BUILD file shrinks a bit.

- Explode initial set of (open source dependee) 3rdparty deps out from 3rdparty/BUILD.* and into subdirectories

This was produced by splitting out the dependencies of finagle, util, scrooge and twitter-server (computed via depmap: see attached ticket) manually into subdirectories, and then using a script like the following for each moved target:

    find . -name 'BUILD*' | xargs egrep --color=auto -i -s ""$1"" | xargs sed -i '' ""s|$1|$2|g""

RB_ID=560570
USER_HOOK_ARGS=--i-am-evil -x birdcage/macaw-swift/PRESUBMIT/check-swoop"
stevegury,2015-01-22 21:40:11,https://api.github.com/repos/twitter/finagle/git/commits/e8151af6eb781a1abd89f0b755969f43f358e637,e8151af6eb781a1abd89f0b755969f43f358e637,"finagle-core: Copy the marshalId to avoid memory pressure

Problem

The latest version of finagle has a higher GC pressure due to the Context keeping
an indirect reference to Netty's underlying buffer.
In the heapdump that I analyzed, those buffers can be as big as 4MB.

Solution

Copy the id eagerly and don't keep a reference to the previous Buf.

RB_ID=559066"
blackicewei,2015-01-22 19:03:24,https://api.github.com/repos/twitter/finagle/git/commits/19863442f56a10634c9dce6b84da2ac2e134dca7,19863442f56a10634c9dce6b84da2ac2e134dca7,"finagle-core: fix memory pressure introduced in Netty3Transporter

Problem

A new Netty3Transporter instances was created for every new Transport,
which creates new instances of ChannelStatsHandler, which uses Gauge.
This introduces memory pressure from WeakReference used in CumulativeGauge.

Solution
Reuse the Netty3Transporter instance.

RB_ID=560950"
xudifsd,2015-01-22 18:25:15,https://api.github.com/repos/twitter/finagle/git/commits/cce4c90a88e1d95e17749a642fafda109bfb305a,cce4c90a88e1d95e17749a642fafda109bfb305a,"fix broken WatermarkPool link in doc, also add *.pyc to .gitignore

Signed-off-by: Bing Wei <bing@twitter.com>

RB_ID=561874"
evnm,2015-01-22 01:32:47,https://api.github.com/repos/twitter/finagle/git/commits/6ea0bc2042dbbb2408b681ecf1fcf163bcb90339,6ea0bc2042dbbb2408b681ecf1fcf163bcb90339,"finagle-core: Introduce ""probation"" state to client loadbalancers

Problem

Finagle's loadbalancers directly reflect the state of the underlying
service discovery mechanism. Thus, if the service discovery mechanism
fails, even transiently, the loadbalancers quickly find themselves
with an empty target node list.

Solution

Introduce a notion of ServiceFactory ""probation"" used to enforce a
conservative ejection policy. When the feature is enabled, nodes are
placed on probation when they are removed from the node-set. They are
removed only when the fail-fast mechanism marks the host unavailable.

RB_ID=531943"
vkostyukov,2015-01-21 08:51:35,https://api.github.com/repos/twitter/finagle/git/commits/3c1f7cdc9fed5f57132eced54de7ed8a543f4d03,3c1f7cdc9fed5f57132eced54de7ed8a543f4d03,"Replace MODULE$ usages with brand new Java API for Finagle&Co

RB_ID=555154
TBR=true"
blackicewei,2015-01-19 22:25:13,https://api.github.com/repos/twitter/finagle/git/commits/d1d09420e86b0f3d826888abee6b82b48343f9a5,d1d09420e86b0f3d826888abee6b82b48343f9a5,"finagle-memcache: use failureAccrual and fails immediately when marked dead

Problem

Finagle-memcache client needs better failure management to avoid cache instances
from being overloaded in failure scenarios. FailFast does not provide a good
mechanism, since it fails immediately upon one failure. This results in cache
clients seeing more failures under transient errors.

Solution

Use customized failureAccrual logic that fails immediately. One finagle client
presents one node on the Ketama ring, so the load balancer sees one cache client,
and it continues to dispatch requests to that single client which is marked dead
with c.t.f.FailureAccrualFactory. We use a modified failureAccrual
c.t.f.memcached.KetamaFailureAccrualFactory that fails immediately when the
client is in a Busy state (marked dead).

Result

Provide configurable finagle-memcache client to control failureAccural and
whether to eject failed host.

RB_ID=556876"
vkostyukov,2015-01-17 01:57:28,https://api.github.com/repos/twitter/finagle/git/commits/563092d4b321c45827ac373719d982bf6ee984fc,563092d4b321c45827ac373719d982bf6ee984fc,"finagle-http(x): Replace underlying Seq[Cookie] with Set[Cookie] in CookieMap

This patch fixes a bug in CookieMap that doesn't allow to encode more
then one cookie with the same name to header. Also, it doesn't make
sense to have two or more cookies with the same name/domain/path in
the map, since they will be ignored by Netty's `CookieEncoder`. That's
why Seq has been replaced by Set.

RB_ID=555578"
stevegury,2015-01-16 20:34:20,https://api.github.com/repos/twitter/finagle/git/commits/91f98b5186b53f955043fc02feba97cfc34a0320,91f98b5186b53f955043fc02feba97cfc34a0320,"finagle-doc: Add finagle-mysql as a dependency of finagle-doc

Problem

Finagle documentation uses some pieces of code that are compiled by
sbt (for verification).
The finagle-doc project doesn't depend on finagle-mysql, then doc
generation fail.

Solution

Add finagle-mysql as a dependency to finagle-doc

RB_ID=558634"
roanta,2015-01-16 20:28:59,https://api.github.com/repos/twitter/finagle/git/commits/e44ba27d8a041bd3f7dd7981828db349dd1f8474,e44ba27d8a041bd3f7dd7981828db349dd1f8474,"finagle-mysql: fix bug in handshake and packet framing

Problem

Our implementation of handshake init was incorrect.

Solution

Align our implementation with the protocol spec:
http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::HandshakeV10

RB_ID=557282"
dschobel,2015-01-16 01:10:48,https://api.github.com/repos/twitter/finagle/git/commits/99728d7451066bf6214c72117968d58fe2814e0a,99728d7451066bf6214c72117968d58fe2814e0a,"finagle-memcached|x: factor common twitter cache resolver code into new package

Problem

Duplicate implementations of TwitterCacheResolver cause runtime
issues for projects which have both finagle-memcached and
finagle-memcachedx on the classpath.

Solution

Factor out a common finagle-cacheresolver package.

Result

A new finagle module that allows clients to have both cache
packages on their classpath.

RB_ID=548452"
stevegury,2015-01-14 05:40:16,https://api.github.com/repos/twitter/finagle/git/commits/d05b6f9baee55ad4b63c38974e9e7a494bf2c818,d05b6f9baee55ad4b63c38974e9e7a494bf2c818,"finagle: Fix sbt project

Problem

Sbt compile failed because of the inclusion of TwitterDateFormat which is not
accessible from sbt Build file itself.

Solution

Remove the usage in that file only.

RB_ID=555962"
roanta,2015-01-13 19:22:19,https://api.github.com/repos/twitter/finagle/git/commits/1ed0283e0da1daf178453303ac77f979e6a1e415,1ed0283e0da1daf178453303ac77f979e6a1e415,"finagle-doc: Add better docs for finagle-mysql

Problem

The docs for finagle-mysql were focused around the wire protocol
and gave little insight into the API.

Solution

Add a section in `Protocols` about how to use finagle-mysql, the
ServiceFactory API, and the rich client API.

RB_ID=552184
TBR=true"
dschobel,2015-01-12 23:17:52,https://api.github.com/repos/twitter/finagle/git/commits/5fdc3c0842267203ec7c3c641a329fec01541bcd,5fdc3c0842267203ec7c3c641a329fec01541bcd,"finagle-*: RandomSocket cleanup

RB_ID=549300"
bmdhacks,2015-01-09 23:29:23,https://api.github.com/repos/twitter/finagle/git/commits/377fcc759a72eabad9c125e1896971c6d5ec22d5,377fcc759a72eabad9c125e1896971c6d5ec22d5,"birdcage: port simple specs tests to scalatest

Specs has been abandoned for 3 years.  This commit is the result of
running script to port many simple tests to Scalatest.

RB_ID=521145
TBR=true"
blackicewei,2015-01-09 01:43:38,https://api.github.com/repos/twitter/finagle/git/commits/f72ec4122e61de804678b072ad58c3c9504686f7,f72ec4122e61de804678b072ad58c3c9504686f7,"finagle/twitter-server: Add default HostStatsReceiver to allow per host stats

Problem

Per host stats are usually disabled, since they are expensive for observability
to store and serve.  But they are useful for debugging purpose.

Solution

Use a new HostStatsReceiver type. It's loaded through LoadService and is
exported to ""/admin/per_host_metrics.json"" route in twitter-server. It
registers itself separately to avoid observability to collect.

Result

With the Stack-based finagle API, HostStatsReceiver is a default param to
'LoadBalancerFactory.HostStats'. Per host stats is enabled through
'com.twitter.finagle.loadbalancer.perHostStats' flag.

When 'LoadBalancerFactory.HostStats' param is not set, and
'com.twitter.finagle.loadbalancer.perHostStats' flag is true, use a loaded
hostStatsReceiver.

A host statsReceiver set through ClientBuilder or DefaultClient keeps the same
behavior.

RB_ID=547758"
blackicewei,2015-01-08 06:41:31,https://api.github.com/repos/twitter/finagle/git/commits/3bb0081b5ae8d80299560afcffbc17f3dcbd8b8d,3bb0081b5ae8d80299560afcffbc17f3dcbd8b8d,"finagle-core: improve test on IdleStateHandler config

Problem
ChannelSnooper is not configurable through Stack params in Netty3Transporter.

Solution
add ChannelSnooper configuration and improve Netty3Transporter unit test.

RB_ID=552658"
mosesn,2015-01-06 22:17:15,https://api.github.com/repos/twitter/finagle/git/commits/2189ff40a542f38f1cb9bfbafa4191eecd7fe385,2189ff40a542f38f1cb9bfbafa4191eecd7fe385,"finagle,util: Fix pants BUILD to junit_tests

Problem

Tests should be called junit_tests.

Solution

Fix pants BUILD files that incorrectly refer to them as scala_library or java_library

RB_ID=551996"
mariusae,2014-12-31 00:28:13,https://api.github.com/repos/twitter/finagle/git/commits/9076750e36a1be52328548fc72ceebe044648782,9076750e36a1be52328548fc72ceebe044648782,"finagle-core: remove 'done' future from Status.Busy

Problem

Status.Busy does not compose via Status.worst/best.

Solution

Remove 'done' future, making Status a purely poll-based API.

Discussion

We weren't using the returned Future anywhere yet, except for in
Status.whenOpen. This change turns whenOpen into a poller instead.

RB_ID=550060"
travisbrown,2014-12-30 02:28:18,https://api.github.com/repos/twitter/finagle/git/commits/bd9fac665b0bbfb97433f5b77757f07b4a7d7bed,bd9fac665b0bbfb97433f5b77757f07b4a7d7bed,"Use Travis CI's new container-based infrastructure

Problem

Travis CI just announced a new container-based infrastructure that provides
faster builds, etc., and can be enabled by disabling sudo in the Travis config.

Solution

We don't need sudo for any of these projects, so we can disable it. I've also
fixed a few minor issues with versions in the Travis configuration for scrooge,
finagle, and twitter-server.

RB_ID=547354"
travisbrown,2014-12-30 01:31:47,https://api.github.com/repos/twitter/finagle/git/commits/97a696fd621ff0d450f9fadd2623d027b6a8166d,97a696fd621ff0d450f9fadd2623d027b6a8166d,"Reinstate casts that are necessary for Scala 2.11 compatibility

RB_ID=549962"
kevinoliver,2014-12-29 21:17:14,https://api.github.com/repos/twitter/finagle/git/commits/d5fe85461583c7283652273ffa2bf4e95ca04c9b,d5fe85461583c7283652273ffa2bf4e95ca04c9b,"finagle-core: Let FailFast be configured for Stack based clients

Problem

It is difficult for Stack-based clients to disable fail fast
which happens to be enabled by default.

Solution

Introduce `c.t.f.service.FailFastFactory.FailFast` which allows
Stack-based clients to configure this behavior.

RB_ID=548254"
mosesn,2014-12-24 05:23:16,https://api.github.com/repos/twitter/finagle/git/commits/8fafc50b94c17709417ed7128c88e974939788cb,8fafc50b94c17709417ed7128c88e974939788cb,"finagle-core: Retry forever on WriteExceptions

Problem

WriteExceptions shouldn't have to count against your retry budget,
and should be retried automatically.

Solution

Retrying on WriteExceptions eagerly breaks down without failfast
turned on, and we decide whether to failfast in two places, the
codec and the flag.  I added a RetryingFilter to the stack which
retries 100 times on WriteException, and changed the StackClient
to remove it if it doesn't see a FailFastFactory in the Stack.

Result

We will retry on every finagle ""logical"" request 100 times on
WriteException.  The RetryingFilters and RetryingPolicies that
people apply should in practice no longer need to account for
WriteExceptions.

RB_ID=540478"
atollena,2014-12-23 18:59:40,https://api.github.com/repos/twitter/finagle/git/commits/ea2d9668ba148d2ac4cf1378f209227c2d9e6a15,ea2d9668ba148d2ac4cf1378f209227c2d9e6a15,"finagle-core: c.t.f.builder.Server implements ListeningServer

Problem

The current ServerBuilder interface returns its own Server trait. This
trait is lacking features like announcing and Await-ability. Most
documentation and examples are assuming that users are dealing with a
ListeningServer.

Solution

Turn the Server trait returned by ServerBuilder into a ListeningServer.

Result

Users can use features from ListeningServer when using the ServerBuilder
interface. More docs for the finagle 6 interface apply to ServerBuilder.

RB_ID=547434
TBR=true"
dschobel,2014-12-23 18:31:58,https://api.github.com/repos/twitter/finagle/git/commits/57307e92e31e02e9f1e370b7f85a7fd3b77f19db,57307e92e31e02e9f1e370b7f85a7fd3b77f19db,"finagle-core: RandomSocket cleanup

RB_ID=548674"
vkostyukov,2014-12-22 22:46:28,https://api.github.com/repos/twitter/finagle/git/commits/42837b19dcc900b9c88fb469ee217f7be88fd7c1,42837b19dcc900b9c88fb469ee217f7be88fd7c1,"finagle: Fix Java style violations

RB_ID=545842"
luciferous,2014-12-22 13:47:45,https://api.github.com/repos/twitter/finagle/git/commits/8ca6a7f8357d409a50c520ce22e93c61070a7ca4,8ca6a7f8357d409a50c520ce22e93c61070a7ca4,"[finagle-httpx] Streaming constructors

Problem

The construction of Request and Response with Reader raises eyebrows.
Consider the current convention:

    val myReader = new Reader { ... }
    val req = new Request {
      val httpRequest = Request().httpRequest
      override val reader = myReader
      lazy val remoteSocketAddress = new InetSocketAddress(0)
    }

Solution

Expose another constructor for Request and Response that accepts
Reader as a parameter.

Result

Improvement:

    val myReader = new Reader { ... }
    val req = Request(Http11, Ok, ""/"", myReader)

RB_ID=542824"
kevinoliver,2014-12-20 01:01:00,https://api.github.com/repos/twitter/finagle/git/commits/f60a3b5228bb8b725ed99fcf02cff8dfcca817d4,f60a3b5228bb8b725ed99fcf02cff8dfcca817d4,"finagle-core: Minor fixes to Netty3Transporter.newPipeline

Problem

`InetSocketAddress.getAddress` can return null but this case
was not accounted for in Netty3Transporter. This would lead
to a NullPointerException at runtime if the transporter had
an HttpProxy or SocksProxy configured.

Solution

That case is now accounted for and will no longer NPE.

RB_ID=546310"
rodrigopr,2014-12-19 18:01:33,https://api.github.com/repos/twitter/finagle/git/commits/6aca5fc90b8d0a736d46ad4574e154251f554ca0,6aca5fc90b8d0a736d46ad4574e154251f554ca0,"Add JusBrasil to adopters list

RB_ID=544330"
penland365,2014-12-19 17:23:42,https://api.github.com/repos/twitter/finagle/git/commits/d2fa49c5df343b95b7bf88c9af9bcbc8873ee721,d2fa49c5df343b95b7bf88c9af9bcbc8873ee721,"Added Sabre Labs to Finagle Adopters list

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=544326"
mariusae,2014-12-18 22:02:44,https://api.github.com/repos/twitter/finagle/git/commits/72dfd1b7eb8a11480d3e282d8ee2f71eb0a032a1,72dfd1b7eb8a11480d3e282d8ee2f71eb0a032a1,"finagle-core: use fine-grained statuses; get rid of LeasedFactory, LeasedBridge

This change makes use of fine-grained statuses to the point where they
are useful.

RB_ID=536835"
mariusae,2014-12-18 19:50:53,https://api.github.com/repos/twitter/finagle/git/commits/425cc1f621c273ff13b786bdcd1fbf30e635e89e,425cc1f621c273ff13b786bdcd1fbf30e635e89e,"finagle-core: remove Context.letEnv; add shadowing Context.let

Problem

Context.letEnv had the wrong semantics: the previous environment
should not be discarded (except intentionally through Context.letEnv).
This caused a bug where Client Ids were no longer propagated from
legacy clients.

Solution

Introduce Context.let, with proper shadowing semantics.

RB_ID=543820"
atollena,2014-12-17 04:08:47,https://api.github.com/repos/twitter/finagle/git/commits/00faa61a06773aca7b8047f02da86df01c55e32b,00faa61a06773aca7b8047f02da86df01c55e32b,"finagle-core: Properly pass parameters through in serveAndAnnounce

Problem

serveAndAnnounce(name: String, addr: String, Service[Req, Rep]) tries to
serve on name and announce at addr, which is the opposite of what it
says it does.

Solution

Fix the order of parameters.

Result

Parameters are taken in the right order.

RB_ID=542566"
mariusae,2014-12-17 02:11:40,https://api.github.com/repos/twitter/finagle/git/commits/24d47e82408c583dc6fec12818c6edb7b8fc13c3,24d47e82408c583dc6fec12818c6edb7b8fc13c3,"Revert ""finagle-core: remove Context.letEnv; add shadowing Context.let""

This reverts commit 4ed8aeeae69675ec6ac8ceb5803184a59745ff7d.

RB_ID=543664
TBR=true"
mariusae,2014-12-16 22:00:33,https://api.github.com/repos/twitter/finagle/git/commits/5b35f7903aaf51dacab9ae77846a4e0dfbfd9457,5b35f7903aaf51dacab9ae77846a4e0dfbfd9457,"finagle-core: remove Context.letEnv; add shadowing Context.let

Problem

Context.letEnv had the wrong semantics: the previous environment
should not be discarded (except intentionally through Context.letEnv).
This caused a bug where Client Ids were no longer propagated from
legacy clients.

Solution

Introduce Context.let, with proper shadowing semantics.

RB_ID=543118"
roanta,2014-12-16 21:07:43,https://api.github.com/repos/twitter/finagle/git/commits/18031bad342d8dae9571c7d6dc9a6c930136cd64,18031bad342d8dae9571c7d6dc9a6c930136cd64,"finagle-mux: mock network in discard test

Problem

Our CI seems to have an issue with this particular test.
I couldn't see any issues other than environment specific
network issues.

Solution

Mock the network via AsyncQueues. This omits some of the modules
in between, but I think it still tests the behavior in question.

RB_ID=532115"
luciferous,2014-12-16 07:45:37,https://api.github.com/repos/twitter/finagle/git/commits/f6ff30a1f0517fcfceb2f1e43423219acbd0d9d2,f6ff30a1f0517fcfceb2f1e43423219acbd0d9d2,"[trivial] Fix example client configuration in FAQ

Problem

We don't yet support HTTPS with the fetchUrl API, but the examples in
our documentation suggests we do.

Solution

Update the docs.

RB_ID=541476"
luciferous,2014-12-16 06:45:19,https://api.github.com/repos/twitter/finagle/git/commits/e3d228f1cefbf9b65150792c646bc25ccf666143,e3d228f1cefbf9b65150792c646bc25ccf666143,"[finagle-http/x] Fix flaky streaming tests

Problem

Some streaming tests are flaky because of a race between
discarding a Writable and writing to it. The test assumes
that discard happens before the write, causing the write to
expectedly fail. However, sometimes the write happens
before.

Solution

Write repeatedly so that even if we write early, subsequent
writes will come after the discard. This is likely because
subsequent writes wait for antecedent writes to complete.

Result

Passes on 1000 test runs.

RB_ID=541456"
luciferous,2014-12-16 06:28:03,https://api.github.com/repos/twitter/finagle/git/commits/90faf6007114bb325a8ba376dd93fb1ffc14cd33,90faf6007114bb325a8ba376dd93fb1ffc14cd33,"[finagle-httpx] Increase test coverage

Problem

Test coverage is thin in some parts of finagle-httpx.

Solution

More tests to increase coverage.

Result

                    line         branch
c.t.f.httpx         76% => 83%   30% => 33%
c.t.f.httpx.codec   75% => 93%   52% => 70%
c.t.f.httpx.filter  84% => 95%   46% => 46%
c.t.f.httpx.netty   78% => 90%   44% => 44%
c.t.f.httpx.path    62% => 89%   16% => 40%
c.t.f.httpx.service 97% => 100%  50% => 50%

RB_ID=541474"
kevinoliver,2014-12-16 05:40:02,https://api.github.com/repos/twitter/finagle/git/commits/4a7248f8f44adc45b13655eceb8ad2fdc70c30a7,4a7248f8f44adc45b13655eceb8ad2fdc70c30a7,"finagle-thriftmux: Add test for ThriftMux client, Thrift server

Problem

No test coverage for the behavior of a ThriftMux client
talking to a Thrift server.

Solution

Add a test case that exhibits the expected, unsupported
behavior.

RB_ID=541776"
dschobel,2014-12-16 02:04:05,https://api.github.com/repos/twitter/finagle/git/commits/8c7f972303d58f89bfe1754a78d41e2c2ac839e2,8c7f972303d58f89bfe1754a78d41e2c2ac839e2,"finagle-sbt: exclude kestrelx from unidoc task

this is a temporary fix until the kestrel-x package
is removed after the netty4 migration is complete.

RB_ID=542284"
travisbrown,2014-12-16 00:01:03,https://api.github.com/repos/twitter/finagle/git/commits/6b6e8047afbb3443d7629299991a38f5f8cde1e3,6b6e8047afbb3443d7629299991a38f5f8cde1e3,"Enable Scala 2.11 SBT builds for util-eval, ostrich, and finagle-ostrich4

Problem

We want to publish 2.11 releases of Finagle subprojects that depend on Ostrich,
which we have not previously built for 2.11 (because it has specs tests, and
because it depends on scala-json and util-eval, neither of which previously
worked on 2.11).

Solution

util-eval previously didn't work on 2.11 because `scala.ScalaObject` has been
removed since 2.10. This is fixed here. The bulk of this commit is Rodrigo
Lazoti's migration of Ostrich's tests from specs to ScalaTest (I'm not using his
pull request since the PR also replaces scala-json with Jackson, which we don't
want to do at this time to avoid breaking public APIs). This commit also
reinstates util-eval and the Finagle subprojects that depend on Ostrich in their
projects' cross-builds.

Result

util-eval, ostrich, finagle-ostrich4, finagle-example, and finagle-stress all
build and pass tests on 2.11 (from SBT) for the first time.

RB_ID=534127"
stevegury,2014-12-15 19:21:23,https://api.github.com/repos/twitter/finagle/git/commits/7befa101e94a583a400ac6d19c8001ca07302f37,7befa101e94a583a400ac6d19c8001ca07302f37,"finagle-branchmark: use `status` instead of `isOpen`

Problem

finagle-benchmark is not compiling because it used `transport.isOpen`
which is now removed in favor of `transport.status`

Solution

Replace the calls to isOpen with their new equivalent.

RB_ID=541720"
roanta,2014-12-15 18:43:26,https://api.github.com/repos/twitter/finagle/git/commits/3cf945166848e2a14d0ffc7ebfbf8df33a6bfd00,3cf945166848e2a14d0ffc7ebfbf8df33a6bfd00,"finagle-thriftmux: properly scope downgrade pipeline

RB_ID=540672"
blackicewei,2014-12-13 00:36:37,https://api.github.com/repos/twitter/finagle/git/commits/b667d716a097fc72cb41c0845ecefbce9a1b8e02,b667d716a097fc72cb41c0845ecefbce9a1b8e02,"finagle-core: deprecate InetAddressUtil.Loopback

Problem:

InetAddress.getByAddress(Array[Byte](127,0,0,1)) is outdated. Java 7 provides
java.net.InetAddress.getLoopbackAddress for loopback address.

Solution:

Deprecate InetAddressUtil.Loopback, use java.net.InetAddress.getLoopbackAddress
everywhere.

RB_ID=535601"
roanta,2014-12-12 23:20:26,https://api.github.com/repos/twitter/finagle/git/commits/f261375ccde154ebedd339f0a80c6058f9652dac,f261375ccde154ebedd339f0a80c6058f9652dac,"finagle-mux/thriftmux: Remove socket close race / Drain downgraded sessions correctly

Problem

When a ThriftMux server downgrades a connection to thrift, we fail
to drain gracefully. There were two problems that contributed to this.
First, the downgrade pipeline didn't respond with an Rdrain so the mux
server dispatcher never moved into a draining state. Secondly, the transport
close raced against the server's final writes.

Solution

Synthesize Rdrain in thriftmux and serialize the close with the final write.

RB_ID=539596"
luciferous,2014-12-12 23:13:16,https://api.github.com/repos/twitter/finagle/git/commits/c03b3ef7e88b5219df0b965caf2bb0366f31897f,c03b3ef7e88b5219df0b965caf2bb0366f31897f,"[finagle-httpx] Remove deprecated code, shrink access

Problem

Deprecated code in http was copied over when we created httpx.
This is a good time to get rid of it (i.e. before people start
using httpx directly), and also shrink the access scope of
things that should be private to httpx/finagle.

Solution

Remove deprecated code and shrink access to internals.

Result

Leaner meaner httpx.

RB_ID=539076"
luciferous,2014-12-12 22:22:45,https://api.github.com/repos/twitter/finagle/git/commits/f0699fc116f45cb87f4a8b0cc3580b4c4d10adf9,f0699fc116f45cb87f4a8b0cc3580b4c4d10adf9,"[finagle-http] Increase test coverage

Problem

Test coverage is thin in some parts of finagle-http.

Solution

More tests to increase coverage.

Result

Increased line and branch coverage in finagle-http.

                   line         branch
c.t.f.http         75% => 86%   29% => 35%
c.t.f.http.codec   76% => 94%   53% => 72%
c.t.f.http.filter  84% => 95%   (no change)
c.t.f.http.path    62% => 89%   16% => 40%
c.t.f.http.service 97% => 100%  (no change)

RB_ID=539092"
stevegury,2014-12-12 21:34:18,https://api.github.com/repos/twitter/finagle/git/commits/1e06db17ca2de4b85209dd2fbc18e635815e994b,1e06db17ca2de4b85209dd2fbc18e635815e994b,"Bump all sbt projects (util, ostrich, finagle, twitter-server)

Problem

After looking at the finagle changelog, I discovered that we already had
entries for finagle 6.23.0 and more for the current version.
The previous version bump was then incorrect, the version needs to be
greater than 6.23.0.

Solution

Bump the minor version of finagle, and for consistency I did the same
thing for all the other related projects.
Close the current section of the finagle changelog and name it ""6.24.0"".

RB_ID=540180"
mariusae,2014-12-11 00:37:40,https://api.github.com/repos/twitter/finagle/git/commits/f290ecbb540d00278269433b3ebfd840713d385d,f290ecbb540d00278269433b3ebfd840713d385d,"Status.open, Status.awaitOpen: utilities to wait for Statuses

These are useful utilities for acting on Status changes. For example
to replace ClientRegistry.expAllRegisteredClientsResolved(), you can
wait for a Service to be ready to serve (this includes a complete
resolve):

	Status.awaitOpen(service.status)

RB_ID=537741"
vkostyukov,2014-12-11 00:09:13,https://api.github.com/repos/twitter/finagle/git/commits/e710cdc2a9b9c5460d30cd08ff0632f624063cd0,e710cdc2a9b9c5460d30cd08ff0632f624063cd0,"finagle-core: Add Addrs, a Java-friendly variant of Addr

RB_ID=536869"
stevegury,2014-12-10 22:23:25,https://api.github.com/repos/twitter/finagle/git/commits/3ae2527aaff11afefa31355ee3dbb0efb4e7961c,3ae2527aaff11afefa31355ee3dbb0efb4e7961c,"Update sbt projet definitions of (util, ostrich, scoorge, twitter-server)

Problem

In order to release our libraries for the open-source community, we need to update
the version of those.

Solution

Update the version in the sbt project definition.
While I was there, update also sbt to the latest version and increase the jvm
configuration for the code cache.

RB_ID=537603"
mariusae,2014-12-10 00:54:29,https://api.github.com/repos/twitter/finagle/git/commits/e66e79b88ba4cea1f863ddf8d731b6a80eab0274,e66e79b88ba4cea1f863ddf8d731b6a80eab0274,"Introduce request contexts

Problem

This change solves two related problems.

1. The use of c.t.u.Local is fraught with potential misuse and
confusion. Finagle now delimits Locals in dispatchers, but there are
still many opportunities for misuse. The Local API is not conducive to
proper use. There have also been issues with leaks caused by misuse of
this API.

2. Finagle has no control over how request contexts are delimited. In
practice, they are backed by Locals, and thus suffer the same
problems. This causes confusion and bugs.

Solution

Provide a single, unified way of dealing with request-local data in
Finagle. We introduce type c.t.f.context.Context whose lifetimes are
managed by Finagle itself. There are two variants: Contexts.local
never escapes the local request graph, while Contexts.broadcast may
transit process boundaries, as is the case for current ""request
contexts."" This has the additional benefit of doing away with service
loading to support marshalled request contexts.

Most uses are ported over, including trace ids; some, like Dtab
locals, remain for porting over later.

Result

Fewer bugs, clearer code.

RB_ID=536961
TBR=true"
kevinoliver,2014-12-08 22:53:51,https://api.github.com/repos/twitter/finagle/git/commits/3189fed6a25f477b76b0635ba772ab645e8db850,3189fed6a25f477b76b0635ba772ab645e8db850,"finagle-core: Acknowledge ResolutionRaceTest is flakey

Problem

ResolutionRaceTest still fails intermittently in CI.

Solution

Mark it as flakey again.

RB_ID=534727"
evnm,2014-12-08 20:05:54,https://api.github.com/repos/twitter/finagle/git/commits/c7aa6d0b4eca5c8c1902b48c2c61513361160a90,c7aa6d0b4eca5c8c1902b48c2c61513361160a90,"finagle-serversets: Rename core classes and separate them into distinct files

The following changes are made to the organization of
finagle-serversets:

- Move Zk2Resolver from ServerSet2.scala into Zk2Resolver.scala
- Zk.scala -> ZkSession.scala
- Rename ServerSet2 class/file to ServiceDiscoverer and update its
  Scaladoc
- Rename `ServerSet2.weighted` companion object function to
  `ServiceDiscoverer.zipWithWeights`
- Make the `entriesOf` and `vectorsOf` SS2 functions private[this],
  since they're only used internally to the class
- Repurpose `SS2.weightedOf` as `ServiceDiscoverer.apply`
- The appropriate test file/class name changes to adhere to the above
- Rename ZooKeeperZkTest to ZkSessionEndToEndTest

RB_ID=532959"
kevinoliver,2014-12-08 18:04:28,https://api.github.com/repos/twitter/finagle/git/commits/dbd7dba4a33d2aa3eece3e0b4f2739a5e6055351,dbd7dba4a33d2aa3eece3e0b4f2739a5e6055351,"finagle-stream: ensure StreamServerDispatcher's response is released

Problem

StreamResponse release() callback is not always triggered when
clients disconnect.

Solution

Add an interrupt handler to ensure the response gets released.

RB_ID=532979"
travisbrown,2014-12-06 03:18:33,https://api.github.com/repos/twitter/finagle/git/commits/8c7e678e80db82075814a1ff5ffd50f11c73e724,8c7e678e80db82075814a1ff5ffd50f11c73e724,"Set up SBT for 2.11 builds and remove StreamyJ dependency

Problem

We want to publish 2.11 versions of as many Finagle subprojects as possible.
Some subprojects can't be built for 2.11 at the moment, since they depend on
either Specs or Ostrich, neither of which have builds for 2.11. One subproject
(finagle-example) depends on StreamyJ, which also has no 2.11 build. We're also
using Jackson 2.3.1 internally, and the Jackson Scala module for that version is
not available for 2.11.

Solution

Because StreamyJ is used in a single test and nowhere else in Finagle, I've
simply ported the test to use vanilla Jackson, which allows us to remove the
dependency. The Jackson version used in the SBT builds for Finagle and
twitter-server now depends on the Scala version, and Finagle subprojects that we
can't build for 2.11 are excluded from the root finagle project. I've also
updated the Scala 2.11 versions in the SBT builds for Util and Scrooge from
2.11.2 to 2.11.4.

Result

We can publish 2.11 builds for twitter-server and all but five Finagle
subprojects. Note that finagle-example, finagle-ostrich4, finagle-redis, and
finagle-stress now must be tested and published individually, since they're no
longer aggregated by the root finagle project (this is similar to the current
status of util-eval).

RB_ID=532745"
mariusae,2014-12-05 20:56:32,https://api.github.com/repos/twitter/finagle/git/commits/5697eb6e7a983a858f8e2ccb5aded8ba17fa0b2d,5697eb6e7a983a858f8e2ccb5aded8ba17fa0b2d,"finagle-core: Define isAvailable as status == Open

This retains the old definition: isAvailable was false for both
transient and permanent availability issues.

RB_ID=532943"
evnm,2014-12-05 20:43:32,https://api.github.com/repos/twitter/finagle/git/commits/5a7a47e15e8d9cba5d188f50aa3e9ca033a1f9d7,5a7a47e15e8d9cba5d188f50aa3e9ca033a1f9d7,"Problem

The current sections of the user guide covering loadbalancer and
serversets metrics are incomplete and outdated.

Solution

- Replace the serversets section with a comprehensive section on
  service discovery, covering stats on high-level naming and
  lower-level ZK diagnostics.
- Re-label the HeapBalancer section to account for the various LB
  implementations.

While in here, a README is added to finagle/doc with docsite
generation instructions.

RB_ID=530135"
evnm,2014-12-05 13:38:56,https://api.github.com/repos/twitter/finagle/git/commits/ddfa9b4995646ffde632a30e5e7ec9a685a87437,ddfa9b4995646ffde632a30e5e7ec9a685a87437,"finagle-core: Rm vestigial loadbalancer `Stack.Role`

RB_ID=529531"
mariusae,2014-12-05 11:09:48,https://api.github.com/repos/twitter/finagle/git/commits/522a3f2cac76fa079663b956468394e1acb5f27e,522a3f2cac76fa079663b956468394e1acb5f27e,"finagle-core: Introduce Status, Service.status, ServiceFactory.status

Problem

Service.isAvailable and ServiceFactory.isAvailable is too
coarse-grained for many uses. For example, we need to be able to
distinguish between a transiently unavailable service and one that is
permanently closed. This is useful in Mux's leasing mechanism as well
as for the upcoming admission controllers.

Solution

Introduce a first-class Status. It's an ADT with variants

	Open
	Busy
	Closed

The Busy variant carries a Future[Unit] indicating when the status has
changed. This is useful for queueing at the appropriate level in the
stack. The other variants don't have arguments.

Discussion

Implementing this without breaking the API was a bit tricky. The
solution is uglier than it should be because of it. I'd like to move
towards finalizing isAvailable, which would make everything much more
consistent. I've inserted notes where appropriate (grep for CSL-1336)
that can be used to track required API changes when we're ready to
pull that trigger.

I've modified the rest of the birdcage, too, to be 'final-safe' -- it
compiles locally if i modify the definition of Service.isAvailable and
ServiceFactory.isAvailable and also fix up the noted usages. The
upshot is that we're very close to being able to do this without
breaking anyone.

This change aims to maintain ""isAvailable"" parity -- I have not yet
made use of the finer-grained status field; this comes next.

RB_ID=513399"
evnm,2014-12-05 10:52:22,https://api.github.com/repos/twitter/finagle/git/commits/a2839047ccedbd1bed437fb9fffb689bad560734,a2839047ccedbd1bed437fb9fffb689bad560734,"finagle-serversets: Flatten and clean up Zk.scala

- Rename Zk's `op` function to `watchedOperation`
- Remove the ZkFactory/FnZkFactory hierarchy in favor of a flat
  ZkSession class and companion object
- Use implicit timer arguments everywhere rather than requiring them
  to be passed in explicitly
- Simplify the `safeRetry` method by making it take a single
  `=> Future[T]` argument and use the class-scoped `retryBackoffs`
  field rather than passing it in on every usage
- Add a few scaladocs, reword a few variable names

RB_ID=531985
TBR=true"
stevegury,2014-12-04 20:41:21,https://api.github.com/repos/twitter/finagle/git/commits/29469a1e6a2b282f11265e889c6cdc3552c3be96,29469a1e6a2b282f11265e889c6cdc3552c3be96,"finagle-stats: Introduce ImmediateMetricsStatsReceiver

Problem

By default, MetricsStatsReceiver uses WindowedApproxHistogram to report stats on a sliding
window of 60 seconds and with a delay of at most 20 seconds.
This is useful in production but annoying when you want to write tests because you need to
wait before the data will be aggregated.

Solution

Refactor the MetricsStatsReceiver constructor, which now takes a histogram builder parameter.
Introduce a new class ImmediateMetricsStatsReceiver, which uses ApproximateHistogram under
the hood (without any window).

RB_ID=530261"
travisbrown,2014-12-04 19:00:21,https://api.github.com/repos/twitter/finagle/git/commits/e3db8c47a035a83fe690840106df0024665ab63e,e3db8c47a035a83fe690840106df0024665ab63e,"Avoid Scala 2.11-incompatible APIs and language features

Problem

Case classes without parameter lists are no longer supported in Scala 2.11, and
some packages and methods that were deprecated in 2.10 are no longer available.

Solution

Change code to be compatible with both 2.10 and 2.11.

Result

Most Finagle subprojects can be compiled on 2.11 (with no ABI breakage for
2.10). The SBT build changes to support 2.11 are coming in a separate commit.

RB_ID=531085"
dschobel,2014-12-03 19:29:01,https://api.github.com/repos/twitter/finagle/git/commits/ca2d19ba677b02753a13b1b93619accb241e8a7c,ca2d19ba677b02753a13b1b93619accb241e8a7c,"finagle-memcached: flake MigrationClientTest and replace RandomSocket usage

 rescuing https://reviewboard.twitter.biz/r/528985/ and https://reviewboard.twitter.biz/r/527451/
 from birdcage and merging into one rb.

 original descriptions:

 528985:
 MigrationClient's ""sending dark trafic"" test has been flaking for
 a number of reasons, usually blocking on zk operations, for a while
 so mark it as flaky until someone from cache can take a look.

 527451:
 remove racy RandomSocket usage. between this and https://reviewboard.twitter.biz/r/527451/
 the only remaining RandomSocket use in finagle-memcached|x is in the ExternalMemcached
 object which requires it (for now, see CSL-1403 for details).

RB_ID=529569"
evnm,2014-12-02 23:06:46,https://api.github.com/repos/twitter/finagle/git/commits/3d666adbbdd9d2eb5ce77c91b6886f2203dae414,3d666adbbdd9d2eb5ce77c91b6886f2203dae414,"finagle-core: Use loopback address in WeightedSocketAddressTest

RB_ID=527567"
kevinoliver,2014-12-02 18:35:49,https://api.github.com/repos/twitter/finagle/git/commits/477c2d3a9a4a517c04305bb76d13cd56392c95ff,477c2d3a9a4a517c04305bb76d13cd56392c95ff,"finagle-core: make ResolutionRaceTest more robust

Problem

ResolutionRaceTest uses a lot of ports which are now a constrained
resource in CI.

Solution

Use the loopback interface where we are less constrained and
close clients after usage.

RB_ID=527499"
kevinoliver,2014-12-02 18:31:06,https://api.github.com/repos/twitter/finagle/git/commits/700f46740f3639146052e43485998b109e2c514f,700f46740f3639146052e43485998b109e2c514f,"finagle-mux: increase PatienceConfig for scalatest Conductors

Problem

`AlarmTest` has still failed in CI occasionally.

Solution

Try increasing the PatienceConfig timeout before we mark the
test as flakey.

RB_ID=527447"
luciferous,2014-12-02 00:25:28,https://api.github.com/repos/twitter/finagle/git/commits/c1c7f82a573fbdeae30d770134e7b1bd0c064ae0,c1c7f82a573fbdeae30d770134e7b1bd0c064ae0,"[finagle-httpx-compat]: Netty client adaptor

Problem

We have the adaptors for services, but not for clients. To provide
complete coverage we need an adaptor to convert an HTTPx client into
a Netty client (related: RB_ID=497155).

Solution

A filter to wrap an HTTPx client so that it can be used with
Netty types.

Result

Ability to use HTTPx clients with Netty types.

RB_ID=527557
TBR=true"
stevegury,2014-12-01 23:14:18,https://api.github.com/repos/twitter/finagle/git/commits/43c552ebc1f3bcbf1aa27ed0fad919b08540a40a,43c552ebc1f3bcbf1aa27ed0fad919b08540a40a,"finagle-core: Add log in case of instantiation failure in LoadService

Problem

The instantiation of a new class in LoadService can throw an exception
(IncompatibleClassChangeError, ...). The cause of this exception is
(most of the time) diamond dependencies or bad classpath.
That's easy to fix as soon as you know which class caused the exception.

Solution

Add a FATAL log when one of the instantiation fails, and continue the
loading without the failing instance. This should drastically simplify
the debugging.

RB_ID=525813"
vkostyukov,2014-12-01 22:59:29,https://api.github.com/repos/twitter/finagle/git/commits/6e0c2b5a50d7ee7fe0c1b24d5a51183a8a520889,6e0c2b5a50d7ee7fe0c1b24d5a51183a8a520889,"finagle-kestrel: Add Java compilation tests and Java API for ReadHandle

RB_ID=521667"
jduan,2014-12-01 20:15:38,https://api.github.com/repos/twitter/finagle/git/commits/38f92f80ad9b5a0c4c17a4a7d27215d90115963a,38f92f80ad9b5a0c4c17a4a7d27215d90115963a,"remove newlines from test names so junit can generate correct XML files

CI relies on JUNIT XML files for certain things, such as retrying failed
tests. When test names have ""newlines"" in them, junit can't generate
correct XML files. This change fixes that.

RB_ID=526901"
stevegury,2014-12-01 19:59:53,https://api.github.com/repos/twitter/finagle/git/commits/5f89e1f1aefa9244373e21fddc6cf0e687da0eda,5f89e1f1aefa9244373e21fddc6cf0e687da0eda,"Finagle, Ostrich, Util: Fix sbt project definition

Problem

Finagle was not compiling with sbt for multiple reasons:
- the java compilation of AbstractCloseAwaitably.java required one extra import
- finagle-httpx-compat required direct dependencies on finagle-http(x)

Solution

Fix the sbt project definition of Util/Finagle.
While I was there, I cleaned up some scaladoc warning in util and
some compilation warning in ostrich.

RB_ID=525909"
luciferous,2014-12-01 18:53:55,https://api.github.com/repos/twitter/finagle/git/commits/b08ffc21f9df5a721771bb41a6fde02f6b4c24f2,b08ffc21f9df5a721771bb41a6fde02f6b4c24f2,"Streaming tests for HTTPx

Problem

HTTPx needs streaming tests too.

Solution

Port streaming tests for HTTPx from HTTP tests
introduced in RB_ID=516495.

Result

HTTPx also tested for streaming failure cases.

RB_ID=526003"
mosesn,2014-11-26 21:32:43,https://api.github.com/repos/twitter/finagle/git/commits/050253a42e420699e7bc87f5cd53dd673a5c3e92,050253a42e420699e7bc87f5cd53dd673a5c3e92,"finagle-mux: Instrument client/server graceful shutdown

Problem

It's difficult to tell whether servers are shutting down properly
or not.

Solution

Log whenever a client or server starts draining, and when it sees
that it has finished draining

RB_ID=522301"
luciferous,2014-11-26 18:28:09,https://api.github.com/repos/twitter/finagle/git/commits/b8e6f43390a4e44877c749fba9ed44861ab156da,b8e6f43390a4e44877c749fba9ed44861ab156da,"Fix streaming test flakiness

Problem

Stream test is flaky because sometimes the first write
races with the discarded reader and happens to succeed.

Solution

Write one more time.

Result

Stream test is reliably successful.

RB_ID=525613"
luciferous,2014-11-26 01:33:36,https://api.github.com/repos/twitter/finagle/git/commits/009e6111b7167779d1895d455cc8962b04641bff,009e6111b7167779d1895d455cc8962b04641bff,"[trivial]: Fix hanging CSL CI

Problem

Some tests were hanging in CI, when run with the
forkjoin scheduler.

Solution

Add timeouts to where we were waiting indefinitely.

Result

The tests fail instead of hanging.

RB_ID=521105"
luciferous,2014-11-25 23:47:17,https://api.github.com/repos/twitter/finagle/git/commits/fa848f28e75411771f31e2ed8991dcd41ac20d78,fa848f28e75411771f31e2ed8991dcd41ac20d78,"Test HTTP streaming failure cases

Problem

Streams can be interrupted in multiple ways. We test that
in any case, they clean up internal state correctly and
the service processing the stream is able to process
subsequent messages.

Solution

Add tests that enumerate all failure cases.

Result

More confidence that streaming fails cleanly. Also, that
we can modify other parts of Finagle with assurance the
modifications don't introduce regressions.

RB_ID=516495"
dschobel,2014-11-25 00:40:13,https://api.github.com/repos/twitter/finagle/git/commits/258aefb7176a01d877884261babd55c28b5c66d0,258aefb7176a01d877884261babd55c28b5c66d0,"finagle-memcached|x: improve MigrationClient test diagnosability

RB_ID=521611"
mosesn,2014-11-24 20:06:17,https://api.github.com/repos/twitter/finagle/git/commits/6353f6bca332eee3deab7417f9e5477438f76f1a,6353f6bca332eee3deab7417f9e5477438f76f1a,"finagle-mux: Allows hosts with static ips to be perceived as alive again

Problem

On machines with dynamic static IPs, a fast restart means that they
will never get kicked out of the LB, and be re-constructed.  This
means that it's not OK to set them to be unavailable permanently.

Solution

(Temporarily) Make LeasedFactory ""available"" again once the underlying
service is dead.

RB_ID=522401"
luciferous,2014-11-24 02:21:03,https://api.github.com/repos/twitter/finagle/git/commits/21a9d6db8b08b9e5bfaefb666631c3be1c5ad232,21a9d6db8b08b9e5bfaefb666631c3be1c5ad232,"finagle-http/x: Un-hang EndToEndTest

Problem

When the connection manager observes a chunk appears outside of a
request/response context, it throws an exception, which breaks out
of the Future context because the caller did not catch it. This
results in streamChunks ""hanging"".

Solution

We catch the exception thrown from ConnectionManager, converting
it into a Throw.

Result

The channel write operation is interrupted correctly, allowing
the Future computation depending on it to correctly handle
failure.

RB_ID=503637"
kevinoliver,2014-11-22 23:41:13,https://api.github.com/repos/twitter/finagle/git/commits/47cc12f5509bace39f5fbdc528e4b5ccee440f36,47cc12f5509bace39f5fbdc528e4b5ccee440f36,"finagle-thrift,thiftmux: Standardize uncaught exception handling

Problem

`ThriftMux` handled uncaught application exceptions before
they reached `StatsFilter` leading to those requests being
counted as successful instead of a failure.

Solution

In order to properly wire in the `TProtocolFactory` and `ClientId`,
I've introduced a new `Stack.Param` for these and modified the
existing code for `Thrift` and `ThriftMux` to use that.

Result

Application exceptions are now properly counted as failures.

RB_ID=514815"
evnm,2014-11-21 23:12:16,https://api.github.com/repos/twitter/finagle/git/commits/701c3985fd8c72ae70a78403bb909c661be483b5,701c3985fd8c72ae70a78403bb909c661be483b5,"finagle-core: @deprecate Cluster and Group

Problem

We've been advising consumers against using
com.twitter.finagle.builder.Cluster for years, but it was never
formally @deprecated. Also the deprecation message for
com.twitter.finagle.Group isn't very helpful.

Solution

Mark Cluster and associated construction functions as @deprecated and
update the Group deprecation messages. Also update the Scaladoc of
com.twitter.finagle.Name to describe how they're resolved from
destination name strings in practice.

RB_ID=521569"
luciferous,2014-11-21 20:03:28,https://api.github.com/repos/twitter/finagle/git/commits/692a3abd69459ff3cbd26e519e3000adcb62a87d,692a3abd69459ff3cbd26e519e3000adcb62a87d,"finagle-http: Keep clients and servers in sync with regard to closed connections

Problem

Client and Servers become out of sync about whether to close the
connection because a client may send a request that is HTTP/1.1 but the
safe codec may end up converting it into a HTTP/1.0 request. This
results in the next client request failing with due to the connection
being closed.

Solution

Set the Connection header for a response only when the server wants to
notify the client of connection closure. This implies that the default
""keepalive"" behavior will be applied based on the protocol version.

Result

Bad HTTP requests due to long URIs will cause the client to close the
connection, just like the server.

RB_ID=518239"
kevinoliver,2014-11-21 18:57:05,https://api.github.com/repos/twitter/finagle/git/commits/78c2ca51060c365b67f978c48d12eb5e3a3c1e96,78c2ca51060c365b67f978c48d12eb5e3a3c1e96,"finagle-*: Use loopback for ephemeral ports in tests

Problem

We sometimes run out of ports during CI test runs
due to port allocation limits.

Solution

Prefer using the loopback address for ephemeral
ports during tests. While this does not address
code that uses the "":*"" style for requesting
ephemeral ports, this does fix a significant
amount of usage.

Result

More ports for us to use and less likelihood of
port exhaustion triggering flakey tests.

RB_ID=520815"
roanta,2014-11-21 05:21:22,https://api.github.com/repos/twitter/finagle/git/commits/bfddfe42ece8131e8d4e9f2bf6045a15ef90f019,bfddfe42ece8131e8d4e9f2bf6045a15ef90f019,"twitter-server: Refactor constructs around /admin

Problem

Our work towards improving the twitter-server administrator interface was
incomplete and needed a second pass.

Solution

Make the following improvements:

- Introduce a more flexible mechanism for hooking into the navigation
  pane. The com.twitter.server.Admin trait now defines a `routes` field which
  represents a collection of endpoints that the admin server will add to its
  namespace. This is combined with the global com.twitter.finagle.http.HttpMuxer
  to form the admin http Service.

- Formalize the constructs we use to build admin http endpoints. Each endpoint
  now simply extends Service[Req, Rep] and uses a collection of HttpUtils to do
  http. Mustache templating is replaced in favor of string interpolation.  This
  simplifies our dependencies and gives us more static guarantees. We could take
  this even further and define a custom interpolation that verifies xhtml, for
  example.  Finally, endpoints can be decorated with views (finagle filters)
  which wrap the returned content in an html template. Admin services
  communicate to these views via the http content-type headers.

- Better integration with Metrics. We now more thoroughly search the metric
  namespace for finagle servers and clients. The features which are dependent on
  stats are less brittle since we use the StackRegistry to extract registered
  entries for both servers and clients.

- Simplify how we generate the Summary page. Each endpoint is responsible for
  producing html fragments which are stitched together via ajax calls. This moves
  all the feature logic into Scala rather than Javascript.

- Better integration with Finagle. Client/Server parameter introspection was
  fixed and we now we display the Finagle version in Summary.

- Proper static resource loading via path names rather than http query strings.
  More robust handling of http content-type for common file types.

- Lots of UI fixes and improvements.

RB_ID=501201
TBR=true"
mariusae,2014-11-19 23:04:19,https://api.github.com/repos/twitter/finagle/git/commits/4c03fb8446dbb592b99b47d409d443c64ab2b49b,4c03fb8446dbb592b99b47d409d443c64ab2b49b,"mux: remove experimental session support

This is no longer used, and is causing support burden for changing APIs, etc.

RB_ID=519105"
evnm,2014-11-19 18:57:32,https://api.github.com/repos/twitter/finagle/git/commits/238566abb003ac76c4818b0baaa670942ee3704d,238566abb003ac76c4818b0baaa670942ee3704d,"finagle-thriftmux: Add a Java test for {Client,Server}Builder usage

RB_ID=517771"
sprsquish,2014-11-19 18:29:48,https://api.github.com/repos/twitter/finagle/git/commits/1198d32324bdd54e3e30c8304e2385218008acea,1198d32324bdd54e3e30c8304e2385218008acea,"Update tracing information for thrift servers

Problem

ClientId can be useful for identifying source traffic.

Solution

Record the ClientId of a thrift request

RB_ID=518507"
mosesn,2014-11-19 00:39:16,https://api.github.com/repos/twitter/finagle/git/commits/35776566e01d118ca591b4a93084f8803347d45f,35776566e01d118ca591b4a93084f8803347d45f,"finagle: Unflaky finagle-{kestrel{,x},mdns,thrift}

Problem

Several tests in finagle are still marked flaky.

Solution

Refactored tests that were using the faulty RandomSocket, and marked
all of them unflaky.

Result

Only finagle-{memcached{,x},serversets} have flaky tests now.

RB_ID=516879"
edma2,2014-11-18 19:55:42,https://api.github.com/repos/twitter/finagle/git/commits/a168449fdbab7dbdbde5863464580f7bf5683f3c,a168449fdbab7dbdbde5863464580f7bf5683f3c,"[finagle-core] fix NameTree.Empty match error in NameTreeFactory

Fix Scala MatchError exception thrown when NameTreeFactory sees
NameTree.Empty.

RB_ID=515165"
mariusae,2014-11-18 19:03:14,https://api.github.com/repos/twitter/finagle/git/commits/1f999611e558b771bb6a07efe25a238f73b4cef8,1f999611e558b771bb6a07efe25a238f73b4cef8,"finagle-core: Introduce the aperture load balancer

The aperture distributor balances load onto a window--the aperture--of
underlying capacity. The distributor exposes a control mechanism so
that a controller can adjust the aperture according to load
conditions.

The window contains a number of discrete serving units, each of which
corresponds to the serving capacity represented by a unit weight. Thus
a single serving unit may be half of a node with weight=2, or two
nodes with weight=0.5. This arrangement allows the aperture
distributor to maintain the weight contract: in aggregate, endpoints
are assigned loads according to their weight and the current load
metric. No load metric is prescribed: this can be mixed in separately.

The underlying nodes are arranged in a consistent fashion: an aperture
of a given size always refers to the same set of nodes; a smaller
aperture to a subset of those nodes. Thus it is relatively harmless to
adjust apertures frequently, since underlying nodes are typically
backed by pools, and will be warm on average.

% csl/smokestack/smoke balancer
p2c.apply		1000000	272 bytes/iter
p2c.update	1000000	46356 bytes/iter
heap.apply	1000000	992 bytes/iter
heap.update	1000000	21437 bytes/iter
aper.apply	1000000	304 bytes/iter
aper.update	1000000	50186 bytes/iter

RB_ID=504485"
mosesn,2014-11-18 08:51:15,https://api.github.com/repos/twitter/finagle/git/commits/ae41fa63405c29bc78341d211383694ba6917bb7,ae41fa63405c29bc78341d211383694ba6917bb7,"finagle-http: Logs an http stream breaks

Problem

Debugging failed Readers can be quite difficult because finagle isn't
loud about it, even though it's an unusual condition.

Solution

Log noisily when an http stream breaks on a failed reader.

RB_ID=506971"
mosesn,2014-11-18 04:20:28,https://api.github.com/repos/twitter/finagle/git/commits/acf28ac5f805a73fac8ea8aa6f0f0d2189b1aea8,acf28ac5f805a73fac8ea8aa6f0f0d2189b1aea8,"util-stats/finagle-core: Moved StatsReceiver and friends to util

Problem

Today StatsReceiver et. al. are defined in finagle-core. Library
authors my wish to define interfaces which take a StatsReceiver but
do not wish to explicitly depend on finagle-core.

Solution

Move StatsReceiver et. al. to a new util-stats package.

Result

Library authors can take a dependency on util-stats to accept
a StatsReceiver.  Libraries in util can also be instrumented
without taking a dependency on finagle.

RB_ID=513543"
sprsquish,2014-11-14 23:48:32,https://api.github.com/repos/twitter/finagle/git/commits/9923b296b435ea1695d2022ac32eb6aec1be2137,9923b296b435ea1695d2022ac32eb6aec1be2137,"fix tracing for mux

Problem

RPC names are not being traced with ThriftMux. Annotations indicating
that Mux has been enabled fall outside the core trace annotations
forcing finagle-zipkin to flush the annotation later.

Solution

Create filters for ThriftMux that will unpack enough of the thrift
message to get the RPC name and trace it. Create a piece of the
Stack where protocol-specific tracing can live that will ensure
traces are made in scope.

Result

RPC names are properly traced when using ThriftMux. Mux-enabled
annotations are traced within the span they belong to.

RB_ID=514143"
luciferous,2014-11-12 20:19:41,https://api.github.com/repos/twitter/finagle/git/commits/12b495fc1f6cdfa20b492f5def81ba57135d44c6,12b495fc1f6cdfa20b492f5def81ba57135d44c6,"Remove RichHttp
Problem

RichHttp isn't necessary anymore, the API is Netty free.

Solution

Collapse the streaming flag into Http. Also removed inheritance chain
linking to Http{Request, Response}. This means that changes internal to
Finagle won't accidentally use the Netty types.

Result

Simpler codec and Netty types are hidden from finagle though still
available in httpx namespace.

RB_ID=469623"
mosesn,2014-11-12 20:14:31,https://api.github.com/repos/twitter/finagle/git/commits/95517933b41f3210a813be13a13e4a31ebac30ea,95517933b41f3210a813be13a13e4a31ebac30ea,"finagle-mux: Replace ExecElsewhere with Conductors

Problem

There is a slightly crufty abstraction for testing concurrent bits
of leasing.  scalatest Conductors is basically a rigorous approach
to the same idea.

Solution

Swap ExecElsewhere with twitter-flavored Conductors.

RB_ID=506991"
roanta,2014-11-12 19:55:30,https://api.github.com/repos/twitter/finagle/git/commits/6108130ca08e2096e1248719791cad64ee5b0267,6108130ca08e2096e1248719791cad64ee5b0267,"finagle-mysql: Fix flaky tracing test

Problem

finagle-mysql was testing for specific traces at the request level.
However, this requires that we can actually dispatch requests in order
to trigger the behavior.

Solution

Only execute test if there is a local mysql instance like we do for the
rest of the integration tests.

RB_ID=510419"
luciferous,2014-11-12 02:49:13,https://api.github.com/repos/twitter/finagle/git/commits/648af15b9fa6c951e0d599cd372a649c0e5ef61e,648af15b9fa6c951e0d599cd372a649c0e5ef61e,"[trivial] More OWNERS for httpx-compat

Problem

finagle-httpx-compat OWNERS should inherit the OWNERS from
the parent project.

Solution

Add the additional owners.

Result

The finagle-httpx-compat OWNERS file is complete.

RB_ID=502069"
kevinoliver,2014-11-11 23:42:22,https://api.github.com/repos/twitter/finagle/git/commits/5a4f609b83c460656cbd14b0cc8c25ca4ab568bc,5a4f609b83c460656cbd14b0cc8c25ca4ab568bc,"finagle-core: Configuration parity for Stack.Param's

Problem

Configuration of clients and servers via `c.t.finagle.Stack.Param` is
limited because many of the Params are marked as `private[finagle]`.

Solution

Publicly expose the params used by `ClientBuilder` and
`ServerBuilder`.

RB_ID=509891"
kevinoliver,2014-11-11 23:03:41,https://api.github.com/repos/twitter/finagle/git/commits/e9770cdd8f26aa91d565baafd13d45875fa02e00,e9770cdd8f26aa91d565baafd13d45875fa02e00,"util, finagle: introduce c.t.util.events.Sink

Problem

There is no centralized place where runtime events are sent
making it difficult to diagnose issues.

Solution

Introduce the `com.twitter.util.events.Sink` trait so that
arbitrary events can be sent there enabling further analysis.

An emphasis is placed on runtime performance and avoiding
object allocations in order to allow this to be used in
high throughput environments.

The first provided implementation of Sink is `c.t.u.events.SizedSink`
and it implements a fixed size, in-memory, ring buffer of events.

To test, this can be enabled is via the
`com.twitter.util.events.sinkEnabled` flag and sized via
`com.twitter.util.events.approxNumEvents`. It is then exposed to your
application at `Sink.default` and is as of now wired up into
`MetricStatsReceiver` in finagle-stats and `SamplingTracer` in
finagle-zipkin.

Result

Benchmarks of `SizedSink.event` show 0 bytes allocated and
~500 nanoseconds per call with 8 threads and a capacity of 2^20
(on my 2.8 GHz Intel Core i7 laptop).

This will enable future work to expose information in a twitter-server
admin endpoint as well as wiring up logging to a `Sink`.

RB_ID=503483"
dschobel,2014-11-11 18:13:19,https://api.github.com/repos/twitter/finagle/git/commits/96ecdf0d2ed51852383cbe615552b3e13a3f4c22,96ecdf0d2ed51852383cbe615552b3e13a3f4c22,"finagle-memcached/x: update OWNERS

RB_ID=507823"
dschobel,2014-11-11 00:04:41,https://api.github.com/repos/twitter/finagle/git/commits/5863ba8d8af27f1961808703cbdb84d57e2b6485,5863ba8d8af27f1961808703cbdb84d57e2b6485,"finagle-memcached[|x]: make CacheNodeGroupTest more patient

RB_ID=508549"
mariusae,2014-11-10 21:52:54,https://api.github.com/repos/twitter/finagle/git/commits/eaca1450e5b01ca7f416045b278c313853d8edc6,eaca1450e5b01ca7f416045b278c313853d8edc6,"finagle-{core,http}: Improve reliability of Reader discarding

Problem

After looking at IM-1561, I went to town on the finagle-http
dispatching and came up with a bunch of corner cases where we should
be more discarding more eagerly and reliably.

Additionally, the client dispatchers didn't account for streamChunks
failures.

Solution

Introduce Transport.collate, to replace Transport.copyToWriter.
Transport.collate ensures that discarding happens on both read and
write sides reliably.

The latter was also a source of flakyness for the EndToEnd tests. I
have not been able to make them fail again, so I am optimistically
unflaking them.

RB_ID=500501"
mosesn,2014-11-08 20:30:01,https://api.github.com/repos/twitter/finagle/git/commits/0fe0e10253500088540ae8cd7f4d0e44288bcecd,0fe0e10253500088540ae8cd7f4d0e44288bcecd,"finagle-mux: Wait for server to drain before closing socket

Problem

Neither the client nor the server waits to drain before closing the
socket.

Solution

Wait for the server to drain before closing the socket.  Serialize
client dispatches so that they don't race with draining.  Only start
nacking after the server has received an rdrain.

RB_ID=497429"
mariusae,2014-11-08 03:22:38,https://api.github.com/repos/twitter/finagle/git/commits/2fe717a1ada420d2356c9e5faa69bb45b269341f,2fe717a1ada420d2356c9e5faa69bb45b269341f,"Resolver: add optional synchronous DNS resolution support

Problem

It seems that asynchronous DNS resolution tickles a bad interaction
with the bridged scheduler and zk2.

Solution

This is a TEMPORARY WORKAROUND to unblock this combination.

RB_ID=507943"
roanta,2014-11-08 01:08:35,https://api.github.com/repos/twitter/finagle/git/commits/75bd4799d42da5b2dcb0ce86ec3b9c5f0c8ed226,75bd4799d42da5b2dcb0ce86ec3b9c5f0c8ed226,"finagle-thriftmux: Set protocol factory in ThriftMuxServer#withProtocolFactory

RB_ID=507373"
nshkrob,2014-11-07 01:06:17,https://api.github.com/repos/twitter/finagle/git/commits/1452fb9c338ad86557418d04fca090a25ca5b4f7,1452fb9c338ad86557418d04fca090a25ca5b4f7,"finagle-mux: Re-enable mux.EndToEndTest (was disabled as flaky)

Problem

c.t.f.mux.EndToEndTest was flaky until ""Make multithreaded tests more patient"" was submitted.

Solution

Re-enable the test.

Result

Test passes.

RB_ID=503235"
dschobel,2014-11-06 23:34:54,https://api.github.com/repos/twitter/finagle/git/commits/286ffdf4ba2431bf284a222768b888ea24221cb8,286ffdf4ba2431bf284a222768b888ea24221cb8,"finagle-thrift: make 'EndToEndTest' more reliable

RB_ID=504463"
nshkrob,2014-11-06 22:11:21,https://api.github.com/repos/twitter/finagle/git/commits/89cb0b3dcf7eb072bb5866f13f4d0c3c25e88e97,89cb0b3dcf7eb072bb5866f13f4d0c3c25e88e97,"finagle-thrift: Fix EndToEndTest (end-to-end tracing potpourri)

Problem

EndToEndTest was marked flaky. It's actually broken reliably with Stack because of the duplicate ClientAddr annotation. The annotation is added by the ClientDispatcher, so the first request to a service gets double-annotated.

Solution

It's hard to remove the duplicate annotation, so I've changed the test to accept it.

Result

Test passes.

RB_ID=505927"
sprsquish,2014-11-06 21:20:06,https://api.github.com/repos/twitter/finagle/git/commits/3005d6fbc0cb54777e83eaf95a32d61414a227a1,3005d6fbc0cb54777e83eaf95a32d61414a227a1,"Ensure TraceId is initialized in HTTP

Problem

If an HTTP client doesn't set Trace headers the default TraceId is used
for every in coming request.

Solution

Set the TraceId when it's not set via incoming headers.

Result

The server will always use a different TraceId if one is not provided

RB_ID=505799"
mosesn,2014-11-06 20:43:27,https://api.github.com/repos/twitter/finagle/git/commits/ca9cc53a9172658732e04913cac1e3741b32c79f,ca9cc53a9172658732e04913cac1e3741b32c79f,"finagle-memcached: Made MigrationClientTest more patient

Problem

MigrationClientTest was not resilient to failure

Solution

Made it more patient

RB_ID=505335"
kevinoliver,2014-11-06 06:02:31,https://api.github.com/repos/twitter/finagle/git/commits/a65c12aeb2c177100d0b74165454e38dc3540ad6,a65c12aeb2c177100d0b74165454e38dc3540ad6,"finagle-mux: make WindowedByteCounterTest more reliable

Problem

There is a race condition in WindowedByteCounterTest that leads to
a call to `Time.sleep` never finishing.

Solution

* Remove the anti-pattern of `Thread.start()` from within the
  constructor and do this initialization outside.
* Removed the freezing of time in WindowedByteCounterTest's
  ""ByteCounter should be stoppable"" test.

Result

The test now runs reliably without hanging.

RB_ID=503229"
bmdhacks,2014-11-06 01:43:25,https://api.github.com/repos/twitter/finagle/git/commits/f0561f0259e5a24acf76e03bdfef853d168663a2,f0561f0259e5a24acf76e03bdfef853d168663a2,"finagle/util - Make multithreaded tests more patient

Problem

By default, the `eventually` method in scalatest times the test out
after 150 milliseconds.  This makes some of our unit tests appear flaky
when random pauses or busy CI machines stall on test execution.  The
symptom of these types of failures look like this:

       org.scalatest.exceptions.TestFailedDueToTimeoutException: The
       code passed to eventually never returned normally. Attempted 1
       times over 159.628854 milliseconds.

The default patience config for scalatest[1] should try every 15ms, so
with only one retry it's clear that the CI machine is slowed for some
reason.

Solution

Mix in the IntegrationPatience trait which increases the timeout of the
`eventually` to 15 seconds.

1. http://www.artima.com/docs-scalatest-2.0.M5/org/scalatest/concurrent/PatienceConfiguration.html

RB_ID=504031"
roanta,2014-11-06 01:22:10,https://api.github.com/repos/twitter/finagle/git/commits/a03c9e806852efddc92aef9888c505c7d32a09f6,a03c9e806852efddc92aef9888c505c7d32a09f6,"finagle-doc: Improve rst markup for change log

Problem

Finagle's change log was being indexed in a non-standard fashion
on the doc site. (http://twitter.github.io/finagle/guide/)

Solution

Fix the rst markup so that we link to the most recent versions
and change log categories aren't part of the index.

RB_ID=501451"
mosesn,2014-11-05 23:53:02,https://api.github.com/repos/twitter/finagle/git/commits/4eb7c18d7819b7ec429aa2bb01185d5525be8cd9,4eb7c18d7819b7ec429aa2bb01185d5525be8cd9,"finagle-stream: Made E2E test more patient

RB_ID=504917"
sprsquish,2014-11-05 23:39:48,https://api.github.com/repos/twitter/finagle/git/commits/268ca3592b8e401b39518002ef580c81d1c6c143,268ca3592b8e401b39518002ef580c81d1c6c143,"Do not double trace memcached calls

Problem

The memcached client was double recording trace events

Solution

Remove the old filter in favor of the new one.

Result

Proper tracing of memcached calls

RB_ID=503411"
mosesn,2014-11-05 23:38:10,https://api.github.com/repos/twitter/finagle/git/commits/ee8c5a4bc8b47a60db498b603aed697daadee2f6,ee8c5a4bc8b47a60db498b603aed697daadee2f6,"finagle-core: Made ServerChannelConfigurationTest more patient

Problem

""org.scalatest.exceptions.TestFailedException: Expected exception
com.twitter.finagle.ChannelClosedException to be thrown, but
com.twitter.finagle.ChannelWriteException was thrown.""  This seems
to indicate that we expect to get a ChannelClosedException but we
actually weren't able to start writing bytes over the wire because
we were still establishing a connection.

Solution

Made it more patient.

RB_ID=504977"
sprsquish,2014-11-05 23:28:17,https://api.github.com/repos/twitter/finagle/git/commits/17203dcf7fbf581982beb35c14b7c521d1edc86c,17203dcf7fbf581982beb35c14b7c521d1edc86c,"Fix TraceId equality

Problem

TraceId cannot be used as a hash key as the hashCode is the default
hashCode of a case class which is based on all fields. However the
equals method only takes into account traceId, parentId, and spanId.

Solution

Override the hashCode method in TraceId to only take into account
traceId, parentId, and spanId.

Result

TraceId can be used as a key for the hash map of buffered spans.

RB_ID=504661"
dschobel,2014-11-05 23:13:56,https://api.github.com/repos/twitter/finagle/git/commits/1bcd3abd501fb44d3b029a20ee0b52dcd49aef99,1bcd3abd501fb44d3b029a20ee0b52dcd49aef99,"finagle-httpx-compat: fix flaky FiltersTest

RB_ID=503627"
roanta,2014-11-05 23:01:50,https://api.github.com/repos/twitter/finagle/git/commits/c52bb68f0eb266250036e4ccc9c4dd85b2cccce8,c52bb68f0eb266250036e4ccc9c4dd85b2cccce8,"finagle-core: Add StackRegistry for both clients and servers

Problem

We need a uniform way to register finagle clients and server
for dynamic introspection in twitter-server.

Solution

Introduce StackRegistry which ClientRegistry and ServerRegistry
implement.

RB_ID=481141"
stevegury,2014-11-04 21:56:36,https://api.github.com/repos/twitter/finagle/git/commits/645345a4868644cc2e8f510334304dbea1a534bb,645345a4868644cc2e8f510334304dbea1a534bb,"finagle-stream: Unflaky tests

Problem

Finagle-stream tests are currently marked as flaky.
I believe it was for environmental reason (CI infrastructure), indeed those tests
start a server and a client and use a real tcp connection for the communication.
In the past, port and fd exhaustion have cause test failure.

Solution

Unflaky all the tests in finagle-stream project.

RB_ID=503019"
mariusae,2014-11-04 20:36:00,https://api.github.com/repos/twitter/finagle/git/commits/566a322ed63169a8dbeffab043fb91cba06b3094,566a322ed63169a8dbeffab043fb91cba06b3094,"finagle-core SingletonPool: close underlying

Problem

The SingletonPool failed to close the underlying factory when it
itself was closed. On the face of it, that isn't too bad, except that
if the host went into fail-fast mode BEFORE its factory was closed. In
this case, fail-fast would persist and attempt to reconnect to the
host every 32 seconds.

RB_ID=502817"
mosesn,2014-11-04 03:06:29,https://api.github.com/repos/twitter/finagle/git/commits/8fc36dc7838349f31a5168a7e5c1d057de11fc25,8fc36dc7838349f31a5168a7e5c1d057de11fc25,"finagle-mux: Leasing EndToEndTest

Problem

We weren't sure whether leasing still worked or not

Solution

Add an end to end leasing test

RB_ID=497421"
luciferous,2014-10-31 21:19:34,https://api.github.com/repos/twitter/finagle/git/commits/d454f433998008369b66b3725e20fd22472d4260,d454f433998008369b66b3725e20fd22472d4260,"Adaptors for services of other HTTP types to HTTPx

Problem

We need an adaptor for services that use Netty types to
interoperate with Finagle service builders that expect
Finagle types. This allows services to upgrade to HTTPx
easily, and provides a path for decoupled migration in a
scenario where multiple projects rely on the same Finagle
dependency.

Solution

We implement the adaptor as a filter. This filter provides
interoperability between an HTTPx service builder and a
service using old-style HTTP types, e.g.

    val service = Service.mk[http.Request, http.Response]
    val server = Httpx.serve("":*"", HttpAdaptor andThen service)

Result

Using this adaptor, projects now have an incremental
migration path from old-style HTTP services to HTTPx.

RB_ID=497155
TBR=true"
evnm,2014-10-31 02:25:04,https://api.github.com/repos/twitter/finagle/git/commits/ea3176d2301322e90bdecb21f1490057ed5787c9,ea3176d2301322e90bdecb21f1490057ed5787c9,"finagle-core: Add blurb on user guide about ""exn/*"" stats scope

The user guide's Metrics page doesn't currently list the ""exn"" scope
under which Netty-level exceptions are recorded. This change adds such
a blurb and a proper Scaladoc for `ChannelStatsHandler`.

RB_ID=498957"
mariusae,2014-10-30 18:41:48,https://api.github.com/repos/twitter/finagle/git/commits/f437913dadec0686db80c83a2db2c95742a48007,f437913dadec0686db80c83a2db2c95742a48007,"=finagle-mux: flake WindowedByteCounterTest to unblock release

RB_ID=499125
TBR=true
NO-QUEUE=true"
mariusae,2014-10-30 17:27:36,https://api.github.com/repos/twitter/finagle/git/commits/957dadd4afa8346572e7456cf85ab90d4e15039d,957dadd4afa8346572e7456cf85ab90d4e15039d,"=bump ostrich_2.10 to 9.6.4-SNAPSHOT

RB_ID=499001
TBR=true
NO-QUEUE=true"
mosesn,2014-10-30 00:46:11,https://api.github.com/repos/twitter/finagle/git/commits/7d97b1945c0bda17401789c3f1d5102f00f7acaf,7d97b1945c0bda17401789c3f1d5102f00f7acaf,"finagle: removed usage of java 7 api

Problem

finagle doesn't use java 7 features yet, but an
InetSocketAddress#getHostString snuck in.

Solution

Switch from InetSocketAddress#getHostString to
InetSocketAddress#getHostName, which may entail a DNS lookup

RB_ID=498061"
mariusae,2014-10-29 23:04:06,https://api.github.com/repos/twitter/finagle/git/commits/2fb2e4bfe35692665dc475d15f33517bdd450b8f,2fb2e4bfe35692665dc475d15f33517bdd450b8f,"=Merge branch 'master' into sq_reserved/498209_util-6.22.2_1029222833

RB_ID=498209
TBR=true
NO-QUEUE=true"
mariusae,2014-10-29 19:08:59,https://api.github.com/repos/twitter/finagle/git/commits/44db38ba0a38569bac2a85d059b228072166984d,44db38ba0a38569bac2a85d059b228072166984d,"finagle-http: remove content length headers when chunking

Problem

Content-Length headers are not removed by Netty's compressors. This
causes content which is streamed, chunked, compressed, and also has a
Content-Length header to respond with the wrong value.

Solution

Always remove content length headers when streaming replies.

Discussion

This is a bad violation of modularity. Arguably the issue lies in
Netty here, and we should follow up.

RB_ID=496263"
kevinoliver,2014-10-28 19:29:34,https://api.github.com/repos/twitter/finagle/git/commits/72422cd52da089ba9735bc9ca0edbf7f229eb08d,72422cd52da089ba9735bc9ca0edbf7f229eb08d,"util, finagle: add missing @RunWith annotation

Problem

The junit test runner for scala needs classes to have
the `@RunWith(classOf[JUnitRunner])` annotation attached
to classes in order to run them.

Solution

Add the annotation.

RB_ID=495921"
bmdhacks,2014-10-28 18:43:51,https://api.github.com/repos/twitter/finagle/git/commits/3771eb1d2c05c62bbc15cd9a2c6d5eab70359814,3771eb1d2c05c62bbc15cd9a2c6d5eab70359814,"Add stats to failure accrual

Problem

We do not record stats on FailureAccrual removals (and revivals)

Solution

Modify failure accrual to take a statsReceiver and use that to log
stats.  This highlights the problem that FailureAccrual is essentially a
factory Transformer that can do whatever it wants, so I additionally
deprecated that part of the API because I feel that it's too
open-ended (and certainly impossible to add stats to).  Instead, users
are encouraged to just supply failure accrual params and let us take
care of the transforming.

RB_ID=487093"
dschobel,2014-10-28 00:59:31,https://api.github.com/repos/twitter/finagle/git/commits/12616f59190ef06a83072fd1332b621c6ae820cd,12616f59190ef06a83072fd1332b621c6ae820cd,"[split] finagle-stats: fix flaky tests

 Problem

 Finagle-stats tests are failing non-deterministically because of
 weak-reference semantics in the Metric's registry.

 Solution

 Keep strong reference to metrics in test code.

 Result

 Tests deterministically succeed.

RB_ID=495295"
evnm,2014-10-27 19:56:16,https://api.github.com/repos/twitter/finagle/git/commits/58d8726cd2ee17f691da06d325524acb75b86fe7,58d8726cd2ee17f691da06d325524acb75b86fe7,"[split] finagle-core: Add `marked_alive` counter to track failfast alleviation

Problem

FailFastFactory is a bit light on stats, as it only tracks for
pathological cases (i.e. marked_dead, unhealthy_{for_ms,num_retries}).

Solution

Add a marked_available stat to track the dead->available state change.

RB_ID=488429"
evnm,2014-10-27 19:29:58,https://api.github.com/repos/twitter/finagle/git/commits/ceca6d293fa57625aa27f5ad2c8888239fb43bef,ceca6d293fa57625aa27f5ad2c8888239fb43bef,"[split] finagle-core: Add scaladocs for `{Client,Server}Builder.stack`

Problem

The `{Client,Server}Builder.stack` functions that aren't deprecated
don't have scaladocs. Also, the old `ServerBuilder.stack` that takes a
`Params => Server` isn't @deprecated, which I'm assuming was an
oversight.

Solution

Add appropriate scaladocs for `{Client,Server}Builder.stack` and
@deprecate `stack(Params => Server)`.

RB_ID=490235"
evnm,2014-10-26 01:04:59,https://api.github.com/repos/twitter/finagle/git/commits/b115945613a9a43f6fa929ecb1e4d9131012c1f8,b115945613a9a43f6fa929ecb1e4d9131012c1f8,"[split] Introduce TwitterRPC

TwitterRPC is a library for constructing RPC clients and servers. Its
APIs facilitate high-level interprocess communication based on
objectives which are used to ensure timely service and resiliency.

By providing a narrow surface area of configuration, TwitterRPC aims
to remove much of the configuration burden from service owners and to
simplify application code. It does so via service level objectives
[1], which allow applications to define their expectations in
high-level terms without having to fret about specific
technology-dependent configuration parameters.

See [2] for more information.

[1] http://en.wikipedia.org/wiki/Service_level_objective
[2] http://go/twitterrpc

RB_ID=454939"
mosesn,2014-10-25 02:13:00,https://api.github.com/repos/twitter/finagle/git/commits/de11c8d0b49789d5a52fab15776375c5bec13e03,de11c8d0b49789d5a52fab15776375c5bec13e03,"[split] {finagle,util}-core: Slurry of PartialFunction micro-optimizations

Problem

PartialFunction has an isDefinedAt which must be called before
proper invocation.  However, PartialFunction#isDefinedAt and
PartialFunction#apply often entail many of the same costs (ie object
allocation due to unapply for literal PartialFunctions).

Solution

PartialFunction has a helper PartialFunction#applyOrElse so that
we only have to call it once.  However, applyOrElse takes a function,
so we must make singleton all-purpose functions to avoid extra
allocations.

Result

PartialFunction evaluation is cheaper.

RB_ID=492081"
dschobel,2014-10-25 01:30:38,https://api.github.com/repos/twitter/finagle/git/commits/14eb56ff59eae82b560b3170da165f34cc38d631,14eb56ff59eae82b560b3170da165f34cc38d631,"[split] finagle-stats: mark test as flakey

https://jira.twitter.biz/browse/CSL-1209

RB_ID=493787"
roanta,2014-10-24 22:42:17,https://api.github.com/repos/twitter/finagle/git/commits/318158cc50e7caa672f9aa42c154f22bc45022d4,318158cc50e7caa672f9aa42c154f22bc45022d4,"[split] finagle-core: Introduce a 'parameter' field in Stack.Head

Problem

Stacks are inherently stateless and thus shared between
finagle clients and servers. The way we inferred the
parameters that a module used to configure itself
attached state to a Stack and violated this guarantee.

Solution

Introduce a `parameters` field in Stack.Head which servers
as documentation and can be dynamically introspected to
determine the fields and values that a module is interested
in. To make it easy to do the right thing, abstract definitions
for `Stackables` now take type parameters that map to the
parameters a module is interested in.

Result

We can now collect interests per-module:

val stk = ...
val params = ...

val parameters = for {
 n <- stk.tails
 interest <- n.head.parameters
} yield params(interest)

RB_ID=484747"
mariusae,2014-10-24 22:02:53,https://api.github.com/repos/twitter/finagle/git/commits/7d8be03c6b57e4640cd178e2dc97d597fa029c50,7d8be03c6b57e4640cd178e2dc97d597fa029c50,"[split] finagle Balancer: fix unintentional close recursion

RB_ID=493887
TBR=true
NO-QUEUE=true"
dschobel,2014-10-24 19:02:54,https://api.github.com/repos/twitter/finagle/git/commits/5b0c6dcf37b90a04c67eb7468a4b31be2a6902ef,5b0c6dcf37b90a04c67eb7468a4b31be2a6902ef,"[split] bump ostrich to 9.6.2-SNAPSHOT

RB_ID=493469
TBR=true
NO-QUEUE=true"
dschobel,2014-10-24 18:37:29,https://api.github.com/repos/twitter/finagle/git/commits/d579f845b3bf1c62e73be6c39efd42c6c4911ea3,d579f845b3bf1c62e73be6c39efd42c6c4911ea3,"[split] bump util to 6.22.2-SNAPSHOT

RB_ID=493423
TBR=true
NO-QUEUE=true"
kevinoliver,2014-10-24 18:32:33,https://api.github.com/repos/twitter/finagle/git/commits/3daf527a0902bf66fa58840b10b54d0180821e19,3daf527a0902bf66fa58840b10b54d0180821e19,"[split] finagle: fix BUILD dependencies

RB_ID=491711"
mosesn,2014-10-23 23:51:14,https://api.github.com/repos/twitter/finagle/git/commits/bd26d6adc0802b6898a5770c23d93ce3b43c789a,bd26d6adc0802b6898a5770c23d93ce3b43c789a,"[split] finagle-core: Fixes TimeoutAndWriteExceptionsOnly RetryPolicy

Problem

Services that are configured with TimeoutAndWriteExceptionsOnly
expect to retry on request timeouts, but don't.

Solution

Change RetryPolicy behavior to retry on request timeouts properly.

RB_ID=491721"
roanta,2014-10-23 19:26:59,https://api.github.com/repos/twitter/finagle/git/commits/6b4b745c4fba5a2f0bce74034c1b5357fa1ea54d,6b4b745c4fba5a2f0bce74034c1b5357fa1ea54d,"[split] finagle-core: Liberate Transporter and Listener params

RB_ID=491365"
vkostyukov,2014-10-22 22:28:53,https://api.github.com/repos/twitter/finagle/git/commits/1876f96eb7bf0570b7fe1cd9ab399a15305def9a,1876f96eb7bf0570b7fe1cd9ab399a15305def9a,"[split] ChannelException should also wire service name to its string representation

RB_ID=487297"
roanta,2014-10-22 18:24:49,https://api.github.com/repos/twitter/finagle/git/commits/c7aa4d09f3c17d672100b33937c13317e67c0be3,c7aa4d09f3c17d672100b33937c13317e67c0be3,"[split] finagle-core: Add balancer factory for ewma

Problem

We need a way to inject the ewma load metric per client.

Solution

Create a WeightedLoadBalancerFactory that instantiates a
P2CBalancerPeakEwma. This now allows us to inject it via
LoadBalancerFactory.Param (and ClientBuilder).

RB_ID=490021"
evnm,2014-10-21 23:31:54,https://api.github.com/repos/twitter/finagle/git/commits/f45d7e11849e3e93defa0d46726d7d58d6f52f01,f45d7e11849e3e93defa0d46726d7d58d6f52f01,"[split] finagle-serversets: Remove per-path histograms

Problem

finagle-serversets currently emits four histograms for each path that
it's asked to look up. For services that resolve large numbers of
serversets (namely TFE and the Wily Nameserver), this explodes into
thousands of metrics. There are no known usages of these stats for
monitoring purposes, so it's a huge waste and memory pressure burden.

Solution

Remove the per-path histograms in favor of four aggregated read- and
parse-latency histograms for entries and vectors.

Result

The number of stats emitted under the ""zk2"" scope is vastly
reduced. The per-path ""size"" and ""limbo"" stats are maintained, as are
those emitted by the InetResolver that is embedded within the
Zk2Resolver.

RB_ID=484443"
kevinoliver,2014-10-21 20:21:21,https://api.github.com/repos/twitter/finagle/git/commits/bb40f16e2323e1c72a6f002f3a0812373916f17e,bb40f16e2323e1c72a6f002f3a0812373916f17e,"[split] finagle-core: improve documentation for RetryPolicy.tries

Problem

A lack of documentation on `RetryPolicy.tries` leaves the
exercise to readers.

Solution

Improve the documentation and fix some minor broken windows.

RB_ID=488821"
mariusae,2014-10-21 18:18:46,https://api.github.com/repos/twitter/finagle/git/commits/7529e3b4b242f28a90df5943c354f91dcb53b160,7529e3b4b242f28a90df5943c354f91dcb53b160,"[split] Introduce Balancer

Problem

Working with P2C was becoming unwieldy. It does not separate concerns
very well.

Solution

Split up the responsibilities of balancing, updating, node
maintenance, and state maintenance.

RB_ID=471979"
evnm,2014-10-21 18:20:20,https://api.github.com/repos/twitter/finagle/git/commits/4f2fa1df5a4e349b5f754312d82c8261301fed97,4f2fa1df5a4e349b5f754312d82c8261301fed97,"[split] A bit of cleanup in finagle-serversets.

A few (largely cosmetic) aspects of the file ServerSet2.scala are
reworked:

- The hierarchy of implementations of the ServerSet2 trait is
  flattened. The reasoning for this is that it simplifies the interface
  one uses to construct ServerSet2 instances. Rather than a mismatched
  variety of constructors and factory functions, you simply pass a
  `Var[Zk]` to the ServerSet2 constructor. This has the downside of
  foundering the separation of concerns of Var and Zk from the
  ServerSet2 trait, which arguably goes against the desire to separate
  the service discovery library from ZooKeeper. However, I think that an
  easier-to-reason-about ServerSet2 class outweighs the benefits of
  wholly separating each of these concepts. Especially given plans for
  follow-on passes over this code to factor out the ZK bits.

- com.twitter.util.Memoize is used to remove the need for a `var` to
  cache ServerSet2 instances

- More documentation is added, specifically the help message of the
  `com.twitter.newZk` flag and a number of public APIs' Scaladocs

RB_ID=481107"
mariusae,2014-10-21 00:10:28,https://api.github.com/repos/twitter/finagle/git/commits/a257654eadd552bcbd4f216854f32395f1dfc9dc,a257654eadd552bcbd4f216854f32395f1dfc9dc,"[split] util-logging: factor out testing code into new package util-test

Problem

util-logging exported a dependency on scalatest. This causes broken
builds when used in Science, which is still on Scalatest 1.x.

Solution

Factor this out into its own package, and use selectively.

before% ./pants goal dependencies twitter-server/src/main/scala | grep scalatest
3rdparty:scalatest
org.scalatest:scalatest_2.10:2.2.2
before%

after% ./pants goal dependencies twitter-server/src/main/scala | grep scalatest
after%

RB_ID=482011"
travisbrown,2014-10-20 21:12:37,https://api.github.com/repos/twitter/finagle/git/commits/8d0f6e655e37d56133362bf5d94b9114155a9220,8d0f6e655e37d56133362bf5d94b9114155a9220,"[split] Fix Travis CI config and add missing dependency to SBT build

Problem

We're no longer cross-building against 2.9.2, but that's what's in the Travis
configuration. The SBT build is also missing the ScalaCheck dependency.

Solution

Update the version, add the dependency.

Result

Tests run as expected on Travis.

RB_ID=484635"
dschobel,2014-10-20 18:25:40,https://api.github.com/repos/twitter/finagle/git/commits/8d1fdc402f55a2594c3135bc89a9f3ab0b76d50a,8d1fdc402f55a2594c3135bc89a9f3ab0b76d50a,"[split]  finagle: define sbt builds for -x projects

 define sbt builds for finagle-memcachedx, finagle-kestrelx and finagle-httpx

RB_ID=485655"
bmdhacks,2014-10-17 21:25:04,https://api.github.com/repos/twitter/finagle/git/commits/1ed95950723816357945254260e6808252a53fb4,1ed95950723816357945254260e6808252a53fb4,"[split] finagle loadbalancer: remove a stat from emwa

Problem

This defines a stat per host/port endpoint in the emwa load balancer,
which has GC characteristics of per-host stats.  IE: large cluster
rollouts to mesos will GC and repromote a ton of stats.

Solution

Deleting this stat is acceptable since it's mostly for load balancer
debugging.

RB_ID=483375"
mariusae,2014-10-16 23:37:03,https://api.github.com/repos/twitter/finagle/git/commits/27c5c11ed59ea5f3d836c0ea0d5cd3931fbc68f0,27c5c11ed59ea5f3d836c0ea0d5cd3931fbc68f0,"[split] Trace, Context: add transitional APIs

In order to get the request context change[1] shipped, we need to
introduce a transitional API so that we can introduce it to science
without having an intermediate broken state.

I have a separate branch in science that makes changes according to
this, and they seem to be all that's required.

[1] https://reviewboard.twitter.biz/r/469081/

RB_ID=480925"
dschobel,2014-10-16 21:42:37,https://api.github.com/repos/twitter/finagle/git/commits/536ade7da9b8894aa943c6d605548677d470433d,536ade7da9b8894aa943c6d605548677d470433d,"[split]  finagle-memcachedx: sync commit a403a0a7d66 from finagle-memcached

 syncing

 commit a403a0a7d6689a60905a6b39ff860673905bc815
 Author: Evan Jones <ejones@twitter.com>
 Date:   Thu Oct 9 22:28:48 2014 +0000

     finagle-memcached: KetamaClient: Add test for concelled requests

     Adds unit test for commit 4c29ba95b3

     RB_ID=473329

 to finagle-memcachedx

RB_ID=485881
TBR=true"
dschobel,2014-10-16 19:11:23,https://api.github.com/repos/twitter/finagle/git/commits/6f605bff92d774e4a9f7456166db539d2bb60233,6f605bff92d774e4a9f7456166db539d2bb60233,"[split]  finagle-core: whitelist twcache from duplicate scheme check and parameterize resolver discovery

 Problem

 Finagle-memcached and finagle-memcachedx each define a resolver,
 'TwitterCacheResolver', for the twcache scheme. This leads to an
 unrecoverable runtime failure for packages that pick up both libraries
 due to the conflicting resolvers registering for the same scheme.

 Solution

 Special-case the 'twcache' scheme to whitelist it for finagle-core's
 Resolver duplicate checking.

 The reason for this hack is that no other solution is deployable
 in the multi-mono-repo world without one-shotting Science in a
 branch (as confirmed in extensive discussion with jw and moses).
 The plan for an incremental rollout for finagle-memcachedx precludes
 a 2.10 style upgrade so that leads us to the proposed bandaid. The
 good news is that this bandaid has clearly defined lifespan, the
 duration of the netty4 migration.

 Trying to write tests to verify the new filtering logic was, as far
 as I could determine, impossible because the Resolver hardcodes a
 ServiceLoader call to discover resolvers defined in resource files,
 all of which happens at static init time of a private member. As a
 result this RB also introduces a generalized version of the Resolver
 object which is paramterized by a Seq[Resolver] producing thunk
 which allows us to assert signifcant properties of Resolver such
 as: defining multiple resolvers for the same schemes throws and
 that twcache is in fact a special case. That change isn't essential
 and if gets too much pushback I'm okay to drop it as the important
 result here is to unblock the finagle-memcachedx rollout.

 Result

 1) Netty4 migration is unblocked and we can proceed with porting
 services to finagle-memcachedx incrementally without threat of
 runtime TwitterCacheResolver scheme collision related failures.
 2) Implicit assumption that the TwitterCacheResolver defined in
 finagle-memcached and finagle-memcachedx will not diverge.
 3) More testable Resolver

RB_ID=484357"
vkostyukov,2014-10-16 18:25:17,https://api.github.com/repos/twitter/finagle/git/commits/e681359b88b79829e0d166cec048fdd55bb65854,e681359b88b79829e0d166cec048fdd55bb65854,"[split] Read-only ByteBuffer's may be used as param values for Thrift's binary args.

RB_ID=483311"
edma2,2014-10-16 18:25:30,https://api.github.com/repos/twitter/finagle/git/commits/317b78b90d5ae8b3458895420aad3c40858e4eaf,317b78b90d5ae8b3458895420aad3c40858e4eaf,"[split] Add missing tracing configuration to Macaw

* Adds missing DefaultServer override for newTraceInitializer.
* In the future, we should switch to Stack (see RB).

RB_ID=484875"
luciferous,2014-10-15 23:46:11,https://api.github.com/repos/twitter/finagle/git/commits/15eeb140ae9a8fbf73450da6c00706e3dd0c16a9,15eeb140ae9a8fbf73450da6c00706e3dd0c16a9,"[split] Port tracing fix from finagle-http

We need to backport changes from finagle-http to finagle-httpx. This
change comes from 81e920d.

From RB=431323:

> Problem
>
> How and where Finagle initializes a its Tracing infrastructure is
> unlcear and difficult to reason about. Each Codec is charged with
> decoding trace info, pushing the Tracer, tracing send/recv events, and
> service name annotations. This caused issues where traces were
> recorded before a tracer was pushed to the stack or before the proper
> TraceId was decoded out of the protocol, thus creating broken traces.
>
> Solution
>
> Charge the codecs with simply initializing the trace id by decoding it
> from the protocol. Let finagle handle tracing service name and send/recv
> events.
>
> Result
>
> Traces work the right way by default

RB_ID=484289"
dschobel,2014-10-15 21:19:50,https://api.github.com/repos/twitter/finagle/git/commits/9be0a5f44ab183760a3624f74f668cc67f7df84f,9be0a5f44ab183760a3624f74f668cc67f7df84f,"[split]  finagle-kestrelx: fix java style failures

 Problem

 finagle-kestrelx's java src is failing checkstyle

 Solution

 fix the style issues

RB_ID=484231"
azenkov,2014-10-15 15:16:09,https://api.github.com/repos/twitter/finagle/git/commits/d5047fb951fd455fccd2007a42ba89ccf83af22d,d5047fb951fd455fccd2007a42ba89ccf83af22d,"[split] Updated with CrimsonHexagon info

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=483177"
mosesn,2014-10-15 02:31:03,https://api.github.com/repos/twitter/finagle/git/commits/acb373b1dc49c36d3bcecdaade5faeebe5f58b07,acb373b1dc49c36d3bcecdaade5faeebe5f58b07,"[split] finagle-core: Enable SNI by default for finagle clients over ssl

Problem

finagle's implementation of SSL does not use Server Name Indication
(SNI).

Solution

finagle must use SSLEngine, not SSLSockets, because SSLSockets have
mostly blocking operations.  In order to use SNI with SSLEngine,
we must supply a peerHost and peerPort to SSLContext.  This means
threading a host and port through to SSL connection establishment
time.  The only reference that we have to the downstream is the
SocketAddress, so we use that by default--however, if the client
specifies a hostname to verify against, we override the host with
that one.

Result

SNI is automatically turned on for all clients that enable TLS.
When host verification is also turned on, we use the same host for
host verification and SNI.

RB_ID=481449"
bmdhacks,2014-10-14 21:04:52,https://api.github.com/repos/twitter/finagle/git/commits/450c9d0b6264f5b79e51ca9c3240779cf63a9f01,450c9d0b6264f5b79e51ca9c3240779cf63a9f01,"[split] util and finagle: fix compiler warnings

Fixes to some of the more trivial compiler warnings in finagle and
util.

RB_ID=473425"
jbripley,2014-10-14 17:56:00,https://api.github.com/repos/twitter/finagle/git/commits/a30095eeb97bfdb025d800c8eebd281b608aa0d0,a30095eeb97bfdb025d800c8eebd281b608aa0d0,"[split] Add DICE to adopters list

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=482787"
roanta,2014-10-14 15:43:24,https://api.github.com/repos/twitter/finagle/git/commits/7394070b78c480d7da6e9e94fada59c5794f9ff4,7394070b78c480d7da6e9e94fada59c5794f9ff4,"[split] bump scrooge to 3.17.1-SNAPSHOT

RB_ID=482611
TBR=true"
roanta,2014-10-14 02:58:02,https://api.github.com/repos/twitter/finagle/git/commits/fcb481d70d109fdccc71b4afcced3c6c24411597,fcb481d70d109fdccc71b4afcced3c6c24411597,"[split] bump finagle to 6.22.1-SNAPSHOT

RB_ID=482581
TBR=true
NO-QUEUE=true"
roanta,2014-10-14 01:48:28,https://api.github.com/repos/twitter/finagle/git/commits/348cbb02cb2529ee02850ce9b160b3bda8d98ec9,348cbb02cb2529ee02850ce9b160b3bda8d98ec9,"[split] bump ostrich_2.10 to 9.6.1-SNAPSHOT

RB_ID=482527
TBR=true
NO-QUEUE=true"
mosesn,2014-10-13 22:42:34,https://api.github.com/repos/twitter/finagle/git/commits/ab6445df23aba09f95d3e77b8214933de93ac1b2,ab6445df23aba09f95d3e77b8214933de93ac1b2,"[split] finagle-core: Remove unused ProxyService

RB_ID=481483"
roanta,2014-10-13 21:46:35,https://api.github.com/repos/twitter/finagle/git/commits/f388c81c110990023b53a98fb1850a5a81efb144,f388c81c110990023b53a98fb1850a5a81efb144,"[split] bump util to 6.22.1-SNAPSHOT

RB_ID=482027
TBR=true
NO-QUEUE=true"
travisbrown,2014-10-13 14:50:37,https://api.github.com/repos/twitter/finagle/git/commits/37f21789c798d32bc526e443e1b0673d76339914,37f21789c798d32bc526e443e1b0673d76339914,"[split] Fix minor issues and missing code blocks in Finagle documentation

Problem

Some references in the documentation ended up broken after rearrangements in
the example code, resulting in missing code blocks. The note at the beginning
of CHANGES was also unindented, resulting in part of it being rendered.

Solution

Fix references, re-indent note.

Result

No more empty code blocks, unintentionally rendered comments, or Sphinx
warnings.

RB_ID=480377"
mosesn,2014-10-13 07:25:07,https://api.github.com/repos/twitter/finagle/git/commits/3e4485e8c8b93e0ab3d14d59c8342df63d202a2c,3e4485e8c8b93e0ab3d14d59c8342df63d202a2c,"[split] finagle-core: Scope InetResolver's stats properly

Problem:

Metrics recorded for InetResolver may not be scoped.

Solution:

Ensure all InetResolver metrics are scoped under inet/dns.

RB_ID=479707"
mosesn,2014-10-13 07:21:09,https://api.github.com/repos/twitter/finagle/git/commits/8dea82241074f0451c353b4894632963a6057b62,8dea82241074f0451c353b4894632963a6057b62,"[split] finagle-thrift{,mux}: Clarified with* deprecation warning

RB_ID=476037"
roanta,2014-10-11 00:38:47,https://api.github.com/repos/twitter/finagle/git/commits/797df0caaa86e12280bc858b3b6301d68cb7b670,797df0caaa86e12280bc858b3b6301d68cb7b670,"[split] finagle-core: add roanta to owners

RB_ID=475077"
evnm,2014-10-10 19:50:16,https://api.github.com/repos/twitter/finagle/git/commits/8d6d5af7717ba5aee032ec261b4de403e16cea0c,8d6d5af7717ba5aee032ec261b4de403e16cea0c,"[split] Add evm to OWNERS of {finagle,util}-core

RB_ID=476845"
kevinoliver,2014-10-09 20:39:14,https://api.github.com/repos/twitter/finagle/git/commits/dc7df663e523233a685171c89be4986198173ee5,dc7df663e523233a685171c89be4986198173ee5,"[split] finagle-thrift: move TFinagleBinaryProtocol counters

Problem

`com.twitter.finagle.thrift.TTwitterClientFilter` ends up creating
`com.twitter.finagle.stats.Counter`s on every request via
`TFinagleBinaryProtocol`. This is unnecessary in terms of CPU and
object allocation.
These counters are rarely for diagnostics but do have some value.

Solution

Move the counters into the companion object to avoid these calls
on the request path.

Result

A faster and more efficient request path.

RB_ID=478103"
stevegury,2014-10-09 17:04:40,https://api.github.com/repos/twitter/finagle/git/commits/6e30ffa4c3d4310fb25fa2c5ae4bbfa7dbfaca3c,6e30ffa4c3d4310fb25fa2c5ae4bbfa7dbfaca3c,"[split] finagle-core: BroadcastStatsReceiver, introduce specialized implementation

Problem

While reading perf output, I discovered that we create unnecessary intermediate
objects for `Counter` and `Stat` in the BroadcastStatsReceiver.
Also, creating counter/stats when having two StatsReceivers in your classpath
allocate some intermediate data-structures.

Solution

Get rid of those unnecessary objects.
Introduce a new specialized version of BroadcastStatsReceiver for the case of
two loaded StatsReceiver, which doesn't allocate unnecessary intermediate
data-structures.

Result

Simpler code, the perf graph will be more readable.
""counter.incr()"" performance is identical.
Creation of counter/stats for LoadedStatsReceiver.size = 2 is slightly faster
and allocate less.

RB_ID=478057"
xinxiang-twitter,2014-10-08 18:58:55,https://api.github.com/repos/twitter/finagle/git/commits/d9b7acf451ab1b291e53677029ffd45eb74e6594,d9b7acf451ab1b291e53677029ffd45eb74e6594,"[split] Use interruptible future for the client request readiness to avoid initial future exception bing cached (CACHE-1920)

RB_ID=473255"
dschobel,2014-10-08 02:35:49,https://api.github.com/repos/twitter/finagle/git/commits/62d45011a22446dda4755a8317b910f445d5903d,62d45011a22446dda4755a8317b910f445d5903d,"[split]  finagle-kestrel: introduce port of finagle-kestrel with netty3-free public api

 Problem

 the finagle-kestrel public API exposes netty3 types.

 Solution

 finagle-kestrelx: finagle-kestrel reimplemented on finagle-memcachedx
 with the netty3 types removed from the former's public api.

 Result

 a new package and module to let projects opt-in to the netty3-free
 API.

RB_ID=468575"
dschobel,2014-10-08 02:11:25,https://api.github.com/repos/twitter/finagle/git/commits/3a3b8c03829dec2066c9e32e015b9cfd15fe8b6e,3a3b8c03829dec2066c9e32e015b9cfd15fe8b6e,"[split]  csl: add memcachedx and httpx modules to finagle/pom.xml

 Problem

 need to publish finagle-memcachedx and finagle-httpx artifacts

 Solution

 add both to finagle/pom.xml
 fixup of artifactid in finagle-httpx/pom.xml
 add stable and snapshot deps for both to
 parents/dependencies/pom.xml

RB_ID=476541"
kevinoliver,2014-10-07 18:01:41,https://api.github.com/repos/twitter/finagle/git/commits/2c6a3c067e6c5f23f3b0b149a5451fb001b066c4,2c6a3c067e6c5f23f3b0b149a5451fb001b066c4,"[split] util, ostrich, finagle: add koliver to owners

RB_ID=475285"
mariusae,2014-10-06 19:24:49,https://api.github.com/repos/twitter/finagle/git/commits/08d59bb4140dac076b43331c98c513c977547fdf,08d59bb4140dac076b43331c98c513c977547fdf,"[split] mux: clear contexts after receive, not in 'finally' clause

Problem

Mux can leak Locals between contexts. 'Local.restore' was misplaced.
It was in the 'finally' clause in a recursive loop, and not after
dispatch.

RB_ID=475279
NO-QUEUE=true"
bmdhacks,2014-10-04 00:08:11,https://api.github.com/repos/twitter/finagle/git/commits/f9ef98b102e693b484d9712ee34e5bef3c328b18,f9ef98b102e693b484d9712ee34e5bef3c328b18,"[split] finagle-core: fix build.properties location for maven builds

Problem

After upgrading to scala 2.10, maven builds would no longer report their
finagle version.  This was because the build.properties file moved to
com/twitter/finagle-core_2/10/build.properties while for sbt builds it
still was com/twitter/finagle-core/build.properties

Solution

Explicitly specify the package name for the build.properties plugin to
go where sbt (and non crossversioned builds) place it.

RB_ID=472923"
bmdhacks,2014-10-03 23:45:57,https://api.github.com/repos/twitter/finagle/git/commits/fbad5f151d17afd19ac8d39fb3eddff942246148,fbad5f151d17afd19ac8d39fb3eddff942246148,"[split] finagle-zipkin - add owners file containing bdegenhardt and jeff

RB_ID=474431"
vargasbo,2014-10-03 18:35:21,https://api.github.com/repos/twitter/finagle/git/commits/baf4c136c0cb2169e14335b67f4023e43606cbf0,baf4c136c0cb2169e14335b67f4023e43606cbf0,"[split] Update ADOPTERS.md

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=473933"
dschobel,2014-10-03 19:05:17,https://api.github.com/repos/twitter/finagle/git/commits/6586b2f20fb2c5297622232edaff3f409088ddbe,6586b2f20fb2c5297622232edaff3f409088ddbe,"[split] sync finagle-memcached changes to finagle-memcachedx

RB_ID=474019
TBR=true"
kevinoliver,2014-10-03 16:32:10,https://api.github.com/repos/twitter/finagle/git/commits/e90e8fda395f68c674387cb85df318f54ee0eede,e90e8fda395f68c674387cb85df318f54ee0eede,"[split] finagle-http: Send ""Connection: close"" header while dispatcher is closing

Problem

During http server shutdown, the server does not indicate back
to the client that the connection should not be used again.

Solution

`HttpServerDispatcher` now returns ""Connection: close"" response
headers for all responses once the server has begun to close.

Result

Clients should not reuse these connections and this should improve
success rate during restarts.

RB_ID=469897"
luciferous,2014-10-02 07:56:01,https://api.github.com/repos/twitter/finagle/git/commits/365a7b817832fd48e315cb0748f2959a658c1520,365a7b817832fd48e315cb0748f2959a658c1520,"[split] Transport.copyToWriter

Problem

Creating a Reader from a Transport is complicated and easy to get
wrong.

Solution

Transport.copyToWriter takes a Transport[_, A] and a function to
serialize `A` to `Buf`, then continuously reads from the Transport
writing the output of the serializing function to the Writer.

Result

A simple and reusable method to get a Reader from Transport provided
there is a mapping between the output type of Transport and `Buf`.

RB_ID=396003"
stevegury,2014-09-30 23:54:56,https://api.github.com/repos/twitter/finagle/git/commits/c97fb3fd24593b04423442e7c0ae1947d4d069c0,c97fb3fd24593b04423442e7c0ae1947d4d069c0,"[split] finagle-thrift: Add back connection_preparation_latency stat in Thrift

Problem

Clients constructed with `Thrift.newIface` lacks the ""codec_connection_preparation_latency_ms""
stat, even though the ones constructed with ClientBuilder expose it.

Solution

Wrap the underlying ServiceFactory returned by `ThriftClientPreparer.prepare` and
measure the distribution of the connection preparation.

RB_ID=469669"
stevegury,2014-09-30 21:21:55,https://api.github.com/repos/twitter/finagle/git/commits/d8a525fd8620d67f1c38fae03fc106ee505a432a,d8a525fd8620d67f1c38fae03fc106ee505a432a,"[split] finagle-core: Properly wrap some IOException into ConnectionFailedException

Problem

Some connection timeout exception sent by java are actually
IOException, they're transformed by the ChannelException.apply
into UnknownChannelException.

Solution

Properly wrap the IOExceptions where the message is ""Connection timed out""
into ConnectionFailedException.

RB_ID=470113"
stevegury,2014-09-30 18:50:08,https://api.github.com/repos/twitter/finagle/git/commits/e70ad8e3befcb03907e26e225d7cf47ea6b096a7,e70ad8e3befcb03907e26e225d7cf47ea6b096a7,"[split] finagle-core: Introduce gauges in SummarizingStatsReceiver

Problem

SummarizingStatsReceiver is not exporting any Gauges.

Solution

When calling `summary()`, snapshot and export all the gauges.

RB_ID=469661"
stevegury,2014-09-30 18:51:50,https://api.github.com/repos/twitter/finagle/git/commits/17b10189cce1c989583aac2312bf97f12de8ca10,17b10189cce1c989583aac2312bf97f12de8ca10,"[split] Bump Netty version to 3.9.3.Final

RB_ID=467919"
bajohns,2014-09-30 17:01:42,https://api.github.com/repos/twitter/finagle/git/commits/36f491672fe69a450ed95aa2f813a2aa4668a43b,36f491672fe69a450ed95aa2f813a2aa4668a43b,"[split] Migration of tests in finagle-thrift and finagle-stream to ScalaTest

Problem

These two packages contain tests written in Specs2 and ScalaTest.

Solution

All tests in these packages were migrated to ScalaTest.  Additionally, the ignore facility
in ScalaTest was used to message when flaky tests are disable.

Result

These packages now conform to the Finagle testing stadard.  Additionally, the ignore facility
in ScalaTest was used to message when flaky tests are disabled.

Signed-off-by: Brian Degenhardt <bdegenhardt@twitter.com>

RB_ID=464853"
luciferous,2014-09-30 00:32:16,https://api.github.com/repos/twitter/finagle/git/commits/8e187c068c9104b00b1afbe9e5510986ceb0cc11,8e187c068c9104b00b1afbe9e5510986ceb0cc11,"[split] Set content length header when appropriate

Problem

Content length is not set for requests even when we are sure there is a
payload body. Additionally, we forgot to set the content length header
for HttpResponse in the dispatcher.

Solution

Set the content length header when we are supposed to.

Result

Content length header is set for requests and responses when appropriate.

RB_ID=428089"
stevegury,2014-09-27 03:58:59,https://api.github.com/repos/twitter/finagle/git/commits/97e8a48bf32c5a38d3cf024f8ce0a2d443ba6200,97e8a48bf32c5a38d3cf024f8ce0a2d443ba6200,"[split] finagle-core: Check !flags.isDebug directly in Trace.isActivelyTracing.

Problem

Non-debug TraceIds with _sampled=Some(false) sent over the wire have the
SamplingKnown flag set. Trace.isActivelyTracing would match Some(false)
but only if flags is zero, but here it is two.

Solution

The case clause to find non-sampled, non-debug TraceIds was changed to
directly check flags.isDebug instead of restricting flags to zero.

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=467451"
stevegury,2014-09-26 23:39:17,https://api.github.com/repos/twitter/finagle/git/commits/4dae8c0ef81ba249be158cf2df75b1143b71ef2f,4dae8c0ef81ba249be158cf2df75b1143b71ef2f,"[split] finagle-core: Synchronized access to the Stackable mutable.params map

Problem

If some code shares the same Stack and concurrently call make()
on it, those concurrent `make` calls will update a mutable.Map
`_params` in the `Stackable` trait, leading to potential deadlocks
or worse.

Solution

Synchronize all access to the params Map.

Result

Correct code under concurrent access.

RB_ID=467477"
sprsquish,2014-09-25 22:32:05,https://api.github.com/repos/twitter/finagle/git/commits/e1ac92cfe4400d7febd6ba5f2ad1b8f6b8763732,e1ac92cfe4400d7febd6ba5f2ad1b8f6b8763732,"[split] Fix tracing with stack server/clients

Problem

How and where Finagle initializes a its Tracing infrastructure is
unlcear and difficult to reason about. Each Codec is charged with
decoding trace info, pushing the Tracer, tracing send/recv events, and
service name annotations. This caused issues where traces were recorded
before a tracer was pushed to the stack or before the proper TraceId was
decoded out of the protocol, thus creating broken traces.

Solution

Charge the codecs with simply initializing the trace id by decoding it
from the protocol. Let finagle handle tracing service name and send/recv
events.

Result

Traces work the right way by default

RB_ID=431323
TBR=true"
dschobel,2014-09-25 17:07:08,https://api.github.com/repos/twitter/finagle/git/commits/1221b3c600e668ca80a15b98793334cfc38820a0,1221b3c600e668ca80a15b98793334cfc38820a0,"[split]  finagle-memcachedx: fix finagle:: compilation

 Problem

 Object name collision and relative java.lang imports breaks
 finagle:: compilation.

 Solution

 1) Change finagle-memcachedx to export a distinct module name.
 2) Absolute java.lang imports.

 Result

 Compiling finagle:: succeeds once again.

RB_ID=465857"
stevegury,2014-09-24 23:48:30,https://api.github.com/repos/twitter/finagle/git/commits/d733c14fc92a19f56cbdfdf3b5ce75495024856a,d733c14fc92a19f56cbdfdf3b5ce75495024856a,"[split] util, ostrich, finagle, twitter-server: Remove all trailing spaces

Problem

Trailing spaces are not recommended in our code style.
It generates noise during code reviews, because most people configured their
editor to automatically remove them.

Solution

Bulk remove of the spaces with sed, below the command line used:
for dir in util ostrich finagle twitter-server; do
  find $dir -type f -name '*.scala' -or -name '*.java' -exec sed -i """" ""s/[[:space:]]*$//"" {} \+
done

Result

All next code reviews will be exempt of noise.

RB_ID=463585
TBR=true"
stevegury,2014-09-24 17:27:48,https://api.github.com/repos/twitter/finagle/git/commits/26e00deee52b1f9d92b79780a1277dae64673638,26e00deee52b1f9d92b79780a1277dae64673638,"[split] finagle-core: Fix breaking ABI change in SummarizingStatsReceiver + bug in computing array index

Problem

A breaking ABI change has been introduced in SummarizingStatsReceiver.
Also, there was a bug in the way we compute the index of the array for extracting the percentile.

Solution

Add the previous method which point to the new one.
Fix the bug, by using math.floor instead of math.ceil

RB_ID=459253"
luciferous,2014-09-24 18:46:36,https://api.github.com/repos/twitter/finagle/git/commits/9cf6c80d8cd33c3edce7aefbcd8f6f27c0ff87c1,9cf6c80d8cd33c3edce7aefbcd8f6f27c0ff87c1,"[split] Fix compile finagle::

Problem

Name collision between finagle-http and finagle-httpx.

Solution

Change finagle-httpx to export com.twitter.finagle.Httpx.

Result

No collision; compile finagle:: succeeds.

RB_ID=464267"
bmdhacks,2014-09-24 15:32:28,https://api.github.com/repos/twitter/finagle/git/commits/0406d840f2898044cc4e2f8ad2bed4e4ad1d087a,0406d840f2898044cc4e2f8ad2bed4e4ad1d087a,"[split] Fix a deadlock in Contexts

Problem

Some services were experiencing deadlocks caused by object reference
initialization loops.

Solution

Break one of the methods out into a separate object to break the
cycle.

RB_ID=464299"
dschobel,2014-09-24 14:10:37,https://api.github.com/repos/twitter/finagle/git/commits/600db29c4a61d2e140cd866ff7da30f1b77e891f,600db29c4a61d2e140cd866ff7da30f1b77e891f,"[split]  finagle-memcached: netty free public API

 Problem

 the finagle-memcached public API exposes netty3 types.

 Solution

 finagle-memcached-x: finagle-memcached with the netty3 types removed
 from the public api.

 Result

 a new package and module to let projects opt-in to the netty3-free
 API.

RB_ID=457825"
xinxiang-twitter,2014-09-23 22:41:14,https://api.github.com/repos/twitter/finagle/git/commits/81fb8e14ea92b4d2427c53eab1c0613e5f8c7689,81fb8e14ea92b4d2427c53eab1c0613e5f8c7689,"[split] fix the server decoding for gets

RB_ID=463573"
stevegury,2014-09-23 16:30:02,https://api.github.com/repos/twitter/finagle/git/commits/642d09d5b58e4155933d9c33a77279de233b971f,642d09d5b58e4155933d9c33a77279de233b971f,"[split] finagle-core: GlobalFlag isn't caching the property value (performance)

Problem

When no value is specified on the command line, `GlobalFlag.apply` is checking every
time a system property. Under the hood, the `System.getProperty` call is using a
synchronized Map, which leads to contention.
This code is called at multiple times in the ""hot"" code path and it's significantly
impacting the performance (~13%).

Solution

Cache the value read from the system properties.

RB_ID=457407"
luciferous,2014-09-22 22:59:16,https://api.github.com/repos/twitter/finagle/git/commits/7cb8549c9ee5248c4577d9bb0c1c36d9ae0018a4,7cb8549c9ee5248c4577d9bb0c1c36d9ae0018a4,"[split] Netty free Finagle-HTTP API

Problem

Netty types leak through Finagle-HTTP API.

Solution

Create a Netty free version of Finagle-HTTP called Finagle-HTTPx.

Result

Projects can opt-in to a Netty free Finagle-HTTP API.

RB_ID=442531
TBR=true"
kevinoliver,2014-09-22 17:33:59,https://api.github.com/repos/twitter/finagle/git/commits/7f7569a91cc4f523107f2beba85b1c42a219711c,7f7569a91cc4f523107f2beba85b1c42a219711c,"[split] finagle-kestrel: add messaging to GROUPS

Problem

ds-messaging are not automatically included in the finagle-kestrel reviewboards.

Solution

Add them to finagle/finagle-kestrel/GROUPS so that they are.

RB_ID=461313"
mosesn,2014-09-19 20:15:14,https://api.github.com/repos/twitter/finagle/git/commits/f2853ecfeef7e065047a2a888feae464736bf207,f2853ecfeef7e065047a2a888feae464736bf207,"[split] csl: remove 2.9.2 from sbt projects

RB_ID=460663"
trypag,2014-09-19 20:22:09,https://api.github.com/repos/twitter/finagle/git/commits/07e6158dd0c5453c820bb004a82b33154e79bb78,07e6158dd0c5453c820bb004a82b33154e79bb78,"[split] finagle-kestrel: Remove Specs from finagle-kestrel

Problem
We want to remove specs tests from finagle-kestrel before moving
to 2.11

Solution
Rewrite specs tests with ScalaTest

RB_ID=460799"
mosesn,2014-09-19 04:22:11,https://api.github.com/repos/twitter/finagle/git/commits/184c120db5e47277318aa7c69718295ae5063351,184c120db5e47277318aa7c69718295ae5063351,"[split] birdcage: Upgrading scalatest + scalacheck

RB_ID=450425"
mosesn,2014-09-18 05:16:34,https://api.github.com/repos/twitter/finagle/git/commits/e1bc225dc5da0d29089dc60d1903d777de02551a,e1bc225dc5da0d29089dc60d1903d777de02551a,"[split] csl: publish the world

RB_ID=450951
TBR=true"
roanta,2014-09-12 23:25:39,https://api.github.com/repos/twitter/finagle/git/commits/87acff748e716328f6dde6b4e253ec35b9cdb3c6,87acff748e716328f6dde6b4e253ec35b9cdb3c6,"[split] finagle-core: decay without load in ewma

Problem

The ewma load metric does not properly decay when a nodes does not
receive load. This is especially problematic for outliers because
we advertise our load as if we were to schedule an additional
request on the node.

Solution

This patch introduces proper decay over time. Additionally, this
simplifies the code a bit by detecting peaks as part of the ewma.

RB_ID=451645"
mariusae,2014-09-11 21:02:19,https://api.github.com/repos/twitter/finagle/git/commits/16296d542dd033b6dd6a0b058e8f5a6302fd56b7,16296d542dd033b6dd6a0b058e8f5a6302fd56b7,"[split] finagle: simplify Stack clients and servers. Unify around them.

We introduce StdStack{Client,Server} and apply them consistently
across clients and servers. This simplifies our current ""new style""
protocol implementations and makes them more flexible. Users can now
customize, parameterize, and otherwise alter the entirety of the
finagle stack through a few, carefully selected primitives. (Namely,
Stack, Stack.Params, and StdStack*.) Client and servers are now
first-class values that may be manipulated through the use of these
primitives.

This makes consistent use of Stack for our various clients and
servers. Old uses in package exp are removed.

RB_ID=451549"
roanta,2014-09-11 21:14:20,https://api.github.com/repos/twitter/finagle/git/commits/176d1d42638819d7794bbdae4079f7f51b7c0b09,176d1d42638819d7794bbdae4079f7f51b7c0b09,"[split] finagle-core: fix synchronization in LeasedFactory

RB_ID=442389"
mariusae,2014-09-11 17:13:37,https://api.github.com/repos/twitter/finagle/git/commits/946a755d126640bbadbfe4f3703c096c907d38cd,946a755d126640bbadbfe4f3703c096c907d38cd,"[split] Finagle: clear locals before entering server dispatch loop

Problem

Locals from the caller of Server.serve* (alternatively, ServerBuilder.build)
can set locals that are propagated to the server's dispatch loop. This
is not usually what we want. The server should start with a clean slate.

Solution

Introduce the ability to clear locals. Do so when entering dispatch loops.

RB_ID=450639"
evnm,2014-09-11 16:57:34,https://api.github.com/repos/twitter/finagle/git/commits/73a47d75db0f8f7d3305fb145ad36edd81cb437f,73a47d75db0f8f7d3305fb145ad36edd81cb437f,"[split] finagle-core: Add Scaladocs for ChannelBufferBuf and BufChannelBuffer

RB_ID=452019"
bmdhacks,2014-09-11 04:48:35,https://api.github.com/repos/twitter/finagle/git/commits/245d5c7c7f6062ae094ebeb68f6c9363bf16ed0d,245d5c7c7f6062ae094ebeb68f6c9363bf16ed0d,"[split] birdcage: TWOTEN --> SNAPSHOT

Problem

Not naming our poms TWOTEN confuses a lot of our automated built stuff such as maven-tools and the snapshot CI

Solution

Set the suffix back to SNAPSHOT, as well as bump the patchlevel version to every pom because SNAPSHOT < TWOTEN lexically in pants.

RB_ID=447205"
evnm,2014-09-10 21:19:33,https://api.github.com/repos/twitter/finagle/git/commits/6ef35948d2582e5b28dd79d24dc6b7bd1c0b6895,6ef35948d2582e5b28dd79d24dc6b7bd1c0b6895,"[split] finagle-thriftmux: Record protocol as a gauge rather than a counter

Problem

Finagle currently records ThriftMux protocol usage with counters. This
is hard to track cluster-wide because the counters appear on charts as
single blips on service startup.

Solution

We persist a single gauge per server and client which holds a value of
1.0. By using gauges instead of counters, cluster-wide ThriftMux usage
will be easily trackable in the same fashion as are connections. Since
the metric is recorded within a `Stackable.make` function, we can't
val up the gauge and instead must use `provideGauge`.

RB_ID=442059"
evnm,2014-09-10 22:45:39,https://api.github.com/repos/twitter/finagle/git/commits/4258d70f60c956e6c6f361f84d84ef1a6e2b38dc,4258d70f60c956e6c6f361f84d84ef1a6e2b38dc,"[split] finagle-mysql: Properly heed timezone when extracting TimestampValue

Problem

`TimestampValue`s are returned in UTC rather than the local timezone
for values of the `TIMESTAMP` MySQL type.

Solution

Change TimestampValue class to take write-time and read-time timezone
constructor arguments, and use these to extract timestamps from raw
values read from the database.

Result

TimestampValue companion object is now deprecated (it only extracts
timestamps in UTC). To extract a timestamp, create an instance of the
newly-introduced class `TimestampValue(TimeZone, TimeZone)`.

RB_ID=445325"
bpfoster,2014-09-10 05:32:09,https://api.github.com/repos/twitter/finagle/git/commits/61ebe5b93170bc318b61b8afc479b1e7e9c719b3,61ebe5b93170bc318b61b8afc479b1e7e9c719b3,"[split] Add support for non-URLClassloaders to LoadService (Fixes #304)

Problem

When the classloader is not a URLClassloader, it is not searched for
resources by ClassPath.  This causes discovery of services from
LoadService to render an incomplete list.

Solution

Merge the existing list of services found with ClassPath with a plain
old classloader.getResources().  Not the most pretty but it handles
cases where the classloader does not inherit from URLClassloader.

Result

Expected services are returned.

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=435579"
kevinoliver,2014-09-10 03:50:22,https://api.github.com/repos/twitter/finagle/git/commits/7da756834a1e24922d2e3c04d38a85ada89e37a7,7da756834a1e24922d2e3c04d38a85ada89e37a7,"[split] finagle-core: link to the FAQ in FailedFastException

Problem

It is not obvious to users what to do with a `FailedFastException`.

Solution

Add a link to the FAQ in the Exception's message.

RB_ID=448763"
stevegury,2014-09-09 05:16:08,https://api.github.com/repos/twitter/finagle/git/commits/3f0257dce30e5f4075beb1822f25bb2b8a6e8627,3f0257dce30e5f4075beb1822f25bb2b8a6e8627,"[split] finagle-http: Fix the memory leak in HttpClientDispatcher

Problem

req match {
  case r: Request if r.isChunked =>
    // TODO Interim solution for ensuring upstream interrupts trigger
    // discards. Failure handling ideally should happen at the very
    // ends, e.g. in ChannelTransport. See: CSL-978.
    trans.onClose ensure { r.reader.discard() } <- the closure here captures every r
    streamChunks(trans, r.reader)
  case _ => Future.Done
},

the `ensure` call on the trans.onClose promise is actually creating a leak because it
creates a strong ref to every request.

Solution

Remove this code and only discard when the write fail.

RB_ID=447163"
stevegury,2014-09-09 05:25:56,https://api.github.com/repos/twitter/finagle/git/commits/278c9b2c722a937217fb42c2d4f85ba051357840,278c9b2c722a937217fb42c2d4f85ba051357840,"[split] finagle-core: Deduplicate classes loaded via LoadService

Problem
We were constructing a Map[String, Seq[String]] which map interface names to a
sequence of their implementations.
This map was constructed every time.

Solution
Cache the construction of the map (one per classloader).

Note
In the case where a java class path contains multiple jars exporting the same
interface or when a META-INF/services/* file contains duplicated lines, those
lines are deduplicated.

RB_ID=448779"
mosesn,2014-09-08 13:33:42,https://api.github.com/repos/twitter/finagle/git/commits/30a6b2323354c7c8b9ab8675a57981b57aa9c7cc,30a6b2323354c7c8b9ab8675a57981b57aa9c7cc,"[split] Revert ""finagle-core: Rewrote ServiceLoader to avoid creating""

Problem

Many users are unable to start their services because finagle service loading includes duplicates

Solution

Revert issue until Steve's fix is in

RB_ID=448829
TBR=true"
bmdhacks,2014-09-06 15:32:32,https://api.github.com/repos/twitter/finagle/git/commits/e0f27d085d12bca6fedb307f16e15ea4620e4817,e0f27d085d12bca6fedb307f16e15ea4620e4817,"[split] bump util to 6.21.2-SNAPSHOT - and bump a bunch of other poms too

Pushing CSL libs back to SNAPSHOT so our release scripts work.  Then we will release :-)

RB_ID=448209
TBR=true"
stevegury,2014-09-05 23:37:55,https://api.github.com/repos/twitter/finagle/git/commits/d3de0ab4d66e80efbfc25d23f2dc988f489e915d,d3de0ab4d66e80efbfc25d23f2dc988f489e915d,"[split] finagle-core: Rewrote ServiceLoader to avoid creating

Problem

We were constructing a Map[String, Seq[String]] which map interface names to a
sequence of their implementations.
This map was constructed every time.

Solution

Remove the construction of the map, and directly search the classpath for the
implementations of one specific interface.

Result

No apparent changes, just simpler code.

RB_ID=440855"
kevinoliver,2014-09-05 17:20:05,https://api.github.com/repos/twitter/finagle/git/commits/566a03a5f30a679a7cf7ce8f142a468b1493d15a,566a03a5f30a679a7cf7ce8f142a468b1493d15a,"[split] finagle docs: Add a section to the FAQ regarding FailedFastExceptions

Fixed some sphinx warnings and a few other minor tweaks as well.

RB_ID=446217"
mariusae,2014-09-05 16:59:57,https://api.github.com/repos/twitter/finagle/git/commits/361bab0e27e448a3b8727273c701a71d98601ad7,361bab0e27e448a3b8727273c701a71d98601ad7,"[split] SingletonPool: a single-service pool with good semantics

Problem

The code for reusing pool was a bit difficult to disentangle; it
wrapped up the pool's state with a promise containing the current
service. Reasoning about the various edge cases was difficult.

Further, ReusingPool didn't define semantics for service close. The
idea behind this was that the underlying connection would close by
itself when a server goes away. However, this relies on the server
explicitly shutting down TCP connections (in the case of Mux), and it
seems like a good idea to have this case explicitly covered to better
account for resource usage.

Solution

We introduce SingletonPool which has roughly the same semantics as
ReusingPool, but with code that's much easier to reason about.
Further, we add proper closing semantics.

RB_ID=438275"
mosesn,2014-09-03 03:23:50,https://api.github.com/repos/twitter/finagle/git/commits/5f1251a3177d67c97bc9a5e7c69d44fc00c2ffc8,5f1251a3177d67c97bc9a5e7c69d44fc00c2ffc8,"[split] util-cache: Adds a Guava-backed asynchronous cache

Problem

It's often useful to have an in memory, in process cache of futures.
However, it's a tricky to get right.  This means that the twitter
codebase is littered with slightly incorrect ones.  Even if you fix
one of them, because they're all different, other implementations
won't get the update.

Solution

Combining guava caches and a few simple primitives for caches, we
can make an easily understandable and easily modifiable cache for
futures.

Result

There's a canonical future cache that can be pointed to when people
need it

RB_ID=400407"
travisbrown,2014-09-02 18:13:47,https://api.github.com/repos/twitter/finagle/git/commits/ce64fb1b5168d7012edf5360f0c7fb2637042f82,ce64fb1b5168d7012edf5360f0c7fb2637042f82,"[split] Use Sphinx substitutions to keep versions up to date in documentation

Problem

Version numbers in documentation quickly get out of date without careful
maintenance.

Solution

We can use Sphinx's substitution mechanism to update versions automatically.
We get the correct version for free when building the Sphinx site through the
sbt-site plugin, but we need to read the version out of the SBT build file by
hand for DocBird (this is somewhat fragile, since it relies on conventions in
our build files).

Result

Version numbers in documentation are updated automatically.

RB_ID=442183"
sprsquish,2014-09-02 16:50:05,https://api.github.com/repos/twitter/finagle/git/commits/c71b40b507d2a8aa9177741c3f9552a3c70cb9c9,c71b40b507d2a8aa9177741c3f9552a3c70cb9c9,"[split] Reduce allocations in finagle-zipkin when tracing

Problem

RawZipkinTracer updated immutable structures by copying them. Also, when
spans were logged a new TMemoryBuffer and TBinaryProtocol were
instantiated for every span.

Solution

Create a mutable Span that's updated. Update operations were already
synchronized thus it's safe to mutate. Create a pool of TProtocols
using a reusable TTransport and efficient TBinaryProtocol.

Result

~31% reduction in object allocations
~62% reduction in memory allocations
~17% reduction in runtime

Benchmark                K Instances   MiB       us runtime
===========================================================
Before ZipkinTracerOn    6840          346.447   249294
After ZipkinTracerOn     4660          128.551   205357

RB_ID=436035"
bmdhacks,2014-09-02 13:29:23,https://api.github.com/repos/twitter/finagle/git/commits/99f47dcba5f4a50075d4f9b411e7f03a17a9b6a7,99f47dcba5f4a50075d4f9b411e7f03a17a9b6a7,"[split] Birdcage: Upgrade to scala_2.10

RB_ID=443649
TBR=true
NO-QUEUE=true"
evnm,2014-08-29 21:29:00,https://api.github.com/repos/twitter/finagle/git/commits/48df257e6e282bb83f6a96f1d89af8bb06d822de,48df257e6e282bb83f6a96f1d89af8bb06d822de,"[split] Add deps on Guava 16.0.1 to twitter-server and finagle-http poms

Problem

com.twitter.finagle.http.codec.HttpDtab uses
com.google.common.io.BaseEncoding, which is in Guava 14+. Since
finagle-http does not depend directly on Guava, it gets v13.x from
Jackson, which lacks the BaseEncoding class. This results in
NoClassDefFoundErrors being thrown and e.g. TwitterServers failing
silently at runtime.

Solution

Add explicit dependencies on Guava 16.0.1 in finagle-http and
twitter-server.

RB_ID=440309"
travisbrown,2014-08-29 19:42:07,https://api.github.com/repos/twitter/finagle/git/commits/43beb02c1fa845370cb873f322dbcf0da0b1a7a2,43beb02c1fa845370cb873f322dbcf0da0b1a7a2,"[split] Add Chartboost to Finagle adopter list

RB_ID=442483"
roanta,2014-08-28 17:21:37,https://api.github.com/repos/twitter/finagle/git/commits/49819661bc8ece1987fea9ac3468f2a934394116,49819661bc8ece1987fea9ac3468f2a934394116,"[split] finagle-core: Log state for ewma load metric

RB_ID=438069"
tnarg,2014-08-27 22:28:02,https://api.github.com/repos/twitter/finagle/git/commits/5ea95553720df11eaef66ffd926100c6589d7cd4,5ea95553720df11eaef66ffd926100c6589d7cd4,"[split] finagle-core: Register StackClient with Path dest in ClientRegistry as evaluated against Dtab.base Problem

When a StackClient is parameterized with a Path destination, we register it over and over depending on local dtab overrides. This means the StackClient isn't added to the ClientRegistry until the client is used.

Solution

When a StackClient is parameterized with a Path destination, register it once with the Path evaluated and bound against the base dtab.

Result

While imperfect, ClientRegistery.expAllRegisteredClientsResolved() now works with StackClients parameterized with Path destinations, at least in the context of the base dtab.

RB_ID=440257"
stuhood,2014-08-27 06:26:58,https://api.github.com/repos/twitter/finagle/git/commits/868a9be8cfdf3c84b08c130cb8619fceadcd2db0,868a9be8cfdf3c84b08c130cb8619fceadcd2db0,"[split] Upgrade to pants 1.0.4

Release notes:
https://groups.google.com/a/twitter.com/d/topic/pants-users/B3cNjHtdjes/discussion

- Migrates EnsureTests and TemplatizedMarkdown tasks into pants_internal
- Enables checkstyle globally, and bootstraps the suppressions file

RB_ID=437319"
mosesn,2014-08-26 04:15:29,https://api.github.com/repos/twitter/finagle/git/commits/94615a2a72e9656087c50dc0bfe391112957e298,94615a2a72e9656087c50dc0bfe391112957e298,"[split] finagle-core: DelayedFactory to detachable implementation

Problem

We have a hack in DelayedFactory to roll its own detachable implementation, but now that we have the detachable Promise semantic, we don't need it anymore.

Solution

Reverts back to the simpler (but previously incorrect) implementation of DelayedFactory.

Result

Simplifies DelayedFactory, making it easier to reason about

RB_ID=332025"
mosesn,2014-08-26 02:34:01,https://api.github.com/repos/twitter/finagle/git/commits/1cbc1722c82aba66a5004347116bac466d99df82,1cbc1722c82aba66a5004347116bac466d99df82,"[split] util-core: Improve java friendliness of futures

Problem

Future is not terribly java friendly, and grepping through some
java code, I saw a bunch of Future$.MODULE$ for join and flatten,
for which the scala compiler can't generate forwarders because they
collide with methods on their respective classes.

Solution

Make a Futures object which will be easier to call from java

Result

Java programmers will be freed from the tyranny of Future$.MODULE$

RB_ID=437791"
mariusae,2014-08-25 16:44:46,https://api.github.com/repos/twitter/finagle/git/commits/4cce09a4150bfb9bb9c02b55038ab99105d5db82,4cce09a4150bfb9bb9c02b55038ab99105d5db82,"[split] reusing pool: isAvailable === underlying.isAvailable

Service.isAvailable was overriden to check for service.isAvailable.
This is problematic because the load balancer will exclude traffic to
hosts where isAvailable==false; however, ReusingPool is happy to
reconnect when this is true. But with the current code (and load
balancer), this won't happen unless *all* connections are unavailable.

RB_ID=437701"
evnm,2014-08-22 22:13:50,https://api.github.com/repos/twitter/finagle/git/commits/5caa0bd826a5f47aec7a861efd9801ac639cdd41,5caa0bd826a5f47aec7a861efd9801ac639cdd41,"[split] Disambiguate MuxContext key name in finagle-thriftmux test

Problem

Running finagle-mux and finagle-thriftmux tests in the same test run
fails because the MuxContext classes in each package have the same key
strings. The contexts are conflated by LoadService, leading to causing
both of them to be used.

Solution

Scope the MuxContext keys differently.

RB_ID=435169"
mosesn,2014-08-22 20:56:12,https://api.github.com/repos/twitter/finagle/git/commits/022d3400646c40463a66816612ed99ecce31c434,022d3400646c40463a66816612ed99ecce31c434,"[split] bump util to 6.20.1-SNAPSHOT

RB_ID=436989
TBR=true
NO-QUEUE=true"
sprsquish,2014-08-22 15:58:43,https://api.github.com/repos/twitter/finagle/git/commits/ace0f757888017fbe26d1a8604a26f68504371dc,ace0f757888017fbe26d1a8604a26f68504371dc,"[split] Make testing and benching finagle-zipkin easier

Problem

Benchmarking the TracingFilter yielded inconsistent results. This turned
out to be due to ZipkinTracer memoizing sampled tracers according to
host:port. ZipkinTracer has a default val that creates an initial tracer
using the default values (localhost:1463). Now anything requesting a
tracer with that host:port pair would get the default tracer, thus
creating a new tracer with a different sample rate but the same
host:port will give you the original default Tracer with the default
sample rate. This caused benchmarking to be inconsistent due to the
default sample rate being 0.001f.

Solution

Make the default tracer lazy (no need to create it if it's not used).
Stop memoizing sampled tracers. RawTracers with their scribe clients are
already memoized.

Have the RawZipkinTracer take a Scribe.FutureIface rather than creating
its own. This way we can create a mock and pass it in.

Result

Mockito mocks are removed from the test suite. Benchmarks run with
consistent results, including memory benchmarks.

RB_ID=435557"
mosesn,2014-08-22 03:46:17,https://api.github.com/repos/twitter/finagle/git/commits/0704fd83512ae2f6bc44d317389f7b57ce9bccb8,0704fd83512ae2f6bc44d317389f7b57ce9bccb8,"[split] finagle-mux: Improved Garbage Collection Avoidance Docs

RB_ID=434695"
roanta,2014-08-21 16:27:43,https://api.github.com/repos/twitter/finagle/git/commits/daf4d3a802c3981ab488fad042d21f66076aaa96,daf4d3a802c3981ab488fad042d21f66076aaa96,"[split] finagle-core: fix synchronization in SummarizingStatsReceiver

RB_ID=434205"
bmdhacks,2014-08-21 02:43:00,https://api.github.com/repos/twitter/finagle/git/commits/bc133b8309e0fec2df8a280bfcbfd4d3e3d4d84c,bc133b8309e0fec2df8a280bfcbfd4d3e3d4d84c,"[split] Finagle - add pants provides clauses to enable publishing microjar deps

Problem

Pants needs each build target to provide it's own separate jar.

Solution

Add provides= clauses for all java and thrift subdirs in finagle (not just the scala dirs).

Result

Finagle-zipkin still doesn't publish due to pants having trouble publishing java_thrift_library jars, but we're closer.

RB_ID=427737"
tnarg,2014-08-20 18:14:03,https://api.github.com/repos/twitter/finagle/git/commits/6c72073870367d30729df5b2795276b4d36f3d04,6c72073870367d30729df5b2795276b4d36f3d04,"[split] finagle-serversets: memoize getChildrenWatchOp instead of globPrefixWatchOp Problem

Zk2Resolver winds up performing two getChildren+watch operations per path, one for members, another for vectors.

Solution

memoize a getChildrenWatchOp and then filter the results using the glob pat.

Result

Reduces the number of getChildren calls to zookeeper.

RB_ID=432329"
mosesn,2014-08-20 13:54:16,https://api.github.com/repos/twitter/finagle/git/commits/3397c3b739c08a406cfc6306d1f3e0edd55118a3,3397c3b739c08a406cfc6306d1f3e0edd55118a3,"[split] util: Enables cross-publishing for 2.11

Problem

Although the specs tests were removed, we weren't publishing against
2.11.  Notably, util-eval will be killed for 2.11, and it's nontrivial
to get sbt to aggregate a project for some crossScalaVersions, and
not for others.  Also, we were depending on a scalacheck feature
that was removed in newer versions of scalacheck.

Solution

Upgraded scalacheck version for 2.9.2 to one that had a replacement
method that was the same in the up to date scalacheck.  Moved
util-eval out from being aggregated, and changed its crossScalaVersion
to only ""2.9.2"", ""2.10.4"".  It turned out that the version of sbt
we were on had a bug where it didn't use incremental compilation
if you used cross building, so I upgraded us to 0.13.5 across the
board.  util-logging was ooming, so I increased the heap size.

Result

We can now publish against 2.11

RB_ID=425979"
bmdhacks,2014-08-20 13:57:39,https://api.github.com/repos/twitter/finagle/git/commits/076463b65ec387ef61e2790436e097756abe4000,076463b65ec387ef61e2790436e097756abe4000,"[split] remove the use of com.twitter.common.args.Flags

Problem

com.twitter.common.args.Flags has been deleted from twitter commons and
has most of its usages removed from science.  However, birdcage still
uses it, specifically in finagle-example

Solution

Remove all references to it and replace usages with util-app's Flags
implementation.

RB_ID=431641
TBR=true"
roanta,2014-08-19 23:35:45,https://api.github.com/repos/twitter/finagle/git/commits/495205fb8cc27457f640d73d7fbe17b529ac4f0f,495205fb8cc27457f640d73d7fbe17b529ac4f0f,"[split] finagle-core: Introduce ewma load metric

Joint work with Marius Eriksen and Steve Gury.

Problem

The current load balancing strategy employed by finagle clients identifies the
least loaded host as the host with the fewest outstanding requests. This strategy
requires too many requests to realize that host is slow and unduly increases our
tail latencies.

Solution

Introduce an experimental strategy which measures load in request milliseconds.
That is, the load of a node is the exponential moving average of its rtt. The increased
per request resolution better takes into account the unpredictable cost of a request.
To further increase the detection time of slow nodes, we consider the current outstanding
milliseconds when they exceed our ewma.

Results

Simulating a cold start scenario consistently yields a great improvement
in our tail latencies:

least-requests
n=22301 min=164.0 med=174.0 p90=191.0 p99=377.0 p999=1671.0 p9999=1775.0 max=1849.0

ewma
n=22281 min=164.0 med=174.0 p90=186.0 p99=347.0 p999=852.0 p9999=1785.0 max=1819.0

RB_ID=427651"
mosesn,2014-08-19 21:11:37,https://api.github.com/repos/twitter/finagle/git/commits/adbf1fb6a59c9e8889d7f511a72554f96d16a620,adbf1fb6a59c9e8889d7f511a72554f96d16a620,"[split] finagle-mux: Enable gc avoidance for parallel gc

RB_ID=393925"
mariusae,2014-08-19 21:26:57,https://api.github.com/repos/twitter/finagle/git/commits/2c88625904aa69e3ddeae039c16fd47a10786019,2c88625904aa69e3ddeae039c16fd47a10786019,"[split] finagle-doc: A better picture for filters. (Replaces hand-drawn monstrosity.)

RB_ID=433547
NO-QUEUE=true"
tnarg,2014-08-19 17:49:01,https://api.github.com/repos/twitter/finagle/git/commits/69c0fffdabda9e36597f0ecd4ca2872fadc076a1,69c0fffdabda9e36597f0ecd4ca2872fadc076a1,"[split] finagle-core: adds ClientRegistry.expAllRegisteredClientsResolved Problem

Applications currently have no way simple way of knowing when all finagle client dests have been have been resolved (at least once). Applications wind up trying to ""warm up"" by issuing requests to clients until they succeed.

Solution

To increase the likelihood that an application is ready to issue requests on every finagle client, we add ClientRegistry.expAllRegisteredClientsResolved which returns a Future which is satisfied when the dest of every currently registered client is no longer pending.

Result

Applications can call ClientRegistery.expAllRegisteredClientsResolved before attempting to issue requests.

RB_ID=430349"
mosesn,2014-08-19 17:01:26,https://api.github.com/repos/twitter/finagle/git/commits/b7a4f9f7e65019f7bad98078bb405dca389e0f71,b7a4f9f7e65019f7bad98078bb405dca389e0f71,"[split] finagle-mux: Better gc avoidance flags for experimentation

RB_ID=393811"
mosesn,2014-08-19 04:45:03,https://api.github.com/repos/twitter/finagle/git/commits/a18fcae66bb5f368f4e42c7358e09943f4938526,a18fcae66bb5f368f4e42c7358e09943f4938526,"[split] finagle, util: add mnakamura as owner

RB_ID=428831"
kevinoliver,2014-08-18 21:18:11,https://api.github.com/repos/twitter/finagle/git/commits/22d8681263c2e8b664d417c5007b457f3ba429f3,22d8681263c2e8b664d417c5007b457f3ba429f3,"[split] finagle-core: fix LoadServiceTest failures

Problem

Two LoadServiceTest's fail locally.

Solution

Fix the usages of java.io.File APIs to make the code
pass reliably across environments.

Result

All of LoadServiceTest's pass locally.

RB_ID=431845"
kevinoliver,2014-08-18 18:17:24,https://api.github.com/repos/twitter/finagle/git/commits/7941dccf233397430130a9842c3f25f785b69c9b,7941dccf233397430130a9842c3f25f785b69c9b,"[split] finagle-mux: docs and minor cleansing in Message subclasses

Problem

Small potholes lead to restless citizens.

Solution

* package.scala: add missing `tag` fields
* Message: add doc comments
* Message: prefer defs over vals to save allocations
* ClientDispatcher: use Future.unit in `ping()`

Result

Happy and content citizens reelect the current administration.

RB_ID=430599"
travisbrown,2014-08-14 13:47:00,https://api.github.com/repos/twitter/finagle/git/commits/353d4e2e56a6cbce9cfa5537c3d639b3c20edf86,353d4e2e56a6cbce9cfa5537c3d639b3c20edf86,"[split] Use HTTPS links when possible in Finagle adopter list and docs

RB_ID=429003"
evnm,2014-08-12 22:41:20,https://api.github.com/repos/twitter/finagle/git/commits/99d9ee89baec468b00500c3cb3f982315dc32f83,99d9ee89baec468b00500c3cb3f982315dc32f83,"[split] Add Scaladocs for all public exception classes in Finagle.

RB_ID=427791"
mariusae,2014-08-11 23:21:17,https://api.github.com/repos/twitter/finagle/git/commits/3cc658a2e7e16769997b9a30b104c9094af892a3,3cc658a2e7e16769997b9a30b104c9094af892a3,"[split] finagle-thrift: fix up package name vis-??-vis file name

RB_ID=426951"
luciali0,2014-08-10 00:53:33,https://api.github.com/repos/twitter/finagle/git/commits/8b17df78bb6b0d7e553b413577f3db794d5fe1f5,8b17df78bb6b0d7e553b413577f3db794d5fe1f5,"[split] Bump up set & get(com.twitter.finagle.kestrel.integration.InterpreterServiceSpec) timeout to 5 sec due to Birdcage failure

RB_ID=425961"
nshkrob,2014-08-08 18:37:40,https://api.github.com/repos/twitter/finagle/git/commits/fd7a41da88dcf49a5214f81951110a1fbeebc447,fd7a41da88dcf49a5214f81951110a1fbeebc447,"[split] finagle: Fix thrift-linter errors in thrift files.

RB_ID=424601"
mosesn,2014-08-08 17:13:36,https://api.github.com/repos/twitter/finagle/git/commits/42b2a8e1cf98c7a2cdc8200be39b0a25ed070d8c,42b2a8e1cf98c7a2cdc8200be39b0a25ed070d8c,"[split] csl: updates changelogs to be current

RB_ID=422811
TBR=true"
kevinoliver,2014-08-08 00:11:19,https://api.github.com/repos/twitter/finagle/git/commits/c801adfb94f63f0ca2af1eb304105d8fba8d3e23,c801adfb94f63f0ca2af1eb304105d8fba8d3e23,"[split] finagle-mux: move Mux.scala into the correct folder

RB_ID=424221"
kevinoliver,2014-08-07 23:36:52,https://api.github.com/repos/twitter/finagle/git/commits/d9db05765d487320fe9c9148e752cd8038e1ff8a,d9db05765d487320fe9c9148e752cd8038e1ff8a,"[split] finagle-mux,thriftmux: explain why the files are named Netty3

RB_ID=424081"
evnm,2014-08-07 20:19:41,https://api.github.com/repos/twitter/finagle/git/commits/8d1f62cc55cf5585619b05dc7e92a61b908c7e03,8d1f62cc55cf5585619b05dc7e92a61b908c7e03,"[split] finagle-swift: Add missing BUILD dep in test/scala

RB_ID=424337
TBR=true"
soboko,2014-08-06 19:46:23,https://api.github.com/repos/twitter/finagle/git/commits/25cb9a23bbabd2d937141c7126b6bf8b28631b58,25cb9a23bbabd2d937141c7126b6bf8b28631b58,"[split] Update ADOPTERS.md

Adding our company, Reputation.com

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=422873"
kevinoliver,2014-08-06 16:32:42,https://api.github.com/repos/twitter/finagle/git/commits/8e3b0c0e63f3147a8a227f064c51d2901fa13d9f,8e3b0c0e63f3147a8a227f064c51d2901fa13d9f,"[split] finagle: improve mux's handling of client disconnects

Problem

finagle-thriftmux has 2 exceptions that are leaking into the logs.

Solution

* In `SourceTrackingMonitor.handle`, change IOExceptions to be logged
  at Level.FINE, much like `ChannelStatsHandler.exceptionCaught`.
  This addresses one of the log messages (the one that happens to be
  at FATAL level).

* Add a new field to `Failure`, logLevel which allows callers to
  control the granularity of logging.

* In `c.t.f.thriftmux.Netty3` replace a thriftmux specific exception
  `UnexpectedRequestException` with a `Failure` that has its logLevel
  set to `Level.DEBUG`.

* In mux's `ServerDispatcher`, fix a memory leak in `receive`s
  handling of `Treq` and `Tdispatch` when the futures are `Throw`s.
  The entry was not being removed from the pending map.

Result

Less errant log messages in services deploying mux and avoid a
memory leak.

RB_ID=421547"
mosesn,2014-08-06 05:30:03,https://api.github.com/repos/twitter/finagle/git/commits/84862105b5cb7b6a6cf647b70bf1bf957022a149,84862105b5cb7b6a6cf647b70bf1bf957022a149,"[split] csl: Fix up sbt for publishing

RB_ID=422613
TBR=true"
mosesn,2014-08-06 00:54:29,https://api.github.com/repos/twitter/finagle/git/commits/59d6f85760cb914cc546b0c9788b0cd479dc9c8a,59d6f85760cb914cc546b0c9788b0cd479dc9c8a,"[split] bump all the things

RB_ID=422405
TBR=true"
mosesn,2014-08-05 16:59:24,https://api.github.com/repos/twitter/finagle/git/commits/ff3cf1d5cb43b31eca2f6b5a73b090f2272d1a92,ff3cf1d5cb43b31eca2f6b5a73b090f2272d1a92,"[split] finagle-core: Forces finagle-core to use ipv4 network stack

Problem

Running tests with maven locally, we use ipv6 by default, but with
pants, we use ipv4.  This means that there are tests which work in
pants, but fail in maven.

Solution

Unification is the first step.  Right now, we're moving maven over
to ipv4, since it's the path of least resistance.  Later, it would
be nice to be unified on ipv6, but that seems like it will take a
while.

Result

finagle-core tests run with ipv4, and pass under both maven and
pants.

RB_ID=420433"
mosesn,2014-08-05 16:56:08,https://api.github.com/repos/twitter/finagle/git/commits/8df9d9550b31a53e8baae07ef3eba97d831d6e4b,8df9d9550b31a53e8baae07ef3eba97d831d6e4b,"[split] finagle-core: Fix CumulativeGauge memory leak

Problem

StatsReceiverWithCumulativeGauges had a memory leak where values
couldn't be collected because they held a reference to keys.

Solution

Explicitly remove the key from the HashMap when the gauge is no
longer referenced.

RB_ID=414261"
kevinoliver,2014-08-05 16:18:52,https://api.github.com/repos/twitter/finagle/git/commits/889be692920a47e77b2a41f9c1217a113f363fb0,889be692920a47e77b2a41f9c1217a113f363fb0,"[split] util, finagle: smattering of minor cleanups in util and finagle

RB_ID=421029"
rlazoti,2014-08-04 18:24:17,https://api.github.com/repos/twitter/finagle/git/commits/15ca639ab2311ab53bb1341b2bcf13394e45dbc5,15ca639ab2311ab53bb1341b2bcf13394e45dbc5,"[split] Problem

In order to migrate to Scala 2.11, we need to get rid of our old version
of Specs.

Solution

Convert all finagle-memcached tests to scalatest

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=419449"
evnm,2014-08-04 17:20:37,https://api.github.com/repos/twitter/finagle/git/commits/21c8b57e9130ff5d6270b123fe7b62be7ad61c2d,21c8b57e9130ff5d6270b123fe7b62be7ad61c2d,"[split] Add fintop to companion projects list on Finagle website

RB_ID=418485"
trustin,2014-08-01 20:26:51,https://api.github.com/repos/twitter/finagle/git/commits/87477dc985859cd271faa610c94cd627995cbd1f,87477dc985859cd271faa610c94cd627995cbd1f,"[split] Upgrade to Netty 3.9.1.1.Final

Problem:

3.9.1.Final is known to have a bug where it does not notify the change
of interestOps in a certain case.  A new hot fix release 3.9.1.1.Final
has been released to address the problem.

Solution:

Upgrade to Netty 3.9.1.1.Final wherever possible.

Result:

Fixes CSL-1022
Fixes the problem where Finagle stops reading while transferring a large
data stream (JIRA issue ID, anyone?)

RB_ID=417505
TBR=true"
luciferous,2014-07-31 21:56:45,https://api.github.com/repos/twitter/finagle/git/commits/0670a866fe87d9008168ab7e473cc72c305343d5,0670a866fe87d9008168ab7e473cc72c305343d5,"[split] Reader and getContent symmetry

Problem

An HTTP message where `isChunked=true` has its content accessible via
`reader`, otherwise it is accessible via `getContent`. Calling
`reader.read` on an HTTP message where `isChunked=false` will suspend
the computation indefinitely.

Solution

In the dispatcher, construct a `reader` sourced by whatever `getContent`
refers to, consumers then retrieve content via `reader` or `getContent`.

Result

Reader and getContent symmetry.

RB_ID=417479"
mosesn,2014-07-31 17:17:18,https://api.github.com/repos/twitter/finagle/git/commits/2e573c7421300b685fe38cd280fe7e825d82a4b9,2e573c7421300b685fe38cd280fe7e825d82a4b9,"[split] finagle-core: Fixed ChannelStatsHandler to properly filter exceptions

RB_ID=417065"
luciferous,2014-07-30 20:30:46,https://api.github.com/repos/twitter/finagle/git/commits/a142c20117e2af79c18f8b8738b1255f3d19b44b,a142c20117e2af79c18f8b8738b1255f3d19b44b,"[split] Bump Jackson artifacts to 2.3.1

RB_ID=410989
TBR=true"
mosesn,2014-07-28 19:24:13,https://api.github.com/repos/twitter/finagle/git/commits/688ee12c3f179793a2c8a21c47f79a16529746eb,688ee12c3f179793a2c8a21c47f79a16529746eb,"[split] finagle-swift: Fixes pants build warning

RB_ID=414305"
jixu,2014-07-26 19:05:49,https://api.github.com/repos/twitter/finagle/git/commits/1c06105a446994f314773de3713c8d98ebcab482,1c06105a446994f314773de3713c8d98ebcab482,"[split] finagle-core: make timer-based DNS resolution as default of InetResolver

Problem
InetResolver resolves host only once when the bind is invoked.
This makes Finagle cache the address for a host forever.
We want to change the default behavior to resolve DNS after each ttl timeouts.

Solution
get ttl from ""java.security.networkaddress.cache.ttl"". If it is not set, turn off cache refresh.
create an async Var and schedule a timer task to resolve DNS.

Result
After the change, the default behavior of InetResolver is changed to resolve DNS after each ttl timeouts.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=408657"
stevegury,2014-07-25 23:35:42,https://api.github.com/repos/twitter/finagle/git/commits/5b2738be08d0bd1f699ac2e80ca121cc2231b2e7,5b2738be08d0bd1f699ac2e80ca121cc2231b2e7,"[split] finagle: Disable Netty's thread name renaming

Problem

Netty is rewriting the name of the threads in the thread-pool with ""New I/O worker #*"".
This makes things difficult for new Finagle users to identify those threads as Finagle ones.

Solution

Disable Netty's thread renaming.

RB_ID=412147"
stuhood,2014-07-25 23:01:37,https://api.github.com/repos/twitter/finagle/git/commits/4ea843232c167929a7427d4261bc0f6befbef18d,4ea843232c167929a7427d4261bc0f6befbef18d,"[split] Birdcage: Remove dead test targets

- Remove test targets that contain no tests
- Use 'dependencies' rather than 'junit_tests' for inner nodes in the graph that don`t actually own tests themselves
- Two targets were accidentally not running their tests:
-- explore-curator/src/test/scala
-- ibis/ibis-macaw/src/test/scala/com/twitter/ibis/macaw

RB_ID=413387
TBR=true"
stevegury,2014-07-24 22:20:33,https://api.github.com/repos/twitter/finagle/git/commits/d5bc9949f13b337493817cfd44e7c8ba9d83c5eb,d5bc9949f13b337493817cfd44e7c8ba9d83c5eb,"[split] finagle-http: Fix code style from an open-source contribution

RB_ID=412283"
luciferous,2014-07-24 17:57:38,https://api.github.com/repos/twitter/finagle/git/commits/a132116a2d33d5cdd9595a24fb69840ed50ff4a9,a132116a2d33d5cdd9595a24fb69840ed50ff4a9,"[split] bump ostrich to 9.5.5-SNAPSHOT

RB_ID=412609
TBR=true"
roanta,2014-07-24 04:18:30,https://api.github.com/repos/twitter/finagle/git/commits/1d65c55b9a3eb9efd2601f7fbda5844652feb7e7,1d65c55b9a3eb9efd2601f7fbda5844652feb7e7,"[split] bump util to 6.18.3-SNAPSHOT

RB_ID=412425
TBR=true"
mosesn,2014-07-23 21:16:05,https://api.github.com/repos/twitter/finagle/git/commits/3887f00c792d64fe4b3f32dac0d6062f1cc8c8ff,3887f00c792d64fe4b3f32dac0d6062f1cc8c8ff,"[split] finagle-core: Reduces log level for common exceptions

Problem

Users are seeing a number of exceptions bubble up in their logs, many of which are not actionable.

Result

Rather than letting the worry about it, this hides them in FINE level.

RB_ID=411567"
stantonk,2014-07-23 18:24:50,https://api.github.com/repos/twitter/finagle/git/commits/fa1d9bbe6c56d45c8e8e2d79b95f4d76e123bd65,fa1d9bbe6c56d45c8e8e2d79b95f4d76e123bd65,"[split] added SproutSocial to ADOPTERS.md

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=410437"
mosesn,2014-07-23 16:33:45,https://api.github.com/repos/twitter/finagle/git/commits/5c5f9d30649b6cbfc4ee311f2622733790192b63,5c5f9d30649b6cbfc4ee311f2622733790192b63,"[split] csl: upgraded sbt to 0.13 across the board

RB_ID=410647"
bdd,2014-07-22 21:42:05,https://api.github.com/repos/twitter/finagle/git/commits/9c58a089df31af10511f17f1562921ff137179e2,9c58a089df31af10511f17f1562921ff137179e2,"[split] corp.twitter.com is deprecated i.f.o. twitter.biz

Repo wide search and replace for nest hosts in scripts and examples.
Suffixes '.corp' and '.corp.twitter.com' are deprecated in favor of
twitter.biz.

RB_ID=409243
TBR=true"
mosesn,2014-07-22 03:24:03,https://api.github.com/repos/twitter/finagle/git/commits/91f90d8969376dbb4f113ea2ee53950ee72f5723,91f90d8969376dbb4f113ea2ee53950ee72f5723,"[split] finagle-mux: Draining was totally broken

The PredicateAlarm was being marked finished in the opposite way.

RB_ID=409161"
xsl,2014-07-22 00:22:51,https://api.github.com/repos/twitter/finagle/git/commits/21ba8253b4931f2f03620b8786d54583bd24224a,21ba8253b4931f2f03620b8786d54583bd24224a,"[split] passbird-6.0.2-SNAPSHOT

RB_ID=410111
TBR=true"
roanta,2014-07-21 02:35:55,https://api.github.com/repos/twitter/finagle/git/commits/2bd93ba17c0080e5a2546c3397b4c55aacff5163,2bd93ba17c0080e5a2546c3397b4c55aacff5163,"[split] finagle-core: Improve the toString for Failure

RB_ID=406761"
roanta,2014-07-21 00:06:47,https://api.github.com/repos/twitter/finagle/git/commits/592ca95041a5ad28eba0a2ce54045899b0c48410,592ca95041a5ad28eba0a2ce54045899b0c48410,"[split] finagle-core: DefaultClient in terms of StackClient

Problem

We have two implementations of our default client stack.

Solution

Converge on StackClient in DefaultClient.

RB_ID=378767"
mosesn,2014-07-18 23:33:15,https://api.github.com/repos/twitter/finagle/git/commits/c436f8910de9887399ae4772706936eb04c704f2,c436f8910de9887399ae4772706936eb04c704f2,"[split] finagle-mux: Added extra client logging to show it's working

RB_ID=406679"
mosesn,2014-07-18 18:08:46,https://api.github.com/repos/twitter/finagle/git/commits/fae703034a1a088d5e9e7ec445126a383a3d8a7d,fae703034a1a088d5e9e7ec445126a383a3d8a7d,"[split] finagle-mux: improves granularity of rate to bytes/millisecond

Problem

Looking at adserver gc logs, I saw in almost every case
""discountHandleBytes=0.bytes, discountHistoMs=236"".  This seemed
wrong, so I looked more deeply into it.  It turned out that the
issue was that it was turning discountHistoMs into seconds (0
seconds) and then multiplying by bytes per second (2.5GB/second),
which was 0.

Result

We don't discard data for histos where the quantile is < 1000ms.

RB_ID=405839"
bmdhacks,2014-07-17 19:33:09,https://api.github.com/repos/twitter/finagle/git/commits/b18e006caa182ffb3809bcf7d143dd580b4f4ec5,b18e006caa182ffb3809bcf7d143dd580b4f4ec5,"[split] Birdcage: remove all maven warnings

RB_ID=407435
TBR=true"
evnm,2014-07-16 20:33:41,https://api.github.com/repos/twitter/finagle/git/commits/9e7677e4a5b35e3db5f782750ea7cc8d7b1adbf8,9e7677e4a5b35e3db5f782750ea7cc8d7b1adbf8,"[split] finagle-core: Log exceptions caught by ChannelStatsHandler

Problem

ChannelStatsHandler does not log exceptions caught by the Netty
pipeline. In such cases, stats are recorded for the exception name,
but no context is provided in logs to aid debugging.

Solution

Log to WARNING in `ChannelStatsHandler.exceptionCaught`.

RB_ID=392671"
kevinoliver,2014-07-10 00:05:48,https://api.github.com/repos/twitter/finagle/git/commits/002bfb7a3c56c81aef0d8de69d886536ea31c7a9,002bfb7a3c56c81aef0d8de69d886536ea31c7a9,"[split] [finagle-core] WatermarkPool: singleton exception and add a counter

RB_ID=401399"
kevinoliver,2014-07-09 21:26:28,https://api.github.com/repos/twitter/finagle/git/commits/d6cccd41e9280693a4c7a74700a49251ce17e51f,d6cccd41e9280693a4c7a74700a49251ce17e51f,"[split] [finagle-memcached] docs on ignored expiry and flags in MockClient

RB_ID=401305"
evnm,2014-07-09 19:00:34,https://api.github.com/repos/twitter/finagle/git/commits/5d04d7d02b013a7bee90e8f3a9c84fb1339bc8fd,5d04d7d02b013a7bee90e8f3a9c84fb1339bc8fd,"[split] Rm former employees from OWNERS files of core libraries

RB_ID=401377
TBR=true"
tnarg,2014-07-09 17:15:30,https://api.github.com/repos/twitter/finagle/git/commits/a879071166407bd9a80ac529b3116e1316c4c2f0,a879071166407bd9a80ac529b3116e1316c4c2f0,"[split] finagle-serversets: merge WeightedSocketAddresses with same host:port but different weight in Stabilizer

Problem

When changing the weight of a WeightedSocketAddress, Stabilizer will include both the old WeightedSocketAddress and the updated WeightedSocketAddress for one epoch. This results in an unintended increase in traffic to the host:port.

Solution

Merge WeightedSocketAddresses with the same underlying SocketAddress preferring the newer weight to the previous weight.

Result

Stabilizer provides a single WeightedSocketAddress per unique underlying SocketAddress.

RB_ID=399271"
roanta,2014-07-08 23:19:17,https://api.github.com/repos/twitter/finagle/git/commits/682b66c4a999e4d5b263ed4de31ed58e27e9d6de,682b66c4a999e4d5b263ed4de31ed58e27e9d6de,"[split] bump finagle to 6.19.1-SNAPSHOT

RB_ID=401701
TBR=true"
evnm,2014-07-08 21:22:20,https://api.github.com/repos/twitter/finagle/git/commits/0da61430e008293d9f59153c9c08befcbf6857b4,0da61430e008293d9f59153c9c08befcbf6857b4,"[split] Finagle: Document {Client,Server}Builder default values

RB_ID=401053
TBR=true"
roanta,2014-07-08 20:55:57,https://api.github.com/repos/twitter/finagle/git/commits/53a7cc801206c1d0f5e8c73bbb555336d01db297,53a7cc801206c1d0f5e8c73bbb555336d01db297,"[split] bump ostrich to 9.5.4-SNAPSHOT

RB_ID=401393
TBR=true"
roanta,2014-07-08 17:09:35,https://api.github.com/repos/twitter/finagle/git/commits/b9de3fc56657aac91c79021239c25eac76132bc9,b9de3fc56657aac91c79021239c25eac76132bc9,"[split] bump util to 6.18.2-SNAPSHOT

RB_ID=401255
TBR=true"
evnm,2014-07-08 17:23:53,https://api.github.com/repos/twitter/finagle/git/commits/29421c2d983d5a5adf81c7237a6f1c7f573d3a85,29421c2d983d5a5adf81c7237a6f1c7f573d3a85,"[split] finagle-thriftmux: Don't reuse InMemoryStatsReceiver in the same test

RB_ID=381639"
x1a0,2014-07-07 21:13:45,https://api.github.com/repos/twitter/finagle/git/commits/a6eb5a3b7d95272cab03fe8a09943d1cb051592f,a6eb5a3b7d95272cab03fe8a09943d1cb051592f,"[split] Fix broken link in document

Problem

In document ""Extending Finagle"" the link to Netty3Transporter.scala file
is broken.

Solution

fork => branch => awesome fix => skip test...

Result

f: Future[Document] map { doc =>
  assert(doc.isAwesome)
}

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=400185
TBR=true"
mariusae,2014-07-07 09:17:39,https://api.github.com/repos/twitter/finagle/git/commits/ae8bcdb6088d64914528dbb3fb875381c8be7e7c,ae8bcdb6088d64914528dbb3fb875381c8be7e7c,"[split] Buf, Reader: remove Buf.Eof; end-of-stream is None

Problem

The reader interface is complicated substantially by using 'Buf.Eof'
as a sentinel value. It is a value that's confusing and brittle to
compare against (e.g. object equality must be used), and is just
unintuitive.

Solution

Signal EOF using an Option, where None = EOF. This is straightforward
to inspect. This also means we have to make Reader.writable() Closable
in order to signal EOF.

RB_ID=394095"
gcampbell,2014-07-05 17:00:57,https://api.github.com/repos/twitter/finagle/git/commits/44b8e30b63fa7278a7b6653c71b278f1bc711a6c,44b8e30b63fa7278a7b6653c71b278f1bc711a6c,"[split] Prepend comment to JSONP callbacks

Per CVE-2014-4671.

RB_ID=400277
TBR=true"
mariusae,2014-07-02 18:21:21,https://api.github.com/repos/twitter/finagle/git/commits/fbd9f61aafedf228eb35b20d58d08c5c44ada602,fbd9f61aafedf228eb35b20d58d08c5c44ada602,"[split] StackClient, StackClientLike: don't leak underlying In, Out types

These should really be private to the implementation; use abstract
type members instead. This change prevents leaking of these kinds
of implementation details to users of StackClient and StackClientLike.

RB_ID=396903"
roanta,2014-06-30 16:59:29,https://api.github.com/repos/twitter/finagle/git/commits/17fc7f3a87c25043fd510096271af906b80e3dce,17fc7f3a87c25043fd510096271af906b80e3dce,"[split] finagle-doc: clarify cancellation

RB_ID=393509"
roanta,2014-06-30 16:56:26,https://api.github.com/repos/twitter/finagle/git/commits/c9f5904c0380aeee446fc4fa54762e605781b1e8,c9f5904c0380aeee446fc4fa54762e605781b1e8,"[split] finagle-thriftmux: add withProtocolFactory API endpoint

RB_ID=391863"
roanta,2014-06-30 17:06:39,https://api.github.com/repos/twitter/finagle/git/commits/ae1bd6a10e8f849b5c4358d6e664cea2c5978084,ae1bd6a10e8f849b5c4358d6e664cea2c5978084,"[split] finagle-mysql: Ensure mysql specific tracing is composed.

Problem

The copy constructor for StackClient doesn't forward calls
to newClient. This caused problems because the tracing filter
was composed by overloading newClient.

Solution

Compose the filter using Stack APIs.

RB_ID=391373"
evnm,2014-06-29 17:31:07,https://api.github.com/repos/twitter/finagle/git/commits/ff2d319ba20837e4e1f37b3b1716569a4e226d2b,ff2d319ba20837e4e1f37b3b1716569a4e226d2b,"[split] finagle-core: Rescue exceptions thrown by filter in `Filter.andthen(Filter)`

Problem

Synchronously-thrown exceptions are not rescued in
`Filter.andThen(Filter)`, contrary to the Scaladoc.

Solution

Wrap the Service created inline in `Filter.andThen(Filter)` with
`Service.rescue`. Also add a FilterTest class.

RB_ID=393177"
zakattacktwitter,2014-06-26 19:27:52,https://api.github.com/repos/twitter/finagle/git/commits/56baa5c447db050f1b0ca9062570e7f6bc1f49bb,56baa5c447db050f1b0ca9062570e7f6bc1f49bb,"[split] Finagle MySQL PreparedStatement accepts Value types as params.

 Problem

 Finagle MySql users are required to manually unwrap T <: Value types
 in order to pass them into subsequent PreparedStatements. Arguably,
 the PreparedStatement trait should not be based on Any but T <: Value.

 Solution

 Add support to Request to properly handle parameters of all the Value
 types. This is very similar to how RawTypes are handled.

 Result

 After this change Finagle MySql users will be able to pass Value types
 into PreparedStatements, removing the need to manually unwrap them.

RB_ID=394231"
evnm,2014-06-23 23:50:20,https://api.github.com/repos/twitter/finagle/git/commits/e89625abe5efd4579678e1dab2cf2004309aa506,e89625abe5efd4579678e1dab2cf2004309aa506,"[split] bump scrooge to 3.16.2-SNAPSHOT

RB_ID=391597
TBR=true
NO-QUEUE=true"
evnm,2014-06-23 23:18:53,https://api.github.com/repos/twitter/finagle/git/commits/790596c6055f8b67280eb11c9e8fb906be162614,790596c6055f8b67280eb11c9e8fb906be162614,"[split] bump finagle to 6.18.1-SNAPSHOT

RB_ID=391531
TBR=true
NO-QUEUE=true"
evnm,2014-06-23 22:19:55,https://api.github.com/repos/twitter/finagle/git/commits/35e959fd5b1f1a1d7f066759c3a43e3535931d12,35e959fd5b1f1a1d7f066759c3a43e3535931d12,"[split] bump ostrich to 9.5.3-SNAPSHOT

RB_ID=391443
TBR=true
NO-QUEUE=true"
evnm,2014-06-23 22:09:53,https://api.github.com/repos/twitter/finagle/git/commits/2721ca19ce515b32a7b93e562195afb4d11d756f,2721ca19ce515b32a7b93e562195afb4d11d756f,"[split] bump util to 6.18.1-SNAPSHOT

RB_ID=391383
TBR=true
NO-QUEUE=true"
mosesn,2014-06-23 17:38:47,https://api.github.com/repos/twitter/finagle/git/commits/4500010ea2a7e41b4f5c7cf0f7d3e85e2b68d0e8,4500010ea2a7e41b4f5c7cf0f7d3e85e2b68d0e8,"[split] finagle-mux: Hooks up gc avoidance to servers

Enable optional GC avoidance in Mux

RB_ID=389775"
mariusae,2014-06-20 19:32:32,https://api.github.com/repos/twitter/finagle/git/commits/596a81a57aa9032eba4c02625ed3b8a8f7c02a8d,596a81a57aa9032eba4c02625ed3b8a8f7c02a8d,"[split] Wily: add Dtab expansion

For certain applications of Wily, we need to enumerate namespaces.
This is required for Clutch integration and is potentially also useful
for fixing namespaces to avoid lookups.

RB_ID=383849"
travisbrown,2014-06-20 11:17:20,https://api.github.com/repos/twitter/finagle/git/commits/3c3c7240f26b46ca205b8cca7a38938be5d4e6a2,3c3c7240f26b46ca205b8cca7a38938be5d4e6a2,"[split] Update adopter list

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=385375"
trypag,2014-06-19 22:09:52,https://api.github.com/repos/twitter/finagle/git/commits/6c73bd087d82aa3592c741e957e994052caffbb7,6c73bd087d82aa3592c741e957e994052caffbb7,"[split] Convert all tests in util to scalatest.

Problem
specs is deprecated and unreleased for scala 2.11

Solution
Port all our tests to scalatest
This is based off of this PR:
https://github.com/twitter/finagle/pull/268

RB_ID=382749"
luciferous,2014-06-18 22:47:35,https://api.github.com/repos/twitter/finagle/git/commits/5ebd0eb90507dec7178d1fb77a772f4108d59ae6,5ebd0eb90507dec7178d1fb77a772f4108d59ae6,"[split] stream request body

Problem

We aggregate chunks for chunk-encoded Requests. This makes processing
requests with large bodies problematic.

Solution

Turn the chunk-encoded body into a Reader, similar to what we did for
Response.

Result

Streaming request bodies.

RB_ID=335749"
stuhood,2014-06-17 21:57:44,https://api.github.com/repos/twitter/finagle/git/commits/f6b542c31d9190d378078f020c34e33ed022e70a,f6b542c31d9190d378078f020c34e33ed022e70a,"[split] macaw-framework: Switch to exp.HttpServer (stack), and allow request limits to be configured

- Switched to exp.HttpServer to use Params with the Stack client
- Allow the request limits to be configured via Flags
- Made LocalStorage the default for the devel environment
- Added a MaxArtifactSize flag to buildcache

RB_ID=381869"
mosesn,2014-06-16 22:47:07,https://api.github.com/repos/twitter/finagle/git/commits/e03a2ce222b422218397631cd7115066b6f35a06,e03a2ce222b422218397631cd7115066b6f35a06,"[split] Revert ""finagle-memcached: Expose the client type `KetamaClient` in the build() API""

Problem

Reverts a change which broke binary compatibility.

Result

Unbreaks binary compat.

RB_ID=385421
TBR=true"
travisbrown,2014-06-16 20:03:11,https://api.github.com/repos/twitter/finagle/git/commits/e4905b3cc6bf6e9df410df12fbf501a9b7c78fa8,e4905b3cc6bf6e9df410df12fbf501a9b7c78fa8,"[split] Add sections about review process and starter issues

RB_ID=383765"
stevegury,2014-06-14 03:07:34,https://api.github.com/repos/twitter/finagle/git/commits/33bd89244bd37411a394b3f5dc1c077af1ed6db8,33bd89244bd37411a394b3f5dc1c077af1ed6db8,"[split] finagle-memcached: Expose the client type `KetamaClient` in the build() API

Problem

KetamaClientBuilder.build() doesn't expose the exact client type.

Solution

Expose the client type `KetamaClient` in the build() API.

from github: https://github.com/twitter/finagle/pull/280
Signed-off-by: Steve Gury <stevegury@twitter.com>- Problem

RB_ID=384391"
mosesn,2014-06-13 01:46:22,https://api.github.com/repos/twitter/finagle/git/commits/73f77941622cf37323c0a64b1d011d7e4c6c147d,73f77941622cf37323c0a64b1d011d7e4c6c147d,"[split] finagle-mux: Moved UseMux to the correct directory

Problem

finagle-mux didn't compile because UseMux was in the wrong directory

Result

finagle-mux compiles

RB_ID=383585
TBR=true"
mosesn,2014-06-12 21:49:50,https://api.github.com/repos/twitter/finagle/git/commits/ae600e7ca8e2996be97cb5aae8f11fb5e37d87e5,ae600e7ca8e2996be97cb5aae8f11fb5e37d87e5,"[split] finagle-core: Makes c.t.f.Failure a direct subclass of Exception

Problem

c.t.f.Failure is currently a subtype of RuntimeException.  However,
RuntimeExceptions should be used to represent the result of a
programming problem[0] in finagle--most Failures in finagle will
instead represent things that happen in the normal usage of finagle.
For users that respond appropriately to RuntimeExceptions (for
example by crashing) they will be surprised to get many RuntimeExceptions
per second in the normal operation of their service.

[0]: http://docs.oracle.com/javase/tutorial/essential/exceptions/runtime.html

Result

c.t.f.Failure now extends Exception, instead of RuntimeException

RB_ID=371936"
mosesn,2014-06-12 20:57:00,https://api.github.com/repos/twitter/finagle/git/commits/65d85f7e312d4799876a90a6256bf937b9a04b99,65d85f7e312d4799876a90a6256bf937b9a04b99,"[split] finagle-mux: GC Avoidance Algorithm

Problem

In order to choose when we do GC avoidance, we need to guess in
advance when the JVM will do GC automatically, and respond properly.
As a first-order heuristic, we're going to use an exponential
weighted moving average.

Solution

We wrote a jvm GC heuristic for finagle, and use it to decide when
to drain.  After we've drained, we try to force a minor gc, and
then undrain.

Result

We have all of the pieces in place to detect how to set our leases
properly.

RB_ID=371522"
adleong,2014-06-12 17:53:51,https://api.github.com/repos/twitter/finagle/git/commits/d591211cbfa95b15221f6f576d3b191a5f0caf56,d591211cbfa95b15221f6f576d3b191a5f0caf56,"[split] Move API error codes out of the monorail.

RB_ID=369980"
mariusae,2014-06-12 17:10:55,https://api.github.com/repos/twitter/finagle/git/commits/64c5bf7bc525de695e8ab8ac3f21c2de41e16359,64c5bf7bc525de695e8ab8ac3f21c2de41e16359,"[split] com.twitter.finagle.Path: don't support empty path elements

These complicate the grammar and makes it difficult to represent the
path ""/"" accurately. The only place I could these in use was for inet
address like

	/$/inet//8080

this is equivalent to

	/$/inet/0/8080

since Java's InetSocketAddress interpretes an empty host argument as
the Internet address 0.

RB_ID=381909"
evnm,2014-06-12 00:38:28,https://api.github.com/repos/twitter/finagle/git/commits/9d4e18270873d16f40e39463b7cc969c09172945,9d4e18270873d16f40e39463b7cc969c09172945,"[split] finagle-kestrel: Add Name-based methods for MultiReader construction

Problem

finagle-kestrel currently only offers APIs for constructing
MultiReader client instances based on Var[Addr]. This forces consumers
to make the leap from Name instances returned by `Resolver.eval` to
Var[Addr]. This is very error-prone and would inevitably lead to the
proliferation of converter code in every service that uses
finagle-kestrel.

Solution

Add two apply methods to both MultiReaderMemcache and
MultiReaderThrift that take Name arguments. This centralizes the
Name.Bound decomposition in library code where it belongs.

Note that I chose to not support Name.Path in these new
methods. finagle-kestrel deviates fairly heavily from the Finagle
""client stack"" model, including having no adherence to Dtabs. Rather
than make a hacky attempt to resolve Name.Path, these new `apply`
methods only support Name.Bound, falling back on Addr.Neg and logging
a warning message on Name.Path.

RB_ID=376835"
aoen,2014-06-11 19:41:43,https://api.github.com/repos/twitter/finagle/git/commits/e1744c8d040d161bb0419d12e039f0c641acec60,e1744c8d040d161bb0419d12e039f0c641acec60,"[split] Marked thrift tmux end-to-end tests as flaky

RB_ID=381679
TBR=true"
mariusae,2014-06-10 18:09:30,https://api.github.com/repos/twitter/finagle/git/commits/67adf26f7bfaead763e897914dbe306a399c4391,67adf26f7bfaead763e897914dbe306a399c4391,"[split] zk2: Start resolution eagerly

Problem

Some services have come to rely on the eager serverset resolution
semantics presented by zk1, since this allows resolution to proceed
concurrently with program startup. While this is racy behavior --
finicky, at best, to rely on -- these are nonetheless the facts on the
ground.

Solution

Start resolving zk2 serversets eagerly. A better longer-term solution
is to have some sort of API to indicate client readiness so that
services may instead rely on this.

RB_ID=376325"
mosesn,2014-06-09 21:39:08,https://api.github.com/repos/twitter/finagle/git/commits/d6415d56e05e92c0e30c987f09227883eef37869,d6415d56e05e92c0e30c987f09227883eef37869,"[split] finagle-mux: Unflakied some tests

Problem

There were some flaky tests in finagle-mux

Result

No more races in the finagle-mux tests

RB_ID=377917"
travisbrown,2014-06-09 20:28:58,https://api.github.com/repos/twitter/finagle/git/commits/b05ae3ff585678e79d0861341b9dd805aeff51cc,b05ae3ff585678e79d0861341b9dd805aeff51cc,"[split] Add Google Analytics tracking code

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=378845"
penland365,2014-06-09 21:59:13,https://api.github.com/repos/twitter/finagle/git/commits/bb76bffc22878de7ef6002e1fc0141b15271c43a,bb76bffc22878de7ef6002e1fc0141b15271c43a,"[split] Problem

finagle-redis lacks support for the 'DUMP' command.

Solution

Implement the 'DUMP' command.

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=379233"
mosesn,2014-06-09 20:19:05,https://api.github.com/repos/twitter/finagle/git/commits/ec9aa8826aeffa00ce137ca1effcfe2903f5c0b1,ec9aa8826aeffa00ce137ca1effcfe2903f5c0b1,"[split] finagle-core: Added a service acquisition latency stat to StatsFactoryWrapper

Problem

If someone's service is queueing, it's difficult to tell if it's
actually causing a problem.  This change makes it much easier to
tell.

Result

We can tell directly if service acquisition is slow without relying
upon proxy metrics.

RB_ID=373428"
stuhood,2014-06-07 07:51:29,https://api.github.com/repos/twitter/finagle/git/commits/03de1e4515f5c8d16483c850a2ecd4b1ec7bddac,03de1e4515f5c8d16483c850a2ecd4b1ec7bddac,"[split] birdcage: Extract and unify inline jar dependencies where possible

This review removes inline jar() definitions from (java|scala)_library() definitions. It attempts to move the dependencies to 3rdparty subdirectories wherever possible, and propagate OWNERSship from the dependent projects.

In many cases, versions could not be trivially unified, and TODOs were inserted with associated tickets.

- Removes inline jar() definitions from (java|scala)_library() definitions
- Updates querulous for latest commons-pool
- Fixes libthrift exclusions to obviate inline `libthrift` force=True definitions
- Unifies 3rdparty `bijection`/`scalding`/`summingbird` definitions to relevant subdirectories
- Prunes unused 3rdparty targets

RB_ID=374900
TBR=true"
bmdhacks,2014-06-07 00:23:36,https://api.github.com/repos/twitter/finagle/git/commits/7454f1ef12aec5cb933406f8cd1038e2f277b09b,7454f1ef12aec5cb933406f8cd1038e2f277b09b,"[split] finagle: more sbt fixes

Problem
Finagle deploy build was failing

Solution
Convert [Future] to .FutureIface for 2.10 and remove a blank line passed
as a compiler op

RB_ID=378325
TBR=true
NO-QUEUE=true"
mosesn,2014-06-06 21:19:53,https://api.github.com/repos/twitter/finagle/git/commits/fd3c9d042a715b5a7079f1d8a0fa749a44816798,fd3c9d042a715b5a7079f1d8a0fa749a44816798,"[split] finagle-core: Improves FailFastFactory documentation Problem FailFastFactory behavior when multiple threads are asking for a client simultaneously was nonobvious to me.

Solution
Wrote a test to verify my understanding and added documentation.  I also added a stat and documented it in the user guide.

Result
FailFastFactory is a little better documented.

RB_ID=345617"
bmdhacks,2014-06-06 22:16:36,https://api.github.com/repos/twitter/finagle/git/commits/0b927b175e3d8576a887afccd08edb44c5138b74,0b927b175e3d8576a887afccd08edb44c5138b74,"[split] Finagle: Fix sbt version mapping for scala 2.10.4

Problem
It appears we bumped the scala version to compile finagle_2.10 to 2.10.4
but the version mapping for crossversioned jars was not changed.

Solution
Redo the mapping for 2.10.4.  Also add -language:_ option to scala
complier due to SIP18 in scala.  Update scrooge version as well.

RB_ID=377909
NO-QUEUE=true"
bmdhacks,2014-06-05 17:21:49,https://api.github.com/repos/twitter/finagle/git/commits/8affe01fe9d119c145be38f0f99e23ea9fdcc586,8affe01fe9d119c145be38f0f99e23ea9fdcc586,"[split] bump scrooge to 3.16.1-SNAPSHOT

RB_ID=376449
TBR=true"
codeferret,2014-06-05 17:06:53,https://api.github.com/repos/twitter/finagle/git/commits/35393970b9ed559762e0982b6ed8adfd4be88f1f,35393970b9ed559762e0982b6ed8adfd4be88f1f,"[split] finagle-http: Change Request#params to a memoized def

Problem:

Subclasses of Request cannot override params, nor can they
access params via super.params.

Solution:

Change Request#params from a lazy val to a memoized def.

Result:

Subclasses of Request can now override and access params.

RB_ID=374882"
bmdhacks,2014-06-05 03:21:57,https://api.github.com/repos/twitter/finagle/git/commits/5d59d2904f254548bc825f94faf8b78eaa083011,5d59d2904f254548bc825f94faf8b78eaa083011,"[split] bump finagle to 6.17.1-SNAPSHOT

RB_ID=376121
TBR=true
NO-QUEUE=true"
bmdhacks,2014-06-05 01:55:13,https://api.github.com/repos/twitter/finagle/git/commits/18c2cc2d0695fb460c10acd40ffb9e61f167e54a,18c2cc2d0695fb460c10acd40ffb9e61f167e54a,"[split] bump ostrich to 9.5.2-SNAPSHOT

RB_ID=376070
TBR=true
NO-QUEUE=true"
bmdhacks,2014-06-05 01:38:16,https://api.github.com/repos/twitter/finagle/git/commits/2b271987aea95b34ab62249c287db6e97199709b,2b271987aea95b34ab62249c287db6e97199709b,"[split] bump util to 6.17.1-SNAPSHOT

RB_ID=376056
TBR=true
NO-QUEUE=true"
evnm,2014-06-04 22:38:31,https://api.github.com/repos/twitter/finagle/git/commits/54a449f4fd8fb4522dd808fce08d855e27ec5cfe,54a449f4fd8fb4522dd808fce08d855e27ec5cfe,"[split] finagle-thriftmux: Add per-connection protocol-usage stats

Add per-connection stats for tracking ThriftMux servers' counts of
ThriftMux and downgraded, non-Mux connections. This could be useful for
gauging the heterogeneity of traffic being sent to a given server.

RB_ID=372716"
evnm,2014-06-04 22:40:50,https://api.github.com/repos/twitter/finagle/git/commits/23216576ceebb77695b8b01afea9b1629e75297d,23216576ceebb77695b8b01afea9b1629e75297d,"[split] finagle-mux: Rm ClientHangupException in favor of CancelledRequestException

Problem

Mux introduces com.twitter.finagle.mux.ClientHangupException for use
when raising service Futures upon failure of a downstream request. In
the non-Mux ServerDispatcher, the equivalent exception type is
com.twitter.finagle.CancelledRequestException. Since every success rate
chart and alert in the company is written in terms of this latter
exception type, it makes sense to reuse it in Mux in order to avoid
having to rewrite them all.

Solution

Remove ClientHangupException and replace its usages with
CancelledRequestExceptions. This required adding a `cause: Throwable`
constructor argument to CancelledRequestException. The no-arg
constructor is also maintained for backwards compatibility.

RB_ID=366059"
xinxiang-twitter,2014-06-04 22:33:11,https://api.github.com/repos/twitter/finagle/git/commits/6d6a9a3645c6bb3e24b3749a34d32834b8bcb494,6d6a9a3645c6bb3e24b3749a34d32834b8bcb494,"[split] one more cancelling request exn to filter out

RB_ID=372812"
wozaki,2014-06-04 17:31:51,https://api.github.com/repos/twitter/finagle/git/commits/82ea6a8e693c01b67c2ab5b0a4787592c2a88778,82ea6a8e693c01b67c2ab5b0a4787592c2a88778,"[split] add Host Header for Apache Proxy Server

Signed-off-by: Brian Degenhardt <bdegenhardt@twitter.com>

RB_ID=372682"
stevegury,2014-06-04 16:08:26,https://api.github.com/repos/twitter/finagle/git/commits/2e205e1d212e210c888e2d1206393de6716fc207,2e205e1d212e210c888e2d1206393de6716fc207,"[split] birdcage: Upgrade 3rdparty libraries

Problem

In order to have more consistency in the 3rdparty libraries used by birdcage/science/tfe
and also to avoid conflict due to different build tools maven vs pants (ivy), this change
upgrade all the 3rdpartiy libraries in birdcage to match tfe/science.

Solution

Here's the list of changes:
- guava 16.0 => 16.0.1
- jsr305 => 1.3.9 => 2.0.1
- Upgrade com.twitter.common.* to the latest
- Upgrade com.twitter.common.zookeeper.* to the latest
- Upgrade com.twitter.common_internal.* to the latest

RB_ID=370102"
evnm,2014-06-03 20:11:40,https://api.github.com/repos/twitter/finagle/git/commits/3df7bf095df5848eef255271f2c02a2f27367a84,3df7bf095df5848eef255271f2c02a2f27367a84,"[split] Finagle: Add `Addr.Neg` to the user guide's list of Addr types

RB_ID=367731"
bmdhacks,2014-06-03 19:20:34,https://api.github.com/repos/twitter/finagle/git/commits/b4fadabe19c8ca6fbb1e626e8d77bf180f7e55ae,b4fadabe19c8ca6fbb1e626e8d77bf180f7e55ae,"[split] finagle-http: scala 2.10 compatible tests

Problem
beSome in specs actually doesn't check the value of an object, it just
checks for type equality. But Some(Return(Response)) is not a
Some(Return(DefaultHttpResponse)) since while they both extend
HttpMessage interface they are different classes.

Solution
Modify the test to be a bit more portable between scala versions.

RB_ID=371810"
evnm,2014-06-02 23:52:28,https://api.github.com/repos/twitter/finagle/git/commits/e67902a493f84eb02aca567d9e8db6c0bf1c3735,e67902a493f84eb02aca567d9e8db6c0bf1c3735,"[split] Finagle: Improve Mux server close behavior, control messages to non-Mux clients

Problem

After `c.t.f.mux.Server#close` has been invoked, a Mux server will
respond to any Tdispatch messages with RdispatchNack. The
control-message handling code recently added to the ThriftMux
protocol-downgrading ChannelHandlers does not cover this message
type. This results in a race condition within the `mux.Server#close`
tests: if any of the test's un-Awaited outstanding requests are received
*after* `server.close()`, they'll trigger RdispatchNacks which will
cause the server's downgrading ChannelHandler to throw
UnexpectedRequestExceptions.

Additionally, `mux.Server#close` does not actually close the Transport
or Service, even once an Rdrain is received.

Solution

`mux.Server#close` will now close the underlying Transport if either a)
`closep` is satisfied (as in the case of receipt of an Rdrain), or b)
the argument deadline expires. Also a callback is added to
`trans.onClose` to close the Service.

The only means of negative acknowledgement afforded to ThriftMux servers
connected to non-Mux clients is to close the connection. Thus, the two
protocol-downgrading ChannelHandlers now close the channel when
RdispatchNack messages are issued. Furthermore, we remove the code that
simulated receipt of Rdrain in response to issued Tdrains.

RB_ID=360537"
travisbrown,2014-05-30 20:58:07,https://api.github.com/repos/twitter/finagle/git/commits/8bdd79d1f9725e0e35bf93f6d9a0bb8b7fefe1e1,8bdd79d1f9725e0e35bf93f6d9a0bb8b7fefe1e1,"[split] Add list of Finagle adopters

Problem

The project didn't have a list of adopters.

Solution

Added a new file with a preliminary list and linked it from the README.

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=371576"
mariusae,2014-05-30 17:00:53,https://api.github.com/repos/twitter/finagle/git/commits/50593d08f39332f0fd025eae70e4350f60950d94,50593d08f39332f0fd025eae70e4350f60950d94,"[split] twitter-server: productivity = cpuTime/wallTime

Problem

The 'productivity' metric in twitter-server is pretty much useless. It
only measures the ratio of cpu time spent in user mode vs. system
mode, it does not account for blocking.

Solution

We can make a gross-ish estimation of this by measuring wall time. A
thread's cpuTime/wallTime measures the proportion of time the thread
was ""doing something."" This is by no means perfect: for example, the
kernel scheduler may simply choose not to run the (otherwise runnable)
thread, it doesn't account for preemption, etc. etc.

I think it is reasonable to define 'productivity' in those terms, with
the caveat that a lack of 'productivity' is not always attributable to
blocking alone.

The metric may be attenuated by a mismatch in accuracy between CPU
time (presumed getrusage) and walltime measurements (which can be done
by reading a timing register).

RB_ID=368879"
roanta,2014-05-30 16:46:48,https://api.github.com/repos/twitter/finagle/git/commits/21588e672cf1d013766ca0f21c31c0f99985f1ff,21588e672cf1d013766ca0f21c31c0f99985f1ff,"[split] finagle-thriftmux: pass along ClientId with ClientBuilder API

RB_ID=371196"
yzhuang,2014-05-29 18:01:49,https://api.github.com/repos/twitter/finagle/git/commits/eee9e30258c3005f19701790c98c2d944e8b4ffe,eee9e30258c3005f19701790c98c2d944e8b4ffe,"[split] ClientBuilder should turn per-host stats off by default (matching new Client building API).

RB_ID=349833"
mariusae,2014-05-28 22:38:47,https://api.github.com/repos/twitter/finagle/git/commits/1412039abfd4bc6ce6063a14f7857aee5e4e444b,1412039abfd4bc6ce6063a14f7857aee5e4e444b,"[split] Improve the Dtab API

Problem

The current API is asymmetric: apply() doesn't refer to the same thing
as update(). This is highly confusing and even dangerous. The
relationship between the base Dtab and the local Dtab is unclear and
confusing. It's a bad API. Further, Java usage of Dtab was littered
with MODULE$ references.

Solution

Deconflate 'base' from 'local'. Instead of Dtab() and Dtab.base, we
have instead Dtab.base and Dtab.local. These are accessed and updated
in the standard way. Dtab users (i.e. BindingFactory, a class in
ConfigBus) must now compose the Dtab explicitly:
Dtab.base++Dtab.local. Also get rid of Dtab.baseDiff() -- protocols
simply encode Dtab.local.

We also ensure that Dtabs are tested with a nonempty Dtab.base, so
that this does not accidentally leak.

RB_ID=363999"
travisbrown,2014-05-27 20:20:03,https://api.github.com/repos/twitter/finagle/git/commits/a266aa640155e45198e8b1ce0913d9b0520aa665,a266aa640155e45198e8b1ce0913d9b0520aa665,"[split] Update commit message formatting guidelines

Problem

The commit message example doesn't match currently agreed-upon practice.

Solution

Added some newlines.

Signed-off-by: Travis Brown <tbrown@twitter.com>

RB_ID=367851"
evnm,2014-05-23 05:39:12,https://api.github.com/repos/twitter/finagle/git/commits/f3799a5e9aa46302b99790c5c991f904352d5f9c,f3799a5e9aa46302b99790c5c991f904352d5f9c,"[split] finagle-thriftmux: Propagate Contexts from non-ThriftMux clients

Problem

It was observed that ThriftMux servers do not propagate custom
`com.twitter.finagle.Context`s to downstream clients. Upon investigation,
we learned that ThriftMux servers do not ingest the `contexts` array
embedded in TTwitter Thrift request headers. Thus the only Contexts that
are propagated from non-Mux clients to ThriftMux servers are the
ClientId- and TraceContexts which are constructed explicitly.

Solution

Patch the TTwitterToMux handler to ingest the `contexts` array embedded
in TTwitter Thrift request headers.

RB_ID=365995"
mosesn,2014-05-22 22:22:07,https://api.github.com/repos/twitter/finagle/git/commits/f9b57af6eab3df58238eebb1a50f7a5cc240af78,f9b57af6eab3df58238eebb1a50f7a5cc240af78,"[split] finagle-core: Added Failure support for sourcing to finagle Problem We've started replacing CancelledRequestExceptions with Failures, but CancelledRequestExceptions are SourcedExceptions, and we didn't turn on sourcing Failures properly, so problems involving Failures that are client-specific don't have proper source information, and are difficult to debug.

Solution
Wherever SourcedException is handled, we treat Failures in the same way.  We've added a ""service name"" key to the `sources` Map.

Result
Client-specific problems should be much easier to debug with finagle.

RB_ID=362019"
mosesn,2014-05-22 22:19:50,https://api.github.com/repos/twitter/finagle/git/commits/dda0e6250970e46bc5ff428d518e5e888cc999dc,dda0e6250970e46bc5ff428d518e5e888cc999dc,"[split] finagle-doc: Removed a line from conf.py

Problem

For some docs generation tools, sphinx gives us trouble for bad includes.  links.txt doesn't seem to point anywhere.

Result

sphinx doesn't complain so much

RB_ID=365523"
mariusae,2014-05-22 13:25:36,https://api.github.com/repos/twitter/finagle/git/commits/b751a8f712dc1ac77bcc4ab9ffd459828a01647d,b751a8f712dc1ac77bcc4ab9ffd459828a01647d,"[split] zk2: hold on to your gauges!

The 'gauges' val was not captured the following Var.async closure; use
StatsReceiver#provideGauge instead.

RB_ID=365137"
tnarg,2014-05-21 17:17:20,https://api.github.com/repos/twitter/finagle/git/commits/a69a13e149256c4968c7124ab2dad8d42d30d1c9,a69a13e149256c4968c7124ab2dad8d42d30d1c9,"[split] finagle-mux: Modifies MuxService to essentially be a Service[Spool[Buf], Spool[Buf]] Problem

mux does not currently support chunked encoding of requests and responses.

Solution

Use the reserved high bit of the message tag to indicate that a message is to be continued.

Result

You can now stream a request or response using a Spool[Buf].

RB_ID=353023"
roanta,2014-05-21 14:56:13,https://api.github.com/repos/twitter/finagle/git/commits/8a5044431773cdb5f0537150e159a4755527af93,8a5044431773cdb5f0537150e159a4755527af93,"[split] finagle-core: remove need for hostConnectionLimit when using ClientBuilder#stack

Problem

Migrating thriftmux to ClientBuilder revealed the following code:

ClientBuilder()
 .stack(ThriftMuxClient)
 .dest(...)
 .hostConnectionLimit(1)
 .build()

Of course, host connection limit is non-sensical in this context.

Solution

Arguably, we shouldn't make any assumptions about the Client created via
the `stack` endpoint. Thus, we can remove type restriction when using the
`stack` API endpoint.

RB_ID=361561"
roanta,2014-05-21 05:55:40,https://api.github.com/repos/twitter/finagle/git/commits/ab91cd70a8f6109f07d76383f7fad5a64d853902,ab91cd70a8f6109f07d76383f7fad5a64d853902,"[split] finagle-thriftmux: add ClientBuilder#stack compatibility and make APIs symmetric

Problem:

There was no API entry point for ThriftMux into ClientBuilder.

Solution:

Implement (Stack.Params => Client[ThriftClientRequest, Array[Byte]]) on
the ThriftMuxClient. Additionally, the API surface area for thriftmux
was becoming unmanageable. This was partly due to the hoops we had to
jump through to make ThriftMuxServer work with ServerBuilder. However,
now that this is simplified, we have an opportunity to make the API
more symmetric and uniform for both ThriftMuxClient/ThriftMuxServer.
Note, instead of using the StackLike variants we have to define
separate ThriftMux{ServerLike/ClientLike} because of the type
conversions from mux to thrift.

RB_ID=359625
TBR=true"
mosesn,2014-05-20 23:44:31,https://api.github.com/repos/twitter/finagle/git/commits/202ed329874355578cd466aa1b222bff2fdd55cf,202ed329874355578cd466aa1b222bff2fdd55cf,"[split] finagle-core: Rolls up the /tries scope properly

Problem
The ""/tries/"" stats scope is mostly symmetric with the ""/"" stats scope, but it's not rolled up.

Result
The ""/tries/"" stats scope is rolled up locally.

RB_ID=362077"
mosesn,2014-05-20 21:03:49,https://api.github.com/repos/twitter/finagle/git/commits/fd190e5088fa706286b78faf7ed39db821c045a5,fd190e5088fa706286b78faf7ed39db821c045a5,"[split] finagle-mux: Marked a gc test as flaky

RB_ID=363101
TBR=true
NO-QUEUE=true"
roanta,2014-05-16 03:15:24,https://api.github.com/repos/twitter/finagle/git/commits/d7119d316bd06861b2870df8324db7111c12ec03,d7119d316bd06861b2870df8324db7111c12ec03,"[split] finagle-core: widen to type for ServerBuilder#stack

Problem

ServerBuilder#stack required a make function from parameters
to StackServer. The narrow StackServer type didn't buy us
any type safety and, in certain cases, made it difficult to
make protocols compatible with the builders (ex. thriftmux).

Solution

Widen to type of for the stack endpoint to Stack.Params => Server[Req, Rep].
It's up to server implementations to correctly use the parameters passed
through make.

RB_ID=359113"
evnm,2014-05-15 23:50:49,https://api.github.com/repos/twitter/finagle/git/commits/4a211403a0a3d48834e4f803564b112b580eb234,4a211403a0a3d48834e4f803564b112b580eb234,"[split] finagle-core: StatsReceiver Scaladocs and empty string scoping behavior

Problem
`StatsReceiver.scope` currently allows stats to be scoped by the empty
string, which results in metric names like ""srv//blah"". This could lead
to inconsistency between stats that are scoped according to dynamic or
consumer-provided strings.

Solution
Check for the empty string in `StatsReceiver.scope` and `.scopeSuffix`.
This change also adds some Scaladocs within StatsReceiver.scala.

RB_ID=358155"
roanta,2014-05-15 23:00:20,https://api.github.com/repos/twitter/finagle/git/commits/9dd87de208c76dea794fc90565cb05ecac0c2c8e,9dd87de208c76dea794fc90565cb05ecac0c2c8e,"[split] finagle-core: finagle-core: widen type of ClientBuilder#stack

Problem:

Similar to ServerBuilder patch, the narrow type didn't help us and, in fact,
it complicated things.

Solution:

Widen type to Client[Req, Rep]. Note, the failure module transformation
logic now sits in the `codec` method. This means that we only apply
those when using codecs. Arguably, this is no different than
before since there is no guarantee that a StackClient's stack will have
those modules anyways.

RB_ID=359149"
evnm,2014-05-15 22:39:22,https://api.github.com/repos/twitter/finagle/git/commits/6c04cc4fa2abb6eca7716d3830756b61ce17f038,6c04cc4fa2abb6eca7716d3830756b61ce17f038,"[split] Finagle: Blackhole control messages sent to non-mux Thrift clients

Problem
As pointed out in [1], com.twitter.finagle.thriftmux.TTwitterToMux fails
to handle Mux control messages which are sent downstream by
`com.twitter.finagle.mux.Server#close`. These messages have no meaning to
non-mux clients, so there isn't any code in the two
protocol-downgrade ChannelHandlers to deal with them.

Solution
When servicing non-Mux Thrift clients, the ThriftMux Netty server
pipeline will simply satisfy the ChannelFuture associated with any
control messages rather than writing them to the wire. This change also
adds proper message-receipt behavior in the draining state to the Mux
server dispatcher.

[1] https://groups.google.com/forum/#!topic/finaglers/WVZHwgY4-V8

RB_ID=312315"
mosesn,2014-05-15 21:13:41,https://api.github.com/repos/twitter/finagle/git/commits/1f4b630ed5629b8e0435a5a0c383925a37f1b3a0,1f4b630ed5629b8e0435a5a0c383925a37f1b3a0,"[split] bump scrooge to 3.15.1-SNAPSHOT

RB_ID=359577
TBR=true
NO-QUEUE=true"
bmdhacks,2014-05-15 19:07:25,https://api.github.com/repos/twitter/finagle/git/commits/6a2aeb85593d8e4456d6a27615205d25adfb6fe3,6a2aeb85593d8e4456d6a27615205d25adfb6fe3,"[split] Add provides clauses to CSL BUILD files In preparation for publishing with pants, we can now add provides clauses without the build blowing up. NB: pants on master still doesn't publish, but this will help give devprod example libraries to test against.

RB_ID=358451"
roanta,2014-05-14 23:33:06,https://api.github.com/repos/twitter/finagle/git/commits/bbcae3b8b5ef56fdaa74e00311715163954101e4,bbcae3b8b5ef56fdaa74e00311715163954101e4,"[split] finagle-core: Implement DefaultServer in terms of StackServer

Problem:

We have two code paths for constructing a finagle sever.

Solution:

unify.

RB_ID=356935"
evnm,2014-05-14 23:35:01,https://api.github.com/repos/twitter/finagle/git/commits/ed312793bc1d452fa652e0fb64e6fd3ffe910031,ed312793bc1d452fa652e0fb64e6fd3ffe910031,"[split] finagle-thriftmux: Add stats to identify ThriftMux clients and servers

Problem
Service owners would like an easy way to identify subsets of their
clusters that are using ThriftMux.

Solution
Adds a top-level ""protocol/thriftmux"" stat initialized to 1.

RB_ID=357583"
mosesn,2014-05-14 23:06:00,https://api.github.com/repos/twitter/finagle/git/commits/860fd9d656e393dd8210ef0b1aa9ee6067428690,860fd9d656e393dd8210ef0b1aa9ee6067428690,"[split] bumping finagle to 6.16.0

RB_ID=358591
TBR=true"
mariusae,2014-05-14 22:47:57,https://api.github.com/repos/twitter/finagle/git/commits/1104b20d14ae64f23d3b8fd096422e05d000494e,1104b20d14ae64f23d3b8fd096422e05d000494e,"[split] Mux: reflect reality in specification

While implementing Mux in another context and language, I discovered
an inconsistency.

The Mux specification did not accurately reflect the implementation in
the description of message types. The specification is ""correct"" --
this was a silly bug -- but unfortunately it is too late to correct
without bumping the version number. So we'll wait.

In the meantime, we can at least create a definition which is
consistent, and compensate for corner cases in the implementation.
Once new clients and servers are out, we can remove the aliases
introduced here.

RB_ID=357159"
mosesn,2014-05-14 22:13:03,https://api.github.com/repos/twitter/finagle/git/commits/963287c65a6613957e6a7d801400f8061cf0ce74,963287c65a6613957e6a7d801400f8061cf0ce74,"[split] marks another WindowedByteCounter test flaky

RB_ID=358499
TBR=true
NO-QUEUE=true"
roanta,2014-05-14 16:16:02,https://api.github.com/repos/twitter/finagle/git/commits/519b2add869e4c6dcd41fc336b080b2827282e70,519b2add869e4c6dcd41fc336b080b2827282e70,"[split] finagle-mux: move exp.MuxClient and exp.MuxServer

finagle-mux: redefine exp.MuxClient and exp.MuxServer

Problem:

ThriftMux relies on these being defined in a exp package, especially
for the client definition. They inadvertently moved during a
refactoring.

Solution:

Define Mux{Client,Server} in package exp and have the top-level
Mux API use them.

RB_ID=357015"
mosesn,2014-05-14 00:21:50,https://api.github.com/repos/twitter/finagle/git/commits/441263c46ffc6403ad7e1c27b352942c877d075b,441263c46ffc6403ad7e1c27b352942c877d075b,"[split] finagle-core: Scoped the RollupStatsReceiver carefully Problem RollupStatsReceiver was applied too aggressively, and means that we can't scope anything in {Default,Stack}Client.

Solution
Add RollupStatsReceiver selectively where it makes sense.

Result
We can now have two types of metrics inside of a single scope without it blowing up.

RB_ID=357349"
mosesn,2014-05-14 00:04:50,https://api.github.com/repos/twitter/finagle/git/commits/c4dfd30029979ac359088f2595a8f8b15b404f38,c4dfd30029979ac359088f2595a8f8b15b404f38,"[split] bump util to 6.16.1-SNAPSHOT

RB_ID=357283
TBR=true"
roanta,2014-05-13 21:56:52,https://api.github.com/repos/twitter/finagle/git/commits/6b4b6e71a9745318bf1a0891f31806aacdcf814a,6b4b6e71a9745318bf1a0891f31806aacdcf814a,"[split] finagle-core: add a copy constructor to Stack{Client, Server}

RB_ID=357149"
mosesn,2014-05-13 20:55:26,https://api.github.com/repos/twitter/finagle/git/commits/b67884be084aa91bba74902dfa1e887fc6ce881f,b67884be084aa91bba74902dfa1e887fc6ce881f,"[split] finagle-mux: Render mux clients leasable Problem When a server signals to a client that it should lease, the client will ignore it.

Solution
Use the already existing LeasedBridge abstraction in both the DefaultClient and StackClient implementations.

Result
No immediate change in mux client behavior, but when servers have the capability to send leases, clients will respect them.

RB_ID=350637"
evnm,2014-05-13 19:12:24,https://api.github.com/repos/twitter/finagle/git/commits/87c9bf6d7a5b9e6e43c7dc37ac7ed0b12678cfe3,87c9bf6d7a5b9e6e43c7dc37ac7ed0b12678cfe3,"[split] finagle-thriftmux: Add ThriftMux.withClientId

Problem
The current ThriftMux client-construction API doesn't provide a way to
set ClientIds. Given that most of Twitter's server fleet whitelists
clients by ClientId, this issue is blocking ThriftMux rollout.

Solution
This change adds a `ThriftMux.withClientId(ClientId)` method and
rejiggers the ThriftMux{Server, Client} classes.

RB_ID=278485
TBR=true"
roanta,2014-05-13 17:08:22,https://api.github.com/repos/twitter/finagle/git/commits/5d7774e1381950a4e42d422307adca91962f8274,5d7774e1381950a4e42d422307adca91962f8274,"[split] finagle-{mux, thriftmux} - add owners file

RB_ID=355831
NO-QUEUE=true"
mosesn,2014-05-13 00:03:20,https://api.github.com/repos/twitter/finagle/git/commits/d82580088fc1108dc31975f7a4b449f01ed73c02,d82580088fc1108dc31975f7a4b449f01ed73c02,"[split] finagle-mux: Cleaned up build information Problem Unnecessary dependency on finagle-test, sbt build was broken

Solution
Removed dependency on finagle-test, added dependency on stats-util

RB_ID=354231"
mosesn,2014-05-12 22:59:55,https://api.github.com/repos/twitter/finagle/git/commits/481754dc9bea0801df3400e5f92a6293b60e5da0,481754dc9bea0801df3400e5f92a6293b60e5da0,"[split] util-core: Moves Sleeper => Time.sleep Problem Testing sleeping is tricky.  The first implementation made the scaffolding nice, but sacrificed the API.  This was the wrong tradeoff.

Result
Sleeper => Time.sleep

This is only used for testing.  It should simplify the language around testing for nearly all common cases, although some edge cases will not be served as well.

For no extra work, if you use Time.sleep, it will track with the TimeControl from your Time.withCurrentTimeFrozen.

RB_ID=352941"
evnm,2014-05-12 19:35:21,https://api.github.com/repos/twitter/finagle/git/commits/7303eb56005e1f8b4726051bc1646cc6622d77b2,7303eb56005e1f8b4726051bc1646cc6622d77b2,"[split] Add evm to OWNERS files of finagle-{mux,thrift,thriftmux}

RB_ID=355845"
evnm,2014-05-10 01:09:10,https://api.github.com/repos/twitter/finagle/git/commits/aed51270c861dca1f7ada5f345c10ed27df47bd8,aed51270c861dca1f7ada5f345c10ed27df47bd8,"[split] finagle-thrift: Rm log statement accidentally left in 5da8d7b7

RB_ID=355005"
evnm,2014-05-09 23:37:00,https://api.github.com/repos/twitter/finagle/git/commits/246e47e62be20bcbf28a7eb1cc69b60f665c1dfa,246e47e62be20bcbf28a7eb1cc69b60f665c1dfa,"[split] finagle/util: Minor c.t.app.ClassPath/c.t.f.util.LoadService cleanup

Fix a couple rough edges in com.twitter.app.ClassPath
and com.twitter.finagle.util.LoadService:

- LoadService doesn't use either of the name vals defined within Info.
- ClassPath uses `name`, but unconditionally chops off the last six
  characters of path strings rather than only doing so for .class files.

RB_ID=354443"
roanta,2014-05-09 23:15:38,https://api.github.com/repos/twitter/finagle/git/commits/236cc5166ac90b17d117b8ac971d6fc50a7b8c94,236cc5166ac90b17d117b8ac971d6fc50a7b8c94,"[split] finagle-core: thread through Codec#newClientTransport in ClientBuilder

RB_ID=354327"
bmdhacks,2014-05-09 16:56:51,https://api.github.com/repos/twitter/finagle/git/commits/60e1f740d94d6f2dd620fe9ec8563e9141108ff5,60e1f740d94d6f2dd620fe9ec8563e9141108ff5,"[split] Remove dependencies on unpublished thrift targets in finagle

Problem:
darkwing and onestore are depending on scrooge 2.0 artifacts of private
thrift files inside of finagle.
This causes all sorts of dependency problems, since we don't even
publish these.  I don't even think these projects need them.

Solution:
For darkwing I think you want just finagle-exception and finagle-zipkin
but let me know if you don't use those (but you should).
For onestore I don't think it even needs those, so I just deleted it.
Also this removes scrooge legacy targets from finagle.

RB_ID=352567"
evnm,2014-05-08 23:24:04,https://api.github.com/repos/twitter/finagle/git/commits/b2c5857178379eaa9ceb3bd5bf60064b240b4668,b2c5857178379eaa9ceb3bd5bf60064b240b4668,"[split] finagle-thriftmux: Maintain legacy client and server names

Problem
finagle-thriftmux hardcodes inconsistent default client and server `name`
arguments to Netty3Listener, DefaultServer, and DefaultClient. These
names become stats scopes, so if we change them willy-nilly in ThriftMux,
every service will have to update their dashboard and alert definitions.

Solution
Converge default client and server `name` arguments in thriftmux on the
""thrift"" string used in finagle-thrift.

Result
Services that adopt ThriftMux won't have to update their dashboards and
alerts, thus removing a burden that would otherwise increase the barrier
to entry.

RB_ID=350699"
mariusae,2014-05-08 23:09:29,https://api.github.com/repos/twitter/finagle/git/commits/18223812e3d598f1932cb83d1f07755518b4c7fc,18223812e3d598f1932cb83d1f07755518b4c7fc,"[split] finagle-core, thrift, mux: Clean up contexts, delimit Locals

The current code that deals with com.twitter.util.Local and
com.twitter.finagle.Context confuses a number of issues.

First, contexts are designed to pass-through -- thus, they are not
useful for inheriting client ids; instead they must be set explicitly
by clients. This change fixes finagle-thrift to always ignore a
context-provided client id, replacing it instead with whatever is
passed in to the client.

Secondly, we make sure that all dispatchers delimit Locals properly.
Without this, it is possible to ""leak"" locals between requests. Consider
the following scenario, for a single server dispatcher instance:

	service(req)
		sets client ids in filter
		...
	service(req)
		does not set client id in a filter (e.g. it was not provided)
		client id now leaks

this is made worse by the fact that the TTwitter *client* set the
client id local. (Why, I'm not sure; this is also fixed by this
change.)

Finally, we ensure that ClientIdContext does not pass-through. While
we use contexts to propagate client ids, they should not be passed
from server to client since, by their current definition, they
identify the closest client.

RB_ID=314891"
sprsquish,2014-05-08 21:32:36,https://api.github.com/repos/twitter/finagle/git/commits/4d28afe5be34202f6180e8b95289a858d32d3dfa,4d28afe5be34202f6180e8b95289a858d32d3dfa,"[split] update ruby finagle-thrift generated sources

RB_ID=353683"
mosesn,2014-05-08 01:05:52,https://api.github.com/repos/twitter/finagle/git/commits/55f66ec09bb64ec685179bf629ee0a35187a3b41,55f66ec09bb64ec685179bf629ee0a35187a3b41,"[split] finagle-http: Adds tls support to finagle 6 apis Problem finagle 6 apis don't support TLS, significantly hampering adoption

Solution
Exploit Stack{Client,Server}Like to make the finagle 6 api configurable.

Result
finagle-http's finagle 6 api supports TLS

RB_ID=352107"
penland365,2014-05-07 23:31:00,https://api.github.com/repos/twitter/finagle/git/commits/81c0f5a3e79b975d2a61bdd896e377eef6a8790c,81c0f5a3e79b975d2a61bdd896e377eef6a8790c,"[split] Added additional tests for redis MOVE command.

Additional testing was requested for the finagle-redis MOVE command impl.
Added tests to the ClientSpec and the ClientServerSpec.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=352831"
mosesn,2014-05-07 06:22:30,https://api.github.com/repos/twitter/finagle/git/commits/d4cbdecb9592d245470dcb6ef666fa77a9c0ecd2,d4cbdecb9592d245470dcb6ef666fa77a9c0ecd2,"[split] finagle-mux: GC Avoidance primitives Problem GC Avoidance is a tricky problem, and requires a small set of tools so we can talk about it in sophisticated ways.

Result
We have a simple toolkit to build GC Avoidance on top of.

RB_ID=343361"
mosesn,2014-05-07 01:47:47,https://api.github.com/repos/twitter/finagle/git/commits/8890e54788ea078d1997cf67b69875c490beb3e7,8890e54788ea078d1997cf67b69875c490beb3e7,"[split] Revert ""Mux: reflect reality in specification""

RB_ID=351993
TBR=true
NO-QUEUE=true"
mariusae,2014-05-06 18:43:24,https://api.github.com/repos/twitter/finagle/git/commits/33cf1b7e80d26a87835880b6f6b3c511133dfc14,33cf1b7e80d26a87835880b6f6b3c511133dfc14,"[split] Mux: reflect reality in specification

While implementing Mux in another context and language, I discovered
an inconsistency.

The Mux specification did not accurately reflect the implementation in
the description of message types. The specification is ""correct"" --
this was a silly bug -- but unfortunately it is too late to correct
without bumping the version number. So we'll wait.

In the meantime, we can at least create a definition which is
consistent, and compensate for corner cases in the implementation.
Once new clients and servers are out, we can remove the aliases
introduced here.

RB_ID=307247"
mmollaverdi,2014-05-06 16:26:42,https://api.github.com/repos/twitter/finagle/git/commits/d65e7b1b0f85bb5f3a2a8ec84c1ca57fa34bf790,d65e7b1b0f85bb5f3a2a8ec84c1ca57fa34bf790,"[split] ExceptionFilter does not set the response content-length header to 0.

Problem

The com.twitter.finagle.http.filter.ExceptionFilter class in finagle-http module calls response.clearContent() to
return an empty response but does not set the content-length header to 0.

AWS load balancers are sensitive to missing content-length headers and translate such responses to 502s (Bad gateway).

Solution

Content-Length header is set to 0 in ExceptionFilter class for both 499 and 500 responses.

Results

Content-length is correctly set on empty responses returned by ExceptionFilter.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=350399"
bmdhacks,2014-05-06 16:48:32,https://api.github.com/repos/twitter/finagle/git/commits/bf348595b3b06779b89550ead7994ab7bdb79806,bf348595b3b06779b89550ead7994ab7bdb79806,"[split] finagle-core: properly close sockets on shutdown

Problem:
A recent fix on the connection-draining logic exposed the fact that we
don't start draining connections until all the connections are closed in
Netty3Listener.

Solution:
Sequence the close operations correctly based on their underlying
behavior.

Results:
This fixes the problem, but a better solution would be to clarify
Netty3Listener's close API.  Filed CSL-933

RB_ID=349237"
roanta,2014-05-05 21:50:57,https://api.github.com/repos/twitter/finagle/git/commits/86c22e06fb7a571909f4d5a57c49d1dcf2cd093a,86c22e06fb7a571909f4d5a57c49d1dcf2cd093a,"[split] finagle-core: Implement ClientBuilder in terms of StackClient

Problem:

Decrease barrier to entry for mux (and thriftmux) by making it
possible to use from ClientBuilder. This requires that
protocol implementations can manipulate the entire client stack.

Solution:

The crux of the change is a new `stack` method in ClientBuilder that takes
a com.twitter.finagle.StackClient[Req, Rep]. The previous `codec` endpoints
now translate a com.twitter.finagle.Codec into a StackClient.

RB_ID=279239"
tnarg,2014-05-05 16:30:59,https://api.github.com/repos/twitter/finagle/git/commits/42d2d0beba092f847b27d0ea318f9207761c4a4d,42d2d0beba092f847b27d0ea318f9207761c4a4d,"[split] finagle-mux: refactor Session to make closing a Session uniform

Problem

MuxSession.connect and MuxSession.listen both return a (Session => Session). This makes closing a session and the releasing of resources difficult and non-obvious. You can close either instance of Session to terminate the Session, but cleaning up resources within the other instance of Session is difficult.

Solution

Rename Session to MuxService, and add a new Session which dispatches received messages and is provided to both connectors and listeners. If you wish to terminate a Session, you call close on Session. This will call close on the instances of MuxService, and then close the transport. Session.client (an instance of MuxService) is used to send rpcs/messages/pings/drain to the other party.

Result

The new interface provides a single way to close a session and clean up resources within an instance of MuxService.

RB_ID=317129"
evnm,2014-05-02 22:33:07,https://api.github.com/repos/twitter/finagle/git/commits/41ac90d53ed510c37be98f0f13248c1e110e5a3b,41ac90d53ed510c37be98f0f13248c1e110e5a3b,"[split] finagle-core: Invert the `cancelOnHangup` value passed to MaskCancelFilter.Param

Problem
In a recent change that removed `StackServer.transformed`, we inverted
the interpretation of the boolean Param that configures whether or not to
include a MaskCancelFilter. Since this inversion was not reflected in
`ServerBuilder.cancelOnHangup`, we effectively inverted the cancellation
behavior of any services that use ServerBuilder.

Solution
Invert the boolean argument passed to `MaskCancelFilter.Param` in
`ServerBuilder.cancelOnHangup`.

RB_ID=349129"
mariusae,2014-05-02 22:07:30,https://api.github.com/repos/twitter/finagle/git/commits/82f559edff955b91639cc2384d651e72d4ba9f35,82f559edff955b91639cc2384d651e72d4ba9f35,"[split] ss2: reduce the number of intermediate datastructures

 *	Only convert to sets at the very end of the pipeline;
 *	push filtering and path reconstruction down to the client by
	introducing ZooKeeperReader.glob

This reduces allocation by about 40% per change in large serversets.

RB_ID=345699"
evnm,2014-05-02 16:57:02,https://api.github.com/repos/twitter/finagle/git/commits/202e08102023a67d9fa3197d607ac6966d5a4886,202e08102023a67d9fa3197d607ac6966d5a4886,"[split] finagle-example: Add Java Thrift client and server

While investigating a Java compatibility issue reported on the external
finaglers list [1], I wrote a Java Thrift client+server pair within
finagle-example. The code is equivalent to the Scala client+server in
finagle-example.

[1] https://groups.google.com/forum/#!topic/finaglers/W4hhEcAbocI

RB_ID=348329"
roanta,2014-05-01 23:38:14,https://api.github.com/repos/twitter/finagle/git/commits/41ff7805eaa669572a94c079ec2e902a03c7ad2d,41ff7805eaa669572a94c079ec2e902a03c7ad2d,"[split] finagle-core: liberate Failure

RB_ID=347753"
evnm,2014-05-01 21:33:25,https://api.github.com/repos/twitter/finagle/git/commits/39e38772054c541f2a9e7eef170eaa5804d1d2b1,39e38772054c541f2a9e7eef170eaa5804d1d2b1,"[split] bump scrooge-generator and scrooge-maven-plugin to 3.14.1

RB_ID=347161
TBR=true"
roanta,2014-05-01 20:23:33,https://api.github.com/repos/twitter/finagle/git/commits/391561d8a06e54080e9b92c067571b2a5f232a70,391561d8a06e54080e9b92c067571b2a5f232a70,"[split] finagle-core: add Stack#remove

RB_ID=346303"
evnm,2014-04-30 21:18:04,https://api.github.com/repos/twitter/finagle/git/commits/a8643496bc487d13237caed6e5ee88bfc002e57d,a8643496bc487d13237caed6e5ee88bfc002e57d,"[split] finagle-mux: Record tracing info when Mux is enabled

We'd like to be able to track Mux rollout across the fleet. Similar to
how we record tracing info for the version of Finagle being run, this
change adds server- and client-send tracing info for Mux.

RB_ID=341543"
evnm,2014-04-30 20:02:38,https://api.github.com/repos/twitter/finagle/git/commits/fe620adcc04a6366d0141ff8587076f639e93dd7,fe620adcc04a6366d0141ff8587076f639e93dd7,"[split] bump scrooge to 3.14.2-SNAPSHOT

RB_ID=346719
TBR=true"
evnm,2014-04-30 17:19:26,https://api.github.com/repos/twitter/finagle/git/commits/fb4f37b55d2677eeb061f459ef282d578b8cc8de,fb4f37b55d2677eeb061f459ef282d578b8cc8de,"[split] finagle-core: Log all services loaded by c.t.finagle.util.LoadService

The LoadService mechanism is opaque in that there's no visibility into
what classes are loaded at runtime. Countless investigations have
involved inferring what classes *should* have been loaded based on
classpath inspection. By logging all loaded services at runtime, we'll
have better insight into what's going on.

Log to DEBUG in `LoadService.apply` stating which class was loaded to
satisfy a given service. This change also changes c.t.finagle.Context
to log to DEBUG.

RB_ID=340787"
evnm,2014-04-30 17:11:01,https://api.github.com/repos/twitter/finagle/git/commits/015641a576b618dbd4df1f71b1ed3543f4ee7655,015641a576b618dbd4df1f71b1ed3543f4ee7655,"[split] Finagle: Remove `Stack{Server,Client}.transformed`

The initial problem was that `ServerBuilder.stack()` did not work with
com.twitter.exp.ThriftMuxServer, which was blocking further testing and
rollout of ThriftMux. The cause of this was that
`ThriftMuxServerImpl.WrappedMuxStackServer` did not override
`StackServer.transformed`, so when the default implementation of
`transformed` was invoked in ServerBuilder it broke ThriftMuxServer.

Remove the `StackServer.transformed` method and centralizing all
server-side Stack-configuration on the `configured` method.

All usages of `StackServer.transformed` are rewritten to use
`configured`. `ServerBuilder.stack()` now works with
com.twitter.exp.ThriftMuxServer, as verified by a new unit test and a
staging deploy of one of Twitter's core services.
override `StackServer.transformed`, so when the default implementation of `transformed` was invoked in ServerBuilder, it broke ThriftMuxServer.

RB_ID=337855"
bmdhacks,2014-04-29 23:42:49,https://api.github.com/repos/twitter/finagle/git/commits/191a77602be120d86ed3652a03f9a747877d33dd,191a77602be120d86ed3652a03f9a747877d33dd,"[split] finagle-core: Fixed a typo in scaladoc https://github.com/twitter/finagle/pull/264

RB_ID=345859"
bmdhacks,2014-04-29 22:10:22,https://api.github.com/repos/twitter/finagle/git/commits/6b442d7f5c067f56b9c5a3fe00561cb1d3e179d7,6b442d7f5c067f56b9c5a3fe00561cb1d3e179d7,"[split]  bump scrooge to 3.14.1-SNAPSHOT

RB_ID=345753
TBR=true"
roanta,2014-04-29 20:14:40,https://api.github.com/repos/twitter/finagle/git/commits/626e2656b3740f48a98d0320dbb0fba92169286b,626e2656b3740f48a98d0320dbb0fba92169286b,"[split] finagle-core: properly scope stats by label in Stack{Client,Server}

Problem

Stats were being improperly scoped when using a client backed by
StackClient.

Solution

Scope the stats receiver based on the label given to StackClient
and StackServer. Since we have two APIs for identifying a finagle
client and server, we have to make a decision which one takes
precedence.

RB_ID=341205"
bmdhacks,2014-04-29 21:49:55,https://api.github.com/repos/twitter/finagle/git/commits/b8d03a63c74adf4d8891877cda56eea80a32da23,b8d03a63c74adf4d8891877cda56eea80a32da23,"[split]  bump finagle to 6.15.1-SNAPSHOT

RB_ID=345717
TBR=true
NO-QUEUE=true"
bmdhacks,2014-04-29 21:07:18,https://api.github.com/repos/twitter/finagle/git/commits/16181a795cdb04b0f00d4990cb12302fb6ae95b0,16181a795cdb04b0f00d4990cb12302fb6ae95b0,"[split]  bump ostrich to 9.5.1-SNAPSHOT

RB_ID=345611
TBR=true
NO-QUEUE=true"
bmdhacks,2014-04-29 20:45:48,https://api.github.com/repos/twitter/finagle/git/commits/d3f9d3de18ddcbf881852d9f37e88b642e7d0983,d3f9d3de18ddcbf881852d9f37e88b642e7d0983,"[split] bump util to 6.15.1-SNAPSHOT

RB_ID=345571
TBR=true
NO-QUEUE=true"
mosesn,2014-04-29 17:27:37,https://api.github.com/repos/twitter/finagle/git/commits/38b334f431916ef5ca0765f4db588a945a47874e,38b334f431916ef5ca0765f4db588a945a47874e,"[split] finagle-core: Fixed DefaultClient to use the base close method Problem @sirmax on github pointed out that DefaultClient still doesn't close the bound dest Var https://github.com/twitter/finagle/issues/260

Solution
close(deadline: Time) instead of close(after: Duration)
Wrote a new test to check for it

Result
closes bound Var properly

RB_ID=339473"
mosesn,2014-04-29 17:29:24,https://api.github.com/repos/twitter/finagle/git/commits/0fcc7cfdfbeae59e9f0d42b59fe2903320ff5e13,0fcc7cfdfbeae59e9f0d42b59fe2903320ff5e13,"[split] util-core: Clarify how Locals get passed Problem I realized today that I didn't understand how Locals worked.  I asked Marius and he explained.

Solution
Updated the docs with what Marius explained.

Result
There's a little more documentation for understanding Locals.

RB_ID=337755"
bmdhacks,2014-04-29 17:20:47,https://api.github.com/repos/twitter/finagle/git/commits/d8ebc110fa18458b2e234e45997b02c273d17915,d8ebc110fa18458b2e234e45997b02c273d17915,"[split] fix a race condition on closing in DefaultServer Adserver was having a problem where hitting /quitquitquit would not shutdown their service. Analysis shows that the service would close the listening socket, but a certain number of open connections would not be closed. Reading the code, I discovered a race condition in the way DefaultServer is closed, and I suspect this is the cause.

RB_ID=343129"
mariusae,2014-04-29 17:19:56,https://api.github.com/repos/twitter/finagle/git/commits/24a114ac27d448bec6c04fb12d77957cb6e3e0cb,24a114ac27d448bec6c04fb12d77957cb6e3e0cb,"[split] SS2: memoize path parses

This should quiesce allocation on changes.

RB_ID=341779"
trustin,2014-04-29 14:57:33,https://api.github.com/repos/twitter/finagle/git/commits/c9c510fff625337991d746d03b0772bb97d16ad1,c9c510fff625337991d746d03b0772bb97d16ad1,"[split]  Remove the references to org.jboss.netty.util.CharsetUtil

Motivation

In preparation for migration from Netty 3 to 4, we should not use
CharsetUtil from Netty 3 but use com.twitter.io.Charsets.

Modification

- Use com.twitter.io.Charsets instead of CharsetUtil wherever possible
- Remove some unused imports and sort imports of the modified files

Result

The half of the step 1 of the Netty 4 migration plan is fulfilled. [1]

[1] https://confluence.twitter.biz/display/CSL/Finagle+Netty+4+migration

RB_ID=337167
TBR=true"
bmdhacks,2014-04-28 23:06:40,https://api.github.com/repos/twitter/finagle/git/commits/b7b4ee92ff991bca807915d1b8ffa1aa5625a24c,b7b4ee92ff991bca807915d1b8ffa1aa5625a24c,"[split] Finagle HTTP: fix basic authentication with special characters

https://github.com/twitter/finagle/pull/262

     Problem
     HTTP basic authentication for users that have special characters
     in their name or password didn't work (for example, joe@host.com)

     Solution
     Changed RequestBuilder.url() to use java.net.URI.getUserInfo
     which correctly performs unescaping instead of java.net.URL.getUserInfo which simply returns raw data

     Result
     Users that have special characters in their name or password can successfully
     authenticate themselves via basic authentication

RB_ID=342229"
mariusae,2014-04-24 22:47:34,https://api.github.com/repos/twitter/finagle/git/commits/eb23dc841289b8d7c5b41fa41ac1f145cca59859,eb23dc841289b8d7c5b41fa41ac1f145cca59859,"[split] ChannelTransport: don't discard outstanding readq elements

Problem

There exists a race between fully reading a queue and failing it due
to some exception (e.g. channel closed). This was observed in
streaming HTTP with Connection: close, where a server will send data
and then immediately close the connection. Thus a race between fully
reading the stream and the server closing the connection.

Solution

Add an option to AsyncQueue.fail to not discard the queue, but instead
wait to fail pollers until any pending elements have been read.

Result

No more races.

RB_ID=342467"
roanta,2014-04-23 19:54:32,https://api.github.com/repos/twitter/finagle/git/commits/b28439e16d3745f9d90b54634c8769e78013b4c8,b28439e16d3745f9d90b54634c8769e78013b4c8,"[split] finagle-doc: fix image size in client stack figure.

RB_ID=340957
TBR=true"
stevegury,2014-04-23 18:44:21,https://api.github.com/repos/twitter/finagle/git/commits/13a77766cfe0cab4feff852145205174404b910a,13a77766cfe0cab4feff852145205174404b910a,"[split] finagle-stats: unregister cumulative gauges when all references have been collected

Problem

MetricsStatsReceiver recently implemented StatsReceiverWithCumulativeGauges.
StatsReceiverWithCumulativeGauges need to unregister gauges (from the underlying metrics
library) that are not strongly referenced anymore.

Solution

Wire the functions, 'deregisterGauge' now is calling 'registry.unregister'

RB_ID=340689"
mosesn,2014-04-22 17:49:03,https://api.github.com/repos/twitter/finagle/git/commits/12aa9e57aa6e85cba40e30ecedd88ee208e78879,12aa9e57aa6e85cba40e30ecedd88ee208e78879,"[split] finagle: Fixes the sbt build Problem http://bigbird.sf.office.twttr.net/job/sbt-continuous-testing/60/console

Solution
Updated util, finagle Build.scalas

Result
sbt-continuous-test no longer fails

RB_ID=339213"
yzhuang,2014-04-21 22:23:02,https://api.github.com/repos/twitter/finagle/git/commits/10bb0efe7ffb0c0d2ffd8b02fbad2f2c158c7ba2,10bb0efe7ffb0c0d2ffd8b02fbad2f2c158c7ba2,"[split] Upgrade metrics, which pulls in java 7 jars.

RB_ID=338801"
stevegury,2014-04-19 02:23:17,https://api.github.com/repos/twitter/finagle/git/commits/48f8fea1847818310eb7d92c70982a41f0039f9b,48f8fea1847818310eb7d92c70982a41f0039f9b,"[split] finagle-stats: upgrade to the latest version of metrics

Problem
The version of c.t.c.metrics currently used is old and doesn't contains all
the new optimizations.

Solution
Bump the version to 0.0.24 (the one with the lazy buffer allocation)

RB_ID=337833
TBR=true"
stevegury,2014-04-19 02:21:33,https://api.github.com/repos/twitter/finagle/git/commits/435eb11a6b6a42c7ec058f0da919effd20f272e6,435eb11a6b6a42c7ec058f0da919effd20f272e6,"[split] finagle-stats: Enable cumulative gauges in MetricsStatsReceiver

Motivation:
MetricsStatsReceiver was lacking support for cumulative gauges.
Indeed there's a few usage of that in finagle, when two code path create
a gauge with the same name, they're summed during the collection.

Modifications:
- MetricsStatsReceiver now inherits StatsReceiverWithCumulativeGauges
- Port Spec tests to scalatest
- Add a new test for cumulative gauges
- Avoid sorting the stats on ""non-pretty-printed"" collection

Result:
Adding two gauges with the same name results in one gauge, its value is the sum
of the two previous one.

RB_ID=326301"
bmdhacks,2014-04-18 23:38:49,https://api.github.com/repos/twitter/finagle/git/commits/f9217fa353ce49f831764675daa4d88d4b7a0f1a,f9217fa353ce49f831764675daa4d88d4b7a0f1a,"[split] Move mysql testing out of finagle-mysql

Problem:
In our attempts to move finagle into aviary, I discovered a library for
testing finagle-mysql that's defined in the tests section.  We do not
publish finagle testing jars, so when finagle goes to jars, this library
will break.

Solution:
Moving these classes (which actually aren't used or tested by
finagle-mysql) into their own project so that they can stay in birdcage
and perhaps be moved later when the dependees are all in aviary.

RB_ID=335581"
stevegury,2014-04-18 21:32:52,https://api.github.com/repos/twitter/finagle/git/commits/5fdc9b2efd5e9dde59490fbe2bb7dcc0a393d354,5fdc9b2efd5e9dde59490fbe2bb7dcc0a393d354,"[split] finagle: Add a new sbt target to publish locally to m2

Problem

Publishing the maven-scrooge-plugin requires having access to the latest finagle.
Every time we publish, we need to wait for the finagle release to be available on Sonatype.

Solution

Rather than waiting for the release to be available on Sonatype, this new sbt target
installs it locally.

Result

./sbt +publish-m2 publish the jars in the local maven repository

RB_ID=337149"
mariusae,2014-04-18 17:14:58,https://api.github.com/repos/twitter/finagle/git/commits/b19d6f4f8b575354ea1356844f3b3a07fadbd204,b19d6f4f8b575354ea1356844f3b3a07fadbd204,"[split] serverset namer: synthesize nodes for each endpoint

Problem

Some serversets make use of endpoints, e.g. cuckoo's http endpoint.
These are inaccessible through Wily.

Solution

Synthesize nodes for each endpoint, using the character ':' to
indicate that the endpoint name follows. Endpoints can now be
accessed; for example

	/s/cuckoo/read:http

(Note that there is nothing special about this path -- we have just
synthesized nodes through a convention.)

(Joint work with ver@)

RB_ID=336619"
mariusae,2014-04-17 19:36:24,https://api.github.com/repos/twitter/finagle/git/commits/0183c708ed69304ef5179d3fbfb78f8f8007a8df,0183c708ed69304ef5179d3fbfb78f8f8007a8df,"[split] Document names and naming in finagle.

RB_ID=334077"
stevegury,2014-04-17 21:03:17,https://api.github.com/repos/twitter/finagle/git/commits/023cf17f819277f5a82f1d67ebaa87dd20e4853c,023cf17f819277f5a82f1d67ebaa87dd20e4853c,"[split] finagle: Bump version of scrooge plugin in sbt project.

Bump version of scrooge plugin in sbt project.

RB_ID=336525
NO-QUEUE=true"
roanta,2014-04-17 18:29:39,https://api.github.com/repos/twitter/finagle/git/commits/1b81c6437f1fac32434f42e99b05ddf08fc02a07,1b81c6437f1fac32434f42e99b05ddf08fc02a07,"[split] finagle-core: Improve the failure for cancelled requests in the ClientDispatcher

Problem

The GenClientDispatcher reflected a `WriteException` when an upstream
future was cancelled. This caused retry policies to have to special
case it.

Solution

Change the exception type to a Failure.InterruptedBy, which is more
accurate.

RB_ID=334163"
mariusae,2014-04-17 17:18:19,https://api.github.com/repos/twitter/finagle/git/commits/8f97ec72511cb97ecd7e9318e4d4a427aeb0cf79,8f97ec72511cb97ecd7e9318e4d4a427aeb0cf79,"[split] LocalScheduler: add LIFO option

Problem

(This problem was described to me by Rohith, as observed in the
adserver.) With current FIFO scheduler, queued work takes presedence,
which can have a destructive effect on network roundtrip times.
Imagine the following scenario:

	def handle(req: Req) = {
	  cache.lookup(key) flatMap { _ => longRunningComputation() }
	  service(req) flatMap { _ => ... }
	}

here, we eagerly call into each service. In reality, due to
pool-checkouts, etc.; actually writing the request to the network will
be queued up in the scheduler. However, the timeout filter will have
scheduled its timeout eagerly (it is further up the stack).

Thus, the longRunningComputation() can prevent the network call from
making it out quickly, and this is exacerbated by the fact that the
timeout has already been scheduled.

Solution

This is an experiment to try out LIFO scheduling. It prevents the
above-described scenario since the future work will get ahead of the
the previously scheduled work. It arguably also makes more intuitive
sense since scheduling bears closer resemblance to the lexical
arrangement of work.

Result

Faster RPC roundtrips for the adserver (and possibly similar
services); fewer timeouts.

RB_ID=332481"
mariusae,2014-04-17 17:15:10,https://api.github.com/repos/twitter/finagle/git/commits/92334b2c03258c0d01b89eddbf60bcc7b4f7e4ea,92334b2c03258c0d01b89eddbf60bcc7b4f7e4ea,"[split] Fix up NameTree syntax documentation as spotted by Jake.

RB_ID=335769"
mariusae,2014-04-16 20:36:47,https://api.github.com/repos/twitter/finagle/git/commits/34f63e99830700f33f7e30802b8e079d66d89e4f,34f63e99830700f33f7e30802b8e079d66d89e4f,"[split] NameTree, Path, Dtab: document concrete syntax

RB_ID=335191"
tnarg,2014-04-16 18:18:08,https://api.github.com/repos/twitter/finagle/git/commits/7c846a8f8c5cc7ebec7889988964aed2a12281ee,7c846a8f8c5cc7ebec7889988964aed2a12281ee,"[split] finagle-serversets: Replaces Op with Activity Problem

Op is essentially a duplicate of Activity (though it predates it)

Solution

Use Activity instead of Op

Result

Identical functionality without duplicating code in util-core

RB_ID=334547"
roanta,2014-04-16 17:35:23,https://api.github.com/repos/twitter/finagle/git/commits/4d38e380355d92764a580f0c2e94eccce9107f5a,4d38e380355d92764a580f0c2e94eccce9107f5a,"[split] finagle-mysql: implement builder using StackClient.

Problem

Giving the new APIs a test drive by converting the mysql
client to use them. There is also demand to configure the mysql
client pool. The high watermark is still fixed to 1 until
we add transaction support in the rich api. However, for users
who aren't using transactions, it should be possible to configure
the pool.

Solution

Implemented the codec in terms of a `StackClient`. Make the DefaultPool
companion object accessible outside of the finagle package.

RB_ID=333159"
mariusae,2014-04-16 15:38:07,https://api.github.com/repos/twitter/finagle/git/commits/75c55781139722f54a7e97f6fb3db54c2b049ddd,75c55781139722f54a7e97f6fb3db54c2b049ddd,"[split] Make com.twitter.finagle.Name an ADT

Problem

There is currently a proliferation of Name implementations which are
related in all sorts of convoluted ways. This is accidental complexity
due to the fact that the Name interface, being part of Finagle's
public API, remains sacrosanct -- at least for the moment.

Solution

This change tries to simplify things a little by making Name a proper
ADT with two variants: Name.Bound describes a bound address; Name.Free
is an unbound Name whose resolution is determined by a Namer. This
makes the relationships clear, and requires only a small API change.

It also makes clear that, in intermediate computation, there are two
levels of dynamism: the tree itself is dynamic; its nodes are
independently dynamic. There is still confusion between the
relationship of Var.{Neg, Pending, etc..} with that of
Activity.Ok(NameTree.{Neg, Empty}) | Activity.Pending, etc. This is
unfortunate -- ideally, we'd be able to pull all of that out of Addr,
and model it entirely as NameTrees. But this is about as far we can go
without making major API changes.

It also has a simplifying effect on Namer signatures. Namely, binding
is now more explicit:

	def lookup(path: Path): Activity[NameTree[Name]]
	def bind(tree: NameTree[Path]): Activity[NameTree[Name.Bound]]

and it is clear whence dynamism is derived.

I also took the opportunity to unify some of the naming (heh.) around this.
In particular, InterpretingFactory is now BindingFactory.

Result

Nicer API; no functionality changes.

RB_ID=330105
TBR=true"
roanta,2014-04-12 20:14:31,https://api.github.com/repos/twitter/finagle/git/commits/1bf10869dd48e85a61851fb19bea69bf98f968c3,1bf10869dd48e85a61851fb19bea69bf98f968c3,"[split] finagle-core: curry `newDispatcher` in Stack{Client, Server}

Problem

While working with the new Stack API on a finagle sub project,
it became apparent that we often need to configure the dispatcher
with parameters in Stack.Params.

Solution

Make the `newDispatcher` function in Stack{Client,Server} a curried
function that takes Stack.Params.

RB_ID=331139"
evnm,2014-04-12 20:21:43,https://api.github.com/repos/twitter/finagle/git/commits/371431a5e618b9e9a7cbf5b4fc0767297843c611,371431a5e618b9e9a7cbf5b4fc0767297843c611,"[split] scrooge-ostrich: Add a flag for enabling ThriftMux

Problem

In order to ease the burden of rolling out Mux on Thrift servers, we'd
like to make protocol choice configurable via command-line flags.

Solution

For configuration framworks that use
com.twitter.scrooge.OstrichThriftServer and don't expose the underlying
ServerBuilder instance, we provide a `-com.twitter.scrooge.useThriftMux`
flag that will enable usage of the ThriftMux protocol.

RB_ID=331221"
mariusae,2014-04-11 23:21:42,https://api.github.com/repos/twitter/finagle/git/commits/db78a7780f8e1ef97e86f4639d256aef54fa8411,db78a7780f8e1ef97e86f4639d256aef54fa8411,"[split] finagle-doc: improved rastering of logos

The current logos aren't rasterized very well. I think whoever did it
resized bitmaps. However, we have the original vector material!

% convert -trim -density 300 /Users/marius/Downloads/finagle2.eps -resize 180x150 logo_small.png
% convert -trim -density 300 /Users/marius/Downloads/finagle2.eps -resize 361x300 logo_medium.png
% convert -trim -density 300 /Users/marius/Downloads/finagle2.eps -resize 1024x1024 logo_original.png

RB_ID=332751
NO-QUEUE=true"
evnm,2014-04-11 03:31:40,https://api.github.com/repos/twitter/finagle/git/commits/95e7c257f316f0e1d6249b1e3282c60f5e1467b0,95e7c257f316f0e1d6249b1e3282c60f5e1467b0,"[split] finagle-core: Retry on com.twitter.util.TimeoutException

Problem

RetryPolicy.TimeoutAndWriteExceptionsOnly currently retries on
com.twitter.finagle.TimeoutException, but not c.t.util.TimeoutException.
This has lead to confusion among service owners who don't understand why
a RetryPolicy whose name mentions TimeoutExceptions doesn't retry on the
util version.

Solution

Patch the RetryPolicy to return true on c.t.util.TimeoutException.

RB_ID=331877"
mariusae,2014-04-10 23:35:01,https://api.github.com/repos/twitter/finagle/git/commits/9f3d3de1fb80ecb552b933664c27ffffbc4276c0,9f3d3de1fb80ecb552b933664c27ffffbc4276c0,"[split] ForkJoinScheduler: group tasks in local scheduler; split when blocking

Problem

The current ForkJoin scheduler forks all tasks locally. This typically
leads to very fine-grained work being scheduled directly by the FJ
pool.

Solution

We introduce a form of coarsening by using a
com.twitter.concurrent.LocalScheduler to schedule thread-local tasks.
During managed blocking, we flush the local schedule by forking their
tasks individually. This allows us to coarsen the work and prevent
over-stealing.

Results

Hopefully better performance on a typical Finagle service.

RB_ID=330121"
sslavic,2014-04-10 22:25:15,https://api.github.com/repos/twitter/finagle/git/commits/491598bd698e7e1cda1481442078707c0795be41,491598bd698e7e1cda1481442078707c0795be41,"[split] Fixed a typo in scaladoc

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=331511"
mosesn,2014-04-10 22:59:49,https://api.github.com/repos/twitter/finagle/git/commits/6a06ab4ddf193fdef1893037ebd0aebcc723ddcf,6a06ab4ddf193fdef1893037ebd0aebcc723ddcf,"[split] bump scrooge to 3.13.3-SNAPSHOT

RB_ID=332303
TBR=true"
mosesn,2014-04-10 22:12:42,https://api.github.com/repos/twitter/finagle/git/commits/de7495625153d9332ec5a759faabc6bf057c17b9,de7495625153d9332ec5a759faabc6bf057c17b9,"[split] finagle-http: Fix the failing EndToEndTest Problem finagle-http had a failing test, so we couldn't publish with sbt

Result
tests pass, we can publish

RB_ID=331495"
roanta,2014-04-10 19:46:54,https://api.github.com/repos/twitter/finagle/git/commits/f8491a2b9e69f81686c68d4053c80c08aab0f706,f8491a2b9e69f81686c68d4053c80c08aab0f706,"[split] finagle-doc: new content, more comprehensive toc

Problem

Part of our effort to continually improve our docs. The
sphinx docs need to be more comprehensive.

Solution

This patch proposes a more approachable toc and adds
some new content on how to construct finagle clients
and servers using the new APIs. Finally, added a section
on finagle-thrift usage in Protocols.rst.

RB_ID=330735"
mosesn,2014-04-10 20:28:02,https://api.github.com/repos/twitter/finagle/git/commits/fa40c5f8eb0320b185d5d3d5f72e1b358ae9dbe1,fa40c5f8eb0320b185d5d3d5f72e1b358ae9dbe1,"[split] bump finagle to 6.14.1-SNAPSHOT

RB_ID=332035
TBR=true"
mosesn,2014-04-10 00:36:44,https://api.github.com/repos/twitter/finagle/git/commits/8df28b77aa2d8b63cc99f86ea73ce119c151b244,8df28b77aa2d8b63cc99f86ea73ce119c151b244,"[split] bump util to 6.14.1-SNAPSHOT

RB_ID=331395
TBR=true"
mariusae,2014-04-09 16:38:28,https://api.github.com/repos/twitter/finagle/git/commits/49aba70f3250216f5e7778aae531025170c1ae53,49aba70f3250216f5e7778aae531025170c1ae53,"[split] Introduce 2-level caching in the name interpreter

Motivation

The current one-level caching scheme for interpretations of names is
too coarse grained. Since it is done on a Namer basis, any time there
is any Dtab change at all, a whole new set of clients may be created.
This causes latency issues when using Dtab overrides in servers with a
large number of clients.

Modifications

We change Namer to resolve down to Names instead of Paths that are
interpreted specially. We treat these names as a canonical
representation of a target. We separate binding and evaluation of
NameTrees.

We then introduce a 2-level caching scheme that maintains a client per
Name-set, and a client per Namer. This allows us to share clients at
the granularity of the Name, and to avoid NameTree evaluation at the
granularity of the Namer.

Result

Overrides are fast as they don't introduce additional client creations
due to the coarse nature of the current caching scheme.

The manner in which the change was done -- separating NameTree binding
from evaluation -- requires an eager treatment of NameTree binding.
This in turn means we need to fully explore all branches of Alt-nodes
before evaluating the resulting tree. In our current production
scenarios, that shouldn't matter, but may for future use cases. This
design decision should be reconsidered at this time.

RB_ID=325867
TBR=true"
luciferous,2014-04-09 00:33:01,https://api.github.com/repos/twitter/finagle/git/commits/e0132627c075a697a5b44863e2c9d29375c92bc5,e0132627c075a697a5b44863e2c9d29375c92bc5,"[split] unresolved promises in client dispatcher

buf is updated in a closure and outside of the synchronized block,
sometimes resulting in an unresolved done.

This patch ensures that subsequent calls to read will only be processed
after the current read operation has finished reading from the
underlying transport.

RB_ID=329993"
evnm,2014-04-09 00:09:05,https://api.github.com/repos/twitter/finagle/git/commits/181441c94a92d81659280e83cee095b9f82c94d8,181441c94a92d81659280e83cee095b9f82c94d8,"[split] Finagle: README refresh

Problem
Finagle's README is unreasonably long and outdated. The parts that are
still relevant and correct are duplicated by the user guide. The README
should be as simple as possible and delegate all actual documentation to
the user guide and API reference.

Solution
98% of the current README's content is deleted in favor of a summary of
Finagle, pointers to further documentation and support channels, and a
blurb about how to contribute to the project.
 deleted in favor of a summary of Finagle, pointers to further documentation and support channels, and a blurb about how to contribute to the project. I also replaced the ""medium""-sized logo for the small one. IMO, the current image overly dominates the page.

RB_ID=329933"
mosesn,2014-04-09 00:09:29,https://api.github.com/repos/twitter/finagle/git/commits/a169da11a4a8c26ea43db212c3eef4690b795549,a169da11a4a8c26ea43db212c3eef4690b795549,"[split] finagle-core: Fix a Netty3Timer capitalization bug Problem Some projects get NoClassDef found error when run with pants.  This is concerning because they compiled successfully, even with all of the right dependencies (building off of master).

Solution
Renamed netty3Timer to Netty3Timer (a typo)

Result
We no longer get the NoClassDef error.

RB_ID=330261
NO-QUEUE=true"
evnm,2014-04-09 00:00:05,https://api.github.com/repos/twitter/finagle/git/commits/63d4690833f2c7e796c9360cb4dbe3680a03d23f,63d4690833f2c7e796c9360cb4dbe3680a03d23f,"[split] finagle-core: Use JDK6-friendly RuntimeException constructor in Failure

The recently-added class com.twitter.finagle.Failure uses a JDK7-only
constructor when extending RuntimeException. We have to maintain Java 6
support for the time-being. In this change, we use a different constructor
and mix in com.twitter.finagle.NoStacktrace.

RB_ID=330281
TBR=true
NO-QUEUE=true"
roanta,2014-04-08 21:17:54,https://api.github.com/repos/twitter/finagle/git/commits/24c8eb425dd8c77d371efe1f1ed3e7b606b675df,24c8eb425dd8c77d371efe1f1ed3e7b606b675df,"[split] finagle-core: introduce Failure interface (internally)

Problem

Finagle exception semantics were complicated by a deep class
hierarchy. What's more, finagle leaked a lot of exceptions
that were really implementation details and should have been handled
internally.

more: https://github.com/twitter/finagle/issues/139

Solution

This patch introduces a failure interface which is flat. Failure
types are differentiated via custom extractors. The interface is
initially private to finagle and should be made public once we
are more confident with in the API.

RB_ID=277163"
roanta,2014-04-08 17:07:25,https://api.github.com/repos/twitter/finagle/git/commits/2ad1cdda1ca0a25b33c73e747ef3781ae17ac905,2ad1cdda1ca0a25b33c73e747ef3781ae17ac905,"[split] finagle-mysql: proper prepared statement support.

Problem

Mysql prepared statements are inherently stateful.
They allocate state on the server-side per connection.
This complicates things since finagle modules assume a stateless
model (ex. finagle's connection pool).

Solution

This patch pushes the allocation management down into a
finagle-mysql connection. Requests are now indiscriminately
multiplexed over the connection pool. This means that we can
allocate the same prepared statement over multiple connections.
The lifecycle of the statement is managed by a small lru per
connection. In the future, we can explore introducing more sophisticated
allocation (ex. connection affinity).

RB_ID=242767
TBR=true"
roanta,2014-04-07 21:59:22,https://api.github.com/repos/twitter/finagle/git/commits/74dee9285fae20ba336efda365f4f92ade1cde70,74dee9285fae20ba336efda365f4f92ade1cde70,"[split] finagle-core: make StackClient symmetric to StackServer

Problem

StackClient composed more cleanly into a Stack[ServiceFactory]
than a StackServer. However, this made it more opaque and potentially
unsafe as there was no way to verify that a proper codec was
defined.

Solution

This change makes StackClient an abstract class which requires
a Transporter and Dispatcher. This is symmetric to a StackServer.
Additionally, shared params between a StackClient and StackServer
have been factored into appropriate companion objects.

RB_ID=325993"
stevegury,2014-04-05 03:31:31,https://api.github.com/repos/twitter/finagle/git/commits/ae764000ad0665047454f56b1743a74a02c66195,ae764000ad0665047454f56b1743a74a02c66195,"[split] finagle-benchmark: Fix caliper failures due to new guava

Motivation
The recent version upgrade of guava (from 15 to 16) broke all our micro-benchmarks
because the (old) caliper library that we are using requires guava (ver<=15).

Modifications
- Force usage of guava 15 (in maven and pants)
- Update StatsReceiver benchmark
- Disable memory measuring for benchmarks that have non constant memory allocation pattern
- Clean-up inconsistent namespace

Result
All micro-benchmarks are now finishing without errors.

RB_ID=326239"
roanta,2014-04-04 20:57:09,https://api.github.com/repos/twitter/finagle/git/commits/a9a408f7e568a7269ef7489031d85bd8c470bac8,a9a408f7e568a7269ef7489031d85bd8c470bac8,"[split] finagle-doc: refresh client stack docs

RB_ID=322919"
evnm,2014-04-04 19:41:01,https://api.github.com/repos/twitter/finagle/git/commits/42f6f5da564f267a10c68d4d0cd9df93626147df,42f6f5da564f267a10c68d4d0cd9df93626147df,"[split] finagle-core: Disable Monitor usage of in Netty3Listener

Problem
A recent change to ServerBuilder introduced unexpected behavior caused by
SourceTrackingMonitor being applied within Netty3Listener and exposing
ClosedChannelExceptions that previously occurred silently. This led to log
pollution and confusion among service owners.

com.twitter.finagle.netty3.ServerBridge#exceptionCaught already logs in certain
cases, so the monitor in the Netty pipeline is arguably redundant. Granted, this
inline logging goes to FINEST and WARNING, so it won't be seen by most deployed services.

Solution
We've never heard reports that the previously-set NullMonitor caused problems, so
we think it's acceptable to disable the Monitor usage within
Netty3Listener.scala. The `monitor` constructor argument is maintained for API
compatibility, but unused within the body of the class.

Result
We restore the previous behavior of not escalating Netty channel exceptions to
the SourceTrackingMonitor.

RB_ID=326933"
evnm,2014-04-04 19:04:19,https://api.github.com/repos/twitter/finagle/git/commits/fae5aedf8d0e4e65fd8ad76610cba038511572d9,fae5aedf8d0e4e65fd8ad76610cba038511572d9,"[split] finagle-core: Enforce usage of c.t.finagle.util.DefaultLogger

Problem
It was recently pointed out that there are a few instances in finagle-core where
we do `Logger.getLogger(""finagle"")` rather than use the stock DefaultLogger. It
would be preferable to standardize on DefaultLogger, which scopes the logger to
""com.twitter.finagle"".

Solution
Replace said instances with DefaultLogger.

Result
A consistent ""root"" scope for Finagle-internal log output.

RB_ID=326687"
evnm,2014-04-04 00:14:03,https://api.github.com/repos/twitter/finagle/git/commits/bfb3ef8522bbe3e913ecb74d5168e00328b6f63a,bfb3ef8522bbe3e913ecb74d5168e00328b6f63a,"[split] Finagle: Add server-side Stack wiring for Mux and ThriftMux

Problem:
In order to roll out ThriftMux, we need to be able to plug Mux into existing
services that use ServerBuilder.

Solution:
Add com.twitter.finagle.mux.exp.ThriftMuxStackServerFactory, which can be
passed directly to `StackBuilder.stack()`.

Result:
We reduce the barrier of entry for testing server-side ThriftMux to a one-line
change.

RB_ID=322125"
mariusae,2014-04-03 03:39:40,https://api.github.com/repos/twitter/finagle/git/commits/b08ebfb98a3fe376d1ca70e72bfb9f93e700a4a4,b08ebfb98a3fe376d1ca70e72bfb9f93e700a4a4,"[split] Parse names into trees; introduce separate evaluation.

Currently, names are flat -- sets of socket addresses -- leaving no
room for interpretation in the client. For example, a client might
wish to fail-over to an alternative name should the active destination
fail; we may also wish to support proportional balancing across
several zones.

This change represents names as trees--type NameTree[T] denotes name
trees with T-typed leaves--whose interior nodes may be composed
concurrently (representing a union) or as a set of alternatives (in
order of preference).

As it turns out, it is possible to encode our current abstract naming
mechanisms using name trees. In particular, Dtabs become a sort of
context under which name trees are bound. Such contexts are called
Namers, and provide an expansive lookup function: Path =>
NameTree[Path]. Binding relative to a namer is thus a process of
reaching a fixpoint while looking up paths using that namer. Dtab is
reimplemented as Namer.

Once a NameTree[Path] is fully bound--i.e. it has reached a fixpoint--
the NameTree[Path] is *evaluated* in order produce a concrete,
flattened set of addresses to which requests may be dispatched.
Currently evaluation follows a simple logic: the first nonempty
alternative is picked while unions are preserved.

Since we cannot resolve a Path directly into an Internet address, we
interpret paths beginning with /$/inet/ specially. The residual path
following denotes the IP host/port. (Technically, a port is not an IP
property, but we paper over this detail here, since we aim at least
currently to support only TCP and UDP addressing.)

We see that NameTrees act as a unification mechanism: Dtabs are
implemented as Namers and its semantics encoded directly into
NameTrees (using alternative composition). Furthemore, NameTrees
naturally tackle residual paths, which were only partially supported
previously, without introducing any further concepts or syntax. The
whole process of binding and evaluating an abstract name is tackled
entirely using NameTrees, using exactly one namespace.

Path names also have a concrete syntax with grammar

    tree       ::= name
                   weight '*' tree
                   tree '&' tree
                   tree '|' tree
                   '(' tree ')'

    name       ::= path | '~' | '$'

    path       ::= '/' labels

    labels     ::= label '/' label
                   label

    label      ::= litlabel | hexlabel

    hexlabel   ::= (\\x[a-f0-9][a-f0-9])+

    litlabel   ::= [0-9A-Za-z:.#$%-]+
    weight     ::= -?([0-9]++(\.[0-9]+*)?|[0-9]+*\.[0-9]++)([eE][+-]?[0-9]++)?[fFdD]?

As do Dtabs, which extend the above productions with

    dtab       ::= dentry ';' dtab | dentry
    dentry     ::= path '=>' tree

Some implementation notes:

 *	I had originally wanted to simply replace the 'Name'
	abstraction, but decided this would break too much. I think
	that with the current change, we can get away without a major
	version bump. (Since Dtabs, etc. were previously
	private[twitter].) It is, however, more complex than it needs
	to be because of it.

 *	I had weights, but took them out for now -- I'm still undecided
	on whether to keep these at the name level (so that evaluation
	results in a tree) or flatten them out as is done now in zk2.

 *	Activity is, in fact, a monad transformer over an 'Op' monad.
	I had the code arranged like this initially, but decided that
	this is simpler and more understandable, especially in the
	absence of more monad-generic code in util. If you're curious,
	though, you can see what it looks like:
		https://gist.github.com/mariusaeriksen/7343968dd75929458519

RB_ID=286441
TBR=true"
sprsquish,2014-04-02 17:08:46,https://api.github.com/repos/twitter/finagle/git/commits/b8e0667287653684d1801451ea8fc3039f14c264,b8e0667287653684d1801451ea8fc3039f14c264,"[split] bump scrooge generator version

RB_ID=325085
TBR=true"
roanta,2014-04-02 02:08:41,https://api.github.com/repos/twitter/finagle/git/commits/f03cd3b218812f729c069c361d53abf73424df6c,f03cd3b218812f729c069c361d53abf73424df6c,"[split] finagle-core: thread through NullReporterFactory in ServerBuilder.

RB_ID=324033"
trustin,2014-04-01 23:51:26,https://api.github.com/repos/twitter/finagle/git/commits/c2c9045f46a28323424e55a20b3226a6d3e04321,c2c9045f46a28323424e55a20b3226a6d3e04321,"[split] Add com.twitter.io.Charsets and replace the use of org.jboss.netty.util.CharsetUtil

Motivation:

As a part of the first step for Netty 3 -> 4 migration, we should not
import nor use CharsetUtil.

Related issue: NETTY-18

Modifications:

- Introduce a new object 'com.twitter.io.Charsets' that replaces
  'org.jboss.netty.util.CharsetUtil'.
- Replace the use of CharsetUtil with Charsets in finagle and util

Result:

No classes under finagle and util use CharsetUtil:

  $ grep -rFl CharsetUtil finagle util | grep -vP '\.class$'
  finagle/doc/src/sphinx/code/client-server-anatomy/Netty3.scala

Note that Netty3.scala is an example that explains how Netty 3 works,
so I didn't change it.

RB_ID=320575"
roanta,2014-04-01 17:57:59,https://api.github.com/repos/twitter/finagle/git/commits/3d1a45152c9c17070cac1c40263781e2848a23cf,3d1a45152c9c17070cac1c40263781e2848a23cf,"[split] scrooge: bump scrooge to 3.13.2-SNAPSHOT

RB_ID=324019
TBR=true"
bmdhacks,2014-03-31 17:39:09,https://api.github.com/repos/twitter/finagle/git/commits/1343fbc37f8d6a6d1a7b929fb07679f7527e83d6,1343fbc37f8d6a6d1a7b929fb07679f7527e83d6,"[split] finagle-zipkin: Include service name in all traces

Motivation:
This was prompted by a bug report from public finaglers reporting that thriftmux traces all queries as the Unknown service.
But deeper than that, the service name is tied to the RPC method which happen at different layers of the stack.  There are lots of scenarios where services trace as ""Unknown""

Modifications:
Annotating the service name is broken off from annotating the RPC method.  Also, the service name is now passed in to the tracing filter because without it tracing doesn't really work.

Result:
Service names for everybody!

RB_ID=321823"
roanta,2014-03-28 22:22:10,https://api.github.com/repos/twitter/finagle/git/commits/240af45253c3d1286383e7afdb5e496134845f9e,240af45253c3d1286383e7afdb5e496134845f9e,"[split] finagle-core: remove redundant Netty3Timer param def

RB_ID=322185"
roanta,2014-03-27 21:15:57,https://api.github.com/repos/twitter/finagle/git/commits/042a2ca388d0a97e4dd6742e4e02537d6208a9af,042a2ca388d0a97e4dd6742e4e02537d6208a9af,"[split] finagle-core: implement ServerBuilder in terms of StackServer.

Motivation:
Decrease barrier to entry for mux (and thriftmux) by making it
possible to use from ServerBuilder. This requires being able to
pass in a StackServer to ServerBuilder.

Modification:
The crux of the change is a new method in ServerBuilder `stack` which
allows for a StackServer to be injected.

RB_ID=313995"
mariusae,2014-03-26 22:18:47,https://api.github.com/repos/twitter/finagle/git/commits/e9cf25e61b3fdd3a57f570a6a997ec3d57d616e3,e9cf25e61b3fdd3a57f570a6a997ec3d57d616e3,"[split] finagle-core: use DefaultLoadBalancerFactory

A previous change:

	commit 538abb7f11473e332f8395ebfb2becc6e1130bc6
	Author: Ruben Oanta <roanta@twitter.com>
	Date:   Wed Mar 26 18:03:06 2014 +0000

made use of the HeapBalancerFactory explicitly. This breaks the
-com.twitter.finagle.loadbalancer.defaultBalancer flag.

RB_ID=320031"
mariusae,2014-03-26 20:13:36,https://api.github.com/repos/twitter/finagle/git/commits/a310082cb97b701bbf63d15cdf0d62cb75699572,a310082cb97b701bbf63d15cdf0d62cb75699572,"[split] Ketama memcache: accept weighted addresses

The Ketama memcache implementation looks specifically for inet
addresses -- it has to, since it has to have something to hash -- but
this precludes any weighted addresses that might be passed in.

We introduce new matchers for weighted address which are liberal:
absent a weight, it sets the weight to 1. We then use this in the
Ketama implementation.

In the future, we may consider propagating these weights all the way
down, since Ketama itself has a concept of weighting.

RB_ID=307519"
mariusae,2014-03-26 19:41:54,https://api.github.com/repos/twitter/finagle/git/commits/cfd26f048b00b52ffaf9ffe7392c988df630e59c,cfd26f048b00b52ffaf9ffe7392c988df630e59c,"[split] finagle-core: introduce a flag for debug tracing

It's sometimes very useful to ensure that *all* traces are printed.
Mostly during debugging sessions. This introduces a flag for just
this.

	% pants/script $tw/junk/httpclient.scala -com.twitter.finagle.tracing.debugTrace=true
	0326 18:00:06.786 62ac970a1c537366.62ac970a1c537366<:62ac970a1c537366] Message(Interpreter cache miss with namer OrElse(Dtab(/zk=>/$/com.twitter.serverset;/srvns#=>/$/com.twitter.srvns;/srvns=>/srvns#/prod;/s#=>/$/com.twitter.namerv1;/s#=>/$/com.twitter.namernsv1;/srv#=>/$/com.twitter.srv;/srv=>/srv#/prod;/s=>/srv/local),com.twitter.finagle.Namer$anon$1@1daa476d): 809.milliseconds+393.microseconds)
	0326 18:00:06.805 6485b580393ab0ed.6485b580393ab0ed<:6485b580393ab0ed] BinaryAnnotation(finagle.version,?)
	0326 18:00:06.812 6485b580393ab0ed.6485b580393ab0ed<:6485b580393ab0ed] ServerAddr(/0.0.0.0:8000)
	0326 18:00:06.816 6485b580393ab0ed.6485b580393ab0ed<:6485b580393ab0ed] ClientAddr(/172.25.129.83:62598)

RB_ID=319617"
roanta,2014-03-26 18:03:06,https://api.github.com/repos/twitter/finagle/git/commits/d44ffe57ad8fcaa4e2ef96f5a366dd621e527c72,d44ffe57ad8fcaa4e2ef96f5a366dd621e527c72,"[split] finagle-core: Introduce StackServer

Motivation:
This is part of our efforts to have a uniform and flexible
stack representation for finagle clients and servers. This also
paves the way for implementing mux in ServerBuilder.

Modification:
- Implement the default finagle server stack in `StackServer`.
- Aggregate common elements shared between clients and servers.
- Improve scaladoc for new modules.

Result: StackServer can successfully listen and serve.

RB_ID=299493"
kevinoliver,2014-03-24 22:21:30,https://api.github.com/repos/twitter/finagle/git/commits/ad09c59ff7239a9fe2de7e7d571e09712fba9a43,ad09c59ff7239a9fe2de7e7d571e09712fba9a43,"[split] finagle-thrift: workaround libthrift TBinaryProtocol.writeBinary bug

RB_ID=317455"
stevegury,2014-03-24 21:42:15,https://api.github.com/repos/twitter/finagle/git/commits/1ad4144cd8cdfb7f77a02315da548ae70d8523ba,1ad4144cd8cdfb7f77a02315da548ae70d8523ba,"[split] release scrooge version 3.13.0

RB_ID=317519
TBR=true"
mariusae,2014-03-24 21:26:28,https://api.github.com/repos/twitter/finagle/git/commits/3632229f3c5b109bfc941ef54a208bd56b8a8830,3632229f3c5b109bfc941ef54a208bd56b8a8830,"[split] Zk2: deliver events serially in their own thread We need to make sure events are delivered in order for accurate stabilization. Without this, it is possible to receive events out of order, causing stabilization to become overly conservative.

See also:
	CSL-824

RB_ID=317115"
stevegury,2014-03-24 20:48:59,https://api.github.com/repos/twitter/finagle/git/commits/dd4c1741571217edf3487efc726f388b1b96f4b6,dd4c1741571217edf3487efc726f388b1b96f4b6,"[split] release finagle version 6.13.1

RB_ID=317383
TBR=true
NO-QUEUE=true"
stevegury,2014-03-24 20:22:43,https://api.github.com/repos/twitter/finagle/git/commits/a32d10a6cd9733afb87c4ba0f00fe778df426445,a32d10a6cd9733afb87c4ba0f00fe778df426445,"[split] release ostrich version 9.4.2

RB_ID=317283
TBR=true
NO-QUEUE=true"
stevegury,2014-03-24 19:13:08,https://api.github.com/repos/twitter/finagle/git/commits/bb9b7d72a1152c5d66dd0f00b3d2f6decd621144,bb9b7d72a1152c5d66dd0f00b3d2f6decd621144,"[split] release util version 6.13.2

RB_ID=317265
TBR=true
NO-QUEUE=true"
stevegury,2014-03-24 16:14:18,https://api.github.com/repos/twitter/finagle/git/commits/ef46de97381e3c11459b3ae8f63e4b47c6a60e66,ef46de97381e3c11459b3ae8f63e4b47c6a60e66,"[split] Update 3rdparty library versions to match with the one in science

Maven (TFE) use a different resolution mechanism than pants (ivy2), so this is
potentially important that those versions match.

RB_ID=316501"
evnm,2014-03-21 22:32:08,https://api.github.com/repos/twitter/finagle/git/commits/49eda2812683eec6a56778c2df301b24d804a5f6,49eda2812683eec6a56778c2df301b24d804a5f6,"[split] Finagle: Add `cause` Throwables for all ConnectionFailedExceptions

RB_ID=314871"
xinxiang-twitter,2014-03-21 18:16:52,https://api.github.com/repos/twitter/finagle/git/commits/cb91ecbb0e2e45bf6c324d0e46909cf26b2b2963,cb91ecbb0e2e45bf6c324d0e46909cf26b2b2963,"[split] add ketamaclient initial readiness before the first request

RB_ID=310143"
evnm,2014-03-21 18:16:59,https://api.github.com/repos/twitter/finagle/git/commits/274b00bc860e08a4d4ca6e75b540e9f64552e614,274b00bc860e08a4d4ca6e75b540e9f64552e614,"[split] Finagle: Swap Stack.Node and Stack.Leaf args in toString formatting

RB_ID=312587"
mariusae,2014-03-20 23:09:29,https://api.github.com/repos/twitter/finagle/git/commits/629156d3647f9d914cd47676f9589de6af5c7cbd,629156d3647f9d914cd47676f9589de6af5c7cbd,"[split] finagle-serversets Stabilizer: don't consider Pending update successful

The SS2 stabilizer ticked limbo states on Pending: if a serverset was
pending for two TTLs, it would be ticked out. This is just wrong; this
change fixes this by separating Bound and Neg explicitly, and treating
everything else as a failure.

RB_ID=315439"
stevegury,2014-03-20 18:25:03,https://api.github.com/repos/twitter/finagle/git/commits/e5ed363d6b349e1cbd71625f8cdcaab60e4b29ca,e5ed363d6b349e1cbd71625f8cdcaab60e4b29ca,"[split] release ostrich version 9.4.1

RB_ID=314929
TBR=true
NO-QUEUE=true"
stevegury,2014-03-20 18:19:29,https://api.github.com/repos/twitter/finagle/git/commits/57d4675abf25a0c05f7cbe5098ad8998dadc4f05,57d4675abf25a0c05f7cbe5098ad8998dadc4f05,"[split] release util version 6.13.1

RB_ID=314911
TBR=true
NO-QUEUE=true"
stevegury,2014-03-20 03:52:46,https://api.github.com/repos/twitter/finagle/git/commits/5c522cf0e1f835520ad7b4af3c53e4d45b1bb013,5c522cf0e1f835520ad7b4af3c53e4d45b1bb013,"[split] 3rdparties: Update zk libraries

A memory leak was fixed in c.t.c.zookeeper.server-set, this change upgrade
everyone to the latest version (1.0.70).

RB_ID=313673
TBR=true"
stevegury,2014-03-20 03:54:39,https://api.github.com/repos/twitter/finagle/git/commits/26cf96ff80073ccedb814130c6198370708d3d0a,26cf96ff80073ccedb814130c6198370708d3d0a,"[split] finagle-serversets: Disable retry behavior but turn exception into negative resolution.

Motivation:
If you try to use a serverset where its path doesn't exist yet, serverset.watch will throw an exception.
ZkOffer was working around this problem by waiting 5 sec before retrying.

Modification:
Disable the retry behavior, but still turn exception into negative resolution.

RB_ID=311579"
atollena,2014-03-19 00:19:41,https://api.github.com/repos/twitter/finagle/git/commits/ebd9b362ad5d9473047859c25c5fce609f0df8ab,ebd9b362ad5d9473047859c25c5fce609f0df8ab,"[split] Case insensitive Dtab headers in HTTP codec

Dtab HTTP headers have case sensitive fields, but header fields are case
insensitive. This change makes the header fields case insensitive.

RB_ID=312479"
jeffreyolchovy,2014-03-18 21:17:04,https://api.github.com/repos/twitter/finagle/git/commits/34e2a249bd0f594c29bab15fc30612d35faefcbf,34e2a249bd0f594c29bab15fc30612d35faefcbf,"[split] support reading params in content body for HTTP methods other than POST and PUT closes #215

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=298681"
roanta,2014-03-17 19:39:44,https://api.github.com/repos/twitter/finagle/git/commits/8a0bb465a131d67bda289058ed259212b8c8a6ba,8a0bb465a131d67bda289058ed259212b8c8a6ba,"[split] finagle-core: Introduce Stack.Params#contains

Motivation:
Checking whether a param is specified proved to be useful
while implementing ClientBuilder and ServerBuilder in terms of
Stack. This change is cherry picked from those branches.

Modification: Add a contains method to the Params trait

RB_ID=308951"
roanta,2014-03-17 19:35:59,https://api.github.com/repos/twitter/finagle/git/commits/02b2a4a23a0df443276232097ee37d7abdd3f63d,02b2a4a23a0df443276232097ee37d7abdd3f63d,"[split] finagle-docs: address small style nits

Motivation:
Address some styling issues in the docs.

Modification:
- Fix section defs as generated by csl/release
- Ignore metrics/* in the toc to avoid warnings
- Fix word wrap wrt to the searchbox

RB_ID=311039"
kt3k,2014-03-17 18:14:20,https://api.github.com/repos/twitter/finagle/git/commits/1c4257c7cd24157318f5ac2369dd706b0d584c9b,1c4257c7cd24157318f5ac2369dd706b0d584c9b,"[split] Fix Travis-CI integration.

Add .travis.yml
Exclude finagle-http and finagle-memcached
Use sbt launcher, add openjdks and skip finagle-mux because it also doesn't pass

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=310819"
stevegury,2014-03-14 23:27:45,https://api.github.com/repos/twitter/finagle/git/commits/0e48b14199bce72fe4e8928e1f1fa5565461ee7c,0e48b14199bce72fe4e8928e1f1fa5565461ee7c,"[split] release finagle version 6.13.0

RB_ID=310539
TBR=true"
stevegury,2014-03-14 21:01:17,https://api.github.com/repos/twitter/finagle/git/commits/63b751cad6391f13633785d8f0532667e92ab8cb,63b751cad6391f13633785d8f0532667e92ab8cb,"[split] release ostrich version 9.4.0

RB_ID=310053
TBR=true"
evnm,2014-03-14 20:44:26,https://api.github.com/repos/twitter/finagle/git/commits/a646fda40bcd22190cb03809bc44eeb6c121706f,a646fda40bcd22190cb03809bc44eeb6c121706f,"[split] Add ""Protocols"" page to the Finagle documentation website

RB_ID=305883"
stevegury,2014-03-14 16:53:24,https://api.github.com/repos/twitter/finagle/git/commits/2a13f58e74b3a24f1054d8dfc48445cd21e07fb9,2a13f58e74b3a24f1054d8dfc48445cd21e07fb9,"[split] release util version 6.13.0

RB_ID=309895
TBR=true"
stevegury,2014-03-14 02:09:33,https://api.github.com/repos/twitter/finagle/git/commits/7ec45f659cc93af64ea5b79f6a3b90994a555903,7ec45f659cc93af64ea5b79f6a3b90994a555903,"[split] Upgrade Netty from 3.8.0 to 3.8.1

Motivation:
Dan Brown (from the open-source community) discovered a bug in Netty HTTP
content compressor with an empty response.
More information available here: https://github.com/twitter/finagle/issues/249

Modification:
Upgrade Netty to the latest version
(this upgrade only contains the fix for this particular problem)

Result:
Confirmed by Dan Brown, the fix is working.

RB_ID=308757
TBR=true"
edma2,2014-03-12 17:11:28,https://api.github.com/repos/twitter/finagle/git/commits/64ce6924b1b5e770a5fcc368feb4299dfa7298bf,64ce6924b1b5e770a5fcc368feb4299dfa7298bf,"[split] finagle-http: compress text-like content-types by default

RB_ID=304835"
zhanggl,2014-03-11 19:26:45,https://api.github.com/repos/twitter/finagle/git/commits/942dfa0878ead434168a825d35f475eb61f11bb6,942dfa0878ead434168a825d35f475eb61f11bb6,"[split] finagle-redis: Fixed the empty string issue of MBULK_REPLY

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=306313"
evnm,2014-03-11 01:03:33,https://api.github.com/repos/twitter/finagle/git/commits/cc49a08d0f29f72a4d15418a692db3bcb399bcb0,cc49a08d0f29f72a4d15418a692db3bcb399bcb0,"[split] Finagle: Add Mux and ThriftMux Clients based on com.twitter.finagle.Stack

In the short term, in order to roll out Mux support in ClientBuilder we need to
provide Mux protocol `Stack`s. The crux of this change is the addition of
`MuxNetty3Stack` and `ReusingPoolModule` for use in creating a Stack-based
MuxClient. This is then used to provide a Stack-based ThriftMuxClient. In
support of this, I added a `Stack.Role` construct that takes the place of the
inconsistent `id` strings used in Stack/Stackable.

RB_ID=276105"
mariusae,2014-03-07 00:04:19,https://api.github.com/repos/twitter/finagle/git/commits/28a5c1d401a016b710958c5a48a064dfa8a4b335,28a5c1d401a016b710958c5a48a064dfa8a4b335,"[split] finagle/S2: introduce address stabilization, stats

An Event-based address stabilizer for S2.

  /**
   * Stabilize the address relative to the supplied source of epochs,
   * such that any removed socket address in an Addr.Bound set is
   * placed in a limbo state until at least one epoch has passed.
   *
   * In practice, the source of epochs must correlate with a failure
   * detection interval; we consider an address dead if it has not
   * been observed for at least one epoch, and no failures
   * (Addr.Failed) have been observed in the same interval.
   */

RB_ID=299585"
mariusae,2014-03-06 20:51:14,https://api.github.com/repos/twitter/finagle/git/commits/f9620ee1a82ffa619b9746ed369658ad47acb040,f9620ee1a82ffa619b9746ed369658ad47acb040,"[split] finagle Stack: prepend syntax

The current way to prepend a Stackable to a Stack is

	stackable.toStack(stack)

but Scala already has a natural syntax for this!

	stackable +: stack

so let's use it.

RB_ID=303163"
stevegury,2014-03-06 06:31:51,https://api.github.com/repos/twitter/finagle/git/commits/227ec54bf7b8918ee6ff0d5005ac148154bef4a0,227ec54bf7b8918ee6ff0d5005ac148154bef4a0,"[split] finagle-stats: Upgrade metrics dependency to the latest version.

Motivation:
A bug has been recently fixed in metrics (error in value of Histogram.{min/max/avg...}).
This change update all usage of metrics to the latest version.

Modification:
Update pants config file and maven pom

RB_ID=302167
TBR=true"
mariusae,2014-03-06 05:30:11,https://api.github.com/repos/twitter/finagle/git/commits/b3bc42d484648d482e7349756805537ebc075c10,b3bc42d484648d482e7349756805537ebc075c10,"[split] ServerSets2: reset value on SyncConnected

Op watches propagate errors, but didn't reset the original value when
we get a SyncConnected state.

We might consider revisiting this error handling strategy, dealing
only with the global session watch, blisfully ignoring errors on op
watches.

RB_ID=299081"
mariusae,2014-03-06 05:20:03,https://api.github.com/repos/twitter/finagle/git/commits/ed7e41d5c0f26e8eceee0b7f74cf3d89ff3e31a3,ed7e41d5c0f26e8eceee0b7f74cf3d89ff3e31a3,"[split] finagle-mux: don't delegate empty dtabs

The current version of com.twitter.finagle.factory.Refinery uses Dtab
reference equality to check whether the base is equal to the current
Dtab. Delegating empty Dtabs thus breaks this.

RB_ID=302725"
aniket486,2014-01-25 00:12:38,https://api.github.com/repos/twitter/finagle/git/commits/0fbb000ad7b8ca6f66ddf93b9021058677eab31f,0fbb000ad7b8ca6f66ddf93b9021058677eab31f,"[split] Fix link to Twitter engineering blog for Finagle blog

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=301305
NO-QUEUE=true"
evnm,2014-03-05 19:06:15,https://api.github.com/repos/twitter/finagle/git/commits/05a5e4d09738267763949eb2f30187fc5b01ab77,05a5e4d09738267763949eb2f30187fc5b01ab77,"[split] finagle-thrift: Do not rely on ThreadLocal'd ClientIds in TTwitterFilter

The most recent ClientIdContext release caused issues seemingly related to the
ThreadLocal'd ClientIds set implicitly by ClientIdContext.

This change has two parts:

- Client-side: In TTwitterFilter, pass the constructor-supplied ClientId as the
  value to ClientIdContext rather than relying on the implicitly supplied by
  `Context.emit()`.
- Server-side: Put precedence of `header.client_id` above the ClientId embedded
  in `header.contexts`. These two values *should* be equal in all cases, but
  they don't seem to be in this macaw-relevance/Gizmoduck case. In this observed
  case, putting precedence on the non-context-based ClientId will fix the
  failure mode in currently-deployed services.

RB_ID=301507"
evnm,2014-03-04 00:52:44,https://api.github.com/repos/twitter/finagle/git/commits/90db59e2a40f7c744b5ef3b5f8c1f45b2762492b,90db59e2a40f7c744b5ef3b5f8c1f45b2762492b,"[split] Use ephemeral ports in all core library unit tests

Tests that hardcode ports tend to fail on CI machines. I grepped around our core
libraries and found a bunch of instances where we new up `InetSocketAddress`es
with known ports. This change makes use com.twitter.util.RandomSocket in all
such tests to make them use ephemeral ports.

RB_ID=299329
TBR=true"
stevegury,2014-03-03 23:53:24,https://api.github.com/repos/twitter/finagle/git/commits/b9886cb6f6174d679c6ad6650674444ae03829fc,b9886cb6f6174d679c6ad6650674444ae03829fc,"[split] [3rdParty] Updating common_internal.zk-utils

Motivation:
The zk fix in c.t.c.zookeeper.client wasn't used by people transitively depending on it via an old version of common_internal.zookeeper-utils.

Modification:
Update everyone to the latest version of common_internal.zookeeper-utils

Result:
Everyone is using the latest c.t.c.zookeeper.client

RB_ID=299639"
evnm,2014-03-03 23:19:20,https://api.github.com/repos/twitter/finagle/git/commits/92f26f6235ca80fae585393d27b38bafd324d599,92f26f6235ca80fae585393d27b38bafd324d599,"[split] Finagle: Use InetAddressUtil.Loopback instead of InetAddress.getLocalHost

`InetAddress.getLocalHost` will fail on hosts whose hostnames are unresolvable.
This change improves test portability, since they should be more resilient to
being run on hosts with unresolvable localhosts.

RB_ID=299543"
mariusae,2014-03-03 22:01:33,https://api.github.com/repos/twitter/finagle/git/commits/ab170e81778185ed2f04154513b9941afb898fbc,ab170e81778185ed2f04154513b9941afb898fbc,"[split] ForkJoin scheduler: first draft

A scheduler based on the JSR166y fork/join implementation. This
scheduler will balance tasks (via work stealing) across several
threads while retaining a target level of parallelism.

It also manages blocking, which is threaded through from Await; thus,
with this scheduler, applications can block with only a small penalty,
while avoiding the possibility of deadlock due to the parallelism
invariant ??? progress is guaranteed.

Currently, only future blocking is managed, this may be extended in
the future.

I think we can actually come up with a better work-stealing scheduler
for Finagle, but this is a good first approximation and has shown very
promising results in the adshards.

RB_ID=288821"
evnm,2014-03-03 23:21:21,https://api.github.com/repos/twitter/finagle/git/commits/b9cb9f51bce5510cfada512d5477c9db8fb64aa1,b9cb9f51bce5510cfada512d5477c9db8fb64aa1,"[split] finagle-memcached: Mark test ""not migrating yet"" as flaky

RB_ID=299045"
evnm,2014-03-03 17:55:57,https://api.github.com/repos/twitter/finagle/git/commits/4b582f6f7b529fb7b9e18328a1069892eb5c1eac,4b582f6f7b529fb7b9e18328a1069892eb5c1eac,"[split] finagle-thrift[mux]: Reintroduce ClientIdContext by default

The crux of the change:

- Support ClientIds at the protocol level in finagle-thriftmux.
- Load ClientIdContext via the ServiceLoader mechanism by default in
  finagle-thrift. In the vanilla finagle-thrift case, we'll be
  double-setting ClientIds in both the Context and the Thrift header.
- Adds a ""thriftmux server + finagle-thrift client"" end-to-end test.

RB_ID=285803"
mosesn,2014-02-28 23:01:41,https://api.github.com/repos/twitter/finagle/git/commits/700d0a4847684045e88215098ab70f610cbbed00,700d0a4847684045e88215098ab70f610cbbed00,"[split] finagle-doc: Update URL to Finagle blog post. Motivation: Outdated URL

Modification:
Updates URL to finagle blog post

Results:
Fewer dead links on OSS docs site.

RB_ID=298823"
mosesn,2014-02-28 18:45:31,https://api.github.com/repos/twitter/finagle/git/commits/1f75820105f854622c053bc22eeb569b925e43ec,1f75820105f854622c053bc22eeb569b925e43ec,"[split] finagle: Fix Build.scala to scrooge generate again Motivation: We reverted the change which pegged libthrift to 0.5.0, but forgot to change the build.scala again to scrooge generate.

Modifications:
Add back in the scrooge generating stuff, removed the bits which ignore the *.java files for doc generations.

Results:
We can build with sbt!

RB_ID=298321"
evnm,2014-02-27 05:01:03,https://api.github.com/repos/twitter/finagle/git/commits/c5c9b1b4b0065f458bf8b051dd3bf37cb0ab7813,c5c9b1b4b0065f458bf8b051dd3bf37cb0ab7813,"[split] Revert pregenerated Thrift Java in finagle-{zipkin, exception}

The removal of Scrooge from finagle-{zipkin,exception} caused a nightmare of
libthrift versioning pain. This change reverts the introduction of pregenerated
Java in finagle-{zipkin,exception}.

RB_ID=296285
TBR=true"
roanta,2014-02-27 00:06:41,https://api.github.com/repos/twitter/finagle/git/commits/bb867100471cfcfdba50a073ff9136f28d8aac89,bb867100471cfcfdba50a073ff9136f28d8aac89,"[split] finagle-mysql: Better failure handling for the dispatcher

Motivation:
 Certain exceptions rendered the dispatcher unusable
 because the service wasn't being closed.

Modification:
 - Move the dispatcher over to finagles GenSerialDispatcher
 - Better exception handling for fatal exceptions

RB_ID=292177"
stevegury,2014-02-25 21:55:37,https://api.github.com/repos/twitter/finagle/git/commits/1d85771445b9956ad565cd81c9444e39fea430fb,1d85771445b9956ad565cd81c9444e39fea430fb,"[split] [finagle] fix dependency problem with multiple version of serversets

Motivation:
After my last commit, (and with a empty ivy cache) the sbt doc compilation was broken in finagle-serversets.
I think (not sure) that's because of the version in the ivyXml was different than the one specified in the sbt.

Modification:
- Update all usage of c.t.common.zookeeper.server-set (finagle sbt & util sbt)

Result:
""./sbt +publish-local"" is working!

RB_ID=295301"
zhanggl,2014-02-25 21:35:18,https://api.github.com/repos/twitter/finagle/git/commits/8334c9c263b63685c6b3ef20668c835c111ccd4f,8334c9c263b63685c6b3ef20668c835c111ccd4f,"[split] finagle-redis: Allow an empty string as a hash field value

Motivation:
To fix the bug #244 according to RESP at http://redis.io/topics/protocol

Modifications:

1. Encoding
In Codec.scala, we allow """" to be encoded as a normal argument by removing the if guard on (arg.readableBytes == 0)

2. Decoding
In Reply.scala, decode '$0\r\n\r\n' to a BulkReply of """" instead of a EmptyBulkReply. Also removed the requirement of a BulkRelay not allowed to have """" as payload (Though I am not quite sure about the side-effect ).

3. And the tests in both NaggatiSpec.scala and ClientSpec.scala

Results:
The tests in NaggatiSpec.scala and ClientSpec.scala passed. And now we can have the empty string as the hash field value.

Signed-off-by: Moses Nakamura <mnakamura@twitter.com>

RB_ID=295067"
stevegury,2014-02-25 17:15:19,https://api.github.com/repos/twitter/finagle/git/commits/bfade5718938074c64b8fe1455e17e5ca7b71b3f,bfade5718938074c64b8fe1455e17e5ca7b71b3f,"[split] [finalge] Fix the sbt doc generation (and tests)

Motivation:
Due to recent change the sbt doc generation was broken in finagle-exception and finagle-zipkin (required for publishing jar).

Modification:
- Exclude the inlined thrift generated files from the scaladoc

Result:
""./sbt +publish-local"" is working!

RB_ID=295045"
luciferous,2014-02-24 19:35:28,https://api.github.com/repos/twitter/finagle/git/commits/07aa015798815e6bac336579b7874335695dd7fe,07aa015798815e6bac336579b7874335695dd7fe,"[split] TraceId invariance

Motivation:
TraceId should not change across requests.

Modifications:
Server configuration now uses the server filter instead of the
client filter. Also, placed the tracing filter inside the
dispatcher.

Result:
TraceId is properly set by the tracing filter.

RB_ID=288701"
stevegury,2014-02-24 19:19:08,https://api.github.com/repos/twitter/finagle/git/commits/0609e9c807ce89f6364c94324e4d4a5fa4d602cd,0609e9c807ce89f6364c94324e4d4a5fa4d602cd,"[split] [finalge] Fix the sbt build (and tests)

Motivation:
Due to recent change the sbt build was broken (not compiling and some tests were failing).

Modification:
- Disable the usage of Scrooge in finagle-zipkin and finagle-exception
- In order to continuously run those tests, I enabled SKIP-FLAKY by default
- Reduce the visibility of 2 finagle-mux tests (sbt try to test those with specs)
- Exclude ZkTest.scala from finagle-serversets (not compiling)

Result:
""./sbt test"" is working reliably!

RB_ID=294061"
stevegury,2014-02-24 17:42:17,https://api.github.com/repos/twitter/finagle/git/commits/65f222de41000a4589491010e0b4616385e8f55d,65f222de41000a4589491010e0b4616385e8f55d,"[split] [3rdparty] Update c.t.common.zookeeper.server-set

RB_ID=293191
TBR=true"
evnm,2014-02-21 18:02:59,https://api.github.com/repos/twitter/finagle/git/commits/33b535d3fe27d88c5f1d9fe9b66d8029ea761b93,33b535d3fe27d88c5f1d9fe9b66d8029ea761b93,"[split] bump finagle to 6.12.3-SNAPSHOT

RB_ID=292867
TBR=true"
evnm,2014-02-21 05:59:53,https://api.github.com/repos/twitter/finagle/git/commits/b8109375cee2a346850c186fc5be61a373d0e5e9,b8109375cee2a346850c186fc5be61a373d0e5e9,"[split] Drop scrooge in favor of generated Java in finagle-exception and -zipkin.

In order to get a Finagle release out, I had to make the following changes:

- Drop maven-scrooge-plugin in favor of pre-generated Java source in
  finagle-exception and finagle-zipkin
- Bump rest of finagle to scrooge-maven-plugin 3.12.3
- Mark com.twitter.finagle.memcached.integration.MigrationClientTest
  ""not migrating yet"" tests as flaky. This test failed midway through a
  release attempt.
- Add explicit scrooge-core dependency to iago/pom.xml and bumped iago's
  scrooge-maven-plugin version to 3.12.3.

RB_ID=292581
TBR=true"
roanta,2014-02-20 18:38:17,https://api.github.com/repos/twitter/finagle/git/commits/e48531f973566a11a67752f1fdd17c945c4d4539,e48531f973566a11a67752f1fdd17c945c4d4539,"[split] finagle-mysql: revert finagle-mysql ClientTest

Revert ClientTest to run as an integration test until
the embedded mysql testing framework runs more seamlessly.

RB_ID=291793"
aoen,2014-02-20 02:36:31,https://api.github.com/repos/twitter/finagle/git/commits/d1d47ab9699c5229e4f073b55a2da41b0dc0c8f4,d1d47ab9699c5229e4f073b55a2da41b0dc0c8f4,"[split] Re-tagged flaky test

RB_ID=291539
TBR=true"
stevegury,2014-02-19 21:51:56,https://api.github.com/repos/twitter/finagle/git/commits/07cc6d8b5f603fd0194d9ef5d2eeb1f61facf3ea,07cc6d8b5f603fd0194d9ef5d2eeb1f61facf3ea,"[split] finagle: Fix version number in sbt project defintion

RB_ID=290679"
tquan,2014-02-19 21:37:54,https://api.github.com/repos/twitter/finagle/git/commits/cd7e1fbd931cd1e6b3027a8fc5a3bc83a2ba6c6a,cd7e1fbd931cd1e6b3027a8fc5a3bc83a2ba6c6a,"[split]  Adding monitoring/debugging for ZKAnnouncerTest ""only announce additional endpoints if a primary endpoint is present""  This test is currently marked as flaky and doesn't run in any CI run, except birdcage_flakies (CI run that runs flaky tests).  It regularly fails in birdcage_flakies runs, which makes it a prime test case for testing monitoring.  The results from the output of this will be used to fine tune what stats we're printing or making available in terms of port monitoring on CI.

 TLDR on changes:
 - debugging lines on which ""eventually"" is failing
 - the status on the binds
 - a call to our new endpoint that prints out stats on the machine's current port usage

RB_ID=286093
TBR=true"
evnm,2014-02-19 19:37:20,https://api.github.com/repos/twitter/finagle/git/commits/895ae77eef7ba13526b547c598192ee95fc806a6,895ae77eef7ba13526b547c598192ee95fc806a6,"[split] finagle-mux: Fix flaky request cancellation test

RB_ID=288495"
stevegury,2014-02-19 07:04:07,https://api.github.com/repos/twitter/finagle/git/commits/fdabab6a1cf2852f6359e81e1b8583cb0f28124c,fdabab6a1cf2852f6359e81e1b8583cb0f28124c,"[split] release scrooge version 3.12.3

RB_ID=290643
TBR=true"
tquan,2014-02-19 06:44:14,https://api.github.com/repos/twitter/finagle/git/commits/368f53b3a2d8d4417b8527b4b992ff2f1ac158c8,368f53b3a2d8d4417b8527b4b992ff2f1ac158c8,"[split]  Adding monitoring/debugging for ZKAnnouncerTest ""only announce additional endpoints if a primary endpoint is present""  This test is currently marked as flaky and doesn't run in any CI run, except birdcage_flakies (CI run that runs flaky tests).  It regularly fails in birdcage_flakies runs, which makes it a prime test case for testing monitoring.  The results from the output of this will be used to fine tune what stats we're printing or making available in terms of port monitoring on CI.

 TLDR on changes:
 - debugging lines on which ""eventually"" is failing
 - the status on the binds
 - a call to our new endpoint that prints out stats on the machine's current port usage

RB_ID=286093
TBR=true"
stevegury,2014-02-19 03:56:53,https://api.github.com/repos/twitter/finagle/git/commits/5a291beabb9142f80f8555faf57d72fd119737d1,5a291beabb9142f80f8555faf57d72fd119737d1,"[split] release finable version 6.12.1

RB_ID=290583
TBR=true"
stevegury,2014-02-19 01:44:48,https://api.github.com/repos/twitter/finagle/git/commits/572fd38f3d6d485726ef0d734fa491604469e3f3,572fd38f3d6d485726ef0d734fa491604469e3f3,"[split] release ostrich version 9.3.1

RB_ID=290313
TBR=true"
stevegury,2014-02-18 23:01:41,https://api.github.com/repos/twitter/finagle/git/commits/aaaf0892075b1b31ec45ea70614a80ae0d022e45,aaaf0892075b1b31ec45ea70614a80ae0d022e45,"[split] release util version 6.12.1

RB_ID=290145
TBR=true"
stevegury,2014-02-18 20:42:29,https://api.github.com/repos/twitter/finagle/git/commits/a9df6ed1d575bc707cee9c203e1b4e212a43a8cc,a9df6ed1d575bc707cee9c203e1b4e212a43a8cc,"[split] Upgrade everyone to the new c.t.common.server-set A critical bug have been found in c.t.common.zookeeper.client, this change upgrade everyone with the fixed jar.

RB_ID=289319"
luciferous,2014-02-18 19:24:56,https://api.github.com/repos/twitter/finagle/git/commits/92052389af5006ad2bd7e6aa68ae205e5a81ecb6,92052389af5006ad2bd7e6aa68ae205e5a81ecb6,"[split] Closing one side of a proxy should close the other

Motivations:

An HTTP proxy B between client A and server C.

    A<>B<>C

When A<>B closes we want B<>C to also close. Steps to reproduce are
described in the description of
https://jira.twitter.biz/browse/MACAW-316.

Modifications:

For a service definition:

> val client = ClientBuilder(..)
> val proxy = Service.mk { req => client(req) }

1. If we interrupt the client request, it should close the channel
between the client and a destination. To illustrate:

> client(req).raise(..)
> verify(ch, times(1)).close()

N.B. We can't quite do this because we don't have a reference to the
underlying Channel ch, and even if we did, we don't call close on it
directly but do it through Channels.close (why do we do this, is it to
avoid deadlocks?):

2. If we interrupt the proxy request, it should interrupt the client
request.

> val promise = new Promise[Response]
> val proxy = Service.mk { _ => promise }
> proxy(Request()).raise(..)
> assert(promise.isInterrupted.isDefined)

Now imagine a related service definition:

> val service = Service.mk { req =>
>   def loop = req.response.writer.write(..) before loop
>   loop
>   req.response.setChunked(true)
>   Future.value(req.response)
> }

3. Transport closure in the service dispatcher should discard the
reader.

> val req = Request()
> req.response.setChunked(true)
> val service = Service.mk { _ => Future.value(req.response) }
>
> // Wait for the dispatch i.e. response has been returned
> assert(Await.result(service(req)) === req.response)
>
> trans.close()
> intercept[Reader.ReaderDiscarded] { Await.result(req.writer.write(..)) }

RB_ID=276657"
stevegury,2014-02-15 04:16:28,https://api.github.com/repos/twitter/finagle/git/commits/f52c41b7fbb19f480a36c98b89c7069703c52a64,f52c41b7fbb19f480a36c98b89c7069703c52a64,"[split] release finagle version 6.12.0

RB_ID=289233
TBR=true"
stevegury,2014-02-15 00:34:42,https://api.github.com/repos/twitter/finagle/git/commits/6be7b82da0d152d74d2ff0bff4225e6ca56c7987,6be7b82da0d152d74d2ff0bff4225e6ca56c7987,"[split] release ostrich version 9.3.0

RB_ID=289089
TBR=true"
stevegury,2014-02-14 23:18:06,https://api.github.com/repos/twitter/finagle/git/commits/d952b5a8ad89633d06176921b3e889e84811ad41,d952b5a8ad89633d06176921b3e889e84811ad41,"[split] release 6.12.0 of util

RB_ID=288955
TBR=true"
evnm,2014-02-14 20:12:49,https://api.github.com/repos/twitter/finagle/git/commits/42694f71e433b956eec09a9f6e070bb50ee5fdb2,42694f71e433b956eec09a9f6e070bb50ee5fdb2,"[split] finagle-core: Record Finagle version in tracing information

In order to be able to easily audit Finagle version in deployed services, we'd
like to record versions in Zipkin trace data at runtime. This change adds an
`AtomicReference[String]` to com.twitter.finagle.Init that is set with the
finagle-core version pulled from build.properties. This version is recorded
under the key ""finagle.version"" in com.twitter.finagle.tracing.TracingFilter.

RB_ID=284857"
evnm,2014-02-14 18:21:25,https://api.github.com/repos/twitter/finagle/git/commits/ee19fd35b12be6ce24671e237abe3944208cb29e,ee19fd35b12be6ce24671e237abe3944208cb29e,"[split] finagle-serversets: Use ephemeral ports and `Var.sample` in tests

Motivations:
Basically all of our ZkResolver tests are marked flaky, which is ridiculous.
They use defined ports all over the place, which is ill-advised when running on
CI machines. Also com.twitter.finagle.serverset2.ZkResolverTest used
`Var.observeTo`, which is a deprecated method.

Modifications:
- All InetSocketAddresses used in these two test files now select
  ephemeral ports
- Replaced AtomicReference+observeTo usage in
  com.twitter.finagle.serverset2.ZkResolverTest with `Var.sample`, as is done in
  com.twitter.finagle.zookeeper.ZkResolverTest

RB_ID=286507"
bmdhacks,2014-02-13 21:54:24,https://api.github.com/repos/twitter/finagle/git/commits/66ec79d1e7468ef5e92009e172e7940769a660ec,66ec79d1e7468ef5e92009e172e7940769a660ec,"[split] Get birdcage on latest com.twitter.common* libs CSL is trying to get birdcage and science on the same version of finagle/util/commons/etc, so this is step one before we publish finagle and util.

RB_ID=287175"
tquan,2014-02-13 01:16:34,https://api.github.com/repos/twitter/finagle/git/commits/004f6bb737cb47f2fe8176facfa1dee9df267d37,004f6bb737cb47f2fe8176facfa1dee9df267d37,"[split]  Adding monitoring/debugging for ZKAnnouncerTest ""only announce additional endpoints if a primary endpoint is present""  This test is currently marked as flaky and doesn't run in any CI run, except birdcage_flakies (CI run that runs flaky tests).  It regularly fails in birdcage_flakies runs, which makes it a prime test case for testing monitoring.  The results from the output of this will be used to fine tune what stats we're printing or making available in terms of port monitoring on CI.

 TLDR on changes:
 - debugging lines on which ""eventually"" is failing
 - the status on the binds
 - a call to our new endpoint that prints out stats on the machine's current port usage

RB_ID=286093
TBR=true"
mosesn,2014-02-12 18:35:10,https://api.github.com/repos/twitter/finagle/git/commits/3c04c0f2a7938b26e7773082b4f54244af76eb8f,3c04c0f2a7938b26e7773082b4f54244af76eb8f,"[split] finagle-mux: Adds lease support to mux clients Motivation: By getting out the client-side support for leases quickly, clients will be ready for leases when the servers start turning them on.

Luckily, the bulk of the work for leases is server-side, and Marius' client-side code was pretty clean.

The premise behind Acting is that Service is lossy at this layer--isAvailable really reflects whether the connection is open or not, and we want to know whether the connection is open or not, but also whether the lease is applied or not.  Depending upon the answer, we're either going to throw away the Service (to get a new connection) or we're just going to knock ourselves out of the load balancer for a little while.  isAvailable doesn't stop being lossy until the ServiceFactory layer, at which point all we care about is whether it is currently safe to send requests, and we'll stop sending requests if it's no longer available, so LeasedFactory connects the lossy Service isAvailable abstraction to the hermetic ServiceFactory.

Tlease will support a units field so that we can experiment with different varieties of leases.  Tlease messages should be infrequent, so it's fine to add a few extra bytes.

Modifications:
Adds Tlease to mux on the client side.
Adds an Acting trait, which when mixed into a Service, improves the fidelity to the point where we can describe being Acting.  This will probably be subsumed by Probation or TemporarilyUnavailable in the future.
Adds a LeasedBridger which uses the Service with Acting to form a proper ServiceFactory abstraction.
Changes ReusingPool to respect ServiceFactory availability
Adds tests

Results:
Mux clients will support Tlease in preparation for servers sending lease information.

RB_ID=277783"
mosesn,2014-02-12 18:19:20,https://api.github.com/repos/twitter/finagle/git/commits/9f6afe51b4f9f2308388d7108156da443e1ae5ea,9f6afe51b4f9f2308388d7108156da443e1ae5ea,"[split] finagle-core: TimeoutFactorySpec => TimeoutFactoryTest Motivation: Found this change in a debugging branch, figured might as well ship it.

Modifications:
TimeoutFactorySpec => TimeoutFactoryTest

Results:
Fewer tests on specs2

RB_ID=285733"
evnm,2014-02-12 03:50:20,https://api.github.com/repos/twitter/finagle/git/commits/5870d1ab3d15f0bd70cceb9bc08576e8100e1969,5870d1ab3d15f0bd70cceb9bc08576e8100e1969,"[split] finagle-kestrel: Use Var[Addr] as underlying cluster representation

Moves finagle-kestrel away from `com.twitter.finagle.builder.Cluster`.

Changes outside of finagle-kestrel:

- finagle-core: Add Addr.Bound.apply(j.u.List) method for Java compatibility
- finagle-core: Change Addr factory functions' to return Addrs instead of the
  specific subclass they produce (was blocking Java compatability)
- util-core: Add `Try.exists(p: R => Boolean): Boolean`

RB_ID=243053"
evnm,2014-02-11 21:00:35,https://api.github.com/repos/twitter/finagle/git/commits/c706cf22c42a7c07ef7c3069945ce16ffde5d57c,c706cf22c42a7c07ef7c3069945ce16ffde5d57c,"[split] finagle-core: Write `Throwables.mkString` in terms of ArrayBuffer instead of Seq

RB_ID=281371"
evnm,2014-02-11 07:13:48,https://api.github.com/repos/twitter/finagle/git/commits/7076b292bb1df180904d260ebfd014fb09972c90,7076b292bb1df180904d260ebfd014fb09972c90,"[split] finagle-kestrel: Fix match-exhaustiveness issue in `DecodingToResponse.parseResponse`

RB_ID=284031"
bmdhacks,2014-02-10 23:13:11,https://api.github.com/repos/twitter/finagle/git/commits/52b9b836313d24230ef4f6dd0a2f47c653d9dd53,52b9b836313d24230ef4f6dd0a2f47c653d9dd53,"[split] close Name Var observation on service close

RB_ID=284699"
evnm,2014-02-07 18:26:33,https://api.github.com/repos/twitter/finagle/git/commits/423c2a9b5d75ebc2128b54e86acbf81cbdb06dc1,423c2a9b5d75ebc2128b54e86acbf81cbdb06dc1,"[split] finagle-core: Fix broken failure StatsReceiver test

RB_ID=281579"
stevegury,2014-02-07 00:36:43,https://api.github.com/repos/twitter/finagle/git/commits/ec4b0c56c040724aabb46759e0ac011b21570087,ec4b0c56c040724aabb46759e0ac011b21570087,"[split] Revert ""Option to enable thread pool scheduler in finagle, and fix the shutting down RejectedExecutionException's."" (It's breaking the build on JDK6 machines)

RB_ID=282863
NO-QUEUE=true"
jcarey03,2014-02-06 02:17:20,https://api.github.com/repos/twitter/finagle/git/commits/c6e435196cf5215a77d5f2acbd368b050e340837,c6e435196cf5215a77d5f2acbd368b050e340837,"[split]  Master meet Echidna; Echidna meet Master

RB_ID=276819"
roanta,2014-02-05 21:29:47,https://api.github.com/repos/twitter/finagle/git/commits/cf5d5aa678026d63bde1e8dc8bdb57ee6fe38be3,cf5d5aa678026d63bde1e8dc8bdb57ee6fe38be3,"[split] Port finagle-example thrift to new style APIs

 Motivation:
 finagle-example wasn't compiling in birdcage master because
 of a thrift IDL issue. I took this opportunity to port it to the
 new APIs and IDL namespace standards.

 Modification:
  Changed the example client/server source files
  Changed the namespaces in the IDL
  Updated sbt to map namespaces

 Result:
 Example should compile and run from pants and sbt.

RB_ID=280477"
bmdhacks,2014-02-04 17:55:15,https://api.github.com/repos/twitter/finagle/git/commits/c51d6c4254f276bb9267019c145ed44ee8b47278,c51d6c4254f276bb9267019c145ed44ee8b47278,"[split] Use new logo in docs, submitted by github user eirslett

RB_ID=279437"
stevegury,2014-02-04 04:39:04,https://api.github.com/repos/twitter/finagle/git/commits/b08b857106996d9adc1423996fbfef7c7a8f113f,b08b857106996d9adc1423996fbfef7c7a8f113f,"[split] finagle-memcache: Add a parameter to disable host ejection from KetamaFailureAccrualFilter

Motivations:
Failure-accrual is the finagle filter that detects bad hosts and avoid sending traffic to them, but finagle-memcache use a slightly different filter which also eject the node from the ring.
People that don't want to eject host from the ring (to reduce consistency issues) disable the failure-accrual filter.
The patch proposed separate the two concerns (ejecting & failure-accrual), now you could have failure-accrual without ejecting the host.

Modifications:
- Add a parameter (boolean) for using the standard finagle's failure-accrual filter instead of the ketama-failure-accrual.
- Set this default parameter to true in servo
- update all the constructors

Results:
This RB does't introduce any change for any services using servo or finagle-memcache directly, but it allows service owners to enable failure-accrual without enabling the host ejection from the ring.

RB_ID=279209"
atollena,2014-02-03 22:07:24,https://api.github.com/repos/twitter/finagle/git/commits/db5280cddaff97778a7b8d3085dade394ff02132,db5280cddaff97778a7b8d3085dade394ff02132,"[split] inagle-http: Add Dtab filter in RichHttp

RB_ID=278149"
evnm,2014-02-01 00:42:57,https://api.github.com/repos/twitter/finagle/git/commits/9c370ecdc7adf3a30189bf8c7d25f2540c08a111,9c370ecdc7adf3a30189bf8c7d25f2540c08a111,"[split] Revert ""finagle-thrift: Propagate ClientId via Finagle's Context mechanism by default""

RB_ID=278595
TBR=true
NO-QUEUE=true"
mosesn,2014-01-31 18:00:05,https://api.github.com/repos/twitter/finagle/git/commits/df80e015255d8510bddd32dedf71819fd601c836,df80e015255d8510bddd32dedf71819fd601c836,"[split] finagle-thrift: ClientIdRequiredFilterSpec fix

RB_ID=277875"
aoen,2014-01-31 14:09:17,https://api.github.com/repos/twitter/finagle/git/commits/943a230e36ca89d760e436a2823be6d3415986f6,943a230e36ca89d760e436a2823be6d3415986f6,"[split] Fix failing test

RB_ID=277867
TBR=true
NO-QUEUE=true"
aoen,2014-01-31 11:34:32,https://api.github.com/repos/twitter/finagle/git/commits/a8787d9752c59c5acf3c6d7af1534c580b68ce3a,a8787d9752c59c5acf3c6d7af1534c580b68ce3a,"[split] Marked an ibis test as flaky

RB_ID=277867
TBR=true
NO-QUEUE=true"
evnm,2014-01-30 23:47:16,https://api.github.com/repos/twitter/finagle/git/commits/5d6cc5857edba0c31552734d0ce2a07b9c4e490d,5d6cc5857edba0c31552734d0ce2a07b9c4e490d,"[split] finagle-thrift: Propagate ClientId via Finagle's Context mechanism by default

RB_ID=270651"
evnm,2014-01-30 22:22:13,https://api.github.com/repos/twitter/finagle/git/commits/d9096934fe675e77ea619f385ec991ad5fc4ce07,d9096934fe675e77ea619f385ec991ad5fc4ce07,"[split] finagle-core: Separate stats scopes for service-creation and request failure

Service-creation failure stats until now used the same scope as request failure
stats (""/failures""). Many services depend on ""/failures"" for success rate
determination, which is slightly inaccurate since the two types of failures
have been conflated.

This change separates service-creation failure stats into a
""/service_creation/failures"" scope, so ""/failures"" now tracks request failures
alone.

RB_ID=249195"
jcarey03,2014-01-30 03:22:24,https://api.github.com/repos/twitter/finagle/git/commits/a6b8b9ba7bafe6ca55aab162288bbc2be489be27,a6b8b9ba7bafe6ca55aab162288bbc2be489be27,"[split]  Embeddable MySql support for Unit/Integration Testing in Finagle-MySql

RB_ID=267565"
evnm,2014-01-29 23:42:55,https://api.github.com/repos/twitter/finagle/git/commits/349578942039c21245396e290f014d9cb870c782,349578942039c21245396e290f014d9cb870c782,"[split] finagle-core: Add basic Scaladocs for all Filters and Services

RB_ID=275101"
bmdhacks,2014-01-29 21:20:17,https://api.github.com/repos/twitter/finagle/git/commits/396e82ec2b048af3f3171eceec69e6a1ed06da3b,396e82ec2b048af3f3171eceec69e6a1ed06da3b,"[split] finagle-http: enable tracing on finagle 6 http api

RB_ID=270625"
mariusae,2014-01-28 23:01:50,https://api.github.com/repos/twitter/finagle/git/commits/2cccacf7c5bfd16f6b1fd8e98862e99c504b3414,2cccacf7c5bfd16f6b1fd8e98862e99c504b3414,"[split] Weights, weighted load balancer, memoization. (Deja-vu all over again.) Parts of this change list was already submitted, however it seems our submit queue dropped it on the floor. I took the opportunity to enhance the change a bit:

  1. add a flag for the default zk impl. of the serverset! resolver;
  2. add a flag for the default load balancer;
  3. memoize a few operations in the ZK facade.

The net effect of this is that we can have weighted load balancing,
with zk2 & the choice balancer without modifying any code. The
binary is launched with the flags:

  -com.twitter.server.serversetZkResolver=zk2
  -com.twitter.finagle.loadbalancer.defaultBalancer=choice

to enable these.

RB_ID=271027"
mariusae,2014-01-28 17:10:21,https://api.github.com/repos/twitter/finagle/git/commits/a266a4e232ad22f530e14e59f2f49db4b25f2c8e,a266a4e232ad22f530e14e59f2f49db4b25f2c8e,"[split] Weights, weighted load balancer, memoization. (Deja-vu all over again.) Parts of this change list was already submitted, however it seems our submit queue dropped it on the floor. I took the opportunity to enhance the change a bit:

  1. add a flag for the default zk impl. of the serverset! resolver;
  2. add a flag for the default load balancer;
  3. memoize a few operations in the ZK facade.

The net effect of this is that we can have weighted load balancing,
with zk2 & the choice balancer without modifying any code. The
binary is launched with the flags:

  -com.twitter.server.serversetZkResolver=zk2
  -com.twitter.finagle.loadbalancer.defaultBalancer=choice

to enable these.

RB_ID=271027"
evnm,2014-01-27 22:37:00,https://api.github.com/repos/twitter/finagle/git/commits/aece98922e7c4c3d4cc9bfc7e56aeb13edf65165,aece98922e7c4c3d4cc9bfc7e56aeb13edf65165,"[split] finagle-core: Add a `ServerBuilder.safeBuild(ServiceFactory)` method for Java compatibility

RB_ID=271337"
tnarg,2014-01-27 21:54:48,https://api.github.com/repos/twitter/finagle/git/commits/9bcf872c59a6d5b55c28baef6bb32ff3792800e5,9bcf872c59a6d5b55c28baef6bb32ff3792800e5,"[split] Adds configbus/mirrord

RB_ID=268409"
mosesn,2014-01-27 20:43:47,https://api.github.com/repos/twitter/finagle/git/commits/172c0f0ffe6c2825a55e266335236ddc82d24aea,172c0f0ffe6c2825a55e266335236ddc82d24aea,"[split] finagle-doc: How do I change my timeouts in the Finagle 6 APIs?

RB_ID=267683"
bmdhacks,2014-01-27 18:45:49,https://api.github.com/repos/twitter/finagle/git/commits/ed88d15b11bed39b1b64909dc8198150250f3d0e,ed88d15b11bed39b1b64909dc8198150250f3d0e,"[split] finagle-core: Remove a long-forgotten java file

RB_ID=271279"
mariusae,2014-01-27 18:20:17,https://api.github.com/repos/twitter/finagle/git/commits/8d40adef33db3781b3f723f4bfd43ea88ad969f4,8d40adef33db3781b3f723f4bfd43ea88ad969f4,"[split] com.twitter.finagle.Stack: initial version

Stacks tackle the problem of constructing, transforming, and modifying
component stacks. You can think of Stack as a hybrid between a
component system, a narrowly-defined dependency injection system, and
a persistent datastructure.

This change uses Stacks to represent Finagle clients:
com.twitter.finagle.client.StackClient defines a template stack for a
codec to use -- it contains the full standard Finagle client stack,
and can be parameterized just like DefaultClient or ClientBuilders.

RB_ID=263207"
mosesn,2014-01-25 14:27:49,https://api.github.com/repos/twitter/finagle/git/commits/17971870ed62e0f2cdf5a2f35db2d3d52a320e03,17971870ed62e0f2cdf5a2f35db2d3d52a320e03,"[split] finagle-core: Users don't get NPE on directories without permissions

RB_ID=271887"
mariusae,2014-01-25 00:03:58,https://api.github.com/repos/twitter/finagle/git/commits/5a6388af40f5d802eda681cd72a9bc4a61b3c7d1,5a6388af40f5d802eda681cd72a9bc4a61b3c7d1,"[split] finagle-core: low hanging fruit

RB_ID=266465"
evnm,2014-01-24 00:52:06,https://api.github.com/repos/twitter/finagle/git/commits/7e20a991c8d67e9df99a758d19d951641eeb4593,7e20a991c8d67e9df99a758d19d951641eeb4593,"[split] finagle-core: Make `Resolver.evalLabeled` private[finagle]

RB_ID=271521"
evnm,2014-01-22 23:34:42,https://api.github.com/repos/twitter/finagle/git/commits/57734e70890a75f0adc21d4305e5610090cfd14d,57734e70890a75f0adc21d4305e5610090cfd14d,"[split] finagle-core: Fix race condition in server dispatcher draining state machine

RB_ID=267221"
bmdhacks,2014-01-22 22:26:40,https://api.github.com/repos/twitter/finagle/git/commits/196a0d55865dd03283d1bcda3571297c35dea23e,196a0d55865dd03283d1bcda3571297c35dea23e,"[split] util: fix announcing ipv6 wildcard address Systems with ipv6 enabled were announcing 0:0:0:0:0:0:0:0 since we only matched ipv4 wildcard address.

RB_ID=270487"
mosesn,2014-01-22 22:14:33,https://api.github.com/repos/twitter/finagle/git/commits/5cdf4830b2a96ea7fef20b4f5f8b19971b6e8eac,5cdf4830b2a96ea7fef20b4f5f8b19971b6e8eac,"[split] bump scrooge to 3.12.3-SNAPSHOT

RB_ID=271159
TBR=true"
mosesn,2014-01-22 17:09:19,https://api.github.com/repos/twitter/finagle/git/commits/0b91feda0df44ec0599832e70a0d33760b6f2f31,0b91feda0df44ec0599832e70a0d33760b6f2f31,"[split] bump finagle to 6.11.2-SNAPSHOT

RB_ID=270787
TBR=true"
luciferous,2014-01-21 23:28:47,https://api.github.com/repos/twitter/finagle/git/commits/2bcd6958687a67f554ee93d5ed0f1730d50eaaf2,2bcd6958687a67f554ee93d5ed0f1730d50eaaf2,"[split] http client dispatcher

RB_ID=260105"
evnm,2014-01-21 17:46:39,https://api.github.com/repos/twitter/finagle/git/commits/f2d7ef08afe21315b0d2fbebab59851255cb833f,f2d7ef08afe21315b0d2fbebab59851255cb833f,"[split] Fix finagle-websocket link on Finagle docs website.

RB_ID=269857"
evnm,2014-01-17 00:20:03,https://api.github.com/repos/twitter/finagle/git/commits/447253c52a78b661b364e5f8f5877f519b855e57,447253c52a78b661b364e5f8f5877f519b855e57,"[split] bump util to 6.11.2-SNAPSHOT

RB_ID=268725
TBR=true"
kmonkeyjam,2014-01-16 18:44:50,https://api.github.com/repos/twitter/finagle/git/commits/005c30eb77880879c35007091f3370ff6e299430,005c30eb77880879c35007091f3370ff6e299430,"[split] Remove compiled_idl from finagle

RB_ID=267955
TBR=true"
mosesn,2014-01-16 17:36:55,https://api.github.com/repos/twitter/finagle/git/commits/908ea9bd43c03be5ddf1fca92e9b8317eb371fc7,908ea9bd43c03be5ddf1fca92e9b8317eb371fc7,"[split] finagle-core: masks cancellation on PipeliningDispatcher If an unsatisfied Future is interrupted on a Service returned by a ReusingPool, every unsatisfied Future returned by that Service will also be interrupted (and typically it will close the socket).

Anecdotally, we have found that this is a vulnerability in finagle servers, that if a client established a connection and then quickly hangs up, that they can force connection churn, and possibly make other requests less successful.

RB_ID=264131"
evnm,2014-01-15 21:05:09,https://api.github.com/repos/twitter/finagle/git/commits/3b8ee0b3f18df725cf8397aeb072ff19c7433edb,3b8ee0b3f18df725cf8397aeb072ff19c7433edb,"[split] bump finagle to 6.11.1-SNAPSHOT

RB_ID=267471
TBR=true"
eric,2014-01-15 19:42:43,https://api.github.com/repos/twitter/finagle/git/commits/506b839cebe7917e2a2176904bb5edd24b6adee2,506b839cebe7917e2a2176904bb5edd24b6adee2,"[split] Add abort command to kestrel client

Provides an Offer to abort a kestrel message.

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=225457"
stuhood,2014-01-15 18:37:11,https://api.github.com/repos/twitter/finagle/git/commits/f4b661cec3d53f081a9a50c8d86aabf0b33198de,f4b661cec3d53f081a9a50c8d86aabf0b33198de,"[split] Glassbird: Port to mockito - Dependency hygiene - Remove superfluous TempTokenStore implementations - Make TwitterApi non-static - Re-enable TwitterApi test

RB_ID=265321"
kmonkeyjam,2014-01-15 18:26:16,https://api.github.com/repos/twitter/finagle/git/commits/69d6e390cb86bad6cb18058fd3f9988fb9403a47,69d6e390cb86bad6cb18058fd3f9988fb9403a47,"[split] Disambiguate duplicate definitions of Timer on classpath

RB_ID=266365"
mariusae,2014-01-15 17:25:18,https://api.github.com/repos/twitter/finagle/git/commits/1b3e3fc1a3ad6824451fd1946a9d529d00a0a73d,1b3e3fc1a3ad6824451fd1946a9d529d00a0a73d,"[split] Revert ""com.twitter.finagle.Stack: initial version""

RB_ID=264985"
kmonkeyjam,2014-01-15 06:25:50,https://api.github.com/repos/twitter/finagle/git/commits/cc511e402098acd652cb44b18abf4f7d9df3b306,cc511e402098acd652cb44b18abf4f7d9df3b306,"[split] Remove compiled_idl from darkwing

RB_ID=266007"
evnm,2014-01-14 18:45:46,https://api.github.com/repos/twitter/finagle/git/commits/e2a17fa84af333dffacc91ad232be776c96d857a,e2a17fa84af333dffacc91ad232be776c96d857a,"[split] bump util to 6.11.1-SNAPSHOT

RB_ID=266347
TBR=true"
sprsquish,2014-01-14 00:21:16,https://api.github.com/repos/twitter/finagle/git/commits/d107fc35abaef388f748e3edba80a42cab5a5402,d107fc35abaef388f748e3edba80a42cab5a5402,"[split] bump scrooge to 3.12.2-SNAPSHOT

RB_ID=265749
TBR=true"
tquan,2014-01-13 22:18:09,https://api.github.com/repos/twitter/finagle/git/commits/e9ee36f3b12dd370ace0abf7c685cb781ad223cc,e9ee36f3b12dd370ace0abf7c685cb781ad223cc,"[split]  tag ""use new pool with fallback to old pool and readrepair"" in MigrationClientTest as flaky  https://jira.twitter.biz/browse/AWESOME-7229

RB_ID=265519"
sprsquish,2014-01-10 17:51:59,https://api.github.com/repos/twitter/finagle/git/commits/316862e7caf5361d083f2ed0e92c67ca810bc4ec,316862e7caf5361d083f2ed0e92c67ca810bc4ec,"[split] bump scrooge to 3.12.1-SNAPSHOT

RB_ID=264761
TBR=true"
mariusae,2014-01-10 00:26:11,https://api.github.com/repos/twitter/finagle/git/commits/12ccebd323beb169470d6a54732b4005c7c9a9b8,12ccebd323beb169470d6a54732b4005c7c9a9b8,"[split] com.twitter.finagle.Stack: initial version

RB_ID=263207"
stuhood,2014-01-09 22:28:13,https://api.github.com/repos/twitter/finagle/git/commits/540ca153d2d2f0182993ad3ed3fe45ad628a0c2e,540ca153d2d2f0182993ad3ed3fe45ad628a0c2e,"[split] Birdcage: Bump guava to 15.0 - Bump guava to 15.0 - Synchronize bijection versions, and comment on the twitter/public bijection split

Corresponds to science review https://reviewboard.twitter.biz/r/263149/

RB_ID=263101"
mariusae,2014-01-09 23:22:42,https://api.github.com/repos/twitter/finagle/git/commits/3d95f547b7913c3d3f508e2537c52f36c528f8d9,3d95f547b7913c3d3f508e2537c52f36c528f8d9,"[split] Finagle: use Future.before

RB_ID=264377"
kevinoliver,2014-01-09 22:38:20,https://api.github.com/repos/twitter/finagle/git/commits/48b262411e6ac5d97460e9be8e1efdef263db197,48b262411e6ac5d97460e9be8e1efdef263db197,"[split] finagle-thrift: add TFinagleBinaryProtocol

https://jira.twitter.biz/browse/PASSBIRD-659

An alternative implementation of Thrift's TBinaryProtocol
that has the same wire format. This implementation has a more
efficient implementation of getting the UTF-8 bytes out of a String
that allocates about 50% less bytes.

RB_ID=263433"
mosesn,2014-01-07 21:51:52,https://api.github.com/repos/twitter/finagle/git/commits/fb1f4a0c225e68ad0084d26d30ae6758119c73b3,fb1f4a0c225e68ad0084d26d30ae6758119c73b3,"[split] finagle-core: adds a ""tries"" scoped statsfilter to ClientBuilder

Jeff Hodges pointed out that it's nontrivial to get stats on a given request to the services created by ClientBuilder.  The metrics that we get out of StatsFilter only give us information about each request we try to send over the wire.  Notably, he's interested in when the number of failures that the service actually ends up seeing (and not ones that are masked by finagle retries) start going up.

This is useful to service owners for two reasons.

1.  Service owners like alerts that are symptomatic and targeted.  If they are woken up in the middle of the night, it should be because something has a real problem, and they should know immediately what is on fire.

2.  When service owners configure ClientBuilders, they are doing it with a little wiggle room in mind.  They should be able to tolerate slightly higher downstream latency.  They should be able to tolerate a small bump in failed requests.  All of these are fine, up until a point, and that point is configured via retries, requestTimeout, etc.  They should be able to set up alerts so that they don't get alerts unless something is so bad that it's getting past the ClientBuilder wiggle room.

This change adds a StatsFilter that wraps the entire RetryingFilter if a retry policy has been set.  If users of finagle want information on these kinds of stats, they can now get them in the ""tries"" scope.

RB_ID=262013"
bmdhacks,2014-01-06 19:34:32,https://api.github.com/repos/twitter/finagle/git/commits/5950818dd78bdf97a8b4b53871bfe0b3fc4fd4f0,5950818dd78bdf97a8b4b53871bfe0b3fc4fd4f0,"[split] use new netty api in finagle example

RB_ID=262537"
roanta,2014-01-03 22:06:32,https://api.github.com/repos/twitter/finagle/git/commits/47bb304146c823e8ec3a9cf5d2b2cc4783cb0384,47bb304146c823e8ec3a9cf5d2b2cc4783cb0384,"[split] finagle-thriftmux: remove scrooge2 dependency.

RB_ID=261889"
mosesn,2014-01-03 04:17:31,https://api.github.com/repos/twitter/finagle/git/commits/b42f0a012208525fa11c4114c8df5304b1203fcf,b42f0a012208525fa11c4114c8df5304b1203fcf,"[split] finagle-core: fixed documentation import

RB_ID=258865"
mosesn,2014-01-03 04:17:59,https://api.github.com/repos/twitter/finagle/git/commits/f1b2c0de0939b46240afb78ec22dee52bbcbefe9,f1b2c0de0939b46240afb78ec22dee52bbcbefe9,"[split] finagle: adds a section to the FAQ explaining the com.twitter.common situation.

RB_ID=259041"
bmdhacks,2013-12-31 01:06:23,https://api.github.com/repos/twitter/finagle/git/commits/5e62f6460ecd9685a48c70dd3559911396f7729b,5e62f6460ecd9685a48c70dd3559911396f7729b,"[split] finagle-benchmark: comments-change I wanted to run some benchmarks.  Pants is easier.  So I changed the comments to explain.

RB_ID=261009"
mariusae,2013-12-30 22:08:28,https://api.github.com/repos/twitter/finagle/git/commits/727fda5c7d40b9fb39c9afd65a61663cd807116d,727fda5c7d40b9fb39c9afd65a61663cd807116d,"[split] com.twitter.finagle.transport.ChannelTransport: set interest ops when reading

Properly respect backpressure.

RB_ID=257485"
mariusae,2013-12-27 00:31:16,https://api.github.com/repos/twitter/finagle/git/commits/ab3253d59f113a9e3acc0dbfaaf9e132a74b779d,ab3253d59f113a9e3acc0dbfaaf9e132a74b779d,"[split] Move finagle-stream over to dispatching.

(A lot of nice cleanup and separation of concerns here.)

RB_ID=258853"
mariusae,2013-12-26 22:48:06,https://api.github.com/repos/twitter/finagle/git/commits/e8b3f4fcd79c72a3561eb44edc551ce77bc96fd8,e8b3f4fcd79c72a3561eb44edc551ce77bc96fd8,"[split] Http: proper streaming dispatch; Core: untyped ChannelTransports

RB_ID=257471"
mariusae,2013-12-26 21:14:32,https://api.github.com/repos/twitter/finagle/git/commits/60df0d68050683df98acb0f5915999a2a99eb4a8,60df0d68050683df98acb0f5915999a2a99eb4a8,"[split] finagle, util: s/setValue(())/setDone()/g

RB_ID=260251"
mariusae,2013-12-23 18:12:04,https://api.github.com/repos/twitter/finagle/git/commits/ae39c0bc1004e6b9fd43f275915286307ed9283e,ae39c0bc1004e6b9fd43f275915286307ed9283e,"[split] DefaultClient: skip hoststatsreceiver rollup if it's null

Shouldn't reduce garbage any, but it seems wasteful to report the
rolled up stats redundantly. (Ideally, NullStatsReceiver would compose
better, so that a RolledUpStatsReceiver(NullStatsReceiver) ==
NullStatsReceiver).)

RB_ID=259735"
luciferous,2013-12-20 22:11:13,https://api.github.com/repos/twitter/finagle/git/commits/3a6f5a10aff9134b2256295072a7532b35fb3316,3a6f5a10aff9134b2256295072a7532b35fb3316,"[split] add nvong to macaw owners

RB_ID=256507"
bmdhacks,2013-12-20 18:12:32,https://api.github.com/repos/twitter/finagle/git/commits/be867fdb0335a242260a11a1008c1c427e17cc43,be867fdb0335a242260a11a1008c1c427e17cc43,"[split] finagle readme fix from github https://github.com/twitter/finagle/pull/231

RB_ID=256489"
mariusae,2013-12-20 17:51:13,https://api.github.com/repos/twitter/finagle/git/commits/ad75af33d4cb52faac3494a2fb4d5fc37435556a,ad75af33d4cb52faac3494a2fb4d5fc37435556a,"[split] ServerSet2: weight/priority vectors

RB_ID=253793"
evnm,2013-12-20 02:22:55,https://api.github.com/repos/twitter/finagle/git/commits/7d7864b89aeb31708dde34afefa20066ff7a704d,7d7864b89aeb31708dde34afefa20066ff7a704d,"[split] Rm all imports of `scala.Some` in the Birdcage.

IntelliJ's Scala plugin litters code with unnecessary imports of
`scala.Some`, which is built into the language. This change removes all
such imports in the Birdcage.

find . -type f -name *.scala -exec grep -l 'import scala\.Some' {} "";"" -exec sed -i '' -e ':a' -e 'N' -e '$!ba'  -e 's/import scala\.Some\n//g' {} "";""

RB_ID=257251
TBR=true"
mariusae,2013-12-18 00:33:38,https://api.github.com/repos/twitter/finagle/git/commits/e671ccbbe92f185fd76387ae09c154b0fc6b78a9,e671ccbbe92f185fd76387ae09c154b0fc6b78a9,"[split] Events: discrete-time values

/**
* Events are instantaneous values, defined only at particular
* instants in time (cf. [[com.twitter.util.Var Vars]], which are
* defined at all times). It is possible to view Events as the
* discrete counterpart to [[com.twitter.util.Var Var]]'s continuous
* nature.
*
* Events are observed by subscribing to them; subscribers are
* [[com.twitter.util.Subject Subjects]] to which the Event's values
* are emitted.
*/

RB_ID=242077"
mariusae,2013-12-17 17:25:09,https://api.github.com/repos/twitter/finagle/git/commits/1179a23b6cbe43b0abd5592b46f9201e3d551980,1179a23b6cbe43b0abd5592b46f9201e3d551980,"[split] P2CLB: O(1), fair-weighted, concurrent load balancer

It???s also *fast*; a single core on my laptop does about 1.7M balances/sec.

/**
* An O(1), concurrent, weighted fair load balancer. This uses the
* ideas behind ""power of 2 choices"" [1] combined with O(1) biased
* coin flipping through the aliasing method, described in
* [[com.twitter.finagle.util.DRV DRV]].
*
* @param underlying the set of (node, weight) pairs over which we
* distribute load according to the given distribution.
*
* @param maxEffort the maximum amount of ""effort"" we're willing to
* expend on a load balancing decision without reweighing.
*
* @param rng The PRNG used for flipping coins. Override for
* deterministic tests.
*
* @param statsReceiver The stats receiver to which operational
* statistics are reported.
*
* [1] Michael Mitzenmacher. 2001. The Power of Two Choices in
* Randomized Load Balancing. IEEE Trans. Parallel Distrib. Syst. 12,
* 10 (October 2001), 1094-1104.
*/

RB_ID=247707"
stuhood,2013-12-17 20:08:59,https://api.github.com/repos/twitter/finagle/git/commits/2a0af3c4033ba949f47ac1b34a8e0bf72908a648,2a0af3c4033ba949f47ac1b34a8e0bf72908a648,"[split] Drop finagle-thriftmux dep on ostrich4

RB_ID=255631"
isnotinvain,2013-12-17 04:25:15,https://api.github.com/repos/twitter/finagle/git/commits/f42844c4b6f4a5d2a6bb4ee25d8eea00b1e2abd8,f42844c4b6f4a5d2a6bb4ee25d8eea00b1e2abd8,"[split] Update finagle README to point to twitter.github.io/finagle

RB_ID=255327"
evnm,2013-12-16 21:43:28,https://api.github.com/repos/twitter/finagle/git/commits/f26a5c3bfb113b02234f29e27023e3e3049402a9,f26a5c3bfb113b02234f29e27023e3e3049402a9,"[split] bump scrooge to 3.11.3-SNAPSHOT

RB_ID=254759
TBR=true"
mariusae,2013-12-13 21:06:50,https://api.github.com/repos/twitter/finagle/git/commits/301fd71e25852627753f530536c548bb951292bf,301fd71e25852627753f530536c548bb951292bf,"[split] P2CLB: O(1), fair-weighted, concurrent load balancer

It's also *fast*; a single core on my laptop does about 1.7M
balances/sec.

/**
* An O(1), concurrent, weighted fair load balancer. This uses the
* ideas behind ""power of 2 choices"" [1] combined with O(1) biased
* coin flipping through the aliasing method, described in
* [[com.twitter.finagle.util.DRV DRV]].
*
* @param underlying the set of (node, weight) pairs over which we
* distribute load according to the given distribution.
*
* @param maxEffort the maximum amount of ""effort"" we're willing to
* expend on a load balancing decision without reweighing.
*
* @param rng The PRNG used for flipping coins. Override for
* deterministic tests.
*
* @param statsReceiver The stats receiver to which operational
* statistics are reported.
*
* [1] Michael Mitzenmacher. 2001. The Power of Two Choices in
* Randomized Load Balancing. IEEE Trans. Parallel Distrib. Syst. 12,
* 10 (October 2001), 1094-1104.
*/

RB_ID=247707"
mariusae,2013-12-13 18:16:12,https://api.github.com/repos/twitter/finagle/git/commits/5bb486b3407b30fa385b6f3d88628103f502c59f,5bb486b3407b30fa385b6f3d88628103f502c59f,"[split] com.twitter.finagle.serverset2.ZkResolverTest.*: mark flaky

RB_ID=253181
NO-QUEUE=true"
mariusae,2013-12-13 05:00:12,https://api.github.com/repos/twitter/finagle/git/commits/307b7b85cf609fbc8b816284a7811ead6f893275,307b7b85cf609fbc8b816284a7811ead6f893275,"[split] ServerSet2: First version

RB_ID=241349"
mosesn,2013-12-12 22:09:15,https://api.github.com/repos/twitter/finagle/git/commits/94c9b38e9828babb87757c87619c9a2959f37934,94c9b38e9828babb87757c87619c9a2959f37934,"[split] finagle-core: allows clean shutdown for insoluble address

RB_ID=251833"
mariusae,2013-12-12 19:23:14,https://api.github.com/repos/twitter/finagle/git/commits/25aaeb85a9a7c2c3c71367f178c194e6ca9a67ee,25aaeb85a9a7c2c3c71367f178c194e6ca9a67ee,"[split] ServerSets2: First version

RB_ID=241349"
evnm,2013-12-12 22:54:09,https://api.github.com/repos/twitter/finagle/git/commits/334c947fb5e4c946136717025e45c586dc0d626f,334c947fb5e4c946136717025e45c586dc0d626f,"[split] finagle-kestrel: Make ReadHandle an abstract class for better Java compatibility

RB_ID=246161"
roanta,2013-12-12 22:08:12,https://api.github.com/repos/twitter/finagle/git/commits/f0ad76a8caffa593a9a54a336b71d2595665d42d,f0ad76a8caffa593a9a54a336b71d2595665d42d,"[split] bump finagle to 6.10.1-SNAPSHOT

RB_ID=252319
TBR=true"
roanta,2013-12-12 17:58:11,https://api.github.com/repos/twitter/finagle/git/commits/f38890a4e92bdf7ee276cc29f53f740bcbda42b8,f38890a4e92bdf7ee276cc29f53f740bcbda42b8,"[split] bump util to 6.10.1-SNAPSHOT

RB_ID=251907
TBR=true"
mosesn,2013-12-10 21:50:10,https://api.github.com/repos/twitter/finagle/git/commits/7d34b0fc5502d92bcb449297ae3cd2383052ed36,7d34b0fc5502d92bcb449297ae3cd2383052ed36,"[split] finagle-core: +1 Exceptions Test, and fixes ServiceTimeoutException naming

RB_ID=245877"
mosesn,2013-12-10 21:15:54,https://api.github.com/repos/twitter/finagle/git/commits/e79285fc15af0e4516eeeecde51f7cab0c0a3f0a,e79285fc15af0e4516eeeecde51f7cab0c0a3f0a,"[split] finagle-core: removes memory leak for never satisfied promises in delayed factory

RB_ID=245573"
mosesn,2013-12-10 19:40:29,https://api.github.com/repos/twitter/finagle/git/commits/4aec3ac07a0a14b8eeafef14222a73cfa1450874,4aec3ac07a0a14b8eeafef14222a73cfa1450874,"[split] finagle-core: Adds a test to check that trivial clientbuilders services close properly

RB_ID=247779"
mosesn,2013-12-10 01:50:05,https://api.github.com/repos/twitter/finagle/git/commits/a82c4999915b9a14b0c3be7f21d518136d2d660a,a82c4999915b9a14b0c3be7f21d518136d2d660a,"[split] finagle-core: increases default tcpConnectTimeout to 350ms

RB_ID=238849"
mosesn,2013-12-09 21:31:07,https://api.github.com/repos/twitter/finagle/git/commits/9b54e40cc8e53209361216b067cad1e71106d2d9,9b54e40cc8e53209361216b067cad1e71106d2d9,"[split] util, finagle, scrooge: Remove deprecated withSources from Build.scala

RB_ID=248091"
mosesn,2013-12-09 21:22:23,https://api.github.com/repos/twitter/finagle/git/commits/573c5e17967efb7f974b733cb39340199a74e968,573c5e17967efb7f974b733cb39340199a74e968,"[split] finagle-spdy: adds finagle-spdy to build.scala

RB_ID=248099"
evnm,2013-12-09 00:33:18,https://api.github.com/repos/twitter/finagle/git/commits/53295e553f01e10206910870b34e4fb850a2c93f,53295e553f01e10206910870b34e4fb850a2c93f,"[split] finagle-memcached: Add ClientBuilder APIs that use Name instead of Group

RB_ID=247221"
evnm,2013-12-06 22:12:02,https://api.github.com/repos/twitter/finagle/git/commits/0f47a52ed8777d5b1c448e11dc9c7b94a973c1f3,0f47a52ed8777d5b1c448e11dc9c7b94a973c1f3,"[split] Resubmisison of commit ""Daemonize threads in ClientBuilders used in library code"".

Commit 06bdc15f52 seems to have been overridden by an unrelated change.

RB_ID=244465"
evnm,2013-12-04 20:35:05,https://api.github.com/repos/twitter/finagle/git/commits/9f65d0a1841e7417d38eca1d8dd6248d3ffe9645,9f65d0a1841e7417d38eca1d8dd6248d3ffe9645,"[split] Daemonize threads in ClientBuilders used in Finagle, Servo, and macaw-core.

Cases have been reported of Finagle services not dying when exceptions are
encountered in their main threads. This is caused by various cases of library
code embedding ClientBuilders, which default to using non-daemon threads. All
non-daemon threads must terminate before the JVM will shut down, so the apps
were left hanging.

RB_ID=244465"
roanta,2013-12-04 01:44:15,https://api.github.com/repos/twitter/finagle/git/commits/dacf9873207dc36fdb3ea13d03b3d87769ed3737,dacf9873207dc36fdb3ea13d03b3d87769ed3737,"[split] fix sbt build

RB_ID=244505
TBR=true"
roanta,2013-12-03 20:16:13,https://api.github.com/repos/twitter/finagle/git/commits/9fdc9f1231c6c9ebf8bb357cbaba5d7a229700ca,9fdc9f1231c6c9ebf8bb357cbaba5d7a229700ca,"[split] bump finagle to 6.9.1-SNAPSHOT

RB_ID=243851
TBR=true"
mosesn,2013-12-02 20:50:49,https://api.github.com/repos/twitter/finagle/git/commits/ff696be28263234877e5ea0bba35f1a4d19b31e4,ff696be28263234877e5ea0bba35f1a4d19b31e4,"[split] bump util to 6.9.1-SNAPSHOT

RB_ID=242923
TBR=true"
mariusae,2013-11-26 18:42:22,https://api.github.com/repos/twitter/finagle/git/commits/9da3bd3777ec93c7f8b68edfb6c5277ce34cba18,9da3bd3777ec93c7f8b68edfb6c5277ce34cba18,"[split] twitter-server-internal: Default Dtab, and a hooking mechanism Install a default Dtab for twitter-server-internal users. We expose an API to install the Dtab for projects that do not yet use the twitter-server-internal directly.

A new flag, -dtab.add, is exposed to add entries to the
base dtab. This may change to expose the entire base dtab.
Note that even without this support, one can effectively install
a new base dtab by adding -dtab.add ???/->fail!,..???

During testing, I also discovered that the current ServerSet
implementation may throw an exception on permissions failure.
(This seems bad: watching a serverset should be a read-only op.)
I???ve worked around this by a fixed retry mechanism. The real fix
is ServerSets2, which does not attempt to create ZK directories.

RB_ID=234989"
bdd,2013-11-26 00:53:41,https://api.github.com/repos/twitter/finagle/git/commits/4aaf8db85c37db617426e91df1d156479663c70e,4aaf8db85c37db617426e91df1d156479663c70e,"[split] finagle & util: sbt version in `build.properties'

Although we provide a script to download sbt, people will continue
trying to compile util and finagle with their sbt installation.  Add a
build.properties file to specify the sbt version we're using so it
doesn't cause them problems.  This is also helpful for cases where our
'./sbt' also fails with ""Error during sbt execution: No Scala version
specified or detected"" message.

Update ./sbt scripts to download 0.12.4 (latest 0.12).

Rework script:
- Remove unused code
- Check SHA1 instead of MD5
- Suggest deleting and running ./sbt again if checksum doesn't match
- Silence curl spam; print the nature of error.

RB_ID=238259
NO-QUEUE=true"
tnarg,2013-11-25 18:22:18,https://api.github.com/repos/twitter/finagle/git/commits/73a7be25e70074c444f0eaf41ceef3893ade8219,73a7be25e70074c444f0eaf41ceef3893ade8219,"[split] Initial ConfigBus client and server checkin

RB_ID=222471"
mosesn,2013-11-22 22:57:10,https://api.github.com/repos/twitter/finagle/git/commits/70845323fa2f11de00d1357db8add4bcea53c78d,70845323fa2f11de00d1357db8add4bcea53c78d,"[split] finagle-core: moved mask cancel filter over to Future.mask, moved from specs => scalatest

RB_ID=222007"
mariusae,2013-11-22 00:34:20,https://api.github.com/repos/twitter/finagle/git/commits/073eeccbaa6da0cbaf96e4fc3e4bcecbcae1d8ba,073eeccbaa6da0cbaf96e4fc3e4bcecbcae1d8ba,"[split] StabilizingAddr: Proper passthrough.

RB_ID=234977"
bdd,2013-11-21 23:46:43,https://api.github.com/repos/twitter/finagle/git/commits/3407bbce3bfa6400142c5f5461e52392282f1f0c,3407bbce3bfa6400142c5f5461e52392282f1f0c,"[split] finagle & util: 2.10 pattern matching strictness

2.10 compiler is much more strict about pattern matching exceptions and
warns if catch all case is not qualified with `Throwable`.   So let's do
that to decrease compiler warnings.

RB_ID=237379"
bdd,2013-11-21 23:48:45,https://api.github.com/repos/twitter/finagle/git/commits/247b1af731d112234065943449a57d5adf148d2c,247b1af731d112234065943449a57d5adf148d2c,"[split] finagle-(stress|ostrich4): deprecated Netty methods

`DefaultHttpMessage` deprecated (get|set)Header methods.  Use
`.header.set|get` instead.

RB_ID=237349"
roanta,2013-11-22 00:54:35,https://api.github.com/repos/twitter/finagle/git/commits/caeef7b0bd1d1666f6ef98e3cbf9c43bdb938e80,caeef7b0bd1d1666f6ef98e3cbf9c43bdb938e80,"[split] finagle-docs: fix changelog

RB_ID=237339"
bdd,2013-11-21 22:12:42,https://api.github.com/repos/twitter/finagle/git/commits/18dd562677e5ead20bb1274e33b3a15bace9b1a5,18dd562677e5ead20bb1274e33b3a15bace9b1a5,"[split] finagle: fix a tag breaking scaladoc

`<address>` is preserved as an HTML tag in Scaladoc, causing
non-well-formed HTML output.

RB_ID=237341
NO-QUEUE=true"
mosesn,2013-11-19 22:45:00,https://api.github.com/repos/twitter/finagle/git/commits/207c483cbf9f0c9cc7806ce5f8949178abbebaf6,207c483cbf9f0c9cc7806ce5f8949178abbebaf6,"[split] finagle-testers: small latency evaluation framework

RB_ID=231287"
evnm,2013-11-19 18:24:28,https://api.github.com/repos/twitter/finagle/git/commits/47220976860fa05537ce367ec983bc17f39ef3b3,47220976860fa05537ce367ec983bc17f39ef3b3,"[split] Finagle: val up a few more constant `StatsReceiver.scope`s and `.counter`s

RB_ID=231399"
mariusae,2013-11-18 18:15:16,https://api.github.com/repos/twitter/finagle/git/commits/0c69aefa116637ef6a83a1ec7635c7b29cdbc732,0c69aefa116637ef6a83a1ec7635c7b29cdbc732,"[split] Dtab: make Dtab.base changeable, fix RefineryTest

This may be a temporary change; it makes integrating with non
twitter-server systems much simpler.

RB_ID=231543"
stevegury,2013-11-16 00:44:39,https://api.github.com/repos/twitter/finagle/git/commits/90a7aa6bd88780459619ccad2a49cd6abf308787,90a7aa6bd88780459619ccad2a49cd6abf308787,"[split] Release finagle version 6.8.1

RB_ID=233361
TBR=true"
stevegury,2013-11-15 22:57:28,https://api.github.com/repos/twitter/finagle/git/commits/71478bbdf03af6a96cd26df3456d389481cdc758,71478bbdf03af6a96cd26df3456d389481cdc758,"[split] Release ostrich v 9.2.1

RB_ID=232935
TBR=true"
bmdhacks,2013-11-15 22:30:55,https://api.github.com/repos/twitter/finagle/git/commits/12e183c2f7dcdf1a99e2f92d47257e0b60b38522,12e183c2f7dcdf1a99e2f92d47257e0b60b38522,"[split] Create script to test all of CSL with pants This also fixes a few issues when testing with pants.

RB_ID=226911"
stevegury,2013-11-15 18:14:25,https://api.github.com/repos/twitter/finagle/git/commits/9acd9fefa1b1976da1135ce1690706810485940e,9acd9fefa1b1976da1135ce1690706810485940e,"[split] Release util version 6.8.1

RB_ID=232807
TBR=true"
mosesn,2013-11-14 23:32:24,https://api.github.com/repos/twitter/finagle/git/commits/f73140fbba94f342278475f247c80935c8c3e7f0,f73140fbba94f342278475f247c80935c8c3e7f0,"[split] bump scrooge to 3.11.2-SNAPSHOT

RB_ID=232185
TBR=true"
stevegury,2013-11-14 22:28:01,https://api.github.com/repos/twitter/finagle/git/commits/d14586e3642951a630b6c80b6f07d2b098c7cb9a,d14586e3642951a630b6c80b6f07d2b098c7cb9a,"[split] Finagle: Add finagle-testers in the sbt root

RB_ID=230835"
stevegury,2013-11-14 05:28:09,https://api.github.com/repos/twitter/finagle/git/commits/8c30bd2ddddff64e5d51634e8ef678c47dd67177,8c30bd2ddddff64e5d51634e8ef678c47dd67177,"Merge branch 'tmp'

Conflicts:
	CHANGES
	finagle-benchmark/pom.xml
	finagle-commons-stats/pom.xml
	finagle-core/pom.xml
	finagle-example/pom.xml
	finagle-exception/pom.xml
	finagle-exp/pom.xml
	finagle-http/pom.xml
	finagle-kestrel/pom.xml
	finagle-mdns/pom.xml
	finagle-memcached/pom.xml
	finagle-mux/pom.xml
	finagle-mysql/pom.xml
	finagle-native/pom.xml
	finagle-ostrich4/pom.xml
	finagle-redis/pom.xml
	finagle-serversets/pom.xml
	finagle-spdy/pom.xml
	finagle-stats/pom.xml
	finagle-stream/pom.xml
	finagle-stress/pom.xml
	finagle-swift/pom.xml
	finagle-test/pom.xml
	finagle-thrift/pom.xml
	finagle-thriftmux/pom.xml
	finagle-zipkin/pom.xml
	pom.xml
	project/Build.scala
	project/plugins.sbt"
stevegury,2013-11-13 22:13:00,https://api.github.com/repos/twitter/finagle/git/commits/5f970bee210afacb2a67ff6eeba131ce9a46910f,5f970bee210afacb2a67ff6eeba131ce9a46910f,"[split] finagle: Fix sbt agaaaiiinnn

RB_ID=230781
NO-QUEUE=true"
stevegury,2013-11-13 19:01:39,https://api.github.com/repos/twitter/finagle/git/commits/2197f8819c2fcc39d1bece3515bfa638270659ec,2197f8819c2fcc39d1bece3515bfa638270659ec,"[split] finagle: Fix sbt...

RB_ID=230541
NO-QUEUE=true"
stevegury,2013-11-13 06:47:27,https://api.github.com/repos/twitter/finagle/git/commits/666ada936f14212d9e5b242f1812baac06793509,666ada936f14212d9e5b242f1812baac06793509,"[split] Release finagle version 6.8.0

RB_ID=230371
TBR=true"
stevegury,2013-11-13 04:39:34,https://api.github.com/repos/twitter/finagle/git/commits/5c2ffcd8f29d53f2a1fa58ff3874ff4f97172a0a,5c2ffcd8f29d53f2a1fa58ff3874ff4f97172a0a,"[split] Release ostrich version 9.2.0

RB_ID=230327
TBR=true"
mariusae,2013-11-12 23:58:42,https://api.github.com/repos/twitter/finagle/git/commits/23b899b61843ec2177c6d97a511effd9ddd45c7a,23b899b61843ec2177c6d97a511effd9ddd45c7a,"[split] Higher fidelity addrs from ZK We do the best we can with the current server set implementation. A new one is coming soon; this should be enough to limp along until then.

* This also sneaks in names for uses of the legacy
Resolver.resolve interfaces by creating a type of
Group which is little more than a container for a Name.

* Also caches resolutions down to env/role/job.

* Phrases stabilizing group in terms of Addrs.

Note: the goal with StabilizingAddr is to replicate
exactly what StabilizingGroup did. I don???t want to
change it. Something new and simpler is coming soon
enough. StabilizingAddr is transient.

RB_ID=219996"
stevegury,2013-11-13 00:43:09,https://api.github.com/repos/twitter/finagle/git/commits/645595910475246c2637409cce577d393bd2ac07,645595910475246c2637409cce577d393bd2ac07,"[split] release util version 6.8.0

RB_ID=230117
TBR=true"
stevegury,2013-11-12 22:39:12,https://api.github.com/repos/twitter/finagle/git/commits/403a8071f70769120017a5e1a0c8df4f62502cf0,403a8071f70769120017a5e1a0c8df4f62502cf0,"[split] Finagle: Mark all ZK tests as flaky until we can do this better.

RB_ID=229877"
roanta,2013-11-12 18:19:59,https://api.github.com/repos/twitter/finagle/git/commits/f5cb3b10b42b764ddb18d66ed3e49a0362f37cc8,f5cb3b10b42b764ddb18d66ed3e49a0362f37cc8,"[split] finagle-mysql: better type support

The BINARY and VARBINARY types are similar to CHAR and VARCHAR,
except that they contain binary strings rather than nonbinary strings.
That is, they contain byte strings rather than character strings. This
caused a problem because finagle-mysql conflated the types. This patch
fixes that and improves handling of types by moving the decoding
of all non-primitive types to extractors.

RB_ID=223281
TBR=true"
stevegury,2013-11-12 00:34:38,https://api.github.com/repos/twitter/finagle/git/commits/68b995b3ee4cc0edbf2d2dbe98b8e443da37b416,68b995b3ee4cc0edbf2d2dbe98b8e443da37b416,"[split] finagle-http: Allow Integer to extract negative number

RB_ID=228307"
jdanbrown,2013-11-12 00:35:44,https://api.github.com/repos/twitter/finagle/git/commits/6c701872ef127e045e4b92348720700256c81409,6c701872ef127e045e4b92348720700256c81409,"[split] finagle-redis: Decode nested multi-bulk replies

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=228763"
jdanbrown,2013-11-11 19:46:19,https://api.github.com/repos/twitter/finagle/git/commits/4bdd421416cea2a1fbd8e3952a542cbacc8ef3be,4bdd421416cea2a1fbd8e3952a542cbacc8ef3be,"[split] finagle-redis: Allow expirations in the past

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=228253"
evnm,2013-11-09 17:17:52,https://api.github.com/repos/twitter/finagle/git/commits/f51bf81aa78754724d34c7c72c06fff954b0332d,f51bf81aa78754724d34c7c72c06fff954b0332d,"[split] Finagle: Return empty string when resolving an unlabeled address

RB_ID=226141"
evnm,2013-11-09 17:18:46,https://api.github.com/repos/twitter/finagle/git/commits/eb2015557815f4f927f407d87b7a63e0f17c5e03,eb2015557815f4f927f407d87b7a63e0f17c5e03,"[split] Finagle: Don't re-scope StatsReceivers per request failure

RB_ID=227863"
evnm,2013-11-09 00:34:32,https://api.github.com/repos/twitter/finagle/git/commits/132a2638b5fd4518627ebb1fbd8bbb0b625c757e,132a2638b5fd4518627ebb1fbd8bbb0b625c757e,"[split] finagle-thrift: Unconditionally set TraceId and ClientId on servers

RB_ID=224645"
mosesn,2013-11-06 23:47:12,https://api.github.com/repos/twitter/finagle/git/commits/31dea6befb9349cc191f064299c984d0cc43f0ee,31dea6befb9349cc191f064299c984d0cc43f0ee,"[split] finagle-core: tests default client

RB_ID=223607"
evnm,2013-11-06 01:34:35,https://api.github.com/repos/twitter/finagle/git/commits/bb6f4fb699b0afde0a24b7a3afbd8ae44b490fcf,bb6f4fb699b0afde0a24b7a3afbd8ae44b490fcf,"[split] finagle-serversets: Skip flaky ""filter by shardid"" test

RB_ID=222911"
roanta,2013-11-05 22:17:25,https://api.github.com/repos/twitter/finagle/git/commits/4e686ef84672cb33082c543bf2f4a52d538f38b1,4e686ef84672cb33082c543bf2f4a52d538f38b1,"[split] finagle-mysql: fix readLengthCodedBinary to read longs

RB_ID=224119"
theatrus,2013-11-05 04:32:03,https://api.github.com/repos/twitter/finagle/git/commits/021ce96e7134042769c3788d2400f6ccd191b381,021ce96e7134042769c3788d2400f6ccd191b381,"[split] finagle-testers: Reject and blackhole failters (filters which intentionally fail), for integration testing of finagle services

RB_ID=222075
TBR=true"
sprsquish,2013-11-04 23:58:34,https://api.github.com/repos/twitter/finagle/git/commits/71ce984262d57f4508647d6c2f15bb136317d6f1,71ce984262d57f4508647d6c2f15bb136317d6f1,"[split] allow dots in the names of mdns announcements

RB_ID=223653"
bdd,2013-11-04 23:13:00,https://api.github.com/repos/twitter/finagle/git/commits/aa2930b855d5aa7cda3e43a8d650b8b3f5ba37cf,aa2930b855d5aa7cda3e43a8d650b8b3f5ba37cf,"[split] util and finagle scaladoc warning cleanup

- Add Unidoc support to util, copy-pasting from Finagle
- Use proper Scaladoc tags
- Wiki syntax for text decoration
- String trailing spaces from files we touched
- Fix usage of Scaladoc macro

RB_ID=222977"
mosesn,2013-11-04 18:38:45,https://api.github.com/repos/twitter/finagle/git/commits/1f4188e3623158e7c2860a79fcd4855a0533f9f7,1f4188e3623158e7c2860a79fcd4855a0533f9f7,"[split] finagle-doc: documented all of the stats in finagle-core

RB_ID=213522"
evnm,2013-11-04 17:42:55,https://api.github.com/repos/twitter/finagle/git/commits/74de44bac98837cd4a7bed566d868b75c644e83f,74de44bac98837cd4a7bed566d868b75c644e83f,"[split] finagle-thrift: Add end-to-end tests for ClientId propagation

RB_ID=215492"
mosesn,2013-10-31 23:39:45,https://api.github.com/repos/twitter/finagle/git/commits/d6e11393b3361930516ca5004f71b9b4d4a43f44,d6e11393b3361930516ca5004f71b9b4d4a43f44,"[split] finagle: adds a contributing.md to finagle

RB_ID=219328"
mosesn,2013-10-31 20:45:03,https://api.github.com/repos/twitter/finagle/git/commits/4a8cd511b82f565e6763ccc158a601bb7e1820ab,4a8cd511b82f565e6763ccc158a601bb7e1820ab,"[split] finagle-stats / twitter-server: adds a cautious registration to HttpMuxer / adds a default metrics endpoint to twitter-server

RB_ID=199469"
mosesn,2013-10-31 18:34:22,https://api.github.com/repos/twitter/finagle/git/commits/0944ae9ae22a27b3733f039c024780edda8b664e,0944ae9ae22a27b3733f039c024780edda8b664e,"[split] finagle-core: verifies that statsfilter has the correct behavior

RB_ID=220866"
luciferous,2013-10-30 21:07:05,https://api.github.com/repos/twitter/finagle/git/commits/bbe3ae90652a32f0fa82e0742f5cd11b55f08f29,bbe3ae90652a32f0fa82e0742f5cd11b55f08f29,"[split] Use Reader for streaming in finagle-http

RB_ID=206394"
mosesn,2013-10-29 23:40:10,https://api.github.com/repos/twitter/finagle/git/commits/047fddf3ad7fd05bf8885d2c3e26234b31a78cfe,047fddf3ad7fd05bf8885d2c3e26234b31a78cfe,"[split] finagle-core: no longer makes an anonymous exception in DefaultClient

RB_ID=219352"
mosesn,2013-10-28 19:50:27,https://api.github.com/repos/twitter/finagle/git/commits/de6f553f83d4d53819ec795e4c76563bbd208f1e,de6f553f83d4d53819ec795e4c76563bbd208f1e,"[split] util-core: adds closable.close(Duration)

RB_ID=200369"
kevinoliver,2013-10-28 18:26:01,https://api.github.com/repos/twitter/finagle/git/commits/bf6c70062889673ce726d9a4f0776517cdf65b40,bf6c70062889673ce726d9a4f0776517cdf65b40,"[split] finagle-core: add pool_num_waited counter to WatermarkPool

RB_ID=217234"
mariusae,2013-10-26 04:59:49,https://api.github.com/repos/twitter/finagle/git/commits/564b0a06c9358801034ae0a5e55900afee90800b,564b0a06c9358801034ae0a5e55900afee90800b,"[split] Protocol support for Wily: HTTP, thrift, mux (& thus thriftmux). This also contains some collateral changes:

- treat Dtab as a first-class Scala collection, always an indexed seq.
- compute dtab diffs efficiently
- reify destination names

RB_ID=213248"
mosesn,2013-10-25 18:24:20,https://api.github.com/repos/twitter/finagle/git/commits/6b19a3f3270bb831166dda2153fb194e1cfce115,6b19a3f3270bb831166dda2153fb194e1cfce115,"[split] finagle-core: buffers requests until Var[Addr] is in a ready state

RB_ID=210150"
kevinoliver,2013-10-25 16:55:03,https://api.github.com/repos/twitter/finagle/git/commits/258dfd4efb959ac849bd9726474afd431a39ce81,258dfd4efb959ac849bd9726474afd431a39ce81,"[split] util-core: improve allocation/perf in Offer.choose and Future.select

- Added new method Future.selectIndex providing positional ""select""

RB_ID=216278"
evnm,2013-10-25 01:21:55,https://api.github.com/repos/twitter/finagle/git/commits/7e3098aae69909726ea69b3f879fa492206ffaae,7e3098aae69909726ea69b3f879fa492206ffaae,"[split] finagle-core: Add putLong and getLong functions to util.ByteArrays

RB_ID=214582"
bmdhacks,2013-10-25 00:47:23,https://api.github.com/repos/twitter/finagle/git/commits/8394570fc17eeaf75fffea1498c08135726b0966,8394570fc17eeaf75fffea1498c08135726b0966,"[split] finagle: don't blow up if we don't have a resolvable host name

RB_ID=215712"
kevinoliver,2013-10-24 23:54:21,https://api.github.com/repos/twitter/finagle/git/commits/268e1c818ab011941a438ba6c9321e11479608e3,268e1c818ab011941a438ba6c9321e11479608e3,"[split] finagle-core: rm allocation in RichChannelFuture.apply's operationComplete

RB_ID=215440"
evnm,2013-10-23 21:19:11,https://api.github.com/repos/twitter/finagle/git/commits/038dba2ee1f7d3f697f2851b6b76455e13a1f8f3,038dba2ee1f7d3f697f2851b6b76455e13a1f8f3,"[split] Revert ""finagle-thriftmux: Support ClientIds at the protocol level""

Commit d8db35df1 seems to be breaking ClientId-propagation.

RB_ID=215258
TBR=true"
roanta,2013-10-23 22:53:24,https://api.github.com/repos/twitter/finagle/git/commits/2065ebb858ddfbc72d48acca2b2b9e5351d1cd25,2065ebb858ddfbc72d48acca2b2b9e5351d1cd25,"[split] bump scrooge to 3.10.2-SNAPSHOT

RB_ID=215296
TBR=true"
mariusae,2013-10-23 15:20:05,https://api.github.com/repos/twitter/finagle/git/commits/2796688e19ac96b03d066872fd4de0335881bda7,2796688e19ac96b03d066872fd4de0335881bda7,"[split] Var: remove Var.apply; introduce Var.sample

RB_ID=211248"
roanta,2013-10-23 16:17:16,https://api.github.com/repos/twitter/finagle/git/commits/ad4a37108e3285704bc811dcc227ae40a91e1d79,ad4a37108e3285704bc811dcc227ae40a91e1d79,"[split] finagle: fix changelog

RB_ID=214388"
evnm,2013-10-23 02:16:48,https://api.github.com/repos/twitter/finagle/git/commits/e4c47bc5bd32258862ca5842dbadb6951ff6fae2,e4c47bc5bd32258862ca5842dbadb6951ff6fae2,"[split] finagle-thriftmux: Support ClientIds at the protocol level

RB_ID=211352"
kevinoliver,2013-10-22 21:13:57,https://api.github.com/repos/twitter/finagle/git/commits/e9b4b9ad4c278833338db589543527026114c39b,e9b4b9ad4c278833338db589543527026114c39b,"[split] finagle-kestrel: memory allocation improvements

RB_ID=212588"
roanta,2013-10-22 00:40:54,https://api.github.com/repos/twitter/finagle/git/commits/346de94daf8bd42375bd326fcc45fe04fb3f5f9b,346de94daf8bd42375bd326fcc45fe04fb3f5f9b,"[split] bump scrooge to 3.10.1-SNAPSHOT

RB_ID=213454
TBR=true
NO-QUEUE=true"
roanta,2013-10-22 00:23:45,https://api.github.com/repos/twitter/finagle/git/commits/ad097c3769d29e1ca477f3efe572c1633437b8c8,ad097c3769d29e1ca477f3efe572c1633437b8c8,"[split] scrooge rollback to 3.9.3-SNAPSHOT

RB_ID=213424
TBR=true
NO-QUEUE=true"
kevinoliver,2013-10-21 03:16:58,https://api.github.com/repos/twitter/finagle/git/commits/a06602897ed73a419e14f184ea89c32a8373f14e,a06602897ed73a419e14f184ea89c32a8373f14e,"[split] finagle-memcached: more performance and less allocations in Decoder

RB_ID=211918"
roanta,2013-10-20 00:11:52,https://api.github.com/repos/twitter/finagle/git/commits/f43f32adaa4633d72a4caa6396ee895d95c70d20,f43f32adaa4633d72a4caa6396ee895d95c70d20,"[split] bump finagle to 6.7.5-SNAPSHOT

RB_ID=212508
TBR=true"
roanta,2013-10-18 22:03:00,https://api.github.com/repos/twitter/finagle/git/commits/34efd5ba989211862d60b2817583e29819349d68,34efd5ba989211862d60b2817583e29819349d68,"[split] bump util to 6.7.1-SNAPSHOT

RB_ID=212150
TBR=true"
tnarg,2013-10-18 20:39:12,https://api.github.com/repos/twitter/finagle/git/commits/abf532b50a455383bf11cef8f3d09b1c225ae948,abf532b50a455383bf11cef8f3d09b1c225ae948,"[split] [finagle-mux] Adds Session for mux message passing and bidirectional RPC

RB_ID=187527"
bmdhacks,2013-10-17 23:09:53,https://api.github.com/repos/twitter/finagle/git/commits/822223d1670613e9744f39e43961ffc317250251,822223d1670613e9744f39e43961ffc317250251,"[split] finagle-zipkin: depend on scrooge-core instead of scrooge-runtime

RB_ID=211280
TBR=true"
roanta,2013-10-17 20:05:22,https://api.github.com/repos/twitter/finagle/git/commits/0ed5f580ec5dd9eee6b5b3b06246d13023391521,0ed5f580ec5dd9eee6b5b3b06246d13023391521,"[split] finagle-doc: nits, make sure finagle version number propagates to sphinx

RB_ID=210892"
bmdhacks,2013-10-17 17:14:34,https://api.github.com/repos/twitter/finagle/git/commits/8e9cd351eefacdddadefb0a513626f5ce8cebd78,8e9cd351eefacdddadefb0a513626f5ce8cebd78,"[split] bump sbt versions for build

RB_ID=210586
TBR=true"
bmdhacks,2013-10-17 01:01:36,https://api.github.com/repos/twitter/finagle/git/commits/550848ba5ba9be36cafd7d27b3d367c092250f0b,550848ba5ba9be36cafd7d27b3d367c092250f0b,"[split] bump scrooge to 3.9.3-SNAPSHOT

RB_ID=210574
TBR=true"
bmdhacks,2013-10-16 23:00:55,https://api.github.com/repos/twitter/finagle/git/commits/2b2a3eaa5d87e8a2c40f068adcc12a628727bc69,2b2a3eaa5d87e8a2c40f068adcc12a628727bc69,"[split] bump finagle to 6.7.4-SNAPSHOT

RB_ID=210176"
stevegury,2013-10-16 17:25:58,https://api.github.com/repos/twitter/finagle/git/commits/9e1675080d0c634ad9761b4aa094709d161fd986,9e1675080d0c634ad9761b4aa094709d161fd986,"[split] finagle-core: Fail the queue before closing the connection

RB_ID=173739"
bmdhacks,2013-10-16 16:48:59,https://api.github.com/repos/twitter/finagle/git/commits/a183b0c6b8dc0b8a35b6c3e6dc3c5ac1b4c2401a,a183b0c6b8dc0b8a35b6c3e6dc3c5ac1b4c2401a,"[split] Finagle 6.7.2 release

RB_ID=209638"
mariusae,2013-10-15 19:56:52,https://api.github.com/repos/twitter/finagle/git/commits/db6be68849c3aa1e666b0bd34d9e1d72a030a4a2,db6be68849c3aa1e666b0bd34d9e1d72a030a4a2,"[split] LoadService: skip empty lines

RB_ID=208378"
bmdhacks,2013-10-14 23:14:06,https://api.github.com/repos/twitter/finagle/git/commits/02f357238cde0b1a24e9604504f73114e9fbb6e2,02f357238cde0b1a24e9604504f73114e9fbb6e2,"[split] Improve GC profile of Var and Group With the current implementation of Var, calling apply() allocates a couple of objects and increments the version variable. This causes some GC problems, and will violate the observer ordering guarantee when the version integer rolls over.

RB_ID=202893"
mosesn,2013-10-14 20:19:16,https://api.github.com/repos/twitter/finagle/git/commits/443b5ef562a624eb011048a945166338336a607c,443b5ef562a624eb011048a945166338336a607c,"[split] finagle-core: added a simple defaultpool test to show how it works + more docs

RB_ID=205198"
roanta,2013-10-10 20:29:43,https://api.github.com/repos/twitter/finagle/git/commits/db9e33796537e0d7aea737009cdaccd37f3d8f75,db9e33796537e0d7aea737009cdaccd37f3d8f75,"[split] finagle-mysql: move protocol into a dispatcher and port to new style apis.

RB_ID=187441"
mosesn,2013-10-10 18:40:07,https://api.github.com/repos/twitter/finagle/git/commits/fbe0841ae8ffb6ab08c0cce644d3fef9f40b82e5,fbe0841ae8ffb6ab08c0cce644d3fef9f40b82e5,"[split] finagle-core: removes commented out casting filter

RB_ID=205248"
evnm,2013-10-10 18:07:03,https://api.github.com/repos/twitter/finagle/git/commits/d596e2d07320ee9f450b3455dd73bffd8ecc4190,d596e2d07320ee9f450b3455dd73bffd8ecc4190,"[split] release finagle 6.7.1

The release of Finagle 6.7.0 failed midway through due to tooling
issues [1], leaving artifacts published for some subprojects but not
others. We're rolling forward with a 6.7.1 release.

[1] https://reviewboard.twitter.biz/r/205208/[INFO] finagle-benchmark

RB_ID=205426
TBR=true"
evnm,2013-10-10 01:34:49,https://api.github.com/repos/twitter/finagle/git/commits/868ec72bcf7f534a877c9319a3937d9a7986a113,868ec72bcf7f534a877c9319a3937d9a7986a113,[split] release 6.7.1 of finagle
evnm,2013-10-10 01:16:43,https://api.github.com/repos/twitter/finagle/git/commits/6a498787c2e5c095edccdbfe2c6a7590cfe030d3,6a498787c2e5c095edccdbfe2c6a7590cfe030d3,[split] bump finagle patch
evnm,2013-10-10 01:15:53,https://api.github.com/repos/twitter/finagle/git/commits/7a3f713dd5ad20d4cd288ea29b9205404afc5769,7a3f713dd5ad20d4cd288ea29b9205404afc5769,[split] update changelog
evnm,2013-10-10 01:05:48,https://api.github.com/repos/twitter/finagle/git/commits/9d836ecdfa92716ba7b0f33ca3c8bb45cadbc761,9d836ecdfa92716ba7b0f33ca3c8bb45cadbc761,[split] Prepare branch for release of finagle 6.7.1
mariusae,2013-10-09 23:17:15,https://api.github.com/repos/twitter/finagle/git/commits/7d149798c853c0b690c508454ab2c4475f400ad4,7d149798c853c0b690c508454ab2c4475f400ad4,"[split] Finagle: Dynamic dtab, Name refinement

Fully dynamic (self-adjusting) name refinement via Vars.

RB_ID=202971"
mariusae,2013-10-09 23:03:40,https://api.github.com/repos/twitter/finagle/git/commits/a3eae5db899a1be8fcc3b1d2558c3979829da01c,a3eae5db899a1be8fcc3b1d2558c3979829da01c,"[split] Fix service loading with binary deploy jars.

ServiceLoader doesn???t work well with pants???s binary deploy jars. Fix
this by introducing out own class path walking mechanism.

RB_ID=204157"
evnm,2013-10-09 21:27:52,https://api.github.com/repos/twitter/finagle/git/commits/25286f78d572cb9801daafecfaba75a4fa6c3b8f,25286f78d572cb9801daafecfaba75a4fa6c3b8f,"[split] bump util to 6.6.1-SNAPSHOT

RB_ID=204962
TBR=true"
evnm,2013-10-09 19:27:43,https://api.github.com/repos/twitter/finagle/git/commits/29399cb6d9aa92e0e00f6b181dc1cc79d734d7e3,29399cb6d9aa92e0e00f6b181dc1cc79d734d7e3,"[split] Finagle: Add a request context for ClientId.

RB_ID=197379"
evnm,2013-10-08 23:34:52,https://api.github.com/repos/twitter/finagle/git/commits/08079eea555cfab51056f378ff2c310e4ebbd694,08079eea555cfab51056f378ff2c310e4ebbd694,"[split] Finagle: Reuse a single exception instance in ServerDispatcher.

RB_ID=204181"
mariusae,2013-10-08 18:49:22,https://api.github.com/repos/twitter/finagle/git/commits/53aa82c81d5613bff987bf65d6d21e96644a70bd,53aa82c81d5613bff987bf65d6d21e96644a70bd,"[split] Update com.twitter.finagle package documentation

RB_ID=198635"
mariusae,2013-10-07 18:17:32,https://api.github.com/repos/twitter/finagle/git/commits/1ae7464334058f9d84bd11e9d99547bef24a4ae2,1ae7464334058f9d84bd11e9d99547bef24a4ae2,"[split] Finagle: introduce staged names

Explicitly stage names. The latest Wily change is in terms of these
APIs.

Introduces:

*    Name: an object identifier. Abstract. Can be bound.
*    Addr: a bound name.

That is, names identifies objects; addresses identify where they are.
Resolvers parse and evaluate strings into names. Names are may be
bound dynamically (i.e. to Var[Addr]).

Thus, if you are given a string, it goes through these stages:

String -eval-> Name -bind-> Var[Addr]

RB_ID=198655"
bmdhacks,2013-10-04 22:18:05,https://api.github.com/repos/twitter/finagle/git/commits/82f1589c7686bba55cbbe26c1219068d0c6a506d,82f1589c7686bba55cbbe26c1219068d0c6a506d,"[split] Fix a race condition in ListeningSever.announce and don't announce 0.0.0.0

RB_ID=201517"
mosesn,2013-10-04 00:01:23,https://api.github.com/repos/twitter/finagle/git/commits/806a074bdf34fd7b680572ce968b965da4d70770,806a074bdf34fd7b680572ce968b965da4d70770,"[split] finagle-core: made socket writable duration stats more useful

RB_ID=198263"
mosesn,2013-10-02 07:45:07,https://api.github.com/repos/twitter/finagle/git/commits/4dec671738453d44438847b7c8e8fde9fbd51001,4dec671738453d44438847b7c8e8fde9fbd51001,"[split] finagle-serversets: marks ZookeeperServerSetCluster as deprecated

RB_ID=198341"
bmdhacks,2013-10-01 22:01:56,https://api.github.com/repos/twitter/finagle/git/commits/453b1123c441329b2d2700c1529b38de38e0e370,453b1123c441329b2d2700c1529b38de38e0e370,"[split] Fix and reenable some formerly-flaky tests Now that Time.withXXXX is threadsafe, these should be good to reenable.

RB_ID=196433"
mariusae,2013-10-01 16:48:55,https://api.github.com/repos/twitter/finagle/git/commits/cf4eb07a2b29723661d45b293231b808c055f63b,cf4eb07a2b29723661d45b293231b808c055f63b,"[split] finagle-doc: link to ""Your Server as a Function""

RB_ID=197885"
mkhq,2013-09-26 19:29:28,https://api.github.com/repos/twitter/finagle/git/commits/94913bd6324557266ddf527d794a6af0c744bb63,94913bd6324557266ddf527d794a6af0c744bb63,"[split] SRandMember, send command without count when None

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=192789"
bmdhacks,2013-09-26 18:03:49,https://api.github.com/repos/twitter/finagle/git/commits/a183a02068c1cee8f9544951b43884991ca09597,a183a02068c1cee8f9544951b43884991ca09597,"[split] util.Time - make Time.withTimeAt and friends mostly threadsafe Now freezing time will only affect your local execution state and will not bother neighboring threads.  This should hopefully resolve issues with flaky tests using Time.withCurrentTimeFrozen etc.

RB_ID=184031"
sprsquish,2013-09-26 16:41:08,https://api.github.com/repos/twitter/finagle/git/commits/dc34eb72a08f5f1ae7faa445d3a6907c56f06f3f,dc34eb72a08f5f1ae7faa445d3a6907c56f06f3f,"[split] set the client id in thriftmux

RB_ID=194863"
mosesn,2013-09-26 01:27:31,https://api.github.com/repos/twitter/finagle/git/commits/04ecd7a98564a50021afc15a6218b0572bfeebeb,04ecd7a98564a50021afc15a6218b0572bfeebeb,"[split] finagle-core: moves the connections gauge into ChannelStatsHandler for gc

RB_ID=194271"
roanta,2013-09-25 17:53:01,https://api.github.com/repos/twitter/finagle/git/commits/ebfd3257f04195caf1b158d7d729312c476988bd,ebfd3257f04195caf1b158d7d729312c476988bd,"[split] Add Client/Server Anatomy to docs

RB_ID=177091"
roanta,2013-09-25 16:39:18,https://api.github.com/repos/twitter/finagle/git/commits/2c873f401e4d4db09abb1730fb45faa672448f08,2c873f401e4d4db09abb1730fb45faa672448f08,"[split] Export a health stat in StabilizingGroup

RB_ID=192697"
evnm,2013-09-24 21:20:57,https://api.github.com/repos/twitter/finagle/git/commits/a0bdc1cc393df19d4c93765593d39f471d9f19e3,a0bdc1cc393df19d4c93765593d39f471d9f19e3,"[split] Finagle: Add a test for Proc exception-swallowing.

RB_ID=191267"
kmonkeyjam,2013-09-24 20:14:24,https://api.github.com/repos/twitter/finagle/git/commits/72a88e793494b67a1be11131925a4a070019fc28,72a88e793494b67a1be11131925a4a070019fc28,"[split] bump scrooge to 3.9.1-SNAPSHOT

RB_ID=193745
TBR=true"
mosesn,2013-09-24 18:25:32,https://api.github.com/repos/twitter/finagle/git/commits/3c87ca43c726257e6fdfbbfa1ad5ea722b8a2106,3c87ca43c726257e6fdfbbfa1ad5ea722b8a2106,"[split] finagle-core: added UnwritableChannel stat to ChannelStatsHandler

RB_ID=193245"
xinxiang-twitter,2013-09-24 18:23:23,https://api.github.com/repos/twitter/finagle/git/commits/9233fbfcb27a5a5069d93174bda74132ebf464b5,9233fbfcb27a5a5069d93174bda74132ebf464b5,"[split] read key remapping config off from zk

RB_ID=192277"
mosesn,2013-09-24 17:30:10,https://api.github.com/repos/twitter/finagle/git/commits/6893fb738a401362c1dde7aef772cd1da359e015,6893fb738a401362c1dde7aef772cd1da359e015,"[split] finagle-core: fix sourcing for SourcedExceptions

RB_ID=186115"
mariusae,2013-09-20 23:22:56,https://api.github.com/repos/twitter/finagle/git/commits/d06380090f6a0814d9e48f91db18c23114c4845d,d06380090f6a0814d9e48f91db18c23114c4845d,"[split] Var: move to core util, add Var.unapply

RB_ID=190993"
xinxiang-twitter,2013-09-20 21:09:11,https://api.github.com/repos/twitter/finagle/git/commits/4003545235dc11cc120ee9fd623e4fba60a665b5,4003545235dc11cc120ee9fd623e4fba60a665b5,"[split] mark additional flaky test

RB_ID=191931"
mosesn,2013-09-20 20:57:16,https://api.github.com/repos/twitter/finagle/git/commits/ce867ceca2bd84ab5fc8766fe36d3ce35d39d45e,ce867ceca2bd84ab5fc8766fe36d3ce35d39d45e,"[split] csl: improves csl release process

RB_ID=190841"
mosesn,2013-09-20 18:22:23,https://api.github.com/repos/twitter/finagle/git/commits/a4e2a8c1b32a1f19328e491923bccb3b8ec3a041,a4e2a8c1b32a1f19328e491923bccb3b8ec3a041,"[split] better interface for RetryPolicy

RB_ID=182536"
mariusae,2013-09-20 18:16:18,https://api.github.com/repos/twitter/finagle/git/commits/a7aa8782d27155a761f166ac9fa071288bfcd538,a7aa8782d27155a761f166ac9fa071288bfcd538,"[split] ensure FIFO ordering when delivering updates to stabilizing group

RB_ID=191623"
xinxiang-twitter,2013-09-20 06:42:48,https://api.github.com/repos/twitter/finagle/git/commits/430c607b9566bbb0f189a331d86e8cf80f32f1dd,430c607b9566bbb0f189a331d86e8cf80f32f1dd,"[split] ZK based cache node group implementation

RB_ID=181107"
mariusae,2013-09-20 04:30:19,https://api.github.com/repos/twitter/finagle/git/commits/0907e97556438c9b2d176ae4e170d8a92850aefc,0907e97556438c9b2d176ae4e170d8a92850aefc,"[split] Provide generic request contexts.

/**
 * A context is a piece of serializable metadata managed by a
 * registered handler. Protocol implementations may enumerate current
 * contexts to associate with outgoing messages; incoming contexts
 * are handled.
 *
 * Each context type is associated with a key. Keys with no
 * registered handlers are assigned a pass-thru handler: they are
 * uninterpreted, but are propagated across requests.
 *
 * Context handlers implement ContextHandler and are loaded via
 * the Java service loader mechanism.
 */

RB_ID=188653"
mosesn,2013-09-19 21:23:30,https://api.github.com/repos/twitter/finagle/git/commits/454eef9a49c5bd8303dfcd65bb01b1d37e046ce0,454eef9a49c5bd8303dfcd65bb01b1d37e046ce0,"[split] finagle-core: lets the number of cores be specified at the command line

RB_ID=183001"
stevegury,2013-09-18 23:45:12,https://api.github.com/repos/twitter/finagle/git/commits/352bed867c9f0b7f54763bf9924beb720efffd9f,352bed867c9f0b7f54763bf9924beb720efffd9f,"[split] Finagle: upgrade Netty to 3.7.0.Final

RB_ID=184661"
mariusae,2013-09-18 21:21:21,https://api.github.com/repos/twitter/finagle/git/commits/8f5ca94c918dde45715e9eee135e0cb98b07052a,8f5ca94c918dde45715e9eee135e0cb98b07052a,"[split] Group: communicate via Var[Set[T]]

This will make it simpler to unify Groups with Wily.
I'm hoping to deprecate Groups entirely in favor of
Var[Addr] as per Wily, but the type may remain as a
facade.

RB_ID=183145"
mosesn,2013-09-17 22:42:08,https://api.github.com/repos/twitter/finagle/git/commits/4dedb6fa4ef2f65380e004cb6dba18aa6dbff779,4dedb6fa4ef2f65380e004cb6dba18aa6dbff779,"[split] retryingfilter specs -> scalatest

RB_ID=184933"
mosesn,2013-09-17 22:56:00,https://api.github.com/repos/twitter/finagle/git/commits/4969574dd2404e57e2d3ab4a80657efefde99438,4969574dd2404e57e2d3ab4a80657efefde99438,"[split] only need one set of parentheses

RB_ID=185731"
slackhappy,2013-09-17 21:20:23,https://api.github.com/repos/twitter/finagle/git/commits/23b1dda0c7c583ce99b744d2f56b9ff4e75c3b22,23b1dda0c7c583ce99b744d2f56b9ff4e75c3b22,"[split] finagle-core: improve HeapBalancer req distribution when N=2

With 2 nodes and a stream of sequential requests,
the HeapBalancer would always choose the same node

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=187179"
xinxiang-twitter,2013-09-17 19:11:13,https://api.github.com/repos/twitter/finagle/git/commits/7f62a0f2a1dbc81a7d359dd34488baa828ead419,7f62a0f2a1dbc81a7d359dd34488baa828ead419,"[split] exclude CancelledRequestException and CancelledConectionException or cache client failure accrual

RB_ID=188141"
mosesn,2013-09-16 22:29:36,https://api.github.com/repos/twitter/finagle/git/commits/452450eabe1a409a60ea4a194df4da2c7b516c60,452450eabe1a409a60ea4a194df4da2c7b516c60,"[split] manually update sbt

RB_ID=187999
TBR=true"
mosesn,2013-09-16 20:54:36,https://api.github.com/repos/twitter/finagle/git/commits/55382e88307aa54a824f93d56db7652454aca8a3,55382e88307aa54a824f93d56db7652454aca8a3,"[split] fixed build.scala for oss

RB_ID=187813
TBR=true"
mosesn,2013-09-16 18:33:05,https://api.github.com/repos/twitter/finagle/git/commits/1c78db158627282be5b6d8c7ac566469e986a981,1c78db158627282be5b6d8c7ac566469e986a981,"[split] bump finagle to 6.6.3-SNAPSHOT

RB_ID=187617
TBR=true"
stevegury,2013-09-14 03:02:49,https://api.github.com/repos/twitter/finagle/git/commits/84e2e9ada6c105712305d0f17c4df85447028a97,84e2e9ada6c105712305d0f17c4df85447028a97,"[split] finagle-core: Configurable loadBalancer for ClientConfig

RB_ID=174799"
stevegury,2013-09-13 18:58:42,https://api.github.com/repos/twitter/finagle/git/commits/190e84c5360e9d5f1d3a499039c6b8186e42701f,190e84c5360e9d5f1d3a499039c6b8186e42701f,"[split] util-core: Make Future.never a val instead of a def

RB_ID=170542"
bmdhacks,2013-09-13 18:07:21,https://api.github.com/repos/twitter/finagle/git/commits/9f55f5f1f0eea1416fa2b696c073de3380a7eb28,9f55f5f1f0eea1416fa2b696c073de3380a7eb28,"[split] bump ostrich to 9.1.4-SNAPSHOT

RB_ID=186409
TBR=true"
bmdhacks,2013-09-13 16:46:17,https://api.github.com/repos/twitter/finagle/git/commits/87e54af6a73a07193b67a56f4abd6d43128291ca,87e54af6a73a07193b67a56f4abd6d43128291ca,"[split] rename ostrich lib This fixes a problem with the csl release script which was looking for ${library}Version instead of ${library}Lib

RB_ID=185861"
stevegury,2013-09-12 22:58:14,https://api.github.com/repos/twitter/finagle/git/commits/9c6b876d86ec638cf74efcabb21aa583a1491f01,9c6b876d86ec638cf74efcabb21aa583a1491f01,"[split] Finagle: Fix the memory leak due to the GlobalStatsReceiver

RB_ID=184337"
mosesn,2013-09-11 22:00:51,https://api.github.com/repos/twitter/finagle/git/commits/981b88617bf06e9e0eb8d83dd1a58136f21e246b,981b88617bf06e9e0eb8d83dd1a58136f21e246b,"[split] removed finagle-benchmark from sbt

RB_ID=184681"
mosesn,2013-09-11 17:42:25,https://api.github.com/repos/twitter/finagle/git/commits/c736a224a552c45f99d92242200aa388449d2885,c736a224a552c45f99d92242200aa388449d2885,"[split] bump poms to finagle 6.6.1-SNAPSHOT

RB_ID=184263
TBR=true"
sprsquish,2013-09-11 16:57:21,https://api.github.com/repos/twitter/finagle/git/commits/8f319f7f0077ca08f4d9dae03e0411aed2ece1be,8f319f7f0077ca08f4d9dae03e0411aed2ece1be,"[split] finagle-core: inet util, bind to all if no host is provided

RB_ID=183675"
bmdhacks,2013-09-10 19:02:13,https://api.github.com/repos/twitter/finagle/git/commits/2d4dad19eb9e85842d2ca95755cc7e7b7bc5730c,2d4dad19eb9e85842d2ca95755cc7e7b7bc5730c,"[split] bump util to 6.5.1-SNAPSHOT

RB_ID=183369
TBR=true"
mariusae,2013-09-10 18:37:40,https://api.github.com/repos/twitter/finagle/git/commits/1591ca890b99276abd3d9c15bad58db3abcad2d4,1591ca890b99276abd3d9c15bad58db3abcad2d4,"[split] Http connection manager: close synchronously

Make sure we close the HTTP connection manager synchronously with the
reply, so that there isn't a race between closing the connection and
reusing it. Make a note about HTTP propriety.

RB_ID=181694"
sprsquish,2013-09-10 17:56:51,https://api.github.com/repos/twitter/finagle/git/commits/7dd3568bda634cac675adfe6dfe7ad29d15473fb,7dd3568bda634cac675adfe6dfe7ad29d15473fb,"[split] bump scrooge to 3.8.1-SNAPSHOT

RB_ID=183231
TBR=true"
bmdhacks,2013-09-10 01:39:28,https://api.github.com/repos/twitter/finagle/git/commits/7c1e1dca4c5d2c8f26fc84c1aec692259cc11842,7c1e1dca4c5d2c8f26fc84c1aec692259cc11842,"[split] finagle-zipkin: optimize scribe logging to not need slf4j

RB_ID=180352"
bmdhacks,2013-09-09 21:21:23,https://api.github.com/repos/twitter/finagle/git/commits/04afcaece8eebe5f1056fe3731e5ab9c0bd2b005,04afcaece8eebe5f1056fe3731e5ab9c0bd2b005,"[split] move finagle-zipkin to scalatest

RB_ID=180164"
bmdhacks,2013-09-09 18:02:46,https://api.github.com/repos/twitter/finagle/git/commits/e29206adb2413ebb536578142cf6bcb521aa0436,e29206adb2413ebb536578142cf6bcb521aa0436,"[split] Finagle SBT: unify jackson versions on 2.2.2

RB_ID=180238"
xsl,2013-09-09 17:57:21,https://api.github.com/repos/twitter/finagle/git/commits/902f9614c665ff343751e4ef6ffb07f1577fbac7,902f9614c665ff343751e4ef6ffb07f1577fbac7,"[split] passbird-4.2.35-SNAPSHOT

RB_ID=182204
TBR=true"
mariusae,2013-09-07 00:19:29,https://api.github.com/repos/twitter/finagle/git/commits/7400be16bdc61bfbc278abab06ae18193e25691e,7400be16bdc61bfbc278abab06ae18193e25691e,"[split] finagle-swift: experimental swift-based thrift server and client An experimental annotation based proxy and dispatcher for thrift, using Facebook???s swift for serialization.

This code works:

@ThriftService
trait Hello { @ThriftMethod def echo(x: String): Future[String] }

val impl = new Hello { def echo(x: String) = Future.value(x) }
val server = Thrift.serveIface("":*"", impl)
val client = Thrift.newIface[Hello](server)

Await.result(client.echo(""foo"")) == ""foo""

This change includes a caliper benchmark. finagle-swift is actually a
bit faster than scrooge for proxying, and slower for dispatching. Both
are allocation hungry, which we should be fixing.

benchmark instances   KiB   ns linear runtime
ScroogeDispatch      64.0 2.031  883 =================
SwiftDispatch     114.0 2.820 1522 ==============================
ScroogeProxy     105.0 2.828 1328 ==========================
SwiftProxy      74.0 2.016 1056 ====================

Please note that this *is* experimental: it works, but it requires
polish and more experience to deploy.

RB_ID=141055"
evnm,2013-09-06 22:34:54,https://api.github.com/repos/twitter/finagle/git/commits/5e4f210a3378f764ae6069179fe3bf5c2be4fc10,5e4f210a3378f764ae6069179fe3bf5c2be4fc10,"[split] Finagle: Add a RetryPolicy constant for retrying on ChannelClosedExceptions.

RB_ID=181526"
roanta,2013-09-06 18:34:23,https://api.github.com/repos/twitter/finagle/git/commits/3d693f9baa696ff2a8a043178859af11cc1f5c9d,3d693f9baa696ff2a8a043178859af11cc1f5c9d,"[split] finagle-core: fix memory leak in Group#fromCluster

Group#fromCluster retained a reference to the head of
the spool. The spool was only used to propagate updates
which were subsequently committed to a separate collection.
This change moves the reference outside the class which
makes it available for the gc to reclaim.

RB_ID=179087"
xinxiang-twitter,2013-09-06 05:32:06,https://api.github.com/repos/twitter/finagle/git/commits/2b80b98c0e263e0244a0ee10a955d44748fe4f4b,2b80b98c0e263e0244a0ee10a955d44748fe4f4b,"[split] refactor ReplicationClient integration test out and use scalatest

RB_ID=179765"
mariusae,2013-09-04 20:50:01,https://api.github.com/repos/twitter/finagle/git/commits/bd76b3d635cb8f1218e6733e415d3960569cceec,bd76b3d635cb8f1218e6733e415d3960569cceec,"[split] Introduce swappable schedulers, ThreadPool scheduler.

RB_ID=176993"
bmdhacks,2013-09-04 17:39:00,https://api.github.com/repos/twitter/finagle/git/commits/b44e283db0a30da78b568945ae7e47ef5eda8951,b44e283db0a30da78b568945ae7e47ef5eda8951,"[split] finagle-zipkin: fix pants build

RB_ID=179887"
bmdhacks,2013-09-04 05:29:17,https://api.github.com/repos/twitter/finagle/git/commits/6d498726584ea45881bfdac85e77e00ec69258b7,6d498726584ea45881bfdac85e77e00ec69258b7,"[split] fix sbt build

RB_ID=179890
TBR=true"
sprsquish,2013-09-03 21:35:01,https://api.github.com/repos/twitter/finagle/git/commits/2595b9c3e20756e04fbfcfe5f89bcff8658fc963,2595b9c3e20756e04fbfcfe5f89bcff8658fc963,"[split] bump scrooge to 3.7.1-SNAPSHOT

RB_ID=179513"
xinxiang-twitter,2013-08-30 23:49:59,https://api.github.com/repos/twitter/finagle/git/commits/7adfe9d802a2eded86f1ad5e7090e3eafd1150df,7adfe9d802a2eded86f1ad5e7090e3eafd1150df,"[split] refactor use of InetSocketAddress group and deprecate use of cluster in cache client

RB_ID=178319"
bmdhacks,2013-08-30 22:33:05,https://api.github.com/repos/twitter/finagle/git/commits/692fd0364b282ad97172083a62e6fcb88cb08ffa,692fd0364b282ad97172083a62e6fcb88cb08ffa,"[split] Finagle HTTP: bump request/response sizes to 5 megs The twitter API endpoint has a max request size of 5 megs (for now) so this gives us parity by default. I bumped the response size too just because I roll like that.

RB_ID=178526"
bmdhacks,2013-08-29 17:54:58,https://api.github.com/repos/twitter/finagle/git/commits/565eb9a7362bff46d3cb4113a64c96ba5255baba,565eb9a7362bff46d3cb4113a64c96ba5255baba,"[split] adding service name to a service exception: CSL-527

RB_ID=178213"
roanta,2013-08-28 18:47:42,https://api.github.com/repos/twitter/finagle/git/commits/7380889c4fc22b4682a76bbc4761122a5cc044ab,7380889c4fc22b4682a76bbc4761122a5cc044ab,"[split] bump util to 6.4.1-SNAPSHOT

RB_ID=178076
TBR=true"
xinxiang-twitter,2013-08-27 22:15:35,https://api.github.com/repos/twitter/finagle/git/commits/4bbd5c110844f311280c3a7719230864a0008924,4bbd5c110844f311280c3a7719230864a0008924,"[split] allow custom key in ketama client

RB_ID=176599"
xinxiang-twitter,2013-08-26 19:43:56,https://api.github.com/repos/twitter/finagle/git/commits/a75b41f0aef4b918503f451a222b5c60a11b3877,a75b41f0aef4b918503f451a222b5c60a11b3877,"[split] mark integration test requiring testing zk failures to be flaky

RB_ID=177061"
isnotinvain,2013-08-21 21:54:28,https://api.github.com/repos/twitter/finagle/git/commits/66a50b8ea47bf941a73f9612fa461527d7a331f4,66a50b8ea47bf941a73f9612fa461527d7a331f4,"[split] Make behavior of HttpMuxer match its javadoc

RB_ID=175055"
xinxiang-twitter,2013-08-20 19:06:46,https://api.github.com/repos/twitter/finagle/git/commits/4a7add479694b445ca0820de06f27d40a87044bd,4a7add479694b445ca0820de06f27d40a87044bd,"[split] use in-process server instead of external for testing

RB_ID=174658"
xinxiang-twitter,2013-08-16 18:44:26,https://api.github.com/repos/twitter/finagle/git/commits/9c2121281fd28804b23252db635f6902817d5dd2,9c2121281fd28804b23252db635f6902817d5dd2,"[split] migration client in finagle-memcached

RB_ID=158865"
sprsquish,2013-08-16 15:37:39,https://api.github.com/repos/twitter/finagle/git/commits/95a072bbe50c538a670b9cbfa3c9c149961a1157,95a072bbe50c538a670b9cbfa3c9c149961a1157,"[split] bump scrooge to 3.6.1-SNAPSHOT

RB_ID=174427
TBR=true"
sprsquish,2013-08-14 22:29:38,https://api.github.com/repos/twitter/finagle/git/commits/6334a9385e0a949bf0497f82d57bd37232c12a96,6334a9385e0a949bf0497f82d57bd37232c12a96,"[split] scrooge: support the scala namespace

RB_ID=173147
TBR=true"
jdanbrown,2013-08-09 23:03:32,https://api.github.com/repos/twitter/finagle/git/commits/b3bc854f0cbdd62ab3fa49ad06930bad07cfc12c,b3bc854f0cbdd62ab3fa49ad06930bad07cfc12c,"[split] ChannelSnooper: Print exceptions via Logger

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=171858"
stevegury,2013-08-09 22:18:34,https://api.github.com/repos/twitter/finagle/git/commits/a11997d5150a2dae01e6b17f464ab116ee24e83e,a11997d5150a2dae01e6b17f464ab116ee24e83e,"[split] finagle: try to get rid of flaky tests

Some flaky test are caused by Trace.setId calls oustide of Trace.unwind

RB_ID=172289"
sprsquish,2013-08-09 18:31:37,https://api.github.com/repos/twitter/finagle/git/commits/bfb0dc24b6293e38eea5c14bb285262ffc43b107,bfb0dc24b6293e38eea5c14bb285262ffc43b107,"[split] bump scrooge to 3.5.1-SNAPSHOT

RB_ID=172170
TBR=true"
bmdhacks,2013-08-09 17:53:03,https://api.github.com/repos/twitter/finagle/git/commits/544e67cefbb87be0978386e4b963c2d740856d84,544e67cefbb87be0978386e4b963c2d740856d84,"[split] OBSERVE-3115 Use better metric names for finagle-zipkin error stats

RB_ID=158542"
cheecheeo,2013-08-08 00:01:38,https://api.github.com/repos/twitter/finagle/git/commits/7c97e0027e0cccdd62d221d1d9fdb2ffb6d56d56,7c97e0027e0cccdd62d221d1d9fdb2ffb6d56d56,"[split] pantsify: finagle-zipkin add util-codec to test dependencies

RB_ID=171475
TBR=true"
edma2,2013-08-07 22:01:26,https://api.github.com/repos/twitter/finagle/git/commits/355fd030d88060a977a8d09a8ef3647d87b4d227,355fd030d88060a977a8d09a8ef3647d87b4d227,"[split] [finagle-http] Mix in Proxy with HttpMessageProxy

RB_ID=171332"
sprsquish,2013-08-07 22:43:50,https://api.github.com/repos/twitter/finagle/git/commits/00d1fb0c920aaa229765b0edd95a9b81bbc8a904,00d1fb0c920aaa229765b0edd95a9b81bbc8a904,"[split] bump scrooge-maven-plugin

RB_ID=171234
TBR=true
NO-QUEUE=true"
stevegury,2013-08-06 22:38:01,https://api.github.com/repos/twitter/finagle/git/commits/6fd0c8c9fac333307728e638de17bee07cab677c,6fd0c8c9fac333307728e638de17bee07cab677c,"[split] Aggressively exclude finagle flaky tests.

RB_ID=170528"
sprsquish,2013-08-06 21:57:23,https://api.github.com/repos/twitter/finagle/git/commits/8850671f5dea2c9650cb2309342b08b4e51a384f,8850671f5dea2c9650cb2309342b08b4e51a384f,"[split] bump scrooge to 3.4.1-SNAPSHOT

RB_ID=170833
TBR=true"
sprsquish,2013-08-05 17:23:04,https://api.github.com/repos/twitter/finagle/git/commits/7bcbb505ed6f50137f059ae670264a209b099eac,7bcbb505ed6f50137f059ae670264a209b099eac,"[split] add sbt version updates as part of csl release

RB_ID=169921
NO-QUEUE=true"
sprsquish,2013-08-01 16:52:29,https://api.github.com/repos/twitter/finagle/git/commits/0a5d8ae16969b3511466477d090bb5a9661f531c,0a5d8ae16969b3511466477d090bb5a9661f531c,"[split] move scrooge-runtime to scrooge

RB_ID=168582"
kevinoliver,2013-08-01 16:37:12,https://api.github.com/repos/twitter/finagle/git/commits/76b2cae2ef878a5300868a587964284f518d6283,76b2cae2ef878a5300868a587964284f518d6283,"[split] finagle-ostrich4: improve perf of Counter and Stat

RB_ID=168811"
kevinoliver,2013-07-31 04:35:53,https://api.github.com/repos/twitter/finagle/git/commits/1948993c4f7a5f10aac76e227d6c781a14981785,1948993c4f7a5f10aac76e227d6c781a14981785,"[split] finagle-memcached: better exception messages for invalid keys

RB_ID=167900"
mosesn,2013-07-31 03:46:47,https://api.github.com/repos/twitter/finagle/git/commits/9c6c490fa6826056ab58f3a257944693dc07fd04,9c6c490fa6826056ab58f3a257944693dc07fd04,"[split] finagle-http: Fix Path comments, improve sbt definition

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=168294"
bmdhacks,2013-07-26 19:52:45,https://api.github.com/repos/twitter/finagle/git/commits/dfe8ceabc2cacd463bce6d063e1bdfcca1a17955,dfe8ceabc2cacd463bce6d063e1bdfcca1a17955,"[split] Add newlines to finagle-zipkin scribe message https://jira.twitter.biz/browse/OBSERVE-5929

RB_ID=166175"
roanta,2013-07-26 19:37:13,https://api.github.com/repos/twitter/finagle/git/commits/2c5f104fb34b190b8af52db0a78416b5899a8cac,2c5f104fb34b190b8af52db0a78416b5899a8cac,"[split] finagle-serversets: ZkResolverTest flaky fix

RB_ID=166911"
roanta,2013-07-26 00:42:48,https://api.github.com/repos/twitter/finagle/git/commits/964c1e5f10f9569fcf0f12dfd9b6475a70399da1,964c1e5f10f9569fcf0f12dfd9b6475a70399da1,"[split] finagle-core: fix file mispelling for StabilizingGroup.scala

RB_ID=167165"
sprsquish,2013-07-25 18:33:07,https://api.github.com/repos/twitter/finagle/git/commits/d68273c8870e0419d4c7a31266455ead7e83cd64,d68273c8870e0419d4c7a31266455ead7e83cd64,"[split] bump scrooge-maven to 3.3.2

RB_ID=166849
TBR=true"
mariusae,2013-07-24 20:42:28,https://api.github.com/repos/twitter/finagle/git/commits/f9ba71c9640f3c8add486662620c2ff09751b30b,f9ba71c9640f3c8add486662620c2ff09751b30b,"[split] Finagle client/server APIs: s/target/addr/g

Provide uniform naming that makes sense for both client and server.
This is also what Wily calls such names -- they are all forms of
addresses.

(""Target"" implies a ""goal"" -- address is more concrete. Not to mention
that address is more standard: most people could answer ""what is an
address;"" a ""target"" is not as well defined.)

RB_ID=165976"
kevinoliver,2013-07-24 18:44:16,https://api.github.com/repos/twitter/finagle/git/commits/d69620ad37e50ed9b9c322a9c421094dca722e68,d69620ad37e50ed9b9c322a9c421094dca722e68,"[split] finagle-core: Tests for BroadcastStatsReceiver

RB_ID=165493"
roanta,2013-07-23 17:45:42,https://api.github.com/repos/twitter/finagle/git/commits/ba90478e3d8663154a8d73441cb0f3ce19936fc5,ba90478e3d8663154a8d73441cb0f3ce19936fc5,"[split] bump util in finagle sbt to 6.3.8

RB_ID=165901
TBR=true
NO-QUEUE=true"
roanta,2013-07-23 17:37:20,https://api.github.com/repos/twitter/finagle/git/commits/1aa1627810d3ab265b3a8548ec6a54520f52367f,1aa1627810d3ab265b3a8548ec6a54520f52367f,"[split] bump finagle sbt version to 6.5.2

RB_ID=165896
TBR=true
NO-QUEUE=true"
roanta,2013-07-23 17:34:53,https://api.github.com/repos/twitter/finagle/git/commits/56d02f4596c6b48f41f1dbef62915ab496b21bf4,56d02f4596c6b48f41f1dbef62915ab496b21bf4,"[split] bump finagle to 6.5.3-SNAPSHOT

RB_ID=165894
TBR=true
NO-QUEUE=true"
sprsquish,2013-07-23 05:05:25,https://api.github.com/repos/twitter/finagle/git/commits/569b98057abfb6dfca56d1906b76c7c166bcf2c5,569b98057abfb6dfca56d1906b76c7c166bcf2c5,"[split] set scrooge-maven-plugin to 3.3.1

RB_ID=165404
TBR=true"
roanta,2013-07-22 18:25:48,https://api.github.com/repos/twitter/finagle/git/commits/711dc574a695418472c8dbe298beba8b853c4164,711dc574a695418472c8dbe298beba8b853c4164,"[split] bump util to 6.3.9-SNAPSHOT

RB_ID=165497
TBR=true
NO-QUEUE=true"
sprsquish,2013-07-19 22:20:53,https://api.github.com/repos/twitter/finagle/git/commits/e9a2f2ddc9578ab381c382358f62abcf2bb8a1ec,e9a2f2ddc9578ab381c382358f62abcf2bb8a1ec,"[split] bump scrooge-runtime to 3.3.1-SNAPSHOT

RB_ID=165165"
roanta,2013-07-19 17:32:28,https://api.github.com/repos/twitter/finagle/git/commits/87315bea2d8eed783420d754e8c96b5308b649d0,87315bea2d8eed783420d754e8c96b5308b649d0,"[split] bump ZkResolverTest timeout

RB_ID=165134
NO-QUEUE=true"
roanta,2013-07-19 16:36:42,https://api.github.com/repos/twitter/finagle/git/commits/34e72d7b9d2447762795c6bf128e4c40c5552f86,34e72d7b9d2447762795c6bf128e4c40c5552f86,"[split] fix exit code for jenkins

RB_ID=164863
NO-QUEUE=true"
stevegury,2013-07-18 18:23:16,https://api.github.com/repos/twitter/finagle/git/commits/dcaca0c59f485c7e5203a7a2b8199a15fda8ffb7,dcaca0c59f485c7e5203a7a2b8199a15fda8ffb7,"[split] Pushsite: Remove the --single-branch git option (not recognized by bigbird git)

RB_ID=164662
NO-QUEUE=true"
roanta,2013-07-16 17:03:09,https://api.github.com/repos/twitter/finagle/git/commits/ba2f3e1e6046ec53a65150283531a171c0bf6ca6,ba2f3e1e6046ec53a65150283531a171c0bf6ca6,"[split] Introduce StabilizingGroup which cautiously removes items from a Group

RB_ID=158935"
mariusae,2013-07-02 23:35:26,https://api.github.com/repos/twitter/finagle/git/commits/c954f60d34b6e4d05b29096e40607976c68cbc9d,c954f60d34b6e4d05b29096e40607976c68cbc9d,"[split] finagle-mux: Don't allocate headers via direct buffers

RB_ID=161725"
stevegury,2013-07-01 20:22:03,https://api.github.com/repos/twitter/finagle/git/commits/cc78a521d20b8412c4fb5322b2ead58a37d2c7e2,cc78a521d20b8412c4fb5322b2ead58a37d2c7e2,"[split] finagle-http: Implement missing modifiers in Http case class

RB_ID=160503"
sprsquish,2013-06-28 21:26:04,https://api.github.com/repos/twitter/finagle/git/commits/744b5d35dfd5da0b003fc98c6b1317da203f71df,744b5d35dfd5da0b003fc98c6b1317da203f71df,"[split] update maven-finagle-thrift-plugin to use thread safe scrooge compiler

RB_ID=160749
TBR=true"
sprsquish,2013-06-26 18:40:53,https://api.github.com/repos/twitter/finagle/git/commits/4a5db735288db57d0670d7e17f1fc2ffb0af2640,4a5db735288db57d0670d7e17f1fc2ffb0af2640,"[split] bump scrooge-runtime to 3.1.4-SNAPSHOT

RB_ID=159966
TBR=true"
stevegury,2013-06-25 19:11:35,https://api.github.com/repos/twitter/finagle/git/commits/498d1b0721371afb78c23cfe8f9aa63c747f3817,498d1b0721371afb78c23cfe8f9aa63c747f3817,"[split] fixing twitter-server upgrade

RB_ID=159520
TBR=true
NO-QUEUE=true"
tushario,2013-06-25 17:55:24,https://api.github.com/repos/twitter/finagle/git/commits/f32bb4a5e57071fe6472c227660bf2539c628796,f32bb4a5e57071fe6472c227660bf2539c628796,"[split] finagle-thrift: exclude thrift files from jar

RB_ID=158263"
xinxiang-twitter,2013-06-25 16:26:57,https://api.github.com/repos/twitter/finagle/git/commits/f7431d3440833272220c66c08d94a83297877f5e,f7431d3440833272220c66c08d94a83297877f5e,"[split] added support for twemcache commands

RB_ID=157882"
stevegury,2013-06-25 15:18:03,https://api.github.com/repos/twitter/finagle/git/commits/8e97426ab7732b08fe39e377910b85908933438b,8e97426ab7732b08fe39e377910b85908933438b,"[split] finagle: release version 6.5.1

RB_ID=159403
TBR=true
NO-QUEUE=true"
stevegury,2013-06-25 13:52:41,https://api.github.com/repos/twitter/finagle/git/commits/42d23602382df865d54f3dd3f604c0e678a5c9c5,42d23602382df865d54f3dd3f604c0e678a5c9c5,"[split] ostrich: release version 9.1.2

RB_ID=159395
TBR=true
NO-QUEUE=true"
stevegury,2013-06-25 13:41:53,https://api.github.com/repos/twitter/finagle/git/commits/a869f4ebb30afbe7cc86d7be5dc9b7c8c1258238,a869f4ebb30afbe7cc86d7be5dc9b7c8c1258238,"[split] util: release version 6.3.7

RB_ID=159374
TBR=true
NO-QUEUE=true"
stevegury,2013-06-24 23:51:45,https://api.github.com/repos/twitter/finagle/git/commits/f34ef0bc6db0a48b2ce99bc49c1c5c6606463986,f34ef0bc6db0a48b2ce99bc49c1c5c6606463986,"[split] Revert ""Stream interface (i.e. chunked) for HTTP message bodies""

RB_ID=158723"
stevegury,2013-06-21 22:02:36,https://api.github.com/repos/twitter/finagle/git/commits/ed420844f30c249cf9cdc692f7247e448a879158,ed420844f30c249cf9cdc692f7247e448a879158,"[split] Finagle: Upgrade Netty version to 3.6.6.Final

RB_ID=158199
NO-QUEUE=true"
stevegury,2013-06-21 20:49:02,https://api.github.com/repos/twitter/finagle/git/commits/61600cb395ee2b4948b004c60244153f2e763222,61600cb395ee2b4948b004c60244153f2e763222,"[split] Finagle: Refresh OWNERS/GROUPS in all subdirectories

RB_ID=158627
NO-QUEUE=true"
stevegury,2013-06-20 22:05:35,https://api.github.com/repos/twitter/finagle/git/commits/fc0364bf129ebfd56808883edd150c834316a75e,fc0364bf129ebfd56808883edd150c834316a75e,"[split] finagle-stats: Upgrade metrics to 0.0.9

RB_ID=158264"
stevegury,2013-06-17 21:50:22,https://api.github.com/repos/twitter/finagle/git/commits/64a4fdba2a626aae2e0a04121ccd646d7706ca9c,64a4fdba2a626aae2e0a04121ccd646d7706ca9c,"[split] Finagle: Fix documentation about Java & Future

RB_ID=156837"
solar,2013-06-12 23:36:24,https://api.github.com/repos/twitter/finagle/git/commits/323b6709a4da7f4a49054e12e11543725758fcaa,323b6709a4da7f4a49054e12e11543725758fcaa,"[split] Implement new SET syntax introduced in redis 2.6.12

Adding these methods to StringCommands
    - setExNx
    - setExXx
    - setPx
    - setPxNx
    - setPxXx
    - setXx

These methods are untouched
    - pSetEx
    - setEx
    - setNx

Signed-off-by: Anirudh Srinivas <anirudhs@twitter.com>

RB_ID=155641"
sprsquish,2013-06-12 20:18:44,https://api.github.com/repos/twitter/finagle/git/commits/a865a776954c93ae811b5f97c4ab34ce09746cf9,a865a776954c93ae811b5f97c4ab34ce09746cf9,"[split] bump finagle-thrift gem version

RB_ID=155733
NO-QUEUE=true"
sprsquish,2013-06-12 17:04:13,https://api.github.com/repos/twitter/finagle/git/commits/54c2524b85a2000b37ef37b38f2eb600853f8489,54c2524b85a2000b37ef37b38f2eb600853f8489,"[split] bump scrooge-runtime to 3.1.3-SNAPSHOT

RB_ID=154481
TBR=true"
bmdhacks,2013-06-11 21:52:58,https://api.github.com/repos/twitter/finagle/git/commits/c1ad84d6a8efeede5ec880a4d7307fdc77717bc9,c1ad84d6a8efeede5ec880a4d7307fdc77717bc9,"[split] fix a bug in Trace.unwind in ruby

RB_ID=155238"
bmdhacks,2013-06-11 20:06:59,https://api.github.com/repos/twitter/finagle/git/commits/550993844296e12391105f5f6222ae0e66f1f582,550993844296e12391105f5f6222ae0e66f1f582,"[split] Finagle Tracer: Improve performance This is an attempt to speed up tracing when a trace is unsampled.  This is done by delaying most expensive operations until after checking that a trace will be sampled. Also I try to limit the amount of times this check is done by adding a Trace.isActivelyTracing method and gating expensive operations with it. I had to change some of the unit tests to reflect this new behavior, but most of the backwards-compatibility is preserved.

RB_ID=153758"
solar,2013-06-11 17:52:14,https://api.github.com/repos/twitter/finagle/git/commits/fc84ea337d01dc3834c3bcd8729cabc1a64b80f5,fc84ea337d01dc3834c3bcd8729cabc1a64b80f5,"[split] implement PEXPIRE/PEXPIREAT/PTTL

Signed-off-by: Anirudh Srinivas <anirudhs@twitter.com>

RB_ID=154328"
sprsquish,2013-06-07 15:03:53,https://api.github.com/repos/twitter/finagle/git/commits/ecb7ce9dc4d3bcc6955f44ea7d412d9f40cb73d0,ecb7ce9dc4d3bcc6955f44ea7d412d9f40cb73d0,"[split] finagle-serverset: create a ZkAnnouncer

RB_ID=153510"
bmdhacks,2013-06-05 20:05:17,https://api.github.com/repos/twitter/finagle/git/commits/4e5c501885e1483acf956335eca931f46c26ea09,4e5c501885e1483acf956335eca931f46c26ea09,"[split] Performance improvement for finagle-zipkin finagle-zipkin's DeadlineSpanMap logs incomplete spans after a certain deadline.  However, it was not canceling the deadline task if the span completed naturally.  Johan Harjono reported this was causing some GC pressure by keeping every closure around for 2 minutes.

RB_ID=153337"
stuhood,2013-06-04 01:36:54,https://api.github.com/repos/twitter/finagle/git/commits/c67882a9824630d2ceff17ab7202f1d3ea5f8b52,c67882a9824630d2ceff17ab7202f1d3ea5f8b52,"[split] Gizzard: Some followup deps alignment to fix deployment classpath issues

RB_ID=152166
TBR=true"
xinxiang-twitter,2013-06-04 00:07:00,https://api.github.com/repos/twitter/finagle/git/commits/73581eb8e4b51c2f5fbc5d26c31f628b6f276c50,73581eb8e4b51c2f5fbc5d26c31f628b6f276c50,"[split] KetamaClient based on finagle-6 API

RB_ID=127539"
sprsquish,2013-06-03 17:11:53,https://api.github.com/repos/twitter/finagle/git/commits/7e2797bbbfcbc7b1e62ce3447cc188f89d12ea4e,7e2797bbbfcbc7b1e62ce3447cc188f89d12ea4e,"[split] finagle-exception: unique namespace for scribe

RB_ID=152523"
sprsquish,2013-06-03 16:47:21,https://api.github.com/repos/twitter/finagle/git/commits/b52e7da4e078201dc86c0750185deb67323fb68a,b52e7da4e078201dc86c0750185deb67323fb68a,"[split] finagle-thrift: Add scrooge3 support

RB_ID=151612"
sprsquish,2013-06-03 16:53:47,https://api.github.com/repos/twitter/finagle/git/commits/86d150df43dbeac9f4a616ca7c4dc4ed0e87c52c,86d150df43dbeac9f4a616ca7c4dc4ed0e87c52c,"[split] bump sbt util/finagle version

RB_ID=152610
TBR=true
NO-QUEUE=true"
stevegury,2013-05-31 23:43:42,https://api.github.com/repos/twitter/finagle/git/commits/3d03a111ac753834ce3135aa35ce47730162604f,3d03a111ac753834ce3135aa35ce47730162604f,"[split] Finagle: Updating owner list

RB_ID=152397"
sprsquish,2013-05-31 22:53:29,https://api.github.com/repos/twitter/finagle/git/commits/a49e03352e9ea2a1eff67a8a031584c12b8a6898,a49e03352e9ea2a1eff67a8a031584c12b8a6898,"[split] bump finagle to 6.4.2-SNAPSHOT

RB_ID=152403
TBR=true"
sprsquish,2013-05-31 18:07:50,https://api.github.com/repos/twitter/finagle/git/commits/c17015420996dfe450ba0e637a1cdf652599c3a2,c17015420996dfe450ba0e637a1cdf652599c3a2,"[split] bump util to 6.3.6-SNAPSHOT

RB_ID=152226
TBR=true"
edma2,2013-05-31 00:31:44,https://api.github.com/repos/twitter/finagle/git/commits/488b35496db28412dd18a813f37039751fd9e539,488b35496db28412dd18a813f37039751fd9e539,"[split] [finagle-http] CookieMap instead of CookieSet

* new mutable Cookie class in finagle-http (Scala wrapper around netty)
* new mutable CookieMap instead of CookieSet

RB_ID=151365
TBR=true"
xinxiang-twitter,2013-05-30 22:36:16,https://api.github.com/repos/twitter/finagle/git/commits/e4435f0c627de50cbd4b651ef8d2b9a8d19a2fe6,e4435f0c627de50cbd4b651ef8d2b9a8d19a2fe6,"[split] remove items stats test since twemcache does not carry those

RB_ID=151666"
sprsquish,2013-05-29 17:41:21,https://api.github.com/repos/twitter/finagle/git/commits/2193d7f365692ce2fd83a12e2ca319807d7cfda4,2193d7f365692ce2fd83a12e2ca319807d7cfda4,"[split] comment out flaky test

This will unblock people trying to submit. I'll figure out the real fix next.

RB_ID=151437
TBR=true"
mariusae,2013-05-29 00:13:13,https://api.github.com/repos/twitter/finagle/git/commits/d21b143fa7522cb1774d6c2e4dfef768ec97a415,d21b143fa7522cb1774d6c2e4dfef768ec97a415,"[split] ReusingPool: fix race between setting Future.never and initiating connect

RB_ID=151230"
mariusae,2013-05-28 17:49:09,https://api.github.com/repos/twitter/finagle/git/commits/cab5741e7d3abfda51bd8a03089b8522a584732b,cab5741e7d3abfda51bd8a03089b8522a584732b,"[split] thriftmux: also release services

RB_ID=151063"
xsl,2013-05-24 17:52:13,https://api.github.com/repos/twitter/finagle/git/commits/1c949ed5ef915f9e77c9c37ee594ddd3754d9167,1c949ed5ef915f9e77c9c37ee594ddd3754d9167,"[split] passbird-4.2.23

RB_ID=150467
TBR=true"
sprsquish,2013-05-23 21:48:12,https://api.github.com/repos/twitter/finagle/git/commits/c3b91bc8ed960bef5329747befd98095140970f2,c3b91bc8ed960bef5329747befd98095140970f2,"[split] finagle-exception: a loadable exception reporter

RB_ID=150082"
sprsquish,2013-05-23 21:44:30,https://api.github.com/repos/twitter/finagle/git/commits/585e1cdb0766d0051d7740c746618847984c6c07,585e1cdb0766d0051d7740c746618847984c6c07,"[split] make global flags consistently camelCase

RB_ID=150441"
bmdhacks,2013-05-23 20:52:10,https://api.github.com/repos/twitter/finagle/git/commits/018867fd07d52b50b1aaf32d8077c9ee1d7906f8,018867fd07d52b50b1aaf32d8077c9ee1d7906f8,"[split] enable tracing by default for Http

RB_ID=150144"
luciferous,2013-05-23 18:03:51,https://api.github.com/repos/twitter/finagle/git/commits/c7ef2c57d8327e47f5965336ff946d31120bdf9a,c7ef2c57d8327e47f5965336ff946d31120bdf9a,"[split] Call super method only if response is not chunked

RB_ID=149828"
bmdhacks,2013-05-21 22:00:31,https://api.github.com/repos/twitter/finagle/git/commits/2ed6a16e69b2b2cb1c94670b46f01131a4baf428,2ed6a16e69b2b2cb1c94670b46f01131a4baf428,"[split] Tracing changes to annotate both client and server ip addresses Currently the tracing filter only records the local ip address of any operation. This patch records both the local IP, and the destination IP address for all RPCs.

RB_ID=141875"
luciferous,2013-05-20 18:58:09,https://api.github.com/repos/twitter/finagle/git/commits/623e7dd8c15d27b4b2ae113fd6c1707767cf3c9d,623e7dd8c15d27b4b2ae113fd6c1707767cf3c9d,"[split] Stream interface (i.e. chunked) for HTTP message bodies

RB_ID=141578"
sprsquish,2013-05-20 17:16:49,https://api.github.com/repos/twitter/finagle/git/commits/b8ce2d1df847c7dd71082cf5b7c7a2f6f2ab416b,b8ce2d1df847c7dd71082cf5b7c7a2f6f2ab416b,"[split] get a resolver instance contained in the main Resolver

RB_ID=148778"
stevegury,2013-05-17 23:15:08,https://api.github.com/repos/twitter/finagle/git/commits/fc41e12ae13ddb064d69d8a8c2a0a0f76a2d0bb9,fc41e12ae13ddb064d69d8a8c2a0a0f76a2d0bb9,"[split] finagle-mdns: Adding project to sbt

RB_ID=148995
TBR=true
NO-QUEUE=true"
stevegury,2013-05-17 18:16:56,https://api.github.com/repos/twitter/finagle/git/commits/5bebd8dea7af85d89779d7504e5087b14eba1517,5bebd8dea7af85d89779d7504e5087b14eba1517,"[split] Finagle: Fix doc

RB_ID=148817
TBR=true
NO-QUEUE=true"
roanta,2013-05-17 07:02:34,https://api.github.com/repos/twitter/finagle/git/commits/d2209672bac1745d79b0ba6c381421a15642983c,d2209672bac1745d79b0ba6c381421a15642983c,"[split]  finagle-mysql: refactor endec into proper fsm

RB_ID=148112"
stevegury,2013-05-17 00:44:33,https://api.github.com/repos/twitter/finagle/git/commits/3ff99b6ef74c022274138a2c987de68d5b85937b,3ff99b6ef74c022274138a2c987de68d5b85937b,"[split]  Update sbt project for (util, ostrich, finagle)

RB_ID=148632
TBR=true"
stevegury,2013-05-16 21:53:09,https://api.github.com/repos/twitter/finagle/git/commits/b071b3e9a6a457abff9d052ed29c03d7709d582b,b071b3e9a6a457abff9d052ed29c03d7709d582b,"[split]  Release finagle 6.4.0

RB_ID=148557
TBR=true"
stevegury,2013-05-16 20:03:24,https://api.github.com/repos/twitter/finagle/git/commits/ccc49f3f3c5204a8d28cec747848373680c3db36,ccc49f3f3c5204a8d28cec747848373680c3db36,"[split]  Release ostrich 9.1.1

RB_ID=148497
TBR=true"
roanta,2013-05-16 18:49:22,https://api.github.com/repos/twitter/finagle/git/commits/e54ff4f0b3141401524551b88eb139c86538ca35,e54ff4f0b3141401524551b88eb139c86538ca35,"[split]  finagle-mysql: add ability to pass StatsReceiver to builder

RB_ID=148457"
stevegury,2013-05-16 18:23:55,https://api.github.com/repos/twitter/finagle/git/commits/f196c424afb4d9b3a77ff24f7440b35e38ed349d,f196c424afb4d9b3a77ff24f7440b35e38ed349d,"[split]  Release util 6.3.4

RB_ID=148430
TBR=true"
sprsquish,2013-05-15 22:08:21,https://api.github.com/repos/twitter/finagle/git/commits/3831f5ab3abda612a108a3ca08ccef07adb2110e,3831f5ab3abda612a108a3ca08ccef07adb2110e,"[split]  finagle-zipkin: make ZipkinTracer loadable

RB_ID=144296"
mariusae,2013-05-15 21:36:17,https://api.github.com/repos/twitter/finagle/git/commits/7cd0da4b743755afc9d100ab0d2a3ee62e30d7eb,7cd0da4b743755afc9d100ab0d2a3ee62e30d7eb,"[split]  HeapBalancer: fix handling of unavailable nodes

Unavailable nodes were maintained in the heap, but skipped on
retrieval. However, the way in which they were skipped could cause
parts of the heap to be effectively shadowed, as nodes to the left of
unavailable nodes would not be scanned.

We change the way load accounting is done: instead of beginning at 0,
loads begin at Int.MinValue. Unavailable nodes are given a penalty of
-Int.MinValue, so unavailable nodes have loads > 0. We also maintain a
linked list of downed nodes. This list is scanned at the beginning of
every balance in order to see if they have been revived.

Together, these handle load balancing with failed nodes properly. In
the limit, if all nodes are failed, this will balance across all of
them evenly.

RB_ID=147920"
mariusae,2013-05-14 21:17:59,https://api.github.com/repos/twitter/finagle/git/commits/c7694e4fd76383464d22fcce343501a5796885f4,c7694e4fd76383464d22fcce343501a5796885f4,"[split]  Revert "" HeapBalancer: fix handling of unavailable nodes""

RB_ID=147830
TBR=true"
mariusae,2013-05-14 18:04:33,https://api.github.com/repos/twitter/finagle/git/commits/f68e52ddede6f710592dee73e2ded35580b12831,f68e52ddede6f710592dee73e2ded35580b12831,"[split]  HeapBalancer: fix handling of unavailable nodes

Unavailable nodes were maintained in the heap, but skipped on
retrieval. However, the way in which they were skipped could cause
parts of the heap to be effectively shadowed, as nodes to the left of
unavailable nodes would not be scanned.

We change the way load accounting is done: instead of beginning at 0,
loads begin at Int.MinValue. Unavailable nodes are given a penalty of
-Int.MinValue, so unavailable nodes have loads > 0. We also maintain a
linked list of downed nodes. This list is scanned at the beginning of
every balance in order to see if they have been revived.

Together, these handle load balancing with failed nodes properly. In
the limit, if all nodes are failed, this will balance across all of
them evenly.

RB_ID=146963"
roanta,2013-05-14 00:56:05,https://api.github.com/repos/twitter/finagle/git/commits/fd9e68593eb5be49d1c7af128e994217c9bc45c4,fd9e68593eb5be49d1c7af128e994217c9bc45c4,"[split]  Isolate integration tests in finagle-mysql

RB_ID=144932"
sprsquish,2013-05-13 16:32:08,https://api.github.com/repos/twitter/finagle/git/commits/0e213554ac252baa8c4337e8ff4e1f3166688fdd,0e213554ac252baa8c4337e8ff4e1f3166688fdd,"[split]  bump util to 6.3.4-SNAPSHOT

- release 6.3.3 of util
- update changelog

RB_ID=147309
TBR=true"
oo00o0o00oo,2013-05-10 22:57:36,https://api.github.com/repos/twitter/finagle/git/commits/613d7b41ae67119600fa69f2e210d3dd88452962,613d7b41ae67119600fa69f2e210d3dd88452962,"[split]  OBSERVE-4549: Fix sourceHost supplied to chickadee exception reporter

RB_ID=146901
TBR=true"
sprsquish,2013-05-10 21:16:48,https://api.github.com/repos/twitter/finagle/git/commits/cf74ebb603bb5b22e9b398f77a21239974bec49c,cf74ebb603bb5b22e9b398f77a21239974bec49c,"[split]  finagle: force service loader to return a concrete collection

RB_ID=146956
TBR=true"
roanta,2013-05-09 22:42:27,https://api.github.com/repos/twitter/finagle/git/commits/0ae1629ac99ca328972281d8815a8a3895a2c438,0ae1629ac99ca328972281d8815a8a3895a2c438,"[split]  Properly synchronize concurrent access to ProxyService state.

ProxyService is used to buffer requests until the cluster
is populated. Access to the request buffer is not properly
synchronized. This race condition was causing unexpected
behavior and resulting in an incomplete cluster.

RB_ID=146613"
sprsquish,2013-05-09 18:07:19,https://api.github.com/repos/twitter/finagle/git/commits/12073416f77000bf54d326e46d10d38eb01ec4f6,12073416f77000bf54d326e46d10d38eb01ec4f6,"[split]  twitter-server oss fixes

RB_ID=146587
TBR=true"
stuhood,2013-05-08 20:18:07,https://api.github.com/repos/twitter/finagle/git/commits/e1c8443752d1a6156a5b693d53303d01150be5d9,e1c8443752d1a6156a5b693d53303d01150be5d9,"[split]  finagle-core: Declare dep on util-app, which was being pulled in transitively in most-but-not-all cases.

RB_ID=146282
TBR=true"
roanta,2013-05-06 23:53:15,https://api.github.com/repos/twitter/finagle/git/commits/34ab7a985ab45663162a6358350396719accdd7f,34ab7a985ab45663162a6358350396719accdd7f,"[split]  Bump util dependencies to 6.3.3-SNAPSHOT

RB_ID=141048
TBR=true"
roanta,2013-05-02 21:50:03,https://api.github.com/repos/twitter/finagle/git/commits/c2add24e2f4a2f1143358e3d199b18c518046a53,c2add24e2f4a2f1143358e3d199b18c518046a53,"[split]  finagle-mysql: exhaustive match fix in acceptLogin

RB_ID=144772"
roanta,2013-05-02 18:11:27,https://api.github.com/repos/twitter/finagle/git/commits/fee7c2e96745f1cdd84b5971bcc03f55c65bf521,fee7c2e96745f1cdd84b5971bcc03f55c65bf521,"[split]  finagle and util: Generate build.properties from sbt

RB_ID=144052"
mariusae,2013-04-30 20:04:04,https://api.github.com/repos/twitter/finagle/git/commits/91f85f7016b8cd79913018b4d6f2b51ed8cfbef2,91f85f7016b8cd79913018b4d6f2b51ed8cfbef2,"[split]  finagle-core: share worker pools between server and client

RB_ID=141206"
xinxiang-twitter,2013-04-29 18:16:57,https://api.github.com/repos/twitter/finagle/git/commits/315050d171dd91f7533e5b4d1a6794c467d36a99,315050d171dd91f7533e5b4d1a6794c467d36a99,"[split]  stress test class for KetamaClient in finagle-memcached

RB_ID=135384"
sprsquish,2013-04-26 21:56:53,https://api.github.com/repos/twitter/finagle/git/commits/9701afff583f799b07f66731492075649195d688,9701afff583f799b07f66731492075649195d688,"[split]  finagle: refactor Future#get to Await.result

RB_ID=143195
TBR=true"
edma2,2013-04-26 18:47:21,https://api.github.com/repos/twitter/finagle/git/commits/3e39a9dbd47710d9445df34d3c6121cefcf5c90f,3e39a9dbd47710d9445df34d3c6121cefcf5c90f,"[split]  Bump Jackson to 1.9.11

RB_ID=142265
TBR=true"
xinxiang-twitter,2013-04-25 23:26:15,https://api.github.com/repos/twitter/finagle/git/commits/280bf0d134f8df794eed161ad2189eaf86e84426,280bf0d134f8df794eed161ad2189eaf86e84426,"[split]  change to use consistent way to provide failure accrual params

RB_ID=142644"
sprsquish,2013-04-25 22:13:35,https://api.github.com/repos/twitter/finagle/git/commits/443bd51d410566d8e097aee683b37130b8dc6a54,443bd51d410566d8e097aee683b37130b8dc6a54,"[split]  finagle-core: add a group combiner

RB_ID=142491"
stevegury,2013-04-22 17:16:46,https://api.github.com/repos/twitter/finagle/git/commits/4163abae73418bf50a538d7ab465c9b8533e24ef,4163abae73418bf50a538d7ab465c9b8533e24ef,"[split]  finagle-exp: Use published jsr166e.jar

RB_ID=140989"
KeithFrost,2013-04-18 23:07:47,https://api.github.com/repos/twitter/finagle/git/commits/755f146aace9424fdb8e8b435d52609398f2eba4,755f146aace9424fdb8e8b435d52609398f2eba4,"[split]  Fix byte encoding problem with Z(Rev)Rank

Signed-off-by: Rachit Arora <rarora@twitter.com>

RB_ID=139536"
bmdhacks,2013-04-17 20:33:28,https://api.github.com/repos/twitter/finagle/git/commits/6f056f8eaf6563ce63e1d07688a8f100117be32b,6f056f8eaf6563ce63e1d07688a8f100117be32b,"[split]  Improve zipkin trace sampling. This is a patch to resolve an issue with trace_id's colliding in zipkin. It is done by giving each instance a random salt at startup, and the subset of sampled traces is based on that salt.  This ensures full 64-bit coverage of traceIds in a multi-host deployment like tfe.

RB_ID=140386"
roanta,2013-04-16 22:45:42,https://api.github.com/repos/twitter/finagle/git/commits/1513dea015fd056645108eb6f52ac3764d532026,1513dea015fd056645108eb6f52ac3764d532026,"[split]  Fix behavior of proxy forwarding in StatsReceiver

StatsReceiverProxy, NameTranslatingStatsReceiver, and
NullStatsReceiver all now properly forward StatsReceiver
calls to their ""self"" instance. Equality is no longer
proxied in this way in order to maintain the hashCode
and equality contract. Finally, to check for ""nullness""
the isNull method was introduced in the StatsReceiver
trait.

RB_ID=139623"
jdanbrown,2013-04-15 17:58:27,https://api.github.com/repos/twitter/finagle/git/commits/505c4419b9761dc27ad64d779ccd41ed51a967f7,505c4419b9761dc27ad64d779ccd41ed51a967f7,"[split]  Don't use ChannelBuffer.array

[`CompositeChannelBuffer.array` throws `UnsupportedOperationException`](http://netty.io/3.5/xref/org/jboss/netty/buffer/CompositeChannelBuffer.html#166). Use `ChannelBuffer.toString(Charset)` instead (cf. [`com.twitter.finagle.http.Message.contentString`](https://github.com/twitter/finagle/blob/master/finagle-http/src/main/scala/com/twitter/finagle/http/Message.scala#L280)).

Signed-off-by: marius a. eriksen <marius@twitter.com>

RB_ID=139949"
mosesn,2013-04-12 18:41:53,https://api.github.com/repos/twitter/finagle/git/commits/b520243e44a64974f25bc6f8678196b4feca8600,b520243e44a64974f25bc6f8678196b4feca8600,"[split]  fixes some issues with charsets

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=139045"
roanta,2013-04-12 17:10:01,https://api.github.com/repos/twitter/finagle/git/commits/affc2960b91d65737f70deed90cc3be23194e25c,affc2960b91d65737f70deed90cc3be23194e25c,"[split]  finagle-mysql: - Encode all the given the error information in the ServerError - Implement closable - Annotate ClientTest to actually run in maven

RB_ID=138886"
xinxiang-twitter,2013-04-11 18:35:20,https://api.github.com/repos/twitter/finagle/git/commits/86833c1dcc24d6e9a03034e164738a3d49280258,86833c1dcc24d6e9a03034e164738a3d49280258,"[split]  add unmanaged cache pool cluster

RB_ID=139146"
stevegury,2013-04-11 04:24:57,https://api.github.com/repos/twitter/finagle/git/commits/19aec90837b1c8326d498af93b2f9f34f68cf946,19aec90837b1c8326d498af93b2f9f34f68cf946,"[split]  Refactor Heapbalancer, remove usage of per host statsReceiver.

RB_ID=134792"
mosesn,2013-04-10 18:24:16,https://api.github.com/repos/twitter/finagle/git/commits/da2b7dd4d6e04b19a450a9fdeefec7f3caba03e1,da2b7dd4d6e04b19a450a9fdeefec7f3caba03e1,"[split]  Generalize LoggingFilter

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=138596"
stevegury,2013-04-10 18:19:32,https://api.github.com/repos/twitter/finagle/git/commits/f863f33f442e47d2a3714526634d7302ad857826,f863f33f442e47d2a3714526634d7302ad857826,"[split]  Fix usage of RollupStatsReceiver in StatsFactoryWrapper.

RB_ID=136815"
mosesn,2013-04-10 17:54:44,https://api.github.com/repos/twitter/finagle/git/commits/1d7e2b44370ddeda4a6d3061f0c077921987068b,1d7e2b44370ddeda4a6d3061f0c077921987068b,"[split]  adds support for latin1_bin, paves the way for more charsets.

Signed-off-by: Ruben Oanta <roanta@twitter.com>

RB_ID=137219"
capotej,2013-04-09 17:32:24,https://api.github.com/repos/twitter/finagle/git/commits/c39466321a7ef9aae16e12be5950a381b317e306,c39466321a7ef9aae16e12be5950a381b317e306,"[split]  [finagle-http] encodeBytes/decodeBytes for Request

This adds encodeBytes/decodeBytes for Request, which is useful for debugging/testing Request's which contain upload data.

RB_ID=138194"
roanta,2013-04-08 17:54:14,https://api.github.com/repos/twitter/finagle/git/commits/c64210dfa538d23f8768df7f20ebf1b64fd0bf36,c64210dfa538d23f8768df7f20ebf1b64fd0bf36,"[split]  finagle-mysql owners

RB_ID=138169"
roanta,2013-04-08 17:16:26,https://api.github.com/repos/twitter/finagle/git/commits/564c38b2caf37bcc0e8010722649a841c1d4bf09,564c38b2caf37bcc0e8010722649a841c1d4bf09,"[split]  finagle-mysql: fix improper use of ServiceFactory in Client

RB_ID=136144"
sprsquish,2013-04-06 02:23:59,https://api.github.com/repos/twitter/finagle/git/commits/1f797e1c1ae1bde842379a84b01b29c752e60cb8,1f797e1c1ae1bde842379a84b01b29c752e60cb8,"[split]  finagle: bump sbt to 2.3.0

- finagle: bump sbt to 2.3.0
- util: bump sbt to 2.3.0

RB_ID=138034"
sprsquish,2013-04-05 22:14:38,https://api.github.com/repos/twitter/finagle/git/commits/d91f6fd025cc2c72f1bfa0872c1e9b72d0477864,d91f6fd025cc2c72f1bfa0872c1e9b72d0477864,"[split]  release 6.3.0 of finagle

 - bump finagle to 6.3.1-SNAPSHOT
 - release 6.3.0 of finagle
 - bump finagle minor
 - update changelog
 - bump finagle to 6.2.0

RB_ID=137969
TBR=true"
sprsquish,2013-04-05 18:22:57,https://api.github.com/repos/twitter/finagle/git/commits/45583019a2df11f2ebe51d40eea69976847ebc6e,45583019a2df11f2ebe51d40eea69976847ebc6e,"[split]  release 6.3.0 of util

 - bump util to 6.3.1-SNAPSHOT
 - release 6.3.0 of util
 - bump util minor
 - update changelog
 - csl release: jump to the right dir on large bumps

RB_ID=137918
TBR=true"
sprsquish,2013-04-05 16:51:51,https://api.github.com/repos/twitter/finagle/git/commits/eabfd4d64e9e484b2f08f5dbcece4dcbdb0ac3f8,eabfd4d64e9e484b2f08f5dbcece4dcbdb0ac3f8,"[split]  finagle-thrift: SocketAddress when serving an iface

RB_ID=137190
TBR=true"
trustin,2013-03-30 02:30:07,https://api.github.com/repos/twitter/finagle/git/commits/8b3d759d482dbd289fc7f8d73b11effae55bd372,8b3d759d482dbd289fc7f8d73b11effae55bd372,"[split]  Specify DefaultTimer when creating a ChannelFactory

.. so that Netty does not create a new HashedWheelTimer with a
non-daemon thread.

Also upgraded the Netty version of finagle-test because the constructor
that accepts a user provided timer is not available in 3.5.5.Final.

RB_ID=136605"
bmdhacks,2013-03-28 01:43:21,https://api.github.com/repos/twitter/finagle/git/commits/64cc89ee4295e54e329169a556e7476fa45a5ad1,64cc89ee4295e54e329169a556e7476fa45a5ad1,"[split]  Finagle-Zipkin: tracing improvements: 1) Fix span annotations to log service names even if host ips are not provided. 2) Add a convenience function for wrapping processing loops in applications (such as grailbird) 3) Change endpoint logic to be more agressive in substituting in local ip address

RB_ID=135679"
stevegury,2013-03-27 18:40:08,https://api.github.com/repos/twitter/finagle/git/commits/9c3116142e257df6ac1e6048f7e4f4a370fe4f21,9c3116142e257df6ac1e6048f7e4f4a370fe4f21,"[split]  Add BroadcastCounter and BroadcastStat, refactor Broadcast and Rollup Receiver.

RB_ID=134811"
mariusae,2013-03-27 18:25:51,https://api.github.com/repos/twitter/finagle/git/commits/7e539a134d5e2b627593c1c73ae4fcb7f7bcc7d2,7e539a134d5e2b627593c1c73ae4fcb7f7bcc7d2,"[split] finagle: update sbt, add finagle-exp

RB_ID=135825"
mariusae,2013-03-27 17:50:20,https://api.github.com/repos/twitter/finagle/git/commits/6fb06f55b83a60bdeff3fbb7666aa0029ef34236,6fb06f55b83a60bdeff3fbb7666aa0029ef34236,"[split] finagle-doc: Add a FAQ, add an entry about CancelledRequestExceptions

	http://twitter.github.com/finagle/guide/FAQ.html#what-s-a-cancelledrequestexception

RB_ID=135783"
evnm,2013-03-26 15:33:57,https://api.github.com/repos/twitter/finagle/git/commits/3f487db8e1c3ab33480f63d37fd4e7978dba5d5c,3f487db8e1c3ab33480f63d37fd4e7978dba5d5c,"[split]  Finagle: A few wording fixes in Sphinx doc templates.

RB_ID=134881"
mariusae,2013-03-25 21:42:46,https://api.github.com/repos/twitter/finagle/git/commits/33b54d31de8ede57483a0d6d1345b2762ae866c8,33b54d31de8ede57483a0d6d1345b2762ae866c8,"[split]  finagle StatsFilter: Check for WriteException-wrapped backup-request losers

The various pools wrap failures this way. Another thing that should
attain much greater clarity with the coming Failure change.

RB_ID=134980"
roanta,2013-03-25 17:37:32,https://api.github.com/repos/twitter/finagle/git/commits/3d7e84417a0b5afade9c12de9560ac5cf09c75f3,3d7e84417a0b5afade9c12de9560ac5cf09c75f3,"[split]  finagle-mysql bug fixes: - Fix an issue with the Capability connectWithDB while handshaking not being read properly - Fix an issue with the null bitmap not properly being encoded for parameter sizes > 8 - Fix an issue with integration test not running properly - Change integration test to read mysql credentials from resource file

RB_ID=134634"
stevegury,2013-03-23 05:34:25,https://api.github.com/repos/twitter/finagle/git/commits/b3f028c89125f84417e20486d5bcca4cec95acc1,b3f028c89125f84417e20486d5bcca4cec95acc1,"[split]  Update sbt project definition for util/finagle

RB_ID=134416"
stevegury,2013-03-23 05:32:19,https://api.github.com/repos/twitter/finagle/git/commits/108f023cb36298c0f38b16542084c9fc71746118,108f023cb36298c0f38b16542084c9fc71746118,"[split]  Introduce DefaultTracer that load available Tracers via LoadService + Fix equality with NullStatsReceiver

RB_ID=128930"
stevegury,2013-03-21 20:15:08,https://api.github.com/repos/twitter/finagle/git/commits/ff3cb798d665c9b0714babab6335ebb7adbce2e6,ff3cb798d665c9b0714babab6335ebb7adbce2e6,"[split]  release of finagle 6.1.2

RB_ID=134258
TBR=true"
stevegury,2013-03-21 18:05:40,https://api.github.com/repos/twitter/finagle/git/commits/ef110af5f458b7386acbe411228c2a0289378bc2,ef110af5f458b7386acbe411228c2a0289378bc2,"[split]  Fix memcached flakey test

Wait properly for the memcached server to start.

RB_ID=134127"
stevegury,2013-03-21 18:03:19,https://api.github.com/repos/twitter/finagle/git/commits/606b2374029f9604945067cbca6b09a683a3fbd7,606b2374029f9604945067cbca6b09a683a3fbd7,"[split]  release 6.2.4 of util

RB_ID=134186
TBR=true"
mariusae,2013-03-21 17:23:07,https://api.github.com/repos/twitter/finagle/git/commits/7fe60aea8d5648132e8b071a3d0d75735ef815b7,7fe60aea8d5648132e8b071a3d0d75735ef815b7,"[split] finagle-doc: add Matt Ho's talk, adjust style

RB_ID=133082"
sprsquish,2013-03-19 23:24:16,https://api.github.com/repos/twitter/finagle/git/commits/450001b68cc3e6c513c8f756e172abf41a01b2e0,450001b68cc3e6c513c8f756e172abf41a01b2e0,"[split]  finagle-core: fix reporting bug for pending reqs

RB_ID=133531"
sprsquish,2013-03-19 21:32:42,https://api.github.com/repos/twitter/finagle/git/commits/cf8a063e63e7d7358702245e1cbe91b3972e5ed9,cf8a063e63e7d7358702245e1cbe91b3972e5ed9,"[split]  finagle-http: Avoid URISyntaxException

RB_ID=133385"
mariusae,2013-03-18 21:41:11,https://api.github.com/repos/twitter/finagle/git/commits/c3140dffb72b9d575a778f29cb3d0406d99073bb,c3140dffb72b9d575a778f29cb3d0406d99073bb,"[split]  finagle-thrift: fix 2.10 build

RB_ID=133123
TBR=true"
mariusae,2013-03-18 20:42:34,https://api.github.com/repos/twitter/finagle/git/commits/7e0fac73840eac2eb64620e384fd845cbe022e4e,7e0fac73840eac2eb64620e384fd845cbe022e4e,"[split] finagle: fix sbt build

RB_ID=133089
TBR=true"
roanta,2013-03-18 19:59:16,https://api.github.com/repos/twitter/finagle/git/commits/9f48f5a6f656d695169eb6c65fecd3e5289ae2cd,9f48f5a6f656d695169eb6c65fecd3e5289ae2cd,"[split]  finagle-mysql: - make prepareAndExecute and prepareAndSelect useful again.

RB_ID=133006"
roanta,2013-03-18 19:55:56,https://api.github.com/repos/twitter/finagle/git/commits/3d92de34267152f55c60e7e417f8d826b5cba1fa,3d92de34267152f55c60e7e417f8d826b5cba1fa,"[split]  finagle-mysql: - Make sure we are properly managing prepared statement resources (calling closeStatement) - Remove superfluous getOrElse in select example

RB_ID=133037"
stevegury,2013-03-18 18:39:39,https://api.github.com/repos/twitter/finagle/git/commits/528c996369fc5849769c5773796e5b01566d8789,528c996369fc5849769c5773796e5b01566d8789,"[split]  Move Disposable/Managed to util

RB_ID=126799"
mariusae,2013-03-18 17:35:41,https://api.github.com/repos/twitter/finagle/git/commits/5abef2583798f65748b14a4878c54b37c0a136e2,5abef2583798f65748b14a4878c54b37c0a136e2,"[split]  BackupRequestFilter: windowed histogram, accurate error reporting

RB_ID=132815"
mariusae,2013-03-18 17:32:13,https://api.github.com/repos/twitter/finagle/git/commits/a77665f373e0b0a58adc1ab6ac2002e6f51d2d19,a77665f373e0b0a58adc1ab6ac2002e6f51d2d19,"[split] finagle-doc: adjust wording.

RB_ID=132829"
mariusae,2013-03-15 18:19:41,https://api.github.com/repos/twitter/finagle/git/commits/a0ad2ee96c5957874e114e555751f04fdbf8b41c,a0ad2ee96c5957874e114e555751f04fdbf8b41c,"[split]  finagle-exp: inline jsr166e code

This way we can compile it with our own compilers,
avoiding class version errors.

RB_ID=132676"
stevegury,2013-03-15 16:16:35,https://api.github.com/repos/twitter/finagle/git/commits/46caa05a66652d72975745ef95fc7ecaf213aa0f,46caa05a66652d72975745ef95fc7ecaf213aa0f,"[split]  Fix thrift flakey tests

RB_ID=132602"
mosesn,2013-03-15 05:24:10,https://api.github.com/repos/twitter/finagle/git/commits/8972b747ef60575b274e43e6219a4933e33a1653,8972b747ef60575b274e43e6219a4933e33a1653,"[split]  moved redis server classes from private to public

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=132272"
likethesky,2013-03-15 05:17:32,https://api.github.com/repos/twitter/finagle/git/commits/2997fc05a339e164102dcc481c46e4e7d7f1367a,2997fc05a339e164102dcc481c46e4e7d7f1367a,"[split]  Changed another sbt link

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=128981"
likethesky,2013-03-15 04:59:28,https://api.github.com/repos/twitter/finagle/git/commits/a806fc91827abf01dda0e685af5ef745fd20a5a4,a806fc91827abf01dda0e685af5ef745fd20a5a4,"[split]  Fixed broken link to sbt project

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=128980"
roanta,2013-03-15 00:22:19,https://api.github.com/repos/twitter/finagle/git/commits/8e21540310e2be55610d13e273eb1621b2966e2e,8e21540310e2be55610d13e273eb1621b2966e2e,"[split]  finagle-mysql changes: - Move interfaces outside of protocol package. - Move example into finagle-mysql.

RB_ID=129256"
mariusae,2013-03-13 16:25:30,https://api.github.com/repos/twitter/finagle/git/commits/5928f572b335c43da726ee80e3dce38019718cbc,5928f572b335c43da726ee80e3dce38019718cbc,"[split]  fix finagle-exp version

RB_ID=131824
TBR=true"
xinxiang-twitter,2013-03-13 00:48:13,https://api.github.com/repos/twitter/finagle/git/commits/7e9ab31a99deec93861d9331602ba26fc76e21c5,7e9ab31a99deec93861d9331602ba26fc76e21c5,"[split]  Replication Cache Client A base cache replication client which manages a list of underlying cache client objects, and provides replication operations returning ReplicationStatus object aggregates the underlying replicas consistency. A simple replication client wrapper attempts to handle the inconsistency between replicas in a best effort way; this wrapper is for the convenience of some simple cache use cases.

RB_ID=121431"
stevegury,2013-03-12 20:59:20,https://api.github.com/repos/twitter/finagle/git/commits/52a6b416cd1467420ae6705fd67d07c2f68a207e,52a6b416cd1467420ae6705fd67d07c2f68a207e,"[split]  Release finagle 6.1.1

RB_ID=131567
TBR=true"
mariusae,2013-03-12 20:38:07,https://api.github.com/repos/twitter/finagle/git/commits/8ca92593aac1d3f5bd4741d6b8e6fcf26053dc44,8ca92593aac1d3f5bd4741d6b8e6fcf26053dc44,"[split]  finagle-exp: a new backup request filter using response latency quantiles

RB_ID=131500"
mariusae,2013-03-12 20:18:19,https://api.github.com/repos/twitter/finagle/git/commits/0778728d5d72515bf6513ecfe51a15c93804ab5e,0778728d5d72515bf6513ecfe51a15c93804ab5e,"[split]  com.twitter.finagle.Thrift

New-style client and server for thrift. This involved a
bit of refactoring as I moved all of the rich mixins to
a common place.

RB_ID=131149"
roanta,2013-03-11 20:22:16,https://api.github.com/repos/twitter/finagle/git/commits/6c09dd81a21064d30f49429c3e7d8192e60e64da,6c09dd81a21064d30f49429c3e7d8192e60e64da,"[split]  Move finagle-mysql to exp package + add to parent pom

RB_ID=130057"
sprsquish,2013-03-09 00:11:16,https://api.github.com/repos/twitter/finagle/git/commits/24f033de7bd2de20b21d95bd5d3f5a63b53ede2f,24f033de7bd2de20b21d95bd5d3f5a63b53ede2f,"[split]  util: 6.2.3

  - bump util to 6.2.4-SNAPSHOT
  - release 6.2.3 of util
  - Update changelog

RB_ID=130827
TBR=true"
sprsquish,2013-03-08 21:04:07,https://api.github.com/repos/twitter/finagle/git/commits/166724ff1cbc01f4b3a26d2572cd6a3f59723afc,166724ff1cbc01f4b3a26d2572cd6a3f59723afc,"[split]  Upgrade netty

RB_ID=130655"
roanta,2013-03-01 21:09:19,https://api.github.com/repos/twitter/finagle/git/commits/fee8117c59a8e53512f71cb11adddf81e1e011de,fee8117c59a8e53512f71cb11adddf81e1e011de,"[split]  jira-csl-388 fix - Assure finagle-mysql codec maintains request/response model in all cases. - Rename valueOf to apply in Row class. - Improve documentation.

RB_ID=127290"
xinxiang-twitter,2013-02-28 20:28:31,https://api.github.com/repos/twitter/finagle/git/commits/7a673181c7c6c9e79f89d6b097d00a35900a3e5f,7a673181c7c6c9e79f89d6b097d00a35900a3e5f,"[split]  (cache-708) cache pool cluster not updated since 2nd serverset change

RB_ID=128322"
xinxiang-twitter,2013-02-27 22:38:52,https://api.github.com/repos/twitter/finagle/git/commits/ad31983220e05d6e0d41b7f5fff03c5b0aeb2d81,ad31983220e05d6e0d41b7f5fff03c5b0aeb2d81,"[split]  (cache-686) actively reestablish zk connection whenever disconnected or expired

RB_ID=127837"
sprsquish,2013-02-27 22:16:22,https://api.github.com/repos/twitter/finagle/git/commits/3b900f9d8ac10a203245e262e2017cb4446916f9,3b900f9d8ac10a203245e262e2017cb4446916f9,"[split]  Remove finagle's dependence on jerkson (it's abandoned)

RB_ID=127776"
mariusae,2013-02-27 19:34:07,https://api.github.com/repos/twitter/finagle/git/commits/e93324d9b27d94cc01701c8e3adac947bff4f211,e93324d9b27d94cc01701c8e3adac947bff4f211,"[split]  finagle-core: Log Finagle's version number on startup

Example: INF [20130227-10:42:27.591] finagle: Finagle version 6.1.1-SNAPSHOT (rev=5e6658a7359878a73896815112148250eacdfed2) built at 20130227-104012

RB_ID=127943"
sprsquish,2013-02-27 00:39:59,https://api.github.com/repos/twitter/finagle/git/commits/9902fecb037df109b8b0d1d65158f5b641920f57,9902fecb037df109b8b0d1d65158f5b641920f57,"[split]  Change finagle-mdns naming scheme

RB_ID=126938"
evnm,2013-02-26 19:31:51,https://api.github.com/repos/twitter/finagle/git/commits/f2823ad3d81cef281503d23b2aaa2721065c61ac,f2823ad3d81cef281503d23b2aaa2721065c61ac,"[split]  Finagle: Don't use deprecated FuturePool.defaultPool in finagle-memcached.

RB_ID=126362"
mosesn,2013-02-26 00:32:47,https://api.github.com/repos/twitter/finagle/git/commits/cef14ee50c005df929f3f7f8b1be952f653e860f,cef14ee50c005df929f3f7f8b1be952f653e860f,"[split]  avoid repetition in RetryPolicy

Signed-off-by: marius a. eriksen <marius@twitter.com>

RB_ID=127335"
mariusae,2013-02-25 20:15:09,https://api.github.com/repos/twitter/finagle/git/commits/cd8d517981574cbc98ac73bba5a8b78131b75754,cd8d517981574cbc98ac73bba5a8b78131b75754,"[split]  util: 6.2.2

RB_ID=127127
TBR=true"
stevegury,2013-02-25 17:44:34,https://api.github.com/repos/twitter/finagle/git/commits/1b6f333932c67a96dabc10fcf9627b550cbda65c,1b6f333932c67a96dabc10fcf9627b550cbda65c,"[split]  Fix typo. Filter should return Future[RepOut].

RB_ID=127124"
sprsquish,2013-02-22 18:58:30,https://api.github.com/repos/twitter/finagle/git/commits/0ca58bf10e29db9481a72603de1a2576a18bb70c,0ca58bf10e29db9481a72603de1a2576a18bb70c,"[split]  add tests to ensure resolvers resolve

RB_ID=126659"
mariusae,2013-02-22 17:59:26,https://api.github.com/repos/twitter/finagle/git/commits/2cc8a4e5eb8784adeed7cc74fd4fb0cdd91834f5,2cc8a4e5eb8784adeed7cc74fd4fb0cdd91834f5,"[split]  finagle: a simple landing page

RB_ID=126461"
sprsquish,2013-02-22 00:11:25,https://api.github.com/repos/twitter/finagle/git/commits/753bad52fdfa672d4ddeb16860c7e7779a0740e8,753bad52fdfa672d4ddeb16860c7e7779a0740e8,"[split]  fix loader for finagle-serversets

RB_ID=126633"
sprsquish,2013-02-21 21:17:22,https://api.github.com/repos/twitter/finagle/git/commits/03f1441426e5e5bc081eea6e4d891c2877b5b023,03f1441426e5e5bc081eea6e4d891c2877b5b023,"[split]  bring poms into line with sbt

RB_ID=126450"
mariusae,2013-02-21 18:42:59,https://api.github.com/repos/twitter/finagle/git/commits/8c5294bb9cb5240872c3b1bfb848da2a8816d24b,8c5294bb9cb5240872c3b1bfb848da2a8816d24b,"[split]  RetryingFilter: don't retry on CancelledRequestException

RB_ID=126421"
mariusae,2013-02-21 17:29:42,https://api.github.com/repos/twitter/finagle/git/commits/7099f3fb4f3a5ec7346ac70cd025b60444d18a68,7099f3fb4f3a5ec7346ac70cd025b60444d18a68,"[split]  finagle/util: fix up 2.10 build again

RB_ID=125825"
sprsquish,2013-02-21 02:25:24,https://api.github.com/repos/twitter/finagle/git/commits/3e6f60a437cf45a07f5e008269bccf16cbac47aa,3e6f60a437cf45a07f5e008269bccf16cbac47aa,"[split]  additional visibility for Announcers and Resolvers

RB_ID=125899"
mariusae,2013-02-20 23:47:25,https://api.github.com/repos/twitter/finagle/git/commits/7b63154690155b4554e8e2a1e41225eee7a7763c,7b63154690155b4554e8e2a1e41225eee7a7763c,"[split]  finagle-doc: beginnings of a finagle user's guide

RB_ID=121038"
mariusae,2013-02-20 22:52:38,https://api.github.com/repos/twitter/finagle/git/commits/760e3b9af2ecdea7e83f3ed58b5f807f98f397ce,760e3b9af2ecdea7e83f3ed58b5f807f98f397ce,"[split]  util 6.2.1

RB_ID=126119
TBR=true"
sprsquish,2013-02-16 01:14:40,https://api.github.com/repos/twitter/finagle/git/commits/f877433ca7fbc3f04e146697f17ca080ddf14084,f877433ca7fbc3f04e146697f17ca080ddf14084,"[split]  Finagle Resolver/Announcer

Break resolver out of Group
Create Announcer
Create finagle-mdns for mdns resolving/announcing

RB_ID=124162"
sprsquish,2013-02-15 17:15:00,https://api.github.com/repos/twitter/finagle/git/commits/d07caf2eff950ca94fde4cdf54b0a73afffe626b,d07caf2eff950ca94fde4cdf54b0a73afffe626b,"[split]  add support for RichHttp handlers in HttpMuxer

RB_ID=125275"
sprsquish,2013-02-14 22:18:42,https://api.github.com/repos/twitter/finagle/git/commits/d0f1e73e00ba4ae2307f7a0ad9a3e5cd087aa241,d0f1e73e00ba4ae2307f7a0ad9a3e5cd087aa241,"[split]  cleanup twitter-server admin

RB_ID=124900"
sprsquish,2013-02-14 19:29:01,https://api.github.com/repos/twitter/finagle/git/commits/dbe7bfe14be8322a92473ac1ef3908e4d882de60,dbe7bfe14be8322a92473ac1ef3908e4d882de60,"[split]  create a Null listening server

RB_ID=125108"
mariusae,2013-02-13 00:14:50,https://api.github.com/repos/twitter/finagle/git/commits/1969cdc894b38c2120f2ae1a4cf2499c47330951,1969cdc894b38c2120f2ae1a4cf2499c47330951,"[split]  finagle-core: fix up stats receivers, add naming of servers.

RB_ID=124230"
sprsquish,2013-02-12 17:44:26,https://api.github.com/repos/twitter/finagle/git/commits/154968405784611c778e71a052e231f5c4a3ebb3,154968405784611c778e71a052e231f5c4a3ebb3,"[split]  bring finagle-mysql up to date

RB_ID=123435"
stevegury,2013-02-11 17:55:54,https://api.github.com/repos/twitter/finagle/git/commits/84ad370bf6b714605a05db5e37c9e79fce6e5a55,84ad370bf6b714605a05db5e37c9e79fce6e5a55,"[split]  Restore connect_latency_ms stats (and others)

RB_ID=123924"
mariusae,2013-02-08 22:32:32,https://api.github.com/repos/twitter/finagle/git/commits/61ea54bba02c381ed443168ec98ed2a2132c7b67,61ea54bba02c381ed443168ec98ed2a2132c7b67,"[split]  finagle-core: fix stats rollup bug

RB_ID=123745"
stuhood,2013-02-08 01:34:41,https://api.github.com/repos/twitter/finagle/git/commits/b60beef9661b553012328ec94b8e47831dbaf7e8,b60beef9661b553012328ec94b8e47831dbaf7e8,"[split]  Birdcage parents: Release package-dist-0.0.5, service-0.0.7 and service-292-0.0.10  - Fix app-app lib directory to match the generated MANIFEST.MF  - Depend on package-dist 0.0.5  - Release service-0.0.7 and service-292-0.0.10 to depend on package-dist 0.0.5 and update relevant consumers

RB_ID=123463
TBR=true"
evnm,2013-02-07 19:07:42,https://api.github.com/repos/twitter/finagle/git/commits/637add00fb0345c910f826a899026508434c6775,637add00fb0345c910f826a899026508434c6775,"[split] Servo: Bump version to 2.0.2.

RB_ID=123032
TBR=true"
stevegury,2013-02-06 18:49:55,https://api.github.com/repos/twitter/finagle/git/commits/e22bc74b48f4996235ccf0b5067d5048126d442b,e22bc74b48f4996235ccf0b5067d5048126d442b,"[split]  Netty3Transporter exposes default channel options.

RB_ID=122720"
stevegury,2013-02-06 18:46:45,https://api.github.com/repos/twitter/finagle/git/commits/8032d777725eb09dbe10869743b9bebf08ce8270,8032d777725eb09dbe10869743b9bebf08ce8270,"[split]  Add OstrichExporter to enable Ostrich stats in the new App stack.

For backward compatibility reasons, we add a http entry in the admin server
names ""/stats"" that return the stats computed by the ostrich library.
To enable this feature you just have to add a dependency to finagle-ostrich4,
we use the resources/META-INF/services mechanism to register this handler
into the admin server.
Note that, stats willl also be available in ""/metrics.json"" but computed
by the metrics library.

RB_ID=122706"
mariusae,2013-02-06 18:41:40,https://api.github.com/repos/twitter/finagle/git/commits/d334ce2990ca32a356d38f8449771797f54338e1,d334ce2990ca32a356d38f8449771797f54338e1,"[split]  com.twitter.finagle.Group: introduce names, use them.

  /**
   * Resolve a group from a target name, a string. Resolve uses
   * `GroupResolver`s to do this. These are loaded via the Java
   * [[http://docs.oracle.com/javase/6/docs/api/java/util/ServiceLoader.html ServiceLoader]]
   * mechanism. The default resolver is ""inet"", resolving DNS
   * name/port pairs.
   *
   * Target names have a simple grammar: The name of the resolver
   * precedes the name of the address to be resolved, separated by
   * an exclamation mark (""bang""). For example: inet!twitter.com:80
   * resolves the name ""twitter.com:80"" using the ""inet"" resolver. If no
   * resolver name is present, the inet resolver is used.
   *
   * Names resolved by this mechanism are also a
   * [[com.twitter.finagle.NamedGroup]]. By default, this name is
   * simply the `target` string, but it can be overriden by prefixing
   * a name separated by an equals sign from the rest of the target.
   * For example, the target ""www=inet!google.com:80"" resolves
   * ""google.com:80"" with the inet resolver, but the returned group's
   * [[com.twitter.finagle.NamedGroup]] name is ""www"".
   */

RB_ID=122586"
mariusae,2013-02-06 17:28:13,https://api.github.com/repos/twitter/finagle/git/commits/97a64eb57f13556f0d443152abba2a91d4b65853,97a64eb57f13556f0d443152abba2a91d4b65853,"[split]  deprivatize, document Client, Server

RB_ID=122548"
mariusae,2013-02-05 21:24:44,https://api.github.com/repos/twitter/finagle/git/commits/f9bf9c946344da325d150feec54114c9ad6b60a1,f9bf9c946344da325d150feec54114c9ad6b60a1,"[split]  Awaitable: introduce Awaitable and Await

RB_ID=122418"
mariusae,2013-02-05 01:42:32,https://api.github.com/repos/twitter/finagle/git/commits/b12e6bdacdf9b62359e001aa61bc5362172ab5f3,b12e6bdacdf9b62359e001aa61bc5362172ab5f3,"[split]  Get rid of SharedTimer: DefaultTimer everywhere

I also audited everything that uses timers to make sure things are
properly torn down.

RB_ID=119676"
mariusae,2013-02-05 00:23:07,https://api.github.com/repos/twitter/finagle/git/commits/e544eed84b1c84de9cb6c52a6c81e321a4ce268f,e544eed84b1c84de9cb6c52a6c81e321a4ce268f,"[split]  finagle-thriftmux: Thrift over Mux.

Thrift over mux. Very simple:

    val server = ThriftMux.serveIface("":*"", new TestService.FutureIface {
      def query(x: String) = Future.value(x+x)
    })

    val client = ThriftMux.newIface[TestService.FutureIface](server)
    assert(client.query(""ok"").get() == ""okok"")

RB_ID=122198"
mariusae,2013-02-03 01:25:53,https://api.github.com/repos/twitter/finagle/git/commits/6caddb01c3a283b85e97ceda8755641c8601166b,6caddb01c3a283b85e97ceda8755641c8601166b,"[split] finagle, util: fix up sbt defs

RB_ID=122145
TBR=true"
mariusae,2013-02-02 01:28:49,https://api.github.com/repos/twitter/finagle/git/commits/5fcf2471964b121c1a0c781049ea374b1bb764be,5fcf2471964b121c1a0c781049ea374b1bb764be,"[split] finagle sbt: fix up scrooge deps

RB_ID=122096
TBR=true"
mariusae,2013-02-01 22:21:44,https://api.github.com/repos/twitter/finagle/git/commits/fcfc0cc5b1bb80f2b5e249f006c1d29d86fd98b5,fcfc0cc5b1bb80f2b5e249f006c1d29d86fd98b5,"[split]  scrooge: bump minor, updating deps

RB_ID=122004
TBR=true"
mariusae,2013-02-01 19:42:34,https://api.github.com/repos/twitter/finagle/git/commits/ff1be7bfc93288c8b62f0d25ea38947f1b204c89,ff1be7bfc93288c8b62f0d25ea38947f1b204c89,"[split]  new APIs, twitter-server: potpurri of making things work well together

    - A slight tweak to ``Binder'' -- replace with ``endpointer'' / Bridge
    - twitter-server uses new serve API to expose admin port
    - thread through support for naming and scoping everywhere,
    demand a default name from clients and servers
    - TwitterServer includes Logging by default

RB_ID=121904"
xinxiang-twitter,2013-01-31 22:35:32,https://api.github.com/repos/twitter/finagle/git/commits/f182a4a0a0e63ff3866da80c256dd1177196e6db,f182a4a0a0e63ff3866da80c256dd1177196e6db,"[split]  disable integ testing for using in memory zookeeper

RB_ID=121525"
stevegury,2013-01-31 21:14:01,https://api.github.com/repos/twitter/finagle/git/commits/2d2b97c368bc62b7442fb4d8244228bb0594b830,2d2b97c368bc62b7442fb4d8244228bb0594b830,"[split]  Programmatically optimize imports

RB_ID=121577"
stevegury,2013-01-31 17:01:34,https://api.github.com/repos/twitter/finagle/git/commits/c111a42d1bfa65240c0c979e6c9f1cbbe821a355,c111a42d1bfa65240c0c979e6c9f1cbbe821a355,"[split]  release version 6.1.0 of finagle

RB_ID=121495
TBR=true"
sprsquish,2013-01-31 16:54:43,https://api.github.com/repos/twitter/finagle/git/commits/5b2ef9bba00fb432dc2778d507c5ca3b5f86dd28,5b2ef9bba00fb432dc2778d507c5ca3b5f86dd28,"[split]  create twitter-server

Twitter-Server: a sane default App specific to Twitter.

RB_ID=115633"
mariusae,2013-01-31 05:11:52,https://api.github.com/repos/twitter/finagle/git/commits/b1360f939eabe315ffac269ec979824ac78a9d61,b1360f939eabe315ffac269ec979824ac78a9d61,"[split] finagle: fix sbt build

RB_ID=121511
TBR=true"
sprsquish,2013-01-31 00:37:44,https://api.github.com/repos/twitter/finagle/git/commits/1db886fba366f4aecf6d46ac790652ff244d68c1,1db886fba366f4aecf6d46ac790652ff244d68c1,"[split]  finagle: update stats reporting; switch to Groups

- finagle-stats is a new project that provides a StatsReceiver based on
  Twitter's Metrics library.

- provide a reportHostStatsTo API on ClientBuilder that per-host stats
  will be reported to.

- Use Groups in place of Clusters

RB_ID=120005"
stevegury,2013-01-31 00:32:30,https://api.github.com/repos/twitter/finagle/git/commits/c967492d355ff93ad9a7369aed44649e82e3d896,c967492d355ff93ad9a7369aed44649e82e3d896,"[split]  release version 9.1.0 of ostrich

RB_ID=121414
TBR=true"
stevegury,2013-01-30 23:47:51,https://api.github.com/repos/twitter/finagle/git/commits/576411270a250b43db9bf2f71fbdf9115111ad67,576411270a250b43db9bf2f71fbdf9115111ad67,"[split]  release version 6.1.0 of util

RB_ID=121378
TBR=true"
mosesn,2013-01-30 21:22:55,https://api.github.com/repos/twitter/finagle/git/commits/c79839ae81920ff50f9400c39b57d19a0e7acc05,c79839ae81920ff50f9400c39b57d19a0e7acc05,"[split]  made zRange... commands work more like the actual redis commands

Signed-off-by: Anirudh Srinivas <anirudhs@twitter.com>

RB_ID=120760"
mariusae,2013-01-30 21:01:11,https://api.github.com/repos/twitter/finagle/git/commits/beafcd947aa902cf9f120decf560a0337552cc07,beafcd947aa902cf9f120decf560a0337552cc07,"[split]  finagle, ostrich: bump minor

RB_ID=121293
TBR=true"
mariusae,2013-01-30 20:19:03,https://api.github.com/repos/twitter/finagle/git/commits/35dce7efcaa1b769ff4f7eec594a5acede1733d1,35dce7efcaa1b769ff4f7eec594a5acede1733d1,"[split]  util: bump minor

RB_ID=121042"
mariusae,2013-01-30 19:02:20,https://api.github.com/repos/twitter/finagle/git/commits/6996d20cb4224d493e00d116cf36bdfdbd61f27b,6996d20cb4224d493e00d116cf36bdfdbd61f27b,"[split]  finagle-http: add new-style client and server, including a primitive URL fetcher

scala> com.twitter.finagle.Http.fetchUrl(""http://www.google.com/"")
res0: Future[...

RB_ID=121108"
mariusae,2013-01-30 18:32:02,https://api.github.com/repos/twitter/finagle/git/commits/d2b6b1772a93970889a8efa8b8b19b87ed34279a,d2b6b1772a93970889a8efa8b8b19b87ed34279a,"[split]  core libraries: preliminary 2.10 port/build

RB_ID=119983"
mariusae,2013-01-30 00:10:23,https://api.github.com/repos/twitter/finagle/git/commits/71682114094f825a358778b4366908415d43a0ff,71682114094f825a358778b4366908415d43a0ff,"[split]  finagle: deprecations, make tests less verbose

RB_ID=119451"
mariusae,2013-01-29 19:48:09,https://api.github.com/repos/twitter/finagle/git/commits/3a3728f3edc8f5bdba80eb26fe483d5473869200,3a3728f3edc8f5bdba80eb26fe483d5473869200,"[split]  Tracer: use new daemon() flag; get rid of factory. Simplify.

RB_ID=119099
TBR=true"
xinxiang-twitter,2013-01-28 23:08:22,https://api.github.com/repos/twitter/finagle/git/commits/8a0859fc98a88d734a85513a497d00ede1e7568b,8a0859fc98a88d734a85513a497d00ede1e7568b,"[split] temp fix for miticate false test failures on CI systems (for CACHE-609)

RB_ID=120659"
stuhood,2013-01-28 22:24:35,https://api.github.com/repos/twitter/finagle/git/commits/2c55a22ee363cac3760b1577c28d0480e0c34c9c,2c55a22ee363cac3760b1577c28d0480e0c34c9c,"[split] Birdcage Build: release and stabilize parent projects  - Release and stabilize package-dist in order to force pulling in the latest version.  - Was causing build breakages depending on the environment.

RB_ID=120641
TBR=true"
mariusae,2013-01-26 22:58:20,https://api.github.com/repos/twitter/finagle/git/commits/04f4d25ddbef0ba01569fe1e117295fe54234c2c,04f4d25ddbef0ba01569fe1e117295fe54234c2c,"[split]  finagle: refactor clients and servers to be simpler, more logical.

Clients now comprise:

A Transporter[In, Out] is a function SocketAddress =>
Future[Transport[In, Out]]. That is, it connects to a socket address
and provides a typed transport to talk to that endpoint.

A Dispatcher[In, Out, Req, Rep] is a function Transport[In, Out] =>
Service[Req, Rep] that takes a transport and provides a service - a
bridge. This is what connects the ""stream"" oriented Transport to the
""RPC"" oriented Service.

A Binder is a function SocketAddress => ServiceFactory, which is
pretty self-explanatory. Given a SocketAddress, bind it to a
ServiceFactory. From types, it's obvious that the role of the binder
is to establish the host-specific stack. In order to construct a
binder, you need a Transporter and a dispatcher:

	object MuxBinder extends DefaultBinder[ChannelBuffer, ChannelBuffer, ChannelBuffer, ChannelBuffer](
	  new Netty3Transporter(mux.PipelineFactory),
	  new mux.ClientDispatcher(_)
	)

And finally, the Client provides a Client[Req, Rep] given a Binder
(and possibly other configuration paramters, like a pool
implementation):

	object MuxClient extends DefaultClient[ChannelBuffer, ChannelBuffer](MuxBinder, _ => new ReusingPool(_))

Servers are simpler, with just two components:

A Listener[In, Out]:

	trait Listener[In, Out] {
	  def listen(addr: SocketAddress, newConnection: Transport[In, Out] => Unit): ListeningServer
	}

which is given a binding address and a function to call for each new
connection (with a a typed transport). Netty3Listeners are one such
example.

And the Server[In, Out, Req, Rep] which takes a listener and a
dispatcher, providing a Server[Req, Rep]:

	object MuxServer extends DefaultServer[ChannelBuffer, ChannelBuffer, ChannelBuffer, ChannelBuffer](
	  MuxListener, new mux.ServerDispatcher(_, _))

Taken all together, Mux.scala is now just [1]

*

I did a bunch of other refactors in order to support these changes.
Maybe some went a little too far. I had to stop myself in order to
limit the size of this change; so watch this space for more.

- finagle threadpools are now daemonized. To preserve the old behavior
for {Client,Server}Builder *only*, something called ""ExitGuard"" is
introduced, which does what it is named.

- Service, ServiceFactory, and a bunch of other things are made
Closable. The details of Closable are still a bit in flux. In
particular, it makes sense for Closables also to be Awaitable.

[1] Mux.scala:

	object MuxBinder extends DefaultBinder[ChannelBuffer, ChannelBuffer, ChannelBuffer, ChannelBuffer](
	  new Netty3Transporter(mux.PipelineFactory),
	  new mux.ClientDispatcher(_)
	)
	object MuxClient extends DefaultClient[ChannelBuffer, ChannelBuffer](MuxBinder, _ => new ReusingPool(_))

	object MuxListener extends Netty3Listener[ChannelBuffer, ChannelBuffer](mux.PipelineFactory)
	object MuxServer extends DefaultServer[ChannelBuffer, ChannelBuffer, ChannelBuffer, ChannelBuffer](
	  MuxListener, new mux.ServerDispatcher(_, _))

	/**
	 * A client and server for the mux protocol described in [[com.twitter.finagle.mux]].
	 */
	object Mux extends Client[ChannelBuffer, ChannelBuffer] with Server[ChannelBuffer, ChannelBuffer] {
	  def newClient(cluster: Cluster[SocketAddress]): ServiceFactory[ChannelBuffer, ChannelBuffer] =
	    MuxClient.newClient(cluster)

	  def serve(addr: SocketAddress, service: ServiceFactory[ChannelBuffer, ChannelBuffer]): ListeningServer =
	    MuxServer.serve(addr, service)
	}

RB_ID=117888
TBR=true"
stuhood,2013-01-25 23:32:17,https://api.github.com/repos/twitter/finagle/git/commits/bfacc8c62f16cae0fdbbed6aca5dbba8974ed8c9,bfacc8c62f16cae0fdbbed6aca5dbba8974ed8c9,"[split] Birdcage assembly: Prefix jar names with the groupId  - Prefix jar names with the groupId to prevent, for example:  (com.twitter.X.)`thrift-0.2.jar`  from overwriting  (com.twitter.Y.)`thrift-0.1.jar`

RB_ID=118706
TBR=true"
mariusae,2013-01-25 19:02:04,https://api.github.com/repos/twitter/finagle/git/commits/641077a81d9bab41113b9d5292ca6117ba4dbcbd,641077a81d9bab41113b9d5292ca6117ba4dbcbd,"[split] finagle-http: fix flaky test

It was relying on timing numbers.

RB_ID=120264
TBR=true"
sprsquish,2013-01-24 21:18:04,https://api.github.com/repos/twitter/finagle/git/commits/1b918c2e99e718fb501d095ea18918214e34a378,1b918c2e99e718fb501d095ea18918214e34a378,"[split]  Create a NonShrinkingCluster

In order to smooth out cluster volatility, we never allow a cluster to
shrink. FailFast and FailureAccrual will manage nodes that have been
permanently removed from the cluster.

RB_ID=119578"
stevegury,2013-01-23 21:18:06,https://api.github.com/repos/twitter/finagle/git/commits/eca057b8226faad86fcfead313d10fba43e6f881,eca057b8226faad86fcfead313d10fba43e6f881,"[split]  Update Open Source build files (sbt) for util/ostrich/finagle

RB_ID=119396"
stevegury,2013-01-22 20:01:15,https://api.github.com/repos/twitter/finagle/git/commits/fc4d618712c50fe02c43c600f0a0bc03c9af2202,fc4d618712c50fe02c43c600f0a0bc03c9af2202,"[split]  Fix flakey tests (only visible when runned by pants)

RB_ID=118670"
mariusae,2013-01-22 20:03:21,https://api.github.com/repos/twitter/finagle/git/commits/733bfaaeff4b47b8c70c142ae2a927e1e38a48b5,733bfaaeff4b47b8c70c142ae2a927e1e38a48b5,"[split] util 6.0.6, finagle 6.0.5

RB_ID=119299
TBR=true"
stevegury,2013-01-18 17:23:34,https://api.github.com/repos/twitter/finagle/git/commits/9404b4bd88c9d44e0796a1eba3a2cc62cbb6978a,9404b4bd88c9d44e0796a1eba3a2cc62cbb6978a,"[split]  Add javac option in sbt to target JVM 1.6 (util, ostrich, finagle)

RB_ID=118759"
kevinoliver,2013-01-17 00:27:56,https://api.github.com/repos/twitter/finagle/git/commits/59d950fa85bdbf7c7a822c40300670e7bbf6ad33,59d950fa85bdbf7c7a822c40300670e7bbf6ad33,"[split]  Eliminate varargs overhead in StatsReceiver.time and timeFuture

RB_ID=117920"
mariusae,2013-01-15 01:25:55,https://api.github.com/repos/twitter/finagle/git/commits/350ef71fc132db8738bc63084a6e521cf669eab4,350ef71fc132db8738bc63084a6e521cf669eab4,"[split] LoadBalancerTest: only flip servers at `n'

RB_ID=117960"
mariusae,2013-01-09 19:37:29,https://api.github.com/repos/twitter/finagle/git/commits/950d6f830399adbb30051af5926f18dde412e70a,950d6f830399adbb30051af5926f18dde412e70a,"[split] scrooge-runtime: update versions

RB_ID=117312
TBR=true"
mariusae,2013-01-09 17:16:50,https://api.github.com/repos/twitter/finagle/git/commits/557c9e131bb4009e506199b462db59b12663e7ca,557c9e131bb4009e506199b462db59b12663e7ca,"[split] readme: update to reflect reality

RB_ID=117261
TBR=true"
mariusae,2013-01-09 04:15:10,https://api.github.com/repos/twitter/finagle/git/commits/b6216c15ea47783c4fd324b59da61ce86143e2b4,b6216c15ea47783c4fd324b59da61ce86143e2b4,"[split] finagle: make sonatype OSS releasable

RB_ID=116992
TBR=true"
rachitarora,2013-01-04 21:00:59,https://api.github.com/repos/twitter/finagle/git/commits/be06dfdbab5385de62016d441c539adf33798f2c,be06dfdbab5385de62016d441c539adf33798f2c,"[split] finagle redis btree sorted set commands

RB_ID=101700"
mccv,2012-12-22 05:38:23,https://api.github.com/repos/twitter/finagle/git/commits/d643db18ab715ec0171ab215a97b7886951792a9,d643db18ab715ec0171ab215a97b7886951792a9,"[split] finagle-native: fix up grab_and_path_tomcat_native

Signed-off-by: marius a. eriksen <marius@twitter.com>

RB_ID=115929"
mairbek,2012-12-26 18:59:48,https://api.github.com/repos/twitter/finagle/git/commits/08059f02a695158c1a3138c1c104ee6f2624f1ed,08059f02a695158c1a3138c1c104ee6f2624f1ed,"[split] Implemented redis HMSET. Fixes issue #96

Github-pull-request: https://github.com/twitter/finagle/pull/126
Signed-off-by: Rachit Arora <rarora@twitter.com>

RB_ID=115820"
xinxiang-twitter,2012-12-26 21:40:09,https://api.github.com/repos/twitter/finagle/git/commits/7f8850331fba26fd6d3c336bfac4e042bce325e5,7f8850331fba26fd6d3c336bfac4e042bce325e5,"[split]  explicityly pass in initial cache nodes when using static cache cluster

RB_ID=115620"
mariusae,2012-12-18 22:38:42,https://api.github.com/repos/twitter/finagle/git/commits/b8fe387221f3edbfe6f181a5d276af03aa4b3223,b8fe387221f3edbfe6f181a5d276af03aa4b3223,"[split] util 6.0.4, finagle 6.0.3

RB_ID=104430
TBR=true"
tquan,2012-12-14 17:46:30,https://api.github.com/repos/twitter/finagle/git/commits/3d4404be1f87ddab0171b0d2f3a984f27e3878e4,3d4404be1f87ddab0171b0d2f3a984f27e3878e4,"[split] Merging Grailbird into MASTER

In case it helps people better nagivate, a quick summary of the structure is: Grailbird pulls off Kestrel, then calls DataGatherer and Dispatcher with retries. These basically walk through the stages of the whole zip process. I kept Zip self-contained, so DataGatherer/Dispatcher just modify the object (so in the future, the error queue or some other mechanism that can resume jobs that are mostly done, instead of starting over). For zip file writing, I added formats for each file.

RB_ID=100474"
jowens,2012-12-14 00:28:48,https://api.github.com/repos/twitter/finagle/git/commits/2e9b7346718a9ffe56f1dd00d08105b1fe3c6da9,2e9b7346718a9ffe56f1dd00d08105b1fe3c6da9,"[split] Added config docs to Finagle readme

RB_ID=103218"
mariusae,2012-12-13 23:18:57,https://api.github.com/repos/twitter/finagle/git/commits/66c54adb4741477d79e1520618172298749b32b4,66c54adb4741477d79e1520618172298749b32b4,"[split] finagle-mux: multiplexing session layer, first draft.

Package mux implements a generic RPC multiplexer with a rich protocol.
Mux is itself encoding independent, so it is meant to use as the
transport for other RPC systems (eg. thrift). In OSI terminology, it
is a pure session layer.

In the below description, all numeric values are in big-endian byte
order. The schema [4]size[10]body defines the field size to be 4
bytes, followed by 10 of the field body. When symbols are used to
specify size, they refer to a previously defined field, eg.
''[4]size[size-4]body'' means 4 bytes of size specified by size-4
bytes of body, where size is interpreted as a 32-bit big-endian
integer. Constructions in parentheses followed by a ''*'' indicate
repeated values. If the ''*'' is followed by a name, the parenthesized
construct is repeated exactly this number of times. ''[s]foo'' is
shorthand for ''[4]size[size-4]foo'' where ''foo'' is a string. All
strings are Utf-8 encoded.

=Message framing=

Messages in mux are framed with a 4-byte big-endian size header,
followed by 1 byte describing the message type and a 3-byte tag; or,
diagrammatically: ''[4]size[1]type[3]tag''. The remainder of the frame
(rem=size-4 bytes) contains the body. Its format depends on the
message type, documented below.

The tag's MSB is reserved for future use, making its current namespace
23 bits. Tag 0 designates a ""marker"" T message that expects no reply.
The tag is otherwise arbitrary, and is chosen by the sender of the T
message.

Message-type numbering scheme is as follows. Message type 0 is
reserved for future use. T messages have bit 7 (the MSB) set to 1, R
messages set bit 7 to 0. Control messages set bit 6 to 1 and
application messages set it to 0. This distinction allows proxies to
be oblivious to parts of the protocol.

The protocol is full duplex: both the server and client may send T
messages initiating an exchange.

=Exchanges=

Messages are designated as ""T messages"" or ""R messages"", T and R being
stand-ins for transmit and receive. A T message initiates an exchange
and is assigned a free tag by the sender. A reply is either an R
message of the same type (Rx replies to Tx for some x), or an Rerr,
indicating a session layer error. R messages are matched to their T
messages by tag, and the reply concludes the exchange and frees the
tag for future use. Implementations should reuse small tag numbers.

=Messages=

''[4]size[1]Tinit[3]tag[2]version([s]key[s]value)*'' reinitializes a
session. Clients typically send this at the beginning of the session.
When doing so, the sender may issue no more T messages until the
corresponding ''[4]size[1]Rinit[2]version([s]key[s]value)'' has been
received. After the Rinit was received, all connection state has been
reset (outstanding tags are invalidated) and the stream is resumed
according to the newly negotiated parameters. Prior to the first
Tinit, the session operates at version 1. Rinit's version field is the
accepted version of the session (which may be lower than the one
requested by Tinit).

''[4]size[1]Treq[3]tag[1]nkeys([1]key[1]vsize[vsize]value)*nkeys[rem]body''
initiates the request described by its body. The request body is
delivered to the application. The request header contains a number of
key-value pairs that describe request metadata. Keys are:

 1. ''traceid'': a 24-byte value describing the full
[[http://research.google.com/archive/papers/dapper-2010-1.pdf Dapper]] trace id
assigned by the client. The value's format is ''[8]spanid[8]parentid[8]traceid''.

 1. ''traceflag'': a bitmask describing trace flags. Currently, the
only defined flag is bit 0 which enables ""debug mode"", asking the
server to force trace sampling.

''[4]size[1]Rreq[1]status[size-6]body'' replies to a request. Status
codes are as follows: 0=OK; the body contains the reply. 1=ERROR; the
body contains a string describing the error. 2=NACK; a negative
acknowledgment, the body contains a string describing the reason.

''[4]size[1]Rerr[n]why'' indicates that the corresponding T message
produced an error. Rerr is specifically for server errors: the server
failed to interpret or act on the message. The body carries a string
describing the error.

''[4]size[1]Tdrain[3]tag'' is a request sent by the server telling the
client to stop sending new requests. A client acknowledges this with
an Rdrain message.

''[4]size[1]Tping'' is sent by either party to check the liveness of
its peer; these should be responded to immediately with a Rping
message.

''[4]size[1]Tdiscarded[3]tag[size-8]why'' is a marker message
indicating that the Treq with the given tag has been discarded by the
client. This can be used as a hint for early termination. Why is a
string describing why the request was discarded. Note that it does
*not* free the server from the obligation of replying to the original
Treq.

RB_ID=99717"
mariusae,2012-12-12 17:31:04,https://api.github.com/repos/twitter/finagle/git/commits/ee0ce4b8b3a4b6959e20b2816dc3e7e1549504d2,ee0ce4b8b3a4b6959e20b2816dc3e7e1549504d2,"[split] util, ostrich, finagle: update sbt definitions

RB_ID=102824
TBR=true"
mariusae,2012-12-11 23:17:30,https://api.github.com/repos/twitter/finagle/git/commits/8dc2acc5bbb6dad3d2219da57c7bd0c074174785,8dc2acc5bbb6dad3d2219da57c7bd0c074174785,"[split] release: util 6.0.3, finagle 6.0.2

RB_ID=102617
TBR=true"
mariusae,2012-12-11 21:24:31,https://api.github.com/repos/twitter/finagle/git/commits/5cd39365b016d615d558b64a82a5f9e9ffedb473,5cd39365b016d615d558b64a82a5f9e9ffedb473,"[split] finagle-thrift: actually support multiple protocols

RB_ID=102156"
mariusae,2012-12-11 19:35:36,https://api.github.com/repos/twitter/finagle/git/commits/7cde919840b0314d3ba3acf0cf8217049a91b1d8,7cde919840b0314d3ba3acf0cf8217049a91b1d8,"[split] finagle-core: remove unintended reflection

RB_ID=102455"
mariusae,2012-12-07 03:57:57,https://api.github.com/repos/twitter/finagle/git/commits/1a017c6b517f7d293db509f3859aa283c2f43be4,1a017c6b517f7d293db509f3859aa283c2f43be4,"[split] SSLEngines are per connection.

RB_ID=101790
TBR=true"
mariusae,2012-12-07 00:55:10,https://api.github.com/repos/twitter/finagle/git/commits/74d90455152dc336df624a3757a87e29cbf0906e,74d90455152dc336df624a3757a87e29cbf0906e,"[split] finagle-core WatermarkPool: move acquire/release of services outside of synchronization

RB_ID=101677"
mariusae,2012-12-07 00:09:05,https://api.github.com/repos/twitter/finagle/git/commits/2b03e12dab9b7d48480e7d605d63c0f7d3eb2f2c,2b03e12dab9b7d48480e7d605d63c0f7d3eb2f2c,"[split] finagle-core: push SSLEngine all the way up, remove SslIdentifier

RB_ID=101661"
xinxiang-twitter,2012-12-06 19:25:10,https://api.github.com/repos/twitter/finagle/git/commits/4358d7e20eac20cd0c47b01fc290cfdbe5df853d,4358d7e20eac20cd0c47b01fc290cfdbe5df853d,"[split] Turn back on the finagle-memcached integration test

RB_ID=101418"
mariusae,2012-12-05 23:35:04,https://api.github.com/repos/twitter/finagle/git/commits/14e19bb2199b7736769d035a2eeaa2ad3ab468cf,14e19bb2199b7736769d035a2eeaa2ad3ab468cf,"[split] finagle-core: make RefcountedSpec deterministic

RB_ID=101318"
mariusae,2012-12-05 19:41:47,https://api.github.com/repos/twitter/finagle/git/commits/5c6d67f67a135d7226c043c5e77992298f337622,5c6d67f67a135d7226c043c5e77992298f337622,"[split] finagle: update sbt build definition

RB_ID=101199
TBR=true"
mariusae,2012-11-30 05:22:58,https://api.github.com/repos/twitter/finagle/git/commits/7af17b293166c206cbb954b894904b4317afe41c,7af17b293166c206cbb954b894904b4317afe41c,"[split] finagle-core: ReusingPool

RB_ID=100103"
mariusae,2012-11-29 22:31:23,https://api.github.com/repos/twitter/finagle/git/commits/49a4cb9689ca6c1b964028629ace6bf45b40812b,49a4cb9689ca6c1b964028629ace6bf45b40812b,"[split] finagle-core: don't include a SourceMonitor by default in clients

RB_ID=99941"
jowens,2012-11-29 21:02:43,https://api.github.com/repos/twitter/finagle/git/commits/ba22584862fa0e0b168a48b84e90ed748caf7b58,ba22584862fa0e0b168a48b84e90ed748caf7b58,"[split] Added JSSE SSL support for intermediate certificates.

JSSE SSL previously only looked at a certificate and a key, not	an
intermediate certificate. Now the stack takes a caCertificate
argument. If there are multiple intermediate certificates,
cat them together as a single file.

One test spins up a server, connects with ""openssl s_client"" called
from the chain, and ensures that the (test) certificate chain is
valid.

It includes a tool that generates a new certificate chain for this
testing.

Another change: the JSSE cache of SSL instances used to be keyed
by the cert only. Now it's keyed by cert+key+chain (so now if we
bring up a second server with the same key but a different chain,
it will instantiate a second server rather than use the cached one,
which is IMHO correct).

Design notes:
- Previously JSSE SSL config took 2 args; it didn't use all 5 that the
  true OpenSSL config did. Now we're using a 3rd arg, the intermediate
  certificate, and are not passing through the remaining two args. The
  cert chain is used preferentially to the cert if the cert chain is
  specified.
- The test for ""is the intermediate certificate used"" was ""null"",
  which seemed weird to me, but I went with it.
- No awesome abstraction for calling a command from a shell and
  getting back the stdout/stderr streams.

RB_ID=87718"
mariusae,2012-11-28 17:31:34,https://api.github.com/repos/twitter/finagle/git/commits/9b3ee814d5e7f4dada9bfc27587b4a14f75335ab,9b3ee814d5e7f4dada9bfc27587b4a14f75335ab,"[split] TimerSpec: make reliable

RB_ID=99497"
mariusae,2012-11-27 04:00:40,https://api.github.com/repos/twitter/finagle/git/commits/d04bfed3b77a73ed199b922bd7cb8212d950a815,d04bfed3b77a73ed199b922bd7cb8212d950a815,"[split] finagle 6.0.2-SNAPSHOT

RB_ID=99180
TBR=true"
mariusae,2012-11-27 00:45:02,https://api.github.com/repos/twitter/finagle/git/commits/9b81cc691858eef38ca853aeaed616a9a85700ac,9b81cc691858eef38ca853aeaed616a9a85700ac,"[split] util/finagle 6.0.1

  * Use java.util.ArrayDeque in place of mutable.Queue due to
  https://issues.scala-lang.org/browse/SI-6690

RB_ID=99116
TBR=true"
mariusae,2012-11-27 00:09:08,https://api.github.com/repos/twitter/finagle/git/commits/60e7b1365a7a740972dbfb33210cb9d10a64db01,60e7b1365a7a740972dbfb33210cb9d10a64db01,"[split] util/finagle: use java.util.ArrayDeque in place of mutable.Queue

Due to a space leak: https://issues.scala-lang.org/browse/SI-6690

RB_ID=98698"
mariusae,2012-11-26 23:59:26,https://api.github.com/repos/twitter/finagle/git/commits/c0153c9357fadc578e9716cff04d3f909640e661,c0153c9357fadc578e9716cff04d3f909640e661,"[split] util 6, ostrich 9, finagle 6

Util 6.0.0  2012-11-26

  * Removed future cancellation, which is now replaced with one-shot
  interrupts. These also carry a ``cause'' which will be used
  profitably in finagle.
  * A new, leaner Promise implemetnation
  * New implementations for Time and Duration with true sentinels
  * Promise, Try combinators no longer attempt to catch fatal
  exceptions

Finagle 6.0.0  2012/11/26

  * util 6.0.0 dependency
  * finagle-core: new client/server APIs; not yet exposed to users

RB_ID=99091
TBR=true"
mariusae,2012-11-26 21:02:57,https://api.github.com/repos/twitter/finagle/git/commits/d92fedf49df4775e3c1679f5f6c97e924dabe3ba,d92fedf49df4775e3c1679f5f6c97e924dabe3ba,"[split] core libraries v6

This comprises the following API breaking changes:

Util: A new, lean Promise implementation, with modified interrupt
semantics (RB_ID=94965); Duration and Time with true sentinels. Remove
dangerous implicit conversions (RB_ID=85968); Promise and Try
combinators don't catch fatal exceptions (RB_ID=91443)

Finagle: New client/server APIs and accompanying plumbing. These are
not yet exposed publicly. (RB_ID=81439 RB_ID=85541 RB_ID=90058)

RB_ID=98612"
mariusae,2012-11-21 18:36:05,https://api.github.com/repos/twitter/finagle/git/commits/80df58bb844424458ce5b44b2688b52cb27775cd,80df58bb844424458ce5b44b2688b52cb27775cd,"[split] finagle 5.3.23

5.3.23		2012/11/21

	* finagle-spdy: new codec
	* finagle-core: ServiceTimeoutException is now a
	WriteException (so they can be retried)
	* finagle-core: close channels owned by ChannelTransport
	before failing queues
	* finagle-core: share ChannelStatsHandler in clients and
	servers to avoid excessive stats-related weakrefs
	* finagle-core: don't leak Spooled updates in the HeapBalancer

RB_ID=98705
TBR=true"
mariusae,2012-11-21 01:48:23,https://api.github.com/repos/twitter/finagle/git/commits/1a7d5f9c34b4f3bda3560ce9a79d43f8081d74d9,1a7d5f9c34b4f3bda3560ce9a79d43f8081d74d9,"[split] bump ostrich to 8.2.11-SNAPSHOT

RB_ID=98637
TBR=true"
mariusae,2012-11-21 01:40:05,https://api.github.com/repos/twitter/finagle/git/commits/89efd758169da47cf5161df95c67e75bfa1b74b1,89efd758169da47cf5161df95c67e75bfa1b74b1,"[split] HeapBalancer: don't leak updates

RB_ID=98609"
mariusae,2012-11-21 01:38:49,https://api.github.com/repos/twitter/finagle/git/commits/89a865f02e07cea12f54083c192feacf723e147a,89a865f02e07cea12f54083c192feacf723e147a,"[split] util 5.3.14

RB_ID=98630
TBR=true"
mariusae,2012-11-16 18:30:14,https://api.github.com/repos/twitter/finagle/git/commits/dae69e964169fda93e44b7bd54debcec02b7affc,dae69e964169fda93e44b7bd54debcec02b7affc,"[split] finagle-example: use the latest version of common flags

RB_ID=97928
TBR=true"
stevegury,2012-11-15 19:36:59,https://api.github.com/repos/twitter/finagle/git/commits/17cc12c5b7bd5b2bdb250303fed7e09101beb14b,17cc12c5b7bd5b2bdb250303fed7e09101beb14b,"[split] Share ChannelStatsHandler and don't create a new 'connections' gauge for each new connection

RB_ID=97684"
mariusae,2012-11-15 19:17:40,https://api.github.com/repos/twitter/finagle/git/commits/5ce4542d6273f589c418e35aeace17b89b13e3a8,5ce4542d6273f589c418e35aeace17b89b13e3a8,"[split] Revert ""Refactor the 'connections' gauge into a standard gauge (not a cummulative gauge)""

RB_ID=97682
TBR=true"
stevegury,2012-11-14 05:55:45,https://api.github.com/repos/twitter/finagle/git/commits/18354a63a2394f6ed76b738b183f2ac97c3e6848,18354a63a2394f6ed76b738b183f2ac97c3e6848,"[split] Refactor the 'connections' gauge into a standard gauge (not a cummulative gauge)

RB_ID=97254"
evnm,2012-11-13 00:42:39,https://api.github.com/repos/twitter/finagle/git/commits/c1216331fdb8515aae8665361c501d326e408c8c,c1216331fdb8515aae8665361c501d326e408c8c,"[split] Finagle: Document Counter and Stat in StatsReceiver.scala.

RB_ID=96907"
mariusae,2012-11-12 18:35:22,https://api.github.com/repos/twitter/finagle/git/commits/734b81bba370b0b652dabfcd29b92c27f930b343,734b81bba370b0b652dabfcd29b92c27f930b343,"[split] ChannelTransports: close channel before failing queues

RB_ID=96805"
kevinoliver,2012-11-09 17:58:54,https://api.github.com/repos/twitter/finagle/git/commits/c8ff018ad66c800729081a06f5899b6c4ab52b2f,c8ff018ad66c800729081a06f5899b6c4ab52b2f,"[split] ServiceTimeoutException now a WriteException

http://jira.local.twitter.com/browse/CSL-313

* ServiceTimeoutException will now default to retryable
* WriteExceptions are now marker traits

RB_ID=95261"
mariusae,2012-11-09 01:14:25,https://api.github.com/repos/twitter/finagle/git/commits/89d0b61a95337ba4720b0d62ff8515fa392212f3,89d0b61a95337ba4720b0d62ff8515fa392212f3,"[split] finagle: 5.3.22

5.3.22		2012/11/08

	* finagle-redis: String commands
	* finagle-redis: collection.Set => collection.immutable.Set per #116
	* finagle-thrift: SeqIdFilter: Don't modify thrift requests.
	* BackupRequestFilter: experimental service filter to perform backup requests

RB_ID=96227"
mariusae,2012-11-08 00:00:54,https://api.github.com/repos/twitter/finagle/git/commits/779a5dee8e6141a69aebf52427d21df0cd7b6cc7,779a5dee8e6141a69aebf52427d21df0cd7b6cc7,"[split] SeqIdFilter: Don't modify thrift requests.

We cannot assume anything about the *caller*, and hence the request.
For example, it may be reused for retries.

RB_ID=96088"
mosesn,2012-11-07 19:06:49,https://api.github.com/repos/twitter/finagle/git/commits/1ece901a5c745af284b581ba9087a629718c37e6,1ece901a5c745af284b581ba9087a629718c37e6,"[split] collection.Set => collection.immutable.Set per #116 immutable.Set is the default Set, so if it's described as collection.Set, you can't just say the return value of something that returns a client.sMembers is a Future[Set[ChannelBuffer]], it's a Future[scala.collection.Set[ChannelBuffer]].  There is also no reason to create ambiguity as to whether it's immutable or not, because it makes much more sense for the api to return an immutable version.

changed all references of collection.Set to collection.immutable.Set.  Also changed the imported name from CollectionSet to ImmutableSet.  I cannot use the native ""Set"" name for the class because it is obscured by the Set Command class in finagle-redis.
Github-pull-request: https://github.com/twitter/finagle/pull/118

Signed-off-by: Anirudh Srinivas <anirudhs@twitter.com>

RB_ID=95921"
mariusae,2012-10-30 18:46:42,https://api.github.com/repos/twitter/finagle/git/commits/526e508579309711a9c56007eff2a783826d331c,526e508579309711a9c56007eff2a783826d331c,"[split] BackupRequestFilter: experimental service filter to perform backup requests

RB_ID=94080"
solar,2012-10-26 22:24:03,https://api.github.com/repos/twitter/finagle/git/commits/a7f98231b16341cfd550cb1e3784375a84b61c16,a7f98231b16341cfd550cb1e3784375a84b61c16,"[split] finagle-redis: String commands

implement BITCOUNT, BITOP, PSETEX
implement all string commands to StringCommands

Github-pull-request: https://github.com/twitter/finagle/pull/115

Signed-off-by: Anirudh Srinivas <anirudhs@twitter.com>

RB_ID=93954"
zakattacktwitter,2012-10-29 17:34:26,https://api.github.com/repos/twitter/finagle/git/commits/c51db5c368c752bcdf8afeeb84586f191c97f25f,c51db5c368c752bcdf8afeeb84586f191c97f25f,"[split]  First checkin of Fastly CDN implementation.  - First checkin of Fastly CDN implementation.

RB_ID=93804"
mariusae,2012-10-26 21:28:53,https://api.github.com/repos/twitter/finagle/git/commits/76d194c4fe9384da9468f28aadfc6db8f98322f9,76d194c4fe9384da9468f28aadfc6db8f98322f9,"[split] finagle: 5.3.20

	* finagle-redis: fix zrevrangebyscore (https://github.com/twitter/finagle/issues/114)
	* finagle-memcached: fix space leak when using clustering
	* finagle-core: special case 1-hosted (static) clients to bypass loadbalancer
	* finagle-core: Introduce an experimental buffer-based pool

RB_ID=93909"
mariusae,2012-10-25 00:41:43,https://api.github.com/repos/twitter/finagle/git/commits/9b5adcb45589c5f2acc0fb81af47faed7d37aa0a,9b5adcb45589c5f2acc0fb81af47faed7d37aa0a,"[split] finagle-core: Introduce an experimental buffer-based pool.

The underlying buffer is simple, lock free, and very fast, reducing
contention drastically in high-rate clients.

RB_ID=92635"
jowens,2012-10-24 22:07:35,https://api.github.com/repos/twitter/finagle/git/commits/7b80a133d49a2973b37e00912af6d2637f786558,7b80a133d49a2973b37e00912af6d2637f786558,"[split] more sensible check for name in ChannelStatsHandler's exceptionCaught

RB_ID=91162"
mariusae,2012-10-24 21:53:12,https://api.github.com/repos/twitter/finagle/git/commits/ffcaa5f869ad5dda9558ba2715c294137a807bb8,ffcaa5f869ad5dda9558ba2715c294137a807bb8,"[split] finagle-core: special case 1-hosted (static) clients to bypass loadbalancer

RB_ID=93333"
xinxiang-twitter,2012-10-21 21:49:36,https://api.github.com/repos/twitter/finagle/git/commits/2ac006e3d6009dc910ee0491732c298941a9081d,2ac006e3d6009dc910ee0491732c298941a9081d,"[split] Fix a memory leak and add a Java wrapper for CachePoolCluster

RB_ID=92520"
stevegury,2012-10-17 18:49:16,https://api.github.com/repos/twitter/finagle/git/commits/5fbe48eb300600f15549f90274f33570d9fcde9f,5fbe48eb300600f15549f90274f33570d9fcde9f,"[split] bump finagle to 5.3.20-SNAPSHOT

RB_ID=91965"
stevegury,2012-10-17 00:02:40,https://api.github.com/repos/twitter/finagle/git/commits/fa124a6ba9bb2d8ba8f1cb401db84abfd2d60f99,fa124a6ba9bb2d8ba8f1cb401db84abfd2d60f99,"[split] release 8.2.9 of ostrich + bump to 8.2.10-SNAPSHOT

RB_ID=91877
TBR=true"
stevegury,2012-10-16 23:54:23,https://api.github.com/repos/twitter/finagle/git/commits/34fe6efb97e6d16f30f95b71af9913fc00c1f45f,34fe6efb97e6d16f30f95b71af9913fc00c1f45f,"[split] release 5.3.13 of util + bump util to 5.3.14-SNAPSHOT

RB_ID=91874
TBR=true"
jowens,2012-10-12 18:19:44,https://api.github.com/repos/twitter/finagle/git/commits/265ce566beb4065c0c8bca939bb424786cb6cc00,265ce566beb4065c0c8bca939bb424786cb6cc00,"[split] changed stats name in ChannelStatsHandler from exception msg to getClass.getName

RB_ID=91098"
stevegury,2012-10-10 23:17:50,https://api.github.com/repos/twitter/finagle/git/commits/b4a48b7591bcc97ac4fdb5c5fc6d683f93f01eb0,b4a48b7591bcc97ac4fdb5c5fc6d683f93f01eb0,"[split] Add counters to track disconnections due to Idle activity (both read/write)

The new counters will be reported like this:
client/disconnects/READER_IDLE 1
client/disconnects/WRITER_IDLE 3

RB_ID=90390"
stevegury,2012-10-10 23:04:56,https://api.github.com/repos/twitter/finagle/git/commits/31e37bd22d64dd7756d35d653b8c80d431776ec8,31e37bd22d64dd7756d35d653b8c80d431776ec8,"[split] Add ""adds""/""removes"" counters in HeapBalancer to track modifications

RB_ID=90388"
mariusae,2012-10-10 16:20:43,https://api.github.com/repos/twitter/finagle/git/commits/f73137643fc9f4bf5e5c88031c8ed857f3382551,f73137643fc9f4bf5e5c88031c8ed857f3382551,"[split] finagle ChangeLog: update

RB_ID=90082"
tquan,2012-10-09 20:16:56,https://api.github.com/repos/twitter/finagle/git/commits/9fe3573f52332b4c19d968d9407e75d3484a1425,9fe3573f52332b4c19d968d9407e75d3484a1425,"[split] upgrading slf4j dependent projects All projects depending on slf4j-**** -> 1.6.1.

It was originally just ones that use slf4j-api/simple and maven-finagle-thrift-plugin, but with provided scopes and including slf4j-nop/jdk14, it's pretty much every project in the birdcage that has a slf4j dependency

RB_ID=88029"
jowens,2012-10-09 17:35:04,https://api.github.com/repos/twitter/finagle/git/commits/e438cdb36342e26d39558393600679bcfa377cb0,e438cdb36342e26d39558393600679bcfa377cb0,"[split] Added name to HeapBalancer init (via exception) if HB size is 0

An empty HeapBalancer, when apply()ed, was returning a
NoBrokersAvailableException with no info (so it was difficult for a
user to tell which HeapBalancer failed).

Now HeapBalancer takes an exception arg during initialization. The
exception should be initialized with a string indicating the name of
the service, and when the exception is thrown for a HeapBalancer
that has no size, it shows the inited name. This is the same strategy
as TimeoutFilter.

RB_ID=88806"
mariusae,2012-10-08 19:06:44,https://api.github.com/repos/twitter/finagle/git/commits/27a04afcdb372307b8035c8118312b09e41415d1,27a04afcdb372307b8035c8118312b09e41415d1,"[split] ChannelService: add handletime stat for client replies.

RB_ID=90008"
mariusae,2012-10-04 21:09:43,https://api.github.com/repos/twitter/finagle/git/commits/6dbe1e947c0f646d1cdb88f42143c1e6cc615fb3,6dbe1e947c0f646d1cdb88f42143c1e6cc615fb3,"[split] Don't log dropped events: they are actually quite numerous.

RB_ID=89713"
mariusae,2012-10-04 21:08:37,https://api.github.com/repos/twitter/finagle/git/commits/6dae7ab6ebd8cbc6de516d7cc3bb2c2ca21f7b71,6dae7ab6ebd8cbc6de516d7cc3bb2c2ca21f7b71,"[split] Disable failFast for kestrel.

This is a temporary hack to get rid of a bad interaction between
kestrel and failfast. CSL-288 documents the need for a better solution
for this.

RB_ID=89717"
xinxiang-twitter,2012-10-04 18:47:32,https://api.github.com/repos/twitter/finagle/git/commits/e93edeb5845c063ade401e4ca4ac1a3fd8b21c31,e93edeb5845c063ade401e4ca4ac1a3fd8b21c31,"[split] cluster support within finagle-memcached (phase 2) - start listening to the cluster updates - pass cluster update event to KetamaClient so that to trigger a redistribute of the key-ring - also accept CachePoolCluster

RB_ID=88450"
evnm,2012-10-02 17:38:37,https://api.github.com/repos/twitter/finagle/git/commits/4273282e4f781a3b1ec730d735c4ad1b8dccb39b,4273282e4f781a3b1ec730d735c4ad1b8dccb39b,"[split] Finagle: Rm usage of deprecated Predef.error.

RB_ID=89284"
stevegury,2012-10-02 00:17:40,https://api.github.com/repos/twitter/finagle/git/commits/77cc8a2f52a94b37f303fb4aa6126eee8c05ed97,77cc8a2f52a94b37f303fb4aa6126eee8c05ed97,"[split] bump ostrich to 8.2.9-SNAPSHOT

RB_ID=89133"
mosesn,2012-09-27 21:20:23,https://api.github.com/repos/twitter/finagle/git/commits/7e8a93337892ccfbb8866b2efa446c4a1ca55e52,7e8a93337892ccfbb8866b2efa446c4a1ca55e52,"[split] added new commands list commands: LLEN LINDEX LINSERT LPOP LPUSH LREM LSET LRANGE RPOP RPUSH LTRIM

Misc:
TTL
EXPIRE

Set commands:
SADD
SREM
SMEMBERS
SCARD
SISMEMBER
SPOP

Sorted Set Commands:
ZINCRBY
ZRANGE
ZRANK
ZREMRANGEBYSCORE
ZREMRANGEBYRANK
ZREVRANK
Github-pull-request: https://github.com/twitter/finagle/pull/106

Signed-off-by: Anirudh Srinivas <anirudhs@twitter.com>

RB_ID=88832"
johnynek,2012-09-24 18:54:55,https://api.github.com/repos/twitter/finagle/git/commits/af12fa922b02b72fd8b7a487f8acac84198edb30,af12fa922b02b72fd8b7a487f8acac84198edb30,"[split] Oscar Boykin implemented this for Summingbird, but it seems like it would be more generally useful here.

RB_ID=88770
TBR=true"
earldouglas,2012-09-15 20:29:49,https://api.github.com/repos/twitter/finagle/git/commits/8f8c163dacbc52da8b0d81628f509a2076910f3f,8f8c163dacbc52da8b0d81628f509a2076910f3f,"[split] fix compile errors in README.md examples * add .name(""myService"") to use of ServerBuilder * replace .codec(Http) with .codec(Http.get()) in use of ServerBuilder and ClientBuilder Github-pull-request: https://github.com/twitter/finagle/pull/109

Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=86675"
xinxiang-twitter,2012-09-19 00:58:34,https://api.github.com/repos/twitter/finagle/git/commits/60c26ee20c788feeee003cd05ec1a160681827f4,60c26ee20c788feeee003cd05ec1a160681827f4,"[split] Cache specific cluster implentation Adding a cache specific cluster implementation which does: - monitoring underlying cache pool source changes - ready() would only return when all expected cache servers have been fetched from the underlying cache pool source - snap() will always return complete set of cache servers even during pool migration/expansion - for ZK based cache pool, use serverset parent node data as cache pool config data

RB_ID=83259"
jdanbrown,2012-09-15 20:33:44,https://api.github.com/repos/twitter/finagle/git/commits/b29ed9ef9e566f1c89f2feed8b529da1d8d3e645,b29ed9ef9e566f1c89f2feed8b529da1d8d3e645,"[split] Fix arg type in RetryingFilter.apply

`RetryingFilter.apply` should let its `shouldRetry` argument take a
`Try[Nothing]` instead of a `Try[Rep]`, since it's immediately turned
into a `RetryPolicy[Try[Nothing]]`.

Github-pull-request: https://github.com/twitter/finagle/pull/108
Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=86676"
mariusae,2012-09-12 23:01:08,https://api.github.com/repos/twitter/finagle/git/commits/0653134f81f3d5ae1e64c22953ad560f2c637e86,0653134f81f3d5ae1e64c22953ad560f2c637e86,"[split] ClientBuilder: move fail fast to before the pool

1. we want it to account for only true connection failures
2. we don't want it mask errors from the failure accrual mechanism

Yes, it's a bit of a crutch.

RB_ID=84395"
mariusae,2012-09-11 21:43:24,https://api.github.com/repos/twitter/finagle/git/commits/7d9779bd32ecdccf732305c1df959ff3db449926,7d9779bd32ecdccf732305c1df959ff3db449926,"[split] finagle pools: maintain underlying availability

With the recent FailFast change (not yet merged to master), pools need
to respect the underlying factory's availability judgement.

RB_ID=85768"
evnm,2012-09-11 17:59:58,https://api.github.com/repos/twitter/finagle/git/commits/619807e79a3f75a6699542a7fc3e50d9121bc56b,619807e79a3f75a6699542a7fc3e50d9121bc56b,"[split] Finagle: Add second optional shouldRetry arg to RetryPolicy.tries.

RB_ID=85053"
stevegury,2012-09-11 17:42:44,https://api.github.com/repos/twitter/finagle/git/commits/cf1238b1e48580d46c3966c4839039a7d932e519,cf1238b1e48580d46c3966c4839039a7d932e519,"[split] FrontEndServerStress refactor/cleaning: Now generate a runnable binary

RB_ID=85648"
stevegury,2012-09-10 17:34:04,https://api.github.com/repos/twitter/finagle/git/commits/e140ef38c2bb81f1801afd5dc85ff50d63cc871d,e140ef38c2bb81f1801afd5dc85ff50d63cc871d,"[split] Fix+deprecate typo: safeBuidlPut -> safeBuildPut

Author: Dan Brown <jdanbrown@gmail.com>
Date:   Thu Sep 6 14:54:29 2012 -0700

     Fix+deprecate typo: safeBuidlPut -> safeBuildPut

     Github-pull-request: https://github.com/twitter/finagle/pull/107
     Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=85010"
stevegury,2012-09-07 23:09:58,https://api.github.com/repos/twitter/finagle/git/commits/1f6c0cc20732478b1c99f38adcff65f56fc0856a,1f6c0cc20732478b1c99f38adcff65f56fc0856a,"[split] Fix version of util to the next ""-snapshot""

RB_ID=85238"
gcampbell,2012-09-07 22:26:39,https://api.github.com/repos/twitter/finagle/git/commits/6212875b3401cc1d9986ecec340e4eff5703d925,6212875b3401cc1d9986ecec340e4eff5703d925,"[split] Revert ""trying to get rid of some scala version conflicts""

This commit broke tests in macaw-search (and macaw-swift) due to weird jerkson/
jackson diamond dependencies. We'll probably want to upgrade the cage fully to
jackson 2.0.2 along with this jerkson upgrade. For more background, see
discussion between Ryan King, James Waldrop, Sam Pullara, and me in the Macaw
campfire logs for September 6.

RB_ID=85076"
stevegury,2012-09-07 20:51:14,https://api.github.com/repos/twitter/finagle/git/commits/745d8b5f7a70a9d4c2410ab13b1faa9f2b982334,745d8b5f7a70a9d4c2410ab13b1faa9f2b982334,"[split] Release of finagle 5.3.9

RB_ID=85225
TBR=true"
stevegury,2012-09-07 20:22:22,https://api.github.com/repos/twitter/finagle/git/commits/15be7e6543b1ba79b5bf43eea546b116e4baaf6b,15be7e6543b1ba79b5bf43eea546b116e4baaf6b,"[split] Release of util 5.3.10

RB_ID=85218
TBR=true"
jdanbrown,2012-08-29 18:42:20,https://api.github.com/repos/twitter/finagle/git/commits/dabd9a513b7073dcea5c5a249726ef453c8e925d,dabd9a513b7073dcea5c5a249726ef453c8e925d,"[split] Fix typo in README

Github-pull-request: https://github.com/twitter/finagle/pull/104
Signed-off-by: Steve Gury <stevegury@twitter.com>

RB_ID=83620"
stevegury,2012-08-28 20:45:31,https://api.github.com/repos/twitter/finagle/git/commits/98d3db70745a166bb3e5f958a3db02dc7c4a254e,98d3db70745a166bb3e5f958a3db02dc7c4a254e,"[split] Update the finagle/util Changelogs + catch up sbt

RB_ID=83320"
mariusae,2012-08-28 17:10:46,https://api.github.com/repos/twitter/finagle/git/commits/dc2b7da706f7e078f74bdec807f1ebbb98eff22c,dc2b7da706f7e078f74bdec807f1ebbb98eff22c,"[split] SSL: fix connection failure propagation in futures

RB_ID=83278"
mariusae,2012-08-27 18:26:27,https://api.github.com/repos/twitter/finagle/git/commits/055376243dd2701bb29f58d1e343be324c0bb479,055376243dd2701bb29f58d1e343be324c0bb479,"[split] finagle-thrift: validate connections based on TApplicationException

Another real gem in Apache Thrift: it seems that servers can be left
in an undefined state if they emit certain TApplicationException — not
exactly what that exception class sounds like, is it? — WITHOUT
actually closing that connection. So, to account for egregious flaw,
we'll need to compensate in our client.

Also, this brings back test IDLs from f557572~1, since it's difficult
to make sense of the tests without them (I don't know why that change
removed them).

RB_ID=82884"
isnotinvain,2012-08-24 23:23:08,https://api.github.com/repos/twitter/finagle/git/commits/956d6c343d93e8c58b443ac79a324ae14b028fe9,956d6c343d93e8c58b443ac79a324ae14b028fe9,"[split] Add an example maven pom to README.md

RB_ID=82647"
stevegury,2012-08-24 21:01:35,https://api.github.com/repos/twitter/finagle/git/commits/c983c1a7b66761b3838a46f0057f99adacdb29b5,c983c1a7b66761b3838a46f0057f99adacdb29b5,"[split] finagle bump-patch

RB_ID=82828"
mariusae,2012-08-24 20:49:22,https://api.github.com/repos/twitter/finagle/git/commits/00644e204647e15aaaa81560b1392b6344b5517f,00644e204647e15aaaa81560b1392b6344b5517f,"[split] finagle 5.3.7

RB_ID=82572"
stevegury,2012-08-24 18:33:43,https://api.github.com/repos/twitter/finagle/git/commits/bb54f3a929e60c9bce2e136dea41855255c6cf90,bb54f3a929e60c9bce2e136dea41855255c6cf90,"[split] Upgrade Netty to 3.5.5.Final

RB_ID=82367"
isnotinvain,2012-08-23 23:59:18,https://api.github.com/repos/twitter/finagle/git/commits/348e8a85a92af09a2649bc518f57fafe67c3ec98,348e8a85a92af09a2649bc518f57fafe67c3ec98,"[split] Fix mistake in finalge README that claimed Future objects have a getContentAsync method

RB_ID=82622"
mariusae,2012-08-23 22:05:22,https://api.github.com/repos/twitter/finagle/git/commits/a8d47ef53837df28aae08f66cffec90b2e349bf0,a8d47ef53837df28aae08f66cffec90b2e349bf0,"[split] CacheSpec: fix escaping time controller

RB_ID=79767"
jdanbrown,2012-08-10 21:50:38,https://api.github.com/repos/twitter/finagle/git/commits/be200891c3b22aa31ec825a4945d77b1158c7455,be200891c3b22aa31ec825a4945d77b1158c7455,"[split] Fix typos in README

Github-pull-request: https://github.com/twitter/finagle/pull/100
Signed-off-by: marius a. eriksen <marius@twitter.com>

RB_ID=80078"
mariusae,2012-08-23 21:42:07,https://api.github.com/repos/twitter/finagle/git/commits/6ff570321c2e5bf5c8f5e3d8d0ee6f8477d1a389,6ff570321c2e5bf5c8f5e3d8d0ee6f8477d1a389,"[split] ThriftChannelBufferDecoder: fix for composite buffers

     This was pretty much specialized to the frame decoder. When used with
     the buffered codec, which may result in composite buffers, it threw an
     exception.

RB_ID=82487"
mariusae,2012-08-21 16:24:12,https://api.github.com/repos/twitter/finagle/git/commits/aa7a3bd62fb268fa20202a97db4aec54f28118f6,aa7a3bd62fb268fa20202a97db4aec54f28118f6,"[split] release util 5.3.7

RB_ID=81741"
edma2,2012-08-17 17:50:54,https://api.github.com/repos/twitter/finagle/git/commits/b299805ffb63831aab7b6b277eb1a5bc82352232,b299805ffb63831aab7b6b277eb1a5bc82352232,"[split] Fix file extension bug in finagle-http  - Match file extension after the last slash.

RB_ID=81274"
mariusae,2012-08-17 17:31:49,https://api.github.com/repos/twitter/finagle/git/commits/b37e1d01fb664a9efb912ec70c372595f94a7a40,b37e1d01fb664a9efb912ec70c372595f94a7a40,"[split] finagle 5.3.6

RB_ID=81349"
mariusae,2012-08-15 18:16:44,https://api.github.com/repos/twitter/finagle/git/commits/a298ea53fe9eb05577ac18ff91a187d5fdf56165,a298ea53fe9eb05577ac18ff91a187d5fdf56165,"[split] kill finagle-memcached-hadoop

RB_ID=80632"
kevinoliver,2012-08-15 17:14:12,https://api.github.com/repos/twitter/finagle/git/commits/89a1b3fb464ae0fa0241671986133259e82c557a,89a1b3fb464ae0fa0241671986133259e82c557a,"[split] in-process memcache server now supports expiry

http://jira.local.twitter.com/browse/CSL-238

RB_ID=80503"
xinxiang-twitter,2012-08-14 23:29:47,https://api.github.com/repos/twitter/finagle/git/commits/67d107b5fb2c9cc43b67374166b81d4688c14adc,67d107b5fb2c9cc43b67374166b81d4688c14adc,"[split] Adding key length validation and refactor validation logic.

RB_ID=79159"
stevegury,2012-08-13 16:50:14,https://api.github.com/repos/twitter/finagle/git/commits/2cd71d48844ab97d72dcf5b4f05b541c9b6b0d0c,2cd71d48844ab97d72dcf5b4f05b541c9b6b0d0c,"[split] French spelling: ""à la"" and not ""a la"" ;-)

RB_ID=80128"
mariusae,2012-08-10 20:16:54,https://api.github.com/repos/twitter/finagle/git/commits/33c5a1a504b4093c342157eb448ab07c5265f9bf,33c5a1a504b4093c342157eb448ab07c5265f9bf,"[split] finagle 5.3.5

RB_ID=80025"
jowens,2012-08-09 17:11:00,https://api.github.com/repos/twitter/finagle/git/commits/c92c529170e0399bad6de8f41165fac424b3d73e,c92c529170e0399bad6de8f41165fac424b3d73e,"[split] fencepost error - needs to expire when time == TTL not time past TTL

Was not expiring when timer hit the TTL, only after the TTL. Fix was
to change expiration to <= not <. Not quite sure why this was not
being caught in the CacheSpec test (but instead in the CachingPoolSpec
test).

RB_ID=79714"
stevegury,2012-08-09 16:19:14,https://api.github.com/repos/twitter/finagle/git/commits/055a8884555f8782855705afe7def2f96357662c,055a8884555f8782855705afe7def2f96357662c,"[split] ZookeeperServerSetCluster.join now return an EndpointStatus + Named/Daemonized init thread

RB_ID=76806"
jowens,2012-08-08 21:52:05,https://api.github.com/repos/twitter/finagle/git/commits/78f04b4ff150900bfc09367ad670ffeb89eb1345,78f04b4ff150900bfc09367ad670ffeb89eb1345,"[split] Changed Cache's internal implementation from queue to deque (to allow LIFO behavior)

Previous Cache implementation was a queue, which had FIFO behavior
with its entries. If we instead have LIFO behavior and the typical
working set of items is smaller than the size of the cache, then we
will likely use fewer cached items overall (O(working set) rather than
O(size of cache)).

Internally, the change was from a queue (FIFO behavior) to a deque
(LIFO behavior if configured as a stack, but with the ability to pull
items from the bottom of the stack as well, which was necessary when
expiring items).

Also added a test that checked that if the TTL has not been exceeded,
no items will be expired, and changed existing tests to LIFO
behavior.

RB_ID=78469"
mariusae,2012-08-02 23:23:14,https://api.github.com/repos/twitter/finagle/git/commits/517f308a5efd3a9f216c044b1dd237e7bd170648,517f308a5efd3a9f216c044b1dd237e7bd170648,"[split] finagle: kill obsolete benchmark

RB_ID=78531"
mariusae,2012-08-02 17:19:10,https://api.github.com/repos/twitter/finagle/git/commits/048d153969ffb9b4e5fb8b067de30772e00330aa,048d153969ffb9b4e5fb8b067de30772e00330aa,"[split] patch public release of OSS libraries; catch up sbt

RB_ID=78352
TBR=true"
mariusae,2012-08-01 18:56:43,https://api.github.com/repos/twitter/finagle/git/commits/06b59b0857208c4867fa37504f408aa73b19f3bb,06b59b0857208c4867fa37504f408aa73b19f3bb,"[split] Timer: address review comments, fix tiny race

RB_ID=78042"
mariusae,2012-08-01 00:06:31,https://api.github.com/repos/twitter/finagle/git/commits/954be79e8be3449bb12908b0fac5d80fcc73b52c,954be79e8be3449bb12908b0fac5d80fcc73b52c,"[split] finage 5.3.3

RB_ID=78009
TBR=true"
mariusae,2012-07-31 23:42:33,https://api.github.com/repos/twitter/finagle/git/commits/e3b60f8d6d5e88f13975dd415df50c4371a9e2f8,e3b60f8d6d5e88f13975dd415df50c4371a9e2f8,"[split] Timer: dispose timeouts on cancellation

RB_ID=78003"
mariusae,2012-07-31 23:14:09,https://api.github.com/repos/twitter/finagle/git/commits/2948bf8d04d947eb50cc8db5419e509965f3e665,2948bf8d04d947eb50cc8db5419e509965f3e665,"[split] util, ostrich, finagle releases

RB_ID=77937
TBR=true"
mariusae,2012-07-31 21:29:16,https://api.github.com/repos/twitter/finagle/git/commits/5667c8b3ceb17f953e370a7496275aefb8e18c26,5667c8b3ceb17f953e370a7496275aefb8e18c26,"[split] The timers were needlessly convoluted. I think this fixes most of it. Most of the simplification comes from: avoiding the double indirection of netty/util timers, and conflating a few things into a ""managed timer"".

In addition, this is better at disallowing API abuse, and will also
reveal the source of such abuse (in contrast to the old code-- we
could only know its presence)

RB_ID=77822"
stevegury,2012-07-31 17:15:55,https://api.github.com/repos/twitter/finagle/git/commits/42a7dae9e5b522ed70b34f47b4326f5c46b2f187,42a7dae9e5b522ed70b34f47b4326f5c46b2f187,"[split] Fix birdcage snapshot

RB_ID=77386"
stevegury,2012-07-27 17:24:31,https://api.github.com/repos/twitter/finagle/git/commits/4751917f354c1fe41a4689fab8cb44e0056a69d3,4751917f354c1fe41a4689fab8cb44e0056a69d3,"[split] Revert ""Fix birdcage *-SNAPSHOT version""

RB_ID=77346
TBR=true"
stevegury,2012-07-26 16:48:43,https://api.github.com/repos/twitter/finagle/git/commits/e6b09ee2257a3fc9fcd8edfd6b4ac85be5cc42ef,e6b09ee2257a3fc9fcd8edfd6b4ac85be5cc42ef,"[split] Fix birdcage *-SNAPSHOT version

RB_ID=76783
TBR=true"
stevegury,2012-07-20 23:31:17,https://api.github.com/repos/twitter/finagle/git/commits/dabf96e68d5dc72b312cfbd88db201f94184001a,dabf96e68d5dc72b312cfbd88db201f94184001a,"[split] release 5.3.1 of finagle

RB_ID=76178
TBR=true"
stevegury,2012-07-20 23:14:27,https://api.github.com/repos/twitter/finagle/git/commits/02dacc546b41ed6363c9da3f4fcebb5215abe262,02dacc546b41ed6363c9da3f4fcebb5215abe262,"[split] release 8.2.1 of ostrich

RB_ID=76173
TBR=true"
stevegury,2012-07-20 23:09:28,https://api.github.com/repos/twitter/finagle/git/commits/eebb1455d52c627f10322c091aa764472fd23631,eebb1455d52c627f10322c091aa764472fd23631,"[split] release 5.3.1 of util

RB_ID=76168
TBR=true"
xinxiang-twitter,2012-07-20 18:23:11,https://api.github.com/repos/twitter/finagle/git/commits/283780252e64479ed2374df8c4067f77045316c3,283780252e64479ed2374df8c4067f77045316c3,"[split] Use authenticated zookeeper client suggested for new SD cluster migration

RB_ID=75614"
mariusae,2012-07-20 17:08:40,https://api.github.com/repos/twitter/finagle/git/commits/81790e83cc953f3db3c5acdcab0987c9544716bc,81790e83cc953f3db3c5acdcab0987c9544716bc,"[split] seqid filter: improved tests

just some additional tests while i was reading this code.

RB_ID=75846"
stevegury,2012-07-12 21:47:43,https://api.github.com/repos/twitter/finagle/git/commits/b35a2d3af741eb928cb7fd21876759e313196273,b35a2d3af741eb928cb7fd21876759e313196273,"[split] Add ""codec_connection_preparation_latency_ms"" stats. This stats must be almost equal to zero for most cases, but it may be bigger for codec like Thrift that use protocol negotiation.

RB_ID=74126"
mariusae,2012-06-22 06:50:12,https://api.github.com/repos/twitter/finagle/git/commits/aef56b7311cb3337d1dd43bcf97f71dcf45e5d56,aef56b7311cb3337d1dd43bcf97f71dcf45e5d56,"[split] Dispatcher: all write exceptions are wrapped with WriteException

RB_ID=72277"
mariusae,2012-06-21 18:53:10,https://api.github.com/repos/twitter/finagle/git/commits/7124d868b8ea6ab78fb1b096791f7b9b189d9d11,7124d868b8ea6ab78fb1b096791f7b9b189d9d11,"[split] finagle: document versioning practices.

RB_ID=72096"
evnm,2012-06-20 16:55:15,https://api.github.com/repos/twitter/finagle/git/commits/2df9b0b213fef0358ff870d414b7a3bab5d9fee1,2df9b0b213fef0358ff870d414b7a3bab5d9fee1,"[split] Finagle: Make blockingOperation in FuturePool example lazy.

Using a val in the example nullifies the intended parallelism. Made
`blockingOperation` a def to exemplify lazy evalution.

RB_ID=71569"
mariusae,2012-06-19 22:01:29,https://api.github.com/repos/twitter/finagle/git/commits/2c8dd407d60df401875feaafcbd6b86523e82dfd,2c8dd407d60df401875feaafcbd6b86523e82dfd,"[split] fixup OWNERS; add arya to util, finagle.

RB_ID=71628"
stevegury,2012-06-19 21:12:13,https://api.github.com/repos/twitter/finagle/git/commits/a244445f20a02999994e27f3d849de0895803395,a244445f20a02999994e27f3d849de0895803395,"[split] Update Changelog up to 5.1.0

RB_ID=71445"
mariusae,2012-06-19 20:57:22,https://api.github.com/repos/twitter/finagle/git/commits/136e32d9099c610fe3f054859550afb8d40be884,136e32d9099c610fe3f054859550afb8d40be884,"[split] SeqIdFilter: helpful exceptions

because we're nice.

RB_ID=71546"
mariusae,2012-06-15 21:33:43,https://api.github.com/repos/twitter/finagle/git/commits/a554c58a910c0fa602c9b48ed5c265546cdae1c7,a554c58a910c0fa602c9b48ed5c265546cdae1c7,"[split] util, finagle: catch up sbt.

RB_ID=71128"
mariusae,2012-06-15 00:06:03,https://api.github.com/repos/twitter/finagle/git/commits/3235ea4b9540007e6d40e344d70c7eca7da398f6,3235ea4b9540007e6d40e344d70c7eca7da398f6,"[split] fixdeps

RB_ID=70963
TBR=true"
stevegury,2012-06-14 23:41:47,https://api.github.com/repos/twitter/finagle/git/commits/846f5317d3dce01f8ffcd97b832f4d2b6f7d2b03,846f5317d3dce01f8ffcd97b832f4d2b6f7d2b03,"[split] Fix birdcage versions

RB_ID=70943
TBR=true"
stevegury,2012-06-14 22:58:14,https://api.github.com/repos/twitter/finagle/git/commits/3ef60146c5b2a02d92085ebbc7293cbbe68b5a12,3ef60146c5b2a02d92085ebbc7293cbbe68b5a12,"[split] release finagle-5.1.0

RB_ID=70926
TBR=true"
mariusae,2012-06-14 22:27:30,https://api.github.com/repos/twitter/finagle/git/commits/9687a1917dce0d34a6c7914d1b368f4a34a994da,9687a1917dce0d34a6c7914d1b368f4a34a994da,"[split] Redis: fix build

Inlining a custom version of naggati, in our own namespace, with streaming removed.

RB_ID=70907"
stevegury,2012-06-14 22:06:10,https://api.github.com/repos/twitter/finagle/git/commits/25497c8d24c4ff99e770f69f5169caad8551d065,25497c8d24c4ff99e770f69f5169caad8551d065,"[split] release ostrich 8.1.0

RB_ID=70903
TBR=true"
stevegury,2012-06-14 21:58:17,https://api.github.com/repos/twitter/finagle/git/commits/51afed41dcf4ffa4d94efabf6953cf22869f776c,51afed41dcf4ffa4d94efabf6953cf22869f776c,"[split] release util 5.2.0

RB_ID=70901
TBR=true"
mariusae,2012-06-13 21:35:52,https://api.github.com/repos/twitter/finagle/git/commits/41f83eb28290d8b777905338c56f78428b090f0f,41f83eb28290d8b777905338c56f78428b090f0f,"[split] finagle-example: temporarily remove redis dep

RB_ID=70695
TBR=true"
mariusae,2012-06-13 19:10:18,https://api.github.com/repos/twitter/finagle/git/commits/f9ca1bec08bcdee9f5e991142ffb3e7d907f6377,f9ca1bec08bcdee9f5e991142ffb3e7d907f6377,"[split] Speed up SpanId.toString It was a hog: two orders of magnitude improvement.

   benchmark    ns linear runtime
 OldToString 10666 ==============================
    ToString   109 =

RB_ID=70636"
xinxiang-twitter,2012-06-13 01:58:33,https://api.github.com/repos/twitter/finagle/git/commits/48117bfe571249b482787b061a69f96524dc6e23,48117bfe571249b482787b061a69f96524dc6e23,"[split]  First phase of the serverset support  In this phase we only load the intial set of the servers from the zookeeper, without monitoring the following changes to the serverset as we will need to implement certain special monitoring logic in order to get a batch server set changes event

RB_ID=67766"
mariusae,2012-06-12 21:59:29,https://api.github.com/repos/twitter/finagle/git/commits/781275aec572e70ee013d61d4f616bfe886479fc,781275aec572e70ee013d61d4f616bfe886479fc,"[split] finagle 5.0.3

RB_ID=70000"
mariusae,2012-06-08 04:17:06,https://api.github.com/repos/twitter/finagle/git/commits/1b9297c8fa98d8b98b437dc45e64425f0c54a196,1b9297c8fa98d8b98b437dc45e64425f0c54a196,"[split] finagle-example: fix build

RB_ID=70062"
mariusae,2012-06-07 22:09:26,https://api.github.com/repos/twitter/finagle/git/commits/121591d8ea4439695e719a74e5066d366b670782,121591d8ea4439695e719a74e5066d366b670782,"[split] temporarily remove redis

RB_ID=70009"
mariusae,2012-06-07 19:53:32,https://api.github.com/repos/twitter/finagle/git/commits/b1c55f05d973bfd2ba9ae018583a19a8acc37daf,b1c55f05d973bfd2ba9ae018583a19a8acc37daf,"[split] util 5.1.2

RB_ID=69943"
mariusae,2012-06-07 18:47:43,https://api.github.com/repos/twitter/finagle/git/commits/c33401663d165f30a59955e862b777818fe7c17f,c33401663d165f30a59955e862b777818fe7c17f,"[split] Lifting functions into filters and services, so they play nicely together.

val fil = Filter.mk[Int, String, Int, String] { (req, f) => f(req*10) map { _ + ""filtered!"" } }
val filtered = fil andThen { i: Int => Future.value(i.toString) }

scala> filtered(123)()
res3: String = 1230filtered!

RB_ID=69731"
mariusae,2012-06-07 18:46:12,https://api.github.com/repos/twitter/finagle/git/commits/57568b6a0feba2ae2628279263dee3380fb76ff7,57568b6a0feba2ae2628279263dee3380fb76ff7,"[split] Some diagrams for my talk & later essay.

These show the entire client stack, in pieces.

RB_ID=69881"
mariusae,2012-06-07 04:51:23,https://api.github.com/repos/twitter/finagle/git/commits/188d53267812d416066f61b93244590f2091ef0f,188d53267812d416066f61b93244590f2091ef0f,"[split] finagle sbt build: fix up deps, versions.

RB_ID=69882
TBR=true"
mariusae,2012-06-05 16:57:08,https://api.github.com/repos/twitter/finagle/git/commits/eedd4ea5be5ea538a84626b36ac0a1edf830123e,eedd4ea5be5ea538a84626b36ac0a1edf830123e,"[split] kill com.twitter.concurrent.Channel We're a sweetspot and can finally kill it: we've bumped major, and nothing downstream uses it (that has been converted to 2.9).

The only downstream dep at this point is birdfeeder, but as far as I
can tell this is obsolete, too, and if resurrected should be converted
to offer/broker.

RB_ID=69438"
mariusae,2012-06-05 16:56:30,https://api.github.com/repos/twitter/finagle/git/commits/1ee1e28ef3a45a020741fff9d4e634a938ec0978,1ee1e28ef3a45a020741fff9d4e634a938ec0978,"[split] JvmFilter: trace jvm events

This puts Gc events into traces.

RB_ID=69410"
mariusae,2012-06-05 16:51:07,https://api.github.com/repos/twitter/finagle/git/commits/79b90537f2f9efdde77577a1f025f24dafb4d15d,79b90537f2f9efdde77577a1f025f24dafb4d15d,"[split] ServerBuilder: only instantiate filters & service factory once for each builder.

RB_ID=69427"
mariusae,2012-06-04 22:24:48,https://api.github.com/repos/twitter/finagle/git/commits/633f0fd2b709f7f39bbdcd4995edc33ee7197612,633f0fd2b709f7f39bbdcd4995edc33ee7197612,"[split] move MuxService to ""http""

RB_ID=69238"
capotej,2012-06-04 18:09:21,https://api.github.com/repos/twitter/finagle/git/commits/bc27fb63fa2452f3c5521012bcfdd6b7aebc5057,bc27fb63fa2452f3c5521012bcfdd6b7aebc5057,"[split] Ports monorail's request.client_id to macaw-core This ports the request.client_id method (and subsequently needed methods) from the monorail to macaw-core. I've tried to keep the names as similar as possible for ease of referencing.

Methods ported:

AuthenticatedSystem#client_id
MobileAdditions#is_mobile?
MobileAdditions#m2_request?
MobileAdditions#mobile_user_agent?
MobileAdditions#phoenix_incompatible?

RB_ID=66910"
mariusae,2012-06-01 23:29:13,https://api.github.com/repos/twitter/finagle/git/commits/686dae852a8b5ba334fbd9f3b70a278178813b9e,686dae852a8b5ba334fbd9f3b70a278178813b9e,"[split] finagle-stream: only release serivces after the stream response is complete

RB_ID=68517"
mariusae,2012-06-01 21:43:24,https://api.github.com/repos/twitter/finagle/git/commits/e06d0603ab39e9fd9f8a3a97a98af9f2bd799f5e,e06d0603ab39e9fd9f8a3a97a98af9f2bd799f5e,"[split] util 5.0.4, finagle 5.0.2

RB_ID=68767"
mariusae,2012-05-30 17:30:34,https://api.github.com/repos/twitter/finagle/git/commits/d50cabc89a63f4edd26129fd5bcaf121190ccdd3,d50cabc89a63f4edd26129fd5bcaf121190ccdd3,"[split] ClientBuilder: ensure lowWatermark <= highWatermark

RB_ID=68624"
mariusae,2012-05-25 21:29:58,https://api.github.com/repos/twitter/finagle/git/commits/b5e701e1a91c2b5941cc7775e8851d34ef64cee3,b5e701e1a91c2b5941cc7775e8851d34ef64cee3,"[split] util, finagle, ostrich => port to scala 2.9.2, bump majors

RB_ID=68247
TBR=true"
mariusae,2012-05-24 22:04:31,https://api.github.com/repos/twitter/finagle/git/commits/41928870ea6843e786a4aa13225f2bf0e22f0516,41928870ea6843e786a4aa13225f2bf0e22f0516,"[split] finagle 4.0.5

RB_ID=68078
TBR=true"
mariusae,2012-05-24 21:17:09,https://api.github.com/repos/twitter/finagle/git/commits/358b34f975215797694f36b98d4348c63288da40,358b34f975215797694f36b98d4348c63288da40,"[split] util: 4.0.3, stabilized

RB_ID=68041
TBR=true"
mariusae,2012-05-22 21:34:10,https://api.github.com/repos/twitter/finagle/git/commits/a3c244edb07a29717c07c74f6c8f9c5384e83381,a3c244edb07a29717c07c74f6c8f9c5384e83381,"[split] Merge commit '16646e4eba9d460364ba23607a7d3517c12a5007'

Conflicts:
	finagle/finagle-b3/pom.xml
	finagle/finagle-b3/src/main/scala/com/twitter/finagle/b3/thrift/BigBrotherBirdTracer.scala
	finagle/finagle-b3/src/main/scala/com/twitter/finagle/b3/thrift/RawBigBrotherBirdTracer.scala
	finagle/finagle-core/pom.xml
	finagle/finagle-example/pom.xml
	finagle/finagle-exception/pom.xml
	finagle/finagle-http/pom.xml
	finagle/finagle-kestrel/src/test/scala/com/twitter/finagle/kestrel/unit/InterpreterSpec.scala
	finagle/finagle-memcached-hadoop/pom.xml
	finagle/finagle-memcached/pom.xml
	finagle/finagle-ostrich4/pom.xml
	finagle/finagle-redis/pom.xml
	finagle/finagle-redis/src/main/scala/com/twitter/finagle/redis/protocol/commands/Misc.scala
	finagle/finagle-serversets/pom.xml
	finagle/finagle-stress/pom.xml
	finagle/finagle-test/pom.xml
	finagle/project/Build.scala"
mariusae,2012-05-22 18:51:13,https://api.github.com/repos/twitter/finagle/git/commits/073bc83b1201d4e0d8386a0c35f79bdaf4d05f70,073bc83b1201d4e0d8386a0c35f79bdaf4d05f70,"[split] remove getClass.getSimpleName uses

these are used for tracing/logging, but apparently are a bit
expensive.

RB_ID=67454"
mariusae,2012-05-21 20:00:38,https://api.github.com/repos/twitter/finagle/git/commits/84fe8af520d77b7d3934bdc5da377595ab599198,84fe8af520d77b7d3934bdc5da377595ab599198,"[split] finagle: get rid of all compilation warnings

RB_ID=67303"
mariusae,2012-05-18 22:11:11,https://api.github.com/repos/twitter/finagle/git/commits/c1a1b08db3fc38178edc82ab7e0b8f729d480b7b,c1a1b08db3fc38178edc82ab7e0b8f729d480b7b,"[split] Use new git-review with simplified OWNERS/GROUPS

RB_ID=67049"
mariusae,2012-05-18 21:00:11,https://api.github.com/repos/twitter/finagle/git/commits/16646e4eba9d460364ba23607a7d3517c12a5007,16646e4eba9d460364ba23607a7d3517c12a5007,Fix up dependencies for finagle-stream
stephenjudkins,2012-05-10 08:36:57,https://api.github.com/repos/twitter/finagle/git/commits/919fd54392b035389937e7a8e67d9565b6f381d6,919fd54392b035389937e7a8e67d9565b6f381d6,"finagle-stream: ensure that the HttpDechunker sends EOF only after all messages

Github-issue: https://github.com/twitter/finagle/issues/84
Signed-off-by: marius a. eriksen <marius@twitter.com>"
yuhua,2012-05-18 06:20:08,https://api.github.com/repos/twitter/finagle/git/commits/6db9ce7685d1a43aa2da34eda5fc5179c6097484,6db9ce7685d1a43aa2da34eda5fc5179c6097484,"[split] Revert ""Enable JSSE style cipher suites."" - it breaks the SslSpec of the finagle-native project.     This reverts commit bb27dfd270932b40d24d9267fa6ef36f6516614b.

RB_ID=67014"
yuhua,2012-05-18 05:39:02,https://api.github.com/repos/twitter/finagle/git/commits/95466816c3bf78ac4ee7ff2e88032c928af2a071,95466816c3bf78ac4ee7ff2e88032c928af2a071,"[split] Revert ""Revert ""Enable JSSE style cipher suites."" - it breaks the SslSpec of the finagle-native project.""

This reverts commit 8338648a22382873cc77fc78293ce7636baa15b4."
yuhua,2012-05-18 05:33:12,https://api.github.com/repos/twitter/finagle/git/commits/e2f73e360d5dd4bbaa67e7291020c7e6d0355f9e,e2f73e360d5dd4bbaa67e7291020c7e6d0355f9e,"[split] Revert ""Enable JSSE style cipher suites."" - it breaks the SslSpec of the finagle-native project.

This reverts commit bb27dfd270932b40d24d9267fa6ef36f6516614b."
yuhua,2012-05-17 21:14:07,https://api.github.com/repos/twitter/finagle/git/commits/b5685a4d0002694d075850b4266e77305f39ccf8,b5685a4d0002694d075850b4266e77305f39ccf8,"[split] Enable JSSE style cipher suites.

RB_ID=66357"
mariusae,2012-05-16 19:06:33,https://api.github.com/repos/twitter/finagle/git/commits/7129f27e67966b828e8dfa62239fd5256b4c9a39,7129f27e67966b828e8dfa62239fd5256b4c9a39,"[split] Revert ""Expand exception chain in the StatsFilter; If top level exception is sourced, include the source service name""

TBR=csong

RB_ID=66633"
mariusae,2012-05-15 22:48:34,https://api.github.com/repos/twitter/finagle/git/commits/299627fdacdec07cb6aa90a2327a2d51fc05f20b,299627fdacdec07cb6aa90a2327a2d51fc05f20b,"Merge pull request #46 from tsuna/toString

Add a sensible toString method to http.{Request, Response}."
mariusae,2012-05-15 22:42:11,https://api.github.com/repos/twitter/finagle/git/commits/af55f4ab79e3003fbd2cfc58d15eae01abd1a182,af55f4ab79e3003fbd2cfc58d15eae01abd1a182,README.md: update for sbt11 use.
mariusae,2012-05-15 22:34:45,https://api.github.com/repos/twitter/finagle/git/commits/a3dd155c53507c5c5fc6651d2a75243994d738bb,a3dd155c53507c5c5fc6651d2a75243994d738bb,finagle-protobuf: kill POM; seems defunct.
mariusae,2012-05-15 22:21:13,https://api.github.com/repos/twitter/finagle/git/commits/59476f95f19dcafdf4216c52fa51eee4ce72684d,59476f95f19dcafdf4216c52fa51eee4ce72684d,gitignore: sbt-launch.jar
mariusae,2012-05-15 16:48:44,https://api.github.com/repos/twitter/finagle/git/commits/fc392b8a00ed46e9a0f3133857c70b5823148b72,fc392b8a00ed46e9a0f3133857c70b5823148b72,"[split] add cache-team to the OWNERs of finagle-{memcached,redis}

RB_ID=66270"
mariusae,2012-05-14 23:39:00,https://api.github.com/repos/twitter/finagle/git/commits/5da2c4322475f55b6051c930722d45df21ef94db,5da2c4322475f55b6051c930722d45df21ef94db,"[split] finagle: build with sbt11

RB_ID=66240"
mariusae,2012-05-14 23:35:43,https://api.github.com/repos/twitter/finagle/git/commits/ba8fa447755a45592ef0ece7ac21254a9dec5c94,ba8fa447755a45592ef0ece7ac21254a9dec5c94,"[split] FailFast: do not admit requests when marked failed.

RB_ID=66252"
mariusae,2012-05-14 21:09:49,https://api.github.com/repos/twitter/finagle/git/commits/2cd73d6bde7404b44369be89a1abfa1554225845,2cd73d6bde7404b44369be89a1abfa1554225845,"[split] cowboy OWNERS file change

RB_ID=66202"
kmonkeyjam,2012-05-11 22:23:55,https://api.github.com/repos/twitter/finagle/git/commits/f541f377e637789d7765fab0870b059b6fd8f4d7,f541f377e637789d7765fab0870b059b6fd8f4d7,[split] reverting 83d5bbc5c79325fc019277c040026c73fcdb972d
kmonkeyjam,2012-05-11 21:15:03,https://api.github.com/repos/twitter/finagle/git/commits/70e7ac6123cdb229c44ce356bf165e231a2a0bfb,70e7ac6123cdb229c44ce356bf165e231a2a0bfb,[split] upping version of maven-plugin
mariusae,2012-05-11 17:23:41,https://api.github.com/repos/twitter/finagle/git/commits/f2b2a867447f2c5af53fb144febd03971ed29ac0,f2b2a867447f2c5af53fb144febd03971ed29ac0,[split] bump finagle to 4.0.3-SNAPSHOT
mariusae,2012-05-11 17:04:22,https://api.github.com/repos/twitter/finagle/git/commits/115c929759ee2683a926ee569dc25ad10dd712af,115c929759ee2683a926ee569dc25ad10dd712af,[split] release 4.0.2 of finagle
mariusae,2012-05-11 16:59:12,https://api.github.com/repos/twitter/finagle/git/commits/c0c93a53f46e5df4d142b484b7b8712b43406193,c0c93a53f46e5df4d142b484b7b8712b43406193,"[split] add AbstractCodec for java

RB_ID=65949"
mariusae,2012-05-10 23:51:20,https://api.github.com/repos/twitter/finagle/git/commits/7d320fe7b71df3e69ae1d1e2c33a5506f453d874,7d320fe7b71df3e69ae1d1e2c33a5506f453d874,[split] bump finagle to 4.0.2-SNAPSHOT
mariusae,2012-05-10 23:47:21,https://api.github.com/repos/twitter/finagle/git/commits/eb25eb04d0d4a2adde63191ce56dec3ff44fca28,eb25eb04d0d4a2adde63191ce56dec3ff44fca28,[split] release 4.0.1 of finagle
johanoskarsson,2012-05-10 21:34:23,https://api.github.com/repos/twitter/finagle/git/commits/7f6fe9d8b06ed49f4ac0ec6d1b81e5832cedb0d2,7f6fe9d8b06ed49f4ac0ec6d1b81e5832cedb0d2,[split] Merge branch 'master' of https://git.twitter.biz/birdcage
johanoskarsson,2012-05-10 21:33:52,https://api.github.com/repos/twitter/finagle/git/commits/2a9d8b01b049cae439ed16746ac9de8f7b412e27,2a9d8b01b049cae439ed16746ac9de8f7b412e27,"[split] Revert ""Comment out fixtures setup in zipkin-web. The quite meaningless tests now run at least""

This reverts commit 7fc41b4833f1e4276b5421f52fa19a3e5b60b0ef."
johanoskarsson,2012-05-10 20:54:18,https://api.github.com/repos/twitter/finagle/git/commits/d02a4d42d10b95b55bb9b8754bf75b76cc8b6163,d02a4d42d10b95b55bb9b8754bf75b76cc8b6163,[split] Comment out fixtures setup in zipkin-web. The quite meaningless tests now run at least
mariusae,2012-05-10 18:40:29,https://api.github.com/repos/twitter/finagle/git/commits/7f6683be2a05d110f6a2cde73164f8dec5dc8fe3,7f6683be2a05d110f6a2cde73164f8dec5dc8fe3,"[split] finagle-thrift: generate and verify our own sequence ids

RB_ID=65642"
johanoskarsson,2012-05-09 18:15:24,https://api.github.com/repos/twitter/finagle/git/commits/74e17265f26b9b85268f1f593fdb83e48f7200c5,74e17265f26b9b85268f1f593fdb83e48f7200c5,"[split] This fixes a serious bug in the Finagle core tracing component. A single trace id would get reused over and over, causing the sampling to be broken. The patch makes sure we generate a new id and not stick to the default one. Includes a test that verifies this works across two requests.

RB_ID=65455"
mariusae,2012-05-08 23:08:42,https://api.github.com/repos/twitter/finagle/git/commits/3fb14d496cc4d5e08772cf9b171db879bbdfe85e,3fb14d496cc4d5e08772cf9b171db879bbdfe85e,[split] finagle: update changelog
mariusae,2012-05-08 22:58:56,https://api.github.com/repos/twitter/finagle/git/commits/a091b6a0836a10667367d042d1408c547fe2a36d,a091b6a0836a10667367d042d1408c547fe2a36d,[split] bump finagle to 4.0.1-SNAPSHOT
mariusae,2012-05-08 22:57:14,https://api.github.com/repos/twitter/finagle/git/commits/5bec46080446ad09363a31c49876f45257da5f02,5bec46080446ad09363a31c49876f45257da5f02,[split] release 4.0.0 of finagle
mariusae,2012-05-08 22:11:28,https://api.github.com/repos/twitter/finagle/git/commits/0b548dc42c0c6748c0fd03dba4bbf2fe5b622b2e,0b548dc42c0c6748c0fd03dba4bbf2fe5b622b2e,[split] Stabilize submodules
mariusae,2012-05-08 21:46:51,https://api.github.com/repos/twitter/finagle/git/commits/e7164a6a3ee5ca771d2d0b0df486da4ca7afa6db,e7164a6a3ee5ca771d2d0b0df486da4ca7afa6db,[split] Finagle 4.0.0-SNAPSHOT
mariusae,2012-05-08 21:44:43,https://api.github.com/repos/twitter/finagle/git/commits/833759c566ab2ec9bc39732c34fb41f539dc1e6a,833759c566ab2ec9bc39732c34fb41f539dc1e6a,[split] bump ostrich to 7.0.2-SNAPSHOT
mariusae,2012-05-08 21:44:18,https://api.github.com/repos/twitter/finagle/git/commits/0d23e40f166272b8f241869bcc2d67032a59f7a1,0d23e40f166272b8f241869bcc2d67032a59f7a1,[split] release 7.0.1 of ostrich
mariusae,2012-05-08 21:39:48,https://api.github.com/repos/twitter/finagle/git/commits/c0ff54835aeecc5cbfcc70e37128940ab09da96d,c0ff54835aeecc5cbfcc70e37128940ab09da96d,[split] bump util to 4.0.2-SNAPSHOT
mariusae,2012-05-08 21:38:27,https://api.github.com/repos/twitter/finagle/git/commits/233e1c2f697c319fcd429d1fc952eaa5bf59a983,233e1c2f697c319fcd429d1fc952eaa5bf59a983,[split] release 4.0.1 of util
mariusae,2012-05-08 21:28:23,https://api.github.com/repos/twitter/finagle/git/commits/7d0e6191d8cf0d6fb3574041f78af2f4c1a62828,7d0e6191d8cf0d6fb3574041f78af2f4c1a62828,[split] bump ostrich to 7.0.1-SNAPSHOT
mariusae,2012-05-08 21:27:23,https://api.github.com/repos/twitter/finagle/git/commits/6f522c9d4979ecc8ed630c9e07c6f7e46de50f75,6f522c9d4979ecc8ed630c9e07c6f7e46de50f75,[split] release 7.0.0 of ostrich
mariusae,2012-05-08 21:21:27,https://api.github.com/repos/twitter/finagle/git/commits/a54ea49d5729b284a2c11184a0adc745359dd681,a54ea49d5729b284a2c11184a0adc745359dd681,[split] ostrich 7.0
mariusae,2012-05-08 21:20:14,https://api.github.com/repos/twitter/finagle/git/commits/ead246c0b4d480bfbd53067ee5c4025e1f44936c,ead246c0b4d480bfbd53067ee5c4025e1f44936c,"[split] ServerDispatcher: cancel pending requests on hangup

RB_ID=65320"
mariusae,2012-05-08 20:58:09,https://api.github.com/repos/twitter/finagle/git/commits/f1e5039596a0d5317f2b9b8e578c8921f26db690,f1e5039596a0d5317f2b9b8e578c8921f26db690,[split] bump util to 4.0.1-SNAPSHOT
mariusae,2012-05-08 20:56:08,https://api.github.com/repos/twitter/finagle/git/commits/b2b71d4ba5b6db0a4164b5cdaa711aead417447b,b2b71d4ba5b6db0a4164b5cdaa711aead417447b,[split] release 4.0.0 of util
mariusae,2012-05-07 21:36:48,https://api.github.com/repos/twitter/finagle/git/commits/1f5a6fca6c73391a9495e84e80fdc5e2a40458b8,1f5a6fca6c73391a9495e84e80fdc5e2a40458b8,"[split] Mavenize all finagle tests.

RB_ID=65068"
mariusae,2012-05-07 18:54:44,https://api.github.com/repos/twitter/finagle/git/commits/1eb731ea806939527e55bd7db89c8a67283abee1,1eb731ea806939527e55bd7db89c8a67283abee1,"[split] Conservative transport for clients A temporary addition until we find the underlying memcache codec problem.

RB_ID=65130"
mariusae,2012-05-04 03:48:14,https://api.github.com/repos/twitter/finagle/git/commits/bbd754c9e21d3c4e23b66e96e0a3eeb4abbfe25a,bbd754c9e21d3c4e23b66e96e0a3eeb4abbfe25a,[split] Merge branch 'dispatchcancel'
mariusae,2012-05-03 21:54:38,https://api.github.com/repos/twitter/finagle/git/commits/97ef8d4d088bd7480b0fed85321c9f64d063c5d8,97ef8d4d088bd7480b0fed85321c9f64d063c5d8,[split] SerialClientDispatcher: only release semaphore after read/write is complete
mariusae,2012-05-03 18:24:59,https://api.github.com/repos/twitter/finagle/git/commits/75c36e47fa7177823496019dd2fbc0fb6384fdca,75c36e47fa7177823496019dd2fbc0fb6384fdca,[split] Merge branch 'master' of https://git.twitter.biz/birdcage
mariusae,2012-05-03 18:24:48,https://api.github.com/repos/twitter/finagle/git/commits/19bcbf7cb4c5e88ca6e90df382621d5a274afe67,19bcbf7cb4c5e88ca6e90df382621d5a274afe67,[split] finagle: update ChangeLog
kevinoliver,2012-04-30 17:08:29,https://api.github.com/repos/twitter/finagle/git/commits/81e6160c3ca0161182af21436180a68e6cd3cc6d,81e6160c3ca0161182af21436180a68e6cd3cc6d,"[split] Add Duration.inUnit and expose that in StatsReciever.time and StatsReciever.timeFuture

RB_ID=62891"
evnm,2012-04-26 23:02:09,https://api.github.com/repos/twitter/finagle/git/commits/85f43c791b93379e19e6c2c2bbdb1619c0550d0e,85f43c791b93379e19e6c2c2bbdb1619c0550d0e,"[split] Finagle: Fix a couple documentation typos in Service.scala.

RB_ID=63458"
mariusae,2012-04-24 17:51:37,https://api.github.com/repos/twitter/finagle/git/commits/5aa5ea65b82135ab38e96c05f18fa25b98c7c436,5aa5ea65b82135ab38e96c05f18fa25b98c7c436,[split] Merge branch 'master' into finagle.add_tcnative
kevinoliver,2012-04-17 17:46:53,https://api.github.com/repos/twitter/finagle/git/commits/7cd90054a73fa9b7e370b9b3594e541dbacdc364,7cd90054a73fa9b7e370b9b3594e541dbacdc364,"[split] allow injection of the StatsCollection into OstrichStatsReceiver

RB_ID=62768"
kevinoliver,2012-04-17 16:01:23,https://api.github.com/repos/twitter/finagle/git/commits/56b15ed40d92a0fc8583f08840e77d88ab8f9549,56b15ed40d92a0fc8583f08840e77d88ab8f9549,"[split] finagle-memcached's MockClient.incr should have same behavior as memcached

http://jira.local.twitter.com/browse/CSL-147

RB_ID=62708"
kevinoliver,2012-04-17 03:39:11,https://api.github.com/repos/twitter/finagle/git/commits/e0ebcaae9bfc6f6bc09d86855c9605218385d3cc,e0ebcaae9bfc6f6bc09d86855c9605218385d3cc,"[split] include serviceName in TimeoutException messages

RB_ID=62707"
mariusae,2012-04-12 22:30:51,https://api.github.com/repos/twitter/finagle/git/commits/704a757029576e758a08ba80f5fac442be906f84,704a757029576e758a08ba80f5fac442be906f84,"[split] finagle-core: introduce Transports and Dispatchers

A transport is a representation of a stream of objects that may be
read from and written to asynchronously. Transports are connected to
some endpoint, typically via a channel pipeline that performs
encoding and decoding.

Dispatchers bridge services onto transports.

This splits the finagle world into two neat(er) parts, and allows for
greater composability and modularity. In particular, after this
change, a codec may provide its own dispatcher to implement
multiplexing, pipelining and the like.

The change also simplifies a lot of the current functionality, making
it easier to reason about and test.

Next, I'm going to take this split a little bit further: I'll likely
introduce a ""Listener"" which can accept a transport:

trait Listener[In, Out] {
  def accept(): Future[Transport[In, Out]]
}

and a ""Connecter"" on the client

trait Connecter[In, Out] {
  def connect(remote: SocketAddress): Future[Transport[In, Out]]
}

after that, finagle will be neatly split into the pipeline stack and
the service stack, allowing us to build & test these separately. For
example, currently there is poor integration testing in the
particular service stack that the client & server builder sets up.
After this change, it'll be much simpler to test the two halves in
isolation."
mariusae,2012-04-12 21:38:42,https://api.github.com/repos/twitter/finagle/git/commits/ae5b65b3dc867c659bc962631a968b03cfc362ba,ae5b65b3dc867c659bc962631a968b03cfc362ba,"[split] Merge commit 'f3cf83124ca76b36635da08533a29fb1ccdb2715'

Conflicts:
	finagle/finagle-b3/pom.xml
	finagle/finagle-commons-stats/pom.xml
	finagle/finagle-core/pom.xml
	finagle/finagle-core/src/main/scala/com/twitter/finagle/builder/ServerBuilder.scala
	finagle/finagle-core/src/main/scala/com/twitter/finagle/ssl/JSSE.scala
	finagle/finagle-example/pom.xml
	finagle/finagle-exception/pom.xml
	finagle/finagle-http/pom.xml
	finagle/finagle-kestrel/pom.xml
	finagle/finagle-memcached-hadoop/pom.xml
	finagle/finagle-memcached/pom.xml
	finagle/finagle-memcached/src/test/scala/com/twitter/finagle/memcached/integration/ClientSpec.scala
	finagle/finagle-memcached/src/test/scala/com/twitter/finagle/memcached/integration/InterpreterServiceSpec.scala
	finagle/finagle-memcached/src/test/scala/com/twitter/finagle/memcached/stress/InterpreterServiceSpec.scala
	finagle/finagle-memcached/src/test/scala/com/twitter/finagle/memcached/unit/PoolingReadRepairClientSpec.scala
	finagle/finagle-memcached/src/test/scala/com/twitter/finagle/memcached/unit/protocol/text/EncoderSpec.scala
	finagle/finagle-native/pom.xml
	finagle/finagle-ostrich4/pom.xml
	finagle/finagle-redis/pom.xml
	finagle/finagle-redis/src/main/scala/com/twitter/finagle/redis/Client.scala
	finagle/finagle-redis/src/test/scala/com/twitter/finagle/redis/integration/ClientSpec.scala
	finagle/finagle-serversets/pom.xml
	finagle/finagle-stream/pom.xml
	finagle/finagle-stress/pom.xml
	finagle/finagle-test/pom.xml
	finagle/finagle-thrift/pom.xml
	finagle/project/build/Project.scala"
mariusae,2012-04-12 04:51:04,https://api.github.com/repos/twitter/finagle/git/commits/f3cf83124ca76b36635da08533a29fb1ccdb2715,f3cf83124ca76b36635da08533a29fb1ccdb2715,"Merge pull request #79 from stephenjudkins/issue-77

Hopefully fix issue #77; replace non-threadsafe SynchronizedSet#toArray ..."
kmonkeyjam,2012-04-11 18:56:02,https://api.github.com/repos/twitter/finagle/git/commits/f42178b921d530746e3fcd191cb5bbb81d514692,f42178b921d530746e3fcd191cb5bbb81d514692,[split] finagle-b3 requires test for the mock test stuff
mariusae,2012-04-11 15:39:56,https://api.github.com/repos/twitter/finagle/git/commits/3c0a680956b921d42370fd68ccf1251a41a91e3e,3c0a680956b921d42370fd68ccf1251a41a91e3e,"Merge pull request #78 from mairbek/master

Added authentication command to finagle-redis"
stephenjudkins,2012-04-10 21:36:36,https://api.github.com/repos/twitter/finagle/git/commits/1ebaad8f33a6c6a51ba3372d01955d2403015955,1ebaad8f33a6c6a51ba3372d01955d2403015955,"Hopefully fix issue #77; replace non-threadsafe SynchronizedSet#toArray with synchronized #toList.

Relevant tests pass. Unsure of performance implications, but do we care how fast this will be? Also I have no idea how to test this."
mairbek,2012-04-10 20:10:26,https://api.github.com/repos/twitter/finagle/git/commits/110b565cbbec20b2a00a6b34a12ea68c1e977370,110b565cbbec20b2a00a6b34a12ea68c1e977370,Added authentication command
mariusae,2012-04-03 23:47:53,https://api.github.com/repos/twitter/finagle/git/commits/72664643e7f65235e22c660acde9042e0e370047,72664643e7f65235e22c660acde9042e0e370047,Merge branch 'bc'
johanoskarsson,2012-04-03 20:02:18,https://api.github.com/repos/twitter/finagle/git/commits/c928ccb1e3c76935c211facebe8aa71a21fc28b7,c928ccb1e3c76935c211facebe8aa71a21fc28b7,[split] Add the client address for http traces. Also record uri after service name has been set
mariusae,2012-03-30 17:30:59,https://api.github.com/repos/twitter/finagle/git/commits/f4bb2100e045725ff2845d4f196c141268a61206,f4bb2100e045725ff2845d4f196c141268a61206,"[split] Revert ""finagle: daemonize worker & timer threads; warn of unclosed clients""

This can cause unexpected behavior in servers that have fall-through
mains, or no other nondaemon threads."
mariusae,2012-03-30 16:57:05,https://api.github.com/repos/twitter/finagle/git/commits/047f4df708533357bb25185632eda4183be4bdb4,047f4df708533357bb25185632eda4183be4bdb4,[split] Offer: deprecate apply() in favor of sync()
evnm,2012-03-29 21:28:15,https://api.github.com/repos/twitter/finagle/git/commits/c182d9b26bf48216206565301028e0d37e89efd0,c182d9b26bf48216206565301028e0d37e89efd0,[split] Finagle: Fix typo in Filter comment.
blackicewei,2012-03-29 05:20:47,https://api.github.com/repos/twitter/finagle/git/commits/ec65e162b3d0a0bb2a318410e5de39a9a3ca1051,ec65e162b3d0a0bb2a318410e5de39a9a3ca1051,[split] block client without clientID  - block client without clientID
mariusae,2012-03-28 21:49:28,https://api.github.com/repos/twitter/finagle/git/commits/cd1c3e718f6762adef8f12badf0b39e6be119616,cd1c3e718f6762adef8f12badf0b39e6be119616,[split] finagle: daemonize worker & timer threads; warn of unclosed clients
mariusae,2012-03-28 18:15:00,https://api.github.com/repos/twitter/finagle/git/commits/7f119f480a697ae9558f3c15a49347c3e74af029,7f119f480a697ae9558f3c15a49347c3e74af029,[split] Upgrade to Netty 3.4.0.Alpha2
mariusae,2012-03-23 17:27:13,https://api.github.com/repos/twitter/finagle/git/commits/7c4fb2a44881816f6df48f833bdf8c53f3bb9d37,7c4fb2a44881816f6df48f833bdf8c53f3bb9d37,"Merge pull request #74 from taylorleese/master

Expose max initial line length and header size"
mariusae,2012-03-21 21:09:16,https://api.github.com/repos/twitter/finagle/git/commits/541e13f0b71b6c9d95dbea88d250742568cabba1,541e13f0b71b6c9d95dbea88d250742568cabba1,[split] getResult/getsResult for java
johanoskarsson,2012-03-21 18:40:47,https://api.github.com/repos/twitter/finagle/git/commits/c032e1584b3699a57f244e0f4b202e4d107f8e48,c032e1584b3699a57f244e0f4b202e4d107f8e48,[split] In the finagle-thrift gem the parent id of a Span might be nil or unset if the Ruby service is the first in a trace
johanoskarsson,2012-03-19 21:06:03,https://api.github.com/repos/twitter/finagle/git/commits/bc91add2d44f8822fc5b107a48ee363e2ef0355f,bc91add2d44f8822fc5b107a48ee363e2ef0355f,"[split] Remove deprecated tracer method in Finagle, use tracerFactory instead. Updated usages in Ibis and Rufous (via old Scrooge version)."
mariusae,2012-03-16 16:28:17,https://api.github.com/repos/twitter/finagle/git/commits/7e237802e4547b3c6c258ee132f7882221d7dfdb,7e237802e4547b3c6c258ee132f7882221d7dfdb,Merge branch 'bc'
mariusae,2012-03-16 16:19:55,https://api.github.com/repos/twitter/finagle/git/commits/c94a3c8bd287bfdeec53d99093e04b6f70a4f406,c94a3c8bd287bfdeec53d99093e04b6f70a4f406,"Merge pull request #73 from tootedom/sslcontext

Making JSSE.client only create default SSLContext once"
mariusae,2012-03-15 03:23:16,https://api.github.com/repos/twitter/finagle/git/commits/43b9c85dab70efd3bb44b4dc0d5e58e9d53beef4,43b9c85dab70efd3bb44b4dc0d5e58e9d53beef4,[split] finagle: update ChangeLog
mariusae,2012-03-15 02:50:15,https://api.github.com/repos/twitter/finagle/git/commits/3070358a904c7a5a9eb2e4f6028e8f8bca0b0a86,3070358a904c7a5a9eb2e4f6028e8f8bca0b0a86,"[split] org=com.twitter,name=finagle,version=3.0.1-SNAPSHOT"
mariusae,2012-03-15 02:50:15,https://api.github.com/repos/twitter/finagle/git/commits/b7bac8d3e98e290b80ea2cfb25f2df7012b5f4f2,b7bac8d3e98e290b80ea2cfb25f2df7012b5f4f2,"[split] org=com.twitter,name=finagle,version=3.0.0"
mariusae,2012-03-15 02:29:33,https://api.github.com/repos/twitter/finagle/git/commits/de9d7614415354b9a3671090cb46ad35f520e90a,de9d7614415354b9a3671090cb46ad35f520e90a,[split] updated versions.properties
mariusae,2012-03-15 02:29:32,https://api.github.com/repos/twitter/finagle/git/commits/ea018d27df85b2641bc37af48c82579c77b85830,ea018d27df85b2641bc37af48c82579c77b85830,[split] updated versions.properties
mariusae,2012-03-15 02:29:32,https://api.github.com/repos/twitter/finagle/git/commits/b0984ec0ea13c91fe2def63779d03fb88df434d2,b0984ec0ea13c91fe2def63779d03fb88df434d2,[split] updated versions.properties
mariusae,2012-03-15 02:29:32,https://api.github.com/repos/twitter/finagle/git/commits/5a9923173c605a1f8c044661edc0ede81829f381,5a9923173c605a1f8c044661edc0ede81829f381,[split] updated versions.properties
tootedom,2012-03-13 22:27:13,https://api.github.com/repos/twitter/finagle/git/commits/2d51c0bc52270a200c59003e9001298b461357fe,2d51c0bc52270a200c59003e9001298b461357fe,Fix Formatting
j3h,2012-03-13 17:55:05,https://api.github.com/repos/twitter/finagle/git/commits/26b3e0f3600c617ae504377361adab21504b071c,26b3e0f3600c617ae504377361adab21504b071c,"[split] finagle-memcached: Fix for CACHE-16 (requests with empty keys)

The symptom for CACHE-16 was that requests from finagle-memcached were
sometimes being made with empty keys. It turns out that this happens
when a request is retried. Because of an API wart in Netty, the tokens
that comprise a memcache command were being *consumed* rather than
*copied* when they were written to the output buffer. This means that
subsequent retries would find 0 bytes in the consumed token, thus the
empty keys.

This commit adjusts the encoder to call the method that copies the
bytes to the output buffer without changing the source buffer rather
than the one that consumes the source buffer.

For details on the difference between the two writeBytes methods, see:

<http://netty.io/docs/stable/api/org/jboss/netty/buffer/ChannelBuffer.html#writeBytes(org.jboss.netty.buffer.ChannelBuffer,%20int,%20int)>

and:

<http://netty.io/docs/unstable/api/org/jboss/netty/buffer/ChannelBuffer.html#writeBytes(org.jboss.netty.buffer.ChannelBuffer)>"
mariusae,2012-03-09 21:44:37,https://api.github.com/repos/twitter/finagle/git/commits/caa965eeb60f32eacacb4a3003e15590a3be08ee,caa965eeb60f32eacacb4a3003e15590a3be08ee,[split] finagle tests: don't use RandomSocket; use true ephemeral ports.
sprsquish,2012-03-09 21:03:06,https://api.github.com/repos/twitter/finagle/git/commits/23ea6e5040df088e9f5335e5c74f30398305e50e,23ea6e5040df088e9f5335e5c74f30398305e50e,[split] allow for additional ServerSet endpoints
mariusae,2012-03-09 20:12:29,https://api.github.com/repos/twitter/finagle/git/commits/5152a4d3276c38e8780c2313dbd9d848e027bca7,5152a4d3276c38e8780c2313dbd9d848e027bca7,"[split] netty 3.4.0.Alpha1 this includes the enhanced connect timeout resolution fix.

Trustin says this should be as stable as 3.3.1.Final, but was marked alpha due to some internal changes."
tootedom,2012-03-08 23:16:54,https://api.github.com/repos/twitter/finagle/git/commits/ca6e142f79246b68a1e4cc4a8e8722d4a2eea05e,ca6e142f79246b68a1e4cc4a8e8722d4a2eea05e,"when tls(hostname) is called the SSLContext for the default jsse
truststore (cacerts) is created on each request.  This seems overhead,
as it means a new SSLContext, and cacerts and a SecureRandom is created
for each ssl (https) call.

Therefore, change it so that only the first call to JSSE.client()
creates the SSLContext, subsequent calls just create the SSLEngine from
that precreated SSLContext."
mariusae,2012-03-07 22:41:59,https://api.github.com/repos/twitter/finagle/git/commits/cc316dd2fc59c5a16d805b23d56bb87c4059c811,cc316dd2fc59c5a16d805b23d56bb87c4059c811,[split] Merge commit 'd85036a0b9606c89d049ffe1bb2e77705bb667c8'
mariusae,2012-03-07 22:38:44,https://api.github.com/repos/twitter/finagle/git/commits/d85036a0b9606c89d049ffe1bb2e77705bb667c8,d85036a0b9606c89d049ffe1bb2e77705bb667c8,"Merge pull request #72 from bmatheny/sorted_sets_use_doubles

Sorted sets use doubles"
mariusae,2012-03-06 23:28:32,https://api.github.com/repos/twitter/finagle/git/commits/cd8dcfbb2902da9053452fc762be095dd60284a8,cd8dcfbb2902da9053452fc762be095dd60284a8,"[split] finagle: better support for multiplexed protocols

Refactor service preparation into two parts: prepareServiceFactory (at
the top of the stack) and prepareConnFactory (at the bottom--
connection). Together, these allow for the full flexibility of
prepareService/prepareFactory and additionally allow for easy
implementation of connection multiplexed protocol since
prepareServiceFactory can do its own physical connection management.

In order to accommodate for different typing between the pipeline &
connection factory, ""raw"" versions are provided that expose the uncast
versions of the underlying service factories. This allows an
implementor to ship different messages across the
ChannelService/ServiceToChannelHandler boundaries"
mariusae,2012-03-06 23:19:52,https://api.github.com/repos/twitter/finagle/git/commits/f7130cf79c90eafcfe522d13a42fdfa9bf9c91ba,f7130cf79c90eafcfe522d13a42fdfa9bf9c91ba,"[split] server: cancelOnHangup

a new ServerBuilder option to control whether or not we cancel hung-up requests."
bmatheny,2012-03-06 20:28:33,https://api.github.com/repos/twitter/finagle/git/commits/9e5dffeef5822184d2ef96bf388e775782d9d3cd,9e5dffeef5822184d2ef96bf388e775782d9d3cd,Sorted sets use doubles instead of floats
bmatheny,2012-03-06 20:04:21,https://api.github.com/repos/twitter/finagle/git/commits/da0c628becb3ed695cc9aa5ff71e22d041c50af0,da0c628becb3ed695cc9aa5ff71e22d041c50af0,Merge branch 'master' of https://github.com/twitter/finagle
mariusae,2012-03-06 05:07:47,https://api.github.com/repos/twitter/finagle/git/commits/72f17de4fd6b7fd1bde0510f8270a32a34c0e05a,72f17de4fd6b7fd1bde0510f8270a32a34c0e05a,[split] Document use of semantic versioning
mariusae,2012-03-05 19:52:49,https://api.github.com/repos/twitter/finagle/git/commits/d9b31c3e774827873c03a9ee2069039f4954fb62,d9b31c3e774827873c03a9ee2069039f4954fb62,"Merge pull request #69 from tootedom/master

Allow user to pass in an SSL Enginee so client certificates can be used"
mariusae,2012-03-05 18:28:41,https://api.github.com/repos/twitter/finagle/git/commits/761b860b89188c24f70406db26003129dbadb6a1,761b860b89188c24f70406db26003129dbadb6a1,"[split] better support for one-way calls

acknowledge writes, otherwise new requests get queued up forever.
don't add any headers to one-way calls.

i think that the right longer-term solution is to simply not support
one-way calls, but i'd like to do a survey of services first before
turning it off in our compilers."
tootedom,2012-03-03 08:46:21,https://api.github.com/repos/twitter/finagle/git/commits/a04aecb73008a0b580817a5c329e582b90175241,a04aecb73008a0b580817a5c329e582b90175241,"Added to the ClientBuilder the ability to specify the Engine to use, 
so a client can create an SSLContext with client certs if they wish:
i.e.

<code>
val ctx = SSLContext.getInstance(""TLS"")
...
ctx.init(keyManagerFactory.getKeyManagers(), trustManagers, sr)
...
...
ctx
</code>

The ctx is passed to the ClientBuilder, that uses that context as a
basis from which to build the SSLEngine"
mariusae,2012-03-02 22:06:40,https://api.github.com/repos/twitter/finagle/git/commits/7b382fdbd1c6c7d78df487ef1a6871d7939509b7,7b382fdbd1c6c7d78df487ef1a6871d7939509b7,[split] Merge commit '823550568306e65c3fb33a490978169841c1a8d7'
mariusae,2012-03-02 22:02:42,https://api.github.com/repos/twitter/finagle/git/commits/823550568306e65c3fb33a490978169841c1a8d7,823550568306e65c3fb33a490978169841c1a8d7,disable protobuf by default
mariusae,2012-03-02 21:05:11,https://api.github.com/repos/twitter/finagle/git/commits/6985ce7f3dffcd943ba639335440d6350e426984,6985ce7f3dffcd943ba639335440d6350e426984,"Merge branch 'master' into george-v-master

Conflicts:
	project/build.properties"
johanoskarsson,2012-03-02 18:18:43,https://api.github.com/repos/twitter/finagle/git/commits/33f296f0dde4d6a7a905ddb0e1b1839e2255d764,33f296f0dde4d6a7a905ddb0e1b1839e2255d764,[split] Only log that a span was unfinished if we actually found one
mariusae,2012-03-02 17:51:03,https://api.github.com/repos/twitter/finagle/git/commits/00d483fc3c8606af242c76cd44737bfb5bb7d912,00d483fc3c8606af242c76cd44737bfb5bb7d912,"[split] experimental Fail-Fast mode

/**
 * An experimental fail-fast factory that attempts to reduce
 * the amount of requests dispatched to endpoints that will
 * anyway fail. It works by marking a host dead on failure,
 * launching a background process that attempts to reestablish
 * the connection with the given backoff schedule. At this time,
 * the factory is marked unavailable (and thus the load balancer
 * above it will avoid its use).
 */

This is only slightly different from the old version, but in an
important way: we proactively tries to reconnect while
maintaining unavailability."
stevegury,2012-03-01 23:26:30,https://api.github.com/repos/twitter/finagle/git/commits/f0ac1d9fefe450102ba49b15475b6a3823857f69,f0ac1d9fefe450102ba49b15475b6a3823857f69,[split] Simply add two counters received_bytes and sent_bytes in the ChannelStatsHandler
mariusae,2012-03-01 20:15:41,https://api.github.com/repos/twitter/finagle/git/commits/d1fc1ca702970a544977109236f7d3a2215bed3e,d1fc1ca702970a544977109236f7d3a2215bed3e,"[split] ServiceToChannelHandler: keep track of shutdowns with pending replies, don't monitor errors that occur after cancellation.

This will do two things: (1) reduce reporting of exceptions that
aren't ""real"" (cancelled request exceptions due to a client closing
the channel), and (2) report the count of sockets that are closed
while the server is handling a pending request."
mariusae,2012-03-01 18:16:26,https://api.github.com/repos/twitter/finagle/git/commits/f087cf00f134c281b7366880103f92d03555c97d,f087cf00f134c281b7366880103f92d03555c97d,[split] finagle: update changelog
mariusae,2012-03-01 18:02:38,https://api.github.com/repos/twitter/finagle/git/commits/45ce97cae279bf6f882ce4744ad5043bb381697b,45ce97cae279bf6f882ce4744ad5043bb381697b,"[split] org=com.twitter,name=finagle,version=2.0.2-SNAPSHOT"
mariusae,2012-03-01 18:02:38,https://api.github.com/repos/twitter/finagle/git/commits/d44de6f577269e7f5d53bb8d60958e6ea02e15ba,d44de6f577269e7f5d53bb8d60958e6ea02e15ba,"[split] org=com.twitter,name=finagle,version=2.0.1"
mariusae,2012-03-01 17:36:55,https://api.github.com/repos/twitter/finagle/git/commits/c71bd6803f652351e341f101f19c7c0cd3bf9cd4,c71bd6803f652351e341f101f19c7c0cd3bf9cd4,[split] finagle commons stats: memoize counters
mariusae,2012-03-01 17:36:07,https://api.github.com/repos/twitter/finagle/git/commits/05aeeec1377f8f45d43706758e5e656647b45392,05aeeec1377f8f45d43706758e5e656647b45392,"[split] cluster: don't reuse adds; many values per key

this is the cause of the cuckoo bug: since the same mapped value could
be given out many times, we reference counts could get out of sync,
causing us to release() more than was acquire()d."
mariusae,2012-02-29 23:00:36,https://api.github.com/repos/twitter/finagle/git/commits/f6f76c7042670808b88ffc779793839a3da62955,f6f76c7042670808b88ffc779793839a3da62955,[split] finagle clientbuilder: actually buffer handlers to avoid deadlock.
mariusae,2012-02-29 19:09:14,https://api.github.com/repos/twitter/finagle/git/commits/cb94457f450775ecee4d0224ff6bf04fb099ca6c,cb94457f450775ecee4d0224ff6bf04fb099ca6c,[split] Merge branch 'master' of https://git.twitter.biz/birdcage
xsl,2012-02-29 18:48:47,https://api.github.com/repos/twitter/finagle/git/commits/267451bd12fbf2ab1464ebb83c8715ab44eba3d7,267451bd12fbf2ab1464ebb83c8715ab44eba3d7,"[split] Update finagle, scribe to latest zookeeper, minor TW changes"
mariusae,2012-02-29 18:29:05,https://api.github.com/repos/twitter/finagle/git/commits/dac78663222ab02ebb91ce7ce01487b8232d2a94,dac78663222ab02ebb91ce7ce01487b8232d2a94,actually include the bootstrapped sbt.
mariusae,2012-02-29 18:27:46,https://api.github.com/repos/twitter/finagle/git/commits/690254ffa8f86224b513ee565767445b092df297,690254ffa8f86224b513ee565767445b092df297,bootstrapped sbt
mariusae,2012-02-29 18:16:24,https://api.github.com/repos/twitter/finagle/git/commits/9a6cb11fd6986eb09385a4a04a84416cc4d17ffa,9a6cb11fd6986eb09385a4a04a84416cc4d17ffa,Merge branch 'master' of github.com:twitter/finagle
johanoskarsson,2012-02-28 20:26:48,https://api.github.com/repos/twitter/finagle/git/commits/1a73394724c6f1990697204a3ed18746c19256c4,1a73394724c6f1990697204a3ed18746c19256c4,[split] Enable tracing for the RichHttp codec
mariusae,2012-02-27 22:26:17,https://api.github.com/repos/twitter/finagle/git/commits/a6d49225d8a3a6861b4b647ee7ca48af5d270512,a6d49225d8a3a6861b4b647ee7ca48af5d270512,"[split] finagle, util: update changelogs"
mariusae,2012-02-27 22:25:57,https://api.github.com/repos/twitter/finagle/git/commits/e6110c5623755850893da3b4d0b28566a64eea22,e6110c5623755850893da3b4d0b28566a64eea22,"[split] org=com.twitter,name=finagle,version=2.0.1-SNAPSHOT"
mariusae,2012-02-27 22:25:57,https://api.github.com/repos/twitter/finagle/git/commits/63195c2ec98971c31437e84565a3fbac5ce3c59b,63195c2ec98971c31437e84565a3fbac5ce3c59b,"[split] org=com.twitter,name=finagle,version=2.0.0"
mariusae,2012-02-27 22:17:26,https://api.github.com/repos/twitter/finagle/git/commits/140cb5d1e0543b8882da1294e68866f2f09a249b,140cb5d1e0543b8882da1294e68866f2f09a249b,[split] 2.0.0-SNAPSHOT
mariusae,2012-02-27 20:04:35,https://api.github.com/repos/twitter/finagle/git/commits/f17b31e355ca3407b6c4bdc2d27c20040c03937f,f17b31e355ca3407b6c4bdc2d27c20040c03937f,[split] updated versions.properties
mariusae,2012-02-27 20:04:35,https://api.github.com/repos/twitter/finagle/git/commits/19091ba7d9a6a51def77141e5a5ec0d034ab2778,19091ba7d9a6a51def77141e5a5ec0d034ab2778,[split] updated versions.properties
mariusae,2012-02-27 20:04:35,https://api.github.com/repos/twitter/finagle/git/commits/f4f8f3beb245b9b0d394003644514689008bb8cc,f4f8f3beb245b9b0d394003644514689008bb8cc,[split] updated versions.properties
mariusae,2012-02-27 19:05:16,https://api.github.com/repos/twitter/finagle/git/commits/996911d188546e71fd9b9551ae44f47d35dc5103,996911d188546e71fd9b9551ae44f47d35dc5103,"[split] upgrade birdcage to guava 11

Guava 11 deprecated (removed!) MapMaker in favor of CacheBuilder."
johanoskarsson,2012-02-23 20:51:36,https://api.github.com/repos/twitter/finagle/git/commits/3dcda3ddb04b09115f3ab2a478bd89977ea073a5,3dcda3ddb04b09115f3ab2a478bd89977ea073a5,[split] Fix DeadlineSpanMapSpec by using mock timer. Hopefully this makes the test more deterministic.
mariusae,2012-02-23 00:39:10,https://api.github.com/repos/twitter/finagle/git/commits/2105cd1727ea2bb0fbb18c396410c647a35225b8,2105cd1727ea2bb0fbb18c396410c647a35225b8,[split] Clean up kestrel server for new factory interface.
mariusae,2012-02-22 22:43:19,https://api.github.com/repos/twitter/finagle/git/commits/007f4f0e14eb39c113d1482fcace437ec0a8f8ec,007f4f0e14eb39c113d1482fcace437ec0a8f8ec,"Merge pull request #64 from kolbasov/master

Typo in README.md"
mariusae,2012-02-17 19:01:26,https://api.github.com/repos/twitter/finagle/git/commits/adb2068da0a64ba92c76c4fb99a1a1c763737c14,adb2068da0a64ba92c76c4fb99a1a1c763737c14,[split] some more tweaks to memcache stress test use one connection per process.
mariusae,2012-02-17 18:27:59,https://api.github.com/repos/twitter/finagle/git/commits/134b0ba44b7fd1110d48a1371e671596ab1bbfc8,134b0ba44b7fd1110d48a1371e671596ab1bbfc8,"[split] finagle: unify factories

Get rid of the notion of a separate ""factory"" for server-side services.

Required for mux support."
mariusae,2012-02-16 17:18:47,https://api.github.com/repos/twitter/finagle/git/commits/783f3a301c4f8b4195502b7abf7c100659c77ba0,783f3a301c4f8b4195502b7abf7c100659c77ba0,"[split] finagle, util, ostrich: add csl as review group"
mariusae,2012-02-16 00:39:58,https://api.github.com/repos/twitter/finagle/git/commits/cd4ca6afca7a819fe9c22109e8f00b09e56f9bcc,cd4ca6afca7a819fe9c22109e8f00b09e56f9bcc,[split] finagle: update changelog
mariusae,2012-02-16 00:13:48,https://api.github.com/repos/twitter/finagle/git/commits/2149aa82c6d7a4dc0535c50fb027dba6bd0de449,2149aa82c6d7a4dc0535c50fb027dba6bd0de449,"[split] org=com.twitter,name=finagle,version=1.11.2-SNAPSHOT"
mariusae,2012-02-16 00:13:48,https://api.github.com/repos/twitter/finagle/git/commits/623e65bf749820dd3caa74cbe051bffcf57dfd3a,623e65bf749820dd3caa74cbe051bffcf57dfd3a,"[split] org=com.twitter,name=finagle,version=1.11.1"
mariusae,2012-02-14 00:48:45,https://api.github.com/repos/twitter/finagle/git/commits/807e3ae6a57aafc88cc8576e8c8085e7330c95e1,807e3ae6a57aafc88cc8576e8c8085e7330c95e1,"[split] finagle: keep track of handler walltime (in NS)

useful for sanity checking of computations done in async contexts. (at
the roots of requests in servers, responses in clients)"
mariusae,2012-02-14 00:23:04,https://api.github.com/repos/twitter/finagle/git/commits/d4b3aee1bfa6bd274d7bf27f8e5876dd196345e3,d4b3aee1bfa6bd274d7bf27f8e5876dd196345e3,[split] finagle: update changelog
mariusae,2012-02-14 00:19:06,https://api.github.com/repos/twitter/finagle/git/commits/59bf6f6830299a5595052dd1c59e743cd9467abb,59bf6f6830299a5595052dd1c59e743cd9467abb,"[split] org=com.twitter,name=finagle,version=1.11.1-SNAPSHOT"
mariusae,2012-02-14 00:19:06,https://api.github.com/repos/twitter/finagle/git/commits/207f25aecc8d7b59da0fe2172430d732899c7eaa,207f25aecc8d7b59da0fe2172430d732899c7eaa,"[split] org=com.twitter,name=finagle,version=1.11.0"
mariusae,2012-02-14 00:15:02,https://api.github.com/repos/twitter/finagle/git/commits/e3b134d8701fe611ec05fbc40f48080640ad4f86,e3b134d8701fe611ec05fbc40f48080640ad4f86,[split] un unpublish redis project
mariusae,2012-02-14 00:04:51,https://api.github.com/repos/twitter/finagle/git/commits/04129022fce759de375de4d180990036eba82c89,04129022fce759de375de4d180990036eba82c89,[split] updated versions.properties
mariusae,2012-02-14 00:04:51,https://api.github.com/repos/twitter/finagle/git/commits/6232a19eef58d35d53f49f59a25fa52e31dd7279,6232a19eef58d35d53f49f59a25fa52e31dd7279,[split] updated versions.properties
mariusae,2012-02-14 00:04:51,https://api.github.com/repos/twitter/finagle/git/commits/dab6e50b2ae1faf4707bf49b87f338e3d3fbe90d,dab6e50b2ae1faf4707bf49b87f338e3d3fbe90d,[split] updated versions.properties
mariusae,2012-02-14 00:04:51,https://api.github.com/repos/twitter/finagle/git/commits/b0836a272e03a8b26b95ba57a6533d141ec309c6,b0836a272e03a8b26b95ba57a6533d141ec309c6,[split] updated versions.properties
mariusae,2012-02-13 23:03:52,https://api.github.com/repos/twitter/finagle/git/commits/859d1bc146a0752c53fae53222284237113d6856,859d1bc146a0752c53fae53222284237113d6856,Merge branch 'bc'
mariusae,2012-02-10 21:30:38,https://api.github.com/repos/twitter/finagle/git/commits/0a995e1ae643471622873cf89d3f3df799ad6d59,0a995e1ae643471622873cf89d3f3df799ad6d59,"Merge pull request #59 from bdd/master

Minor errors in Scaladoc"
bdd,2012-02-10 00:12:17,https://api.github.com/repos/twitter/finagle/git/commits/03327a2fdfd27ea844e0d20dd38dca022b9bfeb7,03327a2fdfd27ea844e0d20dd38dca022b9bfeb7,Scaladoc fixes
mariusae,2012-02-09 22:49:54,https://api.github.com/repos/twitter/finagle/git/commits/8ddaff46414def3b1fd920a60c3f222f4a1c69c0,8ddaff46414def3b1fd920a60c3f222f4a1c69c0,[split] SummarizingStatsReceiver: make sure the array sort works with stable values.
mariusae,2012-02-09 22:47:45,https://api.github.com/repos/twitter/finagle/git/commits/90e02f19f510580244355878b3c4671209fefd0c,90e02f19f510580244355878b3c4671209fefd0c,"[split] ServerBuilder: Refactor, simplify

this is step 1 in preparation for factory cleanup and native mux
support."
mariusae,2012-02-09 22:07:16,https://api.github.com/repos/twitter/finagle/git/commits/4ae2b51af9332f5ca28eb62a893cd033557451a8,4ae2b51af9332f5ca28eb62a893cd033557451a8,"[split] tunable memcache example

this way we can pack it up and experiment with parameters in
production. also includes stats so we can do real introspection."
mariusae,2012-02-09 00:15:04,https://api.github.com/repos/twitter/finagle/git/commits/6b761a98f22352f0f9c40da0d7f974a58d5bc622,6b761a98f22352f0f9c40da0d7f974a58d5bc622,[split] topo: a minimal appserver topology for profiling and testing
mariusae,2012-02-08 18:20:15,https://api.github.com/repos/twitter/finagle/git/commits/7ec22c0a27b20734fc85941dfa123bf8d0008002,7ec22c0a27b20734fc85941dfa123bf8d0008002,"[split] Revert ""Flush span if timeout occurs""

This reverts commit e62c19ca2253b08a0f6202fea24fbc31d2bd0df1."
stevegury,2012-02-02 21:14:01,https://api.github.com/repos/twitter/finagle/git/commits/bb8faece4546321dca5a3938105dc55417f647a9,bb8faece4546321dca5a3938105dc55417f647a9,[split] Automatically import Netty Sources
bmatheny,2012-01-25 03:51:05,https://api.github.com/repos/twitter/finagle/git/commits/0ea4d76315c3ed0f94d8585f029130e9eddbb114,0ea4d76315c3ed0f94d8585f029130e9eddbb114,Merge branch 'master' of https://github.com/twitter/finagle
mariusae,2012-01-24 19:48:13,https://api.github.com/repos/twitter/finagle/git/commits/feb5c35f5f677e5e6f210165d932879e0ba7f27d,feb5c35f5f677e5e6f210165d932879e0ba7f27d,[split] finagle: ChangeLog
mariusae,2012-01-24 19:37:13,https://api.github.com/repos/twitter/finagle/git/commits/25d04045fb1c518b145a650bdc15f0fbf241c633,25d04045fb1c518b145a650bdc15f0fbf241c633,"[split] org=com.twitter,name=finagle,version=1.10.1-SNAPSHOT"
mariusae,2012-01-24 19:37:13,https://api.github.com/repos/twitter/finagle/git/commits/5514fe7d1b703e9fa906a44dec51644e15e6e9c3,5514fe7d1b703e9fa906a44dec51644e15e6e9c3,"[split] org=com.twitter,name=finagle,version=1.10.0"
mariusae,2012-01-24 19:34:23,https://api.github.com/repos/twitter/finagle/git/commits/2862361ea725f563f8ae3e7917ecd203554dbc84,2862361ea725f563f8ae3e7917ecd203554dbc84,[split] UnpublishedProject does not work
mariusae,2012-01-24 19:25:11,https://api.github.com/repos/twitter/finagle/git/commits/0f6f8956c960de19bf52b1ebd474d6127f1ced81,0f6f8956c960de19bf52b1ebd474d6127f1ced81,[split] 1.10.0-SNAPSHOT
mariusae,2012-01-24 19:23:03,https://api.github.com/repos/twitter/finagle/git/commits/e12b143ef44e931df02eacf2141c951a17faba56,e12b143ef44e931df02eacf2141c951a17faba56,[split] updated versions.properties
mariusae,2012-01-24 19:23:03,https://api.github.com/repos/twitter/finagle/git/commits/39f282ca67d1db255ae1369a2d33d8adbebf640d,39f282ca67d1db255ae1369a2d33d8adbebf640d,[split] updated versions.properties
mariusae,2012-01-24 19:23:03,https://api.github.com/repos/twitter/finagle/git/commits/1a9864e6957fe53cc7960a90625e29d9804d8b84,1a9864e6957fe53cc7960a90625e29d9804d8b84,[split] updated versions.properties
mariusae,2012-01-24 18:23:16,https://api.github.com/repos/twitter/finagle/git/commits/eb3b8567c28246bf3eba745081d9d1559297d889,eb3b8567c28246bf3eba745081d9d1559297d889,[split] updated versions.properties
mariusae,2012-01-24 18:23:15,https://api.github.com/repos/twitter/finagle/git/commits/f18ab8084d4805987a7067cf5c029306fc44d1be,f18ab8084d4805987a7067cf5c029306fc44d1be,[split] updated versions.properties
mariusae,2012-01-23 21:27:52,https://api.github.com/repos/twitter/finagle/git/commits/ca176658e3050a30229960610a48e49ab64580d1,ca176658e3050a30229960610a48e49ab64580d1,"[split] ServiceToChannelHandler: mute some exceptions

Some exceptions are  not really exceptional.

This revives an 'exceptional exceptions' list we used to have before
the monitor patch."
mariusae,2012-01-21 01:20:01,https://api.github.com/repos/twitter/finagle/git/commits/423d562e157f234a75e963b2e006038ed2157975,423d562e157f234a75e963b2e006038ed2157975,"[split] Revert ""Adds new resource management concept to builders""

This reverts commit d8b89350a1eb91e1c0f1f2eaa920d60448a63448."
mariusae,2012-01-20 00:02:50,https://api.github.com/repos/twitter/finagle/git/commits/129482a854e3f9ffa8d178ad42519ce1b6c4dcfc,129482a854e3f9ffa8d178ad42519ce1b6c4dcfc,"[split] Noisier, more robust monitoring.

    1. the server channel monitor logs (SEVERE) by default
    2. the BrokerChannelHandler requires ExceptionEvents to be handled immediately

Example error:

SEVERE: Unhandled exception ""java.lang.StackOverflowError"" on connection with peer /127.0.0.1:52586, shutting down connection"
bmatheny,2012-01-14 02:45:18,https://api.github.com/repos/twitter/finagle/git/commits/9d0b0cde5b537219d3f949d83da3527c3149bc32,9d0b0cde5b537219d3f949d83da3527c3149bc32,Merge branch 'master' of https://github.com/twitter/finagle
bmatheny,2012-01-11 03:11:09,https://api.github.com/repos/twitter/finagle/git/commits/47c0cf27b261414a7e7df86e0b451b960fcc53aa,47c0cf27b261414a7e7df86e0b451b960fcc53aa,Merge branch 'master' of https://github.com/twitter/finagle
blackicewei,2012-01-09 17:09:48,https://api.github.com/repos/twitter/finagle/git/commits/4925f4bd5750b2fc12f634fca4b17746003aa0be,4925f4bd5750b2fc12f634fca4b17746003aa0be,[split]  avoid infinit loop
yuhua,2012-01-07 05:59:13,https://api.github.com/repos/twitter/finagle/git/commits/abd0ebe64bae02466a3ab76d41a6327169ea12a8,abd0ebe64bae02466a3ab76d41a6327169ea12a8,[split] Add a status code (dead) to the waitResponse() loop to handle concurrent events while closing channel. Add a few tests too. Change BadHttpRequest to case class so the errorCode can be retrieved.
mariusae,2012-01-06 17:22:52,https://api.github.com/repos/twitter/finagle/git/commits/c30ba58acfc19b96807f72162dcdd913365e2de2,c30ba58acfc19b96807f72162dcdd913365e2de2,"[split] finagle redis client from Tumblr

it's currently unpublished, but fully functional."
mariusae,2012-01-05 23:06:03,https://api.github.com/repos/twitter/finagle/git/commits/71ceb4024f81ed2fb79bd098035ddd39c0e2f790,71ceb4024f81ed2fb79bd098035ddd39c0e2f790,"[split] LoadBalancerTest: add total count

this makes it easy to profile with gcprof."
mariusae,2012-01-05 19:01:02,https://api.github.com/repos/twitter/finagle/git/commits/95a852aae680c6ca43b63385ce2373c9592e91fd,95a852aae680c6ca43b63385ce2373c9592e91fd,[split] finagle: ChangeLog
mariusae,2012-01-05 18:50:23,https://api.github.com/repos/twitter/finagle/git/commits/983138499e1b66e97877a7fd8367cbf5695700df,983138499e1b66e97877a7fd8367cbf5695700df,"[split] org=com.twitter,name=finagle,version=1.9.13-SNAPSHOT"
mariusae,2012-01-05 18:50:23,https://api.github.com/repos/twitter/finagle/git/commits/8ca6c8e7225fff3e584742feaac4e4f9d6ca61e5,8ca6c8e7225fff3e584742feaac4e4f9d6ca61e5,"[split] org=com.twitter,name=finagle,version=1.9.12"
mariusae,2012-01-05 18:46:51,https://api.github.com/repos/twitter/finagle/git/commits/13d30c486e070be13989f5ee7a24fb63084f2426,13d30c486e070be13989f5ee7a24fb63084f2426,"[split] org=com.twitter,name=finagle,version=1.9.12-SNAPSHOT"
mariusae,2012-01-05 18:46:51,https://api.github.com/repos/twitter/finagle/git/commits/0b1a909af84ab2eea20189149858ffa6d5ce5386,0b1a909af84ab2eea20189149858ffa6d5ce5386,"[split] org=com.twitter,name=finagle,version=1.9.11"
mariusae,2012-01-05 18:36:45,https://api.github.com/repos/twitter/finagle/git/commits/192568c6d81ea268c8c469965c879a384786ec48,192568c6d81ea268c8c469965c879a384786ec48,[split] updated versions.properties
mariusae,2012-01-05 18:26:58,https://api.github.com/repos/twitter/finagle/git/commits/6b5257917d8bf0e8ffe27d4b0e7c4d603dedbecd,6b5257917d8bf0e8ffe27d4b0e7c4d603dedbecd,[split] updated versions.properties
mariusae,2012-01-05 18:02:24,https://api.github.com/repos/twitter/finagle/git/commits/e26875afb395964b184f2dc910f34fe9204c5f3d,e26875afb395964b184f2dc910f34fe9204c5f3d,[split] updated versions.properties
mariusae,2012-01-05 18:02:24,https://api.github.com/repos/twitter/finagle/git/commits/f0f823889806b7926d344bddb7706b097d801df6,f0f823889806b7926d344bddb7706b097d801df6,[split] updated versions.properties
johanoskarsson,2011-12-21 18:29:15,https://api.github.com/repos/twitter/finagle/git/commits/d698c3748b1c2e8950cd6ad21b2e12f3c7c7844c,d698c3748b1c2e8950cd6ad21b2e12f3c7c7844c,[split] Allow users to set sample rate when constructing b3 tracer factory
stevegury,2011-12-20 23:17:41,https://api.github.com/repos/twitter/finagle/git/commits/3b2eaa4551ff9f2172a45fdf9e0e54cdfe7b9fa7,3b2eaa4551ff9f2172a45fdf9e0e54cdfe7b9fa7,"[split] Since ClientBuilder now install ChannelStatsHandler, remove ""connections"" gauge in ChannelServiceFactory"
mariusae,2011-12-16 18:46:29,https://api.github.com/repos/twitter/finagle/git/commits/689a64b7e4df1af903309e32ea55b282c7f9fadf,689a64b7e4df1af903309e32ea55b282c7f9fadf,[split] Merge commit '4c4dedd546ede744fb626fa6b7388b47d46fdcfb'
mariusae,2011-12-16 18:36:27,https://api.github.com/repos/twitter/finagle/git/commits/4c4dedd546ede744fb626fa6b7388b47d46fdcfb,4c4dedd546ede744fb626fa6b7388b47d46fdcfb,CONTRIBUTORS: git shortlog -se | drop 1
mariusae,2011-12-16 18:36:00,https://api.github.com/repos/twitter/finagle/git/commits/95547409236ad053e4ac94307857ee6091fa834d,95547409236ad053e4ac94307857ee6091fa834d,add a .mailmap
mariusae,2011-12-16 17:43:56,https://api.github.com/repos/twitter/finagle/git/commits/f4e0ae51d750a4c0c5b7ad307be79599223b855f,f4e0ae51d750a4c0c5b7ad307be79599223b855f,"Merge pull request #56 from mccue/master

Updated README.md to provide a new Java pattern for handling async. server requests"
johanoskarsson,2011-12-15 22:22:00,https://api.github.com/repos/twitter/finagle/git/commits/6660b40aecde115a9d118636a5358a38953e6412,6660b40aecde115a9d118636a5358a38953e6412,"[split] Move all Cassandra related storage classes into the .storage.cassandra package. Until we can compress data on the Cassandra side we will compress on write using Snappy (lzo style compressor from Google, but under Apache 2 license)."
mccue,2011-12-15 21:57:28,https://api.github.com/repos/twitter/finagle/git/commits/e517f17c214d17a7a1ed5223794397e716811174,e517f17c214d17a7a1ed5223794397e716811174,"Changed Java pattern for async. server requests

Removed references to Promise and included example implementing
asynchronous operations by calling a `Future` object's
`getContentAsync` method to obtain the content from an asynchronous
request."
mccue,2011-12-15 21:05:33,https://api.github.com/repos/twitter/finagle/git/commits/cb400d55e5c3833160ea6254c9949feabac51a45,cb400d55e5c3833160ea6254c9949feabac51a45,"Revert ""Revised Java pattern in README.md for handling async server requests and added Bootstrap files.""

This reverts commit 63e146701d8716404a14b40254c3d83f1f23cff7."
mccue,2011-12-15 20:35:51,https://api.github.com/repos/twitter/finagle/git/commits/63e146701d8716404a14b40254c3d83f1f23cff7,63e146701d8716404a14b40254c3d83f1f23cff7,"Revised Java pattern in README.md for handling async server requests and added Bootstrap files.

Bootstrap used by http://twitter.github.com/finagle/index.html"
johanoskarsson,2011-12-14 23:44:19,https://api.github.com/repos/twitter/finagle/git/commits/a0185fe3dfbc1f2bb2ca45319a1cc03edce1af8f,a0185fe3dfbc1f2bb2ca45319a1cc03edce1af8f,[split] If we want to trace a service that also is a scribe endpoint we run into clashes where the scribe classes exists multiple times causing a compilation error. This branch just renames the b3 scribe package to avoid that problem.
stevegury,2011-12-13 22:32:34,https://api.github.com/repos/twitter/finagle/git/commits/1f3e6356f5c9b88b19bc9e4a7008086116b7d44e,1f3e6356f5c9b88b19bc9e4a7008086116b7d44e,"[split] For debugging reasons it is helpful to have name on threads, so I add a NamedPoolThreadFactory on every ThreadPoolFactory"
stevegury,2011-12-13 00:14:31,https://api.github.com/repos/twitter/finagle/git/commits/02078655a1752ee379a2a40b584ed3982bf28759,02078655a1752ee379a2a40b584ed3982bf28759,"[split] FastFailFactory, fail fast when host is unavailable but try to reconnect regularly - If we are not limited: Just go through, every connection exception toggle the isLimited flag to true. - If we are limited: Acquire a ""Token"" (AtomicInteger) that allow you to establish a connection. If the connection   succeed the isLimited flag is set back to false."
bmatheny,2011-12-09 18:26:05,https://api.github.com/repos/twitter/finagle/git/commits/9e9392dfb7787d922317cb2c1993fa12d0ea18e4,9e9392dfb7787d922317cb2c1993fa12d0ea18e4,"Updating to trunk, fixed broken merge"
bmatheny,2011-12-09 18:21:38,https://api.github.com/repos/twitter/finagle/git/commits/68d6eb47ee2d9bc4a4f4f6e40fe7aebd5d6f5462,68d6eb47ee2d9bc4a4f4f6e40fe7aebd5d6f5462,Kestrel depends on AbstractDecodingToResponse.
mariusae,2011-12-09 18:03:04,https://api.github.com/repos/twitter/finagle/git/commits/1a478e44282929aa0b5b3b66e19e4e0a8882ad0c,1a478e44282929aa0b5b3b66e19e4e0a8882ad0c,[split] kestrel: parseStatsLines - not yet supported
mariusae,2011-12-09 17:50:27,https://api.github.com/repos/twitter/finagle/git/commits/24180be4e7a616e69b25c22dd8f8d888ef470772,24180be4e7a616e69b25c22dd8f8d888ef470772,[split] finagle/ClientBuilder: fix up SSL factory invocation syntax
mariusae,2011-12-09 17:48:11,https://api.github.com/repos/twitter/finagle/git/commits/928945ca072248dfbbb5ad82bf26fdcafd6911d5,928945ca072248dfbbb5ad82bf26fdcafd6911d5,"Merge pull request #51 from jluxenberg/master

SSLEngine instances must not be reused between connections"
mariusae,2011-12-09 17:47:03,https://api.github.com/repos/twitter/finagle/git/commits/9d060f94f09b663822966f9a6f5e04942a3fc2f6,9d060f94f09b663822966f9a6f5e04942a3fc2f6,"Merge pull request #52 from bmatheny/error-handling

Support for error encoding"
mariusae,2011-12-09 17:45:40,https://api.github.com/repos/twitter/finagle/git/commits/f99d0c8bdc4966840bbdc47573ffd419506e9fac,f99d0c8bdc4966840bbdc47573ffd419506e9fac,Merge branch 'bc'
stevegury,2011-12-07 21:34:58,https://api.github.com/repos/twitter/finagle/git/commits/aa6ffaf1b554cb10571f36e051388fa64ecd881d,aa6ffaf1b554cb10571f36e051388fa64ecd881d,"[split] Merge branch 'master' of https://git.twitter.biz/birdcage into finagle/rate-limiting

Conflicts:
	finagle/finagle-core/src/main/scala/com/twitter/finagle/Exceptions.scala"
stevegury,2011-12-07 21:33:29,https://api.github.com/repos/twitter/finagle/git/commits/6c1557b52d6852cd1fab124f76aebfc35782183d,6c1557b52d6852cd1fab124f76aebfc35782183d,[split] Add private[this] and fix potential time consistency bug
stevegury,2011-12-07 21:27:24,https://api.github.com/repos/twitter/finagle/git/commits/8fb80cf47324b38c04335f9e6db25abe607d230a,8fb80cf47324b38c04335f9e6db25abe607d230a,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into finagle/channel_stats_in_client
stevegury,2011-12-07 21:24:22,https://api.github.com/repos/twitter/finagle/git/commits/fe6bc4050acf03e435b26063fd02ac74cf05dc76,fe6bc4050acf03e435b26063fd02ac74cf05dc76,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into connection-limitation
stevegury,2011-12-06 00:02:24,https://api.github.com/repos/twitter/finagle/git/commits/4cd3944690bfa2a492b66015c7210c02710ab374,4cd3944690bfa2a492b66015c7210c02710ab374,[split] Add ChannelRequestStatsHandler
stevegury,2011-12-05 23:57:03,https://api.github.com/repos/twitter/finagle/git/commits/d4e92893b9ab8079f2f1244a181f2fb61f2d5dc1,d4e92893b9ab8079f2f1244a181f2fb61f2d5dc1,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into finagle/channel_stats_in_client
stevegury,2011-12-05 23:55:08,https://api.github.com/repos/twitter/finagle/git/commits/b7023bb4954b1c237e43c898f7b56d56a367371c,b7023bb4954b1c237e43c898f7b56d56a367371c,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into finagle/rate-limiting
stevegury,2011-12-05 23:53:58,https://api.github.com/repos/twitter/finagle/git/commits/38b64b91e3947339b35263e650030ede64900c58,38b64b91e3947339b35263e650030ede64900c58,[split] Simplify the RateLimiting strategy
stevegury,2011-12-05 22:16:50,https://api.github.com/repos/twitter/finagle/git/commits/599342624fc431c652735e6726233105cb278f36,599342624fc431c652735e6726233105cb278f36,[split] Remove type alias
stevegury,2011-12-05 22:08:00,https://api.github.com/repos/twitter/finagle/git/commits/5e1302d21790aaf494d13165b9b9cb054327209f,5e1302d21790aaf494d13165b9b9cb054327209f,[split] Fix code style + move RateLimitingStartegy trait to a type alias
stevegury,2011-12-05 21:39:02,https://api.github.com/repos/twitter/finagle/git/commits/63aa7278c3b11f26681b3e050356772806ef003c,63aa7278c3b11f26681b3e050356772806ef003c,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into connection-limitation
stevegury,2011-12-05 21:38:21,https://api.github.com/repos/twitter/finagle/git/commits/5d0882221a911f31d99c3036e84da5352a4cc6a0,5d0882221a911f31d99c3036e84da5352a4cc6a0,[split] Fix ConnectionRefusedException + scoped the StatsReceiver of IdleConnectionFilter
mariusae,2011-12-02 19:00:51,https://api.github.com/repos/twitter/finagle/git/commits/3850552f1bcab22be025fae44002b20c71c4b7e1,3850552f1bcab22be025fae44002b20c71c4b7e1,[split] finagle: update changelog
mariusae,2011-12-02 18:55:58,https://api.github.com/repos/twitter/finagle/git/commits/110da7e923ff51ca0bb86e5b6260c4ad1d200ba2,110da7e923ff51ca0bb86e5b6260c4ad1d200ba2,"[split] org=com.twitter,name=finagle,version=1.9.11-SNAPSHOT"
mariusae,2011-12-02 18:55:58,https://api.github.com/repos/twitter/finagle/git/commits/d092c4efd574851d15acc190385de1a7c4436c40,d092c4efd574851d15acc190385de1a7c4436c40,"[split] org=com.twitter,name=finagle,version=1.9.10"
mariusae,2011-12-02 17:56:22,https://api.github.com/repos/twitter/finagle/git/commits/1ca19144d4ae3c07a93197fba948816f1b798794,1ca19144d4ae3c07a93197fba948816f1b798794,[split] updated versions.properties
mariusae,2011-12-02 17:56:22,https://api.github.com/repos/twitter/finagle/git/commits/135113503749a19ccfe81bae151cf20462bcc63e,135113503749a19ccfe81bae151cf20462bcc63e,[split] updated versions.properties
bmatheny,2011-12-02 17:18:46,https://api.github.com/repos/twitter/finagle/git/commits/66798c603745ce842998f73d995d43bf1b3dbeee,66798c603745ce842998f73d995d43bf1b3dbeee,Support for error encoding
stevegury,2011-12-02 00:31:52,https://api.github.com/repos/twitter/finagle/git/commits/ec485dcfc5fcdb2cf9a767b52a2ca1b868f8a6b4,ec485dcfc5fcdb2cf9a767b52a2ca1b868f8a6b4,[split] Add ChannelStatsHandler on client side
bmatheny,2011-12-02 00:29:07,https://api.github.com/repos/twitter/finagle/git/commits/40147951e059eab2b230a4192abd73c2101a4c56,40147951e059eab2b230a4192abd73c2101a4c56,"No need for an empty check, result is the same."
bmatheny,2011-12-02 00:26:14,https://api.github.com/repos/twitter/finagle/git/commits/96f56fc109fc3509a5c29d02d08c6391fa102477,96f56fc109fc3509a5c29d02d08c6391fa102477,"Use Nil, per comments from @arya"
mariusae,2011-12-01 21:43:17,https://api.github.com/repos/twitter/finagle/git/commits/1081b4bb86592d8dad225c24165ad52d9c9e3258,1081b4bb86592d8dad225c24165ad52d9c9e3258,[split] finagle: update changelog
mariusae,2011-12-01 21:36:30,https://api.github.com/repos/twitter/finagle/git/commits/cef55843dea6f5356d8bcfb6c3a0a6eee1245574,cef55843dea6f5356d8bcfb6c3a0a6eee1245574,"[split] org=com.twitter,name=finagle,version=1.9.10-SNAPSHOT"
mariusae,2011-12-01 21:36:30,https://api.github.com/repos/twitter/finagle/git/commits/ee5c1f5305dca9043694fbe5a4ccc8b03ec4a48d,ee5c1f5305dca9043694fbe5a4ccc8b03ec4a48d,"[split] org=com.twitter,name=finagle,version=1.9.9"
mariusae,2011-12-01 21:30:45,https://api.github.com/repos/twitter/finagle/git/commits/6c506f16e0f1b7f2fef23b7369db566583197a93,6c506f16e0f1b7f2fef23b7369db566583197a93,[split] updated versions.properties
mariusae,2011-12-01 21:30:44,https://api.github.com/repos/twitter/finagle/git/commits/e831a873ca3a560c1c8512accd508862b3f3794e,e831a873ca3a560c1c8512accd508862b3f3794e,[split] updated versions.properties
stevegury,2011-12-01 02:27:01,https://api.github.com/repos/twitter/finagle/git/commits/166143c24b82fc81f1d6136356ce4a65f73f544b,166143c24b82fc81f1d6136356ce4a65f73f544b,[split] Refactor: Simplify by defining the trait RateLimitingStrategy
jluxenberg,2011-12-01 01:29:36,https://api.github.com/repos/twitter/finagle/git/commits/ed7efcde0e0640a1a31565fff740707c91959db4,ed7efcde0e0640a1a31565fff740707c91959db4,SSLEngine instances must not be reused between connections
stevegury,2011-12-01 01:11:29,https://api.github.com/repos/twitter/finagle/git/commits/5ddc2b9b3666b87c410a8cf7d4040ba62c7b3867,5ddc2b9b3666b87c410a8cf7d4040ba62c7b3867,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into finagle/rate-limiting
stevegury,2011-12-01 01:08:22,https://api.github.com/repos/twitter/finagle/git/commits/85edca985418d78b027724eff1a3ffda4888bcc8,85edca985418d78b027724eff1a3ffda4888bcc8,"[split] Minor refactor of connections counting, + some renaming"
stevegury,2011-12-01 00:38:55,https://api.github.com/repos/twitter/finagle/git/commits/4933d54da8ef460a57e80278fedcea2874943e57,4933d54da8ef460a57e80278fedcea2874943e57,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into connection-limitation
mariusae,2011-11-30 18:21:30,https://api.github.com/repos/twitter/finagle/git/commits/8734f75508f86a908c07b0b3df4aef959aa71147,8734f75508f86a908c07b0b3df4aef959aa71147,[split] Merge branch 'master' of https://git.twitter.biz/birdcage
mariusae,2011-11-30 18:21:17,https://api.github.com/repos/twitter/finagle/git/commits/bdef6903c044847403215381679ebee4406094a7,bdef6903c044847403215381679ebee4406094a7,[split] finagle: update ChangeLog
mariusae,2011-11-30 18:08:20,https://api.github.com/repos/twitter/finagle/git/commits/f66d60218584470981c30ed19e90d7f8ad5868a9,f66d60218584470981c30ed19e90d7f8ad5868a9,"[split] org=com.twitter,name=finagle,version=1.9.9-SNAPSHOT"
mariusae,2011-11-30 18:08:20,https://api.github.com/repos/twitter/finagle/git/commits/c9fabd2f9c0c95c96c889838d428d6a9f8750c55,c9fabd2f9c0c95c96c889838d428d6a9f8750c55,"[split] org=com.twitter,name=finagle,version=1.9.8"
stevegury,2011-11-30 17:59:16,https://api.github.com/repos/twitter/finagle/git/commits/d06d1acb183cd584ec0b395defa5f976aa972c1a,d06d1acb183cd584ec0b395defa5f976aa972c1a,[split] Truncate events list to the size of the window (avoid storing infinite list of events)
bmatheny,2011-11-30 14:57:05,https://api.github.com/repos/twitter/finagle/git/commits/cc081483a27fcc943cfd560728549bf66d771e42,cc081483a27fcc943cfd560728549bf66d771e42,ServerError instead of Exception
bmatheny,2011-11-30 03:46:01,https://api.github.com/repos/twitter/finagle/git/commits/04b3cbc9fe7611e25ea54cad81a2c6fbf8de2b4b,04b3cbc9fe7611e25ea54cad81a2c6fbf8de2b4b,Reverting Seq to original Array
bmatheny,2011-11-30 03:39:10,https://api.github.com/repos/twitter/finagle/git/commits/d0392b5c2b7e5975e0f70f1734c92cc308130c08,d0392b5c2b7e5975e0f70f1734c92cc308130c08,Move isStats near isEnd
bmatheny,2011-11-30 03:35:29,https://api.github.com/repos/twitter/finagle/git/commits/aa2f6c887cca96d996704089b79be91117986a05,aa2f6c887cca96d996704089b79be91117986a05,Merge branch 'master' into memcached-stats
bmatheny,2011-11-30 03:34:51,https://api.github.com/repos/twitter/finagle/git/commits/d5c01685230e0cdde2a93052532206199ba50fa4,d5c01685230e0cdde2a93052532206199ba50fa4,Add 'stats' support for memcache protocol.
stevegury,2011-11-30 01:23:50,https://api.github.com/repos/twitter/finagle/git/commits/db08d200dbeac5d9cb189f8b9e7de0f05dada7e9,db08d200dbeac5d9cb189f8b9e7de0f05dada7e9,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into finagle/rate-limiting
stevegury,2011-11-30 01:23:13,https://api.github.com/repos/twitter/finagle/git/commits/650a5b4001a44f6470b35173f7078ff3099ab215,650a5b4001a44f6470b35173f7078ff3099ab215,[split] RateLimitingFilter: A filter responsible for accepting/refusing request based on the requests rate
mariusae,2011-11-29 22:37:25,https://api.github.com/repos/twitter/finagle/git/commits/85550b04eb9d5fe47aed6deb95acd246bdf60ba1,85550b04eb9d5fe47aed6deb95acd246bdf60ba1,[split] finagle: update ChangeLog
mariusae,2011-11-29 22:35:39,https://api.github.com/repos/twitter/finagle/git/commits/6dad8c78770e30d7ef8bfec8fe9feedd234ac3f7,6dad8c78770e30d7ef8bfec8fe9feedd234ac3f7,"[split] org=com.twitter,name=finagle,version=1.9.8-SNAPSHOT"
mariusae,2011-11-29 22:35:39,https://api.github.com/repos/twitter/finagle/git/commits/b45847a307db1b6e39b7d348ca4fdd111e63755c,b45847a307db1b6e39b7d348ca4fdd111e63755c,"[split] org=com.twitter,name=finagle,version=1.9.7"
mariusae,2011-11-29 22:27:11,https://api.github.com/repos/twitter/finagle/git/commits/434c98b9a4cc123e32b23840f2d336c024840e0f,434c98b9a4cc123e32b23840f2d336c024840e0f,"[split] Revert ""upgrade to netty 3.2.7.Final""

This reverts commit c45e405acf0e0a1293f4df59d6b54d6cf9fb7723."
mariusae,2011-11-29 20:04:04,https://api.github.com/repos/twitter/finagle/git/commits/bcf5c27c18071a568ac75fb0d7503816c5b3a8a6,bcf5c27c18071a568ac75fb0d7503816c5b3a8a6,[split] updated versions.properties
mariusae,2011-11-29 20:04:04,https://api.github.com/repos/twitter/finagle/git/commits/f7f85b9b12d999f75ad858b3ab3e87577c966e40,f7f85b9b12d999f75ad858b3ab3e87577c966e40,[split] updated versions.properties
stevegury,2011-11-29 18:28:44,https://api.github.com/repos/twitter/finagle/git/commits/fe239619ef0f3f553383baf3f4cca50a01b13dde,fe239619ef0f3f553383baf3f4cca50a01b13dde,"[split] Merge branch 'master' of https://git.twitter.biz/birdcage into connection-limitation

Conflicts:
	finagle/finagle-core/src/main/scala/com/twitter/finagle/builder/ServerBuilder.scala"
johanoskarsson,2011-11-29 18:24:33,https://api.github.com/repos/twitter/finagle/git/commits/86ea6c7a873bdfe0d8a9c646a51bfb36de9a8557,86ea6c7a873bdfe0d8a9c646a51bfb36de9a8557,[split] IDEA project fixes  - Add idea.properties that excludes non-compiling resources in idea project. Include the silly thrift jar in idea projects
stevegury,2011-11-29 18:16:28,https://api.github.com/repos/twitter/finagle/git/commits/0cd6da12ecbe35f2c0d3cf9f8c324c7bb69e43a9,0cd6da12ecbe35f2c0d3cf9f8c324c7bb69e43a9,[split] Fix code according to Marius' comments
mariusae,2011-11-29 17:13:26,https://api.github.com/repos/twitter/finagle/git/commits/a9d71b3c8106505f03dbd5cabbdbc3e434317285,a9d71b3c8106505f03dbd5cabbdbc3e434317285,"[split] finagle: get rid of openConnectionsHealthThresholds

nobody uses it, and it's probably broken."
stevegury,2011-11-22 22:28:04,https://api.github.com/repos/twitter/finagle/git/commits/ca215f0810ca8f27e176954d9c61d212d55732fc,ca215f0810ca8f27e176954d9c61d212d55732fc,[split] Revert forgotten change
stevegury,2011-11-22 21:54:30,https://api.github.com/repos/twitter/finagle/git/commits/c7c397963a174210c28ef9a66d9fc4bdc03ccee6,c7c397963a174210c28ef9a66d9fc4bdc03ccee6,"[split] Merge branch 'master' of https://git.twitter.biz/birdcage into connection-limitation

Conflicts:
	finagle/finagle-core/src/main/scala/com/twitter/finagle/builder/ServerBuilder.scala"
stevegury,2011-11-22 21:51:06,https://api.github.com/repos/twitter/finagle/git/commits/7c0eccb5fb7ad88699d11d116a6a88af1e2cee9f,7c0eccb5fb7ad88699d11d116a6a88af1e2cee9f,[split] Refactor feature so that all the logic is in the IdleConnectionFilter.
mariusae,2011-11-18 23:03:04,https://api.github.com/repos/twitter/finagle/git/commits/33f1ac0b55f4d3fba69dbfcb8afa70299f579036,33f1ac0b55f4d3fba69dbfcb8afa70299f579036,[split] Merge branch 'master' of https://git.twitter.biz/birdcage
mariusae,2011-11-18 23:02:57,https://api.github.com/repos/twitter/finagle/git/commits/78d152c335fc041127ee3020d53e5b0bba042d62,78d152c335fc041127ee3020d53e5b0bba042d62,"[split] finagle/README: update, fixes"
mariusae,2011-11-18 22:36:37,https://api.github.com/repos/twitter/finagle/git/commits/9457fe22b682fe1ffed1be7e7368f9e1f6b54bb7,9457fe22b682fe1ffed1be7e7368f9e1f6b54bb7,[split] RetryingFilter: make usable from Java.
mariusae,2011-11-18 20:19:56,https://api.github.com/repos/twitter/finagle/git/commits/cfab724eb3227dd77e2468d692b52b8de7f8e127,cfab724eb3227dd77e2468d692b52b8de7f8e127,[split] finagle-memcached: fix up PHPMemCacheClient invocation.
mariusae,2011-11-18 20:17:48,https://api.github.com/repos/twitter/finagle/git/commits/09dd38592a77e5c62c9d695fc9ba75a9c944a610,09dd38592a77e5c62c9d695fc9ba75a9c944a610,"[split] Merge commit 'b67f90a42173767219f40b57e043529ad4a9b8d8'

Conflicts:
	finagle/project/versions.properties"
mariusae,2011-11-18 20:15:33,https://api.github.com/repos/twitter/finagle/git/commits/d60b9d515ccb04df425c6578aeac9e97810f3099,d60b9d515ccb04df425c6578aeac9e97810f3099,[split] monitors: composable widgets for handling exceptions
stevegury,2011-11-17 23:43:04,https://api.github.com/repos/twitter/finagle/git/commits/5ab9c22a47c904a42d27bfcf3afef7c4350536c1,5ab9c22a47c904a42d27bfcf3afef7c4350536c1,[split] Make some changes according to comments in review request #44517
johanoskarsson,2011-11-15 18:09:47,https://api.github.com/repos/twitter/finagle/git/commits/92c941890c2009a401b777093342dc4f28955640,92c941890c2009a401b777093342dc4f28955640,[split] Enable B3 tracing for TFE. Filter out finagle-http headers from incoming requests
stevegury,2011-11-14 20:09:02,https://api.github.com/repos/twitter/finagle/git/commits/b5d945bd7f78ae8e612fd6be152cb6a05549d044,b5d945bd7f78ae8e612fd6be152cb6a05549d044,[split] Refactor tests with Time.withTimeFunction
mariusae,2011-11-11 18:31:18,https://api.github.com/repos/twitter/finagle/git/commits/6c53193125796d25378f3c7cad694d7da5120d29,6c53193125796d25378f3c7cad694d7da5120d29,"Merge pull request #47 from bmatheny/memcache-flags

Flags should be retained when encoding response."
bmatheny,2011-11-11 14:50:18,https://api.github.com/repos/twitter/finagle/git/commits/57c94e9b6a38636d3d4dba6169d96f4cae79d9ea,57c94e9b6a38636d3d4dba6169d96f4cae79d9ea,Flags should be retained when decoding response.
stevegury,2011-11-10 22:46:14,https://api.github.com/repos/twitter/finagle/git/commits/0a2e8c35d0ddd068921d7d5043073d6505b9e793,0a2e8c35d0ddd068921d7d5043073d6505b9e793,"[split] Remove connection from idle connection handler at very request, not just the first time"
stevegury,2011-11-10 22:13:27,https://api.github.com/repos/twitter/finagle/git/commits/9b6bb7610eae015c3c5e3a9fba07a75f82d0e6a6,9b6bb7610eae015c3c5e3a9fba07a75f82d0e6a6,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into connection-limitation
stevegury,2011-11-10 22:12:27,https://api.github.com/repos/twitter/finagle/git/commits/a48dd4794ddb789e3cab1120db232d3f7d14cf53,a48dd4794ddb789e3cab1120db232d3f7d14cf53,[split] Don't keep track of connection until the server respond to the request
mariusae,2011-11-09 19:29:34,https://api.github.com/repos/twitter/finagle/git/commits/70e351da049c86c21da7d0cc9e24882de59e7957,70e351da049c86c21da7d0cc9e24882de59e7957,[split] updated versions.properties
mariusae,2011-11-09 19:29:33,https://api.github.com/repos/twitter/finagle/git/commits/9acc0b6c305c45f1aff3fbeacd124c5392822b78,9acc0b6c305c45f1aff3fbeacd124c5392822b78,[split] updated versions.properties
mariusae,2011-11-09 19:29:03,https://api.github.com/repos/twitter/finagle/git/commits/3feb679fb378c930060653cba2ff50a4d605e812,3feb679fb378c930060653cba2ff50a4d605e812,[split] projects: update to new SVN repo URLs
stevegury,2011-11-09 00:13:47,https://api.github.com/repos/twitter/finagle/git/commits/1aa5cd94b018dcba02a78b4d24119ae2a905e341,1aa5cd94b018dcba02a78b4d24119ae2a905e341,[split] Fix merge
stevegury,2011-11-08 23:30:31,https://api.github.com/repos/twitter/finagle/git/commits/45f0f3e9d060e7c651463ff71eb8b05f08e3eb92,45f0f3e9d060e7c651463ff71eb8b05f08e3eb92,"[split] Merge branch 'master' of https://git.twitter.biz/birdcage into connection-limitation

Conflicts:
	finagle/finagle-core/src/main/scala/com/twitter/finagle/builder/ServerBuilder.scala"
stevegury,2011-11-08 23:25:12,https://api.github.com/repos/twitter/finagle/git/commits/4f276c8d0929cf83b6b7513d477d6b2cba7f6366,4f276c8d0929cf83b6b7513d477d6b2cba7f6366,[split] Extract GenerationalQueue DataStructure
mariusae,2011-11-08 22:30:24,https://api.github.com/repos/twitter/finagle/git/commits/c34ac4c0b2546fb1575b955764e0da59bf592466,c34ac4c0b2546fb1575b955764e0da59bf592466,[split] finagle: update ChangeLog
mariusae,2011-11-08 22:30:05,https://api.github.com/repos/twitter/finagle/git/commits/ffa8aeb5c1d724cc2f4de4c24846f032f8f8fb1d,ffa8aeb5c1d724cc2f4de4c24846f032f8f8fb1d,"[split] org=com.twitter,name=finagle,version=1.9.7-SNAPSHOT"
mariusae,2011-11-08 22:30:05,https://api.github.com/repos/twitter/finagle/git/commits/33be45b246ed3dc6964d081cd09c3a038c6982e5,33be45b246ed3dc6964d081cd09c3a038c6982e5,"[split] org=com.twitter,name=finagle,version=1.9.6"
mariusae,2011-11-08 22:22:52,https://api.github.com/repos/twitter/finagle/git/commits/52f64d5a40b761538b0d30c961d11a697ffbba37,52f64d5a40b761538b0d30c961d11a697ffbba37,[split] updated versions.properties
mariusae,2011-11-08 22:22:52,https://api.github.com/repos/twitter/finagle/git/commits/7834a8e0546cb256caa784ef84e197cf8838a9f4,7834a8e0546cb256caa784ef84e197cf8838a9f4,[split] updated versions.properties
tsuna,2011-11-08 04:22:50,https://api.github.com/repos/twitter/finagle/git/commits/f26c69fecbb2202eb9a9c51721f9034de7f55db7,f26c69fecbb2202eb9a9c51721f9034de7f55db7,"Add a sensible toString method to http.{Request, Response}.

Because this:
  Query timeout on com.twitter.finagle.http.Request$$anon$3@305f387c
is a lot less useful than this:
  Query timeout on Request(""GET /foo"", from 10.42.42.42:56942)"
tsuna,2011-10-24 06:05:12,https://api.github.com/repos/twitter/finagle/git/commits/33b03e44cc9dcc549a2c71016baa1e78c748144c,33b03e44cc9dcc549a2c71016baa1e78c748144c,"memcached client: Add support for the PHP memcache.so client.

PHP has 2 popular clients, `memcache.so' and `memcached.so'
(which isn't confusing at all, right?).
  - memcache.so is from http://pecl.php.net/memcache
    hashing code is @
    http://svn.php.net/viewvc/pecl/memcache/trunk/memcache_standard_hash.c?revision=HEAD&view=markup
  - memcached.so is from http://pecl.php.net/memcached
    hashing code is @
    http://bazaar.launchpad.net/~libmemcached-developers/libmemcached/trunk/view/head:/libmemcached/hash.cc

This change adds a new type of memcache client to support users of the
`memcache' extension.  These users can use finagle's Ruby client if they
use CRC32, but that client doesn't support using any other hash function,
and the PHP `memcache' extension can use FNV1a-32, see:
  http://php.net/memcache.ini#ini.memcache.hash-function
The PHP client also supports weights, which aren't implemented in the
Ruby client.  Getting the weights right is required to hash to the same
servers, even if all the weights are equal.

Speaking of support for PHP clients, here's some info for posterity.
The only notable difference between the two is that the `memcache'
extension does this on the hash:
  hash = (hash >> 16) & 0x7fff;
like the Ruby client, but `memcached' doesn't.

For the `memcache' client, the standard hash strategy applies a modulo,
whereas the consistent strategy uses the following algorithm (pseudo code):
  hash = hashfunc(key);
  server = servers[hash % 1024];
  if (!server && allow_failover) {
    for (int i = 0; i < max_failover_attempts && i < 1024; i++) {
      next_key = key + ""-"" + i;
      hash = hashfunc(next_key);
      server = servers[hash % 1024];
      if (server) {  // We found a healthy one.
        break;
      }
    }
  }
  if (!server) {
    // error.
  } else {
    // success: use the connection to that server.
  }

For `memcached', consistent hashing is done with Ketama, which is
already supported in Finagle."
stevegury,2011-11-07 19:12:37,https://api.github.com/repos/twitter/finagle/git/commits/669f66b333feb752ddcb33ea47227154e4d5d3a2,669f66b333feb752ddcb33ea47227154e4d5d3a2,[split] Fix code style + change according to comments in review request #44517
johanoskarsson,2011-11-05 03:54:37,https://api.github.com/repos/twitter/finagle/git/commits/6d727ed50ec785c288b7924cd73cec95283cce16,6d727ed50ec785c288b7924cd73cec95283cce16,[split] Update configurations and libraries to use tracer factory introduced to make it possible to release resources properly in tracers
mariusae,2011-11-04 21:01:00,https://api.github.com/repos/twitter/finagle/git/commits/abd1ce417e6f1af9cb40afe1e838704e5e2a808b,abd1ce417e6f1af9cb40afe1e838704e5e2a808b,Merge branch 'bc'
mariusae,2011-11-04 19:09:40,https://api.github.com/repos/twitter/finagle/git/commits/2c50560c87be6836ba4f708908d158129bf0d894,2c50560c87be6836ba4f708908d158129bf0d894,[split] finagle: update changelog
mariusae,2011-11-04 19:05:21,https://api.github.com/repos/twitter/finagle/git/commits/3679b1daf169929d8484b6054aff872b8f0891b7,3679b1daf169929d8484b6054aff872b8f0891b7,"[split] org=com.twitter,name=finagle,version=1.9.6-SNAPSHOT"
mariusae,2011-11-04 19:05:21,https://api.github.com/repos/twitter/finagle/git/commits/4574fb17f3b1a80d85603aca5a5584d22d6d5ff0,4574fb17f3b1a80d85603aca5a5584d22d6d5ff0,"[split] org=com.twitter,name=finagle,version=1.9.5"
mariusae,2011-11-04 17:20:37,https://api.github.com/repos/twitter/finagle/git/commits/73c4d4b3a72d5a9c282b35de86c874f8e2310314,73c4d4b3a72d5a9c282b35de86c874f8e2310314,"[split] finagle-stream: do not admit concurrent requests

this happens if a client attempts to issue pipelined requests.  prior
to this change, whenever this happened, the response to it was simply
proxied back, subsequently ignored by the HTTP codec (since the
message type is unknown), and could cause workers to receive
non-ChannelBuffer messages."
tnarg,2011-11-03 23:55:19,https://api.github.com/repos/twitter/finagle/git/commits/e013fdd277299d527aae96a9199f85c9d5209cb4,e013fdd277299d527aae96a9199f85c9d5209cb4,"[split] Add release method to Tracer trait, add tracerFactory to builders, deprecate tracer on builders"
stevegury,2011-11-03 18:46:57,https://api.github.com/repos/twitter/finagle/git/commits/7e8d66269c52ee2b773dca96363c9ae1e784e249,7e8d66269c52ee2b773dca96363c9ae1e784e249,[split] Merge branch 'master' of https://git.twitter.biz/birdcage into connection-limitation
stevegury,2011-11-03 18:45:56,https://api.github.com/repos/twitter/finagle/git/commits/e148b5e25a2c2892779bfbab067e1a1bbe07ab3f,e148b5e25a2c2892779bfbab067e1a1bbe07ab3f,"[split] Change Inheritance model of IdleConnectionHandler, use Time.WithTimeAt() in tests"
hjz,2011-11-03 17:05:32,https://api.github.com/repos/twitter/finagle/git/commits/af504702fde3f437612dbc6c6c55e45c86794aab,af504702fde3f437612dbc6c6c55e45c86794aab,"[split] Add Array[Byte] and String interface to finagle-memcache client. Add flakestore project. - Add Array[Byte] and String interface to finagle-memcache Client, using withBytes and withStrings methods. - Add a MockClient backed by a map - Add a YamlMemcacheConfig (Config[Client]) to twitter-config (copied from gluebird) - Breakout flakestore project from limiter. - ChannelBuffersUtils: Add methods to convert ChannelBuffers to string, byte array."
yuhua,2011-11-03 00:08:47,https://api.github.com/repos/twitter/finagle/git/commits/5b9ae0d06cd0cd82b5dcc1bff1b5a8176d1a3ac6,5b9ae0d06cd0cd82b5dcc1bff1b5a8176d1a3ac6,[split] Suppress excessive logging of the exceptions that mostly caused by unreliable client connections.
stevegury,2011-11-02 22:31:39,https://api.github.com/repos/twitter/finagle/git/commits/53d164c8b35da2f8e7f4989e89ec8dcbb40e237b,53d164c8b35da2f8e7f4989e89ec8dcbb40e237b,"[split] Add stats: idle_connections_closed, idle_active_connections_ratio, connections_refused, connection_refused_sec"
stevegury,2011-11-02 20:28:34,https://api.github.com/repos/twitter/finagle/git/commits/543a910edd0b2cc255091e5367d093fb6e83f6bd,543a910edd0b2cc255091e5367d093fb6e83f6bd,[split] Avoid propagating the connection request up the stack if we close it
kevinoliver,2011-11-02 19:47:56,https://api.github.com/repos/twitter/finagle/git/commits/97aaeff35a52bf3b4acc5838b8636bba9c918932,97aaeff35a52bf3b4acc5838b8636bba9c918932,"[split] Adding documentation

- Create a Kestrel example client that does reliable reads
- Add some additional context to how to use ReadHandle's Offers
- Add docs for the implicit conversions to Time and StorageUnit"
stevegury,2011-11-02 17:49:32,https://api.github.com/repos/twitter/finagle/git/commits/fc4146a3451a9ef17188828a7ca471d54f0a940f,fc4146a3451a9ef17188828a7ca471d54f0a940f,[split] Fix code regarding comments in review board  #44517
mariusae,2011-11-01 19:28:15,https://api.github.com/repos/twitter/finagle/git/commits/1ddb4b5b1e85294e454d7251fbfe324da839156d,1ddb4b5b1e85294e454d7251fbfe324da839156d,"[split] WatermarkPool: flush waiters on creation failure.

This could cause a condition wherein we kept waiters unecessarily."
mariusae,2011-11-01 19:26:20,https://api.github.com/repos/twitter/finagle/git/commits/28bed86dabb8d3e8af34a6dc23aa801e4f53ab19,28bed86dabb8d3e8af34a6dc23aa801e4f53ab19,"[split] ChannelService: release services when `prepareChannel` fails.

this could cause a connection leak: if prepareService fails (eg.
during thrift negotiation), we'd never release the underlying service
because it was propagated as a connection error when in fact we did
successfully connect."
kmonkeyjam,2011-10-31 22:47:34,https://api.github.com/repos/twitter/finagle/git/commits/16272c82e0011a2c184051bb5b79ebc0ef8fe839,16272c82e0011a2c184051bb5b79ebc0ef8fe839,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
kmonkeyjam,2011-10-31 22:43:24,https://api.github.com/repos/twitter/finagle/git/commits/0c27de2ff53ac3d5a3f1b5aa5a1eacb6dd1f4dde,0c27de2ff53ac3d5a3f1b5aa5a1eacb6dd1f4dde,[split] updated versions.properties
kmonkeyjam,2011-10-31 22:43:23,https://api.github.com/repos/twitter/finagle/git/commits/0887e4b51d27fb769b4dba822e5f9ae55a53f2d3,0887e4b51d27fb769b4dba822e5f9ae55a53f2d3,[split] updated versions.properties
stevegury,2011-10-28 18:41:13,https://api.github.com/repos/twitter/finagle/git/commits/e9a87f6e2d1dfa43b3136b7946e479558ad9a33a,e9a87f6e2d1dfa43b3136b7946e479558ad9a33a,"[split] Add ""FrontEnd"" stress configuration (ie. lots of connections)"
stevegury,2011-10-28 16:30:06,https://api.github.com/repos/twitter/finagle/git/commits/ae0f2f5850755cd7c5d07cd4db3c6342cf92b4cd,ae0f2f5850755cd7c5d07cd4db3c6342cf92b4cd,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage into connection-limitation
stevegury,2011-10-28 16:29:52,https://api.github.com/repos/twitter/finagle/git/commits/a6a40259a50f9417e0d9504694ab596ee5b6e533,a6a40259a50f9417e0d9504694ab596ee5b6e533,[split] Improve unit test + add minor benchmark
stevegury,2011-10-28 16:28:17,https://api.github.com/repos/twitter/finagle/git/commits/8ea378443cd1f62eeebdc1b4fda0e3647614e920,8ea378443cd1f62eeebdc1b4fda0e3647614e920,"[split] Bug, forgot to call super.channelOpen + add synchronized"
mariusae,2011-10-27 20:58:38,https://api.github.com/repos/twitter/finagle/git/commits/93c9acca570010f5f754ba114e14066e68953082,93c9acca570010f5f754ba114e14066e68953082,"[split] finagle: count pending timeouts, and export them

This also adds a global stats objects that
contains finagle-global stats."
stevegury,2011-10-27 00:17:55,https://api.github.com/repos/twitter/finagle/git/commits/a094fe6e8d965d6e6dde70e851fb2653d18e337e,a094fe6e8d965d6e6dde70e851fb2653d18e337e,"[split] Merge branch 'master' of http://git.local.twitter.com/birdcage into connection-limitation

Conflicts:
	finagle/finagle-core/src/main/scala/com/twitter/finagle/builder/ServerBuilder.scala"
stevegury,2011-10-27 00:12:25,https://api.github.com/repos/twitter/finagle/git/commits/8dfea37090eb105a44cde9fd2502fc4f43378474,8dfea37090eb105a44cde9fd2502fc4f43378474,"[split] Add BucketIdleConnectionHandler, a improved way to detect idle connection + Unit tests"
mariusae,2011-10-26 22:00:09,https://api.github.com/repos/twitter/finagle/git/commits/1f65058aae245747bf72416a50337e5feed0e618,1f65058aae245747bf72416a50337e5feed0e618,"[split] Don't apply service refcounts on filter composition

This is only needed for the load balancer (to maintain accurate
counts) and pools (to ensure we keep only idle services).  Thus we
insert it in all clients exactly above these two.

They aren't needed in servers.  Also, we don't propagate release() to
servers that aren't produced by factories, since they are anyway
shared."
mariusae,2011-10-24 23:46:42,https://api.github.com/repos/twitter/finagle/git/commits/8d64d78aa0c0eead490cd000715abf34f8636b0f,8d64d78aa0c0eead490cd000715abf34f8636b0f,[split] finagle: update changelog
mariusae,2011-10-24 21:07:43,https://api.github.com/repos/twitter/finagle/git/commits/403380e1cb4092da50067cba36aa42dec5a22fe8,403380e1cb4092da50067cba36aa42dec5a22fe8,"[split] org=com.twitter,name=finagle,version=1.9.5-SNAPSHOT"
mariusae,2011-10-24 21:07:41,https://api.github.com/repos/twitter/finagle/git/commits/236bb9a44442f2ed5522312b6edabfccf76711e0,236bb9a44442f2ed5522312b6edabfccf76711e0,"[split] org=com.twitter,name=finagle,version=1.9.4"
mariusae,2011-10-24 20:19:03,https://api.github.com/repos/twitter/finagle/git/commits/d757a5dbdab8789974eaaec02445807efd4f2359,d757a5dbdab8789974eaaec02445807efd4f2359,[split] updated versions.properties
mariusae,2011-10-24 20:18:56,https://api.github.com/repos/twitter/finagle/git/commits/04c7be6e0b8be258d48676183d5dbbf34da53709,04c7be6e0b8be258d48676183d5dbbf34da53709,[split] updated versions.properties
tnarg,2011-10-24 18:42:10,https://api.github.com/repos/twitter/finagle/git/commits/c71252c59910cf6243936e2fbeebb2a4dcf17bba,c71252c59910cf6243936e2fbeebb2a4dcf17bba,[split] Decrement default timer refcount on HeapBalancer.close
stevegury,2011-10-24 16:45:56,https://api.github.com/repos/twitter/finagle/git/commits/158f1ca22450da6a6e28540afbd9c853656c79f4,158f1ca22450da6a6e28540afbd9c853656c79f4,"[split] Refactor ServerConfig case class in order to reduce the number of arguments (22), so that I can add another option"
stevegury,2011-10-23 04:53:46,https://api.github.com/repos/twitter/finagle/git/commits/adc3c5dfdc37287f0b24eb0f40b4a3fd9bb3464e,adc3c5dfdc37287f0b24eb0f40b4a3fd9bb3464e,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage into connection-limitation
mariusae,2011-10-21 23:50:37,https://api.github.com/repos/twitter/finagle/git/commits/ae89e09f069e3c37c6955f1b021c0388778ee005,ae89e09f069e3c37c6955f1b021c0388778ee005,"Merge pull request #43 from mccue/master

Updated README.md and added scaladoc"
mccue,2011-10-21 23:34:35,https://api.github.com/repos/twitter/finagle/git/commits/3454de11e54f56b8e44de0ca4667ac3a7cabf1eb,3454de11e54f56b8e44de0ca4667ac3a7cabf1eb,Moved scaladoc so it will display
mccue,2011-10-21 23:30:30,https://api.github.com/repos/twitter/finagle/git/commits/54440a72aac02840e1dccef8190a1b16a31e3237,54440a72aac02840e1dccef8190a1b16a31e3237,Added Intro section to finagle package.scala and a few misc. changes
mccue,2011-10-21 23:26:17,https://api.github.com/repos/twitter/finagle/git/commits/db5c7e55ba32eba6925688ec6d7ac2b6cbb8b47a,db5c7e55ba32eba6925688ec6d7ac2b6cbb8b47a,Updated Finagle Developer Guide
mccue,2011-10-21 23:08:18,https://api.github.com/repos/twitter/finagle/git/commits/def695588971129e15382d618f3b035ec01bc2c7,def695588971129e15382d618f3b035ec01bc2c7,Fixed munged Service.scala
johanoskarsson,2011-10-21 20:17:00,https://api.github.com/repos/twitter/finagle/git/commits/e68e6dfad2d28ae7001f65c9e2f3896a4e39eb0e,e68e6dfad2d28ae7001f65c9e2f3896a4e39eb0e,[split] Add TfeTracingFilter that logs server received and server send without parsing http headers. Enable http tracing for internal client calls
stevegury,2011-10-21 00:47:01,https://api.github.com/repos/twitter/finagle/git/commits/5c9f61f2538d1ee1f1eb6f4675b1bc7f12c7b88d,5c9f61f2538d1ee1f1eb6f4675b1bc7f12c7b88d,"[split] Add Handler to limit connections per server, add feature to close idle connections when overloaded"
mariusae,2011-10-20 17:58:14,https://api.github.com/repos/twitter/finagle/git/commits/e0b03edeb22fcc176ce6a586d6bef020b525195e,e0b03edeb22fcc176ce6a586d6bef020b525195e,[split] TimerToNettyTimer: actually cancel underlying task.
mariusae,2011-10-20 16:50:20,https://api.github.com/repos/twitter/finagle/git/commits/07998099cce08da154834213fa1b012afc4dee55,07998099cce08da154834213fa1b012afc4dee55,[split] NullStatsReceiver: create fewer objects.
hjz,2011-10-19 21:21:01,https://api.github.com/repos/twitter/finagle/git/commits/20da0f059f0fc30d4dd6b1a644888d112952fb5d,20da0f059f0fc30d4dd6b1a644888d112952fb5d,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
hjz,2011-10-19 21:20:52,https://api.github.com/repos/twitter/finagle/git/commits/4d673ca47f18b03c01149980e37b835d920cec77,4d673ca47f18b03c01149980e37b835d920cec77,[split] Update svn repositories in Project files
tnarg,2011-10-19 20:56:04,https://api.github.com/repos/twitter/finagle/git/commits/503bc9cfb4328bc537efa367aa24e42735e178a0,503bc9cfb4328bc537efa367aa24e42735e178a0,[split] Cancel request Future on close in kestrel ReadHandle
mccue,2011-10-19 16:41:11,https://api.github.com/repos/twitter/finagle/git/commits/3079b9cdefb610ec6c86831c0669b0825c6d8df6,3079b9cdefb610ec6c86831c0669b0825c6d8df6,"No op

Service.scala did not change"
mccue,2011-10-19 15:56:11,https://api.github.com/repos/twitter/finagle/git/commits/f5b9bc20a0614a07dfc3e79410e5507ffdb21c03,f5b9bc20a0614a07dfc3e79410e5507ffdb21c03,"Updated scaladoc to add package.scala info and updated README.md

Added new package.scala files at com and twitter to the point people to
the Finagle Intro and modified package.scala in finagle-core to contain
the intro. Updated package.scala in exception to point to exceptions
people can use. Moved placement of scaladoc in ServerBuilder.scala so
that it appears. Updated Finagle Developer Guide (README.md) to contain
a Java Patterns section, which includes a reference to external Java
example on Future thread pools."
mariusae,2011-10-18 15:38:24,https://api.github.com/repos/twitter/finagle/git/commits/1bc6a863396e39bbff7276bf1b61b6adf19af62c,1bc6a863396e39bbff7276bf1b61b6adf19af62c,[split] ServiceToChannelHandler: fix a potential race in setting currentResponse
mariusae,2011-10-14 23:54:40,https://api.github.com/repos/twitter/finagle/git/commits/caeb737907b63526d78b6aed5f60740cbb981646,caeb737907b63526d78b6aed5f60740cbb981646,"[split] finagle,util: update changelogs"
mariusae,2011-10-14 23:52:55,https://api.github.com/repos/twitter/finagle/git/commits/0a9e3dac8faf0688b16c2a8c24e57a38903fc354,0a9e3dac8faf0688b16c2a8c24e57a38903fc354,"[split] org=com.twitter,name=finagle,version=1.9.4-SNAPSHOT"
mariusae,2011-10-14 23:52:54,https://api.github.com/repos/twitter/finagle/git/commits/e81310e3cf74a22090febfdf9806b0193b38be44,e81310e3cf74a22090febfdf9806b0193b38be44,"[split] org=com.twitter,name=finagle,version=1.9.3"
mariusae,2011-10-14 23:38:48,https://api.github.com/repos/twitter/finagle/git/commits/09714ddd1b003f1583d12abc4be7901319c0cf1d,09714ddd1b003f1583d12abc4be7901319c0cf1d,[split] updated versions.properties
mariusae,2011-10-14 23:38:47,https://api.github.com/repos/twitter/finagle/git/commits/064c951cde41a19f26dcad38e468d164550b61b5,064c951cde41a19f26dcad38e468d164550b61b5,[split] updated versions.properties
johanoskarsson,2011-10-13 22:15:12,https://api.github.com/repos/twitter/finagle/git/commits/8939f31862af0abf5d88c79f5a8011ede6513bbe,8939f31862af0abf5d88c79f5a8011ede6513bbe,[split] Adds passing of trace ids from http client and server. Annotates http calls
mariusae,2011-10-11 23:16:24,https://api.github.com/repos/twitter/finagle/git/commits/338669002c4a707936b65400a24e851482cc5977,338669002c4a707936b65400a24e851482cc5977,[split] Merge commit 'a8f0b21a582c9198f7b9a493da1fa0eb53cf257a'
tnarg,2011-10-08 01:16:40,https://api.github.com/repos/twitter/finagle/git/commits/7d16579fe43ea600306a541767b961f5a40a3745,7d16579fe43ea600306a541767b961f5a40a3745,[split] Use http.RequestBuilder in s3-client - Use http.RequestBuilder in s3-client - Add buildDelete to http.RequestBuilder
mariusae,2011-10-07 23:30:45,https://api.github.com/repos/twitter/finagle/git/commits/40c9d139a388f9caeb0b254fcd01eb3e585518a1,40c9d139a388f9caeb0b254fcd01eb3e585518a1,"[split] Merge remote-tracking branch 'origin/master'

Conflicts:
	birdfeeder/project/versions.properties
	cachemo/project/versions.properties
	cassie/project/versions.properties
	codelab/project/versions.properties
	decider/project/versions.properties
	fantasmic/project/versions.properties
	finagle-twitter/project/versions.properties
	finagle/project/versions.properties
	flock-client/project/versions.properties
	gizmoduck/project/versions.properties
	gluebird/project/versions.properties
	ibis/project/versions.properties
	macaw/project/versions.properties
	ostrich-aggregator/project/versions.properties
	parrot/project/versions.properties
	passbird/project/versions.properties
	photurkey/project/versions.properties
	rockdove/project/versions.properties
	s3-client/project/versions.properties
	scrooge-runtime/project/versions.properties
	snowflake/project/versions.properties
	talon-client/project/versions.properties
	tfe/project/versions.properties
	thrust/project/versions.properties
	thumbingbird/project/versions.properties
	timelineservice/project/versions.properties
	tweetypie/project/versions.properties
	twitter-config/project/versions.properties
	viz/project/versions.properties
	woodstar/project/versions.properties"
johanoskarsson,2011-10-06 16:55:02,https://api.github.com/repos/twitter/finagle/git/commits/928f2202a36a1343e00212b693df7c01e7f06767,928f2202a36a1343e00212b693df7c01e7f06767,[split] Adds Trace.enable and Trace.disable methods for turning off tracing service wide.
tnarg,2011-10-05 16:46:52,https://api.github.com/repos/twitter/finagle/git/commits/8bbb9b5c95e2af2f090e2c3cf6599990b16ad1bb,8bbb9b5c95e2af2f090e2c3cf6599990b16ad1bb,[split] Add http.RequestBuilder and http.ProxyCredentials
johanoskarsson,2011-10-05 16:30:04,https://api.github.com/repos/twitter/finagle/git/commits/1e93399d3ae8bb5e6f27d8d1dce832c6915f8aa7,1e93399d3ae8bb5e6f27d8d1dce832c6915f8aa7,[split] Change SpanId to use RichU64String to allow for proper parsing of the whole long range. Change RichU64String to pad any incoming strings so that they are parsed properly
mariusae,2011-10-04 17:29:19,https://api.github.com/repos/twitter/finagle/git/commits/5bffc766a6babc9b725ffb3d46fde11d929083da,5bffc766a6babc9b725ffb3d46fde11d929083da,"[split] org=com.twitter,name=finagle,version=1.9.3-SNAPSHOT"
mariusae,2011-10-04 17:29:18,https://api.github.com/repos/twitter/finagle/git/commits/6458b4751fcc2d4e722c12eb802c0ab366969f65,6458b4751fcc2d4e722c12eb802c0ab366969f65,"[split] org=com.twitter,name=finagle,version=1.9.2"
mariusae,2011-10-04 17:18:40,https://api.github.com/repos/twitter/finagle/git/commits/f65bc1e0fafc465d03af53cd65ec37e91549e8b9,f65bc1e0fafc465d03af53cd65ec37e91549e8b9,[split] updated versions.properties
mariusae,2011-10-04 17:18:38,https://api.github.com/repos/twitter/finagle/git/commits/87665f20e1535ea213cb5f10436e00db64af8bf9,87665f20e1535ea213cb5f10436e00db64af8bf9,[split] updated versions.properties
mariusae,2011-10-04 17:18:38,https://api.github.com/repos/twitter/finagle/git/commits/7cbbc3e08d0f88476dfa0c214ae81d91953f815b,7cbbc3e08d0f88476dfa0c214ae81d91953f815b,[split] updated versions.properties
yuhua,2011-10-04 03:54:56,https://api.github.com/repos/twitter/finagle/git/commits/d02a3e1a6a4af5f08a7ba6678554569d36183eed,d02a3e1a6a4af5f08a7ba6678554569d36183eed,[split] Make SafeServerCodec and BadRequest public.
mariusae,2011-09-28 23:54:19,https://api.github.com/repos/twitter/finagle/git/commits/007c50284f4f307a3a97d5a2c36a8d754c07fad5,007c50284f4f307a3a97d5a2c36a8d754c07fad5,[split] finagle: update changelog
mariusae,2011-09-28 23:53:39,https://api.github.com/repos/twitter/finagle/git/commits/5c8de1309a969a8e50f12ab0a8ec792f153fc423,5c8de1309a969a8e50f12ab0a8ec792f153fc423,"[split] org=com.twitter,name=finagle,version=1.9.2-SNAPSHOT"
mariusae,2011-09-28 23:53:38,https://api.github.com/repos/twitter/finagle/git/commits/468fe99bc28bfa11dbc38fa72028aff054647e92,468fe99bc28bfa11dbc38fa72028aff054647e92,"[split] org=com.twitter,name=finagle,version=1.9.1"
mariusae,2011-09-28 23:40:13,https://api.github.com/repos/twitter/finagle/git/commits/e97b03eac71edb9197966ca7f644fa00dd979bb3,e97b03eac71edb9197966ca7f644fa00dd979bb3,[split] updated versions.properties
mariusae,2011-09-28 23:40:10,https://api.github.com/repos/twitter/finagle/git/commits/30a8e7cd43832b7618b8d9d69fd21d1ade6a0c07,30a8e7cd43832b7618b8d9d69fd21d1ade6a0c07,[split] updated versions.properties
mariusae,2011-09-28 23:40:09,https://api.github.com/repos/twitter/finagle/git/commits/4ee980e1dfc2881e781d7f1f051fb000a102cb15,4ee980e1dfc2881e781d7f1f051fb000a102cb15,[split] updated versions.properties
szegedi,2011-09-28 05:22:22,https://api.github.com/repos/twitter/finagle/git/commits/7e28dae908c6ae9580bcf6e4ebd1dcca16cf9b1e,7e28dae908c6ae9580bcf6e4ebd1dcca16cf9b1e,[split] Further test adjustments
szegedi,2011-09-28 00:10:59,https://api.github.com/repos/twitter/finagle/git/commits/5feeccba6210f1f6e10196403f173cedc8450f49,5feeccba6210f1f6e10196403f173cedc8450f49,[split] Adjust tests to changes in exception encoding format
szegedi,2011-09-27 19:02:02,https://api.github.com/repos/twitter/finagle/git/commits/ed338ca689cc17bd5e451517f6e552289962c45c,ed338ca689cc17bd5e451517f6e552289962c45c,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
szegedi,2011-09-27 19:01:49,https://api.github.com/repos/twitter/finagle/git/commits/57109801d587eae89ac7d7bacea5ddde53e4989f,57109801d587eae89ac7d7bacea5ddde53e4989f,"[split] Squashed commit of chickadee-adjust: - GZIP the entire message - use ""peer"" instead of ""client"" to better express it's a TCP peer we're communicating with; this end can be a client too."
mariusae,2011-09-20 05:03:17,https://api.github.com/repos/twitter/finagle/git/commits/a8f0b21a582c9198f7b9a493da1fa0eb53cf257a,a8f0b21a582c9198f7b9a493da1fa0eb53cf257a,"Merge pull request #38 from bmatheny/no-such-element-fix

Fix for NoSuchElementException in finagle-memcached"
johanoskarsson,2011-09-19 22:37:16,https://api.github.com/repos/twitter/finagle/git/commits/1255e9fc02730f539c83e47e88ee53f95cf5d450,1255e9fc02730f539c83e47e88ee53f95cf5d450,"[split] Updated tracing Thrift file to match B3, changes a few optionals to required. Scala style fix."
bmatheny,2011-09-16 01:24:36,https://api.github.com/repos/twitter/finagle/git/commits/1125a7e731d6cac11c2ff5ab19a88940f297f904,1125a7e731d6cac11c2ff5ab19a88940f297f904,Fix for NoSuchElementException when client sends a newline with no command.
johanoskarsson,2011-09-14 22:28:38,https://api.github.com/repos/twitter/finagle/git/commits/ce4963f8fce3fcdd19bd48485db501a74cca7dd1,ce4963f8fce3fcdd19bd48485db501a74cca7dd1,[split] Exception annotation. Also rename the others to make easier to look up by
johanoskarsson,2011-09-14 19:45:10,https://api.github.com/repos/twitter/finagle/git/commits/01adcd1bb1ec5774c8a404c5985e283362ec96df,01adcd1bb1ec5774c8a404c5985e283362ec96df,"[split] Set service name in endpoint instead of straight in the span. Update tracing.thrift, also includes better comments"
mariusae,2011-09-09 15:14:37,https://api.github.com/repos/twitter/finagle/git/commits/d3659982fc1ef7cdee7034758a552fcb68524900,d3659982fc1ef7cdee7034758a552fcb68524900,"Merge pull request #37 from mccue/master

Fixes typo in doc. and graphics (RCP to RPC) <eom>"
mccue,2011-09-09 06:46:07,https://api.github.com/repos/twitter/finagle/git/commits/b684a899863e09c08ed671ae58510692c1fb16c4,b684a899863e09c08ed671ae58510692c1fb16c4,Change RCP to RPC in graphics
mccue,2011-09-09 06:04:17,https://api.github.com/repos/twitter/finagle/git/commits/c29958df73e8a8aa30719c935d3b1a8e841830c9,c29958df73e8a8aa30719c935d3b1a8e841830c9,Changed occurrences of RCP to RPC
johanoskarsson,2011-09-07 18:09:24,https://api.github.com/repos/twitter/finagle/git/commits/a24d6e84ce9698e34281e023964dd6d9e4ec80ef,a24d6e84ce9698e34281e023964dd6d9e4ec80ef,[split] Better scoping for the counters in finagle-b3. OBSERVE-433
johanoskarsson,2011-09-07 16:32:50,https://api.github.com/repos/twitter/finagle/git/commits/89ce8e63b40a209377bb834ebbb71bfd8cde4db4,89ce8e63b40a209377bb834ebbb71bfd8cde4db4,[split] Record annotations when request timed out or when retrying
johanoskarsson,2011-09-06 22:51:38,https://api.github.com/repos/twitter/finagle/git/commits/436807314c9ebcd214031dd09bb0eab3e17ea150,436807314c9ebcd214031dd09bb0eab3e17ea150,[split] Add a convenience method for record binary annotations where the value is a string
mariusae,2011-09-06 17:50:03,https://api.github.com/repos/twitter/finagle/git/commits/4285d9dfb42673c9776ff649efaa84faf44ed1ba,4285d9dfb42673c9776ff649efaa84faf44ed1ba,Merge branch 'bc'
mariusae,2011-09-06 17:34:24,https://api.github.com/repos/twitter/finagle/git/commits/b6bd87e9556883f0d2a23380cda30e1364cc3787,b6bd87e9556883f0d2a23380cda30e1364cc3787,"[split] finagle-core: HeapBalancer, a new lg n load balancer

a new, asymptotically more efficient load balancer
making use of heaps.

for each balance op, this will perform lg n array
swaps and one object allocation, and lg n array
swaps (and sometimes one RNG invocation) per
release().

it has perfect shuffling when unloaded, and good
shuffling when targets are uniformly loaded."
mariusae,2011-09-01 19:52:39,https://api.github.com/repos/twitter/finagle/git/commits/d203b5c2adcc85f4c74fe141dd13d8506b3e7470,d203b5c2adcc85f4c74fe141dd13d8506b3e7470,"Merge pull request #35 from bmatheny/quit-support

Quit support for finagle-memcached"
bmatheny,2011-09-01 17:16:35,https://api.github.com/repos/twitter/finagle/git/commits/f184819f073e361e345bfb32ecd818de1df11353,f184819f073e361e345bfb32ecd818de1df11353,Style fixes and various improvements per feedback from Marius
bmatheny,2011-08-30 18:17:41,https://api.github.com/repos/twitter/finagle/git/commits/99f5db637442008e1fd44df27dab7d8d7b519be4,99f5db637442008e1fd44df27dab7d8d7b519be4,Making quit a future operation
bmatheny,2011-08-30 13:57:03,https://api.github.com/repos/twitter/finagle/git/commits/ef0c9e1785fd5833c494d9f831495d4a20cc962b,ef0c9e1785fd5833c494d9f831495d4a20cc962b,Updated tests and client implementation. Need to change quit so it's actually a future
bmatheny,2011-08-30 13:47:19,https://api.github.com/repos/twitter/finagle/git/commits/7b230a58de2ead2de650bea899d6c6f527f8bf31,7b230a58de2ead2de650bea899d6c6f527f8bf31,Updating Quit implementation so it works properly with the Interpreter
bmatheny,2011-08-30 00:07:00,https://api.github.com/repos/twitter/finagle/git/commits/668158794795357f93bae803efb5e8361c7d69fb,668158794795357f93bae803efb5e8361c7d69fb,Merge branch 'master' into quit-support
bmatheny,2011-08-30 00:06:33,https://api.github.com/repos/twitter/finagle/git/commits/a28893a9afbcf49e06aae8e40b5a5eee48301fff,a28893a9afbcf49e06aae8e40b5a5eee48301fff,Adding initial quit support code
mariusae,2011-08-29 22:36:13,https://api.github.com/repos/twitter/finagle/git/commits/4c43d42206a4e187314347ad2583850027904019,4c43d42206a4e187314347ad2583850027904019,"Merge pull request #34 from bmatheny/expiry-fix

Expiry fix"
bmatheny,2011-08-29 19:43:17,https://api.github.com/repos/twitter/finagle/git/commits/cdcb4914b35f1f620e24166f04fae9fe145c044a,cdcb4914b35f1f620e24166f04fae9fe145c044a,Merge branch 'master' into expiry-fix
bmatheny,2011-08-29 19:42:42,https://api.github.com/repos/twitter/finagle/git/commits/55bc592e2edc8038622bbfeebe812552a7f97535,55bc592e2edc8038622bbfeebe812552a7f97535,Merge branch 'master' of https://github.com/twitter/finagle
bmatheny,2011-08-29 19:42:24,https://api.github.com/repos/twitter/finagle/git/commits/550318cfc49a4bab419bcd1c8fdee138ac97a7a9,550318cfc49a4bab419bcd1c8fdee138ac97a7a9,Handle both unixtime and delta expirations. Spec for DecodingToCommand
mariusae,2011-08-29 18:14:53,https://api.github.com/repos/twitter/finagle/git/commits/efc1befdd4bbe38107f79c8ac55d91ef89cfa773,efc1befdd4bbe38107f79c8ac55d91ef89cfa773,"Merge pull request #33 from bmatheny/cas-fix

Cas fix"
bmatheny,2011-08-29 18:06:51,https://api.github.com/repos/twitter/finagle/git/commits/09e8fff923398bbf0c655c8a08ded7238560eb43,09e8fff923398bbf0c655c8a08ded7238560eb43,"When the specified expiry is 0, respect the memcached protocol and don't convert this value to the Time.fromNow"
mariusae,2011-08-29 18:03:08,https://api.github.com/repos/twitter/finagle/git/commits/9be4fd9d2d96191c1348ad856c38376230015f2f,9be4fd9d2d96191c1348ad856c38376230015f2f,[split] history is written by those with git write access
bmatheny,2011-08-29 17:59:24,https://api.github.com/repos/twitter/finagle/git/commits/47eafcd56d7177f96b1240b7a98aae9d8415e02f,47eafcd56d7177f96b1240b7a98aae9d8415e02f,Merge branch 'master' of https://github.com/twitter/finagle
bmatheny,2011-08-29 17:58:59,https://api.github.com/repos/twitter/finagle/git/commits/34f5dbac8ad7c785e7f8b4e8b3ee02d6cea9a690,34f5dbac8ad7c785e7f8b4e8b3ee02d6cea9a690,"Revert ""Initial quit support for memcache, and a fix for a cache expiry value of 0 (should not get converted to Time.now)""

This reverts commit 7891ff0f9df1c44a24281b88f18fbee38ad420d3."
mariusae,2011-08-29 17:56:35,https://api.github.com/repos/twitter/finagle/git/commits/9bf148f34b8819167092fcc1aac9349e412bf3f0,9bf148f34b8819167092fcc1aac9349e412bf3f0,"[split] org=com.twitter,name=finagle,version=1.9.1-SNAPSHOT"
mariusae,2011-08-29 17:56:34,https://api.github.com/repos/twitter/finagle/git/commits/e1295f1b2c23a459a5b46fa210b34f49245d9e2a,e1295f1b2c23a459a5b46fa210b34f49245d9e2a,"[split] org=com.twitter,name=finagle,version=1.9.0"
mariusae,2011-08-29 17:53:05,https://api.github.com/repos/twitter/finagle/git/commits/a86154f5371e8c9992c71174fa114665a0c5d514,a86154f5371e8c9992c71174fa114665a0c5d514,[split] 1.9.0-SNAPSHOT
bmatheny,2011-08-29 17:48:05,https://api.github.com/repos/twitter/finagle/git/commits/5e7962af86f0c8737e9e06508352d5c15b5bf10e,5e7962af86f0c8737e9e06508352d5c15b5bf10e,Fix style issue
mariusae,2011-08-29 17:48:02,https://api.github.com/repos/twitter/finagle/git/commits/d9d9adcf1e499ceb175d6276005a010bd3bafd7b,d9d9adcf1e499ceb175d6276005a010bd3bafd7b,[split] finagle: update ChangeLog
mariusae,2011-08-29 17:45:12,https://api.github.com/repos/twitter/finagle/git/commits/f2c61026e9e2d698875a6a0dcd03e12508e3bb79,f2c61026e9e2d698875a6a0dcd03e12508e3bb79,"[split] org=com.twitter,name=finagle,version=1.8.6-SNAPSHOT"
mariusae,2011-08-29 17:45:06,https://api.github.com/repos/twitter/finagle/git/commits/a1d631796d186be814c377fa1126e955c7937300,a1d631796d186be814c377fa1126e955c7937300,"[split] org=com.twitter,name=finagle,version=1.8.5"
mariusae,2011-08-29 17:03:06,https://api.github.com/repos/twitter/finagle/git/commits/78682c4ebe8c7884a7c74d4d98483f3979f06e8c,78682c4ebe8c7884a7c74d4d98483f3979f06e8c,"Merge pull request #31 from bmatheny/patch-1

Typo in memcached proxy example."
bmatheny,2011-08-27 00:19:14,https://api.github.com/repos/twitter/finagle/git/commits/7891ff0f9df1c44a24281b88f18fbee38ad420d3,7891ff0f9df1c44a24281b88f18fbee38ad420d3,"Initial quit support for memcache, and a fix for a cache expiry value of 0 (should not get converted to Time.now)"
mariusae,2011-08-26 23:51:08,https://api.github.com/repos/twitter/finagle/git/commits/eca4d0e3163df711260514a569f18561cda0325b,eca4d0e3163df711260514a569f18561cda0325b,[split] updated versions.properties
mariusae,2011-08-26 23:51:05,https://api.github.com/repos/twitter/finagle/git/commits/90e4742147fdc0d05c144fc295882bb630b25e33,90e4742147fdc0d05c144fc295882bb630b25e33,[split] updated versions.properties
mariusae,2011-08-26 23:51:01,https://api.github.com/repos/twitter/finagle/git/commits/46a2f4607417ba1938b2ed859592d1fc55086046,46a2f4607417ba1938b2ed859592d1fc55086046,[split] updated versions.properties
hjz,2011-08-25 21:45:05,https://api.github.com/repos/twitter/finagle/git/commits/810e3caf3cc52d158a3caef65a236f22ed83bfd3,810e3caf3cc52d158a3caef65a236f22ed83bfd3,[split] updated versions.properties
bmatheny,2011-08-25 17:29:23,https://api.github.com/repos/twitter/finagle/git/commits/b7f1cfa33ab05a55562e3d1e297b6b4be1f404d4,b7f1cfa33ab05a55562e3d1e297b6b4be1f404d4,Merge branch 'master' of github.com:bmatheny/finagle
bmatheny,2011-08-25 17:27:59,https://api.github.com/repos/twitter/finagle/git/commits/7ce5719f8551b0ba4f3c8a67f2eedc9ea043c1d3,7ce5719f8551b0ba4f3c8a67f2eedc9ea043c1d3,Fix cas values in memcached text protocol
bmatheny,2011-08-24 21:31:25,https://api.github.com/repos/twitter/finagle/git/commits/650ee6631c720f9504d8e0ac5c00c26ab10ae75f,650ee6631c720f9504d8e0ac5c00c26ab10ae75f,Typo in memcached proxy example.
johanoskarsson,2011-08-23 23:23:37,https://api.github.com/repos/twitter/finagle/git/commits/705bf5f88f64c4ecccaf3a90ea395779196ef234,705bf5f88f64c4ecccaf3a90ea395779196ef234,[split] Updated ChangeLog
johanoskarsson,2011-08-23 22:56:48,https://api.github.com/repos/twitter/finagle/git/commits/4e7d8ae9056f46282c51748c960d86fe55a0feb9,4e7d8ae9056f46282c51748c960d86fe55a0feb9,"[split] org=com.twitter,name=finagle,version=1.8.5-SNAPSHOT"
johanoskarsson,2011-08-23 22:56:47,https://api.github.com/repos/twitter/finagle/git/commits/ae077e96fe9561350972df02920ea2284df3a1d2,ae077e96fe9561350972df02920ea2284df3a1d2,"[split] org=com.twitter,name=finagle,version=1.8.4"
mariusae,2011-08-22 20:35:51,https://api.github.com/repos/twitter/finagle/git/commits/1d28b58ad418e6c530f253a8bd785512d84cbd6a,1d28b58ad418e6c530f253a8bd785512d84cbd6a,Merge branch 'bc'
johanoskarsson,2011-08-22 20:28:53,https://api.github.com/repos/twitter/finagle/git/commits/64ad77d2a742de0450a7b1a72055f047bb52f137,64ad77d2a742de0450a7b1a72055f047bb52f137,[split] Improve BigBrotherBird counters. Rename error counters to be easily identify and add an additional counter for when we send incomplete spans.
johanoskarsson,2011-08-22 20:17:37,https://api.github.com/repos/twitter/finagle/git/commits/b15e70e4ac437159fd2f0dab420c01dd1a603bc1,b15e70e4ac437159fd2f0dab420c01dd1a603bc1,"[split] Only run remove code snippet once, not repeatedly.

Timer api misunderstanding caused leak."
mariusae,2011-08-22 20:17:21,https://api.github.com/repos/twitter/finagle/git/commits/c856e26ce985a6d95024bcb873456f80c5336377,c856e26ce985a6d95024bcb873456f80c5336377,"Merge pull request #30 from holdenk/master

Remove hard coded spec version & Fix some test syntax issues"
evnm,2011-08-19 20:41:26,https://api.github.com/repos/twitter/finagle/git/commits/f3ee11de095830d67315d9a31f5eb36a0feae37d,f3ee11de095830d67315d9a31f5eb36a0feae37d,"[split] Fix deprecated link to ServerSet documentation in README.

Also removes a bunch of random trailing whitespace."
mariusae,2011-08-18 21:38:11,https://api.github.com/repos/twitter/finagle/git/commits/f86220787cd7f71b68ce9f6d98dcf426aaf51f64,f86220787cd7f71b68ce9f6d98dcf426aaf51f64,[split] finagle-stream: always release the server when we close.
mariusae,2011-08-18 21:27:28,https://api.github.com/repos/twitter/finagle/git/commits/b12649c1952babceb893a91190af01bbaf6840fd,b12649c1952babceb893a91190af01bbaf6840fd,[split] finagle README: fix up examples so that they actually compile
mariusae,2011-08-16 18:05:20,https://api.github.com/repos/twitter/finagle/git/commits/aef6e810ca93f77499117e31bdacbb6cc6298151,aef6e810ca93f77499117e31bdacbb6cc6298151,[split] birdcage: update to standard-project 0.12.10; enumerate failed projects in `bin/ci`
mariusae,2011-08-16 17:44:44,https://api.github.com/repos/twitter/finagle/git/commits/e56887b8a474d2350bf99e23d6cef5531335d0d4,e56887b8a474d2350bf99e23d6cef5531335d0d4,[split] ChangeLog: spaces->tabs
mariusae,2011-08-15 22:18:13,https://api.github.com/repos/twitter/finagle/git/commits/7b06c073984aa6f0f91a8fd0469de4fa9d7bdc23,7b06c073984aa6f0f91a8fd0469de4fa9d7bdc23,[split] birdcage: ci support
mariusae,2011-08-12 21:11:12,https://api.github.com/repos/twitter/finagle/git/commits/2f878acb6ce3aeda3c9e33ee5cdb473b1c6b46fd,2f878acb6ce3aeda3c9e33ee5cdb473b1c6b46fd,[split] finagle: update ChangeLog
mariusae,2011-08-12 21:09:12,https://api.github.com/repos/twitter/finagle/git/commits/4b0d9c0ffc6eb80abcba0548da24bcf2f66bec5d,4b0d9c0ffc6eb80abcba0548da24bcf2f66bec5d,"[split] org=com.twitter,name=finagle,version=1.8.4-SNAPSHOT"
mariusae,2011-08-12 21:09:12,https://api.github.com/repos/twitter/finagle/git/commits/3cb30909762eaef56cef34c474705bd5a3666f48,3cb30909762eaef56cef34c474705bd5a3666f48,"[split] org=com.twitter,name=finagle,version=1.8.3"
mariusae,2011-08-12 20:55:46,https://api.github.com/repos/twitter/finagle/git/commits/64947427212ae4285d5ab0b0ccf6bf04ed702f51,64947427212ae4285d5ab0b0ccf6bf04ed702f51,[split] finagle·project: add codahale repo
mariusae,2011-08-12 20:34:47,https://api.github.com/repos/twitter/finagle/git/commits/956757defc35ce28a4d975708cc2133e4a7aa539,956757defc35ce28a4d975708cc2133e4a7aa539,[split] finagle·project: add reflections.googlecode.com repository
mariusae,2011-08-12 20:23:50,https://api.github.com/repos/twitter/finagle/git/commits/1147cbbe89879ddb9a470761154e07c4947fddd5,1147cbbe89879ddb9a470761154e07c4947fddd5,[split] updated versions.properties
mariusae,2011-08-12 20:23:49,https://api.github.com/repos/twitter/finagle/git/commits/628dbdd3dd1745a1897821426b1954e2e66cf661,628dbdd3dd1745a1897821426b1954e2e66cf661,[split] updated versions.properties
mariusae,2011-08-12 18:09:04,https://api.github.com/repos/twitter/finagle/git/commits/883f78c169775bd0518f70fa968517062f7aa066,883f78c169775bd0518f70fa968517062f7aa066,[split] finagle·streaming: reimplement the finagle http streaming interfaces in terms of offer/brokers
mariusae,2011-08-12 16:16:28,https://api.github.com/repos/twitter/finagle/git/commits/d1ba060d410a20752311728dcf62a04e2f647422,d1ba060d410a20752311728dcf62a04e2f647422,[split] finagle·doc: fix up API ref links.
mariusae,2011-08-12 16:01:28,https://api.github.com/repos/twitter/finagle/git/commits/5248a58611048c97c49c18801a8d4cbc428152a0,5248a58611048c97c49c18801a8d4cbc428152a0,[split] finagle·doc: fix up image links
mariusae,2011-08-12 00:21:53,https://api.github.com/repos/twitter/finagle/git/commits/eeb3cdc1f5b524edf67cad8f779a562b5df93b24,eeb3cdc1f5b524edf67cad8f779a562b5df93b24,[split] finagle·kestrel: buffered & merged reading.
mariusae,2011-08-11 00:16:03,https://api.github.com/repos/twitter/finagle/git/commits/7df1953c4fc03ce462d952cf4218fd5ad28688a7,7df1953c4fc03ce462d952cf4218fd5ad28688a7,[split] finagle: better snooping
mariusae,2011-08-06 01:22:07,https://api.github.com/repos/twitter/finagle/git/commits/a066cc5d297eb16b1d4fd8eaaa6e0bb0b00b365d,a066cc5d297eb16b1d4fd8eaaa6e0bb0b00b365d,[split] finagle: update changelog
mariusae,2011-08-06 01:14:45,https://api.github.com/repos/twitter/finagle/git/commits/484a6d10312435c8d5c46c6d3c6d9f29767b61f8,484a6d10312435c8d5c46c6d3c6d9f29767b61f8,"[split] org=com.twitter,name=finagle,version=1.8.2-SNAPSHOT"
mariusae,2011-08-06 01:14:44,https://api.github.com/repos/twitter/finagle/git/commits/be6bb5f508951974ec5e5c57b1f5a7e6ce3654c8,be6bb5f508951974ec5e5c57b1f5a7e6ce3654c8,"[split] org=com.twitter,name=finagle,version=1.8.1"
mariusae,2011-08-06 00:56:35,https://api.github.com/repos/twitter/finagle/git/commits/46a210b793dea3160b41196d325e8d5f1503db99,46a210b793dea3160b41196d325e8d5f1503db99,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
mariusae,2011-08-06 00:55:40,https://api.github.com/repos/twitter/finagle/git/commits/ec2f948674e48b655a75ee3b38c4320ae037de21,ec2f948674e48b655a75ee3b38c4320ae037de21,[split] finagle ChannelService: fix up tests
mariusae,2011-08-05 23:32:45,https://api.github.com/repos/twitter/finagle/git/commits/3ddd578d9522e0ba2d1006117ba99b12ef61d55f,3ddd578d9522e0ba2d1006117ba99b12ef61d55f,[split] updated versions.properties
mariusae,2011-08-05 23:32:44,https://api.github.com/repos/twitter/finagle/git/commits/70698af947aaa8cce21694f3e45707eeff10f7c1,70698af947aaa8cce21694f3e45707eeff10f7c1,[split] updated versions.properties
mariusae,2011-08-05 21:31:52,https://api.github.com/repos/twitter/finagle/git/commits/15852ed6fcdf427caf30b4c801d307426742ab39,15852ed6fcdf427caf30b4c801d307426742ab39,[split] finagle: quench unecessary error logging
mariusae,2011-08-05 21:18:29,https://api.github.com/repos/twitter/finagle/git/commits/d03ad93a1fc6c187c5c3e28b510b402656618848,d03ad93a1fc6c187c5c3e28b510b402656618848,[split] finagle-kestrel: java grabbyhands example
mariusae,2011-08-05 18:14:14,https://api.github.com/repos/twitter/finagle/git/commits/7fa129d92231dd8d01c5b65e3dcb3c37612b0908,7fa129d92231dd8d01c5b65e3dcb3c37612b0908,[split] finagle-kestrel: whitespace fix
mariusae,2011-08-05 18:10:52,https://api.github.com/repos/twitter/finagle/git/commits/a11bb69a4c670267d069fdd2acb1a73219b54da4,a11bb69a4c670267d069fdd2acb1a73219b54da4,[split] finagle-kestrel: don't render timeouts > 2^31-1
mariusae,2011-08-04 22:20:38,https://api.github.com/repos/twitter/finagle/git/commits/583a1047d3113098fe5e9ab9d1f2745b94fe31e1,583a1047d3113098fe5e9ab9d1f2745b94fe31e1,[split] finagle-kestrel: timeouts on read()
johanoskarsson,2011-08-04 21:26:26,https://api.github.com/repos/twitter/finagle/git/commits/9d6f1f50ff5f02c89b1734efd321e1654624181c,9d6f1f50ff5f02c89b1734efd321e1654624181c,[split] Adds a KestrelTracingFilter that creates trace annotations for the Kestrel client
mariusae,2011-08-04 17:03:59,https://api.github.com/repos/twitter/finagle/git/commits/9b65b8da4ddfb9ccd1f2774892ed0f8b5c64ecf1,9b65b8da4ddfb9ccd1f2774892ed0f8b5c64ecf1,"[split] finagle-kestrel: MultiReader / ""grabby hands""

/**
 * Read from multiple clients in round-robin fashion, ""grabby hands""
 * style.  The load balancing is simple, and falls out naturally from
 * the user of the {{Offer}} mechanism: When there are multiple
 * available messages, round-robin across them.  Otherwise, wait for
 * the first message to arrive.
 */"
johanoskarsson,2011-08-03 20:32:16,https://api.github.com/repos/twitter/finagle/git/commits/9dd7ebae2a23dcc434b18732a36cbadd7e5ecd8f,9dd7ebae2a23dcc434b18732a36cbadd7e5ecd8f,[split] Fixes a bug where sampling were broken if the client was Finagle based and had not set a tracer. Solution is to have such clients defer sampling decisions to the server. Also fixes cases where the meaning of sampling was flipped.
mariusae,2011-08-03 18:19:14,https://api.github.com/repos/twitter/finagle/git/commits/0ea2e4bdf26b491a63166a542c6d62d6843908e7,0ea2e4bdf26b491a63166a542c6d62d6843908e7,[split] upgrade to netty 3.2.5.Final
mariusae,2011-08-02 22:48:20,https://api.github.com/repos/twitter/finagle/git/commits/9d1f0ceacee59b03008a7131b5a29e5f411ad1a3,9d1f0ceacee59b03008a7131b5a29e5f411ad1a3,"[split] finagle kestrel: introduce {read, write} using broker/offer, and reliableRead on top of this

* {read, write} uses com.twitter.concurrent.{Offer, Broker}
* readReliably gives a reliable stream (over potentially many kestrels) with custom backoff policies
* codec: support ERROR messages
* a java interface for the same
* some supporting modifications in Offer/Broker, and com.twitter.util.Time"
mariusae,2011-08-02 22:45:13,https://api.github.com/repos/twitter/finagle/git/commits/4062aa5281ba4e6267f3487c8c0b0a6773ec4c65,4062aa5281ba4e6267f3487c8c0b0a6773ec4c65,[split] finagle: update changelog
mariusae,2011-08-02 22:42:07,https://api.github.com/repos/twitter/finagle/git/commits/220088698f8249ac6e9c35e5537cc085dce9f2f5,220088698f8249ac6e9c35e5537cc085dce9f2f5,"[split] org=com.twitter,name=finagle,version=1.8.1-SNAPSHOT"
mariusae,2011-08-02 22:42:06,https://api.github.com/repos/twitter/finagle/git/commits/4d6b18cf2721f05f872d72975f8b4510676858cc,4d6b18cf2721f05f872d72975f8b4510676858cc,"[split] org=com.twitter,name=finagle,version=1.8.0"
mariusae,2011-08-02 22:30:54,https://api.github.com/repos/twitter/finagle/git/commits/987c5eb9ff3215883e67e041ee1ec1773676a815,987c5eb9ff3215883e67e041ee1ec1773676a815,[split] fix up Ssl imports
mariusae,2011-08-02 22:10:52,https://api.github.com/repos/twitter/finagle/git/commits/1546665856092d3d33c9ecc985f6a87a2289d457,1546665856092d3d33c9ecc985f6a87a2289d457,[split] updated versions.properties
mariusae,2011-08-02 22:10:52,https://api.github.com/repos/twitter/finagle/git/commits/eeb3eca6c9157fc39afc13fcbbd7c14c36e8ae58,eeb3eca6c9157fc39afc13fcbbd7c14c36e8ae58,[split] updated versions.properties
mariusae,2011-08-02 21:56:29,https://api.github.com/repos/twitter/finagle/git/commits/0939fc53d604b550749611d71d483756c50a78c9,0939fc53d604b550749611d71d483756c50a78c9,[split] 1.8.0-SNAPSHOT
mariusae,2011-08-02 21:53:25,https://api.github.com/repos/twitter/finagle/git/commits/ebe2fcfa548c4ccb145c8d5b3257a071e513b50d,ebe2fcfa548c4ccb145c8d5b3257a071e513b50d,[split] finagle SSL: perform hostname validation in the client.
johanoskarsson,2011-08-01 19:04:49,https://api.github.com/repos/twitter/finagle/git/commits/48327c71e3a044e675d10849b9aea5696a9165c6,48327c71e3a044e675d10849b9aea5696a9165c6,[split] Introduce new util-codec module to contain various codecs. Primarily so that it can depend on apache commons-codec 1.5 for base64 improvements over the sun one.
mariusae,2011-07-29 22:31:48,https://api.github.com/repos/twitter/finagle/git/commits/bda261d72c03ca2c6cc18a8df2d90bbc22621877,bda261d72c03ca2c6cc18a8df2d90bbc22621877,[split] finagle changelog: 1.7.5
mariusae,2011-07-29 22:30:29,https://api.github.com/repos/twitter/finagle/git/commits/96257f5a8df8859d551f12fbd26ecd9474f07caf,96257f5a8df8859d551f12fbd26ecd9474f07caf,"[split] org=com.twitter,name=finagle,version=1.7.6-SNAPSHOT"
mariusae,2011-07-29 22:30:29,https://api.github.com/repos/twitter/finagle/git/commits/3ffd2e41484bb8b26182091ee4904261cad20bf8,3ffd2e41484bb8b26182091ee4904261cad20bf8,"[split] org=com.twitter,name=finagle,version=1.7.5"
mariusae,2011-07-29 22:19:14,https://api.github.com/repos/twitter/finagle/git/commits/62226a083368fbeea6046edee22e4469f55dfdf0,62226a083368fbeea6046edee22e4469f55dfdf0,[split] updated versions.properties
mariusae,2011-07-29 00:02:28,https://api.github.com/repos/twitter/finagle/git/commits/4e7e1f37d7bedb840ccc55f41381f9dc42f5e027,4e7e1f37d7bedb840ccc55f41381f9dc42f5e027,"[split] finagle: convert WriteException to a case class

this makes it is pattern-matcheable and the underlying exception is
available.

github issue 25: https://github.com/twitter/finagle/issues/25"
mariusae,2011-07-27 20:40:17,https://api.github.com/repos/twitter/finagle/git/commits/39d0e2b20f3174ea61d1f3db45a8c795899c7875,39d0e2b20f3174ea61d1f3db45a8c795899c7875,[split] finagle: fixup README.md again
mariusae,2011-07-27 20:31:47,https://api.github.com/repos/twitter/finagle/git/commits/283bf9ff2a5037baa19b5e1856ba7e3f0da4272d,283bf9ff2a5037baa19b5e1856ba7e3f0da4272d,[split] updated versions.properties
mariusae,2011-07-27 20:03:55,https://api.github.com/repos/twitter/finagle/git/commits/45d51f7bb97212aba32dceae59c6440bedb858a1,45d51f7bb97212aba32dceae59c6440bedb858a1,"[split] Merge commit 'ca97df07744c349bdccfc21fe0cad7a24c8643b8

Conflicts:
	finagle/README.md"
mariusae,2011-07-27 20:02:26,https://api.github.com/repos/twitter/finagle/git/commits/ca97df07744c349bdccfc21fe0cad7a24c8643b8,ca97df07744c349bdccfc21fe0cad7a24c8643b8,"Merge branch 'bc'

Conflicts:
	README.md"
mariusae,2011-07-27 19:47:07,https://api.github.com/repos/twitter/finagle/git/commits/5320cdeb71d48a58267f26d7c3ab15a09772c831,5320cdeb71d48a58267f26d7c3ab15a09772c831,"[split] finagle CachingPool: limit size to highWatermark - lowWatermark

limit the size of the cache pool -- while we never would keep more
(live) connections than the connection limit before, this makes
accounting more accurate, and allows us to not grow ridiculously large
caches of dead connections (which could be costly.)"
mariusae,2011-07-27 04:52:56,https://api.github.com/repos/twitter/finagle/git/commits/752ca3f0a46ae2b912896b8b28a5aa07f9fa2255,752ca3f0a46ae2b912896b8b28a5aa07f9fa2255,"Merge pull request #24 from mccue/master

Adding Finagle documentation as README.md"
mccue,2011-07-25 05:49:32,https://api.github.com/repos/twitter/finagle/git/commits/0a2de683c8b73e8d51a87526587316bdee585a42,0a2de683c8b73e8d51a87526587316bdee585a42,Compromise on URL's!
mccue,2011-07-25 05:34:26,https://api.github.com/repos/twitter/finagle/git/commits/7269eba67f43121bd35dc5e5ea9dc3da2dcf7323,7269eba67f43121bd35dc5e5ea9dc3da2dcf7323,another url approach
mccue,2011-07-25 05:13:57,https://api.github.com/repos/twitter/finagle/git/commits/e88fb6b9bdc1aa8a30c6084331f78df0a584290a,e88fb6b9bdc1aa8a30c6084331f78df0a584290a,one more try on URLs
mccue,2011-07-25 05:04:44,https://api.github.com/repos/twitter/finagle/git/commits/4843b2d1fee4c7f88fbd51497a25e0e70a126bcb,4843b2d1fee4c7f88fbd51497a25e0e70a126bcb,Not giving up on URLs
mccue,2011-07-25 04:42:11,https://api.github.com/repos/twitter/finagle/git/commits/3a3be2de0ab33ef81641fa4d597eac16a35fce45,3a3be2de0ab33ef81641fa4d597eac16a35fce45,Giving up on relative URLs for now
mccue,2011-07-25 04:22:17,https://api.github.com/repos/twitter/finagle/git/commits/d0f21f0b67a23655546d4bba5f1676cc5f7fd857,d0f21f0b67a23655546d4bba5f1676cc5f7fd857,"Fix url's to graphics

try finagle/blob/master/doc"
mccue,2011-07-25 04:12:36,https://api.github.com/repos/twitter/finagle/git/commits/f69d1ce48f8bab2567d458a5a9adee7ca34cb948,f69d1ce48f8bab2567d458a5a9adee7ca34cb948,"fixed url to graphics

must be finagle/doc/...png"
mccue,2011-07-25 03:54:00,https://api.github.com/repos/twitter/finagle/git/commits/f74d889436b1bf7c6a6c4bf4120ef46d4986678f,f74d889436b1bf7c6a6c4bf4120ef46d4986678f,"Changing contents of README.md to Finagle Developer Guide

.png graphics for README.md live in doc folder for now"
mariusae,2011-07-22 16:39:05,https://api.github.com/repos/twitter/finagle/git/commits/8a281d466aeef8900cf2e36e95a3f173604d6e39,8a281d466aeef8900cf2e36e95a3f173604d6e39,[split] finagle: update ChangeLog
twilliam,2011-07-21 23:27:03,https://api.github.com/repos/twitter/finagle/git/commits/b58a9b608dc966723bf66fd61436ca37e52228ea,b58a9b608dc966723bf66fd61436ca37e52228ea,[split] Merge branch 'photurkey-more-more-tweaking' into photurkey-release-2011-07-21-1626
twilliam,2011-07-21 22:51:09,https://api.github.com/repos/twitter/finagle/git/commits/792b07ba92075d2f2b4d9bad12219c4b2d477c27,792b07ba92075d2f2b4d9bad12219c4b2d477c27,[split] bump ostrich dep for finagle-ostrich4 to 4.7.3
mariusae,2011-07-21 21:42:01,https://api.github.com/repos/twitter/finagle/git/commits/f76b9a428f82144cc014673f4e42ec0f18b811ad,f76b9a428f82144cc014673f4e42ec0f18b811ad,[split] ChannelServiceFactory: encode exceptions from bootstrap.connect()
mariusae,2011-07-20 23:36:57,https://api.github.com/repos/twitter/finagle/git/commits/5dcf4b272ac959b9195cc774740da42b67a8de5c,5dcf4b272ac959b9195cc774740da42b67a8de5c,"[split] org=com.twitter,name=finagle,version=1.7.5-SNAPSHOT"
mariusae,2011-07-20 23:36:57,https://api.github.com/repos/twitter/finagle/git/commits/813ff2e5d66441ec77e1e81b42f9b720510a1b96,813ff2e5d66441ec77e1e81b42f9b720510a1b96,"[split] org=com.twitter,name=finagle,version=1.7.4"
mariusae,2011-07-20 23:22:54,https://api.github.com/repos/twitter/finagle/git/commits/f900af03c4a42ab8862c4a3909de7d9f0973b9f4,f900af03c4a42ab8862c4a3909de7d9f0973b9f4,[split] finagle-memcached: `gets' and `cas' support.
mariusae,2011-07-20 04:06:49,https://api.github.com/repos/twitter/finagle/git/commits/72c958a4dfb2e46f21ddee8c787987ed2f79d171,72c958a4dfb2e46f21ddee8c787987ed2f79d171,[split] finagle README: refer to ChangeLog
mariusae,2011-07-20 00:09:26,https://api.github.com/repos/twitter/finagle/git/commits/2714617dfc14474ead3073ebc188c8e535379fbe,2714617dfc14474ead3073ebc188c8e535379fbe,[split] finagle: update ChangeLog
mariusae,2011-07-20 00:05:03,https://api.github.com/repos/twitter/finagle/git/commits/af97ed049b110164b750b9312e86a2c5602fa28a,af97ed049b110164b750b9312e86a2c5602fa28a,"[split] org=com.twitter,name=finagle,version=1.7.4-SNAPSHOT"
mariusae,2011-07-20 00:05:03,https://api.github.com/repos/twitter/finagle/git/commits/620437731f0f1f4c8947acb6cbb2d74b476c5130,620437731f0f1f4c8947acb6cbb2d74b476c5130,"[split] org=com.twitter,name=finagle,version=1.7.3"
mariusae,2011-07-19 23:48:25,https://api.github.com/repos/twitter/finagle/git/commits/5e01b4e459ed5eaab221ce605d7e7405a054c371,5e01b4e459ed5eaab221ce605d7e7405a054c371,"[split] finagle: fixes

1.  fix WatermarkPool accounting bug that i introduced in my ""lint""
branch

2.  set currentReplyFuture to null on connection failure, so that we
don't race with the cancellation code -- this causes annoying but
harmless log messages."
johanoskarsson,2011-07-19 18:40:48,https://api.github.com/repos/twitter/finagle/git/commits/ba08bf811b6b86ce57797bcc990aaa311bb4d826,ba08bf811b6b86ce57797bcc990aaa311bb4d826,"[split] Adds tracing support for the Memcached client. This only creates the client side annotations, no support for passing along ids and such to the memcached server."
mariusae,2011-07-19 03:40:22,https://api.github.com/repos/twitter/finagle/git/commits/4cd0dcf4aa5f9528c6487cdcbc7501165c0e8ff5,4cd0dcf4aa5f9528c6487cdcbc7501165c0e8ff5,[split] finagle: add ChangeLog
mariusae,2011-07-19 03:38:07,https://api.github.com/repos/twitter/finagle/git/commits/c77dfbf01808b671cfc54580fecd8ca54b0533db,c77dfbf01808b671cfc54580fecd8ca54b0533db,"[split] org=com.twitter,name=finagle,version=1.7.3-SNAPSHOT"
mariusae,2011-07-19 03:38:06,https://api.github.com/repos/twitter/finagle/git/commits/d6322fd445104ed2c173ed86b8a8c3dc286110f2,d6322fd445104ed2c173ed86b8a8c3dc286110f2,"[split] org=com.twitter,name=finagle,version=1.7.2"
mariusae,2011-07-19 02:55:38,https://api.github.com/repos/twitter/finagle/git/commits/d25e97f5e0010a6d7745c55a47145d78416d74ec,d25e97f5e0010a6d7745c55a47145d78416d74ec,[split] updated versions.properties
mariusae,2011-07-19 01:12:44,https://api.github.com/repos/twitter/finagle/git/commits/7cb85074057770197464ae2c3d505d7935a759e0,7cb85074057770197464ae2c3d505d7935a759e0,"[split] finagle: misc. lint

CachingPool: export cache size
ChannelService: on cancellation, only close if currentReplyFuture is defined; declare availability only if the service is not already busy (since dispatching requests at that time would fail)
TimeoutFactory: release underlying service if it was succesfully acquired after cancellation. this could happen on a race condition between the timeout and the service acquisition
JavaLoggerStatsReceiver: fix format string
ServiceToChannelHandlerSpec: turn logging off during noisy tests. this one will be a crowd favorite."
evnm,2011-07-19 01:06:23,https://api.github.com/repos/twitter/finagle/git/commits/01da46e6902b5fb5314653969d20d9f7b5a903f5,01da46e6902b5fb5314653969d20d9f7b5a903f5,"[split] Squashed commit of the following:

commit b36e2666c23d1b6d642c81c8ce0850ff89af6a36
Merge: 3fb8e7f edaabd8
Author: Evan Meagher <evan.meagher@gmail.com>
Date:   Mon Jul 18 18:06:07 2011 -0700

    Merge branch 'master' into evm-readme-fixit

commit 3fb8e7f980282deadc85f56605d520107365c638
Author: Evan Meagher <evan.meagher@gmail.com>
Date:   Mon Jul 18 16:56:04 2011 -0700

    Fix spelling error in Thrift Client Finagle example.

    s/Thrfit/Thrift/

commit f09c04e3050bd45b617fa5817078bcb5cdcba317
Author: Evan Meagher <evan.meagher@gmail.com>
Date:   Mon Jul 18 14:31:28 2011 -0700

    Fix wording error in README code example.

commit 80f14d2987b60858093407f4a2c73460c9c67a61
Author: Evan Meagher <evan.meagher@gmail.com>
Date:   Mon Jul 18 14:15:32 2011 -0700

    Fix notes list markdown in authorization filter section.

    The notes numbered list wasn't rendering properly because of the absense
    of a newline between the title and the list itself.

commit 28db1fbaf5d0ecead3e2032250d99243d5b55a37
Author: Evan Meagher <evan.meagher@gmail.com>
Date:   Mon Jul 18 14:10:44 2011 -0700

    Fix wording errors in Threading Model section of README."
mariusae,2011-07-14 02:11:21,https://api.github.com/repos/twitter/finagle/git/commits/82758509ed41ed0cf82da82ba1f3121e01acfde2,82758509ed41ed0cf82da82ba1f3121e01acfde2,"[split] introduce end-to-end and connect timeouts, clarify and provide documentation for all of ClientBuilder

this allows clients to specify end-to-end timeouts - which is likely
what most clients want - while retaining granularity over the various
other timeouts.  the introduction of a connectTimeout also allows
clients to moderate total queue+connect times."
mariusae,2011-07-13 19:50:14,https://api.github.com/repos/twitter/finagle/git/commits/b9d418e68173af7bf64d2c738e2886f32ed170f3,b9d418e68173af7bf64d2c738e2886f32ed170f3,"[split] support cancellation in finagle clients, end to end

this means:

  * a user can call .cancel() on a future returned from a Service, and
  it'll propagate all the way back to the ChannelService (or the pool
  if it is queued)

  * timeouts also call .cancel() on the underlying Future, preventing
  the occupation of underlying resources for requests that are anyway
  cancelled (pools don't get clogged with doomed requests, and we
  terminate the connection immediately instead of waiting for the
  response)"
johanoskarsson,2011-07-13 17:57:49,https://api.github.com/repos/twitter/finagle/git/commits/9a2bf8d48b3205da79e6f274d76c7a48adea5d05,9a2bf8d48b3205da79e6f274d76c7a48adea5d05,"[split] org=com.twitter,name=finagle,version=1.7.2-SNAPSHOT"
johanoskarsson,2011-07-13 17:57:49,https://api.github.com/repos/twitter/finagle/git/commits/4b17db88c7b410ba3e12054641286c7d52c5607f,4b17db88c7b410ba3e12054641286c7d52c5607f,"[split] org=com.twitter,name=finagle,version=1.7.1"
johanoskarsson,2011-07-13 02:27:35,https://api.github.com/repos/twitter/finagle/git/commits/fe017ce972c3c10476d19627bc2d82d3f7e3270d,fe017ce972c3c10476d19627bc2d82d3f7e3270d,[split] Remove private keyword from codecs. Need to extend them in Cassie
johanoskarsson,2011-07-13 01:14:55,https://api.github.com/repos/twitter/finagle/git/commits/85346c38a45f59c8ceecfdf3bb981d64d01a15f1,85346c38a45f59c8ceecfdf3bb981d64d01a15f1,[split] updated versions.properties
mariusae,2011-07-11 16:18:09,https://api.github.com/repos/twitter/finagle/git/commits/27532095a0fb52dd7cf1c2e56610bbe773aa3ae5,27532095a0fb52dd7cf1c2e56610bbe773aa3ae5,[split] birdcage: upgrade to standard-project 0.12.7
johanoskarsson,2011-07-08 20:53:43,https://api.github.com/repos/twitter/finagle/git/commits/3f6f5c50f7bce2d4a8d31f116553f2faa6669540,3f6f5c50f7bce2d4a8d31f116553f2faa6669540,"[split] org=com.twitter,name=finagle,version=1.7.1-SNAPSHOT"
johanoskarsson,2011-07-08 20:53:43,https://api.github.com/repos/twitter/finagle/git/commits/facdc9c2eae3b1f6e151cd8c31c55cb823361d11,facdc9c2eae3b1f6e151cd8c31c55cb823361d11,"[split] org=com.twitter,name=finagle,version=1.7.0"
johanoskarsson,2011-07-08 19:55:00,https://api.github.com/repos/twitter/finagle/git/commits/e5e134b862805a7eb5b489545de40c70d92cfeb2,e5e134b862805a7eb5b489545de40c70d92cfeb2,"[split] Replace weak map with hashmap, otherwise tracers were unexpectedly missing and new ones created. Do not poll all tracers for sampling decision."
johanoskarsson,2011-07-08 00:06:45,https://api.github.com/repos/twitter/finagle/git/commits/80bbecf846be838b3468eb887e6ea8ddc8e31ffa,80bbecf846be838b3468eb887e6ea8ddc8e31ffa,[split] Fixes a fundamental flaw where the logging of traces would itself create and log a trace
twilliam,2011-07-07 18:15:31,https://api.github.com/repos/twitter/finagle/git/commits/0c6b2506cd3edc582e794f42c98e597814874350,0c6b2506cd3edc582e794f42c98e597814874350,[split] bump finagle-ostrich4 dep to ostrich 4.5.3
mariusae,2011-07-04 12:16:25,https://api.github.com/repos/twitter/finagle/git/commits/4bc66c03c53b9b9769f6e5c2e58dc5188079c4aa,4bc66c03c53b9b9769f6e5c2e58dc5188079c4aa,"[split] finagle: make Thrift{Client,Server}FramedCodec private.  they should only be used through factories."
johanoskarsson,2011-07-01 22:41:29,https://api.github.com/repos/twitter/finagle/git/commits/f7a0fa408cfd105e35dd4997adce0c573edb5f2d,f7a0fa408cfd105e35dd4997adce0c573edb5f2d,[split] Fix b3 tracer test that only worked on my machine...
johanoskarsson,2011-07-01 21:57:17,https://api.github.com/repos/twitter/finagle/git/commits/fd1e4ae82e710b20db91755f5266e7bbffdefdea,fd1e4ae82e710b20db91755f5266e7bbffdefdea,"[split] New BigBrotherBirdTracer that accepts Records from Finagle's tracing system, merges them into B3 Spans and logs this via Scribe. If a Span has not ended as expected it will still be logged after a certain period of time. Support included for sampling. This works downstream too, if a trace is marked as sampled it will not be logged in any downstream clients or servers."
twilliam,2011-07-01 18:36:04,https://api.github.com/repos/twitter/finagle/git/commits/d8236145746d7d7a7bff0a33ede704778b51119b,d8236145746d7d7a7bff0a33ede704778b51119b,[split] Merge branch 'photurkey-release-2011-06-30-1117'
tnarg,2011-07-01 16:59:43,https://api.github.com/repos/twitter/finagle/git/commits/ea81117c5f2a8c2713777afd26f4ac28b5827c2e,ea81117c5f2a8c2713777afd26f4ac28b5827c2e,[split] Modify kestrel Command types to only allow valid combinations of get options.
twilliam,2011-06-30 21:51:33,https://api.github.com/repos/twitter/finagle/git/commits/6961a238d09d1f10d19f8969a2bf919e1a0a26ed,6961a238d09d1f10d19f8969a2bf919e1a0a26ed,[split] Merge remote branch 'origin/master' into photurkey-release-2011-06-30-1117
mariusae,2011-06-30 21:50:32,https://api.github.com/repos/twitter/finagle/git/commits/e00c91709c1be6710d4aee102139b12cb1f837d2,e00c91709c1be6710d4aee102139b12cb1f837d2,"[split] finagle: simplified tracing

1.  finagle no longer does trace aggreation, only annotation
reporting.  the tracers are now responsible for aggreagation

2.  we maintain an ID/tracer stack, and reporting works as follows:
annotations are reported to tracers *below* the ID for which it is
reported.  this enables all relevant use cases, and has simple and
clear semantics.

3.  we now push/pop ids for every request in both the client and the
server"
twilliam,2011-06-30 18:24:35,https://api.github.com/repos/twitter/finagle/git/commits/cc4c7201159b3e2b87daf661d8de8254371c1001,cc4c7201159b3e2b87daf661d8de8254371c1001,[split] Merge branch 'master' into photurkey-release-2011-06-30-1117
twilliam,2011-06-30 18:22:57,https://api.github.com/repos/twitter/finagle/git/commits/547f6472870ff44052f231cd1c0b53e3baae553c,547f6472870ff44052f231cd1c0b53e3baae553c,[split] updated versions.properties
twilliam,2011-06-30 18:19:26,https://api.github.com/repos/twitter/finagle/git/commits/20ccf87fd9e9f16d297c569bcbc9ce5e81b320fb,20ccf87fd9e9f16d297c569bcbc9ce5e81b320fb,[split] bump ostrich dep to 4.5.1
twilliam,2011-06-28 23:09:56,https://api.github.com/repos/twitter/finagle/git/commits/0dec92d48d805f3604634ee6cabd82db4cbd4eb7,0dec92d48d805f3604634ee6cabd82db4cbd4eb7,[split] updated versions.properties
mariusae,2011-06-21 04:12:20,https://api.github.com/repos/twitter/finagle/git/commits/e257e3d12594ca9b8fa1cc5bc207a39b823b83c2,e257e3d12594ca9b8fa1cc5bc207a39b823b83c2,[split] Finagle retrying: add a generic backoff strategy & an exponential backoff strategy; refactor everything in terms of Stream[Duration]; clean up some remnants of old code.
mariusae,2011-06-21 00:41:42,https://api.github.com/repos/twitter/finagle/git/commits/9a5e877ac034aaf504e77649acce713b9a77022b,9a5e877ac034aaf504e77649acce713b9a77022b,"[split] org=com.twitter,name=finagle,version=1.6.2-SNAPSHOT"
mariusae,2011-06-21 00:41:42,https://api.github.com/repos/twitter/finagle/git/commits/4ce4ad0961eb76865bb8e670a4821bbda79700a1,4ce4ad0961eb76865bb8e670a4821bbda79700a1,"[split] org=com.twitter,name=finagle,version=1.6.1"
mariusae,2011-06-21 00:33:43,https://api.github.com/repos/twitter/finagle/git/commits/d41a61a022ec2297b70466077dc278eae592d569,d41a61a022ec2297b70466077dc278eae592d569,[split] updated versions.properties
ryanking,2011-06-17 23:06:52,https://api.github.com/repos/twitter/finagle/git/commits/ee0f50e21628d380ad8041dee697e3939d58adc9,ee0f50e21628d380ad8041dee697e3939d58adc9,"[split] Squashed commit of the following:

commit 46d76dc1137095cd07993a627893cffe7374351b
Author: Ryan King <ryan@theryanking.com>
Date:   Fri Jun 17 12:04:19 2011 -0700

    upgrade commons stats dependency"
mariusae,2011-06-11 22:32:51,https://api.github.com/repos/twitter/finagle/git/commits/45633b953febbd742ecd89d5b9149187eb63990b,45633b953febbd742ecd89d5b9149187eb63990b,"[split] Don't throw ""Codec issued concurrent requests"" exceptions when the channel is dead.  This can happen because netty can deliver messages after an exception has occured on the channel (and in fact does on ECONNRESET)."
ryanking,2011-06-10 21:24:25,https://api.github.com/repos/twitter/finagle/git/commits/7cf69196338f18528088a5828c8985bce5eda486,7cf69196338f18528088a5828c8985bce5eda486,"[split] Squashed commit of the following:

commit 32ac84ef01c5e8a9848d34008ce184bce575e59f
Author: Ryan King <ryan@theryanking.com>
Date:   Thu Jun 9 15:00:26 2011 -0700

    update based on Marius' feedback.

commit bc941104a624ecd51b5b09460d30c019cf86af5d
Author: Ryan King <ryan@theryanking.com>
Date:   Wed Jun 8 16:06:43 2011 -0700

    refactor to make the retry strategy take a partial function

commit aa092a5fc27ae63f455fb45f2719163022abe913
Author: Ryan King <ryan@theryanking.com>
Date:   Tue Jun 7 17:38:25 2011 -0700

    checkpoint on refactor"
johanoskarsson,2011-06-09 20:50:42,https://api.github.com/repos/twitter/finagle/git/commits/b5dd888c616f639579641e2c6bea45e3427061a9,b5dd888c616f639579641e2c6bea45e3427061a9,"[split] Pick up local host if server bound to 0.0.0.0, even in the case where client is not tracing"
mariusae,2011-06-08 22:31:42,https://api.github.com/repos/twitter/finagle/git/commits/d4a651acbe3acc297475a37d6759f84ca49ea2c4,d4a651acbe3acc297475a37d6759f84ca49ea2c4,"[split] Unify codec APIs across the board.

  [case] class SomeCodec
  object Codec {
    def apply(): SomeCodec
    def get(): SomeCodec
  }"
johanoskarsson,2011-06-08 19:05:12,https://api.github.com/repos/twitter/finagle/git/commits/c45e8763116387f737f433c93a655c9bb05ed854,c45e8763116387f737f433c93a655c9bb05ed854,"[split] Change Finagle ServerBuilder to require name, bindTo and codec at compile time. The name requirement will be used in traces. Also change any projects using Finagle to set the name if they didn't already."
mariusae,2011-06-08 18:39:04,https://api.github.com/repos/twitter/finagle/git/commits/7bb94e45696c14999607c9790d6702ca4e363ed5,7bb94e45696c14999607c9790d6702ca4e363ed5,[split] 1.6.0-SNAPSHOT
mariusae,2011-06-08 18:35:40,https://api.github.com/repos/twitter/finagle/git/commits/7a32ce56cc6237a393ed779d9e2b38c60f58c4af,7a32ce56cc6237a393ed779d9e2b38c60f58c4af,"[split] Simplify codecs.

This refactoring gets rid of the notion of ""protocols"" and drastically
simplifies codecs.  There is only one codec type, a Codec.
Additionally, there are codec factories for servers and clients.

Factories are now literally Functions: this enhances composition and
reuse.

We also

  - deprecate the old Http codec
  - deprecate the old ""Codec"".  this is now a ""CodecFactory""
  - get rid of ""inner types"" in codecs.  if needed, codecs should
  apply their own transformations - adds some simple utilities for
  creating codecs from pipelines/pipelineFactories"
mariusae,2011-06-07 17:23:51,https://api.github.com/repos/twitter/finagle/git/commits/7dd78d377835a192850d9e09876b8c1a5000bf66,7dd78d377835a192850d9e09876b8c1a5000bf66,"[split] org=com.twitter,name=finagle,version=1.5.4-SNAPSHOT"
mariusae,2011-06-07 17:23:51,https://api.github.com/repos/twitter/finagle/git/commits/214c67ac6e8e8bff6490c845a30e795bd5da3234,214c67ac6e8e8bff6490c845a30e795bd5da3234,"[split] org=com.twitter,name=finagle,version=1.5.3"
mariusae,2011-06-07 17:20:11,https://api.github.com/repos/twitter/finagle/git/commits/e447c0380b2b7928975c0dd5a6427ae9c52684e0,e447c0380b2b7928975c0dd5a6427ae9c52684e0,"[split] org=com.twitter,name=finagle,version=1.5.3-SNAPSHOT"
mariusae,2011-06-07 17:20:11,https://api.github.com/repos/twitter/finagle/git/commits/9e5b19755facdc949b8d9af83da063b738eb2890,9e5b19755facdc949b8d9af83da063b738eb2890,"[split] org=com.twitter,name=finagle,version=1.5.2"
mariusae,2011-06-07 00:56:10,https://api.github.com/repos/twitter/finagle/git/commits/8317fbb7584c2f03e9aa63ec2d0747bbe0b44923,8317fbb7584c2f03e9aa63ec2d0747bbe0b44923,[split] Codelab: searchbird. This demonstrates the use of finagle in a small distributed search engine for tweets.
twilliam,2011-06-02 23:09:04,https://api.github.com/repos/twitter/finagle/git/commits/33270ee7500775030d764a399057b3fb0934975c,33270ee7500775030d764a399057b3fb0934975c,[split] write more in README about finagle's event model
johanoskarsson,2011-06-02 19:48:00,https://api.github.com/repos/twitter/finagle/git/commits/fc5e10deefb7ddabd82ae3fb37f4b32d401b32c3,fc5e10deefb7ddabd82ae3fb37f4b32d401b32c3,[split] Adds a ThriftClientBufferedCodecFactory that allows us to pass in the service name properly in Photurkey Main.
mariusae,2011-06-01 17:48:03,https://api.github.com/repos/twitter/finagle/git/commits/87c31e0129e2f82d022d5c744e64373a6d34e3dd,87c31e0129e2f82d022d5c744e64373a6d34e3dd,[split] ClientBuilder: use the =:= type constraint instead of From => To so that we can get pretty error messages some day
johanoskarsson,2011-05-25 20:01:21,https://api.github.com/repos/twitter/finagle/git/commits/0b7a7a299e2cedcd76502916754d4dd195516b3e,0b7a7a299e2cedcd76502916754d4dd195516b3e,[split] Missing fix for tests around endSpan
johanoskarsson,2011-05-25 18:48:53,https://api.github.com/repos/twitter/finagle/git/commits/daef0949f35aff83bd8a62cc72482584f53464b4,daef0949f35aff83bd8a62cc72482584f53464b4,[split] Only send spans that have been fully formed to the trace receiver
mariusae,2011-05-24 16:35:06,https://api.github.com/repos/twitter/finagle/git/commits/75c0c6b621f72392e8732ab907312c4eed4fe47c,75c0c6b621f72392e8732ab907312c4eed4fe47c,[split] use persistent data structures to our advantage!
mariusae,2011-05-20 23:31:32,https://api.github.com/repos/twitter/finagle/git/commits/042613cfbc42f8f639db2a482b9e018f2dfce662,042613cfbc42f8f639db2a482b9e018f2dfce662,"[split] org=com.twitter,name=finagle,version=1.5.2-SNAPSHOT"
mariusae,2011-05-20 23:31:30,https://api.github.com/repos/twitter/finagle/git/commits/b2d424300bbaa07be8dd21e4e72296cd1dc918b2,b2d424300bbaa07be8dd21e4e72296cd1dc918b2,"[split] org=com.twitter,name=finagle,version=1.5.1"
mariusae,2011-05-20 23:19:53,https://api.github.com/repos/twitter/finagle/git/commits/3f12a8618e55b969a7521d187dedcc9c8288cade,3f12a8618e55b969a7521d187dedcc9c8288cade,[split] finagle: add support for moderating pool waiter (queue) sizes. this is exposed through the new ClientBuilder option hostConnectionMaxWaiters.
mariusae,2011-05-20 20:36:02,https://api.github.com/repos/twitter/finagle/git/commits/e5e13fb62344fb5bdd420515031b62bb6ab2784c,e5e13fb62344fb5bdd420515031b62bb6ab2784c,"[split] org=com.twitter,name=finagle,version=1.5.1-SNAPSHOT"
mariusae,2011-05-20 20:36:02,https://api.github.com/repos/twitter/finagle/git/commits/a0c3f06f0ec477981da47e3da5f5ff5a8e6243b8,a0c3f06f0ec477981da47e3da5f5ff5a8e6243b8,"[split] org=com.twitter,name=finagle,version=1.5.0"
mariusae,2011-05-20 20:26:19,https://api.github.com/repos/twitter/finagle/git/commits/e8b5eedcb3423f739bfd18d7f24034122d58c486,e8b5eedcb3423f739bfd18d7f24034122d58c486,[split] finagle: removes potential deadlock scenario in gauge gathering
mariusae,2011-05-20 00:11:07,https://api.github.com/repos/twitter/finagle/git/commits/6014eda6daadb0334da8a3dc12ca5a5326a10bff,6014eda6daadb0334da8a3dc12ca5a5326a10bff,"[split] ChannelSemaphoreHandler: ressurrect DeadPermit (hah!) so we don't generate noisy and alarming log entries when the channel has simply been closed by the client (or some other exception has occurred)

Also fixes a bug where we didn't return after issuing an exception in
the null permit case.  This would also cause confusing error messages."
johanoskarsson,2011-05-19 21:57:21,https://api.github.com/repos/twitter/finagle/git/commits/14cef2b3092ec74f94a7c6621dc9cab9db0b5799,14cef2b3092ec74f94a7c6621dc9cab9db0b5799,"[split] Finagle tracing: Adds service name, method name and endpoint to the Span before sending. Gets service name from the client and server configs. Method name is parsed out of request. Endpoint still needs some love, only works server side if not bound to 0.0.0.0 Bumps version to 1.5.0."
johanoskarsson,2011-05-19 21:36:58,https://api.github.com/repos/twitter/finagle/git/commits/654e150c70fb4a57ea64aa577328f6060bd56a14,654e150c70fb4a57ea64aa577328f6060bd56a14,[split] Finagle tracing: Span parent ids are optional. If the current span is the root no parent will exist
mariusae,2011-05-18 23:57:33,https://api.github.com/repos/twitter/finagle/git/commits/811b3394643677c46c9991dd2770227dd8171ac1,811b3394643677c46c9991dd2770227dd8171ac1,"[split] org=com.twitter,name=finagle,version=1.4.5-SNAPSHOT"
mariusae,2011-05-18 23:57:32,https://api.github.com/repos/twitter/finagle/git/commits/cb67c044275588a6bee40dfdba56da4146431c60,cb67c044275588a6bee40dfdba56da4146431c60,"[split] org=com.twitter,name=finagle,version=1.4.4"
mariusae,2011-05-18 23:45:40,https://api.github.com/repos/twitter/finagle/git/commits/b259f24a47dddfccd4f9abdb5c27e15436f34629,b259f24a47dddfccd4f9abdb5c27e15436f34629,[split] updated versions.properties
mariusae,2011-05-18 23:45:38,https://api.github.com/repos/twitter/finagle/git/commits/c501d7bac8e7d260677be89557b86e6d1475a239,c501d7bac8e7d260677be89557b86e6d1475a239,[split] updated versions.properties
mariusae,2011-05-17 21:37:48,https://api.github.com/repos/twitter/finagle/git/commits/deab29668c0bff00a198f566a0166aece7c1b0fb,deab29668c0bff00a198f566a0166aece7c1b0fb,[split] ExpiringService: enforce release-once semantics ChannelService: warn loudly if release-once is broken
mariusae,2011-05-17 21:37:12,https://api.github.com/repos/twitter/finagle/git/commits/efea7fea3e5a781cbfa101e018ee7e7763cdbf2a,efea7fea3e5a781cbfa101e018ee7e7763cdbf2a,[split] update readme w/ changelog
mariusae,2011-05-17 01:06:09,https://api.github.com/repos/twitter/finagle/git/commits/4aff1d37724d6bf6d1678875c7bbcfaabc3f2c17,4aff1d37724d6bf6d1678875c7bbcfaabc3f2c17,"[split] org=com.twitter,name=finagle,version=1.4.4-SNAPSHOT"
mariusae,2011-05-17 01:06:09,https://api.github.com/repos/twitter/finagle/git/commits/55adfd5d8ccf34f8627b29d785abb530009a002b,55adfd5d8ccf34f8627b29d785abb530009a002b,"[split] org=com.twitter,name=finagle,version=1.4.3"
mariusae,2011-05-17 00:56:56,https://api.github.com/repos/twitter/finagle/git/commits/2d26f8b71f448136bb4bb4c7c78b1313b6fb5a2d,2d26f8b71f448136bb4bb4c7c78b1313b6fb5a2d,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
ryanking,2011-05-17 00:56:25,https://api.github.com/repos/twitter/finagle/git/commits/8fd420d6399e74f6b3c2d03c7d9f0342e030f442,8fd420d6399e74f6b3c2d03c7d9f0342e030f442,[split] Merge branch 'commons_stats'
mariusae,2011-05-16 23:31:09,https://api.github.com/repos/twitter/finagle/git/commits/92b5c355f1f4d16938978dc216712d4056251708,92b5c355f1f4d16938978dc216712d4056251708,"[split] org=com.twitter,name=finagle,version=1.4.3-SNAPSHOT"
mariusae,2011-05-16 23:31:09,https://api.github.com/repos/twitter/finagle/git/commits/a205b822f797fdb7ed0233dc4c190ca68a41e7cf,a205b822f797fdb7ed0233dc4c190ca68a41e7cf,"[split] org=com.twitter,name=finagle,version=1.4.2"
mariusae,2011-05-16 23:27:18,https://api.github.com/repos/twitter/finagle/git/commits/8300ba91b2ac44f39047a57b3d70f588add2aef6,8300ba91b2ac44f39047a57b3d70f588add2aef6,[split] hackety hack hack
mariusae,2011-05-16 23:06:15,https://api.github.com/repos/twitter/finagle/git/commits/41089bfe9b7e48ae7ce32daa061dcf447b4cfe94,41089bfe9b7e48ae7ce32daa061dcf447b4cfe94,[split] updated versions.properties
mariusae,2011-05-16 22:36:08,https://api.github.com/repos/twitter/finagle/git/commits/4e7bae543b9d621249d5a3b2de0cbb1471f690d2,4e7bae543b9d621249d5a3b2de0cbb1471f690d2,[split] finagle: some small bugfixes.
mariusae,2011-05-16 21:57:13,https://api.github.com/repos/twitter/finagle/git/commits/9b1e9a7c77ad89b811b384e1abd8fc22c93ff259,9b1e9a7c77ad89b811b384e1abd8fc22c93ff259,"[split] a number of finagle bugfixes and improvements.

  * finagle/../LeastQueuedStrategy.scala: make sure we account for
  service creation failure. otherwise downed hosts will have a pegged
  queue size from the view of the strategy. this prevented proper
  rebalancing in scenarios like rolling restarts.

  * finagle/../ClientBuilder.scala: reintroduce failure accrual into the
  stack, with reasonable defaults.

  * finagle/../ServerBuilder.scala: promote buffer size parameterization
  to the child channels -- they make sense only there.

  * finagle/../ChannelService.scala: keep track of failed & cancelled
  connects as well.

  * finagle/../LoadBalancedFactory.scala: add availability as a gauge

  * finagle/../FailureAccrualFactory.scala: also account for service
  creation failures."
ryanking,2011-05-13 00:24:42,https://api.github.com/repos/twitter/finagle/git/commits/0e6562192d009f07c053ea7dfb64915e67da35c0,0e6562192d009f07c053ea7dfb64915e67da35c0,"[split] fix bug where you use a custom protocol, but not a custom codec"
ryanking,2011-05-12 20:35:41,https://api.github.com/repos/twitter/finagle/git/commits/7eb5f89a85b3747798d176ce7e508929b5dcba5c,7eb5f89a85b3747798d176ce7e508929b5dcba5c,[split] memoize
ryanking,2011-05-12 20:09:43,https://api.github.com/repos/twitter/finagle/git/commits/348b37dc9b6a0c2e4d69a24ccd93d59d4c427d53,348b37dc9b6a0c2e4d69a24ccd93d59d4c427d53,[split] add stub test
ryanking,2011-05-12 00:10:59,https://api.github.com/repos/twitter/finagle/git/commits/716075ebf592efdcc48f6ce1937ba639210aa45b,716075ebf592efdcc48f6ce1937ba639210aa45b,[split] remove unneccessary explicit cast
ryanking,2011-05-11 22:36:56,https://api.github.com/repos/twitter/finagle/git/commits/c6dd1d9faf149d7224ede212d5d6a345141f7902,c6dd1d9faf149d7224ede212d5d6a345141f7902,[split] fix formatting
ryanking,2011-05-11 22:18:17,https://api.github.com/repos/twitter/finagle/git/commits/dae8f5a2356f82715482bc6ecb5464e92092df29,dae8f5a2356f82715482bc6ecb5464e92092df29,[split] switch to percentiles
ryanking,2011-05-11 20:07:57,https://api.github.com/repos/twitter/finagle/git/commits/c5cd0cc965887345bf01e07621ddf5673f7ed74f,c5cd0cc965887345bf01e07621ddf5673f7ed74f,[split] inline variableName calls
ryanking,2011-05-11 18:41:26,https://api.github.com/repos/twitter/finagle/git/commits/c3d2662500e808abeb44ab894743885cfc9adf82,c3d2662500e808abeb44ab894743885cfc9adf82,[split] address feedback
ryanking,2011-05-11 18:35:36,https://api.github.com/repos/twitter/finagle/git/commits/957cd8f09980a04007332f4fb260a6dbbbf36c25,957cd8f09980a04007332f4fb260a6dbbbf36c25,[split] fix typo in file name
ryanking,2011-05-11 18:34:08,https://api.github.com/repos/twitter/finagle/git/commits/30ad6c78449d40bf8ec7905e983f9820c88b820c,30ad6c78449d40bf8ec7905e983f9820c88b820c,[split] test addGauge
mariusae,2011-05-11 18:32:04,https://api.github.com/repos/twitter/finagle/git/commits/6d8f913194acb1de2c1793e3b42c6f682759ba82,6d8f913194acb1de2c1793e3b42c6f682759ba82,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
mariusae,2011-05-11 18:31:49,https://api.github.com/repos/twitter/finagle/git/commits/dd3cd4ff754cb02da2c9ccc62703c19bce9023e8,dd3cd4ff754cb02da2c9ccc62703c19bce9023e8,[split] fix bad auto import
ryanking,2011-05-11 18:28:29,https://api.github.com/repos/twitter/finagle/git/commits/19686f6436dd2bd3820f62a8a730ee1fbd536fe0,19686f6436dd2bd3820f62a8a730ee1fbd536fe0,[split] fix and test the stat method
ryanking,2011-05-11 18:22:54,https://api.github.com/repos/twitter/finagle/git/commits/267adbc75661b248ec2058bab928a5ffcfabf939,267adbc75661b248ec2058bab928a5ffcfabf939,[split] test and fix the count impl
ryanking,2011-05-11 17:59:15,https://api.github.com/repos/twitter/finagle/git/commits/f7bcaab6dbdce73269f6969d745019b932c7e4b0,f7bcaab6dbdce73269f6969d745019b932c7e4b0,[split] actually increment the stat
ryanking,2011-05-11 17:50:02,https://api.github.com/repos/twitter/finagle/git/commits/b6cb098cef890a748a42d99d3e292624327c4c2a,b6cb098cef890a748a42d99d3e292624327c4c2a,[split] a stats receiver for commons stats
mariusae,2011-05-10 19:41:05,https://api.github.com/repos/twitter/finagle/git/commits/189948e211f521a3f5636d14d86d54160817ee09,189948e211f521a3f5636d14d86d54160817ee09,[split] finagle: don't conflate asynchronicity with an event loop in the README.
mariusae,2011-05-10 19:38:59,https://api.github.com/repos/twitter/finagle/git/commits/c9830fcea82a5358612cc772aef3719188a904f2,c9830fcea82a5358612cc772aef3719188a904f2,"[split] fix race contention-condition in HTTP connection manager. this caused (under heavy connection contention) certain requests to fail with `ConnectionClosed`. this CL also contains some handy new code that i used in debugging this issue.

* ../channel/ChannelService.scala: suport the notion of a
`ChannelServiceReply` which allows the underlying codec to signal the
death of the connection.

* ../http/ClientConnectionManager.scala: use this new mechanism
instead, avoiding the contention-condition.

* ../stats/SummarizingStatsReceiver.scala: a `StatsReceiver` that can
print summaries over a run. very convenient for short-lived processes.

* ../util/ChannelSnooper.scala: print channel IDs in buffer dumps

* ../service/RetryingFilter.scala: keep track of #of retries in stats."
mariusae,2011-05-09 19:22:12,https://api.github.com/repos/twitter/finagle/git/commits/cbaee89fdd8e66381a932d15619ac248c450446b,cbaee89fdd8e66381a932d15619ac248c450446b,[split] document event loop.
mariusae,2011-05-05 21:28:13,https://api.github.com/repos/twitter/finagle/git/commits/1df5b54f51d5b8a0237c9ecc86c4cad4cb9001e6,1df5b54f51d5b8a0237c9ecc86c4cad4cb9001e6,"[split] org=com.twitter,name=finagle,version=1.4.2-SNAPSHOT"
mariusae,2011-05-05 21:28:12,https://api.github.com/repos/twitter/finagle/git/commits/30fba8a3b2ffca92a52c68ba1cd52daec8feb430,30fba8a3b2ffca92a52c68ba1cd52daec8feb430,"[split] org=com.twitter,name=finagle,version=1.4.1"
mariusae,2011-05-05 21:08:12,https://api.github.com/repos/twitter/finagle/git/commits/d53d54006d5708be68b4fe884e052d52642aeeaa,d53d54006d5708be68b4fe884e052d52642aeeaa,[split] updated versions.properties
mariusae,2011-05-05 20:42:10,https://api.github.com/repos/twitter/finagle/git/commits/c2e27367ea0ffc5d6764447ec21c6a0d84d7ecc7,c2e27367ea0ffc5d6764447ec21c6a0d84d7ecc7,"[split] * util/../Timer.scala: add `ThreadStoppingTimer`, allowing for stopping a timer in a threadpool. this allows for the user case where we must guarantee that a timer is not stopped in its own thread

* finagle/../Timer.scala: use `ThreadStoppingTimer` with a fixed
threadpool of size 1 to stop reference counted timers. also clean up
the timer code quite a big."
mariusae,2011-05-05 16:57:41,https://api.github.com/repos/twitter/finagle/git/commits/2d2dfc056c9d247ee900b29412f56f625ae3899b,2d2dfc056c9d247ee900b29412f56f625ae3899b,"[split] Squashed commit of the following:

commit c097ea73f29bc65148fd7787f397a8670c63f415
Author: marius a. eriksen <marius@twitter.com>
Date:   Wed May 4 12:19:58 2011 -0700

    support for codec factories that produce codecs based on
    configurations. this allows the codec to parameterized on the
    particular serverbuilder invocation. in particular this is helpful for
    tracing as spans should be annotated with endpoints, service names,
    etc."
johanoskarsson,2011-05-03 20:20:54,https://api.github.com/repos/twitter/finagle/git/commits/e14df48b1a2a8d37d06667adaf540aa249a73dd1,e14df48b1a2a8d37d06667adaf540aa249a73dd1,"[split] Adds support in Finagle tracing for binary key-value annotations. This allows users to add non timestamped data to the annotation, such as http response code or the url for the request"
mariusae,2011-05-03 18:55:21,https://api.github.com/repos/twitter/finagle/git/commits/f3b939c78735235b7aaf66539ed89f063b07b883,f3b939c78735235b7aaf66539ed89f063b07b883,"[split] Squashed commit of the following:

commit 67ac61af6ffa87bb1a4b7e227b1163a281d7b9f4
Merge: ef5fb8e f7ea679
Author: marius a. eriksen <marius@twitter.com>
Date:   Tue May 3 11:53:22 2011 -0700

    Merge branch 'master' into util/java_future_variance

commit ef5fb8ebd2db7fed213bd7e469b24d4698d4345a
Author: marius a. eriksen <marius@twitter.com>
Date:   Tue May 3 10:56:55 2011 -0700

    add anti-test.

commit d8d51cfcfbf70386b8e0faefc0ce36e203eb5d9a
Author: marius a. eriksen <marius@twitter.com>
Date:   Tue May 3 10:55:34 2011 -0700

    drop the named type variable in `Future#addEventListener`. this
    preserves contravariance in the bytecode signature, allowing for
    proper typechecking in java.

    before this change:

      <U:Ljava/lang/Object;>(Lcom/twitter/util/FutureEventListener<TU;>;)V;

    and after:

      (Lcom/twitter/util/FutureEventListener<-TA;>;)V;"
hjz,2011-05-03 01:36:15,https://api.github.com/repos/twitter/finagle/git/commits/00f956bdfb4202eb83f52d3b5bb2efcd3aec400b,00f956bdfb4202eb83f52d3b5bb2efcd3aec400b,[split] lossen type restriction on clientBuilder
mariusae,2011-04-29 22:01:57,https://api.github.com/repos/twitter/finagle/git/commits/a4bf4c2f5442f6c8fea7f4f015fc4e46320615d9,a4bf4c2f5442f6c8fea7f4f015fc4e46320615d9,[split] * finagle/../thrift/EndToEndSpec.scala: assert Trace must have no children at the beginning of a request
mariusae,2011-04-29 19:21:16,https://api.github.com/repos/twitter/finagle/git/commits/3601de593c5eead43150110a852a1c7ef21a4234,3601de593c5eead43150110a852a1c7ef21a4234,"[split] ClientBuilder stats: do manual rollup of host-level stats, so that we can collect the global stats prior to the loadbalancer."
mariusae,2011-04-29 18:23:38,https://api.github.com/repos/twitter/finagle/git/commits/112751381876e9ff22a6df35d597daaa58c44525,112751381876e9ff22a6df35d597daaa58c44525,[split] standard-project 0.12.3
mariusae,2011-04-29 17:44:04,https://api.github.com/repos/twitter/finagle/git/commits/f6eb208fbab5dc2ea179379596d870b20c269211,f6eb208fbab5dc2ea179379596d870b20c269211,[split] standard-project 0.12.2
mariusae,2011-04-28 23:27:56,https://api.github.com/repos/twitter/finagle/git/commits/e801e845f08f01b629023fcf1b0ec7d7a72508a5,e801e845f08f01b629023fcf1b0ec7d7a72508a5,[split] update README to reflect the new builder requirements.
mariusae,2011-04-28 22:27:49,https://api.github.com/repos/twitter/finagle/git/commits/5984e1b32d89cdc7959e2b156fe8d49a1b1e09da,5984e1b32d89cdc7959e2b156fe8d49a1b1e09da,[split] Add opensource-friendly Plugins.scala to util & finagle; publish & update versions.
mariusae,2011-04-28 18:36:08,https://api.github.com/repos/twitter/finagle/git/commits/19e7627c68f0fe4b73c87a2a681c13b7104980f3,19e7627c68f0fe4b73c87a2a681c13b7104980f3,[split] upgrade to standard-project 0.12
johanoskarsson,2011-04-28 17:19:44,https://api.github.com/repos/twitter/finagle/git/commits/fd4fea21764f96d0a8d35c1d245bd3de93072e9c,fd4fea21764f96d0a8d35c1d245bd3de93072e9c,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
johanoskarsson,2011-04-28 00:27:13,https://api.github.com/repos/twitter/finagle/git/commits/31032c9e6cbd91c1b0a076396d5f656af72eba57,31032c9e6cbd91c1b0a076396d5f656af72eba57,[split] Remove redundant b3 scoping
johanoskarsson,2011-04-27 18:32:57,https://api.github.com/repos/twitter/finagle/git/commits/9b13d34078fd90582df6511307e0b9a932c1ca29,9b13d34078fd90582df6511307e0b9a932c1ca29,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage into b3receiver
johanoskarsson,2011-04-27 18:32:44,https://api.github.com/repos/twitter/finagle/git/commits/642735441d6dce9f13b244788770ebc7c28090c4,642735441d6dce9f13b244788770ebc7c28090c4,[split] Updated counters scope and name
mariusae,2011-04-27 15:38:29,https://api.github.com/repos/twitter/finagle/git/commits/ce261deb42669738429d8f510940335d1885f312,ce261deb42669738429d8f510940335d1885f312,"[split] Squashed commit of the following:

commit 17d8789e76382b38113bfca5cbce8567620c3e3e
Author: marius a. eriksen <marius@twitter.com>
Date:   Wed Apr 27 08:37:57 2011 -0700

    fix compile: provide the now-mandatory hostConnectionLimit parameter
    to the ClientBuilder in DuplexStreamSpec."
johanoskarsson,2011-04-27 00:44:59,https://api.github.com/repos/twitter/finagle/git/commits/13643a5400cbe833d1969391d422c316acd24f67,13643a5400cbe833d1969391d422c316acd24f67,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage into b3receiver
johanoskarsson,2011-04-27 00:44:18,https://api.github.com/repos/twitter/finagle/git/commits/2fabc5fbb0daf490419e4b7a1eae92968052b742,2fabc5fbb0daf490419e4b7a1eae92968052b742,[split] Catch and count exceptions properly
johanoskarsson,2011-04-27 00:24:33,https://api.github.com/repos/twitter/finagle/git/commits/cca72e70e8415d6be2b17ee0d105b97190d8673e,cca72e70e8415d6be2b17ee0d105b97190d8673e,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage into b3receiver
mariusae,2011-04-27 00:07:41,https://api.github.com/repos/twitter/finagle/git/commits/3d6b0875fe96921ba5412bd3bb0ece2eb7d9c12f,3d6b0875fe96921ba5412bd3bb0ece2eb7d9c12f,"[split] commit c40f1aa1f2669e0d00fb7204f5d7ce0922a49b4e Author: marius a. eriksen <marius@twitter.com> Date:   Tue Apr 26 16:46:47 2011 -0700

    make buffer usage tracking entirely DIable, and on a per-codec
    basis. this is both good hygiene and also fixes the nondeterminism of
    the end to end spec.

commit 3e5d6cfa9153f47cfbe37d61e5bbcbbea22c1458
Author: marius a. eriksen <marius@twitter.com>
Date:   Tue Apr 26 16:46:16 2011 -0700

    convert ChannelBufferManagers over to using storage."
mariusae,2011-04-26 21:06:13,https://api.github.com/repos/twitter/finagle/git/commits/6c840ad7905713a7573a7ec8fe406732a81406fe,6c840ad7905713a7573a7ec8fe406732a81406fe,[split] fix bad merge in ThriftClientBufferedCodec
johanoskarsson,2011-04-26 21:05:55,https://api.github.com/repos/twitter/finagle/git/commits/4c13a0c5f9210252603fb15f08578e34f49a306f,4c13a0c5f9210252603fb15f08578e34f49a306f,[split] Whitespace removal
johanoskarsson,2011-04-26 21:02:23,https://api.github.com/repos/twitter/finagle/git/commits/9d57b48ef7b0a4b2384f753fa5d28c71de9d3aac,9d57b48ef7b0a4b2384f753fa5d28c71de9d3aac,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage into b3receiver
mariusae,2011-04-26 20:15:05,https://api.github.com/repos/twitter/finagle/git/commits/a7cc07ed3027618a2d38766134e1f2988b38adb6,a7cc07ed3027618a2d38766134e1f2988b38adb6,[split] give it two connections.
mariusae,2011-04-26 20:03:47,https://api.github.com/repos/twitter/finagle/git/commits/6b33af0c04201f96e79d7983cb6a155997e4ebc5,6b33af0c04201f96e79d7983cb6a155997e4ebc5,"[split] Clean up finagle thrift support, add documentation, make things more consistent, etc."
mariusae,2011-04-26 19:53:57,https://api.github.com/repos/twitter/finagle/git/commits/837545f060c9904510e863bb82981bc15a8a39ec,837545f060c9904510e863bb82981bc15a8a39ec,"[split] enforce completeness of the ClientBuilder via static typing. we provide phantom types that specifies whether certain constraints are met (eg. the cluster is specified), and the various builder methods transform the builder type appropriately. using an implicit, when can then enforce that the builder is fully specified (statically) at the time build() is called.

this requires 0 code changes for ""canonical"" uses of builders -- but
whenever the builder types are named, this obviously needs to change.
this slight additional cost also brings an advantage: consumers of
builders may specify how complete the builder needs to be."
mariusae,2011-04-26 18:03:30,https://api.github.com/repos/twitter/finagle/git/commits/6b24ae2dfd00c59b4b0a612c38931cf3ec8b5e3f,6b24ae2dfd00c59b4b0a612c38931cf3ec8b5e3f,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
mariusae,2011-04-26 18:03:19,https://api.github.com/repos/twitter/finagle/git/commits/99f2f2fd0b546eb3a30d83f4ee9e32b97258cb7c,99f2f2fd0b546eb3a30d83f4ee9e32b97258cb7c,[split] fix AsyncSemaphore import.
johanoskarsson,2011-04-25 20:45:33,https://api.github.com/repos/twitter/finagle/git/commits/035f73b5d0fc289373b21469aa9670ce8619cb61,035f73b5d0fc289373b21469aa9670ce8619cb61,[split] Move BigBrotherBirdReceiver to finagle-b3. Added specs
johanoskarsson,2011-04-22 20:54:44,https://api.github.com/repos/twitter/finagle/git/commits/410e7ea24f2ca9d88ced4a17e00e7e2042b428ad,410e7ea24f2ca9d88ced4a17e00e7e2042b428ad,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage into b3receiver
mariusae,2011-04-22 20:13:01,https://api.github.com/repos/twitter/finagle/git/commits/41388ae71695b51a24d9a8f4198131be4105a70b,41388ae71695b51a24d9a8f4198131be4105a70b,"[split] * finagle/../ChannelSemaphoreHandler.scala: on close, insert a dud   semaphore permit, so we don't get spurious error messages after   closes, etc.

* finagle/../AsyncSemaphore.scala: this was moved over to util, use
  that version instead.

* thrust/../HttpResponseToResponse.scala: fix the `writeTo`
  implementation to only write downstream-- the messages shouldn't go
  through the whole pipeline as we're essentially blowing up the
  response into multiple writes. this messed up the lifecycle
  management of finagle."
johanoskarsson,2011-04-21 22:19:15,https://api.github.com/repos/twitter/finagle/git/commits/45bfeefa9b1c2616fb4a09a4b9fe41c318d2b581,45bfeefa9b1c2616fb4a09a4b9fe41c318d2b581,[split] Draft version of BigBrotherBirdReceiver
mariusae,2011-04-20 22:27:19,https://api.github.com/repos/twitter/finagle/git/commits/ab0ec8400a0c81854b9589f07dc2b9948f769b84,ab0ec8400a0c81854b9589f07dc2b9948f769b84,"[split] fix up tracing specs: add debug(true), and also check that we don't log in its absence."
mariusae,2011-04-20 21:55:42,https://api.github.com/repos/twitter/finagle/git/commits/9cb65e1687bafad5da78ab843fb9a2cc6be60b68,9cb65e1687bafad5da78ab843fb9a2cc6be60b68,"[split] clean up semaphores & serialization, adding comments, etc."
mariusae,2011-04-20 19:19:23,https://api.github.com/repos/twitter/finagle/git/commits/54db35f6bbe918967a921bd3afd5a2a5200eaf30,54db35f6bbe918967a921bd3afd5a2a5200eaf30,[split] finagle: support for b3-style tracing.
mariusae,2011-04-15 17:59:29,https://api.github.com/repos/twitter/finagle/git/commits/310abe4759f51784f21d0ea99a47dc9d60690144,310abe4759f51784f21d0ea99a47dc9d60690144,[split] update standard-project.
twilliam,2011-04-14 23:43:57,https://api.github.com/repos/twitter/finagle/git/commits/336af48ccc58abeb5fb6c6fdee726ac15e8328c3,336af48ccc58abeb5fb6c6fdee726ac15e8328c3,[split] bump sbt-thrift dep in finagle
mariusae,2011-04-14 22:25:25,https://api.github.com/repos/twitter/finagle/git/commits/56dcbb438a3118481ae2ce911cf28f4a5b54dd14,56dcbb438a3118481ae2ce911cf28f4a5b54dd14,[split] Merge branch 'master' into marius_fixup_ci
mariusae,2011-04-14 22:22:59,https://api.github.com/repos/twitter/finagle/git/commits/8413ae19960d0d38cb355a828f57ed26bc2b3cd1,8413ae19960d0d38cb355a828f57ed26bc2b3cd1,[split] update everyone to ostrich 4.1.0
mariusae,2011-04-14 21:30:58,https://api.github.com/repos/twitter/finagle/git/commits/ce26f40e8d3f93dd94d824a217f89a6f281b767e,ce26f40e8d3f93dd94d824a217f89a6f281b767e,[split] Merge branch 'master' into marius_fixup_ci
mariusae,2011-04-14 20:51:43,https://api.github.com/repos/twitter/finagle/git/commits/53f8725843f9760ed4c60fa280cf5d74602a748b,53f8725843f9760ed4c60fa280cf5d74602a748b,"[split] construct SSL context at build() time, not builder time."
mariusae,2011-04-13 19:01:17,https://api.github.com/repos/twitter/finagle/git/commits/36799746f2bd46808c2dcf67f47c7fb6c061dc0d,36799746f2bd46808c2dcf67f47c7fb6c061dc0d,[split] standard-project 0.11.37-NEST
mariusae,2011-04-11 23:35:53,https://api.github.com/repos/twitter/finagle/git/commits/74d5a5136b5c479112a29c63916e6e549d38c319,74d5a5136b5c479112a29c63916e6e549d38c319,[split] Merge branch 'master' of http://git.local.twitter.com/birdcage
mariusae,2011-04-11 23:35:46,https://api.github.com/repos/twitter/finagle/git/commits/dfa25ae732968a2ca74245a694253dd023ad3483,dfa25ae732968a2ca74245a694253dd023ad3483,[split] standard-project 0.11.36-NEST
mariusae,2011-04-11 19:50:15,https://api.github.com/repos/twitter/finagle/git/commits/7b37e2541b5a94ec6804d47d5619c990ee81f025,7b37e2541b5a94ec6804d47d5619c990ee81f025,"[split]     introduce a standard ``run'' script from which you can launch     (compiled) projects in the birdcage without relying on sbt.

    eg., to launch TFE:

      $ run com.twitter.tfe.Main -f config/development.scala"
hjz,2011-04-07 23:59:46,https://api.github.com/repos/twitter/finagle/git/commits/f1ce3f036c424318d883b51b5f41732666189545,f1ce3f036c424318d883b51b5f41732666189545,[split] change memcache incr/decr to use Longs instead of Ints
mariusae,2011-04-07 18:21:52,https://api.github.com/repos/twitter/finagle/git/commits/f007a5c04d457526fa8816d43496c770610aecb9,f007a5c04d457526fa8816d43496c770610aecb9,"[split] org=com.twitter,name=finagle,version=1.3.2-SNAPSHOT"
mariusae,2011-04-07 18:21:52,https://api.github.com/repos/twitter/finagle/git/commits/38d5e4f0f690ce0f2b2f8e8fdf25fad0ac2ccbac,38d5e4f0f690ce0f2b2f8e8fdf25fad0ac2ccbac,"[split] org=com.twitter,name=finagle,version=1.3.1"
mariusae,2011-04-07 18:15:45,https://api.github.com/repos/twitter/finagle/git/commits/7d0f92233984c75cbcd1683aebfc0f6f84a1c033,7d0f92233984c75cbcd1683aebfc0f6f84a1c033,[split] updated versions.properties
mariusae,2011-04-07 18:03:54,https://api.github.com/repos/twitter/finagle/git/commits/d8795512abfb5452beaf8c5e7f0eb574b71c4e3a,d8795512abfb5452beaf8c5e7f0eb574b71c4e3a,[split] update finagle version as per published version.
mariusae,2011-04-07 16:39:54,https://api.github.com/repos/twitter/finagle/git/commits/2f027f6b940f8d9f2465a4b866be926bd15bf745,2f027f6b940f8d9f2465a4b866be926bd15bf745,[split] standard-project 0.11.33-NEST
mariusae,2011-04-07 06:01:41,https://api.github.com/repos/twitter/finagle/git/commits/abdb5b3ca11ace806a17828c08952cebd99052e0,abdb5b3ca11ace806a17828c08952cebd99052e0,[split] 0.11.32-NEST
mariusae,2011-04-07 05:08:15,https://api.github.com/repos/twitter/finagle/git/commits/0bcaba933a99c451fa1fcaf17d0e7623ba7f924b,0bcaba933a99c451fa1fcaf17d0e7623ba7f924b,[split] standard-project 0.11.31-NEST
mariusae,2011-04-06 23:43:02,https://api.github.com/repos/twitter/finagle/git/commits/ee3055bd0adaa8c6d6faf5f12571723f540899c3,ee3055bd0adaa8c6d6faf5f12571723f540899c3,[split] fine-grained util projects for passbird.
mariusae,2011-04-06 22:41:21,https://api.github.com/repos/twitter/finagle/git/commits/d85d1618fcb0d3ff2fed4f9a23c384a3e5f86302,d85d1618fcb0d3ff2fed4f9a23c384a3e5f86302,"[split] update plugins, sbt versions"
mariusae,2011-04-06 17:09:15,https://api.github.com/repos/twitter/finagle/git/commits/dd68328592a04d506b284645266fffe3d6d281d5,dd68328592a04d506b284645266fffe3d6d281d5,[split] plugins
mariusae,2011-04-06 00:22:57,https://api.github.com/repos/twitter/finagle/git/commits/e4d3f7abfd2196a4697d62e89293882a5059c6eb,e4d3f7abfd2196a4697d62e89293882a5059c6eb,[split] update plugins to 0.11.26-NEST
mariusae,2011-04-05 23:41:27,https://api.github.com/repos/twitter/finagle/git/commits/999062c895bb22b29559db6b0e65d4b640fd0703,999062c895bb22b29559db6b0e65d4b640fd0703,[split] update plugins to 0.11.25-NEST
mariusae,2011-04-05 21:54:56,https://api.github.com/repos/twitter/finagle/git/commits/5db4bb34a90ee7596e41389ee90f2bdcb7dc776f,5db4bb34a90ee7596e41389ee90f2bdcb7dc776f,[split] 0.11.24-NEST
mariusae,2011-04-05 19:09:46,https://api.github.com/repos/twitter/finagle/git/commits/ed4f60142691731d25d31365ff5a4e07c1f7ce67,ed4f60142691731d25d31365ff5a4e07c1f7ce67,[split] upgrade everyone to standard-project 0.11.23-NEST
mariusae,2011-04-04 19:06:23,https://api.github.com/repos/twitter/finagle/git/commits/5ca29a1f760a6e4355f1a0434847c049cfd73899,5ca29a1f760a6e4355f1a0434847c049cfd73899,[split] update once more.
mariusae,2011-04-04 18:57:21,https://api.github.com/repos/twitter/finagle/git/commits/58a456da48793188e90e80b08c173c855b431d7f,58a456da48793188e90e80b08c173c855b431d7f,"[split] upgrade plugins, document intransitive builds."
mariusae,2011-04-01 23:37:07,https://api.github.com/repos/twitter/finagle/git/commits/a4b8153e378b06a8eba9bdadd74fa940c9d6c47c,a4b8153e378b06a8eba9bdadd74fa940c9d6c47c,[split] plugins.
mariusae,2011-04-01 19:28:06,https://api.github.com/repos/twitter/finagle/git/commits/9c5974ea310599cf0de1bdcdb05fe7bf746d2073,9c5974ea310599cf0de1bdcdb05fe7bf746d2073,[split] import viz into birdcage.
mariusae,2011-04-01 18:57:35,https://api.github.com/repos/twitter/finagle/git/commits/1abfbec3f92b58bab6f17a88617735b7bfb6f80f,1abfbec3f92b58bab6f17a88617735b7bfb6f80f,[split] update plugins.
mariusae,2011-04-01 16:58:14,https://api.github.com/repos/twitter/finagle/git/commits/4260abe8ce3c23dd39f3bee52bbf9466cfa36fc6,4260abe8ce3c23dd39f3bee52bbf9466cfa36fc6,[split] make finagle SslSpec path independent.
mariusae,2011-04-01 16:31:00,https://api.github.com/repos/twitter/finagle/git/commits/32d67875d91b31ca47d68d1385ab89ad264f5515,32d67875d91b31ca47d68d1385ab89ad264f5515,"[split] use TartifactoryRepos across the board, with open-source compat where applicable."
mariusae,2011-03-31 23:53:18,https://api.github.com/repos/twitter/finagle/git/commits/df79b5641cc6d00d3b7757dce0699debd33d6b08,df79b5641cc6d00d3b7757dce0699debd33d6b08,[split] better open sores.
mariusae,2011-03-31 23:24:03,https://api.github.com/repos/twitter/finagle/git/commits/aa01c159b5d3d8c57d2ab6ad5880896765c260d3,aa01c159b5d3d8c57d2ab6ad5880896765c260d3,[split] update versions
mariusae,2011-03-31 23:13:48,https://api.github.com/repos/twitter/finagle/git/commits/bb52844c9eb273fd9b30d676d560daa01188c1cb,bb52844c9eb273fd9b30d676d560daa01188c1cb,[split] update versions
mariusae,2011-03-31 23:07:06,https://api.github.com/repos/twitter/finagle/git/commits/1ac5c495b26124e114d56c8dbf9a0e7584411702,1ac5c495b26124e114d56c8dbf9a0e7584411702,[split] update versions
mariusae,2011-03-31 22:54:45,https://api.github.com/repos/twitter/finagle/git/commits/3c058e0d10143d7a8327eb157d13226c2725e561,3c058e0d10143d7a8327eb157d13226c2725e561,[split] fix up tests.
mariusae,2011-03-31 22:40:35,https://api.github.com/repos/twitter/finagle/git/commits/d27f4184a25d47421f4e00def3fc08a4b602d663,d27f4184a25d47421f4e00def3fc08a4b602d663,[split] finagle: remove ostrich3 support.
mariusae,2011-03-31 22:04:17,https://api.github.com/repos/twitter/finagle/git/commits/633224e922006ff34bdf7b43432ebe369155ce49,633224e922006ff34bdf7b43432ebe369155ce49,"[split] update readme, style nits in finagle/Project.scala"
mariusae,2011-03-31 21:53:33,https://api.github.com/repos/twitter/finagle/git/commits/77a64567383a6d530a542045c7c47c5599eb89fc,77a64567383a6d530a542045c7c47c5599eb89fc,[split] published version of standard-project.
mariusae,2011-03-31 21:50:53,https://api.github.com/repos/twitter/finagle/git/commits/203069c7990005e6253369c55ab756109c5b315b,203069c7990005e6253369c55ab756109c5b315b,"[split] update plugins, magic deps file."
mariusae,2011-03-31 21:29:41,https://api.github.com/repos/twitter/finagle/git/commits/aa2cc2ed9fffadb9b628217130e902d85e0be595,aa2cc2ed9fffadb9b628217130e902d85e0be595,[split] update to latest standard-project-NEST
mariusae,2011-03-31 21:16:49,https://api.github.com/repos/twitter/finagle/git/commits/3111a16456986079fbee4829b8deb95363e480f1,3111a16456986079fbee4829b8deb95363e480f1,"[split] update plugins, versions."
mariusae,2011-03-31 20:45:06,https://api.github.com/repos/twitter/finagle/git/commits/081994e5de0ef88d996a6059ad0934caf2798fd3,081994e5de0ef88d996a6059ad0934caf2798fd3,"[split] org=com.twitter,name=finagle,version=1.2.7-SNAPSHOT"
mariusae,2011-03-31 20:45:06,https://api.github.com/repos/twitter/finagle/git/commits/5176824dccc4164c37fc2e190e5cabf10dd76915,5176824dccc4164c37fc2e190e5cabf10dd76915,"[split] org=com.twitter,name=finagle,version=1.2.6"
mariusae,2011-03-31 20:37:20,https://api.github.com/repos/twitter/finagle/git/commits/8b9e7f3af65c1b45fc6b7ac7d9fd0daa0f8e7c3b,8b9e7f3af65c1b45fc6b7ac7d9fd0daa0f8e7c3b,[split] updated versions
mariusae,2011-03-31 18:35:51,https://api.github.com/repos/twitter/finagle/git/commits/82ce811c4e0d246e27ed28e68488b1a4a5bf1822,82ce811c4e0d246e27ed28e68488b1a4a5bf1822,[split] http: option to disable codec
mariusae,2011-03-31 17:39:53,https://api.github.com/repos/twitter/finagle/git/commits/5821a8f9ffb7bc360597e406ccbff5d8bb1010f9,5821a8f9ffb7bc360597e406ccbff5d8bb1010f9,"[split] nestify projects, plugins"
mariusae,2011-03-25 00:09:09,https://api.github.com/repos/twitter/finagle/git/commits/4f048406710aecc14ec00a84642dc86eb3636ed8,4f048406710aecc14ec00a84642dc86eb3636ed8,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-03-24 23:47:59,https://api.github.com/repos/twitter/finagle/git/commits/f4ed163fa04439ffdd64f693d43c2df0578a35f0,f4ed163fa04439ffdd64f693d43c2df0578a35f0,"clean up the rest of the codecs, tests."
mariusae,2011-03-24 23:18:03,https://api.github.com/repos/twitter/finagle/git/commits/5524385b58ca679f63d0c83fc4e47a5d3eafd72b,5524385b58ca679f63d0c83fc4e47a5d3eafd72b,ClientBuilder support and the rest of tests.
mariusae,2011-03-24 22:44:51,https://api.github.com/repos/twitter/finagle/git/commits/4e82a24eddefdc3a86fcec9fb3b5d93cf8389533,4e82a24eddefdc3a86fcec9fb3b5d93cf8389533,"proxy, rest of Codecs."
mariusae,2011-03-24 22:41:47,https://api.github.com/repos/twitter/finagle/git/commits/7bbc1177ae1fd799ab58ea19b761fe279733498b,7bbc1177ae1fd799ab58ea19b761fe279733498b,unittest the proxyserver.
mariusae,2011-03-24 22:12:10,https://api.github.com/repos/twitter/finagle/git/commits/bfb103254d9d2fb590c23b4fffa22e0d5cacb30c,bfb103254d9d2fb590c23b4fffa22e0d5cacb30c,Merge branch 'master' into client_and_server_codecs
mariusae,2011-03-24 22:08:32,https://api.github.com/repos/twitter/finagle/git/commits/b805b5972b9bdcceeb74dd866b4f1085a2fc9e2d,b805b5972b9bdcceeb74dd866b4f1085a2fc9e2d,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-03-24 22:08:22,https://api.github.com/repos/twitter/finagle/git/commits/51e55d37ad5d4b8550678a39457ced3efbfde4f8,51e55d37ad5d4b8550678a39457ced3efbfde4f8,"fix race condition in ChannelSemaphoreHandler where we depended on the
order of callbacks."
mariusae,2011-03-24 17:06:42,https://api.github.com/repos/twitter/finagle/git/commits/5a162d3f935e27698b5834c815f4c5597090a3e2,5a162d3f935e27698b5834c815f4c5597090a3e2,ServerCodec in ServerBuilder. ProxyService.
mariusae,2011-03-24 16:33:49,https://api.github.com/repos/twitter/finagle/git/commits/2ebba1f3e9ea653d4614a1f7c5ed79f0c306cb7e,2ebba1f3e9ea653d4614a1f7c5ed79f0c306cb7e,some nits.
mariusae,2011-03-24 16:22:45,https://api.github.com/repos/twitter/finagle/git/commits/14c6287bf1c22cdb6cbe0b68d01b52f2676a87d2,14c6287bf1c22cdb6cbe0b68d01b52f2676a87d2,Merge branch 'master' into client_and_server_codecs
mariusae,2011-03-24 16:22:15,https://api.github.com/repos/twitter/finagle/git/commits/6111adb6d5a2ec32baefe66b6705165d90e96bb0,6111adb6d5a2ec32baefe66b6705165d90e96bb0,codec refactoring.
mariusae,2011-03-21 22:56:33,https://api.github.com/repos/twitter/finagle/git/commits/62d4961f6908557b772e993c0bb6e940ac1509b1,62d4961f6908557b772e993c0bb6e940ac1509b1,"thrift: support for buffered transports, client only."
mariusae,2011-03-21 16:57:10,https://api.github.com/repos/twitter/finagle/git/commits/5874ce12785cbeb2e9b0a8b1e31ac651705b10a9,5874ce12785cbeb2e9b0a8b1e31ac651705b10a9,"ChannelStatsHandler: count requested writes, not complete ones."
mariusae,2011-03-18 20:51:05,https://api.github.com/repos/twitter/finagle/git/commits/d3f0050d57a75baf7c1f0d6915c788376a7cba24,d3f0050d57a75baf7c1f0d6915c788376a7cba24,include changelog in README
mariusae,2011-03-18 20:30:44,https://api.github.com/repos/twitter/finagle/git/commits/e0070fbb59b2f571f145291ed5b69dfc1eccc8e7,e0070fbb59b2f571f145291ed5b69dfc1eccc8e7,1.2.4-SNAPSHOT
mariusae,2011-03-18 20:30:43,https://api.github.com/repos/twitter/finagle/git/commits/ee1349965afcbf6d1b59b7d2d8ee0a38d589c1cd,ee1349965afcbf6d1b59b7d2d8ee0a38d589c1cd,1.2.3
mariusae,2011-03-18 20:23:32,https://api.github.com/repos/twitter/finagle/git/commits/a03db42b8dddbb9deaf8e781be2fe189f3a32e64,a03db42b8dddbb9deaf8e781be2fe189f3a32e64,fix kestrel regression from memcache decoding changes.
mariusae,2011-03-18 16:57:52,https://api.github.com/repos/twitter/finagle/git/commits/77dd1108ba0cfd4e8267ceba382af0565a2bb911,77dd1108ba0cfd4e8267ceba382af0565a2bb911,kill stringToChannelBufferIndexFinder
mariusae,2011-03-18 16:54:20,https://api.github.com/repos/twitter/finagle/git/commits/df87cfefde6f9439f4d6e283961421125d7cf398,df87cfefde6f9439f4d6e283961421125d7cf398,Merge branch 'master' into memcached_performance_improvements
mariusae,2011-03-18 16:54:01,https://api.github.com/repos/twitter/finagle/git/commits/ca3f46bbac454d2a19f00b4989df64152be801ea,ca3f46bbac454d2a19f00b4989df64152be801ea,run: add all subprojects.
mariusae,2011-03-18 16:53:46,https://api.github.com/repos/twitter/finagle/git/commits/7b87b1b5818aac4cdd6771b612c4bd2b63ea86eb,7b87b1b5818aac4cdd6771b612c4bd2b63ea86eb,WatermarkPool: add a pool size gauge
mariusae,2011-03-18 16:53:05,https://api.github.com/repos/twitter/finagle/git/commits/1fc8ad712cbd8ee6c428bc31cf72e7bd4e62067f,1fc8ad712cbd8ee6c428bc31cf72e7bd4e62067f,CachingPool: release unavailable services in make()
mariusae,2011-03-18 00:07:24,https://api.github.com/repos/twitter/finagle/git/commits/22a03ef9938e49582b77d3da890ca00c6705c812,22a03ef9938e49582b77d3da890ca00c6705c812,speed up the least queued loadbalancer strategy a bit by doing less copies.
mariusae,2011-03-18 00:06:57,https://api.github.com/repos/twitter/finagle/git/commits/60ce7ad96f2102a85d4a0423c71ac22e7efdf053,60ce7ad96f2102a85d4a0423c71ac22e7efdf053,formatting.
mariusae,2011-03-17 19:33:07,https://api.github.com/repos/twitter/finagle/git/commits/8498be46b6545e1bee36e709e37eb7632a7e59df,8498be46b6545e1bee36e709e37eb7632a7e59df,"memcached codec performance improvements: (1) split out a class
RichChannelBuffer instead of the structural type so we don't use
reflection for runtime invocation, (2) specialize
RichChannelBuffer.split to handle spaces only (this is the only use)
as the stringToChannelBufferIndexFinder(..) was slow, (3) speed up
stringToChannelBufferIndexFinder(..) by using a while loop instead of
Seq.forall, which was slow."
mariusae,2011-03-17 19:28:20,https://api.github.com/repos/twitter/finagle/git/commits/0146cbf836890110c193ebf5e9940499a5fbb29e,0146cbf836890110c193ebf5e9940499a5fbb29e,lb: elide second .toArray call of snapshot already taken
mariusae,2011-03-16 17:34:26,https://api.github.com/repos/twitter/finagle/git/commits/7152b81a7d4070754e21dfe8dfb74897eabac436,7152b81a7d4070754e21dfe8dfb74897eabac436,1.2.3-SNAPSHOT
mariusae,2011-03-16 17:34:26,https://api.github.com/repos/twitter/finagle/git/commits/664130e7e23c612ea67f3c993f717c6142375502,664130e7e23c612ea67f3c993f717c6142375502,1.2.2
mariusae,2011-03-16 17:31:20,https://api.github.com/repos/twitter/finagle/git/commits/e6dadcc3b85e063ab81241c929213b8413794d4c,e6dadcc3b85e063ab81241c929213b8413794d4c,jmx/jms excludes need to be at the toplevel also.
mariusae,2011-03-16 16:44:37,https://api.github.com/repos/twitter/finagle/git/commits/d1e2a5126df5d208feb35aaada3ef013972ed4a3,d1e2a5126df5d208feb35aaada3ef013972ed4a3,"opensource finagle-serversets, now that dependencies are
opensourced."
mariusae,2011-03-16 00:22:18,https://api.github.com/repos/twitter/finagle/git/commits/719516577ae18dcb834b3df343a2ae1a96c8bd79,719516577ae18dcb834b3df343a2ae1a96c8bd79,revive counters in stress test
mariusae,2011-03-15 23:50:30,https://api.github.com/repos/twitter/finagle/git/commits/3a2ea20f08da3ee07634370d95aa847ab03831e0,3a2ea20f08da3ee07634370d95aa847ab03831e0,a bunch of per-connection stats in the server builder.
mariusae,2011-03-15 18:11:12,https://api.github.com/repos/twitter/finagle/git/commits/55d239c8456c18a0742651546f20ddba0384baca,55d239c8456c18a0742651546f20ddba0384baca,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-03-15 18:10:49,https://api.github.com/repos/twitter/finagle/git/commits/ed0fbe73a11e757ab273510e3a84e3367b07ad71,ed0fbe73a11e757ab273510e3a84e3367b07ad71,finagle-stress => ostrich4
mariusae,2011-03-04 00:17:32,https://api.github.com/repos/twitter/finagle/git/commits/9f70700d5f4cbe2dbd43826aafad8dfd99bde612,9f70700d5f4cbe2dbd43826aafad8dfd99bde612,1.1.33-SNAPSHOT
mariusae,2011-03-04 00:17:29,https://api.github.com/repos/twitter/finagle/git/commits/2f030fbbc4324b1dc04c7fdf06039ed803988879,2f030fbbc4324b1dc04c7fdf06039ed803988879,1.1.32
mariusae,2011-03-03 21:36:06,https://api.github.com/repos/twitter/finagle/git/commits/02a12883265a1d317ec9366138cec7546fcaac68,02a12883265a1d317ec9366138cec7546fcaac68,"LeastQueuedStrategy: shuffle service snapshot so as to ensure even
load under low-load conditions."
mariusae,2011-02-25 22:45:22,https://api.github.com/repos/twitter/finagle/git/commits/acebca6522a4f80cda4526369399602e88cd29dc,acebca6522a4f80cda4526369399602e88cd29dc,"propagate {read, write} timeout stats to the ServiceToChannelHandler."
mariusae,2011-02-25 22:16:03,https://api.github.com/repos/twitter/finagle/git/commits/052684c633ccb604e8c9266f3aa4c29b967c864d,052684c633ccb604e8c9266f3aa4c29b967c864d,1.1.31-SNAPSHOT
mariusae,2011-02-25 22:16:02,https://api.github.com/repos/twitter/finagle/git/commits/6d8584dcb012e6c38a7013621ee13bad42cea912,6d8584dcb012e6c38a7013621ee13bad42cea912,1.1.30
mariusae,2011-02-25 21:59:55,https://api.github.com/repos/twitter/finagle/git/commits/66d849417622d1eb07dbe02448b135dd8560a9ea,66d849417622d1eb07dbe02448b135dd8560a9ea,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-25 21:59:49,https://api.github.com/repos/twitter/finagle/git/commits/bd30d58d2a2250560fa6ad523d5bf28195acc71d,bd30d58d2a2250560fa6ad523d5bf28195acc71d,"introduce a WriteCompletionTimeoutHandler & expose it through the
server builder. this allows the server to provide a timeout within
which a client must complete the consumption of the response."
mariusae,2011-02-25 02:17:11,https://api.github.com/repos/twitter/finagle/git/commits/665d519090b1ace90a152e91b053047bbeed44f9,665d519090b1ace90a152e91b053047bbeed44f9,1.1.30-SNAPSHOT
mariusae,2011-02-25 02:17:06,https://api.github.com/repos/twitter/finagle/git/commits/50b4f9c66cfb303b45542f8b91effe6da73a860f,50b4f9c66cfb303b45542f8b91effe6da73a860f,1.1.29
mariusae,2011-02-25 02:09:32,https://api.github.com/repos/twitter/finagle/git/commits/fde0ddc1aa94f940e60533e3ecb45cc4000d4d29,fde0ddc1aa94f940e60533e3ecb45cc4000d4d29,separate out max sizes for chunk aggregation into request & response sizes.
mariusae,2011-02-25 02:08:11,https://api.github.com/repos/twitter/finagle/git/commits/24934cd4b588bd1bbb5abda1b5fc5a347cf7a6ea,24934cd4b588bd1bbb5abda1b5fc5a347cf7a6ea,"add a readTimeout() option to the server builder.

this also required implementing a netty timer on top of
com.twitter.util.Timer."
mariusae,2011-02-25 01:06:46,https://api.github.com/repos/twitter/finagle/git/commits/391d385b136f36e9547da5a6f2efb04c81dbbf58,391d385b136f36e9547da5a6f2efb04c81dbbf58,1.1.29-SNAPSHOT
mariusae,2011-02-25 01:06:46,https://api.github.com/repos/twitter/finagle/git/commits/bd234079dcd96278c4b191054c95049006c0ce54,bd234079dcd96278c4b191054c95049006c0ce54,1.1.28
mariusae,2011-02-25 00:56:01,https://api.github.com/repos/twitter/finagle/git/commits/b0a212bcdddd049382a5350365d5873638cf5fc5,b0a212bcdddd049382a5350365d5873638cf5fc5,"deprecate HTTP codec in builder, move it to ""http"" instead."
mariusae,2011-02-24 01:19:28,https://api.github.com/repos/twitter/finagle/git/commits/097e3fdef7b3dfed8e13a26812be030edccd14a3,097e3fdef7b3dfed8e13a26812be030edccd14a3,1.1.28-SNAPSHOT
mariusae,2011-02-24 01:19:25,https://api.github.com/repos/twitter/finagle/git/commits/c3aa684d060b02a050d687f04111e8b350def3af,c3aa684d060b02a050d687f04111e8b350def3af,1.1.27
mariusae,2011-02-24 01:09:55,https://api.github.com/repos/twitter/finagle/git/commits/2c01daf5424ddf39052c7d630e95e75b8e952873,2c01daf5424ddf39052c7d630e95e75b8e952873,"big shuffle for gauges, to make their use easier, more predictable,
and garbage-collectable, and also make ""AdditiveGauges"" generic.

create a new api ""addGauge"". this returns a ""Gauge"" object -- this is
a handler provided by the underlying implementation, and allows for
the gauge to be removed.

furthermore, objects returned by ``addGauge'' are only weakly
referenced by the implementation, allowing its user to control the
gauge lifecycle."
mariusae,2011-02-23 19:58:17,https://api.github.com/repos/twitter/finagle/git/commits/425f53d0b1b8c996d0e54f34cc8a20d875a11a59,425f53d0b1b8c996d0e54f34cc8a20d875a11a59,log.log
mariusae,2011-02-23 18:35:43,https://api.github.com/repos/twitter/finagle/git/commits/beeae981662013a5c222b38643258d37e1749ce6,beeae981662013a5c222b38643258d37e1749ce6,1.1.27-SNAPSHOT
mariusae,2011-02-23 18:35:42,https://api.github.com/repos/twitter/finagle/git/commits/d29aeec38eaad3bea280d21d1f00d60a4b2e9aab,d29aeec38eaad3bea280d21d1f00d60a4b2e9aab,1.1.26
mariusae,2011-02-23 18:32:25,https://api.github.com/repos/twitter/finagle/git/commits/00915ace97e8ee31d0ef28a57ee96ce0f4dee175,00915ace97e8ee31d0ef28a57ee96ce0f4dee175,util 1.6.8
mariusae,2011-02-23 18:26:28,https://api.github.com/repos/twitter/finagle/git/commits/71d1af17b8c367b803c5568745593a086984c1cd,71d1af17b8c367b803c5568745593a086984c1cd,share StatsFilter across all server connections
mariusae,2011-02-18 21:59:51,https://api.github.com/repos/twitter/finagle/git/commits/89ac034d934f6d492771b564b8869768c08586cd,89ac034d934f6d492771b564b8869768c08586cd,com.twitter.admin.Service <= ServerBuilder
mariusae,2011-02-18 21:45:20,https://api.github.com/repos/twitter/finagle/git/commits/8b2a3c9826c6a60254a16ca0da8a32e6c9a9e2ac,8b2a3c9826c6a60254a16ca0da8a32e6c9a9e2ac,print() for spans.
mariusae,2011-02-18 21:45:05,https://api.github.com/repos/twitter/finagle/git/commits/1ad4fdad1d056dbdc844f1c5e2ff575a86bff1c9,1ad4fdad1d056dbdc844f1c5e2ff575a86bff1c9,NullTraceReceiver
mariusae,2011-02-18 21:44:52,https://api.github.com/repos/twitter/finagle/git/commits/53f37907d913e75aeb6c41721b217086913fa44a,53f37907d913e75aeb6c41721b217086913fa44a,obsolete comment.
mariusae,2011-02-18 21:44:42,https://api.github.com/repos/twitter/finagle/git/commits/3cc672931e429cc6f61248085fb74e6391e8b71c,3cc672931e429cc6f61248085fb74e6391e8b71c,cleanup.
mariusae,2011-02-18 21:44:28,https://api.github.com/repos/twitter/finagle/git/commits/5635062b5ab7a4c6d89a05cd1421d70ccdad3f38,5635062b5ab7a4c6d89a05cd1421d70ccdad3f38,nice toStrings for Client & Server builders.
mariusae,2011-02-18 21:43:59,https://api.github.com/repos/twitter/finagle/git/commits/24a36c04c6628325cc382c041d6dd3dcfae75fe9,24a36c04c6628325cc382c041d6dd3dcfae75fe9,include the inner exception in UnknownChannelFailure's toString
mariusae,2011-02-18 17:45:38,https://api.github.com/repos/twitter/finagle/git/commits/81fdcd4fa0ee9531398b270338d4ad7c01cfd5d6,81fdcd4fa0ee9531398b270338d4ad7c01cfd5d6,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-18 00:17:27,https://api.github.com/repos/twitter/finagle/git/commits/f39a52bd47ad46d2b04237bb2399d7c8cae4a347,f39a52bd47ad46d2b04237bb2399d7c8cae4a347,1.1.25-SNAPSHOT
mariusae,2011-02-18 00:17:26,https://api.github.com/repos/twitter/finagle/git/commits/33592fb90dc390652a87f05db4b4c5f759f7069a,33592fb90dc390652a87f05db4b4c5f759f7069a,1.1.24
mariusae,2011-02-17 02:45:55,https://api.github.com/repos/twitter/finagle/git/commits/a966728729b71199e32da490d2f45f8a9f33e2ae,a966728729b71199e32da490d2f45f8a9f33e2ae,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-17 02:42:59,https://api.github.com/repos/twitter/finagle/git/commits/3552427f6d0ef12b8bb7a95cd39f47c4977ee3f1,3552427f6d0ef12b8bb7a95cd39f47c4977ee3f1,"define ThriftClientRequest in java, and move it to finagle-thrift"
mariusae,2011-02-16 21:09:43,https://api.github.com/repos/twitter/finagle/git/commits/3097b6b9ebe3e6a6c3dc4e9dec4f3ac687b535ca,3097b6b9ebe3e6a6c3dc4e9dec4f3ac687b535ca,upgrade to standard-project 0.9.24 for speedy thrift compiles.
mariusae,2011-02-16 01:32:31,https://api.github.com/repos/twitter/finagle/git/commits/0face4a9eb7472e3eef85749d3afe88ac26ceb35,0face4a9eb7472e3eef85749d3afe88ac26ceb35,"define TraceReceiver & add support in the server builder.

some renaming to make things clearer."
mariusae,2011-02-16 00:34:34,https://api.github.com/repos/twitter/finagle/git/commits/97c204ec43ae634818cc4d7ee505d522faadd779,97c204ec43ae634818cc4d7ee505d522faadd779,"propagate trace transcripts, test transcripts, etc."
mariusae,2011-02-15 19:23:12,https://api.github.com/repos/twitter/finagle/git/commits/d095dec88a94f1b6cffbe6725878b5d71a2ad70c,d095dec88a94f1b6cffbe6725878b5d71a2ad70c,document thrift tracing datastructures.
mariusae,2011-02-15 19:18:45,https://api.github.com/repos/twitter/finagle/git/commits/3efbc60ceef8c7db91c2fa1c708f1c0a7515242c,3efbc60ceef8c7db91c2fa1c708f1c0a7515242c,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-15 19:18:35,https://api.github.com/repos/twitter/finagle/git/commits/1f197a7b01636f783888aca596e074baac31e74b,1f197a7b01636f783888aca596e074baac31e74b,new (and cleaner) core datastructures for tracing
mariusae,2011-02-14 22:58:27,https://api.github.com/repos/twitter/finagle/git/commits/e12b4e6373df0b8a0ccff813145f219c40cba798,e12b4e6373df0b8a0ccff813145f219c40cba798,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-14 22:58:18,https://api.github.com/repos/twitter/finagle/git/commits/d10b1d7fbb97f1676c4ef9ae046b5d23be2b3596,d10b1d7fbb97f1676c4ef9ae046b5d23be2b3596,"shuffle thrift tracing support around

put cluttering legacy code into a legacy directory (but maintain
com.twitter.finagle.thrift) as its package."
mariusae,2011-02-14 22:57:38,https://api.github.com/repos/twitter/finagle/git/commits/9c3af0161f6eea8278a98b2061bfc0529c03da00,9c3af0161f6eea8278a98b2061bfc0529c03da00,"generic tracing support: TraceContext, Transcript."
mariusae,2011-02-12 00:31:00,https://api.github.com/repos/twitter/finagle/git/commits/6081b3a2eb29c2546c503e5d85f8696024332066,6081b3a2eb29c2546c503e5d85f8696024332066,s/Transaction/RequestContext
mariusae,2011-02-11 19:51:03,https://api.github.com/repos/twitter/finagle/git/commits/af831fab1b0f6c58efa51675931df8bbc3e2db3e,af831fab1b0f6c58efa51675931df8bbc3e2db3e,remove some obsolete comments.
mariusae,2011-02-11 19:49:37,https://api.github.com/repos/twitter/finagle/git/commits/f0a5fac903dbbaae7bc0f52558f9fe766d40e546,f0a5fac903dbbaae7bc0f52558f9fe766d40e546,queueingChannelHandler in the right place.
mariusae,2011-02-11 19:45:36,https://api.github.com/repos/twitter/finagle/git/commits/6b3e8fd1d54e29e9924099c4f93a26ebc92a33a2,6b3e8fd1d54e29e9924099c4f93a26ebc92a33a2,nit.
mariusae,2011-02-11 19:42:34,https://api.github.com/repos/twitter/finagle/git/commits/f2cfefd81d650ad4d05e6d8f25a6a3a0b68de84f,f2cfefd81d650ad4d05e6d8f25a6a3a0b68de84f,"kill imports for Job, QueueingChannelHandler"
mariusae,2011-02-11 19:40:33,https://api.github.com/repos/twitter/finagle/git/commits/0208bfbfc65ca5858c6c251d06818bc9b3344837,0208bfbfc65ca5858c6c251d06818bc9b3344837,kill QueueingChannelHandler.
mariusae,2011-02-11 19:40:26,https://api.github.com/repos/twitter/finagle/git/commits/2abb0fa177b82ca587117af271a345edc6799c8b,2abb0fa177b82ca587117af271a345edc6799c8b,ResponseToExpectContinue + the regular netty chunker for uploads.
mariusae,2011-02-11 19:04:21,https://api.github.com/repos/twitter/finagle/git/commits/b7407d5dbe2d09407f0f94cc85a70f94b45b57c6,b7407d5dbe2d09407f0f94cc85a70f94b45b57c6,"ChannelSemaphoreHandler: propagate close, exception events
immediately."
mariusae,2011-02-11 01:32:27,https://api.github.com/repos/twitter/finagle/git/commits/b842c046fed8430cef4d2dcf170e8a911e7e8664,b842c046fed8430cef4d2dcf170e8a911e7e8664,"introduce a ChannelSemaphore handler in place of the Queueing
handler. use it to serialize codecs & for concurrency moderation in
the ServerBuilder."
mariusae,2011-02-11 01:31:27,https://api.github.com/repos/twitter/finagle/git/commits/267e670209dc32b543b1e188ca9db0b7a80fd9f1,267e670209dc32b543b1e188ca9db0b7a80fd9f1,add some interesting connection options in the end-to-end tests.
mariusae,2011-02-11 01:31:09,https://api.github.com/repos/twitter/finagle/git/commits/195437c012f4860e622ff665fc0bb15184f5a43b,195437c012f4860e622ff665fc0bb15184f5a43b,"exposed # {waiters, permits} in the async semaphore."
mariusae,2011-02-11 01:30:40,https://api.github.com/repos/twitter/finagle/git/commits/55bda6c08e0271ea7fa80503205bcd31d403bd88,55bda6c08e0271ea7fa80503205bcd31d403bd88,prettyPrintStats
mariusae,2011-02-11 01:30:29,https://api.github.com/repos/twitter/finagle/git/commits/bbdf2b37ed4e11e40e965b4325e99539957b22ca,bbdf2b37ed4e11e40e965b4325e99539957b22ca,"modify the codec assumtions: the request cycle now restarts after the
WRITE completes, not at time of issue."
mariusae,2011-02-10 22:05:32,https://api.github.com/repos/twitter/finagle/git/commits/784402b738aa87c8580fc23913dfd7924c22e789,784402b738aa87c8580fc23913dfd7924c22e789,AsyncSemaphore: an semaphore with deferred execution.
mariusae,2011-02-10 19:14:48,https://api.github.com/repos/twitter/finagle/git/commits/72e2b294e3b99b6a71fb64928e21b14361c7e24f,72e2b294e3b99b6a71fb64928e21b14361c7e24f,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-10 19:14:07,https://api.github.com/repos/twitter/finagle/git/commits/9b10fc2db5d7ad6bc9d2c36d6ec2cd483dc58f82,9b10fc2db5d7ad6bc9d2c36d6ec2cd483dc58f82,FutureLatch => AsyncLatch
mariusae,2011-02-10 19:02:30,https://api.github.com/repos/twitter/finagle/git/commits/57454b19784578c329b59707a2909b5069f3a1c1,57454b19784578c329b59707a2909b5069f3a1c1,"Fix bug in QueueingChannelHandler: replay the message, and not the event."
mariusae,2011-02-10 19:01:53,https://api.github.com/repos/twitter/finagle/git/commits/45959c154297746df3350ab8d1ee890fa0ce2dad,45959c154297746df3350ab8d1ee890fa0ce2dad,execute FutureLatch tasks outside of the lock.
mariusae,2011-02-10 18:55:50,https://api.github.com/repos/twitter/finagle/git/commits/5d8ae894f0e4c84a21894c841d564b81ae156c07,5d8ae894f0e4c84a21894c841d564b81ae156c07,"introduce an EndToEnd stress test that measures throughput between a
finagle client and server."
mariusae,2011-02-10 18:55:04,https://api.github.com/repos/twitter/finagle/git/commits/cc695f2accca6cad9ca1856a346dfad0271ad2be,cc695f2accca6cad9ca1856a346dfad0271ad2be,make some privates
mariusae,2011-02-10 17:59:35,https://api.github.com/repos/twitter/finagle/git/commits/4e75130041881ca40b422029a94481448aede41e,4e75130041881ca40b422029a94481448aede41e,"clean up ServiceToChannelHandler code, making its concurrent
properties a little clearer: instead of synchronization, use a state
machine in combination with a latch in order to implement draining &
shutdown.

there are a lot of subtleties still with this (particularly the
ordering of operations is very important), but i think it came out
cleaner."
mariusae,2011-02-09 23:10:01,https://api.github.com/repos/twitter/finagle/git/commits/b4266c967a2e9bc0b7f054be6e8cb108b485cd47,b4266c967a2e9bc0b7f054be6e8cb108b485cd47,"Merge branch 'master' of github.com:twitter/finagle

Conflicts:
	project/build.properties"
mariusae,2011-02-09 20:59:48,https://api.github.com/repos/twitter/finagle/git/commits/8f1ebfbf2811f86b5ad4df6b487ce319677ff7cb,8f1ebfbf2811f86b5ad4df6b487ce319677ff7cb,1.1.19-SNAPSHOT
mariusae,2011-02-09 20:59:48,https://api.github.com/repos/twitter/finagle/git/commits/a1ccc004c500b5da07df9a4a6880095b220d7738,a1ccc004c500b5da07df9a4a6880095b220d7738,1.1.18
mariusae,2011-02-09 20:52:39,https://api.github.com/repos/twitter/finagle/git/commits/d6a8ad32a4c0393b1572ef84c400bdb3a867d3d3,d6a8ad32a4c0393b1572ef84c400bdb3a867d3d3,fix another deadlock in graceful server shutdown.
mariusae,2011-02-09 20:23:50,https://api.github.com/repos/twitter/finagle/git/commits/f4999b0e90edfe558f05eeac5ecc305a1455ec4e,f4999b0e90edfe558f05eeac5ecc305a1455ec4e,1.1.18-SNAPSHOT
mariusae,2011-02-09 20:23:50,https://api.github.com/repos/twitter/finagle/git/commits/1e6f2ec2d3cf30ec27d8c77de01fa51f8bdb9724,1e6f2ec2d3cf30ec27d8c77de01fa51f8bdb9724,1.1.17
mariusae,2011-02-09 20:20:27,https://api.github.com/repos/twitter/finagle/git/commits/c071f1f6c173e1e24169c448eafddc0f1391d23a,c071f1f6c173e1e24169c448eafddc0f1391d23a,standard-project 0.9.20
mariusae,2011-02-09 00:44:50,https://api.github.com/repos/twitter/finagle/git/commits/568b0bf781b06cb23ebfedbf304fec81868e324b,568b0bf781b06cb23ebfedbf304fec81868e324b,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-09 00:44:37,https://api.github.com/repos/twitter/finagle/git/commits/eb24d75cc503b26a446edfab89a7fc4bc2fb6929,eb24d75cc503b26a446edfab89a7fc4bc2fb6929,"simplify and expand stats.

get rid of StatsRepository for lack of use

refactor StatsReceivers to take simple sequences for names -- this
simplifies several aspects.

new: stats rollup.

new: additive gauges."
mariusae,2011-02-08 22:08:17,https://api.github.com/repos/twitter/finagle/git/commits/bd53b95e62223905d890a62a1406a64155af9eac,bd53b95e62223905d890a62a1406a64155af9eac,fix race condition.
mariusae,2011-02-08 02:16:45,https://api.github.com/repos/twitter/finagle/git/commits/39b99c758a706d2773c3e68757975cd6fecd1c68,39b99c758a706d2773c3e68757975cd6fecd1c68,recover template parameters in HTTP Codec4J
mariusae,2011-02-07 21:45:43,https://api.github.com/repos/twitter/finagle/git/commits/42b7c51d6b4f445f72efaf5a1de81a1ac40501fe,42b7c51d6b4f445f72efaf5a1de81a1ac40501fe,serialize LeftFoldUpstreamHandler calls.
mariusae,2011-02-07 18:52:41,https://api.github.com/repos/twitter/finagle/git/commits/1d5c985a1a616bafcfea965b9e0e4c91946d651a,1d5c985a1a616bafcfea965b9e0e4c91946d651a,1.1.16-SNAPSHOT
mariusae,2011-02-07 18:52:41,https://api.github.com/repos/twitter/finagle/git/commits/ebea4a43f26a22430a6454b81fe780e5fef9fe60,ebea4a43f26a22430a6454b81fe780e5fef9fe60,1.1.15
mariusae,2011-02-07 18:47:20,https://api.github.com/repos/twitter/finagle/git/commits/9ddc84623494e2e070b5cd3bb070a849200ed5df,9ddc84623494e2e070b5cd3bb070a849200ed5df,fix one more timer reference.
mariusae,2011-02-07 18:38:07,https://api.github.com/repos/twitter/finagle/git/commits/47a36800a49e601c994165fbff69f3c44d89a98b,47a36800a49e601c994165fbff69f3c44d89a98b,propagate isAvailable in SingletonFactory.
mariusae,2011-02-07 18:16:54,https://api.github.com/repos/twitter/finagle/git/commits/26baedb3626130f218692253782d68c42ec52970,26baedb3626130f218692253782d68c42ec52970,clean up AggregateHttpRequest a bit.
mariusae,2011-02-07 18:16:41,https://api.github.com/repos/twitter/finagle/git/commits/d9dbe8771020ceb3020245568d4e9086491c5d72,d9dbe8771020ceb3020245568d4e9086491c5d72,util 1.6.3
mariusae,2011-02-07 18:16:24,https://api.github.com/repos/twitter/finagle/git/commits/3eda1e19cc766366a08f80f4aadc8c252201a7f2,3eda1e19cc766366a08f80f4aadc8c252201a7f2,refcount Timers in unit & stress tests.
mariusae,2011-02-06 23:00:49,https://api.github.com/repos/twitter/finagle/git/commits/b4832b1f378764550c42dee37dd2324f3494c7dc,b4832b1f378764550c42dee37dd2324f3494c7dc,use request aggregation in the HTTP codec.
mariusae,2011-02-06 23:00:05,https://api.github.com/repos/twitter/finagle/git/commits/0ce06ee87fac111df57e8c6a7a1dade058cfe4d4,0ce06ee87fac111df57e8c6a7a1dade058cfe4d4,a handler for aggregating HTTP requests (ie. POSTS with 100/continue)
mariusae,2011-02-06 22:58:05,https://api.github.com/repos/twitter/finagle/git/commits/7987c637f617419b6502732feb0fa968747a9c84,7987c637f617419b6502732feb0fa968747a9c84,"LeftFoldUpstreamHandler: an upstream channel handler that is a
left-fold over all channel events"
mariusae,2011-02-06 20:02:39,https://api.github.com/repos/twitter/finagle/git/commits/2c919e6adea85289c582e79d970cfbbc03eb8548,2c919e6adea85289c582e79d970cfbbc03eb8548,introduce reference-counted timers for proper daemon thread shutdown.
mariusae,2011-02-06 19:37:46,https://api.github.com/repos/twitter/finagle/git/commits/4f04b870023d1aaaea33561672385c7f96b3615d,4f04b870023d1aaaea33561672385c7f96b3615d,"LoadBalancedFactory: revert availability condition when no underlying
factories are available."
mariusae,2011-02-05 01:07:54,https://api.github.com/repos/twitter/finagle/git/commits/38b75c66bfec55e33cfd8efb2d80f52c7d58f287,38b75c66bfec55e33cfd8efb2d80f52c7d58f287,proper draining of server channels.
mariusae,2011-02-04 01:31:23,https://api.github.com/repos/twitter/finagle/git/commits/da751caee3dd6458d755017d2b66f7fc9c134934,da751caee3dd6458d755017d2b66f7fc9c134934,bring reference counted factories to the ServerBuilder.
mariusae,2011-02-04 01:30:38,https://api.github.com/repos/twitter/finagle/git/commits/70a819454e8b39767b20980db867f2fb4f678ccf,70a819454e8b39767b20980db867f2fb4f678ccf,ServiceToChannelHandler => channel
mariusae,2011-02-04 00:56:40,https://api.github.com/repos/twitter/finagle/git/commits/15123a147103120c57e7d04f40baa76d5553d93d,15123a147103120c57e7d04f40baa76d5553d93d,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-04 00:55:59,https://api.github.com/repos/twitter/finagle/git/commits/021c9cc79669b3225962657687c672041985fd0f,021c9cc79669b3225962657687c672041985fd0f,1.1.15-SNAPSHOT
mariusae,2011-02-04 00:55:59,https://api.github.com/repos/twitter/finagle/git/commits/e9db8cabbe24604f65cef578cf67d63b314acfd5,e9db8cabbe24604f65cef578cf67d63b314acfd5,1.1.14
mariusae,2011-02-04 00:53:07,https://api.github.com/repos/twitter/finagle/git/commits/52c300ebf2caecef160d086cf14315f970b88059,52c300ebf2caecef160d086cf14315f970b88059,util 1.6.1
mariusae,2011-02-04 00:04:57,https://api.github.com/repos/twitter/finagle/git/commits/ffb196c0943ea88122c1d58fe231196425a8f4f1,ffb196c0943ea88122c1d58fe231196425a8f4f1,1.1.14-SNAPSHOT
mariusae,2011-02-04 00:04:56,https://api.github.com/repos/twitter/finagle/git/commits/c5a6889a1acccaaaf01b11be2b2bc8c7a4a174bc,c5a6889a1acccaaaf01b11be2b2bc8c7a4a174bc,1.1.13
mariusae,2011-02-04 00:02:59,https://api.github.com/repos/twitter/finagle/git/commits/8eeb391b4cc66074243c2a353eba2ab9413a8bee,8eeb391b4cc66074243c2a353eba2ab9413a8bee,util 1.6.0
mariusae,2011-02-03 23:40:05,https://api.github.com/repos/twitter/finagle/git/commits/f08225936748db07ffb43cab5186937b188901fa,f08225936748db07ffb43cab5186937b188901fa,1.1.13-SNAPSHOT
mariusae,2011-02-03 23:40:05,https://api.github.com/repos/twitter/finagle/git/commits/ef6007b7576912f4e797a860c45ac168b3c72c51,ef6007b7576912f4e797a860c45ac168b3c72c51,1.1.12
mariusae,2011-02-03 23:36:38,https://api.github.com/repos/twitter/finagle/git/commits/24f1a4b17ddd8c04577f7e3761e1d677ee0e503f,24f1a4b17ddd8c04577f7e3761e1d677ee0e503f,"add .requestTimeout() in the ServerBuilder -- note that the only thing
we can do generically is to close the connection.

thus, most servers will actually want to implement timeouts in their
service stack, producing appropriate timeout messages."
mariusae,2011-02-03 23:28:01,https://api.github.com/repos/twitter/finagle/git/commits/2bb349ba3b5284be4c108f7de44523289ce56dc7,2bb349ba3b5284be4c108f7de44523289ce56dc7,"generalize the expiry service & use it in the server side, too, with a
""ChannelClosingHandler"" that reliably closes whatever channel it
is (or will) attached to"
mariusae,2011-02-03 19:06:52,https://api.github.com/repos/twitter/finagle/git/commits/a736e24c0f8400803903f2f5410788ae2c421630,a736e24c0f8400803903f2f5410788ae2c421630,"ServiceToChannelHandler:
  * propate close events (they are releases)
  * DI the logger
  * specs"
mariusae,2011-02-03 17:56:31,https://api.github.com/repos/twitter/finagle/git/commits/13ffa9a8112ccacbf8eaba63f9521bc725473c73,13ffa9a8112ccacbf8eaba63f9521bc725473c73,1.1.12-SNAPSHOT
mariusae,2011-02-03 17:56:30,https://api.github.com/repos/twitter/finagle/git/commits/7933e18b638d6daaae00f0406c5d63e997d32c24,7933e18b638d6daaae00f0406c5d63e997d32c24,1.1.11
mariusae,2011-02-03 17:49:55,https://api.github.com/repos/twitter/finagle/git/commits/80a0794967441dd2a03b7800fc6971079b3ad850,80a0794967441dd2a03b7800fc6971079b3ad850,"make it so that a the default ChannelFactory can be revived after a
call to .releaseExternalResources.

this avoids the need for a global finagle shutdown, and allows us to
keep refcounts for graceful shutdown."
mariusae,2011-02-03 17:27:11,https://api.github.com/repos/twitter/finagle/git/commits/1744724d6a68db50850f27b05815a3f2d22c33e6,1744724d6a68db50850f27b05815a3f2d22c33e6,ChannelService: ignore errors subsequent of a connection error.
mariusae,2011-02-03 02:19:48,https://api.github.com/repos/twitter/finagle/git/commits/a1e9310b7e239f6a4757968500b71564eb30580f,a1e9310b7e239f6a4757968500b71564eb30580f,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-02-03 02:19:38,https://api.github.com/repos/twitter/finagle/git/commits/b9093772ea3acf8e7b6cafaccb7dac15e7a4551a,b9093772ea3acf8e7b6cafaccb7dac15e7a4551a,add builder option: hostConnectionMaxIdleTime(timeout: Duration)
mariusae,2011-02-03 02:06:56,https://api.github.com/repos/twitter/finagle/git/commits/4ae82b99c9dd7ca685b28261dbef837de3e21a15,4ae82b99c9dd7ca685b28261dbef837de3e21a15,"- make filter composition responsible for dealing with premature
service releases.  this simplifies pool implementations and enhances
general composability.

- implement an ExpiringService that expires a wrapped service after a
certain idle time."
mariusae,2011-02-02 19:19:15,https://api.github.com/repos/twitter/finagle/git/commits/ac38ec93b212d83f926347e90f6dcc270c3f884b,ac38ec93b212d83f926347e90f6dcc270c3f884b,"style, -whitespacegasm"
mariusae,2011-02-02 19:18:25,https://api.github.com/repos/twitter/finagle/git/commits/a32e31ff98dfee1570512dcd28054fd58105e7c9,a32e31ff98dfee1570512dcd28054fd58105e7c9,simplify the SingletonFactory by using a FutureLatch.
mariusae,2011-02-02 19:11:46,https://api.github.com/repos/twitter/finagle/git/commits/3d1bc2dac7da0d4f46418e1e4608238dbc5e26c3,3d1bc2dac7da0d4f46418e1e4608238dbc5e26c3,propagate write errors in the ChannelService.
mariusae,2011-02-02 03:10:37,https://api.github.com/repos/twitter/finagle/git/commits/0694dbed8829a99642d8785a64cd4df2b240ef90,0694dbed8829a99642d8785a64cd4df2b240ef90,"add the HTTP ClientConnetionManager do the default handler stack for
HTTP clients."
mariusae,2011-02-02 03:04:11,https://api.github.com/repos/twitter/finagle/git/commits/d1d8789b947451d25df4dcc3a97bee9dbeff04c6,d1d8789b947451d25df4dcc3a97bee9dbeff04c6,introduce a ClientConnectionManager for HTTP.
mariusae,2011-02-02 01:45:26,https://api.github.com/repos/twitter/finagle/git/commits/39cec78206195ba6bbd6b04b1d37cb2f3f4eeeb4,39cec78206195ba6bbd6b04b1d37cb2f3f4eeeb4,remove spurious line.
mariusae,2011-02-02 01:44:36,https://api.github.com/repos/twitter/finagle/git/commits/85244737587c6651e8d467765eed23b172e60ad2,85244737587c6651e8d467765eed23b172e60ad2,appropriate names everywhere.
mariusae,2011-02-02 01:40:43,https://api.github.com/repos/twitter/finagle/git/commits/0aa9fd24723dc808dd51e21f7308f4ae38ff21f0,0aa9fd24723dc808dd51e21f7308f4ae38ff21f0,spec naming.
mariusae,2011-02-02 01:38:42,https://api.github.com/repos/twitter/finagle/git/commits/d3627f731f86abd4170f71375fef975dac5a3288,d3627f731f86abd4170f71375fef975dac5a3288,translate the NIO ChannelClosedException
mariusae,2011-02-02 01:23:18,https://api.github.com/repos/twitter/finagle/git/commits/be3c707adc88ebe19226e7865224ea736c63c181,be3c707adc88ebe19226e7865224ea736c63c181,1.1.11-SNAPSHOT
mariusae,2011-02-02 01:23:16,https://api.github.com/repos/twitter/finagle/git/commits/fa6a8ef5348cfa4a0843e6104643ba4c5b335c66,fa6a8ef5348cfa4a0843e6104643ba4c5b335c66,1.1.10
mariusae,2011-02-02 00:08:19,https://api.github.com/repos/twitter/finagle/git/commits/0986dbf543d221a439bb8d045f9f576ddd1ebe19,0986dbf543d221a439bb8d045f9f576ddd1ebe19,make transactions carry payloads.
mariusae,2011-02-01 23:49:41,https://api.github.com/repos/twitter/finagle/git/commits/6fab0146c9264bb626bbcd3a93e7149e1f0763de,6fab0146c9264bb626bbcd3a93e7149e1f0763de,move common things to common places.
mariusae,2011-02-01 23:18:05,https://api.github.com/repos/twitter/finagle/git/commits/8b121ab6543ffcd33a7db22bcb43d7f2ab12b88a,8b121ab6543ffcd33a7db22bcb43d7f2ab12b88a,clean up & generalize transaction support.
mariusae,2011-02-01 18:52:38,https://api.github.com/repos/twitter/finagle/git/commits/c80167562be0bf3b81e55c6da900d450dfdc2075,c80167562be0bf3b81e55c6da900d450dfdc2075,"Merge branch 'master' of github.com:twitter/finagle

Conflicts:
	finagle-thrift/src/test/scala/com/twitter/finagle/thrift/EndToEndSpec.scala"
mariusae,2011-02-01 18:52:18,https://api.github.com/repos/twitter/finagle/git/commits/6a09b3e5b08256fe97e71e549bc79a2971dcbac9,6a09b3e5b08256fe97e71e549bc79a2971dcbac9,update to the latest util (with Locals)
mariusae,2011-02-01 02:56:37,https://api.github.com/repos/twitter/finagle/git/commits/d109968a98f862b2eff92e2f2b0f1df368ee2f66,d109968a98f862b2eff92e2f2b0f1df368ee2f66,dapper prototype.
mariusae,2011-02-01 00:14:16,https://api.github.com/repos/twitter/finagle/git/commits/9630a1d92c213a80534a2c980c75c27b4b09e80e,9630a1d92c213a80534a2c980c75c27b4b09e80e,1.1.10-SNAPSHOT
mariusae,2011-02-01 00:14:15,https://api.github.com/repos/twitter/finagle/git/commits/d70f3bb96e8d9a37f54fe11b45fb050849b488cc,d70f3bb96e8d9a37f54fe11b45fb050849b488cc,1.1.9
mariusae,2011-01-31 23:22:02,https://api.github.com/repos/twitter/finagle/git/commits/faf812443366d49dac36c137e2905b1c4b01d790,faf812443366d49dac36c137e2905b1c4b01d790,lifecycle specs for the CachingPool
mariusae,2011-01-31 23:17:13,https://api.github.com/repos/twitter/finagle/git/commits/9df153330a91094a9ebf31dcf0fa8031bf2f84a2,9df153330a91094a9ebf31dcf0fa8031bf2f84a2,"add some more lifecycle tests, discover and fix a bug (!)"
mariusae,2011-01-31 23:08:20,https://api.github.com/repos/twitter/finagle/git/commits/c4d476e7b80a5ca3b74f4c21737ba58f483c952d,c4d476e7b80a5ca3b74f4c21737ba58f483c952d,PoolServiceWrapperSpec
mariusae,2011-01-31 22:50:54,https://api.github.com/repos/twitter/finagle/git/commits/2706fb8666c2655d25e1496add565293f8abb52b,2706fb8666c2655d25e1496add565293f8abb52b,move integration to test root.
mariusae,2011-01-31 22:44:02,https://api.github.com/repos/twitter/finagle/git/commits/655f000bc9a4cdcc3828cd596d0dd2801cbdf82d,655f000bc9a4cdcc3828cd596d0dd2801cbdf82d,test ClientBuilder resource releasing
mariusae,2011-01-31 22:27:14,https://api.github.com/repos/twitter/finagle/git/commits/78ce2c756dd493bff76e77edf1668908fc64d6b3,78ce2c756dd493bff76e77edf1668908fc64d6b3,test ChannelServiceFactory.
mariusae,2011-01-31 19:55:06,https://api.github.com/repos/twitter/finagle/git/commits/531d691e739df38ac03648a6dca6531adf60e266,531d691e739df38ac03648a6dca6531adf60e266,buildFactory()
mariusae,2011-01-31 19:52:58,https://api.github.com/repos/twitter/finagle/git/commits/d5d59d6705554283710a929202e8e52579035e85,d5d59d6705554283710a929202e8e52579035e85,fix up unittests.
mariusae,2011-01-31 19:49:13,https://api.github.com/repos/twitter/finagle/git/commits/79730a31b9345f3e67388bf4d798d4783dedf215,79730a31b9345f3e67388bf4d798d4783dedf215,draining all the way through.
mariusae,2011-01-31 18:39:24,https://api.github.com/repos/twitter/finagle/git/commits/45b24c764745af4ab50416b5c8a3f9dba7823cf4,45b24c764745af4ab50416b5c8a3f9dba7823cf4,some FutureLatch docs & the actual test.
mariusae,2011-01-31 18:36:06,https://api.github.com/repos/twitter/finagle/git/commits/ff1767caab8119a1861bbd92b91d25bad3068b85,ff1767caab8119a1861bbd92b91d25bad3068b85,test for FutureLatch
mariusae,2011-01-31 18:29:12,https://api.github.com/repos/twitter/finagle/git/commits/7f7283f154ad39ee3dab5fcac4e9111e59cfb03b,7f7283f154ad39ee3dab5fcac4e9111e59cfb03b,"release services when deemed unhealthy whilst querying the queue in
the watermark pool."
mariusae,2011-01-30 03:11:36,https://api.github.com/repos/twitter/finagle/git/commits/410fba6c470c7fd988624e5b829294c69328899a,410fba6c470c7fd988624e5b829294c69328899a,add a warmup run to the stress tests.
mariusae,2011-01-30 03:08:59,https://api.github.com/repos/twitter/finagle/git/commits/9f1e8f7ed1acfceffc6cfdcdc12a934acb3a44f5,9f1e8f7ed1acfceffc6cfdcdc12a934acb3a44f5,"burden the pool with service release management, to the greater
simplification of basically everything else."
mariusae,2011-01-30 01:09:45,https://api.github.com/repos/twitter/finagle/git/commits/06a596b6014dc964beb5c98c5a6a76b8be1b4047,06a596b6014dc964beb5c98c5a6a76b8be1b4047,clean up the builder.
mariusae,2011-01-30 00:23:39,https://api.github.com/repos/twitter/finagle/git/commits/81fcdb0a4eceb071254fc1324eb39f793d0568d2,81fcdb0a4eceb071254fc1324eb39f793d0568d2,separate factories from services.
mariusae,2011-01-29 22:54:50,https://api.github.com/repos/twitter/finagle/git/commits/88fdbf06f53bcfd47388417adcd0d0ac8cc1fdf7,88fdbf06f53bcfd47388417adcd0d0ac8cc1fdf7,some more impls.
mariusae,2011-01-29 19:27:50,https://api.github.com/repos/twitter/finagle/git/commits/0a3ceae8d52e835f8bc911604e9048c0cf8ce7ad,0a3ceae8d52e835f8bc911604e9048c0cf8ce7ad,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-29 19:26:19,https://api.github.com/repos/twitter/finagle/git/commits/9cb4448a7a13cd32368aba565a93f91cefa9256e,9cb4448a7a13cd32368aba565a93f91cefa9256e,fix up compilation of other subprojects.
mariusae,2011-01-29 19:24:31,https://api.github.com/repos/twitter/finagle/git/commits/62d93e1208476edee4ec6f8f0dccb93a06936334,62d93e1208476edee4ec6f8f0dccb93a06936334,"fix up prepareChannel

  All tests PASSED."
mariusae,2011-01-29 19:10:54,https://api.github.com/repos/twitter/finagle/git/commits/253faffb49e4692772ddd84e7eefb10224904ef0,253faffb49e4692772ddd84e7eefb10224904ef0,Client.scala => ClientSpec.scala
mariusae,2011-01-29 19:08:45,https://api.github.com/repos/twitter/finagle/git/commits/c4779153b1c486f92c3a3a78c0b3493eccef8779,c4779153b1c486f92c3a3a78c0b3493eccef8779,"pool/factory cleanup, and unittests."
mariusae,2011-01-28 17:26:47,https://api.github.com/repos/twitter/finagle/git/commits/11a7b3c9926d808afc2b82b80748c253d3967132,11a7b3c9926d808afc2b82b80748c253d3967132,move around tests also.
mariusae,2011-01-28 17:20:14,https://api.github.com/repos/twitter/finagle/git/commits/f18f73ee2b6827b9cf9c870fd29169a1640267e5,f18f73ee2b6827b9cf9c870fd29169a1640267e5,move pools around.
mariusae,2011-01-27 23:25:14,https://api.github.com/repos/twitter/finagle/git/commits/d79272f81bc120d63fc40d456ebcfdf63c57e079,d79272f81bc120d63fc40d456ebcfdf63c57e079,1.1.9-SNAPSHOT
mariusae,2011-01-27 23:25:14,https://api.github.com/repos/twitter/finagle/git/commits/db1a4fb413d111bce5fe70ea48e23d80a066239b,db1a4fb413d111bce5fe70ea48e23d80a066239b,1.1.8
mariusae,2011-01-27 23:20:57,https://api.github.com/repos/twitter/finagle/git/commits/6f14791745b29c75aef2cfa0db4295716664f99c,6f14791745b29c75aef2cfa0db4295716664f99c,test prepareChannel
mariusae,2011-01-27 22:55:16,https://api.github.com/repos/twitter/finagle/git/commits/b5061dffcca432562fbf1ed29cb841640edd887a,b5061dffcca432562fbf1ed29cb841640edd887a,implement prepareChannel in the ClientBuilder
mariusae,2011-01-27 18:11:53,https://api.github.com/repos/twitter/finagle/git/commits/ab0c23141fc1bfac52cc5916103943176b704413,ab0c23141fc1bfac52cc5916103943176b704413,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-27 18:11:46,https://api.github.com/repos/twitter/finagle/git/commits/aa02b5b786ef3fbcaf60a8c422d3d5e45753fb0d,aa02b5b786ef3fbcaf60a8c422d3d5e45753fb0d,"introduce Protocols. these currently contain a Codec and a
""prepareConnection"" function."
mariusae,2011-01-27 00:27:05,https://api.github.com/repos/twitter/finagle/git/commits/b1d50d2942d621557c8d8e5c43a90c235e0490af,b1d50d2942d621557c8d8e5c43a90c235e0490af,1.1.8-SNAPSHOT
mariusae,2011-01-27 00:27:05,https://api.github.com/repos/twitter/finagle/git/commits/5cf2ca865a26f0ce090b81724966ae7f9c0656ed,5cf2ca865a26f0ce090b81724966ae7f9c0656ed,1.1.7
mariusae,2011-01-26 20:03:55,https://api.github.com/repos/twitter/finagle/git/commits/7b9c09a8ecb5199906d2eb27822d942e1d1a3f7a,7b9c09a8ecb5199906d2eb27822d942e1d1a3f7a,"Merge branch 'master' of github.com:twitter/finagle

Conflicts:
	finagle-thrift/src/test/scala/com/twitter/finagle/thrift/EndToEndSpec.scala"
mariusae,2011-01-26 20:02:18,https://api.github.com/repos/twitter/finagle/git/commits/96bb0c8d396f730adf7e31733f0470eda59244a9,96bb0c8d396f730adf7e31733f0470eda59244a9,test bad interface usage.
mariusae,2011-01-26 19:57:54,https://api.github.com/repos/twitter/finagle/git/commits/0eef4036c59eb0f1984fa835a0a8bf96344359d8,0eef4036c59eb0f1984fa835a0a8bf96344359d8,update to latest thrift codegen.
mariusae,2011-01-26 01:32:50,https://api.github.com/repos/twitter/finagle/git/commits/1023c13ef1a09a8a77cece1636adb94aa9bf48a6,1023c13ef1a09a8a77cece1636adb94aa9bf48a6,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-26 01:32:45,https://api.github.com/repos/twitter/finagle/git/commits/511b91b5f57c1601de6117b660ff4ba96d6ce867,511b91b5f57c1601de6117b660ff4ba96d6ce867,"support oneway calls.  this is unexpectedly complicated.  oneways
alter transport semantics, so we need to ship this notion back &
forth."
mariusae,2011-01-25 22:40:28,https://api.github.com/repos/twitter/finagle/git/commits/e62be312c637033e98b9bc098dbb793855fc2a00,e62be312c637033e98b9bc098dbb793855fc2a00,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-25 22:39:37,https://api.github.com/repos/twitter/finagle/git/commits/affe03ec08e8f37840a1d1b1cce16e994469158f,affe03ec08e8f37840a1d1b1cce16e994469158f,ServiceIface sans TException.
mariusae,2011-01-25 02:40:26,https://api.github.com/repos/twitter/finagle/git/commits/46459c913c926c6c66531bd38a2e4936b6e16581,46459c913c926c6c66531bd38a2e4936b6e16581,1.1.5-SNAPSHOT
mariusae,2011-01-25 02:40:25,https://api.github.com/repos/twitter/finagle/git/commits/b7c72345951d5842df4203a48d06b0f49e0e493b,b7c72345951d5842df4203a48d06b0f49e0e493b,1.1.4
mariusae,2011-01-25 02:39:28,https://api.github.com/repos/twitter/finagle/git/commits/44345847ce12264bb8ddccdaaaab5cbbefad2535,44345847ce12264bb8ddccdaaaab5cbbefad2535,update collections API usage
mariusae,2011-01-24 22:20:36,https://api.github.com/repos/twitter/finagle/git/commits/ca1bd1da409376d113d36f16bfec0c32197b7071,ca1bd1da409376d113d36f16bfec0c32197b7071,"more thorough fix, more accurate timers."
mariusae,2011-01-24 18:58:03,https://api.github.com/repos/twitter/finagle/git/commits/ac21bc41b92ae81be1a7dfe42c436347f9d05e00,ac21bc41b92ae81be1a7dfe42c436347f9d05e00,clean up timers properly in the caching pool.
mariusae,2011-01-24 18:42:14,https://api.github.com/repos/twitter/finagle/git/commits/a697d08181e4feff6ef6767611af2ab840f34758,a697d08181e4feff6ef6767611af2ab840f34758,unit tests for filter reversal
mariusae,2011-01-24 18:35:17,https://api.github.com/repos/twitter/finagle/git/commits/24db52275695d18d26f142fe29ad4185703c9d81,24db52275695d18d26f142fe29ad4185703c9d81,failure accrual: fallback to no filter if everything is filtered.
mariusae,2011-01-22 02:30:09,https://api.github.com/repos/twitter/finagle/git/commits/4f03fbab8d9f72c2aab98fa937ba956077c6ca8e,4f03fbab8d9f72c2aab98fa937ba956077c6ca8e,1.1.4-SNAPSHOT
mariusae,2011-01-22 02:30:09,https://api.github.com/repos/twitter/finagle/git/commits/5fcd6998b0026e58c8fb9c661cc47f92053573e3,5fcd6998b0026e58c8fb9c661cc47f92053573e3,1.1.3
mariusae,2011-01-22 02:25:10,https://api.github.com/repos/twitter/finagle/git/commits/f5eb71a71ea16d53e227e6467b7493ecd79f4658,f5eb71a71ea16d53e227e6467b7493ecd79f4658,ServerBuilder() API type transformation.
mariusae,2011-01-22 01:47:49,https://api.github.com/repos/twitter/finagle/git/commits/a6f2b13aedfee80460a3628cd5f63830e59266d0,a6f2b13aedfee80460a3628cd5f63830e59266d0,PoolingServiceSpec.
mariusae,2011-01-22 01:09:37,https://api.github.com/repos/twitter/finagle/git/commits/5a471d7c1d9b9e41697e113729ec4c816a8a2d96,5a471d7c1d9b9e41697e113729ec4c816a8a2d96,thread the new pooling parameters through to the builder.
mariusae,2011-01-22 01:09:13,https://api.github.com/repos/twitter/finagle/git/commits/9a02a83844edc9d361d10a23aba9342354d86961,9a02a83844edc9d361d10a23aba9342354d86961,"a caching lifecycle factory (wrapper) [with a timeout]. used to
implement connection ""idle time"" cleanup."
mariusae,2011-01-22 00:46:51,https://api.github.com/repos/twitter/finagle/git/commits/5704dcb213661c761b755ef6fc68f3115d8d0a3e,5704dcb213661c761b755ef6fc68f3115d8d0a3e,thread connection watermarks all the way through to the builder.
mariusae,2011-01-21 23:57:28,https://api.github.com/repos/twitter/finagle/git/commits/20ac9d49e3abb8ea3fee831d009c3e0a77c3fa56,20ac9d49e3abb8ea3fee831d009c3e0a77c3fa56,nothing of consequence.
mariusae,2011-01-21 23:56:47,https://api.github.com/repos/twitter/finagle/git/commits/5edac2a3978231e2cb427733d7a57c22624de0a7,5edac2a3978231e2cb427733d7a57c22624de0a7,close() and draining in PoolingService.
mariusae,2011-01-21 23:56:18,https://api.github.com/repos/twitter/finagle/git/commits/3cad08c75096657c8cd8185f7e6dabedc352049c,3cad08c75096657c8cd8185f7e6dabedc352049c,better health checking in ChannelService.
mariusae,2011-01-21 23:54:18,https://api.github.com/repos/twitter/finagle/git/commits/0159c68609cbe9fd10743605ca28819b08331628,0159c68609cbe9fd10743605ca28819b08331628,watermark pool with spec.
mariusae,2011-01-21 17:49:59,https://api.github.com/repos/twitter/finagle/git/commits/f708ed50cfe5b3d3453be7f72eba3b8ba36cc297,f708ed50cfe5b3d3453be7f72eba3b8ba36cc297,test thrift exception handling.
mariusae,2011-01-21 01:28:16,https://api.github.com/repos/twitter/finagle/git/commits/04aa2852eb58320f5d07c9e7fc102e08198a449d,04aa2852eb58320f5d07c9e7fc102e08198a449d,Return(null) vs. null
mariusae,2011-01-21 00:23:24,https://api.github.com/repos/twitter/finagle/git/commits/8800b278d463cb9ee225528493e3f952959179f8,8800b278d463cb9ee225528493e3f952959179f8,1.1.3-SNAPSHOT
mariusae,2011-01-21 00:23:24,https://api.github.com/repos/twitter/finagle/git/commits/af05a245852f8b0f3e3c42bf2d25c4e3e132f0e3,af05a245852f8b0f3e3c42bf2d25c4e3e132f0e3,1.1.2
mariusae,2011-01-21 00:17:45,https://api.github.com/repos/twitter/finagle/git/commits/13cb94e5eaa58396e86120ae3c5a308ff63c2d33,13cb94e5eaa58396e86120ae3c5a308ff63c2d33,Server[.close()] instead of Channel from ServerBuilder.
mariusae,2011-01-20 23:59:58,https://api.github.com/repos/twitter/finagle/git/commits/95adf5f4721aa9f7161a92c281edeea082ed4cb7,95adf5f4721aa9f7161a92c281edeea082ed4cb7,bump util version- we use Future.void
mariusae,2011-01-20 23:59:46,https://api.github.com/repos/twitter/finagle/git/commits/2a9dda6432e5f389a322ad904d06d604e8a34575,2a9dda6432e5f389a322ad904d06d604e8a34575,fix up unittest.
mariusae,2011-01-20 23:45:57,https://api.github.com/repos/twitter/finagle/git/commits/90e5f7d13d9a1003ee859365ea98b59a80ac161a,90e5f7d13d9a1003ee859365ea98b59a80ac161a,test void RPCs explicitly.
mariusae,2011-01-20 23:40:14,https://api.github.com/repos/twitter/finagle/git/commits/370a0acf055c31d410a81903f2f2a4f15ae853d8,370a0acf055c31d410a81903f2f2a4f15ae853d8,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-20 23:40:09,https://api.github.com/repos/twitter/finagle/git/commits/fcae95761d4a1b74ecd386d0769c2368c880c137,fcae95761d4a1b74ecd386d0769c2368c880c137,enhanced thrift support (supports new codegen for both clients & servers).
mariusae,2011-01-19 03:12:23,https://api.github.com/repos/twitter/finagle/git/commits/b32542e36a16c98edeae4c7bcff0222c6c312dcd,b32542e36a16c98edeae4c7bcff0222c6c312dcd,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-19 03:10:25,https://api.github.com/repos/twitter/finagle/git/commits/51c46fb3e681dfe381e9092f7e89764db99ad4c6,51c46fb3e681dfe381e9092f7e89764db99ad4c6,"pool ChannelServices, instead of having ChannelPool / brokering being
separate concepts."
mariusae,2011-01-19 02:18:36,https://api.github.com/repos/twitter/finagle/git/commits/84f3180fb034d10c816b799db68ecb38c9f659b8,84f3180fb034d10c816b799db68ecb38c9f659b8,ChannelService
mariusae,2011-01-18 18:09:37,https://api.github.com/repos/twitter/finagle/git/commits/ff316b859199ad565f1a97485264054a13789683,ff316b859199ad565f1a97485264054a13789683,don't synchronize().
mariusae,2011-01-18 18:03:18,https://api.github.com/repos/twitter/finagle/git/commits/35aa0797cb73d87aa2ccd530101ee34edfc0c14f,35aa0797cb73d87aa2ccd530101ee34edfc0c14f,more thrift testing.
mariusae,2011-01-14 23:54:05,https://api.github.com/repos/twitter/finagle/git/commits/2fd2decb567f86a1330a0109fa818eb683fc1637,2fd2decb567f86a1330a0109fa818eb683fc1637,1.1.2-SNAPSHOT
mariusae,2011-01-14 23:54:05,https://api.github.com/repos/twitter/finagle/git/commits/150ca729bbd5465fa8f151b7e24b786f3466f162,150ca729bbd5465fa8f151b7e24b786f3466f162,1.1.1
mariusae,2011-01-14 23:46:07,https://api.github.com/repos/twitter/finagle/git/commits/a5505b3471a36e18baf65dbaf1e0eb624e215ffa,a5505b3471a36e18baf65dbaf1e0eb624e215ffa,move stuff around more.
mariusae,2011-01-14 23:44:36,https://api.github.com/repos/twitter/finagle/git/commits/d68cccccf9d5dd434ac96315f138f6cd38927569,d68cccccf9d5dd434ac96315f138f6cd38927569,some renaming.
mariusae,2011-01-14 23:40:53,https://api.github.com/repos/twitter/finagle/git/commits/14ecb8e962c5302c7186638dc587a770dfe0c418,14ecb8e962c5302c7186638dc587a770dfe0c418,thrift2->thrift
mariusae,2011-01-14 23:39:58,https://api.github.com/repos/twitter/finagle/git/commits/fb56f9c5ba83c8edfa56fccb00b3c333d79775d7,fb56f9c5ba83c8edfa56fccb00b3c333d79775d7,"Merge branch 'master' of github.com:twitter/finagle

Conflicts:
	project/build/Project.scala"
mariusae,2011-01-14 23:39:21,https://api.github.com/repos/twitter/finagle/git/commits/09ae839d2105b5aa4070b7dc958862c7ba4aeb23,09ae839d2105b5aa4070b7dc958862c7ba4aeb23,thrift2.
mariusae,2011-01-13 22:37:54,https://api.github.com/repos/twitter/finagle/git/commits/3fc49972d5c40b1a104fc1e64624ac59071da30a,3fc49972d5c40b1a104fc1e64624ac59071da30a,aesthetics.
mariusae,2011-01-13 18:59:15,https://api.github.com/repos/twitter/finagle/git/commits/867445935fe746dbb237d820750c2bccc34235c5,867445935fe746dbb237d820750c2bccc34235c5,some cleanup + include general stats in stress tests.
mariusae,2011-01-13 01:38:20,https://api.github.com/repos/twitter/finagle/git/commits/743c39d6416fb8110e9517d8baa86021057bb7e2,743c39d6416fb8110e9517d8baa86021057bb7e2,clean up RetryingStrategy & test it.
mariusae,2011-01-13 01:11:46,https://api.github.com/repos/twitter/finagle/git/commits/b22ab632b14d836c2d78b1842458d0148354fd33,b22ab632b14d836c2d78b1842458d0148354fd33,LeastQueuedStrategySpec
mariusae,2011-01-13 00:42:32,https://api.github.com/repos/twitter/finagle/git/commits/1d53a41674baf341e8c792afd0ec798a27a8a9bd,1d53a41674baf341e8c792afd0ec798a27a8a9bd,LeastLoadedStrategySpec
mariusae,2011-01-13 00:34:43,https://api.github.com/repos/twitter/finagle/git/commits/f35b29e8af2f4487f88c2360fb18c7134afa3e8b,f35b29e8af2f4487f88c2360fb18c7134afa3e8b,ServiceMetadataSpec
mariusae,2011-01-13 00:30:05,https://api.github.com/repos/twitter/finagle/git/commits/c71e38084a03ba3c75b6c58b68c2564e74ea2f40,c71e38084a03ba3c75b6c58b68c2564e74ea2f40,test LoadBalancerService & FailureAccrualStrategy.
mariusae,2011-01-12 23:57:00,https://api.github.com/repos/twitter/finagle/git/commits/bebf7d1621bfa40cb164ab45c08e55684ce7730b,bebf7d1621bfa40cb164ab45c08e55684ce7730b,test RetryingFilter
mariusae,2011-01-12 23:31:02,https://api.github.com/repos/twitter/finagle/git/commits/061c272f5d905c125a7b6a77bc4cf4a27de29d34,061c272f5d905c125a7b6a77bc4cf4a27de29d34,move exceptions to com.twitter.finagle
mariusae,2011-01-12 23:22:25,https://api.github.com/repos/twitter/finagle/git/commits/110bf91cbb4410f54a2ab74ee5b9521ec4b3e042,110bf91cbb4410f54a2ab74ee5b9521ec4b3e042,1.1.0-SNAPSHOT
mariusae,2011-01-12 23:21:46,https://api.github.com/repos/twitter/finagle/git/commits/6989dbb16b421958a4ff99bea5ba67160c860bdf,6989dbb16b421958a4ff99bea5ba67160c860bdf,disable finagle-thrift for now.
mariusae,2011-01-12 23:13:22,https://api.github.com/repos/twitter/finagle/git/commits/aa3372116919d648088cfb709deefce3e03c82d0,aa3372116919d648088cfb709deefce3e03c82d0,move service to the toplevel.
mariusae,2011-01-12 22:59:18,https://api.github.com/repos/twitter/finagle/git/commits/1387ba5508284648c9de39a36531af28e863478a,1387ba5508284648c9de39a36531af28e863478a,formatting.
mariusae,2011-01-12 22:57:34,https://api.github.com/repos/twitter/finagle/git/commits/d34560bcf49aa8297a19da5186b244df8e030cec,d34560bcf49aa8297a19da5186b244df8e030cec,kill unused tests.
mariusae,2011-01-12 22:56:17,https://api.github.com/repos/twitter/finagle/git/commits/a4f3cc691e941da83dad3fcc43ed15f0e789a805,a4f3cc691e941da83dad3fcc43ed15f0e789a805,fix up tests.
mariusae,2011-01-12 22:51:16,https://api.github.com/repos/twitter/finagle/git/commits/b4e335e51df39a36f7fe522769ba0bab71eaa6a4,b4e335e51df39a36f7fe522769ba0bab71eaa6a4,let .codec() do a type transform.
mariusae,2011-01-12 22:46:40,https://api.github.com/repos/twitter/finagle/git/commits/c6fa7f9b3e92ea7c6dd19def5fccca3d494fcb75,c6fa7f9b3e92ea7c6dd19def5fccca3d494fcb75,"Merge branch 'master' of github.com:twitter/finagle

Conflicts:
	finagle-core/src/main/scala/com/twitter/finagle/builder/ClientBuilder.scala"
mariusae,2011-01-12 22:44:07,https://api.github.com/repos/twitter/finagle/git/commits/3bd99638d47874b670f3db054753c00e73ac80b1,3bd99638d47874b670f3db054753c00e73ac80b1,"comments on loadbalancers, etc."
mariusae,2011-01-12 22:29:50,https://api.github.com/repos/twitter/finagle/git/commits/04670b7c9ed547d4326a3afc5d8ef9c2d7d0f1cd,04670b7c9ed547d4326a3afc5d8ef9c2d7d0f1cd,LeastQueuedStrategy
mariusae,2011-01-12 19:49:48,https://api.github.com/repos/twitter/finagle/git/commits/36374bee32b6666b6b36df462b2545f448bafeef,36374bee32b6666b6b36df462b2545f448bafeef,checkpoint.
mariusae,2011-01-12 19:40:42,https://api.github.com/repos/twitter/finagle/git/commits/bf39e4b09c12c3a9aeb289d774d1ff4566d7ae1d,bf39e4b09c12c3a9aeb289d774d1ff4566d7ae1d,checkpoint.  type changes.
mariusae,2011-01-12 19:18:31,https://api.github.com/repos/twitter/finagle/git/commits/c53f66f3ff8a202b9990282974dedb3fbfdd4af7,c53f66f3ff8a202b9990282974dedb3fbfdd4af7,zap AnyRef.
mariusae,2011-01-12 19:14:22,https://api.github.com/repos/twitter/finagle/git/commits/6edb1f36a5250742346f6c651fb9bbafccf2a697,6edb1f36a5250742346f6c651fb9bbafccf2a697,checkpoint.
mariusae,2011-01-11 22:43:49,https://api.github.com/repos/twitter/finagle/git/commits/1e7a10350299cd276e962e887b7cc15795ce3e53,1e7a10350299cd276e962e887b7cc15795ce3e53,delay badness a bit (to request 10k)
mariusae,2011-01-11 22:43:07,https://api.github.com/repos/twitter/finagle/git/commits/22119168743a42222250267d79d05f895fe39b3b,22119168743a42222250267d79d05f895fe39b3b,more better.
mariusae,2011-01-11 22:32:46,https://api.github.com/repos/twitter/finagle/git/commits/3a1e740bea51388bb3b8135aa12f16cb290a8d37,3a1e740bea51388bb3b8135aa12f16cb290a8d37,print load/weight/duration matrix.
mariusae,2011-01-11 22:32:19,https://api.github.com/repos/twitter/finagle/git/commits/30146033580279455eba6ac9d4ece22d7b9f9376,30146033580279455eba6ac9d4ece22d7b9f9376,pretty client builder toString
mariusae,2011-01-11 21:55:34,https://api.github.com/repos/twitter/finagle/git/commits/945224c12efb7520039e15817f28bcd58194a7cc,945224c12efb7520039e15817f28bcd58194a7cc,fix periodic reporting of gauges.
mariusae,2011-01-11 19:48:06,https://api.github.com/repos/twitter/finagle/git/commits/15e0378d4636b220a5204e9a79dc8d3cc19029bf,15e0378d4636b220a5204e9a79dc8d3cc19029bf,integration => stress
mariusae,2011-01-11 19:44:56,https://api.github.com/repos/twitter/finagle/git/commits/e57d5e46b3e6a7ea9a0c57379e6aa303066dd113,e57d5e46b3e6a7ea9a0c57379e6aa303066dd113,finagle-integration => finagle-stress
mariusae,2011-01-11 17:23:54,https://api.github.com/repos/twitter/finagle/git/commits/f3e9a4ab5992b7115147d35bad8a153227c16a15,f3e9a4ab5992b7115147d35bad8a153227c16a15,"split integration tests into its own subproject for experimentation &
integration tests."
mariusae,2011-01-11 17:05:02,https://api.github.com/repos/twitter/finagle/git/commits/5c150fa113e40f5ec2068d86ac68f6ade238a4c1,5c150fa113e40f5ec2068d86ac68f6ade238a4c1,finer grained timer; concurrent requests.
mariusae,2011-01-11 01:39:45,https://api.github.com/repos/twitter/finagle/git/commits/3b66933f5b46ff534952210fd2cb77f4b362b87e,3b66933f5b46ff534952210fd2cb77f4b362b87e,standard-project 0.9.8
mariusae,2011-01-10 18:39:20,https://api.github.com/repos/twitter/finagle/git/commits/22bb27822a90bc6dd6b320c22f2a9a69ad36a2c2,22bb27822a90bc6dd6b320c22f2a9a69ad36a2c2,1.0.22-SNAPSHOT
mariusae,2011-01-10 18:39:19,https://api.github.com/repos/twitter/finagle/git/commits/8acf98d9d81bb469a335c769d1d444aaf4798fbd,8acf98d9d81bb469a335c769d1d444aaf4798fbd,1.0.21
mariusae,2011-01-10 18:33:23,https://api.github.com/repos/twitter/finagle/git/commits/445ef3f80e75eaaf53b99b8eace623e6efc3b1ca,445ef3f80e75eaaf53b99b8eace623e6efc3b1ca,fix race condition when giving channels back from the BrokerAdapter.
mariusae,2011-01-09 06:03:59,https://api.github.com/repos/twitter/finagle/git/commits/1312c6c9e7759ce2d6cf752f77f5523c5e956d9a,1312c6c9e7759ce2d6cf752f77f5523c5e956d9a,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-07 21:20:34,https://api.github.com/repos/twitter/finagle/git/commits/77ebff7904fdc2f70b693590578a840c21b68c4c,77ebff7904fdc2f70b693590578a840c21b68c4c,1.0.21-SNAPSHOT
mariusae,2011-01-07 21:20:33,https://api.github.com/repos/twitter/finagle/git/commits/bd9fd75b2388e65d8e9e3072551e3364a3494224,bd9fd75b2388e65d8e9e3072551e3364a3494224,1.0.20
mariusae,2011-01-07 21:17:59,https://api.github.com/repos/twitter/finagle/git/commits/e3a61804bd91a1d46ee7651a097b65dd75d60ccc,e3a61804bd91a1d46ee7651a097b65dd75d60ccc,don't try to check type when erasure has already killed us.
mariusae,2011-01-07 21:11:44,https://api.github.com/repos/twitter/finagle/git/commits/e8ed087de4cd715430fd0bf9be0ebc56fdcf0452,e8ed087de4cd715430fd0bf9be0ebc56fdcf0452,1.0.20-SNAPSHOT
mariusae,2011-01-07 21:11:42,https://api.github.com/repos/twitter/finagle/git/commits/8309e18e02f85e891bdf49e65db4dca097b073c4,8309e18e02f85e891bdf49e65db4dca097b073c4,1.0.19
mariusae,2011-01-07 21:01:53,https://api.github.com/repos/twitter/finagle/git/commits/2b6c62d17b1e36a757faa12e1c5b4d7c2db821c5,2b6c62d17b1e36a757faa12e1c5b4d7c2db821c5,1.0.19-SNAPSHOT
mariusae,2011-01-07 21:00:57,https://api.github.com/repos/twitter/finagle/git/commits/7297dc990fc0210470a70557fea18bfc565f5bc1,7297dc990fc0210470a70557fea18bfc565f5bc1,build.properties for subprojects.  this is needed for inlining.
mariusae,2011-01-07 20:58:06,https://api.github.com/repos/twitter/finagle/git/commits/4d88db179aa8bb4066a318d214513d0037043ae7,4d88db179aa8bb4066a318d214513d0037043ae7,1.0.18-SNAPSHOT
mariusae,2011-01-07 19:57:37,https://api.github.com/repos/twitter/finagle/git/commits/6b534e74834d0ddb18d16a104b9b3a5d4986e232,6b534e74834d0ddb18d16a104b9b3a5d4986e232,don't require http for latency stats.
mariusae,2011-01-07 19:16:14,https://api.github.com/repos/twitter/finagle/git/commits/5bfa50cb60d866fed69ee3265be9aa0e19859e29,5bfa50cb60d866fed69ee3265be9aa0e19859e29,1.0.17-SNAPSHOT
mariusae,2011-01-07 19:16:14,https://api.github.com/repos/twitter/finagle/git/commits/9e6e1ba6986f1d694722128fa3e05aa54b250b91,9e6e1ba6986f1d694722128fa3e05aa54b250b91,1.0.16
mariusae,2011-01-07 19:15:23,https://api.github.com/repos/twitter/finagle/git/commits/cfa2c726401dbae6a76990c08e8cfc284ff6848a,cfa2c726401dbae6a76990c08e8cfc284ff6848a,+ subversionRepository.
mariusae,2011-01-07 19:10:33,https://api.github.com/repos/twitter/finagle/git/commits/496ca26f3551e350144f2a74bf725cdd1ee8922d,496ca26f3551e350144f2a74bf725cdd1ee8922d,"shuffle around AdhocInlines, compatible with standard-project 0.9.4."
mariusae,2011-01-07 17:02:50,https://api.github.com/repos/twitter/finagle/git/commits/e9ee5ff90400458f7ca3b5ca0d761ca64476baad,e9ee5ff90400458f7ca3b5ca0d761ca64476baad,merge fail: move NettyAssumptions into finagle-core.
mariusae,2011-01-07 16:42:36,https://api.github.com/repos/twitter/finagle/git/commits/b882179dab78494a520a48e2adf8e3dbccdfe8f7,b882179dab78494a520a48e2adf8e3dbccdfe8f7,"fix compile: don't import ``thrift'' in the server builder-- it's no
longer available in the core package"
mariusae,2011-01-07 01:55:19,https://api.github.com/repos/twitter/finagle/git/commits/453c9044eb50c050c979a91d25927341488e5f29,453c9044eb50c050c979a91d25927341488e5f29,"add ""NettyAssumptionsSpec"" to verify netty assumptions. while some of
the tests are likely unreliable, this serves to document the kinds of
assumptions we make of Netty."
mariusae,2011-01-07 01:40:20,https://api.github.com/repos/twitter/finagle/git/commits/0fc647f4f8fa910e89c9d22887cad039daf62d67,0fc647f4f8fa910e89c9d22887cad039daf62d67,"don't maintain a separate ""health"" value-- it's enough to simply close
the connection & query its open state."
mariusae,2011-01-07 01:03:55,https://api.github.com/repos/twitter/finagle/git/commits/04e4509d9d69163a65c98ad5cb63684aa39ff7dc,04e4509d9d69163a65c98ad5cb63684aa39ff7dc,protocol garbling integration testing.
mariusae,2011-01-07 00:03:10,https://api.github.com/repos/twitter/finagle/git/commits/fd3eb6aa6b9cd63e2bff18785b045b93b33945dd,fd3eb6aa6b9cd63e2bff18785b045b93b33945dd,remove funny comments.
mariusae,2011-01-06 23:06:05,https://api.github.com/repos/twitter/finagle/git/commits/27af73aa1fd36c4308d1445c20cbd351b578df15,27af73aa1fd36c4308d1445c20cbd351b578df15,1.0.16-SNAPSHOT
mariusae,2011-01-06 23:06:05,https://api.github.com/repos/twitter/finagle/git/commits/9da2e04aec378c788391eb62d3fe2340a7b5f543,9da2e04aec378c788391eb62d3fe2340a7b5f543,1.0.15
mariusae,2011-01-06 22:59:42,https://api.github.com/repos/twitter/finagle/git/commits/e2756b42bc564e615fe485216c850d021e381b80,e2756b42bc564e615fe485216c850d021e381b80,util 1.4.8
mariusae,2011-01-06 22:55:57,https://api.github.com/repos/twitter/finagle/git/commits/1c3e908f1971693736cbe883f7eda14c414e5f35,1c3e908f1971693736cbe883f7eda14c414e5f35,1.0.15-SNAPSHOT
mariusae,2011-01-06 22:55:23,https://api.github.com/repos/twitter/finagle/git/commits/84dd77aa9031f93e339b80c2336da25d7451822d,84dd77aa9031f93e339b80c2336da25d7451822d,"add *value* to timings, not count."
mariusae,2011-01-06 22:39:27,https://api.github.com/repos/twitter/finagle/git/commits/da5d64a98c28a6373d38f7b01167ebb823d7fa9d,da5d64a98c28a6373d38f7b01167ebb823d7fa9d,1.0.14-SNAPSHOT
mariusae,2011-01-06 22:38:42,https://api.github.com/repos/twitter/finagle/git/commits/7eb7b1e5450864dec2404527a0bff5c0be5611a7,7eb7b1e5450864dec2404527a0bff5c0be5611a7,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-06 22:22:39,https://api.github.com/repos/twitter/finagle/git/commits/4adbdd195aa6306e9bc707b5600c1114b68c8853,4adbdd195aa6306e9bc707b5600c1114b68c8853,step 4.
mariusae,2011-01-06 00:21:45,https://api.github.com/repos/twitter/finagle/git/commits/c84aa47a7b0f91c4a1db2fbc41aa7af273aabacd,c84aa47a7b0f91c4a1db2fbc41aa7af273aabacd,"refactor/simplifications:

  - kill the ability to layer a netty channel on top of brokers.
nobody uses it.  everybody uses the Service interface.
  - change Broker into a Service[AnyRef, AnyRef] (we may move casting
up the stack soon)

this gets rid of write completion futures, which actually ends up
simplifying much of the semantics of finagle as we only have one
future per request, and there's a strict 1:1 relationship between
requests & futures.  in order to accomodate for this, we define
certain futures to be ""write failures"" so that we can match on them
for retries.

we also introduce improvements & fix some bugs."
mariusae,2011-01-05 19:12:23,https://api.github.com/repos/twitter/finagle/git/commits/09619934fda2936f53ac8776ef8579e27cca44d3,09619934fda2936f53ac8776ef8579e27cca44d3,service.Client: updateIfEmpty because we have two sources now.
mariusae,2011-01-05 19:01:59,https://api.github.com/repos/twitter/finagle/git/commits/8b3859fef3ec1794cafa390aa651670c735e2597,8b3859fef3ec1794cafa390aa651670c735e2597,fix broker retrier.
mariusae,2011-01-05 17:28:16,https://api.github.com/repos/twitter/finagle/git/commits/fa0f5bef28bd6f4349b9380cf95cdf99bc69299e,fa0f5bef28bd6f4349b9380cf95cdf99bc69299e,some more sensible defaults.
mariusae,2011-01-05 02:05:14,https://api.github.com/repos/twitter/finagle/git/commits/5b852f2324f9b68a30eeacf4a48e5c48bb83b5e3,5b852f2324f9b68a30eeacf4a48e5c48bb83b5e3,refinements.
mariusae,2011-01-05 01:45:31,https://api.github.com/repos/twitter/finagle/git/commits/90c84f9ec66dfc3354d6fd76df136e767da3c24f,90c84f9ec66dfc3354d6fd76df136e767da3c24f,() == side effects.
mariusae,2011-01-05 01:43:59,https://api.github.com/repos/twitter/finagle/git/commits/8089e99664b91b85c73e14870b59a53f4b78320e,8089e99664b91b85c73e14870b59a53f4b78320e,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-05 01:43:50,https://api.github.com/repos/twitter/finagle/git/commits/0b406e98d8083afdd86c850ff081b50ac7b66d29,0b406e98d8083afdd86c850ff081b50ac7b66d29,basic integration testing for load balancer/builder.
mariusae,2011-01-04 21:09:33,https://api.github.com/repos/twitter/finagle/git/commits/9807e417a5d3b3ad1b85f7b300e9c0398be94b93,9807e417a5d3b3ad1b85f7b300e9c0398be94b93,1.0.13-SNAPSHOT
mariusae,2011-01-04 21:09:33,https://api.github.com/repos/twitter/finagle/git/commits/6afaba7ef35866b6ca2c96a75e478abad4ab00e7,6afaba7ef35866b6ca2c96a75e478abad4ab00e7,1.0.12
mariusae,2011-01-04 20:38:10,https://api.github.com/repos/twitter/finagle/git/commits/ad5c991d630e369ebf5208e9c2b405ff39572e7f,ad5c991d630e369ebf5208e9c2b405ff39572e7f,Durations everywhere.
mariusae,2011-01-04 19:37:13,https://api.github.com/repos/twitter/finagle/git/commits/f6f868f98a805aa80add34fc0eb42774bf350424,f6f868f98a805aa80add34fc0eb42774bf350424,use untilNow API instead of Duration.since
mariusae,2011-01-04 19:14:05,https://api.github.com/repos/twitter/finagle/git/commits/e0d51e0eb308f2299f8edf13b9346bb89887750a,e0d51e0eb308f2299f8edf13b9346bb89887750a,1.0.12-SNAPSHOT
mariusae,2011-01-04 19:14:05,https://api.github.com/repos/twitter/finagle/git/commits/f291441dc54e816a912ddef86b2448525c55eeb7,f291441dc54e816a912ddef86b2448525c55eeb7,1.0.11
mariusae,2011-01-04 19:11:48,https://api.github.com/repos/twitter/finagle/git/commits/71b270cdf67711d6d2ac605429061c4673ef1701,71b270cdf67711d6d2ac605429061c4673ef1701,remove snapshot version of util
mariusae,2011-01-04 18:55:33,https://api.github.com/repos/twitter/finagle/git/commits/7fd436b891708335d414607b12391e129dc5d139,7fd436b891708335d414607b12391e129dc5d139,Merge branch 'master' of github.com:twitter/finagle
mariusae,2011-01-04 18:55:21,https://api.github.com/repos/twitter/finagle/git/commits/4e9ad5f9ae6900d5a25a2aef24675e25172b3311,4e9ad5f9ae6900d5a25a2aef24675e25172b3311,"use the direct (value, unit) interface to the RichTimer"
mariusae,2011-01-04 18:54:38,https://api.github.com/repos/twitter/finagle/git/commits/3555bdba663bad148b46f4606e266e3c9b39668b,3555bdba663bad148b46f4606e266e3c9b39668b,s/MICROSECONDS/MILLISECONDS
mariusae,2011-01-04 18:54:24,https://api.github.com/repos/twitter/finagle/git/commits/d9fa62e774198aee1e3ee8c3aa73fd6620f1ce0a,d9fa62e774198aee1e3ee8c3aa73fd6620f1ce0a,"remove Timeout.Eternity. it is unused, and overflows."
mariusae,2011-01-04 18:54:11,https://api.github.com/repos/twitter/finagle/git/commits/014ece57bf9dfd1f6a8e473f68995424e957dbed,014ece57bf9dfd1f6a8e473f68995424e957dbed,test for timer & duration.
mariusae,2011-01-04 18:53:55,https://api.github.com/repos/twitter/finagle/git/commits/b80a7bc6501de479d29f9e5923ec0f5919695fc9,b80a7bc6501de479d29f9e5923ec0f5919695fc9,s/MICROSECONDS/MILLISECONDS
mariusae,2011-01-04 01:31:16,https://api.github.com/repos/twitter/finagle/git/commits/6687830e1fd7b9af41416c55f7544f52265f0677,6687830e1fd7b9af41416c55f7544f52265f0677,a timeout filter to use for end-to-end request timeouts.
mariusae,2011-01-03 23:23:59,https://api.github.com/repos/twitter/finagle/git/commits/5230fb6ad132b11f81c740a899a785ffa7410a0e,5230fb6ad132b11f81c740a899a785ffa7410a0e,"kill timeouts on the server side: these are advanced connection-level
features that should be provided with a custom codec."
mariusae,2011-01-03 19:48:24,https://api.github.com/repos/twitter/finagle/git/commits/3a756af656139a18f609717c2677b7e4e1059c7a,3a756af656139a18f609717c2677b7e4e1059c7a,"add durations, not absolute times, to samples"
mariusae,2011-01-03 18:55:15,https://api.github.com/repos/twitter/finagle/git/commits/392ceae171bcf46d224ab994ff37702d3746267d,392ceae171bcf46d224ab994ff37702d3746267d,"Merge branch 'master' of github.com:twitter/finagle

Conflicts:
	project/build.properties"
mariusae,2010-12-22 18:52:11,https://api.github.com/repos/twitter/finagle/git/commits/427a288d56747d87e00e0ce07bf094d41d01ec32,427a288d56747d87e00e0ce07bf094d41d01ec32,1.0.10-SNAPSHOT
mariusae,2010-12-22 18:52:11,https://api.github.com/repos/twitter/finagle/git/commits/42f493cc5b4fea64c784cf9d5c280fc4e599c611,42f493cc5b4fea64c784cf9d5c280fc4e599c611,1.0.9
mariusae,2010-12-22 18:32:52,https://api.github.com/repos/twitter/finagle/git/commits/87260079abde2c350e7d4079e13d1e845829ec7c,87260079abde2c350e7d4079e13d1e845829ec7c,kill snapshot deps.
mariusae,2010-12-22 18:32:23,https://api.github.com/repos/twitter/finagle/git/commits/892f051cf73ab4c78bd404ffd2859e1fdb021518,892f051cf73ab4c78bd404ffd2859e1fdb021518,add .ivyjars to .gitignore
mariusae,2010-12-22 18:28:16,https://api.github.com/repos/twitter/finagle/git/commits/35a54dd37ab2f6abb44397d3aa16142c3163447d,35a54dd37ab2f6abb44397d3aa16142c3163447d,1.0.9-SNAPSHOT
mariusae,2010-12-22 00:39:18,https://api.github.com/repos/twitter/finagle/git/commits/a621b3081cb2cd5a0733f634ad68554d958af5ea,a621b3081cb2cd5a0733f634ad68554d958af5ea,"Merge branch 'master' of github.com:twitter/finagle

Conflicts:
	project/build.properties
	project/build/Project.scala"
mariusae,2010-12-22 00:33:20,https://api.github.com/repos/twitter/finagle/git/commits/d0c033f76758f0bdf6aae2d5e1284fa7db2ef444,d0c033f76758f0bdf6aae2d5e1284fa7db2ef444,bump version.
mariusae,2010-12-22 00:31:27,https://api.github.com/repos/twitter/finagle/git/commits/023107f28dfa345e1f9522653518f01dca4c0d30,023107f28dfa345e1f9522653518f01dca4c0d30,use adhoc inlines.
mariusae,2010-12-22 00:31:19,https://api.github.com/repos/twitter/finagle/git/commits/4dee28e4c1acd4979bb1c721490ea704e4e5e262,4dee28e4c1acd4979bb1c721490ea704e4e5e262,"add a HTTP connection lifecycle manager to the HTTP codec in order to
deal with HTTP keepalive management"
mariusae,2010-12-20 22:52:20,https://api.github.com/repos/twitter/finagle/git/commits/29cf70af6a4e54f4b1b14bcde690367cb5a8efd3,29cf70af6a4e54f4b1b14bcde690367cb5a8efd3,and once more.
mariusae,2010-12-20 21:35:30,https://api.github.com/repos/twitter/finagle/git/commits/f6ad08cc4537ec22a50a84ed9e6ca2df896eeae1,f6ad08cc4537ec22a50a84ed9e6ca2df896eeae1,bump version.
mariusae,2010-12-16 03:26:34,https://api.github.com/repos/twitter/finagle/git/commits/e7b37b798c213bc2d477ab8756c9dee3360af8c3,e7b37b798c213bc2d477ab8756c9dee3360af8c3,more whining.
mariusae,2010-12-16 03:22:36,https://api.github.com/repos/twitter/finagle/git/commits/e019e2792aebaf058de5b321553820402cb1e47a,e019e2792aebaf058de5b321553820402cb1e47a,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-12-16 03:22:17,https://api.github.com/repos/twitter/finagle/git/commits/9fa4fd74f87aacb4e3f64bcd9d2653b7592259e2,9fa4fd74f87aacb4e3f64bcd9d2653b7592259e2,"fix null pointer exception in the retrying broker when the passed-in
channel is null (eg. when we use services).

also test this in the service specs, additionally verifying that we
DON'T retry on close-after-write.  add a big fat TODO with a whiny
note about vague semantics here."
mariusae,2010-12-15 00:53:56,https://api.github.com/repos/twitter/finagle/git/commits/40e45286b1ec8d4d28dce4578126e19e4505c22e,40e45286b1ec8d4d28dce4578126e19e4505c22e,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-12-15 00:16:53,https://api.github.com/repos/twitter/finagle/git/commits/f35cfd9eeb98b8b604c67b944be7ee4e5394eb8d,f35cfd9eeb98b8b604c67b944be7ee4e5394eb8d,bump version for connection health fix.
mariusae,2010-12-14 18:57:36,https://api.github.com/repos/twitter/finagle/git/commits/7406a5eec6d000ecb4a916087f774d92592a8c8c,7406a5eec6d000ecb4a916087f774d92592a8c8c,"add some more notes, qualifiers, about [proactive] connection health checking."
mariusae,2010-12-14 18:53:07,https://api.github.com/repos/twitter/finagle/git/commits/b9d120b0de4e71ec06e64ce736bc5c2dcd3ff7ea,b9d120b0de4e71ec06e64ce736bc5c2dcd3ff7ea,fix method resolution order in the wrappingbroker.  test for it.
mariusae,2010-12-14 18:52:41,https://api.github.com/repos/twitter/finagle/git/commits/2c58a21e31a9f85a40c64e645d415fc0836ad8c0,2c58a21e31a9f85a40c64e645d415fc0836ad8c0,expose broker availability through ostrich as well.
mariusae,2010-12-13 23:41:16,https://api.github.com/repos/twitter/finagle/git/commits/b3185642160fb53749ea65931d85757693ead514,b3185642160fb53749ea65931d85757693ead514,unittest proactive connection establishment.
mariusae,2010-12-13 22:03:35,https://api.github.com/repos/twitter/finagle/git/commits/df86c2867b2f6ef694d336fb6f9d5fb01ea9dc18,df86c2867b2f6ef694d336fb6f9d5fb01ea9dc18,use Serialized as-moved to com.twitter.util.
mariusae,2010-12-13 20:54:28,https://api.github.com/repos/twitter/finagle/git/commits/9592d0c2b545381a3cd698bf5ddbfb84cd76e246,9592d0c2b545381a3cd698bf5ddbfb84cd76e246,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-12-13 20:54:18,https://api.github.com/repos/twitter/finagle/git/commits/8e4bbb7b1e25bd1867ae12956958ba653b70689d,8e4bbb7b1e25bd1867ae12956958ba653b70689d,"run to include ostrich, &c."
mariusae,2010-12-11 01:16:31,https://api.github.com/repos/twitter/finagle/git/commits/75976b213cdfef2cfb252b2f4c1a5da636e43df4,75976b213cdfef2cfb252b2f4c1a5da636e43df4,add proactive connection establishment.
mariusae,2010-12-10 18:08:52,https://api.github.com/repos/twitter/finagle/git/commits/bf776cea37f7d9b88f3a260d259fefcd12207b28,bf776cea37f7d9b88f3a260d259fefcd12207b28,minimal README.
mariusae,2010-12-10 18:00:53,https://api.github.com/repos/twitter/finagle/git/commits/b86521eaa0d27cfe8c520d0684e9f89273a63dd7,b86521eaa0d27cfe8c520d0684e9f89273a63dd7,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-12-10 18:00:39,https://api.github.com/repos/twitter/finagle/git/commits/a0d7a94cded13f2da8a8851e329701cb12246b0f,a0d7a94cded13f2da8a8851e329701cb12246b0f,"(1) introduce ""isAvailable"" on brokers; (2) introduce a wrapping
broker now that we have multiple methods on the brokers."
mariusae,2010-12-10 02:15:08,https://api.github.com/repos/twitter/finagle/git/commits/a74a8e2b9e2f67d1827548d98901c7784fb7a36e,a74a8e2b9e2f67d1827548d98901c7784fb7a36e,some more exceptions cleanup.
mariusae,2010-12-10 02:10:06,https://api.github.com/repos/twitter/finagle/git/commits/234fb9a4613ba387f2711de06a96f7d13435596a,234fb9a4613ba387f2711de06a96f7d13435596a,"translate exceptions into an internal exception hierarchy so as to
have a canonical way of referring class of exceptions (eg. connection,
request, etc.)"
mariusae,2010-12-08 21:56:26,https://api.github.com/repos/twitter/finagle/git/commits/c8a6798b34aa777ae6375c0592c48476ea947186,c8a6798b34aa777ae6375c0592c48476ea947186,"make generic channel factories & binding in the builders-- this
enables the use of other channel factories (notably, local ones, for
testing)"
mariusae,2010-12-06 22:57:47,https://api.github.com/repos/twitter/finagle/git/commits/2f659429be9ef2d1cdf6ff63733bf3917e459cd9,2f659429be9ef2d1cdf6ff63733bf3917e459cd9,"conditional composition: ""andThenIf"""
mariusae,2010-11-29 21:58:28,https://api.github.com/repos/twitter/finagle/git/commits/1cd78018b23b4d9b96080abbdbab94cc982d172e,1cd78018b23b4d9b96080abbdbab94cc982d172e,"remove killdeer from deps, fixup_crosspaths.sh no more"
mariusae,2010-11-29 21:58:01,https://api.github.com/repos/twitter/finagle/git/commits/22706d14f8799ab2cd1363803f675863b37217ee,22706d14f8799ab2cd1363803f675863b37217ee,simple service spec for composition.
mariusae,2010-11-29 18:44:36,https://api.github.com/repos/twitter/finagle/git/commits/a5d74913dc1dbda05b1f5a94139a70ebcd4935d9,a5d74913dc1dbda05b1f5a94139a70ebcd4935d9,composition to the max.
mariusae,2010-11-24 17:14:45,https://api.github.com/repos/twitter/finagle/git/commits/c75bb1cb9d182bb883ce9f22fe323cbdcafae658,c75bb1cb9d182bb883ce9f22fe323cbdcafae658,checkpoint.
mariusae,2010-12-03 00:09:19,https://api.github.com/repos/twitter/finagle/git/commits/bca00d84a3460fa30b9f1fe7c98c6f5ce9e15a9a,bca00d84a3460fa30b9f1fe7c98c6f5ce9e15a9a,"update standard project, and use inline() from there."
mariusae,2010-11-19 21:46:08,https://api.github.com/repos/twitter/finagle/git/commits/65867b0f0e20aa5c1901f0ef87a01a4485b8a21a,65867b0f0e20aa5c1901f0ef87a01a4485b8a21a,dep. inlining
mariusae,2010-11-19 01:54:25,https://api.github.com/repos/twitter/finagle/git/commits/f76962aa8f1e9d3f84274805e935a16840c5cda0,f76962aa8f1e9d3f84274805e935a16840c5cda0,"remove dead code, better up/down indicators."
mariusae,2010-11-19 00:44:27,https://api.github.com/repos/twitter/finagle/git/commits/df8391633300efd65bd900e77b0898791979ca63,df8391633300efd65bd900e77b0898791979ca63,snoop to a java.util.logging.Logger
mariusae,2010-11-18 18:24:23,https://api.github.com/repos/twitter/finagle/git/commits/3b9ae30e99e5f046e4d3567fd9607ca49a14d8a6,3b9ae30e99e5f046e4d3567fd9607ca49a14d8a6,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-11-18 18:24:09,https://api.github.com/repos/twitter/finagle/git/commits/e1a82db050f1c4600852398f6b4b13631e214b40,e1a82db050f1c4600852398f6b4b13631e214b40,fixup_crosspaths.sh
mariusae,2010-11-16 19:01:42,https://api.github.com/repos/twitter/finagle/git/commits/4ab1c6664e374b7dbea269d32b4a9bda27d9153c,4ab1c6664e374b7dbea269d32b4a9bda27d9153c,some reshuffling.
mariusae,2010-11-16 00:23:13,https://api.github.com/repos/twitter/finagle/git/commits/cce6bd9836a726a18e54893e3ba49f02d7dd18df,cce6bd9836a726a18e54893e3ba49f02d7dd18df,scala server test w/ stub interface.
mariusae,2010-11-15 23:50:26,https://api.github.com/repos/twitter/finagle/git/commits/78b04975daaa44131e8d93d29d6d1b726c23ae30,78b04975daaa44131e8d93d29d6d1b726c23ae30,"abstract Client into ""Stub"", and create a Server stub too.  update the examples."
mariusae,2010-11-15 21:40:59,https://api.github.com/repos/twitter/finagle/git/commits/76eba443bfe2f0334ef60e818d3ee41620e07c83,76eba443bfe2f0334ef60e818d3ee41620e07c83,"Merge branch 'master' of github.com:twitter/finagle

Conflicts:
	src/main/scala/com/twitter/finagle/builder/Server.scala
	src/main/scala/com/twitter/finagle/test/Server.scala"
mariusae,2010-11-15 20:28:35,https://api.github.com/repos/twitter/finagle/git/commits/253649e882705892c7c2ec645602fd74057084a1,253649e882705892c7c2ec645602fd74057084a1,consolidate builders.
mariusae,2010-11-15 19:37:47,https://api.github.com/repos/twitter/finagle/git/commits/ddaa51beea7ba393799cae961ce849142e3780a7,ddaa51beea7ba393799cae961ce849142e3780a7,2.8.1
mariusae,2010-11-13 01:54:32,https://api.github.com/repos/twitter/finagle/git/commits/2cb71d623fb4253d2e46388f183b9253e7d9b340,2cb71d623fb4253d2e46388f183b9253e7d9b340,"o refactor StatsReceiver so that we can have external stats receivers
o introduce a generic stats observation facility
o get rid of OstrichSample"
mariusae,2010-11-13 00:43:54,https://api.github.com/repos/twitter/finagle/git/commits/1d1fd1987cc4afe919c9f01a72bcc623512d08b3,1d1fd1987cc4afe919c9f01a72bcc623512d08b3,test FailureAccruingLoadedBroker
mariusae,2010-11-13 00:14:14,https://api.github.com/repos/twitter/finagle/git/commits/25658402512d6d655cc55fd4329b72ef4d8515ae,25658402512d6d655cc55fd4329b72ef4d8515ae,makeBroker into a toplevel method.
mariusae,2010-11-13 00:12:09,https://api.github.com/repos/twitter/finagle/git/commits/e49ed4489f55f1e82bcf1cf1257c89d6491ba427,e49ed4489f55f1e82bcf1cf1257c89d6491ba427,"refactor builder to be simpler, without all the variable dependencies
everywhere.  mostly into methods & using composition to reduce error
potential."
mariusae,2010-11-12 22:20:00,https://api.github.com/repos/twitter/finagle/git/commits/8271667b47c94f24c56aa696bd6e7837e109301f,8271667b47c94f24c56aa696bd6e7837e109301f,ignore cancelled futures in LoadedBroker
mariusae,2010-11-12 22:18:48,https://api.github.com/repos/twitter/finagle/git/commits/d32bfd83d7cdbd57db550f71677826cf64624cbd,d32bfd83d7cdbd57db550f71677826cf64624cbd,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-11-12 22:18:30,https://api.github.com/repos/twitter/finagle/git/commits/bac13683a7b265b3e0be728fe2654aaf047b727f,bac13683a7b265b3e0be728fe2654aaf047b727f,"  * rearrange Samples a bit as to allow reference to concrete samples
  types in repositories.
  * implement a failure accruing broker (multiplying weight with success
  rate).
  * builder support for exporting node loads to ostrich."
mariusae,2010-11-12 01:19:00,https://api.github.com/repos/twitter/finagle/git/commits/28444a962748ce9044afea104c889a83018d128d,28444a962748ce9044afea104c889a83018d128d,"- test timeout broker
- organize exceptions
- fix nonlocal return exception"
mariusae,2010-11-12 00:05:36,https://api.github.com/repos/twitter/finagle/git/commits/a2e6059986834e3c765b7bf50a70e915ebaaae7d,a2e6059986834e3c765b7bf50a70e915ebaaae7d,"arrange imports, etc."
mariusae,2010-11-11 23:45:30,https://api.github.com/repos/twitter/finagle/git/commits/f66c6482faffd98c4acf4a668b5aea09d9f84f50,f66c6482faffd98c4acf4a668b5aea09d9f84f50,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-11-11 23:45:11,https://api.github.com/repos/twitter/finagle/git/commits/213c32b802a09852890abb7e9090aeb6eddd17b8,213c32b802a09852890abb7e9090aeb6eddd17b8,add connection timeouts & reasonable TCP defaults to the builder.
mariusae,2010-11-11 23:31:05,https://api.github.com/repos/twitter/finagle/git/commits/3622e5ce9136555ef7f50c3e4ca7f9c7879a8c69,3622e5ce9136555ef7f50c3e4ca7f9c7879a8c69,thread connection limiting through the builder.
mariusae,2010-11-11 23:22:43,https://api.github.com/repos/twitter/finagle/git/commits/93dfbe2c33225e036dfb6783701c64e1cd93f53b,93dfbe2c33225e036dfb6783701c64e1cd93f53b,connection limiting channel pool.
mariusae,2010-11-11 18:18:53,https://api.github.com/repos/twitter/finagle/git/commits/4092f216b6db7959e72c434b451ec8058d0017f6,4092f216b6db7959e72c434b451ec8058d0017f6,fix.
mariusae,2010-11-11 18:16:21,https://api.github.com/repos/twitter/finagle/git/commits/76648e32fabd9cecb220b9da229b24828ea200aa,76648e32fabd9cecb220b9da229b24828ea200aa,more java niceness.
mariusae,2010-11-11 07:02:48,https://api.github.com/repos/twitter/finagle/git/commits/42eef7b3d7e8b1945ae21218acfa796b506a3fa8,42eef7b3d7e8b1945ae21218acfa796b506a3fa8,fully working java example.
mariusae,2010-11-11 06:39:00,https://api.github.com/repos/twitter/finagle/git/commits/b1970c975a20542bf4e69e95c2f37bf17e66f657,b1970c975a20542bf4e69e95c2f37bf17e66f657,use names in test client.
mariusae,2010-11-11 06:35:54,https://api.github.com/repos/twitter/finagle/git/commits/72833f41b672551835fd098c0e86e5e5a8263fb6,72833f41b672551835fd098c0e86e5e5a8263fb6,"support names, stats prefixes"
mariusae,2010-11-11 06:35:03,https://api.github.com/repos/twitter/finagle/git/commits/ad68cf5b0c5d8dbc00ff43be69535c7d650faa05,ad68cf5b0c5d8dbc00ff43be69535c7d650faa05,update tests with Time.withTimeFrozen..
mariusae,2010-11-11 03:53:21,https://api.github.com/repos/twitter/finagle/git/commits/6c3d0d1e822df395404898bcac6ff3ff9a662d3e,6c3d0d1e822df395404898bcac6ff3ff9a662d3e,fix timeouts.
mariusae,2010-11-11 03:44:54,https://api.github.com/repos/twitter/finagle/git/commits/0c6573693dc4cc05d4152ad752181130fd6f449c,0c6573693dc4cc05d4152ad752181130fd6f449c,builder for sample granularity & window.  full example w/ ostrich integration.
mariusae,2010-11-11 03:12:50,https://api.github.com/repos/twitter/finagle/git/commits/43add272e5a7df767384667e7a95488da360f1f9,43add272e5a7df767384667e7a95488da360f1f9,sample repository.
mariusae,2010-11-11 02:00:16,https://api.github.com/repos/twitter/finagle/git/commits/771c792c0b21848607124851a5fb818b9e2fec60,771c792c0b21848607124851a5fb818b9e2fec60,use a SampleRepository instead of rooted trees.
mariusae,2010-11-11 01:27:14,https://api.github.com/repos/twitter/finagle/git/commits/555633f1360e1b22043ca096d98e2086d8920ff8,555633f1360e1b22043ca096d98e2086d8920ff8,.
mariusae,2010-11-10 19:29:48,https://api.github.com/repos/twitter/finagle/git/commits/fcb414ef782707f6854aca225f9ad3c7468775b7,fcb414ef782707f6854aca225f9ad3c7468775b7,builder.
mariusae,2010-11-10 18:20:59,https://api.github.com/repos/twitter/finagle/git/commits/066c8dfe3a9e2b7b4211c953205f0168fb22b00d,066c8dfe3a9e2b7b4211c953205f0168fb22b00d,don't report counts.
mariusae,2010-11-10 02:56:04,https://api.github.com/repos/twitter/finagle/git/commits/12ab6ea1543ff4f1ffe80113980e223aa82daf5e,12ab6ea1543ff4f1ffe80113980e223aa82daf5e,"clean up LoadedBroker stats collection, use ConcurrentHashMap, prettify."
mariusae,2010-11-10 02:50:29,https://api.github.com/repos/twitter/finagle/git/commits/0b3507521dc27dd7e6d37f1cf4ca8b4ab9d5e69c,0b3507521dc27dd7e6d37f1cf4ca8b4ab9d5e69c,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-11-10 02:49:48,https://api.github.com/repos/twitter/finagle/git/commits/021b38e193c23f49b593babf4af747691bb270fc,021b38e193c23f49b593babf4af747691bb270fc,simplify tree merging code.
mariusae,2010-11-10 02:43:01,https://api.github.com/repos/twitter/finagle/git/commits/7fde5565789992bdee7755a1138862a7cd58dd1d,7fde5565789992bdee7755a1138862a7cd58dd1d,"introduce BrokerClientBootstrap & BootstrapAdapter:

  - this deals with the case where exceptions, etc. are thrown while
    there is no broker dealing with the channel (this can happen for
    example on connection faillure).
  - also this gives us a central place to keep per-*connection* health
    stats.

clean up the stats a bit, too."
mariusae,2010-11-08 23:32:53,https://api.github.com/repos/twitter/finagle/git/commits/ef9c27063968dd558eafef61ab6505c5a4b4dcb2,ef9c27063968dd558eafef61ab6505c5a4b4dcb2,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-11-08 23:32:28,https://api.github.com/repos/twitter/finagle/git/commits/203883c82ca718f6340dd04293c2de8b1c5d0257,203883c82ca718f6340dd04293c2de8b1c5d0257,"fix connecting channel handler (give back to pool).  stats fixes.
test harnessses."
mariusae,2010-11-08 16:57:05,https://api.github.com/repos/twitter/finagle/git/commits/19d7784c3c8e74bb58184d91499983c1a1b970a2,19d7784c3c8e74bb58184d91499983c1a1b970a2,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-11-05 21:29:41,https://api.github.com/repos/twitter/finagle/git/commits/805581a8505c6e708ee2436d06197ad85cdc8f30,805581a8505c6e708ee2436d06197ad85cdc8f30,two interface tests/clients (scala/java)
mariusae,2010-11-05 21:29:29,https://api.github.com/repos/twitter/finagle/git/commits/33809816c2908b62586e7bdaba9462cbc5577a3f,33809816c2908b62586e7bdaba9462cbc5577a3f,TODO.
mariusae,2010-11-05 21:29:24,https://api.github.com/repos/twitter/finagle/git/commits/c3d3d86d0be60cfc76f2a3496048e88f81fa2bcd,c3d3d86d0be60cfc76f2a3496048e88f81fa2bcd,fix order race in the connecting channel broker.
mariusae,2010-11-05 18:21:12,https://api.github.com/repos/twitter/finagle/git/commits/61f55ae1437bba92f78e0204a680d08ab860698e,61f55ae1437bba92f78e0204a680d08ab860698e,make nice strings & print them.
mariusae,2010-11-05 17:51:54,https://api.github.com/repos/twitter/finagle/git/commits/e033da9f1f98ee449f7dfb22bef205f494b2cf8c,e033da9f1f98ee449f7dfb22bef205f494b2cf8c,stats changes: (1) rename statistic->sample; (2) construct (aggregatable) sample trees
mariusae,2010-11-03 22:59:12,https://api.github.com/repos/twitter/finagle/git/commits/6b2a3e166b475f3ea0ab4eb17f7f7514e8d6f275,6b2a3e166b475f3ea0ab4eb17f7f7514e8d6f275,serialized.
mariusae,2010-11-03 18:55:07,https://api.github.com/repos/twitter/finagle/git/commits/4495fadfe6a22aa6302e9bd7c1aa2b22a078ac80,4495fadfe6a22aa6302e9bd7c1aa2b22a078ac80,"take into account latency, failure."
mariusae,2010-11-03 18:37:28,https://api.github.com/repos/twitter/finagle/git/commits/0ee7161799122e3e999e2efd0b56e3abcf497be8,0ee7161799122e3e999e2efd0b56e3abcf497be8,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-11-03 18:37:18,https://api.github.com/repos/twitter/finagle/git/commits/cfa9d65ad1b309e8b534c036a5b02a991518c78c,cfa9d65ad1b309e8b534c036a5b02a991518c78c,"TimeoutBroker, other changes."
mariusae,2010-11-02 23:08:42,https://api.github.com/repos/twitter/finagle/git/commits/265f2ee75118d565b43f58b9688593b0d41a8bae,265f2ee75118d565b43f58b9688593b0d41a8bae,windowed statistics.
mariusae,2010-11-02 20:57:11,https://api.github.com/repos/twitter/finagle/git/commits/b07ab1d117dc95b7f5fa571e3ffea6440535d6bc,b07ab1d117dc95b7f5fa571e3ffea6440535d6bc,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-11-02 20:57:00,https://api.github.com/repos/twitter/finagle/git/commits/51ce99bd1e14f75c0dd917dfc3a35fd9a6592d21,51ce99bd1e14f75c0dd917dfc3a35fd9a6592d21,checkpoint for time windowed stats.
mariusae,2010-11-01 21:09:22,https://api.github.com/repos/twitter/finagle/git/commits/966394ba2d4e966357c1bbea06b97002b56633e0,966394ba2d4e966357c1bbea06b97002b56633e0,counting brokers.
mariusae,2010-10-26 17:07:11,https://api.github.com/repos/twitter/finagle/git/commits/fd39128035d7410594e4d14b89c96545d09c74e9,fd39128035d7410594e4d14b89c96545d09c74e9,rm UpcomingMessageEvent.scala
mariusae,2010-10-26 08:00:53,https://api.github.com/repos/twitter/finagle/git/commits/4cdbb4ff55800b327c0083c7200ce497afbd9788,4cdbb4ff55800b327c0083c7200ce497afbd9788,ExponentialBackoffRetryingBroker
mariusae,2010-10-26 07:40:14,https://api.github.com/repos/twitter/finagle/git/commits/a8d461d0a4c7e0d40835823335654872a0e054e0,a8d461d0a4c7e0d40835823335654872a0e054e0,"pass in auth header, some cleanup & robustness in the streaming codec."
mariusae,2010-10-26 07:17:22,https://api.github.com/repos/twitter/finagle/git/commits/17fa9f8b88df0582ccd8903317b73b8333e5869f,17fa9f8b88df0582ccd8903317b73b8333e5869f,use twttr.com repo instead of lag.net
mariusae,2010-10-26 07:07:24,https://api.github.com/repos/twitter/finagle/git/commits/cbb7229ec3fb7b8fcc38244c5fd708f9bf68788d,cbb7229ec3fb7b8fcc38244c5fd708f9bf68788d,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-10-26 07:07:05,https://api.github.com/repos/twitter/finagle/git/commits/a7c2384c01a5d3252fcdfd83a64e33b00e4d604f,a7c2384c01a5d3252fcdfd83a64e33b00e4d604f,handle the rest of the lifecycle.
mariusae,2010-10-26 06:31:21,https://api.github.com/repos/twitter/finagle/git/commits/f929ee83f3977608769f288559923a73da722919,f929ee83f3977608769f288559923a73da722919,rejigger streaming messages.
mariusae,2010-10-25 23:31:57,https://api.github.com/repos/twitter/finagle/git/commits/8894e2f6a7ecb5df5d51e9f4bbb34b7d3e80fbe9,8894e2f6a7ecb5df5d51e9f4bbb34b7d3e80fbe9,"streaming requests, twitter streaming API support."
mariusae,2010-10-25 18:58:03,https://api.github.com/repos/twitter/finagle/git/commits/771a3fcbc2746b77338716b247cfcdcb4a448239,771a3fcbc2746b77338716b247cfcdcb4a448239,"get rid of state machine -- use a single (serialized) variable
instead."
mariusae,2010-10-25 18:52:32,https://api.github.com/repos/twitter/finagle/git/commits/1873ba873f9388daa078d39d462675ed17f8ca1a,1873ba873f9388daa078d39d462675ed17f8ca1a,superfluous comments.
mariusae,2010-10-23 00:38:07,https://api.github.com/repos/twitter/finagle/git/commits/33fa0983c64d245e034dcc3dd8e4f4e850020b55,33fa0983c64d245e034dcc3dd8e4f4e850020b55,introduce serialization of channel events.
mariusae,2010-10-22 01:04:51,https://api.github.com/repos/twitter/finagle/git/commits/d6401c9fdd7237dab26154df759a231f6655de62,d6401c9fdd7237dab26154df759a231f6655de62,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-10-22 01:04:44,https://api.github.com/repos/twitter/finagle/git/commits/ae08a6a2eaf888e0d483ee351ac4794ed4ddf633,ae08a6a2eaf888e0d483ee351ac4794ed4ddf633,"introduce a bunch of unittests, fix channel closing."
mariusae,2010-10-21 23:38:18,https://api.github.com/repos/twitter/finagle/git/commits/a0e8af4b0b15675a894e13c8bafad92e3b42bd69,a0e8af4b0b15675a894e13c8bafad92e3b42bd69,"refactoring to make cancellation more obvious, and export an explicit
state in the ChannelFuture"
mariusae,2010-10-21 22:23:32,https://api.github.com/repos/twitter/finagle/git/commits/e608147f78c9e2c72a255b889b2cf540043869c9,e608147f78c9e2c72a255b889b2cf540043869c9,fix warnings in tests.
mariusae,2010-10-21 22:19:40,https://api.github.com/repos/twitter/finagle/git/commits/b15b860f4a033ac84e0d390e2fc10cce80e9817e,b15b860f4a033ac84e0d390e2fc10cce80e9817e,"Refactor of ChannelBroker to have a cleaner interface between the
BrokeredChannel and the Broker (dispatch)."
mariusae,2010-10-21 06:37:01,https://api.github.com/repos/twitter/finagle/git/commits/1ab3a6d39852c598066b72e80a7f7c3506dbf80b,1ab3a6d39852c598066b72e80a7f7c3506dbf80b,Some further Future utilities.
mariusae,2010-10-21 05:54:32,https://api.github.com/repos/twitter/finagle/git/commits/cb41df03baef5171f303c41be7bbf014a2836bf7,cb41df03baef5171f303c41be7bbf014a2836bf7,ThriftCodec tests.
mariusae,2010-10-21 03:35:41,https://api.github.com/repos/twitter/finagle/git/commits/d3757e08ac64a8a3793cf9dbee1b2a58ebf27d13,d3757e08ac64a8a3793cf9dbee1b2a58ebf27d13,"sunk channel-- for recording upstream/downstream events & manipulating
a channel without needing to instantiate the whole deal."
mariusae,2010-10-21 03:35:14,https://api.github.com/repos/twitter/finagle/git/commits/d3352395512772f1534485be7efcccef6cf43dca,d3352395512772f1534485be7efcccef6cf43dca,fix broken compile.
mariusae,2010-10-21 00:28:21,https://api.github.com/repos/twitter/finagle/git/commits/d4e1b6d712d361cd469599e848c7407d0c2a88f0,d4e1b6d712d361cd469599e848c7407d0c2a88f0,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-10-21 00:25:29,https://api.github.com/repos/twitter/finagle/git/commits/0021acd44c81068d4dc264ba35bd7e79122750fc,0021acd44c81068d4dc264ba35bd7e79122750fc,"test for correct interaction with reference thrift client & server
implementations."
mariusae,2010-10-20 22:38:57,https://api.github.com/repos/twitter/finagle/git/commits/482a8d0d6a07479babbfcff202d1c7ff90021757,482a8d0d6a07479babbfcff202d1c7ff90021757,project name => finagle.
mariusae,2010-10-20 22:37:48,https://api.github.com/repos/twitter/finagle/git/commits/8fe71f0130a938ccfd8492d5c04911f656deb799,8fe71f0130a938ccfd8492d5c04911f656deb799,"inline thrift generated java stubs, & go back to DefaultProject."
mariusae,2010-10-20 21:16:20,https://api.github.com/repos/twitter/finagle/git/commits/8a94c5f3e6fdc24ab724157bd1ea2e72c13b0f19,8a94c5f3e6fdc24ab724157bd1ea2e72c13b0f19,backport thrift codec to thrift version 0.2.0.
mariusae,2010-10-20 07:30:13,https://api.github.com/repos/twitter/finagle/git/commits/70b777f41ec9c7bd3c22fa216d1af82c96108fac,70b777f41ec9c7bd3c22fa216d1af82c96108fac,scala-y update.
mariusae,2010-10-20 07:22:23,https://api.github.com/repos/twitter/finagle/git/commits/ebf26613e60f2e4bb9149ec1c073d714d92861a3,ebf26613e60f2e4bb9149ec1c073d714d92861a3,"forward-port Wilhelm's thrift processor & do an end-to-end test with
local channels for the thrift layer."
mariusae,2010-10-20 06:03:25,https://api.github.com/repos/twitter/finagle/git/commits/2c4c011d73a7b2db415c84fa5bdf4a39084b4f17,2c4c011d73a7b2db415c84fa5bdf4a39084b4f17,rename ThriftFramer -> ThriftFrameCodec
mariusae,2010-10-20 06:01:57,https://api.github.com/repos/twitter/finagle/git/commits/fcd986a74d698c555414bed601e1a8e7e7cb2b7b,fcd986a74d698c555414bed601e1a8e7e7cb2b7b,"implicit conversions between ChannelBuffers and TTransports,
refinements in error handling for ThriftCodec."
mariusae,2010-10-20 01:25:49,https://api.github.com/repos/twitter/finagle/git/commits/d7ec8f2e2575ab293b27546f294bc27f81a67a57,d7ec8f2e2575ab293b27546f294bc27f81a67a57,Merge branch 'master' of github.com:twitter/finagle
mariusae,2010-10-20 01:25:39,https://api.github.com/repos/twitter/finagle/git/commits/5445d794feed1eae555a499bd460092a695282a5,5445d794feed1eae555a499bd460092a695282a5,"initial asynchronous thrift client support:

  - thrift {de,}framer from @wil
  - channelbuffer transport wrappers
  - thrift codec via writing ``ThriftCall'' objects on the channel
  - ""silly.thrift"" service for testing (to be removed // delegated to testing)"
mariusae,2010-10-19 22:49:40,https://api.github.com/repos/twitter/finagle/git/commits/8ec9a3a44379ace6dd9b67e40cd6edabbefaaaef,8ec9a3a44379ace6dd9b67e40cd6edabbefaaaef,add .ensime to .gitignore
mariusae,2010-10-19 22:49:05,https://api.github.com/repos/twitter/finagle/git/commits/8440258c19eaed2cc325fe5bdf377ec7213e2ad7,8440258c19eaed2cc325fe5bdf377ec7213e2ad7,restore glorious UTF8 character stolen by Nick's IntelliJ
