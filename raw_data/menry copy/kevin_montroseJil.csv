Jil,"Fast .NET JSON (De)Serializer, Built On Sigil"
username,timestamp,url,sha,message
kevin-montrose,2019-03-14 00:59:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/49e8a84ba9719e94de58d3d75ab8bb6eddf4183b,49e8a84ba9719e94de58d3d75ab8bb6eddf4183b,2.17.0
kevin-montrose,2019-03-14 00:44:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e6524adf5936438aa80f345770db0a2a0465b5a6,e6524adf5936438aa80f345770db0a2a0465b5a6,"tweak docs around case sensitivity, fixing #321"
kevin-montrose,2019-03-14 00:40:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e891b234bb1685d2372dd5923a1ce6ea694fe5b7,e891b234bb1685d2372dd5923a1ce6ea694fe5b7,fix for #320
kevin-montrose,2019-03-14 00:33:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/66861f52a272bff7f21e87bccceac26a40c87208,66861f52a272bff7f21e87bccceac26a40c87208,add a test fr #320
kevin-montrose,2019-03-14 00:24:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/759c252102d2de7cb28f095e20d9954de4e52b64,759c252102d2de7cb28f095e20d9954de4e52b64,fix #316
kevin-montrose,2019-03-14 00:21:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eeeb0c0acd51beac9466b9970b16277e0ae15770,eeeb0c0acd51beac9466b9970b16277e0ae15770,test for #316
kevin-montrose,2019-03-13 20:32:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d787127deb976cdc86fcfc85080367fc1099b442,d787127deb976cdc86fcfc85080367fc1099b442,"fix #253 - this use of ICollection isn't quite supported, but it shouldn't explode like that"
kevin-montrose,2019-03-13 20:01:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ccbeb7b13cb74b71ff20ab93ebaecd9bd9b1c055,ccbeb7b13cb74b71ff20ab93ebaecd9bd9b1c055,"'fix' #248 - the fix is actually ambiguous because the spec is dumb, but it shouldn't explode (sigh)"
kevin-montrose,2019-03-13 19:36:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8a4005db0df3e0379c066b1807a675cf179c3455,8a4005db0df3e0379c066b1807a675cf179c3455,fixing bugs in child type detection and method-based nullable reading
kevin-montrose,2019-03-13 19:25:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/91b13f36d41cba1ba470384bed2f31331149153e,91b13f36d41cba1ba470384bed2f31331149153e,fix the degenerate flat case by calling out to a method in the (relatively) heavy bool & nullable cases once a method is too big
kevin-montrose,2019-03-13 18:42:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/37962307b9dd00353562e86db5460abdc7d7038a,37962307b9dd00353562e86db5460abdc7d7038a,"fix degenerate NESTING case, flat case is still busted"
kevin-montrose,2019-03-13 18:22:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4462f34f88ed1a6222404cc6755263b935f9f765,4462f34f88ed1a6222404cc6755263b935f9f765,failing tests for degenerately 'large' deserializers
kevin-montrose,2019-03-13 15:23:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1a99d8d8d40784166c5800802bd1a720c0aac35a,1a99d8d8d40784166c5800802bd1a720c0aac35a,explicitly name all labels and locals to work around a slow down in Sigil that occurs when methods are very large
kevin-montrose,2019-03-13 14:40:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/33515435f604c617590fac57dc2322d0c70db833,33515435f604c617590fac57dc2322d0c70db833,"fix a locking bug that could lead to corruption and infinite loops when deserializing strings in certain, indirect, cases"
kevin-montrose,2018-06-08 16:21:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b022e8442463c9006b861df6bdf174eb679931af,b022e8442463c9006b861df6bdf174eb679931af,2.16.0
kevin-montrose,2018-06-08 16:13:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1a8669f13c7b19e92991452e0222304180e563b3,1a8669f13c7b19e92991452e0222304180e563b3,bump up version
NickCraver,2018-06-07 16:57:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ed398602ee3c8c02a36be22057cbdd6586222112,ed398602ee3c8c02a36be22057cbdd6586222112,"Merge pull request #1 from kevin-montrose/master

Update from base"
kevin-montrose,2017-08-23 20:48:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f08b5b3c8b9e9ff152277f5dfab42ef7ac22e768,f08b5b3c8b9e9ff152277f5dfab42ef7ac22e768,2.15.4
kevin-montrose,2017-08-23 20:31:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/abacb25e63ad5a02ecf54fb84bb52624e1e57fd8,abacb25e63ad5a02ecf54fb84bb52624e1e57fd8,Fixes #257
kevin-montrose,2017-08-23 20:05:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c865af08aae48f86c1229a9b9bb2fd8acdbcbc74,c865af08aae48f86c1229a9b9bb2fd8acdbcbc74,"fixes #275, cleans up some related code"
kevin-montrose,2017-08-23 19:48:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/22843a7455bf5f8f022df79efe882fa362535c2d,22843a7455bf5f8f022df79efe882fa362535c2d,failing tests for #257 & #275
kevin-montrose,2017-08-17 18:03:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/03a29c1adce5f8f04e9a27923997fadc07be1736,03a29c1adce5f8f04e9a27923997fadc07be1736,2.15.3
kevin-montrose,2017-08-17 17:55:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1306accc94a4cc259f48ab920bc02991a043a2eb,1306accc94a4cc259f48ab920bc02991a043a2eb,fixes #272
kevin-montrose,2017-08-17 17:48:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6b48d233a8e5f429b77a8a3b947b5b5913841b96,6b48d233a8e5f429b77a8a3b947b5b5913841b96,failing test for #272
kevin-montrose,2017-07-20 14:53:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ca378c4e1f661ea48fe0f472dc75d64785f5a3b8,ca378c4e1f661ea48fe0f472dc75d64785f5a3b8,2.15.2
kevin-montrose,2017-07-20 14:41:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f28904203bf7da129ea5f37f9f9d2bb789400a45,f28904203bf7da129ea5f37f9f9d2bb789400a45,fix for #270
kevin-montrose,2017-07-20 14:35:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2298d4a4c20703d179a3e20a1e96ee7ce43152a9,2298d4a4c20703d179a3e20a1e96ee7ce43152a9,add tests for issue #270
kevin-montrose,2017-06-27 20:50:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d008085af68ca49ee24a881776046fe6deb3efa2,d008085af68ca49ee24a881776046fe6deb3efa2,2.15.1
kevin-montrose,2017-06-27 20:42:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/86160f5059b8098ee054b0899f97a0e5f8f0892e,86160f5059b8098ee054b0899f97a0e5f8f0892e,Merge branch 'issue258' of https://github.com/benjamin-hodgson/Jil into pr-259
kevin-montrose,2017-06-27 20:39:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/40a7da1767f591d1af6b36132ce12eef87f73715,40a7da1767f591d1af6b36132ce12eef87f73715,upgrade
benjamin-hodgson,2017-03-21 22:51:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cdbe83f7bde6b92d361962aa7fcc815559ebe0f0,cdbe83f7bde6b92d361962aa7fcc815559ebe0f0,"Fix issue 258. the get method of a property in a struct expects a pointer to the struct, not the struct itself"
kevin-montrose,2017-01-09 16:07:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a30c63087987c221862219695d667004d4f12184,a30c63087987c221862219695d667004d4f12184,add missing Jil.StrongName package
kevin-montrose,2017-01-09 16:04:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/90e37e990c793ac1286e26daee4acecebbcf9fbc,90e37e990c793ac1286e26daee4acecebbcf9fbc,2.15.0
kevin-montrose,2017-01-09 15:48:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d944503d28729b612c2e9156a91827b50f4209a3,d944503d28729b612c2e9156a91827b50f4209a3,2.15.0-pre
kevin-montrose,2017-01-09 15:32:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7ae9a8d06e9eb11374a5c31f0b1cfadc3f267227,7ae9a8d06e9eb11374a5c31f0b1cfadc3f267227,"constant test disabled in debug builds, since unoptimized code is harder to reason about in this case"
kevin-montrose,2017-01-09 15:21:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/032b793a85c3ada86b4e7b01694002beb11178d2,032b793a85c3ada86b4e7b01694002beb11178d2,update Sigil to 4.7.0
kevin-montrose,2017-01-01 19:16:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b2637bbb72a72575fe8e82ba3e30906b27e47eb7,b2637bbb72a72575fe8e82ba3e30906b27e47eb7,make exhaustive tests work in netcore builds
kevin-montrose,2016-11-28 03:14:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f90ea49f3df3a6dc6222a772e95c5117680e4e69,f90ea49f3df3a6dc6222a772e95c5117680e4e69,"Get Jil working on dotnetcore.  Everything ""works,"" all tests pass, but there are a few performance regressions.  Inspecting members for better ordering isn't possible, nor is detecting constant properties.  Minor, but non-trivial.  Hopefully netstandard 2.0 will restore the necessary reflection APIs."
kevin-montrose,2016-11-28 00:32:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/94e64531e0847e143a9fbe9cf48e01a096564365,94e64531e0847e143a9fbe9cf48e01a096564365,"fixes #229; ISO8601 separator tracking resets between each section of a datetime(offset); aside, kill me"
kevin-montrose,2016-11-28 00:13:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b4e3cda2b28a5723d6dd0aa4c354c5f9d0bfe5f9,b4e3cda2b28a5723d6dd0aa4c354c5f9d0bfe5f9,add test for #229
kevin-montrose,2016-11-28 00:00:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9a6c723d4a7698c981d66330c5d3da739b8d51db,9a6c723d4a7698c981d66330c5d3da739b8d51db,"fixes #230; in cases where a string may be interpretted as both a datetime and a raw string, prefer the string form"
kevin-montrose,2016-11-27 23:41:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7c715c159d82c122e3bdfb73b88e84683ae78ce9,7c715c159d82c122e3bdfb73b88e84683ae78ce9,add test for #230
kevin-montrose,2016-11-27 23:32:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e0b3b7014da43ee528d1f2fdf874185b19fe2fd4,e0b3b7014da43ee528d1f2fdf874185b19fe2fd4,fixes #176
kevin-montrose,2016-11-27 23:13:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e0e2a390b1ece6f5663883537bbbd5f7cc6603b5,e0e2a390b1ece6f5663883537bbbd5f7cc6603b5,tests for #176
kevin-montrose,2016-11-27 23:00:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9fe7804ff2b809653fa1bbf6889800f7719b4ee9,9fe7804ff2b809653fa1bbf6889800f7719b4ee9,"fixes #224; JSON.Net's dynamic Dictionary logic is a little weird, casts to IDictionary and IDictionary<string, object> fail even though they 'make sense' - detect this case, and behave accordingly"
kevin-montrose,2016-11-27 22:44:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/39129a9f5bdd133170ede56b4de94424285ab4ce,39129a9f5bdd133170ede56b4de94424285ab4ce,"failing test for #224, looks like Dictionary detection is failing?"
kevin-montrose,2016-08-07 22:17:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0631e89ca667bccea353f1e7394663bedf91d9f8,0631e89ca667bccea353f1e7394663bedf91d9f8,2.14.5
kevin-montrose,2016-08-07 22:12:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8f0fb1362389c32b2de47e5b3b97124d8617a018,8f0fb1362389c32b2de47e5b3b97124d8617a018,2.14.4
kevin-montrose,2016-08-07 21:45:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bd2c8229f21d5399fdf0dfe41d8087afb172af08,bd2c8229f21d5399fdf0dfe41d8087afb172af08,fix for serializing weird dictionaries
kevin-montrose,2016-08-07 21:40:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0ca917e4e739724332822fb5088b580a370cfa48,0ca917e4e739724332822fb5088b580a370cfa48,failing test for weird dictionary
kevin-montrose,2016-08-07 21:34:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e10d7a36fa2e507f4c885ee76b78c592427902fd,e10d7a36fa2e507f4c885ee76b78c592427902fd,tweak test
kevin-montrose,2016-08-07 21:32:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/171b138baed5e834fd3af9032655a9c1d32c6129,171b138baed5e834fd3af9032655a9c1d32c6129,fixes #231
kevin-montrose,2016-08-07 21:17:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/287479d72731ddb334663a26832a0ff18365dee3,287479d72731ddb334663a26832a0ff18365dee3,test for #231
kevin-montrose,2016-08-07 21:11:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d7c6c2c1b2905e4542bd80fa61d16b0b3cad943,0d7c6c2c1b2905e4542bd80fa61d16b0b3cad943,test for #225; fixed #225 as part of other issue
kevin-montrose,2016-08-07 21:08:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3d203ebe8d1459b05b3e12e9ccd96114894d8df0,3d203ebe8d1459b05b3e12e9ccd96114894d8df0,fix for #227
kevin-montrose,2016-08-07 20:57:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3d4cf3b8159db4e238de2593cbf1c60961be5db1,3d4cf3b8159db4e238de2593cbf1c60961be5db1,simpler repo
kevin-montrose,2016-08-07 20:42:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eea723ff2e8ffc53bb5982d8ffd8f3f6d3956510,eea723ff2e8ffc53bb5982d8ffd8f3f6d3956510,failing test for #227
kevin-montrose,2016-08-07 20:38:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0672c4dcc86c6c60f37b6cbbf0cc998dc6611393,0672c4dcc86c6c60f37b6cbbf0cc998dc6611393,fix for #235
kevin-montrose,2016-08-07 20:33:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/769ef0692077732dc9d30800c2a67f587f5cbb20,769ef0692077732dc9d30800c2a67f587f5cbb20,failing test for #235
kevin-montrose,2016-08-07 20:30:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/280f1c35a8558f622993d149ee8d1f199afbaa33,280f1c35a8558f622993d149ee8d1f199afbaa33,fix for #238
kevin-montrose,2016-08-07 20:13:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7d932622d8b0495d54491c30a67426b87a470f7d,7d932622d8b0495d54491c30a67426b87a470f7d,failing test for #238
kevin-montrose,2016-05-05 17:25:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/75ffc895d0483fccb60a45d2bdcbaf4c78604496,75ffc895d0483fccb60a45d2bdcbaf4c78604496,2.14.3
kevin-montrose,2016-05-05 17:22:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c5c555b6fe86dced4b3314e3860b644f8ff9664b,c5c555b6fe86dced4b3314e3860b644f8ff9664b,update to Sigil 4.6.1
kevin-montrose,2016-05-04 15:18:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/28e180f331d85ec9ef78c74aac5574c1c0cbf886,28e180f331d85ec9ef78c74aac5574c1c0cbf886,2.14.2
kevin-montrose,2016-05-04 15:05:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9e7409bcfd5775727e5d4de13e2785ce945bf14b,9e7409bcfd5775727e5d4de13e2785ce945bf14b,get Jil-Message into all Jil-sourced exceptions
kevin-montrose,2016-05-04 14:58:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b236ff8a95dd6e866618fca8a66914db74b44e47,b236ff8a95dd6e866618fca8a66914db74b44e47,rework a bit of stashing messages into exception data
kevin-montrose,2016-04-13 14:09:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/239842325bacde7870acfc6e304872fd1b6e02ec,239842325bacde7870acfc6e304872fd1b6e02ec,2.14.1
kevin-montrose,2016-04-13 14:01:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/39ac9d8185fd9dbe1a4bbedb3e002d569d3d8cec,39ac9d8185fd9dbe1a4bbedb3e002d569d3d8cec,typos
kevin-montrose,2016-04-12 21:24:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4b2abb04800e96aa42456b49d87ccdfc59afe1cb,4b2abb04800e96aa42456b49d87ccdfc59afe1cb,fix bugs and add test for proper behavior around empty enums
kevin-montrose,2016-03-31 19:12:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/02d2f73bb15fa746204be7f00d6632d4d5c8b412,02d2f73bb15fa746204be7f00d6632d4d5c8b412,2.14.0
kevin-montrose,2016-03-31 18:57:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e11a47413a53b481fa46f3f14100d1fae1984b5b,e11a47413a53b481fa46f3f14100d1fae1984b5b,update README.md
kevin-montrose,2016-03-31 18:56:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/48ead40c4004e146073aa430a05eb6a2e96efad9,48ead40c4004e146073aa430a05eb6a2e96efad9,style tweak
bretcope,2016-03-27 05:18:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6ff05add57237a4233ed101fa271b74067f951bc,6ff05add57237a4233ed101fa271b74067f951bc,Use single-line if-statements to match Jil's coding style
bretcope,2016-03-27 05:14:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/683845778288ddc2d86abf07747790e986cc7d96,683845778288ddc2d86abf07747790e986cc7d96,Add ISet deserialization tests
bretcope,2016-03-27 00:23:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/042bd177645d4ec476e878c884fb517ec1cd678c,042bd177645d4ec476e878c884fb517ec1cd678c,Implement Set deserialization
kevin-montrose,2016-03-10 21:50:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/afc30d08130f6c154844d31e2433fd3052eca586,afc30d08130f6c154844d31e2433fd3052eca586,fix #203
kevin-montrose,2016-03-10 20:51:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/50ea0ba64281c829fdfbfc2f944cfa0a7232711a,50ea0ba64281c829fdfbfc2f944cfa0a7232711a,failing test for #203
kevin-montrose,2016-03-10 18:39:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/31e76dd331ee2ca5e7779e849b0ab05ba0d9f753,31e76dd331ee2ca5e7779e849b0ab05ba0d9f753,Merge branch 'JoshjjeEnumFlags' of https://github.com/joshjje/Jil into pr-206
kevin-montrose,2016-03-10 18:39:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/355a10b8a4476612a29de0ba43c01319a7b66bbf,355a10b8a4476612a29de0ba43c01319a7b66bbf,add failing test for #210
joshjje,2016-02-27 22:27:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2a2d5a904ef746829eec8d7231d8df4728814641,2a2d5a904ef746829eec8d7231d8df4728814641,"Changed passing of (int)0 to LoadConstantOfType to Convert.ChangeType(0, underlyingType) instead of using the dynamic approach to solve the InvalidCastException issue."
joshjje,2016-02-27 21:55:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c962efa8883e27c3d8226af0758ac5d87bcb2be6,c962efa8883e27c3d8226af0758ac5d87bcb2be6,Fixed InvalidCastException issue with deserializing non int Flags Enums in EnumLookup.LoadConstantOfType.  Added a couple unit tests showing the issue and verifying the fix.
kevin-montrose,2016-02-05 20:56:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/203d47c9f109401fa8045a1a3f079e63678b1f14,203d47c9f109401fa8045a1a3f079e63678b1f14,2.13.0
kevin-montrose,2016-02-05 20:53:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0fa30040f0c94556879ad920d4c3f4ee615f0025,0fa30040f0c94556879ad920d4c3f4ee615f0025,fix strongname build w.r.t. unions
kevin-montrose,2016-02-05 20:29:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/66b411b3459a12e3d4a98459efb4f5ac8207a3ab,66b411b3459a12e3d4a98459efb4f5ac8207a3ab,"fix #193 for enums, and report a better error in all other cases"
kevin-montrose,2016-02-05 20:07:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8645e7c096d57a94baba93c91a64d1ffc5b35e4d,8645e7c096d57a94baba93c91a64d1ffc5b35e4d,add failing test for #193
kevin-montrose,2016-02-05 19:54:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9fa9824b80f486b8a793fe48a37969c4559fd482,9fa9824b80f486b8a793fe48a37969c4559fd482,fix #189
kevin-montrose,2016-02-05 19:44:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/04ca5a7f4b461793dc87828958e491ddf56a9769,04ca5a7f4b461793dc87828958e491ddf56a9769,fix #200
kevin-montrose,2016-02-05 19:20:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b3134ab9aa3b87f5e52c0d69cdd64f2d1a599011,b3134ab9aa3b87f5e52c0d69cdd64f2d1a599011,fixing tests that broke in merge; this finally fixes #131
kevin-montrose,2016-02-05 18:44:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/48290c3b0a4bd441909adbc5c3edfd1a3c67f6ff,48290c3b0a4bd441909adbc5c3edfd1a3c67f6ff,fixing a bug from the merge
kevin-montrose,2016-02-05 18:36:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f9bb4e9ee57f4bcc01ec584f7dbbc0bf22c5ed1c,f9bb4e9ee57f4bcc01ec584f7dbbc0bf22c5ed1c,the merge from hell
kevin-montrose,2016-02-05 17:48:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cae384aaf2a12a50405f0f8829364a234ebb7364,cae384aaf2a12a50405f0f8829364a234ebb7364,Merge branch 'master' of https://github.com/cris-almodovar/Jil into pr-197
kevin-montrose,2016-02-05 17:39:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/621dec9a6acfcd9f0265fb8f002be0dcc60735bf,621dec9a6acfcd9f0265fb8f002be0dcc60735bf,Merge branch 'fix-ca1810-serialize-methods' of https://github.com/jack-pappas/Jil into pr-179
kevin-montrose,2016-02-05 17:37:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c235525d258ea328b8bf6b4198f4a92e67d81815,c235525d258ea328b8bf6b4198f4a92e67d81815,update README for primitive wrappers
kevin-montrose,2016-02-05 17:16:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fb2a1e00419c64e2cede3bad2ccdea0373627f37,fb2a1e00419c64e2cede3bad2ccdea0373627f37,make sure dynamic serialization doesn't have same top level null issues
kevin-montrose,2016-02-05 17:14:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/30c9428c26c0db0e5bd630072368b21ac9a0e390,30c9428c26c0db0e5bd630072368b21ac9a0e390,more tests work around primitive wrappers
kevin-montrose,2016-02-05 17:03:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/691b8116889084f14fb65441bc0c1ee9d220cacb,691b8116889084f14fb65441bc0c1ee9d220cacb,"move tests to appropriate classes, also test the serialize side of primitive wrapper errors"
kevin-montrose,2016-02-05 16:54:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9d739663687b4ceaefd0b75ad88889b9f0e98d08,9d739663687b4ceaefd0b75ad88889b9f0e98d08,better report error cases (and allow fields on primitive wrappers with constructors)
kevin-montrose,2016-02-05 16:06:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0a9a2ea405a9548d8864013f2fba3cdcd4c90fc9,0a9a2ea405a9548d8864013f2fba3cdcd4c90fc9,backport fix for top level nulls
kevin-montrose,2016-02-05 16:04:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d602da6e8805364fde4b2650cdfb5108a49c7fcb,d602da6e8805364fde4b2650cdfb5108a49c7fcb,merge
kevin-montrose,2016-02-05 15:34:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/88f97829a84c54ff090afba0b70736be64442940,88f97829a84c54ff090afba0b70736be64442940,fix top level nulls
kevin-montrose,2016-02-05 15:27:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5d140946367be06c98d8b4c3a553ae240d88b9ff,5d140946367be06c98d8b4c3a553ae240d88b9ff,failing test for 'top level' nulls
kevin-montrose,2016-02-05 15:12:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8f8be9be16a6ef72c836fa7251b8f779b8097c4d,8f8be9be16a6ef72c836fa7251b8f779b8097c4d,update .gitignore
cris-almodovar,2016-01-16 10:07:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/35e2ab68ce2db766d6160fcfc50e5d86ddf289cf,35e2ab68ce2db766d6160fcfc50e5d86ddf289cf,"Fixed bug in JsonObject.InnerTryConvert()

Fixed bug in JsonObject.InnerTryConvert(), when returnType is Dictionary"
cris-almodovar,2016-01-16 10:05:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5cf3c637056d9f8777c9a9a9ac47e4f6f3108080,5cf3c637056d9f8777c9a9a9ac47e4f6f3108080,"Fixed bug in JsonObject.InnerTryConvert()

Fixed bug in JsonObject.InnerTryConvert(), when return type is Dictionary"
jack-pappas,2015-10-03 15:34:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/376075a48966affc329433a1e6d8baa8b962e8e6,376075a48966affc329433a1e6d8baa8b962e8e6,Fixed digit character calculation.
jack-pappas,2015-10-03 15:08:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3bf0ebe947fa23b15e9bffd7628c29da9027d585,3bf0ebe947fa23b15e9bffd7628c29da9027d585,CA1810 fix for the Methods class to avoid initialization thunk overhead when accessing 'DigitPairs' and 'DigitTriplets'.
kevin-montrose,2015-10-18 23:50:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4f34a80413753f82770060b98e4b947ce229058d,4f34a80413753f82770060b98e4b947ce229058d,update README
kevin-montrose,2015-10-18 23:34:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/40984c8d066b947df7011c391e62a2fab8878c03,40984c8d066b947df7011c391e62a2fab8878c03,make it so *if* you specify an IsUnionType you *must* set it
kevin-montrose,2015-10-18 23:14:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/89b4b1bd27dc5957d37cf06c24b34b42e8892d8e,89b4b1bd27dc5957d37cf06c24b34b42e8892d8e,improve error messages when a union goes nuts while serializing
kevin-montrose,2015-10-18 22:52:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0e11e1fdd86e4d751375a6902a51b5ce8589f845,0e11e1fdd86e4d751375a6902a51b5ce8589f845,introduce SerializerException; get serialization of unions to provide proper feedback
kevin-montrose,2015-10-18 22:37:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/29eb59066e2959c2b34ea3ffccc071f3bfbbd1ca,29eb59066e2959c2b34ea3ffccc071f3bfbbd1ca,"stopgap commit; cleanup the error message you get from bad unions, update tests"
kevin-montrose,2015-10-18 21:57:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e859bdd5c8462b693c39e2c3b433d86128f7e64b,e859bdd5c8462b693c39e2c3b433d86128f7e64b,stopgap commit; cleaning up how union validation works
Scooletz,2015-10-16 22:22:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fb7c0bc9f71b7c22a0ca18a49df3e34d8d0fe3ef,fb7c0bc9f71b7c22a0ca18a49df3e34d8d0fe3ef,"Final implementation for serialization & deserialization of pritmives wrapped in classes, closes kevin-montrose/Jil#173"
kevin-montrose,2015-10-13 15:41:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5425daa8bad5afc276fed756371f25c2a622d535,5425daa8bad5afc276fed756371f25c2a622d535,expand union tests
kevin-montrose,2015-10-12 20:17:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/67fbe2b4a5f8d7dc27b980ffeeb8b066c1fd22ab,67fbe2b4a5f8d7dc27b980ffeeb8b066c1fd22ab,missing file
kevin-montrose,2015-10-12 20:17:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/699bc0bc6e4a469641f1d3bae0b607b8fc8a83b3,699bc0bc6e4a469641f1d3bae0b607b8fc8a83b3,"need to expand tests, but looks like serializing unions works now"
kevin-montrose,2015-10-12 20:02:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f7aa701aea0043d0b5675d94736c17c621503e68,f7aa701aea0043d0b5675d94736c17c621503e68,stopgap commit; getting started on union serialization w/o a IsUnionType
kevin-montrose,2015-10-12 19:13:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/197584a7f391484e540a28258d32910146864317,197584a7f391484e540a28258d32910146864317,failing tests
kevin-montrose,2015-10-12 19:03:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/35d623f3491c48e6d0a51d9c973690ebe9b62577,35d623f3491c48e6d0a51d9c973690ebe9b62577,better name for this method
kevin-montrose,2015-10-12 19:02:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/662c95b493294ae7a1361b84affa0730dd8d1b47,662c95b493294ae7a1361b84affa0730dd8d1b47,more refactoring to reduce code duplication
kevin-montrose,2015-10-12 01:11:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a95d1cfe2fe15b06b29c78821d53ec2288458557,a95d1cfe2fe15b06b29c78821d53ec2288458557,start punching this stuff down
kevin-montrose,2015-10-12 01:04:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/536206610ea1a2fea4a7cbd233b7794461e45e2a,536206610ea1a2fea4a7cbd233b7794461e45e2a,stopgap commit
kevin-montrose,2015-10-12 00:57:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ed1e0d7298ab3297df2d366c8b55c12c545220ce,ed1e0d7298ab3297df2d366c8b55c12c545220ce,consolidate some of the discriminant stuff
kevin-montrose,2015-10-12 00:11:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3e02b6015331188c19548c8da5184989e788a573,3e02b6015331188c19548c8da5184989e788a573,extend test to cover last case
kevin-montrose,2015-10-12 00:05:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cbd4aa93111d18cd2d852b98ffb73bccd2e3c511,cbd4aa93111d18cd2d852b98ffb73bccd2e3c511,stopgap commit; fix failing test
kevin-montrose,2015-10-11 22:13:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0c79a8275b772e702f2a7f5c5ab47c14cae0cb49,0c79a8275b772e702f2a7f5c5ab47c14cae0cb49,stopgap commit; refactoring in anticipation of fixing failing test
kevin-montrose,2015-10-11 22:09:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1e7527f9e856957b595bfb590b6c9cf33e035ed4,1e7527f9e856957b595bfb590b6c9cf33e035ed4,stopgap commit; failing test for unions in unconditional cases
Scooletz,2015-10-11 19:18:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/feaeae828de4c856f007b70755390d14b8500b65,feaeae828de4c856f007b70755390d14b8500b65,"Initial sketch for writers/serializers of pritmives wrapped in classes, touches kevin-montrose/Jil#173"
kevin-montrose,2015-10-10 05:15:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/45fd7b422c3e5233e1b874fcc77efff9968bebb5,45fd7b422c3e5233e1b874fcc77efff9968bebb5,stopgap commit; discriminant union with conditional serialization and excluding nulls
kevin-montrose,2015-10-10 05:08:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4d496f8167743091f71dc00fccced3a394ab08d9,4d496f8167743091f71dc00fccced3a394ab08d9,failing test for discriminant union work
kevin-montrose,2015-10-10 04:58:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3363224fd48618b123a08acf1373fbeed67a6e6d,3363224fd48618b123a08acf1373fbeed67a6e6d,stopgap commit; discrimintant union with conditional serialization working
kevin-montrose,2015-10-10 03:33:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2043ea7e7b5d940ef1ec68656d9d871743e15a57,2043ea7e7b5d940ef1ec68656d9d871743e15a57,fix conditional serialization
kevin-montrose,2015-10-10 03:20:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9bd344ceed30dfd053ac0154091d7ee7e2237ed5,9bd344ceed30dfd053ac0154091d7ee7e2237ed5,the merge from hell
kevin-montrose,2015-09-28 03:08:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/71fc65c4148f1aa25fdf9a5fc166e51f91865ec9,71fc65c4148f1aa25fdf9a5fc166e51f91865ec9,2.12.1
kevin-montrose,2015-09-28 02:24:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7725a4ea1ac3c4c534e583ab1940396a0f9f8747,7725a4ea1ac3c4c534e583ab1940396a0f9f8747,fix #169
kevin-montrose,2015-09-28 01:23:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7a64ce0aa9fdad017092f1b41dcba08d9ab6a4bd,7a64ce0aa9fdad017092f1b41dcba08d9ab6a4bd,add failing test for #169
kevin-montrose,2015-09-16 02:29:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/10cf26d5dd9598666586c8ea0b312f507d55b2ab,10cf26d5dd9598666586c8ea0b312f507d55b2ab,2.12.0
kevin-montrose,2015-09-14 02:46:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5b809dfc0c27a7a6174feeec872561b9f1af6464,5b809dfc0c27a7a6174feeec872561b9f1af6464,fix test when timezone offset is 0
kevin-montrose,2015-09-14 01:34:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/20111eb263c83f9de420f2774470c72283b00e04,20111eb263c83f9de420f2774470c72283b00e04,"fix #158; use 64-bits for precision now, and in the overflow case start throwing digits away.  Reasonably approximates double.Parse()'s behavior, while accumulating into a uint in the common case."
kevin-montrose,2015-09-14 01:13:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0fb2a108beff41b3f4d72c4da0d1eee1c9e8cfe4,0fb2a108beff41b3f4d72c4da0d1eee1c9e8cfe4,add failing test for #158
kevin-montrose,2015-09-14 01:04:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0cc2d5aa2d52a9f720cea777f1910a9f83fe66d2,0cc2d5aa2d52a9f720cea777f1910a9f83fe66d2,document new interfaces supported
kevin-montrose,2015-09-14 01:01:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7534c337ec1493287ade64bc1b2c6c9b55e108ab,7534c337ec1493287ade64bc1b2c6c9b55e108ab,fix #162
kevin-montrose,2015-09-14 00:58:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fcee2a3a03e57e4f14c55d8e69ed84e066bb2940,fcee2a3a03e57e4f14c55d8e69ed84e066bb2940,add failing case for #162
kevin-montrose,2015-09-13 23:46:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/39734fb29bb2602e1d2576454aeaaaf73391caab,39734fb29bb2602e1d2576454aeaaaf73391caab,fixup deserialize dynamic test
kevin-montrose,2015-09-13 23:25:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e94c9544dc0ddfc52ebb3c1c951f2cb341de08b1,e94c9544dc0ddfc52ebb3c1c951f2cb341de08b1,fix #159; goofy edge case around case insensitivity and enums that vary at a point by a single character of different case
kevin-montrose,2015-09-13 22:38:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5e4e2deb3d9a38199159b830c5b3d8cd97991155,5e4e2deb3d9a38199159b830c5b3d8cd97991155,reduce reproduction case for #159
kevin-montrose,2015-09-13 22:35:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/27fbb393add2ca063cfbad0c496d039d6d674797,27fbb393add2ca063cfbad0c496d039d6d674797,test for #159
kevin-montrose,2015-09-13 22:24:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7abe2d1e9a7041b4b99599f499a997623c11497c,7abe2d1e9a7041b4b99599f499a997623c11497c,fix the dynamic equivalent of #165
kevin-montrose,2015-09-13 22:03:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8984c390e2f8a2099310e311662de546764291cb,8984c390e2f8a2099310e311662de546764291cb,fix #165 ; math and tests for DateTimeOffset -> DateTime were embarassingly wrong -_-
kevin-montrose,2015-09-04 00:31:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/88974950355ead8990a54a422f20c90dc5bbc04c,88974950355ead8990a54a422f20c90dc5bbc04c,update README with new config options
kevin-montrose,2015-09-03 22:58:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/66a6236513ce7219bf18e670bb74ec93f43596da,66a6236513ce7219bf18e670bb74ec93f43596da,2.11.0
kevin-montrose,2015-09-03 03:13:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2bb098c43e251f1b97790be298d8681ee46cd24f,2bb098c43e251f1b97790be298d8681ee46cd24f,preserve directory structure in Jil.StrongName to remove some build warnings
kevin-montrose,2015-09-03 03:07:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6fcccf2d9b3cd8c87605bfff202bac4de046a8f1,6fcccf2d9b3cd8c87605bfff202bac4de046a8f1,merge
kevin-montrose,2015-09-03 03:00:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eb98c684a9f7b45fee0ee552fe5e52a28d8147a9,eb98c684a9f7b45fee0ee552fe5e52a28d8147a9,better explanation of wtf
kevin-montrose,2015-09-03 02:15:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d2fb52f3c88e014b5d7eb0fb517c956c9a4171c,0d2fb52f3c88e014b5d7eb0fb517c956c9a4171c,maintain compatibility with 2.10.0
kevin-montrose,2015-09-03 01:46:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2c788f48c30c8b71756641193b28968353537b80,2c788f48c30c8b71756641193b28968353537b80,fix tests
kevin-montrose,2015-09-03 01:40:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6fa5ac4ca2659aae5adf64dd8fb26a2d9ef97cb2,6fa5ac4ca2659aae5adf64dd8fb26a2d9ef97cb2,fix RELEASE tests
kevin-montrose,2015-09-03 01:34:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1931168e7e4f6ed5fcaa4988e7fb29a5072826c2,1931168e7e4f6ed5fcaa4988e7fb29a5072826c2,stopgap commit; getting some groundwork for serializing unions
Wazner,2015-08-16 16:42:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/442726af87b100e83d38f4b1ae8ca8031b6e6eff,442726af87b100e83d38f4b1ae8ca8031b6e6eff,"Fixed dynamically serializing an object with a JilDirective, the TreatEnumerationAs value would be used for all members serialized after the member with the attribute."
Wazner,2015-08-12 21:42:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/83ced42f5f3d9d7e840de17193350a3e9f06b00f,83ced42f5f3d9d7e840de17193350a3e9f06b00f,Fixed JilDirective not taken into account for array elements and nullable values when deserializing.
Wazner,2015-08-12 20:18:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/48b0256f22954aa555052014563e0644ac4b2cb2,48b0256f22954aa555052014563e0644ac4b2cb2,Added tests for IEnumerable serialization of enum values.
Wazner,2015-08-12 20:01:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/de66c00314f2bbc197263900d87d56e32dd3c40a,de66c00314f2bbc197263900d87d56e32dd3c40a,Fixed JilDirective not taken into account for array elements and nullable values. Dynamic call outs now also recieve the member they're called for.
kevin-montrose,2015-08-11 20:42:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9cedfeea7337bb244021a5cf1b320bf3318d894f,9cedfeea7337bb244021a5cf1b320bf3318d894f,"Merge pull request #152 from Wazner/strongname-sigil-reference

Fixed the Jil.StrongName project still referencing an old Sigil version"
Wazner,2015-08-11 20:22:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ebbfd5449907fd224a75e75a86b1548e5b017233,ebbfd5449907fd224a75e75a86b1548e5b017233,"Fixed the Jil.StrongName project still referencing an old Sigil version 4.4.0, instead of the latest 4.5.0."
kevin-montrose,2015-07-27 23:21:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fd70ac2cb56ad911f8ce6c9a82cdac58ecbfb5a7,fd70ac2cb56ad911f8ce6c9a82cdac58ecbfb5a7,"convert ILGenerator to Sigil, removing a TODO"
kevin-montrose,2015-07-27 01:04:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5c1f192e19569860c86ee5685239a1787c7a007e,5c1f192e19569860c86ee5685239a1787c7a007e,Merge branch 'master' of github.com:kevin-montrose/Jil into discriminant-unions
kevin-montrose,2015-07-27 01:04:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/56817d607b12efaa367cffb8b98ac359021a5035,56817d607b12efaa367cffb8b98ac359021a5035,upgrade Sigil to 4.5.0
kevin-montrose,2015-07-26 22:01:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/aa5ed6c13967d2d36c8242c26632c5bedbc9be42,aa5ed6c13967d2d36c8242c26632c5bedbc9be42,test a bunch of union definition errors for #131
kevin-montrose,2015-07-26 21:43:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/57e4fe7f38d3e752d7fa0a12c6c948308513c381,57e4fe7f38d3e752d7fa0a12c6c948308513c381,test for when type indicator is misconfigured
kevin-montrose,2015-07-26 21:37:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9bb9e8ffb5e10852b1e452ff73d7134beac63dbc,9bb9e8ffb5e10852b1e452ff73d7134beac63dbc,more test cases for #131
kevin-montrose,2015-07-26 20:43:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ac020d462f00a9993f5e7831ce510c790098fa3a,ac020d462f00a9993f5e7831ce510c790098fa3a,it's faster!
kevin-montrose,2015-07-26 20:34:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1fe7b4eb24f81901eeffe67fea4390c4a2ab3f82,1fe7b4eb24f81901eeffe67fea4390c4a2ab3f82,'fast' path now handles nulls properly
kevin-montrose,2015-07-26 19:52:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ffcb0442d34f04addc8b340ff92f84f21943c942,ffcb0442d34f04addc8b340ff92f84f21943c942,fix a bad error message
kevin-montrose,2015-07-26 19:46:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7e7b63b832d4bdf1766ee647301883a11d8dcf5e,7e7b63b832d4bdf1766ee647301883a11d8dcf5e,"stopgap commit; slow union path can handle multiple types where null is a valid value now, still need to get 'fast' path up to speed on it"
kevin-montrose,2015-07-26 19:21:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3902430dba9cc30b96622b6cfd3b105c64d7697d,3902430dba9cc30b96622b6cfd3b105c64d7697d,"stopgap commit; starting to treat null specially in unions, so things like (string | int?) can work"
kevin-montrose,2015-07-26 18:41:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/97bd5a83cda6dfdf4ad37601f25b313e07efe2bc,97bd5a83cda6dfdf4ad37601f25b313e07efe2bc,Merge branch 'master' of github.com:kevin-montrose/Jil into discriminant-unions
kevin-montrose,2015-07-23 19:23:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ea0d9cacbf2c10921f338c1a9b5f2941a804713a,ea0d9cacbf2c10921f338c1a9b5f2941a804713a,"Merge pull request #146 from Wazner/master

Add syntax highlighting to code samples in readme.md"
kevin-montrose,2015-07-23 19:14:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d37c905ac2c62e0252be69d06a637b372aa9d5a,0d37c905ac2c62e0252be69d06a637b372aa9d5a,Merge branch 'master' of github.com:kevin-montrose/Jil into discriminant-unions
kevin-montrose,2015-07-23 19:06:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/211a5fb48d4ac4c39f7b0675a504f23e588c505c,211a5fb48d4ac4c39f7b0675a504f23e588c505c,Merge branch 'issue-143' of https://github.com/Wazner/Jil into issue-145
kevin-montrose,2015-07-23 18:59:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e0c8da8b3c1a804983358ba0c03efa978ba8a28b,e0c8da8b3c1a804983358ba0c03efa978ba8a28b,Merge branch 'master' of github.com:kevin-montrose/Jil
kevin-montrose,2015-07-23 18:58:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/12a214a6bc48b4184485694d5d19ca65f058b4da,12a214a6bc48b4184485694d5d19ca65f058b4da,Merge branch 'issue-147' of https://github.com/Wazner/Jil into issue-147
Wazner,2015-07-22 16:13:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/34659a20538c2ca1b78991a991d666cd34247351,34659a20538c2ca1b78991a991d666cd34247351,Fixed #147
Wazner,2015-07-22 16:13:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/17b18fe1a0a04b4b371f81eaf192911a63f43410,17b18fe1a0a04b4b371f81eaf192911a63f43410,Unit tests currently failing because of #147
Wazner,2015-07-17 08:45:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b2aadb6b28681c5edd2385e8b1844a14e908569b,b2aadb6b28681c5edd2385e8b1844a14e908569b,"Code formatting

The Jil code formatting rules where not applied for every change.
This commit amends that."
Wazner,2015-07-17 08:39:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9d4bc7382bfa6846528ddc879230b7c486a04db7,9d4bc7382bfa6846528ddc879230b7c486a04db7,"Added more unit tests

Added unit tests for the DateTimeOffset type.
Also added unit tests for testing valid result when the fraction
overflows outside the resolution of DateTime.Ticks and TimeSpan.Ticks."
Wazner,2015-07-16 20:42:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4130686e9cba282aed739ad3f1514c212494176e,4130686e9cba282aed739ad3f1514c212494176e,Merge remote-tracking branch 'upstream/master'
Wazner,2015-07-16 20:26:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f092226728c9dadbd055b9e914b5c9b4e360c414,f092226728c9dadbd055b9e914b5c9b4e360c414,"Removed padding and added highlighting

Removed padding and added C# syntax highlighting to the code samples in
README.md"
Wazner,2015-07-16 20:06:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7751dd07fc7dc44b271b819a14233a394bfec321,7751dd07fc7dc44b271b819a14233a394bfec321,Fix precision of ThunkReader and TextReader ISO8601 deserialization.
Wazner,2015-07-16 20:06:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/05e1d499779cfd79bd5edc4b6b6e460461ec0357,05e1d499779cfd79bd5edc4b6b6e460461ec0357,Fix precision of dynamic TimeSpan deserialization
Wazner,2015-07-16 20:05:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d1076364c680cfc2537ff8350904194b49105a4c,d1076364c680cfc2537ff8350904194b49105a4c,Replaced Math.Pow with custom Utils.Pow10 to prevent using floating points.
Wazner,2015-07-16 20:03:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/11b30eb3ab786b8c36b3711c89aa3adb773cdc42,11b30eb3ab786b8c36b3711c89aa3adb773cdc42,Added more test cases for the different parsing logic (Dynamic and TextReader)
Wazner,2015-07-16 18:09:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/37ccb856fc573afded38b589c7ab7b9c330c7d6a,37ccb856fc573afded38b589c7ab7b9c330c7d6a,Fixed precision loss for ISO8601 DateTime deserialization.
Wazner,2015-07-16 18:09:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/246c6301cf4769e84c3b1c241e0bc12458b164b0,246c6301cf4769e84c3b1c241e0bc12458b164b0,Unit tests that currently fail because of issue 143
kevin-montrose,2015-07-15 20:15:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6ec1d24b9599aa6157b11ba06cc0d8d6e4dc863e,6ec1d24b9599aa6157b11ba06cc0d8d6e4dc863e,"Merge pull request #144 from Wazner/comment-fix

Removed left over Newtonsoft references in comments"
Wazner,2015-07-15 20:13:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/081bd6834045cf888e523c0443a5b51a69efb765,081bd6834045cf888e523c0443a5b51a69efb765,"Removed left over Newtonsoft references in comments

Also added a descriptive comment to indicate the same logic is
implemented twice (One for TextReader and one for ThunkReader)."
Wazner,2015-07-15 17:59:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7582d2210a6bc402943d8fdaaabc3f65b186e8f3,7582d2210a6bc402943d8fdaaabc3f65b186e8f3,"Merge pull request #1 from kevin-montrose/master

Merge master of kevin-montrose/Jil into master of Wazer/Jil"
kevin-montrose,2015-07-14 20:05:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a64564e9383964667e8d844b9ea2febccbeb9278,a64564e9383964667e8d844b9ea2febccbeb9278,Merge branch 'master' of github.com:kevin-montrose/Jil
kevin-montrose,2015-07-14 20:05:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6ed5df7c5b75ba213d1babbecdb39d381102b3ea,6ed5df7c5b75ba213d1babbecdb39d381102b3ea,fix #142
kevin-montrose,2015-07-13 18:06:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3f29492746cff01d99be52ac87535802538e3a35,3f29492746cff01d99be52ac87535802538e3a35,"Merge pull request #140 from momow/patch-1

Fix MSDN link"
AurelienGasser,2015-07-13 17:40:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/59281add74b6ed3538169a3577325ff897e3f7e5,59281add74b6ed3538169a3577325ff897e3f7e5,Fix MSDN link
kevin-montrose,2015-07-13 04:50:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5658f0f67336303ea7c15be9c5837de13dd94aa2,5658f0f67336303ea7c15be9c5837de13dd94aa2,stopgap commit ; working on a faster way to parse unions
kevin-montrose,2015-07-13 02:27:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/64e1b2f5f2f1da4ec89cf94091ecb055dff3be12,64e1b2f5f2f1da4ec89cf94091ecb055dff3be12,Merge branch 'master' of github.com:kevin-montrose/Jil into discriminant-unions
kevin-montrose,2015-07-13 02:23:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f004cf5fc460032e70eea25777f6e8cfd1a55cd4,f004cf5fc460032e70eea25777f6e8cfd1a55cd4,cleanup test for #139
kevin-montrose,2015-07-13 02:21:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3211d21119a866677737c2479d36c6314a421559,3211d21119a866677737c2479d36c6314a421559,fix #139; fixes dynamic call out logic to handle non-dynamic dispatch recursive cases
kevin-montrose,2015-07-13 01:57:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/acce2fee99b76c3b47bc0b837193015616e98199,acce2fee99b76c3b47bc0b837193015616e98199,add tests for #139
kevin-montrose,2015-06-29 03:55:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/82316a6c62bf476fc27db68be4eb379b8bed9a19,82316a6c62bf476fc27db68be4eb379b8bed9a19,more work on #131; implementing the IsUnionType suggestion from @m0sa
kevin-montrose,2015-06-21 17:52:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/188ec7c4c2830a36de0e13439b2fef32e1b391dc,188ec7c4c2830a36de0e13439b2fef32e1b391dc,more cleanup refactoring
kevin-montrose,2015-06-21 17:33:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/edb92e701e77e7d5ad3d7be0aa861ed143c46563,edb92e701e77e7d5ad3d7be0aa861ed143c46563,tiny cleanup refactor
kevin-montrose,2015-06-21 17:19:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/43491b78ceb4365a76c20ebbe77d5b6b2bfe1507,43491b78ceb4365a76c20ebbe77d5b6b2bfe1507,test for unions that aren't actually discriminant
kevin-montrose,2015-06-21 17:04:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6a79d5167cf0cf71b4a937cc1d298ed5ac8c28e1,6a79d5167cf0cf71b4a937cc1d298ed5ac8c28e1,handle TODO to fail when members aren't all sharing proper [JilDirective] configs
kevin-montrose,2015-06-21 03:18:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6e92967bf1f69550d55211e9822dd17162ba6955,6e92967bf1f69550d55211e9822dd17162ba6955,adding todos for the rest of unions
kevin-montrose,2015-06-21 03:15:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/49f1e452f1b4076f861294fe680616ea6a57ee6f,49f1e452f1b4076f861294fe680616ea6a57ee6f,get more types working with unions
kevin-montrose,2015-06-21 03:00:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e2e2e47203a6b19f693e3173dd365982bfb6c393,e2e2e47203a6b19f693e3173dd365982bfb6c393,first whack at union support
kevin-montrose,2015-06-20 22:49:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7ed8010fdb1fb5398bd67501f017c5361d97f133,7ed8010fdb1fb5398bd67501f017c5361d97f133,nice failing test for deserializing unions
kevin-montrose,2015-06-20 22:46:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/191e65cba131afc89e65a9d9a35a5abd6ef53d15,191e65cba131afc89e65a9d9a35a5abd6ef53d15,"get started on discriminant unions for #131; basic idea is you configure via [JilDirective] a bunch of members under the same key with IsUnion=true, and then Jil makes with the magic"
kevin-montrose,2015-06-20 22:10:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c4475f8a0d539ff490e539b54dc6172da5a66bee,c4475f8a0d539ff490e539b54dc6172da5a66bee,Merge branch 'issue-134' of https://github.com/Wazner/Jil into issue-134
kevin-montrose,2015-06-20 22:02:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5662ea97724f5bd84eccce6f3cf0347c2e0a810c,5662ea97724f5bd84eccce6f3cf0347c2e0a810c,"Merge pull request #136 from Wazner/default-datetimeoffset-fix

Fixes TryCastDateTimeOffset Exception"
kevin-montrose,2015-06-16 15:24:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e78ca7d5ea4faa9e64a378d6a2da14927287c64f,e78ca7d5ea4faa9e64a378d6a2da14927287c64f,"Merge pull request #138 from Wazner/issue-132

Fix localization issues with unit tests."
Wazner,2015-06-14 19:10:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5e274e750148fc22c7d4dbd2781b113616923084,5e274e750148fc22c7d4dbd2781b113616923084,Fix localization issues with unit tests.
Wazner,2015-06-14 17:57:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e8a836e03bb94fa7760ace4b0959b94110788e3c,e8a836e03bb94fa7760ace4b0959b94110788e3c,Fixes issue 134
Wazner,2015-06-14 17:54:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d360f03ef8e458377efadbda44acf6f0f805f337,d360f03ef8e458377efadbda44acf6f0f805f337,"A test that currently fails, to identity the issue."
Wazner,2015-06-11 19:00:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/39f4a6737efc626dba454342b27efc467fa33d46,39f4a6737efc626dba454342b27efc467fa33d46,Fixes TryCastDateTimeOffset Exception
kevin-montrose,2015-05-18 04:50:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a2b5f8a9eea048a4df4bc6f992b948c9e27a51e7,a2b5f8a9eea048a4df4bc6f992b948c9e27a51e7,handle dynamic cases for #129
kevin-montrose,2015-05-18 04:10:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bd5b9b5c0b76c2c82d00b3a88cc6a067d22dd333,bd5b9b5c0b76c2c82d00b3a88cc6a067d22dd333,handle deserialization for #129
kevin-montrose,2015-05-18 03:38:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5dc59daf57738f6720f613daecf3a7ac45123b6f,5dc59daf57738f6720f613daecf3a7ac45123b6f,handle serialization for #129
kevin-montrose,2015-05-18 02:57:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e18bc149ce24de874e9aba21b5f38e97b6f6b0ff,e18bc149ce24de874e9aba21b5f38e97b6f6b0ff,two failing tests for #129
kevin-montrose,2015-05-11 02:07:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/405d8409f43544193fe96c8cb314399305e82b04,405d8409f43544193fe96c8cb314399305e82b04,2.10.0
kevin-montrose,2015-05-11 01:44:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c8688eaa62bdbeb50ae0ef30ee37c916c883ddee,c8688eaa62bdbeb50ae0ef30ee37c916c883ddee,update README
kevin-montrose,2015-05-09 20:26:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fa66ef27b606f2d39512ed54073377730d065896,fa66ef27b606f2d39512ed54073377730d065896,expunge remainder of Jil.* source references to Newtonsoft
kevin-montrose,2015-05-09 18:44:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cc008ea1171550bc1a27f754debd5319f5bbe948,cc008ea1171550bc1a27f754debd5319f5bbe948,"getting close to a release; starting on #125; adding MicrosoftStyleMillisecondsSinceUnixEpoch, marking NewtonsoftStyle [Obsolete], changing Options to upgrade to MicrosoftStyle, fixing up all usages of it;  still need to scrub the rest of source for references"
kevin-montrose,2015-05-06 02:06:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5b6f58c9b0fa6aa84f8c255797c8b7baba4d958c,5b6f58c9b0fa6aa84f8c255797c8b7baba4d958c,merge
kevin-montrose,2015-05-06 02:00:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/52c6035a272328b60c6bb5e012dafc6a4b84b79f,52c6035a272328b60c6bb5e012dafc6a4b84b79f,fix #128; type reuse did not respect [JilDirective]
kevin-montrose,2015-05-06 01:57:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a1eca7be6079f05664d7ec09fa5553244a33cfbf,a1eca7be6079f05664d7ec09fa5553244a33cfbf,add test for #128
kevin-montrose,2015-05-04 03:40:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a6e2764968ec0f99a5b5febe74f84ae1cf332bdb,a6e2764968ec0f99a5b5febe74f84ae1cf332bdb,fixup all remaining TODOs; restore stream reading behavior; add a speed proof test to measure gains from ThunkReader use - looks to be around 11%
kevin-montrose,2015-05-04 03:16:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ca48b708a3969f7fdf654cc3e49c568ab8cab6e6,ca48b708a3969f7fdf654cc3e49c568ab8cab6e6,fix RELEASE tests
kevin-montrose,2015-05-04 03:11:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/77410e342058117d9e2d394e0297a1eb0e2c81d6,77410e342058117d9e2d394e0297a1eb0e2c81d6,get the bits of dynamic deserialization that are needed by static member deserialization ThunkReader aware; at this point all DEBUG tests pass
kevin-montrose,2015-05-04 02:40:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/773337f5f7662037165d2d3cb7fe8d30a0c22327,773337f5f7662037165d2d3cb7fe8d30a0c22327,fix loading recursive types
kevin-montrose,2015-05-04 00:17:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a339e4abbc84cc0cd8d881460fbac9e20cbd8022,a339e4abbc84cc0cd8d881460fbac9e20cbd8022,merge
kevin-montrose,2015-04-25 23:51:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/46a732dc865cfd74cc2c7ca87174d2d55fcccd46,46a732dc865cfd74cc2c7ca87174d2d55fcccd46,fix the tests that have been affected by #127
kevin-montrose,2015-04-25 23:44:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/53e351e87f114010998ab23217b66c2a637696c1,53e351e87f114010998ab23217b66c2a637696c1,"fix #127; issue was Jil deciding certain types it already knew how to serialize specifically were actually reused 'normal' types, made Jil's type reuse detection smarter to fix"
kevin-montrose,2015-04-25 23:15:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/151378dac934c0eed0453d1075f3728a2b538222,151378dac934c0eed0453d1075f3728a2b538222,add test for #127
kevin-montrose,2015-04-22 21:50:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/93f7845115536fcd11171714fb64c8a9eb417c77,93f7845115536fcd11171714fb64c8a9eb417c77,fix #126
kevin-montrose,2015-04-22 21:36:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/84d2b5dd52b0781b7555fa205a60baa7d6d61e89,84d2b5dd52b0781b7555fa205a60baa7d6d61e89,"extend #126 test to cover floats and doubles, same issue"
kevin-montrose,2015-04-22 21:07:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d9c607c0eca160af8ee92d0ade163e58a4cdb2c,0d9c607c0eca160af8ee92d0ade163e58a4cdb2c,add a test for #126
kevin-montrose,2015-04-19 20:00:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2170ed0b6cff5a07dcbceb1434e81aa124828ff8,2170ed0b6cff5a07dcbceb1434e81aa124828ff8,quick dirty hack to get dynamic deserialization working (poorly) when called from the static deserializer
kevin-montrose,2015-04-19 19:53:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ea001788c7dca489d26032d08c5f3fd3f02fc42a,ea001788c7dca489d26032d08c5f3fd3f02fc42a,timespans restored
kevin-montrose,2015-04-19 19:40:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9e93287c03c6b9299737ae5e9d8d052c7a9ac15e,9e93287c03c6b9299737ae5e9d8d052c7a9ac15e,datetimeoffsets restored
kevin-montrose,2015-04-19 19:29:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c2d79abfb412edf724c78455ef8c01a19e66bb5c,c2d79abfb412edf724c78455ef8c01a19e66bb5c,more datetime parsing fixes
kevin-montrose,2015-04-19 19:22:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f13ff922717db99f65c0c41df120c5b3e377fc88,f13ff922717db99f65c0c41df120c5b3e377fc88,"get started on datetime parsing, oy vey"
kevin-montrose,2015-04-19 19:06:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/faf81e2707245c536f9b1eed935a3c31b55152bf,faf81e2707245c536f9b1eed935a3c31b55152bf,get recursively defined types working again
kevin-montrose,2015-04-19 19:00:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bbf7c214fa6a2b783e10520181ceade24bf23b25,bbf7c214fa6a2b783e10520181ceade24bf23b25,more work on object deserialization
kevin-montrose,2015-04-19 18:51:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6b538532867c2deb18b01057e9ec8d928f7b91f4,6b538532867c2deb18b01057e9ec8d928f7b91f4,get started on deserializing arbitrary objects
kevin-montrose,2015-04-19 18:34:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eafe5eba4879686ca47514638eeac5ca60d2be7a,eafe5eba4879686ca47514638eeac5ca60d2be7a,lists work
kevin-montrose,2015-04-19 18:27:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d76a3cf3b0adbea4851f2a9c4ed2bc6b4908f00f,d76a3cf3b0adbea4851f2a9c4ed2bc6b4908f00f,get nullables working
kevin-montrose,2015-04-19 18:18:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/920d332fb683afe70104a125de47ddcfb85dd0ca,920d332fb683afe70104a125de47ddcfb85dd0ca,finish support for enum parsing
kevin-montrose,2015-04-14 06:15:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ed94d52df764e9c9fadfd77a1d74201b22a3e21c,ed94d52df764e9c9fadfd77a1d74201b22a3e21c,some enum tests passing now; need to work through the rest of the comparable code paths still
kevin-montrose,2015-04-14 05:51:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cff849d729ed71ced32d0c11c9c2d8de955cdb69,cff849d729ed71ced32d0c11c9c2d8de955cdb69,even more refactoring for automata thunk-ification
kevin-montrose,2015-04-14 03:32:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0011ad5d87e68c5228709651fbfa14884619404a,0011ad5d87e68c5228709651fbfa14884619404a,"parameterize automata generation, for future ThunkReader use"
kevin-montrose,2015-04-14 02:48:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9a4b687da43ec71373ef01cb9232a2b7bf30b32a,9a4b687da43ec71373ef01cb9232a2b7bf30b32a,Merge branch 'master' into string-deserializer
kevin-montrose,2015-04-06 03:05:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4344031f3ce942628ecbc0cb204a39e0070c958c,4344031f3ce942628ecbc0cb204a39e0070c958c,"upon futher testing, and reflection, the methods on double/float are pretty damn fast"
kevin-montrose,2015-04-06 02:10:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/02ea64379f55f076bb0163d5eebc65caa2a4168c,02ea64379f55f076bb0163d5eebc65caa2a4168c,just add a test for NaN deserialization for peace of mind
kevin-montrose,2015-04-06 02:07:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fba0cd114c36367cca53784345b10c8c020f4577,fba0cd114c36367cca53784345b10c8c020f4577,"do the same NaN check trickery, but now with pointers so I don't have to lug a type around to do it"
kevin-montrose,2015-04-06 01:56:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ae46fe7039cde0de44fc1ed77d4010e9654d7691,ae46fe7039cde0de44fc1ed77d4010e9654d7691,first whack at a cheap NaN check injected to resolve #124 serialization issues
kevin-montrose,2015-04-06 01:06:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/829c11f2968caad0cc28a727816896759baf9df4,829c11f2968caad0cc28a727816896759baf9df4,failing test for the NaN defect discovered in #124
kevin-montrose,2015-03-24 04:58:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f7f59e16add9065ecc9f8e22e0020ba1f011ead0,f7f59e16add9065ecc9f8e22e0020ba1f011ead0,consolidate building code
kevin-montrose,2015-03-24 04:53:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/09869484450d96c0749ff39921a77171cc2542c6,09869484450d96c0749ff39921a77171cc2542c6,fix guids
kevin-montrose,2015-03-24 04:49:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3a66af051736eb34dd23f032f0980066c8e6e0f6,3a66af051736eb34dd23f032f0980066c8e6e0f6,fix strings
kevin-montrose,2015-03-24 04:41:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0cae6ef6a97dc7374d18065221fbf3d4a46406b4,0cae6ef6a97dc7374d18065221fbf3d4a46406b4,fix chars
kevin-montrose,2015-03-24 04:38:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c624cba363fc942691d5f7ba6c2b498e0776036d,c624cba363fc942691d5f7ba6c2b498e0776036d,fix decimals
kevin-montrose,2015-03-24 04:32:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/542dd250970a6f73f801124fba69195e86595c66,542dd250970a6f73f801124fba69195e86595c66,fix floats
kevin-montrose,2015-03-24 04:22:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ccbd8600cfa91ae29e38d3970c96328a458f684a,ccbd8600cfa91ae29e38d3970c96328a458f684a,fix doubles
kevin-montrose,2015-03-24 03:16:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/567bbdd0612c0ff73e7ca7986dd16b2db02a2a3b,567bbdd0612c0ff73e7ca7986dd16b2db02a2a3b,fix ulongs
kevin-montrose,2015-03-24 03:14:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9bb3782f8ee8394fed3e58aa546c2889e9a2f98d,9bb3782f8ee8394fed3e58aa546c2889e9a2f98d,fix longs
kevin-montrose,2015-03-24 03:13:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/78b94e7e300ecf5ea856d89de2e46d5ac2fcc562,78b94e7e300ecf5ea856d89de2e46d5ac2fcc562,fix uints
kevin-montrose,2015-03-24 03:10:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c1f6a254f3e0dfedf9d18b5310acba31ec5d5c4b,c1f6a254f3e0dfedf9d18b5310acba31ec5d5c4b,fix ints
kevin-montrose,2015-03-24 03:09:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/acd2bac6edd21ea1ff9d4f03746fe6948931c321,acd2bac6edd21ea1ff9d4f03746fe6948931c321,fix ushorts
kevin-montrose,2015-03-24 03:07:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0439f5c7532267e21661381ef38e13659048ad68,0439f5c7532267e21661381ef38e13659048ad68,fix shorts
kevin-montrose,2015-03-24 03:05:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/17aed11e3a7ce3e5c6d3ca90dbf953ee4ea48a01,17aed11e3a7ce3e5c6d3ca90dbf953ee4ea48a01,fix sbytes
kevin-montrose,2015-03-24 03:03:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/89239245162bb072ba2dc839b6b9707a8e8eee00,89239245162bb072ba2dc839b6b9707a8e8eee00,fix bytes
kevin-montrose,2015-03-24 02:49:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bcce6752820b36a87ba0f7782dd9b8769d088fdf,bcce6752820b36a87ba0f7782dd9b8769d088fdf,consolidate throwing logic
kevin-montrose,2015-03-24 02:40:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/88e0ae70b0cd53e925aa3baeb77b865162f89a21,88e0ae70b0cd53e925aa3baeb77b865162f89a21,start converting some things; can deserialize bools now
kevin-montrose,2015-03-24 02:14:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/97c8d787ee3d889ef73095ca1f9ff91caa9a169e,97c8d787ee3d889ef73095ca1f9ff91caa9a169e,make a bunch more tests fail by directing the stream version to the string version
kevin-montrose,2015-03-24 02:10:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d7fa9118645bbe83becdee1fba604f86b4a08235,d7fa9118645bbe83becdee1fba604f86b4a08235,"wire up the rest, whole bunch of failing tests now"
kevin-montrose,2015-03-24 01:51:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e52dc9ce8b4431e516dc52e591720d4575cdf1ee,e52dc9ce8b4431e516dc52e591720d4575cdf1ee,get started on deserializing-from-string abstraction removal
kevin-montrose,2015-03-16 04:08:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/62faca9952e26a916fa56b64ed16496b93315c86,62faca9952e26a916fa56b64ed16496b93315c86,2.9.0
kevin-montrose,2015-03-16 04:03:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/646671bac93220a7f5a0605f69b2337d6a8e8f51,646671bac93220a7f5a0605f69b2337d6a8e8f51,document RFC1123
kevin-montrose,2015-03-16 04:01:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/82e0909d5a703701b753215cef992ecca13ade27,82e0909d5a703701b753215cef992ecca13ade27,Merge branch 'master' of github.com:kevin-montrose/Jil
kevin-montrose,2015-03-16 04:00:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b777504c1aa7f9f5f96fa65bcf8cd787d2ff2ebd,b777504c1aa7f9f5f96fa65bcf8cd787d2ff2ebd,dynamic deserialization support for RFC1123; closes #63
kevin-montrose,2015-03-16 03:25:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7b8e37a2a9968cbfc8a0060bac8ca84e5c2fa45b,7b8e37a2a9968cbfc8a0060bac8ca84e5c2fa45b,failing test for RFC1123 dynamic deserialization
kevin-montrose,2015-03-16 03:23:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0456545af061889f8885aaa9bf3af8436a80f23f,0456545af061889f8885aaa9bf3af8436a80f23f,dynamic serialization test
kevin-montrose,2015-03-16 03:20:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f6897746d71f06d4946a720ee43066f3752e49db,f6897746d71f06d4946a720ee43066f3752e49db,fix and speed test for new RFC1123 deserializer
kevin-montrose,2015-03-16 03:10:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5e28c3ecd560d1e945e18a485ce83985bec006ec,5e28c3ecd560d1e945e18a485ce83985bec006ec,fix a bug with RFC1123 deserialization
kevin-montrose,2015-03-14 21:45:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1ceca97a712273302a339630df5dfbe416e8c13a,1ceca97a712273302a339630df5dfbe416e8c13a,"expand tests for RFC1123 deserialization, found some bugs (tests are failing in this commit)"
kevin-montrose,2015-03-14 21:14:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fd317d2ded9f5a767d4e265d8264d731f4608068,fd317d2ded9f5a767d4e265d8264d731f4608068,first whack at a better deserializer for RFC1123 datetimes
kevin-montrose,2015-03-14 20:27:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/30c3481c26d18263e271ac1be90ec0f6dd8698a7,30c3481c26d18263e271ac1be90ec0f6dd8698a7,start work on deserializer support for RFC1123
kevin-montrose,2015-03-14 20:09:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4d38c7a5a3e38b0641722266a37dd9612d46db6b,4d38c7a5a3e38b0641722266a37dd9612d46db6b,specify a timespan handler for rfc1123 serialization
kevin-montrose,2015-03-11 00:01:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8c61a906ea138218a4dbebe8d7062b8509683ec1,8c61a906ea138218a4dbebe8d7062b8509683ec1,last conversion to a enum for writing to strings for RFC1123
kevin-montrose,2015-03-10 23:56:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8d12f5c392d27077cea6566f21e5e5df1ce7cac1,8d12f5c392d27077cea6566f21e5e5df1ce7cac1,comment why this is
kevin-montrose,2015-03-10 23:33:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d22a9de00e2e5331febfd3370354ac469b1c43b6,d22a9de00e2e5331febfd3370354ac469b1c43b6,wrangle some of the new string constants into a char array for rfc1123
kevin-montrose,2015-03-10 22:45:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/36e529e0ab5c7267fec740c056d4babbcccd7a65,36e529e0ab5c7267fec740c056d4babbcccd7a65,implementation of rfc1123 to string serializer
kevin-montrose,2015-03-10 22:38:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2c8d1e513ccc3bf3625dd538c0c0d71e0eafeb27,2c8d1e513ccc3bf3625dd538c0c0d71e0eafeb27,faster implementation of rfc1123 to textwriters
kevin-montrose,2015-03-10 22:04:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d7e437cb144e7930f5430ce0878960396032bfb,0d7e437cb144e7930f5430ce0878960396032bfb,hooks for better rfc1123 impl
kevin-montrose,2015-03-10 00:57:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9b8f98ef6ec4a3dd4d3790ef53e0df8d174a3b9d,9b8f98ef6ec4a3dd4d3790ef53e0df8d174a3b9d,get started on the serialize side of #63 with a really crummy implementation
kevin-montrose,2015-03-08 02:31:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/417de062472b799b6c4166464ad55d8fcb6b8100,417de062472b799b6c4166464ad55d8fcb6b8100,"Merge pull request #122 from breyed/patch-1

Update README.md"
breyed,2015-03-08 02:30:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f58898e3e71afaae765f3a8306e46cc0e8940c94,f58898e3e71afaae765f3a8306e46cc0e8940c94,"Update README.md

fixed spelling"
kevin-montrose,2015-02-26 21:32:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c9d6561a4c58d1fcd90330035ca25f20eb6bdb20,c9d6561a4c58d1fcd90330035ca25f20eb6bdb20,"public interface regression test, it's happened twice now soooo.... yeah, autofail is preferable"
kevin-montrose,2015-02-25 05:38:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3af7a8987aaf9b4623ce4862d8a0a52c973ee4e7,3af7a8987aaf9b4623ce4862d8a0a52c973ee4e7,further extend tests just to be sure; looks like I've fixed #117
kevin-montrose,2015-02-25 05:31:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/69f52ed5deefe52784fb107fc4f9a253b404b9a9,69f52ed5deefe52784fb107fc4f9a253b404b9a9,fix aforementioned oversight for static deserialization (continuing #117)
kevin-montrose,2015-02-25 05:23:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/45f9c932b0061e403f51c9f483958ecb1459b3f5,45f9c932b0061e403f51c9f483958ecb1459b3f5,fix aforementioned oversight for dynamic deserialization (continuing #117)
kevin-montrose,2015-02-25 05:18:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/82798a177dc9fa7d0e2f8293546d7dc8899cf485,82798a177dc9fa7d0e2f8293546d7dc8899cf485,"*sigh*, another oversight w.r.t. #117"
kevin-montrose,2015-02-25 05:11:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/06de4bee34c67b76d2b8c9f9fa47aaaef8e6e67f,06de4bee34c67b76d2b8c9f9fa47aaaef8e6e67f,"more work towards #117, this time for dynamic deserialization"
kevin-montrose,2015-02-25 04:51:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/42ed61ffa678becd5f71040d69c647f1c92bd171,42ed61ffa678becd5f71040d69c647f1c92bd171,failing test for #117 in dynamic deserialization
kevin-montrose,2015-02-25 02:30:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/115ac0eb53c599b04f03484782c5d778373a4f03,115ac0eb53c599b04f03484782c5d778373a4f03,and now fixup signed integral types; exhaustive tests run successfully
kevin-montrose,2015-02-24 06:05:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9b97349ed10afbabe9057e4a5bc7e66328f10703,9b97349ed10afbabe9057e4a5bc7e66328f10703,fix unsigned integral types for #117
kevin-montrose,2015-02-24 06:01:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e3103bcce1213788795d70a9682c01b90c0aa7a8,e3103bcce1213788795d70a9682c01b90c0aa7a8,fix all the floating points problems for #117
kevin-montrose,2015-02-24 05:53:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d38f2e09fb7aa93ca5b9b1e2db6ed1e13d7c9b0d,d38f2e09fb7aa93ca5b9b1e2db6ed1e13d7c9b0d,"extend test cases for #117; even more fail, double **sigh**"
kevin-montrose,2015-02-24 05:44:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9151b0ad9fbf77d410055b15aa1e25e5889f1ab7,9151b0ad9fbf77d410055b15aa1e25e5889f1ab7,a whole bunch more failing tests for #117
kevin-montrose,2015-02-24 05:37:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e52207b7340008938e44b302075ee4e103b51ed1,e52207b7340008938e44b302075ee4e103b51ed1,stopgap commit; and again for doubles
kevin-montrose,2015-02-24 05:32:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/56f786fe17bd9b8df5df824b2234eb558aba79cc,56f786fe17bd9b8df5df824b2234eb558aba79cc,stopgap commit; and now floats for #117
kevin-montrose,2015-02-24 05:29:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/848e61d46cb569c21736804ea59f856924f80d5d,848e61d46cb569c21736804ea59f856924f80d5d,stopgap commit; finish out decimals for #117
kevin-montrose,2015-02-24 05:26:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0e55d4a6d62c7e3c70fefa2993d4573638bf25ce,0e55d4a6d62c7e3c70fefa2993d4573638bf25ce,stopgap commit; another decimal path for #117
kevin-montrose,2015-02-24 05:21:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dc302e89cde3ac0fd6ed65913431710e4683cecc,dc302e89cde3ac0fd6ed65913431710e4683cecc,"fixing one path in deserializing numbers for #117; one of several, **sigh**"
kevin-montrose,2015-02-24 04:01:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3f5e117596f7d495a5071fc0833ef1e2e0cd9a4f,3f5e117596f7d495a5071fc0833ef1e2e0cd9a4f,fix for #119
kevin-montrose,2015-02-24 03:58:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ba54acb77aef0c74e6153b0331734b50fde9b214,ba54acb77aef0c74e6153b0331734b50fde9b214,add test for #119
kevin-montrose,2015-02-18 21:55:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c0a8c6324ef8d665867d795e23963e3b417840f3,c0a8c6324ef8d665867d795e23963e3b417840f3,2.8.1
kevin-montrose,2015-02-18 21:52:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6467be6fd82d97f5a041589b004375e38f4f47a2,6467be6fd82d97f5a041589b004375e38f4f47a2,fix failing test
kevin-montrose,2015-02-18 21:51:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9f07981df07c6ca57ef11259b831d9202288b0e7,9f07981df07c6ca57ef11259b831d9202288b0e7,"failing test for Dictionary<string, Dictionary<string, foo>> when excluding nulls"
kevin-montrose,2015-02-15 04:01:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/26eea4e16b87a4dba75bad173182cde2752fdf9d,26eea4e16b87a4dba75bad173182cde2752fdf9d,add a test for #117
kevin-montrose,2015-02-15 03:38:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6daab8eae24bf36a191b069057cb6004894e7134,6daab8eae24bf36a191b069057cb6004894e7134,"tests, fixes #108"
kevin-montrose,2015-02-15 03:27:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2ac307a86c787148d0a236777a5988ff8f8c0bd9,2ac307a86c787148d0a236777a5988ff8f8c0bd9,fix TODO and oversight in #108 changes
kevin-montrose,2015-02-15 02:56:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9b94cb69a1916a6fd397812a8dcac780850a5151,9b94cb69a1916a6fd397812a8dcac780850a5151,delete temporary constructors
kevin-montrose,2015-02-15 02:51:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3c4a0708151025fa1702bcb17819748f5b254f11,3c4a0708151025fa1702bcb17819748f5b254f11,finishing up the IL for #108
kevin-montrose,2015-02-15 00:54:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d3d7f3b5ef3b4519cae3ddcc1a3cedc1719a1c85,d3d7f3b5ef3b4519cae3ddcc1a3cedc1719a1c85,"even more work on #108, now converting some of the IL generated"
kevin-montrose,2015-02-14 23:07:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/756f52adf8f902d6327cb446cf8b4793a05cdd2d,756f52adf8f902d6327cb446cf8b4793a05cdd2d,indicate whether the stream ends in most of the C# code; still more needed for #108
kevin-montrose,2015-02-14 22:32:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/74a24939334a35cb24c55fcbd212e8336cbabb78,74a24939334a35cb24c55fcbd212e8336cbabb78,"get started working on #108, indicating if a reader ended early in deserialization exceptions"
kevin-montrose,2015-02-14 22:00:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d48eb4ae588e56887a03a3946caf14ef11bd46d0,d48eb4ae588e56887a03a3946caf14ef11bd46d0,2.8.0
kevin-montrose,2015-02-14 21:34:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0f81e775a8f3529975f60dbb5f806f09bac8d198,0f81e775a8f3529975f60dbb5f806f09bac8d198,speed proof test that TypeConverter is faster than trial casts
kevin-montrose,2015-02-14 20:55:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8d6b5bbc81b912eff8b168424319a59f9baf83b7,8d6b5bbc81b912eff8b168424319a59f9baf83b7,test enums in TypeConverter
kevin-montrose,2015-02-14 20:53:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/65c2a3b683cb478689f99401002acb69c77a5db3,65c2a3b683cb478689f99401002acb69c77a5db3,even more TypeConverter test cases
kevin-montrose,2015-02-14 20:32:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5512bb8fc83ce0d8388f121460cc4ee748448d70,5512bb8fc83ce0d8388f121460cc4ee748448d70,Merge branch 'master' of github.com:kevin-montrose/Jil into type-converter
kevin-montrose,2015-02-14 20:32:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d62dd5c2d06042e47e184497b1f5001c8fabb509,d62dd5c2d06042e47e184497b1f5001c8fabb509,bring dynamic deserialization into line with the new treatment of DateTimeOffsets
kevin-montrose,2015-02-14 19:56:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6543d002196df4bb03f42d245c592d11ecc8eb39,6543d002196df4bb03f42d245c592d11ecc8eb39,"more type converter work, plus some failing datetime tests"
kevin-montrose,2015-02-14 19:26:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ff928cfa79f90c84eb53ffe2aac7220597aa1c58,ff928cfa79f90c84eb53ffe2aac7220597aa1c58,Merge branch 'master' of github.com:kevin-montrose/Jil into type-converter
kevin-montrose,2015-02-14 19:25:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/85acb2bacee5b1525c3ce8dbb92356d8a3bc1573,85acb2bacee5b1525c3ce8dbb92356d8a3bc1573,more README tweaks
kevin-montrose,2015-02-01 22:13:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0a423751755c19076903ed53edb57ce2723a0c19,0a423751755c19076903ed53edb57ce2723a0c19,"a little more support, still hacky but an explicit context bind happens now"
kevin-montrose,2015-02-01 21:26:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/647d242c5538c285ee8170e79d4d0f69a266e3b8,647d242c5538c285ee8170e79d4d0f69a266e3b8,"oh boy is this hacky as hell; proof of concept for a TypeConverter impl for dynamic; I'm not sure this is a good idea, I need to read up more... maybe ask an SO question for some doc help too"
kevin-montrose,2015-01-30 18:53:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c625319ac02a1033c109de990e4cf314f456d0ae,c625319ac02a1033c109de990e4cf314f456d0ae,Merge branch 'master' of github.com:kevin-montrose/Jil into datetime-sanity
kevin-montrose,2015-01-30 18:45:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c89ef18e47fe0353be93093c03720a3c8bd986d8,c89ef18e47fe0353be93093c03720a3c8bd986d8,2.7.2
kevin-montrose,2015-01-30 18:43:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ddd686fecdf810f0f1ce5774414003dc32eb939f,ddd686fecdf810f0f1ce5774414003dc32eb939f,fixes #111; closes #112
kevin-montrose,2015-01-30 18:37:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7dc9ddd9b48ef5417b0662f498b6460eda8db3cf,7dc9ddd9b48ef5417b0662f498b6460eda8db3cf,"actually test that *static* deserializer in the *static* deserializer tests, blargh"
kevin-montrose,2015-01-30 18:36:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/66b1e9e6d90eaffaad22453d3e55c4e4f479070b,66b1e9e6d90eaffaad22453d3e55c4e4f479070b,"add tests for #111; fails in both dynamic and static cases, woops"
kevin-montrose,2015-01-28 18:38:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dd643ae32fa98457191aca9cf5c81bc1d810ee38,dd643ae32fa98457191aca9cf5c81bc1d810ee38,2.7.1
kevin-montrose,2015-01-28 00:29:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/98137c06f2255753eb78221ec61c75516a075409,98137c06f2255753eb78221ec61c75516a075409,Merge branch 'master' of github.com:kevin-montrose/Jil into datetime-sanity
kevin-montrose,2015-01-28 00:25:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0064a24bf0b4bad4c3399e3beabfe8c70573b7f2,0064a24bf0b4bad4c3399e3beabfe8c70573b7f2,fix a missed case where reading from a stream that doesn't support seeks could go sideways
kevin-montrose,2015-01-25 22:29:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bf48357f0131981fd0aab52765df616f5a130037,bf48357f0131981fd0aab52765df616f5a130037,Merge branch 'master' of github.com:kevin-montrose/Jil into datetime-sanity
kevin-montrose,2015-01-25 22:28:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/67cca17095daf6abd11a1535aa60fcfb237efe91,67cca17095daf6abd11a1535aa60fcfb237efe91,update README to update outdated link as implied by #106
kevin-montrose,2015-01-25 22:25:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c2b676ad11702e82b1db0c2f043dd9ebb2b1abca,c2b676ad11702e82b1db0c2f043dd9ebb2b1abca,update copyright dates on LICENSE
kevin-montrose,2015-01-25 22:24:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d87266c5523fed6ab117a9e44a116fd3e7b69f9,0d87266c5523fed6ab117a9e44a116fd3e7b69f9,preserve the timezone offset when deserialization DateTimeOffsets
kevin-montrose,2015-01-25 22:04:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5fae5981fb9d48683a9d93390bdf4d2302face53,5fae5981fb9d48683a9d93390bdf4d2302face53,"update README for new datetime handling rules; closes #81 and #79, rule becomes 'if you want timezone information, use DateTimeOffset' ; DateTime now explicitly works in UTC, handling of DateTimeKind.Unspecified controlled by UnspecifiedDateTimeKindBehavior"
kevin-montrose,2015-01-25 21:58:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b53fe9dc979ba07df30feaeceac4fc2535260e01,b53fe9dc979ba07df30feaeceac4fc2535260e01,"upon further investigation, serializing timezone info when using DateTimeFormat.NewtonsoftStyle makes no sense (the value is ignored during deserialization); this wraps up ISO8601 serialization support for timezones when working with DateTimeOffsets"
kevin-montrose,2015-01-25 21:51:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d3f4c592e8d3258a87697b5cea6b641dbfdf3e95,d3f4c592e8d3258a87697b5cea6b641dbfdf3e95,implement ISO8601 serialization support for timezoneoffsets with DateTimeOffsets
kevin-montrose,2015-01-25 21:31:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9ad7d32811dc4ea3707e15c7108423189f7c629d,9ad7d32811dc4ea3707e15c7108423189f7c629d,get started on explicitly serializing DateTimeOffsets with their offset (provided they aren't in UTC time)
kevin-montrose,2015-01-25 02:16:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a0b08f4b94cc419be3734d9cc38a88aa997c1ad6,a0b08f4b94cc419be3734d9cc38a88aa997c1ad6,add Options for 'it's a UTC date and I know it' configurations
kevin-montrose,2015-01-25 02:10:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4e76cdafa23d1daeb76cb9c53e7c9e93bbbfb521,4e76cdafa23d1daeb76cb9c53e7c9e93bbbfb521,hookup typecaches appropriately for datetimekind.unspecified handling; still needs it all added to Options
kevin-montrose,2015-01-25 01:37:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/028a99f3dea868f65fe657a82bd88250a2af6708,028a99f3dea868f65fe657a82bd88250a2af6708,"explicitly convert to the configured DateTimeKind; supercedes and closes #104; Options still needs work, and test cases needed"
kevin-montrose,2015-01-25 01:29:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/59d4aaba9f83c27cd9a7fdf2187fdd4c4aff8a07,59d4aaba9f83c27cd9a7fdf2187fdd4c4aff8a07,consolidate 'turn into UTC'-logic for DateTimes in serialization
kevin-montrose,2015-01-25 01:21:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/81426759f8543b5cc18e9804e6545ba1cdd428a7,81426759f8543b5cc18e9804e6545ba1cdd428a7,Merge branch 'master' of github.com:kevin-montrose/Jil into datetime-sanity
kevin-montrose,2015-01-25 01:21:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6f471fc39c21269e7d050b11ee0e041f065524c0,6f471fc39c21269e7d050b11ee0e041f065524c0,fix DEBUG builds of Jil.StrongName
kevin-montrose,2015-01-25 01:20:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/38b104defc06dd340ef878587e3ee555a4ccac4c,38b104defc06dd340ef878587e3ee555a4ccac4c,punch UnspecifiedDateTimeKindBehavior into Options and InlineSerializer
kevin-montrose,2015-01-24 21:30:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dccdbc1e815082edcdf5a0dc04565aa0bb8cdd1c,dccdbc1e815082edcdf5a0dc04565aa0bb8cdd1c,add Jil.StrongName
kevin-montrose,2015-01-24 21:11:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/11d6504e7b7c44c350850eab3edd3d25c654ae72,11d6504e7b7c44c350850eab3edd3d25c654ae72,update copyright date
kevin-montrose,2015-01-24 21:11:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4cfb50a352a7fb83b98097793aef2145f726baca,4cfb50a352a7fb83b98097793aef2145f726baca,update Sigil to 4.4.0
kevin-montrose,2015-01-04 23:43:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/14bb7ede69ccf43cfdd31ab608243125d845371e,14bb7ede69ccf43cfdd31ab608243125d845371e,add a whole bunch of comments calling out when explicit casts are required for DLR reasons
kevin-montrose,2015-01-04 21:08:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6114941d0359a3ac0cfd2f62eaf8c6bb92b2103b,6114941d0359a3ac0cfd2f62eaf8c6bb92b2103b,2.7.0
kevin-montrose,2015-01-04 21:05:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3af3acafb28b365b54baec10bff4b1d97b4d0e59,3af3acafb28b365b54baec10bff4b1d97b4d0e59,private constructor support + tests; fixes #92; re-implements and closes #93
kevin-montrose,2015-01-04 20:40:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8f4060d31fccf76dd033841e917f08d1ef9e34b4,8f4060d31fccf76dd033841e917f08d1ef9e34b4,"Merge pull request #99 from alexandrnikitin/RemovesUnusedVariables

Removes unused variables"
kevin-montrose,2015-01-04 20:38:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e6faa137ad723e0907ca493177faf7bacbaf555e,e6faa137ad723e0907ca493177faf7bacbaf555e,"Merge pull request #98 from alexandrnikitin/FixesSmallMisprint

Fixes small misprints"
kevin-montrose,2015-01-02 17:10:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7a46ef331cd67d2a306c76e62e4d7cbf029496f7,7a46ef331cd67d2a306c76e62e4d7cbf029496f7,"Merge pull request #102 from deanward81/master

Fixes #101"
kevin-montrose,2014-12-30 05:06:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b56b0ebd3cc22423e7dcb1a76cd6a0fc6d33415f,b56b0ebd3cc22423e7dcb1a76cd6a0fc6d33415f,Update Benchmark figures and links for 2.6.0; it's been awhile.
kevin-montrose,2014-12-30 04:05:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7915b2e8897024e82628c514d63af596fcfd5013,7915b2e8897024e82628c514d63af596fcfd5013,2.6.0
kevin-montrose,2014-12-29 20:30:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9d5ee8d6b8c8d15eb70d0ac3959b9215c0b564fd,9d5ee8d6b8c8d15eb70d0ac3959b9215c0b564fd,"permutate order for benchmark, taking median; fix bugs with reporting protobuf speed"
kevin-montrose,2014-12-29 00:36:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5be8f6c3d85687d6d47430caca18c7bfa0c19c45,5be8f6c3d85687d6d47430caca18c7bfa0c19c45,sticky to a single processor for consistency
kevin-montrose,2014-12-28 23:49:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4341bb06b230f2cdb64f0d97f8df2037de71a103,4341bb06b230f2cdb64f0d97f8df2037de71a103,kick up # iterations; I'm not sure I believe these numbers for protobuf-net
kevin-montrose,2014-12-28 23:18:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1c3819718e19ad88fe5f4ab8eb7af02dc7183c20,1c3819718e19ad88fe5f4ab8eb7af02dc7183c20,"more updates to Benchmark, now including deserialization"
kevin-montrose,2014-12-28 23:02:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3745635e7885013cdfaf7591ad789a1c62964b42,3745635e7885013cdfaf7591ad789a1c62964b42,better benchmarking output
kevin-montrose,2014-12-28 22:32:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c93ab5b6c003994ab31d713d665600f923e4fd6d,c93ab5b6c003994ab31d713d665600f923e4fd6d,"meh, this is all dead"
kevin-montrose,2014-12-28 22:12:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/66a2b1d5416cf5581de971cb5d754c186628e6ab,66a2b1d5416cf5581de971cb5d754c186628e6ab,fixes around Benchmark; this code has atrophied pretty badly
kevin-montrose,2014-12-28 17:10:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eb2a5ddedcd27f9d20cfa13e3ece62a55916653a,eb2a5ddedcd27f9d20cfa13e3ece62a55916653a,update servicestack to it's last BSD release
kevin-montrose,2014-12-28 17:07:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/72c90e7afae76834d112d3acb42ca23f1e16aa1a,72c90e7afae76834d112d3acb42ca23f1e16aa1a,"update newtonsoft and simplespeedtester in benchmark; need to dig into servicestack more, their license is non-trivial"
kevin-montrose,2014-12-28 16:58:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/628162479c239b49a055ca26efe893859c206b20,628162479c239b49a055ca26efe893859c206b20,Merge branch 'master' of github.com:kevin-montrose/Jil into timespan-support
kevin-montrose,2014-12-28 16:57:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b7778dcd244afdcb654b29a3da3509c25c480bdf,b7778dcd244afdcb654b29a3da3509c25c480bdf,hash usage is no longer configurable
kevin-montrose,2014-12-28 16:57:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5f7c1f518f86907c3ca621daa50541360dd3fd73,5f7c1f518f86907c3ca621daa50541360dd3fd73,update README w.r.t. TimeSpan support
kevin-montrose,2014-12-28 16:47:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a222b730a6917b5fad9a260da3f0cce7e11819cd,a222b730a6917b5fad9a260da3f0cce7e11819cd,Merge branch 'master' of github.com:kevin-montrose/Jil into timespan-support
kevin-montrose,2014-12-28 16:46:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/243737e5c1309a9344ec81edc801533dc41a26a2,243737e5c1309a9344ec81edc801533dc41a26a2,"use the binary search char matcher in automata in all cases where it's actually more efficient; eschew a hard coded switch over, actually do the math"
kevin-montrose,2014-12-28 02:36:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7b8a41f1e56f11c629e3ad134ee717800907bc93,7b8a41f1e56f11c629e3ad134ee717800907bc93,eliminate the switch case in NameAutomata; it's not an optimization
kevin-montrose,2014-12-28 02:34:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3f0fc351c272ad62c09fadb3dfea9252d0bf4e03,3f0fc351c272ad62c09fadb3dfea9252d0bf4e03,"speed proof for binary search; which does appear to be faster, though veeeeery marginally"
kevin-montrose,2014-12-28 02:28:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ae46dbf507a77ff9e6b8c9afe10488c7aad8050a,ae46dbf507a77ff9e6b8c9afe10488c7aad8050a,speed proof test for switches; looks like it's actually *not* faster... which is interesting
kevin-montrose,2014-12-28 01:55:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ded34f34e96e07b7ac6a784850cead87700fff2b,ded34f34e96e07b7ac6a784850cead87700fff2b,get started on smarter individual character matching in NameAutomata
kevin-montrose,2014-12-28 01:22:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d71b7f73d78bdbbce107698dc968cd3cb07ac7ea,d71b7f73d78bdbbce107698dc968cd3cb07ac7ea,"refactor this into a method, to finally TODONE this ancient TODO"
kevin-montrose,2014-12-28 01:18:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1212907d48d17c6ffe27142dcc5b57dc046045d9,1212907d48d17c6ffe27142dcc5b57dc046045d9,a little bit of style-cleanup
kevin-montrose,2014-12-28 01:12:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1a3b853bc798e8279cee068935f2f335085eccfd,1a3b853bc798e8279cee068935f2f335085eccfd,fix list items in README
kevin-montrose,2014-12-28 01:10:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e127b604148aaa6f7c100b6fe1b8e9a0391d4d53,e127b604148aaa6f7c100b6fe1b8e9a0391d4d53,"fix too-eager conversion bug with newtonsoft-style TimeSpans in dynamic objects; this should wrap up TimeSpan support, closes #41"
kevin-montrose,2014-12-28 01:00:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d1b78a816125fc18eaae02d444331a26d9c15ab,0d1b78a816125fc18eaae02d444331a26d9c15ab,"finish out dynamic support for TimeSpan; something's wonky though, roundtrips convert things to timespans that shouldn't be"
kevin-montrose,2014-12-27 20:39:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9d7d17a5f4a50b77138e726f3ee34e44aeb534db,9d7d17a5f4a50b77138e726f3ee34e44aeb534db,implement dynamic deserialization support for ISO8601-style TimeSpans
kevin-montrose,2014-12-27 20:27:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0fc91ae7f3888ddec75d488f75db6d1d60e36d10,0fc91ae7f3888ddec75d488f75db6d1d60e36d10,implement dynamic deserialization support for Newtonsoft-style TimeSpans
kevin-montrose,2014-12-27 20:22:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0286af607b1697b1566a3e17a85bbed4dd622a1b,0286af607b1697b1566a3e17a85bbed4dd622a1b,a little re-org and some more framework setup for dynamic timespan support
kevin-montrose,2014-12-27 20:14:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/295b38596b1020b549e0a1b8f4882fcea772cd5e,295b38596b1020b549e0a1b8f4882fcea772cd5e,Merge branch 'master' of github.com:kevin-montrose/Jil into timespan-support
kevin-montrose,2014-12-27 20:13:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bdc2166adacdc456c5893dcd7110bdcefaf26e60,bdc2166adacdc456c5893dcd7110bdcefaf26e60,handle serialization of dynamic DateTimes in the newtonsoft and iso8601 formats more efficiently
kevin-montrose,2014-12-27 20:11:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/88f38339ac17a6e78e2b2e4e74a17349eca6e7e1,88f38339ac17a6e78e2b2e4e74a17349eca6e7e1,implement ISO8601 week TimeSpan support; blargh
kevin-montrose,2014-12-27 19:44:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1cfb43af930ec0877038050ad42490f9af0a8d9e,1cfb43af930ec0877038050ad42490f9af0a8d9e,"so far as I can tell, fractional values aren't really universally supported in the bigger parts of an ISO8601 TimeSpan in .NET land; so forbidding fractions in year, month, week, and day for now"
kevin-montrose,2014-12-27 19:13:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/783ac120b0e20ecc0c56585dfc24e4b00e542d8e,783ac120b0e20ecc0c56585dfc24e4b00e542d8e,stub out some framework and tests for dynamic support for TimeSpans
kevin-montrose,2014-12-27 18:45:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1b5f01745805ca88f0748e9faa3fea150605ebf8,1b5f01745805ca88f0748e9faa3fea150605ebf8,Merge branch 'master' of github.com:kevin-montrose/Jil into timespan-support
kevin-montrose,2014-12-27 18:44:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/90f381ab3b86842989455c3a5d7af5ccec2dce6c,90f381ab3b86842989455c3a5d7af5ccec2dce6c,fix datetimeoffset support for second and millisecond datetimeformats in dynamic deserialization
kevin-montrose,2014-12-26 05:19:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c5d67899ee1b885b4f03365f31fb64b365cd42f8,c5d67899ee1b885b4f03365f31fb64b365cd42f8,start work on dynamic-serialization support for TimeSpans
kevin-montrose,2014-12-26 05:07:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a7fe3cedb7c6ed33fbc763623129f69613c6c34d,a7fe3cedb7c6ed33fbc763623129f69613c6c34d,remove an allocation in the newtonsoft-style timespan code
kevin-montrose,2014-12-26 05:02:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/97bd29d3d11ed3547495c5751b1e7be6a8757fbe,97bd29d3d11ed3547495c5751b1e7be6a8757fbe,commas can take the place of periods in ISO8601 durations
kevin-montrose,2014-12-26 04:42:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8272508479a26986065f72f2281313edd6b12a9f,8272508479a26986065f72f2281313edd6b12a9f,kill the string allocation when deserializing ISO8601 TimeSpans
kevin-montrose,2014-12-26 04:28:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/072f1b28f61e4318b020aefd067e549b608f75c2,072f1b28f61e4318b020aefd067e549b608f75c2,little bit of re-org before moving on
kevin-montrose,2014-12-26 04:20:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8c7a1ad56aec95b7ff632d40734c1ac0f87e2aae,8c7a1ad56aec95b7ff632d40734c1ac0f87e2aae,"wrap up initial TimeSpan deserialization support; lots of little error cases to handle, but the basics are complete; not super pleased with the string allocation that happens here though..."
kevin-montrose,2014-12-25 05:33:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9eac6b06e629fc4048ef0b7451ba18cd37e13f2c,9eac6b06e629fc4048ef0b7451ba18cd37e13f2c,fix second and millisecond timespan deserializations when working around the min/max edges
kevin-montrose,2014-12-25 03:36:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/43e3e6c5ee708c0942816c4a91f4cbcd6b5d7eb4,43e3e6c5ee708c0942816c4a91f4cbcd6b5d7eb4,"small tweaks to ISO8601 timespan deserialization, still slightly broken; made some tests a little more thorough revealing some issues in other TimeSpan deserialization as well"
kevin-montrose,2014-12-25 03:23:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2daa48691a1898f833e920557e52def2a83ebed8,2daa48691a1898f833e920557e52def2a83ebed8,a little more work on ISO8601 timespan deserialization support; still edgecases around min/max values
kevin-montrose,2014-12-25 02:47:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5407a4b68fee368acff604dd2cc05cebbe8dcf3f,5407a4b68fee368acff604dd2cc05cebbe8dcf3f,get started on ISO8601 timespan deserialization support
kevin-montrose,2014-12-25 00:02:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/410a21e6dcb094d0bb9682159af9a69ca36686f7,410a21e6dcb094d0bb9682159af9a69ca36686f7,finish Newtonsoft TimeSpan support
kevin-montrose,2014-12-24 23:34:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1a8167f92243e9891240e0a32b6a68554e1accb0,1a8167f92243e9891240e0a32b6a68554e1accb0,get started on Newtonsoft-style (ie. default .NET style) TimeSpan deserialization support
kevin-montrose,2014-12-24 22:51:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8afaaa0e392696f7d5285d8bebc069fd70be2e56,8afaaa0e392696f7d5285d8bebc069fd70be2e56,merge
kevin-montrose,2014-12-05 02:44:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c9b098a6374e1b7d708d1e979dfafcb0f0de702c,c9b098a6374e1b7d708d1e979dfafcb0f0de702c,2.5.2
kevin-montrose,2014-12-05 02:40:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/96f7b25d25a1754610906c8708939cca293f17eb,96f7b25d25a1754610906c8708939cca293f17eb,update Sigil to 4.3.1; fixes #95; hoboy
kevin-montrose,2014-12-05 02:27:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/75d2ce7d1f79bf1ebef77ab61dd08bfb8757a825,75d2ce7d1f79bf1ebef77ab61dd08bfb8757a825,"woops; commit a *test* for #95, not investigative hacking for the fix"
kevin-montrose,2014-12-05 02:04:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/78f820ff44106300e60d1924b9f96e2ecfce33c7,78f820ff44106300e60d1924b9f96e2ecfce33c7,test for #95
kevin-montrose,2014-12-04 21:28:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/325deda04be8bf78c3091563b6008ba80aee4a5e,325deda04be8bf78c3091563b6008ba80aee4a5e,2.5.1
kevin-montrose,2014-12-04 21:25:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8ed8d152817c2dad9fdd1d72171b547d0ef70ed2,8ed8d152817c2dad9fdd1d72171b547d0ef70ed2,make this test a little nuttier for thoroughness' sake
kevin-montrose,2014-12-04 21:22:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cd2af31ad995f31c18732cb455a03750bcdb9784,cd2af31ad995f31c18732cb455a03750bcdb9784,"let's double-double check recursion + dynamic + inheritence in here, it's crazy easy to go wrong"
kevin-montrose,2014-12-04 21:03:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b28db5755c8394994609bc7800f33621f23940f0,b28db5755c8394994609bc7800f33621f23940f0,fix issue with recursively defined types being dynamically serialized
kevin-montrose,2014-12-04 17:04:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3b154a8675c552cb79754bfe0576ef5fc8d2a17f,3b154a8675c552cb79754bfe0576ef5fc8d2a17f,start of a test for a new dynamic serialization bug
kevin-montrose,2014-12-04 03:57:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cf38a779b714aecad3e56c8669904ad89522651e,cf38a779b714aecad3e56c8669904ad89522651e,2.5.0
kevin-montrose,2014-12-04 03:54:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7e44e657b327f6130c619787104eb2a9f3751f4f,7e44e657b327f6130c619787104eb2a9f3751f4f,and restore ideal paths
kevin-montrose,2014-12-04 03:53:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2eda4aa9c32c3928d0730811facfecb34463aa31,2eda4aa9c32c3928d0730811facfecb34463aa31,fix some 'old code'-flag paths that have been broken over the last few weeks
kevin-montrose,2014-12-04 03:48:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f80610cc1d26f60100782fc5d7aed2cf5c6c1792,f80610cc1d26f60100782fc5d7aed2cf5c6c1792,better name for that enum property
kevin-montrose,2014-12-04 03:43:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bb72e857d2ad113d23e3318df22ccc70f31b54cf,bb72e857d2ad113d23e3318df22ccc70f31b54cf,deserialization support for converting integer primitive types to enum values based on JilDirectiveAttribute.SerializeEnumerationAs
kevin-montrose,2014-12-04 03:25:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/01ae7a9854703dd6ff6e3737047b11f6e77e2dfe,01ae7a9854703dd6ff6e3737047b11f6e77e2dfe,serialization support for converting enums to different primitive types based on a new JilDirectiveAttribute parameter
kevin-montrose,2014-12-04 02:10:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/670e0aee8b96f14c433cda9dfc89e29746fdc0ad,670e0aee8b96f14c433cda9dfc89e29746fdc0ad,more thorough tests for excluding nulls given the recent troubles
kevin-montrose,2014-12-04 02:00:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e110a18bdf8282fef1ad2c153f8a09114e5ea01a,e110a18bdf8282fef1ad2c153f8a09114e5ea01a,first whack at a fix for aforementioned nulls being omitted when they shouldn't be
kevin-montrose,2014-12-04 01:46:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e59800a0e6c2a0d2516849b287475b766a068d2e,e59800a0e6c2a0d2516849b287475b766a068d2e,add a test for an issue with null array members
kevin-montrose,2014-11-29 21:48:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/03e6baacbee143d5df9243a9321cc953bb331c0a,03e6baacbee143d5df9243a9321cc953bb331c0a,get started on deserializing timespans; knocks out support for Seconds and Milliseconds formats
kevin-montrose,2014-11-29 05:45:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e93dff280985d890929c29042fee44d7559840c3,e93dff280985d890929c29042fee44d7559840c3,ISO8601 serialization support when writing directly to a string
kevin-montrose,2014-11-29 04:48:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/35388afc3e48f10252c8ad0b3db3bae09357995c,35388afc3e48f10252c8ad0b3db3bae09357995c,get started on ISO8601 duration support
kevin-montrose,2014-11-29 04:07:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/db32de8f2dc1c929da550f336fb8359bb2bbf9e8,db32de8f2dc1c929da550f336fb8359bb2bbf9e8,add tests for seconds and milliseconds timespans
kevin-montrose,2014-11-29 03:50:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8d7ba98f04f6b74cb6562d8499a3e256fb3a61a6,8d7ba98f04f6b74cb6562d8499a3e256fb3a61a6,fix TimeSpan.MinValue case in newtonsoft style timespans
kevin-montrose,2014-11-29 03:47:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/86e374cb9c66ffa5eb89b0a5b2fc16b02f5956db,86e374cb9c66ffa5eb89b0a5b2fc16b02f5956db,get started on a serialize-to-string version of newtonsoft timespan support; a new test that uncovers some issues as well
kevin-montrose,2014-11-29 03:31:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d058a46e3c04cde00f0b2b5f33a74e8a839722a7,d058a46e3c04cde00f0b2b5f33a74e8a839722a7,put this test into exhaustive mode only
kevin-montrose,2014-11-29 01:12:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5e9e4e0bb126c85d60d172b4023a89423aae0dba,5e9e4e0bb126c85d60d172b4023a89423aae0dba,take a whack at Newtonsoft style timespans; with a crazy exhaustive (~9 hour) test
kevin-montrose,2014-11-27 22:36:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6df7be82c556ee9c7c4521e89ca59b3833b704bc,6df7be82c556ee9c7c4521e89ca59b3833b704bc,get started on timespan support
kevin-montrose,2014-11-27 21:54:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/505b75a141e25432921e78acf68a13fa2e5ba910,505b75a141e25432921e78acf68a13fa2e5ba910,fixup style in decimal code
kevin-montrose,2014-11-27 21:44:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8d42fbb806a3db51ae269bdd5a13cfdacba4dce5,8d42fbb806a3db51ae269bdd5a13cfdacba4dce5,"similar approach for decimals, closes #75, need to look at generic case regressions/perf to decide whether to ship this"
kevin-montrose,2014-11-27 21:08:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b6ed9b12eed0bb5997a59c042f14274a228a541c,b6ed9b12eed0bb5997a59c042f14274a228a541c,pull in fast double impl; these methods aren't actually faster *in general* only for subsets that are common; updating tests to reflect that; probably want to make these better before shipping...
kevin-montrose,2014-11-26 07:27:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3353f9fcb66809888ad7c2a7bdf516b582efa0a9,3353f9fcb66809888ad7c2a7bdf516b582efa0a9,*finally* get started pulling #75 in
kevin-montrose,2014-11-16 05:06:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8cfc806556ba4ef99816e7091cf9e5c0c43b84ef,8cfc806556ba4ef99816e7091cf9e5c0c43b84ef,2.4.0
kevin-montrose,2014-11-16 04:48:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/02b80dcee49e62891d89445ac61359ca3548e7b1,02b80dcee49e62891d89445ac61359ca3548e7b1,fix a bug where Jil attempts to serialize properties that require parameters on their getters
kevin-montrose,2014-11-16 04:05:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/513fb9a32aaff3417e83c2b2b5fee981b998c0e5,513fb9a32aaff3417e83c2b2b5fee981b998c0e5,"whelp, looks like this is mergeable; going to point to https://docs.google.com/spreadsheets/d/1Fz_a6HX4gC2CzmaoF5UOsCOHNN6RhviyEyH5JQ0yOIk/edit?usp=sharing to show general improvements for real objects"
kevin-montrose,2014-11-16 03:08:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/137fa83b1b7bc4101f159d697480c5676c97dd9a,137fa83b1b7bc4101f159d697480c5676c97dd9a,"fix null ref bug, play around w/ more profiling; there's still some work to do on object serialization it looks like..."
kevin-montrose,2014-11-16 03:04:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dba140eab4ef19b150c5cd57cb5380ec64522797,dba140eab4ef19b150c5cd57cb5380ec64522797,Merge branch 'master' of github.com:kevin-montrose/Jil into serialize-to-string
kevin-montrose,2014-11-13 19:04:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/26de27c95336d660768134c3edf5eaff06156380,26de27c95336d660768134c3edf5eaff06156380,2.3.1
kevin-montrose,2014-11-13 19:01:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d114f383616df5830e131409a7070991d198b51c,d114f383616df5830e131409a7070991d198b51c,make sure that TextReaders always support Peek(); otherwise we'll prematurely terminate on a false end-of-stream
kevin-montrose,2014-11-09 05:58:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/51380a3186dab4beebd2da785132cd617f8a55fe,51380a3186dab4beebd2da785132cd617f8a55fe,clean the stench of failure off this code
kevin-montrose,2014-11-09 05:56:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/642dbda8f2a4563f23e302ee8d9ade52cff046ad,642dbda8f2a4563f23e302ee8d9ade52cff046ad,"non-trivial testing strongly implies StringBuilder beats my old approach here; there's also some additional win in the collapse of the big lookup array into a set of smaller, related, and single-cache line ones"
kevin-montrose,2014-11-08 23:00:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/695ee8120679ed2b98488b95108583ef105d6d49,695ee8120679ed2b98488b95108583ef105d6d49,Array.Copy's 5 param version is the proper one to call in all cases
kevin-montrose,2014-11-08 22:33:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ed9a3d44c292630df212ec80501b6a85211536fa,ed9a3d44c292630df212ec80501b6a85211536fa,"targetted testing here; looks like arrays/lists are worse in the direct-to-string case, need to find out why"
kevin-montrose,2014-11-08 22:12:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ec15b62114f0c59b06b4a3dc2e14bf720ce1682e,ec15b62114f0c59b06b4a3dc2e14bf720ce1682e,gut Experiments project
kevin-montrose,2014-11-08 22:11:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c849308e38c880cb44f7c512e1f7a628aed28332,c849308e38c880cb44f7c512e1f7a628aed28332,restore stream writers; fix a name I must have been drunk when I chose
kevin-montrose,2014-11-08 22:09:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/df3f18cb3fe8583a367b30b4d637b4da569f5c1b,df3f18cb3fe8583a367b30b4d637b4da569f5c1b,merge
kevin-montrose,2014-11-08 21:51:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8830ff32f22fc6ace95117919305c35e4fc7a308,8830ff32f22fc6ace95117919305c35e4fc7a308,add a test case for issue #89
kevin-montrose,2014-11-02 23:36:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ff37cae5a13aca4c1cb16f5e83f053dae9361d18,ff37cae5a13aca4c1cb16f5e83f053dae9361d18,2.3.0
kevin-montrose,2014-11-02 23:34:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3c5714b3f6a8f9c9bfd149bdd126873e9c586b7f,3c5714b3f6a8f9c9bfd149bdd126873e9c586b7f,vs really wants to change this SLN
kevin-montrose,2014-11-02 23:22:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/55ed268a6c606b59843449199b3336eb26c6cf7a,55ed268a6c606b59843449199b3336eb26c6cf7a,more jsonescape tuning
kevin-montrose,2014-11-02 23:11:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5727ed44c8e53c2340091b4aa33bde8e013178fd,5727ed44c8e53c2340091b4aa33bde8e013178fd,can't leave this test in; same reason as last time
kevin-montrose,2014-11-02 23:10:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/363930beb1e3348d1ee95563258c86a3fa1c01ad,363930beb1e3348d1ee95563258c86a3fa1c01ad,speed up json encoding of members in serialize dynamic + test
kevin-montrose,2014-11-02 23:02:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/49482abe9bb9b79dd194d38be200255e050415fa,49482abe9bb9b79dd194d38be200255e050415fa,can't keep this test around for dynamics; hurts real-world perf
kevin-montrose,2014-11-02 23:01:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6283a89583ef94c33599647041fb9a28c63e5e23,6283a89583ef94c33599647041fb9a28c63e5e23,"quick and dirty test to prove the previous commit is actually faster; it is, about 35% faster in this test"
kevin-montrose,2014-11-02 22:54:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6f48647e5e376c758339a4fa3521df96aa5a0d5d,6f48647e5e376c758339a4fa3521df96aa5a0d5d,speed up visiting members of a dynamic jil object when serializing
kevin-montrose,2014-11-02 22:38:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/812577630f4f4cbdfc7d7a50a14a5d1ee2088d9d,812577630f4f4cbdfc7d7a50a14a5d1ee2088d9d,update Sigil to 4.3.0
kevin-montrose,2014-10-19 18:47:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b80153dbba6c721e84b79e2652126363cf2ba3b7,b80153dbba6c721e84b79e2652126363cf2ba3b7,2.2.0
kevin-montrose,2014-10-19 18:27:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/12cec0b0f9092eb45f713614641e8155ba10793a,12cec0b0f9092eb45f713614641e8155ba10793a,speed up the case when Jil is dynamically serializing an instance of it's own dynamic JsonObject class; should fix #87
kevin-montrose,2014-10-19 17:57:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2f1e8d1f4929d01ed3b87c21b5f32719bce14846,2f1e8d1f4929d01ed3b87c21b5f32719bce14846,Add a test for #87; this limit is kind of pulled out of the air
kevin-montrose,2014-10-18 22:09:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7312401cb95d4dbe1b874a155526474f83ba810f,7312401cb95d4dbe1b874a155526474f83ba810f,add a way to override the default Options used if one is omitted in calls to Serialize(Dynamic)/Deserialize(Dynamic) on JSON
kevin-montrose,2014-10-14 01:34:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0af0d8e4258958f93c1ac44368e86e1c628cdd5f,0af0d8e4258958f93c1ac44368e86e1c628cdd5f,provisional fix for error reporting related to #86; more work may be needed on this issue however
kevin-montrose,2014-10-14 01:31:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a017e34a3dc431b2a3cff2954aed3b43a1b35061,a017e34a3dc431b2a3cff2954aed3b43a1b35061,test for #86
kevin-montrose,2014-10-10 21:00:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f2bcbb9a8aa43a1126482f3063a573ed957275c6,f2bcbb9a8aa43a1126482f3063a573ed957275c6,"I control the impl here, I say inline it all"
kevin-montrose,2014-10-10 20:58:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ff9cbe0b50e544bf1035da5f3a89053d9cc512a6,ff9cbe0b50e544bf1035da5f3a89053d9cc512a6,convert calls to ThunkWriter.Write to ThunkWriter.WriteConstant if it's actually a constant string being written
kevin-montrose,2014-10-10 20:22:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5ebe1874764615603fc7d7e8a81677d0b8c9c129,5ebe1874764615603fc7d7e8a81677d0b8c9c129,woops; unbreak everything
kevin-montrose,2014-10-10 20:20:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ff8232ab0d59c4a01d51f8033225512c3bd77b6e,ff8232ab0d59c4a01d51f8033225512c3bd77b6e,avoid allocating or pinning known constant strings; instead go right for a super-fast Array.Copy
kevin-montrose,2014-10-10 19:34:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/310bcc6a67969c8e57130b72776f1c2b49775e98,310bcc6a67969c8e57130b72776f1c2b49775e98,faster ThunkWriter impl; going to a char[] instead of through StringBuilder
kevin-montrose,2014-10-10 19:25:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cb6f018c4315994ee4d409c46b8406822a6d9246,cb6f018c4315994ee4d409c46b8406822a6d9246,fix IReadOnlyDictionary support in ToString versions
kevin-montrose,2014-10-10 19:24:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9df77f96d840b2a4210e4484b559e428a9ac18ca,9df77f96d840b2a4210e4484b559e428a9ac18ca,merge
kevin-montrose,2014-10-10 18:54:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/03112ebd3098a1febee3cefe82f709482af5886f,03112ebd3098a1febee3cefe82f709482af5886f,DRY serializer TypeCaches as in #78
kevin-montrose,2014-10-10 18:13:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1a60e2b27d00858e8fb0597a052bcee33f688eaa,1a60e2b27d00858e8fb0597a052bcee33f688eaa,Merge branch 'consolidated-deserializer-type-cache' of github.com:manofstick/Jil into pr-78
kevin-montrose,2014-10-10 00:23:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/13324b7d414f062a000121ef594affdb6c0fa5c0,13324b7d414f062a000121ef594affdb6c0fa5c0,2.1.1
kevin-montrose,2014-10-10 00:18:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/16e3afcfae85e9ca288a3f7c90a45c91f5be90e2,16e3afcfae85e9ca288a3f7c90a45c91f5be90e2,update .gitignore
kevin-montrose,2014-10-09 22:19:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9c3801e54071f25dbf9a22e4ead53b765599ebfa,9c3801e54071f25dbf9a22e4ead53b765599ebfa,fix a verification bug in the DEBUG build around read-only lists
kevin-montrose,2014-10-09 22:11:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eb0d4d5c30bdc2ab4b7b70160a174739a4654ac1,eb0d4d5c30bdc2ab4b7b70160a174739a4654ac1,Merge branch 'read-only-interfaces' of github.com:manofstick/Jil into pr-68
kevin-montrose,2014-09-22 03:01:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9f8873edc5b897fc27ae87f3f90320f7d97a7e35,9f8873edc5b897fc27ae87f3f90320f7d97a7e35,"noop commit; just making a note that this is about where this appears to be faster for going straight to strings (TextWriter, still better when your streaming, but if you can eat the memory....)"
kevin-montrose,2014-09-22 02:49:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b026afff7574504a7c396be5602242872e390443,b026afff7574504a7c396be5602242872e390443,"heyyy, all the tests that matter pass now"
kevin-montrose,2014-09-22 02:23:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6639858d447de7fb9cc87021526188d02aeb5f0d,6639858d447de7fb9cc87021526188d02aeb5f0d,actually give ThunkWriter a (bad) implementation
kevin-montrose,2014-09-22 02:20:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/aa265ac07650502756834b1a0307efd4c8c23b30,aa265ac07650502756834b1a0307efd4c8c23b30,proxy all fetches for Method stuff in InlineSerializer so I can swap out the proper method w.r.t. ThunkWriter
kevin-montrose,2014-09-22 01:54:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4c1f653cdb5e339cafecd079eef2249d0048fd09,4c1f653cdb5e339cafecd079eef2249d0048fd09,"ok, ThunkWriter is thunked in most places in InlineSerializer now... Methods still needs a lot of love though"
kevin-montrose,2014-09-22 01:44:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6a791900676960996808e66cb80438580b03561b,6a791900676960996808e66cb80438580b03561b,even more infrastructure
kevin-montrose,2014-09-22 01:23:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e802df4cbd60a2d05a6e2b39cc9d6d604d2f7357,e802df4cbd60a2d05a6e2b39cc9d6d604d2f7357,more infrastructure
kevin-montrose,2014-09-22 01:15:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/802f643ad05c30c0601ea1875516bfb0d9a7ecf8,802f643ad05c30c0601ea1875516bfb0d9a7ecf8,derp derp WAE
kevin-montrose,2014-09-22 01:14:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9b06f545b48259e11ea9b7cad044d870d20b5367,9b06f545b48259e11ea9b7cad044d870d20b5367,"lay some groundwork for a faster Serialize<T> that returns a string; basically, let's not pay the TextWriter tax when it's not needed"
kevin-montrose,2014-09-22 00:22:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d72f8bccbb1d0ddd727f5840fc37ad7ed3a1aeca,d72f8bccbb1d0ddd727f5840fc37ad7ed3a1aeca,elide char[] in appropriate cases now; destroy dead test
kevin-montrose,2014-09-22 00:17:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/532a5bc011b69a6b3cf6157c4965085779a52cbd,532a5bc011b69a6b3cf6157c4965085779a52cbd,"stopgap commit; I don't think we actually *need* a separate char[] here, collapse to reduce memory pressure"
kevin-montrose,2014-09-22 00:06:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2e662ad2f200baee0918386ff0f1e46e38d93196,2e662ad2f200baee0918386ff0f1e46e38d93196,consolidate into inlines some methods; in prep of some more experiments
kevin-montrose,2014-09-21 23:58:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/882b299d9955b63b41adba9db8353bc864e82f83,882b299d9955b63b41adba9db8353bc864e82f83,merge + some stylistic fixes & removing a dead test
kevin-montrose,2014-09-21 23:07:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4ced4c3014947b0e9aefb9aa7165799a039d9630,4ced4c3014947b0e9aefb9aa7165799a039d9630,fix tests
kevin-montrose,2014-09-21 22:57:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/acc176dd6e2225cd7ecd9edcc2f25c4e7390d16d,acc176dd6e2225cd7ecd9edcc2f25c4e7390d16d,extend the end of stream test a bit
kevin-montrose,2014-09-21 22:46:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3f0239334fdc83f286c7c44105ea507e305ed24b,3f0239334fdc83f286c7c44105ea507e305ed24b,re-apply #67; closes #67
kevin-montrose,2014-09-21 22:20:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/09a4b50904bae25fcc06c15187809602b1615341,09a4b50904bae25fcc06c15187809602b1615341,"add a failing test for #67; pr isn't mergeable due to drift and containing some extra changesets; the report is real, pulling the fix in manually"
kevin-montrose,2014-09-21 20:01:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/76e9c9ca62ad71db163dd18a353416392ed6d9a6,76e9c9ca62ad71db163dd18a353416392ed6d9a6,"reduce test for #73 to minimal repro; fix #73, general error with converting internal list to array when the array is null"
kevin-montrose,2014-09-21 19:48:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/95a46ac5e0a5f212e1a511b90f6493ddcb62ac86,95a46ac5e0a5f212e1a511b90f6493ddcb62ac86,add a test for #73
kevin-montrose,2014-09-14 20:21:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/43647582068cc57d5b87d248b0b5643f163c3ee4,43647582068cc57d5b87d248b0b5643f163c3ee4,2.1.0
kevin-montrose,2014-09-11 20:11:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d3a3c4d9ae1248f173236eb431625d6352e5213,0d3a3c4d9ae1248f173236eb431625d6352e5213,"a little cleanup, a little uniformity; fixes #61"
kevin-montrose,2014-09-11 19:52:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8e12650e922edf89175915467b00268cf87c5947,8e12650e922edf89175915467b00268cf87c5947,"more work on #61; 'foreach' likes to insert a convert, so let's make sure we don't loose our magic dynamic behavior if that happens"
kevin-montrose,2014-09-11 18:28:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/70db60eaf7ed2268f82c2904ed75aa85f28d1575,70db60eaf7ed2268f82c2904ed75aa85f28d1575,working on #61; make the returns of .GetEnumerator for dynamic objects *also* dynamic; things can get a little dicy otherwise
kevin-montrose,2014-09-03 03:34:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/df2383d7ccfdd20bc7c2cf32c1003e1e58ce618f,df2383d7ccfdd20bc7c2cf32c1003e1e58ce618f,"add a Deserialize method that takes a Type, basically support non-generic calls of Deserialize at a small tax; fixes #60"
kevin-montrose,2014-09-11 20:11:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3fb9c4d9ef455e73c5edf9feee2adc8f4832584e,3fb9c4d9ef455e73c5edf9feee2adc8f4832584e,"a little cleanup, a little uniformity; fixes #61"
kevin-montrose,2014-09-11 19:52:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b01f4ed27618d8bd61a856c93e612a6d7ca953bc,b01f4ed27618d8bd61a856c93e612a6d7ca953bc,"more work on #61; 'foreach' likes to insert a convert, so let's make sure we don't loose our magic dynamic behavior if that happens"
kevin-montrose,2014-09-11 18:28:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a8f8c5c1713406389e64b6bc9980c98dd05ce51f,a8f8c5c1713406389e64b6bc9980c98dd05ce51f,working on #61; make the returns of .GetEnumerator for dynamic objects *also* dynamic; things can get a little dicy otherwise
kevin-montrose,2014-09-11 17:37:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/783b20a3260781f57624906715399e9315604fe7,783b20a3260781f57624906715399e9315604fe7,Merge branch 'ISO8601-dirty-buffer-read' of github.com:manofstick/Jil into pr-65
kevin-montrose,2014-09-11 17:23:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f4068a43a88e7510955d60a3e346b9d5c892dae2,f4068a43a88e7510955d60a3e346b9d5c892dae2,Merge branch 'ReadSkipWhitespace' of github.com:manofstick/Jil into pr-66
kevin-montrose,2014-09-03 03:34:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8a4007c8654bbc7c4e3c6cfc733348534972ad75,8a4007c8654bbc7c4e3c6cfc733348534972ad75,"add a Deserialize method that takes a Type, basically support non-generic calls of Deserialize at a small tax; fixes #60"
kevin-montrose,2014-09-01 23:03:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cd279a0e65d063699185aacbafadbc8a429be83a,cd279a0e65d063699185aacbafadbc8a429be83a,update readme now that hashing is gone
kevin-montrose,2014-09-01 23:00:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a5fe9c592a42f11b672ac66dcb11f021d815894d,a5fe9c592a42f11b672ac66dcb11f021d815894d,knock out another TODO; remove more dead hashing code
kevin-montrose,2014-09-01 22:51:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dbde037e756d6ffe5ba512e19398cc8b5703ee88,dbde037e756d6ffe5ba512e19398cc8b5703ee88,another test for unicode escapes in enums
kevin-montrose,2014-09-01 22:40:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/61b83ffc2b005be51ad12bfa1800d95d60715ec4,61b83ffc2b005be51ad12bfa1800d95d60715ec4,fix exceptions not being thrown for invalid enums
kevin-montrose,2014-09-01 22:07:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f87dfe4f685dae8ef8dc644d72e033698d8b417c,f87dfe4f685dae8ef8dc644d72e033698d8b417c,add a failing test for enum failures; comparing to automata-less behavior
kevin-montrose,2014-09-01 22:02:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3a839ab7496933ff1db937f36609f715c6005770,3a839ab7496933ff1db937f36609f715c6005770,fix automata failure case types; though these TODO's need to be handled...
kevin-montrose,2014-09-01 21:57:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/41cfccdc669ab3346150e03e222fb4784d658cde,41cfccdc669ab3346150e03e222fb4784d658cde,formatting
kevin-montrose,2014-09-01 21:46:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4a37af806f70beb8fcb63115aa978513f8dbc399,4a37af806f70beb8fcb63115aa978513f8dbc399,delete all the now obsolete hashing stuff
kevin-montrose,2014-09-01 21:32:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/50ef704f07639a7cf29c8eb930c7a58987c39e49,50ef704f07639a7cf29c8eb930c7a58987c39e49,"add a test to verify explicitly that automata are faster than hasing for enum matching; fix another (now defunct, but still) test for hashing vs non-automata solutions"
kevin-montrose,2014-09-01 21:20:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3b271b7974870310d2ecc727eb7d778c2209ccf3,3b271b7974870310d2ecc727eb7d778c2209ccf3,Merge branch 'automata-enhancements' of github.com:manofstick/Jil into pr-57
kevin-montrose,2014-08-25 02:30:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bac089f3a8515b89259338cf976160e6452fe54a,bac089f3a8515b89259338cf976160e6452fe54a,2.0.2
kevin-montrose,2014-08-25 02:26:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7fbda2eb7e1519eb971ea70793601cb4bc5fa771,7fbda2eb7e1519eb971ea70793601cb4bc5fa771,upgrade to Sigil 4.2.2
kevin-montrose,2014-08-24 22:10:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c1eb522f52a4ebfc45947972ab53fccd704e3fa2,c1eb522f52a4ebfc45947972ab53fccd704e3fa2,extend DigitTriplets to CustomWriteUIntUnrolled
kevin-montrose,2014-08-24 22:06:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d1c33a453505f3c67f380cf13c48a634423069ca,d1c33a453505f3c67f380cf13c48a634423069ca,"skipping number formatting is done within CustomWriteInt now; no longer a relevant switch or test, removing"
kevin-montrose,2014-08-24 22:03:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/99e811269288039ab926370d80c30741b9448160,99e811269288039ab926370d80c30741b9448160,cleanup code; remove a switch I'd rather not stick around
kevin-montrose,2014-08-24 22:00:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/86ac2f21c4d8a661cd66887f919c9a52c0abd1fa,86ac2f21c4d8a661cd66887f919c9a52c0abd1fa,"test for #54; it does appear to be 10-15% faster, may also obsolete SkipNumberFormatting"
kevin-montrose,2014-08-24 21:48:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/baa6942db9abc82e7a42ae2748e4b2958a024a87,baa6942db9abc82e7a42ae2748e4b2958a024a87,Merge branch 'write-int' of https://github.com/manofstick/Jil into issue-54
manofstick,2014-08-22 04:37:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7fbb8b18520ec115f9877068c93642e714bd70c4,7fbb8b18520ec115f9877068c93642e714bd70c4,"Faster _CustomWriteIntUnrolledSigned

Tested across integers of all lengths this was between 90-95% of the
time of the original (sweet spots were at 3/6/9 which were 75%,91%,94%
and worst spot was 5 digits which was 102%). Adds buffer that is ""1000 *
3 * sizeof(char)""."
kevin-montrose,2014-08-21 22:12:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f16348dfe5dd7d332766b092459f13e1085e8028,f16348dfe5dd7d332766b092459f13e1085e8028,"fixes #53; member matcher knows to ignore certain members, w.r.t. both serialize and deserialize"
kevin-montrose,2014-08-21 22:08:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7c92da17ba3232960609c4d35baa76d8371603c6,7c92da17ba3232960609c4d35baa76d8371603c6,go ahead and test the otherside
kevin-montrose,2014-08-21 22:02:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7dda90504adce5b1102e1c4f61ff4bdf2178c6bb,7dda90504adce5b1102e1c4f61ff4bdf2178c6bb,test for #53
kevin-montrose,2014-08-21 17:15:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/06285f476d51aa618883031cf0b28d564324aefe,06285f476d51aa618883031cf0b28d564324aefe,2.0.1
kevin-montrose,2014-08-21 17:13:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4fcf6baa18339eaacecb0d1d9d79209065bc99b2,4fcf6baa18339eaacecb0d1d9d79209065bc99b2,give this test a better name
kevin-montrose,2014-08-21 17:11:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/356f3c5af71ef202e187720f76b0cafdd41a56c6,356f3c5af71ef202e187720f76b0cafdd41a56c6,fix a bug where types reused (or recursive) at a static point in the type graph wouldn't be dynamically dispatched via SerializeDynamic
kevin-montrose,2014-08-21 02:13:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b22e530f4f60f4562bac18414037b9bd8ecd5981,b22e530f4f60f4562bac18414037b9bd8ecd5981,2.0.0
kevin-montrose,2014-08-21 02:09:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/38b6dee669f948ceb604bafd67621b69e18b33fb,38b6dee669f948ceb604bafd67621b69e18b33fb,Merge branch 'dynamic-serializer'
kevin-montrose,2014-08-21 02:09:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fa4a74a988a71666e85c952abcf1f0ed7b90dc4c,fa4a74a988a71666e85c952abcf1f0ed7b90dc4c,update README.md for dynamic serialization
kevin-montrose,2014-08-21 01:58:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b7083e0cc9cd02c901c80289ecebdd3d692d7a5a,b7083e0cc9cd02c901c80289ecebdd3d692d7a5a,Merge branch 'master' of github.com:kevin-montrose/Jil into dynamic-serializer
kevin-montrose,2014-08-17 22:56:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9c1a08a225219185be7a38dde1820b70af45c150,9c1a08a225219185be7a38dde1820b70af45c150,line breaks!
kevin-montrose,2014-08-17 22:55:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8fac487afc7c45759ca6ca502cfda52551d2c985,8fac487afc7c45759ca6ca502cfda52551d2c985,Adding a credits file
kevin-montrose,2014-08-17 21:20:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/76f7e01988fcd34ca4ad61f230eabba1af3e56e6,76f7e01988fcd34ca4ad61f230eabba1af3e56e6,"16 different versions of this are a bit much... kill all the old defaults, leave just the unsafe versions"
kevin-montrose,2014-08-17 21:13:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9e35b17518854d9110a3f62beeb2e4ee477f5105,9e35b17518854d9110a3f62beeb2e4ee477f5105,fix spinup time regression
kevin-montrose,2014-08-17 21:12:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a624a8af585cfa92090af621bc09bc26458e08e9,a624a8af585cfa92090af621bc09bc26458e08e9,fix dynamic deserialization of 7 decimal date times
kevin-montrose,2014-08-17 21:03:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4720b5a1f36b3689ee70d1b5961199b31b387577,4720b5a1f36b3689ee70d1b5961199b31b387577,remove dead code
kevin-montrose,2014-08-17 20:58:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ae5bac5f91d33e66a7d8583e1e61d5e4851cd475,ae5bac5f91d33e66a7d8583e1e61d5e4851cd475,play around with some /unsafe options; the only one I've found that reliably works is shunting string access to char*'s
kevin-montrose,2014-08-17 19:44:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2c95bd2018e177dbb539bf6e2f17adf71948569d,2c95bd2018e177dbb539bf6e2f17adf71948569d,remove hashing from non-anonymous member lookups; closes #47
kevin-montrose,2014-08-17 19:40:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/91516f909aa59a31f9439c84a3815fbce4623445,91516f909aa59a31f9439c84a3815fbce4623445,the automata do appear to be faster than hashing
kevin-montrose,2014-08-17 19:27:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5c72eab8bb8856ce85e8fb700d8f650f2012b123,5c72eab8bb8856ce85e8fb700d8f650f2012b123,"add a speed test; this does appear to be faster, will merge in; open question, are the automata faster than hashing as well?"
kevin-montrose,2014-08-17 22:56:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9622f5c6973fac3bb833b3b9c7d17e884fc3d2e1,9622f5c6973fac3bb833b3b9c7d17e884fc3d2e1,line breaks!
kevin-montrose,2014-08-17 22:55:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a23afd1cad2322ad52ef00f331a4de103469ce39,a23afd1cad2322ad52ef00f331a4de103469ce39,Adding a credits file
kevin-montrose,2014-08-17 22:38:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e3c268aead64dab61c67f71927c32275024d5b10,e3c268aead64dab61c67f71927c32275024d5b10,todone
kevin-montrose,2014-08-17 22:33:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/913bd018aa59954a63baceef3b485e7599db9636,913bd018aa59954a63baceef3b485e7599db9636,"special case ExpandoObject; we can treat it as a IDictionary<string, object> for great justice"
kevin-montrose,2014-08-17 22:25:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/62833dd2ac84eca0ab4d783e8fe8f3934a021b6f,62833dd2ac84eca0ab4d783e8fe8f3934a021b6f,"special case DynamicObject; since it's so common, and using try{}catch{} control flow seems to be the only thing we can do..."
kevin-montrose,2014-08-17 21:40:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3e987fc1f185f90bbb7db85b42300197c605024d,3e987fc1f185f90bbb7db85b42300197c605024d,remove dead code
kevin-montrose,2014-08-17 21:39:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/39633d79c51b20aa3657ec8b614c900f62cf4bf4,39633d79c51b20aa3657ec8b614c900f62cf4bf4,test and fix for fun StackOverflowException w/ hyper-dynamic paramters
kevin-montrose,2014-08-17 21:20:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a1e43fc7dc10188f7172ed4e8aecbd5f3ce0d536,a1e43fc7dc10188f7172ed4e8aecbd5f3ce0d536,Merge branch 'master' of github.com:kevin-montrose/Jil into dynamic-serializer
kevin-montrose,2014-08-17 21:20:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fea9fd58f951263c3c7762a75d8633d5fc84bdf5,fea9fd58f951263c3c7762a75d8633d5fc84bdf5,"16 different versions of this are a bit much... kill all the old defaults, leave just the unsafe versions"
kevin-montrose,2014-08-17 21:13:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a2ae77e4ae27de1b88e04525768b89556744112d,a2ae77e4ae27de1b88e04525768b89556744112d,fix spinup time regression
kevin-montrose,2014-08-17 21:12:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/632d29eecc9b5fa0c73ac547e558287605346435,632d29eecc9b5fa0c73ac547e558287605346435,fix dynamic deserialization of 7 decimal date times
kevin-montrose,2014-08-17 21:03:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/738ce62642670c9bab0e7e822b2d87b58b8fd0a0,738ce62642670c9bab0e7e822b2d87b58b8fd0a0,remove dead code
kevin-montrose,2014-08-17 20:58:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/81c29a19384468469b4ff5d729943b57f72de22d,81c29a19384468469b4ff5d729943b57f72de22d,play around with some /unsafe options; the only one I've found that reliably works is shunting string access to char*'s
kevin-montrose,2014-08-17 19:44:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f053729a13f8686e58313f1322d3a445e88f3ad3,f053729a13f8686e58313f1322d3a445e88f3ad3,remove hashing from non-anonymous member lookups; closes #47
kevin-montrose,2014-08-17 19:40:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ccf75145571970e5d56389b3e6777bcc0d558450,ccf75145571970e5d56389b3e6777bcc0d558450,the automata do appear to be faster than hashing
kevin-montrose,2014-08-17 19:27:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1ca2847f040df2d04209176e1cbb7c74f0bec5d3,1ca2847f040df2d04209176e1cbb7c74f0bec5d3,"add a speed test; this does appear to be faster, will merge in; open question, are the automata faster than hashing as well?"
kevin-montrose,2014-08-15 18:08:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b7387e798fe8d77a0587ff401bdb7e72c924fe04,b7387e798fe8d77a0587ff401bdb7e72c924fe04,Merge branch 'master' of github.com:kevin-montrose/Jil into dynamic-serializer
kevin-montrose,2014-08-13 20:53:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/af00a42f015580b6a778379fa6b2d640e0603902,af00a42f015580b6a778379fa6b2d640e0603902,"do some null checks earlier, obscurred some exceptions in production settings so... guess it's worth it"
kevin-montrose,2014-08-13 20:50:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/324277ad7e83bcab0de665fb5dc3dc49ba30caba,324277ad7e83bcab0de665fb5dc3dc49ba30caba,1.7.2
kevin-montrose,2014-08-13 20:48:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/052f616ab945e94acf80bd7c7aeb2520ce006419,052f616ab945e94acf80bd7c7aeb2520ce006419,fix previously mentioned unicode issue
kevin-montrose,2014-08-13 20:44:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3d9557513f2e4e83f548f8bf543c8dab93d0513a,3d9557513f2e4e83f548f8bf543c8dab93d0513a,add a failing test for another unicode issue
kevin-montrose,2014-08-13 20:41:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/abfc109229bef78045d6e269b79599d05e25ff1c,abfc109229bef78045d6e269b79599d05e25ff1c,fix #48
kevin-montrose,2014-08-13 20:39:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/70602cbcddf0fe8562d3f639b57fe3739ae94820,70602cbcddf0fe8562d3f639b57fe3739ae94820,test for #48; the actual issue is when *skipping*
kevin-montrose,2014-08-11 04:43:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ded62b3bcfcc2aa890324c1cb2692d5956846c29,ded62b3bcfcc2aa890324c1cb2692d5956846c29,1.7.1
kevin-montrose,2014-08-11 02:07:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/31e34285bd306758cb0f5f21ff8834b3ac52d801,31e34285bd306758cb0f5f21ff8834b3ac52d801,"stop actually allocating strings when skipping members, fixes #28"
kevin-montrose,2014-08-11 01:36:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/193e26210a64604ae5dfa2001f98c7495e4f5455,193e26210a64604ae5dfa2001f98c7495e4f5455,fix typo
kevin-montrose,2014-08-11 01:35:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/370e5e57c40c6249e56d39fa26e6d02326e088a0,370e5e57c40c6249e56d39fa26e6d02326e088a0,move comment around so it makes a little more sense
kevin-montrose,2014-08-11 01:31:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a3071a0dc3af7634225e664220b8dbd8b36ad0b0,a3071a0dc3af7634225e664220b8dbd8b36ad0b0,nuke failed uint stuff; cleanup some names
kevin-montrose,2014-08-11 01:28:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1e1bd5efea3dc622c0aadbf3b373371cf16a12b2,1e1bd5efea3dc622c0aadbf3b373371cf16a12b2,"and here's another way, which is much worse"
kevin-montrose,2014-08-11 01:27:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/079b771797f54c442727849d4fef22139767820c,079b771797f54c442727849d4fef22139767820c,"try extending the same thing to uints; there are a couple different ways to do this, this one doesn't work (ie. is the same or slower)"
kevin-montrose,2014-08-11 01:21:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f75ad49f1ae32ff647d4b7be17fbb3b648b3786d,f75ad49f1ae32ff647d4b7be17fbb3b648b3786d,delete old CustomWriteIntUnroll; fix a bug in new CustomWriteIntUnrollSigned
kevin-montrose,2014-08-11 01:15:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/11e5dd8049225cb81352178517d55315b92705cf,11e5dd8049225cb81352178517d55315b92705cf,figured out why signed is faster for us w.r.t. #39
kevin-montrose,2014-08-11 00:47:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f32932f3f09ec6c907d3866b2ee81cdb2de61875,f32932f3f09ec6c907d3866b2ee81cdb2de61875,"testing signed version of custom int writer; it does appear to be a few percent faster (~5%); I'm not completely sure why... idiv should be faster than div on all intels I've ever seen, need to grab a disassembly"
kevin-montrose,2014-08-10 20:52:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/de8d5d49722a0eb3b5f3791ee67f1d55c1d4e3a1,de8d5d49722a0eb3b5f3791ee67f1d55c1d4e3a1,"fast skip white space is no longer an optimization; best guess, removing some allocation pressure makes not touching the cache line a second time less likely to matter, test perf was jumping around"
kevin-montrose,2014-08-10 20:49:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5fc392c72c932073167d47c4f885f3c1f57594e0,5fc392c72c932073167d47c4f885f3c1f57594e0,remove pointless string allocations per #40; closes #40
kevin-montrose,2014-08-10 20:38:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dec3b983a8597b81682e0bb399f20aafdf4fdf7f,dec3b983a8597b81682e0bb399f20aafdf4fdf7f,remove long unrolled versions; this ints are where the gains are; closes #37
kevin-montrose,2014-08-10 20:35:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/40feda31f60c3e2182deab55cc5d623ff944acdf,40feda31f60c3e2182deab55cc5d623ff944acdf,"test that unrolling is faster for longs; it's not, which makes some since since it's literally double the number of branches"
kevin-montrose,2014-08-10 20:30:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0c17f2ec06f638fff36f078901f2371aa0d12eb3,0c17f2ec06f638fff36f078901f2371aa0d12eb3,same optimizations for ulongs
kevin-montrose,2014-08-10 20:27:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cb933d851cc8ea85229b06b6bd2b08280c885d01,cb933d851cc8ea85229b06b6bd2b08280c885d01,same optimization for longs; gonna need a test for these since doubling the # of branch points isn't exactly a no-brainer
kevin-montrose,2014-08-10 20:10:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f2422d7971b05fdf545a83463085bee7f4a94ba5,f2422d7971b05fdf545a83463085bee7f4a94ba5,same optimizations for uints
kevin-montrose,2014-08-10 20:06:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/54b03af4ce3bc924302cce636cd70754dec33636,54b03af4ce3bc924302cce636cd70754dec33636,rename to remove I37 for things
kevin-montrose,2014-08-10 20:03:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d2c4d1a443cacef5300bf98ff6224121be7c5a46,d2c4d1a443cacef5300bf98ff6224121be7c5a46,convertng #37 to TwoDigit form; it's about 10% faster
kevin-montrose,2014-08-10 19:25:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/34c78587b0ca47415577e92ce9961c59118d232f,34c78587b0ca47415577e92ce9961c59118d232f,"speed test for #37; it's slower, but the existing write it code has been improved since the issue was opened; need to apply TwoDigits optimization and compare again"
kevin-montrose,2014-08-10 19:14:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a9fb9c81cdb5d7c127a22b660e21d3f0ceec4788,a9fb9c81cdb5d7c127a22b660e21d3f0ceec4788,"implemetation of loop unrolling suggested in #37; various changes to reuse buffer, write to TextWriter, and handle int.MinValue; speed hasn't been tested yet"
kevin-montrose,2014-08-08 21:27:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/70b8a1af6655179826a4893478a822c4597a37d5,70b8a1af6655179826a4893478a822c4597a37d5,"fixes #42; serialization will now go out to a single Tick of resolution if need be, though it won't always serialize a bunch of extra 0s in will add some trailing zeros if it's easier to deal with"
kevin-montrose,2014-08-08 21:09:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/40a11905ece49d1bc28c4547f61010b9199707c5,40a11905ece49d1bc28c4547f61010b9199707c5,"fix #43 for real, switches to using tick resolution for all deserialization ops"
kevin-montrose,2014-08-08 21:00:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6df1f604380ec24bf6b3a83387c28f92609986b7,6df1f604380ec24bf6b3a83387c28f92609986b7,"get started #42; found a bug in the fix for #43 as well, test fixed"
kevin-montrose,2014-08-08 20:27:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2a2592ebc61c8f860bb3939e9b5cd95129f8e636,2a2592ebc61c8f860bb3939e9b5cd95129f8e636,add 1 extra char to DateTime deserialization for 7 digit (ie. 1 tick resolution) datetime support; fixes #43
kevin-montrose,2014-07-30 02:15:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d1db32e4d5cb243e6606cb72a99a0f011c4af20a,d1db32e4d5cb243e6606cb72a99a0f011c4af20a,knock out a couple more TODOs; loading the proper options and depth from semistatic callbacks back into the dynamic serializer
kevin-montrose,2014-07-30 02:03:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/79c5a161b984330df2e5abca445c4c88652b671c,79c5a161b984330df2e5abca445c4c88652b671c,extend pretty print to enumerable serialization
kevin-montrose,2014-07-30 01:57:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/884e2e47a6c57a929ce3f11e4c811fdd1a0b9941,884e2e47a6c57a929ce3f11e4c811fdd1a0b9941,getting started on pretty print and exclude nulls support
kevin-montrose,2014-07-30 01:41:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6219621848de6cccf742adc232ae943fab7faf61,6219621848de6cccf742adc232ae943fab7faf61,cache some of this callsite stuff
kevin-montrose,2014-07-28 02:25:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ec7a423f7c3821e37a4080c7417347309b26467a,ec7a423f7c3821e37a4080c7417347309b26467a,"and finally for enumerables, but not dictionaries"
kevin-montrose,2014-07-28 02:08:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/44b87d31fc109344cb70570d75588631f79ab39c,44b87d31fc109344cb70570d75588631f79ab39c,likewise for strings & chars
kevin-montrose,2014-07-28 02:04:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/78dccbf2cfd40d512852c06468bdef8fd785d2db,78dccbf2cfd40d512852c06468bdef8fd785d2db,likewise for GUIDs (sensing a pattern?!)
kevin-montrose,2014-07-28 02:02:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c4a8bb6c1e415ba61c79088eeeb33ae8185c9acc,c4a8bb6c1e415ba61c79088eeeb33ae8185c9acc,likewise for datetimes
kevin-montrose,2014-07-28 01:50:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/afd356616f5a72855d443e700d783a83540e8c60,afd356616f5a72855d443e700d783a83540e8c60,likewise for booleans
kevin-montrose,2014-07-28 01:19:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e42320863605ad24d843ca5463025d0aff8fe5cf,e42320863605ad24d843ca5463025d0aff8fe5cf,likewise for floating point values
kevin-montrose,2014-07-28 01:11:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3ff96447f4884c8dfdc50e09afac75ec7f4f5719,3ff96447f4884c8dfdc50e09afac75ec7f4f5719,making dynamic serializing treat objects that can be converted to integers as integers
kevin-montrose,2014-07-28 00:34:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6e26fe7b2ecb2a4f6f144c7bd0e865a7b7bdebf7,6e26fe7b2ecb2a4f6f144c7bd0e865a7b7bdebf7,remove a bunch of pointless duplication
kevin-montrose,2014-07-28 00:12:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e70bbae1afb2b85451bec808fffd042dfd6f0748,e70bbae1afb2b85451bec808fffd042dfd6f0748,get started on #34
kevin-montrose,2014-07-27 18:49:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/603feff8e4a127caf677d024757b5ae6207cc333,603feff8e4a127caf677d024757b5ae6207cc333,"finish all todos in dynamic serializer; it might actually be correct and complete, probably not very fast though; also a bit too much repitition in here, needs cleanup and profiling"
kevin-montrose,2014-07-27 18:39:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2e33a80dd1cd9e4e72d0cfbfe93c309807b25cb5,2e33a80dd1cd9e4e72d0cfbfe93c309807b25cb5,add a way to lookup typecaches from Options for dynamic serialization purposes
kevin-montrose,2014-07-27 18:22:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1dd34ccc1289efc5b0925953afc910bb08fa86f2,1dd34ccc1289efc5b0925953afc910bb08fa86f2,add IncludeInherited options
kevin-montrose,2014-07-27 17:56:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/aff3eece02b35188f992ab27da911fbbde13f164,aff3eece02b35188f992ab27da911fbbde13f164,add a NoHashing options; actually lookup the proper Options in dynamic serialization
kevin-montrose,2014-07-27 17:25:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/da42b7f17989d07d111684cce3986978f695a88b,da42b7f17989d07d111684cce3986978f695a88b,cache some reflection that was happening in primitive serialization
kevin-montrose,2014-07-27 16:28:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e0387f6c428aa6e57688af3eb578f0e5fc9c7295,e0387f6c428aa6e57688af3eb578f0e5fc9c7295,rejigger serializedynamic calls for eventual infinite recursion detection
kevin-montrose,2014-07-27 16:20:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e4863de9d177756b6697c13b5f3df4527b695c95,e4863de9d177756b6697c13b5f3df4527b695c95,Merge branch 'master' of github.com:kevin-montrose/Jil into dynamic-serializer
kevin-montrose,2014-07-26 19:01:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2ee4030a9a96c220907f067894482154bf775a69,2ee4030a9a96c220907f067894482154bf775a69,extend #33 to custom iso date writer; closes #33
kevin-montrose,2014-07-26 18:57:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e4784fecc92cff83b44bd856adc65981e79428f4,e4784fecc92cff83b44bd856adc65981e79428f4,extend #33 to all custom number writers
kevin-montrose,2014-07-26 18:49:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ad5e1b12979c97cece2a36a4dacd8f2431dfcc83,ad5e1b12979c97cece2a36a4dacd8f2431dfcc83,"w.r.t. #33; reimplementing idea (since I've made other changes to _CustomWriteInt, added a speedprooftest, confirmed this approach is ~30% faster; checking in as a reference, this will supercede existing _CustomWrite* code"
kevin-montrose,2014-07-26 18:33:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/07950f8e0d1d2bf2238e3f2a6ebe69306086ab88,07950f8e0d1d2bf2238e3f2a6ebe69306086ab88,reproduced speed gains from #36; implementing and adding a speedprooftest for it; closes #36
kevin-montrose,2014-07-26 18:21:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2191ca730179706eb466ce5c08c5b98bf9df4642,2191ca730179706eb466ce5c08c5b98bf9df4642,convert other CustomWrite<NumberType>'s to use smaller datatypes when possible; closes #31
kevin-montrose,2014-07-26 18:16:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b574a94d746ecbb17762e832386cc1914b0df7b0,b574a94d746ecbb17762e832386cc1914b0df7b0,"next bit of #31; smaller data type *does* lead to a very small but consistent improvement; commiting now for future reference, but this option is going away; supercedes existing CustomInt code"
kevin-montrose,2014-07-26 18:08:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/01baebea696665ee4675203c05d181248cdd918e,01baebea696665ee4675203c05d181248cdd918e,"w.r.t #31; Math.DivRem does not appear to be used for optimization purposes; the IL is just div + rem, appears to be an old issue http://stackoverflow.com/q/447282/80572"
kevin-montrose,2014-07-23 01:33:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/697085e4134b9c913067e971d4eb97171f99216a,697085e4134b9c913067e971d4eb97171f99216a,"Merge pull request #32 from InPermutation/patch-1

README.md: minor grammar and spelling fixes"
InPermutation,2014-07-23 00:04:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1cdd84bfd475711eb302b06dc1885a39fa2f8953,1cdd84bfd475711eb302b06dc1885a39fa2f8953,README.md: minor grammar and spelling fixes
kevin-montrose,2014-07-17 05:05:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/72e74c2ddf350ac316e18e0db6ed01db06914471,72e74c2ddf350ac316e18e0db6ed01db06914471,"no failing tests, missing all sorts of features and optimizations *but* might actually be sort of functional"
kevin-montrose,2014-07-17 04:08:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1d2625f0c829ca9d874d992d2fa43fc31d2f2ffe,1d2625f0c829ca9d874d992d2fa43fc31d2f2ffe,Merge branch 'master' into dynamic-serializer
kevin-montrose,2014-07-17 04:07:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ad4f86a6e3346650a6aaf1e1ea37b04e4467c3b1,ad4f86a6e3346650a6aaf1e1ea37b04e4467c3b1,boolean logic is hard
kevin-montrose,2014-07-17 04:01:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b1071e03c56e7f13f24232a1e2bbe8a6b8f740d8,b1071e03c56e7f13f24232a1e2bbe8a6b8f740d8,first kind of working whack at dynamic serialization; for reals; this is a) incorrect b) slooooooooooooow c) incomplete;  nowhere to go but up!
kevin-montrose,2014-07-15 04:31:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/53029dd59b15b4e612b1e11aa3f4608710f89d13,53029dd59b15b4e612b1e11aa3f4608710f89d13,Merge branch 'master' into dynamic-serializer
kevin-montrose,2014-07-15 04:30:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6c6244483e3b2ab99633474398523a7a1611ea57,6c6244483e3b2ab99633474398523a7a1611ea57,Merge branch 'master' of github.com:kevin-montrose/Jil
kevin-montrose,2014-07-15 04:29:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/029ec8e5808236eeaec550191ffaf0c5b9df9228,029ec8e5808236eeaec550191ffaf0c5b9df9228,a more literal definition of 'overrides' for JilDirectiveAttribute
kevin-montrose,2014-07-15 04:23:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7288bb2e824556144c2bbcf4b832de79362d864d,7288bb2e824556144c2bbcf4b832de79362d864d,"also, make this dynamic; since that will actually work when this is merged back in"
kevin-montrose,2014-07-15 04:17:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/611a8f9ce9a491df64d0a9933ec5d46494cdb1d8,611a8f9ce9a491df64d0a9933ec5d46494cdb1d8,let's begin... with a bunch of failing tests and a NotImplementedException!
kevin-montrose,2014-07-15 04:14:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c24d2d6af399924e16b1a5d2bf6b07bfb430e3e6,c24d2d6af399924e16b1a5d2bf6b07bfb430e3e6,Add 1.7.0 changes to README
kevin-montrose,2014-07-15 04:07:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0467ccd237c4458d22ea36aebefeeca7310af737,0467ccd237c4458d22ea36aebefeeca7310af737,1.7.0
kevin-montrose,2014-07-15 03:59:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ba398e61e37c3c04c67260e63ec848f5bcca1f62,ba398e61e37c3c04c67260e63ec848f5bcca1f62,add [JilDirective]; closes #30
kevin-montrose,2014-07-15 03:32:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/904663b16e5649465a627f5f12e678fca5e18ddb,904663b16e5649465a627f5f12e678fca5e18ddb,"add dynamic deserializer support for DateTimeOffsets, closes #27"
kevin-montrose,2014-07-15 03:23:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5da3367370dc57dda7670fe3db045be898dc7baf,5da3367370dc57dda7670fe3db045be898dc7baf,"add static deserializer support for DateTimeOffsets, for #27"
kevin-montrose,2014-07-11 18:58:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/43335c6c51c2a9ced3ca00adea8b44f3c3ba1248,43335c6c51c2a9ced3ca00adea8b44f3c3ba1248,support for *serializing* DateTimeOffsets for #27
kevin-montrose,2014-07-11 16:40:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/697aa3fce9160b1d17f8274e0f585b285326961a,697aa3fce9160b1d17f8274e0f585b285326961a,fix skipping members after the first one in types w/ no members; makes #25 actually finished and continues work on #27
kevin-montrose,2014-07-11 16:32:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c8fb6a75e94152f6dc0804cdd5a093a19e73a9b0,c8fb6a75e94152f6dc0804cdd5a093a19e73a9b0,comments
kevin-montrose,2014-07-11 16:29:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1ae9dc95f7bd2e8180fba6567b78fc44ece4404c,1ae9dc95f7bd2e8180fba6567b78fc44ece4404c,consolidate this copy/pasted crap; it's got a bug and I only want to fix it once
kevin-montrose,2014-07-10 21:10:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c5f3542988da76e15d9a406b59bb1dbfc69f943b,c5f3542988da76e15d9a406b59bb1dbfc69f943b,tests for deserialization failure discovered as part of issue #27; actually a bug in the fix for issue #25
kevin-montrose,2014-07-10 19:57:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/31829ecd00a6f15527625d2f2275a54eec853686,31829ecd00a6f15527625d2f2275a54eec853686,"some work on issue #27; serialization appears fixed, bbut deserialization is probably still broken"
kevin-montrose,2014-07-10 19:42:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6c6e50d1382fc3bdae0af3daf8cc726dd682f529,6c6e50d1382fc3bdae0af3daf8cc726dd682f529,add test for issue #27
kevin-montrose,2014-07-03 20:26:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5a0149cb15e7df82db545272cc59602fc64a722b,5a0149cb15e7df82db545272cc59602fc64a722b,1.6.1
kevin-montrose,2014-07-03 20:24:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/35bb6b49470073de3230fac18282b5e7d3de6345,35bb6b49470073de3230fac18282b5e7d3de6345,"don't try to be nearly so clever around recursive types, just try to prime everything and let the type cache figure out whether it actually needs to do anything"
kevin-montrose,2014-07-03 20:00:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bceec048350597c655c73e206cb9719989b571c6,bceec048350597c655c73e206cb9719989b571c6,fix FindReusedTypes as well
kevin-montrose,2014-07-03 19:45:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7e9ae8d5e8205f09734390b8716cc19e09dcd6bc,7e9ae8d5e8205f09734390b8716cc19e09dcd6bc,another failing test for tricky recursive types
kevin-montrose,2014-07-03 19:31:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2831d55e253959ea6a0d9acf869b7fec4c3f16ec,2831d55e253959ea6a0d9acf869b7fec4c3f16ec,fix a vicious bug with recursive types contained in lists and dictionaries
kevin-montrose,2014-07-03 18:20:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/95e1528addb4af9e8af439888caf93dff91d6e89,95e1528addb4af9e8af439888caf93dff91d6e89,1.6.0
kevin-montrose,2014-07-03 18:12:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d0ca2824d393b05331278175a7812245d01f6ce9,d0ca2824d393b05331278175a7812245d01f6ce9,restructure test so Assert is always hit
kevin-montrose,2014-07-03 18:10:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a7f26ad245aa12467fe55ac9e791717e596291cf,a7f26ad245aa12467fe55ac9e791717e596291cf,add case for ignoring fields via IgnoreDataMember
kevin-montrose,2014-07-03 18:08:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9e18be1b39c870ea27ebdf5e2052164cc9461a26,9e18be1b39c870ea27ebdf5e2052164cc9461a26,tweak style of check for IgnoreDataMember
m0sa,2014-07-03 16:15:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d2beef6eafb25268e7afbd29299f6b8ff9bdb0e0,d2beef6eafb25268e7afbd29299f6b8ff9bdb0e0,IgnoreDataMemberAttribute support
kevin-montrose,2014-06-23 00:48:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8814e4f51d85994500a5d00efd05e4321cbed6d0,8814e4f51d85994500a5d00efd05e4321cbed6d0,kill this failed experiment
kevin-montrose,2014-06-22 23:00:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cad0339ab7b3b669397c4e07c0123bb97ab8f81c,cad0339ab7b3b669397c4e07c0123bb97ab8f81c,no-change commit; just to note that this *is not* faster
kevin-montrose,2014-06-22 19:17:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e639bd8c2ec099c5a00cc57bcc3f2eea030cb208,e639bd8c2ec099c5a00cc57bcc3f2eea030cb208,"use a custom flgas enum creation delegate, this may not be faster; needs more testing"
kevin-montrose,2014-06-22 18:56:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0c077b5b9470412a5119a23570806391e0324796,0c077b5b9470412a5119a23570806391e0324796,remove this switch
kevin-montrose,2014-06-22 18:41:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bab5984f3bcc89299423363b2cc34d51fb30c583,bab5984f3bcc89299423363b2cc34d51fb30c583,"reduce allocations when dynamically parsing flags enums; test commit for reference, this switch has to go away obviously, like all other dynamic speed switches"
kevin-montrose,2014-06-22 18:16:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/09a8f1a2bc72a032325189395d90db3f37a64759,09a8f1a2bc72a032325189395d90db3f37a64759,consolidate the doVerify switches
kevin-montrose,2014-06-22 18:06:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e8dd8dee28c290e09d3fbcebf32b0a0d1161456e,e8dd8dee28c290e09d3fbcebf32b0a0d1161456e,"add these volatiles that are, technically, necessary; .NET itself probably doesn't care, but the ECMA standard makes weaker guarantees"
kevin-montrose,2014-06-20 03:58:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f6085be5f84bf5d69d7d1d0e72604c904fb9b73c,f6085be5f84bf5d69d7d1d0e72604c904fb9b73c,fix release notes in nuget package
kevin-montrose,2014-06-20 03:55:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b252157f5f5d75fd34645d93802e86c1272ace3e,b252157f5f5d75fd34645d93802e86c1272ace3e,1.5.0
kevin-montrose,2014-06-20 03:52:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2b619d08b4c97163747c0f0d93d5595ed846da02,2b619d08b4c97163747c0f0d93d5595ed846da02,"don't generate the exact same code a bunch of times, it's better perf wise to avoid method calls *but* blowing the cache away isn't great either, and the startup time is murder if we use the same type more than a couple times"
kevin-montrose,2014-06-20 03:28:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b70b3b1a0c86cad5f7cb053828f7e4f8dba06cf1,b70b3b1a0c86cad5f7cb053828f7e4f8dba06cf1,better name
kevin-montrose,2014-06-20 03:28:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/150d2facc604aad262085f3d8da20a7a8a830780,150d2facc604aad262085f3d8da20a7a8a830780,"test passes, it's just really stupid slow in DEBUG"
kevin-montrose,2014-06-20 03:18:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/31641a4340d2851ca0316988fc665b1409602077,31641a4340d2851ca0316988fc665b1409602077,"much more correct recursive type detection, one failing (actually never terminating test) left"
kevin-montrose,2014-06-20 02:32:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d2527b94b80ba3c09035e7c4d33f062dafa53734,d2527b94b80ba3c09035e7c4d33f062dafa53734,fix some bugs in recursive type detection; still some failing tests
kevin-montrose,2014-06-20 02:19:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ea8c815a4d71bf048fbcb053e5e70c41a6471754,ea8c815a4d71bf048fbcb053e5e70c41a6471754,fix stack overflow exceptions; still some failing tests around serialization
kevin-montrose,2014-06-20 02:09:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/869284efd7200ce2c7ec86d62b69f58903768f79,869284efd7200ce2c7ec86d62b69f58903768f79,extend same 'get off the static init thread' lock changes to serialization
kevin-montrose,2014-06-20 01:31:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/05386274f0bb5f0a899e64a75f0764a74b30ea6d,05386274f0bb5f0a899e64a75f0764a74b30ea6d,better than a method call on recursive deserialization
kevin-montrose,2014-06-20 01:25:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7c7b18010584d35d1d74e2888a5381ef4ae6d0f4,7c7b18010584d35d1d74e2888a5381ef4ae6d0f4,"update to proper Sigil ref, rather than my local build"
kevin-montrose,2014-06-19 21:10:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/23df9eb46eaf4abe1fd4393376a8df6cc6811eb5,23df9eb46eaf4abe1fd4393376a8df6cc6811eb5,another test for empty members
kevin-montrose,2014-06-19 21:05:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5554d494040f47431410c38f8add48369dc65b4d,5554d494040f47431410c38f8add48369dc65b4d,properly skip members of objects which are always empty; fixes #25
kevin-montrose,2014-06-19 20:56:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/03bc7abc7b5b5584e8803fd7ed29cbe383e78b7b,03bc7abc7b5b5584e8803fd7ed29cbe383e78b7b,more thorough test case for #25
kevin-montrose,2014-06-19 20:40:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7c832b84fb292474cc48073118691b276aedfce2,7c832b84fb292474cc48073118691b276aedfce2,add test for #25
kevin-montrose,2014-06-19 19:59:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5354718bd3b575bc7b4aefafe1045817cafeaab4,5354718bd3b575bc7b4aefafe1045817cafeaab4,"don't bother shrinking branch instructions, we're throwing memory at this problem anyway"
kevin-montrose,2014-06-19 18:42:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/425d278b11fccea952f76116dde67903ff200445,425d278b11fccea952f76116dde67903ff200445,"move deserializer spin up off of static init thread; this method call fills me with shame, but it'll have to do for now; probably polish it up, and refactor serializer as well, before a proper 0.x.0 release"
kevin-montrose,2014-06-19 18:13:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eafc2416feb4820ce154275e5637b392350e9aca,eafc2416feb4820ce154275e5637b392350e9aca,"add a test for spinup time, it's gotten a little crazy"
kevin-montrose,2014-06-18 20:53:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/715197e20eddd3072c646d5478031e12933877a4,715197e20eddd3072c646d5478031e12933877a4,Merge branch 'master' of github.com:kevin-montrose/Jil
kevin-montrose,2014-06-18 20:30:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8d8ba7184742cc845858464d8b56c352dc160e01,8d8ba7184742cc845858464d8b56c352dc160e01,allow dynamic in members while deserializing statically
kevin-montrose,2014-06-18 20:03:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/72936f00e31619ee7347ace657515d9b49fe6a9c,72936f00e31619ee7347ace657515d9b49fe6a9c,fix typo in error message when parsing objects
kevin-montrose,2014-06-17 18:03:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/19c111831ffb5170765a18c7f71092623b40de30,19c111831ffb5170765a18c7f71092623b40de30,*Grumble grumble*
kevin-montrose,2014-06-16 03:43:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bb8ad5d683855e491043fe646a577a9bcd8d2c4d,bb8ad5d683855e491043fe646a577a9bcd8d2c4d,1.4.0
kevin-montrose,2014-06-16 03:37:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d73c6a38a9a7affb838a055eb5faa2d99891b139,d73c6a38a9a7affb838a055eb5faa2d99891b139,nuke this flag
kevin-montrose,2014-06-16 03:29:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/af4e130fbc026073cd0b9702279405ebdb0e1d88,af4e130fbc026073cd0b9702279405ebdb0e1d88,"test that shows FlagsEnumCombiner is a perf win (~30%), again can't stick around cause that flag has got to go but committed for posterity"
kevin-montrose,2014-06-16 03:17:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/375f3a353dcda1b1a0fbf449c6f808402a979d74,375f3a353dcda1b1a0fbf449c6f808402a979d74,kill zombie jesus
kevin-montrose,2014-06-15 23:06:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/271afdba780125fe2f31b545d65f58f3c6f65b6c,271afdba780125fe2f31b545d65f58f3c6f65b6c,remove this switch going forward
kevin-montrose,2014-06-15 23:04:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a8ce4bfee8440cc0d4ca15707ccb5059995ce2b0,a8ce4bfee8440cc0d4ca15707ccb5059995ce2b0,"speed up ToLowerChar; this is just for reference, because it's not baked in that switch can't stick around"
kevin-montrose,2014-06-15 22:49:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8fc1c2a32da5b630c155382f9ac0e713c15c023a,8fc1c2a32da5b630c155382f9ac0e713c15c023a,make hash-based enum parsing case-insensitive; the tolower isn't ideal here just yet though
kevin-montrose,2014-06-15 22:26:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/03ac7fa968ba979b9173f90d7ffc9f8066ffddf8,03ac7fa968ba979b9173f90d7ffc9f8066ffddf8,"stopgap commit; hash-based approach to parsing enumerations when possible, is case-sensitive at the moment which makes it unshippable"
kevin-montrose,2014-06-15 17:26:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fc0f9e240c8f5b24772938d262d3cdabbee80b59,fc0f9e240c8f5b24772938d262d3cdabbee80b59,make [Flags] enumeration serialization PrettyPrint aware
kevin-montrose,2014-06-15 05:54:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9bf39dec03524370d9c94bbf9e34f30abe0dde0d,9bf39dec03524370d9c94bbf9e34f30abe0dde0d,fix type in README
kevin-montrose,2014-06-15 05:53:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/645b65f257334dd354a476de2a416608730e572e,645b65f257334dd354a476de2a416608730e572e,"make dynamic deserializer handle [Flags] enums for #23; perf is also pretty bad, but hey it does work"
kevin-montrose,2014-06-15 05:30:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d776d38eab811028bda5b6418fc3d8c99f3c2959,d776d38eab811028bda5b6418fc3d8c99f3c2959,make dynamic deserializer handles [EnumMember] for #23
kevin-montrose,2014-06-15 04:59:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e0abd64249250197d07c61a172fce4dd391406b0,e0abd64249250197d07c61a172fce4dd391406b0,respect [EnumMember] when deserializing for #23; flags parsing perf is still not shippable
kevin-montrose,2014-06-15 04:38:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/957a9d1f37c2a9f69f393b608b5b7d7b73cb3e4e,957a9d1f37c2a9f69f393b608b5b7d7b73cb3e4e,"proxy enum.parse calls, cause we need more logic there eventually"
kevin-montrose,2014-06-15 04:25:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6cdede53f2b217a1104fac482e34f9371df66fe5,6cdede53f2b217a1104fac482e34f9371df66fe5,"whack at deserializing [Flags] enums for #23; perf is pretty bad here, needs something more sophisticated"
kevin-montrose,2014-06-15 02:19:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e592d3dc995f1b374f5ebe995de0083c99e9eb7a,e592d3dc995f1b374f5ebe995de0083c99e9eb7a,handle EnumMemberAttribute appropriates for #23
kevin-montrose,2014-06-15 02:00:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7a4ffe70759c472488119014858f72c0745303a8,7a4ffe70759c472488119014858f72c0745303a8,fix encoding in flag enumerations
kevin-montrose,2014-06-15 01:54:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5478e9e20c807c32dd092aa8bde6a5c25e96867f,5478e9e20c807c32dd092aa8bde6a5c25e96867f,[Flags] serialization for #23
kevin-montrose,2014-06-15 01:17:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b7f826abe4a848a7802d4ade83b3066fa67b0b81,b7f826abe4a848a7802d4ade83b3066fa67b0b81,update Sigil to 4.2.0
kevin-montrose,2014-06-12 16:22:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8410dfd016b831798e6a3ce68266a59e620f18c7,8410dfd016b831798e6a3ce68266a59e620f18c7,Update README fixes #24
kevin-montrose,2014-05-30 16:50:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/49c6956ecbbbeed0d15adeac40097d65f2b27b59,49c6956ecbbbeed0d15adeac40097d65f2b27b59,1.3.1
kevin-montrose,2014-05-30 16:49:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/da5a1ea5dfb05ed807a61bc44c8d811b8a0caa83,da5a1ea5dfb05ed807a61bc44c8d811b8a0caa83,1.3.1
kevin-montrose,2014-05-30 16:47:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/58e99f060116c153780ff3c278e3001b7ac6c405,58e99f060116c153780ff3c278e3001b7ac6c405,fix a busted test
kevin-montrose,2014-05-30 16:44:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/22475c244cfa7f1ee92994ec0d19584975519df9,22475c244cfa7f1ee92994ec0d19584975519df9,"Merge pull request #22 from mgravell/master

Special-case T==object, which can occur when using anon-types between as..."
mgravell,2014-05-30 14:29:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f3c11864026bacbd51c061d9b455ce9f49e7ad9d,f3c11864026bacbd51c061d9b455ce9f49e7ad9d,"Special-case T==object, which can occur when using anon-types between assemblies, or which just generally means the caller is probably doing something wrong"
kevin-montrose,2014-04-14 17:13:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fd44b2c55f46844d84be5842c76c3a3cc08483b6,fd44b2c55f46844d84be5842c76c3a3cc08483b6,Update README.md
kevin-montrose,2014-04-14 03:09:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e3632db24cf90e6306795208a64cc9c7342f737c,e3632db24cf90e6306795208a64cc9c7342f737c,update benchmark to compare static to dynamic deserialization
kevin-montrose,2014-04-13 21:43:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d5086e62fdf76a9bfa9b2684b740b4d9c7152d80,d5086e62fdf76a9bfa9b2684b740b4d9c7152d80,1.3.0
kevin-montrose,2014-04-13 18:18:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2c99478ae8351eb0a4a6f1d3fc631911b3614978,2c99478ae8351eb0a4a6f1d3fc631911b3614978,"well, this appears to work"
kevin-montrose,2014-04-13 18:00:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/27852550ca75a9ebf087c3f5e0747d538d747e1a,27852550ca75a9ebf087c3f5e0747d538d747e1a,"names man, names"
kevin-montrose,2014-04-13 17:30:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8038f17366c36559b4bdd1cbc1cd7f3180d2c606,8038f17366c36559b4bdd1cbc1cd7f3180d2c606,half-implementing && and ||; they don't short circuit yet
kevin-montrose,2014-04-13 16:57:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/151fdbf6adc667c89a1153b7cce5cc1c65a067c4,151fdbf6adc667c89a1153b7cce5cc1c65a067c4,"implementing >, >=, <, <="
kevin-montrose,2014-04-13 16:39:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/89e079110a4718eb2101c326d6914654f6943640,89e079110a4718eb2101c326d6914654f6943640,implementing notequals
kevin-montrose,2014-04-13 05:04:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8b69253fe3075d51892e486fee29b4cdb6bd1c13,8b69253fe3075d51892e486fee29b4cdb6bd1c13,implementing equals
kevin-montrose,2014-04-13 04:48:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ee252c0ffd629e52d590b83c0c03cf6916b27999,ee252c0ffd629e52d590b83c0c03cf6916b27999,"binary add, subtract, multiply, and divide operations on dynamic objects"
kevin-montrose,2014-04-13 03:08:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/61a5f89e69565ffc8d794854c1eb98920aee1c24,61a5f89e69565ffc8d794854c1eb98920aee1c24,unary operations on dynamic objects
kevin-montrose,2014-04-13 01:56:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/703f94af47d7910ba16fd8e169f1edbe30720e72,703f94af47d7910ba16fd8e169f1edbe30720e72,"more constants, and less LINQ, in dynamic dispatch"
kevin-montrose,2014-04-13 01:42:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/024aec22c26089545ea17d7504f1d11de330285d,024aec22c26089545ea17d7504f1d11de330285d,"a quick sanity check that reusing expressions actually does speed things up; won't keep this around though, too cumbersome"
kevin-montrose,2014-04-13 00:55:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/df8aa3e1c2e697843d43d2cc353d86c4ba056df4,df8aa3e1c2e697843d43d2cc353d86c4ba056df4,benchmark fixes and more sensible enumeration for dynamic objects
kevin-montrose,2014-04-12 21:14:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c6e1a1cb6659f1239f5147b7055975959333425b,c6e1a1cb6659f1239f5147b7055975959333425b,servicestack dynamic json is... not very dynamic; so these tests can't really work; disable and just go back to timing
kevin-montrose,2014-04-12 21:02:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/07d0c8a4f8f984618dbc202eb9a2de9e1edf3d2e,07d0c8a4f8f984618dbc202eb9a2de9e1edf3d2e,fixes in Benchmark
kevin-montrose,2014-04-12 20:50:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e744a235b841aad62c56e7473bcc1e7f62292004,e744a235b841aad62c56e7473bcc1e7f62292004,Merge branch 'master' of github.com:kevin-montrose/Jil into dynamic-deserializer
kevin-montrose,2014-04-12 20:49:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ae20ef867bd0033e388cd9de49841ef5ebe9e840,ae20ef867bd0033e388cd9de49841ef5ebe9e840,finishing up custom dynamic impl; dynamic member discovery works again
kevin-montrose,2014-04-12 20:45:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e6723e698fea7cdb5db7538e8ca50aced78a9aa0,e6723e698fea7cdb5db7538e8ca50aced78a9aa0,even more dynamic work; invoking members works again
kevin-montrose,2014-04-12 20:31:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/387052e6fb368ef2474fb876de70f23c2e73168a,387052e6fb368ef2474fb876de70f23c2e73168a,and some more dynamic work; indexers work again
kevin-montrose,2014-04-12 20:10:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f8fca94277676052fd6ac63294a91067faaa41f1,f8fca94277676052fd6ac63294a91067faaa41f1,more dynamic implementation; getting members now works
kevin-montrose,2014-04-12 19:48:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/907a251c85116917c504a4231d0a02f8783153ec,907a251c85116917c504a4231d0a02f8783153ec,step 1 of ??? for implementing dynamic dispatch myself rather than use DynamicObject
kevin-montrose,2014-04-10 23:03:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/59f0416b1a05bfd1b0db9aaecca7aac3aab7bb7c,59f0416b1a05bfd1b0db9aaecca7aac3aab7bb7c,1.2.1
kevin-montrose,2014-04-10 23:01:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/532a4795e2e3f7b7985b6c406a584e8692b5d48d,532a4795e2e3f7b7985b6c406a584e8692b5d48d,fixes #19
kevin-montrose,2014-04-10 22:56:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6b24daf06ee96aceb4c3569055e3b7f82d3e01a4,6b24daf06ee96aceb4c3569055e3b7f82d3e01a4,failing test for #19
kevin-montrose,2014-04-10 22:51:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3271ab2257b61d313a96c7c9256e0fa75feb7a2f,3271ab2257b61d313a96c7c9256e0fa75feb7a2f,stopgap commit hunting down more dynamic errors
kevin-montrose,2014-03-30 19:53:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4749afa29cff1f01fb9d544aff86e6e97385f9b1,4749afa29cff1f01fb9d544aff86e6e97385f9b1,"finxing some bugs in dynamic coercision, adding some tests; Benchmark is still busted"
kevin-montrose,2014-03-30 19:25:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6daaccfce8dcea5433af3721dd0a28d7febb1e3f,6daaccfce8dcea5433af3721dd0a28d7febb1e3f,"reworking benchmark so values are *read* when deserialized; this is significant, because otherwise I could miss measuring the cost of actually using a value since conversion is deferred from deserializing"
kevin-montrose,2014-03-23 20:36:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0f991d2325de6f181f18f30e2aaa0caf0b39513e,0f991d2325de6f181f18f30e2aaa0caf0b39513e,"ISO8601 for dynamicly deserialized dates; let my hate for ISO8601 be known, this is disgusting code"
kevin-montrose,2014-03-23 19:58:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0059b939860079eb1af7f57a014aa7399bd6de0f,0059b939860079eb1af7f57a014aa7399bd6de0f,fixes for newtonsoft datetime formats including timezones
kevin-montrose,2014-03-23 19:56:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ac18fe6a2963260d3eefd2c90bd16db8b581af29,ac18fe6a2963260d3eefd2c90bd16db8b581af29,fixes for newtonsoft datetime formats and dynamic deserialization
kevin-montrose,2014-03-23 18:44:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7f86bcc74961db2552d6a41bf40f8c746adc1485,7f86bcc74961db2552d6a41bf40f8c746adc1485,adding (mostly failing) tests for dynamic datetime deserialization
kevin-montrose,2014-03-23 18:33:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8fbf8ccb28033cc9eb5b3741a77718699c9c8780,8fbf8ccb28033cc9eb5b3741a77718699c9c8780,Merge branch 'master' of github.com:kevin-montrose/Jil into dynamic-deserializer
kevin-montrose,2014-03-23 18:31:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/89dd4c8509f379a4aad7df5e0abdcb759e244daa,89dd4c8509f379a4aad7df5e0abdcb759e244daa,Merge branch 'master' of github.com:kevin-montrose/Jil into dynamic-deserializer
kevin-montrose,2014-03-23 18:18:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fae7846ee760b3316f879975634a09a3e3f75f1d,fae7846ee760b3316f879975634a09a3e3f75f1d,1.2.0
kevin-montrose,2014-03-23 18:16:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c2d256b2c0915565cabf5e22d558cdfef05749b3,c2d256b2c0915565cabf5e22d558cdfef05749b3,"add tests, and fix bugs around, IEnumerables<T>'s for static serialization; closes #17"
kevin-montrose,2014-03-23 17:48:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/36b2ab93a36ff757c61de39bf718c7acef465730,36b2ab93a36ff757c61de39bf718c7acef465730,lay groudwork for enumerable serialization per #17
kevin-montrose,2014-03-23 17:37:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1b9937462af5af03d19d8c6d44a2cfbe5ba19e6f,1b9937462af5af03d19d8c6d44a2cfbe5ba19e6f,update Sigil
kevin-montrose,2014-03-17 04:38:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9220b47babab5ecc203dba37d86a9f17c0f04c4d,9220b47babab5ecc203dba37d86a9f17c0f04c4d,"get started on DateTime support when deserializing dynamics; trickier, as we don't know something *is* a datetime at parse time"
kevin-montrose,2014-03-17 01:15:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/25026e5db05af6e576b4a530b8c63420699115f0,25026e5db05af6e576b4a530b8c63420699115f0,deadend; removing fast member stuff
kevin-montrose,2014-03-17 00:34:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d537c05d4f958e23dd6f5809fd295b44db41e5c9,d537c05d4f958e23dd6f5809fd295b44db41e5c9,"better, generally, to put this check after everything else"
kevin-montrose,2014-03-17 00:29:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7e36226a8c49f723faf717cfad894a352d01c50a,7e36226a8c49f723faf717cfad894a352d01c50a,"and here's the logical extreme, a much larger jump table in exchange for no ops that take over 1 cpu cycle; like previous attempts, needs some serious benchmarking to check actual perf at runtime"
kevin-montrose,2014-03-17 00:17:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3e589d95ef0d9ea402b9d4736b91c72dfe29224b,3e589d95ef0d9ea402b9d4736b91c72dfe29224b,"same basic idea as previous, but trading the |3 for a larger jump table"
kevin-montrose,2014-03-16 21:56:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/638642b3675b1edcaedbad2b41850a26aa9f70a5,638642b3675b1edcaedbad2b41850a26aa9f70a5,another candidate fast member function
kevin-montrose,2014-03-16 19:15:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/117be049187754be75d9c2a180d84a4ad6dde51e,117be049187754be75d9c2a180d84a4ad6dde51e,"yet another fast member function; simpler, but not fast enough"
kevin-montrose,2014-03-16 19:03:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f5d2b6ff27ecbefbccd47f9e94c2964aae1e8992,f5d2b6ff27ecbefbccd47f9e94c2964aae1e8992,"try another fast member function; closer, but still not better"
kevin-montrose,2014-03-16 18:41:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2e06ecaf706b2e0970e88a70cea497bd37b99a17,2e06ecaf706b2e0970e88a70cea497bd37b99a17,"a couple of fixes, and a test; looks like this algorithm isn't any better"
kevin-montrose,2014-03-16 18:09:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d32a43b1042e76937fdfeeb0877ab51b1741e5ae,d32a43b1042e76937fdfeeb0877ab51b1741e5ae,"whelp, here's an attempt at making a very hot switch faster; no idea if it works yet, finding the function to test in the first place is the hard part"
kevin-montrose,2014-03-16 04:23:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8ddd129f5601e3318c084ef204793278ae2e63b3,8ddd129f5601e3318c084ef204793278ae2e63b3,add a warning about these; they do all pass though
kevin-montrose,2014-03-15 17:21:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/86676b9763ebebc92c574b6cfdcf75b9a8bd64ed,86676b9763ebebc92c574b6cfdcf75b9a8bd64ed,break out all these exhaustive tests into a new build config
kevin-montrose,2014-03-15 05:55:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ba444583b0410dc25d9e07a868a1c201cb014ce5,ba444583b0410dc25d9e07a868a1c201cb014ce5,even more fixes for ulongs; also fixing some regressions around floats and doubles
kevin-montrose,2014-03-15 05:01:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/11bc16bbeba76286157f2dd00113d3dad5c53659,11bc16bbeba76286157f2dd00113d3dad5c53659,better test for ulong correctness check
kevin-montrose,2014-03-15 04:37:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e6a3d7708af89fe6d1fd9cb7ef32caf2a549a65f,e6a3d7708af89fe6d1fd9cb7ef32caf2a549a65f,a whack at handling that last digit when parsing ulongs
kevin-montrose,2014-03-12 04:01:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0c8d343ac4710a1a2bcff9f393127b7787eacb36,0c8d343ac4710a1a2bcff9f393127b7787eacb36,"whack at ulongs, with a failing test"
kevin-montrose,2014-03-12 03:33:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/093e80a9ac27786ee9aee202921a98dd5e01638a,093e80a9ac27786ee9aee202921a98dd5e01638a,and now longs
kevin-montrose,2014-03-12 02:10:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6f1332f3b8fca3ab1355094491ea34af4ddd1db3,6f1332f3b8fca3ab1355094491ea34af4ddd1db3,and now comment that long as hell test out
kevin-montrose,2014-03-12 02:10:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e1ca0d28c583497e731674522ae44eb426165e7f,e1ca0d28c583497e731674522ae44eb426165e7f,and now unsigned ints
kevin-montrose,2014-03-11 03:10:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0ac570340d2c35d939dc51b28b1375938d394845,0ac570340d2c35d939dc51b28b1375938d394845,and now unsigned small int types
kevin-montrose,2014-03-11 03:07:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4bf8f2b9e6f79480177e7d4209a5cc76809ccb7e,4bf8f2b9e6f79480177e7d4209a5cc76809ccb7e,"faster signed int handling for smaller int types, and tests"
kevin-montrose,2014-03-11 02:59:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4cfe892f22dcb976e408f5ab9b139a83b9c5f602,4cfe892f22dcb976e408f5ab9b139a83b9c5f602,"and again, comment out really expensive test"
kevin-montrose,2014-03-11 02:58:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9110ad69e5d5e7c52eefb04437f883a18b7a4f66,9110ad69e5d5e7c52eefb04437f883a18b7a4f66,exhaustive test of integer correctness complete
kevin-montrose,2014-03-11 02:08:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3f146238cf453919d1627ad6789cfb6d2aa14f6b,3f146238cf453919d1627ad6789cfb6d2aa14f6b,add an even faster path for integers
kevin-montrose,2014-03-11 01:47:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2a1efb6e8e412578331cd3d33577ca747762cdef,2a1efb6e8e412578331cd3d33577ca747762cdef,"comment out AllFloat test, too expensive to do every test run..."
kevin-montrose,2014-03-10 03:57:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a112a6792d602bd967efa1ce9791e6466c346c3e,a112a6792d602bd967efa1ce9791e6466c346c3e,and some more fast number parsing fixes; stopgap commit
kevin-montrose,2014-03-10 00:39:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0c7272b2f67c4b159233506030fbfa781b982737,0c7272b2f67c4b159233506030fbfa781b982737,another stopgap commit; yet another batch of dynamic parsing number fixes
kevin-montrose,2014-03-09 22:55:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1fdce90dc7e13f5650367e7a7aa547f6d3b7f441,1fdce90dc7e13f5650367e7a7aa547f6d3b7f441,another stopgap commit; bunch of fixes to fast number parsing when dynamically deserializing
kevin-montrose,2014-03-09 18:41:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f3437dcfd47dc709a3b5d7cee77e7d895f90c226,f3437dcfd47dc709a3b5d7cee77e7d895f90c226,"test for fast dynamic number parsing; about 50% faster looks like, needs more correctness testing though"
kevin-montrose,2014-03-09 18:27:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/af983c598fb3da9dab8db196720133b896c49fc0,af983c598fb3da9dab8db196720133b896c49fc0,add missing file
kevin-montrose,2014-03-09 18:27:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cd22732160f316496e3975e72a7bda652ce6f25d,cd22732160f316496e3975e72a7bda652ce6f25d,stopgap commit; first hack at a faster number parser
kevin-montrose,2014-03-03 02:42:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bc80076b70bfdc0d1a92947c16c02e287a1a2b49,bc80076b70bfdc0d1a92947c16c02e287a1a2b49,enums as object keys support for dynamic deserialization
kevin-montrose,2014-03-03 02:31:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/53661642ebbd8fea5e4ce80b5f5a40368baceceb,53661642ebbd8fea5e4ce80b5f5a40368baceceb,guid support for dynamic deserialization
kevin-montrose,2014-03-03 02:27:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ad0c392397d5bbe25295b65fa105ac5fc5fb465b,ad0c392397d5bbe25295b65fa105ac5fc5fb465b,enum support for dynamic deserialization
kevin-montrose,2014-03-03 02:17:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3efe29676b525454833f1cdd4dd1683d85c4db7e,3efe29676b525454833f1cdd4dd1683d85c4db7e,more dynamic tests
kevin-montrose,2014-03-03 01:55:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/39002f7e71b9fd162af37e176e882c6b71a91980,39002f7e71b9fd162af37e176e882c6b71a91980,"quick, janky, support for casting arrays to IEnumerable<T> and objects to IDictionary<string, T>"
kevin-montrose,2014-03-03 01:10:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/44ee6279b07e917c11df3850710a7963916cf311,44ee6279b07e917c11df3850710a7963916cf311,fix array enumeration
kevin-montrose,2014-02-24 04:30:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8ea687ccf9f3ec152c8e0a36728419cfc5718b44,8ea687ccf9f3ec152c8e0a36728419cfc5718b44,tests for dictionary enumeration (passing) and array enumeration (failing) along w/ code to fix a bunch of dynamic member lookup
kevin-montrose,2014-02-24 04:04:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/31d7181e2a6bff3bb8c4cd58fa352d9f09a3e178,31d7181e2a6bff3bb8c4cd58fa352d9f09a3e178,"no really, kill ValueOf"
kevin-montrose,2014-02-24 03:59:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/513924fc43370146d9c5facc257b720bb50d2770,513924fc43370146d9c5facc257b720bb50d2770,"kill valueOf() map, implement DynamicObject; still more to do"
kevin-montrose,2014-02-23 21:49:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e5022a77da200d6d7583729b280a577fd5957651,e5022a77da200d6d7583729b280a577fd5957651,"benchmark update for dynamic typing; mediocre performance wise, but functional"
kevin-montrose,2014-02-23 19:05:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0a5592c1b8b204722b4cb3705cde73343d0fd2ab,0a5592c1b8b204722b4cb3705cde73343d0fd2ab,fixes for dynamically deserializing objects and arrays
kevin-montrose,2014-02-23 18:39:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9cdc9024ad1207434fb410a14dd947de151d56ce,9cdc9024ad1207434fb410a14dd947de151d56ce,more work on dynamic deserializer
kevin-montrose,2014-02-23 18:07:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b1a35d7df93736fa9c01ff7963cc264d6b33b7cb,b1a35d7df93736fa9c01ff7963cc264d6b33b7cb,getting started on a dynamic deserializer
kevin-montrose,2014-02-23 17:28:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7519609dda6477bc34ea958c4568ca1b6ff6fc44,7519609dda6477bc34ea958c4568ca1b6ff6fc44,WAE relevant projects
kevin-montrose,2014-02-20 04:59:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/91bcbb0d69d90ca9c09245616e85a833e3e87a43,91bcbb0d69d90ca9c09245616e85a833e3e87a43,1.1.0
kevin-montrose,2014-02-19 06:31:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1ea5a4d01ca2499e48d5f2e270d9dd1313702307,1ea5a4d01ca2499e48d5f2e270d9dd1313702307,"upon further thought, it makes more sense to *always* add a setter if an interface has just a getter; but to still make setters no-ops if a simple interface doesn't define a getter; finish #14"
kevin-montrose,2014-02-19 06:01:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c4855728c42d4357e7acf6b538c2c72fc67b79ed,c4855728c42d4357e7acf6b538c2c72fc67b79ed,"make interfaces defined for #14 conform exactly, no extra getter or setter; let's us no-op some properties"
kevin-montrose,2014-02-19 05:48:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d953caf8c7bd97e18d77db3f9ea744e5a6e986eb,d953caf8c7bd97e18d77db3f9ea744e5a6e986eb,fix regression in UseCustomIntegerToString speed test
kevin-montrose,2014-02-19 05:45:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7da0ab6054c3b5445979b38ad6de3036e93b39cb,7da0ab6054c3b5445979b38ad6de3036e93b39cb,"handle case of simple interfaces, but with inheritance"
kevin-montrose,2014-02-19 05:23:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fb31eb2d69f1cf2564f75e6f5c7a5e2a4019f74e,fb31eb2d69f1cf2564f75e6f5c7a5e2a4019f74e,"first hack at providing default implementations for really simple interfaces, for #14"
kevin-montrose,2014-02-19 04:39:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3d7c72f91a5c6836894fe3212fc8e9fe4f15e619,3d7c72f91a5c6836894fe3212fc8e9fe4f15e619,fix #13
kevin-montrose,2014-02-19 04:35:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b723977c2fef48fe467702b220663491e3f0cbbd,b723977c2fef48fe467702b220663491e3f0cbbd,failing test for #13
kevin-montrose,2014-02-09 19:29:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f81f3a946ea7d15e68960954cbca17a2690ad8ba,f81f3a946ea7d15e68960954cbca17a2690ad8ba,fix formatting in README.md
kevin-montrose,2014-02-03 18:20:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8c8968af15b712b79463066bac2376e78283c8c3,8c8968af15b712b79463066bac2376e78283c8c3,Update README.md
kevin-montrose,2014-02-03 16:45:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/44aef95ecb762b34827ec22967ea263056b96434,44aef95ecb762b34827ec22967ea263056b96434,1.0.3
kevin-montrose,2014-02-03 09:07:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9ab1d0e3e7f089e5b5adaedf5c21136d56b94154,9ab1d0e3e7f089e5b5adaedf5c21136d56b94154,fix up that exhaustive float test
kevin-montrose,2014-02-02 22:26:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f4b0674d292e3657e0290bd912ca05975a518748,f4b0674d292e3657e0290bd912ca05975a518748,"commented out exhaustive float correctness test; it's a beast to run, but it's worth having around just in case"
kevin-montrose,2014-02-02 20:51:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bd3fb985ed8c29e61e49a6b790ec2c8f4dad6c47,bd3fb985ed8c29e61e49a6b790ec2c8f4dad6c47,"Fixing leading separators being accepted due to #12, in JSON a digit must precede .; fixing BadFloat, BadDouble, and BadDecimal tests by failing faster while parsing those types"
kevin-montrose,2014-02-02 19:33:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5627b1bdeb462619a17172e39894c63d04cae23c,5627b1bdeb462619a17172e39894c63d04cae23c,lost a little bit of fail-fast with #12; adding some failing tests
kevin-montrose,2014-02-02 19:22:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/52605c5edfe069bdb520096bdf0a401605b677a6,52605c5edfe069bdb520096bdf0a401605b677a6,Merge branch 'floatingPointDeserialization' of https://github.com/DavidKarlas/Jil into issue-12
kevin-montrose,2014-02-02 19:19:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e1510f322fd2596d9819b9352d90327c8ceb6c2c,e1510f322fd2596d9819b9352d90327c8ceb6c2c,test for #11
kevin-montrose,2014-02-02 19:04:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fce339f02e99bd4b139706b995e9e09168818880,fce339f02e99bd4b139706b995e9e09168818880,"Merge pull request #11 from DavidKarlas/ConstantToJSONCulture

GetConstantJSONStringEquivalent and cultures"
DavidKarlas,2014-02-02 09:12:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ceedce84f33bc14db862aafc67c16605e01f376c,ceedce84f33bc14db862aafc67c16605e01f376c,Floating point optimization and unit tests
DavidKarlas,2014-02-02 08:29:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/12503e6344b0b1d6a7b482e5db66330e3aadeefe,12503e6344b0b1d6a7b482e5db66330e3aadeefe,GetConstantJSONStringEquivalent was formatting based on Thread Culture instead of CultureInfo.InvariantCulture
kevin-montrose,2014-02-02 04:31:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f6560ec8a4f5a68671e62fd3bf8599b88a9bb535,f6560ec8a4f5a68671e62fd3bf8599b88a9bb535,1.0.2
kevin-montrose,2014-02-02 04:29:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c863324c0cdc57df988670edcef66c96667716b7,c863324c0cdc57df988670edcef66c96667716b7,"an ineligent, but general, fix for the serialize side of #10; fixes weird culture serialization test; long term I prefer baking two copies and doing a switch early in the pipeline over these extra branches, but that's just a gut feel need to set aside some time to measure perf"
kevin-montrose,2014-02-02 04:16:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/608fc3b9f90c9cfc99af80a2a6a45fd055b9ff78,608fc3b9f90c9cfc99af80a2a6a45fd055b9ff78,fix bad culture info when using the directly to string version here...
kevin-montrose,2014-02-02 04:08:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/60764dc3584a398b02e53627d0922eb8a5f79b4a,60764dc3584a398b02e53627d0922eb8a5f79b4a,failing test for serializing w/o a weird culture
kevin-montrose,2014-02-02 04:00:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/964dd3f9cf667518a89bb09bd89b8b9ce8b9b824,964dd3f9cf667518a89bb09bd89b8b9ce8b9b824,update quick benchmark to include deserialization
kevin-montrose,2014-02-02 01:06:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f3154b4eb8bf12baa38949939bb046f3e26e1b61,f3154b4eb8bf12baa38949939bb046f3e26e1b61,Merge branch 'master' of https://github.com/kevin-montrose/Jil
kevin-montrose,2014-02-02 01:05:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fb6eb63ee38e176aa640e6332d7e48e237631b69,fb6eb63ee38e176aa640e6332d7e48e237631b69,"Merge pull request #10 from DavidKarlas/master

Using InvariantCulture instead of Threads culture to Deserialize data"
kevin-montrose,2014-02-02 01:04:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3a050efb534ef1711a66cf9f38decec0b4abb120,3a050efb534ef1711a66cf9f38decec0b4abb120,update Benchmark to include deserialization
DavidKarlas,2014-02-01 23:11:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/856edd513c8d91a039965a3857d1d249100614f7,856edd513c8d91a039965a3857d1d249100614f7,Using InvariantCulture instead of Threads culture to Deserialize data
kevin-montrose,2014-02-01 20:23:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c056ce2278d1f6fa01956bbad740c6105e8d8659,c056ce2278d1f6fa01956bbad740c6105e8d8659,1.0.1
kevin-montrose,2014-02-01 20:22:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/da8902bafa9da4bff94c1619ad0fc6fb5b5f4756,da8902bafa9da4bff94c1619ad0fc6fb5b5f4756,fix failing tests
kevin-montrose,2014-02-01 20:20:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/47283ed0a4ca678689cc4f886d299eb1fa309bda,47283ed0a4ca678689cc4f886d299eb1fa309bda,add 2 failing tests for DataMember attributes w/o set Names
kevin-montrose,2014-02-01 18:31:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eb0b28a5ece16f307688ceb823274d12abf0574b,eb0b28a5ece16f307688ceb823274d12abf0574b,1.0.0
kevin-montrose,2014-01-27 00:31:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7682ce9b07c876ffd75d797c48ed3d99bffc5880,7682ce9b07c876ffd75d797c48ed3d99bffc5880,0.14.0
kevin-montrose,2014-01-27 00:09:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b7cc54c3a29e639c44a6f9282c62dc51bf97636f,b7cc54c3a29e639c44a6f9282c62dc51bf97636f,"make serialization also not explode during type initialization, as deserialize already does"
kevin-montrose,2014-01-26 23:45:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d0895c55040f4fba0df077567ddc44052594fc0f,d0895c55040f4fba0df077567ddc44052594fc0f,that should wrap up the cleanup
kevin-montrose,2014-01-26 23:41:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ae44abc40e22927ae75f30339fc6cb2ae954b612,ae44abc40e22927ae75f30339fc6cb2ae954b612,aaaand yet more
kevin-montrose,2014-01-26 23:39:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/24eeaf4ced481fecf64d492cdfd3cd8c488c606c,24eeaf4ced481fecf64d492cdfd3cd8c488c606c,and still more
kevin-montrose,2014-01-26 23:34:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3aba0a3fcc44c48af80932961d2b3171761a85f1,3aba0a3fcc44c48af80932961d2b3171761a85f1,even more cleanup
kevin-montrose,2014-01-26 23:30:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/15959988b35cc65e9647e0ceb7ac636087c04ae2,15959988b35cc65e9647e0ceb7ac636087c04ae2,more serializer builder cleanup
kevin-montrose,2014-01-26 23:26:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/90e3c22f603446f21a43abffde67afdfca08226f,90e3c22f603446f21a43abffde67afdfca08226f,start cleanup of serializer builder
kevin-montrose,2014-01-26 23:13:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d5818c9f74bf197a679ad0837da1c3148b6842aa,d5818c9f74bf197a679ad0837da1c3148b6842aa,"better handle errors during deserializer construction; no longer killing type init, but instead constructing a delegate that wraps up and throws the original exception for easier debugging"
kevin-montrose,2014-01-26 22:23:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/036eee631a53f07a0060f59692066c1b38a3361b,036eee631a53f07a0060f59692066c1b38a3361b,comment spacing
kevin-montrose,2014-01-26 22:21:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/35ae1e6a9f78c1035d0aeb0d13cc3fc81fde7687,35ae1e6a9f78c1035d0aeb0d13cc3fc81fde7687,fix last edge case around empty object deserialization; done with #7 for time being
kevin-montrose,2014-01-26 22:05:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d7107b342a2c8f6703d5355dc207208e932ae9b4,d7107b342a2c8f6703d5355dc207208e932ae9b4,fix more edge cases as in #7
kevin-montrose,2014-01-26 21:48:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2285d472086bf287e6fc82b5c02badb996e90c54,2285d472086bf287e6fc82b5c02badb996e90c54,fix one edge case causing crappy crash like in #7
kevin-montrose,2014-01-24 03:56:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7298b6737eb6828b8e02958d6e3a255ba8963b3a,7298b6737eb6828b8e02958d6e3a255ba8963b3a,test null anonymous values
kevin-montrose,2014-01-24 03:53:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a25a2f70d714cf101be0c49ac59bd9b51783b234,a25a2f70d714cf101be0c49ac59bd9b51783b234,implement hash lookup for anonymous objects
kevin-montrose,2014-01-22 04:58:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/728375ea48b1c90aa735743dc8c321d62ec80b2a,728375ea48b1c90aa735743dc8c321d62ec80b2a,0.13.0
kevin-montrose,2014-01-22 04:56:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/426568a5551be6c98ac903ebdd2e754393787f35,426568a5551be6c98ac903ebdd2e754393787f35,grab some useful data on DeserializationException; closes #8
kevin-montrose,2014-01-22 04:09:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e014d1abd76e3061839db0a025dc4fbe9cd9bd21,e014d1abd76e3061839db0a025dc4fbe9cd9bd21,"since this timezone data is actually thrown away, discard a couple bits of logic and some branches that aren't needed; fixes #9"
kevin-montrose,2014-01-22 03:57:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fb28db1324c32654da90157db3ff25adf1ef7615,fb28db1324c32654da90157db3ff25adf1ef7615,first hack at handling +/-#### time zone offsets that Json.NET produces sometimes
kevin-montrose,2014-01-21 06:12:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/57c37dcb60b574a7bc8f82295bcc399abe95aa44,57c37dcb60b574a7bc8f82295bcc399abe95aa44,0.12.0
kevin-montrose,2014-01-21 06:10:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/194e6467d1c5436b699c0c43f8c0525a8209c82c,194e6467d1c5436b699c0c43f8c0525a8209c82c,support for Name on DataMemberAttribute; closes #5
kevin-montrose,2014-01-21 05:48:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/070f4c8f527a83e5d5c6389cab33577ac8f5bebb,070f4c8f527a83e5d5c6389cab33577ac8f5bebb,"Merge pull request #6 from yellis/SerializeNestedDict

Correct nested dictionary serialization"
yellis,2014-01-20 08:30:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/320478770e46a2cddc6d94a4881fb86985899d7b,320478770e46a2cddc6d94a4881fb86985899d7b,Correct nested dictionary serialization
kevin-montrose,2014-01-20 00:26:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ccdb5f5a78df8e9138a7bf5250adfb5cb40d6a86,ccdb5f5a78df8e9138a7bf5250adfb5cb40d6a86,0.11.0
kevin-montrose,2014-01-20 00:24:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4b73da07955a553898d8e32e15abd74e1545db75,4b73da07955a553898d8e32e15abd74e1545db75,more anon tests
kevin-montrose,2014-01-17 05:40:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5d7c8021fa458bba624f68e3f546d15b6df46180,5d7c8021fa458bba624f68e3f546d15b6df46180,Merge branch 'master' of https://github.com/kevin-montrose/Jil
kevin-montrose,2014-01-17 05:40:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c082dc8dc35093e78c683bb166a2df16ccbf8713,c082dc8dc35093e78c683bb166a2df16ccbf8713,"first whack at anonymous object deserialization; you're a bad person if you use it, but I'm not gonna stop you"
kevin-montrose,2014-01-17 05:10:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cea219a87951866bfd480e9dfa68fd4bc01dc7ba,cea219a87951866bfd480e9dfa68fd4bc01dc7ba,Move Utils into Common
kevin-montrose,2014-01-17 05:08:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0daf8fd0e7169439dc6ea50735e0cb0920aa1383,0daf8fd0e7169439dc6ea50735e0cb0920aa1383,utility method that does the hard property -> constructor argument mapping for anonymous types
kevin-montrose,2014-01-17 03:34:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/feb12c634c61ad62c6100ef828678dc268915518,feb12c634c61ad62c6100ef828678dc268915518,make note of some missing validation
kevin-montrose,2014-01-17 03:32:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1cc0c4eea59888afd4a8262a9573fa8bba2f6c20,1cc0c4eea59888afd4a8262a9573fa8bba2f6c20,add failing test for deserializing anonymous objects
kevin-montrose,2014-01-09 18:50:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4de82932e387cfa129a93013ff604be0e61e114c,4de82932e387cfa129a93013ff604be0e61e114c,"This should be public, but unconstructable"
kevin-montrose,2014-01-06 04:41:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/adf2d1a3292385103f799196e61a48a8c92e5b2a,adf2d1a3292385103f799196e61a48a8c92e5b2a,0.10.0; release candidate
kevin-montrose,2014-01-06 04:39:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ce304a10d4502cacf0a150b7ac0b90c7640690d7,ce304a10d4502cacf0a150b7ac0b90c7640690d7,remove unnecessary parameter to inner deserialization Func
kevin-montrose,2014-01-06 04:31:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a554a2a5620ee48bbcb0497ba7298db5ff73bdb8,a554a2a5620ee48bbcb0497ba7298db5ff73bdb8,add nulls to dynamic serialization
kevin-montrose,2014-01-06 04:29:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f92dd2cd6395207f08a0537027feeb4c90a10d62,f92dd2cd6395207f08a0537027feeb4c90a10d62,unbreak all the tests that changing member ordering broke
kevin-montrose,2014-01-06 04:08:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/129b29b04a95072ca601406ffb774ef341e36511,129b29b04a95072ca601406ffb774ef341e36511,"remove capacity estimator; it's not good enough for a proper 1.0 release, so it's got to go"
kevin-montrose,2014-01-06 04:04:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d58b8090fb935d56b3eab3e3d0cff8183860080c,d58b8090fb935d56b3eab3e3d0cff8183860080c,update member ordering to match new (ready for release) state of serializer
kevin-montrose,2014-01-05 22:06:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ab51ca6d526295a0f3c127332dc7bc0c6a3a50f5,ab51ca6d526295a0f3c127332dc7bc0c6a3a50f5,"these escape sequece aren't valid in member names, so just bail in every case except 'u'; eliminates a branch, totally worth it"
kevin-montrose,2014-01-05 21:53:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b767e15cdf375ad723b087d405b719ebb7ea0786,b767e15cdf375ad723b087d405b719ebb7ea0786,allow disabling of member hashing via Options; it's possible for a malicious JSON provider to exploit it force a collision.  It's not a *big* attack really (they could just put the bad value in the collided key) but better safe than sorry.
kevin-montrose,2014-01-05 21:44:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/054917006f254b2e1b842ec1cb75fb6db15b1233,054917006f254b2e1b842ec1cb75fb6db15b1233,fix a pretty bad bug with escaped hex sequences being incorrectly read if the characters a-f were used (instead of A-F)
kevin-montrose,2014-01-05 03:22:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8d28b8b9f53dbb1dea4e4fddac4d621553a75be4,8d28b8b9f53dbb1dea4e4fddac4d621553a75be4,group files in solution
kevin-montrose,2014-01-05 03:12:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f607d107ee60d0bac92b57f94eda9c3165c85a7f,f607d107ee60d0bac92b57f94eda9c3165c85a7f,0.9.0
kevin-montrose,2014-01-05 03:08:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/45708ca0b2ed1d980035eb87339203228e04c224,45708ca0b2ed1d980035eb87339203228e04c224,searching for an ideal power-of-two modulus when hashing now
kevin-montrose,2014-01-05 02:57:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9a6c5da697b5bdccde53b519b3ba84539ad66d56,9a6c5da697b5bdccde53b519b3ba84539ad66d56,more hashing cleanup & prep
kevin-montrose,2014-01-05 02:45:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0bbb174979f43ae337f01de4709766d755032a20,0bbb174979f43ae337f01de4709766d755032a20,infrastructure for tailoring object member hashing to particular types
kevin-montrose,2014-01-05 02:22:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3184548fe7260ee9e545b557069a9cd6d704bdc4,3184548fe7260ee9e545b557069a9cd6d704bdc4,"speed test for object member lookup; it's ever so slightly faster than using a dictionary, there's probably some more to squeeze from this stone"
kevin-montrose,2014-01-05 02:09:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/89f6d091d85477f856db300ba6475b6d37a75499,89f6d091d85477f856db300ba6475b6d37a75499,fix bug with virtual properties being invoked incorrectly
kevin-montrose,2014-01-05 02:06:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/59a95b2ff0d14510d42cb1e777f952b9cb04892d,59a95b2ff0d14510d42cb1e777f952b9cb04892d,Update Sigil & first functional hack at hashing object keys instead of reading them into strings; don't know if it's any good just yet
kevin-montrose,2014-01-05 00:43:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/38cb85782a3ce3c307aa7b71c949f5fc9c9b2c80,38cb85782a3ce3c307aa7b71c949f5fc9c9b2c80,"getting started on an experiment with replacing Dictionary<string,int> lookups with a fast hash w/o storage for deserializing objects"
kevin-montrose,2014-01-04 23:51:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/67978b2ce003def61b5e8776e6f8fa89d152c567,67978b2ce003def61b5e8776e6f8fa89d152c567,more finese around allocating a char[]
kevin-montrose,2014-01-04 23:38:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a5de25a754ef43c57b32e8d20298b0efde2a7e87,a5de25a754ef43c57b32e8d20298b0efde2a7e87,"first speed test for deserialization (about time), showing it's better to allocate a char[] if we're gonna be deserializing strings"
kevin-montrose,2014-01-04 22:53:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ab90a6071dac73bd8aaed071b52376ddf94befbe,ab90a6071dac73bd8aaed071b52376ddf94befbe,0.8.0
kevin-montrose,2014-01-04 22:51:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/99e9a6551c36c67f650c3addd88bca90aa7e4036,99e9a6551c36c67f650c3addd88bca90aa7e4036,fix comment
kevin-montrose,2014-01-04 22:47:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8cfbb54e0283f80238acc9900f2c3aee94630a18,8cfbb54e0283f80238acc9900f2c3aee94630a18,"Remove FastHexToInt, fixing a couple encoding bugs and further reducing char_buffer[] use"
kevin-montrose,2014-01-04 22:37:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4eae18ff500015aab8c2c5da8dccb56e69e0dd45,4eae18ff500015aab8c2c5da8dccb56e69e0dd45,cleanup and renaming after the removal of (most) char_buffer usage
kevin-montrose,2014-01-04 22:35:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8c4f8abb228ab18cf9d770da667501436824beda,8c4f8abb228ab18cf9d770da667501436824beda,remove char_buffer from (some) string deserializations
kevin-montrose,2014-01-04 22:22:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a081c31f359aabd581871bb68a4539b43ea2ad52,a081c31f359aabd581871bb68a4539b43ea2ad52,"remove char_buffer from deserializing encoded characters, think I can remove this in almost all cases"
kevin-montrose,2014-01-03 04:38:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1195ca789590d4fb25ef3c6800ca6cfa96710f3f,1195ca789590d4fb25ef3c6800ca6cfa96710f3f,0.7.0
kevin-montrose,2013-12-30 18:14:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bd837be3952dcfb0d2b5e63883148723df5bf2a4,bd837be3952dcfb0d2b5e63883148723df5bf2a4,fix deserializing ValueTypes; need to add test and fix to Sigil as well
kevin-montrose,2013-12-30 18:11:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/315a39ec828fd75c8af81d8979d371110bae6e03,315a39ec828fd75c8af81d8979d371110bae6e03,add failing ValueType deserialization test; might also be a Sigil bug in here
kevin-montrose,2013-12-30 04:23:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/670f0603f99380b1f0ac18f8f9df3fb49fda5ecc,670f0603f99380b1f0ac18f8f9df3fb49fda5ecc,"jump through some hoops to shrink char_buffer down to 4 (the smallest # that matters) when possible, which is pretty often really"
kevin-montrose,2013-12-30 03:18:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/530353a19cb7a88fd985758021a162606b4f6676,530353a19cb7a88fd985758021a162606b4f6676,don't put a StringBuilder local on the stack when we're in one of those rare cases where we can prove it's not necessary
kevin-montrose,2013-12-30 03:08:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ffcb9a49755b07a909bf0eb347a52cdbd966b406,ffcb9a49755b07a909bf0eb347a52cdbd966b406,"don't allocate a char[] when it won't be needed (which is rare, but possible)"
kevin-montrose,2013-12-30 02:55:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/862f07602738f1ebeecfdbc3454f7bb0601dca47,862f07602738f1ebeecfdbc3454f7bb0601dca47,don't allocate a StringBuilder pre-emptively when deserializing
kevin-montrose,2013-12-30 01:03:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/89300d66dc1a6a3d0de8f630741d982ad51c550d,89300d66dc1a6a3d0de8f630741d982ad51c550d,allow enums as keys when deserializing dictionaries
kevin-montrose,2013-12-30 00:43:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3448839a3172ced53cb0631f28a26e8a99f5dcf7,3448839a3172ced53cb0631f28a26e8a99f5dcf7,allow integers as keys when deserializing
kevin-montrose,2013-12-29 04:32:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/38edfeebe6fa1cf079cb055014ce4e81ea0f75f7,38edfeebe6fa1cf079cb055014ce4e81ea0f75f7,fix enum constant propagation
kevin-montrose,2013-12-29 01:44:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/907167e8956311c346b5611a4997416ca346e8d9,907167e8956311c346b5611a4997416ca346e8d9,"enum constant propagation no worky, commiting failing test"
kevin-montrose,2013-12-29 01:01:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e3b1490b5775b636382d81240cb181e3ebd63340,e3b1490b5775b636382d81240cb181e3ebd63340,add a JSON.Deserialize(string) method
kevin-montrose,2013-12-28 23:24:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f49d84690855db65a78552c396535e03bf522c2c,f49d84690855db65a78552c396535e03bf522c2c,"fix a missed constant propagation case, add a speedproof test (about a 4x speed up when applicable)"
kevin-montrose,2013-12-28 23:03:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2017a9259a863d67d28eaa455dd7377eb689078c,2017a9259a863d67d28eaa455dd7377eb689078c,"always forgetting about the booleans, seriously"
kevin-montrose,2013-12-28 22:56:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/04db7a948f2274694404ddafd12d272e1057de85,04db7a948f2274694404ddafd12d272e1057de85,fix a couple bugs with constant propagation around unsigned types
kevin-montrose,2013-12-28 22:19:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2c107aee013050d664599db4f3df7981e65429ea,2c107aee013050d664599db4f3df7981e65429ea,first whack at detecting (and testing) constant fields and properties and pre-converting them to JSON
kevin-montrose,2013-12-28 21:19:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/414fdd5d60d9b14b37f3feb7fb68210656fffae2,414fdd5d60d9b14b37f3feb7fb68210656fffae2,starting on constant propagation for object members ; stopgap commit
kevin-montrose,2013-12-28 20:27:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/605e11401c4be14acd495de1dfb59b431236bf1d,605e11401c4be14acd495de1dfb59b431236bf1d,"always forget about bools, adding to IsConstant test"
kevin-montrose,2013-12-28 20:11:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2acebde2331a7ab1d13d76b709779eb3ee4df2c0,2acebde2331a7ab1d13d76b709779eb3ee4df2c0,laying groundwork for constant propogation during serialization
kevin-montrose,2013-12-28 19:10:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bc2ad5b3cfdd51264da7592060d9bf2984851063,bc2ad5b3cfdd51264da7592060d9bf2984851063,test for surrogate pairs
kevin-montrose,2013-12-28 18:54:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/98b792c19bc6a53ed392972f6a3ceb44e15d8a46,98b792c19bc6a53ed392972f6a3ceb44e15d8a46,implemented ISO8601 week dates
kevin-montrose,2013-12-28 18:21:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e0f6071f41881ce202b445e4faa97780ea095409,e0f6071f41881ce202b445e4faa97780ea095409,let's be more aggressive
kevin-montrose,2013-12-28 01:16:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9a8cf899232a90114644bbfc7e92666d81d04835,9a8cf899232a90114644bbfc7e92666d81d04835,fix interface-only dictionary deserialization
kevin-montrose,2013-12-28 01:06:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8a132964f0fb2ad10708d32dce1fa344e198fd87,8a132964f0fb2ad10708d32dce1fa344e198fd87,fix interface-only list deserialization
kevin-montrose,2013-12-27 21:58:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8957734219f86dd13e2db9b7773a696430d0684b,8957734219f86dd13e2db9b7773a696430d0684b,0.6.0; first release with deserialization support
kevin-montrose,2013-12-27 21:08:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e9202786c9bbfce2530c7011092d452e106c1265,e9202786c9bbfce2530c7011092d452e106c1265,fix decimal/double/float member parsing
kevin-montrose,2013-12-27 20:09:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/41af0a58fa7f3c1f929993d78d226bb74dc6d43c,41af0a58fa7f3c1f929993d78d226bb74dc6d43c,"found a bug with decimal/double/float members, adding a test; also modify Benchmark to test some deserialization while in DEBUG"
kevin-montrose,2013-12-27 18:01:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6df122bbdf9f83c329c0df8b6ee741ad813170c5,6df122bbdf9f83c329c0df8b6ee741ad813170c5,fix deserializing arrays
kevin-montrose,2013-12-27 17:42:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ec7ef9ce58ffdb8d6a48f2d75022ebde627492fa,ec7ef9ce58ffdb8d6a48f2d75022ebde627492fa,"fixing ordinal dates, lots of error checking and tests on ISO8601"
kevin-montrose,2013-12-27 16:50:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ec26b8e0c2120aac38635f62ef80c2902ee23c9f,ec26b8e0c2120aac38635f62ef80c2902ee23c9f,modify ParseISO8601 test to use full JSON.Deserialize method instead of reflecting into Methods
kevin-montrose,2013-12-27 16:45:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/76706d660212f2c2f5a11b5293f970951889467e,76706d660212f2c2f5a11b5293f970951889467e,"increase maximum size of ISO8601 time to 32 characters, a nice round number"
kevin-montrose,2013-12-27 16:39:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/41ec72e24b6ae5c129be3599eb4527e63338df8c,41ec72e24b6ae5c129be3599eb4527e63338df8c,implement some more of RFC3339's changes to ISO8601
kevin-montrose,2013-12-27 03:29:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a69f82ff4cf33a552064c84c06c71fd62c873eeb,a69f82ff4cf33a552064c84c06c71fd62c873eeb,get all date discussion reporduce at top of this file
kevin-montrose,2013-12-27 03:23:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ab7f69b245d660e2319d13d19aef636db4b60b84,ab7f69b245d660e2319d13d19aef636db4b60b84,break ISO8601 methods out into another file
kevin-montrose,2013-12-27 03:12:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/077782c6b8fe528cc79414b02ddc7cb7f6016047,077782c6b8fe528cc79414b02ddc7cb7f6016047,"more tests for ISO8601 dates, fixed a error messages"
kevin-montrose,2013-12-26 22:48:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4094545f8d3e0fd3de209212e604ff46b93e7318,4094545f8d3e0fd3de209212e604ff46b93e7318,clean that last test up some
kevin-montrose,2013-12-26 22:42:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5c4cd070b34ac2f49212c21f1345e4e468267ef5,5c4cd070b34ac2f49212c21f1345e4e468267ef5,"rework some error tests to go through JSON properly, setup more infrastructure for ISO8601 parsing"
kevin-montrose,2013-12-26 22:33:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eecd1216c661cb4117aaad20cd1f1e659cf141e4,eecd1216c661cb4117aaad20cd1f1e659cf141e4,testing some error cases when parsing ISO8601 dates
kevin-montrose,2013-12-26 22:07:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b712fa9daf1eb833e91ef5bf9203253a91dbaac3,b712fa9daf1eb833e91ef5bf9203253a91dbaac3,"more progress on ISO8601 dates, timezone offsets more or less work; now the bugbear, RFC3339 differs from ISO8601 in meaningful ways but they're both encountered as 'ISO8601' in the wild"
kevin-montrose,2013-12-26 20:50:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cc2297003bf98567aab6ce0f6dacb3f7b3602b5c,cc2297003bf98567aab6ce0f6dacb3f7b3602b5c,"more pgoress on ISO8601 dates, utc specifier works now"
kevin-montrose,2013-12-26 20:23:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/47ccef709d632bd657699f284a5e297871fab0b9,47ccef709d632bd657699f284a5e297871fab0b9,"ISO8601 times finished up, in theory"
kevin-montrose,2013-12-26 20:11:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dedd40c38ff23046013c0716560cfd422c746b39,dedd40c38ff23046013c0716560cfd422c746b39,"more progress on ISO8601 dates, some times can be parsed now"
kevin-montrose,2013-12-26 18:36:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/32204738b9577a1619b1ac0b318585b056243b36,32204738b9577a1619b1ac0b318585b056243b36,getting started on a two pass parser for ISO8601 dates
kevin-montrose,2013-12-26 17:39:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/de24a0d82ff6f4e92a65f90eab06ebc89bdd4908,de24a0d82ff6f4e92a65f90eab06ebc89bdd4908,I commit this just as a testament to how much bullshit ISO8601 is; it's completely wrong code
kevin-montrose,2013-12-25 23:02:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ff83e29297045935494466a9b3ac0be73c5481ee,ff83e29297045935494466a9b3ac0be73c5481ee,millisecond and second datetime formats implemented
kevin-montrose,2013-12-25 22:54:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/72fdce07ce7c96ea5ecbe0f63ddae3ffda75e378,72fdce07ce7c96ea5ecbe0f63ddae3ffda75e378,getting started on datetime deserialization
kevin-montrose,2013-12-25 21:45:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/81f51406cd349732783b04c2304587e774be7d9c,81f51406cd349732783b04c2304587e774be7d9c,GUID deserialization
kevin-montrose,2013-12-25 21:07:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f5cc610d2033b76a445d7278224e07bcc9e5e3fb,f5cc610d2033b76a445d7278224e07bcc9e5e3fb,update to Sigil 4.0.1
kevin-montrose,2013-12-25 03:22:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b558b5f5216683849696d1f9e03308fab47498c7,b558b5f5216683849696d1f9e03308fab47498c7,"another whack at speeding up first time call, improved about 22x"
kevin-montrose,2013-12-25 02:59:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/07c14345123806f9c33748e6dbf0b932ae8b5216,07c14345123806f9c33748e6dbf0b932ae8b5216,add some more models to benchmark
kevin-montrose,2013-12-24 21:25:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d1c07f4094196a10493c4d824c0a514b31301298,d1c07f4094196a10493c4d824c0a514b31301298,"more first-time-call speed up, + a test; about 50% faster right now, which is... a start"
kevin-montrose,2013-12-24 20:44:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/63e1136e716a97621f16bb0909cd5be220f07499,63e1136e716a97621f16bb0909cd5be220f07499,"speed up first-time calls by disabling verification in Release mode; this also reveals another Sigil bug in the Dictionary deserializing code, need to nail that down"
kevin-montrose,2013-12-24 20:37:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/257189cf120a9d90f6c3d70b10f78b9f11c54e75,257189cf120a9d90f6c3d70b10f78b9f11c54e75,"Update Sigil, remove now erroneous casts"
kevin-montrose,2013-12-02 01:39:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d2085e67ed604294f4ccefb34d353d4911a927de,d2085e67ed604294f4ccefb34d353d4911a927de,"uncomment failing dictionary test; this is a weird one, failure on LoadLocal which, strictly speaking, makes no sense; possibly a Sigil bug, possibly some crazy path"
kevin-montrose,2013-12-02 01:37:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c4228bb521a7b6ec029843de0ce157fbcd8768f4,c4228bb521a7b6ec029843de0ce157fbcd8768f4,minor refactor to consolidate recursive type deserialization; more dictionary tests
kevin-montrose,2013-12-02 01:09:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9a621729f86f027474f54553828761bba6af5b57,9a621729f86f027474f54553828761bba6af5b57,getting started on dictionary deserialization
kevin-montrose,2013-12-02 00:28:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/86359ff67932cb949e265a830c5389622b9bda90,86359ff67932cb949e265a830c5389622b9bda90,support for recursive types
kevin-montrose,2013-12-02 00:04:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1fdca27704b0c079273e2d45351c6ac84f4e3f43,1fdca27704b0c079273e2d45351c6ac84f4e3f43,handling null strings when skipping members in objects
kevin-montrose,2013-12-02 00:00:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5f282e435f2655912f38761e8c98ce12f63bb8c0,5f282e435f2655912f38761e8c98ce12f63bb8c0,even better skip member implementation; object and list implemented but null strings still unhandled
kevin-montrose,2013-12-01 23:32:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/51b4a41bf4bbf701c671b2193a8ba96e4752921c,51b4a41bf4bbf701c671b2193a8ba96e4752921c,better skip member implementation; object and list skipping still unimplemented
kevin-montrose,2013-12-01 23:20:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ee580bf1ad08741aca376126e978846b6f8e63e5,ee580bf1ad08741aca376126e978846b6f8e63e5,get started properly skipping members in an object that aren't defined in the target deserialization
kevin-montrose,2013-12-01 05:02:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a498793939c6c271cd5552eae45a6db42237ddcf,a498793939c6c271cd5552eae45a6db42237ddcf,fix bugs from leaving a TextReader under consumed
kevin-montrose,2013-12-01 04:56:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cfa60953233b75b9bdd33c860e25c77ffc97b608,cfa60953233b75b9bdd33c860e25c77ffc97b608,add to tests to make sure we're always fulling consuming a test when we return successfully; a few tests are failing now
kevin-montrose,2013-12-01 04:51:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/55dccb21e166ca68d875ce0846364c035dfe4cd6,55dccb21e166ca68d875ce0846364c035dfe4cd6,"test weird whitespace w/ objects ; basic objects work now, hooray"
kevin-montrose,2013-12-01 04:46:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b3d3cf7e5f9c33299a3cb43e9b7745f3db63cfa0,b3d3cf7e5f9c33299a3cb43e9b7745f3db63cfa0,"remove debug code, cleanup tests a little"
kevin-montrose,2013-12-01 04:28:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/777d3c2369456785d5003bf237f8c819f7a72243,777d3c2369456785d5003bf237f8c819f7a72243,fix bugs with objects with > 1 member defined
kevin-montrose,2013-12-01 04:08:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/08d48f1c06e551fef210c1f03ed275e3ec68a9e8,08d48f1c06e551fef210c1f03ed275e3ec68a9e8,get started on reading user defined types/objects
kevin-montrose,2013-12-01 00:08:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9e3b94a632e9bb412a41cfb102b3c09e70f1d552,9e3b94a632e9bb412a41cfb102b3c09e70f1d552,add tests for whitespace in lists
kevin-montrose,2013-12-01 00:02:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/195181f210923aec8f01a93116089a2e7e2938c3,195181f210923aec8f01a93116089a2e7e2938c3,lists implemented
kevin-montrose,2013-11-30 23:50:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b390d927ab3c7abe50a843408964fb45f79124ae,b390d927ab3c7abe50a843408964fb45f79124ae,stopgap commit ; fixing overflow checks
kevin-montrose,2013-11-30 23:41:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/30052ba60d9174dcd7acb9c14754be7a6560b819,30052ba60d9174dcd7acb9c14754be7a6560b819,"stopgap commit ; refactor number reading to not overread, some overflow checks are broken"
kevin-montrose,2013-11-30 23:16:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/20973328026d28be442ee91b7c944ada4a58933b,20973328026d28be442ee91b7c944ada4a58933b,stopgap commit ; partial refactoring to remove ExpectedEndMarker
kevin-montrose,2013-11-30 23:04:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/68096d969891aa2d0af4f4d766043ffce57b0ac0,68096d969891aa2d0af4f4d766043ffce57b0ac0,"partial list implementation; the overread on number is gonna cause problems, need to refactor that out"
kevin-montrose,2013-11-30 22:34:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7952a0f9014e84d515d67caec02b7a997690887d,7952a0f9014e84d515d67caec02b7a997690887d,bools implemented
kevin-montrose,2013-11-30 22:25:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/06f71c92f9eeebdc10c97c00fda803e9a23b3016,06f71c92f9eeebdc10c97c00fda803e9a23b3016,nullables implemented
kevin-montrose,2013-11-30 21:49:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0ebb5a56169fad22d349803ece7d38b1a794af5e,0ebb5a56169fad22d349803ece7d38b1a794af5e,reducing code duplication
kevin-montrose,2013-11-30 21:44:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5b1d86cb55f8ee93464cbf10d787a3eebe49571d,5b1d86cb55f8ee93464cbf10d787a3eebe49571d,remove debug code
kevin-montrose,2013-11-30 21:43:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/025b0bfcb062f7edbd5b19d8caa2324a3bc4b834,025b0bfcb062f7edbd5b19d8caa2324a3bc4b834,rename method
kevin-montrose,2013-11-30 21:42:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4119a7a238e1a44bdee40ed6f9269636f7210266,4119a7a238e1a44bdee40ed6f9269636f7210266,"stop trying to be fancy with enum deserialization, get it working first"
kevin-montrose,2013-11-25 06:05:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/948e658976cc904a7fdda0ee3f992deb8430aad6,948e658976cc904a7fdda0ee3f992deb8430aad6,cleanup more comment; byte parsing now using uint accumulator
kevin-montrose,2013-11-25 04:10:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f60c0a06070f8b08e27d767ab8f7e52647c3a679,f60c0a06070f8b08e27d767ab8f7e52647c3a679,"expand floating point tests a little, guarantee some small number coverage"
kevin-montrose,2013-11-25 04:06:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/32ba61108c23225412c34bcf92f64ad9a0b88074,32ba61108c23225412c34bcf92f64ad9a0b88074,minor code reorg; commenting; making byte parsing match other number types in pattern
kevin-montrose,2013-11-25 03:52:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0a32139035fd84a70341c4ca9e344bd655a1c12a,0a32139035fd84a70341c4ca9e344bd655a1c12a,fix all number types in the face of overflows
kevin-montrose,2013-11-25 03:34:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/460fff95088e1e9a1b765fe8195751bfb4eebff1,460fff95088e1e9a1b765fe8195751bfb4eebff1,proper overflow detection; breaks a number of other things; stopgap commit
kevin-montrose,2013-11-25 00:02:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5232fa27c5f27d23466dfada70a713e089062f79,5232fa27c5f27d23466dfada70a713e089062f79,"floats, doubles, & decimals deserialize now"
kevin-montrose,2013-11-24 23:49:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dc8986e85412260bb07f81c0dd1e9fcbe58c8fa3,dc8986e85412260bb07f81c0dd1e9fcbe58c8fa3,"sort of implemented floating point, need to break down by actual type"
kevin-montrose,2013-11-24 23:22:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/05fb3cb9547d8551d3c0759968c7a0b76054066f,05fb3cb9547d8551d3c0759968c7a0b76054066f,comment correction
kevin-montrose,2013-11-24 23:21:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bb0d226bd381a52addb7fe1384e520b1b6d46123,bb0d226bd381a52addb7fe1384e520b1b6d46123,longs & ulongs deserialize now
kevin-montrose,2013-11-24 23:06:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/02f6cf0ccd9463d46ae68121f92d5e13cf4caca2,02f6cf0ccd9463d46ae68121f92d5e13cf4caca2,ints & uints deserialize now
kevin-montrose,2013-11-24 22:54:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5bc47bf12e63236c5acb8e996c89f3958d5b9b74,5bc47bf12e63236c5acb8e996c89f3958d5b9b74,shorts & ushorts deserialize now
kevin-montrose,2013-11-24 22:43:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0c1a70cb173109bc1464acb808f174b2b3365f39,0c1a70cb173109bc1464acb808f174b2b3365f39,handle leading and trailing whitespace appropriately
kevin-montrose,2013-11-24 22:18:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/183febed324cf51169a83137ccf948bdb3eedc2d,183febed324cf51169a83137ccf948bdb3eedc2d,bytes & sbytes deserialize now
kevin-montrose,2013-11-24 22:04:05,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2a4159fa854362c3546feee8df0d81104f46cda5,2a4159fa854362c3546feee8df0d81104f46cda5,some more # parsing infrastructure
kevin-montrose,2013-11-24 21:54:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2f1354febc779f0cc3f64e5afe3c285e0436797c,2f1354febc779f0cc3f64e5afe3c285e0436797c,lay a little bit of infrastructure for parsing numbers
kevin-montrose,2013-11-24 21:34:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e0f1ddf98c89717601d448eaae5a24993afb0789,e0f1ddf98c89717601d448eaae5a24993afb0789,support null strings
kevin-montrose,2013-11-24 21:20:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4d1b375f396705d48b429820f2f4c432ba767aeb,4d1b375f396705d48b429820f2f4c432ba767aeb,speed up hex escape parsing
kevin-montrose,2013-11-24 21:09:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/de032c87f3fea9f68793662e3bdde846753cb5d3,de032c87f3fea9f68793662e3bdde846753cb5d3,deserializing strings (ignoring null)
kevin-montrose,2013-11-17 05:47:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f32e1f8959c48e8e0f27c413d55e3e1f1f1e0a84,f32e1f8959c48e8e0f27c413d55e3e1f1f1e0a84,getting started on a deserializer
kevin-montrose,2013-11-17 04:22:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/602ec4994ade37578045d72844f5a2e8f27cc09c,602ec4994ade37578045d72844f5a2e8f27cc09c,explicit test for serializing IDictionary
kevin-montrose,2013-11-17 04:12:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/df66bcc0d27f177c360c59ddb36de234455b4a2f,df66bcc0d27f177c360c59ddb36de234455b4a2f,"allocationless dictionary serialization, when possible"
kevin-montrose,2013-11-17 03:38:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fa90230895894de5574899fd3f713053293eedb5,fa90230895894de5574899fd3f713053293eedb5,remove some cruft from early passes at dictionary serialization
kevin-montrose,2013-11-17 03:13:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/03a5d125d0ca0ebf94ac821ae66842f21970b32a,03a5d125d0ca0ebf94ac821ae66842f21970b32a,cleanup comments and the GuidStruct type some
kevin-montrose,2013-11-17 03:08:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ecfd119c755f9ec899aac26e88a9de2645ad80ce,ecfd119c755f9ec899aac26e88a9de2645ad80ce,"removing old FastGuid code, the Faster version is strictly better (~10-15% faster); looks like final tally versus naive is ~55-50% faster"
kevin-montrose,2013-11-17 03:03:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e5afde40f0d78fbe9e31611c7f879b0a76717542,e5afde40f0d78fbe9e31611c7f879b0a76717542,Stan Drapkin pointed out a clever way to remove ToByteArray() from serializing Guids
kevin-montrose,2013-11-14 03:04:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/abcaf17d1f2ccc38fe1a8a9d60edf7e6762aa07c,abcaf17d1f2ccc38fe1a8a9d60edf7e6762aa07c,"update README links to point to specific blobs, instead of always being at tip.  @emmettnicholas warned me this would happen, and I didn't believe him."
kevin-montrose,2013-11-14 02:54:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/519a0c552e9fb93a4df94eed0b2f9804271f2fef,519a0c552e9fb93a4df94eed0b2f9804271f2fef,@gibwar points out that this could be done more concisely
kevin-montrose,2013-11-11 03:20:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f5b1afd3470ac63ece9462608bb2e4150d392059,f5b1afd3470ac63ece9462608bb2e4150d392059,derp derp
kevin-montrose,2013-11-11 03:13:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3f4b1116298cb542022ede0d9072546d823dc8e8,3f4b1116298cb542022ede0d9072546d823dc8e8,Update README
kevin-montrose,2013-11-11 02:11:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4bbe32bf87267bedaaea81ba30cd08ef8a2441fd,4bbe32bf87267bedaaea81ba30cd08ef8a2441fd,0.5.5
kevin-montrose,2013-11-10 22:53:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7931b700926a4f4ce47136702cca92b8a2a74c26,7931b700926a4f4ce47136702cca92b8a2a74c26,"capacity estimation hooked up properly, some tests.  I default this off as while it appears to work when the estimates are correct, the estimates may not be correct enough often enough to be worthwhile.  There are some other approaches to fast TextWriters that may be worth pursuing in preference to capacity estimation."
kevin-montrose,2013-11-10 22:39:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/19e14d039e6209e7759e069c5773bdbcb726f314,19e14d039e6209e7759e069c5773bdbcb726f314,a capacity estimator that doesn't suck
kevin-montrose,2013-11-10 20:56:40,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0262913c0d702c092e1ae4a3a0d94b2879dfaedd,0262913c0d702c092e1ae4a3a0d94b2879dfaedd,"this action-ish approach isn't going to work, mapping back to expected size is too finicky; stopgap commit before re-implementing"
kevin-montrose,2013-11-10 00:36:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2c55e71190a56f548c91ef437f3f74cab66466f9,2c55e71190a56f548c91ef437f3f74cab66466f9,failing test for autosizing (the estimator isn't great at the moment)
kevin-montrose,2013-11-10 00:24:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c13686eea5a47209d8686792bfa4eec9474cc13c,c13686eea5a47209d8686792bfa4eec9474cc13c,first hack at actually sizing the StringWriter properly
kevin-montrose,2013-11-09 23:09:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/995d43a2f1582d14b17ea7c200dfc6d74e2b3444,995d43a2f1582d14b17ea7c200dfc6d74e2b3444,getting started estimating the size of JSON string's Jil produces
kevin-montrose,2013-11-09 22:04:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e17e1d68738be86d2e792a7a8f9dc4dce8a24c62,e17e1d68738be86d2e792a7a8f9dc4dce8a24c62,add SerializeDynamic method that returns a string
kevin-montrose,2013-11-09 22:00:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e0f5f893234f814a4357e366b119c302b2f3aa81,e0f5f893234f814a4357e366b119c302b2f3aa81,fix SerializeDynamic break from string Serialize(...)
kevin-montrose,2013-11-09 21:55:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e39ca50bae1a55a10c5cd07fbcbcb492782e42fe,e39ca50bae1a55a10c5cd07fbcbcb492782e42fe,"Merge pull request #3 from yellis/SerializeToString

Add new Serialize Method, omit TextWriter, return string"
kevin-montrose,2013-11-09 21:54:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/92e4bd4435e16bec95cb7d4716154d537f775d59,92e4bd4435e16bec95cb7d4716154d537f775d59,update README
kevin-montrose,2013-11-09 21:52:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ec1b20354493dacd8d2089c237361972e20c8f87,ec1b20354493dacd8d2089c237361972e20c8f87,finish 'include inherited members' option
kevin-montrose,2013-11-09 21:44:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dbc04ea33b40a0a4ecc0669c4f996b4e09781cbb,dbc04ea33b40a0a4ecc0669c4f996b4e09781cbb,get started making 'include inherited members' a config option
kevin-montrose,2013-11-09 21:17:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/84bfe2170874e781c0d382f5db971ce9d621381c,84bfe2170874e781c0d382f5db971ce9d621381c,pull in a test for a troublesome API type
kevin-montrose,2013-11-06 03:16:47,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7576b3aab1e7d252a57d3b013366b8e0d65a7544,7576b3aab1e7d252a57d3b013366b8e0d65a7544,update README
kevin-montrose,2013-11-06 01:30:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8086c3cc5216d0512c69ea711d87c7668e9468a6,8086c3cc5216d0512c69ea711d87c7668e9468a6,fix some datetime options not converting to universal time; fix tests that assume ET; fixes #2
kevin-montrose,2013-11-05 19:45:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/05e128274653af26ba951ab44af06bd223a20b5a,05e128274653af26ba951ab44af06bd223a20b5a,0.5.4
kevin-montrose,2013-11-05 19:43:58,https://api.github.com/repos/kevin-montrose/Jil/git/commits/51fd8c3c30400205ab5a7d319ac185bd5059aba8,51fd8c3c30400205ab5a7d319ac185bd5059aba8,"temporary fix; only look at declare properties and fields; this should be configurable, default only looking at declared; recursion check needs to be fixed in the face of inheritence"
kevin-montrose,2013-11-05 02:39:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ace19fde0a56ac19a7f12368a3d2b53d1c68f215,ace19fde0a56ac19a7f12368a3d2b53d1c68f215,0.5.3
kevin-montrose,2013-11-05 02:36:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/44fb775542b1d1e0038a9638b95d0a840521c738,44fb775542b1d1e0038a9638b95d0a840521c738,"method bodies aren't always recoverable, but in general if we can't find something about a propery just bail"
kevin-montrose,2013-11-05 02:23:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8ebc5849f7321be6266356bb4c4a0030e4079f58,8ebc5849f7321be6266356bb4c4a0030e4079f58,0.5.2
kevin-montrose,2013-11-05 01:21:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d8802ca50744c738ed001791ab1d684bc25eddb3,d8802ca50744c738ed001791ab1d684bc25eddb3,Merge branch 'master' of https://github.com/kevin-montrose/Jil
kevin-montrose,2013-11-05 01:20:24,https://api.github.com/repos/kevin-montrose/Jil/git/commits/aa025b3f2fad8d61e6f57892bb7b363df5dad15e,aa025b3f2fad8d61e6f57892bb7b363df5dad15e,more Utils fixes
kevin-montrose,2013-11-05 00:56:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7e014f7e0c807e974912c569c7fd34b7b3b8ecbe,7e014f7e0c807e974912c569c7fd34b7b3b8ecbe,0.5.1
kevin-montrose,2013-11-05 00:55:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1f1846a69d160c5c257178c635bd62252007fcc1,1f1846a69d160c5c257178c635bd62252007fcc1,"when we can't find a field, don't explode just assume the worst"
kevin-montrose,2013-11-05 00:50:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/26b19815a56126a8c068a84412fcbf4570b5df9f,26b19815a56126a8c068a84412fcbf4570b5df9f,make Options constructor public
yellis,2013-11-04 09:50:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e9d0c843043e0d0b02d821d326b8a4cad8423a48,e9d0c843043e0d0b02d821d326b8a4cad8423a48,"Add new Serialize Method, direct to string"
kevin-montrose,2013-11-03 22:44:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/55cfc9f29343e5ffd380d54671de9a5f00ad44f4,55cfc9f29343e5ffd380d54671de9a5f00ad44f4,"Merge pull request #1 from JasonPunyon/patch-1

The one character kid strikes again!"
JasonPunyon,2013-11-03 20:59:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3b8f391581efe1b9869ff1e0aa24f42acace7f42,3b8f391581efe1b9869ff1e0aa24f42acace7f42,The one character kid strikes again!
kevin-montrose,2013-11-03 03:58:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/563a60f67034d9461167e8aca8438126f5c0409c,563a60f67034d9461167e8aca8438126f5c0409c,fix README i
kevin-montrose,2013-11-03 03:57:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0cf33078a3fe5e53a5cd3e330c851c59cb74632f,0cf33078a3fe5e53a5cd3e330c851c59cb74632f,Mention SerializeDynamic
kevin-montrose,2013-11-03 03:47:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9c65092c3254c7bc0cfb56ec88d3c90119395fb9,9c65092c3254c7bc0cfb56ec88d3c90119395fb9,Nuget link in README
kevin-montrose,2013-11-02 21:11:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/47ae86dd4c81cb5dcf6a66e31fa3581a086d0310,47ae86dd4c81cb5dcf6a66e31fa3581a086d0310,0.5.0
kevin-montrose,2013-11-02 21:00:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8eb07acfe719d9021d2e50f055337140c3a0cb64,8eb07acfe719d9021d2e50f055337140c3a0cb64,"update README, add some more string tests"
kevin-montrose,2013-11-02 20:38:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bf78f0cb0daee2011ea4e4d18e46ae7666bc57f4,bf78f0cb0daee2011ea4e4d18e46ae7666bc57f4,add SerializeDynamic to JSON
kevin-montrose,2013-11-02 18:03:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/11a9f8a975cd3b781a377e318d635e117a527c6f,11a9f8a975cd3b781a377e318d635e117a527c6f,Update README.md
kevin-montrose,2013-10-31 05:01:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a4709544418b3adca28b7cd50026084f5342caf5,a4709544418b3adca28b7cd50026084f5342caf5,Update README
kevin-montrose,2013-10-31 04:57:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/902796f9add7a306cbe016210d926747cedbced0,902796f9add7a306cbe016210d926747cedbced0,Merge branch 'master' of https://github.com/kevin-montrose/Jil
kevin-montrose,2013-10-31 04:56:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/867e8eac2b6a12951bfa3cd85382cf997456bbf0,867e8eac2b6a12951bfa3cd85382cf997456bbf0,"hookup and test all the JSONP-y things, proving that nothing's ever easy"
kevin-montrose,2013-10-31 04:19:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/077a8eb8ec2996f04a918a0ef7879a64a3dfba4c,077a8eb8ec2996f04a918a0ef7879a64a3dfba4c,hook up JSONP where appropriate
kevin-montrose,2013-10-31 03:59:38,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6ca7926e2e1ca1082ab1b56c7e90970ae95268f0,6ca7926e2e1ca1082ab1b56c7e90970ae95268f0,"cleanup JSON class, add (but don't yet use) JSONP option"
kevin-montrose,2013-10-30 03:21:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/40ede395c010cf868fe572f44a8e67238986784a,40ede395c010cf868fe572f44a8e67238986784a,Start writing up tricks for README
kevin-montrose,2013-10-29 02:07:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d30d983d966357408b8f9926b59cf17c89b346c9,d30d983d966357408b8f9926b59cf17c89b346c9,Expand on benchmark
kevin-montrose,2013-10-29 01:57:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/891319d8a054eca2ef867abd9a8716f19f61f305,891319d8a054eca2ef867abd9a8716f19f61f305,Fix formatting in README
kevin-montrose,2013-10-29 01:54:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/430800b8975aeddb23e69c47e9665a741166f1a2,430800b8975aeddb23e69c47e9665a741166f1a2,Update README with benchmark #s
kevin-montrose,2013-10-29 00:50:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3ccb091e1f2659e5d6832518657ae9e3a42e3634,3ccb091e1f2659e5d6832518657ae9e3a42e3634,long running benchmark to produce graphable things
kevin-montrose,2013-10-27 18:03:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0f4cc7b07dbb63bdd3a9936730c86a973712097e,0f4cc7b07dbb63bdd3a9936730c86a973712097e,Benchmark now checks all Jil serializations for correctness in DEBUG builds
kevin-montrose,2013-10-27 07:37:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a3d923f73b54ed7ba7cdbec181a0bcfc4e0443f9,a3d923f73b54ed7ba7cdbec181a0bcfc4e0443f9,get a stronger WIP warning back into README
kevin-montrose,2013-10-27 07:30:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/de4ff1dcc758e43043b0169dd7e919e55733686f,de4ff1dcc758e43043b0169dd7e919e55733686f,hack up Benchmark to produce something nicer to graph ; temporary state of things while getting more presentable/rerunnable benchmarks together
kevin-montrose,2013-10-27 05:12:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/aad01432825e11c7f1d4df9d0d54b350a0868a2b,aad01432825e11c7f1d4df9d0d54b350a0868a2b,make some pb comparisons actually equivalent
kevin-montrose,2013-10-27 05:04:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2853d806d6c735173d485b2262d45c43564b9920,2853d806d6c735173d485b2262d45c43564b9920,stopgap commit ; do some checks to make sure Jil's output is understandable by JSON.NET (which is probably the most popular .NET JSON serializer)
kevin-montrose,2013-10-27 03:23:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bf7abd1116bc8af67e5255219fdd9dacaa5279d1,bf7abd1116bc8af67e5255219fdd9dacaa5279d1,fix another quote escaping bug
kevin-montrose,2013-10-27 03:14:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/00bbf320fe85e5181babf284344a9e11cbdbd904,00bbf320fe85e5181babf284344a9e11cbdbd904,fix quote escaping in strings
kevin-montrose,2013-10-27 02:27:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0dc887068218cf8a18b1353b4a64bc76e74d6c41,0dc887068218cf8a18b1353b4a64bc76e74d6c41,only allocate the CharBuffer if the type we're serializing will actually use the buffer
kevin-montrose,2013-10-27 02:05:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/aab84864dcac1b182ef946e44cc06181334fba6e,aab84864dcac1b182ef946e44cc06181334fba6e,cleanup Guid code comments
kevin-montrose,2013-10-27 01:51:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/46eab41c2f72956a2b3acf3db64fb9766734c800,46eab41c2f72956a2b3acf3db64fb9766734c800,fast guid serialization implemented
kevin-montrose,2013-10-27 00:07:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6bd50c72104a6fb6da319accca0dbac9db58f18f,6bd50c72104a6fb6da319accca0dbac9db58f18f,"stopgap commit ; fast guid writer implemented, untested"
kevin-montrose,2013-10-26 23:34:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/65f3d9cfe73bb7ad52c52553f125fe051bc07925,65f3d9cfe73bb7ad52c52553f125fe051bc07925,stopgap commit; getting started on a faster Guid writer
kevin-montrose,2013-10-26 23:08:28,https://api.github.com/repos/kevin-montrose/Jil/git/commits/64be5e988d2ace7e533a10ab4a5afaf57588bef0,64be5e988d2ace7e533a10ab4a5afaf57588bef0,even more README updates
kevin-montrose,2013-10-26 23:07:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a4da9c9928950d2a42fe37e0d05f3cc9ecb5d8f7,a4da9c9928950d2a42fe37e0d05f3cc9ecb5d8f7,more README updates
kevin-montrose,2013-10-26 23:00:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9eab99630f8d24477871e57738489138a5002825,9eab99630f8d24477871e57738489138a5002825,"update README, still a WIP but let's start polishing this"
kevin-montrose,2013-10-26 22:35:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/03ee0eb8db1bb603f07a975d0a715d39a18c9bb3,03ee0eb8db1bb603f07a975d0a715d39a18c9bb3,"more GUID tests, fixing list pretty-prints"
kevin-montrose,2013-10-26 22:11:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7fae62d2aa7d35a9d755dca2820156180a3119b1,7fae62d2aa7d35a9d755dca2820156180a3119b1,getting started on GUID support
kevin-montrose,2013-10-25 05:03:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/169ca318a5885550dd2b6aa9afc5b0de831fc87a,169ca318a5885550dd2b6aa9afc5b0de831fc87a,"better report for Benchmark; still not really trusting these protobuf-net #s; probably need to ping Marc, find out if I'm doing something dumb here"
kevin-montrose,2013-10-25 03:04:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9af40322b04e47f95c16aa760813dac5e6c57049,9af40322b04e47f95c16aa760813dac5e6c57049,"'numbers as strings' for dictionaries, even when excluding nulls"
kevin-montrose,2013-10-25 02:56:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/430cdb1f0b01bb031cf8e05449d4fef474cedf7b,430cdb1f0b01bb031cf8e05449d4fef474cedf7b,getting started on 'numbers as strings' for dictionary keys
kevin-montrose,2013-10-25 02:37:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/889951fa6bf784d07fb7f1386025386f9b482589,889951fa6bf784d07fb7f1386025386f9b482589,"Remove pre-release Sigil, pull in 3.2.0 from Nuget"
kevin-montrose,2013-10-22 03:35:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5dd95761a759519036205f416abf08493aee80e0,5dd95761a759519036205f416abf08493aee80e0,"pull in protobuf-net for comparsion ; I need to stare really hard at this code, as Jil seems to be faster than protobuf-net a non-trivial % of the time ; I don't really trust that result"
kevin-montrose,2013-10-22 02:43:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/86f0c3417b662f57905d0dbb70016f80732a3b33,86f0c3417b662f57905d0dbb70016f80732a3b33,"take a whack at speeding IList<> up even more, when the IList<> happens to actually be an array"
kevin-montrose,2013-10-22 02:34:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e1462e4499aa7f60cf80ebb18244a499cc69a903,e1462e4499aa7f60cf80ebb18244a499cc69a903,take a whack at faster IList<> handling by bypassing GetEnumerator()
kevin-montrose,2013-10-21 04:56:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/42e88a1d31d11f9733387062291913e9f39372fd,42e88a1d31d11f9733387062291913e9f39372fd,also record improvements when benchmarking
kevin-montrose,2013-10-21 03:16:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b0d4e9ab392fdc310811293fb6c27485db35d657,b0d4e9ab392fdc310811293fb6c27485db35d657,shouldn't have been committed
kevin-montrose,2013-10-21 03:15:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6ecc9e66955482519bbfb69bc2c3b3b0ee72ac73,6ecc9e66955482519bbfb69bc2c3b3b0ee72ac73,last bit of benchmark tweaking for now; result looks like a) Jil is faster in most circumstances b) there's still some room for improvement when handling List<T>s ; still need to show equivalence & correctness
kevin-montrose,2013-10-21 02:56:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9d280e326b78c9776f050299f14264cb2a6a946a,9d280e326b78c9776f050299f14264cb2a6a946a,"more benchmarking tweaks, actually getting 'here is where Jil is awful' stuff out now; if not enough"
kevin-montrose,2013-10-21 02:17:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/12168307c76771f0455d28be96446ed60c1c84bc,12168307c76771f0455d28be96446ed60c1c84bc,benchmarking all types now
kevin-montrose,2013-10-21 02:02:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8fe66f020c5e05d1ceed884e800f0f722323e691,8fe66f020c5e05d1ceed884e800f0f722323e691,better random characters
kevin-montrose,2013-10-21 01:37:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/851a1f62794449acc7a0c024d1e61d2ff77b9a66,851a1f62794449acc7a0c024d1e61d2ff77b9a66,"more benchmark work; randomly generating data, comparing against Json.NET and ServiceStack.Text"
kevin-montrose,2013-10-21 00:13:52,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3b59eeb8a900da29df14090688bcd89f198f260d,3b59eeb8a900da29df14090688bcd89f198f260d,getting started on a stand-alone benchmark; pulling in a bunch of example models from SE API
kevin-montrose,2013-10-19 04:20:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/517ff0edcda6a50f1ace2c01ec59c9c5d96cc11b,517ff0edcda6a50f1ace2c01ec59c9c5d96cc11b,some docs
kevin-montrose,2013-10-19 04:08:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/cc7e8668cf44ca2f15dabc5c7be5e96aa32a943a,cc7e8668cf44ca2f15dabc5c7be5e96aa32a943a,a lot more enumeration test cases
kevin-montrose,2013-10-17 21:24:07,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bbfa1f5df346b3a77f72e5c32d292c57944c851b,bbfa1f5df346b3a77f72e5c32d292c57944c851b,finishing support for enums as dictionary keys
kevin-montrose,2013-10-17 21:16:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/80d0de146704ccadd52bc2f36fe6024a062ac6b2,80d0de146704ccadd52bc2f36fe6024a062ac6b2,stopgap commit ; getting started on enum support for dictionary keys
kevin-montrose,2013-10-14 05:21:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/950682265db260d7d7de25e55432d4cf2265bda6,950682265db260d7d7de25e55432d4cf2265bda6,finish up enumeration implementation
kevin-montrose,2013-10-11 04:07:51,https://api.github.com/repos/kevin-montrose/Jil/git/commits/51a9e8feb9814936f891dedd9b35f094d7b5bcec,51a9e8feb9814936f891dedd9b35f094d7b5bcec,"fixes around enums, more tests"
kevin-montrose,2013-10-11 03:50:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d8a4067069d807e61c62884e05a0053ebec85344,d8a4067069d807e61c62884e05a0053ebec85344,get started on enum support
kevin-montrose,2013-10-08 04:56:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/508c36bd0e566619cf0e64f8720678dd5c301939,508c36bd0e566619cf0e64f8720678dd5c301939,make conditional serialization work even if you aren't excluding nulls
kevin-montrose,2013-10-08 03:52:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/774bf2f3f0f715039da0b77db028539e063f46af,774bf2f3f0f715039da0b77db028539e063f46af,don't need optional params in these places
kevin-montrose,2013-10-08 03:45:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f58a5c1ed2b11ba16a0fad561b8ab81fc5c25248,f58a5c1ed2b11ba16a0fad561b8ab81fc5c25248,"fix a bunch of Options errors, complete the AllOptions test"
kevin-montrose,2013-10-08 01:49:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4dc2bfd4ffef9dfca096161f6cfefe8348d958ce,4dc2bfd4ffef9dfca096161f6cfefe8348d958ce,"expanding this test some, fixing a pretty print bug"
kevin-montrose,2013-10-08 01:22:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0ae1e3625d206562cab5d0f2dd7ff688fe217476,0ae1e3625d206562cab5d0f2dd7ff688fe217476,marc gravell to the rescue; fixing bug with Utils.PropertyFieldUsage
kevin-montrose,2013-10-07 02:30:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1b3fea384184c6ff17c94e97d95e72833feb989d,1b3fea384184c6ff17c94e97d95e72833feb989d,add pre-release Sigil to repo so this can be run by other people; though I'd strongly discourage actually using this
kevin-montrose,2013-10-07 01:21:20,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6f427b2f97cfec6694b39b93fd2e79a45cce815c,6f427b2f97cfec6694b39b93fd2e79a45cce815c,"bunch of renames, and a new failing test"
kevin-montrose,2013-10-06 23:22:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/550d50859bbde7827dbdcb26c2156b8242a79997,550d50859bbde7827dbdcb26c2156b8242a79997,"check for ShouldSerializeXXX() methods when serializing property XXX if, and only if, we're excluding nulls (may need to rename that... it does more now)"
kevin-montrose,2013-10-06 23:00:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9adbec26afbda12d2627052699a8ae4dafdd3396,9adbec26afbda12d2627052699a8ae4dafdd3396,cleanup some code
kevin-montrose,2013-10-06 22:54:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/22239d7f505115490550d9eabb143151fde3572f,22239d7f505115490550d9eabb143151fde3572f,actually faster now
kevin-montrose,2013-10-06 21:44:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/46759271931b465109e667c2527e3df9993fbf29,46759271931b465109e667c2527e3df9993fbf29,stopgap commit
kevin-montrose,2013-10-06 21:21:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f5f6db4a5f19d2663a5f2a4696f0f26883caa42e,f5f6db4a5f19d2663a5f2a4696f0f26883caa42e,"add test for custom ISO8601 formatting speed; first pass looks to be no better than built-in, unfortunately"
kevin-montrose,2013-10-06 21:00:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7e8677e90282231f3ab7982520cfdc2b461cebd9,7e8677e90282231f3ab7982520cfdc2b461cebd9,comment on some magic
kevin-montrose,2013-10-06 20:58:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b7e122f347aca77f03c7db269a5d93139f202ace,b7e122f347aca77f03c7db269a5d93139f202ace,infinite recursion detection complete ; all tests passing
kevin-montrose,2013-10-06 20:49:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1a83fc926d1e682cf74e5bd7a48d7976f3cb3425,1a83fc926d1e682cf74e5bd7a48d7976f3cb3425,"stopgap commit ; infinite recursion detection & some refactorings around it, currently broke some pretty print tests"
kevin-montrose,2013-10-06 20:19:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/bd119ff065e3316f3c104008f420fd2d9ab1dbce,bd119ff065e3316f3c104008f420fd2d9ab1dbce,ISO8601 correctness test
kevin-montrose,2013-10-06 20:12:09,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4a03f0338ec20aceee53594cc6e67a47f56090cd,4a03f0338ec20aceee53594cc6e67a47f56090cd,implementing ISO8601 dateformat
kevin-montrose,2013-10-06 19:38:59,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9a6721f2b0c01f545da0ae7c4869347f40a72bd4,9a6721f2b0c01f545da0ae7c4869347f40a72bd4,implement the 'easy' dateformat options
kevin-montrose,2013-10-06 18:55:43,https://api.github.com/repos/kevin-montrose/Jil/git/commits/312ea7f4f7f6074e403287dd4cb71012898f56db,312ea7f4f7f6074e403287dd4cb71012898f56db,groundwork for different datetime formats
kevin-montrose,2013-10-06 18:04:17,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6087641958e7e583e177778a07148d508f333914,6087641958e7e583e177778a07148d508f333914,assembly info on experiments
kevin-montrose,2013-10-06 18:02:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ea73c9dbcbda92a1da235a2e13cf8531ba8d4e07,ea73c9dbcbda92a1da235a2e13cf8531ba8d4e07,fix tests
kevin-montrose,2013-10-06 17:58:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/69355a1665b132f74e1569af5085768b7ba40276,69355a1665b132f74e1569af5085768b7ba40276,"Updating method order, adding a project that derives ideal ordering for future reference/reruns"
kevin-montrose,2013-10-05 16:46:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/015791b7bdc16d315054a369233af2892fb1e8c2,015791b7bdc16d315054a369233af2892fb1e8c2,restore proper null handling for strings
kevin-montrose,2013-10-04 03:37:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/5b3c4728b400c74cf42c040bce5bc5531e9d02f5,5b3c4728b400c74cf42c040bce5bc5531e9d02f5,"stopgap commit ; moving some code around, couple busted tests atm"
kevin-montrose,2013-10-04 03:22:32,https://api.github.com/repos/kevin-montrose/Jil/git/commits/20788cba5e8160e1cae9e3396b2ba880cc384faf,20788cba5e8160e1cae9e3396b2ba880cc384faf,"moving string encoding into a method, out of IL (lots of experimentation needed here, and IL is a bit too unwieldy at this stage)"
kevin-montrose,2013-10-04 02:51:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8c344f74ae7636e80104a77cca71e94b22b1d6e1,8c344f74ae7636e80104a77cca71e94b22b1d6e1,adding a failing test for dictionary string encoding
kevin-montrose,2013-10-04 02:21:37,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b79b2419288be91a561b8f00e95e9a3fc3baf35b,b79b2419288be91a561b8f00e95e9a3fc3baf35b,fix the rest of the tests
kevin-montrose,2013-09-30 04:29:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/406be3435835607bf1ac1f16d919f3eba2bb764d,406be3435835607bf1ac1f16d919f3eba2bb764d,stopgap commit ; fix one test at least...
kevin-montrose,2013-09-30 04:27:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9f0be0fdb9daa6ceb56cc5600362c451b801606c,9f0be0fdb9daa6ceb56cc5600362c451b801606c,stopgap commit ; more sensible member order algorithm ; looks to be about 40ms faster in ReorderMember test ; this breaks a ton of tests
kevin-montrose,2013-09-30 04:04:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4e1aa59518cef4afbfeb4c0411d9b2d308262d5d,4e1aa59518cef4afbfeb4c0411d9b2d308262d5d,refactor a bit to make better member access ordering easier down the line
kevin-montrose,2013-09-30 03:58:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0f80645e3ae67fff35c429b1cbf7ed0eed7289bd,0f80645e3ae67fff35c429b1cbf7ed0eed7289bd,"this caching doesn't really make sense to have, when you think about it"
kevin-montrose,2013-09-29 23:44:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2a17ab9c2067b86c8688284849af80ad0f29d1e8,2a17ab9c2067b86c8688284849af80ad0f29d1e8,pretty print for dictionaries implemented
kevin-montrose,2013-09-29 20:48:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3acc4de3f7562e05d4a017a06d33311ba957f4f2,3acc4de3f7562e05d4a017a06d33311ba957f4f2,pretty print implemented
kevin-montrose,2013-09-29 20:24:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fbe0646349bffa8bf748722e68b080f834b0cc9e,fbe0646349bffa8bf748722e68b080f834b0cc9e,stopgap commit ; pretty print linebreak and indent started
kevin-montrose,2013-09-29 00:39:29,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2781e51613710a2a31ed38aa499479417f6dbd4f,2781e51613710a2a31ed38aa499479417f6dbd4f,lay some groundwork for pretty-printing
kevin-montrose,2013-09-28 20:30:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/094e6d858240b1bcab715fc4cc4081be3d007cb1,094e6d858240b1bcab715fc4cc4081be3d007cb1,"dictionary null exclusion implemented, various fixes around strings ; another reorder member regression"
kevin-montrose,2013-09-28 20:16:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eb411c18d3778291f5ff141b633f9142f4cf2c34,eb411c18d3778291f5ff141b633f9142f4cf2c34,stopgap commit ; dictionary null exclusion partially implemented
kevin-montrose,2013-09-28 06:12:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/08152bd6d3c277454f21952609340cc8cd53ff6e,08152bd6d3c277454f21952609340cc8cd53ff6e,update a ton of tests; need to come up with a better model for access order
kevin-montrose,2013-09-28 05:52:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/460332eeec90bb03d68deb62515fd280da6a7493,460332eeec90bb03d68deb62515fd280da6a7493,"stopgap commit ; null exclusion option done, regression around member access order"
kevin-montrose,2013-09-28 05:38:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9abc7461b50e489f207f04d14eee389d0cc2f2e0,9abc7461b50e489f207f04d14eee389d0cc2f2e0,stopgap commit ; null option part way done
kevin-montrose,2013-09-28 02:51:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9c55642c98dde793af76b13842da4739f42c929d,9c55642c98dde793af76b13842da4739f42c929d,even more refactoring
kevin-montrose,2013-09-28 02:48:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9bddc074b8117a25a9f6c172321813fe9d4084a9,9bddc074b8117a25a9f6c172321813fe9d4084a9,more refactoring
kevin-montrose,2013-09-28 02:28:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/519b1c20e2984a8c9e1098e762c34fcb28c95f3a,519b1c20e2984a8c9e1098e762c34fcb28c95f3a,start laying framework for options actually... working
kevin-montrose,2013-09-26 00:27:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4d57f1265c8dde7fcc76b42fb63382b046464172,4d57f1265c8dde7fcc76b42fb63382b046464172,killing more dead code
kevin-montrose,2013-09-25 05:16:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3b8a5ecef0b6cd070084c94c63a0ada34d14fede,3b8a5ecef0b6cd070084c94c63a0ada34d14fede,Merge branch 'master' of https://github.com/kevin-montrose/Jil
kevin-montrose,2013-09-25 05:14:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c45164d750a9ac71ea284d84ddd87be32bd5aaea,c45164d750a9ac71ea284d84ddd87be32bd5aaea,"remove property access bypass and v8 double delegating, not any faster"
kevin-montrose,2013-09-25 05:08:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b80381cb46934eb33c5aa59af9485a293a5478d8,b80381cb46934eb33c5aa59af9485a293a5478d8,integrate V8's double formatter as an option... it appears to be about 1/2 the speed of the .NET builtin
kevin-montrose,2013-09-25 04:34:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/87705968a6320c342e7523a1a76e5afe75b02b66,87705968a6320c342e7523a1a76e5afe75b02b66,more fixes and tests around V8 fast doubles
kevin-montrose,2013-09-25 04:09:25,https://api.github.com/repos/kevin-montrose/Jil/git/commits/03b6014f537bdbd1bda186180fac8f585cff9a26,03b6014f537bdbd1bda186180fac8f585cff9a26,refactor fast dtoa to use a TextWriter
kevin-montrose,2013-09-25 03:53:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c82b6ab90ecad067cf09939f50e54225467840de,c82b6ab90ecad067cf09939f50e54225467840de,"pulling in a fast dtoa from V8 (oh yeah, strap in)"
kevin-montrose,2013-09-23 19:02:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/621c16f83c9dfc6fbb5ced29fa343512fd833745,621c16f83c9dfc6fbb5ced29fa343512fd833745,Update README.md
kevin-montrose,2013-09-23 05:04:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7aeb8ab443e8b71e269c513d42177f27cf1d3491,7aeb8ab443e8b71e269c513d42177f27cf1d3491,starting on another pass at fast doubles ; stopgap commit
kevin-montrose,2013-09-23 04:14:02,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0d52b8687d7e6fcfd3a99684767b88434b28db8f,0d52b8687d7e6fcfd3a99684767b88434b28db8f,make the README warning more explicit
kevin-montrose,2013-09-23 04:12:41,https://api.github.com/repos/kevin-montrose/Jil/git/commits/51079cbe94c1981983289e5388d5350901832c24,51079cbe94c1981983289e5388d5350901832c24,add LICENSE
kevin-montrose,2013-09-23 04:10:50,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a7affccf4b0368b02c2c05d44bc2b40fbca408f2,a7affccf4b0368b02c2c05d44bc2b40fbca408f2,add README
kevin-montrose,2013-09-22 23:09:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/99c597b3fdb36b7f65a28c17f319862f4ecfbef2,99c597b3fdb36b7f65a28c17f319862f4ecfbef2,fix SkipSimplePropertyAccess test
kevin-montrose,2013-09-22 22:58:57,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9757f2983464e7c69d2f01d0efe141e6ba5c9bc1,9757f2983464e7c69d2f01d0efe141e6ba5c9bc1,"bypass property access conditionally; .NET may be doing this already, need to play with test cases to see if this is worth keeping"
kevin-montrose,2013-09-22 22:16:34,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7fd82898901f116d1b05a414a0fe3254c09153b3,7fd82898901f116d1b05a414a0fe3254c09153b3,"route all property access through a single method, consolidates some code"
kevin-montrose,2013-09-22 22:07:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/68d2710d2ae596a09acff48fd9d5d7076845bb17,68d2710d2ae596a09acff48fd9d5d7076845bb17,"fixing cyclical value types (yes, that's possible)"
kevin-montrose,2013-09-22 21:57:56,https://api.github.com/repos/kevin-montrose/Jil/git/commits/037db68536cc3ed8779da85b6629a9a287400c37,037db68536cc3ed8779da85b6629a9a287400c37,fixes for some value types ; recursion still busted; stopgap commit
kevin-montrose,2013-09-22 21:45:30,https://api.github.com/repos/kevin-montrose/Jil/git/commits/c664d1900b6be4b6e2d5514bca22844a96f506b0,c664d1900b6be4b6e2d5514bca22844a96f506b0,partial implementation of ValueTypes ; rather buggy ; stopgap commit
kevin-montrose,2013-09-22 21:10:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0e29930820d856fa9fcfc1cc66f1d78c0c04b001,0e29930820d856fa9fcfc1cc66f1d78c0c04b001,normalize some int parsing
kevin-montrose,2013-09-22 21:06:13,https://api.github.com/repos/kevin-montrose/Jil/git/commits/50861769dbc9ec57b9a0fd68e883278bd5c73248,50861769dbc9ec57b9a0fd68e883278bd5c73248,"nullable support, and various fixes"
kevin-montrose,2013-09-22 20:22:16,https://api.github.com/repos/kevin-montrose/Jil/git/commits/817bcd47a5fc5e657775761a1fc7201ff09373c1,817bcd47a5fc5e657775761a1fc7201ff09373c1,"more cycle tests, this thing is kind of easy to break"
kevin-montrose,2013-09-22 20:13:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4178571e155826e00ddb8dce83697791e352de96,4178571e155826e00ddb8dce83697791e352de96,"faster DateTime serialization, minor test tweaks"
kevin-montrose,2013-09-22 19:38:12,https://api.github.com/repos/kevin-montrose/Jil/git/commits/ed9d529004c238353e5c3a0961ec0603428d57cc,ed9d529004c238353e5c3a0961ec0603428d57cc,add DateTime support
kevin-montrose,2013-09-22 05:49:10,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2399092da2d0113d3816d3d3298511e4c661f6ef,2399092da2d0113d3816d3d3298511e4c661f6ef,implement bools
kevin-montrose,2013-09-22 05:16:44,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a428d5f5c0864882cac64680c5f3c937e44cc4ef,a428d5f5c0864882cac64680c5f3c937e44cc4ef,let's change some character encodings to work around deserializers that are kind of crummy about \u encodings
kevin-montrose,2013-09-22 04:40:53,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a1887698ab8a994f0a2bb6b6c4020214412438d8,a1887698ab8a994f0a2bb6b6c4020214412438d8,... and it's actually about 2x as slow
kevin-montrose,2013-09-22 04:38:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/b3342f5296a5f04b9bc8236fc18e15ea4cd278c5,b3342f5296a5f04b9bc8236fc18e15ea4cd278c5,try an alternate double formatter
kevin-montrose,2013-09-22 03:28:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/81f6d5a204bb370b3510f2550eef63174f12e786,81f6d5a204bb370b3510f2550eef63174f12e786,code cleanup
kevin-montrose,2013-09-22 03:08:39,https://api.github.com/repos/kevin-montrose/Jil/git/commits/49c5e000e3d1f930d8f753bf9af10562eed01604,49c5e000e3d1f930d8f753bf9af10562eed01604,add some checks into dictionary writing
kevin-montrose,2013-09-22 02:53:15,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e5cad745819fe3780cf94b34edf8c7a6cebbabae,e5cad745819fe3780cf94b34edf8c7a6cebbabae,"use a custom int-to-string method, it's faster ; it can probably be much faster"
kevin-montrose,2013-09-21 23:44:19,https://api.github.com/repos/kevin-montrose/Jil/git/commits/395a8f6c2c198a314ad7972c1b3ea6ff2e05f6ae,395a8f6c2c198a314ad7972c1b3ea6ff2e05f6ae,skip formating calls for small numbers
kevin-montrose,2013-09-21 23:24:46,https://api.github.com/repos/kevin-montrose/Jil/git/commits/71f4608959734bc3a02ad36918e35a26c06ccb7d,71f4608959734bc3a02ad36918e35a26c06ccb7d,"get rid of primitive lookups, just emit them"
kevin-montrose,2013-09-21 23:14:55,https://api.github.com/repos/kevin-montrose/Jil/git/commits/fa71a1d3cbbdb28bd8207ef42fc8e7bee3739edb,fa71a1d3cbbdb28bd8207ef42fc8e7bee3739edb,kill this temporary test; it's covered elsewhere
kevin-montrose,2013-09-21 23:14:27,https://api.github.com/repos/kevin-montrose/Jil/git/commits/645eb4bc85fe622664f3220231dfbfb71f8c3f53,645eb4bc85fe622664f3220231dfbfb71f8c3f53,fixed up encoding in strings
kevin-montrose,2013-09-21 22:06:01,https://api.github.com/repos/kevin-montrose/Jil/git/commits/af2ada8c452da155d8b4fbca57c401bb906d9b07,af2ada8c452da155d8b4fbca57c401bb906d9b07,partial encoding for strings ; bug around spaces exists
kevin-montrose,2013-09-21 21:40:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/a1c09d717ed14e7101e58018221edb7e2e017ffc,a1c09d717ed14e7101e58018221edb7e2e017ffc,minor code moves
kevin-montrose,2013-09-21 21:31:48,https://api.github.com/repos/kevin-montrose/Jil/git/commits/9174cb14ef9c9cbd5a7c3df3336d10e94c277b7c,9174cb14ef9c9cbd5a7c3df3336d10e94c277b7c,enforce proper character encodings on char type
kevin-montrose,2013-09-21 20:00:42,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e27f895191ce59f3b10e120127af1900a2f0e20d,e27f895191ce59f3b10e120127af1900a2f0e20d,DRY some code
kevin-montrose,2013-09-21 19:46:22,https://api.github.com/repos/kevin-montrose/Jil/git/commits/8beb292affa3eaf06268739c3cca1cd73aaeb832,8beb292affa3eaf06268739c3cca1cd73aaeb832,"bring everything into line, remove old code, tweak field order algorith: re-implementation complete"
kevin-montrose,2013-09-21 19:16:54,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e969b91075955ceb643ac58d3051cb54a26c843a,e969b91075955ceb643ac58d3051cb54a26c843a,dictionaries re-implemented ; stop-gap commit
kevin-montrose,2013-09-21 18:44:33,https://api.github.com/repos/kevin-montrose/Jil/git/commits/517aece7410e6837ac5d0eff185c4db00018031c,517aece7410e6837ac5d0eff185c4db00018031c,lists re-implemented ; stop-gap commit
kevin-montrose,2013-09-21 17:30:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3db33ea228dbb2f8765491b10c8ad7d7e152d1d9,3db33ea228dbb2f8765491b10c8ad7d7e152d1d9,reorganization ; stopgap commit
kevin-montrose,2013-09-21 17:26:26,https://api.github.com/repos/kevin-montrose/Jil/git/commits/4692bdb6afdce19e4473e2e89b833f4889806d3f,4692bdb6afdce19e4473e2e89b833f4889806d3f,move return somewhere that makes more sense ; stopgap commit
kevin-montrose,2013-09-21 17:25:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6ab43399ed8c92b0e8173b2fb34ee98668b6bf94,6ab43399ed8c92b0e8173b2fb34ee98668b6bf94,remove a Pop ; stopgap commit
kevin-montrose,2013-09-21 17:23:04,https://api.github.com/repos/kevin-montrose/Jil/git/commits/e4e0b2fa24b899b8d4231c38d9510282a0a95005,e4e0b2fa24b899b8d4231c38d9510282a0a95005,re-implementation to avoid needless field fetching when dealing with od types; stop-gap commit
kevin-montrose,2013-09-18 03:37:08,https://api.github.com/repos/kevin-montrose/Jil/git/commits/2afb06e89e87aff8244bd80e02d208f0fec75444,2afb06e89e87aff8244bd80e02d208f0fec75444,DynamicMethod impl complete ; need to look into *conditionally* using proper types though
kevin-montrose,2013-09-18 01:26:03,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d9c3585ef7e863a2d4690f117356af46152b5f65,d9c3585ef7e863a2d4690f117356af46152b5f65,"stopgap commit ; DynamicMethods were the direction to go in, refactoring TypeBuilder out (still busted stuff)"
kevin-montrose,2013-09-17 23:12:45,https://api.github.com/repos/kevin-montrose/Jil/git/commits/6c12403b72873a55aa934b4f016fc91c7d729f53,6c12403b72873a55aa934b4f016fc91c7d729f53,more tests
kevin-montrose,2013-09-17 23:03:23,https://api.github.com/repos/kevin-montrose/Jil/git/commits/71e41b76a0c0e712d1350f29a228a28606c2fd8b,71e41b76a0c0e712d1350f29a228a28606c2fd8b,"remove StringConstants (not actually faster), add a test to confirm re-ordering is actually faster"
kevin-montrose,2013-09-17 04:33:14,https://api.github.com/repos/kevin-montrose/Jil/git/commits/875d45e9dce6a7e8f85bab8fcdd4aff75501516e,875d45e9dce6a7e8f85bab8fcdd4aff75501516e,remove TestResults/ from repro
kevin-montrose,2013-09-17 03:59:49,https://api.github.com/repos/kevin-montrose/Jil/git/commits/f1f9a3ab8d50e0739be55f80da283de54e78900f,f1f9a3ab8d50e0739be55f80da283de54e78900f,get lists working too
kevin-montrose,2013-09-17 03:34:11,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0941fed3b523b2ba9eb3044819fb287fd89834fe,0941fed3b523b2ba9eb3044819fb287fd89834fe,dictionary serializer stubbed out
kevin-montrose,2013-09-17 02:27:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/eb29f0f6c82c2aa0999baea0e8e95980a6dc7f33,eb29f0f6c82c2aa0999baea0e8e95980a6dc7f33,fix string constant usage
kevin-montrose,2013-09-17 02:24:00,https://api.github.com/repos/kevin-montrose/Jil/git/commits/3f937a08d4165ca71d21e328ed1780b0723cc18c,3f937a08d4165ca71d21e328ed1780b0723cc18c,fixup comma separators
kevin-montrose,2013-09-17 02:14:06,https://api.github.com/repos/kevin-montrose/Jil/git/commits/dec0b5ea5acd6f0496fa7dce884a7388aa3ee82c,dec0b5ea5acd6f0496fa7dce884a7388aa3ee82c,lurch towards proper string handling
kevin-montrose,2013-09-16 04:15:21,https://api.github.com/repos/kevin-montrose/Jil/git/commits/0b3b342586bf2acc0d7f49a1a01747dd7c7b89e0,0b3b342586bf2acc0d7f49a1a01747dd7c7b89e0,Make recursive types work (using a pre-release Sigil build)
kevin-montrose,2013-09-15 20:11:18,https://api.github.com/repos/kevin-montrose/Jil/git/commits/00d95e84087c6dd116293d564530cdbeffcab3c0,00d95e84087c6dd116293d564530cdbeffcab3c0,first actual pseudo-serialization
kevin-montrose,2013-09-15 18:46:36,https://api.github.com/repos/kevin-montrose/Jil/git/commits/d80b2fb4e5e4b287dbd61df7180e2f1ea4f44086,d80b2fb4e5e4b287dbd61df7180e2f1ea4f44086,"bail on states, Types have what we need but better"
kevin-montrose,2013-09-15 05:02:31,https://api.github.com/repos/kevin-montrose/Jil/git/commits/7cb301258a720bcb0a56b06efdab8c58c23d7b57,7cb301258a720bcb0a56b06efdab8c58c23d7b57,lurching towards actually compiling
kevin-montrose,2013-09-15 03:10:35,https://api.github.com/repos/kevin-montrose/Jil/git/commits/1f62344baa313926459ed5186e49dca9a1cba82a,1f62344baa313926459ed5186e49dca9a1cba82a,initial commit
