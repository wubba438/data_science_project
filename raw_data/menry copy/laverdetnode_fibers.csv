node-fibers,Fiber/coroutine support for v8 and node.
username,timestamp,url,sha,message
devnexen,2019-08-27 06:17:24,https://api.github.com/repos/laverdet/node-fibers/git/commits/e60463c1654f1437c286321b2dec72c3d7701b43,e60463c1654f1437c286321b2dec72c3d7701b43,"Use MAP_STACK on FreeBSD

Also removes PROT_EXEC"
laverdet,2019-05-02 00:25:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/5c24f960bc8d2a5a4e1aaf5de5ded3587566a86f,5c24f960bc8d2a5a4e1aaf5de5ded3587566a86f,"Bump npm version -> 4.0.1

- Fix musl libc / Alpine Linux"
laverdet,2019-05-02 00:25:27,https://api.github.com/repos/laverdet/node-fibers/git/commits/0c7d42b16277489da3a7c51f44bd96b5fb53707e,0c7d42b16277489da3a7c51f44bd96b5fb53707e,Remove #endif that snuck in
laverdet,2019-05-02 00:22:44,https://api.github.com/repos/laverdet/node-fibers/git/commits/6eaea6bbb7fd23ae8a1431f8fdba48d472613942,6eaea6bbb7fd23ae8a1431f8fdba48d472613942,"Fix musl libc / Alpine Linux

Fixes #410"
laverdet,2019-04-29 06:21:22,https://api.github.com/repos/laverdet/node-fibers/git/commits/4ed51fc3b44cc0311df988cf3a693899baf07e6e,4ed51fc3b44cc0311df988cf3a693899baf07e6e,"Bump npm version -> 4.0.0

- Added npm binary support for node v12.x
- Dropped npm binary support for node v8.x
- Windows binaries are much larger for some reason"
laverdet,2019-04-29 06:21:12,https://api.github.com/repos/laverdet/node-fibers/git/commits/00be04b38adee0e9eb95cb2737f6f2ff883615c3,00be04b38adee0e9eb95cb2737f6f2ff883615c3,Update README notes for nodejs v12.0
qbit,2019-04-13 22:54:56,https://api.github.com/repos/laverdet/node-fibers/git/commits/6e434638a53102d39be42ce52aabfbad0245b225,6e434638a53102d39be42ce52aabfbad0245b225,"Use MAP_STACK on OpenBSD.

More info here: http://openbsd-archive.7691.n7.nabble.com/stack-register-checking-td338238.html"
laverdet,2019-04-29 02:34:50,https://api.github.com/repos/laverdet/node-fibers/git/commits/aca1063580e3b79616a293cfd3b9311d6c28c650,aca1063580e3b79616a293cfd3b9311d6c28c650,Updates for node v12 compatibility
laverdet,2018-11-21 22:52:19,https://api.github.com/repos/laverdet/node-fibers/git/commits/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8,ddebed9b8ae3883e57f822e2108e6943e5c8d2a8,"Bump npm version -> 3.1.1

Includes a fix for linux binaries on nodejs version 8.x. No source
changes."
laverdet,2018-11-21 22:51:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/9280b9fd86ad98aa1cc7940a32628d0c86f3aaf2,9280b9fd86ad98aa1cc7940a32628d0c86f3aaf2,Issue template additions
laverdet,2018-11-19 22:37:02,https://api.github.com/repos/laverdet/node-fibers/git/commits/e065a1fea2a9fd0a5a0a704a4c848b69edf9d8cf,e065a1fea2a9fd0a5a0a704a4c848b69edf9d8cf,Issue template
laverdet,2018-08-30 22:57:19,https://api.github.com/repos/laverdet/node-fibers/git/commits/cfa0f3fd5e0677bdc1df25a85d16162ed740ca06,cfa0f3fd5e0677bdc1df25a85d16162ed740ca06,"Lower GLIBCXX required version

By dropping this unneeded function call we can use glibcxx >=3.4.9
instead of >=3.4.20."
GeoffreyBooth,2018-08-30 22:52:49,https://api.github.com/repos/laverdet/node-fibers/git/commits/41802c9f3037dfbb08f30463344c2ccaa76fa3c2,41802c9f3037dfbb08f30463344c2ccaa76fa3c2,"Bundle binary for Alpine Linux/musl distributions (#384)

Append libc family to Linux build filenames, so that prebuilt binaries
are available for Linux distros using either glibc or musl"
rmanivannan,2018-06-12 17:54:13,https://api.github.com/repos/laverdet/node-fibers/git/commits/371d964e631e597cd82906613c63ed193365a4d4,371d964e631e597cd82906613c63ed193365a4d4,Update build.js
laverdet,2018-07-31 02:39:04,https://api.github.com/repos/laverdet/node-fibers/git/commits/a9bb8099b20251d20f099229fec6aa49891f5be0,a9bb8099b20251d20f099229fec6aa49891f5be0,"Bump npm version -> 3.0.0

- Added npm binary support for node v10.x
- Dropped npm binary support for node v6.x
- Dropped npm binary support for OS X 32-bit"
no2chem,2018-06-14 17:50:59,https://api.github.com/repos/laverdet/node-fibers/git/commits/5afd50a9548d94302576b253f5f4bd9409174363,5afd50a9548d94302576b253f5f4bd9409174363,Fix tests in v9 and v10
no2chem,2018-06-26 04:19:56,https://api.github.com/repos/laverdet/node-fibers/git/commits/c0652601e8778d72dfec8fc8312459845e23b1f5,c0652601e8778d72dfec8fc8312459845e23b1f5,"Fix deprecation warnings (#381)

Fix node versino 10 deprecation warnings"
laverdet,2018-03-21 04:56:11,https://api.github.com/repos/laverdet/node-fibers/git/commits/4786aef736ab8285d29e9476e3615abbd3935d37,4786aef736ab8285d29e9476e3615abbd3935d37,Bump npm version -> 2.0.2
laverdet,2018-03-21 04:54:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/fd6fbc6a45589b3e0ee741e348acb71297bdf7dc,fd6fbc6a45589b3e0ee741e348acb71297bdf7dc,"Fix async hooks in earlier version of v8.x

Fixes #366"
laverdet,2018-03-20 21:05:55,https://api.github.com/repos/laverdet/node-fibers/git/commits/ae2dd091b4730f33040609d8b8ec327205c685f0,ae2dd091b4730f33040609d8b8ec327205c685f0,Bump npm version -> 2.0.1
laverdet,2018-03-20 21:05:40,https://api.github.com/repos/laverdet/node-fibers/git/commits/d2c04c314bb4c07739493e38d6f9c410807850df,d2c04c314bb4c07739493e38d6f9c410807850df,Fix nodejs v6.x.x and v8.10.x
laverdet,2018-01-09 04:18:57,https://api.github.com/repos/laverdet/node-fibers/git/commits/c6fec5c378dc94f290382a44d60802541c0ac9c8,c6fec5c378dc94f290382a44d60802541c0ac9c8,"Correctly handle node async hook ids

This is a kind of hacky solution which depends on some undocumented
internal API. Hopefully in the future I can do this some other way.

Fixes #357"
laverdet,2018-01-09 04:17:12,https://api.github.com/repos/laverdet/node-fibers/git/commits/9475a69a3b06f2d56b049d9d46febb7a494c99ee,9475a69a3b06f2d56b049d9d46febb7a494c99ee,"Simplify fibers.node require logic

There's no reason for this stat here. This also fixes #353."
laverdet,2018-01-09 04:07:57,https://api.github.com/repos/laverdet/node-fibers/git/commits/801118330ca82cb83e05e28788842b7cec1bd0ce,801118330ca82cb83e05e28788842b7cec1bd0ce,"Add missing test

This should have been added in 76efaa175c6c1176c1f19e4e510469298979b106"
laverdet,2017-06-28 04:42:02,https://api.github.com/repos/laverdet/node-fibers/git/commits/5c0cf2121b66057d1fbb5c1610333cc247f0a109,5c0cf2121b66057d1fbb5c1610333cc247f0a109,"Add cute badges and project description to README

Fixes #301 I guess"
laverdet,2017-06-05 18:44:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/3566b274bc2e863d960f3b3f68cd68301dcf3497,3566b274bc2e863d960f3b3f68cd68301dcf3497,"Bump npm version -> 2.0.0

- This is the same as version 1.0.16 but since I'm dropping binary
  support for node v4.x it should've been a major semvar. 1.0.16
	will be unpublished."
laverdet,2017-06-05 01:04:14,https://api.github.com/repos/laverdet/node-fibers/git/commits/164924677aab361755d90e01ee2ff4491deabe14,164924677aab361755d90e01ee2ff4491deabe14,Fix travis-ci build
laverdet,2017-06-04 03:40:37,https://api.github.com/repos/laverdet/node-fibers/git/commits/57577bb3b9ab9b971c72d90671f0425919f86770,57577bb3b9ab9b971c72d90671f0425919f86770,"Bump npm version -> 1.0.16

- Added npm binary support for node v8.x
- Dropped npm binary support for node v4.x
- Fix compilation on Arch Linux"
laverdet,2017-06-04 03:39:42,https://api.github.com/repos/laverdet/node-fibers/git/commits/1671c934b5780a5299c0801d8f5ced8caa57738e,1671c934b5780a5299c0801d8f5ced8caa57738e,"Use -std=gnu11 on linux compilation

Fixes #321"
laverdet,2016-12-27 17:51:15,https://api.github.com/repos/laverdet/node-fibers/git/commits/c0456ac8d1a0162abc6a10aab51d07af00f1cb76,c0456ac8d1a0162abc6a10aab51d07af00f1cb76,"Migrate deprecated calls

Fixes gh-323

There are a couple of deprecated calls that will remain on node v6.x but
are fixed under node v7.x"
tbodt,2016-12-05 20:49:53,https://api.github.com/repos/laverdet/node-fibers/git/commits/bf7ce8ab4c34c810b05dd2d8a212689c274b3ec1,bf7ce8ab4c34c810b05dd2d8a212689c274b3ec1,Enable the libcoro asm backend on macos
ForsakenHarmony,2016-09-19 16:32:12,https://api.github.com/repos/laverdet/node-fibers/git/commits/584e8c324ce93b344fd0a7b8f52a38fba67a2a4b,584e8c324ce93b344fd0a7b8f52a38fba67a2a4b,Update fibers.js
laverdet,2016-10-06 08:35:11,https://api.github.com/repos/laverdet/node-fibers/git/commits/8d7e4ffeb5151ade2ef32455080fbb2ffc226e13,8d7e4ffeb5151ade2ef32455080fbb2ffc226e13,Fix building under Electron 1.4.2
laverdet,2016-10-06 07:33:07,https://api.github.com/repos/laverdet/node-fibers/git/commits/6242180a112eb842407b7ae1fba5eca896fdcc60,6242180a112eb842407b7ae1fba5eca896fdcc60,Update Ubuntu error message tip
laverdet,2016-10-06 01:10:31,https://api.github.com/repos/laverdet/node-fibers/git/commits/9ce9953ad41bb8e5dd8d46e042f134c840bfcf12,9ce9953ad41bb8e5dd8d46e042f134c840bfcf12,"Bump npm version -> 1.0.15

1.0.14 isn't in git history, that was an npm-only version with extra
binaries and no code changes."
laverdet,2016-10-06 01:06:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/09863ddcb93889fb3c6b0b0d555c114d26172ba8,09863ddcb93889fb3c6b0b0d555c114d26172ba8,"Use `process.versions.modules` to select binary

Node 6.5.0 updated the v8 version in the middle of a release cycle which
has never been done before but technically doesn't break ABI
compatibility. But then fibers tries to select a new binary which wasn't
packaged in npm and everyone gets mad at me. So now we're using
`process.versions.modules` which should only be updated for major
releases."
laverdet,2016-10-06 00:39:47,https://api.github.com/repos/laverdet/node-fibers/git/commits/76efaa175c6c1176c1f19e4e510469298979b106,76efaa175c6c1176c1f19e4e510469298979b106,"Clean up v8 data on fiber death

v8 4.4 added support to signal that a ""thread"" will no longer be used.
We can use this to clean up our v8 data and improve speed after large
numbers of fibers are created at the same time.

Fixes #305"
laverdet,2016-10-05 22:59:55,https://api.github.com/repos/laverdet/node-fibers/git/commits/f445d02b00a34976d3e5a187fdeeef82b1b689df,f445d02b00a34976d3e5a187fdeeef82b1b689df,Modernize v8 version detection
TomFreudenberg,2016-06-24 20:06:35,https://api.github.com/repos/laverdet/node-fibers/git/commits/ef67c62190c90437de8b4883cd7aaf40faa45dbd,ef67c62190c90437de8b4883cd7aaf40faa45dbd,Add support to arm64
laverdet,2016-08-22 23:25:27,https://api.github.com/repos/laverdet/node-fibers/git/commits/eae3f2b5cb6b6c6f3f24a63c3ce51eb45c856550,eae3f2b5cb6b6c6f3f24a63c3ce51eb45c856550,travis-ci updates
laverdet,2016-08-22 23:14:44,https://api.github.com/repos/laverdet/node-fibers/git/commits/ea63217cbe1806d2d209907ccbca4d0e64a0016d,ea63217cbe1806d2d209907ccbca4d0e64a0016d,Increase stack padding to 6k
laverdet,2016-08-22 23:01:39,https://api.github.com/repos/laverdet/node-fibers/git/commits/3e571a7fe9c8713f95c3e9c0305af3c8208b24b2,3e571a7fe9c8713f95c3e9c0305af3c8208b24b2,"Remove stack-overflow3.js

This causes node to segfault even if you remove all the Fibers stuff."
amilajack,2016-06-22 06:03:03,https://api.github.com/repos/laverdet/node-fibers/git/commits/a64c4af3133b3d01bd7c3740ae1411eb6597669a,a64c4af3133b3d01bd7c3740ae1411eb6597669a,Added travis ci support
laverdet,2016-05-08 17:32:19,https://api.github.com/repos/laverdet/node-fibers/git/commits/dfb51692edc6f93787c602ede6c08067f9ce7bf3,dfb51692edc6f93787c602ede6c08067f9ce7bf3,"Bump npm version -> 1.0.13

This version adds support for users running musl on Linux distributions
such as Alpine. You'll need to compile the extension for yourself on
these systems but that should be done automatically for you when you run
`npm install`.

Existing binaries remain unchanged."
laverdet,2016-05-04 23:47:13,https://api.github.com/repos/laverdet/node-fibers/git/commits/b57b08c84cf67f9e5811f51ff37dd5f678db3bb2,b57b08c84cf67f9e5811f51ff37dd5f678db3bb2,"Use v8 symbols for thread locals on musl

musl allocates thread locals round-robin from a hard-capped pool of 128
keys. They seed the search from the current stack pointer, which is
basically random. Most of the time the v8 thread locals will be
contiguous, however a little less than 1% of the time they will not be.
Furthermore, half the time the fibers coro key will greater than the v8
thread keys, which messes with our existing search.

This patch uses internal v8 symbols to grab the thread locals. This
method doesn't work on distributions which strip internal symbols so we
gate it behind a #define."
d3m3vilurr,2016-02-24 07:41:26,https://api.github.com/repos/laverdet/node-fibers/git/commits/88021aeb5e7c4d0f3a50333b3f77624ac718c03c,88021aeb5e7c4d0f3a50333b3f77624ac718c03c,"binding: Use `ASM` mode on the linux + non glibc environ

POSIX no more support `ucontext_t` operation.

Reference:
http://wiki.musl-libc.org/wiki/Open_Issues#ucontext.h"
laverdet,2016-05-04 23:37:35,https://api.github.com/repos/laverdet/node-fibers/git/commits/83a5fef5b4c9fbf79728dc799dfd79419744dc3d,83a5fef5b4c9fbf79728dc799dfd79419744dc3d,"Bump npm version -> 1.0.12

There was an error in the npm registry and 1.0.11 is forever broken. No
code changes are included in this release.

See: https://github.com/npm/npm/issues/12563"
laverdet,2016-05-03 18:13:39,https://api.github.com/repos/laverdet/node-fibers/git/commits/722b14ffb04c83876d3ca8de3f67a3acc3fd0115,722b14ffb04c83876d3ca8de3f67a3acc3fd0115,"Bump npm version -> 1.0.11

Updated README.md with common solutions to installation problems.

This release contains binary support for all combinations of:
[ia32, x64] + [Linux, OS X, Windows] + Node [4.x, 5.x, 6.x]"
laverdet,2016-05-03 16:24:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/fe510649ab00e501f7d8910da039df49462f9a10,fe510649ab00e501f7d8910da039df49462f9a10,"Fix invalid `delete`

Pretty obvious bug here, though this only happens when the system is
out of memory so the ship is probably going down at that point
anyway."
laverdet,2016-05-03 16:09:30,https://api.github.com/repos/laverdet/node-fibers/git/commits/21a3b4bd07a6e352fb78de6de7a929107403f287,21a3b4bd07a6e352fb78de6de7a929107403f287,Improved build failed messages
DavidRusso,2016-04-14 18:21:30,https://api.github.com/repos/laverdet/node-fibers/git/commits/3f4b3fc72312f4b7cef906fff8e7b07b01ded552,3f4b3fc72312f4b7cef906fff8e7b07b01ded552,Support for building on IBM AIX and IBM i (PASE) platforms.
laverdet,2016-02-25 01:49:38,https://api.github.com/repos/laverdet/node-fibers/git/commits/4e31a39d35635251e8680301dccf7d186396f739,4e31a39d35635251e8680301dccf7d186396f739,"Utility functions for converting to/from Promises

These functions will make interoperating with existing async libraries
much easier.

Also bump npm version -> 1.0.10"
laverdet,2016-02-11 00:57:56,https://api.github.com/repos/laverdet/node-fibers/git/commits/e09057a0c7b028544f26a28df39c4a422734d467,e09057a0c7b028544f26a28df39c4a422734d467,"Bump npm version -> 1.0.9

Versions 1.0.7 and 1.0.8 contained no code changes, just updates to
binaries in npm. This version will contain binaries for node 4.x and
5.x on Window, Linux, and OS X for both 32-bit and 64-bit
architectures."
laverdet,2016-02-11 00:52:29,https://api.github.com/repos/laverdet/node-fibers/git/commits/db7cd067e66f70d48f95100607ef052bf8663b58,db7cd067e66f70d48f95100607ef052bf8663b58,"Tweak to previous patch

Seems like TLS keys of 0 are actually possible so I need to change this
loop a little bit. The misdirection here is because pthread_key_t is
unsigned so `>= 0` is tautological."
laverdet,2016-02-10 22:58:39,https://api.github.com/repos/laverdet/node-fibers/git/commits/91c4b4020303379c4c50346882f39a201279f592,91c4b4020303379c4c50346882f39a201279f592,"Search farther for isolate key for Windows users

Similar to this--
https://github.com/meteor/node-fibers/commit/d519f0c5971c33d99c902dad346b817e84bab001

But fixed for non-Windows systems."
laverdet,2015-08-03 04:16:13,https://api.github.com/repos/laverdet/node-fibers/git/commits/7dfdb6d2fb1e3fabf26d1f6d5102e08d0c557c5d,7dfdb6d2fb1e3fabf26d1f6d5102e08d0c557c5d,Bump npm version -> 1.0.6
laverdet,2015-07-02 21:57:42,https://api.github.com/repos/laverdet/node-fibers/git/commits/7ccb7f7608b9ae1bc9a977ef02ab392f7911899e,7ccb7f7608b9ae1bc9a977ef02ab392f7911899e,"Add setter on Error

Fixes #184

Adapted from the above pull request"
laverdet,2015-07-02 21:48:48,https://api.github.com/repos/laverdet/node-fibers/git/commits/dc32b477c4b5f6fe2c59657ef56389f36c773774,dc32b477c4b5f6fe2c59657ef56389f36c773774,"Fix node 0.10.x

This was broken in bdea5335 because I guess isolate semantics changed"
laverdet,2015-07-02 21:26:31,https://api.github.com/repos/laverdet/node-fibers/git/commits/9c682b16f635389646577ad03bb5b9ed0c98f33d,9c682b16f635389646577ad03bb5b9ed0c98f33d,"Add option to auto-detach on Function.prototype.future()

This is useful for running fibers in events.

Fixes #215"
laverdet,2015-07-02 21:22:39,https://api.github.com/repos/laverdet/node-fibers/git/commits/b22abbc724e08c2cb512149db7661d5d95c7073a,b22abbc724e08c2cb512149db7661d5d95c7073a,"Fiber-aware repl

$ ./bin/repl
node> var f = new Future;
node> setTimeout(function() { f.return() }, 1000); f.wait()
[waits 1s]
node>

Fixes #211"
laverdet,2015-07-02 21:17:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/562f02acccd1931935bebf2aa057b64a072f594d,562f02acccd1931935bebf2aa057b64a072f594d,"Throw original Errors in Future

Instead of throwing a derived Error in Future.prototype.get we now throw
the original error but with a mutated `stack` property. This could run
into problems if you're catching the same error from multiple places at
the same time, but even then it shouldn't cause *too* much confusion.

Fixes #206"
laverdet,2015-07-02 20:48:27,https://api.github.com/repos/laverdet/node-fibers/git/commits/4f989184be67055e9c9fe93ca20c2a0b352480b5,4f989184be67055e9c9fe93ca20c2a0b352480b5,"Update deprecated `customFds` in install script

Fixes #185"
laverdet,2015-07-02 20:46:16,https://api.github.com/repos/laverdet/node-fibers/git/commits/9bba9f6ee9726f10a50e957f8169ba395ebcfe1b,9bba9f6ee9726f10a50e957f8169ba395ebcfe1b,"Try `nodejs` binary for Ubuntu

Fixes #180"
pdehaan,2015-05-23 22:21:28,https://api.github.com/repos/laverdet/node-fibers/git/commits/05b622d78f24d34ad9f216363a4b11be42fcf656,05b622d78f24d34ad9f216363a4b11be42fcf656,"Add license attribute

specifying the type and URL is deprecated:

https://docs.npmjs.com/files/package.json#license
http://npm1k.org/"
pskocik,2015-03-31 08:13:58,https://api.github.com/repos/laverdet/node-fibers/git/commits/68da69d8e2af85cb5d0cea6ff4fdd492e5700bba,68da69d8e2af85cb5d0cea6ff4fdd492e5700bba,"fix for node v0.10.25 on Ubuntu 14.04

Should work elsewhere too as `extern ""C""` is not used in the
node documentation for writing add-ons anymore."
V1RTUOZ,2014-04-01 13:59:58,https://api.github.com/repos/laverdet/node-fibers/git/commits/84b5f7cc7ac2486cbc3c95d25bafc98c8255860a,84b5f7cc7ac2486cbc3c95d25bafc98c8255860a,intrinsic fixed
laverdet,2015-05-28 00:52:21,https://api.github.com/repos/laverdet/node-fibers/git/commits/1cb04145c228f77acf7c68efac8b18ac8e95ed5b,1cb04145c228f77acf7c68efac8b18ac8e95ed5b,"Fix benign GCC warning

Fixes #221"
laverdet,2015-05-28 00:30:13,https://api.github.com/repos/laverdet/node-fibers/git/commits/bdea53350c454bd50326a52fddd28d15be7830ac,bdea53350c454bd50326a52fddd28d15be7830ac,"Fix segfault on exit when unwound fibers exist

Newer versions of v8 raise an exception when you try to delete an
isolate while other threads still have an active entry. This causes node
to crash instead of exiting gracefully. It's not too big of a deal since
we were in the process of terminating and no more user code could run
anyway, but it is still confusing.

Also this updates the unit tests to detect unusual exit codes and report
them as error. And also to exit with an error code when a test fails.

Fixes #223"
laverdet,2015-03-26 05:20:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/198c2f4d8f98404e5ddde84e0a8d8f0d21832648,198c2f4d8f98404e5ddde84e0a8d8f0d21832648,"Support for io.js and improved stack guard

In some pathological cases you could corrupt the stack using fibers and
cause a segfault. There seem to be some changes to how the stack guard
works from v8 3.14.x (node 0.10.x) to 3.28.x (node 0.12.x). This was
causing a lot of confusion so I brushed the problem under the rug a
little bit."
laverdet,2015-01-07 02:04:11,https://api.github.com/repos/laverdet/node-fibers/git/commits/aff726a79af0c9d400ec0fa37be53f23643a4623,aff726a79af0c9d400ec0fa37be53f23643a4623,Bump npm version -> 1.0.5
laverdet,2015-01-07 02:03:23,https://api.github.com/repos/laverdet/node-fibers/git/commits/9bf5012fb11581029f00aa05961e9812a4a7a889,9bf5012fb11581029f00aa05961e9812a4a7a889,"More Windows bugs

Silly bit logic error here.

Fixes #200"
laverdet,2015-01-03 03:21:09,https://api.github.com/repos/laverdet/node-fibers/git/commits/4de9de194aa5a2b37c07ddf65763d27044ff30ef,4de9de194aa5a2b37c07ddf65763d27044ff30ef,"Bump npm version -> 1.0.4

Let's forget 1.0.3 ever happened."
laverdet,2015-01-03 03:20:19,https://api.github.com/repos/laverdet/node-fibers/git/commits/d9bc3a7b9d486d6f45170501de8626d52dfa5dfa,d9bc3a7b9d486d6f45170501de8626d52dfa5dfa,"Guard aginst multiple binary includes

npm can install fibers more than once which tends to lead to trouble.

Fixes #102, #177"
laverdet,2015-01-03 03:19:04,https://api.github.com/repos/laverdet/node-fibers/git/commits/68a8a853d0d9046026878e37c733976879400b6b,68a8a853d0d9046026878e37c733976879400b6b,Fix sloppy typos in Windows branch
laverdet,2014-12-18 23:15:34,https://api.github.com/repos/laverdet/node-fibers/git/commits/8458d90a44c88e0118717b4d22b4ce4d721577de,8458d90a44c88e0118717b4d22b4ce4d721577de,"Always specify --release on build

No idea why this is needed but it fixes #153 probably"
laverdet,2014-12-18 23:00:15,https://api.github.com/repos/laverdet/node-fibers/git/commits/92897f8869136fc3ffb0d9c88b3d159fc2c27675,92897f8869136fc3ffb0d9c88b3d159fc2c27675,"Mitigate performance penalty from v8 thread cruft

v8 never reaps memory used by terminated threads, so if you blow past
Fiber's coroutine pool then v8 starts to suffer. I submitted v8
issue #3777, but this patch serves as a decent workaround."
laverdet,2014-12-18 20:31:07,https://api.github.com/repos/laverdet/node-fibers/git/commits/35533ac07bb5363a13df4cdcd32bb94ec98d9631,35533ac07bb5363a13df4cdcd32bb94ec98d9631,"Correctly retreive the threadid from v8

This is an `int` not a `size_t`."
laverdet,2014-12-18 19:32:39,https://api.github.com/repos/laverdet/node-fibers/git/commits/f55006e8a70ea18ec60981e62bd53f403dc6c19e,f55006e8a70ea18ec60981e62bd53f403dc6c19e,"Correctly handle ""0"" thread local keys

a3fd3622 created issue #197, which was fixed as a side effect of
49eb836b because I left out an assert(). Anyway this should fix the
underlying issue in all cases."
laverdet,2014-12-18 07:56:13,https://api.github.com/repos/laverdet/node-fibers/git/commits/52756b851d1d2c8f37c881b797206e1497e82007,52756b851d1d2c8f37c881b797206e1497e82007,"Oops I broke the build

This flag was only meant to be there while troubleshooting, it wasn't
supposed to be committed :)"
laverdet,2014-12-18 00:34:14,https://api.github.com/repos/laverdet/node-fibers/git/commits/5811c3f6b309275f514a54fb52fa2e62b770c5ea,5811c3f6b309275f514a54fb52fa2e62b770c5ea,"Fix node v0.11.15-pre

The convenience ReadOnly flag has been removed, but now that `Fiber`
isn't a global anymore it's not a big deal"
laverdet,2014-12-18 00:21:32,https://api.github.com/repos/laverdet/node-fibers/git/commits/49eb836bd009e15f5511f1a9f905a4084215177c,49eb836bd009e15f5511f1a9f905a4084215177c,"Remove call to `V8::GetCurrentThreadId()`

v8 removed it and it's no longer available in node 0.11.x"
laverdet,2014-12-17 17:22:07,https://api.github.com/repos/laverdet/node-fibers/git/commits/b96fe5815c759dcb4519dd857323e94c21c9d6b7,b96fe5815c759dcb4519dd857323e94c21c9d6b7,"Fix broken unit tests

None of these have been actual problems in node-fibers, just broken
tests."
laverdet,2014-12-17 16:34:59,https://api.github.com/repos/laverdet/node-fibers/git/commits/a262acf4d9d4c450731bcb77babe1bf8d292c063,a262acf4d9d4c450731bcb77babe1bf8d292c063,Bump npm version -> 1.0.3
laverdet,2014-12-17 16:29:35,https://api.github.com/repos/laverdet/node-fibers/git/commits/a3fd36228dc99c870a4e74f3a95a8504da8e14ad,a3fd36228dc99c870a4e74f3a95a8504da8e14ad,"Fix TLS detection on Windows 8.1

The assumption that v8's TLS keys are all together in a row doesn't hold
true 100% of the time in Windows, it seems. This patch includes a new
TLS searching method that finds all the keys with a different heuristic.

Fixes #158 (@rosen-vladimirov's comment)"
laverdet,2014-10-21 22:23:27,https://api.github.com/repos/laverdet/node-fibers/git/commits/74243303f93080e7e423c7d9feabbeab2949de3c,74243303f93080e7e423c7d9feabbeab2949de3c,"Add support for ppc & s390 archs?

@CGavrila says this works so I'll take his word for it.

Fixes #188
Fixes #190"
laverdet,2014-10-21 22:15:00,https://api.github.com/repos/laverdet/node-fibers/git/commits/6e18f2355ba003ca4ad1f7d4fdc66983d2a8aca4,6e18f2355ba003ca4ad1f7d4fdc66983d2a8aca4,"Fix isolate key detection

This broke in node 0.11.14's version of v8. A few little tweaks and we
can make v8 fill these locals up for us."
laverdet,2014-10-21 19:56:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/f5c85baf94e475be888ab85cffddcd9edcc19c4e,f5c85baf94e475be888ab85cffddcd9edcc19c4e,"Support for node v0.11.13+

Node versions v0.11.0 - v0.11.12 are no longer supported. Note that
there are still some outstanding issues that will be addressed in a
later commit."
laverdet,2014-10-06 22:23:21,https://api.github.com/repos/laverdet/node-fibers/git/commits/19355210fc52b88d524329d765441ae49f155ef9,19355210fc52b88d524329d765441ae49f155ef9,"Merge pull request #189 from bjouhier/nastybug

fixed nasty bug (crash or memory leak)"
bjouhier,2014-10-03 22:55:19,https://api.github.com/repos/laverdet/node-fibers/git/commits/3e154941ba5c3234752af304defcf028107e5557,3e154941ba5c3234752af304defcf028107e5557,fixed nasty bug (crash or memory leak)
laverdet,2014-08-25 03:51:45,https://api.github.com/repos/laverdet/node-fibers/git/commits/bb49e38f1357d27e211f398e2ce600d6fbe9c57f,bb49e38f1357d27e211f398e2ce600d6fbe9c57f,Bump npm version -> 1.0.2
laverdet,2014-05-01 01:59:45,https://api.github.com/repos/laverdet/node-fibers/git/commits/969e81d57090f2184b56525205a15fb7e6554187,969e81d57090f2184b56525205a15fb7e6554187,"`Future.task` + improved `Future.wrap`

`Future.task` lets you create temporary futures just like you would
create a closure.

`Future.wrap` now has a lot more features, like being able to directly
wrap a required module."
laverdet,2014-01-08 01:04:41,https://api.github.com/repos/laverdet/node-fibers/git/commits/d1d59a9f55e269df66b3a5b8630b94fd19564b62,d1d59a9f55e269df66b3a5b8630b94fd19564b62,"Support for node v0.11.10

Continues work from 862e3068. Node versions v0.11.0 - v0.11.9 are no
longer supported."
laverdet,2013-12-09 08:04:34,https://api.github.com/repos/laverdet/node-fibers/git/commits/a7337bdfdc30e0993482f2b922a6e9181086d64e,a7337bdfdc30e0993482f2b922a6e9181086d64e,"Documentation errors

Just noticed I pulled in the wrong PR for the Future documentation and
there are some errors. As discussed in:
https://github.com/fresheneesz/node-fibers/commit/28b1a4ab3b29a21a48ec7c109b47a7b88a0cf930"
fresheneesz,2013-07-12 17:54:06,https://api.github.com/repos/laverdet/node-fibers/git/commits/b9abc825d6224863e0095207e031ca3e69cf9941,b9abc825d6224863e0095207e031ca3e69cf9941,Creating full documentation for the Future library
laverdet,2013-08-21 22:40:33,https://api.github.com/repos/laverdet/node-fibers/git/commits/862e306855f432e5a0a669333563ecdf4e9a31ff,862e306855f432e5a0a669333563ecdf4e9a31ff,"Support for node v0.11.4

Closes gh-130

More work will likely need to be done before node 1.0 to remove the
deprecation warnings."
laverdet,2013-07-03 21:47:08,https://api.github.com/repos/laverdet/node-fibers/git/commits/08d66c9e7bb93210be22bda758d378a48c6443d5,08d66c9e7bb93210be22bda758d378a48c6443d5,"Detect failure to create coro stacks

If you are creating a lot of fibers (2000~) on a 32-bit system it's very
possible you will run out of addressable memory. This detects a failed
fiber creation and will throw a JS exception. However, if you are that
close to the memory ceiling it's likely that v8 is about to crash as
well."
laverdet,2013-07-01 04:29:43,https://api.github.com/repos/laverdet/node-fibers/git/commits/2f06e41a142f8a19d7d8ba89601f408669c77210,2f06e41a142f8a19d7d8ba89601f408669c77210,"Update README

Windows 8 is supported."
laverdet,2013-07-01 04:23:39,https://api.github.com/repos/laverdet/node-fibers/git/commits/982f50cd648bb85700c0a295576579f117a58ebb,982f50cd648bb85700c0a295576579f117a58ebb,"Support for node v0.11.3

The v8 API is a moving target, isn't it? Closes gh-123."
laverdet,2013-06-13 05:40:41,https://api.github.com/repos/laverdet/node-fibers/git/commits/a6d3c6634ccdcb362c737f92442951f3f2fe743a,a6d3c6634ccdcb362c737f92442951f3f2fe743a,Bump npm version -> 1.0.1
laverdet,2013-06-13 06:13:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/66c5cff895b98a004d2340e9f889ca4d249b2081,66c5cff895b98a004d2340e9f889ca4d249b2081,"Fix for when TLS is 0

The technique in 21213cdf fails when v8 is the first caller of
pthread_key_create. This modifies the function to search all the way
down to 0 instead of just 1."
laverdet,2013-06-13 16:28:55,https://api.github.com/repos/laverdet/node-fibers/git/commits/5b26e1445774c28488f3de9e5cccfb4a02f0037c,5b26e1445774c28488f3de9e5cccfb4a02f0037c,"Remove line continuations in Unwrap()

These are leftover from the converted macro. Doesn't affect compilation
at all but is poor style."
laverdet,2013-06-13 02:18:34,https://api.github.com/repos/laverdet/node-fibers/git/commits/b5d5ec33c134e359d54782962d7c5bbefe1da349,b5d5ec33c134e359d54782962d7c5bbefe1da349,"Support for node v0.11.x

Simple wrappers that prefer the new v8 API but support the legacy API as
well. Also improves the build process by adding support for Debug builds
and detects binaries that are broken somehow."
laverdet,2013-04-02 09:43:03,https://api.github.com/repos/laverdet/node-fibers/git/commits/3dfb2ace9e89593a47cd035b55912b8c10381ea9,3dfb2ace9e89593a47cd035b55912b8c10381ea9,"Don't short circuit failed tests

A couple of these tests are less than dependable, so be sure to run all
of them instead of just some of them."
sdarnell,2013-04-06 20:06:04,https://api.github.com/repos/laverdet/node-fibers/git/commits/21213cdff613753c306ddb1d1798b5e52d9db0f5,21213cdff613753c306ddb1d1798b5e52d9db0f5,"Find thread local slots using v8 isolate pointer

Add __stdcall to correct declaration of find_thread_id().
Then search back in the latest 20 slots for the v8 isolate pointer."
laverdet,2013-04-12 11:38:45,https://api.github.com/repos/laverdet/node-fibers/git/commits/784ccd4d08e09d72724350e2185355dc1d1b3120,784ccd4d08e09d72724350e2185355dc1d1b3120,"Prototype fix for TLS issues on windows

gh-106 raises some issues with fibers in Windows. The root cause is that
fibers is not finding the v8 TLS origin correctly. This is a new
approach that should be more dependable."
laverdet,2013-03-30 03:58:37,https://api.github.com/repos/laverdet/node-fibers/git/commits/29aa090128e8f9ddae3fb67d6fec4c4c98125e2b,29aa090128e8f9ddae3fb67d6fec4c4c98125e2b,"Merge pull request #105 from metamatt/unhandled-exceptions

Forward unhandled exceptions to main event loop"
metamatt,2013-03-21 23:32:07,https://api.github.com/repos/laverdet/node-fibers/git/commits/ddb5a8042b11045f1b12ce0eac6c99a2827858fc,ddb5a8042b11045f1b12ce0eac6c99a2827858fc,"Forward unhandled exceptions to main event loop

While walking the list of resolve callbacks and calling them, if
something throws an exception, use process.nextTick() to rethrow
the exception from the main event loop.

The reason to catch such exceptions at all is because they're in
client-provided code, and so the fiber-futures library shouldn't
get blamed for them.

The correct destination for such exceptions is the uncaughtException
handler, and that's what rethrowing the exception fron nextTick()
achieves.

The previous behavior was to call process.exit() if such an exception
should happen. That's too severe, however; exceptions in a resolve
callback should be no more or less illegal than exceptions anywhere
else.

Note that in conjunction with Future.wait(), the resolve callback will
often be the local cb() function defined inside Future.wait() itself,
which calls fiber.run(), which propagates any exceptions that should
happen inside the body of the fiber itself: this means it is actually
completely normal for any exceptions that happen inside fiber client
code to land (through fiber.run() and wait()'s cb() routine) in these
callback processing routines' exception handlers.

I don't know whether it's preferable to log the exception at the point
we rethrow it or not. Mostly it will be unwelcome spew, but occasionally
it could be vitally helpful. Also, such logging causes the new test for
this change to fail, because tests in the fibers testsuite are supposed
to print nothing more than ""pass"" to pass. As a compromise for discussion
I've left the log statement present but commented out."
metamatt,2013-03-21 23:29:28,https://api.github.com/repos/laverdet/node-fibers/git/commits/875409fd650539d4f7ed1ac35325dc60131e30af,875409fd650539d4f7ed1ac35325dc60131e30af,"Test for exceptions thrown in a future resolve callback,
especially those thrown in a fiber which uses Future.wait,
which has a nested deferred call to Fiber.run which causes
such exceptions to land in the resolver for the previous wait.

This currently exits the whole node process, and should not."
laverdet,2013-01-14 23:14:08,https://api.github.com/repos/laverdet/node-fibers/git/commits/7aec2a77bb96b58dda08ca2019ac03cd6256b18a,7aec2a77bb96b58dda08ca2019ac03cd6256b18a,"Fix Joyent smart machines build again

Fixes gh-76"
laverdet,2013-01-11 10:24:22,https://api.github.com/repos/laverdet/node-fibers/git/commits/6b62aa7ebbbd043bbc5932e88b162137297e527f,6b62aa7ebbbd043bbc5932e88b162137297e527f,"Bump npm version -> 1.0.0

- Fiber() is no longer global, use return value of require('fibers')
- More robust stack limits
- Fiber API is pretty much frozen"
laverdet,2013-01-11 10:21:17,https://api.github.com/repos/laverdet/node-fibers/git/commits/247a88d72ed74a25acea163d0f7550247715f6a5,247a88d72ed74a25acea163d0f7550247715f6a5,"Fix up Windows support

libcoro now has a Windows Fiber backend, so we can remove the custom
code that was handling that."
laverdet,2013-01-11 07:29:08,https://api.github.com/repos/laverdet/node-fibers/git/commits/d22db0a31c5c14aad71c836a4cfeb8fc0cedca7c,d22db0a31c5c14aad71c836a4cfeb8fc0cedca7c,"Update stack limits

By default Fibers used to have a stack limit of 64k with 2k padding for
v8's native code. This was problematic because some v8 code can use at
least 240k of stack not even including the stack space client JS uses.
The new limits are 512k/1M per fiber with 128k/256k padding.

Additionally this implements libcoro's new stack management interface."
laverdet,2013-01-11 03:43:31,https://api.github.com/repos/laverdet/node-fibers/git/commits/58f3ff7047889cb870a6575cb43508c028dec68b,58f3ff7047889cb870a6575cb43508c028dec68b,Update libcoro to 1.67
laverdet,2013-01-06 23:17:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/f412b0994366878ce0dc6ee8418a8b8b322de65e,f412b0994366878ce0dc6ee8418a8b8b322de65e,"Remove global `Fiber` and `yield`

Fixes gh-72"
laverdet,2013-01-06 22:11:19,https://api.github.com/repos/laverdet/node-fibers/git/commits/1e0947fa6682769a5542ee0dc51f9c6969b07319,1e0947fa6682769a5542ee0dc51f9c6969b07319,"Add check missing node-gyp

Older versions of npm do not give you node-gyp, causing the build the
fail. This is now detected and a better error is given.

Fixes gh-96"
laverdet,2013-01-06 21:59:33,https://api.github.com/repos/laverdet/node-fibers/git/commits/a92076a1589326ce6d2eff9e5202993e6cec7c29,a92076a1589326ce6d2eff9e5202993e6cec7c29,"Fix crash in boundless recursion

Fixes gh-89"
laverdet,2012-09-02 06:09:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/5f3094d88fd05b82d09a6c4d695362fa9eb14087,5f3094d88fd05b82d09a6c4d695362fa9eb14087,"Bump npm version -> 0.6.9

There's no code changes included in the jump from 0.6.8, just a
recompilation for Linux, per gh-88."
laverdet,2012-06-24 13:42:49,https://api.github.com/repos/laverdet/node-fibers/git/commits/9beaa7a30085128d7f36a78e3d4652ba5958c238,9beaa7a30085128d7f36a78e3d4652ba5958c238,Add a quick note about Windows 8 to readme
laverdet,2012-06-24 13:08:37,https://api.github.com/repos/laverdet/node-fibers/git/commits/01937dadb2c07a0c9f983fcdb8f515cd576cc33c,01937dadb2c07a0c9f983fcdb8f515cd576cc33c,"Seed random number before loading library

For some reason on Windows the random number generators gets seeded
with the same thing every time if you load fibers. I didn't look into
what causes this because we can easily fix it by generating a random
number before loading the library. Perhaps I will look into the root
cause eventually..

Fixes gh-82"
laverdet,2012-06-24 12:34:09,https://api.github.com/repos/laverdet/node-fibers/git/commits/ec3997a3e1153c5cf9bb4da654ae9eda24ca180a,ec3997a3e1153c5cf9bb4da654ae9eda24ca180a,Bump npm version -> 0.6.8
laverdet,2012-06-24 12:32:34,https://api.github.com/repos/laverdet/node-fibers/git/commits/1760f9a0e1cce5bc3fdd4dfcaec2c09a16e0069b,1760f9a0e1cce5bc3fdd4dfcaec2c09a16e0069b,"Distinct binaries for v8 versions

node 0.8 brings in a new version of v8 which has binary incompatibility
with existing extensions. We'll have to carry around different binaries
for major v8 versions as well."
laverdet,2012-05-14 05:36:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/95cfbf82db08bd22ce8bd43539b20f79864ca74b,95cfbf82db08bd22ce8bd43539b20f79864ca74b,"Build fixes

- Fix sunos
- Reuse npm's node-gyp instead of pulling in our own copy"
laverdet,2012-05-11 21:43:23,https://api.github.com/repos/laverdet/node-fibers/git/commits/e034e26e719159b3e91d8ce43b7000234572344a,e034e26e719159b3e91d8ce43b7000234572344a,Minor documentation updates
laverdet,2012-05-09 10:10:23,https://api.github.com/repos/laverdet/node-fibers/git/commits/fcf2a7e7ec7ce330fde3ba342dc0d4c5eda069f4,fcf2a7e7ec7ce330fde3ba342dc0d4c5eda069f4,"Fix unit test issues on Windows

None of these tests fail really on Windows.. they just had some bugs in
the tests themselves."
laverdet,2012-05-09 09:29:06,https://api.github.com/repos/laverdet/node-fibers/git/commits/4ecd18aee8233b2eb85d5bd8d7bc105da4230286,4ecd18aee8233b2eb85d5bd8d7bc105da4230286,"Don't rename node module for different archs

Turns out you can't load a module on Windows that has been renamed from
what it was called in the dllexport. So if you have fibers.node, and
rename it to fibers2.node, `require('fibers2') will fail with ""unknown
error"". I'm not sure if this is an inherent problem with dynamic
libraries in Windows or just Node being pedantic.

As a workaround just make a new directory for each platform and arch
with only one file, ""fibers.node""."
laverdet,2012-05-09 08:57:20,https://api.github.com/repos/laverdet/node-fibers/git/commits/e2cb28cf5f39a50090e0bae4c7566b668f174082,e2cb28cf5f39a50090e0bae4c7566b668f174082,"Pure-JS test script

This removes the last dependency on bash.

Also fix a couple of issues with the npm package file."
laverdet,2012-05-09 08:21:12,https://api.github.com/repos/laverdet/node-fibers/git/commits/9d9efdd272c49d93c044839e117908061c8c82f0,9d9efdd272c49d93c044839e117908061c8c82f0,"Port build to gyp + setup for binary distribution

node-gyp powers building now, for all operating systems. Only Windows,
Linux, and OS X were tested. arm support for Linux also was not tested.

Also included is a wrapper module which pulls in a binary specific to
your platform."
laverdet,2012-05-08 19:05:17,https://api.github.com/repos/laverdet/node-fibers/git/commits/5d04e85002e5dc5053763caeacb7bc82395eedaf,5d04e85002e5dc5053763caeacb7bc82395eedaf,"Begin transition to non-global Fiber object

This makes it so that require('fibers') returns the Fiber() object
directly. I'll leave the global exporting for a while for library
authors to convert and then remove it.

Old:
require('fibers');
Fiber(...);

New:
var Fiber = require('fibers');
Fiber(...);"
laverdet,2012-05-08 18:34:26,https://api.github.com/repos/laverdet/node-fibers/git/commits/e9a4d4391271f450923fb8da6974ddea849b0982,e9a4d4391271f450923fb8da6974ddea849b0982,"Correct stack base calculations for Windows

I can never get that math right in my head the first time. This should
be correct and all the fibers tests pass fine in Windows now."
laverdet,2012-05-08 18:32:26,https://api.github.com/repos/laverdet/node-fibers/git/commits/e60bd9739a01a439afb53785c663bbb96c9d2621,e60bd9739a01a439afb53785c663bbb96c9d2621,"Remove pool allocator for coroutine stacks

There is little performance benefit here, if any. It also may be
harmful, since the chunks of memory allocated are very large anyway.
Since this is GNU-specific and complicates compilation on Windows, away
it goes."
japj,2012-05-08 18:16:36,https://api.github.com/repos/laverdet/node-fibers/git/commits/a41b3a9d444302abb420cbe6177716dce34e7159,a41b3a9d444302abb420cbe6177716dce34e7159,"Tentative Windows support

Squashed commit of `winfiber` branch @
cebed2913aff114d7b1e84c62333a96e0dff2340.

This adds support for Windows. There's some issues but nothing that
can't be fixed.

Minor formatting issues changed (dangling tabs, spaces for tabs)."
laverdet,2012-05-04 22:42:20,https://api.github.com/repos/laverdet/node-fibers/git/commits/46595cc5b8718c910001cf955042afa8c6552391,46595cc5b8718c910001cf955042afa8c6552391,"Remove mtime check on fibers require()

If there are problems with the build, they aren't going to be from
upgrading Node. Plus I want to move to binary distribution soon if
possible and this will be counterproductive."
laverdet,2012-05-04 20:52:11,https://api.github.com/repos/laverdet/node-fibers/git/commits/51581128ba72d011c3ad86f6a2e02f9831088558,51581128ba72d011c3ad86f6a2e02f9831088558,"Use <node.h> instead of <node/node.h>

Seems it is more standard and will make it easier for some people to
get this installed."
laverdet,2012-04-27 06:10:33,https://api.github.com/repos/laverdet/node-fibers/git/commits/8c057e1bc410614222e088f936d5f4dc460ab8d4,8c057e1bc410614222e088f936d5f4dc460ab8d4,Bump npm version -> 0.6.6
laverdet,2012-04-27 06:08:29,https://api.github.com/repos/laverdet/node-fibers/git/commits/c8f13e37be43f578f0913e3834a1449bce4417ce,c8f13e37be43f578f0913e3834a1449bce4417ce,"Fallback when -march=native isn't supported

Fixes gh-63"
rlidwka,2012-03-31 22:00:31,https://api.github.com/repos/laverdet/node-fibers/git/commits/6a1ee1c9dae282e21371a99af70f2d49707ac23a,6a1ee1c9dae282e21371a99af70f2d49707ac23a,gmake and freebsd support
laverdet,2012-03-31 01:15:45,https://api.github.com/repos/laverdet/node-fibers/git/commits/d4c0b812bafb49137d9f7512b5c919753565bcd2,d4c0b812bafb49137d9f7512b5c919753565bcd2,"Make a -march=native build by default

It's like 3% faster on my system, maybe."
laverdet,2012-03-27 02:33:49,https://api.github.com/repos/laverdet/node-fibers/git/commits/f64b36f309798fc7be9dec8044230a1f68bd274d,f64b36f309798fc7be9dec8044230a1f68bd274d,"Don't use [[ .. ]] in test.sh

sh needs [ .. ]

Fixes gh-60"
laverdet,2012-03-17 17:14:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/889128004443ce2c4dcffeaff02de9db09fe0104,889128004443ce2c4dcffeaff02de9db09fe0104,Bump npm version -> 0.6.5
jpmoodlerooms,2012-03-16 19:04:55,https://api.github.com/repos/laverdet/node-fibers/git/commits/56876a63738494db38726e43e2d4ec17b7bd521b,56876a63738494db38726e43e2d4ec17b7bd521b,fix for latest version of npm
laverdet,2012-02-25 03:35:21,https://api.github.com/repos/laverdet/node-fibers/git/commits/c27a7995ce3987be2e6318e2f35abc5a914fb57c,c27a7995ce3987be2e6318e2f35abc5a914fb57c,"`detach` method for futures

For those times when you want to run a future but only care about
exceptions."
laverdet,2012-02-08 22:57:08,https://api.github.com/repos/laverdet/node-fibers/git/commits/b028dbc44ca823cd90e938399125b62f1224423a,b028dbc44ca823cd90e938399125b62f1224423a,"Clean-up broken build

a7be6caf and dd1b25ee had some problems, breaking the build on OS X."
laverdet,2012-02-08 01:03:17,https://api.github.com/repos/laverdet/node-fibers/git/commits/42f7111ecb86587715bd8350cc6cc405fcdfb33a,42f7111ecb86587715bd8350cc6cc405fcdfb33a,"Add run-time information for fiber pool

There was a bug report a while back about fibers being slow but was
ultimately caused by the user accidentally keeping way too many fibers
around. It would have been easier to identify the problem with the
ability to inspect and alter node-fiber's underlying coroutine cache.
This adds two static properties to Fiber, `fibersCreated` and `poolSize`
which should give more information about what's happening under the
hood. Documentation for these to come."
jeremyevans,2012-02-07 22:48:29,https://api.github.com/repos/laverdet/node-fibers/git/commits/a7be6cafae637238de45b7cade79eab829277cac,a7be6cafae637238de45b7cade79eab829277cac,"Fix NODE_BITS determination using process.arch

process.arch is either ia32 or x64, so use that to determine
NODE_BITS.  The existing code is broken in that it will assume
32-bit on many 64-bit platforms (e.g. OpenBSD)."
jeremyevans,2012-02-07 22:46:46,https://api.github.com/repos/laverdet/node-fibers/git/commits/83a4b9bed08381cf7efed6246921aa1fa02d98e9,83a4b9bed08381cf7efed6246921aa1fa02d98e9,"Build correctly on OpenBSD

I tested this on OpenBSD-current on both amd64 and i386.  It's not
the only changes necessary to build though (you also have to use
gmake instead of make), but these shouldn't have a negative effect
on other OSes."
jeremyevans,2012-02-07 22:35:05,https://api.github.com/repos/laverdet/node-fibers/git/commits/dd1b25ee5bb54c118b213a8745969236b5f018b8,dd1b25ee5bb54c118b213a8745969236b5f018b8,"Use /bin/sh instead of /bin/bash to run the tests

There's no bash specific syntax, and some OSes don't ship with
bash (e.g. OpenBSD)."
laverdet,2012-02-03 08:10:21,https://api.github.com/repos/laverdet/node-fibers/git/commits/aa21a1fcd5865aa2b2ba4ce0b453c5a44cabbc07,aa21a1fcd5865aa2b2ba4ce0b453c5a44cabbc07,"Run on node 0.7.0, kind of

This fixes fibers to work on node 0.7.x. Using {thread:true} in
child_process.fork() after fibers has been required will result in a
crash."
laverdet,2012-02-03 07:15:40,https://api.github.com/repos/laverdet/node-fibers/git/commits/1ed9fb3f4f99d64925400254469273ce523d1e10,1ed9fb3f4f99d64925400254469273ce523d1e10,"Fix double-include problem on OS X

If you include the same extension with a different name (via a
case-insensitive filesystem) an extension will only be dlopen'd once,
but Init() will be called many times.

Fixes gh-50"
laverdet,2012-02-03 06:56:47,https://api.github.com/repos/laverdet/node-fibers/git/commits/5f7a0f5ce7f0b0f37b5f8163b561fbed7128b014,5f7a0f5ce7f0b0f37b5f8163b561fbed7128b014,"Add smart stack traces + easy future chaining

When throwing through a Future, this captures the stack trace for each
future so you can show a full stack trace while debugging.

Additionally this makes resolve() kind of magic, where if the first
parameter is a future, any errors will be forwarded to the future, and
the callback's signature will be changed to function(val){} from
function(err, val){}."
laverdet,2012-02-03 06:52:42,https://api.github.com/repos/laverdet/node-fibers/git/commits/c4dfaff9b81468a4d4eafb571104563eb5f98fe3,c4dfaff9b81468a4d4eafb571104563eb5f98fe3,"Fix segfault with inherited fibers

If you inherit a fiber in a prototype there may be a segfault because
the `started` accessor gets an invalid `this`. I can't figure out how to
fix this properly with the Holder() function like I can for methods.. so
instead of segfaulting I'm just going to return `undefined` here. You
shouldn't be using fibers in a prototype chain anyway.

Fixes gh-44 (maybe?)"
laverdet,2012-02-03 06:46:04,https://api.github.com/repos/laverdet/node-fibers/git/commits/71cc7b2029b3beea784aa8c7b050ae5f488044ce,71cc7b2029b3beea784aa8c7b050ae5f488044ce,"Build on arm

This maybe fixes gh-48. I don't have an arm machine to test on, but I
added the changes suggested in the ticket by @apsystems."
laverdet,2012-01-05 05:24:06,https://api.github.com/repos/laverdet/node-fibers/git/commits/fc60439b400c31b6003c6171bbba5c4957d87202,fc60439b400c31b6003c6171bbba5c4957d87202,Bump npm version -> 0.6.4
laverdet,2012-01-05 04:42:16,https://api.github.com/repos/laverdet/node-fibers/git/commits/0ad33c826e56adb05496993f9c4a667a4e7bcb4b,0ad33c826e56adb05496993f9c4a667a4e7bcb4b,"Use accessor for `current` instead

This is measurably faster in the case of accessing `current` once per
context swap."
laverdet,2012-01-05 02:30:58,https://api.github.com/repos/laverdet/node-fibers/git/commits/cadde662886a67fdcf08669a63a2bf4902b51cbb,cadde662886a67fdcf08669a63a2bf4902b51cbb,Fix unit test script from gobbling up errors
laverdet,2012-01-05 02:22:34,https://api.github.com/repos/laverdet/node-fibers/git/commits/b107657900d7434cf3aeff5d697dba3b7a63eaa7,b107657900d7434cf3aeff5d697dba3b7a63eaa7,Remove old node-fibers wrapper script
laverdet,2012-01-05 02:21:42,https://api.github.com/repos/laverdet/node-fibers/git/commits/b9ca14320f87b3c7603e9bb41ec9098cda2d72ae,b9ca14320f87b3c7603e9bb41ec9098cda2d72ae,"Documentation updates

- Remove old node 0.4.x information
- Link to wiki for projects using node-fibers"
laverdet,2011-11-06 21:35:57,https://api.github.com/repos/laverdet/node-fibers/git/commits/409eba7229a3021b181506306bfa30c7514597ac,409eba7229a3021b181506306bfa30c7514597ac,"Improve speed of Future.wait()

A lot of unnecessary and expensive JS stuff was happening here."
laverdet,2011-11-06 09:10:04,https://api.github.com/repos/laverdet/node-fibers/git/commits/0f2d4adf3909e8ffe147f23720b331b615c2f9bf,0f2d4adf3909e8ffe147f23720b331b615c2f9bf,"Add shortcut for Future.prototype.wait()

Bypassing Future.wait() and just returning if the future has already
been resolved saves a pretty good bit of time."
laverdet,2011-10-24 22:34:58,https://api.github.com/repos/laverdet/node-fibers/git/commits/41e3e31b0ff88e8576f0935fffb553442b1b662a,41e3e31b0ff88e8576f0935fffb553442b1b662a,"SunOS build support

Added the appropriate make configs for SunOS platforms, and fixed a tiny
issue with the usage of `file` that SunOS wasn't happy with.

Fixes gh-38"
laverdet,2011-10-08 07:54:55,https://api.github.com/repos/laverdet/node-fibers/git/commits/b719c73a638ba6854d0fcf02eb1c0fe88079e011,b719c73a638ba6854d0fcf02eb1c0fe88079e011,"Clean up messy makefiles

There was still a lot of build cruft sitting around from the node 0.4.x
branch which required the LD_PRELOAD hook. Since LD_PRELOAD is no longer
needed there's no reason to build coroutine.cc as a shared library.

Fixes gh-37"
akzhan,2011-09-30 11:20:55,https://api.github.com/repos/laverdet/node-fibers/git/commits/9e00a0643bf87c995f28170068ed045f4dbddd99,9e00a0643bf87c995f28170068ed045f4dbddd99,GitHub flavored Markdown syntax highlighter
laverdet,2011-10-08 07:27:12,https://api.github.com/repos/laverdet/node-fibers/git/commits/3b3bd73f9b4e654d6ff234f5d24114f97aa21236,3b3bd73f9b4e654d6ff234f5d24114f97aa21236,Fix more leaky errors in futures
laverdet,2011-08-28 00:30:45,https://api.github.com/repos/laverdet/node-fibers/git/commits/c877c39e201026a459d6292033a4741ff5429639,c877c39e201026a459d6292033a4741ff5429639,"Fix build for node 0.5.4

`node --vars` no longer does anything. It doesn't seem like this is
coming back as there's radio silence on joyent/node#1536 and 0.5.5 has
been tagged with the missing flag. This is just a build tweak to pull
installation information from the `process` object inside of node."
laverdet,2011-08-28 00:29:32,https://api.github.com/repos/laverdet/node-fibers/git/commits/bff943d2fdfc9fb7d240897a5f335396756d4ed1,bff943d2fdfc9fb7d240897a5f335396756d4ed1,"Fix `future` test require problem

If you're testing from a repo and not npm this one will fail because of
NODE_PATH nuttiness."
laverdet,2011-08-13 10:26:05,https://api.github.com/repos/laverdet/node-fibers/git/commits/a0f797c593f32e5f1da4a02737580ce3ba453c5a,a0f797c593f32e5f1da4a02737580ce3ba453c5a,"Documentation updates

Update README to mention differences between node-fibers 0.5 and 0.6.
Until node 0.5 becomes stable I'll have to maintain both versions.

Also remove bin/node-fibers from the npm install package (but leave the
empty wrapper for now)"
laverdet,2011-08-13 10:10:35,https://api.github.com/repos/laverdet/node-fibers/git/commits/8b1206781ff39b96433eb2c74274835f16a01622,8b1206781ff39b96433eb2c74274835f16a01622,"CORO_PTHREAD compatibility

If for some reason UCONTEXT and SJLJ don't work, you can change the
CORO_WHATEVER definition in src/platform.mk to CORO_PTHREAD and it will
use pthreads and pthread_cond_wait to simulate fibers which should be
pretty resilient against v8 changes. This isn't being used for now but
it only needed a few hooks to get this compatibility in."
laverdet,2011-08-13 10:00:48,https://api.github.com/repos/laverdet/node-fibers/git/commits/26b82d242dab45147fbf36f74c4f2ea75516a8ca,26b82d242dab45147fbf36f74c4f2ea75516a8ca,"Removal of node-fibers wrapper

The wrapper script is no longer needed because we're not depending on
any LD_PRELOAD magic anymore. A few build peculiarities had to be taken
care of, and the bootstrapping in coroutine.cc was changed slightly.
Also SJLJ in libcoro seems to hang on Linux for me, so I'm specifying
UCONTEXT (old method) for Linux builds now."
laverdet,2011-08-13 02:57:32,https://api.github.com/repos/laverdet/node-fibers/git/commits/df58a46540a26335254b65627ee1c4562f710aa3,df58a46540a26335254b65627ee1c4562f710aa3,"Compatibility with node-0.5.2

This includes a greatly simplified coroutine implementation with no
pthread hooks at all. This is compatible with the recent v8 changes
which node pulled in, but unfortunately not compatiable with older v8
versions."
laverdet,2011-08-11 19:25:37,https://api.github.com/repos/laverdet/node-fibers/git/commits/8bbec42d8036c7fa0adfaec897886936094ddbf6,8bbec42d8036c7fa0adfaec897886936094ddbf6,"Unit tests

Long overdue to have a process for these. I went through and found some
of the historic failures and made tests for them. This will make
testing more reliable when new Node versions come out."
laverdet,2011-08-09 10:42:56,https://api.github.com/repos/laverdet/node-fibers/git/commits/0ac93653472b7df531766fabc7bfe381ad3c7513,0ac93653472b7df531766fabc7bfe381ad3c7513,"Fix leaky error messages

Uncaught error should be toString'd first because RangeError doesn't
console.log() very well, and there are probably other example of this.
Also, make toString() on FiberFutures more useful."
laverdet,2011-08-09 10:35:50,https://api.github.com/repos/laverdet/node-fibers/git/commits/7743871994c9e6f5a855f7ec7bf9183eb7ad0fbd,7743871994c9e6f5a855f7ec7bf9183eb7ad0fbd,"Update package compatibility; broken on node-0.5.2

In v8:r7575 (tagged at 3.2.10) v8 changed their internal mechanism for
detecting context changes. Instead of using pthread_self() they are now
using pthread_getspecific(). Ultimately this makes it considerably
easier to build fibers into v8, but the current method is broken.

Node updated v8 from 3.1.8 to 3.4.8 in e5564a3f (tagged at 0.5.2). Thus,
this version of fibers only works on version of node <= 0.5.1."
laverdet,2011-08-06 07:53:29,https://api.github.com/repos/laverdet/node-fibers/git/commits/5a8946ae81f2066fdff85a72c77487b1d5a91bfe,5a8946ae81f2066fdff85a72c77487b1d5a91bfe,"Documentation updates

- Fibonacci generator example
- Various clean up"
laverdet,2011-08-06 07:51:24,https://api.github.com/repos/laverdet/node-fibers/git/commits/f4c11efaa6dd3b55249d7a3be1b5488d88a9bc41,f4c11efaa6dd3b55249d7a3be1b5488d88a9bc41,"Add Future.prototype.proxy

I end up using this pattern frequently when embedding callback-based
code inside a future-based sandwich."
laverdet,2011-07-27 01:41:44,https://api.github.com/repos/laverdet/node-fibers/git/commits/575213b2c79fb45149328632cd98d4a5fc444144,575213b2c79fb45149328632cd98d4a5fc444144,Bump npm version -> 0.5.0
laverdet,2011-07-27 01:40:43,https://api.github.com/repos/laverdet/node-fibers/git/commits/0685a72cd82bcc7bf6115b5ca9a1738714655cc3,0685a72cd82bcc7bf6115b5ca9a1738714655cc3,"Documentation updates

- Include documentation for Future
- Minor updates"
laverdet,2011-07-27 00:45:13,https://api.github.com/repos/laverdet/node-fibers/git/commits/95c1b61cfdc6dc65f173695dc00cffa116d6681c,95c1b61cfdc6dc65f173695dc00cffa116d6681c,"Basic fiber-aware futures library

This includes a packaged copy of the ""futures"" implementation I've been
using with fibers. The library is quite simple but makes working with
fibers much more manageable."
laverdet,2011-07-25 01:23:39,https://api.github.com/repos/laverdet/node-fibers/git/commits/f144c861d4fd0df350091f36cd09800adfd42b00,f144c861d4fd0df350091f36cd09800adfd42b00,"Use libcoro to get away from ucontext for Lion

ucontext in Lion is straight up buggy. These functions have been marked
as deprecated for a while so it's not totally surprising, but still
ridic. libcoro has implemented a very similar API using setjmp and
longjmp internally (among other configurable backends). Switching over
to setjmp\longjmp, along with the pthread* hook changes fixes fiber
support in Lion.

Closes gh-28"
laverdet,2011-07-24 20:22:57,https://api.github.com/repos/laverdet/node-fibers/git/commits/23127dcb3d354803412e2ac062d9f300fbca93c5,23127dcb3d354803412e2ac062d9f300fbca93c5,"More pthread hook fixing in Lion

The approach from the last commit wasn't totally good enough. It seems
v8 implements ""fast TLS"" in some cases which uses inline assembly to
get at thread locals and there's no way we can hook this. But this is
only being used for Isolates so they don't need to be fiber-specific.
To solve the problem when setting a local in FLS it also sets the local
in FLS. ** This means that in fibers GetExistingThreadLocal and
GetThreadLocal will have conflicting results ** but so far I haven't
had any problems."
laverdet,2011-07-22 07:39:17,https://api.github.com/repos/laverdet/node-fibers/git/commits/0b236135d6196f092bb144e6cc8d97b4695477e8,0b236135d6196f092bb144e6cc8d97b4695477e8,"Fix OS X Lion (almost)

dlsym() in Lion now calls pthread_key_create() which breaks an
assumption coroutine.cc had made, causing infinite recursion. This
modifies the primordial pthread hooks to work under the new
constraints. This fix isn't complete as there is still segfaulting I
haven't quite tracked down yet."
laverdet,2011-07-22 04:55:49,https://api.github.com/repos/laverdet/node-fibers/git/commits/2ac280b9891593710740eaf4acc6b9864575531e,2ac280b9891593710740eaf4acc6b9864575531e,"Fix building when node is a symlink

`file` will just say ""this is a symlink"" and then node may be compiled
with the wrong bits. There's a flag to force `file` to always follow
symlinks (the default is not consistent on different platforms)."
laverdet,2011-05-03 23:12:31,https://api.github.com/repos/laverdet/node-fibers/git/commits/0a2ecab7238b5eb35d849206780607bae56f5a94,0a2ecab7238b5eb35d849206780607bae56f5a94,Bump npm version -> 0.2.6
laverdet,2011-05-03 22:59:55,https://api.github.com/repos/laverdet/node-fibers/git/commits/aee7100aa1595bad20ee7c5cf578e1ba301ecad0,aee7100aa1595bad20ee7c5cf578e1ba301ecad0,"Fix `node-fibers debug`

node's debugger is built as a node process which spawns another node
process. There was an issue where the spawned node process (which runs
the client code) was not getting shimmed, because coroutine.cc attempts
to clean up its environment. So I moved the environment cleanup code
to fibers.js which actually simplified some of the logic there.

Closes gh-25"
ef4,2011-05-03 20:20:31,https://api.github.com/repos/laverdet/node-fibers/git/commits/94850f844d9112e72efc7959fff6324607e5f030,94850f844d9112e72efc7959fff6324607e5f030,"Make the startup script call exec instead of forking a child.

This change makes it easier to use node-fibers with node-supervisor,
or any other tool that monitors the health of the node process.  It
also results in a simpler process structure, and makes ""node-fibers""
closer to a true drop-in replacement for ""node""."
ybogdanov,2011-04-08 12:58:14,https://api.github.com/repos/laverdet/node-fibers/git/commits/3e397680e203dc47814092d4bca60ae2d69136ac,3e397680e203dc47814092d4bca60ae2d69136ac,fixed broken pipe error
laverdet,2011-05-03 22:02:29,https://api.github.com/repos/laverdet/node-fibers/git/commits/76047834cbfb180a0644ca9cbde33c76c596ba83,76047834cbfb180a0644ca9cbde33c76c596ba83,Remove disclaimer from LICENSE; no longer applies
laverdet,2011-04-23 16:19:45,https://api.github.com/repos/laverdet/node-fibers/git/commits/f23d4c961db4cedf2fb52d542c7c604871c75f03,f23d4c961db4cedf2fb52d542c7c604871c75f03,"Documentation updates

- Better installation details with npm>=1.0 instructions
- Note about fs.readFile + fs.writeFile `length` property

Closes gh-17
Closes gh-18"
laverdet,2011-04-12 23:35:09,https://api.github.com/repos/laverdet/node-fibers/git/commits/1837405cc08eeb5baaa17b76fd54ffd7b7b39879,1837405cc08eeb5baaa17b76fd54ffd7b7b39879,Bump npm version -> 0.2.5
laverdet,2011-04-03 10:07:03,https://api.github.com/repos/laverdet/node-fibers/git/commits/dfa0db3ebf5370213f8fdcccdd6bd7cc67137bbe,dfa0db3ebf5370213f8fdcccdd6bd7cc67137bbe,"Add fiber shim to spawned node processes

It wasn't possible to run node-fibers under a worker because workers are
implemented as separate processes. This shims child_process.spawn to
include the fiber shim if you're spawning another instance of node.

Closes gh-20"
laverdet,2011-03-28 13:31:30,https://api.github.com/repos/laverdet/node-fibers/git/commits/d5c58f992db945113ba4b2fab99de3b3ddabed3b,d5c58f992db945113ba4b2fab99de3b3ddabed3b,Bump npm version -> 0.2.4
laverdet,2011-03-28 13:23:21,https://api.github.com/repos/laverdet/node-fibers/git/commits/de187c915551154d2c821ff25a519066ee6e3ebd,de187c915551154d2c821ff25a519066ee6e3ebd,"Fix failure when multiple fibers finish together

If multiple fibers finished one after in an unexpected way there would
be a memory leak because `delete_me` would get overwritten. There was an
assertion in place to prevent this scenario, and a case was discovered
which triggers this condition. It was actually quite hard to hit because
the coroutine pool masks this issue very well. The issue was fixed by
deleting dead coroutines as soon as possible, instead of at the next
call to run()

Closes gh-16"
lm1,2011-03-21 17:30:23,https://api.github.com/repos/laverdet/node-fibers/git/commits/e3b801ad947e46f22f644ac2b22efc645008e83b,e3b801ad947e46f22f644ac2b22efc645008e83b,Added w/a for broken node 4.x
lm1,2011-03-16 17:35:28,https://api.github.com/repos/laverdet/node-fibers/git/commits/b65c1a1e4e942e625385c0779ecee8999373fe45,b65c1a1e4e942e625385c0779ecee8999373fe45,Node fixed streaming from stdin
laverdet,2011-03-22 15:46:11,https://api.github.com/repos/laverdet/node-fibers/git/commits/3913a7e31161028f7e588ebd45c6137b31a8e1e9,3913a7e31161028f7e588ebd45c6137b31a8e1e9,"Fix fibers in strict mode

`yield` is a reserved future keyword in Javascript. Thus in strict mode,
""yield()"" will fail to parse. This adds an alias for yield() on the
global Fiber object to give you a way to yield in strict mode. The
global yield() is left for brevity and compatibility."
laverdet,2011-03-11 14:41:03,https://api.github.com/repos/laverdet/node-fibers/git/commits/2b5a9ffdbbfb41dc7010461d20a8d8ae4ebc0e96,2b5a9ffdbbfb41dc7010461d20a8d8ae4ebc0e96,Bump npm version
laverdet,2011-03-09 16:14:12,https://api.github.com/repos/laverdet/node-fibers/git/commits/1b31427af325b0021df104109e3497b9cfe90dc8,1b31427af325b0021df104109e3497b9cfe90dc8,"Fix broken pipe errors

Node isn't really good at pipes."
laverdet,2011-03-09 16:00:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/2c887f76b0d7159225ae08dfbf7e6c021cc53618,2c887f76b0d7159225ae08dfbf7e6c021cc53618,"(maybe) Fix build for optimizated pthreads

glibc has a #define which defines an inline copy of pthread_equal. This
is causing build errors, so look for the define and avoid the
redefinition in this case.

Closes gh-13"
laverdet,2011-03-09 14:38:31,https://api.github.com/repos/laverdet/node-fibers/git/commits/70e1fdbfec083d9af807712f3ac0e0edb9bc17fa,70e1fdbfec083d9af807712f3ac0e0edb9bc17fa,"Fix `started` property

37d9003f377ec689dd520a44e5999b0b1d6cf365 broke the `started` property
because arguments.Holder() is apparently the wrong function to use for
accessors.

Closes gh-12"
laverdet,2011-03-03 05:14:36,https://api.github.com/repos/laverdet/node-fibers/git/commits/37d9003f377ec689dd520a44e5999b0b1d6cf365,37d9003f377ec689dd520a44e5999b0b1d6cf365,"Use v8 Signature for instance verification

I was using some SetHiddenProperty hack to prevent segfaults when you do
something like:

  Fiber(function(){}).run.call(null);

I figured v8 had something like this built in but didn't discover it
until now."
laverdet,2011-02-24 14:02:39,https://api.github.com/repos/laverdet/node-fibers/git/commits/35821e17339540a5444a50d3e7f97b79c21d80e5,35821e17339540a5444a50d3e7f97b79c21d80e5,"Improve discovery of coroutine shim

The fiber-shim script couldn't find coroutine.so on npm installations
with unexcepted configurations. This makes the script use
require.resolve() internally which should improve compatibility.

Closes gh-9"
laverdet,2011-02-24 13:40:15,https://api.github.com/repos/laverdet/node-fibers/git/commits/9a147811e0fdaaa23a9140b1d60dc983e52cde48,9a147811e0fdaaa23a9140b1d60dc983e52cde48,"Fix `process.title` on OS X

Setting `process.title` caused a segfault on OS X, due to some weird
craziness that happens in that function. Some OS X libraries call
pthread_self from threads coroutine.cc has no idea about, and then the
fun stops.

Closes gh-10"
laverdet,2011-02-23 14:21:18,https://api.github.com/repos/laverdet/node-fibers/git/commits/810b446870c9f5f1ddd935c61784fae60020514a,810b446870c9f5f1ddd935c61784fae60020514a,"Remove rogue GC debugging

I left some GC debugging code in here which impacted performance."
laverdet,2011-02-22 16:35:56,https://api.github.com/repos/laverdet/node-fibers/git/commits/045363ac64e66051780a19fbea5659be5b6519b4,045363ac64e66051780a19fbea5659be5b6519b4,"Bump npm version to 0.2.0

Also includes some readme changes"
laverdet,2011-02-22 16:07:27,https://api.github.com/repos/laverdet/node-fibers/git/commits/314926576426011610ccf8c61b692ee6bc91a377,314926576426011610ccf8c61b692ee6bc91a377,"Store Fiber.current in a property

By getting rid of the Fiber.current getter and just resetting it every
time it changes we can drastically speed up access to that property,
since it saves a trip out of the v8 engine. In most cases it seems like
people will be using Fiber.current, so this is a good change to make."
laverdet,2011-02-22 15:55:08,https://api.github.com/repos/laverdet/node-fibers/git/commits/af0c1a756f4a1a8226a5778ba024e0167765a1f2,af0c1a756f4a1a8226a5778ba024e0167765a1f2,"Misc refactor

This started off as a diff to keep a Locker active for each coroutine
even while not in use by v8, which would save the once-per-thread cost.
Turns out that cost isn't very high, and clearing out the threads is
better for garbage collection anyway. But the code cleaning up here was
pretty good so I'm putting this in."
laverdet,2011-02-22 14:03:10,https://api.github.com/repos/laverdet/node-fibers/git/commits/f0deebb78286e2816bcc58a11da04078ea5c46d2,f0deebb78286e2816bcc58a11da04078ea5c46d2,"Fix initialization on linux

There's no automatic calls to pthread_key_create in linux, so
Loader::bootstrap() wasn't getting called before static library
initialization."
laverdet,2011-02-20 22:47:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/88f20b58a0caafb4c5b3e5650fd59dc935633f3a,88f20b58a0caafb4c5b3e5650fd59dc935633f3a,"Refactor initialization logic

This simplifies initialization into a clear 2-phase dichotomy. The first
phase runs before malloc is ready, and the second phase is in regular
initialization. This incidentally plugs a hole where thread-specific
keys were getting lost early in initialization. I think there's still a
condition where you could lose data, but OS X and Linux aren't hitting
it so it's ok for now."
laverdet,2011-02-20 22:04:17,https://api.github.com/repos/laverdet/node-fibers/git/commits/0f040c4f265e715d76cee1972f435657b914c270,0f040c4f265e715d76cee1972f435657b914c270,"Remove Snapshot special casing

I didn't actually need this. I only noticed this behavior in isolated v8
tests while researching. But once node has already initialized the
first context the snapshot isn't used anymore after that."
laverdet,2011-02-20 17:11:58,https://api.github.com/repos/laverdet/node-fibers/git/commits/7a069723114c79e7b3677158189b11777810edf2,7a069723114c79e7b3677158189b11777810edf2,"Workaround v8 bugs with small stacks

v8 seems to have some issues when you try and use stack sizes smaller
than it's used to.

First is that if you attempt to set a stack limit that's smaller than
the snapshot size (if enabled) it will crash your shit in a very hard to
understand way. Unfortunately there's no way to actually know what that
magic size is in advance, so I'm just using a secret v8 internal
variable. This means that for most systems each coroutine will consume
~320kb of memory.

Second issue is there's a bug on 64 bit platforms when your Javascript
overflows the stack. It's probably pretty hard to hit this bug in
regular code but it's still quite bad. There's a workaround that I'm
using to get past that."
laverdet,2011-02-18 20:43:50,https://api.github.com/repos/laverdet/node-fibers/git/commits/cfcc64e3042e0ed9f40a4f7040668245bd041717,cfcc64e3042e0ed9f40a4f7040668245bd041717,"Fix that pesky stack bug

I was giving v8 the top of the stack instead of the bottom of the stack
so it couldn't figure out where to stop. This change fixes that. I
tested this using an infinite recussion function with really small
stacks (8kb) and large ones (512k) and I'm getting reasonable results.

Now the hard part is picking the right stack size. I'm going to go with
64k as it's the default stack node picked for libeio threads."
laverdet,2011-02-18 19:11:26,https://api.github.com/repos/laverdet/node-fibers/git/commits/fc88cfc72acdbb15edadc1e85f6b95e6dd73d3f4,fc88cfc72acdbb15edadc1e85f6b95e6dd73d3f4,Bump npm version
laverdet,2011-02-18 19:10:04,https://api.github.com/repos/laverdet/node-fibers/git/commits/18917ba574bc2d264003fc5c2f727bc7c1324321,18917ba574bc2d264003fc5c2f727bc7c1324321,"Simplify fiber-local storage

Put FLS in the Coroutine object instead of with the thread in a vector.
This technically means we are no longer calling destructors on
outstanding keys when the keys are deleted, but that was already the
case with multiple threads. The up side is that no one really deletes
TLS keys unless the program is terminating anyway."
laverdet,2011-02-18 18:44:41,https://api.github.com/repos/laverdet/node-fibers/git/commits/7a37bb3b56662ed20d3fa89719f3cf2633491fc4,7a37bb3b56662ed20d3fa89719f3cf2633491fc4,"Make context swap ownership more explicit

When swapping into a context we shouldn't remember the context we came
from at all. That is the client's (fiber.cc) job. By setting the
current_fiber this way we can be sure current_fiber is never something
dead."
laverdet,2011-02-18 16:52:44,https://api.github.com/repos/laverdet/node-fibers/git/commits/ab873954b0cf8a3b9c8a93d1f84989f489231edf,ab873954b0cf8a3b9c8a93d1f84989f489231edf,"Fix terrible bug in thread trampoline

New threads created while the coroutine library is loaded have a pretty
good chance of getting corrupted it seems. eio threading hasn't been
put through too much scrutiny unfortunately, so I didn't catch this
until now."
laverdet,2011-02-18 16:46:19,https://api.github.com/repos/laverdet/node-fibers/git/commits/ac01c73fd04984382b9f0d0af307daeed44096e8,ac01c73fd04984382b9f0d0af307daeed44096e8,"Spaces -> Tabs

I'm going through my biennial spaces and tabs identity crisis. Tabs,
you've hurt me in the past.. I just hope that I've learned enough so
that it won't happen again. I'm putting a lot of faith in you, please
don't leave me cold and alone."
laverdet,2011-02-17 16:36:28,https://api.github.com/repos/laverdet/node-fibers/git/commits/7b8e2ef63429be985920b8fba64d2f61cbc16557,7b8e2ef63429be985920b8fba64d2f61cbc16557,Bump npm version
laverdet,2011-02-17 16:29:44,https://api.github.com/repos/laverdet/node-fibers/git/commits/3c0f9f71b15b2b50bbefc54e35a7dfb5bfd75ce5,3c0f9f71b15b2b50bbefc54e35a7dfb5bfd75ce5,"Volatile members

This declares the member variables which getting mucked with from
different fibers as volatile. Hopefully this will take care of some of
the heisenbugs a few users have been reporting."
laverdet,2011-02-17 16:07:02,https://api.github.com/repos/laverdet/node-fibers/git/commits/19dfdca21af359bf29b5599b31a00fe5acc389ea,19dfdca21af359bf29b5599b31a00fe5acc389ea,"Hook pthreads earlier

It seems that if you have v8 compiled as a shared library instead of a
static library sometimes it can get initialized before coroutines.so, even
with LD_PRELOAD. I'm not really sure why this is the case, but this
means we need to run the hooks much earlier. So now everything that goes
through pthread_getspecific is fiber-local, instead of the way it used
to be where only keys created after coroutine.cc is initialized were
fiber-specific."
laverdet,2011-02-17 14:49:32,https://api.github.com/repos/laverdet/node-fibers/git/commits/ffa06fe3bb12c009a68afdf825802e9a1f90c92b,ffa06fe3bb12c009a68afdf825802e9a1f90c92b,"Improved check for invalid calls to run()

If you attempt to run() a fiber that's already running from inside
another fiber you would get a segfault. This is because even though the
fiber isn't running, it hasn't yielded either. Thus where to resume
execution is unclear. This should throw an exception.

Closes gh-8"
laverdet,2011-02-05 08:42:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/d87565154acb9dd73666169ab7f7a56200c0c247,d87565154acb9dd73666169ab7f7a56200c0c247,"Another bug with the loader script

Clowntown."
laverdet,2011-02-05 02:07:09,https://api.github.com/repos/laverdet/node-fibers/git/commits/fc684bdac62e3dafbf86c61b149219105314177b,fc684bdac62e3dafbf86c61b149219105314177b,"Fix syntax error in fibers.js

Whoops, how did this get in there? I swear I tested.."
laverdet,2011-02-03 14:11:53,https://api.github.com/repos/laverdet/node-fibers/git/commits/b11362bae3ecfa842b6cca0110d178d768e3f7f7,b11362bae3ecfa842b6cca0110d178d768e3f7f7,"Fix node v0.2.x compatibility

require.resolve is a new feature. v0.3.x is going stable soon, after
which support for v0.2.x will dwindle. This also fixes 32-bit building
on some platforms.

Closes gh-7"
laverdet,2011-01-25 23:58:22,https://api.github.com/repos/laverdet/node-fibers/git/commits/58e948c89617f69d5b41178dcb0078319e1503de,58e948c89617f69d5b41178dcb0078319e1503de,"Remove boost dependency

Sometimes I forget that non-developers don't have boost installed... so
to lower the friction of installation for the first time I'm removing
boost since it's used in one place only anyway."
laverdet,2011-01-24 16:11:08,https://api.github.com/repos/laverdet/node-fibers/git/commits/20531ad39a8ea4a33fa21a6ae9a7a87550271d23,20531ad39a8ea4a33fa21a6ae9a7a87550271d23,"Package tweaks

Detect on load when the fibers library is older than node, which
probably means your build is out date. Also fix it so that `npm rebuild
fibers` works."
laverdet,2011-01-24 14:17:44,https://api.github.com/repos/laverdet/node-fibers/git/commits/f8631b294086918ac1acdb8785012cb002c9a24d,f8631b294086918ac1acdb8785012cb002c9a24d,"Don't segfault while calling yield with no fiber

require('fibers');
yield();

Dereferencing uninitialized pointers is generally bad."
laverdet,2011-01-23 09:50:25,https://api.github.com/repos/laverdet/node-fibers/git/commits/a203d615c0436629911253bf91c2fcd771d37742,a203d615c0436629911253bf91c2fcd771d37742,"Fix behavior of child processes

Child processes were getting the LD_PRELOAD carried over from node which
is probably undesirable. Now when coroutine.so loads it nulls out those
environment variables. Since it's loaded already they don't need to be
around.

Also fix a related linking error."
laverdet,2011-01-23 08:15:46,https://api.github.com/repos/laverdet/node-fibers/git/commits/ab566f83c509b75607f05196360d261c4c984054,ab566f83c509b75607f05196360d261c4c984054,"npm package

This fixes the build and adds an npm package. I had to add
LD_LIBRARY_PATH to fiber-shim because it fails to load if coroutine.so
is not in your current working directory. This also uses a better
heuristic for determining if fiber-shim was used.

Also the library is now just called `fibers` when used in the context of
node."
laverdet,2011-01-23 08:34:09,https://api.github.com/repos/laverdet/node-fibers/git/commits/94e09b8a696e4b304d0f2b05fc3adfe1b4f00a87,94e09b8a696e4b304d0f2b05fc3adfe1b4f00a87,"New directory structure

Moving source files into `bin` and `src`. Also renaming ""node-fibers.cc""
to just ""fibers.cc"". This breaks the Makefile so don't try to make while
you have this revision checked out."
laverdet,2011-01-22 15:06:24,https://api.github.com/repos/laverdet/node-fibers/git/commits/82f79cea93c98d439b959e8778fe58c1e9310548,82f79cea93c98d439b959e8778fe58c1e9310548,"Prevent abort trap on exit

When running a debug version of v8 and your application terminates while
there are still yielding fibers there's an abort trap that gets caught
and a scary error message. v8 is trying to cleanup resources while
node-fibers.cc is getting unloaded and it's all-around bad news. This
quick and dirty hack prevents v8 from cleaning up, which actually
doesn't make a huge difference since the application is terminating
anyway."
laverdet,2011-01-22 14:33:59,https://api.github.com/repos/laverdet/node-fibers/git/commits/041247c86291e21f87c7422259a67cff9461a19e,041247c86291e21f87c7422259a67cff9461a19e,"Documentation and other inconsequential changes

This just adds some more examples to the readme, makes Loader a totally
self-contained class, and fixes the shebang in fiber-shim."
laverdet,2011-01-22 07:17:57,https://api.github.com/repos/laverdet/node-fibers/git/commits/e0a1df44cbacd822aee36314b1849349254ee7e7,e0a1df44cbacd822aee36314b1849349254ee7e7,"Fix reset() + unwinding double yield() segfault

Not only was reset() just pointing to run(), there were problems in
UnwindStack() which would make it seg fault in some cases. We were
reusing `yielded` to store the exception thrown for zombified fibers,
but that gets disposed aggressively (and rightfully so!) which leads to
us returning a disposed pointer in the case where you re-call yield()
from an unwinding fiber. And then in some cases v8 decided to
garbage collect it already and that's when the fun stops."
laverdet,2011-01-22 05:26:56,https://api.github.com/repos/laverdet/node-fibers/git/commits/a9e6241d29ba33c4d806b7cc2551cbc03cd9770a,a9e6241d29ba33c4d806b7cc2551cbc03cd9770a,"README update

Now with more markdown!"
laverdet,2011-01-20 15:45:56,https://api.github.com/repos/laverdet/node-fibers/git/commits/dfafe529c987a216c33e131706b79b87b785849a,dfafe529c987a216c33e131706b79b87b785849a,"Catch illegal `this` invocations

If you called any of the native methods with an unexpected `this`
argument it would just fail an assertion at best, or continue with some
other object at worst. This adds an instance check that you can't fake
in plain Javascript to avoid those issues. Now Unwrap will throw to the
calling code if there's a problem."
laverdet,2011-01-20 14:55:50,https://api.github.com/repos/laverdet/node-fibers/git/commits/d0cfd2dcf8d2ae60b3dac1350698478bb3854820,d0cfd2dcf8d2ae60b3dac1350698478bb3854820,"Better stack unwinding support

This adds two new methods reset(), and throwInto(). Both will throw
exceptions into a yielding fiber, however reset() will take care of
catching the thrown exception and gracefully returning. throwInto() will
likely throw your exception right back out.

reset() can be used in cases where infinite loop generators are used
extensively. Leaving destruction of those fibers to v8 is generally
inefficient. throwInto() could be used to notify a fiber that you don't
care about its task anymore.

This also defers unwinding of orphaned fibers until after garbage
collection has finished. This greatly increases the speed at which
orphaned fibers are collected."
laverdet,2011-01-19 16:52:29,https://api.github.com/repos/laverdet/node-fibers/git/commits/fbef75c58fdd2701e2fd79dbd2a334cdb95dd904,fbef75c58fdd2701e2fd79dbd2a334cdb95dd904,"Coroutine recycling

Instantiating new coroutines is quite expensive. Between allocating a
new stack, getcontext(), and makecontext() we spend a good amount of
time redoing work. The stack allocation cost is mitigated a little bit
with the pool allocator, however it can't beat full object recylcing.

This implements a pool of finished coroutines which are then reset and
then returned again via `create_fiber`."
laverdet,2011-01-18 16:57:46,https://api.github.com/repos/laverdet/node-fibers/git/commits/46480cc161caef363f598f660bd7d3d219bbe836,46480cc161caef363f598f660bd7d3d219bbe836,"pthread_key destructor support

The shim on top of pthreads did not correctly support destructors, so I
went ahead and added that, so that when fibers are deleted the memory
applications reserved for them is freed up correctly."
laverdet,2011-01-18 12:36:58,https://api.github.com/repos/laverdet/node-fibers/git/commits/911ecb22a962041292c62168060a536058f1a864,911ecb22a962041292c62168060a536058f1a864,"More memory correctness

I was using auto_ptr<char> with new[] which is incorrect. So I switched
to a vector to manage the stack, but it seems that performance took a
hit here. That should be solved with pooling though."
laverdet,2011-01-17 17:31:52,https://api.github.com/repos/laverdet/node-fibers/git/commits/6a77a260d62e07a2247c4c5e5da7bc687da1a4a6,6a77a260d62e07a2247c4c5e5da7bc687da1a4a6,"Greatly improved memory management

There were a lot of problems with garbage collection before,
particularly with infinite loop generators. The problem is that the
handle to the fiber was always held in a deadlock, since we pass it as
the `this` context to the Fiber entry. So now `yield()` is a global,
to avoid this problem.

Additionally we are now giving v8 proper hints for externally-allocated
memory, so it can handle garbage collection better. Also the coroutine
library can free finished coroutines correctly now.

Incidentally, node-fibers doesn't use any node-specific API's anymore;
if you change the node.h include to be v8.h, it will still compile and
run just fine."
laverdet,2011-01-17 17:28:15,https://api.github.com/repos/laverdet/node-fibers/git/commits/b194567f3cf5d4b7e5f69f8eda023e7ec41082b5,b194567f3cf5d4b7e5f69f8eda023e7ec41082b5,"Don't remake all the time

Had a rule which could never be verified which was causing
node-fibers.node to be rebuilt everytime."
laverdet,2011-01-16 10:13:12,https://api.github.com/repos/laverdet/node-fibers/git/commits/852b3c2b92efbb3ca72010f9fbaaa062820b2834,852b3c2b92efbb3ca72010f9fbaaa062820b2834,"Adding .gitignore

Cleaning up `git status`."
laverdet,2011-01-16 10:09:48,https://api.github.com/repos/laverdet/node-fibers/git/commits/32ab75f4b21cec0b6b883a800f0a8015ec1bf2bc,32ab75f4b21cec0b6b883a800f0a8015ec1bf2bc,"Linux, 32-bit, and node v0.2.x support

Added support for linux and 32-bit builds via makefile madness. I should
probably be using waf, but I don't really care about learning that, so
here we are. Also it was only a 2-line change to fix support for earlier
versions of node, so why not?"
laverdet,2011-01-16 05:09:21,https://api.github.com/repos/laverdet/node-fibers/git/commits/906b73a759fa95b17c8ed5524ec1a1f01b80e2b4,906b73a759fa95b17c8ed5524ec1a1f01b80e2b4,Initial commit
