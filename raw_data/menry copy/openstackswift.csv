swift,OpenStack Storage (Swift)
username,timestamp,url,sha,message
ajaeger,2019-09-13 07:38:22,https://api.github.com/repos/openstack/swift/git/commits/3960df983b68cd5baa84cac9a4d0b61f08737c09,3960df983b68cd5baa84cac9a4d0b61f08737c09,"Remove unneeded Zuul branch matcher

We have implicit branch matchers, so there's no need to add a check
for not-ocata etc, a job is only run for the branch it's on - like
master now.

Remove it to not confuse Zuul when multiple branches matches and the job
definition is different.

Change-Id: I6a346c9141aad1aa8a7393c899d5571057073e7a"
tipabu,2019-07-17 00:01:19,https://api.github.com/repos/openstack/swift/git/commits/1d7e1558b3b422073918b89df21f703215bd1e33,1d7e1558b3b422073918b89df21f703215bd1e33,"py3: (mostly) port probe tests

There's still one problem, though: since swiftclient on py3 doesn't
support non-ASCII characters in metadata names, none of the tests in
TestReconstructorRebuildUTF8 will pass.

Change-Id: I4ec879ade534e09c3a625414d8aa1f16fd600fa4"
tipabu,2019-08-31 04:40:03,https://api.github.com/repos/openstack/swift/git/commits/c71bb2506310438b011818a44449daea500863fd,c71bb2506310438b011818a44449daea500863fd,"diskfile: Add some argument validation

Either all or none of account, container, and object should be provided.
If we get some but not all, that's indicating some kind of a coding bug;
there's a chance it may be benign, but it seems safer to fail early and
loudly.

Change-Id: Ia9a0ac28bde4b5dcbf6e979c131e61297577c120
Related-Change: Ic2e29474505426dea77e178bf94d891f150d851b"
tipabu,2019-08-29 23:55:27,https://api.github.com/repos/openstack/swift/git/commits/3e4efb7aa4662a5f915caab5bef3de6dd17e3e19,3e4efb7aa4662a5f915caab5bef3de6dd17e3e19,"py3: Update Getting Started docs

Change-Id: I94050c40585b397a9f7bab1e48650b89f70ab24d"
tipabu,2019-08-15 21:33:06,https://api.github.com/repos/openstack/swift/git/commits/4d83b9b95e32038390dbdc66d93c36c929dbce2a,4d83b9b95e32038390dbdc66d93c36c929dbce2a,"tests/py3: Improve header casing

Previously, our unit tests with socket servers would let eventlet
capitalize headers on the way out, which

- isn't something we want to have eventlet do, because it
- breaks unicode-in-header-names on py3, so it
- is already disabled in swift.common.wsgi.run_server() for real servers.

Include a test to make sure we don't forget about it in the future.

Change-Id: I0156d0059092ed414b296c65fb70fc18533b074a"
onovy,2018-08-20 08:11:15,https://api.github.com/repos/openstack/swift/git/commits/a32fb30c16062ea64488e918077d635645e33e47,a32fb30c16062ea64488e918077d635645e33e47,"Use SOURCE_DATE_EPOCH in docs to make build reproducible

Set copyright year and html_last_updated_fmt to SOURCE_DATE_EPOCH if
it's set. See https://reproducible-builds.org/specs/source-date-epoch/

This patch make build reproducible, see https://reproducible-builds.org/

Change-Id: I730a8265ca2c70c639ef77a613908e84eb738b70"
tipabu,2019-08-17 03:37:10,https://api.github.com/repos/openstack/swift/git/commits/2545372055922abd681ef665f9040590d2f5806c,2545372055922abd681ef665f9040590d2f5806c,"py3: Switch swift-dsvm-functional-py3 to run tests under py3

Now that all of the func tests are ported, we may as well run all-py3.

Change-Id: Ib9f75ca9efb46dc4c7730ad2718228ec7777c924"
tipabu,2019-08-21 05:20:44,https://api.github.com/repos/openstack/swift/git/commits/ff5ea003b3a1b37d8417aa17d3521237768dfe62,ff5ea003b3a1b37d8417aa17d3521237768dfe62,"ec: log durability of frags that fail to reconstruct

Whether the frag is durable or non-durable greatly affects how much I
care whether I can reconstruct it.

Change-Id: Ie6f46267d4bb567ecc0cc195d1fd7ce55c8cb325"
thiagodasilva,2019-08-19 20:31:41,https://api.github.com/repos/openstack/swift/git/commits/94366fd00ec1e71b4f67ef8595b31162c6945c28,94366fd00ec1e71b4f67ef8595b31162c6945c28,"Add Dockerfile to build a py3 swift docker image

This patch contains only a new Dockerfile and few changes to
be able to build both py2 and py3 images.

Next patch should contain changes to add the gate jobs to build
a py3 docker image

Change-Id: Ifdebde9597a787abcd553756e22261e2faaeedfc"
clayg,2019-08-19 16:06:20,https://api.github.com/repos/openstack/swift/git/commits/e92191306587335ad0aab3a3b9dffef21765e17b,e92191306587335ad0aab3a3b9dffef21765e17b,"Rename symlink method

Related-Change-Id: I179ea6180d31146bb947061c69b1807c59529ac8
Change-Id: I770ea1be25e339e5ce4341b532a1fff9e1373152"
clayg,2019-08-19 15:56:50,https://api.github.com/repos/openstack/swift/git/commits/82e427a8b14e3efee2da99d622fad04ed6461a50,82e427a8b14e3efee2da99d622fad04ed6461a50,"Fix symlink docstring

Related-Change-Id: I179ea6180d31146bb947061c69b1807c59529ac8
Change-Id: I41cbf445057be09a102ef5515a9ce6a4f14e7458"
tipabu,2019-08-07 23:16:57,https://api.github.com/repos/openstack/swift/git/commits/74db3670607d952e597011eb07676aedff521b41,74db3670607d952e597011eb07676aedff521b41,"py3: Finish porting func tests

We were (indirectly) importing swiftclient (and therefore requests and
urllib3) before doing our eventlet monkey-patching. This would lead
boto3 (which digs an SSLContext out of urllib3) to trip RecursionErrors
on py3 similar to

   >>> from ssl import SSLContext, PROTOCOL_SSLv23
   >>> import eventlet
   >>> eventlet.monkey_patch(socket=True)
   >>> SSLContext(PROTOCOL_SSLv23).options |= 0
   Traceback (most recent call last):
     File ""<stdin>"", line 1, in <module>
     File ""/usr/lib/python3.6/ssl.py"", line 465, in options
       super(SSLContext, SSLContext).options.__set__(self, value)
     File ""/usr/lib/python3.6/ssl.py"", line 465, in options
       super(SSLContext, SSLContext).options.__set__(self, value)
     File ""/usr/lib/python3.6/ssl.py"", line 465, in options
       super(SSLContext, SSLContext).options.__set__(self, value)
     [Previous line repeated 330 more times]
   RecursionError: maximum recursion depth exceeded while calling a Python object

Change-Id: I4bb59edd87336597791416c4f2a096efe0e72fe3"
tipabu,2019-06-05 19:02:07,https://api.github.com/repos/openstack/swift/git/commits/a21c0be70ca6c200076d274c54f6906e1cf92a61,a21c0be70ca6c200076d274c54f6906e1cf92a61,"dlo: Respond 200 on multi-range GETs

We already had a unit test for this, but it was inadvertently retesting
what test_get_suffix_range_many_segments tested.

Change-Id: I43eee7029ca884268c3f2ad74300b94b299fd8d2
Closes-Bug: #1831790"
tipabu,2019-03-21 22:13:36,https://api.github.com/repos/openstack/swift/git/commits/7f42309a335370f567aefdf0236cfe01cbbfca5d,7f42309a335370f567aefdf0236cfe01cbbfca5d,"py3: Cover account/container func tests

Change-Id: I9a754f1eb06debbe16800a05fc8e969af2f89043"
thiagodasilva,2019-08-16 16:30:13,https://api.github.com/repos/openstack/swift/git/commits/3e7752d8c80473e93d537c7ba30419ff9313ebb8,3e7752d8c80473e93d537c7ba30419ff9313ebb8,"Update docker image to latest Alpine 3.10.1

Change-Id: I888c51a965ee27175584f575560a1d50f4534663"
tipabu,2019-01-24 00:23:01,https://api.github.com/repos/openstack/swift/git/commits/1abc9c4f9d4c2f9d8ac996cca489b0ec65660a05,1abc9c4f9d4c2f9d8ac996cca489b0ec65660a05,"Allow ""static symlinks""

... by embedding something like `If-Match: <etag>` semantics in the
symlink.

When creating a symlink, users may now specify an optional
X-Symlink-Target-Etag header. If present, the etag of the final object
returned to the client will be checked; if it does not match the
X-Symlink-Target-Etag header, a 409 Conflict error will be returned to
the client.

Note that, unlike ""dynamic symlink"" behavior, the target object must
exist with the matching Etag for the ""static symlink"" to be created.

Since we're validating the Etag anyway, we also set the content-type of
the symlink to match if the client didn't otherwise specifiy and send
the etag & content-length along to the container listing as well.

Bonus goodness:

- Tighten assertions on Content-Location
- Get rid of swift.source-sniffing by making versioned_writes
  symlink-aware ('cause I'm going to want to make it symlink-aware
  later anyway)
- Allow middlewares left of symlink to set their own
  Container-Update-Override-Etag when creating a symlink
- Set dynamic symlink content type if client doesn't supply something

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: I179ea6180d31146bb947061c69b1807c59529ac8"
asettle,2019-08-16 11:44:13,https://api.github.com/repos/openstack/swift/git/commits/0c16fd9536ac37c838c4229800abdb684a7bd4d4,0c16fd9536ac37c838c4229800abdb684a7bd4d4,"Fixing broken links

Small changes, but helpful, mostly.

Backport: stein rocky

Change-Id: Ic4b6524d7804d2f74b2973b6acdb9e2679209cd4"
tipabu,2019-07-16 23:24:14,https://api.github.com/repos/openstack/swift/git/commits/3750285bc863f8b6b56ba9526b028ee9cddcf04b,3750285bc863f8b6b56ba9526b028ee9cddcf04b,"py3: fix up listings on sharded containers

We were playing a little fast & loose with types before; as a result,
marker/end_marker weren't quite working right. In particular, we were
checking whether a WSGI string was contained in a shard range, while
ShardRange assumes all comparisons are against native strings.

Now, get everything to native strings before making comparisons, and
get them back to wsgi when we shove them in the params dict.

Change-Id: Iddf9e089ef95dc709ab76dc58952a776246991fd"
tipabu,2019-07-16 01:07:01,https://api.github.com/repos/openstack/swift/git/commits/27e7e80e922a51f3f4d21aa4d58f84fa9b5c6621,27e7e80e922a51f3f4d21aa4d58f84fa9b5c6621,"py3: fix up swift-orphans

Change-Id: Id1280abd92e8bb02fcaa4701a0e9d211d9d6e33e"
thiagodasilva,2019-08-14 16:00:50,https://api.github.com/repos/openstack/swift/git/commits/9e9c363361bb3d8aaef977efaabea9f0ba52dbe3,9e9c363361bb3d8aaef977efaabea9f0ba52dbe3,"fix ec overview doc formatting

Change-Id: I3fee824e4fdc21aac21a6bb97f24a82d8ea3577d"
thiagodasilva,2019-08-14 14:13:25,https://api.github.com/repos/openstack/swift/git/commits/47c7058259b9f69b51d92ee806988db6ca37f28c,47c7058259b9f69b51d92ee806988db6ca37f28c,"Add params to get_*_metadata internal client methods

Change-Id: I1d2d063904447a444ecb506b93ee698a5181b6b9"
smerritt,2018-02-01 20:03:49,https://api.github.com/repos/openstack/swift/git/commits/cb308119160d5af7db9b65a7ab2225bb07edb614,cb308119160d5af7db9b65a7ab2225bb07edb614,"Allow bulk delete of big SLO manifests

If you set SLO's max_manifest_segments to a value larger than 10000,
then clients are able to create manifests with that many segments, but
unable to use ""?multipart-manifest=delete"" to delete them.

This is because the SLO middleware has its very own bulk-deleter that
it uses to handle such requests, and that bulk-deleter only allows
10000 deletions per request by default. This commit removes the
limitation so that any SLO manifest can be deleted along with its
segments.

I considered setting max-deletes-per-request to be equal to SLO's
max_manifest_segments, but that only works if max_manifest_segments
has never been decreased.

Note that this commit does not increase max_manifest_segments. Clients
cannot make SLOs any bigger than they could before. Also note that
this commit does not affect user-initiated bulk deletes, i.e. POST
requests with ""?bulk-delete=true"" set. Those requests are still
limited in their size, and those limits are not changed.

Change-Id: I6a35937e8418f4f2b8e29825fc9c40415e34742f
Closes-Bug: 1746685"
tipabu,2019-08-09 22:59:59,https://api.github.com/repos/openstack/swift/git/commits/227fe30251984feb45b761390a4ec1d8f5cc894d,227fe30251984feb45b761390a4ec1d8f5cc894d,"py3: port test/functional/test_versioned_writes.py

Change-Id: I8c2517599a6d1cdf68050dc7acb039f09875fd53"
tipabu,2019-08-06 00:33:23,https://api.github.com/repos/openstack/swift/git/commits/f05119c16fb33140a655b30e76734f481a479412,f05119c16fb33140a655b30e76734f481a479412,"py3: mostly port s3 func tests

test_bucket.py is proving somewhat problematic.

Change-Id: I5b337ef66a23fc989762801dd6a5ba1ed903f57b"
zaitcev,2019-08-09 20:06:47,https://api.github.com/repos/openstack/swift/git/commits/c90365f98d64a38aa6a76a7efcd803470be384bd,c90365f98d64a38aa6a76a7efcd803470be384bd,"Allow Connection: value to be case-insensitive

Proxies and LBs parse the Connection: header and re-insert
the value with random casing. This occurs when we run functional
tests against realistic clusters.

Change-Id: Icb0d3e3708949127e9750f2022de8c74ce51ebe9"
clayg,2019-08-08 19:16:00,https://api.github.com/repos/openstack/swift/git/commits/996aa4547f5248c49e47478f186f3104e1c6c5da,996aa4547f5248c49e47478f186f3104e1c6c5da,"Consolidate Container-Update-Override headers

Related-Change-Id: I179ea6180d31146bb947061c69b1807c59529ac8
Related-Change-Id: I056edc68aee8c0db2a2c4a5b9e3d242a895975b3

Change-Id: I84bd29ae48ff1b0826794a8fdf9aa87670ad4aa4"
tipabu,2019-08-08 21:05:06,https://api.github.com/repos/openstack/swift/git/commits/3ee6de408e8507c8501a9abb17fbf9e08fd65c17,3ee6de408e8507c8501a9abb17fbf9e08fd65c17,"slo: Add X-Manifest-Etag to responses

This matches the ETag of the underlying swift object, as opposed to the
MD5-of-MD5s that is the large object's ETag.

Change-Id: Ifab726f63739f62aeef495c970939410341694d1"
tipabu,2019-08-08 15:54:49,https://api.github.com/repos/openstack/swift/git/commits/e095bf3dabad005d48985f06f6bfe14683621a59,e095bf3dabad005d48985f06f6bfe14683621a59,"Bring our IPv6 setup more in line with devstack's

Change-Id: I4a32239eec37eed4085fbc2a283def4b69c816ac"
tipabu,2019-04-17 17:15:26,https://api.github.com/repos/openstack/swift/git/commits/7c74dbd255eac241e70745f269ba9383c124821a,7c74dbd255eac241e70745f269ba9383c124821a,"py3: port dlo func tests

Drive-by: fix an issue where tf.config wasn't initialized when we decide
whether to skip test_dlo_referer_on_segment_container.

Change-Id: Iad8b3ab40dccb23847cde5c09f55627da0963fe0"
tipabu,2019-08-06 18:11:52,https://api.github.com/repos/openstack/swift/git/commits/7bb7da6d2dc4267f8279170b6d326e81777d3c06,7bb7da6d2dc4267f8279170b6d326e81777d3c06,"s3api: Translate 503 to S3-style 503s

...instead of logging tracebacks about unexpected status codes.

Change-Id: Iadb0a40092b8347eb5c04785cc14d1324cc9396f"
tipabu,2019-08-06 17:00:41,https://api.github.com/repos/openstack/swift/git/commits/2c727f65ffae3d925fb825e20616615ab319d1d2,2c727f65ffae3d925fb825e20616615ab319d1d2,"py3: Add swift-tox-func-encryption-py37 gate job

Change-Id: Ia9ae0fc226dfc9b40157faebac100c10a9180c62"
tipabu,2019-08-06 17:14:47,https://api.github.com/repos/openstack/swift/git/commits/a10d936ee57c5eb331b56965fa79779e77978c84,a10d936ee57c5eb331b56965fa79779e77978c84,"Use `is` to compare against sentinel object

...since `==` can have repercussions by way of __eq__()

Change-Id: I668b11251a3d1192d42dfe914010d089df413da7"
tipabu,2019-08-05 21:47:51,https://api.github.com/repos/openstack/swift/git/commits/2e4c8a924e2c11e0cbabfd1353de49602d1aaef1,2e4c8a924e2c11e0cbabfd1353de49602d1aaef1,"py3: port RBAC func tests

Yes, it really is just the import.

Change-Id: Id7e2891b6600af102176eaa2e87f81b528adde8d"
clayg,2019-08-05 20:40:58,https://api.github.com/repos/openstack/swift/git/commits/ab192415347223cfb49af7a62e124ef6f35779a6,ab192415347223cfb49af7a62e124ef6f35779a6,"Increase node_timeout for real sever unittests

I saw an encryption test fail with 10s node timeout when the py36
unittests ran in the gate.  I believe there is an outsized potential for
a beneficial increase in test reliability when run in the gate compared
to relatively small chance of any negative side-effect in test failure
responsiveness.

Change-Id: Ia31912828d416d84c39782222e4636a97a8bfe44"
clayg,2018-12-07 00:36:16,https://api.github.com/repos/openstack/swift/git/commits/25aeb0ca4905756501e62210a5bc2699c731a1f4,25aeb0ca4905756501e62210a5bc2699c731a1f4,"Make GreenAsyncPile not hang

It's probably weird that StreamingPile has this interfaces that swallows
exceptions, but this seems better than hanging.

Change-Id: I8fe45c0f0d291efc84f3edf5d6b7cd116b5c7835"
tipabu,2019-07-22 19:38:30,https://api.github.com/repos/openstack/swift/git/commits/3189410f9d5be3a845dbd47fdd77584f4b76da8a,3189410f9d5be3a845dbd47fdd77584f4b76da8a,"Ignore 404s from handoffs for objects when calculating quorum

We previously realized we needed to do that for accounts and containers
where the consequences of treating the 404 as authoritative were more
obvious: we'd cache the non-existence which prevented writes until it
fell out of cache.

The same basic logic applies for objects, though: if we see

    (Timeout, Timeout, Timeout, 404, 404, 404)

on a triple-replica policy, we don't really have any reason to think
that a 404 is appropriate. In fact, it seems reasonably likely that
there's a thundering-herd problem where there are too many concurrent
requests for data that *definitely is there*. By responding with a 503,
we apply some back-pressure to clients, who hopefully have some
exponential backoff in their retries.

The situation gets a bit more complicated with erasure-coded data, but
the same basic principle applies. We're just more likely to have
confirmation that there *is* data out there, we just can't reconstruct
it (right now).

Note that we *still want to check* those handoffs, of course. Our
fail-in-place strategy has us replicate (and, more recently,
reconstruct) to handoffs to maintain durability; it'd be silly *not* to
look.

UpgradeImpact:
--------------
Be aware that this may cause an increase in 503 Service Unavailable
responses served by proxy-servers. However, this should more accurately
reflect the state of the system.

Co-Authored-By: Thiago da Silva <thiagodasilva@gmail.com>
Change-Id: Ia832e9bab13167948f01bc50aa8a61974ce189fb
Closes-Bug: #1837819
Related-Bug: #1833612
Related-Change: I53ed04b5de20c261ddd79c98c629580472e09961
Related-Change: Ief44ed39d97f65e4270bf73051da9a2dd0ddbaec"
clayg,2019-08-01 14:31:56,https://api.github.com/repos/openstack/swift/git/commits/7678e94a2c3907df13d271b0d4c82054bbb0bf8a,7678e94a2c3907df13d271b0d4c82054bbb0bf8a,"Negative test for non-empty chunked put symlink

Change-Id: I0c3a235b8905e02d2e202215f7f0b43db295b79b
Related-Change-Id: I66f2f16d7cf0b9cb0888e3b9b1a17b9112233d21"
tipabu,2019-06-17 22:30:40,https://api.github.com/repos/openstack/swift/git/commits/c19d09f60b2d501698b741a123cc6b8203969016,c19d09f60b2d501698b741a123cc6b8203969016,"Give ECAppIter greenthreads a chance to wrap up

Otherwise, we can hit a ""generator already executing"" error in
test/functional/test_slo.py:TestSlo.test_slo_multi_ranged_get

Also, set a *slightly* newer lower-bound for greenlet (from 2011 instead
of 2010) so the sleep() doesn't cause us to lose exception state.

Change-Id: Id458fc0a43fd71aab9f6edbacc1f0b370c9f7537"
tipabu,2019-07-27 04:29:42,https://api.github.com/repos/openstack/swift/git/commits/a1455b3a3566a1a0d5680e540d19ba6dc417b1db,a1455b3a3566a1a0d5680e540d19ba6dc417b1db,"symlink: Allow symlinks to be created via chunk-encoded PUTs

... provided they're still zero bytes.

Change-Id: I66f2f16d7cf0b9cb0888e3b9b1a17b9112233d21"
tipabu,2019-07-26 22:59:35,https://api.github.com/repos/openstack/swift/git/commits/8635e8cc867a5f44f6269b1f85b2a3d360a35561,8635e8cc867a5f44f6269b1f85b2a3d360a35561,"Make backport releases conform to existing CHANGELOG formatting

Change-Id: Ib121d6c52601488647fd16dfd4f49bb4492c7a2f"
ghanshyammann,2019-07-18 19:11:39,https://api.github.com/repos/openstack/swift/git/commits/02cfb6c02779d9bfe27b05cea0fd6dee7e9d9351,02cfb6c02779d9bfe27b05cea0fd6dee7e9d9351,"Add integrated gate tempest and grenade job

Swift gate does not run integrated-gate jobs which are
tempest-full and grenade-py3 job. Tempest-full job run
all services tests. But all services tests are not needed
to run on swift gate because it does not depends on all services.

Tempest has prepared the new jobs for swift gate which will run
only Swift, Cinder and Glance related tests.

New template 'integrated-gate-object-storage'(Depends-On) includes
the tempest-integrated-object-storage and grenade-py3 jobs

This commit adds the new integrated-gate template in swift gate.

Depends-On: https://review.opendev.org/#/c/670353/
Change-Id: Ia0543dca729c3a2aa67ce9f560c1ce5976c00abf"
ajaeger,2019-07-26 09:49:15,https://api.github.com/repos/openstack/swift/git/commits/097a62cad35b90966b6d2e1e40714eb67f5bdc5a,097a62cad35b90966b6d2e1e40714eb67f5bdc5a,"Fix broken API-ref link

The URL is object-store, not object-storage. Fix one occurence.

Change-Id: I08ed3b19cbe0024fd67a6fb7a7a6db0d9084976b"
tipabu,2019-07-24 23:59:08,https://api.github.com/repos/openstack/swift/git/commits/71f83963c2b701bdc6ec67e97429dac661e8ffc6,71f83963c2b701bdc6ec67e97429dac661e8ffc6,"py3: fix non-ascii metadata handling in account-server

Previously, we were storing the WSGI-style UTF-8-bytes-decoded-as-Latin-1
strings in the JSON field, and sending them back to eventlet directly.
If running in a mixed py2/py3 cluster, replication would eventually get
that back to the py2 server, and worse, the native-string version would
get back to the py3 server! Then on GET or HEAD, eventlet would barf
if any characters were outside the Latin-1 range.

Closes-Bug: #1837805
Change-Id: I31d942e72fd7bfbb1db4dbb1dd522dff69969e5d"
tipabu,2019-07-25 17:56:53,https://api.github.com/repos/openstack/swift/git/commits/60c27d3aef6e7412b41e04445d72aa62ea9883d3,60c27d3aef6e7412b41e04445d72aa62ea9883d3,"py3: Fix title-casing in HeaderKeyDict

Change-Id: I1152c47c52f6482ec877142c96845b00bf6dcc5b
Related-Change: I130ba5014b7eff458d87ab29eb42fe45607c9a12"
ajaeger,2019-07-22 16:53:40,https://api.github.com/repos/openstack/swift/git/commits/73ec8f15df9a1f112f981f15a3ddc323eb1fb723,73ec8f15df9a1f112f981f15a3ddc323eb1fb723,"Update api-ref location

The api documentation is now published on docs.openstack.org instead
of developer.openstack.org. Update all links that are changed to the
new location.

Note that the Swift API lives at /object-store and not /object-storage.

Note that redirects will be set up as well but let's point now to the
new location.

For details, see:
http://lists.openstack.org/pipermail/openstack-discuss/2019-July/007828.html

Change-Id: Ie38357e4c278335c35d186708573bb6bdabaa012"
tipabu,2019-05-16 21:37:42,https://api.github.com/repos/openstack/swift/git/commits/a48104c5454a216464313cd3473297c113069450,a48104c5454a216464313cd3473297c113069450,"py3: port SLO func tests

Drive-by: remove some py2/py3 code branches where encoding/decoding
should always succeed.

Change-Id: Iabfa157f2b20e6fd650a441e9c0f6163478ce147"
tipabu,2019-07-20 04:24:47,https://api.github.com/repos/openstack/swift/git/commits/ef5a37c2bf5a32b0fa6404974aa76332a88c0841,ef5a37c2bf5a32b0fa6404974aa76332a88c0841,"slo: Better handle non-manifest responses when refetching manifest

Previously, we never checked whether the response we get when refetching
is even successful, much less whether it's still coming from an SLO.

Now, if the refetched data is newer, act on it. If it's older, 503.

Closes-Bug: #1837270
Change-Id: I106b94c77da220c762869aa800c31b87c3dffeeb"
tipabu,2019-03-22 21:48:10,https://api.github.com/repos/openstack/swift/git/commits/2926fc96a36a573380eca18d60440a2337442015,2926fc96a36a573380eca18d60440a2337442015,"py3: Bring functional/test_object.py under test; add func-ec-py37 job

Change-Id: I2929ce1f8e08ae5b4059605d09189c8521852423"
tipabu,2019-07-17 19:10:05,https://api.github.com/repos/openstack/swift/git/commits/a65350e887a53460ac18cc6c1c4fbb445aeee7e7,a65350e887a53460ac18cc6c1c4fbb445aeee7e7,"Make rolling-upgrade job voting again

Now that os-testr has had a release, it passes again.

Change-Id: Ieed88646d97ab2a1c7323a147ee97dae6fc86a0f"
tipabu,2019-07-16 23:59:38,https://api.github.com/repos/openstack/swift/git/commits/424a2603d8d4a454f269c9df5b4c7dc0d389b9da,424a2603d8d4a454f269c9df5b4c7dc0d389b9da,"Fix up errno checking

Change-Id: I196b4e886942eccd2cb3aff3819da1558ddb19d4"
tipabu,2019-07-16 01:07:51,https://api.github.com/repos/openstack/swift/git/commits/ebf561026f400a8e1c5e3984cb3034fc095fffa6,ebf561026f400a8e1c5e3984cb3034fc095fffa6,"py3: fix object-replicator rsync output parsing

Change-Id: I07707e99e4232b2cbe14986b958ce43c003a1ab6"
tipabu,2019-06-28 21:58:42,https://api.github.com/repos/openstack/swift/git/commits/a48ac28efe5c133b439ab0e525d315271bf370da,a48ac28efe5c133b439ab0e525d315271bf370da,"Authors/changelog for 2.22.0

Change-Id: I09c099339d02943baa0944b5a208263536d1a547"
tipabu,2019-04-25 19:57:16,https://api.github.com/repos/openstack/swift/git/commits/bc5f4c061122aee5965cfb055beb3cb079073536,bc5f4c061122aee5965cfb055beb3cb079073536,"sharding: better handle get_shard_ranges failures

The contract for ReplConnection.replicate() is that if we can get a
response, we return it, and if we can't (because of a timeout, or a
socket error, or some other http_client error like BadStatusLine), we
return None to indicate the error.

Previously, _fetch_and_merge_shard_ranges() always assumed the
response would have a `status` attribute and raise an AttributeError
when response was None. Now it will treat that case like other
get_shard_range failures.

Change-Id: I023b8a46c06e9a2755b5aa890a7992ef9633cba9"
tipabu,2019-06-24 19:25:33,https://api.github.com/repos/openstack/swift/git/commits/a1af3811a79963e2e5d1db3e5588cbc9748f9d57,a1af3811a79963e2e5d1db3e5588cbc9748f9d57,"sharding: Cache shard ranges for object writes

Previously, we issued a GET to the root container for every object PUT,
POST, and DELETE. This puts load on the container server, potentially
leading to timeouts, error limiting, and erroneous 404s (!).

Now, cache the complete set of 'updating' shards, and find the shard for
this particular update in the proxy. Add a new config option,
recheck_updating_shard_ranges, to control the cache time; it defaults to
one hour. Set to 0 to fall back to previous behavior.

Note that we should be able to tolerate stale shard data just fine; we
already have to worry about async pendings that got written down with
one shard but may not get processed until that shard has itself sharded
or shrunk into another shard.

Also note that memcache has a default value limit of 1MiB, which may be
exceeded if a container has thousands of shards. In that case, set()
will act like a delete(), causing increased memcache churn but otherwise
preserving existing behavior. In the future, we may want to add support
for gzipping the cached shard ranges as they should compress well.

Change-Id: Ic7a732146ea19a47669114ad5dbee0bacbe66919
Closes-Bug: 1781291"
tipabu,2019-07-11 06:48:39,https://api.github.com/repos/openstack/swift/git/commits/f4bb1bea28640dc603da891559387d6b15f1f2da,f4bb1bea28640dc603da891559387d6b15f1f2da,"reconciler: Enqueue right work for shard containers

This fixes newly-enqueued work going forward, but doesn't offer anything
to try to parse existing bad work items or even to kick shards so they
reset their reconciler high-water marks.

Change-Id: I79d20209cea70a6447c4e94941e5e854889cbec5
Closes-Bug: 1836082"
tipabu,2019-07-10 22:37:44,https://api.github.com/repos/openstack/swift/git/commits/c1d170225281a39973dda1b8e46f5b3b5c943d1a,c1d170225281a39973dda1b8e46f5b3b5c943d1a,"functests: Make test_PUT_metadata less flakey

Change-Id: I846e746c2fe7591a3ab502428f587e3cbe753225"
tipabu,2019-03-26 20:02:24,https://api.github.com/repos/openstack/swift/git/commits/9d1b7497400e8c3a7159b11dd8455c55a31db985,9d1b7497400e8c3a7159b11dd8455c55a31db985,"py3: port staticweb and domain_remap func tests

Drive-by: Tighten domain_remap assertions on listings, which required
that we fix proxy pipeline placement. Add a note about it to the sample
config.

Change-Id: I41835148051294088a2c0fb4ed4e7a7b61273e5f"
tipabu,2019-07-10 16:13:44,https://api.github.com/repos/openstack/swift/git/commits/38a24571ad5c192bacaf60a5634ea66164dbbb71,38a24571ad5c192bacaf60a5634ea66164dbbb71,"functests: make container creation less flakey in test_object

Change-Id: If62d82beb202dea553776920a95c177518b162ab"
coreycb,2019-07-05 20:22:56,https://api.github.com/repos/openstack/swift/git/commits/3532df0fd3dc91af5534b1cb3d4de4bfec101b8f,3532df0fd3dc91af5534b1cb3d4de4bfec101b8f,"Add Python 3 Train unit tests

This is a mechanically generated patch to ensure unit testing is in place
for all of the Tested Runtimes for Train.

See the Train python3-updates goal document for details:
https://governance.openstack.org/tc/goals/train/python3-updates.html

Change-Id: I29f2951053fa6714de46ed757116d99dd5c896cf
Story: #2005924
Task: #34249"
tipabu,2019-07-03 16:52:41,https://api.github.com/repos/openstack/swift/git/commits/4c4bd778ea8fe8d02a2892524c7918da0ca25ea9,4c4bd778ea8fe8d02a2892524c7918da0ca25ea9,"container-replicator: Add a timeout for get_shard_ranges

Previously this had no timeout, which meant that the replicator might
hang and fail to make progress indefinitely while trying to receive
shard ranges.

While we're at it, only call get_shard_ranges when the remote indicates
that it has shard ranges for us to sync -- this reduces the number of
requests necessary to bring unsharded replicas in sync.

Change-Id: I32f51f42d76db38271442a261600089404a00f91
Closes-Bug: #1835260"
tipabu,2019-07-03 14:28:14,https://api.github.com/repos/openstack/swift/git/commits/345f577ff191ee01c3cb4626805338028815c2b4,345f577ff191ee01c3cb4626805338028815c2b4,"s3token: fix conf option name

Related-Change: Ica740c28b47aa3f3b38dbfed4a7f5662ec46c2c4
Change-Id: I71f411a2e99fa8259b86f11ed29d1b816ff469cb"
tipabu,2019-06-17 16:25:52,https://api.github.com/repos/openstack/swift/git/commits/76fde89261e1940daadb720c41df1a3595314a97,76fde89261e1940daadb720c41df1a3595314a97,"py3: Be able to read and write non-ASCII headers

Apparently Python's stdlib got more picky about what a header should
look like. As a result, if an account, container, or object had a
non-ASCII metadata name (values were fine), the proxy-server wouldn't
parse all of the headers. See https://bugs.python.org/issue37093 for
more information.

This presented several problems:
- Since the non-ASCII header aborts parsing, we may lose important
  HTTP-level information like Content-Length or Transfer-Encoding.
- Since the offending header wouldn't get parsed, the client wouldn't
  even know what the problem was.
- Even if the client knew what the bad header was, it would have no way
  to clear it, as the server uses the same logic to parse incoming
  requests.

So, hack in our own header parsing if we detect that parsing was
aborted. Note that we also have to mangle bufferedhttp's putheader so we
can get non-ASCII headers to the backend servers.

Now, we can run the test_unicode_metadata tests in
test/functional/test_account.py and test/functional/test_container.py
under py2 against services running under py3.

Change-Id: I0f03c211f35a9a49e047a5718a9907b515ca88d7"
tipabu,2019-07-02 18:21:33,https://api.github.com/repos/openstack/swift/git/commits/4f7c44a9d7921849da0f3eecd23c26b65ec71435,4f7c44a9d7921849da0f3eecd23c26b65ec71435,"Add information about secret_cache_duration to sample config

Related-Change-Id: Id0c01da6aa6ca804c8f49a307b5171b87ec92228
Change-Id: Ica740c28b47aa3f3b38dbfed4a7f5662ec46c2c4"
bloodeagle40234,2019-07-01 08:43:02,https://api.github.com/repos/openstack/swift/git/commits/072b4045130c31dcc6f31f9618f3647a9c735a5f,072b4045130c31dcc6f31f9618f3647a9c735a5f,"s3api: add unit test case for s3acl

To clarify the corner case when Swift is over-loaded, or user-errors.

Change-Id: I41867290a63b329781dc7030f9f3ce0118e2032b"
zhufl,2019-06-28 08:54:27,https://api.github.com/repos/openstack/swift/git/commits/c46b88ab742761c8918013fa9cc40a169e015474,c46b88ab742761c8918013fa9cc40a169e015474,"Fix invalid assert states

""self.assertTrue(policies[1].is_deprecated, True)"" and
""self.assertTrue(crashy_calls[0], 1)"" are not correct, this is
to fix them.

Change-Id: I7b07f0833d675d2939c910f679b54da2b8cda482"
tipabu,2019-06-27 19:29:04,https://api.github.com/repos/openstack/swift/git/commits/88cec2c3966080fa79e5e623c7603c0eed4b94e3,88cec2c3966080fa79e5e623c7603c0eed4b94e3,"s3api: Put more information in the str() for InternalError

There are few things more frustrating when digging through a log than
finding a traceback that ends with

    raise InternalError('unexpected status code %d' % status)

while having no indication of what the status code was.

Change-Id: I08e9f7c0643ae0469bd1937a30c1c4477b67c31f"
kevin-wyx,2018-07-05 09:46:50,https://api.github.com/repos/openstack/swift/git/commits/e02b9b798007b9f8c70e33c22fa6189d81a41ca3,e02b9b798007b9f8c70e33c22fa6189d81a41ca3,"Use get_container_info to check existence before container PUT

PUT request on an existing container will trigger an update on
container db. When disks where container db landed are under
heavy loads, update on the container db may fail due to LockTimout.

Hence, we first check existence, if it's not there, we PUT.

Change-Id: Ic61153948e35f1c09b05bfc97dfac3fb487b0898
Closes-Bug: 1780204"
clayg,2019-06-25 18:42:26,https://api.github.com/repos/openstack/swift/git/commits/044c919871f80e1df91ff9a40318a5afd6a2960d,044c919871f80e1df91ff9a40318a5afd6a2960d,"More tests for 404 handoff skipping

Sometimes we want 404, sometimes we want 503 - it's tricky

Change-Id: I30f5af07e2e1fc7cbb6bdb1c334a0a161caf0906
Related-Change-Id: I53ed04b5de20c261ddd79c98c629580472e09961"
clayg,2019-06-25 16:53:32,https://api.github.com/repos/openstack/swift/git/commits/563e1671cf0583767d652a72ebc4d73d7cc07435,563e1671cf0583767d652a72ebc4d73d7cc07435,"Return 503 when primary containers can't respond

Closes-Bug: #1833612

Change-Id: I53ed04b5de20c261ddd79c98c629580472e09961"
clayg,2019-06-24 21:55:59,https://api.github.com/repos/openstack/swift/git/commits/82169ead1cc1c60318507fc3f0fbd7deff0f15e9,82169ead1cc1c60318507fc3f0fbd7deff0f15e9,"Don't handle object without container

Closes-Bug: #1833616

Change-Id: I16ca1589abcea2bca942da7e97719286a8961ea6"
tipabu,2019-06-17 20:22:04,https://api.github.com/repos/openstack/swift/git/commits/0ebfeddf65adb473fda2adfd1705534b6308cd2b,0ebfeddf65adb473fda2adfd1705534b6308cd2b,"Bump up our minimum eventlet version

We need 0.25.0 for py3 support, and increasing it for both is simplest.

Also drag forward dnspython, as newer eventlet requires a newer
dnspython. Note that we still don't explicitly list it as a dependency
for py3; rather, it's been getting installed as a requirement for
eventlet.

Change-Id: If933b713bdd1dfc348959771d60c0756a9a94477"
tipabu,2019-06-22 05:34:07,https://api.github.com/repos/openstack/swift/git/commits/55b04d16c4740fb731a2ffa97a84e1607ca94ef3,55b04d16c4740fb731a2ffa97a84e1607ca94ef3,"Run all func tests under py2 against services running py3

... at least, on the py3 dsvm job.

Depends-On: I0f03c211f35a9a49e047a5718a9907b515ca88d7
Change-Id: Ia783ae10344380eb5afd9d43273969b433962945"
tipabu,2019-04-17 20:11:33,https://api.github.com/repos/openstack/swift/git/commits/39a54fecdc5d7f9a09f34fcd9e81ec60948b51d7,39a54fecdc5d7f9a09f34fcd9e81ec60948b51d7,"py3: add swift-dsvm-functional-py3 job

Note that keystone wants to stick some UTF-8 encoded bytes into
memcached, but we want to store it as JSON... or something?

Also, make sure we can hit memcache for containers with invalid UTF-8.
Although maybe it'd be better to catch that before we ever try memcache?

Change-Id: I1fbe133c8ec73ef6644ecfcbb1931ddef94e0400"
tipabu,2019-06-14 23:20:03,https://api.github.com/repos/openstack/swift/git/commits/ff4459ed6bcaa26bc4df9873577ccad9578a89fc,ff4459ed6bcaa26bc4df9873577ccad9578a89fc,"Move call to global_conf_callback after loadapp()

Otherwise, paste complains about not being able to interpolate values
into the replication_semaphore. As long as it gets dropped in before we
fork(), I think it's OK?

Closes-Bug: 1691075
Change-Id: Ib7e065c47871876786bcc9ff39737f5d1bb3c12c"
matthewoliver,2019-04-16 06:59:51,https://api.github.com/repos/openstack/swift/git/commits/9f1ef35630ebf9da53cbd061f89889e534803725,9f1ef35630ebf9da53cbd061f89889e534803725,"py3: Port the tempurl middleware

This patch ports the tempurl middleware over to PY3. We use
an ""all-native"" string model, where we convert WSGI strings
as soon as we see them. It helps to deal with HMAC.

Aaand, we fix formpost along the way. It _clearly_ was
doing a wrong thing, encoding the same body several times
if we had several keys. On py2 it wasn't noticeable, but
on py3 this breaks, because the bytes type cannot be encoded
again.

Change-Id: I69974cc8a39731c980b54137b799a36b2e63a44a"
zaitcev,2019-06-13 00:42:44,https://api.github.com/repos/openstack/swift/git/commits/a57085edc9427e3ee7c6aa474f2954f0d8825df3,a57085edc9427e3ee7c6aa474f2954f0d8825df3,"py3: port the test of locale

We needed to change the sample translation a little, because
Python 3 requires encoding metadata.

We also remove workarounds for a specific bug in the subprocess
module, which were needed on Python 2.6 only.

Change-Id: Ie7791297cab16a649880088fa9eae6b4f95855f7"
tipabu,2019-06-18 16:54:02,https://api.github.com/repos/openstack/swift/git/commits/b10f4bae28bec9c0c394c340bf813a28ac8a3380,b10f4bae28bec9c0c394c340bf813a28ac8a3380,"func tests: tolerate more 404s when deleting

Change-Id: I3129e4f94ac39964f2f17ea05b6b2dd807fba82a"
thiagodasilva,2019-06-18 13:47:39,https://api.github.com/repos/openstack/swift/git/commits/4ab3706b75362b39cebf7ae5f325c191459c2690,4ab3706b75362b39cebf7ae5f325c191459c2690,"Remove nobarrier option

XFS no longer supports nobarrier mount option.
It has been deprecated for a long time[1] and removed in
recent kernel versions resulting in an error when trying to
mount: ""kernel: XFS (loop0): unknown mount option [nobarrier].""

[1] - https://patchwork.kernel.org/patch/9486549/

Change-Id: Iaa9208fb20545ae9ac990f0e180899108d983123"
tipabu,2019-06-17 21:41:19,https://api.github.com/repos/openstack/swift/git/commits/876ce231d616530e036521ba7cac28373e722ce2,876ce231d616530e036521ba7cac28373e722ce2,"py3: increase _MAXHEADERS for eventlet, too

eventlet.wsgi goes straight to eventlet.green.* instead of stdlib.

Change-Id: Ie1f8808c04f975ccc7cea532c4a566d6984f1757"
tipabu,2019-06-01 17:46:54,https://api.github.com/repos/openstack/swift/git/commits/557335465561b7a00d08cc5a370d5fcd6e7d83b0,557335465561b7a00d08cc5a370d5fcd6e7d83b0,"Move calls to self.app outside of error handling

On py3, if/when you hit an error, you can get very noisy tracebacks like

  <traceback coming out of split_path()>

  During handling of the above exception, another exception occurred:

  <meaningful traceback>

In general, I like this, but when we've used exception handling for
flow-control, it gets difficult to separate the wheat from the chaff.

Change-Id: I5f3bc6416207cab2c7e3a77ee6689360b55990e7"
tipabu,2019-05-24 15:33:03,https://api.github.com/repos/openstack/swift/git/commits/6374734d7d0f76d863afb167637d0b590316e306,6374734d7d0f76d863afb167637d0b590316e306,"Stop manually installing eventlet for our py3 tests

0.25.0 is now included in upper-constraints.txt

Related-Change: I04be480829eaf67ce328b2e7f7d7e2f70aaed90e
Change-Id: I5b8ecd82d6915d0e1cb216c423bbcc75c50a6f3d"
tipabu,2019-06-17 18:24:59,https://api.github.com/repos/openstack/swift/git/commits/014358018e34639da09ff7d28f8b095e3f7b882c,014358018e34639da09ff7d28f8b095e3f7b882c,"py3: Decode some things in s3api

Query strings and upload IDs should be native strings.

With this, you should be able to run the s3api functional tests under
py2 against py3 services.

Change-Id: I896c84872a5d63b23d6edabeb6d48ce7bc9a533e"
tipabu,2019-06-14 22:41:13,https://api.github.com/repos/openstack/swift/git/commits/ef664700d42db5bd2dd8be073598eee36ab1b258,ef664700d42db5bd2dd8be073598eee36ab1b258,"py3: Specify an encoding when loading db.pending pickles

Otherwise you can hit UnicodeDecodeErrors when upgrading from py2 to
py3.

Change-Id: Iab808b3d0c2051badda0450015077ea8b1e5adb8"
tipabu,2019-06-14 21:38:33,https://api.github.com/repos/openstack/swift/git/commits/e6c971b7e0fe5ea9fcf905482dd0243f53013b0d,e6c971b7e0fe5ea9fcf905482dd0243f53013b0d,"Stop sending non-UTF-8 prefixes in func tests

Previously, we'd (with high likelihood) cut it off midway through
a codepoint.

Change-Id: Iba4cce213dce204d7d1b53a937bfbe537276f0f3"
thiagodasilva,2019-06-14 14:16:45,https://api.github.com/repos/openstack/swift/git/commits/ccd3b890cdddca132b4d9cdd9372a9927bfb5aac,ccd3b890cdddca132b4d9cdd9372a9927bfb5aac,"Enable s3api in saio docker container

Change-Id: Ie759c4092408a210d32f6457142457087343d33a"
tipabu,2019-05-30 01:14:17,https://api.github.com/repos/openstack/swift/git/commits/ef8818a6399e295ebf0dc891ef483e4840a61475,ef8818a6399e295ebf0dc891ef483e4840a61475,"Fix up how we memcache on py3

Previously, we stored the WSGI strings in memcached and returned them when
responding to get_account/container_info calls. This would lead to cache
corruption in a heterogenous py2/py3 cluster such as you would have during
a rolling upgrade.

Now, only store and return native strings.

Change-Id: I8d6f66dfe846493972e433f70bad76a33d204562"
zhufl,2019-06-14 03:23:09,https://api.github.com/repos/openstack/swift/git/commits/0f46ace8a95c6abddba0cc5b02504a5324f1586c,0f46ace8a95c6abddba0cc5b02504a5324f1586c,"Fix :param: in docstring

In docstring :param should be used instead of :param:

Change-Id: I55cd3fc188dca4a357dbb599aa58ab4083d3baf5"
tipabu,2019-06-11 21:50:49,https://api.github.com/repos/openstack/swift/git/commits/aa2f1db1b71c1b2bf746b72515e3efd15598b6aa,aa2f1db1b71c1b2bf746b72515e3efd15598b6aa,"Ensure get_*_info keys are native strings

Change-Id: I29bbea48ae38cfabf449a9f4cca1f5f27769405a"
tipabu,2019-06-10 22:40:58,https://api.github.com/repos/openstack/swift/git/commits/b7b92b97b12f2a5c0e1beed59b6ffd4791cec896,b7b92b97b12f2a5c0e1beed59b6ffd4791cec896,"Bump up minimum cryptography version

...not because we strictly *need* newer cryptography, but rather because
distro packages have moved forward to the point where the 1.x series
won't compile from source and PyPI doesn't have wheels for them.

See changes like:

- https://github.com/pyca/cryptography/commit/6e7ea2e
- https://github.com/pyca/cryptography/commit/f88aea5

Change-Id: I1ff5b61873cf382c7a89873ed4ba6153f299262a"
bloodeagle40234,2019-06-10 06:27:49,https://api.github.com/repos/openstack/swift/git/commits/668e45af6dbb548682c46aaf9d4c515b22bc3ea7,668e45af6dbb548682c46aaf9d4c515b22bc3ea7,"Update mailmap for Kota Tsuyuzaki

His company changes the e-mail domain and the old one has been
recieve-only so to update the author's e-mail address, add the
entry to the mailmap.

Change-Id: I0c1f77425d9cefb2e6340ffb4c65cdea956c216f"
tipabu,2019-06-10 20:47:30,https://api.github.com/repos/openstack/swift/git/commits/06e4533c2e04333e6215fcaed969118cb758d3d3,06e4533c2e04333e6215fcaed969118cb758d3d3,"py3: Fix header_to_environ_key

When doing things for the sake of WSGI, .upper(), .title() etc. should
only be used on bytes.

Change-Id: I130ba5014b7eff458d87ab29eb42fe45607c9a12"
tipabu,2019-04-16 04:44:18,https://api.github.com/repos/openstack/swift/git/commits/e8e7106d14f9bfe16427b5be300368c24c162481,e8e7106d14f9bfe16427b5be300368c24c162481,"py3: port obj/reconstructor tests

All of the swift changes we needed for this were already done elsewhere.

Change-Id: Ib2c26fdf7bd36ed1cccd5dbd1fa208f912f4d8d5"
clayg,2019-06-06 19:25:22,https://api.github.com/repos/openstack/swift/git/commits/dca658103a63d212bdf9195fcde6038557c13401,dca658103a63d212bdf9195fcde6038557c13401,"Fix swift with python <2.7.9

Closes-Bug: #1831932

Change-Id: I0d33864f4bffa401082548ee9a52f6eb50cb1f39"
tipabu,2019-05-22 01:04:05,https://api.github.com/repos/openstack/swift/git/commits/d9cafca246bb15e706d9f7546e1f4bedda1b6c8b,d9cafca246bb15e706d9f7546e1f4bedda1b6c8b,"py3: port ssync

Change-Id: I63a502be13f5dcda2a457d38f2fc5f1ca469d562"
tipabu,2019-06-03 15:57:23,https://api.github.com/repos/openstack/swift/git/commits/a122b720e9c61b38cfe502dcb63a9c119220c4c1,a122b720e9c61b38cfe502dcb63a9c119220c4c1,"Dockerfile cleanup

- Use `set -e` in all install scripts. Clean up swift_needs to still
  work properly and exit cleanly under `set -e`.
- Drop some redundant slashes.

Change-Id: I05f38c6366e3da0aeed2b6451a8bd9d7dc531119"
ehudkaldor,2019-06-05 18:29:28,https://api.github.com/repos/openstack/swift/git/commits/17fd725707c9a36fc4536bd3c955042931e314b3,17fd725707c9a36fc4536bd3c955042931e314b3,"Installing liberasurecode from Alpine Linux repos instead of building from source.

closes #1831136

Change-Id: Ic9a2844fffc6dba6a4d44a9712edbb5cd91f0470"
tipabu,2019-04-13 05:13:41,https://api.github.com/repos/openstack/swift/git/commits/2eb2451685fdd2efa3f49bc48211844a35300ebf,2eb2451685fdd2efa3f49bc48211844a35300ebf,"Increase some middleware test coverage

This patch increases the test coverage of the following middlewares:
 - list_endpoints
 - crypto
 - crossdomain

Change-Id: I3dec85f61da07bd110bf42220d5ba46e11833a90"
clayg,2019-06-04 16:45:35,https://api.github.com/repos/openstack/swift/git/commits/79ab3a490ada6aa4db28efa5b71a3f1a080920f7,79ab3a490ada6aa4db28efa5b71a3f1a080920f7,"Note s3api compatability requirements in sample.conf

Change-Id: I12f6e4a5a880a2d5e0f4fff4618e4196be311267"
zaitcev,2019-06-04 03:00:41,https://api.github.com/repos/openstack/swift/git/commits/eaf180c68dc7cba866df0c70199ae48fb382c6e0,eaf180c68dc7cba866df0c70199ae48fb382c6e0,"Fix a few Sphinx warnings

This precludes us from landing anything in the gate, because we
treat Sphinx warnings as errors in OpenStack.

Specifically, 3 warnings are fixed:

/home/zuul/src/opendev.org/openstack/swift/swift/common/middleware\
/s3api/etree.py:docstring of\
 swift.common.middleware.s3api.etree.Element:1:\
Inline strong start-string without end-string.

duplicate object description of\
 swift.common.middleware.versioned_writes, other instance in\
 middleware, use :noindex: for one of them

duplicate object description of\
 swift.common.ring.composite_builder, other instance in\
 overview_ring, use :noindex: for one of them

Change-Id: I5e0bd61a301d46b2674b4605882462575b635220"
cschwede,2019-05-29 09:37:54,https://api.github.com/repos/openstack/swift/git/commits/c9e78d15e1e05f23facf7c28758b442bb25bde68,c9e78d15e1e05f23facf7c28758b442bb25bde68,"Remove invalid dict entries from hashes.pkl

If the data in a hashes.pkl is corrupted but still de-serialized without
errors, it will mess up the replication and gets never fixed. This
happens for example if one of the keys is a NULL byte.

This patch checks if the dict keys in hashes.pkl are valid strings and
invalidates it if not.

Closes-Bug: 1830881
Change-Id: I84b062d062ff49935feed0aee3e1963bb72eb5ea"
tipabu,2019-05-30 18:55:58,https://api.github.com/repos/openstack/swift/git/commits/2e35376c6d6afb5aa2a36081861bab011c8c95c3,2e35376c6d6afb5aa2a36081861bab011c8c95c3,"py3: symlink follow-up

- Have the unit tests use WSGI strings, like a real system.
- Port the func tests.

Change-Id: I3a6f409208de45ebf9f55f7f59e4fe6ac6fbe163"
matthewoliver,2019-04-23 02:15:32,https://api.github.com/repos/openstack/swift/git/commits/4f9595f1130f6c45f8e3e08db55dddc31844be93,4f9595f1130f6c45f8e3e08db55dddc31844be93,"py3: port symlink middleware

This patch ports the symlink middleware to py3.
The middleware itself seems to be mostly fine and most changes
are in the symlink unit tests.

Change-Id: I973c2e1bb8969cf6bffece8ce68881c393efbaef"
tipabu,2019-05-22 23:36:50,https://api.github.com/repos/openstack/swift/git/commits/ff04ef05cd5a8f9675cbc8f292fa666d03ae6644,ff04ef05cd5a8f9675cbc8f292fa666d03ae6644,"Rework private-request-method interface

Instead of taking a X-Backend-Allow-Method that *must match* the
REQUEST_METHOD, take a truish X-Backend-Allow-Private-Methods and
expand the set of allowed methods. This allows us to also expose
the full list of available private methods when returning a 405.

Drive-By: make async-delete tests a little more robust:
  * check that end_marker and prefix are preserved on subsequent
    listings
  * check that objects with a leading slash are correctly handled

Change-Id: I5542623f16e0b5a0d728a6706343809e50743f73"
mdegerne,2019-05-22 23:28:36,https://api.github.com/repos/openstack/swift/git/commits/e28bc3c292a3c6fba67ba5f4c92068686994184f,e28bc3c292a3c6fba67ba5f4c92068686994184f,"Fix incorrect setting of symlink_target_account

The value of the symlink_target_account in etag override. It was previously
being set to the object value, rather than the account value.

Change-Id: I51889d7b19370ceaa66168103cb31d27a8ee3a4a
Closes-Bug: #1829085"
clayg,2019-05-22 21:23:42,https://api.github.com/repos/openstack/swift/git/commits/04c8015b889e3ddcbf111f3b0fa99bbbe12b8624,04c8015b889e3ddcbf111f3b0fa99bbbe12b8624,"Add more tests for async expirer

Related-Change-Id: Ia13ee5da3d1b5c536eccaadc7a6fdcd997374443
Change-Id: Ic70eb61b32b196d356c9a3b40a22807456c7b0f2"
tipabu,2019-05-21 04:54:40,https://api.github.com/repos/openstack/swift/git/commits/e22960fd718c4594bc8a504a12aba3f6a52175bf,e22960fd718c4594bc8a504a12aba3f6a52175bf,"s3api: Fix ETag when copying a MU part from another MU

Previously, we'd preserve the sysmeta that we wrote down with the
original multipart-upload to track its S3-style etag on the new part,
causing it to have an ETag like `<MD5>-<N>`. Later, when the client
tried to complete the new multipart-upload, it would send that etag back
to the server, which would reject the request because the ETag didn't
look like a normal MD5.

Now, have s3api include blank values in the copy request to overwrite
the source sysmeta, and treat a blank etag override the same as a
missing one.

Change-Id: Id33a7ab9d0b8f33fede73eae540d6137708e1218
Closes-Bug: #1829959"
tipabu,2019-05-15 22:29:08,https://api.github.com/repos/openstack/swift/git/commits/40bd9f16a348236a8710b98b66115f659c47354b,40bd9f16a348236a8710b98b66115f659c47354b,"py3: port diskfile

Change-Id: Ie73f9df460f9014014168d6e60767e66b24d30b0"
tipabu,2019-05-15 19:59:57,https://api.github.com/repos/openstack/swift/git/commits/8868e2cd5062541f2d9b3d5c2091e4122a830f83,8868e2cd5062541f2d9b3d5c2091e4122a830f83,"Clean up test_write_read_metadata

I'm pretty sure I botched the intent of the test when I touched it in
https://github.com/openstack/swift/commit/36c4297

As a side-effect, clean up a warning on py2:

    UnicodeWarning: Unicode equal comparison failed to convert
    both arguments to Unicode - interpreting them as being unequal

Change-Id: I4da8264f85e688bc5109016c197378ca6dfe06a5"
tipabu,2019-03-27 22:28:50,https://api.github.com/repos/openstack/swift/git/commits/83d01619910c34f2e3fafeda20bc4f7e7e8f482f,83d01619910c34f2e3fafeda20bc4f7e7e8f482f,"Add operator tool to async-delete some or all objects in a container

Adds a tool, swift-container-deleter, that takes an account/container
and optional prefix, marker, and/or end-marker; spins up an internal
client; makes listing requests against the container; and pushes the
found objects into the object-expirer queue with a special
application/async-deleted content-type.

In order to do this enqueuing efficiently, a new internal-to-the-cluster
container method is introduced: UPDATE. It takes a JSON list of object
entries and runs them through merge_items.

The object-expirer is updated to look for work items with this
content-type and skip the X-If-Deleted-At check that it would normally
do.

Note that the target-container's listing will continue to show the
objects until data is actually deleted, bypassing some of the concerns
raised in the related change about clearing out a container entirely and
then deleting it.

Change-Id: Ia13ee5da3d1b5c536eccaadc7a6fdcd997374443
Related-Change: I50e403dee75585fc1ff2bb385d6b2d2f13653cf8"
alecuyer,2019-05-16 16:08:03,https://api.github.com/repos/openstack/swift/git/commits/4927b1f29c4d993cb29786312a9efc00850c10cb,4927b1f29c4d993cb29786312a9efc00850c10cb,"Specify pickle protocol in REPLICATE()

The default pickle protocol in python3 is version 3. This is not
readable by a python2 interpreter.

Force the use of version 2 in the object server REPLICATE() function,
for compatibility with python 2.

Change-Id: I19d23570ff3a084d288de1308e059cfd8134d6ad"
alecuyer,2019-04-18 14:35:07,https://api.github.com/repos/openstack/swift/git/commits/6008b0a83f862b2396ad6642b7863a30a258520b,6008b0a83f862b2396ad6642b7863a30a258520b,"Fix quarantine when object path is not a directory

In the diskfile module, there are a couple of cases where we would
quarantine the suffix dir if a single object within is not a directory.

Change the code so that we quarantine only the object.

Change-Id: I35eb16f568c00d973eb089aedd0e5a5619c25a2f"
timuralp,2019-05-04 19:11:54,https://api.github.com/repos/openstack/swift/git/commits/d4e7940457cd31b4ee91a01a0c492781179fcfe4,d4e7940457cd31b4ee91a01a0c492781179fcfe4,"Start transition to boto3 in s3api tests.

Adds the scaffolding required for tests to use boto3 and converts the
test_bucket.py tests to the new interface. Follow on patches will
convert the other tests to use the boto3 library.

Notable changes: we no longer try to reach for the equivalent of
`boto.make_request()` and instead rely on the boto3/botocore event
system to mutate requests as necessary (or to disable pre-flight
validators).

Partial-Bug: 1557260
Change-Id: I3d77ef4a6b878c49ebfa0c8b8647d7199d87601e"
tipabu,2019-05-21 21:03:47,https://api.github.com/repos/openstack/swift/git/commits/53f8ccb4a3f5007db673a52ce17f80c50720fd49,53f8ccb4a3f5007db673a52ce17f80c50720fd49,"container: Unify storage-policy error paths

While we're at it, use the right header name.

Change-Id: I2238ec7fb0325167c53757b62ff9eb2ce5576fa4"
tipabu,2019-05-20 21:09:56,https://api.github.com/repos/openstack/swift/git/commits/350bc8cbee515e9bb01e57c991851692e7fe0dd1,350bc8cbee515e9bb01e57c991851692e7fe0dd1,"s3api: stop adding etag quotes when there are already etag quotes

Some middleware, such as that included with ProxyFS, may put
RFC-compliant ETags in container listings; we should leave those
unquoted, so we don't double-up on quotes.

Change-Id: I8b56231aef41076a224dc62cd93c1973355c4670"
tipabu,2019-05-20 18:44:21,https://api.github.com/repos/openstack/swift/git/commits/82e446a8a0c0fd6a81f06717b76ed3d1be26a281,82e446a8a0c0fd6a81f06717b76ed3d1be26a281,"s3api: Allow clients to upload with UNSIGNED-PAYLOAD

(Some versions of?) awscli/boto3 will do v4 signatures but send a
Content-MD5 for end-to-end validation. Since a X-Amz-Content-SHA256
is still required to calculate signatures, it uses UNSIGNED-PAYLOAD
similar to how signatures work for pre-signed URLs.

Look for UNSIGNED-PAYLOAD and skip SHA256 validation if set.

Change-Id: I571c16c196dae4e4f8fb41904c8850d0054b1fe9
Related-Change: I61eb12455c37376be4d739eee55a5f439216f0e9"
zaitcev,2019-02-19 23:36:11,https://api.github.com/repos/openstack/swift/git/commits/bd8c3067b40092d53552ff686bdce030b9807fa8,bd8c3067b40092d53552ff686bdce030b9807fa8,"py3: slo

This adds wsgi_to_str(self.path_info) everywhere we forgot it,
not only in the slo module itself.

Dropping the body=''.join(body) after call_slo() is obvious:
the latter only returns strings of bytes, not lists of such.

Change-Id: I6b4d87e4cda4945bc128dbc9c1edd39e736a59d2"
tipabu,2019-05-17 17:30:21,https://api.github.com/repos/openstack/swift/git/commits/ad034023f30f4d00e9c21bf3e095d3c04b4b7609,ad034023f30f4d00e9c21bf3e095d3c04b4b7609,"Be explicit that a code path is just for py2

Change-Id: I7d0345a712f71e76034910fa7bb2bbaf42b4d2ff"
tipabu,2019-05-15 22:39:25,https://api.github.com/repos/openstack/swift/git/commits/add5a411ace942663d99f92e443b1effc6e7a867,add5a411ace942663d99f92e443b1effc6e7a867,"Make build/upload/promote image jobs non-voting

Change-Id: If284513ead5ff0d7f9e997ebf2a8820c9acf79e3"
tipabu,2019-05-15 00:10:54,https://api.github.com/repos/openstack/swift/git/commits/bec2cccd430845aba7437075feb3dbc7099fc5c2,bec2cccd430845aba7437075feb3dbc7099fc5c2,"py3: port expirer

Change-Id: Ib5aeda94fe9b165f54ad7412d68d71b62e427a40"
timuralp,2019-05-14 01:38:24,https://api.github.com/repos/openstack/swift/git/commits/8b64381371b542d46fadba428d3b910dcbcd8d93,8b64381371b542d46fadba428d3b910dcbcd8d93,"Set Content-Type with s3api metadata updates.

S3 supports two metadata operations on object copy: COPY and REPLACE.
When using REPLACE, the Content-Type should be set to the one supplied
by the caller. When using COPY, the existing object's Content-Type value
is used.

Change-Id: Ic7c6278dedef308c9219eb45751abfa5655f144f
Closes-Bug: #1828907"
tipabu,2019-05-05 19:38:57,https://api.github.com/repos/openstack/swift/git/commits/5cd2a2ac2f0552247ada19cc02ec0ca5389375bf,5cd2a2ac2f0552247ada19cc02ec0ca5389375bf,"py3: bulk -- alternate approach

Related-Change: I3603247e0c36299de2107aa8e494a3f87647696f
Change-Id: Iaf14c1ab3e236e6774492ed711fccef066a16fca"
tipabu,2019-05-03 23:38:29,https://api.github.com/repos/openstack/swift/git/commits/89c9c6f0b27fcc208996590610df8b04bec2ebc8,89c9c6f0b27fcc208996590610df8b04bec2ebc8,"Have a separate s3api functional test suite

The idea is that we should have a suite of pure-S3 tests that we can
point at AWS to verify that we've written accurate tests, then point at
Swift-with-s3api to verify that we've correctly implemented the S3 api.

As a start, just check GET Service; go ahead and create a few buckets
so we can see them in the service listing.

Change-Id: I283757cd3084b1c83a1e9bf0f46b6ce9d7ee8eb9"
tipabu,2019-05-07 22:50:24,https://api.github.com/repos/openstack/swift/git/commits/51e415b749cc85757805053931679c1cd61730f3,51e415b749cc85757805053931679c1cd61730f3,"py3: port proxy/test_mem_server.py

This finishes the proxy unit tests.

Change-Id: I2452e4e4dabef071bfbf376d03ec63211f7c2906"
tipabu,2019-05-07 22:43:34,https://api.github.com/repos/openstack/swift/git/commits/8b3d0a6c64d9efd6a7af753972a910144a494134,8b3d0a6c64d9efd6a7af753972a910144a494134,"py3: finish porting proxy/test_server.py

Change-Id: I8287db75b4f19581203360c646e72f64fe45f170"
tipabu,2019-03-22 19:18:51,https://api.github.com/repos/openstack/swift/git/commits/4f4456561fb0443389e30efbe81c51c0e80cb6e6,4f4456561fb0443389e30efbe81c51c0e80cb6e6,"Add py37 func test job

Make a new func-py3 tox env that will use whatever version of py3 is
available, and set up a new check/gate job that runs it under py37.

Change-Id: I1ef233276697be994494ed858e88ce97634f814e"
tipabu,2019-03-01 20:43:42,https://api.github.com/repos/openstack/swift/git/commits/506279235d12f1590bd928de51d991b7fb425e6e,506279235d12f1590bd928de51d991b7fb425e6e,"Get functional/tests.py running under py3

Note that you need a pretty recent eventlet to pick up
https://github.com/eventlet/eventlet/commit/f0bc79e

Change-Id: I6b006b972e7431c406039f4e0f6890a8f74a4432"
tipabu,2019-05-07 21:07:09,https://api.github.com/repos/openstack/swift/git/commits/259224f00903443ca5154a2cf697abea13947fa1,259224f00903443ca5154a2cf697abea13947fa1,"py3: port unit/proxy/test_server.py

All except the versioned_writes tests, which are hairy.

Change-Id: Ieb54869f93a70c8887d33bd2ad46cf04a190d896"
timuralp,2019-05-07 23:15:59,https://api.github.com/repos/openstack/swift/git/commits/dade632b0fbb10ef9419f2f9bcd063f3f962dbbf,dade632b0fbb10ef9419f2f9bcd063f3f962dbbf,"S3Api: handle non-ASCII markers in v1 listings.

Added a test for S3 v1 listings that use URL encoding and have non-ASCII
characters. In the process discovered that the XML schema for
ListBucketResult had a small problem: Delimiter and EncodingType needed
to be reordered.

Change-Id: Ib3124ea079a73a577b86de97657603a64b16f965"
thiagodasilva,2019-05-08 15:20:53,https://api.github.com/repos/openstack/swift/git/commits/032cf3b3b4599bd720131c8f02cc6ed8a155683d,032cf3b3b4599bd720131c8f02cc6ed8a155683d,"Update docker secret.

Removed trailing newline

Change-Id: I8b100b8213d6efde67b0452ce988bc47c830a2e2"
thiagodasilva,2019-05-03 20:52:53,https://api.github.com/repos/openstack/swift/git/commits/37e257913c161905f96cde8e783aaa501a4e419d,37e257913c161905f96cde8e783aaa501a4e419d,"Add Dockerfile to build a SAIO container image

Added Dockerfile and configuration files under the
new `docker` directory to build a Swift All in One container
image.

The primary goal of this container image is to provide
application developers with a Swift/S3 endpoint that can be
tested against during the development cycle.

Added Zuul jobs to build docker container

Change-Id: Ib10975a1862a4fa8c4eeaba139837cf1f22b272a"
kajinamit,2019-05-03 08:50:15,https://api.github.com/repos/openstack/swift/git/commits/211cf3983c79edc0e4305b743b41feddaa461cfa,211cf3983c79edc0e4305b743b41feddaa461cfa,"Require logger passed to broker in unit tests for account-reaper

This patch removes default value for logger passed to
faked BrokerClass in some unit tests for account reaper,
to make sure that a logger instance is properly passed
when generation BrokerClass instance.

This patch also removes unnecessory parameter, which is
added to confirm logger passed to broker, but is not
useful in fact.

NOTE: This patch is a follow-up of my previous commit[1]

[1] https://review.opendev.org/#/c/295875/

Change-Id: Ica10e3ac42375c2dc141478e647408df90028ae9"
zhufl,2019-05-06 06:23:05,https://api.github.com/repos/openstack/swift/git/commits/6d63297f02b434e439ff32411ca322d0d97087ba,6d63297f02b434e439ff32411ca322d0d97087ba,"[Trivial fix]Remove unnecessary slash

This is to remove the unncessary slash when the line doesn't
exceed the length of 79, to make the code more readable.

Change-Id: I31070067913560d6147f95d0fdfba4f9f9ce0936"
tipabu,2019-05-05 04:46:19,https://api.github.com/repos/openstack/swift/git/commits/767872210f2d33c2a786d2bfc571bf7b44767738,767872210f2d33c2a786d2bfc571bf7b44767738,"py3: port unit/proxy/test_sysmeta.py

Change-Id: I378705a8d9ad51dbfa85287d44e6313aa7680c23"
tipabu,2019-05-05 04:01:29,https://api.github.com/repos/openstack/swift/git/commits/fed0204e869bc1a92dbd74319ed5dbef95f3ea5e,fed0204e869bc1a92dbd74319ed5dbef95f3ea5e,"py3: Make StoragePolicy objects hashable

Change-Id: I2e233afff26878ba94e268c71f6779bcca7b641c"
tipabu,2019-05-04 23:33:41,https://api.github.com/repos/openstack/swift/git/commits/b8284538be4c17052c4c399a7fa09fd2abb50c49,b8284538be4c17052c4c399a7fa09fd2abb50c49,"py3: start porting for unit/proxy/test_server.py

Mostly this ammounts to

    Exception.message -> Exception.args[0]
    '...' -> b'...'
    StringIO -> BytesIO
    makefile() -> makefile('rwb')
    iter.next() -> next(iter)
    bytes[n] -> bytes[n:n + 1]
    integer division

Note that the versioning tests are mostly untouched; they seemed to get
a little hairy.

Change-Id: I167b5375e7ed39d4abecf0653f84834ea7dac635"
clayg,2019-05-02 22:10:55,https://api.github.com/repos/openstack/swift/git/commits/34bd4f7fa34124856d3c16d407d543d6562c3297,34bd4f7fa34124856d3c16d407d543d6562c3297,"Clarify usage of dequeue_from_legacy option

Change-Id: Iae9aa7a91b9afc19cb8613b5bc31de463b853dde"
tipabu,2019-04-15 22:40:15,https://api.github.com/repos/openstack/swift/git/commits/9290f29e1cd622b5155ebec3600cc4c6e6fb0b31,9290f29e1cd622b5155ebec3600cc4c6e6fb0b31,"Wait longer for log lines in unit test

We've seen a noteworthy (literally -- there's a comment about it) number
of failures for test_multiphase_put_drains_extra_commit_junk_disconnect;
I'd rather waste an extra few hundredths of a second every run than have
to recheck most patches we want merged.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: Iebec6c18866e4f8ef40faab539b173f017d658e3"
KazuhiroMiyahara,2018-09-12 07:35:51,https://api.github.com/repos/openstack/swift/git/commits/443f029a584c5bb7dd7b910ddacd8fa562272dfb,443f029a584c5bb7dd7b910ddacd8fa562272dfb,"Enable to configure object-expirer in object-server.conf

To prepare for object-expirer's general task queue feature [1],
this patch enables to configure object-expirer in object-server.conf.
Object-expirer.conf can be used in the same manner as before, but deprecated.

If both of object-server.conf with ""object-expirer"" section and
object-expirer.conf are in a node, only object-server.conf is used.
Object-expirer.conf is used only if all object-server.conf doesn't have
""object-expirer"" section.

There are two differences between ""object-expirer.conf"" style and
""object-server.conf"" style.

The first difference is `dequeue_from_legacy` default value.
`dequeue_from_legacy` defines task queue mode. In ""object-expirer.conf""
style, the default mode is legacy queue. In ""object-server.conf"" style,
the default mode is general queue. But general mode means no-op mode
for now, because general task queue is not implemented yet.

The second difference is internal client config. In ""object-expirer.conf""
style, config file of internal client is the object-expirer.conf itself.
In ""object-server.conf"" style, config file of internal client is
another file.

[1]: https://review.openstack.org/#/c/517389/

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>

Change-Id: Ib21568f9b9d8547da87a99d65ae73a550e9c3230"
tipabu,2019-04-09 15:34:18,https://api.github.com/repos/openstack/swift/git/commits/1e4cdca3390906a7bc4b27af9afa62002d20880c,1e4cdca3390906a7bc4b27af9afa62002d20880c,"Fix ostestr invocation

More-recent versions of stestr are rather picky about wanting an integer
for concurrency [1], but ostestr prior to [2] defaults it to None. As a
result, all our func tests would fail with:

   TypeError: int() argument must be a string or a number, not 'NoneType'

Also, move the rolling upgrade job to non-voting since it's going to
pull in the old version but try to run with new deps.

[1] https://github.com/mtreinish/stestr/commit/c93bc81
[2] https://review.openstack.org/#/c/651275/

Change-Id: Icba6c46bcff0e0516107e0f6742d32c92488ae20"
bloodeagle40234,2019-05-03 22:28:44,https://api.github.com/repos/openstack/swift/git/commits/f5b472cdc7f3f4a64d8cbdc60ce4fa0111622627,f5b472cdc7f3f4a64d8cbdc60ce4fa0111622627,"Fix wrong tox env name from func-post-ec to func-ec

Change-Id: I789fb2413985942460d3275b479d6410c62c380f"
tipabu,2018-08-01 23:52:04,https://api.github.com/repos/openstack/swift/git/commits/359d136c290de0f16986db53a3006a0111aa0285,359d136c290de0f16986db53a3006a0111aa0285,"Unify auth_host/port/ssl/prefix func test options into auth_uri

Retain support for the old way, though (at least for now).

Change-Id: Id3c2ed87230c5918c18e2c01d086df8157f036b1"
tipabu,2019-05-03 20:36:55,https://api.github.com/repos/openstack/swift/git/commits/fbf6d847966059db8fb41eaa7952b7f802f16cc6,fbf6d847966059db8fb41eaa7952b7f802f16cc6,"Make py36 job voting

Change-Id: I4768fe41d6347bcae44774730350f4be583bdf15"
tipabu,2019-05-03 20:36:42,https://api.github.com/repos/openstack/swift/git/commits/a239f4ec355b48999cbdb8e54660624e9b44e835,a239f4ec355b48999cbdb8e54660624e9b44e835,"Remove py35 unit test job

Change-Id: Iadb3bed811907740f85bd9277ba09a4ca17fc025"
tipabu,2019-04-09 23:47:20,https://api.github.com/repos/openstack/swift/git/commits/3a9f3f841957f54801c32832356c540dbef69817,3a9f3f841957f54801c32832356c540dbef69817,"py3: port s3api

Drive-by: When passing a list or tuple to swob.Response as an app_iter,
check that it's full of byte strings.

Change-Id: Ifc35aacb2e45004f74c871f08ff3c52bc57c1463"
tipabu,2019-03-12 20:36:21,https://api.github.com/repos/openstack/swift/git/commits/c0ae48ba9aafb0b91869ea3bae8da07a32088777,c0ae48ba9aafb0b91869ea3bae8da07a32088777,"py3: Stop using stdlib's putrequest(); it only does ASCII

Note that this only affects the functest client.

See also: https://bugs.python.org/issue36274

Change-Id: I1359c475fbe93db2f0fcc4b450be6dd5073f922e"
tipabu,2019-03-21 17:33:41,https://api.github.com/repos/openstack/swift/git/commits/93b49c5e4818774febb7aa59fc21cbbcf8db2344,93b49c5e4818774febb7aa59fc21cbbcf8db2344,"py3: Be able to parse non-RFC-compliant request lines

There's a bug in CPython [1] that causes servers to mis-parse request
lines that include the bytes \x85 or \xa0.  Naturally, we have
functional tests that (with high probability) will send such request
lines. There's a fix proposed, but the earliest it's likely to land
would be for 3.8, and we need to be able to target an earlier Python.

So, intercept the request line immediately before parsing and re-write
it to be RFC-compliant. Note that this is done for Python 2 as well,
though there should be no change in the request environment that
eventlet eventually hands to us.

[1] https://bugs.python.org/issue33973

Change-Id: Ie648f5c04d4415f3b620fb196fa567ce7575d522"
kajinamit,2016-03-22 14:29:48,https://api.github.com/repos/openstack/swift/git/commits/4b2ac606b1a4bcbb949e6feef98e1b2600c83a14,4b2ac606b1a4bcbb949e6feef98e1b2600c83a14,"Pass logger instances to AccountBroker/ContainerBroker

There are some processes which don't pass their logger instances
when creating AccountBrokers/ContainerBrokers, which causes some
error messages with a different setting from the other logs
generated by the processes.

This patch makes them pass logger instances, to make sure they
generate all logs according to their log settings.

Change-Id: I914c3a2811e1a2b7f19ad2bc9b3d042fcba63820"
clayg,2019-04-29 18:59:39,https://api.github.com/repos/openstack/swift/git/commits/58352b285d6532321c6dfbe0e94218799c615ef2,58352b285d6532321c6dfbe0e94218799c615ef2,"s3api multi upload test clean up

Add a test assertion for invalid ETag of MPU manifest and make some
global constants more obvious.

Change-Id: I830c0d2e473d1740f9138ebc6efd64a39d85d1dc
Related-Change-Id: I7df13e670f702a2956a9c8057fcb971f4bfb7319"
tipabu,2019-01-03 20:12:15,https://api.github.com/repos/openstack/swift/git/commits/c51db382cb4f637fd91d1ff3d0163907906e3cc5,c51db382cb4f637fd91d1ff3d0163907906e3cc5,"s3api: Block ETag header from CompleteMultipartUpload requests

Change-Id: I7df13e670f702a2956a9c8057fcb971f4bfb7319
Closes-Bug: 1810397"
zhongshengping,2019-04-22 03:05:10,https://api.github.com/repos/openstack/swift/git/commits/32bf43990c3c9ce771fca5968242f102155467c1,32bf43990c3c9ce771fca5968242f102155467c1,"Replace git.openstack.org URLs with opendev.org URLs

Thorough replacement of git.openstack.org URLs with their opendev.org
counterparts.

Change-Id: I5e77307de6a484fd69b2a5863423ceb357e8601f"
tipabu,2019-04-18 04:55:09,https://api.github.com/repos/openstack/swift/git/commits/9468e28ccf4e84915c300e4f466ec2e31690495d,9468e28ccf4e84915c300e4f466ec2e31690495d,"Make test_read_write_acl_listings more robust

When retrying in func tests, you may get a different status if the
previous attempt succeeded.

Change-Id: Ie9bf99af1298fae5cd91fb03d5b5f13ff4873b3c"
tipabu,2019-04-17 16:15:27,https://api.github.com/repos/openstack/swift/git/commits/b6ebabee78b77108b2a3e5261873f038772d304d,b6ebabee78b77108b2a3e5261873f038772d304d,"Clean up dlo unit tests

We don't actually need so many py2/py3 branches, and once we
clean those up, there's hardly any reason to import six.

Change-Id: Ia3b4f02e7eb99ad1a76aa35c39dc198528fd39ad"
zaitcev,2019-02-20 23:09:08,https://api.github.com/repos/openstack/swift/git/commits/893acffbc01ba817361f8d8735513dc784fb92c0,893acffbc01ba817361f8d8735513dc784fb92c0,"py3: port dlo

Change-Id: I7236ddea0acde93d0789ad8affa76df0097a86aa"
tipabu,2019-04-03 00:42:21,https://api.github.com/repos/openstack/swift/git/commits/7cb276da425592280cd3f522c06cfb7b02311bde,7cb276da425592280cd3f522c06cfb7b02311bde,"Move from py35 to py37 for gating py3 jobs

Looking at https://governance.openstack.org/tc/reference/runtimes/train.html
OpenStack is no longer targetting Python 3.5, so it doesn't really make sense
to gate on it. Move to Python 3.7, just to make it so we can go longer before
having to do this shuffle again.

Presumably, once we actually declare support for Python 3.6, we should
make that job voting, too? We've had enough gate flaky-ness lately that
I'm not keen on it.

Change-Id: I9c9e5df76a6592ab9c512b7c1ba807f9a0053059"
zhufl,2019-04-15 07:12:30,https://api.github.com/repos/openstack/swift/git/commits/65d3cb75f817b3683aa85b73239d606e29c73d1c,65d3cb75f817b3683aa85b73239d606e29c73d1c,"Use assertIn to check whether substring is in str

This is to use assertIn to check whether substring is in str,
go get clearer failure message.

Change-Id: I40aff29454c423389755a5330751d2f69a227a05"
tipabu,2018-06-01 22:59:25,https://api.github.com/repos/openstack/swift/git/commits/e5ff405ec967bfe19b3eaeaac5b5a32c95218f9d,e5ff405ec967bfe19b3eaeaac5b5a32c95218f9d,"Make staticweb return URL-encoded Location headers

Also, enhance tests to verify proper encoding in generated responses.

Change-Id: Ib696b1c3a34722f3a6de010973b90ef8b1917012
Partial-Bug: 1774238"
tipabu,2019-04-08 21:52:42,https://api.github.com/repos/openstack/swift/git/commits/049e56a5d03fb8b801bbd31557fc559912cd799e,049e56a5d03fb8b801bbd31557fc559912cd799e,"Remove our urlparse wrapper

It has not been necessary since we dropped support for Python 2.6.
See https://github.com/python/cpython/commit/8c6d9d7 and
https://bugs.python.org/issue2987.

Be sure to keep a `urlparse` name in utils, though; swauth (at least)
still expects there to be a swift.common.utils.urlparse.

Change-Id: If2502868f251b8a83aa929ee22b10046e708d111"
clayg,2019-04-09 19:15:32,https://api.github.com/repos/openstack/swift/git/commits/5b40f69ede905bfd9413c12b6705fef6d809a929,5b40f69ede905bfd9413c12b6705fef6d809a929,"Add tests for unexpected names in part dir

An earlier revision of the related change had a bug that this test would
have discovered.

Related-Change-Id: I85dcaf65b9f19ac4659fa5937f9b0b0e804fc54e
Change-Id: Iedd85ec65a11de189ce73e650d674aee0dc7e402"
matthewoliver,2019-03-18 05:43:29,https://api.github.com/repos/openstack/swift/git/commits/b86bc51607a6855deaa5a365d705174836151e8b,b86bc51607a6855deaa5a365d705174836151e8b,"py3: port staticweb middleware

This patch is porting the staticweb middleware to py3.

Change-Id: I5d9a13baecedd13d2b7a8ae3dd639eaff0894441"
thiagodasilva,2019-04-08 20:49:29,https://api.github.com/repos/openstack/swift/git/commits/621e92488342f41b9cc32461b9ff99a3fabfcb4c,621e92488342f41b9cc32461b9ff99a3fabfcb4c,"Update openstack repo for libec install

Update to rocky release

Change-Id: Id35a41d689a24bf68d17647879780f5daaecdf37"
tipabu,2018-06-01 22:38:10,https://api.github.com/repos/openstack/swift/git/commits/e5e22ebeba2140b1da2e9d52d6b8ecd92bc75c88,e5e22ebeba2140b1da2e9d52d6b8ecd92bc75c88,"Make symlink work with Unicode account names

Also, ensure that the stored symlink headers really *are* url-encoded as
we've been assuming.

Change-Id: I1f300d69bec43f0deb430294da05a4ec04308040
Related-Bug: 1774238
Closes-Bug: #1821240"
zaitcev,2019-04-03 03:45:27,https://api.github.com/repos/openstack/swift/git/commits/52bc11f097f0a583b8c7ec70703a337f0acf00f4,52bc11f097f0a583b8c7ec70703a337f0acf00f4,"Use labels to mount filesystems in the guide

It was a recommended practice for years to get away from straight
names in /dev, like /dev/sda1, when mounting filesystems. The
man page for mount(8) says:

   The device name of disk partitions are unstable; hardware
   reconfiguration, adding or removing a device can cause change
   in names. This is reason why it's strongly recommended to use
   filesystem or partition identificators like UUID or LABEL.

Nonetheless, novice operators sometimes follow our deployment
guide to the letter and then get into trouble when device names
shift from under their deployments. This patch fixes the problem
without bloating up the guide with general explanations.

Change-Id: I5faae158b62e0395d6e774cd67bd868c785c2186"
tipabu,2019-03-29 21:50:06,https://api.github.com/repos/openstack/swift/git/commits/0294836d9b800de860e36699986f4de0fb1d2141,0294836d9b800de860e36699986f4de0fb1d2141,"py3: test/unit/common/middleware/s3api/test_s3token.py

Change-Id: Ibbff151703395d517452c3d6927652506a9eab66"
tipabu,2019-04-02 23:48:29,https://api.github.com/repos/openstack/swift/git/commits/adc826f376e9336394fff858d0ea7d13c8693201,adc826f376e9336394fff858d0ea7d13c8693201,"Clean up more things before running unit tests

Apparently some versions of py3 will drop symlinks in the venv.

Change-Id: I77c52b6ad776ab75c4f9713290cc42a1fcb6e0f7"
clayg,2019-04-02 12:06:09,https://api.github.com/repos/openstack/swift/git/commits/9d9f8b0ff2865f5b9899f2a60b1bd8bead31186f,9d9f8b0ff2865f5b9899f2a60b1bd8bead31186f,"add more detail to s3api test failure

Change-Id: I89d19c299cf67c459ee893cde7ed6f6716c04f9b"
tipabu,2019-03-30 00:18:49,https://api.github.com/repos/openstack/swift/git/commits/e3e79a6e48c572e045380f7110d9ef83deb55707,e3e79a6e48c572e045380f7110d9ef83deb55707,"Remove ""gross hack"" for py3pep8 env; run releasenotes under py3

Change-Id: Ib853f79bc062ec550627342d0fc5b2b92029f25c"
tipabu,2019-03-29 23:14:58,https://api.github.com/repos/openstack/swift/git/commits/6c93c5768547a3ca75865e7675ed1efd4db7e2cc,6c93c5768547a3ca75865e7675ed1efd4db7e2cc,"Run docs tox env under py3

...and fix this one warning-treated-as-error that crept in since
https://github.com/openstack/swift/commit/d185b60

Change-Id: Id46ee3ab23e2703170191528427aaa2788aba1ee"
tipabu,2019-03-29 23:06:31,https://api.github.com/repos/openstack/swift/git/commits/ffe51501c21c33d65907178511e8d8a747fd442d,ffe51501c21c33d65907178511e8d8a747fd442d,"api-ref: add link to SLO docs from multipart-manifest=put param

Drive-by: run api-ref tox env under py3.

Change-Id: Iebce47eabcb3b198d4aa7c1b8cfaf8f53300f7f9"
tipabu,2018-11-09 23:00:02,https://api.github.com/repos/openstack/swift/git/commits/9b694a332436041a96b5211ff9329b562b3a8c6d,9b694a332436041a96b5211ff9329b562b3a8c6d,"s3token: Add an underscore to the end of reseller_prefix if not present

This matches the behavior of tempauth/keystoneauth with regard to reseller_prefix.

Change-Id: I10f8bc354d0f45dd692915de86857679e9ca3446"
clayg,2019-03-26 17:05:10,https://api.github.com/repos/openstack/swift/git/commits/8f23dbad6c357a3d10641018a5858d03e3f58a0d,8f23dbad6c357a3d10641018a5858d03e3f58a0d,"Make reconciler test more stable in the gate

Change-Id: I3a831ac2cd2ef7ef83445b8d374d1435ab7292ab"
thiagodasilva,2019-03-26 14:46:02,https://api.github.com/repos/openstack/swift/git/commits/89e5927f7dd94fc28b3847944eb7dd227d516fa8,89e5927f7dd94fc28b3847944eb7dd227d516fa8,"Fix mocking time

When running on Centos the side_effect was returning a MagicMock
object instead of the intended int.

Change-Id: I73713a9a96dc415073a637d85a40304021f76072"
openstackadmin,2019-03-25 17:07:54,https://api.github.com/repos/openstack/swift/git/commits/50715acb1838fbde628e447e7b02545ce8469180,50715acb1838fbde628e447e7b02545ce8469180,"Update master for stable/stein

Add file to the reno documentation build to show release notes for
stable/stein.

Use pbr instruction to increment the minor version number
automatically so that master versions are higher than the versions on
stable/stein.

Change-Id: I6109bff3227f87d914abf7bd1d76143aaf91419d
Sem-Ver: feature"
notmyname,2019-03-19 00:09:31,https://api.github.com/repos/openstack/swift/git/commits/179fa7ccd4d6faeacc989715887b69f9422a17b2,179fa7ccd4d6faeacc989715887b69f9422a17b2,"authors/changelog update for 2.21.0 release

Change-Id: Iac51a69c71491e5a8db435aae396178a6c592c73"
stmcginnis,2019-03-22 15:23:36,https://api.github.com/repos/openstack/swift/git/commits/10cb205fe0556769dc688c9059d8802f49a4ee07,10cb205fe0556769dc688c9059d8802f49a4ee07,"Fix lower-constraint deps handling

When the lower-constraints tox target was added, it was assumed the
install_command was just running the install and that the dependencies
and constraints were being set using ""deps = "".

This fixed the install_command and deps to follow the expected pattern
so the lower-constraints job actual does install the lower constraints.

Also:
  * raise the minimum for netifaces as the existing version would fail
    to load
  * pin oslo.log to the minimum required by our minimum
    keystonemiddleware
  * fix up some error handling for ancient versions of pastedeploy
  * specify that we shouldn't install xattr on a platform we don't
    support anyway, because reasons

Change-Id: Ie78c0dabe12e01109db2b6412166c3564b87ee96
Signed-off-by: Sean McGinnis <sean.mcginnis@gmail.com>"
tipabu,2019-03-07 22:36:02,https://api.github.com/repos/openstack/swift/git/commits/64eec5fc93eb670e581cbb3a6dedb6a7aa501e99,64eec5fc93eb670e581cbb3a6dedb6a7aa501e99,"Fix how we UTF-8-ify func tests

I noticed while poking at the DLO func tests that we don't actually use
non-ascii chars when we set up the test env.

By patching the create name function earlier (in SetUpClass) we can
ensure we get some more interesting characters in our object names.

Change-Id: I9480ddf74463310aeb11ad876b79527888d8c871"
tipabu,2019-03-19 21:52:19,https://api.github.com/repos/openstack/swift/git/commits/fe3a20f2e4b745bf7d81f9bda97082b593e8794a,fe3a20f2e4b745bf7d81f9bda97082b593e8794a,"Remove uncalled function

Change-Id: Ica67815f0ddf4b00bce1ffe183735490c7f7c0b5
Related-Change: I5629de9f2e9b2331ed3f455d253efc69d030df72"
notmyname,2019-03-15 22:18:36,https://api.github.com/repos/openstack/swift/git/commits/adc568c97f5b30d9d4628eaf448f81d736ad4e51,adc568c97f5b30d9d4628eaf448f81d736ad4e51,"Fix bulk responses when using xml and Expect 100-continue

When we fixed bulk response heartbeating in https://review.openstack.org/#/c/510715/,
code review raised the issue of moving the xml header down to after the
early-exit clauses. At the time, it didn't seem to break anything, so
it was left in place. However, that insight was correct.

The purpose of the earlier patch was to force eventlet to use chunked
transfer encoding on the response in order to prevent eventlet from
buffering the whole response, thus defeating the purpose of the
heartbeat responses.

Moving the first line of the body lower (ie after the early exit
checks), allows other headers in a chunked transfer encoding response
to be appropriately processed before sending the headers. Sending the
xml declaration early causes it to get intermingled in the 100-continue
protocol, thus breaking the chunked transfer encoding semantics.

Closes-Bug: #1819252

Change-Id: I072f4dab21cd7cdb81b9e41072eb504131411dc8"
clayg,2019-02-19 02:05:46,https://api.github.com/repos/openstack/swift/git/commits/585bf40cc0d8d88849dcf11d409e8c5a2a202a8d,585bf40cc0d8d88849dcf11d409e8c5a2a202a8d,"Simplify empty suffix handling

We really only need to have one way to cleanup empty suffix dirs, and
that's normally during suffix hashing which only happens when invalid
suffixes get rehashed.

When we iterate a suffix tree using yield hashes, we may discover an
expired or otherwise reapable hashdir - when this happens we will now
simply invalidate the suffix so that the next rehash can clean it up.

This simplification removes an mis-behavior in the handling between the
normal suffix rehashing cleanup and what was implemented in ssync.

Change-Id: I5629de9f2e9b2331ed3f455d253efc69d030df72
Related-Change-Id: I2849a757519a30684646f3a6f4467c21e9281707
Closes-Bug: 1816501"
tipabu,2019-03-01 22:00:35,https://api.github.com/repos/openstack/swift/git/commits/e5eb673ccb5d3517107d28f6ce0672b066f53964,e5eb673ccb5d3517107d28f6ce0672b066f53964,"Stop monkey-patching mimetools

You could *try* doing something similar to what we were doing
there over in email.message for py3, but you would end up
breaking pkg_resources (and therefor entrypoints) in the
process.

Drive-by: have mem_diskfile implement more of the diskfile API.

Change-Id: I1ece4b4500ce37408799ee634ed6d7832fb7b721"
tipabu,2019-02-19 21:53:07,https://api.github.com/repos/openstack/swift/git/commits/d6af42b6b6d54713f09c3e1e983435bf2c3fa07d,d6af42b6b6d54713f09c3e1e983435bf2c3fa07d,"Clean up how we walk through ranges in ECAppIter

Besides being easier to reason about, this also lets us
run more unit tests under py37 which complains about a
a generator raising StopIteration

Change-Id: Ia6b945afef51bcc8ed20a7069fc60d5b8f9c9c0b"
tipabu,2019-03-13 23:20:00,https://api.github.com/repos/openstack/swift/git/commits/c9773bfd2664f7090f590d288d9010d13851ea92,c9773bfd2664f7090f590d288d9010d13851ea92,"Add non-voting py37 unit test job

Change-Id: I83f8f59023eabc97386481c18ed8bbf8fab64fa8"
tipabu,2019-03-13 23:29:09,https://api.github.com/repos/openstack/swift/git/commits/95da1d97b11b43d04d20b98838ddc0c4f20cb6be,95da1d97b11b43d04d20b98838ddc0c4f20cb6be,"Fix py35 unit test job

Looks like some base templates got moved from xenial to bionic, which
doesn't have py35. Explicitly say that this job needs xenial.

Change-Id: I44df8736d0c33fc2c58c9be6b5b8023932f14a83"
notmyname,2019-03-13 18:41:00,https://api.github.com/repos/openstack/swift/git/commits/53b56b65512fabc97890464c91faafdd0e3dbdaf,53b56b65512fabc97890464c91faafdd0e3dbdaf,"crediting contributors to the un-landed hummingbird branch

Change-Id: I51708cb2f0deca61b147589e062b520ac7a1807e"
tipabu,2018-05-30 18:43:40,https://api.github.com/repos/openstack/swift/git/commits/fa678949ae310aa0499938fef788ec04409625d9,fa678949ae310aa0499938fef788ec04409625d9,"Fix quoting for large objects

Change-Id: I46bdb6da8f778a6c86e0f8e883b52fc31e9fd44e
Partial-Bug: 1774238
Closes-Bug: 1678022
Closes-Bug: 1598093
Closes-Bug: 1762997"
bloodeagle40234,2019-02-27 03:52:06,https://api.github.com/repos/openstack/swift/git/commits/a30a477755f669a11aef5ce492f287627565d978,a30a477755f669a11aef5ce492f287627565d978,"Stop overwriting reserved term

`dir` is a reserved instruction term in python, so this patch
avoiding to assing a value to it.

Change-Id: If780c4ffb72808b834e25a396665f17bd8383870"
zhufl,2019-03-11 06:28:20,https://api.github.com/repos/openstack/swift/git/commits/13e7f3641e3bffbcf89733ebb50d3ca6847105c6,13e7f3641e3bffbcf89733ebb50d3ca6847105c6,"Do not use self in classmethod

cls should be used in classmethd, instead of self.

Change-Id: I149b18935ce909ef978f2b7147b109e11c22f923"
clayg,2019-03-07 00:37:59,https://api.github.com/repos/openstack/swift/git/commits/e1a12dc3dd04bc63d6b5b31d4ffd6a96bf8af918,e1a12dc3dd04bc63d6b5b31d4ffd6a96bf8af918,"Refactor write_affinity DELETE handling

There's some code duplication we can drop, and some tests scenarios we
can expand on.  I don't believe there's any behavior change here.

Change-Id: I2271d1cb757c989c4b0bfe228cd26c8620a151db"
tipabu,2019-03-05 22:50:22,https://api.github.com/repos/openstack/swift/git/commits/d748851766309b7def5947025457de820219f9ec,d748851766309b7def5947025457de820219f9ec,"s3token: Add note about config change when upgrading from swift3

Change-Id: I2610cbdc9b7bc2b4d614eaedb4f3369d7a424ab3"
tipabu,2019-03-05 01:37:09,https://api.github.com/repos/openstack/swift/git/commits/d185b607bbdda8b47b0bb090f045a6b4ad8ed8b9,d185b607bbdda8b47b0bb090f045a6b4ad8ed8b9,"docs: clean up SAIO formatting

Drive-by: use six.moves in s3api; fix ""unexpected indent"" warning when building
docs on py3

Change-Id: I2a354e2624c763a68fcea7a6404e9c2fde30d631"
zaitcev,2019-02-19 01:03:49,https://api.github.com/repos/openstack/swift/git/commits/860ae1e001d95df3096cfc81c42a9fe6feda067f,860ae1e001d95df3096cfc81c42a9fe6feda067f,"py3: port proxy account controller

Change-Id: I5a0d2108d01395aedb4ac18464ed2e38ad13ce84"
tipabu,2019-03-01 20:13:27,https://api.github.com/repos/openstack/swift/git/commits/8b519d1abcb4d7b34c8bbdfe535f472fe105231c,8b519d1abcb4d7b34c8bbdfe535f472fe105231c,"Clean up func tests ahead of py3

- ConfigParser.set() requires that the value be a string
- The stdlib HTTP client responses don't have a body property
- We might raise a ResponseError with response=None
- Bodies should be bytes
- Headers should be strings
- Make containers()/files() return native strings
- file() isn't a thing on py3
- format should be a parm, not a header
- Switch sorted() to use key instead of cmp
- Use integer division explicitly

Change-Id: I99d3eebc9d7ec4e8b295352294b831492135c568"
tipabu,2019-02-25 22:00:45,https://api.github.com/repos/openstack/swift/git/commits/45994e4d3187decdfa2513c0fc0fa337ec888948,45994e4d3187decdfa2513c0fc0fa337ec888948,"py3: port object updater

Change-Id: Ib1cd0659d5085ff9f8555bc08bd17a8f02f2efc0"
tipabu,2019-03-01 21:04:58,https://api.github.com/repos/openstack/swift/git/commits/4ac81ebbd73784e0e1faf7c3e983b38ea4a66754,4ac81ebbd73784e0e1faf7c3e983b38ea4a66754,"py3: fix copying unicode names

Turns out, unquote()ing WSGI strings is a great way to mangle them.

Change-Id: I42a08d84aa22a1a7ee7ccab97aaec55d845264f9"
tipabu,2019-02-21 22:34:48,https://api.github.com/repos/openstack/swift/git/commits/5d4303edbf601c5ff692a378c11ed5da9aa407c9,5d4303edbf601c5ff692a378c11ed5da9aa407c9,"manage-shard-ranges: nicer message if we can't get_info()

Tracebacks are ugly.

Change-Id: I09b907608127e4c633b554be2926245b35402dbf"
tipabu,2019-02-25 21:42:37,https://api.github.com/repos/openstack/swift/git/commits/349c54998461accd25b84e32781a10938d4167a4,349c54998461accd25b84e32781a10938d4167a4,"py3: port object auditor

Change-Id: Ic00273e5d3120f7daba1d3cbf084159f1e7d8bbb"
zaitcev,2019-02-27 05:06:52,https://api.github.com/repos/openstack/swift/git/commits/61e6ac0ebddc630390dfbe1292cd392c57f0ca07,61e6ac0ebddc630390dfbe1292cd392c57f0ca07,"py3: port formpost middleware

Change-Id: I8f3d4d5f6976ef5b63facd9b5723aac894066b74"
notmyname,2019-02-26 00:38:07,https://api.github.com/repos/openstack/swift/git/commits/04a0ff2e969cde4192d54a47ef11e9c0505a9555,04a0ff2e969cde4192d54a47ef11e9c0505a9555,"added changelog entries from stable releases

Change-Id: Ia2ba8f7a998bc55ba3fba3ce37f1d2974646494f"
tipabu,2019-02-22 22:23:15,https://api.github.com/repos/openstack/swift/git/commits/5409c4f347ee0f600249794844d61635136fb075,5409c4f347ee0f600249794844d61635136fb075,"Make test_multiphase_put_drains_extra_commit_junk_disconnect less flakey

Change-Id: I82503b13e4541196ad056e861221e9429c7f2c1c"
tipabu,2019-02-21 18:13:48,https://api.github.com/repos/openstack/swift/git/commits/be3e21582967724f23db6e671f2c29128d39472e,be3e21582967724f23db6e671f2c29128d39472e,"py3:  display help if no subcommand provided to manage-shard-ranges

That way we don't traceback when you just provide a DB file.

At some point, py3 switched to having optional subparsers. In py37,
they added a kwarg to say whether a subparser is optional or required,
but for the sake of earlier versions, we have to check whether it was
set manually and cannot rely on argparse doing it for us. See also:

- https://bugs.python.org/issue9253
- https://github.com/python/cpython/commit/aaf6fc0
- https://bugs.python.org/issue33109
- https://github.com/python/cpython/commit/8ebf5ce

Change-Id: Iac8048ad0e23ffb28b914fe880c4b6538bc41c86"
tipabu,2018-10-18 17:35:31,https://api.github.com/repos/openstack/swift/git/commits/baf18edc00851f6749a40794587ca14a52135bf3,baf18edc00851f6749a40794587ca14a52135bf3,"Clean up account-reaper a bit

- Drop the (partial) logging translation
- Save our log concatenations until the end
- Stop encoding object names; direct_client is happy to take Unicode
- Remove a couple loop breaks that were only used by tests

Change-Id: I4a4f301a7a6cb0f217ca0bf8712ee0291bbc14a3
Partial-Bug: #1674543"
tipabu,2019-02-20 22:59:49,https://api.github.com/repos/openstack/swift/git/commits/b4e47007655e97625d1a88dad1a9f5501340658e,b4e47007655e97625d1a88dad1a9f5501340658e,"py3: port some more middleware tests

  * name_check
  * quotas
  * ratelimit
  * read_only
  * recon

Note that the middlewares themselves seem to be fine.

Fix proxy-logging for PEP-0479.

Change-Id: If47d09e8e8c09b9f50451f93d5b0803aa58743a7"
zaitcev,2019-02-19 01:18:11,https://api.github.com/repos/openstack/swift/git/commits/3be384c810f0c828f00c2ce8cf26c452673e0138,3be384c810f0c828f00c2ce8cf26c452673e0138,"py3: port proxy container controller

Change-Id: Id74a93f10bc5c641d62141af33bef68e503f7e04"
zaitcev,2018-05-22 21:17:12,https://api.github.com/repos/openstack/swift/git/commits/575538b55b1fccc0fb697ad99cab78c92f6c06b7,575538b55b1fccc0fb697ad99cab78c92f6c06b7,"py3: port the container

This started with ShardRanges and its CLI. The sharder is at the
bottom of the dependency chain. Even container backend needs it.
Once we started tinkering with the sharder, it all snowballed to
include the rest of the container services.

Beware, this does affect some of Python 2 code. Mostly it's trivial
and obviously correct, but needs checking by reviewers.

About killing the stray ""from __future__ import unicode_literals"":
we do not do it in general. The specific problem it caused was
a failure of functional tests because unicode leaked into a field
that was supposed to be encoded. It is just too hard to track the
types when rules change from file to file, so off with its head.

Change-Id: Iba4e65d0e46d8c1f5a91feb96c2c07f99ca7c666"
tipabu,2019-02-19 21:14:34,https://api.github.com/repos/openstack/swift/git/commits/8e045d0de213457e97a943d0e6f75fe456c377e1,8e045d0de213457e97a943d0e6f75fe456c377e1,"versioned_writes: stop trying to catch HTTPPreconditionFailed

* We just caught it to raise another one
* On newer versions of python, we wouldn't actually catch
  anything, because HTTPPreconditionFailed is not an instance
  of BaseException -- it's a partial function application
  which when called will return an exception.

Change-Id: Ia44e832e4198e75f3337884c4612f4e9fe3b9e0b"
tipabu,2019-02-19 21:05:24,https://api.github.com/repos/openstack/swift/git/commits/ce261b12e68bf8a017dad7b11335e7555a270610,ce261b12e68bf8a017dad7b11335e7555a270610,"py3: port versioned_writes

Change-Id: I1095262563eff92d6d0a399eb0d5f9d3045becf3"
tipabu,2019-02-19 20:11:41,https://api.github.com/repos/openstack/swift/git/commits/f4689dd22fe460a618dbe644756ff914b1b032c4,f4689dd22fe460a618dbe644756ff914b1b032c4,"probe tests: wait to start replicators until after verifying initial state

Change-Id: Ida7c776201a068d44572d1e94472c975c4bc8e36"
zaitcev,2019-01-29 23:15:44,https://api.github.com/repos/openstack/swift/git/commits/db9c90584943a02da448531460053492af6886bf,db9c90584943a02da448531460053492af6886bf,"py3: port copy middleware

Change-Id: I2701358f9f01f368c892a010a543ecc1f17684a3"
tipabu,2018-12-27 23:01:52,https://api.github.com/repos/openstack/swift/git/commits/1e3f8a0e5370ea710b13b9aad4ba4f13613b8f41,1e3f8a0e5370ea710b13b9aad4ba4f13613b8f41,"Address some review comments

Change-Id: Iacff8a7d7e37557b9a7694ac2df0cfc6b3492024
Related-Change: Ia5815602d05925c5de110accc4dfb1368203bd8d"
tipabu,2019-02-14 21:02:01,https://api.github.com/repos/openstack/swift/git/commits/926a024135d380999d9f8494b19b59bb87a7f5b6,926a024135d380999d9f8494b19b59bb87a7f5b6,"Fix up flakey TestContainer.test_PUT_bad_metadata

Change-Id: I7489f2bb95c27d1ddd5e8fa7e5786904100fb567"
tipabu,2019-02-14 00:18:42,https://api.github.com/repos/openstack/swift/git/commits/78fb722abb0efb09ec7d6590b7d1fb68526d7bb3,78fb722abb0efb09ec7d6590b7d1fb68526d7bb3,"Address some review comments

Change-Id: I32a19837f77e8a543994aab18e0f5258b23aeb64
Related-Change: I83aa5d72084ca183e00dc6d69e417fba310a2c59"
asettle,2019-02-13 11:19:31,https://api.github.com/repos/openstack/swift/git/commits/693f931a593cd7369e04511413f5a0d2f169834a,693f931a593cd7369e04511413f5a0d2f169834a,"Fixing target for cross-ref 'get_data_dir'

At the moment, the `get_data_dir` ref in [0] is not
pointing to anything. This patch amends that and
links it to the correct policy string.

Without updating this change, local tox builds
for swift documentation fail with the following
error: Warning, treated as error: /home/asettle/openstack/swift/doc
/source/overview_policies.rst:555:more than one target found for
cross-reference u'get_data_dir': swift.obj.reconstructor.get_data_dir,
swift.obj.diskfile.get_data_dir, swift.obj.replicator.get_data_dir

[0] https://docs.openstack.org/swift/rocky/overview_policies.html#object-server

Change-Id: I7c699e4fc46706a4971fce5a85ed335f471d3a2b"
tipabu,2019-02-13 17:02:08,https://api.github.com/repos/openstack/swift/git/commits/002d21991e100ee6199e79679ae990c96ea05730,002d21991e100ee6199e79679ae990c96ea05730,"Make get_data/async/tmp_dir explicit

functools.partial is all well and good in code, but apparently it
doesn't play real well with docs.

Change-Id: Ia460473af9038d890346502784e3cf4d0e1d1c40"
zaitcev,2019-02-12 03:42:34,https://api.github.com/repos/openstack/swift/git/commits/ac01d186b44856385a13fa77ecf527238c803443,ac01d186b44856385a13fa77ecf527238c803443,"Leave less garbage in /var/tmp

All our tests that invoked broker.set_sharding_state() created
/var/tmp/tmp, when it called DatabaseBroker.get_device_path(),
then added ""tmp"" to it. We provided 1 less level, so it walked up
ouside of the test's temporary directory.

The case of ""cleanUp"" instead of ""tearDown"" didn't break out of
jail, but left trash in /var/tmp all the same.

Change-Id: I8030ea49e2a977ebb7048e1d5dcf17338c1616df"
clayg,2019-02-11 20:43:01,https://api.github.com/repos/openstack/swift/git/commits/771963c92654338011d3dc907044b2ee3f405dd3,771963c92654338011d3dc907044b2ee3f405dd3,"Increase node_timeout in gate

Give storage nodes more time to complete requests for multi-node upgrade
and probetests.

Also slightly decouple probetests from default configs.

Change-Id: I334ef517d833916a3b7be3151a812d4f9c66a6e1"
tipabu,2018-07-27 20:03:36,https://api.github.com/repos/openstack/swift/git/commits/bb1a2d45685a3b2230f21f7f6ff0e998e666723e,bb1a2d45685a3b2230f21f7f6ff0e998e666723e,"Display crypto data/metadata details in swift-object-info

Change-Id: If577c69670a10decdbbf5331b1a38d9392d12711"
clayg,2019-02-04 21:46:40,https://api.github.com/repos/openstack/swift/git/commits/ea8e545a27f06868323ff91c1584d18ab9ac6cda,ea8e545a27f06868323ff91c1584d18ab9ac6cda,"Rebuild frags for unmounted disks

Change the behavior of the EC reconstructor to perform a fragment
rebuild to a handoff node when a primary peer responds with 507 to the
REPLICATE request.

Each primary node in a EC ring will sync with exactly three primary
peers, in addition to the left & right nodes we now select a third node
from the far side of the ring.  If any of these partners respond
unmounted the reconstructor will rebuild it's fragments to a handoff
node with the appropriate index.

To prevent ssync (which is uninterruptible) receiving a 409 (Conflict)
we must give the remote handoff node the correct backend_index for the
fragments it will recieve.  In the common case we will use
determistically different handoffs for each fragment index to prevent
multiple unmounted primary disks from forcing a single handoff node to
hold more than one rebuilt fragment.

Handoff nodes will continue to attempt to revert rebuilt handoff
fragments to the appropriate primary until it is remounted or
rebalanced.  After a rebalance of EC rings (potentially removing
unmounted/failed devices), it's most IO efficient to run in
handoffs_only mode to avoid unnecessary rebuilds.

Closes-Bug: #1510342

Change-Id: Ief44ed39d97f65e4270bf73051da9a2dd0ddbaec"
tipabu,2019-02-08 17:36:35,https://api.github.com/repos/openstack/swift/git/commits/8a6159f67b6a3e7917e68310e4c24aae819fe187,8a6159f67b6a3e7917e68310e4c24aae819fe187,"Stop using duplicate dev IDs in write_fake_ring

This would cause some weird issues where get_more_nodes() would actually
yield out something, despite us only having two drives.

Change-Id: Ibf658d69fce075c76c0870a542348f220376c87a"
zaitcev,2019-02-08 03:27:28,https://api.github.com/repos/openstack/swift/git/commits/828a241caae0b05fdcd06712244882545e8cfe2c,828a241caae0b05fdcd06712244882545e8cfe2c,"py3: adapt proxy base controller

Change-Id: I83aa5d72084ca183e00dc6d69e417fba310a2c59"
tipabu,2019-02-07 00:48:17,https://api.github.com/repos/openstack/swift/git/commits/43103319d0aa27f24e6520c0962bd19e55568ad4,43103319d0aa27f24e6520c0962bd19e55568ad4,"encryption: Stop being cutesy with os.path.join()

Turns out, we *care* about the path, and object paths *don't follow
filesystem semantics*!

Be explicit: /<account>/<container>/<object>

Bump the key version number so we know whether we can trust the full path
or not.

Change-Id: Ide9d44cc18575306363126a93d91f662c6ee23e0
Related-Bug: 1813725"
clayg,2019-02-06 16:03:50,https://api.github.com/repos/openstack/swift/git/commits/c6d213f826aee3b3888e50602ebe87fdbcaacffc,c6d213f826aee3b3888e50602ebe87fdbcaacffc,"Consolidate retry code in functest client

We added retries to the functest client ages ago, but object PUTs were
skipped because they used slightly different machinery.

We added retires to PUT later in the related change, but it added it's
own slightly different retry machinery.

Although neither is perfect (e.g. no exponential backoff) - this change
moves them closer together, so that future improvements can help both.

Related-Change-Id: I90a319943e948ac7df86cb29046f711adbb2fe20

Change-Id: If65dbc6e524b6ba83b27f5697cae0927a3891320"
zaitcev,2019-01-30 23:35:37,https://api.github.com/repos/openstack/swift/git/commits/988e719232681761dcbbef91733b91382ada58c4,988e719232681761dcbbef91733b91382ada58c4,"py3: port object controller in proxy

When looking at the tuple thing, remember that tuples are comparable
with ints in py2, but they do not compare like (100)[0]. Instead, they
are always greater, acting almost like MAX_INT. No wonder py3 banned
that practice.

We had a much of other noncomparables, but we dealt with them in
obvious ways, like adding key= to sorted().

Change-Id: I52e96406c3c1f39b98c1d81bdc057805cd1a6278"
cschwede,2016-06-13 08:06:29,https://api.github.com/repos/openstack/swift/git/commits/90b161b74fdf75b063c1a8b703ab2f4fd78bc432,90b161b74fdf75b063c1a8b703ab2f4fd78bc432,"Add content-encoding parameter to formpost middleware

The content-type parameter can already be set when uploading file
objects, for example as a hidden field in the form sent by the browser.

Sometimes it is also required to set the content-encoding of an object,
for example when uploading a gzipped logfile or html file; see [1] for
further reference. This patch adds this option and tests existing and
new functionality for content-type and content-encoding.

[1] https://tools.ietf.org/html/rfc2616#section-14.11

Change-Id: I3dd47c7c999c29d62075955301fd763ad0b2c602"
tipabu,2019-02-05 23:58:35,https://api.github.com/repos/openstack/swift/git/commits/3e2b8c95fdb962ff9c9db803bc180b0f4edb14e9,3e2b8c95fdb962ff9c9db803bc180b0f4edb14e9,"Return 503 when account auto-create fails

...and save 500 for things that would actually leave tracebacks in logs.

Change-Id: I02b062ccabba0dcc1542d063e0538f0b1bbbbca9"
tipabu,2019-02-05 16:48:48,https://api.github.com/repos/openstack/swift/git/commits/f319c412acd0c2b2aae7e1bb1ae92f217859d839,f319c412acd0c2b2aae7e1bb1ae92f217859d839,"Fix flakey symlink setup/teardown

Change-Id: I63c86619eb1fe89f2748882a490fb102872ad46f"
clayg,2019-01-30 20:39:12,https://api.github.com/repos/openstack/swift/git/commits/fb0e7837af119dfb6bd30627ac8f9f4eb5a3e890,fb0e7837af119dfb6bd30627ac8f9f4eb5a3e890,"Cleanup EC and SSYNC frag index parameters

An object node should reject a PUT with 409 when the timestamp is less
than or equal to the timestamp of an existing version of the object.

However, if the PUT is part of an SSYNC, and the fragment archive has a
different index than the one on disk we may store it.

We should store it we're the primary holder for that fragment index.

Back before the related change we used to revert fragments to handoffs
and it caused a lot of problems.  Mainly multiple frag indexes piling up
on one handoff node.  Eventually we settled on handoffs only reverting
to primaries but there was some crufty flailing left over.

When EC frag duplication (multi-region EC) came in we also added a new
complexity because a node's primary index (the index in part_nodes list)
was no longer universially equal to the EC frag index (the storage
policy backend end index).  There was a few places we assumed
node_index == frag_index, some of which caused bugs which we've fixed.

This change tries to clean all that up.

Related-Change-Id: Ie351d8342fc8e589b143f981e95ce74e70e52784

Change-Id: I3c5935e2d5f1cd140cf52df779596ebd6442686c"
tipabu,2019-01-14 22:32:31,https://api.github.com/repos/openstack/swift/git/commits/2bd7b7a109b27d8225e11fd46c6cb1600f14c4ad,2bd7b7a109b27d8225e11fd46c6cb1600f14c4ad,"py3 object-server follow-ups

Change-Id: Ief7d85af8d3e1d5e03a6484a889c9146d69f1377
Related-Change: I203a54fddddbd4352be0e6ea476a628e3f747dc1"
tipabu,2019-02-01 16:57:55,https://api.github.com/repos/openstack/swift/git/commits/dd379e7f5e44fbfbbb3bc66165bd94b319496df5,dd379e7f5e44fbfbbb3bc66165bd94b319496df5,"func tests: Be willing to retry PUTs

We've seen a lot of gate failures that involve one or just a couple of
tests dying with something like

  Captured traceback:
  ~~~~~~~~~~~~~~~~~~~
      Traceback (most recent call last):
        File ""test/functional/tests.py"", line 562, in testFileListingLimitMarkerPrefix
          self.assertTrue(file_item.write_random())
        File ""test/functional/swift_test_client.py"", line 1069, in write_random
          if not self.write(data, hdrs=hdrs, parms=parms, cfg=cfg):
        File ""test/functional/swift_test_client.py"", line 1047, in write
          self.conn.make_path(self.path))
      test.functional.swift_test_client.ResponseError: 503: 'Service Unavailable'

Let's give it a couple retries, see if we can make the gate more
reliable.

Change-Id: I90a319943e948ac7df86cb29046f711adbb2fe20"
tipabu,2019-02-01 16:24:25,https://api.github.com/repos/openstack/swift/git/commits/d3946d97067c651c61bd84ed987912a69dfb92dc,d3946d97067c651c61bd84ed987912a69dfb92dc,"Fix flakey func test teardown

Change-Id: I1cf9894af01f864fab5dc71c38f0fd7fe06faec2"
tipabu,2019-02-01 02:05:19,https://api.github.com/repos/openstack/swift/git/commits/32d2af06efd7925926dae01276c0feefde27326b,32d2af06efd7925926dae01276c0feefde27326b,"Fix flakey func test setup

Change-Id: Ib52fb94f34716400224bf2654beefbcc250e3b58"
tipabu,2019-02-01 01:17:56,https://api.github.com/repos/openstack/swift/git/commits/61c9aa4bf3f7678fc0b7ec93fca7633ebb7e45ad,61c9aa4bf3f7678fc0b7ec93fca7633ebb7e45ad,"probetests: make negative assertion more meaningful

In test_replication_servers_working, we delete a bunch of directories
without deleting hashes.pkl, then verify that nothing at that level is a
directory.

This would be trivially true except that throughout the test, we have
the replicators running constantly. However, we never verified that the
replicators actually *have* run and had a chance to re-create the
missing directories.

Now, stop the replicators before doing the deletes, run them
synchronously between doing the deletes and verifying that there are no
directories, and start them again before the final set of assertions.

Change-Id: I841f8250eb7abfb0fcdfca5c106f65e6e94dce0c"
clayg,2018-08-07 23:49:54,https://api.github.com/repos/openstack/swift/git/commits/7ed12fa6c7f233188320acf4ab96c3b72f4c9757,7ed12fa6c7f233188320acf4ab96c3b72f4c9757,"Move KMIP conf validation out of _get_root_secret

Related-Change-Id: Iddc0f333861b6c1f81e181f006cd592b5eb6ea17

Change-Id: I3d43b738de3947c33d4607225227f0116aa4cea1"
tipabu,2019-01-31 22:55:05,https://api.github.com/repos/openstack/swift/git/commits/c0dbf5b8854a0887edba82a4591b0b1d0810acaf,c0dbf5b8854a0887edba82a4591b0b1d0810acaf,"sharding: Make replicator logging less scary

When we abort the replication process because we've got shard ranges and
the sharder is now responsible for ensuring object-row durability, we
log a warning like ""refusing to replicate objects"" which sounds scary.

That's because it *is*, of course -- if the sharder isn't running,
whatever rows that DB has may only exist in that DB, meaning we're one
drive failure away from losing track of them entirely.

However, when the sharder *is* running and everything's happy, we reach
a steady-state where the root containers are all sharded and none of
them have any object rows to lose. At that point, the warning does more
harm than good.

Only print the scary ""refusing to replicate"" warning if we're still
responsible for some object rows, whether deleted or not.

Change-Id: I35de08d6c1617b2e446e969a54b79b42e8cfafef"
tipabu,2019-01-31 21:54:04,https://api.github.com/repos/openstack/swift/git/commits/b2b1f96b0eb2062676f01ef46ec12f6badc73ff3,b2b1f96b0eb2062676f01ef46ec12f6badc73ff3,"docs: clean up Object Versioning page

Before, there were some ugly blockquotes getting added for no good
reason.

Change-Id: I871ff743f0a30d2639b937f338dd37ce2eabd1f9"
tipabu,2019-01-31 21:22:04,https://api.github.com/repos/openstack/swift/git/commits/1f173fcedefad75d47d030d701b51050cd9beb94,1f173fcedefad75d47d030d701b51050cd9beb94,"s3api: fix up flakey LastModified assertions

I know I've seen test_obj.py:TestS3ApiObj.test_object_PUT_copy_metadata_copy
fail in the gate on occassion; testing locally, I saw it fail twice out
of 5,000 attempts, but I suspect the prevalence is higher in the more
resource-constrained gate.

With this change, I saw no failures through 15,000 attempts.

Change-Id: I7c3cd4fecf5c8db355cc07f18a07d27962309b9b"
CyrilRoelandteNovance,2019-01-29 02:28:26,https://api.github.com/repos/openstack/swift/git/commits/5037ab577ab2744035160b2d506ab5b0e7524818,5037ab577ab2744035160b2d506ab5b0e7524818,"Python3: fix test/unit/obj/test_replicator.py

Change-Id: Ib494a974ac41f4c23c7a1125470d532c36d6f7c6"
tipabu,2019-01-31 20:25:34,https://api.github.com/repos/openstack/swift/git/commits/9b6080536ba694e8f4bbc3082334f06973847ce3,9b6080536ba694e8f4bbc3082334f06973847ce3,"py3: proxy some logger properties in LogAdapter

Seen in a (failed) py35 gate job:

    test-replicator ERROR: Error syncing partition:
    Traceback (most recent call last):
      File "".../swift/swift/obj/replicator.py"", line 626, in update
        self.replication_cycle))
      File "".../eventlet/tpool.py"", line 129, in execute
        six.reraise(c, e, tb)
      File "".../six.py"", line 693, in reraise
        raise value
      File "".../eventlet/tpool.py"", line 83, in tworker
        rv = meth(*args, **kwargs)
      File "".../swift/swift/obj/diskfile.py"", line 1174, in _get_hashes
        hashed, hashes = self.__get_hashes(*args, **kwargs)
      File "".../swift/swift/obj/diskfile.py"", line 1237, in __get_hashes
        self.logger.debug('Run listdir on %s', partition_path)
      File ""/usr/lib/python3.5/logging/__init__.py"", line 1596, in debug
        self.log(DEBUG, msg, *args, **kwargs)
      File ""/usr/lib/python3.5/logging/__init__.py"", line 1638, in log
        if self.isEnabledFor(level):
      File ""/usr/lib/python3.5/logging/__init__.py"", line 1646, in isEnabledFor
        if self.logger.manager.disable >= level:
    AttributeError: 'LogAdapter' object has no attribute 'manager'

Sure sounds like https://bugs.python.org/issue31457 to me.

Change-Id: I2afb234d096be17bc16292b288930e2b7a715da4"
smerritt,2018-06-13 21:28:28,https://api.github.com/repos/openstack/swift/git/commits/0e81ffd1e1481a73146fce17f61f2ab9e01eb684,0e81ffd1e1481a73146fce17f61f2ab9e01eb684,"Fix socket leak on object-server death

Consider a client that's downloading a large replicated object of size
N bytes. If the object server process dies (e.g. with a segfault)
partway through the download, the proxy will have read fewer than N
bytes, and then read(sockfd) will start returning 0 bytes. At this
point, the proxy believes the object download is complete, and so the
WSGI server waits for a new request to come in. Meanwhile, the client
is waiting for the rest of their bytes. Until the client times out,
that socket will be held open.

The fix is to look at the Content-Length and Content-Range headers in
the response from the object server, then retry with another object
server in case the original GET is truncated. This way, the client
gets all the bytes they should.

Note that ResumingGetter already had retry logic for when an
object-server is slow to send bytes -- this extends it to also cover
unexpected disconnects.

Change-Id: Iab1e07706193ddc86832fd2cff0d7c2cb6d79ad9
Related-Change: I74d8c13eba2a4917b5a116875b51a781b33a7abf
Closes-Bug: 1568650"
thiagodasilva,2019-01-29 02:30:57,https://api.github.com/repos/openstack/swift/git/commits/0668731839599180e581338320c5d216b8d8bb1f,0668731839599180e581338320c5d216b8d8bb1f,"Change how O_TMPFILE support is detected

Previously o_tmpfile support was detected by checking the
kernel version as it was officially introduced in XFS in 3.15.
The problem is that RHEL has backported the support to at least
RHEL 7.6 but the kernel version is not updated.

This patch changes o_tmpfile is detected by actually attempting to
open a file with the O_TMPFILE flag and keeps the information cached
in DiskFileManager so that the check only happens once while process
is running.

Change-Id: I3599e2ab257bcd99467aee83b747939afac639d8"
clayg,2019-01-29 18:08:35,https://api.github.com/repos/openstack/swift/git/commits/ca98b5b378ef4158b3072831399c51d019807e17,ca98b5b378ef4158b3072831399c51d019807e17,"Quiet down a unittest

Change-Id: Id47ee09a347a51e2f736d64ec53f24267c6bc253"
CyrilRoelandteNovance,2019-01-29 02:19:35,https://api.github.com/repos/openstack/swift/git/commits/c4363aa6eaa2a5ea8e7dc686291591536a46bc19,c4363aa6eaa2a5ea8e7dc686291591536a46bc19,"Python3: Fix test/unit/common/test_container_sync_realms.py

Change-Id: I9bb6e55691821891172d375d0bf097148d66010d"
thiagodasilva,2019-01-22 15:23:22,https://api.github.com/repos/openstack/swift/git/commits/700fcc735336a904d19554da053fb77209f7073e,700fcc735336a904d19554da053fb77209f7073e,"Remove duplicate statement

Change-Id: I249a1d5c0c025d571587e225e833a865ed6409e0"
tipabu,2019-01-15 22:00:14,https://api.github.com/repos/openstack/swift/git/commits/1d4309dd7151993319cafb66d6da91479637c754,1d4309dd7151993319cafb66d6da91479637c754,"misc test cleanup

Change-Id: I21823e50af6d60bb5ee02427ddc499d700c43577
Related-Change: Ib33ff305615b2d342f0d673ded5ed8f11b663feb
Related-Change: I0855d8a549d1272d056963abed03338f80d68a53"
bloodeagle40234,2019-01-15 11:06:25,https://api.github.com/repos/openstack/swift/git/commits/ca4d6ec9924275b998d4748980ef8a3597bf7936,ca4d6ec9924275b998d4748980ef8a3597bf7936,"Save original index in the determine_chunk_destinations test

Unfortunately (fortunately?), it has not been realizing as an issue
but appearently we intended to save the fragment index before the test
punches the hole in the putter list.

Change-Id: Ib33ff305615b2d342f0d673ded5ed8f11b663feb"
clayg,2019-01-10 21:16:45,https://api.github.com/repos/openstack/swift/git/commits/1d9204ac4362af75d0a6ac221cf4cc44cd003ec6,1d9204ac4362af75d0a6ac221cf4cc44cd003ec6,"Use remote frag index to calculate suffix diff

... instead of the node index, which is different in multi-region EC and
wrongly leads us to always think we're out of sync.

Closes-Bug: #1811268

Change-Id: I0855d8a549d1272d056963abed03338f80d68a53"
zaitcev,2018-11-29 07:31:13,https://api.github.com/repos/openstack/swift/git/commits/5b5ed29ab4566b20f6b6eecd6b9143bacd91ea9d,5b5ed29ab4566b20f6b6eecd6b9143bacd91ea9d,"py3: object server

This does not do anything about replicator or other daemons,
only ports the server.

- wsgi_to_bytes(something.get('X-Foo')) assumes that None is possible
- Dunno if del-in-for-in-dict calls for clone or list(), using list()
- Fixed the zero-copy with EventletPlungerString(bytes)
- Yet another reminder that Request.blank() takes a WSGI string path

Curiously enough, the sleep(0) before checking for logging was
already present in the tests. The py3 scheduling merely forces us
to do it consistently throughout.

Change-Id: I203a54fddddbd4352be0e6ea476a628e3f747dc1"
kevin-wyx,2018-04-23 09:44:30,https://api.github.com/repos/openstack/swift/git/commits/a4298fb3ab071b1284fb7080f92c305c6b1cb445,a4298fb3ab071b1284fb7080f92c305c6b1cb445,"s3api: Fix get_container_info missing some sysmeta info.

When get_container_info is called and not authenticated, it will
make a HEAD subrequest and get info by passing resp.sw_headers to
headers_to_container_info. This will lose all sysmeta stored in
resp.sysmeta_headers.

The patch fixes this by passing all sw_headers and
sysmeta_headers to headers_to_container_info.

Change-Id: I6e538ed7a748b60bdb9db7e894eaedc9d72559c1
Closes-Bug: #1765679"
tipabu,2019-01-10 01:35:05,https://api.github.com/repos/openstack/swift/git/commits/29b877de712cc6baf0cfb41bfa53ae018b04de8b,29b877de712cc6baf0cfb41bfa53ae018b04de8b,"s3api: fix partition between S3 and Swift headers

In swift3 [1], we partitioned between swift3-specific sysmeta headers and
all other swift headers. During the transition to s3api [2], we were
sure to include a support for reading swift3 sysmeta as s3api sysmeta,
but we forgot to add all *other* sysmeta to the swift headers!

Fix that, and rename sw_sysmeta_headers to s3_sysmeta_headers to
more-accurately reflect its purpose.

[1] https://github.com/openstack/swift3/blob/1.12/swift3/response.py#L90-L96
[2] https://review.openstack.org/#/c/557623/

Change-Id: Id6de002b18ba784ad53bda38855376159c7d2ba7"
tipabu,2018-12-11 23:29:35,https://api.github.com/repos/openstack/swift/git/commits/3a8f5dbf9c49fdf1cf2d0b7ba35b82f25f88e634,3a8f5dbf9c49fdf1cf2d0b7ba35b82f25f88e634,"Verify client input for v4 signatures

Previously, we would use the X-Amz-Content-SHA256 value when calculating
signatures, but wouldn't actually check the content that was sent. This
would allow a malicious third party that managed to capture the headers
for an object upload to overwrite that with arbitrary content provided
they could do so within the 5-minute clock-skew window.

Now, we wrap the wsgi.input that's sent on to the proxy-server app to
hash content as it's read and raise an error if there's a mismatch. Note
that clients using presigned-urls to upload have no defense against a
similar replay attack.

Notwithstanding the above security consideration, this *also* provides
better assurances that the client's payload was received correctly. Note
that this *does not* attempt to send an etag in footers, however, so the
proxy-to-object-server connection is not guarded against bit-flips.

In the future, Swift will hopefully grow a way to perform SHA256
verification on the object-server. This would offer two main benefits:

  - End-to-end message integrity checking.
  - Move CPU load of calculating the hash from the proxy (which is
    somewhat CPU-bound) to the object-server (which tends to have CPU to
    spare).

Change-Id: I61eb12455c37376be4d739eee55a5f439216f0e9
Closes-Bug: 1765834"
tipabu,2018-11-30 01:55:55,https://api.github.com/repos/openstack/swift/git/commits/1a51604b26e7cd1b3f3e7d30176b251501070e07,1a51604b26e7cd1b3f3e7d30176b251501070e07,"s3api: Look for more indications of aws-chunked uploads

Change-Id: I7dda8a25c9e13b0d81293f0a966c34713c93f6ad
Related-Bug: 1810026"
tipabu,2019-01-04 23:06:06,https://api.github.com/repos/openstack/swift/git/commits/b35fc41184edf8b6d88ccbf5a4e34a7924e9c46a,b35fc41184edf8b6d88ccbf5a4e34a7924e9c46a,"s3api: Delete multipart uploads via multi-delete

We have code that's *supposed* to do it, but we weren't reading the
result of the bulk-delete, so we never actually deleted anything!

Change-Id: I5c972749cadf903161456f34371a6f83ebc05eb9
Closes-Bug: 1810567"
tipabu,2018-12-27 22:34:05,https://api.github.com/repos/openstack/swift/git/commits/37693a4e1523fc61d653e231e57d33b37464c2b5,37693a4e1523fc61d653e231e57d33b37464c2b5,"Run ceph-s3-tests job less

We don't need it for unit-test-only changes or most doc changes.

Change-Id: I803e0dc6861786db44cbcf5943032424ba319d54"
zaitcev,2018-11-07 23:35:23,https://api.github.com/repos/openstack/swift/git/commits/0d29b01d2b8cc5c3a1a1cadf4551839b50eb5d2b,0d29b01d2b8cc5c3a1a1cadf4551839b50eb5d2b,"py3: Port the acl, account_quotas, cname_lookup, container_sync

These are trivial, but need to be done sooner or later.

About the isEnabledFor, our FakeLogger causes this on py3:
  AttributeError: 'FakeLogger' object has no attribute '_cache'
Adding the isEnabledFor short-cuts a need for that private member.

Change-Id: I4d1df857a24801fe2a396dc003719f54d099f72c"
zaitcev,2018-12-19 03:35:22,https://api.github.com/repos/openstack/swift/git/commits/9856d6eb23dd42b0954d9ae4be8ad125b97b2ce2,9856d6eb23dd42b0954d9ae4be8ad125b97b2ce2,"Add a comment about the module list for py3 in tox.ini

As our PTL said, ""adding some comments"" ""in lieu of setting up more
comprehensive projet tracking systems"".

Change-Id: Ic38ff2b74366f9839e999d11050eefa753c71be3"
zaitcev,2018-10-23 05:57:50,https://api.github.com/repos/openstack/swift/git/commits/0f505ad968571687181834da3559db6e595a52db,0f505ad968571687181834da3559db6e595a52db,"py3: adapt the account server completely

This version scatters the cancer of WSGI strings around, but
reduces the size of the patch. In particular, we can continue
to iterate strings.

Change-Id: Ia5815602d05925c5de110accc4dfb1368203bd8d"
notmyname,2018-12-18 22:25:23,https://api.github.com/repos/openstack/swift/git/commits/02841ee0c68d57af8e166e4d3e4829676d1c38ea,02841ee0c68d57af8e166e4d3e4829676d1c38ea,"fix documentation of default

Change-Id: I7c716dea5e0a5b8849b84b1bb25d5294591dcd51"
tipabu,2018-10-15 22:44:03,https://api.github.com/repos/openstack/swift/git/commits/fcccb52ff492f59bc26cc650761a3597216dd143,fcccb52ff492f59bc26cc650761a3597216dd143,"s3api: Stop relying on container listings during multipart uploads

Previously, we would list the segments container before completing a
multipart upload so that we could verify ETags and sizes before
attempting to create the SLO. However, container listings are only
eventually-consistent, which meant that clients could receive a 400
response complaining that parts could not be found, even though all
parts were uploaded successfully.

Now, use the new SLO validator callback to validate segment sizes, and
use the existing SLO checks to validate ETags.

Change-Id: I57ae6756bd5f06b80cf03a6b40bf58c845f710fe
Closes-Bug: #1636663"
notmyname,2018-12-15 00:53:42,https://api.github.com/repos/openstack/swift/git/commits/de1c4f0d5301ecea6497257a086dec6e71c89972,de1c4f0d5301ecea6497257a086dec6e71c89972,"add an upgrade job from rocky

Change-Id: I1e2a01e3a9ede8353bb833e0aae03af8d385412c"
notmyname,2018-12-12 18:21:07,https://api.github.com/repos/openstack/swift/git/commits/fbad538d21688c6e76f2196bd599ff1b22f12582,fbad538d21688c6e76f2196bd599ff1b22f12582,"authors/changelog for 2.20.0 release

Change-Id: I149cb14cbfef456b6368564dae8529faf430333d"
tipabu,2018-12-14 22:23:42,https://api.github.com/repos/openstack/swift/git/commits/defae1dd14ea5791ff6a03ef0701bcdf2988dd38,defae1dd14ea5791ff6a03ef0701bcdf2988dd38,"Fix rolling upgrade job

Previously, we'd install development versions of Swift as root, causing
later tox runs as zuul to fail on a permissions error because the
generated egg-info (at least) was locked down.

Change-Id: Ia688790f8b23ed1cf76947b5809c208df5dee8bb"
CyrilRoelandteNovance,2018-12-03 12:00:13,https://api.github.com/repos/openstack/swift/git/commits/f98d5d16ff8fca8ef1b6fd02b77b4ed546df3a8a,f98d5d16ff8fca8ef1b6fd02b77b4ed546df3a8a,"Py3: Add working tests to tox.ini

Change-Id: Ifb737a0d3ba263b69945f30d9a31a42cb3ab645a"
CyrilRoelandteNovance,2018-12-02 04:22:14,https://api.github.com/repos/openstack/swift/git/commits/7458f234a6aea6cae0794533ab9f35bd970f7a0a,7458f234a6aea6cae0794533ab9f35bd970f7a0a,"Python3: fix test_xprofile.py

Change-Id: Ie8d28218b974a1b6b7b7b691f786ff1d6bdded05"
tipabu,2018-08-14 22:37:15,https://api.github.com/repos/openstack/swift/git/commits/014511d31e4d2711913d2e7ee55f58a904125c60,014511d31e4d2711913d2e7ee55f58a904125c60,"s3api: Stop mangling Authorization header for v4 signatures

This hasn't been necessary since https://github.com/openstack/swift3/commit/cd094ee

Change-Id: I08a8303c67e3192f506fb49f6f89a88219b1d93c"
tipabu,2018-10-11 23:25:32,https://api.github.com/repos/openstack/swift/git/commits/284bbdd391b24823f1f1154577b2b68575e7f7e9,284bbdd391b24823f1f1154577b2b68575e7f7e9,"Add slo_manifest_hook callback

... to allow other middlewares to impose additional constraints on
or make edits to SLO manifests before being written.

The callback takes a single argument: the python list that represents
the manifest to be written. All the normal list operations listed at
https://docs.python.org/2/library/stdtypes.html#mutable-sequence-types
are available to make changes to that before SLO serializes it as JSON.

The callback may return a list of problematic segments; each item in the
list should be a tuple of

    (quoted object name, description of problem)

This will be useful both for s3api minimum segment size validation and
creating tar large objects.

Change-Id: I198c5196e0221a72b14597a06e5ce3c4b2bbf436
Related-Bug: #1636663"
sorrison,2018-09-19 01:33:51,https://api.github.com/repos/openstack/swift/git/commits/b0aea93603abd98ce5c7d963e3b8b9b418d9c261,b0aea93603abd98ce5c7d963e3b8b9b418d9c261,"s3 secret caching

To increase performance of the s3 API retrieve and cache s3 secret
from keystone to allow for local validation.

Disabled by default, to use set 'secret_cache_duration' to a
number greater than 0.

You will also need to configure keystone auth credentials in
the s3token configuration group too. These credentials will
need to be able to view all projects credentials in keystone.

Change-Id: Id0c01da6aa6ca804c8f49a307b5171b87ec92228"
thiagodasilva,2018-12-11 16:17:43,https://api.github.com/repos/openstack/swift/git/commits/bce2ac680d6561a10b240346e6fb706b89e3eddb,bce2ac680d6561a10b240346e6fb706b89e3eddb,"Fix container sharding doc

Removed extra '>' symbol to stop redirecting output to '--file'

Change-Id: Ie5dc2aa5b3521aee832425705e2647e72c636858"
tipabu,2018-05-22 00:32:45,https://api.github.com/repos/openstack/swift/git/commits/43412c73de1c86f4c84933bfa34106051d5c6a46,43412c73de1c86f4c84933bfa34106051d5c6a46,"Treat all invalid frag indexes the same

Note that we also want to prevent any IndexErrors that might arise from
pickled data already on disk.

Change-Id: If56190134edddb4b778e41a2cdd360008fbfb0e4
Closes-Bug: 1772378"
BentleyGao,2018-12-08 14:46:38,https://api.github.com/repos/openstack/swift/git/commits/53ae01b9c3c767e230718bd3446d4bfa717523ed,53ae01b9c3c767e230718bd3446d4bfa717523ed,"Modify the description content

Change-Id: If5c72c4caffb55fa652e41446b9c54caa5596c6a"
CyrilRoelandteNovance,2018-12-01 19:36:19,https://api.github.com/repos/openstack/swift/git/commits/f765f4b10aae73a7d7cdf8a1a8c9226b4dcbf70a,f765f4b10aae73a7d7cdf8a1a8c9226b4dcbf70a,"Py3: Use BytesIO when we want bytes

Change-Id: I2356351da29892c40d14068766df161649648447"
tipabu,2018-11-15 19:56:36,https://api.github.com/repos/openstack/swift/git/commits/00be3f595edd7aad57a6e0968b4cdf78eb4cda23,00be3f595edd7aad57a6e0968b4cdf78eb4cda23,"s3api: Allow concurrent multi-deletes

Previously, a thousand-item multi-delete request would consider each
object to delete serially, and not start trying to delete one until the
previous was deleted (or hit an error).

Now, allow operators to configure a concurrency factor to allow multiple
deletes at the same time.

Default the concurrency to 2, like we did for slo and bulk.

See also: http://lists.openstack.org/pipermail/openstack-dev/2016-May/095737.html

Change-Id: If235931635094b7251e147d79c8b7daa10cdcb3d
Related-Change: I128374d74a4cef7a479b221fd15eec785cc4694a"
tipabu,2018-11-21 01:21:04,https://api.github.com/repos/openstack/swift/git/commits/8e95a93858dc215e2d2f7d48e035e6b5f1ab582a,8e95a93858dc215e2d2f7d48e035e6b5f1ab582a,"s3api: Allow some forms of server-side-encryption

...if and only if encryption is enabled. A few things to note about server-side
encryption:

- We register whether encryption is present and enabled when the proxy server
  starts up.
- This is generally considered an operator feature, not a user-facing one. S3
  API users can now learn more about how your cluster is set up than they
  previously could.
- If encryption is enabled but there are no keymasters in the pipeline, all
  writes will fail with ""Unable to retrieve encryption keys.""
- There's still a 'swift.crypto.override' env key that keymasters can set to
  skip encryption, so this isn't a full guarantee that things will be
  encrypted. On the other hand, none of the keymasters in Swift ever set that
  override.

Note that this *does not* start including x-amz-server-side-encryption
headers in the response, neither during PUT nor GET. We should only
send that when we know for sure that the data on disk was encrypted.

Change-Id: I4c20bca7fedb839628f1b2f8611807631b8bf430
Related-Bug: 1607116
Related-Change: Icf28dc57e589f9be20937947095800d7ce57b2f7"
tipabu,2018-06-15 18:37:59,https://api.github.com/repos/openstack/swift/git/commits/b7e22788607fb1622a5b89ee33051bec843271f8,b7e22788607fb1622a5b89ee33051bec843271f8,"Support long-running multipart uploads

S3 docs say:

> Processing of a Complete Multipart Upload request could
> take several minutes to complete. After Amazon S3 begins
> processing the request, it sends an HTTP response header
> that specifies a 200 OK response. While processing is in
> progress, Amazon S3 periodically sends whitespace
> characters to keep the connection from timing out. Because
> a request could fail after the initial 200 OK response has
> been sent, it is important that you check the response
> body to determine whether the request succeeded.

Let's do that, too!

Change-Id: Iaf420983c41256ee9a4c43cfd74025d2ca069ae6
Closes-Bug: 1718811
Related-Change: I65cee5f629c87364e188aa05a06d563c3849c8f3"
tipabu,2018-12-04 21:35:15,https://api.github.com/repos/openstack/swift/git/commits/33792353fc4e3814ba73028bb286af20c0f85e6f,33792353fc4e3814ba73028bb286af20c0f85e6f,"api-ref: Clean up container and object response code formatting

Change-Id: I994ea0c9700678ab7e1364badc2ff88ebef5ec5e
Closes-Bug: #1806596"
weizj,2018-12-05 04:37:33,https://api.github.com/repos/openstack/swift/git/commits/9ab276d9b8b172178464ff3378860f4a6e3f49d5,9ab276d9b8b172178464ff3378860f4a6e3f49d5,"Change openstack-dev to openstack-discuss

Change-Id: Ib5f0b7431819892510d1913465ce4a81c92bdf25"
notmyname,2018-12-03 22:22:59,https://api.github.com/repos/openstack/swift/git/commits/c26d67efcf44c813034f59b1df78d59fdb4a50e7,c26d67efcf44c813034f59b1df78d59fdb4a50e7,"fixed _check_node() in the container sharder

Previously, _check_node() wouldn't catch the raise ValueError when
a drive was unmounted. Therefore the error would bubble up, uncaught,
and stop the shard cycle. The practical effect is that an unmounted
drive on a node would prevent sharding for happening.

This patch updates _check_node() to properly use the check_drive()
method. Furthermore, the _check_node() return value has been modified
to be more similar to what check_drive() actually returns. This
should help prevent similar errors from being introduced in the future.

Closes-Bug: #1806500

Change-Id: I3da9b5b120a5980e77ef5c4dc8fa1697e462ce0d"
CyrilRoelandteNovance,2018-12-01 18:46:08,https://api.github.com/repos/openstack/swift/git/commits/a883adaa69d51224ec733653aee3bfe19bc53f20,a883adaa69d51224ec733653aee3bfe19bc53f20,"Py3: Replace map() with a list comprehension

In Python 3, map() returns a map object, which is not JSON-serializable. Use a
list comprehension to fix the issue.

Change-Id: I1e50b5057bdca57fcca8a10882e878f63d102ac8"
tipabu,2018-12-03 19:21:18,https://api.github.com/repos/openstack/swift/git/commits/333ae3086f263b109d3b8057cac5fa58d5af5eee,333ae3086f263b109d3b8057cac5fa58d5af5eee,"Fix in-process func tests to work with newer PasteDeploy

Apparently they changed the order of how default, global, and local config
get applied? See also: https://github.com/Pylons/pastedeploy/commit/556611a

Change-Id: Ie7322ef362b0b22898c14db7d0fcd3dafc40d473"
CyrilRoelandteNovance,2018-12-03 12:59:33,https://api.github.com/repos/openstack/swift/git/commits/39f6d5a5fdc01ccd05723f35b96d011100f7042f,39f6d5a5fdc01ccd05723f35b96d011100f7042f,"Py3: Fix two unbound variables

In Python 3, the scope of errors in ""try/except"" clauses is more limited than in
Python 2.

Change-Id: I600145cd462b0f20740c290ecc4041fb4de02b33"
CyrilRoelandteNovance,2018-12-03 11:52:00,https://api.github.com/repos/openstack/swift/git/commits/010cdc2a0c02c7beac65908439331fc389089356,010cdc2a0c02c7beac65908439331fc389089356,"Py3: Fix test_memcache

Change-Id: I864de1d7ef0df07246388c7c108e1bb753e15de3"
CyrilRoelandteNovance,2018-12-01 20:22:17,https://api.github.com/repos/openstack/swift/git/commits/59d66e3b6df675eb1a1d80dab8d7217f4f9ce7cf,59d66e3b6df675eb1a1d80dab8d7217f4f9ce7cf,"Py3: fix a simple bytes vs str issue

Change-Id: Ic78ba826e6ded3da77c5de6d35eeeb3f1c48602e"
CyrilRoelandteNovance,2018-12-01 18:11:49,https://api.github.com/repos/openstack/swift/git/commits/3a517714fab2b2d05418d27f347f275ffb6f5c98,3a517714fab2b2d05418d27f347f275ffb6f5c98,"Py3: Use dict.items instead of dict.iteritems

Change-Id: I15c7cdfd5497a360ded553a6c17a76a9b1acd366"
CyrilRoelandteNovance,2018-12-01 18:03:14,https://api.github.com/repos/openstack/swift/git/commits/d75d15be7cbaeb66bfe8168e4b6cb2c21b341f23,d75d15be7cbaeb66bfe8168e4b6cb2c21b341f23,"Py3: We cannot use len(filter(...))

In Python 3, filter() returns a filter object, that has no length.

Change-Id: I726188a328119f41c534a6232a4494e40815e05c"
CyrilRoelandteNovance,2018-12-01 17:49:14,https://api.github.com/repos/openstack/swift/git/commits/21a3423cf21998dd32f0224bce52b68ef631151c,21a3423cf21998dd32f0224bce52b68ef631151c,"Py3: Fix a relative import

Change-Id: If85315646fc04f9cec6e557db55a829833797ea3"
CyrilRoelandteNovance,2018-12-01 17:34:08,https://api.github.com/repos/openstack/swift/git/commits/c3cbe69da893b6c72da6d7630a5cb7b7da2cc29b,c3cbe69da893b6c72da6d7630a5cb7b7da2cc29b,"Py3: Use collections.MutableMapping rather than UserDict.DictMixin

Taken from https://docs.python.org/2/library/userdict.html#UserDict.DictMixin:

""Starting with Python version 2.6, it is recommended to use
collections.MutableMapping instead of DictMixin.""

Change-Id: Idb67010de835dc2dbcbf87c40def934568a0dcf5"
CyrilRoelandteNovance,2018-12-01 02:25:21,https://api.github.com/repos/openstack/swift/git/commits/6c8b4c87a530c5f8e9d83d85d57ea320ec78eb45,6c8b4c87a530c5f8e9d83d85d57ea320ec78eb45,"Py3: Port test/unit/test_ringcomposer.py

Change-Id: I6cfa6aa87b00f3edecdd2dd8b3e5ef66380e36ae"
tipabu,2018-10-30 23:04:19,https://api.github.com/repos/openstack/swift/git/commits/9017db4519501ed0863c8702e721ff6408ca4344,9017db4519501ed0863c8702e721ff6408ca4344,"Only print ""SKIPPING FUNCTIONAL TESTS ..."" messages once

Previously, these would get printed on every import of test.functional

Change-Id: I61da04f6b8296943ec8282c1f8ddacdcaf5196fd"
arzhna,2018-11-28 02:15:05,https://api.github.com/repos/openstack/swift/git/commits/eed76d8bed446518bff2ca4af18259f7637c430e,eed76d8bed446518bff2ca4af18259f7637c430e,"Fix a potential bug

In the class method from_hash_dir(), the arguments to input when creating an instance of the BaseDiskFile class are incorrect.
The __init__() method of BaseDiskFile class receive the arguments in order of mgr, device_path, partition and etc.
However, in from_hash_dir() method, the order of arguments are mgr, device_path, None and partition
The class method from_hash_dir() is used by the Object Auditor.
If the partition argument is used in the new DiskFile implementations, exception may occur.
It will be cause object auditing to failed and the object will be quarantine by the Object Auditor.

Closes-Bug: #1805539
Change-Id: Ic2e29474505426dea77e178bf94d891f150d851b"
matthewoliver,2018-08-17 00:31:59,https://api.github.com/repos/openstack/swift/git/commits/34aef9d091d60e567d3631010b288d7f4d49a532,34aef9d091d60e567d3631010b288d7f4d49a532,"Add chaging secret key for external KMS section

This patch updates the overview_encryption page to add a
`Changing the encryption root secret of external KMS's` section
to point out the slight difference in naming. I.E:

  key_id_<secret_id> vs. encryption_root_secret_<secret_id>

This patch refers to both multikey support in the KMIP and KMS
key masters, so really should land after both of them.

Related-Change-Id: Ie52508e47d15ec5c4e96902d3c9f5f282d275683
Related-Change-Id: I4f485dcb31e5bea511c4e539c54681091fc5bb1c
Change-Id: Ie4cd8ae038501c8abc43d09cf0b207ca375a4366"
matthewoliver,2018-08-14 03:09:35,https://api.github.com/repos/openstack/swift/git/commits/fda3052a2d5c747fbf3e36c5d02ae1cee8488509,fda3052a2d5c747fbf3e36c5d02ae1cee8488509,"Multi-key KMS keymaster

Now that the trivial keymaster supports multiple keys, let's not
forget about the KMS/Barbican keymaster. Additional keys are
configured as:

    key_id_<secret_id> = <KMS unique identifier>

As with the trivial keymaster, the key to use for PUTs and POSTs is
specified with:

    active_root_secret_id = <secret_id>

Change-Id: I4f485dcb31e5bea511c4e539c54681091fc5bb1c"
rdejoux,2018-11-22 10:24:02,https://api.github.com/repos/openstack/swift/git/commits/4809884d9f20eb0be6df9840e4e6a75577fecc4c,4809884d9f20eb0be6df9840e4e6a75577fecc4c,"Use eventlet.patcher.original to get Python select module in get_hub

get_hub function was added in commit b155da42 with the idea to bypass
eventlet automatic hub selection that prefers epoll if available by default.

Since version 0.20.0 eventlet removed select.poll() function in its patched
select module (eventlet.green.select), see:
   - https://github.com/eventlet/eventlet/commit/614a20462

So if eventlet monkey patching is done before a get_hub() call (as now in
wsgi.py since commit c9410c7d) if we use 'import select' we get the eventlet
version that don't have poll attribute.

To prevent that we use eventlet.patcher.original function to get python select
module to test if poll() is available on current platform.

Change-Id: I69b3db3951b3d3b6583845978deb2883492e7f0f
Closes-Bug: 1804627"
tipabu,2018-08-15 23:59:16,https://api.github.com/repos/openstack/swift/git/commits/42b4cdc53844f153bb26498ca661d4d6e3e5fa99,42b4cdc53844f153bb26498ca661d4d6e3e5fa99,"s3api: Include '-' in S3 ETags of normal SLOs

Ordinary objects in S3 use the MD5 of the object as the ETag, just like
Swift. Multipart Uploads follow a different format, notably including a
dash followed by the number of segments.

Several clients use this difference to change their behavior based upon
the presence of a dash in object ETags, not only during object download
but during upload and listing, too. In particular, this can disable
upload/download integrity checks or cause the client to issue HEAD
requests to see whether the MD5 was stored in metadata on the object.

The goal of this patch is to get as many of the benefits of the dash as
we can, even for data that was uploaded via the Swift API or that
predated the related-changes. To that end (and for S3 API requests
*only*), look for any indication that an object may be an SLO and tack
on a literal '-N' to the end of the ETag. Why 'N'? Two main reasons:

 - We don't necessarily know how many segments there are, and don't want
   to use additional backend requests to find out (particularly when it
   would require *multiple* additional requests as in a bucket listing).
 - We don't want to provide an arbitrary number (as ProxyFS does [1])
   because it would look *too much* like an S3 ETag, and if any client
   actually cares about the *exact* ETag generation algorithm, I'd
   prefer to have a way to distinguish between the two.

This modified ETag will be used in key GET/HEAD responses via the S3
API, where SLOs are always indicated with a X-Static-Large-Object
header. Either the modified or original ETag may be used for conditional
requests via the S3 API. Bucket listings via the S3 API *may* present
the modified ETag, but only if the JSON container listing includes an
'slo_etag' key for the object; see the related SLO patch for when that
started happening.

There should be no impact for the Swift API.

[1] https://github.com/swiftstack/ProxyFS/blob/1.6.4/pfs_middleware/pfs_middleware/middleware.py#L443-L455

Change-Id: If4c47d7b13dcb4b3d04c52bb08b15ca2069cd15c
Related-Change: Ibe68c44bef6c17605863e9084503e8f5dc577fab
Related-Change: I67478923619b00ec1a37d56b6fec6a218453dafc"
tipabu,2018-11-20 22:27:19,https://api.github.com/repos/openstack/swift/git/commits/582f0585e8bc450e0aa04ef054dd56e80bacf285,582f0585e8bc450e0aa04ef054dd56e80bacf285,"py3: encryption follow-up

Change-Id: Ic680a11fa3133b3d6f3fa6fa007ccfbeb540899a"
tipabu,2018-09-10 22:34:50,https://api.github.com/repos/openstack/swift/git/commits/37b814657eaa779f984852f2fc048751b9a73230,37b814657eaa779f984852f2fc048751b9a73230,"py3: port encryption

This got away from me a bit with the functional tests masquerading as
unit tests.

Change-Id: I1237c02eff96e53fff8f9661a2d85c4695b73371"
zhufl,2018-11-19 07:22:59,https://api.github.com/repos/openstack/swift/git/commits/3465d639e312ad112b3d239f7e18590cff792ec8,3465d639e312ad112b3d239f7e18590cff792ec8,"Add missing ws seperator between words

This is to add missing ws seperator between words, usually
in log messages.

Change-Id: I6b88fab428b93def77632f9aed29fc2de4380b0d"
timuralp,2018-09-27 02:02:34,https://api.github.com/repos/openstack/swift/git/commits/370f7d7a371ff24f05146724d96c0049cc9a24a8,370f7d7a371ff24f05146724d96c0049cc9a24a8,"Handle non-ASCII characters in S3 v2 listings.

When computing the base-64 encoded continuation token, s3Api should
UTF-8 encode the object names.

Change-Id: I3f3edc17e05e7c1e7c6afec66973179e51c7d9d8"
tipabu,2018-11-09 23:46:06,https://api.github.com/repos/openstack/swift/git/commits/692a03473f6cfffd089624c61772488096a9bdeb,692a03473f6cfffd089624c61772488096a9bdeb,"s3api: Change default location to us-east-1

This is more likely to be the default region that a client would try for
v4 signatures.

UpgradeImpact:
==============

Deployers with clusters that relied on the old implicit default
location of US should explicitly set

    location = US

in the [filter:s3api] section of proxy-server.conf before upgrading.

Change-Id: Ib6659a7ad2bd58d711002125e7820f6e86383be8"
wangdequn,2018-11-12 08:10:43,https://api.github.com/repos/openstack/swift/git/commits/a85dc0a22562ca33968e9e214c03086ff06355aa,a85dc0a22562ca33968e9e214c03086ff06355aa,"update docs link address

Change-Id: I03f05c0f7683ded756f19b50243af2108aae7b3e"
tipabu,2018-10-18 21:32:36,https://api.github.com/repos/openstack/swift/git/commits/c1c65a7e9f43f1395c63fb7bf22f812962b53714,c1c65a7e9f43f1395c63fb7bf22f812962b53714,"Only url-quote Keys when encoding-type=url

Previously, we'd even url-quote ETags, leading to weird things like

    <ETag>%22a27a822070b843ed6407f4f38afdaa20%22</ETag>

in listings, where those '%22's should be double quotes.

Change-Id: I0f5e0e410c8297a4898caae00c196fa3b3862100"
chenxiangui1,2018-11-09 12:24:19,https://api.github.com/repos/openstack/swift/git/commits/662fd818cff8f7b6869d71570ba0b6520a5800e3,662fd818cff8f7b6869d71570ba0b6520a5800e3,"Fix typo

Fix the typo 'a' to 'an' in test_diskfile.py

Change-Id: I26332766e76b4f0b728e0e7a41fa75afae2517a8"
chenxiangui1,2018-11-09 12:05:02,https://api.github.com/repos/openstack/swift/git/commits/c5e33b0b84a986ba7ae08633ef27a28e38abc5f5,c5e33b0b84a986ba7ae08633ef27a28e38abc5f5,"Fix typo

Fix typo in test_auditor.py

Change-Id: I23a95d251bf034a41f2d6aaf825b9a29fadf39c4"
karenc,2018-06-15 20:23:40,https://api.github.com/repos/openstack/swift/git/commits/a2fb335e4b43d7fb0b17daf000922be4c3c4db7a,a2fb335e4b43d7fb0b17daf000922be4c3c4db7a,"s3api: Add basic support for ?versions bucket listings

We still don't have support for toggling S3 bucket versioning, but we
can at least support getting the latest versions of all objects.

See https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETVersion.html
for more information about the API. Note that the returned format is
distinct from both ""GET Bucket (List Objects) Version 1"" and ""GET Bucket
(List Objects) Version 2"" APIs.

Change-Id: Ic57c273a3d5d7cdc34ca3a03e35e99b202a0bb01"
tipabu,2018-11-01 00:43:41,https://api.github.com/repos/openstack/swift/git/commits/bc4494f24dbb27f258b29ed42536cd356197b2f8,bc4494f24dbb27f258b29ed42536cd356197b2f8,"py3: port account/container replicators

Change-Id: Ia2662d8f75883e1cc41b9277c65f8b771f56f902"
tipabu,2018-11-02 21:38:49,https://api.github.com/repos/openstack/swift/git/commits/c112203e0ef8f69cdd5a78c260029839a8763d26,c112203e0ef8f69cdd5a78c260029839a8763d26,"py3: Monkey-patch json.loads to accept bytes on py35

I'm tired of creating code churn where I just slap

    .decode(""nearly arbitrary choice of encoding"")

in a bunch of places.

Change-Id: I79b2bc59fed130ca537e96c1074212861d7db6b8"
rajathere,2018-11-02 06:09:38,https://api.github.com/repos/openstack/swift/git/commits/7a212726271d0e823b111dda367c47a435626fcd,7a212726271d0e823b111dda367c47a435626fcd,"Update min tox version to 2.3.2

The commands used by constraints need at least tox 2.3.2.  Update to
reflect reality, which should help with local running of constraints
targets.

Change-Id: I0051938d70bdb3060981e8ce1cd2a72ca8d292ff"
tipabu,2018-11-02 17:21:19,https://api.github.com/repos/openstack/swift/git/commits/887ba87c5a1114eb43de78f42f0a62cd6fd9706f,887ba87c5a1114eb43de78f42f0a62cd6fd9706f,"Add ""historical document"" note to ring background docs

Change-Id: Ib00193b62c1f35b06a93f261bd6cb0d2f9167b86"
tipabu,2018-11-01 17:49:35,https://api.github.com/repos/openstack/swift/git/commits/3420921a3397a4f140ff35c5075e8414f2aee7fe,3420921a3397a4f140ff35c5075e8414f2aee7fe,"Clean up HASH_PATH_* patching

Previously, we'd sometimes shove strings into HASH_PATH_PREFIX or
HASH_PATH_SUFFIX, which would blow up on py3. Now, always use bytes.

Change-Id: Icab9981e8920da505c2395eb040f8261f2da6d2e"
notmyname,2018-10-31 18:32:13,https://api.github.com/repos/openstack/swift/git/commits/11e81cfc8fa6d0ffe7443657deed67c2da5eabcb,11e81cfc8fa6d0ffe7443657deed67c2da5eabcb,"added note about double url quoting

Change-Id: I196fc4212b5405c410c9bfb850cd0d4737094c47"
clayg,2018-10-30 16:38:53,https://api.github.com/repos/openstack/swift/git/commits/441df4fc930db7fc82d89b8c6a4d28d935554518,441df4fc930db7fc82d89b8c6a4d28d935554518,"Use correct headers in reconstructor requests

As long as the reconstructor collects parts from all policies each job
must be considered to have it's storage policy index and we can't use
global state for policy specific headers.  It's good hygiene to avoid
mutating the global state regardless.

Under load with multiple policies we observed essentially empty handoff
parts ""re-appearing"" on nodes until adding these changes.

Closes-Bug: #1671180
Change-Id: Id0e5f2743e05d81da7b26b2f05c90ba3c68e4d72"
gerardgine,2018-02-20 22:15:31,https://api.github.com/repos/openstack/swift/git/commits/e8a7729a0d3a790e180653353d435103161c2c40,e8a7729a0d3a790e180653353d435103161c2c40,"Fix usage of multiple accounts in functional tests

Some tests make use of multiple accounts without checking of they have
been set up. This commit tries to fix some of these situations.

Change-Id: I461679e78e19ce0866c7618c581a8cb573cca7f5"
clayg,2018-10-29 19:49:48,https://api.github.com/repos/openstack/swift/git/commits/06cf5d298fb6b103899aa358e1cb4b828f502dc5,06cf5d298fb6b103899aa358e1cb4b828f502dc5,"Add databases_per_second to db daemons

Most daemons have a ""go as fast as you can then sleep for 30 seconds""
strategy towards resource utilization; the object-updater and
object-auditor however have some ""X_per_second"" options that allow
operators much better control over how they spend their I/O budget.

This change extends that pattern into the account-replicator,
container-replicator, and container-sharder which have been known to peg
CPUs when they're not IO limited.

Partial-Bug: #1784753
Change-Id: Ib7f2497794fa2f384a1a6ab500b657c624426384"
alecuyer,2018-10-17 10:11:22,https://api.github.com/repos/openstack/swift/git/commits/d306345ddd22c38a18de8f8e5fb9b34a1f91fd93,d306345ddd22c38a18de8f8e5fb9b34a1f91fd93,"Remove empty directories after a revert job

Currently, the reconstructor will not remove empty object and suffixes
directories after processing a revert job. This will only happen during
its next run.

This patch will attempt to remove these empty directories immediately,
while we have the inodes cached.

Change-Id: I5dfc145b919b70ab7dae34fb124c8a25ba77222f"
zaitcev,2018-10-26 05:24:55,https://api.github.com/repos/openstack/swift/git/commits/1663782459f06ccd6c0fbfe2914ed3c8f80b0ba5,1663782459f06ccd6c0fbfe2914ed3c8f80b0ba5,"Fix up the test for .ismount

We kept hitting a floating error in the test, where fist ismount
in the test succeeds, while it should fail. As it turned out,
the return of gettempdir was the plain /tmp. So, a previous test
created /tmp/.ismount and the subsequent runs failed on it.
Re-generating the root filesystem (e.g. by a container) fixes
the problem, but still, there's no need to do this. This change
tightens the test up by placing the .ismount into a subdirectory
of the test directory instead of the global /tmp.

Change-Id: I006ba1f69982ef7513db3508d691723656f576c9"
zaitcev,2018-10-23 02:41:23,https://api.github.com/repos/openstack/swift/git/commits/654187e1feff122ccf9a6d3dead6c86b4f8eb97c,654187e1feff122ccf9a6d3dead6c86b4f8eb97c,"py3: adapt common/db_replicator.py

Another one of those almost-empty patches. This time my excuse is
that this one is needed in a couple of places (account & container).

Change-Id: Ieb8960763c64f88981b68884bfec92c17ebb4708"
tipabu,2018-10-22 18:05:11,https://api.github.com/repos/openstack/swift/git/commits/b5a91724e7bc430ff8ea317c1494f18170460416,b5a91724e7bc430ff8ea317c1494f18170460416,"Require gettext for all non-SUSE distros

This fixes the failing release-notes job. I guess there was some change
to the base gate images since the related change? We've definitely
landed other patches that would've built release notes since then...

Change-Id: Iaf6296886b653f0ac3e9db52a886ea3fe4a3bd20
Related-Change: Iff24a2b02b8927113d616a5af06331f1a1e31170"
tipabu,2018-10-19 22:59:23,https://api.github.com/repos/openstack/swift/git/commits/0a564d885efee58e702b43baf8154d2778d9391f,0a564d885efee58e702b43baf8154d2778d9391f,"Check for .ismount stubs with symlinks, too

Related-Change: I9d9fc0a4447a8c5dd39ca60b274c119af6b4c28f
Change-Id: Ib6a2edf648397d1d1c875461698f63afcde5b3ed"
tipabu,2018-10-18 19:50:41,https://api.github.com/repos/openstack/swift/git/commits/781da0704bb971eae937917842ff145134d2a172,781da0704bb971eae937917842ff145134d2a172,"Stop accomodating 5+ year old object-server code in unit tests

Change-Id: Id2597d6a26fa8a1769e8cab1ba5cae29eb1e2942"
zaitcev,2018-10-04 22:55:03,https://api.github.com/repos/openstack/swift/git/commits/6676d74f8f63e8349986cfd31bc958feda935f4c,6676d74f8f63e8349986cfd31bc958feda935f4c,"py3: everything account except the real things

The the 80% of the work still remain in server and replicator,
but let's knock this out.

Change-Id: I1e1dee8f8c77212183b0ef2b574b57ad1051d57e"
tipabu,2018-07-29 01:38:43,https://api.github.com/repos/openstack/swift/git/commits/b39d2efdabad83d02dfac96efeb5dc8ba3c8bb52,b39d2efdabad83d02dfac96efeb5dc8ba3c8bb52,"Allow multiple keymasters

This allows the migration from one key provider to another.

Note that secret_id values must remain unique across all keymasters
in a given pipeline. If they are not unique, the right-most keymaster
will take precedence.

When looking for the active root secret, only the right-most keymaster
is used.

Change-Id: I6b5c812a54624f56c55164556385e3e475fb2470"
tipabu,2018-10-16 20:09:40,https://api.github.com/repos/openstack/swift/git/commits/00f77321937f5f9db45a24eb9eeda76eb80c8063,00f77321937f5f9db45a24eb9eeda76eb80c8063,"Simplify the decryption of container listings

Following https://github.com/openstack/swift/commit/4806434 there
is only one handler that might be used.

Following https://github.com/openstack/swift/commit/2722e49 all
EncryptionException errors should be caught and handled in
decrypt_obj_dict.

Change-Id: Ib4e9db400a58853daa903ae0a625dfde47747552"
tipabu,2018-10-16 19:56:10,https://api.github.com/repos/openstack/swift/git/commits/0d774861cb9b408c25637ead838373aa3c0aa8ff,0d774861cb9b408c25637ead838373aa3c0aa8ff,"Unify handle_get/handle_head in decrypter

Change-Id: I7058e3b5cd7a7fe7f2f0c3304e4e8b3d97dfec4a"
zaitcev,2018-10-16 01:57:17,https://api.github.com/repos/openstack/swift/git/commits/28a582f3f4dadaa4172ab94b174572165a1c10fc,28a582f3f4dadaa4172ab94b174572165a1c10fc,"py3: adapt account/backend.py and utils.py

Gradatim Ferociter

Change-Id: I6f3fac450c14f8dbc549ab2b0645a31aa0cece89"
bloodeagle40234,2018-10-12 07:38:47,https://api.github.com/repos/openstack/swift/git/commits/b90c792a70857a06397d2e6a0d5d57a4d90a209e,b90c792a70857a06397d2e6a0d5d57a4d90a209e,"Follow up s3api ensures any string for secret as bytes string

This is follow up for patch https://review.openstack.org/#/c/605603
That looks fine, that enables s3api to take any string (unicode or bytes)
but no tests in the patch. This patch adds some tests (and test cleanups)
to asserts the logic works as expected.

Change-Id: I6368ba76ca2400482a35da3d407bb4903b578b41"
sorrison,2018-09-27 07:26:59,https://api.github.com/repos/openstack/swift/git/commits/45c840a565d53ba9d168f98e74611ac1a0a629d3,45c840a565d53ba9d168f98e74611ac1a0a629d3,"s3api: Ensure secret is utf8 in check_signature

Change-Id: Ieedb54074d9d3494843597395e325a39d59976ad"
tipabu,2018-10-10 20:06:32,https://api.github.com/repos/openstack/swift/git/commits/dd49f170301ba2410a5e5757d773f1939a7fabb2,dd49f170301ba2410a5e5757d773f1939a7fabb2,"Add coverage reports to py27/35/36 unit test jobs

...and drop openstack-cover-jobs since it is no longer necessary.

Change-Id: Iad12e64f41bbdd8b8e005b0fb14a7e2108fa3bcf"
tipabu,2018-10-10 16:01:14,https://api.github.com/repos/openstack/swift/git/commits/ce51893bfc445c97b13819d37c8afae48e340142,ce51893bfc445c97b13819d37c8afae48e340142,"Tighten status code assertions for object POST

Now that POST-as-COPY is dead and gone, 202 should be the only
successful response code for an object POST. Note that there are
already tests requiring 202s in test/functional/test_object.py.

Change-Id: I33c8d2c031f8dfdf1e789bb8d6e6908bfff4d739"
karenc,2018-06-15 19:44:15,https://api.github.com/repos/openstack/swift/git/commits/78c9fd9f93df75af4b9ca6500d27422963dc89c4,78c9fd9f93df75af4b9ca6500d27422963dc89c4,"Change PUT bucket conflict error

When a bucket already exists, PUT returned a BucketAlreadyExists error.
AWS S3 returns BucketAlreadyOwnedByYou error instead, so this changes
the error returned by swift3.

When sending a PUT request to a bucket, if the bucket already exists and
is not owned by the user, return 409 conflict error,
BucketAlreadyExists.

Change-Id: I32a0a9add57ca0e4d667b5eb538dc6ea53359944
Closes-Bug: #1498231"
tipabu,2018-10-05 21:58:35,https://api.github.com/repos/openstack/swift/git/commits/4ca605c51e44e817ad73e9e7c229d5738b44dd9f,4ca605c51e44e817ad73e9e7c229d5738b44dd9f,"Move base64-decoding/unpickling into DatabaseBroker

...which was the one responsible for pickling and encoding the data in
the first place.

Change-Id: Ia7fad7ddd7cf95c8a0168dd6c899c80ddfdd3521"
tipabu,2018-10-05 21:42:46,https://api.github.com/repos/openstack/swift/git/commits/6e7ca26169bcf6f2b51bddddb921b10c252e29d9,6e7ca26169bcf6f2b51bddddb921b10c252e29d9,"DB follow-up

Change-Id: I32cff110f0771d6d92a881ef52e482aa17d8dbe4
Related-Change: I0dab4ff013f300396cff7313bc27b9d5644fe8a7"
tipabu,2018-10-05 17:51:00,https://api.github.com/repos/openstack/swift/git/commits/3770f3f2281e9ac6b9292325803f8d6c5e26ea5b,3770f3f2281e9ac6b9292325803f8d6c5e26ea5b,"internal_client: Require that request_tries be positive

This way the error is obvious and at initialization time, rather than being
an UnboundLocalError that waits until you actually make requests.

Change-Id: I4c8dafe34fcfea354b254b9137f31184cbd6a762"
zaitcev,2018-07-11 22:55:48,https://api.github.com/repos/openstack/swift/git/commits/e3a5b63cc7ebc281bbde248f7ef86f968aa9d277,e3a5b63cc7ebc281bbde248f7ef86f968aa9d277,"py3: Adapt db.py

Change-Id: I0dab4ff013f300396cff7313bc27b9d5644fe8a7"
tipabu,2018-10-03 21:41:09,https://api.github.com/repos/openstack/swift/git/commits/12b6d460f7c0b08eee330403fd7329fb4ad4e3cb,12b6d460f7c0b08eee330403fd7329fb4ad4e3cb,"Prevent kmip_protocol logger from logging at DEBUG

At DEBUG, it will write out all wire data, which may expose key material.

Change-Id: Ic561f9eceb29eb783af368e27a341b9420b2783b"
tipabu,2018-06-15 20:15:34,https://api.github.com/repos/openstack/swift/git/commits/27d852395fb01edd7955fdea18616a16c919a214,27d852395fb01edd7955fdea18616a16c919a214,"Give better errors for malformed credentials

This lets clients know when they used the wrong region,
for example.

Change-Id: Id3ac41e994705d3befe32df60ff4241c334a78b7
Closes-Bug: #1674842"
tipabu,2018-09-17 22:22:55,https://api.github.com/repos/openstack/swift/git/commits/c90d34bd02ec8b6683ccf22e17ffc55cd5ebbb56,c90d34bd02ec8b6683ccf22e17ffc55cd5ebbb56,"py3: port tempauth

Note that the user DB is stored in-memory as native strings, so we do
some crazy-decoding to make comparisons for auth decisions. Seems to
keep the config handling mostly sane, though.

I maybe need to look harder at container ACLs?

Change-Id: Ia58698c9b30d2211eeee8ecb3bbdd1c26fa4034d"
FatemaKhalid,2018-09-18 00:36:33,https://api.github.com/repos/openstack/swift/git/commits/c8e3b996aed7707c222db35640adc9860b2c8839,c8e3b996aed7707c222db35640adc9860b2c8839,"Enabling direct_client users to overwrite X-Timestamp

Changing gen_headers to set User-Agent if not already added
and set x-timestamp by default if it's not already set nor
it's requested not to be put.

Change-Id: Ied073778cf5d34ddcb2f5af59d5b762e51c9b11f
Partial-Bug: 1757250"
tipabu,2018-09-28 22:54:51,https://api.github.com/repos/openstack/swift/git/commits/96866808b8fd45675c6bf1491f990b496e35b705,96866808b8fd45675c6bf1491f990b496e35b705,"Tolerate missing containers when trying to clean up

Seen in the gate:

    Traceback (most recent call last):
      File ""test/functional/tests.py"", line 97, in setUpClass
        cls.env.setUp()
      File ""test/functional/tests.py"", line 2561, in setUp
        super(TestFileComparisonEnv, cls).setUp()
      File ""test/functional/tests.py"", line 81, in setUp
        cls.account.delete_containers()
      File ""test/functional/swift_test_client.py"", line 495, in delete_containers
        cont.update_metadata(hdrs={'x-versions-location': ''})
      File ""test/functional/swift_test_client.py"", line 558, in update_metadata
        self.conn.make_path(self.path))
    test.functional.swift_test_client.ResponseError: 404: 'Not Found'

Presumably, this was because the account-update to remove the container
from listings had to be handled async, so a deleted container still
showed up in listings.

We might still hit errors when we go to empty out the already-deleted
container, though :-/

Change-Id: I0671f65f5214337c07644cb0bb4a945c5857ab9d"
tipabu,2018-09-28 20:02:03,https://api.github.com/repos/openstack/swift/git/commits/93fb77e8afc25d5fe1452aca530ad5997bc891fd,93fb77e8afc25d5fe1452aca530ad5997bc891fd,"Ignore ENOENT and ENOTEMPTY errors in delete_partition

This is comparable to the error handling we have in delete_handoff_objs.

Change-Id: I08bda9bcfeb60b3c5654322a9e6139a8ac5b3391"
kevin-wyx,2018-07-04 09:13:49,https://api.github.com/repos/openstack/swift/git/commits/8c7ca01ea7ee0943d5b3078b941c15932f6eecff,8c7ca01ea7ee0943d5b3078b941c15932f6eecff,"Unquote URL before using splited parts.

Keystone EC2 access keys may contain URL reserved/unsafe chars,
then the access key in PATH_INFO can't be replace by account name.

ie.
  /v1/abc%3D/c/o  --> /v1/AUTH_PROJECT_ID/c/o

Change-Id: I034b0902f620cbb274647e24566dff2031beeae5
Closes-Bug: 1776476"
thiagodasilva,2018-09-26 15:55:38,https://api.github.com/repos/openstack/swift/git/commits/36a3fee80521c07b9bfef25ad48a13b3db8c32dd,36a3fee80521c07b9bfef25ad48a13b3db8c32dd,"update 1space url in associated projects

Change-Id: Idcb1e9cacba5b959387a2bfd7a4ef5e9d502996a"
tipabu,2018-09-15 06:45:00,https://api.github.com/repos/openstack/swift/git/commits/ae496630b6721a07b5549cd10001e9df93d1a76f,ae496630b6721a07b5549cd10001e9df93d1a76f,"py3: port internal_client

Change-Id: I4e69beac30be1d8726849aacb603af5e2aeecaf8"
tipabu,2018-09-14 22:32:16,https://api.github.com/repos/openstack/swift/git/commits/ddd5cc1592c7c761162382b0543c653142fe38cf,ddd5cc1592c7c761162382b0543c653142fe38cf,"py3: port direct_client

I wanna see how far I can get *without* mucking around in swob and
request_helpers. Maybe eventually we can get some helpers out there to
make working with UTF-8-pretending-to-be-Latin-1 strings better, but for
the time being, I feel more at ease *embracing* the crazy.

Change-Id: I0b9983a182daedd9dbec483b805d263238fcfac7
Co-Authored-By: Pete Zaitcev <zaitcev@kotori.zaitcev.us>"
tipabu,2018-09-24 23:26:20,https://api.github.com/repos/openstack/swift/git/commits/b7fda3b4a23fbb86c2341ab60cdc435889b880f9,b7fda3b4a23fbb86c2341ab60cdc435889b880f9,"Allow kmip_keymaster to be configured in proxy-server.conf

... and in particular, in the filter:kmip_keymaster section. We thought
we'd done that before, but we didn't: __name__ is *just* the filter
name, and doesn't include the ""filter:"" prefix for the section.

Change-Id: Iede1d7450e94ba05d2610030e975f566275da88b"
tipabu,2018-09-20 20:39:09,https://api.github.com/repos/openstack/swift/git/commits/ecebea18203d1ca53da8709026acf3e83c3f5357,ecebea18203d1ca53da8709026acf3e83c3f5357,"s3api: Increase max body size for Delete Multiple Objects requests

Sub-64k was *way* too low, particularly when clients expect to be able to
delete as many as 1000 objects at a time.

I have *no idea* where the previous limit came from.

Change-Id: Ifead1f9ca6509d50dbbef294b7cb3d7f11a09229"
tipabu,2018-09-14 04:42:34,https://api.github.com/repos/openstack/swift/git/commits/050f8799ca82f121f9d33c7e773b982b9763f074,050f8799ca82f121f9d33c7e773b982b9763f074,"Use latest eventlet in probe tests

Note that eventlet 0.22.0+ closes connections between requests when
it stops accepting connections.

Partial-Bug: #1792615
Change-Id: Ia8d9ab95e2aad40e8d797acc3423a917e809ffdb"
notmyname,2018-09-19 18:39:40,https://api.github.com/repos/openstack/swift/git/commits/70d31e0f257b569c2fb0c075ea02a37b7003a1cf,70d31e0f257b569c2fb0c075ea02a37b7003a1cf,"set up a lower constraints job that uses an XFS tmpdir

Change-Id: Ib9d1da8abed6be0156829e6d54ad2eb43af2516e"
ajaeger,2018-09-07 12:56:02,https://api.github.com/repos/openstack/swift/git/commits/62f8e647185682ed7b46cc39d242940f083963b3,62f8e647185682ed7b46cc39d242940f083963b3,"Use templates for cover and lower-constraints

Use openstack-tox-cover template, this runs the cover job
in the check queue only.

Use openstack-lower-constraints-jobs template

Remove jobs that are part of the templates.

Change-Id: I76d801da15904142bda0503c5bfa9f11b4ea84f1"
tipabu,2018-08-31 17:40:48,https://api.github.com/repos/openstack/swift/git/commits/1b0172f5d31d8bb862f8c9b017cccaf657b93230,1b0172f5d31d8bb862f8c9b017cccaf657b93230,"py3: Port listing_formats middleware

Change-Id: I4e2712a4a38b5cab3e31cc75bb162e73b4f5dafb"
tipabu,2018-06-28 18:27:23,https://api.github.com/repos/openstack/swift/git/commits/78344bfe2559a2d88e2f4bf724d9f963529c1155,78344bfe2559a2d88e2f4bf724d9f963529c1155,"py3: get proxy-server willing and able to respond to some API requests

I saw GET account/container/replicated object all work,
which is not too shabby.

Change-Id: I63408274fb76a4e9920c00a2ce2829ca6d9982ca"
alistairncoles,2017-03-13 17:12:13,https://api.github.com/repos/openstack/swift/git/commits/904e7c97f16504824513ed5e6cc8e186d8f13153,904e7c97f16504824513ed5e6cc8e186d8f13153,"Add more doc and test for cors_expose_headers option

In follow-up to the related change, mention the new
cors_expose_headers option (and other proxy-server.conf
options) in the CORS doc.

Add a test for the cors options being loaded into the
proxy server.

Improve CORS comments in docs.

Change-Id: I647d8f9e9cbd98de05443638628414b1e87d1a76
Related-Change: I5ca90a052f27c98a514a96ee2299bfa1b6d46334"
thiagodasilva,2018-09-11 20:28:55,https://api.github.com/repos/openstack/swift/git/commits/5d70396247a81cbaf6aaf114a5b4dcfb7ace7eb9,5d70396247a81cbaf6aaf114a5b4dcfb7ace7eb9,"add multinode functional test to swift

This new test job adds multinode testing to swift.
It currently configures 5 nodes: test-runner, proxy,
account, container and object. It starts by checkout out
the latest release and then 'upgrades' the storage nodes
to the current patch under test. That means that it will
the test-runner and the proxy are still running the latest
release.

Future work would include a new set of tests where it will
add objects to the cluster prior to upgrading and then try
to read those objects after the upgrade. It should also be
noted that the 'upgrade' currently only means a new
'git checkout' the configuration files are not being updated.
A future patch should fix that too.

Change-Id: If8e09a082fc024257a98cf332de9a36a18d2adc5"
notmyname,2018-09-14 23:44:38,https://api.github.com/repos/openstack/swift/git/commits/0c97888bcb30e463a728d4bea86be8028b659e83,0c97888bcb30e463a728d4bea86be8028b659e83,"fixed a manpage and added the manpage syntax checker to pep8 jobs

also a drive-by fix to the bindep job--it doesn't need to install

Change-Id: Ic9b68bc60bfbf21b45a1b7f9d7ff9998e01ddd26"
tipabu,2018-09-15 07:33:34,https://api.github.com/repos/openstack/swift/git/commits/2ef21ac05dba52fa6e7f50d2c6311221ef90945d,2ef21ac05dba52fa6e7f50d2c6311221ef90945d,"py3: port request_helpers

Change-Id: I6be1a1c618e4b4fa03b34dad96f378aca01e8e08"
tipabu,2018-09-15 06:47:35,https://api.github.com/repos/openstack/swift/git/commits/b4567e66ec979252c155522ef89c738c8e762ef1,b4567e66ec979252c155522ef89c738c8e762ef1,"py3: include test_base_storage_server

Apparently this was already passing? Not a whole lot there...

Change-Id: I029fe2e7f4162765eee0a390793402523d0975fa"
FatemaKhalid,2018-09-14 21:18:22,https://api.github.com/repos/openstack/swift/git/commits/cfeb32c66baced374a50d2dd2dd5b13b7d15888c,cfeb32c66baced374a50d2dd2dd5b13b7d15888c,"Adding keep_idle config value to socket

User can cofigure KEEPIDLE time for sockets in TCP connection.
The default value is the old value which is 600.

Change-Id: Ib7fb166deb8a87ae4e97ba0671048b1ec079a2ef
Closes-Bug:1759606"
alecuyer,2017-07-13 13:44:56,https://api.github.com/repos/openstack/swift/git/commits/dbacdcf01ce4862d8eb8270c2f1dd2a8c77a5e30,dbacdcf01ce4862d8eb8270c2f1dd2a8c77a5e30,"Add punch_hole utility function

This is useful for deallocating disk blocks as part of an alternate disk
file implementation.

Additionally, add an offset argument to the existing fallocate utility
function; this allows you to grow an existing file.

Sam always had the best descriptions:

  utils.fallocate(fd, size) allocates <size> bytes for the file referred
  to by <fd>. It allows for keeping a reserve of an additional N bytes
  or X% of the filesystem free. If neither fallocate() or
  posix_fallocate() C functions are avaialble, utils.fallocate() will
  log a warning (once only) and not actually allocate space.

  utils.punch_hole(fd, offset, length) deallocates <length> bytes
  starting at <offset> from the file referred to by <fd>. It uses the C
  function fallocate(). If fallocate() is not available, calls to
  utils.punch_hole() will raise an exception.

Since these both use the fallocate syscall, refactor that a bit and get
rid of FallocateWrapper. We add a new _LibcWrapper to do some
lazy-loading of a C function and expose whether the function is actually
available in Python, though. This allows utils.fallocate and
utils.punch_hole to keep their fancy logic pretty well-contained.

Modernized the tests for utils.fallocate() and utils.punch_hole().

Co-Authored-By: Samuel Merritt <sam@swiftstack.com>
Change-Id: Ieac30a477d784905c94742ee3d0898d7e0194b39"
smerritt,2018-06-23 00:49:43,https://api.github.com/repos/openstack/swift/git/commits/114220279b0662079c94eb8432c08550fe7748b3,114220279b0662079c94eb8432c08550fe7748b3,"py3: port list_endpoints

Change-Id: Ic6d0532f9f42b4d57a12aafeec5d34baffab6e23"
tipabu,2018-09-13 17:38:01,https://api.github.com/repos/openstack/swift/git/commits/5a8cfd6e06d4ee7f47c5926c3859cbd6161c0d1a,5a8cfd6e06d4ee7f47c5926c3859cbd6161c0d1a,"Add another user for s3api func tests

Previously we'd use two users, one admin and one unprivileged.

Ceph's s3-tests, however, assume that both users should have access to
create buckets. Further, there are different errors that may be returned
depending on whether you are the *bucket* owner or not when using
s3_acl. So now we've got:

  test:tester1  (admin)
  test:tester2  (also admin)
  test:tester3  (unprivileged)

Change-Id: I0b67c53de3bcadc2c656d86131fca5f2c3114f14"
bloodeagle40234,2018-04-27 07:49:08,https://api.github.com/repos/openstack/swift/git/commits/80001aa096a6a98102db5b4ce73b6c0f12e4ca6b,80001aa096a6a98102db5b4ce73b6c0f12e4ca6b,"Add ceph-s3 test non-voting job

This patch added new non-voting gate job to check the s3api compatibility
via swiftstack/s3compat tool that shows the ratio of compatible S3 APIs
in the gate result for each patch. This is very useful to check the possibility
if the new incoming patch breaks S3 API compatibility unexpectedly.

Originally swift3 has this kind of the gate job but we missed the staff
while migrating from swift3 into swift upstream repo so this is the porting of that.

Note that currently the job is against to only tempauth because we don't have
custom gate jobs using keystone environment other than dsvm.

Change-Id: I6f30f74678ad35479da237361bee48c46c0ecc49"
clayg,2018-09-13 21:42:49,https://api.github.com/repos/openstack/swift/git/commits/123f6f5a4f602156ed29b771f1a7432b69101d90,123f6f5a4f602156ed29b771f1a7432b69101d90,"Allow EC to ignore invalid request ETag

... as long as the correct ETag is sent in the footers.  This would be
relevant to encryption except our middleware pops the client provided
plaintext ETag before passing the request onto the proxy app.

Change-Id: Ie60d1723a0d610e8dab0fd70a3a768c38ce12a85"
clayg,2018-09-12 20:04:14,https://api.github.com/repos/openstack/swift/git/commits/cbfa585d3b48d2d8e2aedb9cedc62226dade8798,cbfa585d3b48d2d8e2aedb9cedc62226dade8798,"Refactor obj.server.ObjectController.PUT

Change-Id: Iebc5cd4c22db159db3b26685e02b37a028eb2be6"
clayg,2018-09-13 16:10:52,https://api.github.com/repos/openstack/swift/git/commits/52ecbf95399a7e4c0d062af8d885ef7ce684eda4,52ecbf95399a7e4c0d062af8d885ef7ce684eda4,"Add a chunks_finished to BaseDiskFileWriter

BaseDiskFileWriter will track md5 and expose upload_size, etag via the
chunks_finished method.

The BaseDiskFileReader already tracks the md5/etag via _iter_etag, for
parity we add a _chunks_etag to the BaseDiskFileReader.

Instead of returning the upload_size and hexdigest every call to write,
we return the tuple from chunks_finished.

Change-Id: I26c58719cff5fde941d0248c250a0204e0379ae5"
tipabu,2018-06-15 22:04:18,https://api.github.com/repos/openstack/swift/git/commits/84b85f03b46278325e8f4fdd04d915960697cbb9,84b85f03b46278325e8f4fdd04d915960697cbb9,"s3api: Include '-' in multipart ETags

Multipart uploads in AWS (seem to) have ETags like:

   '""' + MD5_hex(MD5(part1) + ... + MD5(partN)) + '-' + N + '""'

On the other hand, Swift SLOs have Etags like:

   MD5_hex(MD5_hex(part1) + ... + MD5_hex(partN))

(In both examples, MD5 gets the raw 16-byte digest while MD5_hex
gets the 32-byte hex-encoded digest.)

Some clients (such as aws-sdk-java) use the presence of a dash
to decide whether to perform client-side validation of downloads.

Other clients (like s3cmd) use the presence of a dash *in bucket
listings* to decide whether or not to perform additional HEAD requests
to look for MD5 metadata that can be used to compare against the MD5s
of local files.

Now we include a dash as well, to prevent spurious errors like

> Unable to verify integrity of data download.  Client calculated
> content hash didn't match hash calculated by Amazon S3.  The data
> may be corrupt.

or unnecessary uploads/downloads because the client assumes data has
changed that hasn't.

For new multipart-uploads via the S3 API, the ETag that is stored will
be calculated in the same way that AWS uses. This ETag will be used in
GET/HEAD responses, bucket listings, and conditional requests via the S3
API. Accessing the same object via the Swift API will use the SLO Etag;
however, in JSON container listings the multipart upload etag will be
exposed in a new ""s3_etag"" key.

New SLOs and pre-existing multipart-uploads will continue to behave as
before; there is no data migration or mitigation as part of this patch.

Change-Id: Ibe68c44bef6c17605863e9084503e8f5dc577fab
Closes-Bug: 1522578"
notmyname,2018-09-12 23:12:36,https://api.github.com/repos/openstack/swift/git/commits/ebcc95a96b255a3a48a106b311ea2ed8c408d366,ebcc95a96b255a3a48a106b311ea2ed8c408d366,"added some bootstrapping info to the top of the SAIO doc

Change-Id: Ib82f2494f2cc65a3f15925efe0dfeb52eb7aa22b"
tipabu,2018-09-12 17:27:07,https://api.github.com/repos/openstack/swift/git/commits/ce257b3d1580dd713a4ca4f8125e7226fa8e7ff2,ce257b3d1580dd713a4ca4f8125e7226fa8e7ff2,"DiskFile(Writer) refactor cleanups

Change-Id: I5b0bcc6028dbe6248e0e09baf2cbb72deb011c80"
zaitcev,2018-09-12 18:05:25,https://api.github.com/repos/openstack/swift/git/commits/a42c1dae1104e391eedd6dce7ba907ad9f719192,a42c1dae1104e391eedd6dce7ba907ad9f719192,"DiskFile(Writer) refactor cleanup for unused use_linkat

Change-Id: Ibb30b23a53260a154d009b52388859c5220aca32"
clayg,2018-09-12 15:03:37,https://api.github.com/repos/openstack/swift/git/commits/33c76507531073e431148a4f65da0a40e5ba88eb,33c76507531073e431148a4f65da0a40e5ba88eb,"Add writer method to DiskFile

DiskFile already exposes a reader method that creates the DiskFileReader
instance. Add a writer method for parity.

DiskFile currently only provides a context manager create - that will
open and close the DiskFileWriter.  Add explicit open and close methods
to support more flexibility in how callers manage life-cycle on their
DiskFileWriter instances.

Diskfile confusingly manages some state for DiskFileWriter (e.g. fd,
tmppath, use_linkat).  Encapsulate the DiskFileWriter state to improve
readability and reduce coupling (e.g. put_succeeced).

Change-Id: If18e0041680470a9c57a08e9ea9327acba8593df"
tipabu,2018-09-12 02:24:38,https://api.github.com/repos/openstack/swift/git/commits/8bc143436784304dae7fdff52d76aa62dba888fc,8bc143436784304dae7fdff52d76aa62dba888fc,"Import quote directly from swift.common.utils

... instead of via direct_client.

When I go grepping for direct_client in my code base, I want to find the
actual users of direct_client!

Change-Id: Id55c9c8ea3ab7bb86da1c5e8f6e979c26974a260"
zaitcev,2018-09-11 22:59:11,https://api.github.com/repos/openstack/swift/git/commits/791482675db0d1cc4c84d4776859319ff7caaac7,791482675db0d1cc4c84d4776859319ff7caaac7,"Let error messages to be normal strings again

This changes how we decided to handle HTTPBadRequest and friends.
Previously, we came to forcing everything to be bytes, because
obviously WSGI bodies can only be bytes. But it turned out to
be too much hassle, so let's revisit that decision.

We aren't going to back-convert all the bytes bodies. That is
already too much hassle too. But this patch throws in a few
examples, just to showcase what this patch does.

Change-Id: I206a9611e7f348f49e5c2d0e677fed3b0739c167"
tipabu,2018-09-11 20:55:13,https://api.github.com/repos/openstack/swift/git/commits/560db71f12b5c2c7780a45716bc3d98602d15b2e,560db71f12b5c2c7780a45716bc3d98602d15b2e,"Drop neutron jobs from our gate

Why did we have those??? When have we *ever* broken neutron?
All those jobs ever tell me are to leave a comment saying
""recheck"".

Change-Id: If32b164827d07c4b3efc88fa2794e38ca67c3b53"
tipabu,2018-09-11 15:52:46,https://api.github.com/repos/openstack/swift/git/commits/2ae00de7761388af5dd1aaddb04c2a037b4506cd,2ae00de7761388af5dd1aaddb04c2a037b4506cd,"Add py36 test job

Change-Id: Idb7d9b3bedefc5972b467cce8922e4a673b1cab2"
notmyname,2018-09-11 17:53:33,https://api.github.com/repos/openstack/swift/git/commits/77734bccd25539757c9de3b5bb7bbe3c98a7ad15,77734bccd25539757c9de3b5bb7bbe3c98a7ad15,"Disable the docs badge saying the docs aren't accurate

Change-Id: I1337712cc790baca151db2575f650da243bf09ef"
bloodeagle40234,2018-09-10 22:00:37,https://api.github.com/repos/openstack/swift/git/commits/b4be37cc2536bc43523274fa6b7bd0f4b6ea277a,b4be37cc2536bc43523274fa6b7bd0f4b6ea277a,"Remove post_as_copy deprecated warning from copy middleware

Almost one year has passed since all post_as_copy related code
removed by [1], we don't have to keep the warning message for
post_as_copy setting anymore in the code tree.

1: 1e79f828ad10918bd76ae8df6fe4c4dbf7bbf3c5

Change-Id: Id9eea22ed688574d84ca582584c0c207d5f01383"
tipabu,2018-08-13 19:52:23,https://api.github.com/repos/openstack/swift/git/commits/b478a07ec67d1ed757b5fb4fddbe8d9cd8a6c87b,b478a07ec67d1ed757b5fb4fddbe8d9cd8a6c87b,"Add IPv6 DSVM tests

Change-Id: Ic5c043e8d04302adc6c771e311fa70e6aa2675d1"
ajaeger,2018-09-05 17:46:35,https://api.github.com/repos/openstack/swift/git/commits/8cab628978120552836cb896e8fe436101b09995,8cab628978120552836cb896e8fe436101b09995,"remove legacy-swift-dsvm-functional jobs

The new job swift-dsvm-functional replaces job
legacy-swift-dsvm-functional-identity-v3-only.

Remove legacy-swift-dsvm-functional, we do not install with Identity v2
since queens.

Change-Id: I8b353cba66b22de42ae42954ec44e5802224fc23"
timuralp,2018-09-06 00:42:34,https://api.github.com/repos/openstack/swift/git/commits/1f29508327c0f5c1b06b1b06b06400055681583f,1f29508327c0f5c1b06b1b06b06400055681583f,"Allow for backwards compatibility with swift3.

While s3api is the preferred method going forward, it would be nice to
allow for backwards compatibility with swift3 in the tempauth
middleware.

Change-Id: I4fd4772b1d7b173ee0faf72d1c1f1531646dde8b"
ajaeger,2018-08-29 18:31:47,https://api.github.com/repos/openstack/swift/git/commits/125bb8783609c1bb0e40c68bc6327c0255288600,125bb8783609c1bb0e40c68bc6327c0255288600,"Remove install-guide-jobs

The install-guide-jobs template needs to stay in project-config, remove
it from zuul file.

See also https://review.openstack.org/597618

Change-Id: Iaaa5e0b8de17114db0aab6d539e28cbcc2072cac"
tipabu,2018-08-28 17:11:16,https://api.github.com/repos/openstack/swift/git/commits/d5626598218d4cf197ce7343e448af88abef02ee,d5626598218d4cf197ce7343e448af88abef02ee,"Tighten up pep8 irrelevant-files

We definitely *do* want pep8 running on test-only changes.

Don't really need it for sample-config updates, though.

Change-Id: I363a1e91be83f238cffc4688aa74bfd7553dc900"
tipabu,2017-09-11 16:29:04,https://api.github.com/repos/openstack/swift/git/commits/6f00d42f56d38e6267b819fdf06b7264feb50683,6f00d42f56d38e6267b819fdf06b7264feb50683,"bulk: Use make_subrequest to make subrequests

This ensures we log subrequests.

Change-Id: I6b39d462a8c149f6d55db465f992f01eae465d57
Closes-Bug: 1486193"
tipabu,2018-08-08 20:13:22,https://api.github.com/repos/openstack/swift/git/commits/85f4f940dfd1c9200a67bcdaee8813211d982a93,85f4f940dfd1c9200a67bcdaee8813211d982a93,"Factor out a proper BaseKeyMaster class

... and have the secrets-in-config, secrets-in-KMIP, and
secrets-in-Barbican keymasters all inherit from it.

Change-Id: I36a6ce275a086ec85e2f556fcdc0d0b94ff4e647
Related-Change: Iddc0f333861b6c1f81e181f006cd592b5eb6ea17"
tipabu,2018-08-06 19:25:36,https://api.github.com/repos/openstack/swift/git/commits/1d6521944597b0271817ca7eaebd51348df61e41,1d6521944597b0271817ca7eaebd51348df61e41,"Move legacy-swift-dsvm-functional job in-tree

Note that there's no swift-dsvm-functional-identity-v3-only because
as of the Queens release, that's the *only* way Keystone gets deployed.

Change-Id: I49d963b98f3df21fea0db24c83553ef873ad73c8"
nguyentrihai93,2018-08-24 07:38:24,https://api.github.com/repos/openstack/swift/git/commits/1e800fcf8b781291a4c805ddbbb5fa849c58e75b,1e800fcf8b781291a4c805ddbbb5fa849c58e75b,"switch documentation job to new PTI

This is a mechanically generated patch to switch the documentation
jobs to use the new PTI versions of the jobs as part of the
python3-first goal.

See the python3-first goal document for details:
https://governance.openstack.org/tc/goals/stein/python3-first.html

Change-Id: I686071c13c28a06092220fd6ec379bbf66662ddc
Story: #2002586
Task: #24337"
nguyentrihai93,2018-08-24 07:37:58,https://api.github.com/repos/openstack/swift/git/commits/90e260e0217e3dc4bb2bb1e6e9413953c27b8f3f,90e260e0217e3dc4bb2bb1e6e9413953c27b8f3f,"import zuul job settings from project-config

This is a mechanically generated patch to complete step 1 of moving
the zuul job settings out of project-config and into each project
repository.

Because there will be a separate patch on each branch, the branch
specifiers for branch-specific jobs have been removed.

Because this patch is generated by a script, there may be some
cosmetic changes to the layout of the YAML file(s) as the contents are
normalized.

See the python3-first goal document for details:
https://governance.openstack.org/tc/goals/stein/python3-first.html

Change-Id: Ib8b04669a50a84345f2ad8456a73473aec2df2f4
Story: #2002586
Task: #24337"
tipabu,2018-03-01 00:29:24,https://api.github.com/repos/openstack/swift/git/commits/df954e270945028d81c9541c69a94a65586913f2,df954e270945028d81c9541c69a94a65586913f2,"py3: port bufferedhttp (hopefully)

I've at least tried it out with a py3 proxy, and it seems to work out
OK. I haven't tried killing the socket and verifying that it's actualy
dead, but getting a hold of _real_close *seems like* what we want?

At least the three (!!) tests pass.

Change-Id: Ic08c26185d63a36a5422793d81f621e0698fa572"
tipabu,2018-08-23 18:11:50,https://api.github.com/repos/openstack/swift/git/commits/e547448e96e7a8b927839b18d5d3fae640b1bd27,e547448e96e7a8b927839b18d5d3fae640b1bd27,"Fix warning while building docs

Seen locally:

    Warning, treated as error:
    .../swift/doc/source/overview_policies.rst:555:more than one target
    found for cross-reference u'get_data_dir':
    swift.obj.reconstructor.get_data_dir, swift.obj.replicator.get_data_dir,
    swift.obj.diskfile.get_data_dir

Not sure why it hasn't been seen in the gate...

The whole sentence is suspect, though; the Diskfile class doesn't define
a get_data_dir method, though it uses the module-level get_data_dir...

Change-Id: I6855c82315e1c71596ecce25b66b54133c239377"
notmyname,2018-08-22 17:03:19,https://api.github.com/repos/openstack/swift/git/commits/04d3d6804b67d5bdf4ac801df6115ee3f98636d3,04d3d6804b67d5bdf4ac801df6115ee3f98636d3,"minor updates to changelog and release notes

Change-Id: Ida9c204f644e41ae05dbf6f68083410e143d3183"
openstackadmin,2018-08-22 09:27:43,https://api.github.com/repos/openstack/swift/git/commits/ae9536ea65cd84175e91b7b2a286f4ccb7413caa,ae9536ea65cd84175e91b7b2a286f4ccb7413caa,"Update reno for stable/rocky

Change-Id: I76af04899b696066b009aa753ce71091f3cf874c"
tipabu,2018-08-22 18:56:58,https://api.github.com/repos/openstack/swift/git/commits/dd313b81f545018b0aa056fe44cc50e715f550a8,dd313b81f545018b0aa056fe44cc50e715f550a8,"Reference legacy-tempest-dsvm-neutron-full and neutron-grenade in-tree

... so we can more easily expand their irrelevant-files.

Change-Id: Id365128f524aac0200c611307415feea83c40178"
tipabu,2018-08-22 18:40:57,https://api.github.com/repos/openstack/swift/git/commits/2ddc979e1d6fa680e8867249e11224d2bb1ca477,2ddc979e1d6fa680e8867249e11224d2bb1ca477,"Add irrelevant-files lists for in-tree check/gate jobs

Change-Id: Ia3a8d065e849ec9fed780a6927674e27cbed522b"
notmyname,2018-08-10 23:24:36,https://api.github.com/repos/openstack/swift/git/commits/9bd84beef1e2594c8ee08c8386a494e071eea763,9bd84beef1e2594c8ee08c8386a494e071eea763,"authors/changelog for 2.19.0 release

Change-Id: Ifefe01cc28517a7040596885b54acf3faa75be85"
bloodeagle40234,2018-08-21 04:56:10,https://api.github.com/repos/openstack/swift/git/commits/c63d5c0bf9b2a5a2849d09fc58b625bd1c8745c1,c63d5c0bf9b2a5a2849d09fc58b625bd1c8745c1,"Fix tempurl's example code to be in the code-block

Change-Id: I9d83dc7823cf35a94d7e54c161c40e79911aa48f"
tipabu,2018-06-15 17:58:56,https://api.github.com/repos/openstack/swift/git/commits/7ca1a67d704bc97524cd2b3ec2eede8732e5a9f9,7ca1a67d704bc97524cd2b3ec2eede8732e5a9f9,"Add debugging info to SignatureDoesNotMatch responses

This is comparable to what AWS returns, and should greatly simplify
debugging when diagnosing 403s.

Change-Id: Iabfcbaae919598e22f39b2dfddac36b75653fc10"
tipabu,2018-07-26 00:01:07,https://api.github.com/repos/openstack/swift/git/commits/0dc1b6250ee4847969f160621ba488c0ffc569b2,0dc1b6250ee4847969f160621ba488c0ffc569b2,"Multi-key KMIP keymaster

Now that the trivial keymaster supports multiple keys, let's do
something similar for the KMIP keymaster. Additional keys are
configured as:

    key_id_<secret_id> = <KMIP unique identifier>

While it might be tempting to use the unique identifier directly as the
secret_id, the added indirection allows operators to move keys between
different backends, which may cause different identifiers to be issued.

As with the trivial keymaster, the key to use for PUTs and POSTs is
specified with:

    active_root_secret_id = <secret_id>

Change-Id: Ie52508e47d15ec5c4e96902d3c9f5f282d275683"
alistairncoles,2018-06-25 16:41:29,https://api.github.com/repos/openstack/swift/git/commits/2722e49a8c844e2d20369e8aed230a972eb07e58,2722e49a8c844e2d20369e8aed230a972eb07e58,"Add support for multiple root encryption secrets

For some use cases operators would like to periodically introduce a
new encryption root secret that would be used when new object data is
written. However, existing encrypted data does not need to be
re-encrypted with keys derived from the new root secret. Older root
secret(s) would still be used as necessary to decrypt older object
data.

This patch modifies the KeyMaster class to support multiple root
secrets indexed via unique secret_id's, and to store the id of the
root secret used for an encryption operation in the crypto meta. The
decrypter is modified to fetch appropriate keys based on the secret id
in retrieved crypto meta.

The changes are backwards compatible with previous crypto middleware
configurations and existing encrypted object data.

Change-Id: I40307acf39b6c1cc9921f711a8da55d03924d232"
thiagodasilva,2018-08-17 13:16:15,https://api.github.com/repos/openstack/swift/git/commits/fc04dc1cf20335b7efe9548c5b5243fae0b5a620,fc04dc1cf20335b7efe9548c5b5243fae0b5a620,"Attempt to fix pep8

Test B109 was removed from bandit in release 1.5.0[1]

[1] - https://github.com/PyCQA/bandit/commit/d93eed549242013ca10f6fc990dd4234b69958f7

Change-Id: I57ea610b924c2140b7572762c44cbc6510d0f549"
thiagodasilva,2018-08-15 21:05:24,https://api.github.com/repos/openstack/swift/git/commits/a7c5ca08066d457695c906bd6348b96a54636b86,a7c5ca08066d457695c906bd6348b96a54636b86,"Fix locking in swift-recon-cron

The previous locking method would leave the lock dir lying around
if the process died unexpectedly, preventing others swift-recon-cron
process from running sucessfuly and requiring a manual clean.

Change-Id: Icb328b2766057a2a4d126f63e2d6dfa5163dd223"
tipabu,2018-06-25 22:40:30,https://api.github.com/repos/openstack/swift/git/commits/51b885b3b5797b5d7bfc4a1b0005b4257729d059,51b885b3b5797b5d7bfc4a1b0005b4257729d059,"s3_acl: Require swift_owner authz to create buckets

Otherwise, users can create buckets in accounts they don't own.

Change-Id: I13d557c32b12529ef1087c52f7af302a33d33acb"
tipabu,2018-06-15 20:29:16,https://api.github.com/repos/openstack/swift/git/commits/bd640cdbae95fe8484a3d94d98f62e30a400ecb1,bd640cdbae95fe8484a3d94d98f62e30a400ecb1,"Fix the deletion of non-existent keys

On vanilla Swift, deleting an object that doesn't exist will 404.
On AWS, deleting a key that doesn't exist will either 404 if the bucket
doesn't exist (with a NoSuchBucket code) or 204 (because yep, that's not
accessible).

Change-Id: Ied2a78b56522316bb374f23961621641af3adc83
Related-Change: I6e154594dfda6c3065774c23b24f728625a842bc"
tipabu,2018-08-13 20:58:02,https://api.github.com/repos/openstack/swift/git/commits/5dca610e9449e0d2765254fcfbf81c5721be3871,5dca610e9449e0d2765254fcfbf81c5721be3871,"Fix up test_static_web_pretend_to_be_giant_json

It was actually testing the invalid-JSON handling before...

Change-Id: Ia8b5eaeb42fea5136525c80e67e8d33548c2a8df"
tipabu,2018-08-08 17:06:17,https://api.github.com/repos/openstack/swift/git/commits/7895718ce9df64eeb0c97ebe3da2c9a2a554036c,7895718ce9df64eeb0c97ebe3da2c9a2a554036c,"Fix keymmaster_conf_section typo

Change-Id: I3bce1c4efeb3a3a7319020de76ba7f06015a5a36"
cschwede,2018-08-08 08:55:53,https://api.github.com/repos/openstack/swift/git/commits/dcbdcb8f1c68729be4ccbd4a4f9108552684c557,dcbdcb8f1c68729be4ccbd4a4f9108552684c557,"Disallow uploads with x-amz-tagging headers set

We don't support it yet, so return 501 Not Implemented.

Change-Id: Ie2f4bd1bfdb1bcbdf1a0f0db9d542b6057e9d2ec"
tipabu,2018-08-06 22:52:49,https://api.github.com/repos/openstack/swift/git/commits/b9579404a2d7a0249c5f80824e7acda359a45dfa,b9579404a2d7a0249c5f80824e7acda359a45dfa,"Add probetests to gate jobs

...instead of just check jobs. While we're at it, drop the voting line;
it's voting by default.

Change-Id: I478a82bbac7ba19ed81aae1f5225ffc4e10fb2cb"
tipabu,2018-08-03 19:27:57,https://api.github.com/repos/openstack/swift/git/commits/79539eabf733cb14747649b8b16488b0c828ef90,79539eabf733cb14747649b8b16488b0c828ef90,"Disallow aws-chunked uploads

We don't support it yet, so return 501 Not Implemented. Previously, we'd
store the aws-chunked content (!) and most clients would see it as data
corruption.

See https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-streaming.html
for more information.

Change-Id: I697962039667980ef89212bc480f8b1d3fbd718c"
notmyname,2018-08-01 22:17:42,https://api.github.com/repos/openstack/swift/git/commits/86d78f6667392b2ee0ca017da8f54ff153aca491,86d78f6667392b2ee0ca017da8f54ff153aca491,"imported some docs from the old user-guide

These files are imported (and very lightly edited) from the old
ocata user-guide. It has a few other swift-related docs that seemed
more duplacative of what we already have, but these seem to fill
existing gaps in our docs.

Change-Id: Ib00bf6992327f15f271120dc5dbc86a4a235baec"
notmyname,2018-07-31 21:39:29,https://api.github.com/repos/openstack/swift/git/commits/6a2bd0f25dfd5584be09616cbbf0f0b758a538b3,6a2bd0f25dfd5584be09616cbbf0f0b758a538b3,"improve prefix/delimiter api docs

Change-Id: Ia420ac3f84284eab9d0a371e4d56be6e45994fae"
tipabu,2018-07-30 19:26:37,https://api.github.com/repos/openstack/swift/git/commits/6f920fd4372621e8ca06eb5cdc07a6f399b0d2db,6f920fd4372621e8ca06eb5cdc07a6f399b0d2db,"Add some reno artifacts to .gitignore

I don't see why running `python setup.py sdist` should leave me
with a dirty checkout.

Change-Id: Id932780c2e555b77a0066c70641684c0ddfdd79e"
tipabu,2018-05-24 22:44:39,https://api.github.com/repos/openstack/swift/git/commits/7fd5a128722a4c42406d195b46edb0b0fbc3c3e1,7fd5a128722a4c42406d195b46edb0b0fbc3c3e1,"Stop holding on to sys.exc_info tuples quite so much

This used to be necessary on older eventlet, or you'd get TypeErrors
when you went to reraise. Following eventlet 0.13.0, however, it's just
extra code.

For the original eventlet issue, see
https://web.archive.org/web/20140823005223/https://bitbucket.org/eventlet/eventlet/issue/149/yield-in-except-clause-with-wilcard-raise

Change-Id: I19ad0968a82827bdd4ef75fde9ed51f193627d6e
Related-Bug: 1181146"
tipabu,2018-07-28 02:39:38,https://api.github.com/repos/openstack/swift/git/commits/3c92e3ce878d84d951c0acca26d8d9b76edf1bc1,3c92e3ce878d84d951c0acca26d8d9b76edf1bc1,"Move keymaster_config_path parsing out of _get_root_secret

Change-Id: Iddc0f333861b6c1f81e181f006cd592b5eb6ea17"
tipabu,2018-07-27 20:20:39,https://api.github.com/repos/openstack/swift/git/commits/2f9bd85ae14c7d4a8c0646642e28899de92ec680,2f9bd85ae14c7d4a8c0646642e28899de92ec680,"Define keymaster log routes on the class

... instead of having KmipKeyMaster instantiate its own logger
inside of _get_root_secret.

Bonus: KmsKeyMaster uses its own log route now.

Bonus bonus: get rid of KmsKeyMaster's pointlessly-overriden
__init__ method.

Change-Id: Idb4b832e5ca0e3d749fe2c0b7ba283447a4dc69e"
dhellmann,2018-03-22 22:54:29,https://api.github.com/repos/openstack/swift/git/commits/ba8447e0563c829bac224a2ede0a448355d741b7,ba8447e0563c829bac224a2ede0a448355d741b7,"add lower-constraints job

Create a tox environment for running the unit tests against the lower
bounds of the dependencies.

Create a lower-constraints.txt to be used to enforce the lower bounds
in those tests.

Add openstack-tox-lower-constraints job to the zuul configuration.

See http://lists.openstack.org/pipermail/openstack-dev/2018-March/128352.html
for more details.

Change-Id: Iac4a202a1d723822d10f4d34a397eff9de3f2108
add the job in project-config:
Depends-On: https://review.openstack.org/555034
remove branch optimiazation in check and add swift exclusions (series):
Depends-On: https://review.openstack.org/560109
Signed-off-by: Doug Hellmann <doug@doughellmann.com>
Co-Authored-By: Nguyen Hai <nguyentrihai93@gmail.com>"
tipabu,2018-07-25 23:15:38,https://api.github.com/repos/openstack/swift/git/commits/c3d83bae38b37e58b6e3e989d0e14d3c0b9d7399,c3d83bae38b37e58b6e3e989d0e14d3c0b9d7399,"Remove some unnecessary SkipTests

The @requires_acls decorator already checks for cluster_info[""tempauth""]

Change-Id: I2c40fbea1fd799059dca6bfb82d5fed833991826"
tipabu,2018-07-24 22:51:01,https://api.github.com/repos/openstack/swift/git/commits/60f1d34048c5d8b56f0eb6c674f4a025adbb1e3d,60f1d34048c5d8b56f0eb6c674f4a025adbb1e3d,"Lower the required version of ipaddress

CentOS 7 distributes 1.0.16, and there is no real reason to avoid it.
Plus, in our probetests we apparently cannot avoid the system package.

Change-Id: I108ec2438dbc02f3e85f8da43e11ff4cdcfd1e4b"
smerritt,2018-02-05 22:06:18,https://api.github.com/repos/openstack/swift/git/commits/8e651a2d3dbc6b66cd26b38c13889c6b313f1971,8e651a2d3dbc6b66cd26b38c13889c6b313f1971,"Add fallocate_reserve to account and container servers.

The object server can be configured to leave a certain amount of disk
space free; default is 1%. This is useful in avoiding 100%-full
filesystems, as those can get Swift in a state where the filesystem is
too full to write tombstones, so you can't delete objects to free up
space.

When a cluster has accounts/containers and objects on the same disks,
then you can wind up with a 100%-full disk since account and container
servers don't respect fallocate_reserve. This commit makes account and
container servers respect fallocate_reserve so that disks shared
between account/container and object rings won't get 100% full.

When a disk's free space falls below the configured reserve, account
and container PUT, POST, and REPLICATE requests will fail with a 507
status code. These are the operations that can significantly increase
the disk space used by a given database.

I called the parameter ""fallocate_reserve"" for consistency with the
object server. No actual fallocate() call happens under Swift's
control in the account or container servers (sqlite3 might make such a
call, but it's out of our hands).

Change-Id: I083442eef14bf83c0ea717b1decb3e6b56dbf1d0"
alistairncoles,2018-07-12 09:29:57,https://api.github.com/repos/openstack/swift/git/commits/0cd42a2d3384789305ba0ed3aa59987ed977b211,0cd42a2d3384789305ba0ed3aa59987ed977b211,"Check other params preserved when slo_etag is extracted

Change-Id: Ie34ce2a33f2a642b97986fa28cf9db9e6da964d5
Related-Change: I67478923619b00ec1a37d56b6fec6a218453dafc
Related-Change: Ibaa630b5b4251cc4f821c01d3c09a8b8a6be342c"
clayg,2018-07-12 03:51:06,https://api.github.com/repos/openstack/swift/git/commits/f8b9c24a1cb5946e41bb7e54d4e159128bb21868,f8b9c24a1cb5946e41bb7e54d4e159128bb21868,"Add unittest for slo_etag

Related-Change-Id: I67478923619b00ec1a37d56b6fec6a218453dafc

Change-Id: Ibaa630b5b4251cc4f821c01d3c09a8b8a6be342c"
tipabu,2018-07-11 23:56:28,https://api.github.com/repos/openstack/swift/git/commits/fa4c30de281fe4d2ff623271b91928e2b55cc362,fa4c30de281fe4d2ff623271b91928e2b55cc362,"Include s3api schemas in sdists

Change-Id: I5b6b5c283a9e2533a2e753fe81ba429792e590cd
Closes-Bug: 1781297"
tipabu,2016-05-20 20:17:16,https://api.github.com/repos/openstack/swift/git/commits/c4c98eb64d3d99a5fb58f0390600f3e7755da1b2,c4c98eb64d3d99a5fb58f0390600f3e7755da1b2,"Include SLO ETag in container updates

Container servers will store an etag like

   <MD5 of manifest on disk>; slo_etag=<MD5 on concatenated ETags>

which the SLO middleware will break out into separate

   ""hash"": ""<MD5 of manifest on disk"",
   ""slo_etag"": ""\""<MD5 of concatenated ETags\"""",

keys for JSON listings. Text and XML listings are unaffected.

If a middleware left of SLO already specified a container update
override, the slo_etag parameter will be appended. If the base header
value was blank, the MD5 of the manifest will be inserted.

SLOs that were created on previous versions of Swift will continue to
just have the MD5 of the manifest in container listings.

Closes-Bug: 1618573
Change-Id: I67478923619b00ec1a37d56b6fec6a218453dafc"
nguyentrihai93,2018-07-02 08:22:03,https://api.github.com/repos/openstack/swift/git/commits/4409da697f0a563a5e1fde923fadb98322f2ea99,4409da697f0a563a5e1fde923fadb98322f2ea99,"Update doc building instructions in Development Guidelines

Change-Id: Ifd2f468ad745d19ef474ae7503a8bd79d429fc1b"
ehudkaldor,2018-07-05 21:17:18,https://api.github.com/repos/openstack/swift/git/commits/2f4f2dd78c8d0f6bf1df19edad76bc78b7ebb35f,2f4f2dd78c8d0f6bf1df19edad76bc78b7ebb35f,"Add Alpine Linux suuprt to bindep

This patch adds Alpine Linux (apk) entries to bindep.txt.

closes-bug: #1780163
Change-Id: Iff24a2b02b8927113d616a5af06331f1a1e31170"
alistairncoles,2017-06-20 10:17:33,https://api.github.com/repos/openstack/swift/git/commits/9a7b46e1e346b08b9ed69449778d5baf4028fa11,9a7b46e1e346b08b9ed69449778d5baf4028fa11,"swift-ring-builder shows hint about composite builder file

If swift-ring-builder is erroneously given a composite builder
file, which it will fail to load, it will now print a hint
that the file is a composite builder file.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: If4517f3b61977a7f6ca3e08ed5deb182aa87a366"
tipabu,2018-07-05 06:06:10,https://api.github.com/repos/openstack/swift/git/commits/7bacd5306233e7bb2e4462ce293ddb62d7fd55ff,7bacd5306233e7bb2e4462ce293ddb62d7fd55ff,"Be consistent about capitalizing Swift in the README

Change-Id: If6441d61ee0cb11641c38d46763db6244e05e275"
tipabu,2018-07-05 06:02:42,https://api.github.com/repos/openstack/swift/git/commits/f27f1ae6490a30183c155f703a2bc31bcdd8aac0,f27f1ae6490a30183c155f703a2bc31bcdd8aac0,"Make docs link consistent

We already link to Swift's docs in particular (as opposed to OpenStack's
in general) later in the README, may as well do it earlier, too.

Change-Id: Ib11bfb551e44ccc6bbbad9d78e1e20d6486a3103"
mmcardle,2018-05-18 11:04:14,https://api.github.com/repos/openstack/swift/git/commits/26b20ee7296442231e74c982891a9b85c217ff79,26b20ee7296442231e74c982891a9b85c217ff79,"IP Range restrictions in temp urls

This patch adds an additional optional parameter to tempurl
which restricts the ip's from which a temp url can be used from.

Change-Id: I23fe998a980960d4a32df042b3f6a21f096c36af"
alistairncoles,2018-06-26 11:48:58,https://api.github.com/repos/openstack/swift/git/commits/1951dc7e9a835ecc6ba12f74413e93e04ff85d95,1951dc7e9a835ecc6ba12f74413e93e04ff85d95,"Add keymaster to fetch root secret from KMIP service

Add a new middleware that can be used to fetch an encryption root
secret from a KMIP service. The middleware uses a PyKMIP client
to interact with a KMIP endpoint. The middleware is configured with
a unique identifier for the key to be fetched and options required
for the PyKMIP client.

Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Change-Id: Ib0943fb934b347060fc66c091673a33bcfac0a6d"
zaitcev,2018-07-03 03:30:23,https://api.github.com/repos/openstack/swift/git/commits/91a8cd2952a25b340f5778cace95910e43cbcbb6,91a8cd2952a25b340f5778cace95910e43cbcbb6,"PUT+POST: break out putter specific test classes

In test_obj.py there are PUT tests that are specific to the Putter
type and others that apply to any Putter type. This patch refactors
them into separate classes to provide greater clarity and to allow
common tests to be applied to each Putter type.

Taking this infrastracture out and ahead of PUT+POST itself allows
it to be reviewed much easier, especially when you look at the diff.

Related-Change-Id: I64b0d8fdb2ffce786f56665a74ed7eb2603abfda
Change-Id: Ibb09b5a28098fb51e25ab5a7134b518cc68eaf89"
tipabu,2018-06-27 22:54:01,https://api.github.com/repos/openstack/swift/git/commits/8bfb97a3a8bfe1a1db66560a9dba21277b0c006e,8bfb97a3a8bfe1a1db66560a9dba21277b0c006e,"Content-Length enforcement fixups

Change-Id: Ice8144700cf447ecf5c6175dc64aa7662013fba5
Related-Change: I74d8c13eba2a4917b5a116875b51a781b33a7abf"
tipabu,2018-06-28 00:11:17,https://api.github.com/repos/openstack/swift/git/commits/783c7f6117eee1be693b3136ee85c1f708250991,783c7f6117eee1be693b3136ee85c1f708250991,"py3: port proxy/controllers/info.py

Yes, this means you can now start a proxy-server process on py3! And it
will give you something useful on /info!

Apparently you can even get auth tokens from tempauth, although the
tempauth unit tests don't pass yet.

Change-Id: I86ead2989b5934a7584cdd75719ce239826e01ec"
tipabu,2018-06-26 22:56:56,https://api.github.com/repos/openstack/swift/git/commits/d03fc9bc5401ffc6beb9b6faf810577dcd9c4aac,d03fc9bc5401ffc6beb9b6faf810577dcd9c4aac,"swob: Stop auto-encoding unicode bodies

Instead, require that callers provide an encoding.

Related-Change: I31408f525ba9836f634a35581d4aee6fa2c9428f
Change-Id: I3e5ed9e4401eea76c375bb43ad4afc58b1d8006a"
alistairncoles,2018-06-28 11:57:57,https://api.github.com/repos/openstack/swift/git/commits/600521cf57a465a46f1d8e2f72ed3198a0d8871d,600521cf57a465a46f1d8e2f72ed3198a0d8871d,"Describe separate keymaster config file in docs

The use of a separate keymaster config file was previously only
described in the context of the kms_keymaster middleware. This patch
adds a section to the simple keymaster middleware docs.

Change-Id: Ifa3ad9d6e892b81c52df1f6666a9881042ac60bd"
alistairncoles,2018-06-28 08:19:11,https://api.github.com/repos/openstack/swift/git/commits/108304ea69d2ecc2b1beae8e4ab3dedec9bce334,108304ea69d2ecc2b1beae8e4ab3dedec9bce334,"Improve README doc building instructions

Dependencies must be installed before the docs
can successfully be built with sphinx.

Change-Id: Idd896408ecf6d9afd37ae5701cdbc224b029fd2f"
nguyentrihai93,2018-06-28 04:47:06,https://api.github.com/repos/openstack/swift/git/commits/891861546d2342cacd13e417c4429b609d2d7a00,891861546d2342cacd13e417c4429b609d2d7a00,"Update README related to documentation building

New command is:
sphinx-build -W -b html doc/source doc/build/html

Change-Id: I185ae7d69093660ab558cf866ae36e45bf213975"
tipabu,2018-04-03 23:40:06,https://api.github.com/repos/openstack/swift/git/commits/7ae2cc4cc8fcf3306f5792fb44ca546c110f10db,7ae2cc4cc8fcf3306f5792fb44ca546c110f10db,"Address some review comments

There's already a nice way to reap a process if it's exited while not
waiting, and it doesn't require timeouts.

Change-Id: Ie327fecb6a3055ff146a94e1171ec0ec68d7179f
Related-Change: If6dc7b003e18ab4e8a5ed687c965025ebd417dfa"
tipabu,2018-03-26 21:49:12,https://api.github.com/repos/openstack/swift/git/commits/158d4c28b224d3c9064df3352e98432e81355c4d,158d4c28b224d3c9064df3352e98432e81355c4d,"swob.Match: remove quotes when checking __contains__

If we're going to drop the quotes during initialization, we should
probably drop them when making comparisons, too.

Change-Id: I90c6e8a7c6faf8fafb0cd64fabbc9629d6c4c48a"
tipabu,2018-06-26 21:19:48,https://api.github.com/repos/openstack/swift/git/commits/efcf7e6a95d0c3c65b728840fae13daaa6f40c58,efcf7e6a95d0c3c65b728840fae13daaa6f40c58,"swob: Fix up some WSGI string business

Change-Id: Iee1bab5775b243c318aa22ee4a548d793e6684ca"
tipabu,2018-06-26 22:22:07,https://api.github.com/repos/openstack/swift/git/commits/01fb3efdae830e0a5cb5012fe869946daec3a6dc,01fb3efdae830e0a5cb5012fe869946daec3a6dc,"Log unexpected errors when trying to clean up empty dirs

Change-Id: I6a0640ba2287dca4eb85e226b809f7b009ef6c17
Related-Change: I2849a757519a30684646f3a6f4467c21e9281707"
smerritt,2018-06-22 23:09:26,https://api.github.com/repos/openstack/swift/git/commits/306f9a150f4490a5af0fd41f0b08c5fcd2d5a32a,306f9a150f4490a5af0fd41f0b08c5fcd2d5a32a,"py3: port domain_remap tests

The domain_remap middleware didn't need to change, only its tests.

Change-Id: I5edf05b609ce263708f851219c38c1bd1b645a6f"
smerritt,2018-06-22 22:59:03,https://api.github.com/repos/openstack/swift/git/commits/081ff36e6ebe0e2e61627be933e90f4eeef25490,081ff36e6ebe0e2e61627be933e90f4eeef25490,"py3: port crossdomain

Change-Id: I83a35f066d69edf39c74fd22c7fb248b5320d21f"
smerritt,2018-06-22 22:50:31,https://api.github.com/repos/openstack/swift/git/commits/50ea4e1e089f41c8da0c893e8aa482a4eca4a045,50ea4e1e089f41c8da0c893e8aa482a4eca4a045,"py3: port healthcheck

Typed ""b"" in a half-dozen places and fixed a typo in a test name.

Change-Id: Idcb8b2eeef5b545eb0944cc22b7c7961e8c2f8f0"
notmyname,2018-06-25 20:47:45,https://api.github.com/repos/openstack/swift/git/commits/0edfb879a76a96f7ef511d78bd459d472e907579,0edfb879a76a96f7ef511d78bd459d472e907579,"reorganized existing ansible playbooks

Change-Id: Ib08c2c4c685eb30a4c804ece0b667575c04d2ca0"
alistairncoles,2018-06-25 11:13:59,https://api.github.com/repos/openstack/swift/git/commits/1fa4b9e3feba75e56293aaf57352ec5add3551a4,1fa4b9e3feba75e56293aaf57352ec5add3551a4,"Remove unnecessary loop in test_keymaster.py

The ignored_secret variable wasn't being used.

Change-Id: Ia659f3672941f9bb86054ce6cafbbe6fe7ccafbc
Related-Change: I1cd9a97c4e8d87d7c065866e7ad3a9e748ff19ab"
lclxg,2018-06-22 10:30:56,https://api.github.com/repos/openstack/swift/git/commits/f0e46857b718b2232c813d7ef219da1150807853,f0e46857b718b2232c813d7ef219da1150807853,"fix misspelling of 'server'

Change-Id: I61f916d5734708a821c8d51961fc2d222967f6e8"
tipabu,2018-06-21 20:50:33,https://api.github.com/repos/openstack/swift/git/commits/5652dec43ba4560d72410679899d5cca515bacb4,5652dec43ba4560d72410679899d5cca515bacb4,"container-updater: Always report zero objects/bytes used for shards

Otherwise, a sharded container AUTH_test/sharded will have its stats
included in the totals for both AUTH_test *and* .shards_AUTH_test

Co-Authored-By: Alistair Coles <alistairncoles@gmail.com>
Change-Id: I7fa74e13347601c5f44fd7e6cf65656cc3ebc2c5"
smerritt,2018-06-22 00:36:27,https://api.github.com/repos/openstack/swift/git/commits/a5a6a274dc17651b2940f2f59645f78494a2ab4e,a5a6a274dc17651b2940f2f59645f78494a2ab4e,"rename swob.str_from_wsgi -> swob.wsgi_to_str

This way we have wsgi_to_str and str_to_wsgi; this makes it easier to
read and to tab-complete than having str_from_wsgi and str_to_wsgi
where the important part is the middle word.

Change-Id: Ibab626355d8730dcd99c9e5720186ce77faf7ab8"
smerritt,2018-06-22 00:23:41,https://api.github.com/repos/openstack/swift/git/commits/3920b88daaaa6c9c819b604f2094305e507a41cf,3920b88daaaa6c9c819b604f2094305e507a41cf,"py3: port catch_errors

Today's diff is brought to you by the letter ""b"".

Change-Id: I074c1ff3f1232a899c101f2856dff4a881a6fe77"
smerritt,2018-06-22 00:18:42,https://api.github.com/repos/openstack/swift/git/commits/e0b4eb225ca1375dc3d3498b3e51bcf3e01a39bc,e0b4eb225ca1375dc3d3498b3e51bcf3e01a39bc,"py3: fix test_proxy_logging.py

Only the tests needed to change, and it was nearly all just prepending
""b"" to a bunch of string literals.

Change-Id: Id5317e471c04a05627438c281bb0d6a97cf6a8a4"
tipabu,2018-05-23 21:59:30,https://api.github.com/repos/openstack/swift/git/commits/5b79ce90d259e860286c0f2bc43dd807f37d10de,5b79ce90d259e860286c0f2bc43dd807f37d10de,"Reverse shard ranges later

... so we have fewer special cases to consider.

Change-Id: Ifd6c7357303789991087371d077ecfec5d6ff1fa"
tipabu,2018-06-21 22:43:26,https://api.github.com/repos/openstack/swift/git/commits/1318bacc177d060f95b244cc2a1075fe43d4699a,1318bacc177d060f95b244cc2a1075fe43d4699a,"py36: Fix test_get_logger_sysloghandler_plumbing

Change-Id: Ibdb9e2bbec1c962d930a3f69fc95a8c562ac13b7"
smerritt,2018-06-21 21:28:41,https://api.github.com/repos/openstack/swift/git/commits/ba0b3c3b68c4ee27d39812ca9962031f9179d335,ba0b3c3b68c4ee27d39812ca9962031f9179d335,"Add clarifying comment about surrogate check

Change-Id: I55229e846c7c576ba189787abc9f983558f463a8"
tipabu,2017-09-15 06:15:40,https://api.github.com/repos/openstack/swift/git/commits/f192f51d371e489f74f2bd71c811a4ce8d53afa1,f192f51d371e489f74f2bd71c811a4ce8d53afa1,"Have check_drive raise ValueError on errors

...which helps us differentiate between a drive that's not mounted vs.
not a dir better in log messages. We were already doing that a bit in
diskfile.py, and it seems like a useful distinction; let's do it more.

While we're at it, remove some log translations.

Related-Change: I941ffbc568ebfa5964d49964dc20c382a5e2ec2a
Related-Change: I3362a6ebff423016bb367b4b6b322bb41ae08764
Change-Id: Ife0d34f9482adb4524d1ab1fe6c335c6b287c2fd
Partial-Bug: 1674543"
tipabu,2018-06-20 23:50:51,https://api.github.com/repos/openstack/swift/git/commits/2b19c26498e87911a431aad5cc00f6c16bbc6311,2b19c26498e87911a431aad5cc00f6c16bbc6311,"py3: Port common/swob

Change-Id: I31408f525ba9836f634a35581d4aee6fa2c9428f"
tipabu,2018-06-20 22:45:50,https://api.github.com/repos/openstack/swift/git/commits/0694e51eb7a6bcc1fe09c8b9b4d295d82608f0bb,0694e51eb7a6bcc1fe09c8b9b4d295d82608f0bb,"py3: Port common/constraints

Alternate approach to https://review.openstack.org/#/c/559902

Change-Id: I1e244c231753b8f4b6f1cf95cb0ae4c3c959ae0f"
tipabu,2018-06-20 22:44:26,https://api.github.com/repos/openstack/swift/git/commits/2637fec004042db20da9603adf7e8938b2bc71a3,2637fec004042db20da9603adf7e8938b2bc71a3,"Add py36 testenv

Ubuntu 18.04 ships 3.6.5; may as well have a testenv handy for it.

Change-Id: Ibea05bc879685fab148cde1b19510e83f0639f5d"
notmyname,2018-06-20 21:43:59,https://api.github.com/repos/openstack/swift/git/commits/f21bbe0cbe1d267adbd49500b71f86185d8ec99d,f21bbe0cbe1d267adbd49500b71f86185d8ec99d,"specify test selector with py3 packages in bindep

Change-Id: I916b9d6e62c0f3781408a90e72c17339658a25f0"
alistairncoles,2018-05-30 14:05:05,https://api.github.com/repos/openstack/swift/git/commits/a59c5e3baed561c6a54d27b0e5a10533ff56f154,a59c5e3baed561c6a54d27b0e5a10533ff56f154,"Resolve TODO's in test/probe/test_sharder.py

Resolve outstanding TODO's. One TODO is removed because there isn't an
easy way to arrange for an async pending to be targeted at a shard
container.

Change-Id: I0b003904f73461ddb995b2e6a01e92f14283278d"
alistairncoles,2018-06-20 09:49:30,https://api.github.com/repos/openstack/swift/git/commits/554c07aa5ff1965cac6c490e0edc94804e5905e8,554c07aa5ff1965cac6c490e0edc94804e5905e8,"Fix the example webhook middleware

Change-Id: I242dc8bc655a1d1243c2d4bd51fc62e4dcadc67b"
alistairncoles,2018-06-20 09:09:38,https://api.github.com/repos/openstack/swift/git/commits/a1cb91993096971934755cae08aa8013c10fc8f9,a1cb91993096971934755cae08aa8013c10fc8f9,"Use valid eventlet logger method

eventlet<=0.17.4 LoggerFileWrapper does not have an error() method
so don't try to call it. Instead, use info() which even in newer
eventlet versions does exactly the same as error().

This bug only manifests in unit tests once the Related-Bug has been fixed
(see Related-Change).

Closes-Bug: #1777836
Related-Bug: #1777701
Related-Change: I68fd9d0263a6720aaf0d90b8ea6da1158105ac01

Change-Id: I46190567549826c811ffa51e9a71a38a20d9ce97"
alistairncoles,2018-06-20 08:59:55,https://api.github.com/repos/openstack/swift/git/commits/642d8748c0f3401d702e86aab2fdc719a314e367,642d8748c0f3401d702e86aab2fdc719a314e367,"Fix test_wsgi.py tests failing with eventlet <=0.18.4

Older versions of eventlet expect getsocketname() to return a tuple,
and newer versions are happy to receive a tuple, so fix the mock to
return a tuple.

Change-Id: I68fd9d0263a6720aaf0d90b8ea6da1158105ac01
Closes-Bug: #1777701"
smerritt,2018-06-15 23:31:25,https://api.github.com/repos/openstack/swift/git/commits/4a0afa9fea60bf2d1943b59a1f4ab49cb89e682a,4a0afa9fea60bf2d1943b59a1f4ab49cb89e682a,"Enforce Content-Length in catch_errors

If a WSGI application produces the header ""Content-Length: <N>"" but
does not produce exactly N bytes of response, then that is an error
and an exception should be thrown so that the WSGI server can take the
correct action (close the TCP connection for HTTP <= 1.1, something
else for HTTP 2.0).

As part of this, I also fixed a bug in DLOs where a HEAD response
might have a body. The way it works is this:

 * user makes HEAD request for DLO manifest

 * DLO middleware makes GET request for container

 * authorize callback (e.g. from tempurl) replies 401 for container
   GET; response has a nonempty body (it's a GET response; that's
   fine)

 * DLO notes that response is non-2xx, returns it as-is

 * client gets response with nonempty body to a HEAD request

The fix there was simple; if the original request method was HEAD,
clear out the response body.

Change-Id: I74d8c13eba2a4917b5a116875b51a781b33a7abf
Related-Bug: 1568650"
smerritt,2018-06-15 22:10:53,https://api.github.com/repos/openstack/swift/git/commits/b08355ea3f4c1caaa83915f54a934c60f7c5107a,b08355ea3f4c1caaa83915f54a934c60f7c5107a,"Rename test_except.py -> test_catch_errors.py

Every other middleware has files swift/common/middleware/<mw>.py and
test/unit/common/middleware/test_<mw>.py, while catch_errors has
test_except.py, which makes its tests harder to find. Let's follow the
same naming pattern.

Change-Id: I534ff57ac2fe8e12a3f84d821da04d679f1ced3a"
tipabu,2018-06-15 20:02:13,https://api.github.com/repos/openstack/swift/git/commits/ac69a71a8311873111d2401782bc8c8fc6fee41d,ac69a71a8311873111d2401782bc8c8fc6fee41d,"s3api: Stop debug-logging the entire wsgi environment

Previously, you could not safely turn on debug logging in a production system.

Change-Id: I2a1cbd540ebb57a4c227a08e37f5b64f7ac8ca35"
tipabu,2018-06-14 23:45:22,https://api.github.com/repos/openstack/swift/git/commits/049dc0c5e01dbe9fb2fb5b16577bf4441280960c,049dc0c5e01dbe9fb2fb5b16577bf4441280960c,"Blacklist eventlet 0.23.0

See https://github.com/eventlet/eventlet/issues/488

Fix at https://github.com/eventlet/eventlet/pull/497

Change-Id: I1aa22f23fd7808c5d959accbf3a3d2daace8c05f
Depends-On: Ieb895eded03e3aabef8ac1ed69bd45d11f44b776"
tipabu,2018-06-15 17:42:08,https://api.github.com/repos/openstack/swift/git/commits/572b6be8f254872b05993bb96306b488fa4d97f1,572b6be8f254872b05993bb96306b488fa4d97f1,"Set lower bounds on all requirements and test-requirements

I just took these from the current versions at
https://github.com/openstack/requirements/blob/master/lower-constraints.txt
so we can get the the change we *actually* want, which is to black-list
a known-bad version of eventlet.

Change-Id: I9842c9975821bda5c7d8bf2fc214480c0c0a5e96"
tipabu,2018-06-12 18:58:58,https://api.github.com/repos/openstack/swift/git/commits/8e892713eebcbfb66996f4573f83e1b5e4929c41,8e892713eebcbfb66996f4573f83e1b5e4929c41,"Tighten up staticweb redirect test

Change-Id: Ifc3f2f58f51c71f4e652567b4f9c82deb98bbb5b"
tipabu,2018-06-12 18:55:31,https://api.github.com/repos/openstack/swift/git/commits/b39a88ca6532eaff68d164ea49049cb8f4b5db70,b39a88ca6532eaff68d164ea49049cb8f4b5db70,"func tests: Rename storage_url to storage_path

... so we can use storage_url for actual, complete URLs.
Also, expose storage_scheme for easier comparisons.

Change-Id: Iffcfc327bc674681ac51fe75c1d9911fa3a60d54"
tipabu,2018-06-15 00:08:09,https://api.github.com/repos/openstack/swift/git/commits/7042d2cc9e7df7ab8189e1d987e18ee483772a60,7042d2cc9e7df7ab8189e1d987e18ee483772a60,"Use path_qs instead of reinventing it

Change-Id: I686db8fc456fb43dc9f51d83feb3fadeb397ed76"
tipabu,2018-06-08 19:21:10,https://api.github.com/repos/openstack/swift/git/commits/f6a436aedabeed758fee543d16636bb3396d5393,f6a436aedabeed758fee543d16636bb3396d5393,"Only try to fetch or sync shard ranges if the remote supports sharding

Change-Id: I7231e8af310e268484f2075f0194b7783cf1c3ea"
tipabu,2018-05-24 23:06:11,https://api.github.com/repos/openstack/swift/git/commits/a718cb3f1f7645d1d7beaa716b542655e97ec518,a718cb3f1f7645d1d7beaa716b542655e97ec518,"py3: fix up some NameErrors

reduce, cmp, basestring, unicode, long -- none of those exist under py3.

Change-Id: I860abbae3fa4e8353a090df1470aa706d5906e2f"
alistairncoles,2017-06-19 13:46:14,https://api.github.com/repos/openstack/swift/git/commits/6b626f2f986af0f99fae4c9e8efc9579fa47acf2,6b626f2f986af0f99fae4c9e8efc9579fa47acf2,"Experimental swift-ring-composer CLI to build composite rings

Provides a simple, experimental, CLI tool to generate a
composite ring from a list of component builder files.

For example:

  swift-ring-composer <composite-file> compose \
      <builder-file> <builder-file> --output <ring-file>

Commands available:

- compose: compose a list of builder file to a composite ring
- show: show the metadata for a composite ring

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>
Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Change-Id: I25a79e71c13af352e19e4358f60545265b51584f"
wangdequn,2018-06-14 02:22:30,https://api.github.com/repos/openstack/swift/git/commits/026f7065639cc0f2a3db9de0e7436a9b701ba496,026f7065639cc0f2a3db9de0e7436a9b701ba496,"rectify 'a integer number' to 'an integer number'

Change-Id: I307baf793cd39786b3a8a921f5b02c945e1dbf46"
wangdequn,2018-06-14 02:18:47,https://api.github.com/repos/openstack/swift/git/commits/2a2ce04b4fc4fa7ef7da03b25bea4ebf697b3551,2a2ce04b4fc4fa7ef7da03b25bea4ebf697b3551,"rectify 'a invalid version' to 'an invalid version'

Change-Id: I854134736ce80cb27701afff508a6f7342a61d64"
smerritt,2018-06-04 23:26:50,https://api.github.com/repos/openstack/swift/git/commits/d5c532a94ed84b445fa7019c87fa80413ae52f4c,d5c532a94ed84b445fa7019c87fa80413ae52f4c,"object-updater: add concurrent updates

The object updater now supports two configuration settings:
""concurrency"" and ""updater_workers"". The latter controls how many
worker processes are spawned, while the former controls how many
concurrent container updates are performed by each worker
process. This should speed the processing of async_pendings.

There is a change to the semantics of the configuration
options. Previously, ""concurrency"" controlled the number of worker
processes spawned, and ""updater_workers"" did not exist. I switched the
meanings for consistency with other configuration options. In the
object reconstructor, object replicator, object server, object
expirer, container replicator, container server, account replicator,
account server, and account reaper, ""concurrency"" refers to the number
of concurrent tasks performed within one process (for reference, the
container updater and object auditor use ""concurrency"" to mean number
of processes).

On upgrade, a node configured with concurrency=N will still handle
async updates N-at-a-time, but will do so using only one process
instead of N.

UpgradeImpact:

If you have a config file like this:

    [object-updater]
    concurrency = <N>

and you want to take advantage of faster updates, then do this:

    [object-updater]
    concurrency = 8  # the default; you can omit this line
    updater_workers = <N>

If you want updates to be processed exactly as before, do this:

    [object-updater]
    concurrency = 1
    updater_workers = <N>

Change-Id: I17e18088e61f664e1b9942d66423666d0cae1689"
alistairncoles,2018-06-13 11:20:17,https://api.github.com/repos/openstack/swift/git/commits/65e1de29d68f7d7a19833e3a261c9a34d65c136a,65e1de29d68f7d7a19833e3a261c9a34d65c136a,"Fix shard_max_row in ContainerBroker.get_replication_info()

ContainerBroker adds the shard_max_row item to the
get_replication_info result by querying the db for the shard ranges
table max rowid. However, the wrong table name was being used in the
db query such that the value was always -1. This bug was benign
because the value of shard_max_row is not currently used.

Noticed while reviewing [1] which does make use of the shard_max_row
*key* in replication info.

[1] Related-Change: I7231e8af310e268484f2075f0194b7783cf1c3ea

Change-Id: I9e733e301894f1ffff4a1092926cc0df8419c5b5"
wangdequn,2018-06-13 06:08:18,https://api.github.com/repos/openstack/swift/git/commits/2ee836388bdab57fff551a50dce89811cbc31581,2ee836388bdab57fff551a50dce89811cbc31581,"rectify 'a expirting object' to 'an expiring object'

Change-Id: I5a0eef505c7661c52c90e9032e38d0e438440726"
gaofei-inspur,2018-06-13 03:18:13,https://api.github.com/repos/openstack/swift/git/commits/f2295a688cd6e60f016ca6035bb2358e863dc0d9,f2295a688cd6e60f016ca6035bb2358e863dc0d9,"Fix typo in sharding docs

This patch removes an additional 'and' added to a sentence.

Change-Id: I6ab47637ef2d2f97f35188a84e741274c2b504e8"
tipabu,2018-05-22 17:27:46,https://api.github.com/repos/openstack/swift/git/commits/dc8d1c964a9d3b561652e3536e671008d8a01f76,dc8d1c964a9d3b561652e3536e671008d8a01f76,"Get rid of tpool_reraise

As best I can tell, eventlet already does (and always has done) the
right thing, and we were just bad at catching Timeouts.

For some history:

    https://github.com/openstack/swift/commit/5db3cb3
    https://github.com/openstack/swift/commit/2b3aab8
    https://github.com/openstack/swift/commit/da0e013

Change-Id: Iad8109c4a03f006a89e55373cf3ca867d724b3e1
Related-Bug: 1647804"
tipabu,2018-06-12 18:50:40,https://api.github.com/repos/openstack/swift/git/commits/b3ce3c9b49327ca69fa4f43e6aa8bd1f857d9dac,b3ce3c9b49327ca69fa4f43e6aa8bd1f857d9dac,"func tests: Drop clone_conn arg to Connection

We never use it, may as well get rid of it.

Change-Id: I0d860e6fdc20afb6baf28d0269dcbda21cee0ac7"
tipabu,2018-05-25 18:01:37,https://api.github.com/repos/openstack/swift/git/commits/fcd7a05e8c8a7cf5fb46f42bf730f2fff7e1a7d8,fcd7a05e8c8a7cf5fb46f42bf730f2fff7e1a7d8,"Fix up insecure behavior for functional tests

At some point, we should probably plumb in a ca_cert option or something.

Change-Id: I3b719be3e2ae5620ad84bd275516f6c8843ceaa4"
tipabu,2018-05-25 20:00:46,https://api.github.com/repos/openstack/swift/git/commits/0318e7c8747d117b2cac55314b9645e0696339bb,0318e7c8747d117b2cac55314b9645e0696339bb,"Rearrange some error handling to reduce indent

Change-Id: Ife00798a450828c7b640142def8929a38e23d5ad
Related-Change: Icb88902f0a89b8d980c860be032d5e822845d03a"
tipabu,2018-05-29 19:47:47,https://api.github.com/repos/openstack/swift/git/commits/beb014b0b1627e5ea8b1e7c90004b01765402647,beb014b0b1627e5ea8b1e7c90004b01765402647,"Read-only middleware fixups

- Expose cluster-wide read-only status in /info
- Use a set instead of list for write_methods
- Provide a more explicit response when returning 405
- Consider self.read_only in account_read_only
- Use return_values instead of callables for more mocks

Change-Id: I45387067a69919706800df3a8ca12ae8f5d16d90"
baiwenteng,2018-06-11 10:38:04,https://api.github.com/repos/openstack/swift/git/commits/e726473e2664395f4254304b6bd38bd3ba934359,e726473e2664395f4254304b6bd38bd3ba934359,"Fix typos
replace a OpenStack bucket with an OpenStack bucket

Change-Id: I4ada68720dcf23fb9b94c922ddb3eefd42aa80a7"
baiwenteng,2018-06-11 08:58:36,https://api.github.com/repos/openstack/swift/git/commits/284da567cb424283cf1021bc0ca8e6a3d920d1cf,284da567cb424283cf1021bc0ca8e6a3d920d1cf,"Fix grammar errors
replace a object with an object

Change-Id: Ied9cd7c7d0efaf455370e184abd31734574bff07"
alistairncoles,2018-06-07 10:35:34,https://api.github.com/repos/openstack/swift/git/commits/8b44c9df29572efca928c1d36fa3e7a90e94caa0,8b44c9df29572efca928c1d36fa3e7a90e94caa0,"Allow domain remap storage_domain to be configured for func tests

Previously some tests in /test/functional/test_staticweb.py assumed
that domain_remap middleware was configured with the default
storage_domain 'example.com'. As a result those tests would fail if
run against a cluster with domain_remap middleware installed but not
having an 'example.com' storage_domain.

This patch allows a storage_domain to be configured in the test.conf
file so that the tests may be successfully run against any cluster. If
the option is not set then the tests will be skipped.

To ensure that the in process test job func-domain-remap-staticweb
still runs all the tests in test_staticweb.py, its config loader is
modified to add the required storage_domain option to the test config
with the same value used by the domain_remap middleware.

Related-Change: I6bc70039c1b99b8a5bf5a30e9c6877d4f0aa638d
Co-Authored-By: Tim Burke <tim.burke@gmail.com>

Change-Id: Ifab84fc3ef66b9790e96ebb8e5c8061a12636045"
tipabu,2018-05-30 00:00:24,https://api.github.com/repos/openstack/swift/git/commits/caa3c67e0b03fc15e1528778d7441498a8a7e451,caa3c67e0b03fc15e1528778d7441498a8a7e451,"functests: Clean up objects better

Since JSON object listings deserialize as unicode, obj['name'] would
hoist *everything* to unicode. If the account or container name was a
byte string, though, it would trip a UnicodeDecodeError.

Change-Id: I2c1932143b78521c6bdcfa48182b475528fc1bb3"
tipabu,2018-05-29 23:52:41,https://api.github.com/repos/openstack/swift/git/commits/c88d4d7a987b06e5ec2c0d5a0b1991868415240f,c88d4d7a987b06e5ec2c0d5a0b1991868415240f,"Make COPY work with unicode account names

Since account might include a newline, we must expect that Destination-Account
and X-Copy-From-Account come in quoted.

Make sure all locals and req.path_infos are unquoted and all headers and
paths to make_subrequest are quoted.

Change-Id: Idaa51076391e5cba53fbf3e1185bfd0eaa300448"
tipabu,2018-05-29 23:37:42,https://api.github.com/repos/openstack/swift/git/commits/9d0162a793115d55dd11c40b619657db41fa9968,9d0162a793115d55dd11c40b619657db41fa9968,"Make ACLs work with Unicode in user/account names

There were two separate complications:

  - Account ACLs are stored as JSON, so they were getting deserialized
    to Unicode. That's fine for ASCII names (as u'a' == b'a' under py2),
    but not arbitrary Unicode (as u'\u1234' != u'\u1234'.encode('utf8')
    for both py2 and py3). So, under py2, encode all account ACL members
    as UTF-8.

  - Container ACLs are stored as comma-separated values in a header, but
    values may contain arbitrary characters including not only non-ASCII
    Unicode but also commas and newlines. Fortunately, we have precedent
    for using URL-encoding in headers to resolve this. See crypto,
    symlink, dlo, versioned_writes, copy...

Change-Id: I37a97bb9d039a963c7cc57bd97876d0ec2134cf1
Partial-Bug: 1774238"
tipabu,2018-05-30 22:57:12,https://api.github.com/repos/openstack/swift/git/commits/7cec5a8fdb8ea376aa3f495181f0f295c1c84571,7cec5a8fdb8ea376aa3f495181f0f295c1c84571,"tempauth: Send back url-encoded account names

Taking user_tést_tester and sending back a link to http://saio:8080/v1/AUTH_tést
may work, but it would be better as http://saio:8080/v1/AUTH_t%C3%A9st

This is particularly important if you define something like user_test%ff_tester.

Change-Id: I19d21af94c21fccb4fb835acae231dec424790bb
Related-Bug: 1774238"
tipabu,2018-05-30 22:52:16,https://api.github.com/repos/openstack/swift/git/commits/9ef2a828166aece6b374a97b0777b90c359fdebd,9ef2a828166aece6b374a97b0777b90c359fdebd,"copy: Stop hanging per-request data on middleware instance

Change-Id: Ib7b208669e900b84a7759819ef76b7b5b7ce8c9a
Closes-Bug: 1774719"
smerritt,2018-05-30 23:58:06,https://api.github.com/repos/openstack/swift/git/commits/1424ff71f953a87dfbc12e1b252253839010e9d5,1424ff71f953a87dfbc12e1b252253839010e9d5,"Refactor object updater's async-pending finder

Pulled the FS walking out into its own function so that finding
async_pendings is in one place and processing them is in another. This
should make it easier to add greenthread-based concurrency later.

Also refactored rate limiting to use utils.RateLimitedIterator instead
of calling ratelimit_sleep ourselves. The functionality's the same,
but the interface is easier.

Change-Id: I02f9e3201e9434080c6fb87ac5e249d8b327a231"
smerritt,2018-04-03 00:34:44,https://api.github.com/repos/openstack/swift/git/commits/ecf47553b551e93ba8c6a77cfd1c2171ac7f5cb2,ecf47553b551e93ba8c6a77cfd1c2171ac7f5cb2,"Make final stats dump after reconstructor runs once

When running in multiprocess mode, the object reconstructor would
periodically aggregate its workers' recon data into a single recon
measurement. However, at the end of the run, all that was left in
recon was the last periodic measurement; any work that took place
after that point was not recored in the aggregate. However, it was
recorded in the per-disk stats that the worker processes emitted.

This commit adds a final recon aggregation after the worker processes
have finished.

Change-Id: Ia6a3a931e9e7a23824765b2ab111a5492e509be8"
alistairncoles,2018-06-04 10:06:49,https://api.github.com/repos/openstack/swift/git/commits/76344e51505af858935f9db4724a78ccddcc7f22,76344e51505af858935f9db4724a78ccddcc7f22,"Remove redundant elif in tempauth

Related-Change: I12eb55a42e5a8dc2dff5a4687f7fe31452f9508e

Change-Id: I0a7479e56b91a8e69bffd9c7df1c26b839ab13a2"
tipabu,2018-05-29 23:56:04,https://api.github.com/repos/openstack/swift/git/commits/204467317459f4e7ccc7c7493347f9421556562b,204467317459f4e7ccc7c7493347f9421556562b,"Improve user logging

The first item in groups is the account, the second item is the account_user.
The second one is *way* more useful for debugging.

Change-Id: I12eb55a42e5a8dc2dff5a4687f7fe31452f9508e"
notmyname,2018-02-05 19:18:27,https://api.github.com/repos/openstack/swift/git/commits/5acefa3dc909a0eed8d80a52dcff7131b4f0b878,5acefa3dc909a0eed8d80a52dcff7131b4f0b878,"made changelog section breaks more consistent

Change-Id: I791b03a7cabd63bf363e17f7ac603744d8dbf130"
alistairncoles,2018-05-23 11:37:10,https://api.github.com/repos/openstack/swift/git/commits/e748ef4637db2c5f5cd777548f7060da370bf4f7,e748ef4637db2c5f5cd777548f7060da370bf4f7,"Verify diff stat is unchanged when syncing only shard ranges

Add test assertions to verify that the related change fixes usync diff
stats being erroneously incremented as a side-effect of syncing shard
ranges when the object tables are in sync.

Related-Change: I2630bb127841837b35e7786b59895fa50090719b
Change-Id: Idffe93c63d16e74ea9ca42b33a636c0c0d9e35b5"
notmyname,2018-05-31 19:48:47,https://api.github.com/repos/openstack/swift/git/commits/5078bb125402c875416723f74ebb74498a8b94f4,5078bb125402c875416723f74ebb74498a8b94f4,"Added S3 compatibility information to docs

Change-Id: I8a179e2e9dea1dac57a14696bc0abcd48753adfc"
alistairncoles,2018-05-31 12:22:05,https://api.github.com/repos/openstack/swift/git/commits/bb9e4272627f45c70eddb60fd6852b1876725a96,bb9e4272627f45c70eddb60fd6852b1876725a96,"Add detail to container server GET docstring

The container server GET method became more complex with the
introduction of shard ranges [1]. This patch adds some commentary to
the docstring. The additional docstring is not intended to be
exhaustive, particularly where it would duplicate the API docs.

[1] Related-Change: I029782ae348f38c5fb76d2759609f67a06c883ef

Change-Id: Id661f5dd67768e1698901ca06e33900291e80964"
alistairncoles,2018-05-31 12:20:36,https://api.github.com/repos/openstack/swift/git/commits/7d7601777fcee50a50436a1ac0e2c6500a9daac5,7d7601777fcee50a50436a1ac0e2c6500a9daac5,"Fix marker and end_marker descriptions in API ref

Make the descriptions generic since they are used in both account and
container API specs.

Change-Id: Id3f8d87da00e6c57a3f4a41471ac64ada71f49ee"
notmyname,2018-05-30 23:14:03,https://api.github.com/repos/openstack/swift/git/commits/076f20bfc3c518990868f6750a5bb8e91499f858,076f20bfc3c518990868f6750a5bb8e91499f858,"removed specific reference to two core reviewers

Change-Id: Id9dbf27e93bd9a4a38a1547953be0af0bf0c19c2"
smerritt,2018-05-30 21:35:21,https://api.github.com/repos/openstack/swift/git/commits/47aff724bb0d21e5985b8b5ccbdf5a5621e63134,47aff724bb0d21e5985b8b5ccbdf5a5621e63134,"Log updater stats once per pass, not per policy

The object updater emits a log line saying ""Object update sweep
completed on <disk> in <time>: <lots-of-stats>"" after finishing each
storage policy's async pendings. That's not right; an update sweep is
completed on a device when you've looked at all the async pendings on
the device.

This commit moves the ""sweep completed"" message so it's once per
device, not per policy.

Change-Id: Ibb5f02a18ac431da230afe30c556a756f60d1680"
notmyname,2018-05-30 14:40:38,https://api.github.com/repos/openstack/swift/git/commits/fb3b43f713c9694e33608710762de62662a5d2cd,fb3b43f713c9694e33608710762de62662a5d2cd,"Added PyPI validation check for the readme.

See https://review.openstack.org/#/c/571007/ and
https://review.openstack.org/#/c/570999/ for context.

Change-Id: Ib6045de3cb9097ed7e6d48646109f35612cbbc74"
greglange,2015-10-12 15:59:26,https://api.github.com/repos/openstack/swift/git/commits/5d601b78f3809aa237c3c29bddfe286227172dd8,5d601b78f3809aa237c3c29bddfe286227172dd8,"Adds read_only middleware

This patch adds a read_only middleware to swift. It gives the ability
to make an entire cluster or individual accounts read only.
When a cluster or an account is in read only mode, requests that would
result in writes to the cluser are not allowed.

DocImpact

Change-Id: I7e0743aecd60b171bbcefcc8b6e1f3fd4cef2478"
smerritt,2018-05-29 23:27:26,https://api.github.com/repos/openstack/swift/git/commits/a954f59f4c5d82a4354527433e26fffad40090a7,a954f59f4c5d82a4354527433e26fffad40090a7,"container-updater: log LockTimeout exceptions at INFO, not ERROR

Lock timeouts happen, especially on very busy containers. It's not
worth a stack trace, and it's not an error. Now we still log the
lock timeout, but at INFO level and without a stack trace.

Change-Id: Ia202c876fb726f9ae6040d875a83105dd975539b"
smerritt,2018-05-29 23:59:14,https://api.github.com/repos/openstack/swift/git/commits/553bef0d1d47258c1ee6c60f92c037f2e53b669f,553bef0d1d47258c1ee6c60f92c037f2e53b669f,"Remove unhelpful log message in copy middleware

We probably don't need an extra INFO-level message every time a user
makes a PUT request with X-Copy-From set. It's still in the proxy's
access logs.

Change-Id: I32ce8ff16cb296dd5acef07202a59bc5125111c1"
notmyname,2018-05-25 05:48:15,https://api.github.com/repos/openstack/swift/git/commits/fbb3b1ffdaf7d01744753369d48db6931e8c4dd4,fbb3b1ffdaf7d01744753369d48db6931e8c4dd4,"authors/changelog update for 2.18.0 release

Change-Id: Ia1b78aa40b1f157b513428cef59e69077b2aaee7"
tipabu,2018-05-29 17:48:51,https://api.github.com/repos/openstack/swift/git/commits/773b63311871075a9b29999ecd59e6d62dd8ffa1,773b63311871075a9b29999ecd59e6d62dd8ffa1,"Change default sharding threshold to 1,000,000 objects

...instead of 10,000,000. The sample configs were already using one
million, all of our testing with non-SAIO containers was done with
one million, and the resulting container DBs were around 100MB which
seems like a comfortable size. Pretty sure this was just a typo during
some code cleanup.

Change-Id: Icd31f9d8efaac2d5dc0f021cad550687859558b9"
smerritt,2018-05-29 17:46:56,https://api.github.com/repos/openstack/swift/git/commits/c341c2c571c6550eb3c7983ea07d29424444652e,c341c2c571c6550eb3c7983ea07d29424444652e,"fix typos in comment

Change-Id: I3d598ad6d7791df2bc66cbaed67cd72084e0f7b3"
tipabu,2018-05-25 23:54:03,https://api.github.com/repos/openstack/swift/git/commits/31623f740b73f513eba38ecf35f3189561455165,31623f740b73f513eba38ecf35f3189561455165,"Catch and log errors from process_container, then keep updating

Previously, we'd bomb out hard, and you'd get no more container updates.

Change-Id: I0cea6018269d172bc758eec6348329d1f65de028
Related-Bug: 1400939"
tipabu,2018-05-25 20:33:07,https://api.github.com/repos/openstack/swift/git/commits/7b5c30dec0a23d03150352b1f29a30117d4a41ed,7b5c30dec0a23d03150352b1f29a30117d4a41ed,"Update SERVER_ADDR/SERVER_PORT from PROXY protocol

Also take a reasonable guess as to whether HTTPS/wsgi.url_scheme ought to be updated.

Change-Id: Iada8a1f4921f07986e6399bc1279e9a602117b1c"
smerritt,2018-05-24 21:14:34,https://api.github.com/repos/openstack/swift/git/commits/854db518452d10190f90d899b640b402443544eb,854db518452d10190f90d899b640b402443544eb,"Fix common/test_utils.py on Python 3.5.4+

In CPython commit e59af55c2, instantiating a logging.SysLogHandler
stopped raising an exception if the syslog server was
unavailable. This commit first appears in CPython
3.5.4. utils.get_logger() catches that error and retries the
instantiation, and there a test asserting that. The test fails on
Python 3.5.4 or greater, so now it has been corrected to only assert
things about the first instantiation of logging.SysLogHandler and
passes on Python 3.5.4 and 3.5.5.

This was noticed by running ""tox -e py35"" on an Ubuntu 18.04 system,
which ships with Python 3.5.5.

Change-Id: I43f231bd7d3566b9849a48f46ec9e2af4cd23be4"
clayg,2018-05-24 20:17:51,https://api.github.com/repos/openstack/swift/git/commits/71b39e4c2d4b4d5c896a0287d9198189f0fa4b43,71b39e4c2d4b4d5c896a0287d9198189f0fa4b43,"Remove un-used stub

The mock call got pulled out in the related change.

Change-Id: Ife1e452fa34026ac934e88a05708cdc5978215e1
Related-Change-Id: Id089e29e7ecfc8cec79c520f604aa01bdae0dcf0"
tipabu,2018-05-24 20:00:58,https://api.github.com/repos/openstack/swift/git/commits/fbb8d7ebb52038fe445e2ca7e5c0459e8ff5ac5e,fbb8d7ebb52038fe445e2ca7e5c0459e8ff5ac5e,"Clarify that archive location headers should be URL-encoded

Fix up function tests to actually *do* that quoting, and fix
_listing_pages_iter to respect that.

Change-Id: I1554042510819ea878b4c70417721944115e17f4
Related-Bug: 1229142
Related-Change: I425440f76b8328f8e119d390bfa4c7022181e89e
Related-Bug: 1755554
Related-Change: Ibcd90cc633c68973929ee5249c6598c22b342e3e"
smerritt,2018-05-24 18:44:49,https://api.github.com/repos/openstack/swift/git/commits/d52a5276d85b9173c6bba7882085da835cde19ce,d52a5276d85b9173c6bba7882085da835cde19ce,"Clean out Python 2.6 leftovers from splice.py

ctypes.ssize_t exists since Python 2.7 (not just the fuzzy 2.7.X, but
CPython tag ""v2.7""), so we don't need to define our own.

Change-Id: Ib3c9b162ceffabd78622ae51c5accc4b7ba1294d"
smerritt,2018-05-24 18:06:19,https://api.github.com/repos/openstack/swift/git/commits/a6f7600545624492f158f4832f3972d37bdd6057,a6f7600545624492f158f4832f3972d37bdd6057,"Remove our reimplemented logging.NullHandler

Python 2.6 didn't have one, so we'd try to find logging.NullHandler
but fall back to our own. Since 2.7+ has logging.NullHandler, we can
just use it.

Change-Id: Ie2c27407efc2882e698abe6e4379a00a1d3f4301"
smerritt,2018-05-24 17:59:12,https://api.github.com/repos/openstack/swift/git/commits/844bba8aaf8bb7fe573bed6f7e750289a2be2e55,844bba8aaf8bb7fe573bed6f7e750289a2be2e55,"Remove some Python 2.6 compatibility code in ring

Looks like you couldn't wrap an io.BufferedReader around a
gzip.GzipFile in 2.6, but you can starting in 2.7, so we don't need to
check for some private attribute to ensure compatibility.

Change-Id: Ib8f7378a7d8e17e0684702a9d94307d4c33cd4c8"
smerritt,2018-05-24 01:15:57,https://api.github.com/repos/openstack/swift/git/commits/693d9a65706adec365c1b4be92f022715a18783b,693d9a65706adec365c1b4be92f022715a18783b,"Always pass capitalize_response_headers=False to eventlet.wsgi.server()

For a while, this was conditional because we supported old Eventlet
versions that didn't have this keyword arg. Now, we require new-enough
Eventlet that it's always available, so let's get rid of the
conditional crud.

The flag was introduced in Eventlet 0.15, and we require >= 0.17.4.

Change-Id: Id089e29e7ecfc8cec79c520f604aa01bdae0dcf0"
dbishop,2016-09-20 23:38:45,https://api.github.com/repos/openstack/swift/git/commits/661838d968c163cec716cd5c8bcce9f5c69d18d4,661838d968c163cec716cd5c8bcce9f5c69d18d4,"Add support for PROXY protocol v1 (only)

...to the proxy-server.

The point is to allow the Swift proxy server to log accurate
client IP addresses when there is a proxy or SSL-terminator between the
client and the Swift proxy server.  Example servers supporting this
PROXY protocol:
  stud (v1 only)
  stunnel
  haproxy
  hitch (v2 only)
  varnish

See http://www.haproxy.org/download/1.7/doc/proxy-protocol.txt

The feature is enabled by adding this to your proxy config file:

  [app:proxy-server]
  use = egg:swift#proxy
  ...
  require_proxy_protocol = true

The protocol specification states:

  The receiver MUST be configured to only receive the protocol
  described in this specification and MUST not try to guess
  whether the protocol header is present or not.

so valid deployments are:

  1) require_proxy_protocol = false  (or missing; default is false)
     and NOT behind a proxy that adds or proxies existing PROXY lines.
  2) require_proxy_protocol = true
     and IS behind a proxy that adds or proxies existing PROXY lines.

Specifically, in the default configuration, one cannot send the swift
proxy PROXY lines (no change from before this patch).  When this
feature is enabled, one _must_ send PROXY lines.

Change-Id: Icb88902f0a89b8d980c860be032d5e822845d03a"
timuralp,2018-05-23 23:19:50,https://api.github.com/repos/openstack/swift/git/commits/0aad95005d03651da79071dd24354f0a54122ab6,0aad95005d03651da79071dd24354f0a54122ab6,"Fix SLO delete for accounts with non-ASCII names.

If an account contains non-ASCII characters, currently SLO delete code
will fail, as get_slo_segments() method receives a unicode object, but
UTF-8 encoded account name. Attempting to concatenate the strings fails
with a UnicodeError, as it tries to use the ASCII codec to decode the
UTF-8 encoded account name.

This patch allows accounts with non-ASCII characters in their names to
delete SLOs.

Change-Id: I619d41e62c16b25bd5f58d300a3dc71aa4dc75c2"
alistairncoles,2018-05-22 16:16:39,https://api.github.com/repos/openstack/swift/git/commits/e4045fb4758898b6ef855301ae0cd8f9a450af36,e4045fb4758898b6ef855301ae0cd8f9a450af36,"Add unit tests for replicator sync_shard_ranges

Related-Change: Ie4d2816259e6c25c346976e181fb9d350f947190

Change-Id: Icd558c1f92c24724a76931f1d281a9a20122b683"
smerritt,2018-01-10 18:25:31,https://api.github.com/repos/openstack/swift/git/commits/7a7677868d4ec7693132014779909ac70d4f391d,7a7677868d4ec7693132014779909ac70d4f391d,"Use X-Timestamp when checking object expiration

In the object server's PUT, POST, and DELETE handlers, we use the
request's X-Timestamp value for checking object expiration. In the GET
and HEAD handlers, we use it if present, but default to the current
time. That way, one can still use curl to make direct object GET or
HEAD requests as before.

If one object server's clock is ahead of the proxy server's clock for
some reason, and a client makes a POST request to update X-Delete-At,
then the skewed-time object server may refuse the new X-Delete-At
value.

In a cluster where two of the three replicas for an object live on the
same time-skewed node, this can result in confusing behavior for
clients. A client can make a POST request to update X-Delete-At,
receive a 400, and then discover later that the X-Delete-At value was
updated anyway, since one object server accepted the POST and
replication spread the new metadata around.

DELETE is somewhat less confusing. The client might get a spurious 404
in the above case, but the object will still be removed.

For PUT, an object server with a slow clock might refuse to overwrite
an object with an ""older"" one because it believes the on-disk object
is newer than the current time.

Change-Id: I10c28f97d4c6aca1d64bef3b93506cfbb50ade30"
clayg,2018-05-22 22:03:30,https://api.github.com/repos/openstack/swift/git/commits/6714af804270ee33479fb0caa185a5c5eeec4479,6714af804270ee33479fb0caa185a5c5eeec4479,"Use maybe_get more

Some suggestions in the review of the related change:

 * use maybe_get in another obvious place
 * make maybe_gets test assertions stronger

Related-Change-Id: Ifd54d76ab1a5a9d82848f3cae89c3e53134aa129

Change-Id: I751f1086d885c18d938f18e8afe1dd0e9c0c57e5"
clayg,2018-05-22 21:14:53,https://api.github.com/repos/openstack/swift/git/commits/2e321d94ed59c8068595b597f8de1c8fc9a2c0a3,2e321d94ed59c8068595b597f8de1c8fc9a2c0a3,"Add a helper context for optional connection args

We refactor a bunch of methods to support re-using an open connection
when available.  There's some code in the connection manager to support
nesting connections to avoid deadlocks when we call a method that can
open a connection while we already have a connection checked out - but
it might be better in the long run if we just got better at passing open
connections around whenever possible.

Add a helper method on the base db broker class to make it easier to
write methods that can optionally take an existing connection.

Change-Id: Ifd54d76ab1a5a9d82848f3cae89c3e53134aa129"
tipabu,2018-05-22 21:01:18,https://api.github.com/repos/openstack/swift/git/commits/0702d4de43858587236a38e633adf91dfc2a0153,0702d4de43858587236a38e633adf91dfc2a0153,"Stop overriding _in_sync in container replicator

We could effect the same outcome by pushing _in_sync down into _choose_replication_mode

Change-Id: I2630bb127841837b35e7786b59895fa50090719b"
tipabu,2018-05-22 20:49:17,https://api.github.com/repos/openstack/swift/git/commits/4af57dbc658cc0a632fbe32727012e94d0758291,4af57dbc658cc0a632fbe32727012e94d0758291,"Let make_db_file_path accept epoch=None

...in which case it should strip the epoch if the original path had one.

Change-Id: I8739a474c56c0f2376a276d2691c84448cb9c647"
tipabu,2018-05-22 19:58:39,https://api.github.com/repos/openstack/swift/git/commits/f68dd3bf10ceae6ea4dae484e5c8ce8a6e27a678,f68dd3bf10ceae6ea4dae484e5c8ce8a6e27a678,"Move handling of missing table outside of do_query

This is more consistent with other DB migration code and reduces indent
level in the meat of the query.

Change-Id: I536a8425f7e9f3dd95eacad783e1b7d7905b2b8d"
tipabu,2018-05-22 19:53:58,https://api.github.com/repos/openstack/swift/git/commits/8486397a70e47d1a2a55029a3986534d63cad95d,8486397a70e47d1a2a55029a3986534d63cad95d,"Clean up logging interpolation

Change-Id: I305736ee4391674b16e85e1c958e7f14ccb7bcc0"
tipabu,2018-05-11 20:25:17,https://api.github.com/repos/openstack/swift/git/commits/8c386fff40a1605c7304b8998adcd1a65263a672,8c386fff40a1605c7304b8998adcd1a65263a672,"Make the decision between primary/handoff sets more obvious

Change-Id: I419de59df3317d67c594fe768f5696de24148280"
bloodeagle40234,2018-03-22 10:26:24,https://api.github.com/repos/openstack/swift/git/commits/0e3e7b9b0953baaf7a0686881fd2348fde7d1e59,0e3e7b9b0953baaf7a0686881fd2348fde7d1e59,"Fix versioned writes error with url-encoded object name

With url encoded object name like '%25ff' that can be url-encoded
value after decoded can cause 412 Precondition Failed. And more,
that can do nothing (no versioned object creation) even it returns
a successful response.

The root causes are in versioned_writes middleware as follows:

A. unnecessary unquote in object_request method
B. incorrect use of make_pre_authed_request that takes 'quoted'
   path in the args. That is described at [1] explicitely.

This patch resolved those 2 bugs at once, and then, now we can create
%25ff versioned object reported in the launchpad with this patch.

Perhaps, more tests would be nice to have. This patch added a few
test cases on that.

1: https://github.com/openstack/swift/blob/master/swift/common/wsgi.py#L1174

Note that make_subrequest and its caller should have *quoted* path but
make_env should *NOT*. That might make us confused.

Closes-Bug: #1755554

Change-Id: Ibcd90cc633c68973929ee5249c6598c22b342e3e"
tipabu,2018-05-22 16:57:40,https://api.github.com/repos/openstack/swift/git/commits/f237c5844c09a65a97e0f6a1b7b9df221bc8e7ca,f237c5844c09a65a97e0f6a1b7b9df221bc8e7ca,"Bump up timeout for swift-probetests-centos-7

Since sharding landed, probe test times have climbed from ~15mins to
~25mins, with at least one run having timed out after 30mins.

This is the result of us adding 14 new probe tests, all of which are
fairly long-running since they need to upload enough objects to allow
sharding. That's great, but let's bump up the timeout to an hour.

Change-Id: I73c36e061a8817961869496591cbe7ba714ce9d5"
alistairncoles,2018-05-22 12:27:13,https://api.github.com/repos/openstack/swift/git/commits/37ee89e47a7423f5a4ba74d419753a6f20f09cbf,37ee89e47a7423f5a4ba74d419753a6f20f09cbf,"Avoid premature shrinking in sharder probe test

Previously test_misplaced_object_movement() deleted objects from both
shards and then relied on override-partitions option to selectively
run the sharder on root or shard containers and thereby control when
each shard range was identified for shrinking. This approach is flawed
when the second shard container lands in the same partition as the
root: running the sharder on the empty second shard's partition would
also cause the sharder to process the root and identify the second
shard for shrinking, resulting in premature shrinking of the second
shard.

Now, objects are only deleted from each shard range as that shard is
wanted to shrink.

Change-Id: I9f51621e8414e446e4d3f3b5027f6c40e01192c3
Drive-by: use the run_sharders() helper more often."
alistairncoles,2018-05-22 11:57:16,https://api.github.com/repos/openstack/swift/git/commits/82314bd1201919e5db5e023046242230eec36cc6,82314bd1201919e5db5e023046242230eec36cc6,"Test rsync error log truncation

Verify the log line truncation method is actually called.

Related-Change: If063a12cac74b67078b6db1c4f489160a2a69de1
Change-Id: I8dcd0eac1396b251a2c2a31e167598bc1e48c463"
alistairncoles,2018-05-22 11:18:08,https://api.github.com/repos/openstack/swift/git/commits/0ee2a1df704da3b2aec9a7ad0e8746bb306bdf3e,0ee2a1df704da3b2aec9a7ad0e8746bb306bdf3e,"Simplify ContainerBroker._get_shard_range_rows()

Change-Id: I28ad07091f7fd20c48b245e5bd21bb7eb4ae55cf
Related-Change: I2f7d1bc698ff4c0734ab48eb29e252d6acb1abc6"
alistairncoles,2018-05-18 13:45:23,https://api.github.com/repos/openstack/swift/git/commits/ff832955fc8e0ac746a05c78c0140336707699c7,ff832955fc8e0ac746a05c78c0140336707699c7,"Improve building listings from shards

When building a listing from shard containers, objects fetched from
each shard range are appended to the existing listing provided their
name is greater than the last entry in the current listing and less
than or equal to the fetched shard range. This allows misplaced
objects below the shard range to possibly be included in the listing
in correct name order. Previously that behaviour only occurred if the
existing listing had entries, but now it occurs even if no objects
have yet been found.

Change-Id: I25cab53b9aa2252c98ebcf70aafb9d39887a11f1"
tipabu,2018-05-21 22:52:06,https://api.github.com/repos/openstack/swift/git/commits/37dafa03feea67d15547ad52bcec5994b8243dd4,37dafa03feea67d15547ad52bcec5994b8243dd4,"Fix probe tests in the gate

Change-Id: I3a576a358c9ab941df684512c78da454ed2cd625
Related-Change: Idcacfb6dbfb0760128f10dbc0573856e4250b3bc"
tipabu,2018-05-21 21:00:57,https://api.github.com/repos/openstack/swift/git/commits/8dc9bc1f7b5719c241937ba2cb23772d6ca1dd09,8dc9bc1f7b5719c241937ba2cb23772d6ca1dd09,"Use sets instead of dicts when we only care about the keys

Change-Id: I7aa60cd4687e8951d846a14cd4807d4df8cbce7a"
tipabu,2018-05-21 20:36:14,https://api.github.com/repos/openstack/swift/git/commits/9530ab20e3ec7a67c467a66d38e5f375e0831730,9530ab20e3ec7a67c467a66d38e5f375e0831730,"Pre-storage-policy-index tests shouldn't have shard_range tables

Change-Id: Ib6aca2375a196d319bd955d5c458c37671f9e68d"
alistairncoles,2018-05-21 13:58:24,https://api.github.com/repos/openstack/swift/git/commits/99023ef85562a078d674727899a91ef626b2d88f,99023ef85562a078d674727899a91ef626b2d88f,"Maintain manage-shard-ranges docs in its module

Move the doc for manage-shard-ranges to the manage_shard_ranges.py module
and include it in overview_container_sharding.rst. This makes the doc for
manage-shard-ranges more obvious when viewing the code.

Change-Id: I27ca9b59897c5256dd5e2c3d4e26ff9e762b4a81"
tipabu,2018-05-21 18:24:39,https://api.github.com/repos/openstack/swift/git/commits/cc565db75382fc092321c5f01d3c079187deae7a,cc565db75382fc092321c5f01d3c079187deae7a,"Remove exclude_states from get_shard_ranges

It was never actually used -- YAGNI.

Change-Id: I2f7d1bc698ff4c0734ab48eb29e252d6acb1abc6"
tipabu,2018-05-11 19:59:47,https://api.github.com/repos/openstack/swift/git/commits/83732a68135263c37210292d22999c6abd8df9c8,83732a68135263c37210292d22999c6abd8df9c8,"Use assertRaises more

It saves us some boilerplate *and* makes tighter assertions about
the type of error.

Change-Id: I34bf8017b5740203ee0b9f253e24f1869164f7c6"
alistairncoles,2018-05-21 09:45:00,https://api.github.com/repos/openstack/swift/git/commits/4c559fccb7a9af6b12efdcb5986a60f476fdb76d,4c559fccb7a9af6b12efdcb5986a60f476fdb76d,"Container sharding doc fixes and clarifications

Change-Id: I1e736c8da142adecc2b0b629cfd48afa072d40a0"
alistairncoles,2018-05-18 21:42:18,https://api.github.com/repos/openstack/swift/git/commits/c35285f14b275b22bdea27fea1643f962bfa1a1f,c35285f14b275b22bdea27fea1643f962bfa1a1f,"Use correct policy when faking misplaced objects in probe test

Before, merge_objects() always used storage policy index of 0 when
inserting a fake misplaced object into a shard container. If the shard
broker had a different policy index then the misplaced object would
not show in listings causing test_misplaced_object_movement() to
fail. This test bug might be exposed by having policy index 0 be an EC
policy, since the probe test requires a replication policy and would
therefore choose a non-zero policy index.

The fix is simply to specify the shard's policy index when inserting
the fake object.

Change-Id: Iec3f8ec29950220bb1b2ead9abfdfb1a261517d6"
alistairncoles,2018-05-19 01:24:30,https://api.github.com/repos/openstack/swift/git/commits/ea92e499801db231771fdae80943e5c9b1344926,ea92e499801db231771fdae80943e5c9b1344926,"Merge container sharding into master

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: John Dickinson <me@not.mn>
Co-Authored-By: Kazuhiro MIYAHARA <miyahara.kazuhiro@lab.ntt.co.jp>
Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Samuel Merritt <sam@swiftstack.com>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>

Change-Id: I964666d2c1ce893326c6aa2bbe9e1dd0312e7a9e"
alistairncoles,2018-05-02 08:33:17,https://api.github.com/repos/openstack/swift/git/commits/5c5b08d0472f695a0d81655ab80725f1be08d308,5c5b08d0472f695a0d81655ab80725f1be08d308,"Add container sharding documentation

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: John Dickinson <me@not.mn>

Change-Id: I0693e54c1d7f3b77f53c3df5c616a16f74723b97"
matthewoliver,2018-05-02 09:47:51,https://api.github.com/repos/openstack/swift/git/commits/26418140108281ae5ac11004ebf33b7b3e08c74d,26418140108281ae5ac11004ebf33b7b3e08c74d,"Add sharder daemon, manage_shard_ranges tool and probe tests

The sharder daemon visits container dbs and when necessary executes
the sharding workflow on the db.

The workflow is, in overview:

- perform an audit of the container for sharding purposes.

- move any misplaced objects that do not belong in the container
  to their correct shard.

- move shard ranges from FOUND state to CREATED state by creating
  shard containers.

- move shard ranges from CREATED to CLEAVED state by cleaving objects
  to shard dbs and replicating those dbs. By default this is done in
  batches of 2 shard ranges per visit.

Additionally, when the auto_shard option is True (NOT yet recommeneded
in production), the sharder will identify shard ranges for containers
that have exceeded the threshold for sharding, and will also manage
the sharding and shrinking of shard containers.

The manage_shard_ranges tool provides a means to manually identify
shard ranges and merge them to a container in order to trigger
sharding. This is currently the recommended way to shard a container.

Co-Authored-By: Alistair Coles <alistairncoles@gmail.com>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I7f192209d4d5580f5a0aa6838f9f04e436cf6b1f"
alistairncoles,2018-05-02 09:21:11,https://api.github.com/repos/openstack/swift/git/commits/4a3efe61a978b9d7adeabd556ce4a3820e6af555,4a3efe61a978b9d7adeabd556ce4a3820e6af555,"Redirect object updates to shard containers

Enable the proxy to fetch a shard container location from the
container server in order to redirect an object update to the shard.

Enable the container server to redirect object updates to shard
containers.

Enable object updater to accept redirection of an object update.

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I6ff85827eecdea746b3626c0d401f68139cce19d"
alistairncoles,2018-05-02 09:06:12,https://api.github.com/repos/openstack/swift/git/commits/e940bc6cb1c065d92239f5f298adee3eb669aff3,e940bc6cb1c065d92239f5f298adee3eb669aff3,"Enable proxy to build listings from shards

When a container is sharding or sharded the proxy container controller
now builds container listings by concatenating components from shard
ranges.

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Samuel Merritt <sam@swiftstack.com>

Change-Id: Ia4cfebbe50338a761b8b6e9903b1869cb1f5b47e"
alistairncoles,2018-05-01 15:21:03,https://api.github.com/repos/openstack/swift/git/commits/723eac907c53cc4082703acf63ef77683d698acc,723eac907c53cc4082703acf63ef77683d698acc,"Add shard range support to container server

Support PUTs to container server with json serialized ShardRanges in
body.  Shard range PUTs may autocreate containers.

Support GET of shard ranges from container server.Shard range GETs
support X-Backend-Include-Deleted to include deleted shard ranges in
list and X-Backend-Override-Delete to get shard ranges when container
has been marked as deleted.

The X-Backend-Record-Type = ['object'|'shard'|'auto'] is introduced
to differentiate container server requests for object versus shard
ranges. When 'auto' is used with a GET request the container server
will return whichever record type is appropriate for fetchng object
listings, depending on whether the container is sharded or not.

Support container PUTs with body in direct_client .py

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I029782ae348f38c5fb76d2759609f67a06c883ef"
alistairncoles,2018-05-01 14:44:18,https://api.github.com/repos/openstack/swift/git/commits/14af38a8992c55925a7e6ed74eb9ba1b8d360ff1,14af38a8992c55925a7e6ed74eb9ba1b8d360ff1,"Add support for sharding in ContainerBroker

With this patch the ContainerBroker gains several new features:

1. A shard_ranges table to persist ShardRange data, along with
methods to merge and access ShardRange instances to that table,
and to remove expired shard ranges.

2. The ability to create a fresh db file to replace the existing db
file. Fresh db files are named using the hash of the container path
plus an epoch which is a serialized Timestamp value, in the form:

  <hash>_<epoch>.db

During sharding both the fresh and retiring db files co-exist on
disk. The ContainerBroker is now able to choose the newest on disk db
file when instantiated. It also provides a method (get_brokers()) to
gain access to broker instance for either on disk file.

3. Methods to access the current state of the on disk db files i.e.
UNSHARDED (old file only), SHARDING (fresh and retiring files), or
SHARDED (fresh file only with shard ranges).

Container replication is also modified:

1. shard ranges are replicated between container db peers. Unlike
objects, shard ranges are both pushed and pulled during a REPLICATE
event.

2. If a container db is capable of being sharded (i.e. it has a set of
shard ranges) then it will no longer attempt to replicate objects to
its peers. Object record durability is achieved by sharding rather than
peer to peer replication.

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: Ie4d2816259e6c25c346976e181fb9d350f947190"
alistairncoles,2018-05-01 14:28:10,https://api.github.com/repos/openstack/swift/git/commits/a962340dd86109b1e3204d3c31fb7c5f6ac0cfc4,a962340dd86109b1e3204d3c31fb7c5f6ac0cfc4,"Add ShardRange class

A ShardRange represents the part of the object namespace that
is managed by a container. It encapsulates:

- the namespace range, from an excluded lower bound to an included upper bound
- the object count and bytes used in the range
- the current state of the range, including whether it is deleted or not

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Kazuhiro MIYAHARA <miyahara.kazuhiro@lab.ntt.co.jp>

Change-Id: Iae090dc170843f15fd2a3ea8f167bec2848e928d"
alistairncoles,2018-05-01 14:12:05,https://api.github.com/repos/openstack/swift/git/commits/9d742b85ad2e53c1782116e56284e95a07577f35,9d742b85ad2e53c1782116e56284e95a07577f35,"Refactoring, test infrastructure changes and cleanup

...in preparation for the container sharding feature.

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I4455677abb114a645cff93cd41b394d227e805de"
HCLTech-SSW,2018-05-15 06:23:57,https://api.github.com/repos/openstack/swift/git/commits/a563ba26fa3d9dfb23b368ed79940c19e3a9135c,a563ba26fa3d9dfb23b368ed79940c19e3a9135c,"Implemented the fix to handle the HTTP request methods other than GET.

Change-Id: I8db01a5a59f72c562aa8039b459a965283b1b3ad
Closes-Bug: #1695855"
smerritt,2018-05-02 18:58:30,https://api.github.com/repos/openstack/swift/git/commits/0d0c9b91ed278f964f686359f50748a4bee0fc25,0d0c9b91ed278f964f686359f50748a4bee0fc25,"s3api: simplify BaseAclHandler.request_with

It's just constructing a new object; there's no need for it to be a
context manager.

Change-Id: I9716f6c4e45bcdf80543cf661f922da681d602aa"
DavidRabel-b1,2018-05-02 14:24:27,https://api.github.com/repos/openstack/swift/git/commits/5257ed033cdc62e9b15f60e649b04b1bcb462cbc,5257ed033cdc62e9b15f60e649b04b1bcb462cbc,"Fix indentation in overview_backin_store.rst

Fix indentation of nested list.
Old indentation was wrongly interpreted as quotation

Change-Id: Ia9625bc3b7984501f4931b3428fa930a156bfe66"
smerritt,2018-05-02 00:18:22,https://api.github.com/repos/openstack/swift/git/commits/a19548b3e692182b3b228f932e821861eb2c8699,a19548b3e692182b3b228f932e821861eb2c8699,"Remove empty part dirs during ssync replication

When we're pushing data to a remote node using ssync, we end up
walking the entire partition's directory tree. We were already
removing reclaimable (i.e. old) tombstones and non-durable EC data
files plus their containing hash dirs, but we were leaving the suffix
dirs around for future removal, and we weren't cleaning up partition
dirs at all. Now we remove as much of the directory structure as we
can, even up to the partition dir, as soon as we observe that it's
empty.

Change-Id: I2849a757519a30684646f3a6f4467c21e9281707
Closes-Bug: 1706321"
bloodeagle40234,2018-05-01 07:32:04,https://api.github.com/repos/openstack/swift/git/commits/2c7768a3cbc742ae2f6c01011e3d56a94720b54c,2c7768a3cbc742ae2f6c01011e3d56a94720b54c,"Small cleanup on s3api

This patch is one of follow up to remove unnecessary
files, and a comment in the code.

The conf files are used to setup functests environment
in the past swift3 repository but that should port to
setuppers of functests (see related change). Anyway,
we don't need shell based older conf.in script on that way.

Change-Id: If431979ea6fa373ac1cde4b7e13d57d91fb15be8
Related-Change: I6f30f74678ad35479da237361bee48c46c0ecc49"
zaitcev,2018-05-01 02:26:08,https://api.github.com/repos/openstack/swift/git/commits/04ee763e897152d0d75ad33eca46899b51a974bc,04ee763e897152d0d75ad33eca46899b51a974bc,"Simplify the code in s3api

At least now you know that the ""with"" clause isn't modifying
a self.something behind your back.

The affected part was added when migrating from swift3 to s3api.
As a bonus, the patch makes the code slightly more similar to
the original.

Change-Id: Id4bfbaf971e3a08fdf9d0ef8d7373bb36c298682"
notmyname,2018-04-30 17:47:22,https://api.github.com/repos/openstack/swift/git/commits/c94acbcd23fc440a2a0bb7cad045557f89fd6bea,c94acbcd23fc440a2a0bb7cad045557f89fd6bea,"updated .gitreview

Change-Id: I7a4b06a55c50fdb944ee08eb0e6f7f5902642b18"
bloodeagle40234,2017-10-16 12:39:12,https://api.github.com/repos/openstack/swift/git/commits/636b922f3b2882f7dd6c656983d7862b274dcf98,636b922f3b2882f7dd6c656983d7862b274dcf98,"Import swift3 into swift repo as s3api middleware

This attempts to import openstack/swift3 package into swift upstream
repository, namespace. This is almost simple porting except following items.

1. Rename swift3 namespace to swift.common.middleware.s3api
1.1 Rename also some conflicted class names (e.g. Request/Response)

2. Port unittests to test/unit/s3api dir to be able to run on the gate.

3. Port functests to test/functional/s3api and setup in-process testing

4. Port docs to doc dir, then address the namespace change.

5. Use get_logger() instead of global logger instance

6. Avoid global conf instance

Ex. fix various minor issue on those steps (e.g. packages, dependencies,
  deprecated things)

The details and patch references in the work on feature/s3api are listed
at https://trello.com/b/ZloaZ23t/s3api (completed board)

Note that, because this is just a porting, no new feature is developed since
the last swift3 release, and in the future work, Swift upstream may continue
to work on remaining items for further improvements and the best compatibility
of Amazon S3. Please read the new docs for your deployment and keep track to
know what would be changed in the future releases.

Change-Id: Ib803ea89cfee9a53c429606149159dd136c036fd
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>"
smerritt,2018-03-30 20:48:41,https://api.github.com/repos/openstack/swift/git/commits/26538d3f621f9f808ac0d5c1cb137f316f4f28d3,26538d3f621f9f808ac0d5c1cb137f316f4f28d3,"Make multiprocess reconstructor's logs more readable.

Much like the multiprocess object replicator, the reconstructor runs
multiple concurrent worker processes who all log to the same
destination. We re-use the same solution: prepend a prefix with the
worker index and the pid to all the logs emitted from each worker
process.

Example log line:

    [worker 12/24 pid=8539] I did a thing

Change-Id: Ie2f98201193952be4d387bbb01c7c6fccc017a8a"
smerritt,2018-03-23 22:56:26,https://api.github.com/repos/openstack/swift/git/commits/c4751d0d551ad193a205c71821f6770a31146421,c4751d0d551ad193a205c71821f6770a31146421,"Make reconstructor go faster with --override-devices

The object reconstructor will now fork all available worker processes
when operating on a subset of local devices.

Example:
  A system has 24 disks, named ""d1"" through ""d24""
  reconstructor_workers = 8
  invoked with --override-devices=d1,d2,d3,d4,d5,d6

In this case, the reconstructor will now use 6 worker processes, one
per disk. The old behavior was to use 2 worker processes, one for d1,
d3, and d5 and the other for d2, d4, and d6 (because 24 / 8 = 3, so we
assigned 3 disks per worker before creating another).

I think the new behavior better matches operators' expectations. If I
give a concurrent program six tasks to do and tell it to operate on up
to eight at a time, I'd expect it to do all six tasks at once, not run
two concurrent batches of three tasks apiece.

This has no effect when --override-devices is not specified. When
operating on all local devices instead of a subset, the new and old
code produce the same result.

The reconstructor's behavior now matches the object replicator's
behavior.

Change-Id: Ib308c156c77b9b92541a12dd7e9b1a8ea8307a30"
smerritt,2018-03-23 00:08:48,https://api.github.com/repos/openstack/swift/git/commits/c28004deb0e938a9a9532c9c2e0f3197b6e572cb,c28004deb0e938a9a9532c9c2e0f3197b6e572cb,"Multiprocess object replicator

Add a multiprocess mode to the object replicator. Setting the
""replicator_workers"" setting to a positive value N will result in the
replicator using up to N worker processes to perform replication
tasks.

At most one worker per disk will be spawned, so one can set
replicator_workers=99999999 to always get one worker per disk
regardless of the number of disks in each node. This is the same
behavior that the object reconstructor has.

Worker process logs will have a bit of information prepended so
operators can tell which messages came from which worker. It looks
like this:

  [worker 1/2 pid=16529] 154/154 (100.00%) partitions replicated in 1.02s (150.87/sec, 0s remaining)

The prefix is ""[worker M/N pid=P] "", where M is the worker's index, N
is the total number of workers, and P is the process ID. Every message
from the replicator's logger will have the prefix; this includes
messages from down in diskfile, but does not include things printed to
stdout or stderr.

Drive-by fix: don't dump recon stats when replicating only certain
policies. When running the object replicator with replicator_workers >
0 and ""--policies=X,Y,Z"", the replicator would update recon stats
after running. Since it only ran on a subset of objects, it should not
update recon, much like it doesn't update recon when run with
--devices or --partitions.

Change-Id: I6802a9ad9f1f9b9dafb99d8b095af0fdbf174dc5"
smerritt,2018-04-20 23:36:19,https://api.github.com/repos/openstack/swift/git/commits/f8419bf68a02afca7802a30bc3844d651b9e3469,f8419bf68a02afca7802a30bc3844d651b9e3469,"Improve path handling in proxy_logging

In the access log, proxy_logging places the URL path,
double-URL-encoded (e.g. "" "" -> %20 -> %2520).

In the WSGI environment, env['PATH_INFO'] is the unquoted path sent by
the client, e.g. ""/v1/a/c/o"" or ""/v1/a/c/obj with spaces"" or
""/v1/a/c/u-\xf0\x9f\xa4\x94"". On the request, we have the ""path""
attribute, which returns the quoted form of env[""PATH_INFO""].

Note that, under Python 2, these are always str objects, not unicode.

Swift used to log this:

    quote(quote(unquote(
        req.path.decode('utf-8', 'replace').encode('utf-8')), ""/:""))

There's a lot going on here. Let's look at the innermost expression:

    req.path.decode('utf-8', 'replace').encode('utf-8')

This appears to be trying to replace invalid UTF-8 sequences with the
Unicode replacement character. However, since we start from
""req.path"", which quotes its input, we don't have any non-ASCII bytes,
so the decode/encode is a no-op. That is, if env[""PATH_INFO""] had
""\xff\xff"" in it, req.path would have ""%FF%FF"", so there's no invalid
byte sequences to escape.

So, without changing the output, we can simplify the above code to:

    quote(quote(unquote(req.path), ""/:""))

The second call to quote() has a second argument of ""/:"", so neither
slashes or colons are quoted. This was introduced in commit cd8af3f8f1
as part of a change to log client IPv6 addresses (from
env[""REMOTE_ADDR"") without escaping the colons. However, cd8af3f8f1
also applied that to the logging of env[""PATH_INFO""]. This seems
unhelpful since IPv6 addresses in URL paths are not particularly
common, so I've removed it. The change is backwards-compatible since a
double-unquote of the logged value will still return the original
PATH_INFO.

With that in mind, let's simplify further. req.path quotes
env[""PATH_INFO""], so that cancels out one unquote() call, leaving us
with this:

    quote(req.path_info)

which produces basically the same result as before, but faster.

Change-Id: I7e665eb55a9524aa49e2578f2084d8354f6c1e31"
smerritt,2018-04-20 00:31:04,https://api.github.com/repos/openstack/swift/git/commits/80858077e5aae4d6d2807368e27fb6a9968e9533,80858077e5aae4d6d2807368e27fb6a9968e9533,"py3: port gatekeeper

There were a couple of cleanups in swob as part of this.  First,
status lines are always native str objects (as PEP 3333 wants), rather
than being encoded to bytes under py3. Second, _resp_body_property
now works (only) with bytestrings from the app iter.

In gatekeeper, we now deal with dict.items() returning an object of
type ""dict_items"" in py3, not a list. Also fixed a NameError caused by
py2's list comprehensions leaking variables to function scope where
py3's don't.

Change-Id: I6da8eceb91edb2b47aa345d61b825c7199a5569b"
tovin07,2018-04-20 10:30:47,https://api.github.com/repos/openstack/swift/git/commits/9b90498b07398a229c1b227eac9a0cbde8bd50fc,9b90498b07398a229c1b227eac9a0cbde8bd50fc,"Trivial: Update pypi url to new url

Pypi url changed from [1] to [2]

[1] https://pypi.python.org/pypi/<package>
[2] https://pypi.org/project/<package>

Change-Id: Ic639298e83189410395f31cc9ef60076af479efd"
notmyname,2018-04-20 00:13:42,https://api.github.com/repos/openstack/swift/git/commits/87dad294cc3c0e04d18f78a15c8ea213d7e0ac8d,87dad294cc3c0e04d18f78a15c8ea213d7e0ac8d,"added another golang client to associated projects

Change-Id: I04f5c14586ad4ecac03d18992b8cf351d6eab1e3"
notmyname,2018-04-16 23:42:15,https://api.github.com/repos/openstack/swift/git/commits/6a428c4266092a5b1ed9baeafa88f9943acaaafc,6a428c4266092a5b1ed9baeafa88f9943acaaafc,"updated associated projects page

* Cleaned up the SDK/library links
* Added a few projects
* Fixed some existing links
* Removed some very old, unmaintained projects

Change-Id: I3effd920e978eb7af39ab27b4877a7bfc8c64b8b"
charz,2018-04-13 07:08:39,https://api.github.com/repos/openstack/swift/git/commits/2307886efebee4874c6606879623ad75f9f34d34,2307886efebee4874c6606879623ad75f9f34d34,"Truncate error logs to prevent log handler runs out of the buffer.

Co-Authored-By: Matthew Oliver <matt@oliver.net.au>

Change-Id: If063a12cac74b67078b6db1c4f489160a2a69de1
Closes-Bug: 1763557"
matthewoliver,2018-03-09 00:24:43,https://api.github.com/repos/openstack/swift/git/commits/817ca078e13c688efbd9fad3af93541d64ca3886,817ca078e13c688efbd9fad3af93541d64ca3886,"py3: port cli recon tests

Also a drive by HASH_PATH_PREFIX/SUFFIX bytesting fix which was
breaking ring and relinker tests.

Change-Id: I1db8f102361770cfed2b12f689789d1e8c21c3e4"
tipabu,2018-04-12 21:28:33,https://api.github.com/repos/openstack/swift/git/commits/83ca4f1bb0a4ada06353b0ac16ff654c49441fe3,83ca4f1bb0a4ada06353b0ac16ff654c49441fe3,"Handful of formpost cleanups

- Drop an unnecessary return value from _perform_subrequest
- Stop checking for a CONTENT_TYPE that will never be set
- Use reiterate
- Close the response iter when we're done with it

Change-Id: Ib8cc7cd42b230197844f275d7caf9eb7b3c204f8"
tipabu,2018-04-12 20:59:24,https://api.github.com/repos/openstack/swift/git/commits/f1bbb5f980a56846b12e37686756b2a77f5fcbad,f1bbb5f980a56846b12e37686756b2a77f5fcbad,"Clean up SegmentError messages

Since we already deducted the full length of the chunk from bytes_left
before raising the too-many-bytes error, the value in the error message
was always negative, like

    Too many bytes for /v1/AUTH_test/c%3Fwith-question-mark/dlo;
    truncating in /v1/AUTH_test/c with -27244 bytes left

In the not-enough-bytes case, we may as well mention how many more bytes
we were expecting.

Change-Id: I155ed1837d40b4aaf929452b830f03c1daab0af7"
tipabu,2018-04-11 00:04:56,https://api.github.com/repos/openstack/swift/git/commits/5b68eb5396edc33a64c6012a333c72d5a5878a64,5b68eb5396edc33a64c6012a333c72d5a5878a64,"swift-(account|container)-info: tolerate LockTimeouts

I'm not really clear on why a sqlite3.OperationalError should cause us to
retry with stale_reads_ok=True, but swift.common.exceptions.LockTimeout
*definitely* should.

Change-Id: I707dec1d11b8db80bc8fbee30662b319bf10d6a5"
smerritt,2018-04-11 00:00:54,https://api.github.com/repos/openstack/swift/git/commits/c42f15f94da387bcc0c62ee1600d4cb7df10f803,c42f15f94da387bcc0c62ee1600d4cb7df10f803,"Add ability to run specific tests in py35 tox environment.

This lets you run something like

    $ tox -e py35 -- -s test.unit.common.test_swob

and just run the swob tests. This is handy if you've got one or two
test failures to debug or if you're trying to get another test file
passing under Python 3.

Also removed the old py34 environment. Nothing uses it.

Change-Id: I244b8903ef0a445abd028004bf02d6c581a8afe2"
smerritt,2018-04-10 23:33:09,https://api.github.com/repos/openstack/swift/git/commits/b0b3ed03096e800f37eee7826e76029a8a00bbab,b0b3ed03096e800f37eee7826e76029a8a00bbab,"Improve check for O_TMPFILE support in unit tests

On Python < 3.4, there is no os.O_TMPFILE, so the check for O_TMPFILE
support was always reporting no-support. We now use utils.O_TMPFILE,
which is always defined.

Also, when opening an anonymous tempfile, you must open the directory
(not a file in the directory) with three flags or-ed together:
O_DIRECTORY, O_WRONLY, and O_TMPFILE. Calling open() with a subset of
those flags will receive either EISDIR or EINVAL. The check was trying
to open a file in the temp dir, so was always reporting no-support for
O_TMPFILE. We now correctly open the tempdir.

Change-Id: Iaf48ad9aecea73df4e794818dd15070360bff19f"
tipabu,2018-03-26 21:55:47,https://api.github.com/repos/openstack/swift/git/commits/77bfe7affadd655383d8e0b3274c88107ef761c5,77bfe7affadd655383d8e0b3274c88107ef761c5,"swob.Match: add __repr__

<swift.common.swob.Match object at 0x7fe589571d50> isn't quite as
obvious.

Change-Id: I7197e7732a4b56084b45ce6a113bc39ce8c7bd54"
dhellmann,2018-04-10 18:10:25,https://api.github.com/repos/openstack/swift/git/commits/9a865f83c094bb8938afaa22c9e9fe5d00f98037,9a865f83c094bb8938afaa22c9e9fe5d00f98037,"update requirements to support matching global exclusions

The match for dependency names is case sensitive, so change
""pastedeploy"" to ""PasteDeploy"".

The match for dependencies takes the environment markers into account,
so add a marker for dnspython to restrict its use to python 2.7. There
is a dnspython3 package for use with version 3, and that can be added
separately as part of the python 3 porting work.

Change-Id: Ia2bb2e1846d734609ea9ff37d2ad1ffd37ced950
Depends-On: https://review.openstack.org/560109
Signed-off-by: Doug Hellmann <doug@doughellmann.com>"
timuralp,2018-04-05 01:09:26,https://api.github.com/repos/openstack/swift/git/commits/8944e9d8bcf52c1365e6c0e63ff8031a4b7dc5ca,8944e9d8bcf52c1365e6c0e63ff8031a4b7dc5ca,"Support unicode characters in tempauth user names.

Unicode characters in tempauth user names currently prevent these users
from authenticating. This manifests in two places:
1. the call to get_groups() fails to return a set that matches the user
   preventing authentication
2. a new token is generated every time for such users, as the check
   against existing memcache entries always fails to match

The patch fixes the existing behavior with respect to unicode users. As
part of it, the FakeMemcache class had to change to decode the strings
passed to it to mimic the actual memcache client behavior.

Darrell Bishop developed the patch and Timur Alperovich added the tests
for it.

Change-Id: I4ecfae2bca6ffa08ad15e584579ebce707f4628d"
tipabu,2018-01-26 19:16:27,https://api.github.com/repos/openstack/swift/git/commits/5d20411a3ff23288e33f4d72cc7154574c7d6e7d,5d20411a3ff23288e33f4d72cc7154574c7d6e7d,"Don't log tracebacks on ECONNRESET, ENETUNREACH, BadStatusLine

Seen during a retart-storm:

Traceback (most recent call last):
  File "".../swift/common/db_replicator.py"", line 134, in replicate
    {'Content-Type': 'application/json'})
  File "".../httplib.py"", line 1057, in request
    self._send_request(method, url, body, headers)
  File "".../httplib.py"", line 1097, in _send_request
    self.endheaders(body)
  File "".../httplib.py"", line 1053, in endheaders
    self._send_output(message_body)
  File "".../httplib.py"", line 897, in _send_output
    self.send(msg)
  File "".../httplib.py"", line 859, in send
    self.connect()
  File "".../swift/common/bufferedhttp.py"", line 108, in connect
    return HTTPConnection.connect(self)
  File "".../httplib.py"", line 836, in connect
    self.timeout, self.source_address)
  File "".../eventlet/green/socket.py"", line 72, in create_connection
    raise err
error: [Errno 104] ECONNRESET

Traceback (most recent call last):
  File "".../swift/obj/replicator.py"", line 282, in update
    '', headers=self.headers).getresponse()
  File "".../swift/common/bufferedhttp.py"", line 157, in http_connect
    ipaddr, port, method, path, headers, query_string, ssl)
  File "".../swift/common/bufferedhttp.py"", line 189, in http_connect_raw
    conn.endheaders()
  File "".../httplib.py"", line 1053, in endheaders
    self._send_output(message_body)
  File "".../httplib.py"", line 897, in _send_output
    self.send(msg)
  File "".../httplib.py"", line 859, in send
    self.connect()
  File "".../swift/common/bufferedhttp.py"", line 108, in connect
    return HTTPConnection.connect(self)
  File "".../httplib.py"", line 836, in connect
    self.timeout, self.source_address)
  File "".../eventlet/green/socket.py"", line 72, in create_connection
    raise err
error: [Errno 101] ENETUNREACH

Traceback (most recent call last):
  File "".../swift/obj/replicator.py"", line 282, in update
    '', headers=self.headers).getresponse()
  File "".../swift/common/bufferedhttp.py"", line 123, in getresponse
    response = HTTPConnection.getresponse(self)
  File "".../httplib.py"", line 1136, in getresponse
    response.begin()
  File "".../httplib.py"", line 453, in begin
    version, status, reason = self._read_status()
  File "".../httplib.py"", line 417, in _read_status
    raise BadStatusLine(line)
BadStatusLine: ''

(Different transactions, of course.)

Change-Id: I07192b8d2ece2d2ee04fe0d877ead6fbfc321d86"
tipabu,2018-03-26 23:50:39,https://api.github.com/repos/openstack/swift/git/commits/42adbe561f8029d7d3481191925549066f6863f8,42adbe561f8029d7d3481191925549066f6863f8,"Respect X-Backend-Etag-Is-At headers from left of SLO

If a middleware left of SLO wants to override the ETag for a large
object, it will need to send a X-Backend-Etag-Is-At on GETs if it wants
to be at all performant. This would work fine coming out of the object
controller (which would look at the headers in the response, figure out
what's the real conditional etag, and pass it to swob.Response), and
even encryption (which would do the same), but at SLO, we'd just replace
the ETag, flag it as a conditional response, and let swob assume the
*SLO* ETag is the conditional one.

Now, SLO will jump through the same resolve_backend_etag_is_at hoops that
other parts of the proxy have to deal with. This allows If-Match and
If-None-Match to work correctly if/when swift3 stores an S3-compatible
multipart-upload ETag.

Change-Id: Ibbf59d38d7bcc9c485b1d5305548144025d77441"
tipabu,2018-03-26 21:30:07,https://api.github.com/repos/openstack/swift/git/commits/baa4fa5d659f55243b7425f877e94f6b3eedbfe6,baa4fa5d659f55243b7425f877e94f6b3eedbfe6,"swob.Match: Optional whitespace is optional

https://tools.ietf.org/html/rfc7232#section-3 defines the form for
If-Match and If-None-Match as

    If-Match = ""*"" / 1#entity-tag
    If-None-Match = ""*"" / 1#entity-tag

https://tools.ietf.org/html/rfc7230#section-7 in turn defines the
1#<type> syntax as

    1#element => element *( OWS "","" OWS element )

where OWS is *optional* whitespace. Our swob.Match object should respect
that optionality.

Change-Id: I6ee1c6674e0e9c156149319022fd289504bd3722"
wh200890,2018-03-26 07:22:28,https://api.github.com/repos/openstack/swift/git/commits/9b4c978f99c993775e917f9ddec7cabb25c83c6d,9b4c978f99c993775e917f9ddec7cabb25c83c6d,"Use http code constant instead of int

Change-Id: I1dce94ac6192746a7b90646fe4b4460a651bced1"
smerritt,2018-03-13 00:58:23,https://api.github.com/repos/openstack/swift/git/commits/ecf8ae50e14db146f9368cda73a265a92663ef03,ecf8ae50e14db146f9368cda73a265a92663ef03,"Remove object replicator's lockup detector/mitigator.

Sometimes, an rsync process just won't die. You can send SIGKILL, but
it isn't very effective. This is sometimes seen due to attempted I/O
on a failing disk; with some disks, an rsync process won't die until
Linux finishes the current I/O operation (whether success or failure),
but the disk can't succeed and will retry forever instead of
failing. The net effect is an unkillable rsync process.

The replicator was dealing with this by sending SIGKILL to any rsync
that ran too long, then calling waitpid() in a loop[1] until the rsync
died so it could reap the child process. This worked pretty well
unless it met an unkillable rsync; in that case, one greenthread would
end up blocked for a very long time. Since the replicator's main loop
works by (a) gathering all replication jobs, (b) performing them in
parallel with some limited concurrency, then (c) waiting for all jobs
to complete, an unkillable rsync would block the entire replicator.

There was an attempt to address this by adding a lockup detector: if
the replicator failed to complete any replication cycle in N seconds
[2], all greenthreads except the main one would be terminated and the
replication cycle restarted. It works okay, but only handles total
failure. If you have 20 greenthreads working and 19 of them are
blocked on unkillable rsyncs, then as long as the 20th greenthread
manages to replicate at least one partition every N seconds, the
replicator will just keep limping along.

This commit removes the lockup detector. Instead, when a replicator
greenthread happens upon an rsync that doesn't die promptly after
receiving SIGKILL, the process handle is sent to a background
greenthread; that background greenthread simply waits for those rsync
processes to finally die and reaps them. This lets the replicator make
better progress in the presence of unkillable rsyncs.

[1] It's a call to subprocess.Popen.wait(); the looping and sleeping
happens in eventlet.

[2] The default is 1800 seconds = 30 minutes, but the value is
configurable.

Change-Id: If6dc7b003e18ab4e8a5ed687c965025ebd417dfa"
alecuyer,2017-07-13 13:44:56,https://api.github.com/repos/openstack/swift/git/commits/8d7e245eb599b54d2bcc3c7a652b85987fdb36e1,8d7e245eb599b54d2bcc3c7a652b85987fdb36e1,"Change object_audit_location_generator() to yield for a single policy.

auditor.py currently relies on POLICY[0] object_audit_location_generator()
to yield an AuditLocation for all policies on the object-server.

The changes in this patch are :
  - object_audit_location_generator() yields AuditLocation only for the
  requested policy
  - audit_all_objects() calls object_audit_location_generator() for each
    policy

Closes-Bug: 1534212
Change-Id: Ida92ba0a5e1e486a4f7132c6539460b38c34ec87"
alecuyer,2018-03-20 14:18:58,https://api.github.com/repos/openstack/swift/git/commits/9f4910f6b938aa1679571d4787bbdcfa5b5f3a19,9f4910f6b938aa1679571d4787bbdcfa5b5f3a19,"Add round_robin_iter function to common/utils

Move the existing code in db_replicator.py to utils.py

Change-Id: I04e3f30a82c89fb7e714c5eb7225374b9a5c76f9"
KazuhiroMiyahara,2018-03-20 04:45:04,https://api.github.com/repos/openstack/swift/git/commits/7e77bf34f2fdc43c935380064eb0d7045988eec0,7e77bf34f2fdc43c935380064eb0d7045988eec0,"Refactor tempurl functional test's try-finally

This is a following patch of [1]. In [1] comment, tim suggested
implementation for same behavior with less code.
This change implemented the suggestion. See [1] for more details.

[1]: https://review.openstack.org/#/c/547306/

Change-Id: Ifd8a0534fbdf41837977028c0c6ef99f1f6ac0f0"
clayg,2018-03-17 01:44:14,https://api.github.com/repos/openstack/swift/git/commits/2c4c23defc615e0f672244457c4d15cd718971dd,2c4c23defc615e0f672244457c4d15cd718971dd,"Encapsulate some general utility in utils

... but either way works.

Change-Id: I56b7689270e528a1d2099ff96030ce660e588c94
Related-Change-Id: Ic108f5c38f700ac4c7bcf8315bf4c55306951361"
clayg,2018-03-17 01:17:59,https://api.github.com/repos/openstack/swift/git/commits/bb3553d08428c2d2ea0a7d4029a3fecb97678446,bb3553d08428c2d2ea0a7d4029a3fecb97678446,"Use state when you have it

... but either way works.

Change-Id: Ib66ee035229d0718b68450587550176c91ce9ca6
Related-Change-Id: Ic108f5c38f700ac4c7bcf8315bf4c55306951361"
smerritt,2018-03-08 21:02:46,https://api.github.com/repos/openstack/swift/git/commits/de38b727b475876b4a3e4dcf7dca21de8454722e,de38b727b475876b4a3e4dcf7dca21de8454722e,"Don't double-filter replication jobs

ObjectReplicator.collect_jobs() takes and correctly applies the
various overrides, so there's no need to check the returned jobs
against the overrides.

Change-Id: I2a59b26410d1732a5f2c8f1f32e397d77550860e"
matthewoliver,2018-03-13 06:19:44,https://api.github.com/repos/openstack/swift/git/commits/e84ed57a729be2e95e7028bfdf2134d58e8a1e98,e84ed57a729be2e95e7028bfdf2134d58e8a1e98,"py3: port cli form_signature and unit tests

This patch ports the form_signature cli `swift-form-signature`
and it's corrisponding tests to py3.

In essence in Py3 the HMAC function expects binary strings.

Change-Id: I5dded4ceb80f0cc595403775e8f9c17873e1e37b"
tipabu,2018-03-06 23:42:24,https://api.github.com/repos/openstack/swift/git/commits/1b546f6b7750fe9fd91f840f86a9fe5e370266ad,1b546f6b7750fe9fd91f840f86a9fe5e370266ad,"Capture probe test logs

Change-Id: Ib2f3aa1d70e6d28e00570fe21352031dc41325d0"
KazuhiroMiyahara,2018-03-08 08:07:24,https://api.github.com/repos/openstack/swift/git/commits/bac79f2daeb1a4f103bb81daf0b1a52fbce632c3,bac79f2daeb1a4f103bb81daf0b1a52fbce632c3,"Unify expirer unit test task queue

To simplify unit tests for object-expirer, this patch unifies
expirer's task queue for each unit tests.
In this patch, following changes are applied:
    1: Unify expirer's task queue
    2: Remove redundant log checking, because some tests checks
       logs in their speciality
    3: Use mocked methods instead of dummy methods which
       raises specialized message exception

Change-Id: I839f0bb43eb827384727356877e33a6be7d9b81d"
tipabu,2018-03-02 12:24:09,https://api.github.com/repos/openstack/swift/git/commits/e4640495d80133f09e7ff83b16894de389a271ef,e4640495d80133f09e7ff83b16894de389a271ef,"py3: have Timestamp accept bytestrings, better validate input

Change-Id: I627894b9496cc85b3b1852e9df4812257df4ac6a"
tipabu,2017-05-11 21:26:19,https://api.github.com/repos/openstack/swift/git/commits/b640631dafefe4f03f6ce2f9fe723e262cf366e4,b640631dafefe4f03f6ce2f9fe723e262cf366e4,"Apply remote metadata in _handle_sync_response

We've already got it in the response, may as well apply it now rather
than wait for the other end to get around to running its replicators.

Change-Id: Ie36a6dd075beda04b9726dfa2bba9ffed025c9ef"
smerritt,2018-03-06 01:51:03,https://api.github.com/repos/openstack/swift/git/commits/63e6c75efbec739dd94846f826ae9e99dd0d7a4e,63e6c75efbec739dd94846f826ae9e99dd0d7a4e,"Temporarily disable flaky test.

test.unit.obj.test_replicator.TestObjectReplicator.test_replicate_lockup_detector
is failing a lot in the gate. Let's disable it for now so that other
patches can continue to land.

Change-Id: I1790ebcbc0c8d075c2786aebca4e8ccf7547b178"
smerritt,2018-02-28 15:37:04,https://api.github.com/repos/openstack/swift/git/commits/b08c70d38e1d49b73c241b227e4fcc62fe164a04,b08c70d38e1d49b73c241b227e4fcc62fe164a04,"Support -d <devs> and -p <partitions> in DB replicators.

Similar to the object replicator and reconstructor, these arguments
are comma-separated lists of device names and partitions,
respectively, on which the account or container replicator will
operate. Other devices and partitions are ignored.

Change-Id: Ic108f5c38f700ac4c7bcf8315bf4c55306951361"
tipabu,2018-03-03 17:07:54,https://api.github.com/repos/openstack/swift/git/commits/afb6cb583536e4070af881ae792011bcf3789f00,afb6cb583536e4070af881ae792011bcf3789f00,"Try to avoid leaving (killed) long-running rsyncs in the process table

Also, add some guards against a NameError in particularly-bad races.

Change-Id: If90662b6996e25bde74e0a202301b52a1d266e92
Related-Change: Ifd14ce82de1f7ebb636d6131849e0fadb113a701"
tipabu,2018-03-01 13:01:49,https://api.github.com/repos/openstack/swift/git/commits/57b632fbb52c84e02fefa307ada45081d86b23a6,57b632fbb52c84e02fefa307ada45081d86b23a6,"Fix object-server to not 400 all expirer DELETEs

In the related changes, we switched to using
Timestamp.normal representations for the X-If-Delete-At header.
However, the object-server required that the header be an int,
and the trailing '.00000' would cause trip the
""Bad X-If-Delete-At header value"" error handling.

Now, we'll convert both the expirer header and the stored X-Delete-At to
Timestamps, even though we expect them to have no fractional value.

Note that we *could* have changed the expirer to continue sending
headers that are valid ints, but Timestamps are already the normal
Swift-way of passing and comparing times -- we should use that.

Related-Change: Ibf61eb1f767a48cb457dd494e1f7c12acfd205de
Related-Change: Ie82622625d13177e08a363686ec632f63d24f4e9
Change-Id: Ida22c1c8c5bf21bdc72c33e225e75fb750f8444b"
tipabu,2018-03-02 14:19:34,https://api.github.com/repos/openstack/swift/git/commits/9eeacbf150cdb0e1ee58a7a25fb875da0d955898,9eeacbf150cdb0e1ee58a7a25fb875da0d955898,"Fix new doc warnings resulting from Sphinx 1.7.1

Change-Id: Id6678dd7e59a85bc2a7b3ba3d41d28e08956ae3e"
zaitcev,2018-03-01 02:14:32,https://api.github.com/repos/openstack/swift/git/commits/fdaf052d7316e131258017e6e9e49fe07948964a,fdaf052d7316e131258017e6e9e49fe07948964a,"Make test_greater_with_offset not fail on py36

Reviewer, beware: we determined that the test was using the
facilities improperly. This patch adjusts the test but does
not fix the code under test.

The time.time() output looks like this:

[zaitcev@lembas swift-tsrep]$ python2
Python 2.7.14 (default, Dec 11 2017, 14:52:53)
[GCC 7.2.1 20170915 (Red Hat 7.2.1-2)] on linux2
>>> import time
>>> time.time()
1519861559.96239
>>> time.time()
1519861561.046204
>>> time.time()
1519861561.732341
>>>

(it's never beyond 6 digits on py2)

[zaitcev@lembas swift-tsrep]$ python3
Python 3.6.3 (default, Oct  9 2017, 12:07:10)
[GCC 7.2.1 20170915 (Red Hat 7.2.1-2)] on linux
>>> import time
>>> time.time()
1519861541.7662468
>>> time.time()
1519861542.893482
>>> time.time()
1519861546.56222
>>> time.time()
1519861547.3297756
>>>

(can go beyond 6 digits on py3)

When fraction is too long on py3, you get:

>>> now = 1519830570.6949349
>>> now
1519830570.6949348
>>> timestamp = Timestamp(now, offset=1)
>>> timestamp
1519830570.69493_0000000000000001
>>> value = '%f' % now
>>> value
'1519830570.694935'
>>> timestamp > value
False
>>>

Note that the test fails in exactly the same way on py2, if time.time()
returns enough digits. Therefore, rounding changes are not the culprit.

The real problem is the assumption that you can take a float T, print
it with '%f' into S, then do arithmetic on T to get O, convert S, T,
and O into Timestamp, then make comparisons. This does not work,
because rounding happens twice: once when you interpolate %f, and
then when you construct a Timestamp. The only valid operation is
to accept a timestamp (e.g. from X-Delete-At) as a floating point
number as a decimal string, and convert it once. Only then you can
do arithmetics to find the expiration.

Change-Id: Ie3b002abbd4734c675ee48a7535b8b846032f9d1"
tipabu,2018-03-01 23:30:00,https://api.github.com/repos/openstack/swift/git/commits/8b8a2a3406e4af2a8c61427f5ea43aa7ab161961,8b8a2a3406e4af2a8c61427f5ea43aa7ab161961,"Tolerate 404s during setUp/tearDown in func tests

A couple times, I've seen tests fail in the gate because we got back a
404 while trying to clean out the test account. The story that gets us
here seems to be:

 - One or more object servers take too long to respond to the initial
   DELETE request, so the test client gets back a 503 and sleeps so
   it can retry.
 - Meanwhile, the servers finish writing their tombstones and want to
   respond 204 (but probably *actually* respond 408 because the proxy
   killed the connection).
 - The test client sends its retry, and since the object servers now
   have tombstones, it gets back a 404.

But the thing is, this is *outside of the test scope* anyway, we're just
trying to get back to a sane state. If it's gone, s much the better!

For an example of this, see the failures on patchset 3 of
https://review.openstack.org/#/c/534978 (which both failed for the same
reason on different tests).

Change-Id: I9ab2fd430d4800f9f55275959a20e30f09d9e1a4"
tipabu,2018-02-22 22:48:55,https://api.github.com/repos/openstack/swift/git/commits/36c42974d6746a306002f8f8e1b3dae664c783d6,36c42974d6746a306002f8f8e1b3dae664c783d6,"py3: Port more CLI tools

Bring under test

 - test/unit/cli/test_dispersion_report.py
 - test/unit/cli/test_info.py and
 - test/unit/cli/test_relinker.py

I've verified that swift-*-info (at least) behave reasonably under
py3, even swift-object-info when there's non-utf8 metadata on the
data/meta file.

Change-Id: Ifed4b8059337c395e56f5e9f8d939c34fe4ff8dd"
tipabu,2018-02-01 23:25:53,https://api.github.com/repos/openstack/swift/git/commits/624b5310b456e8bbf9cc729fe1d9a18aeb068ae1,624b5310b456e8bbf9cc729fe1d9a18aeb068ae1,"py3: port common/wsgi.py

Note that we're punting on configuring socket buffer sizes (for now)

Change-Id: I285a9b521fd0af381a227e0e824bc391817547f4"
openstackadmin,2018-02-07 17:46:44,https://api.github.com/repos/openstack/swift/git/commits/d09d60dfbb48da434ae432049c6d29d065d782b7,d09d60dfbb48da434ae432049c6d29d065d782b7,"Update release notes for stable/queens

Change-Id: I35581e63c9f23cc3632bb1391a79def18d86fbf8"
tipabu,2018-02-26 10:48:43,https://api.github.com/repos/openstack/swift/git/commits/7eb9852cd4efd8903b486a0ceb58372c2fb3b6e3,7eb9852cd4efd8903b486a0ceb58372c2fb3b6e3,"Don't log tracebacks when we know where they're going to end

Change-Id: I789af9c2c02da8a895186581dbf8a2e3db8c5e9f"
KazuhiroMiyahara,2018-02-13 09:40:18,https://api.github.com/repos/openstack/swift/git/commits/1fadffeae0defb5c8956247e9118e74c8405f8ba,1fadffeae0defb5c8956247e9118e74c8405f8ba,"Split expirer methods and parametrize task account

To prepare for implement general task queue mode to expirer,
this patch splits expirer's method into smaller ones and parametrize task
account. This change will make expirer's general task queue patch [1] more
simple.

This patch has following approaches:
    1: Split methods into smaller ones
    2: Parameterize task account name to adapt many task accounts
       in general task queue
    3: Include task account names in log messages
    4: Skip task account when the account has no task containers

[1]: https://review.openstack.org/#/c/517389/

Change-Id: I907612f7c258495e9ccc53c1d57de4791b3e7ab7"
bloodeagle40234,2018-02-26 12:23:55,https://api.github.com/repos/openstack/swift/git/commits/9e5f434574e6d65e97fbece69d5baa6a60d73418,9e5f434574e6d65e97fbece69d5baa6a60d73418,"Kill rsync coros when lockup detector tries to kill the process

Because the replicator in the master doesn't propergate the kill
signal to the subprocess in the coroutine. With the behavior, the lockup
detector causes a lot of rsync processes even it tries to reset the process.

This patch fixes the replicator kill rsync procs when the lockup detector
calls kill of eventlet threads.

Change-Id: Ifd14ce82de1f7ebb636d6131849e0fadb113a701"
KazuhiroMiyahara,2018-02-13 05:16:27,https://api.github.com/repos/openstack/swift/git/commits/b3f1558acd2f5a4df3f039070ca5bbc33935e822,b3f1558acd2f5a4df3f039070ca5bbc33935e822,"Fix expirer's invalid task object names in unit tests

Object-expirer's task name should be in format of
""<timestamp>-<account>/<container>/<obj>"". In object-expirer
implementation, ValueError is catched and handled when expirer's task
objects have invalid name. But in actual swift cluster, invalid task
object name is not created because task object is created by
object-server.
However, without the ValueError catching, some unit tests fail,
because the unit tests create invalid task object names.

This patch fixes invalid task object names in unit tests. The
ValueError catch is remained for unexpected errors, but in the case
the task will be skipped.

This patch will help to refactor expirer's task object parsing.

Change-Id: I8fab8fd180481ce9e97c945904c5c89eec037110"
tipabu,2017-06-23 18:06:24,https://api.github.com/repos/openstack/swift/git/commits/748b29ef805179351a1dbe150205fc53838958fb,748b29ef805179351a1dbe150205fc53838958fb,"Make If-None-Match:* work properly with 0-byte PUTs

When PUTting an object with `If-None-Match: *`, we rely 100-continue
support: the proxy checks the responses from all object-servers, and if
any of them respond 412, it closes down the connections. When there's
actual data for the object, this ensures that even nodes that *don't*
respond 412 will hit a ChunkReadTimeout and abort the PUT.

However, if the client does a PUT with a Content-Length of 0, that would
get sent all the way to the object server, which had all the information
it needed to respond 201. After replication, the PUT propagates to the
other nodes and the old object is lost, despite the client receiving a
412 indicating the operation failed.

Now, when PUTting a zero-byte object, switch to a chunked transfer so
the object-server still gets a ChunkReadTimeout.

Change-Id: Ie88e41aca2d59246c3134d743c1531c8e996f9e4"
tipabu,2018-02-01 22:30:32,https://api.github.com/repos/openstack/swift/git/commits/5cb0869743e527026dad7c6691bda2e3f2174c07,5cb0869743e527026dad7c6691bda2e3f2174c07,"py3: port common/memcached.py

Change-Id: I7f04b3977971f0581b04180e5372686d8186346f"
smerritt,2017-12-08 01:25:26,https://api.github.com/repos/openstack/swift/git/commits/e0d18690683f77ea65367ccfa27d6933a59a7a4a,e0d18690683f77ea65367ccfa27d6933a59a7a4a,"Fix suffix-byte-range responses for zero-byte EC objects.

The object servers are correctly returning 200s for such objects, but
we were misinterpreting the result in the proxy. We had assumed that a
satisfiable byte-range contained at least one byte, which seems
reasonable unless you gaze long into RFC 7233.

Suffix byte ranges (e.g. ""bytes=-32123"") are not asking for the last N
bytes of an object; they are asking for *up to* the last N bytes, or
the whole thing if fewer than N bytes are available. In the EC
machinery, we had code that assumed ""has no bytes"" == ""unsatisfiable"",
which is not true in that specific case. Now we correctly handle a
suffix-byte-range request that is satisfiable but receives zero bytes.

Change-Id: I8295a6c1436f50f86a4c626d87de6bfedd74ab09
Closes-Bug: 1736840"
tipabu,2018-02-01 22:30:19,https://api.github.com/repos/openstack/swift/git/commits/4b19ac772364778a4b96d7e18834db9a7645f482,4b19ac772364778a4b96d7e18834db9a7645f482,"py3: port common/storage_policy.py

Change-Id: I7030280a8495628df9ed8edcc8abc31f901da72e"
tipabu,2018-02-22 19:08:49,https://api.github.com/repos/openstack/swift/git/commits/25540a415e7e36bb08a01a14ca41e2d7591e62cb,25540a415e7e36bb08a01a14ca41e2d7591e62cb,"Tighten up assertions around expirer's concurrency

In particular, test that each work item is only done *once*.

Change-Id: I9cc610bffb2aa9a2f2b05f4c49e574ab56d05201
Related-Change: Ic0075a3718face8c509ed0524b63d9171f5b7d7a"
KazuhiroMiyahara,2018-02-23 07:24:12,https://api.github.com/repos/openstack/swift/git/commits/532ac9e1c7e883b0570a80e87d598a0ebf731e0b,532ac9e1c7e883b0570a80e87d598a0ebf731e0b,"Ensure reverting test env if the env is temporarily changed

test_tempurl_keys_hidden_from_acl_readonly changes test env parameter
temporarily for container HEAD. After that the test reverts the change.
But if the HEAD failed with exception, the change is not reverted.
With the non reverted change, some other tests fails even if the test
have no problems.

This patch ensures the reversion by using try-finally.

Change-Id: I8cd7928da6211e5516992fe9f2bc8e568bcab443"
KazuhiroMiyahara,2018-02-13 03:36:04,https://api.github.com/repos/openstack/swift/git/commits/58f5d89066adbd54403ad315ffe1f9b2f05aa583,58f5d89066adbd54403ad315ffe1f9b2f05aa583,"Remove confusing assertion from expirer's unit test

In test_expirer.TestObjectExpirer.test_process_based_concurrency,
an assertion checks that expirer execute tasks in round-robin order
for target containers. But the assertion depends on task object path,
because task assignation for each process depends on md5 of task
object path. The dependency makes the assetion confusing.

Now, we have test_expirer.TestObjectExpirer.test_round_robin_order which
is added in [1]. So this patch remove the confusing assertion.

This patch will help to refactor expirer's task object parsing.
I will push patch for the refactoring after this patch.

[1]: https://review.openstack.org/#/c/538171

Change-Id: Ic0075a3718face8c509ed0524b63d9171f5b7d7a"
tipabu,2018-02-22 18:26:00,https://api.github.com/repos/openstack/swift/git/commits/6060af8db96e23d32f3ecc3d02f7f0dd27a57eba,6060af8db96e23d32f3ecc3d02f7f0dd27a57eba,"Add more tests around ObjectExpirer.round_robin_order

Change-Id: I43b5e8d9513fd0566a61ff585dfdc1dde5b28343
Related-Change: Ibf61eb1f767a48cb457dd494e1f7c12acfd205de"
KazuhiroMiyahara,2018-01-26 07:54:31,https://api.github.com/repos/openstack/swift/git/commits/303635348b6cd30b13522d5c483934882178982b,303635348b6cd30b13522d5c483934882178982b,"Refactor expirer's task round robin implementation

Object-expirer changes order of expiration tasks to avoid deleting
objects in a certain container continuously.

To make review for expirer's task queue update patch [1] easy,
this patch refactors the implementation of the order change. In this
patch, the order change is divided as a function.

In [1], there will be two implementations for legacy task queue
and for general task queue. The two implementations have similar
codes. This patch helps to avoid copying codes in the two implementations.

Other than dividing function, this patch tries to resolve:
- Separate container iteration and object iteration to avoid the generator
  termination with (container, None) tuple.
- Using Timestamp class for delete_timestamp to be consist with other modules
- Change yielded delete task object info from tuple to dict because that
  includes several complex info (e.g. task_container, task_object,
  and target_path)
- Fix minor docs and tests depends on the changes above

[1]: https://review.openstack.org/#/c/517389

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>

Change-Id: Ibf61eb1f767a48cb457dd494e1f7c12acfd205de"
KazuhiroMiyahara,2018-02-21 04:58:59,https://api.github.com/repos/openstack/swift/git/commits/c6169cd7146cd80a3a5562eb729cde97f801cb84,c6169cd7146cd80a3a5562eb729cde97f801cb84,"Fix a typo in swift/common/swob.py

This patch just fixing a typo.

Change-Id: I8a3c5e86b39e442157874a426d664fce33c9d36a"
smerritt,2018-02-17 00:37:58,https://api.github.com/repos/openstack/swift/git/commits/47fed6f2f960a2cd56960b8aeb2eeace405c3afa,47fed6f2f960a2cd56960b8aeb2eeace405c3afa,"Add handoffs-only mode to DB replicators.

The object reconstructor has a handoffs-only mode that is very useful
when a cluster requires rapid rebalancing, like when disks are nearing
fullness. This mode's goal is to remove handoff partitions from disks
without spending effort on primary partitions. The object replicator
has a similar mode, though it varies in some details.

This commit adds a handoffs-only mode to the account and container
replicators.

Change-Id: I588b151ee65ae49d204bd6bf58555504c15edf9f
Closes-Bug: 1668399"
smerritt,2018-02-15 23:42:09,https://api.github.com/repos/openstack/swift/git/commits/2bfd9c6a9b0d9ee5b547a31ba97be74b09ac3afc,2bfd9c6a9b0d9ee5b547a31ba97be74b09ac3afc,"Make DB replicators ignore non-partition directories

If a cluster operator has some tooling that makes directories in
/srv/node/<disk>/accounts, then the account replicator will treat
those directories as partition dirs and may remove empty
subdirectories contained therein. This wastes time and confuses the
operator.

This commit makes DB replicators skip partition directories whose
names don't look like positive integers. This doesn't completely avoid
the problem since an operator can still use an all-digit name, but it
will skip directories like ""tmp21945"".

Change-Id: I8d6682915a555f537fc0ce8c39c3d52c99ff3056"
smerritt,2018-02-16 00:03:06,https://api.github.com/repos/openstack/swift/git/commits/8539b9388793fa5588c9f184d52f7834f1e77128,8539b9388793fa5588c9f184d52f7834f1e77128,"Small cleanup in DB replicator's error handling

Generally, we shouldn't compare integers with ""is"". It happens to work
because (a) CPython has only one instance of each integer betwen -5
and 256, and (b) errno.ENOTEMPTY == 66 on Linux, but it's better not
to rely on those details.

Change-Id: I494a4adbb2bb35adcf83b2d23e790c1b220e75c7"
gerardgine,2018-02-14 01:00:22,https://api.github.com/repos/openstack/swift/git/commits/57306181f1ffde3da1849c6d27e0b001d3bf5ea3,57306181f1ffde3da1849c6d27e0b001d3bf5ea3,"Improved usage of args in .functests

If we're calling the script with any arguments, --pretty will not
be passed to ostestr.
Also redirected cd commands' output to /dev/null in .functests.

Change-Id: I6e7e391c7e1659b86ab12eae4362b565218917b2"
notmyname,2018-02-13 22:38:22,https://api.github.com/repos/openstack/swift/git/commits/8dc40125ce8da616c713a778029b1b29903a1537,8dc40125ce8da616c713a778029b1b29903a1537,"add keystonemiddleware to extras area

Change-Id: I805cf220aee4af69bf4984cc148d69520e958073"
tipabu,2016-11-23 18:14:21,https://api.github.com/repos/openstack/swift/git/commits/642f79965a5e77b20660d2f0144d1624b0fa451c,642f79965a5e77b20660d2f0144d1624b0fa451c,"py3: port common/ring/ and common/utils.py

I can't imagine us *not* having a py3 proxy server at some point, and
that proxy server is going to need a ring.

While we're at it (and since they were so close anyway), port

* cli/ringbuilder.py and
* common/linkat.py
* common/daemon.py

Change-Id: Iec8d97e0ce925614a86b516c4c6ed82809d0ba9b"
tipabu,2018-02-08 21:45:21,https://api.github.com/repos/openstack/swift/git/commits/1dddcb533e16602cca5a057dbda12ca4049ea64e,1dddcb533e16602cca5a057dbda12ca4049ea64e,"probetests: Close our handle to subprocess' stdouts

Otherwise, you could start running out of file handles when running all
tests. Previously, I'd regularly exceed 1k fds and then all subsequent
tests would fail; now, it maxes out around 90.

Change-Id: Ib53f15b5d2be95c70cce8903ea0ef5c334479837"
baiwenteng,2018-02-09 08:39:32,https://api.github.com/repos/openstack/swift/git/commits/54918ad1db574bbc2c0b429836609a7ddb1efb13,54918ad1db574bbc2c0b429836609a7ddb1efb13,"Fix grammar error

Change-Id: Ic375b6c6ebf3f66860b065785e75b8d47552be28"
baiwenteng,2018-02-09 04:20:59,https://api.github.com/repos/openstack/swift/git/commits/a3d2aaba6470645345b19d52f0dbbfd51a4d5cf4,a3d2aaba6470645345b19d52f0dbbfd51a4d5cf4,"Fix typos in swift

Change-Id: I0982b0046a16fda0a39d9b31402b2e4b3160a5c4"
alistairncoles,2018-02-08 12:59:36,https://api.github.com/repos/openstack/swift/git/commits/1f4ebbc9900c113fa4447dd51079cc2cb9aa3ceb,1f4ebbc9900c113fa4447dd51079cc2cb9aa3ceb,"kill orphans during probe test setup

orphans processes sometimes cause probe test failures so
get rid of them before each test.

Change-Id: I4ba6748d30fbb28371f13aa95387c49bc8223402"
tipabu,2018-02-08 18:56:28,https://api.github.com/repos/openstack/swift/git/commits/0a993437d1dd837be80a036b1525a3195c86a10d,0a993437d1dd837be80a036b1525a3195c86a10d,"Update install-guide URLs to point to stable/queens

Change-Id: I7b2dd19f18cbfac3bc3ea763cd3333e3fb68f1cd"
onovy,2018-02-06 12:08:42,https://api.github.com/repos/openstack/swift/git/commits/bfe52a2e3562243b1b488e339a965642d846a30e,bfe52a2e3562243b1b488e339a965642d846a30e,"Quarantine DB without *_stat row

Closes-Bug: #1747689
Change-Id: Ief6bd0ba6cf675edd8ba939a36fb9d90d3f4447f"
tipabu,2018-02-07 05:50:12,https://api.github.com/repos/openstack/swift/git/commits/5b30c1f8115f2a85407b836be47d8376832b4f7b,5b30c1f8115f2a85407b836be47d8376832b4f7b,"Fix flakey test_check_delete_headers_sets_delete_at

It was rare (saw it once in 10k runs running locally), but it's
ocassionally blown up in the gate [1]. With this, no fails locally even
after 100k runs.

[1] http://logs.openstack.org/11/538011/3/gate/swift-tox-py27/06c06f0/job-output.txt.gz#_2018-02-07_03_29_09_578389

Change-Id: I7701d2db2ec82b48559c5b74a2e08c4403fd5dec
Related-Change: Ia126ad6988f387bbd2d1f5ddff0a56d457a1fc9b"
notmyname,2018-01-16 22:51:29,https://api.github.com/repos/openstack/swift/git/commits/f4cfe81e593b52e11e67916073a050cd2dde2e00,f4cfe81e593b52e11e67916073a050cd2dde2e00,"authors/changelog updates for 2.17.0 release

Change-Id: I577d169022916676a20a9ac24c7cc7b63ae46778"
smerritt,2018-01-27 00:51:03,https://api.github.com/repos/openstack/swift/git/commits/98d185905a173fd7cbcbe1f6a71b74eb7564851c,98d185905a173fd7cbcbe1f6a71b74eb7564851c,"Cleanup for iterators in SegmentedIterable

We had a pair of large, complicated iterators to handle fetching all
the segment data, and they were hard to read and think about. I tried
to break them out into some simpler pieces:

 * one to handle coalescing multiple requests to the same segment

 * one to handle fetching the bytes from each segment

 * one to check that the download isn't taking too long

 * one to count the bytes and make sure we sent the right number

 * one to catch errors and handle cleanup

It's more nesting, but each level now does just one thing.

Change-Id: If6f5cbd79edeff6ecb81350792449ce767919bcc"
smerritt,2018-02-01 01:05:28,https://api.github.com/repos/openstack/swift/git/commits/6994a2e392be4096beb49bd33e1a507dd04d491e,6994a2e392be4096beb49bd33e1a507dd04d491e,"ratelimit: ignore requests with invalid API versions

If you've got things like domain_remap, swift3, or other such
middlewares in your pipeline, you wind up with requests that aren't of
the form ""/v1/<account>/<container>/<object>"". When encountering such
an oddball request, it's not useful to call get_account_info() on the
second path component since it's probably not an account.

This commit makes the ratelimit middleware skip requests that don't
start with either ""/v1"" or ""/v1.0"". The requests will still be
handled, but they won't be rate-limited.

Change-Id: I9980cd0e902610ac99d13a502ae955bca2d99df3
Closes-Bug: 1669888
Closes-Bug: 1695273"
yanwei2019,2018-01-15 07:16:57,https://api.github.com/repos/openstack/swift/git/commits/39910553df22a2664b1125a4d503d1e9149cf617,39910553df22a2664b1125a4d503d1e9149cf617,"Solve the zombie process problem of Auditor

As the bug 1743310 reported,if we list the swift processes ,we will 
see a zombie process every one minute.The zombie processes numbers may 
be more than one. 

The related code as follows: swift/obj/auditor.py:386~397

        while pids:
            pid = os.wait()[0]
            # ZBF scanner must be restarted as soon as it finishes
            # unless we're in run-once mode
            if self.conf_zero_byte_fps and pid == zbf_pid and \
               len(pids) > 1 and not once:
                kwargs['device_dirs'] = override_devices
                # sleep between ZBF scanner forks
                self._sleep()
                zbf_pid = self.fork_child(zero_byte_fps=True, **kwargs)
                pids.add(zbf_pid)
            pids.discard(pid)

The pids list includes a zbf pid and one or more pids with mode 
(ALL - parallel, objectXXX).If the zbf process is the last one 
finished，then the second zbf process will not be forked.Conversely， 
the zbf process will be forked again,before the fork procedure,the main 
process will sleep for self.interval seconds,30 seconds by default,
during the self.interval time,if a non zbf process finished,this process 
will become a zombie,because the main process is in sleep.

In this solution,we move the sleep from whileloop to the subprocess,and
the main process will not be blocked in whileloop,so the subprocess
will be recovered in time.

Closes-Bug: #1743310

Change-Id: I61c766aa2a1c4bad0247a44a8e78ef38d9f3ae47"
KazuhiroMiyahara,2018-02-01 09:43:46,https://api.github.com/repos/openstack/swift/git/commits/8140b7e7ad8eaef0ca110c0f5e185a046b69fd6f,8140b7e7ad8eaef0ca110c0f5e185a046b69fd6f,"Fix inconsistency of account info in expirer's unit tests

In expirer's unit tests, FakeInternalClient instances simulates
expirer's task queue behavior. But get_account_info method of
the FakeInternalClient returns container count = 1 and object
count = 2, even if it simulate different count of containers or
objects.

This patch fixes the behavior. The return values of get_account_info
will be equal to simulated container and object counts.

This patch will make review for expirer's task queue upgrade patch [1]
more easy.

[1]: https://review.openstack.org/#/c/517389

Change-Id: Id5339ea7e10e4577ff22daeb91ec90f08704c98d"
smerritt,2018-02-01 00:40:21,https://api.github.com/repos/openstack/swift/git/commits/924a043c70ba38c5d81758b5e0c29fa73674404a,924a043c70ba38c5d81758b5e0c29fa73674404a,"Remove some cruft from ratelimit tests

The tests were carefully setting up a mock for the 'http_connect'
function in the ratelimit module, but there is no such function
imported by the ratelimit module.

As far as I can tell, this has been the case since the ratelimit
middleware first appeared in 72d40bd (Mon Oct 4 14:11:48 2010 -0700).

Change-Id: If047184c6435aa1647050f50b499dc9feff4318d"
KazuhiroMiyahara,2018-01-25 10:49:00,https://api.github.com/repos/openstack/swift/git/commits/5cac37284e1d3f3019309ca86f73e3dbb176df59,5cac37284e1d3f3019309ca86f73e3dbb176df59,"Refactor expirer unit tests

In expirer's unit tests, fake InternalClient classes are defined
and its instance simulates expirer's task queue behaviors.

To make review for expirer's task queue update patch [1] easy,
this patch refactors the implementation of the fake InternalClient
classes. In this patch, unit tests are refactored by the following
two approaches:
    #1: Summarizing duplicated fake InternalClient implementation
    #2: Make task account name variable
The #2 approach is for multiple task accounts in [1].

The patch [1] will be rebased after this patch merged.

[1]: https://review.openstack.org/#/c/517389

Change-Id: I10a7151cfdd43460ad38c47f672d3c31b77e7990"
tipabu,2017-12-05 20:19:37,https://api.github.com/repos/openstack/swift/git/commits/5a4d3bdfc49d61ee6e333c8eb1dad4383ae9308b,5a4d3bdfc49d61ee6e333c8eb1dad4383ae9308b,"tempurl: Make the digest algorithm configurable

... and add support for SHA-256 and SHA-512 by default. This allows us
to start moving toward replacing SHA-1-based signatures. We've known
this would eventually be necessary for a while [1], and earlier this
year we've seen SHA-1 collisions [2].

Additionally, allow signatures to be base64-encoded, provided they start
with a digest name followed by a colon. Trailing padding is optional for
base64-encoded signatures, and both normal and ""url-safe"" modes are
supported. For example, all of the following SHA-1 signatures are
equivalent:

   da39a3ee5e6b4b0d3255bfef95601890afd80709
   sha1:2jmj7l5rSw0yVb/vlWAYkK/YBwk=
   sha1:2jmj7l5rSw0yVb/vlWAYkK/YBwk
   sha1:2jmj7l5rSw0yVb_vlWAYkK_YBwk=
   sha1:2jmj7l5rSw0yVb_vlWAYkK_YBwk

(Note that ""normal"" base64 encodings will require that you url encode
all ""+"" characters as ""%2B"" so they aren't misinterpretted as spaces.)

This was done for two reasons:

   1. A hex-encoded SHA-512 is rather lengthy at 128 characters -- 88
      isn't *that* much better, but it's something.
   2. This will allow us to more-easily add support for different
      digests with the same bit length in the future.

Base64-encoding is required for SHA-512 signatures; hex-encoding is
supported for SHA-256 signatures so we aren't needlessly breaking from
what Rackspace is doing.

[1] https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html
[2] https://security.googleblog.com/2017/02/announcing-first-sha1-collision.html

Change-Id: Ia9dd1a91cc3c9c946f5f029cdefc9e66bcf01046
Related-Bug: #1733634"
tipabu,2017-09-12 22:46:14,https://api.github.com/repos/openstack/swift/git/commits/89a5c9d56fda8282292253d2d056121694ef7654,89a5c9d56fda8282292253d2d056121694ef7654,"Disallow fractional replicas in EC policies

Change-Id: I873d7bf7de54e4b1dccdafc8a61f03c09a65dfbc
Closes-Bug: 1554391
Closes-Bug: 1677547"
gaofei-inspur,2018-01-23 08:57:55,https://api.github.com/repos/openstack/swift/git/commits/10542d00ea131250a184803a03ce2928fadf274e,10542d00ea131250a184803a03ce2928fadf274e,"Replace Chinese punctuation with English punctuation

Curly quotes(Chinese punctuation) usually input from Chinese input method.
When read from english context, it makes some confusion.

Change-Id: Ibd50299ee287c56ec4759ea8ff53d47d006144f8"
smerritt,2018-01-23 19:44:04,https://api.github.com/repos/openstack/swift/git/commits/38ada71824f6094d428634a351229f1c0502aa4c,38ada71824f6094d428634a351229f1c0502aa4c,"Make statsd errors correspond to 5xx only

The goal is to make the successful statsd buckets
(e.g. ""object-server.GET.timing"") have timing information for all the
requests that the server handled correctly, while the error buckets
(e.g. ""object-server.GET.errors.timing"") have the rest.

Currently, we don't do that great a job of it. We special-case a few
4xx status codes (404, 412, 416) to not count as errors, but we leave
some pretty large holes. If you're graphing errors, you'll see spikes
when client is sending bogus requests (400) or failing to
re-authenticate (403). You'll also see spikes when your drives are
unmounted (507) and when there's bugs that need fixing (500).

This commit makes .errors.timing be just 5xx in the hope that its
graph will be more useful.

Change-Id: I92b41bcbb880c0688c37ab231c19ebe984b18215"
tipabu,2018-01-23 18:42:40,https://api.github.com/repos/openstack/swift/git/commits/fdf817b3188459bed60bf8668fac7ee147de2a9e,fdf817b3188459bed60bf8668fac7ee147de2a9e,"Include policy in ran-out-of-handoffs log message

Related-Change: I2f5bb12f3704880df1750229425f64f419ff9aef
Change-Id: I14b70e949a57d2c31b71d3efa6ee1200d0717db6"
gaofei-inspur,2018-01-23 06:57:18,https://api.github.com/repos/openstack/swift/git/commits/05b2a14fe04d097bfc2155a325fa240983311e97,05b2a14fe04d097bfc2155a325fa240983311e97,"Update broken link

Change-Id: I8d13696970593d47d0f07cf97aa1284eed5f7a15"
yanwei2019,2018-01-20 09:23:35,https://api.github.com/repos/openstack/swift/git/commits/ddb13aa5eab03b6993887eb02260b4bc0b256922,ddb13aa5eab03b6993887eb02260b4bc0b256922,"Remove redundant blank space in README.rst

Change-Id: If347476e3b9185921ff174d3f8170a1c4d0622e8"
tipabu,2018-01-19 22:20:59,https://api.github.com/repos/openstack/swift/git/commits/b2fbc742c6e61b5607f5a31cd9cac49e29c25284,b2fbc742c6e61b5607f5a31cd9cac49e29c25284,"Clean up comment about 404s leaking out during COPYs

Apparently that isn't a thing we have to worry about any more? Probably
got fixed when we pulled COPY out to middleware.

Add some tests where we definitely expect 403s across the board, too.

Change-Id: Idb5c0b25969b839cc71c487208447bdd6817c2cf"
clayg,2018-01-19 02:33:08,https://api.github.com/repos/openstack/swift/git/commits/cbcbc774681ad1a90f8fd260787c29943bedb675,cbcbc774681ad1a90f8fd260787c29943bedb675,"Internal Client should only retry server errors

Change-Id: I0a3f4a01d50b6a5d5528f527faa34573c7dde619"
yanwei2019,2018-01-19 08:54:26,https://api.github.com/repos/openstack/swift/git/commits/12f874534925b52f9d1c91580794eb9e5e9a4589,12f874534925b52f9d1c91580794eb9e5e9a4589,"Add Docstrings to validate_replicas_by_tier

New common functions should have Docstrings

Change-Id: Icbb3cdf38509fd6d034cbb2271786559780a7b68"
clayg,2018-01-17 01:03:38,https://api.github.com/repos/openstack/swift/git/commits/d2034cd7b6946829a7d95c4d2c71d4322f80e855,d2034cd7b6946829a7d95c4d2c71d4322f80e855,"Keep object-updater stats logging consistent

If we're going to encapsulate the stats tracking it seems reasonable if
we ever add any more metrics we can reduce the number of places we need
to update log messages.

Change-Id: I187cf6cfec1e0a9138b709fa298e1991aa809ec4"
tipabu,2018-01-17 22:07:26,https://api.github.com/repos/openstack/swift/git/commits/f4cff9fbba76932a4b67f1130d630098497bb4bc,f4cff9fbba76932a4b67f1130d630098497bb4bc,"object-server can 409 in response to x-if-delete-at

Previously, if the expirer had a stale work item (because the object
was overwritten or deleted, or some other process handled the delete),
then it would keep retrying for reclaim_age, but every time it'd get
back a 412.

Now, have the object-server be smart enough to say, ""I have more recent
information than you"" and let the expirer accept that as success.

Change-Id: I0a94482ed16cb30ce79074e053e6177fe97bcaa9"
tipabu,2018-01-16 01:07:35,https://api.github.com/repos/openstack/swift/git/commits/cd2c73fd955317a3f40758cef45ee48bef8fbc79,cd2c73fd955317a3f40758cef45ee48bef8fbc79,"internal_client: Don't retry when we expect the same reponse

This boils down to 404, 412, or 416; or 409 when we provided an
X-Timestamp.

This means, among other things, that the expirer won't issue 3 DELETEs
every cycle for every stale work item.

Related-Change: Icd63c80c73f864d2561e745c3154fbfda02bd0cc
Change-Id: Ie5f2d3824e040bbc76d511a54d1316c4c2503732"
chengebj5238,2018-01-18 09:03:11,https://api.github.com/repos/openstack/swift/git/commits/222df9185782f59ffdc96c3534afaa2fb1361235,222df9185782f59ffdc96c3534afaa2fb1361235,"Modify redirection URL and broken URL

Change-Id: I9a04cb2fbe61e1fbd8185ab2fac9abbcea4d55cc"
tipabu,2018-01-12 21:17:45,https://api.github.com/repos/openstack/swift/git/commits/d1656e334959e09d13eea98c2696e58c77e4ab91,d1656e334959e09d13eea98c2696e58c77e4ab91,"slo: Send ETag header in 206 responses

Why weren't we doing that before?? The etag should be the same as for
GET/HEAD, and by sending it, we can assure resuming clients that they're
downlading the same object even if they didn't include an If-Match
header.

Change-Id: I4ccbd1ae3a909ecb4606ef18211d1b868f5cad86
Related-Change: Ic11662eb5c7176fbf422a6fc87a569928d6f85a1"
clayg,2018-01-11 21:36:09,https://api.github.com/repos/openstack/swift/git/commits/88eea33ccd1875af811b59d15df55e2bffa27f77,88eea33ccd1875af811b59d15df55e2bffa27f77,"Recenter builder test expectation around random variance

... in order to make the test pass with more seeds and fail less
frequently in the gate.

Change-Id: I059e80af87fd33a3b6c0731fbad62e035215eca5"
smerritt,2018-01-12 15:17:18,https://api.github.com/repos/openstack/swift/git/commits/f64c00b00aa8df31a937448917421891904abdc8,f64c00b00aa8df31a937448917421891904abdc8,"Improve object-updater's stats logging

The object updater has five different stats, but its logging only told
you two of them (successes and failures), and it only told you after
finishing all the async_pendings for a device. If you have a cluster
that's been sick and has millions upon millions of async_pendings
laying around, then your object-updaters are frustratingly
silent. I've seen one cluster with around 8 million async_pendings per
disk where the object-updaters only emitted stats every 12 hours.

Yes, if you have StatsD logging set up properly, you can go look at
your graphs and get real-time feedback on what it's doing. If you
don't have that, all you get is a frustrating silence.

Now, the object updater tells you all of its stats (successes,
failures, quarantines due to bad pickles, unlinks, and errors), and it
tells you incremental progress every five minutes. The logging at the
end of a pass remains and has been expanded to also include all stats.

Also included is a small change to what counts as an error: unmounted
drives no longer do. The goal is that only abnormal things count as
errors, like permission problems, malformed filenames, and so
on. These are things that should never happen, but if they do, may
require operator intervention. Drives fail, so logging an error upon
encountering an unmounted drive is not useful.

Change-Id: Idbddd507f0b633d14dffb7a9834fce93a10359ab"
clayg,2018-01-17 21:56:13,https://api.github.com/repos/openstack/swift/git/commits/0c27fd2311d512629825eba39868ffc107d2971d,0c27fd2311d512629825eba39868ffc107d2971d,"Reset state every iteration to avoid stale reference

If you get a valid but unexpected response status you have to continue
the loop.  If you don't reset resp = None some kinds of exceptions might
get re-raised as with the wrong error.

Change-Id: I5751dfbc176155bea63103a64fd8d4db62323e60"
tipabu,2018-01-17 20:39:22,https://api.github.com/repos/openstack/swift/git/commits/5347c3069dcd28b9e39b9444731836ae29d481ad,5347c3069dcd28b9e39b9444731836ae29d481ad,"Add container-reconciler to source doc tree

Change-Id: I98e7e55839e5697d975af0a4756fd09933af1c5f"
smerritt,2018-01-17 06:19:09,https://api.github.com/repos/openstack/swift/git/commits/d924fa759967b7cdca0d91f21112725f6099a254,d924fa759967b7cdca0d91f21112725f6099a254,"Remove old post-as-copy leftovers from tests.

Since commit 1e79f828, we don't need to test with post_as_copy=True
any more since we haven't got post_as_copy at all.

Change-Id: I9c96ce0b812d877bbe11bdb50eb160d6ffa5933d"
alistairncoles,2018-01-17 12:04:45,https://api.github.com/repos/openstack/swift/git/commits/dfa0c4e604fb931d232395599bd0e7b0f11441ee,dfa0c4e604fb931d232395599bd0e7b0f11441ee,"Preserve expiring object behaviour with old proxy-server

The related change [1] causes expiring object records to no longer be
created if the X-Delete-At-Container header is not sent to the object
server, but old proxies prior to [2] (i.e. releases prior to 1.9.0)
did not send this header.

The goal of [1] can be alternatively achieved by making expiring
object record creation be conditional on the X-Delete-At-Host header.

[1] Related-Change: I20fc2f42f590fda995814a2fa7ba86019f9fddc1
[2] Related-Change: Id0873a3f2198ce285fe0b0c777738eff38bc2438

Change-Id: Ia0081693f01631d3f2a59612308683e939ced76a"
smerritt,2018-01-10 03:19:36,https://api.github.com/repos/openstack/swift/git/commits/745581ff2f5b2c6f6340eb60918d8ba842297f89,745581ff2f5b2c6f6340eb60918d8ba842297f89,"Don't make async_pendings during object expiration

After deleting an object, the object expirer deletes the corresponding
row from the expirer queue by making DELETE requests directly to the
container servers. The same thing happens after attempting to delete
an object, but failing because the object has already been deleted. If
the DELETE requests fail, then the expirer will encounter that row
again on its next pass and retry the DELETE at that time. Therefore,
it is not necessary for the object server to write an async_pending
for that queue row's deletion.

Currently, however, two of the object servers do write such
async_pendings. Given Rc container replicas, that's 2 * Rc updates
from async_pendings and another Rc from the object expirer
directly. Given a typical Rc of 3, that's 9 container updates per
expiring object.

This commit makes the object server write no async_pendings for DELETE
requests coming from the object expirer. This reduces the number of
container server requests to Rc (typically 3), all issued directly
from the object expirer.

Closes-Bug: 1076202
Change-Id: Icd63c80c73f864d2561e745c3154fbfda02bd0cc"
clayg,2018-01-17 00:30:13,https://api.github.com/repos/openstack/swift/git/commits/d707fc7b6d0ceb4556dddfc258c5de8c4baff05c,d707fc7b6d0ceb4556dddfc258c5de8c4baff05c,"DRY out tests until the stone bleeds

Can we go deeper!?

Change-Id: Ibd3b06542aa1bfcbcb71cc98e6bb21a6a67c12f4"
alistairncoles,2018-01-17 15:25:33,https://api.github.com/repos/openstack/swift/git/commits/ba8f1b1c3786df4e79fc3f9e4747d7cfb9072b6f,ba8f1b1c3786df4e79fc3f9e4747d7cfb9072b6f,"Fix intermittent unit test failure

test_check_delete_headers_removes_delete_after was
failing intermittently due to rounding of float time
values.

Change-Id: Ia126ad6988f387bbd2d1f5ddff0a56d457a1fc9b
Closes-Bug: #1743804"
bloodeagle40234,2017-12-27 05:37:29,https://api.github.com/repos/openstack/swift/git/commits/e747f94313f315fdf8d8fc01fb0c5aac60c33897,e747f94313f315fdf8d8fc01fb0c5aac60c33897,"Fix InternalClient to drain response body if the request fails

If we don't drain the body, the proxy logging in the internal client
pipeline will log 499 client disconnect instead of actual error response
code.

For error responses, we try to do the most helpful thing using swob's
closing and caching response body attribute.  For non-error responses
which are returned to the client, we endeavour to keep the app_iter
intact and unconsumed, trusting expecting the caller to do the right
thing is the only reasonable interface.  We must cleanly close any WSGI
app_iter which we do not return to the client regardless of status code
and allow the logging of the 499 if needed.

Closes-Bug: #1675650
Change-Id: I455b5c38074ad0e72aa5e0b05771e193208905eb"
tipabu,2017-08-23 07:25:09,https://api.github.com/repos/openstack/swift/git/commits/cf1a1e89bbca50e285e99d31209c6eac6c697083,cf1a1e89bbca50e285e99d31209c6eac6c697083,"expirer: unexpected responses don't warrant tracebacks

If you want more information, you need to go check out the *other* node.

Maybe this should be further refined to only log at debug for specific
statuses like 404 and 412?

Partial-Bug: 1688558
Related-Bug: 1455221
Change-Id: Ieefd8841154faba40dcf2a03abc5f056bdccd54f"
smerritt,2018-01-16 20:02:13,https://api.github.com/repos/openstack/swift/git/commits/56b84c9295f3860a1fa0033774a7498105a1597f,56b84c9295f3860a1fa0033774a7498105a1597f,"Minor cleanup in monitoring doc.

Change-Id: Ia21f8743bfd745f2579db8658624f888461c2cc2"
emonty,2018-01-16 17:32:12,https://api.github.com/repos/openstack/swift/git/commits/bc6fb8995123d08e672bdcf55bd35165509d60d9,bc6fb8995123d08e672bdcf55bd35165509d60d9,"Add a note about the cost of COPY for setting metadata

The pointer to using COPY to the same object as a mechanism to set only
a subset of the metadata, it does not mention that doing so results in
a full copy of the object in question on the backend.

Add a note so it's clear that there is a tradeoff involved.

Change-Id: I0c20a4909a6c3ff672f753d26cb9fb2f5f33d1f4"
alistairncoles,2018-01-15 15:16:08,https://api.github.com/repos/openstack/swift/git/commits/6e394bba0a783cf6bf06c6f60d4ccda150a87e67,6e394bba0a783cf6bf06c6f60d4ccda150a87e67,"Add request_tries option to object-expirer.conf-sample

...and update the object-expirer man page.

Change-Id: Idca1b8e3b7d5b40481af0d60477510e2557b88c0"
clayg,2018-01-09 19:16:15,https://api.github.com/repos/openstack/swift/git/commits/68906dac43ac4e0a2a7e9ee62d9893138369b27a,68906dac43ac4e0a2a7e9ee62d9893138369b27a,"Further extract a builder method to a util function

... to make testing more targeted and obvious

Related-Change-Id: I89439286b211f2c5ef19deffa77c202f48f07cf8
Change-Id: I93b99128a4fb35395e8e9caf11649e216f824fdf"
yanwei2019,2018-01-04 08:18:37,https://api.github.com/repos/openstack/swift/git/commits/a1ae142d5bcaf83ddde568ba4b957e23cc2b5e1c,a1ae142d5bcaf83ddde568ba4b957e23cc2b5e1c,"Merge repeat code for rebalance

There are three similar code segments in rebalance process as follows：

    tiers = ['cluster', 'regions', 'zones', 'servers', 'devices']
    for i, tier_name in enumerate(tiers):
        replicas_at_tier = sum(weighted_replicas_by_tier[t] for t in
                               weighted_replicas_by_tier if len(t) == i)
        if abs(self.replicas - replicas_at_tier) > 1e-10:
            raise exceptions.RingValidationError(
                '%s != %s at tier %s' % (
                    replicas_at_tier, self.replicas, tier_name))

I think we can encapsulate this code segment to a private function and
replace those code segments with a function call

Change-Id: I89439286b211f2c5ef19deffa77c202f48f07cf8"
chengali,2018-01-15 04:05:39,https://api.github.com/repos/openstack/swift/git/commits/5cbd5cf303ca085af2a61dbb5b98d1b98099bd7e,5cbd5cf303ca085af2a61dbb5b98d1b98099bd7e,"Return HTTPServerError instead of HTTPNotFound

Swift allows autocreate account. It should be treat as server error
instead of 404 when it fails to create account

Change-Id: I726271bc06e3c1b07a4af504c3fd7ddb789bd512
Closes-bug: 1718810"
Zlei1115,2018-01-15 03:20:07,https://api.github.com/repos/openstack/swift/git/commits/39efb51d0764cccdbf6a8d2029e96584b97fe636,39efb51d0764cccdbf6a8d2029e96584b97fe636,"Remove the deprecated ""giturl"" option

From openstackdocstheme 1.18.0, valid Git URLs can be retrieved by
openstackdocstheme[1], we do not need giturl option anymore.

[1] https://review.openstack.org/532163

Change-Id: I579cebae6486d250915f936f0c1c61008471c089"
alistairncoles,2018-01-12 17:26:26,https://api.github.com/repos/openstack/swift/git/commits/35ad4e874522dd749582233ead8a023e042493bb,35ad4e874522dd749582233ead8a023e042493bb,"Add tests for X-Backend-Clean-Expiring-Object-Queue true

Check that when X-Backend-Clean-Expiring-Object-Queue is true
the object server does indeed call async_update.

Change-Id: I0a87979147591f15349b868a12ac6dd15ac4e37f
Related-Change: I4d64f4d1d107c437fd3c23e19160157fdafbcd42"
clayg,2018-01-11 22:21:39,https://api.github.com/repos/openstack/swift/git/commits/7afc6a06eed1e9e3fdbea756074111b8a209d266,7afc6a06eed1e9e3fdbea756074111b8a209d266,"Remove un-needed hack in probetest

If you ran this probe test with ssync before the related change it would
demonstrate the related bug.  The hack isn't harmful, but it isn't
needed anymore.

Related-Change-Id: I7f90b732c3268cb852b64f17555c631d668044a8
Related-Bug: 1652323

Change-Id: I09e3984a0500a0f4eceec392e7970b84070a5b39"
clayg,2018-01-10 23:53:06,https://api.github.com/repos/openstack/swift/git/commits/55a1b63db501f18ba62e86a29db47465dce8eb26,55a1b63db501f18ba62e86a29db47465dce8eb26,"Let recon-cron work with conf.d

Change-Id: I862b74e0d9b20ba149581c1add6473dc1e5b2859"
smerritt,2018-01-09 21:27:48,https://api.github.com/repos/openstack/swift/git/commits/48da3c1ed783a2b69cc74b02e8fd45e9d36cf80a,48da3c1ed783a2b69cc74b02e8fd45e9d36cf80a,"Limit object-expirer queue updates on object DELETE, PUT, POST

Currently, on deletion of an expiring object, each object server
writes an async_pending to update the expirer queue and remove the row
for that object. Each async_pending is processed by the object updater
and results in all container replicas being updated. This is also true
for PUT and POST requests for existing expiring objects.

If you have Rc container replicas and Ro object replicas (or EC
pieces), then the number of expirer-queue requests made is Rc * Ro [1].

For a 3-replica cluster, that number is 9, which is not terrible. For
a cluster with 3 container replicas and a 15+4 EC scheme, that number
is 57, which is terrible.

This commit makes it so at most two object servers will write out the
async_pending files needed to update the queue, dropping the request
count to 2 * Rc [2]. The object server now looks for a header
""X-Backend-Clean-Expiring-Object-Queue: <true|false>"" and writes or
does not write expirer-queue async_pendings as appropriate. The proxy
sends that header to 2 object servers.

The queue update is not necessary for the proper functioning of the
object expirer; if the queue update fails, then the object expirer
will try to delete the object, receive 404s or 412s, and remove the
queue entry. Removal on object PUT/POST/DELETE is helpful but not
required.

[1] assuming no retries needed by the object updater

[2] or Rc, if a cluster has only one object replica

Change-Id: I4d64f4d1d107c437fd3c23e19160157fdafbcd42"
cschwede,2018-01-10 10:35:00,https://api.github.com/repos/openstack/swift/git/commits/9754a2ebe3f0ef66efd6fe0ff6c32fbb2e992617,9754a2ebe3f0ef66efd6fe0ff6c32fbb2e992617,"Change exit code when displaying empty rings

Displaying an empty ring should not be an error, thus
changing the exit code back to the former value of 0.

Closes-Bug: 1742417
Change-Id: I779c30cff1b4d24483f993221a8c6d944b7ae98d"
smerritt,2018-01-06 00:54:44,https://api.github.com/repos/openstack/swift/git/commits/a41c458c90b12c52688dd8b2b8a818b79b4e9693,a41c458c90b12c52688dd8b2b8a818b79b4e9693,"proxy: make the right number of container updates

When the proxy is putting X-Container headers into object PUT
requests, it should put out just enough to make the container update
durable in the worst case. It shouldn't do more, since that results in
extra work for the container servers; and it shouldn't do less, since
that results in objects not showing up in listings.

The current code gets the number right as long as you have 3 container
replicas and an odd number of object replicas, but it comes up with
some bogus numbers in other cases. The number it computes is
(object-quorum + 1).

This patch changes the number to (container-quorum +
max_put_failures).

Example: given an EC 12+5 policy and 3 container replicas, you can
lose up to 4 connections and still succeed. Since you need to have 2
container updates happen for durability, you need 6 connections to
have X-Container headers. That way, you can lose 4 and still have 2
left. The current code would put X-Container headers on 14 of the
connections, resulting in more than double the workload on the
container servers; this patch changes the number to 6.

Example 2: given a (crazy) EC 3+6 policy and 3 container replicas, you
can lose up to 5 connections, so you need X-Container headers on
7. The current code only sends 5, giving a worst-case result of a PUT
succeeds but never reaches the containers. This patch changes the
number to 7.

Other examples:
                          |  current  |  this change  |
                        --+-----------+---------------+
EC 10+4, 3x container     |    12     |      5        |
EC 10+4, 5x container     |    12     |      6        |
EC 15+4, 3x container     |    17     |      5        |
EC 15+4, 5x container     |    17     |      6        |
EC 4+8, 3x container      |    6      |      9        |
7x object, 3x container   |    5      |      5        |
6x object, 3x container   |    4      |      5        |

Change-Id: I34efd48655b890340912810ab111bb63445e5c8b"
tipabu,2018-01-09 23:53:56,https://api.github.com/repos/openstack/swift/git/commits/b451ceed4bc9cdbfa591e36cde6c43579839c5ec,b451ceed4bc9cdbfa591e36cde6c43579839c5ec,"Add pipeline modification test for previously-recommended pipelines

This includes every pipeline from etc/proxy-server.conf-sample since we
switched from swauth to tempauth in 1.4.1. As much as anything, I view
this as a canary for auto-insertion changes, so we can (somewhat easily)
see where new middlewares will be placed when upgrading from old swifts.

Change-Id: I117937ab6ce28f3bc219e809f07b563c45fc486f
Related-Change: I88678fddc7a25b0f065b33eb26047321d0db4d38"
alistairncoles,2018-01-05 17:41:21,https://api.github.com/repos/openstack/swift/git/commits/e7ffda5d0b75bd85c3b886c3aad0c938c7d476d6,e7ffda5d0b75bd85c3b886c3aad0c938c7d476d6,"Use _update_x_timestamp method in object controller DELETE method

The DELETE method repeats inline the same behaviour as provided by
_update_x_timestamp, so just call the method.

Also add unit tests for the behaviour of _update_x_timestamp.

Change-Id: I8b6cfdbfb54b6d43ac507f23d84309ab543374aa"
matthewoliver,2018-01-03 04:48:44,https://api.github.com/repos/openstack/swift/git/commits/bf13d64cd07c0957a88687a24a8ca861189fb5ac,bf13d64cd07c0957a88687a24a8ca861189fb5ac,"Show devices marked as deleted on empty rings

This is a follow up patch to 530258 which will show
extra infromation on empty rings.

This patch goes one step further. On a completely empty ring:

  $ swift-ring-builder my.builder create  8 3 1
  $ swift-ring-builder my.builder
  my.builder, build version 0, id 33b4e117056340feae7d40430180c6bb
  256 partitions, 3.000000 replicas, 0 regions, 0 zones, 0 devices, 0.00 balance, 0.00 dispersion
  The minimum number of hours before a partition can be reassigned is 1 (0:00:00 remaining)
  The overload factor is 0.00% (0.000000)
  Ring file my.ring.gz not found, probably it hasn't been written yet
  Devices:   id region zone ip address:port replication ip:port  name weight partitions balance flags meta
  There are no devices in this ring, or all devices have been deleted

It will still start the device list and then say no devices.. Why. let's
see what happens now on an empty ring with devices still marked as
deleted:

  $ swift-ring-builder my.builder add r1z1-127.0.0.1:6010/sdb1 1
  Device d0r1z1-127.0.0.1:6010R127.0.0.1:6010/sdb1_"""" with 1.0 weight got id 0
  $ swift-ring-builder my.builder add r1z1-127.0.0.1:6010/sdb2 1
  Device d1r1z1-127.0.0.1:6010R127.0.0.1:6010/sdb2_"""" with 1.0 weight got id 1
  $ swift-ring-builder my.builder remove r1z1-127.0.0.1
  Matched more than one device:
      d0r1z1-127.0.0.1:6010R127.0.0.1:6010/sdb1_""""
      d1r1z1-127.0.0.1:6010R127.0.0.1:6010/sdb2_""""
  Are you sure you want to remove these 2 devices? (y/N) y
  d0r1z1-127.0.0.1:6010R127.0.0.1:6010/sdb1_"""" marked for removal and will be removed next rebalance.
  d1r1z1-127.0.0.1:6010R127.0.0.1:6010/sdb2_"""" marked for removal and will be removed next rebalance.

  $ swift-ring-builder my.builder
  my.builder, build version 4, id 33b4e117056340feae7d40430180c6bb
  256 partitions, 3.000000 replicas, 1 regions, 1 zones, 2 devices, 0.00 balance, 0.00 dispersion
  The minimum number of hours before a partition can be reassigned is 1 (0:00:00 remaining)
  The overload factor is 0.00% (0.000000)
  Ring file my.ring.gz not found, probably it hasn't been written yet
  Devices:   id region zone ip address:port replication ip:port  name weight partitions balance flags meta
              0      1    1  127.0.0.1:6010      127.0.0.1:6010  sdb1 0.00          0    0.00   DEL
              1      1    1  127.0.0.1:6010      127.0.0.1:6010  sdb2 0.00          0    0.00   DEL
  There are no devices in this ring, or all devices have been deleted

Now even when all devices are removed we can still see them as they are still there, only marked as deleted.

Change-Id: Ib39f734deb67ad50bcdad5333cba716161a47e95"
tipabu,2018-01-08 20:02:50,https://api.github.com/repos/openstack/swift/git/commits/e343452394780b1f555777bc7083912ac68633d3,e343452394780b1f555777bc7083912ac68633d3,"Support existing builders with None _last_part_moves

These were likely written before the first related change, or created
from an existing ring file.

Also, tolerate missing dispersion when rebalancing -- that may not exist
in the builder file.

Change-Id: I26e3b4429c747c23206e4671f7c86543bb182a15
Related-Change: Ib165cf974c865d47c2d9e8f7b3641971d2e9f404
Related-Change: Ie239b958fc7e0547ffda2bebf61546bd4ef3d829
Related-Change: I551fcaf274876861feb12848749590f220842d68"
alistairncoles,2018-01-08 10:14:06,https://api.github.com/repos/openstack/swift/git/commits/94565d9137275f4c6c775835cf2c0b81693137be,94565d9137275f4c6c775835cf2c0b81693137be,"Disallow x-delete-at equal to x-timestamp

Previously an x-delete-at value equal to the x-timestamp value was
allowed.  This could only occur when x-timestamp happened to take an
integer value and would result in an object that was immediately
unreadable.

Similarly an x-delete-after value of zero may previously have been
accepted if x-timestamp happened to be an integer value.

With this change an x-delete-at value equal to x-timestamp or an
x-delete-after value of zero always results in a 400 BadRequest.

Also cleans up check_delete_headers docstring.

Related-Change: Ia8d00fcef8893e3b3dd5720da2c8a5ae1e6e4cb8
Related-Change: Ib2483444d3999e13ba83ca2edd3a8ef8e5c48548
Change-Id: I27fdd800d8e149302ff4d6531101e9726a14d471"
alistairncoles,2018-01-08 14:36:53,https://api.github.com/repos/openstack/swift/git/commits/79ac3a3c311b393d7b64ce4c41d68b52801b52cb,79ac3a3c311b393d7b64ce4c41d68b52801b52cb,"Fix intermittent check_delete_headers failure

Use a utils.Timestamp object to set a more realistic x-timestamp
header to avoid intermittent failure when str(time.time()) results
in a rounded up value.

Closes-Bug: 1741912
Change-Id: I0c54d07e30ecb391f9429e7bcfb782f965ece1ea"
alistairncoles,2018-01-05 14:44:52,https://api.github.com/repos/openstack/swift/git/commits/6151554a89216934c0be242b93b28d87adc421e0,6151554a89216934c0be242b93b28d87adc421e0,"Correct 400 response message when x-delete-after is zero

Before an x-delete-after header with value '0' would almost
certainly result in a 400 response, but the response body would
report a problem with x-delete-at. Now the response correctly
blames the x-delete-after header.

Related-Change: I9a1b6826c4c553f0442cfe2bb78cdf49508fa4a5
Change-Id: Ia8d00fcef8893e3b3dd5720da2c8a5ae1e6e4cb8"
hancar,2018-01-06 20:48:10,https://api.github.com/repos/openstack/swift/git/commits/b22d3c1115609a62b3fce5177be213ed3fa587c5,b22d3c1115609a62b3fce5177be213ed3fa587c5,"fix of type error

There was incorrect path starting /home/swift, but /home/<your-user-name> is correct for common users.

Change-Id: Ia81b2119c87dd88417428e55c82dac1ab7c028b3
Closes-Bug: 1741378"
alistairncoles,2018-01-05 14:43:12,https://api.github.com/repos/openstack/swift/git/commits/582460ecf9d503c10fd73c055301634b0b009dbc,582460ecf9d503c10fd73c055301634b0b009dbc,"Document that x-delete-after takes precedence over x-delete-at

Change-Id: Ib2483444d3999e13ba83ca2edd3a8ef8e5c48548"
smerritt,2018-01-05 04:28:28,https://api.github.com/repos/openstack/swift/git/commits/31c294de797be30f499750ccbed3ec18a717f9b1,31c294de797be30f499750ccbed3ec18a717f9b1,"Fix time skew when using X-Delete-After

When a client sent ""X-Delete-After: <n>"", the proxy and all object
servers would each compute X-Delete-At as ""int(time.time() +
n)"". However, since they don't all compute it at exactly the same
time, the objects stored on disk can end up with differing values for
X-Delete-At, and in that case, the object-expirer queue has multiple
entries for the same object (one for each distinct X-Delete-At value).

This commit makes two changes, either one of which is sufficient to
fix the bug.

First, after computing X-Delete-At from X-Delete-After, X-Delete-After
is removed from the request's headers. Thus, the proxy computes
X-Delete-At, and the object servers don't, so there's only a single
value.

Second, computation of X-Delete-At now uses the request's X-Timestamp
instead of time.time(). In the proxy, these values are essentially the
same; the proxy is responsible for setting X-Timestamp. In the object
server, this ensures that all computed X-Delete-At values are
identical, even if the object servers' clocks are not, or if one
object server takes an extra second to respond to a PUT request.

Co-Authored-By: Alistair Coles <alistairncoles@gmail.com>
Change-Id: I9a1b6826c4c553f0442cfe2bb78cdf49508fa4a5
Closes-Bug: 1741371"
smerritt,2018-01-05 04:40:11,https://api.github.com/repos/openstack/swift/git/commits/a13e0ee76b1b5e56096878930fd24c638148155f,a13e0ee76b1b5e56096878930fd24c638148155f,"Ignore directory .stestr

After running the functional tests, this directory shows up. I don't
know what's in it, but I'm fairly certain I don't want to commit it.

Change-Id: If9179330c337daf2ae0a01e6c8aa8d349969e737"
clayg,2017-12-29 16:53:21,https://api.github.com/repos/openstack/swift/git/commits/49de7db532ffaba9fbd3c7e912e007b9d8a36d7c,49de7db532ffaba9fbd3c7e912e007b9d8a36d7c,"add swift-ring-builder option to recalculate dispersion

Since dispersion info is cached, this can easily happen if we make
changes to how dispersion info is calculated or stored (e.g. we extend
the dispersion calculation to consider dispersion of all part-replicas
in the related change)

Related-Change-Id: Ifefff0260deac0c3e8b369a1e158686c89936686

Change-Id: I714deb9e349cd114a21ec591216a9496aaf9e0d1"
clayg,2017-12-27 20:10:57,https://api.github.com/repos/openstack/swift/git/commits/9189f51d7601254181b2458f8c3e64c74d6dfad0,9189f51d7601254181b2458f8c3e64c74d6dfad0,"Display more info on empty rings

Related-Bug: #1737068
Related-Change-Id: Ibadaf64748728a47a8f3f861ec1af601dbfeb9e0
Change-Id: I683677f33764fa56dadfb7f6208f7f6ee25c8557"
yanwei2019,2017-12-22 03:40:40,https://api.github.com/repos/openstack/swift/git/commits/56126b28392986636e99f47c3003ed6058b62fd9,56126b28392986636e99f47c3003ed6058b62fd9,"Handle EmptyRingError in swift-ring-builder's default command

When the default display command for swift-ring-error encounters a
EmptyRingError trying to calculate balance it should not raise exception
and display the traceback in a command line environment.

Instead handle the exceptional condition and provide the user with
useful feedback.

Closes-Bug: #1737068
Change-Id: Ibadaf64748728a47a8f3f861ec1af601dbfeb9e0"
smerritt,2017-12-28 22:56:08,https://api.github.com/repos/openstack/swift/git/commits/f709eed41b9579cf5a8ca9180143301a2b452d47,f709eed41b9579cf5a8ca9180143301a2b452d47,"Fix socket leak on 416 EC GET responses.

Sometimes, when handling an EC GET request with a Range header, the
object servers reply 206 to the proxy, but the proxy (correctly)
replies 416 to the client[1]. In that case, the connections to the object
servers were not being closed. This was due to improper error handling
in ECAppIter.

Since ECAppIter is intended to be a WSGI iterable, it expects to have
its close() method called when the caller is done with it. In this
particular case, the caller (ECAppIter.kickoff()) was not calling
close() when an exception was raised. Now it is.

[1] consider a 4+2 EC policy with segment size 1024, an 20 byte
object, and a request with ""Range: bytes=21-50"". The proxy needs whole
fragments to decode, so it asks the object server for ""Range:
bytes=0-255"" [2], the object server says 206, and then the proxy
realizes that the client's request is unsatisfiable and tells the
client 416.

[2] segment size 1024 and 4 data fragments means the fragments have
size 1024 / 4 = 256, hence ""bytes=0-255"" asks for the first whole
fragment

Change-Id: Ide2edf8c449c97d45f48c2dbbbff7aebefa4b158
Closes-Bug: 1738804"
clayg,2017-12-15 04:03:24,https://api.github.com/repos/openstack/swift/git/commits/7013e70ca67891e94664e9eca70925b61ee8f689,7013e70ca67891e94664e9eca70925b61ee8f689,"Represent dispersion worse than one replicanth

With a sufficiently undispersed ring it's possible to move an entire
replicas worth of parts and yet the value of dispersion may not get any
better (even though in reality dispersion has dramatically improved).
The problem is dispersion will currently only represent up to one whole
replica worth of parts being undispersed.

However with EC rings it's possible for more than one whole replicas
worth of partitions to be undispersed, in these cases the builder will
require multiple rebalance operations to fully disperse replicas - but
the dispersion value should improve with every rebalance.

N.B. with this change it's possible for rings with a bad dispersion
value to measure as having a significantly smaller dispersion value
after a rebalance (even though they may not have had their dispersion
change) because the total amount of bad dispersion we can measure has
been increased but we're normalizing within a similar range.

Closes-Bug: #1697543

Change-Id: Ifefff0260deac0c3e8b369a1e158686c89936686"
tipabu,2017-08-22 22:40:58,https://api.github.com/repos/openstack/swift/git/commits/61fe6aae81d00597c777a64ac337a8dfb990f0c2,61fe6aae81d00597c777a64ac337a8dfb990f0c2,"Better mock out OSErrors in test_replicator before raising them

Also, provide a return value for resp.read() so we hit a
pickle error instead of a type error.

Change-Id: I56141eee63ad1ceb2edf807432fa2516fabb15a6"
KazuhiroMiyahara,2017-12-25 09:13:17,https://api.github.com/repos/openstack/swift/git/commits/0bdec4661b5609ca1bf813a7ccd514e5d444b07f,0bdec4661b5609ca1bf813a7ccd514e5d444b07f,"Skip symlink + vw functional tests if symlink is not enabled

Functional tests for symlink and versioned writes run and result in
falure even if symlink is not enabled.

This patch fixes the functional tests to run only if both of
symlink and versioned writes are enabled.

Change-Id: I5ffd0b6436e56a805784baf5ceb722effdf74884"
KazuhiroMiyahara,2017-12-25 07:09:49,https://api.github.com/repos/openstack/swift/git/commits/1449532fb82b4fe3a5484b547d425dcda82df259,1449532fb82b4fe3a5484b547d425dcda82df259,"Allow InternalClient to container/object listing with prefix

This patch adds 'prefix' argument to iter_containers/iter_objects
method of InternalClient.
This change will be used in general task queue feature [1].

[1]: https://review.openstack.org/#/c/517389/

Change-Id: I8c2067c07fe35681fdc9403da771f451c21136d3"
KazuhiroMiyahara,2017-12-22 02:18:09,https://api.github.com/repos/openstack/swift/git/commits/17e6950aa08101b5f3bec0f2f9c32cfd5f51fa36,17e6950aa08101b5f3bec0f2f9c32cfd5f51fa36,"Fix manpage docs' daemon names

In current manpage docs, some of daemon names for concurrency
explanation is wrong.

This patch fixes the daemon names.

Change-Id: I2a505c9590ee3a3a7e37e8d949a10db36206faec"
smerritt,2017-12-21 18:43:39,https://api.github.com/repos/openstack/swift/git/commits/af2c2a6eb54d848eefc2d0a1b619e0b86eed2eb5,af2c2a6eb54d848eefc2d0a1b619e0b86eed2eb5,"Fix sometimes-flaky container name functional test.

You've got two test classes: TestContainer and TestContainerUTF8. They
each try to create the same set of containers with names of varying
lengths to make sure the container-name length limit is being honored.

Also, each test class tries to clean up pre-existing data in its
setUpClass method. If TestContainerUTF8 fails to delete a contaienr
that TestContainer made, then its testContainerNameLimit method will
fail because the container PUT response has status 202 instead of 201,
which is because the container still existed from the prior test.

I've made the test consider both 201 and 202 as success. For purposes
of testing the maximum container name length, any 2xx is fine.

Change-Id: I7b343a8ed0d12537659c051ddf29226cefa78a8f"
clayg,2017-12-13 05:39:54,https://api.github.com/repos/openstack/swift/git/commits/609c757e698ff7893e1b1a0e32d088ad9d05ad95,609c757e698ff7893e1b1a0e32d088ad9d05ad95,"functest for symlink + versioned writes

Co-Author: Alistair Coles <alistairncoles@gmail.com>

Related-Change-Id: I838ed71bacb3e33916db8dd42c7880d5bb9f8e18
Change-Id: I0ccff1eafcfb3fdbdda9faf55a44c45b834e723a"
ajaeger,2017-12-20 06:14:03,https://api.github.com/repos/openstack/swift/git/commits/bdd4eb6936b0e25aff5357bde876309ee5b032ec,bdd4eb6936b0e25aff5357bde876309ee5b032ec,"Install liberasurecode-devel for CentOS 7

Since I747c2b8754effbc6ec82af3bf7543fd9599a6c14 we do not install
the RDO package repository anymore and thus liberasurecode-devel
cannot be installed.

For CentOS 7, remove liberasurecode-devel from bindep.txt and install it
from test-setup.sh instead after enabling the RDO package repositories.

Update python dependencies: CentOS 7 does not have python3. Fix the
SUSE tags.

Change-Id: I72aa6b5455dfb025f54e83334983ac280f04afb2"
ajaeger,2017-12-17 18:46:52,https://api.github.com/repos/openstack/swift/git/commits/dc1c55c9a07c03fe85f4bcc52419a42d75ae30fa,dc1c55c9a07c03fe85f4bcc52419a42d75ae30fa,"Native Zuul v3 tox jobs

Convert the legacy tox jobs to Zuul v3 native and use the
tools/test_setup.sh script to setup a XFS file like it's done in the
legacy job.

Needed-By: Id2b5cff998ac3a825a8f515c7bae3b433f30d272
Change-Id: I34ed9e1c4b822f700e42fb07937df7be72cbaf4e"
matthewoliver,2017-12-19 05:47:20,https://api.github.com/repos/openstack/swift/git/commits/a7da2232629bfd4d5c04f5169e51b1f57b6c9362,a7da2232629bfd4d5c04f5169e51b1f57b6c9362,"Fix intermittent problem in part_swapping test

There is an intermittent failure in the test_part_swapping_problem
test found in test/unit/common/ring/test_builder.py.

The test does a rebalance, then changes the ring to test a specific
problem, does some housekeeping and then rebalances again. The problem
is the ringbuilder keeps track of where in the ring it started the
last ring rebalance, saved in `_last_part_gather_start`.

On a rebalance, or more specifically in `_gather_parts_for_balance` we
then we will start somewhere on the other side of the ring with:

  quarter_turn = (self.parts // 4)
  random_half = random.randint(0, self.parts / 2)
  start = (self._last_part_gather_start + quarter_turn +
                 random_half) % self.parts

Because we don't reset `_last_part_gather_start` when we change the ring
in the test, there is edge case where if we are unlucky during both
rebalances whereby both calls to randint returns a relatively large
number pushes the start of the second rebalance to the wrong side
of the ring. Actually it's more problematic, and only 1 large random
and a one in the middle will cause it, maybe pictures help:

  rabalance 1 (r1): quarter_turn = 4, random_half = 5
  rebalance 2 (r2): quarter_turn = 4, random_half = 3

                                     r1                   r2
                                      |                    |
                                      v                    v
  array('H', [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]),
  array('H', [1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 2, 2, 2, 3, 3, 3]),
  array('H', [2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4])]

Now when gathering for rebalance 2 it'll pick:

  array('H', [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, X]),
  array('H', [X, X, 1, 1, 2, 2, 2, 3, 3, 3, 2, 2, 2, 3, 3, 3]),
  array('H', [2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4])]

Which can cause the 3 attempts to gather and rebalance to be used up.
This causes the intermittent failure seen in the bug.

This patch solves this by resetting `_gather_parts_for_balance` to 0
while we tidy up the ring change. Meaning we'll always start on the
correct side of the ring.

Change-Id: I0d3a69620d4734091dfa516efd0d6b2ed87e196b
Closes-Bug: #1724356"
tipabu,2017-12-19 01:14:36,https://api.github.com/repos/openstack/swift/git/commits/cd11289ba18a916b05dba30956631d9631fb130f,cd11289ba18a916b05dba30956631d9631fb130f,"Add a small sleep when trying to predict X-Timestamp

The existing test works fine if you're running the tests on an
all-in-one, but is pretty brittle if you aren't running them on the
one and only proxy-server they're hitting.

Add 0.1s sleep to allow *some* clock slippage between client and server.

Change-Id: Iacd08e9f703d08d0092b5e8eb53fe287ba1d1596"
tipabu,2017-12-18 19:08:58,https://api.github.com/repos/openstack/swift/git/commits/fba3fb70894246124fcb5233f15f1d9cae807756,fba3fb70894246124fcb5233f15f1d9cae807756,"Stop logging tracebacks when the replicator runs out of handoffs

Otherwise, swift-in-the-small can fill up logs with

    object-replicator: Error syncing partition:
    Traceback (most recent call last):
      File "".../swift/obj/replicator.py"", line 419, in update
        node = next(nodes)
    StopIteration

...which simultaneously sounds worse than it is and isn't helpful in
diagnosing/debugging the issue.

Change-Id: I2f5bb12f3704880df1750229425f64f419ff9aef"
notmyname,2017-12-18 17:33:40,https://api.github.com/repos/openstack/swift/git/commits/2cf5e7ceffba007d1ff2a429385c1f3994a59d65,2cf5e7ceffba007d1ff2a429385c1f3994a59d65,"fix SkipTest imports in functests so they can be run directly by nose

Change-Id: I7ecc48f69ca677d5ecb0986ac4042688442355bb"
smerritt,2017-06-29 17:23:38,https://api.github.com/repos/openstack/swift/git/commits/aa82d2cba82209f1bf3944c6d2a67965af5a1540,aa82d2cba82209f1bf3944c6d2a67965af5a1540,"Save ring builder if dispersion changes

There are cases where a rebalance improves dispersion, but doesn't
improve balance. This is because the balance of a ring builder is
taken to be the balance of its least-balanced device, so if there's a
device that has no partitions, wants some, but can't get them, then
we'll never save the ring builder even if every other device in the
ring got better.

We can detect this situation by looking at the dispersion number; if it
changes, then the rebalance needs to be saved in order to continue to
make progress.

Partial-Bug: #1697543

Change-Id: Ie239b958fc7e0547ffda2bebf61546bd4ef3d829"
alistairncoles,2017-12-15 12:36:47,https://api.github.com/repos/openstack/swift/git/commits/1984353f0d6db7512e4ea147ecad9e14dfb318d4,1984353f0d6db7512e4ea147ecad9e14dfb318d4,"Move symlink versioning functional test

The functional test for versioning symlinks is better located in
test_versioned_writes where it can be added to
TestObjectVersioning. This saves duplicated versioned_writes specific
setup code in test_symlink, and has the benefit of the test being
repeated for each of the versioned writes test subclasses.  With a
small refactor this includes the test now running with
x-history-location mode as well as x-versions-location mode.

Related-Change: I838ed71bacb3e33916db8dd42c7880d5bb9f8e18
Change-Id: If215446c558b61c1a8aea37ce6be8fcb5a9ea2f4"
bloodeagle40234,2017-12-13 06:04:40,https://api.github.com/repos/openstack/swift/git/commits/c579e99126b61466fb3b1628170cbca37ccacce3,c579e99126b61466fb3b1628170cbca37ccacce3,"Add more assertions for Symlink + Copy unit tests

Related-Change-Id: I838ed71bacb3e33916db8dd42c7880d5bb9f8e18
Change-Id: Ib4c8f0c83537b74bbdec8c2dd6acc99c039faa67"
clayg,2017-12-15 00:17:29,https://api.github.com/repos/openstack/swift/git/commits/097e975938befb939fa6821f50c061e2c7f42cef,097e975938befb939fa6821f50c061e2c7f42cef,"Remove symlink from xml listing response

We've had some problems with brittle XML clients in the past - it might
be safer to ask that clients that need symlink keys in listings from
containers request in JSON.

Change-Id: I4ac7457f3ccb10f9e471ec6dc6f0869d71712878"
smerritt,2017-12-14 22:57:48,https://api.github.com/repos/openstack/swift/git/commits/2f2899eb1df57c3ef0498c4a0d3295863a1bf798,2f2899eb1df57c3ef0498c4a0d3295863a1bf798,"Show missing branches in coverage report.

This used to be the default in coverage 3.x, but 4.0+ requires you to
explicitly configure it.

Change-Id: I3b06154c7862c300b5a2b3afb14cced1e8411468"
clayg,2017-12-14 20:56:49,https://api.github.com/repos/openstack/swift/git/commits/7647defb0f201cbf85baef6404067bb0eb27321f,7647defb0f201cbf85baef6404067bb0eb27321f,"rename utils function less like stdlib

Related-Change-Id: I3436bf3724884fe252c6cb603243c1195f67b701
Change-Id: I74199c62b46e4db93a76760ebf91d84e3e1e3cfc"
alistairncoles,2017-12-12 17:32:55,https://api.github.com/repos/openstack/swift/git/commits/b342a8147c38ebcf02c3ba21fd09ded4ca49f69b,b342a8147c38ebcf02c3ba21fd09ded4ca49f69b,"Assert X-Newest and X-Backend headers are propagated to symlink target

Adds some assertions to verify that X-Newest and X-Backend-* headers are
copied from an original object GET requets to the symlink target
request.

Change-Id: Idce92edd002dec34f5dbc5d3c28a4cbbd2fbdc60
Related-Change: I838ed71bacb3e33916db8dd42c7880d5bb9f8e18"
clayg,2017-12-14 20:15:19,https://api.github.com/repos/openstack/swift/git/commits/1d5cf3e73067751c8c8fd4f7f58c205db9b877a1,1d5cf3e73067751c8c8fd4f7f58c205db9b877a1,"add symlink to probetest for reconciler

Change-Id: Ib2c5616f2965ab92b1c76d573e869206c91464c6"
clayg,2017-12-14 20:09:04,https://api.github.com/repos/openstack/swift/git/commits/90134ee968f6f6442eedb5548ee292fc03c77c2a,90134ee968f6f6442eedb5548ee292fc03c77c2a,"add symlink to container sync default and sample config

Change-Id: I83e51daa994b9527eccbb8a88952c630aacd39c3"
alistairncoles,2017-12-12 17:26:03,https://api.github.com/repos/openstack/swift/git/commits/8df263184be136f9ab203a2971b4f47a52f8b431,8df263184be136f9ab203a2971b4f47a52f8b431,"Symlink doc clean up

Cleanup for docs and docstrings.

Related-Change: I838ed71bacb3e33916db8dd42c7880d5bb9f8e18
Change-Id: Ie8de0565dfaca5bd8a5693a75e6ee14ded5b7161"
MahatiC,2017-12-14 08:31:13,https://api.github.com/repos/openstack/swift/git/commits/1b6842deafe485bc87c48e1797997d599e7411c9,1b6842deafe485bc87c48e1797997d599e7411c9,"add name to core emeritus

Change-Id: Icab1c646ec8c9062580197482b1fd924bbc6c4bd"
robefran,2015-10-07 19:14:58,https://api.github.com/repos/openstack/swift/git/commits/99b89aea1051208e3d71afa35fcd62035e702628,99b89aea1051208e3d71afa35fcd62035e702628,"Symlink implementation.

Add a symbolic link (""symlink"") object support to Swift. This
object will reference another object. GET and HEAD
requests for a symlink object will operate on the referenced object.
DELETE and PUT requests for a symlink object will operate on the
symlink object, not the referenced object, and will delete or
overwrite it, respectively.
POST requests are *not* forwarded to the referenced object and should
be sent directly. POST requests sent to a symlink object will
result in a 307 Error.

Historical information on symlink design can be found here:
https://github.com/openstack/swift-specs/blob/master/specs/in_progress/symlinks.rst.
https://etherpad.openstack.org/p/swift_symlinks

Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: Janie Richling <jrichli@us.ibm.com>
Co-Authored-By: Kazuhiro MIYAHARA <miyahara.kazuhiro@lab.ntt.co.jp>
Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>

Change-Id: I838ed71bacb3e33916db8dd42c7880d5bb9f8e18
Signed-off-by: Thiago da Silva <thiago@redhat.com>"
onovy,2017-12-09 18:10:35,https://api.github.com/repos/openstack/swift/git/commits/611b28f73a1024edc7ceeb319b226cd73f12a98a,611b28f73a1024edc7ceeb319b226cd73f12a98a,"Add manpage for swift-object-relinker

Change-Id: I56dd9c646faba91e9f124f343ea0e08f8c3c4249"
smerritt,2017-12-08 22:08:25,https://api.github.com/repos/openstack/swift/git/commits/8182fa75a167d034e29c04680502ea9877592c9a,8182fa75a167d034e29c04680502ea9877592c9a,"Fix small error in a doc string

Change-Id: I1c743fdea637ce047d09a49db0a43b2eb37305fa"
smerritt,2017-12-07 20:10:02,https://api.github.com/repos/openstack/swift/git/commits/dd9bc828260916711c034247c306a67e0b53e873,dd9bc828260916711c034247c306a67e0b53e873,"Fix suffix-byte-range responses for zero-byte replicated objects.

Previously, given a GET request like ""Range: bytes=-12345"" for a
zero-byte object, Swift would return a 206 response with the header
""Content-Range: bytes 0--1/0"". This is clearly incorrect. Now Swift
returns a 200 with the whole (zero-byte) object.

Note: this does not fix the bug for EC objects, only for replicated
ones. The fix for EC objects will follow in a separate commit.

Change-Id: If1edb665b0ae000da78c4efff6faddd94d75da6b
Partial-Bug: 1736840"
alistairncoles,2017-12-05 18:36:38,https://api.github.com/repos/openstack/swift/git/commits/dd113ab25a3089fa19c8e824c2d89db0ca3db0fa,dd113ab25a3089fa19c8e824c2d89db0ca3db0fa,"Refactor proxy-server conf loading to a helper function

There were two middlewares using a common pattern to load
the proxy-server app config section. The existing pattern
fails to recognise option overrides that are declared using
paste-deploy's 'set' notation, as illustrated by the change
to test_dlo.py in this patch.

This patch replaces the existing code with a helper function
that loads the proxy-server config using the paste-deploy loader.
The resulting config dict is therefore exactly the same as that
used to initialise the proxy-server app.

Change-Id: Ib58ce03e2010f41e7eb11f1a6dc78b0b7f55d466"
alistairncoles,2017-12-06 18:29:52,https://api.github.com/repos/openstack/swift/git/commits/fc12d63c76ffd51a5d524caa92b78d29bc4e6a7d,fc12d63c76ffd51a5d524caa92b78d29bc4e6a7d,"Remove repeated text from deployment guide

Fix what appears to be a cut and paste error.

Change-Id: Iccf97ebbf75c8f97095a4493ea6a8beb074df099"
alistairncoles,2017-12-05 21:45:18,https://api.github.com/repos/openstack/swift/git/commits/bc2e03d1a6cb1411a2eee8218cce53f951100eb1,bc2e03d1a6cb1411a2eee8218cce53f951100eb1,"Add --swift-versions option to swift-recon man page

Related-Change: I3c2e569f0c44168333251bb58bab4b5582e15a45

Change-Id: I9776c0919164e48ac445eacf7d897a23ef8e4572"
peterlisak,2016-12-20 15:27:36,https://api.github.com/repos/openstack/swift/git/commits/206f674014fb94a63ebdae91e3eca38956055b07,206f674014fb94a63ebdae91e3eca38956055b07,"Added swift version to recon cli

Show swift version and check if the same on hosts by using
`swift-recon --swift-version`.

Ex:
$ swift-recon --swift-versions

Versions matched (2.7.1.dev144), 0 error[s] while checking hosts.

or if differs

Versions not matched (2.7.1.dev144, 2.7.1.dev145),
0 error[s] while checking hosts.

Change-Id: I3c2e569f0c44168333251bb58bab4b5582e15a45"
tipabu,2017-11-30 01:24:40,https://api.github.com/repos/openstack/swift/git/commits/b808c806b4e7000aed45a0026dd7407cd1616891,b808c806b4e7000aed45a0026dd7407cd1616891,"Remove testTooLongName tests

These are better-covered by TestContainer.testContainerNameLimit and
TestFile.testNameLimit in the same file.

Change-Id: Ice48bc6492648613bc743b474d40892d7e4dcc64"
tipabu,2017-11-23 00:51:06,https://api.github.com/repos/openstack/swift/git/commits/924f0d28e9670163dc47206cc1472ef228fd0082,924f0d28e9670163dc47206cc1472ef228fd0082,"dlo: Move conn2 business to the one test that uses it

...and skip it if we don't have the required user

Change-Id: I8700a587d5b8acff1f0255529b6ddaeadaaa6548"
senk,2017-11-20 11:21:30,https://api.github.com/repos/openstack/swift/git/commits/3135878d2fe9909f49fcadeeb9cc6c6933d06127,3135878d2fe9909f49fcadeeb9cc6c6933d06127,"Fix small formatting issues in middleware docs

TrivialFix

Change-Id: I0ebc12e257b630696a82890178436dcd1eef0c36"
senk,2017-11-20 09:59:05,https://api.github.com/repos/openstack/swift/git/commits/4f3abec614e90dd1217c70284b7469024c362e62,4f3abec614e90dd1217c70284b7469024c362e62,"Fix small formatting issue

TrivialFix

Change-Id: Iacd341a1f3dbf43c6fc2ebcf546aed54f866face"
senk,2017-11-17 12:30:08,https://api.github.com/repos/openstack/swift/git/commits/de818611085d5781fa449928e90e891d863c6768,de818611085d5781fa449928e90e891d863c6768,"Fix formatting of SAIO docs

* Fix formatting error in SAIO docs so that list is displaying
  correct

Change-Id: If88869290252a2c86f60fdf89d78ef4a418ae23d"
ajaeger,2017-11-17 09:28:20,https://api.github.com/repos/openstack/swift/git/commits/c3e73b64f8c2d3b700b8bd39339c60a096d50cb8,c3e73b64f8c2d3b700b8bd39339c60a096d50cb8,"Remove setting of version/release from releasenotes

Release notes are version independent, so remove version/release
values. We've found that projects now require the service package
to be installed in order to build release notes, and this is entirely
due to the current convention of pulling in the version information.

Release notes should not need installation in order to build, so this
unnecessary version setting needs to be removed.

This is needed for new release notes publishing, see
I56909152975f731a9d2c21b2825b972195e48ee8 and the discussion starting
at
http://lists.openstack.org/pipermail/openstack-dev/2017-November/124480.html
.

Change-Id: I1442656b3e4ab84ee5c219f5f4959bd7f41f01fe"
bloodeagle40234,2017-11-14 02:42:11,https://api.github.com/repos/openstack/swift/git/commits/1962b18c0c4e0069ccd3063e06a5d491672db975,1962b18c0c4e0069ccd3063e06a5d491672db975,"Remove unnecessary commented lines

Change-Id: Ifb7e697851e4e6979fe22176c7a7ca74699c75a6"
tipabu,2017-11-02 18:43:16,https://api.github.com/repos/openstack/swift/git/commits/396380f3406bdcd842e85a66cb346bf219cbb4f3,396380f3406bdcd842e85a66cb346bf219cbb4f3,"Better handle missing files in _construct_from_data_file

There's a window between when we list the files on disk and when we actually
try to open the .data file where another process could delete it. That should
raise a DiskFileNotExist error, not an IOError.

Change-Id: I1b43fef35949cb6f71997874e4e6b7646eeec8fe
Closes-Bug: 1712662"
smerritt,2017-10-20 00:13:00,https://api.github.com/repos/openstack/swift/git/commits/62d21eceb7ebd061d527339b85d5d9e24fa13a2b,62d21eceb7ebd061d527339b85d5d9e24fa13a2b,"Add metadata checksums to old objects in auditor.

When the object auditor examines an object, it will now add any
missing metadata checksums. This goes for both .data and .meta files,
but not .ts files, as tombstones don't live very long anyway.

Change-Id: I9417a8b0cc5099470845c0504c834746188d89e8"
notmyname,2017-11-10 19:03:18,https://api.github.com/repos/openstack/swift/git/commits/6990d0209db3f7cb836d5df04fd39953430afd3a,6990d0209db3f7cb836d5df04fd39953430afd3a,"added some people to core emeritus in the authors file

Change-Id: I689490fd4e8d1256fc3cedf113cbd815062ae541"
notmyname,2017-11-02 19:46:14,https://api.github.com/repos/openstack/swift/git/commits/1ff3f1e3e877091f372a9109187a3ce4cf4414dd,1ff3f1e3e877091f372a9109187a3ce4cf4414dd,"authors changelog for 2.16.0

Change-Id: I2c1f4a55d2813a63275072a3aaaea69f6808125a"
zhengwei6082,2017-11-09 06:40:18,https://api.github.com/repos/openstack/swift/git/commits/78c7d4c04ebd7f6253732806b470510a5e9cb55e,78c7d4c04ebd7f6253732806b470510a5e9cb55e,"Using assertIsNone() instead of assertEqual(None)

Following OpenStack Style Guidelines:
[1] http://docs.openstack.org/developer/hacking/#unit-tests-and-assertraises
[H203] Unit test assertions tend to give better messages for more specific
assertions. As a result, assertIsNone(...) is preferred over
assertEqual(None, ...) and assertIs(..., None)

Change-Id: Ie85f5ae13ebb3f6b320c8790da9d23427ed65ffb"
s-t-e-v-e-n-k,2017-11-07 01:05:27,https://api.github.com/repos/openstack/swift/git/commits/5a06e3da3bb667f82872852f948fa451070f08da,5a06e3da3bb667f82872852f948fa451070f08da,"No longer import nose

Since Python 2.7, unittest in the standard library has included mulitple
facilities for skipping tests by decorators as well as an exception.
Switch to that directly, rather than importing nose.

Change-Id: I4009033473ea24f0d0faed3670db844f40051f30"
alistairncoles,2017-11-06 09:46:57,https://api.github.com/repos/openstack/swift/git/commits/53d92c18253355f15e3ca0fd07e13608b192dce8,53d92c18253355f15e3ca0fd07e13608b192dce8,"Increase connection timeout for object controller tests

Intermittent test failures due to timeout of *mocked*
connections have been reported, so increase the
connection timeout in the test app.

Closes-Bug: #1730373
Change-Id: I3c91bdff65f8aa06a72f6ad5ec00ee67890b8e61"
smerritt,2016-06-30 23:52:58,https://api.github.com/repos/openstack/swift/git/commits/728b4ba14008f59ffe64fd28bc061c12a0c64467,728b4ba14008f59ffe64fd28bc061c12a0c64467,"Add checksum to object extended attributes

Currently, our integrity checking for objects is pretty weak when it
comes to object metadata. If the extended attributes on a .data or
.meta file get corrupted in such a way that we can still unpickle it,
we don't have anything that detects that.

This could be especially bad with encrypted etags; if the encrypted
etag (X-Object-Sysmeta-Crypto-Etag or whatever it is) gets some bits
flipped, then we'll cheerfully decrypt the cipherjunk into plainjunk,
then send it to the client. Net effect is that the client sees a GET
response with an ETag that doesn't match the MD5 of the object *and*
Swift has no way of detecting and quarantining this object.

Note that, with an unencrypted object, if the ETag metadatum gets
mangled, then the object will be quarantined by the object server or
auditor, whichever notices first.

As part of this commit, I also ripped out some mocking of
getxattr/setxattr in tests. It appears to be there to allow unit tests
to run on systems where /tmp doesn't support xattrs. However, since
the mock is keyed off of inode number and inode numbers get re-used,
there's lots of leakage between different test runs. On a real FS,
unlinking a file and then creating a new one of the same name will
also reset the xattrs; this isn't the case with the mock.

The mock was pretty old; Ubuntu 12.04 and up all support xattrs in
/tmp, and recent Red Hat / CentOS releases do too. The xattr mock was
added in 2011; maybe it was to support Ubuntu Lucid Lynx?

Bonus: now you can pause a test with the debugger, inspect its files
in /tmp, and actually see the xattrs along with the data.

Since this patch now uses a real filesystem for testing filesystem
operations, tests are skipped if the underlying filesystem does not
support setting xattrs (eg tmpfs or more than 4k of xattrs on ext4).

References to ""/tmp"" have been replaced with calls to
tempfile.gettempdir(). This will allow setting the TMPDIR envvar in
test setup and getting an XFS filesystem instead of ext4 or tmpfs.

THIS PATCH SIGNIFICANTLY CHANGES TESTING ENVIRONMENTS

With this patch, every test environment will require TMPDIR to be
using a filesystem that supports at least 4k of extended attributes.
Neither ext4 nor tempfs support this. XFS is recommended.

So why all the SkipTests? Why not simply raise an error? We still need
the tests to run on the base image for OpenStack's CI system. Since
we were previously mocking out xattr, there wasn't a problem, but we
also weren't actually testing anything. This patch adds functionality
to validate xattr data, so we need to drop the mock.

`test.unit.skip_if_no_xattrs()` is also imported into `test.functional`
so that functional tests can import it from the functional test
namespace.

The related OpenStack CI infrastructure changes are made in
https://review.openstack.org/#/c/394600/.

Co-Authored-By: John Dickinson <me@not.mn>

Change-Id: I98a37c0d451f4960b7a12f648e4405c6c6716808"
tipabu,2017-10-12 22:27:35,https://api.github.com/repos/openstack/swift/git/commits/31dd95ee91589be937565692a1610ba49db29706,31dd95ee91589be937565692a1610ba49db29706,"Add base64decode function to common/utils

Keymaster middleware does some nice input validation on
base64-encoded strings; pull that out somewhere common so
other things (like SLOs with inlined data) can use it, too.

Change-Id: I3436bf3724884fe252c6cb603243c1195f67b701"
tipabu,2017-10-03 00:11:07,https://api.github.com/repos/openstack/swift/git/commits/77a8a4455d4a2bd0a9b9146a01acfe0d93fe7550,77a8a4455d4a2bd0a9b9146a01acfe0d93fe7550,"Let clients request heartbeats during SLO PUTs

An SLO PUT requires that we HEAD every referenced object; as a result, it
can be a very time-intensive operation. This makes it difficult as a
client to differentiate between a proxy-server that's still doing work and
one that's crashed but left the socket open.

Now, clients can opt-in to receiving heartbeats during long-running PUTs
by including the query parameter

    heartbeat=on

With heartbeating turned on, the proxy will start its response immediately
with 202 Accepted then send a single whitespace character periodically
until the request completes. At that point, a final summary chunk will be
sent which includes a ""Response Status"" key indicating success or failure
and (if successful) an ""Etag"" key indicating the Etag of the resulting SLO.

This mechanism is very similar to the way bulk extractions and deletions
work, and even the way SLO behaves for ?multipart-manifest=delete requests.

Note that this is opt-in: this prevents us from sending the 202 response
to existing clients that may mis-interpret it as an immediate indication
of success.

Co-Authored-By: Alistair Coles <alistairncoles@gmail.com>
Related-Bug: 1718811
Change-Id: I65cee5f629c87364e188aa05a06d563c3849c8f3"
DavidRabel-b1,2017-11-02 11:38:41,https://api.github.com/repos/openstack/swift/git/commits/92705bb36b4a771a757977d11875e7b929c41741,92705bb36b4a771a757977d11875e7b929c41741,"Fix indent in overview_policies.rst

Change-Id: I7f070956d8b996db798837392adfca4483067aea"
clayg,2017-09-01 21:15:45,https://api.github.com/repos/openstack/swift/git/commits/feee3998408e5ed03563c317ad9506ead92083a6,feee3998408e5ed03563c317ad9506ead92083a6,"Use check_drive consistently

We added check_drive to the account/container servers to unify how all
the storage wsgi servers treat device dirs/mounts.  Thus pushes that
unification down into the consistency engine.

Drive-by:
 * use FakeLogger less
 * clean up some repeititon in probe utility for device re-""mounting""

Related-Change-Id: I3362a6ebff423016bb367b4b6b322bb41ae08764
Change-Id: I941ffbc568ebfa5964d49964dc20c382a5e2ec2a"
tipabu,2017-10-19 18:53:04,https://api.github.com/repos/openstack/swift/git/commits/29e9ae1cc5b74dce205643c101601555c06b67dc,29e9ae1cc5b74dce205643c101601555c06b67dc,"Make xml responses less insane

Looking at bulk extractions:

   $ tar c *.py | curl http://saio:8090/v1/AUTH_test/c?extract-archive=tar \
      -H accept:application/xml -T -
   <?xml version=""1.0"" encoding=""UTF-8""?>
   <delete>
   <number_files_created>2</number_files_created>
   <response_body></response_body>
   <response_status>201 Created</response_status>
   <errors>
   </errors>
   </delete>

Or SLO upload failures:

   $ curl http://saio:8090/v1/AUTH_test/c/slo?multipart-manifest=put -X PUT \
      -d '[{""path"": ""not/found""}]' -H accept:application/xml
   <delete>
   <errors>
   <object><name>not/found</name><status>404 Not Found</status></object></errors>
   </delete>

Why <delete>? Makes no sense.

Drive-by: stop being so quadratic.

Change-Id: I46b233864ba2815ac632d856b9f3c40cc9d0001a"
matthewoliver,2017-10-31 04:55:13,https://api.github.com/repos/openstack/swift/git/commits/449d83fb0c8668f444baf3c74cf15c26a70bb02e,449d83fb0c8668f444baf3c74cf15c26a70bb02e,"Doc uses alias instead of aliases

The overview_policies doc makes reference to an `alias` option when in
fact the option is `aliases`.
The sample storage policy snippet is correct, it's just incorrect when
listing the possible options.

This change changes the listed option to `aliases`.

Change-Id: Iddf0f19f4d50819ff6abd46e6a1156dc8e4a451d"
HCLTech-SSW,2017-10-25 10:23:47,https://api.github.com/repos/openstack/swift/git/commits/178d7f37cb80efa668bc81e79d1ee633204b8852,178d7f37cb80efa668bc81e79d1ee633204b8852,"Added the man page for container-reconciler.conf

Change-Id: Ic7fc6ddca2ab564b31156fa84b362bc9963825f1
Closes-Bug: #1607025"
bloodeagle40234,2017-10-26 09:41:56,https://api.github.com/repos/openstack/swift/git/commits/83be309627e79c2f4dd66faf17b5459fdf5bfc25,83be309627e79c2f4dd66faf17b5459fdf5bfc25,"Fix a small typo

That's redundant ""to"" in an inline comment.

Change-Id: Idab1e11fbbd80a97b0e4ba1c8ab046be99e47d2d"
alistairncoles,2017-10-24 15:06:26,https://api.github.com/repos/openstack/swift/git/commits/93e0287a827c0025c1522517b0e288ec04f12326,93e0287a827c0025c1522517b0e288ec04f12326,"Require lock_path limit to be a positive int

Currently if limit=0 is passed to lock_path then the method will time
out and never acquire a lock which is reasonable but not useful. This
is a potential pitfall given that in other contexts, for example
diskfile's replication_lock, a concurrency value of 0 has the meaning
'no limit'. It would be easy to erroneously assume that the same
semantic holds for lock_path.

To avoid that pitfall, this patch makes it an error to pass limit<1 to
lock_path.

Related-Change: I3c3193344c7a57a8a4fc7932d1b10e702efd3572
Change-Id: I9ea7ee5b93e3d6924bff9790141b107b53f77883"
alistairncoles,2017-10-24 12:03:05,https://api.github.com/repos/openstack/swift/git/commits/e0244dd30d1974db1c522c3b4a2982eaed6c5297,e0244dd30d1974db1c522c3b4a2982eaed6c5297,"Cleanup lock_path and replication_concurrency_per_device tests

use assertRaises where applicable; use the with_tempdir
decorator

Related-Change: I3c3193344c7a57a8a4fc7932d1b10e702efd3572
Change-Id: Ie83584fc22a5ec6e0a568e39c90caf577da29497"
smerritt,2017-10-20 22:31:07,https://api.github.com/repos/openstack/swift/git/commits/9c97c80b2631bedebbd3196e87f0696a6c67b8be,9c97c80b2631bedebbd3196e87f0696a6c67b8be,"Clean up a couple hand-rolled mocks.

Change-Id: I6582985990e8b5e3a0c65bce5d3bb1e39d58dfb9"
smerritt,2017-10-20 21:48:31,https://api.github.com/repos/openstack/swift/git/commits/9b2779ba131aa22893432b5c96fb19bf43656a4f,9b2779ba131aa22893432b5c96fb19bf43656a4f,"Clean up memcache tests

This is mostly just using mock.patch instead of doing it by hand. One
test was doing some weird exception counting; now it just uses
assertRaises in a loop.

Change-Id: I54f903f170226720405df2c5f6845124909ab830"
zaitcev,2017-10-18 23:15:11,https://api.github.com/repos/openstack/swift/git/commits/0bca0d4d2bf95a37e4a403457ee5c7db4c0b6290,0bca0d4d2bf95a37e4a403457ee5c7db4c0b6290,"Be more tolerant of exception messages from sqlite

Parsing the text of error messages was always perilous, perhaps.
Either way, this should fix the problem of test_get() failing.

Change-Id: I929c2f6e60624241075a292d020c5707ea0ff1c3"
tipabu,2017-10-17 22:49:39,https://api.github.com/repos/openstack/swift/git/commits/e001c02ff938d9aea560970fa70f3d8884a8ea33,e001c02ff938d9aea560970fa70f3d8884a8ea33,"Stop logging tracebacks on bad xLOs

The error messages alone should provide plenty enough information.
Plus, running functional tests really shouldn't cause tracebacks.

Also, tighten up tests for log messages.

Change-Id: I55136484d342af756fa153d971dcb9159a435f13"
smerritt,2017-10-18 22:09:12,https://api.github.com/repos/openstack/swift/git/commits/356b110229ee5e5be93ce1ec60ed2de8f75090bf,356b110229ee5e5be93ce1ec60ed2de8f75090bf,"Remove swift-temp-url man page.

Commit 250da37a removed bin/swift-temp-url, but left the man page.

Change-Id: Ic518f23678e3c3134f02a46a51a2bcb90d92bdc2"
alistairncoles,2017-10-18 09:52:52,https://api.github.com/repos/openstack/swift/git/commits/1aecd1dfc61988f12d4cdfda7110dd648133e4cf,1aecd1dfc61988f12d4cdfda7110dd648133e4cf,"tighten up drop_privileges unit tests

add more assertions about args that are passed to
os module functions

Related-Change: Ida15e72ae4ecdc2d6ce0d37bd99c2d86bd4e5ddc
Change-Id: Iee483274aff37fc9930cd54008533de2917157f4"
smerritt,2017-10-17 22:16:43,https://api.github.com/repos/openstack/swift/git/commits/e6cf9b4758612f38f7317c52423f317b9a11bbc9,e6cf9b4758612f38f7317c52423f317b9a11bbc9,"Fix some spelling in a docstring

Change-Id: I6b32238da3381848ae56aed1c570d299be72473e"
tipabu,2017-10-17 21:17:57,https://api.github.com/repos/openstack/swift/git/commits/646f7507a1f5cf479b8d2023645009de0a28cd79,646f7507a1f5cf479b8d2023645009de0a28cd79,"Quiet test output when running test_utils.py in isolation

Change-Id: I4cf85d3cd5a20424e9bbbdf0213120b3c3d4b837"
coreycb,2017-10-17 19:04:45,https://api.github.com/repos/openstack/swift/git/commits/0f91c862e19bb8d81c20d03e65e6e6657f7265dc,0f91c862e19bb8d81c20d03e65e6e6657f7265dc,"Drop group comparison from drop_privileges test

Drop the group comparison from drop_privileges test as it isn't
valid since os.setgroups() is mocked.

Change-Id: Ida15e72ae4ecdc2d6ce0d37bd99c2d86bd4e5ddc
Closes-Bug: #1724342"
smerritt,2017-10-14 00:03:18,https://api.github.com/repos/openstack/swift/git/commits/5438fe7d9bcb7dc99118c12bdf1ccfd663390b08,5438fe7d9bcb7dc99118c12bdf1ccfd663390b08,"Clean up some leftover Python 2.6-isms.

Change-Id: I24f0aa3bf7314a669c4cf44eadc46e874d6803f1"
tipabu,2017-10-13 23:27:11,https://api.github.com/repos/openstack/swift/git/commits/250da37a7b279b05a1ac8954b506add1661f194d,250da37a7b279b05a1ac8954b506add1661f194d,"Remove swift-temp-url script

This has been deprecated since Swift 2.10.0 (Newton) including a
message that it would go away. Let's actually remove it.

Change-Id: I7d3659761c71119363ff2c0c750e37b4c6374a39
Related-Change: Ifa8bf636f20f82db4845b02d1b58699edaa39356"
tipabu,2017-05-18 01:26:25,https://api.github.com/repos/openstack/swift/git/commits/5b26516ab23288295aeff3764ae0584777547f4d,5b26516ab23288295aeff3764ae0584777547f4d,"Increase name-length limits for internal accounts

Double account and container name-length limits for accounts starting with
auto_create_account_prefix (default: '.') -- these are used internally by
Swift, and may need to have some prefix followed by a user-settable value.

Related-Change: Ice703dc6d98108ad251c43f824426d026e1f1d97
Change-Id: Ie1ce5ea49b06ab3002c0bd0fad7cea16cea2598e"
tipabu,2017-09-11 22:08:12,https://api.github.com/repos/openstack/swift/git/commits/c118059719ded85381e9b134b091d04a7b5a3955,c118059719ded85381e9b134b091d04a7b5a3955,"Respond 400 Bad Request when Accept headers fail to parse

Change-Id: I6eb4e4bca95e2ee4fecdb703394cb2419737922d
Closes-Bug: 1716509"
smerritt,2017-10-13 00:15:54,https://api.github.com/repos/openstack/swift/git/commits/03e8ab7171580f3fb93131e9ccfb69fd35364672,03e8ab7171580f3fb93131e9ccfb69fd35364672,"functests: don't crash if no second account

In test.functional.test_object.TestObject.setUp, we create a container
in account 2. However, if we've only got one account, we don't skip
this class, resulting in a TypeError down in requests somewhere and a
stack trace. Since we're using account 2 in setup, we should skip the
tests if account 2 is not configured.

Change-Id: I569d98baf071d2dce7cf34a9538070f00afda388"
smerritt,2017-10-12 23:58:41,https://api.github.com/repos/openstack/swift/git/commits/eaea0c49332273085b17852e22582940ab059006,eaea0c49332273085b17852e22582940ab059006,"Skip cross-account-copy functest if only one account

This looks like a case of copy-paste-itis. The cross-account-copy
functest is skipped if we have no test accounts configured, but not if
we have only one.

Change-Id: Ifbefdd9aeb98e3d02c536e9d29759f86ec9af6a1"
smerritt,2017-10-12 23:13:25,https://api.github.com/repos/openstack/swift/git/commits/24188beb81d39790034fa0902246163a7bf54c91,24188beb81d39790034fa0902246163a7bf54c91,"Remove some leftover threadpool cruft.

Change-Id: I43a1a428bd96a2e18aac334c03743a9f94f7d3e1"
smerritt,2016-04-15 19:43:44,https://api.github.com/repos/openstack/swift/git/commits/1d67485c0b935719e0c8999eb353dfd84713add6,1d67485c0b935719e0c8999eb353dfd84713add6,"Move all monkey patching to one function

Change-Id: I2db2e53c50bcfa17f08a136581cfd7ac4958ada2"
smerritt,2017-10-12 17:45:12,https://api.github.com/repos/openstack/swift/git/commits/dc8da5bb194d0a544fb8065aa9a4c7484f605715,dc8da5bb194d0a544fb8065aa9a4c7484f605715,"Use ""poll"" or ""selects"" Eventlet hub for all Swift daemons.

Previously, Swift's WSGI servers, the object replicator, and the
object reconstructor were setting Eventlet's hub to either ""poll"" or
""selects"", depending on availability. Other daemons were letting
Eventlet use its default hub, which is ""epoll"".

In any daemons that fork, we really don't want to use epoll. Epoll
instances end up shared between the parent and all children, and you
get some awful messes when file descriptors are shared.

Here's an example where two processes are trying to wait on the same
file descriptor using the same epoll instance, and everything goes
wrong:

[proc A] epoll_ctl(6, EPOLL_CTL_ADD, 3, ...) = 0

[proc B] epoll_ctl(6, EPOLL_CTL_ADD, 3, ...) = -1 EEXIST (File exists)
[proc B] epoll_wait(6, ...) = 1
[proc B] epoll_ctl(6, EPOLL_CTL_DEL, 3, ...) = 0

[proc A] epoll_wait(6, ...)

This primarily affects the container updater and object updater since
they fork. I've decided to change the hub for all Swift daemons so
that we don't add multiprocessing support to some other daemon someday
and suffer through this same bug again.

This problem was made more apparent by commit 6d16079, which made our
logging mutex use file descriptors. However, it could have struck on
any shared file descriptor on which a read or write returned EAGAIN.

Change-Id: Ic2c1178ac918c88b0b901e581eb4fab3b2666cfe
Closes-Bug: 1722951"
clayg,2017-10-10 18:47:50,https://api.github.com/repos/openstack/swift/git/commits/45ca39fc68cdb42b382c1638a92cc8d3cec5529a,45ca39fc68cdb42b382c1638a92cc8d3cec5529a,"add mangle_client_paths to example config

Change-Id: Ic1126fc95e8152025fccf25356c253facce3e3ec"
smerritt,2017-10-10 00:31:30,https://api.github.com/repos/openstack/swift/git/commits/37f23b072ee7a655ab9072f1d0bece0919dec61b,37f23b072ee7a655ab9072f1d0bece0919dec61b,"Allow SLOs to have zero-byte last segments.

Since we used to allow zero-byte last segments but now we don't, it
can be difficult to deal with some old SLO manifests.

Imagine you're writing some code to sync objects from Swift cluster A
to Swift cluster B. You start off with just a GET from A piped into a
PUT to B, and that works great until you hit a SLO manifest and B
won't accept a 500GB object. So, you write some code to detect SLO
manifests, sync their segments, then take the JSON manifest
(?multipart-manifest=get) and sync *that* over.

Now, life is good... until one day you get an exception notification
that there's this manifest on cluster A that cluster B won't
accept. Turns out that, back when Swift would take zero-byte final
segments on SLOs (before commit 7f636a5), someone uploaded such a SLO
to cluster A. Now, however, zero-byte final segments are invalid, so
that SLO that exists over in cluster A can't just be copied to cluster
B.

A little coding later, your sync tool detects zero-byte final segments
and removes them when copying a manifest. But now your ETags don't
match between clusters, so you have to figure out some way to deal
with that, and so you put it in metadata, but then you realize that
your syncer might encounter a SLO which contains a sub-SLO which has a
zero-byte final segment, and it's right about then that you start
thinking about giving up on programming and getting a job as an
elevator mechanic.

This commit makes life easier for developers of such applications by
allowing SLOs to have zero-byte segments again.

Change-Id: Ia37880bbb435e269ec53b2963eb1b9121696d479"
tipabu,2017-10-10 00:27:13,https://api.github.com/repos/openstack/swift/git/commits/88c9ba4396a4e66eb854509a91e94935459444cf,88c9ba4396a4e66eb854509a91e94935459444cf,"Fix bulk heartbeating when emitting XML

Previously, we would set eventlet.minimum_write_chunk_size *after* we
emit the XML declaration. As a result, eventlet thinks it should buffer
the entire response, rendering our attempts at heartbeating useless.

Change-Id: Idb58c6cc982cc221fed5fc837afd06aa958d9ad4"
tipabu,2017-05-12 14:55:21,https://api.github.com/repos/openstack/swift/git/commits/94bac4ab2fe65104d602378e8e49c37b8187a75d,94bac4ab2fe65104d602378e8e49c37b8187a75d,"domain_remap: stop mangling client-provided paths

The root_path option for domain_remap seems to serve two purposes:
 - provide the first component (version) for the backend request
 - be an optional leading component for the client request, which
   should be stripped off

As a result, we have mappings like:

   c.a.example.com/v1/o -> /v1/AUTH_a/c/o

instead of

   c.a.example.com/v1/o -> /v1/AUTH_a/c/v1/o

which is rather bizarre. Why on earth did we *ever* start doing this?

Now, this second behavior is managed by a config option
(mangle_client_paths) with the default being to disable it.

Upgrade Consideration
=====================

If for some reason you *do* want to drop some parts of the
client-supplied path, add

   mangle_client_paths = True

to the [filter:domain_remap] section of your proxy-server.conf. Do this
before upgrading to avoid any loss of availability.

UpgradeImpact
Change-Id: I87944bfbf8b767e1fc36dbc7910305fa1f11eeed"
alistairncoles,2017-10-09 10:33:28,https://api.github.com/repos/openstack/swift/git/commits/a4a5494fd2fe8a43a5d50a21a1951266cc7c4212,a4a5494fd2fe8a43a5d50a21a1951266cc7c4212,"test account autocreate listing format

Related-Change: Id3ce37aa0402e2d8dd5784ce329d7cb4fbaf700d
Change-Id: I50c22225bbebff71600bea9158bda1edd18b48b0"
alistairncoles,2017-10-09 09:06:19,https://api.github.com/repos/openstack/swift/git/commits/8b7f15223cde4c19fd9cbbd97e8ad79a1b4afa8d,8b7f15223cde4c19fd9cbbd97e8ad79a1b4afa8d,"Add example to container-sync-realms.conf.5 man page

Related-Change: I0760ce149e6d74f2b3f1badebac3e36da1ab7e77

Change-Id: I129de42f91d7924c7bcb9952f17fe8a1a10ae219"
HCLTech-SSW,2017-10-06 08:37:34,https://api.github.com/repos/openstack/swift/git/commits/816331155c624c444ed123bcab412821bd7854fb,816331155c624c444ed123bcab412821bd7854fb,"Added the man page for container-sync-realms.conf

Updated the comments of reviewers.

Change-Id: I0760ce149e6d74f2b3f1badebac3e36da1ab7e77
Closes-Bug: #1607026"
JanZerebecki,2017-10-04 19:14:03,https://api.github.com/repos/openstack/swift/git/commits/747b9d928624a3f44f1f9f0269489597cddc5997,747b9d928624a3f44f1f9f0269489597cddc5997,"Fix swift-ring-builder set_weight with >1 device

When iterating over the (device, weight) tuples do not carry over the
device from the previous iteration.

Closes-Bug: 1454433
Change-Id: Iba82519b0b2bc80e2c1abbed308b651c4da4b06a"
tipabu,2017-10-04 18:59:49,https://api.github.com/repos/openstack/swift/git/commits/839c13003aea955c48e77269d4d40a567e07dd44,839c13003aea955c48e77269d4d40a567e07dd44,"Stop clearing params for account_autocreate responses

Otherwise, we send back a 204 where middlewares should be expecting
a 200 and an empty JSON array.

Change-Id: I05549342327108f71b60a316f734c55bc9589915
Related-Change: Id3ce37aa0402e2d8dd5784ce329d7cb4fbaf700d"
tipabu,2017-10-02 22:56:42,https://api.github.com/repos/openstack/swift/git/commits/4665c175be7f5299b577925e922a59dfa33ada8c,4665c175be7f5299b577925e922a59dfa33ada8c,"Clean up SLO tests and docs

Change-Id: If7087cb674d6c575c4073ba09b5ef056d908655b"
tipabu,2017-09-27 22:10:42,https://api.github.com/repos/openstack/swift/git/commits/79905ae794db2da82c8834dc24177b1820b8c53a,79905ae794db2da82c8834dc24177b1820b8c53a,"Replace SOSO auth prefix in examples with more-standard AUTH

Change-Id: I98643d6acf248840a8360f31e446bc8ecb834898"
tipabu,2017-09-27 22:05:40,https://api.github.com/repos/openstack/swift/git/commits/4716d3da1188eb2f2971004461554b05d0061ec6,4716d3da1188eb2f2971004461554b05d0061ec6,"swift-account-audit: compare each etag to the hash from container

...rather than only comparing the ETag from the last response over and
over again.

NB: This tool *does not* like EC data :-(

Change-Id: Idd37f94b07f607ab8a404dd986760361c39af029
Closes-Bug: 1266636"
alistairncoles,2017-09-27 15:35:27,https://api.github.com/repos/openstack/swift/git/commits/93fc9d2de86f37f62b1d6768600d0551e1b72fb6,93fc9d2de86f37f62b1d6768600d0551e1b72fb6,"Add cautionary note re delay_reaping in account-server.conf-sample

Change-Id: I2c3eea783321338316eecf467d30ba0b3217256c
Related-Bug: #1514528"
tipabu,2017-09-27 19:19:53,https://api.github.com/repos/openstack/swift/git/commits/c6aea4b3730c937c41815831a7b4d60ff2899fcb,c6aea4b3730c937c41815831a7b4d60ff2899fcb,"Fix intermittent failure in test_x_delete_after

X-Delete-After: 1 is known to be flakey; use 2 instead.

When the proxy receives an X-Delete-After header, it automatically
converts it to an X-Delete-At header based on the current time. So far,
so good. But in normalize_delete_at_timestamp we convert our

    time.time() + int(req.headers['X-Delete-After'])

to a string representation of an integer and in the process always round
*down*. As a result, we lose up to a second worth of object validity,
meaning the object server can (rarely) respond 400, complaining that the
X-Delete-At is in the past.

Change-Id: Ib5e5a48f5cbed0eade8ba3bca96b26c82a9f9d84
Related-Change: I643be9af8f054f33897dd74071027a739eaa2c5c
Related-Change: I10d3b9fcbefff3c415a92fa284a1ea1eda458581
Related-Change: Ifdb1920e5266aaa278baa0759fc0bfaa1aff2d0d
Related-Bug: #1597520
Closes-Bug: #1699114"
alistairncoles,2017-08-30 14:29:14,https://api.github.com/repos/openstack/swift/git/commits/348bd83b7eb638d3309ff6313d9a6501c540fa24,348bd83b7eb638d3309ff6313d9a6501c540fa24,"Respect co-builder partition moves when min_part_hours is zero

Repeated calls to each co-builder's _update_last_part_moves() are
unnecessary and have the unfortunate side effect of resetting the
_last_part_moved bitmap. When a component builder has zero
min_part_hours this results in it not preventing its co-builders from
moving parts that it has already moved.

This patch changes the CompositeRingBuilder to call each component
builder _update_last_part_moves() *once* before rebalancing any
component builder. CooperativeRingBuilder's no longer forward calls to
their _update_last_part_moves() method. Each component's
_last_part_moved bitmap is therefore preserved until for the duration
of the composite rebalance.

The initialisation of the RingBuilder _last_part_moves array is moved
to the RingBuilder __init__ method, so that calls to
_update_last_part_moves() are effective even when rebalance() has
never been called on that builder. Otherwise, during a composite
rebalance, a component that has not previously been rebalanced will
not have its _last_part_moves_epoch updated during rebalance and as a
result may report erroneous min_part_seconds_left after its first
rebalance.

Related-Change: I1b30cb3d776be441346a4131007d2487a5440a81
Closes-Bug: #1714274
Change-Id: Ib165cf974c865d47c2d9e8f7b3641971d2e9f404"
alistairncoles,2017-09-27 13:11:14,https://api.github.com/repos/openstack/swift/git/commits/5c76b9e691166acc1f7b8483aaa3980ebc70bd3a,5c76b9e691166acc1f7b8483aaa3980ebc70bd3a,"Add concurrent_gets to proxy.conf man page

Change-Id: Iab1beff4899d096936c0e5915f3ec32364b3e517
Closes-Bug: #1559347"
jharbott,2017-09-27 09:10:54,https://api.github.com/repos/openstack/swift/git/commits/b4f08b6090057897ac647ba6331a4ec867b8e3b8,b4f08b6090057897ac647ba6331a4ec867b8e3b8,"Fix functest for IPv6 endpoints

Currently the functional tests fail if the storage_url contains a quoted
IPv6 address because we try to split on ':'.

But actually we don't need to split hostname and port only in order to
combine it back together lateron. Use the standard urlparse() function
instead and work with the 'netloc' part of the URL which keeps hostname
and port together.

Change-Id: I64589e5f2d6fb3cebc6768dc9e4de6264c09cbeb
Partial-Bug: 1656329"
clayg,2016-06-28 00:31:12,https://api.github.com/repos/openstack/swift/git/commits/36a843be73e2d58c3fe49a049d514b421124bd06,36a843be73e2d58c3fe49a049d514b421124bd06,"Preserve X-Static-Large-Object from .data file after POST

You can't modify the X-Static-Large-Object metadata with a POST, an
object being a SLO is a property of the .data file.  Revert the change
from 4500ff which attempts to correctly handle X-Static-Large-Object
metadata on a POST, but is subject to a race if the most recent SLO
.data isn't available during the POST.  Instead this change adjusts the
reading of metadata such that the X-Static-Large-Object metadata is
always preserved from the metadata on the datafile and bleeds through
a .meta if any.

Closes-bug: #1453807
Closes-bug: #1634723

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>
Change-Id: Ie48a38442559229a2993443ab0a04dc84717ca59"
alistairncoles,2017-09-26 10:43:53,https://api.github.com/repos/openstack/swift/git/commits/53ab6f2907eff2bb90528010d881f2f87ee02505,53ab6f2907eff2bb90528010d881f2f87ee02505,"Assert memcached connection error is logged

Follow up to [1] - change logger mocking so that we can
assert the memcached connection error is logged.

[1] Related-Change: I97c5420b4b4ecc127e9e94e9d0f91fbe92a5f623

Change-Id: I87cf4245082c5e0f0705c2c14ddfc0b5d5d89c06"
alistairncoles,2017-09-26 09:15:59,https://api.github.com/repos/openstack/swift/git/commits/c662e5fc8e7800ca516468aaab582c146063c3d6,c662e5fc8e7800ca516468aaab582c146063c3d6,"Add account_autocreate=true to internal-client.conf-sample

Closes-Bug: #1698426
Change-Id: I8a29a685bb12e60f4da4a0dc8270b408241ec415"
matthewoliver,2015-09-03 02:19:05,https://api.github.com/repos/openstack/swift/git/commits/e501ac7d2be5c11b2ed0005885c84023054ec041,e501ac7d2be5c11b2ed0005885c84023054ec041,"Fix memcached exception out of range stacktrace

When a memecached server goes offline in the middle of a
MemcahceRing (swift memcache client) session then a request
to memcached returns nothing and the client inside swift
leaves an ""IndexError: list index out of range"" stacktrace.

This change corrects that in all the places of MemcacheRing
that is susceptible to it, and added some tests to stop
regression.

Clay added a diff to the bug that pretty much did the same
thing I did, so I'll co-author him.

Change-Id: I97c5420b4b4ecc127e9e94e9d0f91fbe92a5f623
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Closes-Bug: #897451"
bloodeagle40234,2017-06-30 09:03:48,https://api.github.com/repos/openstack/swift/git/commits/23219664564d1b5a7ba02bbf8309ec699ab7a4cb,23219664564d1b5a7ba02bbf8309ec699ab7a4cb,"Accept a trade off of dispersion for balance

... but only if we *have* to!

During the initial gather for balance we prefer to avoid replicas on
over-weight devices that are already under-represented in any of it's
tiers (i.e. if a zone has to have at least one, but may have as many of
two, don't take the only replica).  Instead we hope by going for
replicas on over-weight devices that are at the limits of their
dispersion we might have a better than even chance we find a better
place for them during placement!

This normally works on out - and especially so for rings which can
disperse and balance.  But for existing rings where we'd have to
sacrifice dispersion to improve balance the existing optimistic gather
will end up refusing to trade dispersion for balance - and instead get
stuck without solving either!

You should always be able to solve for *either* dispersion or balance.
But if you can't solve *both* - we bail out on our optimistic gather
much more quickly and instead just focus on improving balance.  With
this change, the ring can get into balanced (and un-dispersed) states
much more quickly!

Change-Id: I17ac627f94f64211afaccad15596a9fcab2fada2
Related-Change-Id: Ie6e2d116b65938edac29efa6171e2470bb3e8e12
Closes-Bug: 1699636
Closes-Bug: 1701472"
clayg,2017-09-20 01:11:09,https://api.github.com/repos/openstack/swift/git/commits/64d24076842559fcfc5d654eaf3a303b3112ea38,64d24076842559fcfc5d654eaf3a303b3112ea38,"Follow-up test fixup

Use more literals to make test more obvious/readable - DAMP not DRY.

Change-Id: I2562085c829dbc2c812d8e624d6b71a7ccee91ed
Related-Change-Id: Ie153d01479c4242c01f48bf0ada78c2f9b6c8ff0"
tipabu,2017-09-21 22:25:57,https://api.github.com/repos/openstack/swift/git/commits/cc17c99e73e9ddb1768f2979074c3ec043e0a3b4,cc17c99e73e9ddb1768f2979074c3ec043e0a3b4,"Stop reloading swift.common.utils in test_daemon

This was causing some headaches over on feature/deep where a __eq__
wasn't working as expected because neither self nor other was an
instance of the class we thought we were using. Apparently, this
also fixes some issues when using fake_syslog = True?

There are two other places that we use reload_module, in
test_db_replicator and test_manager, but the monkey patching isn't
nearly as straight-forward.

Change-Id: I94d6578e275219e9687fee2f0c7cc4f99454b77f
Related-Bug: 1704192"
cschwede,2017-09-20 08:56:41,https://api.github.com/repos/openstack/swift/git/commits/8556b06bf75e46369088f1cc6e2aa5d6cc00251b,8556b06bf75e46369088f1cc6e2aa5d6cc00251b,"Add test to ensure cache cleared after container PUT

The parent commit fixes a race condition. Let's make sure there won't be
a regression in the future, thus testing the order to ensure the cache
is cleared after the request is executed.

Related-Bug: #1715177
Change-Id: I4f6750b7c556b498da0a2b56aa6c8cee5e42a90c"
tipabu,2017-09-15 22:52:26,https://api.github.com/repos/openstack/swift/git/commits/6b19ca7a7d5833f5648976d8d30c776975e361db,6b19ca7a7d5833f5648976d8d30c776975e361db,"proxy: Use the right ranges when going to multiple object servers

When the proxy times out talking to a backend server (say, because it
was under heavy load and having trouble servicing the request), we catch
the ChunkReadTimeout and try to get the rest from another server. The
client by and large doesn't care; there may be a brief pause in the
download while the proxy get the new connection, but all the bytes
arrive and in the right order:

    GET from node1, serve bytes 0 through N, timeout
    GET from node2, serve bytes N through end

When we calculate the range for the new request, we check to see if we
already have one from the previous request -- if one exists, we adjust
it based on the bytes sent to the client thus far. This works fine for
single failures, but if we need to go back *again* we double up the
offset and send the client incomplete, bad data:

    GET from node1, serve bytes 0 through N, timeout
    GET from node2, serve bytes N through M, timeout
    GET from node3, serve bytes N + M through end

Leaving the client missing bytes M through N + M.

We should adjust the range based on the number of bytes pulled from the
*backend* rather than delivered to the *frontend*. This just requires
that we reset our book-keeping after adjusting the Range header.

Change-Id: Ie153d01479c4242c01f48bf0ada78c2f9b6c8ff0
Closes-Bug: 1717401"
bloodeagle40234,2017-09-15 19:58:31,https://api.github.com/repos/openstack/swift/git/commits/d6fcf7459435077b525123e8b78e553070d5c070,d6fcf7459435077b525123e8b78e553070d5c070,"Make gate keeper to save relative location header path

Why we need this:
  Some middlewares want to keep HTTP Location header as relative path
  (e.g. using Load balancer in front of proxy).

What is the problem in current Swift:
  Current Swift already has the flag to keep it as relative when returning
  the reponse using swift.common.swob.Response. However, auth_token middleware,
  that is from keystonemiddleware, unfortunately can change the relative path
  to absolute because of using webob instead of swob.

What this patch is doing:
  Make gate_keeper able to re-transform the location header from absolute path
  to relative path if 'swift.leave_relative_location' is explicitely set because
  gate_keeper should be the most left side middleware except catch_errors middleware
  in the pipeline.

Change-Id: Ic634c3f1b1e26635206d5a54df8b15354e8df163"
bloodeagle40234,2017-09-14 11:57:46,https://api.github.com/repos/openstack/swift/git/commits/1e79f828ad10918bd76ae8df6fe4c4dbf7bbf3c5,1e79f828ad10918bd76ae8df6fe4c4dbf7bbf3c5,"Remove all post_as_copy related code and configes

It was deprecated and we discussed on this topic in Denver PTG
for Queen cycle. Main motivation for this work is that deprecated
post_as_copy option and its gate blocks future symlink work.

Change-Id: I411893db1565864ed5beb6ae75c38b982a574476"
tipabu,2017-03-24 01:26:21,https://api.github.com/repos/openstack/swift/git/commits/4806434cb0e857ce624c62df2a262e3c3bb9f4d1,4806434cb0e857ce624c62df2a262e3c3bb9f4d1,"Move listing formatting out to proxy middleware

Make some json -> (text, xml) stuff in a common module, reference that in
account/container servers so we don't break existing clients (including
out-of-date proxies), but have the proxy controllers always force a json
listing.

This simplifies operations on listings (such as the ones already happening in
decrypter, or the ones planned for symlink and sharding) by only needing to
consider a single response type.

There is a downside of larger backend requests for text/plain listings, but
it seems like a net win?

Change-Id: Id3ce37aa0402e2d8dd5784ce329d7cb4fbaf700d"
clayg,2017-09-13 15:58:10,https://api.github.com/repos/openstack/swift/git/commits/5622c1f959fac44e325768b6b3d9a1961c366dd2,5622c1f959fac44e325768b6b3d9a1961c366dd2,"Test placeholder for dispersion_report module

This module was recently moved from bin/ and the execute bit stuck
around and wasn't imported by our test suite - which throws off
accountability in coverage reporting.

Remove the execute bit and add a placeholder unittest module.

Related-Change-Id: Ie0d52a1a54fc152bb72cbb3f84dcc36a8dad972a
Change-Id: Id9e678c2460cc889f682c5566a4418160db7878f"
tipabu,2016-07-14 16:16:29,https://api.github.com/repos/openstack/swift/git/commits/f95befb37fcb3563d3db965d72d1112f0e31bd1b,f95befb37fcb3563d3db965d72d1112f0e31bd1b,"Optionally drop common prefixes in swift-*-info output

Add a --drop-prefixes flag to swift-account-info, swift-container-info,
and swift-object-info. This makes the output between the three more
consistent.

Change-Id: I98252ff74c4983eaad0a93d9a9fc527c74ffce68"
cschwede,2017-06-23 15:39:08,https://api.github.com/repos/openstack/swift/git/commits/cbddec340e2eda81cb06dfdc455d3fb108a48f05,cbddec340e2eda81cb06dfdc455d3fb108a48f05,"Add bin/swift-dispersion-report

Change-Id: I81736080fc478c2b69d5b71edd0cada39aad9400"
cschwede,2017-06-23 14:34:10,https://api.github.com/repos/openstack/swift/git/commits/b77de5393f540973685095cf087b3f839a55ba9f,b77de5393f540973685095cf087b3f839a55ba9f,"Make swift-dispersion-report importable

This patch allows to import the dispersion report tool, and thus making
it more easily usable within other Python tools. This can be also used
in a follow up patch to add some tests for the report tool.

It also fixes a bug when using the ""--dump-json"" option - until now it
returned the policy name and made the JSON invalid.

Change-Id: Ie0d52a1a54fc152bb72cbb3f84dcc36a8dad972a"
tipabu,2017-03-03 20:56:39,https://api.github.com/repos/openstack/swift/git/commits/f90ba1acb052ca5722eccbc8611d86efa81c3f6b,f90ba1acb052ca5722eccbc8611d86efa81c3f6b,"Use swift3's check_signature function

This adds support for v4 while getting us out of needing to know
how signatures work.

Related-Change: Iafb6114c12deb9a40d0f8324611de27b48ed95f6
Change-Id: I14be2845101f6af8f73bc46a416c09e4b9449515"
tipabu,2017-09-12 06:20:11,https://api.github.com/repos/openstack/swift/git/commits/8f843381cd30c1c3cb556b5abe1203d1e76b889b,8f843381cd30c1c3cb556b5abe1203d1e76b889b,"Add assertion about last-modified to object post test

Change-Id: I850bf44ab9c9388cb6434e33ae0b20ec361aca0e"
tipabu,2017-09-11 18:21:30,https://api.github.com/repos/openstack/swift/git/commits/c44d04709825d64bb8a852ecc835f8e88fe0484a,c44d04709825d64bb8a852ecc835f8e88fe0484a,"Create policy_stat table in auditor if missing

Change-Id: I8e96b912c614abff7393a94d1f01b67b5eda1709
Closes-Bug: 1435506"
bloodeagle40234,2017-09-11 17:21:41,https://api.github.com/repos/openstack/swift/git/commits/4ddd4c8a6322f0eada0d712ea75a7279af795626,4ddd4c8a6322f0eada0d712ea75a7279af795626,"Update ubuntu version to be correct target

- saio describes both 14.04 and 16.04 procedure
- currently we're testing on 16.04 (xenial) envrionment on the gate

Remaining task (probably another work):
- review the installation guide which adjusts to the ubuntu 14.04 LTS

Change-Id: Id690a1deabeb24bfc1af3ba3a3019794fe4b8eb9"
alistairncoles,2017-09-11 17:08:37,https://api.github.com/repos/openstack/swift/git/commits/079be1d5cddcaafbae0cae983cd908bac351d33b,079be1d5cddcaafbae0cae983cd908bac351d33b,"Mock RingBuilder.rebalance when testing ringbuilder cli warnings

Use mock to force explicit RingBuilder rebalance results so that the
test is focussed on the ringbuilder.py rebalance command behavior
when balance is (or is not) achieved. Avoids assumptions about
RingBuilder behavior.

Change-Id: I242ffc2f1a4f7b69a679832a65790223642dcea8
Closes-Bug: #1499015"
tipabu,2017-09-11 15:21:22,https://api.github.com/repos/openstack/swift/git/commits/f70feb39b99202e6f4283c30c5b3548f6ba918ce,f70feb39b99202e6f4283c30c5b3548f6ba918ce,"swob: Raise RuntimeError instead of IndexError

... when the underlying application forgets to call start_response.

Change-Id: I092be4bfdf5b1d7819fc1540307eaa918970e5b6
Closes-Bug: 1462226"
tipabu,2017-09-11 15:03:12,https://api.github.com/repos/openstack/swift/git/commits/c6d00fe22f5c9962928cfb94635a79097d3f0c6b,c6d00fe22f5c9962928cfb94635a79097d3f0c6b,"api-ref: Fix container PUT response codes

Change-Id: I7b57b6ee7095105399518873f8ae59da63cd8ce5
Closes-Bug: #1549411"
KazuhiroMiyahara,2017-09-06 11:06:26,https://api.github.com/repos/openstack/swift/git/commits/9fd9141f7dd7805d5ac4957aeb3a3a15131955e9,9fd9141f7dd7805d5ac4957aeb3a3a15131955e9,"Unify 'Content-Type' header key name in API reference

In current API reference, 'Content-Type' header key name is used in response
parameter tables except Container GET table. On the other hand, 'Content_Type'
is used in Container GET table.

This patch fixes the 'Content_Type' in Container GET table to 'Content-Type'.

Change-Id: Idf242477dd089202635b69b85b0c19739e0c6321"
KazuhiroMiyahara,2017-09-06 04:03:10,https://api.github.com/repos/openstack/swift/git/commits/a2f557e92103eb1b105db1099e10f38034a0609f,a2f557e92103eb1b105db1099e10f38034a0609f,"Add explanation about Content-Length header limit with DLO to docs

If a number of DLO segments is larger than container listing limit,
Content-Length header will not be included in GET or HEAD response.
However, this fact is not explained in document of large objects.

This patch add explanation about this fact to the document.

Change-Id: Ia45fad05797f38fa8b6b0ed917b4f9d7fb337149
Closes-Bug: 1680219"
KazuhiroMiyahara,2017-09-05 09:14:20,https://api.github.com/repos/openstack/swift/git/commits/275da4c18eb47e5e9f7e4f289497aa63292bc9d8,275da4c18eb47e5e9f7e4f289497aa63292bc9d8,"Fix bytes and name API reference of Container GET

In current API reference, 'bytes' and 'name' descriptions of Container GET are
shared with Account GET. However, the descriptions are not correct for
Container GET.

This patch separate descriptions for Container GET and descriptions for Account
GET and fix descriptions for Container GET.

Change-Id: Ibedd08c5d9ebe145caf567edbd9757d7bc83b96d"
KazuhiroMiyahara,2017-09-05 07:26:11,https://api.github.com/repos/openstack/swift/git/commits/ddec5f537301692306829b1f3e3f5cca9b7d8f87,ddec5f537301692306829b1f3e3f5cca9b7d8f87,"Update Container-Sync Docs for internal_client.conf

At patch [1], container sync daemon is updated to use internal client.
However, the ""Configuring Container Sync"" section [2] of swift docs doesn't
updated for this change.

This patch adds an explanation about the change.

[1]: https://review.openstack.org/#/c/452773/
[2]: http://docs.openstack.org/developer/swift/overview_container_sync.html#configuring-container-sync

Change-Id: Ia1aabeab250cbe27414d7877138ad38708f5ce3f
Closes-Bug: 1446721"
emonty,2017-09-02 13:37:19,https://api.github.com/repos/openstack/swift/git/commits/03c54d505f07451bf75603048584dfeee8d9cca7,03c54d505f07451bf75603048584dfeee8d9cca7,"Remove vestigate HUDSON_PUBLISH_DOCS reference

This isn't actually used (and in swift is commented out already)
and is a leftover from a thing we did about seven years ago.

Change-Id: I9889bcfd29054f14679ae7430b077ad3afb25b98"
ctvera,2017-04-19 13:09:40,https://api.github.com/repos/openstack/swift/git/commits/163fb4d52a85e0467c8c6b616e2cd9faa1faa41b,163fb4d52a85e0467c8c6b616e2cd9faa1faa41b,"Always require device dir for containers

For test purposes (e.g. saio probetests) even if mount_check is False,
still require check_dir for account/container server storage when real
mount points are not used.

This behavior is consistent with the object-server's checks in diskfile.

Co-Author: Clay Gerrard <clay.gerrard@gmail.com>
Related lp bug #1693005
Related-Change-Id: I344f9daaa038c6946be11e1cf8c4ef104a09e68b
Depends-On: I52c4ecb70b1ae47e613ba243da5a4d94e5adedf2
Change-Id: I3362a6ebff423016bb367b4b6b322bb41ae08764"
alistairncoles,2017-09-01 14:28:30,https://api.github.com/repos/openstack/swift/git/commits/0e51ac09ada654917cd667f81bec8391f28407d2,0e51ac09ada654917cd667f81bec8391f28407d2,"Cleanup test tempdirs in tearDown

Stop leaking tmp dirs in unit tests

Change-Id: I606e9deeedc7c52a85d270b3cef7dfba13b4f0d3"
tipabu,2017-08-31 23:36:38,https://api.github.com/repos/openstack/swift/git/commits/8ed6e663d5f9827c2cd4928a54b02d2fa244af6c,8ed6e663d5f9827c2cd4928a54b02d2fa244af6c,"Stop clearing req.acl in DLO

This has been pure misdirection since DLO was pulled out of the proxy
server; req.acl is always set by the object controller before calling
swift.authorize.

See TestDlo.test_dlo_referer_on_segment_container in
test/functional/test_dlo.py for proof that we still enforce segment
container ACLs properly.

Change-Id: I5321b5537787fcea126065243f1c4bd5e601181e
Related-Change: Ib3b3830c246816dd549fc74be98b4bc651e7bace"
tipabu,2017-08-30 20:37:41,https://api.github.com/repos/openstack/swift/git/commits/9f5aa3bbd7bc5190a5477fae275738ab7b65a4da,9f5aa3bbd7bc5190a5477fae275738ab7b65a4da,"api-ref: update docs links

Change-Id: I83da881f82faf340d0e394c79f7e9d4df7f34b04"
psachin,2017-08-26 12:06:56,https://api.github.com/repos/openstack/swift/git/commits/fb078631556cfc50fc39728aebabddf18bf4179e,fb078631556cfc50fc39728aebabddf18bf4179e,"Small readability change to test_keystoneauth

Changed assertTrue to assertIsNone for better readability

Change-Id: Ibc83c32ccfb5165abf897a15cf2692414a7f95c3
Signed-off-by: Sachin Patil <psachin@redhat.com>"
alistairncoles,2017-04-26 11:25:55,https://api.github.com/repos/openstack/swift/git/commits/e109c7800fcd22c48800cd6e18943b32b49d5e0b,e109c7800fcd22c48800cd6e18943b32b49d5e0b,"Add probe test for ssync of unexpired metadata to an expired object

Verify that metadata can be sync'd to a frag that has missed a POST
and consequently that frag appears to be expired, when in fact the
POST removed the X-Delete-At header.

Tests the fix added by the Related-Change.

Related-Bug: #1683689
Related-Change: I919994ead2b20dbb6c5671c208823e8b7f513715
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I9af9fc26098893db4043cc9a8d05d772772d4259"
clayg,2017-08-25 21:15:03,https://api.github.com/repos/openstack/swift/git/commits/2e0ca543e8c74fa7e99d79cdd6e8509c58e7dad3,2e0ca543e8c74fa7e99d79cdd6e8509c58e7dad3,"Make X-Backend-Replication consistent for HEAD

Current an X-Backend-Replication GET request for an expired object will
still open the expired datafile and return the object, but HEAD request
with the same headers will 404.  This can lead to some bad assumptions
in probetests and other places where we make direct HEAD requests

N.B. Because SSYNC replication does not make any HEAD requests this
change is immaterial to the correctness of the consistency engine.

Related-Change-Id: I7f90b732c3268cb852b64f17555c631d668044a8
Change-Id: Idc01970b37d1b77e1d48f9c4f4979f63ee771093"
clayg,2017-08-25 21:14:21,https://api.github.com/repos/openstack/swift/git/commits/87eaaebd67e7989426d4be2c184bf5b3f61bb45c,87eaaebd67e7989426d4be2c184bf5b3f61bb45c,"Fix DirectClientExceptions with utf-8 encoded paths

Because the direct_client module uses the buffered_http module it's
requests are already robust to receiving either unicode or utf-8 paths.

The DirectClientException message however encodes the given path with
the device key from a ring node - which having come from a json
de-serialized ring will be a unicode type.  Despite the device key
almost always being only ascii characters; python string interpolation
with any unicode type will always force all binary strings to be
converted to unicode - which will raise an error if any byte strings
includes non-ascii characters.

To maintain robustness in DirectClientException, when the provided path
is not already unicode we decode the bytes as utf-8 before mixing them
with the other unicode strings and then normalize everything back to a
quoted utf-8 byte string.

Change-Id: I162d2e093a3110856d6e1d513de3c7919079c9e7"
tipabu,2017-08-25 19:26:43,https://api.github.com/repos/openstack/swift/git/commits/00ca1ce6fea4feb9ba1ce79be25033fe655918ec,00ca1ce6fea4feb9ba1ce79be25033fe655918ec,"Tolerate swiftclient *not* mutatinng args

Change-Id: If82fe9e1d2da8c5122881f34dfbaaa7944c66265
Related-Change: Ia1638c216eff9db6fbe416bc0570c27cfdcfe730"
gaborantal,2016-07-15 12:18:09,https://api.github.com/repos/openstack/swift/git/commits/87340e5f29905defbbc76ff17ae3db94befcbfe0,87340e5f29905defbbc76ff17ae3db94befcbfe0,"Use more specific asserts in test/unit/account tests

I changed asserts with more specific assert methods.
e.g.: from assertTrue(sth == None) to assertIsNone(*) or
assertTrue(isinstance(inst, type)) to assertIsInstace(inst, type) or
assertTrue(not sth) to assertFalse(sth).

The code gets more readable, and a better description will be shown on fail.

Change-Id: Icdbf3c63fe8dd6db1129023885655a9f7032d4a7"
tipabu,2017-08-22 05:31:59,https://api.github.com/repos/openstack/swift/git/commits/73929539cc39f282c91528c6b8f564640c8ec19a,73929539cc39f282c91528c6b8f564640c8ec19a,"Socket errors don't warrant tracebacks when talking to memcached

Currently, timeouts when talking to memcached cause log lines like

   ERROR:root:Timeout connecting to memcached: 192.168.23.62:11211

Meanwhile, socket errors (which you'd expect to be about as common
as timeouts) cause log lines like

   ERROR:root:Error talking to memcached: 192.168.23.70:11211
   Traceback (most recent call last):
     File ""/usr/lib/pymodules/python2.7/swift/common/memcached.py"", line 293, in set
       (key, flags, timeout, len(value), value))
     File ""/usr/lib/python2.7/dist-packages/eventlet/greenio/base.py"", line 390, in sendall
       tail = self.send(data, flags)
     File ""/usr/lib/python2.7/dist-packages/eventlet/greenio/base.py"", line 384, in send
       return self._send_loop(self.fd.send, data, flags)
     File ""/usr/lib/python2.7/dist-packages/eventlet/greenio/base.py"", line 371, in _send_loop
       return send_method(data, *args)
   error: [Errno 32] Broken pipe

... or ...

   ERROR:root:Error connecting to memcached: 192.168.23.73:11211
   Traceback (most recent call last):
     File ""/opt/ss/lib/python2.7/site-packages/swift/common/memcached.py"", line 239, in _get_conns
       fp, sock = self._client_cache[server].get()
     File ""/opt/ss/lib/python2.7/site-packages/swift/common/memcached.py"", line 135, in get
       fp, sock = self.create()
     File ""/opt/ss/lib/python2.7/site-packages/swift/common/memcached.py"", line 128, in create
       sock.connect((host, int(port)))
     File ""/opt/ss/lib/python2.7/site-packages/eventlet/greenio/base.py"", line 237, in connect
       while not socket_connect(fd, address):
     File ""/opt/ss/lib/python2.7/site-packages/eventlet/greenio/base.py"", line 39, in socket_connect
       raise socket.error(err, errno.errorcode[err])
   error: [Errno 101] ENETUNREACH

... which seems excessive. Now, socket errors are logged as normal
errors, without the tracebacks.

Change-Id: I71a2c4786c0406dbc43b829cad5a0c7e2c45de21"
clayg,2017-08-21 10:15:51,https://api.github.com/repos/openstack/swift/git/commits/63ca3a74ef409c416c49fe7ceeba2792787082e1,63ca3a74ef409c416c49fe7ceeba2792787082e1,"Drop reconstructor stats when worker has no devices

If you're watching (new) node's reconstruction_last time to ensure a
cycle finishes since the last ring rebalance you won't ever see
reconstructors with no devices drop recon stats.

Change-Id: I84c07fc6841119b00d1a74078fe53f4ce637187b"
openstackadmin,2017-08-21 13:47:07,https://api.github.com/repos/openstack/swift/git/commits/26a2361f6bf9b1d269ed5907a26b4c4f31744307,26a2361f6bf9b1d269ed5907a26b4c4f31744307,"Update reno for stable/pike

Change-Id: Ic59d3886b5fc0af10ea53d6d825a4f566402e367"
tipabu,2017-08-18 17:27:13,https://api.github.com/repos/openstack/swift/git/commits/72ed76d84bb38ae923d4d7844b46d1c1a8cd3cb8,72ed76d84bb38ae923d4d7844b46d1c1a8cd3cb8,"Make test assertion more holistic

Previously, introducing an error would yield an accurate failure, but
without much context, like

Traceback (most recent call last):
  File ""/vagrant/swift/test/unit/proxy/controllers/test_base.py"", line 635, in test_headers_to_account_info_storage_policies
    resp['storage_policies'][0]['bytes'], 1002)
KeyError: 'bytes'

Now, we'll have a much larger picture of what's going on:

Traceback (most recent call last):
  File ""/vagrant/swift/test/unit/proxy/controllers/test_base.py"", line 636, in test_headers_to_account_info_storage_policies
    'bytes': 0},
AssertionError: {0: {'object_count': 13, 'container_count': 120}, 1:
{'object_count': 10, 'conta [truncated]... != {0: {'object_count': 13,
'container_count': 120, 'bytes': 1002}, 1: {'object_cou [truncated]...
- {0: {'container_count': 120, 'object_count': 13},
+ {0: {'bytes': 1002, 'container_count': 120, 'object_count': 13},
?      +++++++++++++++

-  1: {'container_count': 20, 'object_count': 10}}
+  1: {'bytes': 0, 'container_count': 20, 'object_count': 10}}
?      ++++++++++++

Related-Change: I800266d15aabcc7b6e0234de3c9b965b5c15a623
Change-Id: I9a4e5d62674c467bca4bc70d5150d918d48aac42"
notmyname,2017-08-18 16:58:53,https://api.github.com/repos/openstack/swift/git/commits/56e081c0a18fee81cdcc3c6e2bb5372c62c5a240,56e081c0a18fee81cdcc3c6e2bb5372c62c5a240,"authors/changelog for 2.15.1

Change-Id: Id5f5467a50119d521fead28faf751c621ce1e4ee"
alistairncoles,2017-06-07 10:33:29,https://api.github.com/repos/openstack/swift/git/commits/9c3c3880916dced3e04165c6a3dd79ec5ebb281b,9c3c3880916dced3e04165c6a3dd79ec5ebb281b,"Improve domain_remap docs

* Make the conditions for remapping clearer
* Mention the path_root
* Mention '-' -> '_' replacement in account names
* Make example consistent with default options

Change-Id: Ifd3f3775bb8b13367d964010f35813018b5b41b3"
tipabu,2017-08-18 00:55:20,https://api.github.com/repos/openstack/swift/git/commits/15e339da1f46c70b5403fe7c7634ed4ba498be0e,15e339da1f46c70b5403fe7c7634ed4ba498be0e,"Fix more X-Delete-At timing issues

Seen in a gate:

======================================================================
2017-08-17 23:10:29.662540 | FAIL: test_GET_but_expired
(test.unit.obj.test_server.TestObjectController)
2017-08-17 23:10:29.662577 |
----------------------------------------------------------------------
2017-08-17 23:10:29.662600 | Traceback (most recent call last):
2017-08-17 23:10:29.662651 |   File ""/home/jenkins/workspace/gate-cross-swift-python27-ubuntu-xenial/test/unit/obj/test_server.py"", line 5754, in test_GET_but_expired
2017-08-17 23:10:29.662677 |     self.assertEqual(resp.status_int, 201)
2017-08-17 23:10:29.662697 | AssertionError: 400 != 201
2017-08-17 23:10:29.662729 | -------------------- >> begin captured stdout << ---------------------
2017-08-17 23:10:29.662769 | test INFO: None - - [17/Aug/2017:23:08:45 +0000] ""PUT /sda1/p/a/c/o"" 201 - ""-"" ""-"" ""-"" 0.0072 ""-"" 6413 -
2017-08-17 23:10:29.662811 | test INFO: None - - [17/Aug/2017:23:08:45 +0000] ""GET /sda1/p/a/c/o"" 200 4 ""-"" ""-"" ""-"" 0.0011 ""-"" 6413 -
2017-08-17 23:10:29.662852 | test INFO: None - - [17/Aug/2017:23:08:45 +0000] ""PUT /sda1/p/a/c/o"" 400 19 ""-"" ""-"" ""-"" 0.0004 ""-"" 6413 -
2017-08-17 23:10:29.662865 |
2017-08-17 23:10:29.662896 | --------------------- >> end captured stdout << ----------------------
2017-08-17 23:10:29.662925 |     '400 != 201' = '%s != %s' % (safe_repr(400), safe_repr(201))
2017-08-17 23:10:29.662956 |     '400 != 201' = self._formatMessage('400 != 201', '400 != 201')
2017-08-17 23:10:29.662981 | >>  raise self.failureException('400 != 201')

Change-Id: I643be9af8f054f33897dd74071027a739eaa2c5c
Related-Change: I10d3b9fcbefff3c415a92fa284a1ea1eda458581
Related-Bug: #1597520"
smerritt,2017-08-14 17:41:31,https://api.github.com/repos/openstack/swift/git/commits/6d160797fc3257942618a7914d526911ebbda328,6d160797fc3257942618a7914d526911ebbda328,"Fix deadlock when logging from a tpool thread.

The object server runs certain IO-intensive methods outside the main
pthread for performance. If one of those methods tries to log, this can
cause a crash that eventually leads to an object server with hundreds
or thousands of greenthreads, all deadlocked.

The short version of the story is that logging.SysLogHandler has a
mutex which Eventlet monkey-patches. However, the monkey-patched mutex
sometimes breaks if used across different pthreads, and it breaks in
such a way that it is still considered held. After that happens, any
attempt to emit a log message blocks the calling greenthread forever.

The fix is to use a mutex that works across different greenlets and
across different pthreads. This patch introduces such a lock based on
an anonymous pipe.

Change-Id: I57decefaf5bbed57b97a62d0df8518b112917480
Closes-Bug: 1710328"
alistairncoles,2017-08-16 10:07:19,https://api.github.com/repos/openstack/swift/git/commits/88252cdfd6c1e446f4d1cde6cc07a9c67b701e65,88252cdfd6c1e446f4d1cde6cc07a9c67b701e65,"Fix flakey EC frag duplication policy test

Fixes test_GET_with_duplicate_but_sufficient_frag_indexes
failing intermittently.

The original non-duplicated-frags version of the test in
TestECObjController verified that the controller would search all
primaries, ignoring repeated fragment indexes and finally find the
last necessary unique fragment on the first handoff. The version of
the test for a duplicated fragments policy in
TestECDuplicationObjController had the final necessary fragment on the
first of the 'duplicate' primaries (index ec_num_unique_fragments + 1)
so there was a chance that it would be found before all of the first
ec_num_unique_fragments had been tried, causing the test to fail as
reported in the linked bug report.

This patch moves the final necessary unique fragment to the first
handoff (index 2 * index ec_num_unique_fragments + 1) and aligns the
test with the intent of the equivalent test in TestECObjController,
so that the two tests can be moved to a single implementation in an
inherited mixin.

test_GET_with_duplicate_but_insufficient_frag is also moved to the
new mixin since the two implementations of that test were also very
similar.

Change-Id: I4d99dea8e941bccb6fa610bab39e38a6976a3721
Closes-Bug: #1710951"
Rajat29,2017-08-16 09:25:58,https://api.github.com/repos/openstack/swift/git/commits/ca56090ba101195b5aff189e56b01ef6ffca8915,ca56090ba101195b5aff189e56b01ef6ffca8915,"Inconsistencies in endpoint definitions

Change-Id: Ie3feea8ed31bfeb9a1047995efc44424071f8224
Closes-Bug: #1709930"
matthewoliver,2017-08-13 23:11:35,https://api.github.com/repos/openstack/swift/git/commits/0fead33ba145554f9aa6d2fdf32356f8fad821cf,0fead33ba145554f9aa6d2fdf32356f8fad821cf,"Add OpenSuse SAIO build instructions

This patch adds OpenSuse to the build a SAIO development page.

OpenSuse's libssl.so naming is different then other Linux distros
and as such it can't simply use pip's cryptography wheel/binary,
which by default is linked to libssl.so.10.
To fix this, --no-binary cryptography was added to pip install:

  pip install --no-binary cryptography -r requirements.txt

Which forces the cryptography module's binding to be compiled
against the correct libssl.so library.

Change-Id: I6a070f33d670edbb887433530c44e2cb509f0c58"
alistairncoles,2017-08-15 18:11:28,https://api.github.com/repos/openstack/swift/git/commits/665e21bbe691196f83a3f2bd2ec43a45df5b1537,665e21bbe691196f83a3f2bd2ec43a45df5b1537,"Use unique body content in EC test objects

Avoid ever having two objects in same test with same etag.

Refactor some common test helper methods to a common superclass.

Change-Id: Ib956c997f8805df1859ebf3582f7ce59c8f65129
Closes-Bug: #1710924"
alistairncoles,2017-08-15 11:37:33,https://api.github.com/repos/openstack/swift/git/commits/a959d24bf5733650c6005412382fe24c65897c8b,a959d24bf5733650c6005412382fe24c65897c8b,"Document keystone role element in container ACL

The use of a keystone role name in container ACLs is supported
and tested. This patch adds documentation.

[1] https://github.com/openstack/swift/blob/fb3d01a974fb7df8cfadc56ff15bdc04b3c90759/swift/common/middleware/keystoneauth.py#L491-L497
[2] test.unit.common.middleware.test_keystoneauth.TestAuthorize.test_authorize_succeeds_for_user_role_in_roles

Change-Id: I77df27393a10f1d8c5a43161fdd4eb08be632566
Closes-Bug: #1705300"
tipabu,2017-08-11 17:34:49,https://api.github.com/repos/openstack/swift/git/commits/e17b921e3973e77932bce05c7a7a126362885c0f,e17b921e3973e77932bce05c7a7a126362885c0f,"Add test for all-nodes-error-limited

Change-Id: I4132c8fceec92dcbb04dd018ed49f1d76899cb25"
tipabu,2017-05-01 19:06:40,https://api.github.com/repos/openstack/swift/git/commits/6f55a5ea94f84b6892aaf20145b1775d6d66be99,6f55a5ea94f84b6892aaf20145b1775d6d66be99,"Always check for unexpected requests in mocked_http_conn

Change-Id: Ie0ea9971129b6d090a0fcb7c5be33acb6c9b512d
Related-Change: Ia72c407247e4525ef071a1728750850807ae8231"
tipabu,2017-01-09 20:00:33,https://api.github.com/repos/openstack/swift/git/commits/0d4d9402431ac7f5d6c7148b8aea6cddaa7d3a67,0d4d9402431ac7f5d6c7148b8aea6cddaa7d3a67,"Make test_get_more_nodes_with_zero_weight_region more robust

...by using a random ring, looking at *all* partitions, and making
assertions about the distribution of how many times we have to call
next().

Change-Id: Ia5feb9396d4bf6fd35f16bbc5280e63022ed2c47"
alistairncoles,2016-09-16 13:31:44,https://api.github.com/repos/openstack/swift/git/commits/7fa9d6e5b4fb74ad95f059742d8844e7c12fa235,7fa9d6e5b4fb74ad95f059742d8844e7c12fa235,"Unset random seed after rebalancing ring

Unit tests use the random module in places to randomise
test inputs, but once the tests in test_builder.py or
test_ring_builder_analyzer.py have been run the random
seed is left in a repeatable state because calls are made
to RingBuilder.balance with a seed value. Consequently,
subsequent calls to random in other tests get repeatable
results from one test run to another.

This patch resets the state of the random module before
returning from RingBuilder.rebalance.

Closes-Bug: #1639755
Change-Id: I4b74030afc654e60452e65b3e0f1b45a189c16e3"
tipabu,2017-03-28 23:26:05,https://api.github.com/repos/openstack/swift/git/commits/d8c7d21cfc76b1bc1b5d74db207fb03c6e7e0a9e,d8c7d21cfc76b1bc1b5d74db207fb03c6e7e0a9e,"Add functests for disallowed COPYs into a versioned container

While we're at it, have copy and copy_account raise ResponseErrors
on failure, similar to cluster_info, update_metadata, containers, info,
files, delete, initialize, read, sync_metadata, write, and post.

Related-Change: Ia8b92251718d10b1eb44a456f28d3d2569a30003
Change-Id: I9ef42d922a6b7dbf253f2f8f5df83965d8f47e0f"
mbjoerkqvist,2016-09-02 12:19:49,https://api.github.com/repos/openstack/swift/git/commits/77bd74da0971b0cb7c415bbe2c6f506f3cdc666d,77bd74da0971b0cb7c415bbe2c6f506f3cdc666d,"Retrieve encryption root secret from Barbican

This patch adds support for retrieving the encryption root secret from
an external key management system. In practice, this is currently
limited to Barbican.

Change-Id: I1700e997f4ae6fa1a7e68be6b97539a24046e80b"
tipabu,2017-07-31 17:24:40,https://api.github.com/repos/openstack/swift/git/commits/8d05325f03a6ca91cf886c0680455c962243ffb9,8d05325f03a6ca91cf886c0680455c962243ffb9,"Test reconstruct() with no EC policies

We have a test for get_local_devices, but let's make some broader
assertions as well.

Related-Bug: #1707595
Change-Id: Ifa696207ffdb3b39650dfeaa3e7c6cfda94050db"
bloodeagle40234,2017-07-31 07:20:11,https://api.github.com/repos/openstack/swift/git/commits/45cc1d02d06f33530cefe742465828f5d0d5cd12,45cc1d02d06f33530cefe742465828f5d0d5cd12,"Fix reconstructer to be able to run non ec policy environment

Since the related change, object-reconstructor gathers the local devices
for ec policy via get_local_devices method but the method causes TypeError when
attempting *reduce* for empty set list. the list can be empty when no EC config
found in swift.conf.

This patch fixes the get_local_devices to return empty set even when no ec config
in swift.conf without errors.

Co-Authored-By: Kirill Zaitsev <k.zaitsev@me.com>
Change-Id: Ic121fb547966787a43f9eae83c91bb2bf640c4be
Related-Change: 701a172afac37229b85ea762f20428f6f422d29b
Closes-Bug: #1707595"
amotoki,2017-07-18 23:28:18,https://api.github.com/repos/openstack/swift/git/commits/d18e847c942ec782bc11016a698f998e85dd6d36,d18e847c942ec782bc11016a698f998e85dd6d36,"Turn on warning-is-error in doc build

* Fixes warnings in RST file
* Suppress warning log from pyeclib during the doc build.
  pyeclib emits a warning message on an older liberasurecode [1]
  and sphinx treats this as error (when warning-is-error is set).
  There is no need to check warnings during the doc build,
  so we can safely suppress the warning.

This is a part of the doc migration community-wide effort.
http://specs.openstack.org/openstack/docs-specs/specs/pike/os-manuals-migration.html

[1] https://github.com/openstack/pyeclib/commit/d163972b

Change-Id: I9adaee29185a2990cc3985bbe0dd366e22f4f1a2"
notmyname,2017-07-20 22:43:51,https://api.github.com/repos/openstack/swift/git/commits/dfd0ea20a156895bb91582fb861ebd430afc0054,dfd0ea20a156895bb91582fb861ebd430afc0054,"2.15.0 authors and changelog update

Change-Id: I8ee9d657ebc030b9335cb53a51951c118539cb91"
notmyname,2017-07-27 20:58:36,https://api.github.com/repos/openstack/swift/git/commits/9155e6f0d717c4c9f7cb5b472057d9617e9aab71,9155e6f0d717c4c9f7cb5b472057d9617e9aab71,"added .htaccess redirect file for docs

also added a test redirect so we know if things are working

Change-Id: I8fd848c23053e52e45fa55637f280124eba74927"
alistairncoles,2017-07-27 13:13:08,https://api.github.com/repos/openstack/swift/git/commits/56a18ac9b71e54eb16640adf1aaf8798ac275505,56a18ac9b71e54eb16640adf1aaf8798ac275505,"Add unit test for ObjectReconstructor.is_healthy

Add a test that verifies that get_all_devices does
fetch devices from the ring.

Related-Change: I28925a37f3985c9082b5a06e76af4dc3ec813abe

Change-Id: Ie2f83694f14f9a614b5276bbb859b9a3c0ec5dcb"
clayg,2017-06-03 00:47:25,https://api.github.com/repos/openstack/swift/git/commits/701a172afac37229b85ea762f20428f6f422d29b,701a172afac37229b85ea762f20428f6f422d29b,"Add multiple worker processes strategy to reconstructor

This change adds a new Strategy concept to the daemon module similar to
how we manage WSGI workers.  We need to leverage multiple python
processes to get the concurrency properties we need.  More workers will
rebalance much faster on dense chassis with many devices.

Currently the default is still only one process, and no workers.  Set
reconstructor_workers in the [object-reconstructor] section to some
whole number <= the number of devices on a node to get that many
reconstructor workers.

Each worker will operate on a different subset of disks.

Once mode works as before, but tends to want to update recon drops a
little bit more.

If you change the rings, the strategy will shutdown workers and spawn
new ones.

You can kill the worker pids and the daemon strategy will respawn them.

New per-disk reconstructor stats are dumped to recon under the
object_reconstruction_per_disk key.  To maintain legacy compatibility
and replication monitoring based on cycle times they are aggregated
every stats_interval (default 5 mins).

Change-Id: I28925a37f3985c9082b5a06e76af4dc3ec813abe"
bloodeagle40234,2017-07-26 10:12:55,https://api.github.com/repos/openstack/swift/git/commits/93b8cf52ebb985e27c12c0c72bc153298e0c9273,93b8cf52ebb985e27c12c0c72bc153298e0c9273,"Small fixup for CooperativeRingBuilder

This is follow up for the related change [1].

Just adding small docs and removing unnecessary arg in the test.

[1] Related-Change: I1b30cb3d776be441346a4131007d2487a5440a81
Change-Id: I48c21b6028bd2ef454e084032a2bd8c0d4239e4b"
alistairncoles,2017-07-26 11:53:46,https://api.github.com/repos/openstack/swift/git/commits/b599b48f69d6c6b192bd0ae7ae4a493434761958,b599b48f69d6c6b192bd0ae7ae4a493434761958,"Clarify usage of replicator and reconstructor override options

Clarify in usage statement and man pages that CLI override options for
swift-object-reconstructor and swift-object-replicator only have
effect when --once is used.

Also add a link to object reconstructor source code docs to the doc
index page for consistency with the other object services.

Change-Id: If348b340d59a672d3a19d4df231ebdb74f4aed51"
tipabu,2017-07-22 00:42:37,https://api.github.com/repos/openstack/swift/git/commits/31f4794c12fabc6fff5d6305b1ef186ce63a9159,31f4794c12fabc6fff5d6305b1ef186ce63a9159,"Close stdout *after* binding ports

Otherwise probe tests think services are up when they aren't actually
available yet.

Related-Change: I045f4c9aa2c07cdc5ed95afd028540f1b3874637
Change-Id: Iab923c4f48ac7a5dd41237761ed91d01a59dc77c"
tipabu,2017-07-22 00:21:49,https://api.github.com/repos/openstack/swift/git/commits/c211141c27650661d4685cd84e25da2c629be76f,c211141c27650661d4685cd84e25da2c629be76f,"Add ever_rebalanced property to RingBuilder

...to formalize an otherwise-unwritten contract and get
CooperativeRingBuilder using more ""public"" interfaces.

Change-Id: Ib6666728eabeff948bb53dff054a69bada47556e"
alistairncoles,2017-06-20 07:45:05,https://api.github.com/repos/openstack/swift/git/commits/71ec83f414e81dd6d44ea85da14a7d64c57b5a2b,71ec83f414e81dd6d44ea85da14a7d64c57b5a2b,"Ring rebalance respects co-builders' last_part_moves

- Add a CooperativeRingBuilder subclass of RingBuilder. The subclass takes
  a reference to a parent CompositeRingBuilder which is consulted about
  whether a part can be moved during rebalance. The parent builder in turn
  consults all component CooperativeRingBuilder's to decide if a part can
  be moved.

- Make CompositeRingBuilder load CooperativeRingBuilder instances.

- Add rebalance() method to CompositeRingBuilder class.

- Add a load_components() method to CompositeRingBuilder class.

- Change the CompositeRingBuilder compose() method to NOT by default
  raise a ValueError if component builders have not been modified since
  last loaded. With the load_components method being added it makes
  less sense insist by default on loaded components being modified, and
  it is desirable to have the same semantic for all methods that load
  components. Previously it has been necessary to use the 'force' flag
  with compose() to prevent these errors being raised, which has the
  unfortunate side effect of also disabling all other checks on
  component builders. A new 'require_modified' parameter is added to
  compose() which defaults to False but can be set to True if the
  previous default behaviour is required.

Change-Id: I1b30cb3d776be441346a4131007d2487a5440a81"
alistairncoles,2017-07-20 11:02:01,https://api.github.com/repos/openstack/swift/git/commits/5b10cf530bd1cb2624711f53e0ae45be30b70cb2,5b10cf530bd1cb2624711f53e0ae45be30b70cb2,"Add more structure to the deployment guide

Previously it was hard to navigate to a particular config section in
the deployment guide, and not possible to provide a link directly to
one section.

This patch makes each config section a heading so that it appears in
navigation tables and can be easily linked to. A list of config
sections is also added at the start of each server section.

Change-Id: Iecb0637fde521600a9163fa66b3dbdc176a71dff
Related-Bug: #1626290"
alistairncoles,2017-07-20 10:40:17,https://api.github.com/repos/openstack/swift/git/commits/9c5628b4f1cbb315145070cd31da6593dadc9e47,9c5628b4f1cbb315145070cd31da6593dadc9e47,"Add reconstructor section to deployment guide

Change-Id: I062998e813718828b7adf4e7c3f877b6a31633c0
Closes-Bug: #1626290"
tipabu,2017-07-20 00:30:40,https://api.github.com/repos/openstack/swift/git/commits/708fdec831d680c6a94602c705803735ba30389b,708fdec831d680c6a94602c705803735ba30389b,"functests: Only convert headers that should be ints to be ints

Change-Id: I675d05d65b9c3c3ef18684c175d227f662b38f67
Closes-Bug: #1641216"
TuanLAF,2017-07-14 09:35:41,https://api.github.com/repos/openstack/swift/git/commits/6193ed83123b575729c1b27285cd42e299a73407,6193ed83123b575729c1b27285cd42e299a73407,"Update URL home-page in documents according to document migration

Change-Id: I9590d129e7d5e72d955983f3ce38b4e2d44c95b1"
alistairncoles,2017-07-17 13:29:53,https://api.github.com/repos/openstack/swift/git/commits/c2e59b9b8b43e5846c0fe20cfd7810bbc0291cad,c2e59b9b8b43e5846c0fe20cfd7810bbc0291cad,"Make dict deletion idempotent in dump_recon_cache

Calling dump_recon_cache with a key mapped to an empty dict value
causes the key to be removed from the cache entry. Doing the same
again causes the key to be added back and mapped an empty dict, and
the key continues to toggle as calls are repeated. This behavior is
seen on the Related-Bug report.

This patch fixes dump_recon_cache to make deletion of a key
idempotent. This fix is needed for the Related-Change which makes use
of empty dicts with dump_recon_cache to clear unwanted keys from the
cache.

The only caller that currently set empty dict values is
obj/auditor.py where the current intended behavior would appear to be
as per this patch.

Related-Change: I28925a37f3985c9082b5a06e76af4dc3ec813abe
Related-Bug: #1704858
Change-Id: If9638b4e7dba0ec2c7bd95809cec6c5e18e9301e"
tipabu,2017-07-17 16:53:39,https://api.github.com/repos/openstack/swift/git/commits/0f82ea18710bb86f0ae5490ada7400fa106ae290,0f82ea18710bb86f0ae5490ada7400fa106ae290,"Remove unnecessary exception handling

If we've got a unicode string that needs to be a byte string, encode()ing
as UTF-8 will *always* succeed.

Change-Id: I86e5a76923343149984fe9d962ce41e69e570fc1"
tipabu,2017-07-12 22:30:43,https://api.github.com/repos/openstack/swift/git/commits/95ff34d4edc56b76e108582ba6720d1cd74a3ce4,95ff34d4edc56b76e108582ba6720d1cd74a3ce4,"Add X-Copy-From-Account to api-ref

While Donagh was kind enough to add Destination-Account in the related
change, we still hadn't documented the PUT-with-X-Copy-From equivalent.

Change-Id: I156ae2d8664873d3f6cc1f742bf950913fd462b0
Related-Change: I315b4e550b7d10880fbc00fce9311127ba609c2d
Closes-Bug: 1367975"
cschwede,2016-07-20 09:51:24,https://api.github.com/repos/openstack/swift/git/commits/2410b616bba2d68914c2c00e95b2f7c30f391e1b,2410b616bba2d68914c2c00e95b2f7c30f391e1b,"Fix swiftdir option and usage of storage policy aliases

If swift-recon/swift-get-nodes/swift-object-info is used with the
swiftdir option they will read rings from the given directory; however
they are still using /etc/swift/swift.conf to find the policies on the
current node.

This makes it impossible to maintain a local swift.conf copy (if you
don't have write access to /etc/swift) or check multiple clusters from
the same node.

Until now swift-recon was also not usable with storage policy aliases,
this patch fixes this as well.

Closes-Bug: 1577582
Closes-Bug: 1604707
Closes-Bug: 1617951
Co-Authored-By: Alistair Coles <alistairncoles@gmail.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Change-Id: I13188d42ec19e32e4420739eacd1e5b454af2ae3"
tipabu,2017-07-12 19:14:45,https://api.github.com/repos/openstack/swift/git/commits/13a07aa77a490a38887c7c7cc5845408457e16e8,13a07aa77a490a38887c7c7cc5845408457e16e8,"Misc doc cleanup

* Change some absolute URLs to internal links
* Fix some bulletted list indentation
* Choose a better lexer for some syntax highlighting
* Use ``inline code`` instead of `italics` for some example command
  lines
* Change some quoted paragraphs that only included inlined code to be
  proper code blocks

Change-Id: Iaaa7eefb690122f5af9dcb1c871358c22335c743"
tipabu,2017-07-07 02:07:14,https://api.github.com/repos/openstack/swift/git/commits/63c4215994dec4f3f819357401263cd34e12b448,63c4215994dec4f3f819357401263cd34e12b448,"Fix rst for link

Change-Id: I2f63ce16ae67277504a47e68c7dca3c3412fe92c"
tipabu,2017-05-02 17:53:49,https://api.github.com/repos/openstack/swift/git/commits/fa83dd1ab44e963ce17b7c3842714bb9135d9400,fa83dd1ab44e963ce17b7c3842714bb9135d9400,"Fix intermittent failure in test_POST_but_expired

It was rare (I saw it once in 8000 runs), but occassionally the clock would
roll over and cause us to PUT an X-Delete-At that matched the current time.

Change-Id: I10d3b9fcbefff3c415a92fa284a1ea1eda458581
Closes-Bug: #1597520"
alistairncoles,2017-07-11 09:41:35,https://api.github.com/repos/openstack/swift/git/commits/74700eb890aaa595af7134276eb6a80110bed92d,74700eb890aaa595af7134276eb6a80110bed92d,"Fix StopIteration noise in obj/test_replicator.py

Insufficient arguments are passed to create MockProcess instances
resulting in StopIteration errors being raised during the repeated
replicator run_once cycles added in [1].  The test passes because
the replicator just logs these exceptions, but the logger noise is
distracting when running the test [2].

[1] Related-Change: Ib5c9dd17e40150450ec57a728ae8652fbc730af6
[2] nosetests ./test/unit/obj/test_replicator.py:\
TestObjectReplicator.test_run_once -s

Change-Id: I36208e93c81744068a3454577a30d0c5a8d9cb9b"
bloodeagle40234,2017-07-11 01:58:36,https://api.github.com/repos/openstack/swift/git/commits/65b6b121656974453944cbc30922caf43f92f146,65b6b121656974453944cbc30922caf43f92f146,"Add small note for handoffs_only acceleration

The related change benefitts us greatly with decreasing hash
calculations for ignored partitions when handoffs_only mode is on
however, at the same time, it has been not able to care misplaced
fragments in the primary partition so that add the notation into the
code to let us know as ""this is by design"".

Change-Id: I16e3c1170af710e2a6ecc0b7267ab369450095bf
Related-Change: 44c63c69909e532e383017e7c900e4b7d13e0165"
tipabu,2017-05-24 18:21:31,https://api.github.com/repos/openstack/swift/git/commits/20a0d6734005c746b8ab4e4d8f263e2c4c74f56f,20a0d6734005c746b8ab4e4d8f263e2c4c74f56f,"Clean up some assertions in test_reconstructor

While reviewing https://review.openstack.org/#/c/464982/ I noticed that
assertions like

    self.assertEqual(len(captured_ssync), 4)

aren't terribly helpful when they fail.

Change-Id: I5c5df7ed60e58c1d1bca5a5bfef9352a39a41f2f"
notmyname,2017-07-07 17:52:39,https://api.github.com/repos/openstack/swift/git/commits/239dfb559ca3b49bdce71c45f12201d79d9741fa,239dfb559ca3b49bdce71c45f12201d79d9741fa,"moved install guide and removed tox env definition

Change-Id: I966f849804cd5eeeae566bc7e732c7bf56bc9eaf"
clayg,2017-06-07 18:36:43,https://api.github.com/repos/openstack/swift/git/commits/44c63c69909e532e383017e7c900e4b7d13e0165,44c63c69909e532e383017e7c900e4b7d13e0165,"Don't rehash primaries in reconstructor handoffs_only mode

The reconstructor handoffs_only needs to aggressively avoid erroneous
I/O related to rehash of primary suffixes.

While in handoffs_only mode the reconstructor won't even look at primary
partitions.

This has a *huge* impact on cycle time once the node has completed
processing handoffs; which results in a much faster and stronger signal
that that it's either time to rebalance again or turn off handoffs_only.

Related-Change-Id: Idde4b6cf92fab6c45f2c0c2733277701eb436898

Change-Id: If4bbb778d511efe13713590639c8b91615556f22"
tipabu,2017-07-07 17:33:54,https://api.github.com/repos/openstack/swift/git/commits/d112b7d29dec6fd224e807550d5d685a20685a76,d112b7d29dec6fd224e807550d5d685a20685a76,"First pass at admin-guide cleanup

Change-Id: I005232d95a3e1d181271eef488a828ad330e6006"
notmyname,2017-07-06 00:04:26,https://api.github.com/repos/openstack/swift/git/commits/4cb76a41ce0562a458154be1628b33688a0df802,4cb76a41ce0562a458154be1628b33688a0df802,"docs migration from openstack-manuals

Context for this is at
https://specs.openstack.org/openstack/docs-specs/specs/pike/os-manuals-migration.html

Change-Id: I9a4da27ce1d56b6406e2db979698038488f3cf6f"
clayg,2017-06-30 23:45:43,https://api.github.com/repos/openstack/swift/git/commits/58d781259641d3fc64adb2bfb31d603dc04159bf,58d781259641d3fc64adb2bfb31d603dc04159bf,"fix flakey time for test_default_sorted_output

Change-Id: Ib7f0c22336e8354d4f46e2343149495bef382f9c"
clayg,2017-06-09 22:29:21,https://api.github.com/repos/openstack/swift/git/commits/14b07ca72621733689435b5a8892e873e02f32d2,14b07ca72621733689435b5a8892e873e02f32d2,"Untangle ServersPerPortStrategy.bind_ports

The ""method"" `bind_ports` only gets called once on startup - and *during
it's execution* it gets mutated to a list inside `_reload_bind_ports` -
afterwards all references are only to the attribute `bind_ports`.

It 100% works, but at first glance seems dubious.  Renaming the method
do_bind_ports seems more obvious.

Change-Id: Ic01621e478f1140644e26ba41715d93963a00945"
clayg,2017-06-28 22:40:22,https://api.github.com/repos/openstack/swift/git/commits/806b18c6f54f1c3d6479f8c7eb99683009300eb5,806b18c6f54f1c3d6479f8c7eb99683009300eb5,"Extend device tier pretty print normalization

* use pretty device tier normalization in additional debug message
* refactor pretty device tier normalization for consistency
* unittest asserting consistency

Change-Id: Ide32e35ff9387f1cc1e4997eb133314d06b794f3"
smerritt,2017-06-28 21:50:52,https://api.github.com/repos/openstack/swift/git/commits/62509cc8f45e161087501de43646b7db3b7b7097,62509cc8f45e161087501de43646b7db3b7b7097,"Improve debug logging from ring builder.

The gather/place debug logs used to just contain device IDs; now they
include region, zone, and IP. This makes it easier to see what's going
on when debugging rebalance operations.

Change-Id: I6314e327973c57a34b88ebbb4d3b1594dbacd357"
matthewoliver,2017-06-18 23:39:33,https://api.github.com/repos/openstack/swift/git/commits/e11a38c63af97df83b296e836fdd403b0ac3af41,e11a38c63af97df83b296e836fdd403b0ac3af41,"Bind SAIO services on different loopback addresses

Currently all devices in the ring and all services in a SAIO
all bind to the same loopback address 127.0.0.1. But this
breaks servers_per_port if you want to do any testing on that.

This change binds each service to a different loopback address
and updates the rings (remakerings) accordingly.

To make sure rysncd binds correctly the bind address needed
to be changed to listen on all addresses (0.0.0.0).

Change-Id: I7e77434f275df1e2699de495d8b622b90157a9d7"
lingxiankong,2017-06-02 03:44:52,https://api.github.com/repos/openstack/swift/git/commits/831eb6e3ce317d8209178dd7e4dee509edd179cf,831eb6e3ce317d8209178dd7e4dee509edd179cf,"Write-affinity aware object deletion

When deleting objects in multi-region swift delpoyment with write
affinity configured, users always get 404 when deleting object before
it's replcated to approriate nodes.

This patch adds a config item 'write_affinity_handoff_delete_count' so
that operator could define how many local handoff nodes should swift
send request to get more candidates for the final response, or by
default just leave it to swift to calculate the appropriate number.

Change-Id: Ic4ef82e4fc1a91c85bdbc6bf41705a76f16d1341
Closes-Bug: #1503161"
smerritt,2016-03-08 02:18:35,https://api.github.com/repos/openstack/swift/git/commits/d9c4913e3b1aaba378d4786ddfefa6265c195f71,d9c4913e3b1aaba378d4786ddfefa6265c195f71,"Make eventlet.tpool's thread count configurable in object server

If you're running servers_per_port > 0 and threads_per_disk = 0 (as it
should be with servers_per_port on), each object-server process will
have 20 IO threads waiting around to service eventlet.tpool
calls. This is far too many; with servers_per_port, there's no real
benefit to having so many IO threads.

This commit makes it so that, when servers_per_port > 0, each object
server defaults to having one main thread and one IO thread.

Also, eventlet's tpool size is now configurable via the object-server
config file. If a tpool size is set, that's what we'll use regardless
of servers_per_port. This allows operators with an excess of threads
to remove some regardless of servers_per_port.

Change-Id: I8f8914b7e70f2510393eb7c5e6be9708631ac027
Closes-Bug: 1554233"
cschwede,2016-02-29 13:14:56,https://api.github.com/repos/openstack/swift/git/commits/3820e674483ca171dd4bbed63654f2205a2f5490,3820e674483ca171dd4bbed63654f2205a2f5490,"Add tests for Recon's object replication_time time unit

Adding a simple test to avoid regression.

Change-Id: I1503af414b5c557a8a2e2c410b3938e97a644a2e"
alistairncoles,2017-06-20 10:47:00,https://api.github.com/repos/openstack/swift/git/commits/3cccd5a0edd39a99e3eb5405c90c803377b06db5,3cccd5a0edd39a99e3eb5405c90c803377b06db5,"Make bin/swift-get-nodes executable

Change-Id: I510e05f4cf16cc6740f673c27cea6bc3899938c1"
onovy,2017-03-21 19:10:12,https://api.github.com/repos/openstack/swift/git/commits/a8bc94c7e3363a27dd98c872132eb923d9ae7266,a8bc94c7e3363a27dd98c872132eb923d9ae7266,"Replace slowdown option with *_per_second option

container and object updaters sleeps ""slowdown"" (default 0.01) seconds
after every processed container/object. Because time.sleep call adds overhead,
use ratelimit_sleep from common.utils instead. Same as in auditor.

Change-Id: I362aa0f13c78ad03ce1f76ee0257b0646f981212"
tipabu,2017-05-25 16:40:47,https://api.github.com/repos/openstack/swift/git/commits/2c3ac543f4106171997752d5784732bda6e6bf3e,2c3ac543f4106171997752d5784732bda6e6bf3e,"Require that known-bad EC schemes be deprecated

We said we were going to do it, we've had two releases saying we'd do
it, we've even backported our saying it to Newton -- let's actually do
it.

Upgrade Consideration
=====================

Erasure-coded storage policies using isa_l_rs_vand and nparity >= 5 must
be configured as deprecated, preventing any new containers from being
created with such a policy. This configuration is known to harm data
durability. Any data in such policies should be migrated to a new
policy. See https://bugs.launchpad.net/swift/+bug/1639691 for more
information.

UpgradeImpact
Related-Change: I50159c9d19f2385d5f60112e9aaefa1a68098313
Change-Id: I8f9de0bec01032d9d9b58848e2a76ac92e65ab09
Closes-Bug: 1639691"
tipabu,2017-06-15 23:08:43,https://api.github.com/repos/openstack/swift/git/commits/808ff4fff74415d94d620f74501d28d38f451990,808ff4fff74415d94d620f74501d28d38f451990,"Ignore all auditor_status_*.json files in reconstructor

...just like we do for the replicator. This allows third parties to define
custom audit types that re-use the object_audit_location_generator API
without having the reconstructor yell at them.

Change-Id: I4372a1712a112705c1f906386b1cb55901256295
Related-Change: I2f3d0bd2f1e242db6eb263c7755f1363d1430048
Related-Change: Ib15a0987288d9ee32432c1998aefe638ca3b223b"
cschwede,2016-07-04 16:21:54,https://api.github.com/repos/openstack/swift/git/commits/e1140666d6bac03cc11d27314761e6fb670c4c75,e1140666d6bac03cc11d27314761e6fb670c4c75,"Add support to increase object ring partition power

This patch adds methods to increase the partition power of an existing
object ring without downtime for the users using a 3-step process. Data
won't be moved to other nodes; objects using the new increased partition
power will be located on the same device and are hardlinked to avoid
data movement.

1. A new setting ""next_part_power"" will be added to the rings, and once
the proxy server reloaded the rings it will send this value to the
object servers on any write operation. Object servers will now create a
hard-link in the new location to the original DiskFile object. Already
existing data will be relinked using a new tool in the new locations
using hardlinks.

2. The actual partition power itself will be increased. Servers will now
use the new partition power to read from and write to. No longer
required hard links in the old object location have to be removed now by
the relinker tool; the relinker tool reads the next_part_power setting
to find object locations that need to be cleaned up.

3. The ""next_part_power"" flag will be removed.

This mostly implements the spec in [1]; however it's not using an
""epoch"" as described there. The idea of the epoch was to store data
using different partition powers in their own namespace to avoid
conflicts with auditors and replicators as well as being able to abort
such an operation and just remove the new tree.  This would require some
heavy change of the on-disk data layout, and other object-server
implementations would be required to adopt this scheme too.

Instead the object-replicator is now aware that there is a partition
power increase in progress and will skip replication of data in that
storage policy; the relinker tool should be simply run and afterwards
the partition power will be increased. This shouldn't take that much
time (it's only walking the filesystem and hardlinking); impact should
be low therefore. The relinker should be run on all storage nodes at the
same time in parallel to decrease the required time (though this is not
mandatory). Failures during relinking should not affect cluster
operations - relinking can be even aborted manually and restarted later.

Auditors are not quarantining objects written to a path with a different
partition power and therefore working as before (though they are reading
each object twice in the worst case before the no longer needed hard
links are removed).

Co-Authored-By: Alistair Coles <alistair.coles@hpe.com>
Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>

[1] https://specs.openstack.org/openstack/swift-specs/specs/in_progress/
increasing_partition_power.html

Change-Id: I7d6371a04f5c1c4adbb8733a71f3c177ee5448bb"
tipabu,2017-06-15 20:58:18,https://api.github.com/repos/openstack/swift/git/commits/0b60b0bd7ebfa84007515cc76cc5077e83cf2767,0b60b0bd7ebfa84007515cc76cc5077e83cf2767,"Close all versioned_writes subrequests' app_iters

While we're at it, drop some unused expect_exception code from
test_versioned_writes.py

Change-Id: Id232880c7259839159c057471b61083d5862d189
Related-Change: I430c48c4a81e8392fa271160bcbc1817ef0a88f7"
tipabu,2017-05-16 21:33:31,https://api.github.com/repos/openstack/swift/git/commits/b5ee8c88d09edc5579b139f0dfe5afe6b455ff15,b5ee8c88d09edc5579b139f0dfe5afe6b455ff15,"Ring doc cleanups

Change-Id: Ie51ea5c729341da793887e1e25c1e45301a96751"
bloodeagle40234,2017-05-25 07:44:58,https://api.github.com/repos/openstack/swift/git/commits/066f44323dd558f5ea9edf800fa59b93b2df940e,066f44323dd558f5ea9edf800fa59b93b2df940e,"Follow up for affinity config per policy

This changes:
- Add assertions for write_affinity values in load_app tests
- Add a test case that policy override read_affinity default by timing
  strategy
- Avoid 'scope' but it's 'label'

Related-Change: I3f718f425f525baa80045ba067950c752bcaaefc
Change-Id: Ia8262490895d60da345f3679fc53653b2c2a2b3e"
clayg,2017-06-13 03:34:38,https://api.github.com/repos/openstack/swift/git/commits/4c7839d256b10753f98f6203703f57c0afdd21ac,4c7839d256b10753f98f6203703f57c0afdd21ac,"More Global EC doc updates

Soften the language about inefficiency on read and strengthen the
language encouraging the use of read affinity and composite rings.

Change-Id: Idc81a8c71e74ae28d384759700c5268d77ae3c85"
alistairncoles,2017-05-25 11:46:35,https://api.github.com/repos/openstack/swift/git/commits/966525235249ccd76e37074ed37b21370074d42f,966525235249ccd76e37074ed37b21370074d42f,"Update Global EC docs with reference to composite rings

* In light of the composite rings feature being added [1],
  downgrade the warnings about EC Duplication [2] being
  experimental.

* Add links from Global EC docs to composite rings and
  per-policy proxy config features.

* Add discussion of using EC duplication with composite
  rings.

* Update Known Issues.

[1] Related-Change: I0d8928b55020592f8e75321d1f7678688301d797
[2] Related-Change: Idd155401982a2c48110c30b480966a863f6bd305

Change-Id: Id97a4899255945a6eaeacfef12fd29a2580588df"
MahatiC,2017-03-01 17:48:09,https://api.github.com/repos/openstack/swift/git/commits/188c07e12ab49ce71a76f2426a943a8f4265d374,188c07e12ab49ce71a76f2426a943a8f4265d374,"Limit number of revert tombstone SSYNC requests

Revert tombstone only parts try to talk to all primary nodes - this
fixes it to randomize selection within part_nodes. Corresponding probe
test is modified to reflect this change.

The primary improvement of this patch is the reconstuctor at a handoff
node is being able to delete local tombstones when it succeeds to sync
to less than all primary nodes. (Before this patch, it requires all
nodes are responsible for the REVERT requests)

The number of primary nodes to communicate with the reconstructor can be
in dicsussion more but, right now with this patch, it's (replicas - k + 1)
that is able to prevent stale read.

*BONUS*

- Fix mis-testsetting (was setting less replicas than ec_k + ec_m)
  for reconstructor ring in the unit test

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I05ce8fe75f1c4a7971cc8995b003df818b69b3c1
Closes-Bug: #1668857"
clayg,2017-06-07 23:21:08,https://api.github.com/repos/openstack/swift/git/commits/6687d2fcd0b9172e7a1ab4ec35fb533a5bcce3f3,6687d2fcd0b9172e7a1ab4ec35fb533a5bcce3f3,"Cleanup db replicator probetest

Use a manager and config_number helper for clarity - then make a one
last assertion on the final consistent state.

Change-Id: I5030c314076003d17c41b8b136bcbda252474bad
Related-Change-Id: Icdf0a936fc456c5462471938cbc365bd012b05d4"
bloodeagle40234,2017-06-07 07:44:41,https://api.github.com/repos/openstack/swift/git/commits/c23b6db264bf1a268ac8d50da5b2278081334e2e,c23b6db264bf1a268ac8d50da5b2278081334e2e,"Use config_number method instead of node_id + 1

Change-Id: I596a2ac947f7e5f9c0cb3286779ece5e40feefd0"
lingyongxu,2017-06-07 03:37:01,https://api.github.com/repos/openstack/swift/git/commits/ee9458a250cb108e84eb5d02788cab002f0fca8b,ee9458a250cb108e84eb5d02788cab002f0fca8b,"Using assertIsNone() instead of assertEqual(None)

Following OpenStack Style Guidelines:
[1] http://docs.openstack.org/developer/hacking/#unit-tests-and-assertraises
[H203] Unit test assertions tend to give better messages for more specific
assertions. As a result, assertIsNone(...) is preferred over
assertEqual(None, ...) and assertIs(..., None)

Change-Id: If4db8872c4f5705c1fff017c4891626e9ce4d1e4"
lingyongxu,2017-06-07 01:07:59,https://api.github.com/repos/openstack/swift/git/commits/8d6eb3677958245d71682d83ac621ac3fe6d00a0,8d6eb3677958245d71682d83ac621ac3fe6d00a0,"Using assertIsNone() instead of assertEqual(None)

Following OpenStack Style Guidelines:
[1] http://docs.openstack.org/developer/hacking/#unit-tests-and-assertraises
[H203] Unit test assertions tend to give better messages for more specific
assertions. As a result, assertIsNone(...) is preferred over
assertEqual(None, ...) and assertIs(..., None)

Change-Id: I5b5900c509956cf13ec3d1f2105fc7c89531f22a"
tipabu,2017-05-30 21:51:36,https://api.github.com/repos/openstack/swift/git/commits/9295ba8e771247d3bdb658336de1712691b1b588,9295ba8e771247d3bdb658336de1712691b1b588,"Add validation for sorting_method values

Change-Id: I6449fb21fd35a5b5884062185b3df204f1e06b3d"
tipabu,2017-06-01 21:07:54,https://api.github.com/repos/openstack/swift/git/commits/d51ecb4ecc559bf4628159edc2119e96c05fe6c5,d51ecb4ecc559bf4628159edc2119e96c05fe6c5,"Remove threads_per_disk from object-server.conf manpages

That option was removed entirely in 2.8.0.

Change-Id: Ib40f816936429a78e622d3737bb0b064225d2d44
Related-Change: Ie76be5c8a74d60a1330627caace19e06d1b9383c"
tipabu,2017-05-12 14:43:30,https://api.github.com/repos/openstack/swift/git/commits/849d204c596c9089dab606ece72c84092ad156ca,849d204c596c9089dab606ece72c84092ad156ca,"domain_remap: be more careful about client-path mangling

The root_path option for domain_remap seems to serve two purposes:
 - provide the first component (version) for the backend request
 - be an optional leading component for the client request, which
   should be stripped off

As a result, we have mappings like:

 c.a.example.com/     -> /v1/AUTH_a/c/
 c.a.example.com/o    -> /v1/AUTH_a/c/o
 c.a.example.com/v1/o -> /v1/AUTH_a/c/o

Currently, we don't really care about whether there was a full- or
partial-match in that first component, leading to mappings like

 c.a.example.com/v1o  -> /v1/AUTH_a/c/o

If we're going to continue supporting that second function, we should
only consider full-matches, so we'll have

 c.a.example.com/v1o  -> /v1/AUTH_a/c/v1o

Change-Id: Ibdc97bb8daf117ad46177617f170d03e481b0007"
tipabu,2017-05-23 23:08:23,https://api.github.com/repos/openstack/swift/git/commits/5ecf828b17cf01291ad5c9fafea3c7ddb621af18,5ecf828b17cf01291ad5c9fafea3c7ddb621af18,"Follow-up for per-policy proxy configs

* Only use one StringIO in ConfigString
* Rename the write_affinity_node_count function to be
  write_affinity_node_count_fn
* Use comprehensions instead of six.moves.filter
* Rename OverrideConf to ProxyOverrideOptions
* Make ProxyOverrideOptions's __repr__ eval()able
* Various conf -> options renames
* Stop trying to handle a KeyError that should never come up
* Be explicit about how deep we need to copy in proxy/test_server.py
* Drop an unused return value
* Add a test for a non-""proxy-server"" app name
* Combine bad-section-name tests
* Try to clean up (at least a little) a self-described ""hokey test""

Related-Change: I3f718f425f525baa80045ba067950c752bcaaefc
Change-Id: I4e81175d5445049bc1f48b3ac02c5bc0f77e6f59"
tipabu,2017-06-01 18:15:24,https://api.github.com/repos/openstack/swift/git/commits/61bcd759710833443aac32c49756c221263bb376,61bcd759710833443aac32c49756c221263bb376,"README: dedent the numbered list

It looks funny otherwise.

Change-Id: Ib00872e050a2885e43085f907780bc9ff0d2b381"
dhellmann,2017-06-01 14:51:06,https://api.github.com/repos/openstack/swift/git/commits/a3aba99a29f2963d5830c5b504c7154835f9e9fc,a3aba99a29f2963d5830c5b504c7154835f9e9fc,"remove remote qualifier from release notes branch scanning

Reno will automatically add the origin remote prefix to the branch name
if it does not find a local branch with the same name, so the input
instructions don't need to include ""origin/"". Removing them allows a
local developer to experiment with changes on local branches, and should
have no impact on the CI system build results.

Depends-On: Id30888b77f46b1f163c0a8175033b96aa3f9bff8
Change-Id: I819fa75d55f96320a24fc4182e5f1cb63c678d16
Signed-off-by: Doug Hellmann <doug@doughellmann.com>"
tipabu,2017-05-31 23:53:11,https://api.github.com/repos/openstack/swift/git/commits/f64fa46f3a5488ae929e01de4bea4d35cdaa3f46,f64fa46f3a5488ae929e01de4bea4d35cdaa3f46,"Make probe tests work when policy-0 is EC

test_object_metadata_replication requires a replicated policy. We even
have it subclass ReplProbeTest, but then we hardcoded the policy index!
Stop doing that.

Change-Id: I8871cc0beceb0909abaf59babe40c3cafbcd0cc9"
tipabu,2017-05-31 02:51:33,https://api.github.com/repos/openstack/swift/git/commits/c34ac98c90351e176e5abf64c997279807a996cc,c34ac98c90351e176e5abf64c997279807a996cc,"Stop having Sphinx treat warnings as errors

Warnings-as-errors breaks our docs gate currently, as the gate is using
an old liberasurecode. Stop treating warnings as errors until the gate
can be updated with a more-recent version.

Related-Change: I3985d027f0ac2119ceaeb4daba5964f937de6cea
Change-Id: I4869ec370f08e338be78d2c0f930106081f21a0a"
alistairncoles,2017-05-26 10:55:43,https://api.github.com/repos/openstack/swift/git/commits/37ba21face333b710dea559fa00faf388a5d91fc,37ba21face333b710dea559fa00faf388a5d91fc,"Add structure to storage policy configuration guide

The description of storage policy config options was
unstructured and repetitive. This patch attempts to
improve the doc by gathering the notes for each option
into a structured list.

Change-Id: I57090b35a70f365e82fb0e29ab42e533d6359a7b"
tuanvcw,2017-05-30 07:25:21,https://api.github.com/repos/openstack/swift/git/commits/cf3c970a77f335e6131895e201aaa64470bb0155,cf3c970a77f335e6131895e201aaa64470bb0155,"Trivial fix typos

Change-Id: I7e1e3b2f92183b2a249299659f0778fe838212e2"
alistairncoles,2017-05-25 10:46:05,https://api.github.com/repos/openstack/swift/git/commits/227cef9933c81869cb6322cc906944e62b92908c,227cef9933c81869cb6322cc906944e62b92908c,"Add link from policies overview to per-policy proxy-server conf

- add proxy server per policy config as an optional
  step in the configuration of a policy, with link to
  the deployment guide

- add reverse link from deployment guide per-policy
  config doc section to storage policies docs

Drive-by fix an incorrect test comment

Change-Id: Ib95310193270a63c9d1e321c6e7de240e00b387f
Related-Change: I3f718f425f525baa80045ba067950c752bcaaefc"
tipabu,2017-05-25 16:35:16,https://api.github.com/repos/openstack/swift/git/commits/675145ef4a131d548cc1122689732b9b65e5def4,675145ef4a131d548cc1122689732b9b65e5def4,"Remove deprecated vm_test_mode option

This was deprecated in the 2.5.0 release (i.e. Liberty cycle), and we've
been warning about it ever since. A year and a half seems like a long
enough time.

Change-Id: I5688e8f7dedb534071e67d799252bf0b2ccdd9b6
Related-Change: Iad91df50dadbe96c921181797799b4444323ce2e"
tipabu,2017-05-22 19:48:45,https://api.github.com/repos/openstack/swift/git/commits/d487bf7fb1fb24d71661048540332dd2f64ee76d,d487bf7fb1fb24d71661048540332dd2f64ee76d,"Remove tempauth docs from deployment guide

Instead, link to the middleware list and auth overview, as well as
referring readers to proxy-server.conf-sample

TempAuth-related content that was previously in the deployment guide has
been moved to TempAuth's own docs, which have been cleaned up a bit.

Change-Id: I00070bb09294362c069f7ee9426ac570bc1b3ddb"
tipabu,2017-05-25 16:11:43,https://api.github.com/repos/openstack/swift/git/commits/5e673a542401a2d95249c3c03f26175214f08c79,5e673a542401a2d95249c3c03f26175214f08c79,"Log deprecation warning for allow_versions

...with the hope of removing support for the option in the future.
We'll forever need to watch for X-Versions-Location in on-disk
data, though.

Change-Id: I19c4c66102aa96df393a642dbcf984f77aa3f25a
Related-Change: Ie899290b3312e201979eafefb253d1a60b65b837"
tipabu,2017-05-25 15:54:00,https://api.github.com/repos/openstack/swift/git/commits/87cc550332615234f399453d48ae639a275d5238,87cc550332615234f399453d48ae639a275d5238,"Log deprecation warnings for account_white/blacklist

... with the hope that we can actually remove support for them in the future.

Change-Id: Ia58e63a20df0cfe623834703230e39598958d9ee
Related-Change: I532663f1d2c75d03170c5fdb9b330416822fbc88"
tipabu,2017-05-25 15:27:07,https://api.github.com/repos/openstack/swift/git/commits/b0ab7eba36be65ca5c03f9158480718641dd63c2,b0ab7eba36be65ca5c03f9158480718641dd63c2,"Log deprecation warnings for run_pause

...with the hope that someday (next year?) we could actually remove
support for the option.

Change-Id: I9c79d007177f8e3c742cd210f281748914b40477"
alistairncoles,2017-03-21 18:53:13,https://api.github.com/repos/openstack/swift/git/commits/45884c110210b8e940604520cfb0210c24b51b75,45884c110210b8e940604520cfb0210c24b51b75,"Enable per policy proxy config options

This is an alternative approach to that proposed in [1]

Adds support for optional per-policy config sections
to be added in proxy-server.conf. This is highly desirable
to allow per-policy affinity options to be set for use with
duplicated EC policies [2] and composite rings [3].

Certain options found in per-policy conf sections will
override their equivalents that may be set in the
[app:proxy-server] section. Currently the options
handled that way are:

  sorting_method
  read_affinity
  write_affinity
  write_affinity_node_count

For example:

  [proxy-server:policy:0]
  sorting_method = affinity
  read_affinity = r1=100
  write_affinity = r1
  write_affinity_node_count = 1 * replicas

The corresponding attributes of the proxy-server Application
are now available from instances of an OverrideConf object
that is obtained from Application.get_policy_options(policy).

[1] Related-Change: I9104fc789ba85ab3ab5ccd34096125b482821389
[2] Related-Change: Idd155401982a2c48110c30b480966a863f6bd305
[3] Related-Change: I0d8928b55020592f8e75321d1f7678688301d797

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>
Change-Id: I3f718f425f525baa80045ba067950c752bcaaefc"
tipabu,2017-04-27 00:13:37,https://api.github.com/repos/openstack/swift/git/commits/1b991803e887de94885f12ae6f7db9227e442281,1b991803e887de94885f12ae6f7db9227e442281,"Clean up how PatchPolicies works

We've got these lovely __enter__ and __exit__ methods; let's use them!

Note that this also changes how we patch classes' setUp methods so we
don't set self._orig_POLICIES when the class is already patched.  I
hope this may fix some sporadic failures that include tracebacks
that look like

  proxy ERROR: ERROR 500 Traceback (most recent call last):
    File "".../swift/obj/server.py"", line 1105, in __call__
      res = getattr(self, req.method)(req)
    File "".../swift/common/utils.py"", line 1626, in _timing_stats
      resp = func(ctrl, *args, **kwargs)
    File "".../swift/obj/server.py"", line 880, in GET
      policy=policy, frag_prefs=frag_prefs)
    File "".../swift/obj/server.py"", line 211, in get_diskfile
      return self._diskfile_router[policy].get_diskfile(
    File "".../swift/obj/diskfile.py"", line 555, in __getitem__
      return self.policy_to_manager[policy]
  KeyError: ECStoragePolicy(...)

... and try to unpatch more gracefully with TestCase.addCleanup

Change-Id: Iaa3d42ec21758b0707155878a645e665aa36696c"
cschwede,2017-05-19 10:09:02,https://api.github.com/repos/openstack/swift/git/commits/5eeaa95440aa01c6be2c58c7959e70dbed7bfb69,5eeaa95440aa01c6be2c58c7959e70dbed7bfb69,"Make mount_check option usable in containerized environments

The ismount_raw method does not work inside containers if disks are
mounted on the hostsystem and only mountpoints are exposed inside the
containers. In this case the inode and device checks fail, making this
option unusable.

Mounting devices into the containers would solve this. However, this
would require that all processes that require access to a device are
running inside the same container, which counteracts the container
concept.

This patch adds the possiblity to place stubfiles named "".ismount"" into
the root directory of any device, and Swift assumes a given device to be
mounted if that file exists. This should be transparent to existing
clusters.

Change-Id: I9d9fc0a4447a8c5dd39ca60b274c119af6b4c28f"
alistairncoles,2017-05-04 15:47:38,https://api.github.com/repos/openstack/swift/git/commits/f02ec4de816a77d9c554d7e29955932c5f21ab03,f02ec4de816a77d9c554d7e29955932c5f21ab03,"Add read and write affinity options to deployment guide

Add entries for these options in the deployment guide and
make the text in proxy-server.conf-sample and man page
consistent.

Change-Id: I5854ddb3e5864ddbeaf9ac2c930bfafdb47517c3"
bloodeagle40234,2017-05-18 08:48:14,https://api.github.com/repos/openstack/swift/git/commits/4dc985a1fae1a78f4e4baa2dcd8544f2e62bdccd,4dc985a1fae1a78f4e4baa2dcd8544f2e62bdccd,"Small minor fixes for composite ring functionality

This is a follow up for https://review.openstack.org/#/c/441921
all of this patch is for minor fixes, I found in my self-review.

Change-Id: Ib3a1dc983c3da69dea592114e25a5047ec91a2b9"
tipabu,2017-05-17 00:58:07,https://api.github.com/repos/openstack/swift/git/commits/582af7cd9d4cfd119ee3e27177a0347b1c129f66,582af7cd9d4cfd119ee3e27177a0347b1c129f66,"name_check: better test maximum_length

Previously, we were testing that a 254 (!?) character name would be valid
when the maximum configured is 500. Now we'll test that 500 character
names are valid.

While we're at it, stop patching self.test_check. It was unnecessary,
and we were doing it badly.

Change-Id: Ia604fa7b809a97fbce176c82606af73cdb92828c"
bloodeagle40234,2017-03-16 06:22:12,https://api.github.com/repos/openstack/swift/git/commits/d40031b46fc0dda82fb027760ecda0c4a4b26ecf,d40031b46fc0dda82fb027760ecda0c4a4b26ecf,"Add Composite Ring Functionality

* Adds a composite_builder module which provides the functionality to
  build a composite ring from a number of component ring builders.

* Add id to RingBuilder to differentiate rings in composite.
  A RingBuilder now gets a UUID when it is saved to file if
  it does not already have one. A RingBuilder loaded from
  file does NOT get a UUID assigned unless it was previously persisted in
  the file. This forces users to explicitly assign an id to
  existing ring builders by saving the state back to file.

  The UUID is included in first line of the output from:

    swift-ring-builder <builder-file>

Background:

This is another implementation for Composite Ring [1]
to enable better dispersion for global erasure coded cluster.

The most significant difference from the related-change [1] is that this
solution attempts to solve the problem as an offline tool rather than
dynamic compositing on the running servers. Due to the change, we gain
advantages such as:

- Less code and being simple
- No complex state validation on the running server
- Easy deployments with an offline tool

This patch does not provide a command line utility for managing
composite rings. The interface for such a tool is still under
discussion; this patch provides the enabling functionality first.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Alistair Coles <alistairncoles@gmail.com>

[1] Related-Change: I80ef36d3ac4d4b7c97a1d034b7fc8e0dc2214d16
Change-Id: I0d8928b55020592f8e75321d1f7678688301d797"
zaitcev,2017-05-12 00:11:55,https://api.github.com/repos/openstack/swift/git/commits/cd2d359b02e9b5f77609073215fc3c4335d7e8db,cd2d359b02e9b5f77609073215fc3c4335d7e8db,"Drop unnecessary dereferencing

The patch that introduced this (with my own help, no less),
also pasted these in tests, but someone else has already
cleaned that up.

Change-Id: I87c0a110831b5b5f75cb6fde1badec338f2150a9"
morrisson,2016-04-07 02:02:28,https://api.github.com/repos/openstack/swift/git/commits/843184f3fea18db367e40cb5f46fc0cb8f2432f6,843184f3fea18db367e40cb5f46fc0cb8f2432f6,"Sync metadata in 'rsync_then_merge' in db_replicator

In previous 'rsync_then_merge' remote objects are merged with
rsync'ed local objects, but remote metadata is not merged with local
one. Account/Container replicator sometimes uses rsync for db sync if
there is a big difference of record history in db files between 'local'
and 'remote' servers. If replicator needs to rsync local db to remote
but metadata in local db is older, older info of metadata can be
distributed then some metadata values can be missing or go back to older.

This patch fixes this problem by merging 'remote' metadata with
rsync'ed local db file.

Closes-Bug: #1570118

Change-Id: Icdf0a936fc456c5462471938cbc365bd012b05d4"
tipabu,2017-05-11 13:57:10,https://api.github.com/repos/openstack/swift/git/commits/3981e1ee8a3fe94eb12c77eba7da90d49907d9c7,3981e1ee8a3fe94eb12c77eba7da90d49907d9c7,"Remove links for EOLed releases

Change-Id: If7e8526edf18b02474ba272451b9b4212558e03c"
clayg,2017-05-11 13:13:02,https://api.github.com/repos/openstack/swift/git/commits/37f6f25283e924531f319866fd5c952d22e2105e,37f6f25283e924531f319866fd5c952d22e2105e,"Update multi-node install links

... as is useful to do from time to time

Change-Id: I165899445080fa3a8e6dc624ab5a13680b819a73"
zaitcev,2017-05-11 07:39:14,https://api.github.com/repos/openstack/swift/git/commits/5dfc3a75fb506a82ffdedad64ce59ecc3db15e6c,5dfc3a75fb506a82ffdedad64ce59ecc3db15e6c,"Open-code eventlet.listen()

Recently out gate started blowing up intermittently with a strange
case of ports mixed up. Sometimes a functional tests tries to
authorize on a port that's clearly an object server port, and
the like. As it turns out, eventlet developers added an unavoidable
SO_REUSEPORT into listen(), which makes listen((""localhost"",0)
to reuse ports.

There's an issue about it:
 https://github.com/eventlet/eventlet/issues/411

This patch is working around the problem while eventlet people
consider the issue.

Change-Id: I67522909f96495a6a30e1acdb79835dce2189549"
tipabu,2017-04-26 23:08:55,https://api.github.com/repos/openstack/swift/git/commits/50357de5758444405cec05cb3aa01a843d15b09f,50357de5758444405cec05cb3aa01a843d15b09f,"Fix sporadic failure in TestObjectController.test_container_update_async

Change-Id: Ie4d58626ebe97049703802a43c669cc78cf60f8b
Related-Change: I15f36e191cfe3ee6c82b4be56e8618ec0230e328
Closes-Bug: #1589994"
tipabu,2017-05-04 17:48:22,https://api.github.com/repos/openstack/swift/git/commits/4c8239503a6d8b4752a7531a5d38eaf2c0faa030,4c8239503a6d8b4752a7531a5d38eaf2c0faa030,"Add message to account-creation assertion

We've seen some failures in the gate like

    ==============================
    Failed 1 tests - output below:
    ==============================

    setUpModule (test.functional.test_account)
    ------------------------------------------

    Captured traceback:
    ~~~~~~~~~~~~~~~~~~~
        Traceback (most recent call last):
          File ""test/functional/test_account.py"", line 33, in setUpModule
            tf.setup_package()
          File ""test/functional/__init__.py"", line 716, in setup_package
            mem_object_server if in_mem_obj else object_server))
          File ""test/functional/__init__.py"", line 621, in in_process_setup
            create_account(AUTH_test)
          File ""test/functional/__init__.py"", line 619, in create_account
            assert(resp.status == 201)
        AssertionError

...which aren't terribly useful in figuring out what went wrong.

Change-Id: I3cd31bb480dc8508828fe21416bfae33bc0985b7"
alistairncoles,2017-05-04 11:47:17,https://api.github.com/repos/openstack/swift/git/commits/511ac2ee604ccf14f0c7f8db7ab7b7d5e250310f,511ac2ee604ccf14f0c7f8db7ab7b7d5e250310f,"Use setUpModule instead of setup for module level unit test setup

Module setup() and teardown() functions are found by nosetests [1] but
unittests expects setUpModule() and tearDownModule() [2]. The latter
function names are also found by nosetests, so using those function
names enables the test module to be run with either nosetests or
unittest.

Although the tox test envs and .unittests script use nosetests, this
change allows the convenience of using unittest, for example when it
is the default test runner in a development environment such as
PyCharm.

This change also makes it unnecessary to explicitly call the setup()
and teardown() functions when executing the module directly.

[1] http://nose.readthedocs.io/en/latest/writing_tests.html#test-modules
[2] https://docs.python.org/2/library/unittest.html#setupmodule-and-teardownmodule

Change-Id: Ib2e5470a339af1f937b25d643b64356e8848ed36"
alistairncoles,2017-05-03 10:41:14,https://api.github.com/repos/openstack/swift/git/commits/88ca232e52cb1a22146824ad42fcf795126d3016,88ca232e52cb1a22146824ad42fcf795126d3016,"Trivial fix for decrypter docstrings

Fix wrong param descriptions in decrypter.py
Fix missing param in base.py

Change-Id: I07fdfe2e7193afa4ee6b88a10f4ba58495b509b3"
tipabu,2017-04-27 00:46:34,https://api.github.com/repos/openstack/swift/git/commits/75290ec6ecd1085cb7b0fb8ff40219d051717d7d,75290ec6ecd1085cb7b0fb8ff40219d051717d7d,"Fix sporadic failures in test_reconstructor.py

We don't know the order in which connections will be made, so grab the
ip/port/dev from the mocked conn's request log.

Change-Id: I3b4486c99ad85173d5027b46e1c0613202d0f75a"
alistairncoles,2017-04-13 10:16:54,https://api.github.com/repos/openstack/swift/git/commits/6c320b2908e5821e2f398e0dae8a67774e110603,6c320b2908e5821e2f398e0dae8a67774e110603,"Stop including Connection header in EC GET responses

Currently, EC GET responses from proxy to clients, unlike any other
response, include a ""Connection: close"" header. If the client has sent
a ""Connection: keep-alive"" header then eventlet.wsgi appends this to
the client response, so clients can receive a response with both
headers:

Connection: close
Connection: keep-alive

This patch fixes the proxy EC GET path to remove any Connection header
from it's response, but does not change the behaviour of eventlet.wsgi
with respect to returning any client provided 'Connection: keep-alive'
header.

Change-Id: I43cd27c978edb4a1a587f031dbbee26e9acdc920
Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Closes-Bug:  #1680731"
alistairncoles,2017-04-28 13:54:10,https://api.github.com/repos/openstack/swift/git/commits/7a9269bca350321596ee6a4ed7597ad423ff11c3,7a9269bca350321596ee6a4ed7597ad423ff11c3,"Fix unit test failing when swift.conf has default policy index >10

In unit/container/test_backend.py test_policy_stat_tracking in
classes TestContainerBroker[BeforeMetadata|BeforeSPI|BeforeXSync]
fails if the default policy in /etc/swift/swift.conf has an index >10.

Those classes monkey patch the container broker to pre-storage-policy
index behaviour, so that it's policy index will always be 0. The test
fails with a KeyError when asserting that the broker should have stats
for the POLICIES.default index even when no object have been PUT with
that policy index. When the default policy in swift.conf has index
>10, that is neither the broker's policy index (0) nor the policy
index of any other object that has been PUT during the test.

The test need a patch_policies decorator to remove the coupling with
swift.conf policies. However, the assertion that the broker has stats
for it's policy index even when no objects were PUT to that index is
then extremely unlikely to ever be tested, because the broker's
default policy index of 0 is very likely to have used for a PUT
object. So this patch also repeats that assertion before any object
have been PUT

Closes-Bug: #1687029
Change-Id: I8b3678dac83f7329d835059c9973b994bc975a33"
tipabu,2017-04-28 22:56:21,https://api.github.com/repos/openstack/swift/git/commits/387ce13aa15ada80a40b93a0d9e12d2be0ff927e,387ce13aa15ada80a40b93a0d9e12d2be0ff927e,"Use LogRecord.msg instead of LogRecord.message in tests

From the docs for LogRecord.message [1],

> This is set when Formatter.format() is invoked.

Apparently we may find ourselves in a situation [2] where that never
happens? Really weird that it failed *midway* through the test though;
maybe some concurrent test removed all formatters?

ERROR: test_known_bad_ec_config
(test.unit.common.test_storage_policy.TestStoragePolicies)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "".../mock/mock.py"", line 1305, in patched
    return func(*args, **keywargs)
  File "".../test/unit/common/test_storage_policy.py"", line 688, in test_known_bad_ec_config
    self.assertIn(msg, records[0].message)
AttributeError: 'LogRecord' object has no attribute 'message'

[1] https://docs.python.org/2/library/logging.html#logrecord-attributes
[2] http://logs.openstack.org/59/460359/1/check/gate-swift-tox-xfs-tmp-py27-ubuntu-xenial/5ecc2cb/console.html#_2017-04-27_01_06_43_346096
Change-Id: I8f5ac0ec1195a233f14edc0126de1d1cea7a6e2f"
cmurphy,2017-04-06 22:55:26,https://api.github.com/repos/openstack/swift/git/commits/93ca16c558068d525dbbc0bb34d90d6bee976db0,93ca16c558068d525dbbc0bb34d90d6bee976db0,"Fix install guide filter:authtoken config example

The name of the default domain in keystone is 'Default', not 'default',
which is its ID. If a user copy and pastes the user_domain_name and
project_domain_name settings from example [filter:authtoken] section
in the install guide, the first time they run 'swift stat' they will
meet a 401 error because keystone is trying to look up domains by name
rather than ID. This patch corrects the docs so that they are
copy-and-paste-proof, and also updates the keystone user creation
example to demonstrate the correct domain ID.

Change-Id: Ic595c2923b71d1c2ff2b4c9a773ea7742fdd029b"
tipabu,2017-04-27 21:19:00,https://api.github.com/repos/openstack/swift/git/commits/85d6cd30be965d3df2dca22d363aafd12146f869,85d6cd30be965d3df2dca22d363aafd12146f869,"Add Timestamp.now() helper

Often, we want the current timestamp. May as well improve the ergonomics
a bit and provide a class method for it.

Change-Id: I3581c635c094a8c4339e9b770331a03eab704074"
matthewoliver,2017-04-27 01:03:29,https://api.github.com/repos/openstack/swift/git/commits/a07f7dc8c0b98f76ea083145e991ed56f1cdb99a,a07f7dc8c0b98f76ea083145e991ed56f1cdb99a,"Fix sporadic failure in TestAccountController unit test

The proxy server on occasion has error limited a node by the time the
test runs, causing the proxie's node_iter failing to iter out this
error limited  node. As the test uses a default FakeRing with no
extra handoffs, on this occasion we only get 2 requests which is not
enough for quorum, causing it to return a 503.

This patch sets the error_suppression_interval to 0 when creating
the proxy server. Meaning a node effectively isn't error_limited.

Change-Id: I96cf4c4d63594f803cc1cd57e874d1624db8e249
Closes-Bug: #1682026"
tipabu,2017-04-26 22:50:59,https://api.github.com/repos/openstack/swift/git/commits/20072570d9a58416fbd30a71cf0719c1db3bb686,20072570d9a58416fbd30a71cf0719c1db3bb686,"Fix sporadic failure in test/unit/obj/test_server.py

In particular, in TestObjectController.test_object_delete_at_async_update

Rarely (<0.1% of the time?), it would fail with:

======================================================================
FAIL: test_object_delete_at_async_update
(test.unit.obj.test_server.TestObjectController)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/vagrant/swift/test/unit/obj/test_server.py"", line 4826, in
test_object_delete_at_async_update
    resp = req.get_response(self.object_controller)
  File ""/usr/lib/python2.7/contextlib.py"", line 24, in __exit__
    self.gen.next()
  File ""/vagrant/swift/test/unit/__init__.py"", line 1075, in
mocked_http_conn
    raise AssertionError('left over status %r' % left_over_status)
AssertionError: left over status [500, 500]
-------------------- >> begin captured stdout << ---------------------
test INFO: None - - [26/Apr/2017:22:32:13 +0000] ""PUT /sda1/p/a/c/o"" 400
19 ""-"" ""-"" ""-"" 0.0003 ""-"" 23801 0

--------------------- >> end captured stdout << ----------------------
>>  raise AssertionError('left over status %r' % [500, 500])

----------------------------------------------------------------------

Related-Bug: 1514111
Change-Id: I1af4a291fb67cf4b1829f167998a08644117a800"
notmyname,2017-04-19 16:14:58,https://api.github.com/repos/openstack/swift/git/commits/29e2edf8deb9e60d0a52c2d675eb7b6b64b183e9,29e2edf8deb9e60d0a52c2d675eb7b6b64b183e9,"authors/changelog for 2.14.0

Change-Id: I0a6a8e4d62d2181e6d959437d6e84eeb2c29a05d"
clayg,2017-04-26 02:29:57,https://api.github.com/repos/openstack/swift/git/commits/6be5196fbef179691898187f6ccadfa5e17d2805,6be5196fbef179691898187f6ccadfa5e17d2805,"Make add_dev complain louder about missing keys

... and remove some cruft that couldn't possibly work

Change-Id: I560f0a29f0a881c63ec3cb910dbf5476fe2a915a
Related-Change-Id: I0d8928b55020592f8e75321d1f7678688301d797"
onovy,2017-04-20 14:57:15,https://api.github.com/repos/openstack/swift/git/commits/9e15effb3b1012f5b3152ed03b9d16b6f19ffe24,9e15effb3b1012f5b3152ed03b9d16b6f19ffe24,"Fix unit tests on i386 and other archs

Change-Id: I4f84b725e220e28919570fd7f296b63b34d0375d"
tipabu,2017-04-18 19:10:59,https://api.github.com/repos/openstack/swift/git/commits/1776e0fd209e01ea4eca7b8a31021aa2f05dc85a,1776e0fd209e01ea4eca7b8a31021aa2f05dc85a,"Improve test_get_valid_utf8_str coverage

Include a couple trivial cases, and verify that surrogate pairs get
collapsed.

Also, move it to a more-appropriate class.

Related-Change: I4c570c08c770636d57b1157e19d5b7034fd9ed4e (patchset 3)
Change-Id: Iab0fdafe08d06a9d677dc421e60779e94d27ba9b"
clayg,2017-04-07 23:37:36,https://api.github.com/repos/openstack/swift/git/commits/b41f47f0e0c4dc43850484b0e6fa74e0ea07c8dc,b41f47f0e0c4dc43850484b0e6fa74e0ea07c8dc,"Follow up tests for get_hashes regression

IMHO we shouldn't ever trust the invalidations file so much we try to
skip a listdir when creating a hashes.pkl for the first time.  There may
be some subtle races looking back on the related patch, and it's related
patches.

This just makes some assertions to help demonstrate we should maintain
the invariant of setting hashes to valid via listdir.

Change-Id: I767e34a405de7911e9596e038e58a9a29f57a8f8
Related-Change-Id: I08c8cf09282f737103e580c1f57923b399abe58c"
alistairncoles,2017-04-19 09:34:25,https://api.github.com/repos/openstack/swift/git/commits/c740447de5e06349cd0f81828a9e475a688edac9,c740447de5e06349cd0f81828a9e475a688edac9,"Move EC-specific unit test to EC Test class

The refactoring in the Related-Change separated EC
specific object controller tests into EC specific TestCase
classes, but left two EC specific tests in the Replication
object controller test class. This patch moves them to the
appropriate test class.

Previously the tests were only executed once, now they are
executed in each of two subclasses using different EC
policies. As a result it was necessary to make the test
container name unique to the policy under test.

Related-Change: Ifd3d0fa66773e640bb61cc528f7a1b2358e97d91

Change-Id: Ie712ea91b5dd74c504a0dd6aa40c3d657277108c"
bloodeagle40234,2017-03-03 05:16:35,https://api.github.com/repos/openstack/swift/git/commits/381640cf90f919832f8c266e39c526b62c287f28,381640cf90f919832f8c266e39c526b62c287f28,"Fix (un)patch_policies

Due to the refactoring of TestObjectController (related-change),
all of BaseTestECObjectController test methods are not being
needed to be unpatched because they are expected to run for test
setup-ed policies.

This patch works for items as follows:

- Move part of setUp/tearDown routines at BaseTestObjectController
  needed by only TestReplicatedObjectController which affects
  patch_policies

- Remove all unpatch_policies from BaseTestECObjectController

- Set up self.ec_policy to avoid to set policy index and
  retrieve the policy for each test method.

The reason why I didn't squash this up to the related parent patch is
to clarify what was changed at those patches. The parent is for just
clustering the tests for each test class and this one attempts to
improve.

Related-Change: Idd155401982a2c48110c30b480966a863f6bd305
Change-Id: I25a3f8fc837706d78dca226fe282d9e5ead65a0d"
tipabu,2017-04-19 00:28:50,https://api.github.com/repos/openstack/swift/git/commits/8e59dfbee2a67f84a1fd1d5cc1679ec514255fdc,8e59dfbee2a67f84a1fd1d5cc1679ec514255fdc,"Log remote_merges during DB replication

Change-Id: I1850f09bab16401479b5a0cc521f67a32ea9c9f5"
zaitcev,2017-04-18 21:51:14,https://api.github.com/repos/openstack/swift/git/commits/702c24d3b29ce4f2f45fb2729c14b311a27c97b4,702c24d3b29ce4f2f45fb2729c14b311a27c97b4,"Remove redundant assignments of self._datadir

This is harmless, but honestly annoying. Introduced by the big
ssync change If003dcc6f4109e2d2a42f4873a0779110fff16d6 .

Change-Id: I1a7c0171e03b900ca75da39b152cdffe60abe135"
alistairncoles,2017-04-03 13:01:26,https://api.github.com/repos/openstack/swift/git/commits/83750cf79c958810767f8a78e739df5d7e3f5345,83750cf79c958810767f8a78e739df5d7e3f5345,"Fix UnicodeDecodeError in reconstructor _full_path function

Object paths can have non-ascii characters. Device dicts will
have unicode values. Forming a string using both will cause the
object path to be coerced to UTF8, which currently causes a
UnicodeDecodeError. This causes _get_response() to not return
and the recosntructor hangs.

The call to _full_path() is moved outside of _get_response()
(where its result is used in the exception handler logging)
so that _get_response() will always return even if _full_path()
raises an exception.

Unit tests are refactored to split out a new class with those
tests using an object name and the _full_path method, so that
the class can be subclassed to use an object name with non-ascii
characters.

Existing probe tests are subclassed to repeat using non-ascii
chars in object paths.

Change-Id: I4c570c08c770636d57b1157e19d5b7034fd9ed4e
Closes-Bug: 1679175"
cmurphy,2017-04-18 07:39:08,https://api.github.com/repos/openstack/swift/git/commits/758dad819e38acdf32c86097013c8c80ca547683,758dad819e38acdf32c86097013c8c80ca547683,"Update SUSE distro information in install guide

SUSE tests their OpenStack packages on openSUSE Leap 42.2 and SLES 12
SP2, so this patch updates the install guide to address those newer
releases.

Change-Id: Ice6e85fdc8ac77029fde205dd9c63d3b62de3137"
openstackadmin,2017-02-16 09:59:00,https://api.github.com/repos/openstack/swift/git/commits/d633e9df59dc704220735d8ac04b92b8c6946541,d633e9df59dc704220735d8ac04b92b8c6946541,"Update reno for stable/ocata

Change-Id: Ibb4610747e8ad896b0d4b970094beb12c495e013"
ctvera,2017-03-22 08:59:53,https://api.github.com/repos/openstack/swift/git/commits/bcd0eb70afacae1483e9e53d5a4082536770aed8,bcd0eb70afacae1483e9e53d5a4082536770aed8,"Container drive error results double space usage on rest drives

When drive with container or account database is unmounted
replicator pushes database to handoff location. But this
handoff location finds replica with unmounted drive and
pushes database to the *next* handoff until all handoffs has
a replica - all container/account servers has replicas of
all unmounted drives.

This patch solves:
- Consumption of iterator on handoff location that results in
  replication to the next and next handoff.
- StopIteration exception stopped not finished loop over
  available handoffs if no more nodes exists for db replication
  candidency.

Regression was introduced in 2.4.0 with rsync compression.

Co-Author: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>

Change-Id: I344f9daaa038c6946be11e1cf8c4ef104a09e68b
Closes-Bug: 1675500"
mvpnitesh,2017-04-10 09:52:00,https://api.github.com/repos/openstack/swift/git/commits/71516ae99099e51ff1fb2bf68396cd682163e9a7,71516ae99099e51ff1fb2bf68396cd682163e9a7,"Optimize the link address

Use https instead of http to ensure the safety

Change-Id: Ifdce2d0fde8ccd758cf3290cdf82faef244c8004"
clayg,2017-02-16 22:14:09,https://api.github.com/repos/openstack/swift/git/commits/a0fcca1e0576a0dba7a61f05c86aba23d6ddd27f,a0fcca1e0576a0dba7a61f05c86aba23d6ddd27f,"Do not sync suffixes when remote rejects reconstructor revert

SSYNC is designed to limit concurrent incoming connections in order to
prevent IO contention.  The reconstructor should expect remote
replication servers to fail ssync_sender when the remote is too busy.
When the remote rejects SSYNC - it should avoid forcing additional IO
against the remote with a REPLICATE request which causes suffix
rehashing.

Suffix rehashing via REPLICATE verbs takes two forms:

1) a initial pre-flight call to REPLICATE /dev/part will cause a remote
primary to rehash any invalid suffixes and return a map for the local
sender to compare so that a sync can be performed on any mis-matched
suffixes.

2) a final call to REPLICATE /dev/part/suf1-suf2-suf3[-sufX[...]] will
cause the remote primary to rehash the *given* suffixes even if they are
*not* invalid.  This is a requirement for rsync replication because
after a suffix is synced via rsync the contents of a suffix dir will
likely have changed and the remote server needs to update it hashes.pkl
to reflect the new data.

SSYNC does not *need* to send a post-sync REPLICATE request.  Any
suffixes that are modified by the SSYNC protocol will call _finalize_put
under the hood as it is syncing.  It is however not harmful and
potentially useful to go ahead refresh hashes after an SSYNC while the
inodes of those suffixes are warm in the cache.

However, that only makes sense if the SSYNC conversation actually synced
any suffixes - if SSYNC is rejected for concurrency before it ever got
started there is no value in the remote performing a rehash.  It may be
that *another* reconstructor is pushing data into that same partition
and the suffixes will become immediately invalidated.

If a ssync_sender does not successful finish a sync the reconstructor
should skip the REPLICATE call entirely and move on to the next
partition without causing any useless remote IO.

Closes-Bug: #1665141

Change-Id: Ia72c407247e4525ef071a1728750850807ae8231"
clayg,2017-03-29 22:29:35,https://api.github.com/repos/openstack/swift/git/commits/88ebcafbb97b8cd5f8d4299210f7bfc093af229a,88ebcafbb97b8cd5f8d4299210f7bfc093af229a,"Fix intermittent test_unlink_* failures

Change-Id: Iab403724a418e5d8a44e56e58da782bc66eab6e4
Closes-Bug: #1579578"
tipabu,2017-03-29 21:00:01,https://api.github.com/repos/openstack/swift/git/commits/cce719260da81a7285f94b25c8664c0947487f61,cce719260da81a7285f94b25c8664c0947487f61,"Clean up some doc formatting

Change-Id: Iac24369910464cb766fe7d5e6c15120d147930a7"
alecuyer,2017-03-24 14:41:45,https://api.github.com/repos/openstack/swift/git/commits/95905b017495ac822a7e6998ae12e2032481d932,95905b017495ac822a7e6998ae12e2032481d932,"Modify _get_hashes() arguments to be more generic

Some public functions in the diskfile manager expect or return full
file paths. It implies a filesystem diskfile implementation.
To make it easier to plug alternate diskfile implementations, patch
functions to take more generic arguments.

This commit changes DiskFileManager _get_hashes() arguments from:
  - partition_path, recalculate=None, do_listdir=False
to :
  - device, partition, policy, recalculate=None, do_listdir=False

Callers are modified accordingly, in diskfile.py, reconstructor.py,
and replicator.py

Change-Id: I8e2d7075572e466ae2fa5ebef5e31d87eed90fec"
smokony,2017-03-25 08:48:39,https://api.github.com/repos/openstack/swift/git/commits/36b1a2f69fd79aa42491aaaf93ea307ae808f9b1,36b1a2f69fd79aa42491aaaf93ea307ae808f9b1,"Fix some reST field lists in docstrings

Probably the most common format for documenting arguments is reST field
lists [1]. This change updates some docstrings to comply with the field
lists syntax.

 [1] http://sphinx-doc.org/domains.html#info-field-lists

Change-Id: I87e77a9bbd5bcb834b35460ce0adff5bc59d9168"
tipabu,2017-03-15 19:30:38,https://api.github.com/repos/openstack/swift/git/commits/3ad877323978dcf4130e9543a2678bb928c1ecb8,3ad877323978dcf4130e9543a2678bb928c1ecb8,"Version DLOs, just like every other type of object

Previously, requests involving DLOs would bypass versioned_writes:

 * Any existing DLOs wouldn't get copied to the archive container during
   overwrites (or deletes, with history-mode), so there would be no
   evidence they had ever existed.

 * Any new DLOs wouldn't copy overwritten objects to the archive
   container, potentially leading to data loss.

Now, DLOs will behave like every other type of object under
versioned_writes.

Change-Id: I488e13eead2f33dd272d03f6f898adc52fc7fdad
Related-Change: Ie899290b3312e201979eafefb253d1a60b65b837
Related-Change: Ib5b29a19e1d577026deb50fc9d26064a8da81cd7
Closes-Bug: #1626989"
alecuyer,2017-03-21 08:54:33,https://api.github.com/repos/openstack/swift/git/commits/cff7455a689e452d12e85eec69137b3a3e0ec803,cff7455a689e452d12e85eec69137b3a3e0ec803,"Remove unused returned value object_path from yield_hashes()

Some public functions in the diskfile manager expect or return full
file paths. It implies a filesystem diskfile implementation.
To make it easier to plug alternate diskfile implementations, patch
functions to take more generic arguments.

This commit changes DiskFileManager yield_hashes() returned values
from:
        - object_path, object_hash, timestamps
to:
        - object_hash, timestamps

object_path was not used by any caller.

Change-Id: I914fb1ec8ce7c9c26d22e1d07f03bd03f4504176"
alistairncoles,2017-03-24 10:41:17,https://api.github.com/repos/openstack/swift/git/commits/a15b2a2a161db1bfb78334e2577219635e11164a,a15b2a2a161db1bfb78334e2577219635e11164a,"Test that Manager.reload does stop/start in that order

The current test for reload does not actually verify the order in
which stop and start are called. Tighten that up to ensure stop is
called before start.

Change-Id: Iede6eb2049e3ab8f3810a69a6b77713de3c71399
Related-Change: I4bf57c8cdba6773ddc1e4013e2b2a9736dacada8"
tipabu,2017-03-23 18:36:59,https://api.github.com/repos/openstack/swift/git/commits/9edf914ff918d689b362a0fd45227cc97674bc82,9edf914ff918d689b362a0fd45227cc97674bc82,"Drop support for auth-server from common/manager

swift-auth-server was removed in 2011. While there are still some lingering
references in test_manager, it's not clear whether removing them would
reduce test coverage for things like bad pid files.

See https://github.com/openstack/swift/commit/bd22dbe

Change-Id: I4bf57c8cdba6773ddc1e4013e2b2a9736dacada8"
tipabu,2017-03-15 21:43:18,https://api.github.com/repos/openstack/swift/git/commits/dfeae598248da2fba6fb990b267655c2384fe105,dfeae598248da2fba6fb990b267655c2384fe105,"Factor out a bunch of common testing setup

Rather than having a comment declaring that the stack/history modes
only diverge after the delete(), move the common code to a separate
function called by tests for both modes.

Change-Id: I657106b11bf0697338a776513d2a51ac6e562c0a"
bloodeagle40234,2017-03-02 11:31:28,https://api.github.com/repos/openstack/swift/git/commits/8fe4bfefaa13d087763f948151b9a82790ef89f0,8fe4bfefaa13d087763f948151b9a82790ef89f0,"TestObjectController refactoring

From the related change of ECDuplication, Swift have a couple of Test
classes for EC policy, normal EC and EC Duplication, in the
test/unit/proxy/test_server.py. To enable the classes, the related change
abstracts the EC test cases as the ECTestMixin class to gather test
methods into one place but it was worse because TestObjectController did
still have both test cases for replication and for ec that may be hard
to understand the test class structure.

Hence, this patch attempts to refactor the structure as

From:

     ECTestMixin
            |
    -------------------------------------
    |                                   |
TestObjectController           TestObjectControllerECDuplication
(for replication and EC)       (for EC Duplication Policy)

To:

    BaseTestObjectController
            |
    --------------------------------------
    |                                    |
TestReplicatedObjectController  BaseTestECObjectController
(for replication)                        |
                          ---------------------------------
                          |                               |
                TestECObjectController    TestECDuplicationObjectController
                (for EC policy)           (for EC Duplication Policy)

Some more cleanups are in follow up patches because this patch shows a lot
of moving code chunks which could be hard to compare the diff. To make
the review easy, this patch forcus on ONLY the structure changes as
possible.

Related-Change: Idd155401982a2c48110c30b480966a863f6bd305
Related-Change: I25a3f8fc837706d78dca226fe282d9e5ead65a0d
Change-Id: Ifd3d0fa66773e640bb61cc528f7a1b2358e97d91"
tipabu,2017-03-21 15:46:13,https://api.github.com/repos/openstack/swift/git/commits/7d08b0735fdffe4066e7fa3d303da61aed00a7e8,7d08b0735fdffe4066e7fa3d303da61aed00a7e8,"Clean up unused function

Also, use `==` instead of `is` for string comparison.

Change-Id: I12040d56afc239a7b7be1ae37b27cce708bf6f10
Related-Change: I1ccb2665b6cd2887659e548e55a26aa00de879e3"
alistairncoles,2016-12-01 15:16:46,https://api.github.com/repos/openstack/swift/git/commits/3b83bd42a6c2eabbe88e2734d2becbb7b7046ef4,3b83bd42a6c2eabbe88e2734d2becbb7b7046ef4,"Remove duplicate code in test_diskfile.py

DiskFileMixin and DiskFileManagerMixin has almost
identical setUp() and tearDown() methods, and both
inherit BaseDiskFileTestMixin, so this moves the common
code into the abstract superclass.

Also remove repeated declaration of vars in
test_diskfile.py:run_quarantine_invalids
and a duplicated qualified import in obj/test_server.py

Change-Id: Id99ba151c7802c3b61e483a7e766bf6f2b2fe3df"
alistairncoles,2017-03-21 10:59:50,https://api.github.com/repos/openstack/swift/git/commits/bd400dd22e9e401c9b24a598d5e292826bd16c69,bd400dd22e9e401c9b24a598d5e292826bd16c69,"Add extra test for name_check /info

Test that the actual configured options get reported in /info

Follow up to:
Related-Change: If1af43485b4708cab6c4b5d7f6f0a334d8752518

Change-Id: I1d76d40c70a38b959dd0103f3c56b1da4dae068f"
notmyname,2017-03-07 23:06:13,https://api.github.com/repos/openstack/swift/git/commits/cd39778824970a696c221f394e70bcee6a9d0001,cd39778824970a696c221f394e70bcee6a9d0001,"add name_check to /info

Also removed a bunch of unnecessary unquotes. Just use path_info
instead (it's already unquoted).

Partial-Bug: #1670915

Change-Id: If1af43485b4708cab6c4b5d7f6f0a334d8752518"
alistairncoles,2017-01-27 18:26:06,https://api.github.com/repos/openstack/swift/git/commits/52a23ddb3c1cbc41daca7b8238d43a9851641834,52a23ddb3c1cbc41daca7b8238d43a9851641834,"Fix race when consolidating new partition

Suffix hash invalidations in hashes.invalid can be lost when two
concurrent calls to get_hashes consolidate the hashes of a new
partition with no hashes.pkl:

- suffix S has been invalidated and is listed in hashes.invalid
- process X calls get_hashes when there is no existing hashes.pkl
- process X removes hashes.invalids file in consolidate_hashes
- process X calculates the hash of suffix S (note, process X has
  not yet written hashes.pkl)
- process Y invalidates suffix S, appends S to hashes.invalid, so the
  hash of suffix S *should* be recalculated at some point
- process Z calls get_hashes->consolidate_hashes, deletes hashes.invalid
  because there is still no hashes.pkl
- process Z fails
- process X writes hashes.pkl with stale hash value for suffix S
- the invalidation of S that was made by process Y is lost

The solution is to never remove hashes.invalid during consolidate_hashes
without first recording any invalid suffixes in hashes and writing hashes
to disk in hashes.pkl. This is already the behaviour when hashes.pkl
exists. The cost of an additional write to hashes.pkl, introduced by this
patch, is only incurred once, when get_hashes first encounters a
partition with no hashes.pkl.

Related-Change: Ia43ec2cf7ab715ec37f0044625a10aeb6420f6e3

Change-Id: I08c8cf09282f737103e580c1f57923b399abe58c"
chengtcli,2017-03-18 03:43:32,https://api.github.com/repos/openstack/swift/git/commits/99412d48309e071eb190a2f4735df577a22cdb87,99412d48309e071eb190a2f4735df577a22cdb87,"fix get ring name

replace ring_name = basename(ring_path)[:len('ring.gz')]
with ring_name = basename(ring_path)[:-len('.ring.gz')]

Change-Id: I741e46d116c8fc7c2e91a51da4284302eec3aa41
Closes-bug: #1668736"
alistairncoles,2017-03-06 18:27:24,https://api.github.com/repos/openstack/swift/git/commits/aa9afb538457a22d8fd2ab86ea401f26196189c8,aa9afb538457a22d8fd2ab86ea401f26196189c8,"Test EC chunk_transformer with larger input chunks

The tests were lacking coverage for the chunk_transformer
reading multiple segment_size pieces from an input chunk.
This patch modifies test_chunk_transformer to exercise more
input chunk scenarios.

Also improve variable naming and comments in
_test_determine_chunk_destinations_prioritize

Change-Id: I4eb55ee3e87dae478828f7ccba86fec267492bd8
Related-Change: Ib9e8a6f67c2985164dd20b049c7f144f19fd1822"
alistairncoles,2017-03-10 12:59:37,https://api.github.com/repos/openstack/swift/git/commits/56349e022dbbd90fbf9edb5d3d50dd1dd90ce7e2,56349e022dbbd90fbf9edb5d3d50dd1dd90ce7e2,"Include received frag_index in reconstructor log warnings

The Related-Change removed the frag_index expected from a
node response from the full_path included in log messages.
This made sense because the *expected* frag_index is not
necessarily the index that was actually received from the
node. However, it would be useful to include the *actual*
received frag_index in log messages.

This patch also:

- makes _full_path a module level function
- renames unique_index to be resp_frag_index to aid
  understanding of the various indexes we deal with during
  reconstruction.

Change-Id: Ic932835b3c1ed51a8456fce775fb59445fcb834b
Related-Change: I8096202f5f8d91296963f7a409a29d57fa7828e4"
bloodeagle40234,2017-02-28 08:52:06,https://api.github.com/repos/openstack/swift/git/commits/a2f4046624190584305eab77bd1fbb623caa7be3,a2f4046624190584305eab77bd1fbb623caa7be3,"Small fixes for ec duplication

To address Alistair's comment at
https://review.openstack.org/#/c/219165.

This includes:

- Fix reconstructor log message to avoid redundant frag index info
- Fix incorrect FabricatedRing setting to have ec_k + ec_m replicas
- Use policy.ec_n_unique_fragments for testing frag index election
- Plus some various minor cleanup and docs additions

Huge refactoring around TestECMixin at the test/unit/proxy/test_server.py
is in https://review.openstack.org/#/c/440466/ to clarify the change.

Co-Authored-By: Alistair Coles <alistairncoles@gmail.com>

Change-Id: I8096202f5f8d91296963f7a409a29d57fa7828e4"
alistairncoles,2017-03-16 16:41:17,https://api.github.com/repos/openstack/swift/git/commits/4f5c03c89d8bb0a6cb3405441fd5ba26e7487673,4f5c03c89d8bb0a6cb3405441fd5ba26e7487673,"Fix intermittent EC GET test failure

test_GET_with_mixed_etags_at_same_timestamp in
test.unit.proxy.controllers.test_obj:TestECObjController
will fail intermittently when the randomly chosen bodies
of the two objects are identical. In conjunction with the
timestamps of the two objects being deliberately equal,
this makes the two objects identical.

Fix it by explicitly setting unique base strings for the
object bodies.

Change-Id: Idb1081edfa26b9f229f44b00c439cda33a7385fa"
KazuhiroMiyahara,2017-03-13 07:57:50,https://api.github.com/repos/openstack/swift/git/commits/7dd1985b901f43e42c6c4fe0a8dd6cd74e2e8533,7dd1985b901f43e42c6c4fe0a8dd6cd74e2e8533,"Update calling super class constructor style in proxy controllers

""swift.proxy.controllers.base.Controller"" inherits ""object"", so the
Controller class and its sub classes (AccountController,
ContainerController, BaseObjectController, InfoController) are
""new style class"".  In new style class, if a class call super class's
constructor, ""super(SubClass, self).__init__(foo, bar)"" is recommended.
But, AccountController, ContainerController, BaseObjectController,
and InfoController use ""Controller.__init__(self, app)"", and it is
deprecated.

This patch fixes the calling super class constructor codes.

Change-Id: I4b94ec3131c7c7be4609716867a36490a70d5009
Closes-Bug: #1672285"
tipabu,2017-03-10 18:27:45,https://api.github.com/repos/openstack/swift/git/commits/b958466a72cd6038cc4ce6479f0e8d922518e656,b958466a72cd6038cc4ce6479f0e8d922518e656,"More port number cleanup

Closes-Bug: #1671896
Related-Change: Ie4fee05b5f7e0c0879a7b42973bca459f7c85408
Change-Id: I18db1937a0991497027a4d096fb95cdda81f7d68"
alistairncoles,2017-03-10 10:50:33,https://api.github.com/repos/openstack/swift/git/commits/b1f6de4ec2519d79db51781d8584ea4c79caf3e0,b1f6de4ec2519d79db51781d8584ea4c79caf3e0,"Update .mailmap

Change-Id: I463263288ac1f7745c363f6eb78820d988cecc22"
clayg,2017-03-09 19:59:01,https://api.github.com/repos/openstack/swift/git/commits/9afe2bafb4052bc3d514d6f03992cd8e6a4178cd,9afe2bafb4052bc3d514d6f03992cd8e6a4178cd,"Add another failing test for 412 logging

I tried to move res.fix_conditional_response() into the get_log_line
method in utils but couldn't find a container request that was
*actually* conditional.  We return 412 from the container on a couple
of bad requests where we really probably shouldn't - but regardless those
responses aren't really conditional.

Plus I'd have to make a synthetic test in utils somewhere.

So this seems better - leave the fix closer to the problem.

Change-Id: I76237d5d5025a653e879141b03df863205c59f3a
Related-Change-Id: I66c871f1f15fb43f19d59331b05cc7567ce10063"
alistairncoles,2017-03-07 19:22:01,https://api.github.com/repos/openstack/swift/git/commits/5f610c76bdc97a5ed14d36d04f345208ff405f2e,5f610c76bdc97a5ed14d36d04f345208ff405f2e,"Support EC policy for in process functional tests

Add support for a 2+1 EC policy to be optionally used as default
policy when running in process functional tests.

The EC policy may be selected by setting the env var:

  SWIFT_TEST_IN_PROCESS_CONF_LOADER=ec tox

when running .functests, or by using the new tox test env:

  tox -e func-ec

Change-Id: I02e3553a74a024efdab91dcd609ac1cf4e4f3208"
chenaidong1,2017-03-09 08:45:36,https://api.github.com/repos/openstack/swift/git/commits/3cabafa32658a76162dd63b37931c48a19deb0a4,3cabafa32658a76162dd63b37931c48a19deb0a4,"Fix the typo

delete redundant 'that'

Change-Id: If61727e28fa57dfb82165ab5ea2e98e3d7965474"
emonty,2017-03-08 15:46:41,https://api.github.com/repos/openstack/swift/git/commits/3c844d02b9a40520dd3c2e68d07bebf3ae80e15e,3c844d02b9a40520dd3c2e68d07bebf3ae80e15e,"Replace references to swift.openstack.org

The policy of giving projects vanity domains stopped about 5 years ago.
swift.openstack.org is a redirect to the canonical location -
docs.openstack.org/developer/swift. While we are not aiming to remove
the redirect any time in the forseeable future due to existing published
links pointing to it, we should at the very least stop adding more of
those links to the world.

Change-Id: I10e92309f5d3b5f908fe4438f5cc0b184f161cba"
alistairncoles,2017-03-08 14:56:00,https://api.github.com/repos/openstack/swift/git/commits/adcb4c270e5970ef49d379bb8ef5403b04eec8db,adcb4c270e5970ef49d379bb8ef5403b04eec8db,"Document SAIO rsync service setup for ubuntu 16

SAIO docs do suggest using Ubuntu 14.04, but if using
16.04 then systemctl needs to be used to have rsync service
restart on reboot.

Change-Id: I4fb0d3d063df61fbdfca981f06911148f3c4dc04"
alistairncoles,2017-03-07 13:39:53,https://api.github.com/repos/openstack/swift/git/commits/54fe738a0e12ffe98b9d7e80ad3c4eb5c015bbda,54fe738a0e12ffe98b9d7e80ad3c4eb5c015bbda,"Add assertions to test_reconstructor test_get_response

Tighten up test to verify that 404 response results in a None
return from reconstructor _get_response. Merge this test case
into the test_get_response method to make use of the do_test()
infrastructure. Add check for 503 response status.

Also, use assertFalse to verify empty log lines, since a failure
will then result in any log lines being shown in failure message.

Related-Change: Iba86b495a14c15fc6eca8bf8a7df7d110256b0af
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: Ia83517e6d4c2f5eeb136abd4c04ddab639d40b9e"
bloodeagle40234,2017-01-18 04:27:09,https://api.github.com/repos/openstack/swift/git/commits/4187c839c3ddd4b256b4ece077ee293322f96af9,4187c839c3ddd4b256b4ece077ee293322f96af9,"Optimize ec duplication and its md5 hashing

Originally, ec duplication is designed to make duplicated copy at
chunk_transformer function for each node. However, it can cause doubled
(or more than, depends on ec_duplication_factor) etag calculation which
should be expensive for Swift proxy work.

Since this patch, chunk_transformer keeps only an unique fragments slot
to store, and then, send_chunk in ECObjectController._transfer_data
picks up the suitable chunk by unique backend fragment index assigned by
_determine_chunk_destination function to send to object server.

Note that, Putter still keeps node_index but the new putter_to_frag_index
dict and frag_hasher (chunk_index and chunk_hasher in the old names)
now refers the value by fragment index.

Change-Id: Ib9e8a6f67c2985164dd20b049c7f144f19fd1822"
clayg,2017-02-10 23:28:37,https://api.github.com/repos/openstack/swift/git/commits/38b99ad19579e26248ad4e878bb7c93ea0c64ed1,38b99ad19579e26248ad4e878bb7c93ea0c64ed1,"Global EC Under Development Documentation

Layout the foundation for documenting the features which will enable
Global EC.

The formatting on the sections in our existing EC docs didn't follow
best practices [1] and it caused some sphinx build warnings.

1. http://www.sphinx-doc.org/en/stable/rest.html#sections

Change-Id: I2d164dafeb84629c75c3c2ff774329ee84270b7f"
tipabu,2017-03-06 23:55:40,https://api.github.com/repos/openstack/swift/git/commits/2ca303597eace8858425fa6dccf485b0c3ccdd5e,2ca303597eace8858425fa6dccf485b0c3ccdd5e,"Make Sphinx treat warnings as errors

...and fix up the one warning that's crept in.

Change-Id: I3985d027f0ac2119ceaeb4daba5964f937de6cea"
bloodeagle40234,2017-03-03 06:57:20,https://api.github.com/repos/openstack/swift/git/commits/0e447709913f8988fd27fa4817b6eee5d5a654db,0e447709913f8988fd27fa4817b6eee5d5a654db,"Follow up the reconstructor test coverage

This is follow up for https://review.openstack.org/#/c/436522/

I'd like to use same assertion if it goes the same path.
Both Exception and Timeout will be in the exception log starts with
""Trying to GET"". ""Timeout"" is an extra word appeared in the log.

And more, this adds assertions for the return value from the
get_response for error cases which should be as None.

Change-Id: Iba86b495a14c15fc6eca8bf8a7df7d110256b0af"
bloodeagle40234,2017-03-03 08:57:13,https://api.github.com/repos/openstack/swift/git/commits/54347f92edc751ed73552df7fb87e06efc18a70d,54347f92edc751ed73552df7fb87e06efc18a70d,"Cleanup reconstructor tests

Fixes:

* assertTrue(xxxx in yyyyy) -> assertIn(xxxx, yyyy)
* assertTrue(xxxx > yyyy) -> assertGreater(xxxx, yyyy)

Change-Id: I353ec389f9abed3427951cd473d7c3ebcbca1669"
tipabu,2017-03-02 16:56:13,https://api.github.com/repos/openstack/swift/git/commits/740d683e29e03e588492642a6dccca07268b6954,740d683e29e03e588492642a6dccca07268b6954,"Fix port ranges in install guide

Not so long ago, we changed our default port ranges from 60xx to 62xx
but we left the install guide using the old ranges.

Closes-Bug: #1669389
Related-Change: Ie1c778b159792c8e259e2a54cb86051686ac9d18
Change-Id: Ie4fee05b5f7e0c0879a7b42973bca459f7c85408"
bvancsics,2017-03-01 10:04:38,https://api.github.com/repos/openstack/swift/git/commits/f9954729a812fd3f93a8ab224b1c203a360623d1,f9954729a812fd3f93a8ab224b1c203a360623d1,"Remove unused variable

TrivialFix

Change-Id: Ib9c13dfb87661ffaa1b470b0b1a880124ab1c5c5"
MahatiC,2017-02-21 21:14:02,https://api.github.com/repos/openstack/swift/git/commits/96f8b957eeb151272ded4e89c285a29bb9797ba1,96f8b957eeb151272ded4e89c285a29bb9797ba1,"Increase test coverage for reconstructor

Some part of the test coverage was omitted in related change
and some has been missing. This change fixes it.

Change-Id: I403b493bd8e59f6bcb586b4263a8e8c267728505
Related-Change-Id: I69e4c4baee64fd2192cbf5836b0803db1cc71705"
tipabu,2016-03-22 06:15:52,https://api.github.com/repos/openstack/swift/git/commits/f3ef616dc6a2c4987c952b31232fa3bbb5bc6801,f3ef616dc6a2c4987c952b31232fa3bbb5bc6801,"Stop using client headers for cross-middleware communication

Previously, Swift3 used client-facing HTTP headers to pass the S3 access
key, signature, and normalized request through the WSGI pipeline.
However, tempauth did not validate that Swift3 actually set the headers;
as a result, an attacker who has captured either a single valid S3-style
temporary URL or a single valid request through the S3 API may impersonate
the user that signed the URL or issued the request indefinitely through
the Swift API.

Now, the S3 authentication information will be taken from a separate
namespace in the WSGI environment, completely inaccessible to the
client. Specifically,

    environ['swift3.auth_details'] = {
        'access_key': <access key>,
        'signature': <signature>,
        'string_to_sign': <normalized request>,
    }

Note that tempauth is not expected to be in production use, but may have
been used as a template by other authentication middlewares to add their
own Swift3 support.

Change-Id: Ib90adcc2f059adaf203fba1c95b2154561ea7487
Related-Change: Ia3fbb4938f0daa8845cba4137a01cc43bc1a713c"
alistairncoles,2017-02-26 04:28:13,https://api.github.com/repos/openstack/swift/git/commits/e4972f5ac731f97b26891012107b4b8492e171fa,e4972f5ac731f97b26891012107b4b8492e171fa,"Fixups for EC frag duplication tests

Follow up for related change:
- fix typos
- use common helper methods
- refactor some tests to reduce duplicate code

Related-Change: Idd155401982a2c48110c30b480966a863f6bd305

Change-Id: I2f91a2f31e4c1b11f3d685fa8166c1a25eb87429"
timuralp,2017-02-23 20:09:18,https://api.github.com/repos/openstack/swift/git/commits/2e199be6048f37ba983b28c4ffff953b8a63594a,2e199be6048f37ba983b28c4ffff953b8a63594a,"Probe tests fail, as requests checks for strings.

The requests library checks that the headers are either strings or
bytes. Currently, the two test_object_expirer tests fail with the
message:
InvalidHeader: Header value 1487879553 must be of type str
or bytes, not <type 'int'>

The header in question is ""x-delete-at"". The patch converts it to
a string, before making a Swift Client request.

Change-Id: I738697cb6b696f0e346345f75e0069048961f2ff"
timuralp,2017-02-22 20:03:20,https://api.github.com/repos/openstack/swift/git/commits/5f11163b79a085d42c430952d3bbbeb88cad705e,5f11163b79a085d42c430952d3bbbeb88cad705e,"Expand SLO manifest documentation.

The patch adds documentation for the SLO raw format, specifically what
the fields are in relation to the documented format (hash vs etag,
bytes vs size_bytes, and name vs path).

Change-Id: I44c74ad406a6e55e4228f52fac623eeabbd7564f"
tipabu,2017-02-23 03:35:21,https://api.github.com/repos/openstack/swift/git/commits/4ccf75fc35c287ac3888baca7e852b3c1ea94b48,4ccf75fc35c287ac3888baca7e852b3c1ea94b48,"Log correct status code for conditional requests

Previously, we'd log a 200 even when we were returning a 412 or 304

Change-Id: I66c871f1f15fb43f19d59331b05cc7567ce10063
Closes-Bug: 1667122"
bloodeagle40234,2015-08-06 08:06:47,https://api.github.com/repos/openstack/swift/git/commits/40ba7f6172465c2f9bc63fb6f4d24f8bb5f96ef9,40ba7f6172465c2f9bc63fb6f4d24f8bb5f96ef9,"EC Fragment Duplication - Foundational Global EC Cluster Support

This patch enables efficent PUT/GET for global distributed cluster[1].

Problem:
Erasure coding has the capability to decrease the amout of actual stored
data less then replicated model. For example, ec_k=6, ec_m=3 parameter
can be 1.5x of the original data which is smaller than 3x replicated.
However, unlike replication, erasure coding requires availability of at
least some ec_k fragments of the total ec_k + ec_m fragments to service
read (e.g. 6 of 9 in the case above). As such, if we stored the
EC object into a swift cluster on 2 geographically distributed data
centers which have the same volume of disks, it is likely the fragments
will be stored evenly (about 4 and 5) so we still need to access a
faraway data center to decode the original object. In addition, if one
of the data centers was lost in a disaster, the stored objects will be
lost forever, and we have to cry a lot. To ensure highly durable
storage, you would think of making *more* parity fragments (e.g.
ec_k=6, ec_m=10), unfortunately this causes *significant* performance
degradation due to the cost of mathmetical caluculation for erasure
coding encode/decode.

How this resolves the problem:
EC Fragment Duplication extends on the initial solution to add *more*
fragments from which to rebuild an object similar to the solution
described above. The difference is making *copies* of encoded fragments.
With experimental results[1][2], employing small ec_k and ec_m shows
enough performance to store/retrieve objects.

On PUT:

- Encode incomming object with small ec_k and ec_m  <- faster!
- Make duplicated copies of the encoded fragments. The # of copies
  are determined by 'ec_duplication_factor' in swift.conf
- Store all fragments in Swift Global EC Cluster

The duplicated fragments increase pressure on existing requirements
when decoding objects in service to a read request.  All fragments are
stored with their X-Object-Sysmeta-Ec-Frag-Index.  In this change, the
X-Object-Sysmeta-Ec-Frag-Index represents the actual fragment index
encoded by PyECLib, there *will* be duplicates.  Anytime we must decode
the original object data, we must only consider the ec_k fragments as
unique according to their X-Object-Sysmeta-Ec-Frag-Index.  On decode no
duplicate X-Object-Sysmeta-Ec-Frag-Index may be used when decoding an
object, duplicate X-Object-Sysmeta-Ec-Frag-Index should be expected and
avoided if possible.

On GET:

This patch inclues following changes:
- Change GET Path to sort primary nodes grouping as subsets, so that
  each subset will includes unique fragments
- Change Reconstructor to be more aware of possibly duplicate fragments

For example, with this change, a policy could be configured such that

swift.conf:
ec_num_data_fragments = 2
ec_num_parity_fragments = 1
ec_duplication_factor = 2
(object ring must have 6 replicas)

At Object-Server:
node index (from object ring):  0 1 2 3 4 5 <- keep node index for
                                               reconstruct decision
X-Object-Sysmeta-Ec-Frag-Index: 0 1 2 0 1 2 <- each object keeps actual
                                               fragment index for
                                               backend (PyEClib)

Additional improvements to Global EC Cluster Support will require
features such as Composite Rings, and more efficient fragment
rebalance/reconstruction.

1: http://goo.gl/IYiNPk (Swift Design Spec Repository)
2: http://goo.gl/frgj6w (Slide Share for OpenStack Summit Tokyo)

Doc-Impact

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: Idd155401982a2c48110c30b480966a863f6bd305"
tipabu,2017-02-21 06:17:23,https://api.github.com/repos/openstack/swift/git/commits/9a36a35121e5eeea2ceed258ae3cc0d2a6f45f83,9a36a35121e5eeea2ceed258ae3cc0d2a6f45f83,"We don't ""yield"" in collect_parts anymore

Change-Id: I6c57d2b89b1b4b13f87511538fc90ba554c869fa"
alistairncoles,2017-02-20 20:53:57,https://api.github.com/repos/openstack/swift/git/commits/9be1d8ba28f9702e8e0e5024fd12f367a18506c4,9be1d8ba28f9702e8e0e5024fd12f367a18506c4,"Fix tox -e docs sphinx errors

Change-Id: I6e200558b75ac539b59b492d13c36702443efc89"
tipabu,2017-01-31 21:46:03,https://api.github.com/repos/openstack/swift/git/commits/8973ceb31add7881b2bb7c63ce47284c92253281,8973ceb31add7881b2bb7c63ce47284c92253281,"Remove per-device reconstruction stats

Now that we're shuffling parts before going through them, those stats no
longer make sense -- device completion would always be 100%.

Also, always use delete_partition for cleanup, so we have one place to
make improvements. This means we'll properly clean up non-numeric
directories.

Also also, put more I/O in the tpool in delete_partition.

Change-Id: Ie06bb16c130d46ccf887c8fcb252b8d018072d68
Related-Change: I69e4c4baee64fd2192cbf5836b0803db1cc71705"
notmyname,2017-02-08 19:35:36,https://api.github.com/repos/openstack/swift/git/commits/11bd6c82ecac8572cf9538a4d92a0361b382f1de,11bd6c82ecac8572cf9538a4d92a0361b382f1de,"2.13.0 authors/changelog updates

Change-Id: I4d90075bd1eb6775b9d736668aa9c7af5eb41f4e"
bloodeagle40234,2017-02-15 01:54:48,https://api.github.com/repos/openstack/swift/git/commits/600db4841e4e76f160ebfc367bf0ef42beee47c4,600db4841e4e76f160ebfc367bf0ef42beee47c4,"Follow up on reconstructor handoffs_only

This is a follow-up for https://review.openstack.org/#/c/425493
This patch includes:

- Add more tests on the configuration with handoffs_first and
  handoffs_only
- Remove unnecessary space in a warning log line. (2 places)
- Change test conf from True/False to ""True""/""False"" (string) because in
  the conf dict, those value should be string.

Co-Authored-By: Janie Richling <jrichli@us.ibm.com>

Change-Id: Ida90c32d16481a15fa68c9fdb380932526c366f6"
clayg,2017-01-25 19:51:03,https://api.github.com/repos/openstack/swift/git/commits/da557011ecc1ec46bce24bd896ec50cbed914ba6,da557011ecc1ec46bce24bd896ec50cbed914ba6,"Deprecate broken handoffs_first in favor of handoffs_only

The handoffs_first mode in the replicator has the useful behavior of
processing all handoff parts across all disks until there aren't any
handoffs anymore on the node [1] and then it seemingly tries to drop
back into normal operation.  In practice I've only ever heard of
handoffs_first used while rebalancing and turned off as soon as the
rebalance finishes - it's not recommended to run with handoffs_first
mode turned on and it emits a warning on startup if option is enabled.

The handoffs_first mode on the reconstructor doesn't work - it was
prioritizing handoffs *per-part* [2] - which is really unfortunate
because in the reconstructor during a rebalance it's often *much* more
attractive from an efficiency disk/network perspective to revert a
partition from a handoff than it is to rebuild an entire partition from
another primary using the other EC fragments in the cluster.

This change deprecates handoffs_first in favor of handoffs_only in the
reconstructor which is far more useful - and just like handoffs_first
mode in the replicator - it gives the operator the option of forcing the
consistency engine to focus on rebalance.  The handoffs_only behavior is
somewhat consistent with the replicator's handoffs_first option (any
error on any handoff in the replicactor will make it essentially handoff
only forever) but the option does what you want and is named correctly
in the reconstructor.

For consistency with the replicator the reconstructor will mostly honor
the handoffs_first option, but if you set handoffs_only in the config it
always takes precedence.  Having handoffs_first in your config always
results in a warning, but if handoff_only is not set and handoffs_first
is true the reconstructor will assume you need handoffs_only and behaves
as such.

When running in handoffs_only mode the reconstructor will start to log a
warning every cycle if you leave it running in handoffs_only after it
finishes reverting handoffs.  However you should be monitoring on-disk
partitions and disable the option as soon as the cluster finishes the
full rebalance cycle.

1. Ia324728d42c606e2f9e7d29b4ab5fcbff6e47aea fixed replicator
handoffs_first ""mode""

2. Unlike replication each partition in a EC policy can have a different
kind of job per frag_index, but the cardinality of jobs is typically
only one (either sync or revert) unless there's been a bunch of errors
during write and then handoffs partitions maybe hold a number of
different fragments.

Known-Issues:

handoffs_only is not documented outside of the example config, see lp
bug #1626290

Closes-Bug: #1653018

Change-Id: Idde4b6cf92fab6c45f2c0c2733277701eb436898"
osanai-hisashi,2017-02-12 11:16:59,https://api.github.com/repos/openstack/swift/git/commits/ae236b57bec789355bd2b192cd474b3e0875ec7a,ae236b57bec789355bd2b192cd474b3e0875ec7a,"Hisashi Osanai's responsibility has been changed

It has been a real honour working with you, guys. Thanks!

Change-Id: I2668ddf546791ca36fe22d6fdd2d5e745ed14200"
clayg,2017-02-10 07:17:17,https://api.github.com/repos/openstack/swift/git/commits/5bb3ea162c7cd264d0c434bc8ac8240f964d2904,5bb3ea162c7cd264d0c434bc8ac8240f964d2904,"Ignore cache files when comparing synced parts

Prior to the Related-Change no suffixes were written to hashes.invalid
until after initial suffix hashing created hashes.pkl - and in our probe
test the only updates to the partition occurred before replication.

Before the related change with sync_method = rsync it was possible when
starting from a clean slate to write data, and replicate from a handoff
partition without generating a hashes.invalid file in any primary.

After the Related-Change it was no longer possible to write data without
generating a hashes.invalid file; however with sync_method = rsync the
replicator could still replicate data into a partition that never
received an update directly and therefore no hashes.invalid.

When using sync_method = ssync replication updates the hashes.invalid
like any normal update to the partition and therefore all partitions
always have a hashes.invalid.

This change opts to ignores these implementation details in the probe
tests when comparing the files between synced partitions by
black-listing these known cache files and only validates that the disk
file's on disk files are in sync.

Related-Change-Id: I2b48238d9d684e831d9777a7b18f91a3cef57cd1

Change-Id: Ia9c50d7bc1a74a17c608a3c3cfb8f93196fb709d
Closes-Bug: #1663021"
alistairncoles,2017-01-31 13:30:20,https://api.github.com/repos/openstack/swift/git/commits/6249945a4f3b634b1e298b5a730853d1c1ee8dea,6249945a4f3b634b1e298b5a730853d1c1ee8dea,"Fix misleading hash invalidations test comments

...and refactor two extremely similar tests to use a single
helper method - the only paramerization being the existence
or not of hashes.pkl at start of the test.

Change-Id: I601218a9a031e7fc77bc53ea735e89700ec1647d
Related-Change: Ia43ec2cf7ab715ec37f0044625a10aeb6420f6e3"
namnh68,2017-02-07 08:06:23,https://api.github.com/repos/openstack/swift/git/commits/44fc037f970f05fa770f55bdbadc2cf188fbd500,44fc037f970f05fa770f55bdbadc2cf188fbd500,"Fix_typo: ""subsitute"" -> ""substitute""

There is a wrong word, it should be updated.

Change-Id: I17a1fed844bcd8ab3ed668a34a8471e5f6032963"
gengchc2,2017-02-07 03:28:30,https://api.github.com/repos/openstack/swift/git/commits/702c8048875736911fd8d5f8a14b02842606986d,702c8048875736911fd8d5f8a14b02842606986d,"Use https instead of http for git.openstack.org

Trivialfix

Change-Id: I4862d073adecf1cc5312a64795ad890eeddf774d"
tipabu,2017-01-05 21:03:21,https://api.github.com/repos/openstack/swift/git/commits/08ac32ee4e2650e6b6ba6d9ba4525f17098bce3b,08ac32ee4e2650e6b6ba6d9ba4525f17098bce3b,"Prevent traceback in object-server on client disconnect

This only affects chunked transfers to replicated policies.
EC policies already have comparable error handling in
swift.common.utils._MultipartMimeFileLikeObject.read

See also: https://github.com/eventlet/eventlet/commit/c3ce3ee
but note that eventlet.wsgi.ChunkReadError and
swift.common.exceptions.ChunkReadError are entirely unrelated.

Change-Id: Ic9bcb73ea518c672a58a71d2b92152892f1ce2e4"
bloodeagle40234,2017-02-06 12:08:40,https://api.github.com/repos/openstack/swift/git/commits/b1c36dc154061413ecd86d5fb19243a30f107512,b1c36dc154061413ecd86d5fb19243a30f107512,"Fix test_replicator assertion

Because random.randint includeds both endpoints so that
random.randint(0, 9) which is assigned in replicatore
should be [0-9]. Hence, the assertion for replication_cycle should be
*less or equal to* 9. And the replication_cycle should be mod of 10.

Change-Id: I81da375a4864256e8f3b473d4399402f83fc6aeb"
gaborantal,2017-02-06 15:34:38,https://api.github.com/repos/openstack/swift/git/commits/fb3d01a974fb7df8cfadc56ff15bdc04b3c90759,fb3d01a974fb7df8cfadc56ff15bdc04b3c90759,"Fixed indentation in common/ and obj/

TrivialFix

Change-Id: I78359616ada6651a93fd4ec935d838aeb7765076"
psachin,2016-07-30 10:40:03,https://api.github.com/repos/openstack/swift/git/commits/f713bb135224b45b16f054a9d90448fd0bebce67,f713bb135224b45b16f054a9d90448fd0bebce67,"Fix swift-get-nodes arg parsing for missing ring

- Verify .ring.gz path exist if ring file is the first argument.
- Code Refactoring:
  - swift/cli/info.parse_get_node_args()
  - Respective test cases for info.parse_get_node_args()

Closes-Bug: #1539275

Change-Id: I0a41936d6b75c60336be76f8702fd616d74f1545
Signed-off-by: Sachin Patil <psachin@redhat.com>"
cschwede,2017-02-04 05:50:28,https://api.github.com/repos/openstack/swift/git/commits/67d545e90f8046e686d3877c245b123c8b5fa58b,67d545e90f8046e686d3877c245b123c8b5fa58b,"Fix timing test error when rebalancing

The reported timing can be 00:59:59 sometimes, but is still valid. This
will fail in the tests, as seen in [1].

This patch fixes this by mocking the current time, ensuring that the
first two rebalances happen at the same time.

[1] http://logs.openstack.org/97/337297/32/check/gate-swift-python27-ubuntu-xenial/46203f1/console.html#_2017-02-08_07_28_42_589176

Change-Id: I0fd43d5bb13d0e88126f4f6ba14fb87faab6df9c"
gaborantal,2017-02-02 14:19:13,https://api.github.com/repos/openstack/swift/git/commits/5817f804fddaa1fd7642d774c0435148fb2067b6,5817f804fddaa1fd7642d774c0435148fb2067b6,"Handle log message interpolation by the logger

According to OpenStack Guideline[1], logged string message should be
interpolated by the logger.

[1]: http://docs.openstack.org/developer/oslo.i18n/guidelines.html#adding-variables-to-log-messages

Change-Id: I49952348c06e340c6cfc708028f2b06e02a16dfc
Closes-Bug: #1661262"
clayg,2017-01-13 06:31:12,https://api.github.com/repos/openstack/swift/git/commits/aa71d7e77b266a4111b3b61ed41a204a28ec24e8,aa71d7e77b266a4111b3b61ed41a204a28ec24e8,"Better optimistic lock in get_hashes

mtime and force_rewrite have a *long* tangled history starting back in
lp bug #1089140 that's been carried through many refactors.

Using force_rewrite on errors reading from the pickle has always been a
read-modify-write race; but maybe less bad than the infinite recursion
bug it fixed?

Using getmtime has always had somewhat dubious resolution for race
detection - the only way to be sure the content of the file is the same
as when we read it without locking is to open the file up and check.

Unfortunately, the ondisk data wasn't rich enough to disambiguate when
the ondisk state represented may have changed (e.g. when an invalidation
for a suffix currently being hashed is consolidated, or if all hashes
are invalid like after an error reading the hashes.pkl) - so we also add
a key with a timestamp for race detection and write down if the
dictionary has any valid suffix hashes.

Along the way, we accidentally fix a serious performance regression with
hash invalidations...

We currently rehash all invalid suffixes twice on REPLICATE calls.

First we consolidating hashes, marking all invalid suffixes as None
and then perform the first suffix rehashing.

And then also *every time* one more time again immediately as soon as we
get done with the first one we throw all that work we just did on the
floor and rehash ALL the invalid suffixes *again* a second time because
the race detector erroneously notices the hashes.pkl file has been
""modified while we were hashing"".

But we're not in a race.  We took the mtime before calling consolidate
hashes, and consolidate hashes modified the pickle when it wrote back the
invalid suffixes.

FWIW, since consolidate hashes operates under directory lock it can't
race - but we don't want suffix rehashing to hold the directory lock
that long so we use optimistic locking - i.e. we optimistically perform
the rehash w/o a lock and write back the update iif it hasn't changed
since read; if it has we retry the whole operation

UpgradeImpact:

If you upgrade and need to rollback - delete all hashes.pkl:

    rm /srv/node*/*/object*/*/hashes.pkl

Anything on significance achived here was blatently plagerised from the
work of others:

Co-Author: Pavel Kvasnička <pavel.kvasnicka@firma.seznam.cz>
Related-Change-Id: I64cadb1a3feb4d819d545137eecfc295389794f0
Co-Author: Alistair Coles <alistair.coles@hpe.com>
Related-Change-Id: I8f6bb89beaaca3beec2e6063299189f52e9eee51
Related-Change-Id: I08c8cf09282f737103e580c1f57923b399abe58c

Change-Id: Ia43ec2cf7ab715ec37f0044625a10aeb6420f6e3"
clayg,2017-01-25 19:40:54,https://api.github.com/repos/openstack/swift/git/commits/eadb01b8af3cfdea801441744c360c200b08b8cc,eadb01b8af3cfdea801441744c360c200b08b8cc,"Do not revert fragments to handoffs

We're already a handoff - just wait until we can ship it to the right
primary location.

If we timeout talking to a couple of nodes (or more likely get rejected
for connection limits because of contention during a rebalance) we can
actually end up making *more* work if we move the part to another node.
I've seen clusters get stuck on rebalance just passing parts around
handoffs for *days*.

Known-Issues:

If we see a 507 from a primary and we're not in the handoff list (we're
an old primary post rebalance) it'd probably be not so terrible to try
to revert it to the first handoff if it's not already holding a part.
But that's more work and sounds more like lp bug #1510342

Closes-Bug: #1653169

Change-Id: Ie351d8342fc8e589b143f981e95ce74e70e52784"
smerritt,2017-01-31 00:05:23,https://api.github.com/repos/openstack/swift/git/commits/90d517f10ef0c2c651f8ffe92c7da3dcfe2cd83a,90d517f10ef0c2c651f8ffe92c7da3dcfe2cd83a,"Remove some cruft in test_proxy_logging

Change-Id: I7533d671a62d456d4556435aad78aab389c6cf07"
tipabu,2017-01-30 23:30:35,https://api.github.com/repos/openstack/swift/git/commits/13f1fc08853dd98a7727f3c13d022e0e34739799,13f1fc08853dd98a7727f3c13d022e0e34739799,"Clean up EC overview docs a bit

Change-Id: I3bab2c015c63f32dcd6e4beefbcd0fcf22e91eec"
tipabu,2017-01-26 02:03:28,https://api.github.com/repos/openstack/swift/git/commits/c7bffd6cee400b703c76e47f8b8602ca775d69ec,c7bffd6cee400b703c76e47f8b8602ca775d69ec,"Warn about using EC with isa_l_rs_vand and nparity >= 5

We *know* there are combinations that will prevent decoding, and we're
going to be increasingly aggressive about getting it out of clusters.

Partial-Bug: 1639691
Change-Id: I50159c9d19f2385d5f60112e9aaefa1a68098313"
matthewoliver,2017-01-30 00:02:00,https://api.github.com/repos/openstack/swift/git/commits/e8589b2d3079068f1d1473580fe0d196bf20ea3e,e8589b2d3079068f1d1473580fe0d196bf20ea3e,"Correct ringbuilder's set_weight usage string

The large version of the set_weight usage is missing the
new weight value. This has lead to confusion on the mailing
list.

This patch adds a <new_weight> option to not only add the
missing argument but also to make the command more clear
by differentiate between the search weight (--weight) and
how to set the new.

Change-Id: I7a4c5a6a4438f647fa33d65e22d1863c27d345be
Closes-Bug: #1660214"
clayg,2017-01-25 19:45:55,https://api.github.com/repos/openstack/swift/git/commits/2f0ab78f9ff85483a157c9cbb17b50eeff539ef9,2f0ab78f9ff85483a157c9cbb17b50eeff539ef9,"Shuffle disks and parts in reconstructor

The main problem with going disk by disk is that it means all of your
I/O is only on one spindle at a time and no matter how high you set
concurrency it doesn't go any faster.

Closes-Bug: #1491605

Change-Id: I69e4c4baee64fd2192cbf5836b0803db1cc71705"
clayg,2017-01-25 20:26:40,https://api.github.com/repos/openstack/swift/git/commits/5cd309570913c45d5e085d1968d19b97d4f04b82,5cd309570913c45d5e085d1968d19b97d4f04b82,"Give spawn a cycle

This fixes an annoying race when running the reconstrcutor in
interactive mode on dev machine with not much in the way of data.

I'm not sure why.

Drive-By: kill useless continue

Closes-Bug: #1653174

Change-Id: I778c2a929d746ad88fa1ec1d1503d676a8b4ed61"
alistairncoles,2017-01-25 17:29:56,https://api.github.com/repos/openstack/swift/git/commits/b5530f4620a0a9ba6b9011c68a93b6e1ef928233,b5530f4620a0a9ba6b9011c68a93b6e1ef928233,"Bring docs inline with changes to tox envs

Make development guidelines consistent with recent
changes to tox envs, specifically the removal of
""-in-process"" from some test env names [1] and the
removal of the ""func-fast-post"" test env [2].

[1] Related-Change: I02477d81b836df71780942189d37d616944c4dce
[2] Related-Change: I6faf8fcfa0a1d96aaf0f5e0ad2106b2b416da22f

Change-Id: I08b92c005ee50beff09a92b4331dd7dbeed79bde"
cschwede,2016-06-28 13:34:52,https://api.github.com/repos/openstack/swift/git/commits/9b0a1ccc699966f857c66d2f3f263f65e6ca964e,9b0a1ccc699966f857c66d2f3f263f65e6ca964e,"Fix inline tempurl/formpost signature examples

The inline examples contain double backslashes, and this creates invalid
signatures. This bugged me a second time now, so let's fix that and make it
fool proof so that I don't need to check the proxy server logs another time for
the same reason.

Changed the docstring to raw docstring to render the backslashes
correctly both in Python and in the restructured text, according to
http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#escaping-mechanism

Change-Id: I77e12cfd12ad998346dd42f7245b9d27124a0a97"
clayg,2017-01-11 02:53:08,https://api.github.com/repos/openstack/swift/git/commits/442cc1d16d45fbfd50c57fc62e2582674d7348c4,442cc1d16d45fbfd50c57fc62e2582674d7348c4,"Fix race in new partitions detecting new/invalid suffixes.

The assumption that we don't need to write an entry in the invalidations
file when the hashes.pkl does not exist turned out to be a premature
optimization and also wrong.

Primarily we should recognize the creation of hashes.pkl is the first
thing that happens in a part when it lands on a new primary.  The code
should be optimized toward the assumption of the most common disk state.

Also, in this case the extra stat calls to check if the hashes.pkl exists
were not only un-optimized - but introducing a race.

Consider the common case:

proc 1                         | proc 2
-------------------------------|---------------------------
a) read then truncate journal  |
b) do work                     | c) append to journal
d) apply ""a"" to index          |

The index written at ""d"" may not (yet) reflect the entry writen by proc
2 at ""c""; however, it's clearly in the journal so it's easy to see we're
safe.

Adding in the extra stat call for the index existence check increases
the state which can effect correctness.

proc 1                        | proc 2
------------------------------|---------------------------
a) no index, truncate journal |
b) do work                    | b) iff index exists
                              | c) append to journal
d) apply (or create) index    |

If step ""c"" doesn't happen because the index does not yet exist - the
update is clearly lost.

In our case we'd skip marking a suffix as invalid when the hashes.pkl
does not exist because we know ""the next time we rehash"" we'll have to
os.listdir suffixes anyway.  But if another process is *currently*
rehashing (and has already done it's os.listdir) instead we've just
dropped an invalidation on the floor.

Don't do that.

Instead - write down the invalidation.  The running rehash is welcome to
proceed on outdated information - as long as the next pass will grab and
hash the new suffix.

Known-Issue(s):

If the suffix already exists there's an even chance the running rehash
will hash in the very update for which we want to invalidate the suffix,
but that's ok it's idempotent.

Co-Author: Pavel Kvasnička <pavel.kvasnicka@firma.seznam.cz>
Co-Author: Alistair Coles <alistair.coles@hpe.com>
Co-Author: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>
Related-Change-Id: I64cadb1a3feb4d819d545137eecfc295389794f0
Change-Id: I2b48238d9d684e831d9777a7b18f91a3cef57cd1
Closes-Bug: #1651530"
tipabu,2017-01-20 19:41:15,https://api.github.com/repos/openstack/swift/git/commits/c33f2b49ddaa38e3faecb60a826fd9493d0eb09f,c33f2b49ddaa38e3faecb60a826fd9493d0eb09f,"Simplify get_different_suffix_df args

Change-Id: I18a775c5b61c43c112f3658f9c27c7d4149ebbef
Related-Change: I3a661fae5c7cfeb2dbcdb7f46941f55244d0b9ad"
tipabu,2017-01-05 22:00:09,https://api.github.com/repos/openstack/swift/git/commits/4ee20dba482e8f8e4b9ea574428c72c5728a10a1,4ee20dba482e8f8e4b9ea574428c72c5728a10a1,"Default object_post_as_copy to False

Additionally, emit deprecation warnings when running POST-as-COPY

Change-Id: I11324e711057f7332577fd38f9bff82bdc6aac90"
tipabu,2017-01-20 00:53:35,https://api.github.com/repos/openstack/swift/git/commits/c4d455ca03bdf27c3f553cd1834172d9b7d777b1,c4d455ca03bdf27c3f553cd1834172d9b7d777b1,"Minor dev guidelines formatting fixes

Change-Id: I650bc69bed98ac3cd45c79caaf4007d713e21fd9"
alistairncoles,2017-01-18 18:31:53,https://api.github.com/repos/openstack/swift/git/commits/b29eb1354879a89e641dbaf3f5a712c90e98b9e2,b29eb1354879a89e641dbaf3f5a712c90e98b9e2,"Add assertion to test_consolidate_hashes_raises_exception

Trivial follow up to related change to verify logger warning
with both starting conditions.

Related-Change: If712e4431322df5c3e84808ab2d815fd06c76426

Change-Id: Id8e87a1d27d27d8a5e77172396105946a6804336"
cschwede,2016-06-08 09:20:26,https://api.github.com/repos/openstack/swift/git/commits/47901ea4d7fe5ffbbb826d561ad4a02dc4ea8f4a,47901ea4d7fe5ffbbb826d561ad4a02dc4ea8f4a,"Rebalance with min_part_seconds_left > 0

As described in bug #1558754 a rebalance after removing a device fails
if min_part_seconds_left > 0, despite the note that a rebalance should
remove partitions from removed devices on the next run.

This patch skips the early exit, and lets the builder itself handling
the rebalance. Partitions that shouldn't move now are still not moved
(except for removed devices), and there is still a warning if no
partition has been moved due to the fact that min_part_hours did not yet
pass.

A small test has been added to ensure rebalancing after removing a
device works without using the --force option (tests fails on current
master). Another test ensures that a rebalance after a recent change
(for example increasing a device's weight) does not move partitions and
still reports the former warning message.

Closes-Bug: 1558754
Change-Id: I083022d066338cbe6234bab491c7a8e8e0a7b517"
bloodeagle40234,2017-01-16 09:31:05,https://api.github.com/repos/openstack/swift/git/commits/bbefaca2ef4103e99ff614a03bdb3315d87aa2fa,bbefaca2ef4103e99ff614a03bdb3315d87aa2fa,"Fix unnecessary for-loop and mis docs

This is follow-up for https://review.openstack.org/#/c/419107
to address:

- Remove unnecessary for-loop block that breaks the end of the loop
  always
- Correct mis document says ""two more times"" but actually does only ""one
  more time""

Change-Id: I3d76275afc6448709a4b3588259e085bce7fa21d"
ajaeger,2017-01-16 10:22:08,https://api.github.com/repos/openstack/swift/git/commits/d4de5502c2f0f4727227dc0b8acfadf3de0fba79,d4de5502c2f0f4727227dc0b8acfadf3de0fba79,"Remove broken links

The Install Guides for Kilo and older are not published anymore, all
these links give a 404. Remove the links for these outdated versions.

Change-Id: I73e96b0ca4840d83c4f3561b4ffb08510d61c8d7"
clayg,2016-12-01 14:17:20,https://api.github.com/repos/openstack/swift/git/commits/f0122b69c41ccedadca602f5e0edf7df644c9118,f0122b69c41ccedadca602f5e0edf7df644c9118,"Cleanup tests from empty suffix quarantined db fix

Remove some cruft and cleanup tests from related change.

Related-Change: I721fa5fe9a7ae22eead8d5141f93e116847ca058
Change-Id: Id3addaca9057569a535e4df1c4209a0ddad84d20"
alistairncoles,2017-01-13 14:44:04,https://api.github.com/repos/openstack/swift/git/commits/bcec1f4a7ec92e48c4230e6d0a2a608243aef19f,bcec1f4a7ec92e48c4230e6d0a2a608243aef19f,"Fix object server tests to include content-type headers

In [1] it was necessary to override the monkey patching
of mimetools so that mimetools would apply a default
Content-Type=text/plain header when missing from object server
requests. Otherwise some tests fail due to Content-Type=None.

This patch fixes the fragile tests by adding a Content-Type header,
and thus removes the need to override the mimetool monkey patching.
This is closer to the real world in which mimetools is patched in
the object server and PUT requests should have a Content-Type.

Drive-by fix some typos and apply config assertions to all policies.

[1] Related-Change: I5b5f90bb898a335e6336f043710a05a44e3b810f

Change-Id: I4c5bca42f753be4165cb731b8e3957eb4cdd28d5"
gaborantal,2015-11-19 14:41:20,https://api.github.com/repos/openstack/swift/git/commits/51d8f6403de6b1f09583b3e7f5608e8b38ce97f3,51d8f6403de6b1f09583b3e7f5608e8b38ce97f3,"Reduced complexity of _response_iter() method

The _response_iter method in swob.py is too big, almost 100 lines.
Furthermore, inside the _response_iter method there is a logically
separated code snippet, which can be extracted. So I extracted into
a new method, which made _response_iter() less complex, more readable.

Change-Id: Ib57f912bb748f117b7adb6563fa70f2b3b9ac01f"
clayg,2017-01-11 02:52:10,https://api.github.com/repos/openstack/swift/git/commits/95c7c0109b97479ecadc9a74864a8b56c4f5e985,95c7c0109b97479ecadc9a74864a8b56c4f5e985,"Optimize noop case for suffix rehash

REPLICATE calls where everything is in sync and no suffixes have been
invalidated are supposed to be pretty common and fairly cheap.  If an
invalidations files is empty there's no need to perform a truncation
write operation which will presumably at some point have to flush.

Everyone owes Pavel a quarter for the one billion less write ops in prod

... and Matt a nickel for 20ms of not sleep back every unittest run

As a drive by I remove a crufty confusing OSError exception handler
around an open call that would be using O_CREAT in a directory that it
either just created or opened a file from - it wasn't going to raise
ENOENT.  Similarly rather than loose sleep trying to reason about all
the crazy exceptions that actually *could* pop anywhere in this method,
instead I improve the logging where any such exception would be caught.
This way we can get the details we need to focus on only errors that
actually happen.

Author: Pavel Kvasnička <pavel.kvasnicka@firma.seznam.cz>
Co-Author: Matthew Oliver <matt@oliver.net.au>

Related-Change-Id: I64cadb1a3feb4d819d545137eecfc295389794f0

Change-Id: If712e4431322df5c3e84808ab2d815fd06c76426"
clayg,2017-01-11 04:27:06,https://api.github.com/repos/openstack/swift/git/commits/e772cf95c65b98bb17b094585ff3ff2040c148c9,e772cf95c65b98bb17b094585ff3ff2040c148c9,"Extract test pattern to helper

An existing test in diskfile established an prior art for a pattern to
create a diskfile with a different suffix - I'd like to make use of it
in new tests in multiple unrelated change sets.

Also add a test to demonstrate some existing robustness and prevent
regression.

Author: Pavel Kvasnička <pavel.kvasnicka@firma.seznam.cz>
Co-Author: Alistair Coles <alistair.coles@hpe.com>
Related-Change-Id: I64cadb1a3feb4d819d545137eecfc295389794f0
Change-Id: I3a661fae5c7cfeb2dbcdb7f46941f55244d0b9ad"
MahatiC,2016-07-25 14:40:44,https://api.github.com/repos/openstack/swift/git/commits/69f7be99a6e090a251412a6925e0f29946818c6a,69f7be99a6e090a251412a6925e0f29946818c6a,"Move documented reclaim_age option to correct location

The reclaim_age is a DiskFile option, it doesn't make sense for two
different object services or nodes to use different values.

I also driveby cleanup the reclaim_age plumbing from get_hashes to
cleanup_ondisk_files since it's a method on the Manager and has access
to the configured reclaim_age.  This fixes a bug where finalize_put
wouldn't use the [DEFAULT]/object-server configured reclaim_age - which
is normally benign but leads to weird behavior on DELETE requests with
really small reclaim_age.

There's a couple of places in the replicator and reconstructor that
reach into their manager to borrow the reclaim_age when emptying out
the aborted PUTs that failed to cleanup their files in tmp - but that
timeout doesn't really need to be coupled with reclaim_age and that
method could have just as reasonably been implemented on the Manager.

UpgradeImpact: Previously the reclaim_age was documented to be
configurable in various object-* services config sections, but that did
not work correctly unless you also configured the option for the
object-server because of REPLICATE request rehash cleanup.  All object
services must use the same reclaim_age.  If you require a non-default
reclaim age it should be set in the [DEFAULT] section.  If there are
different non-default values, the greater should be used for all object
services and configured only in the [DEFAULT] section.

If you specify a reclaim_age value in any object related config you
should move it to *only* the [DEFAULT] section before you upgrade.  If
you configure a reclaim_age less that your consistency window you are
likely to be eaten by a Grue.

Closes-Bug: #1626296

Change-Id: I2b9189941ac29f6e3be69f76ff1c416315270916
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>"
alistairncoles,2017-01-12 23:44:45,https://api.github.com/repos/openstack/swift/git/commits/1a8085fc4196a0b135a011d0e812ef9d0242058b,1a8085fc4196a0b135a011d0e812ef9d0242058b,"Test current reclaim_age handling

This is just tests to demonstrate the current behavior - and provide
context of behavioral differences/consistency in the related change.

See the related change for context.

The related change slightly modifies the outcome of the
reclaim/REPLICATE test.

The related change has no effect on the config handling.

The related change greatly simplfies the reclaim_age option
cleanup_ondisk_files plumbing tests.

Related-Change-Id: I2b9189941ac29f6e3be69f76ff1c416315270916
Co-Author: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I5b5f90bb898a335e6336f043710a05a44e3b810f"
bloodeagle40234,2017-01-13 01:44:10,https://api.github.com/repos/openstack/swift/git/commits/4a2adfe453245b1e798f1a5cb3a50fe08407e347,4a2adfe453245b1e798f1a5cb3a50fe08407e347,"Make timestamp setting to be consistent in test loop

This is a kind of the follow-up patch
https://review.openstack.org/#/c/419579

And I'd address one more my mistake with this patch, that is
inconsistent timestamp setting between
test_GET_limit_marker_json and test_GET_limit_marker_xml

Change-Id: Ia2e0c62c6146c0d79c7de2de82fe13ec4dd98165"
smerritt,2017-01-12 21:42:57,https://api.github.com/repos/openstack/swift/git/commits/0590d20fccd0ca2202c6246eb6b213115427f237,0590d20fccd0ca2202c6246eb6b213115427f237,"Fix download resumption for new SLOs.

SLOs created after commit 2d25fe6ad3573b2a06b6b3e5e66493d7b0c55693
have an explicit X-Object-Sysmeta-SLO-Size attribute. Fetching one of
those with a range like ""bytes=100-"" would crash and cause a 500. This
commit fixes the crash.

Closes-Bug: #1656147

Change-Id: I174ed98b4f01a5943af12177d6f8c3586f049778"
alistairncoles,2017-01-12 18:04:40,https://api.github.com/repos/openstack/swift/git/commits/dcb432b176f8b77d57450e822e244fd9d5ae06fe,dcb432b176f8b77d57450e822e244fd9d5ae06fe,"Trivial follow up to addition of last modified in container listings

Trivial fixes in follow up to [1]

- give container unique timestamps in listing test
- remove accidental line duplication
- add missing last modified time assertion

[1] Related-Change: Iba0503916f1481a20c59ae9136436f40183e4c5b

Change-Id: Ia1e9f292c62197f1f19e86936c8d05e6cff131be"
bloodeagle40234,2014-12-16 04:45:41,https://api.github.com/repos/openstack/swift/git/commits/652276fea60089c8f62cf9495dc873b932652487,652276fea60089c8f62cf9495dc873b932652487,"Support last modified on listing containers

For now, last modified timestamp is supported only on
object listing. (i.e. GET container)

For example:

GET container with json format results in like as:

[{""hash"": ""d41d8cd98f00b204e9800998ecf8427e"", ""last_modified"":
""2015-06-10T04:58:23.460230"", ""bytes"": 0, ""name"": ""object"",
""content_type"": ""application/octet-stream""}]

However, container listing (i.e. GET account) shows just a dict
consists of (""name"", ""bytes"", ""name"") for each container.

For example:

GET accounts with json format result in like as:

[{""count"": 0, ""bytes"": 0, ""name"": ""container""}]

This patch is for supporting last_modified key in the container
listing results as well as object listing like as:

[{""count"": 0, ""bytes"": 0, ""name"": ""container"", ""last_modified"":
""2015-06-10T04:58:23.460230""}]

This patch is changing just output for listing. The original
timestamp to show the last modified is already in container table
of account.db as a ""put_timestamp"" column.

Note that this patch *DOESN'T* change the put_timestamp semantics.
i.e. the last_modified timestamp will be changed only at both PUT
container and POST container.
(PUT object doesn't affect the timestamp)

Note that the tuple format of returning value from
swift.account.backend.AccountBroker.list_containers is now
(name, object_count, bytes_used, put_timestamp, 0)

* put_timestamp is added *

Original discussion was in working session at Vancouver Summit.
Etherpads are around here:

https://etherpad.openstack.org/p/liberty-swift-contributors-meetup
https://etherpad.openstack.org/p/liberty-container-listing-update

DocImpact

Change-Id: Iba0503916f1481a20c59ae9136436f40183e4c5b"
tipabu,2017-01-11 18:20:08,https://api.github.com/repos/openstack/swift/git/commits/244e6400051dd45f905d09de5aa93af5cc51f686,244e6400051dd45f905d09de5aa93af5cc51f686,"Tighten the move-one-replica test

We only need one additional rebalance to get something well-balanced
and well-dispersed.

Drive-by to break a little earlier in the builder after we move a part.

Change-Id: I78b86292c98be5e247a694b9db71d9267e1a0a22"
notmyname,2017-01-05 18:24:09,https://api.github.com/repos/openstack/swift/git/commits/8abe2496ac7efd59e3976292720e4c29f41668d2,8abe2496ac7efd59e3976292720e4c29f41668d2,"added a quote

Change-Id: I69f92aa9af160e4db2d5eb1e92545fc8ae050538"
clayg,2017-01-04 00:10:42,https://api.github.com/repos/openstack/swift/git/commits/0fd7257fc8f933b288f352bb1b843c76d2f53674,0fd7257fc8f933b288f352bb1b843c76d2f53674,"Fix flaky expirer probe test

This does not address the underlying lp bug #1652323 with ssync that
makes ssync inconsistent with expired objects.

Change-Id: Ia12dc27a12418637587c57ff4f5744d00c661691
Related-Bug: #1652323
Closes-Bug: #1653836"
kellerbr-ibm,2017-01-04 16:21:06,https://api.github.com/repos/openstack/swift/git/commits/aa17ae1b049d20ef84ef73de1e33b7f15f4bee28,aa17ae1b049d20ef84ef73de1e33b7f15f4bee28,"Allow Hacking H401, H403 check

Currently swift ignores a lot of the Hacking style guide. This patch
enables the H401 and H403 checks and fixes any violations. With this
we can get a little closer to following the OpenStack style guidelines.

Change-Id: I5109a052f2ceb2e6a9a174cded62f4231156d39b"
donaghmccabe,2017-01-04 14:43:47,https://api.github.com/repos/openstack/swift/git/commits/dc0a592411b6389ec70549a52185d9f75882876f,dc0a592411b6389ec70549a52185d9f75882876f,"Donagh McCabe has been reassigned to different project.

Change-Id: I8a55b2a2b0dc55c865a361783f516a04b06f6bfa"
TuanLAF,2016-09-23 08:52:59,https://api.github.com/repos/openstack/swift/git/commits/cbb99f97b02857dd638b0d61f5e19b584037b25f,cbb99f97b02857dd638b0d61f5e19b584037b25f,"Replace six iteration methods with standard ones

1.As mentioned in [1], we should avoid using six.iterXXX
to achieve iterators. We can use dict.XXX instead, as it will
return iterators in PY3 as well.

2.In py2, the performance about list should be negligible,
see the link [2].

[1] https://wiki.openstack.org/wiki/Python3
[2] http://lists.openstack.org/pipermail/openstack-dev/2015-June/066391.html

Change-Id: I35b6c00d6ce7c6dd535932c97c071ae4d5f503e3"
MahatiC,2016-10-26 15:27:51,https://api.github.com/repos/openstack/swift/git/commits/fd6edf7bc5de2309edd744d20c29d367dc8785df,fd6edf7bc5de2309edd744d20c29d367dc8785df,"Confirm receipt of SLO PUT with etag

With a multipart-manifest PUT request, if client sends the md5 of the
segments' etags, a 422 Unprocessable Entity response is returned. This
patch fixes that and confirms the etag

Change-Id: I4598a2a3f16ca8727bb07bbb6d8efcfcae777796
Closes-Bug: #1213200
Co-Authored-By: Tim Burke <tim@swiftstack.com>"
alistairncoles,2016-07-25 12:50:24,https://api.github.com/repos/openstack/swift/git/commits/9f30c5d31ea67c7a4a7950593748d849dca591cd,9f30c5d31ea67c7a4a7950593748d849dca591cd,"Make tempurl functional tests clean up account keys

Addresses a TODO in test/functional/test_account.py where
an account metadata test was having to clean up tempurl keys
in the account metadata that were left by another test in
a different module. This cleanup is necessary because tests
in test_account.py fail if there is any pre-existing
account metadata.

This patch:

* makes the tempurl tests clean up their keys from account
  metadata.

* makes the test_account.py:TestAccount class remove any
  pre-existing metadata before attempting any tests and
  replacing that metadata when all the tests in that class
  have completed. This is more robust than the existing code
  which only removes any tempurl keys that might be in the
  account - now you could have x-account-meta-foo = bar in
  the test account and test_account.py will still pass.

* consolidates some common setup code currently repeated for
  many of the functional test classes into into a BaseEnv class.

Change-Id: I874a9e23dfcdd1caa934945b46089f11b9f6de65"
ajaeger,2016-09-02 13:00:00,https://api.github.com/repos/openstack/swift/git/commits/a0345cb28781ef49f6ebcd1f01839c7a70a49a3f,a0345cb28781ef49f6ebcd1f01839c7a70a49a3f,"Move bandit to pep8

The bandit gate is passing, let's make it voting.

Since bandit is a security linter, add it to the linter target - called
pep8 - and run it there. This will save the CI systems spawning an extra
test machine for this.

Needed-By: I90e5401ee8e46a2a153adb62d0f99a8a88a686b8
Change-Id: I75eeefa2441466da60b9b206769a2e64e9c1e7a9"
tipabu,2016-06-17 22:03:25,https://api.github.com/repos/openstack/swift/git/commits/523bc0ab71a4d976782a03c2beb46e5e8a25706b,523bc0ab71a4d976782a03c2beb46e5e8a25706b,"Always set swift processes to use UTC

Previously, we would set the TZ environment variable to the result of

    time.strftime(""%z"", time.gmtime())

This has a few problems.

 1. The ""%z"" format does not appear in the table of formatting
    directives for strftime [1]. While it *does* appear in a
    footnote [2] for that section, it is described as ""not supported by
    all ANSI C libraries."" This may explain the next point.

 2. On the handful of Linux platforms I've tested, the above produces
    ""+0000"" regardless of the system's timezone. This seems to run
    counter to the intent of the patches that introduced the TZ
    mangling. (See the first two related changes.)

 3. The above does not produce a valid Posix TZ format, which expects
    (at minimum) a name consisting of three or more alphabetic
    characters followed by the offset to be added to the local time to
    get Coordinated Universal Time (UTC).

Further, while we would change os.environ['TZ'], we would *not* call
time.tzset like it says in the docs [3], which seems like a Bad Thing.

Some combination of the above has the net effect of changing some of the
functions in the time module to use UTC. (Maybe all of them? At the very
least, time.localtime and time.mktime.) However, it does *not* change
the offset stored in time.timezone, which causes bad behavior when
dealing with local timestamps [4].

Now, set TZ to ""UTC+0"" and call tzset. Apparently we don't have a good
way of getting local timezone info, we were (unintentionally?) using UTC
before, and you should probably be running your servers in UTC anyway.

[1] https://docs.python.org/2/library/time.html#time.strftime
[2] https://docs.python.org/2/library/time.html#id2
[3] https://docs.python.org/2/library/time.html#time.tzset
[4] Like in email.utils.mktime_tz, prior to being fixed in
    https://hg.python.org/cpython/rev/a283563c8cc4

Change-Id: I007425301914144e228b9cfece5533443e851b6e
Related-Change: Ifc78236a99ed193a42389e383d062b38f57a5a31
Related-Change: I8ec80202789707f723abfe93ccc9cf1e677e4dc6
Related-Change: Iee7488d03ab404072d3d0c1a262f004bb0f2da26"
chappp,2016-11-03 16:01:35,https://api.github.com/repos/openstack/swift/git/commits/ffd5194a3be8cd5fced038cc25ea1d8f78be1ea9,ffd5194a3be8cd5fced038cc25ea1d8f78be1ea9,"Raise ValueError if a config section does not exist

Instead of printing the error message and
calling sys.exit() when a section not exists
or reading the file failed rais an Exception
from readconfig. Depending on the Value or IO-Error,
the caller can decide if he wants to exit or continue.
If an Exception reaches the wsgi utilities
it bubbles all the way up.

Change-Id: Ieb444f8c34e37f49bea21c3caf1c6c2d7bee5fb4
Closes-Bug: 1578321"
notmyname,2016-12-08 17:12:27,https://api.github.com/repos/openstack/swift/git/commits/462f91b040ff47b51e5397eed930785590638d69,462f91b040ff47b51e5397eed930785590638d69,"Swift 2.12.0 authors/changelog updates

Change-Id: I7f6613a7e964d9d867bf61e20a2afcf673cc1d45"
alistairncoles,2016-12-14 12:22:25,https://api.github.com/repos/openstack/swift/git/commits/b9f796b8a213ae1f25a0bbad52be71c23a468ada,b9f796b8a213ae1f25a0bbad52be71c23a468ada,"Remove duplicate setup code from test_tempurl.py

TestTempURLPrefix.setUp() almost duplicates the superclass
setUp method, except it set ""expires"" as an instance variable.
The duplicated setUp code can be removed by simply having the
super class setUp set the ""expires"" instance variable.

Change-Id: Icf7604460e475523e156daa8c578765336820c8e"
bloodeagle40234,2016-10-31 05:24:18,https://api.github.com/repos/openstack/swift/git/commits/b09360d447447845898c9517742613ffecbe01c4,b09360d447447845898c9517742613ffecbe01c4,"Fix stats calculation in object-reconstructor

This patch fixes the object-reconstructor to calculate device_count
as the total number of local devices in all policies. Previously
Swift counts it for each policy but reconstruction_device_count
which means the number of devices actually swift needs to reconstruct
is counted as sum of ones for all polices.

With this patch, Swift will gather all local devices for all policies
at first, and then, collect parts for each devices as well as current.
To do so, we can see the statuses for remaining job/disks percentage via
stats_line output.

To enable this change, this patch also touchs the object replicator
to get a DiskFileManager via the DiskFileRouter class so that
DiskFileManager instances are policy specific. Currently the same
replication policy DiskFileManager class is always used, but this
change future proofs the replicator for possible other DiskFileManager
implementations.

The change also gives the ObjectReplicator a _df_router variable,
making it consistent with the ObjectReconstructor, and allowing a
common way for ssync.Sender to access DiskFileManager instances via
it's daemon's _df_router instance.

Also, remove the use of FakeReplicator from the ssync test suite. It
was not necessary and risked masking divergence between ssync and the
replicator and reconstructor daemon implementations.

Co-Author: Alistair Coles <alistair.coles@hpe.com>

Closes-Bug: #1488608
Change-Id: Ic7a4c932b59158d21a5fb4de9ed3ed57f249d068"
tipabu,2016-08-30 20:17:26,https://api.github.com/repos/openstack/swift/git/commits/7fb102dc5d4a6cabed8c18279e9be5829be846b1,7fb102dc5d4a6cabed8c18279e9be5829be846b1,"SLO: Make etag and size_bytes fully optional

Previously, we still required that clients send ""etag"" and ""size_bytes""
keys in their segment definitions. This was done as a way to guard
against typos leading to an accidental lack of verification.

However, typos should already be caught when we check for extra keys. As
a result, the only truly required key is ""path"".

Change-Id: Ie1d8691115f8c68b5a3f3b59317cdab59f9a3fca"
slokesh184,2016-07-27 12:16:26,https://api.github.com/repos/openstack/swift/git/commits/84aa6558b46dd086b97234884f4185c9d5548888,84aa6558b46dd086b97234884f4185c9d5548888,"Py3: Make test_manager py3 compatable

Fixes: NameError: name 'file' is not defined
file() is removed in python3.x using open()
 will solve it.
Fixes: AttributeError: 'generator' object has no
attribute 'next'
Python3 it is __next__()

Change-Id: Ib2cbdfbbedb86f6e01239d2ee991677727b0548b"
tipabu,2016-12-12 19:58:01,https://api.github.com/repos/openstack/swift/git/commits/c6b9195db840dc35eaef4136c6c6eb180ed8ead6,c6b9195db840dc35eaef4136c6c6eb180ed8ead6,"More assertion cleanup

Change-Id: Id88af19c5bfd0bcbbeabcf4eeb23beef4c50b1cb
Related-Change: I416831c8ad92f8445bc8d9560040a5ebf5c90702"
donaghmccabe,2016-11-08 15:31:33,https://api.github.com/repos/openstack/swift/git/commits/052ca666cbd68238e5464dc32e03b0bb127fdc8f,052ca666cbd68238e5464dc32e03b0bb127fdc8f,"Add python3-dev to bindep and use py27for some envs

Installed my workstation with Ubuntu Xenial and then hit a few
snags running tox.

python3-dev is needed to build the python3 envs. Did not actually
test python3-devel (rpm) as I don't have such a system.

While python2.7 is the default, tox (on Xenial) itself uses
python3.5, hence 3.5 becomes the basepython and a number
of envs don't work.

Driveby, removed warning about /bin/echo in py3pep8

Change-Id: Ie880246dd757570b8e444da0e643f3c50093bdc5"
stannum-l,2016-10-17 07:13:29,https://api.github.com/repos/openstack/swift/git/commits/07d3dd7c7f2d2b1a849b028bc6bfe5c422cccbe5,07d3dd7c7f2d2b1a849b028bc6bfe5c422cccbe5,"Added conditional headers to HEAD request documentation

Currently, conditional headers, e.g. If-Match, If-Modified-Since, etc.,
are listed for the GET objects API call, but not in the HEAD objects
call in the api-ref documentation.  This patch adds the missing headers
to the HEAD documentation.

Change-Id: Idd1c248cc27415d148a1b9a5eb2e95f25b8c4da0
Closes-Bug: #1630212"
alistairncoles,2016-12-08 16:55:41,https://api.github.com/repos/openstack/swift/git/commits/726eac9dfa2589b8e753be16755132f1f2270083,726eac9dfa2589b8e753be16755132f1f2270083,"line wrap overview_expiring_objects.rst

...and make it easier to read.

Change-Id: I54fee09e019d657e8040b9f5b4d69c6c814abd56"
clayg,2016-12-02 23:07:17,https://api.github.com/repos/openstack/swift/git/commits/d37d077cb153b58e23a0feb3a4d6c0aa3da21910,d37d077cb153b58e23a0feb3a4d6c0aa3da21910,"Add Status Code tests for Container GET

I think a real easy list of status maps checks is missing for the
container unittests.  At least I hope I didn't miss it?  This one uses
all some pretty decent modern infrastructure so it should be easy to
expand.

Change-Id: I0929dad87214569cfd5ee3896840a92cc10c621f"
alistairncoles,2016-12-02 18:05:06,https://api.github.com/repos/openstack/swift/git/commits/609b5182c4282f8965cd6c04e5b2181d0ed08ef8,609b5182c4282f8965cd6c04e5b2181d0ed08ef8,"Refactor recon to use single md5_hash_for_file function

There were several implementations of hashing the content
of a file in cli/recon.py and common/middleware/recon.py.
This patch relocates one implementation (_hash_for_ringfile,
introduced in the Related Change) to common/utils.py and
refactors recon cli and middleware to use that function.

Also improves use of mocking in the unit tests to eliminate passing
custom file opener functions to the ReconMiddleware get_ring_md5
and get_swift_conf_md5 methods.

Related-Change: I9623752c3cd2361f57864f3e938e1baf5e9292d7

Change-Id: Iaad88e49aadeb28f614aafa1e9596fe07ce9793a"
KazuhiroMiyahara,2016-12-01 10:58:08,https://api.github.com/repos/openstack/swift/git/commits/2445abb5d9bdb8928872e5c226b74bcf320d7516,2445abb5d9bdb8928872e5c226b74bcf320d7516,"Rename ObjectUpdater variables in unit test to appropriate names

There are ObjectUpdater variables named 'cu' in unit test.
Since the variables seems to have ContainerUpdater objects, the names
lessen readability of the unit test codes.

This patch changes the varibale names to 'ou' for readability.

Change-Id: Iabdd7d8e7f0648b10000eabce2ee2e3cf385d43e"
ctvera,2016-11-25 08:26:27,https://api.github.com/repos/openstack/swift/git/commits/8dcdaff64eee37fdbaf2e83bbe6fa07dbfe36bd8,8dcdaff64eee37fdbaf2e83bbe6fa07dbfe36bd8,"Fix non-deterministic suffix updates in hashes.pkl

Right now the do_listdir option was set on every 10th replication run.
Due to the randomness of the job listing this might update a given
partition much less often than expected, for example with 1000
partitions per replicator only every ~70th run.

Co-Authored-By: Alistair Coles <alistair.coles@hpe.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Christian Schwede <cschwede@redhat.com>
Related-Bug: #1634967
Closes-Bug: 1644807
Change-Id: Ib5c9dd17e40150450ec57a728ae8652fbc730af6"
clayg,2016-12-01 15:30:40,https://api.github.com/repos/openstack/swift/git/commits/765cc945d67deaf029e700885aa41ed2c72982eb,765cc945d67deaf029e700885aa41ed2c72982eb,"Fixups for ghost listing fix

I think the probetest can be a little more pathological and I'm worried
about logging the response of each individual request at error when we
currently only log the entire failure at debug.

I have lots of async pendings sometimes.

Related-Change: Ic5d55ff368cec62ab2eb9fd883801ba4ab043dd4
Change-Id: I1c070b2b07d31552f36b647731b0b3ebed31871f"
KazuhiroMiyahara,2016-12-01 10:51:05,https://api.github.com/repos/openstack/swift/git/commits/50490fcd59bf9dc6fa8981fb9bb3334a8163a7f5,50490fcd59bf9dc6fa8981fb9bb3334a8163a7f5,"Remove redundant codes from unit test of object updater

In unit test of object updater, there are some redundant codes.
This patch removes the redundant codes.

Change-Id: I03a5047fa5bd8fd71aee07ba897c08bbfe7ac782"
alistairncoles,2016-12-01 10:30:03,https://api.github.com/repos/openstack/swift/git/commits/463e22a314e207e49dea05fa6819e655601dca77,463e22a314e207e49dea05fa6819e655601dca77,"Add missing expirer recon metric to admin_guide

Add expirer/object to recon metrics, which reports such as:

$ curl -s http://localhost:6010/recon/expirer/object
{""object_expiration_pass"": 0.19765901565551758, ""expired_last_pass"": 1}

Change-Id: Ia9a171c09efebe5ad56c9de2952a8f29188c4970"
matthewoliver,2016-11-30 22:46:53,https://api.github.com/repos/openstack/swift/git/commits/3bde14b5cf88272a43c0594a695fcbcd0690e957,3bde14b5cf88272a43c0594a695fcbcd0690e957,"Quarantine malformed database schema SQLite errors

Currently if an sqlite3.DatabaseError is thrown when caused by
a corrupted database schema, it get logged and the database is isn't
quarantined.

This patch adds the malformed database schema case to the list of
SQLite errors in possibly_quarantine that will trigger the db to be
quarantined.

Also it improved the possibly_quarantined unit test to test all existing
exceptions, and catches exceptions based on the real world except we use
in code.

Closes-Bug: #1646247

Change-Id: Id9452c88f8394a2a910c34c69361442543aa206d"
clayg,2016-11-30 01:53:42,https://api.github.com/repos/openstack/swift/git/commits/053b625f42e2d1d90e18ad72e16099a5b62447dd,053b625f42e2d1d90e18ad72e16099a5b62447dd,"Remove ring md5 integration check from recon unittests

The actual value computed by md5 isn't that important; even in recon
it's only used as an opaque identifier that assumed to be consistent
across nodes for the same file.

However the way these tests were written with hard coded md5 values
makes them brittle to changes in the RingData format and susceptible
to the burden of needless unrelated test maintenance churn.

e.g.

Related-Change: I23b5e0a8082b30ca257aeb1fab03ab74e6f0b2d4

Change-Id: I9623752c3cd2361f57864f3e938e1baf5e9292d7"
tipabu,2016-10-29 15:21:41,https://api.github.com/repos/openstack/swift/git/commits/e8a80e874a5086e94c5ae93e3a9191cb813d1631,e8a80e874a5086e94c5ae93e3a9191cb813d1631,"Let users know entity size in 416 responses

If a user sends a Range header with no satisfiable ranges, we send back
a 416 Requested Range Not Satisfiable response. Previously however,
there would be no indication of the size of the object they were
requesting, so they wouldn't know how to craft a satisfiable range. We
*do* send a Content-Length, but it is (correctly) the length of the
error message.

The RFC [1] has an answer for this:

>  A server generating a 416 (Range Not Satisfiable) response to a
>  byte-range request SHOULD send a Content-Range header field with an
>  unsatisfied-range value, as in the following example:
>
>    Content-Range: bytes */1234
>
>  The complete-length in a 416 response indicates the current length of
>  the selected representation.

Now, we'll send a Content-Range header for all 416 responses, including
those coming from the object server as well as those generated on a
proxy because of the Range mangling required to support EC policies.

[1] RFC 7233, section 4.2, although similar language was used in RFC
2616, sections 10.4.17 and 14.16

Change-Id: I80c7390fc6f84a10a212b0641bb07a64dfccbd45"
ab4lfour,2016-11-08 22:17:31,https://api.github.com/repos/openstack/swift/git/commits/1ec6e2bb0aaaf0c34bf5a292703af18843521366,1ec6e2bb0aaaf0c34bf5a292703af18843521366,"add byteorder information and logic to ring files

On-disk, serialized ring files are byteorder dependent, which makes then
unportable between different endian architectures. Add a field to the
ring dictionary in the file indicating the byteorder used to generate
the file, and then byteswap if necessary when deserializing the file.

This patch only allows newly created ring files to be byteoder
agnostic. Previously generated ring files will still fail on different
endian architectures, and will need to be regenerated with this patch.

Change-Id: I23b5e0a8082b30ca257aeb1fab03ab74e6f0b2d4
Closes-Bug: #1639980"
flaper87,2016-11-25 08:54:59,https://api.github.com/repos/openstack/swift/git/commits/dd87fe29638545f163e70d69ac77289f6cd6a729,dd87fe29638545f163e70d69ac77289f6cd6a729,"Show team and repo badges on README

This patch adds the team's and repository's badges to the README file.
The motivation behind this is to communicate the project status and
features at first glance.

For more information about this effort, please read this email thread:

http://lists.openstack.org/pipermail/openstack-dev/2016-October/105562.html

To see an example of how this would look like check:

https://gist.github.com/185b807657793d710f29d87ea7ec3e56

Change-Id: I78815177dba9d765587d9a0aee4e0f76e14a043e"
alistairncoles,2016-11-16 18:18:44,https://api.github.com/repos/openstack/swift/git/commits/dfc8e61cf5fc68e00815d6de51eb2b057b411772,dfc8e61cf5fc68e00815d6de51eb2b057b411772,"Add test for object updater user-agent header

Adds a test to test_updater.py in follow-up to [1].

[1] Related-Change: Ia624558395584457c718b311fe80e1a8406e22ad

Change-Id: I4f943b2626972d096ad3aeed647c8166b3bdd934"
ctvera,2016-11-23 15:41:11,https://api.github.com/repos/openstack/swift/git/commits/8ac432fff3e01a07f4bff918bb9cc38d93532b43,8ac432fff3e01a07f4bff918bb9cc38d93532b43,"Fixed regression in consolidate_hashes

Occurs when a new file is stored to new suffix to not empty partition.
Then suffix is added to an invalidations file but not into hashes
pickle file. When a replication of this partition runs, replication of
suffix is completed on first and each 10th run of replicator. Rsync
runs on each new suffix because destination does not return hash of
new suffix although suffix content is in the same state.
This bug was introduced in 2.7.0

Co-Authored-By: Alistair Coles <alistair.coles@hpe.com>
Change-Id: Ie2700f6e6171f2ecfa7d07b0f18b79e90cbf1c8a
Closes-Bug: #1634967"
alistairncoles,2016-11-24 11:46:19,https://api.github.com/repos/openstack/swift/git/commits/846289ef40be74d1eb92d968da3fc8fd66705894,846289ef40be74d1eb92d968da3fc8fd66705894,"Drop ""--allow-insecure netifaces"" from tox pip install

Follow up to [1]. The --allow-insecure switch is no longer
required for netifaces.

[1] Related-Change: I7c60be623b4340ee34ae1aa520f17b303348811d

Change-Id: If893cdeff68ae5b279ea7055c078b0c1247ae7f2"
alistairncoles,2016-11-24 11:38:10,https://api.github.com/repos/openstack/swift/git/commits/fc24a2322d213ac04364ae5c142a14376ca0d732,fc24a2322d213ac04364ae5c142a14376ca0d732,"Add pip and virtualenv upgrade to development guidelines

Change [1] requires pip >= 7.0.1. In general, test
environments will need to have pip and virtualenv in line
with global requirements. Add a reference to the global
requirements rather than specifying versions that will
inevitably become stale.

Also adds inline literal markup to all occurences of ""tox""
for consistency.

[1] Related-Change: I7c60be623b4340ee34ae1aa520f17b303348811d

Change-Id: I7730f22c594a3521973cb9ff264a7d50f2b86a1a
Depends-On: I45eee626713438af5fc676f2b5f636d7ec23f7be"
donaghmccabe,2016-11-23 12:00:19,https://api.github.com/repos/openstack/swift/git/commits/ba66871e28c2ea5b323b79950dacc8de76a31773,ba66871e28c2ea5b323b79950dacc8de76a31773,"Add note that tempauth is not intended for production

Change-Id: I77862c9f4a71e438ba4f3988b2a9803c674c3e03"
tipabu,2016-07-25 22:06:23,https://api.github.com/repos/openstack/swift/git/commits/2d25fe6ad3573b2a06b6b3e5e66493d7b0c55693,2d25fe6ad3573b2a06b6b3e5e66493d7b0c55693,"Reduce backend requests for SLO If-Match / HEAD requests

... by storing SLO Etag and size in sysmeta.

Previously, we had to GET the manifest for every HEAD or conditional
request to an SLO. Worse, since SLO PUTs require that we HEAD every
segment, we'd GET all included sub-SLO manifests. This was necessary so
we could recompute the large object's Etag and content-length.

Since we already know both of those during PUT, we'll now store it in
object sysmeta. This allows us to:

 * satisfy HEAD requests based purely off of the manifest's HEAD
   response, and
 * perform the If-(None-)Match comparison on the object server, without
   any additional subrequests.

Note that the large object content-length can't just be parsed from
content-type -- with fast-POST enabled, the content-type coming out of
the object-server won't necessarily include swift_bytes.

Also note that we must still fall back to GETting the manifest if the
sysmeta headers were not found. Otherwise, we'd break existing large
objects.

Change-Id: Ia6ad32354105515560b005cea750aa64a88c96f9"
onovy,2016-11-21 21:13:11,https://api.github.com/repos/openstack/swift/git/commits/ae7dddd801e28217d7dc46bd45cd6b621f29340c,ae7dddd801e28217d7dc46bd45cd6b621f29340c,"Added comment for ""user"" option in drive-audit config

Change-Id: I24362826bee85ac3304e9b63504c9465da673014"
onovy,2016-11-19 22:24:30,https://api.github.com/repos/openstack/swift/git/commits/5d7a3a4172f0f11ab870252eec784cf24b247dea,5d7a3a4172f0f11ab870252eec784cf24b247dea,"Removed ""in-process-"" from func env tox name

This shorten shebang in infra, because we are hitting 128 bytes limit.

Change-Id: I02477d81b836df71780942189d37d616944c4dce"
bloodeagle40234,2016-11-18 09:50:11,https://api.github.com/repos/openstack/swift/git/commits/9ea340256996a03c8c744201297b47a0e91fe65b,9ea340256996a03c8c744201297b47a0e91fe65b,"Don't overwrite built-in 'id'

This is a follow up for https://review.openstack.org/#/c/399237

'id' is assigned as a builtin function so that we should not use 'id'
for the local variable name.

Change-Id: Ic27460d49e68f6cd50bda1d5b3810e01ccb07a37"
notmyname,2016-11-09 20:37:43,https://api.github.com/repos/openstack/swift/git/commits/bf473ddc9d3fcb3a3fe516b5221a588c5b196a1d,bf473ddc9d3fcb3a3fe516b5221a588c5b196a1d,"2.11.0 release notes

I have reordered the Contributors section of the AUTHORS
file to simply be ordered by the first character in the
author name.

Change-Id: I824022e582cadc361484b20c411840f46c4c5b50"
tipabu,2016-11-17 21:02:06,https://api.github.com/repos/openstack/swift/git/commits/2e7a7347fc58676fbaabce3d87a15866796d32e4,2e7a7347fc58676fbaabce3d87a15866796d32e4,"Avoid infinite loop while placing parts

Previously, we could over-assign how many parts should be in a tier.
This would cause the local `parts` variable to go negative, which meant
that our `while parts` loop would never terminate.

Change-Id: Id7e7889742ca37cf1a9c0d55fba78d967e90e8d0
Closes-Bug: 1642538"
kellerbr-ibm,2016-11-16 22:16:53,https://api.github.com/repos/openstack/swift/git/commits/b94d0db9aaf117080bdcebda4b44bd02eb25749e,b94d0db9aaf117080bdcebda4b44bd02eb25749e,"Correctly send 412 Precondition Failed in copy middleware

Previously in copy middleware, if a user entered an invalid destination
path with an invalid `container/object` path the server would return
a 500 Internal Server Error. However, the correct response should be
a 412 Precondition Failed. This patch updates copy so that it catches
the 412 Precondition Failed exception and returns it to the client.

Closes-Bug: #1641980

Change-Id: Ic4677ae033d05b8730c6ad1041bd9c07268e11a9"
tipabu,2016-11-15 22:35:42,https://api.github.com/repos/openstack/swift/git/commits/e8a5448b0767026925b5ad396f6de1be79ac2325,e8a5448b0767026925b5ad396f6de1be79ac2325,"Add X-Openstack-Request-Id to Access-Control-Expose-Headers

Change-Id: Ib95a693042f0b3cf204033eb5957660cb3573dcf
Related-Change: I56cd4738808b99c0a08463f83c100be51a62db05"
tipabu,2016-10-29 20:00:01,https://api.github.com/repos/openstack/swift/git/commits/f850ff065e70fb56f9b9e224194553770787f516,f850ff065e70fb56f9b9e224194553770787f516,"SLO: Concurrently HEAD segments

Before creating a static large object, we must verify that all of the
referenced segments exist. Previously, this was done sequentially; due
to latency between proxy and object nodes, clients must be careful to
either keep their segment count low or use very long (minute+) timeouts.
We mitigate this somewhat by enforcing a hard limit on segment count,
but even then, HEADing a thousand segments (the default limit) with an
average latency of (say) 100ms will require more than a minute and a
half.

Further, the nested-SLO approach requires multiple requests from the
client -- as a result, Swift3 is in the position of enforcing a lower
limit than S3's 10,000 (which will break some clients) or requiring that
clients have timeouts on the order of 15-20 minutes (!).

Now, we'll perform the segment HEADs in parallel, with a concurrency
factor set by the operator. This is very similar to (and builds upon)
the parallel-bulk-delete work. By default, two HEAD requests will be
allowed at a time.

As a side-effect, we'll also only ever HEAD a path once per manifest.
Previously, if a manifest alternated between two paths repeatedly (for
instance, because the user wanted to splice together various ranges from
two sub-SLOs), then each entry in the manifest would trigger a fresh
HEAD request.

Upgrade Consideration
=====================
If operators would like to preserve the prior (single-threaded) SLO
creation behavior, they must add the following line to their
[filter:slo] proxy config section:

   concurrency = 1

This may be done prior to upgrading Swift.

UpgradeImpact
Closes-Bug: #1637133
Related-Change: I128374d74a4cef7a479b221fd15eec785cc4694a
Change-Id: I567949567ecdbd94fa06d1dd5d3cdab0d97207b6"
MahatiC,2016-06-20 10:26:15,https://api.github.com/repos/openstack/swift/git/commits/321bb9145f9e2e184994e5d0cf78c62b6043112c,321bb9145f9e2e184994e5d0cf78c62b6043112c,"remove empty db hash and suffix directories

If a db gets quarantined we may fail to cleanup an empty suffix dir or
a hash dir.

Change-Id: I721fa5fe9a7ae22eead8d5141f93e116847ca058
Closes-Bug: #1583719"
tipabu,2016-11-15 22:12:02,https://api.github.com/repos/openstack/swift/git/commits/40152f4242dfe46a4c63ae69b0a0e1c83172f556,40152f4242dfe46a4c63ae69b0a0e1c83172f556,"Fix up X-Trans-Id-Extra docs

Previously, they would render as ""X -Trans-Id-Extra""

Change-Id: Ibaf9b365467a2c91a0f03baed4d7bc36b0fa9967"
alistairncoles,2016-11-11 16:34:15,https://api.github.com/repos/openstack/swift/git/commits/721cd1634a82b735d0d65062c15c30fffb204a0e,721cd1634a82b735d0d65062c15c30fffb204a0e,"Show file parameters as mandatory in swift-*-info man pages

Changes the file parameters on command line to use the convention of
<file> for a mandatory option rather than [file] which suggests an
optional flag. Also drop to lower case as is convention in other man
pages.

Change-Id: Icfb4b4786343eb493a73b092cad1fdadc935d066"
chappp,2016-10-30 11:07:29,https://api.github.com/repos/openstack/swift/git/commits/b69caeae7d717cd0b5c1d643d7f7fc12e09530a5,b69caeae7d717cd0b5c1d643d7f7fc12e09530a5,"Include debug message for rsync tempfiles

The warning message for rsync tempfiles was removed in the related
change.  However, because our regex match might result in a false
positive maybe it's still useful to log a debug message.  Instead of
silently ignoring rsync tempfiles, when running in debug we note the
file and how we classified it - but still no warning will occur.

I also consolidate our use of the regex for rsync tempfiles into the
diskfile module and move the negative test for the warning logger
message a little next to the positive test.

Change-Id: Idb2a1a76aa275c9c2e9bad8aceea913b8f5b1c71
Related-Change: I5a5d6e24710e4880776b32edcbc07021acf77676"
notmyname,2016-10-04 00:18:22,https://api.github.com/repos/openstack/swift/git/commits/e6dea4d69995272724c772f33385530f5a35bd89,e6dea4d69995272724c772f33385530f5a35bd89,"adding reno sphinx tree

This should give the necessary tooling to set up the right
links in the right places so Swift has release notes listed
alongside other projects.

Change-Id: I4e5f1ce1fcfbb2943036c821a24a0b4a3a2d9fc8"
tipabu,2016-11-08 20:32:18,https://api.github.com/repos/openstack/swift/git/commits/5de9747e1629565653a3f15d28bc4b4cb03c4abd,5de9747e1629565653a3f15d28bc4b4cb03c4abd,"Stop shadowing built-in iter

Change-Id: I0e3fcddfef6968353e4c0aa6871a2e7a22598459"
slokesh184,2016-07-28 13:31:47,https://api.github.com/repos/openstack/swift/git/commits/2f31c0469dd48c3a7052faeb8b5d786d5a32c21a,2f31c0469dd48c3a7052faeb8b5d786d5a32c21a,"Py3: Fixes header key dict

Decode header to latin1 on python3
encode header to utf-8 on python2.

Co-Authored-By: Alistair Coles <alistair.coles@hpe.com>

Change-Id: I10f205a05bb3a566e52a597d9315b3a8b8c14664"
clayg,2016-11-08 02:06:44,https://api.github.com/repos/openstack/swift/git/commits/f4adb2f28f5517772174aac18e3fe9ab1d08c913,f4adb2f28f5517772174aac18e3fe9ab1d08c913,"Fix ZeroDivisionError in reconstructor.stats_line

Despite a check to prevent zero values in the denominator python
integer division could result in ZeroDivisionError in the compute_eta
helper function.  Make sure we always have a non-zero value even if it
is small.

NotImplemented:

 * stats calculation is still not great, see lp bug #1488608

Closes-Bug: #1549110
Change-Id: I54f2081c92c2a0b8f02c31e82f44f4250043d837"
clayg,2016-10-11 20:23:11,https://api.github.com/repos/openstack/swift/git/commits/c2ce92acd6fa25706e271dc2b1504a8db54bd2ae,c2ce92acd6fa25706e271dc2b1504a8db54bd2ae,"Fix signal handling for daemons with InternalClient

The intentional use of ""bare except"" handling in catch_errors and some
daemons to prevent propagation on unexpected errors that do not
inherit from Exception (like eventlet.Timeout) or even BaseException
(like old-style classes) has the side effect of spuriously ""handling""
*expected* errors like when a signal handler raises SystemExit.

The signal handler installed in our Daemon is intended to ensure first
that the entire process group and any forked processes (like rsync's)
receive the SIGTERM signal and also that the process itself
terminates.

The use of sys.exit was not a concious grandiose plans for graceful
shutdown (like the running[0] = False trick that wsgi server parent
process do) - the desired behavior for SIGTERM is to stop - hard.

This change ensures the original goals and intentions of our signal
handler are fulfilled without the undesirable side effect that can
cause our daemons to confusingly log an expected message to stop as an
unexpected error, and start ignoring additional SIGTERM messages;
forcing our kind operators to resort to brutal process murder.

Closes-Bug: #1489209
Change-Id: I9d2886611f6db2498cd6a8f81a58f2a611f40905"
clayg,2016-09-16 18:58:46,https://api.github.com/repos/openstack/swift/git/commits/116462d8a5a45ec876403234cf83b96dfad58ddd,116462d8a5a45ec876403234cf83b96dfad58ddd,"Add probetest for response with duplicate frags

When an SSYNC connection fails after shipping a fragment, but before
cleaning itself up - it can lead to multiple replicas of the same
fragment index serviceable in the node_iter at the same time.  Or
perhaps more likely if a partner nodes win a race to rebuild waiting
on a handoff.  In this case, the proxy need not fail to service a GET
just because of extra information.  A similar guard was added to the
reconstructor in a related change [1].

This underlying bug is acctually fixed by the related change [2], this
probetest is just encoding the failure to help with future maintenance.

1. Related-Change: I91f3d4af52cbc66c9f7ce00726f247b5462e66f9
2. Related-Change: I2310981fd1c4622ff5d1a739cbcc59637ffe3fc3

Closes-Bug: 1624176

Change-Id: I06fc381a25613585dd18916d50e7ca2c68d406b6"
alistairncoles,2016-09-26 16:25:09,https://api.github.com/repos/openstack/swift/git/commits/6574ce31eeda1bdffa2534f21eed7ab0d62bce97,6574ce31eeda1bdffa2534f21eed7ab0d62bce97,"EC: reconstruct using non-durable fragments

Previously the reconstructor would only reconstruct a missing fragment
when a set of ec_ndata other fragments was available, *all* of which
were durable. Since change [1] it has been possible to retrieve
non-durable fragments from object servers. This patch changes the
reconstructor to take advantage of [1] and use non-durable fragments.

A new probe test is added to test scenarios with a mix of failed and
non-durable nodes. The existing probe tests in
test_reconstructor_rebuild.py and test_reconstructor_durable.py were
broken. These were intended to simulate cases where combinations of
nodes were either failed or had non-durable fragments, but the test
scenarios defined were not actually created - every test scenario
broke only one node instead of the intent of breaking multiple
nodes. The existing tests have been refactored to re-use most of their
setup and assertion code, and merged with the new test into a single
class in test_reconstructor_rebuild.py.

test_reconstructor_durable.py is removed.

[1] Related-Change: I2310981fd1c4622ff5d1a739cbcc59637ffe3fc3

Change-Id: Ic0cdbc7cee657cea0330c2eb1edabe8eb52c0567
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Closes-Bug: #1624088"
alistairncoles,2016-11-03 15:19:25,https://api.github.com/repos/openstack/swift/git/commits/a4d77d918d99dfa8a1e7f1b0561769a17ba64932,a4d77d918d99dfa8a1e7f1b0561769a17ba64932,"Fix KeyError when auditor finds an expired object

Since the related change [1] the auditor checks deleted objects in
case their tombstone is ready to be reclaimed. However, the auditor
mistakes an expired object for a deleted object because
DiskFileExpired is a subclass of DiskFileDeleted. This causes a
KeyError to be raised and logged because the expired object has no
tombstone info in the ondisk_info data structure.

This patch makes the auditor catch and ignore DiskFileExpired
exceptions before handling DiskFileDeleted exceptions.

[1] Related-Change: I3e99dc702d55a7424c6482969e03cb4afac854a4

Change-Id: I9872b6997d09dcfd8a868c4b91b9379407283b8e
Closes-Bug: #1638016"
clayg,2016-09-21 06:44:32,https://api.github.com/repos/openstack/swift/git/commits/3b889331b30f9a02efc38bc451b2ab625caffdd1,3b889331b30f9a02efc38bc451b2ab625caffdd1,"Make NullLogger more logger like

eventlet.wsgi.server is adaptive to dealing with the named log
argument being either a file like or a log like [1], but message
handling is a more direct pass through if it's a log like.

Since all we want to do is make eventlet's logging it a noop - it's
easy to provide either interface!

1. https://github.com/eventlet/eventlet/blob/4d2cdc/eventlet/wsgi.py#L246

Change-Id: I2d792176c96931eafb3f140e6653ba8b31eda429"
gaborantal,2016-07-15 12:11:09,https://api.github.com/repos/openstack/swift/git/commits/300d388825c228ae1f51cdb8abcdf4c76ec24637,300d388825c228ae1f51cdb8abcdf4c76ec24637,"Use more specific asserts in test/probe tests

I changed asserts with more specific assert methods.

e.g.: from assertTrue(sth == None) to assertIsNone(*) or
assertTrue(isinstance(inst, type)) to assertIsInstace(inst, type) or
assertTrue(not sth) to assertFalse(sth).

The code gets more readable, and a better description will be shown on fail.

Change-Id: I3768faa568e3964e726ecc48ac8cb133cb088284"
alistairncoles,2016-10-17 19:38:52,https://api.github.com/repos/openstack/swift/git/commits/2a75091c58948fb664016c0e91e72acd313e4610,2a75091c58948fb664016c0e91e72acd313e4610,"Make ECDiskFileReader check fragment metadata

This patch makes the ECDiskFileReader check the validity of EC
fragment metadata as it reads chunks from disk and quarantine a
diskfile with bad metadata. This in turn means that both the object
auditor and a proxy GET request will cause bad EC fragments to be
quarantined.

This change is motivated by bug 1631144 which may result in corrupt EC
fragments being written to disk but appear valid to the object auditor
md5 hash and content-length checks.

NotImplemented:

 * perform metadata check when a read starts on any frag_size
   boundary, not just at zero

Related-Bug: #1631144
Closes-Bug: #1633647

Change-Id: Ifa6a7f8aaca94c7d39f4aeb9d4fa3f59c4f6ee13
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>"
KazuhiroMiyahara,2016-10-20 05:01:14,https://api.github.com/repos/openstack/swift/git/commits/e166e19b235e1fba8e5eba5720d1c07fe32c40c1,e166e19b235e1fba8e5eba5720d1c07fe32c40c1,"Remove duplicated 'User-Agent' header from object-updater's requests

When Object-Server saves async-update in pickle files,
'User-Agent: object-server %(pid)' (the key is title style) is included
in the pickles. However, Object-Updater will add
'user-agent: object-updater %(pid)' (the key is lower case style) to the
pickled headers and use it to make http connection. According to RFC
7230, each header field consists of a case-insensitive field name,
therefore either of 'User-Agent' and 'user-agent' should not be included
in the headers.

This patch removes old 'User-Agent' header from object-updater's
requests.

Change-Id: Ia624558395584457c718b311fe80e1a8406e22ad
Closes-Bug:#1635114"
kajinamit,2016-09-29 17:08:25,https://api.github.com/repos/openstack/swift/git/commits/ede42c77f1e04ab571c21b1d6342e662c7eced53,ede42c77f1e04ab571c21b1d6342e662c7eced53,"Ensure update of the container by object-updater

Object-updater regards 404 from container-server as success.
This causes wrong giving up and generates object which never appears
at container, for example when all container replicas are placed in
handoff devices at the moment.

This patch makes object-updater try updating until it gets 201s from
all container servers, and ensures the update.

Change-Id: Ic5d55ff368cec62ab2eb9fd883801ba4ab043dd4
Closes-Bug: #1328735"
onovy,2016-10-29 13:00:13,https://api.github.com/repos/openstack/swift/git/commits/33c18c579e12474015bdd4995120e9f47e351e72,33c18c579e12474015bdd4995120e9f47e351e72,"Remove executable flag from some test modules

Change-Id: I36560c2b54c43d1674b007b8105200869b5f7987"
chappp,2016-10-30 11:07:29,https://api.github.com/repos/openstack/swift/git/commits/2bd8d050fb5dec140ad23d5db1d281049954255b,2bd8d050fb5dec140ad23d5db1d281049954255b,"Suppress unexpected file warnings for rsync temp files

Do not log unexpected file warning for rsync temp files when the parsing
of the timespamp fails.  If the file passes a regex test suppress the
logger waring, but still return it as an unexpected file from
get_ondisk_files.

Closes-Bug: 1616504

Change-Id: I5a5d6e24710e4880776b32edcbc07021acf77676"
onovy,2015-11-01 18:32:19,https://api.github.com/repos/openstack/swift/git/commits/e3e457da662e92885620981a445530fbd8370604,e3e457da662e92885620981a445530fbd8370604,"Respect server type for --md5 check in swift-recon

MD5 sum compare of server ring ignores server_type parameter
now. This could be confusing and this should only test
specified server_type, same as --replication, --validate-servers,
etc.

Change-Id: I9095309c24f42aec1330757c88e7b242b2a6a865"
karenc,2016-10-17 10:37:35,https://api.github.com/repos/openstack/swift/git/commits/d0fe922904c8016267e89c97bef16052a2c3bb7e,d0fe922904c8016267e89c97bef16052a2c3bb7e,"Mirror X-Trans-Id to X-Openstack-Request-Id

Many other OpenStack services use a `[X-]OpenStack-Request-Id` header
to return a unique identifier for the request.  Swift will now return
`X-Trans-Id` as well as `X-Openstack-Request-Id`.

Change-Id: I56cd4738808b99c0a08463f83c100be51a62db05
Closes-Bug: #1572786"
tipabu,2016-10-29 16:29:48,https://api.github.com/repos/openstack/swift/git/commits/c91ca5335fb86b3b260d88285fe0248d502276f3,c91ca5335fb86b3b260d88285fe0248d502276f3,"Ignore Range values like ""bytes=--0""

This is consistent with what we already do for other
semantically-invalid values like ""bytes=--1"". Previously, we would
return a 416 Requested Range Not Satisfiable response like we do for the
semantically-valid-but-not-really-meaningful ""bytes=-0""

Change-Id: I932b42406c9a5ee7eaa6978a655e61022a957415"
tipabu,2016-10-28 11:07:27,https://api.github.com/repos/openstack/swift/git/commits/30f672e7201e214fa625a43dcad867e5936e1cef,30f672e7201e214fa625a43dcad867e5936e1cef,"Refactor SLO If-Match / HEAD tests

Previously, we didn't make any assertions about the backend requests
but rather just verified the user-visible behavior.

Change-Id: Iddd4b705ee9b724a4a8a88c6fbaff36cca9612cf"
onovy,2016-10-19 18:17:00,https://api.github.com/repos/openstack/swift/git/commits/99a13d93861240bfdc48730913bd6e445b645932,99a13d93861240bfdc48730913bd6e445b645932,"Fixed rysnc -> rsync typo

Change-Id: I671b4206072c6e22f4ae38033502336ec32e86ad"
onovy,2016-10-17 17:46:57,https://api.github.com/repos/openstack/swift/git/commits/9847796f01571dc7be332707dc935efac66ee5d4,9847796f01571dc7be332707dc935efac66ee5d4,"Set owner of drive-audit recon cache to swift user

Fixies this problem:
* swift-drive-audit needs to be run by root, because only root have
  ""umount"" permission
* swift-object servers typically runs as user swift
* if swift-drive-audit is run by root, /var/cache/swift/drive.recon is
  owned by root, with 0o600
* recon middleware (inside swift-object-server) can't read this cache
  file: swift-object: Error reading recon cache file

This patch adds ""user"" option to drive-audit config file. Recon cache
is chowned to this user.

Change-Id: Ibf20543ee690b7c5a37fabd1540fd5c0c7b638c9"
notmyname,2016-08-11 18:07:24,https://api.github.com/repos/openstack/swift/git/commits/91ce1bb1147ceca1b3ea63afc54ad3e0d34fdec6,91ce1bb1147ceca1b3ea63afc54ad3e0d34fdec6,"use the new upper constraints infra features

Change-Id: I7c60be623b4340ee34ae1aa520f17b303348811d"
majewsky,2016-10-18 13:56:54,https://api.github.com/repos/openstack/swift/git/commits/9d12575102556d6d24a5498d79857e0d5de148bd,9d12575102556d6d24a5498d79857e0d5de148bd,"swift-recon-cron: do not get confused by files in /srv/node

swift-recon-cron looks at the drives mounted in directories below
/srv/node, but before this commit, it tried to call listdir() on
everything in this directory, even if it is not a directory.

Change-Id: Id281352f7ab6ecb520eb00f3649873d8c8678608
Signed-off-by: Stefan Majewsky <stefan.majewsky@sap.com>"
charz,2016-10-12 10:02:16,https://api.github.com/repos/openstack/swift/git/commits/5064ebb7441fdf02e2ca895a2ae81102e751d978,5064ebb7441fdf02e2ca895a2ae81102e751d978,"Make Content-Disposition support `inline; filename=...` format.

A client can process a object contents immediately when it has knowledge,
if it doesn't, it stores the content to local with the filename that
assigned in `Content-Disposition`.

According to https://tools.ietf.org/html/rfc2183, `filename` can be use
whatever `inline` or `attachment` (disposition-type) in the disposition
string.

Change-Id: Iba94aedfad06c1dc8bd7be5eb3c73b33fb8d5198"
alistairncoles,2016-10-12 19:00:13,https://api.github.com/repos/openstack/swift/git/commits/3218f8b064e462d901466b04a4813e15ec96da85,3218f8b064e462d901466b04a4813e15ec96da85,"Prevent ssync writing bad fragment data to diskfile

Previously, if a reconstructor sync type job failed to provide
sufficient bytes from a reconstructed fragment body iterator to match
the content-length that the ssync sender had already sent to the ssync
receiver, the sender would still proceed to send the next
subrequest. The ssync receiver might then write the start of the next
subrequest to the partially complete diskfile for the previous
subrequest (including writing subrequest headers to that diskfile)
until it has received content-length bytes.

Since a reconstructor ssync job does not send an ETag header (it
cannot because it does not know the ETag of a reconstructed fragment
until it has been sent) then the receiving object server does not
detect the ""bad"" data written to the fragment diskfile, and worse,
will label it with an ETag that matches the md5 sum of the bad
data. The bad fragment file will therefore appear good to the auditor.

There is no easy way for the ssync sender to communicate a lack of
source data to the receiver other than by disconnecting the
session. So this patch adds a check in the ssync sender that the sent
byte count is equal to the sent Content-Length header value for each
subrequest, and disconnect if a mismatch is detected.

The disconnect prevents the receiver finalizing the bad diskfile, but
also prevents subsequent fragments in the ssync job being sync'd until
the next cycle.

Closes-Bug: #1631144
Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>

Change-Id: I54068906efdb9cd58fcdc6eae7c2163ea92afb9d"
cschwede,2016-10-07 12:17:08,https://api.github.com/repos/openstack/swift/git/commits/77f5b201248c0684d87289540d3f94873f5c5e38,77f5b201248c0684d87289540d3f94873f5c5e38,"Throttle update_auditor_status calls

If there are quite a few nearly empty partitions per disk you might see
some write load even if your cluster is unused. The auditor will update
the status file after every partition, and this might happen multiple
times within a second if there is not much data stored yet.

This patch throttles updates, and will only write out an updated status
if the file was last updated more than a minute ago.

Closes-Bug: 1631352
Change-Id: Ib61ec9cd945e6b2d28756f6ca47801674a7e6060"
onovy,2016-08-18 07:48:45,https://api.github.com/repos/openstack/swift/git/commits/19102c6e7f501241f36e5e40d27ab3ba5dcc6655,19102c6e7f501241f36e5e40d27ab3ba5dcc6655,"Apply bash error handling consistently in all bash scripts

Change-Id: I36dcff9cc2593bcfb6aebbe84b59d95c711eb3e4"
alistairncoles,2016-08-09 15:09:38,https://api.github.com/repos/openstack/swift/git/commits/b13b49a27caac17ae55b19f315d5ce31801c9522,b13b49a27caac17ae55b19f315d5ce31801c9522,"EC - eliminate .durable files

Instead of using a separate .durable file to indicate
the durable status of a .data file, rename the .data
to include a durable marker in the filename. This saves
one inode for every EC fragment archive.

An EC policy PUT will, as before, first rename a temp
file to:

   <timestamp>#<frag_index>.data

but now, when the object is committed, that file will be
renamed:

   <timestamp>#<frag_index>#d.data

with the '#d' suffix marking the data file as durable.

Diskfile suffix hashing returns the same result when the
new durable-data filename or the legacy durable file is
found in an object directory. A fragment archive that has
been created on an upgraded object server will therefore
appear to be in the same state, as far as the consistency
engine is concerned, as the same fragment archive created
on an older object server.

Since legacy .durable files will still exist in deployed
clusters, many of the unit tests scenarios have been
duplicated for both new durable-data filenames and legacy
durable files.

Change-Id: I6f1f62d47be0b0ac7919888c77480a636f11f607"
annp1987,2016-09-07 07:02:10,https://api.github.com/repos/openstack/swift/git/commits/19426182af0064b8143ee57a29998523ad52273b,19426182af0064b8143ee57a29998523ad52273b,"[api-ref] Remove temporary block in conf.py

The os-api-ref 1.0.0 is out. We can remove the support to older version now.
Reference:
https://github.com/openstack/senlin/commit/6d41feb58dd836d426c9b6f025846dbbf7295097

Change-Id: I0b28cd3f6b5c393d63b9ab2b4dcd3b7b3c20f9b4"
zaitcev,2016-10-04 03:08:15,https://api.github.com/repos/openstack/swift/git/commits/f62df7b80c083862c11cbef678f75cc09bb89e8f,f62df7b80c083862c11cbef678f75cc09bb89e8f,"Add a configurable URL base to staticweb

This came to light because someone ran Tempest against a standard
installation of RDO, which helpfuly terminates SSL for Swift in
a pre-configured load-balancer. In such a case, staticweb has no
way to know what scheme to use and guesses wrong, causing Tempest
to fail.

Related upstream bug:
 https://bugs.launchpad.net/mos/+bug/1537071

Change-Id: Ie15cf2aff4f7e6bcf68b67ae733c77bb9353587a
Closes-Bug: 1572011"
TuanLAF,2016-10-04 03:06:23,https://api.github.com/repos/openstack/swift/git/commits/53aebba90324c0fdcb3ea61275b24db4d5a82110,53aebba90324c0fdcb3ea61275b24db4d5a82110,"Fix a typo in documentation

remove redundant 'this'

Change-Id: I8860190d882b255a3d416de685f930d2b2c0ad17"
tipabu,2016-09-20 00:37:47,https://api.github.com/repos/openstack/swift/git/commits/2ec4189e374d1f94009fc61c1b17d00d12f7e99b,2ec4189e374d1f94009fc61c1b17d00d12f7e99b,"Fix when we set state in Spliterator

Also clean up a comment and some exception text

Change-Id: I1e7755cc0468f9a3ba96a0dd24868f09a10c3df0
Related-Change: I24716e3271cf3370642e3755447e717fd7d9957c"
TuanLAF,2016-10-03 06:28:48,https://api.github.com/repos/openstack/swift/git/commits/45e4fd5f714326324e13d781673ff01666c1ab97,45e4fd5f714326324e13d781673ff01666c1ab97,"Fix typo: remove redundant 'that'

Change-Id: I9ed35d866ffb9faa41556c5c00f3b490d35412ab"
Ji-Wei,2016-07-14 08:01:46,https://api.github.com/repos/openstack/swift/git/commits/4fa536a9be39632213f305308f07becfe16d037e,4fa536a9be39632213f305308f07becfe16d037e,"Replace dict.iteritems with six.iteritems

Python3 do not use dict.iteritems, which would raise AttributeError:
'dict' object has no attribute 'iteritems'

Change-Id: I53eb2f8837699965d786e7903bb4e2837be35b6d
Closes-Bug: #1596124"
notmyname,2016-09-03 17:18:32,https://api.github.com/repos/openstack/swift/git/commits/396baf4139f64c6127a01c4f3f228901a55b1c7d,396baf4139f64c6127a01c4f3f228901a55b1c7d,"Update test-requirements.txt

The testing requirements should not cause extra packaging
work for deployers (since these aren't required to deploy).
This patch brings it in line with the latest global requirements,
except for python-swiftclient itself (which I kept with no version
specifier). By being in line with global requirements, this is a
more accurate list with respect to how things are actually tested
in the gate.

Change-Id: Iddc92d9bb135144d38c3e5aec2e95df5787e9b5b"
clayg,2016-09-30 19:16:58,https://api.github.com/repos/openstack/swift/git/commits/7dcfe5a7ecb3f95f4556324dea0b8519b68d68dc,7dcfe5a7ecb3f95f4556324dea0b8519b68d68dc,"Remove unneeded line from ring.utils.dispersion_report

This line is render inert by the condition right above it.

The behavior/correctness is already well vetted by
ring.test_utils:TestUtils.test_dispersion_report

Change-Id: I7d7a193c52d1005cecd9c70953d55e2b9755a64d"
furukawa3,2016-09-29 11:48:21,https://api.github.com/repos/openstack/swift/git/commits/9b98c89983821f709fbea3c14c264150d8613171,9b98c89983821f709fbea3c14c264150d8613171,"Revises 'url' to 'URL' and 'json' to 'JSON'

Change-Id: I44743fbb9bcbce3a50ed6770264ba0f4b17803d7"
alistairncoles,2016-09-29 18:22:36,https://api.github.com/repos/openstack/swift/git/commits/1004509cab443a5cbb223ffc8258c45cb97ee5fb,1004509cab443a5cbb223ffc8258c45cb97ee5fb,"Fix failing cross-policy-versioning functional test

Since [1] the functional tests for cross-policy
object versioning fails with an error. These tests are
skipped in all CI test jobs because none of them have
more than one policy enabled. However, when running
tests against a system with multiple policies the tests
will not skip and the error is raised.

[1] Related-Change: Ifebc1c3ce558b1df9e576a58a4100f2219dfc7e7

Related-Bug: #1629234

Change-Id: I48028928bc996252a31cbf3abfd2b5e67a74dc95"
bloodeagle40234,2016-09-26 12:37:08,https://api.github.com/repos/openstack/swift/git/commits/03b5e76d0942c075a0286db47bc9e0f029b1e231,03b5e76d0942c075a0286db47bc9e0f029b1e231,"Improve functional tests and test client

This patch includes a couple of small functional test improvement.

A. Change swift_test_client.File.sync_metadata to follow Swift object
metadata semantics:

swift_test_client.File.sync_metadata is designed to post object user
metadata to an object. However, prior to this patch, the
swift_test_client.File instance keeps the existing object metadata as
its member attribute and if sync_metadata is called, it sends both
existing metadata and incomming metadata from caller. It looks to result
in the odd state as if Swift keeps the existing metadata when POST
object requested.

To tell the correct Swift object metadata semantics, when POST object
requested, the existing metadata in the stored object should be gone
even if no metadata is overwritten.

i.e.
if POST object with 'X-Object-Meta-Key: Val' to a stored object with
'X-Object-Meta-foo: bar', it will result in an object with
'X-Object-Meta-Key' (note that X-Object-Meta-Foo will be deleted)

The prior behavior sometimes make us confused in the reviw [1] so that,
this patch fixes it to send only incomming metadata if it's set.

B. Check the response status code more strictly for ObjectVersioning case

This patch fixes test_versioning_check_acl on both TestObjectVersioning and
TestObjectVersioningHistoryMode to assert the response status code
explisitly instead of asserting just ""ResponseError"". (e.g. 403 when trying
to delete object from other account)

1: https://review.openstack.org/#/c/360933/1/test/functional/tests.py@4142

Change-Id: Ia3e5b40f17dc0f881b695aa4be39c98b91e2bb06"
MahatiC,2016-07-25 14:40:44,https://api.github.com/repos/openstack/swift/git/commits/ccff3668116bd6107003e4f774ab136bb933eb77,ccff3668116bd6107003e4f774ab136bb933eb77,"Update diskfile docstring for get_ondisk_files

The return value for diskfile.BaseDiskFileManager.get_ondisk_files is
a bit more rich than the current doc string describes; try to fill in
some gaps.

Co-Author: Alistair Coles <alistair.coles@hpe.com>

Change-Id: Ief10644825ead124e58f3da5693bbdc1c6dc31ed"
chengtcli,2016-07-24 01:10:36,https://api.github.com/repos/openstack/swift/git/commits/ce26e78902a8c2feff5706a07750e34e9a94536e,ce26e78902a8c2feff5706a07750e34e9a94536e,"For any part, only one replica can move in a rebalance

With a min_part_hours of zero, it's possible to move more than one
replicas of the same part in a single rebalance.

This change in behavior only effects min_part_hour zero rings, which
are understood to be uncommon in production mostly because of this
very specific and strange behavior of min_part_hour zero rings.

With this change, no matter how small your min_part_hours it will
always require at least N rebalances to move N part-replicas of the
same part.

To supplement the existing persisted _last_part_moves structure to
enforce min_part_hours, this change adds a _part_moved_bitmap that
exists only during the life of the rebalance, to track when rebalance
moves a part in order to prevent another replicas of the same part
from being moved in the same rebalance.

Add authors: Clay Gerrard, clay.gerrard@gmail.com
             Christian Schwede, cschwede@redhat.com

Closes-bug: #1586167

Change-Id: Ia1629abd5ce6e1b3acc2e94f818ed8223eed993a"
namnh68,2016-09-28 08:53:08,https://api.github.com/repos/openstack/swift/git/commits/2f880f04486ea1b1e15e8794707a7b61ae57d965,2f880f04486ea1b1e15e8794707a7b61ae57d965,"Fix typo in docstring

This patch replaces type ""tuble"" to ""tuple"".

Change-Id: I0a54f10df0f48fab9553e6438735e42ae1bb5b3b"
gecong1973,2016-09-27 09:14:13,https://api.github.com/repos/openstack/swift/git/commits/a09e42732af4fec0a046e1ee402559e1a9e55487,a09e42732af4fec0a046e1ee402559e1a9e55487,"Fix a typo in proxy-server.conf-sample

TrivialFix

Change-Id: If650e25979a9488c93fe93621c905003946c27e5"
bloodeagle40234,2016-08-26 07:15:45,https://api.github.com/repos/openstack/swift/git/commits/0c8c764547c78df0b00354bb06c5fb27d381647f,0c8c764547c78df0b00354bb06c5fb27d381647f,"Add functional tests for new versioned_write mode

This patch is follow up for [1] and [2] to add new functional
tests for versioned_writes middlware 'history' mode.
(i.e. using X-History-Location header to a container).

The new test class, TestObjectHistoryModeVersioning, will use obvious
setting the mode via new X-History-Location header, since the change [2],
the setting X-Versions-Mode header added since [1] for incomming request has
been deprecated. Hence, since [2], the syntax for stack mode is back to
be same with older Swift than [1] so that the only thing we need now is
just adding a test suite for the new X-History-location.

It means the API has been changing like:
---------------
For stack mode:
---------------
Older than [1]:
X-Versions-Location

[1]~[2]:
X-Vesions-Location (and X-Versions-Mode: 'stack' for obvious)

Newer than [2]:
X-Vesions-Location

-----------------
For history mode:
-----------------
Older than [1]:
(Not supported)

[1]~[2]:
X-Vesions-Location and X-Versions-Mode: 'history'

Newer than [2]:
X-History-Location

Note that this functional tests work on newer swift than [2].

And then, this patch also sets allow_versioned_writes=True
for in-process testing (the container server allow_versions
option was already set, so this is just enabling in the middleware
too). That means that in-process functional tests (such as run by
the tox envs func-in-process-*) because history mode requires the
middleware allow_versioned_writes option to be explicity set to True.

1: https://review.openstack.org/#/c/214922/
2: https://review.openstack.org/#/c/373537/

Co-Authored-By: Alistair Coles <alistair.coles@hpe.com>

Related-Change: I555dc17fefd0aa9ade681aa156da24e018ebe74b
Related-Change: Icfd0f481d4e40dd5375c737190aea7ee8dbc3bf9
Change-Id: Ifebc1c3ce558b1df9e576a58a4100f2219dfc7e7"
notmyname,2016-09-22 21:09:08,https://api.github.com/repos/openstack/swift/git/commits/6bf63d85a7c7c5e444a20176a6c51a7f3941c93f,6bf63d85a7c7c5e444a20176a6c51a7f3941c93f,"authors/changelog updates for 2.10.0

Added reno releasenotes file.

Change-Id: Ia14875b992aabaf452242b74e9358cfd884adbcc"
alistairncoles,2016-09-22 15:56:36,https://api.github.com/repos/openstack/swift/git/commits/3da65be4b3b47728833eb6976a33cd420c887aa8,3da65be4b3b47728833eb6976a33cd420c887aa8,"Cleanup tests for auditor invalidating hashes

Cleans up some auditor tests added in the Related-Change.

Make auditor NOT call invalidate_hash for a reclaimable
tombstone in a zero bytes file process, so that
invalidate_hash is only called once per reclaimable
tombstone per auditor cycle.

Previously each execution of 'swift-init object-auditor once'
would result in two identical entries being appended to
hashes.invalid for each reclaimable tombstone. With this change
that unnecessary duplication is removed.

Related-Change: I3e99dc702d55a7424c6482969e03cb4afac854a4
Change-Id: I5dfaa8d74c07ca8a494c29159c1a2bed39499613"
clayg,2016-09-22 00:33:30,https://api.github.com/repos/openstack/swift/git/commits/bfaa8e05834d4d3c78069af22387427c12e0e496,bfaa8e05834d4d3c78069af22387427c12e0e496,"Fix ChunkWriteError when running unittests

I don't think this is a real bug - just that the mocked iter wasn't
closing it subiters like the real iter does.

Change-Id: I44c8159f9eea8737bc86b6c7eb59a512e57e86c1"
TuanLAF,2016-09-12 08:49:38,https://api.github.com/repos/openstack/swift/git/commits/19a684ddedf9259bd389267071f19c1c65b2e836,19a684ddedf9259bd389267071f19c1c65b2e836,"Fix using filter() to meet python2,3

As mentioned in link[1], if we need filter on python3,
Raplace filter(lambda obj: test(obj), data) with:
[obj for obj in data if test(obj)].

[1] https://wiki.openstack.org/wiki/Python3

Change-Id: Ia1ea2ec89e4beb957a4cb358b0d0cef970f23e0a"
tipabu,2016-09-20 20:54:55,https://api.github.com/repos/openstack/swift/git/commits/60a2fe0ba8e59f4abbb5e9c5a9cd093818d5b26c,60a2fe0ba8e59f4abbb5e9c5a9cd093818d5b26c,"Use separate headers for versioned_writes' stack and history modes

Now, instead of saying

   X-Versions-Location: <container>
   X-Versions-Mode: history

clients should just say

   X-History-Location: <container>

Since we've never had a release featuring a user-settable
X-Versions-Mode header, support may be dropped and that is now ignored.

Change-Id: Icfd0f481d4e40dd5375c737190aea7ee8dbc3bf9"
MahatiC,2016-07-25 14:40:44,https://api.github.com/repos/openstack/swift/git/commits/81d4673674febdbe0bba6e27a6d24739456eb3c4,81d4673674febdbe0bba6e27a6d24739456eb3c4,"Delete old tombstones

- Call invalidate_hash in auditor for reclaimable tombstones
- assert changed auditor behavior with a unit test
- driveby test: assert get_hashes behavior with a unit test

Co-Authored-By: Pete Zaitcev <zaitcev@redhat.com>
Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>
Closes-Bug: #1301728
Change-Id: I3e99dc702d55a7424c6482969e03cb4afac854a4"
alistairncoles,2016-09-19 15:06:18,https://api.github.com/repos/openstack/swift/git/commits/18bb99971f1a793dc75b6b3cb393d5503be43575,18bb99971f1a793dc75b6b3cb393d5503be43575,"Add more comment to authtoken sample options

Prior to the Mitaka release the install guides showed
services (including Swift) being in a default Keystone
domain which existed by default and has id=default. This
domain id is reflected in the proxy-server.conf-sample
authtoken options and also shown in man page and auth docs.

The Mitaka install guide shows a domain with *name* default
being created, and having a random UUID assigned, in which
services are created. This has caused confusion (see
discussion on linked bug report).

This patch does not change the sample options but does
add to the comments in order to emphasize that a user
may need to alter the options to match their Keystone
configuration.

Change-Id: I17bfcdbd983402eeb561bb704b8b1f1e27547c7d
Partial-Bug: #1604674"
clayg,2016-09-21 07:28:39,https://api.github.com/repos/openstack/swift/git/commits/4f033a61b58d94bb63c14aa4a92949bf2c2793f0,4f033a61b58d94bb63c14aa4a92949bf2c2793f0,"Fix unstable json.dumps ordering in obj-server test

test_GET_HEAD_with_fragment_preferences seemed to fail on ocassion on
my machine; the test seemed to be assuming the order of dictionary
keys in json output sent in headers; the fix was convert back to a
dictionary when making the assertion on the context of the json.

Change-Id: I1ea1b734c2a9fb12b8f59262bb1229421803e48e
Closes-Bug: #1625956"
alistairncoles,2016-09-06 15:36:36,https://api.github.com/repos/openstack/swift/git/commits/cbfa79a159aa741b2982e7c009241217dde45f92,cbfa79a159aa741b2982e7c009241217dde45f92,"api-ref: fix some header definitions

Clarify Content-Type header definition for listings.

Distinguish between request and response definitions for
X-Account-Meta-Temp-URL-Key* headers.

Insert X-Container-Meta-Quota-* headers missing from some
request/response definitions.

Improve X-Container-Meta-Access-Control-Expose-Headers
parameter formatting.

Distinguish between request and response definitions for
X-Container-Meta-Temp-URL-Key* headers.

Co-Authored-By: Christian Schwede <cschwede@redhat.com>
Change-Id: I8fc7610395973b520aa9ddd72c94e1eb75f602cd
Related-Change: I315b4e550b7d10880fbc00fce9311127ba609c2d"
tipabu,2016-09-17 00:21:00,https://api.github.com/repos/openstack/swift/git/commits/d40ff7098b3dd13b5ea846b86b9e8461ac1875b1,d40ff7098b3dd13b5ea846b86b9e8461ac1875b1,"Clean up api-ref examples

If we're going to talk about replacing an object, we should use the
same object name as the previous example.

Including a non-zero content-length on PUT but not providing a body
will timeout.

Not including the '-' in '-H' will make curl complain:

   Rebuilt URL to: H/
   * Could not resolve host: H
   * Closing connection 1

201 Created responses have content-length of zero, not 116.

Change-Id: Ifd878559ee4036e4893221c7968f53021f38e236"
onovy,2016-09-17 13:42:52,https://api.github.com/repos/openstack/swift/git/commits/9a81b9537f9b1e2d8aff7e237095b15f8cedabf3,9a81b9537f9b1e2d8aff7e237095b15f8cedabf3,"Fixed cut and pasted paragraph from commit message in manpage

Change-Id: Iab839a917e407ce8119f0c6162751f11136cbf5b"
alistairncoles,2016-09-06 15:24:13,https://api.github.com/repos/openstack/swift/git/commits/5ec9a62f4db57eb6ae86704bb987a83a8b0c6faa,5ec9a62f4db57eb6ae86704bb987a83a8b0c6faa,"api-ref: clean up account listing examples

Move the account listing sample responses to follow the sample
requests, and to precede the request/response parameter definitions to
be consistent with other parts of the doc.

Related-Change: I315b4e550b7d10880fbc00fce9311127ba609c2d

Change-Id: Ia20acacd238db4a423b8cd89af1658222b4c5828"
alistairncoles,2016-09-08 15:41:26,https://api.github.com/repos/openstack/swift/git/commits/2355771d4bc87d003a7702405c0406363e0aa18b,2355771d4bc87d003a7702405c0406363e0aa18b,"api-ref: Move repeated paragraph to an include file

Move repeated test re metadata header syntax to an include
file and make it be rendered as a note.

Also make already included text about metadata header value
encoding be a note.

Change-Id: I4795836587492954ad24dd5baaa5d668746d6040"
npraveen35,2016-09-17 15:18:00,https://api.github.com/repos/openstack/swift/git/commits/bb24695d04088c9032188285b890db27893e2e9b,bb24695d04088c9032188285b890db27893e2e9b,"updated output for swift stat

Change-Id: Iff30acb88124e6116803bb79d32d1fc8cbb2d0ce
Closes-Bug: #1622138"
tipabu,2016-08-05 23:19:30,https://api.github.com/repos/openstack/swift/git/commits/d0144962f64bbe301c2e50425631efa839e1ebd4,d0144962f64bbe301c2e50425631efa839e1ebd4,"Include object sysmeta in POST responses

This is *only* sysmeta, to ensure we neither change the semantics of the
response (which could happen if we included allowed_headers) nor reveal
previously-written metadata to write-only clients (which could happen if
we ever get updateable object metadata and sent back user meta).

We could conceivably send back transient sysmeta, though it seems
better to wait for a use-case that demands it.

Change-Id: I04fe0b36b85e546b5379bed12089ffd1bce01fcf
Co-Authored-By: Thiago da Silva <thiago@redhat.com>"
tipabu,2016-09-16 20:31:35,https://api.github.com/repos/openstack/swift/git/commits/a741998bff925360e2d6a72b5ab53c38779f170a,a741998bff925360e2d6a72b5ab53c38779f170a,"Turn on F812 check

   F812 list comprehension redefines <variable> from line ...

While the current violations were benign, this sort of code can easily
lead to subtle bugs. Seems worth checking, especially given how cheap it
is to bring existing code in line with it.

Change-Id: Ibdcf9f93b85a1f1411198001df6bdbfa8f92d114"
notmyname,2016-09-16 20:12:51,https://api.github.com/repos/openstack/swift/git/commits/70e3cf15bf76b23c5661da8bf301ec7f054a492c,70e3cf15bf76b23c5661da8bf301ec7f054a492c,"remove comment saying we ignore H233. we actually check it

Change-Id: Ia78fbb32aa6f45aa6578734dc43f3262e717bab8"
clayg,2016-09-14 17:12:38,https://api.github.com/repos/openstack/swift/git/commits/d062af836ce8a302aec1c43837289236289cefa6,d062af836ce8a302aec1c43837289236289cefa6,"DRY out probe.common

Specifically to facilitate the reuse of the retry check server
function to fill in the creds for the test2 account which is required
for probetests after the related change.

Change-Id: I9729faa4c8c8d6d65a481bc2ea3f0566d511034c
Related-Change: I8d503419b7996721a671ed6b2795224775a7d8c6"
alistairncoles,2016-07-28 17:41:08,https://api.github.com/repos/openstack/swift/git/commits/f679ed0cc8b21e8b71d3aacc34c2a22352c4c850,f679ed0cc8b21e8b71d3aacc34c2a22352c4c850,"Make container sync copy SLO manifests

Currently the container sync daemon fails to copy
an SLO manifest, and the error will stall progress
of the sync process on that container. There are
several reasons why the sync of an SLO manifest
may fail:

1. The GET of the manifest from the source
   container returns an X-Static-Large-Object header
   that is not allowed to be included with a PUT
   to the destination container.

2. The format of the manifest object that is read
   from the source is not in the syntax required
   for a SLO manifest PUT.

3. Assuming 2 were fixed, the PUT of the manifest
   includes an ETag header which will not match the
   md5 of the manifest generated by the receiving
   proxy's SLO middleware.

4. If the manifest is being synced to a different
   account and/or cluster, then the SLO segments may
   not have been synced and so the validation of the
   PUT manifest will fail.

This patch addresses all of these obstacles by
enabling the destination container-sync middleware to
cause the SLO middleware to be bypassed by setting a
swift.slo_override flag in the request environ. This
flag is only set for request that have been validated
as originating from a container sync peer.

This is justifed by noting that a SLO manifest PUT from
a container sync peer can be assumed to have valid syntax
because it was already been validated when written to
the source container.

Furthermore, we must allow SLO manifests to be synced
without requiring the semantic of their content to be
re-validated because we have no way to enforce or check
that segments have been synced prior to the manifest, nor
to check that the semantic of the manifest is still valid
at the source.

This does mean that GETs to synced SLO manifests may fail
if segments have not been synced. This is however
consistent with the expectation for synced DLO manifests
and indeed for the source SLO manifest if segments have
been deleted since it was written.

Co-Authored-By: Oshrit Feder <oshritf@il.ibm.com>
Change-Id: I8d503419b7996721a671ed6b2795224775a7d8c6
Closes-Bug: #1605597"
clayg,2016-09-13 22:10:04,https://api.github.com/repos/openstack/swift/git/commits/2aa5811c7fdf86df302f5ce8b0413bf51e86e7ab,2aa5811c7fdf86df302f5ce8b0413bf51e86e7ab,"fix string formatting in manager

Change-Id: I0d5c351735bdb6249dd9ec3e0c8b7ebe709feea6"
tipabu,2016-09-12 22:02:38,https://api.github.com/repos/openstack/swift/git/commits/f35829c291277a997c45185cdfe0b701ec725374,f35829c291277a997c45185cdfe0b701ec725374,"Bring ""egregious range request"" comment in line with reality

With MAX_RANGES pulled out as a constant, developers are likely to
just trust the comment rather than go verify the value.

Change-Id: I47fbd4790492b272d53ee07fe5bc87170ce2c72b
Releated-Change: I4dcedcaae6c3deada06a0223479e611094d57234"
TuanLAF,2016-09-12 08:01:29,https://api.github.com/repos/openstack/swift/git/commits/1f690df60c0ce7b627c4ebceaecaa5370ff10042,1f690df60c0ce7b627c4ebceaecaa5370ff10042,"Use ConfigParser instead of SafeConfigParser

SafeConfigParser supports interpolation on top of ConfigParser in
Python 2, and SafeConfigParser is deprecated in Python 3.2 and log
warning like "" DeprecationWarning: The SafeConfigParser class has
been renamed to ConfigParser in Python 3.2. This alias will be removed
in future versions. Use ConfigParser directly instead."" So we can use
ConfigParser if we don't need interpolation.

Change-Id: I7e399b3cb90ded909e0d777a4d10c44f1e9299da
Closes-Bug: #1618666"
ntata,2016-08-09 20:34:55,https://api.github.com/repos/openstack/swift/git/commits/51925e5e3496c725487c30132976c9e96732e17b,51925e5e3496c725487c30132976c9e96732e17b,"Add man page for swift.conf

Added man page for swift.conf

Change-Id: I88235ed414dfc34cb46f2fea014f1e721962885a
Closes-Bug: 1607027"
timuralp,2016-09-07 00:26:40,https://api.github.com/repos/openstack/swift/git/commits/0900a2c2447eb5a6cc8b105b4331a638959dba5d,0900a2c2447eb5a6cc8b105b4331a638959dba5d,"Fix error handling in proxy/controllers/base.py.

There are a few issues going on in the
controllers/base.py:_get_response_parts_iter(). One is that the
""raise"" statement that attempts to re-raise the GeneratorExit, may
re-raise ValueError if that was the last exception caught.

Secondly, the range may not actually be set in the backend_headers
(need to investigate further, as that could actually be faulty tests,
since learn_size_from_content_range should always set it). The patch
changes the Range construction to throw a ValueError if None is passed
in that case.

Lastly, the range may be only half-defined, e.g. bytes=0-. In that
case, the check of how many bytes are expected vs how many bytes have
been sent does not make sense.

Change-Id: Ida5adf3d33c736240b2c4bae5510b5289f03dee2"
alistairncoles,2016-09-07 16:54:36,https://api.github.com/repos/openstack/swift/git/commits/ee11955d3e0f46b47ba1f3aef3452f865ba851be,ee11955d3e0f46b47ba1f3aef3452f865ba851be,"Add troubleshooting tips to keystoneauth docs

Documents two common mistakes that are made when
deploying Swift with Keystone auth.

Change-Id: Id81af09d1d21b5c8a3871bf0e20fe6c1448d0ad9"
slokesh184,2016-07-28 12:10:12,https://api.github.com/repos/openstack/swift/git/commits/eea574a78adc54242a97ac3b5ed0b8deeea754bf,eea574a78adc54242a97ac3b5ed0b8deeea754bf,"Py3: Fixes eventlet ImportError: No module named urllib2

Python3:
from eventlet.green.urllib import request
Python2:
from eventlet.green import urllib2

Change-Id: Ib38865e0b6a8f076b8a54de4fae221d49f315c91"
alistairncoles,2016-06-02 15:09:18,https://api.github.com/repos/openstack/swift/git/commits/1751db201b4204ead8f1b91a8d3a388d54822610,1751db201b4204ead8f1b91a8d3a388d54822610,"Add test for copy using a Range header

Since COPY allows a copy of a ranged GET, add some more test
coverage for that in both unit and functional tests.

Drive-by fix to use better test assertion methods.

Co-Authored-By: Thiago da Silva <thiago@redhat.com>

Change-Id: I5cb202386df0862f953f7388107c4d3466e2e46c"
vstinner,2016-08-22 08:44:43,https://api.github.com/repos/openstack/swift/git/commits/8b3c04a4aa7ccd554fb6460ec2222b0437514f4e,8b3c04a4aa7ccd554fb6460ec2222b0437514f4e,"py3: Port test_splice to Python 3

* add NamedTemporaryFile() wrapper
* use byte strings for binary data in tests
* tox.ini: run test_splice on Python 3.4 and Python 3.5

Change-Id: I042d739fbf29433733bf0c2154749bc90b210416"
onovy,2016-08-13 15:54:24,https://api.github.com/repos/openstack/swift/git/commits/0f761852f8aeca0081405323d1dc23ae08f35fc4,0f761852f8aeca0081405323d1dc23ae08f35fc4,"Added missing manpages for all cli tools

Change-Id: Ief3cf510d426a4eeefc8bb8d12f6fa9c8343f55b
Closes-Bug: #1607005
Closes-Bug: #1607007
Closes-Bug: #1607010
Closes-Bug: #1607012
Closes-Bug: #1607014
Closes-Bug: #1607016
Closes-Bug: #1607019
Closes-Bug: #1607021
Closes-Bug: #1607023
Closes-Bug: #1599923"
cschwede,2016-07-28 08:32:17,https://api.github.com/repos/openstack/swift/git/commits/350f10bf3be9ce6c9eec4b3046afc9a05cf08454,350f10bf3be9ce6c9eec4b3046afc9a05cf08454,"Deprecate swift-temp-url

python-swiftclient includes an improved and tested method to generate
tempurls. The command syntax is essentially the same, therefore we can
deprecate this one by importing that method.

python-swiftclient is not added as a requirement; if the import fails
due to a missing swiftclient module it will just raise a deprecation
warning.

Closes-Bug: #1607523
Closes-Bug: #1607519

Change-Id: Ifa8bf636f20f82db4845b02d1b58699edaa39356"
KazuhiroMiyahara,2016-09-01 05:59:56,https://api.github.com/repos/openstack/swift/git/commits/84b264baa8d81ceafa1ed6beb840c6fb80b91cc3,84b264baa8d81ceafa1ed6beb840c6fb80b91cc3,"Fix api reference of object GET request with Range parameter

In RFC 7233, response body size of range requests with parameter
'bytes=N-M' is (M - N + 1). And response of object GET request with
range parameter in current Swift implementation is according to the
RFC.  However, in current api reference explains that response body
size of object GET request with 'Range: bytes=10-15' is five
( != 15 - 10 + 1).
This patch fixes the api reference explanation.

Change-Id: I8371864f8e5adb42c1e56b7ea26c556ea1252728"
tipabu,2016-04-26 14:15:29,https://api.github.com/repos/openstack/swift/git/commits/1883c1ec23b6dfa7a266ed36f905fbd0501cc87c,1883c1ec23b6dfa7a266ed36f905fbd0501cc87c,"Make get_info requests useful with recheck_*_existence == 0

Before, when recheck_account_existence or recheck_container_existence
was set to zero, get_info requests for accounts or containers wouldn't
populate the env cache for the current request, so it wouldn't return
the data *it just got*.

Now, we'll still populate the env cache and memcache, as a cache time of
zero means ""keep it indefinitely"". See the memcache docs at
https://github.com/memcached/memcached/blob/1.4.25/doc/protocol.txt#L163

Change-Id: Ia648263073bc88e35216cafb76821b7ce02c1d03
Closes-Bug: 1224734"
KazuhiroMiyahara,2016-09-01 12:24:52,https://api.github.com/repos/openstack/swift/git/commits/a4279112b3f3320f9b305051965a676df9dbce3e,a4279112b3f3320f9b305051965a676df9dbce3e,"Remove meaningless lines in reconciler unit test

There are two lines in which lists are sorted in test_reconciler.py
However, the values in the lists will be same, then the two lines are
meaningless.
This patch removes the two lines from test_reconciler.py

Change-Id: I7d72a7a4e9a27d87cd78c96f79d1b340b2ad23de"
cschwede,2016-09-01 11:42:09,https://api.github.com/repos/openstack/swift/git/commits/c9488027cb6db6aa3116fbcb9a9a8f9d294d52dc,c9488027cb6db6aa3116fbcb9a9a8f9d294d52dc,"Make versioned_writes docstring more precise

Add a note to the docstring that it is required to add a config section
to the proxy-server.conf and an entry to the pipeline to support history
mode.

Closes-Bug: 1619261
Change-Id: I888485ab4ece6f47db081a4d58c1aab24ce72a8a"
cschwede,2016-08-31 12:49:07,https://api.github.com/repos/openstack/swift/git/commits/2a58b1efa4b70505bfa01b3fe410a25ea2fa799b,2a58b1efa4b70505bfa01b3fe410a25ea2fa799b,"More Test[Account|Container]Controller test updates

Added another test that tries to replicate using an unknown sync method,
with and without an existing DB file.

Change-Id: I09a86615f012e4341268ea30cbc06099528f896b"
bloodeagle40234,2016-09-01 06:01:05,https://api.github.com/repos/openstack/swift/git/commits/ff52bb1b1c04cdad59f784f8222a4853e7a8304e,ff52bb1b1c04cdad59f784f8222a4853e7a8304e,"Avoid warnings for versioned_writes docs

This includes a couple of fixes as follows:
- Add one more ""-"" for mode example titles to adjust the title length
  (it seems needed to use verbatim expression)
- Remove unnecessary back slash

Change-Id: If41bba040ea31f2354642b2ec32bc92ece4f0971"
timuralp,2016-08-31 00:02:21,https://api.github.com/repos/openstack/swift/git/commits/2825909d2553527283ac57de7bd9a842988e6624,2825909d2553527283ac57de7bd9a842988e6624,"Silence ""Client disconnected"" warnings on reads.

When a client fully reads the content and closes the iterator, the
Client disconnected warning is still generated, as there is no logic
to check whether the GeneratorExit exception was raised after the
client received all of the data. This can be observed when doing
large object reads or using an InternalClient and reading exactly
Content-Length bytes from the returned app_iter body.

The patch amends the behavior to hoist how many bytes client read from
a given part and only raise an exception if there are more parts left
or a part was not fully read.

Lastly, the GeneratorExit exception is no longer swallowed and is
re-raised in the handling code.

Change-Id: I879149897fdb25aae977b7f17e580610b188ce04"
gengchc2,2016-08-26 06:08:08,https://api.github.com/repos/openstack/swift/git/commits/671254224a4a4710e7556535ee68bd999536ab8d,671254224a4a4710e7556535ee68bd999536ab8d,"Correct swift reraising of exception

When an exception was caught and rethrown, it should call 'raise'
without any arguments because it shows the place where an exception
occured initially instead of place where the exception re-raised.

Change-Id: I783a2a65f3e38a23ba49b6ae5a2f56a5fdaac2fc"
tipabu,2016-08-31 21:10:27,https://api.github.com/repos/openstack/swift/git/commits/0c22bc22573626dae0f81b976b56e82b265f77a2,0c22bc22573626dae0f81b976b56e82b265f77a2,"Include correct version in install-guide

Change-Id: I8f9de7a824aa327d566c821ec05f97d0bc8931e9"
annp1987,2016-08-31 07:37:11,https://api.github.com/repos/openstack/swift/git/commits/3f00148c6b350efc684250f3339fa5166704d5a3,3f00148c6b350efc684250f3339fa5166704d5a3,"Config logABug feature for Swift api-ref

Currently, Swift api-ref is not configured with logABug feature.
When users click ""Report bug"" button, it leads to ""openstack-manuals""
which is default.

Change-Id: I3b6fb410000637ff03d99110d440de88a5adc30c"
timuralp,2016-08-30 00:27:50,https://api.github.com/repos/openstack/swift/git/commits/66c905e29458666cbd3ea6638a6a4c137e6a35a8,66c905e29458666cbd3ea6638a6a4c137e6a35a8,"Close the iterators in string_along.

Make sure to close the underlying iterator in string_along. What is
currently happening when using the InternalClient is that ""Client
disconnected"" warnings are generated and resources are tied up until
GC runs.

Change-Id: If1f6c0c756aee95f53f99371439533a97d347eab"
gecong1973,2016-08-30 07:08:49,https://api.github.com/repos/openstack/swift/git/commits/3b5850836c59c46f2507a7f62aceccf4c37e5d41,3b5850836c59c46f2507a7f62aceccf4c37e5d41,"Remove white space between print and ()

There is a white space between print and ()
in /tempauth.py, This patch fix it

Change-Id: Id3493bdef12223aa3a2bffc200db8710f5949101"
zhufl,2016-08-29 06:31:27,https://api.github.com/repos/openstack/swift/git/commits/d68b1bd6ddf44c5088e9d02dcb2f1b802c71411b,d68b1bd6ddf44c5088e9d02dcb2f1b802c71411b,"Remove unnecessary tearDown

This is to remove unnecessary tearDown to keep code clean.

Change-Id: Ie70e40d6b55f379b0cc9bc372a35705462cade8b"
matthewoliver,2016-08-19 06:17:31,https://api.github.com/repos/openstack/swift/git/commits/d2fc2614575b04fd9cab5ae589880b92eee9b186,d2fc2614575b04fd9cab5ae589880b92eee9b186,"Authorise versioned write PUTs before copy

Currently a versioned write PUT uses a pre-authed request to move
it into the versioned container before checking whether the
user is authorised. This can lead to some interesting behaviour
whereby a user can select a versioned object path that it does not
have access to, request a put on that versioned object, and this
request will execute the copy part of the request before it fails
due to lack of permissions.

This patch changes the behaviour to be the same as versioned DELETE
where the request is authorised before anything is moved.

Change-Id: Ia8b92251718d10b1eb44a456f28d3d2569a30003
Closes-Bug: #1562175"
tipabu,2016-08-05 18:05:45,https://api.github.com/repos/openstack/swift/git/commits/4d4885acdc8107c4f8f8cd10bc6d19ba3901eb25,4d4885acdc8107c4f8f8cd10bc6d19ba3901eb25,"Tighten header checks for object PUT/POST paths

Change-Id: If2cd059719fe5af1e73ecde5306e9f68d590831f"
clayg,2016-08-25 18:00:49,https://api.github.com/repos/openstack/swift/git/commits/c1ef6539b6ba9d2e4354c9cd2eec8a0195cdb19f,c1ef6539b6ba9d2e4354c9cd2eec8a0195cdb19f,"add test for expirer processes == process

This is a follow up from a change that improved the error message.

Related-Change: I3d12b79470d122b2114f9ee486b15d381f290f95

Change-Id: I093801f3516a60b298c13e2aa026c11c68a63792"
prashanthpai,2015-03-05 12:48:25,https://api.github.com/repos/openstack/swift/git/commits/773edb4a5dd22b22f5fcab57820bcbdd4176dfcd,773edb4a5dd22b22f5fcab57820bcbdd4176dfcd,"Make object creation more atomic in Linux

Linux 3.11 introduced O_TMPFILE as a flag to open() sys call. This would
enable users to get a fd to an unnamed temporary file. As it's unnamed,
it does not require the caller to devise unique names. It is also not
accessible through any path. Hence, file creation is race-free.

This file is initially unreachable. It is then populated with data(write),
metadata(fsetxattr) and fsync'd before being atomically linked into the
filesystem in a fully formed state using linkat() sys call. Only after a
successful linkat() will the object file will be available for reference.

Caveats
* Unlike os.rename(), linkat() cannot overwrite destination path if it
  already exists. If path exists, we unlink and try again.
* XFS support for O_TMPFILE was only added in Linux 3.15.
* If client disconnects during object upload, although there is no
  incomplete/stale file on disk, the object directory would persist
  and is not cleaned up immediately.

Change-Id: I8402439fab3aba5d7af449b5e465f89332f606ec
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
vstinner,2016-08-22 08:41:59,https://api.github.com/repos/openstack/swift/git/commits/d98928caa99cbfac1b8710ac0761925a8146422e,d98928caa99cbfac1b8710ac0761925a8146422e,"py3: tox.ini: use substituation to py35 commands

Use tox substitution to avoid duplicating testenv:py34 commands in
testenv:py35, to not have to maintain the whitelist of Python 3 tests
in two different places.

Write also the list of tests in a newline to be able to more easily
add new unit tests.

Change-Id: I6e7f238f1c5d3fc9b6560918dcbb93e9dd8ec084"
tipabu,2016-01-29 21:08:42,https://api.github.com/repos/openstack/swift/git/commits/3e4607954671dee21107e6083f0695076987cc3e,3e4607954671dee21107e6083f0695076987cc3e,"Add Vary: headers for CORS responses

From the (non-normative) Implementation Considerations section of
https://www.w3.org/TR/cors/#resource-implementation :

> Resources that wish to enable themselves to be shared with multiple
> Origins but do not respond uniformly with ""*"" must in practice
> generate the Access-Control-Allow-Origin header dynamically in
> response to every request they wish to allow. As a consequence,
> authors of such resources should send a Vary: Origin HTTP header or
> provide other appropriate control directives to prevent caching of
> such responses, which may be inaccurate if re-used across-origins.

We do the first part (dynamic Access-Control-Allow-Origin: generation
based on the incoming Origin: header), but not the second (send a
Vary: Origin header). Consider this scenario:

 1. Swift user Alice has some static content that should be available
    from some (but not all) other domains. She creates a new container
    with an appropriate X-Container-Meta-Access-Control-Allow-Origin
    like ""http://foo.example.com http://bar.example.com"".

 2. End user Bob pulls up a browser and visits http://foo.example.com,
    which references a cross-origin resource. Seeing this, the browser
    issues a preflight request and gets back a response that includes
    headers like:

        Access-Control-Allow-Origin: http://foo.example.com
        Access-Control-Allow-Methods: HEAD, GET, PUT, POST, COPY,
         OPTIONS, DELETE

    Since the preflight succeeded, the browser follows through on the
    cross-origin request and everything loads properly.

 3. Now Bob visits http://bar.example.com, which references the same
    resource. Ordinarily, the exact same thing would happen, but with
    http://bar.example.com in the headers. However, if the browser
    cached the preflight response (because it didn't want to make two
    requests everytime it needed a resource), it would assume the server
    would only allow resource-sharing with http://foo.example.com and
    not load the resource.

Similar issues arise from the dynamically-generated
Access-Control-Allow-Headers header.

For more information on the Vary: header, see
http://tools.ietf.org/html/rfc7231#section-7.1.4

Change-Id: I9950e593312f654ee596b7f43f7ab9e5b684d8e5"
grahamhayes,2016-08-19 13:25:06,https://api.github.com/repos/openstack/swift/git/commits/aa893d90778f912fa6668f9e3c462885654c423a,aa893d90778f912fa6668f9e3c462885654c423a,"Get ready for os-api-ref sphinx theme change

Change-Id: Ib4aa4a26814273efafa3453237d18acf8cc966cb"
smerritt,2016-08-09 00:57:49,https://api.github.com/repos/openstack/swift/git/commits/4bcd3d7f6de53ccd04d42005848060b92e7733ce,4bcd3d7f6de53ccd04d42005848060b92e7733ce,"Support multi-range GETs for static large objects.

Bonus consistency: 416 responses now always have a body. Before, if
you had ""swob.HTTPRequestedRangeNotSatisfiable()"", you'd get a body,
but if you had ""swob.Response(..., conditional_response=True)"", then
you'd get a length-0 response body. Now you always get a response
body. It's just the default <html><h1>..., but at it's always there.

Bonus efficiency: do a little caching of sub-SLO manifests to avoid
needless re-fetches. This kicks in when there are multiple references
to the same sub-SLO in a given manifest. The caching only holds 20
sub-SLOs so that a malicious user can't build a giant SLO tree and use
it to run the proxy out of memory (we're already holding up to 10
manifests in memory at a time since a SLO can include another SLO to a
depth of 10; this doesn't make the situation too much worse).

Change-Id: I24716e3271cf3370642e3755447e717fd7d9957c"
bloodeagle40234,2016-08-16 00:52:58,https://api.github.com/repos/openstack/swift/git/commits/b7b77c7aa3aea2d210f77b0da4b69e6bdec49c84,b7b77c7aa3aea2d210f77b0da4b69e6bdec49c84,"Follow up delayed reap probe test

This is a follow up patch for https://review.openstack.org/#/c/321041

This patch includes following items:

- Move test_sync to below _verify_account_reaped to be the actual tests
  as a bunch
- Change the test name fron ""test_sync"" to ""test_reap"" to clarify the
  purpose
- Fix a typo from ""Object"" to ""Container"" for an error message

Change-Id: I51bc01113056e2eb99f731d38e9f1c7a6c5c96be"
slokesh184,2016-07-21 15:41:58,https://api.github.com/repos/openstack/swift/git/commits/1fc46a0e13eff5603ba0c26d98407e3012d9de42,1fc46a0e13eff5603ba0c26d98407e3012d9de42,"py3: Fixes encoding and type error

Fixes encoding bytes to base64.
Fixes unorderedtype int() and str()
for python3.
Fixes encoding issues.

Change-Id: I6e7aaf21e080078d4b36562e41129804d71df2fc"
alistairncoles,2016-08-17 16:20:21,https://api.github.com/repos/openstack/swift/git/commits/ce49a296c6f3e0bdeae0c3cd6615d31141f5c23e,ce49a296c6f3e0bdeae0c3cd6615d31141f5c23e,"Add rm to tox whitelist_externals

Avoids a warning when running tox -e api-ref

Change-Id: Ib02849075e6424f1db84499fd7500d7bb76dde67"
alistairncoles,2016-07-22 15:45:53,https://api.github.com/repos/openstack/swift/git/commits/51622fdf0f9f762894e18670091fd2f6703a1891,51622fdf0f9f762894e18670091fd2f6703a1891,"Pass empty etag override values through encrypter

Currently if the encrypter middleware receives an
x-object-sysmeta-container-update-override-etag value of '' in either
a header or footer, it may or not pass the value on to the proxy app:
if there is no object body then the '' value is passed on, but if
there is a body then the override value is replaced with the encrypted
etag of the body.

However strange it may seem for an override etag value to be the empty
string, the encrypter should at least behave consistently, so this
patch makes it always respect the empty string override value and pass
it through, unencrypted (i.e.  with no crypto_meta appended). It is
assumed that the middleware that set the override value knows what it
is doing.

Note that the override etag value is never used to verify the object
content, it is only used to forward a value to the container server
for inclusion with the object's listing entry.

Change-Id: Ie1d073be9ffb00d0f360298c3040eb2f15de0926"
bloodeagle40234,2016-04-12 03:51:00,https://api.github.com/repos/openstack/swift/git/commits/dfa5523d8c729dd44f79015d8ad3d0260e7f86c3,dfa5523d8c729dd44f79015d8ad3d0260e7f86c3,"Add Pros/Cons docs for global cluster consideration

This comes from discussion in Bristol Hackathon (Feb 2016).
Currently Swift has a couple of choices (Global Cluster and Container
Sync) to sync the stored data into geographically distributed locations.

This patch adds the summary of the discussion comparing between
Global Cluster and Container Sync to enable operators to know which
functionality fits their own use case.

And, to be fairness with container-sync, this patch moves global
cluster docs into overview_global_cluster.rst from admin_guide.rst.

Co-Authored-By: Alistair Coles <alistair.coles@hpe.com>

Change-Id: I624eb519503ae71dbc82245c33dab6e8637d0f8b"
bloodeagle40234,2016-08-16 01:26:00,https://api.github.com/repos/openstack/swift/git/commits/95a5a4a7ec1ec8a48db756121e7b3440f5704536,95a5a4a7ec1ec8a48db756121e7b3440f5704536,"Don't run probe tests if resetswift failed

Probe test is cleaning up the swift environment for each test in setUp
method. However, probe tests will run even if we cannot use the resetswift
script for some reasons (e.g. not permitted, the script not found) and
probably the probe tests will fail after a long time passed for the
execution.

To prevent such an unfortunate situation and also to find the reason
easily, this patch adds the exit code check for ""resetswift"" and if it
failed, the test will raise AssertionError with the stdout and stderr to
make it easy to find the reason.

Closes-Bug: #1613494

Change-Id: Id80d56ab6b71402ead4fe22c120064d78c1e74ac"
tipabu,2016-04-19 16:41:50,https://api.github.com/repos/openstack/swift/git/commits/30b97f2367ed078a7fe278c79518cd6d8c1162b0,30b97f2367ed078a7fe278c79518cd6d8c1162b0,"Drop X-Auth-Token from all versioned_writes subrequests

It is not necessary for versioned_writes to function (all of these
were pre-authed requests anyway), and transaction ID should be used to
trace requests instead.

Change-Id: If55c1586aa38f9a3bc9e1d00768ca00201af94cd"
alistairncoles,2016-08-16 15:21:59,https://api.github.com/repos/openstack/swift/git/commits/cc2b2cf9c8a5cb913817e2f900c676809cd2e027,cc2b2cf9c8a5cb913817e2f900c676809cd2e027,"Improve doc for using container-sync with large objects

Clarify that synced segment container names must be the same
when syncing large objects.

Also add multipart-menifest query string option to API ref
for object GETs.

Change-Id: Ib2d2a1e6c1e5eff215fc75c2b49e7d6758b17b7e
Partial-Bug: #1613681
Closes-Bug: #1613316"
charz,2016-08-10 16:53:13,https://api.github.com/repos/openstack/swift/git/commits/65b1820407ea40bd7d65a5356a58a689befe3cb5,65b1820407ea40bd7d65a5356a58a689befe3cb5,"Ignore auditor status files to prevent replicator reports errors

Ignore `auditor_status_*.json` files during the collecting jobs
and replicator won't use these wrong paths to find objects that
causes an exception to increase failure count in replicator report.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Mark Kirkwood <mark.kirkwood@catalyst.net.nz>

Change-Id: Ib15a0987288d9ee32432c1998aefe638ca3b223b
Closes-Bug: #1583305"
tipabu,2015-08-19 19:17:47,https://api.github.com/repos/openstack/swift/git/commits/c7283be4fe9ebaf0e8feba695a1c664eec6fb355,c7283be4fe9ebaf0e8feba695a1c664eec6fb355,"Add ""history"" mode to versioned_writes middleware

This change introduces the concept of a ""versioning mode"" for
versioned_writes. The following modes are supported:

 * stack

    When deleting, check whether any previous versions exist in the
    versions container. If none is found, the object is deleted. If the
    most-recent version in the versions container is not a delete
    marker, it is copied into the versioned container (overwriting the
    current version if one exists) and then deleted from the versions
    container. This preserves the previous behavior.

    If the most-recent version in the versions container is a delete
    marker and a current version exists in the versioned container, the
    current version is deleted. If the most-recent version in the
    versions container is a delete marker and no current version exists
    in the versioned container, we copy the next-most-recent version
    from the versions container into the versioned container (assuming
    it exists and is not a delete marker) and delete both the
    most-recent version (i.e., the delete marker) and the just-copied
    next-most-recent version from the versions container.

    With this mode, DELETEs to versioned containers ""undo"" operations
    on containers. Previously this was limited to undoing PUTs, but now
    it will also undo DELETEs performed while in ""history"" mode.

 * history

    When deleting, check whether a current version exists in the
    versioned container. If one is found, it is copied to the versions
    container. Then an empty ""delete marker"" object is also put into the
    versions container; this records when the object was deleted.
    Finally, the original current version is deleted from the versioned
    container. As a result, subsequent GETs or HEADs will return a 404,
    and container listings for the versioned container do not include
    the object.

    With this mode, DELETEs to versioned containers behave like DELETEs
    to other containers, but with a history of what has happened.

Clients may specify (via a new X-Versions-Mode header) which mode a
container should use. By default, the existing ""stack"" mode is used.

Upgrade consideration:
======================

Clients should not use the ""history"" mode until all proxies in the
cluster have been upgraded. Attempting to use the ""history"" mode during
a rolling upgrade may result in some requests being served by proxies
running old code (which necessarily uses the ""stack"" mode), leading to
data loss.

Change-Id: I555dc17fefd0aa9ade681aa156da24e018ebe74b"
liujiong63,2016-08-13 16:43:47,https://api.github.com/repos/openstack/swift/git/commits/bb87fcefced099a56537edd0db7ca965e9902f5a,bb87fcefced099a56537edd0db7ca965e9902f5a,"Fix typo in the file

Change-Id: I6539e9b9fb7918e387e8ae802be7b4efbcb07f4d"
ajaeger,2016-08-12 19:18:07,https://api.github.com/repos/openstack/swift/git/commits/aab2cee827b18fe1c48f121d2c9066af2dd0c366,aab2cee827b18fe1c48f121d2c9066af2dd0c366,"Move other-requirements.txt to bindep.txt

The default filename for documenting binary dependencies has been
changed from ""other-requirements.txt"" to ""bindep.txt"" with the release
of bindep 2.1.0. While the previous name is still supported, it will
be deprecated.

Move the file around to follow this change.

Note that this change is self-testing, the OpenStack CI infrastructure
will use a ""bindep.txt"" file to setup nodes for testing.

For more information about bindep, see also:
http://docs.openstack.org/infra/manual/drivers.html#package-requirements
http://docs.openstack.org/infra/bindep/

As well as this announcement:
http://lists.openstack.org/pipermail/openstack-dev/2016-August/101590.html

Change-Id: I000a4e708006263acc6d9731a6677a6e62e285b6"
tipabu,2016-08-12 05:46:33,https://api.github.com/repos/openstack/swift/git/commits/f7a820ed3a72992948e22e7366a9a1780ad40388,f7a820ed3a72992948e22e7366a9a1780ad40388,"Wait for a non-empty chunk in WSGIContext._app_call

We're functioning as a WSGI server here, so this bit from PEP-3333 seems
to apply:

> The start_response callable must not actually transmit the response
> headers. Instead, it must store them for the server or gateway to
> transmit only after the first iteration of the application return
> value that yields a non-empty bytestrin ... . In other words, response
> headers must not be sent until there is actual body data available, or
> until the application's returned iterable is exhausted.

Plus, it mirrors what swob.Request.call_application does.

Change-Id: I1e8501f8ce91ea912780db64fee1c56bef809a98"
nakuldahiwade,2016-08-11 16:10:35,https://api.github.com/repos/openstack/swift/git/commits/7e2cb23f887cf0092e0bd9f2baa42d3ddbb257ce,7e2cb23f887cf0092e0bd9f2baa42d3ddbb257ce,"Grammer error : swift/doc/source/overview_ring.rst

Changed sentence: ""Regions can be used to describe geo-graphically
systems characterized by lower-bandwidth""
To: ""Regions can be used to describe geographical
systems characterized by lower-bandwidth""

Change-Id: I0f614a4c53dd31459f1b6297dd32a8c0f609d9ce
Closes-Bug: 1612302"
shank7485,2016-08-11 05:21:54,https://api.github.com/repos/openstack/swift/git/commits/844d0c965df1fcec53f118ed71c2a560cfe88a2b,844d0c965df1fcec53f118ed71c2a560cfe88a2b,"Corrects spelling error in swift/common/middleware/slo.py

Fixes 'perfomed' to 'performed'

Change-Id: I54adf45494cd4c6edae7bb5b404d377527c6c5a0
Closes-Bug: 1612051"
cdoron,2016-08-10 06:29:44,https://api.github.com/repos/openstack/swift/git/commits/44ba3c310a90f6db49417220ca979fd945ca1799,44ba3c310a90f6db49417220ca979fd945ca1799,"Added a test for delayed reap.

The test schedules a 3-second delayed account reaping.
The test checks that no reaping after an immediate reap, and that full reaping
occurs 3 seconds later.

Change-Id: I0ab954ed3c59d808f32d84dc53fd512fd0a651be"
to222,2016-08-09 04:17:38,https://api.github.com/repos/openstack/swift/git/commits/bd29a3e3c7e49b1d7749c605bc150de0af168fd4,bd29a3e3c7e49b1d7749c605bc150de0af168fd4,"Remove the duplicated word 'be'

Change-Id: I3ff4e7135d8d10c62dfcde90f34befe328ac39b2"
pmkovar,2016-07-25 16:34:21,https://api.github.com/repos/openstack/swift/git/commits/8b5578c362125d0ec7efdc5742d185b344f892f0,8b5578c362125d0ec7efdc5742d185b344f892f0,"[install-guide] Include environment-networking

environment-networking.rst and edit_hosts_file.txt were left out
when swift-specific content was moved from OpenStack Installation
Guide to swift install-guide.

Change-Id: I334cca0634e3071a7ea285e6ad49ed9baaf7dca8
Partially-Implements: blueprint projectspecificinstallguides
Closes-Bug: 1605021"
orozery,2016-06-15 16:56:03,https://api.github.com/repos/openstack/swift/git/commits/4aa1ae61cb62d9f0e8ca6ceecabb0b9b40fedf96,4aa1ae61cb62d9f0e8ca6ceecabb0b9b40fedf96,"Raise 412 response on expirer

Currently, the expirer daemon treats 412 (precondition failed)
as successful DELETEs.

On the other hand, it treats 404 as failed while reclaim_age
(usually a week) has not passed.
This patch unifies both cases to the same handling: waiting for
reclaim_age to pass, then deleting the entry.

The reason the expirer should not delete a 412 entry right away,
is that it might be the case that 412 is returned because of
a split brain, where the updated object servers are currently down.
Same reason holds for a 404 response.

Change-Id: Icabbdd72746a211b68f266a49231881f0f4ace94"
alistairncoles,2016-08-05 13:28:22,https://api.github.com/repos/openstack/swift/git/commits/a9fa5abdc37fe9ce40da9b6c310cef93dae1a781,a9fa5abdc37fe9ce40da9b6c310cef93dae1a781,"Tighten up direct client unit tests

Make the tests for direct_get_container and direct_get_account
verify all combinations of request parameters.

Change-Id: I3b929ca83b37c32927b9bf619f445d698b9bdab9
Related-Change: I846fc70ff3abdb1674152a8d9e0521c709f254c4"
Daveweco,2016-08-04 11:31:18,https://api.github.com/repos/openstack/swift/git/commits/3096dc6b1e299d2e0a372f7979158d1a4dd38144,3096dc6b1e299d2e0a372f7979158d1a4dd38144,"Make the logger information format

The logger usually use the _() func to ensure
the international message. This commit modify the
logger format in proxy pkg.

Change-Id: I9a8e118dc6ba55e462f326aebff280289e8ab4fe"
bloodeagle40234,2016-08-05 06:34:40,https://api.github.com/repos/openstack/swift/git/commits/eadab846b32e78644925fec707c6a048d959c3a8,eadab846b32e78644925fec707c6a048d959c3a8,"Remove unnecessary open call and related vars in unit tests

Since the methods touching exisiting file is mocked, we don't have to
open the file. (if it is needed, we should close at first anyway)

And cleanup unecessary vars/imports that is used for making the file
path.

This patch is a followup on:
https://review.openstack.org/#/c/350471/

Change-Id: I8fbc0b5b9a01782b6da5a7dd674f52d4b566ca5c"
tipabu,2016-08-03 04:50:45,https://api.github.com/repos/openstack/swift/git/commits/fb5fcb189e32746f8c884cd53cb5239a384bc070,fb5fcb189e32746f8c884cd53cb5239a384bc070,"Fix encryption-delimiter interaction

Previously, if a container listing produced `subdir` elements
the decrypter would raise a KeyError.

Additionally, update the functests so this sort of thing would
have been caught at the gate.

Closes-Bug: 1609904
Change-Id: Idc1907d19f90af7a086f45f8faecee9fbc3c69c2"
pauldardeau,2016-07-31 22:31:37,https://api.github.com/repos/openstack/swift/git/commits/4f94e71d554f885233da1a055bf7972353f3c6ec,4f94e71d554f885233da1a055bf7972353f3c6ec,"add swift-oldies man page

Closes-bug: #1607017
Change-Id: I365edf77c5bf34e2e51d7f10c9ea1012c1bda8ed"
redbo,2016-08-04 03:05:40,https://api.github.com/repos/openstack/swift/git/commits/303e4a1d83bc94793a47756b9d0b3f169c1eeb23,303e4a1d83bc94793a47756b9d0b3f169c1eeb23,"missing parens in functional test

I was watching the logs and noticed it creates an object named:
""<bound method type.create_ascii_name of <class 'test.functional.tests.Utils'>>""

Change-Id: I8dcbb40125b84a914e3c01566ae9c3f08dc9ea0f"
smerritt,2016-08-03 23:46:48,https://api.github.com/repos/openstack/swift/git/commits/425bb0d8b0f78feb362fac69cd75bfe8baa3f841,425bb0d8b0f78feb362fac69cd75bfe8baa3f841,"Fix stale docstring in SegmentedIterable.

At some point, we added stuff to listing_iter, but didn't update the
docstring. I noticed this while trying to write code using a
SegmentedIterable when it wouldn't take my 3-tuples like the docstring
claimed it would.

Change-Id: I8f6667e97b1277f5b403a5f6fa7f9d708bb19249"
gaborantal,2016-07-15 12:35:54,https://api.github.com/repos/openstack/swift/git/commits/488f88e30abe2b9d67ce43697e3abc63c75699b7,488f88e30abe2b9d67ce43697e3abc63c75699b7,"Use more specific asserts in test/unit/cli tests

I changed asserts with more specific assert methods.
e.g.: from assertTrue(sth == None) to assertIsNone(*) or
assertTrue(isinstance(inst, type)) to assertIsInstace(inst, type)
or assertTrue(not sth) to assertFalse(sth).

The code gets more readable, and a better description will be shown on fail.

Change-Id: I39305808ad2349dc11a42261b41dbb347ac0618a"
alistairncoles,2016-08-02 09:57:59,https://api.github.com/repos/openstack/swift/git/commits/5cf24ecf165e82076db5c9e113b2127de7782a90,5cf24ecf165e82076db5c9e113b2127de7782a90,"Fix link to docs from swift-dispersion manpages

Change the link to the admin docs to point to #dispersion-report
rather than non-existent #cluster-health.

Change-Id: Ia2f4262c266201d4d555e7bedb8c5c2eb9fb1264"
alistairncoles,2016-08-02 09:38:45,https://api.github.com/repos/openstack/swift/git/commits/e0c7e6bf78c4bb0f2ad047a9d6f6926a2ae02d9a,e0c7e6bf78c4bb0f2ad047a9d6f6926a2ae02d9a,"Fix repeated OPTIONS in swift-dispersion-report manpage

Remove the repeated OPTIONS section headers, which looks odd
and is inconsistent with swift-dispersion-populate.

Change-Id: I6d894e3b61002ddf7c0ea8a78cde226617eb11a6"
akatsukih,2016-08-01 13:39:50,https://api.github.com/repos/openstack/swift/git/commits/e7f025f7fa56056ddad82aa5c601894b25c8927b,e7f025f7fa56056ddad82aa5c601894b25c8927b,"made link in README.rst more clear

Escaping the underscore is not necessary in this case. See
http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#inline-markup-recognition-rules

Change-Id: I21d95d6baaf471246eb8a931c7df366634529512"
ntata,2016-05-20 17:41:29,https://api.github.com/repos/openstack/swift/git/commits/99a6f915ffc3aba2086e22dfba1f33b4fee46e81,99a6f915ffc3aba2086e22dfba1f33b4fee46e81,"swift-ring-builder output corrected for ipv6

Adjusted width of ip and port columns in swift-ring-builder command
output to dynamically span to the longest ip or the longest port in
the devices list. Also combined the port and ip address columns for
better visual clarity. Took care of ipv6 format [ipv6]:port

Modified the corresponding test case with expected output.

Change-Id: I65837f8fed70be60b53d5a817a4ce529ad0f070e
Closes-Bug: #1567105"
bvancsics,2016-07-15 10:22:30,https://api.github.com/repos/openstack/swift/git/commits/1533eb3f3fb358eea92a9f23c4558dd8a0577d1a,1533eb3f3fb358eea92a9f23c4558dd8a0577d1a,"Reduce code duplication

Reduced source code by extracting duplicated code
(swift/cli/ringbuilder.py)
http://openqa.sed.hu/dashboard/index?did=1&id=OpenStack%3Aswift,
in 127~CloneClass

Change-Id: Id1081363610075f306eff7cf003c3355f283f1d1
Closes-Bug: 1536127"
gengchc2,2016-07-29 03:43:32,https://api.github.com/repos/openstack/swift/git/commits/eb535904bac7c9f8a73b672471dd01f5971716a1,eb535904bac7c9f8a73b672471dd01f5971716a1,"modify the home-page info with the developer documentation

update home-page info

Change-Id: I625c25a8a5698d98174603c6fa2b42391471c03d"
matthewoliver,2016-06-07 04:52:28,https://api.github.com/repos/openstack/swift/git/commits/0d41b2326009c470f41f365c508e473ebdacb11c,0d41b2326009c470f41f365c508e473ebdacb11c,"Add end_marker and reverse options to direct_client

Currently the direct_get_container and direct_get_account methods
of the direct client don't support passing in the 'end_marker' and
'reverse' params.

This change adds support for these params in direct client.

Change-Id: I846fc70ff3abdb1674152a8d9e0521c709f254c4"
ntata,2016-07-26 20:20:38,https://api.github.com/repos/openstack/swift/git/commits/5c9732ac8e797e9235ccd6df56253a802e517ab6,5c9732ac8e797e9235ccd6df56253a802e517ab6,"Moved ipv4 & ipv6 validations to the common utils

Validating ip addresses for ipv4 and ipv6 formats have more generic
use cases outside of rings. swift-get-nodes and other utilities that
need to handle ipv6 adrresses often require importing ip validation
methods from swift/common/rings/utils (see Related-Change). Also,
expand_ipv6 method already exists in swift/common/utils. Hence moving
validation of ips also into swift/common/utils from
swift/common/ring/utils.

Related-Change: I6551d65241950c65e7160587cc414deb4a2122f5
Change-Id: I720a9586469cf55acab74b4b005907ce106b3da4"
smerritt,2016-03-12 00:15:17,https://api.github.com/repos/openstack/swift/git/commits/457cea864c4b49bcf79327369c0bc5ebc24668e2,457cea864c4b49bcf79327369c0bc5ebc24668e2,"Handle IPv6 addresses in swift-get-nodes.

The curl commands needed a little tweaking.

Change-Id: I6551d65241950c65e7160587cc414deb4a2122f5
Closes-Bug: 1555860"
alistairncoles,2016-07-28 10:09:48,https://api.github.com/repos/openstack/swift/git/commits/8bf28c869d814c33f232d982420f713bbe629003,8bf28c869d814c33f232d982420f713bbe629003,"Fix broken link in associated projects doc

Change-Id: I6f0cc1004a40e77345c641c0e5076f2f5dadb891"
alistairncoles,2016-07-27 08:08:11,https://api.github.com/repos/openstack/swift/git/commits/149a331f1cd2e2488bb0aab3c06c4c70cf74ece6,149a331f1cd2e2488bb0aab3c06c4c70cf74ece6,"Additional test for container override etag preferences

Adds one more scenario to the tests for preference of
container etag override values in sysmeta or backend
headers and footers.

Change-Id: Iacdaec8c98c7001029163a9d50321a13dc8d5a19
Related-Change: I074fbecb6440fb1d04279cd892d38d2acc44b47d"
vstinner,2016-07-26 17:42:46,https://api.github.com/repos/openstack/swift/git/commits/fbf0e499171d0880d0dc745767ac3a531d08c0c6,fbf0e499171d0880d0dc745767ac3a531d08c0c6,"monkey_patch_mimetools() now does nothing on py3

The mimetools module has been removed from Python 3: modify
monkey_patch_mimetools() to do nothing on Python 3.

Skip test_monkey_patch_mimetools() on Python 3.

Change-Id: I50f01ec159efedbb4df759ddd1e13928ac28fba6"
alistairncoles,2016-07-26 17:12:26,https://api.github.com/repos/openstack/swift/git/commits/7cc2392611cccb48100cafc1b4ec5fdf03855b3d,7cc2392611cccb48100cafc1b4ec5fdf03855b3d,"Document how to run a single functional test

Change-Id: Icabc5a8316f5e8fd887bb42358ad03e9c43d0765"
clayg,2016-07-25 19:30:34,https://api.github.com/repos/openstack/swift/git/commits/cf1f7af38751f280906954b7a01ee4f273336264,cf1f7af38751f280906954b7a01ee4f273336264,"Use self.ts more consistently in obj.test_server

A make_timestamp_iter was added into setUp in the Related-Change.

There was a couple of different tests that were using timestamp iters
in different ways, consistently we apply the use of next(self.ts)
which I believe is becoming more common/standardized in unitests.

Related-Change: I074fbecb6440fb1d04279cd892d38d2acc44b47d
Change-Id: Ib6b883afec242355ae08c50c1e685a20e5efadc7"
clayg,2016-07-25 19:22:20,https://api.github.com/repos/openstack/swift/git/commits/a97537e158a78b7c49f11aef2756fa65093a05dd,a97537e158a78b7c49f11aef2756fa65093a05dd,"Split up backend/sysmeta header/footer preference tests

The change in preference to the Related-Change is simply to prefer
sysmeta overrides in the headers to backend overrides in the footers:

Before:
sysmeta footers > backend footers > sysmeta headers > backend headers

After:
sysmeta footers > sysmeta headers > backend footers > backend headers

This change just breaks up the tests to try to make it more obvious
what already worked and what has changed.  The justification seems to
be that overrides in sysmeta headers only work on policies that don't
send backend footers, but sysmeta overrides should always have a
higher preference than backend overrides.

Related-Change: Idb40361ac72da51e1390dff690723dbc2c653a13
Change-Id: I074fbecb6440fb1d04279cd892d38d2acc44b47d"
alistairncoles,2016-07-26 16:44:56,https://api.github.com/repos/openstack/swift/git/commits/77e476376c954d041dfb3f0cca8c0557f8482964,77e476376c954d041dfb3f0cca8c0557f8482964,"Mention SWIFT_TEST_DEBUG_LOGS in development guide

Change-Id: If764de0a28f5afb858b3e892b35fe5fa147a0650"
vstinner,2016-07-26 10:36:50,https://api.github.com/repos/openstack/swift/git/commits/a81d60472fc237234bcd4798d9f37d554ac0ba3f,a81d60472fc237234bcd4798d9f37d554ac0ba3f,"Fix Python 3 issues in diskfile

* Fix bytes vs Unicode issues
* On Python 3, encode JSON to UTF-8 and decode it from UTF-8
* Open files in binary mode to avoid Unicode issues
* test_auditor: use bytes for content, open files in binary mode

Change-Id: Ifa84001493cfb57975d3b140b0d7e09020504bca"
cschwede,2016-06-09 06:17:22,https://api.github.com/repos/openstack/swift/git/commits/699953508ad1fd82c221e57bccfb1de8bf7a7e31,699953508ad1fd82c221e57bccfb1de8bf7a7e31,"Add doc entry to check partition count

An high or increasing partition count due to storing handoffs can have
some severe side-effects, and replication might never be able to catch
up. This patch adds a note to the admin_guide how to check this.

Change-Id: Ib4e161d68f1a82236dbf5fac13ef9a13ac4bbf18"
chengtcli,2016-07-25 13:23:04,https://api.github.com/repos/openstack/swift/git/commits/c1c18da82c8e8d03c4e5b52910661632f8acfe46,c1c18da82c8e8d03c4e5b52910661632f8acfe46,"check _last_part_moves when pretend_min_part_hours_passed

pretend_min_part_hours_passed do things like this:
self._last_part_moves[part] = 0xff

this will throw exception if self._last_part_moves is None.

this patch is to check self._last_part_moves to prevent exception.
Closes-bug: #1578835

Change-Id: Ic83c7a338b45bfcf61f5ab6100e6db335c3fa81a"
tipabu,2016-07-25 22:02:03,https://api.github.com/repos/openstack/swift/git/commits/bf17d968008addadfb06fe35e83ac9de38ba2af4,bf17d968008addadfb06fe35e83ac9de38ba2af4,"Use extract_swift_bytes in override_bytes_from_content_type

About half the logic was the same, and it seems better to just implement
that once.

Change-Id: I350da34ef7a3cd0cb74f585f4691992ae64c7eab"
vstinner,2016-06-23 11:53:49,https://api.github.com/repos/openstack/swift/git/commits/5677a04c8f5d46da80ac4cf8be135549b422772c,5677a04c8f5d46da80ac4cf8be135549b422772c,"Python 3: Fix usage of dict methods

* Replace ""c = dict(a.items() + b.items())"" with
  ""c = dict(a); c.update(b)"". It works on Python 2 and Python 3, and
  it may be a little bit more efficient on Python 2 (no need to
  create a temporary list of items).
* Replace ""dict.values() + dict.values()"" with
  ""list(dict.values()) + list(dict.values())"": on Python 3,
  dict.values() is a view which doesn't support a+b operator.

Change-Id: Id5a65628fe2fb7a02c713b758fcaa81154db28a0"
vstinner,2016-06-23 11:42:01,https://api.github.com/repos/openstack/swift/git/commits/e6776306b7d486ebd35c8f388b0ff6db51b0752b,e6776306b7d486ebd35c8f388b0ff6db51b0752b,"Python 3: fix usage of reload()

Replace reload() builtin function with six.moves.reload_module() to
make the code compatible with Python 2 and Python 3.

Change-Id: I7572d613fef700b392d412501facc3bd5ee72a66"
bloodeagle40234,2016-01-15 11:53:01,https://api.github.com/repos/openstack/swift/git/commits/1eb96397e7a6f477ba31df85eda892769a8a182e,1eb96397e7a6f477ba31df85eda892769a8a182e,"Fix EC ring validation at ring reload

Swift EC has a strong constraint about the ring must have a number of
replicas which fits ec_k + ec_m. That is validated when servers waking
up. However, Swift has more chance to load such an invalid ring when
a request comming, calling some node iteration like get_nodes,
get_part_nodes or so, and no ring validation is there.

This patch moves ring validation from policy validate_ring into the ring
instance as validation_hook that will run at ring reload. Since this patch,
ring instance will allow to use the old ring if the reload is not fourced.

Note that the exception if invalid ring found was changed from
RingValidationError to RingLoadError because RingValidationError is a
child of RingBuilderError but the ring reload is obviously outside of
""builder"".

Closes-Bug: #1534572

Change-Id: I6428fbfb04e0c79679b917d5e57bd2a34f2a0875"
bloodeagle40234,2016-07-04 05:03:20,https://api.github.com/repos/openstack/swift/git/commits/3a1a198780433e6ebf2bcc3862bd63c7d033930d,3a1a198780433e6ebf2bcc3862bd63c7d033930d,"Raise ValueError if empty value coming into encrypt_header_val

encrypt_header_val is used to translate a raw header value into an
encrypted value. Semantically, a header with an empty value won't be stored
and all callers seem to remove such a header before calling
encrypted_header_val.

So if no reason for returning ('', None), I think it's better to change it to
raise ValueError not to cause another error for users of the return value.
(e.g. dump_crypto_meta)

Plus this patch addes a few unit tests for those cases above.

Change-Id: Ic1237f4afb8c0e466be5ce59fe31b667c39242b0"
tipabu,2016-07-01 20:38:20,https://api.github.com/repos/openstack/swift/git/commits/ab602a2711af2e09df1ffeb132f4a01e3fae5626,ab602a2711af2e09df1ffeb132f4a01e3fae5626,"Make load_crypto_meta more py3-friendly

Change-Id: I1f2551630e7162f3b4efc8bf1f1a4d415da9d9a3"
bloodeagle40234,2016-07-21 01:16:27,https://api.github.com/repos/openstack/swift/git/commits/2876f59d4cdbafc297d79f4e6295f05e3448ae47,2876f59d4cdbafc297d79f4e6295f05e3448ae47,"Cache fragment size for EC policy

ECStoragePolicy.fragment_size is never changed on running Swift because
it is from ec_segment_size and ec_type defined in swift.conf statically
so let's cache the value after retrieving the value from the pyeclib driver.

And more, pyeclib <= 1.2.1 (current newest) has a bug [1] to leak the reference
count of the items in the returned dict (i.e. causes memory leak) so that
this caching will be mitigation of the memory leak because this saves the call
count fewer than current as possible.

Note that the complete fix for the memory leak for pyeclib is proposed at
https://review.openstack.org/#/c/344066/

1: https://bugs.launchpad.net/pyeclib/+bug/1604335

Related-Bug: #1604335
Change-Id: I6bbaa4063dc462383c949764b6567b2bee233689"
alistairncoles,2016-07-06 10:27:58,https://api.github.com/repos/openstack/swift/git/commits/afe3968dd158d829c667764a3acd223b52aa5756,afe3968dd158d829c667764a3acd223b52aa5756,"Copy headers correctly when copying object

Fix copy middleware so that all client-defined object
headers that object servers allow to be persisted are copied.
For example, content-encoding and content-disposition will
now be copied.

Fix treatment of x-fresh-metadata header so that, when it is
used, new object sysmeta is applied to the object copy in the
same way as a copy without x-fresh-metadata.

Remove unnecessary passing of original request headers to
sink PUT request constructor: passing the environ is sufficient
to have the new request inherit the original's headers.

Add tests for this change and to verify that content-type
gets either copied or updated if supplied with the copy
request.

Add tests for x-fresh-metadata treatment.

Closes-Bug: #1391826
Closes-Bug: #1600247
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Change-Id: I917fb0b4e831c13e04ade1c5e0b9821802dec967"
slokesh184,2016-07-20 13:49:29,https://api.github.com/repos/openstack/swift/git/commits/26d91f2b1006a3affff963d6aa8d0d0ced134723,26d91f2b1006a3affff963d6aa8d0d0ced134723,"Python3 eventlet patched httplib _MAXHEADERS

This change patches the correct eventlet monkey patched httplib's
_MAXHEADERS as required by Swift.

It also makes the configparser inside the copy middleware py3
compatable.

Change-Id: I2f7dbcecbbecd7cb69b7031faa39f35bcfadcfc8"
notmyname,2016-07-20 18:09:35,https://api.github.com/repos/openstack/swift/git/commits/873331185713b2e2466456e8cfcdb02ec37ff955,873331185713b2e2466456e8cfcdb02ec37ff955,"Prevent CPU spinning when there are no children

If you deploy an object server but have no rings at all (and are using
servers-per-port), then the CPU will spin as it checks for child
processes since there are actually no child processes to check.

This patch adds a sleep so that the CPU doesn't spin.

Change-Id: Iece62367aa2481a21752144b1f4477a3713282fe"
slokesh184,2016-07-20 19:00:00,https://api.github.com/repos/openstack/swift/git/commits/49f250736d0d9fa0a0ff166caffcacc58d24fc1d,49f250736d0d9fa0a0ff166caffcacc58d24fc1d,"Python3 fixes generator object issue

Fixes generator' object has no attribute
'next' issues

Change-Id: I1f21eaed0ae7062073438503d3f6860d8b4f36c8"
tipabu,2016-07-20 17:59:25,https://api.github.com/repos/openstack/swift/git/commits/cdf505a50c107c14e626f308bd26eee9b4b9f305,cdf505a50c107c14e626f308bd26eee9b4b9f305,"Make swift-oldies py3-compatible

Change-Id: I0388f4738966bc453e922e9598ff9df60ecda4eb"
chengtcli,2016-07-19 09:25:22,https://api.github.com/repos/openstack/swift/git/commits/f33742127339a39c1b7bd9bf26f31c2cd9fbb341,f33742127339a39c1b7bd9bf26f31c2cd9fbb341,"Change assertTrue to assertEqual

In test_ringbuilder.py, there is one assertTrue should be
replaced with assertEqual.

Change-Id: I9a0e4a7363a5e16cc9b6df045953dfbb4f9dbd07
Closes-bug: #1604320"
clayg,2016-07-18 21:01:57,https://api.github.com/repos/openstack/swift/git/commits/cc0016399d78426dd4819fb97a508849194a7f4e,cc0016399d78426dd4819fb97a508849194a7f4e,"Remove red herring from logs

The object replicator can log some junk about the cluster ip instead
of the replication ip in some specific error log lines that can make
you think either you're crazy or your rings are crazy.

... in this case it was just the logging was crazy - so fix that.

Change-Id: Ie5cbb2d1b30feb2529c17fc3d72af7df1aa3ffdd"
cschwede,2016-07-17 14:31:06,https://api.github.com/repos/openstack/swift/git/commits/b5a16beb382de634b5ba31b3eeb461958d2eb407,b5a16beb382de634b5ba31b3eeb461958d2eb407,"Add missing recon metrics to admin_guide

Change-Id: Ibd484e088c915269a46f5fffe3ce627a80b3418e"
gaassassins,2016-07-15 18:38:14,https://api.github.com/repos/openstack/swift/git/commits/45bde710a92823cb96b79755a86fe6076cb06b32,45bde710a92823cb96b79755a86fe6076cb06b32,"Simplify chained comparison

For example: a < b and b <= c is equal to a < b <= c

Change-Id: I91ceb194bce60f6160ebdf0aadf0e8f0d7a35975"
gaborantal,2016-07-15 12:02:38,https://api.github.com/repos/openstack/swift/git/commits/e278179b082336fb0870ebccecf16c5d02e5ae0c,e278179b082336fb0870ebccecf16c5d02e5ae0c,"Use more specific asserts in functional tests

I changed asserts with more specific assert methods.
e.g.: from assertTrue(sth == None) to assertIsNone(*) or
assertTrue(isinstance(inst, type)) to assertIsInstace(inst, type) or
assertTrue(not sth) to assertFalse(sth).

The code gets more readable, and a better description will be shown on fail.

Change-Id: I80ec96e0b729bef38213a6be4ff4b6eb65c7612d"
gaborantal,2016-07-15 13:02:00,https://api.github.com/repos/openstack/swift/git/commits/75a58a6dd8ef439c613226b562eb3ab766d16c5e,75a58a6dd8ef439c613226b562eb3ab766d16c5e,"Use more specific asserts in test/unit/proxy tests

I changed asserts with more specific assert methods.
e.g.: from assertTrue(sth == None) to assertIsNone(*) or
assertTrue(isinstance(inst, type)) to assertIsInstace(inst, type)
or assertTrue(not sth) to assertFalse(sth).

The code gets more readable, and a better description will be shown on fail.

Change-Id: If6aad8681aab7c9a41d65a4f449d8abbe3e64616"
gaborantal,2016-07-15 12:46:41,https://api.github.com/repos/openstack/swift/git/commits/77d6d015f694eb4fdafc3b1ae6ff1caa9d0cbdb1,77d6d015f694eb4fdafc3b1ae6ff1caa9d0cbdb1,"Use more specific asserts in test/unit/common/ring

I changed asserts with more specific assert methods.
e.g.: from assertTrue(sth == None) to assertIsNone(*) or
assertTrue(isinstance(inst, type)) to assertIsInstace(inst, type)
or assertTrue(not sth) to assertFalse(sth).

The code gets more readable, and a better description will be shown on fail.

Change-Id: I9531c9939aa7c2dac127b5dc865b8d396dab318f"
bvancsics,2016-07-15 10:40:29,https://api.github.com/repos/openstack/swift/git/commits/5d02b9578e48a2eacc5111a73a399642eb28fe15,5d02b9578e48a2eacc5111a73a399642eb28fe15,"Reduce code duplication

Reduced source code by extracting duplicated code
(swift/cli/ringbuilder.py)

Change-Id: Ibd000df1dc9042e31b65b000199dff4a645e63b4"
tipabu,2016-07-13 16:31:39,https://api.github.com/repos/openstack/swift/git/commits/07a157f98e92948319b179b69b47e3e3d2e824b4,07a157f98e92948319b179b69b47e3e3d2e824b4,"Call out transient sysmeta in swift-object-info

This is similar to the separate output sections for sysmeta and user
meta.

Change-Id: Icc1fd86b2f7dcc085fee8ee94ec331290b530521"
notmyname,2016-07-10 17:00:09,https://api.github.com/repos/openstack/swift/git/commits/88238108f824e14fca8ca6adb3ec0e72df87fdf9,88238108f824e14fca8ca6adb3ec0e72df87fdf9,"authors and changelog updates for 2.9.0 release

Change-Id: I3c3e779227aad1df6abb517817355c6732e4a2af"
osanai-hisashi,2015-08-13 21:49:18,https://api.github.com/repos/openstack/swift/git/commits/88b14a0f803959ec5195d78a58b68dc2d5f30378,88b14a0f803959ec5195d78a58b68dc2d5f30378,"Add functional test for access control (RBAC INFO) with Keystone

This patch adds test cases for info requests to accounts, containers
and objects using various combinations of users/projects, roles and/or
service tokens.

Change-Id: Iece57b03a73b3cdf9762573678755f361e9b803e"
osanai-hisashi,2015-08-17 06:15:19,https://api.github.com/repos/openstack/swift/git/commits/5448a55e37c409c099c2e0b1dfaf7f0473cc85df,5448a55e37c409c099c2e0b1dfaf7f0473cc85df,"Add functional test for access control (container ACL) with Keystone

This patch adds test cases for requests to containers and objects using
various combinations of users/projects, roles in order to check container
ACL and referrer behavior.

Co-Authored-By: Keisuke Yamamoto <keisuk.yamamoto@jp.fujitsu.com>
Change-Id: I435655bc56e5088ba50a96a879a45c7e264e0d8d"
tipabu,2016-07-01 21:42:43,https://api.github.com/repos/openstack/swift/git/commits/6740a7badd795d2ccc477472581b56b628b96818,6740a7badd795d2ccc477472581b56b628b96818,"Add keymaster_config_path option to keymaster

Also, tighten up the format checks on root secrets.

Change-Id: I1cd9a97c4e8d87d7c065866e7ad3a9e748ff19ab"
osanai-hisashi,2015-07-14 06:13:06,https://api.github.com/repos/openstack/swift/git/commits/5cd57dc3572bccd443d74d0e18ea64a221073dac,5cd57dc3572bccd443d74d0e18ea64a221073dac,"Improve Keystone v3 token support

Now keystoneauth uses HTTP_X_TENANT_NAME/ID only even if v3 token uses for
backward compatibility. There is no problem with current behavior because
keystonemiddleware set same value on the headers but the headers are
specified as deprecated so this patch allows to support HTTP_X_PROJECT_NAME/ID
in addition to HTTP_X_TENANT_NAME/ID.

Change-Id: Ie5e02067a59e18f1ac215f51429863bdd42f729f"
chengtcli,2016-07-10 12:33:05,https://api.github.com/repos/openstack/swift/git/commits/5817f00005d2c1761499c3d6e5e0d428ef238c77,5817f00005d2c1761499c3d6e5e0d428ef238c77,"make 0 be avaiable value of options

value 0 is regard as not available by swift-ring-builder
$ swift-ring-builder testring add --region 0 --zone 1
--ip 127.0.0.2 --port 6000 --device sdb --weight 100

Required argument -r/--region not specified.
The on-disk ring builder is unchanged.

this patch is to make value 0 available.

Change-Id: Id941d44d8dbfe438bf921ed905908b838c88a644
Closes-bug: #1547137"
tipabu,2016-07-07 18:00:05,https://api.github.com/repos/openstack/swift/git/commits/9890184ea9378fbba1cb76e861f5a20bdd36b7c9,9890184ea9378fbba1cb76e861f5a20bdd36b7c9,"Turn on H233 and start using print function

As much as anything, I'm just tired of seeing a bunch or piecemeal
fixes.

Note that we *need* to include

   from __future__ import print_function

in order to support things like

   print()  # Would print ""()"" (the repr of an empty tuple) otherwise
   print(foo, end='')  # Would SyntaxError
   print(bar, file=sys.stderr)  # Would SyntaxError

Change-Id: I8fdf0740e292eb1ee785512d02e8c552781dcae1"
alistairncoles,2016-07-01 13:39:35,https://api.github.com/repos/openstack/swift/git/commits/ffaef489c6d1420ba6f4baf50b8fe84aa3d86319,ffaef489c6d1420ba6f4baf50b8fe84aa3d86319,"Add encrypter and decrypter links to middleware.rst

Drive-by fix for crypto filter_factory test.

Add note to encryption doc to highlight that root secret
should not be changed (follow up on earlier review comment).

Co-Authored-By: Tim Burke <tim.burke@gmail.com>

Change-Id: I9776cddd4d045408325342983e285a00c992bfae"
vstinner,2016-06-29 07:30:34,https://api.github.com/repos/openstack/swift/git/commits/c21375227165077d48bb7ef4e64a11f46d68b696,c21375227165077d48bb7ef4e64a11f46d68b696,"Update dnspython to 1.14

dnspython 1.14 adds Python 3 support and so can now be used on Python
2 and Python 3. Drop dnspython3 dependency.

Change-Id: I0a860b03800aeeed4375f528e6bf9cca57129db7"
vstinner,2016-06-23 11:40:42,https://api.github.com/repos/openstack/swift/git/commits/dcee7028019b89703fb5e25dd59fdb6fd882129a,dcee7028019b89703fb5e25dd59fdb6fd882129a,"Python 3: fix urllib import

Replace urllib.quote import with six.moves.urllib.parse.quote, so the
code works on Python 2 and Python 3.

Change-Id: I17e9cd9668661b6a67f33db83e0cbfc8ea6e3ca6"
tipabu,2016-07-07 17:58:58,https://api.github.com/repos/openstack/swift/git/commits/da317f01c6aeece5c4c4bccb49972a84a3b5580f,da317f01c6aeece5c4c4bccb49972a84a3b5580f,"Run flake8 against scripts in bin

Just having a `flake8 --filename=swift* bin` command is insufficient.

Change-Id: Ia2a5c364e52d9972d31e6b5e22366503894b720d"
ntata,2016-07-07 21:24:52,https://api.github.com/repos/openstack/swift/git/commits/6f230c7ea0ffd3b0b85c4bf5701e57e0f9fb1570,6f230c7ea0ffd3b0b85c4bf5701e57e0f9fb1570,"Fixed inconsistent naming conventions

Fixed naming conventions of Keystone, Swift and proxy servers in
the docs.

Change-Id: I294afd8d7bffa8c1fc299f5812effacb9ad08910"
tipabu,2016-06-23 19:22:02,https://api.github.com/repos/openstack/swift/git/commits/b6be925cf59e0cf719307cbcdda876c8d135eda5,b6be925cf59e0cf719307cbcdda876c8d135eda5,"Tighten memcached tests

Check flags set and key used; stop relying on dict.values()

Change-Id: Ibf9228dabd66ae98fb3b64050ccd46f5032d0df9"
alistairncoles,2016-07-07 17:35:48,https://api.github.com/repos/openstack/swift/git/commits/bfc8c59a08954f57d8f64ca66db9a1ba72207710,bfc8c59a08954f57d8f64ca66db9a1ba72207710,"Add encryption package requirements to SAIO instructions

libssl-dev/openssl-devel are already listed in other-requirements.txt;
add them to installation instructions in the SAIO docs.

Change-Id: I3dc07213ff8dac1299d3eb68d3448a77e15c79af"
gaassassins,2016-07-07 17:13:03,https://api.github.com/repos/openstack/swift/git/commits/008a037a3611734c2ba43c9aa0fe413bf5a2fa42,008a037a3611734c2ba43c9aa0fe413bf5a2fa42,"Another amendment with missing parenthesis

TrivialFix

Change-Id: Id44ae27bc39ea97be9eb092f8a99a06056b86392"
alistairncoles,2016-06-08 14:33:22,https://api.github.com/repos/openstack/swift/git/commits/a53b12a62c0da2a654d13a26f75c7dc214c13e6a,a53b12a62c0da2a654d13a26f75c7dc214c13e6a,"Don't encrypt update override etags for empty object

Fix an anomaly where object metadata for an empty object has no
encrypted etag, but if the encrypter received a container update
override etag in footers or headers then it would encrypt that,
so we'd have encrypted metadata in the container listing but not
in the object metadata. (Empty object etags are not encrypted
because the object content is revealed by its size anyway).

This patch changes the override handling to not encrypt override
etags that correspond to an empty object, with one exception: if
for some reason the received override etag value is that of an empty
string but there *was* an object body, then we'll encrypt the
override etag, because it's value is not obvious from the object
size.

Change-Id: I8d7da34d6d98f351f59174883bc4d5ed0416c101"
alistairncoles,2016-07-07 10:31:31,https://api.github.com/repos/openstack/swift/git/commits/ca2f6d13b6aa79d5e3c184955280b4a3ea17cd7d,ca2f6d13b6aa79d5e3c184955280b4a3ea17cd7d,"Fix unicode errors in object controller logging

Change swift.proxy.server.Application.error_occurred()
to decode message as utf-8 in same way that the
exception_occurred() method was changed in [1].

This prevents a unicode error when logging error responses
in swift.proxy.controllers.base.Controller._make_request()
for paths that have non-ascii characters. Although the unicode
error is currently caught by a surrounding except clause, the
logging and error limiting treatment is different for ascii
vs non-ascii paths. This patch makes them consistent.

Fix the server type reported in _make_request() to be
the correct server type, not always 'Container Server'.

Fix path arg passed to _get_conn_response in
swift.proxy.controllers.obj.BaseObjectController to be req.path
rather than req.

Add unit tests for error_occurred() being called with non-ascii
paths and extend tests for exception_occurred() (see Related-Bug).

[1] Change-Id: Icb7284eb5abc9869c1620ee6366817112d8e5587

Related-Bug: #1597210
Change-Id: I285499d164bff94835bdddb25d2af6d73114c281"
cschwede,2016-06-07 10:35:18,https://api.github.com/repos/openstack/swift/git/commits/e5a6d458829b367ecc16af54a44f629cb1fdcd68,e5a6d458829b367ecc16af54a44f629cb1fdcd68,"Add ringbuilder tests for --yes option

Also added a Timeout class to test.unit to wrap possible long-running
functions. For example, if there is some regression and the ""--yes""
argument is no longer evaluated correctly and the test excepts some
keyboard input, it will be terminated after a few seconds to ensure
there is no long-running blocker on the gate.

Change-Id: I07b17d21d5af7fcc594ce5319ae2b6f7f58df4bb"
KazuhiroMiyahara,2016-07-07 12:28:07,https://api.github.com/repos/openstack/swift/git/commits/2be1d6a77e9fcd4c92d487ba7116407ec5389723,2be1d6a77e9fcd4c92d487ba7116407ec5389723,"Remove an unused variable from tests.py

The varialbe 'size' in TestFile.testMetadataNumberLimit is not used.
This patch remove the variable from the test.

Change-Id: I255a1dcee12bb6b8dec6ff26ed7edf93ab2acf64"
yuyafei,2016-07-07 10:27:21,https://api.github.com/repos/openstack/swift/git/commits/b53214e30b1fb19336b77a19982c84c2dc5dce7f,b53214e30b1fb19336b77a19982c84c2dc5dce7f,"Correct reraising of exception

When an exception was caught and rethrown, it should call 'raise'
without any arguments because it shows the place where an exception
occured initially instead of place where the exception re-raised.

Change-Id: I326dd8eaf221cbf3729beedaff81b416c59ae2e6"
pmkovar,2016-06-15 16:35:05,https://api.github.com/repos/openstack/swift/git/commits/cf8b93918cc8a46ebd9035028847d8009d362794,cf8b93918cc8a46ebd9035028847d8009d362794,"Add install-guide for swift

This adds swift-specific contents from the OpenStack Installation Guide
in the swift repo per [1]. A separate change will remove the swift contents
from the OpenStack Installation Guide for Newton per [2].

The swift install-guide structure is based on the Install Guide
Cookiecutter [3].

Also adds tox.ini environment for install-guide and adds
openstackdocs-theme to test-requirements.txt.

[1] http://specs.openstack.org/openstack/docs-specs/specs/newton/project-specific-installguides.html
[2] http://specs.openstack.org/openstack/docs-specs/specs/newton/installguide.html
[3] http://git.openstack.org/cgit/openstack/installguide-cookiecutter/

Change-Id: I59b92eebaf5acc657b97bcf10d9ff2cf2db05885
Partially-Implements: blueprint projectspecificinstallguides
Depends-On: Ifebc65b188c4f2ba35b61c0deae5ec24401df7f9"
yuyafei,2016-07-05 07:04:24,https://api.github.com/repos/openstack/swift/git/commits/de51a6db36bcd965a7fa7505380100497ae3c66a,de51a6db36bcd965a7fa7505380100497ae3c66a,"Add __ne__ built-in function

In Python 3 __ne__ by default delegates to __eq__ and inverts the
result, but in Python 2 they urge you to define __ne__ when you
define __eq__ for it to work properly [1].There are no implied
relationships among the comparison operators. The truth of x==y
does not imply that x!=y is false. Accordingly, when defining
__eq__(), one should also define __ne__() so that the operators
will behave as expected.
[1]https://docs.python.org/2/reference/datamodel.html#object.__ne__

Also remove class SubStringMatcher becasue this class isn't used
following commit 7035639dfd239b52d4ed46aae50f78d16ec8cbfe.

Change-Id: Ia2131f72a79226b0c2f3662b84661eb870d1d692"
tipabu,2016-07-06 21:50:56,https://api.github.com/repos/openstack/swift/git/commits/bcd9a58d3c30ce554bfbe7fee5bc851e9feccaa0,bcd9a58d3c30ce554bfbe7fee5bc851e9feccaa0,"Fix X-*-Container-Update-Override-* header/footer precedence

Previously, all footer overrides (whether from the X-Backend-* or
X-Object-Sysmeta-* namespace) would take priority over any header
override.

However, middleware should be able to set a Sysmeta override without
needing to worry about whether it's working with a replicated policy
(where setting it in headers will suffice) or an EC policy (where it
would need to install a footers callback). This could be mitigated by
*always* installing a footer callback, but doing so would incur
additional overhead that would otherwise be unnecessary.

Change-Id: Idb40361ac72da51e1390dff690723dbc2c653a13"
clayg,2016-07-01 16:54:32,https://api.github.com/repos/openstack/swift/git/commits/a2afabf283811cdfd66b98add0df626008682ff8,a2afabf283811cdfd66b98add0df626008682ff8,"Add basic functests for user object metadata

Change-Id: I3c3b7d051a48449400e47e366461674bed9318c5"
gaassassins,2016-07-05 14:14:45,https://api.github.com/repos/openstack/swift/git/commits/aa12901edadb5da21d96e36cee2e8f4f7b8273be,aa12901edadb5da21d96e36cee2e8f4f7b8273be,"Added missing parenthesis in print calls

Upd. Import print_function from __future__
TrivialFix

Change-Id: Ibcda2c7e4ddbdff2420502dfd7d17db01f3c8056"
tipabu,2016-07-01 23:13:05,https://api.github.com/repos/openstack/swift/git/commits/3781843cb3b32598cf66a5455d9c61c259fe77fa,3781843cb3b32598cf66a5455d9c61c259fe77fa,"Fix gettext_ calls

Change-Id: I80e7d204f78620c6eaf63bfad18588c4096529b8"
briancline,2016-06-29 08:32:09,https://api.github.com/repos/openstack/swift/git/commits/7568ea5dd9f5a728f482076eeb8e612c31c88ce6,7568ea5dd9f5a728f482076eeb8e612c31c88ce6,"Prevent down nodes failing PUTs with non-ascii obj names

On an object PUT with a non-ascii name, if we hit some kind of
exception speaking to only one object-server of the N we try to
connect to, we try to log it -- but this causes an exception when
interpolating the UTF-8 encoded path iff the message template is
unicode.

Since this is essentially an exception within an exception handler,
this fails the entire request with a 500 error -- even though the
other nodes may have been just fine. This occurs before it attempts
a handoff node.

The simplest way to reproduce this is by running func tests against
a small cluster where one of the object nodes is not running

N.B. The locale of the node does not matter because the message
template is interpolated with node/device data from the Ring which is
always unicode because of json.

This includes an update to the FakeRing used by unittest
infrastructure to ensure that the FakeRing devices make a round-trip
through json to ensure consistent typing with real Rings.

Change-Id: Icb7284eb5abc9869c1620ee6366817112d8e5587
Closes-bug: #1597210"
tipabu,2016-07-05 17:24:02,https://api.github.com/repos/openstack/swift/git/commits/401311ff6a2ab93aca772e6be027e7098be5a906,401311ff6a2ab93aca772e6be027e7098be5a906,"Have py35 tox env match py34

Very few of our tests can actually be run under py3. The ones that can
should still pass on py35, though.

Change-Id: Iaf9aaa296e3b21aa0ee513c479a50f3796787f32"
tipabu,2016-06-30 21:32:35,https://api.github.com/repos/openstack/swift/git/commits/d60662b2eb46cdd5d5ec591435d11beafb66ca01,d60662b2eb46cdd5d5ec591435d11beafb66ca01,"Only use Timeout if we don't have a final_resp

I'm sure the Timeout context manager is relatively cheap, but it can't
be free.

Change-Id: I71c0c5944ec372e9b983021dd024de0c5aa1ded2"
yuyafei,2016-07-05 08:42:00,https://api.github.com/repos/openstack/swift/git/commits/f9d5a8683d0b5204157c5d97aa039056612d4347,f9d5a8683d0b5204157c5d97aa039056612d4347,"Remove white space between print and ()

TrivialFix

Change-Id: I0dca3493d43ee8642ae6d2f55597013eef261026"
tipabu,2016-06-30 21:26:15,https://api.github.com/repos/openstack/swift/git/commits/3fa742f4b70a3933346d94e10e9bd13184be3738,3fa742f4b70a3933346d94e10e9bd13184be3738,"Add sanity checks to strip_*meta_prefix functions

Change-Id: I05742ce34c28c3020cd241603965a60cbe2caf78"
alistairncoles,2016-07-01 07:27:49,https://api.github.com/repos/openstack/swift/git/commits/9045f338693474303f209a4909bca64031afbe9d,9045f338693474303f209a4909bca64031afbe9d,"Merge at-rest encryption feature into master

Co-Authored-By: Christian Cachin <cca@zurich.ibm.com>
Co-Authored-By: Mahati Chamarthy <mahati.chamarthy@gmail.com>
Co-Authored-By: Peter Chng <pchng@ca.ibm.com>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Jonathan Hinson <jlhinson@us.ibm.com>
Co-Authored-By: Samuel Merritt <sam@swiftstack.com>
Co-Authored-By: Janie Richling <jrichli@us.ibm.com>
Co-Authored-By: Hamdi Roumani <roumani@ca.ibm.com>
Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>

Change-Id: I1d8b030b9c8f81a232da5d6f93f442e46e331af2"
tipabu,2016-06-30 22:28:24,https://api.github.com/repos/openstack/swift/git/commits/c84a3c4d967a2951da50b395445e4a282b9debc4,c84a3c4d967a2951da50b395445e4a282b9debc4,"Stop digging for publicly_accessible ourselves

Also, make request method calling in obj.server consistent with change
3944d8 to account & container

Change-Id: I893d77a06793a5eeafac203a45971e96425afb96
Related-Change: I2f7586f96b41a97e6ae254efc83218b3b5c6cc9e"
alistairncoles,2016-06-07 14:08:54,https://api.github.com/repos/openstack/swift/git/commits/f36bc513c5e0029b90207d7a2dec81965eed8300,f36bc513c5e0029b90207d7a2dec81965eed8300,"Add encryption overview doc

Include a note in container-sync docs pointing to specific
configuration needed to be compatible with encryption.

Also remove the sample encryption root secret from
proxy-server.conf-sample and in-process test setup. Remove encryption
middleware from the default proxy pipeline.

Change-Id: Ibceac485813f3ac819a53e644995749735592a55"
tipabu,2016-06-30 21:36:39,https://api.github.com/repos/openstack/swift/git/commits/c9b4d54972587f5f72c8c15820a85433b279a0c5,c9b4d54972587f5f72c8c15820a85433b279a0c5,"Change elifs to ifs

John seemed to have some misgivings about using elif.

Change-Id: I39962607cf2a8f90353020f67979e92b48959dd6
Related-Change: I7732f13b06c8826537b8f8230a2785607790b8e1"
tipabu,2016-06-29 21:30:39,https://api.github.com/repos/openstack/swift/git/commits/6970099a76a8713da7744da40b462985b2c82a6a,6970099a76a8713da7744da40b462985b2c82a6a,"Fix intermittent bulk delete unit test failures

Change-Id: I0822b14d7b1ddae5fe0cc567c7cbaf544cb081ee
Closes-Bug: 1588414"
tipabu,2016-06-29 20:21:31,https://api.github.com/repos/openstack/swift/git/commits/57ac316b0324a50f2313a125e8ae6c582953a1bd,57ac316b0324a50f2313a125e8ae6c582953a1bd,"Fix intermittent SLO unit test failures

Now that we have concurrent deletes, the order is not guaranteed.

Change-Id: Ib833306a07ee0755a80501d5294eaa87b2347dc0"
tipabu,2016-06-29 19:22:22,https://api.github.com/repos/openstack/swift/git/commits/365171395ea10def59d40e7fcc4d0f18c51bbe7b,365171395ea10def59d40e7fcc4d0f18c51bbe7b,"Remove some unnecessary error handling in healthcheck

...as well as an unused class variable.

Change-Id: If1091f420b0bcf34c37e49b13f59b229e8deecc6"
zhengyao1,2016-06-24 09:34:26,https://api.github.com/repos/openstack/swift/git/commits/4a9f7378ec4d73c8bf16748e24bec45aa503b08e,4a9f7378ec4d73c8bf16748e24bec45aa503b08e,"make print python3 compatible

The print '' in python2 was supported. But in python3,
print '' was error. In python3, recommend using print()
instead. This patch will fix it.

Change-Id: I226461b0400023dc44238d9e5ee1ae2f2430de9e
Closes-Bug: #1595773"
alistairncoles,2016-06-06 17:38:50,https://api.github.com/repos/openstack/swift/git/commits/3ad003cf51151f8ce6dfc6c2c529206eda5f7b60,3ad003cf51151f8ce6dfc6c2c529206eda5f7b60,"Enable middleware to set metadata on object POST

Adds a new form of system metadata for objects.

Sysmeta cannot be updated by an object POST because
that would cause all existing sysmeta to be deleted.
Crypto middleware will want to add 'system' metadata
to object metadata on PUTs and POSTs, but it is ok
for this metadata to be replaced en-masse on every
POST.

This patch introduces x-object-transient-sysmeta-*
that is persisted by object servers and returned
in GET and HEAD responses, just like user metadata,
without polluting the x-object-meta-* namespace.
All headers in this namespace will be filtered
inbound and outbound by the gatekeeper, so cannot
be set or read by clients.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Janie Richling <jrichli@us.ibm.com>

Change-Id: I5075493329935ba6790543fc82ea6e039704811d"
cschwede,2016-06-27 12:18:43,https://api.github.com/repos/openstack/swift/git/commits/029c2782ddfd933af20b697c00a46b1375e0f23e,029c2782ddfd933af20b697c00a46b1375e0f23e,"Add swiftbackmeup to associated projects

Change-Id: I99f7a38d9b26605324408f1d200bf08da1e2772f"
liangjingtao,2016-06-24 03:50:20,https://api.github.com/repos/openstack/swift/git/commits/c953e84e28b9b17e16bde7dfbbbdabca7acded13,c953e84e28b9b17e16bde7dfbbbdabca7acded13,"Make string.letters PY3 compatible

String.letters are removed in py3,use string.ascii_letters instead.

Change-Id: I3c71b65b09b42dc954a3eb9e02894e5d3b12a3f4
Closes-Bug: #1595786"
tipabu,2016-06-23 17:46:27,https://api.github.com/repos/openstack/swift/git/commits/143b0eec92b723d11d5d1731ac2ae179e4d390e3,143b0eec92b723d11d5d1731ac2ae179e4d390e3,"MockMemcached cleanup

* Break sendall's switch into different functions
* Actually name some parameters
* Raise errors on unexpected input
* Consistently use tuples in self.cache

Change-Id: I93aa33f83cdf6943a43f14a1868b1497bc7f4478"
vstinner,2016-06-23 11:34:51,https://api.github.com/repos/openstack/swift/git/commits/b923e0f8928d70b23c894db8d2d24bdfdc6d283d,b923e0f8928d70b23c894db8d2d24bdfdc6d283d,"Python 3: dict.iteritems() and dict.itervalues()

* Replace dict.itervalues() with dict.values(). The Python 3 dict
  type has no itervalues() method, the old itervalues() method was
  renamed to values().
* Same change for dict.iteritems(), replaced with dict.items()
* Exception: use six.itervalues() to yield on sock_data_by_port

Using six.itervalues() and six.iteritems() would make the code less
readable. The overhead of creating a temporary list is considered as
negligible:
http://lists.openstack.org/pipermail/openstack-dev/2015-June/066391.html

Change-Id: Ifbe7faa16d419e7fe26f1fb464019b83c9171c45"
vstinner,2016-06-23 11:29:51,https://api.github.com/repos/openstack/swift/git/commits/a60096769c13ba8bd4c99a5ec516741f91305191,a60096769c13ba8bd4c99a5ec516741f91305191,"Python 3: Fix basestring, long and StringIO

* The basestring type was removed in Python 3: replace it with
  six.string_types.
* Replace StringIO.StringIO with six.StringIO
* Replace (int, long) with six.integer_types

Change-Id: Ic0d443b0bdd00fb18452e79ffae07b9be0fa8116"
alistairncoles,2016-06-06 17:16:11,https://api.github.com/repos/openstack/swift/git/commits/fa7d80029b53391a7877aeb6438c98a45bab42a7,fa7d80029b53391a7877aeb6438c98a45bab42a7,"Make container update override headers persistent

Whatever container update override etag is sent to the object server
with a PUT must be used in container updates for subsequent
POSTs. Unfortunately the current container update override headers
(x-backend-container-update-override-*) are not persisted with the
object metadata so are not available when handling a POST.

For EC there is an ugly hack in the object server to use the
x-object-sysmeta-ec-[etag,size] values when doing a container update
for a POST.

With crypto, the encryption middleware needs to override the etag
(possibly overriding the already overridden EC etag value) with an
encrypted etag value. We therefore have a similar problem that this
override value is not persisted at the object server.

This patch introduces a new namespace for container override headers,
x-object-sysmeta-container-update-override-*, which uses object
sysmeta so that override values are persisted. This allows a general
mechanism in the object server to apply the override values (if any
have been set) from object sysmeta when constructing a container
update for a PUT or a POST. Middleware should use the
x-object-sysmeta-container-update-override-* namespace when setting
container update overrides. Middleware should be aware that other
middleware may have already set container override headers, in which
case consideration should be given to whether any existing value should
take precedence.

For backwards compatibility the existing
x-backend-container-update-override-* style headers are still
supported in the object server for EC override values, and the ugly
hack for EC etag/size override in POST updates remains in the object
server. That allows an older proxy server to be used with an upgraded
object server. The proxy server continues to use the
x-backend-container-update-override-* style headers for EC values so
that an older object server will continue to work with an upgraded
proxy server.

x-object-sysmeta-container-update-override-* headers take precedence
over x-backend-container-update-override-* headers and the use of
x-backend-container-update-override-* headers by middleware is
deprecated.  Existing third party middleware that is using
x-backend-container-update-override-* headers should be modified to
use x-object-sysmeta-container-update-override-* headers in order to
be compatible with other middleware such as encryption and to ensure
that container updates during POST requests carry correct values. If
targeting multiple versions of Swift object servers it may be
necessary to send headers from both namespaces. However, in general it
is recommended to upgrade all backend servers, then upgrade proxy
servers before finally upgrading third party middleware.

Co-Authored-By: Tim Burke <tim.burke@gmail.com>

UpgradeImpact

Change-Id: Ib80b4db57dfc2d37ea8ed3745084a3981d082784"
ajaeger,2016-06-21 05:56:35,https://api.github.com/repos/openstack/swift/git/commits/c0217a4845e2ea780dc4dcb61877e604bc488729,c0217a4845e2ea780dc4dcb61877e604bc488729,"Update Sphinx version

The api-ref document needs a newer sphinx version, allow a 1.2 Sphinx
version to be used - like it's used in global-requirements.txt.

Change-Id: I9183cc56753fbe7e41206c6a9081899df5c3919a
Needed-By: Ifebc65b188c4f2ba35b61c0deae5ec24401df7f9"
notmyname,2016-06-17 19:24:57,https://api.github.com/repos/openstack/swift/git/commits/5885d97b7df787ccd64777174b59c48e6dbfaa06,5885d97b7df787ccd64777174b59c48e6dbfaa06,"added note to testFileSizeLimit functional test

Change-Id: I0323ff2511506c354db3416f1b37ede772acaedb"
orozery,2016-06-16 08:14:14,https://api.github.com/repos/openstack/swift/git/commits/da4a59f8e276e80764b58f9c52d6a3c2bca06782,da4a59f8e276e80764b58f9c52d6a3c2bca06782,"pickle_async_update should create tmp_dir

While creating a probe test for the expirer daemon, I found
the following error scenario:

1. Introduce a new object server. Initially it doesn't have a tmp_dir.
2. Have the object-replicator replicate some objects, one of them
    with an expiration (X-Delete-At).
3. Send a DELETE request for the expired object.

While beginning to process the DELETE request, the fresh
object server still doesn't have a tmp_dir created.
Since the object has an old expiration value, the object server
will first call ""delete_at_update"", before creating a tombstone.
delete_at_update then must create an async_pending,
which will lead to an IO error, since tmp_dir doesn't exist.

As said, I have witnessed this in practice in the probe test I wrote
at https://review.openstack.org/#/c/326903/.

This patch changes pickle_async_update behavior to create
tmp_dir, in case it doesn't exist.

Change-Id: I88b0e5f75a2a28d6880694ff327ac2763c816d24"
alistairncoles,2016-06-07 12:41:55,https://api.github.com/repos/openstack/swift/git/commits/928c4790ebce3782f42d239faa9758941a8dd296,928c4790ebce3782f42d239faa9758941a8dd296,"Refactor tests and add tests

Relocates some test infrastructure in preparation for
use with encryption tests, in particular moves the test
server setup code from test/unit/proxy/test_server.py
to a new helpers.py so that it can be re-used, and adds
ability to specify additional config options for the
test servers (used in encryption tests).

Adds unit test coverage for extract_swift_bytes and functional
test coverage for container listings. Adds a check on the content
and metadata of reconciled objects in probe tests.

Change-Id: I9bfbf4e47cb0eb370e7a74d18c78d67b6b9d6645"
bloodeagle40234,2016-06-14 07:52:24,https://api.github.com/repos/openstack/swift/git/commits/29b8d2da20bba3782b2182d01350f16e3db44263,29b8d2da20bba3782b2182d01350f16e3db44263,"Avoid docs warning: Duplicate explicit target name

When we add two (or more than) different links as same target name,
we need to set two underscore[1] instead of one. This avoids ""Duplicate
explicit target name"" warnings.

1:
http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#hyperlink-references

Change-Id: I8a493e7a1deeece33ee1b3fb3f5c848f3cc31d06"
smerritt,2016-06-14 23:10:16,https://api.github.com/repos/openstack/swift/git/commits/3944d820387f08372c1a29444f4af7d8e6090ae9,3944d820387f08372c1a29444f4af7d8e6090ae9,"Catch AttributeError less often

I always get tripped up when I'm editing code that catches
AttributeError and does something with it. I'll type ""req.emthod"" or
something, and next thing I know I'm getting 405s in all my unit
tests. This diff removes some places where we catch AttributeError
(sometimes, having deliberately thrown it only one line before) so
that typos can crash the way Guido intended.

Change-Id: I2f7586f96b41a97e6ae254efc83218b3b5c6cc9e"
cschwede,2016-06-07 11:27:56,https://api.github.com/repos/openstack/swift/git/commits/65a9a6d21b81a000effd911cab5613a3fa6a784e,65a9a6d21b81a000effd911cab5613a3fa6a784e,"Add simple multiple server type test

Ensures that swift-recon actually gathers data from multiple
server types if more than one is given on the command line.

Change-Id: I4017b82fb044265ec117df01e14968752df02201"
notmyname,2016-06-09 18:22:37,https://api.github.com/repos/openstack/swift/git/commits/7a50972104095478c91a477f5c5499dda4372711,7a50972104095478c91a477f5c5499dda4372711,"update .gitreview

Change-Id: I9593e453891c137fd430a44306e17268ba45fd12"
cschwede,2016-06-08 10:01:39,https://api.github.com/repos/openstack/swift/git/commits/f6b0b75a25ef970e8bad67f554c82df676e0d172,f6b0b75a25ef970e8bad67f554c82df676e0d172,"Make test_ringbuilder less brittle

If one has an object.builder file in the current directory and runs
test_ringbuilder, it will fail with an irritating error. That's because
test_use_ringfile_as_builderfile doesn't use self.tmpfile, but
object.builder - and that one might exist in the local directory.

This patch changes this, using self.tmpfile as argument name.

Closes-Bug: 1590356
Change-Id: I4b3287a36e8a5e469eb037128427dc7867910e53"
notmyname,2016-06-01 22:46:32,https://api.github.com/repos/openstack/swift/git/commits/88dbbe88bb8bc773171ebe1c94bfb821ca740e34,88dbbe88bb8bc773171ebe1c94bfb821ca740e34,"AUTHORS/CHANGELOG updates for 2.8.0 release

Change-Id: I0dba970b2970139bd9847d1abf74eed1a8a4996c"
bloodeagle40234,2015-07-02 07:35:02,https://api.github.com/repos/openstack/swift/git/commits/fcb6e4cd3aa6896976733c57c683592358e4c6f0,fcb6e4cd3aa6896976733c57c683592358e4c6f0,"Last-Modified header support on HEAD/GET container

This patch enables to show a x-put-timestamp as
a last-modified header in container-server.

Note that the last-modified header will be changed only when a
request for container (PUT container or POST container) comes into
Swift. i.e. some requests for objects (e.g. PUT object, POST object)
will never affect the last-modified value but only when using
python-swiftclient like as ""swift upload"", the last-modified will
be close to the upload time because python-swiftclient will make
a PUT container request for ""swift upload"" each time.

Change-Id: I9971bf90d24eee8921f67c02b7e2c80fd8995623"
sivakrishnan-intel,2016-02-19 21:54:12,https://api.github.com/repos/openstack/swift/git/commits/66c77e049dc60ec012fb34a45ef9531f11ea906a,66c77e049dc60ec012fb34a45ef9531f11ea906a,"Added unit test cases for cli/recon.py

Added unit test cases to cover code paths of umount_check
and async_check function.

Change-Id: I236d24b1b22ce244b3fb9546ff31223426edb8ed"
sivakrishnan-intel,2016-03-17 09:40:23,https://api.github.com/repos/openstack/swift/git/commits/6f78646ea2200fa2c5dd424589a6cae537f00deb,6f78646ea2200fa2c5dd424589a6cae537f00deb,"Add content-disposition header to tempurl request

Added content-disposition header to HEAD tempurl request.
As per HTTP docs[1] HEAD response must be identical to GET
except return message-body response.

[1]https://tools.ietf.org/html/rfc2616#section-9.4

Change-Id: Ie60a6fb632613055da5279db5b128ce5ee5172ae
Closes-Bug:#1539805"
tipabu,2016-06-02 16:49:32,https://api.github.com/repos/openstack/swift/git/commits/6b0e9a3e2464406743e01a3dd789d30c2bf81a2a,6b0e9a3e2464406743e01a3dd789d30c2bf81a2a,"Remove unused (but defaulted) args

Every time we call start_server, check is True.
Every time we call check_server, we use the default timeout.

Change-Id: Id38182f15bcbfbb145b57cee179a8fd47ec8e2b7"
bloodeagle40234,2016-06-02 06:53:35,https://api.github.com/repos/openstack/swift/git/commits/e56a1a550aace984c8ec4b422fc884ddc579d2d0,e56a1a550aace984c8ec4b422fc884ddc579d2d0,"pids in probe is no longer used

Change-Id: I1fd76004257a8c05ce8bb1f3ca0e45000509f833"
nelsonmarcos,2016-06-01 20:29:10,https://api.github.com/repos/openstack/swift/git/commits/daae74ca65d945d53c53718b8875322ffe9f9ac4,daae74ca65d945d53c53718b8875322ffe9f9ac4,"Adding sorting_method to admin_guide

Change-Id: I1162f154e3a577a95f9f5ea0e0f723b7df5a4baf"
fcantournet,2016-04-27 20:17:01,https://api.github.com/repos/openstack/swift/git/commits/4f053c61d6ea49cf566fd7d3d3b1000f2a7a62b5,4f053c61d6ea49cf566fd7d3d3b1000f2a7a62b5,"Fix swift-dispersion in multi-region setups

If you have 2 swift regions served by the same keystone,
then the client cannot get the correct URL for the swift endpoint
without specifying a region_name.

Closes-Bug: 1587088
Change-Id: Iaab883386e125c3ca6b9554389e63df17267a135"
notmyname,2016-05-31 18:27:43,https://api.github.com/repos/openstack/swift/git/commits/86e9e827bab7bedb529a467f217eb17b3b7e0967,86e9e827bab7bedb529a467f217eb17b3b7e0967,"add explicit HA info to the deployment guide

Change-Id: I7614952c523080fe50eaf839b54a8064439817ce"
onovy,2016-05-31 15:00:30,https://api.github.com/repos/openstack/swift/git/commits/a54095e562c2a14d48164d0ad48987cd6e85a379,a54095e562c2a14d48164d0ad48987cd6e85a379,"swift-ring-builder --yes option

This option assume a yes response to all questions. It is usefull for
scripts.

Change-Id: I28ca1a44507e0f1265afd36e6ac1e7c6c176428f"
onovy,2016-05-31 14:25:50,https://api.github.com/repos/openstack/swift/git/commits/5fe392b562de3baed080704df433fb392cb4fb31,5fe392b562de3baed080704df433fb392cb4fb31,"Fixed typo

Change-Id: I7a35c0076360c7a23cf405189828d3c252ec6708"
tipabu,2016-05-26 20:42:12,https://api.github.com/repos/openstack/swift/git/commits/a821dd42de1762e61a26ec9cac90976a9cd4e51f,a821dd42de1762e61a26ec9cac90976a9cd4e51f,"Don't include holes when reporting how many devices a ring has

Change-Id: I9b933051aec009c6108ee9d2dd5c0978772bf699"
clayg,2016-05-25 18:21:25,https://api.github.com/repos/openstack/swift/git/commits/b52eccb3b1ea0591f0040587228d3705b5d3f68d,b52eccb3b1ea0591f0040587228d3705b5d3f68d,"Clarify overload best practices in admin guide

Change-Id: Ib7c08bdeab6374771bb8e2b05053e7e16973524d"
cschwede,2016-05-25 07:53:31,https://api.github.com/repos/openstack/swift/git/commits/f1fd50723bb84c4941e949895576733f6eb67793,f1fd50723bb84c4941e949895576733f6eb67793,"Add dispersion --verbose example to admin guide

Change-Id: I5f9cacedde2a329332ccf744800b6f2453e8b28e"
matthewoliver,2016-05-25 04:35:54,https://api.github.com/repos/openstack/swift/git/commits/b3ab715c055283ccfea9a504d6da20741d82e7ad,b3ab715c055283ccfea9a504d6da20741d82e7ad,"Add ring-builder dispersion command to admin guide

This change updates the admin guide to point out the dispersion command
in swift-ring-builder and mentions the dispersion verbose table to make
it more obvious to operators.

Change-Id: I72b4c8b2d718e6063de0fdabbaf4f2b73694e0a4"
tipabu,2016-05-24 20:37:58,https://api.github.com/repos/openstack/swift/git/commits/fb7a8e9ab7596a36a6992a3a8f8c6d005a2c2829,fb7a8e9ab7596a36a6992a3a8f8c6d005a2c2829,"Add links to mitaka install guides

Change-Id: I62331923751c521daded4468b5cc5f03655226bc"
tipabu,2016-04-29 17:12:00,https://api.github.com/repos/openstack/swift/git/commits/e09c4ee7800e82aa09ca2f6ae375420b766182a4,e09c4ee7800e82aa09ca2f6ae375420b766182a4,"Allow concurrent bulk deletes

Before, server-side deletes of static large objects could take a long
time to complete since the proxy would wait for a response to each
segment DELETE before starting the next DELETE request.

Now, operators can configure a concurrency factor for the slo and bulk
middlewares to allow up to N concurrent DELETE requests. By default, two
DELETE requests will be allowed at a time.

Note that objects and containers are now deleted in separate passes, to
reduce the likelihood of 409 Conflict responses when deleting
containers.

Upgrade Consideration
=====================
If operators have enabled the bulk or slo middlewares and would like to
preserve the prior (single-threaded) DELETE behavior, they must add the
following line to their [filter:slo] and [filter:bulk] proxy config
sections:

   delete_concurrency = 1

This may be done prior to upgrading Swift.

UpgradeImpact
Closes-Bug: 1524454
Change-Id: I128374d74a4cef7a479b221fd15eec785cc4694a"
tipabu,2016-05-20 01:55:40,https://api.github.com/repos/openstack/swift/git/commits/226557afc42c245e050d84162497f46341407ef7,226557afc42c245e050d84162497f46341407ef7,"Turn on H703, so our translators don't punch us

Change-Id: I4ce3068f79563e4d4296c6e1078bc12f0cf84c96
Related-Bug: 1559431"
alistairncoles,2016-05-23 14:20:06,https://api.github.com/repos/openstack/swift/git/commits/7b706926a8ed5bbcec3a678e868e301c9a6ed8f1,7b706926a8ed5bbcec3a678e868e301c9a6ed8f1,"Fix setup of manifest responses in SLO tests

The swift_bytes param is removed from the content-type
in the proxy object controller, so the SLO unit tests should
not be registering GET responses with FakeSwift that have
swift_bytes appended to the content-type.

Nor should submanifest segment dicts have swift_bytes appended to
their content-type values.

Also adds a test for the object controller and container server
handling of SLO swift_bytes.

Change-Id: Icf9bd87eee25002c8d9728b16e60c8347060f320"
alistairncoles,2016-05-19 18:58:56,https://api.github.com/repos/openstack/swift/git/commits/d0ec1adb78b26f5c24312090796c69912e9e3da9,d0ec1adb78b26f5c24312090796c69912e9e3da9,"Make SLO manifest copies retain correct content-type

When copying an SLO manifest with multipart-manifest=get the actual
manifest content-type should get copied to the destination, rather
than the application/json value that is synthesised by SLO in a GET
response. That way the result of a HEAD on the copied manifest is the
same as a HEAD to the source, and the container listings for the two
are consistent.

This patch also un-skips a functional test and adds functional tests
that verify this patch and also verify that etags and size also get
correctly copied and updated in destination container (bug #1260446).

Closes-Bug: #1260446
Closes-Bug: #1583756

Change-Id: Ie7fa82f70b3ec3ef568f5355c69f6bce460ba25d"
briancline,2016-05-21 08:54:33,https://api.github.com/repos/openstack/swift/git/commits/1b7001adeb935893017ff2428291d7edf9470b6b,1b7001adeb935893017ff2428291d7edf9470b6b,"Improve linting for third-party middleware

Currently any third-party CI doing linting of their own middlewares
against the Swift codebase don't do so hot -- if they use swob's
Response.status_int in any way, the linter will fail because it only
gets set when status does.

This patch defaults it to None in the class definition, seeing as
a linter can't truly know that status_int will only be created lazily
at runtime, and further, that its existence is tied to setting
Response.status (via __init__ or setting the property directly).

I couldn't actually find a code path within Swift where we could end
up with a None when we access it; at init time, we default the status
code to 200, and there don't seem to be any code paths that init with
a None status code. (You might try, but you can't do that even today.)
As a result, this seems to have no ill effect on anything, but is a
huge help for linters.

This doesn't seem to break any unit tests, func tests via v1, v2, and
v3 auth, nor tempest tests via v2 or v3.

Change-Id: Id28fb56bc7133b9eb59df7989a71b892fd919643"
bloodeagle40234,2016-05-13 06:57:49,https://api.github.com/repos/openstack/swift/git/commits/14eb1803e931c5c501d99e612a6d59a57eccf464,14eb1803e931c5c501d99e612a6d59a57eccf464,"Fix probe failure and small things

This is follow up for https://review.openstack.org/#/c/283351/.

Probe fix:
- The probe in the patch now fails (sometimes success luckily)
  because inbound X-Timestamp is deprecated at the change,
  f581fccf71034818d19062593eeb52a4347bb174, so we can not use
  X-Timestamp to make an object with arbitrary timestamp anymore
  from outside of Swift. This patch makes the probe to use internal
  client to put the objects to make the inconsistent situation.

Small things:

- Enable expirer split brain test even if we have just one policy.
- FAIL rather than ERROR if the object was expired incorrectly
- ObjectBrainSplitter now uses the policy set at instance variable in
  default instead of random choice of ENABLED_POLICIES.

Co-Authored-By: Alistair Coles <alistair.coles@hpe.com>

Change-Id: I757dbb0f1906932ef5d508b48b4120f2794b3d07"
amoralej,2016-05-19 13:56:15,https://api.github.com/repos/openstack/swift/git/commits/9ae3ee5a8b6aa169e1f4179cee748c721f480229,9ae3ee5a8b6aa169e1f4179cee748c721f480229,"Fix locale directory in MANIFEST.in

Actual location is swift/locale, not locale.

This makes build to not include .mo files if they have been created
previously with compile_catalog.

Change-Id: I907e9bd6dde57cb9ed718656e56a313e82bad128
Closes-Bug: 1583618"
matthewoliver,2016-05-17 00:48:25,https://api.github.com/repos/openstack/swift/git/commits/876df35f847e607901e2ed8a344c71c607495705,876df35f847e607901e2ed8a344c71c607495705,"disable_fallocate also disables fallocate_reserve

Currently when disable_fallocate is true it disables calling the
fallocate syscall, but it doesn't disable fallocate_reserve. This
patch fixes this.

This problem has caused functional tests to fail in our SAIOs, since
SAIOs have disable_fallocate set but the fallocate_reserve space free
checking was still being run creating 507 responses. This is thanks
to the change in fallocate_reserve default changing from 0 to 1%.

Because fallocate_reserve and disable_fallocate causes SAIO functional
tests to fail a section called 'Known Issues' has been added to the
SAIO developer documentation which includes a warning about
using fallocate_reserve on SAIOs.

Change-Id: I727bfb0861ea26fe2f16ad55f4d36ae088864d8f"
alistairncoles,2016-05-17 13:22:05,https://api.github.com/repos/openstack/swift/git/commits/c1b1a5a0ee18776f035bee59e2faff58ec827b14,c1b1a5a0ee18776f035bee59e2faff58ec827b14,"Send correct size in POST async update for EC object

When a PUT request is made to an EC object the resulting container
update must include the override values for the actual object
etag and size, as opposed to the fragment etag and size. When a POST
request is made the same override values should be included in the
container update, but currently the update includes the incorrect EC
fragment size (but the correct body etag).

This is ok so long as the update for the object PUT request arrives at
the container server first (whether by direct update or replication)
because the etag and size values in an update due to an object POST
will not have a newer timestamp that the PUT and will therefore be
ignored at the container server.

However, if the update due to the object PUT request has not arrived
at the container server when the update due to the object POST
arrives, then the etag and incorrect size sent with the POST update
will be recorded in the container server. If the update due to the PUT
subsequently arrives it will not fix this error because the timestamp
of its etag and size values is not greater than that of the already
recorded values.

Fortunately the correct object body size is persisted with the object
as X-Backend-Container-Update-Override-Size sysmeta so this patch
fixes the container update due to a POST to use that value instead of
the Content-Length metadata.

Closes-Bug: #1582723
Change-Id: Ide7c9c59eb41aa09eaced2acfd0700f882c6eab1"
tipabu,2016-04-27 18:31:11,https://api.github.com/repos/openstack/swift/git/commits/2744492f30c758a4f076e2b30eaaf1e2e7fa586c,2744492f30c758a4f076e2b30eaaf1e2e7fa586c,"Use the same key for memcache and env['swift.infocache']

When we were caching directly to the WSGI environment, it made sense to
have different keys for the different caches. Now that we have a
separate data structure for the per-request cache, however, we ought to
be consistent.

Change-Id: I199cba6e5fc9ab4205bba369e6a2f34fc5ce22d4"
andymcc,2016-05-12 14:46:24,https://api.github.com/repos/openstack/swift/git/commits/efdf123a402b373a2d572e777f535c21241b4bb8,efdf123a402b373a2d572e777f535c21241b4bb8,"[Docs] Document prevention of disk full scenarios

Adds section to detail how to prevent disk full scenarios from
occurring.

Change-Id: Iafb4a47fa4892f6067252f3a80de87cd76506a40"
venkatamahesh,2016-05-15 15:57:46,https://api.github.com/repos/openstack/swift/git/commits/4248123169f88bf62dbc5413ae2c15d53010482e,4248123169f88bf62dbc5413ae2c15d53010482e,"Remove the invalid project link

swiftsync project is no longer maintained and so
is removed from the list

Change-Id: Ieae67c728da16e5516babd33d2e5937b14738d6a
Closes-Bug: #1581975"
smerritt,2016-02-11 23:51:45,https://api.github.com/repos/openstack/swift/git/commits/1c88d2cb818cec07d12ac17be5820cdd769aea5d,1c88d2cb818cec07d12ac17be5820cdd769aea5d,"Fix up get_account_info and get_container_info

get_account_info used to work like this:

  * make an account HEAD request

  * ignore the response

  * get the account info by digging around in the request environment,
    where it had been deposited by elves or something

Not actually elves, but the proxy's GETorHEAD_base method would take
the HEAD response and cache it in the response environment, which was
the same object as the request environment, thus enabling
get_account_info to find it.

This was extraordinarily brittle. If a WSGI middleware were to
shallow-copy the request environment, then any middlewares to its left
could not use get_account_info, as the left middleware's request
environment would no longer be identical to the response environment
down in GETorHEAD_base.

Now, get_account_info works like this:

  * make an account HEAD request.

  * if the account info is in the request environment, return it. This
    is an optimization to avoid a double-set in memcached.

  * else, compute the account info from the response headers, store it
    in caches, and return it.

This is much easier to think about; get_account_info can get and cache
account info all on its own; the cache check and cache set are right
next to each other.

All the above is true for get_container_info as well.

get_info() is still around, but it's just a shim. It was trying to
unify get_account_info and get_container_info to exploit the
commonalities, but the number of times that ""if container:"" showed up
in get_info and its helpers really indicated that something was
wrong. I'd rather have two functions with some duplication than one
function with no duplication but a bunch of ""if container:"" branches.

Other things of note:

  * a HEAD request to a deleted account returns 410, but
    get_account_info would return 404 since the 410 came from the
    account controller *after* GETorHEAD_base ran. Now
    get_account_info returns 410 as well.

  * cache validity period (recheck_account_existence and
    recheck_container_existence) is now communicated to
    get_account_info via an X-Backend header. This way,
    get_account_info doesn't need a reference to the
    swift.proxy.server.Application object.

  * both logged swift_source values are now correct for
    get_container_info calls; before, on a cold cache,
    get_container_info would call get_account_info but not pass along
    swift_source, resulting in get_account_info logging ""GET_INFO"" as
    the source. Amusingly, there was a unit test asserting this bogus
    behavior.

  * callers that modify the return value of get_account_info or of
    get_container_info don't modify what's stored in swift.infocache.

  * get_account_info on an account that *can* be autocreated but has
    not been will return a 200, same as a HEAD request. The old
    behavior was a 404 from get_account_info but a 200 from
    HEAD. Callers can tell the difference by looking at
    info['account_really_exists'] if they need to know the difference
    (there is one call site that needs to know, in container
    PUT). Note: this is for all accounts when the proxy's
    ""account_autocreate"" setting is on.

Change-Id: I5167714025ec7237f7e6dd4759c2c6eb959b3fca"
smerritt,2016-01-21 21:19:30,https://api.github.com/repos/openstack/swift/git/commits/ce90a1e79e16472ff75d205c8d907a5991888b3a,ce90a1e79e16472ff75d205c8d907a5991888b3a,"Make info caching work across subrequests

Previously, if you called get_account_info, get_container_info, or
get_object_info, then the results of that call would be cached in the
WSGI environment as top-level keys. This is okay, except that if you,
in middleware, copy the WSGI environment and then make a subrequest
using the copy, information retrieved in the subrequest is cached
only in the copy and not in the original. This can mean lots of extra
trips to memcache for, say, SLO validation where the segments are in
another container; the object HEAD ends up getting container info for
the segment container, but then the next object HEAD gets it again.

This commit moves the cache for get_*_info into a dictionary at
environ['swift.infocache']; this way, you can shallow-copy the request
environment and still get the benefits from the cache.

Change-Id: I3481b38b41c33cd1e39e19baab56193c5f9bf6ac"
smerritt,2016-05-04 19:02:07,https://api.github.com/repos/openstack/swift/git/commits/30e39cc9fa6353be37cd3b5a515f09b42ceb3b20,30e39cc9fa6353be37cd3b5a515f09b42ceb3b20,"Skip SLO-reconciling probe test when SLO is off

The probe test in question tries to make a manifest referencing
unavailable objects and expects that to fail with a 400. If the SLO
middleware is enabled, then it checks the segments, can't find some,
and returns the 400. If it's disabled, the PUT succeeds and makes an
object whose contents are some JSON blob. In the latter case, the
probe test would fail because it expected a real SLO manifest but
didn't find one.

Now we skip the remainder of the test when we detect that SLO is not
enabled.

Change-Id: I3e7e8e98107608e675efc24156e703bc167458bb"
bloodeagle40234,2016-05-13 01:57:31,https://api.github.com/repos/openstack/swift/git/commits/721c788b9a0ceb22ffac0b2c797890898096a9f4,721c788b9a0ceb22ffac0b2c797890898096a9f4,"Import BrainSpliter directly in expirer probe

Change-Id: Ib3cfe38d1b17c09c7248b5cbcfe4e2eadff7acd9"
smerritt,2016-04-22 21:55:35,https://api.github.com/repos/openstack/swift/git/commits/6834547f668a4649f5a42b8a4edc43b844fd6bbe,6834547f668a4649f5a42b8a4edc43b844fd6bbe,"Clean up fallocate tests a little

Change-Id: I01f1ad8ef0f8910718fd2fb30c9e8285358baf84"
alistairncoles,2016-05-12 13:57:56,https://api.github.com/repos/openstack/swift/git/commits/b430c384db38ea1153f52d0accf0561dac1378a6,b430c384db38ea1153f52d0accf0561dac1378a6,"Put back missing sysmeta unit tests

We lost some unit tests from test_sysmeta.py in [1].
This patch restores them. Since the proxy no longer
implements post-as-copy or COPY then we need to plumb
in a copy middleware to the test app in test_sysmeta.

It is a little odd perhaps to have these tests under
test/unit/proxy but the alternative is to duplicate
the test setup and base test code that already exists
in test_sysmeta.py into test_copy.py.

[1] commit 46d61a4dcd9a5d9157625c06d6fe7d916e80c3d2
    (server side copy middleware)

Change-Id: Iec02387ccbddbe3841a417880389c707cd5c0346"
zioproto,2016-05-12 13:30:17,https://api.github.com/repos/openstack/swift/git/commits/ce022f4417e973215b563412b504a8a1b9ce240c,ce022f4417e973215b563412b504a8a1b9ce240c,"README: fix broken link

There is a broken link to CONTRIBUTING.rst
introduced in commit a829bd59770681f9d6c1ef02a6e1d5e441587a23

Change-Id: Iaedf5ff3995229cf292202793809080f9f2c7fed"
cschwede,2016-04-11 09:56:07,https://api.github.com/repos/openstack/swift/git/commits/9729bc83eb6845e65f8244b4104b2c1678f8fe38,9729bc83eb6845e65f8244b4104b2c1678f8fe38,"Don't delete misplaced dbs if not replicated

If one uses only a single replica and a database file is placed on a
wrong partition, it will be removed instead of replicated to the correct
partition.

There are two reasons for this:
1. The list of nodes is empty when there is only a single replica
2. all(responses) is True even if there is no response at all, and the
latter is always True if there is no node to replicate to.

This patch fixes this by adding a special case if used with only one
replica to the node selection loop and ensures that the list of
responses is not empty.  Also adds a test that fails on current master
and passes with this change.

Closes-Bug: 1568591

Change-Id: I028ea8c1928e8c9a401db31fb266ff82606f8371"
ajaeger,2016-03-28 16:21:22,https://api.github.com/repos/openstack/swift/git/commits/92274d479010f691004b1885e354224dc9c3b61c,92274d479010f691004b1885e354224dc9c3b61c,"List system dependencies for running common tests

Add an other-requirements.txt file containing a cross-platform list of
dependencies needed for running included tox-based tests. Also include a
tox environment for convenience calling the bindep[*] utility to list
any missing system requirements.

Document bindep and other-requirements usage.

This change is self-testing.

For other-requirements.txt see also
http://docs.openstack.org/infra/manual/drivers.html#package-requirements

[*] http://docs.openstack.org/infra/bindep/

Change-Id: Iea6f5fecba3b7cb9f6dac7029c0f17fc31fc0e3c"
tipabu,2016-05-12 02:54:47,https://api.github.com/repos/openstack/swift/git/commits/ad16e2c77bb61bdf51a7d3b2c258daf69bfc74da,ad16e2c77bb61bdf51a7d3b2c258daf69bfc74da,"Stop complaining about auditor_status files

Following fd86d5a, the object-auditor would leave status files so it
could resume where it left off if restarted. However, this would also
cause the object-reconstructor to print warnings like:

  Unexpected entity in data dir: u'/srv/node4/sdb8/objects/auditor_status_ZBF.json'

...which isn't actually terribly useful or actionable. The auditor will
clean it up (eventually); the operator doesn't have to do anything.

Now, the reconstructor will specifically ignore those status files.

Change-Id: I2f3d0bd2f1e242db6eb263c7755f1363d1430048"
prashanthpai,2015-02-18 06:29:31,https://api.github.com/repos/openstack/swift/git/commits/46d61a4dcd9a5d9157625c06d6fe7d916e80c3d2,46d61a4dcd9a5d9157625c06d6fe7d916e80c3d2,"Refactor server side copy as middleware

Rewrite server side copy and 'object post as copy' feature as middleware to
simplify the PUT method in the object controller code. COPY is no longer
a verb implemented as public method in Proxy application.

The server side copy middleware is inserted to the left of dlo, slo and
versioned_writes middlewares in the proxy server pipeline. As a result,
dlo and slo copy_hooks are no longer required. SLO manifests are now
validated when copied so when copying a manifest to another account the
referenced segments must be readable in that account for the manifest
copy to succeed (previously this validation was not made, meaning the
manifest was copied but could be unusable if the segments were not
readable).

With this change, there should be no change in functionality or existing
behavior. This is asserted with (almost) no changes required to existing
functional tests.

Some notes (for operators):
* Middleware required to be auto-inserted before slo and dlo and
  versioned_writes
* Turning off server side copy is not configurable.
* object_post_as_copy is no longer a configurable option of proxy server
  but of this middleware. However, for smooth upgrade, config option set
  in proxy server app is also read.

DocImpact: Introducing server side copy as middleware

Co-Authored-By: Alistair Coles <alistair.coles@hpe.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>

Change-Id: Ic96a92e938589a2f6add35a40741fd062f1c29eb
Signed-off-by: Prashanth Pai <ppai@redhat.com>
Signed-off-by: Thiago da Silva <thiago@redhat.com>"
alistairncoles,2016-03-09 10:48:54,https://api.github.com/repos/openstack/swift/git/commits/ba1a568f815a8a40bf75c0beb96b789bd07adcb6,ba1a568f815a8a40bf75c0beb96b789bd07adcb6,"Rename hash_cleanup_listdir tests

hash_cleanup_listdir was removed in [1], this patch
renames all references to it in test_diskfile to refer to
the cleanup_ondisk_files method that is now tested directly.

Also remove the final references to the now non-existent
function in a few comments.

[1] I0b96dfde32b4c666eebda6e88228516dd693ef92

Change-Id: I1e151799fc2774de9a1af092afff875af24a630c
Related-Bug: #1550569"
notmyname,2016-04-05 18:35:22,https://api.github.com/repos/openstack/swift/git/commits/6827affe62771949a041d958db17ba6cd29232ab,6827affe62771949a041d958db17ba6cd29232ab,"Rework the contributor docs

This started as a new ""new_contributor"" doc. But we've already got
at least 3 different docs like that.

Change-Id: Ia2303ab55eeea01cc71acbccaeab55dad0ef5ff9"
smerritt,2016-05-04 23:48:28,https://api.github.com/repos/openstack/swift/git/commits/deaef2f9d62bb8ae7f4e8538e9fd9ddffbb8ebb2,deaef2f9d62bb8ae7f4e8538e9fd9ddffbb8ebb2,"Remove unneeded setting of SO_REUSEADDR.

This has been in eventlet.listen() since version 0.15.

Change-Id: Ib77b28231a2180f1ea082f356c4687c39681a6f7"
smerritt,2016-05-03 00:29:32,https://api.github.com/repos/openstack/swift/git/commits/99305b93000f28530731c05b34c69e0c7ce0463f,99305b93000f28530731c05b34c69e0c7ce0463f,"Fix probe tests from commit cf48e75

Commit cf48e75 changed the default account/container/object ports in a
lot of places, including the probetests. However, it didn't change
them in doc/saio/bin/remakerings, and since the probe tests must match
the rings, they started failing.

This commit just backs out the changes to the test/probe directory so
that remakerings and the probe tests match again.

Change-Id: I316a09e6ee1a911f37ce9df3d641644739f88eeb"
cschwede,2016-04-28 16:53:51,https://api.github.com/repos/openstack/swift/git/commits/4c11833a9cbff499725365e535e217f3eae3c442,4c11833a9cbff499725365e535e217f3eae3c442,"Remove ThreadPool class

With the removement of threads_per_disk there is no longer a need to use
run_in_thread() at all; it was just calling the function itself when
running with 0 threads.
Similar to force_run_in_thread() - with 0 threads it was basically doing
the same like in tpool_reraise(), therefore replacing the call and
finally removing the complete ThreadPool class.

Note that this might break external consumers that are inheriting
BaseDiskFileManager; in this case you need to adopt this change in your
codebase then.

Change-Id: I39489dd660935bdbfbc26b92af86814369369fb5"
kellerbr-ibm,2016-04-22 17:03:23,https://api.github.com/repos/openstack/swift/git/commits/33fdd0a356d83f12f63b9a94ff423ca815c96066,33fdd0a356d83f12f63b9a94ff423ca815c96066,"SwiftLogFormatter will log transaction IDs on INFO level

Previously SwiftLogFormatter would make two checks. One to see if the
transaction id was already in the message field and another check to
make sure the log level wasn't set to info. If either of these was
true, then it would not log the transaction ID in the transaction ID
field.

This commit removes the check for the info log. Now transaction IDs
will be recorded in all cases that have them.

Change-Id: Ic06538ab55a75d298169ae1745671573ee9c09e8
Closes-Bug: #1504344"
zqfan,2016-04-29 12:39:02,https://api.github.com/repos/openstack/swift/git/commits/c6ac69c552f87d07cd98b6e3f54258913bdc90db,c6ac69c552f87d07cd98b6e3f54258913bdc90db,"[Trivial] Remove unnecessary executable privilege

swift/common/storage_policy.py is not required to be executable.

Change-Id: I733d70a88be25b32d8caf590dee4c53d14757fef"
briancline,2016-04-29 10:00:36,https://api.github.com/repos/openstack/swift/git/commits/96c1838a15645639154f1048285d53a891809937,96c1838a15645639154f1048285d53a891809937,"Update mailmap, resolve identity crisis

Change-Id: Ia8e30a8c0f81068c259d5d08adad4f1a98460561"
briancline,2016-04-29 09:01:39,https://api.github.com/repos/openstack/swift/git/commits/a67d91987dff4859924aeaa3ca8fe30190b4c210,a67d91987dff4859924aeaa3ca8fe30190b4c210,"Fix minor typos in review guidelines

Change-Id: I3acb3daeacb784c4038bf54d4103fab66c52f41a"
cschwede,2016-04-28 17:06:24,https://api.github.com/repos/openstack/swift/git/commits/9d6a055b31f267e2380d0470021cac44cdf36203,9d6a055b31f267e2380d0470021cac44cdf36203,"Remove threads_per_disk setting

This patch removes the threads_per_disk setting. It was already a deprecated
setting and by default set to 0, which effectively meant to not use a per-disk
thread pool at all. Users are encouraged to use servers_per_port instead.

DocImpact

Change-Id: Ie76be5c8a74d60a1330627caace19e06d1b9383c"
zqfan,2016-04-27 22:29:41,https://api.github.com/repos/openstack/swift/git/commits/a1ed76f1cbb3dcd5b4253920278b8bc4f32978a2,a1ed76f1cbb3dcd5b4253920278b8bc4f32978a2,"Fix doc build if git is absent

When building packages if git is absent, then we should not set
html_last_updated_fmt. It can still be set via the -D switch
when building with sphinx-build.

Change-Id: I5d0b6cc87f27a052d6d0265546c0d347f00c4bb8
Closes-Bug: #1552251"
clayg,2016-03-03 06:08:12,https://api.github.com/repos/openstack/swift/git/commits/00dd89fe6936e4c2da667b496a9996638c26196b,00dd89fe6936e4c2da667b496a9996638c26196b,"adding review guidelines

Change-Id: I61304856a4ecccbbf3aa06c30822494592a3b3d5"
smerritt,2016-04-27 21:59:00,https://api.github.com/repos/openstack/swift/git/commits/29544a9e175b1ec9e0dbfd5288edc00a1402d5ca,29544a9e175b1ec9e0dbfd5288edc00a1402d5ca,"Use smaller quorum size in proxy for even numbers of replicas

Requiring 2/2 backends for PUT requests means that the cluster can't
tolerate a single failure. Likewise, if you have 4 replicas in 2
regions, requiring 3/4 on a POST request means you cannot POST with
your inter-region link down or congested.

This changes the (replication) quorum size in the proxy to be at least
half the nodes instead of a majority of the nodes.

Daemons that were looking for a majority remain unchanged. The
container reconciler, replicator, and updater still require majorities
so their functioning is unchanged.

Odd numbers of replicas are unaffected by this commit.

Change-Id: I3b07ff0222aba6293ad7d60afe1747acafbe6ce4"
tipabu,2016-01-07 23:46:17,https://api.github.com/repos/openstack/swift/git/commits/5e420efc728b9f02a3f15eb312ebfa29e2e221ff,5e420efc728b9f02a3f15eb312ebfa29e2e221ff,"Fix versioned_writes functional test skipping

Previously, if object versioning was enabled via the old-style
allow_versions container-server setting rather than the new-style
allow_versioned_writes proxy-server setting,
TestCrossPolicyObjectVersioning would skip tests while
TestObjectVersioning and TestObjectVersioningUTF8 would run them.

Additionally, if versioned_writes was explicitly included in the
proxy-server's pipeline and allow_versioned_writes was disabled,
the functional tests would fail with a 412.

Now, all three will use the same logic to check whether versioning is
enabled. Specifically, they will all try to set an X-Versions-Location
header and skip if it doesn't stick.

Additionally, the TestCrossPolicyObjectVersioningEnv will now properly
clean up after itself.

Change-Id: I4c788a0e18587ff17d3c6e346fd22b881495f06d"
avgoor,2016-04-07 20:07:13,https://api.github.com/repos/openstack/swift/git/commits/1a18079a15c2630e602c7c156a30e10e5f884d4b,1a18079a15c2630e602c7c156a30e10e5f884d4b,"Change pids' type to set

Previously, the pids type was list(), which raised a ValueError in case if
pid was not in pids during the pids.remove(pid) call. The fix changes
the type of pids to set() and substitutes remove() with discard(), which
doesn't raise an Exception if a value is not in the set.

Change-Id: I8d41cb2a8ec14d29e5c7411ddfe48ae7a41deb45
Closes-Bug: #1567638"
andymcc,2016-03-03 11:14:39,https://api.github.com/repos/openstack/swift/git/commits/0da9da513101c172d8923469e40f9c15b3518e73,0da9da513101c172d8923469e40f9c15b3518e73,"Allow fallocate_reserve to be a percentage

Add the ability to set the fallocate_reserve value as a percentage.
This happens automatically when adding the '%' at the end of the value.
Having the ability to set a % of free space rather than a byte value is
useful especially when drive sizes are heterogenous.

The default for fallocate_reserve has been adjusted to 1%, having the
fallocate_reserve set seems sensible for all deploys and percentages are
far safer to default than byte values (across drives of any size).

Tests added for using fallocate_reserve as a percentage.

Duplicate tests for fallocate_reserve have been removed.

Docs updated to reflect the fallocate_reserve change.

Change-Id: I4aea613a708205c917e81d6b2861396655e73238"
smerritt,2016-04-16 00:22:44,https://api.github.com/repos/openstack/swift/git/commits/ca304cd08e9f8d37e4027f2f71dd77ebba3a30f9,ca304cd08e9f8d37e4027f2f71dd77ebba3a30f9,"Ignore negative suffix-byte-range requests.

If the client asked for ""Range: bytes=--123"", Swift would respond with
a 206 and a Content-Length of -123. Now that Range header is ignored
just like all kinds of other invalid Range headers.

Change-Id: I30d4522d223076ce342d20c52f57ff0eb2aea1f4
Closes-Bug: 1571106"
tipabu,2016-04-15 23:08:26,https://api.github.com/repos/openstack/swift/git/commits/b12222548de012ed496fba70c3d12aa31f003e3d,b12222548de012ed496fba70c3d12aa31f003e3d,"Tighten up ResumingGetter.fast_forward

When the current range is a ""last N bytes"" request, properly raise
HTTPRequestedRangeNotSatisfiable/RangeAlreadyComplete errors.

Also, add a couple tests for RangeAlreadyComplete with ""normal"" range
requests.

Change-Id: Icbfd621e7160747c5dfaf9f189da7d74e45a5347"
smerritt,2016-04-15 03:01:38,https://api.github.com/repos/openstack/swift/git/commits/3bc33e59aaeefdb940794782a36517c2b4eb0642,3bc33e59aaeefdb940794782a36517c2b4eb0642,"Fix download resumption after getting no data.

When the proxy is handling an object GET response and an object server
fails to send data in a timely fashion, the proxy can pick up where it
left off with another object server; other than a pause in the
download, the client doesn't even know anything happened.

However, if the proxy received the GET response headers but no data,
it would resume at the wrong spot. In particular, for an N-byte
object, it would ask the second object server for the last N-1 bytes
(or equivalently, all but the first byte). For a replicated storage
policy, this would result in the client getting an abbreviated
download, while for an EC storage policy, the proxy would 500 after
trying to decode a fragment set with a bogus fragment in it.

This commit fixes the resumption logic to ask for all N bytes of the
object from the second object server.

Change-Id: Ib9e28c3dceaded1708e7a30844b534566c7a320c"
os-cloud-storage,2016-02-18 12:50:08,https://api.github.com/repos/openstack/swift/git/commits/c96d5c671db9c96f65067d93c0a307cf4b7d91b4,c96d5c671db9c96f65067d93c0a307cf4b7d91b4,"Per container stat. report

In addition to the container sync stat. report, keeping per container
statistics allows administrator with more control over bytes
transfered over a specific time per user account: The per container stats
are crucial for billing purposes and provides the operator a 'progress
bar' equivalent on the container's replication status.

Change-Id: Ia8abcdaf53e466e8d60a957c76e32c2b2c5dc3fa"
tipabu,2016-04-13 18:07:44,https://api.github.com/repos/openstack/swift/git/commits/fb3692c9bb662d9cadc4238920f86676857a7f1f,fb3692c9bb662d9cadc4238920f86676857a7f1f,"Don't include conditional headers in SLO HEAD requests

Previously, attempting to PUT a SLO manifest with `If-None-Match: *`
would include the header when validating the segments, causing the
upload to fail.

Now when SLO validates segments, no conditional headers will be
included in the HEAD request.

Change-Id: I03ad454092d3caa73d29e6d30d8033b45bc96136
Closes-Bug: #1569253"
notmyname,2016-04-13 16:57:45,https://api.github.com/repos/openstack/swift/git/commits/91f980314f305c536e6e7c8607b8b52693c865f5,91f980314f305c536e6e7c8607b8b52693c865f5,"fix fallocate_reserve traceback

Previously, fallocate_reserve could result in a traceback. The
OSError being raised didn't have the proper errno set. This patch
sets the errno to ENOSPC.

Change-Id: I017b0584972ca8832f3b160bbcdff335ae9a1aa6"
morrisson,2016-02-23 02:03:48,https://api.github.com/repos/openstack/swift/git/commits/22933f5b55d3b8ba13b19c7004d24dfd28378f32,22933f5b55d3b8ba13b19c7004d24dfd28378f32,"Fix bug expirer unexpectedly deletes object created after x-delete-at

As reported at bug/1546067, expirer might accidentally deletes an object
which is created after x-delete-at timestamp. This is because expirer
sends a request with ""X-Timestamp: <current_timestamp>"" and tombstone
is named as <requested_x_timestamp>.ts so if object creation time is
between x-delete-at and expirer's DELETE request x-timestamp, the object
might be hidden by tombstone.

This possibility can be simply removed if the value of x-timestamp which
an expirer sends is the same timestamp as x-delete-at of an actual object.
Namely, expirer pretends to delete an object at the time an user really
wants to delete it.

Change-Id: I53e343f4e73b0b1c4ced9a3bc054541473d26cf8
Closes-Bug: #1546067"
onovy,2016-04-09 16:47:58,https://api.github.com/repos/openstack/swift/git/commits/33f06dc48f7bec2e128b44427fb429ad640cd486,33f06dc48f7bec2e128b44427fb429ad640cd486,"Fixed Sphinx errors

doc/source/deployment_guide.rst:1372: ERROR: Malformed table.
swift/obj/diskfile.py:docstring of swift.obj.diskfile.BaseDiskFileManager.yield_hashes:13: ERROR: Unexpected indentation.
doc/source/ops_runbook/diagnose.rst:188: WARNING: Inline emphasis start-string without end-string.

Change-Id: Id20eb62eb5baebb3814e7af5676badb94f17dee5"
alistairncoles,2016-04-06 14:40:42,https://api.github.com/repos/openstack/swift/git/commits/d09ef0da62b64067b04a980c643f77526a9078ac,d09ef0da62b64067b04a980c643f77526a9078ac,"Assert that ChunkWriteTimouts are not raised

Follow up for change Ibbc89449e7878fc4215e47e3f7dfe4ae58a2d638
to add a test assertion that the ChunkWriteTimeout contexts are
exited without raising the timeout exception in
iter_bytes_from_response_part().

Change-Id: I6d323cb26779e457fb5940093a81b349b333a0af"
hnwolf,2016-04-07 06:31:26,https://api.github.com/repos/openstack/swift/git/commits/edc413b85ec2b703d7506be9c4801eb347611c58,edc413b85ec2b703d7506be9c4801eb347611c58,"Fix typos in Swift files

Change-Id: I39dbf55c094c42347b57ef67520abff9e6fc24bc"
smerritt,2016-03-23 20:51:47,https://api.github.com/repos/openstack/swift/git/commits/95efd3f9035ec4141e1b182516f040a59a3e5aa6,95efd3f9035ec4141e1b182516f040a59a3e5aa6,"Fix infinite recursion during logging when syslog is down

Change-Id: Ia9ecffc88ce43616977e141498e5ee404f2c29c4"
alistairncoles,2016-04-06 10:48:48,https://api.github.com/repos/openstack/swift/git/commits/5d56f40f04fa9211a2e392d667fe395f38d2cca5,5d56f40f04fa9211a2e392d667fe395f38d2cca5,"Make DirectClientException report correct ip and port

When direct_client.direct_get_suffix_hashes raises a
DirectClientException the exception message and variables
should report the replication_ip and replication_port, as
opposed to the ip and port values reported for all other
case when the exception is raised.

Add option to override ip and port reported in
DirectClientException.

Also adds unit tests to verify both cases.

Related-Bug: 1566395
Change-Id: If3d952847c7199f4e9f6164858085367266386d2"
bloodeagle40234,2015-12-21 11:13:50,https://api.github.com/repos/openstack/swift/git/commits/e15bceaa7e541c77f26a1f11ee2cbddbc871cbf1,e15bceaa7e541c77f26a1f11ee2cbddbc871cbf1,"Refactor CORS unit tests

This is a follow-up patch for https://review.openstack.org/#/c/258392/
That one added good unit test cases for various kinds of
allowe_origin like '*' or ''(empty). However, the result of handling
in Swift proxy will depend on strict_cors_mode option configuration.

This patch refactors the unit tests to split out for
strict_cors_mode = on/off and add some missing unit tests for
each case.

Change-Id: I55f7cd279436b5c9f71d81fecf06021380e35579"
sivakrishnan-intel,2016-04-05 22:45:17,https://api.github.com/repos/openstack/swift/git/commits/950b601a9c9e87661e35c6ed7a97ae9611560bc5,950b601a9c9e87661e35c6ed7a97ae9611560bc5,"Modified REPLICATE request to use replication_ip

direct_client.direct_get_suffix_hashes doesn't use replication ip and
port for REPLICATE request. Since we have an option of doing
replication in separate network, we can add replication_ip and port
while creating rings if not it will get filled in with the regular
node's ip.

Change-Id: I34067df27042fc3146b795191ab8043ee1aed3ce
Closes-Bug:1566395"
chengtcli,2016-04-03 13:07:00,https://api.github.com/repos/openstack/swift/git/commits/4e412e0cd877be0da2b2716a301d1ae2b4c29a13,4e412e0cd877be0da2b2716a301d1ae2b4c29a13,"Fix strings with positional arguments

As descriped in develop guideline,
Any message with more than one variable should use
named interpolation instead of positional
http://docs.openstack.org/developer/oslo.i18n/guidelines.html#adding-variables-to-translated-messages

Change-Id: Ia25517cfb52037cf49d0a6ebf528344267fb22cd
Closes-bug:#1559431"
to222,2016-04-01 14:37:25,https://api.github.com/repos/openstack/swift/git/commits/ee6af69af429e1a278581531e509be92774f668d,ee6af69af429e1a278581531e509be92774f668d,"[docs] Update Administrator Guide URL

Change-Id: I7f6f4ffb7033d2a321362c91e05f1576847939b0"
tipabu,2016-03-30 21:19:00,https://api.github.com/repos/openstack/swift/git/commits/ebf0b220127b14bec7c05f1bc0286728f27f39d1,ebf0b220127b14bec7c05f1bc0286728f27f39d1,"Fix upgrade bug in versioned_writes

Previously, versioned_writes assumed that all container servers would
always have the latest Swift code, allowing them to return reversed
listings. This could cause the wrong version of a file to be restored
during rolling upgrades.

Now, versioned_writes will check that the listing returned is actually
reversed. If it isn't, we will revert to getting the full (in-order)
listing of versions and reversing it on the proxy.

Change-Id: Ib53574ff71961592426cb386ef00a75eb5824def
Closes-Bug: 1562083"
hnwolf,2016-03-30 04:07:46,https://api.github.com/repos/openstack/swift/git/commits/59bbe27fb0a40236108f09c9b3349e8faef0a95c,59bbe27fb0a40236108f09c9b3349e8faef0a95c,"Fix typos in Swift files

Change-Id: I34e0c9a888127704ac1910e73ddd14e27ebade13"
tipabu,2016-02-12 00:00:38,https://api.github.com/repos/openstack/swift/git/commits/7be55acf1bc4aa07d81b30fd93e144700889898d,7be55acf1bc4aa07d81b30fd93e144700889898d,"Simplify policy-name validation slightly

_validate_policy_name always either returns True or raises an exception.
Simplify it to just being a callable that may raise an exception.

Also, move the check for blank/None names into _validate_policy_name, so
it will be applied in more cases.

Change-Id: I7832a0c9c895cd75ba4c6d0e8b5568a3c8a0ea25"
clayg,2016-03-24 23:42:21,https://api.github.com/repos/openstack/swift/git/commits/7402d7d9cf91ed00a9c86fc1511592ac2eed5d6c,7402d7d9cf91ed00a9c86fc1511592ac2eed5d6c,"Shutdown backend EC connection contexts on disconnect

When eventlet.wsgi closes an ECAppIter on client disconnect we need to
make sure our sub-iterators are also closed.  We already kill the
backend sockets, but the executing contexts are left running until
they timeout.  A slow client can result in needlessly holding queued
backend fragments until the client_timeout (default 60s).

Update associated test that exposed the problem to demonstrate the
issue more quickly.

Change-Id: Ibbc89449e7878fc4215e47e3f7dfe4ae58a2d638"
tipabu,2016-02-12 18:15:31,https://api.github.com/repos/openstack/swift/git/commits/03bf984e304278247fa253696a8edda71d785642,03bf984e304278247fa253696a8edda71d785642,"Add Expires header for successful GETs using tempurls

This allows caches to actually use the expiration time that's already
embedded in the URL.

From RFC 2616 [1]:

> [S]ince some applications have traditionally used GETs and HEADs with
> query URLs (those containing a ""?"" in the rel_path part) to perform
> operations with significant side effects, caches MUST NOT treat
> responses to such URIs as fresh unless the server provides an explicit
> expiration time.

However, RFC 7234 notes that this hasn't played out in practice [2]:

> Note: Section 13.9 of [RFC2616] prohibited caches from calculating
> heuristic freshness for URIs with query components (i.e., those
> containing '?').  In practice, this has not been widely implemented.
> Therefore, origin servers are encouraged to send explicit directives
> (e.g., Cache-Control: no-cache) if they wish to preclude caching.

[1] http://tools.ietf.org/html/rfc2616#section-13.9
[2] http://tools.ietf.org/html/rfc7234#section-4.2.2

Change-Id: Ie8f26b97a124ea220a20800e35e040e4463d82bc
Closes-Bug: 1502159"
lzbj,2016-03-24 08:08:19,https://api.github.com/repos/openstack/swift/git/commits/3407d737c705a7afedeed0159588ab4433a601f3,3407d737c705a7afedeed0159588ab4433a601f3,"Handle tempurl Content-Disposition header missing from HEAD

Content-Disposition headers should make no difference between
GET and HEAD according to HTTP rfc.

Closes-Bug: #1539805

Change-Id: Ifa41a7cda2f321eb8e36420ede7912ed0a549712"
alistairncoles,2016-03-23 20:49:50,https://api.github.com/repos/openstack/swift/git/commits/2f24fb9683a57b67348d65864d5af8c3a03dee67,2f24fb9683a57b67348d65864d5af8c3a03dee67,"Check marker params in SimpleClient full listing requests

Follow up for change [1] to add some assertions to check that
marker param is included in sequential GET requests sent during
a full listing.

Extract multiple FakeConn class definitions to single class at
module level and share between all classes.

Also, explicitly unpack the return values from base request calls
made in the full listing section of base_request, and explicitly
return a list to make more consistent with rest of the method.

[1] Change-Id: I6892390d72f70f1bc519b482d4f72603e1570163

Change-Id: Iad038709f46364b8324d25ac79be4317add79df5"
cschwede,2015-12-14 15:03:43,https://api.github.com/repos/openstack/swift/git/commits/a696c1e89ef1a1c7630c14bbdda3f6c8039bb05e,a696c1e89ef1a1c7630c14bbdda3f6c8039bb05e,"Fix full_listing in internal_client

The internal_client is used in swift-dispersion-report, and in case one has more
than 10000 containers or objects these are not queried.

This patch adds support to the internal_client to iterate over all
containers/objects if the listing exceeds the default of 10000 entries and the
argument full_listing=True is used.

Closes-Bug: 1314817
Closes-Bug: 1525995
Change-Id: I6892390d72f70f1bc519b482d4f72603e1570163"
notmyname,2016-03-22 05:03:34,https://api.github.com/repos/openstack/swift/git/commits/5d00ce9e3a1f5e32ae91c78b6bdfd953658ab984,5d00ce9e3a1f5e32ae91c78b6bdfd953658ab984,"2.7.0 authors and changelog updates

Change-Id: I16ad0c61b048921ca01fa96862ae7eea0eec6017"
cschwede,2016-03-21 09:52:23,https://api.github.com/repos/openstack/swift/git/commits/51bea3943f9eadb179dc7327d42dcb9062a3a8e5,51bea3943f9eadb179dc7327d42dcb9062a3a8e5,"Ignore files in the devices directory when auditing objects

The object auditor raises an exception if there are some files in
/srv/node (or any other defined ""devices"" directory). This change
simply skips any file in the devices directory when generating
locations for the object auditor.

Change-Id: I934594994adc577799723edb6c5648685682a9e7"
clayg,2016-03-16 00:09:21,https://api.github.com/repos/openstack/swift/git/commits/1d03803a85ca50272071725518c7110e1b2dacb1,1d03803a85ca50272071725518c7110e1b2dacb1,"Auditor will clean up stale rsync tempfiles

DiskFile already fills in the _ondisk_info attribute when it tries to open
a diskfile - even if the DiskFile's fileset is not valid or deleted.
During this process the rsync tempfiles would be discovered and logged,
but no-one would attempt to clean them up - even if they were really old.

Instead of logging and ignoring unexpected files when validate a DiskFile
fileset we'll add unexpected files to the unexpected key in the
_ondisk_info attribute.

With a little bit of re-organization in the auditor's object_audit method
to get things into a single return path we can add an unconditional check
for unexpected files and remove those that are ""old enough"".

Since the replicator will kill any rsync processes that are running longer
than the configured rsync_timeout we know that any rsync tempfiles older
than this can be deleted.

Split unlink_older_than in common.utils into two functions to allow an
explicit list of previously discovered paths to be passed in to avoid an
extra listdir.  Since the getmtime handling already ignores OSError
there's less concern of race condition where a previous discovered
unexpected file is reaped by rsync while we're attempting to clean it up.

Update some doc on the new config option.

Closes-Bug: #1554005

Change-Id: Id67681cb77f605e3491b8afcb9c69d769e154283"
os-cloud-storage,2016-01-20 13:55:30,https://api.github.com/repos/openstack/swift/git/commits/125d18e0ffac572749da58fad1591d5099b5cda7,125d18e0ffac572749da58fad1591d5099b5cda7,"Container-Sync to perform HEAD before PUT object on remote

This change adds a remote HEAD object request before each call to
sync_row.
Currently, container-sync-row attempts to replicate the object
(using PUT) regardless of the existance of the object on the remote side,
thus causing each object to be transferred on the wire several times
(depending on the replication factor)

An alternative to HEAD is to do a conditional PUT (using, 100-continue).
However, this change is more involved and requires upgrade of both the
client and server side clusters to work.
In the Tokyo design summit it was decided to start with the HEAD approach.

Change-Id: I60d982dd2cc79a0f13b0924507cd03d7f9c9d70b
Closes-Bug: #1277223"
alistairncoles,2016-03-22 11:51:11,https://api.github.com/repos/openstack/swift/git/commits/2afa3681cb9c8a74cbe23b1de8d4f2e1a06e8f3a,2afa3681cb9c8a74cbe23b1de8d4f2e1a06e8f3a,"Add .eggs/* to .gitignore

After running:

  python setup.py build_sphinx

there is a .eggs directory left in the repo root directory
which is not currently ignored by git.

Change-Id: Id15811f94046fd8bb22153425bf5cafe6c045453"
alistairncoles,2016-03-22 11:36:32,https://api.github.com/repos/openstack/swift/git/commits/736de613f1e2a6a460f4499cbd1e9f7f1fc3da68,736de613f1e2a6a460f4499cbd1e9f7f1fc3da68,"Docs: Container sync does not require POST-as-COPY

Updates docs to remove warnings that container sync only
works with object_post_as_copy=True. Since commit e91de49
container sync will also sync POST updates when using
object_post_as_copy=False.

Change-Id: I5cc3cc6e8f9ba2fef6f896f2b11d2a4e06825f7f"
alistairncoles,2016-03-22 11:10:41,https://api.github.com/repos/openstack/swift/git/commits/88b575895750c2c00f75a6193cc31bc930e980fd,88b575895750c2c00f75a6193cc31bc930e980fd,"Remove unused code from container sync

Change-Id: Ia44138aadcd30c474f744a9c552220e18302ecc6"
cschwede,2016-02-15 19:17:01,https://api.github.com/repos/openstack/swift/git/commits/fd86d5a95d73714365c07cb36bfd1404306142a7,fd86d5a95d73714365c07cb36bfd1404306142a7,"Skip already checked partitions when auditing objects after a restart

The object auditor will save a short status file on each device, containing a
list of remaining partitions for auditing. If the auditor is restarted, it will
only audit partitions not yet checked. If all partitions on the current device
have been checked, it will simply skip this device. Once all partitions on all
disks are successfully audited, all status files are removed.

Closes-Bug: #1183656

Change-Id: Icf1d920d0942ce48f1d3d374ea4d63dbc29ea464"
os-cloud-storage,2016-03-17 14:53:04,https://api.github.com/repos/openstack/swift/git/commits/0ad1b0cca1f2538ac8fe3ef27d9e06c102157000,0ad1b0cca1f2538ac8fe3ef27d9e06c102157000,"Container sync nodes shuffle cleanup

Since commit ""Update container sync to use internal client"" get_object is
done using internal_client and not directly on nodes which makes the block
of code to shuffle the nodes redundant.

Change-Id: I45a6dab05f6f87510cf73102b1ed191238209efe"
ajaeger,2016-03-18 20:30:58,https://api.github.com/repos/openstack/swift/git/commits/f99b785f47f458baa6a5286e6f6e942a6e2745f3,f99b785f47f458baa6a5286e6f6e942a6e2745f3,"Avoid translation problem

Today's import failed again for zh-TW since the translator of a string
changed the order of the entries and then msgfmt complained with
""format specifications in 'msgid' and 'msgstr' for argument 1 are not
the same""

Use named arguments to allow translators to switch the order of the
entries.

Logfile:
https://jenkins.openstack.org/job/swift-propose-translation-update/179/console

Change-Id: Ide7480a8293a8439ce89d0ad22be74f1f0ad930c"
wbhuberIBM,2016-01-05 20:40:50,https://api.github.com/repos/openstack/swift/git/commits/e1f12960884f9ea52416891a8246a53f9673348b,e1f12960884f9ea52416891a8246a53f9673348b,"Re-format the SLO manifest file on new multipart-manifest GET call

Currently, the multipart-manifest=get call returns output in json
format that is inconsistent with the format that is used for the
multipart-manifest=put.

This in turn introduces a new call: ?multipart-manifest=get&format=raw

Change-Id: I2242943a738f667cbda6363bcb6a017f341e834f
Closes-Bug: 1252482"
clayg,2016-03-17 18:55:14,https://api.github.com/repos/openstack/swift/git/commits/c70abba52958a78d21c00a08488d1c2a7c3df554,c70abba52958a78d21c00a08488d1c2a7c3df554,"Adjust replica count before pulling parts from failed devices

When your device count falls below your replica count you can either add
devices or reduce the replica count.

Trying to reduce your replica count fails about half the time because
removing parts from from failed devices temporarily invalidates your
_replica2part2dev table with NONE_DEV which can result in an IndexError
in _adjust_replica2part2dev_size.

If you adjust the replica count first you won't have to worry about
tracking unassigned parts from failed devices.

Closes-Bug: #1558751

Change-Id: I99dc776fd260a2ba68ca77d7b5ed5120d10b06de"
alistairncoles,2016-03-16 17:41:30,https://api.github.com/repos/openstack/swift/git/commits/12dd408823df158359e99fb01716f2059140c5c9,12dd408823df158359e99fb01716f2059140c5c9,"Put correct Etag and Accept-Ranges in EC 304 and 416 responses

When using an EC policy, 304 responses to conditional GETs
are missing the Accept-Ranges header and have the wrong ETag
value. 412 responses also have the wrong etag.

416 responses to ranged GETs also have the wrong ETag.

This patch ensures behaviour with EC policy is consistent
with replication policy:

  - 304 and 416 responses have correct etag and Accept-Ranges
  - 412 responses have correct Etag but no Accept-Ranges

Co-Authored-By: Mahati Chamarthy <mahati.chamarthy@gmail.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>

Closes-Bug: #1496234
Closes-Bug: #1558197
Closes-Bug: #1558193
Change-Id: Ic21317b9e4f632f0751133a3383eb5487379e11f"
charz,2015-12-31 04:17:21,https://api.github.com/repos/openstack/swift/git/commits/6ea7635f87ce480e712439bf20e0e4d9ca81b352,6ea7635f87ce480e712439bf20e0e4d9ca81b352,"Add a note for functional tests with Keystone.

Change-Id: I9da8f6a56ffb06e89b8da8c06b26ebc8452b652d
Closes-Bug: #1530254"
alistairncoles,2016-03-16 11:38:33,https://api.github.com/repos/openstack/swift/git/commits/6efee0ebb12a8d0c36aad83d4fd592c4e51c5722,6efee0ebb12a8d0c36aad83d4fd592c4e51c5722,"Make keystone middleware options consistent in docs

Bring overview_auth.rst and proxy server man page
up to date with changes made in [1]

[1] Change-Id: I373734933189c87c4094203b0752dd3762689034

Change-Id: Ia16f0c391e7c357ccb9c13945839dc5647e49a13"
bloodeagle40234,2016-03-10 14:42:57,https://api.github.com/repos/openstack/swift/git/commits/ecbcc94989a385efd1a7c60e7c91e3e8898c5b31,ecbcc94989a385efd1a7c60e7c91e3e8898c5b31,"Fix ssync related object-server docs

Swift now uses SSYNC verb instead of old REPLICATION verb for ssync
protocol. This patch replaces all docs written as REPLICATION into
SSYNC and fix a few words for explanation.

Change-Id: I1253210d4f49749e7d425d6252dd262b650d9548"
matthewoliver,2014-08-29 07:14:46,https://api.github.com/repos/openstack/swift/git/commits/f595a7e70492c2751d8c6f5ab60b5512e63281cf,f595a7e70492c2751d8c6f5ab60b5512e63281cf,"Add concurrent reads option to proxy

This change adds 2 new parameters to enable and control concurrent GETs
in swift, these are 'concurrent_gets' and 'concurrency_timeout'.

'concurrent_gets' allows you to turn on or off concurrent GETs, when
on it will set the GET/HEAD concurrency to replica count. And in the
case of EC HEADs it will set it to ndata.
The proxy will then serve only the first valid source to respond.
This applies to all account, container and object GETs except
for EC. For EC only HEAD requests are effected.

It achieves this by changing the request sending mechanism to using
GreenAsyncPile and green threads with a time out between each
request.

'concurrency_timeout' is related to concurrent_gets. And is the
amount of time to wait before firing the next thread. A value of 0
will fire at the same time (fully concurrent), setting another value
will stagger the firing allowing you the ability to give a node a
shorter chance to respond before firing the next. This value is a float
and should be somewhere between 0 and node_timeout. The default is
conn_timeout. Meaning by default it will stagger the firing.

DocImpact
Implements: blueprint concurrent-reads
Change-Id: I789d39472ec48b22415ff9d9821b1eefab7da867"
clayg,2016-03-14 23:52:50,https://api.github.com/repos/openstack/swift/git/commits/f87a5487b5224f77261d82a1087d31820c29e8f8,f87a5487b5224f77261d82a1087d31820c29e8f8,"Make rsync ignore it's own temporary files

In situations where rsync may inadvertently be unable to cleanup it's
temporary files we shouldn't spread them around the cluster.

By asking our rsync subexec to --exclude patterns that match it's own
convention for temporary naming we'll only ever transfer real replicated
artifacts and never temporary artifacts which should always be ignored
until they are fully transfered.

Cleanup of stale rsync droppings should be performed by the auditor and
will be addressed in a separate change related to lp bug #1554005.

Closes-Bug: #1553995

Change-Id: Ibe598b339af024d05e4d89c34d696e972d8189ff"
briancline,2016-03-14 05:17:47,https://api.github.com/repos/openstack/swift/git/commits/a537684c77a2e91c0cc6e4c4953a7e993f6a7005,a537684c77a2e91c0cc6e4c4953a7e993f6a7005,"Don't report recon mount/usage status on files

Today recon will include normal files in the payload it returns for
/recon/unmounted and /recon/diskusage. As a result it can trigger
bogus alarms on any operations-side monitoring checking for unmounted
disks or disks that show up in diskusage with weird looking stats.

This change adds an isdir check for the entries it finds in /srv/node.

Change-Id: Iad72e03fdda11ff600b81b4c5d58020cc4b9048e
Closes-bug: #1556747"
alistairncoles,2016-03-09 10:17:12,https://api.github.com/repos/openstack/swift/git/commits/3ac7cab32bcd08e032ad587a5982bdc997fc20c1,3ac7cab32bcd08e032ad587a5982bdc997fc20c1,"Remove reference to py26 in tox testing instructions

Also change some rst formatting and clarify that tox
is used to run more than just *unit* tests.

Change-Id: I263af7b4f7a554da3a391cf5104af573c89e3825"
alistairncoles,2016-03-10 18:02:44,https://api.github.com/repos/openstack/swift/git/commits/0bc5a69d416004924bd17c14d8455f65433751bd,0bc5a69d416004924bd17c14d8455f65433751bd,"Wait on greenthreads before unmocking http_connect

The fake_spawn() context manager wraps spawn and waits
for greenthreads to complete (such as the async_update threads).
The wait needs to be done before http_connect is un-mocked, so
the fake_spawn context manager should exit *before* any context
manager that mocks the http_connect method.

Also add fake_spawn to _test_PUT_then_POST_async_pendings()

Related-Bug: #1536376
Related-Bug: #1514111
Closes-Bug: #1555739

Change-Id: I15f36e191cfe3ee6c82b4be56e8618ec0230e328"
alistairncoles,2016-03-09 16:49:20,https://api.github.com/repos/openstack/swift/git/commits/994fa7b115f31da37d064a60a823d1c87545d292,994fa7b115f31da37d064a60a823d1c87545d292,"Fix object server test not using correct policy

Without the correct request header, the test that should be
using an EC policy was in fact using a replication policy.

Change-Id: Id44d0d615a4fd09aadfb286425939aea6abdf7b0"
tipabu,2016-02-09 23:59:52,https://api.github.com/repos/openstack/swift/git/commits/f581fccf71034818d19062593eeb52a4347bb174,f581fccf71034818d19062593eeb52a4347bb174,"By default, disallow inbound X-Timestamp headers

With the X-Timestamp validation added in commit e619411, end users
could upload objects with

    X-Timestamp: 9999999999.99999_ffffffffffffffff

(the maximum value) and Swift would be unable to delete them.

Now, inbound X-Timestamp headers will be moved to
X-Backend-Inbound-X-Timestamp, effectively rendering them harmless.

The primary reason to allow X-Timestamp before was to prevent
Last-Modified changes for objects coming from either:

  * container_sync or
  * a migration from another storage system.

To enable the former use-case, the container_sync middleware will now
translate X-Backend-Inbound-X-Timestamp headers back to X-Timestamp
after verifying the request.

Additionally, a new option is added to the gatekeeper filter config:

    # shunt_inbound_x_timestamp = true

To enable the latter use-case (or any other use-case not mentioned), set
this to false.

Upgrade Consideration
=====================

If your cluster workload requires that clients be allowed to specify
objects' X-Timestamp values, disable the shunt_inbound_x_timestamp
option before upgrading.

UpgradeImpact
Change-Id: I8799d5eb2ae9d795ba358bb422f69c70ee8ebd2c"
smerritt,2016-03-08 23:23:40,https://api.github.com/repos/openstack/swift/git/commits/3eeff7c0fc79fab594e3bbb04be74d397c920253,3eeff7c0fc79fab594e3bbb04be74d397c920253,"Fix misleading comment

Change-Id: I2e0e671a08fb855bf53c57987c08a7eefca7078a"
clayg,2016-03-08 20:32:39,https://api.github.com/repos/openstack/swift/git/commits/dc6db66d5e4423ee39e8bf423916c035e55732d0,dc6db66d5e4423ee39e8bf423916c035e55732d0,"Spot check more hashes for increase_part_power

Just a touch of cleanup to the unittest to demonstrate the stability of the
guarantee that objects will hash to the same nodes but have different parts.

Change-Id: I4a24187755455366a6435816a138f6175ae713a4"
alistairncoles,2016-03-07 18:42:01,https://api.github.com/repos/openstack/swift/git/commits/9db7391e55e069d82f780c4372ffa32ef4e79c35,9db7391e55e069d82f780c4372ffa32ef4e79c35,"Object POST update gets distinct async pending file

Each object update to a container server is saved in a
pending file if the initial update attempt fails. Pending
file names were derived from the update request's x-timestamp,
which is equal to the object's data file timestamp. This meant
that updates due to an object POST used the same async pending
file as updates due to the object's PUT.

This is not so bad because the object POST update has a superset
of the metadata included in the PUT update. But there is a risk
of a race condition causing an update to be lost: the updater may
open an update file due to a PUT whuile the object server is
writing an update due to a POST to the same file name. The
updater could then unlink the file before the more recent update
for the POST is sent.

This patch changes the POST update pending file name to be derived
from the object's metadata timestamp, thus making it distinct from
the PUT update pending file name. There is no upgrade impact since
existing pending files will continue to be processed.

Change-Id: I1b093c837efe8c2a64e92075ebd5e1b93e30efb9"
MahatiC,2016-03-08 13:31:53,https://api.github.com/repos/openstack/swift/git/commits/82c8023b894aa7a1fe12fbf1efbfad47afdf86b3,82c8023b894aa7a1fe12fbf1efbfad47afdf86b3,"remove hash_cleanup_listdir legacy translation method

Change-Id: I0b96dfde32b4c666eebda6e88228516dd693ef92
closes-bug:#1550569"
morrisson,2016-03-08 02:30:47,https://api.github.com/repos/openstack/swift/git/commits/83713d37f0331c5ce9d377f4b4e8724551ae30ca,83713d37f0331c5ce9d377f4b4e8724551ae30ca,"Missing comments for storage policy parameter

There are missing comments about storege_policy_index so appropriate
comments are added.

Change-Id: I3de3f0e6864e65918ca1a13cce70f19c23d295f5"
smerritt,2016-03-02 10:28:51,https://api.github.com/repos/openstack/swift/git/commits/9430f4c9f5e79026f7275f8ec32ef4a180c5e8fc,9430f4c9f5e79026f7275f8ec32ef4a180c5e8fc,"Move HeaderKeyDict to avoid an inline import

There was a function in swift.common.utils that was importing
swob.HeaderKeyDict at call time. It couldn't import it at compilation
time since utils can't import from swob or else it blows up with a
circular import error.

This commit just moves HeaderKeyDict into swift.common.header_key_dict
so that we can remove the inline import.

Change-Id: I656fde8cc2e125327c26c589cf1045cb81ffc7e5"
clayg,2016-02-29 13:14:59,https://api.github.com/repos/openstack/swift/git/commits/fa0c5f244f907ed2d5bd6d90f0be44869d7d1de6,fa0c5f244f907ed2d5bd6d90f0be44869d7d1de6,"Additionally break container servers during fast-post probes

The existing probetests were already doing brainsplitting on the object
servers in order to introduce composite metdata timestamp reconciliation.

But they were not introducing failures at the container server level, and
therefore not covering functional testing of those servers replication
consistency repair.

This change adds a brain splitter for the container servers to additionally
exercise the consistency engine at that layer under the existing probetest so
that you can observe their correct behavior while exercising the probetests
[1].

1. I used a script like this to watch the object servers and container db's
repair themselves -> https://gist.github.com/clayg/a8077d9d29ff68bb0edd

Change-Id: Ic5bb03dffef7e30c58338cef969a105577b84620"
codevulture,2015-12-07 16:15:43,https://api.github.com/repos/openstack/swift/git/commits/be54d0c928528cdc1b12e1bcb1614ea8859fae2e,be54d0c928528cdc1b12e1bcb1614ea8859fae2e,"clear pycache and remove all pyc/pyo before starting unit test

Delete python bytecode before every test run.
Because python creates pyc files during tox runs, certain
changes in the tree, like deletes of files, or switching
branches, can create spurious errors.

Closes-Bug: #1368661
Change-Id: Iedcb400fa3b0417f5bb8e943b17758fcfb4070c6"
alistairncoles,2016-01-14 18:31:21,https://api.github.com/repos/openstack/swift/git/commits/936881543e60fa437cd0f91f029f9874fd7437d9,936881543e60fa437cd0f91f029f9874fd7437d9,"Reclaim isolated .meta files

It is possible for an object dir to contain only
a .meta file*, and currently this file will never
be deleted. This patch changes the diskfile on disk
file processing to identify any isolated meta files
and mark them as ready to be reclaimed, so that the
cleanup will reclaim them if they are older than
reclaim age.

*An isolated .meta can occur as follows:

Consider two replicas of the same object whose ondisk files
have diverged due to failures:

  A has t2.ts
  B has t1.data, t4.meta

(The DELETE at t2 did not make it to B. The POST at t4 was
rejected by A.)

After ssync replication the two ondisk file sets will be:

  A has t2.ts
  B has t2.ts, t4.meta

Once t2 becomes older than (current time - reclaim age) we are
left with:

  B has t4.meta

Closes-Bug: #1534685
Change-Id: I3a175fd948a331d08df1b28f9831d7529216c6f1"
cschwede,2016-03-04 09:33:17,https://api.github.com/repos/openstack/swift/git/commits/043fbca6d08648baa314ea2236f1ccdca8785f16,043fbca6d08648baa314ea2236f1ccdca8785f16,"Remove Erasure Coding beta status from docs

This removes notes stating support for Erasure coding as beta. Questions
regarding the stability of EC are coming up regularly, and are often referring
to the docs that state EC as still in beta.

Besides this, a note marking statsd support as beta has been removed as well.

Change-Id: If4fb6a5c4cb741d42953db3cee8cb17a1d774e15"
cschwede,2016-02-15 19:16:08,https://api.github.com/repos/openstack/swift/git/commits/3ff94cb785867382ff6c37cb256d1b0f5381abaa,3ff94cb785867382ff6c37cb256d1b0f5381abaa,"Add internal method to increase ring partition power

This method increases the partition power of an existing ring by one. It does
not move any data nor does it exposes a CLI command yet; it is only intended to
be used in a future version to do the actual ring modification itself.

An existing object that is currently located on partition X will be placed
either on partition 2*X or 2*X+1 after the partition power got increased. The
reason for this is the Ring.get_part() method, that does a bitwise shift to the
right.

To avoid actual data movement to different disks or even nodes, the allocation
of partitions to nodes needs to be changed. The allocation is pairwise due to
the above mentioned new partition scheme. Therefore devices are allocated like
this, with the partition being the index and the value being the device id:

OLD: 0,    3,    7,    5,    2,    1,    ...
NEW: 0, 0, 3, 3, 7, 7, 5, 5, 2, 2, 1, 1, ...

If an operator stops the cluster, increases the partition power and renames &
hardlinks the existing data it is possible to do a power shift without actually
moving data. Please see the partition power spec for further details on this.

Change-Id: I063fd8077497ee8c14d9065f07b4ec0fb5cbe180
Partially-Implements: spec increasing_partition_power"
zaitcev,2016-03-03 17:24:28,https://api.github.com/repos/openstack/swift/git/commits/09c73b86e9255f28fbd4cf571a52c17d549a8f9a,09c73b86e9255f28fbd4cf571a52c17d549a8f9a,"Fix a crash in exception printout

Says the number of arguments does not match the number of '%'.

Change-Id: I8b5e395a07328fb9d4ac7a19f8ed2ae1637bee3b"
tipabu,2016-03-03 15:07:08,https://api.github.com/repos/openstack/swift/git/commits/fad5fabe0a22e8a86635a66523dd3d3d3b1fa705,fad5fabe0a22e8a86635a66523dd3d3d3b1fa705,"During functional tests, 404 response to a DELETE is successful

Previously, we would only consider 204 responses successful, which would
cause some spurious gate failures, such as

http://logs.openstack.org/66/287666/3/check/gate-swift-dsvm-functional/c6d2673/console.html#_2016-03-03_13_41_07_846

Change-Id: Ic8c300647924352a297a2781b50064f7657038b4"
kajinamit,2015-11-17 07:15:59,https://api.github.com/repos/openstack/swift/git/commits/8e4347afd59aa30708ef03a78202652aaadda2e9,8e4347afd59aa30708ef03a78202652aaadda2e9,"Fix proxy-server's support for chunked transferring in GET object

Proxy-server now requires Content-Length in the response header
when getting object and does not support chunked transferring with
""Transfer-Encoding: chunked""

This doesn't matter in normal swift, but prohibits us from putting
any middelwares to execute something like streaming processing of
objects, which can't calculate the length of their response body
before they start to send their response.

Change-Id: I60fc6c86338d734e39b7e5f1e48a2647995045ef"
charz,2016-02-25 05:31:51,https://api.github.com/repos/openstack/swift/git/commits/6b4e73bb15c680ada8b30279b090c6123ce5731f,6b4e73bb15c680ada8b30279b090c6123ce5731f,"Fix account-reaper unable to delete all containers.

When reaper try to find the correct container_shard number,
but it doesn't compare local device's name, so it always
return first entry's index of local devices from the ring
to container_shard.
That causes some containers will be skip and objects under
these containers won't be delete.

Change-Id: I0e2bbdd99add86ee46e856920c0740c4aa13c77d
Closes-Bug: #1549615"
smerritt,2016-03-01 13:54:09,https://api.github.com/repos/openstack/swift/git/commits/22685d6231003bd236e7fc363b58e86f35ab80bb,22685d6231003bd236e7fc363b58e86f35ab80bb,"Faster suffix invalidations on object PUT/DELETE

Before this commit, we performed a full read-modify-write cycle on a
partition's hashes.pkl to invalidate the relevant suffix whenever an
object PUT or DELETE completes.

Now we append invalid suffixes to a new file, ""hashes.invalid"",
alongside hashes.pkl. When we actually get a REPLICATE request and
need to compute the hashes, *then* we perform a full read-modify-write
on hashes.pkl and clear out hashes.invalid.

Change-Id: Ia7add438e25688b4b286f0110a4e43490e11ad75"
kajinamit,2015-12-25 01:30:01,https://api.github.com/repos/openstack/swift/git/commits/9dda1c9526c5b3e0ac905985921605d833bef3cc,9dda1c9526c5b3e0ac905985921605d833bef3cc,"Update parameters about authtoken middleware in proxy-server.conf.sample

This patch replaces some configration parameters about authtoken
middleware in proxy-server.conf, which will be deprecated.

The following parameters are to be deprecated.
 auth_admin_prefix, auth_host, auth_port, auth_protocol,
 identity_uri, admin_token, admin_user, admin_password,
 admin_tenant_name

Change-Id: I373734933189c87c4094203b0752dd3762689034"
ajaeger,2016-02-29 19:00:38,https://api.github.com/repos/openstack/swift/git/commits/087fa4fa01fc36343f2ce0974d3b36ec0b98afc8,087fa4fa01fc36343f2ce0974d3b36ec0b98afc8,"Remove unused pngmath Sphinx extension

There's no RST file that uses "".. math"" and thus
the pngmath Sphinx extension is not used and can
get removed.

Change-Id: I3ea4b529025c8ac3c4092f3720124647861e6668"
osanai-hisashi,2015-12-09 08:08:22,https://api.github.com/repos/openstack/swift/git/commits/9c5b01e7c7699fbfd221e98ccde1afa9361c8119,9c5b01e7c7699fbfd221e98ccde1afa9361c8119,"Add container quota functional test

This patch provides one container quota functional test.

Change-Id: I16354c15fc434d70f9bb6b9b1e18b09357195c83"
bloodeagle40234,2016-02-23 06:41:51,https://api.github.com/repos/openstack/swift/git/commits/6d8be59fce17008369656628615efcd2677dfe36,6d8be59fce17008369656628615efcd2677dfe36,"Fix ringbuilder tests

Some of tests in test/unit/cli/test_ringbuilder doesn't assert
the exit code and unfortunately some of these passed even if the
statement fails for the assertion actually.

This patch enables to assert the exit code from ringbuider and
fixes some code/test bugs I noticed.

Change-Id: I18fa675ba8a90678e2b5ccb5f90eafab01d22787"
osanai-hisashi,2015-12-10 01:15:30,https://api.github.com/repos/openstack/swift/git/commits/efdc6ee8dbc434e9189a6b85b924c322c3ff6ae3,efdc6ee8dbc434e9189a6b85b924c322c3ff6ae3,"Add X-Delete-After and X-Delete-At functional test

This patch provides functional tests for X-Delete-After and X-Delete-At.

Change-Id: I55b0d0584428413aa7a31f66defec55f9b1bbcd9"
tipabu,2016-02-28 01:18:07,https://api.github.com/repos/openstack/swift/git/commits/fe70898daced5f5fd698dd27098451439fdd8d08,fe70898daced5f5fd698dd27098451439fdd8d08,"Require account/container metadata be UTF-8

Otherwise, we get a UnicodeDecodeError when we call json.dumps()

Change-Id: Ie200d029e1fd7f0ff0956c8ced98207e11ef9080"
wbhuberIBM,2015-10-23 20:50:21,https://api.github.com/repos/openstack/swift/git/commits/0628f1268c804aa555ff3873d11831266c1b1cb1,0628f1268c804aa555ff3873d11831266c1b1cb1,"Add unit tests for swift.account.reaper

This patch adds more unit tests to diminish missing pieces
of the coverage in the account_reaper unit test.

Change-Id: Ib9e875ddd1334a4a67037dcfbd42d3b008ccd4e7"
kajinamit,2016-02-28 04:41:19,https://api.github.com/repos/openstack/swift/git/commits/bd93d44bb46350f716f1dfb66fb43c2ab4ad8c50,bd93d44bb46350f716f1dfb66fb43c2ab4ad8c50,"Make sure all temp files get deleted in test_ringbuilder

This patch makes test_ringbuilder create a temporal directory,
run ring builder commands under it, and delete it after testing
for each test cases, to fix temp file leaking.

Change-Id: I6f59fe095ea6485af0e60b5a8e8fc3892e0a0f90"
chengtcli,2016-02-27 15:26:47,https://api.github.com/repos/openstack/swift/git/commits/2d73dd9e660b50ef04a20012963a15376983923f,2d73dd9e660b50ef04a20012963a15376983923f,"keep etag of target source instead of possible_source

In proxy/controllers/base.py : ResumingGetter._get_source_and_node
self.used_source_etag should be etag of target source
instead of possible_source.

Change-Id: Id6c33e79f65cb4ad9e3249957dd57dc2da8cad98
Closes-bug: #1550734"
benjkeller,2016-02-26 00:54:00,https://api.github.com/repos/openstack/swift/git/commits/10b5765c60790f8a3ae2a94d6a51736ec2c99ce0,10b5765c60790f8a3ae2a94d6a51736ec2c99ce0,"Rename test_object_delete_at_aysnc

This renames test_object_delete_at_aysnc to
test_object_delete_at_async to match with the function
async_update which it tests.

Change-Id: I726afcbf08a3449c7af2834e573b97be378a86cd
Closes-Bug: 1550067"
notmyname,2016-02-24 17:36:40,https://api.github.com/repos/openstack/swift/git/commits/9e53bb47efa28983109da8ceca5d316925bc6804,9e53bb47efa28983109da8ceca5d316925bc6804,"updated some weird whitespace character to a normal one

Change-Id: I187fb8fc8d10f950bbebc586999eced0bc117432"
alistairncoles,2016-02-19 09:30:10,https://api.github.com/repos/openstack/swift/git/commits/54e53ae87b6e87229dc77cb7c814ab9733ea7013,54e53ae87b6e87229dc77cb7c814ab9733ea7013,"Silence SkipTest noise in in-process test teardown

setup_package and teardown_package get called twice when
running functional tests using nose. With in-process mode
the first call to teardown_package clears global config
which causes the test swiftclient to raise a SkipTest error
during the second call to teardown_package.

To reproduce:
SWIFT_TEST_IN_PROCESS=1 nosetests ./test/functional/test_account.py

This patch simply tests for config existence before attempting
to create a test swiftclient in the teardown_package function.

Also fix a related issue whereby in_process flag would be reset to
False during second call to setup_package, thus causing some of the
in process cleanup in teardown_package to never be executed.

Change-Id: I074dcd3d39aa46b262632024b047556ca471e8b8"
clayg,2016-02-24 01:28:08,https://api.github.com/repos/openstack/swift/git/commits/076134784b4eb1c2e55b28218dc0d64a57795d63,076134784b4eb1c2e55b28218dc0d64a57795d63,"Add warn method back to LogAdapter

The change in 684c4c04 to improve py3 support breaks older middleware
that consumes the SwiftLogger.

Good for Swift code to not to use warn because it's deprecated.

Bad for LogAdapter to not faithfully provide the current python logging
module API (deprecated or otherwise).

Change-Id: Ib0baf66b7f33f91562867076ff0526a287d8e5a6"
smerritt,2016-02-23 22:00:34,https://api.github.com/repos/openstack/swift/git/commits/eb7ca115e6501edd9225dce8784b8b3d3e094bb1,eb7ca115e6501edd9225dce8784b8b3d3e094bb1,"Fix StatsD tests to not use real DNS

In common/test_utils.py, TestStatsdLogging had the majority of its
test cases calling the real socket.getaddrinfo(), which uses real
DNS. This is very slightly slower than using a mock getaddrinfo() when
the machine running the tests has functioning DNS, but on a machine
with no network connection at all, the tests are excruciatingly slow
due to timeouts.

This commit mocks things out as appropriate. There's still one user of
the real getaddrinfo(), but it's for ::1, so that's just local
resolution based on /etc/hosts.

Timing numbers for ""./.unittests test.unit.common.test_utils:TestStatsdLogging"":

 * network, without this patch: 1.8s
 * no network, without this patch: 221.2s (ouch)
 * network, with this patch: 1.1s
 * no network, with this patch: 1.1s

Change-Id: I1a2d6f24fc9bb928894fb1fd8383516250e29e0c"
clayg,2016-02-19 05:06:40,https://api.github.com/repos/openstack/swift/git/commits/cfd50212358372694ba0713ff8c3bc313c6f1a92,cfd50212358372694ba0713ff8c3bc313c6f1a92,"dry out container unittests

Change Ifcc4392ffa4df485ce3c62a35d0fcc8c93de74aa introduced
TestContainerController4Replicas as a subclass of
TestContainerController. And there is duplicated code
block to override setUp method.

This patch removed the duplicated code block.

Change-Id: Iad0b64cba52554b89dbd959475a2ce7c0d9a20eb"
kajinamit,2016-02-22 07:10:09,https://api.github.com/repos/openstack/swift/git/commits/406e8996fb288e9851e02c3f3faa536a9919b28f,406e8996fb288e9851e02c3f3faa536a9919b28f,"Use 201 insted of 200 in PUT test case

There are some unit test cases which assumes 200 as the response
of PUT request, but 200 is never returned in PUT.
This patch replaces 200 in PUT by 201, and adapt unit test cases
to real case.

Change-Id: I35fc7a4fe7fcc5558a9e6c6371105793c2710f3e"
osanai-hisashi,2016-01-22 07:06:45,https://api.github.com/repos/openstack/swift/git/commits/5b18455cef57d052df3cda3e9179c923d3aadcad,5b18455cef57d052df3cda3e9179c923d3aadcad,"Add unit tests for checking responses in ContainerController

This patch provides unit tests to check responses for various situation
in three/four replicas env.

Change-Id: Ifcc4392ffa4df485ce3c62a35d0fcc8c93de74aa"
tipabu,2016-01-07 19:56:33,https://api.github.com/repos/openstack/swift/git/commits/002513d21786df0d6c71e9772ec4688e2c14d8de,002513d21786df0d6c71e9772ec4688e2c14d8de,"Make write-only container access consistent

Previously, if a user could write to (but not read from) a container,
the behavior for object POST would vary depending on whether
object_post_as_copy was enabled (403 response) or disabled (202
response).

Now, POSTs will consistently be allowed, regardless of whether fast-POST
is enabled.

Change-Id: I1d6dcbc4f5034a322a1073850fc3b059ebb1c0fa"
onovy,2016-02-18 16:38:42,https://api.github.com/repos/openstack/swift/git/commits/9a6c6b55713f896609b7127560ae99fabbf759e7,9a6c6b55713f896609b7127560ae99fabbf759e7,"Fixed log format in object auditor

Change-Id: I218e08446c5ffda2db7c774ec8bb9d28ce9f63e7"
alistairncoles,2016-01-14 18:31:21,https://api.github.com/repos/openstack/swift/git/commits/2d55960a221c9934680053873bf1355c4690bb19,2d55960a221c9934680053873bf1355c4690bb19,"Fix inconsistent suffix hashes after ssync of tombstone

Consider two replicas of the same object whose ondisk files
have diverged due to failures:

  A has t2.ts
  B has t1.data, t4.meta

(The DELETE at t2 did not make it to B. The POST at t4 was
rejected by A.)

After ssync replication the two ondisk file sets will not be
consistent:

  A has t2.ts  (ssync cannot POST t4.meta to this node)
  B has t2.ts, t4.meta (ssync should not delete t4.meta,
                        there may be a t3.data somewhere)

Consequenty the two nodes will report different hashes for the
object's suffix, and replication will repeat, always with the
inconsistent outcome. This scenario is reproduced by the probe
test added in this patch.

(Note that rsync replication does result in (t2.ts, t4.meta)
on both nodes.)

The solution is to change the way that suffix hashes are
calculated. Currently the names of *all* files found in each
object dir are added to the hash.  With this patch the
timestamps of only those files that could be used to
construct a valid diskfile are added to the hash. File
extensions are appended to the timestamp so that in most
'normal' situations the result of the hashing is the same
as before this patch. That avoids a storm of hash mismatches
when this patch is deployed in an existing cluster.

In the problem case described above, t4.meta is no longer
added to the hash, since it is not useful for constructing
a diskfile. (Note that t4.meta is not deleted because it
may become useful should a t3.data be replicated in future).

Closes-Bug: 1534276
Change-Id: I99e88b8d5f5d9bc22b42112a99634ba942415e05"
bloodeagle40234,2016-02-18 05:17:34,https://api.github.com/repos/openstack/swift/git/commits/ddeb0cde9fc828fa79dce90df4975f66737ba054,ddeb0cde9fc828fa79dce90df4975f66737ba054,"Fix object-server to handle newer ts file

Swift object-server will return 409 Conflict when the incomming
request X-Timestamp is older than the local disk file to prevent
wasted data transfer and disk space consumption. However, IFF,
the local disk file is a tombstone, current object-server will
write the data in the device and cleanup it according to timestamp
comparison result in hash_cleanup_list_dir, and then return 201
Created. That's wasted and far from the semantics in the normal case.

This patch fixes object-server to catch the DiskFileDeleted exception
at PUT request, and then, set the timestamp from tombstone as
original_timestamp to be able to compare with request timestamp.

Co-Authored-By: Kazuhiro Miyahara <miyahara.kazuhiro@lab.ntt.co.jp>
Change-Id: I078c9cb90707a3c320708e76ea42cbfa73e1ea4b
Closes-Bug: #1546865"
bvancsics,2015-12-07 16:02:40,https://api.github.com/repos/openstack/swift/git/commits/878688cae00576ec0bdb0a66eca7ada95e661c0a,878688cae00576ec0bdb0a66eca7ada95e661c0a,"Reduce code duplication

Reduced source code by extracting duplicated code
(swift/common/direct_client.py)
http://openqa.sed.hu/dashboard/index/5?did=1

Change-Id: I47fa6ae12c646e8e42fb0a46a017971f05d883fc
Closes-Bug: 1536067"
KazuhiroMiyahara,2016-01-08 09:03:33,https://api.github.com/repos/openstack/swift/git/commits/c3201f256cf415988a3cb1c42e9c6b7835195fa3,c3201f256cf415988a3cb1c42e9c6b7835195fa3,"Remove execute permissions from doc files and swift.conf-sample

Some doc files and swift.conf-sample were added execute permissions in past changes.
This patch remove execute permissions from them.

Change-Id: Id8844989a8321578e9207566ebd6660f5b9523f0"
cschwede,2016-02-17 19:47:26,https://api.github.com/repos/openstack/swift/git/commits/e46d6b17251ab538595b1deb5581360a286b8fd1,e46d6b17251ab538595b1deb5581360a286b8fd1,"Add note on using printable chars for swift_hash_path_suffix/prefix

Using unprintable characters for swift_hash_path_prefix/suffix might lead to
hard problems when parsing of these values changes, for example due to newer
Python versions or changes in the parsers itself. Let's avoid this and add a
note that deployers should use printable strings for these values.

Change-Id: I976982b753b6af831ab91d7190f50f8f15bf73bf"
KazuhiroMiyahara,2016-02-12 11:48:34,https://api.github.com/repos/openstack/swift/git/commits/aa7204d106ae33eba9219514f31f008510c9db53,aa7204d106ae33eba9219514f31f008510c9db53,"Remove '#! /usr/bin/env python' from unexecutable files

'cli/recon.py' and 'cli/ring_builder_analyzer.py' have '#! /usr/bin/env
python' in spite of they don't have execute permissions.  This patch
removes '#! /usr/bin/env python' from them.

Change-Id: I1917ccc84b1673af3d862be1796f54595f94c5ca"
clayg,2016-02-16 18:52:01,https://api.github.com/repos/openstack/swift/git/commits/db87a5a9889d436f2e2aacdc8923d55ca0d3d1ca,db87a5a9889d436f2e2aacdc8923d55ca0d3d1ca,"Mock sleep in direct_client retry tests

... and fixup some assertions, and other mocks

Change-Id: Iadf839d1d3d735109fed24049fc3d829776b7b65"
tipabu,2016-02-16 18:25:39,https://api.github.com/repos/openstack/swift/git/commits/8eb30afd7c39f6e6ba031f72c6a61f45b28d37f6,8eb30afd7c39f6e6ba031f72c6a61f45b28d37f6,"Static methods should be @staticmethods

Change-Id: Ifee5d68e00bbb3571aaac885cdd7490c79732985"
chenchaozhe1988,2016-02-16 15:44:27,https://api.github.com/repos/openstack/swift/git/commits/4a44e27e00795c5f12176ef346cd2249fca54fd8,4a44e27e00795c5f12176ef346cd2249fca54fd8,"Replace assertEqual(None, *) with assertIsNone in tests

As swift no longer supports Python 2.6, replace assertEqual(None, *)
with assertIsNone in tests to have more clear messages in case of
failure.

Change-Id: I94af3e8156ef40465d4f7a2cb79fb99fc7bbda56
Closes-Bug: #1280522"
cschwede,2016-02-16 10:08:55,https://api.github.com/repos/openstack/swift/git/commits/42f4b3fc1e69a046c1e70e73afe847e4423fa2da,42f4b3fc1e69a046c1e70e73afe847e4423fa2da,"Add SwiftHLM to associated projects

Change-Id: I5ea3de34e61f22abec803b35fec8adde18a793e9"
ankur-odl,2016-02-10 20:36:16,https://api.github.com/repos/openstack/swift/git/commits/025ebf2901d5a972796b73538bb306847d7d06b6,025ebf2901d5a972796b73538bb306847d7d06b6,"Docstring omission in class BaseDiskFileManager.

Added documentation for missing Docstring variables.

Change-Id: I29a53b8141c5607815f234a6123e2289200bca34"
cschwede,2016-02-11 12:18:07,https://api.github.com/repos/openstack/swift/git/commits/7aaca029175661d45d05d41cce367c0ae19cab41,7aaca029175661d45d05d41cce367c0ae19cab41,"Add comments to role-based access control functional tests

Change-Id: Ic18c8a2abc33e2f175f948991af0189935b8702f"
codevulture,2016-01-12 07:20:43,https://api.github.com/repos/openstack/swift/git/commits/4906b4c431edc436f165b163a228b0a221950c79,4906b4c431edc436f165b163a228b0a221950c79,"Fix missing txn_id logs in GreenAsyncPile's spawned functions

This commit ensures that the logger thread_locals
value is passed to and set in _get_conn_response methods
executed in a green thread.

Added partial bug tag because in bug description a more
relevant fix is suggested which would fix the bug completely
but for now this makes sense to add this commit for logging.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: I13bbf174fdca89318d69bb0674ed23dc9ec25b9a
Partial-Bug: #1409302"
KazuhiroMiyahara,2016-02-12 10:01:59,https://api.github.com/repos/openstack/swift/git/commits/511a1b8698889c430bf673ed916ae41a96b99c5c,511a1b8698889c430bf673ed916ae41a96b99c5c,"Remove execute permission from swift/cli/ringbuilder.py

In Change-Id: Ia63f59a8faca1fad990784f27532ca07a2125454,
'bin/swift-ring-builder' is renamed to 'swift/cli/ringbuilder.py'.
However, execute permission and '#! /usr/bin/env python' are left on
the file.

This patch removes execute permission and '#! /usr/bin/env python'
from the file.

Change-Id: I66370f825ce9ed9a40ec21f2745aa6aff22c8709"
onovy,2016-02-11 09:20:10,https://api.github.com/repos/openstack/swift/git/commits/973d9358d2e6e029409d1902831b4680e02952c9,973d9358d2e6e029409d1902831b4680e02952c9,"Bump PyECLib requirement to >= 1.2.0

This was discussed at last Swift meeting [1] and conclusion was
to require newest PyECLib version.

[1] http://eavesdrop.openstack.org/meetings/swift/2016/swift.2016-02-10-21.00.log.html#l-268

Depends-On: I0fd58f26bc0a3e7715356ff74344981f22786152
Change-Id: I54e89d99b48e00e614d2d457814c00354763c83b"
sarafraj-singh,2016-02-11 20:52:47,https://api.github.com/repos/openstack/swift/git/commits/c4158bd674f34c8a0648c98974ba474fcd1c2b7a,c4158bd674f34c8a0648c98974ba474fcd1c2b7a,"Fixed params on autocreate_account docstring

... in proxy.controllers.base

Change-Id: Ic5c27cbf0f19b65fcaa3e6587583f03e56d646a0"
smerritt,2016-02-11 18:59:43,https://api.github.com/repos/openstack/swift/git/commits/f56d18e143d0a38584e4c383ea9afe46e67a0af6,f56d18e143d0a38584e4c383ea9afe46e67a0af6,"Fix typos in comments

Change-Id: I4f98d447bd2ddd8eeb2f4da66d069bd7d6f00dc6"
onovy,2015-12-15 21:42:18,https://api.github.com/repos/openstack/swift/git/commits/335d58611d0daf87783e565b521974b456f5c636,335d58611d0daf87783e565b521974b456f5c636,"Keystone middleware deprecated option is_admin removed

It has been deprecated from Swift 1.8.0 (Grizzly)

Change-Id: Id6bc10c3e84262c0a9e6160a76af03c0ad363e9c"
onovy,2016-02-04 15:02:42,https://api.github.com/repos/openstack/swift/git/commits/cc8dc88b55b44ca2a1fd65c049f3cfec22eb5525,cc8dc88b55b44ca2a1fd65c049f3cfec22eb5525,"Script for checking sanity of manpages

Change-Id: Ia27b0ecf6a3267eb51f8a6562721dca72f128915"
larryrensing,2016-02-10 15:21:53,https://api.github.com/repos/openstack/swift/git/commits/bcada66b9065c94cd39498a5330c727cc575a6fe,bcada66b9065c94cd39498a5330c727cc575a6fe,"Removed unused parameter in server.py

The variable max_large_object_get_time is no longer used and was
removed to reflect the change.

Change-Id: I43051181dcb38245de6d13fab63876e83f46fc39
Closes-Bug: #1538834"
berendt,2016-02-09 06:32:48,https://api.github.com/repos/openstack/swift/git/commits/b98c1c60f9c581c76677c19baae60ae720e3c7f3,b98c1c60f9c581c76677c19baae60ae720e3c7f3,"Remove executable flag from sample config file

swift.conf-sample should not be executbale

Change-Id: I960058e2af10b43efc6324a7534d9a23c810e39a"
alistairncoles,2016-02-08 15:31:42,https://api.github.com/repos/openstack/swift/git/commits/87fc21c7cfcce2a3e23a84fddcfd1309cd884716,87fc21c7cfcce2a3e23a84fddcfd1309cd884716,"Speed up functional testing

test/functional/tests.py:TestObjectVersioningUTF8 does not clean
up the versions files it creates because the class's multiple
inheritance is such that it does not call the tearDown method in
TestObjectVersioning.

As a result, any attempt to clean up account containers wastes
time retrying container delete requests. This occurs either in
the setUp for TestSloEnv, if the TestSlo class is included in a
test run, or in the tests.py package tearDown method.

On the author's dev machine this patch reduces the execution
time of functional tests in tests.py by approx 30% or 1 minute.

Change-Id: I8194672bf2ca82435df5868720b6a55a79b94413"
codevulture,2016-02-06 11:29:57,https://api.github.com/repos/openstack/swift/git/commits/f05da4c8fa37a285bb2ca9b45a355dbe57f7add4,f05da4c8fa37a285bb2ca9b45a355dbe57f7add4,"Changing the base version to python2.7 for pep8 checks

tox was taking python3 as it's base version which lead to
tox pep8 check failing on local env:
http://paste.openstack.org/show/486183/

Change-Id: Ia822ec5b5e12a1fc30b676f1e6d95e287b9b3368"
sarafraj-singh,2016-02-05 17:28:26,https://api.github.com/repos/openstack/swift/git/commits/13edc9a865cd203ddf28a3f782426a1b3b94f7a1,13edc9a865cd203ddf28a3f782426a1b3b94f7a1,"Improved test coverage of form_signature

Added four new test cases to execute path of invalid arguments. This
improved test coverage of file specified from 80% to 91%.

Change-Id: I63c2e7bab3f01121301d78b687687208a58401c0"
bloodeagle40234,2016-02-04 13:18:42,https://api.github.com/repos/openstack/swift/git/commits/b173995666b026def3f6558d9a8c972b75449323,b173995666b026def3f6558d9a8c972b75449323,"Fix missing Accept-Ranges

Since commit 4f2ed8bcd0468f3b69d5fded274d8d6b02ac3d10, the response
header for GET EC object doesn't include the Accept-Ranges header.

This patch fixes it and also adds a few unittests to prevent regression.

Closes-Bug: #1542168

Change-Id: Ibafe56ac87b14bc0028953e620a653cd68dd3f84"
onovy,2016-02-02 20:58:52,https://api.github.com/repos/openstack/swift/git/commits/ae632abbd802228ef98a23c98ee49988e7e5b942,ae632abbd802228ef98a23c98ee49988e7e5b942,"Fixed manpages errors.

account-server.conf.5
105: warning: numeric expression expected (got `)')

container-server.conf.5
111: warning: numeric expression expected (got `)')

object-expirer.conf.5
79: warning: numeric expression expected (got `)')

object-server.conf.5
114: warning: numeric expression expected (got `)')

proxy-server.conf.5
121: warning: numeric expression expected (got `)')
331: warning: numeric expression expected (got `[')
1005: warning: macro `*' not defined

Change-Id: I203dcfde83035e3b1dcb91109b72b5d08bb7840e"
alistairncoles,2016-02-02 11:43:44,https://api.github.com/repos/openstack/swift/git/commits/f2fca9aafa17e45b668c6f76b256927681cc463a,f2fca9aafa17e45b668c6f76b256927681cc463a,"Fix time-shifting of objects PUT with container-sync

When container-sync PUTs an object to a destination container
it uses the timestamp from the container row rather than the
actual timestamp of the object being copied. The actual timestamp
of the object can be newer, so the sync'd object may end up with
the right content but at the wrong, older, timestamp.

This patch changes the timestamp sent with the sync'd object
to be that of the actual source object being sent.

Drive-by fix to make code more readable by removing a variable
rename mid-function, fix a typo and remove a redundant function
call.

Change-Id: I800e6de4cdeea289864414980a96f5929281da04
Closes-Bug: #1540884"
venkatamahesh,2016-02-04 11:17:15,https://api.github.com/repos/openstack/swift/git/commits/050e3b35dd88f7b31b6810d9ac88548ef371e3ce,050e3b35dd88f7b31b6810d9ac88548ef371e3ce,"Use uppercase 'S' in word ""OpenStack""

Change-Id: I4692aa58b5173b1b662d5eee19fac770ae5aaed0"
tipabu,2016-02-03 20:52:29,https://api.github.com/repos/openstack/swift/git/commits/e47aaaacf15e8f0c7226400541a97238447a7f56,e47aaaacf15e8f0c7226400541a97238447a7f56,"Stop nesting functions unnecessarily

Change-Id: Iff120d0bac8a075c37bbddcd2bb0fe85145f1749"
dbishop,2016-01-21 19:18:18,https://api.github.com/repos/openstack/swift/git/commits/26327e1e8b1d37faa764ec586f5bee0e1560eea2,26327e1e8b1d37faa764ec586f5bee0e1560eea2,"Allow IPv6 addresses/hostnames in StatsD target

The log_statsd_host value can now be an IPv6 address or a hostname
which only resolves to an IPv6 address.  In both cases, the new
behavior is to use an AF_INET6 socket on which .sendto() is called
with the originally-configured hostname (or IP).  This means the
Swift process is not caching a DNS resolution for the lifetime of
the process (a good thing).

If a hostname resolves to both an IPv6 or IPv4 address, an AF_INET
socket is used (i.e. only the IPv4 address will receive the UDP
packet).

The old behavior is preserved: any invalid IP address literals and
failures in DNS resolution or actual StatsD packet sending do not
halt the process or bubble up; they are caught, logged, and
otherwise ignored.

Change-Id: Ibddddcf140e2e69b08edf3feed3e9a5fa17307cf"
clayg,2016-02-02 19:44:39,https://api.github.com/repos/openstack/swift/git/commits/f27ad34e1d4e5dc306eed3ff620a294a4c301f31,f27ad34e1d4e5dc306eed3ff620a294a4c301f31,"Document use-case for slow option

Change-Id: Iec4087a896a2277179e3720d802cca101fa7ad54"
onovy,2016-01-31 09:30:06,https://api.github.com/repos/openstack/swift/git/commits/16976a0f14ee2b5f7abc76086f9abfb9f337a655,16976a0f14ee2b5f7abc76086f9abfb9f337a655,"Changed EC backend from jerasure to liberasurecode in examples and docs

liberasurecode_rs_vand is build-in liberasurecode, so you don't need
another depedency libjerasure2.

liberasurecode_rs_vand is supported by pyeclib from 1.0.8
version, so bumping version up.

Closes-Bug: #1534325
Change-Id: If2d96875694df8fd48c5278395859aaa165cb566"
alistairncoles,2016-01-27 13:50:57,https://api.github.com/repos/openstack/swift/git/commits/30d74af6534b754e6ad9bfdcbff4ec494277ca83,30d74af6534b754e6ad9bfdcbff4ec494277ca83,"Insert versioned_writes in correct pipeline position

If not explicitly configured the versioned_writes middleware
should be auto-inserted in the pipeline after slo and dlo, which
is where the versioned_writes filter section's comments say it
should be in proxy-server.conf-sample. At the moment it can end up
being placed ahead of slo and dlo if they have been explicitly
configured, which results in the linked bug manifesting.

Closes-Bug: #1537042
Change-Id: I6ac95a331f4ef0d4887311940acc6f8bc00fb4eb"
cschwede,2016-02-02 08:38:55,https://api.github.com/repos/openstack/swift/git/commits/ccdf4a9f309af5fe1401a6e4b776b08c3f6a655c,ccdf4a9f309af5fe1401a6e4b776b08c3f6a655c,"Document slow option in etc/object-server.conf

Change-Id: Ic9940b0b830a468887878f7b0d7ca42c2cbbebd5"
clayg,2016-02-01 23:30:59,https://api.github.com/repos/openstack/swift/git/commits/b19dc1ddecdc68760ca2f5a2b7b4bbdce2199b35,b19dc1ddecdc68760ca2f5a2b7b4bbdce2199b35,"Always fix devices with multiple part-replica assignments

I've found that given a sufficiently bad replica2part2dev table we can
accidently not entirely fix palcement when more than two replicas of a
part are assigned to the duplicate devices.

It shows up most on > 3 replica rings when you have two *different*
devices both holding two replicas.  But you can see it on a three
replica ring when all three replicas are assigned to the same device.

Change-Id: Ieb213c1a259815a2ed657291242919cda568c7b5"
alistairncoles,2016-01-29 14:22:19,https://api.github.com/repos/openstack/swift/git/commits/c7e5e125003de1a0f288f79783e9a41650e6f686,c7e5e125003de1a0f288f79783e9a41650e6f686,"Enable in-process func tests to optionally use fast-post

Running functional tests in the in-process mode uses
the default value for proxy-server object_post_as_copy,
which is True. This patch adds support for an environment
variable to change this value to False so that the fast-post
mode is tested when running in-process functional tests.

The patch also adds a new tox environment func-in-process-fast-post
which forces in-process functional testing with
object_post_as_copy=False.

The motivation for this change, apart from enabling configurable
local testing, is to put support in place for an upstream CI job
that will actually functionally test the fast-post mode, which is
otherwise only covered by unit tests.

There are currently two gate jobs that run the functional tests:

- gate-swift-dsvm-functional runs the tests *twice* against a
  devstack swift service, once using tempauth and once using
  keystoneauth. The devstack swift service uses the default
  object_post_as_copy=True.

- gate-swift-tox-func runs the func tests in in-process mode
  which also uses tempauth and object_post_as_copy=True. This
  duplicates one of the config scenarios above.

With this change either the gate-swift-tox-func job or a new job
could run the functional tests using object_post_as_copy=False.

Change-Id: Ia37f6df1dc38e44ef7404fbf0a52f6fc22fae0c2"
qwren,2016-02-01 08:44:52,https://api.github.com/repos/openstack/swift/git/commits/4ba290bac19b1b6e8f709848fd35cda33b8bd1c4,4ba290bac19b1b6e8f709848fd35cda33b8bd1c4,"Replace exit() by sys.exit()

sys.exit() is considered good to use here.

Change-Id: I365b0dbb50c8f1953b41665ba49145ac6db1b24f"
qwren,2016-02-01 09:15:32,https://api.github.com/repos/openstack/swift/git/commits/9aff76bd18e609eb657db14f2d60e605ee28d472,9aff76bd18e609eb657db14f2d60e605ee28d472,"fix typo

informations -> information

Change-Id: I6bcb9bb9fd24b873b49de4a686b223550dd703ac"
onovy,2016-01-29 21:46:50,https://api.github.com/repos/openstack/swift/git/commits/02c06585e6e0403d1a983fccaba5093e3d3fa7c5,02c06585e6e0403d1a983fccaba5093e3d3fa7c5,"Renamed variable for better code readability

Change-Id: I22d8db0dd9edc39672fc9997895a24f669975e15"
alistairncoles,2016-01-29 15:28:56,https://api.github.com/repos/openstack/swift/git/commits/595ec464e3fdc5a766eee9baa06edd074576c73e,595ec464e3fdc5a766eee9baa06edd074576c73e,"Trivial fix for sphinx warnings

Including a * in the param name causes a sphinx warning,
messes up the html formatting, and strictly the * isn't part of
the param name.

Change-Id: I6be6a7aa2a371eaae9f8e501435838c1e15f4a1c"
alistairncoles,2016-01-28 16:47:37,https://api.github.com/repos/openstack/swift/git/commits/a1776b9c1f23fbd604114b377434e4269d2f1a2e,a1776b9c1f23fbd604114b377434e4269d2f1a2e,"Let equal Timestamps not be unequal

Make the result of Timestamp(x) != Timestamp(x) be False.

In python 2.7 this requires the __ne__ method to be defined [1].
""The truth of x==y does not imply that x!=y is false."" The
functools.total_ordering decorator does not autocreate a __ne__
method.

In python 3 the __ne__ method is not required [2]. ""By default,
__ne__() delegates to __eq__() and inverts the result"".

This patch puts back the __ne__ method removed in [3]. Whilst no tests
fail on master with python2.7, they do on this patch [4] and it seems
dangerous to have this absurd behaviour lurking.

[1] https://docs.python.org/2/reference/datamodel.html#object.__ne__
[2] https://docs.python.org/3.4/reference/datamodel.html#object.__ne__
[3] Change-Id: Id26777ac2c780316ff10ef7d954c48cc1fd480b5
[4] Change-Id: Ia597cd460bb5fd40aa92e886e3e18a7542603d01

Change-Id: I01fbfa310df3c74390f8e8c2e9ffff81bbf05e47"
thomasgoirand,2016-01-28 09:15:28,https://api.github.com/repos/openstack/swift/git/commits/c3886eea15f11104764fb201e85202dd871c3027,c3886eea15f11104764fb201e85202dd871c3027,"Fix a few English mistakes in man

These errors are producing lintian warnings, so fixing them
helps having less errors when checking for Debian packages.

Change-Id: Iff99a8d5f2276515f42d758d110a43cae757db28"
alistairncoles,2016-01-27 15:35:40,https://api.github.com/repos/openstack/swift/git/commits/400cc707273bab0b70a3cdf5dec1c55c2edc4e22,400cc707273bab0b70a3cdf5dec1c55c2edc4e22,"Remove a print statement from tests

Change-Id: I213b7e4bc4f9e6de76ebab572c377af61072d9c5"
osanai-hisashi,2016-01-22 05:19:06,https://api.github.com/repos/openstack/swift/git/commits/c871e423ef0bed6c774693af3d54750235d6ce1f,c871e423ef0bed6c774693af3d54750235d6ce1f,"Add unit tests for checking responses in AccountController

This patch provides unit tests to check responses for various situation
in three/four replicas env.

Change-Id: I1af48728b28da9780a2a78f3110e1c7487047ff8"
alistairncoles,2016-01-27 10:18:37,https://api.github.com/repos/openstack/swift/git/commits/e45d30d6b7b596b80c63e75018ad07582d705ee1,e45d30d6b7b596b80c63e75018ad07582d705ee1,"Remove unnecessary code from test_account.py

Change-Id: Ia197ba08a606421244d5b94a900bdc39bc5da647"
bloodeagle40234,2016-01-27 04:16:08,https://api.github.com/repos/openstack/swift/git/commits/f39cffbb5f7f1853f7f67261c4652b9875d302be,f39cffbb5f7f1853f7f67261c4652b9875d302be,"Follow up mem_server diskfile fixes

This is a follow-up patch for change
https://review.openstack.org/#/c/270422

That patch fixes POST behavior on object mem server and adds
some tests for last-modified. However, that one doesn't check
the POST updates the last-modified on object server.

This patch adds assertions to make sure the actual POST semantics.

*bonus* Add docs and cleanup variable name to fit actual instance
at mem diskfile.

Change-Id: I78185cdfb0ea604b2122821870ec34322236f48d"
KazuhiroMiyahara,2016-01-21 05:18:31,https://api.github.com/repos/openstack/swift/git/commits/9ef15453fadb847db0f0fb92e935785b544da3fc,9ef15453fadb847db0f0fb92e935785b544da3fc,"Fix handling of ""Permission Denied"" error from NamedTemporaryFile function

If ""Permission Denied"" has happen in NamedTemporaryFile function in
dump_recon_cache method, swift will log a message of reference to a variable
without assignment and not log a message of ""Permission Denied"".
This patch fixes the handling and add an unit test.

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>
Change-Id: Iafdd94905e9e9c81f5966a923324b50c18fcf592"
clayg,2015-08-22 01:15:25,https://api.github.com/repos/openstack/swift/git/commits/01410129dac6903ce7f486997a48e36072fa0401,01410129dac6903ce7f486997a48e36072fa0401,"Make handoffs_first a more useful ""mode""

Based on experience using handoffs_first and feedback from other
operators it has become clear that handoffs_first is only used during
periods of problematic cluster behavior (e.g. full disks) when
replication attempts are failing to quickly drain off the partitions
from the nodes which they have been rebalanced from.

In order to focus on the most important work (getting handoff partitions
off the node) handoffs_first mode will abort the current replication
sweep before attempting any primary suffix syncing if any of the handoff
partitions were not removed for any reason - and start over with
replication of handoffs jobs as the highest priority.

Note that handoffs_first being enabled will emit a warning on start up,
even if no handoff jobs fail, because of the negative impact it can have
during normal operations by dog piling on a node that was temporarily
unavailable.

Change-Id: Ia324728d42c606e2f9e7d29b4ab5fcbff6e47aea"
clayg,2015-11-12 03:05:09,https://api.github.com/repos/openstack/swift/git/commits/78cfb137d5d3d6f4770923a1fb086adaa9c0676f,78cfb137d5d3d6f4770923a1fb086adaa9c0676f,"Ring Overview updates

Change-Id: Ic5a8ec5be9fec7fa812fdb7b91890d5fc2fbf967"
tipabu,2016-01-25 17:25:20,https://api.github.com/repos/openstack/swift/git/commits/fc9a3852e44b2bf1258fcb24a6c12ecfb2795f44,fc9a3852e44b2bf1258fcb24a6c12ecfb2795f44,"Don't .lower() a literal

It feels silly, and we don't do it for any of the other headers in
headers_to_container_info.

While we're at it, clean up a stray '

Change-Id: I0745038cc3832a77d064e515c37cacbdcb97c4d9
Related-Change: Iea3d06de80210e9e504e296d4572583d7ffabeac"
onovy,2016-01-25 17:20:45,https://api.github.com/repos/openstack/swift/git/commits/5c6576d1eb3c4c042bb46dd48f23d2fd474eba07,5c6576d1eb3c4c042bb46dd48f23d2fd474eba07,"Fixed docs: Title underline too short

Change-Id: If96b0e799a4671e7b7f3f5bea2628db75afa9578"
vstinner,2015-10-19 14:31:12,https://api.github.com/repos/openstack/swift/git/commits/9c403d5e1bb1f404445f1731e3ff1b5c034336a6,9c403d5e1bb1f404445f1731e3ff1b5c034336a6,"Port swift.common.utils.Timestamp to Python 3

* Fix Timestamp.isoformat(): on Python 3, round manually to use the
  same rounding method than Python 2.
* Use @functoos.total_ordering on Timestamp instead of the __cmp__()
  special method. On Python 3, the __cmp__() method is no more used,
  and other special methods must be defined (__eq__, __lt__, etc.).
  Only define __eq__() and __lt__() methods but use
  @functools.total_ordering to generate other methods.
* Fix also a Python 3 issues in swift.common.swob._datetime_property:
  replace (float, int, long) with (float,) + six.integer_types. The
  long type was renamed to int in Python 3.

Change-Id: Id26777ac2c780316ff10ef7d954c48cc1fd480b5"
a-welleck,2016-01-25 16:03:18,https://api.github.com/repos/openstack/swift/git/commits/c790db89369221473bcbfc23f301424ab8d30d60,c790db89369221473bcbfc23f301424ab8d30d60,"Additional step for Debugging Issues in SAIO

Adding an additional debugging step for the SAIO ""Debugging Issues""
section. Adding step to check if memcache is running and to start
it if its not.

Change-Id: I0bfa563f595dbefcf907494451fad45e6310db88"
vstinner,2015-10-19 15:22:24,https://api.github.com/repos/openstack/swift/git/commits/d47155af262d52c284f262bf6c303d0587000bba,d47155af262d52c284f262bf6c303d0587000bba,"Add __next__() methods to utils iterators for py3

On Python 3, next(obj) calls obj.__next__(), not obj.next(). Add an
alias from __next__() to next() to be compatible with Python 2 and
Python 3.

Change-Id: Ida104d3bd7cdba557e523f18df43d56847060054"
tipabu,2016-01-22 21:31:34,https://api.github.com/repos/openstack/swift/git/commits/0f8319dceb2d21a9d1ec74f78203b033f25c0969,0f8319dceb2d21a9d1ec74f78203b033f25c0969,"Use calendar.timegm not time.mktime

time.mktime produces a POSIX timestamp that takes into account the local
timezone, but we're parsing a Last-Modified header with a known (GMT)
timezone. As a result, if one proxy-server is configured with a timezone
other than GMT/UTC, we may have previous versions in the wrong order.

Change-Id: I320e2368b243f4245725e73bfabc7ad19bc5bacb"
peluse,2016-01-21 20:30:15,https://api.github.com/repos/openstack/swift/git/commits/72d972166ff66d3c5313356c1e1e3984fee9f012,72d972166ff66d3c5313356c1e1e3984fee9f012,"Update AUTHORS

+Luse core emeritus

Change-Id: Ie175f410ddc24a2d5e64bc191364418a3c450f3f"
alistairncoles,2016-01-20 18:14:16,https://api.github.com/repos/openstack/swift/git/commits/2f8105e5fcf4ecee2202797ba1ab48fa8fb1a1f6,2f8105e5fcf4ecee2202797ba1ab48fa8fb1a1f6,"Fix bug in mem_diskfile write_metadata method

The mem_diskfile DiskFile.write_metadata method was
apparently never called in any existing test, as if it
were it would blow up as reported in the bug.

This patch fixes the method and adds a test that
exercises it. The test addition itself should be useful
since it verifies the behaviour of Last-Modified after
POSTs to an object.

Drive-by fixes for bad docstring and undefined references
in the _quarantine method.

Change-Id: I17fd62e5f02be5b48bfd9ba7fa25315e30a0a4bf
Closes-Bug: #1536037"
tipabu,2016-01-21 00:06:26,https://api.github.com/repos/openstack/swift/git/commits/e13a03c379273ee10e678818078b9c40a96a7dc9,e13a03c379273ee10e678818078b9c40a96a7dc9,"Stop overriding builtin range

Change-Id: I315f8b554bb9e96659b455f4158f074961bd6498"
notmyname,2016-01-20 23:19:35,https://api.github.com/repos/openstack/swift/git/commits/0a404def7d54d1ef1c85c11a378052260c4fda4c,0a404def7d54d1ef1c85c11a378052260c4fda4c,"remove unneeded duplicate dict keys

Change-Id: I926d7aaa9df093418aaae54fe26e8f7bc8210645"
notmyname,2016-01-19 22:50:24,https://api.github.com/repos/openstack/swift/git/commits/221f94fdd39fd2dcd9a2e5565adceab615d55913,221f94fdd39fd2dcd9a2e5565adceab615d55913,"authors and changelog updates for 2.6.0

Change-Id: Idd0ff9e70abc0773be183c37cd6125fe852da7c0"
smerritt,2015-12-09 00:36:05,https://api.github.com/repos/openstack/swift/git/commits/58359269b0e971e52f0eb7f97221566ca2148014,58359269b0e971e52f0eb7f97221566ca2148014,"Fix memory/socket leak in proxy on truncated SLO/DLO GET

When a client disconnected while consuming an SLO or DLO GET response,
the proxy would leak a socket. This could be observed via strace as a
socket that had shutdown() called on it, but was never closed. It
could also be observed by counting entries in /proc/<pid>/fd, where
<pid> is the pid of a proxy server worker process.

This is due to a memory leak in SegmentedIterable. A SegmentedIterable
has an 'app_iter' attribute, which is a generator. That generator
references 'self' (the SegmentedIterable object). This creates a
cyclic reference: the generator refers to the SegmentedIterable, and
the SegmentedIterable refers to the generator.

Python can normally handle cyclic garbage; reference counting won't
reclaim it, but the garbage collector will. However, objects with
finalizers will stop the garbage collector from collecting them* and
the cycle of which they are part.

For most objects, ""has finalizer"" is synonymous with ""has a __del__
method"". However, a generator has a finalizer once it's started
running and before it finishes: basically, while it has stack frames
associated with it**.

When a client disconnects mid-stream, we get a memory leak. We have
our SegmentedIterable object (call it ""si""), and its associated
generator. si.app_iter is the generator, and the generator closes over
si, so we have a cycle; and the generator has started but not yet
finished, so the generator needs finalization; hence, the garbage
collector won't ever clean it up.

The socket leak comes in because the generator *also* refers to the
request's WSGI environment, which contains wsgi.input, which
ultimately refers to a _socket object from the standard
library. Python's _socket objects only close their underlying file
descriptor when their reference counts fall to 0***.

This commit makes SegmentedIterable.close() call
self.app_iter.close(), thereby unwinding its generator's stack and
making it eligible for garbage collection.

* in Python < 3.4, at least. See PEP 442.

** see PyGen_NeedsFinalizing() in Objects/genobject.c and also
   has_finalizer() in Modules/gcmodule.c in Python.

*** see sock_dealloc() in Modules/socketmodule.c in Python. See
    sock_close() in the same file for the other half of the sad story.

This closes CVE-2016-0738.

Closes-Bug: 1493303

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>

Change-Id: Ib86c4c45641485ce1034212bf6f53bb84f02f612"
vstinner,2015-10-19 14:45:33,https://api.github.com/repos/openstack/swift/git/commits/d9b22ac51cca579e97ec7bd5a6df3ad7bf56c3bf,d9b22ac51cca579e97ec7bd5a6df3ad7bf56c3bf,"Port parse_mime_headers() to Python 3

Port swift.common.utils.parse_mime_headers() to Python 3:

* On Python 3, tries to decode headers from UTF-8. If an header was
  was not encoded to UTF-8, decode the header from Latin1.
* Update the parse_mime_headers() tests: on Python 3, HTTP header
  values are Unicode strings.

This change is a follow-up of the change
Ia5ee2ead67e36e8c6416183667f64ae255887736.

Change-Id: I042dd13e9eb0e9844ccd832d538cdac84359ed42"
vstinner,2015-10-09 15:56:39,https://api.github.com/repos/openstack/swift/git/commits/cec2aa0b4dbf0e1bf2de62945f5abdf494925a8e,cec2aa0b4dbf0e1bf2de62945f5abdf494925a8e,"py3: Use the six module in the xprofile middleware

* Replace bytes_() with a isinstance(content, six.text_type)
  and content.encode('utf-8')
* Get parse_qs() from six.moves.urllib.parse

Change-Id: I4a506975814bff098ade25c950c154e50dc9626e"
smerritt,2016-01-19 23:33:13,https://api.github.com/repos/openstack/swift/git/commits/bc4b298b6e208d3188641712c9d66ae82d172c14,bc4b298b6e208d3188641712c9d66ae82d172c14,"Fix a comment's indentation

Change-Id: I34514525b606cf82767ddce7769bc42fa5457717"
vstinner,2015-10-19 14:38:24,https://api.github.com/repos/openstack/swift/git/commits/6c32da14f48b435aa4e5efea48904bd288a532a2,6c32da14f48b435aa4e5efea48904bd288a532a2,"Port FileLikeIter to Python 3

Port FileLikeIter and _MultipartMimeFileLikeObject and
swift.common.utils to Python 3:

* Add a __next__() alias to the next() method. On Python 3, the
  next() method is no more used, __next__() is required.
* Use literal byte strings: FileLikeIter _MultipartMimeFileLikeObject
  are written to handle binary files.
* test_close(): replace .FileLikeIter('abcdef') with
  FileLikeIter([b'a', b'b', b'c']). On Python 3, list(b'abc') returns
  [97, 98, 99], whereas ['a', 'b', 'c'] is returned on Python 2.
* Update unit FileLikeIter tests to use byte strings.

Change-Id: Ibacddb70b22f624ecd83e374749578feddf8bca8"
smerritt,2015-11-12 19:34:44,https://api.github.com/repos/openstack/swift/git/commits/caa127d59a63a25cc6d08e985e536f90300a6156,caa127d59a63a25cc6d08e985e536f90300a6156,"Monkeypatch everything the same

There's three spots in the code where eventlet monkeypatches
things. In one place, it was monkeypatching socket and thread; in the
other two, only socket. This commit monkeypatches socket and thread
everywhere.

Hopefully, this lets us avoid code that, for example, works in the
object server but fails in the object updater.

Change-Id: Ia30d069c5ac89f4bfbe52233d03d96738144b614"
sivakrishnan-intel,2015-12-04 17:43:00,https://api.github.com/repos/openstack/swift/git/commits/3a0486e532f22af0d3c8a5c5d78613c22e786ff6,3a0486e532f22af0d3c8a5c5d78613c22e786ff6,"Deleted comment about part power in FakeRing

Deleted comment about parameter part power in Class FakeRing as its
behavior got dropped in I8bfc388a04eff6491038991cdfd7686c9d961545.

Change-Id: Iec7d2565a77e48493b0056021066d8d8eab65d0b
Closes-Bug:  #1488704"
notmyname,2016-01-19 18:30:30,https://api.github.com/repos/openstack/swift/git/commits/999479f9b17b42ccc5da54ce01651960cf7cf970,999479f9b17b42ccc5da54ce01651960cf7cf970,"Bump eventlet min version to 0.17.4

IPv6 support in Swift is dependent on IPv6 support in eventlet.
eventlet itself only claims support for IPv6 post v0.17
(https://github.com/eventlet/eventlet/issues/8). This update matches
the OpenStack global requirements version.

Change-Id: I9d8433cdd3bf7d7a93b8f50b991cc21721a80d22"
osanai-hisashi,2015-07-16 00:35:37,https://api.github.com/repos/openstack/swift/git/commits/09b188f03c4a40838ea6b3e54e0714d93077b066,09b188f03c4a40838ea6b3e54e0714d93077b066,"Add functional test for access control (RBAC) with Keystone

This patch adds test cases for PUT, DELETE, GET, HEAD, POST and OPTIONS
requests to accounts, containers and objects using various combinations
of users/projects, roles and/or service tokens.

Change-Id: Iea8141ac74ad949a3ae7fa47fda3135d0f2612f6"
tipabu,2015-12-16 23:46:13,https://api.github.com/repos/openstack/swift/git/commits/bf10974cdefffdaaebc58d21e8a9912638a0405a,bf10974cdefffdaaebc58d21e8a9912638a0405a,"Expose token expiration time in tempauth auth response

Previously, we gave no indication of when a token would expire. Users
would have to just use it until it stopped working, then re-auth.
Now, a successful auth response will include a new header,
X-Auth-Token-Expires, with the number of seconds remaining until the
token is invalid. This allows the client to attempt to re-auth before
sending a request that will definitely fail.

For comparison, swauth already uses the X-Auth-Token-Expires header with
identical semantics. Additionally, Keystone (v2 and v3) already exposes
expiration times in its JSON responses. The security impact should be
minimal.

Change-Id: I5a4a74276bc0df6dda94e4bc150065c0d77de0eb"
clayg,2016-01-15 19:44:21,https://api.github.com/repos/openstack/swift/git/commits/165fa1fd40b5e4b13cf5188712593e2275bef821,165fa1fd40b5e4b13cf5188712593e2275bef821,"add test for zero weight region get_more_nodes

Change-Id: If537981e8deadd9c3528dcb30a15011c7781e334"
smerritt,2016-01-15 01:26:01,https://api.github.com/repos/openstack/swift/git/commits/5d449471b12c67b31ebb5a383d9bb35bace36213,5d449471b12c67b31ebb5a383d9bb35bace36213,"Remove some Python 2.6 leftovers

Change-Id: I798d08722c90327c66759aa0bb4526851ba38d41"
smerritt,2016-01-14 02:08:45,https://api.github.com/repos/openstack/swift/git/commits/3c0cf549f1e822cce8f905b069b317e676cf306b,3c0cf549f1e822cce8f905b069b317e676cf306b,"Speed up get_more_nodes() when there is an empty zone

The ring has some optimizations in get_more_nodes() so that it can
find handoffs that span all the regions/zones/et cetera and then stop
looking. The stopping is the important part.

Previously, it would quickly find a handoff in each unused region,
then spend way too long looking for more unused regions; the same was
true for zones, IPs, and so on. Thus, in commit 9cd7c6c, we started
counting regions and zones, then stopping when we found them all.

This count included all regions and zones in the ring, regardless of
whether or not there were actually any parts assigned or not. In rings
with an empty region, i.e. a region for which there are only
zero-weight devices, get_more_nodes() would be very slow.

This commit ignores devices with no assigned partitions when counting
regions, zones, and so forth, thus greatly speeding things up.

The output of get_more_nodes() is unchanged. This is purely an
optimization.

Closes-Bug: 1534303

Change-Id: I4a5c57205e87e1205d40fd5d9458d4114e524332"
cinlk,2016-01-14 16:31:51,https://api.github.com/repos/openstack/swift/git/commits/70047709fc9885df7019f791e17a3240682cc6cb,70047709fc9885df7019f791e17a3240682cc6cb,"Drop python 2.6 support

Change-Id: Id6329c863dacb189fccfc304453ed7b6f9607c14"
onovy,2016-01-12 20:26:33,https://api.github.com/repos/openstack/swift/git/commits/a4c2fe95ab2fbe59379a69914ed0fac49c28efbb,a4c2fe95ab2fbe59379a69914ed0fac49c28efbb,"Allow to change auditor sleep interval in config

Change-Id: Ic451c5e0b686509f8982ed1bf65a223a2d77b9a0"
onovy,2015-11-29 17:46:47,https://api.github.com/repos/openstack/swift/git/commits/edc823e8030640184071fee4920d34f9a1cc6b3e,edc823e8030640184071fee4920d34f9a1cc6b3e,"Show UTC time in swift-recon.

It's not consistent now for example local time in replication part and
UTC time at begging of line. Use _ptime in swift-recon for all time
printing and this function returns UTC now.
Change-Id: I732d9851db157130a08e825e8093b7e244b63e9c"
tipabu,2016-01-12 22:18:30,https://api.github.com/repos/openstack/swift/git/commits/fa5b32d27964478dfcccf71155d2aaa946c561f0,fa5b32d27964478dfcccf71155d2aaa946c561f0,"Make object-auditor storage-policy-aware

Previously, the object-auditor would always use a (replication)
DiskFileManager when walking through AuditLocations, which would cause
it to skip EC fragment archives with a warning like:

    Unexpected file <hash_path>/1452557187.03610#3.data:
    Invalid Timestamp value in filename '1452557187.03610#3.data'

Now, the AuditLocation's policy will be used to find an appropriate
manager to get the diskfile. Additionally, several .commit()s were added
to the auditor tests so the .durable will be written, which is required
when auditing EC fragment archives.

Change-Id: I960e7d696fd9ad704ca1872b4ac821f9078838c7
Closes-Bug: 1533002"
timuralp,2016-01-09 02:42:33,https://api.github.com/repos/openstack/swift/git/commits/725a166ebd3fde2c34f2c9578ff6f9911cf206d7,725a166ebd3fde2c34f2c9578ff6f9911cf206d7,"Make _get_addr() method a function in utils.

The patch moves the MemcacheConnPool._get_addr() method a function in
swift.common.utils. The function is renamed to parse_socket_string()
and the documentation is updated accordingly. The test for it has also
been moved.

Change-Id: Ida65b2fded28d0a059e668646f5b89714298f348"
timuralp,2016-01-08 22:54:56,https://api.github.com/repos/openstack/swift/git/commits/0647aea9c5fc95f0860758cc54bc23f965da460d,0647aea9c5fc95f0860758cc54bc23f965da460d,"Fail early if the memcache address is invalid.

In cases when the memcache address is invalid, we should fail early.
This patch addresses the cases when the IPv6 addresses are not
enclosed in ""[]"". It does not, however, fix the case of an invalid
hostname. These improvements could also be added to the _get_addr()
method.

Change-Id: I4743dcda45a1fc1640989325c4a2e1fea591fc69"
clayg,2016-01-09 00:15:54,https://api.github.com/repos/openstack/swift/git/commits/33476460239c9cdb08dd8065d22d84a4717da7be,33476460239c9cdb08dd8065d22d84a4717da7be,"fixups for ipv6 memcache_servers docs

Change-Id: I20d91c1e276014eaf210fa9eb43788bc17f4e8df"
smerritt,2016-01-13 00:42:06,https://api.github.com/repos/openstack/swift/git/commits/d5ff5447be30b44bf4acc8b912b6241a44f710be,d5ff5447be30b44bf4acc8b912b6241a44f710be,"Install liberasurecode packages in SAIO.

Change-Id: If673afa2b61a3e388612debf4860d561960963a3"
clayg,2016-01-12 00:25:50,https://api.github.com/repos/openstack/swift/git/commits/1292361176aec385137dd5873c5cc9714de1fa17,1292361176aec385137dd5873c5cc9714de1fa17,"functest for x-timestamp validation

Change-Id: I05af7d837af00cd1059a8912df05c131a52ffb90"
tipabu,2016-01-09 00:38:31,https://api.github.com/repos/openstack/swift/git/commits/e6194113a3c81563590eabf8f761ccb988bb917c,e6194113a3c81563590eabf8f761ccb988bb917c,"Validate X-Timestamps

Previously, attempting to PUT a new object with an X-Timestamp header
less than or equal to zero (ie, for a timestamp on or before 1970-01-01
00:00:00) would cause the object-server to 500.

While we're at it, cap X-Timestamp at 9999999999 (2286-11-20 17:46:40)
so we don't get an eleventh digit before the decimal point.

Closes-Bug: 1532471
Change-Id: I23666ec8a067d829eaf9bfe54bd086c320b3429e"
blmartin,2015-12-14 21:28:17,https://api.github.com/repos/openstack/swift/git/commits/1f3304c5153e01988b8f4493875b6489e93f76d0,1f3304c5153e01988b8f4493875b6489e93f76d0,"Print min_part_hours lockout time remaining

swift-ring-builder currently only displays min_part_hours and
not the amount of time remaining before a rebalance can occur.
This information is readily available and has been displayed
as a quality of life improvement.

Additionally, a bug where the time since the last rebalance
was always updated when rebalance was called regardless of
if any partitions were reassigned. This can lead to partitions
being unable to be reassigned as they never age according to
the time since last rebalance.

Change-Id: Ie0e2b5e25140cbac7465f31a26a4998beb3892e9
Closes-Bug: #1526017"
timuralp,2015-12-16 20:07:27,https://api.github.com/repos/openstack/swift/git/commits/167bb5eeb82886d67c1b382417fb22b8ea85f0d3,167bb5eeb82886d67c1b382417fb22b8ea85f0d3,"Fix IPv6 handling in MemcacheConnPool.

The patch removes the assumption of IPv4-only addresses in the
MemcacheConnPool. The changes are around address handling.
Namely, if a server is specified with an address
[<address>]:port (port is optional), it is assumed to be an IPv6
address [1]. If an IPv6 address is specified without ""[]"", an exception
is raised as it is impossible to parse such addresses correctly.

For testing, memcache can be configured to listen on the link-local,
unique-local, or ::1 (equivalent to 127.0.0.1) addresses. Link-local
addresses are assigned by default to each interface and are of the form
""fe80::dead:beef"". These addresses require a scope ID, which would look
like ""fe80::dead:beef%eth0"" (replacing eth0 with the correct interface).

Unique-local addresses are any addresses in the fc00::/7 subnet. To add
a ULA to an interface use the ""ip"" utility. For example:
""ip -6 address add fc01::dead:beef dev eth0"". Lastly, and probably
simplest, memcache can be configured to listen on ""::1"". The same
address would be used in the swift configuration, e.g. ""[::1]:11211"".

Note: only memcached version 1.4.25 or greater supports binding to an
IPv6 address.

Fixes #1526570

[1] IPv6 host literals:
https://tools.ietf.org/html/rfc3986#section-3.2.2

Change-Id: I8408143c1d47d24e70df56a08167c529825276a2"
bloodeagle40234,2016-01-08 09:29:11,https://api.github.com/repos/openstack/swift/git/commits/b35f3c90bde8a7ccb50440bda5800cbb8274a5a1,b35f3c90bde8a7ccb50440bda5800cbb8274a5a1,"Add note COPY with conditional headers

Swift now supports Range header for COPY (or PUT with X-Copy-From)
to make a partial copied object. This patch adds the note to show
it obviously supported in Swift community.

Change-Id: I6bf28f0932c90e7b305cd61aabce4ed028ae691e
Partial-Bug: #1532126"
osanai-hisashi,2015-12-11 09:26:34,https://api.github.com/repos/openstack/swift/git/commits/23c7a58f8f1412c28b3a16b79be09c224c9f7d55,23c7a58f8f1412c28b3a16b79be09c224c9f7d55,"Fix ClientException handling in Container Sync

swift/container/sync.py uses swift.common.internal_client.delete_object
and put_object and expected these methods raise ClientException.
But delete_object and put_object never raise the exception so this patch
raises ClientException when urllib2 library raises HTTPError.

Co-Authored-By: Eran Rom <eranr@il.ibm.com>
Closes-Bug: #1419901
Change-Id: I58cbf77988979a07998a46d9d81be84d29b0d9bf"
timuralp,2015-07-15 21:22:45,https://api.github.com/repos/openstack/swift/git/commits/432e280aef1ba08bbb8dc239260604024325c9f6,432e280aef1ba08bbb8dc239260604024325c9f6,"Correctly handle keys starting with the delimiter.

When processing keys where the names start with the delimiter
character, swift should list only the delimiter character. To get the
list of nested keys, the caller should also supply the prefix which is
equal to the delimiter.

Added a functional test and unit tests to verify this behavior.

Fixes Bug: 1475018

Change-Id: I27701a31bfa22842c272b7781738e8c546b82cbc"
HugoKuo,2016-01-06 06:33:23,https://api.github.com/repos/openstack/swift/git/commits/e75888b281d59df0889f28d0b32241dac3a34aa2,e75888b281d59df0889f28d0b32241dac3a34aa2,"Add more description for write_affinity_node_count parameter in the doc.

Change-Id: Iad410a2be4f9a2cd5c53e860b9f91993aa7f2369
Closes-Bug: #1531173"
onovy,2016-01-05 19:20:15,https://api.github.com/repos/openstack/swift/git/commits/f53cf1043d078451c4b9957027bf3af378aa0166,f53cf1043d078451c4b9957027bf3af378aa0166,"Fixed few misspellings in comments

Change-Id: I8479c85cb8821c48b5da197cac37c80e5c1c7f05"
onovy,2015-09-30 17:08:09,https://api.github.com/repos/openstack/swift/git/commits/3b1591f235f4b85796917507be5e7fd80365ff9e,3b1591f235f4b85796917507be5e7fd80365ff9e,"swift-init: New option kill-after-timeout

This option send SIGKILL to daemon after kill_wait period.
When daemon hangs and doesn't respond to SIGTERM/SIGHUP
there is no way to stop it using swift-init now. Classic
init scripts in Linux kills hanged process after grace
period and this patch add same behaviour. This is most
usefull when using ""restart"" on hanged daemon.

Change-Id: I8c932b673a0f51e52132df87ea2f4396f4bba9d8"
glongwave,2015-12-26 05:13:37,https://api.github.com/repos/openstack/swift/git/commits/79222e327f9df6335b58e17a6c8dd0dc44b86c17,79222e327f9df6335b58e17a6c8dd0dc44b86c17,"Fix AttributeError for LogAdapter

LogAdapter object has no attribute 'warn' but has attribute
'warning'.

Closes-Bug: #1529321
Change-Id: I0e0bd0a3dbc4bb5c1f0b343a8809e53491a1da5f"
osanai-hisashi,2015-12-25 05:00:16,https://api.github.com/repos/openstack/swift/git/commits/4691d0592ff3deeea2713195312bf1effd5a7a7b,4691d0592ff3deeea2713195312bf1effd5a7a7b,"Add object replicator's succeeded and failed counts in log

account-replicator and container-replicator outputted the
following info in log.
info account-replicator: 17 successes, 4 failures
info container-replicator: 178 successes, 29 failures

But there is no output info for object-replicator. This info
is important to check replicator's status from log.

So this patch adds object-replicator's succeeded and failed
counts in log like account-replicator and container-replicator.

Change-Id: I7fbaf161540bdb06c0a65a1032aae83764bd970c"
codevulture,2015-08-02 17:17:42,https://api.github.com/repos/openstack/swift/git/commits/684c4c04592278a280032002b5313b171ee7a4c0,684c4c04592278a280032002b5313b171ee7a4c0,"Python 3 deprecated the logger.warn method in favor of warning

DeprecationWarning: The 'warn' method is deprecated, use 'warning'
instead

Change-Id: I35df44374c4521b1f06be7a96c0b873e8c3674d8"
osanai-hisashi,2015-12-16 09:50:37,https://api.github.com/repos/openstack/swift/git/commits/d0a026fcb8e8a9f5475699cc56e1998bdc4cd5ca,d0a026fcb8e8a9f5475699cc56e1998bdc4cd5ca,"Fix duplication for headers in Access-Control-Expose-Headers

There are following problems with Access-Control-Expose-Headers.

* If headers in X-Container-Meta-Access-Control-Expose-Headers are
  configured, the headers are kept with case-sensitive string.
  Then a CORS request comes, the headers are merged into
  Access-Control-Expose-Headers as case-sensitive string even if
  there is a same header which is not case-sensitive string.

* Access-Control-Expose-Headers is handled by a list.
  If X-Container/Object-Meta-XXX is configured in container/object
  and X-Container-Meta-Access-Control-Expose-Headers, same header
  is listed in Access-Control-Expose-Headers.

This patch provides a fix for the problems.

Change-Id: Ifc1c14eb3833ec6a851631cfc23008648463bd81"
wbhuberIBM,2015-11-20 18:09:26,https://api.github.com/repos/openstack/swift/git/commits/0bcd7fd50ec0763dcb366dbf43a9696ca3806f15,0bcd7fd50ec0763dcb366dbf43a9696ca3806f15,"Update Erasure Coding Overview doc to remove Beta version

The major functionality of EC has been released for Liberty and
the beta version of the code has been removed since it is now
in production.

Change-Id: If60712045fb1af803093d6753fcd60434e637772"
alistairncoles,2015-12-18 11:24:34,https://api.github.com/repos/openstack/swift/git/commits/84ba24a75640be4212e0f984c284faf4c894e7c6,84ba24a75640be4212e0f984c284faf4c894e7c6,"Fix rst errors so that html docs are complete

rst table format errors don't break the gate job
but do cause sections of the documents to go missing
from the html output.

Change-Id: Ic8c9953c93d03dcdafd8f47b271d276c7b356dc3"
bloodeagle40234,2015-12-09 06:27:44,https://api.github.com/repos/openstack/swift/git/commits/9fe0e25604dff35db7eab1bca312821a81db6c1d,9fe0e25604dff35db7eab1bca312821a81db6c1d,"Sleep enough for trampoline

When running unite test suite in local poor resource environment,
sometimes test/unit/proxy/test_server.py fails due to a lack of
waiting time to trampoline of eventlet thread.

This patch enables to sleep 1 more second when it doesn't seem
to have enough time to tranpoline.

Change-Id: I0bbc8fc245919d3c0a071ff87ff6e20b8d58f9b8"
matthewoliver,2015-12-16 06:19:24,https://api.github.com/repos/openstack/swift/git/commits/87f7e907ee412f5847f1f9ffca7a566fb148c6b1,87f7e907ee412f5847f1f9ffca7a566fb148c6b1,"Pass HTTP_REFERER down to subrequests

Currently a HTTP_REFERER (Referer) header isn't passed down to
subrequests. This means *LO subrequests to segment containers
return a 403 on a *LO GET when accessed by requests using referer
ACLs.
Currently the only way around referer access to *LO's is to make the
segments container world readable.

This change makes sure the referer header is passed into subrequests
allowing a segments container to only need to be locked down with
the same referer as the *LO container.

This is a 1 line change to code, but also adds a unit and 2 functional
functional tests (one for DLO and one for SLO).

Change-Id: I1fa5328979302d9c8133aa739787c8dae6084f54
Closes-Bug: #1526575"
alistairncoles,2015-12-17 12:08:45,https://api.github.com/repos/openstack/swift/git/commits/e15960a5d86e00a7d420edc4af034b27da0af8fd,e15960a5d86e00a7d420edc4af034b27da0af8fd,"Fix incorrect kwarg in auth middleware example

When calling memcache_client.set(), timeout was deprecated
and is now removed as a keyword arg, use time instead.

Change-Id: Iedbd5b064853ef2b386963246f639fbcd3931cd3"
alistairncoles,2015-12-16 15:28:25,https://api.github.com/repos/openstack/swift/git/commits/169a7c7f9e12ebc9933bd9ca4592e13b0de8b47b,169a7c7f9e12ebc9933bd9ca4592e13b0de8b47b,"Fix func test --until-failure and --no-discover options

This patch changes functional test classes to subclass
unittest2.TestCase rather than unittest.TestCase.
This fixes errors when attempting to use

tox -e func -- -n <test_path_including_test_method>

and

tox -e func -- --until-failure

Also migrate from using nose.SkipTest to unittest2.SkipTest

Change-Id: I903033f5e01833550b2f2b945894edca4233c4a2
Closes-Bug: 1526725
Co-Authored-By: Ganesh Maharaj Mahalingam <ganesh.mahalingam@intel.com>"
bloodeagle40234,2015-12-16 02:55:41,https://api.github.com/repos/openstack/swift/git/commits/b68311db95860ac1cab585a5ab66bd3b3abb765e,b68311db95860ac1cab585a5ab66bd3b3abb765e,"Fix reconciler test to calc lastmodified as UTC

Swift reconciler calculates the last-modified date as UTC but
current test calculates it as local time zone. It triggers unit
test failure in non-UTC environment.

This patch fixes the test to calculate the last-modified as UTC
as well.

Change-Id: Ia0053f350daf2cb8c61ac01a933924b6e4b0cb37
Closes-Bug: #1526588"
venkatesh551,2015-11-10 03:22:38,https://api.github.com/repos/openstack/swift/git/commits/1bb665331af92422290fb585de7cb6a2497236e6,1bb665331af92422290fb585de7cb6a2497236e6,"remove unused parameters in the method

make the helper methods as private by using convention

Change-Id: I73b9604f8d5a0e85d012aac42b7963b618f5ad97"
hurricanerix,2015-08-07 23:14:13,https://api.github.com/repos/openstack/swift/git/commits/9d7f71d5754c8b45f8e7c6ab80202de09933afb8,9d7f71d5754c8b45f8e7c6ab80202de09933afb8,"Modify functional tests to use ostestr/testr

Defcore uses Tempest, which uses Test Repository.
This change makes it easier for Defcore to pull functional
tests from Swift and run them.  Additionally, using testr
allows tests to be run in parallel.

Concurrency set to 1 for now, >1 causes failures for
reasons that are still TBD.

With switch to ostestr all the server logs are being sent to stdout
which makes it completely unreadable. Suppressing the logs by default
now with a flag to enable it if desired.

Co-Authored-By: John Dickinson <me@not.mn>
Co-Authored-By: Robert Collins <rbtcollins@hpe.com>
Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Ganesh Maharaj Mahalingam <ganesh.mahalingam@intel.com>

Change-Id: I53ef4a116996a772cf1f3abc2eb0ad60047322d5
Related-Bug: 1177924"
alistairncoles,2015-12-15 15:49:42,https://api.github.com/repos/openstack/swift/git/commits/2f4b79233e30d42140bbc07059417443bf7a0757,2f4b79233e30d42140bbc07059417443bf7a0757,"Minor cleanup of repeated identical test assertions

assertDictContainsSubset is being called multiple times with
same arguments in a loop. Since assertDictContainsSubset is
deprecated form python 3.2, replace it with checks on
individual key, value pairs.

Change-Id: I7089487710147021f26bd77c36accf5751855d68"
osanai-hisashi,2015-12-15 02:33:56,https://api.github.com/repos/openstack/swift/git/commits/450737f886050e486f518cdce0c97596ccad848d,450737f886050e486f518cdce0c97596ccad848d,"Fix a typo in development_auth.rst

This patch uses correct name for ""CORS"".

Change-Id: I5fee5c581a2b3adb7596a273baf05708bfa97f79"
notmyname,2015-12-14 18:52:22,https://api.github.com/repos/openstack/swift/git/commits/40476ea0797690d3a90a9ed91906d26103dfa058,40476ea0797690d3a90a9ed91906d26103dfa058,"Document pretend_min_part_hours_passed

Added a docstring for the swift-ring-builder CLI command
""pretend_min_part_hours_passed"". This is a dangerous operation, and
that's why it hasn't been documented, but it can be useful at times.
It should be made known to those who need it.

Change-Id: I45bdbaacbbdda64c7510453e6d93e6d8563e3ecd"
onovy,2015-12-13 20:13:42,https://api.github.com/repos/openstack/swift/git/commits/6ade2908cca696ce1b48a7a19f4d460081fa5b0a,6ade2908cca696ce1b48a7a19f4d460081fa5b0a,"Deprecated param timeout removed from memcached

Change-Id: Idf042a79f0db148bf9f28a9e360cb2a3c18d385a"
yatinkumbhare,2015-12-14 11:34:34,https://api.github.com/repos/openstack/swift/git/commits/b72141979f8766f411d2fea8fe8856b157bc9b91,b72141979f8766f411d2fea8fe8856b157bc9b91,"Fixed inconsistencies in docstrings

Fixed :returns:, and few one-line comments as per
the docstring guide lines.
http://docs.openstack.org/developer/hacking/#docstrings

Change-Id: I36ecf4faf5b49e070c13eb6324841ebcf442524f"
hgangwx,2015-12-11 09:31:36,https://api.github.com/repos/openstack/swift/git/commits/52b534c9d13efde15841402dc86c99685334250f,52b534c9d13efde15841402dc86c99685334250f,"Fix some inconsistency in docstrings

Added colon after "":returns"" according to:
http://docs.openstack.org/developer/hacking

 blank lines are added before the param lines

Change-Id: I008bea270c6a4b7c80d1a84a2cb9fcc9b5a7264a"
vstinner,2015-10-19 14:19:28,https://api.github.com/repos/openstack/swift/git/commits/88c9aed7c846402355a3c7831f34f3e833bbdf11,88c9aed7c846402355a3c7831f34f3e833bbdf11,"Port swift.common.utils.StatsdClient to Python 3

* StatsdClient._send(): on Python 3, encode parts to UTF-8 and
  replace '|' with b'|' to join parts.
* timing_stats(): replace func.func_name with func.__name__. The
  func_name attribute of functions was removed on Python 3, whereas
  the __name__ attribute is available on Python 2 and Python 3.
* Fix unit tests to use bytes

Change-Id: Ic279c9b54e91aabcc52587eed7758e268ffb155e"
onovy,2015-12-11 17:21:28,https://api.github.com/repos/openstack/swift/git/commits/ca2dcc371921aa1aded6161287cc03c0940bf198,ca2dcc371921aa1aded6161287cc03c0940bf198,"Deprecated tox -downloadcache option removed

Caching is enabled by default from pip version 6.0

More info:
https://testrun.org/tox/latest/config.html#confval-downloadcache=path
https://pip.pypa.io/en/stable/reference/pip_install/#caching

Change-Id: I9451a0f0dee5c5a3c0ca0a52f58bd353602661a2"
MahatiC,2015-12-11 06:57:18,https://api.github.com/repos/openstack/swift/git/commits/19c7dbc0ba49ff7e1f59190a7ead9ae9d3d80238,19c7dbc0ba49ff7e1f59190a7ead9ae9d3d80238,"Update versioned_writes doc

Change-Id: Ibe53c79cf49330332112001c02a2a6b078764130"
arcelius,2015-11-05 10:04:14,https://api.github.com/repos/openstack/swift/git/commits/211758f8cb02298fe16e59bf2954a146c6b24b83,211758f8cb02298fe16e59bf2954a146c6b24b83,"Add support for storage policies to have more than one name

This patch alters storage_policy.py to allow storage policies
to have multiple names. Now users are able to add a number of
human-readable aliases for storage policies. Policies now have
a .name (the default name), .aliases (a string of comma
seperated aliases), and .aliases_list (a list of all human
readable names). Policies will always have an .aliases value
if no aliases are set it will contain the default name.
The policy docs and tests have been updated to reflect changes
and policy.get_policy_info has been altered to display the
name and aliases

Change-Id: I02967ca8d7c790595e5ee551581196aa64552eea"
smerritt,2015-12-01 02:06:09,https://api.github.com/repos/openstack/swift/git/commits/7f636a557296ecc6ae4727700cfcf9f82573bd16,7f636a557296ecc6ae4727700cfcf9f82573bd16,"Allow smaller segments in static large objects

The addition of range support for SLO segments (commit 25d5e68)
required the range size to be at least the SLO minimum segment size
(default 1 MiB). However, if you're doing something like assembling a
video of short clips out of a larger one, then you might not need a
full 1 MiB.

The reason for the 1 MiB restriction was to protect Swift from
resource overconsumption. It takes CPU, RAM, and internal bandwidth to
connect to an object server, so it's much cheaper to serve a 10 GiB
SLO if it has 10 MiB segments than if it has 10 B segments.

Instead of a strict limit, now we apply ratelimiting to small
segments. The threshold for ""small"" is configurable and defaults to 1
MiB. SLO segments may now be as small as 1 byte.

If a client makes SLOs as before, it'll still be able to download the
objects as fast as Swift can serve them. However, a SLO with a lot of
small ranges or segments will be slowed down to avoid resource
overconsumption. This is similar to how DLOs work, except that DLOs
ratelimit *every* segment, not just small ones.

UpgradeImpact

For operators: if your cluster has enabled ratelimiting for SLO, you
will want to set rate_limit_under_size to a large number prior to
upgrade. This will preserve your existing behavior of ratelimiting all
SLO segments. 5368709123 is a good value, as that's 1 greater than the
default max object size. Alternately, hold down the 9 key until you
get bored.

If your cluster has not enabled ratelimiting for SLO (the default), no
action is needed.

Change-Id: Id1ff7742308ed816038a5c44ec548afa26612b95"
notmyname,2015-12-09 00:08:04,https://api.github.com/repos/openstack/swift/git/commits/70bc3d1a3a240c35eba934010fdef99a775b8715,70bc3d1a3a240c35eba934010fdef99a775b8715,"added a few ruby clients to associated projects

Change-Id: I4764ba505646949ff694f8939947f83c6940128a"
bvancsics,2015-12-08 09:17:08,https://api.github.com/repos/openstack/swift/git/commits/73d0f1620a269f990dbd3d2796abf27e9a05e227,73d0f1620a269f990dbd3d2796abf27e9a05e227,"Not used parameter

The account variable was not used in the method.

Change-Id: I8e91d7616529f33b615bc52af76bfda01141d364"
clayg,2015-10-15 23:20:58,https://api.github.com/repos/openstack/swift/git/commits/7035639dfd239b52d4ed46aae50f78d16ec8cbfe,7035639dfd239b52d4ed46aae50f78d16ec8cbfe,"Put part-replicas where they go

It's harder than it sounds.  There was really three challenges.

Challenge #1 Initial Assignment
===============================

Before starting to assign parts on this new shiny ring you've
constructed, maybe we'll pause for a moment up front and consider the
lay of the land.  This process is called the replica_plan.

The replica_plan approach is separating part assignment failures into
two modes:

 1) we considered the cluster topology and it's weights and came up with
    the wrong plan

 2) we failed to execute on the plan

I failed at both parts plenty of times before I got it this close.  I'm
sure a counter example still exists, but when we find it the new helper
methods will let us reason about where things went wrong.

Challenge #2 Fixing Placement
=============================

With a sound plan in hand, it's much easier to fail to execute on it the
less material you have to execute with - so we gather up as many parts
as we can - as long as we think we can find them a better home.

Picking the right parts for gather is a black art - when you notice a
balance is slow it's because it's spending so much time iterating over
replica2part2dev trying to decide just the right parts to gather.

The replica plan can help at least in the gross dispersion collection to
gather up the worst offenders first before considering balance.  I think
trying to avoid picking up parts that are stuck to the tier before
falling into a forced grab on anything over parts_wanted helps with
stability generally - but depending on where the parts_wanted are in
relation to the full devices it's pretty easy pick up something that'll
end up really close to where it started.

I tried to break the gather methods into smaller pieces so it looked
like I knew what I was doing.

Going with a MAXIMUM gather iteration instead of balance (which doesn't
reflect the replica_plan) doesn't seem to be costing me anything - most
of the time the exit condition is either solved or all the parts overly
aggressively locked up on min_part_hours.  So far, it mostly seemds if
the thing is going to balance this round it'll get it in the first
couple of shakes.

Challenge #3 Crazy replica2part2dev tables
==========================================

I think there's lots of ways ""scars"" can build up a ring which can
result in very particular replica2part2dev tables that are physically
difficult to dig out of.  It's repairing these scars that will take
multiple rebalances to resolve.

... but at this point ...

... lacking a counter example ...

I've been able to close up all the edge cases I was able to find.  It
may not be quick, but progress will be made.

Basically my strategy just required a better understanding of how
previous algorithms were able to *mostly* keep things moving by brute
forcing the whole mess with a bunch of randomness.  Then when we detect
our ""elegant"" careful part selection isn't making progress - we can fall
back to same old tricks.

Validation
==========

We validate against duplicate part replica assignment after rebalance
and raise an ERROR if we detect more than one replica of a part assigned
to the same device.

In order to meet that requirement we have to have as many devices as
replicas, so attempting to rebalance with too few devices w/o changing
your replica_count is also an ERROR not a warning.

Random Thoughts
===============

As usual with rings, the test diff can be hard to reason about -
hopefully I've added enough comments to assure future me that these
assertions make sense.

Despite being a large rewrite of a lot of important code, the existing
code is known to have failed us.  This change fixes a critical bug that's
trivial to reproduce in a critical component of the system.

There's probably a bunch of error messages and exit status stuff that's
not as helpful as it could be considering the new behaviors.

Change-Id: I1bbe7be38806fc1c8b9181a722933c18a6c76e05
Closes-Bug: #1452431"
clayg,2015-12-07 18:19:51,https://api.github.com/repos/openstack/swift/git/commits/62b9a0eeeaeb3a5a0daff981cf6fa1cb50e78a50,62b9a0eeeaeb3a5a0daff981cf6fa1cb50e78a50,"fix mock and assert in test_direct_client

Change-Id: Ia6c14377e5dd768a5306a2448f0bf244ebc3634e"
cschwede,2015-12-01 14:59:35,https://api.github.com/repos/openstack/swift/git/commits/73ded056aff0f25605fee2a633f3d13e0369606a,73ded056aff0f25605fee2a633f3d13e0369606a,"Add functional test for repeated SLO segments

Currently fails on master, passes with change
If13af444ed301ebd8fd34a0d96a330ded648f0c4 applied.

Change-Id: I05b231cc232d5b4117bccee40eebc7093114c61c"
notmyname,2015-11-30 19:58:40,https://api.github.com/repos/openstack/swift/git/commits/679e6d5251c804cab8fd41d7a13e6bdd43967842,679e6d5251c804cab8fd41d7a13e6bdd43967842,"Add config sample reference to KeystoneAuth docs

Change-Id: I38a7bd7b85de9d674386d75220b31cc467746da8"
notmyname,2015-11-30 18:33:23,https://api.github.com/repos/openstack/swift/git/commits/5eaa5543c766536e48127d60e03cebe9c2824abb,5eaa5543c766536e48127d60e03cebe9c2824abb,"add sample proxy pipeline for keystone integration

Change-Id: I4b4fd9179d0234f001940e215c97d40a2a6204cd"
tipabu,2015-10-07 23:47:11,https://api.github.com/repos/openstack/swift/git/commits/8e5b38b1ddb71d631c12368e6d917beb25d3a160,8e5b38b1ddb71d631c12368e6d917beb25d3a160,"Expose tempurl's header restrictions via /info

Also, clean up the module documentation a bit.

Change-Id: Iaeb5eb264b118b78738187db9242540275e77444"
Frenkymd,2015-10-07 09:10:28,https://api.github.com/repos/openstack/swift/git/commits/635bc7fa8f9a442b39af4955e98fcd2e2acf1e0a,635bc7fa8f9a442b39af4955e98fcd2e2acf1e0a,"Replace string slicing with proper string methods

Updated string prefix and suffix checker slicing to startswith()
and endswith() methods.

Using startswith() and endswith() improves readability, error-proneness
and enhances maintainability.

Change-Id: I1d5fbf116a61763346c6f92fd8023dbbe9bb37cf"
alistairncoles,2015-11-26 14:46:01,https://api.github.com/repos/openstack/swift/git/commits/6c43bdc82bc27f1f60bd32c43fac6e8be562e136,6c43bdc82bc27f1f60bd32c43fac6e8be562e136,"Test for content-type params in multi-range response

Updates the functional test to verify the fix applied by
change Iff7274aa631a92cd7332212ed8b4378c27da4a1f

Change-Id: Iae63ac027e4f4acfe46a36dc1325888b1f834ea4"
smerritt,2015-03-25 21:59:43,https://api.github.com/repos/openstack/swift/git/commits/b339e529c3464278b7ddd5670acd903070d1da1a,b339e529c3464278b7ddd5670acd903070d1da1a,"Add functional test for multi-range GET requests.

Change-Id: I9d417faede707e4f3570074e410344cc8955007b"
smerritt,2015-11-26 01:09:34,https://api.github.com/repos/openstack/swift/git/commits/c28709f8f264f4426364b67a2a2755311111c1e4,c28709f8f264f4426364b67a2a2755311111c1e4,"Fix crash when a SLO repeats a segment.

If a SLO manifest specified the same segment twice with no range on
the latter, we would crash while trying to coalesce the segment
specifications into a single request (for efficiency). Now we handle
that missing range and do the right thing.

Change-Id: If13af444ed301ebd8fd34a0d96a330ded648f0c4"
alistairncoles,2015-11-25 18:49:39,https://api.github.com/repos/openstack/swift/git/commits/ad722b3ed3ff1b92ebee829db3c289040960b24d,ad722b3ed3ff1b92ebee829db3c289040960b24d,"Include params in multipart message part content-type

The content-type header inserted into a multipart message part
is missing any params such as charset because its value is being
fetched via the swob.Response content_type property, which conforms
to webob spec and strips off all params.

This was noticed in work on feature/crypto branch because the crypto
meta param was being stripped off content-type in multipart messages,
preventing the content-type being decrypted. But in general there is
no suggestion in the multipart message spec [1] that params should
not be included. In fact examples in [1] show the charset param
included in the content-type value.

To ensure that the multipart message part content-type includes the
original content-type params, fetch it directly from the response
headers.

[1] http://www.w3.org/Protocols/rfc1341/7_2_Multipart.html

Change-Id: Iff7274aa631a92cd7332212ed8b4378c27da4a1f"
alistairncoles,2015-11-25 14:10:27,https://api.github.com/repos/openstack/swift/git/commits/e06c8743941a27c1a3f50396385268b9e812c32e,e06c8743941a27c1a3f50396385268b9e812c32e,"Improve swift-init usage statement

Clarify the behavior of strict and non-strict options.

Define what <server> and <config> specify on the command line.

Drive-by fix for missing param in search_tree docstring.

Change-Id: I89fff88a088bc73001464b1fa8240e14a61a117d"
tipabu,2015-10-13 18:45:20,https://api.github.com/repos/openstack/swift/git/commits/0e5cc89da56f550468512af6f3479382a1894815,0e5cc89da56f550468512af6f3479382a1894815,"Have versioned_writes use reverse listings

This will reduce the overhead required for versioned containers in terms
of memory, back-end requests, and wall time.

Change-Id: I156216a14141db547de3cae1dcd5315ae31eaac2"
alistairncoles,2015-11-24 14:47:30,https://api.github.com/repos/openstack/swift/git/commits/aeccbc2074224c6688be6ef5aa8ba477c9631ba1,aeccbc2074224c6688be6ef5aa8ba477c9631ba1,"Add more functional tests for reverse listings

Also fix typo in the api doc.

Follow-on to change I5eb655360ac95042877da26d18707aebc11c02f6

Change-Id: Ic1ea63c74a0a3b90a505865fba8fcfac584d0825"
tipabu,2015-11-23 21:53:27,https://api.github.com/repos/openstack/swift/git/commits/41897d96a7dc3ddceccf4eed71345439b83eb243,41897d96a7dc3ddceccf4eed71345439b83eb243,"Reverse-listings follow-up

 * With the end_prefix changes in the original commit, we no longer need
   the `or not name.startswith(prefix)` check.
 * Improve test coverage of reverse path listings.

Change-Id: Iaa7d4b83647c3c150be95f88cb3cc9e4f0e33979"
matthewoliver,2014-09-11 06:51:51,https://api.github.com/repos/openstack/swift/git/commits/7c1e6cd583debe43aca266643cd65f5103159dbf,7c1e6cd583debe43aca266643cd65f5103159dbf,"Add container and account reverse listings

This change adds the ability to tell the container or account server to
reverse their listings. This is done by sending a reverse=TRUE_VALUE,

Where TRUE_VALUE is one of the values true can be in common/utils:

  TRUE_VALUES = set(('true', '1', 'yes', 'on', 't', 'y'))

For example:

  curl -i -X GET -H ""X-Auth-Token: $TOKEN"" $STORAGE_URL/c/?reverse=on

I borrowed the swapping of the markers code from Kevin's old change,
thanks Kevin. And Tim Burke added some real nuggets of awesomeness.

DocImpact
Co-Authored-By: Kevin McDonald <kmcdonald@softlayer.com>
Co-Authored-By: Tim Burke <tim.burke@gmail.com>
Implements: blueprint reverse-object-listing

Change-Id: I5eb655360ac95042877da26d18707aebc11c02f6"
ganeshmaharaj,2015-10-30 21:30:51,https://api.github.com/repos/openstack/swift/git/commits/898223398189f96628db7d9928f146c5bb11ba88,898223398189f96628db7d9928f146c5bb11ba88,"Unit tests for account/backend.py

Add test for database create request without account
Partial test for migrate call on database with storage_policy_index

Change-Id: I7cfbd6bc7e2b341f433d88f600b19e54826a0e22
Signed-off-by: Ganesh Maharaj Mahalingam <ganesh.mahalingam@intel.com>"
alistairncoles,2015-11-20 17:51:33,https://api.github.com/repos/openstack/swift/git/commits/f80c97a6e964123e766c1e53d797a3b80433ac77,f80c97a6e964123e766c1e53d797a3b80433ac77,"Update .mailmap entry

Fix/add entries for authors that are known to now have
@hpe.com email addresses.

Change-Id: I62c83b64e2378cb3d6ad33ac9e6ab111b8a8c86f"
tipabu,2015-11-20 17:04:28,https://api.github.com/repos/openstack/swift/git/commits/848d7299a26988ea1bab3e576ba10762624dfff6,848d7299a26988ea1bab3e576ba10762624dfff6,"Ignore Content-Type from client on multipart-manifest=delete

Otherwise, if a client includes something like:

    Content-Type: application/x-www-form-urlencoded

...we won't delete anything, and instead send back:

    Number Deleted: 0
    Number Not Found: 0
    Response Body:
    Response Status: 406 Not Acceptable
    Errors:

...despite the fact that we're managing the iterator, so we know it's
acceptable.

Change-Id: I791c7bda1d9df830d8dacd3783c2393db5a9ac09"
sivakrishnan-intel,2015-10-29 23:04:42,https://api.github.com/repos/openstack/swift/git/commits/c4eeea7820b7bbf6f5994c9878c8838c43e61b9b,c4eeea7820b7bbf6f5994c9878c8838c43e61b9b,"Added unit test cases for container/auditor.py

Added unit test cases to cover all code path in _one_audit_pass
function in container/auditor.py

Change-Id: I8b89e94f1492e4366af3ac4260587e988ba29408"
vstinner,2015-08-26 23:09:41,https://api.github.com/repos/openstack/swift/git/commits/bdb7bf40321bc36b45a25742b6e1aed73576fabc,bdb7bf40321bc36b45a25742b6e1aed73576fabc,"py3: Add py34 test environment to tox

Add a py34 test environment to tox.ini using a whitelist
of tests which pass on Python 3. Currently, only test_exceptions.py
of test/unit/common/ is run on Python 3

Change-Id: I5c8a9fe7b9635f1acab8f401908975fc6fc58c7a"
smerritt,2015-11-16 22:27:51,https://api.github.com/repos/openstack/swift/git/commits/4dc4cbfc1ca50abc100d2302e928f9fc16f26195,4dc4cbfc1ca50abc100d2302e928f9fc16f26195,"Fix 503 on zero-byte replicated PUT with incorrect Etag

Closes-Bug: 1516579
Change-Id: Iac91ed61254d3ca232521191fec25c19acb66413"
tipabu,2015-11-13 20:38:56,https://api.github.com/repos/openstack/swift/git/commits/e534af645d4ff051e97e552e98271810b5588cfe,e534af645d4ff051e97e552e98271810b5588cfe,"Remove references to now-missing havana docs

Change-Id: I3c708bacd468e923e574bdd5afc7acc58b072159"
onovy,2015-11-15 18:25:05,https://api.github.com/repos/openstack/swift/git/commits/84891ba5a1a06013779c9be24f69b26fea0cb4f0,84891ba5a1a06013779c9be24f69b26fea0cb4f0,"New swauth URL

Change-Id: I019f921417d2bd5325141e8a6873ee934fdf3f49"
onovy,2015-11-14 19:14:46,https://api.github.com/repos/openstack/swift/git/commits/001dc2531899a61480ab7819ebe8766dbf3d7d22,001dc2531899a61480ab7819ebe8766dbf3d7d22,"Missing log_name option added

Change-Id: If0224f346aa7372268115284c112e8f3a60a9be4"
notmyname,2015-11-13 17:46:02,https://api.github.com/repos/openstack/swift/git/commits/6e95fb5d164e6fdc3bf036c40dd54a19fd67199a,6e95fb5d164e6fdc3bf036c40dd54a19fd67199a,"remove pbr from requirements.txt. It's not a run-time dependency

Change-Id: I46f498122fccb0830304acba7f99fee64badfe12"
tipabu,2015-11-04 20:25:19,https://api.github.com/repos/openstack/swift/git/commits/c03d53ab7737e208d9c436088e41f60fdab96b30,c03d53ab7737e208d9c436088e41f60fdab96b30,"Close EC fragment iterators in the GreenThread that's consuming them

Otherwise, we might try to close them while they're already running.
This should prevent conditional SLO requests from returning 500 when
they should have returned 304 or 412.

Change-Id: I075a892f901c18ab5c178c9c4a2f367b76ae78e2
Related-Change: I156d873c72c19623bcfbf39bf120c98800b3cada"
bloodeagle40234,2015-11-11 15:55:51,https://api.github.com/repos/openstack/swift/git/commits/fd30df6e6572791e89a5360cecbf4800f1f08bb5,fd30df6e6572791e89a5360cecbf4800f1f08bb5,"Small cleanup for unit/proxy/controllers/test_obj

Follow up for https://review.openstack.org/#/c/236007

This fixes following minor items:

- Fix a 'raise Exception class' syntax to 'raise Exception instance'
- Use original eventlet.Timeout instead of swift.exceptions.Timeout
  imported from eventlet.Timeout
- Change Timeout to initiate w/o args (1st arguments should be timeout
  second and we don't have to set None if we don't want to set the sec)
- Add a message argument to some Exception instances

Change-Id: Iab608cd8a1f4d3f5b4963c26b94ab0501837ffe1"
sivakrishnan-intel,2015-11-06 01:49:58,https://api.github.com/repos/openstack/swift/git/commits/ce173e9ed2e14692899a53da7eefe31f4a7c61d0,ce173e9ed2e14692899a53da7eefe31f4a7c61d0,"Added unit test cases for server.py

Added unit test cases to cover all code paths in REPLICATE and __call__
functions in account/server.py and container/server.py

Change-Id: Ia335e9a6668821d3e34b12fc3a133a707880e87f"
wbhuberIBM,2015-10-16 16:27:34,https://api.github.com/repos/openstack/swift/git/commits/66dc1eebb1db51c81891b1f7bcc3e85aef9b8c1d,66dc1eebb1db51c81891b1f7bcc3e85aef9b8c1d,"ObjectControllers return application errors as 499 on bad read

In the _transfer_data method, we translate all (Exception, Timeout)
into a 499 whereas we should consider translating them to 500 on
particular returning error scenarios.

This affects both ReplicatedObjectController and ECObjectControllear.

Change-Id: I571bbc5b1451243907b094a5718c8735fd824268
Closes-Bug: 1504299"
ganeshmaharaj,2015-11-03 16:43:57,https://api.github.com/repos/openstack/swift/git/commits/4d0d76eb2079885c55711238906ef4ddd252aa86,4d0d76eb2079885c55711238906ef4ddd252aa86,"Add unit tests for direct_client

Add tests for direct_delete_account, direct_get_object, retry
Tests to validate possible argument calls of direct_put_object
Extend FakeConn to support chunks in response

Change-Id: I00cbc6c535ed8b3fb29bc07fdc51fdbb1220ff10
Signed-off-by: Ganesh Maharaj Mahalingam <ganesh.mahalingam@intel.com>"
venkatamahesh,2015-11-10 14:16:31,https://api.github.com/repos/openstack/swift/git/commits/705642db4c27c34ac8eb840d40b16470b85418c8,705642db4c27c34ac8eb840d40b16470b85418c8,"Change stackforge repo to openstack repo

The projects which are moved to openstack
are corrected by replacing stackforge with openstack

Change-Id: I65b794a7f10df617bc2a4caf2c4010477a82dbc2"
notmyname,2015-11-10 06:03:34,https://api.github.com/repos/openstack/swift/git/commits/d755f5b52024e255787d180bbca60c09192a8850,d755f5b52024e255787d180bbca60c09192a8850,"suppress warning output in a unit test

test_write_builder_after_device_removal() wasn't setting a
default min_part_hours so a warnign was printed. Explicitly
adding a min_part_hours suppresses the warning

Change-Id: I6f234b72c34e066abb91f28e6eacf50e29be8842"
bloodeagle40234,2015-11-06 01:37:30,https://api.github.com/repos/openstack/swift/git/commits/c81f202f714c36390a25b24fa96d1b277788ade9,c81f202f714c36390a25b24fa96d1b277788ade9,"Add missing docs for ring.builder.rebalance

commit 71993d84e88cc1d5f7742182905cace21c7e88cb added
a new 'remove_dev' column to the
swift.common.ring.builder.rebalance return value.

This patch adds the docs for that and clean up a bit to
the variable name to be easy to read.

Change-Id: Idfd46e47b9f6894cbafc8b7701a4c7414212f79f"
onovy,2015-11-01 17:10:06,https://api.github.com/repos/openstack/swift/git/commits/e0430fc74a564a0556ef5eab1accd110566aee31,e0430fc74a564a0556ef5eab1accd110566aee31,"Compare Swift config checksum in swift-recon --all

Change-Id: I796fe0895f4e5ddeb04c0d79a73579ce8bb9aa40"
vstinner,2015-08-26 22:51:58,https://api.github.com/repos/openstack/swift/git/commits/609095b23f6c5734c6a7aed80c488b96b31137e8,609095b23f6c5734c6a7aed80c488b96b31137e8,"On py3, use dnspython3 dependency, not dnspython

Update requirements to install dnspython3 on Python 3 and dnspython on
Python 2. dnspython is not compatible with Python 3, and dnspython3
is not compatible with Python 2.

Add a requirement on pbr to ensure that pbr 1.6 or newer is
installed. pbr 1.0 or newer is required to support environment
markers in requirements which are now used to select dnspython or
dnspython3 depending on the Python major version.

Note: pbr 1.0 is enough, but OpenStack global requirements asks to
use ""pbr>=1.6"".

Change-Id: Ie5d437cd396972d4143ffffb96ec3c289e221b08"
venkatesh551,2015-11-04 08:53:05,https://api.github.com/repos/openstack/swift/git/commits/48421f902e2e293a3c9ef672dbec5971ca530fd6,48421f902e2e293a3c9ef672dbec5971ca530fd6,"Optimize the code performance

Usually, the number of characters in FORBIDDEN_CHARS are fewer than
the number of characters in the req.path - so it's better to use
smaller count for the outer loop.

Change-Id: I78b7e0ff4cae1cc90e8d29d7bddcec7fe0ba4bd4"
sileht,2015-10-22 15:33:09,https://api.github.com/repos/openstack/swift/git/commits/bf8689474a9b3930cceed4c5f855a73ce89b1d4e,bf8689474a9b3930cceed4c5f855a73ce89b1d4e,"monkeypatch thread for keystoneclient

keystoneclient uses threading.Lock(), but swift doesn't
monkeypatch threading, this result in lockup when two
greenthreads try to acquire a non green lock.

This change fixes that.

Change-Id: I9b44284a5eb598a6978364819f253e031f4eaeef
Closes-bug: #1508424"
wbhuberIBM,2015-10-22 15:14:29,https://api.github.com/repos/openstack/swift/git/commits/faef717cd3fda6aeb3a0799f25d0483bc9bdce7a,faef717cd3fda6aeb3a0799f25d0483bc9bdce7a,"Add unit tests for swift.proxy.controllers.base

This patch adds more unit tests to diminish missing pieces
of the coverage in the proxy_controllers_base unit test.

Change-Id: I85ba1955c681cc9d5b2a70ac31155678d2e5b6fd"
osanai-hisashi,2015-07-21 12:00:01,https://api.github.com/repos/openstack/swift/git/commits/b96fd0d7d8e294731dc28352cd6e586919058f90,b96fd0d7d8e294731dc28352cd6e586919058f90,"Remove _keystone_identity method

_keystone_identity method has been maintained for backward
compatibility. But there is no place to use it now so this patch
replace _keystone_identity method to _integrated_keystone_identity
method as _keystone_identity.

Change-Id: I9464c047401f92ae31a5d3bb7aacaeb0624150e0"
bloodeagle40234,2015-10-07 09:14:49,https://api.github.com/repos/openstack/swift/git/commits/a4a5fcad8f1ec9059cfab0c63e81106355b0dbd5,a4a5fcad8f1ec9059cfab0c63e81106355b0dbd5,"Add unit tests for utils.validate_hash_path

This patch add some unit tests to prevent regression and to describe
validate_hash_path behavior, I found in review with

https://review.openstack.org/#/c/231864/

*bonus*
- Fix test_hash_path to use ""with"" syntax instead of ""try/finally""
  for assigning a testing value into a global variable.

Change-Id: I948999a8fb8addb9a378dbf8bee853b205aeafad"
smerritt,2015-10-21 20:05:37,https://api.github.com/repos/openstack/swift/git/commits/e31ecb24b6684da692fbca8b7fe34c1dd4047a3a,e31ecb24b6684da692fbca8b7fe34c1dd4047a3a,"Get rid of contextlib.nested() for py3

contextlib.nested() is missing completely in Python 3.

Since 2.7, we can use multiple context managers in a 'with' statement,
like so:

    with thing1() as t1, thing2() as t2:
        do_stuff()

Now, if we had some code that needed to nest an arbitrary number of
context managers, there's stuff we could do with contextlib.ExitStack
and such... but we don't. We only use contextlib.nested() in tests to
set up bunches of mocks without crazy-deep indentation, and all that
stuff fits perfectly into multiple-context-manager 'with' statements.

Change-Id: Id472958b007948f05dbd4c7fb8cf3ffab58e2681"
vstinner,2015-10-19 15:16:21,https://api.github.com/repos/openstack/swift/git/commits/d877a422374e50ddf89dc001fb687ce85de1c6e8,d877a422374e50ddf89dc001fb687ce85de1c6e8,"Fix Python 3 issues in utils

* LogAdapter.exception(): on Python 3, socket.error is an alias to
  OSError, so group both exceptions to support Python 3.
* ThreadPool: call GreenPipe() with indexed parameter, don't pass the
  third parameter by its name, since the parameter name changed
  between Python 2 (bufsize) and Python 3 (buffering).
* strip_value() in test_utils: StringIO.getvalue() now requires
  seek(0), otherwise the buffer is filled with null characters.
* test_lock_file(): on Python 3, seek(0) is now required to go the
  beginning of a file opened in append mode. In append mode, Python
  goes to the end of the file.

Change-Id: I4e56a51690f016a0a2e1354380ce11cff1891f64"
ganeshmaharaj,2015-10-20 15:16:39,https://api.github.com/repos/openstack/swift/git/commits/b3a0acd5c77201161dcd169850df589ede331106,b3a0acd5c77201161dcd169850df589ede331106,"DiskFileNoSpace check during object delete

On a full disk, a call to delete an object will fail when it tries to
write tombstones. Handling DiskFileNoSpace exception raised by
swift.common.utils.

Change-Id: I8f0cfcc4159ee154fcd3e7ca90c422aa5aadf0b3
Signed-off-by: Ganesh Maharaj Mahalingam <ganesh.mahalingam@intel.com>
Closes-Bug: 1491675"
bloodeagle40234,2015-10-21 12:33:04,https://api.github.com/repos/openstack/swift/git/commits/b376e9dc342a2ea4427467b7cd276f335298134d,b376e9dc342a2ea4427467b7cd276f335298134d,"Add verification socket close causes StopIteration

This patch add a expositive test that closing connection
(fd and socket) causes StopIteration on reader at proxy server
on PUT object case.

And then, if the connection closed and proxy detects a lack of
data length, it will result in HTTPClientDisconnected.

The only reason why I leave test_client_disconnect as current
is Bill is now working for the change at

https://review.openstack.org/#/c/236007/

Change-Id: If68f752a2b0dd6cfad4d007ca5d155e6ffb378e5"
vstinner,2015-10-19 14:59:14,https://api.github.com/repos/openstack/swift/git/commits/71e573f4ba8a45dd5962f9d180c6236ce85627ca,71e573f4ba8a45dd5962f9d180c6236ce85627ca,"Port swift.common.utils.backward() to Python 3

backward() is written to handle binary files:

* Replace literal native strings to literal byte strings: add b'...'
  prefix
* Update unit tests: use byte strings
* TemporaryFile(): use the default mode 'w+b', instead of using 'r+w'
  ('r+w' mode creates a Unicode file on Python 3).

Change-Id: Ic91f7e6c605db0b888763080d49f0f501029837f"
matthewoliver,2015-10-09 06:25:08,https://api.github.com/repos/openstack/swift/git/commits/4a13dcc4a8d7c890ff322190ca80fbb460b55de4,4a13dcc4a8d7c890ff322190ca80fbb460b55de4,"Make db_replicator usync smaller containers

The current rule inside the db_replicator is to rsync+merge
containers during replication if the difference between rowids
differ by more than 50%:

  # if the difference in rowids between the two differs by
  # more than 50%, rsync then do a remote merge.
  if rinfo['max_row'] / float(info['max_row']) < 0.5:

This mean on smaller containers, that only have few rows, and differ
by a small number still rsync+merge rather then copying rows.

This change adds a new condition, the difference in the rowids must
be greater than the defined per_diff otherwise usync will be used:

  # if the difference in rowids between the two differs by
  # more than 50% and the difference is greater than per_diff,
  # rsync then do a remote merge.
  # NOTE: difference > per_diff stops us from dropping to rsync
  # on smaller containers, who have only a few rows to sync.
  if rinfo['max_row'] / float(info['max_row']) < 0.5 and \
          info['max_row'] - rinfo['max_row'] > self.per_diff:

Change-Id: I9e779f71bf37714919a525404565dd075762b0d4
Closes-bug: #1019712"
MahatiC,2015-10-16 12:48:33,https://api.github.com/repos/openstack/swift/git/commits/a9ddc2d9ea402eaac7ccd8992387f77855968ab5,a9ddc2d9ea402eaac7ccd8992387f77855968ab5,"Hyperlink fix to first contribution doc

Change-Id: I19fc1abc89f888233b80a57c68a152c1c1758640"
zaitcev,2015-10-09 22:45:20,https://api.github.com/repos/openstack/swift/git/commits/83a1151d13e096b480aefe6ec18259f2d7d021db,83a1151d13e096b480aefe6ec18259f2d7d021db,"Interpolate the explanation string not whole HTML body

The only reason this exists is that I promised to do it.
But in our case, there's no big advantage, and here's why.

The general thinking goes that strings must be interpolated
first because the body may contain a syntax that confuses the
interpolation. So this patch makes the code ""more correct"".
However, our HTML template is tightly controlled. It's not
like it contains additional percents.

So I'll just leave this here for now while I'm asking if
the content type is set correctly.

Change-Id: Ia18aeb0f94ef389f8b95450986a566e5fa06aa10"
bloodeagle40234,2015-10-13 07:22:31,https://api.github.com/repos/openstack/swift/git/commits/43cdc29669741568a898dc87eee3e09280887bba,43cdc29669741568a898dc87eee3e09280887bba,"Add backend subrequest tests for staticweb

This is an followup for
https://review.openstack.org/#/c/227204

Above patch changes staticweb to use just make_env instead of
pre authed env. The tests included in this patch assert
""backend requests generated by staticweb *NEVER* include pre
authed information (i.e. authorize_override=True)"".

Change-Id: Ifbbc43d3b5ac114bc3d5e4fcab9cacdf9a3f1a5c"
ccavanna,2015-10-08 17:40:20,https://api.github.com/repos/openstack/swift/git/commits/4eb796b29ddee52f5010655e0d5477f2d7923854,4eb796b29ddee52f5010655e0d5477f2d7923854,"bug/1270114. Missing documentation for Bulk Middleware.

Closes-Bug: #1270114

This patch addresses the missing bulk middleware documentation for
the following bug:

https://bugs.launchpad.net/swift/+bug/1270114

And feature:

https://review.openstack.org/#/c/176161/

The documentation will show under:

http://docs.openstack.org/developer/swift/middleware.html

Change-Id: I73c101e09830d7120b5e5c1333ae8d570a9e2303"
cschwede,2015-08-29 16:03:07,https://api.github.com/repos/openstack/swift/git/commits/a7af802497f3b86d33cbee852500df456c316685,a7af802497f3b86d33cbee852500df456c316685,"Do not use pre-authenticated requests in staticweb

staticweb middleware uses make_pre_authed_env, this makes it possible to
anonymously list containers without any read acl set if the metadata
""web-listings: true"" is set on a container. Using make_env enforces correct
read_acl validation; however it is now also required to add "".rlistings"" to the
read acl.

Also, if the staticweb middleware is put in the proxy pipeline before an
authentication middleware, it broke authenticated GET and HEAD requests. This
has some side effects in clients, because a html response is sent that might be
parsed wrongly by the client. In case of python-swiftclient this was shown as an
empty container without any ACL or web-listings:true meta set. This might lead
to information leaks, because a user trusts the output from python-swiftclient
and assumes an empty, private container even if the container contains public
readable data. staticweb now checks if ""swift.authorize"" is included in the
environ and skips itself if not.

Closes-Bug: 1489749
Change-Id: Icf159d7e567ac5481e710c5910db686bdcba6336
Depends-On: Ie24bb995023c377e49796910ad80a256b00daa03"
onovy,2015-10-10 12:56:30,https://api.github.com/repos/openstack/swift/git/commits/2996974e5d48b4efaa1b271b8fbd0387bced7242,2996974e5d48b4efaa1b271b8fbd0387bced7242,"Script for running unit, func and probe tests at once

When developing Swift it's often needed to run all tests.
This script makes it much simpler.

Change-Id: I67e6f7cc05ebd0475001c1b56e8f6fd09c8c644f"
codevulture,2015-07-17 14:50:15,https://api.github.com/repos/openstack/swift/git/commits/c2182fd4163050a5f76eb3dedb7703dc821fa83d,c2182fd4163050a5f76eb3dedb7703dc821fa83d,"Python3: do not use im_self/im_func/func_closure

Use __self__, __func__ and __closure__ instead, as they work
with both Python 2 and 3.

Modifying usage of __func__ in codebase.

Change-Id: I57e907c28c1d4646605e70194ea3650806730b83"
smerritt,2015-09-26 00:26:37,https://api.github.com/repos/openstack/swift/git/commits/c0866ceaac2f69ae01345a795520141f59ec64f5,c0866ceaac2f69ae01345a795520141f59ec64f5,"Improve SLO PUT error checking

This commit tries to give the user a reason that their SLO manifest
was invalid instead of just saying ""Invalid SLO Manifest File"". It
doesn't get every error condition, but it's better than before.

Examples of things that now have real error messages include:
 * bad keys in manifest (e.g. using ""name"" instead of ""path"")
 * bogus range (e.g. ""bytes=123-taco"")
 * multiple ranges (e.g. ""bytes=10-20,30-40"")
 * bad JSON structure (i.e. not a list of objects)
 * non-integer size_bytes

Also fixed an annoyance with unspecified-size segments that are too
small. Previously, if you uploaded a segment reference with
'{""size_bytes"": null, ...}' in it and the referenced segment was less
than 1 MiB, you'd get a response that looked like this:

    HTTP/1.1 400 Bad Request
    Content-Length: 62
    Content-Type: text/html; charset=UTF-8
    X-Trans-Id: txd9ee3b25896642098e4d9-0055dd095a
    Date: Wed, 26 Aug 2015 00:33:30 GMT

    Each segment, except the last, must be at least 1048576 bytes.

This is true, but not particularly helpful, since it doesn't tell you
which of your segments violated the rule.

Now you get something more like this:

    HTTP/1.1 400 Bad Request
    Content-Length: 49
    Content-Type: text/plain
    X-Trans-Id: tx586e52580bac4956ad8e2-0055dd09c2
    Date: Wed, 26 Aug 2015 00:35:14 GMT

    Errors:
    /segs/small, Too Small; each segment, except the last...

It's not exactly a tutorial on SLO manifests, but at least it names
the problematic segment.

This also changes the status code for a self-referential manifest from
409 to 400. The rest of the error machinery was using 400, and
special-casing self-reference would be really annoying. Besides, now
that we're showing more than one error message at a time, what would
the right status code be for a manifest with a self-referential
segment *and* a segment with a bad range? 400? 409? 404.5? It's much
more consistent to just say invalid manifest --> 400.

Change-Id: I2275683230b36bc273319254e37c16b9e9b9d69c"
onovy,2015-10-10 18:57:07,https://api.github.com/repos/openstack/swift/git/commits/9cafa472a336f66d149a20c12f4251703d96f04d,9cafa472a336f66d149a20c12f4251703d96f04d,"Autodetect systemctl in SAIO and use it on systemd distros

Change-Id: I84a9b27baac89327749d8774032860f8ad5166f2"
esnyder,2015-10-12 04:24:54,https://api.github.com/repos/openstack/swift/git/commits/92767f28d668643bc2affee7b2fd46fd9349656a,92767f28d668643bc2affee7b2fd46fd9349656a,"Fix 'swift-ring-builder write_builder' after you remove a device

clayg already posted the code fix in the bug, but noted it needs a test.

Closes-Bug: #1487280
Change-Id: I07317754afac7165baac4e696f07daeba2e72adc"
cschwede,2015-10-12 07:09:00,https://api.github.com/repos/openstack/swift/git/commits/767fac8186ea4541f4466ac9a55c03abea6a878b,767fac8186ea4541f4466ac9a55c03abea6a878b,"Enable H234 check (assertEquals is deprecated, use assertEqual)

All usages of assertEquals and assertNotEquals are fixed now, so let's enable
the H234 check to avoid regressions in the future.

Change-Id: I2c2ccb3b268cf9eb11f2db045378ab125a02bc31"
codevulture,2015-08-31 16:19:49,https://api.github.com/repos/openstack/swift/git/commits/1882801be1d8983cd718786bd409cf09f65a00b0,1882801be1d8983cd718786bd409cf09f65a00b0,"pep8 fix: assertNotEquals -> assertNotEqual

assertNotEquals is deprecated in py3

Change-Id: Ib611351987bed1199fb8f73a750955a61d022d0a"
codevulture,2015-08-05 18:28:14,https://api.github.com/repos/openstack/swift/git/commits/f5f9d791b0b8b32350bd9a47fbc00ff86a65f09d,f5f9d791b0b8b32350bd9a47fbc00ff86a65f09d,"pep8 fix: assertEquals -> assertEqual

assertEquals is deprecated in py3, replacing it.

Change-Id: Ida206abbb13c320095bb9e3b25a2b66cc31bfba8
Co-Authored-By: Ondřej Nový <ondrej.novy@firma.seznam.cz>"
vstinner,2015-10-08 13:42:27,https://api.github.com/repos/openstack/swift/git/commits/84f0a544452fefc65f6755fdd04cc2cc1eb11c88,84f0a544452fefc65f6755fdd04cc2cc1eb11c88,"py3: Replace basestring with six.string_types

The builtin basestring type was removed in Python 3. Replace it with
six.string_types which works on Python 2 and Python 3.

Change-Id: Ib92a729682322cc65b41050ae169167be2899e2c"
vstinner,2015-10-08 13:41:02,https://api.github.com/repos/openstack/swift/git/commits/2447e0cf6ed502375a80e33e6aa4a5110305fa6f,2447e0cf6ed502375a80e33e6aa4a5110305fa6f,"Replace itertools.ifilter with six.moves.filter

Replace itertools.ifilter() with six.moves.filter(). The
itertools.ifilter was removed in Python 3. This change makes modified
code compatible with Python 2 and Python 3.

Replace itertools.izip() with six.moves.zip().

The patch was generated by the itertools operation of the sixer tool.

Change-Id: Ie7f787cc6d66edfceb8fa2c1a906351a8c8c5fed"
vstinner,2015-10-08 13:38:36,https://api.github.com/repos/openstack/swift/git/commits/8f8542793913e87f41d4789aa5327d611101b2cb,8f8542793913e87f41d4789aa5327d611101b2cb,"py3: Replace gen.next() with next(gen)

The next() method of Python 2 generators was renamed to __next__().
Call the builtin next() function instead which works on Python 2 and
Python 3.

The patch was generated by the next operation of the sixer tool.

Change-Id: Id12bc16cba7d9b8a283af0d392188a185abe439d"
vstinner,2015-10-08 13:32:33,https://api.github.com/repos/openstack/swift/git/commits/6a82097b0e92d0b9b70c52217322ca33b5da8b28,6a82097b0e92d0b9b70c52217322ca33b5da8b28,"py3: Use six.reraise() to reraise an exception

Replace ""raise exc_type, exc_value, exc_tb"" with
""six.reraise(exc_type, exc_value, exc_tb)"".

The patch was generated by the raise operation of the sixer tool on:
bin/* swift/ test/.

Change-Id: Ic4ca6d7f26d1e0075bd2a8a26d6e408b59b17fbb"
vstinner,2015-10-08 13:03:52,https://api.github.com/repos/openstack/swift/git/commits/c0af385173658fa149bddf155aeb1ae0bbd4eb7e,c0af385173658fa149bddf155aeb1ae0bbd4eb7e,"py3: Replace urllib imports with six.moves.urllib

The urllib, urllib2 and urlparse modules of Python 2 were reorganized
into a new urllib namespace on Python 3. Replace urllib, urllib2 and
urlparse imports with six.moves.urllib to make the modified code
compatible with Python 2 and Python 3.

The initial patch was generated by the urllib operation of the sixer
tool on: bin/* swift/ test/.

Change-Id: I61a8c7fb7972eabc7da8dad3b3d34bceee5c5d93"
vstinner,2015-10-08 11:08:45,https://api.github.com/repos/openstack/swift/git/commits/f2cac20d17b081e7b9b6285546414902aa2bdbec,f2cac20d17b081e7b9b6285546414902aa2bdbec,"py3: Replace unicode with six.text_type

The unicode type was renamed to str in Python 3. Use six.text_type to
make the modified code compatible with Python 2 and Python 3.

The initial patch was generated by the unicode operation of the sixer
tool on: bin/* swift/ test/.

Change-Id: I9e13748ccde36ee8110756202d55d3ae945d4860"
cschwede,2015-10-07 19:48:17,https://api.github.com/repos/openstack/swift/git/commits/c30ceec6f1cfde4da53ab1854d7b2d6c4d7f3a2b,c30ceec6f1cfde4da53ab1854d7b2d6c4d7f3a2b,"Fix ring device checks in probetests

If a device has been removed from one of the rings, it actually is set as None
within the ring. In that case the length of the devices is not True without
filtering the None devices. However, if the length matched the condition but
included a removed device the probetests would fail with a TypeError.

This fix could be done also in swift/common/ring/ring.py, but it seems it only
affects probetests right now, thus fixing it there and not changing the current
behavior.

Change-Id: I8ccf9b32a51957e040dd370bc9f711d4328d17b1"
charz,2015-10-06 08:28:34,https://api.github.com/repos/openstack/swift/git/commits/d01cd425094c2e56e4e89dbf3eaf887815dd5b62,d01cd425094c2e56e4e89dbf3eaf887815dd5b62,"Fix replicator intersection exception when sync data to remote regions.

This patch fixed the exception (AttributeError: 'list' object has no
attribute 'intersection') when replicator try to sync data from
handoff to primary partition in more than one remote region.

Change-Id: I565c45dda8c99d36e24dbf1145f2d2527d593ac0
Closes-Bug: 1503152"
clayg,2015-10-02 23:40:28,https://api.github.com/repos/openstack/swift/git/commits/752ceb266b3e72361242250e50396671df8b9595,752ceb266b3e72361242250e50396671df8b9595,"Close ECAppIter's sub-generators before propagating GeneratorExit

... which ensures no Timeouts remain pending after the parent generator
is closed when a client disconnects before being able to read the entire
body.

Also tighten up a few tests that may have left some open ECAppIter
generators lying about after the tests themselves had finished.  This
has the side effect of preventing the extraneous printing of the Timeout
errors being raised by the eventlet hub in the background while our
unittests are running.

Change-Id: I156d873c72c19623bcfbf39bf120c98800b3cada"
notmyname,2015-10-03 00:06:49,https://api.github.com/repos/openstack/swift/git/commits/47eb6a37f86f29c355297b556c2ff898c98da9b2,47eb6a37f86f29c355297b556c2ff898c98da9b2,"authors and changelog update for 2.5.0

Change-Id: Id20b9340a017922b29d8bf9558825697a7f1f6f1"
vstinner,2015-08-26 23:03:27,https://api.github.com/repos/openstack/swift/git/commits/a8c2978707ac727c870a5707932f523a063d8b3c,a8c2978707ac727c870a5707932f523a063d8b3c,"py3: Fix Python 3 issues in utils

* Replace urllib imports with six.moves.urllib
* Don't access private logging._levelNames attribute, but use the
  public function logging.addLevelName() instead.
* Replace basestring with six.string_types

Change-Id: I4cd5dd71ffb40f84e8844b5808b38630795ad520"
clayg,2015-09-11 23:24:52,https://api.github.com/repos/openstack/swift/git/commits/5070869ac0e6a2d577dd4054ffbcbffd06db3c5b,5070869ac0e6a2d577dd4054ffbcbffd06db3c5b,"Validate against duplicate device part replica assignment

We should never assign multiple replicas of the same partition to the
same device - our on-disk layout can only support a single replica of a
given part on a single device.  We should not do this, so we validate
against it and raise a loud warning if this terrible state is ever
observed after a rebalance.

Unfortunately currently there's a couple not necessarily uncommon
scenarios which will trigger this observed state today:

 1. If we have less devices than replicas
 2. If a server or zones aggregate device weight make it the most
    appropriate candidate for multiple replicas and you're a bit unlucky

Fixing #1 would be easy, we should just not allow that state anymore.
Really we never did - if you have a 3 replica ring with one device - you
have one replica.  Everything that iter_nodes'd would de-dupe.  We
should just be insisting that you explicitly acknowledge your replica
count with set_replicas.

I have been lost in the abyss for days searching for a general solutions
to #2.  I'm sure it exists, but I will not have wrestled it to
submission by RC1.  In the meantime we can eliminate a great deal of the
luck required simply by refusing to place more than one replica of a
part on a device in assign_parts.

The meat of the change is a small update to the .validate method in
RingBuilder.  It basically unrolls a pre-existing (part, replica) loop
so that all the replicas of the part come out in order so that we can
build up the set of dev_id's for which all the replicas of a given part
are assigned part-by-part.

If we observe any duplicates - we raise a warning.

To clean the cobwebs out of the rest of the corner cases we're going to
delay get_required_overload from kicking in until we achive dispersion,
and a small check was added when selecting a device subtier to validate
if it's already being used - picking any other device in the tier works
out much better.  If no other devices are available in the tier - we
raise a warning.  A more elegant or optimized solution may exist.

Many unittests did not meet the criteria #1, but the fix was straight
forward after being identified by the pigeonhole check.

However, many more tests were affected by #2 - but again the fix came to
be simply adding more devices.  The fantasy that all failure domains
contain at least replica count devices is prevalent in both our ring
placement algorithm and it's tests.  These tests were trying to
demonstrate some complex characteristics of our ring placement algorithm
and I believe we just got a bit too carried away trying to find the
simplest possible example to demonstrate the desirable trait.  I think
a better example looks more like a real ring - with many devices in each
server and many servers in each zone - I think more devices makes the
tests better.  As much as possible I've tried to maintain the original
intent of the tests - when adding devices I've either spread the weight
out amongst them or added proportional weights to the other tiers.

I added an example straw man test to validate that three devices with
different weights in three different zones won't blow up.  Once we can
do that without raising warnings and assigning duplicate device part
replicas - we can add more.  And more importantly change the warnings to
errors - because we would much prefer to not do that #$%^ anymore.

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>
Related-Bug: #1452431
Change-Id: I592d5b611188670ae842fe3d030aa3b340ac36f9"
clayg,2015-10-02 20:53:27,https://api.github.com/repos/openstack/swift/git/commits/a31ee07bda1a5ba8034277af9647aa21ad10be32,a31ee07bda1a5ba8034277af9647aa21ad10be32,"Make sure we have enough .durable's for GETs

Increase the number of nodes from which we require a final successful
HTTP responses before we return success to the client on a write - to
the same number of nodes we'll require successful responses from to
service a client request for a read.

Change-Id: Ifd36790faa0a5d00ec79c23d1f96a332a0ca0f0b
Related-Bug: #1469094"
tipabu,2015-10-01 21:10:43,https://api.github.com/repos/openstack/swift/git/commits/969f1ea9392589c22266ecd5cba326cbd4630fa3,969f1ea9392589c22266ecd5cba326cbd4630fa3,"Fix slorange on-disk format when including whole object

Not that the current implementation is broken, just wasteful.

When a client specifies a range for an SLO segment that includes the
entire referenced object, we should drop the 'range' key from the
manifest that's stored on disk.

Previously, we would do this if the uploaded manifest included the
object-length for validation, but not if it didn't. Now we will
always drop the 'range' key if the entire segment is being used.

Change-Id: I69d2fff8c7c59b81e9e4777bdbefcd3c274b59a9
Related-Change: Ia21d51c2cef4e2ee5162161dd2c1d3069009b52c"
clayg,2015-09-23 23:58:54,https://api.github.com/repos/openstack/swift/git/commits/8f6fd855a1ece5c23d9795a066e305532d56d304,8f6fd855a1ece5c23d9795a066e305532d56d304,"Add search filter examples to swift-ring-builder dispersion help

... because I always forget how to regex and have to independently
discover it everytime I want to use the tool!

Change-Id: I00d5ab6f573ef26e7e10502493c0066623583b00"
cschwede,2015-08-10 08:44:20,https://api.github.com/repos/openstack/swift/git/commits/4b8f52b1536ad6ea36719b2bfd4cce29fbc843c6,4b8f52b1536ad6ea36719b2bfd4cce29fbc843c6,"Fix copy requests to service accounts in Keystone

In case of a COPY request the swift_owner was already set to True, and the
following PUT request was granted access no matter if a service token was used
or not.  This allowed to copy data to service accounts without any service
token.

Service token unit tests have been added to verify that when
swift_owner is set to True in a request environ, this setting is
ignored when authorizing another request based on the same
environ. Applying only this test change on master fails currently, and
only passes with the fix in this patch.

Tempauth seems to be not affected, however a small doc update has been added to
make it more clear that a service token is not needed to access a service account
when an ACL is used.

Further details with an example are available in the bug report
(https://bugs.launchpad.net/swift/+bug/1483007).

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Co-Authored-By: Hisashi Osanai <osanai.hisashi@jp.fujitsu.com>
Co-Authored-By: Donagh McCabe <donagh.mccabe@hp.com>

Closes-Bug: 1483007
Change-Id: I1207b911f018b855362b1078f68c38615be74bbd"
notmyname,2015-09-29 22:00:53,https://api.github.com/repos/openstack/swift/git/commits/590e80870c7b7eac6ee389b532bfb2c5029577b2,590e80870c7b7eac6ee389b532bfb2c5029577b2,"fix docstring: s/2xx/1xx/

Change-Id: If863eb4e66e400081d2402ec8fbf0f9fe8f55b7c"
bloodeagle40234,2015-09-03 07:40:41,https://api.github.com/repos/openstack/swift/git/commits/8f1c7409e7b6a854125a234b8a2b969075d26dae,8f1c7409e7b6a854125a234b8a2b969075d26dae,"Don't send commits for quorum *BAD* requests on EC

In EC PUT request case, proxy-server may send commits to object-servers
it may make .durable file even though the request failed due to a lack
of quorum number.

For example:
- Considering the case that almost all object-servers fail by 422
  Unprocessable Entity
- Using ec scheme 4 + 2
- 5 (quorum size) object-server failed with 422, 1 object-servers
  succeeded as 201 created

How it works:
- Client creates a PUT request
- Proxy will open connections to backend object-servers
- Proxy will send whole encoded chunks to object-servers
- Proxy will send content-md5 as footers.
- Proxy will get responses [422, 422, 422, 422, 422, 201] (currently
  this list will be regarded as ""we have quorum response"")
- And then proxy will send commits to object-servers (the only
  object-server with 201 will create .durable file)
- Proxy will return 503 because the commits results in no response
  statuses from object-servers except the 201 node.

This patch fixes the quorum handling at ObjectController to check
that it has *successful* quorum responses before sending durable commits.

Closes-Bug: #1491748
Change-Id: Icc099993be76bcc687191f332db56d62856a500f"
bloodeagle40234,2015-09-28 11:50:46,https://api.github.com/repos/openstack/swift/git/commits/224c40fa6730ed5f3ae9fa049959433901b23889,224c40fa6730ed5f3ae9fa049959433901b23889,"Fix inlines for test/unit/obj/test_server.py

This patch fixes small nits for inline comments for

https://review.openstack.org/#/c/211338

as a follow-up patch, plus some other typos in comments.

Change-Id: Ibf7dc5683b39d6662573dbb036da146174a965fd"
bloodeagle40234,2015-05-22 23:53:12,https://api.github.com/repos/openstack/swift/git/commits/3f943cfcf2de26e51f1ace96f2c28a36ab105887,3f943cfcf2de26e51f1ace96f2c28a36ab105887,"Fix missing container update

At PUT object request, proxy server makes backend headers (e.g.
X-Container-Partition) which help object-servers to determine
the container-server they should update. In addition, the backend
headers are created as many as the number of container replicas.
(i.e. 3 replica in container ring, 3 backend headers will be created)

On EC case, Swift fans out fragment archives to backend object-servers.
Basically the number of fragment archives will be more than the container
replica number and proxy-server assumes a request as success when quorum
number of object-server succeeded to store. That would cause to make an
orphaned object which is stored but not container updated.

For example, assuming k=10, m=4, container replica=3 case:

Assuming, proxy-server attempts to make 14 backend streams but
unfortunately first 3 nodes returns 507 (disk failure) and then
the Swift doesn't have any other disks.

In the case, proxy keeps 11 backend streams to store and current Swift
assumes it as sufficient because it is more than or equals quorum (right
now k+1 is sufficient i.e. 11 backend streams are enough to store)
However, in the case, the 11 streams doesn't have the container update
header so that the request will succeed but container will be never updated.

This patch allows to extract container updates up to object quorum_size
+ 1 to more nodes to ensure the updates. This approach sacrifices the
container update cost a bit because duplicated updates will be there but
quorum sizes + 1 seems reasonable (even if it's reaplicated case) to pay
to ensure that instead of whole objects incude the update headers.

Now Swift will work like as follows:

For example:
k=10, m=4, qurum_size=11 (k+1), 3 replica for container.
CU: container update
CA: commit ack

That result in like as
 CU   CU   CU   CU   CU   CU   CU   CU   CU   CU   CU   CU
[507, 507, 507, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201]
                                              CA   CA   CA   CA   CA

In this case, at least 3 container updates are saved.

For another example:
7 replicated objects, qurum_size=4 (7//2+1), 3 replica for container.
CU: container update
CA: commit ack (201s for successful PUT on replicated)

 CU   CU   CU   CU   CU
[507, 507, 507, 201, 201, 201, 201]
                 CA   CA   CA   CA

In this replicated case, at least 2 container updates are saved.

Cleaned up some unit tests so that modifying policies doesn't leak
between tests.

Co-Authored-By: John Dickinson <me@not.mn>
Co-Authored-By: Sam Merritt <sam@swiftstack.com>

Closes-Bug: #1460920
Change-Id: I04132858f44b42ee7ecf3b7994cb22a19d001d70"
tipabu,2015-09-24 21:42:20,https://api.github.com/repos/openstack/swift/git/commits/2a8b455c4a478f7e3e0fda13e6b86a90560ed6b8,2a8b455c4a478f7e3e0fda13e6b86a90560ed6b8,"Only yield the pending segment on error if it's a SegmentListingError

(This happens, for example, when we can't read a submanifest for SLO,
or can't get the next page of objects for DLO)

This should prevent warnings like ""Exception RuntimeError: 'generator
ignored GeneratorExit' in <generator object _coalesce_requests at
0x4f9bf50> ignored"" when running .unittests

Change-Id: I5000053827369553669b1fb5fc9752b46c2cc782"
peluse,2015-08-10 21:37:10,https://api.github.com/repos/openstack/swift/git/commits/696186c680540606a8cea6495b39e23085b6863f,696186c680540606a8cea6495b39e23085b6863f,"Better error handling for EC PUT path when client goes away

There are a few places in the PUT path where the object server is
reading WSGI input and can find that there's nothing there.  e.g. in the
middle of a 2 phase commit and the proxy goes away for whatever reason,
like maybe it timed out because things are really busy.  Anyway, this
results in the ugly ValueError coming out of eventlet.wsgi about a
zillion levels away from the PUT path.

Expanding on the test cases from lp bug #1496205 and lp bug #1469094
this change carefully narrows into our read/readline calls to
wsgi_input and makes sure to tranlsate the ValueError to a
ChunkReadError - which the object.server can handle along with
ChunkReadTimeout.  When it made sense, this change attempts to stay
consistent throughout the code path in logging/raising client disconnect
instead of timeout.

It's unfortunate the error coming out of eventlet is so generic, but
that will be improved in future versions [1].

1. https://github.com/eventlet/eventlet/commit/c3ce3eef0b4d0dfdbfb1ec0186d4bb204fb8ecd5

Related-Bug: #1469094
Related-Bug: #1496205
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: I9e4dbf26623c0c6fc5c87afd14349466aa157385"
tipabu,2015-08-11 05:42:30,https://api.github.com/repos/openstack/swift/git/commits/25d5e686a172a2418fc6e4028174a354df29e0f1,25d5e686a172a2418fc6e4028174a354df29e0f1,"Add the ability to specify ranges for SLO segments

Users can now include an optional 'range' field in segment descriptions
to specify which bytes from the underlying object should be used for the
segment data. Only one range may be specified per segment. Note that the
'etag' and 'size_bytes' fields still describe the backing object as a
whole. So, if a user uploads a manifest like:

    [{""path"": ""/con/obj_seg_1"", ""etag"": null, ""size_bytes"": 1048576,
      ""range"": ""0-1023""},
     {""path"": ""/con/obj_seg_2"", ""etag"": null, ""size_bytes"": 1048576,
      ""range"": ""512-4095""},
     {""path"": ""/con/obj_seg_1"", ""etag"": null, ""size_bytes"": 1048576,
      ""range"": ""-2048""}]

then the segment will consist of the first 1024 bytes of /con/obj_seg_1,
followed by bytes 513 through 4096 (inclusive) of /con/obj_seg_2, and
finally bytes 1046528 through 1048576 (i.e., the last 2048 bytes) of
/con/obj_seg_1.

ETag generation for SLOs had been updated to prevent collisions when
using different ranges for the same set of objects.

Additionally, there are two performance enhancements:

 * On download, multiple sequential requests for segments from the same
   underlying object will be coalesced into a single ranged request,
   provided it still does not meet Swift's ""egregious range requests""
   critieria.

 * On upload, multiple sequential segments referencing the same object
   will be validated against the response from a single HEAD request.

Change-Id: Ia21d51c2cef4e2ee5162161dd2c1d3069009b52c
DocImpact"
clayg,2015-09-17 16:54:30,https://api.github.com/repos/openstack/swift/git/commits/3afdcf6b8fa74051fb6da0bf24799c80399624fd,3afdcf6b8fa74051fb6da0bf24799c80399624fd,"Fix proxy handling of EC client disconnect

The ECObjectController was unconditionally sending down the frag archive
commit document after the client source stream terminated - even if the
client disconnected early.

We can detect early disconnect in two ways:

  1. Content-Length and not enough bytes_transfered

     When eventlet.wsgi is reading from a Content-Length body the
     readable returns the empty string and our iterable raises
     StopIteration - but we can check content-length against
     bytes_transfered and know if the client disconnected.

  2. Transfer-Encoding: chunked - w/o a 0\r\n\r\n

     When eventlet.wsgi is reading from a Transfer-Encoding: chunked
     body the socket read returns the empty string, eventlet.wsgi's
     chunked parser raises ValueError (which we translate to
     ChunkReadError*) and we know we know the client disconnected.

... if we detect either of these conditions the proxy should:

  1. *not* send down the commit document to object servers
  2. disconnect from backend servers
  3. log the client disconnect

Oddly the code on master was only messing up the first part.  Backend
connections were terminated (gracefully after the commit document), and
then the disconnect was being logged as 499.

So now we only send down the commit document on a successful complete
client HTTP request (either whole Content-Length, or clean
Transfer-Encoding: chunked 0\r\n\r\n).

 * To detect the early disconnect on Transfer-Encoding: chunked a new
swift.common.exceptions.ChunkReadError is used to translate
eventlet.wsgi's more general IOError and ValueErrors into something
more appropriate to catch and handle closer to our generic
ChunkReadTimeout handling.

Co-Author: Alistair Coles <alistair.coles@hp.com>
Closes-Bug: #1496205
Change-Id: I028a530aba82d50baa4ee1d05ddce18d4cce4e81"
bloodeagle40234,2015-09-16 13:54:57,https://api.github.com/repos/openstack/swift/git/commits/9046676968a27191a9a96b19924e3fd484b6653b,9046676968a27191a9a96b19924e3fd484b6653b,"Fix client disconnect during multhiphase commit

This patch add a test to figure out the failure case behavior of
object-server when the connection from proxy-server disconnected
during commit phase. Especially, this patch was made to focus on
making sure whether or not contaienr updates occurs in the situation.

In the process of working on that test we made the behavior of the
object-server when the connection from the proxy-server disconnected
during the commit phase - reasonable.

We capture the IOError/ValueError's that eventlet.wsgi might barf out
really close to the wsgi_input read and translate them to a
swift.common.exceptions.ChunkReadError so we can handle them at a higher
level in the ObjectController's generic PUT disconnect handling.

Since that test went so well, we refactored the other ones to use some
common context management and wrote a few more.

Co-Author: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: I60c98172e524869b06bdf23fd1c4e1bce7a98f80"
clayg,2015-09-18 20:54:52,https://api.github.com/repos/openstack/swift/git/commits/1fe8e4327b15f8933efef185d09b6067d1f28716,1fe8e4327b15f8933efef185d09b6067d1f28716,"Fix recon tests on SAIO with multiple policies

Recon middleware used to only look on rings that exist on disk when it was
started, so if a test didn't create a ring in the temp swift_dir it can expect
the middleware to not report it.

However, after we started looking at policies to determine rings [1] - we need
to be more careful to patch policies to match up with the test requirements.
On development environments with only the legacy default polices the existing
recon tests were passing by accident - but not in my environment.

This change will patch policies for the TestCase so that tests will pass for
me.  Individual test methods that have more specific policy requirements for
the test can continue to @patch_policies just for those tests but in general
the existing test_methods all seem to expect legacy policies - so we just make
the default for the TestCase legacy_only.

Change-Id: I778a0a59091ca8870e1cab985f3ec426eb045ab7"
minwoob,2015-09-09 20:33:45,https://api.github.com/repos/openstack/swift/git/commits/a63f70c17d392379ec75045a94c38a96878b4c5c,a63f70c17d392379ec75045a94c38a96878b4c5c,"Reconstructor logging to omit 404 warnings

Currently, the replicator does not log warning messages
for 404 responses. We would like the reconstructor to
do the same, as 404s are not considered unusual, and
are already handled by the object server.

Change-Id: Ia927bf30362548832e9f451923ff94053e11b758
Closes-Bug: #1491883"
wbhuberIBM,2015-09-14 21:01:39,https://api.github.com/repos/openstack/swift/git/commits/530102ae07ea27b4a994e4b1fb2f590700cfef0c,530102ae07ea27b4a994e4b1fb2f590700cfef0c,"Update EC Support on how to build an EC ring with replicas count

This doc is being updated to specify the replicas count parameter
to build an EC ring that enforces both data and parity placements
for each partition.

Change-Id: I770ad268e4017e610be3357e89b89f0b7d3c18af
Closes-Bug: 1487203"
clayg,2015-09-15 00:17:29,https://api.github.com/repos/openstack/swift/git/commits/0d9142abd45f189b15eaec1a25464ed7d1859f97,0d9142abd45f189b15eaec1a25464ed7d1859f97,"Fix typo in Deployment Guide and add some formatting

Change-Id: I58703162bf3e9f39656a5e511bd8fe845793bca2"
briancline,2015-09-02 09:13:29,https://api.github.com/repos/openstack/swift/git/commits/460a7e4b64d134d1fd47f09924d594196b6458d4,460a7e4b64d134d1fd47f09924d594196b6458d4,"Fixes recon bug with initially missing rings

Previously the recon middleware was doing a basic scan for object
rings that exist at init time. In situations where an object-server
was started without an object ring present, but received one shortly
after, recon still would not report it in the /recon/ringmd5 response.
This persists even when object-server gleefully chugs along after
picking up the ring, and recon's behavior would only be corrected by
an object-server reload/restart.

This change brings the middleware a bit more up to date to use the
common POLICIES instance to determine what policies were already loaded
based on configuration, and derives the path for each ring.

This effectively makes the config the source of truth for what rings
*should* be present, rather than what's present at startup. Since we
already dynamically check in ReconMiddleware.get_ring_md5 whether each
of the predetermined ring files exist, recon now correctly reports a
previously-missing ring whenever it falls into place.

Change-Id: Ia079418e54ffac5e01ef6a15511f5069b7fe83ea"
wbhuberIBM,2015-09-08 21:11:33,https://api.github.com/repos/openstack/swift/git/commits/9324ce83c6dcbf5fb4ffefdc781eec5db1b946c9,9324ce83c6dcbf5fb4ffefdc781eec5db1b946c9,"Reconstructor GET excludes user_agent in log

To make it easier for users to deduce in the log to find out
where the request originates from, it is necessary to include
the user_agent field in the reconstructor for a GET method
and to have this particular log consistent with other servers'
methods.

Change-Id: I0ca7443436e97c2db64c966ab4d73c5c12a1f059
Closes-Bug: 1491871
Co-Authored-By: Kota Tsuyuzakai <tsuyuzaki.kota@lab.ntt.co.jp>"
clayg,2015-08-27 22:09:29,https://api.github.com/repos/openstack/swift/git/commits/369447ec47dc8df3e38046a305cf1aa0a6499ce9,369447ec47dc8df3e38046a305cf1aa0a6499ce9,"Fix purge for tombstone only REVERT job

When we revert a partition we normally push it off to the specific
primary node for the index of the data files in the partition.  However,
when a partition is devoid of any data files (only tombstones) we build
a REVERT job with a frag_index of None.

This change updates the ECDiskFile's purge method to be robust to
purging tombstones when the frag_index is None.

Add probetest to validate tombstone only revert jobs will clean
themselves up if they can validate they're in-sync with part-replica
count nodes - even if one of the primaries is down (in which case they
sync tombstones with other handoffs to fill in for the primaries)

Change-Id: Ib9a42f412fb90d51959efce886c0f8952aba8d85"
peluse,2015-08-27 18:02:27,https://api.github.com/repos/openstack/swift/git/commits/a3facce53cac0497edb326a93a97f24e02c603ab,a3facce53cac0497edb326a93a97f24e02c603ab,"Fix invalid frag_index header in ssync_sender when reverting EC tombstones

Back in d124ce [1] we failed to recognize the situation where a revert
job would have an explicit frag_index key wth the literal value None
which would take precedence over the dict.get's default value of ''.
Later in ssync_receiver we'd bump into the ValueError converting 'None'
to an int (again).

In ssync_sender we now handle literal None's correctly and should
hopefully no longer put this invalid headers on the wire - but for belts
and braces we'll also update ssync_receiver to raise a 400 series error
and ssync_sender to better log the error messages.

1. https://review.openstack.org/#/c/195457/

Co-Author: Clay Gerrard <clay.gerrard@gmail.com>
Co-Author: Alistair Coles <alistair.coles@hp.com>
Change-Id: Ic71ba7cc82487773214030207bb193f425319449
Closes-Bug: 1489546"
rledisez,2015-06-16 10:47:26,https://api.github.com/repos/openstack/swift/git/commits/71f6fd025ea013bc457450a5cc4f8e92c6df92cc,71f6fd025ea013bc457450a5cc4f8e92c6df92cc,"Allows to configure the rsync modules where the replicators will send data

Currently, the rsync module where the replicators send data is static. It
forbids administrators to set rsync configuration based on their current
deployment or needs.

As an example, the rsyncd configuration example encourages to set a connections
limit for the modules account, container and object. It permits to protect
devices from excessives parallels connections, because it would impact
performances.

On a server with many devices, it is tempting to increase this number
proportionally, but nothing guarantees that the distribution of the connections
will be balanced. In the worst scenario, a single device can receive all the
connections, which is a severe impact on performances.

This commit adds a new option named 'rsync_module' to the *-replicator sections
of the *-server configuration file. This configuration variable can be
extrapolated with device attributes like ip, port, device, zone, ... by using
the format {NAME}. eg:
    rsync_module = {replication_ip}::object_{device}

With this configuration, an administrators can solve the problem of connections
distribution by creating one module per device in rsyncd configuration.

The default values are backward compatible:
    {replication_ip}::account
    {replication_ip}::container
    {replication_ip}::object

Option vm_test_mode is deprecated by this commit, but backward compatibility is
maintained. The option is only effective when rsync_module is not set. In that
case, {replication_port} is appended to the default value of rsync_module.

Change-Id: Iad91df50dadbe96c921181797799b4444323ce2e"
codevulture,2015-07-12 16:48:58,https://api.github.com/repos/openstack/swift/git/commits/36bc4cd9ed531973e087859e74574d4562ee6759,36bc4cd9ed531973e087859e74574d4562ee6759,"Python 3 using builtins instead of __builtin__, rename raw_input() to input() from six.moves

Using these modules from six

Replacements:
*input() from six.moves could be used instead of raw_input()
*__builtin__ with six.moves.builtins

Change-Id: I8749dd33496ed8718bd2c6620c9dc5240c2ce683"
the-kid89,2015-09-03 00:18:03,https://api.github.com/repos/openstack/swift/git/commits/e4542455c8a07b7981c247df8b737816062c1655,e4542455c8a07b7981c247df8b737816062c1655,"[Labs] Update links to Cloud Admin Guide

Update links to the Cloud Admin Guide after the
RST conversion of that book altered URLs.

Change-Id: I899f8938498b744e62887968a65e58c00ef27f1b"
cschwede,2015-09-02 10:52:34,https://api.github.com/repos/openstack/swift/git/commits/58fcc07523978306cd3889ada73af5d9e664cf59,58fcc07523978306cd3889ada73af5d9e664cf59,"Test if container_sweep is executed on unmounted devices

This change ensures that container_sweep is not run if a device is not mounted
and mount_check is set to True.

Change-Id: I823083c8431d9e61fd426508033ec9188503957b"
smerritt,2015-09-01 22:19:50,https://api.github.com/repos/openstack/swift/git/commits/e02609c66a804845672413b06830b87395afef31,e02609c66a804845672413b06830b87395afef31,"Preserve traceback in swift-dispersion-report

Commit c690bcb fixed a bug in the dispersion report, but changed this
from a bare ""raise"" to ""raise err"", which loses the traceback. Not a
big deal, but worth putting back IMO.

Change-Id: Id5b72153a4b8df8e3faaf1fa3fb2040e28ba85cc"
minwoob,2015-09-01 20:08:44,https://api.github.com/repos/openstack/swift/git/commits/d06d4ad0fd2dfe69da8008e729651264522c6c06,d06d4ad0fd2dfe69da8008e729651264522c6c06,"Included reference in swift.obj.diskfile to enumerate the string
used for data file paths.

Change-Id: Ie22caa678bc00dfc43fabec7efbbb9f34490f1b5"
briancline,2015-09-01 15:51:20,https://api.github.com/repos/openstack/swift/git/commits/615c7a204b9386e05c5bab658bfe96766ad1e680,615c7a204b9386e05c5bab658bfe96766ad1e680,"Adds useful dispersion info from changelog

Change-Id: I1a45088fc32620b02ff9a754b02ec1eb75a59d6e"
codevulture,2015-08-02 15:59:13,https://api.github.com/repos/openstack/swift/git/commits/3b8755098a1786c5447abf158bd686293a82977c,3b8755098a1786c5447abf158bd686293a82977c,"Replace a / b with a // b to use integer division where needed

Change-Id: I72c81faa62786e140b0de00e3a04934bf1b5adbd"
notmyname,2015-08-21 20:39:41,https://api.github.com/repos/openstack/swift/git/commits/524c89b7eeff037b8a6b421888771e15f98c2da2,524c89b7eeff037b8a6b421888771e15f98c2da2,"Updated CHANGELOG, AUTHORS, and .mailmap for 2.4.0 release.

Change-Id: Ic6301146b839c9921bb85c4f4c1e585c9ab66661"
clayg,2015-08-28 01:35:09,https://api.github.com/repos/openstack/swift/git/commits/05de1305a903ee4ce9c8c50fde53c552d5b90d51,05de1305a903ee4ce9c8c50fde53c552d5b90d51,"Make ssync_sender send valid chunked requests

The connect method of ssync_sender tells the remote connection that it's
going to send a valid HTTP chunked request, but if the remote end needs
to respond with an error of any kind sender throws HTTP right out the
window, picks up his ball, and closes the socket down hard - much to the
surprise of the eventlet.wsgi server who up to this point had been
playing along quite nicely with this 'SSYNC' nonsense assuming that
everyone here is consenting mature adults.

If you're going to make a ""Transfer-Encoding: chunked"" request have the
good decency to finish the job with a proper '0\r\n\r\n'. [1]

N.B. It might be possible to handle an error status during the
initialize_request phase with some sort of 100-continue support, but
honestly it's not entirely clear to me when the server isn't going to
close the connection if the client is still expected to send the body
[2] - further if the error comes later during missing_check or updates
we'll for sure want to send the chunk transfer termination line before
we close down the socket and this way we cover both.

1. Really, eventlet.wsgi shouldn't be so blasted brittle about this [3]
2. https://lists.w3.org/Archives/Public/ietf-http-wg/2005AprJun/0007.html
3. https://github.com/eventlet/eventlet/commit/c3ce3eef0b4d0dfdbfb1ec0186d4bb204fb8ecd5

Closes-Bug #1489587
Change-Id: Ic17c6c3075553f8cf6ef6213e62a00282f0d01cf"
nakagawamsa,2015-08-28 02:49:43,https://api.github.com/repos/openstack/swift/git/commits/993ee4e37af1961adba2047d5aa2eb210e423eb3,993ee4e37af1961adba2047d5aa2eb210e423eb3,"Remove duplicate X-Backend-Storage-Policy-Index key

There is duplicate 'X-Backend-Storage-Policy-Index' dictionary key in unit.obj.test_server.py.
One key has fixed policy index value, and another has random value.
Unittest should done with random policy index, so remove key which is set fixed value.

Change-Id: Ic91fcf44d48297d0feee33c928ca682def9790a3"
peluse,2015-08-12 20:32:50,https://api.github.com/repos/openstack/swift/git/commits/893f30c61d280804e417790dd34ba7bc3fb4f6fc,893f30c61d280804e417790dd34ba7bc3fb4f6fc,"EC GET path: require fragments to be of same set

And if they are not, exhaust the node iter to go get more.  The
problem without this implementation is a simple overwrite where
a GET follows before the handoff has put the newer obj back on
the 'alive again' node such that the proxy gets n-1 fragments
of the newest set and 1 of the older.

This patch bucketizes the fragments by etag and if it doesn't
have enough continues to exhaust the node iterator until it
has a large enough matching set.

Change-Id: Ib710a133ce1be278365067fd0d6610d80f1f7372
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Closes-Bug: 1457691"
vstinner,2015-08-26 22:56:08,https://api.github.com/repos/openstack/swift/git/commits/4feaccf0145a908d7b93e73f9d97d3cf0400f9e4,4feaccf0145a908d7b93e73f9d97d3cf0400f9e4,"Input validation must not depend on the locale

storage_policy.py: replace string.letters with string.ascii_letters.

This change does not change the behaviour on Python 2. It is only needed
for Python 3 because string.letters was removed.

On Python 2, string.letters is modified when locale.setlocale() is
called. Hopefully, Swift doesn't call setlocale() and so it's safe to
replace it.

Change-Id: Ifbf9332ae739b1bfc9e6d2831f4e7581e69f233d"
vstinner,2015-08-26 23:00:26,https://api.github.com/repos/openstack/swift/git/commits/5fbfbba7876fff74f53b49ee4a6c1ab76ae2552c,5fbfbba7876fff74f53b49ee4a6c1ab76ae2552c,"Port swob to Python 3

* HeaderEnvironProxy: replace UserDict.DictMixin with
  collections.MutableMapping, add __iter__ and __len__ methods, and
  add more unit tests
* Replace url* imports with six.moves.urllib

Change-Id: I9ed22d0dd52ee7ac8fa16571f82c45975cfdffff"
smerritt,2015-08-11 14:10:13,https://api.github.com/repos/openstack/swift/git/commits/d4409c0a046c6ce0e14e18c95efe2cd16cf120e8,d4409c0a046c6ce0e14e18c95efe2cd16cf120e8,"Better scoping for tempurls, especially container tempurls

It used to be that a GET of a tempurl referencing a large object would
let you download that large object regardless of where its segments
lived. However, this led to some violated user expectations around
container tempurls.

(Note on shorthand: all tempurls reference objects. However, ""account
tempurl"" and ""container tempurl"" are shorthand meaning tempurls
generated using a key on the account or container, respectively.)

Let's say an application is given tempurl keys to a particular
container, and it does all its work therein using those keys. The user
expects that, if the application is compromised, then the attacker
only gains access to the ""compromised-container"". However, with the old
behavior, the attacker could read data from *any* container like so:

1) Choose a ""victim-container"" to download

2) Create PUT and GET tempurl for any object name within the
   ""compromised-container"". The object doesn't need to exist;
   we'll create it.

3) Using the PUT tempurl, upload a DLO manifest with
   ""X-Object-Manifest: /victim-container/""

4) Using the GET tempurl, download the object created in step 3. The
   result will be the concatenation of all objects in the
   ""victim-container"".

Step 3 need not be for all objects in the ""victim-container""; for
example, a value ""X-Object-Manifest: /victim-container/abc"" would only
be the concatenation of all objects whose names begin with ""abc"". By
probing for object names in this way, individual objects may be found
and extracted.

A similar bug would exist for manifests referencing other accounts
except that neither the X-Object-Manifest (DLO) nor the JSON manifest
document (SLO) have a way of specifying a different account.

This change makes it so that a container tempurl only grants access to
objects within its container, *including* large-object segments. This
breaks backward compatibility for container tempurls that may have
pointed to cross container *LO's, but (a) there are security
implications, and (b) container tempurls are a relatively new feature.

This works by having the tempurl middleware install an authorization
callback ('swift.authorize' in the WSGI environment) that limits the
scope of any requests to the account or container from which the key
came.

This requires swift.authorize to persist for both the manifest request
and all segment requests; this is done by having the proxy server
restore it to the WSGI environment prior to returning from __call__.

[CVE-2015-5223]

Co-Authored-By: Clay Gerrard <clayg@swiftstack.com>
Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Co-Authored-By: Christian Schwede <cschwede@redhat.com>
Co-Authored-By: Matthew Oliver <matt@oliver.net.au>

Change-Id: Ie6d52f7a07e87f6fec21ed8b0ec1d84be8b2b11c
Closes-Bug: 1449212"
clayg,2015-07-24 05:36:21,https://api.github.com/repos/openstack/swift/git/commits/10b2939b433a4a79b4f7b97640b3d208cacfeffb,10b2939b433a4a79b4f7b97640b3d208cacfeffb,"Disallow unsafe tempurl operations to point to unauthorized data

Do not allow PUT tempurls to create pointers to other data. Specifically
disallow the creation of DLO object manifests by returning an error if a
non-safe tempurl request includes an X-Object-Manifest header regardless of
the value of the header.

This prevents discoverability attacks which can use any PUT tempurl to probe
for private data by creating a DLO object manifest and then using the PUT
tempurl to head the object which would 404 if the prefix does not match any
object data or form a valid DLO HEAD response if it does.

This also prevents a tricky and potentially unexpected consequence of PUT
tempurls which would make it unsafe to allow a user to download objects
created by tempurl (even if they just created them) because the result of
reading the object created via tempurl may not be the data which was uploaded.

[CVE-2015-5223]

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>

Change-Id: I11e68830009d3f6bff44ae4011a41b67139146f6
Closes-Bug: 1453948"
KazuhiroMiyahara,2015-08-17 07:50:56,https://api.github.com/repos/openstack/swift/git/commits/c690bcb68331818a04c94741b25f40cc40f7b3c4,c690bcb68331818a04c94741b25f40cc40f7b3c4,"Fix dispersion-reports error message

This patch fixes Swift to show message
""No objects to query. Has swift-dispersion-populate been run?""
for ""swift-dispersion-report —object-only”
with no container for object dispersion.

Change-Id: I82da56709cfc296a27f5180681709bc56adbc13d
Closes-Bug: #1468120"
smerritt,2015-08-24 22:41:23,https://api.github.com/repos/openstack/swift/git/commits/04ff0927eeda0cc3ae2409c6fe6c5a9b6e39fdd2,04ff0927eeda0cc3ae2409c6fe6c5a9b6e39fdd2,"Make the object auditor's run-once mode run once.

If you invoked the object auditor with --once, it would run the
full-audit checker(s) once, but it would run the ZBF checker over and
over until the full-audit checkers were done. Now it runs the ZBF and
full-audit checkers once each.

Change-Id: Ieeaa6fba4184a069756ee150727f24df7833697a"
bloodeagle40234,2015-07-06 20:21:40,https://api.github.com/repos/openstack/swift/git/commits/17efa343c605d0361b3f423696babbab3f3d972d,17efa343c605d0361b3f423696babbab3f3d972d,"Fix EC GET backend stream iteration state

In EC case, When GET object requested, proxy-server always makes a log
line ""Client disconnected on read"" even though the request succeeded.

That is because ECAppIter class doesn't maintain a bunch of backend
stream when closing the app_iter. It will cause unfortunately
GeneratorExit on backend stream ResumingGetter.

This patch fixes to set non_client_disconnected to propagate the state
to the backend streams when the range iteration stopped successful.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I77af9807816bea1444d66534a17e2a210bcf09f8
Closes-Bug: #1472201"
smerritt,2015-08-25 06:11:34,https://api.github.com/repos/openstack/swift/git/commits/a7b84f4c51207608adc3a5de7f4f9a629053c0ab,a7b84f4c51207608adc3a5de7f4f9a629053c0ab,"Allow pep8 of a single file

Now you can run

   $ tox -e pep8 path/to/file.py [path/to/file2.py [...]]

to run pep8 against just those files[1]. This is quite a bit faster
than a full pep8 run, and the faster feedback is nice when you're
fiddling with some formatting to placate pep8.

Of course, you can still run ""tox -e pep8"" to check the whole source
tree, just as before this commit.

[1] It'll still run against bin/swift* as well, but that's still a lot
faster than running against all our .py files.

Change-Id: I81b4363fb95a34ff0f5c346b2b24f2047154f502"
matthewoliver,2015-08-25 01:24:49,https://api.github.com/repos/openstack/swift/git/commits/6a35d479e8952c854fee6fbef9fe0397a289a6e5,6a35d479e8952c854fee6fbef9fe0397a289a6e5,"Follow up patch to fix a multiline import NITPIC

This change cleans up test/unit/obj/test_replicator.py's imports
to use only 1 version of multiline import syntaxes (' \' vs '()').
I don't really mind which, but we should be consistant, at least
in the same file.

This is a follow up for patch 215857.

Change-Id: Ie2d328c25865b19092c493981a803ee246a9d7a5"
osanai-hisashi,2015-08-24 22:52:18,https://api.github.com/repos/openstack/swift/git/commits/edde5584affaa983d8db1d294bf1e20a2d4bbb50,edde5584affaa983d8db1d294bf1e20a2d4bbb50,"Fix typo of a comment in replicator

The typo was introduced by patch 138342 (sorry) so I fix it.

Change-Id: Id5126802d281ef7ee9be128bd2152c0d2584160e"
tipabu,2015-08-24 20:36:22,https://api.github.com/repos/openstack/swift/git/commits/6151c6c45da481c0ea9a4fb876d14b39c1e347bf,6151c6c45da481c0ea9a4fb876d14b39c1e347bf,"Fix use of delimiter in account listings

Previously, account listings that used the delimiter query param could
omit some containers if they ended with the character that follows the
delimiter.

See If196e3075612b121ef8da4a9128167d00a248c27 for the corresponding fix
for container listings.

Change-Id: I57fcb97e51f653f5f4e306a632fcb3a0fb148c4e"
clayg,2015-08-22 01:14:55,https://api.github.com/repos/openstack/swift/git/commits/a38f63e1c6b8b85b1675aa900e239a2e9906811e,a38f63e1c6b8b85b1675aa900e239a2e9906811e,"Use correct Storage-Policy header for REPLICATE requests

Under some concurrency the object-replicator could potentially send the
wrong X-Backed-Storage-Policy-Index header to it's partner nodes during
replication if there were multiple storage policies on the same node
because of a race where multiple jobs being processed concurrently would
mutate some shared state on the ObjectReplicator instance.

Instead of using shared stated on the ObjectReplicator instance when
mutating the default headers send with REPLICATION requests each job
will copy them into a local where they can safely be updated.

Change-Id: I5522db57af7e308b1f9d4181f14ea14e386a71fd"
bloodeagle40234,2015-05-15 13:44:12,https://api.github.com/repos/openstack/swift/git/commits/ae129bf5e8c918efd8ee66279f98ee85e7c97b24,ae129bf5e8c918efd8ee66279f98ee85e7c97b24,"eventlet.posthook related code needn't anymore

In the past, older Swift seemed to use eventlet.posthooks scheme for the
logging on proxy with posthooklogger method. However, for now, Swift
attaches no method to eventlet.posthooks everywhere so we don't have
to maintain the posthooks anymore.

Change-Id: Ie63941a202d448532d980252a4d25575f8edab9c"
bloodeagle40234,2015-05-13 07:43:59,https://api.github.com/repos/openstack/swift/git/commits/4500ff340f021e4e5f6fd53960de03cb3c207925,4500ff340f021e4e5f6fd53960de03cb3c207925,"Fix the missing SLO state on fast-post

When using fast-post and POST (i.e. metadata update) is requested to
a SLO manifest files, current Swift drops the 'X-Static-Large-Object'
header from the existing metadata. It results in breaking the SLO
state because the manifest missing the 'X-Static-Large-Object' metadata
will be maintained as a normal files.

This patch fixes object-server to keep the existing
'X-Static-Large-Object' flag and then keep the SLO state.

Change-Id: Ib1eb569071372c322dd105c52baeeb094003291e
Closes-bug: #1453807"
clayg,2015-08-21 21:04:46,https://api.github.com/repos/openstack/swift/git/commits/8b1df9918bf6c22b49b161a402199b532bfd8266,8b1df9918bf6c22b49b161a402199b532bfd8266,"Minor cleanup handoff mode warnings

  * message is a little clearer
  * test is a little stronger

Change-Id: I745cde7f4a46dafc80ab42d39e6ccc92aa3b746e"
ccavanna,2015-08-21 18:14:31,https://api.github.com/repos/openstack/swift/git/commits/a1ceab5a92dfdafd5abffed272ac2cece5302f32,a1ceab5a92dfdafd5abffed272ac2cece5302f32,"New troubleshooting case in documentation.

Added a new troubleshooting case for the ""First Contribution to Swift""
documentation page.

Change-Id: I182ba702b49b28409fe56becae93326e5f63dcd0"
ccavanna,2015-07-10 03:10:05,https://api.github.com/repos/openstack/swift/git/commits/4765189ef3f67b3f709c3141f222e15c6d89a62d,4765189ef3f67b3f709c3141f222e15c6d89a62d,"Improving statistics sent to Graphite.

Currently, statistics are organized by command. However, it would also be
useful to display statistics organized by policy. Different policies may be
based on different storage properties (ie, faster disks).
With this change, all the statistics for object timers will be sent per policy
as well.
Policy statistics reporting will use policy index and the name in Graphite will
show as proxy-server.object.policy.<policy-index>.<verb>, etc.
Updated unit tests for per-policy stat reporting and added new unit tests for
invalid cases.
Updated documentation in the Administrator's Guide to reflect this new
aggregation.

Change-Id: Id70491e4833791a3fb8ff385953d69018514cd9c"
smerritt,2015-08-20 20:24:38,https://api.github.com/repos/openstack/swift/git/commits/be66aa8e76d2994eb8a0a944e0dea26ffbb3c159,be66aa8e76d2994eb8a0a944e0dea26ffbb3c159,"Fix 500 for bogus Range request to 0-byte object.

The proxy was trying to pop a byterange off a Range header that didn't
contain syntactically-valid byteranges. This worked about as well as
you'd expect. Now we detect the bogus value and remove the header
entirely.

Change-Id: I24b92f900d33ec79880c7db2870378489d5a6810"
codevulture,2015-07-28 15:05:25,https://api.github.com/repos/openstack/swift/git/commits/923238aa1ba0963c414ba5321cd3910b2910f4ed,923238aa1ba0963c414ba5321cd3910b2910f4ed,"test/(functional/probe):Replace python print operator with print function (pep H233, py33)

'print' function is compatible with 2.x and 3.x python versions
Link : https://www.python.org/dev/peps/pep-3105/

Python 2.6 has a __future__ import that removes print as language syntax,
letting you use the functional form instead

Change-Id: I416c6ac21ccbfb91ec328ffb1ed21e492ef52d58"
smerritt,2015-08-19 17:42:28,https://api.github.com/repos/openstack/swift/git/commits/47dc31940d64b0c87e99cc73eddcdd01dd8b3ad4,47dc31940d64b0c87e99cc73eddcdd01dd8b3ad4,"Add OpenStack release names to changelog

I can never remember the mapping of real version numbers to the
OpenStack names.

Change-Id: Ib7c5ae4ff2a33018364698eb34f8df1622719fab"
vstinner,2015-08-16 09:18:49,https://api.github.com/repos/openstack/swift/git/commits/183508710d011ec30ebba2186c58fd28d449e4bb,183508710d011ec30ebba2186c58fd28d449e4bb,"pep8: Don't override '_' symbol

Fix pep8 warning F402 ""import '_' from line 51 shadowed by loop
variable"".

Change-Id: I139060ff5d298a8b0f0f8e529a5737478fb5daf5"
vstinner,2015-08-16 09:06:52,https://api.github.com/repos/openstack/swift/git/commits/c7eb589c6ca2fe4f2950cae22a18513e4dec6c46,c7eb589c6ca2fe4f2950cae22a18513e4dec6c46,"pep8: Fix usage of the l10n _('...') function

Fix the pep8 warning H702 ""Formatting operation should be outside of
localization method call"".

For the logger, pass parameters as indexed parameters instead of using
the string str%args operator, the logger is more reliable in case of
formatting error.

Change-Id: If418bc155f6a6c0a00f63e3d87ebe4addf4aae55"
vstinner,2015-08-16 08:34:26,https://api.github.com/repos/openstack/swift/git/commits/7bea148d2fe22daa9d1fbbc5cd16ebd390b64b1b,7bea148d2fe22daa9d1fbbc5cd16ebd390b64b1b,"pep8: replace deprecated calls to assert_()

The TestCase.assert_() has been deprecated in Python 2.7. Replace it
with assertTrue() or even better methods (assertIn, assertNotIn,
assertIsInstance) which provide better error messages.

Change-Id: I21c730351470031a2dabe5238693095eabdb8964"
vstinner,2015-07-27 16:55:01,https://api.github.com/repos/openstack/swift/git/commits/8aaacbf88d9ea4432e58dd261b98ff95d7c69be6,8aaacbf88d9ea4432e58dd261b98ff95d7c69be6,"pep8: Fix hacking H232 warnings (octal)

Fix warnings ""H232: Python 3.x incompatible octal 000001234 should be
written as 0o1234"".

Change-Id: I9a7bbb034357783885ac3e18fe1e9e32a5951616"
wbhuberIBM,2015-08-07 21:24:28,https://api.github.com/repos/openstack/swift/git/commits/5b01c5eadc3a13607d2581a55007700fca0b00af,5b01c5eadc3a13607d2581a55007700fca0b00af,"Add unit test for container_update for unmounted device

This unit test case gains coverage for container/update.py
where a device (i.e. sda1) is not mounted and the code
responds with a warning logger that the device is not
mounted and continues.  Coverage increases 2% as a result.

Change-Id: I33d247a930b28604093df4ade1ce7dbbd24aac54"
vilisseranen,2015-08-12 19:00:45,https://api.github.com/repos/openstack/swift/git/commits/d6267c1f95a7fcd2b0e4f15d5efc6bcfe2114de0,d6267c1f95a7fcd2b0e4f15d5efc6bcfe2114de0,"Keep user id and project id in subrequests env

Keep HTTP_X_USER_ID and HTTP_X_PROJECT_ID to be available as
user_id and project_id in storage.objects.outgoing.bytes in
ceilometer when downloading a multipart object.

Change-Id: I0f4734f021e5d6e84d48ed9bebeb321d7a9590ad
Closes-Bug: #1477283"
notmyname,2015-08-18 05:13:42,https://api.github.com/repos/openstack/swift/git/commits/eaa006464cb98a2f36809edfa13bd3dcaebc9952,eaa006464cb98a2f36809edfa13bd3dcaebc9952,"move global statement up a few lines

Change-Id: I190d2d530c6c0525d988cc88b0965b48a291fffb"
hroumani,2015-08-03 21:45:56,https://api.github.com/repos/openstack/swift/git/commits/1a81cda8b7eba0d25ea7341da756bb588cae8d73,1a81cda8b7eba0d25ea7341da756bb588cae8d73,"Doc instructions for post rebase steps

Improve the 'first_contribution_swift' by adding instructions for how to
rebuild swift following a rebase.

Change-Id: If5c91dc4e1e8d1712bbd8b326c675967fb4b8c15"
osanai-hisashi,2014-12-02 21:15:16,https://api.github.com/repos/openstack/swift/git/commits/79ba4a85983641e539b620bd143e62673c98416e,79ba4a85983641e539b620bd143e62673c98416e,"Enable Object Replicator's failure count in recon

This patch makes the count of object replication failure in recon.
And ""failure_nodes"" is added to Account Replicator and
Container Replicator.

Recon shows the count of object repliction failure as follows:
$ curl http://<ip>:<port>/recon/replication/object
{
    ""replication_last"": 1416334368.60865,
    ""replication_stats"": {
        ""attempted"": 13346,
        ""failure"": 870,
	""failure_nodes"": {
            ""192.168.0.1"": {""sdb1"": 3},
            ""192.168.0.2"": {""sdb1"": 851,
                            ""sdc1"": 1,
                            ""sdd1"": 8},
            ""192.168.0.3"": {""sdb1"": 3,
                            ""sdc1"": 4}
	},
        ""hashmatch"": 0,
        ""remove"": 0,
        ""rsync"": 0,
        ""start"": 1416354240.9761429,
        ""success"": 1908
    },
    ""replication_time"": 2316.5563162644703,
    ""object_replication_last"": 1416334368.60865,
    ""object_replication_time"": 2316.5563162644703
}

Note that 'object_replication_last' and 'object_replication_time' are
considered to be transitional and will be removed in the subsequent
releases. Use 'replication_last' and 'replication_time' instead.

Additionaly this patch adds the count in swift-recon and it will be
showed as follows:
$ swift-recon object -r
========================================================================
=======
--> Starting reconnaissance on 4 hosts
========================================================================
=======
[2014-11-27 16:14:09] Checking on replication
[replication_failure] low: 0, high: 0, avg: 0.0, total: 0, Failed: 0.0%,
no_result: 0, reported: 4
[replication_success] low: 3, high: 3, avg: 3.0, total: 12,
Failed: 0.0%, no_result: 0, reported: 4
[replication_time] low: 0, high: 0, avg: 0.0, total: 0, Failed: 0.0%,
no_result: 0, reported: 4
[replication_attempted] low: 1, high: 1, avg: 1.0, total: 4,
Failed: 0.0%, no_result: 0, reported: 4
Oldest completion was 2014-11-27 16:09:45 (4 minutes ago) by
192.168.0.4:6002.
Most recent completion was 2014-11-27 16:14:19 (-10 seconds ago) by
192.168.0.1:6002.
========================================================================
=======

In case there is a cluster which has servers, a server runs with this
patch and the other servers run without this patch. If swift-recon
executes on the server which runs with this patch, there are unnecessary
information on the output such as [failure], [success] and [attempted].
Because other servers which run without this patch are not able to
send a response with information that this patch needs.
Therefore once you apply this patch, you also apply this patch to other
servers before you execute swift-recon.

DocImpact
Change-Id: Iecd33655ae2568482833131f422679996c374d78
Co-Authored-By: Kenichiro Matsuda <matsuda_kenichi@jp.fujitsu.com>
Co-Authored-By: Brian Cline <bcline@softlayer.com>
Implements: blueprint enable-object-replication-failure-in-recon"
cschwede,2015-08-06 07:21:15,https://api.github.com/repos/openstack/swift/git/commits/eeb0fa40a19917e6548f95f0bd3c08736928449b,eeb0fa40a19917e6548f95f0bd3c08736928449b,"Make swift-ring-builder filename usage more consistent

Sometimes the given argument is internally altered and another filename is used
without a note to the operator. Even worse, a given .ring.gz filename is
sometimes written out as builder file, without updating the corresponding
.builder file.

There is already a method to parse the given argv and return the name of the
builder and ring file. However, it's rarely used and no warning is given to the
user if it is altered. This patch uses the already parsed builder and ring file
name instead of argv[1], and also adds a note to the user if the used filename
is differently to the one given as argument.

Closes-Bug: 1482096
Change-Id: I2f8ef23aeab8b07caaa799f7dcd57e684b4b2ad2"
wbhuberIBM,2015-08-17 18:54:44,https://api.github.com/repos/openstack/swift/git/commits/b75d2a4e37d4c86763a2cc56c6dd53ebe2e0de19,b75d2a4e37d4c86763a2cc56c6dd53ebe2e0de19,"Quorum on durable response is too low

Increase the .durable quorum from 2 to ""parity + 1"" to guarantee
that we will never fail to rebuild an object.  Otherwise, with
low durable responses back (< parity + 1), the putter objects
return with failed attribute set to true, thereby failing the
rebuild of fragments for an object.

Change-Id: I80d666f61273e589d0990baa78fd657b3470785d
Closes-Bug: 1484565"
kazhang,2015-08-14 23:46:35,https://api.github.com/repos/openstack/swift/git/commits/fa35e38c9f83f704eb087f80157cbe33b23b9db2,fa35e38c9f83f704eb087f80157cbe33b23b9db2,"Fix some minor typos

Fixed some typos in function name and comments.

Change-Id: Ida76ab4b331a51b71e57650702acc136e66ba4b2"
bloodeagle40234,2015-07-01 07:11:41,https://api.github.com/repos/openstack/swift/git/commits/4de6e32bcaaa1ae1ac437c8d4f0ebd722b91f712,4de6e32bcaaa1ae1ac437c8d4f0ebd722b91f712,"Change POST container semantics

To achieve last modified header on GETorHEAD container
we should allow POST container to overwrite put-timestamp.
That is because following patches will change the the put-timestamp
value semantics in both container db and account db as ""container
last modified"".

If we achieved this and followings, we will be able to retrieve the
container timestamp which is suggested when the container metadata
modified.

Example:
- Create a container.
- Change the ACL with POST container. (e.g. x-container-read)
- After that, we can know the container was changed by comparing
  between the timestamp from container creation and the last modified
  generated from put-timestamp.

Change-Id: I1a545fcd1896798dfa7cb5e5af97c78f5d7d7e4d"
bloodeagle40234,2015-07-22 17:39:22,https://api.github.com/repos/openstack/swift/git/commits/5b246e875fe9ac3d764ea581ad52b04238f5bcc8,5b246e875fe9ac3d764ea581ad52b04238f5bcc8,"Fix EC range GET/COPY handling

When range GET (or COPY) for an EC object requested, if the requested range
starts from more than last segments alignment (i.e.
ceil(object_size/segment_size) * segment_size), proxy server will return
the original content length w/o body, though Swift should return an error
massage as a body and the length of message as the content length.
The current behavior will cause stuck on some client. (e.g. curl)

This patch fixes that proxy enables to return correct response, even if such
an over range requested.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

Change-Id: I21f81c842f563ac4dddc69011ed759b744bb20bd
Closes-Bug: #1475499"
smerritt,2015-08-11 15:17:20,https://api.github.com/repos/openstack/swift/git/commits/7064706b2721c36c5181267f58704b9344ad4ac0,7064706b2721c36c5181267f58704b9344ad4ac0,"Fix 500 in versioned writes with bad Destination

When this code lived in the proxy, it was protected by an ""except
HTTPException"" clause in proxy.Application.handle_request(). When it
moved to middleware, it lost that, and then things like
constraints.check_name_format that raised HTTPException would cause
500s. The HTTPException would make it all the way out to catch_errors
and get translated to a 500.

This commit just wraps a couple try/excepts around the bits in
versioned writes that can raise HTTPException. I tried to make it use
wsgify so I could get that for free, but that wound up being a real
pain because env/start_response are plumbed through pretty much the
whole versioned-writes middleware.

Closes-Bug: 1483705

Change-Id: Ife165bf709e64f313ed07c779b21914045e51f25"
zhaoleidd,2015-08-07 14:07:01,https://api.github.com/repos/openstack/swift/git/commits/4ac1fea5d111c669ff827f4eb29c0735cbad6ba5,4ac1fea5d111c669ff827f4eb29c0735cbad6ba5,"Fix some spelling typo in comments

s/overide/override for object-expirer.conf and sample.
s/automaticaly/automatically for swift/proxy/controllers/obj.py

Change-Id: Ife107c7a1005a5d4959288db50a7f8f33c522dd4
Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com>"
codevulture,2015-08-05 19:25:36,https://api.github.com/repos/openstack/swift/git/commits/9456af35a2832aeafc4a4e78ebd0d4142ead71cd,9456af35a2832aeafc4a4e78ebd0d4142ead71cd,"pep8 fix: assertEquals -> assertEqual

assertEquals is deprecated in py3,changes in
dir:
*test/unit/obj/*
*test/unit/test_locale/*

Change-Id: I3dd0c1107165ac529f1cd967363e5cf408a1d02b"
zhaoleidd,2015-08-07 13:57:08,https://api.github.com/repos/openstack/swift/git/commits/1952451ed7e97e2bfa3b11dfa5000cc39f712084,1952451ed7e97e2bfa3b11dfa5000cc39f712084,"Fix a spelling typo in comment

s/automaticaly/automatically/ for swift/proxy/controllers/obj.py

Change-Id: I405441383739637e0b13746d6f4e2bad1c874b4d
Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com>"
wbhuberIBM,2015-08-06 15:01:17,https://api.github.com/repos/openstack/swift/git/commits/c35cc13b8abeb97400632cbe8ec56fc1040d8210,c35cc13b8abeb97400632cbe8ec56fc1040d8210,"pep8 fix: assertEquals -> assertEqual

assertEquals is deprecated in py3 in the following dir:
test/unit/proxy/*

Change-Id: Ie2c7e73e1096233a10ee7fbf6f88386fa4d469d6"
wbhuberIBM,2015-08-06 14:28:51,https://api.github.com/repos/openstack/swift/git/commits/239e94e62518f36601fb18119700269753d02a01,239e94e62518f36601fb18119700269753d02a01,"pep8 fix: assertEquals -> assertEqual

assertEquals is deprecated in py3 in the following dir:
test/probe/*

Change-Id: Ie08dd7a8a6c48e3452dfe4f2b41676330ce455d5"
wbhuberIBM,2015-08-05 19:51:32,https://api.github.com/repos/openstack/swift/git/commits/49b9ba37ac522502ccad66fba7bfef375eab145d,49b9ba37ac522502ccad66fba7bfef375eab145d,"pep8 fix: assertEquals -> assertEqual

assertEquals is deprecated in py3 in the following dir:
test/functional/*

Change-Id: Iee7f8ffca9838ccc521107180697d91ac9559405"
matsuda-k,2015-08-06 01:13:02,https://api.github.com/repos/openstack/swift/git/commits/81816bebe6b3506af8cabaa7ebe265c70f3499cd,81816bebe6b3506af8cabaa7ebe265c70f3499cd,"Fix shebang of commands

Fix shebang of following commands.
  $ grep '#!/usr/bin/python' swift/bin/*
  swift/bin/swift-account-info:#!/usr/bin/python
  swift/bin/swift-container-info:#!/usr/bin/python
  swift/bin/swift-container-sync:#!/usr/bin/python
  swift/bin/swift-recon:#!/usr/bin/python
  swift/bin/swift-ring-builder:#!/usr/bin/python
  swift/bin/swift-ring-builder-analyzer:#!/usr/bin/python

Change-Id: I564d1d8abd76eba57730fc2f30263b0a0f809867
Closes-Bug: #1481623"
zaitcev,2015-08-05 21:33:29,https://api.github.com/repos/openstack/swift/git/commits/652f0f9da408e955843f87a504b3dab5be3cff80,652f0f9da408e955843f87a504b3dab5be3cff80,"Having said H, I, J, we ought to say K

In the long run, we might want to stop these updates. But this
decision is above my pay grade.

Change-Id: I335558e1da8052be1b215fbad51244b47af3d81b"
codevulture,2015-08-05 18:48:52,https://api.github.com/repos/openstack/swift/git/commits/ed3aec2146b114c85bb3b196c999bf3f44fe159e,ed3aec2146b114c85bb3b196c999bf3f44fe159e,"pep8 fix: assertEquals -> assertEqual

assertEquals is deprecated in py3 in
dir: test/unit/container/*

Change-Id: I3333022ed63ce03198bc73147246d91d2442a440"
codevulture,2015-08-05 17:02:02,https://api.github.com/repos/openstack/swift/git/commits/f449e914728fdcaf0870c15b9fc5ebd16a9df916,f449e914728fdcaf0870c15b9fc5ebd16a9df916,"pep8 fix: assertEquals -> assertEqual

assertEquals is deprecated in py3, fixing in:
dir: test/unit/cli/*

Change-Id: I9a2fc1f717beafd5fa8408942046e310e8de0318"
codevulture,2015-08-05 16:55:46,https://api.github.com/repos/openstack/swift/git/commits/6594bbebb582801c069c4966352fee19eadef2f8,6594bbebb582801c069c4966352fee19eadef2f8,"pep8 fix: assertEquals -> assertEqual

assertEquals is deprecated in py3 in
dir : test/unit/account/*

Change-Id: I70415197df1b0d58d4d6e219733c13a9c9cdfff7"
blmartin,2015-07-27 19:19:09,https://api.github.com/repos/openstack/swift/git/commits/89f59062864e5cbfc839a6084c323ce35438aa57,89f59062864e5cbfc839a6084c323ce35438aa57,"+Document method to avoid rsync filling root drive

When rsync pushes to a remote node with an unmounted drive and if
certain steps are not taken, rsync may attempt to write files to
the local drive at the location where the drive was mounted.

There are two suggested solutions for this issue:
  1) Set the permissions for all mount points in /srv/node/
       to root:root 755
  2) Mount the drives elsewhere and symlink the drives to /srv/.../

The first method ensures that only root and not the swift user
can write in the /srv/.../ directories.

The second method will prompt a broken link issue if rsync
attempts to write to an unmounted drive.

Change-Id: I60ce4ed9ef8401768d5f78b6806cbb2e2a65303e
Closes-Bug: #1470576"
charz,2015-08-05 14:09:40,https://api.github.com/repos/openstack/swift/git/commits/f0d51882b921075f5309ed6ff07385dc6103d4dc,f0d51882b921075f5309ed6ff07385dc6103d4dc,"Add extra_header_count to document and config.

Change-Id: Iec86b488d71553c295afe7098822ce2046df9546"
clayg,2015-08-05 06:15:37,https://api.github.com/repos/openstack/swift/git/commits/7071762d3698c59fabdee76890e300f81417be74,7071762d3698c59fabdee76890e300f81417be74,"Fix TypeError if backend response doesn't have expected headers

There was some debug logging mixed in with some error handling on PUTs
that was relying on a very specific edge would only encounter a set of
backend responses that included the expected set of headers to diagnoise
the failure.

But the backend responses may not always have the expected headers.

The proxy debug logging should be more robust to missing headers.

It's a little hard to follow, but if you look `_connect_put_node` in
swift.proxy.controller.obj - you'll see that only a few connections can
make their way out of the initial put connection handling with a ""resp""
attribute that is not None.  In the happy path (e.g. 100-Continue) it's
explictly set to None, and in most errors (Timeout, 503, 413, etc) a new
connection will be established to the next node in the node iter.

Some status code will however allow a conn to be returned for validation
in `_check_failure_put_connections`, i.e.

  * 2XX (e.g. 0-byte PUT would not send Expect 100-Continue)
  * 409 - Conflict with another timestamp
  * 412 - If-None-Match that encounters another object

... so I added tests for those - fixing a TypeError along the way.

Change-Id: Ibdad5a90fa14ce62d081e6aaf40aacfca31b94d2"
dpgoetz,2015-06-27 00:27:31,https://api.github.com/repos/openstack/swift/git/commits/01848c565e5821d2500cb234261c70871e562ebe,01848c565e5821d2500cb234261c70871e562ebe,"Speed up reaper for a big account delete and some better error handling

In run_forever mode, run the reaper on all three copies of the account
DB instead of just the first one and shard the containers between them.

Change-Id: Id182e89dad70df9d6d9988523861b8085d74c765"
natsumetakashi,2015-08-04 01:14:25,https://api.github.com/repos/openstack/swift/git/commits/8d06f56c1fac23bca463d3a93353da6b50ad5bed,8d06f56c1fac23bca463d3a93353da6b50ad5bed,"Fix typo of 'receive'

Change-Id: Ic01defa8d48ba4b7f4bd6cbe4d59b9bab468a36c"
clayg,2015-07-20 20:06:48,https://api.github.com/repos/openstack/swift/git/commits/44917c8a90e79a85cd6c6821d8b6d043f83b322d,44917c8a90e79a85cd6c6821d8b6d043f83b322d,"Handle removed suffix dirs the same as empty suffix dirs

When hashes suffix dirs, the directory might have gotten cleaned up while
still appearing in hashes.pkl.  It would even get cleaned up the next time.

For example, given this really old tombstone:

    objects/846/3d0/d3a20154d0a828a032aba6860397c3d0/1432267961.41808.ts

Prior to this commit, a call to get_hashes() would reap the old
tombstone and any empty containing dirs, but the resulting hashes.pkl
would still contain {'3d0': 'd41d8cd98f00b204e9800998ecf8427e'} even
though there's no such suffix dir any more.
(""d41d8cd98f00b204e9800998ecf8427e"" is the MD5 of the empty string.)

Then, a *subsequent* get_hashes() call would omit 3d0 from the resulting
hash, so then hashes.pkl would no longer contain 3d0. This difference
would result in a little useless replication traffic while nodes without
a particular part/suffix pair, but who disagreed on how that showed up
in hashes.pkl, tried to push their version of nothing to one another.

Now, an empty suffix dir doesn't appear in hashes.pkl at all, whether
it's for replication or EC, or whether it's for the get_hashes() call
that reaped the suffix dirs or not.

Co-Author: Samuel Merritt <sam@swiftstack.com>

Change-Id: Ie1bfb1cc56d0fc030c6db42f97b55d140695cf1f"
codevulture,2015-06-27 17:56:47,https://api.github.com/repos/openstack/swift/git/commits/67513fc17c23066f6547b5e3c4ab2dc852e4f7f0,67513fc17c23066f6547b5e3c4ab2dc852e4f7f0,"Adding bandit for security static analysis testing in swift

This change adds a basic bandit config for Swift. It can be invoked
by running the tox environment for bandit;
    tox -e bandit

This is an initial step for using bandit with Swift
and it should be revisited to improve the testing as more is learned
about the specific needs of the Swift code base.As per now some tests
are excluded as they were used on purpose.

https://wiki.openstack.org/wiki/Security/Projects/Bandit

Implements: blueprint swift-bandit

Change-Id: I621be9a68ae9311f3a6eadd1636b05e646260cf2"
clayg,2015-07-30 22:30:35,https://api.github.com/repos/openstack/swift/git/commits/768d7ab074807175471d589de96d091e3239052e,768d7ab074807175471d589de96d091e3239052e,"Add a probetest for HUP/reload

This would have been enough to catch the regression, and we can extend
them as we work on any future ehancements to our process management.

Change-Id: I9a1b57aa15663380c45cf783afc8212ab4ffbace"
dbishop,2015-07-30 21:32:08,https://api.github.com/repos/openstack/swift/git/commits/207dd9b49d7d53a9faa4849af2c40bb875416fce,207dd9b49d7d53a9faa4849af2c40bb875416fce,"Fix regression in WSGI server SIGHUP behavior

The SIGHUP receipt used to pop us out of an os.wait() where now, it's in
a ""green"" wait() and Timeout() combo, some part of which eats the signal
receipt.  This causes the while loop condition to never get checked and
SIGHUP no longer works as a server reload command.

The fix is to loop at least every 0.5 seconds, as a trade-off between
not busy-waiting and checking the ""keep running"" condition often enough
to feel responsive.

Change-Id: I95283b8b7cfc2998ab5813e0ad3ca1fa231696c8
Closes-Bug: #1479972"
vstinner,2015-07-27 09:34:07,https://api.github.com/repos/openstack/swift/git/commits/9cb7eb4a4b6cdab8a5f16b3dc800b39ab4068522,9cb7eb4a4b6cdab8a5f16b3dc800b39ab4068522,"Update hacking to 0.10.0

Replace the whitelist of flake8 checks (select) with a blacklist
(ignore).  It makes possible to disable a single check, which was not
possible before. This new approach permits to enable new tests more
easily and see which checks are currently disabled.

Only new checks are disabled, this change doesn't run less checks than
before. Currently, many checks are disabled, but following changes will
fix these new warnings.

When the ""select"" option of flake8 is used in tox.ini, the ""ignore""
option is ignored. It is not possible to use ""select"" and ""ignore""
options at the same time. See the code in pep8 (flake8 is based on
pep8):

https://github.com/PyCQA/pep8/blob/d48eef071003952ed0f98445dc3dc6bc29618f9c/pep8.py#L1808

The purpose of flake8 is to enhance the coding style, but also to help
to detect common bugs. Blacklisting checks permits to detect new bugs
when upgrading the tools. For example, new checks were recently added to
help porting code to Python 3.

This change permits to use pbr 1.0 and newer which is required to
support Python 3. Previously, hacking 0.8.1 was used, but hacking 0.8 is
incompatible with pbr 1.0 and newer (hacking 0.8 requires pbr<1.0).

pbr 1.0 is required to use environment markers on requirements to
install dnspython on Python 2 and dnspython3 on Python 3.

Change-Id: I41d63b9467083d7606ad18aaa398ca7738b27fae"
vstinner,2015-07-29 21:46:58,https://api.github.com/repos/openstack/swift/git/commits/389a97e3526df68121cecfaf1909343b5d381cbc,389a97e3526df68121cecfaf1909343b5d381cbc,"Fix pep8 E warning for hacking 0.10

Fix pep8 warnings of the E category of hacking 0.10:

* E113: unexpected indentation
* E121: continuation line under-indented for hanging indent
* E122: continuation line missing indentation or outdented
* E123: closing bracket does not match indentation of opening bracket's
  line
* E126: continuation line over-indented for hanging indent
* E251: unexpected spaces around keyword / parameter equals

Change-Id: I0b24eebdf1a37dc1b572b6c9a3d3d4832d050237"
vstinner,2015-07-29 22:28:44,https://api.github.com/repos/openstack/swift/git/commits/d719064e788ec5fa70305fadaa46affcb603a9bb,d719064e788ec5fa70305fadaa46affcb603a9bb,"Fix warning pep8 E128 warning of hacking 0.10

Fix the warning E128: ""continuation line under-indented for visual
indent"" of pep8.

Change-Id: Ie6c6ae341fe3d6281f2095c1d756d552fa5937f9"
vstinner,2015-07-29 22:16:06,https://api.github.com/repos/openstack/swift/git/commits/a0db56dcde83096708e6fe64ae9338098e0ba98a,a0db56dcde83096708e6fe64ae9338098e0ba98a,"Fix pep8 E265 warning of hacking 0.10

Fix the warning E265 ""block comment should start with '# '"" added in pep
1.5.

Change-Id: Ib57282e958be9c7cddffc7bca34fbbf1d4c460fd"
charz,2015-07-30 05:11:00,https://api.github.com/repos/openstack/swift/git/commits/345785837f1caa01fec5bca091c70481d7069bea,345785837f1caa01fec5bca091c70481d7069bea,"Remove error_suppression_interval, error_suppression_limit options.

These two options is belong to proxy-server, not account-replicator.

Change-Id: Ie030ecffd213e56db32df77c69b847479d96308f"
ccavanna,2015-07-28 23:15:25,https://api.github.com/repos/openstack/swift/git/commits/5a7383313b1c555df5fd47050f7ee3810b5e31fc,5a7383313b1c555df5fd47050f7ee3810b5e31fc,"Swift documentation for first-time contributors.

In this change, there are proposed improvement to Swift documentation aimed at
first-time contributors. They include a simplification of the Getting
Started page and a new page with some basic instructions/commands that the
first-time contributor should know. In addition, it shows some common errors
that the first-time contributor may find when executing git rebase and
information on how to track your changes.

Change-Id: I704202955093736b2f3b4102a649690a0392c6b0"
codevulture,2015-07-28 15:33:05,https://api.github.com/repos/openstack/swift/git/commits/c5b5cf91a984f80cc6cbe42735b242083d700542,c5b5cf91a984f80cc6cbe42735b242083d700542,"test/unit: Replace python print operator with print function (pep H233, py33)

'print' function is compatible with 2.x and 3.x python versions
Link : https://www.python.org/dev/peps/pep-3105/

Python 2.6 has a __future__ import that removes print as language syntax,
letting you use the functional form instead

Change-Id: I94e1bc6bd83ad6b05695c7ebdf7cbfd8f6d9f9af"
smerritt,2015-07-22 22:40:55,https://api.github.com/repos/openstack/swift/git/commits/117b61976fbf14d8a0d2157256f9a3230421ee72,117b61976fbf14d8a0d2157256f9a3230421ee72,"functests: use assertIn and assertNotIn

We have a bunch of assertions like

    self.assertTrue(resp.status in (200, 204))

Sometimes we get smart about failure messages and have something like

    self.assertTrue(resp.status in (200, 204), resp.status)

so we can see what the status was when it failed.

Since we don't have to support Python 2.6 any more, we can use
assertIn/assertNotIn and get nice failure messages for free.

Change-Id: I2d46c9969d41207a89e01017b4c2bc533c3d744f"
codevulture,2015-07-21 12:36:32,https://api.github.com/repos/openstack/swift/git/commits/8fe8bee7e0c5c9d34d7a8e6ab090c8d65c5ca78e,8fe8bee7e0c5c9d34d7a8e6ab090c8d65c5ca78e,"test/(functional, probe): Replace ""self.assert_"" by ""self.assertTrue""

The assert_() method is deprecated and can be safely replaced by assertTrue().
This patch makes sure that running the tests does not generate warnings
all over the screen.

Change-Id: I74705c6498249337bfdf955d62e0ad972035bc1f"
smerritt,2015-07-20 18:58:35,https://api.github.com/repos/openstack/swift/git/commits/4a6e0ccc69302a5384b988149e294656323d7f20,4a6e0ccc69302a5384b988149e294656323d7f20,"Rename WsgiStringIO -> WsgiBytesIO.

If we're going to have a subclass of BytesIO, having ""StringIO"" in its
name is just asking for confusion.

Change-Id: I695ab3105b1a02eb158dcf0399ae91888bc1c0ac"
codevulture,2015-07-24 15:49:47,https://api.github.com/repos/openstack/swift/git/commits/5ee742c17d9ea92ca7332cb67db0cce64b7a0d8f,5ee742c17d9ea92ca7332cb67db0cce64b7a0d8f,"Modifying Lambda function tuple usage for python3

Current tuple unpacking is not supported in python3

Change-Id: I15a8e977684d19154cf2233caf1174f6983ac9e2"
clayg,2015-07-23 23:46:48,https://api.github.com/repos/openstack/swift/git/commits/e2f69138bf5fcdd84ac23be6b0bec1bb006b41f5,e2f69138bf5fcdd84ac23be6b0bec1bb006b41f5,"Fix string formatting in dispersion cli command

 ... and add a basic test that would have prevented the regression

Change-Id: I4c5f643ee291dcc1397ca951450459d8b8ad0bbd"
clayg,2015-07-24 18:09:10,https://api.github.com/repos/openstack/swift/git/commits/83025ff38dfea3d4e3f27dc045128a7aa4ba11e4,83025ff38dfea3d4e3f27dc045128a7aa4ba11e4,"Use right most occurrence object dir in diskfile.extract_policy

  I like using the rightmost one more; it's basically
  /operator-defined/mountpoint/objects/part/suffix/hash/ts.data, so I
  don't see any opportunity for other things named ""objects"" to creep in on the
  right of the real objects-N dir; but I could see some admin using
  /srv/object-storage/ or something

    -- Torgomatic The Wise

Change-Id: I0a63a3e02df091a5ee2e110a345183012e357a2f"
reimannf,2015-06-24 14:54:02,https://api.github.com/repos/openstack/swift/git/commits/363a256e58ee0f3e9f059352c2de968e3dc398e3,363a256e58ee0f3e9f059352c2de968e3dc398e3,"Support keystone v3 domains in swift-dispersion

This provides the capability to specify a project_name,
project_domain_name and user_domain_name in /etc/swift/dispersion.conf.
If this values are set in dispersion.conf they get populated to the
swift-client.  With this it is possible to have a specific dispersion
project specified, which is not the keystone default domain.  Changes
were applied to swift-dispersion-populate and swift-dispersion-report.
Relevant man pages, the example dispersion.conf and the admin guide were
updated accordingly.

DocImpact
Closes-Bug: #1468374

Change-Id: I0e716f8d281b4d0f510bc568bcee4a13fc480ff7"
codevulture,2015-07-24 14:16:14,https://api.github.com/repos/openstack/swift/git/commits/929089c04bda9466bacf3879ba7020da0c07ca7b,929089c04bda9466bacf3879ba7020da0c07ca7b,"Add __bool__ for classes that implement __nonzero__

__nonzero__ has been renamed to __bool__ in python3.4. So add the
__bool__ magic method that will in turn call the existing __nonzero__
method.

Change-Id: I3479564c57316733a9c30d97504ceac74771bfd4"
codevulture,2015-07-05 06:19:54,https://api.github.com/repos/openstack/swift/git/commits/78cb608ff7bf3a589fcb4d83530393c516e652cb,78cb608ff7bf3a589fcb4d83530393c516e652cb,"Python3: Fix Remaining issues of python3 compatibility in bin directory

Changes Of py3 in bin :

* https://review.openstack.org/#/c/196835/
* ConfigParser from six.moves

Change-Id: Ic0374c8e09dfd595ec12c4d31b17dad30eaa803c"
morrisson,2015-07-24 01:42:10,https://api.github.com/repos/openstack/swift/git/commits/3d9b2d077a157279fb6cd107a0c83727106af3ef,3d9b2d077a157279fb6cd107a0c83727106af3ef,"Fix swift-object-info to show policy index at deep working directory

If swift-object-info command is executed at deeper working directory
than 'objects-*' directory, it cannot parse policy index from file path
so it does not show appropriate policy index. This patch fixes this
problem by simply extracting the full path of a target object file.

Change-Id: Idb734106a44b6121119c9b1dc8cdaaf4c6c28c31
Closes-Bug: 1469951"
vstinner,2015-05-25 16:26:38,https://api.github.com/repos/openstack/swift/git/commits/e24d7c36fa9758618ef88ed1a8e19f4d7bb0404f,e24d7c36fa9758618ef88ed1a8e19f4d7bb0404f,"Use six to fix imports on Python 3

Get configparser, queue, http_client modules from six.moves.

Patch generated by the six_moves operation of the sixer tool:
https://pypi.python.org/pypi/sixer

Change-Id: I666241ab50101b8cc6f992dd80134ce27327bd7d"
sakaia,2015-07-24 08:09:48,https://api.github.com/repos/openstack/swift/git/commits/964869accce8836bd2587c4b07559fb05fe580b2,964869accce8836bd2587c4b07559fb05fe580b2,"Fix six typos on swift documentation

mechanisim => mechanism
    http://docs.openstack.org/developer/swift/cors.html
overridde => override
   http://docs.openstack.org/developer/swift/deployment_guide.html
extentsions => extensions
  http://docs.openstack.org/developer/swift/development_ondisk_backends.html
reuqest => request
  http://docs.openstack.org/developer/swift/logs.html
suport => support
  http://docs.openstack.org/developer/swift/overview_architecture.html
mininum => minimum
  http://docs.openstack.org/developer/swift/overview_erasure_code.html

$ git diff | diffstat
 cors.rst | 2 +-
 deployment_guide.rst | 2 +-
 development_ondisk_backends.rst | 2 +-
 logs.rst | 2 +-
 overview_architecture.rst | 2 +-
 overview_erasure_code.rst | 2 +-
 6 files changed, 6 insertions(+), 6 deletions(-)

Change-Id: I8e095f4c216b2cfae48dff1e17d387048349f73c
Closes-Bug: #1477877"
onovy,2015-06-16 15:42:58,https://api.github.com/repos/openstack/swift/git/commits/dd2f1be3b124d3901ebbc176a7adc462b6449667,dd2f1be3b124d3901ebbc176a7adc462b6449667,"Time synchronization check in recon.

This change add call time to recon middleware and param --time to
recon CLI. This is usefull for checking if time in cluster is
synchronized.

Change-Id: I62373e681f64d0bd71f4aeb287953dd3b2ea5662"
clayg,2015-07-23 02:32:46,https://api.github.com/repos/openstack/swift/git/commits/cbcfb74132aba4d5834dc9cf33dc4f664b82d39a,cbcfb74132aba4d5834dc9cf33dc4f664b82d39a,"Cleanup nits from container_update_timeout

Change-Id: Ib17fc9a027db267350abc5a7db4e3172dfff7913"
hroumani,2015-07-22 19:27:26,https://api.github.com/repos/openstack/swift/git/commits/f563a423bf2534268c2e785094d58dbbe0ebd390,f563a423bf2534268c2e785094d58dbbe0ebd390,"Updated tox setup instructions on Development Guidelines

The instructions suggest updating the ownership of the swift.egg-info
directory may be required and provide a cmd to do so.  Said cmd assumes user
'swift' exists, but tox will require the current user to have access to the
directory to perform updates, moreover user swift may not exist at all.

Change-Id: I63951970553c086ff4f1ac65a81559ba69166494"
cschwede,2015-07-22 10:43:17,https://api.github.com/repos/openstack/swift/git/commits/a65e9db8752793ec37b594dc9eca5066171825db,a65e9db8752793ec37b594dc9eca5066171825db,"Removing commented out code in test/unit/account/test_backend.py

Noticed this while reviewing another change. Looks like the test itself already
ensures correct functionality of the reclaim() method in AccountBroker without
the commented code, thus removing this stale code.

Change-Id: I6a26a7591adef9fd794ca68a4e9c493d1127f93c"
bloodeagle40234,2015-07-13 08:12:43,https://api.github.com/repos/openstack/swift/git/commits/99d052772a9585e0befdfd292fd03aefde77180a,99d052772a9585e0befdfd292fd03aefde77180a,"Fix 499 client disconnected on COPY EC object

Currently, a COPY request for an EC object might go to fail as 499 Client
disconnected because of the difference between destination request content
length and actual transferred bytes.

That is because the conditional response status and content length for
an EC object range GET is handled at calling the response instance on
proxy server. Therefore the calling response instance (resp()) will change
the conditional status from 200 (HTTP_OK) to 206 (PartialContent) and will
change the content length for the range GET.

In EC case, sometimes Swift needs whole stored contents to decode a segment.
It will make 200 HTTP OK response from object-server and proxy-server
will unfortunately set whole content length to the destination content
length and it makes the bug 1467677.

This patch introduces a new method ""fix_conditional_response"" for
swift.common.swob.Response that calling _response_iter() and cached the
iter in the Response instance. By calling it, Swift can set correct condtional
response any time after setting whole content_length to the response
instance like EC case.

Change-Id: If85826243f955d2f03c6ad395215c73daab509b1
Closes-Bug: #1467677"
notmyname,2015-05-23 22:40:03,https://api.github.com/repos/openstack/swift/git/commits/2289137164231d7872731c2cf3d81b86f34f01a4,2289137164231d7872731c2cf3d81b86f34f01a4,"do container listing updates in another (green)thread

The actual server-side changes are simple. The tests are a different
matter. Many changes were needed to the object server tests to
handle the now-async calls to the container server. In an effort to
test this properly, some drive-by changes were made to improve tests.

I tested this patch by doing zero-byte object writes to one container
as fast as possible. Then I did it again while also saturating 2 of the
container replica's disks. The results are linked below.

https://gist.github.com/notmyname/2bb85acfd8fbc7fc312a

DocImpact

Change-Id: I737bd0af3f124a4ce3e0862a155e97c1f0ac3e52"
timuralp,2015-07-14 23:56:44,https://api.github.com/repos/openstack/swift/git/commits/62ed4f81ef80440550633eaaaa962a4f9383c2d3,62ed4f81ef80440550633eaaaa962a4f9383c2d3,"Add two functional tests for delimiter.

The first test verifies that a delimiter will trim entries beyond the
first matching instance of delimiter (after the given matching prefix,
if any) and squash duplicates.  So, when setting the delimiter
to ""-"", given blobs ""test"", ""test-foo"" and ""test-bar-baz"", we expect
only ""test"" (no matching delim) and ""test-"" (trim all characters after
the first ""-"", and squash duplicates).

The second test verifies that when a prefix is provided, the delimiter
will trim entries beyond the first matching instance of the delimiter
*after the given prefix*.  So ""bar, ""bazar"" which both match the
prefix ""ba"" will be returned as ""bar"" (no delimiter after the matching
prefix) and ""baza"" (after matching the prefix the remainder after the
the *next* matching delimiter ""a"" is trimmed).

Change-Id: I49a2aa8722f83e87b7d211e5c26827e93963d92a"
clayg,2015-07-21 16:56:13,https://api.github.com/repos/openstack/swift/git/commits/2d6c5fe2afde382edb8f04c91fca1911601b61d9,2d6c5fe2afde382edb8f04c91fca1911601b61d9,"Fix Associated Projects link on Getting Started

Change-Id: I50be656bc5868242489f97c96a1feaef171933e0"
codevulture,2015-07-21 13:53:00,https://api.github.com/repos/openstack/swift/git/commits/cd7b2db550e41412281da0256b468c90ebcf3e8b,cd7b2db550e41412281da0256b468c90ebcf3e8b,"unit tests: Replace ""self.assert_"" by ""self.assertTrue""

The assert_() method is deprecated and can be safely replaced by assertTrue().
This patch makes sure that running the tests does not create undesired
warnings.

Change-Id: I0602ba39ef93263386644ee68088d5f65fcb4a71"
smerritt,2015-07-21 00:03:20,https://api.github.com/repos/openstack/swift/git/commits/c3cc98b2c918476f1b54924e0c54e4c746eba4ac,c3cc98b2c918476f1b54924e0c54e4c746eba4ac,"Add comment about ResumingGetter.used_source_etag

This confused a couple developers and took about ten minutes to
unravel in IRC; let's leave a clue for the next person.

Change-Id: I356c8c7a44de23f02eaf68d23a39c9eb4c203ff1"
codevulture,2015-07-20 16:11:58,https://api.github.com/repos/openstack/swift/git/commits/06326d74657a8796439988115002298e4a5f4630,06326d74657a8796439988115002298e4a5f4630,"Metaclass Python 3.x Compatibility

use ""six.add_metaclass"" instead of ""__metaclass__""

Change-Id: I57390fec40afe3a965be3215db8f79b9cf862a70"
tamizhgeek,2015-07-18 09:07:16,https://api.github.com/repos/openstack/swift/git/commits/317fa1af49d72ecaf7a9a499d8cdf00a086b4c6f,317fa1af49d72ecaf7a9a499d8cdf00a086b4c6f,"Minor change in development saio setup doc

Make the test-requirements install command uniform with the rest of the
setup commands in the page by using the $HOME, instead of hardcoding
the folder path.

Change-Id: I8da7a191a301601e27f894f8268238d77b150ede"
codevulture,2015-07-18 08:42:58,https://api.github.com/repos/openstack/swift/git/commits/39621b8629c7f378fc197f6ab1ddc8e2e797d1fa,39621b8629c7f378fc197f6ab1ddc8e2e797d1fa,"Deprecated xreadlines() usage fixed

Change-Id: Iadf42c2f86f78c11259e21c88b4aef51db3441ad"
codevulture,2015-07-11 17:16:41,https://api.github.com/repos/openstack/swift/git/commits/dde34c4b442a27761f2e6eca46ed9ec47a110392,dde34c4b442a27761f2e6eca46ed9ec47a110392,"Modify zip usage for python3 where necessary.

py2 zip() is eager but py3 zip() and six.moves.zip() are lazy,
changing ones that require eager evaluation.

Change-Id: Ic9f6bccd7f57772158581905794f8d23b05f4223"
codevulture,2015-07-09 02:05:47,https://api.github.com/repos/openstack/swift/git/commits/faff98efd47fd59e28b1adb3e7ad4bc3dc6dd781,faff98efd47fd59e28b1adb3e7ad4bc3dc6dd781,"Replace python print operator with print function (pep H233, py33)

'print' function is compatible with 2.x and 3.x python versions
Link : https://www.python.org/dev/peps/pep-3105/

Python 2.6 has a __future__ import that removes print as language syntax,
letting you use the functional form instead

Change-Id: I9d9ca5766a2773a7b4071e280f00361d16b85383"
vstinner,2015-05-27 16:01:37,https://api.github.com/repos/openstack/swift/git/commits/8753e452b04b0af6d6b444184b628724e14fbbb1,8753e452b04b0af6d6b444184b628724e14fbbb1,"Replace StringIO with BytesIO for WSGI input

wsgi.input is a binary stream (bytes), not a text stream (unicode).

* Replace StringIO with BytesIO for WSGI input
* Replace StringIO('') with StringIO() and replace WsgiStringIO('') with
  WsgiStringIO(): an empty string is already the default value

Change-Id: I09c9527be2265a6847189aeeb74a17261ddc781a"
vstinner,2015-05-27 15:27:47,https://api.github.com/repos/openstack/swift/git/commits/6e70f3fa322da70c2a65fb919d200e52fc5add8a,6e70f3fa322da70c2a65fb919d200e52fc5add8a,"Get StringIO and cStringIO from six.moves

* replace ""from cStringIO import StringIO""
  with ""from six.moves import cStringIO as StringIO""
* replace ""from StringIO import StringIO""
  with ""from six import StringIO""
* replace ""import cStringIO"" and ""cStringIO.StringIO()""
  with ""from six import moves"" and ""moves.cStringIO()""
* replace ""import StringIO"" and ""StringIO.StringIO()""
  with ""import six"" and ""six.StringIO()""

This patch was generated by the stringio operation of the sixer tool:
https://pypi.python.org/pypi/sixer

Change-Id: Iacba77fec3045f96773d1090c0bd48613729a561"
notmyname,2015-07-15 03:49:08,https://api.github.com/repos/openstack/swift/git/commits/51f806d3e3d3a1fcbc80d2f7d7ddbe5cc4c024c9,51f806d3e3d3a1fcbc80d2f7d7ddbe5cc4c024c9,"remove Python 2.6 from the classifier

Change-Id: I67233e9c7b69826242546bd6bd98c24b81070579"
osanai-hisashi,2015-07-14 06:33:45,https://api.github.com/repos/openstack/swift/git/commits/278adf5c20101a191979ce1e4d6277e5f209149e,278adf5c20101a191979ce1e4d6277e5f209149e,"Make logic of unit tests responsive to the method names

The two methods, test_authorize_succeeds_for_tenant_name_in_roles and
test_authorize_succeeds_for_tenant_id_in_roles, have names that don't
match what they are testing. tenant_name and tenant_id need to be
switched.

Change-Id: I7cb0a7d2b2111127fd5d6b55f2da6a3eadf2235d"
codevulture,2015-07-12 18:37:13,https://api.github.com/repos/openstack/swift/git/commits/c366ecf5c85c2797582bf79f7faab1d75b99a70e,c366ecf5c85c2797582bf79f7faab1d75b99a70e,"Fix a minor python issue related with string.split

Replacing string.split(value, ',') with value.split(','):
the string.split() function was removed in Python 3

Change-Id: I9ed241a894ac698da33df75a774a56ae2824fadf"
codevulture,2015-07-12 09:18:35,https://api.github.com/repos/openstack/swift/git/commits/c8131c6abb17b00b043a9b95e65be819e1fd3c9d,c8131c6abb17b00b043a9b95e65be819e1fd3c9d,"sys.exc_type/exc_value/exc_traceback are Deprecated

sys.exc_info() contains a tuple of these three.

Change-Id: I530cbeb37c43da98b4924db41f6604871077bd47"
vstinner,2015-07-10 11:04:44,https://api.github.com/repos/openstack/swift/git/commits/1cc3eff958fdd4fb07c2b74c52df7829d3125466,1cc3eff958fdd4fb07c2b74c52df7829d3125466,"Fixes for mock 1.1

The new release of mock 1.1 is more strict. It helped to find bugs in
tests.

Closes-Bug: #1473369
Change-Id: Id179513c6010d827cbcbdda7692a920e29213bcb"
codevulture,2015-07-08 13:08:22,https://api.github.com/repos/openstack/swift/git/commits/ff192cfe5705324497a389aa2f22227d75dc0f8e,ff192cfe5705324497a389aa2f22227d75dc0f8e,"Replace reduce and unichr , these are no longer available in py3

* Replace reduce() with six.moves.reduce()
* Replace unichr with six.unichr

Change-Id: I2038e47e0a6522dd992fd2a4aeff981cf7750fe0"
matthewoliver,2015-07-09 05:19:32,https://api.github.com/repos/openstack/swift/git/commits/56ee39a7e13417203c5e1816d7a3184a07f85826,56ee39a7e13417203c5e1816d7a3184a07f85826,"Ring builder code clean up follow up patch

This is a simple change that cleans up a NIT from Sam's 'stop moving
partitions unnecessarily when overload is on' patch.

Change-Id: I9d9f1cc23e2bb625d8e158f4d3f64e10973176a1"
os-cloud-storage,2015-07-08 12:18:22,https://api.github.com/repos/openstack/swift/git/commits/6cafd0a4c0bb8f311fc59df580b42e801214effd,6cafd0a4c0bb8f311fc59df580b42e801214effd,"Fix Container Sync example

Container-sync realm uses cluster_ as a prefix to specify clusters'
names. At use, the prefix should not be included. Fixing the examples
and sample conf to make it clearer that only the name of the cluster
should be passed.

Change-Id: I2e521d86faffb59e1b45d3f039987ee023c5e939"
charz,2015-06-24 18:06:54,https://api.github.com/repos/openstack/swift/git/commits/39b6ef6e4fd515d81e688ef365d26d5e0499be7c,39b6ef6e4fd515d81e688ef365d26d5e0499be7c,"Fix reconstructor stats mssage.

Calculate reconstruction job count and remaining time that
would be inappropriate for user. Use real partition count would
be suitable for user.

Change-Id: I6b025854baf4757dddf9d7fe7bc2cece58a49157
Closes-Bug: #1468298"
notmyname,2015-06-06 20:03:15,https://api.github.com/repos/openstack/swift/git/commits/e87a74695e2f55dbb0e01721de9d46e230e36008,e87a74695e2f55dbb0e01721de9d46e230e36008,"add domain_remap to /info

Also added the value of default_reseller_prefix to /info. I did not
add the reseller_prefixes value to /info because deployers may not
want to expose all of the resellers that are available.

Change-Id: I9ca2f002dc395913bb646390d6908dfb8f554df1"
clayg,2015-07-08 01:02:53,https://api.github.com/repos/openstack/swift/git/commits/12473104f005b76ebe4b6dbe118a5ac37518eb52,12473104f005b76ebe4b6dbe118a5ac37518eb52,"Cleanup error messages in ECDiskFileWriter.commit

I think the error messages make better sense and it's more obvious what the
error handling code was trying to bring to the surface for operators.

If you run this test with nosetests --verbose --nocapture

test_diskfile.py:TestECDiskFile.test_commit_fsync_dir_raises_DiskFileErrors

... you can review most of the potential log output

Change-Id: I40c9d77f44e087ee61d9642e924b0a4039d6ca9a"
clayg,2015-07-07 22:13:20,https://api.github.com/repos/openstack/swift/git/commits/bfbda38db999ccd881509c68f0319c3d3dae4274,bfbda38db999ccd881509c68f0319c3d3dae4274,"Add save command to ring-builder-analyzer

 * cleanup command => ring builder function mapping
 * cleanup ParseCommandError/ValueError message building

Change-Id: I4be2aa963ce4f43035f02371d8388abd7a76536c"
codevulture,2015-07-07 17:16:37,https://api.github.com/repos/openstack/swift/git/commits/c907107fe4eacb378a92799de915234bd72d5d7c,c907107fe4eacb378a92799de915234bd72d5d7c,"cPickle is deprecated in py3, replacing it from six.moves

cPickle is deprecated and should be replaced with six.moves
to provide py2 and py3 compatibility.

Change-Id: Ibad990708722360d188c641e61444d50a16a1e93"
notmyname,2015-07-02 16:54:30,https://api.github.com/repos/openstack/swift/git/commits/bd3717df65f57da9e7f06292ba349442d17fc939,bd3717df65f57da9e7f06292ba349442d17fc939,"update AUTHORS file

Change-Id: I509ceeb522bd83c407beb40c22c2924a1d92b8ff"
codevulture,2015-07-05 05:29:50,https://api.github.com/repos/openstack/swift/git/commits/cd20961abd20f01a14554c14d4f61a7f0d8deb88,cd20961abd20f01a14554c14d4f61a7f0d8deb88,"Replace dict.iteritems() with dict.items() in bin directory of swift.

The iteritems() of Python 2 dictionaries has been renamed to items() on
Python 3.

Change-Id: I4bdc064c90bab56cd60f2dca2a5a78426ffbb31c"
codevulture,2015-07-02 19:15:58,https://api.github.com/repos/openstack/swift/git/commits/8eca02d3a1db1e0ed68b15ed41bc62e6c89870c7,8eca02d3a1db1e0ed68b15ed41bc62e6c89870c7,"Replace xrange() with six.moves.range()

xrange is no longer available in py3.
replacing xrange with range from six.moves

Change-Id: Ib863c316a0724bd9c4f53c2e5a8d1bcd42c4dc5a"
codevulture,2015-07-02 18:35:36,https://api.github.com/repos/openstack/swift/git/commits/10f367224d5f30c3398169ffe3087f225f3343fc,10f367224d5f30c3398169ffe3087f225f3343fc,"Fix Python 3 issues

* Replace long with six.integer_type

six.integer_type :In Python 2, this is long and int, and in Python 3,
just int.

'long' is an undefined variable in py3.

Change-Id: Ibe4c5d0d81fe883f4fe33be93a68d814a228ad28"
smerritt,2015-06-25 00:07:32,https://api.github.com/repos/openstack/swift/git/commits/2328983b7535d24d08942e62095b4346f2626566,2328983b7535d24d08942e62095b4346f2626566,"Stop moving partitions unnecessarily when overload is on.

When overload was on and in use, the ring builder was unnecessarily
moving partitions. It would converge on a good solution and settle
down eventually, but it moved more partitions than necessary along the
way.

There are three partition gatherers used in the ring builder:
dev-removed, dispersion, and weight, in that order. The dev-removed
gatherer will pick up all partitions on removed devices. The
dispersion gatherer picks up replicas of partitions that are
suboptimally dispersed. The weight gatherer picks up partitions on
devices which are overweight.

The weight gatherer was not overload-aware, so it would pick up
partitions that did not need to move. Consider a device that would
normally have 100 partitions assigned, assume we set overload to 0.1
so that this device will hold up to 110 (10 extra) for the sake of
dispersion, and assume the device actually has 104 partitions assigned
to it. The correct behavior is to gather nothing from this device
because it has fewer than the maximum. Prior to this commit, the
weight gatherer would remove 4 partitions from this device; they would
subsequently be reassigned by the overload-aware partition placer
(_reassign_parts()). In a ring with multiple overloaded devices, the
builder would pick up some partitions from each, shuffle them, and
then assign them back to those same devices. Obviously, this just
created extra replication work for no benefit.

Now, the weight gatherer takes overload into account, and will no
longer needlessly gather partitions.

That's not all, though; this change worsened the behavior of a ring
with more overload than necessary. Before, the ring would balance as
best it could, using the minimal amount of overload. With the
weight-gatherer change, the ring builder will stop gathering
partitions once a device reaches its maximum-permissible assignment
including overload.

For example, imagine a 3-replica, 4-zone ring with overload=0.2 and
weights:

  z1: 100
  z2: 60
  z3: 60
  z4: 60

Since z1 has more than 1/3 of the weight, z2, z3, and z4 must take
more than their fair share for the sake of dispersion.

Now, turn up the weights some:

  z1: 100
  z2: 80
  z3: 80
  z4: 80

Overload is no longer needed; this ring can balance. However, z2, z3,
and z4 would end up keeping more than their fair share since (a) they
already had extra due to earlier conditions, and (b) the weight
gatherer won't pick up partitions from them since they're not
overburdened once it takes overload into account.

To fix this, we compute the minimum overload factor required for
optimal dispersion and then use min(user-input-overload,
minimum-overload) during rebalance. This way, we don't overload
devices more than the user says, but if the user sets overload higher
than necessary, we'll still give the best balance possible.

Change-Id: If5666ba654ee25da54f9144f3b78840273a49627"
smerritt,2015-06-11 22:40:28,https://api.github.com/repos/openstack/swift/git/commits/ccf0758ef1f362312a6197f86455f680ebd990d3,ccf0758ef1f362312a6197f86455f680ebd990d3,"Add ring-builder analyzer.

This is a tool to help developers quantify changes to the ring
builder. It takes a scenario (JSON file) describing the builder's
basic parameters (part_power, replicas, etc.) and a number of
""rounds"", where each round is a set of operations to perform on the
builder. For each round, the operations are applied, and then the
builder is rebalanced until it reaches a steady state.

The idea is that a developer observes the ring builder behaving
suboptimally, writes a scenario to reproduce the behavior, modifies
the ring builder to fix it, and references the scenario with the
commit so that others can see that things have improved.

I decided to write this after writing my fourth or fifth hacky one-off
script to reproduce some bad behavior in the ring builder.

Change-Id: I114242748368f142304aab90a6d99c1337bced4c"
cschwede,2015-05-29 10:11:44,https://api.github.com/repos/openstack/swift/git/commits/e860ec138913dc4c450725766a77e76a7101d06e,e860ec138913dc4c450725766a77e76a7101d06e,"Ignore invalid PIDs in swift-init

While reviewing ab9f6340 I recognized that invalid pids in the pid files raise
an exceptions (in case it is not a number), and also accept a 0 that is
impossible to use as a pid for any Swift process. In the latter case the process
was recognized as runnning, even if it did not - and thus restarting didn't
worked.

This patch ensures a better handling of any non-numeric value and also removes a
pid file if it uses 0 as the pid.

Change-Id: I09c415c7a75e4b9a0574a08f46f48fff5bb11d02"
minwoob,2015-05-18 19:08:25,https://api.github.com/repos/openstack/swift/git/commits/4d4db054d35c7e9de9ed28ac24965e8408dd9f82,4d4db054d35c7e9de9ed28ac24965e8408dd9f82,"After the .durable has been written, fsync the directory.

Added try-except statements in _finalize_durable() to fsync the directory
after a successful fsync of the .durable file.

Added test_commit_fsync_dir_raises_DiskFileErrors() for testing whether
certain assertions hold for the change to include fsync_dir().

Some more error details have been included in the logger.

Closes-Bug: #1470651
Change-Id: I4791d75ade8542678369ba0811ef39af6e955cc6"
clayg,2015-07-01 00:24:13,https://api.github.com/repos/openstack/swift/git/commits/d4d7c0e1b11af8f20f965f410901a56e1f8ee69e,d4d7c0e1b11af8f20f965f410901a56e1f8ee69e,"Fix race in test_server.TestObjectController.test_PUT_ssync_multi_frag

If the test ran across a one second boundary it would fail because while
the timestamp normalization was doing some rounding it was making no
attempt to reuse the same timestamp on subsequent requests.

Change-Id: Ic560032bcfacd6f0d10cfc0f4f10e5d6c2bc8dd5"
zqfan,2015-06-29 05:04:46,https://api.github.com/repos/openstack/swift/git/commits/a88bd6e6b9253b6488a2bf1a354ce29b51f37fe1,a88bd6e6b9253b6488a2bf1a354ce29b51f37fe1,"fix api overview document

The content about Object Storage HTTP requests constraints seems to
be a table but broken, this patch fixes it into correct rst table format.

Change-Id: I1b4c62da3e6d91add3ee0218707c1628c8f04b33"
clayg,2015-06-25 08:44:10,https://api.github.com/repos/openstack/swift/git/commits/c95a0efe7973a660f4abcd13f4ea6211d72c4baa,c95a0efe7973a660f4abcd13f4ea6211d72c4baa,"Make ssync_sender a better HTTP client

When a server responses with an error - if that error includes a body - the
client should read the body.  This cleans up some ugly eventlet/wsgi.server log
output related to chunked transfer disconnect (invalid literal for int() with
base 16).

Change-Id: Ibd06ddee9f216fce07fa33c3a7d8306b59eb6d77
Closes-Bug: #1466138"
minwoob,2015-06-18 19:21:06,https://api.github.com/repos/openstack/swift/git/commits/44b76a1b1b83ac9563010f1ddfca5fca76e567bf,44b76a1b1b83ac9563010f1ddfca5fca76e567bf,"EC Reconstructor: Do not reconstruct existing fragments.

The EC reconstructor needs to verify that the fragment needing to
be reconstructed does not reside in the collection of node responses.
Otherwise, resources will be spent unnecessarily reconstructing
the fragment. Moreover, this could cause a segfault on some backends.

This change adds the necessary verification steps to make sure
that a fragment will only be rebuilt in the case it is missing from
the other fragment archives.

Added some tests to provide coverage for these scenarios.

Change-Id: I91f3d4af52cbc66c9f7ce00726f247b5462e66f9
Closes-Bug: #1452553"
clayg,2015-06-25 08:35:07,https://api.github.com/repos/openstack/swift/git/commits/d124ce5792d93e1efcdb083211ecef381f7b7173,d124ce5792d93e1efcdb083211ecef381f7b7173,"Fix ValueError in ssync_receiver

httplib's putheader method will cast whatever you give it to a string.
where we allow the default dict.get default of None to be passed to
putheader unmodified ssync_receiver is surpised that the non-empty
string isn't able to be converted to an integer.

We can avoid surprising the ssync_receiver in this way by sending the
empty string as a better default.

Change-Id: Ie9df9927ff4d3dd3f334647f883b2937d0d81030"
cschwede,2015-06-26 08:54:22,https://api.github.com/repos/openstack/swift/git/commits/edfca861b6fa39972df276fb1f37aa81583a605d,edfca861b6fa39972df276fb1f37aa81583a605d,"Increase httplib._MAXHEADERS

Python 2.7.9+ and 3.2.6+ limits the number of maximum headers in httplib to 100
[1,2,3]. This setting is too low for Swift.

By default the maximum number of allowed headers depends on the number of max
allowed metadata settings plus a default value of 32 for regular http headers.
If for some reason this is not enough (custom middleware for example) it can be
increased with the extra_header_count constraint.

[1] https://bugs.python.org/issue16037
[2] https://hg.python.org/cpython/raw-file/15c95b7d81dc/Misc/NEWS
[3] https://hg.python.org/cpython/raw-file/v3.2.6/Misc/NEWS

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Matthew Oliver <matt@oliver.net.au>
Co-Authored-By: Thomas Herve <therve@redhat.com>

Change-Id: I388fd697ec88476024b0e9f1ae75ba35ff765282"
bloodeagle40234,2015-06-23 06:24:19,https://api.github.com/repos/openstack/swift/git/commits/81ceee056de604d81a921280f453731eadf7be09,81ceee056de604d81a921280f453731eadf7be09,"Add one more test for ssync_receiver

To prevent 409 conflict on a primary node during ssyncing,
ssync-receiver should add x-ssync-backend-frag-index generated from
x-ssync-backend-node-index of the SSYNC replication request header.
The change is done by previous work[1], but we need more test for that.

This patch addes one more assertion if the x-ssync-backend-frag-index
is in the ssync subrequest correctly.

*BONUS*
Fix some weird mock and add some sanities.

1: https://review.openstack.org/#/c/191521/

Change-Id: I27aff713c69017c0bc4c60b4833184e1285595d7"
codevulture,2015-06-24 15:37:16,https://api.github.com/repos/openstack/swift/git/commits/c2c1366b0794bcdbbbaef7fedaef2cab19cd8db8,c2c1366b0794bcdbbbaef7fedaef2cab19cd8db8,"Fixed Errors in Swift-Form Post middleware section rst.

Inline markup cannot be nested in RST.
Fixing markups by using a single option for the whole line and making
some minor error corrections.

Change-Id: I42bfd7dfe5c93a69436ecc5d154f2e61ca83fa82"
codevulture,2015-06-12 18:10:51,https://api.github.com/repos/openstack/swift/git/commits/514daea6317edc02587f7abfaae8770e1ef9cc4b,514daea6317edc02587f7abfaae8770e1ef9cc4b,"Fixed Formatting Error in Swift -Form Post middleware section.

Fixed Formatting error in ``action=”SWIFT_URL``” => action=”``SWIFT_URL``”

Change-Id: Id461129ef7f5b6412f94d36920c942a4181c0eb7
Closes-Bug: #1464740"
vstinner,2015-06-24 07:36:37,https://api.github.com/repos/openstack/swift/git/commits/e70b66586e13718e7ac0078c2f2cd1135c61a1f1,e70b66586e13718e7ac0078c2f2cd1135c61a1f1,"Replace dict.iteritems() with dict.items()

The iteritems() of Python 2 dictionaries has been renamed to items() on
Python 3. According to a discussion on the openstack-dev mailing list,
the overhead of creating a temporary list using dict.items() on Python 2
is very low because most dictionaries are small:

http://lists.openstack.org/pipermail/openstack-dev/2015-June/066391.html

Patch generated by the following command:

    sed -i 's,iteritems,items,g' \
      $(find swift -name ""*.py"") \
      $(find test -name ""*.py"")

Change-Id: I6070bb6c684be76e8e77222a7d280ec6edd43496"
peluse,2015-05-25 21:41:42,https://api.github.com/repos/openstack/swift/git/commits/e6165a7879d796efd3992260ef23a7f95ceeab32,e6165a7879d796efd3992260ef23a7f95ceeab32,"Add policy support to dispersion tools

Doesn't work for anything other than policy 0. updated to allow user
to specify policy name on cmd line (as with object-info) which
then makes populate/report work with 3x, 2x, or EC style policies

Change-Id: Ib7c298f0f6d666b1ecca25315b88539f45cf9f95
Closes-Bug: 1458688"
vstinner,2015-05-25 16:28:02,https://api.github.com/repos/openstack/swift/git/commits/e5c962a28ce99f01c6cd0b68b7434ddcd0e55f62,e5c962a28ce99f01c6cd0b68b7434ddcd0e55f62,"Replace xrange() with six.moves.range()

Patch generated by the xrange operation of the sixer tool:
https://pypi.python.org/pypi/sixer

Manual changes:

* Fix indentation for pep8 checks
* Fix TestGreenthreadSafeIterator.test_access_is_serialized of
  test.unit.common.test_utils:
  replace range(1, 11) with list(range(1, 11))
* Fix UnsafeXrange docstring, revert change

Change-Id: Icb7e26135c5e57b5302b8bfe066b33cafe69fe4d"
cschwede,2015-06-22 12:48:41,https://api.github.com/repos/openstack/swift/git/commits/4a5b851207c98a380a32e27a183dd98022be9d16,4a5b851207c98a380a32e27a183dd98022be9d16,"Add note about updatedb to the docs

Change-Id: Ia1aa0bb1f93ee487e2f7ddf76a7a08efa8f3ba41"
peluse,2015-06-13 18:03:56,https://api.github.com/repos/openstack/swift/git/commits/ac8a76958510646c369df9ffc2bf22005e43d153,ac8a76958510646c369df9ffc2bf22005e43d153,"EC Ssync:  Update parms to include node and frag indices

Previously we sent the ssync backend frag index based on the node
index.  We need to be more specific for ssync to handle both sync
and revert cases so now we send the frag index based on the job
contents (as determined by the ec recon)) and the node index
as a new header based on, well, the node index.

The rcvr can now validate the incoming pair to reject (400) when
a primary node is being asked to accept fragments that don't
belong to it.  Additionally, by having the frag index the
rcvr can reject (409) an attempt to accept a fragment when its
a handoff and already has one that needs to be reverted.

Fixes-bug: #1452619
Change-Id: I8287b274bbbd00903c1975fe49375590af697be4"
smerritt,2015-06-18 19:58:03,https://api.github.com/repos/openstack/swift/git/commits/12d8a53fffea6e4bed8ba3d502ce625f5c6710b9,12d8a53fffea6e4bed8ba3d502ce625f5c6710b9,"Get better at closing WSGI iterables.

PEP 333 (WSGI) says: ""If the iterable returned by the application has
a close() method, the server or gateway must call that method upon
completion of the current request[.]""

There's a bunch of places where we weren't doing that; some of them
matter more than others. Calling .close() can prevent a connection
leak in some cases. In others, it just provides a certain pedantic
smugness. Either way, we should do what WSGI requires.

Noteworthy goofs include:

  * If a client is downloading a large object and disconnects halfway
    through, a proxy -> obj connection may be leaked. In this case,
    the WSGI iterable is a SegmentedIterable, which lacked a close()
    method. Thus, when the WSGI server noticed the client disconnect,
    it had no way of telling the SegmentedIterable about it, and so
    the underlying iterable for the segment's data didn't get
    closed.

    Here, it seems likely (though unproven) that the object server
    would time out and kill the connection, or that a
    ChunkWriteTimeout would fire down in the proxy server, so the
    leaked connection would eventually go away. However, a flurry of
    client disconnects could leave a big pile of useless connections.

  * If a conditional request receives a 304 or 412, the underlying
    app_iter is not closed. This mostly affects conditional requests
    for large objects.

The leaked connections were noticed by this patch's co-author, who
made the changes to SegmentedIterable. Those changes helped, but did
not completely fix, the issue. The rest of the patch is an attempt to
plug the rest of the holes.

Co-Authored-By: Romain LE DISEZ <romain.ledisez@ovh.net>

Change-Id: I168e147aae7c1728e7e3fdabb7fba6f2d747d937
Closes-Bug: #1466549"
dbishop,2015-05-15 05:14:15,https://api.github.com/repos/openstack/swift/git/commits/df134df901a13c2261a8205826ea1aa8d75dc283,df134df901a13c2261a8205826ea1aa8d75dc283,"Allow 1+ object-servers-per-disk deployment

Enabled by a new > 0 integer config value, ""servers_per_port"" in the
[DEFAULT] config section for object-server and/or replication server
configs.  The setting's integer value determines how many different
object-server workers handle requests for any single unique local port
in the ring.  In this mode, the parent swift-object-server process
continues to run as the original user (i.e. root if low-port binding
is required), binds to all ports as defined in the ring, and forks off
the specified number of workers per listen socket.  The child, per-port
servers drop privileges and behave pretty much how object-server workers
always have, except that because the ring has unique ports per disk, the
object-servers will only be handling requests for a single disk.  The
parent process detects dead servers and restarts them (with the correct
listen socket), starts missing servers when an updated ring file is
found with a device on the server with a new port, and kills extraneous
servers when their port is found to no longer be in the ring.  The ring
files are stat'ed at most every ""ring_check_interval"" seconds, as
configured in the object-server config (same default of 15s).

Immediately stopping all swift-object-worker processes still works by
sending the parent a SIGTERM.  Likewise, a SIGHUP to the parent process
still causes the parent process to close all listen sockets and exit,
allowing existing children to finish serving their existing requests.
The drop_privileges helper function now has an optional param to
suppress the setsid() call, which otherwise screws up the child workers'
process management.

The class method RingData.load() can be told to only load the ring
metadata (i.e. everything except replica2part2dev_id) with the optional
kwarg, header_only=True.  This is used to keep the parent and all
forked off workers from unnecessarily having full copies of all storage
policy rings in memory.

A new helper class, swift.common.storage_policy.BindPortsCache,
provides a method to return a set of all device ports in all rings for
the server on which it is instantiated (identified by its set of IP
addresses).  The BindPortsCache instance will track mtimes of ring
files, so they are not opened more frequently than necessary.

This patch includes enhancements to the probe tests and
object-replicator/object-reconstructor config plumbing to allow the
probe tests to work correctly both in the ""normal"" config (same IP but
unique ports for each SAIO ""server"") and a server-per-port setup where
each SAIO ""server"" must have a unique IP address and unique port per
disk within each ""server"".  The main probe tests only work with 4
servers and 4 disks, but you can see the difference in the rings for the
EC probe tests where there are 2 disks per server for a total of 8
disks.  Specifically, swift.common.ring.utils.is_local_device() will
ignore the ports when the ""my_port"" argument is None.  Then,
object-replicator and object-reconstructor both set self.bind_port to
None if server_per_port is enabled.  Bonus improvement for IPv6
addresses in is_local_device().

This PR for vagrant-swift-all-in-one will aid in testing this patch:
https://github.com/swiftstack/vagrant-swift-all-in-one/pull/16/

Also allow SAIO to answer is_local_device() better; common SAIO setups
have multiple ""servers"" all on the same host with different ports for
the different ""servers"" (which happen to match the IPs specified in the
rings for the devices on each of those ""servers"").

However, you can configure the SAIO to have different localhost IP
addresses (e.g. 127.0.0.1, 127.0.0.2, etc.) in the ring and in the
servers' config files' bind_ip setting.

This new whataremyips() implementation combined with a little plumbing
allows is_local_device() to accurately answer, even on an SAIO.

In the default case (an unspecified bind_ip defaults to '0.0.0.0') as
well as an explict ""bind to everything"" like '0.0.0.0' or '::',
whataremyips() behaves as it always has, returning all IP addresses for
the server.

Also updated probe tests to handle each ""server"" in the SAIO having a
unique IP address.

For some (noisy) benchmarks that show servers_per_port=X is at least as
good as the same number of ""normal"" workers:
https://gist.github.com/dbishop/c214f89ca708a6b1624a#file-summary-md

Benchmarks showing the benefits of I/O isolation with a small number of
slow disks:
https://gist.github.com/dbishop/fd0ab067babdecfb07ca#file-results-md

If you were wondering what the overhead of threads_per_disk looks like:
https://gist.github.com/dbishop/1d14755fedc86a161718#file-tabular_results-md

DocImpact

Change-Id: I2239a4000b41a7e7cc53465ce794af49d44796c6"
smerritt,2015-06-15 20:36:36,https://api.github.com/repos/openstack/swift/git/commits/af72881d1dcc46486d8d652b92a0ec9aa9ca2bfa,af72881d1dcc46486d8d652b92a0ec9aa9ca2bfa,"Use just IP, not port, when determining partition placement

In the ring builder, we place partitions with maximum possible
dispersion across tiers, where a ""tier"" is region, then zone, then
IP/port,then device. Now, instead of IP/port, just use IP. The port
wasn't really getting us anything; two different object servers on two
different ports on one machine aren't separate failure
domains. However, if someone has only a few machines and is using one
object server on its own port per disk, then the ring builder would
end up with every disk in its own IP/port tier, resulting in bad (with
respect to durability) partition placement.

For example: assume 1 region, 1 zone, 4 machines, 48 total disks (12
per machine), and one object server (and hence one port) per
disk. With the old behavior, partition replicas will all go in the one
region, then the one zone, then pick one of 48 IP/port pairs, then
pick the one disk therein. This gives the same result as randomly
picking 3 disks (without replacement) to store data on; it completely
ignores machine boundaries.

With the new behavior, the replica placer will pick the one region,
then the one zone, then one of 4 IPs, then one of 12 disks
therein. This gives the optimal placement with respect to durability.

The same applies to Ring.get_more_nodes().

Co-Authored-By: Kota Tsuyuzaki <tsuyuzaki.kota@lab.ntt.co.jp>

Change-Id: Ibbd740c51296b7e360845b5309d276d7383a3742"
codevulture,2015-06-15 16:40:45,https://api.github.com/repos/openstack/swift/git/commits/09e7477a391e7425af62a6516f43c69bc98b7080,09e7477a391e7425af62a6516f43c69bc98b7080,"Replace it.next() with next(it) for py3 compat

The Python 2 next() method of iterators was renamed to __next__() on
Python 3. Use the builtin next() function instead which works on Python
2 and Python 3.

Change-Id: Ic948bc574b58f1d28c5c58e3985906dee17fa51d"
vstinner,2015-06-08 22:22:12,https://api.github.com/repos/openstack/swift/git/commits/5ad369c1cb0f480b164a5b5e7eb194081835c266,5ad369c1cb0f480b164a5b5e7eb194081835c266,"Add six requirement

The six module is needed to add Python 3 support to Swift.

Change-Id: Ie637ed3458c7ff56c26834bca73203ed55604d74"
codevulture,2015-06-06 12:12:41,https://api.github.com/repos/openstack/swift/git/commits/037a0c5dbe01a57b741d34988e21f4f763b6204b,037a0c5dbe01a57b741d34988e21f4f763b6204b,"Object are sorted and concatenated by swift in cardinal order.

Modified values in example in decimal to be more precise,
added a small description on Object are sorted and concatenated
by swift in cardinal order as a small phrase would be sufficient.

Change-Id: I914ded4e5726e50bb93b05759c3bfb76edda53ab
backport: none
Closes-Bug: #1383893"
minwoob,2015-04-28 18:18:32,https://api.github.com/repos/openstack/swift/git/commits/c953e8cc9049e94cd01239d5e4a30a56f26a97d3,c953e8cc9049e94cd01239d5e4a30a56f26a97d3,"The hash_cleanup_listdir function should only be called when necessary.

Introduced a conditional that will specify to _finalize_put() whether
the put() method is being called within the context of ECDiskFileWriter.

Included some unit tests that will test the number of calls to
hash_cleanup_listdir() during put(), commit(), and delete()
operations.

Change-Id: I287b2648591fdbf686898dc9047beda80a64da0c"
osanai-hisashi,2015-06-02 08:00:42,https://api.github.com/repos/openstack/swift/git/commits/93de6c73e587a672663fa0997f439b73b336769c,93de6c73e587a672663fa0997f439b73b336769c,"Add metadata size tests on the border

This patch adds a test for a 204 when a single metadata item in a POST causes
the backend aggregate constraints check to be on the border.

Background:
Overall metadata size constraint is enforced in the container and
account backends as well as in the proxy controllers.
Whereas the proxy controller can check that constraints are not exceeded
by a single PUT or POST request, the backend checks that constraints are not
exceeded by the aggregate of all PUTs and POSTs.

The change [1] added a test for a 400 when a single metadata item in
a POST causes the backend aggregate constraints check to go over limit.

[1] I1489e29686013cbd3d70283d8756b548aea3c2e1

Change-Id: Iac86ea71240ddde177e625c279c21aef67659d10"
smerritt,2015-03-20 16:56:30,https://api.github.com/repos/openstack/swift/git/commits/4f2ed8bcd0468f3b69d5fded274d8d6b02ac3d10,4f2ed8bcd0468f3b69d5fded274d8d6b02ac3d10,"EC: support multiple ranges for GET requests

This commit lets clients receive multipart/byteranges responses (see
RFC 7233, Appendix A) for erasure-coded objects. Clients can already
do this for replicated objects, so this brings EC closer to feature
parity (ha!).

GetOrHeadHandler got a base class extracted from it that treats an
HTTP response as a sequence of byte-range responses. This way, it can
continue to yield whole fragments, not just N-byte pieces of the raw
HTTP response, since an N-byte piece of a multipart/byteranges
response is pretty much useless.

There are a couple of bonus fixes in here, too. For starters, download
resuming now works on multipart/byteranges responses. Before, it only
worked on 200 responses or 206 responses for a single byte
range. Also, BufferedHTTPResponse grew a readline() method.

Also, the MIME response for replicated objects got tightened up a
little. Before, it had some leading and trailing CRLFs which, while
allowed by RFC 7233, provide no benefit. Now, both replicated and EC
multipart/byteranges avoid extraneous bytes. This let me re-use the
Content-Length calculation in swob instead of having to either hack
around it or add extraneous whitespace to match.

Change-Id: I16fc65e0ec4e356706d327bdb02a3741e36330a0"
cschwede,2015-06-02 19:51:39,https://api.github.com/repos/openstack/swift/git/commits/f1f4bb30cd8ad930ddb7a232b2744b48e35a0480,f1f4bb30cd8ad930ddb7a232b2744b48e35a0480,"Fix testing issues

When functional tests are run in tox and an exception is raised when connecting
to Swift (for example: Swift not running, missing python-keystoneclient package
used by python-swiftclient) 0 tests are executed, but tox returns a success.

An exception is raised during tests, caused by a missing python-keystoneclient
in python-swiftclient. Instead of adding python-keystoneclient as a dependency
in python-swiftclient the package is added to the test-requirements.txt in Swift
itself. Note that adding python-keystoneclient to the test-requirements in
python-swiftclient is not sufficient (it's already in there).

The exception in setup_package() is catched by the openstack.nose_plugin, thus
disabling this plugin for now as well.

Also fixing two test errors seen on the gate regarding the tempurl middleware.

There was also an update to tox, environment variables were no longer passed
with versions >= 2.0 (http://tox.readthedocs.org/en/latest/changelog.html).
Swift test environment variables have been added to the passenv to re-enable the
former behavior, as well as environment variables required to pass proxy
settings.

This also led to skipped tempauth tests, and together with the missing
python-keystoneclient no tests were executed.

Related-Bug: 1461440
Related-Bug: 1455102

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>

Change-Id: Ideea071017d04912c60ed0bc76532adbb446c31d"
redbo,2015-05-31 23:10:15,https://api.github.com/repos/openstack/swift/git/commits/1bef06eec8f5f780914ac701d63f9c498b29119b,1bef06eec8f5f780914ac701d63f9c498b29119b,"Don't quarantine on read_metadata ENOENT

An operation that removes an existing .ts or .meta out from under another
concurrent operation at the right point can cause the whole object to be
needlessly quarantined.

Closes-Bug: #1451520

Change-Id: I37d660199e54411d0610889f9ee230b13747244b"
cschwede,2015-06-01 06:50:33,https://api.github.com/repos/openstack/swift/git/commits/b4c1d73ad56e0705d1c5dd1fc4f1d89b09fceff1,b4c1d73ad56e0705d1c5dd1fc4f1d89b09fceff1,"Make swift-recon compatible for servers without storage policies

Swift recon introduced a new key for storage policies, and the CLI expected this
key in the server response. However, if one updates the CLI but not yet the
server an exception will be raised, because there is no default value and no
check if the key is included in the response.

This change checks if the policies key is included in the response and updates
one test to ensure backward compability.

Closes-Bug: 1453599

Change-Id: I7c7a90f9933bec2ab45595df9dc600a6cba65666"
smerritt,2015-05-26 23:19:54,https://api.github.com/repos/openstack/swift/git/commits/38787d0fb5102e41b153e4629d2ef374a02965e9,38787d0fb5102e41b153e4629d2ef374a02965e9,"Remove simplejson from staticweb

Since we're dropping Python 2.6 support, we can rely on stdlib's json
and get rid of our dependency on simplejson.

This lets us get rid of some redundant Unicode encoding. Before, we
would take the container-listing response off the wire,
JSON-deserialize it (str -> unicode), then pass each of several fields
from each entry to get_valid_utf8_str(), which would encode it,
(unicode -> str), decode it (str -> unicode), and then encode it again
(unicode -> str) for good measure.

The net effect was that each object's name would, in the proxy server,
go str -> unicode -> str -> unicode -> str.

By replacing simplejson with stdlib json, we get a guarantee that each
container-listing entry's name, hash, content_type, and last_modified
are unicodes, so we can stop worrying about them being valid UTF-8 or
not. This takes an encode and decode out of the path, so we just have
str -> unicode -> str. While it'd be ideal to avoid this, the first
transform (str -> unicode) happens when we decode the
container-listing response body (json.loads()), so there's no way out.

Change-Id: I00aedf952d691a809c23025b89131ea0f02b6431"
smerritt,2015-05-28 22:30:47,https://api.github.com/repos/openstack/swift/git/commits/736cf54adf3ee85d2f473e5e5374f9833422967c,736cf54adf3ee85d2f473e5e5374f9833422967c,"Remove simplejson from tests

Since we're dropping Python 2.6 support, we can rely on stdlib's json
and get rid of our dependency on simplejson.

This commit just takes simplejson out of the unit and functional
tests. They still pass.

Change-Id: I96f17df81fa5d265395a938b19213d2638682106"
notmyname,2015-05-27 19:28:04,https://api.github.com/repos/openstack/swift/git/commits/5374ba3a80a5b895542196502eac4d9300ba53d2,5374ba3a80a5b895542196502eac4d9300ba53d2,"drop Python 2.6 testing support

Change-Id: I78f21e5794e8ba7a095f03d279247516a241f555"
tipabu,2015-05-20 07:39:41,https://api.github.com/repos/openstack/swift/git/commits/bb716573ab5c8455348ec013feb894421e0e1f1c,bb716573ab5c8455348ec013feb894421e0e1f1c,"Allow SLO PUTs to forgo per-segment integrity checks

While manifests still require 'etag' and 'size_bytes' fields for each
segment (to catch user errors like 'etaf' or 'size_btyes'), an explicit
null for either will skip that particular integrity check and instead
use whatever value is retrieved when HEADing the segment. So, if a user
uploads a manifest like:

    [{""path"": ""/con/obj_seg_1"", ""etag"": null, ""size_bytes"": 1048576},
     {""path"": ""/con/obj_seg_2"", ""etag"": ""etag2"", ""size_bytes"": null},
     {""path"": ""/con/obj_seg_3"", ""etag"": null, ""size_bytes"": null}]

then the etag will only be verified for the /con/obj_seg_2 segment,
and the segment size will only be verified for the /con/obj_seg_1
segment. However, the manifest that's ultimately stored (and can be
retrieved with a ?multipart-manifest=get query-string) will still look
like:

    [{""name"": ""/con/obj_seg_1"", ""hash"": ""etag1"", ""bytes"": 1048576, ...},
     {""name"": ""/con/obj_seg_2"", ""hash"": ""etag2"", ""bytes"": 1048576, ...},
     {""name"": ""/con/obj_seg_3"", ""hash"": ""etag3"", ""bytes"": 1234, ...}]

This allows the middleware to continue performing integrity checks on
object GET.

Change-Id: I2c4e585221387dd02a8679a50398d6b614407b12
DocImpact"
smerritt,2015-05-26 23:43:55,https://api.github.com/repos/openstack/swift/git/commits/a1c327022c70907ccc159d6203de26b37c3a4586,a1c327022c70907ccc159d6203de26b37c3a4586,"Remove simplejson from swift-recon

Since we're dropping Python 2.6 support, we can rely on stdlib's json
and get rid of our dependency on simplejson.

All swift-recon was doing with json was decoding a JSON response (from
the recon middleware) and printing it to the terminal. This still
works just fine.

Change-Id: I28cf25a7c2856f230d4642c62fb8bf9c4d37e9e5"
clayg,2015-04-17 23:30:30,https://api.github.com/repos/openstack/swift/git/commits/a3559edc2342e2cf92a5188336ab263ffd038554,a3559edc2342e2cf92a5188336ab263ffd038554,"Exclude local_dev from sync partners on failure

If the primary left or right hand partners are down, the next best thing
is to validate the rest of the primary nodes.  Where the rest should
exclude not just the left and right hand partners - but ourself as well.

This fixes a accidental noop when partner node is unavailable and
another node is missing data.

Validation:

Add probetests to cover ssync failures for the primary sync_to nodes for
sync jobs.

Drive-by:

Make additional plumbing for the check_mount and check_dir constraints into
the remaining daemons.

Change-Id: I4d1c047106c242bca85c94b569d98fd59bb255f4"
smerritt,2015-05-06 23:29:06,https://api.github.com/repos/openstack/swift/git/commits/666bf06c26bc9e0d6256d054835386e50e67b8a2,666bf06c26bc9e0d6256d054835386e50e67b8a2,"EC: don't 503 on marginally-successful PUT

On EC PUT in an M+K scheme, we require M+1 fragment archives to
durably land on disk. If we get that, then we go ahead and ask the
object servers to ""commit"" the object by writing out .durable
files. We only require 2 of those.

When we got exactly M+1 fragment archives on disk, and then one
connection timed out while writing .durable files, we should still be
okay (provided M is at least 3). However, we'd take our M > 2
remaining successful responses and pass that off to best_response()
with a quorum size of M+1, thus getting a 503 even though everything
worked well enough.

Now we pass 2 to best_response() to avoid that false negative.

There was also a spot where we were getting the quorum size wrong. If
we wrote out 3 fragment archives for a 2+1 policy, we were only
requiring 2 successful backend PUTs. That's wrong; the right number is
3, which is what the policy's .quorum() method says. There was a spot
where the right number wasn't getting plumbed through, but it is now.

Change-Id: Ic658a199e952558db329268f4d7b4009f47c6d03
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Closes-Bug: 1452468"
mmatur,2015-05-25 13:13:01,https://api.github.com/repos/openstack/swift/git/commits/e7c8c578d9e5b0aa7e56b02bd9c39baa99d2d6ae,e7c8c578d9e5b0aa7e56b02bd9c39baa99d2d6ae,"fixup!Patch of ""parse_content_disposition"" method to meet RFC2183

The spec of Content-Disposition does not require a space character after
comma: http://www.ietf.org/rfc/rfc2183.txt

Change-Id: Iff438dc36ce78c6a79bb66ab3d889a8dae7c0e1f
Closes-Bug: #1458497"
joannahuang,2014-10-21 09:24:25,https://api.github.com/repos/openstack/swift/git/commits/af8d842076ba269fed7f4128d0c7503ab5d1a94a,af8d842076ba269fed7f4128d0c7503ab5d1a94a,"Replaced setting run_pause with standard interval

The deprecated directive `run_pause` should be replaced with the more
standard one `interval`. The `run_pause` should be still supported for
backward compatibility. This patch updates object replicator to use
`interval` and support `run_pause`. It also updates its sample config
and documentation.

Co-Authored-By: Joanna H. Huang <joanna.huitzu.huang@gmail.com>
Co-Authored-By: Kamil Rykowski <kamil.rykowski@intel.com>

Change-Id: Ie2a3414a96a94efb9273ff53a80b9d90c74fff09
Closes-Bug: #1364735"
bloodeagle40234,2015-05-22 23:58:04,https://api.github.com/repos/openstack/swift/git/commits/f11d92d566757a54ff1e3800ec0bfac098347a68,f11d92d566757a54ff1e3800ec0bfac098347a68,"Add swift-durability-calculator line to docs

This commits add a line (link and small doc) for
swift-durability-calculator which provides a browser based
durability calculation tool to docs as an associated project.

Change-Id: I4ea8015f512616dc25072080bef79b8734971ccf"
clayg,2015-05-21 00:50:07,https://api.github.com/repos/openstack/swift/git/commits/f864092455ebcd40b3568633c3524cc5c64d3309,f864092455ebcd40b3568633c3524cc5c64d3309,"Add Swift Inspector to assoicated projects

Change-Id: I5b5448674ea455119a51509ab5e7cd11a764b5a7"
kajinamit,2014-11-24 12:44:03,https://api.github.com/repos/openstack/swift/git/commits/ab9f63402de6d554528699a02955854ac28264c5,ab9f63402de6d554528699a02955854ac28264c5,"Add process name checking into swift-init

Swift-init uses pid files to detect existing swift processes by pid.
However, it mistakes an unrelated process for a swift process and makes
a wrong decision, when the unrelated process is running with pid written
in swift pid files.
This patch adds process name checking into swift-init and enable it to remove
invalid pid files in such situation.

Change-Id: Ibca026bdfbdacdd92c8763e1eb15d98293c70656
Closes-Bug: #1327106"
bloodeagle40234,2015-04-24 09:15:36,https://api.github.com/repos/openstack/swift/git/commits/025c4c4339e7ace2f5be8cb3a3cddf6c38ceff37,025c4c4339e7ace2f5be8cb3a3cddf6c38ceff37,"Remove confusable query string on post as copy

Current post as copy routine (i.e. POST object with post_as_copy option
turned on) on Object Controller uses ""multipart-manifest"" query string
which is feeded to env['copy_hook'] to decide which data (the manifest or
object pointed by the manifest) should be copied.

However, the way using the query string will confuse operators looking at
logging system (or analyzing the log) because whole POST object requests
have 'multipart-manifest=get' like as:

POST /v1/AUTH_test/d4c816b24d38489082f5118599a67920/manifest-abcde%3Fmultipart-manifest%3Dget

We cannot know whether the query string was added by hand
(from user) or not. In addition, the query isn't needed by the
backend conversation between proxy-server and object-server.
(Just needed by ""copy_hook"" on the proxy controller!)

To remove the confusable query string and to keep the log to be clean,
this patch introduces new environment variable ""swift.post_as_copy""
and changes proxy controller and the copy_hook to use the new env.

This item was originally discussed at
https://review.openstack.org/#/c/177132/

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>

Change-Id: I0cd37520eea1825a10ebd27ccdc7e9162647233e"
peluse,2015-05-12 22:21:13,https://api.github.com/repos/openstack/swift/git/commits/518262ab6ecd8faa2b915df118ffc70a30112a18,518262ab6ecd8faa2b915df118ffc70a30112a18,"Remove 1 line of dead code from EC reconstructor

Assuming nobody intentionally left this in here for some reason...

Change-Id: I4bf43bb3828e062c0342557243076ed62d6790f4"
smerritt,2015-05-08 22:55:14,https://api.github.com/repos/openstack/swift/git/commits/29f4393d88426fd6c34f2cfe43a8c434bfad8d47,29f4393d88426fd6c34f2cfe43a8c434bfad8d47,"Remove workaround for old eventlet version

Swift now requires eventlet >= 0.16.1, so we can get rid of this
workaround for a bug in eventlet 0.9.16.

Change-Id: I4a1200b9bd9266896a704a840fda0d1b720bc86d"
tipabu,2015-05-08 18:45:12,https://api.github.com/repos/openstack/swift/git/commits/90b84d3a699811a99c97ebbe4f71a14d2f76a0e5,90b84d3a699811a99c97ebbe4f71a14d2f76a0e5,"Properly re-raise exceptions in proxy_logging

Previously, this could encounter TypeErrors, presumably because
sys.exc_clear() was called somewhere in the block of code between
catching the exception and re-raising.

Related-Bug: 1181146
Change-Id: Iadeea3f61e70bf83dc0eb063fdb27edd16f3ca32"
cschwede,2015-05-08 06:41:39,https://api.github.com/repos/openstack/swift/git/commits/664a632c01f8c5c80826b223b9ade774bfe2ed9a,664a632c01f8c5c80826b223b9ade774bfe2ed9a,"Update my mailmap entry

Change-Id: I5d21a55d0fa4cab6eaa6ff426819aa1dc997de2f"
zaitcev,2015-05-07 19:16:15,https://api.github.com/repos/openstack/swift/git/commits/0b20a18e5216b991855c461e41e9ef32e17fadb4,0b20a18e5216b991855c461e41e9ef32e17fadb4,"Spell ""rebalance"" right in swift-ring-builder.1

See Red Hat bug #1218269.

Change-Id: I814eb4b3c0821f5a8df5feea2bda3a964aace536"
cazino,2015-05-05 10:31:22,https://api.github.com/repos/openstack/swift/git/commits/1faad248f833735585aa8f6135babceb46fbb6f8,1faad248f833735585aa8f6135babceb46fbb6f8,"X-Auth-Token should be a bytestring.

Change-Id: I2aa941d74883e17e9548b0144a4a2e2db33aba95
Closes-Bug: 1451773"
smerritt,2015-05-04 22:08:51,https://api.github.com/repos/openstack/swift/git/commits/94215049fd37f810ddf4e6b8122cce02aea3e6e3,94215049fd37f810ddf4e6b8122cce02aea3e6e3,"Bump up a timeout in a test

Got a slow crappy VM like I do? You might see this fail
occasionally. Bump up the timeout a little to help it out.

Change-Id: I8c0e5b99012830ea3525fa55b0811268db3da2a2"
notmyname,2015-04-30 16:19:17,https://api.github.com/repos/openstack/swift/git/commits/31263ce315e0245b51abbc2219c753766e7ba3da,31263ce315e0245b51abbc2219c753766e7ba3da,"Merge branch 'stable/kilo' into master

Change-Id: I631e20d1168413196d3061718601cf9918c28985"
prashanthpai,2015-04-29 06:41:59,https://api.github.com/repos/openstack/swift/git/commits/03536dbb55c219b94389e635babec2df2e2759fa,03536dbb55c219b94389e635babec2df2e2759fa,"Fix incorrect passing of file object to fsync()

swift.common.utils.fsync() requires a file descriptor as argument
but file object handle was being passed.

Change-Id: I316b58f6bc37de0945eff551e4e50565653664f5
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
clayg,2015-04-27 20:29:50,https://api.github.com/repos/openstack/swift/git/commits/8cdf0fdebe9eb782322fccfc11253dc959cf321d,8cdf0fdebe9eb782322fccfc11253dc959cf321d,"Fix account replication during pre-storage-policy upgrade

Old account schemas don't send the storage_policy_index key for container rows
during replication, and if the recieving end is already running an upgraded
server it is surprised with a KeyError.  Normally this would work itself out
if the old schema recieved any updates from container layer, or a new
container is created, or requires a row sync from another account database -
but if the account databases have rows out of sync and there's no activity in
the account otherwise, there's nothing to force the old schemas to be
upgraded.

Rather than force the old schema that already has a complete set of container
rows to migrate even in the absense of activity we can just fill in default
legacy value for the storage policy index and allow the accounts to get back
in sync and migrate the next time a container update occurs.

FWIW, I never able to get a cluster upgrade to get stuck in this state without
some sort of account failure that forced them to get their rows out of sync
(in my cause I just unlinked a pending and then made sure to force all my
account datbases to commit pending files before upgrading - leading to an
upgraded cluster that absolutly needed account-replication to solve a row
mismatch for inactive accounts with old schemas)

Closes-Bug #1424108

Change-Id: Iaf4ef834eb24f0e11a52cc22b93a864574fabf83"
clayg,2015-04-24 02:39:16,https://api.github.com/repos/openstack/swift/git/commits/03380380efb5d5c0b2a3acfaa64b486ee2cb6e64,03380380efb5d5c0b2a3acfaa64b486ee2cb6e64,"Simplify ring.builder.RingBuilder.__deepcopy__

Only container classes (lists, sets, dicts, graphs, collections,
etc) need to track objects they deepcopy in the memo dict -
particularly when they may contain other containers!  As they
recreate a new container with the same items as themselves, they'll
reference the memo for each item they contain before making a
deepcopy of it, and place a reference to the copied item into memo
after they do.  Trying to help out some other container class in
this endeavor by attempting to add ourselves to the memo dict in
some useful manor on their behalf however; is not helpful.

All we need to do to make sure we're being a good __deepcopy__
implementation is make sure we pass on memo to our calls of deepcopy
so that other container classes can avoid making additional
deepcopy's of our containers if they already have a memorized copy
(which would be odd since unique instances of RingBuilders aren't
expected to share state, but hey - python doesn't have private
attributes so you never know!)

Change-Id: Ifac444dffbf79d650b2d858f6282e05d8ea741a0"
smerritt,2015-04-20 19:17:56,https://api.github.com/repos/openstack/swift/git/commits/43ace3c62893364b6e3c130df56438995627598d,43ace3c62893364b6e3c130df56438995627598d,"Make RingBuilders deep-copy-able

We used to be able to deep-copy RingBuilder objects, but the addition
of debug logging (8d3b3b2) broke that since you can't deep-copy a
Python logger. This commit fixes that.

Swift doesn't really deep-copy RingBuilders anywhere, but third-party
code might.

Change-Id: If8bdadd93d9980db3d8a093f32d76ca604de9301"
smerritt,2015-04-22 00:38:04,https://api.github.com/repos/openstack/swift/git/commits/215cd551df8be066edafd2a1e16d0bd143ec214b,215cd551df8be066edafd2a1e16d0bd143ec214b,"Bulk upload: treat user xattrs as object metadata

Currently, if you PUT a single object, then you can also associate
metadata with it by putting it in the request headers, prefixed with
""X-Object-Meta"". However, if you're bulk-uploading objects, then you
have no way to assign any metadata.

The tar file format* allows for arbitrary UTF-8 key/value pairs to be
associated with each file in an archive (as well as with the archive
itself, but we don't care about that here). If a file has extended
attributes, then tar will store those as key/value pairs.

This commit makes bulk upload read those extended attributes, if
present, and convert those to Swift object metadata. Attributes
starting with ""user.meta"" are converted to object metadata, and
""user.mime_type""** is converted to Content-Type.

For example, if you have a file ""setup.py"":

    $ setfattr -n user.mime_type -v ""application/python-setup"" setup.py
    $ setfattr -n user.meta.lunch -v ""burger and fries"" setup.py
    $ setfattr -n user.meta.dinner -v ""baked ziti"" setup.py
    $ setfattr -n user.stuff -v ""whee"" setup.py

This will get translated to headers:

    Content-Type: application/python-setup
    X-Object-Meta-Lunch: burger and fries
    X-Object-Meta-Dinner: baked ziti

Swift will handle xattrs stored by both GNU and BSD tar***. Only
xattrs user.mime_type and user.meta.* are processed; others are
ignored.

This brings bulk upload much closer to feature-parity with non-bulk upload.

* The POSIX 1003.1-2001 (pax) format, at least. There are a few
  different, mutually-incompatible tar formats out there, because of
  course there are. This is the default format on GNU tar 1.27.1 or
  later.

** http://standards.freedesktop.org/shared-mime-info-spec/latest/ar01s02.html#idm140622087713936

*** Even with pax-format tarballs, different encoders store xattrs
    slightly differently; for example, GNU tar stores the xattr
    ""user.rubberducky"" as pax header ""SCHILY.xattr.user.rubberducky"",
    while BSD tar (which uses libarchive) stores it as
    ""LIBARCHIVE.xattr.user.rubberducky"". One might wonder if this is
    some programmer's attempt at job security.

Change-Id: I5e3ce87d31054f5239e86d47c45adbde2bb93640"
ajaeger,2015-04-20 09:15:35,https://api.github.com/repos/openstack/swift/git/commits/f8dee761bd36f857aa1288c27e095907032fad68,f8dee761bd36f857aa1288c27e095907032fad68,"Release Import of Translations from Transifex

Manual import of Translations from Transifex. This change also removes
all po files that are less than 66 per cent translated since such
partially translated files will not help users.

This updates also recreates all pot (translation source files) to
reflect the state of the repository.

This change needs to be done manually since the automatic import does
not handle the proposed branches and we need to sync with latest
translations.

Note: This is part of importing of translations, there are no new
translations for this project, thus only the pot file gets updated.

Change-Id: I0cbfdae3bd1662da54c58e91a13f49419eba9b2d"
bloodeagle40234,2015-04-20 07:18:25,https://api.github.com/repos/openstack/swift/git/commits/cd7c58e93690fd25f5266754d0593c656dd51e2e,cd7c58e93690fd25f5266754d0593c656dd51e2e,"Use reconstruct insetad of decode/encode

With bumping PyECLib up to 1.0.7 on global requirements,
we can use the ""reconstruct"" function directly instead
of the current hack doing decode/encode on reconstructor.
That is because the hack was for treating PyECLib < 1.0.7
(strictly jearsure scheme) reconstruction bug so we don't
have to do decode/encode anymore.

Closes-Bug: 1446801
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: I69aae495670e3d0bdebe665f73915547a4d56f99"
clayg,2015-04-15 22:31:06,https://api.github.com/repos/openstack/swift/git/commits/51e31c5c7147f3ba61437e132b12b491ca718ce4,51e31c5c7147f3ba61437e132b12b491ca718ce4,"Don't apply the wrong Etag validation to rebuilt fragments

Because of the object-server's interaction with ssync sender's
X-Backend-Replication-Headers when a object (or fragment archive) is
pushed unmodified to another node it's ETag value is duped into the
recieving ends metadata as Etag.  This interacts poorly with the
reconstructor's RebuildingECDiskFileStream which can not know ahead of
time the ETag of the fragment archive being rebuilt.

Don't send the Etag from the local source fragment archive being used as
the basis for the rebuilt fragent archive's metadata along to ssync.

Closes-Bug: 1446800
Change-Id: Ie59ad93a67a7f439c9a84cd9cff31540f97f334a"
bloodeagle40234,2015-04-20 07:18:25,https://api.github.com/repos/openstack/swift/git/commits/27f6fba5c3b9e0461d52c1deffe32130e7e9af51,27f6fba5c3b9e0461d52c1deffe32130e7e9af51,"Use reconstruct insetad of decode/encode

With bumping PyECLib up to 1.0.7 on global requirements,
we can use the ""reconstruct"" function directly instead
of the current hack doing decode/encode on reconstructor.
That is because the hack was for treating PyECLib < 1.0.7
(strictly jearsure scheme) reconstruction bug so we don't
have to do decode/encode anymore.

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Change-Id: I69aae495670e3d0bdebe665f73915547a4d56f99"
smerritt,2015-04-20 23:47:10,https://api.github.com/repos/openstack/swift/git/commits/0c391d6daffe1943f6def803db42e08e6d6846d2,0c391d6daffe1943f6def803db42e08e6d6846d2,"SAIO instructions: ensure ~/bin exists before copying into it

Change-Id: I16cd211b00b529ccc4b46f6b10497c32b6741896"
minwoob,2015-04-20 22:03:25,https://api.github.com/repos/openstack/swift/git/commits/c5c281ba6dd97a301ba80511e3356d6ca536d701,c5c281ba6dd97a301ba80511e3356d6ca536d701,"Included step in development_saio.rst for installing dependencies in requirements.txt.

Change-Id: I6ed1704148e5ae1e3164d10080c350d81856f7a9"
ttx,2015-04-16 20:08:47,https://api.github.com/repos/openstack/swift/git/commits/f6482bdece27144ee083a53d696469528d7940c2,f6482bdece27144ee083a53d696469528d7940c2,"Set default branch to stable/kilo

Open stable/kilo branch by setting defaultbranch for git-review.

Change-Id: I81bcda30f99173416eaaa3f1d42da32f3ab5b6d2"
smerritt,2015-04-16 18:42:12,https://api.github.com/repos/openstack/swift/git/commits/a2a5b6aa6664b61fa31d25f329426ff089372f17,a2a5b6aa6664b61fa31d25f329426ff089372f17,"Functional test for SLO PUT overwriting one of its own segments

Change-Id: I4855816848f4fdb148d0b82735cf79bc68429617"
KazuhiroMiyahara,2015-02-19 08:38:10,https://api.github.com/repos/openstack/swift/git/commits/e4d326b5a7dd186d762726faa45733ff2900343d,e4d326b5a7dd186d762726faa45733ff2900343d,"Fix conflict SLO reponse

This patch fixes Swift to respond ""409 Conflict""
when a segment object path of the manifest on PUT SLO
is same as requested object path. It is because
the request will overwrite the segment and then it
will absolutely cause ""409 Conflict"" on GET SLO.

e.g.:

request:
PUT ""http://hostname/v1/AUTH_account/container/segment_object_00?multipart-manifest=put""

manifest file:
[{""path"" : ""container/segment_object_00"", ""etag"" : ""<etag of segment_object_00>"", ""size_bytes"" : <size of segment_object_00>},
{""path"" : ""container/segment_object_01"", ""etag"" : ""<etag of segment_object_01>"", ""size_bytes"" : <size of segment_object_01>},
{""path"" : ""container/segment_object_02"", ""etag"" : ""<etag of segment_object_02>"", ""size_bytes"" : <size of segment_object_02>}]

Change-Id: I4f4f7b9dbeb6a7c355b801c7e0ae560aa19a70b4
Closes-Bug: 1417936"
bloodeagle40234,2015-04-15 18:25:13,https://api.github.com/repos/openstack/swift/git/commits/e440d6aed8a40848584767ed36811bf09c738838,e440d6aed8a40848584767ed36811bf09c738838,"Fix best response to return correct status

Current best response could return ""503 Internal Server Error"".
However, ""503"" means ""Service Unavailable"". (The status int of
Internal Server Error is 500)

This patch fixes the response status as ""503 Service Unavailable""

Change-Id: I88b8c52c26b19e9e76ba3375f1e16ced555ed54c"
ricard0ff,2015-03-12 23:18:33,https://api.github.com/repos/openstack/swift/git/commits/57011d5699d49a47ae89073ff27b39140ab4d652,57011d5699d49a47ae89073ff27b39140ab4d652,"More user-friendly output for object metadata

Split out system, user and other metadata in swift-object-info. Print
every position line by line instead of raw dict representation, so it
would be easier to parse with tools such as grep.

Co-Authored-By: Ricardo Ferreira <ricardo.sff@gmail.com>
Co-Authored-By: Kamil Rykowski <kamil.rykowski@intel.com>

Change-Id: Ia78da518c18f7e26016700aee87efb534fbd2040
Closes-Bug: #1428866"
clayg,2015-04-15 22:31:06,https://api.github.com/repos/openstack/swift/git/commits/52b102163e48dc04a6a492a3430efa1f7778d7ec,52b102163e48dc04a6a492a3430efa1f7778d7ec,"Don't apply the wrong Etag validation to rebuilt fragments

Because of the object-server's interaction with ssync sender's
X-Backend-Replication-Headers when a object (or fragment archive) is
pushed unmodified to another node it's ETag value is duped into the
recieving ends metadata as Etag.  This interacts poorly with the
reconstructor's RebuildingECDiskFileStream which can not know ahead of
time the ETag of the fragment archive being rebuilt.

Don't send the Etag from the local source fragment archive being used as
the basis for the rebuilt fragent archive's metadata along to ssync.

Change-Id: Ie59ad93a67a7f439c9a84cd9cff31540f97f334a"
bloodeagle40234,2015-04-15 06:22:14,https://api.github.com/repos/openstack/swift/git/commits/46bd6716ffae28aef53f15af170fd2df01b49843,46bd6716ffae28aef53f15af170fd2df01b49843,"Small minor refactor on ec diskfile

To be more helpful, add an inline comment and remove
unnecessary assignment.

Change-Id: Ia9c6993dfa03c238736955de8b0f5c1a7d5d1b65"
brownelo,2015-04-15 10:32:32,https://api.github.com/repos/openstack/swift/git/commits/193fe9a5f906a2344bb5d328ad55b881e4086caa,193fe9a5f906a2344bb5d328ad55b881e4086caa,"Update swift-recon doc with more options

The swit-recon tool has had several functional additions
added recently but not all of these have been added to the docs.

This change adds the following options to the manpages:

  --human-readable
  --validate-servers
  --sockstat
  --driveaudit
  --region
  --timeout

Also fixes a typo on line 78 (cop -> copy)

Change-Id: Id083b32a60473ad5a2b9ac1d092528d230521c86"
clayg,2015-04-14 22:24:58,https://api.github.com/repos/openstack/swift/git/commits/5ef2e9ec00b1498fb411fc918b71ae9c50b1308f,5ef2e9ec00b1498fb411fc918b71ae9c50b1308f,"fixup random test failure

Change-Id: I053cec441623e7556d6cdfbc1d271c5cdf21aa8b"
notmyname,2015-03-23 19:00:28,https://api.github.com/repos/openstack/swift/git/commits/86920f3dbe43a0389119b7d26b61650997c0fc9f,86920f3dbe43a0389119b7d26b61650997c0fc9f,"2.3.0 authors and changelog updates

Change-Id: I5a46437a718e2a29fd289bde7bec45db4ee873bd"
clayg,2015-03-27 22:50:38,https://api.github.com/repos/openstack/swift/git/commits/4aba2fbb25edf8936e00ee9f5736cc2c0c383c32,4aba2fbb25edf8936e00ee9f5736cc2c0c383c32,"Check if REST API version is valid

Swift doesn't check if the used API version is valid. Currently there
is only one valid REST API version, but that might change in the
future.

This patch enforces ""v1"" or ""v1.0"" as the version string when accessing
account, containers and objects.

The list of accepted version strings can be manually overridden using a
comma-separated list in swift.conf to make this backward-compatible.
The constraint loader has been modified slightly to accept strings as
well as integers.

Any request to an account, container, and object which does not
provide the correct version string will get a 400 BadRequest response.

The allowed api versions are by default excluded from /info.

Co-Authored-By: Christian Schwede <christian.schwede@enovance.com>
Co-Authored-By: John Dickinson <me@not.mn>

Closes Bug #1437442

Change-Id: I5ab6e236544378abf2eab562ab759513d09bc256"
brownelo,2015-03-24 13:54:00,https://api.github.com/repos/openstack/swift/git/commits/66fb207fcb288889d73d42960b037e3ef7ef3ce2,66fb207fcb288889d73d42960b037e3ef7ef3ce2,"Add lowest option to swift-recon disk usage output

Currently there is a ""--top"" option when running swift-recon for
disk usage stats. This option lists the x disks with the highest
disk usage in descending order.

This feature adds a ""--lowest"" option which does the opposite and
lists the y disks with lowest disk usage in ascending order.

Have also updated the docs section with --top and --lowest options

Change-Id: Ic15d407fe010a31995c2bdd9fb88548a1057f569"
ajaeger,2015-04-15 07:43:26,https://api.github.com/repos/openstack/swift/git/commits/26bff69cb5c5f86815ea8b4592a1a0119475023b,26bff69cb5c5f86815ea8b4592a1a0119475023b,"Fix untranslatable string

The word ""number"" is not marked for translation, we cannot just add
it this way to a string.
Instead create two separate strings.

Change-Id: I0396f1d7405987ed1c57f0344e1c5ebeca30a2e3
Closes-Bug: #1444327"
osanai-hisashi,2015-03-23 04:47:22,https://api.github.com/repos/openstack/swift/git/commits/749bdac1df3571324af6bdcf64e1d283f9ec6cb9,749bdac1df3571324af6bdcf64e1d283f9ec6cb9,"Refactor the getting roles logic in _keystone_identity

The list_from_csv in swift.common.utils is used from the composite
auth token support and this method has been used in
_integral_keystone_identity. There is same logic in
_keystone_identity so the logic would be replaced with list_from_csv.

Change-Id: I3d72a34e6fc21fbe1d7331954695b1e3e1b67816"
notmyname,2015-04-14 15:10:41,https://api.github.com/repos/openstack/swift/git/commits/e910f7e07d05dd2c6ada939d5704c3d4944c24b0,e910f7e07d05dd2c6ada939d5704c3d4944c24b0,"Merge EC feature into master

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: John Dickinson <me@not.mn>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Tushar Gohad <tushar.gohad@intel.com>
Co-Authored-By: Paul Luse <paul.e.luse@intel.com>
Co-Authored-By: Samuel Merritt <sam@swiftstack.com>
Co-Authored-By: Christian Schwede <christian.schwede@enovance.com>
Co-Authored-By: Yuan Zhou <yuan.zhou@intel.com>
Change-Id: I002787f558781bd4d884129b127bc9f108ea9ec4"
peluse,2014-07-03 22:59:33,https://api.github.com/repos/openstack/swift/git/commits/8f5d4d24557887b4691fc219cefbc30e478bf7ed,8f5d4d24557887b4691fc219cefbc30e478bf7ed,"Erasure Code Documentation

This patch adds all the relevant EC documentation to
the source tree. Notable additions are:
  - Updated SAIO documentation
  - Updates to existing swift documentation; and
  - Erasure Coding overview

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: John Dickinson <me@not.mn>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Tushar Gohad <tushar.gohad@intel.com>
Co-Authored-By: Samuel Merritt <sam@swiftstack.com>
Co-Authored-By: Christian Schwede <christian.schwede@enovance.com>
Co-Authored-By: Yuan Zhou <yuan.zhou@intel.com>
Change-Id: I0403016a4bb7dad9535891632753b0e5e9d402eb
Implements: blueprint swift-ec
Signed-off-by: Thiago da Silva <thiago@redhat.com>"
peluse,2014-10-28 16:51:06,https://api.github.com/repos/openstack/swift/git/commits/647b66a2ce4c85c43dcca49776d35c5ebb9cf15e,647b66a2ce4c85c43dcca49776d35c5ebb9cf15e,"Erasure Code Reconstructor

This patch adds the erasure code reconstructor. It follows the
design of the replicator but:
  - There is no notion of update() or update_deleted().
  - There is a single job processor
  - Jobs are processed partition by partition.
  - At the end of processing a rebalanced or handoff partition, the
    reconstructor will remove successfully reverted objects if any.

And various ssync changes such as the addition of reconstruct_fa()
function called from ssync_sender which performs the actual
reconstruction while sending the object to the receiver

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: John Dickinson <me@not.mn>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Tushar Gohad <tushar.gohad@intel.com>
Co-Authored-By: Samuel Merritt <sam@swiftstack.com>
Co-Authored-By: Christian Schwede <christian.schwede@enovance.com>
Co-Authored-By: Yuan Zhou <yuan.zhou@intel.com>
blueprint ec-reconstructor
Change-Id: I7d15620dc66ee646b223bb9fff700796cd6bef51"
clayg,2015-04-03 23:23:14,https://api.github.com/repos/openstack/swift/git/commits/b2189ef47ae08c39c348e7f4c90697ecb9ba64f9,b2189ef47ae08c39c348e7f4c90697ecb9ba64f9,"Fix account reaper for > 3 replicas

There's a pre-existing IndexError in the pop from the container node
list in reaper's reap_object method for object rings with a replica
count greater than the container replica count.  Which is more likely
on EC storage policies.

When making the backend direct delete requests to the nodes once the
container node's list is exhausted the generic exception handler logs
the error and breaks out of any other backend object requests - but
the reaper marches forward and eventually the tombstones are
replicated.

This change just cycles the container headers across all the nodes -
which seems reasonable enough - but could certainly garner
bikeshedding.

Change-Id: I5897d00b0a8c1e05884945dd93d9ce891b207001"
zhouyuan,2014-12-24 03:52:34,https://api.github.com/repos/openstack/swift/git/commits/61a9d35fd58381b7c299f125ef01d00f9b0203fe,61a9d35fd58381b7c299f125ef01d00f9b0203fe,"Update container sync to use internal client

This patch changes container sync to use Internal Client instead
of Direct Client.

In the current design, container sync uses direct_get_object to
get the newest source object(which talks to storage node directly).
This works fine for replication storage policies however in
erasure coding policies, direct_get_object would only return part
of the object(it's encoded as several pieces). Using Internal
Client can get the original object in EC case.

Note that for the container sync put/delete part, it's working in
EC since it's using Simple Client.

Signed-off-by: Yuan Zhou <yuan.zhou@intel.com>

DocImpact
Change-Id: I91952bc9337f354ce6024bf8392046a1ecf6ecc9"
smerritt,2014-10-22 20:18:34,https://api.github.com/repos/openstack/swift/git/commits/decbcd24d41d6367901db16aaa2578f74870b6b5,decbcd24d41d6367901db16aaa2578f74870b6b5,"Foundational support for PUT and GET of erasure-coded objects

This commit makes it possible to PUT an object into Swift and have it
stored using erasure coding instead of replication, and also to GET
the object back from Swift at a later time.

This works by splitting the incoming object into a number of segments,
erasure-coding each segment in turn to get fragments, then
concatenating the fragments into fragment archives. Segments are 1 MiB
in size, except the last, which is between 1 B and 1 MiB.

+====================================================================+
|                             object data                            |
+====================================================================+

                                   |
          +------------------------+----------------------+
          |                        |                      |
          v                        v                      v

+===================+    +===================+         +==============+
|     segment 1     |    |     segment 2     |   ...   |   segment N  |
+===================+    +===================+         +==============+

          |                       |
          |                       |
          v                       v

     /=========\             /=========\
     | pyeclib |             | pyeclib |         ...
     \=========/             \=========/

          |                       |
          |                       |
          +--> fragment A-1       +--> fragment A-2
          |                       |
          |                       |
          |                       |
          |                       |
          |                       |
          +--> fragment B-1       +--> fragment B-2
          |                       |
          |                       |
         ...                     ...

Then, object server A gets the concatenation of fragment A-1, A-2,
..., A-N, so its .data file looks like this (called a ""fragment archive""):

+=====================================================================+
|     fragment A-1     |     fragment A-2     |  ...  |  fragment A-N |
+=====================================================================+

Since this means that the object server never sees the object data as
the client sent it, we have to do a few things to ensure data
integrity.

First, the proxy has to check the Etag if the client provided it; the
object server can't do it since the object server doesn't see the raw
data.

Second, if the client does not provide an Etag, the proxy computes it
and uses the MIME-PUT mechanism to provide it to the object servers
after the object body. Otherwise, the object would not have an Etag at
all.

Third, the proxy computes the MD5 of each fragment archive and sends
it to the object server using the MIME-PUT mechanism. With replicated
objects, the proxy checks that the Etags from all the object servers
match, and if they don't, returns a 500 to the client. This mitigates
the risk of data corruption in one of the proxy --> object connections,
and signals to the client when it happens. With EC objects, we can't
use that same mechanism, so we must send the checksum with each
fragment archive to get comparable protection.

On the GET path, the inverse happens: the proxy connects to a bunch of
object servers (M of them, for an M+K scheme), reads one fragment at a
time from each fragment archive, decodes those fragments into a
segment, and serves the segment to the client.

When an object server dies partway through a GET response, any
partially-fetched fragment is discarded, the resumption point is wound
back to the nearest fragment boundary, and the GET is retried with the
next object server.

GET requests for a single byterange work; GET requests for multiple
byteranges do not.

There are a number of things _not_ included in this commit. Some of
them are listed here:

 * multi-range GET

 * deferred cleanup of old .data files

 * durability (daemon to reconstruct missing archives)

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: John Dickinson <me@not.mn>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Tushar Gohad <tushar.gohad@intel.com>
Co-Authored-By: Paul Luse <paul.e.luse@intel.com>
Co-Authored-By: Christian Schwede <christian.schwede@enovance.com>
Co-Authored-By: Yuan Zhou <yuan.zhou@intel.com>
Change-Id: I9c13c03616489f8eab7dcd7c5f21237ed4cb6fd2"
smerritt,2014-09-17 01:40:41,https://api.github.com/repos/openstack/swift/git/commits/b1eda4aef8a228961d5aafe7e4fbd4e812d233ad,b1eda4aef8a228961d5aafe7e4fbd4e812d233ad,"Allow sending object metadata after data

This lets the proxy server send object metadata to the object server
after the object data. This is necessary for EC, as it allows us to
compute the etag of the object in the proxy server and still store it
with the object.

The wire format is a multipart MIME document. For sanity during a
rolling upgrade, the multipart MIME document is only sent to the
object server if it indicates, via 100 Continue header, that it knows
how to consume it.

Example 1 (new proxy, new obj server):

   proxy: PUT /p/a/c/o
          X-Backend-Obj-Metadata-Footer: yes

     obj: 100 Continue
        X-Obj-Metadata-Footer: yes

   proxy: --MIMEmimeMIMEmime...

Example2: (new proxy, old obj server)

   proxy: PUT /p/a/c/o
          X-Backend-Obj-Metadata-Footer: yes

     obj: 100 Continue

   proxy: <obj body>

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: John Dickinson <me@not.mn>
Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Tushar Gohad <tushar.gohad@intel.com>
Co-Authored-By: Paul Luse <paul.e.luse@intel.com>
Co-Authored-By: Christian Schwede <christian.schwede@enovance.com>
Co-Authored-By: Yuan Zhou <yuan.zhou@intel.com>
Change-Id: Id38f7e93e3473f19ff88123ae0501000ed9b2e89"
notmyname,2015-03-20 10:17:25,https://api.github.com/repos/openstack/swift/git/commits/dd9d97458ea007024220a78dba8dd663e8b425d7,dd9d97458ea007024220a78dba8dd663e8b425d7,"Prevent unauthorized delete in versioned container

An authenticated user can delete the most recent version of any
versioned object who's name is known if the user has listing access
to the x-versions-location container. Only Swift setups with
allow_version setting are affected.

This patch closes this bug, tracked as CVE-2015-1856

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>
Co-Authored-By: Christian Schwede <info@cschwede.de>
Co-Authored-By: Alistair Coles <alistair.coles@hp.com>

Closes-Bug: 1430645
Change-Id: Ibacc7413afe7cb6f77d92e5941dcfdf4768ffa18"
clayg,2015-04-01 05:35:37,https://api.github.com/repos/openstack/swift/git/commits/a7078293349a01a7594f6457fccb1aca31d98fd4,a7078293349a01a7594f6457fccb1aca31d98fd4,"Update test infrastructure

 * Get FakeConn ready for expect 100 continue
 * Use debug_logger more and with better interfaces
 * Fix patch_policies to be less annoying

Co-Authored-By: Alistair Coles <alistair.coles@hp.com>
Co-Authored-By: Thiago da Silva <thiago@redhat.com>
Co-Authored-By: Tushar Gohad <tushar.gohad@intel.com>
Co-Authored-By: Paul Luse <paul.e.luse@intel.com>
Co-Authored-By: Samuel Merritt <sam@swiftstack.com>
Co-Authored-By: Christian Schwede <christian.schwede@enovance.com>
Co-Authored-By: Yuan Zhou <yuan.zhou@intel.com>
Change-Id: I28c0a3539d994cbb8e6b94d63a23ed4ea6cb956d"
notmyname,2015-04-01 19:41:25,https://api.github.com/repos/openstack/swift/git/commits/376ecc74fccef390e4e4de66cae3ef20bcbd021f,376ecc74fccef390e4e4de66cae3ef20bcbd021f,"make `git review` easier

Change-Id: I6032a7915586db6da25aafccf3dced581b37df9c"
smerritt,2015-01-11 21:41:35,https://api.github.com/repos/openstack/swift/git/commits/8d3b3b2ee0a86b37b6ad1f4d201bfaa0103af07d,8d3b3b2ee0a86b37b6ad1f4d201bfaa0103af07d,"Add some debug output to the ring builder

Sometimes, I get handed a builder file in a support ticket and a
question of the form ""why is the balance [not] doing $thing?"". When
that happens, I add a bunch of print statements to my local
swift/common/ring/builder.py, figure things out, and then delete the
print statements. This time, instead of deleting the print statements,
I turned them into debug() calls and added a ""--debug"" flag to the
rebalance command in hopes that someone else will find it useful.

Change-Id: I697af90984fa5b314ddf570280b4585ba0ba363c"
clayg,2015-03-27 04:43:48,https://api.github.com/repos/openstack/swift/git/commits/cf21db4bc68aff190c55d416b406a44bf204ba36,cf21db4bc68aff190c55d416b406a44bf204ba36,"Add Swift Design Principles to CONTRIBUTING.md

This is based of work started a few design summits ago [1].

With EC getting close I felt like I could the inspiration.

1. https://etherpad.openstack.org/p/juno_swift_core_principles

Change-Id: I90fa56d67003080fe3d7bc4e0fad053e3b0c8504
Signed-off-by: Thiago da Silva <thiago@redhat.com>"
osanai-hisashi,2015-03-23 02:29:16,https://api.github.com/repos/openstack/swift/git/commits/75e84543aab5af8038e0e1a369fcf0ed10ea2509,75e84543aab5af8038e0e1a369fcf0ed10ea2509,"Clarify the description of backward compatibility in Keystoneauth's docstring

If no prefix implies for the operator_roles and/or service_roles
parameters applies to all reseller_prefixes in the code.
But from backward comatibility point of view, the service_roles
parameter is newly introduced parameter so it is better to clarify
the docstring.

Change-Id: I8b0d5aeff785c21b8a8b0f5b20f774fad868016d"
nertpinx,2015-03-19 16:25:57,https://api.github.com/repos/openstack/swift/git/commits/76b106fc017922997cbe6bef3bcee309e39c7c82,76b106fc017922997cbe6bef3bcee309e39c7c82,"Fix common misspellings

Wikipedia's list of common misspellings [1] has a machine-readable
version.  This patch fixes those misspellings mentioned in the list
which don't have multiple right variants (as e.g. ""accension"", which can
be both ""accession"" and ""ascension""), such misspellings are left
untouched.  The list of changes was manually re-checked for false
positives.

[1] https://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines

Change-Id: Ic9a5438629664f7cea216413a28acc0e8992da05
Signed-off-by: Martin Kletzander <mkletzan@redhat.com>"
brownelo,2015-03-12 15:40:39,https://api.github.com/repos/openstack/swift/git/commits/0a467936621009418a9c94f636b33bfb6d947a89,0a467936621009418a9c94f636b33bfb6d947a89,"Add swift-recon feature to track swift-drive-audit error count

This is a follow-on from a previous commit which added recon info
for swift-drive-audit (https://review.openstack.org/#/c/122468/).

Here, the ""--drievaudit"" option is added to swift-recon tool. This
feature gives the statistics for the system-wide drive errors flagged
by swift-drive-audit. An example of the output is as follows:
(verbose mode)

swift-recon --driveaudit -v
===============================================================================
--> Starting reconnaissance on 5 hosts
===============================================================================
[2015-03-11 17:13:39] Checking drive-audit errors
-> http://1.2.3.4:6000/recon/driveaudit: {'drive_audit_errors': 14}
-> http://1.2.3.5:6000/recon/driveaudit: {'drive_audit_errors': 0}
-> http://1.2.3.6:6000/recon/driveaudit: {'drive_audit_errors': 37}
-> http://1.2.3.7:6000/recon/driveaudit: {'drive_audit_errors': 101}
-> http://1.2.3.8:6000/recon/driveaudit: {'drive_audit_errors': 0}
[drive_audit_errors] low: 0, high: 101, avg: 30.4, total: 152, Failed: 0.0%, no_result: 0, reported: 5
===============================================================================

Change-Id: Ia16c52a9d613eeb3de1a5a428d88dd1233631912"
bloodeagle40234,2015-03-20 07:59:15,https://api.github.com/repos/openstack/swift/git/commits/9ae0a0702c4a32407b1d00e93bd1be01e2ec26bc,9ae0a0702c4a32407b1d00e93bd1be01e2ec26bc,"Fix a lack of method arguments at tempauth

This fixes a kind of trivial issue with TypeError caused by a lack
of method argument at calling.

When using 'Authorization' header with tempauth, tempauth calls
_get_user_groups with 3 arguments (includes self) on current code
but the method requires 4 arguments so it will go to fail with 500.

This patch fixes to take correct arguments and adds an unit test
for the case.

Closes-Bug:1434465

Change-Id: Ibf00c41fa8e5cfdaf49bc4d571e575d7f229ebfe"
tolbkni,2015-03-16 15:30:37,https://api.github.com/repos/openstack/swift/git/commits/fdb2ec0cc7428457a836a23f4b18348e037e6805,fdb2ec0cc7428457a836a23f4b18348e037e6805,"Add the missing ""file"" keyword for print

All non-keyword arguments are converted to strings and written to
the stream, the argument ""sys.stderr"" should be given keyword
""file"" as keyword argument.

Change-Id: I1f9c4e41ed7a1d3246eae9179fd9221c0a834292"
bloodeagle40234,2015-03-13 11:39:16,https://api.github.com/repos/openstack/swift/git/commits/99a3d1a1c5d9591eed5378cf83af78578b01b386,99a3d1a1c5d9591eed5378cf83af78578b01b386,"Fix the prefix of messages caputured from stderr

Swift caputures both sys.stdout and sys.stderr messages and
transfers them to syslog. However, whole of the messages
uses the ""STDOUT:"" prefix, currently.

It will be quite confusable for debugging purpose because we
cannot make sure whether ""Swift didn't caputure stderr"" or
""Swift captured stderr but didn't show it"" when we want to log
some stderr messages.

This patch enables to allow a new prefix ""STDERR:"" and use it
for sys.stderr.

Change-Id: Idf4649e9860b77c3600a5cd0a3e0bd674b31fb4f"
ricard0ff,2015-03-06 21:18:48,https://api.github.com/repos/openstack/swift/git/commits/9baafe7f305147c70d004402ebb05a22db85bc18,9baafe7f305147c70d004402ebb05a22db85bc18,"Allow swift-object-info to inspect .meta and .ts files

Removing the check for "".data"" extension makes it check
*any* file for metadata, so it works with .meta and .ts
filetypes.

Change-Id: I43966d371218ad39414e9282cde579e48370a2a7
Closes-Bug:1425679"
bloodeagle40234,2015-03-09 10:18:25,https://api.github.com/repos/openstack/swift/git/commits/b73e49e790533d668efff1290ab54f65a4048fa3,b73e49e790533d668efff1290ab54f65a4048fa3,"Fix param description on _make_request

make_requests requires a list of headers but _make_request needs
just headers dictionary (not a list).

Change-Id: Iaf7ba32de3702bf2189f41e42041b561c9d1b57b"
smerritt,2015-03-06 23:06:50,https://api.github.com/repos/openstack/swift/git/commits/98911be6d72bb834f3a99f73ef6dcd66e375be43,98911be6d72bb834f3a99f73ef6dcd66e375be43,"Small optimization to ring builder.

We were already checking this condition a few lines up; no need to do
it again.

Change-Id: I066c635c8dfa3c3a1e9a944decae2f41e2c689c9"
prashanthpai,2015-03-05 13:31:38,https://api.github.com/repos/openstack/swift/git/commits/0eb27b96f267a1a8419efeb96d68e3773d70e049,0eb27b96f267a1a8419efeb96d68e3773d70e049,"Handle ENOSPC in mkstemp()

mkstemp() can fail with ENOSPC when filesystem runs out of inodes.
And fallocate() used to raise DiskFileNoSpace for all OSErrors.

Change-Id: I8c95cb710107d8e481d068b00eda53dd805c00a5
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
prashanthpai,2014-10-08 14:19:39,https://api.github.com/repos/openstack/swift/git/commits/a6f630f27cc20ab4ae1cf53b6840b817aba576a0,a6f630f27cc20ab4ae1cf53b6840b817aba576a0,"fsync() on directories

renamer() method now does a fsync on containing directory of target path
and also on parent dirs of newly created directories, by default.
This can be explicitly turned off in cases where it is not
necessary (For example- quarantines).

The following article explains why this is necessary:
http://lwn.net/Articles/457667/

Although, it may seem like the right thing to do, this change does come
at a performance penalty. However, no configurable option is provided to
turn it off.

Also, lock_path() inside invalidate_hash() was always creating part of
object path in filesystem. Those are never fsync'd. This has been
fixed.

Change-Id: Id8e02f84f48370edda7fb0c46e030db3b53a71e3
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
matthewoliver,2015-03-01 22:21:00,https://api.github.com/repos/openstack/swift/git/commits/4f9a3a33427849123b12992528dd7f7dc1e6f0c6,4f9a3a33427849123b12992528dd7f7dc1e6f0c6,"Fixed links in multi-server Swift documentation

The link to the ubuntu installation guide was incorrect and 404'ing.

This change updates page to point (anchor) to the install guide
section of docs.openstack.org, so it will always point to the latest
versions of the install documentation.

It also updates the deep links to the current install guides for the
past few releases.

As links continue to get outdated or we forget to add new ones, the
anchor link at the top of the page will probably still work.

Change-Id: I38299c03370936eb41992a953aa9d10b01a8396b
Closes-Bug: #1147331"
prashanthpai,2015-01-20 06:44:32,https://api.github.com/repos/openstack/swift/git/commits/9c33bbde6923b26f111572ae967a3b97a8ab12f2,9c33bbde6923b26f111572ae967a3b97a8ab12f2,"Allow rsync to use compression

From rsync's man page:
-z, --compress
With this option, rsync compresses the file data as it is sent to the
destination machine, which reduces the amount of data being transmitted --
something that is useful over a slow connection.

A configurable option has been added to allow rsync to compress, but only
if the remote node is in a different region than the local one.

NOTE: Objects that are already compressed (for example: .tar.gz, .mp3)
might slow down the syncing process.

On wire compression can also be extended to ssync later in a different
change if required. In case of ssync, we could explore faster
compression libraries like lz4. rsync uses zlib which is slow but offers
higher compression ratio.

Change-Id: Ic9b9cbff9b5e68bef8257b522cc352fc3544db3c
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
clayg,2015-02-27 00:37:16,https://api.github.com/repos/openstack/swift/git/commits/2ff66a532c657564ff05999c3f45dc15a4fdf94f,2ff66a532c657564ff05999c3f45dc15a4fdf94f,"Fix object replicator partition cleanup

Probetests discovered two issues with the current state of the
object-replicator as a result of the attempts to clean up changes
related to efficient cross-region replication.

Known failures are:

  * rsync replication when configured with no sync_method in the config
    fails to clean up a handoff partition
  * ssync replication when there is only one region fails to cleanup a
    handoff partition

In both cases the path resulting in the failure moved through the
implicit else clause (dangling elif) of the partition cleanup code path.
In the ssync case the failure came form a miss on the first if branch
when delete_objs would be None if there is no remote regions.  In the
rsync case the failure came from a miss on the second elif condition
when looking for an entry in the conf dict and not setting a default.

This change adds unittests for both failures that should fail in a
reasonable way against master without requiring a probetest run against
other configs, as well as rephrasing the logic in the partition cleanup
handling to try and make the logic flow more explicit.

Change-Id: Ic59d998a3e36a3eb3e509d9fdf7096e812281357"
notmyname,2015-02-26 22:21:47,https://api.github.com/repos/openstack/swift/git/commits/da6f8d8f1373fd21f2254e398eca5d989a069f66,da6f8d8f1373fd21f2254e398eca5d989a069f66,"fixed ugly code pattern in probe tests

Change-Id: I242f095ea0ca8d6d69c3b2258cce6b51c7963dce"
clayg,2015-02-26 20:30:30,https://api.github.com/repos/openstack/swift/git/commits/555e9894eee58fb49ac66ae703aa2835beedbe0c,555e9894eee58fb49ac66ae703aa2835beedbe0c,"Make functests retry auth immediately

I don't think we need to backoff after a 401 - we have a perfectly valid
response telling us exactly what we should do so we can do that right away and
move on.

Assuming you run functional tests at least once a day, according to
http://xkcd.com/1205/ and my benchmarks you can spend roughly a full day
reviewing this change and still come out ahead.

Change-Id: I27c42c4ee3254eb32aad4d3dac08b16b3a43d611"
clayg,2015-02-26 19:45:58,https://api.github.com/repos/openstack/swift/git/commits/e3cbfc5c5ee47660d77ccd784e7b842539a99c1c,e3cbfc5c5ee47660d77ccd784e7b842539a99c1c,"Add tempauth back to /info

Our functional tests are skipping Account ACL tests when using tempauth
because it does not register itself with in swift.common.utils._swift_info

Add the register_swift_info call back to the filter_factory function in the
tempauth from which it was removed, and add a test to validate creating the
filter will add the middleware to global info dict.

Change-Id: I3761da3241601c93245796beb5d29bf3f36d69f6"
MahatiC,2015-02-06 16:03:59,https://api.github.com/repos/openstack/swift/git/commits/a248a5c09e8fd1c110004c1e2de29ae1936e5227,a248a5c09e8fd1c110004c1e2de29ae1936e5227,"Ring checker in swift-recon

This patch validates the server end points on the ring. And also generates
a report on issues found.

Change-Id: I913799a35d5c9178164021cfb7fcb448141b058b"
zaitcev,2015-02-25 00:47:07,https://api.github.com/repos/openstack/swift/git/commits/268e31647d91345423e49c52e3586991d365535b,268e31647d91345423e49c52e3586991d365535b,"Clean up a couple of deprecated uses of e.message

Using the style from existing statements elsewhere in the file.

Change-Id: I3270d0c69e7446bbfd5bbc784c4e6911a5600478"
smerritt,2015-02-24 18:12:16,https://api.github.com/repos/openstack/swift/git/commits/d62df398db0d0bf982ea85386bb52cd089d47ef0,d62df398db0d0bf982ea85386bb52cd089d47ef0,"Clean up a couple deprecation warnings

Change-Id: Ic293402702981cea124d0dc57e95341fda7eaf99"
dpgoetz,2015-02-24 17:31:38,https://api.github.com/repos/openstack/swift/git/commits/512b6ca4df910bbd25ca9f809cdbbb4ec9917f11,512b6ca4df910bbd25ca9f809cdbbb4ec9917f11,"swift-ring-builder remove doesn't print message (tabbing error)

Change-Id: Iaf4f6168a52e5c67dca5ebdcf9421848cf30dee8"
bloodeagle40234,2015-02-23 08:26:30,https://api.github.com/repos/openstack/swift/git/commits/16b435a4a8ae12f456a55872fd8ebe21b0841704,16b435a4a8ae12f456a55872fd8ebe21b0841704,"Fix ContainerBroker to use policy-0 in default

Fix ContainerBroker to initialize as policy-0 on policy_stat
table in default when storage_policy_index argument is NOT given.

Current ContainerBroker makes policy-1 stats in default because
the ""None"" value will be passed through to the last function of
db access query (i.e. a query like as ""INSERT INTO policy_stat
(storage_policy_index) VALUES (None)"" will appear) which results
in a row ""(1, 0, 0)"" (the first value is the policy index) by
the PRIMARY KEY constraint on sqlite.

In worst case, container db keeps two policies, and then, ContainerBroker.get_info
might return invalid (non-touched) policy_stat information as container information.
(See tests in detail)

When using ContainerBroker with no storage_policy_index argument,
it should always act policy-0 simply.

Note that this patch doesn't affect immediately Swift behavior because
current swift ensures to use policy-0 on ""Container-Server"" when invalid
policy (includes None) is given. However, we should recheck also in
ContainerBroker for safety to prevent the unfortunate behavior above.

Change-Id: If64f0c94c069a2cc3140c99f21b8d371c183e28a"
smerritt,2015-02-20 19:04:24,https://api.github.com/repos/openstack/swift/git/commits/db29ffc98384a9f61c2d4cc48bb2faf9f5dd0478,db29ffc98384a9f61c2d4cc48bb2faf9f5dd0478,"Make proxy_logging close the WSGI iterator

PEP 333 says that the WSGI framework will call .close() on the
iterator returned by a WSGI application once it's done, provided such
a method exists. So, if our code wraps an iterator, then we have to
call .close() on it once we're done with it. proxy_logging wasn't.

Since WSGIContext gets it right, I looked at making proxy_logging use
WSGIContext. However, WSGIContext is all about forcing the first chunk
out of the iterator so that it can capture the final HTTP status and
headers; it doesn't help if you want to look at every chunk.
proxy_logging wants every chunk so it can count the bytes sent.

This didn't hurt anything in Swift, but pconstantine was complaining
in IRC that our failure to call .close() was goofing up some other
middleware he had.

Change-Id: Ic6ea0795ccef6cda2b5c6737697ef7d58eac9ab4"
bloodeagle40234,2015-02-13 00:18:54,https://api.github.com/repos/openstack/swift/git/commits/f578a35100f5dcd0046c79e810441633d28f55ff,f578a35100f5dcd0046c79e810441633d28f55ff,"Fix efficient replication handoff delete

Current code might delete local handoff objects incorrectly
when remote node requires whole of the objects at poking
because empty cand_objs won't be applied to the delete candidate
objects list.

This patch ensures the delete candidate objects list always
will be updated (i.e. it will be empty list when the poke job
find whole local objects are required by remote), and then,
handle deleting objects correctly according to the delete
candidate.

This patch includes a test written by Clay Gerrard at [1].

Co-Authored-By: Clay Gerrard <clay.gerrard@gmail.com>

1: https://review.openstack.org/#/c/155542/

Change-Id: Ie8f75ed65c7bfefbb18ddccd9fe0e41b72dca0a4"
notmyname,2015-02-16 22:00:24,https://api.github.com/repos/openstack/swift/git/commits/949804eda4a85c3c960b0baa090e16f1aa48e95e,949804eda4a85c3c960b0baa090e16f1aa48e95e,"update the getting started doc

Change-Id: I0a96bcf692bb240f3ab5aab7fefd294a07735a83"
notmyname,2015-02-16 01:14:31,https://api.github.com/repos/openstack/swift/git/commits/7acc2911296f48f10165282eee6bfe8e5c817a69,7acc2911296f48f10165282eee6bfe8e5c817a69,"added swift_source to ratelimit info calls

Change-Id: I2b4ccb809c0f4505098e261f546f53c27440dd43"
klrmn,2015-02-14 00:55:45,https://api.github.com/repos/openstack/swift/git/commits/ca0fce8542645b9f7b934817eb4cab7835ec0d3c,ca0fce8542645b9f7b934817eb4cab7835ec0d3c,"more probe test refactoring

* move get_to_final_state into ProbeTest
* get rid of kill_servers
* add replicators manager and updaters manager to ProbeTest

(this is all going someplace, i promise)

Change-Id: I8393a2ebc0d04051cae48cc3c49580f70818dbf2"
clayg,2015-02-13 21:11:40,https://api.github.com/repos/openstack/swift/git/commits/2655465d82b8b0acb29babf5d7520808860702cc,2655465d82b8b0acb29babf5d7520808860702cc,"Promote some of the best developers I know to CORE Emeritus

Change-Id: I4095bdbb2c137615bf9492e373a837daadea8920"
clayg,2015-02-13 00:15:42,https://api.github.com/repos/openstack/swift/git/commits/596042b9c778114dcfab1670e1ca40aa3a8c71ee,596042b9c778114dcfab1670e1ca40aa3a8c71ee,"Minor cleanup post efficent multi-region replication

One log line had a typo, and I refactored the per object cleanup code out of
update_deleted into the per object hashdir cleanup method.

Change-Id: I19d03d0706a75bd8ec2fe327a1eb1b5ec36de6d2"
klrmn,2015-02-13 04:32:35,https://api.github.com/repos/openstack/swift/git/commits/a4ffd1d1c6f8027d408c73076113ddafdc79ebc0,a4ffd1d1c6f8027d408c73076113ddafdc79ebc0,"move test comments around

should make later refactoring easier

Change-Id: I7af399a14c8bc78fcfc438e4440d2f023c8aa5db"
smerritt,2015-02-12 17:59:48,https://api.github.com/repos/openstack/swift/git/commits/a9b5982d525d6b1ed369e780835b5b26a250ad95,a9b5982d525d6b1ed369e780835b5b26a250ad95,"Fix account-reaper

As part of commit efb39a5, the account reaper grew a bind_port
attribute, but it wasn't being converted to int, so naturally ""6002""
!= 6002, and it wouldn't reap anything.

The bind_port was only used for determining the local devices. Rather
than fix the code to call int(), this commit removes the need for
bind_port entirely by skipping the port check. If your rings have IPs,
this is the same behavior as pre-efb39a5, and if your rings have
hostnames, this still works.

Change-Id: I7bd18e9952f7b9e0d7ce2dce230ee54c5e23709a"
klrmn,2015-02-12 19:30:21,https://api.github.com/repos/openstack/swift/git/commits/2c1b5af06218fa936c8c9fb0180f22db212bf18a,2c1b5af06218fa936c8c9fb0180f22db212bf18a,"refactor probe tests

* refactor probe tests to use probe.common.ProbeTest
* move reset_environment functionality to ProbeTest.setUp()
* choose rings and policies that meet the criteria - raise SkipTest if
nothing matches
* replace all AssertionErrors in setup with SkipTest

Change-Id: Id56c497d58083f5fd55f5283cdd346840df039d3"
clayg,2015-02-12 00:36:51,https://api.github.com/repos/openstack/swift/git/commits/ca90be414e0e50fd83c09550c5e999bc93c5c35c,ca90be414e0e50fd83c09550c5e999bc93c5c35c,"Add developer tools section to associated projects

vagrant-swift-all-in-one is being used and maintained by a number of swift
developers, it has an open source license.

The ansible playbook project serves a similar goal but it's based on a Fedora
distribution and includes Swift-on-File support.

Drive-by fix for the Swift-on-File link which has migrated to stackforge.

Change-Id: Id7478d58adcead57cf56ac4e1d05c6556c8c9b7b"
morrisson,2015-02-11 20:12:56,https://api.github.com/repos/openstack/swift/git/commits/f5d509471b36dfe1a008523a3a8e1ec4e5518f02,f5d509471b36dfe1a008523a3a8e1ec4e5518f02,"Logging a policy index when container PUT request conflicts

This is a continuing work of patch afdbf73. This patch enables
proxy-server to log a policy index when container PUT request
conflicts with existing container's policy index.

Change-Id: I6d40044c510632a0f61b817a9af2f6c13a721d39
Implements: blueprint logging-policy-number"
dpgoetz,2015-02-11 19:37:31,https://api.github.com/repos/openstack/swift/git/commits/69797efcbba2076eae944754e0a8585122374544,69797efcbba2076eae944754e0a8585122374544,"small bug with account to account copy

Change-Id: I7fdf432666f7640082e9839b9dc3d7af94a0715f"
bloodeagle40234,2014-05-29 07:54:07,https://api.github.com/repos/openstack/swift/git/commits/20ca279d747523f5cb942567515f85d03779eb8a,20ca279d747523f5cb942567515f85d03779eb8a,"Efficient Replication for Distributed Regions

This change provides a efficient way of replication
between regions of a global distributed cluster.

This approach makes object-replicator to push replicas
to a primary node in a remote region, then, to skip
pushing them to next primary node in the region with
expecting asynchronous replication.

This implementation includes a couple of changes on
ssync_sender to allow object-replicator to delete local
handoff objects correctly. One is to return a list of existing
objects in remote region. The list includes local paths of the
objects which exist both on the local device and the remote device.
The other is supporting existence check for specified objects.
It requires the object list build by the first change. When
the object list is given, ssync_sender does only missing_check
based on the list. These changes are needed because current
swift can not handle the existence check in object-level.

Note that this feature will work partially (i.e. only when
primary-to-primary) with rsync.

Implements: blueprint efficient-replication
Change-Id: I5d990444d7977f4127bb37f9256212c893438df1"
notmyname,2015-02-05 19:01:02,https://api.github.com/repos/openstack/swift/git/commits/b45b83fb00917b729253804443094d97d39ef78f,b45b83fb00917b729253804443094d97d39ef78f,"Correct the config default for delay_auth_decision

Updated proxy-server.conf-sample with the correct default. Also
updated the note on the overview-auth doc page.

Change-Id: I5cd62a7a118a28f7b58f47b8d8d4d963f6bc7347"
MahatiC,2015-01-30 20:10:22,https://api.github.com/repos/openstack/swift/git/commits/74563ece4782d16bf5a66db63d7c0c718a69db38,74563ece4782d16bf5a66db63d7c0c718a69db38,"Tests for the base class of storage nodes

Change-Id: I8866e2360e30a239d5f6b4a5ed92344291184c2a"
NicolasT,2015-02-04 15:54:46,https://api.github.com/repos/openstack/swift/git/commits/b5f8c594f98ec943b73633f7418695880b315b6c,b5f8c594f98ec943b73633f7418695880b315b6c,"Add `swift-scality-backend` to associated projects

Change-Id: I7fd56c7cf5b7634224b8a2876258cf1f6be447f1"
notmyname,2015-02-04 06:12:03,https://api.github.com/repos/openstack/swift/git/commits/2eba998a7ccde6a490d927f2489838e2954f712d,2eba998a7ccde6a490d927f2489838e2954f712d,"added swift-ui browser to associated projects

Change-Id: I23abd014b21d1a968fe7352f3915f02e3d4d47cf"
kajinamit,2015-01-23 11:16:20,https://api.github.com/repos/openstack/swift/git/commits/a270dca23989b5cf7b59cf1d0e285bc736717a44,a270dca23989b5cf7b59cf1d0e285bc736717a44,"Prevent redundant commenting by drive-audit

The drive-audit detects error log about a device and comments out it
in /etc/fstab. When the error log is generated several times, it
comments out the line for each time.
This patch makes drive-audit to check if the device is already
commented out, and prevents redundant commenting out.

Change-Id: Ia542d35b58552dde0f324bb9c42531f98c9058fa"
osanai-hisashi,2014-12-08 19:44:52,https://api.github.com/repos/openstack/swift/git/commits/efb39a5665f9c9f2649aac257d0f617479dea4ce,efb39a5665f9c9f2649aac257d0f617479dea4ce,"Allow hostnames for nodes in Rings

This change modifies the swift-ring-builder and introduces new format
of sub-commands (search, list_parts, set_weight, set_info and remove)
in addition to add sub-command so that hostnames can be used in place
of an ip-address for the sub-commands.
The account reaper, container synchronizer, and replicators were also
updated so that they still have a way to identify a particular device
as being ""local"".

Previously this was Change-Id:
Ie471902413002872fc6755bacd36af3b9c613b74

Change-Id: Ieff583ffb932133e3820744a3f8f9f491686b08d
Co-Authored-By: Alex Pecoraro <alex.pecoraro@emc.com>
Implements: blueprint allow-hostnames-for-nodes-in-rings"
sarvesh-ranjan,2015-01-30 02:20:19,https://api.github.com/repos/openstack/swift/git/commits/d8fdbc2b2d755c0774b3a15538d40c83daf61b18,d8fdbc2b2d755c0774b3a15538d40c83daf61b18,"Typos fixed

Change-Id: I2c216a870ce299039dec9948dcdef3de0721b4da"
MahatiC,2015-01-28 16:59:22,https://api.github.com/repos/openstack/swift/git/commits/c8f02a88740183d449376fc2d8a1befb7aa7a5a7,c8f02a88740183d449376fc2d8a1befb7aa7a5a7,"Add server type in OPTIONS response

Change-Id: I731872eaf2c878476525aa05fd60b9121be43e29"
BobBall,2015-01-28 16:07:58,https://api.github.com/repos/openstack/swift/git/commits/cec00660cbcb11086acd1906bcb0a206a846509c,cec00660cbcb11086acd1906bcb0a206a846509c,"Remove deprecated config variables

I1f8f5064ea8028af60f167df9b97e215cdadba44 deprecated auth_host etc but the default
config still used them.  Ieac26806bd420aa08fc79bbc6a11eb6a1c15c7df then switched
devstack to using the new variables, but if the old variables still existed in the
default config, some installations were broken (e.g. XenServer CI)

Partial-bug: 1415795

Change-Id: I7076fa03ab531cbb1114918f75113620b65590dc"
morrisson,2014-12-12 01:37:33,https://api.github.com/repos/openstack/swift/git/commits/8607833fddba074823de58f4f4bd2707bf90fc9c,8607833fddba074823de58f4f4bd2707bf90fc9c,"Output account-reaper's logs for PolicyError

By some operational mistakes, policy settings can be inconsistent among
servers of swift cluster. Before this patch, if a policy setting of the
server where account-reaper daemon is running is different from other
servers, reap_object process failed without outputing error logs and
count up remaining objects.

Change-Id: Ic84fef7b49c77f0197f0bec4d41401686114d50e
Related-Bug: 1375384"
zaitcev,2015-01-28 19:21:25,https://api.github.com/repos/openstack/swift/git/commits/562f7e8906140ece51187854ed535a3ef0798a00,562f7e8906140ece51187854ed535a3ef0798a00,"Allow set_overload to take value as percent

...and output overload as a percent like dispersion and balance.

Also raise a warning if someone tries to set overload higher than 100%
(unless the specifically requested a percent value great than 100).

Change-Id: Id030123153ea746671a8f1ca306d4b86e903fa22"
notmyname,2015-01-28 04:50:33,https://api.github.com/repos/openstack/swift/git/commits/402a62eb5c3eafdfae8651f674f788ad21ce632e,402a62eb5c3eafdfae8651f674f788ad21ce632e,"2.2.2 changelog and authors update

Change-Id: I8c18cfc2cd03242cf3c662494999f255cb7831c6"
tolbkni,2015-01-28 14:12:57,https://api.github.com/repos/openstack/swift/git/commits/77e926791665991aeb87ba1fef5d9e6ae6aff14e,77e926791665991aeb87ba1fef5d9e6ae6aff14e,"Fix typing mistake for doc

Change-Id: If3d4e4d44676ef987f584db8cb462ecaed03a019"
zaitcev,2015-01-27 20:23:08,https://api.github.com/repos/openstack/swift/git/commits/9b8dd0651d669ddd2922b6e8a4908a2f9e4b2663,9b8dd0651d669ddd2922b6e8a4908a2f9e4b2663,"Don't set the already set Connection: close

Meaningless cleanup of the day. In my defence, I hope the next guy
doesn't have to grep throughout (the test is adjusted to signify).

Change-Id: I9e10dd977d4ca48db1393519068ce0e286705433"
clayg,2015-01-27 18:19:41,https://api.github.com/repos/openstack/swift/git/commits/376dc5adc381f769091f29c75d9b26493383bac6,376dc5adc381f769091f29c75d9b26493383bac6,"don't print cached dispersion if it's a lie

Change-Id: I551fcaf274876861feb12848749590f220842d68"
morrisson,2014-11-27 09:42:49,https://api.github.com/repos/openstack/swift/git/commits/afdbf73f1285319003fecb0415a691dd9c9e9c98,afdbf73f1285319003fecb0415a691dd9c9e9c98,"Output logs of policy index

To make it easier for Swift operators to specify problematic devices,
a policy index will be recorded in log files of proxy and storage servers
for each user request which is related to storage policy.

This patch simply adds 'storage_policy_index' field in a log format.
If there is no specified policy index, '-' is output in this field.

Extra fix: Doc about the log line of storage nodes now properly reflects
           'server_pid' field.

DocImpact

Change-Id: I7286ae85bcbcec73b5377dc115cbdb0f57d1b025
Implements: blueprint logging-policy-number"
smerritt,2015-01-22 23:26:19,https://api.github.com/repos/openstack/swift/git/commits/3ac43e8299239657b37a3c52ef495d658b224a2e,3ac43e8299239657b37a3c52ef495d658b224a2e,"Allow per-policy overrides in object replicator.

The replicator already supports --devices and --partitions to restrict
its operation to a subset of devices and partitions. However,
operators don't always want to replicate a partition in all policies
since different policies (usually) have different rings.

For example, if I know that policy 0's partition 1234 is has no
replicas on primary nodes due to over-aggressive rebalancing, I really
want to find a node where the partition isa and make the replicator
push it onto the primaries. However, if I haven't been messing with
policy 1's ring, its partition 1234 is fine. With the existing
replicator args, I get both or neither; this commit lets me get just
the useful one.

Change-Id: Ib1d58fdd228a6ee7865321e65d7c04a891fa5c49"
smerritt,2015-01-08 00:50:58,https://api.github.com/repos/openstack/swift/git/commits/f58f397cf6c2a33db21cabeab6c54163e503cde3,f58f397cf6c2a33db21cabeab6c54163e503cde3,"Make ThreadPools deallocatable.

Currently, a ThreadPool acquires resources that last until process
exit. You can let the ThreadPool go out of scope, but that doesn't
terminate the worker threads or close file descriptors or anything.

This commit makes it so you can .terminate() a ThreadPool object and
get its resources back. Also, after you call .terminate(), trying to
use the ThreadPool raises an exception so you know you've goofed.

I have some internal code that could really use this, plus it makes
the unit test run not leak resources, which is nice.

Change-Id: Ibf7c6dc14c14f379421a79afb6c90a5e64b235fa"
smerritt,2015-01-22 19:54:43,https://api.github.com/repos/openstack/swift/git/commits/e5ca7e26a3beecaf149e7925658ae5f086b568c9,e5ca7e26a3beecaf149e7925658ae5f086b568c9,"Optimize replication of targeted devices/partitions.

swift-object-replicator lets you specify --devices and --partitions to
perform a single replication pass over just those devices and
partitions. However, it still scans every device and every partition
to build up a list of jobs to do, then throws away the jobs for the
wrong devices and partitions. This isn't too bad with partitions since
it only wastes some CPU, but with devices, it results in unnecessary
disk IO.

This commit pushes the device and partition filtering a little further
down into collect_jobs to avoid wasted work.

Change-Id: Ia711bfc5a86ed4a080d27e08fe923cb4cb92da43"
MahatiC,2014-12-08 17:58:48,https://api.github.com/repos/openstack/swift/git/commits/c6fde6de79278cbff7af243ae3bf538b88769fa9,c6fde6de79278cbff7af243ae3bf538b88769fa9,"Implement OPTIONS verb for storage nodes.

Many times new deployers get mysterious errors after first setting up their
Swift clusters. Most of the time, the errors are because the values in the ring
are incorrect (e.g. a bad port number). OPTIONS will be used in a ring checker
(which is WIP) that validates values in the ring.

This patch includes OPTIONS for storage nodes and respective tests.

Change-Id: Ia0033756d070bef11d921180e8d32a1ab2b88acf"
morrisson,2014-11-28 11:19:02,https://api.github.com/repos/openstack/swift/git/commits/f8fa1a9234cd0c1d7466dd51d8528e2abd859c2b,f8fa1a9234cd0c1d7466dd51d8528e2abd859c2b,"Show each policy's information on quarantined files in recon

After the release of Swift ver. 2.0.0, some recon responses do not
show each policy's information yet. To make things worse, some recon
results only count on policy-0's score, therefore the total is not
shown in the recon results.

This patch makes the count of quarantined files policy-aware for recon
requests. Suppose a number of quarantined objects for policy-0 is 2
and a number for policy-1 is 3, recon sums up every policy's amount
and shows information for each policy as follows.

$ curl http://<host>:<port>/recon/quarantined
{""accounts"": 0, ""containers"": 0, ""objects"": 5, ""policies"": {""0"":
{""objects"": 2}, ""1"": {""objects"": 3}}}

Moreover, this patch adds stats for each policy in CLI output.

Change-Id: I07217c635f6fc4ea809ddbc3d859c4e81c4fde37
Related-Bug: 1375327
Related-Bug: 1375332"
clayg,2015-01-16 03:34:22,https://api.github.com/repos/openstack/swift/git/commits/0bb690dca8f0f93bdccb6316d70c1c94a46c1b29,0bb690dca8f0f93bdccb6316d70c1c94a46c1b29,"Exclude empty tiers from max_replicas

If you have ring with less failure domains at a tier than replicas the
max_replicas count for the failure domains at that tier already expect to have
a max_replicas > 1.  For example, on a two node deployment, each of the two
failure domains at the server tier is expected to have no more than *two*
replicas of any part (surely it would be a problem if either server had all
three replicas, but we expect some doubling).  If you have a third server, the
max_replicas drops from 2 to 1 at each of those failure domains as they should
only have at most a single copy of any partition or there's a dispersion
problem.

But if that third server is being decommissioned and all of it's device's
weight are set to zero then you don't really have three failure domains at
that tier and the max_replicas should be go back to 2 not 1.  Also any parts
stuck in the tier with weight zero probably shouldn't be there - so you've got
some kind of problem if there's *any* replicas in a zero weight tier
*regardless* of the number of failure domains.

I came to this when I was playing around with a topology migration that was
moving a zone.  You start with two zones and everything is dispersed, you add
a third zone and everything gets even *more* dispersed, then you remove one of
the first zones that you're migrating off of and suddenly there's a problem
because the two zones you're migrating to have > 1 replica of some parts.  Two
zones was fine before, so what's the problem?

Turns out the problem was a failure domain with zero weight still drains off a
replica from the max_replicas of the other failure domains at that tier.

Eventually I think it's pretty sane that the operator would remove the zero
weight devices from the ring, and then max_replicas will go back to saying
each of the two failure domains at this tier may have at most 2 replicas.  But
because it's not always obvious when replication is finished just by looking
at partition placement theres a disconnect and window where things seem to be
saying it's worse than it really is.

When a tier has zero weight max_replicas acts like the max_replicas at that
tier should be 0.  We do expect that occasionally a tier with zero weight will
have replicas assigned to it because min_part_hours - but I think thats also
bad and worth flagging as a dispersion problem - although maybe it's
conflating of seperate issues.

Someone else might have a counter example where this would not be the desired
behavior, and I'm not 100% sure it's going to always say the right thing in
every use case - but as it's done currently I've got at least one concrete
example where I think the current behavior doesn't make sense.

Change-Id: I68d47ff0667788442342d55b8041aed80d0b2161"
bloodeagle40234,2015-01-13 13:34:37,https://api.github.com/repos/openstack/swift/git/commits/6f21504ccc9046e3f0b4db88f78297a00030dd3d,6f21504ccc9046e3f0b4db88f78297a00030dd3d,"Fix missing content length of Response

This patch fixes swob.Response to set missing content
length correctly.

When a child class of swob.Response is initialized with
both ""body"" and ""headers"" arguments which includes content
length, swob.Response might loose the acutual content length
generated from the body because ""headers"" will overwrite the
content length property after the body assignment.

It'll cause the difference between headers's content length
and acutual body length. This would affect mainly 3rd party
middleware(s) to make an original response as follows:

req = swob.Request.blank('/')
req.method = 'HEAD'
resp = req.get_response(app)
return HTTPOk(body='Ok', headers=resp.headers)

This patch changes the order of headers updating and then
fixes init() to set correct content length.

Change-Id: Icd8b7cbfe6bbe2c7965175969af299a5eb7a74ef"
prashanthpai,2015-01-12 07:21:46,https://api.github.com/repos/openstack/swift/git/commits/a0977ab8ca77a6ff899baa669134b242f328470a,a0977ab8ca77a6ff899baa669134b242f328470a,"dlo: Update doc about manifest containing data

Current behavior:
* If data/body is present in manifest file PUT request, the data/body gets
  saved onto disk, just like for a normal object.
* Generally, this data in manifest file is never served on a GET response.
  However, when the manifest object path itself is part of prefix, GET
  response would contain data present in manifest file as well.
* The query param multipart-manifest=get meant to retrieve SLO manifest
  also works in case of DLO manifest. Hence a COPY request with the
  multipart-manifest=get query param would actually copy DLO manifest.

How things should have been:
* The DLO manifest object is supposed to have no content and only have
  X-Object-Manifest metadata header.
* Query param multipart-manifest=get is SLO specific and shouldn't have
  any role in DLO.

This change intends to only document current behaviour and not change it,
assuming there are users who have previously saved some content in DLO
manifest file and/or have been using multipart-manifest=get to fetch
and/or COPY the DLO manifest file with it's content.

Change-Id: I0f6e175ad7752169ecf94df949336e0665928df7
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
clayg,2015-01-09 04:29:47,https://api.github.com/repos/openstack/swift/git/commits/20123399825c4ccacb78ebde56645856a6895a2f,20123399825c4ccacb78ebde56645856a6895a2f,"Make more memcache options configurable

More memcache options can be set in the memcache.conf or proxy-server.conf

 * connect_timeout
 * pool_timeout
 * tries
 * io_timeout

Options set in proxy-server.conf are considered more specific to the memcache
middleware.

DocImpact

Change-Id: I194d0f4d88c6cb8c797a37dcab48f2d8473e7a4e"
smerritt,2015-01-12 18:02:52,https://api.github.com/repos/openstack/swift/git/commits/4ce4f98255989ad94cba126fc08a5bc2072a7c66,4ce4f98255989ad94cba126fc08a5bc2072a7c66,"Drop redundant check in SLO segment-size validation

Change-Id: Idf459f37cd18c46421c2e7a1a0506e8f28da13b4"
zaitcev,2015-01-11 00:14:46,https://api.github.com/repos/openstack/swift/git/commits/b5586427e503ee22c0b20b109cad83e166ed3fd8,b5586427e503ee22c0b20b109cad83e166ed3fd8,"Drop redundant index output

The output of format_device() now includes index as the first ""dX""
element, for example d1r1z2-127.0.0.1:6200R127.0.0.1:6200/db_"""".

Change-Id: Ib5f8e3a692fddbe8b1f4994787b2883130e9536f"
zaitcev,2015-01-10 15:20:25,https://api.github.com/repos/openstack/swift/git/commits/c65bc49e099928801b80dce399d6098f7e10e137,c65bc49e099928801b80dce399d6098f7e10e137,"Mark the --region as mandatory

We used to permit to omit region in the old parameter syntax, although
we now throw a warning if it's missing. In the new parameter syntax,
--region is mandatory. It's enforced by build_dev_from_opts in
swift/common/ring/utils.py.

On the other hand, --replication-ip, --replication-port, and --meta
are not obligatory.

Change-Id: Ia70228f2c99595501271765286431f68e82e800b"
dpgoetz,2014-10-03 19:11:06,https://api.github.com/repos/openstack/swift/git/commits/172a9b369f8e19d1dd6526a10787e79e4309e74e,172a9b369f8e19d1dd6526a10787e79e4309e74e,"Change black/white-listing to use sysmeta.

The way we do this now involves a conf change and a proxy
reload which is a pain. You can now just set these:

X-Account-Sysmeta-Global-Write-Ratelimit: WHITELIST

or

X-Account-Sysmeta-Global-Write-Ratelimit: BLACKLIST

NOTE:
The existing proxy config settings: account_whitelist
and account_blacklist will continue to work.

Change-Id: I532663f1d2c75d03170c5fdb9b330416822fbc88"
clayg,2014-12-30 08:22:44,https://api.github.com/repos/openstack/swift/git/commits/a8bd2f737cd053db5cd9fb0926344acc1f68e2ce,a8bd2f737cd053db5cd9fb0926344acc1f68e2ce,"Add dispersion command to swift-ring-builder

Output a dispersion report that shows how many parts have each replica count
at each tier along with some additional context.  Also the max_dispersion is a
good canary for what a reasonable overload might be.

Also display a warning on rebalance if the ring's dispersion is sub-optimal.

The primitive form of the dispersion graph is cached on the builder, but the
dispersion command will build it on the fly if you have a ring that was last
rebalanced before the change.

Also add --force option to rebalance to make it write a ring even if less than
1% of parts moved.

Try to clarify some dispersion and balance a little bit in the ring section of
the architectural overview.

Co-Authored-By: Christian Schwede <christian.schwede@enovance.com>
Co-Authored-By: Darrell Bishop <darrell@swiftstack.com>

Change-Id: I7696df25d092fac56588080722e0a4167ed2c824"
clayg,2015-01-09 02:22:40,https://api.github.com/repos/openstack/swift/git/commits/92fd28aa6afdb97a23027a2f02631eaf693a41b4,92fd28aa6afdb97a23027a2f02631eaf693a41b4,"Fix a few edges where we lost python 2.6 support

a.k.a. put my head in the sand about the reality of not supporting python 2.6
a little while longer.  We need to get something in the next release notes
about deprecating support for python 2.6 ASAP.  I don't really care enough
about it to keep cleaning up the junk we're going to let slip through not
testing python 2.6 in the gate.

Change-Id: Ib36cd66bda29d75d3b5f4ef0a0ef7b824923df28"
clayg,2014-06-26 03:36:33,https://api.github.com/repos/openstack/swift/git/commits/3782bf1b562dbd61d933fd9031bcb56a6e674fb5,3782bf1b562dbd61d933fd9031bcb56a6e674fb5,"Remove the X-Newest pre-flight request on X-Timestamp

There is a standard LBYL race that can better be addressed by making the
EAFP case safer.

Capture 409 Conflict during expect on PUT

Similarly to how the proxy handles 412 on PUT, we will gather 409
responses in the proxy during _connect_put_node.  Rather than skipping
backend servers that already have a synced copy of an object we will
accept their response and return 202 immediately.

This is particularly useful to internal clients who are using
X-Timestamp to sync transfers (e.g. container-sync and
container-reconciler).

No observable change in client facing behavior except that swift is
faster to respond Accepted when it already has the data the client is
purposing to send.

Change-Id: Ie400d5bfd9ab28b290abce2e790889d78726095f"
clayg,2014-12-11 09:59:52,https://api.github.com/repos/openstack/swift/git/commits/404ac092d19ef80a5f4d96e9cd36a5bd69499a1f,404ac092d19ef80a5f4d96e9cd36a5bd69499a1f,"Fix large out of sync out of date containers

As I understand it db replication starts with a preflight sync request
to the remote container server who's response will include the last
synced row_id that it has on file for the sending nodes database id.

If the difference in the last sync point returned is more than 50% of
the local sending db's rows, it'll fall back to sending the whole db
over rsync and let the remote end merge items locally - but generally
there's just a few rows missing and they're shipped over the wire as
json and stuffed into some rather normal looking merge_items calls.

The one thing that's a bit different with these remote merge_items calls
(compared to your average run of the mill eat a bunch of entries out of
a .pending file) is the is source kwarg.  When this optional kwarg comes
into merge_items it's the remote sending db's uuid, and after we eat all
the rows it sent us we update our local incoming_sync table for that
uuid so that next time when it makes it's pre-flight sync request we can
tell it where it left off.

Now normally the sending db is going to push out it's rows up from the
returned sync_point in 1000 item diffs, up to 10 batches total (per_diff
and max_diffs options) - 10K rows.  If that goes well then everything is
in sync up to at least the point it started, and the sending db will
*also* ship over *it's* incoming_sync rows to merge_syncs on the remote
end.  Since the sending db is in sync with these other db's up to those
points so is the remote db now by way of the transitive property.  Also
note through some weird artifact that I'm not entirely convinced isn't
an unrelated and possibly benign bug the incoming_sync table on the
sending db will often also happen to include it's own uuid - maybe it
got pushed back to it from another node?

Anyway, that seemed to work well enough until a sending db got diff
capped (i.e. sent it's 10K rows and wasn't finished), when this happened
the final merge_syncs call never gets sent because the remote end is
definitely *not* up to date with the other databases that the sending db
is - it's not even up-to-date with the sending db yet!  But the hope is
certainly that on the next pass it'll be able to finish sending the
remaining items.  But since the remote end is who decides what the last
successfully synced row with this local sending db was - it's super
important that the incoming_sync table is getting updated in merge_items
when that source kwarg is there.

I observed this simple and straight forward process wasn't working well
in one case - which is weird considering it didn't have much in the way
of tests.  After I had the test and started looking into it seemed maybe
the source kwarg handling got over-indented a bit in the bulk insert
merge_items refactor.  I think this is correct - maybe we could send
someone up to the mountain temple to seek out gholt?

Change-Id: I4137388a97925814748ecc36b3ab5f1ac3309659"
smerritt,2014-12-17 21:48:42,https://api.github.com/repos/openstack/swift/git/commits/bcf26f52096e444fd03cbab26e016b3306b354df,bcf26f52096e444fd03cbab26e016b3306b354df,"Add notion of overload to swift-ring-builder

The ring builder's placement algorithm has two goals: first, to ensure
that each partition has its replicas as far apart as possible, and
second, to ensure that partitions are fairly distributed according to
device weight. In many cases, it succeeds in both, but sometimes those
goals conflict. When that happens, operators may want to relax the
rules a little bit in order to reach a compromise solution.

Imagine a cluster of 3 nodes (A, B, C), each with 20 identical disks,
and using 3 replicas. The ring builder will place 1 replica of each
partition on each node, as you'd expect.

Now imagine that one disk fails in node C and is removed from the
ring. The operator would probably be okay with remaining at 1 replica
per node (unless their disks are really close to full), but to
accomplish that, they have to multiply the weights of the other disks
in node C by 20/19 to make C's total weight stay the same. Otherwise,
the ring builder will move partitions around such that some partitions
have replicas only on nodes A and B.

If 14 more disks failed in node C, the operator would probably be okay
with some data not living on C, as a 4x increase in storage
requirements is likely to fill disks.

This commit introduces the notion of ""overload"": how much extra
partition space can be placed on each disk *over* what the weight
dictates.

For example, an overload of 0.1 means that a device can take up to 10%
more partitions than its weight would imply in order to make the
replica dispersion better.

Overload only has an effect when replica-dispersion and device weights
come into conflict.

The overload is a single floating-point value for the builder
file. Existing builders get an overload of 0.0, so there will be no
behavior change on existing rings.

In the example above, imagine the operator sets an overload of 0.112
on his rings. If node C loses a drive, each other drive can take on up
to 11.2% more data. Splitting the dead drive's partitions among the
remaining 19 results in a 5.26% increase, so everything that was on
node C stays on node C. If another disk dies, then we're up to an
11.1% increase, and so everything still stays on node C. If a third
disk dies, then we've reached the limits of the overload, so some
partitions will begin to reside solely on nodes A and B.

DocImpact

Change-Id: I3593a1defcd63b6ed8eae9c1c66b9d3428b33864"
smerritt,2014-12-10 23:59:21,https://api.github.com/repos/openstack/swift/git/commits/1880351f1a862ae434ab23701535628f6f9258e1,1880351f1a862ae434ab23701535628f6f9258e1,"Only move too-close-together replicas when they can spread out.

Imagine a 3-zone ring, and consider a partition in that ring with
replicas placed as follows:

* replica 0 is on device A (zone 2)
* replica 1 is on device B (zone 1)
* replica 2 is on device C (zone 2)

Further, imagine that there are zero parts_wanted in all of zone 3;
that is, zone 3 is completely full. However, zones 1 and 2 each have
at least one parts_wanted on at least one device.

When the ring builder goes to gather replicas to move, it gathers
replica 0 because there are three zones available, but the replicas
are only in two of them. Then, it places replica 0 in zone 1 or 2
somewhere because those are the only zones with parts_wanted. Notice
that this does *not* do anything to spread the partition out better.

Then, on the next rebalance, replica 0 gets picked up and moved
(again) but doesn't improve its placement (again).

If your builder has min_part_hours > 0 (and it should), then replicas
1 and 2 cannot move at all. A coworker observed the bug because a
customer had such a partition, and its replica 2 was on a zero-weight
device. He thought it odd that a zero-weight device should still have
one partition on it despite the ring having been rebalanced dozens of
times.

Even if you don't have zero-weight devices, having a bunch of
partitions trade places on each rebalance isn't particularly good.

Note that this only happens with an unbalanceable ring; if the ring
*can* balance, the gathered partitions will swap places, but they will
get spread across more zones, so they won't get gathered up again on
the next rebalance.

Change-Id: I8f44f032caac25c44778a497dedf23f5cb61b6bb
Closes-Bug: 1400083"
bloodeagle40234,2015-01-06 09:31:19,https://api.github.com/repos/openstack/swift/git/commits/60504a9d23a8f910d883b448565dbfb798776415,60504a9d23a8f910d883b448565dbfb798776415,"Fix slo constraint according to the error message

This patch allows to create a slo manifest when the manifest
includes only one segment less than min_segment_size.

When putting a manifest for slo with only one segment less than
min_segment_size, it will fail as EntityTooSmall with the message
""Each segment, except the last, must be at least min_segment_size
bytes."" This behavior is different from the message because when
there is only one segment, the segment is absolutely the last
segment.

Change-Id: I8f0203afe55536207a41e1267128f8378f1ba15f"
prashanthpai,2014-12-25 08:56:28,https://api.github.com/repos/openstack/swift/git/commits/42c790d04b85e2d2665da7c13f800d03b263a22f,42c790d04b85e2d2665da7c13f800d03b263a22f,"Avoid unnecessary unlink() on every successful PUT

If you do a strace on object-server PUT operation, you'd see that
there's an unlink() sys call which _always_ fails with ENOENT.

mkstemp() creates a temp file which is renamed later to it's final
object path in filesystem. Hence, on a successful object PUT, the
tempfile would never exist in its original location after rename.

Change-Id: I805c7c200107e2d56278f0fb35692a51cb1edc0b
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
osanai-hisashi,2014-11-25 20:25:01,https://api.github.com/repos/openstack/swift/git/commits/5ca49ca92485b6ba868544f12fa524d9d7b666c6,5ca49ca92485b6ba868544f12fa524d9d7b666c6,"Fix the GET's response code when there is a missing segment in LO

This patch changes the response code from Internal Server Error to
Conflict when there is a missing segment and the position is first.

Co-Authored-By: Samuel Merritt <sam@swiftstack.com>
Closes-Bug: #1386568
Change-Id: Iac175b4dc6ac9081436738697a27fe669acce0eb"
NicolasT,2014-12-19 10:31:07,https://api.github.com/repos/openstack/swift/git/commits/bd4054a40c0ada320ad385059a5fe9530c2e67c6,bd4054a40c0ada320ad385059a5fe9530c2e67c6,"Add test coverage for `splice` and `tee` failure scenarios

This patch adds 2 new tests for `swift.obj.diskfile.zero_copy_send`,
injecting a failure scenario when `tee` doesn't copy all bytes in one
go as it's expected to by the code, and one which tests whether the
code correctly trampolines when `splice` returns `EWOULDBLOCK`.

This was suggested by Paul Luse in review 135319 (for 2a0a8ae00f2), and
now covers code paths which were previously untested.

Change-Id: Ife84d772320d6214c93d8044feb613389f71e8da
See: https://review.openstack.org/#/c/135319/4/swift/common/splice.py,cm
See: 2a0a8ae00f2d3b7db255b0905b063e930f824f3d"
NicolasT,2014-12-18 16:09:10,https://api.github.com/repos/openstack/swift/git/commits/bf4c78bc25303264d661ae144a46217e39007219,bf4c78bc25303264d661ae144a46217e39007219,"Add tests for unavailability of `tee` and `splice` in `libc`

As suggested by Paul Luse in review 135319 (for 2a0a8ae00f2), this
brings test coverage of the `swift.common.splice` module up to 100%.

The mechanism used to check whether the functions are looked up on `libc`
is somewhat ugly, but using a `PropertyMock` raising an `AttributeError`
as `side_effect` doesn't work: it results in `mock` creating a `Mock`
instance and returning it.

Change-Id: I14828cfc2ae644dbd9ead8c20613b19cea8607f1
See: https://review.openstack.org/#/c/135319/4/swift/common/splice.py,cm
See: 2a0a8ae00f2d3b7db255b0905b063e930f824f3d"
keshavab,2014-12-11 08:15:38,https://api.github.com/repos/openstack/swift/git/commits/1ffe6b39534655b35b84506ef21da68803bbd11a,1ffe6b39534655b35b84506ef21da68803bbd11a,"Adds console logging to swift-drive-audit

This patch adds console logging ability to swift-drive-audit.
There are cases where logging to console is necessary when drive-audit
is done. This can be consumed for flagging errors in monitoring tools
such as icinga.

DocImpact
Change-Id: Ia1e1effcbd89bd2cf6d5b8c64019f1647c736a3a"
notmyname,2014-12-13 00:19:57,https://api.github.com/repos/openstack/swift/git/commits/c23a66f66d3a9bf64276607cd01ca9ab466077f1,c23a66f66d3a9bf64276607cd01ca9ab466077f1,"AUTHORS and CHANGELOG update for 2.2.1 release

Change-Id: Ib5c1bb632404573a7d8b9e2bfff9c02f47ab7446"
smerritt,2014-12-12 19:56:42,https://api.github.com/repos/openstack/swift/git/commits/f48350865ec1666fd51bf161c339a90aee9ff7cd,f48350865ec1666fd51bf161c339a90aee9ff7cd,"Add tests for metadata on 304 and 412 responses

Commit 1f67eb74 added support for If-[None-]Match on DLOs and SLOs. It
also made the 304 and 412 responses have the Content-Type and
X-Object-Meta-* headers from the object instead of just having the
Etag.

Someone showed up in IRC today looking for this behavior, and was
happy to learn it's in newer Swift versions than the one they were
running. If we've got clients depending on this, we should have some
unit tests to make sure we don't accidentally take it out again.

Change-Id: If06149d13140148463004d426cb7ba4c5601404a"
smerritt,2014-12-08 23:05:29,https://api.github.com/repos/openstack/swift/git/commits/ba8114a513c17656696d3977292f464548f7a093,ba8114a513c17656696d3977292f464548f7a093,"Improve object-replicator startup time.

The object replicator checks each partition directory to ensure it's
really a directory and not a zero-byte file. This was happening in
collect_jobs(), which is the first thing that the object replicator
does.

The effect was that, at startup, the object-replicator process would
list each ""objects"" or ""objects-N"" directory on each object device,
then stat() every single thing in there. On devices with lots of
partitions on them, this makes the replicator take a long time before
it does anything useful.

If you have a cluster with a too-high part_power plus some failing
disks elsewhere, you can easily get thousands of partition directories
on each disk. If you've got 36 disks per node, that turns into a very
long wait for the object replicator to do anything. Worse yet, if you
add in a configuration management system that pushes new rings every
couple hours, the object replicator can spend the vast majority of its
time collecting jobs, then only spend a short time doing useful work
before the ring changes and it has to start all over again.

This commit moves the stat() call (os.path.isfile) to the loop that
processes jobs. In a complete pass, the total work done is about the
same, but the replicator starts doing useful work much sooner.

Change-Id: I5ed4cd09dde514ec7d1e74afe35feaab0cf28a10"
smerritt,2014-12-05 02:37:24,https://api.github.com/repos/openstack/swift/git/commits/cc2f0f4ed6f12554b7d8e8cb61e14f2b103445a0,cc2f0f4ed6f12554b7d8e8cb61e14f2b103445a0,"Speed up reading and writing xattrs for object metadata

Object metadata is stored as a pickled hash: first the data is
pickled, then split into strings of length <= 254, then stored in a
series of extended attributes named ""user.swift.metadata"",
""user.swift.metadata1"", ""user.swift.metadata2"", and so forth.

The choice of length 254 is odd, undocumented, and dates back to the
initial commit of Swift. From talking to people, I believe this was an
attempt to fit the first xattr in the inode, thus avoiding a
seek. However, it doesn't work. XFS _either_ stores all the xattrs
together in the inode (local), _or_ it spills them all to blocks
located outside the inode (extents or btree). Using short xattrs
actually hurts us here; by splitting into more pieces, we end up with
more names to store, thus reducing the metadata size that'll fit in
the inode.

[Source: http://xfs.org/docs/xfsdocs-xml-dev/XFS_Filesystem_Structure//tmp/en-US/html/Extended_Attributes.html]

I did some benchmarking of read_metadata with various xattr sizes
against an XFS filesystem on a spinning disk, no VMs involved.

Summary:

 name | rank | runs |      mean |        sd | timesBaseline
------|------|------|-----------|-----------|--------------
32768 |    1 | 2500 | 0.0001195 |  3.75e-05 |           1.0
16384 |    2 | 2500 | 0.0001348 | 1.869e-05 | 1.12809122912
 8192 |    3 | 2500 | 0.0001604 | 2.708e-05 | 1.34210998858
 4096 |    4 | 2500 | 0.0002326 | 0.0004816 | 1.94623473988
 2048 |    5 | 2500 | 0.0003414 | 0.0001409 | 2.85674781189
 1024 |    6 | 2500 | 0.0005457 | 0.0001741 | 4.56648611635
  254 |    7 | 2500 |  0.001848 |  0.001663 | 15.4616067887

Here, ""name"" is the chunk size for the pickled metadata. A total
metadata size of around 31.5 KiB was used, so the ""32768"" runs
represent storing everything in one single xattr, while the ""254"" runs
represent things as they are without this change.

Since bigger xattr chunks make things go faster, the new chunk size is
64 KiB. That's the biggest xattr that XFS allows.

Reading of metadata from existing files is unaffected; the
read_metadata() function already handles xattrs of any size.

On non-XFS filesystems, this is no worse than what came before:

ext4 has a limit of one block (typically 4 KiB) for all xattrs (names
and values) taken together [1], so this change slightly increases the
amount of Swift metadata that can be stored on ext4.

ZFS let me store an xattr with an 8 MiB value, so that's plenty. It'll
probably go further, but I stopped there.

[1] https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#Extended_Attributes

Change-Id: Ie22db08ac0050eda693de4c30d4bc0d620e7f7d4"
osanai-hisashi,2014-12-05 14:43:52,https://api.github.com/repos/openstack/swift/git/commits/d742b610df8b9edac97506f165993267db37af3e,d742b610df8b9edac97506f165993267db37af3e,"Fix the behavior of swift-ring-builder list_parts before rebalance

The swift-ring-builder list_parts before rebalance failed abnormally so
this patch fix the behavior. After this patch applies the behavior is
completion normally with the following messages.

Specified builder file ""<builder_file>"" is not rebalanced yet.
Please rebalance first.

Closes-Bug: #1399529
Change-Id: I9e5db6da85de4188915c51bc401604733f0e1b77"
fungi,2014-12-05 03:30:40,https://api.github.com/repos/openstack/swift/git/commits/a3b192614dbff709237b6269932980e4f04017a2,a3b192614dbff709237b6269932980e4f04017a2,"Workflow documentation is now in infra-manual

Replace URLs for workflow documentation to appropriate parts of the
OpenStack Project Infrastructure Manual.

Change-Id: I060e5f6869fd302a47a54556f31763b5ab668012"
notmyname,2014-12-02 22:55:32,https://api.github.com/repos/openstack/swift/git/commits/c8ef11d677ef2403f8cc084f6893815f96985c68,c8ef11d677ef2403f8cc084f6893815f96985c68,"added testing notes to the contributing doc

Change-Id: Ifb83469dabbca435bd3df2c05089dc1a113c4460"
clayg,2014-12-04 00:54:43,https://api.github.com/repos/openstack/swift/git/commits/233e0aebf77022074f328d26cb54490115e2127b,233e0aebf77022074f328d26cb54490115e2127b,"Fix reclaim on deleted containers

The common db replicator's code path for reclaiming deleted db's beyond the
reclaim age was not covered by unittests, and a AttributeError snuck in.  In
writing the test that would cover the common code both for accounts and
containers I discovered another KeyError with the container conditional for
validating the container's fully reported status.

This fixes both those issues and adds additional tests for the cleanup empty
account container partition and suffix directories.

Change-Id: I2a1bfaefebd05b01231bf71dd908fcc49adb4c36"
ctennis,2014-12-02 20:28:26,https://api.github.com/repos/openstack/swift/git/commits/d40cebfe55a2ef63e0fdceb21548587bad497a69,d40cebfe55a2ef63e0fdceb21548587bad497a69,"Clean up empty account and container partitions directories.

Because we iterate over these directories on a replication run,
and they are not (previously) cleaned up, the time to start the
replication increases incrementally for each stale directory
lying around.  Thousands of directories across dozens of disks
on a single machine can make for non-trivial startup times.

Plus it just seems like good housekeeping.
Closes-Bug: #1396152

Change-Id: Iab607b03b7f011e87b799d1f9af7ab3b4ff30019"
clayg,2014-12-01 19:44:10,https://api.github.com/repos/openstack/swift/git/commits/83834eb2769a6dd4193e514007abcdbfa4241001,83834eb2769a6dd4193e514007abcdbfa4241001,"Raise ValueError for offset on Timestamp over limit

We can't order a Timestamp with an offset larger than 16 hex digits
correctly, so we raise a ValueError if you try to create one.

Change-Id: I8c8d4cf13785a1a8eb7416392263eae5242aa407"
notmyname,2014-11-26 22:19:08,https://api.github.com/repos/openstack/swift/git/commits/977d7c14daa38ab9c9d79bbf8b92371024b93fc8,977d7c14daa38ab9c9d79bbf8b92371024b93fc8,"Fix tempfile bugs from commit 6978275

Commit 6978275 changed xprofile middleware's usage of mktemp
and moved to using tempfile. But it was clearly never tested,
because the os.close() calls never worked. This patch updates
that previous patch to use a context to open and close the file.

Change-Id: I40ee42e8539551fd8e4dfb353f50146ab40a7847"
NicolasT,2014-11-26 09:02:30,https://api.github.com/repos/openstack/swift/git/commits/b0f9575be3a2ee0ecdcc5148606391e7cc042b5a,b0f9575be3a2ee0ecdcc5148606391e7cc042b5a,"Splice: Use `operator.or_` instead of a lambda-expression

Suggested by Samuel Merritt in https://review.openstack.org/#/c/135319/

Change-Id: I5b86f25b42ffa6d4f9626dc6eb207ae0425933a8"
clayg,2014-11-22 01:28:13,https://api.github.com/repos/openstack/swift/git/commits/01f6e860066640a2ba1406a23c93a72b34ec495e,01f6e860066640a2ba1406a23c93a72b34ec495e,"Add Expected Failure for ssync with sys-meta

Sysmeta included with an object PUT persists with the PUT data - if an
internal operation such as POST-as-copy during partial failure, or ssync
with fast-POST (not supported), causes that data to be lost then the
associated sysmeta will also be lost.

Since object sys-meta persistence in the face of a POST when the
original .data is unavailable requires fast-POST with .meta files the
probetest that validates object sys-meta persistence of a POST when the
most up-to-date copy of the object with sys-meta is unavailable
configures an InternalClient with object_post_as_copy = false.

This non-default configuration option is not supported by ssync and
results in a loss of sys-meta very similar to the object sys-meta
failure you would see with object_post_as_copy = true when the COPY part
of the POST is unable to retrieve the most recently written object with
sys-meta.

Until we can fix the default POST behavior to make metadata updates
without stomping on newer data file timestamps we should expect object
sys-meta to be ""very very best possible but not really guaranteed
effort"".

Until we can fix ssync to replicate metadata updates without stomping on
newer data file timestamps we should expect this test to fail.

When ssync replication of fast-POST metadata update is fixed this test
will fail signaling that the expected failure cruft should be removed,
but other parts of ssync replication will still work and some other bugs
can be fixed while we wait.

Change-Id: Ifc5d49514de79b78f7715408e0fe0908357771d3"
cedricdossantos,2014-11-25 11:37:05,https://api.github.com/repos/openstack/swift/git/commits/a8751ae557616cab1cafd98a338cad352526a262,a8751ae557616cab1cafd98a338cad352526a262,"Correct misspelled words

In some files I found misspelling words.

bin/swift-reconciler-enqueue#l26
   primarly => primarily
swift/account/backend.py#l309
   ommited => omitted
swift/container/replicator.py#l158
   successfull => successful
test/unit/account/test_backend.py#1450
   non_existant_policy_index => non_existent_policy_index
test/unit/account/test_backend.py#1451
   'test-non-existant-policy'=> 'test-non-existent-policy'
test/unit/account/test_backend.py#1453
   non_existant_policy_index => non_existent_policy_index

Change-Id: I976236e3200a6fbdc20be464acff182b6cface81"
shillasaebi,2014-11-22 20:38:48,https://api.github.com/repos/openstack/swift/git/commits/98de48d898f1419b0a0cfc273ec778e60331e623,98de48d898f1419b0a0cfc273ec778e60331e623,"Fix typo in apache_deployment doc

Change-Id: I42d76f544290dbda62633de90608d41caadac084"
shillasaebi,2014-11-22 20:35:10,https://api.github.com/repos/openstack/swift/git/commits/a1872b0498e1aa4182a4373c89beeaaaa219ea17,a1872b0498e1aa4182a4373c89beeaaaa219ea17,"Fix 2 typos in admin_guide file

Change-Id: Ibf1e5dbf6ff4747c7f23f6638321ab41bba3021b"
shillasaebi,2014-11-22 21:11:37,https://api.github.com/repos/openstack/swift/git/commits/0dc4b0a7b75237c09caffdac8c0dfd92bf8e3286,0dc4b0a7b75237c09caffdac8c0dfd92bf8e3286,"Fix typos in overview_large_objects and versioning doc


Change-Id: I1a919ad1b0298d5817f9eb2caf5e3bd7b3243c2c"
kajinamit,2014-11-24 13:05:07,https://api.github.com/repos/openstack/swift/git/commits/7a0c4d248257259612d3471ab42669ca9d90c573,7a0c4d248257259612d3471ab42669ca9d90c573,"Remove invalid connection checking in db_replicator

Account/Container-replicator checks connection generation and timeout
in HTTP REPLICATE Request in _repl_to_node, but it doesn't really checks
connection but only construction of ReplConnection class.
This patch removes that invalid checking.

Change-Id: Ie6b4062123d998e69c15638b741e7d1ba8a08b62
Closes-Bug: #1359018"
notmyname,2014-11-20 18:22:27,https://api.github.com/repos/openstack/swift/git/commits/fb353e1756df02622ea257acc987df4ccd094872,fb353e1756df02622ea257acc987df4ccd094872,"update AUTHORS

Change-Id: I416e81b20a129377782f5d9298f8b8f5be079c27"
leoh0,2014-11-20 02:38:49,https://api.github.com/repos/openstack/swift/git/commits/87d8626505c31511911facd5e1a1c3b3a65e8663,87d8626505c31511911facd5e1a1c3b3a65e8663,"fix example typo

5 * 1024 * 1024 = 5242880

Change-Id: I0eeb6e2d9fbd79103cd8c658627344f73fed9498"
NicolasT,2014-11-18 14:57:06,https://api.github.com/repos/openstack/swift/git/commits/2a0a8ae00f2d3b7db255b0905b063e930f824f3d,2a0a8ae00f2d3b7db255b0905b063e930f824f3d,"Rework `splice` and `tee`

This patch reworks the bindings to `splice` and `tee` in order to fix a
(potential) bug when using the old `splice` binding and passing offsets
(see https://review.openstack.org/#/c/135319/ for a discussion of the
issue).

The new binding code (based on https://github.com/NicolasT/tee-n-splice)
uses more `ctypes` features w.r.t. parameter and return value handling.

It also introduces a test suite for both calls.

Change-Id: Ib8084ca20fe7a199a00067da9386c2ccf618755c"
ajaeger,2014-11-19 14:11:55,https://api.github.com/repos/openstack/swift/git/commits/ddf8b0594bb7e5ea9022982a7c5e15d9b261c22e,ddf8b0594bb7e5ea9022982a7c5e15d9b261c22e,"Fix translation setup

Fix the output directory, it should be swift/locale.
This fixes the importing of translations.

Change-Id: I48311773c9d200c3b1739dc796618849416096ed"
clayg,2014-11-17 20:30:15,https://api.github.com/repos/openstack/swift/git/commits/e0307f950bccde1337898e16087af726429e13f4,e0307f950bccde1337898e16087af726429e13f4,"Always use FakeMemcache for in-process tests

Better isolation and consistency for in-process functests to always use
the FakeMemcache.  If you want to test the real memcache you have real
functional tests.

Change-Id: Ic483f794e122130bd7694c9a5f9a2b1cd0b9a653"
clayg,2014-11-18 04:29:45,https://api.github.com/repos/openstack/swift/git/commits/99d501831ebdba1a228022805ee1a4bb98ecd77a,99d501831ebdba1a228022805ee1a4bb98ecd77a,"Consistently apply node error limiting rules in proxy

All GET or HEAD requests consistently error limit nodes that return 507
and increment errors for nodes responding with any other 5XX.

There were two places in the object PUT path where the proxy was error
limiting nodes and their behavior was inconsistent.  During expect-100
connect we would only error_limit nodes on 507, and during response we
would increment errors for all 5XX series responses.  This was pretty
hard to reason about and the divergence in behavior of questionable
value.

An audit of base controller highlighted where make_requests would apply
error_limit's on 507 but not increment errors on other 5XX responses.

Now anywhere we track errors on nodes we use error_limit on 507 and
error_occurred on any other 5XX series request.  Additionally a Timeout
or Exception that is logged through exception_occurred will bump errors -
which is consistent with the approach in ""Add Error Limiting to slow
nodes"" [1].

1. https://review.openstack.org/#/c/112424/

Change-Id: I67e489d18afd6bdfc730bfdba76f85a2e3ca74f0"
annabellebertooch,2014-11-17 22:11:05,https://api.github.com/repos/openstack/swift/git/commits/6f9ca6122efac6c1c252a948cd5cc18c58c625ff,6f9ca6122efac6c1c252a948cd5cc18c58c625ff,"Adds v1 API documentation to doc/source/api

After discussion https://review.openstack.org/#/c/129384/ moving
to the doc directory in swift repo.

This lets us eliminate the object-api repo along with all the <service>-
api repos and move content to audience-centric locations.

Change-Id: Ia0d9973847f7409a02dcc1a0e19400a3c3ecdf32"
morrisson,2014-09-30 15:06:08,https://api.github.com/repos/openstack/swift/git/commits/2792fe81a93dbaa95e58f14099db5e11dd8cde68,2792fe81a93dbaa95e58f14099db5e11dd8cde68,"Show the sum of every policy's amount in /recon/async

After the release of Swift ver. 2.0.0, some recon responses do not
show each policy's information yet. To make things worse, some recon
results only count on policy-0's score, therefore the total is not
shown in the recon results.

With this patch, async_pending count of recon results becomes
policy-aware. Suppose a number of async_pending files for policy-0 is 2
and a number for policy-1 is 3, recon sums up every policy's amount
as follows.

$ curl http://<host>:<port>/recon/async
{""async_pending"": 5} # It showed 2 before this commit

Related-Bug: 1375332
Change-Id: Ifc88b8c9e06b9f022a926a87ed807e938e1e0412"
smerritt,2014-11-14 00:40:05,https://api.github.com/repos/openstack/swift/git/commits/e429cd81be711f42441a08e34c077dcd7a97bed0,e429cd81be711f42441a08e34c077dcd7a97bed0,"Make error limits survive a ring reload

The proxy was storing the error count and last-error time in the
ring's internal data, specifically in the device dictionaries. This
works okay, but it means that whenever a ring changes, all the error
stats reset.

Now the error stats live in the proxy server object, so they survive a
ring reload.

Better yet, the error stats are now keyed off of the node's
IP/port/device triple, so if you have the same device in two rings
(like with multiple storage policies), then the error stats are
combined. If the proxy server sees a 507 for an objec request in
policy X, then that will now result in that particular object disk
being error-limited for requests in policies Y and Z as well.

Change-Id: Icc72b68b99f37367bb16d43688e7e45327e3e022"
clayg,2014-11-12 01:03:29,https://api.github.com/repos/openstack/swift/git/commits/b98fe3b77b6b422e5e5978f6cf82a11fb87aedfc,b98fe3b77b6b422e5e5978f6cf82a11fb87aedfc,"Prefer X-Backend-Timestamp for X-Newest

When a X-Backend-Timestamp is available it would generally preferred
over a less specific value and sorts correctly against any X-Timestamp
values anyway.

Change-Id: I08b7eb37ab8bd6eb3afbb7dee44ed07a8c69b57e"
smerritt,2014-11-03 22:20:08,https://api.github.com/repos/openstack/swift/git/commits/466403723c4c1fd575b1340e0f9214ee28f0aeb7,466403723c4c1fd575b1340e0f9214ee28f0aeb7,"Make resetswift customizable via environment

Instead of recommending to edit resetswift to replace ""/dev/sdb1"" with
""/srv/swift-disk"", use an environment variable instead. This way I can
set SAIO_BLOCK_DEVICE=/srv/swift-disk in my .bashrc, and then when I'm
testing out changes to resetswift, I don't need to remember to edit
the modified script, nor do I end up submitting changes with the wrong
default in there.

The variable defaults to /dev/sdb1, so if you use the script unmodified
and don't set SAIO_BLOCK_DEVICE, nothing changes for you.

Change-Id: I741a8c91c2c54a4f32bc391cd794ef4206402753"
smerritt,2014-11-07 21:53:46,https://api.github.com/repos/openstack/swift/git/commits/331b14238effc9d1928e478bba86122f7e2525c1,331b14238effc9d1928e478bba86122f7e2525c1,"Reject object names with Unicode surrogates

Technically, you can't encode surrogates into UTF-8 at all, but Python
2 lets you get away with it. Python 3 does not.

We already have a check for surrogate pairs (commit 0080337), but not
one for lone surrogates. This commit forbids object names with lone
surrogates in them.

The problem with surrogates is trivially reproducible:

    swift@saio:~$ python2.7
    Python 2.7.3 (default, Feb 27 2014, 19:58:35)
    [GCC 4.6.3] on linux2
    Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
    >>> b'\xed\xa0\xbc'.decode('utf-8')
    u'\ud83c'
    >>>

    swift@saio:~$ python3.3
    Python 3.3.5 (default, Aug  4 2014, 15:27:24)
    [GCC 4.6.3] on linux
    Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
    >>> b'\xed\xa0\xbc'.decode('utf-8')
    Traceback (most recent call last):
      File ""<stdin>"", line 1, in <module>
    UnicodeDecodeError: 'utf-8' codec can't decode byte 0xed in position 0: invalid continuation byte
    >>>

See also http://bugs.python.org/issue9133

Change-Id: I7c31022e8a028c3cdf2ed1586349509d96cfded9"
notmyname,2014-11-07 09:34:51,https://api.github.com/repos/openstack/swift/git/commits/fdcd20f2b6496a9e857cb47ae8907938033be9df,fdcd20f2b6496a9e857cb47ae8907938033be9df,"added docs on specs workflow to CONTRIBUTING.md

Change-Id: Id83d1da2a7a594a07fc5332b918539b3728e101b"
mgeisler,2014-11-06 13:52:04,https://api.github.com/repos/openstack/swift/git/commits/dff981a03eac34a4c776cfd9a1528f1c3824f29b,dff981a03eac34a4c776cfd9a1528f1c3824f29b,"Add Swift Browser as an associated project

This is a JavaScript based browser for Swift.

Change-Id: I2e304d4a0623c715f8712a358fef5067abc8935b"
clayg,2014-10-29 22:59:45,https://api.github.com/repos/openstack/swift/git/commits/f9bed74d1bba6a512becd057c3139c54c176c226,f9bed74d1bba6a512becd057c3139c54c176c226,"Return 403 on unauthorized upload when over account quota

If you try an unauthorized upload into a container that is over quota you get
a 403 instead of a 413, but if you try to unauthorized upload when an
*account* is over quota you can see the 413 even though the upload would have
been rejected by the authorize callback.  By wrapping the authorize callback
associated with the incoming request we can make sure to only return our 413
when the request would have been authorized otherwise.

Drive by doc fixes thanks to acoles:

 * State that container_quotas should be after auth middleware in
   the class doc string.
 * Add note to proxy-server.conf.sample that account_quotas should
   be after auth middleware.

The equivalent statements are already in place for each quota
middleware.

Doc-Impact

Closes-Bug: #1387415
Change-Id: I2a88b3ec79d35bfdd73ea6ad64e376b7c7af4ea6"
matthewoliver,2014-06-13 09:12:31,https://api.github.com/repos/openstack/swift/git/commits/2659888c921d09bd1dd23cda6ee2f158187d80e6,2659888c921d09bd1dd23cda6ee2f158187d80e6,"When a filesystem does't support xattr return a 507

Currently when the object server tries to write an object's metadata
to a filesystem that doesn't support xattr, it errors with a stacktrace
and returns a 500 error back to the user with no information.

This patch catches the resulting IOError when attempting to read or write
the xattr metadata, logs the error nicely and then returns a 507 error
back to the user.

Seeing as this change is sending back a 507, it also catches and logs
the out of disk space errors (ENOSPC and EDQUOT).

Change-Id: I31932b57582817a0b3b58dd315a996bd0bcbc99b
Closes-Bug: #966671"
redbo,2014-10-27 16:29:07,https://api.github.com/repos/openstack/swift/git/commits/0080337897c5b8ebaba392da36303e7df69262a8,0080337897c5b8ebaba392da36303e7df69262a8,"reject problematic object names

We had this problem:

    >> : x = '\xed\xa0\xbc\xed\xbc\xb8'
    >> : x == x.decode('utf-8').encode('utf-8')
    << : False

That str contains two utf-8 codepoints, which I guess python is normalizing
into one unicode character, which it then encodes as one utf-8 codepoint.
Like this:

    >> : u'\ud83c\udf38'
    << : u'\U0001f338'

I don't entirely understand that, but having a different byte representation
after round-tripping through unicode causes problems with replication and
listings.

This patch just rejects anything that doesn't re-encode to the same thing.
If someone smarter wants to do something different, please speak up.

Change-Id: I9ac48ac2693e4121be6585c6e4f5d0079e9bb3e4"
smerritt,2014-10-24 22:34:45,https://api.github.com/repos/openstack/swift/git/commits/dd3564a58773052c472639d49ec39d1ab04e33aa,dd3564a58773052c472639d49ec39d1ab04e33aa,"Mention Python 2.7 in Getting Started guide

Change-Id: I2992d1227f294d4cb1c6a8676137df44e231bd80"
greghaynes,2014-10-24 22:22:29,https://api.github.com/repos/openstack/swift/git/commits/047215afeb4a493d8ac29b67e453996c09a1c832,047215afeb4a493d8ac29b67e453996c09a1c832,"Update Getting Started requirements versions

These docs currently say we target ubuntu 10.04 and an eventlet version
that our requirements file does not allow. Update these versions.

Change-Id: I052b6561f88ec90f865454e426032f1baf4586c0"
redbo,2014-10-16 01:56:48,https://api.github.com/repos/openstack/swift/git/commits/556568b1c38dd0daa9eb6a9de34f54272e4c6465,556568b1c38dd0daa9eb6a9de34f54272e4c6465,"use replication_ip in ssync

Update ssync_sender to use replication_ip and replication_port from the ring.

Those attributes are supposed to allow for a separate replication network, and
are used by rsync replication.

Change-Id: Ib4cc3cbc1503b85dfdfa0edab58a49c95eac5993"
yummybian,2014-10-09 05:36:22,https://api.github.com/repos/openstack/swift/git/commits/61de3abae68449663359c92009ff1fe9be16505e,61de3abae68449663359c92009ff1fe9be16505e,"Some assignment statements are redundant

Don't need to initialize with false, only determine true conditional
directly.

Closes-Bug: 1379149

Change-Id: I8685896b8dd9f7008b8b2311a2ad2a56c95a8bc6"
smerritt,2014-10-11 00:08:06,https://api.github.com/repos/openstack/swift/git/commits/d9bfa06be026e8acdb75fed0ae130b5c209251ce,d9bfa06be026e8acdb75fed0ae130b5c209251ce,"Fix rebalance crash post-2.1.0 upgrade.

If you had a builder file from an earlier version of Swift (before
6d77c37) and you attempted to rebalance it with a new version of Swift
(after 6d77c37, before this commit), you could get a crash.

Commit 6d77c37 changed the calculation for parts_wanted slightly
(round up instead of round down), so if a rebalance is attempted
without recomputing parts_wanted, then swift-ring-builder crashes.

The crash only occurs if the first command run is ""rebalance"". Adding
a device, removing a device, changing a device's weight, or changing
replica count (basically, anything that gives you a reason to
rebalance) will all cause parts_wanted to be recalculated, so
subsequent rebalances will succeed.

Change-Id: I6f7a69701f74546a00d3183aa7763e9e708408c9"
dpgoetz,2014-10-10 09:04:44,https://api.github.com/repos/openstack/swift/git/commits/a79682f2389e5ae5e6f40d37f23383ac977ca2a8,a79682f2389e5ae5e6f40d37f23383ac977ca2a8,"Fix bug with expirer and unicode

Looks like I wasn't careful enough last time i fixed this bug- this
is basically the same deal, just further down the line. What happens
without this bug fix is you upload a object with a unicode name and
a x-delete-after header and when it does expire the customer object
gets removed but the expirer marker object doesn't.

Change-Id: I82359c87a0919d71693e49ecf08e0f1eedc9d18e"
dpgoetz,2014-10-07 22:25:59,https://api.github.com/repos/openstack/swift/git/commits/7c1c8c0b4d36ec1795c11950652fa42564352264,7c1c8c0b4d36ec1795c11950652fa42564352264,"Ssync does not replicate custom object headers

Closes-Bug: #1329093

Change-Id: Ie9d80089a38d7a9b3464c66237d4d2d23331ebd5"
filippog,2014-10-10 11:51:50,https://api.github.com/repos/openstack/swift/git/commits/dec9448c871ca998bb63b6ffe0541378cbc7a5f7,dec9448c871ca998bb63b6ffe0541378cbc7a5f7,"swift-drive-audit: pass logger to get_errors

Closes-Bug: #1379767
Change-Id: Ie8ec5e9ffb977ab39aedeb878e6aae9f0b62530b"
prashanthpai,2014-10-09 16:25:35,https://api.github.com/repos/openstack/swift/git/commits/772eace020f4d11348f9f2a00695c519ef85014c,772eace020f4d11348f9f2a00695c519ef85014c,"Fix unit tests failing in some cases

TestZeroCopy used to fail when 'localhost' resolved to an ipv6
address. https://github.com/eventlet/eventlet/issues/8

Also, ""test_container_sync_realms.py:TestUtils.test_os_error""
used to fail when unit tests were run as root user. This is
because despite os.chmod(), a root user still has permission
to access the file and hence OSError is not raised.

Change-Id: Ife80b203358557999734515261814ce76c0e00cd
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
javacruft,2014-10-08 21:20:03,https://api.github.com/repos/openstack/swift/git/commits/bd1ec7f89ce48b7359b97e7c926cc74a43267b2a,bd1ec7f89ce48b7359b97e7c926cc74a43267b2a,"Adjust MAX_FILE_SIZE during test on 32 bit systems

The default MAX_FILE_SIZE of (5 * 2 ** 30 + 2) exceeds the
capacity of an int on 32 bit systems; adjust this default
down to (2 ** 30 + 2) if the default exceeds the maxsize of
an int on the platform running the tests.

Closes-Bug: #1378810

Change-Id: Iafa2ce90ceb2de4e968ad48580270c8c572a9c9c"
madhuri-rai07,2014-10-01 10:56:15,https://api.github.com/repos/openstack/swift/git/commits/0c0ac09a467d2a37c1144e76d1289ec1ee62dd85,0c0ac09a467d2a37c1144e76d1289ec1ee62dd85,"Convert maximum length to integer in name_check

This patch converts maximum_length to integer in
name_check middleware if read from proxy-server.conf
file.

Change-Id: I28d66fd1b7ce56ca5540cb7189d084c36e063d43
Closes-Bug: 1372397"
fifieldt,2014-05-15 19:30:13,https://api.github.com/repos/openstack/swift/git/commits/c207c9b9dad5185023110d39f40af5bcde870d07,c207c9b9dad5185023110d39f40af5bcde870d07,"Refer multi node install to docs.openstack.org

The multi-node install was so horribly outdated it still
refered to ubuntu 10.04. The install guide at docs.openstack.org
has a usable swift installation guide - link to it until such
time as this page can be fixed.

Change-Id: I29fa334d9ffc9b63c8f31c664e7509b2f2577574"
notmyname,2014-10-03 14:17:00,https://api.github.com/repos/openstack/swift/git/commits/d6a827792619f3343af07fc2519f4253fbdc67f7,d6a827792619f3343af07fc2519f4253fbdc67f7,"updated AUTHORS and CHANGELOG for 2.2.0

Change-Id: I6c0bc1570f6a48439de5a029a86f1b582f30f8a6"
smerritt,2014-10-02 21:14:58,https://api.github.com/repos/openstack/swift/git/commits/6d49cc3092168de6d22378557b2c37ea4063beeb,6d49cc3092168de6d22378557b2c37ea4063beeb,"Fix ring-builder crash.

If you adjust the replica count after adding devices but before the
first rebalance, the ring builder would crash.

To reproduce:

    $ swift-ring-builder crashy.builder create 8 3 1
    $ swift-ring-builder crashy.builder add r1z1-10.1.1.1:6000/sda1 1
    $ swift-ring-builder crashy.builder set_replicas 5
    $ swift-ring-builder crashy.builder rebalance

Change-Id: Id91cf8680961ccf6e3db153577e99cad545bee9d"
smerritt,2014-10-01 18:03:51,https://api.github.com/repos/openstack/swift/git/commits/702d88bc89f56b96f9e47dc0923f66cbc7cbd5f6,702d88bc89f56b96f9e47dc0923f66cbc7cbd5f6,"fix a comment

Change-Id: I6310390f756bc0d326e56fceef32b630f0fe1ca1"
yummybian,2014-09-27 15:49:38,https://api.github.com/repos/openstack/swift/git/commits/64aa8062bc96799993deafbdf184adb72c509f20,64aa8062bc96799993deafbdf184adb72c509f20,"Some statements are evaluated twice in the setUp of the
TestObjectReplicator

Remove the duplicated statements.

Closes-Bug: #1374783

Change-Id: If2b55e864fea497d7a7b218adf11eb7749c27765"
zaitcev,2014-09-29 20:49:42,https://api.github.com/repos/openstack/swift/git/commits/2ce6341b527e81a43513adef6f5c54b4e09e27a4,2ce6341b527e81a43513adef6f5c54b4e09e27a4,"Fix up the return value of launch()

This is ""obviously"" the right thing to do, except of course it's
pure sugar: the return value is not used anywhere. Except if someone
has a script that imports the whole thing somehow and then does
isinstance(dict). Because that is so much easier than submitting
a patch, I can imagine someone, somewhere doing that.

The fix came in a patch by dfg, see review 121851.

Change-Id: I39ddf70dc2d027b7db6e31097400248dc66eb137"
yummybian,2014-09-27 15:10:48,https://api.github.com/repos/openstack/swift/git/commits/041cf67c36988e3aee0eab0e597d78cec8688df0,041cf67c36988e3aee0eab0e597d78cec8688df0,"Incorrect variable name in the diskfile.py

You should use the suffix variable instead of the hash_ variable when
updates the hashes dictionary in the get_hashes().

Fixes Bug1374777

Change-Id: If9a7ab5b6d271385e4fdc79ff9c216047a2f4d7e"
keshavab,2014-09-24 19:18:49,https://api.github.com/repos/openstack/swift/git/commits/0f93fff46ad098a360f719a762dde4d17e852fbc,0f93fff46ad098a360f719a762dde4d17e852fbc,"Fixes unit tests to clean up temporary directories

This patch fixes the unit tests to remove the temporary directories
created during run of unit tests. Some of unit tests did not tear down
correctly, whatever it had set it up for running. This would over period
of time bloat up the tmp directory. As on date, there were around 49 tmp
directories left uncleared per round of unit tests. This patch fixes it.

Change-Id: If591375ca9cc87d52c7c9c6dc16c9fb4b49e99fc"
keshavab,2014-09-17 19:15:35,https://api.github.com/repos/openstack/swift/git/commits/38ba5790fb527967c2fcbaf094e76a73f4b94d38,38ba5790fb527967c2fcbaf094e76a73f4b94d38,"Provides proper error handling on builder unpickle

This patch provides the necessary error handling while unpickling
a builder file. Earlier if a builder file is empty/invalid/corrupted,
the stacktrace was shown to user with an exit code of 1. This fixes it
to show a user-friendly message and also returns the exit code of 2,
indicating there was a failure.

Change-Id: I51eb24702c422299629f8053d4591dd10f5863f8
Closes-Bug: #1370680"
notmyname,2014-09-22 16:46:34,https://api.github.com/repos/openstack/swift/git/commits/e567722c4ea125f4607093112396e16ae6c6dd42,e567722c4ea125f4607093112396e16ae6c6dd42,"updated hacking rules

1) Added comment for H231, which we were already enforcing. H231
is for Python 3.x compatible except statements.

2) Added check for H201, which we were enforcing in reviews
but waiting on hacking checks to be updated. H201 is for bare
except statements, and the update in upstream hacking is to
support the ""  # noqa"" flag on it.

The H201 check catches some existing bare excepts that are fixed.

Change-Id: I68638aa9ea925ef62f9035a426548c2c804911a8"
redbo,2014-09-25 16:29:57,https://api.github.com/repos/openstack/swift/git/commits/781a1620048edbbc057b15c94da390847b34d9df,781a1620048edbbc057b15c94da390847b34d9df,"use get_container_info in ratelimit

Everyone else cooperates to store the container_info cache in the env the
first time it's requested.  This should save a duplicate memcache hit on
requests that ratelimiting looks at.

Change-Id: Ic6411d4619db6b53fafe9fdbf1d0a370d1258c38"
brownelo,2014-09-18 16:23:54,https://api.github.com/repos/openstack/swift/git/commits/cb20763893bd77bcaba614ffee9af27fb42babb4,cb20763893bd77bcaba614ffee9af27fb42babb4,"Add new features to swift-drive-audit

This patch adds two new features to swift-drive-audit. The first
is an option in the drive-audit.conf file that allows the operator
to prevent the drives ever being unmounted automatically,
regardless of the amount of errors present. This could be of
benefit in very small systems consisting of only one or two drives
where the operator would like to manually unmount/fix the
particular drive(s) and minimise any potential downtime.

The second is another option in drive-audit.conf that allows the
operator to select a recon directory. This directory will then
have a drive.recon file which will keep an up-to-date record of
the swift drives and any errors associated with them. An example
of the output would be as follows:

{""/srv/node/disk2"": ""0"", ""/srv/node/disk3"": ""25"", ""/srv/node/disk0"": ""0"",
""/srv/node/disk1"": ""0"", ""/srv/node/disk10"": ""0"", ""/srv/node/disk7"": ""0"",
""/srv/node/disk4"": ""137"", ""/srv/node/disk5"": ""0"", ""/srv/node/disk8"": ""0"",
""/srv/node/disk9"": ""0"", ""/srv/node/disk6"": ""0"", ""/srv/node/disk11"": ""60""}

This would allow the operator to monitor the errors on the swift
drives without having to spend time searching through logs. Also, if
this is accepted, it should be possible to add an option to
swift-recon that would keep track of this at a system level.

Change-Id: Ib5dacf8622b7363e070c274c7c30c8ead448a055"
peluse,2014-09-11 13:55:45,https://api.github.com/repos/openstack/swift/git/commits/15fbf9fe7cf33ed4b56569078400a2ba070b6bce,15fbf9fe7cf33ed4b56569078400a2ba070b6bce,"Add container_count to policy_stat table

Start tracking the container count per policy including reporting
it in account HEAD and supporting installations where the DB
existed before the updated schema.

Migration is triggered by the account audtior; if the database is
un-migrated it will continue to report policy_stats without the per
policy container_count keys.

Closes-Bug: #1367514
Change-Id: I07331cea177e19b3df303609a4ac510765a19162"
smerritt,2014-09-23 19:32:42,https://api.github.com/repos/openstack/swift/git/commits/23c2d95e98ee5edf317da55e3ee4c303a18991b6,23c2d95e98ee5edf317da55e3ee4c303a18991b6,"Remove unused option from ObjectReplicator.__init__

disk_chunk_size is unused by the ObjectReplicator class. Note that it
*is* used by the object replicator process; it's just that
DiskFileManager is the one that pulls it out of the conf and pays
attention to it. Keeping it as an attribute on ObjectReplicator is
unnecessary.

Change-Id: I1eeef7b33873b4c8bb269ca02dcb067098b6fded"
dbishop,2014-09-23 16:11:44,https://api.github.com/repos/openstack/swift/git/commits/d10462e8704e7f5efe03c4024b541a3780348615,d10462e8704e7f5efe03c4024b541a3780348615,"Fix profile tests to clean up its tempdirs.

Change-Id: I363651046cf414e14f15affd834043aabd5427c0"
MahatiC,2014-09-04 20:12:17,https://api.github.com/repos/openstack/swift/git/commits/b68258a322cb004151b84584d00b3c76ee01bc29,b68258a322cb004151b84584d00b3c76ee01bc29,"Added instructions to create a label or UUID to the XFS volume and mount using it.

Change-Id: Idcaf16a278d6c34770af9b1f17d69bdd94fb86b7"
smerritt,2014-08-28 17:39:38,https://api.github.com/repos/openstack/swift/git/commits/4d23a0fcf5faa6339a1a58fcbdab8687a6c88feb,4d23a0fcf5faa6339a1a58fcbdab8687a6c88feb,"Reject overly-taxing ranged-GET requests

RFC 7233 says that servers MAY reject egregious range-GET requests
such as requests with hundreds of ranges, requests with non-ascending
ranges, and so on.

Such requests are fairly hard for Swift to process. Consider a Range
header that asks for the first byte of every 10th MiB in a 4 GiB
object, but in some random order. That'll cause a lot of seeks on the
object server, but the corresponding response body is quite small in
comparison to the workload.

This commit makes Swift reject, with a 416 response, any ranged GET
request with more than fifty ranges, more than three overlapping
ranges, or more than eight non-increasing ranges.

This is a necessary prerequisite for supporting multi-range GETs on
large objects. Otherwise, a malicious user could construct a Range
header with hundreds of byte ranges where each individual byterange
requires the proxy to contact a different object server. If seeking
all over a disk is bad, connecting all over the cluster is way worse.

DocImpact

Change-Id: I4dcedcaae6c3deada06a0223479e611094d57234"
brownelo,2014-09-02 17:12:18,https://api.github.com/repos/openstack/swift/git/commits/4faf1702706b289521329243e5802cf86e54c7f7,4faf1702706b289521329243e5802cf86e54c7f7,"Add ""--no-overlap"" option to swift-dispersion populate

This change allows the user to use a ""--no-overlap"" parameter when
running the tool multiple times. It will increase the coverage by
whatever is specified in the dispersion_coverage field of the conf
file in a manner where existing container/objects are left in place
and no partition is populated more than once.

Related-Bug: #1233045

Change-Id: I139fed2f4c967ba18d073b7ecd1e946ed4da1271"
englishmastiff,2014-09-19 04:16:35,https://api.github.com/repos/openstack/swift/git/commits/c1f6569c00951e3b57d58a0cd32dc28a638f5a81,c1f6569c00951e3b57d58a0cd32dc28a638f5a81,"Fixes several typos (Swift)

Corrects spelling errors found in comments.

Change-Id: I228a888e3f256569ea32ef1613092dbd63e13c62"
smerritt,2014-09-19 00:04:30,https://api.github.com/repos/openstack/swift/git/commits/1678083d0e48f24e6a74eada874f01ac2755cf78,1678083d0e48f24e6a74eada874f01ac2755cf78,"Test for unicode names in AccountBroker.merge_items()

ContainerBroker.merge_items() had a bug in it where non-ASCII Unicode
names would possibly result in duplicate entries in container
databases. AccountBroker.merge_items() doesn't do the same
bulk-operations tricks that ContainerBroker does, so it doesn't
currently have the bug. This commit just adds a test to ensure the bug
doesn't creep in should someone decide to make AccountBroker look more
like ContainerBroker someday.

Change-Id: Id2ac129828dbdf55b609d839ce4d9d42437ee0a3"
smerritt,2014-06-10 21:15:27,https://api.github.com/repos/openstack/swift/git/commits/7d0e5ebe690bf3cf41ccd970281d532a23284e58,7d0e5ebe690bf3cf41ccd970281d532a23284e58,"Zero-copy object-server GET responses with splice()

This commit lets the object server use splice() and tee() to move data
from disk to the network without ever copying it into user space.

Requires Linux. Sorry, FreeBSD folks. You still have the old
mechanism, as does anyone who doesn't want to use splice. This
requires a relatively recent kernel (2.6.38+) to work, which includes
the two most recent Ubuntu LTS releases (Precise and Trusty) as well
as RHEL 7. However, it excludes Lucid and RHEL 6. On those systems,
setting ""splice = on"" will result in warnings in the logs but no
actual use of splice.

Note that this only applies to GET responses without Range headers. It
can easily be extended to single-range GET requests, but this commit
leaves that for future work. Same goes for PUT requests, or at least
non-chunked ones.

On some real hardware I had laying around (not a VM), this produced a
37% reduction in CPU usage for GETs made directly to the object
server. Measurements were done by looking at /proc/<pid>/stat,
specifically the utime and stime fields (user and kernel CPU jiffies,
respectively).

Note: There is a Python module called ""splicetee"" available on PyPi,
but it's licensed under the GPL, so it cannot easily be added to
OpenStack's requirements. That's why this patch uses ctypes instead.

Also fixed a long-standing annoyance in FakeLogger:

    >>> fake_logger.warn('stuff')
    >>> fake_logger.get_lines_for_level('warn')
    []
    >>>

This, of course, is because the correct log level is 'warning'. Now
you get a KeyError if you call get_lines_for_level with a bogus log
level.

Change-Id: Ic6d6b833a5b04ca2019be94b1b90d941929d21c8"
redbo,2014-09-18 19:20:51,https://api.github.com/repos/openstack/swift/git/commits/eaab4d3fd6b7a330c1b904dc69d7ea4f0fbe8781,eaab4d3fd6b7a330c1b904dc69d7ea4f0fbe8781,"container.merge_items bug

When replicated container entries get round-tripped through json, they wind up
with unicode objects for names.  This causes equality checks to fail against
container entries, and you can wind up with duplicate records.  My bad.

Change-Id: I3aee2ad8dbd3a617efe37e887cfb902a3e4a1646"
smerritt,2014-09-11 00:29:05,https://api.github.com/repos/openstack/swift/git/commits/a7604da065f025931f42bbcf9307bbabda3a37a9,a7604da065f025931f42bbcf9307bbabda3a37a9,"Move multipart MIME parser into utils

Over on the EC branch, we need to be able to parse multipart MIME
documents in the object server. The formpost middleware has a
perfectly good MIME parser, but it seems sort of awful to import
things from formpost in swift/obj/server.py, so I pulled it out into
common.utils.

Change-Id: Ieb4c05d02d8e4ef51a3a11d26c503786b1897f60"
clayg,2014-07-09 23:04:20,https://api.github.com/repos/openstack/swift/git/commits/c767ec9a37faa4414702aa9e39231afe0ba3b097,c767ec9a37faa4414702aa9e39231afe0ba3b097,"Let eventlet.wsgi.server log tracebacks when eventlet_debug is enabled

The ""logging"" available in eventlet.wsgi.server/BaseHTTPServer doesn't
generally suite our needs, so it should be bypassed using a NullLogger in
production.  But in development it can be useful if tracebacks generated from
inside eventlet.wsgi (say a NameError in DiskFile.__iter__) end up in logs.
Since we already have eventlet_debug parsed inside of run_server we can skip
the NullLogger bypass and let stuff blast out to STDERR when configured for
development/debug logging.

Change-Id: I20a9e82c7fed8948bf649f1f8571b4145fca201d"
ajaeger,2014-09-13 07:48:14,https://api.github.com/repos/openstack/swift/git/commits/64548420c87f3163ed543c9e9a02a4f1abec69e0,64548420c87f3163ed543c9e9a02a4f1abec69e0,"Stop using intersphinx

Remove intersphinx from the docs build as it triggers network calls that
occasionally fail, and we don't really use intersphinx (links other
sphinx documents out on the internet)

This also removes the requirement for internet access during docs build.

This can cause docs jobs to fail if the project errors out on
warnings.

Change-Id: I71e941e2a639641a662a163c682eb86d51de42fb
Related-Bug: #1368910"
matthewoliver,2014-08-14 04:39:18,https://api.github.com/repos/openstack/swift/git/commits/f4d3facdf4b6ec8ee0dcacc7be8999731c68a8ec,f4d3facdf4b6ec8ee0dcacc7be8999731c68a8ec,"Treat 404s as 204 on object delete in proxy

This change adds an optional overrides map to _make_request method
in the base Controller class.

  def make_requests(self, req, ring, part, method, path, headers,
                    query_string='', overrides=None)

Which will be passed on the the best_response method. If set and
no quorum it reached, the override map is used to attempt to find
quorum.

The overrides map is in the form:

    { <response>: <override response>, .. }

The ObjectController, in the DELETE method now passes an override map
to make_requests method in the base Controller class in the form of:

    { 404: 204 }

Statuses/responses that have been overridden are used in calculation
of the quorum but never returned to the user. They are replaced by:

    (STATUS, '', '', '')

And left out of the search for best response.

Change-Id: Ibf969eac3a09d67668d5275e808ed626152dd7eb
Closes-Bug: 1318375"
dpgoetz,2014-08-15 22:54:05,https://api.github.com/repos/openstack/swift/git/commits/eff9ab74a4b88102e8938c52cb01b311f932949e,eff9ab74a4b88102e8938c52cb01b311f932949e,"Delete expired objects in slightly smarter way.

When the expirer tries to delete customer objects, if it just walks through the
containers in order the deamon will tend to send DELETEs to the same container
highly concurrently. This will in turn create a lot of asyncs because of all
the concurrent deletes. If the deletes were spread out to multiple containers
it would improve performance and decrease the number of asyncs made.

Change-Id: I3d08118c197b7f18dd7e880bd5664508934ffd24"
mriedem,2014-09-09 04:00:49,https://api.github.com/repos/openstack/swift/git/commits/efdc27caaca96a42c5466131a2c672f92cfac63a,efdc27caaca96a42c5466131a2c672f92cfac63a,"Fix directory value for compile_catalog

Commit 7a192987c0a5edb9e239ffb4aba3b1dac083b41e sets
up swift for translation but the compile_catalog
directory option is pointing at the wrong location
to scan for po files.

Change-Id: Id4dd24ddfde735ef8ef064882bea045361b5db90
Closes-Bug: #1367086"
clayg,2014-09-08 19:25:54,https://api.github.com/repos/openstack/swift/git/commits/cb55e89bf1892c62a981df6b205d41ebfdee65ef,cb55e89bf1892c62a981df6b205d41ebfdee65ef,"test tempurl header sanitization priority

Change-Id: I0bb3004a717da2f65196bc56b0f7baef49e649e8"
yummybian,2014-09-08 14:43:53,https://api.github.com/repos/openstack/swift/git/commits/88d1d53d98c5e24896710dfeb829de01a85b2d2f,88d1d53d98c5e24896710dfeb829de01a85b2d2f,"Too many if clauses in the _clean_incoming_headers and the
_clean_outgoing_headers routines of the tempurl module

Too many if clauses make code complicated. For more pythonic, you'd
better to use the for ... else clause instead of them.

Fix Bug #1363125

Change-Id: I837235ecb08dd912e56cdfb363c4b4a6cc053e7d"
notmyname,2014-09-01 18:22:53,https://api.github.com/repos/openstack/swift/git/commits/b7281cf2c584cde8f516ba206d90024af03236dd,b7281cf2c584cde8f516ba206d90024af03236dd,"make the bind_port config setting required

In a long-term effort to change the recommended ports for Swift,
the first step is to require the bind_port in config files. Later,
we can change the recommended setting.

Anyone currently explicitly setting the ports will not be affected.
Anyone not setting the ports will need to specify them to match their
rings.

DocImpact

Change-Id: Icca83a263acdd0afc9016424a3e9f8c15e944789"
prashanthpai,2014-09-08 10:05:48,https://api.github.com/repos/openstack/swift/git/commits/12268677589907e8d10aec6d5aa09c2f72c0ab77,12268677589907e8d10aec6d5aa09c2f72c0ab77,"Mention storage backends in Associated Projects

Change-Id: I6d88cfe668a557c41e6e6958cd73412ca50c6ba8
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
smerritt,2014-09-05 21:08:03,https://api.github.com/repos/openstack/swift/git/commits/0221f1f8478fda595e0f1d266f5d04c06cb4e76f,0221f1f8478fda595e0f1d266f5d04c06cb4e76f,"Pay attention to all punctual nodes

The proxy sends requests to all storage nodes, but it only needs a
quorum of them to respond before the proxy can, in turn, respond to
the client. Thus, it gets quorum, and then briefly waits to see if the
remainder of the storage nodes respond before giving up on them.

However, the proxy was not paying any attention to the responses from
the non-quorum storage nodes. This would lead to some odd behavior,
like a container PUT where the backends returned (201, 201, 202) would
become a 201 to the client, but the permutation (201, 202, 201) would
become 202. Further, on object PUT, if the last node responded with an
error code, that error wouldn't count towards error-limiting.

The fix is quite simple: after getting quorum, the make_requests()
method was calling a method that returns responses from the remainder
of the nodes, but it was ignoring that return value and making up
responses with dummy values instead. Now, prior to making up dummy
responses, the proxy first uses the responses it already has, and only
fills in dummy responses for nodes that really didn't respond in time.

Change-Id: I0206b6b2272b0e7dcc80fb6c51840d8dae25cee2"
smerritt,2014-09-05 18:39:36,https://api.github.com/repos/openstack/swift/git/commits/315af1737be9a017a06634ae5f5ab89352e89cb5,315af1737be9a017a06634ae5f5ab89352e89cb5,"Error limit the right node on object PUT

If any node had an error on object PUT, the proxy would count the
error against the last-connected-to node instead of the one with the
error. Now it counts the error against the right node.

Change-Id: I884eb73cebe0c723473a6d5e390a148fcad0d3ed"
linericyang,2014-09-05 07:51:07,https://api.github.com/repos/openstack/swift/git/commits/72385a6981b38c870dc3c46346fe7eff86f1bba3,72385a6981b38c870dc3c46346fe7eff86f1bba3,"Change method _sort_key_for to static

This method does not reference to any attribute of this class, so it's better
to change it to classstatic.

Change-Id: I3ea0ca83cb29ceae9afb20da0c9817a9b044c084
Signed-off-by: Lin Yang <lin.a.yang@intel.com>"
sarvesh-ranjan,2014-09-03 17:40:30,https://api.github.com/repos/openstack/swift/git/commits/2a8b43e5e73c899cc476428c82c1831fdc546b29,2a8b43e5e73c899cc476428c82c1831fdc546b29,"Spelling mistakes corrected in comments.

Change-Id: Ibbd7511c3a2b08519feb4db18eca6e000603ea32"
dolph,2014-09-03 17:03:40,https://api.github.com/repos/openstack/swift/git/commits/1a561e67794f6813636377026d8de26f0fb7ad53,1a561e67794f6813636377026d8de26f0fb7ad53,"warn against sorting requirements

Change-Id: I64ae9191863564e278a35d42ec9cd743a233028e
Closes-Bug: 1365061"
zhouyuan,2014-04-17 07:39:50,https://api.github.com/repos/openstack/swift/git/commits/84a1e17f2039e6e5ef732c8931fe47f44f770738,84a1e17f2039e6e5ef732c8931fe47f44f770738,"Fix delete versioning objects when previous is expired

When deleteing versioned objects proxy will try to restore the previous
copy. The COPY request will fail if the previous version is expired but
not handled by object-expirer.

This patch checks COPY respones on the previous copy, if it's
HTTP_NOT_FOUND(mostly because it's expired) proxy will try to restore
with the version before previous.

Closes-Bug #1308446
Change-Id: I17f049ea3ef62723effae8086ec427f6e151cd9c"
ahale,2014-09-01 17:53:30,https://api.github.com/repos/openstack/swift/git/commits/8e9b16a9eaef90add74b71e846371ef61396e19a,8e9b16a9eaef90add74b71e846371ef61396e19a,"Only bind SAIO daemons to localhost

The SAIO configs have no default bind_ip setting configured
which causes them to listen on all available IP addresses.
This can be dangerous on a test machine with public interfaces,
especially with the default passwords set. Its reasonable to
choose a more restrictive setup, especially in SAIO which uses
127.0.0.1 throughout ring-builder, example commands and the
probe tests.

Change-Id: I471c49705ce09e07ec7acc07ee42a1e220529b82"
smerritt,2014-08-29 22:48:38,https://api.github.com/repos/openstack/swift/git/commits/33980c792d40803e8d4c68bd92d9fd869fb861fa,33980c792d40803e8d4c68bd92d9fd869fb861fa,"Fix last_modified_date_to_timestamp on non-UTC systems

Before, we were calling datetime.datetime.strftime('%s.%f') to convert
a datetime to epoch seconds + microseconds. However, the '%s' format
isn't actually part of Python's library. Rather, Python passes that on
to the system C library, which is typically glibc. Now, glibc takes
the '%s' format and helpfully* applies the current timezone as an
offset. This gives bogus results on machines where UTC is not the
system timezone. (Yes, some people really do that.)

For example:

    >>> import os
    >>> from swift.common import utils
    >>> os.environ['TZ'] = 'PST8PDT,M3.2.0,M11.1.0'
    >>> float(utils.last_modified_date_to_timestamp('1970-01-01T00:00:00.000000'))
    28800.0
    >>>

That timestamp should obviously be 0.

This patch replaces the strftime() call with datetime arithmetic,
which is entirely in Python so the system timezone doesn't mess it up.

* unhelpfully

Change-Id: I56855acd79a5d8f2c98a771fa9fd2729e4f490b1"
dpgoetz,2014-08-28 21:31:29,https://api.github.com/repos/openstack/swift/git/commits/849b21a4429e945e5499957b1b884eee9600281f,849b21a4429e945e5499957b1b884eee9600281f,"Combine acc/cont put_* methods and fix their lock problem.

The container backend is supposed to build a pending file and,
when it gets to a certain size, flush it all at once into the
sqlite db. Before this fix, many concurrent threads would ask
what the pending file size is to see if they should flush
instead of just appending to the pending file. The problem is
that many would ask, find it's too big, and try to get a lock.
The first one wins, flushes, but all the other waiting threads
still think they have to flush- which is a much slower opertaion
than just the append. This change gets the lock first and makes
sure that merge_items is only called when the pending file is full.

Change-Id: I29cfa13a48c8f7d16dd414b2288d50461adbafd2"
bloodeagle40234,2014-08-29 02:20:02,https://api.github.com/repos/openstack/swift/git/commits/3a7f80aa472794951461cf95fac4ec029167c17d,3a7f80aa472794951461cf95fac4ec029167c17d,"Small Fix for FakeServerConnection

Current FakeServerConnection might cause 499 error
in some unit tests because sent (put) data will be
overridden by new one every time.
e.g. When calling conn.queue.put() twice and more in
an object PUT sequence, we can use only a last chunk as
the body. This fixes it to merge all chunks as a body.

Change-Id: I463e9e2b454e3f3eb26950b3af4c8b8167a9a971"
zhang-hua,2014-08-27 03:42:06,https://api.github.com/repos/openstack/swift/git/commits/5616d98cc32a5c11014d5e31571fac87d795d113,5616d98cc32a5c11014d5e31571fac87d795d113,"fix my name in AUTHORS

My author name is my gmail account name, change it to my real name.

Change-Id: Iafd94f694f7d007c54de086941309b119683f6cb"
redbo,2014-08-23 18:22:10,https://api.github.com/repos/openstack/swift/git/commits/1fcd6096da56b4f2e114221659b86d114fc088b9,1fcd6096da56b4f2e114221659b86d114fc088b9,"container merge_items speedup

I rewrote ContainerBroker.merge_items to use bulk SQL operations.  This
performs identical to the current version when len(item_list) == 1.  But as
item_list grows, the new version performs better, up to around 50% faster when
item_list numbers in the hundreds.

I wrote a quick script to stress test merge_items:
https://gist.github.com/redbo/12a4ed9c6a020aee39fe

Average of several runs against master: 35.08 seconds
Average of several runs against this branch: 18.44 seconds

Change-Id: I07fff1fb05c90f1411c79d961e0ed63264ed2acf"
notmyname,2014-08-23 15:58:49,https://api.github.com/repos/openstack/swift/git/commits/8d02147d04a41477383de8e13bea6ac3fd2cade0,8d02147d04a41477383de8e13bea6ac3fd2cade0,"added Alex to AUTHORS

Change-Id: I2d147415e65c0f19159b995fc4eca78e075537b6"
notmyname,2014-08-19 04:24:33,https://api.github.com/repos/openstack/swift/git/commits/d50240423f3eded9c1df5220adbc57d7edf5e6ba,d50240423f3eded9c1df5220adbc57d7edf5e6ba,"authors and changelog updates for 2.1.0 release

Change-Id: I457674f564dcacf0fd20004e9a3bb85113f53aa5"
smerritt,2014-08-19 23:44:56,https://api.github.com/repos/openstack/swift/git/commits/6d77c379bd8f51e520896967cdcfc9add3d934a4,6d77c379bd8f51e520896967cdcfc9add3d934a4,"Let admins add a region without melting their cluster

Prior to this commit, swift-ring-builder would place partitions on
devices by first going for maximal dispersion and breaking ties with
device weight. This commit flips the order so that device weight
trumps dispersion.

Note: if your ring can be balanced, you won't see a behavior
change. It's only when device weights and maximal-dispersion come into
conflict that this commit changes anything.

Example: a cluster with two regions. Region 1 has a combined weight of
1000, while region 2 has a combined weight of only 400. The ring has 3
replicas and 2^16 partitions.

Prior to this commit, the balance would look like so:

  Region 1: 2 * 2^16 partitions
  Region 2: 2^16 partitions

After this commit, the balance will be:

  Region 1: 10/14 * 2^16 partitions  (more than before)
  Region 2: 4/14 * 2^16 partitions  (fewer than before)

One consequence of this is that some partitions will not have a
replica in region 2, since it's not big enough to hold all of them.

This way, a cluster operator can add a new region to a single-region
cluster in a gradual fashion so as not to destroy their WAN link with
replication traffic. As device weights are increased in the second
region, more replicas will shift over to it. Once its weight is half
that of the first region's, every partition will have a replica there.

DocImpact

Change-Id: I945abcc4a2917bb12be554b640f7507dd23cd0da"
clayg,2014-08-08 09:14:27,https://api.github.com/repos/openstack/swift/git/commits/21adf82cf11fa80479676225a8a61c0029387cb5,21adf82cf11fa80479676225a8a61c0029387cb5,"code shuffle post expired headers refactor

Change-Id: I62248d7d3d7e0a3696a30e3d567ac6c2bea3c8eb"
smerritt,2014-08-19 21:50:44,https://api.github.com/repos/openstack/swift/git/commits/8fecf490fe3e1befaa5e3c1a09b28bda50a90b47,8fecf490fe3e1befaa5e3c1a09b28bda50a90b47,"Respect device weights when adding replicas

Previously, any new (partition, replica) pairs created by adding
replicas were spread evenly across the whole ring. Now it respects
device weights, so more (partition, replica) pairs are placed on
higher-weight devices.

Note that this only affects partition assignment *when the replica
count is increased*. Normal adding of disks without changing the
replica count is, and was, just fine.

The cause was that the devices' parts_wanted values weren't being
updated when the replica count went up. Since adding replicas makes
more things to assign, each device's desired share should have gone
up, but it didn't. This appears to be a simple oversight on the part
of the original author (me).

Change-Id: Idab14be90fab243c1077a584396a9981a4bd8638"
peluse,2014-08-19 14:10:06,https://api.github.com/repos/openstack/swift/git/commits/8526a071909f32835ca04d4114a77c486f936e29,8526a071909f32835ca04d4114a77c486f936e29,"Fix sporadic false failure in xprofile unit test code (master)

Same fix as is going through on feature/ec, fixed it there first
as it was happening often and no point in waiting until EC is
complete before getting it over to master...

Appears that what's been happening on feature/ec lately
with a middleware failure has to do with a hardcoded PID in
the test code itself causing a profile file to exist when
its not expected to by the test.

Test code used a PID of 135 and based on how get_logfiles()
is written, any real PID that starts with 135 will cause a
false failure in test_call().  This can be seen via inspection
and confirmed in logfiles where all captured assertions show
a profile filename beginning with 135.  Tried getting smarter
about choosing a fake PID (int) but then decided it was 100%
safe to use 'ABC' for this test since that'll never show up!

Change-Id: I958f1525c2727b3fb3f533242fa509fa8e59926c"
notmyname,2014-08-18 04:08:57,https://api.github.com/repos/openstack/swift/git/commits/75a329c7f54fc3b06e11dea1b395d5e552ce0230,75a329c7f54fc3b06e11dea1b395d5e552ce0230,"add the account management config values to swift info

added account_autocreate and allow_account_management to
the /info endpoint

Change-Id: I4b239c9cefb728c3c93bf75cad065c72edf2fc0a"
dpgoetz,2014-08-11 22:08:18,https://api.github.com/repos/openstack/swift/git/commits/0abd2cba035f9f9ab0970708ce5187bfb52462e5,0abd2cba035f9f9ab0970708ce5187bfb52462e5,"Shard expiring object container

All the expiring objects for a given X-Delete-At are funnelled into the
same expiring object container- this can act as a bottleneck.

Change-Id: I288a177a7ae3e213c727a2a81fa76d4ef9cf7eb3"
dpgoetz,2014-08-11 16:43:13,https://api.github.com/repos/openstack/swift/git/commits/a0e0014159c0e12a10cc452b92e86f99196e77bb,a0e0014159c0e12a10cc452b92e86f99196e77bb,"Sleep for longer at a time in lock_path.

When lock_path is called and the lock goes for the whole 10 seconds,
the flock is called 1000 times. With this patch, the short 0.01 sleep
is used for the first 1% of the total lock time and then 1% of the
total lock time is used.

Change-Id: Ibed6bdb49bddcdb868742c41f86d2482a7edfd29"
notmyname,2014-08-11 06:50:17,https://api.github.com/repos/openstack/swift/git/commits/1bc4fe891a359c626ebc8049403d4d72a75b6be7,1bc4fe891a359c626ebc8049403d4d72a75b6be7,"Catch permissions errors when writing StatsD packets

Closes-Bug: #1183152

Change-Id: I4b2c6e947241c987779a385fdff270d037470a57"
kajinamit,2014-04-09 07:33:02,https://api.github.com/repos/openstack/swift/git/commits/41d851387cec122f4795d447458fd81e48e256b0,41d851387cec122f4795d447458fd81e48e256b0,"Add timestamp checking in AccountBroker.is_status_deleted

Account-reaper works only at account-server with the first replica, and reaps
account with ""deleted"" status.

On the other hand, account-replicator doesn't replicate the status, only
replicates *_timestamp.
When swift fails to delete the first account replica, account-reaper never
reaps the account, because the first replica never gets marked as ""deleted"".

This patch adds a timestamp checking into is_status_deleted method, and
account-reaper will start to reap the account after account-replicator
replicates *_timestamp.

Change-Id: I75e3f15ad217a71b4fd39552cf6db2957597efca
Closes-Bug: #1304755"
smerritt,2014-07-11 18:27:11,https://api.github.com/repos/openstack/swift/git/commits/134e864fa132b4d29e8fed6c54526cf1777307b2,134e864fa132b4d29e8fed6c54526cf1777307b2,"Add POST and DELETE to tempurl default methods

The tempurl middleware supports any configured HTTP methods, but the
default set was only GET, PUT, and HEAD, so cluster operators had to
take action to enable POST and DELETE. This commit changes the
defaults to include POST and DELETE.

Note that this doesn't affect any existing temporary URLs at all; the
method is baked into the signature (temp_url_sig query param), so no
new access is granted to a holder of a temporary URL by this
change. It simply gives more flexibility to creators of temporary
URLs.

Change-Id: I5bc15bbd2968ab7bedcd7c0df10f2ec825537191"
matthewoliver,2014-08-05 02:31:44,https://api.github.com/repos/openstack/swift/git/commits/fb22363071e787d1dc415937699a97545d6bed7b,fb22363071e787d1dc415937699a97545d6bed7b,"Remove old DLO config remenents from proxy

Config items 'rate_limit_after_segment' and
'rate_limit_segments_per_sec' are configuration items left over from
before DLO was moved from the proxy server and into it's own
middleware. This change removes the configuration options from the
proxy server.

Change-Id: Ie3d42a57cda813feed019f01db986f13cdff9c31"
matthewoliver,2014-07-04 05:56:45,https://api.github.com/repos/openstack/swift/git/commits/090baa1fa968d85da51dfdfcded2da6430900d7f,090baa1fa968d85da51dfdfcded2da6430900d7f,"Swift configuration parameter audit

This change is the result of an audit through the config parameters
provided by swift and how/if they are addressed in the swift
documentation. The documentation being the sample config files in
the /etc directory or the documentation.

This change is only concerned with the config files in etc/ next
I will look at the documentation in the doc/ folder.

This change makes the following assumptions:
  - Unless stated otherwise, the commented out parameter in the
    sample configuration is the default for swift.

  - When the default in the code differs from that of the sample
    configuration, the default in the code is correct.

Container reconciler:
  Parameter: interval
    - code: 30
    - config: 300
  Result: config = 30

Object Expirer:
  Parameter: recon_cache_path
    - code: /var/cache/swift
    - config: Parameter missing
  Result: Add parameter

swift-dispersion-populate && swift-dispersion-report
  Parameter: auth_version
    - code: 1.0
    - config: 2.0 (due to being a confusing example of how to setup
                   version 2.0).
  Result: Added 'auth_version = 1.0' to the right section (showing
          default and make the sample configuration for auth version
          2.0 easier to understand.

swift-drive-audit:
  Parameter: log_file_pattern
    - code: /var/log/kern.*[!.][!g][!z]
    - config: /var/log/kern*
  Result: config = /var/log/kern.*[!.][!g][!z]

  NOTE: swift-drive-audit uses a parameter called device_dir which
        defaults to '/srv/node'. In all other swift binaries/services
        there is a similar parameter called devices which stores the
        same thing. This is an inconsistency which I haven't fixed
        as this could break existing swift clusters out in the wild.

Proxy Server:
  Parameter: object_chunk_size
    - code: 65536
    - config: 8192
  Result: config = 65536

  Parameter: client_chunk_size
    - code: 65536
    - config: 8192
  Result: config = 65536

  Parameter: strict_cors_mode
    - code: True
    - config: No parameter
  Result: config = True

Account and Container replicator configuration confusion:
  NOTES:
    The account and container replicators have parameters:
      - interval
      - run_pause

    Both of these are loaded into the same variable in code:
      self.interval = int(conf.get('interval') or
                          conf.get('run_pause') or 30)

    If a user sets both to different values then interval is used.
  Result: Update the configuration to make this more clear.

DocImpact
Change-Id: Iaadbb1a6284f8b3e0801bc343b29772f70f4bf6e"
smerritt,2014-07-23 21:12:03,https://api.github.com/repos/openstack/swift/git/commits/2b55709625e8687af9e867ec93b095864b701959,2b55709625e8687af9e867ec93b095864b701959,"Make swift-form-signature output a sample form

swift-form-signature would give you the required expiration-time and
HMAC signature, but it wouldn't help you actually construct the HTML
form. To do that, you had to go look at the formpost middleware's doc
string and make up a form yourself.

For convenience, this commit makes swift-form-signature output a
sample form with the computed values filled in already; the user only
needs to fill in the Swift cluster's hostname.

Change-Id: I70d70a648b78b382dbfbe8ff918e6158a7f6a0ab"
stevemar,2014-08-05 04:59:54,https://api.github.com/repos/openstack/swift/git/commits/b7254b2d83a9b3e5f8dc8d12fa93736316ae80a8,b7254b2d83a9b3e5f8dc8d12fa93736316ae80a8,"Update the swift documentation theme

Currently the theme used by the swift developer docs are out of
date, it should be using oslosphinx, to provide a similar look
and feel between all openstack related projects.

Change-Id: Id7c226cdc13c6c4f3b5082b1ef4dfe09966b21ec"
smerritt,2014-08-04 23:59:16,https://api.github.com/repos/openstack/swift/git/commits/0cefaaf8e0ce24f72fef80f8e48629ad13c68412,0cefaaf8e0ce24f72fef80f8e48629ad13c68412,"Bail out a little faster when object write affinity is off

This function was calling a couple functions prior to checking for
early bailout; if it did bail out, the results of those function calls
were unused. Bail out earlier to avoid wasted work.

Change-Id: Ia023549a45355b44ebfb41212565c42f993415a9"
portante,2014-05-06 14:54:05,https://api.github.com/repos/openstack/swift/git/commits/3e04606f87c8cb3207ffeb717a6f5407b77b4d12,3e04606f87c8cb3207ffeb717a6f5407b77b4d12,"Add a env var to use in-memory obj server in func

Add an environment variable to enable the use of the in-memory object
server during in-process functional test runs.

It might be worth-while to just run under both object servers in-tree,
but this at least enables it, without having to figure out how to make
two test runs in two different environments.

DocImpact

Change-Id: Id76b008e1f273c639ae61550affddc32c5d7c419
Signed-off-by: Thiago da Silva <thiago@redhat.com>"
dpgoetz,2014-07-31 17:19:10,https://api.github.com/repos/openstack/swift/git/commits/e2255fc1f4d08993f41d3ff2eacc62a3c5f66ecd,e2255fc1f4d08993f41d3ff2eacc62a3c5f66ecd,"fix expirer bug with unicode container listings

If the container names in the expirer's account are returned as
unicode strings (as is the case with some json libraries), the
expirer compared eg u'1' == '1', which is problematic. This patch
ensures that the unicode is coerced to ascii so the comparison
is correct.

Change-Id: I72b322e7513f7da32e8dc75c6bf0e7e016948c88"
smerritt,2014-07-31 19:18:47,https://api.github.com/repos/openstack/swift/git/commits/5a84b1cde102dac4ae5a40a20a364ada1dc547e9,5a84b1cde102dac4ae5a40a20a364ada1dc547e9,"Put proxy-logging in object expirer's sample config

It's generally better to have logs for something than to not have
logs. This way, the object expirer (if using the sample config as a
starting point) will log what it does.

Note that the container reconciler's sample config already contains
proxy-logging, as does the proxy server's. The object expirer is the
odd man out.

Change-Id: I32aac99131746501820319b94405440c1934a694"
nkinder,2014-07-26 03:47:11,https://api.github.com/repos/openstack/swift/git/commits/6978275cdb04bb08aaf142d401b52a46527dac4c,6978275cdb04bb08aaf142d401b52a46527dac4c,"Avoid usage of insecure mktemp() function

This patch eliminates the use of the deprecated and insecure
tempfile.mktemp() function.  It has been replaced with secure
alternatives where temporary files are actually required.

Change-Id: I0a13d6d44cd1abc4b66fa33f39eea407617a01d5
SecurityImpact
Closes-bug: #1348869"
smerritt,2014-07-26 01:50:19,https://api.github.com/repos/openstack/swift/git/commits/4bc600ff42f254849458c77ddef9bdc47f91e4a1,4bc600ff42f254849458c77ddef9bdc47f91e4a1,"Fix ""Handoff requested (N)"" log spam

A long, long time ago, on a GET request, the proxy would go look on 3*
nodes for the requested thing. If one of the primary nodes was
error-limited, it'd look on two primaries and a handoff. Since this
indicated some failure somewhere, the proxy would emit a warning:
""Handoff requested (1)"". If two primaries were down, there'd be a
second message ""Handoff requested (2)"", and so on.

Some StatsD messages were emitted too.

A somewhat shorter time ago (commit d79a67eb), the proxy started
looking into handoffs if it got 404s from the primaries. While this
was a good idea, it resulted lots of ""Handoff requested (N)"" log spam;
you'd see these messages on every single 404. Also, the StatsD
handoff_count and handoff_all_count metrics shot way up and turned
into noise.

This commit restores the original intent (and usefulness) of the log
messages and StatsD metrics: if the proxy only looks at the normal
number of handoff nodes, nothing is logged. However, if a primary is
down, then the message ""Handoff requested (1)"" will be logged,
indicating that the proxy looked at one more handoff than it normally
would, and this happened because a primary node was error-limited.

Closes-Bug: 1297214

* or whatever the replica count was

Change-Id: If1b77c18c880b096e8ab1df3008db40ce313835d"
peluse,2014-07-25 23:34:39,https://api.github.com/repos/openstack/swift/git/commits/1cd14daadb40f5d76e559d874e106e9b63612689,1cd14daadb40f5d76e559d874e106e9b63612689,"Reuse a cursor instead of a conn.execute for better performance

Basically the same thing as https://review.openstack.org/#/c/109694/
but over in the account backend.

Change-Id: I9255f3145818da3adafc16d3bcf159608a78fe51"
dpgoetz,2014-07-25 19:16:54,https://api.github.com/repos/openstack/swift/git/commits/670dc920deaf64a99f6ca3ad10ba19029493f3ff,670dc920deaf64a99f6ca3ad10ba19029493f3ff,"Reuse a cursor instead of a conn.execute for better performance

In some limited testing it was ~10% faster. Every little bit helps right?

Change-Id: Ide55b7600d625ad151daca73fbdd8684f0f9e7f8"
smerritt,2014-07-23 20:01:58,https://api.github.com/repos/openstack/swift/git/commits/4f2bb9f271e705ee5e7a357c9e5ec9384b4a690e,4f2bb9f271e705ee5e7a357c9e5ec9384b4a690e,"Make swift-form-signature testable

Moved the body of bin/swift-form-signature into
swift/cli/form_signature.py, like was done with swift-ring-builder and
others. Added a couple basic tests; there's not 100% coverage, but
it's better than the 0% coverage we had before.

It's almost a straight forklift, but I changed exit() calls to return
statements.

Change-Id: Ie2f702c070da24d9cdface83b9e838e9e2965085"
linericyang,2014-07-23 09:31:06,https://api.github.com/repos/openstack/swift/git/commits/f918bd47c04a6b46b92f97a0e34cc205bee5bd00,f918bd47c04a6b46b92f97a0e34cc205bee5bd00,"Remove duplicate conditional statement

It contains two same conditional statements to check whether the first
argurment is end with '.ring.gz'. The latter one can be covered by 'else'
clause.

Change-Id: I4b67dc330e82e793020bec4b74047062313ae11c
Signed-off-by: Lin Yang <lin.a.yang@intel.com>"
ppalucki,2014-07-22 10:30:54,https://api.github.com/repos/openstack/swift/git/commits/05121f533a22c8ebe7bd893ba8d0014e3e69e929,05121f533a22c8ebe7bd893ba8d0014e3e69e929,"typo tradeoff -> trade-off

Change-Id: Iad5eb611bc727991606f8a2d4dbb08dcc8fa3ddb"
smerritt,2014-07-21 18:37:57,https://api.github.com/repos/openstack/swift/git/commits/02aaabba6a1ff91abbf07ee4ed0804dafa873341,02aaabba6a1ff91abbf07ee4ed0804dafa873341,"Fix a couple small things in formpost doc string

Change-Id: Idb8d4707180396662493aacbd1f125c4ca43a1ca"
redbo,2014-07-21 07:45:56,https://api.github.com/repos/openstack/swift/git/commits/b908a65649cbdd0ed5d09d11fb635c36b5f35bc1,b908a65649cbdd0ed5d09d11fb635c36b5f35bc1,"lock_file race fixes

I attempted to use this function and found a few problems.

We shouldn’t unlink the file after closing it, because someone else could lock
it in between.  Switch to unlink before close.

If someone else locked the file between our open and flock, they are likely to
unlink it out from underneath us.  Then we have a lock on a file that no longer
exists.  So stat the filename after locking to make sure the inode hasn't
changed or gone away.

We probably shouldn’t unlink the file if we time out waiting for a lock.  So
move that to before the finally block.

Change-Id: Id1858c97805d3ab81c584eaee8ce0d43d34a8089"
matthewoliver,2014-07-02 07:21:54,https://api.github.com/repos/openstack/swift/git/commits/90272a0564e3824e1199fb7e1250de124c1f34b0,90272a0564e3824e1199fb7e1250de124c1f34b0,"Add X-Delete-At/After support to FormPost

This change adds the ability to specify a X-Delete-At or
X-Delete-After attribute when using the FormPost middleware.

Here is an example of what you need to add to the form:

  <input type=""hidden"" name=""x_delete_at"" value=""<unix-timestamp>""/>
  <input type=""hidden"" name=""x_delete_after"" value=""<seconds>""/>

To be inline with the other form imput names, x-delete-at/after has
changed to x_delete_at/after.

DocImpact
Change-Id: Ib1cc0bcf1dd7d2b689f2f26d100f9bab36880c81
Closes-Bug: #1065522"
peluse,2014-07-18 21:35:12,https://api.github.com/repos/openstack/swift/git/commits/116ac459a64471b09a5e989e88349c66f470ce38,116ac459a64471b09a5e989e88349c66f470ce38,"Fix small typo in deployment guide

Change-Id: Ifd86ce5b36c2588b57fd44c633b095d1f49fcd5b"
dmsimard,2014-07-18 17:25:58,https://api.github.com/repos/openstack/swift/git/commits/e1fb64a7a6c675d909fe76757ae6671e51de9a51,e1fb64a7a6c675d909fe76757ae6671e51de9a51,"Pass disk usage options when using --all

This commit allows the arguments --human-readable and --top to be
used with --all to customize the output of the disk usage portion.

There are no unit tests attached to this commit, I have created and
referenced bug #1344200 which shows there is a larger bug to address
to create several missing tests.

Change-Id: I46b8359533989efc3067971acaafec1d0cbc2b9f
Closes-Bug: #1344178
Related-Bug: #1344200"
clayg,2014-06-20 22:43:40,https://api.github.com/repos/openstack/swift/git/commits/216aaab6387cd4db63aeb51520e8c1b9c70e31a5,216aaab6387cd4db63aeb51520e8c1b9c70e31a5,"Add v2 API to list endpoints middleware

The new API adds better support for storage policies and changes the
response from a list of backend urls to a dictionary with a key
""endpoints"" that's a list of of the backend urls and a new key headers
that's a dictionary of headers to send along with the backend request.
In the v2 response format for object requests, there the headers key
includes ""X-Backend-Storage-Policy-Index"" which indicates the storage
policy index for the endpoints returned in the response.

Change-Id: I706a5b5be8002c633fe97b2429256735800a902e"
smerritt,2014-07-11 19:03:30,https://api.github.com/repos/openstack/swift/git/commits/25c98b771a26ffed3772e2fe4d2547afaa011834,25c98b771a26ffed3772e2fe4d2547afaa011834,"Allow HEAD for POST tempurls

HEAD requests are already allowed for GET and PUT tempurls; this
commit adds that for POST tempurls. Since POST replaces all the
object's metadata, it's quite useful to be able to HEAD the object in
order to fetch the old metadata and do a client-side merge of the new
metadata (like with normal, token-authenticated POST requests).

Change-Id: I603c7822cd27f0e304fd27024f83f95114eb0aef"
ajaeger,2014-06-01 09:51:29,https://api.github.com/repos/openstack/swift/git/commits/7a192987c0a5edb9e239ffb4aba3b1dac083b41e,7a192987c0a5edb9e239ffb4aba3b1dac083b41e,"Setup localization properly

To start translation of swift, we need to initially import the
translation file - and place it at the proper place so that
the usual CI scripts can handle it.

The proper place is for all python projects
$PROJECT/locale/$PROJECT.pot, so move locale/$PROJECT.pot to the new
location and regenerate the file.

Update setup.cfg with the new paths.

Further imports will be done by the OpenStack Proposal bot.

Change-Id: Ide4da91f2af71db529f4a06d6b1e30ba79883506
Partial-Bug: #608725
Closes-Bug: #1082805"
portante,2014-06-02 17:36:21,https://api.github.com/repos/openstack/swift/git/commits/0753dd39231270150d61e051175dcdbd106836b5,0753dd39231270150d61e051175dcdbd106836b5,"Handle func tests of swift cluster that hide /info

If a swift cluster configures the proxy server to not accept
/info requests, just do the best we can, skipping tests as
necessary.

To that end, if cors mode is not known we also skip the test.

Change-Id: I34f296c8717e0baf24ae552a7e38f9354ee91974"
gilv,2014-04-24 06:50:36,https://api.github.com/repos/openstack/swift/git/commits/e5d76e9f055805e1b44e4ee2f1898a5b9a0a354c,e5d76e9f055805e1b44e4ee2f1898a5b9a0a354c,"Container PUT requests and max container per account

If container counter per account is equal or greater than
max_container_per_account, then all PUT requests are failed and
403 is returned.
This is correct behaviour if the request is to create a new
container, however if container already exists PUT should be
allowed, even the max_container_per_account condition has met.

This patch allows to process PUT requests for existing containers,
even if max_container_per_account > = container count.

It indirectly resolve the bug 1306711, since swift-client
uses internally PUT requests for container, prior it upload an
object there.

Change-Id: I2dcf20b6feb27e346111466a565695eba4b4b1da"
peluse,2014-07-10 13:21:56,https://api.github.com/repos/openstack/swift/git/commits/7ea30df9cdd416bdc41762f1bc31c3971d55ae34,7ea30df9cdd416bdc41762f1bc31c3971d55ae34,"Update docs to highlight that the auditor chunk size can be set

May not be obvious, but existing code will let you change the
disk_chunk_size just for the auditor so this just points that
out in the docs.  In one short test I ran with a 4 node cluster
with 18GB of 4MB objects on it, changint he auditor chunk size
from the default of 64K to 1MB creased the auditor CPU time from
10% to 4%.

Also added test code to make sure this overridden value is
actually used and checked other auditWorker conf values as
well.

Change-Id: Ia12e1c6127877dc2124b60cd963cd0b6d5f3d6ef"
notmyname,2014-07-08 00:11:38,https://api.github.com/repos/openstack/swift/git/commits/7ab2afe5bd5a30615cae83efc401b581b0c2dc5a,7ab2afe5bd5a30615cae83efc401b581b0c2dc5a,"added process pid to the end of storage node log lines

Change-Id: I1c2709d85575fc7d4868fafd9ee757fd01868436"
notmyname,2014-07-08 23:30:07,https://api.github.com/repos/openstack/swift/git/commits/03a40b514a43142fa57f194f8793122ef4643378,03a40b514a43142fa57f194f8793122ef4643378,"Merge tag '2.0.0'

Swift 2.0.0 release

Change-Id: I5fdc1e7434bdf6d88c4b260798791ee59f0832c0"
clayg,2014-07-01 18:23:48,https://api.github.com/repos/openstack/swift/git/commits/e114a628dcaf59e2e4649dff10916b78fead4ba9,e114a628dcaf59e2e4649dff10916b78fead4ba9,"Remove fake _get_part and use the real thing

The get_part method is fast and stable given a consistent hash path
suffix/prefix, so there's no absolute requirement for the fake
implementation other than convenience.  OTOH, removing the fake
implementation and fixing the tests that were relying on it should make
it easier to write better tests going forward and harder to hide bugs
that don't show up when using the fakes.

There may be some overhead when writing new tests that use the ring if
you're making assertions on partitions or paths, but with a part power
of zero it's normally trivially obvious when a 1 needs to be a 0 or vice
versa.  Or you can just drop the assertions around the parts you were
faking anyway.

Change-Id: I8bfc388a04eff6491038991cdfd7686c9d961545"
gholt,2014-07-08 15:14:25,https://api.github.com/repos/openstack/swift/git/commits/0582db728fa5931cae143014a9b3ac1205a23855,0582db728fa5931cae143014a9b3ac1205a23855,"This setting should've been set to False back ...

...with commit 9eb797b09916574c2a4e0f5f9ea61fe120879075

With this setting to True in the code, any tools anyone writes will
automatically start preallocating, which is almost always bad these days
with SSDs. So, if you write a tool that just scan dbs for stats, it'll
commit any pending info triggering preallocation and bam, your SSDs
start to fill up. :/

Anyway, back when I wrote 9eb797b09916574c2a4e0f5f9ea61fe120879075 it
was my intention to have this off by default, everywhere; I changed all
the settings points but I failed to change the dang constant itself.
This corrects that.

Change-Id: Iada0a3f1ecfabda4a96f574903d8e2eed1f69064"
yummybian,2014-06-29 14:03:33,https://api.github.com/repos/openstack/swift/git/commits/2f45600c7db48417626ff4152ec46f8d4054a8a6,2f45600c7db48417626ff4152ec46f8d4054a8a6,"Document the unnecessary method invoking in FakeRing

Add comment to explain why we invoke the get_part method even if the
_part_shift is equal to 32.

Closes-Bug:  #1335581

Change-Id: I160e9383b5e65f75ed5e89511cc7e63c51958a25"
berendt,2014-05-29 22:06:44,https://api.github.com/repos/openstack/swift/git/commits/f6ff06b6782ba0682e16f2015d77ea6fb53c2d5b,f6ff06b6782ba0682e16f2015d77ea6fb53c2d5b,"Use except x as y instead of except x, y

According to https://docs.python.org/3/howto/pyporting.html the
syntax changed in Python 3.x. The new syntax is usable with
Python >= 2.6 and should be preferred to be compatible with Python3.

Enabled hacking check H231.

Change-Id: I2c41dc3ec83e79181e8fd50e76771a74c393269c"
peluse,2014-07-04 16:48:25,https://api.github.com/repos/openstack/swift/git/commits/51fa32f53d81864e9267fc40ce3fcfe494b62437,51fa32f53d81864e9267fc40ce3fcfe494b62437,"Increase Account Auditor Test Code Coverage

Some simple additional test code to bring coverage from 82% to 99%

Change-Id: I561bc0a043f3451bb0a84cad274fedc907e61ee8"
peluse,2014-07-04 12:17:03,https://api.github.com/repos/openstack/swift/git/commits/9150fb383e27c7e4f0bf5550e45a508b4882ccd1,9150fb383e27c7e4f0bf5550e45a508b4882ccd1,"Adjust timeout value in test_client_timeout

Per information filed in bug (and related bugs referenced in the
report) it appears that in TestObjectController.test_client_timeout
having a matching timeout value for both self.app.client_timeout
and SlowBody() appears to work however, as expected, a smaller
value in self.app.client_timeout also works where a larger
value fails.  With that short test combined with speculation and
related fixes, seems reasonable to merge what is suggested in
the bug report, drop the self.app.client_timeout to 0.05

Fixes Bug #1316716

Change-Id: Ib4c6d3bb275f6c50c62505c90656efa7ee566bc0"
peluse,2014-07-02 21:39:42,https://api.github.com/repos/openstack/swift/git/commits/bfa9139649c0ac7f75e8c9503cb04d06f7bae0b9,bfa9139649c0ac7f75e8c9503cb04d06f7bae0b9,"Fix potential missing key error in container_info

If upgrading from a non-storage policy enabled version of
swift to a storage policy enabled version its possible that
memcached will have an info structure that does not contain
the 'storage_policy"" key resulting in an unhandled exception
during the lookup.  The fix is to simply make sure we never
return the dict without a storage_policy key defined; if it
doesn't exist its safe to make it '0' as this means you're
in the update scenario and there's xno other possibility.

Change-Id: If8c88f67ba7a3180ad06b586372fe35c65807aac"
clayg,2014-07-01 04:49:49,https://api.github.com/repos/openstack/swift/git/commits/7dbf8324569d45897f2b4f05cd97299366eff23d,7dbf8324569d45897f2b4f05cd97299366eff23d,"Fix pop_queue for move object twice

With the two vector timestamp change some resolution was lost in the queue
entries that could lead to the reconciler being unable to successfully remove
a processed item from the queue in pop_queue.  To ensure the queue entries
with a significant offset can be successfully removed while still handling
the re-enqueued object case issue the DELETE with the timestamp slightly later
than the maximum of the queue entries last modified time (q_record) and
misplaced objects timestamp (q_ts).

Change-Id: I87b1e4b4256af3f71defb58c8137c303d1ae63be"
clayg,2014-06-25 18:38:54,https://api.github.com/repos/openstack/swift/git/commits/fb5a0f21ddfde12f503c4a7048d8b8ca1c2724ef,fb5a0f21ddfde12f503c4a7048d8b8ca1c2724ef,"Fix KeyError on Storage Policy Container Sync

In the proxy, container_info can return a 'storage_policy' of None.  When
you set a header value on a swob.Request to None that effectively just
delete's the key.  One path through the proxy during container sync was
counting on the the 'X-Backend-Storage-Policy-Index' being set which isn't
the case if the cached container_info if for a pre-policies container.

Also clean up some test cruft, tighten up the interface on FakeConn, and add
some object controller tests to exercise more interesting failure and handoff
code paths.

Change-Id: I643e08c208efdc5a39e840d9e96710ddad54236b"
StevenLang,2014-06-23 19:59:24,https://api.github.com/repos/openstack/swift/git/commits/7573fbd4985fb090cc315b5af9e7531dc900b7b8,7573fbd4985fb090cc315b5af9e7531dc900b7b8,"Object services user-agent string uses full name

It does not appear that, aside from the user-agent string, the strings
""obj-server"", ""obj-updater"", or ""obj-replicator"" (or ""obj-<anything>""*)
appear in the swift code base, aside from the directory containing the
object services code being named ""obj"".

Furthermore, the container, account, and proxy services construct their
user-agent string, as reported in the logs, using their full name. In
addition, this full name also shows up as the name of the process via
""ps"" or ""top"", etc., which can make it easier for admins to match log
entries with other tools.

For consistency, we update the object services to use an ""object-""
prefix rather than ""obj-"" in its user agent string.

* obj-etag does appear in a unit test, but not part of the regular
code.

Change-Id: I914fc189514207df2535731eda10cb4b3d30cc6c"
peluse,2014-07-02 21:39:42,https://api.github.com/repos/openstack/swift/git/commits/08006685577c0e3c85f0709945175f0c8689ae49,08006685577c0e3c85f0709945175f0c8689ae49,"Fix potential missing key error in container_info

If upgrading from a non-storage policy enabled version of
swift to a storage policy enabled version its possible that
memcached will have an info structure that does not contain
the 'storage_policy"" key resulting in an unhandled exception
during the lookup.  The fix is to simply make sure we never
return the dict without a storage_policy key defined; if it
doesn't exist its safe to make it '0' as this means you're
in the update scenario and there's xno other possibility.

Change-Id: If8e8f66d32819c5bfb2d1308e14643f3600ea6e9"
smerritt,2014-07-02 18:37:26,https://api.github.com/repos/openstack/swift/git/commits/b823e1602e4c5cb6bcf5360b3e1f6e8410e46401,b823e1602e4c5cb6bcf5360b3e1f6e8410e46401,"Fix exception raising in FakeConn

Timeout isn't an Exception, so Timeouts in tests weren't getting
raised. Instead, you'd sometimes have an HTTPResponse's .status be a
Timeout object, not an integer, which greatly confuses code that
expects an integer.

Also reorder the test that exposed the failure in the gate so it blows
up most times instead of sometimes do demonstrate the failure with out
this fix to FakeConn.

Change-Id: I76367a0575f84cad6b2f03e814f3f16bf96bc7d1"
clayg,2014-07-02 19:20:05,https://api.github.com/repos/openstack/swift/git/commits/620ff9b6738797f20b992a027301c32cf0dee17c,620ff9b6738797f20b992a027301c32cf0dee17c,"Fix order dependent test in proxy.test_server

TestObjectController.test_POST_backend_headers was being too picky about the
order of backend requests which when pushed through eventlet will not have a
stable order.  This change preserves the expectations and assertions while
removing the dependency on the order of the requests.

Change-Id: I7176ccb9223cd3dfc3c922b8b3d81eb514891d05"
clayg,2014-07-01 04:49:49,https://api.github.com/repos/openstack/swift/git/commits/8a3b65107d788a8590349fc4aa02e5c8c2ad9202,8a3b65107d788a8590349fc4aa02e5c8c2ad9202,"Fix pop_queue for move object twice

With the two vector timestamp change some resolution was lost in the queue
entries that could lead to the reconciler being unable to successfully remove
a processed item from the queue in pop_queue.  To ensure the queue entries
with a significant offset can be successfully removed while still handling
the re-enqueued object case issue the DELETE with the timestamp slightly later
than the maximum of the queue entries last modified time (q_record) and
misplaced objects timestamp (q_ts).

Change-Id: I4726243b3f7c4c1e98f0c578e7ffdecf4ec22199"
gholt,2014-06-25 18:19:25,https://api.github.com/repos/openstack/swift/git/commits/7fcbbebbebdb70925b7c1747c568e6c2e84e36e9,7fcbbebbebdb70925b7c1747c568e6c2e84e36e9,"SimpleClient http proxying

Previously, this code was attempting to set up http proxying but it
wasn't working. We noticed after a while when we saw traffic going
through an alternate route instead of our set of http proxies with
container sync.

Additional work and testing by clayg; thanks!

Change-Id: I840b8e55a80c13ae85c65bf68de261d735685b27"
clayg,2014-06-26 03:34:39,https://api.github.com/repos/openstack/swift/git/commits/3cad20570c79ec4b817b6998dc2e63bed1ea8c1d,3cad20570c79ec4b817b6998dc2e63bed1ea8c1d,"Add X-Backend-Timestamp on more object server responses

It's particularly interesting on writes (PUT, POST, DELETE) where the
current on-disk timestamp would prevent the object server from serving
the incoming request and returns 409 Conflict.

The FakeConn has also been updated to respond in kind for 409's on
expect and all responses generaly just cause it's good to keep fakes in
line with the reals - not that I expected any existing tests to break
because of the new headers.

Change-Id: Iac6fbd2f872a9521bb2db84a333365b69f54fb6c"
smerritt,2014-06-03 20:17:01,https://api.github.com/repos/openstack/swift/git/commits/b7243705a02e3348efe81e29622e8a31c70ead2a,b7243705a02e3348efe81e29622e8a31c70ead2a,"Small cleanup to ring serialization

Instead of catching TypeError and retrying without mtime, let's just
check and see if mtime is an allowed arg and decide based on
that. This way, if anything else raises TypeError we'll know about it.

Change-Id: Ib394d8176e2bc4bd53ace019ce5816369223c273"
nirmalthacker,2014-06-02 05:32:12,https://api.github.com/repos/openstack/swift/git/commits/b61fce6cbabf2181fed3f0c4bb83a2d3c40db100,b61fce6cbabf2181fed3f0c4bb83a2d3c40db100,"Container Auditor should log a warning if the devices path contains a non-directory.

If the devices path configured in container-server.conf contains a file
then an uncaught exception is seen in the logs. For example if file foo exists as such
/srv/1/node/foo then when the container-auditor runs, the exception that foo/containers is
not a directory is seen in the logs

This patch was essentially clayg and can be found in the bug

I tested it and wanted to get a feel of the openstack workflow so going through the
commit process

I have added a unit test as well as cleaned up and improved the unit test coverage
for this module.
- unit test for above fix is added
- unit test to verify exceptions that are raised in the module
- unit test to verify the logger's behavior
- unit test to verify mount_check behavior

Change-Id: I903b2b1e11646404cfb0551ee582a514d008c844
Closes-Bug: #1317257"
clayg,2014-06-25 18:38:54,https://api.github.com/repos/openstack/swift/git/commits/0f0c0e5553adeccdf6d95ee61b64ea84ffa79758,0f0c0e5553adeccdf6d95ee61b64ea84ffa79758,"Fix KeyError on Storage Policy Container Sync

In the proxy, container_info can return a 'storage_policy' of None.  When
you set a header value on a swob.Request to None that effectively just
delete's the key.  One path through the proxy during container sync was
counting on the the 'X-Backend-Storage-Policy-Index' being set which isn't
the case if the cached container_info if for a pre-policies container.

Also clean up some test cruft, tighten up the interface on FakeConn, and add
some object controller tests to exercise more interesting failure and handoff
code paths.

Change-Id: Ic379fa62634c226cc8a5a4c049b154dad70696b3"
matthewoliver,2014-06-30 02:55:37,https://api.github.com/repos/openstack/swift/git/commits/7904358a43b196e8b3afb1213ec119cbe7a6c2db,7904358a43b196e8b3afb1213ec119cbe7a6c2db,"Add SAIO fix for Ubuntu 12.04

The version of setup tools in Ubuntu 12.04 is too old and is causing
the SAIO instructions to fail when installing python-swiftclient.

The work around is to install python-swiftclient's dependencies
before running running:

  python setup.py develop

This change adds a note to users of Ubuntu 12.04 to replace step 2
of ""Getting the code"" with:

  cd $HOME/python-swiftclient; sudo pip install -r requirements.txt; \
                               python setup.py develop; cd -

Change-Id: I63f57bbf1f1158f8740f6137ad55ff49f12a316c
Closes-Bug: #1217288"
clayg,2014-06-26 03:21:28,https://api.github.com/repos/openstack/swift/git/commits/0a5b0033456f1a0fa6b743f6d2635df879dbc630,0a5b0033456f1a0fa6b743f6d2635df879dbc630,"Fix double request in simple client

The SimpleClient.base_request method need only to call urllib2.urlopen
once to get a response from the server.  Remove the duplicate call.

 * fixup tests that were poorly mocking urllib2
 * mock eventlet sleep because we're all busy

Change-Id: I6da93c689200351e9dbd9416b9c4bf9544571f15"
kazum,2014-04-22 00:28:15,https://api.github.com/repos/openstack/swift/git/commits/f2774a4d11bb005c0d54928477ad7b82afbf0cf3,f2774a4d11bb005c0d54928477ad7b82afbf0cf3,"Disable case-changing behavior in Eventlet

RFC 2616 says that HTTP header fields are case-insensitive.  However, there are
some S3 clients who don't accept normalized header by Swift and Eventlet.  For
example, AWS Java SDK expects that an etag header is 'ETag', not 'Etag'.

This patch disables Eventlet's header capitalization so that the swift3
middleware can normalize the response headers as those clients expect.

Note that this change requires a fix for Eventlet, which will be included in
the next Eventlet release (v0.15).

Change-Id: I6d3428b0dafef776bdb3ebac7639b3126fa5e60d"
smerritt,2014-06-06 21:29:44,https://api.github.com/repos/openstack/swift/git/commits/48d94d96b9dac92cecadc75e5f2defd2e1d056a2,48d94d96b9dac92cecadc75e5f2defd2e1d056a2,"Don't count 412 or 416 as errors in stats

The backend HTTP servers emit StatsD metrics of the form
<server>.<method>.timing and <server>.<method>.errors.timing
(e.g. object-server.GET.timing). Whether something counts as an error
or not is based on the response's HTTP status code.

Prior to this commit, ""success"" was 2xx, 3xx, or 404, while everything
else was considered ""error"". This adds 412 and 416 to the ""success""
set. Like 404, these status codes indicate that we got the request and
processed it without error, but the response was ""no"". They shouldn't
be in the same category as statuses like 507 that indicate something
stopped the request from being processed.

Change-Id: I5582a51cf6f64aa22c890da01aaaa077f3a54202"
smerritt,2014-06-24 17:37:28,https://api.github.com/repos/openstack/swift/git/commits/efe9f6284cab37f720b4b64e47bd692340fdc6e2,efe9f6284cab37f720b4b64e47bd692340fdc6e2,"Fix some spelling in comments

Change-Id: Id272dd9f603a42d9b22f80cff93716a5ed15698a"
peluse,2014-06-23 23:01:02,https://api.github.com/repos/openstack/swift/git/commits/441a171cf5dd8eb61601a0dbdd2835c10ca27245,441a171cf5dd8eb61601a0dbdd2835c10ca27245,"Fix issues with test_wsgi.py and Storage Policies

Discovered some tests that were coupling the code under test with the
storage policies configured in /etc/swift/swift.conf.  There was some
tests that created fake rings in their tempdirs, but didn't reset or
patch the POLICIES global.  So if your local config needed more rings
that the fake's were setting up (just 2) the tests would puke when they
loaded up an app that looked for rings.  I think this probably started
happening when we added eager object ring loading back into the proxy.

 * two TestCases in test_wsgi were missing @patch_policies
 * fixed issue with patch_policies that could cause state to bleed
   between tests
 * patch_policies' legacy and default collections get a FakeRing by
   default

 * drive-by cleanup for test_loadapp_proxy() ring serialized path
   handling
 * drive-by cleanup for test_internal_client that was doing basically
   the same thing as test_wsgi

Change-Id: Ia706000ba961ed24f2c22b81041e53a0c3f302fc"
peluse,2014-06-23 19:52:50,https://api.github.com/repos/openstack/swift/git/commits/873c52e608d46e4c34035a8dd3476e604fe2248e,873c52e608d46e4c34035a8dd3476e604fe2248e,"Replace POLICY and POLICY_INDEX with string literals

Replaced throughout code base &  tox'd. Functional as well
as probe tests pass with and without policies defined.

POLICY --> 'X-Storage-Policy'
POLICY_INDEX --> 'X-Backend-Storage-Policy-Index'

Change-Id: Iea3d06de80210e9e504e296d4572583d7ffabeac"
peluse,2014-06-21 13:38:04,https://api.github.com/repos/openstack/swift/git/commits/f95706ba8a4465b4c0c439430f83734d5c7224df,f95706ba8a4465b4c0c439430f83734d5c7224df,"Minor Updates to Storage Policy Docs

Fixed some grammar issues, formatting issues, clarrified some
wording now that its easier to read fully rendered.

Change-Id: Ie803dd1a84d50de7663a7099c32d81807701e188"
notmyname,2014-06-20 17:15:32,https://api.github.com/repos/openstack/swift/git/commits/1feaf6e2895d0646ea54452793379dc05f6dbab8,1feaf6e2895d0646ea54452793379dc05f6dbab8,"release notes for Swift 2.0

Change-Id: I2bf91c755d2f779639c773fcfe2a3b54a584b4ae"
notmyname,2014-06-20 03:59:17,https://api.github.com/repos/openstack/swift/git/commits/53d4d2130086c656f47e3a7cb5d6c411e8306546,53d4d2130086c656f47e3a7cb5d6c411e8306546,"Merge storage policies feature commit chain into master

Change-Id: I0a2cc5771e3f9d56dba5b40ba4ec83cd16f57eef"
peluse,2014-04-07 21:22:27,https://api.github.com/repos/openstack/swift/git/commits/e52e8bc9177f6ca860bc69672588811a37440fc2,e52e8bc9177f6ca860bc69672588811a37440fc2,"Add Storage Policy Documentation

Add overview and example information for using Storage Policies.

DocImpact
Implements: blueprint storage-policies
Change-Id: I6f11f7a1bdaa6f3defb3baa56a820050e5f727f1"
clayg,2014-06-11 05:17:47,https://api.github.com/repos/openstack/swift/git/commits/c1dc2fa624d2abaea1c872a4e98bf7880c07c236,c1dc2fa624d2abaea1c872a4e98bf7880c07c236,"Add two vector timestamps

The normalized form of the X-Timestamp header looks like a float with a fixed
width to ensure stable string sorting - normalized timestamps look like
""1402464677.04188""

To support overwrites of existing data without modifying the original
timestamp but still maintain consistency a second internal offset
vector is append to the normalized timestamp form which compares and
sorts greater than the fixed width float format but less than a newer
timestamp.  The internalized format of timestamps looks like
""1402464677.04188_0000000000000000"" - the portion after the underscore
is the offset and is a formatted hexadecimal integer.

The internalized form is not exposed to clients in responses from Swift.
Normal client operations will not create a timestamp with an offset.

The Timestamp class in common.utils supports internalized and normalized
formatting of timestamps and also comparison of timestamp values.  When the
offset value of a Timestamp is 0 - it's considered insignificant and need not
be represented in the string format; to support backwards compatibility during
a Swift upgrade the internalized and normalized form of a Timestamp with an
insignificant offset are identical.  When a timestamp includes an offset it
will always be represented in the internalized form, but is still excluded
from the normalized form.  Timestamps with an equivalent timestamp portion
(the float part) will compare and order by their offset.  Timestamps with a
greater timestamp portion will always compare and order greater than a
Timestamp with a lesser timestamp regardless of it's offset.  String
comparison and ordering is guaranteed for the internalized string format, and
is backwards compatible for normalized timestamps which do not include an
offset.

The reconciler currently uses a offset bump to ensure that objects can move to
the wrong storage policy and be moved back.  This use-case is valid because
the content represented by the user-facing timestamp is not modified in way.
Future consumers of the offset vector of timestamps should be mindful of HTTP
semantics of If-Modified and take care to avoid deviation in the response from
the object server without an accompanying change to the user facing timestamp.

DocImpact
Implements: blueprint storage-policies
Change-Id: Id85c960b126ec919a481dc62469bf172b7fb8549"
clayg,2014-06-06 18:35:34,https://api.github.com/repos/openstack/swift/git/commits/8d20e0e927d781baad1b71230bfafad6e74661eb,8d20e0e927d781baad1b71230bfafad6e74661eb,"Fix object-expirer for missing objects

Currently if the object-expirer goes to delete an object and the primary nodes
are unavailable, or the object is on handoffs - the object servers are unable
to verify the x-if-delete-at timestamp and return 412, without writing a
tombstone or updating the containers.  The expirer treats 412 as success and
the dark data is not removed form the object servers nor the object removed in
the listing.

As a side effect of this bug, if the expirer encounters split brain the delete
would never get processed in the correct storage policy.

It seems it's just not correct to treat the lack of data as success.  Now the
object server will treat x-if-delete at against a non-existent object as a
404, and to distinguish from a successfull process of an x-if-delete-at
request, will return 204.

The expirer will treat a 404 response from swift as a failure, and will
continue to attempt to expire the object until it is older that it's
configurable reclaim age.  However swift will only return 404 if the majority
of nodes are able to return success, or if only even a single node is able to
accept the x-if-delete-at request the containers will get updated and
replicaiton will settle the tombstone - the subsequent x-if-delete-at request
will 412 and be removed from the queue.

It's worth noting that if an object with x-delete-at meta is DELETED (by a
client request) an async update for the expiring update containers will be
processed to remove the queue entry - but if no primary nodes handle the
DELETE request replication will never remove the expiring entry and assuming
it's scheduled for beyond the tombstones reclaim age - the queue entry will
not be processable.  In this case the expirer will attempt to DELETE the
object (and get 404s) in vain until the queue entry passes the configurable
reclaim age.

DocImpact
Implements: blueprint storage-policies
Change-Id: I66260e99fda37e97d6d2470971b6f811ee9e01be"
peluse,2014-04-16 22:17:30,https://api.github.com/repos/openstack/swift/git/commits/2e1ea825aa0b73ef0dbe7eae3bb141c187445ffe,2e1ea825aa0b73ef0dbe7eae3bb141c187445ffe,"Add Storage Policy support to the Account Reaper

Extract X-Storage-Policy-Index header from container listing request
and use it when making direct object DELETE requests.

DocImpact
Implements: blueprint storage-policies
Change-Id: Icd4b2611b4169e46f216ff9a9839af732971a2bf"
peluse,2014-04-14 21:04:37,https://api.github.com/repos/openstack/swift/git/commits/8326dc9f2a34581b1e5ab0d27b32d3073827296f,8326dc9f2a34581b1e5ab0d27b32d3073827296f,"Add Storage Policy Support to Recon Middleware

Recon middleware returns object ring file MD5 sums; this patch
updates it to include other object files that may be present
because of Storage Policies.  Also adds unit test coverage for
the MD5 reporting function which previously had none.

The recon script will now check all rings the server responds with
match the on-disk md5's regardless of server-type; including any
storage policy object rings.

Note the small change to the ring save method, needed to
stimulate the right code paths in 2.6 and 2.7 versions of
gzip to enable testing of ring MD5 sums.

DocImpact
Implements: blueprint storage-policies
Change-Id: I01efd2999d6d9c57ee8693ac3a6236ace17c5566"
peluse,2014-04-09 23:10:13,https://api.github.com/repos/openstack/swift/git/commits/6da9799917b632675ee69fe315bacfdb4c7c926a,6da9799917b632675ee69fe315bacfdb4c7c926a,"Add Storage Policy Support to Container Sync

Have container sync get its object ring from POLICIES now,
update tests to use policy index from container_info and pass
that along for use in ring selection.

This change also introduced the option of specifiying in the cluster info
which of the relam/cluster's is the current realm/cluster.

DocImpact
Implements: blueprint storage-policies
Change-Id: If57d3b0ff8c395f21c81fda76458bc34fcb23257"
peluse,2014-03-18 00:34:35,https://api.github.com/repos/openstack/swift/git/commits/019d7f5cda388c3053e369ca70902d03b72cca22,019d7f5cda388c3053e369ca70902d03b72cca22,"Add Storage Policy Support to list_endpoints

This patch makes list_endpoints policy aware so that the object is
looked up in the right ring and its actual locations returned to the
client.

DocImpact
Implements: blueprint storage-policies
Change-Id: I56d4b0f4f321a4c72b11ec44d868a194d02ea3a3"
zhouyuan,2014-04-15 08:06:22,https://api.github.com/repos/openstack/swift/git/commits/ad2a9cefe5f7355e1861f9f76b9cb2c59b6a83eb,ad2a9cefe5f7355e1861f9f76b9cb2c59b6a83eb,"Fixes probe tests with non-zero default storage policy

Add headers param to direct_client.direct_get_object, which is used in
probetests to passthrough the X-Storage-Policy-Index header.

DocImpact
Implements: blueprint storage-policies
Change-Id: I19adbbcefbc086c8467bd904a275d55cde596412"
clayg,2014-04-29 00:05:43,https://api.github.com/repos/openstack/swift/git/commits/fbcfb83566c2a56245ed10823f09c1007845b4f5,fbcfb83566c2a56245ed10823f09c1007845b4f5,"Add LRUCache to common.utils

This decorator will memonize a function using a fixed size cache that evicts
the oldest entries.  It also supports a maxtime paramter to configure a
""time-to-live"" for entries in the cache.

The reconciler code uses this to cache computations of the correct storage
policy index for a container for 30 seconds.

DocImpact
Implements: blueprint storage-policies
Change-Id: I0f220869e33c461a4100b21c6324ad725da864fa"
clayg,2014-04-29 07:21:08,https://api.github.com/repos/openstack/swift/git/commits/a14d2c857c9bde7e55554d15eca89a33dba9e339,a14d2c857c9bde7e55554d15eca89a33dba9e339,"Enqueue misplaced objects during container replication

After a container database is replicated, a _post_replicate_hook will enqueue
misplaced objects for the container-reconciler into the .misplaced_objects
containers.  Items to be reconciled are ""batch loaded"" into the reconciler
queue and the end of a container replication cycle by levering container
replication itself.

DocImpact
Implements: blueprint storage-policies
Change-Id: I3627efcdea75403586dffee46537a60add08bfda"
zhouyuan,2014-05-28 00:25:15,https://api.github.com/repos/openstack/swift/git/commits/6cc10d17de04a7ec19727880cd112898ca25d238,6cc10d17de04a7ec19727880cd112898ca25d238,"Update bin scripts to be storage policy aware

swift-container-info:
    Print policy container info

swift-object-info:
    Allow to specify storage policy name when looking for object info
    Notify if there is missmatch between ring location and the actual
    object path in filesystem

swift-get-nodes:
    Allow to specify storage policy name when looking for account/
    container/object ring location
    Notify if there is missmatch between ring and the policy

Lookup policy name in swift.conf; 'Legacy' container will use
policy-0's name; 'Unknown' is shown if policy not found in swift.conf

DocImpact
Implements: blueprint storage-policies
Change-Id: I450d40dc6e2d8f759187dff36d658e52737ae2a5"
zhouyuan,2014-04-09 11:15:04,https://api.github.com/repos/openstack/swift/git/commits/c11ac012522a7e742ac942637af12a3e090d53ef,c11ac012522a7e742ac942637af12a3e090d53ef,"Add functional tests for Storage Policy

 * additional container tests
 * refactor test cross policy copy
 * make functional tests cleanup better

In-process functional tests only define a single ring and will skip some of
the multi-storage policy tests, but have been updated to reload_policies with
the patched swift.conf.

DocImpact
Implements: blueprint storage-policies
Change-Id: If17bc7b9737558d3b9a54eeb6ff3e6b51463f002"
zaitcev,2014-06-18 05:35:59,https://api.github.com/repos/openstack/swift/git/commits/b02f0db126b873902bdb63f94a3c412082e14a54,b02f0db126b873902bdb63f94a3c412082e14a54,"Refactoring storage policies merge_timestamps

 * base implementation of is_deleted phrased to use _is_deleted
 * wrap pre-conn coded _is_deleted inside a transation for merge_timestamps

Implements: blueprint storage-policies
Change-Id: I6a948908c3e45b70707981d87171cb2cb910fe1e"
peluse,2014-05-28 02:02:52,https://api.github.com/repos/openstack/swift/git/commits/00a162c4d42a0f7813058d2ae5c3208b4f7a3157,00a162c4d42a0f7813058d2ae5c3208b4f7a3157,"Add Storage Policy Support to Accounts

This change updates the account HEAD handler to report out per
policy object and byte usage for the account.  Cumulative values
are still reported and policy names are used in the report
out (unless request is sent to an account server directly in
which case policy indexes are used for easier accounting).

Below is an example of the relevant HEAD response for a cluster
with 3 policies and just a few small objects:

   X-Account-Container-Count: 3
   X-Account-Object-Count: 3
   X-Account-Bytes-Used: 21
   X-Storage-Policy-Bronze-Object-Count: 1
   X-Storage-Policy-Bronze-Bytes-Used: 7
   X-Storage-Policy-Silver-Object-Count: 1
   X-Storage-Policy-Silver-Bytes-Used: 7
   X-Storage-Policy-Gold-Object-Count: 1
   X-Storage-Policy-Gold-Bytes-Used: 7

Set a DEFAULT storage_policy_index for existing container rows during
migration.

Copy existing object_count and bytes_used in policy_stat table during
migration.

DocImpact
Implements: blueprint storage-policies
Change-Id: I5ec251f9a8014dd89764340de927d09466c72221"
clayg,2014-05-28 00:47:21,https://api.github.com/repos/openstack/swift/git/commits/81bc31e6ecebb63deb33406b342aebc9e44d3c51,81bc31e6ecebb63deb33406b342aebc9e44d3c51,"Merge container storage_policy_index

Keep status_changed_at in container databases current with status changes that
occur as a result of container creation, deletion, or re-creation.

Merge container put/delete/created timestamps when handling replicate
responses from remote servers in addition to during the handling of the
REPLICATE request.

When storage policies are configured on a cluster send status_changed_at,
object_count and storage_policy_index as part of container replication sync
args.

Use status_changed_at during replication to determine the oldest active
container and merge storage_policy_index.

DocImpact
Implements: blueprint storage-policies
Change-Id: Ib9a0dd42c271145e641437dc04d0ebea1e11fc47"
clayg,2014-04-29 04:27:29,https://api.github.com/repos/openstack/swift/git/commits/3dff1249f5972460431ca1220ed7da407ce55bef,3dff1249f5972460431ca1220ed7da407ce55bef,"Add reconciler probetest outline

You can manually setup a split brain scenario for reconciler testing with the
enqueue script using the machinery from the included probetest.  Evoke the
test as a script with with 'split-brain' command for more help.

DocImpact
Implements: blueprint storage-policies
Change-Id: I3a7b3167d674eba5f6e4072b176f6c4d29cdcd72"
clayg,2014-04-29 03:03:48,https://api.github.com/repos/openstack/swift/git/commits/3fc4d6f91d48a7b68f108e401a5ee8e2fcdc0100,3fc4d6f91d48a7b68f108e401a5ee8e2fcdc0100,"Add container-reconciler daemon

This daemon will take objects that are in the wrong storage policy and
move them to the right ones, or delete requests that went to the wrong
storage policy and apply them to the right ones. It operates on a
queue similar to the object-expirer's queue.

Discovering that the object is in the wrong policy will be done in
subsequent commits by the container replicator; this is the daemon
that handles them once they happen.

Like the object expirer, you only need to run one of these per cluster
see etc/container-reconciler.conf.

DocImpact
Implements: blueprint storage-policies
Change-Id: I5ea62eb77ddcbc7cfebf903429f2ee4c098771c9"
clayg,2014-05-27 22:33:55,https://api.github.com/repos/openstack/swift/git/commits/d495d3ec72917517aa159159d89dcf881888ca2b,d495d3ec72917517aa159159d89dcf881888ca2b,"Extend direct_client

Rework header handling and add some methods needed by the reconciler.

 * response headers are case insensitive HeaderKeyDicts
 * add direct client container obj put and delete
 * add headers param to direct head object
 * add headers to DirectClientException

DirectClientException is a subclass of ClientException with a convience
constructor.  ClientException now supports an http_headers kwarg.

Exceptions raised from direct_client will include headers.

DocImpact
Implements: blueprint storage-policies
Change-Id: Ia484d569619df0bf85f973e4e916de2ac6401d5e"
clayg,2014-04-17 00:16:57,https://api.github.com/repos/openstack/swift/git/commits/8bec50838cfe86ef5f143551c6a5af8fd0f5e621,8bec50838cfe86ef5f143551c6a5af8fd0f5e621,"Extend interface on InternalClient

 * add get_object
 * allow extra headers passthrough on HEAD/metadata reqeusts
 * expose (account|container|get_object)_ring properties

Pipeline propety access to the auto_create_account_prefix also allows us to
bypass the early exit on a container HEAD for auto_create_accounts if the
container-updater hasn't cycled yet.

Allow overriding of storage policy index.

This is something the reconciler will need so that it can GET from one
policy, PUT in another, and then DELETE from the first one again.

DocImpact
Implements: blueprint storage-policies
Change-Id: I9b287d15f2426022d669d1186c9e22dd8ca13fb9"
peluse,2014-03-18 18:06:52,https://api.github.com/repos/openstack/swift/git/commits/b9707d497ca8c3755f480f08814f921956483b7d,b9707d497ca8c3755f480f08814f921956483b7d,"Add Storage Policy Support to ssync

This patch makes ssync policy aware so that clusters using storage
policies and ssync replication will replicate objects in all policies.

DocImpact
Implements: blueprint storage-policies
Change-Id: I64879077676d764c6330e03734fc6665bb26f552"
peluse,2014-03-18 17:50:17,https://api.github.com/repos/openstack/swift/git/commits/04f297036272320403d86e737ae6b453171d141e,04f297036272320403d86e737ae6b453171d141e,"Add storage policy support for the Replicator

This makes it so that objects stored in all policies get replicated
properly. This is only for rsync replication, not ssync.

DocImpact
Implements: blueprint storage-policies
Change-Id: Ifdb4624841f35953ba80189e669d3ef15d5563fd"
peluse,2014-03-18 01:38:21,https://api.github.com/repos/openstack/swift/git/commits/1a0e4d91977bf29a5d70bddcff99b67195669e7f,1a0e4d91977bf29a5d70bddcff99b67195669e7f,"Add Storage Policy Support to the Auditor

This patch makes the object auditor policy-aware, so it'll audit
objects in any storage policy.

DocImpact
Implements: blueprint storage-policies
Change-Id: I94e3a7937d9814b9ecef6ca35371e245a43513d3"
smerritt,2014-03-18 00:54:42,https://api.github.com/repos/openstack/swift/git/commits/d5ca365965fc20117cf7bcebeedf81f965abff76,d5ca365965fc20117cf7bcebeedf81f965abff76,"Add Storage Policy support to Object Updates

The object server will now send its storage policy index to the
container server synchronously and asynchronously (via async_pending).

Each storage policy gets its own async_pending directory under
/srv/node/$disk/objects-$N, so there's no need to change the on-disk
pickle format; the policy index comes from the async_pending's
filename. This avoids any hassle on upgrade. (Recall that policy 0's
objects live in /srv/node/$disk/objects, not objects-0.)  Per-policy
tempdir as well.

Also clean up a couple little things in the object updater. Now it
won't abort processing when it encounters a file (not directory) named
""async_pending-\d+"", and it won't process updates in a directory that
does not correspond to a storage policy.

That is, if you have policies 1, 2, and 3, but there's a directory on
your disk named ""async_pending-5"", the updater will now skip over that
entirely. It won't even bother doing directory listings at all. This
is a good idea, believe it or not, because there's nothing good that
the container server can do with an update from some unknown storage
policy. It can't update the listing, it can't move the object if it's
misplaced... all it can do is ignore the request, so it's better to
just not send it in the first place. Plus, if this is due to a
misconfiguration on one storage node, then the updates will get
processed once the configuration is fixed.

There's also a drive by fix to update some backend http mocks for container
update tests that we're not fully exercising their their request fakes.
Because the object server container update code is resilient to to all manor
of failure from backend requests the general intent of the tests was
unaffected but this change cleans up some confusing logging in the debug
logger output.

The object-server will send X-Storage-Policy-Index headers with all
requests to container severs, including X-Delete containers and all
object PUT/DELETE requests.  This header value is persisted in the
pickle file for the update and sent along with async requests from the
object-updater as well.

The container server will extract the X-Storage-Policy-Index header from
incoming requests and apply it to container broker calls as appropriate
defaulting to the legacy storage policy 0 to support seemless migration.

DocImpact
Implements: blueprint storage-policies
Change-Id: I07c730bebaee068f75024fa9c2fa9e11e295d9bd

add to object updates

Change-Id: Ic97a422238a0d7bc2a411a71a7aba3f8b42fce4d"
clayg,2014-05-27 08:17:13,https://api.github.com/repos/openstack/swift/git/commits/3824ff3df71975194fa1b050255c0da8c1acc598,3824ff3df71975194fa1b050255c0da8c1acc598,"Add Storage Policy support to Object Server

Objects now have a storage policy index associated with them as well;
this is determined by their filesystem path. Like before, objects in
policy 0 are in /srv/node/$disk/objects; this provides compatibility
on upgrade. (Recall that policy 0 is given to all existing data when a
cluster is upgraded.) Objects in policy 1 are in
/srv/node/$disk/objects-1, objects in policy 2 are in
/srv/node/$disk/objects-2, and so on.

 * 'quarantined' dir already created 'objects' subdir so now there
   will also be objects-N created at the same level

This commit does not address replicators, auditors, or updaters except
where method signatures changed. They'll still work if your cluster
has only one storage policy, though.

DocImpact
Implements: blueprint storage-policies
Change-Id: I459f3ed97df516cb0c9294477c28729c30f48e09"
clayg,2014-05-27 23:57:25,https://api.github.com/repos/openstack/swift/git/commits/4321bb0af6d7f7593ec507b20a519909055fd9f0,4321bb0af6d7f7593ec507b20a519909055fd9f0,"Add Storage Policy support to Containers

Containers now have a storage policy index associated with them,
stored in the container_stat table. This index is only settable at
container creation time (PUT request), and cannot be changed without
deleting and recreating the container. This is because a container's
policy index will apply to all its objects, so changing a container's
policy index would require moving large amounts of object data
around. If a user wants to change the policy for data in a container,
they must create a new container with the desired policy and move the
data over.

Keep status_changed_at up-to-date with status changes.

In particular during container recreation and replication.

When a container-server receives a PUT for a deleted database an extra UPDATE
is issued against the container_stat table to notate the x-timestamp of the
request.

During replication if merge_timestamps causes a container's status to change
(from DELETED to ACTIVE or vice-versa) the status_changed_at field is set to
the current time.

Accurate reporting of status_changed_at is useful for container replication
forensics and allows resolution of ""set on create"" attributes like the
upcoming storage_policy_index.

Expose Backend container info on deleted containers.

Include basic container info in backend headers on 404 responses from the
container server.  Default empty values are used as placeholders if the
database does not exist.

Specifically the X-Backend-Status-Changed-At, X-Backend-DELETE-Timestamp and
the X-Backend-Storage-Policy-Index value will be needed by the reconciler to
deal with reconciling out of order object writes in the face of recently
deleted containers.

 * Add ""status_changed_at"" key to the response from ContainerBroker.get_info.
 * Add ""Status Timestamp"" field to swift.cli.info.print_db_info_metadata.
 * Add ""status_changed_at"" key to the response from AccountBroker.get_info.

DocImpact
Implements: blueprint storage-policies
Change-Id: Ie6d388f067f5b096b0f96faef151120ba23c8748"
clayg,2014-04-29 02:22:51,https://api.github.com/repos/openstack/swift/git/commits/7624b198cfc6b0385fd3e1d5de8e75207e36223d,7624b198cfc6b0385fd3e1d5de8e75207e36223d,"Update FakeRing and FakeLogger

FakeLogger gets better log level handling

Parameterize logger on some daemons which were previously
unparameterized and try and use the interface in tests.

FakeRing use more real code

The existing FakeRing mock's implementation bit me on some pretty subtle
character encoding issue by-passing the hash_path code that is normally
part of get_part_nodes.  This change tries to exercise more of the real
ring code paths when it makes sense and provide a better Fake for use in
testing.

Add write_fake_ring helper to test.unit for when you need a real ring.

DocImpact
Implements: blueprint storage-policies
Change-Id: Id2e3740b1dd569050f4e083617e7dd6a4249027e"
peluse,2014-03-17 19:18:25,https://api.github.com/repos/openstack/swift/git/commits/46c68aebd14e5c9ee20a89e7638e1daac4576e7b,46c68aebd14e5c9ee20a89e7638e1daac4576e7b,"Add Storage Policy Support

The basic idea here is to replace the use of a single object ring in
the Application class with a collection of object rings. The
collection includes not only the Ring object itself but the policy
name associated with it, the filename for the .gz and any other
metadata associated with the policy that may be needed. When
containers are created, a policy (thus a specific obj ring) is
selected allowing apps to specify policy at container creation time
and leverage policies simply by using different containers for object
operations.

The policy collection is based off of info in the swift.conf file.
The format of the sections in the .conf file is as follows:

swift.conf format:

    [storage-policy:0]
    name = chicken

    [storage-policy:1]
    name = turkey
    default = yes

With the above format:

- Policy 0 will always be used for access to existing containers
  without the policy specified. The ring name for policy 0 is always
  'object', assuring backwards compatiblity. The parser will always
  create a policy 0 even if not specified

- The policy with 'default=yes' is the one used for new container
  creation. This allows the admin to specify which policy is used without
  forcing the application to add the metadata.

This commit simply introduces storage policies and the loading
thereof; nobody's using it yet. That will follow in subsequent
commits.

Expose storage policies in /info

DocImpact
Implements: blueprint storage-policies
Change-Id: Ica05f41ecf3adb3648cc9182f11f1c8c5c678985"
notmyname,2014-06-06 18:46:41,https://api.github.com/repos/openstack/swift/git/commits/e00da6cabc10b28b55cd1f0d128751f33437fa9e,e00da6cabc10b28b55cd1f0d128751f33437fa9e,"properly quote www-authenticate header value

HTTP header values should be quoted. Since the WWW-Authenticate
header value contains user-supplied strings, it's important to
ensure it's properly quoted to ensure the integrity of the protocol.

Previous to this patch, the URL was unquoted and then the unquoted
value was returned in the header. This patch re-quotes the value
when it is set on the response.

This is filed as CVS-2014-3497

Fixes bug 1327414

Change-Id: If8bd8842f2ce821756e9b4461a18a8ac8d42fb8c"
smerritt,2014-06-12 23:51:28,https://api.github.com/repos/openstack/swift/git/commits/12b81b2e6166eb4b36f83240bd7cb8f10b7657d8,12b81b2e6166eb4b36f83240bd7cb8f10b7657d8,"Fix SLO test with old simplejson

Our requirements.txt contains ""simplejson>=2.0.9"". With that version,
attempting to decode invalid JSON raises ValueError, not
simplejson.JSONDecodeError. In fact, there is no such thing as
JSONDecodeError; it isn't introduced until a later version. Also,
stdlib's json module doesn't have a JSONDecodeError either. However,
JSONDecodeError inherits from ValueError, so we can just catch that
instead.

Also added a better failure message when invalid JSON is detected;
we'll now fail immediately instead of later in some assertEqual().

Change-Id: I7f0db20b2d72e89c961cb43daa6888ecd878f769"
alex,2014-05-19 14:21:03,https://api.github.com/repos/openstack/swift/git/commits/fa023eb2d66291e05703bdefa960ab0ad440d5a9,fa023eb2d66291e05703bdefa960ab0ad440d5a9,"Changed several files to be Python3 friendly

The print syntax has been changed to be Python3 compatible.

Change-Id: Id3fcbab390f08dcb3380cfda16d7b820b03ef683"
peluse,2014-06-10 15:08:13,https://api.github.com/repos/openstack/swift/git/commits/d32169c9c869b96c1b9db6654b9d8e6f47fc2686,d32169c9c869b96c1b9db6654b9d8e6f47fc2686,"Change assertCalledWith to assert_called_with

In test_ptime() 2 uses of the former failed to assert with bogus
values used in the assert.  Using assert_called_with() instead
correctly performs the assertion.

Change-Id: Idbd918f8e8d3ec5a4110725b949710fb54b4ba9a"
peluse,2014-06-06 21:46:42,https://api.github.com/repos/openstack/swift/git/commits/d3b9449498e0080aee27aa91f29ffcc48360ed86,d3b9449498e0080aee27aa91f29ffcc48360ed86,"Mock time for audit test 'test_sleeper'

The object auditor unit test, test_sleeper, needs to mock out time
to ensure run variations in the test environment do not skew the
results.

Change-Id: I6ef15e88d6f760bc805e4bb6a6270751984624ff
Closes-Bug: 1321019"
dpgoetz,2014-05-27 16:52:39,https://api.github.com/repos/openstack/swift/git/commits/ab510952efdd5333e197d23042816ba6ecfa3339,ab510952efdd5333e197d23042816ba6ecfa3339,"xLO bug with auth tokens expiring during download.

Just put SLO and DLO after any auth middleware. This works because when
the request goes through that middleware in the pipeline the
authentication takes place: validation of the token, setting up who the
user is, and setting the authorization call back. Each subrequest made
for the segments will be subjected to that authorization call back which
verifies the user has access to the individual segments.

To get this to work with keystone, the keystone identity is set up
during __call__ and applied to the authorize function using a
functools.partial. When the authorize function is later called from the
environ by the proxy server the idenity that was set up when the request
passed through the auth middleware is used, not what can be pulled out
of the possibly altered state of the request's environment.

DocImpact
fixes bug: 1315133

Change-Id: I7827dd2d9dfbb3c6424773fb2891355d47e372ba"
replay,2014-06-04 06:49:13,https://api.github.com/repos/openstack/swift/git/commits/19a574f304a65bc3a55994f27bd1fc883fedaf78,19a574f304a65bc3a55994f27bd1fc883fedaf78,"Fixes typo in man page

There is a simple typo in the man page of proxy-server.conf,
""client_timeout"" is written as ""client_timeoutt"".
This commit fixes it.

Closes-Bug: #1326237
Change-Id: I98777f523906e4ed625de8f20a96979ea627aa1f"
berendt,2014-05-14 14:40:42,https://api.github.com/repos/openstack/swift/git/commits/3beea4d730c549af7130ed4b685a572a9820450f,3beea4d730c549af7130ed4b685a572a9820450f,"replaced e.message with a bare ""e"" object ref

Change-Id: Ia4fa7ab0860532a71a531c13ee2125666547136e"
zaitcev,2014-06-02 22:54:30,https://api.github.com/repos/openstack/swift/git/commits/a6da4b851cd0d8240647503d1c9ea534a179c29a,a6da4b851cd0d8240647503d1c9ea534a179c29a,"isolate representation from content in GET request

Container server representation of data (received from backend) is isolated
into `create_listing()` call. GET() method will call `create_listing()`
when it's ready to create a serialized object listing. It will allow us to
customize that representation: get different listing, if backend supports
more interesting queries, for example.

Change-Id: I4fa03357d3d9e697bc3e1fb5da42d7572c6ae9b3"
smerritt,2014-06-02 16:14:22,https://api.github.com/repos/openstack/swift/git/commits/b5d7c1eaacf74a00af518059653abb9455d446dc,b5d7c1eaacf74a00af518059653abb9455d446dc,"Remove unused variable

The tempurl functional tests would fail if you put tempurl.methods in
the proxy server's disallowed_sections. The test assumed that the
presence of the key 'tempurl' implied the presence of the subkey
'methods', but since 9cbf8a3 landed, operators can remove arbitrary
things from /info.

Normally I'd just change x['methods'] to x.get('methods', []), but it
turns out this was setting up a class variable that nobody ever looked
out again, so removing the code also works.

Change-Id: Ie899d146bc6fff81a5fae77815897244e8ec6bec"
gholt,2014-05-27 21:10:47,https://api.github.com/repos/openstack/swift/git/commits/11bbc09bd74959206fc2b15e5a7a1811e11f37c6,11bbc09bd74959206fc2b15e5a7a1811e11f37c6,"Add debug logging to container sync requests

Also fixed a bug where SimpleClient would send ?format=json for object
requests, which is not necessary.

Change-Id: If06a7dcebc9de2d7c8b28a046d60b902dae821c1"
peluse,2014-04-18 17:16:11,https://api.github.com/repos/openstack/swift/git/commits/408588389576f5a239651034bee25c0961b12c81,408588389576f5a239651034bee25c0961b12c81,"Add Ratelimit parameters to /info

We previously registered with no parameters, added parms so they
are displayed as follows (example):

""ratelimit"": {""max_sleep_time_seconds"": 60.0,
""container_listing_ratelimits"": [[0, 100.0], [10, 50.0], [50, 20.0]],
""container_ratelimits"": [[0, 100.0], [10, 50.0], [50, 20.0]],
""account_ratelimit"": 1.0}

Note that not all parameters are exposed (intentionally) via /info

Change-Id: I36c7ef15af17e3eb8ebb93429035bd06d089a945
Closes-Bug: 1308989"
alex,2014-05-26 21:05:42,https://api.github.com/repos/openstack/swift/git/commits/181e9496fa3568b7b1442fbce2c33f58cd3c25a3,181e9496fa3568b7b1442fbce2c33f58cd3c25a3,"Fixed a handful of typos

Change-Id: I8cb2de27818332be587df7321ef567f8399910a9"
gholt,2014-05-22 19:37:53,https://api.github.com/repos/openstack/swift/git/commits/2d00f7b7bab0048fd6644801327b92d550043a11,2d00f7b7bab0048fd6644801327b92d550043a11,"New log_max_line_length option.

Log lines can get quite large, as we previously noticed with rsync error
log lines. We added a setting to cap those, but it really looks like we
should have just done this overall limit. We noticed the issue when we
switched to UDP syslogging and it would occasionally blow past the 16436
lo MTU! This causes Python's logging code to get an error and hilarity
ensues.

Change-Id: I44bdbe68babd58da58c14360379e8fef8a6b75f7"
notmyname,2014-05-21 16:37:22,https://api.github.com/repos/openstack/swift/git/commits/85c03d8b1d44829f26965208ef02b6f8aa02d143,85c03d8b1d44829f26965208ef02b6f8aa02d143,"taking the global reqs that we can

Change-Id: Icfdeeab14e90728aa8167ad6587d51e9b10cb846"
dpgoetz,2014-05-20 19:33:59,https://api.github.com/repos/openstack/swift/git/commits/9cbf8a3f5b8f21f528eb7289b7cb3c3c07763e1e,9cbf8a3f5b8f21f528eb7289b7cb3c3c07763e1e,"Add ability to remove subsections from /info

Change-Id: Ic881065962cf5f69f7a5b64f6e38d9e6e1f8fd18"
gholt,2014-05-20 20:19:47,https://api.github.com/repos/openstack/swift/git/commits/4350152828dc8cade3ae9ec1116e7ceb8d8d98a5,4350152828dc8cade3ae9ec1116e7ceb8d8d98a5,"Container sync no longer sending swift_bytes value

Container sync had a bug where it'd send out the trailing
""; swift_bytes=xxx"" part of the content-type header. That trailing part
is just for internal cluster usage by SLO. Since that needed to be
stripped in two places now, I separated it out to a function that both
spots call.

Change-Id: Ibd6035d7a6b78205344bcc9d98bc1b7a9d463427"
notmyname,2014-05-21 00:28:19,https://api.github.com/repos/openstack/swift/git/commits/5f0160bdde1eda10858ce0985ed816e8cc071d10,5f0160bdde1eda10858ce0985ed816e8cc071d10,"Change the default token logged length to 16

Based on comments from deployers at the Juno OpenStack summit,
limiting the default logged token length (to, by default, prevent
tokens from being fully logged) is a good idea.

Change-Id: I58980e85329d99de41f1c08f75e85973452317b1"
gholt,2014-05-20 15:29:51,https://api.github.com/repos/openstack/swift/git/commits/4acce68e3368bb861c423e559ee4f106518c8106,4acce68e3368bb861c423e559ee4f106518c8106,"Make the new xprofile tests optional.

On Lucid at least, xprofile doesn't work. While others try to figure out the
underlying issue, this patch would just skip the tests if the profiling code
can not be imported.

Change-Id: I0fee3f729742cc727edc2adabb4ed782bea7798f"
berendt,2014-05-20 09:39:13,https://api.github.com/repos/openstack/swift/git/commits/ac2dbb0f1f1e3530bf3b479b5570905a9fa8e50e,ac2dbb0f1f1e3530bf3b479b5570905a9fa8e50e,"replace string format arguments with function parameters

There are files containing string format arguments inside
logging messages. Using logging function parameters should
be preferred.

Change-Id: I1c2a4f43463932e85c75d576241d0c0455c38492"
creiht,2014-05-08 22:52:15,https://api.github.com/repos/openstack/swift/git/commits/0a122c1575fac98693059b0ad3b4386e35b74f63,0a122c1575fac98693059b0ad3b4386e35b74f63,"Add targeted config loading to swift-init

This allows an easier and more explicit way to tell swift-init to run on
specific servers.  For example with an SAIO, this allows you to do
something like:

swift-init object-server.1 reload

to reload just the 1st object server.  A more real world example is when
you are running separate servers for replication.  In this example you
might have an object-server/public.conf and
object-server/replication.conf.  With this change you can do something
like:

swift-init object-server.replication reload

to just reload the replication server.

DocImpact
Change-Id: I5c6046b5ee28e17dadfc5fc53d1d872d9bb8fe48"
alex,2014-05-16 18:44:18,https://api.github.com/repos/openstack/swift/git/commits/fac6568e8e897b2caea1fabad94c9a4cf92e04d4,fac6568e8e897b2caea1fabad94c9a4cf92e04d4,"Added a tox job for running flake8 under Python 3

Change-Id: I04a78cc5e3613d1d765d716633bca297bf7207b6"
smerritt,2014-05-16 18:31:08,https://api.github.com/repos/openstack/swift/git/commits/d8e2043b2f57550570b5bd088b927fc8241b4188,d8e2043b2f57550570b5bd088b927fc8241b4188,"Let users add their own txid suffixes

The value of the X-Trans-Id-Extra header on the request (if any) will
now be appended to the transaction ID. This lets users put their own
information into transaction IDs.

For example, Glance folks upload images as large objects, so they'd
like to be able to tie together all the segment PUTs and the manifest
PUT with some operation ID in the logs. This would let them pass in
that operation ID as X-Trans-Id-Extra, and then when things went
wrong, it'd be much easier to find all the requests in Swift's logs.

Also, this aids debuggability when requests fail to receive
responses. If a user is sending in their own X-Trans-Id-Extra strings,
then that gives operators something to search for in the logs. The
normal txid won't work since that's in the response, but the client
didn't receive one.

Swift will only use the first 32 characters of X-Trans-Id-Extra so
that its log lines stay a manageable length. Also, it's URL-quoted so
that users cannot inject double quotes into X-Trans-Id-Extra and screw
up log parsers.

DocImpact

Change-Id: I3c51d0c5ac55697ac230001840da219e73a03157"
alex,2014-05-16 14:09:55,https://api.github.com/repos/openstack/swift/git/commits/717485a64fa5d9f7926e562a19352fac90c8a991,717485a64fa5d9f7926e562a19352fac90c8a991,"Fixed several Python3 syntax errors

Change-Id: I8634ddb31da0297c06e39b968ce1a209b0d78614"
berendt,2014-05-11 12:44:47,https://api.github.com/repos/openstack/swift/git/commits/4cd3478b4b996108f5a581ef09add348e6246596,4cd3478b4b996108f5a581ef09add348e6246596,"debug level logs should not be translated

According to the OpenStack translation policy available at
https://wiki.openstack.org/wiki/LoggingStandards debug messages
should not be translated. Like mentioned in several changes in
Nova by garyk this is to help prioritize log translation.

Change-Id: I59486b1110f08510d83a4aec2a1666805c59d1cd
Closes-Bug: #1318333"
briancline,2014-05-10 10:15:12,https://api.github.com/repos/openstack/swift/git/commits/b4c5a136642bb87816bfbbad81b79efd4551a05e,b4c5a136642bb87816bfbbad81b79efd4551a05e,"Uses None instead of mutables for function param defaults

As seen on #1174809, changes use of mutable types as default
arguments and defaults them within the method. Otherwise, those
defaults can be unexpectedly persisted with the function between
invocations and erupt into mass hysteria on the streets.

There was indeed a test (TestSimpleClient.test_get_with_retries)
that was erroneously relying on this behavior. Since previous tests
had populated their own instantiations with a token, this test only
passed because the modified headers dict from previous tests was
being overridden. As expected, with the mutable defaults fix in
SimpleClient, this test begain to fail since it never specified any
token, yet it has always passed anyway. This change also now provides
the expected token.

Change-Id: If95f11d259008517dab511e88acfe9731e5a99b5
Related-Bug: #1174809"
zaitcev,2014-05-10 01:10:08,https://api.github.com/repos/openstack/swift/git/commits/4ce9b252fd44dae74b47d5b5c48e9403b5d36a4a,4ce9b252fd44dae74b47d5b5c48e9403b5d36a4a,"Print pipeline names in the reported pipeline

When current code modifies the pipeline, it prints the entry point
names instead of the names used to construct the pipeline. This is
inconvenient because a sysadmin cannot copy and paste from the log.

We already save the pipeline name into contexts in most cases, so
the fix simply reuses that to provide friendly names.

Fixes bug: 1311802

Change-Id: Ic76baf1360cd521f140fa1980029ccbce58f1717"
morganfainberg,2014-05-07 19:15:43,https://api.github.com/repos/openstack/swift/git/commits/1dfe5186542486342581ab66cd5364b6b7d04e93,1dfe5186542486342581ab66cd5364b6b7d04e93,"Update mailmap for Morgan Fainberg

Change-Id: Ia46c28c86ef3f440556b1b027d2bf0a7f3e721c5"
clayg,2014-05-02 19:36:15,https://api.github.com/repos/openstack/swift/git/commits/a7b8cb9b9b5a4a7bab4f644bb406cdc066471460,a7b8cb9b9b5a4a7bab4f644bb406cdc066471460,"Sync netifaces with global-requirements

also take the bit with the setup.py thing, seems harmless?

Change-Id: I387147235727752540a0a173a45b4b057d96899c"
zhang-hua,2013-10-23 19:40:06,https://api.github.com/repos/openstack/swift/git/commits/f5caac43ac40e103f3f2156eedb313385dbb6ba8,f5caac43ac40e103f3f2156eedb313385dbb6ba8,"Add profiling middleware in Swift

The profile middleware provide a tool to profile Swift
code on the fly and collect statistic data for performance
analysis. An native simple Web UI is also provided to help
query and visualize the data.

Change-Id: I6a1554b2f8dc22e9c8cd20cff6743513eb9acc05
Implements: blueprint profiling-middleware"
clayg,2014-05-03 04:11:49,https://api.github.com/repos/openstack/swift/git/commits/5580b09635b5e9128038738444301d5c232ed788,5580b09635b5e9128038738444301d5c232ed788,"Add filename*= support to tempurl Content-Disposition

When working with unicode or unsafe characters most browsers can do better
with a fully quoted filename*=, and will prefer it to filename=.  Old style
filename= left in for backwards compat

Change-Id: Ic54b0c376139bc8688d9124930689285a3b384fb"
clayg,2014-05-03 03:11:12,https://api.github.com/repos/openstack/swift/git/commits/b7659bee269db9866629824ebf968e1c706081a1,b7659bee269db9866629824ebf968e1c706081a1,"Add --quoted option to swift-temp-url

If you have a path with special characters it may be easier to hand them to
swift-temp-url prequoted than try to escape them on the command line.  By the
time common.middleware.tempurl gets ahold of the path it's unquoted so we do
the same before calculating the hmac but still use the pre-quoted path output
to the commandline.

Change-Id: Ia1a9666e487b1e70e4db7cd597bc6a1027e3e918"
zaitcev,2014-04-30 18:17:25,https://api.github.com/repos/openstack/swift/git/commits/14e2a221dc23577893ed0d9ae53ac04ce7d7e98e,14e2a221dc23577893ed0d9ae53ac04ce7d7e98e,"Plumb insecure flag to functests

The problem arises when running functests against pre-existing
clusters configured with self-signed certificates. As far as
security goes, doing that is rather useless, but it happens.
Such testing worked previously, but with the switch to Requests
in the client, we must plumb ""insecure"" flag. There's no other
way to do it in Requests, no environment variable, anything.

Change-Id: I94a61b60de8ee0529652c8c4a1ab9894c7cdb589"
portante,2014-01-11 05:18:04,https://api.github.com/repos/openstack/swift/git/commits/067b41e85479b29a7018e2f9ce7afd330bf3fdef,067b41e85479b29a7018e2f9ce7afd330bf3fdef,"In-process swift server for functional tests

Provide a way to run the functional tests using a p/a/c/o server setup
in the same process running the nosetests infrastructure.

By setting the environment variable, SWIFT_TEST_IN_PROCESS, to a true
value, the functional test framework will construct a set of proxy,
account, container and object servers running in the same process that
is running the functional tests, ignoring any external swift
service. This in-process swift environment is akin to the one used in
test/unit/proxy/test_server.py.

Setting that same environment variable to a false value will ensure the
in-process servers are not used.

When the above environment variable is not present, and the
/etc/swift/test.conf is _not_ present (or present but empty) on the
system where the functional tests are executing, the in-process
environment will be used. Previously, if no /etc/swift/test.conf file
was found, the tests would just be marked as skipped.

Using this in-process method allows one to gather code coverage using
the functional tests to exercise code paths, in addition to the unit
tests, or more easily debug existing functional tests, or even write new
ones.

There are two constraints that are changed for use with the in-process
functional tests: max_file_size is lowered to roughly 8 MB, and
client_timeout is set to 4s.

Change-Id: I5acd65e3068868d6509feae1d1954237d37fad45"
alex,2014-04-26 02:54:49,https://api.github.com/repos/openstack/swift/git/commits/032f0bfc7c6754afbad1bf8de7a4a6fde8d5cee0,032f0bfc7c6754afbad1bf8de7a4a6fde8d5cee0,"Fix several typos in the codebase.

These were found using https://github.com/intgr/topy

Change-Id: I0dc7b76c44b8b17b1dcd79184dad1516fb11173c"
luisbg,2014-04-24 15:02:54,https://api.github.com/repos/openstack/swift/git/commits/3af5216543a8a6e769822c4175cf840e572b628c,3af5216543a8a6e769822c4175cf840e572b628c,"Sort the log file dates in reverse order

We want to show log files in descending order.

Change-Id: I6f79d9f5a73afa43efec36c3ca99afcde3fe7813
Closes-Bug: #1311405"
creiht,2014-04-24 16:50:03,https://api.github.com/repos/openstack/swift/git/commits/5b8fad754cd2b76a1180f7f498e0045cc3ee87d9,5b8fad754cd2b76a1180f7f498e0045cc3ee87d9,"Fix coverage report for newer versions of coverage

With newer versions of coverage (at least what is installed with ubuntu
trusty), code coverage isn't working.  Making this change allows the
coverage library to find the swift package.

Change-Id: I3b3792622904a86096064c0e03c8095636f83973"
johnl,2014-03-25 11:48:13,https://api.github.com/repos/openstack/swift/git/commits/85c91a4e82e319cb17194b89be103542e286319b,85c91a4e82e319cb17194b89be103542e286319b,"Allow empty reseller prefixes in domain_remap

Change-Id: I2013e4686fce1c06626ec974f8d721721e6ca6e7"
yummybian,2014-04-22 15:52:28,https://api.github.com/repos/openstack/swift/git/commits/aa6bd2c0abedfd791929fad2f24795b4069e7035,aa6bd2c0abedfd791929fad2f24795b4069e7035,"Fix redundant add operation of set in ring

You don't need to add dev_id into seen_ids again when it has already existed in seen_ids.

Fixes Bug #1311190

Change-Id: If0766de8dc5e2a59a648cae39c789c91131805d2"
gholt,2014-04-22 15:00:09,https://api.github.com/repos/openstack/swift/git/commits/f469d4214f0d60a02a2f03edf512ad22e17432d7,f469d4214f0d60a02a2f03edf512ad22e17432d7,"TempURL: Fixed bug with \r or \n in disposition.

If an object had a \r or \n in its name, it would end up creating an
invalid HTTP Content-Disposition header. Reviewer consensus was to use
URL encoding.

Fixes bug 1306250

Change-Id: Ibccaaed5152b4d09d6aee4966a1982cc0a0da07d"
dpgoetz,2014-04-21 22:20:12,https://api.github.com/repos/openstack/swift/git/commits/20e46bc14796a0932405ce6ac341890bfb4352a4,20e46bc14796a0932405ce6ac341890bfb4352a4,"setting request_node_count doesn't work

Change-Id: Ia161b872cf5ffa43c10334b42cc36d679c3adf56"
kajinamit,2014-04-18 02:43:44,https://api.github.com/repos/openstack/swift/git/commits/07841b42828dc133ba258cf7c7f09d6f8906a96f,07841b42828dc133ba258cf7c7f09d6f8906a96f,"Fix error log of proxy-server when cache middleware is disabled

Change-Id: I0b67721cbb692fb8d2a5dd8b2c4f5383512b7b45
Closes-Bug: #1306591"
peluse,2014-04-12 23:39:29,https://api.github.com/repos/openstack/swift/git/commits/968ec9806fb6ee12b4cd5ef016363bd1850dab95,968ec9806fb6ee12b4cd5ef016363bd1850dab95,"Bring Object Auditor Coverage To 99%

Previously at 87% with 20 missing 11 partial, this additional
test code brings it to 99% 0 missing and 3 partial.  Noticed
some easy places to add coverage while working on the
Storage Policy branch.

Change-Id: I49b5b4db3341416fce1ef42811732c16d3265522"
peluse,2014-04-14 22:19:22,https://api.github.com/repos/openstack/swift/git/commits/856c15539a958dabe3b8a1f22d305048ca39de9a,856c15539a958dabe3b8a1f22d305048ca39de9a,"Fix testcase test_print_db_info_metadata()

Test compares cluster info to hardcoded expected data and wasn't
sorting the two sets of things being compared leading to some
sporadic unit test failures.

Change-Id: I3ef98260a62c15d06ba8cc196196d4e90abca3f0"
portante,2014-04-10 19:37:15,https://api.github.com/repos/openstack/swift/git/commits/4dd2670fb03b491a106e399791ef21783721ebc9,4dd2670fb03b491a106e399791ef21783721ebc9,"Load constraints from cluster info dictionary

Use constrainst from the new ""swift-constraints"" section of test.conf,
fall back to those found in the response to the /info API call,
ultimately falling back to the constraints module's effective
constraints.

Change-Id: Iea01c9c4b5148faa10004a240df411cbe7336a6a"
madhuri-rai07,2014-04-11 06:23:48,https://api.github.com/repos/openstack/swift/git/commits/67fff5b2973f5ca12316041664eddf3e8ece45be,67fff5b2973f5ca12316041664eddf3e8ece45be,"Print 'Container Count' in data base info

Currently, 'Container Count' was missing in data base info.
So this patch will help printing 'Container Count' also.

Change-Id: I1ca80ee79e71b086b30fd2d1ab024ea1cfb324f5"
smerritt,2014-04-08 18:27:14,https://api.github.com/repos/openstack/swift/git/commits/31dac18625427b03cd808a123cc5b26c13dcaa92,31dac18625427b03cd808a123cc5b26c13dcaa92,"Check swift.conf MD5 with recon

I've seen several folks recently have problems with their Swift
clusters because they had different hash prefixes on different
nodes. Let's help them out by having recon check that.

Note that MD5-equality is stronger than what we need (which is
ConfigParser-equality for a particular set of keys), but this way we
don't expose the secret hash prefix and suffix across the internal
network, just the MD5 checksum of the file containing them.

Change-Id: I3af984ee45947345891b3c596a88e3464f178cc7"
creiht,2014-04-10 18:59:01,https://api.github.com/repos/openstack/swift/git/commits/1f0058e61e9094cdf9484e982b7f662660bed87e,1f0058e61e9094cdf9484e982b7f662660bed87e,"Fix logging issue when services stop on py26

On older versions of python 2.6, exceptions would be spewed to the error
log whenever a service would stop.  This gets magnified by the
container-updater which seems to do it with every pass.  This catches
and squelches the error.

Change-Id: I5944c1620c62cf0868b70dae7d7e2acd56bf8211
Closes-Bug: #1306027"
portante,2014-04-10 18:36:43,https://api.github.com/repos/openstack/swift/git/commits/deb0dfd090cee2feef664bdd4449194c274d830e,deb0dfd090cee2feef664bdd4449194c274d830e,"Add includes of referenced SAIO bin scripts

Change-Id: I6810e69a757336a3aed0a38146c27f270fe2dde1"
creiht,2014-04-10 18:59:01,https://api.github.com/repos/openstack/swift/git/commits/2c2ede22338d6ca9637233076157f1d26248fbf1,2c2ede22338d6ca9637233076157f1d26248fbf1,"Fix logging issue when services stop on py26

On older versions of python 2.6, exceptions would be spewed to the error
log whenever a service would stop.  This gets magnified by the
container-updater which seems to do it with every pass.  This catches
and squelches the error.

Change-Id: I128c09c240e768e8195af1f6fe79b10d4e432471
Closes-Bug: #1306027"
portante,2014-04-07 17:01:44,https://api.github.com/repos/openstack/swift/git/commits/5ff6a4d5d6cdbf39ba9f6d5d416cdd1c6c6a52ac,5ff6a4d5d6cdbf39ba9f6d5d416cdd1c6c6a52ac,"Use eventlet instead of threading for timeout

The only explicit use of Python threading is found in the
testFileSizeLimit test. Using eventlet seems a bit easier to follow,
accomplishing the same goal, and does not constrain us to a
multi-threaded environment.

The chunks() and timeout() module level functions are only used by one
test each, so we just move them to those tests to indicate they are not
used globally.

Change-Id: I50b9fb798fbfd1d552b3c3f90309f6b86da34853"
smerritt,2014-04-08 18:44:58,https://api.github.com/repos/openstack/swift/git/commits/c2744caac43586b745c43c37a9c31483f7a126fc,c2744caac43586b745c43c37a9c31483f7a126fc,"Fix deprecation warning

Accessing BaseException.message spews a warning; we can get the same
information with str(err), which does not spew.

Change-Id: I67648d53d25522be074a78c44b3ce97dc27d1f07"
notmyname,2014-04-08 17:26:40,https://api.github.com/repos/openstack/swift/git/commits/d47a582e749d3a61071ff249175d67e37bef7e6c,d47a582e749d3a61071ff249175d67e37bef7e6c,"update setup.py with pbr version

This file is normally updated in the standard ""update from
global requirements"" patch, but since those contain other
changes we don't want, the setup.py file never gets updated.

This patch updates setup.py to bring it in line with the
standard global requirements way of doing things without also
updating [test-]requirements.txt

Change-Id: Id0e4f8e17dd4c714b4d2dd75985431a9e12e6a4f"
greglange,2014-03-26 22:55:55,https://api.github.com/repos/openstack/swift/git/commits/d32dc8d49c19de8b1264cae23b82b3ffd9707454,d32dc8d49c19de8b1264cae23b82b3ffd9707454,"Unify backend logging

Make account, object, and container servers construct log lines using the
same utility function so they will produce identically formatted lines.

This change reorders the fields logged for the account server.

This change also adds the ""additional info"" field to the two servers that
didn't log that field.  This makes the log lines identical across all 3
servers.  If people don't like that, I can take that out.  I think it makes
the documentation, parsing of the log lines, and the code a tad cleaner.

DocImpact

Change-Id: I268dc0df9dd07afa5382592a28ea37b96c6c2f44
Closes-Bug: 1280955"
gilv,2014-04-07 05:44:54,https://api.github.com/repos/openstack/swift/git/commits/b67a4b993815f1830b59054ae0d08a468044a53e,b67a4b993815f1830b59054ae0d08a468044a53e,"Support for content-length in the upload object method for
internal client.

Internal client uses 'chunked' transfer encoding in it's
upload_object method. If content-length is known in advance,
internal_client should allowed to use content length in the
upload_object method and not the chunked method.

Change-Id: I68d2ebde78e01fa16b7187a2f045ea20f4310722"
javacruft,2014-04-05 08:38:12,https://api.github.com/repos/openstack/swift/git/commits/b9b5fef89af51c66905de33e2436c063f4b09d36,b9b5fef89af51c66905de33e2436c063f4b09d36,"Set permissions on generated ring files

The use of NamedTemporaryFile creates rings with permissions 0600;
however most installs probably generate the rings as root but the
swift-proxy runs as user swift.

Set the permissions on the generated ring to 0644 prior to rename so
that the swift user can read the rings.

Change-Id: Ia511931f471c5c9840012c3a75b89c1f35b1b245
Closes-Bug: #1302700"
portante,2014-04-04 19:26:32,https://api.github.com/repos/openstack/swift/git/commits/9d0067a0f546ce8a0fddb257655f2944c05e35e6,9d0067a0f546ce8a0fddb257655f2944c05e35e6,"Attempt to ensure connect always timesout

It seems that the test_connect_put_timeout() test does not always fail
when it is expected. Sometimes, not very often, the attempt to connect
succeeds, resulting in a failed test.

This might be because the fake-connection infrastructure uses a
sleep(0.1) and the test uses a connect timeout of 0.1. There might be a
case where the two values result in the exact time where the entries
happen to be added in the wrong order such that the sleep() completes
first before the connect timeout fires, where the connect completes
successfully.

Closes bug 1302781

Change-Id: Ie23e40cf294170eccdf0713e313f9a31a92f9071"
portante,2014-04-01 03:51:43,https://api.github.com/repos/openstack/swift/git/commits/0e366aa92214234f77709640c3eecd8a24f108b4,0e366aa92214234f77709640c3eecd8a24f108b4,"Move module level setup under setup_package method

Perform all the package level test setup under the setup_package
method so that we only read the configuration file on disk when
functional tests are run. This let's us ""play nice"" with other tests.

Change-Id: I699d664bcef6754aac4ec6877830e745b764342f"
gholt,2014-04-03 23:06:13,https://api.github.com/repos/openstack/swift/git/commits/bf292ae0cb64c8af8c2e1c8d5cad6b37a59113b1,bf292ae0cb64c8af8c2e1c8d5cad6b37a59113b1,"Fixed error in container sync exc handling

If container sync got a non-ClientException and then a ClientException
during a get/put operation, it previously would break in the error
handling.

Change-Id: Ib2fa70270f3ec870bf60d5bbb3e8f514aeeb0927"
portante,2014-04-03 16:07:42,https://api.github.com/repos/openstack/swift/git/commits/de020f018999e3a1decd59b73bc363ae21c701a3,de020f018999e3a1decd59b73bc363ae21c701a3,"Handle getting info on wrong database type

Change-Id: I32f66f6a7683180a18a2807143d0910c75bf16f0"
notmyname,2014-04-02 23:58:40,https://api.github.com/repos/openstack/swift/git/commits/eaf6815465159a793ad715c28dbfb5c0aae94c31,eaf6815465159a793ad715c28dbfb5c0aae94c31,"updates for 1.13.1 release

Change-Id: I9a84c476e8d370c3a5dbc24db77a7258d521013f"
zhouyuan,2014-04-01 07:21:19,https://api.github.com/repos/openstack/swift/git/commits/39f5eab890394fce7e2efb9ffc1938d8156ed989,39f5eab890394fce7e2efb9ffc1938d8156ed989,"Clean up swift-{account, container}-info

Reuse common code; add unit tests; ensured coverage was at 100%.

Change-Id: Id6fcc7cb07fd178e00d43968e3e2cc03226fdc05"
portante,2014-04-01 03:22:49,https://api.github.com/repos/openstack/swift/git/commits/44b39417baffb6047ca378e33d6694b5db7fc108,44b39417baffb6047ca378e33d6694b5db7fc108,"Read the configuration once for all func tests

Merge the swift_testing module into the functional test module itself,
so that we can read the configuration once for all unit tests, sharing
the same constraints.

Change-Id: I9fbbfdade9adca329cd79f7d4291ba009327c842"
portante,2014-04-01 02:56:17,https://api.github.com/repos/openstack/swift/git/commits/5ea6c88128ed966ba419848064680dec34850fda,5ea6c88128ed966ba419848064680dec34850fda,"Only change collation for functional tests

The unconditional module-level change of the locale collation can
affect other tests run under nose. To avoid this, make the change at
the package level, and restore it when finished.

Change-Id: Iacda42aa7155f1cfa7d0dcadbf73b961dfb4b923"
portante,2014-04-02 20:16:21,https://api.github.com/repos/openstack/swift/git/commits/07fcf50c3ac8d95d59901992affea82c45719340,07fcf50c3ac8d95d59901992affea82c45719340,"Rework use of constraints to ease testing

Prior to this patch both mainline code and testing modules imported
and used constraints directly into their own namespace, or relied on
the namespace of other modules that were not the constraints
module. This meant that if a unit test wanted to change a constraint
for its operation, it had to know how that module was using the
constraint, instead of referencing the constraint module itself.

This patch unifies the use of constraints so that all constraints are
referenced via the constraints module. In turn, this allows a test to
leverage the re-loadable nature of the constraints in the constraints
module.

It addition, a number of functional tests where using the default
values for constraints, instead of the configured value discovered in
a test.conf or in an existing swift.conf. This patch removes those
direct references in favor of the load_constraint() method from the
test/functional/tests.py module.

Change-Id: Ia5313d653c667dd9ca800786de59b59334c34eaa"
portante,2014-04-02 12:32:02,https://api.github.com/repos/openstack/swift/git/commits/8a090916d11aff076fb919aa3782846579e53a8c,8a090916d11aff076fb919aa3782846579e53a8c,"Only fetch a timestamp when needed

While it seems free to just call time.time() whenever it is
convenient, in many cases code has to decide on a particular timestamp
as a reference point for decisions. In other places, it just seems
like a waste to make two calls that one would assume would return
nearly identical times; however, certain test environments are
notoriously overloaded (which is arguably a good thing, added stress
to the code) where back-to-back calls to time.time() might produce
timestamps seconds or even minutes apart.

These simple changes here pick a point of reference for the operation
to use throughout.

Change-Id: Id2c0ffcc7f4ffafff61ebf59a8baeb079fd0c2b8"
zaitcev,2014-04-02 04:19:21,https://api.github.com/repos/openstack/swift/git/commits/a7cfcc3d7a2b1973e8c5ba5b3782ab95a9a2a8fe,a7cfcc3d7a2b1973e8c5ba5b3782ab95a9a2a8fe,"Relocate DATADIR to backends

It simply makes sense that the definition of DATADIR belongs to
backends. After all, some of them may not even have any.

Coincidentially, a few unnecessary imports are dropped.

By the way, on the object server side, diskfile.py provides DATADIR
in the same way already.

Change-Id: I60bfd522c77c4a0ee13697a2e31141777c7e2398"
portante,2014-04-02 02:56:43,https://api.github.com/repos/openstack/swift/git/commits/f63b37572df9188f2fc753c06f32488a2b2f59a9,f63b37572df9188f2fc753c06f32488a2b2f59a9,"Update callback with proper bytes transferred

The first set of bytes transferred was being dropped.

Change-Id: I8e055190d04af1718c5e88bf5e8c44fde6794c74"
houming-wang,2014-02-26 09:48:33,https://api.github.com/repos/openstack/swift/git/commits/87710cc8a2654d872adb74d4fa4856c9beb41fbd,87710cc8a2654d872adb74d4fa4856c9beb41fbd,"AssertEquals is deprecated, use assertEqual partI

assertEquals is deprecated in Python 2.7, need drop it.
http://docs.python.org/2/library/unittest.html#deprecated-aliases

Change-Id: Ieec505887f740b99b11ef40878ba3ee7247b78a8
Closes-Bug: #1285040"
creiht,2014-03-19 21:51:17,https://api.github.com/repos/openstack/swift/git/commits/0b893825ebdd63d22d51cce42a3994f120f43921,0b893825ebdd63d22d51cce42a3994f120f43921,"Add ""If-None-Match: *"" support to PUT

A common pattern that we see clients do is send a HEAD request before a
PUT to see if it exists.  This can slow things down quite a bit
especially since 404s on HEAD are currently a bit expensive.

This change will allow a client to include a ""If-None-Match: *"" header
with a PUT request.  In combination with ""Expect: 100-Continue"" this
allows the server to return that it already has a copy of the object
before any data is sent.

I attempted to also include etag support with the If-None-Match header,
but that turned up having too many hairy edge cases, so was left as a
future excercise.

DocImpact

Change-Id: I94e3754923dbe5faba065719c7a9afa9969652dd"
dpgoetz,2014-04-01 14:05:44,https://api.github.com/repos/openstack/swift/git/commits/e6c910992d83611d579844d447a0cd47a6948b00,e6c910992d83611d579844d447a0cd47a6948b00,"Range requests not working with sub_SLOs

Change-Id: I618c06e7f9251bfc7049c9dc6df66e539b90d9a9"
briancline,2014-03-31 18:12:57,https://api.github.com/repos/openstack/swift/git/commits/1e784a43327661a753dd420308671685f1460816,1e784a43327661a753dd420308671685f1460816,"Fixes SUPER important typo in CHANGELOG.

Change-Id: Id1ecc425cd9e32fef4d70e97d3a705a695eb73a2"
madhuri-rai07,2014-03-30 16:22:53,https://api.github.com/repos/openstack/swift/git/commits/c90ede29ff89ce3635e5553de4f3960a855cba5e,c90ede29ff89ce3635e5553de4f3960a855cba5e,"Added swift-account-info tool.

This is a very simple swift tool to retrieve information
of an account that is located on the storage node.
One can call the tool with a given account db file
as it is stored on the storage node system.
It will then return several information about that account.

Change-Id: Ibfeee790adc000fc177b4b3c03d22ff785fda325"
portante,2014-03-27 02:38:03,https://api.github.com/repos/openstack/swift/git/commits/5bb7603fce7bba58dd73cdca956e015054391380,5bb7603fce7bba58dd73cdca956e015054391380,"Mock out time and sleep to avoid races

We mock out time.time(), time.sleep() and eventlet.sleep() so that we
avoid test problems caused by exceedingly long delays during the
execution of the test.

We also make sure to convert the units used in the tests to
milliseconds for a bit more clarity.

Closes bug: 1298154

Change-Id: I803d06cbf205a02a4f7bb1e0c467d276632cd6a3"
portante,2014-03-27 02:10:29,https://api.github.com/repos/openstack/swift/git/commits/b8f73a171d8d12c82a92435022d06755cd8a605b,b8f73a171d8d12c82a92435022d06755cd8a605b,"Move like unit tests together; add comments

Some simple code movement to move the utils.ratelimit_sleep() unit
tests together so that they can be viewed all at once.

We also add some comments to document the behavior of
utils.ratelimit_sleep(); small modification to max_rate parameter
checking to match intended use.

Change-Id: I3b11acfb6634d16a4b3594dba8dbc7a2d3ee8d1a"
smerritt,2014-03-26 18:57:11,https://api.github.com/repos/openstack/swift/git/commits/bb7bb4e03469ce3a79b5f3ecd1ef87e99530c5b0,bb7bb4e03469ce3a79b5f3ecd1ef87e99530c5b0,"Only run flake8 on Swift code

In particular, this skips the ""build"" directory, which is prone to
containing third-party stuff that doesn't comply with all the various
hacking/flake8/pep8 checks.

Change-Id: Ibe2240d8c6ca5947b2cac259cd7d0a1154f8a9cd"
pandemicsyn,2014-03-26 20:39:46,https://api.github.com/repos/openstack/swift/git/commits/c6cebb6e621a245c9c2d5bff0df59689b0140373,c6cebb6e621a245c9c2d5bff0df59689b0140373,"Write out ring.gz's in a safer fashion

Write the ring file to a temporary location first and then move it into
place. This should help prevent issues like reading a partial ring file
while a new instances is being written out.

Change-Id: I28357a2f038a51cb9d823822b92f736dff033a9e"
portante,2014-03-25 19:56:44,https://api.github.com/repos/openstack/swift/git/commits/31b994560332ffa22fbe45e43471db360467434c,31b994560332ffa22fbe45e43471db360467434c,"Invert which proxy logging middleware instance logs

Prior to this patch the proxy_logging middleware always prepared to
read the response and process it for access logging, where the
proxy_logging instance first to handle the response bytes marked the
request as ""logged"".

This meant that the proxy_logging instance immediately before the
proxy-server app (right most in the pipeline, if properly setup) would
always log the responses for all the client requests, regardless if
middleware to the left of it still had processing to do for the
response. This would break SLO, where the slo middleware passed along
the GET of the manifest, unchanged from the client, so that the right
most proxy logging middleware would log the sponse for just the
manifest, but then the slo middleware would fetch all the segments of
the manifest, feeding them out in the response to the client, the
request now marked as ""logged"" so that the left most proxy logging
middleware would not log it.

This patch inverts this behavior so that now the first proxy_logging
middleware instance to receive a request in the pipeline marks that
request as handling it. So now, the left most proxy_logging middleware
handles logging for all client reaquests, and the right most
proxy_logging middleware handles all other requests initiated from
within the pipeline to its left.

Closes bug: 1297438

Change-Id: Ia3561523db76c693e4e0b2c38f461544dfcee086"
clayg,2014-03-26 20:25:36,https://api.github.com/repos/openstack/swift/git/commits/12c9dbe5f7090044c579e112e5616a9042d7f192,12c9dbe5f7090044c579e112e5616a9042d7f192,"minor cleanups for swift-container-info

Change-Id: I4d0687f64524093e2ffaa4f8d31bcff70dca145e"
notmyname,2014-03-26 18:10:21,https://api.github.com/repos/openstack/swift/git/commits/655991850b074c0ccf768d5439cac6f96cef62f9,655991850b074c0ccf768d5439cac6f96cef62f9,"don't repatch mimetools again. and again. again.

Change-Id: Id8ccb269ede6981dba8a5e119316e3447074193c"
kazum,2014-03-26 04:32:12,https://api.github.com/repos/openstack/swift/git/commits/e40b0175e4a39b30a348b67ba389aa9ad62b36da,e40b0175e4a39b30a348b67ba389aa9ad62b36da,"Update swift3 repository

The swift3 project was moved to StackForge.

Change-Id: I3a7108d57b3b9ed3d8594545ff4d67dcab86ca07"
clayg,2014-03-12 20:00:21,https://api.github.com/repos/openstack/swift/git/commits/45e797b967bbb0c3d5023dd21e3576f1a9f872d0,45e797b967bbb0c3d5023dd21e3576f1a9f872d0,"additional functional tests for account acls

Change-Id: I7d8a8e48066281707862cd07f6b5a012476e8f24"
zhouyuan,2014-03-26 02:23:53,https://api.github.com/repos/openstack/swift/git/commits/4b7bab9fc99e879a1e6342a21af1f14eb1eb1b8a,4b7bab9fc99e879a1e6342a21af1f14eb1eb1b8a,"Update swift-get-nodes to use storage_directory util func

Change-Id: I074d6c5f62e5218427c72b3e11de40da4ecfc0ab"
clayg,2014-03-24 23:10:18,https://api.github.com/repos/openstack/swift/git/commits/a3c4713cdae44282a47bfa3ac8fcedf8324fcb86,a3c4713cdae44282a47bfa3ac8fcedf8324fcb86,"Bump up sleep when expecting a timeout

It seemed like some of the tests ment to exercise the proxy's timeout could
would occastionally race and the backend mock would be able to cough up a
chunk before the timeout fired in the proxy - typically resulting in a failed
assertion like "" lalala"" != 'lalala'.

We paramaterize the timeout value, and bump it up for those cases where we are
expecting to hit the timeout.  Timing shows this change is just as fast for
passing tests.  And if you want to break the node_timeout in
proxy.controller.base you can verify the tests are still just as effective -
if a bit slower to detect the failure path.

Fixes bug #1272509

Change-Id: Iaf91d9d551e94fc317a08e8c0ee02daeed331b60"
notmyname,2014-03-25 21:03:38,https://api.github.com/repos/openstack/swift/git/commits/08477750a5b3261cc69c74f0cfb7d0eefae888d6,08477750a5b3261cc69c74f0cfb7d0eefae888d6,"fix a skipped account ACLs functional test

closes bug #1292158

Change-Id: Ic74c9d698c312b484a49d759eced6860d46cf399"
portante,2014-03-25 01:43:14,https://api.github.com/repos/openstack/swift/git/commits/6145c57f4a022507de35817f88296be3b0fbc7df,6145c57f4a022507de35817f88296be3b0fbc7df,"Make initialization test failure more explicit

A few changes to make the db initialization test failure mode more
explicit.

Change-Id: I533cd33476a57ecb854a1af1a5fb170c65daa825"
madhuri-rai07,2014-03-25 08:39:56,https://api.github.com/repos/openstack/swift/git/commits/a37f90b3f15bf8936663c0fd09f6da2c55de73bd,a37f90b3f15bf8936663c0fd09f6da2c55de73bd,"Removed hard coded location of ring

In bin/swift-object-info, removed the hard coded location of ring.

Change-Id: Ie328633f5f4de755c9dcc4bb52341bb97087419d"
madhuri-rai07,2014-03-21 02:17:21,https://api.github.com/repos/openstack/swift/git/commits/6b441fabd971a39f86223770faed74bc1bdb0bf1,6b441fabd971a39f86223770faed74bc1bdb0bf1,"Added swift-container-info tool.

This is a very simple swift tool to retrieve information
of a container that is located on the storage node.
One can call the tool with a given container db file
as it is stored on the storage node system.
It will then return several information about that container.

Change-Id: Ifebaed6c51a9ed5fbc0e7572bb43ef05d7dd254b"
smerritt,2014-03-21 01:53:54,https://api.github.com/repos/openstack/swift/git/commits/c4a2313f4540c4512454788d4d4a3f330d5f65d3,c4a2313f4540c4512454788d4d4a3f330d5f65d3,"Block X-Backend* in gatekeeper

By moving the blocking to gatekeeper from the proxy server, we gain
the ability to pass X-Backend headers in via InternalClient while
still keeping real clients from using them.

I wanted this functionality while working on storage policies; I had
an InternalClient and wanted to tell it to use a specific policy index
instead of what the container said, and that seemed like a good time
for an X-Backend header.

Change-Id: I4089e980d3cfca660365c7df799723b1f16ba277"
portante,2014-03-19 20:19:45,https://api.github.com/repos/openstack/swift/git/commits/2e6325f35174cef6cdc0545901d268c5b1d94575,2e6325f35174cef6cdc0545901d268c5b1d94575,"Enable object versions for SAIO by default

Change-Id: I4a20cacd6c8eb4d82a1f0b59a6b26340bc57184a"
greglange,2014-03-18 21:17:52,https://api.github.com/repos/openstack/swift/git/commits/a26b705d3991edbc770c73b47a34611ece0ae67d,a26b705d3991edbc770c73b47a34611ece0ae67d,"Fix TestGreenThreadSafeIterator test

Change-Id: Ic121ae5c99b4e5c5e3d1efc432b55b762d50f3fb
Closes-Bug: 1190244"
smerritt,2014-03-18 19:50:51,https://api.github.com/repos/openstack/swift/git/commits/7829ca07d7b21cd16efcc6144c4b727240e9e9b2,7829ca07d7b21cd16efcc6144c4b727240e9e9b2,"Remove some debugging prints from tests

Change-Id: I7116aa75ea5c8e1ef85a799a6e1ddf0d6edffb4f"
clayg,2014-03-18 03:58:42,https://api.github.com/repos/openstack/swift/git/commits/6514a485d5f32923d2c7870f790e047643ae08df,6514a485d5f32923d2c7870f790e047643ae08df,"move cors-test-page to literal include

This makes it so test-cors.html is a real file in doc/source so it's easy for
those in the know to jump in there with a `python -m SimpleHTTPServer` and
point their webbrowser to `http://localhost:8000/test-cors.html`.

The example html and javascript still appear in the docs in their entirety
using the Sphinx literal include directive.

Change-Id: Ia0ba36df6c58795e3764fa53b7f585dcc1b3be07"
clayg,2014-03-18 03:18:42,https://api.github.com/repos/openstack/swift/git/commits/01410c685080c9d700278fc430cc004fa112d783,01410c685080c9d700278fc430cc004fa112d783,"Make backend container requests use the same X-Timestamp

The proxy.controllers.base's generate_request_headers will set an X-Timestamp
header for you if it didn't get populated by additional kwarg or the
transfer_headers method.  This works fine if you only call it once per
request, but because of how proxy.controllers.obj and
proxy.controllers.container fill in the backend update header chains in
_backend_requests we need multiple independent copies and call the base
controllers generate_request_headers once of each backend request - which left
the ContainerController sending down different X-Timestamp values
(microseconds apart) for PUT and DELETE.

The ObjectController skirts the issue entirely because it always preloads a
X-Timestamp on the req used to generate backend headers, and it allows it to
be copied over via transfer_headers by including 'x-timestamp' in it's
pass_through_headers attribute.

Because the container-replicator is already does merge_timestamps the
differences would always eventaully even out and there is no consistency bug,
but this seems cleaner since they put_timestamp being stored on the three
replicas during a container PUT were all coming from the same client request.

Since both PUT and DELETE were effected, and the ContainerController doesn't
need to allow X-Timestamp to pass_through like the ObjectController does for
container-sync, it seemed cleanest to fix the issue in _backend_requests via
the additional kwarg to generate_request_headers.

There's a driveby fix for FakeLogger and update to the proxy_server's
ContainerController tests.

Change-Id: Idbdf1204da33f8fb356ae35961dbdc931b228b77"
clayg,2014-03-17 23:00:46,https://api.github.com/repos/openstack/swift/git/commits/2e8bc44c9d0586813587a5711f8e857a31393326,2e8bc44c9d0586813587a5711f8e857a31393326,"Fix race on container recreate

There was a path on container recreate that would sometimes allow db to get
reinitialized without updating put_timestamp.  Replication would of course fix
it up, but that node would think it's database was deleted till then desipite
just ok'ing a request with a newer X-Timestamp than the deleted_timestamp on
disk.

Change-Id: I8b98afb2aac2e433b6ecb5c421ba0d778cef42fa
Closes-Bug: #1292784"
smerritt,2014-03-04 19:52:48,https://api.github.com/repos/openstack/swift/git/commits/62a1e7e0593723ff19a83c1533b02f6f444f6942,62a1e7e0593723ff19a83c1533b02f6f444f6942,"Support If-[Un]Modified-Since for object HEAD

We already supported it for object GET requests, but not for
HEAD. This lets clients keep metadata up-to-date without having to
either fetch the whole object when it's changed or do their own date
parsing. They can just treat Last-Modified as opaque and update their
idea of metadata when they get a 200.

Change-Id: Iff25d8989a93d651fd2c327e1e58036e79e1bde1"
smerritt,2014-03-03 19:25:43,https://api.github.com/repos/openstack/swift/git/commits/a69789fa0650f2975508b6f8f572f8bc8ffdb078,a69789fa0650f2975508b6f8f572f8bc8ffdb078,"Allow pre-1970 dates in If-[Un]Modified-Since

If I want to fetch an object only if it is newer than the first moon
landing, I send a GET request with header:

    If-Modified-Since: Sun, 20 Jul 1969 20:18:00 UTC

Since that date is older than Swift, I expect a 2xx response. However,
I get a 412, which isn't even a valid thing to do for
If-Modified-Since; it should either be 2xx or 304. This is because of
two problems:

(a) Swift treats pre-1970 dates as invalid, and

(b) Swift returns 412 when a date is invalid instead of ignoring it.

This commit makes it so any time between datetime.datetime.min and
datetime.datetime.max is an acceptable value for If-Modified-Since and
If-Unmodified-Since. Dates outside that date range are treated as
invalid headers and thus are ignored, as RFC 2616 section 14.28
requires (""If the specified date is invalid, the header is ignored"").

This only works for dates that the Python standard library can parse,
which on my machine is 01 Jan 1 to 31 Dec 9999. Eliminating those
restrictions would require implementing our own date parsing and
comparison, and that's almost certainly not worth it.

Change-Id: I4cb4903c4e5e3b6b3c9506c2cabbfbda62e82f35"
smerritt,2014-03-05 19:02:59,https://api.github.com/repos/openstack/swift/git/commits/cd149ae19f9235cf7bfc96ed2e06a4fd390a4006,cd149ae19f9235cf7bfc96ed2e06a4fd390a4006,"Check object segment MD5s

Now if a client is downloading a large object and one of the segment
fetches gets bad data, we'll abort the request right away instead of
letting the client carry on. We do this by checking each segment's
body against the etag in the GET response's headers, like we tell
clients to do.

To make sure that the etag is the MD5, we add ?multipart-manifest=get
to all segment GET requests. That way, a segment won't be another
large object, because a large object's etag isn't its MD5. This does
mean that clients can't make, say, a DLO manifest that points to a
bunch of SLO manifests. However, that capability was only introduced
in Swift 1.13.0 (post-Havana); prior to that, clients couldn't mix
large-object types. I'm more than happy to trade that capability away
in exchange for data-integrity checks.

Change-Id: I98c78a291ee1a863a36d54a22867bd01c126644e"
clayg,2014-03-06 09:19:36,https://api.github.com/repos/openstack/swift/git/commits/0efac0cac29db96b7903a83d23551dd05d421cfb,0efac0cac29db96b7903a83d23551dd05d421cfb,"make probetests work with conf.d configs

Change-Id: I451ff4629730a334ac1bd8fc6cd75de95314e153"
clayg,2014-03-11 21:18:55,https://api.github.com/repos/openstack/swift/git/commits/7463a46a6262eb95572f90d1bf93abc461576700,7463a46a6262eb95572f90d1bf93abc461576700,"DRY out common.constraints a bit more

Change-Id: If8a71692b79e381036b34245e09697ac1009beca"
dpgoetz,2014-01-15 22:49:31,https://api.github.com/repos/openstack/swift/git/commits/2abb829a5dd965b99bc8f18f13c3bfbe1ece27b2,2abb829a5dd965b99bc8f18f13c3bfbe1ece27b2,"Make cors work better.

CORS doesn't really work with swift right now. OPTIONS calls for the most part
work but for so called ""simple cross-site requests"" (i.e. those that don't
require a pre-flight OPTIONS request) Swift always returns the Origin it was
given as the Access-Control-Allow-Origin in the response. This makes CORS
""work"" for these requests but if you actually wanted the javascript user agent
to restrict anything for you it wouldn't be able to!

You can duplicate the issue with updated CORS test page:

http://docs.openstack.org/developer/swift/cors.html#test-cors-page

And a public container with an 'X-Container-Meta-Access-Control-Allow-Origin'
that does NOT match the webserver hosting the test-cors-page.

e.g.

with a public container that accepts cross-site requests from ""example.com"":

`swift post cors-container -m access-control-allow-origin:example.com -r .r:*`

You could point your browser at a copy of the test-cors-page on your
filesystem (the browser will will send 'Origin: null')

Without a token the XMLHttpRequest will not request any custom headers (i.e.
Access-Control-Request-Headers: x-auth-token) and the request will be made
with-out a preflight OPTIONS request (which Swift would have denied anyway
because the origin's don't match)

i.e. fill in ""http://saio:8080/v1/AUTH_test/cors-container"" for ""URL"" and
leave ""Token"" blank.

You would expect that the browser would not complete the request because
""Origin: null"" does not match the configured ""Access-Control-Allow-Origin:
example.com"" on the container metadata, and indeed with this patch - it won't!

Also:

The way cors is set up does not play well with certain applications for swift.
If you are running a CDN on top of swift and you have the
Access-Control-Allow-Origin cors header set to * then you probably want the *
to be cached on the the CDN, not the Origin that happened to result in an
origin request.

Also:

If you were unfortunate enough to allow cors headers to be saved directly
onto objects then this allows them to supersede the headers coming from the
container.

NOTE: There is a change is behavior with this patch. Because its cors, a
      spec that was created only to cause annoyance to all, I'll write out
      what's being changed and hopefully someone will speak up if it breaks
      there stuff.

previous behavior: When a request was made with a Origin header set the
                   cors_validation decorator would always add that origin as
                   the Access-Control-Allow-Origin header in the response-
                   whether the passed origin was a match with the container's
                   X-Container-Meta-Access-Control-Allow-Origin or not, or even
                   if the container did not have CORS set up at all.
new behavior: If strict_cors_mode is set to True in the proxy-server.conf
              (which is the default) the cors_validation decorator will only
              add the Access-Control-Allow-Origin header to the response when
              the request's Origin matches the value set in
              X-Container-Meta-Access-Control-Allow-Origin. NOTE- if the
              container does not have CORS set up it won't just magically start
              working. Furthremore, if the Origin doesn't match the
              Access-Control-Allow-Origin - a successfully authorized request
              (either by token or public ACL) won't be *denied* - it just
              won't include the Access-Control-Allow-Origin header (it's up
              to the security model in the browser to cancel the request
              if the response doesn't include a matching Allow-Origin
              header).  On the other hand, if you want to restrict requests
              with CORS, you can actually do it now.

              If you are worried about breaking current functionality you
              must set:

              strict_cors_mode = False

              in the proxy-server.conf. This will continue with returning the
              passed in Origin as the Access-Control-Allow-Origin in the
              response.

previous: If you had X-Container-Meta-Access-Control-Allow-Origin set to *
          and you passed in Origin: http://hey.com you'd get
          Access-Control-Allow-Origin: http://hey.com back. This was true for
          both OPTIONS and regular reqs.
new: With X-Container-Meta-Access-Control-Allow-Origin set to * you get * back
     for both OPTIONS and regular reqs.

previous: cors headers saved directly onto objects (by allowing them to be
          saved via the allowed_headers config in the object-server conf)
          would be overridden by whatever container cors you have set up.
new: For regular (non-OPTIONS) calls the object headers will be kept. The
     container cors will only be applied to objects without the
     'Access-Control-Allow-Origin' and 'Access-Control-Expose-Headers' headers.
     This behavior doesn't make a whole lot of sense for OPTIONS calls so I
     left that as is. I don't think that allowing cors headers to be saved
     directly onto objects is a good idea and it should be discouraged.

DocImpact

Change-Id: I9b0219407e77c77a9bb1133cbcb179a4c681c4a8"
smerritt,2014-03-11 18:25:04,https://api.github.com/repos/openstack/swift/git/commits/e7fb089f59c6e17f29fc93bffdf16a878fd78b06,e7fb089f59c6e17f29fc93bffdf16a878fd78b06,"Fix ring-builder crash

If you had a partition with 1 replica on a deleted device, 1 on a
zero-weight device, and 1 on a normal device, then rebalancing would
crash. This was because the ring builder was memoizing tiers_for_dev()
for all *available* devices (i.e. weight > 0 and not deleted), but
depended on it being present for all devices with partitions still on
them.

Since the builder moved the replica from the deleted device, it left
the one on the zero-weight device alone, so you had an unavailable
device with a partition replica still on it, triggering the crash.

Now we go ahead and memoize tiers_for_dev() for *all* devices, not
just available ones, thereby fixing the crash.

Change-Id: Ie0b58b65e0353732cf785ab772e95e699f3a5b5d"
smerritt,2014-03-07 23:53:05,https://api.github.com/repos/openstack/swift/git/commits/d9d5790d421ee0d47534ff3b4bfa7fc8f0eae1b5,d9d5790d421ee0d47534ff3b4bfa7fc8f0eae1b5,"Functional tests for TempURL and SLO together

Change-Id: I4893911e50005d5b669b96e7d59b6149c734780e"
smerritt,2014-03-07 22:25:25,https://api.github.com/repos/openstack/swift/git/commits/165dd44208e61340458ba04bbdca49013da1ed8e,165dd44208e61340458ba04bbdca49013da1ed8e,"Add tempurl to the example proxy config's pipeline

Change-Id: Ic4df234d181e4f5c0243a5feb8fd135dd8dc1e93"
dpgoetz,2014-03-06 15:47:42,https://api.github.com/repos/openstack/swift/git/commits/8d1278cae8069977577c0394e0e7fb34350f1d54,8d1278cae8069977577c0394e0e7fb34350f1d54,"copy over swift.authorize stuff into subrequests

If auth is setup in the env then it needs to be copied over with the
make_request wsgi helper.  Also renamed make_request to
make_subrequest- when I grepped for make_request I got > 250 results,
this'll make it easier to find references to this function in the
future.

Updated docs and sample confs to show tempurl needs to be before dlo and
slo as well as auth.

Change-Id: I9750555727f520a7c9fedd5f4fd31ff0f63d8088"
lexholden,2014-03-07 17:56:25,https://api.github.com/repos/openstack/swift/git/commits/18520a9943f1fe6f49a65e00b5e19318986ed08d,18520a9943f1fe6f49a65e00b5e19318986ed08d,"Fixed mispelling in function name - accross to across

Change-Id: I7d9749218d277c9e71e47d903b3126f9f73ffe65"
smerritt,2014-03-06 21:11:03,https://api.github.com/repos/openstack/swift/git/commits/28c0da29b03e61f1018f3a4da0ca167cd1c0f75f,28c0da29b03e61f1018f3a4da0ca167cd1c0f75f,"Functional tests for tempurl

Change-Id: I578be387fe6119a86a8abc544b3cbe210ddca3c1"
portante,2014-03-06 05:03:03,https://api.github.com/repos/openstack/swift/git/commits/a2c503ba2a36e154fb523f1446962b40550fa8e5,a2c503ba2a36e154fb523f1446962b40550fa8e5,"Add missing swift constraint for functional tests

Looks like we are keeping at least four lists of the default
constraints in various places, and when we added the max_header_size
in initial Static Large Object Support commit (5d73da15) we failed to
add it to the two locations in the test tree (test/sample.conf and
test/functional/tests.py).

With this commit we take a small step to consolidate the list of
constraints to the constraints module by removing the list from the
tests module (note we still have them listed in the sample swift.conf
file and the test module's sample.conf file), document the missing
reference in the test module's sample.conf file, and, while we're at
it, use the SWIFT_CONF_FILE reference where possible.

Change-Id: Ic4fa5f1aedec9bc7a7b43ce1a2ca3cdebce6171f"
zhouyuan,2014-03-05 08:23:42,https://api.github.com/repos/openstack/swift/git/commits/59ad30ce8c9d9eb4297c0cf80482f962f50f9f4a,59ad30ce8c9d9eb4297c0cf80482f962f50f9f4a,"Make internal client work with conf.d

Copied from Clay's patch in LP

Fixes bug #1277046

Change-Id: I2052ffaea3a74cdca9596b08273b7120570b1375"
smerritt,2014-03-05 02:40:12,https://api.github.com/repos/openstack/swift/git/commits/2ed5a4ae86fdb9e1970e081c14f463b7a72b166a,2ed5a4ae86fdb9e1970e081c14f463b7a72b166a,"Speed up failing InternalClient requests

InternalClient.make_request was sleeping after every attempt,
including the last one. We don't need to sleep after the final
attempt; we can just return failure.

Change-Id: Ieee5f96afb5b39a659d8438a237bfd907405165a"
clayg,2014-02-28 04:27:29,https://api.github.com/repos/openstack/swift/git/commits/3f857898a93081a1c17dd89850d0ece04569d120,3f857898a93081a1c17dd89850d0ece04569d120,"Update tox.ini so flake8 works even without hacking

The flake8 command (when run from the command line or via vim-flake8) seems to
bypass the the normal pep8 [W]arning and [E]rror as well as py[F]lake checks
if the project level tox.ini includes a select, but doesn't include them in
it's select option (tested on flake8 v2.0 and v2.1).  Somehow if hacking is
installed these checks always run even if they're not explicitly listed in the
select list - but adding them so flake8 works on our project even without
hacking doesn't seem to cause any problems.

Also The [flake8] section's ""select"" option in tox.ini doesn't seem to run all
checks when presented with the space-comma seperated list.  I had to pull out
the bare except check (H201), because our hacking fix for the ""H201 # noqa""
hasn't been released to pypi yet (maybe hacking version 0.9.0?).

As far as I know the Swift core development team is fully onboard with pep8,
and the flake8 checks are mostly like ""unused import"" stuff - so I *think*
this change is more about making the tool test what we want it too and not
changing or adding any new requirements or expectations.

Change-Id: Ia911c63745100cce182d5c5eb67b77e31c1e9b18"
clayg,2014-03-03 17:08:43,https://api.github.com/repos/openstack/swift/git/commits/20466d80fa9adbe0cc6f90c075577feaefe417db,20466d80fa9adbe0cc6f90c075577feaefe417db,"sanity check copy tests

Change-Id: I4880e0a790dabb84e8c55fe11c36df41aeb0c739"
smerritt,2014-03-04 01:28:48,https://api.github.com/repos/openstack/swift/git/commits/09ef06fd9997691ab29129369716e369c41baebe,09ef06fd9997691ab29129369716e369c41baebe,"Convert all old-style classes to new-style

This cleanup has been slowly happening for a while; let's finish it.

Change-Id: I1561e3540d524834e0cc5bc725ab80936eae1f0e"
changbl,2014-03-03 00:10:27,https://api.github.com/repos/openstack/swift/git/commits/ccaa83c6e5e2b7adcdfd1987cd2c9af38c4a5f0e,ccaa83c6e5e2b7adcdfd1987cd2c9af38c4a5f0e,"Use new style class for ringbuilder's Commands

classs Commands:

==>

class Commands(object):

Change-Id: I160a10f4380b41dc76d5b359aa66c42b3242e940"
smerritt,2014-02-28 02:30:15,https://api.github.com/repos/openstack/swift/git/commits/3f19041c99fd86fefb8a43071bab279d37f324af,3f19041c99fd86fefb8a43071bab279d37f324af,"Don't lard up InternalClient with extra middleware

One can argue that it makes sense for the client-facing proxy server
to have certain middlewares like gatekeeper in its pipeline, but that
is not desirable for InternalClient. In particular, it prevents you
from passing in sysmeta headers using InternalClient, and I found
myself wanting to do that earlier today.

Now InternalClient's proxy application gets exactly what's configured;
no more, no less. This will mean that the object expirer can read and
write sysmeta headers, but I think we can trust it to keep our
secrets.

Change-Id: I17b4a89c24e600754701ee1645b40406421fa6f3"
gholt,2014-02-28 17:10:03,https://api.github.com/repos/openstack/swift/git/commits/e82d40da46caa4505791993953a650fe509884aa,e82d40da46caa4505791993953a650fe509884aa,"Object server PUTs should respect client_timeout

It seems the object server never respected the client_timeout value
since the beginning of Swift. This is normally fine since the proxy does
and will normally hang up on the backends. But if the proxy has a bug or
if there's network issues or whatever, the object server should be smart
enough to enforce this timeout as well.

Our operations guys noticed this problem when older processes would
never exit after a reload. They started investigating and saw that the
object server had open tmp files that hadn't been touched in quite some
time. Sometimes the tmp files didn't even exist anymore since the
reclaimer deletes really old untouched tmp files.

Change-Id: Iba0397203a2dccca4a28a8c8cbfc5a60e429837a"
smerritt,2014-02-28 06:38:53,https://api.github.com/repos/openstack/swift/git/commits/4f24ef87d6c272babe3f98d3f448a400a9ea8b1c,4f24ef87d6c272babe3f98d3f448a400a9ea8b1c,"Make DLO manifest copying work with ?multipart-manifest=get

If a client issues a COPY request for a DLO with the query param
multipart-manifest=get, then the expectation is a new
manifest. However, this wasn't the case; X-Object-Manifest wasn't
being set on the new object, so the result was a normal object with
the same contents as the old manifest (typically 0 bytes).

There was already a mechanism by which middlewares could modify COPY
requests; this commit extends that so they can set headers on the new
object.

Note that this has nothing to do with a ""normal"" DLO copy, i.e. one
without multipart-manifest=get. That one makes a new object that's the
concatenation of the segments, and it was working just fine.

Change-Id: I1073af9fee6e34ebdfad7b1a89aeb05e4523a151"
smerritt,2014-02-28 02:18:00,https://api.github.com/repos/openstack/swift/git/commits/3860e553ba32b725fbe3f39888156544a0efa8fb,3860e553ba32b725fbe3f39888156544a0efa8fb,"Fix a couple typos

Change-Id: I9d63e9b52162dfccd72488655f61842e7723718f"
houming-wang,2014-02-26 12:53:10,https://api.github.com/repos/openstack/swift/git/commits/dc5c5fb4011cc8dee9b149e668dc8534ac7f51e0,dc5c5fb4011cc8dee9b149e668dc8534ac7f51e0,"Remove blank space after print

Check Swift code, remove blank space after print.

Change-Id: Ia7838ac5f33f2b335d1cd664b017e87118262d29"
notmyname,2014-02-23 23:24:47,https://api.github.com/repos/openstack/swift/git/commits/b6eda4a40bd55771771ca8039e9c3ad39ff7de11,b6eda4a40bd55771771ca8039e9c3ad39ff7de11,"AUTHORS and CHANGELOG update for 1.13 release

Change-Id: I6195c70cbbd7c94682539962dd5410e3665f01ac"
ionosphere80,2014-02-21 03:27:20,https://api.github.com/repos/openstack/swift/git/commits/3357a58ea2a8fc35e6672c52028e59fbafe7fcb7,3357a58ea2a8fc35e6672c52028e59fbafe7fcb7,"Alphabetized items under ""Middleware"" in source documentation

I alphabetized the items under ""Middleware"" in the source documentation
to make them easier to locate.

Change-Id: I3a0108c89d16ef07b7623dda518b3096c2686002"
notmyname,2014-02-23 18:22:34,https://api.github.com/repos/openstack/swift/git/commits/beaa2b8744841acac5af1a2171a358f58d7288be,beaa2b8744841acac5af1a2171a358f58d7288be,"tabs to spaces

Change-Id: Ie3d3af87df8f72792abf345c0d4dcfe2be1f4141"
smerritt,2014-02-22 00:49:22,https://api.github.com/repos/openstack/swift/git/commits/f42cb54002eaaa1f82a7a489802afc85412e2ce1,f42cb54002eaaa1f82a7a489802afc85412e2ce1,"Refactor a quorum-size calculation

No behavior change, just use the utility function instead of rolling
our own.

Change-Id: I152ccd8f22f424cd7547fa4d67df020f263096a9"
ionosphere80,2014-02-21 17:59:29,https://api.github.com/repos/openstack/swift/git/commits/5dfa0bd3fba6fe414f7a6ed9d7d19f9dea25445e,5dfa0bd3fba6fe414f7a6ed9d7d19f9dea25445e,"Alphabetized items under other sections in source documentation

I alphabetized the items under ""Proxy"", ""Account"", ""Container"",
and ""Object"" in the source documentation to make them easier to
locate.

Change-Id: Ia9cca0ee558cb1e0361c1a88103352bd006da1e3"
smerritt,2014-02-21 07:01:00,https://api.github.com/repos/openstack/swift/git/commits/38e015e871add82889d1e7999b35b795f4a7d1f5,38e015e871add82889d1e7999b35b795f4a7d1f5,"Functional tests for DLO If-Match/If-None-Match

Change-Id: I4a731a3836eb0f58b897ee43477b3b76d2344a81"
smerritt,2014-02-21 06:01:39,https://api.github.com/repos/openstack/swift/git/commits/46250171ef285b0d297b05f413f1a27ff1dbdb65,46250171ef285b0d297b05f413f1a27ff1dbdb65,"Functional tests for SLO If-Match/If-None-Match

Change-Id: Ib70f579f5edebc7b1586e5f51fee5769bcaa9931"
smerritt,2014-02-21 04:33:00,https://api.github.com/repos/openstack/swift/git/commits/25ebf3aa9e6e98974565ae1b70fc05b49423e17c,25ebf3aa9e6e98974565ae1b70fc05b49423e17c,"Raise error on long or short DLO

The GET response for a DLO has a Content-Length that's computed from
the container listing, but the response body's length is determined by
the segments. If a segment grows or shrinks between when the headers
are sent and when the segment is requested, this confuses clients.

For example, if the DLO is longer than its Content-Length and the
client sends another request on the same TCP connection, then it can
get leftover object bytes instead of an HTTP status line.
Alternately, if the headers it sends fill up the TCP buffers since
Swift won't read them until the first response is done, then deadlock
hilarity ensues.

If the DLO is shorter than its Content-Length, you're pretty much
guaranteed a deadlock: the client is waiting for the rest of the
response, and the server is waiting for a new request.

Now SegmentedIterable detects both these conditions and raises an
exception so that the TCP connection gets torn down. It can't save
this request, but it can stop the next one from getting hosed too.

Change-Id: Icf79ba046ef7aaaab49ce6d0b33147332c967afc"
ionosphere80,2014-02-21 02:19:09,https://api.github.com/repos/openstack/swift/git/commits/05854c51340f80fe56fec64ca54586c33717f1f4,05854c51340f80fe56fec64ca54586c33717f1f4,"Alphabetized items under ""Misc"" in source documentation

I alphabetized the items under ""Misc"" in the source documentation to
make them easier to locate.

Change-Id: I1badca7a97e7d887fefac0be2e2208eec52cec60"
smerritt,2014-02-13 02:29:12,https://api.github.com/repos/openstack/swift/git/commits/1f67eb7403e6000840c44ec702c406f177ea1942,1f67eb7403e6000840c44ec702c406f177ea1942,"Support If-[None-]Match for object HEAD, SLO, and DLO

I moved the checking of If-Match and If-None-Match out of the object
server's GET method and into swob so that everyone can use it. The
interface is similar to the Range handling; make a response with
conditional_response=True, and you get handing of If-Match and
If-None-Match.

Since the only users of conditional_response are object GET, object
HEAD, SLO, and DLO, this has the effect of adding support for If-Match
and If-None-Match to just the latter three places and nowhere
else. This makes object GET and HEAD consistent for any kind of
object, large or small.

This also fixes a bug where various conditional headers (If-*) were
passed through to the object server on segment requests, which could
cause segment requests to fail with a 304 or 412 response. Now only
certain headers are copied to the segment requests, and that doesn't
include the conditional ones, so they can't goof up the segment
retrieval.

Note that I moved SegmentedIterable to swift.common.request_helpers
because it sprouted a transitive dependency on swob, and leaving it in
utils caused a circular import.

Bonus fix: unified the handling of DiskFileQuarantined and
DiskFileNotFound in object server GET and HEAD. Now in either case, a
412 will be returned if the client said ""If-Match: *"". If not, the
response is a 404, just like before.

Closes-Bug: 1279076
Closes-Bug: 1280022
Closes-Bug: 1280028

Change-Id: Id2ee78346244d516b980202e990aa38ce6812de5"
shane-wang,2014-02-07 08:06:12,https://api.github.com/repos/openstack/swift/git/commits/a94be9443d639dc0ac8498d8a35fed2832379ee7,a94be9443d639dc0ac8498d8a35fed2832379ee7,"Fix misspellings in swift

Fix misspellings detected by:
* pip install misspellings
* git ls-files | grep -v locale | misspellings -f -

Change-Id: I6594fc4ca5ae10bd30eac8a2f2493a376adcadee
Closes-Bug: #1257295"
morucci,2013-11-25 22:26:09,https://api.github.com/repos/openstack/swift/git/commits/7188275ac24ecf26951ba5ab248934890becbc21,7188275ac24ecf26951ba5ab248934890becbc21,"Fix account quota mw for handling a bad source path

The copy source must be container/object.
This patch avoids the server to return
an internal server error when user provides
a path without a container.

Change-Id: I8ea4e62b2a00c4b4a1666d30411a6c93a4f848a5
Fixes: bug #1254626"
luisbg,2014-02-13 21:45:07,https://api.github.com/repos/openstack/swift/git/commits/5f503916f15bbbeaba67d9f1631b983abe144129,5f503916f15bbbeaba67d9f1631b983abe144129,"small typo in cli/recon.py

Change ""Can't check for async's on non object servers."" to ""Can't check
asyncs on non object servers.""

Change-Id: I04f09187da73bb3709d11d8c6f3bb1901005a0cc"
smerritt,2014-02-12 23:48:29,https://api.github.com/repos/openstack/swift/git/commits/a519579c606725d7a63aac2ca9f8a1e4520b77b1,a519579c606725d7a63aac2ca9f8a1e4520b77b1,"Small efficiency improvement for SLO range GET

If a client sends a GET request with a Range header for a SLO
manifest, SLO would notice this and perform a second GET request, sans
Range header, to retrieve the manifest body. Most of the time, this is
the sane thing to do: a subset of a SLO manifest is pretty much
useless. However, if the client has requested the first N bytes of the
large object, and the SLO manifest has N or fewer bytes, then the
response will actually have the whole manifest in it, so SLO doesn't
need to make a second request. (It's not wrong, just inefficient.)

Fortunately, ranged GET responses come with a Content-Range header
that tells us first byte, last byte, and total content length. Now SLO
detects whether or not a ranged GET response contains the full
manifest, and if so, just uses the existing response instead of making
another.

Change-Id: I63b991e08a1165eb3e88bd0620a1e64ef056fec6"
notmyname,2014-02-04 23:17:11,https://api.github.com/repos/openstack/swift/git/commits/ab98fe3d74f12623822395dc288d223f6995a245,ab98fe3d74f12623822395dc288d223f6995a245,"Added docs about the swift_source log field

Change-Id: I934230a006c856de844d8580f3b57f38a9845844"
smerritt,2014-02-05 19:57:20,https://api.github.com/repos/openstack/swift/git/commits/5fca0d07a873106b2175bcb3b5bfbee1cbd04a31,5fca0d07a873106b2175bcb3b5bfbee1cbd04a31,"Ensure swift.source is set for DLO/SLO requests

SLO was setting it sometimes (the PUT path), but not others (the GET
path), and DLO just wasn't doing it at all. One could already
distinguish DLO/SLO internal requests by the user agent, but we should
set swift.source too.

Change-Id: I5d5b7dd49bd1522a9c830d0abd21fff92ae79a39"
greglange,2014-02-10 14:31:14,https://api.github.com/repos/openstack/swift/git/commits/8b4876f32a2e66bb2e1606a75dcc9a09ced43ab2,8b4876f32a2e66bb2e1606a75dcc9a09ced43ab2,"Fix recon docs

Change-Id: Icaa0f61e5796253dcc57b8c005577890de8aa537"
greglange,2014-02-06 23:14:45,https://api.github.com/repos/openstack/swift/git/commits/4a970ab5a6d2345670899ae082f26ff6a870e5de,4a970ab5a6d2345670899ae082f26ff6a870e5de,"Fix a comment in SLO middleware

Change-Id: I6ef435db55eb6cac5a92d9ef0f7ac3eaf271761d"
greglange,2014-02-06 17:10:19,https://api.github.com/repos/openstack/swift/git/commits/0f17c185c1bd9dd59796fc0ff5e66f821f0bd3b3,0f17c185c1bd9dd59796fc0ff5e66f821f0bd3b3,"Fix a comment in bulk middleware.

Change-Id: I3a65d090c5c6ce42639e0af0fcac738a12e52252"
prashanthpai,2014-02-04 11:01:47,https://api.github.com/repos/openstack/swift/git/commits/aad81528d4a0b443eb7bfccbcd3c1e523ed8efa9,aad81528d4a0b443eb7bfccbcd3c1e523ed8efa9,"Make .expiring_objects account name configurable

The account which tracks objects scheduled for deletion had its name
hard-coded to 'expiring_objects'. This is made configurable via
expiring_objects_account_name option. Backend file-systems
integration efforts may want to treat these ""special"" accounts in a
different way.

This would still go undocumented, hence 'pseudo-hidden'.

UpgradeImpact: None as the default value would continue to be the same
               which is '.expiring_objects'.

Change-Id: I1a093b0d0e2bdd0c3d723090af03fc0adf2ad7e3
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
greglange,2014-02-05 22:50:31,https://api.github.com/repos/openstack/swift/git/commits/6241ab2a9292ba7e97034eac5f1218e90aedddc5,6241ab2a9292ba7e97034eac5f1218e90aedddc5,"Fix a couple ifs in account quota middleware.

Unless I'm misunderstanding something, this is better/more
correct.

Change-Id: I6c62fbfdddea908a2671021a34fa25600b0dff45"
zaitcev,2014-02-04 18:20:56,https://api.github.com/repos/openstack/swift/git/commits/5cb7ac15c28c6e1aadbb4e446700904b42e15222,5cb7ac15c28c6e1aadbb4e446700904b42e15222,"Fix numbering of steps in proxy section of install_multinode

Steps were numbered 1, 2, (note reset), 1, 2, etc. Then a user says:
""I'm on Step 2 in Proxy section, er...""

See a bug, fix a bug.

Change-Id: If6f32b3a33e1070e705812df7ab299e6736c9806"
morucci,2013-12-10 17:31:55,https://api.github.com/repos/openstack/swift/git/commits/946984cb84414c84fe38d4b94b73174960e023b8,946984cb84414c84fe38d4b94b73174960e023b8,"Handle COPY verb in container quota middleware

The patch fix the ability to bypass the account
quota using the COPY verb. The quotas for destination
container are now checked before the copy.

Change-Id: I9f409ea6c0893f36972aa1fabe31fb143e151ab5
Fixes: bug #1259565"
smerritt,2013-11-22 01:31:16,https://api.github.com/repos/openstack/swift/git/commits/6acea29fa65e87ca9639172295c611412d7d6148,6acea29fa65e87ca9639172295c611412d7d6148,"Move all DLO functionality to middleware

This is for the same reason that SLO got pulled into middleware, which
includes stuff like automatic retry of GETs on broken connection and
the multi-ring storage policy stuff.

The proxy will automatically insert the dlo middleware at an
appropriate place in the pipeline the same way it does with the
gatekeeper middleware. Clusters will still support DLOs after upgrade
even with an old config file that doesn't mention dlo at all.

Includes support for reading config values from the proxy server's
config section so that upgraded clusters continue to work as before.

Bonus fix: resolve 'after' vs. 'after_fn' in proxy's required filters
list. Having two was confusing, so I kept the more-general one.

DocImpact

blueprint multi-ring-large-objects

Change-Id: Ib3b3830c246816dd549fc74be98b4bc651e7bace"
portante,2014-02-03 22:00:53,https://api.github.com/repos/openstack/swift/git/commits/b881a1896fb9d218325bc7671f02a037e529287d,b881a1896fb9d218325bc7671f02a037e529287d,"Fix up double mocking of swob.Request.__init__

From Pete Zaitcev's work on PBes (https://review.openstack.org/47713):

  Fixes up a problem with double mocking of Request.__init__, which
  should be seen in stock code as well.

Change-Id: Ibf8103425404b03aaab9a4e97a3a62d0fb8dbb14"
portante,2014-02-03 21:01:14,https://api.github.com/repos/openstack/swift/git/commits/0d710140c55c6a52f3c3aad1be2c56beb69dacb1,0d710140c55c6a52f3c3aad1be2c56beb69dacb1,"Reduce line count by two

Change-Id: Ib0ee2bb5b202966d3d07c754656c92006149af9c"
portante,2014-02-03 05:42:39,https://api.github.com/repos/openstack/swift/git/commits/204240222fdf63ba13d20946919549f0a3c374ad,204240222fdf63ba13d20946919549f0a3c374ad,"Attempt to make test_memcache_pool_timeout stable

Too much time can pass after we create a set of co-routines and when
the parent co-routine continues is setup and staging. Instead, we
perform all the setup and staging, let the system run and then verify
the final state after all the dust settles.

Change-Id: I801148e380807119d3d6da5a24ba9cced39fb339
Closes-Bug: 1272503"
creiht,2014-01-31 18:58:52,https://api.github.com/repos/openstack/swift/git/commits/15c04f6869c3ae4bb8906b3783551df0e718d462,15c04f6869c3ae4bb8906b3783551df0e718d462,"Attempt to fix periodic memcache timeout test

Not sure this will really fix the issue, but made a small change that
seemed to make more sense for the flow of the test.

Closes-Bug: #1272503
Change-Id: Ifb25ed7c4a42b11f74d865787f63fea4e0beb745"
bloodeagle40234,2014-01-27 09:08:37,https://api.github.com/repos/openstack/swift/git/commits/e078dc3da05ce9e7c2b36e05686d28101381eec8,e078dc3da05ce9e7c2b36e05686d28101381eec8,"Add missing sample config of object-replicator

Change-Id: I2bca67023aeb9a012927c69e23d582d4a0ff2098"
dpgoetz,2014-01-29 16:33:27,https://api.github.com/repos/openstack/swift/git/commits/b89ac55c05e723731d0df01c7a6e15c7d439f7f5,b89ac55c05e723731d0df01c7a6e15c7d439f7f5,"Add a way to ratelimit all writes to an account

This is in case a cluster gets a problem user who has distributed the
writes to a bunch of containers but is just taking too much of the
cluster's resources.

Change-Id: Ibd2ffd0e911463a432117b478585b9f8bc4a2495"
otherjon,2013-11-13 20:55:14,https://api.github.com/repos/openstack/swift/git/commits/282fa0c398e2f9e73d524a5ec15ab5822523a2ed,282fa0c398e2f9e73d524a5ec15ab5822523a2ed,"Privileged acct ACL header, new ACL syntax, TempAuth impl.

 * Introduce a new privileged account header: X-Account-Access-Control
 * Introduce JSON-based version 2 ACL syntax -- see below for discussion
 * Implement account ACL authorization in TempAuth

X-Account-Access-Control Header
-------------------------------

Accounts now have a new privileged header to represent ACLs or any other
form of account-level access control.  The value of the header is an opaque
string to be interpreted by the auth system, but it must be a JSON-encoded
dictionary.  A reference implementation is given in TempAuth, with the
knowledge that historically other auth systems often use TempAuth as a
starting point.

The reference implementation describes three levels of account access:
""admin"", ""read-write"", and ""read-only"".  Adding new access control
features in a future patch (e.g. ""write-only"" account access) will
automatically be forward- and backward-compatible, due to the JSON
dictionary header format.

The privileged X-Account-Access-Control header may only be read or written
by a user with ""swift_owner"" status, traditionally the account owner but
now also any user on the ""admin"" ACL.

Access Levels:

Read-only access is intended to indicate to the auth system that this
list of identities can read everything (except privileged headers) in
the account.  Specifically, a user with read-only account access can get
a list of containers in the account, list the contents of any container,
retrieve any object, and see the (non-privileged) headers of the
account, any container, or any object.

Read-write access is intended to indicate to the auth system that this
list of identities can read or write (or create) any container.  A user
with read-write account access can create new containers, set any
unprivileged container headers, overwrite objects, delete containers,
etc.  A read-write user can NOT set account headers (or perform any
PUT/POST/DELETE requests on the account).

Admin access is intended to indicate to the auth system that this list of
identities has ""swift_owner"" privileges.  A user with admin account access
can do anything the account owner can, including setting account headers
and any privileged headers -- and thus changing the value of
X-Account-Access-Control and thereby granting read-only, read-write, or
admin access to other users.

The auth system is responsible for making decisions based on this header,
if it chooses to support its use.  Therefore the above access level
descriptions are necessarily advisory only for other auth systems.

When setting the value of the header, callers are urged to use the new
format_acl() method, described below.

New ACL Format
--------------

The account ACLs introduce a new format for ACLs, rather than reusing the
existing format from X-Container-Read/X-Container-Write.  There are several
reasons for this:
 * Container ACL format does not support Unicode
 * Container ACLs have a different structure than account ACLs
  + account ACLs have no concept of referrers or rlistings
  + accounts have additional ""admin"" access level
  + account access levels are structured as admin > rw > ro, which seems more
    appropriate for how people access accounts, rather than reusing
    container ACLs' orthogonal read and write access

In addition, the container ACL syntax is a bit arbitrary and highly custom,
so instead of parsing additional custom syntax, I'd rather propose a next
version and introduce a means for migration.  The V2 ACL syntax has the
following benefits:
 * JSON is a well-known standard syntax with parsers in all languages
 * no artificial value restrictions (you can grant access to a user named
    "".rlistings"" if you want)
 * forward and backward compatibility: you may have extraneous keys, but
    your attempt to parse the header won't raise an exception

I've introduced hooks in parse_acl and format_acl which currently default
to the old V1 syntax but tolerate the V2 syntax and can easily be flipped
to default to V2.  I'm not changing the default or adding code to rewrite
V1 ACLs to V2, because this patch has suffered a lot of scope creep already,
but this seems like a sensible milestone in the migration.

TempAuth Account ACL Implementation
-----------------------------------

As stated above, core Swift is responsible for privileging the
X-Account-Access-Control header (making it only accessible to swift_owners),
for translating it to -sysmeta-* headers to trigger persistence by the
account server, and for including the header in the responses to requests
by privileged users.  Core Swift puts no expectation on the *content* of
this header.  Auth systems (including TempAuth) are responsible for
defining the content of the header and taking action based on it.

In addition to the changes described above, this patch defines a format
to be used by TempAuth for these headers in the common.middleware.acl
module, in the methods format_v2_acl() and parse_v2_acl().  This patch
also teaches TempAuth to take action based on the header contents.  TempAuth
now sets swift_owner=True if the user is on the Admin ACL, authorizes
GET/HEAD/OPTIONS requests if the user is on any ACL, authorizes
PUT/POST/DELETE requests if the user is on the admin or read-write ACL, etc.

Note that the action of setting swift_owner=True triggers core Swift to
add or strip the privileged headers from the responses.  Core Swift (not
the auth system) is responsible for that.

DocImpact: Documentation for the new ACL usage and format appears in
summary form in doc/source/overview_auth.rst, and in more detail in
swift/common/middleware/tempauth.py in the TempAuth class docstring.
I leave it to the Swift doc team to determine whether more is needed.

Change-Id: I836a99eaaa6bb0e92dc03e1ca46a474522e6e826"
dpgoetz,2014-01-27 23:32:01,https://api.github.com/repos/openstack/swift/git/commits/c0bf01afdb88425f4cd5b504fd2cb49b3f23e824,c0bf01afdb88425f4cd5b504fd2cb49b3f23e824,"Config option to lower the timeout for recoverable object GETs.

Change-Id: I71f9824559126e4025e7629715ab9dac64231e09"
notmyname,2014-01-28 18:39:29,https://api.github.com/repos/openstack/swift/git/commits/b20278907bdaafe54e2537294a20a1d890b953f7,b20278907bdaafe54e2537294a20a1d890b953f7,"Merge branch 'milestone-proposed' (1.12.0) into merge_branch

Change-Id: I0e249625c90ef05dddebaf2ada9cdb56c7b7af94"
dpgoetz,2014-01-22 21:03:51,https://api.github.com/repos/openstack/swift/git/commits/78704010cc4c3b5c2bd050ee846323506ad3ed5b,78704010cc4c3b5c2bd050ee846323506ad3ed5b,"Add flag to stop swob from always using absolute location.

This is a backport of commit 89deaf5f3cb062cc2c2d7d7d365e84ec2e41a511

This is needed for SOS (along with patch
https://github.com/dpgoetz/sos/pull/37)
to work with swift 1.12 . By spec you should always use the absolute
location but this causes a problem with staticweb over a cdn using a
cname. Basically you want to be able to forward the browser to a
relative location instead of whatever full url the proxy server
thinks you are using.

Change-Id: I28dcbd779d2aa4a6e636c956b058670b8e4b2fd7"
dpgoetz,2014-01-22 21:03:51,https://api.github.com/repos/openstack/swift/git/commits/89deaf5f3cb062cc2c2d7d7d365e84ec2e41a511,89deaf5f3cb062cc2c2d7d7d365e84ec2e41a511,"Add flag to stop swob from always using absolute location.

This is needed for SOS (along with patch
https://github.com/dpgoetz/sos/pull/37)
to work with swift 1.12 . By spec you should always use the absolute
location but this causes a problem with staticweb over a cdn using a
cname. Basically you want to be able to forward the browser to a
relative location instead of whatever full url the proxy server
thinks you are using.

Change-Id: I3fa1d415bf9b566be069458b838f7e65db0c4f39"
clayg,2014-01-24 09:24:05,https://api.github.com/repos/openstack/swift/git/commits/bb8ffe17a55691c47f09ba8ae7062e4c30b498b3,bb8ffe17a55691c47f09ba8ae7062e4c30b498b3,"Move test.unit.locale out of gettext's way

When I run unittests on my laptop I get an ImportError from gettext who tries
to ""from locale import normalize"" and says ""ImportError: cannot import name
normalize"".  Whit this patch unittests works, not sure why this problem
doesn't show up in my other dev environments.

Also this seems like good form since 'locale' is already a stdlib module.

Change-Id: If0fcd66ce391665b4e4127c610de3246db409a68"
clayg,2014-01-17 09:15:22,https://api.github.com/repos/openstack/swift/git/commits/63f8c2284acb6fb410c39e2ac34b6321eeea4f3f,63f8c2284acb6fb410c39e2ac34b6321eeea4f3f,"Add documentation for GateKeeper

The purpose of GateKeeper mostly relates to the development of new swift code,
so I threw together a guide for development_middleware that covers some basics
with a eye towards metadata handling in-particular.

I also fixed up some missing autodoc's, split out middleware autodoc and added
some ref's here and about so I could link to them from the
development_middleware guide.

DocImpact
Change-Id: I20dd942ea8df9e33c3e794cb49669ffa1332c63e"
dmsimard,2014-01-20 18:30:58,https://api.github.com/repos/openstack/swift/git/commits/c656e1894918d774fa841214f2e00af8a4a66b44,c656e1894918d774fa841214f2e00af8a4a66b44,"Add secondary groups to user during privilege escalation

setgid provides the primary group, setgroups sets the secondary
groups. Prior to this patch, we would do a setgroups with an empty
list, effectively wiping secondary groups. We now verify which
secondary groups the user is member of and escalate the privileges
accordingly.

Change-Id: I33a10edd448b3ac5aa758a8d1d70e582cf421c7d
Closes-Bug: 1269473"
portante,2014-01-22 21:18:48,https://api.github.com/repos/openstack/swift/git/commits/d6f0582c63e34b0b9f8ac36db015f6f1d6a0adc8,d6f0582c63e34b0b9f8ac36db015f6f1d6a0adc8,"Add debug logger on per-test proxy-server

To help debug problems with the proxy-server app setup for each class,
we add a debug logger so that on failure we can see what requests were
actually sent.

Additionally, we move the set_http_connect() call to the same relative
position as the one before it for clarity of intent.

Related bug 1271962

Change-Id: Idc301c06e114b11c358ee4fbc0b2b70ec7743091"
gholt,2014-01-16 01:58:49,https://api.github.com/repos/openstack/swift/git/commits/69d331d0d65d2f316bfdace8b9e018631ef47eba,69d331d0d65d2f316bfdace8b9e018631ef47eba,"Container Sync: Simple HTTP Proxy load balancing

Change-Id: I021b043b927153bacff48cae648d4d8c5bbad765"
gholt,2014-01-23 01:05:16,https://api.github.com/repos/openstack/swift/git/commits/b45e9a97eec1a141dbae38169f4fbf14433ed749,b45e9a97eec1a141dbae38169f4fbf14433ed749,"Skip delete_at_update for replication requests

Requests through the object server that are from backend replication
should not send x-delete-at updates to the .expiring_objects account.
Replication is just moving data around or making new replicas, not
creating new data from nothing.

Change-Id: I324864face3ff559822c7a50c50e675e8b889b48"
portante,2014-01-14 00:38:09,https://api.github.com/repos/openstack/swift/git/commits/4b1fc88b1e45b28eec89c853b9d4c8dc2521245a,4b1fc88b1e45b28eec89c853b9d4c8dc2521245a,"Fix up SAIO to use new gatekeeper

Fix up the SAIO default proxy-server pipeline to use the new
gatekeeper and update to follow the pipeline ordering from proxy
sample.

Change-Id: Iaa4de7abd7fc557cafe6fe40668973e9fc142ca3"
portante,2014-01-16 05:49:28,https://api.github.com/repos/openstack/swift/git/commits/ca87827db902ebe98126e88d43098e3097d42044,ca87827db902ebe98126e88d43098e3097d42044,"Use a tempfile.mkdtemp() based temporary directory

Change-Id: Ie0e8137615348b130b67323d0d2913dc5ebfd5fb"
notmyname,2014-01-17 17:56:52,https://api.github.com/repos/openstack/swift/git/commits/892c226ce57a8367db46409fe35257ae41c558f7,892c226ce57a8367db46409fe35257ae41c558f7,"lower the default yield frequency for bulk requests

closes bug 1270246

DocImpact

Change-Id: If7f484d1a580e991896ac55f822655110266f3fa"
smerritt,2014-01-15 18:31:36,https://api.github.com/repos/openstack/swift/git/commits/a8ba7513705fe2a4c9d776c8833ff0f7f6d43ce4,a8ba7513705fe2a4c9d776c8833ff0f7f6d43ce4,"Make sure SLO's bulk-delete logger is configured

The SLO middleware supports deletion of an object and all its
segments; internally, it uses the same code as the bulk middleware to
do this (swift.common.middleware.bulk.Bulk).

If something goes wrong in the bulk delete, the Bulk object logs the
exception; however, SLO's Bulk object's logger always has the default
logging config, so if you've got a non-default logging setup
(e.g. syslog to a remote log host), this one exception message goes
somewhere else (e.g. local syslog).

This patch makes SLO and its bulk deleter share a logger so all the
messages go to the same place.

Change-Id: Idb01b5640257a02dbb9c698851a14ad8fba11a2d"
notmyname,2014-01-15 20:05:08,https://api.github.com/repos/openstack/swift/git/commits/f782acf0c5136748303989de5b29f400a0e9977d,f782acf0c5136748303989de5b29f400a0e9977d,"release notes and authors update for 1.12

Change-Id: I76c13957a7758287fd40dd2e9fb85277d9288977"
smerritt,2014-01-17 19:45:57,https://api.github.com/repos/openstack/swift/git/commits/a7e0a9d57d87eb3cae6bd4baa2b080a3cf4a36f4,a7e0a9d57d87eb3cae6bd4baa2b080a3cf4a36f4,"Fix swift-dispersion-report when partitions overlap

swift-dispersion-report tries to avoid checking a partition more than
once, so it keeps track of partitions already queried and skips
duplicates.

swift-dispersion-report also keeps track of the number of successful
responses; it counts the number of expected replicas to find, and also
counts the number of replicas actually found, and tells the operator
if the numbers differ.

However, in the case that a partition was duplicated, the
expected-responses counter was incremented, but the actual check was
skipped, so it looked as though some copies were missing. Now we only
increment the expected-responses counter if we're actually going to
perform the check.

Change-Id: I22ac2b8066b62ca7c8ebf099c9f602118bb1a298"
dpgoetz,2014-01-14 20:51:40,https://api.github.com/repos/openstack/swift/git/commits/04b1af215e152ed559a72fe5a521fae753944f65,04b1af215e152ed559a72fe5a521fae753944f65,"Drop origin from get_info calls

The reason for this is that having origin in the get_info calls causes an
infinite loop. The way that code was written it relies on GETorHEAD_base to
populate the data- the only problem is that the HEAD call is wrapped by
cors_validation which calls get_info and round and round we go. imo get_info
should be refactored to not work this way (relying on this other call to do
stuff behind scenes and then magically your stuff is there) because it seems
pretty prone to breaking. But I'll let somebody else do that :).

Fixes bug 1270039

Change-Id: Idad3cedd965e0d5fb068b062fe8fef301c87b75a"
dirkmueller,2014-01-16 12:39:08,https://api.github.com/repos/openstack/swift/git/commits/9f11819f1645dbcdf9272dde8532acd157085b5b,9f11819f1645dbcdf9272dde8532acd157085b5b,"Remove dependencies on pep8, pyflakes and flake8

They should be determined by the hacking dependency
implicitely.

Change-Id: I8805f7b0ef9f2b1f59be342e9c6d032330707688"
smerritt,2014-01-16 20:50:48,https://api.github.com/repos/openstack/swift/git/commits/92fc917b4b753f95f6c950037b2cb5daabf11706,92fc917b4b753f95f6c950037b2cb5daabf11706,"Let swift-object-info skip etag verification

Now swift-object-info has a ""-n"" option that will cause the etag
verification to be skipped; on large objects, the etag verification
takes the vast majority of the runtime, and sometimes you just want to
know which account owns the 5 GB monstrosity without waiting around while
its checksum is verified.

Change-Id: Id284570633eb7b98046cdb948d7c37a152de1195"
smerritt,2014-01-15 19:01:52,https://api.github.com/repos/openstack/swift/git/commits/13c89766b1d30c74bc54eb6992195eb4fed4c817,13c89766b1d30c74bc54eb6992195eb4fed4c817,"Use constant-time string compare for /info requests

If you GET /info?swiftinfo_sig=<HMAC>&swiftinfo_expires=<TIME>, then
the response contains any admin-only information that's been
registered (via calls to register_swift_info(admin=True)).

The bad news is that the info controller isn't using streq_const_time
to compare the valid HMAC signatures with the passed-in one, leading
to a possible timing attack.

The good news is that this isn't a security hole since there's
absolutely nothing interesting in the admin-only section yet, so even
if an attacker does suss out a valid signature, they don't learn
anything. However, we should still fix this in case anything
interesting ever does get added.

Change-Id: I28b6814def67200ddaa6272e09f6a55fb517fd97"
morucci,2014-01-16 12:16:26,https://api.github.com/repos/openstack/swift/git/commits/b6da40899c43c5f86e2d3b8228c87e5d856a6daa,b6da40899c43c5f86e2d3b8228c87e5d856a6daa,"Remove an useless dependency to swiftclient

Unit tests in test/unit only have one dependency
to swiftclient in test_direct_client.py. This one
can be easily avoided and this patch removes it.

Change-Id: Ic1c78bc7f7fe426e8f7d8209a783342a0c4f071f"
smerritt,2014-01-16 12:40:53,https://api.github.com/repos/openstack/swift/git/commits/754633988931e4095530f6b13389c254096eb485,754633988931e4095530f6b13389c254096eb485,"Use constant time comparison in tempURL

Use constant time comparison when evaluating tempURL to avoid timing
attacks (CVE-2014-0006).

Fixes bug 1265665

Change-Id: I11e4ad83cc4077e52adf54a0bd0f9749294b2a48"
gholt,2014-01-04 06:22:46,https://api.github.com/repos/openstack/swift/git/commits/39b822873fc0cf88bb4b262434bc2378d036dca2,39b822873fc0cf88bb4b262434bc2378d036dca2,"ismount should not raise exceptions

The changes from using os.path.ismount to using
swift.common.utils.ismount has caused problems since the new one
raises exceptions in cases where the old one did not. Daemons have
been encountering this and exiting; servers have been 500ing instead
of 507ing in this case, changing handoff behaviors, etc.

Since the new one was specifically written and tested for this new
behavior, I left that original function as ismount_raw and made
ismount do what it did before.

If there really isn't some reason for this new behavior, I'll be glad
to get rid of ismount_raw and just keep ismount. I couldn't see any
reason for the new behavior myself.

Change-Id: I2b5b17f9ed9656cd8804a5ed568170697d0b183d"
gholt,2014-01-08 00:06:30,https://api.github.com/repos/openstack/swift/git/commits/4fb0a20f24419b1463e1f61f3ced4556856fdbe7,4fb0a20f24419b1463e1f61f3ced4556856fdbe7,"Mute hash_cleanup_listdir common failures

Change-Id: I0fffa387b5fae793de91870e20cab4e32e94387a"
portante,2014-01-15 19:31:56,https://api.github.com/repos/openstack/swift/git/commits/1bae7eeb65b109ba9732a87e491d0d23d7c2ab44,1bae7eeb65b109ba9732a87e491d0d23d7c2ab44,"Make test_close_error run much faster

Change-Id: Iddeab82eed2f781837ab41c9e99e8450bb14a974"
smerritt,2014-01-15 06:15:03,https://api.github.com/repos/openstack/swift/git/commits/928f5c19641cca826e2bd0a16dce6dfc2cc20ae2,928f5c19641cca826e2bd0a16dce6dfc2cc20ae2,"Expose some SLO constraints via /info

These are the ones that affect what requests a client can make; the
others are just time and speed limits, so they weren't as interesting.

Change-Id: I21c19c950227f02725aafc309a3996fc6749a383"
gholt,2014-01-13 17:45:56,https://api.github.com/repos/openstack/swift/git/commits/a3f2400cbac1fb514a1f5075cfcb7d45b8851d44,a3f2400cbac1fb514a1f5075cfcb7d45b8851d44,"Consolidating and standardizing x-delete-at format

Change-Id: Idc916da1c7fe1cc43a2c26f7f7ee1d4fcdd52c89"
smerritt,2014-01-14 02:57:17,https://api.github.com/repos/openstack/swift/git/commits/3bc49f4e1f9e6597f761fff58f6cf4343288106f,3bc49f4e1f9e6597f761fff58f6cf4343288106f,"Add missing setting to SLO sample conf

Change-Id: I3b3a306e855509d6d03223ea59dfbd109647733c"
smerritt,2013-11-13 20:06:55,https://api.github.com/repos/openstack/swift/git/commits/1901719542fed0e30cb27efce8935f0257090a7d,1901719542fed0e30cb27efce8935f0257090a7d,"Move all SLO functionality to middleware

This way, with zero additional effort, SLO will support enhancements
to object storage and retrieval, such as:
 * automatic resume of GETs on broken connection (today)
 * storage policies (in the near future)
 * erasure-coded object segments (in the far future)

This also lets SLOs work with other sorts of hypothetical third-party
middleware, for example object compression or encryption.

Getting COPY to work here is sort of a hack; the proxy's object
controller now checks for ""swift.copy_response_hook"" in the request's
environment and feeds the GET response (the source of the new object's
data) through it. This lets a COPY of a SLO manifest actually combine
the segments instead of merely copying the manifest document.

Updated ObjectController to expect a response's app_iter to be an
iterable, not just an iterator. (PEP 333 says ""When called by the
server, the application object must return an iterable yielding zero
or more strings."" ObjectController was just being too strict.) This
way, SLO can re-use the same response-generation logic for GET and
COPY requests.

Added a (sort of hokey) mechanism to allow middlewares to close
incompletely-consumed app iterators without triggering a warning. SLO
does this when it realizes it's performed a ranged GET on a manifest;
it closes the iterable, removes the range, and retries the
request. Without this change, the proxy logs would get 'Client
disconnected on read' in them.

DocImpact

blueprint multi-ring-large-objects

Change-Id: Ic11662eb5c7176fbf422a6fc87a569928d6f85a1"
morucci,2013-11-26 11:14:15,https://api.github.com/repos/openstack/swift/git/commits/8e1e67c02d3fe0b2d18d4c7e60c50e1c5679788d,8e1e67c02d3fe0b2d18d4c7e60c50e1c5679788d,"Fix container quota MW for handling a bad source path

The copy source must be container/object.
This patch avoids the server to return
an internal server error when user provides
a path without a container.

Fixes: bug #1255049
Change-Id: I1a85c98d9b3a78bad40b8ceba9088cf323042412"
notmyname,2014-01-10 14:44:32,https://api.github.com/repos/openstack/swift/git/commits/af91eea634241cfe5e76d6dd10ef805b4541b436,af91eea634241cfe5e76d6dd10ef805b4541b436,"use specific hacking rules

Change-Id: I91cb5e30ec081262e2a590d64ba46fddadc7590f"
clayg,2014-01-10 08:31:55,https://api.github.com/repos/openstack/swift/git/commits/bad52f11218a11978d1efb0832f164a60a363cc2,bad52f11218a11978d1efb0832f164a60a363cc2,"Allow programmatic reloading of Swift hash path config

New util's function validate_hash_conf allows you to programmatically reload
swift.conf and hash path global vars HASH_PATH_SUFFIX and HASH_PATH_PREFIX
when they are invalid.

When you load swift.common.utils before you have a swift.conf there's no good
way to force a re-read of swift.conf and repopulate the hash path config
options - short of restarting the process or reloading the module - both of
which are hard to unittest.  This should be no worse in general and in some
cases easier.

Change-Id: I1ff22c5647f127f65589762b3026f82c9f9401c1"
gholt,2013-12-08 09:13:59,https://api.github.com/repos/openstack/swift/git/commits/f60d05686ffa8d74a9018a5bc94cb618091f4c6c,f60d05686ffa8d74a9018a5bc94cb618091f4c6c,"New container sync configuration option

Summary of the new configuration option:

The cluster operators add the container_sync middleware to their
proxy pipeline and create a container-sync-realms.conf for their
cluster and copy this out to all their proxy and container servers.
This file specifies the available container sync ""realms"".

A container sync realm is a group of clusters with a shared key that
have agreed to provide container syncing to one another.

The end user can then set the X-Container-Sync-To value on a
container to //realm/cluster/account/container instead of the
previously required URL.

The allowed hosts list is not used with this configuration and
instead every container sync request sent is signed using the realm
key and user key.

This offers better security as source hosts can be faked much more
easily than faking per request signatures. Replaying signed requests,
assuming it could easily be done, shouldn't be an issue as the
X-Timestamp is part of the signature and so would just short-circuit
as already current or as superceded.

This also makes configuration easier for the end user, especially
with difficult networking situations where a different host might
need to be used for the container sync daemon since it's connecting
from within a cluster. With this new configuration option, the end
user just specifies the realm and cluster names and that is resolved
to the proper endpoint configured by the operator. If the operator
changes their configuration (key or endpoint), the end user does not
need to change theirs.

DocImpact

Change-Id: Ie1704990b66d0434e4991e26ed1da8b08cb05a37"
smerritt,2014-01-10 20:57:53,https://api.github.com/repos/openstack/swift/git/commits/7b9c283203479cb9916951e1ce1f466f197dea36,7b9c283203479cb9916951e1ce1f466f197dea36,"Add missing license header to test file

All the other tests have license headers, so this one should too.

I picked 2013 for the copyright year because that's when ""git log""
says it was first and last touched.

Change-Id: Idd41a179322a3383f6992e72d8ba3ecaabd05c47"
portante,2013-12-10 01:52:58,https://api.github.com/repos/openstack/swift/git/commits/324ddd6a1f78c0f0bdc153bfb47aba39255a0dc7,324ddd6a1f78c0f0bdc153bfb47aba39255a0dc7,"Adjust unit tests to clarify existing device usage

Most of the unit tests run with check_mount=False, so if a device is
chosen by a test that was not created ahead of time, the test will still
work, since the ""tmp"" directory creation in DiskFile.create() using
mkdirs(), thereby creating the a directory for the device (perhaps that
should be fixed).

This change refactors the test code to use the exiting device
explicitly.

Change-Id: Ib4fbf069596672bb0b98f41573f312eabde38f98"
portante,2013-12-10 01:52:58,https://api.github.com/repos/openstack/swift/git/commits/6426f762d0d87063f9813630c620d880a4191046,6426f762d0d87063f9813630c620d880a4191046,"Raise diskfile.py module coverage to > 98%

We attempt to get the code coverage (with branch coverage) to 100%,
but fall short because due to interactions between coverage.py and
CPython's peephole optimizer. See:

    https://bitbucket.org/ned/coveragepy/issue/198/continue-marked-as-not-covered

In the main diskfile module, we remove the check for a valid
""self._tmppath"" since it is only one of a number of fields that could
be verified and it was not worth trying to get coverage for it. We
also remove the try / except around the close() method call in the
DiskFileReader's app_iter_ranges() method since it will never be
called in a context that will raise a quarantine exception (by
definition ranges can't generate a quarantine event).

We also:

* fix where quarantine messages are checked to ensure the
  generator is actually executed before the check
* in new and modified tests:
  * use assertTrue in place of assert_
  * use assertEqual in place of assertEquals
* fix references to the reserved word ""object""

Change-Id: I6379be04adfc5012cb0b91748fb3ba3f11200b48"
smerritt,2014-01-09 01:20:14,https://api.github.com/repos/openstack/swift/git/commits/5196eae0f1a91f7d2d0ddbd2136251bd714e9723,5196eae0f1a91f7d2d0ddbd2136251bd714e9723,"Warn if read_affinity is configured but not enabled

To get the proxy's read affinity to work, you have to set both
""read_affinity = <stuff>"" and ""sorting_method = affinity"" in the proxy
config. If you set the first but not the second, then you don't get
read affinity, and Swift doesn't help you determine why not.

Now the proxy will emit a warning message if read_affinity is set but
sorting_method is a value other than ""affinity"", so if you check your
logs to see why it isn't working, you'll get a hint.

Note that the message comes out twice per proxy process, so with 2
workers you'll see the warning 6 times on startup (2 for master + 2 *
2 per worker). It's sort of annoying, but at least it's not
per-request.

Bonus docstring fix: remove a sentence that's not true

Change-Id: Iad37d4979a1b7c45c0e3d1b83336dbcf7a68a0c9"
smerritt,2014-01-08 22:14:02,https://api.github.com/repos/openstack/swift/git/commits/3b166e6ba608194c4c7f1ced4dc579e26713ad18,3b166e6ba608194c4c7f1ced4dc579e26713ad18,"Log when quarantining an object

When you're trying to troubleshoot why all your objects are getting
quarantined, it's really nice to have some logging. If nothing else,
it's nice to know which process did it.

Change-Id: I6e8be6df938659f7392891df9336ed70bd155706"
gholt,2014-01-07 23:58:47,https://api.github.com/repos/openstack/swift/git/commits/c3d9a66ea751eb956cdad5d298895214187ed2eb,c3d9a66ea751eb956cdad5d298895214187ed2eb,"Mute hash_suffix rmdir failures

Change-Id: I10acfb1a3005ef988ac8a88819bf754b98cea63a"
morucci,2014-01-03 14:39:20,https://api.github.com/repos/openstack/swift/git/commits/a3f095bc65e2ce70c4fee9b971690ae340248310,a3f095bc65e2ce70c4fee9b971690ae340248310,"Add Swift-account-stats as a related project.

Change-Id: If2620a6b448581697d0d049578ea28faead6fbcf"
s-t-e-v-e-n-k,2014-01-07 06:18:31,https://api.github.com/repos/openstack/swift/git/commits/65a03e55cde262e52b2266b2e35f533e145a5f60,65a03e55cde262e52b2266b2e35f533e145a5f60,"Move the tests from functionalnosetests

Move the tests from functionalnosetests under functional, so we no
longer have two seperate trees for functional tests. This also drops
the 'nose' name from the directory, so that it doesn't end up with
confusion if we move to testr. Further, since there are no longer two
test runs in .functests, it nows looks very close to the other two.

Change-Id: I8de025c29d71f05072e257df24899927b82c1382"
portante,2014-01-06 23:12:42,https://api.github.com/repos/openstack/swift/git/commits/a708295d82dac3e0a38ffe8f8a9816c4559305c5,a708295d82dac3e0a38ffe8f8a9816c4559305c5,"Remove trailing slash for consistency

Change-Id: Idd4fd116b6be226e46e33f421883b6fb34947a84
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-12-12 01:41:34,https://api.github.com/repos/openstack/swift/git/commits/bc0807b3c58a44b81c54fe016497545c54971d92,bc0807b3c58a44b81c54fe016497545c54971d92,"Refactor to share on-disk layout with hash cleanup

Closes-Bug: 1260132
Change-Id: Iaa367c686b8dc49dd53c55a7cca661d9611044f8"
fungi,2014-01-06 03:38:47,https://api.github.com/repos/openstack/swift/git/commits/157482baa0265503f796dda50a2d35324466d234,157482baa0265503f796dda50a2d35324466d234,"Whitelist external netifaces requirement

* tox.ini(testenv.install_command): Use the --allow-external and
--allow-insecure options so that pip 1.5 and later will assent to
retrieve the netifaces package even though it's not hosted on PyPI.
The --allow-insecure option is aliased to a clearer
--allow-unverified wording in 1.5, but the old form is being used to
avoid breaking users of 1.4.x and will be valid at least through
1.6.x according to comments in the pip source.

Change-Id: I587b516f3f77c930475ca2eaae5ff73c5d2ab576"
pandemicsyn,2014-01-04 06:19:22,https://api.github.com/repos/openstack/swift/git/commits/f9d14971c2da8d5b142cce9771496f5a7682b4a7,f9d14971c2da8d5b142cce9771496f5a7682b4a7,"Don't report async pendings on exception

If we encounter an exception trying to gather async pendings 'async'
doesn't exist and the cronjob ends up erroring out and leaving behind a
stale lock file.

Change-Id: I70a6d3f00bd2c9ce742e6d16af93804280707040"
ctennis,2013-12-27 22:38:34,https://api.github.com/repos/openstack/swift/git/commits/d1dd14395259b78ed356b26ca07c54ba22034aaa,d1dd14395259b78ed356b26ca07c54ba22034aaa,"Up nproc limit on startup.

Separate out setrlimit calls for specific exception handling.

Closes-Bug: #1264561
Change-Id: I5588f19f8d0393409580d17317727977758d5cb3"
pandemicsyn,2013-12-18 20:03:23,https://api.github.com/repos/openstack/swift/git/commits/62254e42c40c2a99f79816ce47ec26101780c1d0,62254e42c40c2a99f79816ce47ec26101780c1d0,"Fix checkmount  error parsing in swift-recon

- swift-recon now handles parsing instances where 'mounted' key (in unmounted
  and disk_usage) is an error message instead of a bool.
- Add's checkmount exception handling to the recon umounted endpoint.
- Updates existing unittest to have ismount throw an error.
- Updates unittests to cover the corner cases

Change-Id: Id51d14a8b98de69faaac84b2b34b7404b7df69e9"
notmyname,2013-12-28 16:15:15,https://api.github.com/repos/openstack/swift/git/commits/86903eab2c0742dc6555376c4231a8c2fbddb1f9,86903eab2c0742dc6555376c4231a8c2fbddb1f9,"Documentation of the logs formats used in Swift

Change-Id: I402014627bab7113105a6a63c0b0ce1267735ca0"
chmouel,2013-12-24 09:17:19,https://api.github.com/repos/openstack/swift/git/commits/ad881413d0051e2fe9a38b6286f00784e62cfbb7,ad881413d0051e2fe9a38b6286f00784e62cfbb7,"Allow specify arguments to .probetests script

Just so at least I can add -x or -s.

Change-Id: I95543a3086ca5fb292e7899c02646a58296c610a"
pyKun,2013-11-21 03:14:34,https://api.github.com/repos/openstack/swift/git/commits/72ade27ea322056b993da8cfd389476461a845af,72ade27ea322056b993da8cfd389476461a845af,"test 3 date format in functional tests

According to HTTP/1.1, servers MUST accept all three formats:

Sun, 06 Nov 1994 08:49:37 GMT     # RFC 822, updated by RFC 1123
Sunday, 06-Nov-94 08:49:37 GMT    # RFC 850, obsoleted by RFC 1036
Sun Nov 6 08:49:37 1994           # ANSI C's asctime() format

In functional tests, a date value header has 3 kinds of format will be
tested.

Change-Id: I679ed44576208f2a79bffce787cb55bda4b39705
Closes-Bug: #1253207"
smerritt,2013-12-21 19:32:34,https://api.github.com/repos/openstack/swift/git/commits/aae254df55c6f3316927e8926fded15d91d964c5,aae254df55c6f3316927e8926fded15d91d964c5,"Make POST for bulk delete actually work

Change-Id: I568e7e31df3dcbeac20dba6d543a13c0409de00e
Closes-Bug: 1232787"
YorikSar,2013-12-20 04:57:43,https://api.github.com/repos/openstack/swift/git/commits/34fa05f66ba79defe7bcdedfbb87556e21b25e08,34fa05f66ba79defe7bcdedfbb87556e21b25e08,"Various optimizations to RingBuilder.rebalance()

Overall gain is about 20-22% of time on my laptop. This includes:

* replacing string sort_key with a tuple (because we can and because
  compairing two 3-tuples is faster than comparing two 26-byte strings);
* keeping track of hungriest dev in tier (allows us to use built-in
  dict.__getitem__ as a key instead of lambdas in couple of places);
* remove unnecessary sorted() call in the innermost loop (because we
  don't need to sort all of them or better we don't need to sort
  anything there);
* memoize tiers for each dev (saves just a couple of percents but why
  not).

Performance measurments have been done using this script:
http://paste.openstack.org/show/55609/

Related-Bug: #1262166
Related-Bug: #1261659
Change-Id: If38bd9fe82efc12b01e9aa146e0f4ab565fb6bea"
smerritt,2013-12-20 03:03:06,https://api.github.com/repos/openstack/swift/git/commits/cfd9d055a66b975e9e1bd2e08cd38cfc906d3b15,cfd9d055a66b975e9e1bd2e08cd38cfc906d3b15,"Sanify handoff search depth with non-integer replica counts

On GET, the proxy will go search the primary nodes plus some number of
handoffs for the account/container/object before giving up and
returning a 404. That number is, by default, twice the ring's replica
count. This was fine if your ring had an integral number of replicas,
but could lead to some slightly-odd behavior if you have fractional
replicas.

For example, imagine that you have 3.49 replicas in your object ring;
perhaps you're migrating a cluster from 3 replicas to 4, and you're
being smart and doing it a bit at a time.

On an object GET that all the primary nodes 404ed, the proxy would
then compute 2 * 3.49 = 6.98, round it up to 7, and go look at 7
handoff nodes. This is sort of weird; the intent was to look at 6
handoffs for objects with 3 replicas, and 8 handoffs for objects with
4, but the effect is 7 for everybody.

You also get little latency cliffs as you scale up replica counts. If,
instead of 3.49, you had 3.51 replicas, then the proxy would look at 8
handoff nodes in every case [ceil(2 * 3.51) = 8], so there'd be a
small-but-noticeable jump in the time it takes to produce a 404.

The fix is to compute the number of handoffs based on the number of
primary nodes for the partition, not the ring's replica count. This
gets rid of the little latency cliffs and makes the behavior more like
what you get with integral replica counts.

If your ring has an integral number of replicas, there's no behavior
change here.

Change-Id: I50538941e571135299fd6b86ecd9dc780cf649f5"
smerritt,2013-12-18 18:43:29,https://api.github.com/repos/openstack/swift/git/commits/a720b4d7577f6596966310101815bf69cc8ad2c8,a720b4d7577f6596966310101815bf69cc8ad2c8,"Some functional tests for object versioning

Also fix some exception-handling stuff in functional tests; at some
point, ResponseError() started needing two more parameters, but the
functional tests (not swift_test_client, just tests.py) still had a
couple spots that were not passing in the new params. Now they're
optional again, and if you omit them, then the stringification of the
ResponseError is just a little less useful than it could be.

Change-Id: I38968c4b590fc04b97b85c5f974c8648291a6689"
smerritt,2013-12-19 18:53:04,https://api.github.com/repos/openstack/swift/git/commits/0ff39c14c3b66e664491a54ac165ef3ed159bbb0,0ff39c14c3b66e664491a54ac165ef3ed159bbb0,"Fix fd leak from get_logger() in python 2.6

Calling get_logger({}) instantiates a logging.handlers.SyslogHandler,
which opens and keeps a socket around (either /dev/log or UDP or
whatever; not important).

Under Python 2.6, all logging handlers instantiated anywhere at all
will live for the entire lifetime of the program; they get stored in
logging._handlerList and logging._handlers. Python 2.7 is very
similar, but uses weakrefs instead of strong references in those
module-level variables, so logging handlers can actually get cleaned
up prior to program exit.

The net effect is that any program that calls get_logger() more than a
fixed number of times will leak file descriptors under Python 2.6.

This commit throws encapsulation out the window and, under 2.6 only,
replaces strong references with weakrefs in logging._handlerList and
logging._handlers, thus avoiding the leak.

Change-Id: I5dc0d1619c5a4500f892b898afd9e3668ec0ee7c"
smerritt,2013-12-18 20:11:47,https://api.github.com/repos/openstack/swift/git/commits/5f4790a82af09fbf3d1db85ebcfc89d40a284115,5f4790a82af09fbf3d1db85ebcfc89d40a284115,"Allow running just one test with tox

Now, ""tox -e py26 -- test.unit.proxy.test_server"" runs just that one
test file.

""tox -e py26"" still runs all the tests with py26, just like before.

Change-Id: I40db12dd5e7cc8f9388e29b30447f70d3bfc4b28"
smerritt,2013-12-18 18:38:34,https://api.github.com/repos/openstack/swift/git/commits/ace2aa33b19b3ff5abfb3f624414f422f8723b41,ace2aa33b19b3ff5abfb3f624414f422f8723b41,"Fix obj versioning w/non-ASCII container name

If you create a container with a non-ASCII name, and then make another
container with X-Versions-Location: first-cøntåîner, *and* you're
serializing stuff in memcache as json (the default), when the proxy
tries to make a versioned object, it will crash.

The fix is to make sure that get_container_info() always returns strs,
not unicodes.

The long-term fix would be to get rid of simplejson entirely, as its
decoder can't make up its mind whether JSON strings should be Python
strs or unicodes, and that makes it really really easy to write bugs
like this.

Change-Id: Ib20ea5fb884484a4246d7a21a9f1e2ffd82eb04f"
smerritt,2013-12-18 00:11:26,https://api.github.com/repos/openstack/swift/git/commits/16204c706d15dfc2b5949d8c467427ad6d576299,16204c706d15dfc2b5949d8c467427ad6d576299,"Preserve tracebacks from run_in_thread

Now the traceback goes all the way down to where the exception came
from, not just down to run_in_thread. Better for debugging.

Change-Id: Iac6acb843a6ecf51ea2672a563d80fa43d731f23"
smerritt,2013-12-13 21:11:01,https://api.github.com/repos/openstack/swift/git/commits/a49fd3d8def23bfb49e605fea372c82d1ec6cdff,a49fd3d8def23bfb49e605fea372c82d1ec6cdff,"Force catch_errors into pipeline

This commit adds a hook for WSGI applications
(e.g. proxy.server.Application) to modify their WSGI pipelines. This
is currently used by the proxy server to ensure that catch_errors is
present; if it is missing, it is inserted as the first middleware in
the pipeline.

This lets us write new, mandatory middlewares for Swift without
breaking existing deployments on upgrade.

Change-Id: Ibed0f2edb6f80c25be182b3d4544e6a67c5050ad"
notmyname,2013-12-16 20:33:08,https://api.github.com/repos/openstack/swift/git/commits/883eb48502b7f4735d325904aa2f5ef7dc3e8278,883eb48502b7f4735d325904aa2f5ef7dc3e8278,"update ssync tests to use req.get_response()

Change-Id: I2fa752b42669fab27d1a8e7562d52d8f8b848351"
gholt,2013-12-16 17:14:00,https://api.github.com/repos/openstack/swift/git/commits/70fc7df6eb0a14f845e1e7657d8ff782a2f6c1e1,70fc7df6eb0a14f845e1e7657d8ff782a2f6c1e1,"Just trying to keep /tmp clean

Change-Id: Ia8d7cf37a4f6a4652cb3440a896cefb411cdb41a"
portante,2013-12-03 18:01:15,https://api.github.com/repos/openstack/swift/git/commits/1bb6563a198ac32e1d3a9937dc8699a23cf7d816,1bb6563a198ac32e1d3a9937dc8699a23cf7d816,"Handle non-integer values for if-delete-at

If a client passes us a non-integer value for if-delete-at we'll now
properly report a 400 error instead of a 503.

Closes-Bug: 1259300
Change-Id: I8bb0bb9aa158d415d4f491b5802048f0cd4d8ef6"
emonty,2013-12-14 00:53:38,https://api.github.com/repos/openstack/swift/git/commits/7eedc6b8d92cf13d31133ab0fcbe4ba8e6bc6803,7eedc6b8d92cf13d31133ab0fcbe4ba8e6bc6803,"Merge tag '1.11.0'

Swift 1.11.0

Change-Id: I77b95a693c2422f0929e96d8e42a00e53b57089e"
clayg,2013-12-14 00:39:55,https://api.github.com/repos/openstack/swift/git/commits/28bee715dca69d5e4432b54cd0e0f231ca54c94c,28bee715dca69d5e4432b54cd0e0f231ca54c94c,"Update swift-config paste appconfig inspection

This crafts a significantly more informative and complete picture of the
appconfig object after paste has gotten a hold of it.

Change-Id: I07d7248ecf384f32d333025874ecb2782c58d6af"
dpgoetz,2013-12-13 00:28:40,https://api.github.com/repos/openstack/swift/git/commits/03513a02a2f3c9c333411a23bf335cc96dcb6a2b,03513a02a2f3c9c333411a23bf335cc96dcb6a2b,"Only retry GETs for objects.

Change-Id: I8b6ceeaa0e5e247e45209deced808b0b78181d53"
smerritt,2013-12-13 01:27:47,https://api.github.com/repos/openstack/swift/git/commits/226e46550f0dc97eb81ea05104460ca6da317b6b,226e46550f0dc97eb81ea05104460ca6da317b6b,"Expose basic constraints in /info

Change-Id: I70649e0669e2f7a1d61742a16ed6dc792d4b2a5a"
smerritt,2013-12-13 00:13:42,https://api.github.com/repos/openstack/swift/git/commits/979033a14ebc06d3f360c8a17542c68efb30a032,979033a14ebc06d3f360c8a17542c68efb30a032,"Expose allowed tempurl methods in /info

Clients can construct tempurls for any method, but they only work if
they're in this list, so it's helpful for clients to see the list.

Change-Id: Id852f457d65b62c4fe79db01b1d7029a5fa5aa09"
portante,2013-12-12 16:57:08,https://api.github.com/repos/openstack/swift/git/commits/06b729f6db647f4379d3dceeb1ca1e129a809a3d,06b729f6db647f4379d3dceeb1ca1e129a809a3d,"Add some tests to demonstrate hash_cleanup_listdir

We add some tests to verify various behaviors of
hash_cleanup_listdir(), and break them into individual tests so that
one failure won't prevent the others from running as well.

Change-Id: I4f52388d813f061b8e7d2b45dfb0f805689020c2"
portante,2013-12-11 21:59:59,https://api.github.com/repos/openstack/swift/git/commits/d26e8b25a7e5e4e69208bcb86208371f6d569a7c,d26e8b25a7e5e4e69208bcb86208371f6d569a7c,"Bring obj server unit tests to > 98%

This set of changes attempts to bring the unit test coverage to over
98% for the object server module.

Two changes to the object server are made with this patch:

1. The try/except block around diskfile.write_metadata() was removed
   at the end of the POST method

The write_metadata() method of the DiskFile module does not raise
either the DiskFileNotExist or DiskFileQuarantined exceptions on that
code path.

2. The conditional container_update() call was removed at the end of
   the PUT method

The container_update() calls is performed when a new object is created
or when an exist object is updated. Since we already report old
timestamps as 409s (Conflict) we always perform the update.

We also fix an existing test to clear the hash prefix so that it can
actually detect the async pending pickle file creation for a failure
mode.

Change-Id: I71ec9dcf7c0ac86e56aa0f06993d501fdfa22d5b"
morganfainberg,2013-12-10 22:06:45,https://api.github.com/repos/openstack/swift/git/commits/ddd8c7358dc6ba285f2f330998f97655575a5676,ddd8c7358dc6ba285f2f330998f97655575a5676,"Sync global requirements to pin sphinx to sphinx>=1.1.2,<1.2

Sync the global requirements to pin sphinx.  This addresses an issue
where Sphinx 1.2 is not building documents correctly and causing
check/gate to fail.

We also had to adjust the pip command used.

Change-Id: I8894c0199db845e90e5086a7c0e6bb7c7a26b5a0"
smerritt,2013-12-09 02:00:47,https://api.github.com/repos/openstack/swift/git/commits/4e7482f97318bdbda1ebfbce5382ae67a70e91e4,4e7482f97318bdbda1ebfbce5382ae67a70e91e4,"Use /info to check if SLO is enabled

The functional tests have some hokey detection of SLO support that
pre-dates the /info API, but we can do better now.

Also moved the SLO check up inside the setUp method so that skipping
the SLO tests should be somewhat faster now.

Change-Id: I645718b459d794a9a97770f7162934558c94f3e8"
morganfainberg,2013-12-10 22:06:45,https://api.github.com/repos/openstack/swift/git/commits/9a2bd79073900f7e988c9671f3ce93201abd2dda,9a2bd79073900f7e988c9671f3ce93201abd2dda,"Sync global requirements to pin sphinx to sphinx>=1.1.2,<1.2

Sync the global requirements to pin sphinx.  This addresses an issue
where Sphinx 1.2 is not building documents correctly and causing
check/gate to fail.

We also had to adjust the pip command used.

Change-Id: I8894c0199db845e90e5086a7c0e6bb7c7a26b5a0"
portante,2013-10-03 03:52:30,https://api.github.com/repos/openstack/swift/git/commits/ba5fe5f39e18fe8e1483a3b5851f044fe3358d0b,ba5fe5f39e18fe8e1483a3b5851f044fe3358d0b,"Use files in the source tree instead of cut/paste

Many of the large files are included in the tree and the script now
leverages a checked out swift tree to provide those files so that
users don't have to cut/paste text from the document. The contents of
those files are still included in the document for reference.

Updated to add sudo in appropriate places so that the entire script
can be run as the user instead of as root.

We also simplify the steps needed to get resetswift script working
(don't need to edit the user name).

Change-Id: Ie5b5a815870edcc205d273e35e0bbd2426d3b002
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
notmyname,2013-12-09 18:33:53,https://api.github.com/repos/openstack/swift/git/commits/038878b1a4eeb8ec94faf3a6285b43beb49a190c,038878b1a4eeb8ec94faf3a6285b43beb49a190c,"clarify the current state of the DiskFile API

Change-Id: Ia3d62c53d14c9a5efdb9a39b08817320cf331085"
clayg,2013-11-13 19:40:27,https://api.github.com/repos/openstack/swift/git/commits/0b57158007fd23511b6db7be476d5952d2dc1f74,0b57158007fd23511b6db7be476d5952d2dc1f74,"make test tooling less opinionated

Change-Id: I709afcec998795794a9ef13bbe7493ddd46c59b5"
smerritt,2013-12-04 06:18:46,https://api.github.com/repos/openstack/swift/git/commits/353070861999a4cd98b1b9ed30ed90d83bbfac90,353070861999a4cd98b1b9ed30ed90d83bbfac90,"Stop mutating PATH_INFO in proxy server

The proxy server was calling swob.Request.path_info_pop() prior to
instantiating a controller so that req.path_info was just /a/c/o (sans
/v1). The version got moved over into SCRIPT_NAME.

This lead to some unfortunate behavior when trying to re-use a request
from middleware. Something like this:

    # Imagine we're a WSGIContext object here.
    #
    # To start, SCRIPT_NAME = '' and PATH_INFO='/v1/a/c/o'

    resp_iter = self._app_call(env, start_response)
    # Now SCRIPT_NAME='/v1' and PATH_INFO ='/a/c/o'

    if something_special in self._response_headers:
        env['REQUEST_METHOD'] = 'GET'
        env.pop('HTTP_RANGE', None)

	# 404 SURPRISE! The proxy calls path_info_pop() again,
        # and now SCRIPT_NAME='/v1/a' and PATH_INFO='/c/o', so this
        # gets treated as a container request. Yikes.
        resp_iter = self._app_call(env, start_response)

Now we just leave SCRIPT_NAME and PATH_INFO alone. To make life easy
for everyone who does want just /a/c/o, I defined
swob.Request.swift_entity_path, which just strips off the /v1.

Note that there's still one call to path_info_pop() in tempauth, but
that's only for requests going to /auth, so it won't affect Swift API
requests. It might be a good idea to remove that one later, but let's
do one thing at a time.

Change-Id: I87557a11c01f3f3889b610578cda6ba7d3933e7a"
notmyname,2013-12-03 14:33:55,https://api.github.com/repos/openstack/swift/git/commits/dd7122c70271a5fc5d318712ec3881fddf40d8de,dd7122c70271a5fc5d318712ec3881fddf40d8de,"Release notes for Swift 1.11.0

Change-Id: Iff13ce1fb9ab662fc4965f8f2a420f58535fb5d3"
gholt,2013-12-06 04:12:15,https://api.github.com/repos/openstack/swift/git/commits/34c2a45d8d16ac8128451d05e2b2d5815b15e461,34c2a45d8d16ac8128451d05e2b2d5815b15e461,"Make ssync_receiver drop conn on exc

Before, the ssync receiver wouldn't hang up the connection with all
errors. Now it will. Hanging up early will ensure the remote end gets
a ""broken pipe"" type error right away instead of it possible sending
more data for quite some time before finally reading the error.

Change-Id: I2d3d55baaf10f99e7edce7843a7106875752020a"
smerritt,2013-11-22 01:39:56,https://api.github.com/repos/openstack/swift/git/commits/d18b6d8d5d6ca8c0adf3b98b488042c49394a072,d18b6d8d5d6ca8c0adf3b98b488042c49394a072,"Fix HEAD tempurls

HEAD-only tempurls didn't work; tempurl only allowed a HEAD request if
the tempurl was generated for GET or PUT (that is, the method in the
HMAC-signed string was ""GET"" or ""PUT"").

The intent of the code was to allow a user with a GET or a PUT tempurl
to also perform a HEAD request; I think the breaking of HEAD tempurls
is just a bug.

Change-Id: I621ddaac03e0d058dd9e7c7c374cb5c4b6386d36"
portante,2013-12-05 20:31:09,https://api.github.com/repos/openstack/swift/git/commits/60bf2dc675a85e3b5a2708228f70374e84b037e3,60bf2dc675a85e3b5a2708228f70374e84b037e3,"Override spelling of tempauth test name

Change-Id: Ife571bbeb6dd4ba5c552a2f0725c36e133e64cf4"
gholt,2013-12-05 18:02:06,https://api.github.com/repos/openstack/swift/git/commits/b332e3e436e780ee5ff14e9b6fe3c75d9e155db3,b332e3e436e780ee5ff14e9b6fe3c75d9e155db3,"Fixed a failing test on my saio

The added sleep makes this test pass on my saio. I have not heard of
it failing for anyone else, but I figured I'd post this up just in
case someone does have the same problem and this fixes it for them.

Change-Id: Ia0bb09d36d0b531ade7c6a6034bbe31dd6c90a98"
portante,2013-12-04 21:05:56,https://api.github.com/repos/openstack/swift/git/commits/1ccb5c61f459d9e70e9ba5698686065429d91afb,1ccb5c61f459d9e70e9ba5698686065429d91afb,"Allow access to the in-memory object server

This will allow functional tests to be used against it, and can then
be used for the storage-policy work as an example diskfile
implementation associated with a storage policy.

Change-Id: I47a88e70cee99225779baaed379b0c5d4c73611a"
clayg,2013-12-03 19:17:57,https://api.github.com/repos/openstack/swift/git/commits/74b51c9c06fdd727e4b5911e66145daee9f6c0f2,74b51c9c06fdd727e4b5911e66145daee9f6c0f2,"fix expired object deletion

fixes bug #1257330

Change-Id: I49f645abdeba97eafb3ae42ef9e3684c912cfdc6"
clayg,2013-12-04 05:12:19,https://api.github.com/repos/openstack/swift/git/commits/b57fd4343fe88996a33248cd5f31d61d0c30433d,b57fd4343fe88996a33248cd5f31d61d0c30433d,"use diskfile in ssync_sender tests

Change-Id: I7993de98ce3eb4839fa5d72d1b6ce08e4a7c1451"
gholt,2013-12-04 00:10:46,https://api.github.com/repos/openstack/swift/git/commits/f5ba1ca1f97d3ac9c37a45527d8c5dba365be391,f5ba1ca1f97d3ac9c37a45527d8c5dba365be391,"Remove ssync iter_hook usage

Apparently that disappeared and now the whole thing does on its own what this
was trying to achieve.

Change-Id: If20016cb80c855e3e8373de5d56926ef8f8e7dac"
smerritt,2013-12-03 22:49:57,https://api.github.com/repos/openstack/swift/git/commits/2db9453722745300418980a1b122cbed9e557e0b,2db9453722745300418980a1b122cbed9e557e0b,"Preserve closeability of app iterables

PEP 333 (WSGI) says that if your iterable has a close() method, the
framework must call it.

WSGIContext._app_call pulls the first chunk off the returned iterable
to make sure that it gets status and headers, and then it would
itertools.chain() that first chunk back onto the iterable so the whole
body went out. swob.Response.call_application() does it too.

The problem is that an itertools.chain object doesn't have a close()
method, so your iterable's fancy-pants close() method has no chance of
getting called.

This patch adds a slightly smarter CloseableChain that works like
itertools.chain, but has a close() method that calls the underlying
iterables' close() methods, if any.

Change-Id: If975c93f53c27dfa0c2f52f4bbf599af25202f70"
smerritt,2013-12-03 01:08:19,https://api.github.com/repos/openstack/swift/git/commits/68db481ae522acbb1fb1f1cefde8c45b9973a4df,68db481ae522acbb1fb1f1cefde8c45b9973a4df,"Update handoff algorithm to use IP/port pairs

The replica placement algorithm works on regions, then zones, then
IP/port, then device ID. The handoff algorithm worked on regions, then
zones, then device ID, completely skipping IP/port. It's now been
updated to take IP/port into consideration.

This means you get one handoff on each machine in the cluster before
you start getting handoffs that share a machine with a previous
one. In small clusters, this can help with durability.

Because this is performance-critical code, here are some quick
benchmark results:

Run time averages over 25000 trials on a 1200-device ring (20 part
power, 3 replicas, 2 regions, 10 zones, 120 nodes):

		   |   master    |   branch
===================+=============+============
get 1 more node	   |  2.727e-05	 |  3.076e-05
get 6 more nodes   |  3.55e-05   |  4.214e-05
get all more nodes |  0.002247   |  0.002691

There's a small slowdown from the additional bookkeeping, but nothing
too awful. The time to get 6 more nodes (for handoff checks on 404,
it's 2x replica count by default, hence 6) went from 35 to 42
microseconds, so it remains small.

Change-Id: Ie7da4dfcb0fcf1a38e2fb13f60c204540fadbf06"
alex,2013-12-02 20:24:22,https://api.github.com/repos/openstack/swift/git/commits/9b38463b06ff48269668a6b05822b285d603c7f8,9b38463b06ff48269668a6b05822b285d603c7f8,"Fixed DB test cases on PyPy

They weren't working because of the intersection between some monkey
patching in the tests and the fact that ``sqlite3.Connection`` and
``Cursor`` are Python classes on PyPy, but C-extension classes on
CPython. The result was that trying to call the superclass's init
didn't work because the name ``sqlite3.Connection`` pointed to a
different class that wasn't actually the real superclass of
``GreenDBConnection``. Using ``super`` fixes this because the method
called is now always the real superclass's.

Change-Id: Ib45b16c7499883e560877788f13285d0a47cc2cd"
portante,2013-12-02 18:54:40,https://api.github.com/repos/openstack/swift/git/commits/bdcf6adc28814929f8753701b1a20cdb983a7dae,bdcf6adc28814929f8753701b1a20cdb983a7dae,"Remove Python 3.3 from list of tox environments

Remove Python 3.3 from the list of tox test environments since we do
not currently support Python 3.3 for swift.

Change-Id: I7993a511e8433b21b292f21f4775e4ef2b5c2539"
alex,2013-12-02 17:30:54,https://api.github.com/repos/openstack/swift/git/commits/93d63dcf756c7cf9c31bf609116c448cf7e1a509,93d63dcf756c7cf9c31bf609116c448cf7e1a509,"GreenDBConnection no longer assumes that arguments are kwargs

Previous this code assumed that almost all arguments would be passed
as kwargs. Now the code also handles ``timeout`` occurring in
``*args``. This is needed because on PyPy's sqlite module, they are
passed in ``*args``.

Change-Id: I7ce25e7b262c6f46680e3f0eb391094de8051946"
smerritt,2013-11-21 19:03:46,https://api.github.com/repos/openstack/swift/git/commits/69102b501527616a959f1c440e1a9a5c8a8e3008,69102b501527616a959f1c440e1a9a5c8a8e3008,"Some functional tests for dynamic large objects

Change-Id: Id9f6c7e26ed9760372d2bfc9a1ffa3f8ae3d5861"
smerritt,2013-11-28 02:24:17,https://api.github.com/repos/openstack/swift/git/commits/0d45e99ff0b2e1564c4cd6f35f47a0545538c233,0d45e99ff0b2e1564c4cd6f35f47a0545538c233,"Expose bulk-operation limits in /info.

These will allow clients to perform the minimal number of requests
required to accomplish some bulk tasks. For example, a client with
many objects to delete can learn that the cluster's limit on
deletes-per-request is, say, 128, and then batch up their deletes in
groups of 128. Without this, the client has to either discover the
limit out-of-band somehow (and get notified if it changes), or do some
sort of binary search to figure out the limit.

Similar reasoning applies to the containers-per-request value.

The errors-per-request values are included so that clients may size
their requests such that everything is attempted regardless of
failure.

I split the 'bulk' entry into 'bulk_delete' and 'bulk_upload' because,
from a client's standpoint, they're separate operations. It so happens
that Swift implements both in one piece of middleware, but clients
don't care.

Bonus fix: documented a missing config setting for the bulk middleware.

Change-Id: Ic3549aef79682fd5b798145c3545c1609aa1592b"
smerritt,2013-11-28 01:23:59,https://api.github.com/repos/openstack/swift/git/commits/8a64bff2dc28b43b3ed4fa7b65da1a9ea29677cc,8a64bff2dc28b43b3ed4fa7b65da1a9ea29677cc,"Report transaction ID in failure exceptions

This way, when something fails in Jenkins, you have some chance of
searching the logs for the relevant transaction.

Change-Id: I3cf606cb4963e32b5c6ac3deda08e73541b3ff7d"
portante,2013-09-19 20:56:07,https://api.github.com/repos/openstack/swift/git/commits/d4e02a2e8b50ae9272efc07cd44217333b4aacd6,d4e02a2e8b50ae9272efc07cd44217333b4aacd6,"Add accurate timestamps in proxy log

Add accurate timestamps to the proxy-logging middleware log lines for
the start and end of a request. We use 9 digits of precision since on
some systems the clock resolution can be as fine as 1 ns.

The goal is to allow for log processing that can use the more accurate
timestamps to correlate requests, computing number of requests in
flight at a given historical point in time.

Change-Id: I61e8784b1c455d629f1299207fc4fc7e4a134814
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-11-22 21:59:09,https://api.github.com/repos/openstack/swift/git/commits/e0147e60d800fd67bc05bc4299c315f1761bd60b,e0147e60d800fd67bc05bc4299c315f1761bd60b,"Add a unit test to verify proxy logging fields

Also bring unit test coverage to 100% (well, at least every line is
reported as ""covered"").

Change-Id: I659d0c02008368897b1307a7a5c9aaba73b80588
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
alex,2013-11-25 02:24:45,https://api.github.com/repos/openstack/swift/git/commits/87cd5598476d0835c526918a9e1f03fe2d698866,87cd5598476d0835c526918a9e1f03fe2d698866,"Account for a platform difference in semaphores

On OS X (and probably other Operating Systems) it isn't possible to
introspect the value of a semaphore. Account for this by skipping a
test about this.

Change-Id: I97824f9fc4e36de4f7a62c8ce53865e6977dfdfe"
portante,2013-11-25 18:30:41,https://api.github.com/repos/openstack/swift/git/commits/3c7c355120a3ebe5c3f47e62176cec8cab824143,3c7c355120a3ebe5c3f47e62176cec8cab824143,"Use TCP_NODELAY for created sockets.

Mark Seger at HP has been looking at small objects, 1 and 2 KB size,
and with Rick Jones' help noticed that TCP protocol traces showed
effects from the Nagel algorithm client-to-server and
server-to-client.

This patch just addresses our WSGI server responses, but does not
address out-bound connections from the various servers.

Change-Id: I11f86df1f56fba1c6ab6084dc1f580c395f072dc
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
dbishop,2013-11-27 17:07:42,https://api.github.com/repos/openstack/swift/git/commits/39032c359f01a5e397fce2eb8326b961c9673607,39032c359f01a5e397fce2eb8326b961c9673607,"Add HTML reporting for test branch coverage.

When including branch coverage results, also generate HTML reports into
a ""cover"" subdirectory under the directory in which .unittests resides
(i.e. known location at the top of the swift tree).

Change-Id: I493d74f38755f7bf0d7043052585efb27840b238"
dbishop,2013-11-26 20:08:13,https://api.github.com/repos/openstack/swift/git/commits/0ba071f27c009e1d028189e812f722e8583a07ee,0ba071f27c009e1d028189e812f722e8583a07ee,"Fix bug in obj updater run_once().

The ""not"" in front of the ismount() call got accidentally dropped in a
recent change.  This patch adds it back along with a few more tests.

Note that this bug only showed up on an SAIO during probe tests because
I used actually-mounted (virtual) ""disks"".  So keep that in mind when
building SAIOs for development/testing.

Change-Id: Ia193f3c4b73203605954036863575c22ddab6b03"
portante,2013-09-30 16:35:07,https://api.github.com/repos/openstack/swift/git/commits/edc9f62ed6c537c4c112cf552310705b99fa08b8,edc9f62ed6c537c4c112cf552310705b99fa08b8,"Report path information in failure exceptions

When an error occurs during functional tests that use the
swift_test_client module, the reported error message includes the
method and path:

    ResponseError: 500: 'Internal Error' ('HEAD' \
    '/v1/AUTH_test/d5ce...')

Change-Id: I631cd9e83879fb644778d4ded62625483bf38045"
notmyname,2013-11-26 22:39:30,https://api.github.com/repos/openstack/swift/git/commits/71d180568322dc23eea2b48ebf93dd7d89b9362b,71d180568322dc23eea2b48ebf93dd7d89b9362b,"bare excepts, as is proper

Change-Id: Ifd28f6f14a781a67644315690491888161a7250c"
notmyname,2013-11-21 01:15:19,https://api.github.com/repos/openstack/swift/git/commits/cdb6cd830ada81252a670a49eafe198ad898fd7a,cdb6cd830ada81252a670a49eafe198ad898fd7a,"add bare except to catch errors

Change-Id: Ibe78912cf923591bddd6a8cf0e683cd028c9c4e8"
portante,2013-09-03 19:27:57,https://api.github.com/repos/openstack/swift/git/commits/853853edcedec2b2d2ea6c46c812111d8a7895d0,853853edcedec2b2d2ea6c46c812111d8a7895d0,"Push cooperative sleep call down into ThreadPool

The PUT REST API has no idea how writes are performed, so when thread
pools are in use, the sleep is not necessary, though it is still
necessary when thread pools are not in use. Since the ThreadPool
object knows when threads are actually in use, it can take care of
being cooperative with the eventlet hub.

In addition, we can hide the cooperative iterator hook, given that the
only other consumer of this was the auditor, which does not need it
any longer.  The only consumer of the DiskFile class that wants the
cooperative behavior is the REST API layer of the object server, which
is also using thread pools.

Change-Id: Ibc4ac672899f9a35fd68c85d7f56403c19b4f991
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-11-20 03:55:09,https://api.github.com/repos/openstack/swift/git/commits/6e313e957d2fd7e02bc3abe59f6a3c6cd37f23a2,6e313e957d2fd7e02bc3abe59f6a3c6cd37f23a2,"Fix for memcache middleware configuration

The documentation rightly said to use ""memcache_max_connections"", but
the code was looking for ""max_connections"", and only looking for it in
proxy-server.conf, not in memcache.conf as a fall back.

This commit brings the code coverage for the memcache middleware to
100%.

Closes-Bug: 1252893
Change-Id: I6ea64baa2f961a09d60b977b40d5baf842449ece
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-10-21 22:19:30,https://api.github.com/repos/openstack/swift/git/commits/15c31c0373dc8f102320637908c1ed59e854a4df,15c31c0373dc8f102320637908c1ed59e854a4df,"Remove unnecessary ""is not None"" check

From a review comment on https://review.openstack.org/30051 remove
the ""is not None"" check, as the assignment in the try block will
never assign None as value as the int() built-in will not return it.

There was some concern of long-term maintenance of the DiskFile
class's _quarantine method raising exceptions. If that routine were
ever mistakenly changed to NOT raise an exception, subtle problems
could creep into the code (see https://review.openstack.org/53237).
We address this concern by raising an exception explicitly at the
call sites of DiskFile._quarantine().

Change-Id: I1729a2d77a6b72b4494b24a8838b47ad5272c075
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-11-25 04:29:53,https://api.github.com/repos/openstack/swift/git/commits/2c0bbaf05c06968cc0376f34acbfb09e72603d47,2c0bbaf05c06968cc0376f34acbfb09e72603d47,"Protect against hash cleanup errors on PUTs

In http://launchpad.net/bugs/1254405 an exception occurs when
finalizing the PUT of an object, but it is obscured by the thread pool
code, so we don't see the actual line where it originated. However,
there are two possible functions where this exception could originate:

    1. renamer()
    2. hash_cleanup_listdir()

If this is an error in renamer(), there is some other waky problem
where the temporary file has been removed. It is likely that this is a
problem where a file name from os.listdir ends up disappearing (but
even this is a rare occurence). Regardless, it is not clear that we
really want an error from hash_cleanup_listdir() from affecting the
return result of the PUT.

To that end, we squelsh OSErrors from hash_cleanup_listdir() for
now. One might argue for all errors, but since os.unlink() and
os.listdir() raise OSError today, that is probably sufficient.

Even that we use ""Closes-Bug"" below, it is not clear it can even be
determined that this closes that bug report.

Change-Id: I2f55df835c387e4d17cffda74c04c9994aebbe1f
Closes-Bug: 1254405
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
redbo,2013-11-25 18:58:34,https://api.github.com/repos/openstack/swift/git/commits/7207926cffb617b89869c9cd4bed850395334eac,7207926cffb617b89869c9cd4bed850395334eac,"slightly less early quorum

The early quorum change has maybe added a little bit too much
eventual to the consistency of requests in Swift, and users can
sometimes get unexpected
results.

This change gives us a knob to turn in finding the right balance,
by adding a timeout where pending requests can finish after quorum
is achieved.

Change-Id: Ife91aaa8653e75b01313bbcf19072181739e932c"
notmyname,2013-11-14 23:58:52,https://api.github.com/repos/openstack/swift/git/commits/fa1f7d9420150dcfa30f4197b20813fcbfd3d9e0,fa1f7d9420150dcfa30f4197b20813fcbfd3d9e0,"Use upstream patched Pool.get

This works around an eventlet bug in eventlet 0.9.16.
This version properly keeps track of pool size accounting, and
therefore doesn't let the pool grow without bound. This patched
version is the result of commit
f5e5b2bda7b442f0262ee1084deefcc5a1cc0694 in eventlet and is
documented at https://bitbucket.org/eventlet/eventlet/issue/91

This patch includes full test coverage of the back-ported code, even
when the actually-installed eventlet is newer.

This fixes bug #1254119

Change-Id: I075bb5e40e08571d52fe17fcc3fa0e25be5befed"
alex,2013-11-24 15:11:04,https://api.github.com/repos/openstack/swift/git/commits/91deed871bba196a7ac35e0b0baf63339f734e24,91deed871bba196a7ac35e0b0baf63339f734e24,"Use a more portable errno in tests.

ELIBBAD doesn't exist on OS X. The exact value we use here isn't
important, so use something more portable.

Change-Id: Id03dc1773f416a94bbd14ad31b2b2a70f16b9a51"
zaitcev,2013-11-23 01:57:44,https://api.github.com/repos/openstack/swift/git/commits/31b311af57e495bb975d83a4fc1037f7c55b0d83,31b311af57e495bb975d83a4fc1037f7c55b0d83,"Return an exit code for configuration errors

Red Hat's QA noticed that in case of the infamous ""xattr>=0.4""
error, swift-init exits with a zero error code, which confuses
startup scripts (not Systemd though -- that one knows exactly
if processes run or not).

The easiest fix is to return the error code like Guido's blog
post suggested.

Change-Id: I7badd8742375a7cb2aa5606277316477b8083f8d
Fixes: rhbz#1020480"
gholt,2013-11-09 03:18:11,https://api.github.com/repos/openstack/swift/git/commits/c859ebf5ce1161e0fc2ca5258b8d3f45e29fc9ea,c859ebf5ce1161e0fc2ca5258b8d3f45e29fc9ea,"Per device replication_lock

New replication_one_per_device (True by default)
that restricts incoming REPLICATION requests to
one per device, replication_currency allowing.

Also has replication_lock_timeout (15 by default)
to control how long a request will wait to obtain
a replication device lock before giving up.

This should be very useful in that you can be
assured any concurrent REPLICATION requests are
each writing to distinct devices. If you have 100
devices on a server, you can set
replication_concurrency to 100 and be confident
that, even if 100 replication requests were
executing concurrently, they'd each be writing to
separate devices. Before, all 100 could end up
writing to the same device, bringing it to a
horrible crawl.

NOTE: This is only for ssync replication. The
current default rsync replication still has the
potentially horrible behavior.

Change-Id: I36e99a3d7e100699c76db6d3a4846514537ff685"
dpgoetz,2013-11-04 17:06:06,https://api.github.com/repos/openstack/swift/git/commits/f5648638ee6f939556ebfcb40dfdb8a590d3b5ae,f5648638ee6f939556ebfcb40dfdb8a590d3b5ae,"Get retry.

If a source times out on read try another one of them with a
modified range.  There had to be a lot of moved around code
to get this working but it should all make sense.

Change-Id: Ieaf045690a8823927a6f38098a95b37a4d4adb70"
smerritt,2013-11-22 20:23:58,https://api.github.com/repos/openstack/swift/git/commits/b5b0b78fc7c2add5ee5211f504ee79c5ae15f162,b5b0b78fc7c2add5ee5211f504ee79c5ae15f162,"Remove obsolete future imports

The with statement has been standard since Python 2.5, so we can get
rid of these imports.

Change-Id: I280971c3d8c01e94cc2c17cacaedcbe9d9c8a3c3"
portante,2013-11-20 20:52:07,https://api.github.com/repos/openstack/swift/git/commits/4cb5e2f4563593adab9a9ccbb1577ae53514d504,4cb5e2f4563593adab9a9ccbb1577ae53514d504,"Simple fix for proxy-logging empty field handling

Change-Id: Ia135575bd30a0bc04a2105291e68a6d18c7a3047
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-11-22 05:37:11,https://api.github.com/repos/openstack/swift/git/commits/4ed1c8473f50f7f11082ad1ee389f5339707e212,4ed1c8473f50f7f11082ad1ee389f5339707e212,"Handle optional arguments for run_forever()

All the other daemons do this, and since the out deamon wrapper
scripts pass all the command line options through directly, seems
simple enough to handle them by ignoring.

This is also applied to run_once().

Change-Id: I1df83bdf78f0dc3d911019f67f78301967b5da72
Closes-Bug: #1253891
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
notmyname,2013-11-22 17:44:36,https://api.github.com/repos/openstack/swift/git/commits/b9efe1cd462177f5bb86363d767f74f3a4a53a23,b9efe1cd462177f5bb86363d767f74f3a4a53a23,"add an ""inline"" query parameter to tempurl

Giving the inline query parameter will cause the tempurl
response to be given a ""Content-Disposition: inline"" header,
regardless of other query parameters or metadata. This allows
easy in-line viewing, eg in browsers.

DocImpact

Change-Id: Icd5c544d6a749d4f58e8a921968f4e432a2185db"
portante,2013-11-20 21:43:40,https://api.github.com/repos/openstack/swift/git/commits/a410730a2b64838d6bd0d102b6a9fb276ce1e7ae,a410730a2b64838d6bd0d102b6a9fb276ce1e7ae,"Do not format messages before they are logged

Change-Id: Ia645c9eca47b7f404d9b987f68a96b4744031e9d
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
StevenLang,2013-11-20 18:57:24,https://api.github.com/repos/openstack/swift/git/commits/62b87fca2091970a2369ad7ff059255259422f2b,62b87fca2091970a2369ad7ff059255259422f2b,"Fixed locale test in the presence of LANGUAGE

According to GNU documents, the priority order of language variables
is LANGUAGE, LC_ALL, LC_*, LANG. Therefore, if LANGUAGE is set, it
overrides the LC_ALL setting from the test. An empty value is ignored,
and setting it to empty is easier to deal with than just deleting the
variable.

Also fixed the Google translate fail esperanto grammar.

Fixes bug 1235058

Change-Id: Ic97b90dfc21997e19cc473250794a9b3c526beb5"
StevenLang,2013-11-21 19:46:15,https://api.github.com/repos/openstack/swift/git/commits/700479bd67be23648b5998ee4353db7e290f8601,700479bd67be23648b5998ee4353db7e290f8601,"Fix DB locked error on commit

This bug was introduced in ef7f9e27; while moving timeout for execute
to the cursor wrapper, commit was moved as well; however commit is
purely a connection method, only execute is passed on to a cursor.
Added unit tests to check both methods for correct timeouts.

This manifested in a test failure as:
ERROR __call__ error with POST /sdb1/418/AUTH_d1c4b610b16a48de83219c696261009c/TestContainer-tempest-1572414684 :
Traceback (most recent call last):
  File ""/opt/stack/new/swift/swift/container/server.py"", line 486, in __call__
    res = method(req)
  File ""/opt/stack/new/swift/swift/common/utils.py"", line 1915, in wrapped
    return func(*a, **kw)
  File ""/opt/stack/new/swift/swift/common/utils.py"", line 687, in _timing_stats
    resp = func(ctrl, *args, **kwargs)
  File ""/opt/stack/new/swift/swift/container/server.py"", line 464, in POST
    broker.update_metadata(metadata)
  File ""/opt/stack/new/swift/swift/common/db.py"", line 677, in update_metadata
    conn.commit()
OperationalError: database is locked (txn: tx5065394f288740e69fcec-00528e184e)

Change-Id: I269b133fac53d4792d21b62f801cc0c0ccf337ea"
portante,2013-11-14 18:56:47,https://api.github.com/repos/openstack/swift/git/commits/4f6d89ab5156526e3a371c0c954166d298621de6,4f6d89ab5156526e3a371c0c954166d298621de6,"Import filter and app into namespace correctly

The module used to simply ""import swift"", and then reference
the classes:

    swift.common.middleware.catch_errors.CatchErrorsMiddleware
    swift.proxy.server.Application

in order to very that the WSGI services loaded the proper filters and
apps.

However, those references only happen to work, as the WSGI loading
would properly import the rest of the path so that the namespace
reference would be okay. If the WSGI configuration were to change, or
if the behavior of WSGI broke, instead of of seeing the actual failure
condition, a module attribute error would result instead:

    AttributeError: 'module' object has no attribute 'middleware'

The referenced names are now properly imported with this change to
avoid misleading error conditions.

Change-Id: Ifff4271bc5be1136bf17e4e5b291b01033d608db
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
clayg,2013-11-18 19:41:58,https://api.github.com/repos/openstack/swift/git/commits/9e80fd45a0072e15e9d49299a6fa9e9c725e2207,9e80fd45a0072e15e9d49299a6fa9e9c725e2207,"Add a DebugLogger for wsgi server tests

Change-Id: Ifd2528be443ba3879bf4921f6c5f4ef31f29044b"
clayg,2013-11-21 09:33:48,https://api.github.com/repos/openstack/swift/git/commits/934354f0dea1b257596f352498bffa82091d207c,934354f0dea1b257596f352498bffa82091d207c,"workaround probetest race from early response

Change-Id: I594633887c86fc2212850409a37ee2257633a23c"
clayg,2013-10-29 20:04:59,https://api.github.com/repos/openstack/swift/git/commits/37e0654adb3563bc84176ebdea4e36f97e3c3bb5,37e0654adb3563bc84176ebdea4e36f97e3c3bb5,"in case you lose your builder backups

Change-Id: Ica555be2be492c3ec5fdeab738058ff35989a603"
StevenLang,2013-10-23 18:35:57,https://api.github.com/repos/openstack/swift/git/commits/ef7f9e27a2d10aeaa9ed550e9595c54ccacdd4f2,ef7f9e27a2d10aeaa9ed550e9595c54ccacdd4f2,"Fixed concurrent PUT requests to accounts or containers

When concurrent PUT requests come in for an account or container, the
resulting DB access will try to lock the DB for writing. Normal access
will retry when it encounters a locked DB, change 0fdad0d9 introduced
a cursor for doing the initialization which did not have the retry
capability, resulting in a hard failure.

Fixes bug 1243973

Change-Id: I73b219e0f5eacf314d87b4d5e56c03daf51b2eca"
pyKun,2013-10-22 10:05:43,https://api.github.com/repos/openstack/swift/git/commits/94090e8760da324d6586b5d45b7c339457e33647,94090e8760da324d6586b5d45b7c339457e33647,"Use POST in bulk-delete

The DELETE verb applies to a single resource, and doesn't define any
semantics for the body.

http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.7

The swift Bulk Delete command affects multiple resources specified in a
DELETE body.

http://docs.openstack.org/developer/swift/misc.html#module-swift.common.middleware.bulk

While Bulk Delete is a welcome operation, its usage of DELETE is
unusual: affecting multiple resources and relying on reading content.

More typically, such an operation employs POST (or PUT), which folks
including api-craft usually agree is the best ""catch-all"" verb for
behaviors such as those affecting multiple resources. That's the TL;DR;
of the thread below.

https://groups.google.com/forum/#!searchin/api-craft/Regarding$20Bulk$20actions/api-craft/wY-W1NdZDRs/7YDwMhCR608J

Note that this topic isn't nasal or abstract. The current behavior is
unsupported using the built-in java http client. Even if third-party
libraries can work around this behavior, it is probably best to not be a
snowflake wrt http verb semantics where possible!

http://stackoverflow.com/questions/9100776/http-delete-with-request-body-issues

DocImpact

Closes-Bug: #1232787
Change-Id: I0fc74c85618fe4dd7ff5e7f9756c7f6f67aa0465"
smerritt,2013-11-11 22:59:14,https://api.github.com/repos/openstack/swift/git/commits/9151bcc92c7854b04ca41ac3c96efd903ad12b5b,9151bcc92c7854b04ca41ac3c96efd903ad12b5b,"Reorganize SLO unit tests

This brings some sanity to the SLO test app (the thing the middleware
wraps in the unit tests) as well as splits things into multiple test
classes.

This is part of the effort to move all SLO functionality to
middleware, but it's a separate commit to prove that these test
changes don't harm anything when running against the old code.

Change-Id: I52a16f15a80dfaf9b3c595b0e634d52f418caf6c"
smerritt,2013-11-18 21:17:48,https://api.github.com/repos/openstack/swift/git/commits/2e1fc7446f188399408eb8695c12d751b48defa1,2e1fc7446f188399408eb8695c12d751b48defa1,"Some functional tests for static large objects

There's some sort-of-hacky code in there to detect SLO support in
order to skip tests when SLO is off so that the functests won't fail
on older clusters.

Change-Id: I6ad5974a0db7213747b0f4497d08ffc706d3f220"
portante,2013-10-05 15:12:43,https://api.github.com/repos/openstack/swift/git/commits/63370ea466fb1ae4eb8f29ef5318c50a5a0356ae,63370ea466fb1ae4eb8f29ef5318c50a5a0356ae,"Quiet all locale warnings and dummy thread, too

Change-Id: I0c68b94ec234e470ce2d50da01d8ae1cd10fae58
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-11-01 18:39:53,https://api.github.com/repos/openstack/swift/git/commits/c2c2a14df700e2e0eaa855acec977311dc82134a,c2c2a14df700e2e0eaa855acec977311dc82134a,"Replace httplib with bufferedhttp in sphinx docs

We also replace references in a few comments as well.

Change-Id: Ifc8d78e943219fefc73f41abed7d393a060e3926
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-11-13 16:16:59,https://api.github.com/repos/openstack/swift/git/commits/b1f51d00cde51a77aacbe41401cde0b3b9e35719,b1f51d00cde51a77aacbe41401cde0b3b9e35719,"Use utils.ismount in place of os.path.ismount

See comments from: https://review.openstack.org/55991

Change-Id: Ibb4153702b3dc4c60f66abb11cd3fa1953449827
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
clayg,2013-11-18 22:24:55,https://api.github.com/repos/openstack/swift/git/commits/092eb56e79e79891351003ff2cc97f7cf5d4104c,092eb56e79e79891351003ff2cc97f7cf5d4104c,"minor fix to unittest fake error

Change-Id: Ife7add5646afb94ec56a38f335112ab70998b1b1"
StevenLang,2013-10-24 18:46:49,https://api.github.com/repos/openstack/swift/git/commits/304fb34153b0761f45136b304756c463fd158e70,304fb34153b0761f45136b304756c463fd158e70,"Fix UnboundLocalError on container PUT

Fixes bug-1243973

Change-Id: If165fdcccb5d4712570b1cdabcc89e618f539849"
notmyname,2013-11-15 23:10:39,https://api.github.com/repos/openstack/swift/git/commits/ef42c0f0dec044543b0698aa24709b9c2ed847e7,ef42c0f0dec044543b0698aa24709b9c2ed847e7,"allow bare excepts in flake8

Change-Id: I4751f9f65712960019f9a303b7d7fe017c6e85c7"
smerritt,2013-11-13 20:51:18,https://api.github.com/repos/openstack/swift/git/commits/b468f79daa39ac42a182f4a6e7c15db4631368a5,b468f79daa39ac42a182f4a6e7c15db4631368a5,"Fix test to work with mock 0.8.0

This particular test case used a construct that worked in mock 1.0,
but not in 0.8. Our test-requirements.txt says mock>=0.8.0.

Change-Id: I93ed4b7b5d169572bbed6490cb9b0dd421a3b9e2"
pyKun,2013-11-13 11:20:16,https://api.github.com/repos/openstack/swift/git/commits/fd4843f8e72227318b1e2ee5fbd2d43cc3732a1d,fd4843f8e72227318b1e2ee5fbd2d43cc3732a1d,"catch OSError to prevent breaking request /recon/diskusage

swift.common.utils.ismount maybe raise some OSError in some special
cases; and the request against /recon/diskusage doesn't handle it
before. This patch let output of mounted keyword is the error's message.

Change-Id: I5d9018f580181e618a3fa072b7a760d41795d8eb
Closes-Bug: #1249181"
gholt,2013-11-12 18:00:15,https://api.github.com/repos/openstack/swift/git/commits/985c7bf38b8448e342c9547b5712fe7272296fd0,985c7bf38b8448e342c9547b5712fe7272296fd0,"Fix probe test

Fix for a probe test that failed every once in a
while due to the early-majority change previously
committed. Sometimes a write would return success
before the third node had succeeded and the probe
test would look for on-disk evidence and fail,
when it would've been fine had it waited just a
bit longer for the third node to complete.

Since there's no real way for the probe test to
know when all three nodes are done, I just made
it retry once a second for several seconds before
reporting an error.

There may be more tests like this we'll have to
fix as we run across them.

Change-Id: I749e43d4580a7c726a9a8648f71bafefa70a05f5"
smerritt,2013-11-08 01:00:26,https://api.github.com/repos/openstack/swift/git/commits/615239188f1eed2f11e5bfe7560c6a28b3ecd4a5,615239188f1eed2f11e5bfe7560c6a28b3ecd4a5,"Remove redundant hash check

Change-Id: I46f69d48e60349d28c6a297b703c9ff16b79bfe3"
gholt,2013-08-28 16:10:43,https://api.github.com/repos/openstack/swift/git/commits/a80c720af598627a8419cc72403e33b9d59fa10d,a80c720af598627a8419cc72403e33b9d59fa10d,"Object replication ssync (an rsync alternative)

For this commit, ssync is just a direct replacement for how
we use rsync. Assuming we switch over to ssync completely
someday and drop rsync, we will then be able to improve the
algorithms even further (removing local objects as we
successfully transfer each one rather than waiting for whole
partitions, using an index.db with hash-trees, etc., etc.)

For easier review, this commit can be thought of in distinct
parts:

1)  New global_conf_callback functionality for allowing
    services to perform setup code before workers, etc. are
    launched. (This is then used by ssync in the object
    server to create a cross-worker semaphore to restrict
    concurrent incoming replication.)

2)  A bit of shifting of items up from object server and
    replicator to diskfile or DEFAULT conf sections for
    better sharing of the same settings. conn_timeout,
    node_timeout, client_timeout, network_chunk_size,
    disk_chunk_size.

3)  Modifications to the object server and replicator to
    optionally use ssync in place of rsync. This is done in
    a generic enough way that switching to FutureSync should
    be easy someday.

4)  The biggest part, and (at least for now) completely
    optional part, are the new ssync_sender and
    ssync_receiver files. Nice and isolated for easier
    testing and visibility into test coverage, etc.

All the usual logging, statsd, recon, etc. instrumentation
is still there when using ssync, just as it is when using
rsync.

Beyond the essential error and exceptional condition
logging, I have not added any additional instrumentation at
this time. Unless there is something someone finds super
pressing to have added to the logging, I think such
additions would be better as separate change reviews.

FOR NOW, IT IS NOT RECOMMENDED TO USE SSYNC ON PRODUCTION
CLUSTERS. Some of us will be in a limited fashion to look
for any subtle issues, tuning, etc. but generally ssync is
an experimental feature. In its current implementation it is
probably going to be a bit slower than rsync, but if all
goes according to plan it will end up much faster.

There are no comparisions yet between ssync and rsync other
than some raw virtual machine testing I've done to show it
should compete well enough once we can put it in use in the
real world.

If you Tweet, Google+, or whatever, be sure to indicate it's
experimental. It'd be best to keep it out of deployment
guides, howtos, etc. until we all figure out if we like it,
find it to be stable, etc.

Change-Id: If003dcc6f4109e2d2a42f4873a0779110fff16d6"
redbo,2013-10-30 21:43:35,https://api.github.com/repos/openstack/swift/git/commits/f0c0855ec8207fa8be63ed4f3135c8e29a31acc0,f0c0855ec8207fa8be63ed4f3135c8e29a31acc0,"early quorum responses

Allow the proxy to respond to many types of requests as soon as it has a
quorum.  This can help speed up responses (without changing the results),
especially when one node is acting up.

I had to fix a few unit tests that no longer match the backend http requests
made by our proxy.

Change-Id: Ieb070dc3019e217e717b96154a7a809409bf40a5"
smerritt,2013-10-28 21:57:18,https://api.github.com/repos/openstack/swift/git/commits/729430f349b651ec889382ba9092b68a24b655db,729430f349b651ec889382ba9092b68a24b655db,"Alternate DiskFile constructor for efficient auditing.

Before, to audit an object, the auditor:
 - calls listdir(object-hash-dir)
 - picks out the .data file from the listing
 - pulls out all N of its user.swift.metadata* xattrs
 - unpickles them
 - pulls out the value for 'name'
 - splits the name into a/c/o
 - then instantiates and opens a DiskFile(a, c, o),
which does the following
 - joins a/c/o back into a name
 - hashes the name
 - calls listdir(object-hash-dir) (AGAIN)
 - picks out the .data file (and maybe .meta) from the listing (AGAIN)
 - pulls out all N of its user.swift.metadata* xattrs (AGAIN)
 - unpickles them (AGAIN)
 - starts reading object's contents off disk

Now, the auditor simply locates the hash dir on the filesystem (saving
one listdir) and then hands it off to
DiskFileManager.get_diskfile_from_audit_location, which then
instantiates a DiskFile in a way that lazy-loads the name later
(saving one xattr reading).

As part of this, DiskFile.open() will now quarantine a hash
""directory"" that's actually a file. Before, the audit location
generator would skip those, but now they make it clear into
DiskFile(). It's better to quarantine them anyway, as they're not
doing any good the way they are.

Also, removed the was_quarantined attribute on DiskFileReader. Now you
can pass in a quarantine_hook callable to DiskFile.reader() that gets
called if the file was quarantined. Default is to log quarantines, but
otherwise do nothing.

Change-Id: I04fc14569982a17fcc89e00832725ae71009335a"
portante,2013-11-01 18:57:28,https://api.github.com/repos/openstack/swift/git/commits/68025b8f9a6b7e7ffb1976920208185a8377448b,68025b8f9a6b7e7ffb1976920208185a8377448b,"Fix up sphinx docs for *make_request* methods

Change-Id: I05ac17ba45eda99dc9fb9d6ecf2374d1e8371a32
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
smerritt,2013-09-24 23:46:45,https://api.github.com/repos/openstack/swift/git/commits/26483a2fd11e82bbfa4f43c6c36f0916c3bb7f49,26483a2fd11e82bbfa4f43c6c36f0916c3bb7f49,"Add more stuff to SAIO doc's proxy pipeline.

If you're setting one of these up, you're probably going to use it for
development, in which case you want everything but the kitchen sink
turned on so you can just start hacking away.

Change-Id: I98d178ff545cbf8d853c102e9fce76fb9f6773ac"
smerritt,2013-11-05 20:48:35,https://api.github.com/repos/openstack/swift/git/commits/691fa2c506d24261a502bcdb9ead1161f1a1dd0b,691fa2c506d24261a502bcdb9ead1161f1a1dd0b,"Remove some WebOb leftovers.

The deleted comments were talking about a swob EmptyResponse object,
which doesn't exist; it seems this was left over from the big WebOb
removal. Also, swob doesn't exhibit that behavior, so there's no point
in having this extra code path around.

Further, it seems like the hack was only needed with WebOb < 1.0.8. I
went back to Swift 1.4.8 (Essex) and compared it to master, and this
is the result:

DLO manifest HEAD
=================

Essex (ffadbc3)
---------------
Small #segments --> Content-Length: 12345
Large #segments --> Content-Length: 0
Large #segments sans shenanigans --> Content-Length: 0

master (f63b58f)
----------------
Small #segments --> Content-Length: 12345
Large #segments --> Content-Length: 0
Large #segments sans shenanigans --> Content-Length: 0

So, whatever WebOb wackiness this was intended to hack around, it
doesn't seem to have been here for a long, long time.

Change-Id: I7b717b1b36de1139cc5b76c166d1715dbc34b332"
smerritt,2013-11-04 20:28:48,https://api.github.com/repos/openstack/swift/git/commits/f63b58f5b7819073fb086a4415d6ef4ad2bf4fd1,f63b58f5b7819073fb086a4415d6ef4ad2bf4fd1,"Fix deprecation warning.

BaseException.message is deprecated; if you have an exception of type
Exception (or subclass thereof), then ""str(ex)"" is the preferred way
to get the message.

Change-Id: I5b4acf88de538c1ef0f2db4fefaa92699937cd50"
smerritt,2013-10-30 19:43:54,https://api.github.com/repos/openstack/swift/git/commits/dde510590cd77e19e988de83a7a5a0beb6f1be8c,dde510590cd77e19e988de83a7a5a0beb6f1be8c,"Fix quarantine, error counts in audit logs

Any quarantines and errors that happened between the last recon dump
and the end of an audit pass weren't getting counted in the logs.

This is particularly easy to see on a mostly-empty SAIO: go corrupt a
file, and the auditor will probably tell you (a) that it's
quarantining a file, and then (b) that 0 files were quarantined.

Change-Id: I78e32b911e457078144564e3be42527260148ade"
portante,2013-10-01 15:30:15,https://api.github.com/repos/openstack/swift/git/commits/b20bab41b12f6b714f78a607f3a49fa407db05d9,b20bab41b12f6b714f78a607f3a49fa407db05d9,"Remove unnecessary swift_conn comments

Change-Id: I659073a979e2ed6f76cc0df828e600dc1d955b90
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-08-18 17:37:44,https://api.github.com/repos/openstack/swift/git/commits/023a0615874443e2fc28d0df64a5ab5dd485405d,023a0615874443e2fc28d0df64a5ab5dd485405d,"Tie socket write buffer size to server parameters

By default, Python 2.*'s standard library ""socket"" module performs 8K
writes. For 10ge networks, with large MTUs (typically 9,000), this is
not optimal. We tie the default buffer size to the client_chunk_size
paramter for the proxy server, and to the network_chunk_size for the
object server.

One might be tempted to ask, isn't there a way to set this value on a
per-request basis? This author was unable to find a reference to the
_fileobject in the context of WSGI. By the time a request pass to a
WSGI object's __call__ method, the ""wfile"" attribute of the
req.environ['eventlet.input'] (Input) object has been set to None, and
the ""rfile"" attribute is the object wrapping the socket for reading,
not writing.

One might also be tempted to ask, why not just override the
wsgi.HttpProtocol's ""wbufsize"" class attribute instead? Until
eventlet/wsgi.py is fixed, we can't set wsgi.HttpProtocol.wbufsize to
anything but zero (the default, see Python's SocketServer.py,
StreamRequestHandler class), since Eventlet does not ensure the socket
_fileobject's flush() method is called after Eventlet invokes a
write() method on the same.  NOTE: wbufsize (a class attribute of
StreamRequestHandler originally, not to be confused with the standard
library's socket._fileobject._wbufsize class attribute) is used for
the bufsize parameter of the connection object's makefile() method. As
a result, the socket's _fileobject code uses that value to set both
_rbufsize and _wbufsize. While that would allow us to transmit in 64KB
chunks, it also means that write() and writeline() method calls on the
socket _fileobject are only transmitted once 64KB have been
accumulated, or a flush() is called.

As for performance improvement:

Run       8KB   64KB
  0     8.101  6.367
  1     7.892  6.216
  2     7.732  6.246
  3     7.594  6.229
  4     7.594  6.292
  5     7.555  6.230
  6     7.575  6.270
  7     7.528  6.278
  8     7.547  6.304
  9     7.550  6.313
Average 7.667  6.275  1.3923  18.16%

Run using the following after adjusting the test value for obj_len to
1 GB:

nosetests -v --nocapture --nologcapture \
test/unit/proxy/test_server.py:TestProxyObjectPerformance.test_GET_debug_large_file

Change-Id: I4dd93acc3376e9960fbdcdcae00c6d002e545894
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
zaitcev,2013-10-29 22:10:47,https://api.github.com/repos/openstack/swift/git/commits/fc9f9d7baebfa98cdbd9fbe8289e82268ab5e149,fc9f9d7baebfa98cdbd9fbe8289e82268ab5e149,"Strengthen account tests

This fell out of Peter Portante's ""acctcont-api"" branch and seems
obviously good. Apparently one of these would've triggered while
doing the Pluggable Backend work.

Now, why commit this separately while simultaneously working on
a big unified Backend Patch? Because posting them separately
proves that the test changes worked on the old code.

Change-Id: I9ca6ad45fb255f5c0a177a93b93c1acc68da5bbe"
smerritt,2013-10-25 19:02:42,https://api.github.com/repos/openstack/swift/git/commits/f52d96b904a375625df0c2cc6ff9c828ab47e665,f52d96b904a375625df0c2cc6ff9c828ab47e665,"Quarantine objects with busted metadata.

Before, if you encountered an object with corrupt or missing xattrs,
the object server would return a 500 on GET, and wouldn't quarantine
anything. Now the object server returns a 404 for that GET and the
corrupted file is quarantined, thus giving replication a chance to fix
it.

Change-Id: Ib1d7ab965391742c88fde3d83dc0b5afe85bada9"
otherjon,2013-10-29 00:28:57,https://api.github.com/repos/openstack/swift/git/commits/97b5f59ea4407f9b5696b2b6f2e6d14e4e686d0f,97b5f59ea4407f9b5696b2b6f2e6d14e4e686d0f,"HEAD on account returns 410 if account was deleted and not yet reaped

 * updated CONTRIBUTING.md
 * improved unit tests
 * 100% coverage for proxy acct controller tests
 * invoke fake_http_connect correctly

Change-Id: I0826c5a1c52efdd5ae95f7fde8024f2bff0751ba"
notmyname,2013-10-29 19:29:49,https://api.github.com/repos/openstack/swift/git/commits/0717133197d8929a03ec267d4e3c5b1696f02fb3,0717133197d8929a03ec267d4e3c5b1696f02fb3,"Make pbr a build-time only dependency

This lets you build swift packages that don't require pbr
to be installed at all. You would need pbr on the machine running
rpmbuild / debuild, but not on the machines that install the packages.

Unfortunately, this does not make swift able to be
installed via pip 0.3.1 on Lucid; you'll need to uninstall the system
python-pip package and install a new pip some other way. Given that
pip < 1.3 doesn't perform SSL certificate validation for pypi (trivial
MITM attack, anyone?), you'd probably want to get a new pip anyway.

Change-Id: Ia50a229c5ae4dd2158beeaa953619b5e8f987c55"
dpgoetz,2013-10-28 17:19:18,https://api.github.com/repos/openstack/swift/git/commits/56c902c8deed5bad6e8ae3993c4634207f6aa7ef,56c902c8deed5bad6e8ae3993c4634207f6aa7ef,"form post over XMLHttpRequest (cors) broken

Change-Id: Ia55e0d3974a96e11d49ab3cb26b6dcd7129b5cc8"
pyKun,2013-10-28 09:41:09,https://api.github.com/repos/openstack/swift/git/commits/264766127ebea3f0a72cf696197b7acb7e4e015e,264766127ebea3f0a72cf696197b7acb7e4e015e,"improve docs in etc/dispersion.conf-sample

1. add a comment to hint using a new account for using dispersion tools
2. change sample url for keystone from 'saio' to 'localhost'

Change-Id: I4683f5eb0af534b39112f1b7420f67d569c29b3a"
dpgoetz,2013-10-25 19:44:46,https://api.github.com/repos/openstack/swift/git/commits/d6c65c34aa927911b2fbb82d62913f204e58b2c0,d6c65c34aa927911b2fbb82d62913f204e58b2c0,"catch decompression errors

Change-Id: Ica380edc2364a5e18cefc26f70710e18ea329cfa"
niuzhenguo,2013-10-25 08:28:14,https://api.github.com/repos/openstack/swift/git/commits/a454d1271cc640fac26d6f7381f6d554be363209,a454d1271cc640fac26d6f7381f6d554be363209,"Update my mailmap

Using new email address.

Change-Id: I9d49992e64302ff5d879761fa63dd01cefb63cad"
smerritt,2013-10-21 20:26:11,https://api.github.com/repos/openstack/swift/git/commits/0a26bb20b198939f309a47c8ba05bc9e62193a71,0a26bb20b198939f309a47c8ba05bc9e62193a71,"Simplify callers of diskfile.[read|write]_metadata()

As it happens, diskfile.read_metadata() and diskfile.write_metadata()
can take either an open file or a filename as their first arguments
(since xattr.[get|set]xattr() can), so we can clean up a couple places
where we were opening a file just to call read_metadata() or
write_metadata() on it. This results in 2 fewer system calls.

Example strace output:

/* read_metadata(filename) */
getxattr(""/mnt/sdb1/1/node/sdb1/afile"", ""user.some.key"", 0x0, 0) = 10
getxattr(""/mnt/sdb1/1/node/sdb1/afile"", ""user.some.key"", ""some-value"", 10) = 10

/* fp = open(filename); read_metadata(fp) */
open(""/mnt/sdb1/1/node/sdb1/afile"", O_RDONLY) = 4
fstat(4, {st_mode=S_IFREG|0664, st_size=0, ...}) = 0
fgetxattr(4, ""user.some.key"", 0x0, 0)   = 10
fgetxattr(4, ""user.some.key"", ""some-value"", 10) = 10

Change-Id: I321d8663b9e9e47b8f3ee6c21a1b65b408bb80e6"
portante,2013-10-24 16:23:39,https://api.github.com/repos/openstack/swift/git/commits/b48435cd25070d6d56987503908d3cb6bc03b9d5,b48435cd25070d6d56987503908d3cb6bc03b9d5,"Fix UnboundLocalError on account PUT

Fixes bug-1243973

Change-Id: I67143535c0f7a0c6b53f67329a0bb128a355a4de
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
pyKun,2013-10-23 13:19:01,https://api.github.com/repos/openstack/swift/git/commits/abcecd26a7b5871f75f0fbddf0d08bbac95bb089,abcecd26a7b5871f75f0fbddf0d08bbac95bb089,"utf8 encode tempurl key

In tempurl middleware, hmac uses the value of account metadata to
generate HMAC-SHA1 signature and hmac must accept a str-type string, not
a unicode string. The meta dict returned from get_info stroges special
chars as unicode however. So just encode it for tempurl using.

Closes-Bug: #1242644
Change-Id: I4be62eea014a573efc4748470de57dccf00e431d"
zaitcev,2013-10-22 23:29:38,https://api.github.com/repos/openstack/swift/git/commits/2664f58d10b6a210c1e46256226789f4d7931cbf,2664f58d10b6a210c1e46256226789f4d7931cbf,"Add colon after service name

In Fedora 21 the log format changed from this:

Oct 10 23:54:20 rhev-a24c-01 proxy-server 10.10.55.128 .....

to this:

Oct 10 23:57:49 kvm-rei journal: proxy-server 192.168.128.11 .....

It is clearly incompatible, because the word ""journal:"" is added.

It happens because all the log messages are filtered by Systemd
and it adds ""journal:"" if it cannot find a word ending with colon.
See:
 https://bugzilla.redhat.com/show_bug.cgi?id=1018042

It seems that one simple fix could be in Swift. We already add
the indentifier word, it's just we do not end it in colon.
Therefore, we could start adding a colon to make the log look
more like any other system log.

Unfortunately, this is not entirely compatible either! The number
of words is kept, so if you parse with regexp, you get the things
in expected places, but the name of the server now has a colon.
Would be simple enough to fix, I suppose, but still, this needs
a consideration. Reviewers should feel free to put -1 or -2 on
this if they find an application that breaks with this patch.

Change-Id: I0d641ae49e6fc989283868ade2ca542a8133cb07"
zaitcev,2013-10-22 23:18:04,https://api.github.com/repos/openstack/swift/git/commits/cd2e7df0b69bbd269cd3c4170e0fee8186a07c95,cd2e7df0b69bbd269cd3c4170e0fee8186a07c95,"Add an __str__ method to brokers

A few uses of broker.db_file are in printouts where we do need
them, so the administrator may know what's up. Seems like an easy
way to get rid of those is to make brokers identify themselves
with common __str__. Alternative back-end implementations may
supply something other than a filename here, for example a cluster
name and a volume name.

Note that I'm not sure if correct coercion would occur when
brokers are bounced through dictionaries, hence explicit str().

Change-Id: I329788ebd1fbe39ffadcf9f9d5194a74a88dde58"
zhouyuan,2013-10-19 03:40:35,https://api.github.com/repos/openstack/swift/git/commits/ed5101b2002b877518466ae5f9a6d652581238f2,ed5101b2002b877518466ae5f9a6d652581238f2,"Adding more unit tests for audit_location_generator

Change-Id: I40410fbbb79cea8647074f703e4675364c69d930"
portante,2013-09-12 23:51:18,https://api.github.com/repos/openstack/swift/git/commits/5202b0e58613738cc81ec63e7c6da14ce5429526,5202b0e58613738cc81ec63e7c6da14ce5429526,"DiskFile API, with reference implementation

Refactor on-disk knowledge out of the object server by pushing the
async update pickle creation to the new DiskFileManager class (name is
not the best, so suggestions welcome), along with the REPLICATOR
method logic. We also move the mount checking and thread pool storage
to the new ondisk.Devices object, which then also becomes the new home
of the audit_location_generator method.

For the object server, a new setup() method is now called at the end
of the controller's construction, and the _diskfile() method has been
renamed to get_diskfile(), to allow implementation specific behavior.

We then hide the need for the REST API layer to know how and where
quarantining needs to be performed. There are now two places it is
checked internally, on open() where we verify the content-length,
name, and x-timestamp metadata, and in the reader on close where the
etag metadata is checked if the entire file was read.

We add a reader class to allow implementations to isolate the WSGI
handling code for that specific environment (it is used no-where else
in the REST APIs). This simplifies the caller's code to just use a
""with"" statement once open to avoid multiple points where close needs
to be called.

For a full historical comparison, including the usage patterns see:
https://gist.github.com/portante/5488238

(as of master, 2b639f5, Merge
 ""Fix 500 from account-quota     This Commit
 middleware"")
--------------------------------+------------------------------------
                                 DiskFileManager(conf)

                                   Methods:
                                     .pickle_async_update()
                                     .get_diskfile()
                                     .get_hashes()

                                   Attributes:
                                     .devices
                                     .logger
                                     .disk_chunk_size
                                     .keep_cache_size
                                     .bytes_per_sync

DiskFile(a,c,o,keep_data_fp=)    DiskFile(a,c,o)

  Methods:                         Methods:
   *.__iter__()
    .close(verify_file=)
    .is_deleted()
    .is_expired()
    .quarantine()
    .get_data_file_size()
                                     .open()
                                     .read_metadata()
    .create()                        .create()
                                     .write_metadata()
    .delete()                        .delete()

  Attributes:                      Attributes:
    .quarantined_dir
    .keep_cache
    .metadata
                                *DiskFileReader()

                                   Methods:
                                     .__iter__()
                                     .close()

                                   Attributes:
                                    +.was_quarantined

DiskWriter()                     DiskFileWriter()

  Methods:                         Methods:
    .write()                         .write()
    .put()                           .put()

* Note that the DiskFile class   * Note that the DiskReader() object
  implements all the methods       returned by the
  necessary for a WSGI app         DiskFileOpened.reader() method
  iterator                         implements all the methods
                                   necessary for a WSGI app iterator

                                 + Note that if the auditor is
                                   refactored to not use the DiskFile
                                   class, see
                                   https://review.openstack.org/44787
                                   then we don't need the
                                   was_quarantined attribute

A reference ""in-memory"" object server implementation of a backend
DiskFile class in swift/obj/mem_server.py and
swift/obj/mem_diskfile.py.

One can also reference
https://github.com/portante/gluster-swift/commits/diskfile for the
proposed integration with the gluster-swift code based on these
changes.

Change-Id: I44e153fdb405a5743e9c05349008f94136764916
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
smerritt,2013-10-14 20:12:22,https://api.github.com/repos/openstack/swift/git/commits/a4e25d6da8d007051b3b0575de47338e210d4315,a4e25d6da8d007051b3b0575de47338e210d4315,"Proxy: use just one greenthread per client

Instead of using two greenthreads and an eventlet.queue.Queue of size
1 to stream response bodies from backends to clients, just do it with
a single greenthread that reads and writes in a loop. This should
lower the amount of CPU used by the proxy in its response streaming.

Client fairness used to be provided implicitly; since the queue only
held 1 item, the read-from-backend greenthread would block after each
chunk until the write-to-client greenthread got a chance to run. Now
fairness is provided by an explicit eventlet.sleep() call, just as it
is in the object server.

Change-Id: Iae27109f5a3d109ad21ec9a972e39f22150f6dbb"
morucci,2013-10-15 15:46:01,https://api.github.com/repos/openstack/swift/git/commits/6342cb387a8538a8b59e4a4ba9e2574ac23ff45f,6342cb387a8538a8b59e4a4ba9e2574ac23ff45f,"Handle COPY verb in account quota middleware

Since COPY verb allow to copy an existing object
we must check the size of the source object before
allowing the copy.

Fixes bug: #1201884

Change-Id: Ia37bc716be0c3e5a3174dc4370bb5084f81073ad"
greglange,2013-10-15 16:23:00,https://api.github.com/repos/openstack/swift/git/commits/a0017e053734ea5e72bfcc3fdc630c8a7a25431a,a0017e053734ea5e72bfcc3fdc630c8a7a25431a,"Removes vim comment

Change-Id: Ibc930638ee2d839e8499a13018c205b615f8b854
Partial-Bug: 1229324"
greglange,2013-10-15 15:38:02,https://api.github.com/repos/openstack/swift/git/commits/d4c658750562f2baa978cc28d341680c6b470070,d4c658750562f2baa978cc28d341680c6b470070,"return value on memcache client decr call

Closes-Bug: 1238204
Change-Id: I7d2ece118159637e5c5bf4bf5dd4ce4d2f6e4523"
smerritt,2013-10-10 20:33:05,https://api.github.com/repos/openstack/swift/git/commits/9c226e3a1530a21d754ac7f1702c35f4a8e5927c,9c226e3a1530a21d754ac7f1702c35f4a8e5927c,"Small optimization to container_quotas

When handling an object PUT with X-Copy-From, we only need to fetch
the source object's size if the container has a byte quota, but we
were always fetching it. Now we only fetch the size when we need it.

Change-Id: I0c2c6820cdf0022ef57df5fe7dcb2dd466665a4f"
smerritt,2013-10-09 19:31:26,https://api.github.com/repos/openstack/swift/git/commits/b61add12e4910208ec115966c259553c94671202,b61add12e4910208ec115966c259553c94671202,"Small efficiency improvement in account quotas

If you were performing an object PUT with X-Copy-From and you had
account_quotas in your pipeline but your account did not have a quota
set, then we will now avoid an unnecessary call to get_object_info().

Change-Id: I8592d4ad65e45ecf9e0557bc10ce2c2db19732e8"
smerritt,2013-10-09 19:25:42,https://api.github.com/repos/openstack/swift/git/commits/2419df2730c5879092f0058e63a7dfbae6519fa0,2419df2730c5879092f0058e63a7dfbae6519fa0,"Fix 500 from account-quota middleware

If a user had set X-Account-Meta-Quota-Bytes to something non-integer
prior to the installation of the account-quota middleware, then the
quota check would choke on it. Now a non-integer value is treated as
""no quota"".

Change-Id: I5c38911be1f66fa293aea9c78590d4ce7d184113"
notmyname,2013-10-08 14:35:43,https://api.github.com/repos/openstack/swift/git/commits/9b521fe800ed3984169d37e9772674867745fede,9b521fe800ed3984169d37e9772674867745fede,"CHANGELOG and AUTHORS updates for 1.10.0 release

Change-Id: Iaf8d289c5ddb6ac778243a5e1fc27600bade6feb"
clayg,2013-10-08 20:34:50,https://api.github.com/repos/openstack/swift/git/commits/221aa9edd33fab41c696431261cb3414f3c02355,221aa9edd33fab41c696431261cb3414f3c02355,"allow container create even if over account quota

Change-Id: I07278bc3314c26426ff0557fe2f5c69c02d6550c"
aaronorosen,2013-10-08 05:24:10,https://api.github.com/repos/openstack/swift/git/commits/841b8082cee923eb34f2b1bc89f0c5f4e91ce9b6,841b8082cee923eb34f2b1bc89f0c5f4e91ce9b6,"Correct URL in readme

doc.openstack.org -> docs.openstack.org

Change-Id: Iacadb8f70cb94adc002c562a1068ff38be19a9fc"
clayg,2013-10-08 04:28:48,https://api.github.com/repos/openstack/swift/git/commits/0b370269111957fec7521d284fcbd742ff8b8c13,0b370269111957fec7521d284fcbd742ff8b8c13,"Add a Timeout when getting Memcache connections

The old Timeout behavior when pulling connections of the MemcacheConnPool left
ambiguity around what timed out and could put more placeholders in the queue
than the configured max_connections.

To avoid waiting indefinitely on slow severs we raise a custom Timeout when we
fail get a connection from the pool.  We still error limit the slow server,
and move onto the next, but we still don't allow more than max_connections.

Change-Id: I9e2409896423d52da69e35c038e5f457c71f705d"
portante,2013-10-04 12:04:42,https://api.github.com/repos/openstack/swift/git/commits/6607beab0dc8043251b490471761fa2dd85f2816,6607beab0dc8043251b490471761fa2dd85f2816,"Don't apply timeout to Pool.get operation (leaks)

The connection timeout to a memcache server is performed by using the
""with Timeout()"" construct over the sock.connect() call in the
.create() method. In addition, the same construct was being applied to
the Pool.get() call in ._get_conns().

If the maximum number of connections was already created, and the
Pool.get() called took longer than the connect timeout, then the error
handling path would add a place holder to the connection
pool. Eventlet's Pool class allows for additional items to be added to
the pool, over and above the max_size setting. This additional place
holder will eventually be pulled and a new connection created to take
its place.

The fix is to remove the timeout construct in the _get_conns() method.

In addition, we also apply the unit test patch mentioned in the review
comments for Patch Set 6 of https://review.openstack.org/45134,
located at http://paste.openstack.org/show/47288/.

Fixes bug 1235027

Change-Id: I786cabefe3e8ddf7d92feb7ebc7cfb613d60a1da
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-10-07 12:10:31,https://api.github.com/repos/openstack/swift/git/commits/9411a24ba7b5a1380ec8a2aa13d4aa92988d2ff9,9411a24ba7b5a1380ec8a2aa13d4aa92988d2ff9,"Revert ""Refactor common/utils methods to common/ondisk""

This reverts commit 7760f41c3ce436cb23b4b8425db3749a3da33d32

Change-Id: I95e57a2563784a8cd5e995cc826afeac0eadbe62
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-10-05 15:27:35,https://api.github.com/repos/openstack/swift/git/commits/61e135e211822840731d3153e9b249b6b81a1c21,61e135e211822840731d3153e9b249b6b81a1c21,"Fix bad hash_path reference

Mea culpa: these two scripts were missed in commit:

  https://review.openstack.org/46956

Fixes bug 1235441

Change-Id: I4303bc808448a79bddbb991526b0cca26150b392
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
zaitcev,2013-10-05 05:18:07,https://api.github.com/repos/openstack/swift/git/commits/c7e65db27da59ddf221d1720362434581ef30311,c7e65db27da59ddf221d1720362434581ef30311,"Make test_translations test our tree

In order to run the correct classes, Python test framework adjusts
sys.path. However, these changes are not propagated to subprocesses.
Therefore, the test actually tries to test installed Swift, not
the one in which it is running.

The usual suggestion is to run ""python setup.py develop"" before
testing, but it's annoying and error-prone. If you forget it,
you may test the code in /usr very easily, and never know.

Let's just pass the correct path to subprocess. Much safer.

Change-Id: Ic71314e8462cf6e0579d704ffe9fbbfac7e6ba24"
portante,2013-10-03 03:58:13,https://api.github.com/repos/openstack/swift/git/commits/3d8f0f18059482412e9b60909de69df90416dfdd,3d8f0f18059482412e9b60909de69df90416dfdd,"Fedora 19: need to use /etc/rc.d/rc.local

Change-Id: I80e9a4c40ff99ec09a8eeef935447c6393ea78ec
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-10-03 03:52:30,https://api.github.com/repos/openstack/swift/git/commits/db4547d01dab84142da40fdeb1ca5fbb34ef56ba,db4547d01dab84142da40fdeb1ca5fbb34ef56ba,"Remove sphinx build warnings

Change-Id: Ic34bbd9cc65d96ea9b8434be7b54e5bcfae28b63
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
smerritt,2013-09-25 17:41:41,https://api.github.com/repos/openstack/swift/git/commits/def37fb56aea7b9fe4254621e10667712052d3ac,def37fb56aea7b9fe4254621e10667712052d3ac,"Stop reading from object server when client disconnects.

If a client were in the middle of an object GET request and then
disconnected, the proxy would wait a while (default 60s) and then time
out the connection. As part of the teardown for this, the proxy would
attempt to close the connection to the object server, then drain any
associated buffers. However, this didn't work particularly well,
resulting in the proxy reading the entire remainder of the object for
no gain.

Now, the proxy closes the connection hard, by calling .close() on the
underlying socket._socket object. This is different from calling
.close() on a socket._socketobject object, which is what you get back
from socket.socket() and similar methods. Calling .close() on a
socket._socketobject simply decrements a reference counter on the
socket._socket, which has been observed in the past to result in
socket leaks when something holds onto a reference. However, calling
.close() on a socket._socket actually closes the socket regardless of
who else has a reference to it.

I had to delete a test assertion that said the object server never got
SIGPIPE after a GET w/X-Newest. Well, you get a SIGPIPE when you write
to a closed socket, and now the proxy is actually closing the sockets
early, so now you *do* get a SIGPIPE.

closes-bug: 1174660

Note that this will cause a regression on bug 1037337; unfortunately,
the cure is worse than the disease, so out it goes.

Change-Id: I9c7a2e7fdb8b4232e53ea96f86b50e8d34c27221"
dirkmueller,2013-10-02 19:27:40,https://api.github.com/repos/openstack/swift/git/commits/6b67952442429cff306ceefc83dd206a4a5c16ed,6b67952442429cff306ceefc83dd206a4a5c16ed,"assertEquals is deprecated, use assertEqual

The very same functionality for fewer keystrokes.

Change-Id: I8c9513412f398132db5636fdfb7bf8301e8443cf"
clayg,2013-10-02 18:39:35,https://api.github.com/repos/openstack/swift/git/commits/02e247c1b3d9637c6d6ecfd47ce82d250c576dbb,02e247c1b3d9637c6d6ecfd47ce82d250c576dbb,"Add ""note"" box callouts to SAIO for user changes.

The SAIO is purpously cut into two parts, so that you don't have to switch
back and forth between root and your unprivledged user.  Add some ""note"" box
callouts to highlight this changeover.

Change-Id: I8b1a8f0539eac60d4121bdd4dab01df75ecca207"
smerritt,2013-10-02 16:57:34,https://api.github.com/repos/openstack/swift/git/commits/062a67b07d9a16fd4970bb90798ea67d1f99b5cd,062a67b07d9a16fd4970bb90798ea67d1f99b5cd,"Allow slightly older dnspython (>= 1.9.4).

This has a couple benefits.

First, it means Ubuntu Precise users can just install python-dnspython
from packages instead of having to pull one in from source. This
should also fix an install error with new SAIO boxes where running
""python setup.py develop"" fails unless a satisfactory dnspython is
already installed.

Second, it matches the dnspython dependency in the global
requirements. This means that the gates are already running with this
dnspython dependency, and it means our requirements.txt is one step
closer to being a subset of the global requirements.txt, which is
important to some people.

Change-Id: I5d58f488e1e4c4139c9fb20d89f386cab1537e98"
creiht,2013-09-04 22:20:44,https://api.github.com/repos/openstack/swift/git/commits/ae8470131ead095e3bf1c290bac866a5e6e29e79,ae8470131ead095e3bf1c290bac866a5e6e29e79,"Pool memcache connections

This creates a pool to each memcache server so that connections will not
grow without bound.  This also adds a proxy config
""max_memcache_connections"" which can control how many connections are
available in the pool.

A side effect of the change is that we had to change the memcache calls
that used noreply, and instead wait for the result of the request.
Leaving with noreply could cause a race condition (specifically in
account auto create), due to one request calling `memcache.del(key)` and
then `memcache.get(key)` with a different pooled connection.  If the
delete didn't complete fast enough, the get would return the old value
before it was deleted, and thus believe that the account was not
autocreated.

ClaysMindExploded
DocImpact
Change-Id: I350720b7bba29e1453894d3d4105ac1ea232595b"
portante,2013-09-26 19:47:36,https://api.github.com/repos/openstack/swift/git/commits/e8a07c4ca784f958e33044c267212925d6452979,e8a07c4ca784f958e33044c267212925d6452979,"Fedora 19 updates

Change-Id: I95138852e45aa7632218a7107e0e7ba1f6ef373c
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
pyKun,2013-09-27 07:25:53,https://api.github.com/repos/openstack/swift/git/commits/4c4a8abaa500d0d3940d81a4eb5ac21215ddc07a,4c4a8abaa500d0d3940d81a4eb5ac21215ddc07a,"improve bulk document

This a very small change which just tell users request url of bulk
delete request. In original docstrings, it just states the request
parameters, request body and request method but not request url.

Change-Id: I0bbc302a0e072910bb58e4814614d7f761433b10"
dpgoetz,2013-09-12 14:38:23,https://api.github.com/repos/openstack/swift/git/commits/df39602c41605c4c68a47c6532a466ccc1a6633d,df39602c41605c4c68a47c6532a466ccc1a6633d,"bulk delete bug with trailing whitespace

Change-Id: Ia48224a1a187a8ed6b0c9a3c72cac06f084a6fc8"
smerritt,2013-08-28 01:00:04,https://api.github.com/repos/openstack/swift/git/commits/d8e0492ea80adae990f35930465d6e905a3be061,d8e0492ea80adae990f35930465d6e905a3be061,"Fix internal swift.source tracking.

In 1.8.0 (Grizzly), your proxy logs would indicate which middleware
was responsible for an internal request, e.g. TU for tempurl or BD for
bulk delete. At some point, those all turned into GET_INFO, which does
not give you any idea which specific middleware was responsible, only
that it came from a get_account_info/get_container_info call.

This commit puts it back to how it was in 1.8.0. Also, the
new-since-1.8.0 function get_object_info() got swift_source plumbing
added to it, so source tracking for the quota middlewares'
get_object_info() calls will happen now too.

Note that due to the new-since-1.8.0 in-environment caching of
account/container info, you may not see as many lines in the proxy log
as you would with 1.8.0. This is because there are actually fewer
internal requests being made.

Change-Id: I2b2ff7823c612dc7ed7f268da979c4500bbbe911"
smerritt,2013-09-24 23:43:33,https://api.github.com/repos/openstack/swift/git/commits/d9d7b2135a7020cdf43172ea4fcf0b1020f49101,d9d7b2135a7020cdf43172ea4fcf0b1020f49101,"Install libffi-dev in SAIO docs.

If you don't, then newer versions of xattr won't install, and since
our xattr requirement is simply "">= 0.4"" in requirements.txt, this
affects anyone setting up a new SAIO.

This happened with xattr 0.7, which was released on 2013-07-19.

Change-Id: Iaf335fa25a2908953d1fd218158ebedf5d01cc27"
smerritt,2013-09-24 23:20:28,https://api.github.com/repos/openstack/swift/git/commits/ce5e810fed8c453f4cd41c3c32162f47cde48f10,ce5e810fed8c453f4cd41c3c32162f47cde48f10,"Update SAIO doc to have double proxy-logging in pipeline.

Change-Id: I0a034ca1420761cbf4e35dcea1d9cd18a92f90bd"
portante,2013-09-24 02:16:59,https://api.github.com/repos/openstack/swift/git/commits/4e8b2ffc2e2b97f8bd223c90848ecaaf777bebc9,4e8b2ffc2e2b97f8bd223c90848ecaaf777bebc9,"Use created container in unit test

Change-Id: I2573be1ac14f65b8008611edf940363b31c8d86e
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
smerritt,2013-09-23 17:05:34,https://api.github.com/repos/openstack/swift/git/commits/d5fcc9aaf3b6707b1ddbc577e9f8c93fa90d6d89,d5fcc9aaf3b6707b1ddbc577e9f8c93fa90d6d89,"Two small account-quota fixes

First: even if a user has exceeded their account quota, they should be
able to make object POST requests. Updating an object's metadata isn't
going to make them any more over quota, so should be allowed.

Second: don't bother with the reseller_admin check for container or
object requests. If I send the header X-Account-Meta-Quota-Bytes: 100
on e.g. an object PUT request, the proxy will (rightly) ignore it. Now
account-quotas does too.

Change-Id: I970a76349659acdd8229a324bd33bfe7fe7261a4"
cschwede,2013-09-18 17:49:32,https://api.github.com/repos/openstack/swift/git/commits/56440eb95da79506cc27d92e07f0f5969cc683ce,56440eb95da79506cc27d92e07f0f5969cc683ce,"Handle X-Copy-From header in container_quota middleware

Content length of the copied object is checked before
allowing the copy request according to the container quota.

Closes-Bug: #1201875
Change-Id: If44b916791e94ac6c66eee04a5727186ce0e56ae"
zqfan,2013-09-20 15:34:06,https://api.github.com/repos/openstack/swift/git/commits/92ae497800d9e66795346019cf284026a751597e,92ae497800d9e66795346019cf284026a751597e,"Fix unsuitable assertTrue

assertTrue accepts a parameter msg which will be printed when
assertion fails, usually msg is a str. This patch fixes unsuitable
usage of assertTrue which set msg to bool type True.

Change-Id: I731f8ea553c935eba0e112ffded16f41a5ea86c0
Fixes-Bug: #1226374"
dpgoetz,2013-09-10 16:01:32,https://api.github.com/repos/openstack/swift/git/commits/01f58d68262aab1ac63683c9fac91b4da764aa92,01f58d68262aab1ac63683c9fac91b4da764aa92,"SLOs broken for range requests

Change-Id: I21175a4be0cda9a8a98c425bff11c80895cd6d3e"
gholt,2013-09-19 21:05:46,https://api.github.com/repos/openstack/swift/git/commits/4a5c2fa0c6865f8a6dde2cd08ceb08c31ae38fa9,4a5c2fa0c6865f8a6dde2cd08ceb08c31ae38fa9,"Log x-copy-from when it could be useful

Change-Id: Ia28a9b47213f848ab5ea59572e14ac710ed881e3"
greglange,2013-09-17 19:24:24,https://api.github.com/repos/openstack/swift/git/commits/285a3a88a1ede50014d4f4a124994a2a0e85705b,285a3a88a1ede50014d4f4a124994a2a0e85705b,"add seek() to CompressingFileReader

Change-Id: I33d9119684497b53101db3bc380953e86bdf25f0"
gholt,2013-09-19 17:14:35,https://api.github.com/repos/openstack/swift/git/commits/58efcb3b3e70ba0502504124a1348ee14cc2687c,58efcb3b3e70ba0502504124a1348ee14cc2687c,"Fix probe tests

Change-Id: I03573bf24baf031b1874c3ff2e2d89d34473c266"
zqfan,2013-09-19 17:00:54,https://api.github.com/repos/openstack/swift/git/commits/f72704fc82803254a6f335fa2a7d2459f86f877d,f72704fc82803254a6f335fa2a7d2459f86f877d,"Change OpenStack LLC to Foundation

Change-Id: I7c3df47c31759dbeb3105f8883e2688ada848d58
Closes-bug: #1214176"
prashanthpai,2013-09-17 06:54:29,https://api.github.com/repos/openstack/swift/git/commits/a6443f7068cdeaeb680f92849241be042fdc561d,a6443f7068cdeaeb680f92849241be042fdc561d,"Add HTTPSeeOther(303) and HTTPTemporaryRedirect(307) to swob

RFC 1945 and RFC 2068 specify that the client is not allowed to change the
method on the redirected request.  However, most existing user agent
implementations treat 302 as if it were a 303 response, performing a GET on
the Location field-value regardless of the original request method. The status
codes 303 and 307 have been added for servers that wish to make unambiguously
clear which kind of reaction is expected of the client.

HTTP/1.1 RFC for 302: http://tools.ietf.org/html/rfc2616#section-10.3.4
HTTP/1.1 RFC for 307: http://tools.ietf.org/html/rfc2616#section-10.3.8

Change-Id: I354e2f4f3e3eb6a1553b3d9c60b613d8f0c37531
Signed-off-by: Prashanth Pai <ppai@redhat.com>"
portante,2013-09-12 19:57:56,https://api.github.com/repos/openstack/swift/git/commits/7760f41c3ce436cb23b4b8425db3749a3da33d32,7760f41c3ce436cb23b4b8425db3749a3da33d32,"Refactor common/utils methods to common/ondisk

Place all the methods related to on-disk layout and / or configuration
into a new common module that can be shared by the various modules
using the same on-disk layout.

Change-Id: I27ffd4665d5115ffdde649c48a4d18e12017e6a9
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
clayg,2013-09-17 00:06:09,https://api.github.com/repos/openstack/swift/git/commits/b0aeed1ec7fa2fd315f6293b0fd3d8118e20c7f9,b0aeed1ec7fa2fd315f6293b0fd3d8118e20c7f9,"Fix default replication options for ring-builder add

Change-Id: I957deeb0e711bfe7cd9d852726c77179a4613ee0"
zaitcev,2013-09-14 22:09:53,https://api.github.com/repos/openstack/swift/git/commits/75086a13301f20a1f459cf2dbd684bc8a06726bb,75086a13301f20a1f459cf2dbd684bc8a06726bb,"Supply correct arguments to __init__ of a base class

Hopefuly this extra test case is not too inane and slows us
down for nothing. It is verified to fail with the old code.

Change-Id: I604eca09f7f9ae044a8ad75284cd82a37325f99c"
alex,2013-09-13 22:38:01,https://api.github.com/repos/openstack/swift/git/commits/a9c119d440c99440088012417f56b1fa9baab980,a9c119d440c99440088012417f56b1fa9baab980,"Removed many unnecessary uses of dict.keys

This has a few advantages: some of these locations will perform
slightly faster, it's minutely less code, and dict.keys has a different
behavior on Python 3. Also removes usage of dict.iterkeys, which is
identical to just iterating over the dict, except it doesn't exist on
Python 3 at all.

Change-Id: Ia91e97232dc8d78cf63fa807de288fc25cf5425d"
smerritt,2013-09-13 20:26:41,https://api.github.com/repos/openstack/swift/git/commits/9cd7c6c15514794afba5ac019823578aa7fe92a9,9cd7c6c15514794afba5ac019823578aa7fe92a9,"Optimizations to Ring.get_more_nodes()

When we're looking for handoffs, we first try to span all the regions,
then zones, then devices. However, the search loops would always go
over a big subset of the ring, regardless of whether or not there was
anything left to find.

In particular, this would result in long runtimes for the first call
to get_more_nodes() if you didn't have more regions than replicas, as
the region-search loop would chew through a ton of devices and not
find any (since there weren't any). Now we do a little arithmetic,
think about the pigeonhole principle a little bit, and bail out when
there's nothing left to find, rather than waiting until there's no
space left to search.

Similar changes were made for the different-zone and different-device
search loops.

On a 4800-device test ring (4 regions, 5 zones each, 20 node each, 12
drives each), the time to get all handoffs dropped to about 5% of its
previous value (a 95% improvement).

More usefully, on a 1200-device test ring (same as above but only 1
region), the time to get just the first 6 handoffs dropped to about
0.01% of its original runtime, or a 10,000x speedup.

Fixes bug 1225018.

Change-Id: I4c77094186f0032a3e19a099a1a0e71b2ba06719"
zaitcev,2013-09-13 19:55:10,https://api.github.com/repos/openstack/swift/git/commits/cfa4f9497d8903d340f05f8314f40c814e3dde1c,cfa4f9497d8903d340f05f8314f40c814e3dde1c,"Use a local variable auditor_worker

This patch is only a cleanup, but our code makes me rage every time
I read it. In short, we have a class with a variable self.auditor,
and we assign ObjectAuditor to it at some ties, AuditorWorker at
other times. So, whenever there's a mismerge or whatever, you cannot
tell if self.auditor.broker_class makes sense or not.

Since all cases of using self.auditor as AuditorWorker are purely
local, just evict it to a local variable auditor_worker. Leave
self.auditor to represent ObjectAuditor, because it's used as
a class variable in places.

Change-Id: I811b80ac6c69a4daacfed7a5918bc0b15761d72e"
alex,2013-09-13 17:36:54,https://api.github.com/repos/openstack/swift/git/commits/5026e4569115e7aef1d25ed5ab9adbd6c330f110,5026e4569115e7aef1d25ed5ab9adbd6c330f110,"Switched some relative imports to be absolute

Implicit relative imports don't work on Python3, and are also prone to
several different classes of errors.

Change-Id: I7b62e9bfbe9c0b1fc9876413e3139fda019a4e57"
alex,2013-09-13 16:50:14,https://api.github.com/repos/openstack/swift/git/commits/5b0788d37d61584ba4b8e9f5d729ff2c5474f66c,5b0788d37d61584ba4b8e9f5d729ff2c5474f66c,"Use an existing local var rather than doing alookup

This should make ``Ring.get_more_nodes`` microscopically faster.

Change-Id: Ibf0988fe0630ad94ac0c04040766d89ef86d1488"
creiht,2013-08-22 19:23:29,https://api.github.com/repos/openstack/swift/git/commits/a30a7ced9cc7c6510bbca93529e62bcbc30bf7c0,a30a7ced9cc7c6510bbca93529e62bcbc30bf7c0,"Add handoffs_first and handoff_delete to obj-repl

If handoffs_first is True, then the object replicator will give
partitions that are not supposed to be on the node priority.

If handoff_delete is set to a number (n), then it will delete a handoff
partition if at least n replicas were successfully replicated

Also fixed a couple of things in the object replicator unit tests and
added some more

DocImpact

Change-Id: Icb9968953cf467be2a52046fb16f4b84eb5604e4"
portante,2013-09-12 20:00:49,https://api.github.com/repos/openstack/swift/git/commits/0b949ebe90ebd4613105af0c0127949128c2ec3d,0b949ebe90ebd4613105af0c0127949128c2ec3d,"Remove unused method iter_devices_partition

Change-Id: I69a14bcb92490abd3ad1070799bf1580a2dcaa92
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
clayg,2013-09-12 05:42:19,https://api.github.com/repos/openstack/swift/git/commits/a44307940432af93d52dab0a2701c7d6d91beeed,a44307940432af93d52dab0a2701c7d6d91beeed,"Ensure audit tests don't cause unwanted errors

Because the audit code catches all Exceptions, bugs in the code, like
misspelled names, bad logic, can result in errors which don't cause
exceptions that kill the unit tests.

Change-Id: Idb8e3b00a49863ab920161a46edb61a5c47fffe2"
dpgoetz,2013-09-12 15:07:59,https://api.github.com/repos/openstack/swift/git/commits/0afcc674cb698906f354d9e57f97378d37d9d0c0,0afcc674cb698906f354d9e57f97378d37d9d0c0,"remove useless if from slo

Change-Id: Id232c6973dcb55c19233b6d517770e58c2737ba0"
clayg,2013-09-11 19:44:23,https://api.github.com/repos/openstack/swift/git/commits/64430da593b40186251b3de08b5ae18dcffb062b,64430da593b40186251b3de08b5ae18dcffb062b,"fix race in test_wait on busy server

fix bug 1224208

Change-Id: I83c673a87c31214a7c54b6399ca53512885e6bc3"
zaitcev,2013-09-12 01:46:34,https://api.github.com/repos/openstack/swift/git/commits/2283c54d199be5d19a4ca5fce6d692b6df9619b6,2283c54d199be5d19a4ca5fce6d692b6df9619b6,"Tinker with dockstrings in back-ends and related places

Change-Id: If80509e2e19cec5d0b8c5cfccd15e6d893558de4"
cboylan,2013-09-10 22:56:09,https://api.github.com/repos/openstack/swift/git/commits/2d0ceb1e50f08bc9059c4d8560a3827ed8259508,2d0ceb1e50f08bc9059c4d8560a3827ed8259508,"Verbose functional test request failures.

* test/__init__.py: Put safe_repr import/implementation here so that it
is available to functional and unit tests.

* test/functional/swift_test_client.py: When a request fails
record why that request failed, how many requests failed, and what the
request was when raising RequestError to aid in debugging. Makes use of
safe_repr from test/__init__.py.

* test/unit/common/test_constraints.py: Remove implementation of
safe_repr and use the implementation in test/__init__.py.

Change-Id: I6c957343fb4b8b95d3875fd5ca87b3cf28a5f47a"
morucci,2013-08-21 12:57:16,https://api.github.com/repos/openstack/swift/git/commits/84296aae924e21dd34e9b07505ba30b72aaf3422,84296aae924e21dd34e9b07505ba30b72aaf3422,"Improve unittest coverage of account reaper

Add more unittests for account_reaper in order to
improve code coverage.

Fixes: bug #1210045
Change-Id: I73490f80ac70b814a0abc490dc932f2a86fca703"
clayg,2013-08-31 01:08:24,https://api.github.com/repos/openstack/swift/git/commits/d51e87342331ded54de5424d888d9d143b132a7e,d51e87342331ded54de5424d888d9d143b132a7e,"Remove keep_data_fp argument from DiskFile constructor

All access to the data_file fp for DiskFile is moved after the new ""open""
method.  This prepares to move some additional smarts into DiskFile and reduce
the surface area of the abstraction and the exposure of the underlying
implementation in the object-server.

Future work:

 * Consolidate put_metadata to DiskWriter
 * Add public ""update_metdata"" method to DiskFile
 * Create DiskReader class to gather all access of methods under ""open""

Change-Id: I4de2f265bf099a810c5f1c14b5278d89bd0b382d"
zaitcev,2013-09-10 19:30:28,https://api.github.com/repos/openstack/swift/git/commits/d4b024ad7d64a854072517eef47b059c93bdfdd3,d4b024ad7d64a854072517eef47b059c93bdfdd3,"Split backends off swift/common/db.py

The main purpose of this patch is to lay the groundwork for allowing
the container and account servers to optionally use pluggable backend
implementations. The backend.py files will eventually be the module
where the backend APIs are defined via docstrings of this reference
implementation. The swift/common/db.py module will remain an internal
module used by the reference implementation.

We have a raft of changes to docstrings staged for later, but this
patch takes care to relocate ContainerBroker and AccountBroker into
their new home intact.

Change-Id: Ibab5c7605860ab768c8aa5a3161a705705689b04"
morucci,2013-07-16 14:39:23,https://api.github.com/repos/openstack/swift/git/commits/fffc95c3ccb01333becc86e0cb4c67cf5edf9725,fffc95c3ccb01333becc86e0cb4c67cf5edf9725,"Handle X-Copy-From header in account_quota mw

Content length of the copied object
is checked before allowing the copy
request according to the account
quota set by Reseller.

Fixes: bug #1200271
Change-Id: Ie4700f23466dd149ea5a497e6c72438cf52940fd"
portante,2013-09-04 03:08:14,https://api.github.com/repos/openstack/swift/git/commits/30b1590c3cbf066eee7d2411379654ceccd0a723,30b1590c3cbf066eee7d2411379654ceccd0a723,"Assume ETag is always in the metadata

Currently the GET and HEAD calls always assume that the ETag is
present in the on-disk metadata, as they index the metadata dictionary
directly for the value to fill in the proper response header (a
KeyError would be thrown if missing and turn into a 503).

The close code that handles quarantining checked to see if an ETag is
present in the metadata before making the comparison. However, a close
operation would never even be attempted if an ETag was not present,
since the response headers are filled in before the object is read.

Change-Id: I5032251414eceb38079d235504cc9e589dea5f3e
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
clayg,2013-07-30 18:44:11,https://api.github.com/repos/openstack/swift/git/commits/ce12d66cf970aec6dbbf0dc84500665c62638cd5,ce12d66cf970aec6dbbf0dc84500665c62638cd5,"fix swift i18n

Change-Id: I53cea28a6d7593a1b308dbcf77dddf7f40d76cb2"
alex,2013-09-09 21:49:39,https://api.github.com/repos/openstack/swift/git/commits/54d5f3bde9c8685a2f5c238fc6af4162a9dae01b,54d5f3bde9c8685a2f5c238fc6af4162a9dae01b,"Fixed a suite that was over-indented

Change-Id: I3d05b29e57b77c3751d9f5ff694085bd082e8eb1"
alex,2013-09-09 16:58:26,https://api.github.com/repos/openstack/swift/git/commits/537626ac6b79679ea775a84266901545d1a6a864,537626ac6b79679ea775a84266901545d1a6a864,"Don't stat the path in ``unlink_older_than``

``listdir`` already handles the ENOENT and returns an empty list in
that case.

Change-Id: I597d7ffa9979f668a856519062839505d26129f2"
dirkmueller,2013-09-07 14:29:15,https://api.github.com/repos/openstack/swift/git/commits/816c73e0151f5d75e591e8bf490974855037ea58,816c73e0151f5d75e591e8bf490974855037ea58,"Add Apache 2.0 licensing headers

Change-Id: I38fae2a78b2369a897b7f298c1aead9b963bf7c9"
dirkmueller,2013-08-30 21:56:55,https://api.github.com/repos/openstack/swift/git/commits/00f9d718d2d746ca8664290b79c852bb91fca1cc,00f9d718d2d746ca8664290b79c852bb91fca1cc,"Move string expansion outside localisation (H702)

String expansion should be done outside localisation call (_()),
otherwise there will never be a matching string found in the
catalogue.

Also enable gating on this Hacking check (H702).

Change-Id: Ie7c89fbfb52629e75d5e68e9afda8bcf50bf4cdd"
dirkmueller,2013-08-28 19:16:08,https://api.github.com/repos/openstack/swift/git/commits/3d36a76156a5080f29aa32f6fce019d7b4f1e18b,3d36a76156a5080f29aa32f6fce019d7b4f1e18b,"Use Python 3.x compatible except construct

except x,y: was deprected and is removed in Python 3.x.
Use ""except x as y:"" instead which works in any Python
version >= 2.6.

Change-Id: I7008c74b807340f3457d3a0c8bd0b83f23169d14"
dirkmueller,2013-09-07 08:14:00,https://api.github.com/repos/openstack/swift/git/commits/3102ad48d56ec2df00da66307191a9dd711e4784,3102ad48d56ec2df00da66307191a9dd711e4784,"Do not use locals() for string formatting (H501)

Fixes a warning triggered by Hacking 0.7.x or newer. There
is no need to use a positional string formatting here, since
this is not going to be localized.

Change-Id: Ie38d620aecb0b48cd113af45cc9ca0d61f8f8ff1"
portante,2013-09-03 15:10:22,https://api.github.com/repos/openstack/swift/git/commits/698023f477e2b66a1463aeb7082ef4547d0e6dd7,698023f477e2b66a1463aeb7082ef4547d0e6dd7,"Provide a method for retrieving on-disk metadata

We hide the internal dictionary for the metadata providing a method to
retrieve it to abstract away the implementation details of how
DiskFile object provides and maintains that metadata.

This is in anticipation of the DiskFile API refactoring.

Change-Id: I1c0dc01a4680bd435512405e2d31fba24421720a
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-03 20:34:09,https://api.github.com/repos/openstack/swift/git/commits/9d98070f7b2e06ac8cc30d12523798df4418eed0,9d98070f7b2e06ac8cc30d12523798df4418eed0,"Remove reference to 'file' built-in

Change-Id: Ie79e8ede393e92824fd906df1ff1933193c00943
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
alex,2013-09-04 23:00:44,https://api.github.com/repos/openstack/swift/git/commits/12f95cc5a1d1427470f6a3cd953421005dbe51a9,12f95cc5a1d1427470f6a3cd953421005dbe51a9,"Perform fewer stat calls when doing auditing of objects

Each `isdir` or `exists` call performs a stat, but that info is already
available from the exception if it doesn't exist in `listdir`.

Change-Id: I831494e3dbc8fda62ab29431471566bdb8dc6d27"
portante,2013-09-03 14:34:23,https://api.github.com/repos/openstack/swift/git/commits/fdfa34e119f4fa751775edca0353bae77162e6e4,fdfa34e119f4fa751775edca0353bae77162e6e4,"Add a delete() method to DiskFile

In preparation for making the DiskFile class an abstraction layer for
the backend to all the object server REST API services, we add a
simple delete method which encapsulates the required behavior.

Change-Id: I539ad53c297e4c572e2f93c2524188fb89b2db40
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-03 14:26:39,https://api.github.com/repos/openstack/swift/git/commits/9e7c56a2c98907c6eb0f4ce41302efd682106f80,9e7c56a2c98907c6eb0f4ce41302efd682106f80,"Rename DiskFile.writer to create

Change-Id: I3af71c64dd4c61e665fe128a0b5241fd87ba71e0
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
pandemicsyn,2013-09-05 23:36:01,https://api.github.com/repos/openstack/swift/git/commits/57f97e71d7685249a6f42f2a27f2739a20ef4c2c,57f97e71d7685249a6f42f2a27f2739a20ef4c2c,"Remove dupe account_audit when reporting stats

- Remove duplicate account_audit call that happened once an hour when stats
where reported.
- And fixed a flake8 complaint

Change-Id: Ide686c475f8648664e9cffdd696629cf6ba9f75c"
pandemicsyn,2013-09-05 23:12:15,https://api.github.com/repos/openstack/swift/git/commits/42f4b150e3fcd8c49ecac2e42839449d00190053,42f4b150e3fcd8c49ecac2e42839449d00190053,"Faster swift-dispersion-populate

- Makes swift-dispersion-populate a bit faster when using a larger
  dispersion_coverage with a larger part_power.
- Adds option to only run population for container OR objects
- Adds option to let you resume population at given point (useful if you
  need to resume population after a previous run error'd out or the
  like) by specifying which suffix to start at.

The original populate just randomly used uuid4().hex as a suffix on the
container/object names until all the partition's required where covered.
This isn't a big deal if you're only doing 1% coverage on a ring with a
small part power but takes ages if you're doing 100% on a larger ring.

Change-Id: I52f890a774412c1d6179f12db9081aedc58b6bc2"
notmyname,2013-09-05 19:27:18,https://api.github.com/repos/openstack/swift/git/commits/a9aec73098d5f4a7ab490bb16faab0834598243a,a9aec73098d5f4a7ab490bb16faab0834598243a,"add reseller_admin_role to sample config

Change-Id: Ia8e62eef5af9e849e86c3ff14ce7f8aaa5f21abf"
portante,2013-09-05 02:25:28,https://api.github.com/repos/openstack/swift/git/commits/93ab856f6640a2322846a6861a4dbe1085294667,93ab856f6640a2322846a6861a4dbe1085294667,"Add support for POST commit coverage runs

Modeled on how keystone does it.

Change-Id: Idad4f854f1bfb915a48ff69988553810a76accc0
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 19:10:39,https://api.github.com/repos/openstack/swift/git/commits/22451b22cb7ec1fbc9b9940ae8f0ef346a36e3ca,22451b22cb7ec1fbc9b9940ae8f0ef346a36e3ca,"Pep8 final two unit test modules and enforce (12 of 12)

We also fix up any other pep8 failures that snuck in from merges along
the way.

Change-Id: I4ea984780ac2eac458c98fe181684eef4e04beaf
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 16:50:07,https://api.github.com/repos/openstack/swift/git/commits/14037b46e694399eb722c89665680a05684c2d33,14037b46e694399eb722c89665680a05684c2d33,"Flake8 container test_server.py (11 of 12)

Change-Id: Ie06ed2955838556d5399a49ba3599dfbca4f7512
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-04 13:21:43,https://api.github.com/repos/openstack/swift/git/commits/9cdee330fb13c44f4f247402408ea0e33aa761ed,9cdee330fb13c44f4f247402408ea0e33aa761ed,"Refactor finalize_put as an object method

Change-Id: Iec3f53c564505c29739bb5531a71a0a101f64193
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-04 02:31:30,https://api.github.com/repos/openstack/swift/git/commits/aae122dd4c2fad215c6ce886efc8189914918c3a,aae122dd4c2fad215c6ce886efc8189914918c3a,"Rename param to avoid use of built-in name hash

Change-Id: I505e8b15ca41c52cd4942a0a7dd34996a1849bb3
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
alex,2013-09-03 17:47:06,https://api.github.com/repos/openstack/swift/git/commits/8d614eeb4aead01e3b953ccfc3d9368fd1814e4a,8d614eeb4aead01e3b953ccfc3d9368fd1814e4a,"Made the HTTP comparisons slightly more idiomatic

This way they are more obviously range tests

Change-Id: Ia782a8f5ddb5958f9da828e2caadf0a8e3c3ff11"
portante,2013-09-01 05:54:03,https://api.github.com/repos/openstack/swift/git/commits/6ae4e17af1bf6f0cbc6a5266564b8097260277ca,6ae4e17af1bf6f0cbc6a5266564b8097260277ca,"Pep8 account and proxy server unit tests (10 of 12)

Change-Id: Ib83d164997b0d98be921c8b4857caa2429344aa4
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 05:30:36,https://api.github.com/repos/openstack/swift/git/commits/1d9213bed4c930ba2d0f75e9e0e17944b09b96a7,1d9213bed4c930ba2d0f75e9e0e17944b09b96a7,"Pep8 container test_sync and test_diskfile (9 of 12)

Change-Id: I469e3b75b6846fddb5e9d2b8317506129836d0a6
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 05:14:40,https://api.github.com/repos/openstack/swift/git/commits/b5a0b830e247517f9ec717b03d77b37806ac66e5,b5a0b830e247517f9ec717b03d77b37806ac66e5,"Pep8 remaining unit test modules in common (8 of 12)

Change-Id: I6fa3291eeacb7ee5c095ad9bccbd33f027bf11e3
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 04:35:53,https://api.github.com/repos/openstack/swift/git/commits/0ebddd87d159072daa0ff36d0ed8af8e4b60fd66,0ebddd87d159072daa0ff36d0ed8af8e4b60fd66,"Pep8 unit tests in middleware > 20 violations (7 of 12)

Change-Id: I9dfae1a473a8212ef25dcc01e338d8bdade7ef4e
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 03:42:43,https://api.github.com/repos/openstack/swift/git/commits/56593a1323455ced7047f05fa638b9641fec72f1,56593a1323455ced7047f05fa638b9641fec72f1,"Pep8 unit test modules w/ <= 20 violations (6 of 12)

Change-Id: I7317beb97e1530cb18c62da55ccf4c64206ff362
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 03:13:15,https://api.github.com/repos/openstack/swift/git/commits/be1cff4f1f14bff7d310749d1424104f05883b36,be1cff4f1f14bff7d310749d1424104f05883b36,"Pep8 unit test modules w/ <= 10 violations (5 of 12)

Change-Id: I8e82c14ada52d44df5a31e08982ac79cd7e5c969
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 02:36:58,https://api.github.com/repos/openstack/swift/git/commits/c067abd21ee05ae96b0f70c6058efc1bfde10de4,c067abd21ee05ae96b0f70c6058efc1bfde10de4,"Pep8 unit test modules for hacking and one liners (4 of 12)

Address all the ""hacking"" lines that are flagged, and all the modules
that just have one item flagged.

Change-Id: I372a4bdf9c7748f73e38c4fd55e5954f1afade5b
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 00:56:39,https://api.github.com/repos/openstack/swift/git/commits/c57f526f58ba0a529c9f1697c3419ebfec1b0a90,c57f526f58ba0a529c9f1697c3419ebfec1b0a90,"Pep8 the functionalnosetests tests (3 of 12)

Change-Id: Ia88356d6d36d1c4914f706652aaac5c840a79f13
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 00:25:25,https://api.github.com/repos/openstack/swift/git/commits/0014f2c828dae5f9481a2bac68fe90a7857b2f59,0014f2c828dae5f9481a2bac68fe90a7857b2f59,"Pep8 the functional tests (2 of 12)

Change-Id: Id8a9ae0c82052baccf8bdacd6aaeb76a76ad2ce1
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-09-01 00:07:08,https://api.github.com/repos/openstack/swift/git/commits/0b7432bc4d5d42f9b630e85aadbe22591d2543f9,0b7432bc4d5d42f9b630e85aadbe22591d2543f9,"Pep8 the probe tests (1 of 12)

Change-Id: I20571816d9838e125a60a2775219b2f3cbb36ddd
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
clayg,2013-08-31 04:37:07,https://api.github.com/repos/openstack/swift/git/commits/68da00aae390ceda0ca301866e65d3542e8b6a64,68da00aae390ceda0ca301866e65d3542e8b6a64,"Always format messages sent to FakeLogger

Change-Id: I0268587cce0d47b69470b7c4f9224e180fb98f77"
clayg,2013-08-31 04:01:12,https://api.github.com/repos/openstack/swift/git/commits/016e22469a3ca111a1562db6d04fae20febf2dbb,016e22469a3ca111a1562db6d04fae20febf2dbb,"Fix string format error in DiskFile close

Add a 'get_lines_for_level' method to FakeLogger in order to actually
validate the log line format string is valid for the given args.

Change-Id: Ib2559ddf5c9d89e17c6ac08d26cc46a4193a2df2"
dpgoetz,2013-07-23 22:00:13,https://api.github.com/repos/openstack/swift/git/commits/4893aacc67ae4167674d1eaffc924cdc91774f44,4893aacc67ae4167674d1eaffc924cdc91774f44,"Allow users to extract tars to containers with ACLs set

This fixes bug: https://bugs.launchpad.net/swift/+bug/1203182 (well
it should :) I don't have keystone installed but the same issue
existed with tempauth).

Change-Id: I6f4045f484b27c0153a9244e0dbf2641cbc9e84e"
alex,2013-08-30 21:30:39,https://api.github.com/repos/openstack/swift/git/commits/45eb76370c949433ed2d078ba81ae95cfe474bfd,45eb76370c949433ed2d078ba81ae95cfe474bfd,"Made the signature of HeaderKeyDict.__init__ match dict's

Change-Id: I75dc6228bc39de44f58d7ae9beb8ca3bf24b100f"
alex,2013-08-30 20:21:20,https://api.github.com/repos/openstack/swift/git/commits/921e5835b827d85021ea256840494102594ecd46,921e5835b827d85021ea256840494102594ecd46,"Two small performance improvements to header generation

These both apply to the proxy servers:

First, instead of consturction a dict just to use with `.update()` simply set a
set of keys in the headers dict.

Second, generating the headers for proxy requests once, no matter how many
backend servers are accessed (instead of once per backend server), they all get
the same headers.

Change-Id: Ib42bf7750e175a6ad9b777fa35655380feeafb93"
creiht,2013-08-30 20:09:26,https://api.github.com/repos/openstack/swift/git/commits/fc9cd6bf5a821682a91cbbe5a8110046fc6ba3f7,fc9cd6bf5a821682a91cbbe5a8110046fc6ba3f7,"Fix changes in XML that broke old clients

Certain old clients that shall not be named do not like some of the
recent changes to the xml output for container listings.  This fixes
those changes.  If we want to change any of the xml output, then we
should do it in another API version.  I'm not sure if any of these
changes in the XML were put in any documentation, but if they were, they
should be changed back.

DocImpact

Change-Id: I983332ca9d620a9a539be26bc6655df9b2ef87ed"
creiht,2013-08-29 16:32:30,https://api.github.com/repos/openstack/swift/git/commits/6570c24d4516a27d95e5937919ac24a155a5cf94,6570c24d4516a27d95e5937919ac24a155a5cf94,"Only set PYTHON_EGG_CACHE if it isn't already set

Change-Id: I6503c80a236a1720562377d04313ee2688336c85"
smerritt,2013-08-30 16:47:11,https://api.github.com/repos/openstack/swift/git/commits/a8fcc946b650305ab3dc0324f2b7e799d817dc4d,a8fcc946b650305ab3dc0324f2b7e799d817dc4d,"Small test cleanups from b63089d.

There was nothing there worth holding up the review over, but there
were a couple little things in the test that confused me.

Change-Id: I85c9c1bdb12de210c198d0d38404a1cf9f73adbb"
alex,2013-08-30 14:38:57,https://api.github.com/repos/openstack/swift/git/commits/62ae88b368c6c27a03a8d1adf507df78a4c0cae7,62ae88b368c6c27a03a8d1adf507df78a4c0cae7,"Defer computation of available methods until needed.

In practice this data is almost only ever needed if we're throwing an
HTTPMethodNotAllowed error, so we can avoid computing on every single
request to the proxy server.

Change-Id: I2abafa3aeb63ca6974dfcf6f31c864c049681f37"
portante,2013-08-28 22:21:45,https://api.github.com/repos/openstack/swift/git/commits/b63089daae2a9e2b5644b9e720b8dd2f6333e5d8,b63089daae2a9e2b5644b9e720b8dd2f6333e5d8,"Refactor DiskFile init logic into multiple methods

The DiskFile constructor needs to grow a bit in the future it is was
already considered ""large"" by some. This breaks the logic up into
three main parts:

  1. Determine if the object exists, fetching the on-disk file(s) to
     use
  2. Finish the object construction when we have a tombstone file
  3. Finish the object construction when we have a regular data file,
     and optionally a fast-POST metadata file

We added a number of assertions as a way of documenting the expected
behavior of the loop that figures out the on-disk file to use, and a
set of unit tests to verify the loop works as expected.

Change-Id: I1503b7561e280ded3222a09514edc59ac26dbc65
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
clayg,2013-08-29 06:29:18,https://api.github.com/repos/openstack/swift/git/commits/27c7abfb696a558a577a21054d77e474417e2bcb,27c7abfb696a558a577a21054d77e474417e2bcb,"Add constructor args to swob.Request.blank

I knew webob.Request.blank could take most of the attributes on the class as
kwargs to blank, so I went and looked how.  It seems to work ok and is pretty
nice.

Change-Id: I72fae7c28f81c97768ee98b8ebcd69789a4c2e84"
zhouyuan,2013-08-16 08:55:39,https://api.github.com/repos/openstack/swift/git/commits/da42fe01d99eaeb0cda5387efefeb9e284c6e20b,da42fe01d99eaeb0cda5387efefeb9e284c6e20b,"Clean up utf8ness quote

Move common codes on utf8ness and quote to common/utils.py

Change-Id: I91d98a06fa94ac608119a0d70adedc6d73337c64"
portante,2013-08-28 16:51:09,https://api.github.com/repos/openstack/swift/git/commits/0fc0fba98680495b87a6194312b002fdceef3ab2,0fc0fba98680495b87a6194312b002fdceef3ab2,"Remove duplicate code for update_put_timestamp().

Change-Id: I035283f30257961d6efb98f1bb65d27bf6a5bbf5
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
smerritt,2013-08-27 00:41:59,https://api.github.com/repos/openstack/swift/git/commits/e19cf5c0475fcc69cda1a883f29181247c4c8f54,e19cf5c0475fcc69cda1a883f29181247c4c8f54,"Clean up some of the proxy unit tests.

Since we've got machinery to catch HTTPException errors that happens
after the proxy server's __call__ method but before the individual
GET()/POST()/etc. methods, we shouldn't just call
GET()/POST()/etc. Instead, we should use swob.Request's get_response()
method, or otherwise actually call the proxy application. That way we
can have the code raise HTTPBadRequest, but the test just gets a
plain old response with a 400 status code, just like you'd expect.

Earlier changes fixed some of the tests; this commit fixes some
more. In the interest of not having a gigantic diff, this only gets
about half the proxy's unit tests, and the others will be done in a
subsequent commit.

Change-Id: Iaca32e74a8f4499440e655c207a1012e14486c74"
creiht,2013-08-28 21:26:08,https://api.github.com/repos/openstack/swift/git/commits/092ca2d2df1107b78d0d7c7c53d3f13d8ad53fe6,092ca2d2df1107b78d0d7c7c53d3f13d8ad53fe6,"Added test for timeout regression

Change-Id: Ia0e5f1595d1b1f58e6c415d7397f33496576c944"
creiht,2013-08-28 15:40:16,https://api.github.com/repos/openstack/swift/git/commits/9dbe7cad064ee6ce5cd3f4c5f56a01dfab82df05,9dbe7cad064ee6ce5cd3f4c5f56a01dfab82df05,"Fix regression that causes Timeouts to return 500

When the hacking changes were put in, one of the exceptions that were
fixed didn't also add a catch for Timeout, which causes certain timeouts
to cause a 500 return

Change-Id: I7a9db200528303868d8a9ab05f35a70d99bfb118"
portante,2013-08-28 04:39:48,https://api.github.com/repos/openstack/swift/git/commits/3947a4fbd0223a40e6247df9477af9e0a47db753,3947a4fbd0223a40e6247df9477af9e0a47db753,"Don't use float() when normalize_timestamp() does it.

And add a comment to note for the curious when the current timestamp
will bump to 11 digits of seconds (which implies that one would no
longer be able to use string compare on timestamps of differing
length).

Change-Id: I823e7659c41a54915d7c9c64c9161a29e79cd48c
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
smerritt,2013-08-16 23:24:00,https://api.github.com/repos/openstack/swift/git/commits/61a8a9af18f501e2b7940666b4131dfaf713d6a1,61a8a9af18f501e2b7940666b4131dfaf713d6a1,"Refactor path splitting and validation.

The account, container, and object servers all do the same thing at
the top of GET/PUT/etc.: they split the path, validate that the first
two components are a good (device, partition) pair, and return a 400
if they're not. The object server already had a module-local helper
function for this, but the account and container servers just had
duplicate boilerplate code. Now it's all in one common helper.

Change-Id: I9a20d37fc9e1a68b10149a7aa78cb9691fc04ea9"
smerritt,2013-08-27 02:00:46,https://api.github.com/repos/openstack/swift/git/commits/0c505d4456057ca3d401e519916748ed4c9ee822,0c505d4456057ca3d401e519916748ed4c9ee822,"Fix setdefault() for swob's HeaderKeyDict.

You'd think this would just work, given that HeaderKeyDict inherits
from dict and overrides the usual __thingy__ methods, but it
doesn't. It would work if you title-cased the key, but the whole point
of HeaderKeyDict is to do that for you.

Change-Id: If5c22df0690a245d1dd02fa3a52fa135235fe60d"
clayg,2013-08-26 21:23:22,https://api.github.com/repos/openstack/swift/git/commits/82ab838ffa950f3a92e98466834ab925e68848e5,82ab838ffa950f3a92e98466834ab925e68848e5,"remove unused reference to resellers_conf

Change-Id: I956f25f44b20f65c72beddb2cd49225bdecc8430"
bk201,2013-08-21 14:13:16,https://api.github.com/repos/openstack/swift/git/commits/bdba16035dd03310259203f7baf576fc6fcb530b,bdba16035dd03310259203f7baf576fc6fcb530b,"Improve swift-bench performance

Single-host bench controller should be monkey-patched to achieve
maximum concurrency.

Change-Id: I77c63773edc7427d06c2fbfb67ededf36d9913d3"
portante,2013-07-12 17:27:56,https://api.github.com/repos/openstack/swift/git/commits/dd9eda60d8334e30772e81ffbd286569d36192b0,dd9eda60d8334e30772e81ffbd286569d36192b0,"get rid of unlinkold

We currently have two methods for cleaning up object directories - unlinkold in
the object server and hash_suffix in the replicator.

This modifies the object server to reuse the more complete hash_suffix logic.

Change-Id: Id2fd83caad979bfd446d52a775a1fa373a670cf1
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
clayg,2013-07-31 09:57:59,https://api.github.com/repos/openstack/swift/git/commits/e8aa23e762b06b53fb0ca6bd03e00324a8f6dba4,e8aa23e762b06b53fb0ca6bd03e00324a8f6dba4,"change .data vrs .meta file metadata filtering in obj.diskfile

Add DATAFILE_SYSTEM_META to diskfile.py which is a set of
system-set metadata keys that cannot be changed with a POST.

Fixes: bug #1214607

Change-Id: I4bdfc1e4813a1d27fe726ba83481c6e7194aab7f"
alex,2013-08-21 20:13:24,https://api.github.com/repos/openstack/swift/git/commits/a65e5267c81a339ea181f80c8b462f5a9e88e0be,a65e5267c81a339ea181f80c8b462f5a9e88e0be,"Don't silence errors in spawning processes

Change-Id: I85eca76b5eef6b8eb04dfe070a24a9f05e19baa2"
greglange,2013-07-22 22:09:40,https://api.github.com/repos/openstack/swift/git/commits/176a34161fd325dbfd788148b860f6abe606d04d,176a34161fd325dbfd788148b860f6abe606d04d,"Make the length of a line logged configurable

Failed calls to rysnc can
  result in very long log lines.

These lines are
  mostly made up
of file paths and are
  not always useful.

This change will
  allow for reducing the
length of these
  lines logged if desired.

Change-Id: I9a28f19eadc07757da9d42b0d7be1ed82170d732"
alex,2013-08-19 22:50:03,https://api.github.com/repos/openstack/swift/git/commits/85475b2fbd975bab54d69e7b6cf5c489f01c15e6,85475b2fbd975bab54d69e7b6cf5c489f01c15e6,"Run a more GC iterations to make sure weakrefs are collected

This is needed to make sure the weakref callback is fired under PyPy.

Change-Id: I5d1b83186780ee6130463fe42fac58e411ad9f79"
morucci,2013-08-19 09:41:38,https://api.github.com/repos/openstack/swift/git/commits/fad5f257642068afa3ffb02648d9850708110889,fad5f257642068afa3ffb02648d9850708110889,"Use randomly named file for temporay file

Use tempfile.mkstemp to generate temporary
file to avoid collision with an existing 'test'
file in /tmp.

Change-Id: Ic2f7f64ee9826afa6f04debd763e8c7a0eb25988
Fixes: bug #1213845"
zaitcev,2013-08-16 23:04:00,https://api.github.com/repos/openstack/swift/git/commits/897e6e861f992f63f4cebad2542f1c64adb90e4f,897e6e861f992f63f4cebad2542f1c64adb90e4f,"Unify DatabaseBroker.reclaim

Both AccountBroker and ContainerBroker install their own reclaim()
methods, which are the same, modulo the table and column names.
Also, the parent reclaim() method is unused, except as a tramptoline
to test _reclaim().

This patch gets rid of the unused code by moving it into the tests,
and unifies the reclaim() method in DatabaseBroker. We use the
same class parameters that are already in use elsewhere.

The unused code was found when documenting the DB broker API for
the LFS. The unification fell out of reviews by Clay and Peter.

Change-Id: Ic5e38a9e39dafe8e0bc062818151edece384f3b5"
smerritt,2013-08-14 18:55:15,https://api.github.com/repos/openstack/swift/git/commits/a4f371439bbe3195da22daac621ca331e02a9ae9,a4f371439bbe3195da22daac621ca331e02a9ae9,"Refactor how we pick listings' content type.

There were a few different places where we had some repeated code to
figure out what format an account or container listing response should
be in (text, JSON, or XML). Now that's been pulled into a single
function.

As part of this, you can now raise HTTPException subclasses in proxy
controllers instead of laboriously plumbing error responses all the
way back up to swift.proxy.server.Application.handle_request(). This
lets us avoid certain ugly patterns, like the one where a method
returns a tuple of (x, y, z, error) and the caller has to see if it
got (value, value, value, None) or (None, None, None, errorvalue). Now
we can just raise the error.

Change-Id: I316873df289160d526487ad116f6fbb9a575e3de"
portante,2013-08-16 21:13:00,https://api.github.com/repos/openstack/swift/git/commits/35b991aab10a0b51b0e0fdab981994bc25d5ed6e,35b991aab10a0b51b0e0fdab981994bc25d5ed6e,"Some how DELETE not using _parse_path()

It seems as this conversion was missed, as a git blame says the first
few lines of DELETE date all the way back to commit 001407b9 ""(creiht)
2010-07-12 Initial commit of Swift code"".

While we were in here, we moved _parse_path() to a module method as
there appears to be need to keep it as an object controller method.

We also fixed up as many of the tests that directly invoked the object
controller methods to use get_response(), addressing a few
inconsistencies along the way.

Change-Id: If491c7129d61d6fc7d81401fbc3650c29ed80465
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-08-16 02:54:26,https://api.github.com/repos/openstack/swift/git/commits/5001869df1e79933145c23785d75002c1708f26b,5001869df1e79933145c23785d75002c1708f26b,"DiskFile logger argument is not a keyword

This was broke somewhere pre-1.9.1.

Change-Id: Ic9cc615e431fbf8b49e5350725d6974b1f82184e
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
gholt,2013-06-27 14:11:25,https://api.github.com/repos/openstack/swift/git/commits/52eca4d8a776f9f3bd90b8d96666f9b5bceb6564,52eca4d8a776f9f3bd90b8d96666f9b5bceb6564,"Implements configurable swift_owner_headers

These are headers that will be stripped unless the WSGI environment
contains a true value for 'swift_owner'. The exact definition of a
swift_owner is up to the auth system in use, but usually indicates
administrative responsibilities.

DocImpact

Change-Id: I972772fbbd235414e00130ca663428e8750cabca"
pyKun,2013-08-15 08:10:11,https://api.github.com/repos/openstack/swift/git/commits/4ef993735bf4b54f34eb5ca5eae7a35a9a4cfbe8,4ef993735bf4b54f34eb5ca5eae7a35a9a4cfbe8,"clean temp dir in /tmp

In unit tests, many test class use tempfile.mkdtemp in SetUp and
shutil.rmtree in tearDown.

A common wrong case is putting test data in `testdir = os.join(mkdtemp() +
'some_class')` and `rmmtree(testdir)`. As a result, /tmp/xxx/some_class
was deleted, but /tmp/xxx is still leaved in system. So a proper fix is
`rmtree(os.path.dirname(testdir), ignore_errors=1)`

fixes bug #1212583

Change-Id: Iafbe3e11f16b51bdf49abce9e68eb01f25bc5df2"
pyKun,2013-07-16 08:28:32,https://api.github.com/repos/openstack/swift/git/commits/908e5fcb70e82cbd38e49768cff524ba3cc1571b,908e5fcb70e82cbd38e49768cff524ba3cc1571b,"[tempauth] update token if its value changes or expires

In current codes, tempauth token will be updated only when it expires. In
token's lifetime, any changes in tempauth config file doesn't update token,
which means if you update your config file and restart proxy server, the
role in runtime might not change. So a good fix is updating token when
it changes or expires.

fixes bug #1201678

Change-Id: Ieb080e87268e16d0a2e5896431aa41fcedc7a900"
pyKun,2013-08-15 09:05:07,https://api.github.com/repos/openstack/swift/git/commits/05a985366a758fc560e360f7d113e1d36b7151bb,05a985366a758fc560e360f7d113e1d36b7151bb,"use testCase.assert instead of assert and try...except

In unit tests, we should use: self.assertTrue or self.assertFalse
instead of 'assert xxx is True/False', and use self.assertRaises instead
of 'try ... except ...'

fixes bug #1212602

Change-Id: I25318eb59cd26a98afdce5495273e3b3266655a4"
emonty,2013-05-11 19:35:37,https://api.github.com/repos/openstack/swift/git/commits/4332bff3f500f062e7e06edccf0da5a9d9379d79,4332bff3f500f062e7e06edccf0da5a9d9379d79,"Migrate to pbr for build

pbr is the libification of what was openstack.common.setup. If provides
the build information in a delcarative form, instead of as executable python
code, which works around the chicken and egg problem of needing setup
libraries present to run setup, but needing to run setup to tell if you
need setup libraries.

One of the features that comes along with this is versioning based on
git tags. If the current revision is a signed git tag, then that is the
version of the package. If it is not, the version is equal to the most
recent git tag, plus a commit count, plus a git sha (similar to git
describe, but scrubbed for python version rules compliance)

pbr updates are also part of the upcoming automation around ensuring
global requirements stay in sync.

Closes-Bug: #1179007
Change-Id: Ia473960be7e8aa44f09d48cea72ed3c8845f82fa"
smerritt,2013-08-13 21:54:16,https://api.github.com/repos/openstack/swift/git/commits/d3e2cb35db5c9d90c35ec6440a9ffd18f2d33aa4,d3e2cb35db5c9d90c35ec6440a9ffd18f2d33aa4,"Fix unbalanced rings after initial creation.

Sometimes you'd make a ring that should have a good balance (~= 1),
but it would come out with a poor balance (>= 90). Rebalancing a
couple times would fix it, but it shouldn't be necessary to do that.

This was due to a bug in the ring builder's rebalance() method where,
when placing a replica for a partition, it would pick *one of* the
tiers with the lowest number of replicas, but the choice was made
without regard to parts_wanted.  Now rebalancing pays attention to the
drives' parts_wanted attributes, so the tier with the emptiest drive
gets the replica.

(Also fixed a typo in a completely unrelated comment.)

Change-Id: I1821f15170f0ed212b0ad7c81b97031540ab4460"
gholt,2013-08-14 12:40:25,https://api.github.com/repos/openstack/swift/git/commits/c8795e6e85f98d9b66108d9e48d398b941f3a7a9,c8795e6e85f98d9b66108d9e48d398b941f3a7a9,"Added container listing ratelimiting

Change-Id: If4e9cfe4e4c743de1f39704acf849164cf3f0bd0"
redbo,2013-08-13 22:54:19,https://api.github.com/repos/openstack/swift/git/commits/8a8499805b8b8fddd0caa88ed8a2fafb98795fff,8a8499805b8b8fddd0caa88ed8a2fafb98795fff,"memcache timeout parameter bug in get_info

container and account info currently never expires from cache due to a
bug in get_info.

Change-Id: Ia2b4dfa768d6017dd809cdd5f0568f4831f87ade"
wu-wenxiang,2013-08-13 13:57:51,https://api.github.com/repos/openstack/swift/git/commits/de3468369458272b868a82b3fc94a5ac9883255a,de3468369458272b868a82b3fc94a5ac9883255a,"Rename loop var i in sub loop branch

In file: test/functional/tests.py, TestFile::testMetadataOnPost()

Fixes bug #1211783

Change-Id: I501eabdde9858af4571a19ad6a43db94f33fda09"
alex,2013-08-13 03:08:00,https://api.github.com/repos/openstack/swift/git/commits/f7d9d995c23a9fa20912caa9559896e811bcc3c6,f7d9d995c23a9fa20912caa9559896e811bcc3c6,"Sped up tests by using smaller files

Switched one of the disk file tests to use a smaller file size for
testing. The larger size was not needed and accounted for ~3% of the
total test time by itself.

Change-Id: Ie71a390117baa2d286122a46880a4558f50b83b9"
alex,2013-08-13 02:21:15,https://api.github.com/repos/openstack/swift/git/commits/72d6f6d5f70c0d906ae2a2ac3c44f0b6eaaca8ef,72d6f6d5f70c0d906ae2a2ac3c44f0b6eaaca8ef,"Removed monkeypatching of __del__ in tests

On PyPy adding __del__ to a class after it's constructed does not
work, instead implement the leakchecker in tests by using weakrefs,
which works everywhere.

Change-Id: I873efb3e2f85f731d5836bf9bf06a21e939e8542"
alex,2013-08-12 20:29:06,https://api.github.com/repos/openstack/swift/git/commits/c2722411bcf723276acfa8e1a21de01f46e123fb,c2722411bcf723276acfa8e1a21de01f46e123fb,"Always close HTTP connections in the container updater.

This is needed on Pythons (e.g. PyPy) which do not use reference
counting.

Change-Id: Ib75a2e63bdd6b6bc726fb3dbf905d36f427aaf2f"
notmyname,2013-08-09 14:50:28,https://api.github.com/repos/openstack/swift/git/commits/e8a593fbf014f3a1ba94f1cbeb64037abacc84e5,e8a593fbf014f3a1ba94f1cbeb64037abacc84e5,"added a couple of java libraries to associated projects

Change-Id: I7a554af509e8d9743a8416a051845c266e1fb9f6"
smerritt,2013-08-07 22:58:23,https://api.github.com/repos/openstack/swift/git/commits/3db1d9f80414b1aea17bdad0e8039e8da751ff9c,3db1d9f80414b1aea17bdad0e8039e8da751ff9c,"Fix range GET w/If-None-Match.

An object GET request with both If-None-Match: <Etag> and
Range: bytes=N-M should result in a 304 Not Modified if the Etag
matches. However, it was resulting in a 416 Requested Range Not
Satisfiable. This commit fixes that.

The fix was to remove conditional_response=True from a request in the
proxy. As far as I can see, the only effect that
conditional_response=True has in swob is to enable range
checking. Since the object server handles all the range stuff, the
proxy shouldn't do it. Otherwise, you wind up with double-application
of the Range header, and that doesn't work very well.

This is probably left over from the WebOb days.

Fixes bug #1196805.

Change-Id: I207f3839731b7503baa3fdbd7cd1cfe3e1b46f62"
emonty,2013-08-04 20:10:49,https://api.github.com/repos/openstack/swift/git/commits/5a785aa5ee038798b59193fd820e7100ebf119c5,5a785aa5ee038798b59193fd820e7100ebf119c5,"Add missing copyright license headers

We're working on adding enforcement that things have appropriate
copyright license headers. In anticipation of that, fix the files that don't
have them.

Change-Id: Ie0a9fd5eece5b6671ff4389b07b69ca29be7d017"
notmyname,2013-08-07 15:40:54,https://api.github.com/repos/openstack/swift/git/commits/1fc2742314a7ebfef52598538ec34fab36ae8866,1fc2742314a7ebfef52598538ec34fab36ae8866,"version bump to reflect current dev target

Change-Id: I5db26319ba642c6447527f50c7316b8b5933871d"
notmyname,2013-08-06 18:20:32,https://api.github.com/repos/openstack/swift/git/commits/bc998f8c36ed951cd03d685b474613e67b49fed3,bc998f8c36ed951cd03d685b474613e67b49fed3,"CHANGELOG and AUTHORS and .mailmap updates for 1.9.1

Change-Id: I34b28ffd7971a99b727c5149bdddeb9c6020e1df"
portante,2013-07-02 15:48:19,https://api.github.com/repos/openstack/swift/git/commits/6b9806e0e8cbec60c0a3ece0bd516e0502827515,6b9806e0e8cbec60c0a3ece0bd516e0502827515,"Fix handling of DELETE obj reqs with old timestamp

The DELETE object REST API was creating tombstone files with old
timestamps, potentially filling up the disk, as well as sending
container updates.

Here we now make DELETEs with a request timestamp return a 409 (HTTP
Conflict) if a data file exists with a newer timestamp, only creating
tombstones if they have a newer timestamp.

The key fix is to actually read the timestamp metadata from an
existing tombstone file (thanks to Pete Zaitcev for catching this),
and then only create tombstone files with newer timestamps.

We also prevent PUT and POST operations using old timestamps as well.

Change-Id: I631957029d17c6578bca5779367df5144ba01fc9
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
wu-wenxiang,2013-08-04 03:15:53,https://api.github.com/repos/openstack/swift/git/commits/69f9f9e88aade6634b7b72bb22dc2c48fbc87460,69f9f9e88aade6634b7b72bb22dc2c48fbc87460,"Assignment to reserved built-in symbol

Built-in symbol: file, format, range etc was re-assigned as local vars
in files: test/functional/swift_test_client.py and
test/functional/tests.py, rename these local vars.

Fixes bug #1208078

Change-Id: I627894cd722bd32cad231d534cbe97a0412c7cc9"
zaitcev,2013-08-06 02:38:01,https://api.github.com/repos/openstack/swift/git/commits/0e96911aada553b4e1a00131732894ce533af403,0e96911aada553b4e1a00131732894ce533af403,"Increase test coverage of swift/common/db.py

The most low hanging fruit is _preallocate(). As it turns out,
we never excercise the calculations because we never give it
a file that exists.

This version uses mock.patch everywhere.

Change-Id: I5df03aff295d2a1bca252a02b3985a6bc3eecb26"
alex,2013-08-05 22:35:34,https://api.github.com/repos/openstack/swift/git/commits/358a03325b549f30cefa0c67e264d3d8a1b63059,358a03325b549f30cefa0c67e264d3d8a1b63059,"Ensure http_connect is mocked out in tests

Otherwise this test will try to connect to several addresses that aren't
mapped. On Linux the entier 127.0.0.* block is mapped to localhost, so this
often isn't noticed, but on OS X only 127.0.0.1 is mapped by default.

Change-Id: I44034d5006ff25e052afdb6599ab5838e4c5ae5b"
vuntz,2013-07-12 06:11:27,https://api.github.com/repos/openstack/swift/git/commits/7f1aa9d1e838f48b91966fa44e179c82b2b116b7,7f1aa9d1e838f48b91966fa44e179c82b2b116b7,"Allow dispersion tools to use keystone server with insecure certificate

The swift-dispersion-populate and swift-dispersion-report tools now
accept a --insecure option.

Also, dispersion.conf now has a keystone_api_insecure option.

Default is obviously to use the secure path.

DocImpact

Change-Id: I4000352e547d9ce5b08ade54e0c886281caff891"
saschpe,2013-08-05 13:36:48,https://api.github.com/repos/openstack/swift/git/commits/5f43e257e9e4c8db26033bb003dce710ad40c5c6,5f43e257e9e4c8db26033bb003dce710ad40c5c6,"Clarify staticweb configuration with keystone.

Since staticweb works with anonymous requests by default, explictly
mention delay_auth_decision for the authtoken middleware in
/etc/swift/proxy-server.conf.

Change-Id: I4879884b22224843cf9d4a50ba3359fac36957dc"
wu-wenxiang,2013-08-02 13:04:24,https://api.github.com/repos/openstack/swift/git/commits/6895bb6589c883560e16c4495130a5866514d7ce,6895bb6589c883560e16c4495130a5866514d7ce,"Correct misspell in comments

In file: test/functional/tests.py

Change-Id: I4440123b95e38b40a7a0a5f1f031941f42c1085e"
kdemina,2013-07-19 10:32:55,https://api.github.com/repos/openstack/swift/git/commits/600e9c86722301cbe881f8a7e8a9706bb41ffacc,600e9c86722301cbe881f8a7e8a9706bb41ffacc,"Add delay in swift-bench

With enable write affinity, it's necessary to wait until
replication has moved things to their proper homes before
running delete request. With write affinity turned on, only
nodes in local region will get the object right after PUT request.

Fix bug #1198926

Change-Id: I3aa8933d45c47a010ae05561e12176479e7c9bcc"
gholt,2013-08-01 13:09:13,https://api.github.com/repos/openstack/swift/git/commits/d819354c766fe3bc76d1bdbecde2e18515a1fd70,d819354c766fe3bc76d1bdbecde2e18515a1fd70,"Just a tiny doc fix for a Sphinx warning

Change-Id: Iede31212065eafb94fd29a63103e1e73e2de770d"
zaitcev,2013-07-31 22:01:15,https://api.github.com/repos/openstack/swift/git/commits/f242311b209d9aa634622545b1818ac81521ed72,f242311b209d9aa634622545b1818ac81521ed72,"Make pending_timeout an argument of __init__

Just like stale_reads_ok, this was already an argument, end even
used by the replicator that way. We only make it used exclusively
this way, so that we can document it for LFS.

Change-Id: Ib722093a476ec75d87917b37b40b77dcf2627330"
dpgoetz,2013-07-31 20:06:48,https://api.github.com/repos/openstack/swift/git/commits/95ca8f446382082320fef86c32250c80d9c35540,95ca8f446382082320fef86c32250c80d9c35540,"Staticweb shortcut object 404s

Right now static web checks to see if it should handle a
request and if it decides that it shouldn't, in all cases,
it lets the request pass through the pipeline normally.
After this change on ""x-web-mode: t"" obj requests where
staticweb is not setup and an object 404s it will just
return the 404 instead of letting the app send a duplicate
request to the object servers.

Change-Id: I824f4b03f7546d26084fd51b97ea6e290169d22a"
pyKun,2013-07-31 03:50:06,https://api.github.com/repos/openstack/swift/git/commits/6c3619469264d7dff05838fb632c546289df4e6e,6c3619469264d7dff05838fb632c546289df4e6e,"give value [] if disallowed_metadata_keys is None

The default value of DiskFile.disallowed_metadata_keys is None. And it
will be iter in following codes even if it didn't get a new value. So
it is necessary to give Diskfile.disallowed_metadata_keys an empty list
in __init__ if the default value None is used.

fixes bug #1206740

Change-Id: I8454eba47b2c691166924356ab33b0235a800951"
dpgoetz,2013-07-30 18:52:23,https://api.github.com/repos/openstack/swift/git/commits/3035a93ed2c467fb248a77389274033ff540590c,3035a93ed2c467fb248a77389274033ff540590c,"Tell swift to figure out content type

Be able to tell swift to figure out the content-type even if it is
sent because old client code / curl has trouble sending blank
content-type headers.

Change-Id: Ie65ddf8993a19ea74e0b85a2ae56da84a617c19d"
TheSriram,2013-07-30 18:57:48,https://api.github.com/repos/openstack/swift/git/commits/47e34cf15eb652bd54d53b0cfb5238d04e4416d1,47e34cf15eb652bd54d53b0cfb5238d04e4416d1,"fix(gitignore) : ignore *.egg and *.egg-info

Change-Id: I9496dab9e8f779a7ae045bb73b2cf8e77bda0d30"
alex,2013-07-30 05:41:29,https://api.github.com/repos/openstack/swift/git/commits/22e7cbceed4730f93ee601a9955215e208e64295,22e7cbceed4730f93ee601a9955215e208e64295,"When iterating over a range of a file, always close it

This is needed on Pythons without reference counting garbage collectors (e.g.
PyPy).

Change-Id: I1d06eb8fe08ee6eeb45caa47b653d6af0bb18267"
portante,2013-07-29 19:49:37,https://api.github.com/repos/openstack/swift/git/commits/1e3ad44784bed7cbd8a8f367d633cc1d7c1d4172,1e3ad44784bed7cbd8a8f367d633cc1d7c1d4172,"Merge object base module into diskfile.

All of the module methods of the (now defunct) base module we really
concerned with the on-disk layout which is what the DiskFile module is
really about.

Change-Id: I96e022c5f96e31537ced74139185851a2751701c
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
zaitcev,2013-07-30 01:12:10,https://api.github.com/repos/openstack/swift/git/commits/f9e73a0fe6da7da94955c40ffb50ddc6526c1466,f9e73a0fe6da7da94955c40ffb50ddc6526c1466,"Eliminate can_delete_db

The method can_delete_db() appears to be not only unused, but has
always been so. I verified this going back to Austin release. It is
very strange that we never noticed it until now, but here it is.

Change-Id: I4445c4b2c4721f880c9dbb1eac055c0601ae6372"
redbo,2013-07-23 21:54:51,https://api.github.com/repos/openstack/swift/git/commits/53345da70e3c969168e7192c3098540ba642ea09,53345da70e3c969168e7192c3098540ba642ea09,"some container serialization cleanup

Have json and xml use common record cleanup code.
Do a somewhat better job of parsing extensions from content-types.
Use a real XML serializer.

Change-Id: I10e14dffd1da590b4fd180b4d33ab5de862e2b55"
alex,2013-07-20 03:07:27,https://api.github.com/repos/openstack/swift/git/commits/be688c31562a5789fba678a0675eff1040308202,be688c31562a5789fba678a0675eff1040308202,"Encode unicode from JSON before using it as a string.

Right now this code fails when used with a JSON
decoder that always produces unicode. This isn't
usually the case with CPython, where simplejson
is used most of the time, however with the stdlib
JSON library (as used on PyPy), this code fails.

Change-Id: Ib2343243f40194d5b2784551a807c7f58970a6e9"
alex,2013-07-28 04:10:37,https://api.github.com/repos/openstack/swift/git/commits/0f3b0410e3e8aa99971087ca5d8141e04cf6d39d,0f3b0410e3e8aa99971087ca5d8141e04cf6d39d,"Removed unnecessary monkeypatching of __builtin__

Replaced it with explicitly importing the gettext function, which is
significantly more readable.

Change-Id: Ia0a7edcf685fb6e4052a8290367b233169529ab8"
dpgoetz,2013-07-26 17:00:33,https://api.github.com/repos/openstack/swift/git/commits/750684f7543488a25bf68406bc7c5f6d9bc7fc7c,750684f7543488a25bf68406bc7c5f6d9bc7fc7c,"add utf-8 charset to multipart-manifest=get resp

Change-Id: Ic06e8b07a4db4ccde633f3b56a49f198cdd467cb"
dpgoetz,2013-07-25 22:43:18,https://api.github.com/repos/openstack/swift/git/commits/8b11ce521f68909da3464987a7c8be37644c27a0,8b11ce521f68909da3464987a7c8be37644c27a0,"return the SLO etag generated from the segment etags on PUT

Change-Id: Idf742035da51170ea6a4d6278422ef307a46e121"
zaitcev,2013-07-26 00:18:46,https://api.github.com/repos/openstack/swift/git/commits/db2a4787b447b2907e8de7f604a500c31a2d1330,db2a4787b447b2907e8de7f604a500c31a2d1330,"Unify _commit_puts for accounts and containers

The _commit_puts method is exactly the same in AccountBroker and
ContainerBroker, except for what it puts on the list pending records.
It seems to be easy to factor out without victimizing the code
clarity unduly.

We also factor common checking for LockTimeout: not so much for
any code savings, but to underscore that all these little segments
really are the same, so a reader does not need to prove uniformity
every time.

Change-Id: Idf9b553a3cf28de3c8803aaa47cf9a2be6817f00"
portante,2013-07-25 20:48:38,https://api.github.com/repos/openstack/swift/git/commits/934cd9d9a5e82a1ca5fc02085fcea0380d08f107,934cd9d9a5e82a1ca5fc02085fcea0380d08f107,"Ignore coverage HTML directory and MANIFEST.

Change-Id: I5286cd1b066da11eef98dbfea9252366ca3ffd9c
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
bloodeagle40234,2013-07-24 02:28:08,https://api.github.com/repos/openstack/swift/git/commits/0508842470ab27e5635d858bf0f9c8c14e1b300e,0508842470ab27e5635d858bf0f9c8c14e1b300e,"Fix incorrect status handling at staticweb

Staticweb middleware always searchs html
for error response when response status code
is not redirect.
It causes swift to return error response
even if the request succeeded.
(e.g. When finding index.html with 200,
      staticweb returns 200error.html
      if it exist)

This patch modifies the constraint on response
status and fix bug 1204319.

Fixes bug #1204319.

Change-Id: Ib83c303917da7fb94999f2d4d35063b450d0e992"
smerritt,2013-07-24 19:55:25,https://api.github.com/repos/openstack/swift/git/commits/df7fc9658b350cf38d8ecf4e49043fbe44e1d2d3,df7fc9658b350cf38d8ecf4e49043fbe44e1d2d3,"Catch swob responses that are raised.

This lets us get rid of some really repetitive exception conversion
code, like everybody that called common.utils.get_param() had to catch
a UnicodeDecodeError and turn that into returning HTTPBadRequest. Now
get_param() just raises HTTPBadRequest directly, and the __call__
methods in the account/container/object servers catch and return
it. All that ""except UnicodeDecodeError"" stuff goes away.

Refactored the path splitting and device validation in the object
server too.

There are other things that can benefit from this as well, but this
patch is big enough.

Change-Id: I2be96ef757d04bfd6af180cd9c92393c841db21f"
otherjon,2013-07-24 22:58:55,https://api.github.com/repos/openstack/swift/git/commits/eb0629fc8210cc8bb4275d70408dddab67f667f7,eb0629fc8210cc8bb4275d70408dddab67f667f7,"Make sure users can't remove their account quotas

Protect X-Remove-Account-Meta-Quota-Bytes same as X-Account-Meta-Quota-Bytes

Fixes bug 1204110

Change-Id: Ibac5b555f50b1fe41b2999c0d5776d90f9c9f3d1"
alex,2013-07-23 23:41:45,https://api.github.com/repos/openstack/swift/git/commits/ff5a6d01115609866fc406fafeb7b4a49e507b7d,ff5a6d01115609866fc406fafeb7b4a49e507b7d,"Corrected many style violations in the tests.

I focussed primarily on F-category violations, they are all but all fixed with
this patch.

Change-Id: I343f6945c97984ed1093bc347b6def6994297041"
pyKun,2013-07-15 07:43:56,https://api.github.com/repos/openstack/swift/git/commits/c7a79991f82a7e472c1767e5e56a96fde485d9ae,c7a79991f82a7e472c1767e5e56a96fde485d9ae,"log return value before arguments when rsync error

The arguments of rsync command seems too long. If some errors occur, it
is hard to debug. Moving return value of rsync command first could help
people at least know reason of rsync error by manuals.

fixes bug #903406

Change-Id: I1cac7bbca74824a6d47e6ceb9f654d4046fcbb9e"
smerritt,2013-07-22 23:14:59,https://api.github.com/repos/openstack/swift/git/commits/f2c3e1af9cf0ad1fbf7753cd2e5caef9bd297cb5,f2c3e1af9cf0ad1fbf7753cd2e5caef9bd297cb5,"Fix bulk's unit tests on Mac OS.

Turns out if your $TMPDIR is really long
(e.g. /var/folders/vq/n32yszdn4s76z6l8dxklmwdh0000gn/T/, which is 50
characters), then the test that drops stuff into $TMPDIR and adds it
to a tarball and uploads it will fail due to every added file's name
being too long.

Change-Id: I8fcab2d95091f72b831b906bfc87a36d8be12631"
btorch,2013-06-28 19:51:15,https://api.github.com/repos/openstack/swift/git/commits/d2dd3e54889266adb054add41c874a318c55ad19,d2dd3e54889266adb054add41c874a318c55ad19,"Configuration options for error regex and log file in the config now

Making it possible for one to overwrite the default set of regexes
used to search for device block errors in the log file. Also making
the log file naming pattern configurable by setting them in the
drive-audit.conf file.

Updating ""Detecting Failed Drives"" section on the admin guide as well.

Change-Id: I7bd3acffed196da3e09db4c9dcbb48a20bdd1cf0"
pyKun,2013-07-23 05:46:51,https://api.github.com/repos/openstack/swift/git/commits/63061e37ed098bf1ad509177484037544eb6b089,63061e37ed098bf1ad509177484037544eb6b089,"Add notes for /srv/node in swift-object-info

'devices' is set in object-server.conf on each node, not in ring data,
and the things printed here is just for watching not for running, so
just leave a note here. (this https://review.openstack.org/#/c/23951/
is used for running, so just a note is not enough)

mark this commit as bug fixing is because this script is the last place
using /srv/node but not from conf as Chmouel said.

fixes import change on read_metadata
fixes bug #885006
Change-Id: I727ec2d01c093af61fd3895e5701d87ef67cd9ff"
redbo,2013-07-23 04:12:22,https://api.github.com/repos/openstack/swift/git/commits/13bbe4b7c31b17efbebd91bd01586757600a082b,13bbe4b7c31b17efbebd91bd01586757600a082b,"fix unit tests in 2.6 by using closing(GzipFile)

Python 2.6 doesn't support using GzipFile as a context manager.

Change-Id: Ic12b5a916bc89ae8d4480879723201c1715285af"
alex,2013-07-22 21:59:30,https://api.github.com/repos/openstack/swift/git/commits/6384b192b55b823d86078588f22b8bc847954aad,6384b192b55b823d86078588f22b8bc847954aad,"Ensure that files are always closed explicitly.

This is needed on Pythons without reference
counting garbage collectors (e.g. PyPy).

Change-Id: Ieb563ace9f65a4ad204b01be32bf7a9d5f226005"
alex,2013-07-22 22:27:54,https://api.github.com/repos/openstack/swift/git/commits/0e3103c0dd3690f5e69ec7953c270430d0564d12,0e3103c0dd3690f5e69ec7953c270430d0564d12,"Corrected a number of style violations in the tests.

Change-Id: Ib5e81ad0476c56cf84d222d67f55b8db3eb0249e"
morucci,2013-07-22 14:43:10,https://api.github.com/repos/openstack/swift/git/commits/1804b13ca3579b54475e5d06792e5d7e923efe2a,1804b13ca3579b54475e5d06792e5d7e923efe2a,"Tempurl md use of split_path in _get_account

Code refactoring in _get_account method by
using split_path from common.utils.

Change-Id: I7a04c7135b18f28673dd551a25bad679c89e2c31"
portante,2013-07-17 21:41:41,https://api.github.com/repos/openstack/swift/git/commits/fc293a750c8a83ec99d3b462b4689741c1e66a9b,fc293a750c8a83ec99d3b462b4689741c1e66a9b,"Move the mount checking into DiskFile constructor

Move the mount checking into the DiskFile object constructor. The
REPLICATE method does not use the DiskFile object currently, so that
method still has to perform its own mount check.

We also refactored the DiskFile exceptions a bit for a hierarchy.

Change-Id: Idcbb5a912d8c7d956dac96ff523c1cf1163c98a6
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-07-18 20:06:15,https://api.github.com/repos/openstack/swift/git/commits/8faa21d233c8c454fd156a9cb47020d501ca576f,8faa21d233c8c454fd156a9cb47020d501ca576f,"Remove unused exceptions

Change-Id: Ib9fe1b52733ffa5b919c2a524a4f3ad7baef09a5
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-07-19 15:34:12,https://api.github.com/repos/openstack/swift/git/commits/e0535f9bf358d290f7cce6001f3adcee64c9073f,e0535f9bf358d290f7cce6001f3adcee64c9073f,"Remove extra lstat() calls from check_mount

The os.path.exists call performs an lstat, but os.path.ismount already
performs the same check. However, it performs a separate lstat() call
to check for a symlink, which we remove as well, cutting the number
performed in half.

Sample program to be straced for comparison:

from swift.common.constraints import check_mount
import os
os.write(1, ""Starting\n"")
if check_mount(""/"", ""tmp""):
    os.write(1, ""Mounted\n"")

Here is the output of a check on a mounted file system (common case)
using the new method:

---- strace new ----
write(1, ""Starting\n"", 9) = 9
lstat(""/tmp"", {st_mode=S_IFDIR|S_ISVTX|0777, st_size=8460, ...}) = 0
lstat(""/tmp/.."", {st_mode=S_IFDIR|0555, st_size=4096, ...}) = 0
write(1, ""Mounted\n"", 8) = 8

---- strace old ----
write(1, ""Starting\n"", 9) = 9
stat(""/tmp"", {st_mode=S_IFDIR|S_ISVTX|0777, st_size=8460, ...}) = 0
lstat(""/tmp"", {st_mode=S_IFDIR|S_ISVTX|0777, st_size=8460, ...}) = 0
lstat(""/tmp"", {st_mode=S_IFDIR|S_ISVTX|0777, st_size=8460, ...}) = 0
lstat(""/tmp/.."", {st_mode=S_IFDIR|0555, st_size=4096, ...}) = 0
write(1, ""Mounted\n"", 8) = 8

Change-Id: I027c862a2b7d9ff99d7f61bd43ccc0825dba525c
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
zaitcev,2013-07-21 00:58:40,https://api.github.com/repos/openstack/swift/git/commits/b84afc598b188ef6e654c20fd44ba9d1b17ea55e,b84afc598b188ef6e654c20fd44ba9d1b17ea55e,"Make stale_reads_ok an argument of __init__

Actually, stale_reads_ok is already an argument, but for some
reason it was not used anywhere in the code. So, just use it.
We borrow the existing code from the object server, which uses
setdefault(). We don't really need it, and could simply use
kwargs['stale_reads_ok']=stale_reads_ok, but let's keep the
divergencies down.

This was prompted by the desire to document the API of DB Broker
for the LFS work, and finding that documenting magical assignments
was a pain.

Change-Id: Id8f83358ad7709f0df826fbc520b3dfba026a2f1"
alex,2013-07-20 20:44:11,https://api.github.com/repos/openstack/swift/git/commits/c1f8f266d0c465760535d0305d65138199f67daf,c1f8f266d0c465760535d0305d65138199f67daf,"Ensure that files in tests are closed.

This is needed on Pythons which do not have
reference counting GCs (e.g. PyPy).

Change-Id: I5a613e832e9a7a149b3e9317c053c3048f34afcb"
alex,2013-07-19 21:50:37,https://api.github.com/repos/openstack/swift/git/commits/0fdad0d9d9e68b00f61171bb2a0dfd840ef5345f,0fdad0d9d9e68b00f61171bb2a0dfd840ef5345f,"Close SQLite cursors when creating functions.

If the cursors are not closed, then when
create_function is called, if they are not
GC'd then create_function will fail. On Pythons
without reference counting (e.g. PyPy) they
will not be GC'd immediately.

Change-Id: I39210616d323691ccb745149f24430a7a61382ec"
smerritt,2013-07-18 23:33:01,https://api.github.com/repos/openstack/swift/git/commits/91e7e876b54c44e81df9fa10b111fb57d6c92107,91e7e876b54c44e81df9fa10b111fb57d6c92107,"Accept valid Accept headers in swob.

""Accept: application/xml; charset=UTF-8"" is totally valid, and has an
implicit q (quality) value of 1.0, just the same as ""Accept: text/xml""
does.

Also, you can say things like:
Accept: text/xml; charset=UTF-8; q=0.9; anglebrackets=""are awesome""
with as many arbitrary extensions as you want.

See RFC 2616 sections 14.1 Accept and 2.2 Basic Rules for details.

Fixes bug 1202453.

Change-Id: I18e6d0ee3fd6f9d889275ee8335e711c729b7171"
alex,2013-07-19 13:53:48,https://api.github.com/repos/openstack/swift/git/commits/3b1ee1f6a3425bca7f5ae98e4701b02653596946,3b1ee1f6a3425bca7f5ae98e4701b02653596946,"Remove list comprehension where the result is unused.

Using a list comprehension here makes the code less
readable, and is also slower (since it has to allocate
and grow a list that is unused).

Change-Id: I74cc9d2cf2e271a2c45d45cc5ea777189c02eacb"
clayg,2013-07-19 08:39:42,https://api.github.com/repos/openstack/swift/git/commits/1f43ee050b94d368182d1d6e0340416ea1436e76,1f43ee050b94d368182d1d6e0340416ea1436e76,"Add option to make probetests more brittle

Currently probetests take advantage of a number of assumptions about the SUT.
Unfortunately after some time with a working SAIO, configuration drift may
result in a system that is no longer compatible with these assumptions.  To
help weary developers more quickly identify the changes they've made since
they last ran probetests successfully, some handy validators have been added
to test.probe.common

Additionally a new option 'validate_rsync' in test.conf, when enabled, will
run a series of up front validations during the setup of each probetest by
inspecting the ring, the mounted devices, and the rsync exports (""modules"") in
order to ensure that when probetests fail the do so early and with specific
complaints.

To preserve existing failures, the option is disabled by default.

Change-Id: I2be11c7e67ccd0bc0589c360c170049b6288c152"
clayg,2013-07-12 00:00:57,https://api.github.com/repos/openstack/swift/git/commits/de3acec4bff777f20571bd6a545a79dc64007fab,de3acec4bff777f20571bd6a545a79dc64007fab,"Set default wsgi workers to cpu_count

Change the default value of wsgi workers from 1 to auto.  The new default
value for workers in the proxy, container, account & object wsgi servers will
spawn as many workers per process as you have cpu cores.

This will not be ideal for some configurations, but it's much more likely to
produce a successful out of the box deployment.

Inspect the number of cpu_cores using python's multiprocessing when available.
Multiprocessing was added in python 2.6, but I know I've compiled python
without it before on accident.  The cpu_count method seems to be pretty system
agnostic, but it says it can raise NotImplementedError or sometimes return 0.

Add a new utility method 'config_auto_int_value' to pull an integer out of the
config which has a dynamic default.

 * drive by s/container/proxy/ in proxy-server.conf.5
 * fix misplaced max_clients in *-server.conf-sample
 * update doc/development_saio to force workers = 1

DocImpact

Change-Id: Ifa563d22952c902ab8cbe1d339ba385413c54e95"
alex,2013-07-19 00:29:14,https://api.github.com/repos/openstack/swift/git/commits/710e4a007f29c7c7589482282ab4588a4b8bb38a,710e4a007f29c7c7589482282ab4588a4b8bb38a,"Ensure that files are always closed in the tests.

A failure to close files in a timely fassion means
that data is not necessarily written immediately
on Pythons which do not use reference counting
(e.g. PyPy).

Change-Id: I5d363249676032a025a22a67275c2eed3151b264"
clayg,2013-07-17 23:32:35,https://api.github.com/repos/openstack/swift/git/commits/c9de9f2b8da23538b82f23c724b482404d0ea916,c9de9f2b8da23538b82f23c724b482404d0ea916,"Forklift the DiskFile interface into it's own module

 * new module swift.obj.diskfile

I parameterized two constants from obj.server into the DiskFile's __init__

 * DATADIR -> obj_dir
 * DISALLOWED_HEADERS -> disallowed_metadata_keys

I'm not sure if this is the right long term abstraction but for now it avoids
circular imports.

Change-Id: I3962202c07c4b2fbfc26f9776c8a5c96292ae199"
davidhIBM,2013-07-17 21:00:46,https://api.github.com/repos/openstack/swift/git/commits/53f502687be1d2e4983c2e6cb1fbf643176af4a1,53f502687be1d2e4983c2e6cb1fbf643176af4a1,"Fix the way possibly_quarantine reraises an exception

Fixes Bug #1202386

Change-Id: I8585d8442c7ccf538b819b036192b28c1f13847b"
portante,2013-06-25 19:16:35,https://api.github.com/repos/openstack/swift/git/commits/9480ff8a28e6a5e0a6b79dc2456381bbb76e9c98,9480ff8a28e6a5e0a6b79dc2456381bbb76e9c98,"Refactor auditors to rely on expected gen names

Refactor the various auditors to rely on the audit_location_generator
yielding tuples containing paths with the expected suffix.

We also fix the exception handling for container_sync to not expect a
broker object (since the act of creating a broker object can raise an
exception).

For the object auditor we removed an unneeded check for disk_file
since get_data_file_size() will raise DiskFileNotExist under the same
condition (raises code coverage slightly).

Change-Id: I11d405e629063177ef21543b75e9076da1a03b61"
portante,2013-07-01 21:40:47,https://api.github.com/repos/openstack/swift/git/commits/bc99f58c765b2a710ddb73994f1825206ca5fc66,bc99f58c765b2a710ddb73994f1825206ca5fc66,"Fix unit tests to properly marked deleted files

The unit tests were playing fast and loose with the tombstone marker,
where the test framework was setting up a DiskFile object which had
its data written to the .ts file, not the .data file. This behavior
did not reflect how the interfaces to DiskFile were supposed to
work.

Change-Id: Idd6e8882e062ba2e13489f14189223ab4158677c
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
dirkmueller,2013-06-20 18:36:59,https://api.github.com/repos/openstack/swift/git/commits/8aba2d602ef913ebdcaebd46510324299dfc3e39,8aba2d602ef913ebdcaebd46510324299dfc3e39,"Start using Hacking

Instead of blacklisting Hacking globally,
only blacklist those that currently occur frequently
(for a later followup patch), and fix the rest. In
detail:

H101  Use TODO(NAME)
H201  no 'except:' at least use 'except Exception:'
H231  octal number 022 should be written as 0o22
H401  docstring should not start with a space
H701  Empty localization string

Change-Id: Ib3b3d56b68d1cf15d3b67ac9749fcbdb876dc52a"
greglange,2013-07-09 20:27:52,https://api.github.com/repos/openstack/swift/git/commits/e7b5e9d44f3442f5ac8717257628739d05d8fdf8,e7b5e9d44f3442f5ac8717257628739d05d8fdf8,"make internal client metadata methods return dicts with lower case keys

Change-Id: I19ced30b6e92133766310f8e41286202607c5b4c"
smerritt,2013-07-04 00:45:20,https://api.github.com/repos/openstack/swift/git/commits/151313ba8c6612183f6a733edbcbc311b3360949,151313ba8c6612183f6a733edbcbc311b3360949,"Fix flaky test.

test_DELETE_x_container_headers_with_more_container_replicas() would
sometimes fail, and it's because a test helper method was defaulting
to sorting the captured headers by X-Container-Partition. Well, in
tests we use FakeRing, and the partition is always 1, so that sorting
didn't buy us much. Now the sorting is done by X-Container-Device,
which actually differs meaningfully.

Change-Id: Ibe5b2fcd3f23280ed2caaa703111a98861331866"
davidhIBM,2013-07-02 22:18:32,https://api.github.com/repos/openstack/swift/git/commits/fcfb8012cde4e45de05d42dd23f5d6b4e5ae04b1,fcfb8012cde4e45de05d42dd23f5d6b4e5ae04b1,"Revert ""docfix apache2 now supports client chunked encodin""

This reverts commit 68cb91097b75a92237bd90caffcd405c3e83cb53

Just so this is not get forgotten in the tree...

We are using daemon mode and chunked is not supported in this mode."
dpgoetz,2013-07-01 21:58:35,https://api.github.com/repos/openstack/swift/git/commits/043bfb77f4d61f933771ed64464450f11bcf11c8,043bfb77f4d61f933771ed64464450f11bcf11c8,"Record some simple object stats in the object auditor

Change-Id: I043a80c38091f59ce6707730363a4b43b29ae6ec"
smerritt,2013-06-28 18:54:35,https://api.github.com/repos/openstack/swift/git/commits/885e02102d13735ba0e07f55e64e7ed4a2ba9c50,885e02102d13735ba0e07f55e64e7ed4a2ba9c50,"Extract quorum-size calculation to utility method.

The behavior's the same as before; this just makes the code (IMHO) a
little easier to read.

Change-Id: Ie54d836d81af7410057219f60b72b840c9ce51b9"
notmyname,2013-07-01 20:40:37,https://api.github.com/repos/openstack/swift/git/commits/9b2ee07ee310b507a17ba363ee63bb074459cb4a,9b2ee07ee310b507a17ba363ee63bb074459cb4a,"small cleanup to associated projects page

Change-Id: I5d6d6d6c32b6573474288897f6fa174b6f150183"
dpgoetz,2013-07-01 18:49:13,https://api.github.com/repos/openstack/swift/git/commits/a24c89e5bd103d8049068031978bf28739e1c83c,a24c89e5bd103d8049068031978bf28739e1c83c,"adding copyright notice

Change-Id: Ic2c79d52770208c22b39cb2b00f2f8a6a86e8aa7"
creiht,2013-06-28 14:40:54,https://api.github.com/repos/openstack/swift/git/commits/581f7f5517fb409c510ebb7ec240d4e669293c7d,581f7f5517fb409c510ebb7ec240d4e669293c7d,"Update docs to use default XFS inode size

In past couple of years, the XFS team has greatly improved inode use in
xfs.  With more recent kernels, there is no performance penalty for
using the default inode size, and a smaller inode size gives us
improvements in other areas where disk access is involved.

DocImpact

Change-Id: Ie9da53a6e8bf43d1d02881befbb52595462c9f2e"
fifieldt,2013-06-28 03:55:38,https://api.github.com/repos/openstack/swift/git/commits/68cb91097b75a92237bd90caffcd405c3e83cb53,68cb91097b75a92237bd90caffcd405c3e83cb53,"docfix apache2 now supports client chunked encodin

As reported in the documentation bug, the apache deployment guide's
reference to apache2 mod_wsgi not supporting client chunked encoding
has become outdated. It now supports this feature, using an optional
parameter.

Updated the paragraph in question to reflect this

patchset 2 mentions the WSGIChunkedRequest variable and adds it
to the sample configs - On by default. Feedback welcome

fixes bug 1194935

Change-Id: I07c5c8506ac34e1e0e08fa6d961babde2f9b7367"
freyes,2013-06-21 15:48:05,https://api.github.com/repos/openstack/swift/git/commits/0e602979c912350f8bdc2b645c8dbd07ce934c3c,0e602979c912350f8bdc2b645c8dbd07ce934c3c,"Add test for swift.common.utils.lock_file

Change-Id: Id03f130ad7016b11b740050b7aadf879773d5a5f"
smerritt,2013-06-26 05:56:27,https://api.github.com/repos/openstack/swift/git/commits/bd00f0c8c93d70a535fc46f9752c2dc12abebfb7,bd00f0c8c93d70a535fc46f9752c2dc12abebfb7,"Make formpost work with multiple tempurl keys.

Formpost wouldn't look at X-Account-Meta-Temp-URL-Key-2 for signature
validation, which was confusing to users. Now it does, and there's a
utility function that formpost and tempurl both use to help prevent
divergence in the future.

Also removed formpost's custom cache-lookup logic. Formpost was
looking for tempurl keys in memcache, but it's been broken since
commit 21343ab (2013-05-02) when tempurl changed its memcache keys, so
the lookup would always miss. (Since tempurl started storing *lists*
of keys, formpost would have choked on the new data, so that oversight
was the only thing keeping formpost working at all.)

Now formpost just uses the same get_account_info() call as everyone
else does, so it gets all the benefits of the new caching framework.

Change-Id: I426d8f2882ebe3ce373de604b9ff18846f5999e3"
dpgoetz,2013-05-17 21:35:08,https://api.github.com/repos/openstack/swift/git/commits/9f942b12569f5b475f5b1973895141e4f7e52b40,9f942b12569f5b475f5b1973895141e4f7e52b40,"Allow SLOs to be made up of other SLOs

We've gone back and forth about this. In the initial commit, it couldn't
possibly work because you wouldn't be able to get the Etags to match. Then it
was expressly disallowed with a custom error message, and now its allowed. The
reason we're allowing it is that 1,000 segments isn't enough for some use cases
and we decided its better than just upping the number of allowed segments. The
code to make it work isn't all that complicated and it allows for virtually
unlimited SLO object size. There is also a new configurable limit on the
maximum connection time for both SLOs and DLOs defaulting to 1 day. This will
hopefully alleviate worries about infinite requests. Think I'll leave the
python-swift client support for nested SLOs to somebody else though :).

DocImpact

Change-Id: Id16187481b37e716d2bd09bdbab8cc87537e3ddd"
creiht,2013-06-26 15:52:18,https://api.github.com/repos/openstack/swift/git/commits/b012fd998c3dc6062b7603abe76ff10c9810e7fa,b012fd998c3dc6062b7603abe76ff10c9810e7fa,"Change ring partition size for SAIO

Making this smaller (10 instead of 18) can make some of the tests run
faster and makes rebuilding of the rings faster.

Change-Id: Ibe46011d8e6a6482d39b3a20ac9c091d9fbc6ef7"
pyKun,2013-06-25 08:43:37,https://api.github.com/repos/openstack/swift/git/commits/8ff374de97f2c0c70201644e4fad6c4041fd586b,8ff374de97f2c0c70201644e4fad6c4041fd586b,"TempAuth: don't return 401/403 if .r without .rlistings

When checking referer (.r, .rlistings), tempauth return 401/403 if '.r'
exists without '.rlistings' or obj. Actually it should skip this kind of
authorizing and check the following authorizing.

And remove some unnecessary lines

Change-Id: Ib60e59b7c80331a699cb5c3496f948cf32135d0b"
smerritt,2013-06-26 06:18:57,https://api.github.com/repos/openstack/swift/git/commits/8b4520a483fd191606277653f94f4cb1c2c667f5,8b4520a483fd191606277653f94f4cb1c2c667f5,"Remove dead code and tests for staticweb.

Dead since e499b91.

Change-Id: I3c571ae471eb4a0b95772b19eac90183cfc7fe22"
notmyname,2013-06-26 06:00:31,https://api.github.com/repos/openstack/swift/git/commits/68fc163fdd5d374caf71484f61df0308886dab4e,68fc163fdd5d374caf71484f61df0308886dab4e,"version bump to 1.9.1

Change-Id: If04c88f7e686f4b4709c5b68351ebbbea97d12bd"
davidhIBM,2013-06-26 05:23:00,https://api.github.com/repos/openstack/swift/git/commits/8226761889841595326f1b91b016a54ea4ad98fd,8226761889841595326f1b91b016a54ea4ad98fd,"Deleted account respond as non existing accounts

Currently clients can not distinguish between non existing accounts
(which can be created) and accounts marked for deletion, which has
not yet been reaped and therefore cannot be re-created until reaped.

Following this patch, if an account is marked as deleted but hasn't
been reaped and is still on disk, responses will include a status
header:
    'X-Account-Status' = 'Deleted'

Fixes:Bug #1188609
Change-Id: Ibd39965ae3f5d45fd78f130e0e31f5a0141a8633"
notmyname,2013-06-24 06:43:24,https://api.github.com/repos/openstack/swift/git/commits/abda080366b786a037001133e8bf552554ed373d,abda080366b786a037001133e8bf552554ed373d,"updated changelog and authors update for 1.9.0 release

Change-Id: I61ffbaba01aba86d61e4f3d988b5abeee8f07813"
pyKun,2013-06-24 08:48:07,https://api.github.com/repos/openstack/swift/git/commits/9fc55ee2b4a0a9d86fd35127dafbeacfcbd6ed85,9fc55ee2b4a0a9d86fd35127dafbeacfcbd6ed85,"Add sample rsyslog.conf.

Give users a sample rsyslog.conf to manage their logs easily based on
LOCAL0 swift used. In this patch I offer some choices to output logs
via commnet lines or uncomment.

Change-Id: I2fe150a6e3d164a989c3520c0b7f032897a71f18"
smerritt,2013-06-21 23:04:18,https://api.github.com/repos/openstack/swift/git/commits/57d4e6e718ccfe020389323001d3e5b3d6aba024,57d4e6e718ccfe020389323001d3e5b3d6aba024,"Fix swift-dispersion-report.

Fixes bug 1180680.

Change-Id: I1c0eaa6f934f73853e832a8e468e1b8369a21117"
smerritt,2013-06-13 18:24:29,https://api.github.com/repos/openstack/swift/git/commits/d9f2a76973ff8af75f117d63f80abd7126ce560b,d9f2a76973ff8af75f117d63f80abd7126ce560b,"Local write affinity for object PUT requests.

The proxy can now be configured to prefer local object servers for PUT
requests, where ""local"" is governed by the ""write_affinity"". The
""write_affinity_node_count"" setting controls how many local object
servers to try before giving up and going on to remote ones.

I chose to simply re-order the object servers instead of filtering out
nonlocal ones so that, if all of the local ones are down, clients can
still get successful responses (just slower).

The goal is to trade availability for throughput. By writing to local
object servers across fast LAN links, clients get better throughput
than if the object servers were far away over slow WAN links. The
downside, of course, is that data availability (not durability) may
suffer when drives fail.

The default configuration has no write affinity in it, so the default
behavior is unchanged.

Added some words about these settings to the admin guide.

DocImpact

Change-Id: I09a0bd00524544ff627a3bccdcdc48f40720a86e"
zhouyuan,2013-06-18 07:07:59,https://api.github.com/repos/openstack/swift/git/commits/60388c9978e19e4c043625c031efae63bb400a85,60388c9978e19e4c043625c031efae63bb400a85,"Adding unit tests for direct client

 - Added simple unit tests for direct client
 - Implemented chunked put in direct_put_object

Change-Id: Icec1019b5157fae33e2fd36a7fc3b9c0cc15afec"
smerritt,2013-06-22 00:12:49,https://api.github.com/repos/openstack/swift/git/commits/e8e6bffc95ca39b2a923c939014f2bb01c4159e6,e8e6bffc95ca39b2a923c939014f2bb01c4159e6,"Clean up some remnants of StaticWeb's and TempURL's custom caching.

As of e499b91, these config values and functions are unused in StaticWeb.

As of 2e155e5, the comment in TempURL is false.

Change-Id: I75b631ece8a9a6075c406765361629c549c449f6"
davidhIBM,2013-06-20 10:21:47,https://api.github.com/repos/openstack/swift/git/commits/e872e54c2af962d1726121b7467b7140d8d60149,e872e54c2af962d1726121b7467b7140d8d60149,"Add example Apache config files

This patch is needed in 1.9 as a dependency for adding swift/apache
to devstack.
zhang-hare is working in parallel on a devstack patch that depend
on this patch.

As part of this patch we add examples dir.
In this dir we add template config files that can be used either by
a script (as will be done by devstack) or serve a an example to the
admin.

Apache2 vhost files were added under examples/apache2
Wsgi files were added under examples/wsgi

Fixes: Bug #1191388

Change-Id: If90e38a0ba36f6b59016d4a1374f4100f0bbee7b"
pyKun,2013-06-20 09:56:07,https://api.github.com/repos/openstack/swift/git/commits/2a9da16de6f060ffdd540af3fd0c4964a0fa749a,2a9da16de6f060ffdd540af3fd0c4964a0fa749a,"update .gitignore

Ignore build/ directory, which is auto-created when running `python
setup.py bdist` like dist/ directory.

Change-Id: Ie58936320d995e4e81f8929128475e538665bde8"
redbo,2013-06-20 08:04:53,https://api.github.com/repos/openstack/swift/git/commits/e499b9100b4582cdd2d9fda49132d95418484cdc,e499b9100b4582cdd2d9fda49132d95418484cdc,"use get_container_info for staticweb

Update staticweb to use get_container_info instead of its own memcache entry.

Change-Id: I59bc0d94b9e45f3d5776a5462f53b82ab78101d4"
notmyname,2013-06-19 22:30:48,https://api.github.com/repos/openstack/swift/git/commits/1b930dd669f8005d16d54acb2a4b53d640d2489f,1b930dd669f8005d16d54acb2a4b53d640d2489f,"version bump to 1.9.0 to reflect current dev target

Change-Id: Ia0a1b36ae90ed895dcc9876c016aaf261ad56674"
smerritt,2013-06-18 17:32:40,https://api.github.com/repos/openstack/swift/git/commits/2e155e560311eeab9c361092818c75c83bfa35ee,2e155e560311eeab9c361092818c75c83bfa35ee,"Make TempURL more cache-efficient.

So, there's two cases here. In one case, we have memcache enabled;
account info gets cached in the usual place, and tempurl keys get
cached separately. In the other case, we have no cache. In neither
case is anything gained by having TempURL cache keys separately from
the account info.

This commit removes TempURL's custom caching logic and makes it rely
on get_account_info() instead.

Benefits include:
 * immediate visibility of new keys on account POST
 * less data in the cache per account --> more stuff fits in cache
 * less code for bugs to hide in

Change-Id: Idb0b6c165da14196b4c79149c546f0159b54edcb"
gholt,2013-06-19 15:14:13,https://api.github.com/repos/openstack/swift/git/commits/0a77f048933c161957617cc6b507e8ea1cdbf0e8,0a77f048933c161957617cc6b507e8ea1cdbf0e8,"Added utils.FileLikeIter

A really simple version of this was in container sync already, and I
needed a more complete version for work I'm doing, and I noticed
https://review.openstack.org/#/c/33405/ was also making use of it.
So, here's a more full version.

If https://review.openstack.org/#/c/33405/ lands before this, I'll
update it accordingly.

Change-Id: Iba66b6a97f65e312e04fdba273e8f4ad1d3e1594"
pyKun,2013-06-18 17:02:37,https://api.github.com/repos/openstack/swift/git/commits/5c8785aaee959177258511d7adbe74afed0cb9fb,5c8785aaee959177258511d7adbe74afed0cb9fb,"Add max_header_size to swift.conf-sample and relative UT

1. Add explanation of MAX_HEADER_SIZE into swift.conf-sample as same as
other settings in swift.conf. Especially point out the default size of
header line in eventlet is 8192 which is the main reason why we set 8192
for MAX_HEADER_SIZE in swift.

2. Add some unit tests to check valid settings in swift.conf. Test cases
in test_constraints use /etc/swift/swift.conf if exists, and if any
wrong settings are in it (MAX_META_VALE > MAX_META_OVERALL_SIZE), swift's
unit test must fail. These new unit tests is used in this case.

Change-Id: I7bb21951d46050163c1b7bceac8d49302b9209f7"
dpgoetz,2013-06-17 21:58:46,https://api.github.com/repos/openstack/swift/git/commits/ad24cde120efe73fe5a9b866f74c7d3c766aa4cb,ad24cde120efe73fe5a9b866f74c7d3c766aa4cb,"bulk response Content-Type does not match request Accept header

Change-Id: Ieceed3837466c45bc2790b09cd56ae95f43dba2e"
akscram,2013-06-18 14:05:28,https://api.github.com/repos/openstack/swift/git/commits/2a67003e77a6e2623f85534cfe8946ae1b9f6bd3,2a67003e77a6e2623f85534cfe8946ae1b9f6bd3,"Optional TCP_KEEPIDLE in unit tests

Allows to run unit tests on BSD-based platforms. The commit
da99c339 that solved the problem doesn't contain fixes of unit
tests.

Change-Id: Iff1771c1cbb37c30a888cd1da4fca5636e5797e7"
gholt,2013-06-14 15:29:08,https://api.github.com/repos/openstack/swift/git/commits/e9d119988741aef62ee2aaa7ef1ba31d0a189a6f,e9d119988741aef62ee2aaa7ef1ba31d0a189a6f,"More xml fixes

subdir elements now have their names quoteattr

Change-Id: I37faf164e339deacb6555db94196135debe22a6c"
creiht,2013-06-14 15:19:28,https://api.github.com/repos/openstack/swift/git/commits/cbe90735e87dc92f273e65eadcb488ddd4deafb9,cbe90735e87dc92f273e65eadcb488ddd4deafb9,"Fixed some minor doc building errors

Change-Id: I91709c3fc6e937fdb31b418ac98fe5a67265cea7"
smerritt,2013-06-13 18:13:36,https://api.github.com/repos/openstack/swift/git/commits/92d7eadd328797d392758c79e258c8455874c80e,92d7eadd328797d392758c79e258c8455874c80e,"Better escaping for GET /v1/a?format=xml.

Commit 8f9b135 fixed a bug where an XML attribute could have arbitrary
characters jammed into it, resulting in a document with arbitrary
tags... and it did remove the ability to get an arbitrary XML document
out of the object server. However, it left a couple of ways to get a
malformed XML document, one example of which is an account named "".

This fixes up the remaining ways and ensures you always get a
well-formed XML document in the account-listing response. Also, it
adds a unit test for the escaping of the container name; this was
already working, just untested.

If you look in the discussion for bug 1183884, you'll see that the
review comments there are basically ""seems good, but could use a unit
test"". (The astute reader will note that I am one of the guilty
parties in that review.)

I found this bug while writing the missing unit test.

The moral of this story is left as an exercise for the reader.

Fixes bug 1183884 harder.

Change-Id: I84b24dd930ba1bb6c4f674f8d3996639dedbce15"
zaitcev,2013-06-14 00:28:00,https://api.github.com/repos/openstack/swift/git/commits/11aaaf1f3fea60db5ca9139a6e5b8f03ca6cc40c,11aaaf1f3fea60db5ca9139a6e5b8f03ca6cc40c,"Remove Lucid/ppa instructions from SAIO guide

Lucid won't EOL until May of 2014; but I stopped trusting that ppa a long time
ago. Besides with the requires for dnspython and mock where they're at you
almost can't install swift from source on any stock distro and expect tests to
pass with system packages - so we're looking at pypi for depends regardless.

While I'm in there:

* more explanation of <your-user-name> and a helpful find/sed for configs
* group the ""setup ~/.bashrc"" stuff with the ""setup ~/bin"" stuff
* some updates/fixes from my experience installing on CentOS
* remove region warnings from remakerings

Change-Id: Ie2e6b06959ab699d853e07e5b7e8cda7036a44fe"
alex,2013-05-27 02:07:39,https://api.github.com/repos/openstack/swift/git/commits/8f9b135e0a16478a628f20224ce5babe62d4aaba,8f9b135e0a16478a628f20224ce5babe62d4aaba,"Checked user input in XML responses.

Fixes bug 1183884.

* swift/account/utils.py: Escape account name in XML listings.

Change-Id: I2392d012ddeec05a267c3dcf14748112316096f3"
gholt,2013-06-13 15:14:35,https://api.github.com/repos/openstack/swift/git/commits/04a189676ba0b15a4e7ab9bfaf8caf82b03d64d0,04a189676ba0b15a4e7ab9bfaf8caf82b03d64d0,"Added logging of x-delete-at values

Added logging of the x-delete-at value for object PUTs and POSTs and
made the additional log field generic for other similar use cases.

Logging the x-delete-at is useful because otherwise you might never
know why an object ""disappeared"" just by looking at saved proxy logs.
You'd see a successful PUT of the object followed some time by a GET
that 404s. If you still have the other logs, you could track down
what happened; but, at least with our clusters, we keep proxy logs
forever but only keep the other logs for a short while.

Change-Id: Ida559abcf8dc5666e2a7eea250a67d1c4b28b1be"
pyKun,2013-03-26 05:20:09,https://api.github.com/repos/openstack/swift/git/commits/58a095b93e1e6f742e619a100e8cec693bc41dad,58a095b93e1e6f742e619a100e8cec693bc41dad,"Improve swift's keystoneauth ACL support

Below three bug reports talk about one thing.
Current keystoneauth ACL supports as:

tenant_name:user_id         ok
tenant_name:user_name       no
tenant_name:*               no
tenant_id:user_id           ok
tenant_id:user_name         no
tenant_id:*                 no
*:user_id                   ok
*:user_name                 no
*:*                         no

This patch will make all of above work fine.
Applying (tenant/user)name could let user put or get their data in a
more readable way. The tenant_name:* and *:user_name is suitable for
many usage.

note: to keep compatibility here add a new keystone.identity just for
authorize() itself and leave env['keystone.identity'] to other
middlerwares.

Fixes: bug #1020709
Fixes: bug #1075362
Fixes: bug #1155389
Change-Id: I9354dedaad875117f6a9072c67e9ecf69bfca77e"
pyKun,2013-06-08 08:01:50,https://api.github.com/repos/openstack/swift/git/commits/90c422deae1b5b59102f4c616474d8bace0e2fe9,90c422deae1b5b59102f4c616474d8bace0e2fe9,"Improve SAIO deploy document.

improving points:
1. Remove yum install swift in Fedora; Use installing from source for
both Ubuntu and Fedora.
2. Explain you could use all users including root, your own guest. An
d the points developer have to care.

Change-Id: Id6d683441bd790a21734624e29eb7c98bb40de85
Fixes: bug #1126389"
smerritt,2013-06-07 16:49:34,https://api.github.com/repos/openstack/swift/git/commits/6d32d94a9e6456b949c2565ebc20fef4add4558f,6d32d94a9e6456b949c2565ebc20fef4add4558f,"Refactor DiskFile instantiation in object server.

DiskFile() takes a lot of arguments whose value is the same on every
instantiation, so I pulled that stuff out into a utility method. No
functionality change is intended.

Change-Id: I259df5602bed60d6cb48e07d6d9e58e8320ee12a"
smerritt,2013-06-12 22:50:13,https://api.github.com/repos/openstack/swift/git/commits/aff39d75bb436ecad668320aac77be15c8ca0ca2,aff39d75bb436ecad668320aac77be15c8ca0ca2,"Fix 503 on account/container HEAD w/invalid format.

A HEAD request to /v1/a[/c]?format=%FF would result in a 503 since
there was an unhandled UnicodeDecodeError. Now it doesn't.

bug 1190395

Change-Id: I4d8ec677092617391fe154a25f22d919536a72a5"
davidhIBM,2013-06-10 10:18:42,https://api.github.com/repos/openstack/swift/git/commits/69f58f72a5a3778d7b09c8873c3d1aad4fa51373,69f58f72a5a3778d7b09c8873c3d1aad4fa51373,"Tempauth - remove change made to HTTP_X_AUTH_TOKEN

tempauth changes HTTP_X_AUTH_TOKEN although not required by function
preventing swift extendability.
(prevents other middleware to rely on HTTP_X_AUTH_TOKEN representing
the token sent by the client).

Change-Id: I7ed6f9b5d0a5a203326a3912ef27cf29d2d4e9ce
Fixes: Bug #1189410"
smerritt,2013-06-11 00:31:46,https://api.github.com/repos/openstack/swift/git/commits/84d77a06b7cb47d26165b36af2fbb9f33e9dd4b6,84d77a06b7cb47d26165b36af2fbb9f33e9dd4b6,"Stop getting useless bytes on manifest Range requests.

If you make a range request for a manifest object, then the proxy can
retrieve more data than it actually needs from the object server. It
sends the right bytes to the client, and then spends a bunch of time
reading and discarding bytes it doesn't need.

Example:

   file start  	       	       	       	       	       file end
       |	range start	  range end		  |
       v	     v         	       v       	       	  v
       [--------------------------------------------------]

The proxy would send a request to the object server with ""Range:
bytes=${range start}-"", and so the object server responds with all the
bytes from range start to file end. This needlessly transfers all the
bytes from range end to file end, as none of those are sent to the
client.

This commit fixes the sent Range header to only request the bytes
needed.

Change-Id: Ie8d4ee2c5e67c08795ac2d39d1df7d11856621a9"
smerritt,2013-06-07 01:01:35,https://api.github.com/repos/openstack/swift/git/commits/f559c50acb40f79e86dc1fe653da0c5da7e3a959,f559c50acb40f79e86dc1fe653da0c5da7e3a959,"Local read affinity for GET/HEAD requests.

Now you can configure the proxy server to read from ""local"" primary
nodes first, where ""local"" is governed by the newly-introduced
""read_affinity"" setting in the proxy config. This is desirable when
the network links between regions/zones are of varying capacities; in
such a case, it's a good idea to prefer fetching data from closer
backends.

The new setting looks like rN[zM]=P, where N is the region number, M
is the optional zone number, and P is the priority. Multiple values
can be specified by separating them with commas. The priority for
nodes that don't match anything is a very large number, so they'll
sort last.

This only affects the ordering of the primary nodes; it doesn't affect
handoffs at all. Further, while the primary nodes are reordered for
all requests, it only matters for GET/HEAD requests since handling the
other verbs ends up making concurrent requests to *all* the primary
nodes, so ordering is irrelevant.

Note that the default proxy config does not have this setting turned
on, so the default configuration's behavior is unaffected.

blueprint multi-region

Change-Id: Iea4cd367ed37fe5ee69b63234541d358d29963a4"
smerritt,2013-03-08 02:51:46,https://api.github.com/repos/openstack/swift/git/commits/d69f929be90cad3febefe25fcda558ed651bdd23,d69f929be90cad3febefe25fcda558ed651bdd23,"Add ""normal"", optparse-style options to swift-ring-builder add.

The old format is still present and works just like it did before, so
your existing scripts won't break.

New format pros:
 * it's readable even for Swift newcomers
 * it's easy to extend
 * it's familiar to anyone who's used a Unix command line
 * we don't have to maintain the parser

New format cons:
 * you can't add multiple devices in one go

Old format pros:
 * you can add many devices with one command
 * it's compact

Old format cons:
 * it confuses newcomers
 * ""wait, is that zone dash IP colon port slash device, or zone slash
   IP dash port colon meta underscore device?"" Just try walking
   someone through adding a device over voice chat.
 * it's annoying to add new fields

Note that this only affects the command ""swift-ring-builder
<builderfile> add"". Other swift-ring-builder commands are unchanged.

DocImpact

Change-Id: I034b7f79eb6f4d81a5c4da193e1358741441c5b5"
portante,2013-06-04 20:45:42,https://api.github.com/repos/openstack/swift/git/commits/483c5ec4c693b4c328bad864a615941c4d568099,483c5ec4c693b4c328bad864a615941c4d568099,"Add non-slash delimiter tests

Also expand the logic following the select statement in
list_objects_iter and list_containers_iter to document the state
following the prefix and delimiter tests.

Also remove doc strings which obscure test names when run with
""./.unittests"" script.

Performance Note:

The following simple python program illustrates the performance
advantage of not attempting to invoke startswith() method of a string
when we know the argument is an empty string.

    import time

    curs = []
    for i in range(10000):
        curs.append(['nameofthing%d'%(i), 1, 2, 3, 4])

    beg = time.time()
    for i in range(1000):
        x = [r for r in curs]
    end = time.time()
    print ""without: %.2f"" % (end - beg)

    beg = time.time()
    for i in range(1000):
        y = [r for r in curs if r[0].startswith('')]
    end = time.time()
    print ""with: %.2f"" % (end - beg)

    # Output:
    # $ python ~/test_startswith.py
    # without: 0.60
    # with: 2.73

Change-Id: I1ac72cd7932953b0efe7db8ff591829b985b8d73
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-06-03 01:28:56,https://api.github.com/repos/openstack/swift/git/commits/9094c5cc66712ae2351b69cfc3a3d953ad8f045f,9094c5cc66712ae2351b69cfc3a3d953ad8f045f,"Add branch coverage reporting

Except where the python-nose package version does not support the
""--cover-branches"" option.

Change-Id: I9ea6452d9834b3ac414e14e628002f593dd4b8c8
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
davidhIBM,2013-06-09 09:54:32,https://api.github.com/repos/openstack/swift/git/commits/6d59cbf596589b922e33969580321198f2482700,6d59cbf596589b922e33969580321198f2482700,"Swift tests for unicode headers

Swift functional tests sends ilegal headers (unicode) and expects
these headers to be processed by Swift.

Apache2 seem to remove such headers which is a sound behavior for
illegal headers.

This change restrict the test tpo exist only for swift integral
web front end. For future it is advised to disallow such behaviour.
For example it is suggested to make the decission that in future APIs
illegal headers are removed rather than processed.

Change-Id: Ibf548f474de3f06a2687f8f4812beaeaf81ab216
Fixes: Bug #1189123"
gholt,2013-06-03 23:50:05,https://api.github.com/repos/openstack/swift/git/commits/fef2afd927159af00b6e0c44310b0c7227ed5cc3,fef2afd927159af00b6e0c44310b0c7227ed5cc3,"Fixed Bug 1187200

See Bug 1187200 for a full description of the problem.

Part 1:

X-Delete-At-Container added to X-Delete-At-* info

This fixes the bug by passing the expiring-objects-account's
container name onward to the backend object servers. This is in case
the object servers' expiring_objects_container_divisor happens to be
different than the proxy server's, we want to make sure the host,
partition, and device match up with the container name. Different
container names would be fine, but not with mismatched host,
partition, and device info.

Part 2:

The db_replicator now double checks the disk path's partition against
the partition the ring gives back. If they don't match, it logs the
problem but continues to replicate the database to where it should be
and, on success to all proper nodes, removes the local out of place
database.

Bug 1187200

Change-Id: Id0873a3f2198ce285fe0b0c777738eff38bc2438"
dbishop,2013-06-08 17:55:41,https://api.github.com/repos/openstack/swift/git/commits/0d5ed677267f09029568fe24f0fcf0e359281343,0d5ed677267f09029568fe24f0fcf0e359281343,"Fix ring validate with device prior to rebalance.

A builder file with some devices added but before rebalance() is called
should be invalid (in the sense that validate() raises
RingValidationError instead of TypeError).

Change-Id: I5538239db4b2fde83be2390014504e35ccd7c0d3"
pyKun,2013-06-08 17:14:23,https://api.github.com/repos/openstack/swift/git/commits/eec98c15cd5a3c9aa5fa37ce9ca47f09b82ac2a5,eec98c15cd5a3c9aa5fa37ce9ca47f09b82ac2a5,"Add UT for checking special chars in object name

Add special chars could help checking quote/unquote, encode/decode
problems. Those two is one of most common mistakes.

Change-Id: Ife1c0b481f08c1666d62b4fb51b7fdcdfdbf2ba6"
davidhIBM,2013-03-30 12:55:29,https://api.github.com/repos/openstack/swift/git/commits/58f4e0f2e03b807c0b73073f4767fc441bcf810b,58f4e0f2e03b807c0b73073f4767fc441bcf810b,"get_info - removes duplicate code (Take 3)

Consolidate the different ways in which info of account/container
is gathered, cached, used, updated, etc.

This refactoring increases code reuse and is a basis for later
addition of account ACLs.
Changing the get_info users is left for future.
This staged approach ensures the behaviour is unchanged.

Change-Id: I67b58030d3f9e3bc86bcd7ece0f1dc693c4e08c3
Fixes: Bug #1162199"
greglange,2013-05-01 21:11:25,https://api.github.com/repos/openstack/swift/git/commits/209c5ec418428de631f6f2dc601aa8d246cb1947,209c5ec418428de631f6f2dc601aa8d246cb1947,"Add parallelism to object expirer daemon.

Two types of parallelism are added:

- concurrency to speed up what a single process does
- a way to run multiple daemons to work on different parts of the work

DocImpact

Change-Id: I48997f68eb2fd8de19a5ee8b9fcdf76dde2ba0ab"
smerritt,2013-03-20 05:27:21,https://api.github.com/repos/openstack/swift/git/commits/b491549ac23bdad781a94853069531e2eced7fc0,b491549ac23bdad781a94853069531e2eced7fc0,"Use threadpools in the object server for performance.

Without a (per-disk) threadpool, requests to a slow disk would affect
all clients by blocking the entire eventlet reactor on
read/write/etc. The slower the disk, the worse the performance. On an
object server, you frequently have at least one slow disk due to
auditing and replication activity sucking up all the available IO. By
kicking those blocking calls out to a separate OS thread, we let the
eventlet reactor make progress in other greenthreads, and by having a
per-disk pool, we ensure that one slow disk can't suck up all the
resources of an entire object server.

There were a few blocking calls that were done with eventlet.tpool,
but that's a fixed-size global threadpool, so I moved them to the
per-disk threadpools. If the object server is configured not to use
per-disk threadpools, (i.e. threads_per_disk = 0, which is the
default), those call sites will still ultimately end up using
eventlet.tpool.execute. You won't end up blocking a whole object
server while waiting for a huge fsync.

If you decide not to use threadpools, the only extra overhead should
be a few extra Python function calls here and there. This is
accomplished by setting threads_per_disk = 0 in the config.

blueprint concurrent-disk-io
Change-Id: I490f8753d926fdcee3a0c65c5aaf715bc2b7c290"
pyKun,2013-06-06 09:59:31,https://api.github.com/repos/openstack/swift/git/commits/157f61651ea740cf6d827a3ce82f153b6fcd1e6e,157f61651ea740cf6d827a3ce82f153b6fcd1e6e,"Remove <cond> and <val1> or <val2> systax

Use <val1> if <cond> else <val2> instead.
There're more talks:
[0] http://stackoverflow.com/questions/394809/ternary-conditional-operator-in-python
[1] http://www.python.org/dev/peps/pep-0308/

Fixes bug 1188111

Change-Id: I485e674317faf319a26ab30c2c193d8464a7e46e"
zaitcev,2013-06-07 01:41:13,https://api.github.com/repos/openstack/swift/git/commits/4b5db1dd0ac294b99c311dbb68b7944cb4bdbb56,4b5db1dd0ac294b99c311dbb68b7944cb4bdbb56,"Improve config samples

- Add proxy-logging to multinode. We had it since Folsom and people
  still forget it, resulting in missing logs.
- Use correct name, for ease hit with '*' in vi at least.

Admittedly trivial changes, which I meant to hold until Leah's major
doc improvement lands, but I'm tired of keeping stuff like this in
my working repo.

Change-Id: I44f80c51d6d7329a9b696e67fcb8a895db63e497"
smerritt,2013-06-06 22:35:19,https://api.github.com/repos/openstack/swift/git/commits/efdb0e36811d8d6f5a0964338649ca964db74d64,efdb0e36811d8d6f5a0964338649ca964db74d64,"Make sample configs more readable.

Inject some empty lines to avoid the wall-of-text effect and to make
it a little clearer which descriptions go with which options.

Change-Id: I58914b83dad76ea5ca330903a246bee7ffaeba83"
zaitcev,2013-06-06 14:32:55,https://api.github.com/repos/openstack/swift/git/commits/a65fc2456e99f3d7d92dd70645c33039d01dfd97,a65fc2456e99f3d7d92dd70645c33039d01dfd97,"Restore loadapp checking

This problem surfaced when Red Hat QA started installing Grizzly
and hit a regression from Folsom. If something is wrong with
permissions (it may be SElinux, or any other problem), the servers
in 1.8.0 enter a loop, spamming logs with huge tracebacks at a rate
of a one to two each second, depending how many workers are there.
In 1.7.4, the server exited with an error message.

The offending commit is 9efa9be167b972a234ecccd9ba37bdd8a949381e,
""Separate wsgi init from web-front-end activation"". It relocates
the probing invocation of loadapp() in front of drop_privileges().
But in such case, it runs as root and thus may succeed while the
rest of the server fails.

The fix is to return loadapp to the place it was in Folsom. Since
the init_request_processor() is used when running under Apache,
preserve that API too.

Change-Id: I166332eb9375229aefed6b9c3ef1a992a3e4efd0"
portante,2013-05-31 15:30:17,https://api.github.com/repos/openstack/swift/git/commits/02abdb94b05471f60658d249038d4f8352204be9,02abdb94b05471f60658d249038d4f8352204be9,"Change to use dash instead of slash

There is no known way to embed slashes into container names, even when
using URL escape sequences. Since it would seem that the more common
case would be some other character, we validate using a dash ('-')
character as the delimiter.

It should also be noted that the documentation for container listing,
found here:
http://docs.openstack.org/api/openstack-object-storage/1.0/content/s_listcontainers.html,
does not describe the use of the prefix or delimiter parameters.

DocImpact

Change-Id: Ie467a4181c6f64b24c82c72b70a37183d443dee1
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
akscram,2013-06-01 20:43:26,https://api.github.com/repos/openstack/swift/git/commits/567b43ea944f603aa5d33652fe48077703e9dd1a,567b43ea944f603aa5d33652fe48077703e9dd1a,"Add requirements files to the source distribution

Also remove the tools directory, since it is no longer used, now that
https://review.openstack.org/30887 is merged, which renamed the
requirements files to requirements.txt and test-requirements.txt.

Fixes bug 1186625

Change-Id: Icf1ef1d2d83140420163c25257d4802282063cfa"
Dieterbe,2013-03-11 15:15:41,https://api.github.com/repos/openstack/swift/git/commits/442fd83a8b4bfe6814044e4c24f3dd449cd4ecd1,442fd83a8b4bfe6814044e4c24f3dd449cd4ecd1,"implement an rsync_bwlimit setting for object replicator

Change-Id: I8789d6e4d22de83db9a2760d51a94eb56a48c3b5"
gholt,2013-05-31 13:09:26,https://api.github.com/repos/openstack/swift/git/commits/98ea84447832f9744a1bc5c3648d89133b2fe3e9,98ea84447832f9744a1bc5c3648d89133b2fe3e9,"Replaced <exc>.message with str(<exc>)

Change-Id: I9a030b84dafe2b2300e8735052f6f15f34bc7aa7"
smerritt,2013-05-24 01:53:51,https://api.github.com/repos/openstack/swift/git/commits/15c2ca55f02e1785f999a6790d9a5ff033449bcb,15c2ca55f02e1785f999a6790d9a5ff033449bcb,"Fix faked-out account GET for JSON and XML.

If account autocreation is on and the proxy receives a GET request for
a nonexistent account, it'll fake up a response that makes it look as
if the account exists, but without reifying that account into sqlite
DB files.

That faked-out response was just fine as long as you wanted a
text/plain response, but it didn't handle the case of format=json or
format=xml; in those cases, the response would still be
text/plain. This can break clients, and certainly causes crashes in
swift3. Now, those responses match as closely as possible.

The code for generating an account-listing response has been pulled
into (the new) swift.account.utils module, and both the fake response
and the real response use it, thus ensuring that they can't
accidentally diverge. There's also a new probe test for that
non-divergence.

Also, cleaned up a redundant matching of the Accept header in the code
for generating the account listing.

Note that some of the added tests here pass with or without this code
change; they were added because the code I was changing (parts of the
real account GET) wasn't covered by tests.

Bug 1183169

Change-Id: I2a3b8e5d9053e4d0280a320f31efa7c90c94bb06"
gholt,2013-05-31 00:27:09,https://api.github.com/repos/openstack/swift/git/commits/d2dba73afd1fd7319b4f7e089ef81b3813995651,d2dba73afd1fd7319b4f7e089ef81b3813995651,"Mock SysLogHandler for proxy/test_server.py

Our tests get rather grabby with file descriptors, mostly due to the
SysLogHandler. In recent work I'm doing, my additional tests put
things just over the 1024 limit and tests would start to fail
somewhat randomly. This alleviates the problem by mocking out one of
the bigger users of SysLogHandler, proxy/test_server.py. If you want
to verify this has an impact, you can put the following in your
proxy/test_server.py's overall teardown method and try it with and
without the mocking:

    import subprocess
    print >>sys.stderr, '%s OPEN FILES' % len(subprocess.Popen(
        ['lsof'], stdout=subprocess.PIPE).communicate()[0].split('\n'))

Change-Id: I1bd3efe46ee69d09a32c5a964f04e36e46506446"
niuzhenguo,2013-05-29 14:03:40,https://api.github.com/repos/openstack/swift/git/commits/627d0ba52f8f04765e09c9fe0974a2308ee6def3,627d0ba52f8f04765e09c9fe0974a2308ee6def3,"Rename requires files to standard names.

Rename tools/pip-requires to requirements.txt and tools/test-requires
to test-requirements.txt. These are standard files, and tools in the
general world are growing intelligence about them.

Change-Id: Ib3e50a811868e2969923d978ee00c4f92682aa1c
Fixes: bug #1179008"
smerritt,2013-05-30 01:55:10,https://api.github.com/repos/openstack/swift/git/commits/2c9aee55fbcdc1580a4f7630365676a5294bbb79,2c9aee55fbcdc1580a4f7630365676a5294bbb79,"In TempURL, cache ""no keys"" for a shorter time.

In other places in the codebase, we cache a negative result for less
time (usually a tenth) than we cache a positive result. This commit
makes TempURL do the same.

This creates a slightly nicer experience for someone trying to set up
TempURL; if they get the initial key setup wrong, try it, then fix it,
it now takes only 6 seconds until they can use signed URLs, not
60. That's a short enough time that they may not even notice the
caching of no keys.

Change-Id: I521f023e7cddaecd07f0ce32aedd4059bd0b8ec4"
gholt,2013-05-29 15:02:06,https://api.github.com/repos/openstack/swift/git/commits/8d681f0618b05233bc74336ac48870ca2d6bfce3,8d681f0618b05233bc74336ac48870ca2d6bfce3,"Subtle change to tempurl content-disposition names

If an object name ends with a /, the content-disposition filename for
a tempurl ended up as an empty string. This fix just strips any
trailing slashes before calling basename.

Also, I added a test to verify that if the filename is passed as an
overriding query parameter, that it is used in full, no rstripping,
no basenaming.

Change-Id: I37725b6ded04ed3b91cdb21132490fd857276e2f"
portante,2013-05-25 20:30:07,https://api.github.com/repos/openstack/swift/git/commits/8d6869a6cca7e3f645aaa402a742f79e47dd9343,8d6869a6cca7e3f645aaa402a742f79e47dd9343,"Move parameter checking before disk accesses

For HEAD and GET requests on both containers and accounts APIs we now
perform parameter checking before we access the database. The unit
tests were updated to show that the parameter checking is performed
before accesses are performed.

Change-Id: Ieb753316cdccabf45022e3d83522d87d34aa6b0e
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
alex,2013-05-28 14:22:42,https://api.github.com/repos/openstack/swift/git/commits/b147c9e221134a3b47de101cb4f5ddde050cbb70,b147c9e221134a3b47de101cb4f5ddde050cbb70,"Made tests use a JSON parser in liue of eval.

The results that are being parsed are really JSON, so using a JSON parser is
more semantically correct; in addition using eval anywhere can set a bad
example.

Change-Id: Idcd55400b2571aba0f2f377cf66a3cbf4d3af960"
portante,2013-04-19 04:10:38,https://api.github.com/repos/openstack/swift/git/commits/5174b7f85dea42b6e0a50ee0a222637be0cea240,5174b7f85dea42b6e0a50ee0a222637be0cea240,"Rework to support RFC 2616 Sec 4.4 Message Length

RFC 2616 Sec 4.4 Message Length describes how the content-length and
transfer-encoding headers interact. Basically, if chunked transfer
encoding is used, the content-length header value is ignored and if
the content-length header is present, and the request is not using
chunked transfer-encoding, then the content-length must match the body
length.

The only Transfer-Coding value we support in the Transfer-Encoding
header (to date) is ""chunked"". RFC 2616 Sec 14.41 specifies that if
""multiple encodings have been applied to an entity, the
transfer-codings MUST be listed in the order in which they were
applied."" Since we only supported ""chunked"". If the Transfer-Encoding
header value has multiple transfer-codings, we return a 501 (Not
Implemented) (see RFC 2616 Sec 3.6) without checking if chunked is the
last one specified. Finally, if transfer-encoding is anything but
""chunked"", we return a 400 (Bad Request) to the client.

This patch adds a new method, message_length, to the swob request
object which will apply an algorithm based on RFC 2616 Sec 4.4
leveraging the existing content_length property.

In addition to these changes, the proxy server will now notice when
the message length specified by the content-length header is greater
than the configured object maximum size and fail the request with a
413, ""Request Entity Too Large"", before reading the entire body.

This work flows from https://review.openstack.org/27152.

Change-Id: I5d2a30b89092680dee9d946e1aafd017eaaef8c0
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
davidhIBM,2013-05-02 19:50:41,https://api.github.com/repos/openstack/swift/git/commits/9745a28b18e085f1fc234db044402e320bd8085b,9745a28b18e085f1fc234db044402e320bd8085b,"Handle DB creation race condition

Till now if a race occurs on a request to a DB when it is
first created, the loosing party die with 500...
... and an error stating a race is in the log file.

Both removed by simply accepting the fact that the DB is in fact
created by someone else - just less work for us to do... ;)

Fixes Bug #1051998

Change-Id: I8e29bf362edf2b1a84f9bffa39c04d5b3dc241b2"
akscram,2013-05-16 14:44:41,https://api.github.com/repos/openstack/swift/git/commits/3957dbc5d466a11f04451d7b0c91779a29b0d12a,3957dbc5d466a11f04451d7b0c91779a29b0d12a,"RingBuilder.add_dev returns device id

When added a new devices into builder the add_dev function returns it
unique id.

blueprint argparse-in-swift-ring-builder

Change-Id: I57080bb625e812f6cea71199df907a44b332b552"
akscram,2013-05-16 12:58:03,https://api.github.com/repos/openstack/swift/git/commits/43bf568f4833ee32a91deef0340983d5558e033b,43bf568f4833ee32a91deef0340983d5558e033b,"Move parse search logic outside from builder

Dramatic part of RingBuilder.search_devs which parse a complex format
of a search device string moved to the swift-ring-builder script.
Instead, the search_devs has a simple interface to search devices.

blueprint argparse-in-swift-ring-builder

Change-Id: If3dd77b297b474fb9a058e4693fef2dfb11fca3d"
creiht,2013-05-23 22:41:04,https://api.github.com/repos/openstack/swift/git/commits/7a02c218bbfa72671757005aa57fc0e472ef518f,7a02c218bbfa72671757005aa57fc0e472ef518f,"Fixed probetests

* Fixed issue with running probetests with the latest update
  of python-swiftclient that removed eventlet
* Fixed issue with replication server tests to not require hard
  coded paths

Change-Id: Ibbf727ae99c0f3893ae58e270e2f879a1f618e49"
gholt,2013-05-23 19:49:34,https://api.github.com/repos/openstack/swift/git/commits/1c8d188872fb087877302b4db9a40cbec150c1d0,1c8d188872fb087877302b4db9a40cbec150c1d0,"Put some comments in places we get asked about a lot

Change-Id: If932b82f4e225cfdda21f47e4215c6f4c59dae4a"
btorch,2013-05-22 19:33:44,https://api.github.com/repos/openstack/swift/git/commits/7fbb97b39e8a0050f33f3f23cc0b99fe77db75cf,7fbb97b39e8a0050f33f3f23cc0b99fe77db75cf,"Retrieve the swift version with recon

Adding a '/recon/version' in order to get the swift version

Change-Id: I7b7ddbe70abb87c6a3b1010ddefa09d0acc09710"
portante,2013-04-19 00:42:36,https://api.github.com/repos/openstack/swift/git/commits/d0a27f477b6422b1a01b8687ca9fc80c9e2d0d55,d0a27f477b6422b1a01b8687ca9fc80c9e2d0d55,"Hide the file descriptor and disk write methodology for PUTs

Towards moving the DiskFile class into place as the API definition for
pluggable DiskFile backends, we hide the file descriptor and the
method of writing data to disks. The mkstemp() method has been renamed
to writer(), and no longer returns an fd, but a new object that
encapsulates the state tracked for writes. This new object is then
used directly to perform the reminder of the write operations and
application of required semantics.

Change-Id: Ib37ed37b34a2ce6b442d69f83ca011c918114434
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
smerritt,2013-05-14 20:04:01,https://api.github.com/repos/openstack/swift/git/commits/bd3ca778d10c461210f26ea3d194cacc70bef975,bd3ca778d10c461210f26ea3d194cacc70bef975,"Fix ValueError from handoff logging.

If you have StatsD logging turned on, then the iterator returned by
Ring.get_part_nodes() will emit StatsD packets when it yields a
handoff node. That network IO may make eventlet trampoline to another
greenthread before returning from next(). Now, if that other
greenthread tries to call next() on that same iterator, it blows up
with a ValueError.

Any socket IO inside a generator's next() method can cause this. It's
easiest to reproduce with StatsD logging turned on, but logging to
syslog can trigger it too.

You can see this happen sometimes in the proxy's make_requests method
if two of the primary nodes are down. Greenthread A goes into next()
to get a handoff node, then sends a StatsD packet, and so eventlet
trampolines to Greenthread B. Now, Greenthread B also calls next() to
get a handoff node, and dies with a ValueError.

This commit wraps up concurrently-accessed iter_nodes() iterators in a
new thing called a GreenthreadSafeIterator that serializes access.

Bug 1180110
Change-Id: I8fe13d7295c056a2cab9e084f5966078a49bdc13"
dpgoetz,2013-05-07 16:40:53,https://api.github.com/repos/openstack/swift/git/commits/f85cf2b827b848a97e66cf9678ed67f81cdb9215,f85cf2b827b848a97e66cf9678ed67f81cdb9215,"close socket on exceptions

Change-Id: I0dee7c109d32e6325845df9ba6e1fbf23a2d1b89"
portante,2013-05-21 02:29:52,https://api.github.com/repos/openstack/swift/git/commits/eb658a1034948c89944a005cc732c0fccfbf235b,eb658a1034948c89944a005cc732c0fccfbf235b,"Add unit tests to ensure TZ variable remains set

See review https://review.openstack.org/29836.

Change-Id: I8ec80202789707f723abfe93ccc9cf1e677e4dc6
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2013-05-20 21:29:20,https://api.github.com/repos/openstack/swift/git/commits/306c7549ecba79463ba54b9a544268e53c63bd3f,306c7549ecba79463ba54b9a544268e53c63bd3f,"Set TZ environment variable to avoid a stat call

By setting the TZ environment variable for the WSGI process we avoid
the stat(""/etc/localtime"") on every request handled that logs using
strftime().

Change-Id: Ifc78236a99ed193a42389e383d062b38f57a5a31
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
gholt,2013-05-17 14:25:29,https://api.github.com/repos/openstack/swift/git/commits/69cf78bb161cb61ac840251cab9688a1b269e779,69cf78bb161cb61ac840251cab9688a1b269e779,"Moved tests for moved obj.base code

Follow-on to https://review.openstack.org/#/c/28895/

Moved the tests for the code that was moved to obj.base and also made
the new test file flake8 compliant.

Change-Id: I4be718927b6cd2de8efe32f8e54b458a4e05291b"
davidhIBM,2013-04-24 18:58:15,https://api.github.com/repos/openstack/swift/git/commits/fd3acd2e5944251b3a473d2936f33f11101d56e4,fd3acd2e5944251b3a473d2936f33f11101d56e4,"Autocreate cleanups

Autocreate was messy - now cleaned.
Auto-create now occurs at account POST, and container PUT only.
A method for autocreation was added
Autocreation was removed from account_info and container_info.

Fake-it as if the account exists on account HEAD and account GET.

Return 404 on everything else when the account does not exist.

Fix: Bug #1172223
Fix: Bug #1179140
Change-Id: Iac54c1438eb09883fbc29a1ad2ac2245b95efc92"
akscram,2013-05-16 15:38:42,https://api.github.com/repos/openstack/swift/git/commits/cc040a9c29361caa7cc02253e529c75b13fb2759,cc040a9c29361caa7cc02253e529c75b13fb2759,"Add ability to save builder data to a disk file

Instances of the RingBuilder class can store its data to a disk file by
the save method and load it by the load method.

blueprint argparse-in-swift-ring-builder

Change-Id: I69fdf0693ca9f520d235a795ecdd2da310dcd5d3"
smerritt,2013-05-15 23:53:17,https://api.github.com/repos/openstack/swift/git/commits/dc10d9993bca14197270b0eb849960272a3e9368,dc10d9993bca14197270b0eb849960272a3e9368,"Remove dead code.

While it is true that one *could* call ContainerBroker.get_info() with
include_metadata=True, it is also true that nobody actually does.

It's also true that the code path taken when include_metadata=True is
broken in the case of non-ASCII metadata keys
(e.g. X-Container-Meta-☃: snowman), so leaving it around is just
asking for future pain.

Change-Id: I4931add4b8fb7c4f57820e52f182c21040d8db10"
morucci,2013-04-24 21:05:28,https://api.github.com/repos/openstack/swift/git/commits/e7ce2909048fefc2d53c9278cdab23aa86b5f257,e7ce2909048fefc2d53c9278cdab23aa86b5f257,"Metadata retrieving from sqlite must be str for key

Encode metadata key as utf8 if key is unicode when
retriving it from sqlite database.

Change-Id: I4ba11543d1bed17098b5e52dd768c75b403188a1
Fixes: bug #1172202"
portante,2013-05-14 16:02:59,https://api.github.com/repos/openstack/swift/git/commits/81623cfa2c4142ebf6ba34721269d8f5fc90e058,81623cfa2c4142ebf6ba34721269d8f5fc90e058,"Perform mount check after REST params valid on PUT

All the other methods (POST, GET, HEAD, DELETE and REPLICATE) first
validate the REST parameters and headers before performing the mount
check. Do the same for PUT.

Change-Id: I6e5f34cc65b57662b7f88224ca0e1501787e0f43
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
greglange,2013-05-02 18:28:14,https://api.github.com/repos/openstack/swift/git/commits/597072cc95660d83d6e3d71e6d43a4295ff02ed4,597072cc95660d83d6e3d71e6d43a4295ff02ed4,"Fix obscure double url bug in container quota middleware

With the container quota middleware on, if you made a request similar to the
following one you'd get a 500 response.

curl -i -X PUT -H 'X-Auth-Token: token'
http://127.0.0.1:8080/v1/AUTH_testhttp://something/something_else

(Note the double url.)

This was due to a mismatch in how split_path() was called in the middleware and
in the get_container_info().

This change fixes that mismatch and the bug.

Change-Id: Ie42ab585b942b7201e13b02a0c706532952aac60"
portante,2012-11-15 21:34:45,https://api.github.com/repos/openstack/swift/git/commits/8825c9c74a67d1cef28b6d2d18d5fbaf40e36f51,8825c9c74a67d1cef28b6d2d18d5fbaf40e36f51,"Enhance log msg to report referer and user-agent

Enhance internally logged messages to report referer and user-agent.

Pass the referering URL and METHOD between internal servers (when
known), and set the user-agent to be the server type (obj-server,
container-server, proxy-server, obj-updater, obj-replicator,
container-updater, direct-client, etc.) with the process PID. In
conjunction with the transaction ID, it helps to track down which PID
from a given system was responsible for initiating the request and
what that server was working on to make this request.

This has been helpful in tracking down interactions between object,
container and account servers.

We also take things a bit further performaing a bit of refactoring to
consolidate calls to transfer_headers() now that we have a helper
method for constructing them.

Finally we performed further changes to avoid header key duplication
due to string literal header key values and the various objects
representing headers for requests and responses. See below for more
details.

====

Header Keys

There seems to be a bit of a problem with the case of the various
string literals used for header keys and the interchangable way
standard Python dictionaries, HeaderKeyDict() and HeaderEnvironProxy()
objects are used.

If one is not careful, a header object of some sort (one that does not
normalize its keys, and that is not necessarily a dictionary) can be
constructed containing header keys which differ only by the case of
their string literals. E.g.:

   { 'x-trans-id': '1234', 'X-Trans-Id': '5678' }

Such an object, when passed to http_connect() will result in an
on-the-wire header where the key values are merged together, comma
separated, that looks something like:

   HTTP_X_TRANS_ID: 1234,5678

For some headers in some contexts, this is behavior is desirable. For
example, one can also use a list of tuples which enumerate the multiple
values a single header should have.

However, in almost all of the contexts used in the code base, this is
not desirable.

This behavior arises from a combination of factors:

   1. Header strings are not constants and different lower-case and
      title-case header strings values are used interchangably in the
      code at times

      It might be worth the effort to make a pass through the code to
      stop using string literals and use constants instead, but there
      are plusses and minuses to doing that, so this was not attempted
      in this effort

   2. HeaderEnvironProxy() objects report their keys in "".title()""
      case, but normalize all other key references to the form
      expected by the Request class's environ field

      swob.Request.headers fields are HeaderEnvironProxy() objects.

   3. HeaderKeyDict() objects report their keys in "".lower()"" case,
      and normalize all other key references to "".lower()"" case

      swob.Response.headers fields are HeaderKeyDict() objects.

Depending on which object is used and how it is used, one can end up
with such a mismatch.

This commit takes the following steps as a (PROPOSED) solution:

   1. Change HeaderKeyDict() to normalize using "".title()"" case to
      match HeaderEnvironProxy()

   2. Replace standard python dictionary objects with HeaderKeyDict()
      objects where possible

      This gives us an object that normalizes key references to avoid
      fixing the code to normalize the string literals.

   3. Fix up a few places to use title case string literals to match
      the new defaults

Change-Id: Ied56a1df83ffac793ee85e796424d7d20f18f469
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
gholt,2013-05-11 19:51:03,https://api.github.com/repos/openstack/swift/git/commits/9fe15dd15a4ba25b2bb4d34bd48b3ef53c7d1cbf,9fe15dd15a4ba25b2bb4d34bd48b3ef53c7d1cbf,"Moved some code out of swift.obj.replicator

This will be needed in future replication work to avoid circular
imports.

I used swift.obj.base as the module name just because we seemed to
avoid putting code in __init__.py files so far and I didn't want to
buck the trend.

I would love to see other obj things like *_metadata and DiskFile
move into swift.obj.base as well and swift.obj.server just be the
WSGI server logic, but I'll leave that for the future.

I have changed the tests as little as possible (just the references
to where they get the code to test) to show the refactor has not
broken anything. I did add a test for tpool_reraise since there was
none before.

There will be a follow on patch for moving the tests to their new
location(s). I figured I'd wait to put the bikes in the shed until
everyone's done painting it.

Change-Id: I32b4ac88be21eb76c877d3f4cc1e6ac33304835b"
dbishop,2013-05-11 21:31:42,https://api.github.com/repos/openstack/swift/git/commits/4f2f2435ac78c0eb190b14da41af8af30d85b704,4f2f2435ac78c0eb190b14da41af8af30d85b704,"Fix two documentation warnings.

The crossdomain doc was named *.xml instead of *.rst causing it to not
get built or included in the toctree where it was supposed to.

The apache deployment guide wasn't linked to from anywhere, so I added
it under the normal deployment guide.

Change-Id: I817a1f2ca1ed7913e8ea5155cc1fac07caf0b637"
dbishop,2013-05-08 21:43:56,https://api.github.com/repos/openstack/swift/git/commits/5f295d032933d035b973f8f1f0a90f47b249d571,5f295d032933d035b973f8f1f0a90f47b249d571,"Don't delete containers when they weren't created.

When swift-bench is run in direct mode, don't try to delete the
containers which weren't created.

Fixes bug 1177960.

Change-Id: Ice07e8729bb776e2b215894cf95fb80b64167a8d"
dpgoetz,2013-04-30 21:45:46,https://api.github.com/repos/openstack/swift/git/commits/af2607c457171975fe4f512a92a87b827d5b6528,af2607c457171975fe4f512a92a87b827d5b6528,"Refactor Bulk middleware to handle long running requests

Change-Id: I8ea0ff86518d453597faae44ec3918298e2d5147"
smerritt,2013-05-02 21:53:48,https://api.github.com/repos/openstack/swift/git/commits/21343ab038f308dd0b4817b125efec6d4d51886b,21343ab038f308dd0b4817b125efec6d4d51886b,"Allow 2 TempURL keys per account.

This allows users to rotate their TempURL keys without invalidating
all existing signed URLs. This is handy if you have multiple systems
generating signed URLs, but you want to change your keys for some
reason (e.g. keys compromised, company policy, general paranoia).

Both the first and second keys are optional, so existing accounts'
signed URLs will continue to work as before.

This commit does change the memcache key used to store the fetched
TempURL keys. This is because we were storing the old key as a string
in memcached, but the new one is a list of keys. Since the key cache
lifetime here is only 60 seconds, it doesn't seem like too big a deal
to completely flush the TempURL cache.

Also, this commit adds caching of a negative TempURL result. If the
account HEAD reveals no TempURL keys at all, that result is now stored
for 60 seconds the same way that a positive result would be.

Change-Id: I40a02bd607283fbce11aa52a9bb8a5846ab17f5e"
dpgoetz,2013-05-07 20:44:14,https://api.github.com/repos/openstack/swift/git/commits/d3bc10d0d73856ea1535e308dfb40ed7c25546d0,d3bc10d0d73856ea1535e308dfb40ed7c25546d0,"have tempurl allow OPTIONS requests

Change-Id: I431cac1e9818a335ff8d20288ab6acf39d6b6d5e"
dosaboy,2013-05-02 18:14:49,https://api.github.com/repos/openstack/swift/git/commits/f9c5348f49f7dd5a8971b20e983d295f43d472d9,f9c5348f49f7dd5a8971b20e983d295f43d472d9,"Fixed issue with use of delimiter in container queries.

Currently if you have a container with objects named
x/y and x0 and you use delimiter=/ in your query, x0
will be excluded from the results. This patch resolves
this problem.

To replicate the original issue, create a container
called 'test' with the following objects:

x/y
x0
x1

Then do a GET with 'accnt/test?delimiter=/' and the
following is returned:

x/
x1

i.e. x0 is missing from output.

Change-Id: If196e3075612b121ef8da4a9128167d00a248c27"
davidhIBM,2013-05-05 19:07:42,https://api.github.com/repos/openstack/swift/git/commits/39fc4c37bf5218656a7b843bdd03a2b17354f439,39fc4c37bf5218656a7b843bdd03a2b17354f439,"Doc changes for new pip-requirements

dnspython was added recently to the list of requirments.

This patch completes the change:
1. The new requirement is documented
2. The need for tox --recreate is documented
(assuming there is no way to automate 2 above)

Change-Id: I49f0cb4b01b79dd7cf4329984a2f8416378ebe19
Fixes: Bug #1176627"
smerritt,2013-05-03 21:08:08,https://api.github.com/repos/openstack/swift/git/commits/e3da6b07a0729db9ba5bc6b09952add79206c7e5,e3da6b07a0729db9ba5bc6b09952add79206c7e5,"Skip IPv6 addresses in cname_lookup middleware.

It already skips IPv4 addresses, and since IPv6 is the future of the
Internet*, we should probably do the right thing with those too.

* IPv6: Just two years away for over fifteen years!

Change-Id: I54f1db4e936fd38d05ac8b5c709efba76525b9d2"
mhuin,2013-04-24 16:07:01,https://api.github.com/repos/openstack/swift/git/commits/b61b177a3f6e00e30315ab1b2fbdd768427506a1,b61b177a3f6e00e30315ab1b2fbdd768427506a1,"Skip cname_lookup when host is an IP address

cname_lookup cannot resolve IP addresses as CNAME records, and therefore
should not attempt to resolve the host in that case. The middleware is
skipped when the host is an IP address.

Change-Id: I6961ec205e771116ace1ebcb8c088f3116eb38f0
Fixes: bug #1172289"
portante,2013-05-02 02:25:08,https://api.github.com/repos/openstack/swift/git/commits/99891e0d2e45986064f46444b6d0c029537f0665,99891e0d2e45986064f46444b6d0c029537f0665,"Rename ""file"" to ""disk_file""

Broke this out into a separate commit since adding five characters
caused a few lines to get re-wrapped, adding more diffs.

See John's comment from Patch Set #3 for the motivation for this
change in review https://review.openstack.org/27149.

Change-Id: I1edf2cb468dcda0b781569161ada6e4016c1141c
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
greglange,2013-05-01 21:16:18,https://api.github.com/repos/openstack/swift/git/commits/5fda0c9a77b76562ef8087ae6d5c5392e4e22f9e,5fda0c9a77b76562ef8087ae6d5c5392e4e22f9e,"Adds chunk_size to CompressingFileReader.

Before when iterating using this object, the call to the underlying file object
was made without a chunk_size.  This is bad because this would cause the entire
contents of the file to be read.

Change-Id: I9956e5d2d693a6260252fff331d4f78f70179a6c"
emonty,2013-04-29 01:32:12,https://api.github.com/repos/openstack/swift/git/commits/de2e5aa462a9515ac228690b68b84af5974db1ea,de2e5aa462a9515ac228690b68b84af5974db1ea,"Update to flake8 instead of pep8.

Change-Id: I3d4a31111c3044da06611405ce80f208ef8a0ce3"
briancline,2013-04-30 20:36:48,https://api.github.com/repos/openstack/swift/git/commits/d69fa437cd7d4b7c92a62d3005399ffa57611551,d69fa437cd7d4b7c92a62d3005399ffa57611551,"Uses None instead of mutable dicts for default function arguments

Forgot to update dicts with changeset I4a89afad, which updated lists.

Change-Id: Ieca71b9c90ee5dae83a43f6851b6b8b2924bcb8e
Fixes: bug 1174809"
briancline,2013-04-30 16:07:34,https://api.github.com/repos/openstack/swift/git/commits/7bf0db6b759f28def422594b523b55a06d25a1d5,7bf0db6b759f28def422594b523b55a06d25a1d5,"Uses None instead of mutable lists for function param defaults

Addressing bug 1174809, changes use of mutable lists as as default
arguments and defaults them within the function. Otherwise, those
defaults can be unexpectedly persisted with the function between
invocations and erupt into mass hysteria on the streets.

To my knowledge there aren't known cases of the current use causing
specific issues, but even stylistically needs addressing to avoid
problems in the future. I couldn't find any comments or related
historical commit messages indicating the current use is meant to take
advantage of this behavior in Python.

Change-Id: I4a89afada08b2ce220724f585631a9e2072bf1bd
Fixes: bug 1174809"
clayg,2013-03-25 23:34:43,https://api.github.com/repos/openstack/swift/git/commits/34f5085c3e143a27d9f3c4980b5b04514d78e659,34f5085c3e143a27d9f3c4980b5b04514d78e659,"conf.d support

Allow Swift daemons and servers to optionally accept a directory as the
configuration parameter.  Directory based configuration leverages
ConfigParser's native multi-file support.  Files ending in '.conf' in the
given directory are parsed in lexicographical order.  Filenames starting with
'.' are ignored.  A mixture of file and directory configuration paths is not
supported - if the configuration path is a file behavior is unchanged.

 * update swift-init to search for conf.d paths when building servers
    (e.g. /etc/swift/proxy-server.conf.d/)
 * new script swift-config can be used to inspect the cumulative configuration
 * pull a little bit of code out of run_wsgi and test separately
 * fix example config bug for the proxy servers client_disconnect option
 * added section on directory based configuration to deployment guide

DocImpact

Implements: blueprint confd
Change-Id: I89b0f48e538117f28590cf6698401f74ef58003b"
gholt,2013-04-20 03:34:48,https://api.github.com/repos/openstack/swift/git/commits/00ab3d4f36a1e994698f7ab1ecada1cefa72e8db,00ab3d4f36a1e994698f7ab1ecada1cefa72e8db,"Included time inside trans_id

Including the time inside the trans_id can be very useful for knowing
which logs to scan. I made this so the trans_id will still be the
same length (the randomness of the remaining uuid4 should be enough
for this use). I also added a convenience function for retreiving the
time information from a trans_id.

If you're wondering why I just didn't use uuid1 that embeds the time,
it's because it also embeds uuid.getnode() which ""The first time this
runs, it may launch a separate program, which could be quite slow.""
We could supply our own getnode value, but then we have to guarantee
its uniqueness, yada yada yada.

Change-Id: Ie33caf1e839fd1a21b01a928a8b301126bef7396"
portante,2013-04-19 18:15:15,https://api.github.com/repos/openstack/swift/git/commits/2d42b373035ddc481f966204a9abb6c89bcbb9f3,2d42b373035ddc481f966204a9abb6c89bcbb9f3,"Add the max_clients parameter to bound clients

The new max_clients parameter allows one full control over the maximum
number of client requests that will be handled by a given worker for
any of the proxy, account, container or object servers.

Lowering the number of clients handled per worker, and raising the
number of workers can lessen the impact that a CPU intensive, or
blocking, request can have on other requests served by the same
worker.

If the maximum number of clients is set to one, then a given worker
will not perform another accept(2) call while processing, allowing
other workers a chance to process it.

DocImpact
Signed-off-by: Peter Portante <peter.portante@redhat.com>

Change-Id: Ic01430f7a6c5ff48d7aa349dc86a5f8ac463a420"
davidhIBM,2013-04-24 07:10:32,https://api.github.com/repos/openstack/swift/git/commits/0a75a9d509b807474252a624596611185d3e391e,0a75a9d509b807474252a624596611185d3e391e,"Improved autocreate testing

Increase testing coverage and make some of the test more accurate
(Some of the tests included too many responses from the account
servers that were not used by the test)

Change-Id: Ide2e0fcb89d5905e70d3111f7ac57b1cff23a99c
Fixes: Bug #1172152"
smerritt,2013-04-24 21:01:56,https://api.github.com/repos/openstack/swift/git/commits/813f7c9de67e58685a28be9845498c61478b3ada,813f7c9de67e58685a28be9845498c61478b3ada,"Make it easier to debug badly broken tests.

If you manage to break a proxy server so badly that it can't even
return headers, then in test/unit/proxy/test_server.py,
readuntil2crlfs() will spin forever, killing your laptop battery and
providing zero help figuring out what's wrong.

This test-only change makes it so that, should readuntil2crlfs() run
out of data before getting its two CRLFs, it raises an exception that
tells you what it did manage to get, and does so in a finite amount of
time.

Change-Id: Ieacd18ce7f4d35a4960100d5fc3a0f910cb406ac"
dpgoetz,2013-04-24 19:46:13,https://api.github.com/repos/openstack/swift/git/commits/449363653ed576ba6ab1f745749cfc9150ed9249,449363653ed576ba6ab1f745749cfc9150ed9249,"Container info memcache change broke ratelimiting.

Change-Id: I6379db52a75ed40080dd220f7fa72bcaffd0953c"
portante,2013-04-18 21:58:08,https://api.github.com/repos/openstack/swift/git/commits/d62a2a832e201b29830cf9852e1883bb99e4c65d,d62a2a832e201b29830cf9852e1883bb99e4c65d,"Push fallocate() down into mkstemp(); use known size

Towards defining the DiskFile class, or something like it, as an API
for the low level disk acesses, we push the fallocate() system call
down into the DiskFile.mkstemp() method. This allows another
implementation of DiskFile to decide to use or not use fallocate().

Change-Id: Ib4d2ee1f971e4e20e53ca4b41892c5e44ecc88d5
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
zaitcev,2013-04-22 17:31:21,https://api.github.com/repos/openstack/swift/git/commits/93a737b406ef7d8520ed25dbc381a02dc7f4e3ee,93a737b406ef7d8520ed25dbc381a02dc7f4e3ee,"Add auth_version to dispersion.conf.5

The lack of any documentation for the auth_version was observed
by Red Hat QA, see rhbz#955247.

Change-Id: I0afc04d848082a80480724bdbf99031e4b99e38e"
davidhIBM,2013-04-22 16:32:18,https://api.github.com/repos/openstack/swift/git/commits/04a3ba43ae9346a640ba44f130d90c591729e403,04a3ba43ae9346a640ba44f130d90c591729e403,"Fixing /etc/swift.conf-sample to include
swift_hash_path_prefix

Change-Id: I60f5f3d4083937a03ecb7ed531185c617ea08016"
portante,2013-04-19 04:10:38,https://api.github.com/repos/openstack/swift/git/commits/960f01b4ba502c01f3433abe37fa95b1e60450f4,960f01b4ba502c01f3433abe37fa95b1e60450f4,"Add an explicit unit test for handling content-length: 0

Change-Id: I3568d4dc1900e6ddb4860589ca6a7b7039cc8c2d
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
skraynev,2012-12-17 11:39:25,https://api.github.com/repos/openstack/swift/git/commits/ea7858176b00ab99c22b506a2658e8199cbec8cf,ea7858176b00ab99c22b506a2658e8199cbec8cf,"Implementation of replication servers

Support separate replication ip address:
- Added new function in utils. This function provides ability
  to select separate IP address for replication service.
- Db_replicator and object replicators were changed.
  Replication process uses new function now.

Replication network parameters:
- Replication network fields (replication_ip, replication_port)
  support was added to device dictionary in swift-ring-builder script.
- Changes were made to support new fields in search, show and set_info
  functions.

Implementation of replication servers:
- Separate replication servers use the same code as normal replication
  servers, but with replication_server parameter = True.  When using a
  separate replication network, the non-replication servers set
  replication_server = False.  When there is no separate replication
  network (the default case), replication_server is not included in the config.

DocImpact
Change-Id: Ie9af5bdcdf9241c355e36053ca4adfe49dc35bd0
Implements: blueprint dedicated-replication-network"
vitoordaz,2013-04-21 21:23:39,https://api.github.com/repos/openstack/swift/git/commits/7f534fac389877e32c593e5c78edfaeca8e68420,7f534fac389877e32c593e5c78edfaeca8e68420,"fix dict duplicated key
remove duplicated key from swift-bench bin; and also add .idea to gitignore

Change-Id: I31360489716d03324b8d2bb1c51e282393069c13"
gholt,2013-04-20 04:16:57,https://api.github.com/repos/openstack/swift/git/commits/cd8af3f8f1a3762eb1591cd4b312b15d01675b74,cd8af3f8f1a3762eb1591cd4b312b15d01675b74,"Made colons quote-safe in logs; mainly for ipv6

Previous logging made a mess of ipv6 addresses. This just makes the
colon quote-safe so it passes through unscathed. The logs will still
be backward compatible because unquote don't care:

    $ python
    >>> from urllib import quote, unquote
    >>> quote('2001:db8:85a3:8d3:1319:8a2e:370:7348')
    '2001%3Adb8%3A85a3%3A8d3%3A1319%3A8a2e%3A370%3A7348'
    >>> unquote(quote('2001:db8:85a3:8d3:1319:8a2e:370:7348'))
    '2001:db8:85a3:8d3:1319:8a2e:370:7348'
    >>> quote('2001:db8:85a3:8d3:1319:8a2e:370:7348', '/:')
    '2001:db8:85a3:8d3:1319:8a2e:370:7348'
    >>> unquote(quote('2001:db8:85a3:8d3:1319:8a2e:370:7348', '/:'))
    '2001:db8:85a3:8d3:1319:8a2e:370:7348'

Change-Id: Ia13a9bc8a320cde5c56034a7f0b645913428bf21"
gholt,2013-04-19 09:43:31,https://api.github.com/repos/openstack/swift/git/commits/f63dc07b9da568c4bbe206278334fa1fb8a13be9,f63dc07b9da568c4bbe206278334fa1fb8a13be9,"Extra safety on account-level DELETE

I just noticed tonight when adding a bunch of stuff to Swiftly that
the Bulk Delete middleware uses an account-level DELETE request,
albeit with a query parameter of bulk-delete. But, one typo and,
assuming the cluster supports it and you have access, whoops, you
just marked the account for deletion!

I put a bit of extra safety on the account deletion by requiring it
to have an empty query string.

Change-Id: Ib5df11193b04eff69d14185bd9d0607169131e7f"
portante,2013-04-18 18:31:58,https://api.github.com/repos/openstack/swift/git/commits/dec517e3497df25cff70f99bd6888739d410d771,dec517e3497df25cff70f99bd6888739d410d771,"Drop cache after fsync

Drop the cache (fadvise) after calling fsync to avoid redundant work
in the kernel visiting pages that are dirty. By dropping cache after
fsync(), the pages will be clean so can be easily removed from the
cache.

Change-Id: I3013d2ac1e27bbe43e58a81638d04805f5e2ae6e
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
dpgoetz,2013-04-17 14:03:46,https://api.github.com/repos/openstack/swift/git/commits/d2a4f75a9533e269e141b7b120096c87f60c69ba,d2a4f75a9533e269e141b7b120096c87f60c69ba,"fix slo docs

Change-Id: I49f8c272457547d8aae853986573549828d2503a"
gholt,2013-04-15 22:12:23,https://api.github.com/repos/openstack/swift/git/commits/c354db215861713b817418064182e2e3c8e94922,c354db215861713b817418064182e2e3c8e94922,"Expirer now quotes names when deleting

Change-Id: I5c615c6f32967510f09b783b1ba7089119f1d8bd"
dpgoetz,2013-04-11 19:52:33,https://api.github.com/repos/openstack/swift/git/commits/3f21e143989ed9cb7a411b9421cd2a4a0ac03e6e,3f21e143989ed9cb7a411b9421cd2a4a0ac03e6e,"slobjects can not be made of other slobjects

Change-Id: Ib500f5fc2e890c3d23641350815a910168bcd543"
skraynev,2013-04-11 14:05:00,https://api.github.com/repos/openstack/swift/git/commits/5afd0c3bb616c3ea01e5510768ee53198513feea,5afd0c3bb616c3ea01e5510768ee53198513feea,"Refactoring format_device function

* Algorithm format_device was changed for simplicity extension new
  ip addresses parameters.
* Some prints outputs was replacement by function format_device.

Change-Id: I8565d42fcdb62eeb398c4432bb6f499c27c05cf6"
notmyname,2013-04-12 05:55:49,https://api.github.com/repos/openstack/swift/git/commits/08ce7e1dede5ff9255addbdbad8c88f606a0dad6,08ce7e1dede5ff9255addbdbad8c88f606a0dad6,"fix probe tests to work in a VM using mount_check

If mount_check is true (ie an SAIO with ""real ""devices, not loopback),
then the servers will correctly return 507 when given a nonsense path.
The first element is treated as a drive path, and that path isn't
mounted. This patch adds 507 as a valid status response to the server
check.

Change-Id: I1d1bb0ab78fd9ea17323635da7e686182fbdbf13"
notmyname,2013-04-11 17:42:31,https://api.github.com/repos/openstack/swift/git/commits/18ef0a7bc57e9ac5a35fce63a5eee55b29258fa0,18ef0a7bc57e9ac5a35fce63a5eee55b29258fa0,"fix email address

Change-Id: I784a9a5b45fd39420543ff0fb56b0f6d04684f3a"
skraynev,2013-04-11 13:11:10,https://api.github.com/repos/openstack/swift/git/commits/d7873b5ce38afa252204c792afb65064e35c3bbf,d7873b5ce38afa252204c792afb65064e35c3bbf,"Correcting output of swift-ring-builder

Indent swift-ring-builder output was changed according
with old style (before implementation of region tier).

Change-Id: I0d1cc7acdc5baf86f343745aea6fc2120838fd36"
davidhIBM,2013-04-10 15:14:21,https://api.github.com/repos/openstack/swift/git/commits/537af54970ed16b822d5c93dbf38e52218bb78a4,537af54970ed16b822d5c93dbf38e52218bb78a4,"Account Quota Correction

account_quota middleware fails to check if account_info exists
after retrieving it.

Change-Id: I1aa492d3bd713a6bf27e18ef4ec2e29f4cfb694d
Fixes: Bug #1167389"
btorch,2013-03-25 16:27:36,https://api.github.com/repos/openstack/swift/git/commits/1126e59c1242a8ea01ead5fe4b05330e47559fa5,1126e59c1242a8ea01ead5fe4b05330e47559fa5,"Adding a new optional variable called trans_id_suffix

The trans_id_suffix (default is empty) would be appended to the swift transaction
id allowing one to easily figure out from which cluster that X-Trans-Id
belongs to. This is very useful when one is managing more than one swift
cluster. Also updated sample and manpage to reflect the changes.

Change-Id: Icdf63643e9c1bde36a9ef5e3f41ee9fb20e55f5d"
davidhIBM,2013-03-22 07:00:40,https://api.github.com/repos/openstack/swift/git/commits/caa01cd81e7dae6c41c1ffb8a69aed6ff70777cf,caa01cd81e7dae6c41c1ffb8a69aed6ff70777cf,"objects md5-collisions

This patch identifies md5 collisions on objects and sends a 403
from the object server.

Credits for originating this fix are to Michael Factor.

Change-Id: I4f1b32183e2be6bbea56eaff86b9a4c7f440804a
Fix: Bug #1157454"
gholt,2013-04-06 01:35:58,https://api.github.com/repos/openstack/swift/git/commits/d79a67ebf6cbfbe13d2321832f783a57516b67de,d79a67ebf6cbfbe13d2321832f783a57516b67de,"Refactored lists of nodes to contact for requests

Extensive refactor here to consolidate what nodes are contacted for
any request. This consolidation means reads will contact the same set
of nodes that writes would, giving a very good chance that
read-your-write behavior will succeed. This also means that writes
will not necessarily try all nodes in the cluster as it would
previously, which really wasn't desirable anyway. (If you really want
that, you can set request_node_count to a really big number, but
understand that also means reads will contact every node looking for
something that might not exist.)

* Added a request_node_count proxy-server conf value that allows
  control of how many nodes are contacted for a normal request.

In proxy.controllers.base.Controller:

* Got rid of error_increment since it was only used in one spot by
  another method and just served to confuse.

* Made error_occurred also log the device name.

* Made error_limit require an error message and also documented a bit
  better.

* Changed iter_nodes to just take a ring and a partition and yield
  all the nodes itself so it could control the number of nodes used
  in a given request. Also happens to consolidate where sort_nodes is
  called.

* Updated account_info and container_info to use all nodes from
  iter_nodes and to call error_occurred appropriately.

* Updated GETorHEAD_base to not track attempts on its own and just
  stop when iter_nodes tells it to stop. Also, it doesn't take the
  nodes to contact anymore; instead it takes the ring and gets the
  nodes from iter_nodes itself.

Elsewhere:

* Ring now has a get_part method.

* Made changes to reflect all of the above.

Change-Id: I37f76c99286b6456311abf25167cd0485bfcafac"
dpgoetz,2013-04-03 21:15:26,https://api.github.com/repos/openstack/swift/git/commits/35d2cec919425d97d97724700834708d0f4f0c6e,35d2cec919425d97d97724700834708d0f4f0c6e,"Bug in SLO with multipart-manifest=get content type.

In trying to override the content-type for the convenience
call I broke COPYs and POSTs for SLO. yaaa...

Change-Id: Ifbcda6d2dd0ee43e43d62e58a90301e7afd05e27"
litong01,2013-03-26 18:56:44,https://api.github.com/repos/openstack/swift/git/commits/f1aefcbc13a3e3208e42e4c26933bb63b54acce6,f1aefcbc13a3e3208e42e4c26933bb63b54acce6,"directory /var/cache/swift /srv/node should be created.

For multiple node swift cluster setup, these directories should be
created in the setup steps. Otherwise, when start up storage servers
there will be errors. The error messages won't tell if it is because
of missing the directory.

Change-Id: I67d74abb7743b76739b5e747d6dcbd3214b00774
Fixes: bug #1158519"
gholt,2013-04-04 16:44:22,https://api.github.com/repos/openstack/swift/git/commits/1cb952a95816da98799dff714b401025d4d87614,1cb952a95816da98799dff714b401025d4d87614,"Allow a configurable set of TempURL methods

Folks have actually been asking for this. I think they're sending a
DELETE TempURL to someone way ahead of time and the someone issues it
when they're ready. Honestly, I'm not entirely sure of the use case,
but having the set of methods configurable wouldn't hurt.

Change-Id: Ibdb48f8a72077b045eeedddfae4c0a1f56098d7a"
greglange,2013-04-04 18:45:24,https://api.github.com/repos/openstack/swift/git/commits/30e88fd676f955abee8aab5d24d91df5e4472e4a,30e88fd676f955abee8aab5d24d91df5e4472e4a,"add unit tests for db_replicator

Change-Id: I9002fa193a51f40523e7936e3117a2f3f2b2f7f8"
cschwede,2013-04-03 08:29:50,https://api.github.com/repos/openstack/swift/git/commits/e5cd78d9026541e7381c1cdd7b1ddd6176c6102d,e5cd78d9026541e7381c1cdd7b1ddd6176c6102d,"Update documentation for account_quota middleware

Change-Id: I3dc7930ee2a1eb26b1f60e83fce2bc1bea0a8b0f"
dukov,2013-04-02 11:52:08,https://api.github.com/repos/openstack/swift/git/commits/02beacf0daffdb15f421a846e9cf33d359a482ca,02beacf0daffdb15f421a846e9cf33d359a482ca,"Change setup.cfg style.

Change-Id: I466470237ddd317740eb99bd55af7e7a50270ae3
Fixes: bug #1163258"
dpgoetz,2013-04-01 20:16:46,https://api.github.com/repos/openstack/swift/git/commits/3a8f314fdc3a10bccf3a5822517d78afb32e86fc,3a8f314fdc3a10bccf3a5822517d78afb32e86fc,"SLO multipart-manifest=get returns incorrect Content-Type

Change-Id: I657c9f7a7555d90ccfa7e6ff0f5f3fcbd7eada1d"
dpgoetz,2013-04-01 17:19:35,https://api.github.com/repos/openstack/swift/git/commits/7c0b9a742420734aa4135093c0b712c74944ba7a,7c0b9a742420734aa4135093c0b712c74944ba7a,"Dynamic Large Object sleeps too much

DLO is supposed to sleep 1 second per segment after 10 (default) initial
segments are loaded to prevent abuse of the system. Currently, if the user
did a range request to the 11th segment the 1 sec delay would start immediately
on the 11th segment because the skipped segments were counted as initial
segments. This path fixes that.

Change-Id: I53bbc24af54921ddc04d9cb3b704366b51b3f740"
notmyname,2013-03-29 04:01:49,https://api.github.com/repos/openstack/swift/git/commits/602bf524b8db31171e70c6a94a66c025d20f021c,602bf524b8db31171e70c6a94a66c025d20f021c,"updated AUTHORS and CHANGELOG

These updates are to reflect the changes that have been
backported into the 1.8.0 release candidate.

Change-Id: I9b2abb9809fa6715a427dc0dbe0474aba140a596"
smerritt,2013-03-28 19:03:58,https://api.github.com/repos/openstack/swift/git/commits/aa716dd9b8d83dd0b6c4b8ff92564268345312e9,aa716dd9b8d83dd0b6c4b8ff92564268345312e9,"Fix container-server sorting for manifest listings.

The current code will always contact the container server for the
first replica of the container; this fixes it to use the same
backend-sort as all the other places in the proxy that talk to
backends.

Change-Id: If1c168b95bfc5cd120036869f3066549b7a1000a"
greglange,2013-03-26 20:47:15,https://api.github.com/repos/openstack/swift/git/commits/7920cbd80a121bcf44c85d9a02ebeb985c91b4e6,7920cbd80a121bcf44c85d9a02ebeb985c91b4e6,"fixes some problems pyflakes complains about

Change-Id: I1eb16fa595b0b1d97ae14279b8aa25bd2740f511"
greglange,2013-03-26 20:42:26,https://api.github.com/repos/openstack/swift/git/commits/44f00a23c1c6b7141ca78d671fe8ad4c463d29ab,44f00a23c1c6b7141ca78d671fe8ad4c463d29ab,"fixed some minor things in tests that pyflakes complained about

Change-Id: Ifeab56a964630bcf941e932fcbe39e6572e62975"
dpgoetz,2013-03-26 16:40:03,https://api.github.com/repos/openstack/swift/git/commits/d2d9a15ddf18ee6639829a2454b81c6876885f90,d2d9a15ddf18ee6639829a2454b81c6876885f90,"Fixing SLO range requests

Change-Id: I355e99c971cfe8f7f8dedcd8f9f08c97079863cc"
klrmn,2013-03-21 02:26:45,https://api.github.com/repos/openstack/swift/git/commits/60489cdedd9f26d3b08851820a883ceea004aabc,60489cdedd9f26d3b08851820a883ceea004aabc,"additional unit test coverage for container/server.py

Change-Id: Id510cceb88f062f921450a5d25d7c97b7ca5943b"
davidhIBM,2013-03-19 23:35:41,https://api.github.com/repos/openstack/swift/git/commits/a979c8007bf7376541c932c3e91d5ba1a95f4481,a979c8007bf7376541c932c3e91d5ba1a95f4481,"Add support for Hash Prefix

A new configuration parameter is added to /etc/swift/swift.conf
[swift-hash]
swift_hash_path_prefix = 'random unique string'

New installations are advised to set this parameter to a random secret,
which would not be disclosed ouside the organization.
The same secret needs to be used by all swift servers of the same cluster.

Existing installations should set this parameter to an empty string
(the default)

DocImpact

Fixes: Bug #1157454

Change-Id: I63b10d0b7d6dd3f74e0f10bb41b5f240fa03578a"
dpgoetz,2013-03-21 15:13:00,https://api.github.com/repos/openstack/swift/git/commits/92e877ae51d3bbcb21278426e07eefe703c6ad30,92e877ae51d3bbcb21278426e07eefe703c6ad30,"Fix bugs in bulk and slo and small doc change.

Added 411 responses in bulk and slo when needed.

Make X-Static-Large-Object an illegal header with slo installed- somehow
that got lost with some refactor I did.

Change-Id: I986c1656658f874172860469624118cc63bff9bc"
litong01,2013-03-21 13:45:13,https://api.github.com/repos/openstack/swift/git/commits/c1dfe891e76b2b8ebb99efb71cf61aa81110348e,c1dfe891e76b2b8ebb99efb71cf61aa81110348e,"instruction command was not documented in right format.

Instructions for a Multiple Server Swift Installation (Ubuntu) doc
for creating /var/run/swift and changing owner command were not
using the right format. Missing two colons.

Change-Id: Ie23007a0da498373fbfb137c7edb3d80813c6ba5
Fixes: bug #1158310"
smerritt,2013-03-20 23:56:52,https://api.github.com/repos/openstack/swift/git/commits/70aa7f90537916d374f57d8aafd408506f345e87,70aa7f90537916d374f57d8aafd408506f345e87,"Fix misspelled variable.

Change-Id: I243de23d5acee135113dc81fca6244d651a2d9a8"
dpgoetz,2013-03-19 18:48:14,https://api.github.com/repos/openstack/swift/git/commits/1b150749f7a47f40f346213ea901fd439838c478,1b150749f7a47f40f346213ea901fd439838c478,"fix stupid bug with bulk delete max items

Change-Id: I52160b5e7480112d536c45dd4b0b10a808adcdcd"
pyKun,2013-03-18 05:15:09,https://api.github.com/repos/openstack/swift/git/commits/7dd966192a43f9937c3e9ac576708447634cdc00,7dd966192a43f9937c3e9ac576708447634cdc00,"Use role in insensitive case in keystoneauth.

Using insensitive case could tolerate human error. For example,
user maybe set like this ""operator_roles = Admin, swiftoperator""

- also fix a mistake in test, ['admin'] is correct value for roles, not
  'admin' (it will be looped as ['a', 'd', 'm', 'i', 'n'])
- add test for insensitive cases

Fixes: bug #1013120
Change-Id: I56d71da8bc503e48e92dd743692ba6fc237f029e"
notmyname,2013-03-19 05:30:04,https://api.github.com/repos/openstack/swift/git/commits/62278171b99664a19dfa55d9e0acbb2be38f692c,62278171b99664a19dfa55d9e0acbb2be38f692c,"version bump for 1.8.1

first commit for openstack havana

Change-Id: If9fe0fb73c676d5f6d1ed53ccfa300faa0aad8db"
notmyname,2013-03-18 04:51:04,https://api.github.com/repos/openstack/swift/git/commits/9e777bd233c350edd33d09a47b1ec1e5924d3238,9e777bd233c350edd33d09a47b1ec1e5924d3238,"AUTHORS/CHANGELOG uploades for the next release

also bumped the dev version to 1.8.0 to reflect the
current dev target

Change-Id: Ib05cb4f0616c0d297ce5cd7073af766c7a4300d9"
klrmn,2013-03-19 01:01:16,https://api.github.com/repos/openstack/swift/git/commits/a5ba0d5edc3633557506d4abb160c39cde834d89,a5ba0d5edc3633557506d4abb160c39cde834d89,"increase unit test coverage on account server

Change-Id: Id728a17180f4ee2e31edaef0af6d26446b6014c2"
litong01,2013-03-18 17:57:19,https://api.github.com/repos/openstack/swift/git/commits/68355d7ea5e4e752a8493c42a5ca04adec98e621,68355d7ea5e4e752a8493c42a5ca04adec98e621,"Instruction for multi node setup misses /var/run/swift creation

Multiple Server Swift Installation (Ubuntu) instruction does not
indicate that the directory /var/run/swift needs to be created.
That directory actually needs to be created and the ownship needs
to be changed to the user/group which swift service runs under.

This patch will fix the document and gives the steps how to create
the directory and set the ownership right. It also gives instruction
on how the script can be added so that swift services can be resarted
after system reboots.

Change-Id: Id61aa67cc0d6f66d749701e6ea824b1ff3b2c478
Fixes: bug #1156631"
smerritt,2013-03-17 22:07:20,https://api.github.com/repos/openstack/swift/git/commits/d42a78a3aa138ca14e1b06555ae649971799e618,d42a78a3aa138ca14e1b06555ae649971799e618,"Basic ring builder validation.

This prevents people from creating bogus ring builder files.

Example: ""swift-ring-builder object.builder create 33 0.9 -4"".

Fixes bug 924577.

Change-Id: I7bfc04f7fa5f55f70a4eaae96c414f6b2872e283"
litong01,2013-03-18 13:04:13,https://api.github.com/repos/openstack/swift/git/commits/b530de2ad55c7ff6982237a9c29219d5cae44742,b530de2ad55c7ff6982237a9c29219d5cae44742,"swift-ring-builder blows up when not supported command requested.

swift-ring-builder uses outdated unbounded class method to handle
not supported command. It worked for python 2.6 or older but not
for python 2.7 or newer. This patch fixes the problem.

Change-Id: I7dbc681ef6be44f6d79ff93189ccca13c51eab74
Fixes: bug #1154882"
smerritt,2013-03-17 22:58:06,https://api.github.com/repos/openstack/swift/git/commits/d88d12b12032009087b30b5eade332f1b2ea9ee8,d88d12b12032009087b30b5eade332f1b2ea9ee8,"Small clarification to swift-recon section of admin guide.

Apparently the use of port 6030 was causing some confusion.

Fixes bug 1095474.

Change-Id: I0cc71f4733ad91694e015a9b75c3eda080aca6fb"
pyKun,2013-03-16 23:30:00,https://api.github.com/repos/openstack/swift/git/commits/5c3f75ba6adb160bb61431b77d399b123a2a7546,5c3f75ba6adb160bb61431b77d399b123a2a7546,"Add x-remove-versions-location for feature: disable versioning

We can set x-versions-location empty to remove this header in API, but
to keep consistent, we should allow x-remove-versions-location too. The
usage is post ""x-remove-versions-locaion: x"", just like ACL remove
headers.

Fixed: bug #1107592

Change-Id: I1271eec6401d4a0e8c1a7c2d63aeb8dfef00bf6d"
pyKun,2013-03-16 17:59:40,https://api.github.com/repos/openstack/swift/git/commits/45dda5e3565d1a4c7dc030bcf674b681996b9cb2,45dda5e3565d1a4c7dc030bcf674b681996b9cb2,"Change logger name to module itself instead of root

Using root logger will make public module log failed by unknow keyword.
Just change the logger name to module itself could dismiss this impact.
And disable logger.propagate could prevent double outputing.

Change-Id: I18696d124ebac9ca970d502558972e51de759097
Fixes: bug #1105133"
akscram,2013-03-16 08:16:54,https://api.github.com/repos/openstack/swift/git/commits/e56832c138bcfe5d7089300c09e707e4ba502121,e56832c138bcfe5d7089300c09e707e4ba502121,"Fix format device

Change-Id: Icef35175682c11a406ef85accc6c6e1acbf89f4d"
smerritt,2013-03-15 01:49:30,https://api.github.com/repos/openstack/swift/git/commits/229ba53a19716e4350514f9861dc474c05bb8691,229ba53a19716e4350514f9861dc474c05bb8691,"Fix crash in swift-ring-builder's list_parts command.

If you run list_parts against a builder that has never been
rebalanced, you'd get a crash. Now you don't.

To reproduce:

$ swift-ring-builder foo.builder create 8 3 1
$ swift-ring-builder foo.builder add r1z1-1.2.3.4:6000/sda 100
$ swift-ring-builder foo.builder list_parts z1

Change-Id: Ic3edffab0c5c2e9551a2f89ddb881153f0b07db7"
dpgoetz,2013-03-13 20:43:19,https://api.github.com/repos/openstack/swift/git/commits/f6e29b81d03508deabd43a48e5e417d8ba9a7f1a,f6e29b81d03508deabd43a48e5e417d8ba9a7f1a,"Remove check for valid Origin for the ""actual request"".

The only place in the spec that I could see the Origin being checked was
during the pre-flight OPTIONS request. If it gets to the actual request
let auth decide. Please correct me if this is wrong.

Change-Id: Ic31b71746ec056091c7778ebff3db7becc32bd9c"
smerritt,2013-03-13 20:34:19,https://api.github.com/repos/openstack/swift/git/commits/35acd5912ff9478b18c0466fac1184fa3cd6600a,35acd5912ff9478b18c0466fac1184fa3cd6600a,"Fix swift-ring-builder's list_parts command.

I broke it in 7548cb9 when a ring's replica count changed from an int
to a float.

Change-Id: I49fa7e2961a09daad0c96e19cf1e39fec248d998"
smerritt,2013-03-05 01:05:43,https://api.github.com/repos/openstack/swift/git/commits/ebcd60f7d92c11bd176a9f4c05903d11d64353f1,ebcd60f7d92c11bd176a9f4c05903d11d64353f1,"Add a region tier to Swift's ring.

The region is one level above the zone; it is intended to represent a
chunk of machines that is distant from others with respect to
bandwidth and latency.

Old rings will default to having all their devices in region 1. Since
everything is in the same region by default, the ring builder will
simply distribute across zones as it did before, so your partition
assignment won't move because of this change. If you start adding
devices in other regions, of course, the assignment will change to
take that into account.

swift-ring-builder still accepts the same syntax as before, but will
default added devices to region 1 if no region is specified.

Examples:

$ swift-ring-builder foo.builder add r2z1-1.2.3.4:555/sda

$ swift-ring-builder foo.builder add r1z3-1.2.3.4:555/sda

$ swift-ring-builder foo.builder add z3-1.2.3.4:555/sda

Also, some updates to ring-overview doc.

Change-Id: Ifefbb839cdcf033e6c9201fadca95224c7303a29"
ttx,2013-03-13 10:35:42,https://api.github.com/repos/openstack/swift/git/commits/b3732787ea7fd2db84bdca1ab6edd0d835d6deda,b3732787ea7fd2db84bdca1ab6edd0d835d6deda,"Add missing CONTRIBUTING.md to source tarball

Fixes MANIFEST.in to include missing CONTRIBUTING.md into source
code tarballs.

Change-Id: I81876adad14e0f1b2211d39ec6471e35f5464120"
gholt,2013-03-12 19:15:35,https://api.github.com/repos/openstack/swift/git/commits/f6d1fa1c150affd49abe15d3483e629e8ba808b6,f6d1fa1c150affd49abe15d3483e629e8ba808b6,"Fixed bug with account_info

There was a bug where account_info wasn't converting the
container_count value to an int. Causes max container count cap to
get hit pretty quick since '0' > 0.

Change-Id: Ibfc6eebbff5a00aaebb47e9731dd053b60e3caa4"
zaitcev,2013-03-11 00:52:10,https://api.github.com/repos/openstack/swift/git/commits/35e07e2982e129b2f5d225a1de3fdc36c520053e,35e07e2982e129b2f5d225a1de3fdc36c520053e,"Permit functional tests against Swift with Keystone

While poking at such problems with authentication other than swauth
it was useful to allow stock functional tests running back-to-back
at two clusters, with tempauth and Keystone.

When running the legacy tests, this version packs account into user
the way it was down previously. This way we do not need to repack
them before every call to get_auth. The downside is additional work
to be done when setting ACLs.

Change-Id: Ieb1d9227cb88977ecd2c39825039bc4be8afae0b"
cschwede,2013-03-08 18:33:27,https://api.github.com/repos/openstack/swift/git/commits/157c3c91eef6ec06f09a1ae0a11d9644faafb6ec,157c3c91eef6ec06f09a1ae0a11d9644faafb6ec,"Add tests and doc entry for request.environ[reseller_request]

The recent account_quotas (https://review.openstack.org/23434)
patch added a new setting request.environ[reseller_request].
This patch adds tests for tempauth and keystoneauth as well as
an updated overview_auth.rst.

Change-Id: Icdb7ec9948ae7424b0721fc51a143782b2fdc5a6"
pyKun,2013-03-08 19:13:18,https://api.github.com/repos/openstack/swift/git/commits/cb69dc881a44e200b2abef9d8e30ded0f2a0aa99,cb69dc881a44e200b2abef9d8e30ded0f2a0aa99,"Give friendly notification in swift-get-nodes

Hard coding of '/srv/node' maybe drive to some errors. But it seems
unfixable (please see talks in bug report). To avoid erros as we can,
showing a friendly notification to let user set their own device
location works better than hard coding directly.

Change-Id: I45d749dd52af8d3b051dfe98dbb9d71a5a374f97
Fixes: bug #907908"
davidhIBM,2013-02-26 22:49:51,https://api.github.com/repos/openstack/swift/git/commits/8b140033f01333fbd6d41e2946db949ab6f92599,8b140033f01333fbd6d41e2946db949ab6f92599,"Improved container-sync resiliency

container-sync now skips faulty objects in the first and second rounds.
All replicas try in the second round.
No server will give up until the faulty object suceeds

Fixes: bug #1068423

Change-Id: I0defc174b2ce3796a6acf410a2d2eae138e8193d"
cschwede,2013-03-04 16:53:44,https://api.github.com/repos/openstack/swift/git/commits/28c75db0e7103603e89e0a5ba3c32b7505e4d89e,28c75db0e7103603e89e0a5ba3c32b7505e4d89e,"Account quotas

Add a new middleware implementing account quotas.

This middleware blocks write requests (PUT, POST) if a given quota (in bytes)
is exceeded while DELETE requests are still allowed.

Quotas are stored in the x-account-meta-quota-bytes metadata entry.
Write requests to this metadata setting are only allowed for resellers.

Change-Id: I57fd7c6209f34cc79d4bab72d500d43ba2a62083"
smerritt,2013-03-07 22:43:12,https://api.github.com/repos/openstack/swift/git/commits/d9fb84d209b6d287631061d617364f6eea976766,d9fb84d209b6d287631061d617364f6eea976766,"Fix some unreadable code.

I thought it was readable back when I wrote it; turns out it's
not. Oops.

Change-Id: I1e1020935356522d6e07409aa867a5ffc8919787
Bonus: remove unused import."
redbo,2013-02-27 23:26:27,https://api.github.com/repos/openstack/swift/git/commits/0219b08b465365a02b7948c4405a3759486cfc95,0219b08b465365a02b7948c4405a3759486cfc95,"simplify the chexor function

Replace all that map(operator) nonsense.

It changes the error raised on invalid hashes, but we don't handle that
anywhere, and it shouldn't ever happen in real life.

Change-Id: Ib8cb549fac05e0b2725b4ea295326ac0c5e1f035"
davidhIBM,2013-03-04 21:38:48,https://api.github.com/repos/openstack/swift/git/commits/40782ed20c5b1760984b311db53e4b5707adb353,40782ed20c5b1760984b311db53e4b5707adb353,"Support tests for Apache

Add support for functional tests that work with Apache web front end

Change-Id: I72358a12016eeccc842d834461dbebaa188aa117
Implements: blueprint wsgi-application-interface"
Frostman,2013-02-01 18:50:21,https://api.github.com/repos/openstack/swift/git/commits/7d5095c12297bf44ecb38d4ef589df746c86cc37,7d5095c12297bf44ecb38d4ef589df746c86cc37,"Support listing endpoints for an object.

Implements blueprint list-endpoints.

DocImpact: new middleware list_endpoints.

Change-Id: I0c4911ff726abd4cb8ce2b6245c99786ad46b410"
smerritt,2013-03-05 23:22:41,https://api.github.com/repos/openstack/swift/git/commits/71a20d04ccac24b37b23fba87063e74e802c08fc,71a20d04ccac24b37b23fba87063e74e802c08fc,"Fix misspelled variable name

Change-Id: Ied6ed3cad16e9797df73a05f3df3ac9cc64299e0"
smerritt,2013-03-05 21:19:04,https://api.github.com/repos/openstack/swift/git/commits/27dcaf26365f9fac244f1b82ca6113913426fa6a,27dcaf26365f9fac244f1b82ca6113913426fa6a,"Spread handoffs out better around zones.

Before, you'd get your 3* primary nodes in 3 different zones, and then
get_more_nodes would give you everything it could from a non-primary
zone, and then finish up with stuff from the primary zones. It would
sort of look like this:

P: device in a primary node's zone
N: device not in a primary node's zone

PPPNNNNNNNNNNNNNNNNNNN...NNNNNNNNNPPP...PPPPPP

(The first three Ps are the primary nodes; they don't actually come
out of get_more_nodes(), but they're included for clarity.)

Now, the first few handoffs from get_more_nodes are in non-primary
zones, but only one per zone, and then the rest of the handoffs ignore
zones. It's still sampling the ring, so it's still taking weights into
consideration, but the zone distribution is more even early in the
handoff chain. It looks like this, assuming 10 zones:

P: device in a primary node's zone
N: device not in a primary node's zone
D: zone doesn't matter

PPPNNNNNNNDDDDDDDDDDD...DDD

* or whatever your replica count is

Change-Id: I31d2a2bc2cd6038386a2df85cd4fa37ccf2f650e"
litong01,2013-03-05 16:58:42,https://api.github.com/repos/openstack/swift/git/commits/7fd4323a6930a789a8cdbd23fef82ff2a1f3fb6e,7fd4323a6930a789a8cdbd23fef82ff2a1f3fb6e,"David Hadas email address has been changed.

Change-Id: Ic3e9ad50f123eecb4abbe91340b0acff4a2d580c"
gholt,2013-03-04 08:52:24,https://api.github.com/repos/openstack/swift/git/commits/e064ba1915533d97bea827a9d3876169e5882304,e064ba1915533d97bea827a9d3876169e5882304,"Updated get_more_nodes algorithm

The handoff nodes will try to be in zones other than the primary
zones, will take into account the device weights, and will usually
keep the same sequences of handoffs even with ring changes.

On a real ring test the old get_more_nodes placed data mostly evenly
across zones, which is a problem for differently weighted zones. But
the real problem was that the extra partitions given to each device
was 0% to 0.77% with only 46.05% of the candidate devices getting
anything. Some of the devices increased in effective weight over 50%
in the test.

The new get_more_nodes placed closer to what the zone weights were
and the extra partitions given to each device was 0% to 0.24% with
90.58% of the candidate devices getting something. The worst off
device only increased in effective weight by 10.71%.

Change-Id: Iffb133a22db69074acaa2b90854cbfa92e4c2b9e"
dpgoetz,2013-02-13 20:31:55,https://api.github.com/repos/openstack/swift/git/commits/5d73da158bc264df6b63d703d286d8d8b657fec6,5d73da158bc264df6b63d703d286d8d8b657fec6,"Static Large Object Support

DocImpact

Change-Id: I7edaa5e44208ab451f7f7566b64bb571b8eea1f9"
gholt,2013-02-25 02:25:58,https://api.github.com/repos/openstack/swift/git/commits/c4c66d81bdf41d7d509ddeae5a03a2b00ff26cc8,c4c66d81bdf41d7d509ddeae5a03a2b00ff26cc8,"TempURL filename options; bug fixes

- Prior to this commit, a Content-Disposition header was always set
  on responses to GET requests, with the filename based on the object
  name. Now, the header will only be set for 2xx responses and the
  filename can be overridden with a filename query parameter on the
  request.

- Fixed a bug where all query parameters on the request were being
  passed down the WSGI pipeline. Now, just the query parameters
  useful in log-based debugging are included. This becomes important
  with things like the Bulk middleware that act upon query
  parameters.

- Fixed bug where the Content-Disposition header wasn't following RFC
  spec.

DocImpact

Change-Id: I66ad809321dcdd03444324973c8b76869e3b0c8e"
Jian-Zhang,2013-02-24 08:02:32,https://api.github.com/repos/openstack/swift/git/commits/1d8a02f25c8e439e7ce1c45638e9401ea2e8be26,1d8a02f25c8e439e7ce1c45638e9401ea2e8be26,"Added per disk PUT timing monitoring support.

Fixes bug 1104708

There could be severe performance drop for swift is one disk of one
storage node is problematic due to the tragic state of async disk I/O.

This patch provided PUT timing per kB transfered (ms/kB) monitoring
support for each non-zero-byte request of each disk and report to
statsD for alert.
-adding ""object-server.PUT.<device>.timing"" metrics for object-server.

DocImpact.

Change-Id: Ie94bddad28e8be52e71683bf6c9db988664abe47"
redbo,2013-02-26 10:37:11,https://api.github.com/repos/openstack/swift/git/commits/8bc065ec78c6452b7207e89fe765655e181dbf04,8bc065ec78c6452b7207e89fe765655e181dbf04,"make swift fsync

Swift never fsyncs, it only fdatasyncs.  That is dumb, we have important
metadata we need to save.  Also, the code was weird and had no tests.

Change-Id: I6ec875c14560820b686266a28043a2b7631781e9"
creiht,2013-02-27 21:08:46,https://api.github.com/repos/openstack/swift/git/commits/5d2b70b624ae437ba09cb34b68d1a0babe70cfb2,5d2b70b624ae437ba09cb34b68d1a0babe70cfb2,"Updating classifiers status to stable and clean up

Change-Id: I72943a9575b873cef1bf193f197b390b544ed6bf"
dpgoetz,2013-02-27 17:36:08,https://api.github.com/repos/openstack/swift/git/commits/7e3adf56880971af387fa49274931ab300fdd051,7e3adf56880971af387fa49274931ab300fdd051,"Adding a quick note to helper functions so its clear what they do and
they don't get misused.

Change-Id: Ie0292df9d9e565ccd608b6b61ead57dfff1d3797"
gholt,2013-02-26 18:38:09,https://api.github.com/repos/openstack/swift/git/commits/86220ba028371954b4fb2f4dfc1207c69399278f,86220ba028371954b4fb2f4dfc1207c69399278f,"Force log entries to be one line

Different versions of syslog-ng and probably other syslog services
handle multi line log messages differently and sometimes quite
poorly. This patch collapses multi line log messages into single
lines before sending them on to syslog.

It's just a copy of what was already in Python's logging.Formatter
but altered to replace the newlines with #012. I used #012 since
that's a convention we've already used elsewhere in Swift.

Change-Id: I8d0509b7cf48e45c2cf6480b51c67eec5bc94fe2"
zaitcev,2013-02-26 19:41:27,https://api.github.com/repos/openstack/swift/git/commits/9a3e0f41bd09d0d83cb712961dca5f87d3572bf0,9a3e0f41bd09d0d83cb712961dca5f87d3572bf0,"Move the swift.1 manpage to python-swiftclient

When someone split away python-swiftclient, he left behind the
client manpage.

Apparently all we need now is to delete it from swift and
add it to python-swiftclient. Except that of course the releases
have to be synchronized somehow or else files conflict.

Change-Id: I8b5f7b5557c28818048d8941df36473dacfb1d57"
pyKun,2013-02-19 06:05:58,https://api.github.com/repos/openstack/swift/git/commits/c52a9927933dfb0ec6faf3b7bba304d48fce81be,c52a9927933dfb0ec6faf3b7bba304d48fce81be,"Add debug level logs for TempAuth.authorize.

The function authorize in tempauth.py and keysthoneauth.py is very
important and frequently called in swift. But authorize in tempauth
seems hard to debug with nearly no logs here.

Change-Id: I3300a5a8d02743ff76e2ff86c51338ca24ddddcb
Fixes: bug #1129769"
smerritt,2013-02-25 22:48:06,https://api.github.com/repos/openstack/swift/git/commits/a4a047c4ecc0d7bcb3911a5a8bf00d60e0870b82,a4a047c4ecc0d7bcb3911a5a8bf00d60e0870b82,"Fix descriptions in sample configs.

Change-Id: I7aca3c6cafd9391031f7a10cc233f99e81ee0393"
pyKun,2013-02-25 14:52:39,https://api.github.com/repos/openstack/swift/git/commits/d9130d79e5fbabef4622dc97a8832e6f83bc3522,d9130d79e5fbabef4622dc97a8832e6f83bc3522,"Correct docstring for swift.common.ring.utils.build_tier_tree and add
unit test for it.

Some mistakes is in original docstring of that method. There's no unit
test for two methods in swift.common.ring.utils.

Fixes: bug #1070621

Change-Id: I6f4f211ea67d7fb8ccfe659f30bb0f5d394aca6b"
pyKun,2013-02-24 11:52:15,https://api.github.com/repos/openstack/swift/git/commits/13eabdc7442d173fa4ccc75c741b1fe1c9c913c1,13eabdc7442d173fa4ccc75c741b1fe1c9c913c1,"Improve bin/swift-account-audit

1.Correct the usage of initializing a Ring object.
2.Fix typo.
3.Align lines of print_status part. (keep origin author mind)

note: Adam Kijak has commited it at early time, but didn't put it
      in Gerrit. I import his commit and send it in right Workflow.

Fixes: bug #1131901

Change-Id: If56316cc424045f7df662d60088382f7fd40e8b1"
smerritt,2012-11-09 18:32:07,https://api.github.com/repos/openstack/swift/git/commits/7548cb9c47bef4d5b7f3439bdaea8811ec929eeb,7548cb9c47bef4d5b7f3439bdaea8811ec929eeb,"Make rings' replica counts adjustable.

Example:

$ swift-ring-builder account.builder set_replicas 4
$ swift-ring-builder rebalance

This is a prerequisite for supporting globally-distributed clusters,
as operators of such clusters will probably want at least as many
replicas as they have regions. Therefore, adding a region requires
adding a replica. Similarly, removing a region lets an operator remove
a replica and save some money on disks.

In order to not hose clusters with lots of data, swift-ring-builder
now allows for setting of fractional replicas. Thus, one can gradually
increase the replica count at a rate that does not adversely affect
cluster performance.

Example:

$ swift-ring-builder object.builder set_replicas 3.01
$ swift-ring-builder object.builder rebalance
<distribute rings and wait>

$ swift-ring-builder object.builder set_replicas 3.02
$ swift-ring-builder object.builder rebalance
<distribute rings and wait>...

Obviously, fractional replicas are nonsensical for a single
partition. A fractional replica count is for the whole ring, not for
any individual partition, and indicates the average number of replicas
of each partition. For example, a replica count of 3.2 means that 20%
of partitions have 4 replicas and 80% have 3 replicas.

Changes do not take effect until after the ring is rebalanced. Thus,
if you mean to go from 3 replicas to 3.01 but you accidentally type
2.01, no data is lost.

Additionally, 'swift-ring-builder X.builder create' can now take a
decimal argument for the number of replicas.

DocImpact

Change-Id: I12b34dacf60350a297a46be493d5d171580243ff"
zhouyuan,2013-02-19 05:14:32,https://api.github.com/repos/openstack/swift/git/commits/09370862cab5582c1fe422dfff7cd5ee0edcaac5,09370862cab5582c1fe422dfff7cd5ee0edcaac5,"Adding speed limit options for DB auditor

Fix bug 1129760

Without speed limit, DB auditor will likely consume high CPU% on
storage node. That will highly impact the cluster's performance.

This patch adds two options for account/container auditor:
 - containers_per_second: Maximum containers audited per second
 - accounts_per_second: Maximum accounts audited per second

DocImpact

Change-Id: I9faa506438185a83ca77db4906969328624d015f"
gholt,2013-02-19 19:08:45,https://api.github.com/repos/openstack/swift/git/commits/ffada7113739c653037f5a6de68023b66eda73fe,ffada7113739c653037f5a6de68023b66eda73fe,"Fixed formpost QUERY_STRING bugs.

Ensures that any QUERY_STRING to FormPost is not passed onward.
Handles a redirect with a query string properly.

Change-Id: If0a7d9b0a17314c6cd3852175362d4633f828d81"
notmyname,2013-02-08 06:07:18,https://api.github.com/repos/openstack/swift/git/commits/69917347cf87a1f50ef65338b99fc4a3a1ccfee7,69917347cf87a1f50ef65338b99fc4a3a1ccfee7,"timing-based affinity sorting for primary replicas

This changes the way primary replicas can be sorted on GET requests.
Previously, replicas were shuffled. Now, if configured, the replicas
are sorted based on the most recent connection time data to that node.
This patch adds a config value that changes the sorting method.

get_more_nodes() (ie handoffs) is unaffected by this patch because
sorting by affinity would break the durability provided by the current
as-unique-as-possible handoff selection.

Timing data is collected for each node each time the proxy makes a
connection to that node (IP address). If timing data for a node doesn't
exist, then it is assumed at -1 (ie will sort earlier) so that timing
data can be collected for that node.

Change-Id: I837fa21c3a566b10cce33eb75788665e1d01cd8a"
zaitcev,2013-02-18 17:54:27,https://api.github.com/repos/openstack/swift/git/commits/93ea7c63b1605bcd797235d4f8c184a12ce0c2e3,93ea7c63b1605bcd797235d4f8c184a12ce0c2e3,"Documentation fixups

These are mostly cosmetic fixes for irritating imperfections:
- ""separated with commas"" was duplicated, leave just one
- extra whitespace here and there, man pages are not PEP8, drop
- weird extra commas, drop
- Fedora logs to /var/log/messages
- ""drive is has failed"", drop ""is""

Change-Id: I5ceba2e61b16db4855d76c92cbc83663b9b2a0da"
creiht,2013-02-15 17:06:11,https://api.github.com/repos/openstack/swift/git/commits/e88ff3468564f3e9a62cceba6745c8f55935a1f5,e88ff3468564f3e9a62cceba6745c8f55935a1f5,"Cleanup of file permissions

Mostly removed execute on non-executable files

Change-Id: Ibfbe7e0cf0fbeabef602d70b20f75e1dd3bdf9c9"
dbishop,2013-01-19 18:57:14,https://api.github.com/repos/openstack/swift/git/commits/bce8443c9e7f3e6b021b2b9d1d765cc5a8ffd021,bce8443c9e7f3e6b021b2b9d1d765cc5a8ffd021,"Adds first-byte latency timings for GET requests.

This was an oustanding TODO for StatsD Swift metrics.  A new timing
metric is tracked for (only) GET requests for accounts, containers,
and objects:

  proxy-server.<req_type>.GET.<status_int>.first-byte.timing

Also updated StatsD documentation in the Admin Guide to clarify that
timing metrics are sent in units of milliseconds.

Change-Id: I5bb781c06cefcb5280f4fb1112a526c029fe0c20"
dpgoetz,2013-02-13 20:04:21,https://api.github.com/repos/openstack/swift/git/commits/3b341e375f6da21b9dafe75125c5eb6668f27cf5,3b341e375f6da21b9dafe75125c5eb6668f27cf5,"fix large objects with unicode

Change-Id: I2a088e6cfe354d18cb2107a42bc626c2e7822e42"
litong01,2013-02-13 18:54:51,https://api.github.com/repos/openstack/swift/git/commits/2267b030bfe5921f0cdde2facff284b4ceba3839,2267b030bfe5921f0cdde2facff284b4ceba3839,"Swift MemcacheRing (set) interface is incompatible fixes

This patch fixes the Swift MemcacheRing set and set_multi
interface incompatible problem with python memcache. The fix
added two extra named parameters to both set and set_multi
method. When only time or timeout parameter is present, then one
of the value will be used. When both time and timeout are present,
the time parameter will be used.

Named parameter min_compress_len is added for pure compatibility
purposes. The current implementation ignores this parameter.

To make swift memcached methods all consistent cross the board,
method incr and decr have also been changed to include a new
named parameter time.

In future OpenStack releases, the named parameter timeout will be
removed, keep the named parameter timeout around for now is
to make sure that mismatched releases between client and server
will still work.

From now on, when a call is made to set, set_multi, decr, incr
by using timeout parametner, a warning message will be logged to
indicate the deprecation of the parameter.

Fixes: bug #1095730
Change-Id: I07af784a54d7d79395fc3265e74145f92f38a893"
pyKun,2013-02-12 13:35:53,https://api.github.com/repos/openstack/swift/git/commits/f4a09ebf478ecb69a95c7920048b69184a7ad033,f4a09ebf478ecb69a95c7920048b69184a7ad033,"log message in exception level when path encoding errors happen.

Original code is kind of except-pass. This will ignore the error
occurs in process of encoding path. And if such error happened
without any information in logs, developer have to debug in a
long distance from error stack. That's wasting time, so there
should be a logging message here.

Fixes: bug #1123048
Change-Id: I7941b524e936241fb8d62fad5ad90de3daffe5e7"
jogo,2013-02-12 23:38:40,https://api.github.com/repos/openstack/swift/git/commits/45f0502b525de72ff98b118cfbbb9627c7caf165,45f0502b525de72ff98b118cfbbb9627c7caf165,"Fix spelling mistakes

git ls-files | misspellings -f -
Source: https://github.com/lyda/misspell-check

Change-Id: I4132e6a276e44e2a8985238358533d315ee8d9c4"
annabellebertooch,2013-01-03 16:10:26,https://api.github.com/repos/openstack/swift/git/commits/72428434f7eda8ebccaf8da3949eaa4c3259e624,72428434f7eda8ebccaf8da3949eaa4c3259e624,"Replaces Copyright statements for LLC with Foundation, removes date.

	Replaced GA code for cross-domain tracking.

Patchset addresses reviewer's comments
and follows new guidance from Foundation:
http://wiki.openstack.org/Documentation/Copyright

Adds current year to each Sphinx-built page.

Addresses only the docs copyright attribution, not code files.

Change-Id: Ib90fd1c92c8fafce2db821bc2b17cef1377cfc1e"
dpgoetz,2013-02-06 18:57:17,https://api.github.com/repos/openstack/swift/git/commits/a622349eda31fb20340497d881d2df058c7a5cc6,a622349eda31fb20340497d881d2df058c7a5cc6,"Use a doubled proxy-logging instead of each middleware handling it
differently (if at all)

Adding a swift.source to wsgi pre_auth funcs and all middleware that makes
subrequests to proxy server.

NOTE: This change will result in a change in the number of proxy logs made for
staticweb, formpost, tempurl, and any other middleware that performs sub
requests (including swauth and SOS).

Please see docs for details.

DocImpact

Change-Id: I80cf2806add1c3d34054147e2515944be340455b"
davidhIBM,2013-02-08 22:21:51,https://api.github.com/repos/openstack/swift/git/commits/83d89228a984abaf2271160d3c2010e5be56a8f8,83d89228a984abaf2271160d3c2010e5be56a8f8,"minor development doc changes

Reviewed development saio and guidelines while installing
a new dev and test node.

Change-Id: I59238a4d43fa08a89be14f43681ad4693f1261dd"
gholt,2013-02-08 20:19:48,https://api.github.com/repos/openstack/swift/git/commits/0640a617762342b159a8535cce8e0fc0d0786c3b,0640a617762342b159a8535cce8e0fc0d0786c3b,"Fixed some swift-recon typos

Change-Id: Ibe4b59a90b82742b70b00353d22aedd972bbeb59"
dpgoetz,2013-02-07 19:11:32,https://api.github.com/repos/openstack/swift/git/commits/08c017418b51ff0a696631b13f1a106cc3eafc87,08c017418b51ff0a696631b13f1a106cc3eafc87,"Change the flag set to specify bulk delete and expand archives from a HTTP
header to a query parameter.

This is needed because query parameters show up in proxy logs and headers do
not. With this change it will be easy to determine from any log line that gets
created from the original request (of which there is currently none) that the
request was a bulk action.

Note: This is not backwards compatible with the previous method of setting a
header. Because the bulk middleware has not been included in an openstack swift
release this should be fine.

Change-Id: I0297fa2de9e491bf0b8c430c0781e2e12316ed4b"
redbo,2013-02-01 05:53:47,https://api.github.com/repos/openstack/swift/git/commits/24ef12027c7b6e1e2f55275bed18ceac725e27a5,24ef12027c7b6e1e2f55275bed18ceac725e27a5,"Basic container quotas

Add a new middleware implementing some basic container quotas.

Quotas are subject to several limitations: eventual consistency, the timeliness
of the cached container_info (60 second ttl by default), and it’s unable to
reject chunked transfer uploads that exceed the quota (though once the quota
is exceeded, new chunked transfers will be refused).

However, they get most of the way to container quotas fairly inexpensively.

Quotas are set by adding meta values to the container, and are validated when
set:

  X-Container-Meta-Quota-Bytes: Maximum size of the container, in bytes.
  X-Container-Meta-Quota-Count: Maximum object count of the container.

DocImpact

Change-Id: I77cfbf6dc231a2e522bd67328e4c082424a93eee"
greglange,2013-02-04 19:59:38,https://api.github.com/repos/openstack/swift/git/commits/07d85d3ee8fa034164a5fb652557b7c5f7f74c6f,07d85d3ee8fa034164a5fb652557b7c5f7f74c6f,"Made internal client handle failed requests better

In two places, the internal client was not doing what it should with failed requests.

Change-Id: I49e566108fe920d85ca60fe76d24debe8ec7ffad"
dbishop,2013-01-15 16:32:07,https://api.github.com/repos/openstack/swift/git/commits/ec084de1894f277d21649844fbba85c141a266de,ec084de1894f277d21649844fbba85c141a266de,"Optimize the ring builder's _reassign_parts() method.

Another ring builder optimization.  Profiling revealed hotspots in many
calls to min() and list.sort() in _reassign_parts().  That method didn't
get exercised in my last optimization pass because that pass targeted a
rebalance where nothing really moved around.

This time, I wrote a script which created a fresh ring, added a bunch of
devices, did the initial balance, deleted some devices, balanced, and
added some more back in.

Results from homebrew Python 2.7.3 on OS X 10.8.2 Macbook Pro
(bare-metal):

 BEFORE:
 Using part-power = 18, adding 600 devices, removing 100, then adding 300 more...
 NOT Profiling to 'initial_balance.prof'
   wall-time delta: 131.33s
 NOT Profiling to 'deleting_200_rebalance.prof'
   wall-time delta: 25.67s
 NOT Profiling to 'first_rebalance.prof'
   wall-time delta: 62.00s

 AFTER:
 Using part-power = 18, adding 600 devices, removing 100, then adding 300 more...
 NOT Profiling to 'initial_balance.prof'
   wall-time delta: 28.04s
 NOT Profiling to 'deleting_200_rebalance.prof'
   wall-time delta: 9.35s
 NOT Profiling to 'first_rebalance.prof'
   wall-time delta: 16.41s

The driver script I used is available here:
https://gist.github.com/adb982aec6f0709f1273

Change-Id: I17e270acb12b5e4d4bbb1e34d8867dea90678961"
zyluo,2013-01-31 06:26:46,https://api.github.com/repos/openstack/swift/git/commits/c3d4a63021cbf1ce7b82db4dd8aabd71126f9a47,c3d4a63021cbf1ce7b82db4dd8aabd71126f9a47,"Fixes 'not in' operator usage

Fixes bug 1110150

Change-Id: I6c48553564b1809a7ae5de9f778d93dccbe157ae"
smerritt,2013-01-31 23:12:09,https://api.github.com/repos/openstack/swift/git/commits/156cdc8edfe9783a0cfd8a702da9247e39293de8,156cdc8edfe9783a0cfd8a702da9247e39293de8,"Deterministic, repeatable serialization for rings.

The (account|container|object).ring.gz files contain, among other
things, a JSON-encoded dictionary. This change simply makes the JSON
serializer sort the keys of that dictionary so that two
Python-identical rings will result in two bytewise-identical ring
files. Also, to get repeatable compression, we lock down the timestamp
in the gzip output stream to a fixed value. (There's a timestamp value
in a gzip stream header; by default, gzip.GzipFile sticks time.time()
in there.)

This only works on Python 2.7; on 2.6, the 'mtime' argument to
gzip.GzipFile() is unsupported. Don't worry, serialization still works
on 2.6. It just doesn't always produce the same bytes for the same
ring.

Change-Id: Ide446413d0aeb78536883933fd0caf440b8f54ad"
emonty,2013-01-30 05:33:28,https://api.github.com/repos/openstack/swift/git/commits/abe70e8323825a3a6465148ac0d50aa3c9edf575,abe70e8323825a3a6465148ac0d50aa3c9edf575,"Cleanup based on pyflakes.

pyflakes itself can't be used in any automated gating way, because there are
two sets of false errors it raises. However, as an exercise, cleaning up the
'valid' ones uncovered three actual bugs. The other changes (mostly unused
variables) are included here for fun.

Command run: pyflakes swift | grep -v ""undefined name '_'""

Change-Id: I18696bf047dedad1a9fdbde3463e214fba95f7c6"
gholt,2013-01-31 18:13:19,https://api.github.com/repos/openstack/swift/git/commits/85529531d6bf097dc805b891787b82758c55ed42,85529531d6bf097dc805b891787b82758c55ed42,"Remove tempauth allowed_sync_hosts conf option

Seems we missed these references when committing
357b12dc2ba7b19c66196a573ccb2489d2104b93

DocImpact

Change-Id: Ia226ce1d63e52769bc067d50ec4704cea4e11c5c"
gholt,2013-01-25 02:11:19,https://api.github.com/repos/openstack/swift/git/commits/87a42ab9ca032e1a539f50ac37600f7ee8312e60,87a42ab9ca032e1a539f50ac37600f7ee8312e60,"Added fallocate_reserve option

Some systems behave badly when they completely run out of space. To
alleviate this problem, you can set the fallocate_reserve conf value
to a number of bytes to ""reserve"" on each disk. When the disk free
space falls at or below this amount, fallocate calls will fail, even
if the underlying OS fallocate call would succeed. For example, a
fallocate_reserve of 5368709120 (5G) would make all fallocate calls
fail, even for zero-byte files, when the disk free space falls under
5G.

The default fallocate_reserve is 0, meaning ""no reserve"", and so the
software behaves exactly as it always has unless you set this conf
value to something non-zero.

Also fixed ring builder's search_devs doc bugs.

Related: To get rsync to do the same, see
https://github.com/rackspace/cloudfiles-rsync
Specifically, see this patch:
https://github.com/rackspace/cloudfiles-rsync/blob/master/debian/patches/limit-fs-fullness.diff

DocImpact

Change-Id: I8db176ae0ca5b41c9bcfeb7cb8abb31c2e614527"
famao,2013-01-26 04:11:06,https://api.github.com/repos/openstack/swift/git/commits/f28914c7022bed284ecbd96246041ea595629de2,f28914c7022bed284ecbd96246041ea595629de2,"Handle access_log_headers in proxy_logging

 * in etc/proxy-server.conf-sample, there is an access_log_headers directive in proxy_logging middleware.
   but current code doesn't handle it. This patch enables proxy_logging to handle access_log_headers.

Change-Id: I03337ccc4f48625af3f578ed543da992d3eec2bd"
pandemicsyn,2013-01-25 16:00:33,https://api.github.com/repos/openstack/swift/git/commits/00dbad0825f2653d2a1c3020f7278ed5ffdc2fe4,00dbad0825f2653d2a1c3020f7278ed5ffdc2fe4,"Add optional locking to swift-ring-builder

If invoked as 'swift-ring-builder-safe' the directory containing the builder
file provided will be locked (via lock_parent_directory()). This provides a
small safe guard against multiple instances of the swift-ring-builder (or
other utilities that observe this lock) from attempting to write to or read
the builder/ring files while operations are in progress.

This is particularly useful in environments where ring management has been
automated (via Chef or custom solutions) but the operator still occasionally
needs to manually interact with the ring.

DocImpact

Change-Id: Ia362744a8151a91bfb586d01da582906726852e6"
redbo,2013-01-24 23:21:41,https://api.github.com/repos/openstack/swift/git/commits/c45e435d1fb3e8f1d397ee331b9aa1947fe9b2b7,c45e435d1fb3e8f1d397ee331b9aa1947fe9b2b7,"Add wsgify and split_path utilities to swob

And refactor some of the code to use them.

Remove unused imports.

Change-Id: Ica479c10247fa85c740bb99cf7d1db7fbb1b2c80"
dpgoetz,2013-01-24 20:34:56,https://api.github.com/repos/openstack/swift/git/commits/2f663ff9a0c3533dc350e26b439cc26123fd56df,2f663ff9a0c3533dc350e26b439cc26123fd56df,"Bulk Requests: auto extract archive and bulk delete middleware.

Fix small problem in ratelimiting middleware.

DocImpact

Change-Id: Ide3e0b9f4887626c30cae0b97eb7e2237b1df3ed"
smerritt,2013-01-23 02:56:48,https://api.github.com/repos/openstack/swift/git/commits/f2941b0846f874732c982d17e7fa45412f06c4bd,f2941b0846f874732c982d17e7fa45412f06c4bd,"Validate numericness of ports in builder files.

You can't really goof this up using bin/swift-ring-builder, but if you
have code that uses swift.common.ring.RingBuilder directly, you can
stuff e.g. ""6002"" in where you mean 6002, resulting in some fairly
baffling failures. (Yes, I have done this.)

Change-Id: I87b7b7066b9ea2ce6f82255605da99cf0d283689"
smerritt,2013-01-23 02:41:08,https://api.github.com/repos/openstack/swift/git/commits/68479cc944c423b7539b04fc53f28c920dbacbbf,68479cc944c423b7539b04fc53f28c920dbacbbf,"Add more command-line options to swift-bench.

These settings:
  1. are already exposed via config file
  2. were not exposed as command-line options, and
  3. are things I wanted on the command line while benchmarking recently.

I didn't include short options for --(get|put|delete)-concurrency
since I couldn't think of good single-letter ones, and optparse won't
take ""-gc"", ""-pc"", or ""-dc"".

Change-Id: I0bd7c7ae2892244eed37b8c10c9357dc7e1190d3"
notmyname,2013-01-22 23:24:06,https://api.github.com/repos/openstack/swift/git/commits/ee98288345185cf5b99a0e8427c056b933d0b86a,ee98288345185cf5b99a0e8427c056b933d0b86a,"Update auto-generated docs

Removed sidebar with broken (static) links referencing out-of-date docs.

Added an external link to the Swift API docs

fixes bug #1025099

Change-Id: I7f3106175b84b1063f74aa6c5693ab1e422cdb59"
bloodeagle40234,2013-01-06 07:56:59,https://api.github.com/repos/openstack/swift/git/commits/161aa89bd57bfa99c855133ff6330d27529d7f2b,161aa89bd57bfa99c855133ff6330d27529d7f2b,"prevent irregular auth_prefix config in tempauth

Tempauth handles a authorization request by request path.
If a request's path start with auth_prefix, tempauth middleware
handles that request to authorization method.
Therefore, when configuring auth_prefix to '/', all requests
handle to authorization method.

This change enables tempauth to prevent invalid auth_prefix
config '/' and similar empty auth_prefix in initialization method.

Fixes bug #1096538.

Change-Id: I20b157e2a0809c17409fc65a8eff0858fe4aff29"
smerritt,2013-01-21 23:38:31,https://api.github.com/repos/openstack/swift/git/commits/035e49cf4ba7469c98991604f59f06bff5e8c7fb,035e49cf4ba7469c98991604f59f06bff5e8c7fb,"Fix superfluous GET requests in swift-bench.

If you specified num_gets = 0 for a benchmarking run (say, if you're
benchmarking PUT rate), you'd still get each swift-bench-client
process doing 1 GET request. Now you don't.

This should also fix the case where you've got more objects than
swift-bench-client processes, for example when you're uploading a few
large objects and then doing lots of parallel GETs of those
objects. Now you'll get the number requested, not
max(number-requested, number-of-bench-clients).

Change-Id: Ied9eb733dd9af51a3c6af8b815ad6cff0ff746b7"
chmouel,2013-01-10 14:08:10,https://api.github.com/repos/openstack/swift/git/commits/3282e3885c4387a2147f39d20b1c5902e0336114,3282e3885c4387a2147f39d20b1c5902e0336114,"Add --run-dir switch to swift-init

- Add ability to specify an alternative run_dir than the default
  /var/run/swift.
- DocImpact

Change-Id: I17677588f2c8da563b7fec2dc4fdc52da87126ed"
dbishop,2013-01-19 23:25:27,https://api.github.com/repos/openstack/swift/git/commits/8801b7409030a1fb36fefcabd38af190bcb38c95,8801b7409030a1fb36fefcabd38af190bcb38c95,"Make statsd sample rate behave better.

As Dieter pointed out in bug 1090495
(https://bugs.launchpad.net/swift/+bug/1090495), the volume of metrics
can vary wildly between StatsD metrics.

This patch implements a partial solution by reducing the sample_rate
used for known high-volume metrics (operational experience will need to
inform this over time) and introducing a new tunable,
log_statsd_sample_rate_factor which is multiplied by the sample_rate for
every statsd stat.  This tunable can be used to reduce StatsD traffic
proportionally for all metrics and is intended to replace
log_statsd_default_sample_rate, which is left alone for
backward-compatibility, should anyone be using it.

This patch also includes a drive-by fix for log_udp_port which wasn't
being converted to an int (I didn't verify that actually causes trouble
in SysLogHandler(), but it's definitely an improvement regardles).

Change-Id: Id404636e3629f6431cf1c4e64a143959750a3c23"
notmyname,2013-01-18 16:47:16,https://api.github.com/repos/openstack/swift/git/commits/633d1aa599806e2a7d25acb9bc458791dedf46e3,633d1aa599806e2a7d25acb9bc458791dedf46e3,"version bump to 1.7.7-dev

I expect the next release to actually be 1.8, but to prevent issues
if we decide to release 1.7.7, I'm only moving the rev number.

Change-Id: Ia9e05c5f036b8fbf67972470f240e84f7595223a"
notmyname,2013-01-15 05:41:11,https://api.github.com/repos/openstack/swift/git/commits/d87ce03c3ecbc3135597c1cf4fdad840fb84f9bc,d87ce03c3ecbc3135597c1cf4fdad840fb84f9bc,"authors and changelog update for swift 1.7.6

Change-Id: Iad00e51fb17c9e829bd5ba7b56a0d24253cfe8b2"
dpgoetz,2013-01-16 18:00:18,https://api.github.com/repos/openstack/swift/git/commits/54b759405633e0c44303ebb8cf8b92006cd49223,54b759405633e0c44303ebb8cf8b92006cd49223,"get swob.Request.blank to parse path

Change-Id: I3327c915b3b868bb1829103adb718632e58b1b4a"
dpgoetz,2012-12-20 22:53:29,https://api.github.com/repos/openstack/swift/git/commits/c8b28ba4f42c22df63d6b086166e5a7f59b82e8e,c8b28ba4f42c22df63d6b086166e5a7f59b82e8e,"swob refactors needed for sos

Change-Id: I839c2af9e524f712e6fbeb8bf74d860af1d243e2"
smerritt,2012-12-13 01:47:04,https://api.github.com/repos/openstack/swift/git/commits/6ff644b945dfc025414f6d0775f409a938d85512,6ff644b945dfc025414f6d0775f409a938d85512,"Allow for multiple X-(Account|Container)-* headers.

When the number of account/container or container/object replicas are
different, Swift had a few misbehaviors. This commit fixes them.

* On an object PUT/POST/DELETE, if there were 3 object replicas and
  only 2 container replicas, then only 2 requests would be made to
  object servers. Now, 3 requests will be made, but the third won't
  have any X-Container-* headers in it.

* On an object PUT/POST/DELETE, if there were 3 object replicas and 4
  container replicas, then only 3/4 container servers would receive
  immediate updates; the fourth would be ignored. Now one of the
  object servers will receive multiple (comma-separated) values in the
  X-Container-* headers and it will attempt to contact both of them.

  One side effect is that multiple async_pendings may be written for
  updates to the same object. They'll have differing timestamps,
  though, so all but the newest will be deleted unread. To trigger
  this behavior, you have to have more container replicas than object
  replicas, 2 or more of the container servers must be down, and the
  headers sent to one object server must reference 2 or more down
  container servers; it's unlikely enough and the consequences are so
  minor that it didn't seem worth fixing.

The situation with account/containers is analogous, only without the
async_pendings.

Change-Id: I98bc2de93fb6b2346d6de1d764213d7563653e8d"
dbishop,2013-01-14 07:26:33,https://api.github.com/repos/openstack/swift/git/commits/0bba07111f9834599f5fb8c3c8f5a72e1ea22a1d,0bba07111f9834599f5fb8c3c8f5a72e1ea22a1d,"Some optimizations for ring rebalancing.

For a part-power 18 ring with a small number of devices (12), this drops
""swift-ring-builder ... rebalance"" from ~7.2 seconds to ~3.6s on OS X
with Python 2.7 (2.7 GHz i7 processor).

Under the profiler, that part-power 18 rebalance now spends only
slightly more time rebalancing the ring than it does writing out the
results.

I haven't done more extensive before/after comparison with larger
numbers of devices and larger part-power values...

Change-Id: I25735bc71da2f11617cc436d4f8e0c4f3f82bfec"
chmouel,2013-01-12 22:37:25,https://api.github.com/repos/openstack/swift/git/commits/0df6fe817dda2565d035cd1a10f935d41c34c3ea,0df6fe817dda2565d035cd1a10f935d41c34c3ea,"Add container-sync to container-server.conf doc.

- In howto install multi nodes container-sync was not included in the
  config example.

Change-Id: I2682d47c5cae28ff321ba03d70dae2fea00c276f"
gholt,2013-01-12 07:25:15,https://api.github.com/repos/openstack/swift/git/commits/95d5cf851b93dbb34102e10e06e26d66ec7d1d52,95d5cf851b93dbb34102e10e06e26d66ec7d1d52,"Fixed bug in object replicator

If the object replicator couldn't create a device's object directory
(due to permissions or whatever) it wouldn't do any work at all. This
fixes that.

Change-Id: I6a30439d036b29c9cfdb660428d13668e0dc8632"
gholt,2013-01-12 06:54:17,https://api.github.com/repos/openstack/swift/git/commits/592d895e312ffce35eb0c2ecc79932ed6d12057f,592d895e312ffce35eb0c2ecc79932ed6d12057f,"Reject names with NULL characters

Unfortunately, SQLite truncates strings with null characters.
Additionally, XML pretty much hates them too.

Change-Id: Id9a8eaa27b841db6350d6959c202d3e3d6462b35"
gholt,2013-01-12 04:30:16,https://api.github.com/repos/openstack/swift/git/commits/a88b412e17a473b867faf3f76d9d662979b152c5,a88b412e17a473b867faf3f76d9d662979b152c5,"swift-recon: Added oldest and most recent repl

I've been doing this with cluster-wide log searches for far too long.
This adds support for reporting the oldest replication pass
completion as well as the most recent. This is quite useful for
finding those odd replicators that have hung up for some reason and
need intervention.

Change-Id: I7fd7260eca162d6b085f3e82aaa3cf90670f2d53"
gholt,2013-01-10 23:07:02,https://api.github.com/repos/openstack/swift/git/commits/46c5b098f8c58fdcb35c505c3401a87328f5b56e,46c5b098f8c58fdcb35c505c3401a87328f5b56e,"Fixed version req for netifaces to 0.5

Change-Id: Ic1c67ced0169658c9aa7f78ed09bf24863cc9fb6"
dbishop,2013-01-10 21:08:22,https://api.github.com/repos/openstack/swift/git/commits/e2929ec58aadcfd2c08b53790156344d93392b94,e2929ec58aadcfd2c08b53790156344d93392b94,"Fix HEAD request response when request not given to response.

If a middleware (swift3, I'm looking at you), doesn't pass a Request
object into the Response constructor, Response._response_iter cannot
know to send zero bytes in the body of the HEAD response.

This patch fixes this usage of swob by making Response.__call__
helpfully reify self.request from env if it wasn't already set by the
Response object's constructor.

This fixes a bug in swift3 + swob-enabled-Swift where HEAD requests to
swift3 resulted in a response with a body in violation of the relevant
RFC and confusing clients.

Thanks to kostecky for finding the bug and describing it accurately.

Change-Id: I2bdb098052b161e1cddf1e4e482ab4dfafeb18c0"
corywright,2013-01-09 17:58:36,https://api.github.com/repos/openstack/swift/git/commits/c69e130df594416309ddb31855dfcbedf3f32de6,c69e130df594416309ddb31855dfcbedf3f32de6,"consistency and grammatical tweaks

Change-Id: I0a1dc9e07f246db3e294f5c62f4ffbd3560b0afd"
dpgoetz,2013-01-04 19:09:29,https://api.github.com/repos/openstack/swift/git/commits/ded504600fb8d5c80a5b535906bfeaf0dbfaaf5b,ded504600fb8d5c80a5b535906bfeaf0dbfaaf5b,"Allow actual paths to work for swift-get-nodes

Change-Id: I29f9ab73c8ca2a3c52247fb92ef951dd5b5246cb"
flaper87,2013-01-02 11:20:02,https://api.github.com/repos/openstack/swift/git/commits/b155da424a0b2a48b3c248decac809ecaf93408c,b155da424a0b2a48b3c248decac809ecaf93408c,"Check whether poll is available or not and let eventlet chose the best
hub when it isn't.

Change-Id: I5fb05a71e8c62d84cee1da9ea05f67ffbad18b9d"
notmyname,2012-12-26 21:41:46,https://api.github.com/repos/openstack/swift/git/commits/dc8d0e06920e5dafcfbd9bc9fd75fb6ef94b396f,dc8d0e06920e5dafcfbd9bc9fd75fb6ef94b396f,"Functional tests use x-auth-token rather than x-storage-token

This change allows other auth systems to test against the functests but not
require them to support x-storage-token (which was deprecated before swift
was even open-sourced). All other places in the code where x-storage-token is
used is only to populate x-auth-token if x-auth-token doesn't already exist.

Change-Id: Ie903d0f7135fc643353b74a61c14becf7dfc4d9d"
gholt,2012-12-21 19:24:16,https://api.github.com/repos/openstack/swift/git/commits/5f19ccf28fefb64d1f4c3e9d6ed77c1ffcae2847,5f19ccf28fefb64d1f4c3e9d6ed77c1ffcae2847,"Fix for subtle bug from 5c8f9c52e3f2944f01cea621326532e058a225f7

Change-Id: If2bd1d4a850936b2e575a96073c116a8b9522602"
redbo,2012-12-21 04:10:07,https://api.github.com/repos/openstack/swift/git/commits/c37954d9355b6a2e3c1ccb7ab06f0fcdd3fd1076,c37954d9355b6a2e3c1ccb7ab06f0fcdd3fd1076,"saio truncate instead of dd (for reals)

Changing that complex dd to a functionally equivalent truncate that's easier
to read and modify.

DocImpact

Change-Id: I64404318364608e62a1d80f6a0550271eb4cd03a"
redbo,2012-12-20 21:35:19,https://api.github.com/repos/openstack/swift/git/commits/5d5b262be85f81d9a35c5be1f4e176bdffd20acc,5d5b262be85f81d9a35c5be1f4e176bdffd20acc,"Revert ""suggest fallocate instead of dd in saio""

Change-Id: I3742c4580d920e09de434e86b75b134c62f1732e"
jd,2012-12-20 14:39:08,https://api.github.com/repos/openstack/swift/git/commits/6df28545ff66db0d75a75dd6ecfc07d655c3c1bf,6df28545ff66db0d75a75dd6ecfc07d655c3c1bf,"Move InputProxy to utils

This class is being used at least by Ceilometer in its Swift middleware, and
since it's a general one anyway, it looks good to move it to common.utils.

This is a follow-up to Chmouel suggestion in
https://review.openstack.org/#/c/18231

Change-Id: I8d0ed8600c4152b91be9a88a3b396c3967d0add2
Signed-off-by: Julien Danjou <julien@danjou.info>"
creiht,2012-12-19 23:54:06,https://api.github.com/repos/openstack/swift/git/commits/53ed90beef400d095365cc4eac123a1b4d364443,53ed90beef400d095365cc4eac123a1b4d364443,"Fixes console logging with non-swift middleware

Fixes logging if logging to the console with non-swift middleware (such
as keystone) enabled.  This also fixes issues with swift in devstack

Change-Id: Ib8b691b62b657a6d4ecdb1648d1fc2f3a0479982"
redbo,2012-12-19 22:10:07,https://api.github.com/repos/openstack/swift/git/commits/e81ca8daf31f225ae4b99f602cd8f9a5fac0b3d4,e81ca8daf31f225ae4b99f602cd8f9a5fac0b3d4,"suggest fallocate instead of dd in saio

Change-Id: I4d5ba8e58216749c2858dc1c0b8225b3619a7287"
dprince,2012-12-19 17:48:27,https://api.github.com/repos/openstack/swift/git/commits/97f79b9ddadace9cd14ff1ace376f8572242fab6,97f79b9ddadace9cd14ff1ace376f8572242fab6,"Convert LICENSE to use unix style line endings.

Ran dos2unix on LICENSE to convert to unit style line endings.
This makes building packages which contain the LICENSE file
a bit nicer... and matches other LICENSE files under the openstack
umbrella which have unix style line endings as well.

Change-Id: Id724d1ba402a590725a2d200f5e0599bce696e5a"
wu-wenxiang,2012-12-18 09:29:16,https://api.github.com/repos/openstack/swift/git/commits/b85f69ed70032d44bdc8a9e7626d4b2dcf38da04,b85f69ed70032d44bdc8a9e7626d4b2dcf38da04,"Refactor Ring::get_nodes() and Ring::get_part_nodes()

Add a _get_part_nodes() method in Ring class, then call it in Ring::get_nodes() and Ring::get_part_nodes().

In order to reduce duplicate codes.

Change-Id: Id92f8dfd08388305638a2ba2ab64e77545c14cba"
gholt,2012-12-18 01:18:57,https://api.github.com/repos/openstack/swift/git/commits/52a2a65ed4b0ab5174eaaba2c43ac80b63971380,52a2a65ed4b0ab5174eaaba2c43ac80b63971380,"Made 507s report drive, if known.

This functionality was lost with the swob change, but is back now.

Change-Id: I13b3154080a7c601235711b274e4899efb6adc93"
gholt,2012-12-17 23:06:22,https://api.github.com/repos/openstack/swift/git/commits/4fcbeff22f30b57dc6d1b252cb5df49c4c2f3907,4fcbeff22f30b57dc6d1b252cb5df49c4c2f3907,"Added override for swift-init's KILL_WAIT

You can now give swift-init a -k N (or --kill-wait N) option to
override the default 15 second wait for a process to die after
sending it the die signal. This is useful for boxes that are awfully
slow for whatever reason.

DocImpact

Change-Id: I328ec254f6e0ee1cd423c1d062ba4c5331bd8337"
dpgoetz,2012-12-17 17:45:46,https://api.github.com/repos/openstack/swift/git/commits/2a9bf200656bff3c084b38001206710ff69097a4,2a9bf200656bff3c084b38001206710ff69097a4,"one dot, 5% increase in coverage

Change-Id: I1a2d603be983aa3291d22f7258437ee264e6c559"
gholt,2012-12-14 18:06:29,https://api.github.com/repos/openstack/swift/git/commits/9302c5ffc182602369613c3f376fe964c920c407,9302c5ffc182602369613c3f376fe964c920c407,"Fix permissions from last commit

Change-Id: I3bad8c2995d4daf1e7798fae2c59b409608cbc45"
clayg,2012-12-09 17:00:34,https://api.github.com/repos/openstack/swift/git/commits/3dbc1a9b9cb32cb06cf3158c374b24524c3c2c6a,3dbc1a9b9cb32cb06cf3158c374b24524c3c2c6a,"document correct config in dispersion-report help

The --help message of swift-dispersion-report used to say
/etc/swift/stats.conf instead of the correct and consistent
/etc/swift/dispersion.conf - this change updates that
commandline help message.

Change-Id: I69ad64d31bb86eb0d36fcf5b17aa8bf42f646ed1"
saschpe,2012-12-03 13:14:02,https://api.github.com/repos/openstack/swift/git/commits/08a110bdbcd5513ef9cad59c03eb2bb9043b3f7b,08a110bdbcd5513ef9cad59c03eb2bb9043b3f7b,"Add a license header to functionalnosetests

Change-Id: I413d8bb9cbdea1f67ab2649ab0cc4a05a7a65883"
creiht,2012-12-12 22:24:52,https://api.github.com/repos/openstack/swift/git/commits/a064fa4227c4960052e2089d2b05bc684706f13e,a064fa4227c4960052e2089d2b05bc684706f13e,"Fix needed for keystone middleware logging

This is required for a fix in keystone middleware to log to the proxy
logs.  Since the keystone middleware doesn't initialize the log with
swift.commong.utils.config_logger, it doesn't have the server and
transaction id setup.  This is required to fix bug #1089664

Change-Id: Icbb44076495a4d56065445c7a4d972ebede5d1e0"
jd,2012-12-04 11:38:26,https://api.github.com/repos/openstack/swift/git/commits/dcff5ff51661254532308bde65bfa889d284eebf,dcff5ff51661254532308bde65bfa889d284eebf,"Use install_requires in setup.py

Using install_requires makes sure that if some code is using Swift internal
and wants to require Swift, all its dependencies have been already pulled.
This is really useful on test automation for example, otherwise, code might
be failing because on of the module listed in pip-requires is not instaled.

Also, we change the pip-requires files to use >= rather than ==, so the
requirements are easily fulfiled with distribution provided packages.

Change-Id: I65814bcd8ce798da21a5c17b4d5916a23f59e962
Signed-off-by: Julien Danjou <julien@danjou.info>"
dbishop,2012-12-11 23:32:09,https://api.github.com/repos/openstack/swift/git/commits/ea95d0092ae56182decaf8bf18cb533838c01c10,ea95d0092ae56182decaf8bf18cb533838c01c10,"Avoid infinite recursion in swift.obj.replicator.get_hashes.

Fixes bug 1089140.

Turns out that if an exception bails out of the pickle loading (eg.
zero-byte hahes_file), the if clause to determine whether or not to
write out a fresh hashes_file can evaluate to false, leading to an
infinite loop.

This patch fixes this infinite loop generally, by ensuring that if any
exception is thrown, a new hashes_file is written.

Change-Id: I344c5f8e261ce7c667bdafe1687263a4150b21dc"
creiht,2012-12-06 21:09:53,https://api.github.com/repos/openstack/swift/git/commits/4c6a35448332d6827af230e5f0c470e112de15a8,4c6a35448332d6827af230e5f0c470e112de15a8,"Add config option to turn eventlet debug on/off

By default, this will be turned off.  This will cause eventlet to not
print stack traces to stderr which can be very annoying on production
systems.  It is still recommended to turn it on for development or
debuging purposes.

DocImpact
Change-Id: I5e5b902d3d9ed85f784549e53f2ee2fc87cbe2e5"
pandemicsyn,2012-12-03 22:12:10,https://api.github.com/repos/openstack/swift/git/commits/e474dfb7208b0cbd404b267c30209e9e60e173c0,e474dfb7208b0cbd404b267c30209e9e60e173c0,"Add dispersion report flags to limit reports

- Add two optional flags that let you limit swift-dispersion-report to only
reporting on containers OR objects.
- Also make dispersion.conf and swift-dispersion-report manpages
  current.

DocImpact

Change-Id: Iad56133cad261241db27d0e2103098e3c2f3c245"
clayg,2012-11-26 20:39:46,https://api.github.com/repos/openstack/swift/git/commits/3a70112d03173106cfb6d8f1e42d18da5686f46f,3a70112d03173106cfb6d8f1e42d18da5686f46f,"Add config of server start timeouts for probetests

Currently the timeout for a wsgi server successfully binding to a port
and for a probetest background service to finish starting are hard coded
to 30 seconds.  While a reasonable default for most configurations, a
small virtualized environment may need a little more time in order for
probe tests to complete successfully.

This patch adds a 'bind_timeout' option to the DEFAULT section of the
main wsgi servers' config.  Also a new [probe_test] section and
'check_server_timeout' option to test.conf

DocImpact

Change-Id: Ibcaff153c7633bbf32e460fd9dbf04932eddb56f"
clayg,2012-11-26 15:58:09,https://api.github.com/repos/openstack/swift/git/commits/1f83f007e8f2a063b326176c3b34b02d8e04181f,1f83f007e8f2a063b326176c3b34b02d8e04181f,"Allow dot test runners from any dir

Currently the .*test files in the source tree root seem to assume you're
in that directory when you run them.  This change should work exactly
the same except for removing that restriction.

Change-Id: I9b037016490dd6d5b515cb2c3cad2f99ee40bb6d"
clayg,2012-11-26 20:28:33,https://api.github.com/repos/openstack/swift/git/commits/b852f2274b9dc179ffb636091d80d1bb5e90841d,b852f2274b9dc179ffb636091d80d1bb5e90841d,"capture resetswift output in probetests

This change makes the dots prettier during probetests

When calling the resetswift script, the probetests will use subprocess
to redirect stderr to stdout and capture stdout into a buffer.  We print
the captured buffer from resetswift's combined stdout/stderr and let
nosetests stdout capturing handle printing the output for debug only if a
test fails.

Change-Id: I022512f2ef5a4c43b0e49264bad1bca98c1f0299"
dbishop,2012-12-04 00:05:44,https://api.github.com/repos/openstack/swift/git/commits/b8e3e9e1c23acc8c58149ff9f36e1d0b03fe812f,b8e3e9e1c23acc8c58149ff9f36e1d0b03fe812f,"Allow optional, temporary healthcheck failure.

A deployer may want to remove a Swift node from a load balancer for
maintenance or upgrade.  This patch provides an optional mechanism for
this.  The healthcheck filter config can specify ""disable_path"" which is
a filesystem path.  If a file is present at that location, the
healthcheck middleware returns a 503 with a body of ""DISABLED BY FILE"".

So a deployer can configure ""disable_path"" and then touch that
filesystem path, wait for the proxy to be removed from the load balancer
pool, perform maintenance/upgrade, and then remove the ""disable_path""
file.

Also cleaned up the conf file man pages a bit.

Change-Id: I1759c78c74910a54c720f298d4d8e6fa57a4dab4"
portante,2012-12-04 16:17:38,https://api.github.com/repos/openstack/swift/git/commits/37da61bf3010738f009e6cf43d597063c2c1da32,37da61bf3010738f009e6cf43d597063c2c1da32,"Ignore pycscope files

Change-Id: I5fe38f28896d086e56ba9e718b02227d87dd4a2d
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
jkff,2012-11-30 16:08:17,https://api.github.com/repos/openstack/swift/git/commits/772da0a0044695796bf1df513351dbf0b2fe73eb,772da0a0044695796bf1df513351dbf0b2fe73eb,"drop_privileges should also set HOME

E.g. if HOME is not set, swift-proxy will create the
keystone_signing file not in HOME but in /root.
This is because the swift user doesn't have a shell
in /etc/passwd and so it doesn't set environment variables
when impersonating.

Change-Id: I3013007e0dadf6ddccc176e142b7c78c5d63a351"
redbo,2012-11-29 21:29:00,https://api.github.com/repos/openstack/swift/git/commits/064ee2b58337b7fd3ae5fca343b1f6fd3bd86ed7,064ee2b58337b7fd3ae5fca343b1f6fd3bd86ed7,"406 if we can't satisfy Accept

The container and account servers should respond with 406 if the Accept header
isn't satisfiable.  This behavior is defined in RFC 2616 section 14.1.

Change-Id: I8a67ccafe33dc70ef4f7794686a54fbc8581f4dc"
gholt,2012-11-30 21:31:21,https://api.github.com/repos/openstack/swift/git/commits/6743e4d57f2da87e947e171d884e4dcabf56a201,6743e4d57f2da87e947e171d884e4dcabf56a201,"Swob bugfixes; for ? in names specifically

It was discovered that uploading items with ? in their names (encoded
with %3F of course) made Swob fail in that it trimmed off everything
after the ? as if it were a query string.

Change-Id: Ie686db9a2177aafad2e77c307ffc3f446646fbb5"
gholt,2012-11-28 16:33:24,https://api.github.com/repos/openstack/swift/git/commits/18f755a287c61b5a8ced6616e5c31179ecf6fbfc,18f755a287c61b5a8ced6616e5c31179ecf6fbfc,"Added --top option to swift-recon -d

When showing the disk usage dispersion graph it is often useful to
know what those top full drives are so you can do further research.
Now you can run 'swift-recon -d --top 10' to list the top ten devices
by fullness after the usual dispersion graph.

Change-Id: I7ddb2141e55e0613f69750fabe544940192c2d48"
dprince,2012-11-28 21:08:05,https://api.github.com/repos/openstack/swift/git/commits/abcd87239486c64d8cdfccd00b95b3284c58470c,abcd87239486c64d8cdfccd00b95b3284c58470c,"Updates to use new keystoneclient middleware.

Updates the proxy-server.conf-sample and docs to use
the new Keystoneclient middleware class name.

Change-Id: I3727f7b7328a2513347b8ef257c270126df36d7b"
gholt,2012-11-28 00:08:26,https://api.github.com/repos/openstack/swift/git/commits/4063123e3c8c1162db47efc1d78136e3e7eda492,4063123e3c8c1162db47efc1d78136e3e7eda492,"Fix bug with swob.Request.path_info_pop

path_info_pop didn't behave as the webob one did with single segment
paths like /one and with root-only paths /

Now it should.

Change-Id: Ib88344de386ab9e8975e7f48c1afc47731992ee2"
notmyname,2012-11-19 22:17:14,https://api.github.com/repos/openstack/swift/git/commits/46f26b30347ae0752e63add3c945e043ebe824c4,46f26b30347ae0752e63add3c945e043ebe824c4,"added GoLang binding and CDMI to associated projects

Change-Id: I720a0e0e886d25eec52556e8ce93bf9c49f6b452"
jajohnson,2012-11-27 16:39:12,https://api.github.com/repos/openstack/swift/git/commits/48ebd6732e43ff54e5aedbef161a4f273aac3904,48ebd6732e43ff54e5aedbef161a4f273aac3904,"Replace hard-coded test accounts with user-configured values

Change-Id: I824ba5f231e252b923abc895f757137855a93d3a"
smerritt,2012-11-27 02:15:21,https://api.github.com/repos/openstack/swift/git/commits/35f4d29ed6562b0f4d5db253deeb218db62078a4,35f4d29ed6562b0f4d5db253deeb218db62078a4,"Upgrade pep8 to 1.3.3.

This required a bunch of whitespace-poking of the scripts in bin, but
that's all. Now every file in swift/ and bin/ is pep8-1.3.3-compliant,
so hopefully we can be done with this pep8 stuff for a good long time.

Change-Id: I44fdb41d219c57400a4c396ab7eb0ffa9dcd8db8"
smerritt,2012-11-21 22:57:21,https://api.github.com/repos/openstack/swift/git/commits/89a871d42f1226c2dd292ea739dfda01d6f4b3f2,89a871d42f1226c2dd292ea739dfda01d6f4b3f2,"Improve container-sync docs.

Two improvements: first, document that the container-sync process
connects to the remote cluster's proxy server, so outbound
connectivity is required.

Second, rewrite the behind-the-scenes container-sync example and add
some ASCII-art diagrams.

Fixes bug 1068430.

Bonus fix of docstring in wsgi.py to squelch a sphinx warning.

Change-Id: I85bd56c2bd14431e13f7c57a43852777f14014fb"
smerritt,2012-11-21 19:08:37,https://api.github.com/repos/openstack/swift/git/commits/fdf55c2817c9a457de4d5609cabfda0aa0620dc1,fdf55c2817c9a457de4d5609cabfda0aa0620dc1,"Add CONTRIBUTING file.

If the CONTRIBUTING[.md] file exists, Github will show a link to it to
anyone who files an issue on Github or opens a pull request on
Github. We don't want people to do that, so this file points people at
the OpenStack wiki page with instructions on how to contribute
properly. This should cut down on the number of pull requests and
Github issues that we then have to spend our valuable time ignoring.

See also <https://github.com/blog/1184-contributing-guidelines>.

Change-Id: Icd23b65c642c5ae748ca1f7f397e2c8d63173492"
notmyname,2012-11-20 22:14:16,https://api.github.com/repos/openstack/swift/git/commits/1f7be20a91c41af7e2b388469f99890022ddb22e,1f7be20a91c41af7e2b388469f99890022ddb22e,"pep8 middleware

Change-Id: Ieef65f05e66b12347752c0e02648858e3242d8e7"
notmyname,2012-11-20 22:13:34,https://api.github.com/repos/openstack/swift/git/commits/c46033a9a73002a1a1f8378fc96dc517bea072ac,c46033a9a73002a1a1f8378fc96dc517bea072ac,"pep8 db.py

Change-Id: I2ae277b6f435f56549560684697486b56d24d46d"
notmyname,2012-11-20 22:13:49,https://api.github.com/repos/openstack/swift/git/commits/3aab2488b268ed3eecce12698ce92460b01283ab,3aab2488b268ed3eecce12698ce92460b01283ab,"pep8 direct client

Change-Id: I1ed6afe4336c238044174c93ae1e0078fbcef971"
notmyname,2012-11-20 22:14:03,https://api.github.com/repos/openstack/swift/git/commits/f74ef1e396568e12992bbd68393043f0d2ce06bc,f74ef1e396568e12992bbd68393043f0d2ce06bc,"pep8 utils.py

Change-Id: I0466fd2a462e94e5a1e0f88adf901de9f5ac131d"
smerritt,2012-11-17 01:05:37,https://api.github.com/repos/openstack/swift/git/commits/357b12dc2ba7b19c66196a573ccb2489d2104b93,357b12dc2ba7b19c66196a573ccb2489d2104b93,"Remove IP-based container-sync ACLs from auth middlewares.

The determination of the client IP looked at the X-Cluster-Client-Ip
and X-Forwarded-For headers in the incoming HTTP request. This is
trivially spoofable by a malicious client, so there's no security
gained by having the check there.

Worse, having the check there provides a false sense of security to
cluster operators. It sounds like it's based on the client IP, so an
attacker would have to do IP spoofing to defeat it. However, it's
really just a shared secret, and there's already a secret key set
up. Basically, it looks like 2-factor auth (IP+key), but it's really
1-factor (key).

Now, the one case where this might provide some security is where the
Swift cluster is behind an external load balancer that strips off the
X-Cluster-Client-Ip and X-Forwarded-For headers and substitutes its
own. I don't think it's worth the tradeoff, hence this commit.

Fixes bug 1068420 for very small values of ""fixes"".

DocImpact

Change-Id: I2bef64c2e1e4df8a612a5531a35721202deb6964"
smerritt,2012-11-13 02:45:26,https://api.github.com/repos/openstack/swift/git/commits/83bbd0aef20169953297f05389461d23bc484af5,83bbd0aef20169953297f05389461d23bc484af5,"Fix lazy-listing of object segments.

When responding to a GET request for a manifest, it was intended that
the proxy server lazily fetch the pieces of the container
listing. That way, a single client request doesn't immediately turn
into a bunch of requests to backends. The additional requests should
only get made if the client is putting in the work of receiving the
object body.

However, commit 156f27c accidentally changed this so that all the
pieces of the container listing are eagerly fetched up-front. Better
yet, if an object has more than CONTAINER_LISTING_LIMIT (default
10,000) segments, the container listing is then fetched a second time,
albeit lazily, while streaming out the response.

This commit restores the laziness and adds tests for it.

Change-Id: I49840a7059e6f999ce19199ecb10cdb77358526b"
portante,2012-11-16 05:09:14,https://api.github.com/repos/openstack/swift/git/commits/1ac7b88a271d8b4fd4557b301fdeb80442dcabbe,1ac7b88a271d8b4fd4557b301fdeb80442dcabbe,"Use a delta timeout for memcache where possible

We use a delta timeout value for timeouts under 30 days (in seconds)
since that is the limit which the memcached protocols will recognize a
timeout as a delta. Greater than 30 days and it interprets it as an
absolute time in seconds since the epoch.

This helps to address an often difficult-to-debug problem of time
drift between memcache clients and the memcache servers. Prior to this
change, if a client's time drifts behind the servers, short timeouts
run the danger of not being cached at all. If a client's time drifts
ahead of the servers, short timeouts run the danger of persisting too
long. Using delta's avoids this affect. For absolute timeouts 30 days
or more in the future small time drifts between clients and servers
are inconsequential.

See also bug 1076148 (https://bugs.launchpad.net/swift/+bug/1076148).

This also fixes incr and decr to handle timeout values in the same way
timeouts are handled for set operations.

Change-Id: Ie36dbcedfe9b4db9f77ed4ea9b70ff86c5773310
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
portante,2012-11-16 02:57:06,https://api.github.com/repos/openstack/swift/git/commits/259aafb6f0cee4659f1685d31d89505a82460832,259aafb6f0cee4659f1685d31d89505a82460832,"Refactor http_connect() to use http_connect_raw()

Change-Id: I889c5eecf860cc947763c5d79148419f9741a2c2
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
chmouel,2012-11-16 02:30:28,https://api.github.com/repos/openstack/swift/git/commits/101f566e92239ae24ca56dc168ad8d403b8bd0e6,101f566e92239ae24ca56dc168ad8d403b8bd0e6,"Updating doc reflecting the move of auth_token.

The auth_token middleware has moved, updating the doc.

Change-Id: I8133b876a53d61bf94169cf08c8b1fa6bbf9681a"
gholt,2012-11-14 02:53:14,https://api.github.com/repos/openstack/swift/git/commits/4e5889d6ce997e706fbaf0b3134d057ad4d177a1,4e5889d6ce997e706fbaf0b3134d057ad4d177a1,"Refactor db_replicator's roundrobin_datadirs

roundrobin_datadirs was returning any .db file at any depth in the
accounts/containers structure. Since xfs corruption can cause such
files to appear in odd places at times (only happened on one drive of
ours so far, but still...), I've refactored this function to only
return .db files at the proper depth.

Change-Id: Id06ef6584941f8a572e286f69dfa3d96fe451355"
notmyname,2012-11-14 00:07:16,https://api.github.com/repos/openstack/swift/git/commits/20d4b00645c18f8e8a4d34549fc8ee4e45459e49,20d4b00645c18f8e8a4d34549fc8ee4e45459e49,"change catch_errors to use WSGIContext

The current catch_errors (ie without this patch) relinquishes control
before the underlying middleware/app has been evaluated. This results
in not catching errors in the stack when they occur in either the
start_response or in generating the first chunk sent to the client of
the underlying stack.

Change-Id: Iecd21e4fc7e30fa20239d011f69216354b50baf1"
portante,2012-11-13 13:32:38,https://api.github.com/repos/openstack/swift/git/commits/7d70e05aeb6127b234d147102bb6f5500295f9ca,7d70e05aeb6127b234d147102bb6f5500295f9ca,"Refactor DiskFile to hide temp file names and exts

This set of changes reworks the DiskFile class to remove the ""extension""
parameter from the put() method, offering the new put_metadata() method with
an optional tombstone keyword boolean, and changes the mkstemp method to only
return the file descriptor.

Reviewing the code it was found that the temporary file name created as a
result of calling DiskFile.mkstemp() was never used by the caller, but the
caller was responsible for passing it back to the DiskFile.put() method. That
seems like too much information is exposed to the caller, when all the caller
requires is the file descriptor to write data into it.

Upon further review, the mkstemp() method was used in three places: PUT, POST
and DELETE method handling. Of those three cases, only PUT requires the file
descriptor, since it is responsible for writing the object contents. For POST
and DELETE, DiskFile only needs to associate metadata with the correct file
name. We abstract the pattern that those two use (once we also refactor the
code to move the fetch of the delete-at metadata, and subsequent
delete-at-update initiation, from under the mkstemp context) by adding the new
put_metadata() method.

As a result, the DiskFile class is then free to do whatever file system
operations it must to meet the API, without the caller having to know more
than just how to write data to a file descriptor. Note that DiskFile itself
key'd off of the '.ts' and '.meta' extensions for its operations, and for that
to work properly, the caller had to know to use those correctly. With this
change, the caller has no knowledge of how the file system is being used to
accomplish data and metadata storage.

See also Question 213796 at:
    https://answers.launchpad.net/swift/+question/213796

Change-Id: I267f68e64391ba627b2a13682393bec62600159d
Signed-off-by: Peter Portante <peter.portante@redhat.com>"
redbo,2012-11-14 11:12:21,https://api.github.com/repos/openstack/swift/git/commits/5c8f9c52e3f2944f01cea621326532e058a225f7,5c8f9c52e3f2944f01cea621326532e058a225f7,"check response status in WSGIContext._app_call

Only re-chain response iter if start_response hasn't been called yet.

Change-Id: I9670f49419104fb8f949e6edc12d9047d1289cde"
AlexYangYu,2012-11-12 16:53:20,https://api.github.com/repos/openstack/swift/git/commits/1701b6bc2424cd8db843ffb4517bb1239de46198,1701b6bc2424cd8db843ffb4517bb1239de46198,"fix bug in deleting account memcache.

Every request of container and object will invoke account_info() or
container_info() to query the meta of account and container. The meta
will be cached in memcache with the key 'account/{$account}' or
'container/{$container}', So, if any request to update account and
container, we should delete the cache. But in the cache deletion of
account, it use the wrong key 'account/v1/{$account}'. This could lead
to inconsistency of account meta.

Change-Id: Ied116a58a2d5866ac76d75ae50f21277d66e5755"
smerritt,2012-11-10 02:01:34,https://api.github.com/repos/openstack/swift/git/commits/bf90ba2de14af7f12682cd7e8dca74fa883463b8,bf90ba2de14af7f12682cd7e8dca74fa883463b8,"Remove outdated Debian packaging guide.

There are 3 sections in there, all useless.

Section 1 tells you how to install Swift packages from the swift-core
PPA. However, the latest version there is ancient.

Section 2 tells you how to build your own Swift packages. However, it
talks about getting the source code from the ""debian"" branch in bzr,
which is obviously really old.

Section 3 tells you how to take the packages from section 2 and
install them. This isn't too out-of-date, but since section 2 doesn't
work any more, section 3 is useless.

Since stale docs are worse than no docs, there's no current
information in this document, and bringing it up-to-date requires a
whole pile of work, I've chosen to delete it entirely.

Also pulled out a couple references to the PPA elsewhere.

Fixes bug 917385.
Fixes bug 1026145.

Change-Id: I510bd8619531fe110419e5488bd20d3602868d66"
clayg,2012-11-13 07:10:08,https://api.github.com/repos/openstack/swift/git/commits/4236e6379b266d9d20f516839142b3db20d5ef7b,4236e6379b266d9d20f516839142b3db20d5ef7b,"patch utils.HASH_PATH_SUFFIX in proxy unittests

Most of the test files set the HASH_PATH_SUFFIX so you can run the test
file stand alone.  This change made it easier for me to run specific
proxy tests separately.

Change-Id: I87d70367dac7f240a2b6779649f8a02cf324ae0f"
smerritt,2012-11-12 23:02:04,https://api.github.com/repos/openstack/swift/git/commits/a78b2d5f46fc2ab977d66ef02af93a651458a0a4,a78b2d5f46fc2ab977d66ef02af93a651458a0a4,"Fix 500 on GET of many-segment manifest.

The proxy_logging middleware was asserting that the response contained
either a Content-Length header or a Transfer-Encoding header. If not,
it would either add one (if app_iter was a list) or blow up
(otherwise). This blowing up is observable on a GET request to a
manifest object that references more than
swift.common.constraints.CONTAINER_LISTING_LIMIT segments.

If a response makes it up to eventlet.wsgi without a Content-Length
header, then a ""Transfer-Encoding: chunked"" header is automatically
stuffed into the response by eventlet. Therefore, it's not an error
for a response to not have a Content-Length header, and proxy_logging
should just let it happen.

Fixes bug 1078113.

Change-Id: I3751a8ae14dc68bab546f2746b61267a5115e252"
jsoyee,2012-11-11 08:15:39,https://api.github.com/repos/openstack/swift/git/commits/53ab2e150df92f6780819b7e66eb4c71688bd154,53ab2e150df92f6780819b7e66eb4c71688bd154,"fix bug1039861, remove license header in doc/source/conf.py.

Change-Id: Iab43ac342faf3722ccab1ed034f08752dbbfaae1"
gholt,2012-11-10 16:39:25,https://api.github.com/repos/openstack/swift/git/commits/47ee1d7e175471483b9885eafc4514a7281c35e9,47ee1d7e175471483b9885eafc4514a7281c35e9,"Better TempAuth storage URL guessing

I know it's just TempAuth, but bug #959953 just caught my eye as
something interesting to solve.

This does a best guess on the storage URL to return for a given
request. It allows $HOST to be used in the storage URL configuration,
where $HOST will resolve to scheme://host:port. It bases the scheme
on how the server is running or on storage_url_scheme if set. The
host:port comes from the request's Host header if it exists, and
falls back to the WSGI SERVER_NAME:SERVER_PORT otherwise.

Fixes: bug #959953
DocImpact

Change-Id: Ia494bcb99a04490911ee8d2cb8b12a94e77820c5"
notmyname,2012-11-09 22:39:39,https://api.github.com/repos/openstack/swift/git/commits/8a8ea8f22a2b01ccfdddda5ecf20a5237093280b,8a8ea8f22a2b01ccfdddda5ecf20a5237093280b,"fix error with setting max age and incorrect tests

Change-Id: I3f0db3b70ea5df323597b556682c2d1fb28afe53"
smerritt,2012-11-08 19:13:21,https://api.github.com/repos/openstack/swift/git/commits/24f9fe919e23149ac79cc677ab6f1874e910c743,24f9fe919e23149ac79cc677ab6f1874e910c743,"Make swift-bench use less memory with large object sizes.

Before, swift-bench would create a string of the right size and pass
that to [direct_]put_object. Uploading 5 GB objects w/concurrency of
4? Hope you've got a spare 20 GB of RAM in that machine.

Now it lazily generates chunks (of size 64 KiB) to send. In my limited
testing, this keeps RAM usage low while not impacting speed.

There's backwards-compatibility code in
direct_client.direct_put_object for any callers who are still passing
in strings. There aren't any such in Swift's codebase, though. All one
of those callers now pass an iterable.

Fixes bug 911925.

Change-Id: I40669fc00c7fb6699d8fb514e1be9b69436eca42"
redbo,2012-11-09 18:11:08,https://api.github.com/repos/openstack/swift/git/commits/34ca0f097c0607c1dd6610e3fad6eebaa11fe11c,34ca0f097c0607c1dd6610e3fad6eebaa11fe11c,"give swob default content-type

This should fix up the few remaining API regressions from swob, by giving all
responses a default content-type of ""text/html; charset=UTF-8"".

Change-Id: Ib3b859e63c5e8c4af6f7fe535947402b5df57399"
smerritt,2012-11-08 23:22:01,https://api.github.com/repos/openstack/swift/git/commits/237a440cd196be4c03f8e5f02d7ba220a5d4f1b2,237a440cd196be4c03f8e5f02d7ba220a5d4f1b2,"Make DELETE requests to expired objects return 404.

It is already the case that a DELETE of a deleted object results in a
404, and GET/HEAD/POSTs to both expired and deleted objects result in
404s. However, a DELETE of an expired object resulted in a 202. This
change makes it consistent with the other verbs.

Fixes bug 1076245.

Change-Id: I793e62d72461a4fb9fb3404e10658ddcc4c3a7a6"
redbo,2012-11-08 23:12:33,https://api.github.com/repos/openstack/swift/git/commits/65554ea32f0b35b7ba623dccb92489f556d89efa,65554ea32f0b35b7ba623dccb92489f556d89efa,"charset for default responses

Set a utf-8 charset on default text/html responses.

Change-Id: Ic5f661bd475dca83763d4b55419ad031279e3ba1"
redbo,2012-11-08 22:17:40,https://api.github.com/repos/openstack/swift/git/commits/188f834e0ae305df36438c9a9ad1e2a4b6e98098,188f834e0ae305df36438c9a9ad1e2a4b6e98098,"use Host: for location rewrites

If the Host header is available, use it for making relative URLs absolute.
Otherwise, continue using SERVER_NAME.

Change-Id: Ifc028264ad1b122a2d5dff9d5528cb369090429f"
jarnold,2012-11-07 23:57:12,https://api.github.com/repos/openstack/swift/git/commits/5e4ca30281e6c82ac5d523e0e49e14bd6e4a56b2,5e4ca30281e6c82ac5d523e0e49e14bd6e4a56b2,"Fixed swift-bench when using -b and a conf file

Change-Id: I72448cd8578b53a658f151354a26066772e4b9ec"
gholt,2012-11-07 21:49:26,https://api.github.com/repos/openstack/swift/git/commits/f46a4d8a2f3f84ccac6efd24bcef8065d7e263b8,f46a4d8a2f3f84ccac6efd24bcef8065d7e263b8,"Fixed bugs with internal client and object expirer

These bug fixes are lumped together because they all caused problems
with the object expirer doing its job.

There was a bug with the internal client doing listings that happened
to run across a Unicode object name for use as a marker.

There was a bug with the object expirer not utf8 encoding object
names it got from json listings, causing deletes to fail.

There was a bug with the object expirer url quoting object names when
calling the internal client's make_request, when make_request already
handles that.

Change-Id: I29fdd351fd60c8e63874b44d604c5fdff35169d4"
smerritt,2012-11-07 21:36:35,https://api.github.com/repos/openstack/swift/git/commits/d61dfb32e717425fab21061152d7354539d86f00,d61dfb32e717425fab21061152d7354539d86f00,"Use computed size on object PUT, not fstat.

The object server knows the size of the file on disk already since
it's counted the bytes as they were written out. There's no need to go
ask the filesystem.

This also lets object PUTs work when the filesystem is some crazy,
non-POSIX thing that doesn't always give the right answers from
fstat(). See bug 904723 for a case when this happened.

Fixes bug 904723.

Change-Id: Ibdf44ea991e0cc4f9e0997cc9ff566cb0eac5332"
notmyname,2012-11-07 03:38:26,https://api.github.com/repos/openstack/swift/git/commits/a69bc0899092eee29129136864cd78803f4b0112,a69bc0899092eee29129136864cd78803f4b0112,"1.7.6 version bump

Change-Id: Ifc29d286a3e435fd16c1dec8b5afb7b331a89b77"
notmyname,2012-11-05 20:58:14,https://api.github.com/repos/openstack/swift/git/commits/d09bcdef73e54ffe9f9c1cd10ae3a0b939adc724,d09bcdef73e54ffe9f9c1cd10ae3a0b939adc724,"updated for 1.7.5 release

Change-Id: Iee286fbe1a6b797955579bedfb2a80095c055cd8"
redbo,2012-11-06 10:44:43,https://api.github.com/repos/openstack/swift/git/commits/3586f829b099a163639f2f95d14f626bfd5d1ae7,3586f829b099a163639f2f95d14f626bfd5d1ae7,"statsd timing refactor

Change-Id: I99d9ddfbcad0f88e75c49235c8317ea97237d4e4"
notmyname,2012-11-06 23:13:01,https://api.github.com/repos/openstack/swift/git/commits/ec75d1e343da744c8e033f62a4f82fea4a717539,ec75d1e343da744c8e033f62a4f82fea4a717539,"add OPTIONS to proxy_logging configs and docs

Change-Id: I77e1d7fdcf217826402beeb7d583e3c7279c416c"
notmyname,2012-11-02 23:46:38,https://api.github.com/repos/openstack/swift/git/commits/16ecc430caa9e10aad97a13f4d8ef89b72debe64,16ecc430caa9e10aad97a13f4d8ef89b72debe64,"Better RFC support for OPTIONS and CORS preflight requests

Ensures that the Allow header is set for 405 responses from the proxy,
as per RFC 2616.

CORS preflight requests now require both the Origin and Access-
Control-Request-Method headers to get a successful (200) response. The
draft spec defines errors as a response with a non-200 status code.
This patch sets the CORS error response code to 401 (Not Authorized).
A later patch may choose to make this configurable.

There is some ambiguity between RFC 2616 and the CORS draft spec
around what to do when a CORS request is made but the cluster has no
CORS information about the requested resource. This patch chooses to
return an error in this case because it is what would be simplest for
CORS client apps.

Further improvements to the OPTIONS verb not included in this patch
 include support of more top-level resources (eg / or /v1/) or
sending the configured constraints in the reponse body.

Change-Id: I40be059e8bbf3737dafc4e6fefa7598d05669c60"
redbo,2012-11-02 19:02:02,https://api.github.com/repos/openstack/swift/git/commits/0d1b42007b9be753c4724bfa5a42d66eeb9c4c64,0d1b42007b9be753c4724bfa5a42d66eeb9c4c64,"Set content-type on account/container head

Change-Id: Ib54fa5adb7539bebfbd6644064be9d7f4d7af9db"
cboylan,2012-11-02 23:56:18,https://api.github.com/repos/openstack/swift/git/commits/a4da977e6cb859649cb9543a6179aee79c51ad37,a4da977e6cb859649cb9543a6179aee79c51ad37,"Use pypi for python-swiftclient dependency.

Using github as a package source is less reliable in the Jenkins test
framework than using pypi. This is because the Jenkins test framework
has a local pypi mirror.

Change-Id: Ia904d39ce70f5c2bd7d6edb9172f8226131074e2"
smerritt,2012-11-02 22:39:59,https://api.github.com/repos/openstack/swift/git/commits/466e0a0d5a289a498014fa48043dc0763ae3e420,466e0a0d5a289a498014fa48043dc0763ae3e420,"Split swob.content_range_header() into two methods.

content_range_header() took an optional parameter 'value_only'. If
true, it returned just the header value; if false, the whole header.
At all the call sites, value_only was either a hardcoded True or
False.

Instead, let's have two methods (one for the full header, one for the
header value) and just call the right one.

Change-Id: I3aa03aca233437e9bdbed7edf9622756e19b4c49"
smerritt,2012-11-02 20:19:39,https://api.github.com/repos/openstack/swift/git/commits/cda914d74096de21ce8e3bfcde6f047dff522a73,cda914d74096de21ce8e3bfcde6f047dff522a73,"Remove dead code in swob.Response.__init__.

self.status would have been ""200 OK"", not 200, so the branch was never
taken. self.status_int would have been 200.

This looked like part of an attempt to honor the Range header in GET
requests. However, when I changed the code to check if self.status_int
== 200, the behavior gets weird. In the case of a GET request w/Range
header, the status gets changed from a 200 (from the underlying
app/middleware stack) into a 206. However, the response body isn't
actually changed to be of the right length. The net result is a
response w/status ""206 Partial Content"" that actually contains the
full content.

RFC 2616 section 14.35.2 says ""A server MAY ignore the Range header.""
The right thing to do is either (a) return a 206 with actual partial
content, or (b) ignore the Range header. For object GETs, there's
already code to do (a) [see commit ce274b3]. For other GETs, we should
ignore the Range header instead of returning a Frankenresponse.

This code is dead, and rightly so; let's bury it six feet deep in the
bit bucket.

Fixes bug 1068279.

Change-Id: Id648dfda9cba45012b5da097a235598fbd97c8b0"
zhouyuan,2012-11-01 07:05:42,https://api.github.com/repos/openstack/swift/git/commits/ba3babaddee4f9f7bdd11fc82225813256ad8c1b,ba3babaddee4f9f7bdd11fc82225813256ad8c1b,"Allow object-expirer to delete the last version of an object

Fix bug 1067677

When we delete a versioned object, the last version will be poped out from the
versiones container. When a versioned object is expired and deleted by object-
expirer, the last version is restored but remains in the versions container
instead of getting deleted. The reason is object-expirer will set
'X-If-Delete- At' header when deleteing an object. However this is for the
current version - not for the last version. When the object-server is trying
to delete the last version, the transaction will fail with error:
X-If-Delete-At and X-Delete-At do not match. Delete the 'X-If-Delete-At'
field in the later built delete request would help to solve this issue.

This patch, without the test, was first proposed by
Zhou Yuan <yuan.zhou@intel.com>.

Change-Id: I62c97e6a0f140888497e189129825865fb6f7966"
smerritt,2012-11-02 18:21:24,https://api.github.com/repos/openstack/swift/git/commits/f955e66a0201ee5ceabd2f02f7350b3651aa3667,f955e66a0201ee5ceabd2f02f7350b3651aa3667,"Make multipart/byteranges boundary always length 32.

Due to a lack of zero-padding in a format string, there was a 1/16
chance that the length of the randomly-generated boundary string was
less than 32. This didn't affect client downloads, but it did give the
unit tests a 1/16 chance of failing (there's a [0-9a-f]{32} regex in a
test).

Now we left-zero-pad the boundary string to length 32, and the test
consistently passes.

Change-Id: I4ee98dab127e5674e59b078d8090470ec783e0b0"
davidhadas,2012-10-23 15:05:40,https://api.github.com/repos/openstack/swift/git/commits/9efa9be167b972a234ecccd9ba37bdd8a949381e,9efa9be167b972a234ecccd9ba37bdd8a949381e,"Separate wsgi init from web-front-end activation

Separate the request processor initialization steps
    Load common settings from conf
    Set the logger
    Load the request processor
from the web front end server application step

On branch bp/wsgi-application-interface-7
   modified:   swift/common/wsgi.py

Implements Blueprint:   wsgi-application-interface

Change-Id: I25fabad8846cd644e4bf1e1bd9c2e568512e12e5"
redbo,2012-11-01 23:14:58,https://api.github.com/repos/openstack/swift/git/commits/af031138bee0a367f7bdb5339e927160030642d7,af031138bee0a367f7bdb5339e927160030642d7,"re-use headers_to_container_info on container GET

Currently, a container's info can be cached without cors data intact after
a container GET.

I made headers_to_container_info a function instead of a method and I crammed
all container metadata into container_info.
This is so e.g. staticweb can eventually re-use the same container info cache.

Fix pep8 in swift/proxy/controllers/container.py

Change-Id: I4bbb042dde79afac48395efc38bd80f0ff240e1f"
litong01,2012-11-02 00:45:11,https://api.github.com/repos/openstack/swift/git/commits/ce274b3532d47baae8f9fc61c69e4d44f8884036,ce274b3532d47baae8f9fc61c69e4d44f8884036,"blueprint Multi-range support implementation

This change adds multi range retrieval to OpenStack Swift. For non-
segmented data object, a client can use HTTP Range header to specify
multiple ranges to retrieve sections of the data object.

This implementation currently does not support segmented data object
multi range retrieval. When a client sends a multi range request
against a segmented data object, Swift will return HTTP status code
200. Support for segmented data multi range retrieval will be added
in near future.

This implementation is to bring Swift closer to CDMI multi range
data retrieval standard. Once support for segemented data multi
range is added, Swift will be compliant with CDMI standard in
this area.

DocImpact

Change-Id: I4ed1fb0a0a93c037ddb2f551ea62afe447945107"
gholt,2012-10-25 18:27:16,https://api.github.com/repos/openstack/swift/git/commits/dcc89e3ad61799c4d21249ff4cc7d24a1fa394b7,dcc89e3ad61799c4d21249ff4cc7d24a1fa394b7,"dispersion report option to output missing parts

Adds a -p option to swift-dispersion-report that will output the
partitions missing copies to standard error. Another thing we've been
meaning to add for forever. It's useful when you want to do some
further research on whether a partition truly has fewer copies or if
they're just somewhere else in the cluster due to a ring change, for
instance.

DocImpact

Change-Id: I5e47aa5818483ecc34b39ef6f8cd83ad312ed9a0"
gholt,2012-10-30 15:40:41,https://api.github.com/repos/openstack/swift/git/commits/a94a2831497c9666b8e2a0b81b4fe3bc09114e24,a94a2831497c9666b8e2a0b81b4fe3bc09114e24,"Fixed bugs re: make_pre_authed* and SCRIPT_NAME

There were bugs with SCRIPT_NAME and
swift.common.wsgi.make_pre_authed* functions.

1) SCRIPT_NAME wasn't copied with PATH_INFO, which it should've been.
2) When a new path was given, SCRIPT_NAME wasn't set to an empty
   string but just omitted, which is allowed by spec, but really
   should be set.

For completeness, if SCRIPT_NAME doesn't exist in the source env, it
will be created in the new env, but as an empty string.

Change-Id: Ifbc27ed8ff357038c54df4d37de46cfd5e31372e"
notmyname,2012-10-19 20:50:57,https://api.github.com/repos/openstack/swift/git/commits/8ac292595fc1523254c5703a9aff598c4edbe057,8ac292595fc1523254c5703a9aff598c4edbe057,"changed TRUE_VALUES references to utils.config_true_value() call

cleaned up pep8 (v1.3.3) in all files this patch touches

Change-Id: I30e8314dfdc23fb70ab83741a548db9905dfccff"
davidhadas,2012-10-23 08:07:53,https://api.github.com/repos/openstack/swift/git/commits/6c6b84b3f5297128b277b0f20c70919250843ae3,6c6b84b3f5297128b277b0f20c70919250843ae3,"Fix non standard 100-continue behaviour

Swift proxy server, when communicating with
the back-end servers ALWAYS sends 100-continue.
Even if the length headers indicate that there
is no body (content-length: 0).
This behavior is not inline with the standard.
RFC2616:8.2.3 disallows 100-continue
        for req.content_length==0

This fix removes 100-continue during PUT requests
without a body while maintining the ability for
handoff in case of faliure.

On branch bp/wsgi-application-interface-5
   modified:   swift/proxy/controllers/obj.py

Fixes: Bug #1070025
Implements Blueprint:  	wsgi-application-interface

Change-Id: Ia4eb8b886a74968cca4e8bde208641b37f2c104c"
pandemicsyn,2012-10-26 19:56:10,https://api.github.com/repos/openstack/swift/git/commits/de09cbe6f41bff3d9992bc2366ecb7de36f9774f,de09cbe6f41bff3d9992bc2366ecb7de36f9774f,"Extended documentation for using custom loggers

Change-Id: I78a5c109c9440df752e390698502f57d4392fb67"
smerritt,2012-10-26 17:11:22,https://api.github.com/repos/openstack/swift/git/commits/40f46e245c2465ad1561f78ca1dcbc9272974ea7,40f46e245c2465ad1561f78ca1dcbc9272974ea7,"Allow unsetting of X-Container-Sync-To header.

Fixes bug 1071790.

Change-Id: Ic0509190b9994e7d983bcf20daa64a650cc974cb"
gholt,2012-10-25 19:17:57,https://api.github.com/repos/openstack/swift/git/commits/b5509b1bee31e275ff4ff2f26f1a85aa1ec1e22f,b5509b1bee31e275ff4ff2f26f1a85aa1ec1e22f,"Db reclamation should remove empty suffix dirs

When a db is reclaimed it removes the hash dir the db files are in,
but it does not try to remove the parent suffix dir though it might
be empty now. This eventually leads to a bunch of empty suffix dirs
lying around. This patch fixes that by attempting to remove the
parent suffix dir after a hash dir reclamation.

Here's a quick script to see how bad a given drive might be:

import os, os.path, sys
if len(sys.argv) != 2:
    sys.exit('%s <mount-point>' % sys.argv[0])
in_use = 0
empty = 0
containers = os.path.join(sys.argv[1], 'containers')
for p in os.listdir(containers):
    partition = os.path.join(containers, p)
    for s in os.listdir(partition):
        suffix = os.path.join(partition, s)
        if os.listdir(suffix):
            in_use += 1
        else:
            empty += 1
print in_use, 'in use,', empty, 'empty,', '%.02f%%' % (
    100.0 * empty / (in_use + empty)), 'empty'

And here's a quick script to clean up a drive:
NOTE THAT I HAVEN'T ACTUALLY RUN THIS ON A LIVE NODE YET!

import errno, os, os.path, sys
if len(sys.argv) != 2:
    sys.exit('%s <mount-point>' % sys.argv[0])
containers = os.path.join(sys.argv[1], 'containers')
for p in os.listdir(containers):
    partition = os.path.join(containers, p)
    for s in os.listdir(partition):
        suffix = os.path.join(partition, s)
        try:
            os.rmdir(suffix)
        except OSError, err:
            if err.errno not in (errno.ENOENT, errno.ENOTEMPTY):
                print err

Change-Id: I2e6463a4cd40597fc236ebe3e73b4b31347f2309"
gholt,2012-10-25 17:47:01,https://api.github.com/repos/openstack/swift/git/commits/e415e4d23572ba6cedf4d2303a7a1a069eb92b36,e415e4d23572ba6cedf4d2303a7a1a069eb92b36,"Added partition option to swift-get-nodes

Sometimes you just want to know what machines a given partition
should be on, or what handoffs that partition would use if needed.
We've been meaning to add this option to swift-get-nodes for quite
some time, but I just finally got to it.

Example: swift-get-nodes /etc/swift/object.ring.gz -p 123

I tried to leave as much of the existing swift-get-nodes unaltered,
so the output isn't exactly distilled to just what you'd need for
getting a partition's nodes. But it should suffice for what it is, an
admin tool.

Change-Id: I438400ddc0eecbf9c48266e7f38a2e4f0765f374"
notmyname,2012-10-18 19:08:38,https://api.github.com/repos/openstack/swift/git/commits/af4b2851fc864cf4cef13588ab253141bfa92bbb,af4b2851fc864cf4cef13588ab253141bfa92bbb,"fix config parsing in swift-bench -x

This patch ensures that the command-line arg format (boolean)
doesn't conflict with the conf file format (string) and the
proper action is taken.

Change-Id: I3284096e1a9478897e1c3246ab190b46d2590243"
smerritt,2012-10-25 00:16:11,https://api.github.com/repos/openstack/swift/git/commits/9cb7751fad92bc237b62710b6f4926db69cb05bd,9cb7751fad92bc237b62710b6f4926db69cb05bd,"Remove double GET on range requests.

The proxy server's ObjectController was performing multiple GET
requests to the object server when processing requests with Range
headers. This was a workaround for a bug in the proxy server's
Controller.GETorHEAD_base method where a response code of 416 from the
object server was incorrectly treated as a bad response from the
backend, the same way a 404 or a 5xx would be.

A 416 (Requested Range Not Satisfiable) from the object server is now
considered a good response. Since the response headers from the object
server already include the X-Object-Manifest header, there's no need
to make a second request (sans Range header) to see if the object is a
manifest.

Bonus fix: updated message for status 416 to match RFC2616.

Bonus fix 2: removed a leftover debugging print() in
test/unit/proxy/test_server.py.

Fixes bug 1065869.

Change-Id: I156af0b463f02ef19a8cfe37092544a599d89b78"
sasimpson,2012-10-11 21:52:26,https://api.github.com/repos/openstack/swift/git/commits/74b27d504d310c70533175759923c21df158daf9,74b27d504d310c70533175759923c21df158daf9,"Adding CORS support

Change-Id: I894473994cdfea0996ad16e7619aff421f604abc"
davidhadas,2012-10-23 07:48:24,https://api.github.com/repos/openstack/swift/git/commits/56e757257e98f9203c79c8f4a1a9e5116b7320e8,56e757257e98f9203c79c8f4a1a9e5116b7320e8,"Remove utf-8 in metadata and http header names

RFC2616 implicitly allows transferring utf-8 in
headers (vals) but not in header names (keys)

Swift functional tests includes testing for utf-8
header names (keys) which is non aligned with the standard.
This seem to be the case when testing file metadata.
File metadata keys are than transferred as part of
the http header keys (header names) as
      X-Object-Meta-<metadata_key>=metadata_name.

As a result metadata_keys in swift must be composed from
a subset of ASCII characters - alpha numerics,
some punctuation, not a lot else* and cannot be utf-8.

On branch bp/wsgi-application-interface-4
modified:   test/functional/tests.py

Change-Id: I1932e9d4ead83089e8a31a06d28a54f5625efb9c
Fixes: bug 1068026
Implements: blueprint wsgi-application-interface"
smerritt,2012-10-18 21:49:46,https://api.github.com/repos/openstack/swift/git/commits/851bbe2ea94abf06d9a2fcda76901af3e0394a2e,851bbe2ea94abf06d9a2fcda76901af3e0394a2e,"Track unlinks of async_pendings.

It's not sufficient to just look at swift.object-updater.successes to
see the async_pending unlink rate. There are two different spots where
unlinks happen: one when an async_pending has been successfully
processed, and another when the updater notices multiple
async_pendings for the same object. Both events are now tracked under
the same name: swift.object-updater.unlinks.

FakeLogger has now sprouted a couple of convenience methods for
testing logged metrics.

Fixed pep8 1.3.3's complaints in the files this diff touches.

Also: bonus speling and, grammar fixes in the admin guide.

Change-Id: I8c1493784adbe24ba2b5512615e87669b3d94505"
davidhadas,2012-10-23 07:30:03,https://api.github.com/repos/openstack/swift/git/commits/d5cdbbe0eac1b04a138ff78648d5cd0dde7af1a1,d5cdbbe0eac1b04a138ff78648d5cd0dde7af1a1,"Two MIME types sent during test

The directory tests TestContainerPathsEnv creates directorys during SetUp while indicating duplicate application internet media type (MIME) via the Content-Type header.

E.g the output on the line using 'nosetests -v test.functional.tests:TestContainerPaths.testContainerListing' includes:

Host: 127.0.0.1:8080
Accept-Encoding: identity
Content-Type: application/octet-stream
Content-Length: 0
content-type: application/directory
X-Auth-Token: AUTH_tkd40f5550289d4d60af75bb1b6c6067be

On branch bp/wsgi-application-interface-3
   modified:   test/functional/tests.py
Fixes: Bug #1068499
Implements Blueprint  	wsgi-application-interface

Change-Id: I49c5d1f73fff3c06d4be18b20c7209eff4e1326c"
davidhadas,2012-10-22 22:23:43,https://api.github.com/repos/openstack/swift/git/commits/2531df96a0cc34c42b3339907d303ff5215b37a7,2531df96a0cc34c42b3339907d303ff5215b37a7,"Fixes Ilegal chunk encoding by the test_client

test_client sends a wrong size indication when testing
chunked data.
For example instead of sending:
   5\r\nabcde\r\n (which is inline with the standard)
The client would send:
   0x5\r\nabcde\r\n

On branch bp/wsgi-application-interface-2
  modified:   test/functional/swift_test_client.py

Change-Id: I7597dcd24adade009aead66f67674f361f3fe4fa
Fixes: Bug #1070036
Implements: Blueprint wsgi-application-interface"
vitoordaz,2012-10-15 15:00:36,https://api.github.com/repos/openstack/swift/git/commits/22a8adfcb96b6332c26bd766c625c5e1df555149,22a8adfcb96b6332c26bd766c625c5e1df555149,"path_qs for swob.Request

Add path_qs property to swob.Request. First of all this property
has webob.Request, also this property can be used in swift3 middleware
for generate canonical string, if webob will be replaced in swift3 with
swob (https://github.com/vitoordaz/swift3/commit/2b36fbd477f6573108100ec85a1594877adeaacb).

Change-Id: Idf58096baaf7830dd0d624ea6c72eda1eb91ff0d"
gholt,2012-10-19 00:50:25,https://api.github.com/repos/openstack/swift/git/commits/25ee63a94368f5982bd4e478fe56e52951b2b8f3,25ee63a94368f5982bd4e478fe56e52951b2b8f3,"Remove replication prioritization

Turns out this prioritization causes stampedes right after capacity
additions (especially on smaller clusters), which means the things it
prioritizes don't get done for several passes anyway, which means the
prioritization isn't solving the problem it was designed to do, and
it causes non-productive load spikes instead. :/

Getting rid of the prioritization doesn't make things go any slower
overall, could make things actually go faster since there are less
collisions, and evens out the load.

Change-Id: I4938bcd12d9a21fad635cfe772897e4c151f8a95"
notmyname,2012-10-18 19:37:50,https://api.github.com/repos/openstack/swift/git/commits/4c76f3dc3c55736cc4e2c1389d5f8820dbc83361,4c76f3dc3c55736cc4e2c1389d5f8820dbc83361,"removed duplicate in AUTHORS file

Change-Id: Ia430637f24d883ee166cb6529dde03049cc06120"
VictorLowther,2012-10-10 16:38:02,https://api.github.com/repos/openstack/swift/git/commits/956cc0c7938fdf7c477d635109edfbc90e3d8bda,956cc0c7938fdf7c477d635109edfbc90e3d8bda,"Relax mount point name checking.

In general, Linux does not care about what a mount point is named as
long as it is a vaild directory name (no / or null characters).
However, that is too relaxed for swift, which will pass that mount
point name around as part of url path construction all over the
place.  To make sure that the mount point name was sane from that POV,
Swift was using isalnum to verify that the mount point name was sane,
which is overly restrictive.

This patch replaces that test with a test that verifies that the name
has no characters that need to be URL encoded.

The specific use case this enables is allowing mount points to be
named according to the UUID of the filesystem that is being mounted,
which will make Swift more robust in the face of device name instability.

Change-Id: I4d49b21c1783e97c16d3f394c2171f1f80eea058"
smerritt,2012-10-15 18:32:26,https://api.github.com/repos/openstack/swift/git/commits/646651260aca01358165bb93a054ac5ace65fc20,646651260aca01358165bb93a054ac5ace65fc20,"Make StatsD tests less flaky.

There have been a bunch of Jenkins failures lately where the StatsD
tests fail because they can't bind to their desired port. There's
nothing special about the particular port they're using, so now we let
the kernel pick an available one for us.

This also lets us get rid of a sleep() in the test that looked like an
attempt to alleviate EADDRINUSE errors, so now in the happy case, the
tests are a few fractions of a second faster.

Change-Id: Idee11349254107a59643539b1566f3588eee7ef4"
dpgoetz,2012-10-15 21:21:02,https://api.github.com/repos/openstack/swift/git/commits/b52538074ea9022859af4ff7ac74a65a1e1e2f1e,b52538074ea9022859af4ff7ac74a65a1e1e2f1e,"do not dump_recon_cache on limited obj replic

Change-Id: I38e38607ba9c5cf331c216e4c81582d23c58eeca"
smerritt,2012-10-14 15:02:09,https://api.github.com/repos/openstack/swift/git/commits/e76b82c91b37a821a65e89260c2e4f8e87ea9e5d,e76b82c91b37a821a65e89260c2e4f8e87ea9e5d,"Fix version requirement for mock library.

One of the tests uses mock.call, which is only available in version
0.8.0 and up.

Fixes bug 1066274.

Change-Id: I77e4de0908f93326992fc4d4af4a7e54e60b5585"
fifieldt,2012-10-12 13:15:18,https://api.github.com/repos/openstack/swift/git/commits/9344a4a582ec8e85c1949842cbad86d2fa5a0358,9344a4a582ec8e85c1949842cbad86d2fa5a0358,"Random pep8 fixes!

This patch merely fixes a selection of files to the point where
pep8 1.3.3 is happy. Most of the errors are indentation related to
continued lines (E126, E127, E128), bracket positions (E124) and the
use of backslash (E502).

Patch 2 fixes David's comments regarding backslash and an odd comment
 - thanks David!

Change-Id: I4fbd77ecf5395743cb96acb95fa946c322c16560"
smerritt,2012-10-11 21:04:02,https://api.github.com/repos/openstack/swift/git/commits/4cf96b37919d8be90e3c75194d5af4a5a2a36101,4cf96b37919d8be90e3c75194d5af4a5a2a36101,"Honor sample_rate in StatsD logging.

It's there to let administrators turn down the barrage of stats data
that StatsD must cope with, but it wasn't actually honored. Worse, if
the sample rate was set to e.g. 0.2, the stats would all be multiplied
by its inverse, e.g. 2. This patch actually drops packets when
sample_rate < 1, so you get correct measurements.

Fortunately, the default sample rate is 1 (i.e. drop nothing), and
multiplying by 1/1 doesn't change anything, so stats with the default
sample rate of 1.0 are, and have been, just fine.

Fixes bug 1065643.

Also, make the two touched files compliant with pep8 v1.3.3.

Change-Id: I66663144009ae4c9ee96f6a111745d8f5d2f5ca3"
vitoordaz,2012-10-12 12:46:48,https://api.github.com/repos/openstack/swift/git/commits/583850e86632a5d3f5c2abf558ea3fb729034b25,583850e86632a5d3f5c2abf558ea3fb729034b25,"fix bug with swob.Request accept property

Change-Id: I2c1246b9bbd1d3ab22c2a035b735d937dd90da11"
greglange,2012-10-09 18:48:12,https://api.github.com/repos/openstack/swift/git/commits/52baf4eee4bf9d4155f1a7cc1af3fc08685d6ef6,52baf4eee4bf9d4155f1a7cc1af3fc08685d6ef6,"fixed internal client things

_get_metadata() should only look for metadata on 200 family http status codes

in the path_parts() in the internal client test file should return distinct unicode strings
with spaces for account, container, and obj

Change-Id: I74e335d3b73a59092a0eec06539f4931420061dd"
fifieldt,2012-10-07 03:28:41,https://api.github.com/repos/openstack/swift/git/commits/124e75bc1bd0dd7eaeede5889d6a3441ad9694b1,124e75bc1bd0dd7eaeede5889d6a3441ad9694b1,"Allows removal of ACLs

fixes bug 1049017

As per the bug report, the -remove- form of deletion only works with
 meta headers and not with x-container-read and x-container-write.

This patch by Yukihiro KAWADA detects the container acls and sends
them through to the backend empty like the other metadata values.

patch2 extends metadata-helper in ContainerController tests so that
the new functionality can be tested.

patch3 changes the k.lower().startswith() commands for read/write to
a single k.lower - thanks David :)

patch4 fixes PEP8

patch5 fixes more than two hundred pep8 errors. Except one,
 where the pep8 tool complains of overindent, or underindent
depending on the position on the line. No idea how to fix that one.

patch6 fixes the remaining pep8 error - thanks Darrell

Change-Id: I36c2dd72b4636136c5ce7db414bf2b61501090ad"
dpgoetz,2012-10-08 22:45:40,https://api.github.com/repos/openstack/swift/git/commits/7f476d7b48b86608200a03ad84b53eecf91ce001,7f476d7b48b86608200a03ad84b53eecf91ce001,"fix swob for make_pre_authed_request

Change-Id: Ic263f4a77a0aa0eb40078772a567eb41a60e40f7"
derekhiggins,2012-10-09 08:30:28,https://api.github.com/repos/openstack/swift/git/commits/387744197ebea691add92f17d8964c0a4465d8e2,387744197ebea691add92f17d8964c0a4465d8e2,"Fixing alterations to sys.path

Fixes bug 1064249

sys.path should be extended not appended to

Change-Id: I3404a50b16b843b47f5082676029a4dd3b03f812"
vitoordaz,2012-10-06 12:46:06,https://api.github.com/repos/openstack/swift/git/commits/4bc1b1f18544edb2b9da1f67923f00661d86108c,4bc1b1f18544edb2b9da1f67923f00661d86108c,"fix typing in swift/common.db, swift/container/server.db

Change-Id: I5efb3712faa7d159be2d86913fa5fbdf09b7f98f"
redbo,2012-10-08 21:20:00,https://api.github.com/repos/openstack/swift/git/commits/c7e2e9a1f3c5c6a956667f443b76ffd72cae9b1d,c7e2e9a1f3c5c6a956667f443b76ffd72cae9b1d,"remove configobj from deps

Change-Id: Ie566e712ba0d3dca543e99efbdb576b19623e73c"
dbishop,2012-10-03 21:20:52,https://api.github.com/repos/openstack/swift/git/commits/e2b03267fd0f33e46d21d938f2d19085f4bb3e21,e2b03267fd0f33e46d21d938f2d19085f4bb3e21,"Fix two edge cases with Range: header

This fixes swob to handle ""Range: bytes=-X"" where X > len(content); ex.
""Range: bytes=-17"" when the object has 10 bytes. Based on the RFC, the
range is satisfiable and all bytes should be returned.

It also fixes ""Range: bytes=-0"" to be, correctly, not satisfiable.  In
addition, this case's response has Content-Length: 0 and has a zero-byte
body.

It also fixes an existing regression in swob for the case
""Range: bytes=100-"" for a body of length < 100 (Content-Length was
negative and the body was returned).

The relevant RFC is 2616, section 14.35.1.

Change-Id: Ib3dc672e083173eb970c10801283813623f26e0e"
pandemicsyn,2012-10-05 20:56:34,https://api.github.com/repos/openstack/swift/git/commits/92826d0602d8eb8956f5244e9dfdf8594ce0eefe,92826d0602d8eb8956f5244e9dfdf8594ce0eefe,"add support for custom log handlers

Add a hook to get_logger to run custom functions to add custom log
handlers or the like.

Change-Id: Ib04b12939dcac7e4ad6453dea9795682044c6ae0"
greglange,2012-10-02 18:25:24,https://api.github.com/repos/openstack/swift/git/commits/e7f3a9865e4c9e8891147421f0da7e04d69896f0,e7f3a9865e4c9e8891147421f0da7e04d69896f0,"internal client unicode paths

made internal client handle unicode path parts by adding make_path method
fixed pep8 problems in internal client and its test
moved internal client unit test file to correct directory

Change-Id: Id1c81c9cb0db05342e4e8a8393db93552fda4647"
vitoordaz,2012-10-03 22:47:22,https://api.github.com/repos/openstack/swift/git/commits/5b02fded4e9ea2770d32b00f9be56a343b824c1a,5b02fded4e9ea2770d32b00f9be56a343b824c1a,"cleanup double repeated response.headers['X-Timestamp'] = file.metadata['X-Timestamp']
in swift.obj.server.HEAD

Change-Id: Ie7cf853319589db7c48836dd5d7fd5e68cb009cd"
vitoordaz,2012-10-03 20:48:25,https://api.github.com/repos/openstack/swift/git/commits/0b756d75c43d5241bef9c5b8176710038feae79a,0b756d75c43d5241bef9c5b8176710038feae79a,"close_swift_conn is a method of swift.proxy.controllers.base.Controller, not function

Change-Id: I84dd7bc2fc5ebd1190a7184f42fc5ecf5fd7b4d3"
dbishop,2012-10-03 15:28:36,https://api.github.com/repos/openstack/swift/git/commits/57ebd1791088418634cd2cb84d3f475887af25ba,57ebd1791088418634cd2cb84d3f475887af25ba,"Warn when killing fails with EPERM

Have swift-init warn when the running user doesn't have permissions to
signal processes.  Fixes bug 1017494.

Change-Id: Icb9048ab36f1ca73bb93b11c9c2aed882d99dfa7"
dpgoetz,2012-10-02 17:42:28,https://api.github.com/repos/openstack/swift/git/commits/6f9473d31d8d928ec46c7178788d10239836959d,6f9473d31d8d928ec46c7178788d10239836959d,"catch no such file in hash_suffix

Change-Id: I70ee55d12b1ca91fdfe4891c3f82ab0f832f15d3"
dbishop,2012-10-02 04:43:34,https://api.github.com/repos/openstack/swift/git/commits/5582f166c25f2bc7562c38e13b8e72f7b017c79d,5582f166c25f2bc7562c38e13b8e72f7b017c79d,"Allow underscores in account/user in tempauth via encoding.

This patch introduces a new user format to tempauth which starts with
""user64_"" and in which the account and user are base64 encoded (sans
padding equal signs):

user64_<account_b64>_<user_b64> = <key> [group] [group] [...] [storage_url]

This allows unambiguous parsing and adds the ability to have a user or
account name containing underscores.

The handling of tempauth configuration is fully backward compatible and
this only adds new, optional functionality.

Also beefed up unit tests to get full coverage of the user parsing code
in tempauth's __init__().

Change-Id: Id06304934ab8055a28921f2e1aa3c58a2036d8f8"
redbo,2012-09-04 21:02:19,https://api.github.com/repos/openstack/swift/git/commits/5e3e9a882de8b51b8e3b27628ba39f0dabfc78df,5e3e9a882de8b51b8e3b27628ba39f0dabfc78df,"local WSGI Request and Response classes

This change replaces WebOb with a mostly compatible local library,
swift.common.swob.  Subtle changes to WebOb's API over the years have been a
huge headache.  Swift doesn't even run on the current version.

There are a few incompatibilities to simplify the implementation/interface:
 * It only implements the header properties we use.  More can be easily added.
 * Casts header values to str on assignment.
 * Response classes (""HTTPNotFound"") are no longer subclasses, but partials
   on Response, so things like isinstance no longer work on them.
 * Unlike newer webob versions, will never return unicode objects.

Change-Id: I76617a0903ee2286b25a821b3c935c86ff95233f"
dpgoetz,2012-09-28 19:24:15,https://api.github.com/repos/openstack/swift/git/commits/a6c44d2764992cf67dc1112141f7125fd74e64d2,a6c44d2764992cf67dc1112141f7125fd74e64d2,"allow replicator run_once to check specific devices/partitions

Change-Id: If45f77fda269ae6e251579542e70eb71bd11fe2a"
briancline,2012-09-21 16:35:59,https://api.github.com/repos/openstack/swift/git/commits/f91198d09b1b89290b1e4993673d26204d7c3c29,f91198d09b1b89290b1e4993673d26204d7c3c29,"Fix errors with fdatasync on BSD platforms

Abstracts fdatasync/fsync/fcntl into an FsyncWrapper to determine, the
first time it is used, which fsync-like call is supported on the host
platform:

 - Linux: use fdatasync(fd) as Swift already does today.
 - Darwin: use fcntl(fd, F_FULLFSYNC), since Darwin provides the
   F_FULLFSYNC flag when you wish to fsync data you care about, ensuring
   that it is written to disk and not simply a buffer.
 - BSD/Other: use fsync for non-Darwin BSDs and as a fallback for other
   platforms.

Change-Id: Ibcfdeef7843b2f10cf8a17a6b989038ea2364376"
redbo,2012-09-19 18:32:47,https://api.github.com/repos/openstack/swift/git/commits/bc60cc1160ed8e123f6c5d9c87e0ada3c5694d2b,bc60cc1160ed8e123f6c5d9c87e0ada3c5694d2b,"base controller GETorHEAD refactor

simplify, reduce the amount of code

Change-Id: I443a43030291f35a0b283cdd036cb09ec2ef9444"
notmyname,2012-09-25 21:37:45,https://api.github.com/repos/openstack/swift/git/commits/b530e62313cf2c8f44561f1023277fde289c3eed,b530e62313cf2c8f44561f1023277fde289c3eed,"updated with 1.7.5 version bump and changelog update

Change-Id: I04be779539b2bff76e2f614f50ddba2592fe4a36"
gholt,2012-09-25 19:23:31,https://api.github.com/repos/openstack/swift/git/commits/7e0c4eb1529d36f5fe8b40bdba986b6ff3be391b,7e0c4eb1529d36f5fe8b40bdba986b6ff3be391b,"Fixed leak on 499s

This fixes an issue where Request objects (and related objects) were
not getting garbage collected when a 499 (client disconnect) occurred
for responses that still would have had more than the proxy server's
client chunk size left to send.

Fixed bug #1055834

Change-Id: Ib7b5fffe970dcdec60b90a9bdcd67c49b68fb914"
dbishop,2012-09-25 18:22:11,https://api.github.com/repos/openstack/swift/git/commits/57b10cd38ce4a4f45e0a3990783946967fc52e4f,57b10cd38ce4a4f45e0a3990783946967fc52e4f,"Restore old SIGPIPE handler in a proxy server test.

I think not doing this was setting the SIGPIPE handler to signal.SIG_DFL
instead of the Python default of signal.SIG_IGN.  This could cause other
tests which make a client stop reading before all data ""chunks"" are read
to fail harder than they should (i.e. the SIGPIPE there is benign and
even expected--the other side of the socket really did get closed
early).

Change-Id: I946a1913714a34ec677b701a2b5724bc8b715f70"
briancline,2012-09-21 16:17:35,https://api.github.com/repos/openstack/swift/git/commits/87c1c5dce97a5f255b3936530ba69a58ffda1077,87c1c5dce97a5f255b3936530ba69a58ffda1077,"Gracefully handle stdin flush failure on BSD

Catches an IOError that is thrown when starting Swift on BSD-based
platforms, as the underlying system call to flush returns errno 9 (bad
file descriptor), whereas on Linux it succeeds.

Change-Id: Ic143d2fe6c3e1e0b39794958b40b0f5efdc17c06"
briancline,2012-09-21 16:05:11,https://api.github.com/repos/openstack/swift/git/commits/da99c3390bd50d7c03b96da6ff03c7c2ccd177d3,da99c3390bd50d7c03b96da6ff03c7c2ccd177d3,"Only set TCP_KEEPIDLE where supported

Resolves an issue preventing Swift from starting on BSD-based platforms
that do not have this TCP flag (FreeBSD, OSX/Darwin, OpenBSD); identical
to Glance bug 879195, change I2f062a34, Glance commit efcdac36
(originally reported and patched by Brian Waldon).

Change-Id: Ifd696fe1080464d060e608c075ad0c113baab5ab"
notmyname,2012-09-18 22:23:52,https://api.github.com/repos/openstack/swift/git/commits/8a7afa535f1c0d3d22ad92c213e85fa1ef841409,8a7afa535f1c0d3d22ad92c213e85fa1ef841409,"1.7.2. changelog and version bump to 1.7.3-dev

Change-Id: Id398b4c0764ca0995cec03c5f0ea6198ef877ade"
gholt,2012-09-18 18:24:47,https://api.github.com/repos/openstack/swift/git/commits/c97fb37e102ba03ef43736f2e67c5d76ea42bc4c,c97fb37e102ba03ef43736f2e67c5d76ea42bc4c,"Fix bug where serialization_format is ignored

Change-Id: I5a5ac8b5f18e077105ab12e9b1f0ccafac3983f7"
dprince,2012-09-15 00:42:05,https://api.github.com/repos/openstack/swift/git/commits/411c7cb8ff7350866e2dce5fceb6af648a7765c1,411c7cb8ff7350866e2dce5fceb6af648a7765c1,"Add README.md to the tarball.

Fixes LP Bug #1051125

Change-Id: If1f96e1d759276cafd5378b4e74b0dbcb1fa2358"
pandemicsyn,2012-09-14 21:09:23,https://api.github.com/repos/openstack/swift/git/commits/c4f5761101892fa83823240eb4f878b5cabd02c3,c4f5761101892fa83823240eb4f878b5cabd02c3,"builder.add_devs gets next id if not provided

Have builder.add_devs get the next id to use when adding a new device
if its not specified in the dict.

Change-Id: I5a0defab43f5cfc5d997080bfd8563bfe72368ad"
notmyname,2012-09-13 04:44:44,https://api.github.com/repos/openstack/swift/git/commits/bfc114bc1de89c996d07961eaa39794053238480,bfc114bc1de89c996d07961eaa39794053238480,"new more helpful README

Change-Id: Ie5e88178e061955aea8759e5451a2d33ccc76511"
notmyname,2012-09-12 18:15:25,https://api.github.com/repos/openstack/swift/git/commits/343968b2d33e2cdfe048c267a749315b80291165,343968b2d33e2cdfe048c267a749315b80291165,"added disable_fallocate info to docs

Change-Id: I8130e258d77f47bfa28ecf79a51a6e34671ada22"
notmyname,2012-09-12 15:46:50,https://api.github.com/repos/openstack/swift/git/commits/2ca379d40f06d892fdf6e3430ccd8a78726e5626,2ca379d40f06d892fdf6e3430ccd8a78726e5626,"added errno.EINVAL check to fallocate

On some systems (eg Illumos), posix_fallocate() returns
EINVAL when the underlying filesystem doesn't support the
operation. On Linux, the fallocate() call returns
EOPNOTSUPP.

The need for this patch was revealed by Victor Rodionov
<victor.rodionov@nexenta.com>.

Change-Id: I06fa9d49e7ec4084135843b7e0c91948dc098d27"
andymcc,2012-09-11 14:22:11,https://api.github.com/repos/openstack/swift/git/commits/463da7e170bb185fd80862c948ab73d24ed7f9d5,463da7e170bb185fd80862c948ab73d24ed7f9d5,"Adds Error Handling to swift-drive-audit for missing or unreadable /var/log/kern.log

Fixes Bug 1049081

Change-Id: If977080350cc5cdb6bc633b6af7d3c490ed23d46"
dpgoetz,2012-09-10 18:39:10,https://api.github.com/repos/openstack/swift/git/commits/d24e280bf4bccb4843337fabcb5f0e36f85cad52,d24e280bf4bccb4843337fabcb5f0e36f85cad52,"obj replicator speed up

Change-Id: If02b573353dedea9c2368ce4733fe97599229b2e"
redbo,2012-09-07 18:44:19,https://api.github.com/repos/openstack/swift/git/commits/063789b14e62a3bcbf7448fa46b4f6546325c417,063789b14e62a3bcbf7448fa46b4f6546325c417,"container_info returns a dict

This change refactors container_info to return a dict instead of a tuple
with 6 (and counting...) values.

Also adds container size to cached info.

Change-Id: If68a06ab170504fbf07323354f3d0e073850493d"
notmyname,2012-09-06 03:49:50,https://api.github.com/repos/openstack/swift/git/commits/a2ac5efaa64f57fbbe059066c6c4636dfd0715c2,a2ac5efaa64f57fbbe059066c6c4636dfd0715c2,"swift constraints are now settable via config

Change previously hard-coded constants into config variables. This
allows deployers to tune their cluster more specifically based on
their needs. For example, a deployment that uses direct swift access
for public content may need to set a larger header value constraint to
allow for the full object name to be represented in the Content-
Disposition header (which browsers check to determine the name of a
downloaded object).

The new settings are set in the [swift-constraints] section of
/etc/swift/swift.conf. Comments were also added to this config file.

Cleaned up swift/common/constraints.py to pass pep8 1.3.3

Funtional tests now require constraints to be defined in /etc/test.conf or in
/etc/swift/swift.conf (in the case of running the functional tests against a
local swift cluster). To have any hope of tests passing, the defined
constraints must match the constraints on the tested cluster.

Removed a ton of ""magic numbers"" in both unit and functional tests.

Change-Id: Ie4588e052fd158314ddca6cd8fca9bc793311465"
pandemicsyn,2012-09-05 17:37:09,https://api.github.com/repos/openstack/swift/git/commits/c0537ac6e0140bce6d5f016bb17ea784596d1b01,c0537ac6e0140bce6d5f016bb17ea784596d1b01,"Breakout search_devs & add get_builder() for reuse

This moves search_devs into RingBuilder to make it accessible to other utils
that need to search the builder. Along the same lines this also adds a
load() call to get a RingBuilder instance when working with the builder files.

- This adds python-mock >= 0.7 as a dependency for unittests. On Ubuntu
  10.04 you'll have to pip install it, on 12.04 you can apt-get install
  it. Fedora 17+ should be able to yum install it.
- new pep8 compliance
- Fixed a small issue (undefined var) in swift-ring-builder when remove was
called but failed to find a match.

Change-Id: I2e02684235aa2f4e901a00858ae037091594c545"
dbishop,2012-09-04 20:59:26,https://api.github.com/repos/openstack/swift/git/commits/46a093f068a158b72479522792509a882d3e47f1,46a093f068a158b72479522792509a882d3e47f1,"Obj replicator cleans up files where part dirs should be.

If a partition directory was a file instead of a directory, the
object-replicator would attempt to listdir() it, raise an exception, and
try again next iteration.  This condition could arise after running
xfs_repair.

Now, collect_jobs() will reap any partition directories which are
actually files.  Fixes bug 1045954.

Change-Id: Id65d3eab2effd61c3f6b25250611c88c907b2a16"
AlexYangYu,2012-09-04 15:01:02,https://api.github.com/repos/openstack/swift/git/commits/d56772a8982e61e82c2b2aba2c4c221016b60db8,d56772a8982e61e82c2b2aba2c4c221016b60db8,"Fix pep8 issues in test_memcached.py.

Change-Id: Ieeee2411f84489ea106909e18e758fd170aa9bca"
notmyname,2012-09-04 16:16:29,https://api.github.com/repos/openstack/swift/git/commits/07b4c21b42374721092c2a365ec81bc0cfbe873e,07b4c21b42374721092c2a365ec81bc0cfbe873e,"1.7.1 version bump

Change-Id: I3684a5694844dac282c0e4274b68525732c42637"
notmyname,2012-08-31 21:21:39,https://api.github.com/repos/openstack/swift/git/commits/341da755744d9be62e1a52200428d4531aa82e36,341da755744d9be62e1a52200428d4531aa82e36,"changelog and authors updates for 1.7 release

Change-Id: Ie38e49915cfd233bcf00469f184cf8fce7424472"
gholt,2012-09-04 14:41:12,https://api.github.com/repos/openstack/swift/git/commits/2e16b1f1e5837ed0bd10cac4fba08ed9d72a36cb,2e16b1f1e5837ed0bd10cac4fba08ed9d72a36cb,"Update swift.common.db to us swift.cmmn.utils.json

Change-Id: Ib4baac7b8b24d7fd982c71591deda3a096f470f2"
redbo,2012-09-03 06:55:53,https://api.github.com/repos/openstack/swift/git/commits/0bb5d6da135c4a234dcd5443ac0dff7147f56992,0bb5d6da135c4a234dcd5443ac0dff7147f56992,"use simplejson to serialize acct/cont results

I did some benchmarking, and it's just a lot faster to use simplejson
to serialize account and container listings.

Change-Id: Ib0f751d9a5b6f4020031e952986811f0be090cce"
notmyname,2012-08-31 21:22:56,https://api.github.com/repos/openstack/swift/git/commits/54a290718ce31d3e0e89eac6199b41510c45f11b,54a290718ce31d3e0e89eac6199b41510c45f11b,"bumped version to 1.7.0 to reflect current dev effort

Change-Id: I5423c8bf11b14f862cb321583d91991177fce5eb"
lrqrun,2012-08-31 03:24:46,https://api.github.com/repos/openstack/swift/git/commits/7b664c99e57ed3069032759d7c16bd9382603ae3,7b664c99e57ed3069032759d7c16bd9382603ae3,"Fix PEP8 issues in ./test/unit/common .

Fix some pep8 issues in
       modified:   test_bufferedhttp.py
       modified:   test_constraints.py
       modified:   test_db.py
       modified:   test_db_replicator.py
       modified:   test_init.py
make the code looks pretty.

Change-Id: I1c374b1ccd4f028c4e4b2e8194a6d1c201d50571"
dbishop,2012-08-26 06:02:53,https://api.github.com/repos/openstack/swift/git/commits/ed3b12d05caa8d807e8fea1036b8d21013bcab80,ed3b12d05caa8d807e8fea1036b8d21013bcab80,"Can run swift-bench across multiple cores/servers.

You run one or more swift-bench-client processes like this:
    $ swift-bench-client 127.0.0.1 20001
    $ swift-bench-client 127.0.0.1 20002

Then you run swift-bench with a new option, --bench-clients (-b), which is
specified once for each swift-bench-client:
    $ swift-bench -b 127.0.0.1:20001 -b 127.0.0.1:20002

You get log lines from each client (interleaved) along with a final report
for all clients:
    127.0.0.1:20002 swift-bench-server 2012-08-25 22:44:06,148 INFO Auth version: 1.0
    127.0.0.1:20001 swift-bench-server 2012-08-25 22:44:06,148 INFO Auth version: 1.0
    127.0.0.1:20001 swift-bench-server 2012-08-25 22:44:12,249 INFO 83 PUTS [0 failures], 41.5/s
    127.0.0.1:20002 swift-bench-server 2012-08-25 22:44:14,430 INFO 74 PUTS [0 failures], 34.3/s
    ...
    127.0.0.1:20002 swift-bench-server 2012-08-25 22:45:18,942 INFO Auth version: 1.0
    127.0.0.1:20002 swift-bench-server 2012-08-25 22:45:20,946 INFO 238 DEL [2 failures], 118.9/s
    swift-bench 2012-08-25 22:45:27,549 INFO 2000 PUTS **FINAL** [0 failures], 56.8/s
    swift-bench 2012-08-25 22:45:27,550 INFO 30000 GETS **FINAL** [50 failures], 974.6/s
    swift-bench 2012-08-25 22:45:27,550 INFO 2000 DEL **FINAL** [20 failures], 237.1/s

The concurrency, PUT count, and GET count config settings are divided by
the number of bench_clients.  In other words, the same volume of work is
attempted (vs. not specifying --bench-clients), but it can now span
servers and CPU cores.

Benchmark containers are created (if use_proxy = yes) and deleted (if
delete = yes), with appropriate concurrency, in the initiating
swift-bench process, not any of the swift-bench-client processes.

Change-Id: Idbf31a23093244ab357a9bf77e6031257774f24a"
dbishop,2012-08-20 00:44:43,https://api.github.com/repos/openstack/swift/git/commits/4a2ae2b46034e8027bee20dcfaaf38a9ee0c5c17,4a2ae2b46034e8027bee20dcfaaf38a9ee0c5c17,"Upating proxy-server StatsD logging.

Removed many StatsD logging calls in proxy-server and added
swift-informant-style catch-all logging in the proxy-logger middleware.
Many errors previously rolled into the ""proxy-server.<type>.errors""
counter will now appear broken down by response code and with timing
data at: ""proxy-server.<type>.<verb>.<status>.timing"".  Also, bytes
transferred (sum of in + out) will be at:
""proxy-server.<type>.<verb>.<status>.xfer"".  The proxy-logging
middleware can get its StatsD config from standard vars in [DEFAULT] or
from access_log_statsd_* config vars in its config section.

Similarly to Swift Informant, request methods (""verbs"") are filtered
using the new proxy-logging config var, ""log_statsd_valid_http_methods""
which defaults to GET, HEAD, POST, PUT, DELETE, and COPY.  Requests with
methods not in this list use ""BAD_METHOD"" for <verb> in the metric name.
To avoid user error, access_log_statsd_valid_http_methods is also
accepted.

Previously, proxy-server metrics used ""Account"", ""Container"", and
""Object"" for the <type>, but these are now all lowercase.

Updated the admin guide's StatsD docs to reflect the above changes and
also include the ""proxy-server.<type>.handoff_count"" and
""proxy-server.<type>.handoff_all_count"" metrics.

The proxy server now saves off the original req.method and proxy_logging
will use this if it can (both for request logging and as the ""<verb>"" in
the statsd timing metric).  This fixes bug 1025433.

Removed some stale access_log_* related code in proxy/server.py.  Also
removed the BaseApplication/Application distinction as it's no longer
necessary.

Fixed up the sample config files a bit (logging lines, mostly).

Fixed typo in SAIO development guide.

Got proxy_logging.py test coverage to 100%.

Fixed proxy_logging.py for PEP8 v1.3.2.

Enhanced test.unit.FakeLogger to track more calls to enable testing
StatsD metric calls.

Change-Id: I45d94cb76450be96d66fcfab56359bdfdc3a2576"
gholt,2012-08-29 19:57:26,https://api.github.com/repos/openstack/swift/git/commits/c509ac23711edb70caf62697592e11f56e8d7b95,c509ac23711edb70caf62697592e11f56e8d7b95,"Added ability to disable fallocate

Change-Id: Id8872c581ed23378a8e14cbf3bf049b5c0d21577"
notmyname,2012-08-27 21:44:41,https://api.github.com/repos/openstack/swift/git/commits/eb5f89ac25fb3edf5d6f0dcc238d4dea4cbbc7c8,eb5f89ac25fb3edf5d6f0dcc238d4dea4cbbc7c8,"fallocate call error handling

fallocate() failures properly return HTTPInsufficientStorage from
object-server before reading from wsgi.input, allowing the proxy
server to error_limit that node.

Change-Id: Idfc293bbab2cff1e508edf58045108ca1ef5cec1"
AlexYangYu,2012-08-28 02:51:49,https://api.github.com/repos/openstack/swift/git/commits/2a38a040924b621bce4e999b3c7dab692f497a21,2a38a040924b621bce4e999b3c7dab692f497a21,"Remove the gettext wrapper of server_type.

The gettext wrapper of server_type in controllers is used to translate
server_type in log. But the transfer_headers function which used to
filter the illegal metadata headers use the wrapped server_type. So, it
will cause problems that 'X-Account-Meta-' and 'X-Container-Meta-' would
be filtered when the language of operating system is not english, such
as Chinese or Japnese. So, I removed the wrapper.

Change-Id: I7d47e67b4caf5d0be171a90740f9bb12fa2cba84
Fixes: Bug #1042142"
dbishop,2012-08-25 23:02:45,https://api.github.com/repos/openstack/swift/git/commits/9bda92d54a4d80b7c274fa75f02a1c4ae293d6e7,9bda92d54a4d80b7c274fa75f02a1c4ae293d6e7,"Misc. swift-bench improvements.

swift-bench now honors the environment variables, ST_AUTH, ST_USER, and
ST_KEY like python-swiftclient does.

Added --lower-object-size (or -l) command-line option which, if
specified, will turn a specified --object-size into --upper-object-size.
It will raise a ValueError if --object-size is not specified or is <=
--lower-object-size.

BenchController how handles SIGINT (KeyboardInterrupt) similarly to the
swift command-line client: the first Ctrl-C will make it fast-track to
completion (no new PUT or GET operations are started, but everything PUT
is DELETE'ed).  A second Ctrl-C will immediately exit.  The behavior for
SIGTERM is unchanged (a single SIGTERM will immediately terminate the
process).

Added a sample configuration file for swift-bench, with documenting
comments.

Change-Id: I6f394ad995300fc8af3d565d95c3b45559ee510a"
AlexYangYu,2012-08-27 01:55:06,https://api.github.com/repos/openstack/swift/git/commits/28bff36b814a30c07e7ff67d896edd0d3562416f,28bff36b814a30c07e7ff67d896edd0d3562416f,"Remove redefinition of import traceback

Removed the redefinition of import in swift/object/server.py
Add my name in AUTHORS

Change-Id: Ia74df662de08fc52b92b828978d96a22b5df5597"
dbishop,2012-08-21 05:51:46,https://api.github.com/repos/openstack/swift/git/commits/1a6c42fccd0b277c98f7a8325d49500c5e87d8bb,1a6c42fccd0b277c98f7a8325d49500c5e87d8bb,"Fix when rate_limit_after_segment kicks in.

If rate_limit_after_segment was 10 in the proxy config, then after 10
segments were coughed up by _load_next_segment() with no calls to
sleep(), the 11th segment would not trigger a sleep() call.  The 12th
segment triggered a sleep(0) call, but it was only after the 13th
segment was loaded that an actual rate-limiting (non-zero) sleep got
called.

With this patch, a rate_limit_after_segment of 10 will start sleeping
the correct amount after the 11th segment.

Updated proxy-server.conf-sample with rate_limit_after_segment and
rate_limit_segments_per_sec.

Change-Id: I937c366996e6d6ab47c614d6db470e3be9657c07"
redbo,2012-08-23 19:38:09,https://api.github.com/repos/openstack/swift/git/commits/eb4af8f84097ae6f1c0057313dd8c0c002b3d49d,eb4af8f84097ae6f1c0057313dd8c0c002b3d49d,"split proxy controllers into individual modules

This is a pretty mechanical change that moves proxy controller
classes to their own files.

Change-Id: Iabb7bc134b07193e3bcc041a5c6890a0b95c2b55"
dbishop,2012-08-18 00:00:50,https://api.github.com/repos/openstack/swift/git/commits/66400b7337867403cbc7ec24e66f18e5826094a3,66400b7337867403cbc7ec24e66f18e5826094a3,"Add device name to *-replicator.removes for DBs

To tell when replication for a device has finished, it's important to
know when the replicator is removing objects.  This was previously
handled for the object-replicator
(object-replicator.partition.delete.count.<device> and
object-replicator.partition.update.count.<device> metrics) but not the
account and container replicators.

This patch extends the existing DB removal count metrics to make them
per-device.  The new metrics are:
 account-replicator.removes.<device>
 container-replicator.removes.<device>

There's also a bonus refactoring and increased test coverage of the DB
replicator code.

Change-Id: I2067317d4a5f8ad2a496834147954bdcdfc541c1"
redbo,2012-08-21 19:51:59,https://api.github.com/repos/openstack/swift/git/commits/da0e013d988094636f2d3026dbf5c9449c9986d9,da0e013d988094636f2d3026dbf5c9449c9986d9,"make obj replicator locking more optimistic

Basically, do all hashing in the replicator without a lock, then
lock briefly to rewrite the hashes file. Retry if someone else has
modified the hashes file in the mean time (which should be rare).

Also, a little refactoring.

Change-Id: I6257a53808d14b567bde70d2d18a9c58cb1e415a"
oldsharp,2012-08-22 04:20:30,https://api.github.com/repos/openstack/swift/git/commits/7ebb81c0f64a866bb55176462a6147363ee352c5,7ebb81c0f64a866bb55176462a6147363ee352c5,"Fix PEP8 issues.

Fix a PEP8 issues in doc/source/conf.py to make the code pretty.

Change-Id: I71d36ebb59d44ba145ca13e4f4827139f0466d78"
dbishop,2012-08-21 21:54:12,https://api.github.com/repos/openstack/swift/git/commits/56bb00f7c9cc17f6b138ab4a5cc969b2ad4b91ea,56bb00f7c9cc17f6b138ab4a5cc969b2ad4b91ea,"A couple minor tweaks to the SAIO guide.

Added ""-p"" to mkdir cmds in a ""set -e"" script (/etc/rc.local).

/var/log/swift gets owned by the group ""adm"", but isn't group writeable
by default, so the find/rm in ""resetswift"" fails.  So I added a chmod to
add group-write for that directory tree.

Added commands for installing tox.

Change-Id: Ic141491272a83a9233cd6a6a70c3ef74411f3f51"
cboylan,2012-08-21 21:43:08,https://api.github.com/repos/openstack/swift/git/commits/2352b9d66f7a767376d36bd5b79d4b2c328ea45a,2352b9d66f7a767376d36bd5b79d4b2c328ea45a,"Add nosehtmloutput as a test dependency.

Adding nosehtmloutput as a test dependency allows nose to output its
results to an html file. This will be used by Jenkins to save logs on
a different server.

Change-Id: I6bd4736e8cc4132db65bfe8cdfe1f3a388369fa8"
dbishop,2012-08-21 17:03:42,https://api.github.com/repos/openstack/swift/git/commits/af2ff124eb60ea9ba01f25f401bcd174e00a3052,af2ff124eb60ea9ba01f25f401bcd174e00a3052,"Update docs for new ring serialization.

The Admin Guide now contains information about the ring serialization
change (and importantly, how to downgrade, if necessary).

Also added container-server conf var, ""allow_versions"" to the Deployment
Guide.

Also changed description of proxy-server conf var,
""max_containers_whitelist"" to say it contains ""account names"" not
""account hashes"".

Change-Id: Ib23c6118cc5195cc04765afd28e442e4c735f0d4"
AlexYangYu,2012-08-17 11:44:21,https://api.github.com/repos/openstack/swift/git/commits/6dbac845d5096063d6b344cd0314d0b50f7c50b0,6dbac845d5096063d6b344cd0314d0b50f7c50b0,"Retuen a reasonable response to client.

As we use the 'account_autocreate' for auto-create accounts, we send a
request to HEAD an account which is just deleted(the account-reaper not
reclaim it immediately), the proxy-server will return 'HTTP 500 Internal
Server Error'.
In my opinion, this is unreasonable, so I change the code in swift/proxy
/server.py for returning a reasonable response. I modified the code in
POST, GETorHEAD and account_info. At last, I modified some code in the
unittest test/unit/proxy/test_server.py.

Change-Id: Ib057b387c9da073d707ffae49ead54206a8fb7dd
Fixes: Bug #1037889"
dbishop,2012-08-20 23:02:27,https://api.github.com/repos/openstack/swift/git/commits/d9443d68f910cfbddf492cf8f071ef4fef9c0d7f,d9443d68f910cfbddf492cf8f071ef4fef9c0d7f,"A few misc. code cleanups.

Fixed a couple config gets which weren't using TRUE_VALUES (hopefully
the last ones?).

Removed a deprecated parameter from
swift.common.db.ContainerBroker.list_objects_iter() a ""TODO"" which dates
back to the original import of Swift into github.

Also made AccountBroker.reclaim()'s docstring match its arg names.

Change-Id: I646bdd00a3693763b55a50ba210c7ed2ba1df4cd"
pandemicsyn,2012-08-17 18:03:48,https://api.github.com/repos/openstack/swift/git/commits/e7c2ae985ad579200874111c4bfb57306396091c,e7c2ae985ad579200874111c4bfb57306396091c,"Cleanup after LockTimeout

- If lock_file encounters a LockTimeout a fd can be left behind
- Fixes bug 1038191

Change-Id: Ib3f45d18aeeec91eedf0b4f0492664d33b4f57fa"
gholt,2012-08-13 15:58:01,https://api.github.com/repos/openstack/swift/git/commits/fa661d5b210004d89e53a03bac5076aabd5eda76,fa661d5b210004d89e53a03bac5076aabd5eda76,"ring.py: Uses simplejson if avail and pep8 1.3.1

Change-Id: I1f91a82da064c9f0e64779f4fa8951962678831b"
kazum,2012-08-10 05:00:09,https://api.github.com/repos/openstack/swift/git/commits/edd38035be4f64d547938f44fb2d96a72eeb672a,edd38035be4f64d547938f44fb2d96a72eeb672a,"handle exception correctly in _make_app_iter_reader

_make_app_iter_reader uses a queue to pass read data to
_make_app_iter, and uses an empty string as a terminator.  The problem
is that it pushes the same terminator even if it fails to reads the
data.  If an exception happens before pushing all data to the queue,
_make_app_iter exits without yielding all data.  In that case,
proxy-server stops in the middle of sending data, and a client waits
for all data to come infinitely.

This patch uses a boolean value for the terminator instead of an empty
string to distinguish the results, and raises an exception in the
error cases.  Fixes bug 890888.

Change-Id: Ie4d48025843aa1bb600446da6f4fc49f82a440bf"
notmyname,2012-08-07 23:26:38,https://api.github.com/repos/openstack/swift/git/commits/3c82151c4408dbec62d0c54c772e6d13b07e8e58,3c82151c4408dbec62d0c54c772e6d13b07e8e58,"update object versions docs

Change-Id: I00bf2e20c2683d0440ca425461e0ab87197ee720"
gholt,2012-08-06 20:53:24,https://api.github.com/repos/openstack/swift/git/commits/61932d85066e646b9d7fabb58fc5ac1dd2ab9eb3,61932d85066e646b9d7fabb58fc5ac1dd2ab9eb3,"Fixed bug where expirer would get confused by...

Fixed bug where expirer would get confused by odd deletion times.
Since this has already rolled out, I just capped things at ten 9s, or
Sat Nov 20 17:46:39 2286. I can't wait for the Y2286 world panic. :/

Change-Id: Iba10963faa344a418a1fa573d5c85f4ff864b574"
litong01,2012-08-06 13:02:45,https://api.github.com/repos/openstack/swift/git/commits/d8c5c0c8975a6991fb53dd916e579ac762a1bc80,d8c5c0c8975a6991fb53dd916e579ac762a1bc80,"all in one setup rc.local needs -p for mkdir command

bug fixes for swift 1033089
Swift 1.6.0 All in One setup uses rc.local to create a set of
directories like the following:
   /var/cache/swift /var/cache/swift2 /var/cache/swift3
   /var/cache/swift4
   /var/run/swift
without -p for mkdir command, when some of these directories
already exist, the rc.local fails so that the next set of
command won't execute. This causes swift fail to start because
of /var/run/swift does not exist. Adding -p to both mkdir
command solves this problem.

Change-Id: Ia26c9a857723747008293c0631c9acc1b58eca7e"
dbishop,2012-08-05 07:51:49,https://api.github.com/repos/openstack/swift/git/commits/f8ce43a21891ae2cc00d0770895b556eea9c7845,f8ce43a21891ae2cc00d0770895b556eea9c7845,"Use custom encoding for RingData, not pickle.

Serialize RingData in a versioned, custom format which is a combination
of a JSON-encoded header and .tostring() dumps of the
replica2part2dev_id arrays.  This format deserializes hundreds of times
faster than rings serialized with Python 2.7's pickle (a significant
performance regression for ring loading between Python 2.6 and Python
2.7).  Fixes bug 1031954.

swift.common.ring.ring.RingData is now responsible for serialization and
deserialization of its data via a new load() class method and save()
object method.  The new implementation is backward-compatible; if a ring
does not begin with a new-style magic string, it is assumed to be an
old-style pickle-dumped ring and is handled as before.  So new Swift
code can read old rings, but old Swift code will not be able to read
newly-serialized rings. THIS SHOULD BE MENTIONED PROMINENTLY IN THE
RELEASE NOTES.

I didn't want to bite of more than necessary, so I didn't mess with
builder file serialization.

Change-Id: I799b9a4c894d54fb16592443904ac055b2638e2d"
NingZhangWisc,2012-08-03 18:47:28,https://api.github.com/repos/openstack/swift/git/commits/aad7cdc36441b91b517006a34bbd034bc15d2af4,aad7cdc36441b91b517006a34bbd034bc15d2af4,"To simulate the real workloads, the objects to be uploaded could be created in the random sizes, which are bounded (lower_object_size and upper_object_size) by the user inputs.

Change-Id: I64647c5d613a0794f0807886a4833cd5c31c0c5e"
vuntz,2012-06-21 12:37:41,https://api.github.com/repos/openstack/swift/git/commits/e1ff51c04554d51616d2845f92ab726cb0e5831a,e1ff51c04554d51616d2845f92ab726cb0e5831a,"Do not use pickle for serialization in memcache, but JSON

We don't want to use pickle as it can execute arbitrary code. JSON is
safer. However, note that it supports serialization for only some
specific subset of object types; this should be enough for what we need,
though.

To avoid issues on upgrades (unability to read pickled values, and cache
poisoning for old servers not understanding JSON), we add a
memcache_serialization_support configuration option, with the following
values:

 0 = older, insecure pickle serialization
 1 = json serialization but pickles can still be read (still insecure)
 2 = json serialization only (secure and the default)

To avoid an instant full cache flush, existing installations should
upgrade with 0, then set to 1 and reload, then after some time (24
hours) set to 2 and reload. Support for 0 and 1 will be removed in
future versions.

Part of bug 1006414.

Change-Id: Id7d6d547b103b4f23ebf5be98b88f09ec6027ce4"
gholt,2012-08-02 14:49:02,https://api.github.com/repos/openstack/swift/git/commits/ef3f8bb335de47439211e3e72835ffa50beb3559,ef3f8bb335de47439211e3e72835ffa50beb3559,"Ensure parameters sent to db are utf8 strs

Change-Id: I45952adfcfbc813477ee9966f05dcdeef23c683b"
gholt,2012-08-01 21:07:32,https://api.github.com/repos/openstack/swift/git/commits/d2b51dd2b66afc796f297ba73ea438ce5b66ec98,d2b51dd2b66afc796f297ba73ea438ce5b66ec98,"Updated use of iter_nodes for handoff logging

Change-Id: I95a750613b01bdc4d64444d7e7fae8190760d697"
gholt,2012-08-01 00:16:12,https://api.github.com/repos/openstack/swift/git/commits/7923c56afadf272da0db1a34810bbc029ea4d047,7923c56afadf272da0db1a34810bbc029ea4d047,"Fixed proxy logging.

It wasn't logging the full path, depending on if WebOb's
path_info_pop had been called.

Change-Id: I612d4cae7a4dc1bf5164356af329496245ad85dc"
gholt,2012-07-31 04:22:12,https://api.github.com/repos/openstack/swift/git/commits/0d38c710a57228f6c8dadb994ae2ce79d6a7058e,0d38c710a57228f6c8dadb994ae2ce79d6a7058e,"Cleaner fix to format regression fix

This ensures req.accepts is only assigned a valid content type.

Change-Id: Idf19277959c516398d31f771cf42dec0733d1bc0"
gholt,2012-07-31 02:26:39,https://api.github.com/repos/openstack/swift/git/commits/de9b81baee2b9cbd87c28812ae85bc5020b06774,de9b81baee2b9cbd87c28812ae85bc5020b06774,"Fixes regression with format=somethingelse

The WebOb 1.2 support patch introduced a regression where an unknown
format= query used to just default back to plain but now returns a
400. This will break anyone that uses format=text for instance, or
anything else ""invalid"".

Arguably, it makes the most sense to 400 in the case of an invalid
format requested, but since it is also a backwards compatibility
break, I recommend we keep the previous behavior. Retaining the
previous behavior seems less damaging than enforcing the new
behavior.

Change-Id: I6db015b33a6f3ab239b8cb4a3562ebdba1f76590"
pandemicsyn,2012-07-30 20:09:14,https://api.github.com/repos/openstack/swift/git/commits/f2f6b2f26ca82c369629146ab1b97cd1b15871d1,f2f6b2f26ca82c369629146ab1b97cd1b15871d1,"Report all unmounted drives

- swift-recon cli now reports all unmounted drives.
- Fixes bug 1031060

Change-Id: Ia9e6bbf05215879b602e9dcb77d007094c494dc1"
notmyname,2012-07-30 01:55:19,https://api.github.com/repos/openstack/swift/git/commits/ceaf7606fe25f77cf31deb2946a16ae7a6fec05c,ceaf7606fe25f77cf31deb2946a16ae7a6fec05c,"updated changelog with patch from review

Change-Id: Ib2d54da92a3f7e7325998e3e52f562a1bf538c28"
gholt,2012-07-29 17:22:18,https://api.github.com/repos/openstack/swift/git/commits/a1a4d35362bda35112e7e41da70952ddf032f93a,a1a4d35362bda35112e7e41da70952ddf032f93a,"Logging improvements: handoffs and thread locals

A warning log line is emitted whenever the proxy has to use a handoff
node. Monitoring these warnings can indicate a problem within your
cluster; however, you can disable these log lines by setting the
proxy conf's log_handoffs to false.

While working on this, I also noticed why many proxy log lines did
not have txn_id and client_ip -- subcoroutines. Now the logger thread
locals are copied to the subcoroutines.

Change-Id: Ibac086e1b985f566c068d083620287509de35da8"
gholt,2012-07-29 18:17:14,https://api.github.com/repos/openstack/swift/git/commits/3800fdc1a97efd796593441f4ba20d62906a0c26,3800fdc1a97efd796593441f4ba20d62906a0c26,"Fixed bug in staticweb with log_headers

Change-Id: I7e5e254660e2ce35bc7fa95435db0a987d5acd0a"
notmyname,2012-07-25 16:25:11,https://api.github.com/repos/openstack/swift/git/commits/21616c2fc995ff5928b2d5e5c6ffc71cdfa763c2,21616c2fc995ff5928b2d5e5c6ffc71cdfa763c2,"1.6.1 version bump

Change-Id: I683633ef1c7a5df7522299a85090f1ffda0c287a"
notmyname,2012-06-22 16:44:23,https://api.github.com/repos/openstack/swift/git/commits/53e35ba4ffeab4d2614b790a0d8fb615b9359374,53e35ba4ffeab4d2614b790a0d8fb615b9359374,"changelog for 1.6.0

Change-Id: Ia97050ac2b0b438535f31a8eb400801c782160f9"
notmyname,2012-07-25 15:30:58,https://api.github.com/repos/openstack/swift/git/commits/03cec57e5db036169c79c04e66abff49b3451350,03cec57e5db036169c79c04e66abff49b3451350,"version bump to reflect current dev effort

Change-Id: Ic2869ab7f728ed1a4d8b34c37f0540c582d7dbcc"
pandemicsyn,2012-07-13 22:13:53,https://api.github.com/repos/openstack/swift/git/commits/0da1b4f82d105e89729e41e45a22cf5ddc3d719a,0da1b4f82d105e89729e41e45a22cf5ddc3d719a,"Create and configure /var/cache/swift in SAIO

Fixes bug #1024477

Change-Id: Id09bbff6bb4a5d032727d3ca53b3276b4769d178"
notmyname,2012-07-20 16:15:34,https://api.github.com/repos/openstack/swift/git/commits/de3b663a735f2cd200a7b140bdf2ea2b25a4f2d3,de3b663a735f2cd200a7b140bdf2ea2b25a4f2d3,"ensure that accessing the ring devs reloads the ring if necessary

Change-Id: If5a6d32c40de02183a2eed6e2a32d62ba38df32d"
vuntz,2012-07-05 13:43:14,https://api.github.com/repos/openstack/swift/git/commits/faff4ae769f71f79f066774f959028a4391fe689,faff4ae769f71f79f066774f959028a4391fe689,"Forbid substrings based on a regexp in name_filter middleware

In comments from https://review.openstack.org/8798 it was raised that it
might make sense to forbid some substrings in the name_filter
middleware.

There is now a new forbidden_regexp option for the name_filter
middleware to specify which substrings to forbid. The default is
""/\./|/\.\./|/\.$|/\.\.$"" (or in a non-regexp language: the /./ and /../
substrings as well as strings ending with /. or /..).

This can be useful for extra paranoia to avoid directory traversals
(bug 1005908), or for more general filtering.

Change-Id: I39bf2de45b9dc7d3ca4d350d24b3f2276e958a62
DocImpact: new forbidden_regexp option for the name_filter middleware"
iryoung,2012-06-05 18:39:53,https://api.github.com/repos/openstack/swift/git/commits/de4d23c2a517050ab0afd0c8d0dbab817139b055,de4d23c2a517050ab0afd0c8d0dbab817139b055,"Adapt Swift for WebOb 1.2

Based on PatchSet 3 of https://review.openstack.org/#/c/7569/ , make them to pass all funcional tests with both webob 1.x and 1.2.

The additional following compatibility issues were addressed:
 - Until patch for range header issue is merged into official webob release, testRangedGetsWithLWSinHeader() should skip test against webob 1.2
(https://github.com/Pylons/webob/commit/49c175aec2b5c134511dfea6564bfb1d37ab23a9)

 - common.constraints.check_utf8() can accept both utf8 str and unicode.

 - To convert unicode to utf-8 str if necessary.

 - Making proxy_logging can handle invalid utf-8 str

bug 888371
bug 959881

blueprint webob-support

Change-Id: I00e5fd04cd1653259606a4ffdd4926db3c84c496"
pandemicsyn,2012-07-13 22:48:37,https://api.github.com/repos/openstack/swift/git/commits/5f72a8db4a9c31d0139b523e6b5a4e0c966294bc,5f72a8db4a9c31d0139b523e6b5a4e0c966294bc,"Fix Dispersion report and swift-bench on saio

We're still using saio:11000 in a few spots so a few things
don't work out of the box on the saio. Fixes bug #1024561

Change-Id: I226de54c2785b0d0b681c8d0cc24260adbd3d663"
gholt,2012-06-30 20:23:24,https://api.github.com/repos/openstack/swift/git/commits/4a9d19197c5084c2a2a804ac2564950c913d5c2e,4a9d19197c5084c2a2a804ac2564950c913d5c2e,"Updated probe tests

The probe tests were woefully out of date with all the changes that
have ocurred since they were written. I've updated most of them and
removed some that are hopeless outdated.

I also greatly improved the timing issues (hopefully completely
solved them? I ran them 25 times with no problems) and made them pep8
1.3.1 safe.

Change-Id: I8e9dbb6e7d6e04e293843b1dce1ded99d84e0348"
chmouel,2012-06-20 15:37:30,https://api.github.com/repos/openstack/swift/git/commits/afa4f70024be30cb1a0b84b9744f044f2532904f,afa4f70024be30cb1a0b84b9744f044f2532904f,"Move swift_auth middleware from keystone to swift.

- Rename it to keystoneauth for consistenties.
- Implements blueprint keystone-middleware.

Change-Id: I208fecdf3ee991694b4239f065032324d297fd35"
vuntz,2012-06-19 10:11:06,https://api.github.com/repos/openstack/swift/git/commits/cc1907eef5a8ba7f6c6a53e5f44752ae88111e6b,cc1907eef5a8ba7f6c6a53e5f44752ae88111e6b,"Validate devices and partitions to avoid directory traversals

swift.common.utils.validate_device_partition is a new function to check
that a device and a partition are valid. This means that they don't
contain '/' and are not '.' or '..'.

We use this new function every time we get devices and partitions from a
request.

Fix bug 1005908

Change-Id: Ia545ba8f877e85b4b576d6d7d09d890877ea6d34"
gholt,2012-06-28 20:27:15,https://api.github.com/repos/openstack/swift/git/commits/d8c2d0e1bc7b804b54c3060a83c7866419b247b2,d8c2d0e1bc7b804b54c3060a83c7866419b247b2,"FormPost logging bugfix and slight refactor

In the interest of getting us to pep8 1.3.1 compliance I also fixed
all violations in the two files I was modifying anyway.

Fixes bug 1019051

Change-Id: I52eb7d59d2e2810a8cee2461f7ca869124e734e7"
gholt,2012-06-28 23:25:27,https://api.github.com/repos/openstack/swift/git/commits/f2a61ab50ed755b0a3c8bf57bf6795d25ff47851,f2a61ab50ed755b0a3c8bf57bf6795d25ff47851,"Fixed bug 1011636 with segmented objects

The X-Object-Manifest header value should be url encoded to allow for
""special"" characters to be used. This fix decodes such encoding. A
corresponding fix to python-swiftclient (and any other clients) needs
to be made to url encode the header value when sending.

I also fixed any pep8 1.3.1 violations I found in the test I modified
to verify this.

Change-Id: I67f23dec1dc95ee37354dfdd9897f34758135ee6"
iryoung,2012-06-22 20:19:00,https://api.github.com/repos/openstack/swift/git/commits/49a9cc7e68c1558b1fabb71ebdf6c6c70a9b6a3e,49a9cc7e68c1558b1fabb71ebdf6c6c70a9b6a3e,"Made ranged requests on large objects working correctly when size of manifest file is not 0 byte.

Fixed bug 969411

Ranged GET request checked wheter the object is large objects only when response is 416 Requested Range Not Satisfiable.

All ranged GET requests should check the object is large object or not because size of the manifest file can be larger than 0.

Change-Id: Ia3632252d6879a773be881149c10ce0f5ffbcd82"
vuntz,2012-06-28 14:09:10,https://api.github.com/repos/openstack/swift/git/commits/1125368624ae70b84a4ef3da3bb515d36f29173f,1125368624ae70b84a4ef3da3bb515d36f29173f,"Remove ambiguity in memcache_servers documentation

The documentation could be understood like the following:
memcache_servers from memcache.conf is always used if set, even if
memcache_servers in proxy-server.conf is set.

This is clearly not the case, as proxy-server.conf has a higher priority
if it memcache_servers is set there.

Change-Id: I967c7e80796a0e296c5c65bd097df1669d16203e"
iryoung,2012-06-18 14:40:50,https://api.github.com/repos/openstack/swift/git/commits/c67e56848cec310193f17b4e006948a17006a442,c67e56848cec310193f17b4e006948a17006a442,"Use buffered gzip stream with python 2.7.

- Fixes bug 898169.
- It's possible to make GzipFile inherits io.BufferedIOBase in python
  2.6, but IMO it's better let people to use 2.7 if they really need
  this feature.

Change-Id: I4c6e4858e3f616af892e7f4fa6daae0f6ee31723"
bloodeagle40234,2012-06-22 11:47:52,https://api.github.com/repos/openstack/swift/git/commits/f0eb25a973585e6a6cdb7c69a342fc6a38055e0d,f0eb25a973585e6a6cdb7c69a342fc6a38055e0d,"add UDP protocol support for logger

When a syslog daemon fails and SysLogHandler cannot reconnect to
it, server processes (proxy, container, object, and more)
would start consuming 100 % CPU and stop responding to requests.
It is because the server process go into an infinite loop if they
fail to reconnect to /dev/log.
This problem happens only when using unix_sockets.

This change enables us to use syslog without unix_sockets and fixes bug 780025.

Change-Id: Ibcc99a1a148b1008036146bf3bd079a9be24982c"
gholt,2012-06-27 05:01:55,https://api.github.com/repos/openstack/swift/git/commits/be79b0884eb7ba91836c5296aec92cf6066be767,be79b0884eb7ba91836c5296aec92cf6066be767,"Fixes for probe tests

Updated the imports and added a head_account to the ""is the cluster
started yet?"" checks. Hopefully this fixes the notorious timing
issues of these tests where auth answers requests just a bit before
the rest of the cluster is ready.

Fixes bug 1014931

Change-Id: Iea1d62db2317560371da49af5e94a0279b646294"
dprince,2012-06-22 17:05:53,https://api.github.com/repos/openstack/swift/git/commits/69fd05f439ffeafa022d5152f0c69c0912598a84,69fd05f439ffeafa022d5152f0c69c0912598a84,"Remove hard coded man page paths.

Fixes LP Bug #1016656.

Change-Id: I22455d27cb82830dabd4fb0677da26915a60eb85"
kazum,2012-06-21 16:34:39,https://api.github.com/repos/openstack/swift/git/commits/a4ebc465c3df971e9db5a3943325a1119f8ec995,a4ebc465c3df971e9db5a3943325a1119f8ec995,"use sort_key to compare the number of partitions the device wants

Fixes bug 1016140.

Change-Id: I0c98561f58f80408064ea178c6d6e8889604cddb"
smerritt,2012-06-20 19:38:58,https://api.github.com/repos/openstack/swift/git/commits/67af56b1563cf6fbca332b1bd06d9240ccf8890e,67af56b1563cf6fbca332b1bd06d9240ccf8890e,"Make `swift-get-nodes -a` show all handoffs.

Commit 95786e5 made swift-get-nodes only output N handoff nodes, where
N is the ring's replica count. This change leaves that behavior in
place as the default, but adds the option -a/--all to print all the
handoff nodes.

This is handy if you're consuming the output with a script, e.g. if
you're doing some analysis of the distribution of primary+handoff
nodes for a particular set of things.

Change-Id: Ie0253575bb21ccf25559a1c5fd20570a58a2d9fa"
greglange,2012-06-05 21:32:25,https://api.github.com/repos/openstack/swift/git/commits/f4c319b94cd4b6c0d39358b3fe9a06fca0b0a31f,f4c319b94cd4b6c0d39358b3fe9a06fca0b0a31f,"Made dispersion report work with any replica count other than 3.

This changes the JSON output keys missing_one and missing_two to
missing_1 and missing_2 (if there are at least 2 replicas), drops
the missing_all key, and can add more missing_x keys depending on
the replica count. We will definitely need to post a prominent
notice of this change with the next release.

bug 862816

Change-Id: Ib747d944476638c33ee1d876b8f9db28953826e2"
kazum,2012-06-18 09:15:24,https://api.github.com/repos/openstack/swift/git/commits/50806efdbaad4b59a2d8a9596514f9dd9fd60ec1,50806efdbaad4b59a2d8a9596514f9dd9fd60ec1,"check disk failure before syncing for each partition

If disk failure happens while object replication is ongoing,
object-replicator could replicate objects from other nodes to the root
file system.  It is because object-replicator does no mount check
(error check) at all after collect_jobs() is called, and it executes
rsync based on the old partition information in update().

This change prevents many objects from being written to the root file
system wrongly and fixes bug 1014545.

Change-Id: Icf740a2683e360df89eccb71b269977f294340b9"
gholt,2012-06-13 00:40:44,https://api.github.com/repos/openstack/swift/git/commits/8b778c706af47f4804c9c4d72176185142e6127c,8b778c706af47f4804c9c4d72176185142e6127c,"Make proxy-logging more like eventlet.posthook

The old use of Eventlet's posthook process meant that responses that
forgot to include content-length or transfer-encoding headers would
get one tacked on, if Eventlet could guess what was probably meant. I
added a bit of that logic into proxy-logging now as we saw some
errors resulting from this.

Fixes Bug #1012714

Change-Id: I671453eaf3704eab814ff12c4625ba7d749cc7ed"
fcharlier,2012-06-11 17:29:32,https://api.github.com/repos/openstack/swift/git/commits/ef3e556b72378427be2d5abe28b6090e1b991b53,ef3e556b72378427be2d5abe28b6090e1b991b53,"swift-bench should be able to use auth version 2.0

Fixes Bug #1011727

Change-Id: I6681bd85a5ddb82a1059913ae90696e5994aa906"
gholt,2012-06-13 01:55:11,https://api.github.com/repos/openstack/swift/git/commits/95786e577c328778de9a734bcd664dd7a7daf46b,95786e577c328778de9a734bcd664dd7a7daf46b,"Update swift-get-nodes to return fewer more_nodes

Changed swift-get-nodes to just return up to replica_count of
more_nodes instead of all of them. When you have thousands of drives,
returning all possible handoff nodes is pretty crazy. :)

Change-Id: I864e7243726ca3ef2ac08c4ab660a05789f37878"
emonty,2012-06-08 23:59:26,https://api.github.com/repos/openstack/swift/git/commits/e7180a5876067e929e0606f552e91ee357a143d4,e7180a5876067e929e0606f552e91ee357a143d4,"Align tox.ini and fix coverage jobs in jenkins.

The jenkins coverage jobs expect there to be a .coverage file, so deleting
it is a bad idea. Also, coverage erase will do that for us.
While we're in there, update tox.ini and setup.cfg to the latest.

Change-Id: Icd0a8fc66a5146e0d94f62a9f65a4536981d2916"
smerritt,2012-06-07 23:39:56,https://api.github.com/repos/openstack/swift/git/commits/28cd9b2da834957ba168a11390e331cc6011a6ef,28cd9b2da834957ba168a11390e331cc6011a6ef,"Make object server's caching more configurable.

The object server had a constant KEEP_CACHE_SIZE = 5*1024*1024;
unauthenticated GET requests for files smaller than KEEP_CACHE_SIZE
would not evict the file from the kernel's buffer cache after it was
read from disk.

Now that hardcoded constant is a configuration parameter
(""keep_cache_size""), and now there is also another parameter called
""keep_cache_private"". If set, then both authenticated and
unauthenticated GET requests for small files will not evict the data
from the buffer cache. The default values are 5 MiB and False,
respectively, so the default behavior is the same.

Bonus: the ""mb_per_sync"" parameter is now documented in the deployment
guide.

Change-Id: I9a11dbe861f4c23535c6aa82a9111a6fe2db2a59"
greglange,2012-06-06 19:57:04,https://api.github.com/repos/openstack/swift/git/commits/27455cb15bc29b19953d6d47aad669a7b246f97b,27455cb15bc29b19953d6d47aad669a7b246f97b,"added printing of 404s to dispersion report; fixed small, unrelated bug

also fixed bug where in error_log where identifier wasn't being set to anything meaningful, set it to the right thing

bug 612722

Change-Id: I53f237ea0db2a5b2b8979a7b41189faf1275e861"
greglange,2012-06-07 20:19:31,https://api.github.com/repos/openstack/swift/git/commits/6987d222de0c39137dcbaf4c1577862963cd75e3,6987d222de0c39137dcbaf4c1577862963cd75e3,"Added config options for rate limiting of large object downloads.

bug 786197

Change-Id: Idd73986ca4550b20dff340df4acd12f3bfc01075"
vuntz,2012-06-07 14:45:07,https://api.github.com/repos/openstack/swift/git/commits/f7757e4ebf07471367d7b04deff0fe5dbb9df781,f7757e4ebf07471367d7b04deff0fe5dbb9df781,"Fix typos in source documentation

metdata -> metadata
requets -> requests

Change-Id: Idc3c67e6415532e64e1d04c767f64e1d50269f44"
chmouel,2012-05-22 08:57:10,https://api.github.com/repos/openstack/swift/git/commits/22572b506a268c8bf8e01c2ffcd244ebae021a76,22572b506a268c8bf8e01c2ffcd244ebae021a76,"Remove swift.common.client from here.

- It has been to its own gerrit project.
- direct_client should follow next.
- Implements blueprint clientbindings.

Change-Id: I3bb50c95eba81302bfec71cb7ce5288b85a41dc0"
mapleoin,2012-06-04 11:27:39,https://api.github.com/repos/openstack/swift/git/commits/9af3df9ee8c3ebad9a6a84beb6768a92b3515879,9af3df9ee8c3ebad9a6a84beb6768a92b3515879,"fix object replication on older rsync versions when using ipv4

Fixes bug 987388

Change-Id: I6eb5c45fe1f5844ad853a4ff9bc8fd23cc9abd5d"
dprince,2012-06-04 18:58:21,https://api.github.com/repos/openstack/swift/git/commits/f48f253f4c3b3f543c3fcd0ba0a65cffe8b17b02,f48f253f4c3b3f543c3fcd0ba0a65cffe8b17b02,"Raise ClientException for invalid auth version.

Fixes LP Bug #1008667.

Change-Id: I1e767a804b617eff8a9700c3d98b2360c040933a"
greglange,2012-06-04 17:04:11,https://api.github.com/repos/openstack/swift/git/commits/63ad27cd5fdd5cce3b989974bbc1c70c19ea58a4,63ad27cd5fdd5cce3b989974bbc1c70c19ea58a4,"Added global catchall to account-reaper.

bug 644075

Change-Id: I75c73a42ddd8654a39a2fd82320941199bee4363"
mapleoin,2012-06-01 14:39:35,https://api.github.com/repos/openstack/swift/git/commits/9f5a6bba1a954c6c3009a824dbb4a5ef582304d5,9f5a6bba1a954c6c3009a824dbb4a5ef582304d5,"only allow methods which implement HTTP verbs to be called remotely

This fixes 500 server crashes caused by requests such as:

curl -X__init__ ""http://your-swift-object-server:6000/sda1/p/a/c/o""

Fixes bug 1005903

Change-Id: I6c0ad39a29e07ce5f46b0fdbd11a53a9a1010a04"
gholt,2012-06-03 03:06:01,https://api.github.com/repos/openstack/swift/git/commits/213f38534818db96dce6cbcaede284510335f7e9,213f38534818db96dce6cbcaede284510335f7e9,"Fixed bug with container reclaim/report race

Before, a really lagged cluster might not get its final report for a
deleted container database sent to its corresponding account
database. In such a case, the container database file would be
permanently deleted while still leaving the container listed in the
account database, never to be updated since the actual container
database file was gone. The only way to fix such the situation before
was to recreate and redelete the container.

Now, the container database file will not be permanently deleted
until it has sent its final report successfully to its corresponding
account database.

Change-Id: I1f42202455e7ecb0533b84ce7f45fcc7b98aeaa3"
smerritt,2012-06-01 22:24:21,https://api.github.com/repos/openstack/swift/git/commits/783f16035a8e251d2138eb5bbaa459e9e4486d90,783f16035a8e251d2138eb5bbaa459e9e4486d90,"Fix starvation in object server with fast clients.

When an object server was handling concurrent GET or POST requests
from very fast clients, it would starve other connected clients. The
greenthreads responsible for servicing the fast clients would hog the
processor and only rarely yield to another greenthread.

The reason this happens for GET requests is found in
eventlet.greenio.GreenSocket, in the send() method. When you call
.send(data) on a GreenSocket, it immediately calls .send(data) on its
underlying real socket (socket._socketobject). If the real socket
accepts all the data, then GreenSocket.send() returns without yielding
to another greenthread. Only if the real socket failed to accept all
the data (either .send(data) < len(data) or by raising EWOULDBLOCK)
does the GreenSocket yield control.

Under most workloads, this isn't a problem. The TCP connection to
client X can only consume data so quickly, and therefore the
greenthread serving client X will frequently encounter a full socket
buffer and yield control, so no clients starve. However, when there's
a lot of contention for a single object from a large number of fast
clients (e.g. on a LAN connected w/10Gb Ethernet), then one winds up
in a situation where reading from the disk is slower than writing to
the network, and so full socket buffers become rare, and therefore so
do context switches. The end result is that many clients time out
waiting for data.

The situation for PUT requests is analogous; GreenSocket.recv() seldom
encounters EWOULDBLOCK, so greenthreads seldom yield.

This patch calls eventlet.sleep() to yield control after each chunk,
preventing any one greenthread's IO from blocking the hub for very
long.

This code has the flaw that it will greenthread-switch twice when a
send() or recv() does block, but since there isn't a way to find out
if a switch occurred or not, there's no way to avoid it. Since
greenlet switches are quite fast (faster than system calls, which the
object server does a lot of), this shouldn't have a significant
performance impact.

Change-Id: I8549adfb4a198739b80979236c27b76df607eebf"
gholt,2012-06-01 15:59:07,https://api.github.com/repos/openstack/swift/git/commits/7a9c2d6ea5159eda937fad5505ba0360358f2521,7a9c2d6ea5159eda937fad5505ba0360358f2521,"Proxy logging content-length fix

Change-Id: Iad2f12b3db44378c1369481c567b3d13b9a4b75f"
pandemicsyn,2012-05-31 23:25:05,https://api.github.com/repos/openstack/swift/git/commits/243b4395071783c666418e44c77bc89c9aeab9c1,243b4395071783c666418e44c77bc89c9aeab9c1,"Ensure empty results are returned

Make sure that empty but still valid results (like no unmounted drives)
aren't treated as 500 errors.

Change-Id: I9588e2711d7916406f15613d5a26b9f0cf38235a"
gholt,2012-05-31 22:58:56,https://api.github.com/repos/openstack/swift/git/commits/135f1542857007d91270cc764e1ec700d43dfc98,135f1542857007d91270cc764e1ec700d43dfc98,"Fixed bug where 204 would sometimes be chunked

Not sure how this got introduced (which really annoys me)
but here's the fix to make sure the content-length /
transfer-encoding headers are set properly. Specifically,
the proxy was sometimes returning transfer-encoding: chunked
with no content-length on 204 No Content responses where it
used to return content-length: 0 and no transfer-encoding
header at all.

Change-Id: I0927d102bc5e4324e38dbbb44be9033a6cd8ee20"
gholt,2012-05-31 18:33:12,https://api.github.com/repos/openstack/swift/git/commits/d4c58183541fcce94730abb4f3071760029092f3,d4c58183541fcce94730abb4f3071760029092f3,"Fixed another make_pre_auth bug (wsgi.input)

Change-Id: I8b3c182ab85d4c5545e0a4259a64a496ebaf2bcb"
ttx,2012-05-30 13:39:37,https://api.github.com/repos/openstack/swift/git/commits/9a2d9b920b61310da197c6128690a822bc3c8c3b,9a2d9b920b61310da197c6128690a822bc3c8c3b,"Adding missing files in generated tarballs

Fix MANIFEST.in to include tools/, tox.ini and test/sample.conf
in generated tarballs. Fixes bug 960018 and bug 1005801.

Change-Id: Ifa83eab62300e3aec71ced217dc3cdcb2846ea0e"
notmyname,2012-05-28 18:36:59,https://api.github.com/repos/openstack/swift/git/commits/d668b27c0967bfe47e3d91d50600c9be5dc653a1,d668b27c0967bfe47e3d91d50600c9be5dc653a1,"fixed doc table format

Change-Id: I319de933ecfb1e3853e3064656968c36980ce5f5"
notmyname,2012-05-28 13:10:19,https://api.github.com/repos/openstack/swift/git/commits/ad6a00d0a260b894f73e6d32df2b94f8a1391bc4,ad6a00d0a260b894f73e6d32df2b94f8a1391bc4,"1.5.1 version bump to continue dev

Change-Id: Ied84c8274b3aee5f63a11e557c6c59729666d99f"
notmyname,2012-05-25 16:01:32,https://api.github.com/repos/openstack/swift/git/commits/576be4d77efc57b7ee20f0207845349de9960b1b,576be4d77efc57b7ee20f0207845349de9960b1b,"Updated AUTHORS, CHANGELOG, and version for 1.5.0 release

Change-Id: I9e0e26394a1892d757e33806511940cbe43be4d5"
gholt,2012-05-27 21:48:13,https://api.github.com/repos/openstack/swift/git/commits/e060561506876578f39f798404ecb5d5b3bea9d2,e060561506876578f39f798404ecb5d5b3bea9d2,"Fixed query removal bug in make_pre_authed_request

Change-Id: I1b8238fb2ffe07b1474f7d8f040fdc620b6897d7"
redbo,2012-05-25 04:15:51,https://api.github.com/repos/openstack/swift/git/commits/7c98e7a6259a64b4971bf1035c1bb99278ee8590,7c98e7a6259a64b4971bf1035c1bb99278ee8590,"Move proxy server logging to middleware.

Change-Id: I771c87207d4e1821e32c3424b341d182cc7ea7c0"
gholt,2012-05-25 00:19:02,https://api.github.com/repos/openstack/swift/git/commits/9c8afc8b0e56c18d41bda8336c39d5c844f0df74,9c8afc8b0e56c18d41bda8336c39d5c844f0df74,"Fixed the one new thing PEP8 1.1 found

Change-Id: Iaa15bd47ff5ba48bd971ccc8c1707930977116df"
pandemicsyn,2012-05-14 23:01:48,https://api.github.com/repos/openstack/swift/git/commits/ccb6334c1704e601f42a1bc024ef7ab11280cf20,ccb6334c1704e601f42a1bc024ef7ab11280cf20,"Expand recon middleware support

Expand recon middleware to include support for account and container
servers in addition to the existing object servers. Also add support
for retrieving recent information from auditors, replicators, and
updaters. In the case of certain checks (such as container auditors)
the stats returned are only for the most recent path processed.

The middleware has also been refactored and should now also handle
errors better in cases where stats are unavailable.

While new check's have been added the output from pre-existing
check's has not changed. This should allow existing 3rd party
utilities such as the Swift ZenPack to continue to function.

Change-Id: Ib9893a77b9b8a2f03179f2a73639bc4a6e264df7"
chmouel,2012-05-21 15:37:01,https://api.github.com/repos/openstack/swift/git/commits/d02a73f4a9e7d96602523199be869ebbc573bdeb,d02a73f4a9e7d96602523199be869ebbc573bdeb,"Remove swift3 from here.

- Reference https://github.com/fujita/swift3 in associated_projects.
- Implements blueprint add-associated-projects-docs.

Change-Id: I48ef4c03449edf6ef4fda1a391228cacac7d2ac6"
notmyname,2012-05-17 15:43:44,https://api.github.com/repos/openstack/swift/git/commits/1e90b6107642a9cddf3eb9ce34c4407e0e1a8ba8,1e90b6107642a9cddf3eb9ce34c4407e0e1a8ba8,"Re-add cname lookup and domain remap middleware

Revert ""removed cname lookup middleware""

This reverts commit b47bcf19e41e862ca84d77a7b8843f836e084b6a.

Revert ""removed domain remap middleware""

This reverts commit 317cf868bdf66dbc17c02d4ca383efafa5e2f229.

Change-Id: I260498d555c93b28896ace48a6f0e96701cbcc38"
gholt,2012-05-22 00:30:47,https://api.github.com/repos/openstack/swift/git/commits/9eb797b09916574c2a4e0f5f9ea61fe120879075,9eb797b09916574c2a4e0f5f9ea61fe120879075,"!! Changed db_preallocation to False

Long explanation, but hopefully answers any questions.

We don't like changing the default behavior of Swift unless there's a
really good reason and, up until now, I've tried doing this with this
new db_preallocation setting.

For clusters with dedicated account/container servers that usually
have fewer disks overall but SSD for speed, having db_preallocation
on will gobble up disk space quite quickly and the fragmentation it's
designed to fight isn't that big a speed impact to SSDs anyway.

For clusters with account/container servers spread across all servers
along with object servers usually having standard disks for cost,
having db_preallocation off will cause very fragmented database files
impacting speed, sometimes dramatically.

Weighing these two negatives, it seems the second is the lesser evil.
The first can cause disks to fill up and disable the cluster. The
second will cause performance degradation, but the cluster will still
function.

Furthermore, if just one piece of code that touches all databases
runs with db_preallocation on, it's effectively on for the whole
cluster. We discovered this most recently when we finally configured
everything within the Swift codebase to have db_preallocation off,
only to find out Slogging didn't know about the new setting and so
ran with it on and starting filling up SSDs.

So that's why I'm proposing this change to the default behavior.

We will definitely need to post a prominent notice of this change
with the next release.

Change-Id: I48a43439264cff5d03c14ec8787f718ee44e78ea"
zaitcev,2012-05-18 01:20:31,https://api.github.com/repos/openstack/swift/git/commits/f04b30e496aad149514093d3a5cceb0ac547ce38,f04b30e496aad149514093d3a5cceb0ac547ce38,"Clean up weird test code

While fixing something else, the strange code in the test suite
presented itself. Looks like a massive copy-paste error and a couple
of random oddities.

Change-Id: I191e8cd9299b9336b0600363780d2930a04d1fd5"
gholt,2012-05-16 21:08:34,https://api.github.com/repos/openstack/swift/git/commits/1c3b75c29140939350807bf0e5faa2d35e7257a8,1c3b75c29140939350807bf0e5faa2d35e7257a8,"Reverted the pulling out of various middleware:

RateLimit
StaticWeb
TempURL/FormPOST

Change-Id: I988e93e6f4aacb817a2e354d43a04e47516fdf88"
dbishop,2012-04-01 23:47:08,https://api.github.com/repos/openstack/swift/git/commits/3d3ed34f44646cc8a653dd0c75e664a03bc8d558,3d3ed34f44646cc8a653dd0c75e664a03bc8d558,"Adding StatsD logging to Swift.

Documentation, including a list of metrics reported and their semantics,
is in the Admin Guide in a new section, ""Reporting Metrics to StatsD"".
An optional ""metric prefix"" may be configured which will be prepended to
every metric name sent to StatsD.

Here is the rationale for doing a deep integration like this versus only
sending metrics to StatsD in middleware.  It's the only way to report
some internal activities of Swift in a real-time manner. So to have one
way of reporting to StatsD and one place/style of configuration, even
some things (like, say, timing of PUT requests into the proxy-server)
which could be logged via middleware are consistently logged the same
way (deep integration via the logger delegate methods).

When log_statsd_host is configured, get_logger() injects a
swift.common.utils.StatsdClient object into the logger as
logger.statsd_client.  Then a set of delegate methods on LogAdapter
either pass through to the StatsdClient object or become no-ops. This
allows StatsD logging to look like:
    self.logger.increment('some.metric.here')
and do the right thing in all cases and with no messy conditional logic.

I wanted to use the pystatsd module for the StatsD client, but the
version on PyPi is lagging the git repo (and is missing both the prefix
functionality and timing_since() method).  So I wrote my
swift.common.utils.StatsdClient.  The interface is the same as
pystatsd.Client, but the code was written from scratch.  It's pretty
simple, and the tests I added cover it.  This also frees Swift from an
optional dependency on the pystatsd module, making this feature easier
to enable.

There's test coverage for the new code and all existing tests continue
to pass.

Refactored out _one_audit_pass() method in swift/account/auditor.py and
swift/container/auditor.py.

Fixed some misc. PEP8 violations.

Misc test cleanups and refactorings (particularly the way ""fake logging""
is handled).

Change-Id: Ie968a9ae8771f59ee7591e2ae11999c44bfe33b2"
smerritt,2012-05-10 07:07:57,https://api.github.com/repos/openstack/swift/git/commits/8e6f099daa61b68dfc709f6df157e76a5022babe,8e6f099daa61b68dfc709f6df157e76a5022babe,"Speed up swift-get-nodes by 2x.

It was loading the ring off disk once to print the primary nodes, and
then loading the whole thing off disk again to print the handoff
nodes. Changed it to only load the ring off disk once.

Change-Id: I6f4cd0af9762e1e69660c3eb20586590b5339e5f"
dpgoetz,2012-05-10 04:55:48,https://api.github.com/repos/openstack/swift/git/commits/20384f1f84a564f6f36c93777d613c8ec2c685b3,20384f1f84a564f6f36c93777d613c8ec2c685b3,"have wsgi preauth copy over HTTP_HOST

Change-Id: I1d9a6dcc6fcdad5cf99353eaf7eb69e703c38e22"
smerritt,2012-04-23 17:41:44,https://api.github.com/repos/openstack/swift/git/commits/bb509dd863dc99c06a232d1d8e0f950a7e73dcc8,bb509dd863dc99c06a232d1d8e0f950a7e73dcc8,"As-unique-as-possible partition replica placement.

This commit introduces a new algorithm for assigning partition
replicas to devices. Basically, the ring builder organizes the devices
into tiers (first zone, then IP/port, then device ID). When placing a
replica, the ring builder looks for the emptiest device (biggest
parts_wanted) in the furthest-away tier.

In the case where zone-count >= replica-count, the new algorithm will
give the same results as the one it replaces. Thus, no migration is
needed.

In the case where zone-count < replica-count, the new algorithm
behaves differently from the old algorithm. The new algorithm will
distribute things evenly at each tier so that the replication is as
high-quality as possible, given the circumstances. The old algorithm
would just crash, so again, no migration is needed.

Handoffs have also been updated to use the new algorithm. When
generating handoff nodes, first the ring looks for nodes in other
zones, then other ips/ports, then any other drive. The first handoff
nodes (the ones in other zones) will be the same as before; this
commit just extends the list of handoff nodes.

The proxy server and replicators have been altered to avoid looking at
the ring's replica count directly. Previously, with a replica count of
C, RingData.get_nodes() and RingData.get_part_nodes() would return
lists of length C, so some other code used the replica count when it
needed the number of nodes. If two of a partition's replicas are on
the same device (e.g. with 3 replicas, 2 devices), then that
assumption is no longer true. Fortunately, all the proxy server and
replicators really needed was the number of nodes returned, which they
already had. (Bonus: now the only code that mentions replica_count
directly is in the ring and the ring builder.)

Change-Id: Iba2929edfc6ece89791890d0635d4763d821a3aa"
smerritt,2012-05-09 19:28:00,https://api.github.com/repos/openstack/swift/git/commits/47f0dbb125d6e679cb979a5297c5f04982f960c3,47f0dbb125d6e679cb979a5297c5f04982f960c3,"One PEP8 fix to make tox happy again.

Change-Id: I5ff2056f9f2eb99bfb98b020e3fc013332100e12"
notmyname,2012-05-09 15:15:23,https://api.github.com/repos/openstack/swift/git/commits/b47bcf19e41e862ca84d77a7b8843f836e084b6a,b47bcf19e41e862ca84d77a7b8843f836e084b6a,"removed cname lookup middleware

The code has moved to https://github.com/notmyname/swift-cnamelookup.

For current users of cname lookup, this will require installing the new
package and changing the ""use"" line of the cname lookup conf section's
to:

[filter:cname_lookup]
use = egg:swift_cnamelookup#swift_cnamelookup

And then 'swift-init proxy reload'.

Change-Id: If622486ddb04a53251244c9840aa3cfe72168fc5"
gholt,2012-05-09 18:40:51,https://api.github.com/repos/openstack/swift/git/commits/3f00c1a63094a7196a3ad31633aaa82b0641813b,3f00c1a63094a7196a3ad31633aaa82b0641813b,"Pulled out Rate Limit middleware

Rate Limit middleware is now at
http://dpgoetz.github.com/swift-ratelimit/

For current users of Rate Limit, this will require installing the new
package and changing the ""use"" line of the ratelimit conf section to:

[filter:ratelimit]
use = egg:swiftratelimit#middleware

And then 'swift-init proxy reload'.

Change-Id: I2ab774e9cee9fba4103c1be4bea6d52d1adb29f7"
notmyname,2012-05-07 14:41:42,https://api.github.com/repos/openstack/swift/git/commits/7dfbd785b067e8875bc2f241827c71d39b69cd74,7dfbd785b067e8875bc2f241827c71d39b69cd74,"removed domain remap middleware

The code has moved to https://github.com/notmyname/swift-domainremap.

For current users of domain remap, this will require installing the new
package and changing the ""use"" line of the domain remap conf section's
to:

[filter:domain_remap]
use = egg:swift_domainremap#swift_domainremap

And then 'swift-init proxy reload'.

Change-Id: I710caf9b991f9d37df36b826ae4338086d0ec36d"
gholt,2012-05-08 19:48:29,https://api.github.com/repos/openstack/swift/git/commits/c0532a6ef24965584206ddb952c4ee7f1379398e,c0532a6ef24965584206ddb952c4ee7f1379398e,"Pulled out TempURL/FormPOST

TempURL/FormPOST is now at http://gholt.github.com/swift-tempurl/

For current users of TempURL/FormPOST, this will require installing the new
package and changing the ""use"" line of the tempurl and formpost conf section's
to:

[filter:tempurl]
use = egg:swifttempurl#tempurl

[filter:formpost]
use = egg:swifttempurl#formpost

And then 'swift-init proxy reload'.

Change-Id: I5bddf7f9e09ee07815530a41c46ff901fc21b447"
dpgoetz,2012-05-07 20:46:41,https://api.github.com/repos/openstack/swift/git/commits/a539ac56f0762d4a6c0e431fa33f1706c6dee7a8,a539ac56f0762d4a6c0e431fa33f1706c6dee7a8,"fix pre_auth request funcs to handle quoted paths

Change-Id: I739e3f600cedab5c7174a5b1f0ff2ec6003fc453"
notmyname,2012-05-07 20:15:28,https://api.github.com/repos/openstack/swift/git/commits/cc21288037f222fe309490a7a5ebbbc41d633ab3,cc21288037f222fe309490a7a5ebbbc41d633ab3,"added annegentle entry in .mailmap

Change-Id: I9416d7e5ca155ce8b3258d4e18dd32917dc314a8"
gholt,2012-05-05 00:08:37,https://api.github.com/repos/openstack/swift/git/commits/7dde9096211eb5a0c116bdd3e9371734e9a39ab5,7dde9096211eb5a0c116bdd3e9371734e9a39ab5,"Pulled StaticWeb out to separate project

StaticWeb is now at http://gholt.github.com/swift-staticweb/

For current users of StaticWeb, this will require installing the new
package and changing the ""use"" line of the staticweb filter conf
section to:

use = egg:swiftstaticweb#middleware

And then 'swift-init proxy reload'.

Change-Id: Iab32adb5927698a667c5c6d6a572c44ca23414eb"
greglange,2012-05-04 18:07:22,https://api.github.com/repos/openstack/swift/git/commits/8d2fe89a7d3026977a43ab12f157b5dc4f92f8db,8d2fe89a7d3026977a43ab12f157b5dc4f92f8db,"Added an internal client.

Refactored object expirer to use this client.

Change-Id: Ibeca6dba873f8b4a558ecf3ba6e8d23d36f545b0"
smerritt,2012-05-04 01:33:05,https://api.github.com/repos/openstack/swift/git/commits/2ccf219ec176e98f657c925b484a915371a0c6bf,2ccf219ec176e98f657c925b484a915371a0c6bf,"Make scripts in bin/ PEP8-compliant.

Also made tox's PEP8 check look at the scripts in bin/ to keep them
PEP8-compliant.

Change-Id: I710365ea929d7fc15578d5f742a236bad47ef28e"
gholt,2012-05-04 03:25:36,https://api.github.com/repos/openstack/swift/git/commits/f7c0f91da62932978141dce9a30c19700f3ad0d7,f7c0f91da62932978141dce9a30c19700f3ad0d7,"Added associated_projects.rst

In the interest of keeping the core Swift code repository less
complex, but still offering a quick way to find associated projects
that enhance or use Swift, I've added this new Associated Projects
page prominently to the Swift documentation.

This will allow much less barrier to entry on enhancing Swift as
other projects can work independently and will only need to wait on
the core Swift project for approval of minimal tweaks to the core
Swift code base.

It will also allow an easy central place to find cool associated
projects that otherwise might go unnoticed or even duplicated.

The plan is to move non-essential projects that are currently
embedded in the Swift repository out into their own projects with
links to them on this new page. This would include items such as
(just what I can think of right now): bin/swift command line tool and
clients, swift-bench, swift-dispersion, TempURL, FormPost, StaticWeb,
Rate Limiting, Swift3, Domain Remap, and CNAME Lookup.

After all that is done, those projects will be able to move forward
much more quickly and new developers for Swift itself will have much
less to learn and get confused about.

Change-Id: Ib8447d8bd480f0a3d8f0413137ccdba73a11dd91"
smerritt,2012-04-29 19:03:49,https://api.github.com/repos/openstack/swift/git/commits/0befccccdfa4db00cacbce91ec88e87c1467b517,0befccccdfa4db00cacbce91ec88e87c1467b517,"Let some swift-ring-builder commands take >1 arg.

`swift-ring-builder X.builder [add|set_weight|set_info|remove]` can
now work on multiple devices at once.

This allows for faster bulk operations; for example, if an
administrator has to add 48 new devices to the ring, then this lets
them do it in one command invocation. Since each invocation of
swift-ring-builder follows a deserialize-operate-serialize pattern,
using the bulk form of the commands on N devices will save N-1
[de]serializations.

Change-Id: Ibf77528f28026866af3c94d0370181c8013d5bc5"
gholt,2012-05-03 00:25:31,https://api.github.com/repos/openstack/swift/git/commits/e7d37b1a05657b62ff79b6879e8a68977be9f0f3,e7d37b1a05657b62ff79b6879e8a68977be9f0f3,"Fixed inconsistent end_marker

The listing of containers was inclusive whereas the listing of
objects was exclusive. I searched and searched and only found
end_marker usage with listings of objects so I changed the listings
of containers to match that.

Change-Id: Ia8eb66a7ceaef28c698e2d4e19dd5dfd9197a911"
fifieldt,2012-04-28 06:31:00,https://api.github.com/repos/openstack/swift/git/commits/9920aeb7d451e1e9eb0af2e5be0c2fb3a302f4fb,9920aeb7d451e1e9eb0af2e5be0c2fb3a302f4fb,"bug 661267 adding config eastereggs, fixing defaults

Change-Id: I41356ee250c9088a2387b0d493586dd990a04ac3"
gholt,2012-04-26 20:29:08,https://api.github.com/repos/openstack/swift/git/commits/5f18d987a0e1127d2ef8f5e79809282e21601c0b,5f18d987a0e1127d2ef8f5e79809282e21601c0b,"Fixed tabs in the multi-node doc.

Change-Id: Idf2ea227b0078026eb2693ff7c0a24ec926bb6f3"
zaitcev,2012-04-26 16:58:07,https://api.github.com/repos/openstack/swift/git/commits/6b9135200779f7ab8cfd212fc93496e522d32de2,6b9135200779f7ab8cfd212fc93496e522d32de2,"Restore the syntax -U tenant:user

On a relatively recent build of swift, all my scripts blew up with
""No tenant specified"". It was caused by the fix to add --os_tenant_name,
commit ID:  208b8e85a80e46ddb49dc2035cb292570a20c7db

This patch restores the old behavior. I tested it to work with old
swauth-based Swift, new Keystone-based Swift, in the latter case using
both -U and --os_tenant_name arguments.

Note that this patch permits to use a literal colon in the user name
with the new syntax, as long as tenant is specified. Empty tenant
names are not allowed with either syntax.

Change-Id: I7785e6981a9d6281d0421c43875ee19d61d5ff43
Bug: 982909"
vitoordaz,2012-04-20 22:02:19,https://api.github.com/repos/openstack/swift/git/commits/d2d09227071edb8a0fed913979eaa0a338cf6c2b,d2d09227071edb8a0fed913979eaa0a338cf6c2b,"HTTP status value naming normalization

Replace HTTP status code with constants like HTTP_OK, HTTP_NOT_FOUND, etc.

Change-Id: I76cd8bf880e7269454192a3bc4b027a297741247"
mapleoin,2012-04-24 15:55:59,https://api.github.com/repos/openstack/swift/git/commits/92312f563112d74fd821eb7ddb6facc549fa4d78,92312f563112d74fd821eb7ddb6facc549fa4d78,"remove unused imports and useless empty class Base

Change-Id: I78dbb390cf0afe03d4bcf1aa9ffc9497392579dd"
notmyname,2012-04-23 21:27:43,https://api.github.com/repos/openstack/swift/git/commits/3053c53ef7e9dd3efea10c535021786f7e6e92f2,3053c53ef7e9dd3efea10c535021786f7e6e92f2,"added docs and warnings about using SSL

Change-Id: I766b2da0a3769869b5b6c5565106e9032fea8c3e"
annabellebertooch,2012-04-23 15:48:24,https://api.github.com/repos/openstack/swift/git/commits/a6a810f2337be858a543401e6f57e2c6460e8f3d,a6a810f2337be858a543401e6f57e2c6460e8f3d,"Adds links to docs.openstack.org

In the side bar, links to past versions and docs.openstack.org

On the index.rst, links to wiki and docs.openstack.org

Change-Id: Icf33c6f396e1ab016fd86a56e61df3e063a1bae2"
mapleoin,2012-04-18 12:12:10,https://api.github.com/repos/openstack/swift/git/commits/c51788a4ac225f361c7307f8e0d4c92022ad73b5,c51788a4ac225f361c7307f8e0d4c92022ad73b5,"make test runner functions return the status of running the tests

This makes it a lot easier for CI jobs to be setup and return the true
status of the testsuite.

Change-Id: I0c2b0d6b17f560a889cd2f22ab98a68361f6d738"
mapleoin,2012-04-17 15:27:38,https://api.github.com/repos/openstack/swift/git/commits/c82c719f9327fbeeac147c10507897216936cac8,c82c719f9327fbeeac147c10507897216936cac8,"return the full response from FakeAppObject

Fixes bug 984042

Change-Id: I18a6eac497b24338af4d82a568484b0fc9d97382"
gholt,2012-04-14 05:23:28,https://api.github.com/repos/openstack/swift/git/commits/b20264c9d3196944618590c829817390032d2090,b20264c9d3196944618590c829817390032d2090,"Allowed the proxy to pass on the X-Timestamp header.

Change-Id: I31a64614231391b52855b88220319b2359bea142"
notmyname,2012-04-09 19:18:49,https://api.github.com/repos/openstack/swift/git/commits/7540bea7e1b289782bc6a5c708ada33490ad5fb9,7540bea7e1b289782bc6a5c708ada33490ad5fb9,"fix when deleting a versioned object when the version target container is missing

Change-Id: I16a8d1f5543d62a6d968bf1b9f52f319902437cb"
dpgoetz,2012-04-12 19:46:03,https://api.github.com/repos/openstack/swift/git/commits/40cbff9fd3913bb7d36e2c145367c740dfc2d47b,40cbff9fd3913bb7d36e2c145367c740dfc2d47b,"proxy to be able to deny request to invalid hostnames

Change-Id: I974f729da60e5ab9453daf9e52466b3e1af5c69b"
btorch,2012-04-06 19:58:35,https://api.github.com/repos/openstack/swift/git/commits/6a9d5f921d54425d602e60f01c5b9add825f0daf,6a9d5f921d54425d602e60f01c5b9add825f0daf,"Appending some new information to proxy, account and container config manpages. Adding object-expirer files and swift-orphans as well. Also making some minor modification on the other files to stop lithian from complaining during package creation checks. Adding name to Authors file.

Change-Id: Id68231ced070b27d1f7fb5a230d345694632e7dd"
PaulMcMillan,2012-04-10 19:25:01,https://api.github.com/repos/openstack/swift/git/commits/92fbf44d10ee37097aec5c64e43066285f7a240c,92fbf44d10ee37097aec5c64e43066285f7a240c,"Fixed grammar and improve docs.

Corrected its/it's mistakes, harmonized line wrapping within some docs
and clarified doc wording in several places.

Change-Id: Ib9ac6d5e859f770a702e1fad6de8d4abe0390b47"
gholt,2012-04-10 18:16:06,https://api.github.com/repos/openstack/swift/git/commits/d5067017f0509129d8d3e41aeff5d7c2a634643e,d5067017f0509129d8d3e41aeff5d7c2a634643e,"Removed SCRIPT_NAME from preauth env

Change-Id: Iaf5f7011cf41f503b7ccdea671cd31a0466f5248"
zaitcev,2012-04-10 16:41:22,https://api.github.com/repos/openstack/swift/git/commits/93964ff0a50a9f96af2a87a41644e90b745dfbf0,93964ff0a50a9f96af2a87a41644e90b745dfbf0,"Fix colorization of ""hash"" in SAIO doc.

Admittedly, this is ridiculously trivial, but the coloring of
""hash"" always peeved me. Not so much that it existed, but that
I did not understand what caused it. After consulting our Sphinx
experts, it turned out that the code block was considered code
in Python and ""hash"" is a reserved word in Python, so it was
colored.

One option is to declare the code block ""ini"", which is what
it is, but that causes the block stand out just as badly, unless
we highlight every one of them. So, for now use ""none"".

Change-Id: Icee021fc30839eeb02cd3e232ff6be92ed32df52"
zaitcev,2012-04-10 16:27:54,https://api.github.com/repos/openstack/swift/git/commits/3aabe86e344629527de0a04c9215e0bd34a0b4a8,3aabe86e344629527de0a04c9215e0bd34a0b4a8,"Make swift client easier to wrap

In the process of wrapping for profiling, a trivial wrap with def main()
ended in a ton of these:
    NameError: global name 'parser' is not defined

A closer investigation revealed an apparent confusion in argument names.
The problem was introduced by commit 985968f76550251904b64d12de025fa5d65ed03f
of November 2010. Note that Greg fixed st_delete() correctly in that one,
but apparently forgot the others.

Unit tests pass for both current (bad) code, and the patched code.
By the magic of Python scoping, current code works, just impossible
to wrap for a quick hack.

Change-Id: I18f2494ce2a201d04d49f99ea259d141939dcb6a"
gholt,2012-04-10 15:36:51,https://api.github.com/repos/openstack/swift/git/commits/7e8d509faf7e5ecdb2239b528cb2303207f2dfff,7e8d509faf7e5ecdb2239b528cb2303207f2dfff,"Added db_preallocation setting to replicators

Somehow I forgot the account and container replicators with the last
db_preallocation patch.

Change-Id: I1a42ef000d60b59aedb113d91485319d6919bc36"
dpgoetz,2012-04-06 20:51:11,https://api.github.com/repos/openstack/swift/git/commits/3524718a9ae4ab0e2c770351bf98d08ad6499156,3524718a9ae4ab0e2c770351bf98d08ad6499156,"wsgi pre_auth fixes

Change-Id: Idb84bd6800c047ce1080039434b7957aa7d69b4d"
jk0,2012-04-05 23:23:54,https://api.github.com/repos/openstack/swift/git/commits/b28cdbbdf4bb8dae622cf65ec7924ded80f7a82b,b28cdbbdf4bb8dae622cf65ec7924ded80f7a82b,"Removed unused imports.

Change-Id: I5a837bea8699b78484265dc2434b190d0cf15de2"
notmyname,2012-03-31 15:18:44,https://api.github.com/repos/openstack/swift/git/commits/edf263702653e085625d88139797e54b53022582,edf263702653e085625d88139797e54b53022582,"updated docs for domain remap and cname lookup middleware

Change-Id: I1c571951f25a6e724cdd4699eb94baad5e47eb95"
sasimpson,2012-04-04 15:44:43,https://api.github.com/repos/openstack/swift/git/commits/f26d2e5f99ff402910407165ae228025991151b9,f26d2e5f99ff402910407165ae228025991151b9,"fixing response iterator in swift3 test

Change-Id: I6e58eed72aa3d1835b1a9ef99014d27a7dfd810e"
dpgoetz,2012-04-02 18:32:35,https://api.github.com/repos/openstack/swift/git/commits/7196a32a403b660ae5ce3bda3143eae3c0c90c0b,7196a32a403b660ae5ce3bda3143eae3c0c90c0b,"fix for listing_iter

Change-Id: I2a32d333af7ed87208928032d6f6c44e78ee6dee"
notmyname,2012-04-02 16:10:09,https://api.github.com/repos/openstack/swift/git/commits/641b1e0c78da6459a43516fc23c5dc388fe2d273,641b1e0c78da6459a43516fc23c5dc388fe2d273,"Revert ""version bump to 1.4.10""

This reverts commit e4ab8f004c0c4a8b631d0de77b72d85d5fdba221.

Change-Id: Id8262405acec0f13314f27fbac02bd3cded60789"
notmyname,2012-04-02 15:14:09,https://api.github.com/repos/openstack/swift/git/commits/e4ab8f004c0c4a8b631d0de77b72d85d5fdba221,e4ab8f004c0c4a8b631d0de77b72d85d5fdba221,"version bump to 1.4.10

Change-Id: I050be4f06ba8761be9fe8aefb0e181406bf31616"
gholt,2012-04-02 14:58:40,https://api.github.com/repos/openstack/swift/git/commits/accfd3b01f65e32ea46d176dba6e9b1db4335907,accfd3b01f65e32ea46d176dba6e9b1db4335907,"1.4.9 CHANGELOG

Change-Id: I15496cc846f8eaf890753b0a7256a91da197423e"
smerritt,2012-03-30 05:40:14,https://api.github.com/repos/openstack/swift/git/commits/ca6d418fa5bb1fc6a92c453d4fb41a95e99ac600,ca6d418fa5bb1fc6a92c453d4fb41a95e99ac600,"Unify different ring-balancing methods.

RingBuilder._initial_balance() gathers partitions differently from
.rebalance(), but the assignment algorithm is the same. However, there
were two nearly-identical implementations; these have been combined.

Also extracted a couple of utility methods to reduce duplication.

Change-Id: Ia5442782a8285dc14aa9a93878a7b0e8d1bb1be5"
gholt,2012-03-29 07:50:15,https://api.github.com/repos/openstack/swift/git/commits/9ea46787bfbb397ba2ebc622a64c375203d92cb6,9ea46787bfbb397ba2ebc622a64c375203d92cb6,"Refactored Swift3 middleware to use WSGIContext.

Change-Id: Ie73a2622576f29150c740cead0ea9c177688972e"
gholt,2012-03-29 07:22:24,https://api.github.com/repos/openstack/swift/git/commits/0ec5eef91619a7e23b99d619c3f56ef0f7c6784b,0ec5eef91619a7e23b99d619c3f56ef0f7c6784b,"Update middleware to use common pre_authed funcs

Update StaticWeb, FormPost, and TempURL to use common
make_pre_authed_env and make_pre_authed_req functions.

Change-Id: I32cc3cddff0d2aaeb6314578872707c1a37b4bce"
gholt,2012-03-28 21:40:48,https://api.github.com/repos/openstack/swift/git/commits/0becfab62924e3b23d74612dbc5b04ede075e8cb,0becfab62924e3b23d74612dbc5b04ede075e8cb,"Added option to disable SQLite db preallocation

Added option to disable SQLite db preallocation. This can be very
useful on pure ssd account/container servers where the extra space is
worth more than the lesser fragmentation.

Change-Id: I8fbb028a9b6143775b25b343e97896497a8b63a9"
notmyname,2011-12-29 17:29:19,https://api.github.com/repos/openstack/swift/git/commits/156f27c921de375d1535955363a72b09336fec38,156f27c921de375d1535955363a72b09336fec38,"object versioning

Object versioning in swift is implemented by setting a flag on the container
to tell swift to version all objects in the container. The flag is the
``X-Versions-Location`` header on the container, and its value is the
container where the versions are stored.

When data is ``PUT`` into a versioned container (a container with the
versioning flag turned on), the existing data in the file is redirected to a
new object and the data in the ``PUT`` request is saved as the data for the
versioned object. The new object name (for the previous version) is
``<versions_container>/<object_name>/<timestamp>``, where the timestamp is
generated by converting the ``Last-Modified`` header value of the current
version to a unix timestamp.

A ``GET`` to a versioned object will return the current version of the object
without having to do any request redirects or metadata lookups.

Change-Id: I4fcd723145e02bbb2ec1d3ad356713f5dea43b8b"
gholt,2012-03-22 01:50:08,https://api.github.com/repos/openstack/swift/git/commits/e07f4ded3f51d28ac6c3a9d4ea31d841a865bd22,e07f4ded3f51d28ac6c3a9d4ea31d841a865bd22,"StaticWeb fixes.

The previous staticweb had the silly problem of global state for
concurrent requests. This fixes that.

Also, the WSGI spec indicates start_response might not be called
right away and is only guaranteed to be called just before the first
""chunk"" of the output iterator returns. This fixes StaticWeb's
previously incorrect assumption.

A thorough review of this code would be much appreciated; I've
messed it up enough times to not be completely trusted with it.

Change-Id: Ie751c24e21db7a884a83a731fbf2f4309437302c"
dpgoetz,2012-03-27 01:00:19,https://api.github.com/repos/openstack/swift/git/commits/7fc02b424f9ad508ed70908cd331bb0544925fed,7fc02b424f9ad508ed70908cd331bb0544925fed,"allow / to pass through ratelimit

Change-Id: I891c5ea48511ca9ad47f2adbcbee700d63a4231d"
greglange,2012-03-26 15:56:38,https://api.github.com/repos/openstack/swift/git/commits/f218081ce9923e2cc9fac2ee8161f12ae48e9ecf,f218081ce9923e2cc9fac2ee8161f12ae48e9ecf,"Fixed url in ObjectExpirer.iter_objects().

Change-Id: I859a08debc378c2bbb421a6323c6ea6e0564272f"
notmyname,2012-03-26 10:14:01,https://api.github.com/repos/openstack/swift/git/commits/cc6d219159e21ee88bf8a7d3087ca0604562bb35,cc6d219159e21ee88bf8a7d3087ca0604562bb35,"added Ye Jia Xu to AUTHORS file and appropriate .mailmap entry

Change-Id: Ib05f7742c51d00bd5ba901973343fd68ed6cd114"
pandemicsyn,2012-03-21 22:30:44,https://api.github.com/repos/openstack/swift/git/commits/83a12ece2aad69081ee1c3577eea4546f5266fc3,83a12ece2aad69081ee1c3577eea4546f5266fc3,"Display total disk usage info in swift-recon

Now display's cluster disk space used, free, and total.

Change-Id: I9c48dd6badaecd64cda4a2a8a51f41f1c29d328a"
gholt,2012-03-16 17:10:36,https://api.github.com/repos/openstack/swift/git/commits/ac3cc680de21d939785e1eb36b24ea3a2f626944,ac3cc680de21d939785e1eb36b24ea3a2f626944,"Add an optional delay to account reaping.

Normally, the reaper begins deleting account information for deleted
accounts immediately. With this patch you can set it to delay its
work. You set the delay_reaping value in the [account-reaper] section
of the account-server.conf. The value is in seconds; 2592000 = 30
days, for example.

Unfortunately, there are currently zero tests for the account-reaper.
This also needs fixing, but I thought I'd submit this delay patch
alone for consideration.

Change-Id: Ic077df9cdd95c5d3f8949dd3bbe9893cf24c6623"
redbo,2012-03-19 20:29:32,https://api.github.com/repos/openstack/swift/git/commits/4450b95c2ffd1d708194e5e2bd777c6723c1d034,4450b95c2ffd1d708194e5e2bd777c6723c1d034,"Only rewrite async-pending files if the data changed

Change-Id: If33b37a89e78632522874034df7bac433e7d0a9b"
chmouel,2012-03-20 11:54:51,https://api.github.com/repos/openstack/swift/git/commits/208b8e85a80e46ddb49dc2035cb292570a20c7db,208b8e85a80e46ddb49dc2035cb292570a20c7db,"Add os_tenant_name to bin/swift and common.client

- Make sure we have a tenant_name when doing get_auth for 2.0
  auth_version.

Change-Id: I02dceb03f224c8fb91972e1f0e2925e5d1a06640"
notmyname,2012-03-19 20:54:58,https://api.github.com/repos/openstack/swift/git/commits/14fbbab0f1d491679b6ccce35a97f66279385fbe,14fbbab0f1d491679b6ccce35a97f66279385fbe,"version bump to 1.4.9

Change-Id: I8a2f7d09f1db5b24e69b108b7c90869d90aacb48"
notmyname,2012-03-19 17:59:14,https://api.github.com/repos/openstack/swift/git/commits/d41ad0a06b005bff9ce18bf4293eaf096ad497c7,d41ad0a06b005bff9ce18bf4293eaf096ad497c7,"changelog for 1.4.8

Change-Id: I1fb485fadbc23cfd4ff76667f0b52bf0fc3f9fe6"
notmyname,2012-03-19 18:45:34,https://api.github.com/repos/openstack/swift/git/commits/1ecf5ebba1d1e394906fed587211e58263be864e,1ecf5ebba1d1e394906fed587211e58263be864e,"updated copyright date for all files

Change-Id: Ifd909d3561c2647770a7e0caa3cd91acd1b4f298"
pandemicsyn,2012-03-17 02:26:08,https://api.github.com/repos/openstack/swift/git/commits/0a461a5b8a7b76229c9ad3f116fb8d255aea5b06,0a461a5b8a7b76229c9ad3f116fb8d255aea5b06,"tests for recon middleware.

My first stab at unittests for the recon middleware.
Also, made some minor changes to the middleware to make testing
easier now and down the road.

Change-Id: I23ce853398ff035ffbfc2082e90e22038832b966"
notmyname,2012-03-19 17:35:53,https://api.github.com/repos/openstack/swift/git/commits/89454237d87572f47a7cfa2455e245cbd0c6ecd6,89454237d87572f47a7cfa2455e245cbd0c6ecd6,"updated authors file and added .mailmap

Change-Id: Idf0d1bbc5c9df025825190035871294692e7e6a4"
dpgoetz,2012-03-13 19:01:28,https://api.github.com/repos/openstack/swift/git/commits/a7d2b649d5d6948067d2cd40f41afb961851290c,a7d2b649d5d6948067d2cd40f41afb961851290c,"set denied resp on requests to '/' in tempauth

Change-Id: If2e319561b3d41e09310228792356f38b7958416"
emonty,2012-03-16 19:11:47,https://api.github.com/repos/openstack/swift/git/commits/cb84214b5d588380f033177d88d404e8e986ecf1,cb84214b5d588380f033177d88d404e8e986ecf1,"Add sphinx to test-requires.

Need sphinx in test-requires so that we can build docs in
the venv (wanted because module introspection needs build
depends installed)

Change-Id: If3caf817381aea8e9cd8fb50e7e35c647f088b60"
emonty,2012-03-16 08:23:39,https://api.github.com/repos/openstack/swift/git/commits/85b1d727154bfe5dbcec6352f7ef78bf14f714ea,85b1d727154bfe5dbcec6352f7ef78bf14f714ea,"Add venv commands to tox.ini.

The recent tox addition missed the general purpose that we use
for things like building docs and other arbitrary commands.

Change-Id: Ib195a78d084a170c5051906f619743def4dbfbea"
gholt,2012-03-16 00:12:06,https://api.github.com/repos/openstack/swift/git/commits/0336271126f81258ff9f96d2d09be9ec4b52920d,0336271126f81258ff9f96d2d09be9ec4b52920d,"PEP8 Fixes

Change-Id: Ibf5316e96b88088ecbc56fe1f6fa7541bc967d5f"
gholt,2012-03-14 17:30:02,https://api.github.com/repos/openstack/swift/git/commits/2c6de2ae523818a7d28165656336c2dfa3cf1c34,2c6de2ae523818a7d28165656336c2dfa3cf1c34,"Added optional max_containers_per_account restr...

Added optional max_containers_per_account restriction. If set to a
positive value and if a client tries to perform a container PUT when
at or above the max_containers_per_acount cap, a 403 Forbidden will
be returned with an explanatory message.

This only restricts the proxy server, not any of the background
processes that might need to create containers (replication, for
instance). Also, the container count is cached for the proxy's
recheck_account_existence number of seconds. For these reasons, a
given account could exceed this cap before the 403 Forbidden
responses kick in and therefore this feature should be considered a
""soft"" limit.

You may also add accounts to the proxy's max_containers_whitelist
setting to have accounts that ignore this cap.

Change-Id: I74e8fb152de5e78d070ed30006ad4e53f82c8376"
chmouel,2012-03-04 15:46:55,https://api.github.com/repos/openstack/swift/git/commits/4f93c5d5e48a22ff6df882f9d26f71ab40e47ee4,4f93c5d5e48a22ff6df882f9d26f71ab40e47ee4,"Update swift.common.client with bin/swift changes.

- Add auth version 2 to swift.common.client.
- Remove ununsed imports.
- Fix bug where auth_version should be a string.
- Add test for auth version 2.
- Allow to override the returns of http_connection for tests.
- Sync the passing of headers in bin/swift as well from client.
- Fixes bug 885011
- Previously it was review 3680 but abandoned.
- Address: Maru newby review.
- TODO: properly test auth_v1.

Change-Id: I579d8154828e892596fae9ab75f69d353f15e12c"
gholt,2012-03-10 20:02:49,https://api.github.com/repos/openstack/swift/git/commits/abc6313e353f2620c9aa5c7b52b48fa454e95378,abc6313e353f2620c9aa5c7b52b48fa454e95378,"Alternate meta header removal method.

Prior to this patch, you removed header metadata (such as
x-account-meta-name or x-container-meta-name) by sending the header
with no value. However, many tools such as curl will not send headers
with empty values.

This patch adds an alternate method for header metadata removal: Send
an x-remove-account-meta-name (x-remove-container-meta-name) header
with any value and the proxy will translate it to the original header
name with no value, indicating removal.

For safety, if you specify both x-remove-account-meta-name and
x-account-meta-name headers in the same request, the -remove header
will be ignored.

Change-Id: Ic220bec05a0e266db85fc8fa50011146ee886d9c"
redbo,2012-03-11 11:36:26,https://api.github.com/repos/openstack/swift/git/commits/e008c2ebb82d0cd9e4735ae05758a3754a6d65ef,e008c2ebb82d0cd9e4735ae05758a3754a6d65ef,"Make ring class interface slightly more abstracted from implementation.

Change-Id: I0f55d61c7b8de30460f17a69e5d9946494dbda6e"
dtroyer,2012-03-13 22:53:37,https://api.github.com/repos/openstack/swift/git/commits/ed02c900d82ec502f5203c051d534d524ae29979,ed02c900d82ec502f5203c051d534d524ae29979,"Change CLIAuth arg names

Change the argument names used for common Keystone authentication per the
updated http://wiki.openstack.org/CLIAuth:

--auth_url -> --os_auth_url
--password -> --os_password
--username -> --os_username

Fixes bug 954528

Change-Id: I7e956e74de8192957eee87d155b2e5338c8942f0"
gholt,2012-03-13 20:01:14,https://api.github.com/repos/openstack/swift/git/commits/aa55f198f74da37bac2c6c15232ae1edf40cb39c,aa55f198f74da37bac2c6c15232ae1edf40cb39c,"Small change to staticweb with container reques...

Small change to staticweb with container requests. Before, a request
to a container that had no x-container-meta-web-index and no
x-container-meta-web-listings would pass the request on to the proxy
server, even if x-web-mode was set to true. Now, if x-web-mode is set
true, it will 404.

This mostly important to folks that are using staticweb with an
external service that uses authenticated requests and x-web-mode set
to true, in which case the above 404 previously would return the
container listing (you were authenticated after all). Unauthenticated
requests would have received 401s anyway.

Change-Id: Ifd321a8a076a79c1e119c5259a40bf08defdbe3c"
gholt,2012-03-12 21:54:31,https://api.github.com/repos/openstack/swift/git/commits/1c349a387db29d0e102c7df2b9c5c23f1c72db07,1c349a387db29d0e102c7df2b9c5c23f1c72db07,"Make tests work like they used to.

Change-Id: I081d853a90ad0efce5b7a20b52794ce3348a9617"
smerritt,2012-03-09 23:53:20,https://api.github.com/repos/openstack/swift/git/commits/8a2bf17eef4f2ad29ae1c6dbe33c967a013ef42f,8a2bf17eef4f2ad29ae1c6dbe33c967a013ef42f,"Refactor how RingBuilder iterates over its devices.

There were a dozen or so different places in RingBuilder that were
iterating over self.devs and filtering out None; now there's just one.

Change-Id: If8d9b44efc083040932d876cd76a6d26e4a36ebc"
pandemicsyn,2012-03-09 19:35:38,https://api.github.com/repos/openstack/swift/git/commits/9e713e107829d867cbc2bb37f8cc0d95aa7c4390,9e713e107829d867cbc2bb37f8cc0d95aa7c4390,"Add instructions for pip install via easy_install.

Add a line item to easy_install pip since we now need to pip install
openstack.nose_plugin. Fixes bug 951019

Change-Id: Ibf4b8bb7feac2b8290db2f4c4665dacf8a881462"
pandemicsyn,2012-03-08 21:08:15,https://api.github.com/repos/openstack/swift/git/commits/892d63d8ec00c9bc9bb30f7816b59b2b1ddd0103,892d63d8ec00c9bc9bb30f7816b59b2b1ddd0103,"Fix ""retries"" key in dispersion json output.

Change-Id: I466302f05fd17c5b5460284c372c3667d7c46d7b"
pandemicsyn,2012-03-08 04:47:00,https://api.github.com/repos/openstack/swift/git/commits/f1290e8080e79ccb7ba8af9b749319fa548aec3c,f1290e8080e79ccb7ba8af9b749319fa548aec3c,"Create tmpfile in the same dir as the cache file

Make sure we don't try to rename files across devices. Fixes bug 949366

Change-Id: I75581a0682c8db90cad9b077b1c22a886d234e31"
chmouel,2012-03-05 13:43:00,https://api.github.com/repos/openstack/swift/git/commits/ac7634479a65cb303cc1e219ca8b8edc47986edf,ac7634479a65cb303cc1e219ca8b8edc47986edf,"Return NoSuchBucket/Key on 404.

- Fixes bug 945937.

Change-Id: If6dd53a716491a7d1a9ab4992224038ede4cb32a"
notmyname,2012-03-06 22:11:12,https://api.github.com/repos/openstack/swift/git/commits/ad6684a00f3952d5857035f0c2a4305224512567,ad6684a00f3952d5857035f0c2a4305224512567,"version bump to 1.4.8

Change-Id: I281422fbd4a1b028f600aad3b6f8d68be09f6399"
gholt,2012-03-06 21:43:15,https://api.github.com/repos/openstack/swift/git/commits/12b118ee2cc7025d5f8880d01fdc16ec316345eb,12b118ee2cc7025d5f8880d01fdc16ec316345eb,"Updated CHANGELOG for 1.4.7

Change-Id: I6933a3faaceaff28f6ecbbe5904ed3eb46413a02"
smerritt,2012-03-01 18:53:06,https://api.github.com/repos/openstack/swift/git/commits/e994d033a6581aa0d2027b51c13edf652eef8417,e994d033a6581aa0d2027b51c13edf652eef8417,"Refactor partition gathering.

RingBuilder._reassign_parts() is really moving one (partition,
replica) pair at a time. However, the way that _gather_reassign_parts
passes that data in was strange; it would update each replica's entry
in _replica2part2dev to 0xffff, then return a list of affected
partitions. Now it just returns the pairs to move.

This is helpful in the presence of bugs that affect partition
assignment (e.g. #943493), there's no chance of stray 0xffff values
hanging around and corrupting the partition map.

Also, update my email address.

Change-Id: Ifb3aeb4fac750f66e2ddbad88eb5846e72bac20c"
gholt,2012-03-06 17:52:42,https://api.github.com/repos/openstack/swift/git/commits/7141c52bd60f564232daeebc44f0c6ff9eb60c6b,7141c52bd60f564232daeebc44f0c6ff9eb60c6b,"Remove old stats tools.

https://blueprints.launchpad.net/swift/+spec/remove-old-swift-stats-tools

Change-Id: Ibb57b3d71c7f18060d2d48a1d3754a7f1444624d"
gholt,2012-03-06 03:24:16,https://api.github.com/repos/openstack/swift/git/commits/52ba08d67d063878f05a60f371422a3549200f96,52ba08d67d063878f05a60f371422a3549200f96,"Improvements to database replication.

Note: I'd like to get this released as soon as possible as it is a
data durability issue.

1) Orders nodes so that none get starved (see code and footnote).

2) New max_diffs setting that caps how long the replicator will spend
   trying to sync a given database per pass so the other databases
   don't get starved.

3) Replaces run_pause with the more standard ""interval"", which means
   the replicator won't pause unless it takes less than the interval
   set.

Change-Id: I986742229e65031df88f5251ca61746b7c8d2bde"
derekhiggins,2012-03-05 15:27:51,https://api.github.com/repos/openstack/swift/git/commits/40dbefc9f40a16d06abbe29899b0a4d65abb7d41,40dbefc9f40a16d06abbe29899b0a4d65abb7d41,"Fixing some minor issues in SAIO on Fedora

Change-Id: I2abdcd1a3c7f2a54b200489efe57f8990bd94bbf"
gholt,2012-03-04 03:21:08,https://api.github.com/repos/openstack/swift/git/commits/866e99b51f6fd1dbd0af399a3391195926fe72ef,866e99b51f6fd1dbd0af399a3391195926fe72ef,"Change account pending to behave like container...

Change account pending to behave like container pending.

Change-Id: I32af5e7671c9b69b3aca8997534fe4af19ded374"
chmouel,2012-03-03 21:55:09,https://api.github.com/repos/openstack/swift/git/commits/bcaecc574eb42fa0e29cd0e82eec4ca2655fbfc7,bcaecc574eb42fa0e29cd0e82eec4ca2655fbfc7,"Make sure auth is present before checking for /

- Fixes bug 945882

Change-Id: I22a688b01678ab93e888c9537a3f611e43e22c30"
anotherjesse,2012-03-03 00:14:27,https://api.github.com/repos/openstack/swift/git/commits/62864448bc565d22c9c905fd50c9da1203012ae6,62864448bc565d22c9c905fd50c9da1203012ae6,"add git commit date / sha1 to sphinx html docs

Change-Id: If47cee942707d2c36b0b897470b7ec994f0e259a"
dbishop,2012-02-17 19:28:37,https://api.github.com/repos/openstack/swift/git/commits/413173088c45340e0ecc89711726d08fceab0d53,413173088c45340e0ecc89711726d08fceab0d53,"Make initial ring balance robust to ""holes"".

Make initial ring building robust to ""holes"" (None values in self.devs).
Having these None values in the self.devs array is fine later in the
builder file's life.  Making it okay upon initial balance makes
builder files easier to programatically manipulate.

Change-Id: Icca9c1aa4fd0aae12168998acc39e52f95989b7d"
smerritt,2012-02-29 02:25:14,https://api.github.com/repos/openstack/swift/git/commits/7fe0c6c695364c4c1226d89175ec0fd91e15ec58,7fe0c6c695364c4c1226d89175ec0fd91e15ec58,"Fix rebalancing when 2+ of a partition's replicas are on deleted devices.

RingBuilder._reassign_parts assumed that only replica for a given
partition would move. This isn't necessarily true in the case where a
bunch of devices have been removed. This would leave invalid entries
in _replica2part2dev and also cause validation to fail.

One easy way to reproduce this is to create a 3-replica, 3-zone,
6-device ring with 2 drives per zone (all of equal weight), rebalance,
and then remove one drive from each zone and rebalance again.

Bug: 943493

Change-Id: I0d399bed5d733448ad877fa2823b542777d385a4"
pandemicsyn,2012-02-29 04:24:26,https://api.github.com/repos/openstack/swift/git/commits/5e4127ae2af389d89750bacbbd44b68f39fd92f3,5e4127ae2af389d89750bacbbd44b68f39fd92f3,"Add json output option to swift-dispersion-report

Add's the configuration file option ""dump_json"" or command line
options [-j|--dump-json] to have swift-dispersion-report output
the report in json format. This allows the dispersion report to
be more easily consumed elsewhere.

There's also a few pep8 fixes and removal of unused imports.

Change-Id: I2374311ccbef43e6bbae24665c9584e60f3da173"
notmyname,2012-02-29 03:38:30,https://api.github.com/repos/openstack/swift/git/commits/e75bb9045b9bb29fbcb707d617657928d47ad7d1,e75bb9045b9bb29fbcb707d617657928d47ad7d1,"fixed pep8 issue and renamed strcmp_const_time to streq_const_time

Change-Id: Ifc21f0ec08ac2ba120a67795e82082b18e08584e"
russellb,2012-02-28 16:17:21,https://api.github.com/repos/openstack/swift/git/commits/1f0798f4fbab62661a5560697b541fcaad7f8232,1f0798f4fbab62661a5560697b541fcaad7f8232,"Use constant time string comparisons for auth.

Fix bug 942644.

Use constant time string comparisons when doing authentication to help
guard against timing attacks.

Change-Id: I88c4c5cd9edd9e5d60db07b6ae2638b74a2a2e17"
pandemicsyn,2012-02-25 20:33:15,https://api.github.com/repos/openstack/swift/git/commits/c18a4e4f43b6c4a07e64006b2edc65824fb9321e,c18a4e4f43b6c4a07e64006b2edc65824fb9321e,"swift-recon cli cleanup

Refactored swift-recon completely. It's broken out into Classes and no
longer uses globals. In addition, I pulled out the previous individual
scout_XXXX functions that where getting added for each check. All the
check's now use the same method from the Scout class to obtain stats
and telemetry.

Change-Id: I512ab50f29e1ef4d10bd3adbf1cac642308e7cf1"
sxd,2012-02-28 15:20:49,https://api.github.com/repos/openstack/swift/git/commits/38113e22fc49b1e82b68b0e2e3fd568c58dcb9b2,38113e22fc49b1e82b68b0e2e3fd568c58dcb9b2,"Few fix in the SAIO doc:
 - Fix the ubuntu isos urls
 - Removed trailing whitespaces
 - Correct the text that explain how to build the documentation

Change-Id: Ie19604d4586562dcef8c1d46addd14c15db2c442"
notmyname,2012-02-25 05:01:27,https://api.github.com/repos/openstack/swift/git/commits/a6567e60ab9c560ea55ce10793c9bfc46ba8a27b,a6567e60ab9c560ea55ce10793c9bfc46ba8a27b,"added emails to AUTHORS file

Change-Id: Ib379e45b3869725121fbc02e5be788163c04619b"
monsterxx03,2012-02-27 03:58:35,https://api.github.com/repos/openstack/swift/git/commits/fa4bb91fc6c83a4b5db7cceb684be4e17393049b,fa4bb91fc6c83a4b5db7cceb684be4e17393049b,"set query_string 'qs' in direct_get_account and direct_get_container, but didn't pass it to http_connect

Change-Id: I44ded709fa174aacd66c2962231f2f5997dc0f71"
dpgoetz,2011-12-14 22:37:22,https://api.github.com/repos/openstack/swift/git/commits/99b2aa0decc49c34694b3ae96dd4455c4c2e8ce1,99b2aa0decc49c34694b3ae96dd4455c4c2e8ce1,"client HEAD headers and swift source in logs

Change-Id: Ic5e3b6d333f94da971bf3e0ae4cdd6a9689c7f1c"
gholt,2012-02-22 21:10:37,https://api.github.com/repos/openstack/swift/git/commits/b65db95abd95eff0a46a8755eff7776193e9a3f6,b65db95abd95eff0a46a8755eff7776193e9a3f6,"Added logging to start and end of audit passes.

Change-Id: Ibf64387f53e4b6ce532272e0a5005a1f1d54fb53"
zaitcev,2012-02-23 01:40:22,https://api.github.com/repos/openstack/swift/git/commits/133052b1ca0719384a16adc220d5f1c8d33616a4,133052b1ca0719384a16adc220d5f1c8d33616a4,"Fix lp:875301

Pure formatting, not a word changed.

Change-Id: I95671428c5ad648497b0275489492d04e85ac79e
Bug: 875301"
zaitcev,2012-02-22 15:19:37,https://api.github.com/repos/openstack/swift/git/commits/6f7f95ffde4fc5e9ac21f7f76183323b4d252ccd,6f7f95ffde4fc5e9ac21f7f76183323b4d252ccd,"Add Fedora to SAIO.

In the past we had a document at Wiki, called RHELInstructions,
but it was permanently out of date, and someone deleted it, in
order to stop the confusion.

Differences for Fedora as quite small and it makes sense to maintain
them inside the main document.

This patch also fixes a couple of obvious problems:
 - a missing period
 - unwanted leading space that breaks a paragraph

Still no idea how to remove color from [swift-hash].

Change-Id: I73cda027c9d9bf695cd640a6d55735d82fba0048"
gholt,2012-02-10 18:50:00,https://api.github.com/repos/openstack/swift/git/commits/c2f663787e4e1859ebae81855d550b54073e06b6,c2f663787e4e1859ebae81855d550b54073e06b6,"Fix tempurl docs.

Change-Id: I77511241693b493b97eda2264d0c3e3d7e1df8d6"
notmyname,2012-02-09 13:40:00,https://api.github.com/repos/openstack/swift/git/commits/17e95941ddfca2bd418f8d1f556a14c6f2f3855b,17e95941ddfca2bd418f8d1f556a14c6f2f3855b,"added account_autocreate = true to example proxy config

Change-Id: Ib25c61da37bcbbda7bbd729560996ef6b3be1670"
gholt,2012-02-09 02:49:14,https://api.github.com/repos/openstack/swift/git/commits/22ea604b9482e9300ed01eef5d6bc33e5a116855,22ea604b9482e9300ed01eef5d6bc33e5a116855,"tempurl and formpost set REMOTE_USER

This is to allow them to pass through staticweb.

Change-Id: I421b1dba89b298c6dbd8e99d7aa8d4e98f0c28e3"
notmyname,2012-02-08 21:42:42,https://api.github.com/repos/openstack/swift/git/commits/c078c7af566deb283f9175c6ed98bafa960b3938,c078c7af566deb283f9175c6ed98bafa960b3938,"1.4.7 version bump

Change-Id: Ib6fbd5fb86e817ac63d14d9e05aff121ab0cfd86"
notmyname,2012-02-08 21:06:26,https://api.github.com/repos/openstack/swift/git/commits/1021989b60082d5e402a01d32e97fe87737f283f,1021989b60082d5e402a01d32e97fe87737f283f,"updated changelog for 1.4.6

Change-Id: If77964f27ad8d47aa02dd73b771b77cc6558ef37"
dtroyer,2012-02-02 22:05:06,https://api.github.com/repos/openstack/swift/git/commits/6800ec378b8d2f842fefd8775a98b92bf86d7733,6800ec378b8d2f842fefd8775a98b92bf86d7733,"Blueprint cli-auth: common cli args

Add --auth_url, --username and --password and OS_* env vars as
aliases to --auth, --user and --key.

Default to --auth-version=2.0 if none of --auth, --user or --key
are set or if OS_AUTH_URL is set.

Ensure trailing '/' is present in --auth so URLs are created correctly.

Fixes lp925212

Change-Id: Ic0008c5d5c1ab4fddbaab5d982ab60fed2c50019"
notmyname,2012-02-08 20:30:39,https://api.github.com/repos/openstack/swift/git/commits/19ab70745dadd6ca12f16747d45a750d796d66ac,19ab70745dadd6ca12f16747d45a750d796d66ac,"updated authors file

Change-Id: Id483bb1cec1b8b27788fe1233e1795adea6e5e49"
dpgoetz,2012-02-07 22:02:28,https://api.github.com/repos/openstack/swift/git/commits/a98ce6eade185a35cefd27fa85534675342bd246,a98ce6eade185a35cefd27fa85534675342bd246,"Change tpooled_get_hashes back to err,err on Timeout, (object server REPLICATE needs it) and unit tests

Change-Id: Ic60c33570594fd2c0939043863b013aa2103505d"
gholt,2012-02-08 00:06:55,https://api.github.com/repos/openstack/swift/git/commits/0406323f9b6ffa81825d3b56f13f06bf4fe5e909,0406323f9b6ffa81825d3b56f13f06bf4fe5e909,"Added timeout option to swift-recon

Change-Id: I0d3c55a11c5e3252f0fd4b128ab840403c7f55f6"
dpgoetz,2012-02-07 19:36:42,https://api.github.com/repos/openstack/swift/git/commits/0f997425eac4589651f5b4096ad6337c3a10eaaa,0f997425eac4589651f5b4096ad6337c3a10eaaa,"skip host in http_connect if specified in headers

Change-Id: If614768f2aaf7ca8b06985c8efcd4120b324b290"
russellb,2012-02-07 19:19:22,https://api.github.com/repos/openstack/swift/git/commits/e90424e88bfaae17bf16f5c32b4d18deb5a6e71f,e90424e88bfaae17bf16f5c32b4d18deb5a6e71f,"Call setgroups() before setuid() and setgid().

Fixes bug 989569.

This patch ensures that the list of groups is completely reset when dropping
privileges.

Change-Id: I049f75e66e08a4a6361504b013bc68c4c38ef093"
chmouel,2012-02-02 18:47:39,https://api.github.com/repos/openstack/swift/git/commits/5a145145ac3a220d1fb7bcda5b4451b090367c00,5a145145ac3a220d1fb7bcda5b4451b090367c00,"Allow to pass arguments to nosetest.

When running .functests or .unittests allow to pass argument on the
command line for nosetests.

Fixes bug 925636

Change-Id: Icb07c192328528900b502fbc937b9c83f70a4b0f"
gholt,2012-01-31 16:58:00,https://api.github.com/repos/openstack/swift/git/commits/17b350674110865c83a2cc9b6659aa7ba18e7679,17b350674110865c83a2cc9b6659aa7ba18e7679,"Fix bug regarding negative Content-Length headers.

Change-Id: Ib8e2a5271c33f57429a9683db233610416887ea3"
freyes,2012-01-29 06:26:58,https://api.github.com/repos/openstack/swift/git/commits/21ad3b8b3a637c42f824309dbe2c35a6d50b825e,21ad3b8b3a637c42f824309dbe2c35a6d50b825e,"remove unsed imports and variables

This cleanup is for the swift.common package

Change-Id: Ibe74d4f0ae0376395f620b9be24a52cb8a4a5d98"
ttx,2012-01-23 16:00:40,https://api.github.com/repos/openstack/swift/git/commits/b23d2eb422eddaec0f2800a6b92f428c19f3a5f9,b23d2eb422eddaec0f2800a6b92f428c19f3a5f9,"Drop eval-based json parser fallback

Drop potentially-unsafe eval-based json parser that was
used as a fallback in case simplejson and json were not
available. Let's assume people run Python 2.6 or can
install simplejson if they are not. Fixes bug 909568.

Change-Id: I1b1860a77de5075fcea291a4f1b320a3e9e6261f"
notmyname,2012-01-23 21:43:48,https://api.github.com/repos/openstack/swift/git/commits/3d9672799d759dd384897fbee5f5f692448b343e,3d9672799d759dd384897fbee5f5f692448b343e,"removed tools/rfc.sh

Change-Id: I297c3801991cbed2c360b3324d005ed003a1108d"
chmouel,2012-01-20 21:07:03,https://api.github.com/repos/openstack/swift/git/commits/16a5faaaba1a6dd7e4fe46d1ddd10ad497cd6014,16a5faaaba1a6dd7e4fe46d1ddd10ad497cd6014,"PEP8 fixes.

Change-Id: I3c33c03547f97ca7afbb47c3bddfdeabf152afe2"
chmouel,2012-01-19 16:45:26,https://api.github.com/repos/openstack/swift/git/commits/ff98c0ebb3f5dfdffd3462f4271ca777fc899214,ff98c0ebb3f5dfdffd3462f4271ca777fc899214,"Fix permissions when creating files/permissions.

Set umask to 022 when creating directories instead of 0.

Change-Id: I8915d31907282f999df4ea3991d2ef440baee537"
chmouel,2012-01-18 22:01:35,https://api.github.com/repos/openstack/swift/git/commits/36af76fb9d808954ab797e0598d989b1f9a9f577,36af76fb9d808954ab797e0598d989b1f9a9f577,"Make binaries executables.

Set the excecutable bit on swift-form-signature swift-object-expirer
swift-init swift-temp-url binaries. Fixes bug 918430

Change-Id: Iafecf0b542ee8f607e765879edbffa1cb463d3eb"
gholt,2012-01-18 16:37:58,https://api.github.com/repos/openstack/swift/git/commits/a7cc6e1cb9909aa68db70e6c11e395526ca4fb7d,a7cc6e1cb9909aa68db70e6c11e395526ca4fb7d,"Fix for UTF-8 encoding/quoting issues in staticweb

Also added ; charset=UTF-8 to the content-type.

Change-Id: I144a9fa2647b47663863b06636968beaa68a5d60"
gholt,2012-01-12 22:30:32,https://api.github.com/repos/openstack/swift/git/commits/e1597a0ae2972df2d222af6c92d519cc68c8f9f4,e1597a0ae2972df2d222af6c92d519cc68c8f9f4,"Make memcached allow no port = default port

Change-Id: I5a6cb714a4fd7a57db63aa17bb043fcc7a8eb29b"
ttx,2012-01-11 16:26:55,https://api.github.com/repos/openstack/swift/git/commits/47346f6490d7e5bd397aa28afb96439da5d01d58,47346f6490d7e5bd397aa28afb96439da5d01d58,"Add missing files in tarball

Fix MANIFEST.in to include all files in released tarballs.
Note that tools/rfc.sh is ignored since it's only for (deprecated)
gerrit support. Fixes bug 912193.

Change-Id: Ic9952220a67d5583e639fcb9e74f472dd9f0fdef"
gholt,2011-12-21 13:54:07,https://api.github.com/repos/openstack/swift/git/commits/7fc1721d7d5290a6af278f9b6844cd3b96b7c7c3,7fc1721d7d5290a6af278f9b6844cd3b96b7c7c3,"TempURL and FormPost Middleware

Change-Id: I8d2ce2abdfe3a44605c9441ad7b1abc6c77e282d"
gholt,2012-01-06 21:27:44,https://api.github.com/repos/openstack/swift/git/commits/338be6a6818c06ef07b39b1afed3713141569c6b,338be6a6818c06ef07b39b1afed3713141569c6b,"Added memcache.conf option

Change-Id: Idfcb97421a5c1476b776acef94c7b997dab55aa9"
notmyname,2012-01-04 19:21:18,https://api.github.com/repos/openstack/swift/git/commits/0a7f8ca7b1772fc36e5563179ecf54f5d56ecb9c,0a7f8ca7b1772fc36e5563179ecf54f5d56ecb9c,"version bump for 1.4.6

Change-Id: I5e7a159fc040044cf301e5af9e2b247153b48ad8"
gholt,2012-01-04 19:14:42,https://api.github.com/repos/openstack/swift/git/commits/4ad59c63350c3e0b0a575f34dfc01a9cfc6b3141,4ad59c63350c3e0b0a575f34dfc01a9cfc6b3141,"AUTHORS and CHANGELOG updates for 1.4.5

Change-Id: I0ddfa712f9c4dc5110d953439ec41355a25bb4f0"
zyluo,2012-01-04 06:43:16,https://api.github.com/repos/openstack/swift/git/commits/8b09723a000e838c16631927e81506afad783ee6,8b09723a000e838c16631927e81506afad783ee6,"PEP8 swift cleanup

The None, True, and False values are singletons.

All variable *comparisons* to singletons should use 'is' or 'is not'.
All variable *evaluations* to boolean should use 'if' or 'if not'.
All Object type comparisons should use isinstance()
instead of comparing types directly.

Change-Id: I47863c4862791022670619f19b8bc15d8a93fd81"
gholt,2012-01-03 22:12:33,https://api.github.com/repos/openstack/swift/git/commits/425705690e6b0454943b3ff37e156a99cc176856,425705690e6b0454943b3ff37e156a99cc176856,"Updated the swift-init manager for object-expir...

Updated the swift-init manager for object-expirer support since the
expirer doesn't not use the object-server.conf but does start with
object-.

Change-Id: If6e0e9af4c6c861fdf390370f271d9139c573ba2"
omame,2012-01-03 15:39:42,https://api.github.com/repos/openstack/swift/git/commits/29e703327c3dd319e4c786a6cff7212c7236d568,29e703327c3dd319e4c786a6cff7212c7236d568,"~/swift/trunk doesn't exist after git clone

Change-Id: I0b12a1bd1a119aeedda07fa6f7883ae6318ee4d6"
gholt,2011-12-03 07:42:08,https://api.github.com/repos/openstack/swift/git/commits/65dba1a7aa3882308f0442fd53f9bea06550d7a8,65dba1a7aa3882308f0442fd53f9bea06550d7a8,"Added swift-orphans and swift-oldies.

Change-Id: I95210098556a22d7bd05f245ae387ee13041fa61"
gholt,2011-12-21 20:55:37,https://api.github.com/repos/openstack/swift/git/commits/2c6ba9cc3d8f1bc5748a949b3edc9a4098a75966,2c6ba9cc3d8f1bc5748a949b3edc9a4098a75966,"Save extra request with staticweb when possible

Change-Id: I6459d11e64c9b1a857574fd943ed5c0ed5f4f792"
kazum,2011-12-20 17:08:40,https://api.github.com/repos/openstack/swift/git/commits/c98ee54f6857e4bbcf29bae706a19b7ca49abd8f,c98ee54f6857e4bbcf29bae706a19b7ca49abd8f,"Explain how replication works more clearly

A replicator creates an extra replica when it detects a remote disk
failure. However, when it fails to create a replica due to other
reasons (e.g. entire node failures), it doesn't create another replica
at all.  We should explain it explicitly so that users can know it.
This fixes bug 906976.

Change-Id: I2f56428ccbbb0cf0d8538ca6e08f7da71257e661"
notmyname,2011-12-20 16:18:16,https://api.github.com/repos/openstack/swift/git/commits/35c1dd85ba8f75d1be427f541f5e645d5655b8ac,35c1dd85ba8f75d1be427f541f5e645d5655b8ac,"Added option to allow marker queries when downloading accounts or containers

Change-Id: I5e70481d975ee6b771b8c784d8e181ce79fa3b0f"
gholt,2011-12-15 08:06:39,https://api.github.com/repos/openstack/swift/git/commits/2eb0eb510b468facf0f9dd5e4d4e220d28767330,2eb0eb510b468facf0f9dd5e4d4e220d28767330,"Added exception catchalls for auditors.

Also, changed some os.listdir calls to a new
swift.common.utils.listdir call which returns an empty list for
non-existent paths.

Change-Id: I89964636899d39bc07b1ecf2688786ffca67bf17"
dpgoetz,2011-11-28 17:13:41,https://api.github.com/repos/openstack/swift/git/commits/2b3aab86bb45905170fb50ee245d32aa6403f9cd,2b3aab86bb45905170fb50ee245d32aa6403f9cd,"Fix object replicator to handle Timeouts fixes: lp 814263

Change-Id: I4c8b73d4cb0540fa105f240b2a9d481cf9c1e55c"
sasimpson,2011-11-16 19:48:23,https://api.github.com/repos/openstack/swift/git/commits/dfb9a9f0a340d3a1c4881f7a61d44bada1002979,dfb9a9f0a340d3a1c4881f7a61d44bada1002979,"fixes bug lp 891247

added try/except around the accept header matcher
to catch the assertionerror that was being thrown
and return a more meaningful message.

Change-Id: I64184be0a40f8696f8e7e3801763d555ec2526dd"
gholt,2011-11-19 18:03:38,https://api.github.com/repos/openstack/swift/git/commits/f643a58d32b45068ee106444eae90ba0e0d2280c,f643a58d32b45068ee106444eae90ba0e0d2280c,"Fixes to prevent socket hoarding...

Main thing is the addition of a Queue between reading from the backend
server's httplib.Response and the frontend client's webob.Response,
allowing timeouts on either end to tear down the sockets.

Also, Connection: close headers were added to backend requests since
we only ever do one request per connection; this will tear down those
connections more quickly after the request is complete.

Finally, the eventlet.wsgi.WRITE_TIMEOUT is set in case the Eventlet
version supports it, timing out writes to client connections if they
take too long to read.

Change-Id: I18c7559442cf17a47ff30690ffc75010a7f003c4"
notmyname,2011-11-17 00:14:01,https://api.github.com/repos/openstack/swift/git/commits/e5b3e437ad7c62c1e265fe1bda5766318d4d8e35,e5b3e437ad7c62c1e265fe1bda5766318d4d8e35,"version bump to 1.4.5

Change-Id: I0535c0e861c1a96f20012180ff3e366c6b437794"
dpgoetz,2011-11-16 21:38:40,https://api.github.com/repos/openstack/swift/git/commits/32378d8d68633ca8779fe53674fd029a5c4db678,32378d8d68633ca8779fe53674fd029a5c4db678,"Adding Changelog for 1.4.4

Change-Id: I4f8915ba81fb08fb1c94f56fa45a1d5c6f2889e9"
pandemicsyn,2011-11-15 17:55:14,https://api.github.com/repos/openstack/swift/git/commits/413ca11a5f3df67f6dbc73075e4b338d190eab62,413ca11a5f3df67f6dbc73075e4b338d190eab62,"Add sockstat info to recon.

Add's support for pulling info from /proc/net/sockstat and /proc/net/sockstat6 via recon.

Change-Id: Idb403c6eda199c5d36d96cc9027ee249c12c7d8b"
gholt,2011-11-09 03:25:43,https://api.github.com/repos/openstack/swift/git/commits/2c80454163453a53e7a71988569bb878baa719d2,2c80454163453a53e7a71988569bb878baa719d2,"Fixed leak from SegmentedIterable

Change-Id: Iad26076f9ec3bd26115f67a34401a3e2c9626f74"
gholt,2011-11-14 23:04:17,https://api.github.com/repos/openstack/swift/git/commits/d54d8e14248568e1cd4f2c364318e4d9d129b83a,d54d8e14248568e1cd4f2c364318e4d9d129b83a,"Fixed bufferedhttp to deref socks and fps

Change-Id: Iba5ec452b350adcf8aa4976316c4d5d5686eeee9"
notmyname,2011-11-11 19:55:58,https://api.github.com/repos/openstack/swift/git/commits/b571d56d364ad2f7d3029f3072599c6671492c68,b571d56d364ad2f7d3029f3072599c6671492c68,"fixed object manifest etags

fixes lp bug #873133

Change-Id: Ic371b1e5d858a87dfdb7e28f888f9f3bbd60e661"
notmyname,2011-11-11 14:50:14,https://api.github.com/repos/openstack/swift/git/commits/2f062cf8787e46bb17cb401f6d33091897800723,2f062cf8787e46bb17cb401f6d33091897800723,"added people to the AUTHORS file who have commits since 1.4.3

Change-Id: I5dbc54c32585a67d99dad4da653b2ccc79fa16d2"
gholt,2011-11-09 20:38:54,https://api.github.com/repos/openstack/swift/git/commits/c5f6275c45fcbb8e508b2a48c9782e8e025d2d79,c5f6275c45fcbb8e508b2a48c9782e8e025d2d79,"Make Eventlet's WSGI server log differently.

Change-Id: I6d7fc8c9a0c4c3a033e0e5ee7943e59a52d7c56f"
btorch,2011-10-12 18:23:13,https://api.github.com/repos/openstack/swift/git/commits/0b0785e984d9164c1d1cd84f05dd9909bb7d37a8,0b0785e984d9164c1d1cd84f05dd9909bb7d37a8,"changing config files to be on section 5 and also running spellchecks against all files

""Also adding the new swift-recon and swift-ring-builder manpages to this set""
""Adding new manpages for configuration files and also making changes according to previous review suggestions""
""removing the Author line from the manpages according to suggestions""

Change-Id: I256d2b2851b55a379b59011894f214bf55ba7da9"
pandemicsyn,2011-11-07 19:34:08,https://api.github.com/repos/openstack/swift/git/commits/3b8e20d05944483a0ce21f2dc5d05e32098cb508,3b8e20d05944483a0ce21f2dc5d05e32098cb508,"Fixes bug 887278. The disk usage graph will now be drawn correctly.

Change-Id: I75cf87e409fefa701eea5019f2449757e55eba2f"
chmouel,2011-11-07 16:21:46,https://api.github.com/repos/openstack/swift/git/commits/c9728e7868db5aa2ce1a06b2db78b3745c4f65cf,c9728e7868db5aa2ce1a06b2db78b3745c4f65cf,"Change bzr to swift in getting_started doc.

Fixes #884766.

Change-Id: Id251fa04305352522db22cd27410f0b2e6e9fc06"
gholt,2011-11-07 16:24:08,https://api.github.com/repos/openstack/swift/git/commits/dd839048f1668562a17827084ace4579d0717fd4,dd839048f1668562a17827084ace4579d0717fd4,"Updated TimeoutError and except Exception refs...

Updated eventlet.TimeoutError (deprecated) references to
Timeout and, more importantly, updated many except Exception
clauses to except (Exception, Timeout).

Change-Id: Ib089265551bd20b94c00ea84f11140ccd795d301"
gholt,2011-11-01 23:16:11,https://api.github.com/repos/openstack/swift/git/commits/0e2c101fbabb851a6af169ccb48c9cf7c160fb1d,0e2c101fbabb851a6af169ccb48c9cf7c160fb1d,"Fixed time-sensitive tests.

I noticed that a couple of tests I recently made were
time-sensitive. This can be shown with the following quick
script:

from sys import exit
from unittest import TestSuite, TextTestRunner

from test.unit.obj.test_server import TestObjectController

s = TestSuite()
s.addTest(TestObjectController('test_GET_but_expired'))
s.addTest(TestObjectController('test_HEAD_but_expired'))
for x in xrange(200):
    if TextTestRunner().run(s).failures:
        exit('!!!!!!!!!!!!!!! TEST FAILED !!!!!!!!!!!!!!!')
print '\o/ Test ran 200 times without failure.'

Change-Id: Ifdb1920e5266aaa278baa0759fc0bfaa1aff2d0d"
chmouel,2011-10-05 15:55:01,https://api.github.com/repos/openstack/swift/git/commits/310675f7739a6a03446e8e8c4c5bccde9331b315,310675f7739a6a03446e8e8c4c5bccde9331b315,"Add support for OS Auth API version 2

Add a switch -2 to allow authenticate against service providing
OpenStack auth version 2.0 (ie: keystone).

By default it will authenticate against v1.0 and you can explicitely
force it by adding a --auth-version 1 if in future we decide to set 2.0
auth as default.

It will handle the format tenant:user to indentify to a specific tenant,
if this format is not specified it will assume user is the same as
tenant.

Change-Id: I4684ec1e0950a1dae6935486aa730eaf13d6cd46"
gholt,2011-10-26 21:42:24,https://api.github.com/repos/openstack/swift/git/commits/872420efdb8e6e945cd2fe06994136b8c2ee153a,872420efdb8e6e945cd2fe06994136b8c2ee153a,"Expiring Objects Support

Please see the doc/source/overview_expiring_objects.rst for
more detail.

Change-Id: I4ab49e731248cf62ce10001016e0c819cc531738"
chmouel,2011-11-01 07:18:51,https://api.github.com/repos/openstack/swift/git/commits/74752c8d261aad408c8f17cb93cd80567e64c716,74752c8d261aad408c8f17cb93cd80567e64c716,"Remove bazaar/lp reference and change it to github

Change-Id: Ic58d3023f41204568bff9a4a77c895937b9456d2"
jeblair,2011-10-20 17:51:50,https://api.github.com/repos/openstack/swift/git/commits/e9c76f07bf215818fd8f9a57764b00fa9259bb9b,e9c76f07bf215818fd8f9a57764b00fa9259bb9b,"Add .gitreview config file for gerrit.

The CI team is developing a new tool, git-review:

  https://github.com/openstack-ci/git-review

which is intendend to replace rfc.sh.  This adds a .gitreview file
so that it can automatically determine the canonical gerrit location
for the repository when first run.  Later, rfc.sh will be updated to
indicate it is deprecated, and then eventually removed.

Change-Id: I12e6814796df23fa1be4fa2b3e6427381b218461"
notmyname,2011-10-19 14:21:14,https://api.github.com/repos/openstack/swift/git/commits/742897856fd9d3969a0a6b38318424d9e6707441,742897856fd9d3969a0a6b38318424d9e6707441,"requote the source when doing a COPY

fixes lp bug 857673
also fixes similar bug in post-as-copy code
adds test

Change-Id: I7a1984506bba28afe2b7ba46998d7306c058fd5c"
pandemicsyn,2011-10-18 21:10:50,https://api.github.com/repos/openstack/swift/git/commits/bb8c4eab41803d59e1d52ebc12ff50f29fba1171,bb8c4eab41803d59e1d52ebc12ff50f29fba1171,"Add documentation for Swift Recon.

Change-Id: I37f4fb624bdc5b8bbf2e691d29aa6b15cd648aa8"
dpgoetz,2011-10-13 16:36:17,https://api.github.com/repos/openstack/swift/git/commits/215b3eb86715a3444bae9a7d3e12ac4b8cb5ae59,215b3eb86715a3444bae9a7d3e12ac4b8cb5ae59,"Fixing bug with x-trans-id.  Will now be set on all incoming requests to proxy and trans-ids will not be reused.

Change-Id: Ieb59cadd9925a122566c98374b9736e77d3f98dd"
dpgoetz,2011-10-11 19:21:20,https://api.github.com/repos/openstack/swift/git/commits/e28e14f6b9bc9c7fc29484d3cf84f3b620b4209b,e28e14f6b9bc9c7fc29484d3cf84f3b620b4209b,"Adding what acc/cont/obj into the ratelimit error messages

Change-Id: I8a033e95f784c30175d6b26c6511bedf14d919aa"
chmouel,2011-10-07 22:53:48,https://api.github.com/repos/openstack/swift/git/commits/3b7442801dd1064456c3d8876d5070fe557d155b,3b7442801dd1064456c3d8876d5070fe557d155b,"Fix documentation example.

get HTTPUnauthorized and HTTPForbidden from webob.exc

Change-Id: Id0a40077fb0adedd8cbf4f490e13fd522c92571a"
chmouel,2011-10-06 15:35:43,https://api.github.com/repos/openstack/swift/git/commits/6170e66b42477dd4ae752a80806a9fec60e7458d,6170e66b42477dd4ae752a80806a9fec60e7458d,"Use account_autocreate for tempauth.

We don't need to create ourself account in tempauth as we can use
account_autocreate from proxy server.

Change-Id: I6d0a044be361a53faee15d15177a9b5bc95da19e"
redbo,2011-09-30 00:17:35,https://api.github.com/repos/openstack/swift/git/commits/b3c28004975f61cf37a5eba085c771affca59eb8,b3c28004975f61cf37a5eba085c771affca59eb8,"make drive audit regexes detect 4-letter drives

addresses bug 827913

Change-Id: I691eee191f5951186158c553281f88aae9e5d25f"
pandemicsyn,2011-09-28 06:00:31,https://api.github.com/repos/openstack/swift/git/commits/480df2e89ef20f1b2034f1566fef4858bc14436f,480df2e89ef20f1b2034f1566fef4858bc14436f,"Query only specific zone via swift-recon

Add support to query only specific zones, as well a --all shortcut flag to run all checks.
Also skip deleted devices when trying to grab hosts from the ring.

Change-Id: I441ec76c90857c2e74262a7a9e2d36de89b28631"
chmouel,2011-09-26 13:30:18,https://api.github.com/repos/openstack/swift/git/commits/1397fa799b64cc259a9a1b1b70b7b048f2182837,1397fa799b64cc259a9a1b1b70b7b048f2182837,"Fix swift-recon

Make sure there is things in the row of ring_data.devs.
Adjust else: for the driver information.

Change-Id: I11a949dfa3f36691f86f3b7330d65e435c22da24"
notmyname,2011-09-07 22:11:15,https://api.github.com/repos/openstack/swift/git/commits/c3bc288d060e221e85d9d6beaa70928fcef77137,c3bc288d060e221e85d9d6beaa70928fcef77137,"bumped version to 1.4.4

Change-Id: I752def9a6f76f74cfd30c744525dfcccc35782c1"
gholt,2011-09-07 21:55:40,https://api.github.com/repos/openstack/swift/git/commits/ba57e6ec04d26e83fc83732f63817ebec89a4368,ba57e6ec04d26e83fc83732f63817ebec89a4368,"Updating changelog for 1.4.3

Change-Id: Iae6a3d5341d9621034c772174abfa3f10e7e335b"
jeblair,2011-09-06 15:37:38,https://api.github.com/repos/openstack/swift/git/commits/46c5ed75e1fa11f6e180e737f6ba94e25c7212e3,46c5ed75e1fa11f6e180e737f6ba94e25c7212e3,"Add rfc.sh to help with gerrit workflow.

Change-Id: If2af58cd4724b440d47385c10f202c9441cdf4bb"
creiht,2011-09-02 15:32:31,https://api.github.com/repos/openstack/swift/git/commits/081dd1683226330d73b5906c2a1906ffd167f69f,081dd1683226330d73b5906c2a1906ffd167f69f,Fixes last modified date for swift3 middleware
creiht,2011-09-02 15:17:35,https://api.github.com/repos/openstack/swift/git/commits/71f82582dbaaaa65312f7baf15277e9254ef6bd9,71f82582dbaaaa65312f7baf15277e9254ef6bd9,removed unused import
creiht,2011-09-01 21:12:35,https://api.github.com/repos/openstack/swift/git/commits/2be5c2a820453860986e8e127e1bf18d9b75587c,2be5c2a820453860986e8e127e1bf18d9b75587c,Added unit test :P
pandemicsyn,2011-09-01 20:07:30,https://api.github.com/repos/openstack/swift/git/commits/acc82f8267d79a158b37c821c8744fee1fda7ef8,acc82f8267d79a158b37c821c8744fee1fda7ef8,"obj replicator can now log replication stats for recon directly:

in object-server.conf:

[object-replicator]
vm_test_mode = yes
recon_enable = yes
recon_cache_path = /var/cache/swift

Also replaced the swift-recon bash cronjob with a friendlier/cleaner python version, that now only obtains async stats. Basic usage:

$ bin/swift-recon-cron
Usage: swift-recon-cron CONF_FILE 

#CONF_FILE = path to your object-server.conf

$ bin/swift-recon-cron /etc/swift/object-server.conf"
pandemicsyn,2011-09-01 18:46:13,https://api.github.com/repos/openstack/swift/git/commits/e9b5cb83acc0dd58160afd701ff59680d4025b34,e9b5cb83acc0dd58160afd701ff59680d4025b34,simplejson import and exception/logging fixes
creiht,2011-09-01 15:48:53,https://api.github.com/repos/openstack/swift/git/commits/eb707547f577f2730f4eca37b34385a1db68b494,eb707547f577f2730f4eca37b34385a1db68b494,Fixed date format for S3 bucket listing
pandemicsyn,2011-08-31 20:19:16,https://api.github.com/repos/openstack/swift/git/commits/9b276ad74b702183adf775312d03f986e93ff811,9b276ad74b702183adf775312d03f986e93ff811,pep8
creiht,2011-08-31 19:17:31,https://api.github.com/repos/openstack/swift/git/commits/44c14c1de44f159389748b97fdf13578ec2906c6,44c14c1de44f159389748b97fdf13578ec2906c6,Fixes multi node docs to point to the right ppa
creiht,2011-08-31 19:08:02,https://api.github.com/repos/openstack/swift/git/commits/42c975aa4e0a929d0f8d4562d10f236e99377cdb,42c975aa4e0a929d0f8d4562d10f236e99377cdb,Fixed ppa for multinode instructions
pandemicsyn,2011-08-31 16:29:59,https://api.github.com/repos/openstack/swift/git/commits/3f71bddbf71ae258e1f4c9df51805a210481fc0e,3f71bddbf71ae258e1f4c9df51805a210481fc0e,fixup file recon file locking
noodley,2011-08-31 15:37:53,https://api.github.com/repos/openstack/swift/git/commits/772dde3be5a6e7b1a4e4b5ad6f22c7f9d0ce05a7,772dde3be5a6e7b1a4e4b5ad6f22c7f9d0ce05a7,"Proposed fix for bug #837428.

To test: 
Create an object without an x-timestamp or x-put-timestamp header and request the object with the X-newest header.

Without the patch, the proxy will return a 404 object not found even though the storage nodes return the object to the proxy.

With the patch, the proxy will return the first object received unless an object with a newer timestamp header exists."
dpgoetz,2011-08-31 15:17:26,https://api.github.com/repos/openstack/swift/git/commits/b0651fde1e7e027887990195e9e810625b4be967,b0651fde1e7e027887990195e9e810625b4be967,"Fix for object auditor.  It doesn't close files that are quarantined for certain reasons, zero byte files for one, which will cause it to eventually crash due to keeping too many files open.  Thanks David Kranz for finding / reporting this!!"
dpgoetz,2011-08-31 14:28:36,https://api.github.com/repos/openstack/swift/git/commits/fc4f6feb8f769aac8f62afb6fdedac86262c2c26,fc4f6feb8f769aac8f62afb6fdedac86262c2c26,fix for unit test
noodley,2011-08-31 13:08:59,https://api.github.com/repos/openstack/swift/git/commits/5d13c0bde3a1d1f32f06d875f42070fccc330615,5d13c0bde3a1d1f32f06d875f42070fccc330615,PEP8 fixes and unit tests merged from https://code.launchpad.net/~gholt/swift/lp837428/+merge/73439 . Added additional unittests for GET in case it is handled by a separate code path from HEAD in the future.
pandemicsyn,2011-08-31 07:14:35,https://api.github.com/repos/openstack/swift/git/commits/8b6126984c7af7eba182b7489f8a4fecdb6f1267,8b6126984c7af7eba182b7489f8a4fecdb6f1267,object-replicator now optionally updates recon stats directly. also updated swift-recon-cron with a cleaner python version.
dpgoetz,2011-08-30 21:29:19,https://api.github.com/repos/openstack/swift/git/commits/daa057d5979d7a9557cde29e50a489d393b56c77,daa057d5979d7a9557cde29e50a489d393b56c77,make sure files always get closed
dpgoetz,2011-08-30 20:47:31,https://api.github.com/repos/openstack/swift/git/commits/418b57b729a74e2795fd7997c8be7a2c9965d925,418b57b729a74e2795fd7997c8be7a2c9965d925,Changes needed for SOS
gholt,2011-08-30 20:31:17,https://api.github.com/repos/openstack/swift/git/commits/73fe77148db4c53b4b109f99eac116f2adbc1f9d,73fe77148db4c53b4b109f99eac116f2adbc1f9d,PEP8 fix
gholt,2011-08-30 20:27:06,https://api.github.com/repos/openstack/swift/git/commits/5b9137cc716a45325253ad233e96a64f716ce554,5b9137cc716a45325253ad233e96a64f716ce554,Test for x-newest with new proxy and old object server
dpgoetz,2011-08-30 19:07:32,https://api.github.com/repos/openstack/swift/git/commits/bed607b07a6389fd12be11ba8543402124ddd4bb,bed607b07a6389fd12be11ba8543402124ddd4bb,adding unit tests
noodley,2011-08-30 15:11:26,https://api.github.com/repos/openstack/swift/git/commits/daf28dde7c20f644ac612cbc6d3d85f152f848ad,daf28dde7c20f644ac612cbc6d3d85f152f848ad,Changed GETorHEAD_base to return an object even when HTTP_X_NEWEST is set and none of the requested objects have a timestamp set.
notmyname,2011-08-29 20:37:27,https://api.github.com/repos/openstack/swift/git/commits/da3d53a1ef2941077a17334e3f0008b405cefcbf,da3d53a1ef2941077a17334e3f0008b405cefcbf,deleting a database (account or container) now also clears the metadata
notmyname,2011-08-29 20:26:25,https://api.github.com/repos/openstack/swift/git/commits/4724fa62093068e2ed175b7e6c4ca07bfa6bf5cc,4724fa62093068e2ed175b7e6c4ca07bfa6bf5cc,cleaned up local variable
dpgoetz,2011-08-29 19:39:20,https://api.github.com/repos/openstack/swift/git/commits/4eecac0a220d0ba019d429b232bc9f79d79c3bf4,4eecac0a220d0ba019d429b232bc9f79d79c3bf4,fix for trans id
dpgoetz,2011-08-29 19:34:53,https://api.github.com/repos/openstack/swift/git/commits/c296ade4702c0188ff3c835c4e160dd8dbec9b69,c296ade4702c0188ff3c835c4e160dd8dbec9b69,fix for trans id
notmyname,2011-08-29 18:04:20,https://api.github.com/repos/openstack/swift/git/commits/57a4e509f3411748413821e22af2efd4a3bc748e,57a4e509f3411748413821e22af2efd4a3bc748e,improved delete db test
notmyname,2011-08-29 15:58:07,https://api.github.com/repos/openstack/swift/git/commits/6f854676f1c37191698235a6767a5b3a22c11b63,6f854676f1c37191698235a6767a5b3a22c11b63,deleting a db now also clears the db's metadata
notmyname,2011-08-23 15:22:26,https://api.github.com/repos/openstack/swift/git/commits/dca25523936e6dc8187be94997750dbdee307bcb,dca25523936e6dc8187be94997750dbdee307bcb,updated the proxy to return all headers stored for manifest objects
notmyname,2011-08-22 15:22:50,https://api.github.com/repos/openstack/swift/git/commits/1313d1fc1619c7cb3b1af454d805c52f2b2c58d6,1313d1fc1619c7cb3b1af454d805c52f2b2c58d6,added test for an extra header in lobjects
notmyname,2011-08-22 14:42:27,https://api.github.com/repos/openstack/swift/git/commits/113eb20518d35a39a869c79e7a0718c480e27564,113eb20518d35a39a869c79e7a0718c480e27564,"simplified setup.py

It contained code to automatically build a change log from bzr. We are moving to git, and we don't use this function anyway--we manually maintain the change log.

I confirmed with Monty Taylor on IRC that the openstack packagers don't use this functionality either."
notmyname,2011-08-19 22:14:43,https://api.github.com/repos/openstack/swift/git/commits/fe3c43628eb010325933d9f5aa8ad15a5feeabe6,fe3c43628eb010325933d9f5aa8ad15a5feeabe6,updated manifest files to not filter headers returned by the manifest object
notmyname,2011-08-19 15:58:18,https://api.github.com/repos/openstack/swift/git/commits/e76bfa67d409366d330f0bc83b04ad53dea66a20,e76bfa67d409366d330f0bc83b04ad53dea66a20,simplified setup.py
pandemicsyn,2011-08-18 22:32:31,https://api.github.com/repos/openstack/swift/git/commits/f96efd9b5113251e08c717d91a9700e3d748327b,f96efd9b5113251e08c717d91a9700e3d748327b,Add support for pulling quarantine stats.
dpgoetz,2011-08-17 18:29:21,https://api.github.com/repos/openstack/swift/git/commits/1fd82fde79a6533bba18eae1a22a88cb95a8cec6,1fd82fde79a6533bba18eae1a22a88cb95a8cec6,fix to wsgi request
dpgoetz,2011-08-15 21:09:11,https://api.github.com/repos/openstack/swift/git/commits/72020ef4a6b0ceacd3875a1623701947c6aa0ccb,72020ef4a6b0ceacd3875a1623701947c6aa0ccb,adding self signed request
pandemicsyn,2011-08-14 15:49:15,https://api.github.com/repos/openstack/swift/git/commits/b762c5acd00b5014751e887f4779837dacf1d3db,b762c5acd00b5014751e887f4779837dacf1d3db,pep8 fix
pandemicsyn,2011-08-12 21:29:13,https://api.github.com/repos/openstack/swift/git/commits/dcd39d098fb004e0c143e9b75ec08d9e189dacd1,dcd39d098fb004e0c143e9b75ec08d9e189dacd1,account for parent/.. hardlinks
pandemicsyn,2011-08-12 20:01:28,https://api.github.com/repos/openstack/swift/git/commits/44803a835d8a9100e9731597cb22e06642251cef,44803a835d8a9100e9731597cb22e06642251cef,add quarantine stats
btorch,2011-08-12 18:53:12,https://api.github.com/repos/openstack/swift/git/commits/64381be1415ee02758a8fade8becf86285afd2ab,64381be1415ee02758a8fade8becf86285afd2ab,"Updated the swift tool so that when uploading an object giving the full path, such as e.g: /etc/vim/vimrc , it will strip the initial ""/"" from the object name."
gholt,2011-08-12 18:52:29,https://api.github.com/repos/openstack/swift/git/commits/c8b74ef3f2589dbd542883536b40bf24a38a8bac,c8b74ef3f2589dbd542883536b40bf24a38a8bac,Minor fix of quarantine naming
gholt,2011-08-12 18:29:16,https://api.github.com/repos/openstack/swift/git/commits/c9cd011c4660b66a585aa50fc2c72c4f16727013,c9cd011c4660b66a585aa50fc2c72c4f16727013,Minor fix of quarantine naming
notmyname,2011-08-12 16:27:27,https://api.github.com/repos/openstack/swift/git/commits/b144d10d3d18e4fc08f9e83d279feb9e697133bd,b144d10d3d18e4fc08f9e83d279feb9e697133bd,added client_ip to all proxy log lines not otherwise containing it
notmyname,2011-08-12 13:33:42,https://api.github.com/repos/openstack/swift/git/commits/33ecfc3a43d26c20dca22000f04b9e89032927df,33ecfc3a43d26c20dca22000f04b9e89032927df,removed extraneous docstring lines
notmyname,2011-08-11 20:52:23,https://api.github.com/repos/openstack/swift/git/commits/cb6251b8143e4d9c7dfffc00b3a263de0627df47,cb6251b8143e4d9c7dfffc00b3a263de0627df47,added florian to authors file
notmyname,2011-08-11 20:44:48,https://api.github.com/repos/openstack/swift/git/commits/c6c0b91ed90e14bd18ce2c8f5d5f2f2c8af312c6,c6c0b91ed90e14bd18ce2c8f5d5f2f2c8af312c6,added florian to AUTHORS
pandemicsyn,2011-08-11 20:37:28,https://api.github.com/repos/openstack/swift/git/commits/5dd89c19c1a00334fe86998fcd4851a0e14b63ea,5dd89c19c1a00334fe86998fcd4851a0e14b63ea,start of recon middleware for the object server and utils for basic cluster monitoring
pandemicsyn,2011-08-11 20:17:28,https://api.github.com/repos/openstack/swift/git/commits/4d0e4622de32b9ea01d03e812d8f4bde0615ed81,4d0e4622de32b9ea01d03e812d8f4bde0615ed81,add binary's/recon.py to setup.py
notmyname,2011-08-11 19:36:02,https://api.github.com/repos/openstack/swift/git/commits/0504fffb058103754be864006aa6fe49c4c2a883,0504fffb058103754be864006aa6fe49c4c2a883,added client_ip to all proxy log lines not otherwise containing it
gholt,2011-08-08 14:42:26,https://api.github.com/repos/openstack/swift/git/commits/3afdee537c2f3fbeb322d3de9b6dea2582e6b9b7,3afdee537c2f3fbeb322d3de9b6dea2582e6b9b7,PEP8 Fix
gholt,2011-08-07 14:46:11,https://api.github.com/repos/openstack/swift/git/commits/a3c97c5b3da20da0c76b2f22e85940216bfafc52,a3c97c5b3da20da0c76b2f22e85940216bfafc52,PEP8 fix
gholt,2011-08-04 16:52:26,https://api.github.com/repos/openstack/swift/git/commits/9ca33c86905791dd2735c90c36148f13dd947bf0,9ca33c86905791dd2735c90c36148f13dd947bf0,More quarantine catching code. This should catch and quarantine any databases that indicate malformation or corruption with the known raised exceptions and it should catch and quarantine the case we've seen where hash directories become files.
notmyname,2011-08-03 19:32:26,https://api.github.com/repos/openstack/swift/git/commits/493330e2a8e5e5ba85ecbc2d0ba4bd27c892c439,493330e2a8e5e5ba85ecbc2d0ba4bd27c892c439,added Ewan to authors file
notmyname,2011-08-03 19:19:06,https://api.github.com/repos/openstack/swift/git/commits/ac39144fcb8960e05d8f1ce5dea7f17c78793404,ac39144fcb8960e05d8f1ce5dea7f17c78793404,added Ewan to authors file
ewanmellor,2011-08-03 18:02:36,https://api.github.com/repos/openstack/swift/git/commits/da3b06a6128f293ee6246aaeceab6204b83292bb,da3b06a6128f293ee6246aaeceab6204b83292bb,"Bug #820185: Intermittent TypeError NoneType in atexit handler of unit tests

Work around what appears to be a Python standard library bug by silencing
exceptions in the logging library."
ewanmellor,2011-08-03 05:55:13,https://api.github.com/repos/openstack/swift/git/commits/3373382284a0c998c3af939e256abb2684a2bce5,3373382284a0c998c3af939e256abb2684a2bce5,"Bug #820185: Intermittent TypeError NoneType in atexit handler of unit tests

Work around what appears to be a Python standard library bug by silencing
exceptions in the logging library."
notmyname,2011-08-02 20:12:26,https://api.github.com/repos/openstack/swift/git/commits/66c2e1c192417a433665ced616bcbeed647ff7c1,66c2e1c192417a433665ced616bcbeed647ff7c1,added Gaurav B. Gangalwar to AUTHORS file
notmyname,2011-08-02 19:51:27,https://api.github.com/repos/openstack/swift/git/commits/074a11af48e03860b17ad58e54e2a9a6520f1953,074a11af48e03860b17ad58e54e2a9a6520f1953,added Gaurav B. Gangalwar to AUTHORS file
gholt,2011-08-02 18:21:25,https://api.github.com/repos/openstack/swift/git/commits/3628c08b3e882670a4ff113107a3b3fcdb0f93fc,3628c08b3e882670a4ff113107a3b3fcdb0f93fc,Real files for bad databases.
gholt,2011-08-02 17:46:17,https://api.github.com/repos/openstack/swift/git/commits/dfd61697c17eb5a44587635542293f4c1f9e50f3,dfd61697c17eb5a44587635542293f4c1f9e50f3,Fix bug; added test for quarantined a hash dir that becomes a file
pandemicsyn,2011-08-02 02:43:55,https://api.github.com/repos/openstack/swift/git/commits/7938a5d77705d2ef351c084da905ab51be28802e,7938a5d77705d2ef351c084da905ab51be28802e,quick comment on how to load recon.py
gholt,2011-08-01 21:14:41,https://api.github.com/repos/openstack/swift/git/commits/a68e5d883c2c827bc8ef70b0bef1495325ad7840,a68e5d883c2c827bc8ef70b0bef1495325ad7840,Fixed test based on testdir
gholt,2011-08-01 20:46:30,https://api.github.com/repos/openstack/swift/git/commits/671117e1d999875d5e7dfe79504d0aaf471890f0,671117e1d999875d5e7dfe79504d0aaf471890f0,Tests for db quarantining
gholt,2011-08-01 16:08:55,https://api.github.com/repos/openstack/swift/git/commits/92618c97638f66f6588e5729264637e46a592e7f,92618c97638f66f6588e5729264637e46a592e7f,More quarantine catching
btorch,2011-07-28 22:32:40,https://api.github.com/repos/openstack/swift/git/commits/6bd22e7223217dc110993878b0c7857d28d7f4ce,6bd22e7223217dc110993878b0c7857d28d7f4ce,made a small change in the  _object_job function in order to have the initial foward slash stripped off an object name when one exits
gholt,2011-07-28 14:57:59,https://api.github.com/repos/openstack/swift/git/commits/948acb00d8dd1580ec74d0dd27e5abbb1b56dec4,948acb00d8dd1580ec74d0dd27e5abbb1b56dec4,Updated CHANGELOG with stuff I got confused about with the 1.4.2 release.
pandemicsyn,2011-07-28 03:29:23,https://api.github.com/repos/openstack/swift/git/commits/749892338bfb171eba0c8d10fa905f0e68ed8ca2,749892338bfb171eba0c8d10fa905f0e68ed8ca2,few fixes to temp cronjob
gholt,2011-07-27 19:32:20,https://api.github.com/repos/openstack/swift/git/commits/1d9e4cd56af499342355d3d9c5377440305d268d,1d9e4cd56af499342355d3d9c5377440305d268d,Updated CHANGELOG with stuff I got confused about with the 1.4.2 release.
pandemicsyn,2011-07-27 15:41:07,https://api.github.com/repos/openstack/swift/git/commits/aa622eb799556fd8a7c96d9c431b7037eaf439d0,aa622eb799556fd8a7c96d9c431b7037eaf439d0,recon middlewear for the object server and utils for cluster monitoring
ttx,2011-07-25 17:57:52,https://api.github.com/repos/openstack/swift/git/commits/b6a3767efb295ecc3e8f268b506b40a8929df669,b6a3767efb295ecc3e8f268b506b40a8929df669,Switch trunk to 1.4.3
gholt,2011-07-25 16:27:51,https://api.github.com/repos/openstack/swift/git/commits/a9c0a264b8189d37b2242a6a267913ab97ae3baa,a9c0a264b8189d37b2242a6a267913ab97ae3baa,1.4.2 CHANGELOG
gholt,2011-07-25 16:17:49,https://api.github.com/repos/openstack/swift/git/commits/2ad2d0600e92bc7a56d72ffe3350eae07f36975c,2ad2d0600e92bc7a56d72ffe3350eae07f36975c,1.4.2 CHANGELOG
dpgoetz,2011-07-25 16:12:56,https://api.github.com/repos/openstack/swift/git/commits/e6f752e76bea5c2594250b298cfc3039f4d9b6bd,e6f752e76bea5c2594250b298cfc3039f4d9b6bd,"Rollback of XML:
rolling back xml changes bzr merge -r323..322
rolling back xml changes bzr merge -r319..318"
gholt,2011-07-25 16:02:59,https://api.github.com/repos/openstack/swift/git/commits/908181842568309e383e149f18352a119d2876d9,908181842568309e383e149f18352a119d2876d9,Fix test to compare unpickled values since we really don't care to test pickling
gholt,2011-07-25 15:40:11,https://api.github.com/repos/openstack/swift/git/commits/ae5cc4f6ceaa928dfb651c1cd2f738e55e340b89,ae5cc4f6ceaa928dfb651c1cd2f738e55e340b89,Fix test to compare unpickled values since we really don't care to test pickling
ttx,2011-07-25 12:08:43,https://api.github.com/repos/openstack/swift/git/commits/2c83148a2de978382875e6b474c0b3d899a7c5dc,2c83148a2de978382875e6b474c0b3d899a7c5dc,Switch trunk to 1.4.3 development
dpgoetz,2011-07-22 19:58:22,https://api.github.com/repos/openstack/swift/git/commits/d234461344f9255e6a7ef6a431b9a8c282a3d708,d234461344f9255e6a7ef6a431b9a8c282a3d708,"merge up to trunk, rollback xml"
dpgoetz,2011-07-22 17:54:54,https://api.github.com/repos/openstack/swift/git/commits/9be62bd9cd3e48e20c5634a56d37e05edba65e8d,9be62bd9cd3e48e20c5634a56d37e05edba65e8d,rolling back xml changes bzr merge -r319..318
dpgoetz,2011-07-22 17:53:25,https://api.github.com/repos/openstack/swift/git/commits/065318a251d3fd9c1dab2a49cfcf20672965c54e,065318a251d3fd9c1dab2a49cfcf20672965c54e,rolling back xml changes bzr merge -r323..322
fujita,2011-07-22 15:32:19,https://api.github.com/repos/openstack/swift/git/commits/fe27d30c5e1b5d8511b41d94469a075a2da1e778,fe27d30c5e1b5d8511b41d94469a075a2da1e778,Fix swift3 authentication bug about the Date and X-Amz-Date handling.
dpgoetz,2011-07-19 20:02:31,https://api.github.com/repos/openstack/swift/git/commits/9986c0d8eba42fbb8eda3c83558e389731d4c1ce,9986c0d8eba42fbb8eda3c83558e389731d4c1ce,Changing ratelimiting so that it only limits PUTs/DELETEs.
dpgoetz,2011-07-18 22:19:32,https://api.github.com/repos/openstack/swift/git/commits/c23fa42fad49957f114338192f92bf6659f19b5a,c23fa42fad49957f114338192f92bf6659f19b5a,fix docs
gholt,2011-07-18 20:12:24,https://api.github.com/repos/openstack/swift/git/commits/265a5912f7d816cdcc381f905d1756f788ad10ae,265a5912f7d816cdcc381f905d1756f788ad10ae,Container Synchronization Feature - First Edition
gholt,2011-07-14 20:47:45,https://api.github.com/repos/openstack/swift/git/commits/183fd076acc993239998706467fe938d105582b0,183fd076acc993239998706467fe938d105582b0,Ensure paired alter table commands are in same transaction
gholt,2011-07-14 20:07:45,https://api.github.com/repos/openstack/swift/git/commits/498edf3e348fe796f335b86942b6fb93c892d70a,498edf3e348fe796f335b86942b6fb93c892d70a,Reset container sync points when the sync-to changes
gholt,2011-07-14 18:53:04,https://api.github.com/repos/openstack/swift/git/commits/2f0df53ed9ba3a7937e52c855f3941c94a3aa0ef,2f0df53ed9ba3a7937e52c855f3941c94a3aa0ef,Added notes about container sync and large objects
gholt,2011-07-14 18:43:08,https://api.github.com/repos/openstack/swift/git/commits/f4fa3d626ca4453f532ac6f2afdd6a76aba3489c,f4fa3d626ca4453f532ac6f2afdd6a76aba3489c,Merged from trunk
gholt,2011-07-13 22:31:55,https://api.github.com/repos/openstack/swift/git/commits/05091698510f7ab0fcc0af62e5b41959d88e56aa,05091698510f7ab0fcc0af62e5b41959d88e56aa,Fix post-as-copy return code
gholt,2011-07-13 21:38:20,https://api.github.com/repos/openstack/swift/git/commits/8a83d97530172029e343b450e231d94ee1805a49,8a83d97530172029e343b450e231d94ee1805a49,Fix post-as-copy return code
sasimpson,2011-07-13 21:17:29,https://api.github.com/repos/openstack/swift/git/commits/5b882e08a1ab5004b004db0605aeafa5c6bac01d,5b882e08a1ab5004b004db0605aeafa5c6bac01d,"webob will tack on 'charset: utf-8' for certain content-types (text/plain, startswith: text/, application/, etc) when initialized with a content-type.  swift stores the content-type as passed by the client in the xattrs which was then used in the initializer for the Response in the object server. This could cause extra charsets to be appended in certain conditions.  The change involves taking the content-type out of the initializer and assigning it directly to what is in the xattrs.  this bypasses the webob charset addition."
gholt,2011-07-13 20:21:58,https://api.github.com/repos/openstack/swift/git/commits/9fdac7a89f1e64315118cc7206eab9a2f6180196,9fdac7a89f1e64315118cc7206eab9a2f6180196,"Update to <?xml version=""1.1"""
gholt,2011-07-13 20:03:04,https://api.github.com/repos/openstack/swift/git/commits/7b06c9855ccb822184aca02b4dae907eb39c2fb5,7b06c9855ccb822184aca02b4dae907eb39c2fb5,"Update to <?xml version=""1.1"""
dpgoetz,2011-07-13 18:05:26,https://api.github.com/repos/openstack/swift/git/commits/87176f582b737e826d0c2b5e5b60a9b839bc33ad,87176f582b737e826d0c2b5e5b60a9b839bc33ad,fixing unit test
dpgoetz,2011-07-13 18:00:13,https://api.github.com/repos/openstack/swift/git/commits/51ab672ff5faa6f9a1665350a76af0a830ccb6a2,51ab672ff5faa6f9a1665350a76af0a830ccb6a2,fixing what is limited
sasimpson,2011-07-12 16:16:52,https://api.github.com/repos/openstack/swift/git/commits/195b71da60e9e0aa410e1a54650b24b105541ea6,195b71da60e9e0aa410e1a54650b24b105541ea6,fixed the content type on object server to return what is in the xattrs exactly
dpgoetz,2011-07-12 15:15:15,https://api.github.com/repos/openstack/swift/git/commits/01307fd46ff90d08fa2bb06b04f26919bf6c28d7,01307fd46ff90d08fa2bb06b04f26919bf6c28d7,"limit PUT, DELETE, POSTs to /a/c and /a/c/o"
dpgoetz,2011-07-11 22:54:51,https://api.github.com/repos/openstack/swift/git/commits/e3ff894fab6dc4fe128764db799003703fc8b6f9,e3ff894fab6dc4fe128764db799003703fc8b6f9,limit posts and copies
fujita,2011-07-11 11:19:43,https://api.github.com/repos/openstack/swift/git/commits/e0bc916ccd1fd558775ebbd664c319702088173f,e0bc916ccd1fd558775ebbd664c319702088173f,"s3api: add more unittests for canonical_string

For the Date and X-Amz-Date header handling."
fujita,2011-07-11 11:17:58,https://api.github.com/repos/openstack/swift/git/commits/6efeab60d93688be2663ec68d5f65911819713d4,6efeab60d93688be2663ec68d5f65911819713d4,"s3api: fix canonical_string for Date and X-Amz-Date header handling

canonical_string needs to reset the Date header if it sees the
X-Amz-Date header."
gholt,2011-07-10 14:18:36,https://api.github.com/repos/openstack/swift/git/commits/97c6ec6beb53b8726db92587736e1690426a945b,97c6ec6beb53b8726db92587736e1690426a945b,comment on domain_remap regarding container sync
gholt,2011-07-08 19:57:45,https://api.github.com/repos/openstack/swift/git/commits/b88a0d0f9580033712b2dff431c1287188208859,b88a0d0f9580033712b2dff431c1287188208859,consync: fixes as per the code roast
dpgoetz,2011-07-08 17:48:47,https://api.github.com/repos/openstack/swift/git/commits/748f449d31dd15064e1d7b6414b8336b8f3fa95f,748f449d31dd15064e1d7b6414b8336b8f3fa95f,changing ratelimiting so it only limits PUTs/DELETEs
gholt,2011-07-07 14:24:37,https://api.github.com/repos/openstack/swift/git/commits/b6153425b8ebb8c0ac7f9e686cbc1237e0c3bd9d,b6153425b8ebb8c0ac7f9e686cbc1237e0c3bd9d,Updated swift util with client.py changes.
gholt,2011-07-05 16:25:39,https://api.github.com/repos/openstack/swift/git/commits/42298f607a7b24dd129bcdd7cd664bebb923b8f2,42298f607a7b24dd129bcdd7cd664bebb923b8f2,consync: updated client.py to better work with proxies. Had to use the private httplib._set_tunnel though. :/
gholt,2011-06-30 21:52:09,https://api.github.com/repos/openstack/swift/git/commits/8c24a70139c46c4f6b82a136dc53b3f63785d9f0,8c24a70139c46c4f6b82a136dc53b3f63785d9f0,Merged from trunk
notmyname,2011-06-30 15:51:46,https://api.github.com/repos/openstack/swift/git/commits/866ffd39f69036fb9fc2ca98a217e7255aef3c9e,866ffd39f69036fb9fc2ca98a217e7255aef3c9e,add Joe Arnold to AUTHORS list
notmyname,2011-06-30 15:31:28,https://api.github.com/repos/openstack/swift/git/commits/7d8dd0994d3f22b8c98c4893d36147f588a5f360,7d8dd0994d3f22b8c98c4893d36147f588a5f360,fixed test to work with webob 1.0.8
notmyname,2011-06-30 15:20:36,https://api.github.com/repos/openstack/swift/git/commits/411bc0b9e28a36350ee1c2d6b88d3c16a54ec7e1,411bc0b9e28a36350ee1c2d6b88d3c16a54ec7e1,updated test to include request method
gholt,2011-06-29 20:49:19,https://api.github.com/repos/openstack/swift/git/commits/8c596c06fbb977e39ef1b5979328dade67286896,8c596c06fbb977e39ef1b5979328dade67286896,consync: updated class docs
notmyname,2011-06-29 20:44:33,https://api.github.com/repos/openstack/swift/git/commits/53ea6f9b71c33606042864c5a2e442bcdb31d940,53ea6f9b71c33606042864c5a2e442bcdb31d940,added Joe Arnold to the AUTHORS file
gholt,2011-06-24 14:22:30,https://api.github.com/repos/openstack/swift/git/commits/64601cb02c32270717fbb7c975b823f9cebcbe8e,64601cb02c32270717fbb7c975b823f9cebcbe8e,Update to comply with XML 1.1: No NULLs in names allowed; control chars are converted to entities (ex: &#x4;)
notmyname,2011-06-23 19:52:28,https://api.github.com/repos/openstack/swift/git/commits/37010e78633532fee57267807d44d861505bf8c3,37010e78633532fee57267807d44d861505bf8c3,remove reference to recreateaccounts script in saio instructions
notmyname,2011-06-23 19:41:02,https://api.github.com/repos/openstack/swift/git/commits/3d028bd8be1d054b1505b456c60a31fcccbd8e7b,3d028bd8be1d054b1505b456c60a31fcccbd8e7b,removed reference to recreateaccounts script
notmyname,2011-06-22 22:17:30,https://api.github.com/repos/openstack/swift/git/commits/5d7eac5965c74c7277744998e0fb6c92361c267c,5d7eac5965c74c7277744998e0fb6c92361c267c,removed stats/logging code from swift
fujita,2011-06-22 18:32:31,https://api.github.com/repos/openstack/swift/git/commits/5734c09ed228273171591f65dbb67b6150a95e63,5734c09ed228273171591f65dbb67b6150a95e63,This fixes the bug that drop_buffer_cache() doesn't work on systems where off_t isn't 64 bits.
gholt,2011-06-22 15:05:23,https://api.github.com/repos/openstack/swift/git/commits/552fa38ed17fb349064e813b9d0452be93e99307,552fa38ed17fb349064e813b9d0452be93e99307,Doc updates
notmyname,2011-06-17 21:47:39,https://api.github.com/repos/openstack/swift/git/commits/b3a451c8328f034f2744ff733663760c15829ab1,b3a451c8328f034f2744ff733663760c15829ab1,merged with trunk
gholt,2011-06-17 01:03:59,https://api.github.com/repos/openstack/swift/git/commits/77b4f17279d6475314cfa933eb4041c3663ac56f,77b4f17279d6475314cfa933eb4041c3663ac56f,Fixed typo/bug with 20 instead of 0x20
gholt,2011-06-17 00:57:00,https://api.github.com/repos/openstack/swift/git/commits/082b324bc30155ed3716060c4fe1334dd43d345f,082b324bc30155ed3716060c4fe1334dd43d345f,Update to comply with XML 1.1: No NULLs in names allowed; control chars are converted to entities (ex: &#x4;)
gholt,2011-06-16 22:05:03,https://api.github.com/repos/openstack/swift/git/commits/1dca388deca63bf80abe0c495b7ce6f579447f9a,1dca388deca63bf80abe0c495b7ce6f579447f9a,Merge from trunk
gholt,2011-06-16 21:12:04,https://api.github.com/repos/openstack/swift/git/commits/fc68f824f1c41724dc138a3d2f0193fe8071d0c2,fc68f824f1c41724dc138a3d2f0193fe8071d0c2,"You can specify X-Newest: true on GETs and HEADs to indicate you want Swift to query all backend copies and return the newest version retrieved.
Object COPY requests now always copy the newest object they can find.
Object POSTs are implemented as COPYs now by default (you can revert to previous implementation with conf object_post_as_copy = false)
Account and container GETs and HEADs now shuffle the nodes they use to balance load."
dpgoetz,2011-06-16 19:12:19,https://api.github.com/repos/openstack/swift/git/commits/0f6239b328ab87325197675fbc1c67d79c5722ad,0f6239b328ab87325197675fbc1c67d79c5722ad,Fixing ratelimit tests
dpgoetz,2011-06-16 18:09:15,https://api.github.com/repos/openstack/swift/git/commits/8062d32c19c6b0f2a63d168ffb007f1b48592b07,8062d32c19c6b0f2a63d168ffb007f1b48592b07,fixing ratelimit tests
dpgoetz,2011-06-16 18:04:17,https://api.github.com/repos/openstack/swift/git/commits/105d199b4b86b137e932e126489ad75045d58054,105d199b4b86b137e932e126489ad75045d58054,fixing ratelimit tests
gholt,2011-06-16 01:37:43,https://api.github.com/repos/openstack/swift/git/commits/54d6b2d4c974e9790b98812fcdba3eef3358e71f,54d6b2d4c974e9790b98812fcdba3eef3358e71f,consync: Minor change to ignore 404 is there is some other error from another node
gholt,2011-06-16 01:31:51,https://api.github.com/repos/openstack/swift/git/commits/f9fb4c739ce14bf2c0dd0ca6cd2924a4e5d2c5a5,f9fb4c739ce14bf2c0dd0ca6cd2924a4e5d2c5a5,consync: Now queries all primary nodes for a put and uses the newest object if it is newer or equal to the object to sync
gholt,2011-06-16 00:59:55,https://api.github.com/repos/openstack/swift/git/commits/78d417dda72691c599121ad6b47dce226dc1bcb9,78d417dda72691c599121ad6b47dce226dc1bcb9,consync: More tests and slight refactor to be more testable
notmyname,2011-06-15 19:05:28,https://api.github.com/repos/openstack/swift/git/commits/65d79d18b58ebcc25eb2195f84ebb87338439b68,65d79d18b58ebcc25eb2195f84ebb87338439b68,merged with trunk
notmyname,2011-06-15 15:06:31,https://api.github.com/repos/openstack/swift/git/commits/5490c514fe084c7c439308dc6b6fd44b72bab69a,5490c514fe084c7c439308dc6b6fd44b72bab69a,removed slogging references from docs
gholt,2011-06-15 02:01:01,https://api.github.com/repos/openstack/swift/git/commits/6587fd914ec9b49314f64c316015841099b7ba06,6587fd914ec9b49314f64c316015841099b7ba06,consync: Some more tests and bugfixes.
gholt,2011-06-14 23:14:28,https://api.github.com/repos/openstack/swift/git/commits/599aedae95a01c117d818508b75a6ab84c5aa358,599aedae95a01c117d818508b75a6ab84c5aa358,Readded changes to bin/swift after merge from trunk
gholt,2011-06-14 23:13:47,https://api.github.com/repos/openstack/swift/git/commits/ba4f74d4fe7f9648381e4eb9121b53dcc73f20be,ba4f74d4fe7f9648381e4eb9121b53dcc73f20be,Merge from trunk
gholt,2011-06-14 23:13:37,https://api.github.com/repos/openstack/swift/git/commits/67c9d4d78f64931953afacd8ee8c16a5a35fb285,67c9d4d78f64931953afacd8ee8c16a5a35fb285,Removing bin/st in prep for merge from trunk
gholt,2011-06-14 22:20:23,https://api.github.com/repos/openstack/swift/git/commits/d2230e853dfa5719b11270ff71d0d0dd335401b8,d2230e853dfa5719b11270ff71d0d0dd335401b8,Merged from trunk
notmyname,2011-06-14 19:07:01,https://api.github.com/repos/openstack/swift/git/commits/e15b0732e579dfe791b6c90b9c298a444f89a61b,e15b0732e579dfe791b6c90b9c298a444f89a61b,bumped version to 1.4.2
notmyname,2011-06-14 16:39:30,https://api.github.com/repos/openstack/swift/git/commits/28f74380cafc542d0c1866276e1b54f4475293e7,28f74380cafc542d0c1866276e1b54f4475293e7,bumped version to 1.4.2
notmyname,2011-06-14 16:37:02,https://api.github.com/repos/openstack/swift/git/commits/9ab33970b58b8219245bfd89e2ad9442c0e94f17,9ab33970b58b8219245bfd89e2ad9442c0e94f17,updated changelog for 1.4.1
notmyname,2011-06-14 16:29:22,https://api.github.com/repos/openstack/swift/git/commits/c4f0b5561ae048a406c6bd3b4310d5795de5ae88,c4f0b5561ae048a406c6bd3b4310d5795de5ae88,updated changelog with 1.4.1 changes
notmyname,2011-06-14 16:17:15,https://api.github.com/repos/openstack/swift/git/commits/85260983ed94aa0186b3811e25bb27b9437e6ac5,85260983ed94aa0186b3811e25bb27b9437e6ac5,rename st to swift
notmyname,2011-06-14 16:04:06,https://api.github.com/repos/openstack/swift/git/commits/0eeeae664e0ff805d5e3c6ac7bdf4394cdc96d85,0eeeae664e0ff805d5e3c6ac7bdf4394cdc96d85,renamed st to swift
fujita,2011-06-14 03:11:25,https://api.github.com/repos/openstack/swift/git/commits/d75fc43e35a71beddea77168ae0179b1df840e3f,d75fc43e35a71beddea77168ae0179b1df840e3f,"fix posix_fadvise invalid argument error

off_t isn't always 64 bit. Let's use posix_fadvise64 instead."
gholt,2011-06-14 00:00:47,https://api.github.com/repos/openstack/swift/git/commits/b954b1d705b43340845b7b0f8f648114256dec49,b954b1d705b43340845b7b0f8f648114256dec49,Merged from trunk
gholt,2011-06-13 21:01:07,https://api.github.com/repos/openstack/swift/git/commits/04b0e824224d647953bd9a3114922ebe4e8d181f,04b0e824224d647953bd9a3114922ebe4e8d181f,Fixed account and container listings so they return with charset=utf-8 instead of utf8.
notmyname,2011-06-13 20:57:32,https://api.github.com/repos/openstack/swift/git/commits/5949217ce113623a890fdbbd361feba8777a2ff7,5949217ce113623a890fdbbd361feba8777a2ff7,removed basic slogging code
gholt,2011-06-13 20:51:06,https://api.github.com/repos/openstack/swift/git/commits/024df7c0f2ce43a8f8b9f8514d120ba4fa759ab3,024df7c0f2ce43a8f8b9f8514d120ba4fa759ab3,Merged from trunk
gholt,2011-06-13 20:40:06,https://api.github.com/repos/openstack/swift/git/commits/c36860df29b2eab7f314cedec6a7163f26605bfa,c36860df29b2eab7f314cedec6a7163f26605bfa,"Fixed so account GETs, HEADs, and POSTs autocreate the account when account_autocreate = true"
gholt,2011-06-11 04:57:04,https://api.github.com/repos/openstack/swift/git/commits/1a586323825ca681a7c6739bc6f6fd9131932a2c,1a586323825ca681a7c6739bc6f6fd9131932a2c,Fixed so account GETs and HEADs autocreate the account when account_autocreate = true
gholt,2011-06-10 22:27:05,https://api.github.com/repos/openstack/swift/git/commits/156b6e0c92494c21707e79c8962a64f1a246ddb1,156b6e0c92494c21707e79c8962a64f1a246ddb1,Added account_autocreate mode where authorized requests to accounts that don't yet exist within Swift will cause those accounts to be automatically created. Also did a small refactor surrounding swift.common.utils.TRUE_VALUES.
gholt,2011-06-10 19:33:53,https://api.github.com/repos/openstack/swift/git/commits/7b6b85aef818e64875d510edc72ab78a58e41b97,7b6b85aef818e64875d510edc72ab78a58e41b97,Update staticweb generated test data to match utf-8 update
gholt,2011-06-10 18:50:07,https://api.github.com/repos/openstack/swift/git/commits/3fc5166ff16fe0c8e4bc5cb675c3ec51be3986e1,3fc5166ff16fe0c8e4bc5cb675c3ec51be3986e1,Merged from trunk
gholt,2011-06-10 18:49:41,https://api.github.com/repos/openstack/swift/git/commits/bdd2d9968081e2ff3d30340cb61cac5079603f94,bdd2d9968081e2ff3d30340cb61cac5079603f94,Updated functests to test for utf-8
dpgoetz,2011-06-10 18:42:08,https://api.github.com/repos/openstack/swift/git/commits/db12ee2fc9453fa3e69c5ea04f511afb59b4357a,db12ee2fc9453fa3e69c5ea04f511afb59b4357a,Ability to collect whether user metadata keys are set in container dbs.  Keys to be collected are configurable.
gholt,2011-06-10 18:36:02,https://api.github.com/repos/openstack/swift/git/commits/f68232bf89e0940ce7cac3bede38b4b9dc57f12b,f68232bf89e0940ce7cac3bede38b4b9dc57f12b,Fixed account and container listings to return with charset=utf-8 instead of charset=utf8
gholt,2011-06-10 16:56:53,https://api.github.com/repos/openstack/swift/git/commits/818c4faa7368d0d25250e855173fa4016544bf1f,818c4faa7368d0d25250e855173fa4016544bf1f,Made failed account autocreate raise exception to cause 5xx.
dpgoetz,2011-06-10 16:47:13,https://api.github.com/repos/openstack/swift/git/commits/a18acc554b3ce2562e170c500c1ef48b150b47a4,a18acc554b3ce2562e170c500c1ef48b150b47a4,merging to trunk
gholt,2011-06-10 16:33:12,https://api.github.com/repos/openstack/swift/git/commits/262caa90c8184e03ecb9aaf9f7f6eac4cc5efeb9,262caa90c8184e03ecb9aaf9f7f6eac4cc5efeb9,Merged from trunk
gholt,2011-06-10 16:04:15,https://api.github.com/repos/openstack/swift/git/commits/8c191aebab3b56af1fa7124dc90a9635fe8f58a6,8c191aebab3b56af1fa7124dc90a9635fe8f58a6,Merged from trunk
dpgoetz,2011-06-10 15:59:34,https://api.github.com/repos/openstack/swift/git/commits/c5aafe4992efea8c95cc09e05fdb89288eafb6bb,c5aafe4992efea8c95cc09e05fdb89288eafb6bb,handling no metadata column
gholt,2011-06-10 15:55:25,https://api.github.com/repos/openstack/swift/git/commits/bb48838404b887063d86c4f480c67b274c57f788,bb48838404b887063d86c4f480c67b274c57f788,Adding some tests
gholt,2011-06-09 21:41:21,https://api.github.com/repos/openstack/swift/git/commits/04e9645fcaaeacda759f3058e922e635df923d8f,04e9645fcaaeacda759f3058e922e635df923d8f,Merged from trunk
gholt,2011-06-09 21:30:14,https://api.github.com/repos/openstack/swift/git/commits/56bafed1315f8a8f856e6ed8b6da74b82f0524ed,56bafed1315f8a8f856e6ed8b6da74b82f0524ed,Merged from trunk
gholt,2011-06-09 21:17:08,https://api.github.com/repos/openstack/swift/git/commits/e32c146e27c68204591d1bb2ee253fc5f0003927,e32c146e27c68204591d1bb2ee253fc5f0003927,"In light of the upcoming Keystone auth service, which should become the standard OpenStack auth service, Swauth will need to move to its own project. Because we don't want the Swift project to require Keystone (or Swauth or any other auth service for that matter) we need a ""placeholder"". In this proposal I'm adding a TempAuth to fill our auth testing needs within Swift and removing Swauth.

To quickly change from Swauth on a standard SAIO install, change swauth in your pipeline to tempauth and add the following section:

[filter:tempauth]
use = egg:swift#tempauth
user_test_tester = testing .admin
user_test2_tester2 = testing2 .admin
user_test_tester3 = testing3
user_system_root = testpass .admin .reseller_admin"
gholt,2011-06-09 21:02:30,https://api.github.com/repos/openstack/swift/git/commits/61804a37603efc48970ae15e6b9030b330d14382,61804a37603efc48970ae15e6b9030b330d14382,tempauth: Check and make all handled accounts
dpgoetz,2011-06-08 16:44:03,https://api.github.com/repos/openstack/swift/git/commits/aa91a5a6dab71c7d642645ce278b9abf364471d8,aa91a5a6dab71c7d642645ce278b9abf364471d8,clean headers in unit tests...
dpgoetz,2011-06-08 16:42:18,https://api.github.com/repos/openstack/swift/git/commits/c5aeca412c81ea3c618ce945277b119254c01415,c5aeca412c81ea3c618ce945277b119254c01415,clean headers
dpgoetz,2011-06-08 16:24:44,https://api.github.com/repos/openstack/swift/git/commits/625c1452006f1d48f3ce77f50c224ff92df277cd,625c1452006f1d48f3ce77f50c224ff92df277cd,pep8
dpgoetz,2011-06-08 16:19:55,https://api.github.com/repos/openstack/swift/git/commits/533946c2c8be9db55c6b5728c016b2c7495ec6c6,533946c2c8be9db55c6b5728c016b2c7495ec6c6,fix unittest
dpgoetz,2011-06-08 15:55:14,https://api.github.com/repos/openstack/swift/git/commits/68e5719a81374e38ef866330a5b93e32b7efa218,68e5719a81374e38ef866330a5b93e32b7efa218,fixing case thing and adding docs
gholt,2011-06-08 04:29:24,https://api.github.com/repos/openstack/swift/git/commits/41fcf63241f38c548c81877904e8651238faa8f5,41fcf63241f38c548c81877904e8651238faa8f5,Changed post_as_copy to object_post_as_copy
gholt,2011-06-08 04:19:34,https://api.github.com/repos/openstack/swift/git/commits/7c9e542c020e3ad846fa8b28385783e04daa48ce,7c9e542c020e3ad846fa8b28385783e04daa48ce,Implemented object POST as COPY
gholt,2011-06-08 02:26:16,https://api.github.com/repos/openstack/swift/git/commits/37fbf5ab77ecb2a3758cd8889bf34e1384b8d240,37fbf5ab77ecb2a3758cd8889bf34e1384b8d240,Object COPY requests now always copy the newest object they can find.
dpgoetz,2011-06-08 00:32:59,https://api.github.com/repos/openstack/swift/git/commits/34e121200ab253bbe79a72066baf1377b4795996,34e121200ab253bbe79a72066baf1377b4795996,"Adding the collection of specified metadata keys, unit tests working"
gholt,2011-06-07 23:19:48,https://api.github.com/repos/openstack/swift/git/commits/6c50e9b3a1574b5b51ae39639637aee279499d6c,6c50e9b3a1574b5b51ae39639637aee279499d6c,You can specify X-Newest: true on GETs and HEADs to indicate you want Swift to query all backend copies and return the newest version retrieved.
gholt,2011-06-06 16:12:54,https://api.github.com/repos/openstack/swift/git/commits/145651e04f741fa46568807c0f7fc18aeff6400f,145651e04f741fa46568807c0f7fc18aeff6400f,Updated container-server.conf-sample
gholt,2011-06-05 23:44:39,https://api.github.com/repos/openstack/swift/git/commits/e34385f516b6b581695dfad754d2907028e7adeb,e34385f516b6b581695dfad754d2907028e7adeb,Only autocreate accounts for certain operations
gholt,2011-06-05 23:22:35,https://api.github.com/repos/openstack/swift/git/commits/c3cef9207b9477f604bedc5780fae60210a60bc5,c3cef9207b9477f604bedc5780fae60210a60bc5,Adding account_autocreate mode and refactoring TRUE_VALUES
gholt,2011-06-03 02:39:31,https://api.github.com/repos/openstack/swift/git/commits/bbeed736c1b31a65f28f9f390a51fbe6f895a56b,bbeed736c1b31a65f28f9f390a51fbe6f895a56b,st: resync with client.py changes
gholt,2011-06-03 02:28:21,https://api.github.com/repos/openstack/swift/git/commits/7ac6baf6d124aa9b876f74c2418e05704c62036c,7ac6baf6d124aa9b876f74c2418e05704c62036c,container-sync: Support HTTP proxy.
gholt,2011-06-03 00:11:32,https://api.github.com/repos/openstack/swift/git/commits/b4221114c5fa29d4a4b050fdd37c4337d4a4d0de,b4221114c5fa29d4a4b050fdd37c4337d4a4d0de,Merged with deswauth
gholt,2011-06-01 23:01:04,https://api.github.com/repos/openstack/swift/git/commits/419184c8544a0049e223e61498b105462d826f9b,419184c8544a0049e223e61498b105462d826f9b,Merge from trunk
gholt,2011-06-01 22:12:41,https://api.github.com/repos/openstack/swift/git/commits/1a88db545a20c60b1548b906ce5bb2ff87aebf45,1a88db545a20c60b1548b906ce5bb2ff87aebf45,Made probe tests more resilent against timing issues.
gholt,2011-06-01 20:45:26,https://api.github.com/repos/openstack/swift/git/commits/69dd0a3f468ed6af91cddeff57d0e0d34ce085cb,69dd0a3f468ed6af91cddeff57d0e0d34ce085cb,Merged from trunk
gholt,2011-06-01 20:43:10,https://api.github.com/repos/openstack/swift/git/commits/ce710a54a587178f65abc62e2a29ce58ba6da01e,ce710a54a587178f65abc62e2a29ce58ba6da01e,Merged with trunk
gholt,2011-06-01 19:52:21,https://api.github.com/repos/openstack/swift/git/commits/5d7e099596be2904274583c6498fa5ecce65e6e1,5d7e099596be2904274583c6498fa5ecce65e6e1,replicator: Log timings for replicator-rpc sync method if debug mode is on.
gholt,2011-06-01 15:19:12,https://api.github.com/repos/openstack/swift/git/commits/63d31b814bb137082e2f3fd1babd29a09a8c56d2,63d31b814bb137082e2f3fd1babd29a09a8c56d2,db_replicator: Made hardcoded 10 into DEBUG_TIMINGS_THRESHOLD.
gholt,2011-06-01 15:04:43,https://api.github.com/repos/openstack/swift/git/commits/b9f9619bbce3013aab118eeb03aa816036295ce2,b9f9619bbce3013aab118eeb03aa816036295ce2,db_replicator: Made hardcoded 10 into debug_timings_threshold.
gholt,2011-05-31 20:37:51,https://api.github.com/repos/openstack/swift/git/commits/e826a50f8d4063617bda40d70c5981cd4ca66436,e826a50f8d4063617bda40d70c5981cd4ca66436,Merged from trunk
gholt,2011-05-31 20:37:39,https://api.github.com/repos/openstack/swift/git/commits/665c38ecfc30c6ffb69f05796ebec4d100e13260,665c38ecfc30c6ffb69f05796ebec4d100e13260,replicator: removed extraneous comment
gholt,2011-05-31 18:09:53,https://api.github.com/repos/openstack/swift/git/commits/288ccb1703fda77fd9ac1dace539b02abf863fec,288ccb1703fda77fd9ac1dace539b02abf863fec,Merged from trunk
gholt,2011-05-27 23:31:58,https://api.github.com/repos/openstack/swift/git/commits/d2eaded54187c2f8c80a8683dafc751a54d75596,d2eaded54187c2f8c80a8683dafc751a54d75596,replicator: Log timings for replicator-rpc sync method if debug mode is on.
ttx,2011-05-27 14:27:03,https://api.github.com/repos/openstack/swift/git/commits/b04f3bd19b508140b0b4feee46d590b61da46bed,b04f3bd19b508140b0b4feee46d590b61da46bed,"Switch Swift trunk to 1.4.1, now that the 1.4.0 release branch is branched out."
notmyname,2011-05-27 13:57:01,https://api.github.com/repos/openstack/swift/git/commits/de49be3929d504974286c20b615522a202d607c6,de49be3929d504974286c20b615522a202d607c6,changelog for 1.4.0 release
ttx,2011-05-27 13:53:46,https://api.github.com/repos/openstack/swift/git/commits/5aa809aa36bbc32610b9b7998b8606bbfc65508a,5aa809aa36bbc32610b9b7998b8606bbfc65508a,"Switch trunk to 1.4.1, now that the 1.4.0 release branch is branched out"
notmyname,2011-05-27 13:48:41,https://api.github.com/repos/openstack/swift/git/commits/4f911e4e266619c42fb67a99d88827156b786c1c,4f911e4e266619c42fb67a99d88827156b786c1c,updated changelog for 1.4.0
sorenh,2011-05-27 13:32:07,https://api.github.com/repos/openstack/swift/git/commits/a3145538553c002130c4910f19d01ac996bc70b6,a3145538553c002130c4910f19d01ac996bc70b6,"Add a __canonical_version__ attribute to the swift module. This is only the numbered part of the version string, no ""-dev"" or similar suffixes.

Add a couple of unit tests to make sure __version__ and __canonical_version__ are generated correctly and to ensure __canonical_version__ never accidentally has anything other than numbers and points in it."
sorenh,2011-05-26 14:27:46,https://api.github.com/repos/openstack/swift/git/commits/b7cc7be704e9cfbc339614d0ee4f82bab4faf927,b7cc7be704e9cfbc339614d0ee4f82bab4faf927,Leave it to a later patch to make this final.
sorenh,2011-05-26 14:27:15,https://api.github.com/repos/openstack/swift/git/commits/6dfdcc8f5c19fcfd5321fd3b624b73a32f705394,6dfdcc8f5c19fcfd5321fd3b624b73a32f705394,pep8 fixes
sorenh,2011-05-26 12:04:39,https://api.github.com/repos/openstack/swift/git/commits/d95dbea1cd948721a75d45fde6665f06c6570511,d95dbea1cd948721a75d45fde6665f06c6570511,Prematurely bumped to 1.4.1. Setting back to 1.4.0 so that this can land on the milestone branch as well and then we can bump trunk to 1.4.1.
sorenh,2011-05-26 09:25:39,https://api.github.com/repos/openstack/swift/git/commits/2d1274c4974c7231a00cd835aedb31b7a349e710,2d1274c4974c7231a00cd835aedb31b7a349e710,"Add a __canonical_version__ attribute to the swift module. This is only the numbered part of the version string, no ""-dev"" or similar suffixes.

Add a couple of unit tests to make sure __version__ and __canonical_version__ are generated correctly and to ensure __canonical_version__ never accidentally has anything other than numbers and points in it."
gholt,2011-05-26 02:24:12,https://api.github.com/repos/openstack/swift/git/commits/f68b6354e28f840d4a07f633888751c782267662,f68b6354e28f840d4a07f633888751c782267662,Renaming TestAuth to TempAuth because nose hates anything with the word test in it.
gholt,2011-05-26 02:17:42,https://api.github.com/repos/openstack/swift/git/commits/3ee4a0110067ce256a27802c6917f10d87bc3ade,3ee4a0110067ce256a27802c6917f10d87bc3ade,Remove swauth; update references from swauth to testauth.
gholt,2011-05-26 01:19:03,https://api.github.com/repos/openstack/swift/git/commits/b24b063552669e089d64463f29dd9ff8b129e903,b24b063552669e089d64463f29dd9ff8b129e903,Created testauth WSGI middleware to replace Swauth as development auth service.
dpgoetz,2011-05-24 22:12:02,https://api.github.com/repos/openstack/swift/git/commits/e3b6de6c08fe2d57e8ba227b7e4f357f2db1d8a1,e3b6de6c08fe2d57e8ba227b7e4f357f2db1d8a1,"For stats uploader, allow override regex for source_filename_pattern and new_log_cutoff."
dpgoetz,2011-05-24 20:51:07,https://api.github.com/repos/openstack/swift/git/commits/1dd4073463ee012590e5f2f09036e3ed76f8da7f,1dd4073463ee012590e5f2f09036e3ed76f8da7f,allow override new_log_cutoff
dpgoetz,2011-05-24 20:23:12,https://api.github.com/repos/openstack/swift/git/commits/ccba2046cb25d42c3979d4fab4c7936ae65b818a,ccba2046cb25d42c3979d4fab4c7936ae65b818a,allow override regex for source_filename_pattern
dpgoetz,2011-05-24 15:32:26,https://api.github.com/repos/openstack/swift/git/commits/97e7120559056d940884b68d51dc1c55de15a04a,97e7120559056d940884b68d51dc1c55de15a04a,Changing auditor logging to show zero byte files rate and amount of time doing list dirs verses actual auditing.
gholt,2011-05-23 20:22:23,https://api.github.com/repos/openstack/swift/git/commits/7c19657d1df78f490228c613a04a360e862bc121,7c19657d1df78f490228c613a04a360e862bc121,swift-ring-builder: Added list_parts command which shows common partitions for a given list of devices.
dpgoetz,2011-05-23 20:20:09,https://api.github.com/repos/openstack/swift/git/commits/d89efc1fe4ec3d5984c7a44359e7b1e60c37db47,d89efc1fe4ec3d5984c7a44359e7b1e60c37db47,adding total quarantine and error to logs
dpgoetz,2011-05-23 19:08:38,https://api.github.com/repos/openstack/swift/git/commits/093833954f993439e066205de178647d6a7525e1,093833954f993439e066205de178647d6a7525e1,Changing auditor log messages
gholt,2011-05-20 16:22:21,https://api.github.com/repos/openstack/swift/git/commits/6889b4dbf3e5199b1e2b99ba20c3fc63c3f84951,6889b4dbf3e5199b1e2b99ba20c3fc63c3f84951,"client.py: Will retry on 408s
client.py: Will treat empty contents as resettable
st: Updated copy of client.py.
st: No longer aborts everything on one error.
st: Prints when it had to retry.
st: Prints ClientExceptions without the full stack trace.
st: Aborts manifest creation if segments couldn't be uploaded."
gholt,2011-05-19 14:48:15,https://api.github.com/repos/openstack/swift/git/commits/06e94e10fcdcb5db2ebb802e1cd2113f62d3cc30,06e94e10fcdcb5db2ebb802e1cd2113f62d3cc30,st: Suppress a few more stack traces
annabellebertooch,2011-05-18 15:57:20,https://api.github.com/repos/openstack/swift/git/commits/32be66164dd2d179b1c5b4b13f825c5d1e379eb9,32be66164dd2d179b1c5b4b13f825c5d1e379eb9,Editing the install docs based on testing in the internal Swift training course this week.
dpgoetz,2011-05-18 15:48:17,https://api.github.com/repos/openstack/swift/git/commits/bdfe38917d3995358f5c746be9cbbbda8880e302,bdfe38917d3995358f5c746be9cbbbda8880e302,"Adding container stats collector, unit tests, and refactoring some of the stats code.  There will have to be changes to both the swift and rackswift conf files before this can be released.  Please DO NOT approve this branch for merge until glange's stats stuff is all ready to go.  gracias."
annabellebertooch,2011-05-18 15:26:52,https://api.github.com/repos/openstack/swift/git/commits/857d6e2f870ecf2a7120bf13b8481f3491c6c381,857d6e2f870ecf2a7120bf13b8481f3491c6c381,Made bzr init-repo swift step non-optional
gholt,2011-05-18 15:11:08,https://api.github.com/repos/openstack/swift/git/commits/2d3f40919015d28aab907bc8dc19f28d44ba5e43,2d3f40919015d28aab907bc8dc19f28d44ba5e43,swift-ring-builder: Updated help for list_parts
annabellebertooch,2011-05-18 03:50:44,https://api.github.com/repos/openstack/swift/git/commits/5804669c254a7039916f89e19939637a4f7bccc2,5804669c254a7039916f89e19939637a4f7bccc2,Changing optional bzr steps to be more precise
gholt,2011-05-18 00:13:59,https://api.github.com/repos/openstack/swift/git/commits/72f04d64fd8d51862cae9e04a5228b5de715f8df,72f04d64fd8d51862cae9e04a5228b5de715f8df,Merged from trunk
gholt,2011-05-18 00:07:44,https://api.github.com/repos/openstack/swift/git/commits/529b8a5956109e0b4eb235570f1d0c4ab78c4e1f,529b8a5956109e0b4eb235570f1d0c4ab78c4e1f,Merged from trunk
redbo,2011-05-17 22:26:45,https://api.github.com/repos/openstack/swift/git/commits/5bf39a4b8ed6522f70eee6797aa7b62156a74932,5bf39a4b8ed6522f70eee6797aa7b62156a74932,"Use bracketed notation for ip literals in rsync calls, so compressed ipv6 literals work."
dpgoetz,2011-05-17 19:23:11,https://api.github.com/repos/openstack/swift/git/commits/098552728e14eb6c04a4acb48c4e811cea7d294e,098552728e14eb6c04a4acb48c4e811cea7d294e,Adding full path to the stats cron jobs.
gholt,2011-05-17 16:07:38,https://api.github.com/repos/openstack/swift/git/commits/7e123ccf5c3157bea3f383c6e47beba103162582,7e123ccf5c3157bea3f383c6e47beba103162582,Merged from trunk
gholt,2011-05-17 16:06:10,https://api.github.com/repos/openstack/swift/git/commits/923efb8d7c1b80b694143e90078a3899ca04489b,923efb8d7c1b80b694143e90078a3899ca04489b,Merged from trunk
gholt,2011-05-17 15:51:44,https://api.github.com/repos/openstack/swift/git/commits/2129fda9782c377b9b44dacf5e614c8d422a6b0a,2129fda9782c377b9b44dacf5e614c8d422a6b0a,Change the CHANGELOG; now we'll only change it as we cut a release.
gholt,2011-05-17 15:29:33,https://api.github.com/repos/openstack/swift/git/commits/dc96419348e3dc74fb814e7afa9d980de9487863,dc96419348e3dc74fb814e7afa9d980de9487863,Change the CHANGELOG; now we'll only change it as we cut a release.
annabellebertooch,2011-05-17 03:59:57,https://api.github.com/repos/openstack/swift/git/commits/6a54cb529ca689103c9081c26ce9bf662a8ec9ac,6a54cb529ca689103c9081c26ce9bf662a8ec9ac,Edits to multinode install after testing in internal training class
gholt,2011-05-16 23:22:17,https://api.github.com/repos/openstack/swift/git/commits/c286231a9d30ec7b6815361b454822f1d3447cbb,c286231a9d30ec7b6815361b454822f1d3447cbb,Merged from trunk
gholt,2011-05-16 23:13:39,https://api.github.com/repos/openstack/swift/git/commits/a4d4ab69a57ea63de82ed8827a78d12aa0856d73,a4d4ab69a57ea63de82ed8827a78d12aa0856d73,Merged from trunk
gholt,2011-05-16 20:01:59,https://api.github.com/repos/openstack/swift/git/commits/65b71c59be9543cbdb1f217e32bd794733a9e5e0,65b71c59be9543cbdb1f217e32bd794733a9e5e0,Fixed Python 2.7 compatibility problem
gholt,2011-05-14 02:31:47,https://api.github.com/repos/openstack/swift/git/commits/6a1327cad0157a2bc796ffc68e51abd80268372c,6a1327cad0157a2bc796ffc68e51abd80268372c,Updated st's copy of client.py; st no longer aborts everything on one error; st prints when it had to retry; st prints ClientExceptions without the full stack trace; st aborts manifest creation if segments couldn't be uploaded; client.py will retry on 408s; client.py will treat empty contents as resettable
redbo,2011-05-13 02:41:37,https://api.github.com/repos/openstack/swift/git/commits/dc213d9746bc9976c38217d6bfa6ab20654dcd34,dc213d9746bc9976c38217d6bfa6ab20654dcd34,update unit tests
gholt,2011-05-12 22:54:54,https://api.github.com/repos/openstack/swift/git/commits/d7a9a5120160d64345f0ce4b42f2bf78306025d5,d7a9a5120160d64345f0ce4b42f2bf78306025d5,Fixed unit test not restoring things to prepatched state
gholt,2011-05-12 22:17:25,https://api.github.com/repos/openstack/swift/git/commits/4579e257d398600a7d77614f0bf0a956b76eec12,4579e257d398600a7d77614f0bf0a956b76eec12,Merged from trunk
gholt,2011-05-12 22:04:39,https://api.github.com/repos/openstack/swift/git/commits/4ef6644e26f23b0f8c68c4316d899c310081e228,4ef6644e26f23b0f8c68c4316d899c310081e228,Fixed Python 2.7 compatibility problem
dpgoetz,2011-05-12 21:24:51,https://api.github.com/repos/openstack/swift/git/commits/bc894f9efb9bd50a2d2a87fe28a00532dbb7d341,bc894f9efb9bd50a2d2a87fe28a00532dbb7d341,update with trunk
notmyname,2011-05-12 20:51:44,https://api.github.com/repos/openstack/swift/git/commits/00e81e256cb375891b7648675c1e4f1b0c8a2d6b,00e81e256cb375891b7648675c1e4f1b0c8a2d6b,added transaction id header to every response
notmyname,2011-05-12 19:34:47,https://api.github.com/repos/openstack/swift/git/commits/2e98b50a809feb58302fe3bf3573fd3f8f9520b2,2e98b50a809feb58302fe3bf3573fd3f8f9520b2,merged with trunk
gholt,2011-05-12 19:26:44,https://api.github.com/repos/openstack/swift/git/commits/e600a54fec279768dbc5acd8388654de7946f9c8,e600a54fec279768dbc5acd8388654de7946f9c8,Rename swift-stats-* to swift-dispersion-* to avoid confusion with log stats stuff
redbo,2011-05-12 19:08:29,https://api.github.com/repos/openstack/swift/git/commits/77bf1ee356ff3f045df5e05971cb1ccb77abdd5e,77bf1ee356ff3f045df5e05971cb1ccb77abdd5e,fix ipv6 literals in rsync
redbo,2011-05-12 19:07:48,https://api.github.com/repos/openstack/swift/git/commits/ef1e7072902e2998e9f2d0cd4ca87cb273adf742,ef1e7072902e2998e9f2d0cd4ca87cb273adf742,fix ipv6 literals in rsync
notmyname,2011-05-12 16:13:08,https://api.github.com/repos/openstack/swift/git/commits/6b0e27adca53fff005beb802fece03356ce9f641,6b0e27adca53fff005beb802fece03356ce9f641,added a CHANGELOG
notmyname,2011-05-12 15:57:35,https://api.github.com/repos/openstack/swift/git/commits/990700aec1e1b0520cf05b75740474c99d166763,990700aec1e1b0520cf05b75740474c99d166763,reverted unneeded changes in proxy server
notmyname,2011-05-12 15:48:46,https://api.github.com/repos/openstack/swift/git/commits/119ad8cff56de42ef44c298d6b41a4dcd39e4e6e,119ad8cff56de42ef44c298d6b41a4dcd39e4e6e,fixed error with setting the tx trans_id prefix
gholt,2011-05-12 01:10:16,https://api.github.com/repos/openstack/swift/git/commits/1d866acdb1941e679964f51c1dedf2981b3fb025,1d866acdb1941e679964f51c1dedf2981b3fb025,PEP8 fixes
gholt,2011-05-12 01:07:57,https://api.github.com/repos/openstack/swift/git/commits/a062abd59396c2f90df023f02b953587026d46b6,a062abd59396c2f90df023f02b953587026d46b6,PEP8 fix
gholt,2011-05-12 01:01:38,https://api.github.com/repos/openstack/swift/git/commits/97ba935ec35b5d67eb7c87089b3c0a9f14423a7e,97ba935ec35b5d67eb7c87089b3c0a9f14423a7e,Added list_parts command to swift-ring-builder which lists common partitions for a list of devices.
gholt,2011-05-12 00:14:02,https://api.github.com/repos/openstack/swift/git/commits/d0d98ba96ed2ad171ab790fd0c2058ed3056804b,d0d98ba96ed2ad171ab790fd0c2058ed3056804b,Updated to use standard shebang and explicitly flush output; added deprecation warning to stats.conf
dpgoetz,2011-05-12 00:03:58,https://api.github.com/repos/openstack/swift/git/commits/a0bccc94f5583419948827e7d50604c416c3ad7d,a0bccc94f5583419948827e7d50604c416c3ad7d,pep8
dpgoetz,2011-05-12 00:01:24,https://api.github.com/repos/openstack/swift/git/commits/84981953b2c6635e06a8f10a81516379bd648733,84981953b2c6635e06a8f10a81516379bd648733,adding processable flag and fix unicode thing
dpgoetz,2011-05-11 20:33:22,https://api.github.com/repos/openstack/swift/git/commits/84bd0f712000e5ceac12bac6b495d189fea0b4f8,84bd0f712000e5ceac12bac6b495d189fea0b4f8,pep8
dpgoetz,2011-05-11 20:28:24,https://api.github.com/repos/openstack/swift/git/commits/f079a5ece1719c5864717109614708cd603e2963,f079a5ece1719c5864717109614708cd603e2963,typo
dpgoetz,2011-05-11 20:02:39,https://api.github.com/repos/openstack/swift/git/commits/91a42f35768baebbfe28f7ec4196ffdad731e61f,91a42f35768baebbfe28f7ec4196ffdad731e61f,rename files and mas unit tests
gholt,2011-05-11 14:59:56,https://api.github.com/repos/openstack/swift/git/commits/88d2f7be450cff712e714853d213fd272796a09f,88d2f7be450cff712e714853d213fd272796a09f,Merged from trunk
gholt,2011-05-11 02:51:31,https://api.github.com/repos/openstack/swift/git/commits/81c6ca0b2cef276252c80b8189802742ec5a30de,81c6ca0b2cef276252c80b8189802742ec5a30de,Merged from trunk
dpgoetz,2011-05-10 22:53:21,https://api.github.com/repos/openstack/swift/git/commits/a1321fb17d578b1098ecd4f82f5759eedfae1e27,a1321fb17d578b1098ecd4f82f5759eedfae1e27,stats conf changes
dpgoetz,2011-05-10 22:36:01,https://api.github.com/repos/openstack/swift/git/commits/b875825e0f27d5b82b60fa6027ef479b24749670,b875825e0f27d5b82b60fa6027ef479b24749670,adding unit tests and conf changes
gholt,2011-05-09 22:18:17,https://api.github.com/repos/openstack/swift/git/commits/8bf12ddaad1aee6db8c6ab94c79f18df7a3c7fe5,8bf12ddaad1aee6db8c6ab94c79f18df7a3c7fe5,Merge from trunk
dpgoetz,2011-05-09 21:20:06,https://api.github.com/repos/openstack/swift/git/commits/9e4be4a1110d0aa7e7e0e257e8069a4127788acc,9e4be4a1110d0aa7e7e0e257e8069a4127788acc,merge to trunk
dpgoetz,2011-05-09 21:18:20,https://api.github.com/repos/openstack/swift/git/commits/e35f8bf5a75b47cc7033bef9d94dce23563f329c,e35f8bf5a75b47cc7033bef9d94dce23563f329c,replace file and unit tests are working
notmyname,2011-05-09 20:21:34,https://api.github.com/repos/openstack/swift/git/commits/4d3c76ab851148e85be8cd5f48120eabd957ecab,4d3c76ab851148e85be8cd5f48120eabd957ecab,moved transaction id to catch errors middleware
annabellebertooch,2011-05-07 18:32:54,https://api.github.com/repos/openstack/swift/git/commits/68f3ff665ee0344c9da6bd7a6dfe08727bcdffba,68f3ff665ee0344c9da6bd7a6dfe08727bcdffba,Added python-netifaces to the debian packaging page in addition to the version and link changes in the sidebar.
notmyname,2011-05-06 14:50:06,https://api.github.com/repos/openstack/swift/git/commits/26b5ff12bf55e745a07468ea66b85f589786b07a,26b5ff12bf55e745a07468ea66b85f589786b07a,added transaction id header to every response
creiht,2011-05-05 21:07:53,https://api.github.com/repos/openstack/swift/git/commits/6d0f925f0a647ced22a40645e11df21e535c5c35,6d0f925f0a647ced22a40645e11df21e535c5c35,Fixes issue of swift3 middleware not working correctly with '/' in object names
creiht,2011-05-05 21:02:08,https://api.github.com/repos/openstack/swift/git/commits/007af8f35c7cb563e71e462a8f1ba0ced1b35299,007af8f35c7cb563e71e462a8f1ba0ced1b35299,removed test that was incorrectly testing for a bad path
creiht,2011-05-05 20:48:22,https://api.github.com/repos/openstack/swift/git/commits/d33b791fb509192cfb414e6cf90c4a943b315bd5,d33b791fb509192cfb414e6cf90c4a943b315bd5,Fixed issue of swift3 middleware not accepting '/' in object names
dpgoetz,2011-05-05 01:47:56,https://api.github.com/repos/openstack/swift/git/commits/1ff91eabcdeb001647d1b0dbdd5da5686f5c94b0,1ff91eabcdeb001647d1b0dbdd5da5686f5c94b0,refactor for dry
annabellebertooch,2011-04-29 01:17:55,https://api.github.com/repos/openstack/swift/git/commits/8218a292e83d89d5af3e0d982a02d7df695b25b2,8218a292e83d89d5af3e0d982a02d7df695b25b2,Adds python-netifaces to the list
annabellebertooch,2011-04-27 13:41:07,https://api.github.com/repos/openstack/swift/git/commits/bb65f276386dd28c84d391beb8799c93621da91f,bb65f276386dd28c84d391beb8799c93621da91f,Changing version links to 1.2 and 1.3 instead of 1.1 and 1.2
greglange,2011-04-21 20:52:49,https://api.github.com/repos/openstack/swift/git/commits/df0a61a649a6b193c0a7b606d1aa6e5c3cb3638b,df0a61a649a6b193c0a7b606d1aa6e5c3cb3638b,only latest async pending is now sent
sasimpson,2011-04-21 20:22:48,https://api.github.com/repos/openstack/swift/git/commits/2a99355eb85910b3c69962bfc62c78aa9d9293b6,2a99355eb85910b3c69962bfc62c78aa9d9293b6,added the Accept-Ranges header to GET and HEAD requests.
sasimpson,2011-04-21 20:09:04,https://api.github.com/repos/openstack/swift/git/commits/995bd5822d84ef39b5a98bc46f985dc2b58a3b04,995bd5822d84ef39b5a98bc46f985dc2b58a3b04,fixing unit test
sasimpson,2011-04-21 18:51:09,https://api.github.com/repos/openstack/swift/git/commits/9014cb81a83820357ef3d8205e0323638ba594b3,9014cb81a83820357ef3d8205e0323638ba594b3,pep8 the file
greglange,2011-04-21 15:18:34,https://api.github.com/repos/openstack/swift/git/commits/b2f42cdce83e7dcc9e36b98a3a4d12be35077ec2,b2f42cdce83e7dcc9e36b98a3a4d12be35077ec2,got rid of use of set to keep track of obj hashes
gholt,2011-04-20 23:57:48,https://api.github.com/repos/openstack/swift/git/commits/425948aa224f3d3988d0a1e63580efe0431054dc,425948aa224f3d3988d0a1e63580efe0431054dc,Fix for Object replicator breaks when running object replicator with no objects on the server
gholt,2011-04-20 22:43:11,https://api.github.com/repos/openstack/swift/git/commits/03aa94680e9b8ed4205425edc79c15778bdbae20,03aa94680e9b8ed4205425edc79c15778bdbae20,Fix for Object replicator breaks when running object replicator with no objects on the server
sasimpson,2011-04-20 22:10:02,https://api.github.com/repos/openstack/swift/git/commits/22f88ce4af7061823100bb715e643695a3676c37,22f88ce4af7061823100bb715e643695a3676c37,adding Accept-Ranges: bytes header to HEAD and GET requests.
greglange,2011-04-20 19:54:28,https://api.github.com/repos/openstack/swift/git/commits/71b076eb59f0634cb6f9851864b6e0bfd2df2c03,71b076eb59f0634cb6f9851864b6e0bfd2df2c03,only latest async pending is now sent
dpgoetz,2011-04-20 03:37:49,https://api.github.com/repos/openstack/swift/git/commits/8137aa6ed3a59bf36c101d45528ab0dc5999b505,8137aa6ed3a59bf36c101d45528ab0dc5999b505,Allow for double quarantining of dbs.  Just appends a uuid if there's naming conflict.
notmyname,2011-04-20 03:27:48,https://api.github.com/repos/openstack/swift/git/commits/6b20979d30c8167b921da0e0a423cc12299355de,6b20979d30c8167b921da0e0a423cc12299355de,allowed_headers are returned from a GET but not HEAD
notmyname,2011-04-19 20:58:37,https://api.github.com/repos/openstack/swift/git/commits/00774e360d7510bcac5713219d1a014670a1fc4e,00774e360d7510bcac5713219d1a014670a1fc4e,fixed HEAD requests with allowed_headers
notmyname,2011-04-19 20:57:44,https://api.github.com/repos/openstack/swift/git/commits/88b06d2487d4c1a584b1be8fa31578d701569a3a,88b06d2487d4c1a584b1be8fa31578d701569a3a,made failing unit test for HEAD requests
dpgoetz,2011-04-18 22:07:26,https://api.github.com/repos/openstack/swift/git/commits/d3a0e669be70efc1068343eabfe73bd5add8b796,d3a0e669be70efc1068343eabfe73bd5add8b796,add fix#
dpgoetz,2011-04-18 22:00:59,https://api.github.com/repos/openstack/swift/git/commits/2d9103f9e0a51817fc64506865d014ab6fbf0d84,2d9103f9e0a51817fc64506865d014ab6fbf0d84,adding double quarantine support for db replication
notmyname,2011-04-18 18:32:47,https://api.github.com/repos/openstack/swift/git/commits/b9d499a230fa96fa5ad6e67e835277e8f27b1a58,b9d499a230fa96fa5ad6e67e835277e8f27b1a58,add scott simpson to authors file
notmyname,2011-04-18 18:26:01,https://api.github.com/repos/openstack/swift/git/commits/b67f60f60f19c1dfe5fbdf62b67cf6a535ca9977,b67f60f60f19c1dfe5fbdf62b67cf6a535ca9977,added scott simpson to the authors file
greglange,2011-04-18 18:22:51,https://api.github.com/repos/openstack/swift/git/commits/3243e7f0795289da0509f40ec484c1b3c754379c,3243e7f0795289da0509f40ec484c1b3c754379c,stats collate_worker catchall
greglange,2011-04-18 18:07:45,https://api.github.com/repos/openstack/swift/git/commits/ea814fceb9ee0a7826f0bc6b27631b96f417ee37,ea814fceb9ee0a7826f0bc6b27631b96f417ee37,swauth scripts now exit with proper exit codes
greglange,2011-04-18 16:10:17,https://api.github.com/repos/openstack/swift/git/commits/ee6838aae9f3cdf8276928944ccd83a6738705ed,ee6838aae9f3cdf8276928944ccd83a6738705ed,swauth scripts exit with non zero exit codes on failure now
greglange,2011-04-18 16:08:48,https://api.github.com/repos/openstack/swift/git/commits/527a9ac0c7cbbb8c8b37f1fa2c539bd9a52f7430,527a9ac0c7cbbb8c8b37f1fa2c539bd9a52f7430,swauth scripts exit with non zero exit codes on failure now
gholt,2011-04-18 15:59:03,https://api.github.com/repos/openstack/swift/git/commits/17cb73dadb80fac63d98e96b50d4d043bdb2458a,17cb73dadb80fac63d98e96b50d4d043bdb2458a,Merge from trunk
greglange,2011-04-18 15:27:43,https://api.github.com/repos/openstack/swift/git/commits/68e1370abf338c81f5f6cb7753606a303d42bfe2,68e1370abf338c81f5f6cb7753606a303d42bfe2,added account to log message
redbo,2011-04-16 17:32:51,https://api.github.com/repos/openstack/swift/git/commits/59ff252362371d31c71b3aa0a9e78b5294c4bd52,59ff252362371d31c71b3aa0a9e78b5294c4bd52,Adds param-signed URLs to swift3 middleware.
gholt,2011-04-16 06:07:46,https://api.github.com/repos/openstack/swift/git/commits/b9eea0f6a1129708c3fc783fb473e02d1d6e391f,b9eea0f6a1129708c3fc783fb473e02d1d6e391f,PEP8 Fixes
redbo,2011-04-16 06:02:01,https://api.github.com/repos/openstack/swift/git/commits/eea65967eb3132a22f57831b819c44c1ca19ac27,eea65967eb3132a22f57831b819c44c1ca19ac27,clean up at least one test
redbo,2011-04-16 05:57:53,https://api.github.com/repos/openstack/swift/git/commits/14d8e8f3c3e05fc82a1255caeb10f4439ea040fc,14d8e8f3c3e05fc82a1255caeb10f4439ea040fc,add at least one test
gholt,2011-04-16 02:10:45,https://api.github.com/repos/openstack/swift/git/commits/0447a1eb63035f20e52b5e2c5303518a9c86275b,0447a1eb63035f20e52b5e2c5303518a9c86275b,Merged from trunk
gholt,2011-04-16 01:58:08,https://api.github.com/repos/openstack/swift/git/commits/be74d9e773815a6f1dc36099def5358054dc000d,be74d9e773815a6f1dc36099def5358054dc000d,PEP8 Fixes
sasimpson,2011-04-16 01:52:47,https://api.github.com/repos/openstack/swift/git/commits/97e817ecb756c1198d84db7b7d23f9c9b2db3566,97e817ecb756c1198d84db7b7d23f9c9b2db3566,"made client ip fill in, in the absence of a load balancer in the client field in the access logs."
dpgoetz,2011-04-16 01:47:50,https://api.github.com/repos/openstack/swift/git/commits/5cb03179ed62ad76b37d0ae18440d8f89de3b900,5cb03179ed62ad76b37d0ae18440d8f89de3b900,Adding unit and probe tests for proxy timeout bug.
dpgoetz,2011-04-16 01:37:48,https://api.github.com/repos/openstack/swift/git/commits/5340b40cd6fcb07d04ea5012948574e9b6c5213e,5340b40cd6fcb07d04ea5012948574e9b6c5213e,the links for the ubuntu images are out of date
greglange,2011-04-16 01:32:48,https://api.github.com/repos/openstack/swift/git/commits/ee7856c239a4f9353f0a7182112a53e4af24a944,ee7856c239a4f9353f0a7182112a53e4af24a944,swauth-cleanup-tokens now handles 404s on token containers and tokens better
greglange,2011-04-16 00:17:52,https://api.github.com/repos/openstack/swift/git/commits/687f70710938d724a29c7406f33057b546baa80b,687f70710938d724a29c7406f33057b546baa80b,Remove ECONNRESET patch from proxy server
gholt,2011-04-16 00:09:45,https://api.github.com/repos/openstack/swift/git/commits/f3628aa8a51a08de7089756db25f117a102789d6,f3628aa8a51a08de7089756db25f117a102789d6,Move loadapp to after-fork
greglange,2011-04-16 00:08:51,https://api.github.com/repos/openstack/swift/git/commits/e1a60995ffb5fe9647ff9996d1770101f073edba,e1a60995ffb5fe9647ff9996d1770101f073edba,swift-bench to clean up containers after it's done.
greglange,2011-04-16 00:07:58,https://api.github.com/repos/openstack/swift/git/commits/a8a921f7dcd5a9a404b09c06e433b22d200e02b5,a8a921f7dcd5a9a404b09c06e433b22d200e02b5,Update get_hashes in objrep to use utils.write_pickle
gholt,2011-04-15 23:47:25,https://api.github.com/repos/openstack/swift/git/commits/7e411f5ee3bdb77206ca5819bc8f66dbce4571a1,7e411f5ee3bdb77206ca5819bc8f66dbce4571a1,consync: Make validate_sync_to explicitly return None on validation
gholt,2011-04-15 23:37:07,https://api.github.com/repos/openstack/swift/git/commits/b371b53da2b8cecc83059e58c5e67f8023907178,b371b53da2b8cecc83059e58c5e67f8023907178,Bring st to date with client.py
gholt,2011-04-15 23:27:07,https://api.github.com/repos/openstack/swift/git/commits/a3ebdf40c1a84541dcb68d9792687d3405458678,a3ebdf40c1a84541dcb68d9792687d3405458678,consync: Make send-all-keys be send-all-keys-we-didnt-already-send
gholt,2011-04-15 23:11:48,https://api.github.com/repos/openstack/swift/git/commits/e731f81454b9dab87e792ebfe14361896f53a6fb,e731f81454b9dab87e792ebfe14361896f53a6fb,Merged from trunk
gholt,2011-04-15 23:11:34,https://api.github.com/repos/openstack/swift/git/commits/0546c8d15f5770a17fdd6f2741b8637d6e8b6eba,0546c8d15f5770a17fdd6f2741b8637d6e8b6eba,Merged from trunk
ttx,2011-04-15 15:02:47,https://api.github.com/repos/openstack/swift/git/commits/7cedff5f3ea735f68b7eb8049503a32d94987535,7cedff5f3ea735f68b7eb8049503a32d94987535,Diablo versioning (1.4-dev).
ttx,2011-04-15 09:54:32,https://api.github.com/repos/openstack/swift/git/commits/d7142ff7e79a4b93fe112867f7d24b797ec19a36,d7142ff7e79a4b93fe112867f7d24b797ec19a36,Diablo versioning
ttx,2011-04-15 00:37:50,https://api.github.com/repos/openstack/swift/git/commits/8870fbc4f3f67ff3d9eb15ed8c69768c6dd419d5,8870fbc4f3f67ff3d9eb15ed8c69768c6dd419d5,Final Cactus versioning. Please accept when you sign off the release.
greglange,2011-04-14 22:34:12,https://api.github.com/repos/openstack/swift/git/commits/74788ead367b2f05c773d5686db14af3e1694be1,74788ead367b2f05c773d5686db14af3e1694be1,removed ECONNRESET patch for eventlet wsgi
greglange,2011-04-14 20:55:03,https://api.github.com/repos/openstack/swift/git/commits/80c1cd49989c8abe0cd68284f3677884e6700084,80c1cd49989c8abe0cd68284f3677884e6700084,made objrep use utils.write_pickle
greglange,2011-04-14 15:34:02,https://api.github.com/repos/openstack/swift/git/commits/6fd7599b21698d5e8e2ed6dde0df4b7cd09bc73b,6fd7599b21698d5e8e2ed6dde0df4b7cd09bc73b,moving deleting of containers to run() method makes more sense
ttx,2011-04-14 13:39:59,https://api.github.com/repos/openstack/swift/git/commits/739149d3216c9a494365437ca5843dfa4a222254,739149d3216c9a494365437ca5843dfa4a222254,Final Cactus versioning
ttx,2011-04-14 13:02:50,https://api.github.com/repos/openstack/swift/git/commits/8f6a374ad7dfebbc3f310ecae079ed1b538a5d20,8f6a374ad7dfebbc3f310ecae079ed1b538a5d20,Bump version to 1.3-rc
ttx,2011-04-14 09:09:08,https://api.github.com/repos/openstack/swift/git/commits/d43fe9c19d4f2e379c072bfee1ce146a8329e158,d43fe9c19d4f2e379c072bfee1ce146a8329e158,Bump version to 1.3-rc
greglange,2011-04-13 20:10:55,https://api.github.com/repos/openstack/swift/git/commits/6f6717cf789d3e1b31f1fb12352483f7f2007a78,6f6717cf789d3e1b31f1fb12352483f7f2007a78,should probably let the user know when a container delete fails for reasons other than having objects in it
greglange,2011-04-13 19:30:21,https://api.github.com/repos/openstack/swift/git/commits/7e8b44bf02fa31c871b62f884229d2d7c6b1fe70,7e8b44bf02fa31c871b62f884229d2d7c6b1fe70,swift-bench now deletes containers it makes if deleting of objects is requested
dpgoetz,2011-04-13 18:38:01,https://api.github.com/repos/openstack/swift/git/commits/2e33cdabb38e73f627e0fe60dfa1b518afc189c4,2e33cdabb38e73f627e0fe60dfa1b518afc189c4,adding line in resetswift for logging
dpgoetz,2011-04-13 17:57:59,https://api.github.com/repos/openstack/swift/git/commits/cddee1b064e0d00f7602a708b6cc3206cbec79fe,cddee1b064e0d00f7602a708b6cc3206cbec79fe,adding the probe test
greglange,2011-04-13 16:19:30,https://api.github.com/repos/openstack/swift/git/commits/5e89b53ef38b86f354c163295a10c6fd80b5d782,5e89b53ef38b86f354c163295a10c6fd80b5d782,fixed a unit test assert statement
greglange,2011-04-13 15:48:43,https://api.github.com/repos/openstack/swift/git/commits/243fb2a49fc2307bfd55d1b4d8513bc737a1cb09,243fb2a49fc2307bfd55d1b4d8513bc737a1cb09,needed to push logging to where exception is caught
greglange,2011-04-13 14:52:25,https://api.github.com/repos/openstack/swift/git/commits/fb233f206051e10d619075f6a3f78364975a20f9,fb233f206051e10d619075f6a3f78364975a20f9,made stats processing handle generic exception in collate_worker()
greglange,2011-04-12 19:17:48,https://api.github.com/repos/openstack/swift/git/commits/404ebf1e6602a0d02d122315e42a9d0ab070ddc3,404ebf1e6602a0d02d122315e42a9d0ab070ddc3,swauth-cleanup-tokens now handles 404s on token containers and tokens better
gholt,2011-04-12 18:30:05,https://api.github.com/repos/openstack/swift/git/commits/2b7b6d44273ed79c04218617262af83a0704c31f,2b7b6d44273ed79c04218617262af83a0704c31f,"Put early loadapp back in, even though we won't use the result, to test for any instantiation problems early"
gholt,2011-04-12 00:07:52,https://api.github.com/repos/openstack/swift/git/commits/8e21d73d67c21114007649183e605ba32c052c8a,8e21d73d67c21114007649183e605ba32c052c8a,Move loadapp to after-fork
gholt,2011-04-12 00:03:00,https://api.github.com/repos/openstack/swift/git/commits/f3ab8693fae08b52dbba75689009c272f126deae,f3ab8693fae08b52dbba75689009c272f126deae,Handle TimeoutErrors with a tpooled get_hashes
dpgoetz,2011-04-11 23:26:50,https://api.github.com/repos/openstack/swift/git/commits/e99965693550977a7abcf3b8e71299fade0b8f94,e99965693550977a7abcf3b8e71299fade0b8f94,unit tests for timeout exception
greglange,2011-04-11 23:13:01,https://api.github.com/repos/openstack/swift/git/commits/bac7d7380abee217877449c351654835c0b85362,bac7d7380abee217877449c351654835c0b85362,"Refactored the log processing daemon to make it more testable.

Added tests for that.

I shouldn't have changed how it worked at all.

This needs to be tested on staging extensively before being pushed to production."
gholt,2011-04-11 23:06:20,https://api.github.com/repos/openstack/swift/git/commits/5db3cb3ddab12f2f6cc8b9f0d80d0788c37d02dc,5db3cb3ddab12f2f6cc8b9f0d80d0788c37d02dc,Handle TimeoutErrors with a tpooled get_hashes
greglange,2011-04-11 20:56:57,https://api.github.com/repos/openstack/swift/git/commits/b81dc66a225fef4edf8cd0936cbe763cf74ed4c5,b81dc66a225fef4edf8cd0936cbe763cf74ed4c5,added doc strings to new methods
redbo,2011-04-08 22:36:03,https://api.github.com/repos/openstack/swift/git/commits/5e16b13985e9633e3295d0c6efbfb2bb4dfb60c5,5e16b13985e9633e3295d0c6efbfb2bb4dfb60c5,support URL-param signed requests in swift3 middleware
redbo,2011-04-07 19:24:55,https://api.github.com/repos/openstack/swift/git/commits/bc9ec20033302d0ae63e20127403f8d97285654c,bc9ec20033302d0ae63e20127403f8d97285654c,Make it so the proxy's _make_request method's error handler catches timeouts.
redbo,2011-04-07 16:15:26,https://api.github.com/repos/openstack/swift/git/commits/8642275fd247b51184e0046f0f810d3090844426,8642275fd247b51184e0046f0f810d3090844426,probably should not error limit on timeouts
redbo,2011-04-07 16:03:43,https://api.github.com/repos/openstack/swift/git/commits/4bd088e6b80b7c9936d625da1c01338da9104fff,4bd088e6b80b7c9936d625da1c01338da9104fff,Add timeout exceptions to the proxy _make_request error handler
gholt,2011-04-01 22:37:52,https://api.github.com/repos/openstack/swift/git/commits/92dc9fa448320e17465285c4571fed2fd3c63509,92dc9fa448320e17465285c4571fed2fd3c63509,"Now:
.super_admin may get any user info
.reseller_admin may not get .reseller_admin info
.admin may not get .reseller_admin or .admin info
users can't get any user info"
gholt,2011-04-01 21:17:47,https://api.github.com/repos/openstack/swift/git/commits/2f98e2fb690efbf51fb12583203f2aa10be4e647,2f98e2fb690efbf51fb12583203f2aa10be4e647,"Now .super_admin may get any user info; .reseller_admin may not get .reseller_admin info, .admin may not get .reseller_admin or .admin info, users can't get any user info"
gholt,2011-04-01 20:51:25,https://api.github.com/repos/openstack/swift/git/commits/2985647068ece74efead4fe4dae0fbd6b09ff8e9,2985647068ece74efead4fe4dae0fbd6b09ff8e9,Fix to now allow reseller admins to see other reseller admin creds
gholt,2011-04-01 18:47:21,https://api.github.com/repos/openstack/swift/git/commits/d64f5e5aa26fce1166367bbd1a4d7db4bed7ec77,d64f5e5aa26fce1166367bbd1a4d7db4bed7ec77,Fix .admin get_user privileges.
sasimpson,2011-04-01 15:10:55,https://api.github.com/repos/openstack/swift/git/commits/191b41231c8f2352bb026ef2290877d604f9877c,191b41231c8f2352bb026ef2290877d604f9877c,making client ip appear in a standard place
dpgoetz,2011-04-01 01:12:45,https://api.github.com/repos/openstack/swift/git/commits/1ab4ec20a0ccd705cd0e13c3ead6dd5dcc12363d,1ab4ec20a0ccd705cd0e13c3ead6dd5dcc12363d,update ubuntu images on saio
gholt,2011-03-31 22:32:41,https://api.github.com/repos/openstack/swift/git/commits/6c13001244d715e1780771a71a11e13f0c62e610,6c13001244d715e1780771a71a11e13f0c62e610,Rename swift-stats-* to swift-dispersion-* to avoid confusion with log stats stuff
greglange,2011-03-31 19:52:28,https://api.github.com/repos/openstack/swift/git/commits/5b383294990b6cfbefa12dcef259313bd6d83642,5b383294990b6cfbefa12dcef259313bd6d83642,fixed merge conflict
redbo,2011-03-31 06:12:20,https://api.github.com/repos/openstack/swift/git/commits/fdc13c42e4bb6588a73f94b5c725accc98e25581,fdc13c42e4bb6588a73f94b5c725accc98e25581,swift3 middleware missing content-type fix
redbo,2011-03-31 05:56:00,https://api.github.com/repos/openstack/swift/git/commits/e1f3682890e2636e276eedac34b56f24f9522508,e1f3682890e2636e276eedac34b56f24f9522508,messed up test
redbo,2011-03-31 05:53:44,https://api.github.com/repos/openstack/swift/git/commits/fc3e894cbd9aa5545a8188d16e960517f61c2a41,fc3e894cbd9aa5545a8188d16e960517f61c2a41,swift3 missing content type fix
greglange,2011-03-30 21:13:50,https://api.github.com/repos/openstack/swift/git/commits/bfc490f624e01dd26353c566af5676315dbb3db3,bfc490f624e01dd26353c566af5676315dbb3db3,Added two command line options to bin/swift-log-stats-collector.
greglange,2011-03-30 21:10:27,https://api.github.com/repos/openstack/swift/git/commits/07ccdbcd887ffaf54ef5771ffb9423c542ad76c9,07ccdbcd887ffaf54ef5771ffb9423c542ad76c9,changed None check to use not and is
redbo,2011-03-30 20:47:28,https://api.github.com/repos/openstack/swift/git/commits/8e96fb54d8b95221743ea24fcc1315913bc41259,8e96fb54d8b95221743ea24fcc1315913bc41259,Remove boto dependency by implementing request canonicalization logic in swift3 middleware.
clayg,2011-03-30 20:42:41,https://api.github.com/repos/openstack/swift/git/commits/52a8d11e6502601c939457461e0befee214627b8,52a8d11e6502601c939457461e0befee214627b8,fixed lockups and lost messages in swift-init and capture_stdio
redbo,2011-03-30 20:32:34,https://api.github.com/repos/openstack/swift/git/commits/ad31db34efa13bfe9f219738d3d38fa3879987a6,ad31db34efa13bfe9f219738d3d38fa3879987a6,refactor to use webob req
greglange,2011-03-30 20:32:11,https://api.github.com/repos/openstack/swift/git/commits/0959eeb72ad068e18d74f0346574a81e38b2157d,0959eeb72ad068e18d74f0346574a81e38b2157d,Added two command line options to bin/swift-log-stats-collector
clayg,2011-03-30 20:04:15,https://api.github.com/repos/openstack/swift/git/commits/7c2bf134b1afc23687645bc97388c5b7c6b9bb4f,7c2bf134b1afc23687645bc97388c5b7c6b9bb4f,fixed lockups and lost messages in swift-init and capture_stdio
redbo,2011-03-30 13:47:04,https://api.github.com/repos/openstack/swift/git/commits/c6c49ae8c6e5d867c998ce62dd7a181a560a399c,c6c49ae8c6e5d867c998ce62dd7a181a560a399c,remove re import
redbo,2011-03-30 13:09:02,https://api.github.com/repos/openstack/swift/git/commits/41c50832f246889d1df3d5e17d19946e7a4c06c6,41c50832f246889d1df3d5e17d19946e7a4c06c6,move canonical_string logic into swift3 middleware
dpgoetz,2011-03-29 20:19:09,https://api.github.com/repos/openstack/swift/git/commits/955e6fa81dbcb9935ad0f5f19bdfc8e706b0e8bc,955e6fa81dbcb9935ad0f5f19bdfc8e706b0e8bc,"Check the md5sum against metadata ETag on object GETs, and zero byte checks on GETs, HEADs, and POSTs."
dpgoetz,2011-03-29 16:57:23,https://api.github.com/repos/openstack/swift/git/commits/b6d587a758b90103e2c516a55692c5121f4ada89,b6d587a758b90103e2c516a55692c5121f4ada89,changing /usr/bin/python to /usr/bin/env python in bins
dpgoetz,2011-03-29 04:03:19,https://api.github.com/repos/openstack/swift/git/commits/be01135c752df4d9db2b7eca242a835eff148a1f,be01135c752df4d9db2b7eca242a835eff148a1f,make executable
dpgoetz,2011-03-29 02:29:20,https://api.github.com/repos/openstack/swift/git/commits/b544570da5836dcd171ea093e7b4f5faeaf8438d,b544570da5836dcd171ea093e7b4f5faeaf8438d,merge to trunk conflicts
dpgoetz,2011-03-29 02:09:24,https://api.github.com/repos/openstack/swift/git/commits/f5e2af4ca57470e4d89b769d8ee39d35e2fdff43,f5e2af4ca57470e4d89b769d8ee39d35e2fdff43,peer review changes
gholt,2011-03-26 00:27:28,https://api.github.com/repos/openstack/swift/git/commits/c87b1ed40ee57970db557f9285ef38b1550e0c77,c87b1ed40ee57970db557f9285ef38b1550e0c77,Static web filter middleware.
gholt,2011-03-25 20:22:04,https://api.github.com/repos/openstack/swift/git/commits/175fd2a811b27587f4256a1220b240bd470954f8,175fd2a811b27587f4256a1220b240bd470954f8,A bit more unit tests.
gholt,2011-03-25 20:00:21,https://api.github.com/repos/openstack/swift/git/commits/7a850affb0fc4eefde11a81e4a59ad1fc6a45ca1,7a850affb0fc4eefde11a81e4a59ad1fc6a45ca1,Specific unit test for previous bugfix
gholt,2011-03-25 19:21:35,https://api.github.com/repos/openstack/swift/git/commits/dfca2f7dd8fdb4f0951a42ff7cf47ff5b2b08472,dfca2f7dd8fdb4f0951a42ff7cf47ff5b2b08472,Bug fix for subpath redirects
gholt,2011-03-25 09:16:38,https://api.github.com/repos/openstack/swift/git/commits/b8d07cf979d495413acf27707027ff0ae3d3ce32,b8d07cf979d495413acf27707027ff0ae3d3ce32,Made the link to the custom listings css relative since the request could have had its path modified several times between the end remote client and staticweb
gholt,2011-03-25 08:55:53,https://api.github.com/repos/openstack/swift/git/commits/1345b269b0e21ab695d9fb2df281adc22b1b1a6b,1345b269b0e21ab695d9fb2df281adc22b1b1a6b,pep8 and doc updates
gholt,2011-03-25 08:33:46,https://api.github.com/repos/openstack/swift/git/commits/40505e892d5ff3051e1acccc22f2c20d90b2fd31,40505e892d5ff3051e1acccc22f2c20d90b2fd31,Added logging
gholt,2011-03-24 23:50:52,https://api.github.com/repos/openstack/swift/git/commits/0d267d3ec478f06f27be3133653b7d18a374150c,0d267d3ec478f06f27be3133653b7d18a374150c,More bugfixes found by letterj
dpgoetz,2011-03-24 23:19:39,https://api.github.com/repos/openstack/swift/git/commits/c7f42fd2a07482e224cd08251c6d2fb53ea660c5,c7f42fd2a07482e224cd08251c6d2fb53ea660c5,getting rid of -u stuff
gholt,2011-03-24 23:17:38,https://api.github.com/repos/openstack/swift/git/commits/a464e4aa6befd910dd54703ee5892f45b4dbb921,a464e4aa6befd910dd54703ee5892f45b4dbb921,Updated sample conf
gholt,2011-03-24 23:12:36,https://api.github.com/repos/openstack/swift/git/commits/2d2150bde780945b09b467da76672801593ffe6e,2d2150bde780945b09b467da76672801593ffe6e,Updated func tests and made swauth .rlistings check a bit easier to read
gholt,2011-03-24 22:53:08,https://api.github.com/repos/openstack/swift/git/commits/0e3040f9891f8880189fbed309e712f1348ef705,0e3040f9891f8880189fbed309e712f1348ef705,Changing some semantics and defaults; .r:* listings are off by default now and .rlistings turn them on; new x-container-meta-web-listings header to turn webmode listings on/off (off by default)
dpgoetz,2011-03-24 22:51:44,https://api.github.com/repos/openstack/swift/git/commits/51ce438f7ff112dddbef79e795a54485f29e9c18,51ce438f7ff112dddbef79e795a54485f29e9c18,changing /usr/bin/python to /usr/bin/env python
gholt,2011-03-24 21:35:53,https://api.github.com/repos/openstack/swift/git/commits/847648039449c8e4268effd1250ae537976cfeea,847648039449c8e4268effd1250ae537976cfeea,Merged from trunk
redbo,2011-03-24 19:37:29,https://api.github.com/repos/openstack/swift/git/commits/716418ba9c475d122921fa73c0bd6000b152a3a4,716418ba9c475d122921fa73c0bd6000b152a3a4,refactor obj-rep a bit and move local hash recalculation to before rsync
gholt,2011-03-24 19:22:54,https://api.github.com/repos/openstack/swift/git/commits/f3d4f7311bf2d0b5f4faef641c7440d558ff7aaf,f3d4f7311bf2d0b5f4faef641c7440d558ff7aaf,Typo in docs
notmyname,2011-03-24 18:52:33,https://api.github.com/repos/openstack/swift/git/commits/f0af8b3701f016af8f7e43466beb80bffb92192d,f0af8b3701f016af8f7e43466beb80bffb92192d,added default support for content-disposition and allows x-object-manifest to be manipulated like any other object metadata header
notmyname,2011-03-24 18:03:49,https://api.github.com/repos/openstack/swift/git/commits/0c5aacb42467eb5e34b2c29436ebceb28605e41f,0c5aacb42467eb5e34b2c29436ebceb28605e41f,added default support for content-disposition and allows x-object-manifest to be manipulated like any other object metadata header
notmyname,2011-03-24 17:17:33,https://api.github.com/repos/openstack/swift/git/commits/8d5d3e8edda529880f1eef094eda15508c86bcbe,8d5d3e8edda529880f1eef094eda15508c86bcbe,provides arbitrary metadata header support for objects
greglange,2011-03-24 17:14:18,https://api.github.com/repos/openstack/swift/git/commits/1b2ae1d30bbe21b1d8155f53454a0765f28f512f,1b2ae1d30bbe21b1d8155f53454a0765f28f512f,fixed test and pep8 problem
notmyname,2011-03-24 16:43:12,https://api.github.com/repos/openstack/swift/git/commits/09b7013dc217cd004984f25bc168c7119d182c6e,09b7013dc217cd004984f25bc168c7119d182c6e,fixed location of a test
dpgoetz,2011-03-24 16:16:05,https://api.github.com/repos/openstack/swift/git/commits/862add4d5265013b75cd448b27f15e28b2976dfc,862add4d5265013b75cd448b27f15e28b2976dfc,adding reset flags
gholt,2011-03-24 07:46:02,https://api.github.com/repos/openstack/swift/git/commits/b09b5e64e1843c5155b91e8c053e3f3270b3cdd6,b09b5e64e1843c5155b91e8c053e3f3270b3cdd6,Tests; bug fixes
gholt,2011-03-24 03:37:07,https://api.github.com/repos/openstack/swift/git/commits/d872d944112d87c9f5a35253fcaf1862b366a094,d872d944112d87c9f5a35253fcaf1862b366a094,Update from feedback; docs
dpgoetz,2011-03-23 23:41:03,https://api.github.com/repos/openstack/swift/git/commits/286bf04e6025c0031fc263e0c2152ed3a3b15b1e,286bf04e6025c0031fc263e0c2152ed3a3b15b1e,merge to trunk
notmyname,2011-03-23 03:54:16,https://api.github.com/repos/openstack/swift/git/commits/0374803eb89228b6666243cc12031aad1cda574b,0374803eb89228b6666243cc12031aad1cda574b,explicitly strip disallowed headers from the config
notmyname,2011-03-23 03:41:39,https://api.github.com/repos/openstack/swift/git/commits/07c07eba7bf733535aafc1380c5e1f332ffd4d93,07c07eba7bf733535aafc1380c5e1f332ffd4d93,simplified header key lookup
notmyname,2011-03-23 01:05:44,https://api.github.com/repos/openstack/swift/git/commits/88ad83767bdae92d7208ad9f29dc3e2938ed514c,88ad83767bdae92d7208ad9f29dc3e2938ed514c,objects can now have arbitrary headers set in metadata that will be served back when they are fetched
notmyname,2011-03-22 23:25:16,https://api.github.com/repos/openstack/swift/git/commits/68566d38cfc39dab3e56c781c163f4d22490d1d2,68566d38cfc39dab3e56c781c163f4d22490d1d2,now can delete content-encoding if it was set at object creation
notmyname,2011-03-22 23:17:47,https://api.github.com/repos/openstack/swift/git/commits/06094af35942be08807a60d732fbe00ba4b30f3d,06094af35942be08807a60d732fbe00ba4b30f3d,fixed object POST so content encoding can be set and deleted
greglange,2011-03-21 18:03:51,https://api.github.com/repos/openstack/swift/git/commits/08ae7d24c727f081a3cca802b9d044ac1ee9eca1,08ae7d24c727f081a3cca802b9d044ac1ee9eca1,fixed a mismerge
redbo,2011-03-20 22:14:03,https://api.github.com/repos/openstack/swift/git/commits/765f5b5c3f058828eb54fffecac6f162541de97f,765f5b5c3f058828eb54fffecac6f162541de97f,refactor obj-rep a bit and move hash recalculate to before rsync step
gholt,2011-03-18 15:07:03,https://api.github.com/repos/openstack/swift/git/commits/6318b996b5751dd92426391c8b2fcf797efe11c6,6318b996b5751dd92426391c8b2fcf797efe11c6,Merged from trunk
gholt,2011-03-18 15:05:20,https://api.github.com/repos/openstack/swift/git/commits/8f956266b4344888c744d0ed2ce576730dc13e03,8f956266b4344888c744d0ed2ce576730dc13e03,Require x-timestamp for container-sync requests
gholt,2011-03-18 15:04:09,https://api.github.com/repos/openstack/swift/git/commits/39889d71ddffa3df5fb266c91dc684512d5bb0f9,39889d71ddffa3df5fb266c91dc684512d5bb0f9,Merge from trunk
notmyname,2011-03-17 22:32:30,https://api.github.com/repos/openstack/swift/git/commits/df5c8e7eceb348e2f25bc78214ae6ed078f9cf67,df5c8e7eceb348e2f25bc78214ae6ed078f9cf67,makes the query parameter parsing explicit in the access log parser
notmyname,2011-03-17 22:22:43,https://api.github.com/repos/openstack/swift/git/commits/fe2550716666d66f68900cec9ebdca03364fad0f,fe2550716666d66f68900cec9ebdca03364fad0f,fixed tests
notmyname,2011-03-17 21:42:58,https://api.github.com/repos/openstack/swift/git/commits/85fb01d3463e1b4f5f824982712b1194cf0e92e0,85fb01d3463e1b4f5f824982712b1194cf0e92e0,whitelist valid query params to count for stats
greglange,2011-03-17 19:53:51,https://api.github.com/repos/openstack/swift/git/commits/aef287cdcdfdaeaaab710fcbd58cceeb123c9d4c,aef287cdcdfdaeaaab710fcbd58cceeb123c9d4c,Fixed test
gholt,2011-03-16 23:12:44,https://api.github.com/repos/openstack/swift/git/commits/2976515626d087d7ad8b33d040f22b5ef512d9f2,2976515626d087d7ad8b33d040f22b5ef512d9f2,New index code for the dbs; should improve performance for containers with a lot of recent deletes.
gholt,2011-03-16 19:02:29,https://api.github.com/repos/openstack/swift/git/commits/70b127153b776810f339662e394b6120d5a8c062,70b127153b776810f339662e394b6120d5a8c062,Fix for incorrect use of urlparse results in swauth bins
dpgoetz,2011-03-16 16:04:00,https://api.github.com/repos/openstack/swift/git/commits/863393c823a16986faf0f75649eb2ea10ae4d749,863393c823a16986faf0f75649eb2ea10ae4d749,pep8
dpgoetz,2011-03-16 15:01:23,https://api.github.com/repos/openstack/swift/git/commits/8296bbb4f01378ee695611a9938987604373466e,8296bbb4f01378ee695611a9938987604373466e,up to trunk
dpgoetz,2011-03-16 14:55:07,https://api.github.com/repos/openstack/swift/git/commits/5482035bc0a31cf9f8fbd24b27276d23b912f46c,5482035bc0a31cf9f8fbd24b27276d23b912f46c,change ite logic and add more tests
dpgoetz,2011-03-16 05:16:18,https://api.github.com/repos/openstack/swift/git/commits/61e53372be77e4a0e6d5e3e74bf655cad88a5dcc,61e53372be77e4a0e6d5e3e74bf655cad88a5dcc,merging to trunk
dpgoetz,2011-03-16 05:12:03,https://api.github.com/repos/openstack/swift/git/commits/86c84c3bc3c974123b6c820854d29e8d6a604a7b,86c84c3bc3c974123b6c820854d29e8d6a604a7b,unittests workng and added probe test
gholt,2011-03-15 15:52:34,https://api.github.com/repos/openstack/swift/git/commits/8b5dd23223c57ed39ecf6d3fdd62d21bb7eb585b,8b5dd23223c57ed39ecf6d3fdd62d21bb7eb585b,Remove DevAuth
gholt,2011-03-15 15:47:20,https://api.github.com/repos/openstack/swift/git/commits/3306ca797adc52fbc20ba15157da36fbb557bcdf,3306ca797adc52fbc20ba15157da36fbb557bcdf,Fixed an import that was causing Connection to not retry on HTTPExceptions.
creiht,2011-03-15 15:44:00,https://api.github.com/repos/openstack/swift/git/commits/44daeb62005f64686886690189543ad805f4cca7,44daeb62005f64686886690189543ad805f4cca7,Adds documentation how to the SAIO on how to setup rsyslog to have separate logs for each node
fujita,2011-03-15 15:43:09,https://api.github.com/repos/openstack/swift/git/commits/8b0a864670488da1f5ce3a6ffc5528d344a4c4c5,8b0a864670488da1f5ce3a6ffc5528d344a4c4c5,"s3api: add get acl object and bucket support

A simple response that gives the owner to FULL_CONTROL always returns
because Swift doesn't support a fine acl.

This also adds get acl unit tests."
fujita,2011-03-15 15:37:24,https://api.github.com/repos/openstack/swift/git/commits/c700df72e7a3ee6368f08c53fb9fb3ff27997105,c700df72e7a3ee6368f08c53fb9fb3ff27997105,s3api: fix PUT Object Copy
creiht,2011-03-15 15:28:29,https://api.github.com/repos/openstack/swift/git/commits/6f46664ed1448d74b9d7c165db078758cf8967e9,6f46664ed1448d74b9d7c165db078758cf8967e9,added cleaning up of logs in resetswift for saio
gholt,2011-03-15 15:06:35,https://api.github.com/repos/openstack/swift/git/commits/6d36f4be9815a33fcbadf4212d991338f2b82af7,6d36f4be9815a33fcbadf4212d991338f2b82af7,Fix incorrect import
clayg,2011-03-14 15:22:10,https://api.github.com/repos/openstack/swift/git/commits/26fd6c76e9c115836cf5a28dd173e51ea55193e8,26fd6c76e9c115836cf5a28dd173e51ea55193e8,rename var
clayg,2011-03-14 15:06:16,https://api.github.com/repos/openstack/swift/git/commits/bbe9585be5a9316446e51c0e3a10c1a563bde57a,bbe9585be5a9316446e51c0e3a10c1a563bde57a,rename var
gholt,2011-03-14 03:08:23,https://api.github.com/repos/openstack/swift/git/commits/34f82afc62777edc7c2ea7904d85363cb6bd3766,34f82afc62777edc7c2ea7904d85363cb6bd3766,Fixes with removing DevAuth
gholt,2011-03-14 02:56:37,https://api.github.com/repos/openstack/swift/git/commits/bd22dbe712b04af2014724565eb3c6ead3d9a77a,bd22dbe712b04af2014724565eb3c6ead3d9a77a,Removing DevAuth
clayg,2011-03-12 02:17:00,https://api.github.com/repos/openstack/swift/git/commits/ca51e879676e5d06ccfa83be5e9ad86138018e9d,ca51e879676e5d06ccfa83be5e9ad86138018e9d,fixed pattern matching/globbing in swift-log-uploader
clayg,2011-03-12 00:07:17,https://api.github.com/repos/openstack/swift/git/commits/211f4fa5e1ba2a56eba425549b27feadf60ea70b,211f4fa5e1ba2a56eba425549b27feadf60ea70b,removed old comment
clayg,2011-03-11 23:50:54,https://api.github.com/repos/openstack/swift/git/commits/19e185749f508ef434e5baff381eaf8f0eb5da82,19e185749f508ef434e5baff381eaf8f0eb5da82,fixed pattern matching/globbing in swift-log-uploader
gholt,2011-03-11 20:50:57,https://api.github.com/repos/openstack/swift/git/commits/c89f090cf45e1c4ff3e8a39abfcf33a5b8c8200c,c89f090cf45e1c4ff3e8a39abfcf33a5b8c8200c,Fix for incorrect use of urlparse results in swauth bins
gholt,2011-03-11 19:38:02,https://api.github.com/repos/openstack/swift/git/commits/533db5976087fcb9cc6ec64e71cf8ebe91ed8ec5,533db5976087fcb9cc6ec64e71cf8ebe91ed8ec5,Merged from trunk
annabellebertooch,2011-03-11 16:57:04,https://api.github.com/repos/openstack/swift/git/commits/48a00406aa07f67636ccafc3e86d0ab78a945aae,48a00406aa07f67636ccafc3e86d0ab78a945aae,Added an info box to each page that contains links to the 1.1 and 1.2 docs sites.
dpgoetz,2011-03-10 20:26:41,https://api.github.com/repos/openstack/swift/git/commits/da1cdb1c407886f79c285dbbfc5b54111520e563,da1cdb1c407886f79c285dbbfc5b54111520e563,refactor the quarantine
gholt,2011-03-10 19:47:03,https://api.github.com/repos/openstack/swift/git/commits/089de66dfabd590a4390b8f397612d8382a670c5,089de66dfabd590a4390b8f397612d8382a670c5,Fixes to work with WebOb 1.0.1 and WebOb 1.0.3
gholt,2011-03-10 16:52:03,https://api.github.com/repos/openstack/swift/git/commits/028ad1c6134f69f5a10ad9642420d4fad710693a,028ad1c6134f69f5a10ad9642420d4fad710693a,Fixes to work with WebOb 1.0.1 and WebOb 1.0.3
annabellebertooch,2011-03-10 05:14:38,https://api.github.com/repos/openstack/swift/git/commits/5c4340039df4bb2f5dd81ba09c9184b026198ec1,5c4340039df4bb2f5dd81ba09c9184b026198ec1,Adding a box to each page that gives readers links to 1.1 and 1.2 Swift docs sites
gholt,2011-03-08 23:03:23,https://api.github.com/repos/openstack/swift/git/commits/5e2c0a2a5632421f5d482d86e234f75be42aa3d1,5e2c0a2a5632421f5d482d86e234f75be42aa3d1,Merge from trunk
dpgoetz,2011-03-08 23:02:17,https://api.github.com/repos/openstack/swift/git/commits/a29b1da65c6229a920f642e61a294beb97b10318,a29b1da65c6229a920f642e61a294beb97b10318,Fix for object auditor invalidate hashes location bug
clayg,2011-03-08 22:52:23,https://api.github.com/repos/openstack/swift/git/commits/00d2477e9f6509f498a054e3607e0c2f6d581b6b,00d2477e9f6509f498a054e3607e0c2f6d581b6b,fix ring hash check fix in obj replicator tests.
annabellebertooch,2011-03-08 21:57:03,https://api.github.com/repos/openstack/swift/git/commits/df72575e375d85c970d9217a8b8f3d13f66ac0d0,df72575e375d85c970d9217a8b8f3d13f66ac0d0,Modifying the multi-node install to fix a bug reported (700894) and to put in changes based on feedback from Russell Nelson.
notmyname,2011-03-08 20:27:07,https://api.github.com/repos/openstack/swift/git/commits/7e8a8500b781615fc66edbe2603634084f54515a,7e8a8500b781615fc66edbe2603634084f54515a,change internal proxy to make calls to handle_request with a copy of the request rather than the request itself
clayg,2011-03-08 20:23:31,https://api.github.com/repos/openstack/swift/git/commits/c1e09d35be24ebcead41987f2d345ccc34bcc62b,c1e09d35be24ebcead41987f2d345ccc34bcc62b,fix ring hash check fix in obj replicator tests
notmyname,2011-03-08 16:50:07,https://api.github.com/repos/openstack/swift/git/commits/60a882c0e29945639590ea662f18e52cefbf0feb,60a882c0e29945639590ea662f18e52cefbf0feb,better handling of internal_proxy.get_container_list response in log_processor
notmyname,2011-03-08 16:46:53,https://api.github.com/repos/openstack/swift/git/commits/6aaa48540f7a96533350c279ad5fdcc837e9e162,6aaa48540f7a96533350c279ad5fdcc837e9e162,improved internal proxy tests and changed internal_proxy.get_container_list
notmyname,2011-03-07 20:32:16,https://api.github.com/repos/openstack/swift/git/commits/5a050612c62283264654ea5150e4479a68a51c61,5a050612c62283264654ea5150e4479a68a51c61,renamed internal proxy test method
notmyname,2011-03-07 20:24:29,https://api.github.com/repos/openstack/swift/git/commits/971642ca3f05a7fa038211dee9acdae2ba4d470a,971642ca3f05a7fa038211dee9acdae2ba4d470a,cleaned up internal proxy tests
dpgoetz,2011-03-07 19:14:01,https://api.github.com/repos/openstack/swift/git/commits/e7672dded28953473f28102fb482f1a765ebe9b1,e7672dded28953473f28102fb482f1a765ebe9b1,fix for object auditor invalidate hashes bug
notmyname,2011-03-07 16:21:32,https://api.github.com/repos/openstack/swift/git/commits/dfdc220ed7b6ec9b21fefbf1e195699f07ec3af5,dfdc220ed7b6ec9b21fefbf1e195699f07ec3af5,streamlined internal_proxy
fujita,2011-03-07 04:03:01,https://api.github.com/repos/openstack/swift/git/commits/184ab5e7bdb75d7fe80f877abe5f570bc61b5493,184ab5e7bdb75d7fe80f877abe5f570bc61b5493,s3api: add acl get unit tests
fujita,2011-03-07 04:00:39,https://api.github.com/repos/openstack/swift/git/commits/2b8a0a1c3de11829905107d9aec8db8c0eab78a9,2b8a0a1c3de11829905107d9aec8db8c0eab78a9,"s3api: add get acl object and bucket support

A simple response that gives the owner to FULL_CONTROL always returns
because Swift doesn't support a fine acl."
fujita,2011-03-06 09:58:07,https://api.github.com/repos/openstack/swift/git/commits/52bdd7f7e33cda71c0ca58a253f642b15e65cfa1,52bdd7f7e33cda71c0ca58a253f642b15e65cfa1,s3api: fix PUT Object Copy unit test
annabellebertooch,2011-03-04 22:35:02,https://api.github.com/repos/openstack/swift/git/commits/4cc6e76943be9f84572e3caac6a140efe003bccf,4cc6e76943be9f84572e3caac6a140efe003bccf,Fixes separate IP address for auth on multinode install plus adds some scripting touches
notmyname,2011-03-04 20:01:42,https://api.github.com/repos/openstack/swift/git/commits/324dadb04f1678edd7822ac680ef5335d5b1f0ed,324dadb04f1678edd7822ac680ef5335d5b1f0ed,improved internal proxy tests
gholt,2011-03-03 22:54:31,https://api.github.com/repos/openstack/swift/git/commits/0ecc2da0d37ac28b9caea4e852b426aded623d49,0ecc2da0d37ac28b9caea4e852b426aded623d49,Merged from trunk
gholt,2011-03-03 22:36:20,https://api.github.com/repos/openstack/swift/git/commits/b0437c849160166280c27934361c41937f26a535,b0437c849160166280c27934361c41937f26a535,Merged from trunk
clayg,2011-03-03 22:27:16,https://api.github.com/repos/openstack/swift/git/commits/27c559c89ac920a2cd6812addc38d8796b1570b6,27c559c89ac920a2cd6812addc38d8796b1570b6,update functional tests configuration
redbo,2011-03-03 22:12:13,https://api.github.com/repos/openstack/swift/git/commits/3312864d3bab22d31bf301f075fee77b6089b9af,3312864d3bab22d31bf301f075fee77b6089b9af,"Add a ""Getting Swift"" section to the getting started doc"
dpgoetz,2011-03-03 22:07:15,https://api.github.com/repos/openstack/swift/git/commits/86d146f16aa0ab1e9405f35c01a06d47db36b13a,86d146f16aa0ab1e9405f35c01a06d47db36b13a,Ability to fasttrack auditing of zero byte files.
dpgoetz,2011-03-03 21:48:38,https://api.github.com/repos/openstack/swift/git/commits/2e4188b2a7e8357ee10983eb74b3c7770fbd41d9,2e4188b2a7e8357ee10983eb74b3c7770fbd41d9,merge to trunk
redbo,2011-03-03 21:12:15,https://api.github.com/repos/openstack/swift/git/commits/f5b02388ac99c1e10577f3fcc0058b8b6cb9022e,f5b02388ac99c1e10577f3fcc0058b8b6cb9022e,Refactor proxy for concurrency and code reuse
creiht,2011-03-03 21:02:06,https://api.github.com/repos/openstack/swift/git/commits/543f4d17bda82bd4a1fd54fad2fe89595e7b7055,543f4d17bda82bd4a1fd54fad2fe89595e7b7055,Skip the swift3 middleware tests if boto is not installed (since it is an optional component)
creiht,2011-03-03 20:47:23,https://api.github.com/repos/openstack/swift/git/commits/6c892ad1c7bdb3ae19aa7fc0df8db30d9c3e25cb,6c892ad1c7bdb3ae19aa7fc0df8db30d9c3e25cb,heh
creiht,2011-03-03 20:34:48,https://api.github.com/repos/openstack/swift/git/commits/4a27b7e29929c65155a94617f24e93491d7ae405,4a27b7e29929c65155a94617f24e93491d7ae405,Swift3 tests will now skip if boto is not installed
redbo,2011-03-03 20:24:03,https://api.github.com/repos/openstack/swift/git/commits/d2deaa666fb20ddff9dca31eb910874b6e72de10,d2deaa666fb20ddff9dca31eb910874b6e72de10,recommended doc changes
gholt,2011-03-03 19:58:48,https://api.github.com/repos/openstack/swift/git/commits/7a01e4afbdaf2903cf69fa999755951477f3253b,7a01e4afbdaf2903cf69fa999755951477f3253b,Merged from trunk
redbo,2011-03-03 19:31:50,https://api.github.com/repos/openstack/swift/git/commits/16e344d61d3b2242f390030a34fd3f6f632b5a2e,16e344d61d3b2242f390030a34fd3f6f632b5a2e,trunk merge
creiht,2011-03-03 16:50:56,https://api.github.com/repos/openstack/swift/git/commits/975094cb572dfc36534655b1fb45abde6d650d26,975094cb572dfc36534655b1fb45abde6d650d26,merged trunk to fix conflict
creiht,2011-03-03 16:44:50,https://api.github.com/repos/openstack/swift/git/commits/16d5022e7d13c95eb6a0ffb5800db701aa8ced99,16d5022e7d13c95eb6a0ffb5800db701aa8ced99,Updated user to be in the adm group and chmod the log dirs so that the processing will work correctly
fujita,2011-03-03 14:47:07,https://api.github.com/repos/openstack/swift/git/commits/a9b76794b529244f3170ee185ab22fe99df3247d,a9b76794b529244f3170ee185ab22fe99df3247d,"s3api: use boto to get canonical string for signature
  
Replace the homegrown function to get a canonical string for signature."
gholt,2011-03-02 22:18:49,https://api.github.com/repos/openstack/swift/git/commits/f40519a182fb93be42b5b344b09d1ea551bb7c30,f40519a182fb93be42b5b344b09d1ea551bb7c30,Container sync doc updates
gholt,2011-03-02 21:58:39,https://api.github.com/repos/openstack/swift/git/commits/63f9b4aa9b9c647ed7d17eed4d879bfbf6c54cda,63f9b4aa9b9c647ed7d17eed4d879bfbf6c54cda,Double sync point code to divy up work amongst main nodes
redbo,2011-03-02 20:38:08,https://api.github.com/repos/openstack/swift/git/commits/326dfac188efd16a061b1fa048de8f35425db858,326dfac188efd16a061b1fa048de8f35425db858,remove offending probe checks
redbo,2011-03-02 20:25:49,https://api.github.com/repos/openstack/swift/git/commits/df50efff27e6b22829b27f32e9d8ca9de54a5f8c,df50efff27e6b22829b27f32e9d8ca9de54a5f8c,trunk merge
notmyname,2011-03-01 18:27:19,https://api.github.com/repos/openstack/swift/git/commits/52217d8e5fa0bfa1d2eeb8519a3f61b553134d83,52217d8e5fa0bfa1d2eeb8519a3f61b553134d83,fixed edge case when log processor cannot get a log file for processing
redbo,2011-03-01 15:24:15,https://api.github.com/repos/openstack/swift/git/commits/72bc89c45362ad196bfefa1aac8698801b39f24a,72bc89c45362ad196bfefa1aac8698801b39f24a,"Add a ""getting swift"" section to the getting started doc"
fujita,2011-03-01 11:50:28,https://api.github.com/repos/openstack/swift/git/commits/8dafefbb660139d28b37be6750fc494ea9f1c6e9,8dafefbb660139d28b37be6750fc494ea9f1c6e9,s3api: move boto dependency descriptions to swift3.py
redbo,2011-02-28 23:12:18,https://api.github.com/repos/openstack/swift/git/commits/ac35429a6ea12d78cbf5ebf5fc85a48881180e5a,ac35429a6ea12d78cbf5ebf5fc85a48881180e5a,small doc fix
redbo,2011-02-28 23:07:53,https://api.github.com/repos/openstack/swift/git/commits/e3ca838685631a4ae6e753ef9fb0c1c87ad7da50,e3ca838685631a4ae6e753ef9fb0c1c87ad7da50,doc fix
dpgoetz,2011-02-28 23:07:11,https://api.github.com/repos/openstack/swift/git/commits/df09731edc356dcc53fbb3028ce3c63b99e5e570,df09731edc356dcc53fbb3028ce3c63b99e5e570,lower memcached error limit duration.
notmyname,2011-02-28 22:25:43,https://api.github.com/repos/openstack/swift/git/commits/27c410274114a42d4e72b1c74086b53fee154ff8,27c410274114a42d4e72b1c74086b53fee154ff8,added tests for internal proxy and updated internal proxy retries
dpgoetz,2011-02-28 20:20:55,https://api.github.com/repos/openstack/swift/git/commits/7369d03d067c1069897a334d15e855814a8121af,7369d03d067c1069897a334d15e855814a8121af,get rid of logger
dpgoetz,2011-02-28 18:59:16,https://api.github.com/repos/openstack/swift/git/commits/83caec04dcab17d494f52d20b334fd49a9c67d95,83caec04dcab17d494f52d20b334fd49a9c67d95,lower memcache error limit duration
gholt,2011-02-28 15:44:25,https://api.github.com/repos/openstack/swift/git/commits/e92c302ae525c7b4a860d86183f21ee0d1d92911,e92c302ae525c7b4a860d86183f21ee0d1d92911,Merged from trunk
gholt,2011-02-26 01:31:58,https://api.github.com/repos/openstack/swift/git/commits/7b4c9bbf80c29bc01a306c5337b0a0f417c70d04,7b4c9bbf80c29bc01a306c5337b0a0f417c70d04,Added [container-sync] to SAIO instructions
notmyname,2011-02-25 21:19:51,https://api.github.com/repos/openstack/swift/git/commits/debb14e87a4c4940df4a86dc0cf18fe970c8ac3c,debb14e87a4c4940df4a86dc0cf18fe970c8ac3c,internal_proxy handles retries better
notmyname,2011-02-25 21:09:07,https://api.github.com/repos/openstack/swift/git/commits/0f73ecc51cb4768ae0e6cf29b6a1b7b4a53e1743,0f73ecc51cb4768ae0e6cf29b6a1b7b4a53e1743,removed processed_files fix to allow it to be in its own branch and worked on separately
clayg,2011-02-25 20:22:56,https://api.github.com/repos/openstack/swift/git/commits/0d6e2bbab05ac62139eeee2c6a8daa77f5a63fec,0d6e2bbab05ac62139eeee2c6a8daa77f5a63fec,consistant hasattr in readconf
dpgoetz,2011-02-25 17:09:02,https://api.github.com/repos/openstack/swift/git/commits/288665571782262644733c7bc465840e1ea3d780,288665571782262644733c7bc465840e1ea3d780,peer review edits
gholt,2011-02-24 23:01:22,https://api.github.com/repos/openstack/swift/git/commits/a7c0a6edde2d48e2d7215613955655d16ce03995,a7c0a6edde2d48e2d7215613955655d16ce03995,More docs
clayg,2011-02-24 22:21:14,https://api.github.com/repos/openstack/swift/git/commits/bdba519e0221d7e51b75494e47162aa478da136a,bdba519e0221d7e51b75494e47162aa478da136a,PEP8
dpgoetz,2011-02-24 21:27:08,https://api.github.com/repos/openstack/swift/git/commits/def5411f89d67c9ec36cfdb4c2342bc1691feeaa,def5411f89d67c9ec36cfdb4c2342bc1691feeaa,ratelimiting does not handle memcache restart
dpgoetz,2011-02-24 20:27:20,https://api.github.com/repos/openstack/swift/git/commits/7db8c42a1a804de3420279a7028bf66c8f9b4f06,7db8c42a1a804de3420279a7028bf66c8f9b4f06,fixing the run_forever and unit tests
gholt,2011-02-24 19:37:55,https://api.github.com/repos/openstack/swift/git/commits/e9b7815e23426c5b988d1f306a73a250213ce0e2,e9b7815e23426c5b988d1f306a73a250213ce0e2,made x_container_sync_row its own column
gholt,2011-02-24 18:50:00,https://api.github.com/repos/openstack/swift/git/commits/adb45bc871ca74ddf60ad0ff3296c6833da69f54,adb45bc871ca74ddf60ad0ff3296c6833da69f54,Restrict hosts that can be targets/sources of container syncing
clayg,2011-02-24 18:28:17,https://api.github.com/repos/openstack/swift/git/commits/92a5414f2558dc8b768c1a2d350fc5bb9ebc029a,92a5414f2558dc8b768c1a2d350fc5bb9ebc029a,went ahead and spoofed a [func_test] section
clayg,2011-02-24 17:59:34,https://api.github.com/repos/openstack/swift/git/commits/c1b3c8d7993c9c4a0064359cf4e9d1f92109911f,c1b3c8d7993c9c4a0064359cf4e9d1f92109911f,better error messages on missing/malformed configs
notmyname,2011-02-24 17:39:00,https://api.github.com/repos/openstack/swift/git/commits/21b8ebed5cb6433fede53e3730aef94f649f460d,21b8ebed5cb6433fede53e3730aef94f649f460d,merged with greg lange's improvements
redbo,2011-02-24 09:46:08,https://api.github.com/repos/openstack/swift/git/commits/e357ffcb1804d0939e90a853e74c627152892454,e357ffcb1804d0939e90a853e74c627152892454,fixes
redbo,2011-02-24 09:02:50,https://api.github.com/repos/openstack/swift/git/commits/e1bd4e87697d6c921806d52a2637966b19face10,e1bd4e87697d6c921806d52a2637966b19face10,small refactors
redbo,2011-02-24 08:07:26,https://api.github.com/repos/openstack/swift/git/commits/c6f1137191d5203abd36ad7f572073a5a5191398,c6f1137191d5203abd36ad7f572073a5a5191398,fix loggin
redbo,2011-02-24 07:43:05,https://api.github.com/repos/openstack/swift/git/commits/f0acd547d7acd2f40724078af3161c6fe4ef39b4,f0acd547d7acd2f40724078af3161c6fe4ef39b4,merge trunk
gholt,2011-02-24 07:26:05,https://api.github.com/repos/openstack/swift/git/commits/305e4b41f55b482d7defed967b435c171c01cf9d,305e4b41f55b482d7defed967b435c171c01cf9d,Initial work on container syncing
dpgoetz,2011-02-23 19:44:36,https://api.github.com/repos/openstack/swift/git/commits/a3474704c2b6fc53089824bae87d016b00404549,a3474704c2b6fc53089824bae87d016b00404549,ratelimiting does not handle memcache restart
clayg,2011-02-23 17:29:06,https://api.github.com/repos/openstack/swift/git/commits/49ea0201f750663a8b1d3d986291d700b173f5ba,49ea0201f750663a8b1d3d986291d700b173f5ba,made functionalnosetests works with no account usernames
clayg,2011-02-23 04:25:38,https://api.github.com/repos/openstack/swift/git/commits/a9201fc379e3c0b5154b03318694b7ee83a79ff7,a9201fc379e3c0b5154b03318694b7ee83a79ff7,i need to pull in the changes to functionalnosetest/swift_testing.py
fujita,2011-02-23 04:19:06,https://api.github.com/repos/openstack/swift/git/commits/b9d29ccbf9005ad1fbfc69d58ccc9aed37298626,b9d29ccbf9005ad1fbfc69d58ccc9aed37298626,s3api: fix PUT Object Copy
fujita,2011-02-23 02:57:31,https://api.github.com/repos/openstack/swift/git/commits/14d0784c0139d8eaa4918af57af4a175f61fafc3,14d0784c0139d8eaa4918af57af4a175f61fafc3,update docs about python-boto dependency
fujita,2011-02-23 02:55:49,https://api.github.com/repos/openstack/swift/git/commits/55ebda9d65b0c4543f45bbf1eac0b4f2ded1bcdf,55ebda9d65b0c4543f45bbf1eac0b4f2ded1bcdf,"s3api: use boto to get canonical string for signature

Replace the homegrown function to get a canonical string for
signature."
clayg,2011-02-23 00:00:11,https://api.github.com/repos/openstack/swift/git/commits/d1fa1a0040a24e08665149525d92ac09a2c1ea93,d1fa1a0040a24e08665149525d92ac09a2c1ea93,"made functional tests more configurable

SWIFT_TEST_CONFIG_FILE can redirect both functional test suites to any conf
functional tests that don't require a account:username can now work with only
username for auth systems that don't support the account/namespace concept"
dpgoetz,2011-02-22 16:02:36,https://api.github.com/repos/openstack/swift/git/commits/aa14afe2bb3e0f04e12129040182f84cbab27272,aa14afe2bb3e0f04e12129040182f84cbab27272,nodes with a weight of zero should not be valid for handoff
dpgoetz,2011-02-22 00:37:12,https://api.github.com/repos/openstack/swift/git/commits/a86a569cae3bad052a460e5eabcc22ced072348d,a86a569cae3bad052a460e5eabcc22ced072348d,simplifying options and code
gholt,2011-02-21 19:47:29,https://api.github.com/repos/openstack/swift/git/commits/47453c16b131f80c820ae48099e24c6bbb2c2739,47453c16b131f80c820ae48099e24c6bbb2c2739,Merge from trunk
gholt,2011-02-21 19:07:08,https://api.github.com/repos/openstack/swift/git/commits/f58d43e416a36646cae5900504adfac5ec6792e5,f58d43e416a36646cae5900504adfac5ec6792e5,Reverted the wal+index code.
dpgoetz,2011-02-21 18:50:56,https://api.github.com/repos/openstack/swift/git/commits/7144693bf5b2f4ff8be774d167592ccabd6d7947,7144693bf5b2f4ff8be774d167592ccabd6d7947,merge to trunk
gholt,2011-02-19 21:09:20,https://api.github.com/repos/openstack/swift/git/commits/2491c6470303c608756bf124a2f3e099ae1dd3f2,2491c6470303c608756bf124a2f3e099ae1dd3f2,staticweb: added a todo
gholt,2011-02-19 20:35:58,https://api.github.com/repos/openstack/swift/git/commits/469c287b5ba201a567443bb562256dccbae9abd8,469c287b5ba201a567443bb562256dccbae9abd8,staticweb: work in progress
gholt,2011-02-19 07:37:51,https://api.github.com/repos/openstack/swift/git/commits/6639b0ec0c4b65270a08af6e5cb40c134219eac9,6639b0ec0c4b65270a08af6e5cb40c134219eac9,staticweb: Reallow direct container listings
gholt,2011-02-19 07:22:15,https://api.github.com/repos/openstack/swift/git/commits/eac721b003ae16931f0deb1f1457d5cbca263d74,eac721b003ae16931f0deb1f1457d5cbca263d74,Working staticweb filter
gholt,2011-02-18 16:43:19,https://api.github.com/repos/openstack/swift/git/commits/0a170f268019709d76d684fbcbe5fd21f07d88e6,0a170f268019709d76d684fbcbe5fd21f07d88e6,Possibly speed improvement on existence-select
gholt,2011-02-18 16:30:08,https://api.github.com/repos/openstack/swift/git/commits/1172f9136d680d93b17817ba6f382d9bcde1fb15,1172f9136d680d93b17817ba6f382d9bcde1fb15,Updated new index code
gholt,2011-02-18 16:07:03,https://api.github.com/repos/openstack/swift/git/commits/e4c4907b321b5bf280b9e4b08562462c100ae40e,e4c4907b321b5bf280b9e4b08562462c100ae40e,Readd new index changes
gholt,2011-02-17 21:57:04,https://api.github.com/repos/openstack/swift/git/commits/24a624345d80f8cd6fc0c3204454e8253e719a07,24a624345d80f8cd6fc0c3204454e8253e719a07,"Make swift-auth-to-swauth work with really old devauth dbs.
Update swauth to accept non-alnum chars in account and user names."
gholt,2011-02-17 20:54:05,https://api.github.com/repos/openstack/swift/git/commits/ff4691c5adb837e525d2ad88b8bf36d01df88617,ff4691c5adb837e525d2ad88b8bf36d01df88617,ring: pickles now use only stdlib objects; old and really old pickles can still be read
clayg,2011-02-17 20:42:14,https://api.github.com/repos/openstack/swift/git/commits/0b91f69a282395314dcb00124f68a083fa8ea8fc,0b91f69a282395314dcb00124f68a083fa8ea8fc,fixed glob pattern matching index offset error in stats' LogUploader
gholt,2011-02-17 17:30:41,https://api.github.com/repos/openstack/swift/git/commits/ed69db162aa9daa84cc3c86aec0af0c3f840acf6,ed69db162aa9daa84cc3c86aec0af0c3f840acf6,Revert wal+index
redbo,2011-02-17 16:37:02,https://api.github.com/repos/openstack/swift/git/commits/8fcda9c0a4cc870b8bff0b51c2bf16b7f84a1d60,8fcda9c0a4cc870b8bff0b51c2bf16b7f84a1d60,rename log-processing.conf to log-processor.conf
redbo,2011-02-17 08:30:39,https://api.github.com/repos/openstack/swift/git/commits/13a34844707b4688f09c282893e5e36a3d70d18e,13a34844707b4688f09c282893e5e36a3d70d18e,rename log-processing to log-processor
clayg,2011-02-17 01:52:22,https://api.github.com/repos/openstack/swift/git/commits/841a894955038cc54dd1b9b4d029e5390fc7c7f3,841a894955038cc54dd1b9b4d029e5390fc7c7f3,pep8
clayg,2011-02-17 01:30:18,https://api.github.com/repos/openstack/swift/git/commits/ddc2a4c6b293a4b6c233492150cd44f754d48919,ddc2a4c6b293a4b6c233492150cd44f754d48919,fixed glob pattern matching index offset error in stats' LogUploader
notmyname,2011-02-16 22:29:59,https://api.github.com/repos/openstack/swift/git/commits/ecaf693e3366101207bab2a3e5479f86e676d9d9,ecaf693e3366101207bab2a3e5479f86e676d9d9,merged test improvements from clayg
clayg,2011-02-16 22:07:24,https://api.github.com/repos/openstack/swift/git/commits/f57e69a6cca490879256b64b82206809b3ad14ca,f57e69a6cca490879256b64b82206809b3ad14ca,fix log_processor tests
clayg,2011-02-16 21:07:33,https://api.github.com/repos/openstack/swift/git/commits/72ca13e0c006ce037e987e75a026c3e3e69aa226,72ca13e0c006ce037e987e75a026c3e3e69aa226,"I rewrote swift-init cause I wanted it to do somethings it didn't, and I
tried to make some of the error conditions a little better too.  It has
some new features, but overall it's behavior is mostly compatible with
the old swift-init (input, return codes) - but if someone had some weird
greps on the output they're hozed.

swift-init --help is a good place to start

some highlights might be:
 $swift-init start main --wait  # wait for all ""main"" services to start,
printing any errors to console
 $swift-init rest wait  # same as above but for replicators, updaters & auditors
 $swift-init stop object -c1  # kill the first object-server ""node""
 $swift-init object-server status  # make sure it's dead - yay status!
 $swift-init proxy auth reload  # devauth?  srsly?
 $swift-init *-replicator once -n  # run the object, container,
and account replicators in ""once mode"" and watch them log to console
until they're finished

... probably some other stuff too.  Looking forward to feedback..."
clayg,2011-02-16 21:00:35,https://api.github.com/repos/openstack/swift/git/commits/97e218fd52ecadf468f5fe6f81515c3a459e6169,97e218fd52ecadf468f5fe6f81515c3a459e6169,mermged upstream changes
clayg,2011-02-16 20:47:31,https://api.github.com/repos/openstack/swift/git/commits/092608b1c928ccb6a2767c5eb33c95c956bbd1ad,092608b1c928ccb6a2767c5eb33c95c956bbd1ad,added [options] to command usage
clayg,2011-02-16 19:57:27,https://api.github.com/repos/openstack/swift/git/commits/3977965ff4c7397826eeeff5eb5fa8d3b5c1a56a,3977965ff4c7397826eeeff5eb5fa8d3b5c1a56a,creating a Ring will ensure a valid HASH_PATH_SUFFIX
dpgoetz,2011-02-16 16:30:13,https://api.github.com/repos/openstack/swift/git/commits/d60b931181192468b8a74cef9c005a2ee4658b41,d60b931181192468b8a74cef9c005a2ee4658b41,merge up to trunk
clayg,2011-02-16 15:02:38,https://api.github.com/repos/openstack/swift/git/commits/ae1c2d73ab0b90f26ac85b2823c0ccd6e19f169b,ae1c2d73ab0b90f26ac85b2823c0ccd6e19f169b,"creating a Ring will ensure a valid HASH_PATH_SUFFIX

To make sure that node lookups match what the servers return the generated
hashes need to match.  All the utils that use the ring should validate their
HASH_PATH_SUFFIX."
gholt,2011-02-16 02:43:55,https://api.github.com/repos/openstack/swift/git/commits/fc6391ea5c623c4c94ef37cf7c322b621b24313d,fc6391ea5c623c4c94ef37cf7c322b621b24313d,ring: pickles now use only stdlib objects; old and really old pickles can still be read
creiht,2011-02-15 20:51:00,https://api.github.com/repos/openstack/swift/git/commits/1e31ff726be8c77049ce5c793e6afa6416eeebb2,1e31ff726be8c77049ce5c793e6afa6416eeebb2,"Fixed a typo, and made restarting consistent"
clayg,2011-02-15 19:19:33,https://api.github.com/repos/openstack/swift/git/commits/a8b4f859c0c1b13011c3b0957d70351be393e424,a8b4f859c0c1b13011c3b0957d70351be393e424,fixed tests for new wait default true
clayg,2011-02-15 16:48:22,https://api.github.com/repos/openstack/swift/git/commits/6766bd371acff422cbe2685cd364d638792e6610,6766bd371acff422cbe2685cd364d638792e6610,wait is on by default
dpgoetz,2011-02-15 02:36:04,https://api.github.com/repos/openstack/swift/git/commits/b2e2654ce38273f6d0969c3dd9b17f841f2220f0,b2e2654ce38273f6d0969c3dd9b17f841f2220f0,pep8
dpgoetz,2011-02-15 02:10:39,https://api.github.com/repos/openstack/swift/git/commits/3583158d59e6ae91bb505844aefdc68204bf6626,3583158d59e6ae91bb505844aefdc68204bf6626,stupid comment
dpgoetz,2011-02-15 02:02:53,https://api.github.com/repos/openstack/swift/git/commits/e5e940c570b3c849fa0d9dd0165dea13776d5958,e5e940c570b3c849fa0d9dd0165dea13776d5958,refactor daemons with args/kwargs
clayg,2011-02-14 23:02:08,https://api.github.com/repos/openstack/swift/git/commits/c1884bbfdda145b64636a461ceba1b74591593b7,c1884bbfdda145b64636a461ceba1b74591593b7,redbo says we should capture stdio later
creiht,2011-02-14 22:56:40,https://api.github.com/repos/openstack/swift/git/commits/952442dae4fb2c1d430034544e0a97c8f93c20c0,952442dae4fb2c1d430034544e0a97c8f93c20c0,Added logging for stats processing
clayg,2011-02-14 22:53:25,https://api.github.com/repos/openstack/swift/git/commits/da794932ba5e627c2aaa58200116eeaf5234863b,da794932ba5e627c2aaa58200116eeaf5234863b,i18n
clayg,2011-02-14 20:52:49,https://api.github.com/repos/openstack/swift/git/commits/22a45b3550a53a22ad7ae93d1cea7652efe7f868,22a45b3550a53a22ad7ae93d1cea7652efe7f868,review cleanup
dpgoetz,2011-02-14 20:48:28,https://api.github.com/repos/openstack/swift/git/commits/ab5d5e3d9999d4f19b37beb3f7fcd53ba998dcd2,ab5d5e3d9999d4f19b37beb3f7fcd53ba998dcd2,forgot log-uploader change
dpgoetz,2011-02-14 20:25:40,https://api.github.com/repos/openstack/swift/git/commits/7728904dda966087e29356f8062b843002157a1b,7728904dda966087e29356f8062b843002157a1b,audit zero byte files quickly without true value
devcamcar,2011-02-14 19:36:23,https://api.github.com/repos/openstack/swift/git/commits/24e41372199d3fbc2fa3b404bddfd0bbd19f9e62,24e41372199d3fbc2fa3b404bddfd0bbd19f9e62,Added lock file configuration to sample rsync.conf.
devcamcar,2011-02-13 02:27:59,https://api.github.com/repos/openstack/swift/git/commits/694fa02b6741148b7e7a4c04da9be0af3c6f6708,694fa02b6741148b7e7a4c04da9be0af3c6f6708,Added missing lockfile configuration to sample rsync.conf
clayg,2011-02-12 20:50:24,https://api.github.com/repos/openstack/swift/git/commits/1f78fae2fcb8f8a4a7a2ea268e31f1545718a670,1f78fae2fcb8f8a4a7a2ea268e31f1545718a670,more tests and cleanup
clayg,2011-02-12 09:25:29,https://api.github.com/repos/openstack/swift/git/commits/51064d31ebb28f13e6f3d8164439ae747b801766,51064d31ebb28f13e6f3d8164439ae747b801766,renamed ini_files to conf_files in code
clayg,2011-02-12 09:09:12,https://api.github.com/repos/openstack/swift/git/commits/f455c21b83624362d1c77a504e2aeb537f191caa,f455c21b83624362d1c77a504e2aeb537f191caa,reworked bin/swift-init
clayg,2011-02-12 09:03:07,https://api.github.com/repos/openstack/swift/git/commits/67e3790df1e17b53417abcf2dd44f39ca3d1c6ad,67e3790df1e17b53417abcf2dd44f39ca3d1c6ad,reworked bin/swift-init
clayg,2011-02-12 08:57:33,https://api.github.com/repos/openstack/swift/git/commits/c03a302f7c6f5518661f7750b0b4896510cb3120,c03a302f7c6f5518661f7750b0b4896510cb3120,PEP8
clayg,2011-02-12 08:22:01,https://api.github.com/repos/openstack/swift/git/commits/bfae3625ef4f2fb1865dcc1dc3ba07e29f2a4d7c,bfae3625ef4f2fb1865dcc1dc3ba07e29f2a4d7c,fixed license dates
clayg,2011-02-12 07:55:57,https://api.github.com/repos/openstack/swift/git/commits/6554c16e0a85a6e3c981003cd941705853123410,6554c16e0a85a6e3c981003cd941705853123410,merged trunk
clayg,2011-02-12 07:49:24,https://api.github.com/repos/openstack/swift/git/commits/8a66319f14ca6347c84ecbb14e21b5cf6b4b7d31,8a66319f14ca6347c84ecbb14e21b5cf6b4b7d31,"more test, swift.common.manager coverage > 90%"
gholt,2011-02-12 01:39:44,https://api.github.com/repos/openstack/swift/git/commits/da27b3b7503bea823bd442f7d93eeed57d427932,da27b3b7503bea823bd442f7d93eeed57d427932,Make swift-auth-to-swauth work with really old devauth dbs; update swauth to accept non-alnum chars in account and user names.
clayg,2011-02-11 20:56:03,https://api.github.com/repos/openstack/swift/git/commits/4c809e49b9b4b01b28516b7fa6d8d79df039ccae,4c809e49b9b4b01b28516b7fa6d8d79df039ccae,working on tests
clayg,2011-02-11 19:21:28,https://api.github.com/repos/openstack/swift/git/commits/e3e604ec17cedf9a89242c5adc85edae9137f648,e3e604ec17cedf9a89242c5adc85edae9137f648,forgot some new files
clayg,2011-02-11 19:18:19,https://api.github.com/repos/openstack/swift/git/commits/1095f27590d52f85bfb89c3f503155b914c979ea,1095f27590d52f85bfb89c3f503155b914c979ea,"Prepare for trunk merge.

Refactored some of the swift_init classes into a new module in
swift.common, changed some names.  Removed the bin test stuff.  Fixed
some bugs, added some features."
redbo,2011-02-11 17:27:05,https://api.github.com/repos/openstack/swift/git/commits/b2e0b926a4f4efc85cc8e573f1041683e2bbc5e2,b2e0b926a4f4efc85cc8e573f1041683e2bbc5e2,Changes to support deployment on IPv6
gholt,2011-02-11 17:12:01,https://api.github.com/repos/openstack/swift/git/commits/6ba7f27bf78d72427b02b2361eed156951fd6686,6ba7f27bf78d72427b02b2361eed156951fd6686,logging: use routes to separate logging configurations
gholt,2011-02-10 23:10:53,https://api.github.com/repos/openstack/swift/git/commits/0c0920701a95d0b96c3e50dff31f7b1acc81b905,0c0920701a95d0b96c3e50dff31f7b1acc81b905,PEP8 Fixes
gholt,2011-02-10 22:29:08,https://api.github.com/repos/openstack/swift/git/commits/88ae726f9bf52d15ab295b56ee6717298d9067cd,88ae726f9bf52d15ab295b56ee6717298d9067cd,Merge from trunk
clayg,2011-02-10 22:22:05,https://api.github.com/repos/openstack/swift/git/commits/8beae68e3071d01e5b599406f1c7f362b5cb664d,8beae68e3071d01e5b599406f1c7f362b5cb664d,cleaned up logging and added new optional proxy access_logger with it's own configuration options that default to default proxy logger's settings.
clayg,2011-02-10 21:23:59,https://api.github.com/repos/openstack/swift/git/commits/c973bf53fb08efd93943511f367b1fb5075fde41,c973bf53fb08efd93943511f367b1fb5075fde41,cleaned up some comments
clayg,2011-02-10 21:05:53,https://api.github.com/repos/openstack/swift/git/commits/5082b6d38958234351756757385f0301ff704087,5082b6d38958234351756757385f0301ff704087,updated proxy-server.conf-sample to include access_log_* defaults
clayg,2011-02-10 20:59:52,https://api.github.com/repos/openstack/swift/git/commits/5d0bc6b9c76756a07648f04b4a309677fbec3635,5d0bc6b9c76756a07648f04b4a309677fbec3635,"logging refactor to support proxy access logs

New log level ""notice"" set to python log level 25 maps to syslog priority
LOG_NOTICE.  Used for some messages in the proxy server, but will be available
to all apps using the LogAdapter returned from get_logger.  Cleaned up some
code in get_logger so that console logging works with log_routes and removed
some unneeded bits.  NamedFormatter functionality was split between LogAdapter
(which now inherits from logging.LoggerAdapter) and TxnFormatter (which now is
only responsible for adding the log records txn_id).

The proxy server app now configures a separate logger for access line logging.
By default it will use the same settings as the regular proxy logger."
gholt,2011-02-10 20:02:04,https://api.github.com/repos/openstack/swift/git/commits/946a796c4369a9eb9c650399a62a840893d2df27,946a796c4369a9eb9c650399a62a840893d2df27,Merge from ~clay-gerrard/swift/logroutes
clayg,2011-02-10 17:57:51,https://api.github.com/repos/openstack/swift/git/commits/8193e517af7be246da9e2d3a2aca7b85d3242191,8193e517af7be246da9e2d3a2aca7b85d3242191,"slightly more consistant stats process log names

Also a quick fix to the auditor tests xattr mock"
clayg,2011-02-10 17:51:17,https://api.github.com/repos/openstack/swift/git/commits/1c939ad8c9584cabf8378b586b9aeaf61c761305,1c939ad8c9584cabf8378b586b9aeaf61c761305,merged logroutes
creiht,2011-02-10 17:02:16,https://api.github.com/repos/openstack/swift/git/commits/7b918977043fdb18dd36cc19f256d264eee8c6a6,7b918977043fdb18dd36cc19f256d264eee8c6a6,Updates the debian packaging docs with the python-netifaces dependency
creiht,2011-02-10 16:09:31,https://api.github.com/repos/openstack/swift/git/commits/f73d7ad52fafe95fbd06771c0bde8131e004b7d1,f73d7ad52fafe95fbd06771c0bde8131e004b7d1,Adding python-netifaces to dependencies for packaging docs
gholt,2011-02-10 08:01:07,https://api.github.com/repos/openstack/swift/git/commits/bb57e753b02cdd115aa9a440aed4597bc2ab20de,bb57e753b02cdd115aa9a440aed4597bc2ab20de,Fix drive-audit's default log_name
clayg,2011-02-09 22:12:06,https://api.github.com/repos/openstack/swift/git/commits/4869992732012289057c248686c4d645abc7dd9c,4869992732012289057c248686c4d645abc7dd9c,merged trunk
dpgoetz,2011-02-09 21:36:14,https://api.github.com/repos/openstack/swift/git/commits/bd1e2a0daf0fcb1230fda56b746ecc26dbd3100d,bd1e2a0daf0fcb1230fda56b746ecc26dbd3100d,do not return devs with weight zero in get_more_nodes
gholt,2011-02-09 19:50:41,https://api.github.com/repos/openstack/swift/git/commits/0a840504d4bd3b021baca3c86363780d2840a385,0a840504d4bd3b021baca3c86363780d2840a385,Merge from trunk
redbo,2011-02-09 19:02:29,https://api.github.com/repos/openstack/swift/git/commits/748f561c19e82cdd74dca67583c6fef6455f5ec6,748f561c19e82cdd74dca67583c6fef6455f5ec6,Use sqlite's new WAL mechanism as a replacement for .pending files.
clayg,2011-02-08 21:12:00,https://api.github.com/repos/openstack/swift/git/commits/e47b980025b8cf1764c6e9613f33f6f6e87e9c73,e47b980025b8cf1764c6e9613f33f6f6e87e9c73,fix st <command> --help hangs
notmyname,2011-02-08 20:46:11,https://api.github.com/repos/openstack/swift/git/commits/c0a2b77d452a499d2d5fc0b54f416e01dcd51a35,c0a2b77d452a499d2d5fc0b54f416e01dcd51a35,fixed edge case when log processor cannot get a log file for processing
creiht,2011-02-07 20:45:38,https://api.github.com/repos/openstack/swift/git/commits/daf90a17c3e6726b4f2ef538e6dd1f81c45887f9,daf90a17c3e6726b4f2ef538e6dd1f81c45887f9,"Added a catch all log, and cleaned up a bit"
clayg,2011-02-05 21:38:49,https://api.github.com/repos/openstack/swift/git/commits/461bf8df712f1b03ed547bdf0a068aae434d50ef,461bf8df712f1b03ed547bdf0a068aae434d50ef,"added new proxy-server configuration options for access_log_facility and
access_log_name"
clayg,2011-02-05 02:58:31,https://api.github.com/repos/openstack/swift/git/commits/0f0e093972dccad7ec00f7e3fd73573aa09f4f46,0f0e093972dccad7ec00f7e3fd73573aa09f4f46,"fix st command help hangs

Before running the command function global the main func would start the
print and error queues.  Inside the command function the the option
parser would see the the help option, print the help text, and raise
SystemExit, which wasn't getting caught."
creiht,2011-02-04 20:20:09,https://api.github.com/repos/openstack/swift/git/commits/ee09f94d79a0383da11a864071c02e0ef1083cfc,ee09f94d79a0383da11a864071c02e0ef1083cfc,Added rsyslog setup docs for SAIO
redbo,2011-02-04 20:14:25,https://api.github.com/repos/openstack/swift/git/commits/3f7e2e5a172f935cbe808e5ba9e1974cdba18c7f,3f7e2e5a172f935cbe808e5ba9e1974cdba18c7f,merge trunk
redbo,2011-02-04 20:14:02,https://api.github.com/repos/openstack/swift/git/commits/79632cb167bb2302eed10e3b13fe386e0d303993,79632cb167bb2302eed10e3b13fe386e0d303993,merge walindx
gholt,2011-02-04 19:50:30,https://api.github.com/repos/openstack/swift/git/commits/98090b7217c69bba06b2f9ecb1dfaceb29de877d,98090b7217c69bba06b2f9ecb1dfaceb29de877d,Fix account db change
gholt,2011-02-04 19:37:35,https://api.github.com/repos/openstack/swift/git/commits/2fffdfede24f79df757faffd197afff32ca432eb,2fffdfede24f79df757faffd197afff32ca432eb,Move db version resolution to its own function
gholt,2011-02-04 19:16:21,https://api.github.com/repos/openstack/swift/git/commits/ee4a9a85ac8763b14deb9c55e6c9be2a163bb5a8,ee4a9a85ac8763b14deb9c55e6c9be2a163bb5a8,Indexing and integrity changes in dbs.
clayg,2011-02-03 21:23:07,https://api.github.com/repos/openstack/swift/git/commits/f9fa63686c802ce8d3f2e4e29ecc7fb686835ba9,f9fa63686c802ce8d3f2e4e29ecc7fb686835ba9,"Moved proxy server access log messages into their own log level

Added new ""access"" log level available on swift loggers that will be routed to
the LOG_NOTICE priority in syslog for easy redirection of access log messages
via rsyslog and syslog-ng."
redbo,2011-02-03 19:53:47,https://api.github.com/repos/openstack/swift/git/commits/c2931e157c4db364e4ce9d971920be2a83641431,c2931e157c4db364e4ce9d971920be2a83641431,random newline
redbo,2011-02-03 19:50:16,https://api.github.com/repos/openstack/swift/git/commits/c62842bfd111c9f2ac4dbd343582332452ec13b3,c62842bfd111c9f2ac4dbd343582332452ec13b3,update all ring-builder grammars
clayg,2011-02-03 19:46:28,https://api.github.com/repos/openstack/swift/git/commits/ee3886f2ca45e8983b13af04a06fee000aab61bb,ee3886f2ca45e8983b13af04a06fee000aab61bb,"moved warning messages out of proxy.logger.info

A few warning/client error messages were useing the .info log level which we
reserve for access logs.  They were changed to warnings."
creiht,2011-02-03 19:36:40,https://api.github.com/repos/openstack/swift/git/commits/f9e58423c5527bb9fa4ab1aa3f1b2aacfb9e6df4,f9e58423c5527bb9fa4ab1aa3f1b2aacfb9e6df4,Update version to 1.3-dev
creiht,2011-02-03 19:27:25,https://api.github.com/repos/openstack/swift/git/commits/4bee91515e00bc32b487df767c629f62d77aec8e,4bee91515e00bc32b487df767c629f62d77aec8e,Updating version to 1.3-dev
redbo,2011-02-03 19:08:59,https://api.github.com/repos/openstack/swift/git/commits/70903a98bb65e271f49ff3ec46ee2ec3ee96d29d,70903a98bb65e271f49ff3ec46ee2ec3ee96d29d,merge trunk
creiht,2011-02-02 22:57:06,https://api.github.com/repos/openstack/swift/git/commits/049c44b82f0fe7eb22cd5ed3065fcd276a33c983,049c44b82f0fe7eb22cd5ed3065fcd276a33c983,Bumping version to 1.2.0 in preparation for release
creiht,2011-02-02 22:37:55,https://api.github.com/repos/openstack/swift/git/commits/bf34239d79cc78cafa138f02fcde327ea4db69c1,bf34239d79cc78cafa138f02fcde327ea4db69c1,Bumping version to 1.2.0 in preparation for release
gholt,2011-02-02 21:39:08,https://api.github.com/repos/openstack/swift/git/commits/cb584303218805d1c1374d732caac26457a6ffe8,cb584303218805d1c1374d732caac26457a6ffe8,logging: use routes to separate logging configurations
gholt,2011-02-02 20:02:00,https://api.github.com/repos/openstack/swift/git/commits/e7bba205b88c8d6103d1e71aae650c92db442897,e7bba205b88c8d6103d1e71aae650c92db442897,Fix duplicate logging
gholt,2011-02-02 18:47:56,https://api.github.com/repos/openstack/swift/git/commits/ee794fa79c95d3c9ee6eb8dd1ff0d00dd8165e8d,ee794fa79c95d3c9ee6eb8dd1ff0d00dd8165e8d,logging: Remove old handler before installing a new handler
gholt,2011-02-02 18:23:01,https://api.github.com/repos/openstack/swift/git/commits/812fe86ea8108231039a5dbb06901f3de6bd71fb,812fe86ea8108231039a5dbb06901f3de6bd71fb,Make swauth only log requests it handles
gholt,2011-02-02 17:38:17,https://api.github.com/repos/openstack/swift/git/commits/fdf20184e47383505865580560235af83ef9c35f,fdf20184e47383505865580560235af83ef9c35f,Fix duplicate logging
creiht,2011-02-01 22:12:02,https://api.github.com/repos/openstack/swift/git/commits/33d18d4d715e832a222b9c52d83ec5a847b05d5c,33d18d4d715e832a222b9c52d83ec5a847b05d5c,Bump version to 1.2-rc
creiht,2011-02-01 21:48:46,https://api.github.com/repos/openstack/swift/git/commits/f457d772fbe3c9b9603eb809a5c1c4e6f7636514,f457d772fbe3c9b9603eb809a5c1c4e6f7636514,Bumping version to 1.2-rc
notmyname,2011-01-31 15:46:53,https://api.github.com/repos/openstack/swift/git/commits/f8c5986cb42c35dc0c4ff41bbc0f4afbcded3eb1,f8c5986cb42c35dc0c4ff41bbc0f4afbcded3eb1,removed extra import in account stats logger
redbo,2011-01-31 01:46:33,https://api.github.com/repos/openstack/swift/git/commits/12839d06ade515f817a2d4e5428bff898477415b,12839d06ade515f817a2d4e5428bff898477415b,tweaks
redbo,2011-01-31 01:29:04,https://api.github.com/repos/openstack/swift/git/commits/a4921169dd465af2f1a058358d1e85945781173e,a4921169dd465af2f1a058358d1e85945781173e,trunk merge
notmyname,2011-01-30 14:59:35,https://api.github.com/repos/openstack/swift/git/commits/a5d31b0d3a6206e14d3e55f37c43815fd309ad51,a5d31b0d3a6206e14d3e55f37c43815fd309ad51,removed extra import in account stats logger
redbo,2011-01-29 19:26:06,https://api.github.com/repos/openstack/swift/git/commits/625255da39d0dda986c47f4390343513a34e5943,625255da39d0dda986c47f4390343513a34e5943,remove pending_timeout references
redbo,2011-01-29 18:22:16,https://api.github.com/repos/openstack/swift/git/commits/68cda9b72446df358120bd9fed00a8804e960375,68cda9b72446df358120bd9fed00a8804e960375,refactor db open retry loop slightly
redbo,2011-01-29 03:26:26,https://api.github.com/repos/openstack/swift/git/commits/0649d9cc602baaacdd428e3455df4f6a9254e681,0649d9cc602baaacdd428e3455df4f6a9254e681,replication fixes for WAL
redbo,2011-01-29 03:00:01,https://api.github.com/repos/openstack/swift/git/commits/a4b6ae6e57ef2dc41c6123ef558c24a52158956d,a4b6ae6e57ef2dc41c6123ef558c24a52158956d,merge trunk
redbo,2011-01-29 01:40:55,https://api.github.com/repos/openstack/swift/git/commits/d83ce428afec5af180e5f85104da6242f8801fc1,d83ce428afec5af180e5f85104da6242f8801fc1,increase WAL autocheckpoint
redbo,2011-01-29 01:23:18,https://api.github.com/repos/openstack/swift/git/commits/4e100f6b325cbc5b2d83b4f3b622636ca25b069d,4e100f6b325cbc5b2d83b4f3b622636ca25b069d,retry connect refactor
redbo,2011-01-29 00:54:12,https://api.github.com/repos/openstack/swift/git/commits/a44635ca9767d8ee737e0189063cf3b5b3842285,a44635ca9767d8ee737e0189063cf3b5b3842285,support WAL journaling instead of .pending files
creiht,2011-01-28 16:11:57,https://api.github.com/repos/openstack/swift/git/commits/7a509c74ba40c07a548ff1a4bdd562ba1c581667,7a509c74ba40c07a548ff1a4bdd562ba1c581667,Updating version to indicate gamma release
creiht,2011-01-28 16:00:10,https://api.github.com/repos/openstack/swift/git/commits/988b20a302acb4572bd81e3faef3cbd2de31b9f5,988b20a302acb4572bd81e3faef3cbd2de31b9f5,Changing version to add gamma
redbo,2011-01-27 22:56:50,https://api.github.com/repos/openstack/swift/git/commits/fe4aa2abaec25306ba6c7d79a3595c62e38a2d65,fe4aa2abaec25306ba6c7d79a3595c62e38a2d65,bump up some rsync time limits and make rsync log to error when it gets a bad return code
redbo,2011-01-27 22:42:36,https://api.github.com/repos/openstack/swift/git/commits/148459abf15fe0982022365c6ee3065d5eb901a3,148459abf15fe0982022365c6ee3065d5eb901a3,fix typo
redbo,2011-01-27 21:02:53,https://api.github.com/repos/openstack/swift/git/commits/304ea48213f0251d9768aa3e6b7e64e15329103e,304ea48213f0251d9768aa3e6b7e64e15329103e,object replicator logging and increase rsync timeouts
redbo,2011-01-27 17:58:53,https://api.github.com/repos/openstack/swift/git/commits/d1f3dfb4ef682eec5eb349df14f96c9e529401f3,d1f3dfb4ef682eec5eb349df14f96c9e529401f3,add pybabel setup.py commands and initial .pot
redbo,2011-01-27 00:06:20,https://api.github.com/repos/openstack/swift/git/commits/ccaaa55b0e41b1602131eb9b889c4d62f1146ae0,ccaaa55b0e41b1602131eb9b889c4d62f1146ae0,refactor setup.py
redbo,2011-01-27 00:01:24,https://api.github.com/repos/openstack/swift/git/commits/9fcb3ad4f645e0c1c6f264b8ccc9bc4c5a9ed339,9fcb3ad4f645e0c1c6f264b8ccc9bc4c5a9ed339,add pybabel setup.py commands and initial .pot
dpgoetz,2011-01-26 23:56:47,https://api.github.com/repos/openstack/swift/git/commits/14084df8015357ef0f9259a572ef167559b01405,14084df8015357ef0f9259a572ef167559b01405,Removing bare excepts from code.
dpgoetz,2011-01-26 22:38:13,https://api.github.com/repos/openstack/swift/git/commits/3ea09dd0e6852ff144c9834cfd3994764a03f48d,3ea09dd0e6852ff144c9834cfd3994764a03f48d,merge to trunk
dpgoetz,2011-01-26 22:31:33,https://api.github.com/repos/openstack/swift/git/commits/86cb12036b4ee9554b0d011431ce0c928a6e9b4a,86cb12036b4ee9554b0d011431ce0c928a6e9b4a,removing blank excepts
gholt,2011-01-26 00:11:49,https://api.github.com/repos/openstack/swift/git/commits/edb4e90ebb00146eb15d8e9453960bc247908dbb,edb4e90ebb00146eb15d8e9453960bc247908dbb,container-updater: temporary account update suppression on errors
gholt,2011-01-25 23:24:09,https://api.github.com/repos/openstack/swift/git/commits/d41e77417c3bc8f3394eacd8e10f2587d672cd2c,d41e77417c3bc8f3394eacd8e10f2587d672cd2c,Merge from trunk
gholt,2011-01-25 23:21:49,https://api.github.com/repos/openstack/swift/git/commits/9b8a8b1791d900db79a529383d9a4544c4a05dfd,9b8a8b1791d900db79a529383d9a4544c4a05dfd,Update to load suppressions from both os.wait points
creiht,2011-01-25 16:31:51,https://api.github.com/repos/openstack/swift/git/commits/2467d8bb054f6c32d4e0e84a7cb17a4f1e654461,2467d8bb054f6c32d4e0e84a7cb17a4f1e654461,"Bumping version to 1.2.0 in prep for Bexar release, and updated AUTHORS file"
creiht,2011-01-25 16:19:38,https://api.github.com/repos/openstack/swift/git/commits/1eaae6a074d934299cfa691105e4b974733397c5,1eaae6a074d934299cfa691105e4b974733397c5,"Bumped version to 1.2 to get ready for release, and updated the AUTHORS file"
gholt,2011-01-25 15:21:46,https://api.github.com/repos/openstack/swift/git/commits/7c2fea435ad146c9eeadee315ec5881757ae1bea,7c2fea435ad146c9eeadee315ec5881757ae1bea,Fix tests to cleanup their /tmp dirs
gholt,2011-01-25 14:46:52,https://api.github.com/repos/openstack/swift/git/commits/22683b982127f79f214d5a0c5162c6b3475acbe2,22683b982127f79f214d5a0c5162c6b3475acbe2,pep8 and i18n fixes
gholt,2011-01-25 05:39:00,https://api.github.com/repos/openstack/swift/git/commits/f57250ae11314424b393c99e1bd9e9d0049f6434,f57250ae11314424b393c99e1bd9e9d0049f6434,pep8 and i18n fixes
gholt,2011-01-25 01:12:38,https://api.github.com/repos/openstack/swift/git/commits/cc00bd40e0726b89ff460053e7bfb54e5055c038,cc00bd40e0726b89ff460053e7bfb54e5055c038,Fix tests to cleanup their /tmp dirs
gholt,2011-01-25 00:28:22,https://api.github.com/repos/openstack/swift/git/commits/a734be95d381f7017ae96087161ea6fe2255c292,a734be95d381f7017ae96087161ea6fe2255c292,Merge from trunk
gholt,2011-01-25 00:25:51,https://api.github.com/repos/openstack/swift/git/commits/0a01bd07e28b36973871df472060bcb74802d10e,0a01bd07e28b36973871df472060bcb74802d10e,s3 compat additions for swauth
cwedgwood,2011-01-24 23:36:46,https://api.github.com/repos/openstack/swift/git/commits/509904a1b1e2d7e40edb182b356899c49271ef24,509904a1b1e2d7e40edb182b356899c49271ef24,Trivial output tweaks.
colinn,2011-01-24 23:31:46,https://api.github.com/repos/openstack/swift/git/commits/fdbefb62368ad1027875926eb0f259b0d5a4e775,fdbefb62368ad1027875926eb0f259b0d5a4e775,"The default reseller_prefix in swift is ""AUTH"". The domain_remap feature fails in this case because browsers tend to convert urls to lowercase and so by the time the remapped url reaches proxy-server, it is not correct and the request fails.

Changed the code so that if the account starts with the wrongly cased version of reseller prefix, it is corrected. reseller_prefix read from proxy-server.conf."
gholt,2011-01-24 23:16:48,https://api.github.com/repos/openstack/swift/git/commits/b1766acbaf2f53003a88e446b3cf696926bbde3a,b1766acbaf2f53003a88e446b3cf696926bbde3a,"In-depth documentation on paste.deploy configuration files.
get_logger now uses python's log routing to separate multiple log_names and log_facilities in the same process."
dpgoetz,2011-01-24 22:46:45,https://api.github.com/repos/openstack/swift/git/commits/b5805fbe795c4ab4cc62ae067e552e6616996dd7,b5805fbe795c4ab4cc62ae067e552e6616996dd7,Fix rate limiting (middleware and util function) to allow for catch up.  Configurable logging in auditor. Docs.
cwedgwood,2011-01-24 21:56:39,https://api.github.com/repos/openstack/swift/git/commits/615d90b80d9c5908a860519864eef4d75e492acf,615d90b80d9c5908a860519864eef4d75e492acf,"Show account names in output strings.

This helps when the output comes from concurrent workers doing the
checking as it's not strictly ordered."
gholt,2011-01-24 21:09:06,https://api.github.com/repos/openstack/swift/git/commits/264fc584b2979e4d6269c51e480efc4399c2f195,264fc584b2979e4d6269c51e480efc4399c2f195,swauth: log s3 in place of token when in use; changed a couple GETs to HEADs; pep8
colinn,2011-01-24 19:37:50,https://api.github.com/repos/openstack/swift/git/commits/2ccc0028518de26c4e8ce2b16d278ee5c7fc8b17,2ccc0028518de26c4e8ce2b16d278ee5c7fc8b17,fix small typo in domain_remap docs
colinn,2011-01-24 19:36:51,https://api.github.com/repos/openstack/swift/git/commits/1d43358faf5bcf8a4964076742ff28bffaee96ff,1d43358faf5bcf8a4964076742ff28bffaee96ff,"Merged lp:~notmyname/swift/domain_remap_prefix_case
changed domain_remap to use an exclusive list in reseller_prefixes. added tests"
notmyname,2011-01-24 19:24:47,https://api.github.com/repos/openstack/swift/git/commits/918d5feaa87aafce756bd5fdc8d64de38f74adc2,918d5feaa87aafce756bd5fdc8d64de38f74adc2,changed domain_remap to use an exclusive list in reseller_prefixes. added tests
gholt,2011-01-23 21:18:28,https://api.github.com/repos/openstack/swift/git/commits/4905c71669b270654aa02b69fdb4bc4d15ade7a4,4905c71669b270654aa02b69fdb4bc4d15ade7a4,More doc updates for logger stuff
gholt,2011-01-23 20:58:54,https://api.github.com/repos/openstack/swift/git/commits/9c3f4a17cf94771b98364e82cd230c3dc1f2afb0,9c3f4a17cf94771b98364e82cd230c3dc1f2afb0,get_logger now separates different log_levels
gholt,2011-01-23 20:32:10,https://api.github.com/repos/openstack/swift/git/commits/cc638e7ed5243496e1cde80cdf9dfa5af139678e,cc638e7ed5243496e1cde80cdf9dfa5af139678e,get_logger now uses python's log routing to separate multiple log_names in the same process
gholt,2011-01-23 18:50:55,https://api.github.com/repos/openstack/swift/git/commits/e274741f25d7da02199398d287a58961bba2190d,e274741f25d7da02199398d287a58961bba2190d,"Remove the misleading ""Always"""
gholt,2011-01-23 18:42:31,https://api.github.com/repos/openstack/swift/git/commits/778cb9dedc96f774242e38b301f35c89e002c0a0,778cb9dedc96f774242e38b301f35c89e002c0a0,In-depth documentation on paste.deploy configuration files
gholt,2011-01-22 18:01:43,https://api.github.com/repos/openstack/swift/git/commits/fe1befe91e5d178e0cf8303857edb43175fd2f3b,fe1befe91e5d178e0cf8303857edb43175fd2f3b,Doc update
dpgoetz,2011-01-22 00:51:19,https://api.github.com/repos/openstack/swift/git/commits/eeade255f37511b194c0b4730d74a36be66843f6,eeade255f37511b194c0b4730d74a36be66843f6,fix unit test
dpgoetz,2011-01-22 00:28:58,https://api.github.com/repos/openstack/swift/git/commits/d3f6e88baad176a5b6ad521ecb93b133eb13a04f,d3f6e88baad176a5b6ad521ecb93b133eb13a04f,fixes after code walk through
colinn,2011-01-21 22:32:43,https://api.github.com/repos/openstack/swift/git/commits/7964eee5b3ff9e3e762c846cf44e5b8570e3763d,7964eee5b3ff9e3e762c846cf44e5b8570e3763d,update proxy-server.conf-sample for domain_remap reseller prefix list
cwedgwood,2011-01-21 20:46:51,https://api.github.com/repos/openstack/swift/git/commits/e724580e6071a86d12a0993d0b5e6a0a5a1cba3a,e724580e6071a86d12a0993d0b5e6a0a5a1cba3a,"Fixes to get audit to run cleanly over datasets where people have i18n strings (ie. bit 7 set utf-8 bytes) in container and object names.

Arguably these fixes aren't the most elegant or complete, but for now it suffices to get things working until we re-factor things later.


Also tweak output from  foo... to ""foo"" (so cut & paste works a little better)."
gholt,2011-01-21 20:43:50,https://api.github.com/repos/openstack/swift/git/commits/217198b83b69095724c8cb8aae6746fbbfbe8556,217198b83b69095724c8cb8aae6746fbbfbe8556,container-updater: temporrar account update suppression on errors
colinn,2011-01-21 16:27:07,https://api.github.com/repos/openstack/swift/git/commits/d32def26fcd2db39b27e1ddf162f9fa6e9700cea,d32def26fcd2db39b27e1ddf162f9fa6e9700cea,"During a CNAME lookup, exception NXDOMAIN isn't caught by the check for DNSException, so need to also check for it."
colinn,2011-01-21 10:11:38,https://api.github.com/repos/openstack/swift/git/commits/643476c3b082e1960db8ce25c4bbfcbcff9f388c,643476c3b082e1960db8ce25c4bbfcbcff9f388c,changed domain_remap to handle multiple reseller prefixes
dpgoetz,2011-01-21 01:07:01,https://api.github.com/repos/openstack/swift/git/commits/189a3584f0fdff35ffd38e8194ce2e3d7a8de87a,189a3584f0fdff35ffd38e8194ce2e3d7a8de87a,pep8
dpgoetz,2011-01-21 01:05:44,https://api.github.com/repos/openstack/swift/git/commits/59f996b552d9ef1c8fe0ee7486c7143e3ebd38ec,59f996b552d9ef1c8fe0ee7486c7143e3ebd38ec,fixing rate limiting to allow for catch up
cwedgwood,2011-01-21 00:11:23,https://api.github.com/repos/openstack/swift/git/commits/4b4f07a0398d00e81db8b6eac648ec25dbc7b7ee,4b4f07a0398d00e81db8b6eac648ec25dbc7b7ee,Additional utf-8 encoding fixes to deal with containers.
cwedgwood,2011-01-20 22:57:06,https://api.github.com/repos/openstack/swift/git/commits/92e336462259d404eb42f9db88ca691c413faaac,92e336462259d404eb42f9db88ca691c413faaac,"Make sure we pass strings correctly to functions that will behave
badly otherwise (fix suggested by Chuck Thier).

Tweak account & container name output slightly (makes cut & paste
easier)."
colinn,2011-01-20 20:44:51,https://api.github.com/repos/openstack/swift/git/commits/1ab9614bfbd4b30fe778d1e5de46ffba46559772,1ab9614bfbd4b30fe778d1e5de46ffba46559772,Merged lp:~notmyname/swift/cname_exception_bug - added NoAnswer error catching
notmyname,2011-01-20 20:15:05,https://api.github.com/repos/openstack/swift/git/commits/74a39c0f26ea5d1770958afd2a445ef4d6aecdf1,74a39c0f26ea5d1770958afd2a445ef4d6aecdf1,added NoAnswer error catching
colinn,2011-01-20 16:01:37,https://api.github.com/repos/openstack/swift/git/commits/66bef83cbc9c77bb4930ed2d54cb88ed9fa649d8,66bef83cbc9c77bb4930ed2d54cb88ed9fa649d8,also catch NXDOMAIN exception
colinn,2011-01-20 15:50:55,https://api.github.com/repos/openstack/swift/git/commits/e76598fa58773e7ce2a2cdc40b7586262f3bb0c9,e76598fa58773e7ce2a2cdc40b7586262f3bb0c9,Wrapped long line
colinn,2011-01-20 11:55:52,https://api.github.com/repos/openstack/swift/git/commits/727a84d0dc13a1f6eb552d99cbea8441c4210430,727a84d0dc13a1f6eb552d99cbea8441c4210430,Check account starts with correct case version of reseller_prefix.
clayg,2011-01-20 05:43:23,https://api.github.com/repos/openstack/swift/git/commits/37ca9e569a828669db11cc0eaad7063d2c748a7c,37ca9e569a828669db11cc0eaad7063d2c748a7c,"more tests, still slow going"
clayg,2011-01-20 00:31:55,https://api.github.com/repos/openstack/swift/git/commits/e784f1c3a43d721341b4114df9d79d6ed5290c44,e784f1c3a43d721341b4114df9d79d6ed5290c44,obsolete PATH_TO_TEST_XFS
gholt,2011-01-20 00:26:40,https://api.github.com/repos/openstack/swift/git/commits/f623f910c98b7134e2f2911b04cb8da148845b5d,f623f910c98b7134e2f2911b04cb8da148845b5d,Updates to remove _ usage that is not i18n related
fujita,2011-01-19 23:26:42,https://api.github.com/repos/openstack/swift/git/commits/6f1cb46a4fb0bc3c7b609810cf81925ec5ff262e,6f1cb46a4fb0bc3c7b609810cf81925ec5ff262e,"This modifies http_connect() and http_connect_raw() to use the default ports if not given.

Modyfing only http_connect_raw is enough to fix swauth bins but both for symmetry."
gholt,2011-01-19 23:21:57,https://api.github.com/repos/openstack/swift/git/commits/9dd1e2ae8456e3624d332ce7c46c025fd0bada6c,9dd1e2ae8456e3624d332ce7c46c025fd0bada6c,Updates to remove _ usage that is not i18n related
clayg,2011-01-19 22:19:43,https://api.github.com/repos/openstack/swift/git/commits/e64e21dd01aee4fa20d2023e2b4cf7fb96d930bd,e64e21dd01aee4fa20d2023e2b4cf7fb96d930bd,pep8
clayg,2011-01-19 22:05:22,https://api.github.com/repos/openstack/swift/git/commits/29eddb8c24c1faf06e73c3ff6ba8d438645f66a2,29eddb8c24c1faf06e73c3ff6ba8d438645f66a2,"made tests play nice with standalone unittest, fixed some doc stuff"
fujita,2011-01-19 21:22:05,https://api.github.com/repos/openstack/swift/git/commits/b2673df12498781b5c6abc6faace73e588b83654,b2673df12498781b5c6abc6faace73e588b83654,"http_connect and http_connect_raw use the default http ports if no
port is given"
clayg,2011-01-19 20:18:37,https://api.github.com/repos/openstack/swift/git/commits/105315dfc40468fb31ca1a2e56f5b84e3d84ee41,105315dfc40468fb31ca1a2e56f5b84e3d84ee41,obsolete PATH_TO_TEST_XFS
redbo,2011-01-19 19:22:08,https://api.github.com/repos/openstack/swift/git/commits/80f635a924c51686ed3fe869b9ad8fea16e26584,80f635a924c51686ed3fe869b9ad8fea16e26584,trunk merge
clayg,2011-01-19 17:05:42,https://api.github.com/repos/openstack/swift/git/commits/efda6c0736323916f8403870fd734c2a4823d1cf,efda6c0736323916f8403870fd734c2a4823d1cf,mocked out xattr in test_proxy
redbo,2011-01-19 15:16:44,https://api.github.com/repos/openstack/swift/git/commits/56791413b87a815e7aa652e50bd3a7189b524f68,56791413b87a815e7aa652e50bd3a7189b524f68,break up that giant chunked put test
redbo,2011-01-19 14:28:22,https://api.github.com/repos/openstack/swift/git/commits/74e20dad892d2f61bcbf496dada4a4c5da1b72e4,74e20dad892d2f61bcbf496dada4a4c5da1b72e4,merge trunk
redbo,2011-01-19 14:22:32,https://api.github.com/repos/openstack/swift/git/commits/f68f199ae5803088e2e8a73cbaa3190d2e4a0beb,f68f199ae5803088e2e8a73cbaa3190d2e4a0beb,concurrent object PUT connections
redbo,2011-01-19 14:08:41,https://api.github.com/repos/openstack/swift/git/commits/0ebfa97c58c6592bcce5b80cc451bb34a1f744b8,0ebfa97c58c6592bcce5b80cc451bb34a1f744b8,error_limited refactor
redbo,2011-01-19 13:55:07,https://api.github.com/repos/openstack/swift/git/commits/89c318b2373a17390a86e8737fd3e5ce23b5473a,89c318b2373a17390a86e8737fd3e5ce23b5473a,make_requests refactor
redbo,2011-01-19 12:25:29,https://api.github.com/repos/openstack/swift/git/commits/b210cde178c0cee3504689613eeaf1f4805fcfec,b210cde178c0cee3504689613eeaf1f4805fcfec,bug fixes in concurrency
fujita,2011-01-19 06:23:53,https://api.github.com/repos/openstack/swift/git/commits/ea9ccf33b87488d9660e57c64bde0f980fa8617b,ea9ccf33b87488d9660e57c64bde0f980fa8617b,swauth: pep8 fixes
fujita,2011-01-19 06:23:29,https://api.github.com/repos/openstack/swift/git/commits/ba8255affcae6f8ed27071121ead1e755ed56ca5,ba8255affcae6f8ed27071121ead1e755ed56ca5,swauth: update the unit tests for s3api changes
fujita,2011-01-19 04:46:42,https://api.github.com/repos/openstack/swift/git/commits/72999be598c1cb3954eb176651d1322ece3399a5,72999be598c1cb3954eb176651d1322ece3399a5,Update swift3 docs for auth changes
redbo,2011-01-19 04:35:59,https://api.github.com/repos/openstack/swift/git/commits/0af0369389ecc73b6e0cec8e61e440e644df6391,0af0369389ecc73b6e0cec8e61e440e644df6391,concurrent object PUT streaming
fujita,2011-01-19 04:07:27,https://api.github.com/repos/openstack/swift/git/commits/1abfc07bc7ed44cba088e4e62d14f3df717754b7,1abfc07bc7ed44cba088e4e62d14f3df717754b7,Fixes swift3 middleware so that container listings work correctly with utf-8 encoded container names.
redbo,2011-01-19 03:56:13,https://api.github.com/repos/openstack/swift/git/commits/2fc5c401fa3b90135232a20d34362dffffff336c,2fc5c401fa3b90135232a20d34362dffffff336c,break up that chunked put test
fujita,2011-01-19 00:56:58,https://api.github.com/repos/openstack/swift/git/commits/98c201043c52893f3ec23b990b14c3441a2f77b3,98c201043c52893f3ec23b990b14c3441a2f77b3,"swauth: add s3api support

This changes handle_put_user() to put 'x-object-meta-account-id' to a
user object. The metadata includes an cfaccount like
x-container-meta-account-id.

The above enables swauth to avoid issuing two HTTP requests per single
S3 request, that is, swauth get the password and cfaccount from the
account and user by issuing 'GET /v1/(auth_account)/(account)/(user)'

If swauth can't get 'x-object-meta-account-id' metadata from a user
object (the existing user objects), it issues 'GET
/v1/(auth_account)/(account)' to get the cfaccount."
fujita,2011-01-18 23:41:11,https://api.github.com/repos/openstack/swift/git/commits/7e392b70e9a7c5f326714f313c24e780ca5efd27,7e392b70e9a7c5f326714f313c24e780ca5efd27,s3api: update the comment for the id scheme change
notmyname,2011-01-18 21:41:44,https://api.github.com/repos/openstack/swift/git/commits/97053abdd7ed48fb43737651ba85b93be9055363,97053abdd7ed48fb43737651ba85b93be9055363,"Stats system access log processor now allows for extra log fields to be at the end of the access log lines.


This allows the proxy server to freely append logged fields to log messages without breaking the stats system."
gholt,2011-01-18 21:37:34,https://api.github.com/repos/openstack/swift/git/commits/6024b39314e25e86e89eae4f7fb6540c05ef954c,6024b39314e25e86e89eae4f7fb6540c05ef954c,client.py: Reset of streams during upload retries
redbo,2011-01-18 21:36:46,https://api.github.com/repos/openstack/swift/git/commits/20c23dfcbd3ef91fcc782fe6c446608f6ddf73ac,20c23dfcbd3ef91fcc782fe6c446608f6ddf73ac,shuffle nodes and cache files for better public serving performance
redbo,2011-01-18 20:55:19,https://api.github.com/repos/openstack/swift/git/commits/9ec4cf00235e6db8ab163e627562aec1a73e7d04,9ec4cf00235e6db8ab163e627562aec1a73e7d04,shuffle nodes and cache files for public access performance
cwedgwood,2011-01-18 20:41:42,https://api.github.com/repos/openstack/swift/git/commits/fe8c09999d8093ca195e3a3d160e9d0afacb52e6,fe8c09999d8093ca195e3a3d160e9d0afacb52e6,More fixes.
cwedgwood,2011-01-18 20:08:22,https://api.github.com/repos/openstack/swift/git/commits/8a5f21b3ac3dfc6ab90cd932c1763822864e8339,8a5f21b3ac3dfc6ab90cd932c1763822864e8339,"Fix output formatting (missing tuple).

Fix to be robust when container and object counts are None (this
happens if accounts can't be located)."
fujita,2011-01-18 19:01:58,https://api.github.com/repos/openstack/swift/git/commits/5582fcd69bcd0b46f8c69fb7e99f3be1404d4fd9,5582fcd69bcd0b46f8c69fb7e99f3be1404d4fd9,Fixes devauth error if s3 auth fails
redbo,2011-01-18 15:21:45,https://api.github.com/repos/openstack/swift/git/commits/50f3c9379b65c1f331d950bbf8d4ddce88e25622,50f3c9379b65c1f331d950bbf8d4ddce88e25622,modify default_swift_cluster option format
fujita,2011-01-18 05:44:00,https://api.github.com/repos/openstack/swift/git/commits/ec32c55e4069d4ee16cfae1b058355d26b85f1aa,ec32c55e4069d4ee16cfae1b058355d26b85f1aa,s3api: fix devauth auth failure handling
fujita,2011-01-18 01:55:26,https://api.github.com/repos/openstack/swift/git/commits/48bade1a11bc61280e2889072299a7483a58f3b2,48bade1a11bc61280e2889072299a7483a58f3b2,s3api: fix unicode name container and object
fujita,2011-01-17 23:01:54,https://api.github.com/repos/openstack/swift/git/commits/0996cd9b3a038db610239b1d410e1ffc3b9b5ef7,0996cd9b3a038db610239b1d410e1ffc3b9b5ef7,"s3api: fix AWSAccessKeyId

We use cfaccount as AWSAccessKeyId (something like
AUTH_89308df71f274e33af17779606f08fa0). However, users with the same
account use the same cfaccount. In such case, we can't know which
password should be used as a secret key to calculate the HMAC.

This changes AWSAccessKeyId to the combination of account and user:

Authorization: AWS test:tester:xQE0diMbLRepdf3YB+FIEXAMPLE=

The auth validates the HMAC and sends a cfaccount back to the
proxy. The proxy rewrites the path with the cfaccount."
gholt,2011-01-17 22:44:55,https://api.github.com/repos/openstack/swift/git/commits/56738b161fe024c8f5725cb382dd61a29d77fa64,56738b161fe024c8f5725cb382dd61a29d77fa64,client.py: Dead code removal
gholt,2011-01-17 22:40:34,https://api.github.com/repos/openstack/swift/git/commits/eed8c670d0f109248d8f29faf7649123f7bdfc4d,eed8c670d0f109248d8f29faf7649123f7bdfc4d,Merged from trunk
gholt,2011-01-17 22:36:28,https://api.github.com/repos/openstack/swift/git/commits/a623aa5be57b103b41bc20afb954a6a5f0effc78,a623aa5be57b103b41bc20afb954a6a5f0effc78,client.py: Reset of streams during upload retries
creiht,2011-01-17 22:16:52,https://api.github.com/repos/openstack/swift/git/commits/6fac078f7199123014f7cea3edffc6aa12a7c90e,6fac078f7199123014f7cea3edffc6aa12a7c90e,Updates client.py to green HTTPS connections if eventlet is available
creiht,2011-01-17 22:08:07,https://api.github.com/repos/openstack/swift/git/commits/9b702c64df53f66ee46d4007c62333dab2d4bca9,9b702c64df53f66ee46d4007c62333dab2d4bca9,Removed the bare excepts
creiht,2011-01-17 21:51:09,https://api.github.com/repos/openstack/swift/git/commits/c63e6c7c9b5c9b7f184b66d74a1d74cbfde2efbd,c63e6c7c9b5c9b7f184b66d74a1d74cbfde2efbd,Fixes issue of HTTPS not being greened
redbo,2011-01-17 21:49:48,https://api.github.com/repos/openstack/swift/git/commits/2fac1d53efec34a2c51a80741f935c384fde5ec9,2fac1d53efec34a2c51a80741f935c384fde5ec9,modify default_swift_cluster option format
notmyname,2011-01-17 17:07:58,https://api.github.com/repos/openstack/swift/git/commits/d8810a1ed7e31a16ffc5e31a7c3e9445e463ce82,d8810a1ed7e31a16ffc5e31a7c3e9445e463ce82,access processor now handles extra fields in the log line
fujita,2011-01-17 06:51:59,https://api.github.com/repos/openstack/swift/git/commits/d7b59e0b94433ce928ccb7e5c7fd1a49b2d0ff62,d7b59e0b94433ce928ccb7e5c7fd1a49b2d0ff62,s3api: update unit tests for AWSAccessKeyId change
fujita,2011-01-17 06:42:20,https://api.github.com/repos/openstack/swift/git/commits/af1813ba4e9ad4362072e69d5841f9dff550bd1e,af1813ba4e9ad4362072e69d5841f9dff550bd1e,"s3api: fix AWSAccessKeyId
  
We use cfaccount as AWSAccessKeyId (something like
AUTH_89308df71f274e33af17779606f08fa0). However, users with the same
account use the same cfaccount. In such case, we can't know which
password should be used as a secret key to calculate the HMAC.
  
This changes AWSAccessKeyId to the combination of account and user:
  
Authorization: AWS test:tester:xQE0diMbLRepdf3YB+FIEXAMPLE=
  
The auth validates the HMAC and sends a cfaccount back to the
proxy. The proxy rewrites the path with the cfaccount."
redbo,2011-01-16 14:50:29,https://api.github.com/repos/openstack/swift/git/commits/4741fcd4410f6d7f728308efe425b9bfbe5abdf7,4741fcd4410f6d7f728308efe425b9bfbe5abdf7,proxy refactor
redbo,2011-01-16 09:52:08,https://api.github.com/repos/openstack/swift/git/commits/67de0c88f456a5bd8a812fc8cbfd7fad209a7ab4,67de0c88f456a5bd8a812fc8cbfd7fad209a7ab4,ipv6 support
redbo,2011-01-14 20:56:52,https://api.github.com/repos/openstack/swift/git/commits/b3c914e8752b90a02be8e62a772b630e953ce2c0,b3c914e8752b90a02be8e62a772b630e953ce2c0,Execute object server fsyncs in a thread pool so they don't hold up the workers.
creiht,2011-01-14 20:41:52,https://api.github.com/repos/openstack/swift/git/commits/1a17788071ed59ff0fcdbbbbda330a4e9b4a2a70,1a17788071ed59ff0fcdbbbbda330a4e9b4a2a70,Add docstrings and pointers in the docs for swift3
redbo,2011-01-14 20:30:38,https://api.github.com/repos/openstack/swift/git/commits/a4de88c3b4e4cc47291cec147f8eae131a2abd04,a4de88c3b4e4cc47291cec147f8eae131a2abd04,Execute fsyncs in a thread pool.
creiht,2011-01-14 20:30:05,https://api.github.com/repos/openstack/swift/git/commits/782b98b5bb29f9555cb96fa5738b0d047d75ffb0,782b98b5bb29f9555cb96fa5738b0d047d75ffb0,Moved the main middleware docs to the module level
creiht,2011-01-14 19:49:05,https://api.github.com/repos/openstack/swift/git/commits/e2c0a238396233c1107b94ef54e397434ffe2f7d,e2c0a238396233c1107b94ef54e397434ffe2f7d,Added doc strings and pointers to docs for swift3
redbo,2011-01-14 18:07:00,https://api.github.com/repos/openstack/swift/git/commits/d0651b914db773262b68fd4804097b3a5a9cc532,d0651b914db773262b68fd4804097b3a5a9cc532,Support more query args and headers in the swift3 middleware
redbo,2011-01-14 14:41:52,https://api.github.com/repos/openstack/swift/git/commits/2dc0ae3a87567753a9a266bee175f715961b11ed,2dc0ae3a87567753a9a266bee175f715961b11ed,hopefully last of the i18n gettext calls
redbo,2011-01-14 11:30:17,https://api.github.com/repos/openstack/swift/git/commits/4cf7ec25d752cac2bb21cc87fc5cf206a63face7,4cf7ec25d752cac2bb21cc87fc5cf206a63face7,missed things
redbo,2011-01-14 11:17:33,https://api.github.com/repos/openstack/swift/git/commits/fbb0241df493849b3d6fb148a664aa147724f9fd,fbb0241df493849b3d6fb148a664aa147724f9fd,few more from proxy
cwedgwood,2011-01-14 09:06:49,https://api.github.com/repos/openstack/swift/git/commits/583c9cf06912b0c945dfb250e527b59c8e348d09,583c9cf06912b0c945dfb250e527b59c8e348d09,Small fixes to make audit work robustly in the case where people liked to put funny chars in their container and object names.
redbo,2011-01-14 08:45:39,https://api.github.com/repos/openstack/swift/git/commits/867a6ab0c381e7ca955ec0ee4a5a2ddb15a95b0a,867a6ab0c381e7ca955ec0ee4a5a2ddb15a95b0a,i18n stuff
redbo,2011-01-14 08:41:47,https://api.github.com/repos/openstack/swift/git/commits/c9bdf94ce640fb43eeb012150945549e671d9e33,c9bdf94ce640fb43eeb012150945549e671d9e33,"use python-netifaces to get local IP addresses.
I'll add that to the package depends right after this is merged."
redbo,2011-01-14 08:33:10,https://api.github.com/repos/openstack/swift/git/commits/5189a3e0b57659fa91b7a974e3ba10c8fc587fe3,5189a3e0b57659fa91b7a974e3ba10c8fc587fe3,simplify put response
redbo,2011-01-14 08:26:50,https://api.github.com/repos/openstack/swift/git/commits/bd2125c9de9423cfa06ce403d1214ce4e687dd38,bd2125c9de9423cfa06ce403d1214ce4e687dd38,PUT headers
cwedgwood,2011-01-14 07:17:36,https://api.github.com/repos/openstack/swift/git/commits/e618dd567f44715e857dd49fc6a86965f83e0e96,e618dd567f44715e857dd49fc6a86965f83e0e96,"Don't unnecessarily quote account, container or object values.

This fixed the problem where containers or objects with characters
that need quoting can't be audited because they aren't found."
redbo,2011-01-14 05:47:44,https://api.github.com/repos/openstack/swift/git/commits/15dabb6da0038db0cb0eb49f3c82242146a6ff29,15dabb6da0038db0cb0eb49f3c82242146a6ff29,typo
redbo,2011-01-14 05:43:23,https://api.github.com/repos/openstack/swift/git/commits/0149e962d49e7b3b46c088796df509da47293da4,0149e962d49e7b3b46c088796df509da47293da4,swift3 bucket listing args
redbo,2011-01-14 05:26:50,https://api.github.com/repos/openstack/swift/git/commits/0fb41841fa11f32ec629547b5808e6b673063f59,0fb41841fa11f32ec629547b5808e6b673063f59,pep8 fixes for swift3 middleware
gholt,2011-01-14 05:11:51,https://api.github.com/repos/openstack/swift/git/commits/824afde3d0513ad683da156b8cdc9c66a87e0723,824afde3d0513ad683da156b8cdc9c66a87e0723,Fix for GETing a manifest that has an empty listing
redbo,2011-01-14 04:14:25,https://api.github.com/repos/openstack/swift/git/commits/0f8089ccdfd56e2a7db3c5ae3f46081fa1e12e8f,0f8089ccdfd56e2a7db3c5ae3f46081fa1e12e8f,unit tests
redbo,2011-01-14 04:10:52,https://api.github.com/repos/openstack/swift/git/commits/ebd703fff056554228a3b2749e9a5c01aa102e98,ebd703fff056554228a3b2749e9a5c01aa102e98,pep8 and xml escapes
fujita,2011-01-14 03:46:55,https://api.github.com/repos/openstack/swift/git/commits/80d6a23f54866580664887bb252eabfeb1451eaa,80d6a23f54866580664887bb252eabfeb1451eaa,"Seems that the following operations work with boto:

- List of buckets
- Create bucket
- Delete bucket
- List of objects in a bucket
- PUT object
- GET object
- DELETE object
- HEAD object

Swift account (something like AUTH_89308df71f274e33af17779606f08fa0) is used as AWSAccessKeyId.
Swift password (passed to swift-auth-add-user) is used as AWS Secret Access Key.

S3 client concatenates selected elements of a request to form a string, uses AWS Secret Access Key to calculate the HMAC of that string, and then put the HMAC value to the HTTPAuthorization header.

The proxy server sends the account info, the formed string of a request, and the HMAC value included with the request to the auth server. The auth server finds AWS Secret Access Key from the account info, use the key to calculate the HMAC of the string, and sees if it matches the HMAC value."
redbo,2011-01-13 21:00:51,https://api.github.com/repos/openstack/swift/git/commits/e0987d609b6ee106907e0410222368eeb4abaed3,e0987d609b6ee106907e0410222368eeb4abaed3,netifaces
fujita,2011-01-13 18:42:21,https://api.github.com/repos/openstack/swift/git/commits/ec58618eb3b1b73e118dbcaa52d8d3d7f583ed29,ec58618eb3b1b73e118dbcaa52d8d3d7f583ed29,Merging the upstream
gholt,2011-01-13 17:26:48,https://api.github.com/repos/openstack/swift/git/commits/4d5d2d5aa400af782b387ade9c1b0ffe5db4fc17,4d5d2d5aa400af782b387ade9c1b0ffe5db4fc17,Shuffle the partitions to reassign on a ring rebalance.
gholt,2011-01-13 17:05:44,https://api.github.com/repos/openstack/swift/git/commits/d6aaba670bca6285cf1578e478df5d9f93b0ec68,d6aaba670bca6285cf1578e478df5d9f93b0ec68,Shuffle the partitions to reassign on a ring rebalance.
fujita,2011-01-13 12:05:17,https://api.github.com/repos/openstack/swift/git/commits/72d6059bba14afb2ef771a6052aa415d09e27824,72d6059bba14afb2ef771a6052aa415d09e27824,s3api: add more unit tests
fujita,2011-01-13 11:31:28,https://api.github.com/repos/openstack/swift/git/commits/c806569373f53e5fa4a9ed3e75c660a6793ad6e2,c806569373f53e5fa4a9ed3e75c660a6793ad6e2,s3api: add unit tests
redbo,2011-01-13 02:41:56,https://api.github.com/repos/openstack/swift/git/commits/9a06d73f0f2c0fa459f7331e1d55280ad919d45a,9a06d73f0f2c0fa459f7331e1d55280ad919d45a,small logging fixes
redbo,2011-01-13 01:32:38,https://api.github.com/repos/openstack/swift/git/commits/db7111d00996ea430d5cfb7cff64586ae205f142,db7111d00996ea430d5cfb7cff64586ae205f142,fix
redbo,2011-01-13 00:59:42,https://api.github.com/repos/openstack/swift/git/commits/52f691bc6f2fda6e9bee474dbb38f7af54973b09,52f691bc6f2fda6e9bee474dbb38f7af54973b09,i18n
redbo,2011-01-12 23:46:03,https://api.github.com/repos/openstack/swift/git/commits/1955cf780d4762c5d05b73d95e140f19a1effdfd,1955cf780d4762c5d05b73d95e140f19a1effdfd,object replicator logging fixes
gholt,2011-01-12 16:40:55,https://api.github.com/repos/openstack/swift/git/commits/41b1452ab70feaa400a3064cb2c9bae9617b63e9,41b1452ab70feaa400a3064cb2c9bae9617b63e9,Fix for GETing a manifest that has an empty listing
dpgoetz,2011-01-12 01:41:46,https://api.github.com/repos/openstack/swift/git/commits/296255761264547c2616950a1e9a963fe970943f,296255761264547c2616950a1e9a963fe970943f,Small bug with the object replicator error logging.
dpgoetz,2011-01-11 17:11:58,https://api.github.com/repos/openstack/swift/git/commits/995010cf09e715da33e982d74b7f82c6473f36f2,995010cf09e715da33e982d74b7f82c6473f36f2,"Rate limit the object auditor, add unit tests, and fix a bug in the location generator."
notmyname,2011-01-11 15:31:54,https://api.github.com/repos/openstack/swift/git/commits/4f7f47730ee6138a2ed87b9ec424f086028d6311,4f7f47730ee6138a2ed87b9ec424f086028d6311,server-side object copy now also copies the content-type of the source object if the content type is not given in the copy request
dpgoetz,2011-01-11 09:24:05,https://api.github.com/repos/openstack/swift/git/commits/9746823e32dc0c9518312048c2c691d33805a19f,9746823e32dc0c9518312048c2c691d33805a19f,fixing error log bug
notmyname,2011-01-11 06:11:20,https://api.github.com/repos/openstack/swift/git/commits/0f7d5d5a804055476a0bcd27a9ec4174956157c2,0f7d5d5a804055476a0bcd27a9ec4174956157c2,merged with trunk
notmyname,2011-01-11 06:08:35,https://api.github.com/repos/openstack/swift/git/commits/7dc0753f1e8ee5c8b02564bb1bd900edef0e01ff,7dc0753f1e8ee5c8b02564bb1bd900edef0e01ff,fixed and tested charset on content types
notmyname,2011-01-11 05:11:46,https://api.github.com/repos/openstack/swift/git/commits/2ec7e8705e7fcfa68ba39bc200c2c32b78a1dbde,2ec7e8705e7fcfa68ba39bc200c2c32b78a1dbde,I did not know the wonders of test_chunked_put_and_a_bit_more
gholt,2011-01-11 03:57:26,https://api.github.com/repos/openstack/swift/git/commits/96379209a56ba732221814586c63c3aaf8c81895,96379209a56ba732221814586c63c3aaf8c81895,"Change copies of x-object-manifest objects to copy the actual contents of the object, not just the manifest marker itself."
gholt,2011-01-11 03:32:34,https://api.github.com/repos/openstack/swift/git/commits/cd39140c69275032e959b5b0a5b05d186edde020,cd39140c69275032e959b5b0a5b05d186edde020,Incorporated Swauth into Swift as an optional DevAuth replacement.
dpgoetz,2011-01-11 01:22:33,https://api.github.com/repos/openstack/swift/git/commits/f18e20ab38046b8dd2c7df93b70ec0187d511e0b,f18e20ab38046b8dd2c7df93b70ec0187d511e0b,"merging to trunk, otra"
dpgoetz,2011-01-11 01:11:06,https://api.github.com/repos/openstack/swift/git/commits/9c0b1c95b1f18e9b8d398b3e75dcaba483ced3e3,9c0b1c95b1f18e9b8d398b3e75dcaba483ced3e3,merging to trunk
gholt,2011-01-10 20:37:49,https://api.github.com/repos/openstack/swift/git/commits/fb5a58a061688faed337b3113f5821d9e449a8c3,fb5a58a061688faed337b3113f5821d9e449a8c3,Fp leak fix
gholt,2011-01-10 19:33:19,https://api.github.com/repos/openstack/swift/git/commits/902dc6a5c26acef92532158f224e2436aea15e6e,902dc6a5c26acef92532158f224e2436aea15e6e,Fixed bug with using new internal url
gholt,2011-01-10 16:43:38,https://api.github.com/repos/openstack/swift/git/commits/5604404d8dffd244a0be5a1d0dc6fe74f149a7df,5604404d8dffd244a0be5a1d0dc6fe74f149a7df,Added public/private urls for swauth default swift cluster setting
gholt,2011-01-08 00:39:08,https://api.github.com/repos/openstack/swift/git/commits/01c5fec12e39dede2337125f04757c1d3cd08e26,01c5fec12e39dede2337125f04757c1d3cd08e26,Merge from trunk
clayg,2011-01-07 21:17:29,https://api.github.com/repos/openstack/swift/git/commits/ff0e62d914d79c02f379992a0afb14c46c617711,ff0e62d914d79c02f379992a0afb14c46c617711,reworked tnx logging
gholt,2011-01-07 17:25:59,https://api.github.com/repos/openstack/swift/git/commits/8f799f577a021b7f649f7532ab3c174014ad45e7,8f799f577a021b7f649f7532ab3c174014ad45e7,More error reporting
fujita,2011-01-06 09:51:26,https://api.github.com/repos/openstack/swift/git/commits/d17b7c9956a7e49db7d847bab4b20ce0c93de4a5,d17b7c9956a7e49db7d847bab4b20ce0c93de4a5,rename the module from s3.py to swift3.py (suggested by Chuck Thier)
fujita,2011-01-06 09:08:48,https://api.github.com/repos/openstack/swift/git/commits/f91070442e8677aa749ef8a61795cff7f7a29ee7,f91070442e8677aa749ef8a61795cff7f7a29ee7,"s3api: fix GETorHEAD

- replace 'content-length and 'content-encoding' with 'Content-Length
  and 'Content-Encoding' respectively.

- return 'Content-Type' and 'last-modified' headers too.

- remove 'Content-MD5' since seems that S3 doesn't use it for GET or
  HEAD response."
notmyname,2011-01-05 22:49:43,https://api.github.com/repos/openstack/swift/git/commits/08523977f5ad78d138d116f22b5bb2003279ba52,08523977f5ad78d138d116f22b5bb2003279ba52,changed the order of setting the charset and content_type to ensure that charset isn't added to the object
notmyname,2011-01-05 22:24:14,https://api.github.com/repos/openstack/swift/git/commits/26573e43a659a618d79b4b2a9b7d674d5b7e0812,26573e43a659a618d79b4b2a9b7d674d5b7e0812,object copy now copies the content type
redbo,2011-01-05 22:01:03,https://api.github.com/repos/openstack/swift/git/commits/fe0d952374e92de5a4eb6bb0b9fb53d8b1c0bf00,fe0d952374e92de5a4eb6bb0b9fb53d8b1c0bf00,further cleanup
redbo,2011-01-05 21:54:45,https://api.github.com/repos/openstack/swift/git/commits/4338494174be0d2dc60b7dc3bf175873a6a02236,4338494174be0d2dc60b7dc3bf175873a6a02236,GETorHEAD cleanup
gholt,2011-01-05 20:06:55,https://api.github.com/repos/openstack/swift/git/commits/84d24240e5b55cdc4fa0c24509de847265593e9d,84d24240e5b55cdc4fa0c24509de847265593e9d,Test updates suggested by glange
clayg,2011-01-05 19:52:33,https://api.github.com/repos/openstack/swift/git/commits/30fd2dd0f229d95b53d6efaff4b2792d5f49373b,30fd2dd0f229d95b53d6efaff4b2792d5f49373b,revert x-cf-trans-id rename
clayg,2011-01-05 17:48:58,https://api.github.com/repos/openstack/swift/git/commits/9786ab6687e018b3622722e379da68b64cc4af49,9786ab6687e018b3622722e379da68b64cc4af49,this is to make gholt happy; well less unhappy
clayg,2011-01-05 17:15:21,https://api.github.com/repos/openstack/swift/git/commits/25bf6ebfc3b979a54a2f731a5d1dfd5abb51b91b,25bf6ebfc3b979a54a2f731a5d1dfd5abb51b91b,moved the txn_id read into a utils helper
gholt,2011-01-05 16:40:40,https://api.github.com/repos/openstack/swift/git/commits/75c25810050fd8b9552c3863cc3360d6b54c6ec1,75c25810050fd8b9552c3863cc3360d6b54c6ec1,Make Swauth return 404 on split_path exceptions
gholt,2011-01-05 16:37:55,https://api.github.com/repos/openstack/swift/git/commits/28a7d69e559756cfffcb8b9a94573fe9333d1aa8,28a7d69e559756cfffcb8b9a94573fe9333d1aa8,Fix bug where trying to access an account name that exactly matched the reseller_prefix would raise an exception
gholt,2011-01-05 16:14:31,https://api.github.com/repos/openstack/swift/git/commits/1b735e63434a080e234c1f99e627406a2512b210,1b735e63434a080e234c1f99e627406a2512b210,Fix to limit account DELETEs to just reseller admins
clayg,2011-01-05 15:32:19,https://api.github.com/repos/openstack/swift/git/commits/6c1bf02a620c6cb9ccc3a72fa4b4154b6731147e,6c1bf02a620c6cb9ccc3a72fa4b4154b6731147e,pep8 fo' realz
gholt,2011-01-05 15:17:36,https://api.github.com/repos/openstack/swift/git/commits/1665568458b57359b4c95096ddfb698a5746af7a,1665568458b57359b4c95096ddfb698a5746af7a,Merge from trunk
gholt,2011-01-05 15:16:17,https://api.github.com/repos/openstack/swift/git/commits/ac250dd950d1acec8ff8afad5c26f2fe3ccd2948,ac250dd950d1acec8ff8afad5c26f2fe3ccd2948,Merge from trunk
fujita,2011-01-05 02:48:43,https://api.github.com/repos/openstack/swift/git/commits/b58037c3aeb6d2858cd3e04b0b08a9aa761bac63,b58037c3aeb6d2858cd3e04b0b08a9aa761bac63,s3api: clean up the response handling
annabellebertooch,2011-01-05 01:27:13,https://api.github.com/repos/openstack/swift/git/commits/58ff9db8e8587c6328b685795cc5c17b5acf3077,58ff9db8e8587c6328b685795cc5c17b5acf3077,Changed all copyright notices I could find in .py and .rst files for 2011. Happy new year and all that.
annabellebertooch,2011-01-04 23:34:43,https://api.github.com/repos/openstack/swift/git/commits/88234271615264095e80c03e7970631a9b743c02,88234271615264095e80c03e7970631a9b743c02,Changed copyright notices on py files and the single rst file with a copyright notice
clayg,2011-01-04 22:12:56,https://api.github.com/repos/openstack/swift/git/commits/68a9acf9b8e85c8465c883ffd9ac9cbdbde5b7f5,68a9acf9b8e85c8465c883ffd9ac9cbdbde5b7f5,pep8
clayg,2011-01-04 22:00:01,https://api.github.com/repos/openstack/swift/git/commits/97028e0b9c2523c9e35854957a8e49c544b1f0ba,97028e0b9c2523c9e35854957a8e49c544b1f0ba,"fixed missing NamedLogger import in bin/swift-bench, refactored
LogAdapter.tnx_id so that it works with multiple calls to get_logger, fixed
common.middleware.catch_errors to only call get_logger if it needs too, renamed
x-cf-trans-id to x-swift-tnx-id"
gholt,2011-01-04 20:51:57,https://api.github.com/repos/openstack/swift/git/commits/a71a1a32a994be896c038b370a877378f30d735d,a71a1a32a994be896c038b370a877378f30d735d,Removed extraneous print
gholt,2011-01-04 20:04:18,https://api.github.com/repos/openstack/swift/git/commits/68cc8fba9d3ba34a8183ada895e7dd3270714c3d,68cc8fba9d3ba34a8183ada895e7dd3270714c3d,Fix a couple bugs; rework the rework a bit more; PEP8
fujita,2011-01-04 09:18:58,https://api.github.com/repos/openstack/swift/git/commits/6e555802bbfa21c9e138211d4ba26cf6fb86feff,6e555802bbfa21c9e138211d4ba26cf6fb86feff,add S3 API support
dpgoetz,2011-01-03 18:25:08,https://api.github.com/repos/openstack/swift/git/commits/2308ecce7a1223dce7ede2aabc2ea061fd13163b,2308ecce7a1223dce7ede2aabc2ea061fd13163b,fix i18n logs
dpgoetz,2010-12-30 20:30:04,https://api.github.com/repos/openstack/swift/git/commits/f811be80ff0bc4a124440f22aba6f725a4e4ad24,f811be80ff0bc4a124440f22aba6f725a4e4ad24,"changes after peer review, pep8 and eventlet.sleep"
gholt,2010-12-30 16:58:41,https://api.github.com/repos/openstack/swift/git/commits/7fda5eb0e1263bf18716d7550559c89fb83bad4a,7fda5eb0e1263bf18716d7550559c89fb83bad4a,Merge from trunk
gholt,2010-12-30 16:47:52,https://api.github.com/repos/openstack/swift/git/commits/1e34f1afe87477e88d9b8d6dcd44cff79d0baaba,1e34f1afe87477e88d9b8d6dcd44cff79d0baaba,Merge from trunk
notmyname,2010-12-30 15:47:18,https://api.github.com/repos/openstack/swift/git/commits/c181f261398d9d3a6e7f2e22ef06e17921651692,c181f261398d9d3a6e7f2e22ef06e17921651692,fixes variable collision in stats system
gholt,2010-12-29 22:47:16,https://api.github.com/repos/openstack/swift/git/commits/61c87661ec3d90d0f257d5410705f3c713e1be25,61c87661ec3d90d0f257d5410705f3c713e1be25,PEP8 Updates
gholt,2010-12-29 20:47:22,https://api.github.com/repos/openstack/swift/git/commits/42be85a7f92702b5590f52bec305e1a0c082a006,42be85a7f92702b5590f52bec305e1a0c082a006,PEP8 Updates
clayg,2010-12-29 20:32:22,https://api.github.com/repos/openstack/swift/git/commits/feac70a4bec3645c2ca0a25c275fe840aa7af2f9,feac70a4bec3645c2ca0a25c275fe840aa7af2f9,added gettext import/install to swift/__init__.py
clayg,2010-12-29 19:34:46,https://api.github.com/repos/openstack/swift/git/commits/e09c25be1adcc79a22bf08f00712e5dd8780644c,e09c25be1adcc79a22bf08f00712e5dd8780644c,merged gholts changes
gholt,2010-12-29 20:00:08,https://api.github.com/repos/openstack/swift/git/commits/57970bdeb59ac17d17a59fa2d2dcefac729eaf0d,57970bdeb59ac17d17a59fa2d2dcefac729eaf0d,Cleaned up the bins; patched the broken test (when run standalone)
clayg,2010-12-29 19:34:18,https://api.github.com/repos/openstack/swift/git/commits/e524eab60d0cfabef1089a19986459406831709a,e524eab60d0cfabef1089a19986459406831709a,merged trunk
clayg,2010-12-29 19:14:43,https://api.github.com/repos/openstack/swift/git/commits/e54846d850b66869811b84a71ecd93e66badaba5,e54846d850b66869811b84a71ecd93e66badaba5,made this i18n importing sane
clayg,2010-12-29 06:01:30,https://api.github.com/repos/openstack/swift/git/commits/ef487c65ef1ed6b4056459c563bdc78f9d379a98,ef487c65ef1ed6b4056459c563bdc78f9d379a98,good start on TestSwiftInitClass
dpgoetz,2010-12-29 04:31:38,https://api.github.com/repos/openstack/swift/git/commits/8026f86b3e1cdac4273f7c779610652b9f52fca1,8026f86b3e1cdac4273f7c779610652b9f52fca1,fix for 0 incr_by
dpgoetz,2010-12-29 01:58:17,https://api.github.com/repos/openstack/swift/git/commits/b46392911c9b3fc3a7068d606338cbea3a8c0bc8,b46392911c9b3fc3a7068d606338cbea3a8c0bc8,pep8 and merge fixes
dpgoetz,2010-12-28 23:27:25,https://api.github.com/repos/openstack/swift/git/commits/1ef05f313cdf832c7fa41f5e5d08f7ade4fe72b8,1ef05f313cdf832c7fa41f5e5d08f7ade4fe72b8,clearing out stats for forever mode
dpgoetz,2010-12-28 23:26:42,https://api.github.com/repos/openstack/swift/git/commits/6c86920ccda6b5a2703fcb912b61865341a2355f,6c86920ccda6b5a2703fcb912b61865341a2355f,merging to trunk
dpgoetz,2010-12-28 22:54:00,https://api.github.com/repos/openstack/swift/git/commits/8dee94fd7c76077038c44e76bce230b736e97943,8dee94fd7c76077038c44e76bce230b736e97943,"adding defaults, docs, and unit tests"
clayg,2010-12-28 20:47:20,https://api.github.com/repos/openstack/swift/git/commits/4c512ca50358ced53666583d8fd98001c338db7c,4c512ca50358ced53666583d8fd98001c338db7c,"updated COPY method in proxy, added functional test"
clayg,2010-12-28 19:33:36,https://api.github.com/repos/openstack/swift/git/commits/2bbc9b344360dff261385e638e522a0ed962ec28,2bbc9b344360dff261385e638e522a0ed962ec28,"added functional test for copy, fixed bug in copy method"
redbo,2010-12-28 19:12:21,https://api.github.com/repos/openstack/swift/git/commits/c37241cd8753da7eb844d9fe3b59bb57cdc80f03,c37241cd8753da7eb844d9fe3b59bb57cdc80f03,set default journal mode for rolling back from WAL code
gholt,2010-12-28 18:39:11,https://api.github.com/repos/openstack/swift/git/commits/0dc5f6fe1d5b3ecd5ae88c84e409a3f33bfe1d31,0dc5f6fe1d5b3ecd5ae88c84e409a3f33bfe1d31,Updated the docs to better reflect the .token_[0-f] container selection.
gholt,2010-12-28 17:57:17,https://api.github.com/repos/openstack/swift/git/commits/9682f8b85d0953e47acaa7aed66412870fc4619b,9682f8b85d0953e47acaa7aed66412870fc4619b,Made copies of ridiculously segmented objects error.
gholt,2010-12-28 17:18:37,https://api.github.com/repos/openstack/swift/git/commits/3d36034722250bb8f45668220820eaf92975d15a,3d36034722250bb8f45668220820eaf92975d15a,"Change copies of x-object-manifest objects to copy the actual contents of the object, not just the manifest marker itself"
gholt,2010-12-22 21:28:51,https://api.github.com/repos/openstack/swift/git/commits/d266cd560585116e6bff57260e8a1574711aab93,d266cd560585116e6bff57260e8a1574711aab93,i18nify log message
gholt,2010-12-22 20:33:06,https://api.github.com/repos/openstack/swift/git/commits/a7edf44b16746d6ed6721c0d36465d04e23a6ed9,a7edf44b16746d6ed6721c0d36465d04e23a6ed9,Merge from trunk (i18n)
redbo,2010-12-22 20:17:22,https://api.github.com/repos/openstack/swift/git/commits/4e6fa8152ce4b5566f2d9be7c3f8a6d051dfa114,4e6fa8152ce4b5566f2d9be7c3f8a6d051dfa114,first pass at i18n
redbo,2010-12-22 19:59:30,https://api.github.com/repos/openstack/swift/git/commits/6c3be5fe2ee71b579e85792f043d18a8a27e1dfc,6c3be5fe2ee71b579e85792f043d18a8a27e1dfc,gholt changes
gholt,2010-12-22 19:35:11,https://api.github.com/repos/openstack/swift/git/commits/af99fb17e05dde0d769dfda1c90fd7dda36fdd32,af99fb17e05dde0d769dfda1c90fd7dda36fdd32,Fixed probe tests to not use relativity (on imports)
redbo,2010-12-22 17:18:30,https://api.github.com/repos/openstack/swift/git/commits/f432269013238b196681e44ed8d6726a71696795,f432269013238b196681e44ed8d6726a71696795,add gettext to all binaries
redbo,2010-12-22 16:48:25,https://api.github.com/repos/openstack/swift/git/commits/8ad87f634c3403085964619d410eae60b3c64afe,8ad87f634c3403085964619d410eae60b3c64afe,fix fancy txnid logging
redbo,2010-12-22 16:36:31,https://api.github.com/repos/openstack/swift/git/commits/24590669d8e132c9b8fa4ac6f6bb14d7f93acc91,24590669d8e132c9b8fa4ac6f6bb14d7f93acc91,i18n finishup
notmyname,2010-12-21 23:09:32,https://api.github.com/repos/openstack/swift/git/commits/2c7dfbe849025ea9ccbd18660abc12454f4e1388,2c7dfbe849025ea9ccbd18660abc12454f4e1388,fixes variable name collision
redbo,2010-12-20 22:10:58,https://api.github.com/repos/openstack/swift/git/commits/0b3fac8992360fe203d8e88caa650aa4a285ddeb,0b3fac8992360fe203d8e88caa650aa4a285ddeb,add more gettext calls
redbo,2010-12-20 21:59:42,https://api.github.com/repos/openstack/swift/git/commits/affc53bc1d47e05c9b35ca884cf66cde33cf808c,affc53bc1d47e05c9b35ca884cf66cde33cf808c,update to trunk
redbo,2010-12-20 21:57:19,https://api.github.com/repos/openstack/swift/git/commits/ef4e23ee435487cd7c94d9a7f092138cf05ad749,ef4e23ee435487cd7c94d9a7f092138cf05ad749,tests fixed
redbo,2010-12-20 21:47:50,https://api.github.com/repos/openstack/swift/git/commits/d7dd3ec0659aaee87f480bcbe5d3d5cdb33d8c5b,d7dd3ec0659aaee87f480bcbe5d3d5cdb33d8c5b,gettext updates
gholt,2010-12-20 16:54:01,https://api.github.com/repos/openstack/swift/git/commits/e398717b7373076a9d0b3b392fce7a22a6088f9f,e398717b7373076a9d0b3b392fce7a22a6088f9f,Merge from trunk
gholt,2010-12-20 16:35:29,https://api.github.com/repos/openstack/swift/git/commits/b024da46c616a9652850034d0fde27492fa98dd7,b024da46c616a9652850034d0fde27492fa98dd7,swauth: Fixed unit tests for webob changes
gholt,2010-12-20 15:37:26,https://api.github.com/repos/openstack/swift/git/commits/90589b0b8055759d76ccc86ca16c60b2c9989523,90589b0b8055759d76ccc86ca16c60b2c9989523,"Added large object support by allowing the client to upload the object in segments and download them all as a single object. Also, made updates client.py and st to support and provide an example of how to use the feature. Finally, there is an overview document that needs reviewing."
notmyname,2010-12-17 16:47:23,https://api.github.com/repos/openstack/swift/git/commits/1b293998969cb8a6cdca7447d9bdb5e50be5bc5d,1b293998969cb8a6cdca7447d9bdb5e50be5bc5d,changes default server_name in access log processor to match the default server name in the proxy server
dpgoetz,2010-12-17 08:27:08,https://api.github.com/repos/openstack/swift/git/commits/7bd0184bfe0fff32875755206049863ec65c7789,7bd0184bfe0fff32875755206049863ec65c7789,"more unit tests, refactoring,  and loc gen fix"
dpgoetz,2010-12-17 00:20:57,https://api.github.com/repos/openstack/swift/git/commits/893fdd0907e888b9d34ba4f9ecc2067bd5bbe57a,893fdd0907e888b9d34ba4f9ecc2067bd5bbe57a,adding in rate limiting and unit tests
gholt,2010-12-16 18:46:11,https://api.github.com/repos/openstack/swift/git/commits/fa31d76eee4cd1024c1c99ca6a9d00e1b483ac6d,fa31d76eee4cd1024c1c99ca6a9d00e1b483ac6d,lobjects: The Last-Modified header is now determined for reasonably segmented objects.
gholt,2010-12-16 17:21:30,https://api.github.com/repos/openstack/swift/git/commits/a8b239e5a05e5964189126d291f836f99930fe93,a8b239e5a05e5964189126d291f836f99930fe93,"Made stat display of objects suppress content-length, last-modified, and etag if they aren't in the headers"
gholt,2010-12-16 17:03:59,https://api.github.com/repos/openstack/swift/git/commits/80bde91333bd54006d25a7c6d3baee02cd4587d8,80bde91333bd54006d25a7c6d3baee02cd4587d8,st: Works with chunked transfer encoded downloads now
notmyname,2010-12-16 14:03:27,https://api.github.com/repos/openstack/swift/git/commits/276d6f82c615531d36603388092e8b318a3c1b0b,276d6f82c615531d36603388092e8b318a3c1b0b,fixed lp bug 671704
redbo,2010-12-15 09:28:17,https://api.github.com/repos/openstack/swift/git/commits/977a2893ee09d0d62602c6c2e16b0c488a5bfa23,977a2893ee09d0d62602c6c2e16b0c488a5bfa23,merge trunk
gholt,2010-12-14 22:49:36,https://api.github.com/repos/openstack/swift/git/commits/4400f0473a67989d1563262a3a6e544a161aef80,4400f0473a67989d1563262a3a6e544a161aef80,"Even though isn't 100% related, made st emit a warning if there's a / in a container name"
gholt,2010-12-14 22:25:12,https://api.github.com/repos/openstack/swift/git/commits/3e306e0f43cd70f81a74f11efe7d97890e7504a2,3e306e0f43cd70f81a74f11efe7d97890e7504a2,Changed to only limit manifest gets after first 10 segments. Makes tests run faster but does allow amplification 1:10. At least it's not 1:infinity like before.
gholt,2010-12-14 22:16:38,https://api.github.com/repos/openstack/swift/git/commits/89ad6e727bc621e49d234162327f02e359d61b18,89ad6e727bc621e49d234162327f02e359d61b18,Limit manifest gets to one segment per second; prevents amplification attacks of tons of tiny segments
gholt,2010-12-14 21:51:24,https://api.github.com/repos/openstack/swift/git/commits/d13b34fdc1e2d66c31ab40d80213c6df475037ba,d13b34fdc1e2d66c31ab40d80213c6df475037ba,x-copy-from now understands manifest sources and copies details rather than contents
gholt,2010-12-14 19:20:12,https://api.github.com/repos/openstack/swift/git/commits/bf0a8e934cb82bd7567bd7cbe866ded827a18c55,bf0a8e934cb82bd7567bd7cbe866ded827a18c55,"Fixed a bug where a HEAD on a really, really large object would give a content-length of 0 instead of transfer-encoding: chunked"
gholt,2010-12-13 22:14:26,https://api.github.com/repos/openstack/swift/git/commits/20d1ee6757be06728941b6672371a3501163cf53,20d1ee6757be06728941b6672371a3501163cf53,Now supports infinite objects!
redbo,2010-12-13 19:12:20,https://api.github.com/repos/openstack/swift/git/commits/0a958075753e69be36a36d7d82b45adcee156467,0a958075753e69be36a36d7d82b45adcee156467,remove migration header support
redbo,2010-12-13 18:25:09,https://api.github.com/repos/openstack/swift/git/commits/bf94e0b8117c81224f1634d4c85facc52c5301d6,bf94e0b8117c81224f1634d4c85facc52c5301d6,remove migration header
gholt,2010-12-10 17:45:28,https://api.github.com/repos/openstack/swift/git/commits/72c4e5fe374c88e9d26f72171c783f28d6f95cdd,72c4e5fe374c88e9d26f72171c783f28d6f95cdd,Merge from trunk
gholt,2010-12-10 17:41:08,https://api.github.com/repos/openstack/swift/git/commits/d464757d715a85e3eba332d66ed53ccb128344b4,d464757d715a85e3eba332d66ed53ccb128344b4,Merged from trunk
fujita,2010-12-10 17:22:21,https://api.github.com/repos/openstack/swift/git/commits/f06b0cc5ce059ebc8aac31481e87b6bdd7b748c3,f06b0cc5ce059ebc8aac31481e87b6bdd7b748c3,object replicator: fix replica deletion condition
gholt,2010-12-10 01:57:26,https://api.github.com/repos/openstack/swift/git/commits/09e39032bf37d1e1e6627d1687fee1df4d14f0f2,09e39032bf37d1e1e6627d1687fee1df4d14f0f2,new swauth-cleanup-tokens; restricted listing .auth account to .super_admin; doc updates
clayg,2010-12-09 07:42:49,https://api.github.com/repos/openstack/swift/git/commits/668666c18b52372e3f6c49661b62a474a94eb4d7,668666c18b52372e3f6c49661b62a474a94eb4d7,"mostly finished SwiftServer tests, needs some cleanup"
gholt,2010-12-08 22:36:02,https://api.github.com/repos/openstack/swift/git/commits/d13ea1dbec5a6199770e847e40e2598eee164f1e,d13ea1dbec5a6199770e847e40e2598eee164f1e,swauth: .token objects are now split into 16 containers
gholt,2010-12-08 22:10:12,https://api.github.com/repos/openstack/swift/git/commits/6f26c4fcdc9c36ae6a9696e920e01199cb83ddfd,6f26c4fcdc9c36ae6a9696e920e01199cb83ddfd,swauth: another batch of tests and bufixes found while testing
clayg,2010-12-08 07:12:21,https://api.github.com/repos/openstack/swift/git/commits/c10251a384e8c5d003eb737b12e75e1afb37dab5,c10251a384e8c5d003eb737b12e75e1afb37dab5,finished tests for wait
clayg,2010-12-07 23:30:04,https://api.github.com/repos/openstack/swift/git/commits/cf70f54e870b9c34b1c075a704fca5e3f108ebf8,cf70f54e870b9c34b1c075a704fca5e3f108ebf8,"finished test_spawn, started test_wait"
redbo,2010-12-06 22:53:44,https://api.github.com/repos/openstack/swift/git/commits/95a38de0eda686d42e68807ae6a8872d073ebe51,95a38de0eda686d42e68807ae6a8872d073ebe51,set default journal mode for rolling back from WAL code
gholt,2010-12-06 21:03:35,https://api.github.com/repos/openstack/swift/git/commits/df4a50083c93d010a166d2cc74921b46fa62d69a,df4a50083c93d010a166d2cc74921b46fa62d69a,Merge from trunk
gholt,2010-12-06 20:34:30,https://api.github.com/repos/openstack/swift/git/commits/c5d270f3a923657225e2c9c97bfe5d7a4c776b95,c5d270f3a923657225e2c9c97bfe5d7a4c776b95,Merge from lp:~clay-gerrard/swift/lobjects_history
gholt,2010-12-06 20:32:56,https://api.github.com/repos/openstack/swift/git/commits/b48f5091ea529e62afb9ea33ec1fc814f71b0ec6,b48f5091ea529e62afb9ea33ec1fc814f71b0ec6,Merge from trunk
clayg,2010-12-06 20:01:19,https://api.github.com/repos/openstack/swift/git/commits/090f86e9a6726480cbd98d183a97dab1f32d6fa8,090f86e9a6726480cbd98d183a97dab1f32d6fa8,updated large objects history
clayg,2010-12-06 16:52:08,https://api.github.com/repos/openstack/swift/git/commits/001abfa0bb796a7b8d7fbe5cbd6ead332591e3d6,001abfa0bb796a7b8d7fbe5cbd6ead332591e3d6,merged trunk
fujita,2010-12-06 02:45:06,https://api.github.com/repos/openstack/swift/git/commits/506618c44e5cdd04f1a021c87d10d58ccf322f70,506618c44e5cdd04f1a021c87d10d58ccf322f70,object replicator: fix replica deletion condition
gholt,2010-12-03 23:24:16,https://api.github.com/repos/openstack/swift/git/commits/5ff95b2dcf8c34f8860e620aa7ac2933a22b66c5,5ff95b2dcf8c34f8860e620aa7ac2933a22b66c5,swauth: another batch of tests and bugfixes found while testing
gholt,2010-12-03 18:22:57,https://api.github.com/repos/openstack/swift/git/commits/36cf8c4b8575b6d8f7af57281b2ce683ccd02165,36cf8c4b8575b6d8f7af57281b2ce683ccd02165,swauth: another batch of tests and bugfixes found while testing
clayg,2010-12-03 16:02:38,https://api.github.com/repos/openstack/swift/git/commits/fe02da8c751432eb6e8a7235ffa9f865396bac6e,fe02da8c751432eb6e8a7235ffa9f865396bac6e,update tests for webob 1.0
gholt,2010-12-03 03:37:58,https://api.github.com/repos/openstack/swift/git/commits/7d8ff50f43b792f1576c8de1677e3b6be527b538,7d8ff50f43b792f1576c8de1677e3b6be527b538,SegmentIterable: logs exceptions just once; 503s on exception; fix except syntax; make sure self.response is always *something*
gholt,2010-12-02 22:21:25,https://api.github.com/repos/openstack/swift/git/commits/10a8fc94994a74976b8e859b5b0b6b061257fe72,10a8fc94994a74976b8e859b5b0b6b061257fe72,Expired token cleanup
redbo,2010-12-02 13:37:49,https://api.github.com/repos/openstack/swift/git/commits/442e3c8a1a92eb3da140fc39f78b4ff86c50d11a,442e3c8a1a92eb3da140fc39f78b4ff86c50d11a,use logging formatter to standardize transaction id logging
gholt,2010-12-02 05:29:07,https://api.github.com/repos/openstack/swift/git/commits/4d8c4576cb36641f7e2c1416e8f014eb12118b6d,4d8c4576cb36641f7e2c1416e8f014eb12118b6d,Added forgotten swauth-set-account-service
gholt,2010-12-02 05:28:41,https://api.github.com/repos/openstack/swift/git/commits/3d2985201c1c5e0dd03397725d3a6d3bb863b123,3d2985201c1c5e0dd03397725d3a6d3bb863b123,swauth-list work; new swauth-set-account-service; .clusters is now .services; doc updates
gholt,2010-12-02 01:08:49,https://api.github.com/repos/openstack/swift/git/commits/35f3487879c650479fecd145649ce72ae48b55a7,35f3487879c650479fecd145649ce72ae48b55a7,Incorporated Swauth into Swift as an optional DevAuth replacement.
redbo,2010-12-01 20:23:22,https://api.github.com/repos/openstack/swift/git/commits/a595321c9772c858f904df70c0ea2101514e2283,a595321c9772c858f904df70c0ea2101514e2283,make swift-init only warn when there are missing configs
notmyname,2010-12-01 16:27:32,https://api.github.com/repos/openstack/swift/git/commits/3da4393297d2a13939cdb48240e09c927fa5c088,3da4393297d2a13939cdb48240e09c927fa5c088,changed end_marker to be non-inclusive
clayg,2010-12-01 07:19:46,https://api.github.com/repos/openstack/swift/git/commits/91fce5d22f4565a17d71a029c28c5ffa30020530,91fce5d22f4565a17d71a029c28c5ffa30020530,merged trunk
clayg,2010-12-01 01:07:21,https://api.github.com/repos/openstack/swift/git/commits/1f145a35cb2ac6ace7bed88374cb10d318d41ae3,1f145a35cb2ac6ace7bed88374cb10d318d41ae3,update common.middleware.auth tests for compat with webob 1.0
gholt,2010-11-30 23:37:31,https://api.github.com/repos/openstack/swift/git/commits/295cbdc7a98d5fd732ef98e87fa2ce26187b708d,295cbdc7a98d5fd732ef98e87fa2ce26187b708d,proxy: added account DELETE method; added option to control whether account PUTs and DELETEs are even callable
gholt,2010-11-30 23:00:12,https://api.github.com/repos/openstack/swift/git/commits/918ebd6bf222fde125880daeabd3c7d21e6c9769,918ebd6bf222fde125880daeabd3c7d21e6c9769,Removed extra copy-pasted code
redbo,2010-11-30 22:33:35,https://api.github.com/repos/openstack/swift/git/commits/784c7a85b6ea8d5c0d608fcd6fb6914938636077,784c7a85b6ea8d5c0d608fcd6fb6914938636077,return from do_start early if config file is missing
redbo,2010-11-30 22:17:05,https://api.github.com/repos/openstack/swift/git/commits/7e41c5fe4e303a92578bb2429c8a59fc912d9d71,7e41c5fe4e303a92578bb2429c8a59fc912d9d71,make swift-init only warn on missing configs
annabellebertooch,2010-11-30 20:57:46,https://api.github.com/repos/openstack/swift/git/commits/cc275c45c20f3a9baad928625822dab5d5bee4c0,cc275c45c20f3a9baad928625822dab5d5bee4c0,"Added a section about scripting ring management based on Citrix contribution, will continue to look in their document for more items to bring over. Also fixed a typo in the SAIO ""choose either see"" to just ""choose either""."
annabellebertooch,2010-11-30 20:15:41,https://api.github.com/repos/openstack/swift/git/commits/45c59e06539ad813a11c3080708c1ade8755fd2f,45c59e06539ad813a11c3080708c1ade8755fd2f,Edited to reflect ring creation not management
annabellebertooch,2010-11-30 18:24:55,https://api.github.com/repos/openstack/swift/git/commits/36935a2b5dffba99107414b37b8d152242d8eb48,36935a2b5dffba99107414b37b8d152242d8eb48,Adding Citrix contributions to Admin Guide
gholt,2010-11-30 16:01:05,https://api.github.com/repos/openstack/swift/git/commits/6a2a4cf55457a0790ba47b12013e7d3055877a22,6a2a4cf55457a0790ba47b12013e7d3055877a22,Merge from trunk
gholt,2010-11-30 15:57:01,https://api.github.com/repos/openstack/swift/git/commits/847cbe591d46389d63b6def4a3c41ef2021994dc,847cbe591d46389d63b6def4a3c41ef2021994dc,Merged from trunk
gholt,2010-11-29 23:52:51,https://api.github.com/repos/openstack/swift/git/commits/76edfbc94ce1acbcbf1c91eff3c04c1df0618f65,76edfbc94ce1acbcbf1c91eff3c04c1df0618f65,Updated howto_installmultinode.rst
gholt,2010-11-29 23:19:29,https://api.github.com/repos/openstack/swift/git/commits/544107a4aea410d859f00a3182688b1ed6543bc6,544107a4aea410d859f00a3182688b1ed6543bc6,proxy: added account DELETE method; added option to control whether account PUTs and DELETEs are even callable
gholt,2010-11-29 21:07:30,https://api.github.com/repos/openstack/swift/git/commits/197f343ddb5851371d96ec552d52aff1174e9705,197f343ddb5851371d96ec552d52aff1174e9705,Fixed bug dfg found in st
gholt,2010-11-29 20:52:14,https://api.github.com/repos/openstack/swift/git/commits/512e5e2d79ac950381c86d38b6f3735a9083f5ae,512e5e2d79ac950381c86d38b6f3735a9083f5ae,Added history section for large object support docs
notmyname,2010-11-29 16:58:23,https://api.github.com/repos/openstack/swift/git/commits/78a150751d00f3db390c00dcd0ac3bd7be23dfe4,78a150751d00f3db390c00dcd0ac3bd7be23dfe4,changed end_marker to not be inclusive
creiht,2010-11-26 19:37:08,https://api.github.com/repos/openstack/swift/git/commits/21d355af1810e707da8cc6e020518ce538544ceb,21d355af1810e707da8cc6e020518ce538544ceb,Removed uneeded creation of resellers.conf from the unit test
gholt,2010-11-24 22:58:17,https://api.github.com/repos/openstack/swift/git/commits/c01b5d9f1df09de8349ec7c9ec987e105c302bb4,c01b5d9f1df09de8349ec7c9ec987e105c302bb4,Maybe even a bit more concise with test_custom_mime_types_files
gholt,2010-11-24 22:48:03,https://api.github.com/repos/openstack/swift/git/commits/5fac58a012e0311a734008c4e63d28431a236c10,5fac58a012e0311a734008c4e63d28431a236c10,Updated test_custom_mime_types_files
clayg,2010-11-24 21:33:36,https://api.github.com/repos/openstack/swift/git/commits/cc336355531f5b031920b7b4ba58ba860df01b4f,cc336355531f5b031920b7b4ba58ba860df01b4f,merged upstream
clayg,2010-11-24 21:23:00,https://api.github.com/repos/openstack/swift/git/commits/b72b137645a84c09f95715d37ed5b34fe8b997bd,b72b137645a84c09f95715d37ed5b34fe8b997bd,merged trunk
clayg,2010-11-24 21:22:45,https://api.github.com/repos/openstack/swift/git/commits/b034e6001a1ce80486245a62603570a8efe64a0c,b034e6001a1ce80486245a62603570a8efe64a0c,new test for status; pep8; moved capture std.out to inside temptree
gholt,2010-11-24 19:55:42,https://api.github.com/repos/openstack/swift/git/commits/2e818a6a9e7b259c7c0fd464935a12f162edb9fc,2e818a6a9e7b259c7c0fd464935a12f162edb9fc,Merged from trunk
notmyname,2010-11-24 18:02:31,https://api.github.com/repos/openstack/swift/git/commits/f3f62520a0429eda45fc6c77b2c322b9410da27b,f3f62520a0429eda45fc6c77b2c322b9410da27b,improved the container listings for the stats processor
annabellebertooch,2010-11-24 17:42:41,https://api.github.com/repos/openstack/swift/git/commits/3d90b3ff57fc6b7d117df11297b12136395f1473,3d90b3ff57fc6b7d117df11297b12136395f1473,Adding a section about adding proxy servers to the multi-node install. I used https://answers.launchpad.net/swift/+question/134585 as a reference point so I might not have enough detail in the section - feel free to offer suggested edits.
annabellebertooch,2010-11-24 16:55:29,https://api.github.com/repos/openstack/swift/git/commits/05658b8f8fe0fa1ea9c9ba3cdb98a299bb24f22c,05658b8f8fe0fa1ea9c9ba3cdb98a299bb24f22c,Edits based on input
annabellebertooch,2010-11-23 22:30:38,https://api.github.com/repos/openstack/swift/git/commits/a342d6a9a4b665befce312353f347462d61eba54,a342d6a9a4b665befce312353f347462d61eba54,Added a section about adding additional proxy servers to the multi-node install doc
gholt,2010-11-23 22:26:48,https://api.github.com/repos/openstack/swift/git/commits/1fa4ba38e554535ba0359b244d050e7795400c42,1fa4ba38e554535ba0359b244d050e7795400c42,Documentation of the manifest/segments feature
gholt,2010-11-23 17:50:25,https://api.github.com/repos/openstack/swift/git/commits/83e54dda91a8fedceaa01ea4c120c7cdd3aa5efe,83e54dda91a8fedceaa01ea4c120c7cdd3aa5efe,Merge from trunk
notmyname,2010-11-22 23:30:37,https://api.github.com/repos/openstack/swift/git/commits/9f68317712db941628cff07e7d563f530f5ebd91,9f68317712db941628cff07e7d563f530f5ebd91,merged with trunk
clayg,2010-11-19 22:52:31,https://api.github.com/repos/openstack/swift/git/commits/111ebb5a09c33ea57429b3dddce631151c8a3649,111ebb5a09c33ea57429b3dddce631151c8a3649,"updated daemonize process, added option for servers/daemons to log to console"
gholt,2010-11-19 22:50:35,https://api.github.com/repos/openstack/swift/git/commits/598c544eddef7d382e88969a7b820e25a2c33e0b,598c544eddef7d382e88969a7b820e25a2c33e0b,st delete will delete manifest segments as well; added --leave-segments option to override such behavior
clayg,2010-11-19 22:31:11,https://api.github.com/repos/openstack/swift/git/commits/8197c4d7bae40bce9241edd3a1ab62f36e5424c9,8197c4d7bae40bce9241edd3a1ab62f36e5424c9,remove capture_io stuff from db_replicator.__init__
clayg,2010-11-19 22:20:17,https://api.github.com/repos/openstack/swift/git/commits/ab53587796e15313048bd7a3bcbde2368eaea30e,ab53587796e15313048bd7a3bcbde2368eaea30e,fixed some calls to get_logger that didn't clean up after themselves
gholt,2010-11-19 21:01:28,https://api.github.com/repos/openstack/swift/git/commits/df3762bd2c6ea809131c3ee7f5c37a3a6752295c,df3762bd2c6ea809131c3ee7f5c37a3a6752295c,st overwrites of manifests now clean up the old segments
clayg,2010-11-19 18:15:41,https://api.github.com/repos/openstack/swift/git/commits/c007d0296e49eef70542526a0b49429287aba8f2,c007d0296e49eef70542526a0b49429287aba8f2,"removed unneeded daemonize function from utils, pulled get_socket out of run_wsgi, reworked test_utils and test_wsgi"
clayg,2010-11-19 13:42:21,https://api.github.com/repos/openstack/swift/git/commits/6c37cc44df58d68f96af8b360b2bfee0d115401b,6c37cc44df58d68f96af8b360b2bfee0d115401b,started work on new tests
notmyname,2010-11-19 02:55:09,https://api.github.com/repos/openstack/swift/git/commits/b03d544e56496908fc8f3a320d24de3ca1dc8cb8,b03d544e56496908fc8f3a320d24de3ca1dc8cb8,merged with trunk
gholt,2010-11-19 02:29:03,https://api.github.com/repos/openstack/swift/git/commits/4e0f0b01df33664f4be109ba030dee85bb98e5f1,4e0f0b01df33664f4be109ba030dee85bb98e5f1,Basic working segmented upload
gholt,2010-11-19 02:25:31,https://api.github.com/repos/openstack/swift/git/commits/1134814cc6a2a34148eb3f056bfe6726a0180718,1134814cc6a2a34148eb3f056bfe6726a0180718,Merged from trunk
gholt,2010-11-18 22:52:45,https://api.github.com/repos/openstack/swift/git/commits/a91879f95750c47960c5f70adadec5cfad16db25,a91879f95750c47960c5f70adadec5cfad16db25,Cleaned up st command line parsing; always use included client.py as well
clayg,2010-11-18 22:47:44,https://api.github.com/repos/openstack/swift/git/commits/73210937a37505d85a0688ba7b7012301a0f20b3,73210937a37505d85a0688ba7b7012301a0f20b3,made existing tests more literal/readable/useful
notmyname,2010-11-18 21:42:49,https://api.github.com/repos/openstack/swift/git/commits/90934c91a418c5dbd4ca9d63fff42e844adc00aa,90934c91a418c5dbd4ca9d63fff42e844adc00aa,added end_marker query parameter for container and object listings
gholt,2010-11-18 21:40:40,https://api.github.com/repos/openstack/swift/git/commits/abfa4f91eba748c672ea2dfe67546f1ab1d13c34,abfa4f91eba748c672ea2dfe67546f1ab1d13c34,Fallback to HTTPConnection if BufferedHTTPConnection is nbot available
gholt,2010-11-18 20:52:00,https://api.github.com/repos/openstack/swift/git/commits/39502d66959619c3244ee0bece4fe2deefbd728c,39502d66959619c3244ee0bece4fe2deefbd728c,"This is to make letterj happy. Well, less unhappy."
gholt,2010-11-18 19:35:35,https://api.github.com/repos/openstack/swift/git/commits/41381d199824f5a4a33b23ff89fc73b5da1ebbaf,41381d199824f5a4a33b23ff89fc73b5da1ebbaf,Cleaner environ-based option defaults
gholt,2010-11-18 19:27:23,https://api.github.com/repos/openstack/swift/git/commits/eba8346b92f27686ff465d8681bcc983ed7763f1,eba8346b92f27686ff465d8681bcc983ed7763f1,Cosmetic fixes for some continuation line idents
gholt,2010-11-18 19:20:12,https://api.github.com/repos/openstack/swift/git/commits/4792fe6ff8c841ad79e779b3cd3f70931b995535,4792fe6ff8c841ad79e779b3cd3f70931b995535,Keep the first command line parse from exiting due to missing required options
gholt,2010-11-18 19:11:14,https://api.github.com/repos/openstack/swift/git/commits/43fe4971211fe39c7aae84571457d3dd047019fc,43fe4971211fe39c7aae84571457d3dd047019fc,Fix ST_ environ bug in st
gholt,2010-11-18 18:53:37,https://api.github.com/repos/openstack/swift/git/commits/985968f76550251904b64d12de025fa5d65ed03f,985968f76550251904b64d12de025fa5d65ed03f,Cleaned up st command line parsing; always use included client.py as well
notmyname,2010-11-18 16:57:35,https://api.github.com/repos/openstack/swift/git/commits/8718112e402cc24d6b48de658276c485f2fc0b9b,8718112e402cc24d6b48de658276c485f2fc0b9b,improved the container listings for the stats processor
gholt,2010-11-18 16:36:48,https://api.github.com/repos/openstack/swift/git/commits/04926dd806c7a50dc9869ca8f7e72bcdf9c1ea0c,04926dd806c7a50dc9869ca8f7e72bcdf9c1ea0c,Merged from trunk
clayg,2010-11-17 23:52:31,https://api.github.com/repos/openstack/swift/git/commits/0b380264d76fff5031e75c2c8245ae5add10f221,0b380264d76fff5031e75c2c8245ae5add10f221,"refactored swift-init to be more maintainable, added some features,
help, docs, tests, fixed lp:639710; new bin/test module with examples of
how to import files from bin and some stubs for swift-init"
clayg,2010-11-17 23:17:05,https://api.github.com/repos/openstack/swift/git/commits/d583fd9bdbdd381d5ebb2497061afa7588c402c0,d583fd9bdbdd381d5ebb2497061afa7588c402c0,cleaned up test reloads
clayg,2010-11-17 22:23:22,https://api.github.com/repos/openstack/swift/git/commits/adb52e7cc05623fbd2feeb505354dfc822313653,adb52e7cc05623fbd2feeb505354dfc822313653,spelling typos
clayg,2010-11-17 20:09:39,https://api.github.com/repos/openstack/swift/git/commits/2abf4c491ccad6cfa89990291a06f622d6450825,2abf4c491ccad6cfa89990291a06f622d6450825,merged trunk
notmyname,2010-11-17 15:36:21,https://api.github.com/repos/openstack/swift/git/commits/51e493561207f1d903ada6ab87e787ce633b9b69,51e493561207f1d903ada6ab87e787ce633b9b69,fixed unit test to include knowledge of end_marker
gholt,2010-11-16 23:35:39,https://api.github.com/repos/openstack/swift/git/commits/fa3c871f0b1544f859bacf38497580afd69ced0b,fa3c871f0b1544f859bacf38497580afd69ced0b,Server-side implementation for segmented objects
notmyname,2010-11-16 22:03:20,https://api.github.com/repos/openstack/swift/git/commits/287c557eac40550b7ef70b85bd9931cf4732b6fd,287c557eac40550b7ef70b85bd9931cf4732b6fd,merged with trunk
notmyname,2010-11-16 22:01:16,https://api.github.com/repos/openstack/swift/git/commits/3c110aed37fd41bad4734029b8f227fd1e0bbf55,3c110aed37fd41bad4734029b8f227fd1e0bbf55,updated a docstring
notmyname,2010-11-16 21:50:56,https://api.github.com/repos/openstack/swift/git/commits/a65fcd7a0d67a2fbcc931e69ce305a83d9c55916,a65fcd7a0d67a2fbcc931e69ce305a83d9c55916,fixed copy/paste error
clayg,2010-11-16 19:57:46,https://api.github.com/repos/openstack/swift/git/commits/05042758f33f391a96eee6204628103dedc90213,05042758f33f391a96eee6204628103dedc90213,merged trunk
dpgoetz,2010-11-16 19:52:18,https://api.github.com/repos/openstack/swift/git/commits/ceb2bfaa2fd3649438516dce55b383fc6acd10a9,ceb2bfaa2fd3649438516dce55b383fc6acd10a9,Adding unit tests for object replicator.  Fixing bug in hash_suffix.
clayg,2010-11-16 19:52:05,https://api.github.com/repos/openstack/swift/git/commits/354f7dd2a595093a34b0207d2787db5d79e320a2,354f7dd2a595093a34b0207d2787db5d79e320a2,fixed missing kwargs in bin/swift-log-uploader
dpgoetz,2010-11-16 19:06:39,https://api.github.com/repos/openstack/swift/git/commits/dcd3743defc0efb855ddf8580b8cc0e567339cbf,dcd3743defc0efb855ddf8580b8cc0e567339cbf,adding temp dir thing
annabellebertooch,2010-11-16 19:02:18,https://api.github.com/repos/openstack/swift/git/commits/a6269c88f3cdda9c325525c20d5ea8f920bb566b,a6269c88f3cdda9c325525c20d5ea8f920bb566b,"This will change the Sphinx theme for the clean white theme with red links - though we haven't yet worked Google Analytics into the theme, I'd like to propose the merge now so that nova.openstack and swift.openstack match - they've merged theirs in after some merge hiccups."
annabellebertooch,2010-11-16 17:25:45,https://api.github.com/repos/openstack/swift/git/commits/fb629fb33e70d801e7b2bf3bacbce3f086c863ca,fb629fb33e70d801e7b2bf3bacbce3f086c863ca,Added red link color to the module links
dpgoetz,2010-11-16 16:32:03,https://api.github.com/repos/openstack/swift/git/commits/aed24cf328d63aeb3e091a4ecea6a79cad4af474,aed24cf328d63aeb3e091a4ecea6a79cad4af474,changes from code review
annabellebertooch,2010-11-16 15:08:13,https://api.github.com/repos/openstack/swift/git/commits/442f59c642702d9c8de405540edd65b9ded8d7c3,442f59c642702d9c8de405540edd65b9ded8d7c3,Hopefully remove a conf.app that mysteriously appeared
annabellebertooch,2010-11-16 15:07:20,https://api.github.com/repos/openstack/swift/git/commits/ccd500af04920b34f84334b7bbf06b611bac5faf,ccd500af04920b34f84334b7bbf06b611bac5faf,Hopefully removed a conf.app that mysteriously appeared
annabellebertooch,2010-11-16 15:05:38,https://api.github.com/repos/openstack/swift/git/commits/77e8b4d9d21b74f096808a17e97cc5ad9f723a7a,77e8b4d9d21b74f096808a17e97cc5ad9f723a7a,"Adding files for _theme dir and _static/tweaks.css"""
annabellebertooch,2010-11-15 23:12:31,https://api.github.com/repos/openstack/swift/git/commits/d90620aa6e26217529bf2d2a296fc2ae903f37c1,d90620aa6e26217529bf2d2a296fc2ae903f37c1,"Added a ""skip over"" link so partition-makers can skip the loopback section of the SAIO doc"
clayg,2010-11-15 22:52:29,https://api.github.com/repos/openstack/swift/git/commits/410635485be5c4b02306ef5574b2e4c34a138076,410635485be5c4b02306ef5574b2e4c34a138076,fixed typo in doc string for daemonize
clayg,2010-11-15 22:50:39,https://api.github.com/repos/openstack/swift/git/commits/3e931a166beeae9d77f29092076c8b637098296c,3e931a166beeae9d77f29092076c8b637098296c,merged remote changes
dpgoetz,2010-11-15 19:32:15,https://api.github.com/repos/openstack/swift/git/commits/aea6903e4a84348f2ce01c63c1f43e692f905d3f,aea6903e4a84348f2ce01c63c1f43e692f905d3f,Fixing rate limiting and proxy/server.py so that they don't throw stack traces if memcache wasn't loaded.
annabellebertooch,2010-11-15 16:51:12,https://api.github.com/repos/openstack/swift/git/commits/31ad3bdb670e1033ea9a37f33812440a2356c3ce,31ad3bdb670e1033ea9a37f33812440a2356c3ce,"Added a link to skip to the Rsync section, bypassing the loopback"
annabellebertooch,2010-11-12 18:54:07,https://api.github.com/repos/openstack/swift/git/commits/4aa104e49eb1715ea7c7d85309d3119ec65f57f8,4aa104e49eb1715ea7c7d85309d3119ec65f57f8,Updated Sphinx theme and index.rst
notmyname,2010-11-12 17:01:46,https://api.github.com/repos/openstack/swift/git/commits/7c63f0842c642b92505e4119242107f0c6faec97,7c63f0842c642b92505e4119242107f0c6faec97,changed stats system to take advantage of end_marker
notmyname,2010-11-12 16:55:32,https://api.github.com/repos/openstack/swift/git/commits/041a46eb7bafe932af2281821b416bb4eda39eb0,041a46eb7bafe932af2281821b416bb4eda39eb0,added end_marker query parameter to container and object listings
clayg,2010-11-12 04:57:07,https://api.github.com/repos/openstack/swift/git/commits/4962f4f58cc1d7cb28f4f81931fd88866d4aa44b,4962f4f58cc1d7cb28f4f81931fd88866d4aa44b,swapped daemonize calls
clayg,2010-11-11 22:41:07,https://api.github.com/repos/openstack/swift/git/commits/57a35f0d7c85bae8bf78fbc915e5cf73bdc8e4ff,57a35f0d7c85bae8bf78fbc915e5cf73bdc8e4ff,"added helper/util to parse command line args; removed some duplicated code in
server/daemon bin scripts;  more standized python/linux daemonization
procedures; fixed lp:666957 ""devauth server creates auth.db with the wrong
privileges""; new run_daemon helper based on run_wsgi simplifies daemon
launching/testing; new - all servers/daemons support verbose option when
started interactivlty which will log to the console; fixed lp:667839 ""can't
start servers with relative paths to configs""; added tests"
annabellebertooch,2010-11-11 15:52:24,https://api.github.com/repos/openstack/swift/git/commits/ce0a0be6643f3e21bb200ebc06d9db7d03ff2b8e,ce0a0be6643f3e21bb200ebc06d9db7d03ff2b8e,Updated the Google Analytics code (one character change) to better track swift.openstack.org independently
annabellebertooch,2010-11-11 15:00:00,https://api.github.com/repos/openstack/swift/git/commits/4f1d87cc8c07f3d83888cbc0faa4ce62ef9ab237,4f1d87cc8c07f3d83888cbc0faa4ce62ef9ab237,Updated Google Analytics code for more precise tracking
dpgoetz,2010-11-08 20:39:21,https://api.github.com/repos/openstack/swift/git/commits/be921452ac90405a48e7a94305d1ef0cd85fcbf8,be921452ac90405a48e7a94305d1ef0cd85fcbf8,checking for memcache incase not setup
notmyname,2010-11-05 19:52:33,https://api.github.com/repos/openstack/swift/git/commits/15413a4344b3e06f542067bc971126bec3a95a16,15413a4344b3e06f542067bc971126bec3a95a16,middleware that allows for cname lookups on unknown hostnames
notmyname,2010-11-05 19:36:37,https://api.github.com/repos/openstack/swift/git/commits/8b7e9aa84e95d2d58959a9cf73c21db39e3d0a83,8b7e9aa84e95d2d58959a9cf73c21db39e3d0a83,fixed to make tests work
notmyname,2010-11-05 19:06:52,https://api.github.com/repos/openstack/swift/git/commits/6e51ae3dab2ec752c18d62baa153a747ac9da2d3,6e51ae3dab2ec752c18d62baa153a747ac9da2d3,added prefix to memcache key used
notmyname,2010-11-05 18:51:43,https://api.github.com/repos/openstack/swift/git/commits/7a27984cf61cf39a664bef38006b408e9b3682cb,7a27984cf61cf39a664bef38006b408e9b3682cb,merged with trunk
notmyname,2010-11-05 18:37:54,https://api.github.com/repos/openstack/swift/git/commits/b6cee3e0c5e7368bc0f9a23fd74c781214fdf93e,b6cee3e0c5e7368bc0f9a23fd74c781214fdf93e,better cname lookups
notmyname,2010-11-05 18:02:25,https://api.github.com/repos/openstack/swift/git/commits/8fd79870a3419d8f75edb98609a6d3542cdf8413,8fd79870a3419d8f75edb98609a6d3542cdf8413,fixed bug in internal proxy
creiht,2010-11-05 17:57:30,https://api.github.com/repos/openstack/swift/git/commits/a8cbec4caf6d1d240bd6704cb821c09457b7284f,a8cbec4caf6d1d240bd6704cb821c09457b7284f,Remove .DS_Store and adds it to .bzrignore
creiht,2010-11-05 17:31:48,https://api.github.com/repos/openstack/swift/git/commits/4db656b0a2d8fb9c567c301eb0beb6cd602b5e84,4db656b0a2d8fb9c567c301eb0beb6cd602b5e84,Removing .DS_Store and adding to .bzrignore
dpgoetz,2010-11-05 16:15:31,https://api.github.com/repos/openstack/swift/git/commits/a71164995aaafd626cc16ba59cd01dbb69e33fe0,a71164995aaafd626cc16ba59cd01dbb69e33fe0,adding tests and splitting out collect jobs
clayg,2010-11-05 15:57:20,https://api.github.com/repos/openstack/swift/git/commits/a35a887d742e30ef6ba284501d9d53658e776428,a35a887d742e30ef6ba284501d9d53658e776428,"fixed auth_copy bug, bytes_transferred copy logging bug, and early denial for proxy.server.ObjectController.COPY method; added tests"
annabellebertooch,2010-11-05 15:54:16,https://api.github.com/repos/openstack/swift/git/commits/228f07bab7a82a3a447961d976d7c4f3a99b874a,228f07bab7a82a3a447961d976d7c4f3a99b874a,Adds the multi-node install doc
annabellebertooch,2010-11-05 15:03:22,https://api.github.com/repos/openstack/swift/git/commits/e1b0fa7e96743038194ab780128be870f447a06d,e1b0fa7e96743038194ab780128be870f447a06d,Added Stephen Milton to AUTHORS file under contributors
clayg,2010-11-05 14:47:43,https://api.github.com/repos/openstack/swift/git/commits/88eee37a59671207904b9e464a65f1189dee7d05,88eee37a59671207904b9e464a65f1189dee7d05,"merged lp:~notmyname/swift/copy_logging_bug, ensure bytes_transferred is zero on x-copy-from put, added test"
notmyname,2010-11-05 14:42:14,https://api.github.com/repos/openstack/swift/git/commits/e4e5e1e10bb70adc9d0d646e0516be4f2555fc0f,e4e5e1e10bb70adc9d0d646e0516be4f2555fc0f,merged with clayg's branch
clayg,2010-11-05 05:26:53,https://api.github.com/repos/openstack/swift/git/commits/ee91d7b95392220d4c7e5c9473ab8d53da2f8286,ee91d7b95392220d4c7e5c9473ab8d53da2f8286,updated lazy_load_internal_proxy test
notmyname,2010-11-04 21:31:20,https://api.github.com/repos/openstack/swift/git/commits/d122e5e98f042821bfb2f1bff8a66e22c3f94f2c,d122e5e98f042821bfb2f1bff8a66e22c3f94f2c,added SkipTest for cname tests if dnspython is not installed
clayg,2010-11-04 20:57:34,https://api.github.com/repos/openstack/swift/git/commits/e351c9403d7e6db60b8e713b56032b2f295e4ead,e351c9403d7e6db60b8e713b56032b2f295e4ead,fixed bug in internal_proxy; added test
notmyname,2010-11-04 19:56:08,https://api.github.com/repos/openstack/swift/git/commits/79c8c0ba70c2b09501dfc2eae38cdbfa682a1a0a,79c8c0ba70c2b09501dfc2eae38cdbfa682a1a0a,fixed bug in internal_proxy
clayg,2010-11-04 19:39:29,https://api.github.com/repos/openstack/swift/git/commits/208d7b8e0040db6ad2a428f5a3345e2e0ba9cbd1,208d7b8e0040db6ad2a428f5a3345e2e0ba9cbd1,"fixed auth_copy bug, and early denial for proxy.server.ObjectController.COPY method; added tests"
annabellebertooch,2010-11-04 19:25:23,https://api.github.com/repos/openstack/swift/git/commits/9dc5ffcd07ba1bd71f7214cf77ae29f488900bb5,9dc5ffcd07ba1bd71f7214cf77ae29f488900bb5,Adds multi server install doc
clayg,2010-11-04 19:23:14,https://api.github.com/repos/openstack/swift/git/commits/2c11c6ca1b0575478fed69482975ce8a56bb992a,2c11c6ca1b0575478fed69482975ce8a56bb992a,merged with trunk
clayg,2010-11-04 15:11:35,https://api.github.com/repos/openstack/swift/git/commits/a26acaf786abae593569241263845f547a0d2eb9,a26acaf786abae593569241263845f547a0d2eb9,merged lp:~gholt/swift/copy_auth_bug
notmyname,2010-11-04 15:07:25,https://api.github.com/repos/openstack/swift/git/commits/97af697e5f51c0c7f130c980178c499836a5f2b5,97af697e5f51c0c7f130c980178c499836a5f2b5,fixed typo on the getting started doc
notmyname,2010-11-04 14:53:02,https://api.github.com/repos/openstack/swift/git/commits/f9bd31b6ba610a49e17b814f6c55fdafa0cd7800,f9bd31b6ba610a49e17b814f6c55fdafa0cd7800,fixed typo
gholt,2010-11-03 21:06:30,https://api.github.com/repos/openstack/swift/git/commits/ce48a3c709d3784730873607e9a70e691fe13de9,ce48a3c709d3784730873607e9a70e691fe13de9,Fix tests; fix copy/auth problem
gholt,2010-11-03 20:59:41,https://api.github.com/repos/openstack/swift/git/commits/819bdc30660ecfafeb5448040c1b68c4b209e8e2,819bdc30660ecfafeb5448040c1b68c4b209e8e2,Merged from trunk
notmyname,2010-11-03 20:56:08,https://api.github.com/repos/openstack/swift/git/commits/10d4609c1745c093eabd716e59c5193a94fd6f2f,10d4609c1745c093eabd716e59c5193a94fd6f2f,fixed some tests and edge cases
notmyname,2010-11-03 20:17:27,https://api.github.com/repos/openstack/swift/git/commits/344cd1c45db02ac900b8f4f428caa497594fbf70,344cd1c45db02ac900b8f4f428caa497594fbf70,pep8
notmyname,2010-11-03 19:50:35,https://api.github.com/repos/openstack/swift/git/commits/559fc110a7b905678c582250d6204e7a9ff93903,559fc110a7b905678c582250d6204e7a9ff93903,merged with trunk
notmyname,2010-11-03 18:37:19,https://api.github.com/repos/openstack/swift/git/commits/224bd990f64238e83288c02220566411bcd637db,224bd990f64238e83288c02220566411bcd637db,Middleware that catches and logs errors that would otherwise be sent to the client
notmyname,2010-11-03 18:23:17,https://api.github.com/repos/openstack/swift/git/commits/926804eb86dfdfb1d3abb8538480380d780c7073,926804eb86dfdfb1d3abb8538480380d780c7073,pep8
notmyname,2010-11-03 18:17:59,https://api.github.com/repos/openstack/swift/git/commits/f89b8ca22fd1e1037ff41018625616e2366a2164,f89b8ca22fd1e1037ff41018625616e2366a2164,fixed typo in example config
notmyname,2010-11-03 18:04:04,https://api.github.com/repos/openstack/swift/git/commits/520e2cd0b15e2311ef75b1b60cd451e5edf92eee,520e2cd0b15e2311ef75b1b60cd451e5edf92eee,merged with trunk
notmyname,2010-11-03 18:01:54,https://api.github.com/repos/openstack/swift/git/commits/b5ee086b1626c3ffdd5aedc19c396bb3505b8c89,b5ee086b1626c3ffdd5aedc19c396bb3505b8c89,merged with trunk
notmyname,2010-11-03 18:01:13,https://api.github.com/repos/openstack/swift/git/commits/0c113798c09df7ada212f41191401e3da3502483,0c113798c09df7ada212f41191401e3da3502483,merged with trunk
notmyname,2010-11-03 16:27:19,https://api.github.com/repos/openstack/swift/git/commits/464cd91362107f3789994e79318d30d30126e145,464cd91362107f3789994e79318d30d30126e145,Middleware that translates account and container info from the host header to the path.
notmyname,2010-11-03 16:07:58,https://api.github.com/repos/openstack/swift/git/commits/2d82d1d5434df60f74897700c0f398350c20c9ce,2d82d1d5434df60f74897700c0f398350c20c9ce,merged with gholt's changes
gholt,2010-11-03 16:04:44,https://api.github.com/repos/openstack/swift/git/commits/67504c595a62cb8ab3e5bd0399f0d4521fb5d283,67504c595a62cb8ab3e5bd0399f0d4521fb5d283,PEPy fixes
gholt,2010-11-03 15:56:58,https://api.github.com/repos/openstack/swift/git/commits/d13b3b318d40042a06a7ac6288f631352b6f6c17,d13b3b318d40042a06a7ac6288f631352b6f6c17,domain_remap bugfixes
notmyname,2010-11-02 19:45:19,https://api.github.com/repos/openstack/swift/git/commits/00ff1d2c389099baa8cb7fc074149e6d67e3dec7,00ff1d2c389099baa8cb7fc074149e6d67e3dec7,merged with trunk
notmyname,2010-11-02 19:44:49,https://api.github.com/repos/openstack/swift/git/commits/c627d4597437c834e633886d420ddc7846fbcdd9,c627d4597437c834e633886d420ddc7846fbcdd9,merged with trunk
notmyname,2010-11-02 19:44:14,https://api.github.com/repos/openstack/swift/git/commits/67e913c094ba66abc5d900a53b0513b6d5092395,67e913c094ba66abc5d900a53b0513b6d5092395,merged with trunk
notmyname,2010-11-02 19:43:37,https://api.github.com/repos/openstack/swift/git/commits/d155b75112005a1900ee34ccecf4d2e1b1c36c08,d155b75112005a1900ee34ccecf4d2e1b1c36c08,merged with trunk
redbo,2010-11-02 18:32:18,https://api.github.com/repos/openstack/swift/git/commits/779f96cd9c8e1de26ff9554d6e8e99d5ffa7cd2a,779f96cd9c8e1de26ff9554d6e8e99d5ffa7cd2a,shore up accept header parsing
redbo,2010-11-02 16:04:15,https://api.github.com/repos/openstack/swift/git/commits/5d564a98b06711646f5ca421241230810b9734da,5d564a98b06711646f5ca421241230810b9734da,support text/xml
annabellebertooch,2010-11-02 14:17:25,https://api.github.com/repos/openstack/swift/git/commits/33b68bd5eb4534e33905539b95e61447b83fa999,33b68bd5eb4534e33905539b95e61447b83fa999,"Okay, mtaylor worked out a way to have conf.py contain a build environment variable so that the build can insert the GA code but the local builds wouldn't have it."
annabellebertooch,2010-11-01 23:36:40,https://api.github.com/repos/openstack/swift/git/commits/2c70e1b8618196d3f47966cd815c60f4a40fbe85,2c70e1b8618196d3f47966cd815c60f4a40fbe85,Reverted SAIO doc
annabellebertooch,2010-11-01 23:00:12,https://api.github.com/repos/openstack/swift/git/commits/86e72dae64f3e646b1c32d9e8f0f74e287387782,86e72dae64f3e646b1c32d9e8f0f74e287387782,"Updated SAIO, deleting line to make merge easier"
annabellebertooch,2010-11-01 22:51:26,https://api.github.com/repos/openstack/swift/git/commits/f33be04dcab96b5d50aa5ec25abf9fdd2e7ca238,f33be04dcab96b5d50aa5ec25abf9fdd2e7ca238,Updated SAIO to genericize wiki pointer
annabellebertooch,2010-11-01 21:06:35,https://api.github.com/repos/openstack/swift/git/commits/3b66ff2e87d3478030389de81772439fcebf41fe,3b66ff2e87d3478030389de81772439fcebf41fe,Add link to RHEL instructions in the SAIO doc
annabellebertooch,2010-11-01 20:04:51,https://api.github.com/repos/openstack/swift/git/commits/cc7376c7232416bc41945a7671836ac122bde259,cc7376c7232416bc41945a7671836ac122bde259,Changing to generic wiki page so no rhel in url
notmyname,2010-11-01 15:30:32,https://api.github.com/repos/openstack/swift/git/commits/282b023fdad485389eba0ae86e6a2db43aabc75e,282b023fdad485389eba0ae86e6a2db43aabc75e,added tests for cname lookup middleware
notmyname,2010-11-01 02:57:42,https://api.github.com/repos/openstack/swift/git/commits/6d1f37971f23318759e9e87e0b7ea5d03669901d,6d1f37971f23318759e9e87e0b7ea5d03669901d,basic untested functionality
notmyname,2010-10-31 20:21:54,https://api.github.com/repos/openstack/swift/git/commits/a9514cca88f4eb9a4da300991b646c89ee645e9d,a9514cca88f4eb9a4da300991b646c89ee645e9d,WIP while I go to enjoy a nice day outside
notmyname,2010-10-31 19:40:18,https://api.github.com/repos/openstack/swift/git/commits/6ff9c22096877d9a60ace2609c40b480a7407e6a,6ff9c22096877d9a60ace2609c40b480a7407e6a,initial cname lookup work stubbed out
annabellebertooch,2010-10-29 21:30:56,https://api.github.com/repos/openstack/swift/git/commits/e03d5bef1f4d3028dcb77c1cb3381ce1c8aeb281,e03d5bef1f4d3028dcb77c1cb3381ce1c8aeb281,This contains an env variable in conf.py for the build to contain the GA code
notmyname,2010-10-29 16:10:40,https://api.github.com/repos/openstack/swift/git/commits/1d3b72da488808f6ecffdc234fd9ced56412834c,1d3b72da488808f6ecffdc234fd9ced56412834c,added middleware to catch errors
redbo,2010-10-29 10:28:19,https://api.github.com/repos/openstack/swift/git/commits/cefcd568cda1b012cafda8baf1262e179734c10e,cefcd568cda1b012cafda8baf1262e179734c10e,more tests
notmyname,2010-10-29 03:45:00,https://api.github.com/repos/openstack/swift/git/commits/73406ab0bec006d7d5679007f1073f115cb5df81,73406ab0bec006d7d5679007f1073f115cb5df81,pep8
notmyname,2010-10-29 03:41:38,https://api.github.com/repos/openstack/swift/git/commits/508ebca777f19315d79138afbe80ca7d1f429b6d,508ebca777f19315d79138afbe80ca7d1f429b6d,domain remap middleware that maps account and container references in the domain to the path
redbo,2010-10-29 01:26:22,https://api.github.com/repos/openstack/swift/git/commits/655dba5cb28b3459fb4b73418f784332bf7ddc20,655dba5cb28b3459fb4b73418f784332bf7ddc20,missed a debug print
redbo,2010-10-29 01:23:01,https://api.github.com/repos/openstack/swift/git/commits/58f337236096fba28a03023a4aca4850f3734279,58f337236096fba28a03023a4aca4850f3734279,shore up accept header parsing
annabellebertooch,2010-10-28 22:01:50,https://api.github.com/repos/openstack/swift/git/commits/a6ccc44f893038d12d62a0409849b78ed188d5a6,a6ccc44f893038d12d62a0409849b78ed188d5a6,Updated SAIO to point to RHEL instructions on wiki
annabellebertooch,2010-10-28 21:39:42,https://api.github.com/repos/openstack/swift/git/commits/e022738734c94c963bbe228a3fd7b2717518f6d2,e022738734c94c963bbe228a3fd7b2717518f6d2,"Added link to RHEL instructions in SAIO, added Google Analytics code"
clayg,2010-10-28 21:33:54,https://api.github.com/repos/openstack/swift/git/commits/dc5f0be414b22b930eaa4306bde9844dc9690c91,dc5f0be414b22b930eaa4306bde9844dc9690c91,added failing test for COPY from private container
notmyname,2010-10-28 20:34:16,https://api.github.com/repos/openstack/swift/git/commits/34525d6c6a4ccfdca7a628179d2f47c71e50ff40,34525d6c6a4ccfdca7a628179d2f47c71e50ff40,changed env var in request to properly log the method
notmyname,2010-10-28 20:33:31,https://api.github.com/repos/openstack/swift/git/commits/b5575a9de39758687bce64681ed2317dd1cbe912,b5575a9de39758687bce64681ed2317dd1cbe912,reset bytes_transferred for copy requests
notmyname,2010-10-28 20:27:21,https://api.github.com/repos/openstack/swift/git/commits/937554c85eee534f9eb60ac6b516c1348eac64bd,937554c85eee534f9eb60ac6b516c1348eac64bd,PUT with X-Copy-From header and a non-zero Content-Length will now error as a 400
notmyname,2010-10-27 15:53:52,https://api.github.com/repos/openstack/swift/git/commits/649bffcb55681886c481bad12f3aa999b30dba4f,649bffcb55681886c481bad12f3aa999b30dba4f,fixed x-copied-from test
notmyname,2010-10-27 15:52:00,https://api.github.com/repos/openstack/swift/git/commits/a12292892b60da389b3796f50924f9040c2a5eae,a12292892b60da389b3796f50924f9040c2a5eae,added quoting to X-Copied-From header
notmyname,2010-10-26 20:01:34,https://api.github.com/repos/openstack/swift/git/commits/7fd418c6623bfc55584ae2845fe1fb4e9d5cbb3d,7fd418c6623bfc55584ae2845fe1fb4e9d5cbb3d,fixed test for non-zero body in copy put
notmyname,2010-10-26 20:00:17,https://api.github.com/repos/openstack/swift/git/commits/2f247a03abbb21c18d1828c8d0e3bb412f17117c,2f247a03abbb21c18d1828c8d0e3bb412f17117c,fixed test for non-zero body in copy put
notmyname,2010-10-26 19:58:13,https://api.github.com/repos/openstack/swift/git/commits/e8b7221da9e38994062ef25ccff6d207c5e65410,e8b7221da9e38994062ef25ccff6d207c5e65410,fixed test for non-zero body in copy put
notmyname,2010-10-26 19:55:12,https://api.github.com/repos/openstack/swift/git/commits/289e0cb72c9eb7d3b02d6d32bac132ad2f0e00be,289e0cb72c9eb7d3b02d6d32bac132ad2f0e00be,added test for non-zero body in copy put
notmyname,2010-10-26 19:51:22,https://api.github.com/repos/openstack/swift/git/commits/8a482ff23e4ce0c63555f3b1326ef9b331f6b681,8a482ff23e4ce0c63555f3b1326ef9b331f6b681,fixed to ensure x-copied-from header is included correctly
notmyname,2010-10-26 19:48:27,https://api.github.com/repos/openstack/swift/git/commits/f84c62069c755d6421f4a6bebcf08b44bfb39815,f84c62069c755d6421f4a6bebcf08b44bfb39815,fixed to ensure x-copied-from header is included
notmyname,2010-10-26 15:23:43,https://api.github.com/repos/openstack/swift/git/commits/1d33f92abc24daee581bbe83ea6da58a2adc5dd1,1d33f92abc24daee581bbe83ea6da58a2adc5dd1,removed X-Copy-From header from new request in copy PUT
notmyname,2010-10-26 15:13:14,https://api.github.com/repos/openstack/swift/git/commits/0065859bd816f4efb90d05fb15d9640881157fab,0065859bd816f4efb90d05fb15d9640881157fab,made length check on copy PUTs simpler
notmyname,2010-10-26 14:17:57,https://api.github.com/repos/openstack/swift/git/commits/95b189264c9e125f5d53a029378091f334dcef3c,95b189264c9e125f5d53a029378091f334dcef3c,merged with trunk
notmyname,2010-10-21 19:12:17,https://api.github.com/repos/openstack/swift/git/commits/f494fc37a6a7e502a49fe177de7a412d4063cd0b,f494fc37a6a7e502a49fe177de7a412d4063cd0b,fixes error when object auditor finds a tombstone file
notmyname,2010-10-21 18:59:43,https://api.github.com/repos/openstack/swift/git/commits/e8c110488320af6b53a13eff305345cc2c7d9280,e8c110488320af6b53a13eff305345cc2c7d9280,removed description of unused auditor config vars
notmyname,2010-10-21 18:32:10,https://api.github.com/repos/openstack/swift/git/commits/41c9f19a5f5f75668bdbfb495b942e9d50d9ac75,41c9f19a5f5f75668bdbfb495b942e9d50d9ac75,fixed error where tombstone files cause the object auditor to error
creiht,2010-10-20 22:17:11,https://api.github.com/repos/openstack/swift/git/commits/42f24964fdd581d280a33b2d90713ca77c6e68b1,42f24964fdd581d280a33b2d90713ca77c6e68b1,Updated swift-bench to put to multiple containers (20 by default) instead of just 1
creiht,2010-10-20 22:04:03,https://api.github.com/repos/openstack/swift/git/commits/43b3bf6095bcbf5891585f7e619809b323adbf52,43b3bf6095bcbf5891585f7e619809b323adbf52,Updated swift-bench to put to several containers (20 by default) instead of just 1
annabellebertooch,2010-10-20 20:37:16,https://api.github.com/repos/openstack/swift/git/commits/5f44a2811e6a3fa50ca4eefd06d59580314284c6,5f44a2811e6a3fa50ca4eefd06d59580314284c6,"Divided the SAIO instructions into loopback and partition scenarios, also created a new section for configuration. Fixed a typo (vist/visit) in the README."
annabellebertooch,2010-10-20 20:24:59,https://api.github.com/repos/openstack/swift/git/commits/50ccd0d375d4faf0e034414253cc0a95cae2b89d,50ccd0d375d4faf0e034414253cc0a95cae2b89d,Fixed single quote to be a backtick
annabellebertooch,2010-10-20 19:29:21,https://api.github.com/repos/openstack/swift/git/commits/060053f62d8996541f587b24d4e15e7894b5c8ea,060053f62d8996541f587b24d4e15e7894b5c8ea,Updated organization and fixed section headings.
annabellebertooch,2010-10-20 15:32:03,https://api.github.com/repos/openstack/swift/git/commits/231504e874a15aaf475bbc73dbef8b47cee8c5a6,231504e874a15aaf475bbc73dbef8b47cee8c5a6,Split out the SAIO doc and fixed a typo in the README
creiht,2010-10-19 22:52:13,https://api.github.com/repos/openstack/swift/git/commits/8170d7246bcf94a18c27760052b7d0964be154eb,8170d7246bcf94a18c27760052b7d0964be154eb,Changed the auth code to use a default port of 80 if the port is not specified in default_storage_url
creiht,2010-10-19 22:35:18,https://api.github.com/repos/openstack/swift/git/commits/db072cb292cf6539a57d2c04f91558c116dd9d7f,db072cb292cf6539a57d2c04f91558c116dd9d7f,Updated to take into account ssl
creiht,2010-10-19 22:22:11,https://api.github.com/repos/openstack/swift/git/commits/9df40c2ee8b4218d78d26352d72b995042bc048a,9df40c2ee8b4218d78d26352d72b995042bc048a,"When processing the storage url, make sure the port is set to 80 if not defined in the url"
notmyname,2010-10-19 22:13:23,https://api.github.com/repos/openstack/swift/git/commits/740a9ba77450fee6fd915787af57d716f4c534a8,740a9ba77450fee6fd915787af57d716f4c534a8,added check for non-zero byte bodies in copy requests
redbo,2010-10-19 15:02:36,https://api.github.com/repos/openstack/swift/git/commits/9b299b94b4d1ed020260b57b4f98edeaeb434e56,9b299b94b4d1ed020260b57b4f98edeaeb434e56,Make obj/replicator timeouts configurable
redbo,2010-10-19 01:05:54,https://api.github.com/repos/openstack/swift/git/commits/e5b48bea26989640846843a336eb7bbbfd3d55e8,e5b48bea26989640846843a336eb7bbbfd3d55e8,Make obj/replicator timeouts configurable
creiht,2010-10-18 22:57:09,https://api.github.com/repos/openstack/swift/git/commits/f99577ea933511228bd363e210db2c65af713a42,f99577ea933511228bd363e210db2c65af713a42,"Bump version up to 1.1.0, and updated AUTHORS file"
notmyname,2010-10-18 22:47:24,https://api.github.com/repos/openstack/swift/git/commits/2f141037a8aa0c54cb1755a92ad53f48ea1ae2c8,2f141037a8aa0c54cb1755a92ad53f48ea1ae2c8,Refactored the auditors to only do local checks. This should reduce the load the auditors place on a large cluster.
notmyname,2010-10-18 22:30:26,https://api.github.com/repos/openstack/swift/git/commits/ad7343e144e8f65bb3f6c4251aac56da035e5a21,ad7343e144e8f65bb3f6c4251aac56da035e5a21,fixed target quarrantine path
notmyname,2010-10-18 22:13:48,https://api.github.com/repos/openstack/swift/git/commits/1044a0160d6995e13bcba3c75c68511cc96e719a,1044a0160d6995e13bcba3c75c68511cc96e719a,oops
notmyname,2010-10-18 22:10:26,https://api.github.com/repos/openstack/swift/git/commits/fc72d0309b95f360efda1edcab2acee8671cfe2f,fc72d0309b95f360efda1edcab2acee8671cfe2f,changed auditor once mode
notmyname,2010-10-18 21:52:58,https://api.github.com/repos/openstack/swift/git/commits/e47d5383cd223af917b600aab6856959730133b8,e47d5383cd223af917b600aab6856959730133b8,fixed bad variable reference
notmyname,2010-10-18 19:40:39,https://api.github.com/repos/openstack/swift/git/commits/03dd0916baaba58806e0221974f134edbf2dfd5f,03dd0916baaba58806e0221974f134edbf2dfd5f,better error handling in auditors
gholt,2010-10-18 19:07:20,https://api.github.com/repos/openstack/swift/git/commits/e65749fbdebf15c6ca0f23c5ea26fb167d42c8d7,e65749fbdebf15c6ca0f23c5ea26fb167d42c8d7,Oopsy on the number of attempts to make with obj replicator
gholt,2010-10-18 18:58:12,https://api.github.com/repos/openstack/swift/git/commits/a787c19eb2c3a93afe94d531badbb16874edcc71,a787c19eb2c3a93afe94d531badbb16874edcc71,Oopsy on the number of attempts to make with obj replicator
gholt,2010-10-18 18:52:15,https://api.github.com/repos/openstack/swift/git/commits/089fab6ac57cca4dfcda8d6fe9dfa784d59de155,089fab6ac57cca4dfcda8d6fe9dfa784d59de155,Object replicator now hands off replication only on 507 errors
creiht,2010-10-18 15:58:03,https://api.github.com/repos/openstack/swift/git/commits/06b791ae9b6b96a1a49f782caf7992ae79ab6966,06b791ae9b6b96a1a49f782caf7992ae79ab6966,Updated debian build instructions to include bzr-builddeb
gholt,2010-10-18 15:49:33,https://api.github.com/repos/openstack/swift/git/commits/c13c7f560780efd60d77c91e0f76b4348e2d31be,c13c7f560780efd60d77c91e0f76b4348e2d31be,Changed logic to attempts_left; added comment for uncommon iterator usage.
notmyname,2010-10-18 15:47:59,https://api.github.com/repos/openstack/swift/git/commits/c53f49ce98cb45a077742f3c28c30dd7547bd1e3,c53f49ce98cb45a077742f3c28c30dd7547bd1e3,merged with trunk
creiht,2010-10-18 15:34:21,https://api.github.com/repos/openstack/swift/git/commits/76002e469f78ad8d58240ab58d32e68e7e57be23,76002e469f78ad8d58240ab58d32e68e7e57be23,"Bumped versioning to 1.1.0, and updated AUTHORS"
redbo,2010-10-17 01:20:22,https://api.github.com/repos/openstack/swift/git/commits/6bf591ee14b4efef39e5681f6763b57919624265,6bf591ee14b4efef39e5681f6763b57919624265,clarify code by separating accumulator into two counters
redbo,2010-10-16 17:32:29,https://api.github.com/repos/openstack/swift/git/commits/aef00f608b25000668e43ce7189f39c06c0ce78e,aef00f608b25000668e43ce7189f39c06c0ce78e,change chunks_per_sync config to mb_per_sync
notmyname,2010-10-15 19:50:16,https://api.github.com/repos/openstack/swift/git/commits/2502c11bbbce2c788a5618264b17bf9a80f5aba6,2502c11bbbce2c788a5618264b17bf9a80f5aba6,replaced comment deleted by overzealous use of the delete key
notmyname,2010-10-15 19:42:54,https://api.github.com/repos/openstack/swift/git/commits/6b457cee27d2dddc4fb26d8f106153d69adce68e,6b457cee27d2dddc4fb26d8f106153d69adce68e,fixed missing import
notmyname,2010-10-15 19:40:52,https://api.github.com/repos/openstack/swift/git/commits/3072f0489b6288dbfd51bf72e630d48a20183768,3072f0489b6288dbfd51bf72e630d48a20183768,moved common auditor code to swift.common.utils
notmyname,2010-10-15 19:20:24,https://api.github.com/repos/openstack/swift/git/commits/e1742a001ad3e56b1989071482aa9d39bdbe8ea4,e1742a001ad3e56b1989071482aa9d39bdbe8ea4,dumb ommission from the last commit
notmyname,2010-10-15 19:16:53,https://api.github.com/repos/openstack/swift/git/commits/6808861b91f0d125713a1a97ed7bac6a821c921b,6808861b91f0d125713a1a97ed7bac6a821c921b,auditor generator now also yields the partition
redbo,2010-10-15 19:15:43,https://api.github.com/repos/openstack/swift/git/commits/76ce08f8b2a4fe14ec4a8b94874daf8d42a3ec8c,76ce08f8b2a4fe14ec4a8b94874daf8d42a3ec8c,move a paren
notmyname,2010-10-15 19:11:44,https://api.github.com/repos/openstack/swift/git/commits/1518f27bfb4c02e237df281f141529c5ecc0b516,1518f27bfb4c02e237df281f141529c5ecc0b516,fixed bug in error handling of object auditor
notmyname,2010-10-15 19:08:24,https://api.github.com/repos/openstack/swift/git/commits/04cef2624309cc0f60ec56535412ce266b660dcf,04cef2624309cc0f60ec56535412ce266b660dcf,better once mode for auditors
notmyname,2010-10-15 16:17:54,https://api.github.com/repos/openstack/swift/git/commits/2719ec7a177961e4e9e55495f4e7e34ef7957342,2719ec7a177961e4e9e55495f4e7e34ef7957342,auditors now handle special case in once mode when there is nothing to audit
notmyname,2010-10-15 16:12:40,https://api.github.com/repos/openstack/swift/git/commits/3ec544f9c9e6b86abec422aed9e0da40036449aa,3ec544f9c9e6b86abec422aed9e0da40036449aa,fixed typo
notmyname,2010-10-15 16:10:04,https://api.github.com/repos/openstack/swift/git/commits/2ca499c02b754c3f94e38d800a7442fc0af39d6b,2ca499c02b754c3f94e38d800a7442fc0af39d6b,refactored auditors to have much repeated code and can now handle corrupted dbs
clayg,2010-10-15 15:07:19,https://api.github.com/repos/openstack/swift/git/commits/fa961fe02bc042e0c8f132fb502db813237978c4,fa961fe02bc042e0c8f132fb502db813237978c4,"created failing test for write timeout 422 error, fixed write timeout bug, added tests for better coverage of proxy.server.ObjectController.PUT, pep8"
notmyname,2010-10-15 01:47:20,https://api.github.com/repos/openstack/swift/git/commits/f17e56c90e1801af4a6f76465162d84c09ef5374,f17e56c90e1801af4a6f76465162d84c09ef5374,DiskFile_generator now also yields the current device. this is used if the file needs to be quarantined
notmyname,2010-10-14 21:03:28,https://api.github.com/repos/openstack/swift/git/commits/dd3d28de2a1f7f652753b5cbd69fe2de42de123c,dd3d28de2a1f7f652753b5cbd69fe2de42de123c,merged with trunk
notmyname,2010-10-14 20:57:22,https://api.github.com/repos/openstack/swift/git/commits/477cf6ec66e3bb4d4c0c293278b50f90715a0b4a,477cf6ec66e3bb4d4c0c293278b50f90715a0b4a,removed bare excepts in the auditors
notmyname,2010-10-14 20:31:14,https://api.github.com/repos/openstack/swift/git/commits/5b3230137eeebf8a7f5d93dba5ed99245bda0a0e,5b3230137eeebf8a7f5d93dba5ed99245bda0a0e,fixed edge case in auditors that is bad when nothing is found to audit
notmyname,2010-10-14 20:26:23,https://api.github.com/repos/openstack/swift/git/commits/191d8f478c946543b2ffb5f5b02eadf7b5f767b9,191d8f478c946543b2ffb5f5b02eadf7b5f767b9,removed unneeded imports in the auditors
notmyname,2010-10-14 20:23:54,https://api.github.com/repos/openstack/swift/git/commits/6327c0cc69a3a239ef75e860cb6ed806e110c654,6327c0cc69a3a239ef75e860cb6ed806e110c654,removed random.choice import
notmyname,2010-10-14 20:22:29,https://api.github.com/repos/openstack/swift/git/commits/1094a48885089f0587852f3915a34301194425d5,1094a48885089f0587852f3915a34301194425d5,fixed variable names for error reporting in account auditor
redbo,2010-10-14 19:23:26,https://api.github.com/repos/openstack/swift/git/commits/7c484d9237c4cc7f42dfa72bb251f586bfc57f45,7c484d9237c4cc7f42dfa72bb251f586bfc57f45,object replicator only handoff for unmounted drives
annabellebertooch,2010-10-14 19:07:08,https://api.github.com/repos/openstack/swift/git/commits/2a0f3f8c4bc3745f42ac3c274192f4408dd1e0ad,2a0f3f8c4bc3745f42ac3c274192f4408dd1e0ad,"Spell check on .rst files for Swift, should be minimal impact. Example is changing ""to of from"" to ""to or from"" in the overview_architecture.rst file."
annabellebertooch,2010-10-14 18:38:38,https://api.github.com/repos/openstack/swift/git/commits/b1d10d854dab366a782e2cc51a7f9bd463161cd8,b1d10d854dab366a782e2cc51a7f9bd463161cd8,Deleted pesky extra space.
annabellebertooch,2010-10-14 18:11:21,https://api.github.com/repos/openstack/swift/git/commits/39a9394751d9d945caf0bfbb2f4be37839b495d8,39a9394751d9d945caf0bfbb2f4be37839b495d8,"Modified for edits. 


-------------This line and the following will be ignored --------------


modified:
  doc/source/development_auth.rst
  doc/source/getting_started.rst"
notmyname,2010-10-13 21:48:26,https://api.github.com/repos/openstack/swift/git/commits/7bd99fe54e0fa2acc6b8f7cc91ec2cc2be05f4b4,7bd99fe54e0fa2acc6b8f7cc91ec2cc2be05f4b4,updated auditor docstrings
notmyname,2010-10-13 21:34:56,https://api.github.com/repos/openstack/swift/git/commits/a8f05249a1636fcdbd2564858e9487d7d11413d3,a8f05249a1636fcdbd2564858e9487d7d11413d3,fixed pep8 error
notmyname,2010-10-13 21:32:42,https://api.github.com/repos/openstack/swift/git/commits/f5a7b019ec3c58da577165ece1bf90499cb913b9,f5a7b019ec3c58da577165ece1bf90499cb913b9,readded interval for the auditor. deleted too much earlier
redbo,2010-10-13 21:29:58,https://api.github.com/repos/openstack/swift/git/commits/9d49aedf0e74a17764ff39528db58245aa935f07,9d49aedf0e74a17764ff39528db58245aa935f07,sample conf update
redbo,2010-10-13 21:26:43,https://api.github.com/repos/openstack/swift/git/commits/c27da7bb9d3f47e6ab9772133a38265646162e3e,c27da7bb9d3f47e6ab9772133a38265646162e3e,Change chunks_per_sync config to mb_per_sync
annabellebertooch,2010-10-13 16:28:27,https://api.github.com/repos/openstack/swift/git/commits/6c5c1e3071b103bf732b042be26a1b9ecfdf965c,6c5c1e3071b103bf732b042be26a1b9ecfdf965c,Spell check for .rst files
gholt,2010-10-12 20:36:19,https://api.github.com/repos/openstack/swift/git/commits/5d450b5f6d1da75919fb65cfb5c7f25c6fb11eb4,5d450b5f6d1da75919fb65cfb5c7f25c6fb11eb4,Fix to unit test (that has been broken for a while I guess)
notmyname,2010-10-12 20:03:26,https://api.github.com/repos/openstack/swift/git/commits/226c074dd55c41f2c39ee9d1c77a48c3016899ed,226c074dd55c41f2c39ee9d1c77a48c3016899ed,refactored run forever loop in auditors to remove an unneeded call
notmyname,2010-10-12 19:58:20,https://api.github.com/repos/openstack/swift/git/commits/458055a3474515b7e671837260a300486759260a,458055a3474515b7e671837260a300486759260a,fixed typo in object auditor
notmyname,2010-10-12 19:55:13,https://api.github.com/repos/openstack/swift/git/commits/5c43b44f24d53873cd409208cf3879f14de7e2ab,5c43b44f24d53873cd409208cf3879f14de7e2ab,fixed typo in account and container auditors
notmyname,2010-10-12 19:53:27,https://api.github.com/repos/openstack/swift/git/commits/bb8463536561793f8486914a099a4dd4143cc824,bb8463536561793f8486914a099a4dd4143cc824,fixed typo in account auditor
notmyname,2010-10-12 19:48:08,https://api.github.com/repos/openstack/swift/git/commits/e706b84e01aabfc474dc5fedaec4d0eb189781e4,e706b84e01aabfc474dc5fedaec4d0eb189781e4,updated object auditor
clayg,2010-10-12 17:49:20,https://api.github.com/repos/openstack/swift/git/commits/fda5dfd6f9daa31ca8f125208f96849b58946832,fda5dfd6f9daa31ca8f125208f96849b58946832,"fixed write timeout bug, better coverage of proxy PUT method, pep8"
notmyname,2010-10-12 16:51:14,https://api.github.com/repos/openstack/swift/git/commits/929247e59c4136b307a173d9908796a10ae57fe8,929247e59c4136b307a173d9908796a10ae57fe8,updated account auditor
notmyname,2010-10-12 15:49:09,https://api.github.com/repos/openstack/swift/git/commits/c210323ab84bf94f66917ec5ec2383898d94a78c,c210323ab84bf94f66917ec5ec2383898d94a78c,merged with trunk
notmyname,2010-10-12 15:47:56,https://api.github.com/repos/openstack/swift/git/commits/2579cf54c20fc3096d334b9e83f31b0cb8c4e42a,2579cf54c20fc3096d334b9e83f31b0cb8c4e42a,updated container auditor to only do local work and updated auditor configs
clayg,2010-10-11 22:33:11,https://api.github.com/repos/openstack/swift/git/commits/c53fbec3cd4de373f377eaedcd543900cd6ecd5a,c53fbec3cd4de373f377eaedcd543900cd6ecd5a,"created failing test for write timeout 422 error, added tests for better coverage of ObjectController.PUT, pep8"
creiht,2010-10-08 22:37:13,https://api.github.com/repos/openstack/swift/git/commits/a938d2c6abb62394957dad7fced3fab8d5ad2017,a938d2c6abb62394957dad7fced3fab8d5ad2017,Somehow I missed one last commit that correctly prints the help instead of just the usage.
notmyname,2010-10-08 22:27:37,https://api.github.com/repos/openstack/swift/git/commits/679efc0300116e183234bc64d8165dc094eab6e8,679efc0300116e183234bc64d8165dc094eab6e8,stats system for swift that takes logs generated by the system and creates a .csv file with aggregate info for each account in the system
notmyname,2010-10-08 22:20:43,https://api.github.com/repos/openstack/swift/git/commits/9572fa62f557e590949d68ebdc41dbf2d9e7837e,9572fa62f557e590949d68ebdc41dbf2d9e7837e,added lazy load of internal proxy to log processor (you were right clay)
notmyname,2010-10-08 21:34:27,https://api.github.com/repos/openstack/swift/git/commits/86faf56ee11008f01b6a5dee9fa96d5f74c9a5dd,86faf56ee11008f01b6a5dee9fa96d5f74c9a5dd,moved paren
notmyname,2010-10-08 21:31:55,https://api.github.com/repos/openstack/swift/git/commits/9ed1d023128e84789b0d385439312b9add3031ba,9ed1d023128e84789b0d385439312b9add3031ba,pep8 tomfoolery
notmyname,2010-10-08 21:22:23,https://api.github.com/repos/openstack/swift/git/commits/041933a706514708527225b2ce3994c1d0c11f62,041933a706514708527225b2ce3994c1d0c11f62,fixed account stats filename creation
notmyname,2010-10-08 20:23:23,https://api.github.com/repos/openstack/swift/git/commits/0235c5cd86f793b1fb737b4cd673f4febb4e5d4d,0235c5cd86f793b1fb737b4cd673f4febb4e5d4d,fixed internal proxy references in log processor
notmyname,2010-10-08 19:55:43,https://api.github.com/repos/openstack/swift/git/commits/60d159fd39478f59914723042cf198cdd99ea95c,60d159fd39478f59914723042cf198cdd99ea95c,updated readconf test
notmyname,2010-10-08 19:47:40,https://api.github.com/repos/openstack/swift/git/commits/8ee2cbaeee9eeff1b07588880b1ad3cc59714ab3,8ee2cbaeee9eeff1b07588880b1ad3cc59714ab3,updated readconf test
notmyname,2010-10-08 19:29:24,https://api.github.com/repos/openstack/swift/git/commits/4111a16189e4ddc9b0a9085d4bda0d4a403cc960,4111a16189e4ddc9b0a9085d4bda0d4a403cc960,updated readconf test
notmyname,2010-10-08 19:25:45,https://api.github.com/repos/openstack/swift/git/commits/f6e6fd7599aa22f0d764f9e317d6d9d70e0ebdbe,f6e6fd7599aa22f0d764f9e317d6d9d70e0ebdbe,fixed bug in log processor internal proxy lazy load code
notmyname,2010-10-08 19:23:20,https://api.github.com/repos/openstack/swift/git/commits/adfb92443f4a6d9dc96551974094adfb3bfe2cf0,adfb92443f4a6d9dc96551974094adfb3bfe2cf0,updated stats saio docs to create logs with the appropriate permissions
notmyname,2010-10-08 19:14:08,https://api.github.com/repos/openstack/swift/git/commits/665b7f97fbc1ef3d8b69a3261603c1206ff6497f,665b7f97fbc1ef3d8b69a3261603c1206ff6497f,added readconf unit test
notmyname,2010-10-08 18:50:21,https://api.github.com/repos/openstack/swift/git/commits/8f0ae7a0ebc6ddba5c5cefb3d0ecb3a25e552c1f,8f0ae7a0ebc6ddba5c5cefb3d0ecb3a25e552c1f,updated setup.py and saio docs for syats system
notmyname,2010-10-08 18:40:51,https://api.github.com/repos/openstack/swift/git/commits/0c5e34e9a19c7f4b6e2504ad61b12f028790cebb,0c5e34e9a19c7f4b6e2504ad61b12f028790cebb,fixed readconf parameter that was broken with a previous merge
notmyname,2010-10-08 18:31:17,https://api.github.com/repos/openstack/swift/git/commits/f3397977d3d2fd1a7919e342e9b7396dc86deec2,f3397977d3d2fd1a7919e342e9b7396dc86deec2,fixed missing working directory bug in account stats
redbo,2010-10-08 15:27:15,https://api.github.com/repos/openstack/swift/git/commits/9169076ca24bfa1a4c87826287319143b282ae5e,9169076ca24bfa1a4c87826287319143b282ae5e,"make wsgi listen queue configurable, with a bigger default"
redbo,2010-10-08 15:00:30,https://api.github.com/repos/openstack/swift/git/commits/690262b3628ea2a0dfce6a3c52be27fe731843d6,690262b3628ea2a0dfce6a3c52be27fe731843d6,"Make wsgi listen queue configurable, with a bigger default"
notmyname,2010-10-08 01:58:43,https://api.github.com/repos/openstack/swift/git/commits/6c4b7bc55f7d4f540548e25197fb90d02fc6d26f,6c4b7bc55f7d4f540548e25197fb90d02fc6d26f,merged with trunk
notmyname,2010-10-08 01:56:31,https://api.github.com/repos/openstack/swift/git/commits/cf5542beb93f551b8ef134f8645b32fb9f1d8854,cf5542beb93f551b8ef134f8645b32fb9f1d8854,improved logging in log processors
notmyname,2010-10-08 01:36:51,https://api.github.com/repos/openstack/swift/git/commits/61226339e6c3bfb13232ffdbb4adb88c76b470cf,61226339e6c3bfb13232ffdbb4adb88c76b470cf,added openstack copyright/license to test_log_processor.py
creiht,2010-10-07 21:36:39,https://api.github.com/repos/openstack/swift/git/commits/84a163d736924d6eb3aae45fe68e76bf314e0873,84a163d736924d6eb3aae45fe68e76bf314e0873,"Somehow I missed the commit to print the whole help, not just usage"
notmyname,2010-10-07 21:16:55,https://api.github.com/repos/openstack/swift/git/commits/8e581a66b4555968bff82d4e0f7315fb8e89e990,8e581a66b4555968bff82d4e0f7315fb8e89e990,fixed stats system saio docs
notmyname,2010-10-07 21:12:55,https://api.github.com/repos/openstack/swift/git/commits/4349bfa3afabe511cc088dee00d94b2a57262d0c,4349bfa3afabe511cc088dee00d94b2a57262d0c,fixed stats system saio docs
notmyname,2010-10-07 20:50:56,https://api.github.com/repos/openstack/swift/git/commits/09cbe002edfc0a46c7a2a8c69cd9bb6b25b6a496,09cbe002edfc0a46c7a2a8c69cd9bb6b25b6a496,updated SAIO instructions for the stats system
gholt,2010-10-07 18:07:15,https://api.github.com/repos/openstack/swift/git/commits/af9f4d79b8e4cba7e8f1b2abd9cb7208b08eabfb,af9f4d79b8e4cba7e8f1b2abd9cb7208b08eabfb,"Added some missing test stubs so we can better see coverage (and get a little syntax-level ""testing"")."
clayg,2010-10-07 17:52:14,https://api.github.com/repos/openstack/swift/git/commits/381c4d55e81b57215c1128ed0aa3cd4d12120b23,381c4d55e81b57215c1128ed0aa3cd4d12120b23,added ability for higher level's of verbosity to options in bin/st
clayg,2010-10-07 16:28:59,https://api.github.com/repos/openstack/swift/git/commits/dfbb80693a5c82d199dd1ed46421fe1c4f85d4a9,dfbb80693a5c82d199dd1ed46421fe1c4f85d4a9,"added -v option to st, ties into -q option, for higher levels of verbosity - currently on the stat command does anything with options.verbose > 1 - it will give you the storage url and token in case you need to drop into curl"
clayg,2010-10-07 15:57:14,https://api.github.com/repos/openstack/swift/git/commits/c8329575eb059df2929248e9e5fe9be2281a327a,c8329575eb059df2929248e9e5fe9be2281a327a,"minor change to test_auth_middleware to be more explicit about the expected default values on empty Request objects, won't really be compatible with webob 1.0 until they update their release with the pending fix in trunk (http://bitbucket.org/ianb/webob/changeset/4a767f7d1659)"
notmyname,2010-10-07 15:33:35,https://api.github.com/repos/openstack/swift/git/commits/9ad1ffd056bdc613fc62f597455e5ac18def66c2,9ad1ffd056bdc613fc62f597455e5ac18def66c2,merged with gholt's test stubs
gholt,2010-10-07 15:23:17,https://api.github.com/repos/openstack/swift/git/commits/e6e354c4839619f38c4db77fca844921e61e44eb,e6e354c4839619f38c4db77fca844921e61e44eb,"Added some missing test stubs so we can better see coverage (and get a little syntax-level ""testing"")."
gholt,2010-10-07 15:08:42,https://api.github.com/repos/openstack/swift/git/commits/ccf47f825ff5222cd93fb247b8c9c8edafaa9fe9,ccf47f825ff5222cd93fb247b8c9c8edafaa9fe9,Adding test stubs for missing test areas
clayg,2010-10-06 21:10:04,https://api.github.com/repos/openstack/swift/git/commits/456dea9295fb391af7dde594f938f04a9b608461,456dea9295fb391af7dde594f938f04a9b608461,"confirmed pending patch with webob 1.0; resolved only known issue with webob trunk, some pep8 cleanup"
notmyname,2010-10-06 15:13:51,https://api.github.com/repos/openstack/swift/git/commits/7ec88950eb8860322657c98dc8f6e78f1c1a0000,7ec88950eb8860322657c98dc8f6e78f1c1a0000,updated stats system tests
notmyname,2010-10-05 14:30:25,https://api.github.com/repos/openstack/swift/git/commits/2ad602b68b8d5840fbb2a6039360cecf5107091f,2ad602b68b8d5840fbb2a6039360cecf5107091f,added keylist mapping tests and fixed other tests
notmyname,2010-10-05 14:02:45,https://api.github.com/repos/openstack/swift/git/commits/f4d4856629aa157a364d097843d8a1da62fceac1,f4d4856629aa157a364d097843d8a1da62fceac1,made try/except much less inclusive in access log processor
notmyname,2010-10-04 21:59:10,https://api.github.com/repos/openstack/swift/git/commits/42cc1352cca06bd9a1793c810cf4937762bf37df,42cc1352cca06bd9a1793c810cf4937762bf37df,fixed compressing file reader test
notmyname,2010-10-04 21:55:08,https://api.github.com/repos/openstack/swift/git/commits/0ca5286ad9ec47cbe0502d421194f47fd71ab181,0ca5286ad9ec47cbe0502d421194f47fd71ab181,improved compressing file reader test
notmyname,2010-10-04 21:43:03,https://api.github.com/repos/openstack/swift/git/commits/6b2106ae33e06a5322ce3e00669b6d4173a6b870,6b2106ae33e06a5322ce3e00669b6d4173a6b870,fixed compressing file reader test
notmyname,2010-10-04 21:41:59,https://api.github.com/repos/openstack/swift/git/commits/683aa3b3c23fa8cdab51df37ad9b58dd7cbf2ca5,683aa3b3c23fa8cdab51df37ad9b58dd7cbf2ca5,fixed compressing file reader test
notmyname,2010-10-04 21:40:06,https://api.github.com/repos/openstack/swift/git/commits/3a841f20497269ceb0784ee562022964c6e3bac5,3a841f20497269ceb0784ee562022964c6e3bac5,added tests for compressing file reader
notmyname,2010-10-04 21:12:43,https://api.github.com/repos/openstack/swift/git/commits/9a915a00f7c497fa56a255b34c1a345002bb33cd,9a915a00f7c497fa56a255b34c1a345002bb33cd,added a bad lines check to the access log parser
notmyname,2010-10-04 20:48:57,https://api.github.com/repos/openstack/swift/git/commits/a6becf6a3f290fd56b628703df8e346204c6a80b,a6becf6a3f290fd56b628703df8e346204c6a80b,fixed stats docs
notmyname,2010-10-04 20:47:02,https://api.github.com/repos/openstack/swift/git/commits/fcc48b305c1bdf40203a99e00a72ebc9946f86f0,fcc48b305c1bdf40203a99e00a72ebc9946f86f0,merged with trunk
creiht,2010-10-04 18:08:40,https://api.github.com/repos/openstack/swift/git/commits/1c5490e29dbbe9ebc61b461cbe44d51aef05fae0,1c5490e29dbbe9ebc61b461cbe44d51aef05fae0,Adding a first stab at a general swift benchmark
creiht,2010-10-04 15:09:53,https://api.github.com/repos/openstack/swift/git/commits/18245c1adc7a25e2cdf5fda396dadae13be99d76,18245c1adc7a25e2cdf5fda396dadae13be99d76,"Updated to print usage by default if no args are passed, and added --saio to run with saio defaults"
notmyname,2010-10-04 01:51:19,https://api.github.com/repos/openstack/swift/git/commits/ac6b25b9e830d6c3016b29ecff290de2b9e91716,ac6b25b9e830d6c3016b29ecff290de2b9e91716,merged with trunk
creiht,2010-10-01 19:55:08,https://api.github.com/repos/openstack/swift/git/commits/5d92d43cacac7c6bdf218af8f381218f2d2a32eb,5d92d43cacac7c6bdf218af8f381218f2d2a32eb,Copy paste fail
creiht,2010-10-01 19:50:34,https://api.github.com/repos/openstack/swift/git/commits/d7d0bd425377ac9c798de79f6661e6fdb20adfad,d7d0bd425377ac9c798de79f6661e6fdb20adfad,added apache license to the new files
creiht,2010-10-01 19:46:35,https://api.github.com/repos/openstack/swift/git/commits/117aef456d637598def40edef2b1dbc6b8988a88,117aef456d637598def40edef2b1dbc6b8988a88,Refactored swift-bench to reuse client.py and direct_client.py
notmyname,2010-10-01 16:20:51,https://api.github.com/repos/openstack/swift/git/commits/c98cb5ab12de1470505c98c08915a2639dfceeef,c98cb5ab12de1470505c98c08915a2639dfceeef,merged with trunk
notmyname,2010-09-30 21:02:45,https://api.github.com/repos/openstack/swift/git/commits/4f93661b9d695b9a12615dfd3eaa75ac86bd9397,4f93661b9d695b9a12615dfd3eaa75ac86bd9397,made long lines wrap (grr pep8)
notmyname,2010-09-30 20:56:39,https://api.github.com/repos/openstack/swift/git/commits/f51df2cd2674c16ae4cb2bd91ab474d2dcaefc50,f51df2cd2674c16ae4cb2bd91ab474d2dcaefc50,added overview stats to the doc index
notmyname,2010-09-30 20:48:56,https://api.github.com/repos/openstack/swift/git/commits/880f5af2ffc1f2a145e03a179c4826c8b260efde,880f5af2ffc1f2a145e03a179c4826c8b260efde,documentation clarification and pep8 fixes
creiht,2010-09-30 19:43:17,https://api.github.com/repos/openstack/swift/git/commits/77fa8a357bdfb66ce6e0907299874930f2bc1a9f,77fa8a357bdfb66ce6e0907299874930f2bc1a9f,"Updated SAIO instructions for using a loopback device for storage, and changed rsync config to listen only on localhost"
creiht,2010-09-30 17:45:54,https://api.github.com/repos/openstack/swift/git/commits/1bb40411cf22b3bfdd94699699e8e6d487aa62d8,1bb40411cf22b3bfdd94699699e8e6d487aa62d8,updated the note for the resetswift script to be in line with the new loopback device
creiht,2010-09-30 17:41:49,https://api.github.com/repos/openstack/swift/git/commits/9de5e9292704fe2634e2b14698c0df0f14065ee0,9de5e9292704fe2634e2b14698c0df0f14065ee0,Updated loopback instructions per redbo
creiht,2010-09-30 16:23:39,https://api.github.com/repos/openstack/swift/git/commits/a9508c70b53eee4dccfdb4ad10e81adda4793448,a9508c70b53eee4dccfdb4ad10e81adda4793448,Moved the message about adding an extra device to the step when creating the VM
creiht,2010-09-30 16:18:37,https://api.github.com/repos/openstack/swift/git/commits/58cc9078dad4fcbb4286ee89db8a480e668f819b,58cc9078dad4fcbb4286ee89db8a480e668f819b,Updated to be a bit more generic about the VM
creiht,2010-09-30 15:47:57,https://api.github.com/repos/openstack/swift/git/commits/41906b15fdf7830f3aadaf4b9a0dbaf1ec344515,41906b15fdf7830f3aadaf4b9a0dbaf1ec344515,Changed rsync on saio to only listen on localhost
creiht,2010-09-30 15:35:10,https://api.github.com/repos/openstack/swift/git/commits/a2f7209eac9453843010f5fbf05f9f3868ebe4e3,a2f7209eac9453843010f5fbf05f9f3868ebe4e3,Updated saio with instructions for using a loopback device
notmyname,2010-09-29 20:22:04,https://api.github.com/repos/openstack/swift/git/commits/b44296d146fdeaffde511408eeea18160cd22afe,b44296d146fdeaffde511408eeea18160cd22afe,added additional docs
creiht,2010-09-28 16:06:35,https://api.github.com/repos/openstack/swift/git/commits/ed2a3e9bd2dfbaccacf25c804f7414738cf10a16,ed2a3e9bd2dfbaccacf25c804f7414738cf10a16,Now uses TRUE_VALUES from utils.py
creiht,2010-09-28 15:05:08,https://api.github.com/repos/openstack/swift/git/commits/f71a85a05bd3d12d44def96f2152cf4dd8b0f180,f71a85a05bd3d12d44def96f2152cf4dd8b0f180,Missed a rename
creiht,2010-09-28 15:00:59,https://api.github.com/repos/openstack/swift/git/commits/fddbbc013429f9eb1d5f5eb4033ccb3b6faaf9a4,fddbbc013429f9eb1d5f5eb4033ccb3b6faaf9a4,Removed some code that was no longer used
creiht,2010-09-27 23:17:29,https://api.github.com/repos/openstack/swift/git/commits/902ce40a37a7efda7caeed83859fcb76a70bfc81,902ce40a37a7efda7caeed83859fcb76a70bfc81,Fixing merge conflict
creiht,2010-09-27 23:10:09,https://api.github.com/repos/openstack/swift/git/commits/6cef24dcd757ad36d4d861353d3fc911a36a8e7a,6cef24dcd757ad36d4d861353d3fc911a36a8e7a,Initial checkin of benchmark code
notmyname,2010-09-24 15:22:15,https://api.github.com/repos/openstack/swift/git/commits/8ed75703fcddb1271c49348440ad9dfab4931e60,8ed75703fcddb1271c49348440ad9dfab4931e60,"Fixes bug where ""/"" was not allowed in Destination header in COPY requests"
notmyname,2010-09-24 14:51:00,https://api.github.com/repos/openstack/swift/git/commits/e68dc690165f15505c2a284e99589383ac82d3c1,e68dc690165f15505c2a284e99589383ac82d3c1,fixed COPY bug and adds tests so it won't happend again
notmyname,2010-09-23 18:28:21,https://api.github.com/repos/openstack/swift/git/commits/b71defb2e72915a2e06deaba1883352967003d28,b71defb2e72915a2e06deaba1883352967003d28,updated with changes from trunk
creiht,2010-09-23 18:22:48,https://api.github.com/repos/openstack/swift/git/commits/b39fcb86bb988a93c1a4569e2eefa5c22b72cd31,b39fcb86bb988a93c1a4569e2eefa5c22b72cd31,"object-updater now records successful updates in the pickle, so that in failure scenarios it doesn't have to retry the ones the were successful before."
gholt,2010-09-23 18:22:06,https://api.github.com/repos/openstack/swift/git/commits/9a4598abd639a7c93af902468796fc5456a1eeb4,9a4598abd639a7c93af902468796fc5456a1eeb4,Fixed bug where the object auditor hadn't been calling invalidate_hash.
creiht,2010-09-23 16:09:30,https://api.github.com/repos/openstack/swift/git/commits/044b065cda9a0326a48b8c40895eef5e1d8f643c,044b065cda9a0326a48b8c40895eef5e1d8f643c,Refactored to correctly write the pickle to disk
redbo,2010-09-22 20:22:04,https://api.github.com/repos/openstack/swift/git/commits/ead226e706612930f3dc9af19ed96f9092de631c,ead226e706612930f3dc9af19ed96f9092de631c,Make check_xml_encodable to only validate utf-8 correctness
gholt,2010-09-22 20:07:15,https://api.github.com/repos/openstack/swift/git/commits/2d6015a0a8c1e21e3dc4db2890b607768b0bce5b,2d6015a0a8c1e21e3dc4db2890b607768b0bce5b,Fixed bug where the object auditor hadn't been calling invalidate_hash
redbo,2010-09-22 19:53:38,https://api.github.com/repos/openstack/swift/git/commits/36c05a28efde907634c583e59951a5d7ee38971d,36c05a28efde907634c583e59951a5d7ee38971d,unused code
redbo,2010-09-22 19:34:52,https://api.github.com/repos/openstack/swift/git/commits/9ea5d0b3a181a4c5159acad6fd41d14867fb4103,9ea5d0b3a181a4c5159acad6fd41d14867fb4103,Make check_xml_encodable to only validate utf-8 correctness
notmyname,2010-09-22 14:43:33,https://api.github.com/repos/openstack/swift/git/commits/08c497dea01598c691258dfa3ca639d551c63643,08c497dea01598c691258dfa3ca639d551c63643,added stats overview
notmyname,2010-09-22 14:35:07,https://api.github.com/repos/openstack/swift/git/commits/9079e310c25f5680d8f0783700292dda1c4907e8,9079e310c25f5680d8f0783700292dda1c4907e8,merged with changes from trunk
notmyname,2010-09-22 14:32:40,https://api.github.com/repos/openstack/swift/git/commits/ea690795df6a38e1518d099b3e60aa3310a806df,ea690795df6a38e1518d099b3e60aa3310a806df,updated with changes and suggestions from code review
creiht,2010-09-21 20:31:14,https://api.github.com/repos/openstack/swift/git/commits/1d26b15a4eacd34c258376c6e1c27d0abb984cb1,1d26b15a4eacd34c258376c6e1c27d0abb984cb1,Updated object updater to keep track of successes so it doesn't retry updating nodes that it has already updated
clayg,2010-09-20 22:52:58,https://api.github.com/repos/openstack/swift/git/commits/0bb5857da3af3afc2872255441efa1c0fbc23f3f,0bb5857da3af3afc2872255441efa1c0fbc23f3f,"pep8 issues, refactored log_processor a tiny bit for testing (lazy load internal proxy), added a few comments"
notmyname,2010-09-20 18:28:52,https://api.github.com/repos/openstack/swift/git/commits/55c997aa9417073d13a564cf0ebbc5c9dcc88d22,55c997aa9417073d13a564cf0ebbc5c9dcc88d22,fixed test bug
notmyname,2010-09-20 18:26:00,https://api.github.com/repos/openstack/swift/git/commits/872a2f67a3f8c47c39bf2a8de2c92cd19a0e4caa,872a2f67a3f8c47c39bf2a8de2c92cd19a0e4caa,fixed tests to account for changed key name
notmyname,2010-09-20 14:21:53,https://api.github.com/repos/openstack/swift/git/commits/4bfc2c3f33390b40e1a9677793b11f9f8c0be255,4bfc2c3f33390b40e1a9677793b11f9f8c0be255,merged with trunk
gholt,2010-09-17 19:32:27,https://api.github.com/repos/openstack/swift/git/commits/43b6a501f7f69358a767e3f2c9c420415a93b044,43b6a501f7f69358a767e3f2c9c420415a93b044,"devauth-middleware will not set its authorize func unless the token or account starts with the reseller prefix; if its not going to use its authorize func, it will set a deny-by-default func if one is not set already"
gholt,2010-09-17 18:26:30,https://api.github.com/repos/openstack/swift/git/commits/c5513de8ac59ae5d55f7d416d0edf8a9b49f439a,c5513de8ac59ae5d55f7d416d0edf8a9b49f439a,"More doc updates, little refactoring too"
gholt,2010-09-17 16:32:39,https://api.github.com/repos/openstack/swift/git/commits/903a800fa290847f54ca015dd3410c783d8adc9f,903a800fa290847f54ca015dd3410c783d8adc9f,Merged changes from lp:~clay-gerrard/swift/authpatch2.1
clayg,2010-09-17 16:03:07,https://api.github.com/repos/openstack/swift/git/commits/e911634deab4c749efb07dd44db87bbd5a1849fe,e911634deab4c749efb07dd44db87bbd5a1849fe,"after I was sure all cases were covered, I rearranged code to be more like greg's; added comments, and tests"
clayg,2010-09-16 21:44:44,https://api.github.com/repos/openstack/swift/git/commits/d5770ee21401468c49391eee3e8e8a724e92425f,d5770ee21401468c49391eee3e8e8a724e92425f,trying to make sense of auth middleware and reseller prefix
gholt,2010-09-16 18:14:09,https://api.github.com/repos/openstack/swift/git/commits/01059884b3059b0ab30b2de5918471dca4bba850,01059884b3059b0ab30b2de5918471dca4bba850,Update to better support no-reseller-prefix and multiple auth middleware
gholt,2010-09-16 17:48:15,https://api.github.com/repos/openstack/swift/git/commits/73ee6708dfedbcfa30d4a49898eaea368c5d752a,73ee6708dfedbcfa30d4a49898eaea368c5d752a,Merge updates from trunk
gholt,2010-09-16 13:02:26,https://api.github.com/repos/openstack/swift/git/commits/bb8b5069193549d4a5615fc129e3bf734bf192e3,bb8b5069193549d4a5615fc129e3bf734bf192e3,Just a bit of PEP8ing
gholt,2010-09-16 03:52:54,https://api.github.com/repos/openstack/swift/git/commits/c138ad99a2d1c968de0eda7f2c7368662e9a117d,c138ad99a2d1c968de0eda7f2c7368662e9a117d,Just a bit of PEP8ing
gholt,2010-09-16 03:29:44,https://api.github.com/repos/openstack/swift/git/commits/9b9c64d27c635b909c22056d572d5a54c583ed14,9b9c64d27c635b909c22056d572d5a54c583ed14,Notify if reseller_prefix does not match what is in auth.db
gholt,2010-09-16 02:07:35,https://api.github.com/repos/openstack/swift/git/commits/2000556522a09c2f8c626884aee275311f617340,2000556522a09c2f8c626884aee275311f617340,Made auth.db upgrade message a bit more clear.
gholt,2010-09-16 01:44:54,https://api.github.com/repos/openstack/swift/git/commits/f68a0b0af2fed5373a3c78b400544f88bd0ec348,f68a0b0af2fed5373a3c78b400544f88bd0ec348,Notify if reseller_prefix does not match what is in auth.db
gholt,2010-09-15 21:26:53,https://api.github.com/repos/openstack/swift/git/commits/c60c409d61c0dd2e13235a27810954a66de03c81,c60c409d61c0dd2e13235a27810954a66de03c81,"devauth-middleware will not set its authorize func unless the token or account starts with the reseller prefix; if its not going to use its authorize func, it will set a deny-by-default func if one is not set already"
gholt,2010-09-15 20:37:06,https://api.github.com/repos/openstack/swift/git/commits/a8b37dfecd76857244b76c3efa9f3c039f8b87c0,a8b37dfecd76857244b76c3efa9f3c039f8b87c0,auth-server: Change 400 to 409 when trying to add an existing user
notmyname,2010-09-15 20:16:08,https://api.github.com/repos/openstack/swift/git/commits/d0956f48b8572ffdf4188fa31bcfe939e87f06c2,d0956f48b8572ffdf4188fa31bcfe939e87f06c2,merged with trunk
gholt,2010-09-15 20:11:06,https://api.github.com/repos/openstack/swift/git/commits/c55a069468fa2ad54f897f02e7622ca6556d93c0,c55a069468fa2ad54f897f02e7622ca6556d93c0,auth-server: Change 400 to 409 when trying to add an existing user
notmyname,2010-09-15 20:07:53,https://api.github.com/repos/openstack/swift/git/commits/ddfc1f2951ab2303b9ed13f64267d42858b56abc,ddfc1f2951ab2303b9ed13f64267d42858b56abc,fixed lookback in log processor
gholt,2010-09-15 19:32:33,https://api.github.com/repos/openstack/swift/git/commits/899d31279db7c26314c6270f928cf31a7b871505,899d31279db7c26314c6270f928cf31a7b871505,Locking down the DevAuth by adding support for a super admin and reseller admins.
notmyname,2010-09-15 19:23:45,https://api.github.com/repos/openstack/swift/git/commits/457e8560ae891e5793898fb69c78e326cdc74bea,457e8560ae891e5793898fb69c78e326cdc74bea,fixed replica count reporting error
notmyname,2010-09-15 19:11:10,https://api.github.com/repos/openstack/swift/git/commits/4412ec7ac813489e6e15c4f49d8f4b2e68814ecf,4412ec7ac813489e6e15c4f49d8f4b2e68814ecf,fixed stdout capturing for generating csv files
notmyname,2010-09-15 19:01:17,https://api.github.com/repos/openstack/swift/git/commits/6ed3724880c99bc8714c52464aa629526b31e145,6ed3724880c99bc8714c52464aa629526b31e145,fixed listing filter in log processing
notmyname,2010-09-15 18:40:47,https://api.github.com/repos/openstack/swift/git/commits/e08fb7c0cbfb8635812d31b0af8e9f242413948b,e08fb7c0cbfb8635812d31b0af8e9f242413948b,fixed bug in account stats log processing
notmyname,2010-09-15 08:32:47,https://api.github.com/repos/openstack/swift/git/commits/ff37407f8f78f3246a4f2bcaf574075529bc6ce8,ff37407f8f78f3246a4f2bcaf574075529bc6ce8,"fixed tests, typos, and added error handling"
notmyname,2010-09-15 08:17:56,https://api.github.com/repos/openstack/swift/git/commits/51218437768a0c04590f9896dfc902d2d67d2aa8,51218437768a0c04590f9896dfc902d2d67d2aa8,handled some typos and better handling of missing data in internal proxy
notmyname,2010-09-15 07:53:06,https://api.github.com/repos/openstack/swift/git/commits/157e01e84b3902ba0e823422b80ada0849ef6af5,157e01e84b3902ba0e823422b80ada0849ef6af5,added error handling and missing return statement
notmyname,2010-09-15 07:49:09,https://api.github.com/repos/openstack/swift/git/commits/c7773ee6f8cfab403df07f54cfde6a1a2029db84,c7773ee6f8cfab403df07f54cfde6a1a2029db84,fixed copy/paste errors and missing imports
notmyname,2010-09-15 07:34:10,https://api.github.com/repos/openstack/swift/git/commits/c28f5550a039b7b94717db5fe4b86713ef253e04,c28f5550a039b7b94717db5fe4b86713ef253e04,fixed logging and log uploading
notmyname,2010-09-15 06:55:51,https://api.github.com/repos/openstack/swift/git/commits/d037c5f92e7e7321f5b676456928180bb3104fa3,d037c5f92e7e7321f5b676456928180bb3104fa3,added some debug output
notmyname,2010-09-15 06:42:23,https://api.github.com/repos/openstack/swift/git/commits/8e19ef973a5dab82272db964cc6fbce516df80c7,8e19ef973a5dab82272db964cc6fbce516df80c7,fixed get_data_list in log_processor
notmyname,2010-09-15 06:36:02,https://api.github.com/repos/openstack/swift/git/commits/20596ffcce2f09920f963b32121f4763ad66bb3a,20596ffcce2f09920f963b32121f4763ad66bb3a,fixed typos in log processor
notmyname,2010-09-15 06:21:24,https://api.github.com/repos/openstack/swift/git/commits/603d6a31758e92755ca2a1a80c47312dec3e9a55,603d6a31758e92755ca2a1a80c47312dec3e9a55,fixed bug in calculating offsets for filename patterns
notmyname,2010-09-15 06:10:51,https://api.github.com/repos/openstack/swift/git/commits/031a29c651433c8ca29884e4ad85c172ac24400f,031a29c651433c8ca29884e4ad85c172ac24400f,fixed some log uploading glob patterns
notmyname,2010-09-15 06:01:06,https://api.github.com/repos/openstack/swift/git/commits/e63cc70b3e3234e293f0b6993534110e78884527,e63cc70b3e3234e293f0b6993534110e78884527,fixed internal proxy put_container reference
notmyname,2010-09-14 22:24:48,https://api.github.com/repos/openstack/swift/git/commits/e4ac6f1cbba1aacf35702d02994f8c127e096068,e4ac6f1cbba1aacf35702d02994f8c127e096068,made a memcache stub for the internal proxy server
notmyname,2010-09-14 21:53:57,https://api.github.com/repos/openstack/swift/git/commits/42d9bab9c93624e2a45878cd0c79c48147993a4c,42d9bab9c93624e2a45878cd0c79c48147993a4c,fixed internal proxy loading
notmyname,2010-09-13 18:35:19,https://api.github.com/repos/openstack/swift/git/commits/de70ddce11b120be8803909367f39d8c241a2d39,de70ddce11b120be8803909367f39d8c241a2d39,fixed typos
notmyname,2010-09-13 16:11:12,https://api.github.com/repos/openstack/swift/git/commits/25c775516c9f60abdd22ec329cb6adab5037092f,25c775516c9f60abdd22ec329cb6adab5037092f,updated config file loading to work with paste.deploy configs
gholt,2010-09-12 00:23:24,https://api.github.com/repos/openstack/swift/git/commits/dcbb51cc715be197e18ccd77f5aedb557810e9df,dcbb51cc715be197e18ccd77f5aedb557810e9df,Updated docs.
gholt,2010-09-12 00:03:09,https://api.github.com/repos/openstack/swift/git/commits/2b995be46c90958cc60fea331ed8b761d0040d78,2b995be46c90958cc60fea331ed8b761d0040d78,Bugfixes. Rest of tests.
notmyname,2010-09-11 05:01:04,https://api.github.com/repos/openstack/swift/git/commits/e94faaff7f81091a566d3b2b07ad6015d1424662,e94faaff7f81091a566d3b2b07ad6015d1424662,added execute perms to stats processor binaries
gholt,2010-09-10 20:40:43,https://api.github.com/repos/openstack/swift/git/commits/b56bf3a0f3f5f80d3c2b50684d866ef79aa312d9,b56bf3a0f3f5f80d3c2b50684d866ef79aa312d9,DevAuth support for reseller admins and an initial super admin. DevAuth server no longer needs the account ring or direct account server access. Proxy server supports account PUTs.
notmyname,2010-09-10 20:09:41,https://api.github.com/repos/openstack/swift/git/commits/803f26c306c82b5e4d4803bf10a1e30c663419b6,803f26c306c82b5e4d4803bf10a1e30c663419b6,merged with trunk
notmyname,2010-09-10 20:08:06,https://api.github.com/repos/openstack/swift/git/commits/d8ad8ae473c84f21ca98d6583b3ca7d1b6b9e5a5,d8ad8ae473c84f21ca98d6583b3ca7d1b6b9e5a5,set up log-stats-collector as a daemon process to create csv files
gholt,2010-09-10 15:37:02,https://api.github.com/repos/openstack/swift/git/commits/118ffba216ba5b6d7ffb7e5c653d0a8d79301a52,118ffba216ba5b6d7ffb7e5c653d0a8d79301a52,Add container-level ACLs. Refactor auth to be more pluggable. Document how to make your own auth.
gholt,2010-09-10 14:52:10,https://api.github.com/repos/openstack/swift/git/commits/7057a7c3b3897208cf85bf089d6eafd1e9105c94,7057a7c3b3897208cf85bf089d6eafd1e9105c94,"Proof that test ""coverage"" != no obvious bugs"
gholt,2010-09-09 17:42:41,https://api.github.com/repos/openstack/swift/git/commits/6b353a520f05056d1cb136b9d674109de33f719f,6b353a520f05056d1cb136b9d674109de33f719f,Fix bug on auto-container create during upload.
gholt,2010-09-09 17:28:50,https://api.github.com/repos/openstack/swift/git/commits/c931d7602a233fad38b6e69466012eff1174fcb9,c931d7602a233fad38b6e69466012eff1174fcb9,Updated included client.py in st
gholt,2010-09-09 17:24:25,https://api.github.com/repos/openstack/swift/git/commits/a5df15005b38879d85ef6806f1273e19fe84f25a,a5df15005b38879d85ef6806f1273e19fe84f25a,Got rid of inter-reseller ACLs. Enforce ACLs to only work within a reseller space. Updated docs and tests. We can expand to inter-reseller in the future with ACLs like .x:RESELLER_group
gholt,2010-09-09 05:37:27,https://api.github.com/repos/openstack/swift/git/commits/d2ec027e2261e02b76b5da1712d099e35f55a90d,d2ec027e2261e02b76b5da1712d099e35f55a90d,"For ACL strings: Shortened .ref to just .r, though .ref, .referer, and .referrer are all accepted. Updated 'Creating Your Own Auth Middleware' to describe how the DevAuth server works and suggestions for creating one's own. Added reseller_prefix (optional) implementation. Used urlparse in referrer_allowed. Fixed bug where group names would get lowercased by clean_acl. Changed .r:any to .r:*. Allowed .r:*.example.com to mean .r:.example.com. Made proxy log just the first authenticated group (the user) alongside the token. Moved proxy callback to clean_acl before the length check of the metadata. Cleaned up redundant logic in first proxy swift.authorize callback. Bit better docs. More and updated tests."
notmyname,2010-09-07 14:54:13,https://api.github.com/repos/openstack/swift/git/commits/de83ed2f9fe98f0e408bcc572ae7eba0feb84d55,de83ed2f9fe98f0e408bcc572ae7eba0feb84d55,merged with trunk
notmyname,2010-09-07 14:53:26,https://api.github.com/repos/openstack/swift/git/commits/560243f2f05d1622ee70411b614587466cd506ea,560243f2f05d1622ee70411b614587466cd506ea,updated stats binaries to be DRY compliant
gholt,2010-09-06 20:26:31,https://api.github.com/repos/openstack/swift/git/commits/85b8d970863ea78cc8fe90fe30e1e993e64ebac3,85b8d970863ea78cc8fe90fe30e1e993e64ebac3,Referrers now support user:pass part of URLs; rest of tests for what has changed
gholt,2010-09-06 04:06:16,https://api.github.com/repos/openstack/swift/git/commits/d0367fdf1909ad0613e094473af23b61f8b6d34f,d0367fdf1909ad0613e094473af23b61f8b6d34f,Updated direct_client to match the changes in client
gholt,2010-09-06 03:30:09,https://api.github.com/repos/openstack/swift/git/commits/2edfd2b951681641d13fceb98179140bc332b141,2edfd2b951681641d13fceb98179140bc332b141,Doc fixes and updates
gholt,2010-09-06 02:53:08,https://api.github.com/repos/openstack/swift/git/commits/235c0e9bd53f25960768c9d352b6e29c647f9b6a,235c0e9bd53f25960768c9d352b6e29c647f9b6a,Fixed typos; bug fix in auth db upgrade; renamed a couple things to better reflect their new usage; updated docs
gholt,2010-09-06 02:21:08,https://api.github.com/repos/openstack/swift/git/commits/0066ed02d7c1dc097b2de887299bb0130cac7796,0066ed02d7c1dc097b2de887299bb0130cac7796,"Per Chuck's suggestion, changed noaccess to admin access, where admin access is not the default. Also, changed swift-auth-create-account to swift-auth-add-user with changes to use optparse"
gholt,2010-09-04 05:33:41,https://api.github.com/repos/openstack/swift/git/commits/65eb19f103df7df89c12556bbee71fe04e035ef3,65eb19f103df7df89c12556bbee71fe04e035ef3,Documentation of the new auth and acls middleware modules and bugfixes
gholt,2010-09-04 04:39:44,https://api.github.com/repos/openstack/swift/git/commits/bb01c2244051f653c0f226ae01dd0371d369c1ee,bb01c2244051f653c0f226ae01dd0371d369c1ee,Updated tools and client.py to work with ACLs
gholt,2010-09-04 03:47:43,https://api.github.com/repos/openstack/swift/git/commits/28ac96b90dead2b0806696e548c7068908d493f3,28ac96b90dead2b0806696e548c7068908d493f3,Simply auth middleware and document how to make your own
gholt,2010-09-04 00:54:30,https://api.github.com/repos/openstack/swift/git/commits/92b4ceaed9618fec47baa802db29a095470fbc16,92b4ceaed9618fec47baa802db29a095470fbc16,"Removed nosetests from setup.cfg as it causes coverage to be done with functtests and probetests, where it doesn't make much sense"
gholt,2010-09-04 00:42:52,https://api.github.com/repos/openstack/swift/git/commits/b5ae6a2924e94dc14e74d81f9b16542a3f906d79,b5ae6a2924e94dc14e74d81f9b16542a3f906d79,Pulled changes from lp:~gholt/swift/repozewhat
gholt,2010-09-04 00:41:14,https://api.github.com/repos/openstack/swift/git/commits/2ae8fb2bc3ce5c88858977c1231093b45fba9414,2ae8fb2bc3ce5c88858977c1231093b45fba9414,Pulled changes from lp:~clay-gerrard/swift/skiptest
gholt,2010-09-04 00:06:38,https://api.github.com/repos/openstack/swift/git/commits/bf31f696a42633b5a41736823a997295760657ba,bf31f696a42633b5a41736823a997295760657ba,Merge from trunk
clayg,2010-09-03 16:20:28,https://api.github.com/repos/openstack/swift/git/commits/24777447040ef27f5b98be8035c120ccb71bf9ba,24777447040ef27f5b98be8035c120ccb71bf9ba,updated skipped functional tests to raise nose.SkipTest
clayg,2010-09-03 15:17:55,https://api.github.com/repos/openstack/swift/git/commits/5bc42442a978180c14218af9fec26494a6b84abb,5bc42442a978180c14218af9fec26494a6b84abb,updated skipped tests in test.unit.obj.test_server to raise nose.SkipTest
clayg,2010-09-03 15:12:00,https://api.github.com/repos/openstack/swift/git/commits/971e98e6a1b6c3d438d37f684b521320a3ebf9d6,971e98e6a1b6c3d438d37f684b521320a3ebf9d6,merge repozewhat
pjz,2010-09-03 13:22:12,https://api.github.com/repos/openstack/swift/git/commits/6a0e8bf44b2a3c00c0faa97c0a0fa3e8e00c9047,6a0e8bf44b2a3c00c0faa97c0a0fa3e8e00c9047,Fix some minor typos in the docs and also add a -f to a suggested script to make it less noisy on first run.
gholt,2010-09-03 04:50:16,https://api.github.com/repos/openstack/swift/git/commits/cfcfdd3de1108db25e765c4e725a1a048494e8c7,cfcfdd3de1108db25e765c4e725a1a048494e8c7,Refactored auth and adding ACLs using repoze.what
notmyname,2010-09-02 15:54:15,https://api.github.com/repos/openstack/swift/git/commits/1f3d05d486b832a9637595b9a7e85e2ef588b01f,1f3d05d486b832a9637595b9a7e85e2ef588b01f,merged with trunk (utils fix)
notmyname,2010-09-02 15:13:46,https://api.github.com/repos/openstack/swift/git/commits/acf3a430b686bd59f474a9cef83c6fd384b6a779,acf3a430b686bd59f474a9cef83c6fd384b6a779,pass through the timeout parameter for calls to lock_parent_directory
notmyname,2010-09-02 14:58:30,https://api.github.com/repos/openstack/swift/git/commits/c297da4df91758b38df7bd7b73a118188fdde651,c297da4df91758b38df7bd7b73a118188fdde651,pass through the timeout for calls to lock_parent_directory
pjz,2010-09-02 02:42:24,https://api.github.com/repos/openstack/swift/git/commits/4104a7d581f6d2cf6d58514a752d04b31fe4e8f7,4104a7d581f6d2cf6d58514a752d04b31fe4e8f7,fix some typos in the docs
notmyname,2010-09-01 22:06:01,https://api.github.com/repos/openstack/swift/git/commits/7763e541eb3d1fa727828eac9e15d0857b892184,7763e541eb3d1fa727828eac9e15d0857b892184,added (working) stats tests
notmyname,2010-09-01 21:33:44,https://api.github.com/repos/openstack/swift/git/commits/fc9e26a44e4d01cf2c0d44e472f282d6a4ad5cf2,fc9e26a44e4d01cf2c0d44e472f282d6a4ad5cf2,access log parsing tests pass
notmyname,2010-09-01 20:04:35,https://api.github.com/repos/openstack/swift/git/commits/1cae6e257d4ef5a6c6d1a17a847287aaf22ad37d,1cae6e257d4ef5a6c6d1a17a847287aaf22ad37d,merged with trunk
notmyname,2010-09-01 20:02:54,https://api.github.com/repos/openstack/swift/git/commits/fed5e315ebe50ebb77aaabacf91b193a0f78150a,fed5e315ebe50ebb77aaabacf91b193a0f78150a,first test working
creiht,2010-09-01 18:27:08,https://api.github.com/repos/openstack/swift/git/commits/8c69305f2bf82158d5ba5f8158ba402b8e36b965,8c69305f2bf82158d5ba5f8158ba402b8e36b965,Refactored bin files to be more DRY
creiht,2010-09-01 15:56:37,https://api.github.com/repos/openstack/swift/git/commits/4a7abe71d9e6435102e6fe6db931bdd559d92a95,4a7abe71d9e6435102e6fe6db931bdd559d92a95,oops
notmyname,2010-09-01 14:35:54,https://api.github.com/repos/openstack/swift/git/commits/1f83f7e6fd3bf412e82f5bd22ac83fdbc51c4e31,1f83f7e6fd3bf412e82f5bd22ac83fdbc51c4e31,initial tests for the stats system
creiht,2010-08-31 23:12:59,https://api.github.com/repos/openstack/swift/git/commits/158e6c3ae9dfdf233b91f67e04baef896cf7f039,158e6c3ae9dfdf233b91f67e04baef896cf7f039,refactored bins to by more DRY
notmyname,2010-08-30 16:20:53,https://api.github.com/repos/openstack/swift/git/commits/014d8e0d8d97461b6c4aa6f79dc306613ccc19e2,014d8e0d8d97461b6c4aa6f79dc306613ccc19e2,merged with trunk
clayg,2010-08-30 14:27:06,https://api.github.com/repos/openstack/swift/git/commits/e2a66c597b4e48fb6a2605f0eef01a4359b406fe,e2a66c597b4e48fb6a2605f0eef01a4359b406fe,"added python-pastedeploy to debian package build docs, fixes lp626364"
clayg,2010-08-30 14:04:39,https://api.github.com/repos/openstack/swift/git/commits/94d2dbe192e9b1d8f6d6528157e5db117cf17d8a,94d2dbe192e9b1d8f6d6528157e5db117cf17d8a,added python-pastedeploy required for the middleware refactor
gholt,2010-08-30 13:07:13,https://api.github.com/repos/openstack/swift/git/commits/8fa151ead46c440366b02689ab00681c342279c9,8fa151ead46c440366b02689ab00681c342279c9,Fixed threading bug in test
notmyname,2010-08-26 23:29:47,https://api.github.com/repos/openstack/swift/git/commits/6a5f09a19d03c95a6de79ecbc92b56b0d3681428,6a5f09a19d03c95a6de79ecbc92b56b0d3681428,merged with trunk
gholt,2010-08-26 16:03:08,https://api.github.com/repos/openstack/swift/git/commits/8f5050234fbe38aa13b72ad71d7ab45d1c1f9ba2,8f5050234fbe38aa13b72ad71d7ab45d1c1f9ba2,Fixed threading bug in test
creiht,2010-08-24 18:57:44,https://api.github.com/repos/openstack/swift/git/commits/341acfc13f7a6342c42498a7f41c7fd22476f007,341acfc13f7a6342c42498a7f41c7fd22476f007,Fixed a couple of doc strings in proxy.server
creiht,2010-08-24 18:48:00,https://api.github.com/repos/openstack/swift/git/commits/608da06a9be881c7f68b80c229473180fafb9c8b,608da06a9be881c7f68b80c229473180fafb9c8b,Cleaned up a couple of doc strings in proxy.server
creiht,2010-08-24 18:27:38,https://api.github.com/repos/openstack/swift/git/commits/978984d18d1060b8dd9a67bff127c0d25a4c5a95,978984d18d1060b8dd9a67bff127c0d25a4c5a95,Refactor of swift to make better use of middleware and to use paste.deploy
creiht,2010-08-24 14:55:20,https://api.github.com/repos/openstack/swift/git/commits/2dc8eec4bb494a17d213bc6970dd79f94a7722db,2dc8eec4bb494a17d213bc6970dd79f94a7722db,Fixed container-updater to correctly load conf
creiht,2010-08-24 14:40:36,https://api.github.com/repos/openstack/swift/git/commits/459cbaaad606e7a1f5c8baf73eccbf2707182b3e,459cbaaad606e7a1f5c8baf73eccbf2707182b3e,Fixed memcache middleware config for proxy
creiht,2010-08-24 14:38:36,https://api.github.com/repos/openstack/swift/git/commits/708088dd68301e6ea1ed760e7799d12c23738559,708088dd68301e6ea1ed760e7799d12c23738559,Fixed proxy server config for saio
creiht,2010-08-24 14:23:49,https://api.github.com/repos/openstack/swift/git/commits/83e8d76d9f44745b74d76814ecee1b003c1816b0,83e8d76d9f44745b74d76814ecee1b003c1816b0,Updated SAIO to be in line with the logging refactor
creiht,2010-08-24 14:10:36,https://api.github.com/repos/openstack/swift/git/commits/04a5ccb4b1e243ee163ec28478743ccff4959f39,04a5ccb4b1e243ee163ec28478743ccff4959f39,Added vm_test_mode to the sample configs
creiht,2010-08-24 14:08:16,https://api.github.com/repos/openstack/swift/git/commits/459e1e95bbf10ee9413db9c029d2f961364e209c,459e1e95bbf10ee9413db9c029d2f961364e209c,"Changed default cluster url to point to new default proxy port of 8080,
and set auth default port back to 11000"
creiht,2010-08-24 14:04:44,https://api.github.com/repos/openstack/swift/git/commits/0e881304ae9beefe9c3b0d2126546d8cc3f943e2,0e881304ae9beefe9c3b0d2126546d8cc3f943e2,"Changed default port of proxy and auth to be 8080, and cleaned up exits"
creiht,2010-08-24 13:58:32,https://api.github.com/repos/openstack/swift/git/commits/7bbbf3dbefcecdccd5fba71bda5406a6ab24d27e,7bbbf3dbefcecdccd5fba71bda5406a6ab24d27e,Renamed the cache middleware to memcache middleware
creiht,2010-08-24 13:51:36,https://api.github.com/repos/openstack/swift/git/commits/183e0623e77f9f52187103d7b1f636b55957e627,183e0623e77f9f52187103d7b1f636b55957e627,Fixed doc typos and pep 8 cleanup on setup.py
creiht,2010-08-24 13:41:58,https://api.github.com/repos/openstack/swift/git/commits/c62707ae72ebeb7da99e7622f889a66ae5d7fc79,c62707ae72ebeb7da99e7622f889a66ae5d7fc79,Refactored logging configuration so that it has sane defaults
notmyname,2010-08-24 03:08:23,https://api.github.com/repos/openstack/swift/git/commits/c6e3101e7446ac0db55a89401b3cb389a161c071,c6e3101e7446ac0db55a89401b3cb389a161c071,merged with trunk
redbo,2010-08-23 16:22:32,https://api.github.com/repos/openstack/swift/git/commits/93689485257f7b0aff2d7ac3a0e4058d49ee4288,93689485257f7b0aff2d7ac3a0e4058d49ee4288,remove hard-coded replica count in obj/replicator
ctennis,2010-08-23 15:52:36,https://api.github.com/repos/openstack/swift/git/commits/17f65e0431eefcabbda4a647df71da6f4971d703,17f65e0431eefcabbda4a647df71da6f4971d703,"If you issue a write_ring to swift-ring-builder, but there's no nodes in the ring, it crashes out.  This will cause it not to crash and write an empty ring.gz file.

This is mainly helpful for enabling servers on nodes before pushing out a centrally generated master ring."
clayg,2010-08-23 15:42:35,https://api.github.com/repos/openstack/swift/git/commits/edf2c72ec923b1fd1eb7de0c972764d6433da57f,edf2c72ec923b1fd1eb7de0c972764d6433da57f,"minor refactor and bug fix in swift.common.client, added tests"
clayg,2010-08-23 14:56:15,https://api.github.com/repos/openstack/swift/git/commits/babd86c036fb2121dbf6d598a4a4e62e5d3e2e3b,babd86c036fb2121dbf6d598a4a4e62e5d3e2e3b,"fixed pep8 warnings, updated some comments - moved swift.common.client.Connection's http_connection call into the class next to get_auth"
redbo,2010-08-22 22:17:57,https://api.github.com/repos/openstack/swift/git/commits/ded2514a945c3299c8ec1913d4bbe216f95674cb,ded2514a945c3299c8ec1913d4bbe216f95674cb,remove object replicator hard-coded replica count
notmyname,2010-08-22 18:22:27,https://api.github.com/repos/openstack/swift/git/commits/078ced3ce6421e1cf2aa498dff930247244049db,078ced3ce6421e1cf2aa498dff930247244049db,merged with trunk
ctennis,2010-08-21 18:21:59,https://api.github.com/repos/openstack/swift/git/commits/db90da2763cd3a2a364989d5965cfa6d08e88224,db90da2763cd3a2a364989d5965cfa6d08e88224,"Remove the exception from the unit test, since we don't bomb out anymore.  Also, add a warning to swift-ring-builder if you're building an empty ring, or do a write_ring and you aren't rebalanced"
andrew-rose,2010-08-21 17:22:54,https://api.github.com/repos/openstack/swift/git/commits/038a1c63617867c47b46257a78020424e911dbd5,038a1c63617867c47b46257a78020424e911dbd5,Adds ubuntu mirrors and options for downloading iso to set up SAIO
andrew-rose,2010-08-21 02:02:58,https://api.github.com/repos/openstack/swift/git/commits/125b769037f20bb9715f20b418d1f78103b2f58a,125b769037f20bb9715f20b418d1f78103b2f58a,Added ubuntu mirrors and server iso to SAIO
ctennis,2010-08-20 21:29:12,https://api.github.com/repos/openstack/swift/git/commits/4d66a8cbe73831d3e575c939f86148ce09fb0503,4d66a8cbe73831d3e575c939f86148ce09fb0503,We can still do a write_ring even if nothing is present.  Better than crashing anyway.
creiht,2010-08-20 15:32:40,https://api.github.com/repos/openstack/swift/git/commits/85e043e9a2823eea48b95c0bbe5cc811af9fb79e,85e043e9a2823eea48b95c0bbe5cc811af9fb79e,Merging from branch
creiht,2010-08-20 15:28:02,https://api.github.com/repos/openstack/swift/git/commits/cf35829e78054d22fe37b3bcb07dd2a53015c483,cf35829e78054d22fe37b3bcb07dd2a53015c483,"Fixed a couple of typos, and some config things I missed in the object-replicator"
creiht,2010-08-20 02:28:24,https://api.github.com/repos/openstack/swift/git/commits/ca1cd5aa705b1eaad8b05d1383c37a1bef9a677a,ca1cd5aa705b1eaad8b05d1383c37a1bef9a677a,Fixed a couple of doc typos
creiht,2010-08-20 02:19:50,https://api.github.com/repos/openstack/swift/git/commits/386eb29b1f29bb82da0b62efa491e53692ee3273,386eb29b1f29bb82da0b62efa491e53692ee3273,Updated docs (including SAIO) to refelct the paste.deploy config changes
creiht,2010-08-20 00:50:12,https://api.github.com/repos/openstack/swift/git/commits/2a36fe061913d04b7fcaada3f432dac66a74fc3f,2a36fe061913d04b7fcaada3f432dac66a74fc3f,Initial commit of middleware refactor
creiht,2010-08-20 00:42:38,https://api.github.com/repos/openstack/swift/git/commits/2c596c0a0fbb0a1ec74092278d9f8844b90bf760,2c596c0a0fbb0a1ec74092278d9f8844b90bf760,Initial commit of middleware refactor
clayg,2010-08-19 22:09:20,https://api.github.com/repos/openstack/swift/git/commits/7455b4d2385f82ddae6ef179a123617f04c1ca74,7455b4d2385f82ddae6ef179a123617f04c1ca74,"found a error condition in swift.common.client where the resp would not be consumed, added tests and fixed"
clayg,2010-08-19 19:27:10,https://api.github.com/repos/openstack/swift/git/commits/fba7dd3de33d20ec546e4a3a082f080471ba89f8,fba7dd3de33d20ec546e4a3a082f080471ba89f8,"added some tests for swift.common.client, coverage from 11% => ~66%"
clayg,2010-08-19 16:54:55,https://api.github.com/repos/openstack/swift/git/commits/cc1373d9bc5a813a8532b89560960231e6609a3b,cc1373d9bc5a813a8532b89560960231e6609a3b,make it easier for subclasses of swift.common.client.Connection to override the behavior of reauthorization (get_auth)
gholt,2010-08-17 19:52:50,https://api.github.com/repos/openstack/swift/git/commits/cac53bc84a3b4e11f21a8e7d3624275000615e57,cac53bc84a3b4e11f21a8e7d3624275000615e57,Cluster health monitoring docs
gholt,2010-08-17 19:36:49,https://api.github.com/repos/openstack/swift/git/commits/faa96c6aed88764f07d0cacd8321e0767c136cf1,faa96c6aed88764f07d0cacd8321e0767c136cf1,Cluster health monitoring docs
notmyname,2010-08-17 02:40:04,https://api.github.com/repos/openstack/swift/git/commits/7270d080811e41bb7b382a3f4481b29a5d0aa5d6,7270d080811e41bb7b382a3f4481b29a5d0aa5d6,merged with trunk
gholt,2010-08-17 02:27:35,https://api.github.com/repos/openstack/swift/git/commits/db522deba9898058a4d8182fd3ff5c19174a5f9d,db522deba9898058a4d8182fd3ff5c19174a5f9d,Func tests for account/container metadata (2)
gholt,2010-08-17 02:12:28,https://api.github.com/repos/openstack/swift/git/commits/43a954d436f7a308c31b1df3bf960ce283e30605,43a954d436f7a308c31b1df3bf960ce283e30605,Func tests for account/container metadata
gholt,2010-08-17 02:11:19,https://api.github.com/repos/openstack/swift/git/commits/47d6d7a10c0162590ccf8003b81b687d2e359862,47d6d7a10c0162590ccf8003b81b687d2e359862,Argh. Forgot the tests themselves!
gholt,2010-08-17 02:06:28,https://api.github.com/repos/openstack/swift/git/commits/1e1cbc34e6455667aa66c3335b8590b0cb07f669,1e1cbc34e6455667aa66c3335b8590b0cb07f669,Func tests for account/container metadata
gholt,2010-08-17 00:04:57,https://api.github.com/repos/openstack/swift/git/commits/29c524bdd8a5bbaae1782266eadaef9647d171c6,29c524bdd8a5bbaae1782266eadaef9647d171c6,Expose account/container metadata facility to external API
gholt,2010-08-16 22:30:27,https://api.github.com/repos/openstack/swift/git/commits/e8d3f260b9a3acbe4c16485398ef1843e69e6c04,e8d3f260b9a3acbe4c16485398ef1843e69e6c04,Expose account/container metadata facility to external API
gholt,2010-08-16 16:14:16,https://api.github.com/repos/openstack/swift/git/commits/b1b126e4615e0aa2ee4a6959b52aa10763c50590,b1b126e4615e0aa2ee4a6959b52aa10763c50590,Cyberduck Support and How To
notmyname,2010-08-14 18:38:14,https://api.github.com/repos/openstack/swift/git/commits/907253d200d3a40614d54ed18081688d17810c9b,907253d200d3a40614d54ed18081688d17810c9b,merged with trunk
notmyname,2010-08-14 18:37:21,https://api.github.com/repos/openstack/swift/git/commits/401c22f3bc376cc540a941c8cb46eeac1981b71c,401c22f3bc376cc540a941c8cb46eeac1981b71c,added access log processing plugin
gholt,2010-08-14 16:54:31,https://api.github.com/repos/openstack/swift/git/commits/21c5209e22ee468184380ce1a855a01119c39a95,21c5209e22ee468184380ce1a855a01119c39a95,Fixed typo
gholt,2010-08-14 16:46:32,https://api.github.com/repos/openstack/swift/git/commits/234cf79b0ce8c147bfff580b51d138058e94956c,234cf79b0ce8c147bfff580b51d138058e94956c,Cyberduck Support and How To
corywright,2010-08-13 15:47:04,https://api.github.com/repos/openstack/swift/git/commits/f9f8059fe8640d91fcc4cdb93116528341f49291,f9f8059fe8640d91fcc4cdb93116528341f49291,"swift-ring-builder was referenced as ring_builder, swift-ring_builder, and swift_ring_builder throughout the docs.  This patch corrects everything to swift-ring-builder."
corywright,2010-08-13 15:19:43,https://api.github.com/repos/openstack/swift/git/commits/f2b694b7abc5332adb6b5fe356e1c1bfb1a90f94,f2b694b7abc5332adb6b5fe356e1c1bfb1a90f94,Fixed a few typos in the deployment guide (s/ring_builder/ring-builder/g)
notmyname,2010-08-12 19:27:22,https://api.github.com/repos/openstack/swift/git/commits/2dd70fad8d76f2e940ae515c70fb25cb9a409347,2dd70fad8d76f2e940ae515c70fb25cb9a409347,merged with trunk
notmyname,2010-08-12 19:26:34,https://api.github.com/repos/openstack/swift/git/commits/6258b4adfd8573ae65f5d049a105d7de11f126e4,6258b4adfd8573ae65f5d049a105d7de11f126e4,added log_processor and a stats plugin
gholt,2010-08-12 16:47:10,https://api.github.com/repos/openstack/swift/git/commits/fa841c4d8dfdb652f8a1d5448814e955c7b6182f,fa841c4d8dfdb652f8a1d5448814e955c7b6182f,Added metadata to account and container servers
gholt,2010-08-11 20:35:30,https://api.github.com/repos/openstack/swift/git/commits/26ad9a493de4a87c06b9937fbc56f68523a586f2,26ad9a493de4a87c06b9937fbc56f68523a586f2,Reduce transactions where possible with reclamations
gholt,2010-08-10 19:18:15,https://api.github.com/repos/openstack/swift/git/commits/15009bb76ee648a8f2968e0e9fc16d9bd11f746d,15009bb76ee648a8f2968e0e9fc16d9bd11f746d,Added metadata to account and container servers
gholt,2010-08-09 20:52:16,https://api.github.com/repos/openstack/swift/git/commits/40779d8d210c1c15b78b68cdb6e7723c84aef385,40779d8d210c1c15b78b68cdb6e7723c84aef385,Fix how bytes transferred are logged
gholt,2010-08-09 20:10:05,https://api.github.com/repos/openstack/swift/git/commits/a0fdfee0ba38d20d8900c23f0340f64f0526ffa6,a0fdfee0ba38d20d8900c23f0340f64f0526ffa6,Fix how bytes transferred are logged
notmyname,2010-08-06 04:09:53,https://api.github.com/repos/openstack/swift/git/commits/485799fc5489d2d4a93771ff7915b0aa9f0e15dc,485799fc5489d2d4a93771ff7915b0aa9f0e15dc,added account stats logger to stats system
notmyname,2010-08-05 18:58:34,https://api.github.com/repos/openstack/swift/git/commits/61a9c72e09fa1c6606f2f73b75bbf1b66f0e4213,61a9c72e09fa1c6606f2f73b75bbf1b66f0e4213,merged with trunk
notmyname,2010-08-05 18:57:26,https://api.github.com/repos/openstack/swift/git/commits/46e8aecd0347115498d1158dadbc57f1c54baf34,46e8aecd0347115498d1158dadbc57f1c54baf34,initial stats system commit. includes the log uploader
creiht,2010-07-30 22:02:02,https://api.github.com/repos/openstack/swift/git/commits/d7ae75aa58cbbe86d86770d508a7af41e02f152f,d7ae75aa58cbbe86d86770d508a7af41e02f152f,"Added first stab of an administration guide, added a few items to the deployment guide, cleaned up a coupld of docstring warnings, and removed some unused config options in the proxy"
creiht,2010-07-30 21:47:12,https://api.github.com/repos/openstack/swift/git/commits/221466a8ed635d3ea7c61a7c3b64a90c953c2b7d,221466a8ed635d3ea7c61a7c3b64a90c953c2b7d,fixed typo
creiht,2010-07-30 20:17:31,https://api.github.com/repos/openstack/swift/git/commits/54acc143e49c1972197736e882446c09269a8872,54acc143e49c1972197736e882446c09269a8872,Fixing merge conflicts
creiht,2010-07-30 20:05:06,https://api.github.com/repos/openstack/swift/git/commits/f9f0fb37527def92e782e8ecf4350d20cd476b1e,f9f0fb37527def92e782e8ecf4350d20cd476b1e,Fixed conflict with .bzrignore
creiht,2010-07-30 19:57:20,https://api.github.com/repos/openstack/swift/git/commits/e05149571550c8d1dfbf4d0daf6478108413faba,e05149571550c8d1dfbf4d0daf6478108413faba,"Added initial admin guide, and added more to the deployment guide, plus
cleaned up some of the doc string warning"
clayg,2010-07-29 20:42:11,https://api.github.com/repos/openstack/swift/git/commits/138cf266e72a91bc8c0626d4e0c93d341d8e85d2,138cf266e72a91bc8c0626d4e0c93d341d8e85d2,"moved LIMIT_LISTING consts to swift.common.constraints, 100% test coverage of swift.common.constraints"
clayg,2010-07-29 20:06:01,https://api.github.com/repos/openstack/swift/git/commits/17a108a633cf8f020e8cba3eb9306d4ecbcb9c2a,17a108a633cf8f020e8cba3eb9306d4ecbcb9c2a,removed extra assignment
clayg,2010-07-29 18:49:40,https://api.github.com/repos/openstack/swift/git/commits/1d882b3fa57055db2fab02ab90a0f5137bd01a2b,1d882b3fa57055db2fab02ab90a0f5137bd01a2b,merge gholt 2010-07-29 [merge] Updated docs for client.py
clayg,2010-07-29 18:31:27,https://api.github.com/repos/openstack/swift/git/commits/7ae6ec0675db51f95630ab72e75d115ed9fccc2f,7ae6ec0675db51f95630ab72e75d115ed9fccc2f,typo
clayg,2010-07-29 18:30:16,https://api.github.com/repos/openstack/swift/git/commits/4a27df057de810dec5caf6a7dd72d334e0be94be,4a27df057de810dec5caf6a7dd72d334e0be94be,"moved LIMIT_LISTING const to swift.common.constraints, added test.unit.MockTrue, 100% test coverage on swift.common.constraints"
gholt,2010-07-29 15:47:08,https://api.github.com/repos/openstack/swift/git/commits/17b5d56fb2ba999758d551c2014aadf68459e84d,17b5d56fb2ba999758d551c2014aadf68459e84d,Updated docs for client.py
gholt,2010-07-29 15:16:45,https://api.github.com/repos/openstack/swift/git/commits/77caea3dad57ff32a56844429339bba556e22372,77caea3dad57ff32a56844429339bba556e22372,Updated docs for client.py
clayg,2010-07-29 15:09:05,https://api.github.com/repos/openstack/swift/git/commits/0cda9a0cbedeb30a4c088d86ae99c78fbaa679e1,0cda9a0cbedeb30a4c088d86ae99c78fbaa679e1,merged
clayg,2010-07-29 15:08:25,https://api.github.com/repos/openstack/swift/git/commits/c555869ece37c656f715c6ed6e60f9a932c82ffe,c555869ece37c656f715c6ed6e60f9a932c82ffe,merged
redbo,2010-07-29 01:52:06,https://api.github.com/repos/openstack/swift/git/commits/5f32c21437eefeb9353d7235e71d8f2c5305c077,5f32c21437eefeb9353d7235e71d8f2c5305c077,no-op fallocate and posix_fadvise if they're not available
redbo,2010-07-29 01:40:13,https://api.github.com/repos/openstack/swift/git/commits/988e4b9f23e38fcd66621cfdc1433c26466ff96d,988e4b9f23e38fcd66621cfdc1433c26466ff96d,Change prints to logging.warn()s
redbo,2010-07-29 00:44:21,https://api.github.com/repos/openstack/swift/git/commits/179eeb29f7e5fbe71e75ec18f707a88576097171,179eeb29f7e5fbe71e75ec18f707a88576097171,Improved fallocate and posix_fadvise no-ops when unavailable.
redbo,2010-07-28 23:32:40,https://api.github.com/repos/openstack/swift/git/commits/93ce826e41244d06e2fcdaeb8d9452c1f3f1d3ee,93ce826e41244d06e2fcdaeb8d9452c1f3f1d3ee,No-op fallocate and fadvise when they aren't available.
emonty,2010-07-28 23:12:10,https://api.github.com/repos/openstack/swift/git/commits/7b7070937f0dc39c0cc0d8cba53996674133093f,7b7070937f0dc39c0cc0d8cba53996674133093f,Added ChangeLog generation to sdist
emonty,2010-07-28 23:02:51,https://api.github.com/repos/openstack/swift/git/commits/d7cb02b54ef13c3130b83720bc25b30997fda62e,d7cb02b54ef13c3130b83720bc25b30997fda62e,Fixed pep8 issues.
emonty,2010-07-28 21:25:25,https://api.github.com/repos/openstack/swift/git/commits/d88594ef8ada7bf9305f7ef7bfbe33791d305f76,d88594ef8ada7bf9305f7ef7bfbe33791d305f76,Added ChangeLog to .bzrignore.
emonty,2010-07-28 21:17:22,https://api.github.com/repos/openstack/swift/git/commits/7dcd4c85f98ef00181278cc5c5158684220db355,7dcd4c85f98ef00181278cc5c5158684220db355,Added code to generate a ChangeLog file from bzr on sdist.
emonty,2010-07-26 16:12:07,https://api.github.com/repos/openstack/swift/git/commits/0baceef8adb632a775d35b99690b06629b2df6be,0baceef8adb632a775d35b99690b06629b2df6be,Fixed PEP8 warnings
emonty,2010-07-26 15:27:29,https://api.github.com/repos/openstack/swift/git/commits/bf9c1e654ca53a3b1232cf01455a69b9abc02b84,bf9c1e654ca53a3b1232cf01455a69b9abc02b84,Fixed PEP8 warnings
emonty,2010-07-26 15:18:32,https://api.github.com/repos/openstack/swift/git/commits/bba02ae8b3e9395bf36ff54cf48797beb7a3dee0,bba02ae8b3e9395bf36ff54cf48797beb7a3dee0,Removed needless continuation markers.
emonty,2010-07-25 16:15:40,https://api.github.com/repos/openstack/swift/git/commits/ffadcb78c70f2d4e092eaaf8ade2634f9f2e9542,ffadcb78c70f2d4e092eaaf8ade2634f9f2e9542,Fixed all of the PEP8 warnings.
emonty,2010-07-25 01:45:27,https://api.github.com/repos/openstack/swift/git/commits/57d59600b752a2b460da56cba55916715fb1cea3,57d59600b752a2b460da56cba55916715fb1cea3,Updated Sphinx config to match the config from Nova.
emonty,2010-07-25 01:03:56,https://api.github.com/repos/openstack/swift/git/commits/525aee438cea434dd69448c0be29bbd45bda79b3,525aee438cea434dd69448c0be29bbd45bda79b3,Updated sphinx config to match the config from Nova.
creiht,2010-07-23 22:26:59,https://api.github.com/repos/openstack/swift/git/commits/d6349fda144cd903783e65cb09b124fc24720a71,d6349fda144cd903783e65cb09b124fc24720a71,"Added initial cut of deployment guide and updated auth overview to better reflect the current code, with contributions from John Dickinson, Mike Barton, and Greg Holt."
creiht,2010-07-23 22:15:29,https://api.github.com/repos/openstack/swift/git/commits/9916adba75bc5feb7937ebca042e371b6bcf7257,9916adba75bc5feb7937ebca042e371b6bcf7257,"Added first cut of the deployment guide, and updated auth overview to better
represent the current code"
bkjones,2010-07-23 18:16:58,https://api.github.com/repos/openstack/swift/git/commits/9669c4d08629b58eeaced7a703276afaf88259b4,9669c4d08629b58eeaced7a703276afaf88259b4,"Attempted to differentiate between what a ring represents and what it is constructed of without losing the conversational tone of the document. Also added a link to the more in-depth document 'overview_ring'. More work and more links to more information need to be added, but this is my first change, and I want to be sure I'm in line with others' ideas."
bkjones,2010-07-23 16:05:14,https://api.github.com/repos/openstack/swift/git/commits/4a855fa21eab1da70c23540d45683b54d2e24555,4a855fa21eab1da70c23540d45683b54d2e24555,"Made spacing after period consistent throughout, removed a couple of spurious commas"
bkjones,2010-07-23 15:47:13,https://api.github.com/repos/openstack/swift/git/commits/f5a2c5374cea6a33234674ca8358ffd8185b8947,f5a2c5374cea6a33234674ca8358ffd8185b8947,Removed links that jumped from overview straight to module source docs.
bkjones,2010-07-23 14:51:24,https://api.github.com/repos/openstack/swift/git/commits/164914dc1b012bdbbeb92b5b088a7643841dddec,164914dc1b012bdbbeb92b5b088a7643841dddec,"Moved proxy server section to top, and encompassed suggested changes from cthier"
emonty,2010-07-23 03:12:02,https://api.github.com/repos/openstack/swift/git/commits/93635d14c4e7ce22a9cf8e41b9df8fc9da7e4503,93635d14c4e7ce22a9cf8e41b9df8fc9da7e4503,Removes the debian/ dir to support the split trunk/packaging approach.
emonty,2010-07-22 15:29:04,https://api.github.com/repos/openstack/swift/git/commits/b0bf178a5d4299d82d35929e090ab8fd0bfc1faf,b0bf178a5d4299d82d35929e090ab8fd0bfc1faf,Removed all of the tarball and debian stuff from the tree.
creiht,2010-07-22 15:12:00,https://api.github.com/repos/openstack/swift/git/commits/15bc541d85502811c6703e4e27b86fa6dfb00fc2,15bc541d85502811c6703e4e27b86fa6dfb00fc2,Removed test for functionality that doesn't exist any more
creiht,2010-07-22 15:04:02,https://api.github.com/repos/openstack/swift/git/commits/9bf26751d72c6ac3c30fc49d8377ef501a9f6f3d,9bf26751d72c6ac3c30fc49d8377ef501a9f6f3d,Removed tests for behavior that doesn't exist any more
emonty,2010-07-22 12:52:02,https://api.github.com/repos/openstack/swift/git/commits/0a2c0984047b55cb432cece18d3d699b12fb3022,0a2c0984047b55cb432cece18d3d699b12fb3022,Made sure all the files we need are included in the tarball
bkjones,2010-07-22 12:33:58,https://api.github.com/repos/openstack/swift/git/commits/e0c666df62d5d1288a7b765c6896f3233dd6d5fd,e0c666df62d5d1288a7b765c6896f3233dd6d5fd,"Clarifying docs for The Ring, and add link to more detailed ring docs."
emonty,2010-07-22 12:08:50,https://api.github.com/repos/openstack/swift/git/commits/32e922e74c2ddbcc3269aa1dbb8714002a6ac430,32e922e74c2ddbcc3269aa1dbb8714002a6ac430,Fixed egg-info for PyPI
emonty,2010-07-22 12:02:38,https://api.github.com/repos/openstack/swift/git/commits/13531ccb19d758e7afff0d1cbb081508f672efe6,13531ccb19d758e7afff0d1cbb081508f672efe6,Added last missing file to MANFEST.in.
notmyname,2010-07-21 19:37:01,https://api.github.com/repos/openstack/swift/git/commits/2ba58ed933832df8288ccc046b749ba9230673e5,2ba58ed933832df8288ccc046b749ba9230673e5,fixed a typo in the architectural notes
notmyname,2010-07-21 17:55:16,https://api.github.com/repos/openstack/swift/git/commits/5f6951c341640d9e2b32d99af8c40fe7dafa50a4,5f6951c341640d9e2b32d99af8c40fe7dafa50a4,fixed typo in architecture docs
creiht,2010-07-20 19:21:59,https://api.github.com/repos/openstack/swift/git/commits/651d2be91d2a27b652fd9383f1b9cc76bae6405e,651d2be91d2a27b652fd9383f1b9cc76bae6405e,"Added getting started and architectural overview (with contributions from Mike Barton, John Dickinson and Greg Holt) to documentation."
creiht,2010-07-20 16:17:36,https://api.github.com/repos/openstack/swift/git/commits/3657c08cd36176489cb18b40d5e688d8dc8b4c4c,3657c08cd36176489cb18b40d5e688d8dc8b4c4c,another typo
creiht,2010-07-20 16:08:06,https://api.github.com/repos/openstack/swift/git/commits/e439cf604c84c5604e822e8ecd4f9c9061406511,e439cf604c84c5604e822e8ecd4f9c9061406511,Fixed typo
creiht,2010-07-20 16:05:10,https://api.github.com/repos/openstack/swift/git/commits/99f022aae06ff6761c9e9835aa548390ce25541e,99f022aae06ff6761c9e9835aa548390ce25541e,Added getting started documentation and architectural overview
clayg,2010-07-19 22:51:35,https://api.github.com/repos/openstack/swift/git/commits/2443089dbb9a97d2f10e9b8a3f334604a5263ea8,2443089dbb9a97d2f10e9b8a3f334604a5263ea8,merge pull
redbo,2010-07-19 21:27:17,https://api.github.com/repos/openstack/swift/git/commits/e3bac7539f5369fb4df3c132a661e95b5cbe4b7a,e3bac7539f5369fb4df3c132a661e95b5cbe4b7a,fix for response code for unhandled exception unit test
redbo,2010-07-19 21:19:37,https://api.github.com/repos/openstack/swift/git/commits/9701519b5a9aa3b80622fbee343c07bbac510f09,9701519b5a9aa3b80622fbee343c07bbac510f09,fix for response code for unhandled exception unit test
emonty,2010-07-19 20:17:06,https://api.github.com/repos/openstack/swift/git/commits/a84879d8d98239f597fa723bebd1e24f1be62dc3,a84879d8d98239f597fa723bebd1e24f1be62dc3,Updates to produce a smaller diff for bzr bd.
emonty,2010-07-19 20:07:16,https://api.github.com/repos/openstack/swift/git/commits/d62014f3b3bbb796cf27bbb26c78752991d5f727,d62014f3b3bbb796cf27bbb26c78752991d5f727,Added python-sphinx to build-deps so that ppa builder doesn't die.
emonty,2010-07-19 19:59:47,https://api.github.com/repos/openstack/swift/git/commits/194396898d90ca1615491097280e5ce163f532d7,194396898d90ca1615491097280e5ce163f532d7,Added debian/watch file.
emonty,2010-07-19 19:56:54,https://api.github.com/repos/openstack/swift/git/commits/1e714f648419d737ec7170e12b733868fce65b57,1e714f648419d737ec7170e12b733868fce65b57,Add files which were not in the tarball.
emonty,2010-07-19 19:46:05,https://api.github.com/repos/openstack/swift/git/commits/83d8fe2c02723ac18eba5c3b5b88431b12c7f238,83d8fe2c02723ac18eba5c3b5b88431b12c7f238,Added support for Quilt source format.
emonty,2010-07-19 19:31:58,https://api.github.com/repos/openstack/swift/git/commits/3a7f80814b0eb7c220cfbf82e1c5812e29d56c55,3a7f80814b0eb7c220cfbf82e1c5812e29d56c55,Tagged and released 1.0.1 with missing files added back in.
redbo,2010-07-19 19:22:25,https://api.github.com/repos/openstack/swift/git/commits/bba48c61cf5879cb5788caa0c2fd5ceab76e7e58,bba48c61cf5879cb5788caa0c2fd5ceab76e7e58,"Fixes what I see as incorrect behavior in the proxy server -- when there's an uncaught exception in the request handler, it currently returns a 503 instead of a 500."
emonty,2010-07-19 16:50:32,https://api.github.com/repos/openstack/swift/git/commits/93925bfe7499619c7cb1b3de71e195e893a141ab,93925bfe7499619c7cb1b3de71e195e893a141ab,Bump tree version post-release.
emonty,2010-07-19 16:25:18,https://api.github.com/repos/openstack/swift/git/commits/659382e466cb11df6f2c9d81e3e5f0d1bc2a4c5c,659382e466cb11df6f2c9d81e3e5f0d1bc2a4c5c,New upstream release.
emonty,2010-07-19 16:22:40,https://api.github.com/repos/openstack/swift/git/commits/c2f9d1e560484c4a45e7264d9abb0212ced828cf,c2f9d1e560484c4a45e7264d9abb0212ced828cf,Import upstream version 1.0.1
emonty,2010-07-19 14:46:56,https://api.github.com/repos/openstack/swift/git/commits/456f9cd950b88e2495cc44b56a724f8342296d7a,456f9cd950b88e2495cc44b56a724f8342296d7a,Add a MANIFEST.in file so that we can include additional needed files in the .tar.gz
emonty,2010-07-19 13:43:09,https://api.github.com/repos/openstack/swift/git/commits/6a45fef04320965bd99d22f953e728d58da06b60,6a45fef04320965bd99d22f953e728d58da06b60,Includes a manifest file which knows how to bring along doc and etc.
redbo,2010-07-19 11:54:11,https://api.github.com/repos/openstack/swift/git/commits/62a105d774db7f29a0fa0e34eaf41fee6139963f,62a105d774db7f29a0fa0e34eaf41fee6139963f,proxy return 500 on unhandled exceptions
creiht,2010-07-19 07:32:01,https://api.github.com/repos/openstack/swift/git/commits/2ee5d7ee9c9b63ebe859ebe46fa93270cb465853,2ee5d7ee9c9b63ebe859ebe46fa93270cb465853,"Modified probe tests to work with setup.py develop installs
Updated SAIO instructions to note that probe tests will reset your environment
Added the swift.egg-info directory to .bzrignore
Updated setup.py to correctly ignore the test directory when installing"
creiht,2010-07-19 06:21:43,https://api.github.com/repos/openstack/swift/git/commits/5e8bc7d8ca9448807e7b8ba221aee45c61878510,5e8bc7d8ca9448807e7b8ba221aee45c61878510,Updated setup.py so that the test directory would be correctly ignored when installing
emonty,2010-07-19 05:06:59,https://api.github.com/repos/openstack/swift/git/commits/1c6dc00a3fd320b111e86ac73eed0cb95b5b8242,1c6dc00a3fd320b111e86ac73eed0cb95b5b8242,Bump version to 1.0.1
emonty,2010-07-19 04:44:19,https://api.github.com/repos/openstack/swift/git/commits/7f105149d6c0ebf964cf2286b38d73e80c053aa4,7f105149d6c0ebf964cf2286b38d73e80c053aa4,Bumped version number post 1.0.0 release.
creiht,2010-07-19 03:00:28,https://api.github.com/repos/openstack/swift/git/commits/63538345f21f1b8931fc9a8a37bdcbe51943c392,63538345f21f1b8931fc9a8a37bdcbe51943c392,"Modified probe tests to work with setup.py develop installs
Updated SAIO instructions to note that probe tests will reset your environment
Added the swift.egg-info directory to .bzrignore"
notmyname,2010-07-19 01:56:51,https://api.github.com/repos/openstack/swift/git/commits/b2ba61b7ee0645962f3e6243d8b89261e6f1df9c,b2ba61b7ee0645962f3e6243d8b89261e6f1df9c,Fixed typos on the saio doc page.
notmyname,2010-07-18 23:19:48,https://api.github.com/repos/openstack/swift/git/commits/91b733d49733e1ca447cfc09393b55f5e37edcd1,91b733d49733e1ca447cfc09393b55f5e37edcd1,fixed a few typos in the saio docs
creiht,2010-07-16 14:42:01,https://api.github.com/repos/openstack/swift/git/commits/825481687a157091e9b9e7f846f25266d5e36404,825481687a157091e9b9e7f846f25266d5e36404,"Updated docs to point to lp:swift, and added the doc/build directory to .bzrignore"
creiht,2010-07-16 14:30:50,https://api.github.com/repos/openstack/swift/git/commits/3c19168daab4052a5ea415393b4a542ad6dbb69a,3c19168daab4052a5ea415393b4a542ad6dbb69a,Update .bzrignore to ignore the docs/build directory
creiht,2010-07-16 14:24:56,https://api.github.com/repos/openstack/swift/git/commits/7002151bac5cd7e283a012016d7e646f994728ae,7002151bac5cd7e283a012016d7e646f994728ae,Update SAIO doc to point to lp:swift
emonty,2010-07-16 05:57:01,https://api.github.com/repos/openstack/swift/git/commits/be7d5814ada69393cc5f0c5c3bd4cf15469ed308,be7d5814ada69393cc5f0c5c3bd4cf15469ed308,Remove build-dep reference since that doesn't work yet.
emonty,2010-07-16 05:47:58,https://api.github.com/repos/openstack/swift/git/commits/4e8a9481cdc645a8399db42eb97d66d056a6c4c0,4e8a9481cdc645a8399db42eb97d66d056a6c4c0,"Fixed the doc- build-dep swift doesn't _quite_ work yet. We'll get there
though."
emonty,2010-07-16 05:41:52,https://api.github.com/repos/openstack/swift/git/commits/552a8ced433a594fbaf3bb2e380b50cc3dc6c3f8,552a8ced433a594fbaf3bb2e380b50cc3dc6c3f8,Added PPA reference to the docs.
creiht,2010-07-15 15:27:19,https://api.github.com/repos/openstack/swift/git/commits/18c28d23394306e95e0443997e9220192b80cf0e,18c28d23394306e95e0443997e9220192b80cf0e,Updated SAIO to init the repo before branching the code
creiht,2010-07-15 15:11:39,https://api.github.com/repos/openstack/swift/git/commits/ad1b86fd29221c09f2c9537335ed3c9462177d49,ad1b86fd29221c09f2c9537335ed3c9462177d49,Marging
creiht,2010-07-15 15:09:47,https://api.github.com/repos/openstack/swift/git/commits/af6a434d49c4e5bca885186e2ff4241a6988fe0b,af6a434d49c4e5bca885186e2ff4241a6988fe0b,"Changed README to build docs via setup.py and changed saio to run setup.py
with sudo."
redbo,2010-07-15 14:44:45,https://api.github.com/repos/openstack/swift/git/commits/8ef54b341dedc76db5156b3cada22e0990983bdf,8ef54b341dedc76db5156b3cada22e0990983bdf,Make swift-init pay attention to $PATH
gholt,2010-07-14 22:12:34,https://api.github.com/repos/openstack/swift/git/commits/6c6e335018ab0a4be6a5c1600d3f77f8c203edde,6c6e335018ab0a4be6a5c1600d3f77f8c203edde,Merged
gholt,2010-07-14 22:11:08,https://api.github.com/repos/openstack/swift/git/commits/f71850f5477630f50357116e0b692c7682c9878d,f71850f5477630f50357116e0b692c7682c9878d,Allow specifying the proxy's auth class.
creiht,2010-07-14 22:05:50,https://api.github.com/repos/openstack/swift/git/commits/42a9910fc239b6ee6240dbec8e6324e4f6dab826,42a9910fc239b6ee6240dbec8e6324e4f6dab826,User login doesn't really need to be the same as the lp id in the SAIO
creiht,2010-07-14 21:56:03,https://api.github.com/repos/openstack/swift/git/commits/d8c0ff972a822a4e6ed1ca621a5838902cab55ba,d8c0ff972a822a4e6ed1ca621a5838902cab55ba,Updated saio to reflect setup.py changes
gholt,2010-07-14 19:59:31,https://api.github.com/repos/openstack/swift/git/commits/86eb77a02191f107a6cb7695c7abfd7183e2430d,86eb77a02191f107a6cb7695c7abfd7183e2430d,SAIO doc update for the bin/*.py->bin/* change
emonty,2010-07-14 19:37:17,https://api.github.com/repos/openstack/swift/git/commits/9e54463a32079ae769a5a187028af6a0e96eba69,9e54463a32079ae769a5a187028af6a0e96eba69,Add reference to using PPA to get depends.
emonty,2010-07-14 19:21:18,https://api.github.com/repos/openstack/swift/git/commits/88408dfe0d8f23214afe0fc8678d1aa477b9db6f,88408dfe0d8f23214afe0fc8678d1aa477b9db6f,"Added docs to doc system.
Updated debian packaging to dh 7 and .install files.
Renamed bin/ files to not have .py suffix."
creiht,2010-07-14 19:13:45,https://api.github.com/repos/openstack/swift/git/commits/0778d418514ad82c177ae089419e8761f4fe8cee,0778d418514ad82c177ae089419e8761f4fe8cee,Adding Monty Taylor to AUTHORS
emonty,2010-07-14 18:42:35,https://api.github.com/repos/openstack/swift/git/commits/ff0b5bf4dfd6f6cc3c594a712029cd7bd259370e,ff0b5bf4dfd6f6cc3c594a712029cd7bd259370e,Updated tree to use import_dsc/import_upstream from bzr-builddeb.
emonty,2010-07-14 16:40:32,https://api.github.com/repos/openstack/swift/git/commits/5f7279f379f8bafee64c06304c50862f90cd234e,5f7279f379f8bafee64c06304c50862f90cd234e,Removed PKG-INFO from the tree.
emonty,2010-07-14 15:41:38,https://api.github.com/repos/openstack/swift/git/commits/c05ce72a40db12534801032b5cf8f5bdd2e2dd69,c05ce72a40db12534801032b5cf8f5bdd2e2dd69,Added docs to doc system.
emonty,2010-07-14 15:37:56,https://api.github.com/repos/openstack/swift/git/commits/b866551dbee532ed4211044281e7932185fb9622,b866551dbee532ed4211044281e7932185fb9622,Added sphinx documentation to a sphinx-doc package.
gholt,2010-07-14 15:16:00,https://api.github.com/repos/openstack/swift/git/commits/2417470df2f8de540de6a24162c2bcf54c995b6f,2417470df2f8de540de6a24162c2bcf54c995b6f,Fix typo
emonty,2010-07-14 15:15:25,https://api.github.com/repos/openstack/swift/git/commits/b493ed2f5d26f9993338c24f8f8f8f846398ed7f,b493ed2f5d26f9993338c24f8f8f8f846398ed7f,Moved sample conf file install into docs rather than directly into etc.
gholt,2010-07-14 15:11:57,https://api.github.com/repos/openstack/swift/git/commits/627dbfe7459642bb0c1242a206dca1101434556f,627dbfe7459642bb0c1242a206dca1101434556f,Bug fixes in docs; howto build docs in docs
emonty,2010-07-14 15:09:51,https://api.github.com/repos/openstack/swift/git/commits/52a097c9f2f33561e9b7ec3a92bbdf3a12ce994a,52a097c9f2f33561e9b7ec3a92bbdf3a12ce994a,Moved things to use .install files.
emonty,2010-07-14 14:58:38,https://api.github.com/repos/openstack/swift/git/commits/76e6c6ea6c2272b7a5401adeb5c1be1f3badf5b9,76e6c6ea6c2272b7a5401adeb5c1be1f3badf5b9,"Renamed bin files in the tree so that setup.py install does the same thing
as a deb install."
emonty,2010-07-14 14:46:14,https://api.github.com/repos/openstack/swift/git/commits/81e79a87c41498cfbbbef2299339fc967a3fba1f,81e79a87c41498cfbbbef2299339fc967a3fba1f,Added support for building docs from setup.py.
emonty,2010-07-14 14:30:31,https://api.github.com/repos/openstack/swift/git/commits/d91a16b7cf66e71b2d9c23053af93fdb511763f4,d91a16b7cf66e71b2d9c23053af93fdb511763f4,Merged trunk. Enabled unittests in setup.py. w00t.
creiht,2010-07-14 03:24:47,https://api.github.com/repos/openstack/swift/git/commits/c2e75a5aadc682fd0f75c0b0ee061d5f3a9ed77b,c2e75a5aadc682fd0f75c0b0ee061d5f3a9ed77b,Updated Swift All in One
gholt,2010-07-13 22:04:12,https://api.github.com/repos/openstack/swift/git/commits/f381184ae2048c48d9eeaf8d703f01c4fe5c75ce,f381184ae2048c48d9eeaf8d703f01c4fe5c75ce,Make xfs-based tests optional
emonty,2010-07-13 21:36:06,https://api.github.com/repos/openstack/swift/git/commits/02622ba3acf466e18180357a4dab88a52bae39ca,02622ba3acf466e18180357a4dab88a52bae39ca,Merged trunk.
gholt,2010-07-13 21:23:39,https://api.github.com/repos/openstack/swift/git/commits/7b38b9a19a10a63ad490af95a1866c1222e59159,7b38b9a19a10a63ad490af95a1866c1222e59159,Make unit tests not require /etc/swift/*.ring.gz files
emonty,2010-07-13 21:11:54,https://api.github.com/repos/openstack/swift/git/commits/05e914ecaa4e930e9048cd4f72267e4fd8db10e2,05e914ecaa4e930e9048cd4f72267e4fd8db10e2,Put in (and then comment out) hooks to run unittests via setup.py.
emonty,2010-07-13 21:11:42,https://api.github.com/repos/openstack/swift/git/commits/8ae4985ea7f328f4d7d1ceaf99cf461c544107ad,8ae4985ea7f328f4d7d1ceaf99cf461c544107ad,Updated to debhelper 7 and better depends.
notmyname,2010-07-13 15:00:49,https://api.github.com/repos/openstack/swift/git/commits/b072b61cdd53c2d07338ce2b235949d0efa65c35,b072b61cdd53c2d07338ce2b235949d0efa65c35,clarified IRC info in AUTHORS file
emonty,2010-07-13 03:34:34,https://api.github.com/repos/openstack/swift/git/commits/a57a210659614e442924465fe4404552b1bb5b80,a57a210659614e442924465fe4404552b1bb5b80,Reverted accidental chmod -x-ing.
emonty,2010-07-12 23:51:34,https://api.github.com/repos/openstack/swift/git/commits/f6633005600e5729263d8adcb7388fcb18c5e747,f6633005600e5729263d8adcb7388fcb18c5e747,Re-added files import-dsc didn't know about.
notmyname,2010-07-12 22:35:06,https://api.github.com/repos/openstack/swift/git/commits/3e8a508d4c37fd4003f4d1d98a368e4a5ea52460,3e8a508d4c37fd4003f4d1d98a368e4a5ea52460,fixed comma in setup.py
creiht,2010-07-12 22:03:45,https://api.github.com/repos/openstack/swift/git/commits/001407b969bc12d48bd7f10960f84f519bb19111,001407b969bc12d48bd7f10960f84f519bb19111,Initial commit of Swift code
redbo,2010-07-08 01:37:44,https://api.github.com/repos/openstack/swift/git/commits/fe067413b1fb61cdfba97d543189c5a01230b45c,fe067413b1fb61cdfba97d543189c5a01230b45c,Import upstream version 1.0.0
redbo,2010-07-08 01:37:44,https://api.github.com/repos/openstack/swift/git/commits/2ee9b837b5a1e13681ca9359138451719f8641dd,2ee9b837b5a1e13681ca9359138451719f8641dd,Initial release
emonty,2010-07-12 23:48:53,https://api.github.com/repos/openstack/swift/git/commits/fe67cde013ca81afd1a8a39f311ed4d524111a1e,fe67cde013ca81afd1a8a39f311ed4d524111a1e,Removed debian dir from the tree so we can re-add it using import-dsc.
emonty,2010-07-12 23:48:07,https://api.github.com/repos/openstack/swift/git/commits/44cb5dc82681f61f727beb1933c6e286fd545417,44cb5dc82681f61f727beb1933c6e286fd545417,Changed to an upstream/packaging setup instead of a native package setup.
