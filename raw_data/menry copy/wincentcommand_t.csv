command-t,Fast file navigation for VIM
username,timestamp,url,sha,message
wincent,2019-08-02 19:16:43,https://api.github.com/repos/wincent/command-t/git/commits/02a22d27e1c4671db32b0ded1fa2bb861c16d14c,02a22d27e1c4671db32b0ded1fa2bb861c16d14c,"Merge branch 'pull/357'

Closes: https://github.com/wincent/command-t/pull/357

* pull/357:
  doc: update AUTHORS and HISTORY sections
  chore: update .mailmap
  fix: deleting a buffer closes the finder window
  Update CODE_OF_CONDUCT.md
  doc: Put placeholder for ongoing work in ""master"" in HISTORY section
  Update nokogiri dependency"
wincent,2019-08-02 19:16:30,https://api.github.com/repos/wincent/command-t/git/commits/8a57bc5a620492ba23653e0d69ad00f9df0e5dd2,8a57bc5a620492ba23653e0d69ad00f9df0e5dd2,doc: update AUTHORS and HISTORY sections
wincent,2019-08-02 19:14:39,https://api.github.com/repos/wincent/command-t/git/commits/722abe2f8f78f23277d4b9e06ad42c8598b541ca,722abe2f8f78f23277d4b9e06ad42c8598b541ca,chore: update .mailmap
etherandrius,2019-08-02 11:10:45,https://api.github.com/repos/wincent/command-t/git/commits/326ecf96ca72a7c637938495473ed9ecc1fd1ca0,326ecf96ca72a7c637938495473ed9ecc1fd1ca0,fix: deleting a buffer closes the finder window
wincent,2019-06-28 21:55:29,https://api.github.com/repos/wincent/command-t/git/commits/4f86fcb812b07a3d691d4b617e093b001a6ad839,4f86fcb812b07a3d691d4b617e093b001a6ad839,"Merge branch 'next'

* next:
  docs: update AUTHORS section
  perf: improve dot dir filter in find_file_scanner
  doc: update a shortlink
  doc: update HISTORY section
  fix: resolve conflict with vim-cool plug-in
  doc: Add a note explaining a potential Dein version mismatch issue"
wincent,2019-06-28 21:54:32,https://api.github.com/repos/wincent/command-t/git/commits/fa595a130d8508131d20fcd8501fdc24240b2308,fa595a130d8508131d20fcd8501fdc24240b2308,"Merge branch 'pull/356'

Closes: https://github.com/wincent/command-t/pull/356

* pull/356:
  docs: update AUTHORS section
  perf: improve dot dir filter in find_file_scanner"
wincent,2019-06-28 21:50:21,https://api.github.com/repos/wincent/command-t/git/commits/fff9211289c2af878b7f65cbb66e36d0b9dd892d,fff9211289c2af878b7f65cbb66e36d0b9dd892d,docs: update AUTHORS section
zdave,2019-06-28 18:16:22,https://api.github.com/repos/wincent/command-t/git/commits/a218358647ce3abd4720de48dd7e84a1f75998c1,a218358647ce3abd4720de48dd7e84a1f75998c1,"perf: improve dot dir filter in find_file_scanner

Prune dot dirs, rather than walking through them and ignoring all the
files."
wincent,2019-06-01 22:48:50,https://api.github.com/repos/wincent/command-t/git/commits/6a6a99f0ed55510eb45a7456e25f908ba97140ae,6a6a99f0ed55510eb45a7456e25f908ba97140ae,doc: update a shortlink
wincent,2019-05-14 20:42:44,https://api.github.com/repos/wincent/command-t/git/commits/1c47b4526f21ca03bf21ea22c9497cdb7746f0bc,1c47b4526f21ca03bf21ea22c9497cdb7746f0bc,doc: update HISTORY section
wincent,2019-05-14 20:40:48,https://api.github.com/repos/wincent/command-t/git/commits/3075f790cad7f39a557d247b8148773e00c43197,3075f790cad7f39a557d247b8148773e00c43197,"fix: resolve conflict with vim-cool plug-in

vim-cool has an `OptionSet` autocmd that is running when Command-T sets
temporary options and ends up throwing an error.

Related: https://github.com/wincent/command-t/issues/354"
wincent,2019-05-12 19:52:02,https://api.github.com/repos/wincent/command-t/git/commits/efba849196f3db6b54b6d2062a60430f55dd2dbf,efba849196f3db6b54b6d2062a60430f55dd2dbf,"Merge branch 'pull/348'

Closes: https://github.com/wincent/command-t/pull/348

* pull/348:
  doc: Add a note explaining a potential Dein version mismatch issue"
jpfender,2019-02-17 23:00:53,https://api.github.com/repos/wincent/command-t/git/commits/27df091aa99843cd82adf29c0127897b96b682a8,27df091aa99843cd82adf29c0127897b96b682a8,"doc: Add a note explaining a potential Dein version mismatch issue

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2019-05-12 19:42:39,https://api.github.com/repos/wincent/command-t/git/commits/57e112c12c99185e062a4330896cfaf422d1ea64,57e112c12c99185e062a4330896cfaf422d1ea64,"Merge branch 'next'

* next:
  chore: fix whitespace
  chore: update nokogiri dependency
  doc: update AUTHORS section
  chore: sort .gitignore
  fix: change the load path style from windows to unix
  Add media to .gitignore
  Update CODE_OF_CONDUCT.md
  doc: update HISTORY section
  Avoid potential nested :redir when possible by preferring execute()
  doc: update HISTORY section
  Catch E434 errors trying to jump to help targets
  Make methods that may be exercised in statuslines available in stub
  Add missing space in commandt#CheckBuffer()
  Update nokogiri dependency
  doc: Prepare HISTORY section for ongoing work"
wincent,2019-05-12 19:40:03,https://api.github.com/repos/wincent/command-t/git/commits/b82a99f8fa9b6fb1f355852279b214136b573e70,b82a99f8fa9b6fb1f355852279b214136b573e70,chore: fix whitespace
wincent,2019-05-12 19:34:37,https://api.github.com/repos/wincent/command-t/git/commits/884633cb612dd6de89a840964dc91844144455c2,884633cb612dd6de89a840964dc91844144455c2,"chore: update nokogiri dependency

Because otherwise GitHub will nag me about CVE-2018-14404."
wincent,2019-05-12 19:26:47,https://api.github.com/repos/wincent/command-t/git/commits/f44fa91b074358acfb5ad3a0137d8b0210babd9f,f44fa91b074358acfb5ad3a0137d8b0210babd9f,"Merge branch 'pull/353'

Closes: https://github.com/wincent/command-t/pull/353

* pull/353:
  doc: update AUTHORS section
  chore: sort .gitignore
  fix: change the load path style from windows to unix"
wincent,2019-05-12 19:26:17,https://api.github.com/repos/wincent/command-t/git/commits/6662e137337bb69050b4e71f79b9b8a077c5897a,6662e137337bb69050b4e71f79b9b8a077c5897a,doc: update AUTHORS section
wincent,2019-05-12 19:21:14,https://api.github.com/repos/wincent/command-t/git/commits/47e4e8de64be0eed75fd46aeaae565353f94e418,47e4e8de64be0eed75fd46aeaae565353f94e418,chore: sort .gitignore
xiaodezhang,2019-04-12 01:45:19,https://api.github.com/repos/wincent/command-t/git/commits/75a00199c2b910413c3a4dec8d0892276cb5e653,75a00199c2b910413c3a4dec8d0892276cb5e653,"fix: change the load path style from windows to unix

And add vim swp file to the git ignore file.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2019-03-31 20:57:45,https://api.github.com/repos/wincent/command-t/git/commits/cd37945c5038e03dbeefbc81524905250db5826e,cd37945c5038e03dbeefbc81524905250db5826e,"Add media to .gitignore

So that I can have a local checkout of the media branch via `git
worktree add media media`."
wincent,2019-03-31 20:57:09,https://api.github.com/repos/wincent/command-t/git/commits/792d6079d32f1973c142c6fab89d2fdc94019ac8,792d6079d32f1973c142c6fab89d2fdc94019ac8,Update CODE_OF_CONDUCT.md
wincent,2019-03-31 20:56:21,https://api.github.com/repos/wincent/command-t/git/commits/2249d0dc859b8303ea98ce744590d8750d42d08a,2249d0dc859b8303ea98ce744590d8750d42d08a,Update CODE_OF_CONDUCT.md
wincent,2019-02-18 23:30:40,https://api.github.com/repos/wincent/command-t/git/commits/ecfbcdf28ac18e25a00a1221d67ed9f9f0285308,ecfbcdf28ac18e25a00a1221d67ed9f9f0285308,doc: update HISTORY section
wincent,2019-02-18 23:27:37,https://api.github.com/repos/wincent/command-t/git/commits/db774a469503b73d1119f48c6ed083af35ee177b,db774a469503b73d1119f48c6ed083af35ee177b,Avoid potential nested :redir when possible by preferring execute()
wincent,2019-02-13 21:20:56,https://api.github.com/repos/wincent/command-t/git/commits/80e8b61a1d85f46d1f39034bf6ba5b2e9d0a194c,80e8b61a1d85f46d1f39034bf6ba5b2e9d0a194c,doc: update HISTORY section
wincent,2019-02-13 21:14:49,https://api.github.com/repos/wincent/command-t/git/commits/fdbb11f87545c6c43bc2bf5cd8781d2153c615be,fdbb11f87545c6c43bc2bf5cd8781d2153c615be,"Catch E434 errors trying to jump to help targets

This should be a pretty rare event, but as the comments indicate, it is
currently happening in at least one plug-in that I use."
wincent,2018-12-06 21:30:27,https://api.github.com/repos/wincent/command-t/git/commits/7cabdfb2872d09e7c3de5c611d45db5ae68878ab,7cabdfb2872d09e7c3de5c611d45db5ae68878ab,Make methods that may be exercised in statuslines available in stub
wincent,2018-12-06 21:30:12,https://api.github.com/repos/wincent/command-t/git/commits/032b9ee3c564ee5564a9569c13a73b0affa820b7,032b9ee3c564ee5564a9569c13a73b0affa820b7,Add missing space in commandt#CheckBuffer()
wincent,2018-09-19 21:35:58,https://api.github.com/repos/wincent/command-t/git/commits/7364a410bc4f0d7febc183678cd565066dfd1e73,7364a410bc4f0d7febc183678cd565066dfd1e73,"doc: Put placeholder for ongoing work in ""master"" in HISTORY section"
wincent,2018-09-19 21:33:01,https://api.github.com/repos/wincent/command-t/git/commits/25a5fb220a59c93364f55b6fe02d12e42802e3b2,25a5fb220a59c93364f55b6fe02d12e42802e3b2,"Update nokogiri dependency

According to GitHub, the old one had security vulnerabilities:

- CVE-2017-9050 Critical severity
- CVE-2017-18258 Moderate severity
- CVE-2017-5029 Low severity
- CVE-2015-5312 High severity
- CVE-2016-4658 High severity
- CVE-2015-8806 Moderate severity
- CVE-2015-7499 Moderate severity

Not super concerned here as nokogiri is a dev dependency only so there
is no user-facing impact here, but I want to stop GitHub yammering at
me."
wincent,2018-09-19 21:33:01,https://api.github.com/repos/wincent/command-t/git/commits/4a2b0a2ff35dfe0bb56986157d760af7cad47151,4a2b0a2ff35dfe0bb56986157d760af7cad47151,"Update nokogiri dependency

According to GitHub, the old one had security vulnerabilities:

- CVE-2017-9050 Critical severity
- CVE-2017-18258 Moderate severity
- CVE-2017-5029 Low severity
- CVE-2015-5312 High severity
- CVE-2016-4658 High severity
- CVE-2015-8806 Moderate severity
- CVE-2015-7499 Moderate severity

Not super concerned here as nokogiri is a dev dependency only so there
is no user-facing impact here, but I want to stop GitHub yammering at
me."
wincent,2018-09-19 21:32:41,https://api.github.com/repos/wincent/command-t/git/commits/64667f84c300189afe3e259fd5ca69f409e3e091,64667f84c300189afe3e259fd5ca69f409e3e091,doc: Prepare HISTORY section for ongoing work
wincent,2018-09-19 20:56:11,https://api.github.com/repos/wincent/command-t/git/commits/1a5b41a07e2d49c7f639ab437cd7f3c68a5cc1ad,1a5b41a07e2d49c7f639ab437cd7f3c68a5cc1ad,doc: prep for 5.0.3 release
wincent,2018-09-19 20:50:07,https://api.github.com/repos/wincent/command-t/git/commits/535438951f95908c7dcce1313797d848d3453669,535438951f95908c7dcce1313797d848d3453669,"Guard against wiped-out match listing buffer in Neovim

If somebody deletes the Command-T match listing buffer on Neovim (eg.
with `:bwipeout`), Command-T will blow up on the next invocation because
Neovim doesn't define `Vim::DeletedBufferError`.

Closes: https://github.com/wincent/command-t/issues/342

Thanks to Javier Parra for the bug report with a minimal repro recipe
and diagnosis of the problem."
wincent,2017-12-14 00:32:49,https://api.github.com/repos/wincent/command-t/git/commits/3e54b4acae1cde042141ff5d68dc68eb6e28c455,3e54b4acae1cde042141ff5d68dc68eb6e28c455,"doc: update HISTORY section for ""next"" branch"
wincent,2017-12-14 00:17:59,https://api.github.com/repos/wincent/command-t/git/commits/4a1f69d6d58344cd187576782737497a37a285c4,4a1f69d6d58344cd187576782737497a37a285c4,"Don't re-evaulate jumps for every keypress

Just like we did for BufferScanner and friends. It's fast, but may as
well not do stupid work."
wincent,2017-12-14 00:09:51,https://api.github.com/repos/wincent/command-t/git/commits/095a90f7da56c70aeb1ed88a3b94c398b00f7234,095a90f7da56c70aeb1ed88a3b94c398b00f7234,"Don't bother caching CommandScanner results

Scanning the commands is fast enough[*] to do it on every invocation, so
let's do it on every invocation. That way, if something gets lazy-loaded
and we wind up with a new command, we'll pick it up.

[*]: I don't have any hard numbers to back that up, but my subjective
impression is that it takes a basically imperceptible amount of time."
wincent,2017-12-14 00:02:44,https://api.github.com/repos/wincent/command-t/git/commits/3bb9d380f63a9041aa7f0010c5711f66e70e5ad5,3bb9d380f63a9041aa7f0010c5711f66e70e5ad5,"Replace O(n^2) MRU pattern with O(n)

As noted in the previous commit, this is not a big deal because ""n"" is
small, but for the sake of hygiene we may as well implement the easy
fix."
wincent,2017-12-13 23:55:15,https://api.github.com/repos/wincent/command-t/git/commits/90c59096d9b24807da49abacddb6b76a3aa5b847,90c59096d9b24807da49abacddb6b76a3aa5b847,"Fix CommandTMRU degenerate performance under Neovim

Same as we did with CommandTBuffer, but a deeper refactor. Switches the
MRU module to track buffer numbers instead of full-blown buffer objects.
If nothing else, this means we'll not be as likely to accumulate garbage
over time.

The perf is fine now, despite the O(n^2) logic in the unused buffer loop
(the `#used?` method scans the entire stack, and we call it once for
every buffer in the list) because n is usually small (even 200 * 200
comparisons here is plenty fast). I'll still replace that with something
O(n) though as a follow-up, because otherwise it offends my
sensibilities a bit."
wincent,2017-12-13 23:27:52,https://api.github.com/repos/wincent/command-t/git/commits/f3bebf8abc48dfd43669880b7443be92bd680a8d,f3bebf8abc48dfd43669880b7443be92bd680a8d,"Don't recalculate buffers on every key press for MRUBufferFinder

Same as the fix I just did for BufferFinder. (Note this also suffers
from the slowness on Neovim, so going to fix that in the same way I did
for BufferFinder.)"
wincent,2017-12-13 23:21:33,https://api.github.com/repos/wincent/command-t/git/commits/3fbedd5ac590e987312f2244b403c21608c83b6b,3fbedd5ac590e987312f2244b403c21608c83b6b,"Don't rescan buffers for every key press

As previously written, we would call `#paths` on every key press,
resulting in a full scan.

Instead, behave like the history scanner does: create a new one for each
interaction, and have that instance memoize the results for the duration
of that interaction."
wincent,2017-12-13 23:09:08,https://api.github.com/repos/wincent/command-t/git/commits/c82b939872345b0fcb1951f5cc95b7d82cd1a918,c82b939872345b0fcb1951f5cc95b7d82cd1a918,"Work around pathologically slow buffer scanning in Neovim

In Neovim, unlisted buffers are returned to the Ruby layer. If you run
Ferret's :Ack, for example, you might find yourself with a large number
of those (as `:h unlisted-buffer` says, Vim uses these to track things
like file names). As such, it is too easy to wind up with a *huge*
number of unlisted buffers, and the scanner takes forever.

This is exacerbated by the scanner being called on every keypress.

Fix the slow processing by avoiding use of `VIM::Buffer` entirely, and
instead call out to native Vim commands.

This alone makes it usable again. In a follow-up commit I'll do the
""right"" thing and make it not call the scanner repeatedly during a
single invocation."
wincent,2017-11-17 03:46:11,https://api.github.com/repos/wincent/command-t/git/commits/7147ba92c9c1eef8269fd47d47ba636ce7f365a6,7147ba92c9c1eef8269fd47d47ba636ce7f365a6,"Merge branch 'pull/315'

Closes: https://github.com/wincent/command-t/pull/315

* pull/315:
  doc: update AUTHORS and HISTORY
  Fix GotoOrOpen command"
wincent,2017-11-17 03:45:00,https://api.github.com/repos/wincent/command-t/git/commits/02cd5efdc4453bcf4ab549da815b9b695eb82c9c,02cd5efdc4453bcf4ab549da815b9b695eb82c9c,doc: update AUTHORS and HISTORY
tap349,2017-11-11 15:46:52,https://api.github.com/repos/wincent/command-t/git/commits/7c952f501f7455c59a37e4b08543545e308d9887,7c952f501f7455c59a37e4b08543545e308d9887,Fix GotoOrOpen command
wincent,2017-09-29 17:50:05,https://api.github.com/repos/wincent/command-t/git/commits/c5882de56f0ca3ce8e891c434f192519aca5c7bb,c5882de56f0ca3ce8e891c434f192519aca5c7bb,Fix unlisted buffers showing up in :CommandTBuffer in Neovim
wincent,2017-09-07 18:50:34,https://api.github.com/repos/wincent/command-t/git/commits/8cd757cde38fe6b9e31fba89a0688a249bd072a6,8cd757cde38fe6b9e31fba89a0688a249bd072a6,doc: create new HISTORY section for master development
wincent,2017-09-07 18:45:26,https://api.github.com/repos/wincent/command-t/git/commits/1c797d0aa835743a9a8addd7b2c70d7f7ff9ff1a,1c797d0aa835743a9a8addd7b2c70d7f7ff9ff1a,Prep for v5.0.2 release
wincent,2017-09-07 18:40:50,https://api.github.com/repos/wincent/command-t/git/commits/06bf93caed06bd43bf4295d1ca76424ea5d05bc9,06bf93caed06bd43bf4295d1ca76424ea5d05bc9,"Avoid unwanted escaping in :CommandTCommand and :CommandTTag

Also adjusting `:CommandTHistory` to use the same approach, for
consistency."
wincent,2017-09-07 18:21:30,https://api.github.com/repos/wincent/command-t/git/commits/9c00e84b3afdc2df78af5a35f1d6dde2044ce1ae,9c00e84b3afdc2df78af5a35f1d6dde2044ce1ae,"Make opening targets like ""#"" work in :CommandTHelp

Closes: https://github.com/wincent/command-t/issues/307

I'll also look at the other finders and see if a similar approach makes
sense for any of them."
wincent,2017-09-06 20:46:57,https://api.github.com/repos/wincent/command-t/git/commits/212b570239b42ff633976590ea858f10ea3087a2,212b570239b42ff633976590ea858f10ea3087a2,"Fix regression trying to switch to previously opened file in other tab

This is a regression introduced in 85949ce7.

That one attempted to fix #298 by applying a similar fix to the one used
in #295. However, it only worked by luck: `bufexists()` doesn't support
patterns or use of ""$""/""^"" to anchor the match like `bufwinnr()` does.
This meant that adding those anchors made it always false.

That fixed the unwanted splits in #298, but it meant that you couldn't
go back to an existing file in another tab.

The fix is pretty straightforward: switch from `bufexists()` to
`bufname()`, because the latter does support anchoring. As far as I can
tell, this fixes #306 without breaking the scenario detailed in #298.
The one gotcha here is that we can't rely on the truthiness of the
non-empty string returned by `bufname()` here, because crazy old
Vimscript coerces also strings to `0`; we therefore have to use an
explicit check against `''`.

Closes: https://github.com/wincent/command-t/issues/306"
wincent,2017-08-30 04:04:50,https://api.github.com/repos/wincent/command-t/git/commits/7f21c5ea9eb5cdfba8e4429a4226fe282a32871a,7f21c5ea9eb5cdfba8e4429a4226fe282a32871a,"Merge branch 'pull/304'

Closes: https://github.com/wincent/command-t/pull/304

* pull/304:
  doc: update AUTHORS and HISTORY sections
  Remove NUM2LONG conversions of object ids"
wincent,2017-08-30 04:04:36,https://api.github.com/repos/wincent/command-t/git/commits/6d2688dbe54c18c297ce0dc5330d9562f41db455,6d2688dbe54c18c297ce0dc5330d9562f41db455,doc: update AUTHORS and HISTORY sections
arkeet,2017-08-29 05:51:00,https://api.github.com/repos/wincent/command-t/git/commits/04e6eb92c89571a7d8ef3b4a5b3f830ee18cabc0,04e6eb92c89571a7d8ef3b4a5b3f830ee18cabc0,"Remove NUM2LONG conversions of object ids

Instead of converting object_ids to LONG and testing for equality,
compare them directly with rb_equal. This avoids ""bignum too big to
convert into `long'"" errors on Windows."
wincent,2017-08-18 14:47:16,https://api.github.com/repos/wincent/command-t/git/commits/9779b20eae625b0737a04c814a18a5374f5780e4,9779b20eae625b0737a04c814a18a5374f5780e4,Soft-wrap CONTRIBUTING.md
wincent,2017-08-18 14:47:16,https://api.github.com/repos/wincent/command-t/git/commits/fe8a0a6df420aa2e429d346d06a0bf7966f42ef1,fe8a0a6df420aa2e429d346d06a0bf7966f42ef1,doc: style version numbers as subheadings in the changelog
wincent,2017-08-18 14:47:16,https://api.github.com/repos/wincent/command-t/git/commits/f47eeb71826a5c4b51f23e1bcc4b871c487712ec,f47eeb71826a5c4b51f23e1bcc4b871c487712ec,doc: ready the changelog for subsequent updates
wincent,2017-08-18 14:47:16,https://api.github.com/repos/wincent/command-t/git/commits/f7832379b6955d5edd7b96c8cbccd2e024b266c7,f7832379b6955d5edd7b96c8cbccd2e024b266c7,doc: Add another link to related projects
wincent,2017-08-18 14:47:16,https://api.github.com/repos/wincent/command-t/git/commits/818c86c05a64c46e35f2fd444d909374b029ccd7,818c86c05a64c46e35f2fd444d909374b029ccd7,"Add CONTRIBUTING.md

Again, suggested by GitHub. I am too lazy to flesh this one out fully at
this point (there are some truly epic, 30-minute-read examples out
there), but not going to bother with it for now."
wincent,2017-08-18 14:41:56,https://api.github.com/repos/wincent/command-t/git/commits/37458f53ca344eee8e0e7e8d2cfd5a2f0e32ffb2,37458f53ca344eee8e0e7e8d2cfd5a2f0e32ffb2,"Remove hard-wrapping in code of conduct

Because that's the way I do Markdown."
wincent,2017-08-18 14:41:56,https://api.github.com/repos/wincent/command-t/git/commits/8ada377ec73acdd54f284498b7e19d9d8fb360d3,8ada377ec73acdd54f284498b7e19d9d8fb360d3,"Set email address in code of conduct

Don't really have a ""team"" email address, so this will have to do."
wincent,2017-08-18 14:41:56,https://api.github.com/repos/wincent/command-t/git/commits/8feee605f108b54f05a90beef8d4d2a7b41ffaa8,8feee605f108b54f05a90beef8d4d2a7b41ffaa8,"Add code of conduct

Probably overkill for a tiny ""community"" like this one, but GitHub
suggested it and I like the idea.

This is the code of conduct from:

https://contributor-covenant.org/version/1/4/code_of_conduct.md"
wincent,2017-08-18 14:36:52,https://api.github.com/repos/wincent/command-t/git/commits/287829398ced639deaf9a7f9da56ac747940cad4,287829398ced639deaf9a7f9da56ac747940cad4,Prep for 5.0.1 release
wincent,2017-08-18 14:36:52,https://api.github.com/repos/wincent/command-t/git/commits/9480e0342981806ac0114fd02ecbea4db776def7,9480e0342981806ac0114fd02ecbea4db776def7,"Make Ctrl-W match zsh-ish behavior

As pointed out in https://github.com/wincent/command-t/issues/301 Ctrl-W
would not delete past punctuation characters.

I did some testing in zsh to see what that does and updated the regex to
match:

   foo bar.baz        (deletes ""baz"" then ""bar."")
   foo bar....baz     (deletes ""baz"" then ""bar...."")
      indented        (deletes ""indented"" but won't delete leading ws)

Note that unlike the old pattern, it is possible for this one to not
match, so I added an `if` guard.

Should probably have tests for this.

Closes: https://github.com/wincent/command-t/issues/301"
wincent,2017-07-12 01:35:24,https://api.github.com/repos/wincent/command-t/git/commits/85949ce7a70a26abf6f9d355e38d1473facba022,85949ce7a70a26abf6f9d355e38d1473facba022,"Fix unwanted split opening behavior

Similar to the fix we applied in 595976eb70ba3a2f7a2932eeb4 to fix
https://github.com/wincent/command-t/issues/295 looks like we have to
deal with this edge case too.

Closes https://github.com/wincent/command-t/issues/298"
wincent,2017-06-23 14:38:15,https://api.github.com/repos/wincent/command-t/git/commits/29f2606a9665058a98b56f2d8062ba614a3f246e,29f2606a9665058a98b56f2d8062ba614a3f246e,"Prefer longer, more explicit command names"
wincent,2017-06-23 14:29:51,https://api.github.com/repos/wincent/command-t/git/commits/595976eb70ba3a2f7a2932eeb44e785c33b652f8,595976eb70ba3a2f7a2932eeb44e785c33b652f8,"Fix problem opening identically named buffers with `:sbuffer`

Closes: https://github.com/wincent/command-t/issues/295

Just say we open ""win32/capturer.rs"" and then try to open ""capturer.rs"".

For the first file, we'll fall through to the `else` branch in
`commandt#GotoOrOpen` and open it with `:edit`. For the second file, our
`buwinnr()` check will report that the buffer is already open, so we'll
try to open it with `:sbuffer` which causes us to go back to the
previous file instead of opening the new one that we wanted.

The fix here is to do a stricter match in `bufwinnr()`. In this way,
when we try to open the second file (""capturer.rs"") our
check(`bufwinnr(""^capturer.rs$"")`) will fail, and we'll open the new
file correctly with `:edit`.

I've tested this manually with a bunch of permutations of splits, tabs,
and file orderings, and I don't believe this breaks any of the existing
functionality."
wincent,2017-06-18 04:19:35,https://api.github.com/repos/wincent/command-t/git/commits/fd5e17f3ddb44edb41e090f8fede6b2e38592f0e,fd5e17f3ddb44edb41e090f8fede6b2e38592f0e,"doc: Fix a couple of bad cross-links

Closes: https://github.com/wincent/command-t/issues/292"
wincent,2017-06-13 03:28:05,https://api.github.com/repos/wincent/command-t/git/commits/a9b931fd42ee65f4247a30f87caedd50a14962a4,a9b931fd42ee65f4247a30f87caedd50a14962a4,"Merge branch 'pull/291'

Closes: https://github.com/wincent/command-t/pull/291

* pull/291:
  doc: Add Jakob Pfender to AUTHORS section
  fix emphasis in doc file that created a tag"
wincent,2017-06-13 03:27:26,https://api.github.com/repos/wincent/command-t/git/commits/40c81501edf227b5619892b9f37bf66444fa639e,40c81501edf227b5619892b9f37bf66444fa639e,doc: Add Jakob Pfender to AUTHORS section
wincent,2017-06-08 15:41:20,https://api.github.com/repos/wincent/command-t/git/commits/3f0d21a06d9b936bcd79970c1b2301b05dd297bc,3f0d21a06d9b936bcd79970c1b2301b05dd297bc,"Set switchbuf if it is empty (the default)

Try to avoid people running into this issue:

  https://github.com/wincent/command-t/issues/289

If people end up complaining about this will have to document how to
avoid this (ie. by setting up a non-default setting in `~/.vim/vimrc`,
or setting back to the empty default in an ""after"" file)."
wincent,2017-06-07 06:20:19,https://api.github.com/repos/wincent/command-t/git/commits/c62079dcce43bbfadba39cf0b7280cd71e34ad3f,c62079dcce43bbfadba39cf0b7280cd71e34ad3f,Update specs → Green
wincent,2017-06-07 06:13:10,https://api.github.com/repos/wincent/command-t/git/commits/53c359fe23862d8ff893e6781c31e82eda13df66,53c359fe23862d8ff893e6781c31e82eda13df66,Fix extconf.rb path in gemspec
wincent,2017-06-07 06:09:25,https://api.github.com/repos/wincent/command-t/git/commits/47c358a4c48a3091220f30f221cd228014f8f1cf,47c358a4c48a3091220f30f221cd228014f8f1cf,Prepare for 5.0 release
wincent,2017-06-07 06:05:29,https://api.github.com/repos/wincent/command-t/git/commits/4b154be489473a97a0fa7d5a380c401848952b77,4b154be489473a97a0fa7d5a380c401848952b77,"Merge branch 'next'

* next:
  Correct a deceitful comment
  Update shortlink host
  doc: Add Henric Trotzig to AUTHORS section
  Flesh out tests for `wildignore_to_regexp`
  Simplify converted wildignore regexp
  Fix turning */foo/* wildignore into a regexp
  Fix edge case regression when searching for dotfiles
  Use One True Brace Style consistently
  Use last needle to skip over definite non-matches
  Don't waste time inserting non-matches into the heap(s)
  Fix load paths in matcher benchmarks
  Add g:CommandTWindowFilter
  Revert Gem::Ext::BuildError change
  doc: regenerate AUTHORS section
  doc: don't include self in ""other contributors"" list
  Invalidate HelpScanner cache when runtimepath changes
  Always re-complete help paths in HelpScanner
  Add :CommandTOpen, baking in ""GotoOrOpen"" functionality by default
  doc: fix a typo
  Only print mismatching version numbers if they actually mismatch
  doc: fix typo in HISTORY section
  doc: Fix instructions for overriding default mappings
  Add empty .watchmanconfig
  Revert ""Remove -c from git-ls-files invocation""
  doc: update instructions for updating AUTHORS section
  doc: add g:CommandTGitIncludeUntracked to HISTORY
  doc: Add Steven Stallion to the list of AUTHORS
  Remove -c from git-ls-files invocation
  Add untracked files to `git ls-files` output
  Add logo to README
  doc: Update AUTHORS and HISTORY
  updated docs
  Remove buffer and update buffer list
  basic remove
  doc: Add Stefan Schmidt to AUTHORS
  update vim-plug install instructions
  Fix bad memoization of help finder
  doc: kill off an unnecessary blank line
  Fix case in a comment
  Remove unnecessary escape_for_single_quotes call
  Uncomment commented-out section
  Make ""next"" branch slightly less aggressive
  Always use regexp-based wildignore handling
  Adjust spec helper to account for new directory structure
  Update specs to account for 64dbf7904167
  Make example a tiny bit more real
  Get some slightly realer IPC happening
  Don't log by default
  Move Command-T files deeper
  Frown disappointedly at malformed JSON rather than crashing
  Add configuration options for client and server logs
  Make logfile configurable
  Make sure we never accidentally print to the channel
  Show that it is possible to require the C extension
  Drop unnecessary explicit ""nl"" mode
  Make simple ""echo"" server
  Spawn commandtd daemon process at launch
  Fork Command-T engine in preparation for v5.0
  Use <nowait>, when available, to set up buffer-local mappings"
wincent,2017-06-05 14:07:50,https://api.github.com/repos/wincent/command-t/git/commits/f8de15b14d3747e0830f8166ab453622a1f41c75,f8de15b14d3747e0830f8166ab453622a1f41c75,Correct a deceitful comment
wincent,2017-05-21 20:48:55,https://api.github.com/repos/wincent/command-t/git/commits/5c8645893c9ddc099e0030696626ca8c2ebaddc4,5c8645893c9ddc099e0030696626ca8c2ebaddc4,Update shortlink host
wincent,2017-05-05 14:08:06,https://api.github.com/repos/wincent/command-t/git/commits/7dfb9136b16468df7b34ddaee324fa20893f507f,7dfb9136b16468df7b34ddaee324fa20893f507f,"Merge branch 'pull/287'

Closes: https://github.com/wincent/command-t/pull/287

* pull/287:
  doc: Add Henric Trotzig to AUTHORS section
  Flesh out tests for `wildignore_to_regexp`
  Simplify converted wildignore regexp
  Fix turning */foo/* wildignore into a regexp"
wincent,2017-05-05 14:03:45,https://api.github.com/repos/wincent/command-t/git/commits/bf14da22e8219881c36ecd0f04fbac3466a3af42,bf14da22e8219881c36ecd0f04fbac3466a3af42,doc: Add Henric Trotzig to AUTHORS section
wincent,2017-04-21 23:29:55,https://api.github.com/repos/wincent/command-t/git/commits/915048e6aed264dd7bf68e29ba485ade4c44f845,915048e6aed264dd7bf68e29ba485ade4c44f845,"Fix edge case regression when searching for dotfiles

Fixes problem introduced in ee9732511.

Given an initial empty search string we were setting dotfiles to have a
score of 0.0 in order to hide them from the search listing, which was
causing them to be skipped in subsequent searches, even if the user
types "".foo"". Notably, on pressing backspace, our shortcircuiting would
be deactivated and we would show the results.

The (regrettably subtle) fix here is to hide the files in the initial
search by returning a *negative* score.

When the user then types a period ("".""), we will go ahead an calculate
the score, at which point the -1.0 will be replaced with some positive
score (because we can't fail to match in this case, the dot matches the
dotfile by definition). If the *next* letter (or any other letter typed
later on) causes a failure to match, we'll set the score to 0.0, causing
it to be suppressed (until backspace is pressed).

On the other hand, if instead of typing a period the user types a
letter, these files will continue to be skipped (and their score set to
-1.0) at relatively low cost, so this shouldn't have any negative impact
on the benchmarks.

Note the p values (no significant difference):

Summary of cpu time and (wall-clock time):
                    best    avg      sd     +/-   p   (best)    (avg)      (sd)     +/-   p
     pathological 1.07000 1.16800 0.12734 [+0.9%]   (1.07308) (1.17285) (0.13029) [+0.6%]
        command-t 0.81000 0.92000 0.09592 [+2.4%]   (0.81280) (0.92122) (0.09806) [+2.6%]
chromium (subset) 3.18000 3.30600 0.09521 [-3.0%]   (0.64119) (0.67648) (0.02236) [-2.5%]
 chromium (whole) 4.30000 4.34200 0.03370 [-1.2%]   (0.63329) (0.67998) (0.02648) [-8.9%]
       big (400k) 6.23000 6.39400 0.12532 [-0.7%]   (0.99223) (1.06572) (0.07311) [+3.2%]
c"
wincent,2017-04-19 03:09:32,https://api.github.com/repos/wincent/command-t/git/commits/c0b145830eb3e180746a86907be94c41489b9c3c,c0b145830eb3e180746a86907be94c41489b9c3c,"Use One True Brace Style consistently

Was mostly using it already, just rolling it out more consistently."
wincent,2017-04-19 03:06:00,https://api.github.com/repos/wincent/command-t/git/commits/ee97325119c7fe5933eb2e0006d51b76708dad8e,ee97325119c7fe5933eb2e0006d51b76708dad8e,"Use last needle to skip over definite non-matches

Idea from Hanson Wang and implemented in fuzzy-native here (thanks for
the heads-up, @hansonw):

https://github.com/facebooknuclide/nuclide-prebuilt-libs/commit/6a03044137fa4

The basic notion is that if the search string is an extension of the
previous search string (ie. if you just searched for ""foo"" and then
typed an additional ""b"" to search for ""foob""), then we can skip over all
the items that didn't match ""foo"", because they won't match ""foob""
either.

This delivers a nice speed-up for the common case of typing a
successively longer search query to narrow the result set:

Summary of cpu time and (wall-clock time):
                    best    avg      sd      +/-     p    (best)    (avg)      (sd)      +/-     p
     pathological 1.05000 1.11600 0.07338  [+0.0%]      (1.04406) (1.11903) (0.07496)  [+0.1%]
        command-t 0.75000 0.84600 0.08958 [-15.4%] 0.05 (0.76016) (0.84675) (0.08892) [-15.5%] 0.05
chromium (subset) 3.10000 3.17200 0.03816 [-20.9%] 0.05 (0.58766) (0.60345) (0.02392) [-20.7%] 0.05
 chromium (whole) 3.80000 3.87800 0.06645 [-60.7%] 0.05 (0.53332) (0.54951) (0.01307) [-56.9%] 0.05
       big (400k) 5.63000 5.78000 0.12570 [-56.9%] 0.05 (0.78037) (0.83729) (0.04883) [-56.5%] 0.05"
wincent,2017-04-19 03:03:01,https://api.github.com/repos/wincent/command-t/git/commits/34b03d5ba47d9ab1aeb589a504f2e740e2d30670,34b03d5ba47d9ab1aeb589a504f2e740e2d30670,"Don't waste time inserting non-matches into the heap(s)

Non-matches will have score 0.0, so we can skip those. In the edge-case
of the zero-width search string, all matches have score 1.0 (with
alpha-ordering taking care of tie-breaking). So, we can safely skip the
heap operations for items scoring 0.0.

Improves our baseline:

Summary of cpu time and (wall-clock time):
                    best      avg      sd     +/-   p   (best)    (avg)      (sd)     +/-   p
     pathological  1.12000  1.19600 0.12290 [+1.8%]   (1.11718) (1.20318) (0.12606) [+2.2%]
        command-t  1.45000  1.54400 0.11271 [+0.8%]   (1.44169) (1.54049) (0.11130) [+0.8%]
chromium (subset)  5.50000  5.58400 0.06406 [+0.4%]   (0.93548) (0.96777) (0.01784) [-3.2%]
 chromium (whole)  7.73000  7.92200 0.18498 [+0.5%]   (1.07602) (1.22772) (0.18294) [+6.0%]
       big (400k) 11.61000 11.88200 0.14851 [-1.4%]   (1.67856) (1.85601) (0.17784) [+0.3%]

To:

Summary of cpu time and (wall-clock time):
                    best    avg      sd      +/-     p    (best)    (avg)      (sd)      +/-     p
     pathological 1.07000 1.11600 0.02653  [-7.2%]      (1.07558) (1.11756) (0.02452)  [-7.7%]
        command-t 0.89000 0.97600 0.10111 [-58.2%] 0.05 (0.89123) (0.97778) (0.10287) [-57.5%] 0.05
chromium (subset) 3.68000 3.83400 0.08499 [-45.6%] 0.05 (0.67209) (0.72860) (0.04759) [-32.8%] 0.05
 chromium (whole) 5.99000 6.23200 0.13167 [-27.1%] 0.05 (0.82809) (0.86220) (0.02334) [-42.4%] 0.05
       big (400k) 8.87000 9.06600 0.10307 [-31.1%] 0.05 (1.27407) (1.31064) (0.03354) [-41.6%] 0.05

So pretty big drops across the board."
wincent,2017-04-19 02:56:48,https://api.github.com/repos/wincent/command-t/git/commits/44f44d27eaad194561d6a5da0ccfdb6df78f1915,44f44d27eaad194561d6a5da0ccfdb6df78f1915,"Fix load paths in matcher benchmarks

Haven't run these for a while, so they broke when I changed the path
structure."
wincent,2017-04-05 01:29:45,https://api.github.com/repos/wincent/command-t/git/commits/802a879bc13771ee723cb81e5f0ea0c5b8380e1a,802a879bc13771ee723cb81e5f0ea0c5b8380e1a,Add g:CommandTWindowFilter
wincent,2017-03-02 07:28:46,https://api.github.com/repos/wincent/command-t/git/commits/5a19460ea0eab0ca617a8dbf405f7a506eca4ff6,5a19460ea0eab0ca617a8dbf405f7a506eca4ff6,"Merge branch 'pull/270'

Closes: https://github.com/wincent/command-t/pull/270

* pull/270:
  Fix MacVim address"
douglasdrumz,2017-03-02 04:22:07,https://api.github.com/repos/wincent/command-t/git/commits/e4afcbb5176e02d9a81427aa43a3d22311a454fb,e4afcbb5176e02d9a81427aa43a3d22311a454fb,"Fix MacVim address

Björn no longer maintains MacVim. The repository moved to GitHub.com/macvim-dev/macvim, and now there's a page pointing to releases."
wincent,2017-01-08 03:35:38,https://api.github.com/repos/wincent/command-t/git/commits/ce9daf8d792c945d32d0bf8878149eaa8aee2b81,ce9daf8d792c945d32d0bf8878149eaa8aee2b81,"Revert Gem::Ext::BuildError change

I tested this in `irb`, but when I ran Command-T, it dies with:

  NameError: uninitialized constant Gem::Ext

So will have to try again."
wincent,2017-01-08 03:35:38,https://api.github.com/repos/wincent/command-t/git/commits/11f59c90d70c63c05af2bf9ab43c01a2ef3f4a31,11f59c90d70c63c05af2bf9ab43c01a2ef3f4a31,"Revert Gem::Ext::BuildError change

I tested this in `irb`, but when I ran Command-T, it dies with:

  NameError: uninitialized constant Gem::Ext

So will have to try again."
wincent,2017-01-08 03:29:00,https://api.github.com/repos/wincent/command-t/git/commits/d7b4e4c72008d145eeb1051d02ca8d44a16ba2dd,d7b4e4c72008d145eeb1051d02ca8d44a16ba2dd,"doc: regenerate AUTHORS section

Which I must have mismerged in one of my recent merges."
wincent,2017-01-08 03:10:53,https://api.github.com/repos/wincent/command-t/git/commits/edab00d03419f93b05acbb7747bbe6d2398e2d43,edab00d03419f93b05acbb7747bbe6d2398e2d43,"Merge branch 'master' into next

* master:
  doc: update AUTHORS section
  Put `rescue` constants in alphabetical order
  Fix command-t on Debian Jessie when using RVM with ruby 2.2.1
  doc: fix a spelling error in the HISTORY section
  doc: Update section on watchman wildignore filtering
  doc: Fix instructions for overriding default mappings
  Fix bad memoization of help finder
  Add logo to README"
wincent,2017-01-08 03:03:50,https://api.github.com/repos/wincent/command-t/git/commits/7f9c8061819ff30540ea264a2774d79527ba687e,7f9c8061819ff30540ea264a2774d79527ba687e,"Merge branch 'pull/262'

Closes: https://github.com/wincent/command-t/pull/262

* pull/262:
  doc: update AUTHORS section
  Put `rescue` constants in alphabetical order
  Fix command-t on Debian Jessie when using RVM with ruby 2.2.1"
wincent,2017-01-08 03:03:37,https://api.github.com/repos/wincent/command-t/git/commits/f272c717c6e6b390efc0882c0fa3d8ea57116c75,f272c717c6e6b390efc0882c0fa3d8ea57116c75,doc: update AUTHORS section
wincent,2017-01-08 02:55:16,https://api.github.com/repos/wincent/command-t/git/commits/e7100031be7e21a89044b88062b5a1979a5e557e,e7100031be7e21a89044b88062b5a1979a5e557e,Put `rescue` constants in alphabetical order
ssgelm,2017-01-02 22:55:08,https://api.github.com/repos/wincent/command-t/git/commits/52179dc4311a47fcf510aa5f4d66f6179cf952a2,52179dc4311a47fcf510aa5f4d66f6179cf952a2,Fix command-t on Debian Jessie when using RVM with ruby 2.2.1
wincent,2016-12-15 03:36:07,https://api.github.com/repos/wincent/command-t/git/commits/34d62473cc7f734737de235998c0c82d2ed5583b,34d62473cc7f734737de235998c0c82d2ed5583b,"doc: don't include self in ""other contributors"" list"
wincent,2016-12-13 14:48:17,https://api.github.com/repos/wincent/command-t/git/commits/a448c16aa86b1307732e1087abe5bde264f6b88e,a448c16aa86b1307732e1087abe5bde264f6b88e,"Invalidate HelpScanner cache when runtimepath changes

As mentioned in the previous commit, this makes sure we can find help
made accessible with `:packadd`."
wincent,2016-12-13 14:41:58,https://api.github.com/repos/wincent/command-t/git/commits/bfb5db42d122c88d25e7866bec251fb323f85c8c,bfb5db42d122c88d25e7866bec251fb323f85c8c,"Always re-complete help paths in HelpScanner

This is a temporary mitigation for an issue I've been seeing with
deferred package additions. If you load the scanner early on, the
results are cached forever, requiring a manual invalidation.

I will replace this with a smarter strategy in the next commit, but for
now wanted to show my work. It turns out that this isn't actually too
bad (slow), but I can make it better."
wincent,2016-11-30 06:17:24,https://api.github.com/repos/wincent/command-t/git/commits/5c99c0eaac28f0e4231d2b3241dba796ca097f03,5c99c0eaac28f0e4231d2b3241dba796ca097f03,"Add :CommandTOpen, baking in ""GotoOrOpen"" functionality by default

The next release will be 5.0, so may as well make a ""breaking"" change
and bake in the ""GotoOrOpen"" functionality that previously only existed
in my dot-files and, indirectly, in the docs."
wincent,2016-11-29 01:16:40,https://api.github.com/repos/wincent/command-t/git/commits/56a065d2a8139252c27ff1228c06407a8e0c3ca0,56a065d2a8139252c27ff1228c06407a8e0c3ca0,doc: fix a typo
wincent,2016-10-27 17:00:41,https://api.github.com/repos/wincent/command-t/git/commits/d2467c84af8a1f1a2d0366127550d0a241dd2548,d2467c84af8a1f1a2d0366127550d0a241dd2548,doc: fix a spelling error in the HISTORY section
wincent,2016-10-27 17:00:30,https://api.github.com/repos/wincent/command-t/git/commits/c5502bb788c4c79bf8c709fb57d041650c66a9a1,c5502bb788c4c79bf8c709fb57d041650c66a9a1,"doc: Update section on watchman wildignore filtering

Slight tweak to reflect reality. None of the scanners use
Vim to do the filtering anymore; they all use regexen."
wincent,2016-10-13 17:31:02,https://api.github.com/repos/wincent/command-t/git/commits/e5e74db598d609ca1623dfa95c4a4eed850abddc,e5e74db598d609ca1623dfa95c4a4eed850abddc,"doc: Fix instructions for overriding default mappings

Closes: https://github.com/wincent/command-t/issues/241"
wincent,2016-10-20 16:44:32,https://api.github.com/repos/wincent/command-t/git/commits/45c853cb34817ff14d1866551bf30ad35cbc4083,45c853cb34817ff14d1866551bf30ad35cbc4083,"Only print mismatching version numbers if they actually mismatch

Always show the Vim Ruby version. Only show the version expected by
Command-T if it differs.

Should avoid confusion of the type evidenced in:

https://github.com/wincent/command-t/issues/247"
wincent,2016-10-13 17:31:57,https://api.github.com/repos/wincent/command-t/git/commits/83c6b99c948ffc15bb184b66da1a78eecf84df6a,83c6b99c948ffc15bb184b66da1a78eecf84df6a,doc: fix typo in HISTORY section
wincent,2016-10-13 17:31:02,https://api.github.com/repos/wincent/command-t/git/commits/425333e30a1b2bb42a8d8b368f7f597f777a12af,425333e30a1b2bb42a8d8b368f7f597f777a12af,"doc: Fix instructions for overriding default mappings

Closes: https://github.com/wincent/command-t/issues/241"
wincent,2016-10-12 01:03:47,https://api.github.com/repos/wincent/command-t/git/commits/44fcb0bc0597e435dce050c1cc18e5e0e3dc0f1f,44fcb0bc0597e435dce050c1cc18e5e0e3dc0f1f,"Add empty .watchmanconfig

Allows a Watchman instance configured with `enforce_root_files` to watch
this directory even if `root_files` does not contain any of the files in
the directory. (Necessary to get around undesired corporate
`/etc/watchman.json` config.)"
wincent,2016-10-06 04:26:34,https://api.github.com/repos/wincent/command-t/git/commits/73867e7d36127bafb1ab09730ab65b1f818fccba,73867e7d36127bafb1ab09730ab65b1f818fccba,"Revert ""Remove -c from git-ls-files invocation""

This reverts commit 9a5bdc92e2c09c2f5b7f12ebf3f6dbd58aa1fdb5.

Turns out that this is needed after all, otherwise the presence of
`--others` causes *only* untracked files to be shown. To show the union
of tracked and untracked you need `-c` as well."
wincent,2016-10-05 23:49:11,https://api.github.com/repos/wincent/command-t/git/commits/a3af87d341d63568a88780d40476afc21112cdff,a3af87d341d63568a88780d40476afc21112cdff,doc: update instructions for updating AUTHORS section
wincent,2016-10-05 23:48:21,https://api.github.com/repos/wincent/command-t/git/commits/62ee35039d8631c5af56d3196fb398410b64100a,62ee35039d8631c5af56d3196fb398410b64100a,"Merge branch 'pull/235'

Closes: https://github.com/wincent/command-t/pull/235

* pull/235:
  doc: add g:CommandTGitIncludeUntracked to HISTORY
  doc: Add Steven Stallion to the list of AUTHORS
  Remove -c from git-ls-files invocation
  Add untracked files to `git ls-files` output"
wincent,2016-10-05 23:41:11,https://api.github.com/repos/wincent/command-t/git/commits/2a6704c122ad3d899aa1c3ec7026c5ced91324ea,2a6704c122ad3d899aa1c3ec7026c5ced91324ea,doc: add g:CommandTGitIncludeUntracked to HISTORY
wincent,2016-10-05 23:39:29,https://api.github.com/repos/wincent/command-t/git/commits/8df5e301f7f71749ddadec495247f8e5a45bcace,8df5e301f7f71749ddadec495247f8e5a45bcace,doc: Add Steven Stallion to the list of AUTHORS
wincent,2016-10-05 23:32:32,https://api.github.com/repos/wincent/command-t/git/commits/9a5bdc92e2c09c2f5b7f12ebf3f6dbd58aa1fdb5,9a5bdc92e2c09c2f5b7f12ebf3f6dbd58aa1fdb5,"Remove -c from git-ls-files invocation

It is the default, so need not be specified explicitly."
sstallion,2016-08-02 03:13:08,https://api.github.com/repos/wincent/command-t/git/commits/096a8202d822e06936e86defa569537c86da1247,096a8202d822e06936e86defa569537c86da1247,Add untracked files to `git ls-files` output
wincent,2016-06-01 01:44:44,https://api.github.com/repos/wincent/command-t/git/commits/f1517446ab7164e51c15fcf8426364e9eea79407,f1517446ab7164e51c15fcf8426364e9eea79407,Add logo to README
wincent,2016-08-09 17:12:10,https://api.github.com/repos/wincent/command-t/git/commits/fca7e89e6afbf6df82ccf66b6bfaecc6f4720617,fca7e89e6afbf6df82ccf66b6bfaecc6f4720617,doc: Update AUTHORS and HISTORY
wincent,2016-08-09 17:07:41,https://api.github.com/repos/wincent/command-t/git/commits/a22820fa8fc9022cb76b0c7333873777bd5e9e74,a22820fa8fc9022cb76b0c7333873777bd5e9e74,"Merge branch 'pull/236'

Closes: https://github.com/wincent/command-t/pull/236

* pull/236:
  updated docs
  Remove buffer and update buffer list
  basic remove"
mtimkovich,2016-08-08 22:17:52,https://api.github.com/repos/wincent/command-t/git/commits/e61a4ff4917fcf9b5a9f88ed355ba62e05d870b4,e61a4ff4917fcf9b5a9f88ed355ba62e05d870b4,updated docs
mtimkovich,2016-08-08 22:15:06,https://api.github.com/repos/wincent/command-t/git/commits/ed9a55380a3b2d47f2495accd9a30c55066aef8f,ed9a55380a3b2d47f2495accd9a30c55066aef8f,Remove buffer and update buffer list
mtimkovich,2016-08-08 18:24:35,https://api.github.com/repos/wincent/command-t/git/commits/a181fd82cee882a7c9fa9f5f8b86a255799a9d8a,a181fd82cee882a7c9fa9f5f8b86a255799a9d8a,basic remove
wincent,2016-06-25 06:06:36,https://api.github.com/repos/wincent/command-t/git/commits/2ee49884770a58909455e219a4ed62d54fb3b9f1,2ee49884770a58909455e219a4ed62d54fb3b9f1,doc: Add Stefan Schmidt to AUTHORS
wincent,2016-06-25 06:02:29,https://api.github.com/repos/wincent/command-t/git/commits/8c5d9f74ae75a5cfeab12d867104d9b6c96f92e4,8c5d9f74ae75a5cfeab12d867104d9b6c96f92e4,"Merge branch 'pull/231'

Originally submitted at: https://github.com/wincent/command-t/pull/231

* pull/231:
  update vim-plug install instructions"
schlubbi,2016-06-25 05:32:43,https://api.github.com/repos/wincent/command-t/git/commits/f49dcf6be51437fadcf90f0e8efb4c4b6a821572,f49dcf6be51437fadcf90f0e8efb4c4b6a821572,"update vim-plug install instructions

It's supposed to by `Plug` instead of `Plugin`. See [vim-plug#README](https://github.com/junegunn/vim-plug#example)"
wincent,2016-06-14 14:24:15,https://api.github.com/repos/wincent/command-t/git/commits/354c429dad34f7d163663943c948f819588b53d3,354c429dad34f7d163663943c948f819588b53d3,"Fix bad memoization of help finder

Closes: https://github.com/wincent/command-t/issues/226"
wincent,2016-06-14 14:24:15,https://api.github.com/repos/wincent/command-t/git/commits/c99e62246e3b4c11fd1a1a69e01f5c9f8bf94799,c99e62246e3b4c11fd1a1a69e01f5c9f8bf94799,"Fix bad memoization of help finder

Closes: https://github.com/wincent/command-t/issues/226"
wincent,2016-06-12 22:14:53,https://api.github.com/repos/wincent/command-t/git/commits/cbf1279b18708a71555c7abb956dd6a01c5c36cf,cbf1279b18708a71555c7abb956dd6a01c5c36cf,doc: kill off an unnecessary blank line
wincent,2016-06-01 01:44:44,https://api.github.com/repos/wincent/command-t/git/commits/7b1080664baaf5709abfcb2029bb70ba7aaee32d,7b1080664baaf5709abfcb2029bb70ba7aaee32d,Add logo to README
wincent,2016-05-25 17:25:26,https://api.github.com/repos/wincent/command-t/git/commits/ff44d627f0542faabe25a3918334f9dd5bc32590,ff44d627f0542faabe25a3918334f9dd5bc32590,Fix case in a comment
wincent,2016-05-25 17:24:53,https://api.github.com/repos/wincent/command-t/git/commits/7796c83e687d1f73abd9ed2336109cec8d5bb90f,7796c83e687d1f73abd9ed2336109cec8d5bb90f,"Remove unnecessary escape_for_single_quotes call

Not needed now that we are not going through Vim anymore."
wincent,2016-05-25 17:05:14,https://api.github.com/repos/wincent/command-t/git/commits/e1248b811653eb5db4b1a9aa5399cb9eb80cabe0,e1248b811653eb5db4b1a9aa5399cb9eb80cabe0,"Uncomment commented-out section

No need to comment here in order to prevent the code from being executed, as the
`:finish` takes care of that for us."
wincent,2016-05-25 16:49:17,https://api.github.com/repos/wincent/command-t/git/commits/af8717b35474d39522b7d01c4fbd6aaee1c3998a,af8717b35474d39522b7d01c4fbd6aaee1c3998a,"Make ""next"" branch slightly less aggressive

Before I push this, want to make it a little safer, as I
do not know who out there may be using the ""next"" branch.

So, protect the invocation of the isengard engine by a
guard, and default to mirkwood."
wincent,2016-05-25 14:02:59,https://api.github.com/repos/wincent/command-t/git/commits/4b94a60a32cf65550ebb410da2e50d225e4f4e2f,4b94a60a32cf65550ebb410da2e50d225e4f4e2f,"Always use regexp-based wildignore handling

In 7489118 I added this for the watchman scanner. Here I make all scanners
behave the same way. Rationale: I want to remove as many `VIM` calls from the
finder/scanner classes as possible, so that I can use them as-is in the
`commandtd` process. Bonus: simplicity of maintaining only one code path,
probably faster. Risk: possible behavior change, depending on config. Fucks
given: NaN (it's complicated)."
wincent,2016-05-25 14:02:28,https://api.github.com/repos/wincent/command-t/git/commits/492fbdeb86e822eb49aa4544b4b0a263ba451a71,492fbdeb86e822eb49aa4544b4b0a263ba451a71,"Adjust spec helper to account for new directory structure

Broken since 8ec8f73."
wincent,2016-05-25 14:01:21,https://api.github.com/repos/wincent/command-t/git/commits/bf2db0c22fdac6e2887a9d597cac015f935183fd,bf2db0c22fdac6e2887a9d597cac015f935183fd,Update specs to account for 64dbf7904167
wincent,2016-05-24 13:46:49,https://api.github.com/repos/wincent/command-t/git/commits/8e147120cce7580a8688e2a8089e765f6488f9e6,8e147120cce7580a8688e2a8089e765f6488f9e6,Make example a tiny bit more real
wincent,2016-05-24 05:10:06,https://api.github.com/repos/wincent/command-t/git/commits/21d581d194212a536a7f6a223b17ed66d0a8d87f,21d581d194212a536a7f6a223b17ed66d0a8d87f,Get some slightly realer IPC happening
wincent,2016-05-24 04:24:00,https://api.github.com/repos/wincent/command-t/git/commits/d852d624e70369b147acd03959f970ff90be8783,d852d624e70369b147acd03959f970ff90be8783,Don't log by default
wincent,2016-05-24 02:02:37,https://api.github.com/repos/wincent/command-t/git/commits/8ec8f73b4cb071e63d5a0a6ef58258c9e03fbe93,8ec8f73b4cb071e63d5a0a6ef58258c9e03fbe93,"Move Command-T files deeper

We want to have a more conventional structure for the gem, as I will ship the
daemon process with it. That means we need a `bin` directory, so dividing things
more conventionally among `lib`, `bin` and `ext`.

This is completely untested and very likely broken, but I'll test and fix as I
go along."
wincent,2016-05-24 01:38:23,https://api.github.com/repos/wincent/command-t/git/commits/89b38bd297cc1d96b72924a6dc1fbac693978301,89b38bd297cc1d96b72924a6dc1fbac693978301,Frown disappointedly at malformed JSON rather than crashing
wincent,2016-05-23 15:23:32,https://api.github.com/repos/wincent/command-t/git/commits/0f32bcfa3d88bf9a2f483b4d18d8694ad7d747e1,0f32bcfa3d88bf9a2f483b4d18d8694ad7d747e1,"Add configuration options for client and server logs

You probably want to override this in your `$MYVIMRC`, otherwise, at least on
OS X, the logfile will wind up getting created somewhere you'll never find it,
like `/var/folders/wf/h41r9yss4_x42p080xqn5xtsjt0h71/T/`.

During development, I'm going to stick them in `/tmp/{c,s}log`, although I
really should stick them somewhere more secure, like `~/tmp/`."
wincent,2016-05-23 15:16:57,https://api.github.com/repos/wincent/command-t/git/commits/748d69fdd200d97351e49a06ed2bcf5228882bce,748d69fdd200d97351e49a06ed2bcf5228882bce,Make logfile configurable
wincent,2016-05-23 14:33:06,https://api.github.com/repos/wincent/command-t/git/commits/bdf60101f62d16ea60b9fc12fd4b81bf864a7af5,bdf60101f62d16ea60b9fc12fd4b81bf864a7af5,"Make sure we never accidentally print to the channel

A `raise` would cause the channel to freak out, causing Vim to spin endlessly,
so make the only way we communicate with the outside world is via the log."
wincent,2016-05-23 14:12:46,https://api.github.com/repos/wincent/command-t/git/commits/a680ba92c9cef5fb1e410aa6167cbc7c6f463157,a680ba92c9cef5fb1e410aa6167cbc7c6f463157,"Show that it is possible to require the C extension

The failure mode here is not great. If I `raise` an error, Vim effectively spins
forever, printing endlessly to the `clog`:

```
0.000765 on 0: Blocking NL read, timeout: 2000 msec
0.000768 on 0: Waiting for up to 2000 msec
0.044705 ERR on 0: channel_read_block(): Cannot read from channel, will close it soon
0.044716 on 0: Waiting for up to 2000 msec
0.044722 ERR on 0: channel_read_block(): Cannot read from channel, will close it soon
0.044725 on 0: Waiting for up to 2000 msec
```

Not sure why that is, nor where the retry behavior is coming from, but I have to
be very careful of printing anything to STDOUT/STDERR I think other than the
messages I intend to send to Vim explicitly."
wincent,2016-05-23 07:53:11,https://api.github.com/repos/wincent/command-t/git/commits/cbeaffde22dd02f94601017f8181d38522f92157,cbeaffde22dd02f94601017f8181d38522f92157,"Drop unnecessary explicit ""nl"" mode

It's the default."
wincent,2016-05-23 07:51:26,https://api.github.com/repos/wincent/command-t/git/commits/9df35d6ab48a2cc48ecd6166cc913af9c4551540,9df35d6ab48a2cc48ecd6166cc913af9c4551540,"Make simple ""echo"" server

Not even really an ""echo"" server, as we just send some hard-coded responses back
and forth to show that it works. Run it and see the client (/tmp/clog) and
server (/tmp/slog) logs."
wincent,2016-05-22 06:31:44,https://api.github.com/repos/wincent/command-t/git/commits/430150cca5b91036c51fcb68e3b4160007edb159,430150cca5b91036c51fcb68e3b4160007edb159,"Spawn commandtd daemon process at launch

Doesn't do anything useful yet, but I just want to show bidirectional
communication in action. This is the first step."
wincent,2016-05-22 05:43:23,https://api.github.com/repos/wincent/command-t/git/commits/161347c6f0677510d73810fd130d565215a99660,161347c6f0677510d73810fd130d565215a99660,"Fork Command-T engine in preparation for v5.0

Going to make Command-T easier to install by running the Ruby bit out of process
and communicating with it by using Vim's new async/job features.

In a normal software project I could make a new branch for this, but Vim users
are used to running from master, and that means that even if I do everything off
on the side, I will eventually have to merge it all back in, so no matter what I
do, breakage will be unacceptable.

So, this means that I have to keep the old code around alongside the new, pretty
much forever. Given that this might happen again in the future I can't go with
any naming scheme that implies ""next/current"", ""old/new"", ""legacy/modern"", or
even ""sync/async"". Instead, I'm going with codenames with the theme ""places in
Middle Earth"".

Game-plan then:

1. This phase. Move existing implementation into an engine called ""mirkwood"".
   Start new ""isengard"" engine from scratch. Default to ""isengard"" on
   sufficiently new Vim.
2. There is no step two! (Other than finishing ""isengard"".)"
wincent,2016-05-22 05:15:31,https://api.github.com/repos/wincent/command-t/git/commits/64dbf79041674b84b98870fc09c6fff57ef25ef7,64dbf79041674b84b98870fc09c6fff57ef25ef7,"Use <nowait>, when available, to set up buffer-local mappings"
wincent,2016-05-22 05:01:58,https://api.github.com/repos/wincent/command-t/git/commits/39b75707640493795afb4fb90b2d74cade84cee8,39b75707640493795afb4fb90b2d74cade84cee8,benchmarks: drop unused `with_index` from `map` call
wincent,2016-05-17 05:31:31,https://api.github.com/repos/wincent/command-t/git/commits/99d06fa02753be74cc44f487c255d9326eca8c9a,99d06fa02753be74cc44f487c255d9326eca8c9a,doc: Update docs for 4.0 release
wincent,2016-05-17 02:22:07,https://api.github.com/repos/wincent/command-t/git/commits/48ff32b43406749a434fcb051158463cbe3079a1,48ff32b43406749a434fcb051158463cbe3079a1,"Merge branch 'next'

Going to cut a release soon, so time to update master.

* next:
  Fix typo
  Show a warning when hitting g:CommandTMaxFiles limit
  Bump default g:CommandTMaxFiles up to 100,000 from 30,000
  vim: use base wildignore in Watchman scanner if necessary
  Replace g:CommandTFilterRegex with inference
  Make it possible to opt out of wildignore-based filtering
  vim: try to fix up wildignore documentation
  Add g:CommandTFilterRegex
  Hack fix for encoding issue
  Fix inability to type | and ^ at prompt"
wincent,2016-05-17 02:19:46,https://api.github.com/repos/wincent/command-t/git/commits/67d6e1964fea6130977779fa9e31035759e71be4,67d6e1964fea6130977779fa9e31035759e71be4,Fix typo
wincent,2016-05-17 02:17:17,https://api.github.com/repos/wincent/command-t/git/commits/068a376bb9baa23555af110c40ff0b1cfb885a6b,068a376bb9baa23555af110c40ff0b1cfb885a6b,"Show a warning when hitting g:CommandTMaxFiles limit

Looks something like this:

```
Warning: maximum file limit reached

Increase it by setting a higher value in $MYVIMRC; eg:
  let g:CommandTMaxFiles=20
Or suppress this warning by setting:
  let g:CommantTSuppressMaxFilesWarning=1
For best performance, consider using a fast scanner; see:
  :help g:CommandTFileScanner

Press ENTER to continue.
```

Closes: https://github.com/wincent/command-t/issues/218"
wincent,2016-05-17 01:45:00,https://api.github.com/repos/wincent/command-t/git/commits/6d829fe2ef20d6d2c835d81bcca2c42bad8291be,6d829fe2ef20d6d2c835d81bcca2c42bad8291be,"Bump default g:CommandTMaxFiles up to 100,000 from 30,000

I am about to make hitting the file limit a whole lot more intrusive, so let's
back the limit off a little bit. It should be ok to do this because:

- Performance-sensitive users are probably already using a fast scanner, like
  the ""watchman"" scanner.
- Computers are faster now than when I first implemented `g:CommandTMaxFiles`
  (March 2010), and when I last bumped the limit (April 2013).
- For the slower scanners, we now have a progress indicator, which means that
  people get some visual feedback when something takes a long time.

See: https://github.com/wincent/command-t/issues/218"
wincent,2016-05-15 22:20:27,https://api.github.com/repos/wincent/command-t/git/commits/7489118c0e6bf401f0705e70be1710562aed1c97,7489118c0e6bf401f0705e70be1710562aed1c97,vim: use base wildignore in Watchman scanner if necessary
wincent,2016-05-15 22:10:40,https://api.github.com/repos/wincent/command-t/git/commits/a41e53b8bd4ee26fbc1d5570529b5280b2d264ce,a41e53b8bd4ee26fbc1d5570529b5280b2d264ce,"Merge branch 'watchman-filtering' into next

* watchman-filtering:
  Replace g:CommandTFilterRegex with inference
  Make it possible to opt out of wildignore-based filtering
  vim: try to fix up wildignore documentation
  Add g:CommandTFilterRegex"
wincent,2016-05-15 21:38:16,https://api.github.com/repos/wincent/command-t/git/commits/589f4501d376802606cd69adf0ef2504a882841e,589f4501d376802606cd69adf0ef2504a882841e,"Replace g:CommandTFilterRegex with inference

Crude and simple; definitely won't handle all cases, but let's start with
something basic and only add complexity once it's clear that it's needed.

Closes: https://github.com/wincent/command-t/issues/215"
wincent,2016-05-15 06:23:18,https://api.github.com/repos/wincent/command-t/git/commits/0fd98fdcd8b93e47ffe636d5ec6223e2f2d8d999,0fd98fdcd8b93e47ffe636d5ec6223e2f2d8d999,Make it possible to opt out of wildignore-based filtering
wincent,2016-05-14 06:04:21,https://api.github.com/repos/wincent/command-t/git/commits/e62fe949c3bc0d3e21b075f186f78a6ef4527f98,e62fe949c3bc0d3e21b075f186f78a6ef4527f98,"vim: try to fix up wildignore documentation

Synthesizing the information from:

  https://github.com/wincent/wincent/commit/b7c2f75f196b5d2109d462

We basically have:

  Wildignore      file      file        dir       dir         dir + file
  Pattern         ""foo""     ""sub/foo""   ""foo""     ""sub/foo""   ""sub/foo/other""
  ---------------------------------------------------------------------------
  foo             match     match       miss      miss        miss
  foo/            miss      miss        miss      miss        miss
  foo/*           miss      miss        miss      miss        miss
  */foo           match     match       match     match       match
  */foo/          miss      miss        match     miss        miss
  */foo/*         miss      miss        match     match       match

Note: these refer to which items get filtered from the Command-T listing. The
behavior for tab-completion is pretty similar, but not identical.

In practice, you want:

- ""foo"" to ignore files named ""foo"".
- ""*.foo"" to ignore files with an extension.
"" ""*/foo"" to ignore directories and all files in their subtrees, recursively.

Note:

- ""*/foo"" matches files and directories named ""foo"" plus their entire subtrees."
wincent,2016-05-12 01:47:05,https://api.github.com/repos/wincent/command-t/git/commits/35a9e5899e1da2ed7104243677d472d9fef12553,35a9e5899e1da2ed7104243677d472d9fef12553,"Add g:CommandTFilterRegex

Possible fix for: https://github.com/wincent/command-t/issues/215"
wincent,2016-03-29 00:33:20,https://api.github.com/repos/wincent/command-t/git/commits/44c4c1c0ecf50f395de7b1794d8fad51e5b63e70,44c4c1c0ecf50f395de7b1794d8fad51e5b63e70,"Hack fix for encoding issue

I've found a directory that contains some files in it that cause the
match window to blow up due to non-ASCII characters in their paths.

They are showing up as ""ASCII-8BIT"" (ie. binary) but only when using the
""watchman"" and ""ruby"" scanners. The ""git"" and ""find"" scanners are fine,
and notably the string encoding is ""UTF-8"" in that case.
`g:CommandTEncoding` doesn't help.

This is a temp fix to make it work, but I am pretty sure there are
better places to put this. I feel bad about mutating the `match` strings
like this. I could perhaps do it in the controller before passing to the
match window. Better still would be to do it when it comes out of the
scanner, although that could incur a speed hit for large hierarchies
(because it would occur on the full set of possible paths, not the
narrowed-down list).

Other ""fixes"" that I tested that worked:

- Dropping the `u` modifier on the regex.
- Switching back to `chars` instead of `scan(/./mu)` (ie. pre-14fb52d19
  state).

Stuff I tried that didn't work:

- Switching to `\p{Any}` instead of `.` (both with and without the `u`
modifier)."
wincent,2016-03-16 07:12:43,https://api.github.com/repos/wincent/command-t/git/commits/ff8a5074c49f6a8c7fe8b05ad14a3bfbfc16393e,ff8a5074c49f6a8c7fe8b05ad14a3bfbfc16393e,Fix inability to type | and ^ at prompt
wincent,2016-03-12 11:55:13,https://api.github.com/repos/wincent/command-t/git/commits/ad28ca0003eb5946e7cdee0f39d46dfb7843f7eb,ad28ca0003eb5946e7cdee0f39d46dfb7843f7eb,"Use `findfile` in `HelpScanner`

This enables us to get rid of some manual `#split`-ing and string
concatenation."
wincent,2016-03-12 11:50:08,https://api.github.com/repos/wincent/command-t/git/commits/704a7e14493420390ad289f1e18bb6e6491d755f,704a7e14493420390ad289f1e18bb6e6491d755f,Add a doc comment to ProgressReporter
wincent,2016-03-12 01:11:46,https://api.github.com/repos/wincent/command-t/git/commits/2d80b2e65cd690dd17c66fb52e5f9fb09700b1e7,2d80b2e65cd690dd17c66fb52e5f9fb09700b1e7,Remove functionality that was removed in version 2.0
wincent,2016-03-12 01:00:37,https://api.github.com/repos/wincent/command-t/git/commits/383523d9f345fa2e0642eb9d9f7f4e47ecd38bf0,383523d9f345fa2e0642eb9d9f7f4e47ecd38bf0,Update specs
wincent,2016-03-10 02:19:57,https://api.github.com/repos/wincent/command-t/git/commits/51a4b175496a435d2f7481427792703ccfd56400,51a4b175496a435d2f7481427792703ccfd56400,"Add (inactive) debug code

To enable: `ruby extconf.rb` (one-time only), then `DEBUG=1 make`
whenever you want a debug build."
wincent,2016-03-09 22:47:08,https://api.github.com/repos/wincent/command-t/git/commits/778e8eacf54906de639e3e1db562ee207927f1b9,778e8eacf54906de639e3e1db562ee207927f1b9,"Fix non-recursive match scoring

Using the test case and logging code from:

https://github.com/wincent/command-t/issues/209

I was able to spot that we had a bug in our match scoring in the
`!m->recurse` case. Witness these memoized results:

       a       p       p       a       p       p       i       n       d
a:  0.0684     -       -       -       -       -       -       -       -
p:     -    0.1368     -       -       -       -       -       -       -
p:     -       -    0.2051     -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
v:     -       -       -       -       -       -       -       -       -
i:     -       -       -       -       -       -       -       -       -
e:     -       -       -       -       -       -       -       -       -
w:     -       -       -       -       -       -       -       -       -
s:     -       -       -       -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
a:     -       -       -    0.2667     -       -       -       -       -
p:     -       -       -       -    0.3350     -       -       -       -
i:     -       -       -       -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
d:     -       -       -       -       -       -       -       -       -
o:     -       -       -       -       -       -       -       -       -
c:     -       -       -       -       -       -       -       -       -
s:     -       -       -       -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
p:     -       -       -       -       -    0.3966     -       -       -
a:     -       -       -       -       -       -       -       -       -
g:     -       -       -       -       -       -       -       -       -
i:     -       -       -       -       -       -    0.4137     -       -
n:     -       -       -       -       -       -       -       -       -
a:     -       -       -       -       -       -       -       -       -
t:     -       -       -       -       -       -       -       -       -
i:     -       -       -       -       -       -    0.4265     -       -
o:     -       -       -       -       -       -       -       -       -
n:     -       -       -       -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
_:     -       -       -       -       -       -       -       -       -
i:     -       -       -       -       -       -    0.4812     -       -
n:     -       -       -       -       -       -       -    0.5496     -
d:     -       -       -       -       -       -       -       -    0.6179
e:     -       -       -       -       -       -       -       -       -
x:     -       -       -       -       -       -       -       -       -
.:     -       -       -       -       -       -       -       -       -
m:     -       -       -       -       -       -       -       -       -
d:     -       -       -       -       -       -       -       -       -
Final score: 0.617949

Note the repeated matches in the ""i"" column, because after a match we
were failing to break out of the inner `for` loop, meaning that we did
not advance the needle pointer, `j`. Also, note that because we add to
the match via `score += ...`, in these cases where we match the same
needle character multiple times, we unfairly bump the score for each
duplicate match as well, cumulatively.

Interestingly, it's possible that this might improve search result
quality, by boosting results that can match in multiple ways. Still, I'm
fixing it in this commit for sanity reasons, so that our greedy
algorithm behaves the way it says on the tin. It's not the default
search mode in Command-T, and it is only enabled for people who want the
extra speed (see below, tests run with `RECURSE=0`), so I think this is
the right choice:

  Summary of cpu time and (wall-clock time):
                      best    avg      sd     +/-      p     (best)    (avg)      (sd)     +/-     p
       pathological 0.84000 0.91150 0.10608 [-7.4%]  0.005 (0.82952) (0.91382) (0.10469) [-7.2%] 0.005
          command-t 1.25000 1.33800 0.15181 [-1.4%]        (1.25809) (1.34222) (0.15379) [-1.4%]  0.05
  chromium (subset) 4.09000 4.67450 0.21238 [-5.0%]  0.005 (0.80025) (0.90810) (0.13991) [+1.4%]
   chromium (whole) 5.59000 5.81300 0.18453 [-9.5%] 0.0005 (0.76136) (0.91844) (0.17272) [-3.1%]
         big (400k) 8.74000 9.16200 0.29683 [-6.3%] 0.0005 (1.23149) (1.38036) (0.10847) [-6.5%]  0.05

Corrected, our scoring matrix looks like this:

       a       p       p       a       p       p       i       n       d
a:  0.0684     -       -       -       -       -       -       -       -
p:     -    0.1368     -       -       -       -       -       -       -
p:     -       -    0.2051     -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
v:     -       -       -       -       -       -       -       -       -
i:     -       -       -       -       -       -       -       -       -
e:     -       -       -       -       -       -       -       -       -
w:     -       -       -       -       -       -       -       -       -
s:     -       -       -       -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
a:     -       -       -    0.2667     -       -       -       -       -
p:     -       -       -       -    0.3350     -       -       -       -
i:     -       -       -       -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
d:     -       -       -       -       -       -       -       -       -
o:     -       -       -       -       -       -       -       -       -
c:     -       -       -       -       -       -       -       -       -
s:     -       -       -       -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
p:     -       -       -       -       -    0.3966     -       -       -
a:     -       -       -       -       -       -       -       -       -
g:     -       -       -       -       -       -       -       -       -
i:     -       -       -       -       -       -    0.4137     -       -
n:     -       -       -       -       -       -       -    0.4821     -
a:     -       -       -       -       -       -       -       -       -
t:     -       -       -       -       -       -       -       -       -
i:     -       -       -       -       -       -       -       -       -
o:     -       -       -       -       -       -       -       -       -
n:     -       -       -       -       -       -       -       -       -
/:     -       -       -       -       -       -       -       -       -
_:     -       -       -       -       -       -       -       -       -
i:     -       -       -       -       -       -       -       -       -
n:     -       -       -       -       -       -       -       -       -
d:     -       -       -       -       -       -       -       -    0.4872
e:     -       -       -       -       -       -       -       -       -
x:     -       -       -       -       -       -       -       -       -
.:     -       -       -       -       -       -       -       -       -
m:     -       -       -       -       -       -       -       -       -
d:     -       -       -       -       -       -       -       -       -
Final score: 0.487179

Note the lower score, now that the artificial boost is removed.

This is a powerful testament to the usefulness of visual representations
of data structures facilitating analysis of an algorithm and detecting
anomalies in an implementation. Yay.

Next up, will try to fix some similar craziness revealed for the
recursive case."
wincent,2016-03-09 00:41:51,https://api.github.com/repos/wincent/command-t/git/commits/9740c9cd318d4e004f330358c76a27948dc5779e,9740c9cd318d4e004f330358c76a27948dc5779e,"De-dupe history entries

History entries may differ only by insignificant trailing or leading
whitespace (especially because we end up creating a history entry with
a trailing space every time we accept and use a selection from the
history finder) so strip it off and `#uniq`."
wincent,2016-03-09 00:28:02,https://api.github.com/repos/wincent/command-t/git/commits/cfdf67a850042eba245ffe84ec0547ec0208b7fb,cfdf67a850042eba245ffe84ec0547ec0208b7fb,"Don't set 'updatetime' and autocmd if g:CommandTInputDebounce is 0

Even though I can't repro #208, this is probably the right thing to do,
and I believe it should fix it.

Closes: https://github.com/wincent/command-t/issues/208"
wincent,2016-03-08 02:21:27,https://api.github.com/repos/wincent/command-t/git/commits/049899ae2425afd64ef75ddbcad2574348e25257,049899ae2425afd64ef75ddbcad2574348e25257,"Kill off trailer comments

I've done these for years now as a readability aid, but they are a
liability give my love of copy-pasta coding; they're just another thing
for me to forget to update. Additionally, my classes should be simple
enough that they aren't big enough to warrant this kind of ""navigational
aid""."
wincent,2016-03-05 17:24:38,https://api.github.com/repos/wincent/command-t/git/commits/e8ceb24c35041ac48be1e954757bbc100e844527,e8ceb24c35041ac48be1e954757bbc100e844527,"Extract ProgressReporter class

Alleviate one of the concerns of the `Scanner` class."
wincent,2016-03-05 16:45:06,https://api.github.com/repos/wincent/command-t/git/commits/09f7c22f6a0c1b4dd16deb1298100dd591982183,09f7c22f6a0c1b4dd16deb1298100dd591982183,"Switch to time-based progress reports

These are more consistent, so lead to a better UX.

I'm going to extract this out to another class though, as these instance
variables don't really have any place in the scanner."
wincent,2016-03-05 15:55:15,https://api.github.com/repos/wincent/command-t/git/commits/70e1a4f856fa70c4628f5bb71e97537376be8202,70e1a4f856fa70c4628f5bb71e97537376be8202,"Add progress animation fanciness

I don't plan on keeping this, but committing it anyway to show the idea.
Basically we don't want to thrash the UI when we're trying to scan, so
we slow down our updates as the result set gets bigger.

The UX isn't great though because it looks like Command-T is slowing
down, even though it isn't. Also, our silly spinner animation goes from
being too fast to being pretty slow.

I'm going to change this to be constant speed based on a time heuristic."
wincent,2016-03-05 10:49:13,https://api.github.com/repos/wincent/command-t/git/commits/2ab042ecea029588e3a9d923822685c8f1014755,2ab042ecea029588e3a9d923822685c8f1014755,"Let ""find"" scanner really report progress

`#readlines` reads the whole output into memory and then returns an
array, meaning we don't print any progress and then all of a sudden at
the end we print it all.

`#each_line` on the other hand calls our block as we go, which is what
we want.

I'm coding without internet access right now, though, so I am not sure
whether `IO#each_line` is available in all the versions of Ruby that
Command-T currently supports. I will check it out later and may have to
add a fallback."
wincent,2016-03-05 10:37:33,https://api.github.com/repos/wincent/command-t/git/commits/a2e30203785ec43432adaebe1261c79d587dd27f,a2e30203785ec43432adaebe1261c79d587dd27f,"Add primitive first cut at progress reports

This is a bit ugly because scanners don't know about the prompt, only
the controller has a reference to it. We could have passed a reference
to through the matcher to the scanner from the controller, but that
would have been ugly. Ditto if we'd threaded through a callback. So,
instead we opt to just update from the scanner and teach the controller
to mediate by updating the prompt after the scanner has done its thing.

This is ugly, but it's less ugly than the alternatives.

I might want to back off the rate here later on, especially for large
sets.

Doesn't work so well when the find scanner is chewing through a big
result set. I am suspicious of some major buffering going on in
`#readlines` there."
wincent,2016-03-05 03:17:27,https://api.github.com/repos/wincent/command-t/git/commits/2a91e2ba9f5b096732ed762907ccaa5138f31941,2a91e2ba9f5b096732ed762907ccaa5138f31941,"Apply a minor consistency fix

Make sure `calculate_match` behaves the same as `recursive_match` in the
presence of `never_show_dot_files`."
wincent,2016-03-05 02:52:27,https://api.github.com/repos/wincent/command-t/git/commits/7dffa6af78d2fb7addc59ef7833d8c4641528240,7dffa6af78d2fb7addc59ef7833d8c4641528240,"Print real time delta in benchmarks

We were repeating the total (CPU) time instead by accident. #copypasta

Should be performance-neutral, but my stats claim otherwise:

Summary of cpu time and (wall-clock time):
                    best      avg      sd     +/-     p     (best)    (avg)      (sd)     +/-   p
     pathological  1.04000  1.12000 0.10668 [+0.6%]       (1.04627) (1.11970) (0.10649) [+0.4%]
        command-t  1.29000  1.39100 0.11304 [-1.0%]       (1.30171) (1.39203) (0.11160) [-1.1%]
chromium (subset)  5.31000  5.67300 0.28203 [+0.4%]       (0.94023) (0.99075) (0.04510) [-1.8%]
 chromium (whole)  7.13000  7.37300 0.09629 [+1.6%] 0.005 (1.00199) (1.07074) (0.04674) [-1.8%]
       big (400k) 10.99000 11.19700 0.12341 [+1.0%] 0.025 (1.51937) (1.64361) (0.06523) [-0.9%]

I'm going to chalk that one up to random fluctuation."
wincent,2016-03-05 02:44:29,https://api.github.com/repos/wincent/command-t/git/commits/df9253fefa90863cb4f60c8d9db4a3a9f4e79007,df9253fefa90863cb4f60c8d9db4a3a9f4e79007,"Handle empty haystacks

Unlikely to (should never) occur in practice, but this is a small
simplification to the code."
wincent,2016-03-04 16:26:34,https://api.github.com/repos/wincent/command-t/git/commits/d68c8b1a64626108b5394ca7e074925b58c93956,d68c8b1a64626108b5394ca7e074925b58c93956,Improve a comment
wincent,2016-03-01 15:28:00,https://api.github.com/repos/wincent/command-t/git/commits/b421fb856443f20f767bcc6b581270b6c01c8a86,b421fb856443f20f767bcc6b581270b6c01c8a86,"Clean up bitmask code a bit

Instead of storing bitmasks in a separate array, pack them in the
`match_t` struct. Shouldn't have much effect on perf. Maybe, you could
make an argument for avoiding the allocation being a tiny advantage
(almost certainly not measurable), but this might have better cache
locality.

I have no idea if my fancy Wicoxon Signed Rank test code is working or
not, but it claims a likely significant reduction for the smaller data
sets. I guess that makes sense, because there the allocation could
actually form a measurable portion of the time.

Summary of cpu time and (wall-clock time):
                    best      avg      sd     +/-      p     (best)    (avg)      (sd)     +/-      p
     pathological  1.04000  1.13400 0.04188 [-3.5%]  0.005 (1.04919) (1.13646) (0.04132) [-3.5%]  0.005
        command-t  1.34000  1.39500 0.04642 [-4.7%] 0.0005 (1.33263) (1.39542) (0.04737) [-4.7%] 0.0005
chromium (subset)  5.02000  5.27400 0.11386 [-0.3%]        (1.13320) (1.20853) (0.03869) [-0.3%]
 chromium (whole)  6.80000  7.03350 0.08326 [-0.2%]        (1.20307) (1.28563) (0.04056) [-0.2%]
       big (400k) 10.64000 10.84500 0.18416 [-0.4%]        (1.82905) (1.94810) (0.08647) [-0.4%]"
wincent,2016-03-03 16:06:10,https://api.github.com/repos/wincent/command-t/git/commits/6f0668e15af8f1fd4d78259f5da48a8bf894d062,6f0668e15af8f1fd4d78259f5da48a8bf894d062,"Update README

To refer to some newly added capabilities (and
others not so new), and to elevate speed as the
primary design goal."
wincent,2016-03-03 15:28:09,https://api.github.com/repos/wincent/command-t/git/commits/5cdd24e3042735f24dec18630ea073288a11fbc7,5cdd24e3042735f24dec18630ea073288a11fbc7,"Actually add <Plug>(CommandTSearch)

Again, stop overpromising in HISTORY and underdelivering."
wincent,2016-03-03 15:23:59,https://api.github.com/repos/wincent/command-t/git/commits/b39dc280295753551985467694a1974f7e0ff539,b39dc280295753551985467694a1974f7e0ff539,"Actually add <Plug>(CommandTHistory)

HISTORY says I added it, but I forgot."
wincent,2016-03-03 15:14:15,https://api.github.com/repos/wincent/command-t/git/commits/6656107d291a7120970599c91a2fc63d35e3426b,6656107d291a7120970599c91a2fc63d35e3426b,"Append a space after accepted history/command selections

Because appending an argument is often the default action that you're
going to want to do."
wincent,2016-03-03 09:24:07,https://api.github.com/repos/wincent/command-t/git/commits/d071d8b7073d6d70477a2a72848ffbb2e5b37d7d,d071d8b7073d6d70477a2a72848ffbb2e5b37d7d,"Teach :CommandTCommand to find built-in Ex commands too

Via a crude hack."
wincent,2016-03-03 08:30:34,https://api.github.com/repos/wincent/command-t/git/commits/1f4b33b7da26f186a04691c40f16b647d96db57a,1f4b33b7da26f186a04691c40f16b647d96db57a,"Add primitive :CommantTCommand finder and scanner

This is just a crude proof of concept, because Vim only provides a way
to get user-defined commands (`:commands`). To get built-in commands, I
am going to have to further inspect some item(s) in the 'runtimepath'
checking for valid ones."
wincent,2016-03-03 07:59:45,https://api.github.com/repos/wincent/command-t/git/commits/edeb800c839f403c2cf0956a7fff0cc326867424,edeb800c839f403c2cf0956a7fff0cc326867424,"Consolidate {Search,History}{Finder,Scanner}

""Search"" is just a specialization of ""History"", so fold these together
to share an implementation."
wincent,2016-03-03 07:44:03,https://api.github.com/repos/wincent/command-t/git/commits/49a059168a5ffa28f73237ef9d133b8b168cf405,49a059168a5ffa28f73237ef9d133b8b168cf405,"Add :CommandT{History,Search} and <Plug>(CommandT{History,Search})

Plenty of duplication here and some gnarly tip-toe-ing needs to be down
around escaping, but this basically works."
wincent,2016-03-03 05:50:16,https://api.github.com/repos/wincent/command-t/git/commits/228852fd630d20082bb65244eaca6c7304c66eeb,228852fd630d20082bb65244eaca6c7304c66eeb,"Make in-progress searches faster in LineFinder

Instead of recomputing the ""paths"" on each key press, keep them around
as long as the finder exists, and keep the finder around for the
duration of the search.

Note that I probably want to be a bit more clever and set up some
autocmds, such that I keep the finder around even longer (until I
switch buffers, or modify the current buffer)."
wincent,2016-03-03 02:49:24,https://api.github.com/repos/wincent/command-t/git/commits/546e51f95ef0f251471717955bf569ed320524a0,546e51f95ef0f251471717955bf569ed320524a0,Add :CommandTLine and <Plug>(CommandTLine)
wincent,2016-03-03 02:01:07,https://api.github.com/repos/wincent/command-t/git/commits/db7f5a900a16d7d7c29ea09bbc1424651abdd017,db7f5a900a16d7d7c29ea09bbc1424651abdd017,Add <Plug>(CommandTMRU) and <Plug>(CommandTTag)
wincent,2016-03-03 01:55:35,https://api.github.com/repos/wincent/command-t/git/commits/a0c7033e36796ca9aa1724680bd8cf2b713da2ab,a0c7033e36796ca9aa1724680bd8cf2b713da2ab,Add :CommandTHelp and <Plug>(CommandTHelp)
wincent,2016-03-02 17:38:15,https://api.github.com/repos/wincent/command-t/git/commits/fa8eaf0c9b231f47dbf3384445ba4d67990af94a,fa8eaf0c9b231f47dbf3384445ba4d67990af94a,Default g:CommandTInputDebounce to 0
wincent,2016-03-02 17:21:49,https://api.github.com/repos/wincent/command-t/git/commits/41f2ca2899504937c4b245b22f6ead039fddd5d6,41f2ca2899504937c4b245b22f6ead039fddd5d6,"Reorder columns to put avg and sd next to each other

Also, the spacing here makes it easier to spot significant results."
wincent,2016-03-02 17:21:22,https://api.github.com/repos/wincent/command-t/git/commits/a6e6165a4f87b0840a291b025283ca8e522faf06,a6e6165a4f87b0840a291b025283ca8e522faf06,Parenthesize wall-clock times to make them more obvious
wincent,2016-03-02 16:59:22,https://api.github.com/repos/wincent/command-t/git/commits/b61780f16e9ea68af7c307759a6e159cd4e45184,b61780f16e9ea68af7c307759a6e159cd4e45184,"Allow use of TIMES environment variable to control benchmark count

Before committing code I want the full 20 runs, but for quick checking
in-progress changes, I want to be able to run a smaller number of times,
or even just once."
wincent,2016-03-02 16:55:28,https://api.github.com/repos/wincent/command-t/git/commits/cbe4519cb462c50e0108b37ca79320982a304438,cbe4519cb462c50e0108b37ca79320982a304438,"""Modernize"" benchmarks

The old Chromium data sets had a lot of `.svn` dot-directories in them,
and given that Command-T generally treats dot-files specially, I wanted
a more representative scenario.

Enter: new Chromium Git repo checkout, but this ""only"" has 224k files in
it, so something bigger is needed.

I couldn't find any single open source repo big enough, so I combined
the file listings from Chromium, the Linux kernel, and Gecko, bringing
us to a total of about 400k files, which is big enough for now, I guess.

I've also tweaked the iterations count to keep each scenario close to
the 1-second range, freshened the listing in the ""command-t"" scenario,
and made the necessary changes to the benchmark script for it to
gracefully handle the case where the number of scenarios changes between
runs."
wincent,2016-03-02 09:23:09,https://api.github.com/repos/wincent/command-t/git/commits/fd25aec19bd3546fe370511eadd870c4893e9f8c,fd25aec19bd3546fe370511eadd870c4893e9f8c,"Rename significant? to significance

Hopefully I won't mortally offend any statisticians by conflating
""p-value"" and ""significance"" here."
wincent,2016-03-02 09:17:38,https://api.github.com/repos/wincent/command-t/git/commits/b2e4bda47e586a99410dd0b0a08f5e1e02bd7a9a,b2e4bda47e586a99410dd0b0a08f5e1e02bd7a9a,"Run the pathological benchmark set more times

As per the recommendation here, we want each scenario to run for at
least a second, and this one was running in about a quarter of a second,
so let's kick it up:

https://github.com/Pistos/better-benchmark/blob/master/lib/better-benchmark.rb"
wincent,2016-03-02 09:16:18,https://api.github.com/repos/wincent/command-t/git/commits/3e2dddd7f2c0d8619d7c2bb57c76715c10f89052,3e2dddd7f2c0d8619d7c2bb57c76715c10f89052,"Increase benchmark run count

Based on what it says here, 10-20 is good and 25 is
""excessive"", so let's go to the top of the ""good""
range:

https://github.com/Pistos/better-benchmark/blob/master/lib/better-benchmark.rb"
wincent,2016-03-02 09:09:25,https://api.github.com/repos/wincent/command-t/git/commits/e10e72b77d38f9df47f1169c9e2412c06e3e36de,e10e72b77d38f9df47f1169c9e2412c06e3e36de,"Better formatting for p-values

We don't need the trailing zeros."
wincent,2016-03-02 09:03:53,https://api.github.com/repos/wincent/command-t/git/commits/cf15c67485ae55d9bec17827c2da8d37596d4b45,cf15c67485ae55d9bec17827c2da8d37596d4b45,Expose actual p-values in chart
wincent,2016-03-02 08:59:51,https://api.github.com/repos/wincent/command-t/git/commits/1e32ded5f6ba8790726714f29927303500490ba6,1e32ded5f6ba8790726714f29927303500490ba6,Fix significance tests
wincent,2016-03-02 08:28:57,https://api.github.com/repos/wincent/command-t/git/commits/95d96fbe17de7ca6d69687fc96d9b9c36675a0a8,95d96fbe17de7ca6d69687fc96d9b9c36675a0a8,"Improve alignment

By re-use, with tweaks to ensure consistency."
wincent,2016-03-02 07:43:21,https://api.github.com/repos/wincent/command-t/git/commits/5698868f50f771622d959b6d1db0d13a1d659dea,5698868f50f771622d959b6d1db0d13a1d659dea,Align benchmark headers
wincent,2016-03-02 07:04:50,https://api.github.com/repos/wincent/command-t/git/commits/6e3cd8413fd6eaa66ed1a8f2f4cd4e418d6b2758,6e3cd8413fd6eaa66ed1a8f2f4cd4e418d6b2758,Tidy up benchmark table printing code
wincent,2016-03-02 04:36:25,https://api.github.com/repos/wincent/command-t/git/commits/8c6ae77c098299dbb1dc86e913eeb0b79ead77a4,8c6ae77c098299dbb1dc86e913eeb0b79ead77a4,Correct percentage calculation
wincent,2016-03-02 04:15:19,https://api.github.com/repos/wincent/command-t/git/commits/ea45421116edeee04f2a3277282f375d2d8dd8b5,ea45421116edeee04f2a3277282f375d2d8dd8b5,"Implement Wilcoxon Signed-Rank Test instead of Winsorising

Code is ugly as sin and definitely has bugs, but is runs in a way, sort
of..."
wincent,2016-03-02 02:11:16,https://api.github.com/repos/wincent/command-t/git/commits/353195f259630defe6dc0a74de0d93dd2697d28e,353195f259630defe6dc0a74de0d93dd2697d28e,"Show delta from previous benchmark, if available"
wincent,2016-03-01 17:23:51,https://api.github.com/repos/wincent/command-t/git/commits/3622026fe209c3341954561a74a94d910e53aee1,3622026fe209c3341954561a74a94d910e53aee1,"Show more stats for benchmark runs

Not beautiful code, but just wanting to get a handle on the variability
of results by running 10 times and showing standard deviation info."
wincent,2016-03-01 14:50:40,https://api.github.com/repos/wincent/command-t/git/commits/1f9c7227d2f9328cfbeb422b7dfaebe85b0675c0,1f9c7227d2f9328cfbeb422b7dfaebe85b0675c0,Delete a comment
wincent,2016-03-01 01:58:41,https://api.github.com/repos/wincent/command-t/git/commits/9790d5173c6a2328ffd18a8a5a62dd380d70c2f1,9790d5173c6a2328ffd18a8a5a62dd380d70c2f1,"Simplify function exit

The break just makes this harder to follow. I gave up on
the dream of having a single function exit point for
this function some time ago."
wincent,2016-03-01 01:49:19,https://api.github.com/repos/wincent/command-t/git/commits/9b00f5ed76d291b58866a80f913d1c3dfc0bf675,9b00f5ed76d291b58866a80f913d1c3dfc0bf675,Alphabetize
wincent,2016-03-01 01:46:50,https://api.github.com/repos/wincent/command-t/git/commits/21ceefcc7b95cbf91b3e6ee90eb062223a30c879,21ceefcc7b95cbf91b3e6ee90eb062223a30c879,Note why we need stdlib.h
wincent,2016-03-01 01:45:21,https://api.github.com/repos/wincent/command-t/git/commits/2f0ccd9354645527c9ef941406273d255c014393,2f0ccd9354645527c9ef941406273d255c014393,Apply tweaks to keep CentOS compiler happy
wincent,2016-02-29 14:26:03,https://api.github.com/repos/wincent/command-t/git/commits/fb5efc225493dee0b6584f102bd58d9099f7a544,fb5efc225493dee0b6584f102bd58d9099f7a544,"Fix another regression

Hoping this is the last of the regressions I've caused with all my
refuctoring of late."
wincent,2016-02-29 14:54:04,https://api.github.com/repos/wincent/command-t/git/commits/4ceb6d4f1fdb1e52873cd8fb657b7c39980c570b,4ceb6d4f1fdb1e52873cd8fb657b7c39980c570b,"Remove heap_bulk_insert

Thought I was going to use this, but turns out I am not."
wincent,2016-02-29 14:52:08,https://api.github.com/repos/wincent/command-t/git/commits/d10825d14a63f26679ef11f6bdee7d53d86a8f70,d10825d14a63f26679ef11f6bdee7d53d86a8f70,"Fix extraction bug in heap implementation

Whoops. Tests would have caught this, but I don't have those...

This manifested as extraction working not quite right, which meant that
the results had some lower-scoring matches mixed in with the worthy
results.

Noticed while manually testing and comparing quality of the results, and
then used some logging to inspect the results and see what was amiss."
wincent,2016-02-29 07:58:17,https://api.github.com/repos/wincent/command-t/git/commits/aa1a91e9920112beee98d60199eda51308983ef5,aa1a91e9920112beee98d60199eda51308983ef5,"Update optimization info in docs

These numbers are doomed to go stale before I release, but anyway, I
re-measured all the way back to 1.6 (the first version to use
parallelized search):

  next:

                          user     system      total        real
  pathological        0.200000   0.000000   0.200000 (  0.197547)
  command-t           1.250000   0.010000   1.260000 (  1.265484)
  chromium (subset)   0.960000   0.130000   1.090000 (  0.217825)
  chromium (whole)    3.850000   0.020000   3.870000 (  0.533365)

  3.0.2 (current released version):

                          user     system      total        real
  pathological        2.580000   0.010000   2.590000 (  2.589704)
  command-t           2.070000   0.000000   2.070000 (  2.079982)
  chromium (subset)   3.650000   0.180000   3.830000 (  1.790363)
  chromium (whole)   24.210000   0.060000  24.270000 (  9.096863)

  1.6 (first version to use parallelized search):

                          user     system      total        real
  pathological        0.070000   0.000000   0.070000 (  0.070763)
  command-t           2.260000   0.010000   2.270000 (  2.271704)
  chromium (subset)   9.700000   0.170000   9.870000 (  3.013519)
  chromium (whole)   51.960000   0.070000  52.030000 ( 13.503562)

So, in the 3+ years between 1.6 and 3.0.2 the implementation got quite a
bit faster, about 33% faster, even as it also got improvements to
improve its correctness (at the cost of speed). But current next blows
the doors right off, at about 17x faster than 3.0.2.

Still want to do some refactoring, testing and baking before releasing
though, so changed the anticipated release date in the docs to March
(instead of February, of which there is only one day left). Also made
the description of the optimizations a little more vague, because there
are many of them."
wincent,2016-02-29 07:17:32,https://api.github.com/repos/wincent/command-t/git/commits/a1e0a3385e1f076c7b663dd9bb95c47db7d58f3c,a1e0a3385e1f076c7b663dd9bb95c47db7d58f3c,"Use floats instead of doubles

Idea stolen from:

  https://github.com/hansonw/fuzzy-native/commit/cbed93b253a

This yields a surprisingly large speed boost, more than the ~10%
mentioned in that commit. It looks like almost 22%, and the loss of
precision seems harmless enough (at least no tests failed).

Note the switch from `DBL_MAX` as a sentinel value to `FLT_MAX`. Without
this, naturally, all hell breaks loose.

  Before (best of three runs):

                            user     system      total        real
    pathological        0.270000   0.010000   0.280000 (  0.268869)
    command-t           1.410000   0.000000   1.410000 (  1.420606)
    chromium (subset)   1.140000   0.160000   1.300000 (  0.250876)
    chromium (whole)    4.880000   0.020000   4.900000 (  0.679532)

  After (best of three runs):

                            user     system      total        real
    pathological        0.200000   0.000000   0.200000 (  0.197547)
    command-t           1.250000   0.010000   1.260000 (  1.265484)
    chromium (subset)   0.960000   0.130000   1.090000 (  0.217825)
    chromium (whole)    3.850000   0.020000   3.870000 (  0.533365)

Committing for historical posterity, but will have to revert."
wincent,2016-02-29 06:56:34,https://api.github.com/repos/wincent/command-t/git/commits/03aedeec18f961a6926f02459898d93ebe5aafd3,03aedeec18f961a6926f02459898d93ebe5aafd3,"Turn on heap-based approach for 10x speed-up

The code is very rough. I just wanted to hack this in to prove the
performance of it. Refactoring will follow to make it palatable.

Nevertheless, the wins are nuts:

  Before (best of three runs):

                            user     system      total        real
    pathological        0.250000   0.000000   0.250000 (  0.247176)
    command-t           1.980000   0.000000   1.980000 (  1.982246)
    chromium (subset)   2.070000   0.200000   2.270000 (  1.427773)
    chromium (whole)    9.970000   0.030000  10.000000 (  6.186547)

  After (best of three runs):

                            user     system      total        real
    pathological        0.270000   0.010000   0.280000 (  0.268869)
    command-t           1.410000   0.000000   1.410000 (  1.420606)
    chromium (subset)   1.140000   0.160000   1.300000 (  0.250876)
    chromium (whole)    4.880000   0.020000   4.900000 (  0.679532)

Of interest, note that the Chromium sets are *faster* than the much
smaller Command-T set now. Presumably because this approach really
benefits from threading[*], and only the Chromium sets are big enough to
actually activate threaded search.

[*]: I hadn't anticipated this, but is makes perfect sense. The
bottleneck of the old approach was the sorting, and that could only
happen on a single thread. The work done for the heaps, however, is
distributed across threads, better leveraging the power of multiple
cores.

Still, even though I can explain all this and anticipated it, I am still
wondering if if is too good to be true. The code was already optimized
up the wazoo and this  is a 10x speed up. I'll take it, anyway, because
the tests pass and things feel right in use."
wincent,2016-02-29 06:03:31,https://api.github.com/repos/wincent/command-t/git/commits/41a95ee4c3ffdad8f5308523c755c582ddc2270a,41a95ee4c3ffdad8f5308523c755c582ddc2270a,"Add (pending) failing test for dotfile edge case

This bug exists in 3.0.2 and I believe for quite a while before that.
It's possible it was always present. The issue is that we stop looking
as soon as we find a match, and that means we might not notice that
something is a dotfile.

The solution will be to check for dotfiles during our right-to-left
prescan. Shouldn't cost us any time, and might even enable us to
simplify the implementation of `recursive_match`. Not going to fix it
right now because I am in the middle of this heap experiment; will come
back to it."
wincent,2016-02-28 23:34:42,https://api.github.com/repos/wincent/command-t/git/commits/7cd43372ca4bd16a24e6a0eb3b403e6a0df1f11c,7cd43372ca4bd16a24e6a0eb3b403e6a0df1f11c,"Invert sense of heap comparisons

I think I had these back to front."
wincent,2016-02-28 21:17:27,https://api.github.com/repos/wincent/command-t/git/commits/e26b5bcd10eea31d1825fda4fd4aebc4f9b69fed,e26b5bcd10eea31d1825fda4fd4aebc4f9b69fed,"Change heap overflow strategy

I think this is a less leaky abstraction. If you want the
insert-then-extract behavior, you can request a one-larger heap
yourself.

In this way, callers don't need to know the internal implementation
details of the heap to predict which node will be evicted on overflow.
The behavior is much more easily defined (excess nodes are outright
ignored)."
wincent,2016-02-28 16:52:11,https://api.github.com/repos/wincent/command-t/git/commits/b9b7741d30497327d37f712401b962dfa0ac1319,b9b7741d30497327d37f712401b962dfa0ac1319,"Short-circuit loop when trying to bulk insert beyond capacity

In theory, I'll never call it with a too-large size, but it seems like
the right thing to do anyway."
wincent,2016-02-28 16:51:25,https://api.github.com/repos/wincent/command-t/git/commits/747317a211972973ecf84fd8485ce4df609897d1,747317a211972973ecf84fd8485ce4df609897d1,"Correct a comment

The last value in the storage is not necessarily the largest."
wincent,2016-02-28 05:03:29,https://api.github.com/repos/wincent/command-t/git/commits/f1368c133b725e098bd56ffcb2ae1944c8a7c7fe,f1368c133b725e098bd56ffcb2ae1944c8a7c7fe,Tweak types for easier compatibility with existing code
wincent,2016-02-28 00:49:57,https://api.github.com/repos/wincent/command-t/git/commits/ecb080112e69b51f2ff1b26d3b74f90e10ed7dde,ecb080112e69b51f2ff1b26d3b74f90e10ed7dde,"Align limit default with CommandTMaxHeight default

In Vim, limit is always going to be 15 (unless overridden by the user)
or possibly less if the window height does not permit it. Even if they
set the height to ""unlimited"" it will still be clipped to the window
height.

As such, to make benchmarking more closely model editor-based usage
scenarios, I'm tweaking the low-level default too.

This commit means we're doing a little less work (fewer `Array#push`
ops), but there is not much effect:

  Before (best of three):

                            user     system      total        real
    pathological        0.250000   0.010000   0.260000 (  0.253167)
    command-t           1.710000   0.000000   1.710000 (  1.722218)
    chromium (subset)   2.160000   0.210000   2.370000 (  1.511613)
    chromium (whole)   10.370000   0.040000  10.410000 (  6.640190)

  After (best of three):

                            user     system      total        real
    pathological        0.250000   0.000000   0.250000 (  0.252433)
    command-t           1.970000   0.020000   1.990000 (  1.985316)
    chromium (subset)   2.090000   0.200000   2.290000 (  1.450036)
    chromium (whole)   10.290000   0.040000  10.330000 (  6.495397)

Note that we haven't actually made anything faster here; we've just made
the benchmark better align with real world usage, like we did in
fb1ab6b."
wincent,2016-02-27 23:41:34,https://api.github.com/repos/wincent/command-t/git/commits/d006abfc64439a08cb8d859544647766eddd1a16,d006abfc64439a08cb8d859544647766eddd1a16,"Add heap implementation

This is a pretty standard binary min heap[*], basically based on the JS one
that I wrote for Corpus:

https://github.com/wincent/corpus/blob/next/src/app/Heap.js

[*]: Except for the fact that this one is fixed size for reasons which I
am about to explain.

Profiling shows that we're spending about half our time in `qsort` which
is `O(n log n)` where `n` is the number of files. The hypothesis that I
want to test out here is that we might be able to do less work here if
we use a fixed size heap as follows:

- `n` files, `m` threads, and a desire to show the top `l` matches.
- One heap per thread to avoid locking overhead.
- `l` slots per heap.
- Insert first `l` results in bulk mode (`O(l)`).
- From then on, do a normal insert for each result (`O(n log l)`).
- Note that `l` is dwarfed by `n`, so this should be a lot less work.
- After each insertion, extract the minimum value (`O(n log l)`); this
  means our ""min"" heap actually serves as an always up-to-date view of
  the ""max"" scoring matches.
- Also note that we can avoid doing the insert at all by peeking at the
  root of the heap and seeing if the score is already higher than what
  we would insert.
- At end, extract all; or better still, just read straight out (`O(ml)`
  instead of `O(ml log l)`).
- Sort that (`O(ml log ml`).

I believe this could knock off anywhere from 5 to 80% of our sorting
time, which is itself about 50% of the overall time. Of course, there
are lots of reasons why this could be wrong (including the fact that
there is some overhead in the heap management code that might make it
less competitive with the highly optimized standard library `qsort`).
None the less, this is a hypothesis worth checking out.

Crude numbers to show my working for that 5-80% guess:

- n = 500,000; m = 5; l = 32
- sorting =
    n log n comparisons =
    500,000 log 500,000 =
    500,000 * 19 =
    9.5 million comparisons
- heap approach =
    m * l bulk inserts (2,500 operations) +
    n/5 * 5 * log 32 (ie. 5) inserts (500,000 operations) +
    same for extractions (500,000 operations) +
    m * l to read out (2,500 operations) +
    250 log 250 (ie. 8) to sort (2,000 operations) =
    1 million operations

Unknowns:

- What are the relative costs of the operations?
- How many of the 1 million insert + extract pairs can we eliminate by
  peeking at the minimum score, and to what benefit?
- How accurate was my profiling that suggests that half our time is
  spent sorting?

As an initial test, I turned off sorting in the benchmarks to see the
cost and saw them drop from 7.4s for the Chromium set down to 0.95s. I
then turned sorting back on and added heap insert + delete and saw them
go up 0.5s. In other words, this could end up dropping us from 7.4s to
around 1.5s, which would be amazing.

As for the heap code, I haven't tested it yet, but it does compile
without errors.

> Beware of bugs in the above code; I have only proved it correct, not
> tried it.

(Knuth)"
wincent,2016-02-27 07:42:11,https://api.github.com/repos/wincent/command-t/git/commits/50ff9765164fe138128fddf70b13a5193415da3c,50ff9765164fe138128fddf70b13a5193415da3c,"Remove now-unnecessary dot_search hack

Was only needed in one of my intermediate semi-broken states
to coax a test into passing. Now back to passing without the
hack anymore."
wincent,2016-02-27 07:31:59,https://api.github.com/repos/wincent/command-t/git/commits/0912c91c93311c8a81624f5751a2f6624ca26d1e,0912c91c93311c8a81624f5751a2f6624ca26d1e,"Fix another regression

Unfortunately I have to bring back the `seen_score` concept, or at least
I think I do, in order to fix the ordering problems for which I've added
a regression test.

Note that I changed the memoization along the way to check more often
(inside the loop), which leads to a nice speed up in the ""pathological""
benchmark particularly (about 10x faster):

  Before (best of three runs):

                            user     system      total        real
    pathological        2.170000   0.010000   2.180000 (  2.173283)
    command-t           1.730000   0.000000   1.730000 (  1.734080)
    chromium (subset)   2.270000   0.200000   2.470000 (  1.526415)
    chromium (whole)   10.690000   0.050000  10.740000 (  6.515187)

  After (best of three runs):

                            user     system      total        real
    pathological        0.240000   0.000000   0.240000 (  0.240375)
    command-t           1.670000   0.000000   1.670000 (  1.666077)
    chromium (subset)   2.120000   0.200000   2.320000 (  1.485174)
    chromium (whole)   10.150000   0.050000  10.200000 (  6.379971)"
wincent,2016-02-27 03:01:15,https://api.github.com/repos/wincent/command-t/git/commits/22a3943e0b51cf10762c97c0b8e1f4affeb41cc5,22a3943e0b51cf10762c97c0b8e1f4affeb41cc5,"Revert ""Kill off last_idx ugliness""

This reverts commit 629f221f29c638abcf8458173c340e22c64ccfcc."
wincent,2016-02-27 02:21:24,https://api.github.com/repos/wincent/command-t/git/commits/65a1f04fb80a9fc6aee5076d31fade94fd592046,65a1f04fb80a9fc6aee5076d31fade94fd592046,"Squelch a few warnings for old compilers

Deal with some:

>  ISO C90 forbids mixed declarations and code

That I see on CentOS (not on OS X)."
wincent,2016-02-27 02:57:50,https://api.github.com/repos/wincent/command-t/git/commits/53d9732ce88411a46abf8ff54784271e331b36b0,53d9732ce88411a46abf8ff54784271e331b36b0,"Remove mistaken memoization cleverness

So, I realized that my thinking here was flawed and the math I'd done to
show that this would work was flawed, and worked out magically just
because I'd chosen a rectangle with very specific dimensions. Bad luck.
Here's a counter example:

- Consider needle length 5, haystack length 100. Observe the following
  collisions with the formula:

     needle_idx * needle_len + haystack_idx =     x
          0           0            80       =     80
          1           5            75       =     80
          2           10           70       =     80
          3           15           65       =     80
          4           20           60       =     80

So with all those conditions you can expect a faster run because of all
the (false) cache hits. But I think in practice it didn't matter much at
all because the matrix is still sparse enough that hits were pretty
rare. Either that, or I had a compensating bug somewhere else. Some
support is leant to theory that collisions were rare, or the impact of
them on scoring was relatively low, because I wasn't aware of any
noticeable ranking bugs.

  Before [ie. 1f41e7630]  (best of three runs):

                            user     system      total        real
    pathological        2.920000   0.010000   2.930000 (  2.927735)
    command-t           1.850000   0.010000   1.860000 (  1.854239)
    chromium (subset)   2.260000   0.200000   2.460000 (  1.510716)
    chromium (whole)   11.090000   0.040000  11.130000 (  6.670843)

  After (best of three runs):

                            user     system      total        real
    pathological        2.170000   0.010000   2.180000 (  2.185652)
    command-t           1.750000   0.010000   1.760000 (  1.753948)
    chromium (subset)   2.270000   0.200000   2.470000 (  1.535449)
    chromium (whole)   10.940000   0.040000  10.980000 (  6.708795)

Note that for the ""before"" test I went back to 1f41e7630 to get past the
intermediate broken states and weirdness that I've had on this branch of
late."
wincent,2016-02-27 02:44:08,https://api.github.com/repos/wincent/command-t/git/commits/1106c28a06e2424a58da39023a6bac5ecb033e84,1106c28a06e2424a58da39023a6bac5ecb033e84,"Fix off-by-one error

This was causing a segfault during the benchmark run but not the tests.
Figured out what was happening with the aid of `lldb`:

```
ulimit -c unlimited
lldb -c /cores/core.12345
bt
```

Tests still pass, but there's still another bug in here causing a
different segfault. Will keep looking."
wincent,2016-02-27 02:10:59,https://api.github.com/repos/wincent/command-t/git/commits/202ba52d0c194f92bca0c23a0781362474957e3e,202ba52d0c194f92bca0c23a0781362474957e3e,"Simplify a loop termination condition

So we come full circle. I think I had something like this in there
before. This is simpler and should be more performant too."
wincent,2016-02-27 01:49:01,https://api.github.com/repos/wincent/command-t/git/commits/629f221f29c638abcf8458173c340e22c64ccfcc,629f221f29c638abcf8458173c340e22c64ccfcc,"Kill off last_idx ugliness

Getting there, one step at a time.

Tests still pass, benchmarks still segfault, so going to keep digging."
wincent,2016-02-27 01:44:47,https://api.github.com/repos/wincent/command-t/git/commits/7e4acf2fd14d57126b201f740a478bccda07de05,7e4acf2fd14d57126b201f740a478bccda07de05,"Remove some ugliness (mutation of haystack_idx)

Tests still pass, benchmarks still segfault, so going to continue
looking for bugs."
wincent,2016-02-27 01:35:43,https://api.github.com/repos/wincent/command-t/git/commits/443ea1a2bd587eff7f83df6fbb1c0642bba25139,443ea1a2bd587eff7f83df6fbb1c0642bba25139,"Get tests passing with some egregious hacks

Certainly there are bugs in here too, as the benchmarks segfault with
this code, but I wanted to get a ""working"" snapshot in (""working"" in the
sense that all the tests pass). I'll figure out what's going on next."
wincent,2016-02-26 16:35:54,https://api.github.com/repos/wincent/command-t/git/commits/7c9a576045af61cefe19d92e1f1338b9a0677112,7c9a576045af61cefe19d92e1f1338b9a0677112,"Rewrite using old algorithm

This is hard to explain but I am going to give it a shot.

Commit 187bc18 changed our search into a ""greedy"" depth-first approach,
in the sense that we recursed (continuing to pursue the in-progress
match) instead of bumping our counter and finding matches starting
further to the right. Given that we only memoize on unwinding the
recursive call stack, this means that we were prematurely locking in
some potentially sub-optimal scorings early on in the search.

Even though we later go back and exhaustively explore the problem space,
we wind up using a memoized value which is not necessarily the best
possible value for a given `needle_idx`/`haystack_idx` pair because it
is based on `distance`, and that can actually vary.

Consider this example:  a search like ""matchh"" and a pair of candidate
strings:

- vendor/bundle/ruby/1.8/gems/rspec-expectations-2.14.5/spec/rspec/matchers/has_spec.rb
- ruby/command-t/match.h

We score the longer ""vendor"" string identically to the old algorithm,
but the shorter string is scored lower, resulting in the results coming
back in the wrong order like this:

- Match first ""m"" in ""ruby/command-t/match.h"".
- Proceed, scoring with some recursion and looping, until we hit the
  last ""a"", memoizing its score.
- After unwinding the stack, eventually loop until the last ""m"" is
  matched against the ""m"" in the needle and scored.
- Recurse to the ""a"", and pull out the memoized score.
- Note that the score that got memoized for the ""a"" is used, but it is
  wrong, because it was computed using the distance from some other,
  previously-seen ""m"" and not the one we care about here.

In other words, we end up memoizing the first-seen score instead of the
best-seen score, and the reason the first-seen is not the best-seen is
that our left-biased search pattern actually tends to maximize distance.

The old algorithm didn't suffer from this problem as it is right-biased,
and by the time we unwind the stack (and commit to memoizing), we have
already seen all possible scores in the recursive subtree and can choose
the best one.

This is obvious when you think about it: the new algorithm built the
score up from the right (starting at zero for the rightmost match),
while the old algorithm built it up from the left (passing it down into
the recursive calls).

Rather than revert back to what I had originally, I've rewritten it
using my newfound insights about how the memoization works. So, we go
from ""loop over haystack + recurse to explore needle"" to ""loop over
needle, loop over haystack + recurse to find better match"".

Improvements over the original (comparing to current `master` branch
version at 4c7f02c5a) and other changes:

- No more ugly `seen_score` variable.
- `rightmost_match_p`-aware range limiting.
- No more ugly `found` variable.
- `return` in place rather than `goto` (debatable whether this is
  technically better, but it does look nicer).
- No more mutation of `haystack_idx` in the loop condition or at the end
  of the loop body.
- Simpler exit logic (no `break`).
- No more awkward `++j` preincrement.
- Remove guard at top of function and instead guard before recursing
  (makes cleaner).

This fixes our regression test but breaks a couple of others. Consider
this a work in progress. Perf seems as good or better than before. More
to come."
wincent,2016-02-26 09:12:40,https://api.github.com/repos/wincent/command-t/git/commits/79bf2c9e774f5ae972db8933f0c1a08799187b7d,79bf2c9e774f5ae972db8933f0c1a08799187b7d,"Add inline docs explaining how the memoization arithmetic works

I originally stumbled across this compact and fast representation by
sheer luck. I don't think I full understood it until I went through and
made diagrams showing it. So, in this commit, I embed some of this in
the code, to help make clear why things are the way they are."
wincent,2016-02-26 03:05:31,https://api.github.com/repos/wincent/command-t/git/commits/066277309a86217f70dfc0c0f1a56cbc8119e7a6,066277309a86217f70dfc0c0f1a56cbc8119e7a6,"Investigate ranking bug and make some improvements

Comment in spec describes what is going on. I made some improvements to
the code while attempting to diagnose this. The way we're storing the
memoization data is a little hard to explain, however, so I am going to
make a separate doc for that."
wincent,2016-02-25 09:21:09,https://api.github.com/repos/wincent/command-t/git/commits/027bd9783c2b6479e8e61e0c008004216ab3996c,027bd9783c2b6479e8e61e0c008004216ab3996c,Add and L (logging) macro for debugging
wincent,2016-02-25 09:08:02,https://api.github.com/repos/wincent/command-t/git/commits/ea417b1586d108a3d5dee12b65093c6e84192c67,ea417b1586d108a3d5dee12b65093c6e84192c67,"Add a failing test for a regression

`git bisect` shows 187bc18fb4ed6088e is the culprit."
wincent,2016-02-25 08:50:46,https://api.github.com/repos/wincent/command-t/git/commits/1f41e7630b5f103e6c1f15dccd95b98a417589f0,1f41e7630b5f103e6c1f15dccd95b98a417589f0,"Experiment with using bitmasks to avoid processing

Idea taken from https://github.com/hansonw/fuzzy-native

The code is a mess (the result of a few different experiments), so will
need some clean up. I also suspect it could be made faster if edited
with a view to better data locality (for caching).

  Before (best of three runs):

                            user     system      total        real
    pathological        3.000000   0.040000   3.040000 (  3.044692)
    command-t           1.830000   0.010000   1.840000 (  1.836447)
    chromium (subset)   2.490000   0.200000   2.690000 (  1.529852)
    chromium (whole)   11.240000   0.040000  11.280000 (  6.382421)

  After (best of threes runs):

                            user     system      total        real
    pathological        2.910000   0.010000   2.920000 (  2.919265)
    command-t           1.760000   0.000000   1.760000 (  1.761308)
    chromium (subset)   2.250000   0.210000   2.460000 (  1.498059)
    chromium (whole)   10.750000   0.040000  10.790000 (  6.365280)

As you can see, no major perf impact. It's true that if you look at the
average run speed of multiple runs, the new code ends up looking more
consistent, and perhaps as much as 5% faster.

Again, I'm surprised this doesn't save us more time, but I can see if I
add logging that this is enabling us to avoid looking at a great many
paths along the way. I'll try to tidy up some of the hideous ugliness in
here and also see if I can make it faster"
wincent,2016-02-24 15:47:16,https://api.github.com/repos/wincent/command-t/git/commits/fb1ab6b5b7572fef86cc340c2c95a9ab732d8335,fb1ab6b5b7572fef86cc340c2c95a9ab732d8335,"Set new baseline for benchmark metrics

Make the benchmarks more closely resemble real world usage. Users don't
search for ""foobar"" but rather ""f"", then ""fo"", then ""foo"" etc (unless
they have debouncing turned on).

I have some optimizations planned to handle exactly this case, so I'm
adjusting the benchmark so that I can measure the impact of the change.

I could have tweaked the `times` value of any of the benchmarks except
for ""chromium (whole)"" (which is already at 1), but I figured they're
all shorter anyway so they may as well just stay as they are.

New baseline:

                          user     system      total        real
  pathological        3.640000   0.090000   3.730000 (  3.805231)
  command-t           2.170000   0.030000   2.200000 (  2.209098)
  chromium (subset)   2.600000   0.220000   2.820000 (  1.626648)
  chromium (whole)   12.340000   0.060000  12.400000 (  7.209598)"
wincent,2016-02-24 15:29:26,https://api.github.com/repos/wincent/command-t/git/commits/cddc3290bda0554cc1556f81d263c6f477b94e4f,cddc3290bda0554cc1556f81d263c6f477b94e4f,"Fix bug in rightmost match logic

I was puzzled at the fact that the `rightmost_match_p` check in my `for`
loop here wasn't sufficient, and that the additional `haystack_len`
check was required in order to keep the ""pathological"" benchmark test
from regressing, indicating a bug.

Sure enough, I had clowny logic in there, causing us to not always
populate the `rightmost_match_p` array properly. For runs of characters
(like my ""aaaaaaa"" benchmark strings) we would end up setting the same
index for multiple characters (ie. too far to the right), preventing us
from short-circuiting adequately.

Benchmarks aren't affected much (variation is well within the bounds of
noise) because most searches aren't pathological in nature:

  Before (compute first score only):

                          user     system      total        real
  pathological        0.010000   0.000000   0.010000 (  0.008182)
  command-t           0.220000   0.000000   0.220000 (  0.222168)
  chromium (subset)   0.220000   0.020000   0.240000 (  0.144871)
  chromium (whole)    0.700000   0.010000   0.710000 (  0.442378)

  Before (compute all):

                          user     system      total        real
  pathological        0.130000   0.000000   0.130000 (  0.124744)
  command-t           0.240000   0.000000   0.240000 (  0.244833)
  chromium (subset)   0.220000   0.020000   0.240000 (  0.149158)
  chromium (whole)    0.680000   0.000000   0.680000 (  0.434695)

  After (compute first score only):

                          user     system      total        real
  pathological        0.010000   0.000000   0.010000 (  0.008652)
  command-t           0.230000   0.000000   0.230000 (  0.228463)
  chromium (subset)   0.200000   0.010000   0.210000 (  0.139945)
  chromium (whole)    0.680000   0.010000   0.690000 (  0.424456)

  After (compute all):

                          user     system      total        real
  pathological        0.110000   0.000000   0.110000 (  0.118288)
  command-t           0.230000   0.010000   0.240000 (  0.233357)
  chromium (subset)   0.210000   0.020000   0.230000 (  0.144001)
  chromium (whole)    0.650000   0.000000   0.650000 (  0.409292)

So, maybe better, and probably not worse. Still a bit disappointing that
this doesn't save us more, but I added logging to see how much sooner we
can short-circuit with this heuristic vs a length-only one. In many
cases there is zero advantage. In others we might be able to abort 4 or
10 or 20 or even more characters earlier; but in practice the memoized
algorithm is fast enough that it makes little difference."
wincent,2016-02-24 07:37:11,https://api.github.com/repos/wincent/command-t/git/commits/3e2f9a0e23e5a78ea603de847ad25f73b0447684,3e2f9a0e23e5a78ea603de847ad25f73b0447684,"Merge branch 'pull/205'

Originally submitted at: https://github.com/wincent/command-t/pull/205

* pull/205:
  doc: Add Sam Morris to AUTHORS section
  Use %zd to format ssize_t"
wincent,2016-02-24 07:37:00,https://api.github.com/repos/wincent/command-t/git/commits/195be81096f16f75c08194ade578432cb38a69e1,195be81096f16f75c08194ade578432cb38a69e1,doc: Add Sam Morris to AUTHORS section
yrro,2016-02-20 23:32:11,https://api.github.com/repos/wincent/command-t/git/commits/1b3992f092e1f344426cff5e0a32d96941cbbcbf,1b3992f092e1f344426cff5e0a32d96941cbbcbf,Use %zd to format ssize_t
wincent,2016-02-24 07:35:03,https://api.github.com/repos/wincent/command-t/git/commits/bb04eac1f647e6763fd4a254334c8ae580bd5950,bb04eac1f647e6763fd4a254334c8ae580bd5950,"Merge branch 'pull/206'

Originally submitted at: https://github.com/wincent/command-t/pull/206

* pull/206:
  doc: Add Daniel Burgess to AUTHORS section
  Add instructions for installing with vim-plug"
wincent,2016-02-24 07:34:36,https://api.github.com/repos/wincent/command-t/git/commits/7beec60da02962089a4359fa63c5c540ad79e924,7beec60da02962089a4359fa63c5c540ad79e924,doc: Add Daniel Burgess to AUTHORS section
dbburgess,2016-02-23 18:44:36,https://api.github.com/repos/wincent/command-t/git/commits/3b446abf76419217e0dba6a062df41cd4afad00d,3b446abf76419217e0dba6a062df41cd4afad00d,"Add instructions for installing with vim-plug

vim-plug is a minimalist Vim plugin manager:
https://github.com/junegunn/vim-plug"
wincent,2016-02-24 07:28:26,https://api.github.com/repos/wincent/command-t/git/commits/31743c85882e2fd8a00a61806f44facf84b16aaf,31743c85882e2fd8a00a61806f44facf84b16aaf,"Merge branch 'pull/207'

Originally submitted at: https://github.com/wincent/command-t/pull/207

* pull/207:
  doc: Add Nilo to AUTHORS section
  Recommend -ixoff in docs"
wincent,2016-02-24 07:24:01,https://api.github.com/repos/wincent/command-t/git/commits/f19c768c974d23888ebd724a3ac22d702cf8f2b7,f19c768c974d23888ebd724a3ac22d702cf8f2b7,doc: Add Nilo to AUTHORS section
niloct,2016-02-24 05:02:14,https://api.github.com/repos/wincent/command-t/git/commits/73246aeb844465d26707db9b0d03724b76fb5fe8,73246aeb844465d26707db9b0d03724b76fb5fe8,"Recommend -ixoff in docs

In MacOSX 10.10 (at least), you also have to add -ixoff option to stty
command in .bash_profile, to make <Ctrl-S> work (as seen on
http://dallarosa.tumblr.com/post/31333511717/commandt-and-ctrl-s-on-mac-os-x)."
wincent,2016-02-23 21:43:26,https://api.github.com/repos/wincent/command-t/git/commits/bf27da6d38982110bdd31bf0ea646c76a938a736,bf27da6d38982110bdd31bf0ea646c76a938a736,Update docs to reflect recent match scoring work
wincent,2016-02-23 09:41:17,https://api.github.com/repos/wincent/command-t/git/commits/187bc18fb4ed6088e3e69c66a4dd7d9e8a12f2df,187bc18fb4ed6088e3e69c66a4dd7d9e8a12f2df,"Refactor scoring for clarity

Perf appears to be unaffected by this (which is good), but I think the
result is much clearer. Changes:

- Replace nested `for` loops + recursion with a single `for` loop plus
  recursion; the amount of work being done should be about the same as
  we're still recursing once for each matched character, and we're still
  early-returning in the same places thanks to memoization.
- Simplify calling convention of `recursive_match`: we no longer pass in
  `last_idx` (instead we derive it inside the function) nor `score`.
- No more `goto`.
- Return score directly from `calculate_match` instead of using
  cumbersome `out` parameter.
- Use some macros to name things for clarity (`NON_MATCH`, `UNSET`).
- Style tweaks.

The core idea here (of replacing one of the `for` loops with recursion)
was stolen from https://github.com/hansonw/fuzzy-native -- which itself
is a much clearer version of the old Command-T algorithm here, that had
grown organically over time. This makes the dynamic programming nature
of the approach more explicit, with the clear base case (returning 0
when the final character is matched) and the clever use of a large
negative value as a starting value for the non-matching case."
wincent,2016-02-23 00:14:00,https://api.github.com/repos/wincent/command-t/git/commits/da3704e7669eb5f34edcc9e50a4088e5a7cc08c8,da3704e7669eb5f34edcc9e50a4088e5a7cc08c8,"Make use of rightmost_match_p to bail early

Second idea from:

  https://github.com/hansonw/fuzzy-native

Results:

  Before (best of three runs):

                            user     system      total        real
    pathological        0.100000   0.000000   0.100000 (  0.091347)
    command-t           0.230000   0.010000   0.240000 (  0.231251)
    chromium (subset)   0.210000   0.020000   0.230000 (  0.141048)
    chromium (whole)    0.710000   0.000000   0.710000 (  0.433460)

  After (best of three runs):

                            user     system      total        real
    pathological        0.100000   0.000000   0.100000 (  0.097742)
    command-t           0.250000   0.000000   0.250000 (  0.248907)
    chromium (subset)   0.220000   0.020000   0.240000 (  0.142941)
    chromium (whole)    0.690000   0.010000   0.700000 (  0.423766)

Not as clear a win as our pre-scan, but I checked this with logging to
confirm that it actually was enabling us to bail early (it is)."
wincent,2016-02-22 22:49:22,https://api.github.com/repos/wincent/command-t/git/commits/26195f673104166f956f59a27c13bef9ad11a3e8,26195f673104166f956f59a27c13bef9ad11a3e8,"Avoid unnecessary recursing/scoring when string can't match

Borrow one of the optimizations to the Command-T scoring algorithm
from:

https://github.com/hansonw/fuzzy-native

Basically, we do a pre-scan to check whether the needle can possibly
match in the haystack, and if not, don't even bother trying to score it.

Additionally, we record the rightmost seen index in the haystack for
each character in the needle; we'll be using that later to prune the
search space during scoring, but for now I wanted to get this
optimization in on its own so I can benchmark its effect in isolation.

  Before (best of three runs):

                            user     system      total        real
    pathological        0.100000   0.000000   0.100000 (  0.091369)
    command-t           0.270000   0.000000   0.270000 (  0.267367)
    chromium (subset)   0.360000   0.020000   0.380000 (  0.157142)
    chromium (whole)    1.640000   0.000000   1.640000 (  0.562000)

  After (best of three runs):

                            user     system      total        real
    pathological        0.100000   0.000000   0.100000 (  0.096277)
    command-t           0.230000   0.000000   0.230000 (  0.232563)
    chromium (subset)   0.220000   0.020000   0.240000 (  0.141075)
    chromium (whole)    0.700000   0.000000   0.700000 (  0.439138)

Big improvements across the board; the most impressive delta is in the
large (chromium) dataset, where (user) CPU time dropped from 1.64
seconds to 0.7 seconds (system CPU time is negligible). On this
multicore machine, that corresponded to a still-impressive drop from
0.56 to 0.44 seconds of wall clock time (a 21% reduction)."
wincent,2016-02-18 17:07:23,https://api.github.com/repos/wincent/command-t/git/commits/180db770d11fa25eb9d3b74175968eed4dcd5da0,180db770d11fa25eb9d3b74175968eed4dcd5da0,Tell ctags to ignore non-project or non-interesting files
wincent,2016-02-16 05:59:08,https://api.github.com/repos/wincent/command-t/git/commits/fba148f920a8cdad3d3fb4ae47c4f436b635937e,fba148f920a8cdad3d3fb4ae47c4f436b635937e,"Make non-leading dots match against non-leading dot-files

If you read the fine print in the docs, this was always the way it was
supposed to work, but I had let it drift away from the described
semantics:

> When showing the file listing Command-T will by default show dot-files
> only if the entered search string contains a dot that could cause a
> dot-file to match.

Noticed that this was an issue in my dot-files repo, where a string like
"".vim mapp"" would allow me to open
""roles/dotfiles/files/.vim/plugin/mappings.vim"", but ""roles .vim mapp""
would not.

No perf regressions; best of three runs before and after yields:

  Before:

                            user     system      total        real
    pathological        0.100000   0.000000   0.100000 (  0.096665)
    command-t           0.280000   0.000000   0.280000 (  0.277113)
    chromium (subset)   0.370000   0.020000   0.390000 (  0.162225)
    chromium (whole)    1.740000   0.010000   1.750000 (  0.615153)

  After:

                            user     system      total        real
    pathological        0.100000   0.000000   0.100000 (  0.100212)
    command-t           0.280000   0.000000   0.280000 (  0.277360)
    chromium (subset)   0.360000   0.010000   0.370000 (  0.161372)
    chromium (whole)    1.700000   0.010000   1.710000 (  0.599940)"
wincent,2016-02-09 14:50:30,https://api.github.com/repos/wincent/command-t/git/commits/4c7f02c5a9020bbbd498f643abfb059048388707,4c7f02c5a9020bbbd498f643abfb059048388707,"doc: start new HISTORY section for post-3.0.2 release

I actually forgot to update this before cutting 3.0.2 (which I just
pushed). If I had, I would have noticed that it should have been 3.1, as
it adds a new feature. So we've deviated from semver a little."
wincent,2016-01-31 06:36:27,https://api.github.com/repos/wincent/command-t/git/commits/62f6f9ca4ec571a959533352e00873357dcbec22,62f6f9ca4ec571a959533352e00873357dcbec22,"doc: Show how to get NeoBundle to autobuild

As suggested here:

  https://github.com/wincent/command-t/issues/199

I don't use NeoBundle myself, but I installed it temporarily to confirm
that this works. Given that I didn't verify this on other platforms
(like ""cygwin"" and ""windows"") I left those out. The ""unix"" build command
runs on OS X (""mac"") and presumably ""linux"" too, obviating the need to
specify those explicitly (the commands would be the same anyway)."
wincent,2016-01-31 00:03:04,https://api.github.com/repos/wincent/command-t/git/commits/3db4c73fca3d9de5d785ca63f404324200d9ce8a,3db4c73fca3d9de5d785ca63f404324200d9ce8a,"doc: update AUTHORS section

Instead of manually updating this and then using a fancy Vim macro to
reformat it, just dump in the result of:

```
:read !git shortlog -s|cut -f 2-3|column -c 72
:retab "" after selecting region, then indent with gv>>
```

As part of this, get `.mailmap` into shape, adding some missing entries
and simplifying others."
wincent,2016-01-30 23:36:40,https://api.github.com/repos/wincent/command-t/git/commits/94c713bfd0d6e224441c73d1f144171a05338270,94c713bfd0d6e224441c73d1f144171a05338270,"Merge branch 'pull/202' into next

Originally submitted at: https://github.com/wincent/Command-T/pull/202

* pull/202:
  Update Watchman binary protocol documentation URL"
lencioni,2016-01-30 16:12:07,https://api.github.com/repos/wincent/command-t/git/commits/d8c5c738559067b4170d0a5a30c8750f9f281c20,d8c5c738559067b4170d0a5a30c8750f9f281c20,"Update Watchman binary protocol documentation URL

I noticed that this URL was 404ing, so I tracked down where I think it
moved to and updated the URL here. I considered referencing a commit
hash instead of master to prevent this from happening again but decided
against it because it will potentially be sending folks to outdated
documentation."
wincent,2016-01-26 15:20:40,https://api.github.com/repos/wincent/command-t/git/commits/aff3834630c278a8ebb98e7266ce33479ffb2a4d,aff3834630c278a8ebb98e7266ce33479ffb2a4d,"Add CommandT{WillShow,DidHide}MatchListing autocommands

Adds `CommandTWillShowMatchListing` and `CommandTDidHideMatchListing`
autocommands that can be used to do useful things like temporarily
disabling and re-enabling other plug-ins before and after showing
(hiding) the Command-T match listing window.

Closes: https://github.com/wincent/command-t/issues/200"
wincent,2016-01-26 06:07:48,https://api.github.com/repos/wincent/command-t/git/commits/e71f4a2e6aa85237caeeac0a5d1f03b2ad3302b0,e71f4a2e6aa85237caeeac0a5d1f03b2ad3302b0,"Fix unwanted flicker on opening/closing match listing in MacVim

Noted by @jordwalke here:

https://github.com/wincent/command-t/commit/bfabb963#commitcomment-15634082

I hadn't noticed this flicker because I use terminal Vim and this only
manifests in MacVim. The fix is to clear the prompt (by forcing a
redraw) before restoring the settings rather than after."
wincent,2016-01-25 08:10:22,https://api.github.com/repos/wincent/command-t/git/commits/2285868f134ab97b21e859b61a3e97fecd035ad4,2285868f134ab97b21e859b61a3e97fecd035ad4,Start new HISTORY entry for next release
wincent,2016-01-25 08:09:46,https://api.github.com/repos/wincent/command-t/git/commits/1c7a079c00c486e45db77a235ce22e3240330e5c,1c7a079c00c486e45db77a235ce22e3240330e5c,Fix tiny typo in docs
wincent,2016-01-25 08:02:32,https://api.github.com/repos/wincent/command-t/git/commits/3f596b5b2eedb1d6f160a4b2e4dcb9a5ab289318,3f596b5b2eedb1d6f160a4b2e4dcb9a5ab289318,"Tweak gemspec

We got rid of README.txt in b772049. Instead of just updating that ref,
replace the dodgy blacklist-based code for selecting files with a
whitelist based on `git ls-files`."
wincent,2016-01-25 07:49:04,https://api.github.com/repos/wincent/command-t/git/commits/4749088503255bb17caf347a26f5ea7ad74cb2e5,4749088503255bb17caf347a26f5ea7ad74cb2e5,"Restore compatiblity with Ruby 0.8.7

Ruby 1.8.7 doesn't like trailing commas in method invocation parameter
lists.

Closes: https://github.com/wincent/command-t/issues/198

Made sure there were no other instances of this by using this clowny
Perl one-liner in Zsh (note the use of Zsh-style `**` file glob):

```
perl -0pe 's/,\s*\)/XXXXXX/m' ruby/**/*.rb|less
```

And searching for ""XXXXXX""."
wincent,2016-01-19 21:37:53,https://api.github.com/repos/wincent/command-t/git/commits/b772049e7e92a354702a9400ad185070ac7e7646,b772049e7e92a354702a9400ad185070ac7e7646,"Provide improved README for GitHub

Instead of a symlink to the voluminous Vim documentation, provide a
short Markdown README that embeds a demo screencast gif.

Related: https://github.com/wincent/command-t/issues/194"
wincent,2016-01-19 19:54:39,https://api.github.com/repos/wincent/command-t/git/commits/9b8ccff5e66e14eb34c7f54aa5c8064475ca7b74,9b8ccff5e66e14eb34c7f54aa5c8064475ca7b74,"Rakefile: print a warning if mechanize is not installed

Check as part of ""prerelease"" task. Will save me from having the upload
task explode in my face and having to re-run it every time I switch to a
new machine, or a new Ruby version."
wincent,2016-01-19 19:50:37,https://api.github.com/repos/wincent/command-t/git/commits/275988332c3f213401b988191df7ee07819bc9ce,275988332c3f213401b988191df7ee07819bc9ce,"Make ""help"" the default Rake task

Also dropping the reference to mechanize in the help text, as I mean to
roll a check into the ""prerelease"" task instead."
wincent,2016-01-19 19:49:15,https://api.github.com/repos/wincent/command-t/git/commits/a55150553381792c72634389bbc4084a4550a4e2,a55150553381792c72634389bbc4084a4550a4e2,Format consistently within Rakefile
wincent,2016-01-19 19:36:12,https://api.github.com/repos/wincent/command-t/git/commits/4da3a8175649099a030f91b322ed2aca223f98ef,4da3a8175649099a030f91b322ed2aca223f98ef,doc: finalize HISTORY section prior to 3.0 release
wincent,2016-01-19 19:02:53,https://api.github.com/repos/wincent/command-t/git/commits/10992d821b156b6c31b762c04ebc78fb20bbedfd,10992d821b156b6c31b762c04ebc78fb20bbedfd,"Remove references to wincent.com product pages and repo

I'm not linking to those old product pages any more, and am not planning
on making any updates to them either. Things have been living on GitHub
for a while now and the docs should reflect that.

If I'm doing that, I might as well update the repo references as well.
Although the true canonical home continues to be git.wincent.com, in
practice everybody is cloning from GitHub anyway (even me; see:
https://github.com/wincent/wincent/blob/5dbee52ae32b6/.gitmodules#L16).

Related: https://github.com/wincent/command-t/issues/194"
wincent,2016-01-18 17:56:36,https://api.github.com/repos/wincent/command-t/git/commits/96c6b65801b6745f33ab4b2f0d32a35e64625783,96c6b65801b6745f33ab4b2f0d32a35e64625783,"Update specs to RSpec 3 syntax

Done using:

```
$ gem install transpec
$ transpec -f # -f needed because I have some untracked files
$ bundle exec rspec # verify that everything worked
```

Closes: https://github.com/wincent/command-t/issues/193"
wincent,2016-01-17 18:11:33,https://api.github.com/repos/wincent/command-t/git/commits/6836a15a4823bb80c7377e4fec5d3fca31765f93,6836a15a4823bb80c7377e4fec5d3fca31765f93,"Avoid using deprecated/removed `be_` matchers

To play nicely with RSpec 3 (even though I am using RSpec 2.14.7
locally), which has removed the `be_true` and `be_false` matchers in
favor of `be_truthy`/`be_falsey`, which is what the old matchers
actually meant.

Reported here: https://github.com/wincent/command-t/issues/190

Using the alternative (`be true`, `be false` etc) recommended here:

https://github.com/rspec/rspec-rails/issues/976#issuecomment-38967708

Because my intention actually always was to assert strictly against
`true`/`false`."
wincent,2016-01-17 17:59:57,https://api.github.com/repos/wincent/command-t/git/commits/899504141c37aa5ebe92b67fc0523a743b007cf0,899504141c37aa5ebe92b67fc0523a743b007cf0,doc: Add note about scroll avoidance
wincent,2016-01-17 17:47:26,https://api.github.com/repos/wincent/command-t/git/commits/33d8f3ea047ae93cbc4a227a9a7c970ffa06e3ad,33d8f3ea047ae93cbc4a227a9a7c970ffa06e3ad,"Fix spurious test failure

Commit 8e15beb added a new `g:CommandTRecursiveMatch` setting, which
defaults to ""true"" in the context of Command-T running inside Vim (ie.
preserving the previous behavior) but it does not default to ""true"" in
the artificial context of the test suite, causing one of the specs to
fail spuriously.

Fix that by explicitly setting `:recurse => true` in the test suite.

(Of course, maybe it _should_ be defaulting to true everywhere, for
consistency, but I wanted to keep the fix minimal before looking into a
deeper/riskier refactoring.)

Fixes: https://github.com/wincent/command-t/issues/189"
wincent,2016-01-17 15:57:23,https://api.github.com/repos/wincent/command-t/git/commits/7c2414ae6eee4d5f3f5b6f3fbe9382678f2170aa,7c2414ae6eee4d5f3f5b6f3fbe9382678f2170aa,"Silence some Clang warnings

Specifically:

    match.c:142:31: warning: implicit conversion loses integer precision: 'VALUE' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        m.case_sensitive        = case_sensitive;
                                ~ ^~~~~~~~~~~~~~
    matcher.c:184:39: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            thread_args[i].thread_count = thread_count;
                                        ~ ^~~~~~~~~~~~
    matcher.c:185:39: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            thread_args[i].thread_index = i;
                                        ~ ^"
wincent,2016-01-02 04:01:24,https://api.github.com/repos/wincent/command-t/git/commits/bfabb96351176c76dea0feb6bb3ece7e580b14c7,bfabb96351176c76dea0feb6bb3ece7e580b14c7,"Avoid unwanted scrolling when showing/hiding match window

Thanks to @jordwalke for pointing out this problem and sharing a gist
showing that the unwanted displacement can be avoided by moving the
cursor in each window away from the side on which a split is going to be
created.

This is pretty much a ghastly hack, so I'll want to bake it for a long
time to be sure that it's worthy of landing on master. Note the
unpleasant Vim APIs that make it impossible to get useful information
from the windows without switching to them first. This requires us to do
some awkward save/restore shenanigans and a bunch of manual focus
management."
wincent,2016-01-01 23:09:21,https://api.github.com/repos/wincent/command-t/git/commits/b5ca645b279cabf010a3a98da60e334da36ff88b,b5ca645b279cabf010a3a98da60e334da36ff88b,"Switch some defaults to more reasonable values

As per discussion in:

https://github.com/wincent/command-t/issues/187"
wincent,2016-01-01 19:54:14,https://api.github.com/repos/wincent/command-t/git/commits/978c0a6bbd8a318023a19787f95cc2041c614db6,978c0a6bbd8a318023a19787f95cc2041c614db6,"Merge branch 'pull/186'

Originally submitted at: https://github.com/wincent/Command-T/pull/186

* pull/186:
  Update reference to 2.0a in readme"
lencioni,2016-01-01 18:22:35,https://api.github.com/repos/wincent/command-t/git/commits/b06d9074148a2811daecbdde2dcf08a6506de64b,b06d9074148a2811daecbdde2dcf08a6506de64b,"Update reference to 2.0a in readme

Now that 2.0 has been released, we can update this reference."
wincent,2015-12-28 19:29:11,https://api.github.com/repos/wincent/command-t/git/commits/900daf8d98a797509c4eb4242bc28d0e0fdb367f,900daf8d98a797509c4eb4242bc28d0e0fdb367f,doc: finalize HISTORY section pre-release
wincent,2015-12-26 07:55:26,https://api.github.com/repos/wincent/command-t/git/commits/47d8a9fcb124ad74d39ef69f55bf34497d3df8b2,47d8a9fcb124ad74d39ef69f55bf34497d3df8b2,"Use input() to make sure deprecation messages get seen

Quoting the rationale from what I wrote in a similar instance in the
Ferret plug-in:

"" Use `input()` to show error output to user. Ideally, we would do this in a way
"" that didn't require user interaction, but this is the only reliable mechanism
"" that works for all cases. Alternatives considered:
""
"" (1) Using `:echomsg`
""
""     When not using vim-dispatch, the screen is getting cleared before the
""     user sees it, even with a pre-emptive `:redraw!` beforehand. Note that
""     we can get the message to linger on the screen by making it multi-line and
""     forcing Vim to show a prompt (see `:h hit-enter-prompt`), but this is not
""     reliable because the number of lines required to force the prompt will
""     vary by system, depending on the value of `'cmdheight'`.
""
""     When using vim-dispatch, anything we output ends up getting swallowed
""     before the user sees it, because something it is doing is clearing the
""     screen. This is true no matter how many lines we output.
""
"" (2) Writing back into the quickfix/location list
""
""     This interacts poorly with vim-dispatch. If we write back an error message
""     and then call `:copen 1`, vim-dispatch ends up closing the listing before
""     the user sees it.
""
"" (3) Using `:echoerr`
""
""     This works, but presents to the user as an exception (see `:h :echoerr`)."
wincent,2015-12-26 07:41:53,https://api.github.com/repos/wincent/command-t/git/commits/afc9442869b8d690d859b228e66847f38fd2e929,afc9442869b8d690d859b228e66847f38fd2e929,"Show deprecation warnings for deleted functions

Given that most people use Command-T via a plug-in manages they end up
tracking `HEAD` of `master` and there is no nice way to warn about
upcoming breaking changes (ie. there are no ""releases"" for these people
and release notes are meaningless; furthermore, people may end up
upgrading without any conscious decision to do so).

So, add functions that show an error when a deprecated function is
called, and then call through to the new function.

Note that depending on the function being called, the screen may be
cleared which means that the user may not see the error. I might add a
prompt here to address this issue because many users may not be aware of
the `:messages` command which can be used to display previous error
messages if they scroll or otherwise move out of view."
wincent,2015-12-26 00:01:28,https://api.github.com/repos/wincent/command-t/git/commits/67c770469309a37aebad886ed2e9022674853fd3,67c770469309a37aebad886ed2e9022674853fd3,doc: turn .vimrc references into helpful links
wincent,2015-12-25 23:59:19,https://api.github.com/repos/wincent/command-t/git/commits/246df91e776526b43ce3426b18602418b1e04620,246df91e776526b43ce3426b18602418b1e04620,Update docs to reflect changes to <Plug> mappings
wincent,2015-12-25 23:51:22,https://api.github.com/repos/wincent/command-t/git/commits/922a808dc8cac5348834cf8cb94c6d1e8f5b218c,922a808dc8cac5348834cf8cb94c6d1e8f5b218c,"Add <leader>j mapping for :CommandTJump

As usual, don't do it if a mapping already exists."
wincent,2015-12-25 23:33:54,https://api.github.com/repos/wincent/command-t/git/commits/f1265d1145a9978aa22478b3436ce741b12fbc5f,f1265d1145a9978aa22478b3436ce741b12fbc5f,"Use <Plug> mappings as per standard best practises

I am doing this in my other plug-ins, so it makes sense to do it here as
well. This is kind of recommended in the Vim help (""used for mappings
which the user might want to map a key sequence to"")."
wincent,2015-12-18 20:05:04,https://api.github.com/repos/wincent/command-t/git/commits/835122fbe3180be8e650ea4b9b9880f8e225a57f,835122fbe3180be8e650ea4b9b9880f8e225a57f,"Future-proof copyright year ranges

I used to like manually updating these whenever a particular file was
touched because it gave me an indication at a glance of how ""fresh"" a
file was (ie. I could see files which hadn't been touched in years).

But now, laziness is starting to weigh more heavily than curiosity, so I
am updating these to be future-proof, once and for all."
wincent,2015-12-18 19:45:42,https://api.github.com/repos/wincent/command-t/git/commits/7a9dccc85fe1425180b0825c9810655aa425fb56,7a9dccc85fe1425180b0825c9810655aa425fb56,"Add g:CommandTCursorColor option

This makes it possible to configure the color used for the cursor in the
Command-T prompt.

Closes: https://github.com/wincent/command-t/issues/184"
wincent,2015-11-15 01:25:57,https://api.github.com/repos/wincent/command-t/git/commits/ae1671d1b74408653bb87d5499134c3efc2a41f8,ae1671d1b74408653bb87d5499134c3efc2a41f8,"Merge branch 'pull/179'

Originally submitted at: https://github.com/wincent/Command-T/pull/179

* pull/179:
  doc: update HISTORY and AUTHORS section
  Apply `:keepalt` treatment to `:file` call
  Keep the current alternate file name when opening the GoToFile buffer"
wincent,2015-11-15 01:24:30,https://api.github.com/repos/wincent/command-t/git/commits/a07a26cdce78c54f480041962949ae18d4f191d2,a07a26cdce78c54f480041962949ae18d4f191d2,doc: update HISTORY and AUTHORS section
wincent,2015-11-15 01:16:39,https://api.github.com/repos/wincent/command-t/git/commits/a3ae5a71c086f1c2145a5d3663a05fdf2cc7b1cb,a3ae5a71c086f1c2145a5d3663a05fdf2cc7b1cb,"Apply `:keepalt` treatment to `:file` call

This just updates the other code branch, matching the corresponding
change in 279cefa (that one was originally prepared against the `master`
branch, so it didn't have the `:file` call in it)."
djjcast,2015-11-12 00:16:16,https://api.github.com/repos/wincent/command-t/git/commits/279cefa0b302d342a48c43b8d23b6b79be5edea6,279cefa0b302d342a48c43b8d23b6b79be5edea6,Keep the current alternate file name when opening the GoToFile buffer
wincent,2015-09-27 07:01:17,https://api.github.com/repos/wincent/command-t/git/commits/09af65e5b8a4eed40a776dbc54638d2ced4256ff,09af65e5b8a4eed40a776dbc54638d2ced4256ff,"Create separate fallback metadata file

I initially wanted changes to the `metadata.rb` file to be ignored by
Git, but adding it to the `.gitignore` merely stops untracked files from
being visible to Git, it doesn't stop changes to the (tracked)
`metadata.rb` file from turning up.

In this commit, I make `metadata.rb` truly untracked and therefore
ignored. The fallback metadata now lives in a separate
`metadata/fallback.rb` file. I think the way I've done this should work
seamlessly for both existing installs (that already have a `metadata.rb`
file) and for new installs too (which will get the `metadata.rb` for the
first time during the build).

Addresses:

https://github.com/wincent/command-t/issues/174"
wincent,2015-09-12 22:55:03,https://api.github.com/repos/wincent/command-t/git/commits/752ba5515b322a139995e9f62b8a51dc3ba0e100,752ba5515b322a139995e9f62b8a51dc3ba0e100,"Switch from vimball to zip for distribution

Not a fan of the vimball format, so the move to 2.0 seems like as good a
time as any to get rid of it.

This commit is almost entirely untested, although I did run `rake
archive` at least. I guess I'll get around to testing the full flow when
it comes time for a release..."
wincent,2015-09-12 22:37:02,https://api.github.com/repos/wincent/command-t/git/commits/90901c8caea32547899c2b596667958937ca435f,90901c8caea32547899c2b596667958937ca435f,"doc: Include 'tabstop' setting in modeline

To be honest, I can't remember why I added this -- it's been sitting
around in my worktree for a while -- but I don't think it can hurt
either."
wincent,2015-08-21 21:44:10,https://api.github.com/repos/wincent/command-t/git/commits/e0eaac7697ac9eb9d3a7c3ddc67b63e41bf016cf,e0eaac7697ac9eb9d3a7c3ddc67b63e41bf016cf,doc: add docs for g:CommandTRecursiveMatch option
wincent,2015-08-21 21:12:07,https://api.github.com/repos/wincent/command-t/git/commits/0b4c1cb8e45cae20fed4c78d5952ca0c820ef503,0b4c1cb8e45cae20fed4c78d5952ca0c820ef503,Fix a (cosmetic) typo in a comment
wincent,2015-08-21 21:06:53,https://api.github.com/repos/wincent/command-t/git/commits/8e15beb3438947bd1e86be949829d40eb9caf99f,8e15beb3438947bd1e86be949829d40eb9caf99f,"Add g:CommandTRecursiveMatch setting

Defaults to on, which causes the existing recursive matching algorithm
to be used.

Turn it off to go faster, at the cost of lower quality match scoring.

  $ RECURSE=1 bin/benchmarks/matcher.rb
                          user     system      total        real
  pathological        0.140000   0.000000   0.140000 (  0.143769)
  command-t           0.420000   0.010000   0.430000 (  0.423103)
  chromium (subset)   0.530000   0.010000   0.540000 (  0.376918)
  chromium (whole)    2.170000   0.020000   2.190000 (  1.124166)
  $ RECURSE=0 bin/benchmarks/matcher.rb
                          user     system      total        real
  pathological        0.010000   0.000000   0.010000 (  0.013087)
  command-t           0.350000   0.000000   0.350000 (  0.349293)
  chromium (subset)   0.310000   0.010000   0.320000 (  0.220329)
  chromium (whole)    1.150000   0.020000   1.170000 (  0.783651)"
wincent,2015-07-05 06:15:47,https://api.github.com/repos/wincent/command-t/git/commits/1b380dd594efea0792d0c33306bef5aa505f1361,1b380dd594efea0792d0c33306bef5aa505f1361,"Vim: remove unnecessary `silent!` prefix

This was required because of my use of `<unique>`, but I later added the
`maparg()` check, which means the `<unique>` condition will never
trigger.

I'm going to leave the `<unique>` tag in, though, as a form of
assertion."
wincent,2015-07-05 06:15:39,https://api.github.com/repos/wincent/command-t/git/commits/0e1375ce8655e239657761061f1b0d869974b514,0e1375ce8655e239657761061f1b0d869974b514,Prefer unabbreviated Vim setting names
wincent,2015-07-02 14:22:44,https://api.github.com/repos/wincent/command-t/git/commits/3553559cc037f0cd7e9084754f21de7fc68b4b96,3553559cc037f0cd7e9084754f21de7fc68b4b96,"Mark a bunch of internal functions as ""private""

These aren't strictly ""private"" in the way that script-local functions
would be, but moving them into the ""private"" autoloaded namespace makes
it obvious that they are not intended for external use, at least.

In order to make them actually inaccessible, I'd have to re-write a
large chunk of Command-T in Vimscript so that I could use script-local
functions, but that doesn't sound like much fun."
wincent,2015-07-02 14:11:49,https://api.github.com/repos/wincent/command-t/git/commits/7cef00769f191c6c05fd3f741f47d7cf294b64f0,7cef00769f191c6c05fd3f741f47d7cf294b64f0,"Switch to shorter function names

This is a compatibility-breaking change (although people probably
shouldn't be interacting with these directly, other than the
just-documented ""statusline"" functions), so make a note of it in the
docs."
wincent,2015-07-01 17:22:04,https://api.github.com/repos/wincent/command-t/git/commits/eb3ee0b1f91a5f21665c9da26ef85a1ee095da79,eb3ee0b1f91a5f21665c9da26ef85a1ee095da79,"doc: Add section on extensibility

Note that I'm using some new method names in here (eg.
`commandt#Load` instead of `commandt#CommandTLoad`), because I'm
planning on switching to those new names before the next release."
wincent,2015-06-27 06:40:25,https://api.github.com/repos/wincent/command-t/git/commits/c42289a19295257d8276d001b2654796802788fe,c42289a19295257d8276d001b2654796802788fe,"Make statusline more useful

I don't want to actually set the statusline, because that might break
people's existing set-ups (they may be doing some special statusline
set-up of their own), but I do want to make it easier to customize the
statusline. So, this commit does two things:

(1) Sets a ""command-t"" `'filetype'`, which can be used to identify the
    Command-T match listing window (eg. from an `autocmd`) and take
    action on it, such as setting the statusline.

(2) Instead of just setting `GoToFile` at the buffer name, make it
    something more meaningful, like:

      Command-T [Buffers]
      Command-T [Files]
      Command-T [Jumps]
      Command-T [Recent]
      Command-T [Tags]

Note that I'll have to do a major version bump when this goes out,
because people may be relying on the old buffer name, as it was
previously the only way to identify Command-T.

I'll make a subsequent commit to my dotfiles repo showing how to
leverage this functionality, and then I'll update the docs here as well."
wincent,2015-06-24 15:44:43,https://api.github.com/repos/wincent/command-t/git/commits/bd4af86cc4680d6a14d8389f8a69f65255a99c1f,bd4af86cc4680d6a14d8389f8a69f65255a99c1f,"Don't blow up if people delete Command-T's unlisted, hidden buffer

Apparently, people may manually do this.

Fixes: https://github.com/wincent/command-t/issues/166"
wincent,2015-06-02 14:53:53,https://api.github.com/repos/wincent/command-t/git/commits/2554d14b80adbb4a24eb76156c86086f4941f901,2554d14b80adbb4a24eb76156c86086f4941f901,"doc: Add missing attribution

Meant to include this in dbe58f4 but overlooked it."
wincent,2015-06-02 14:52:17,https://api.github.com/repos/wincent/command-t/git/commits/2b27ca72adb12776e07c7abbb6bebe84f55144e0,2b27ca72adb12776e07c7abbb6bebe84f55144e0,"Merge branch 'KJTsanaktsidis/ignore-spaces' into next

Originally submitted at:

  https://github.com/wincent/command-t/pull/159

* KJTsanaktsidis/ignore-spaces:
  doc: Update HISTORY section
  doc: Add KJ Tsanaktsidis to the AUTHORS section
  Fix formatting in matcher_spec.rb
  Shorten CommandTIgnoreSpacesInSearchTerm to CommandTIgnoreSpaces
  doc: Remove excess whitespace
  Add option to ignore spaces in search term"
wincent,2015-06-02 14:51:35,https://api.github.com/repos/wincent/command-t/git/commits/dbe58f41e6dcc60a1c0c37dbafa828657eb53d56,dbe58f41e6dcc60a1c0c37dbafa828657eb53d56,doc: Update HISTORY section
wincent,2015-06-02 14:50:35,https://api.github.com/repos/wincent/command-t/git/commits/69787c1ca93c8ee6dc03fae30e972f266ecb09c4,69787c1ca93c8ee6dc03fae30e972f266ecb09c4,doc: Add KJ Tsanaktsidis to the AUTHORS section
wincent,2015-06-02 14:38:37,https://api.github.com/repos/wincent/command-t/git/commits/c9c86b827f9b7233f030a2561f88a7571c6a3c6c,c9c86b827f9b7233f030a2561f88a7571c6a3c6c,"Fix formatting in matcher_spec.rb

Minor tweaks:

- kill unnecessary blank line
- pull out `paths` local variable to reduce some long lines
- breathing room inside curlies
- don't use explicit curlies for trailing optional hash arguments"
wincent,2015-06-02 14:36:47,https://api.github.com/repos/wincent/command-t/git/commits/bcff1e9783d60793af609b4bd71f36c6d31cc23b,bcff1e9783d60793af609b4bd71f36c6d31cc23b,"Shorten CommandTIgnoreSpacesInSearchTerm to CommandTIgnoreSpaces

Rename the option. I don't think we're ever going to have another
""ignore spaces"" type option, so we don't need this verbosity."
wincent,2015-06-02 14:31:07,https://api.github.com/repos/wincent/command-t/git/commits/4171ec212baf3d5c0f31503aac20e83a10e97125,4171ec212baf3d5c0f31503aac20e83a10e97125,doc: Remove excess whitespace
KJTsanaktsidis,2015-05-17 11:47:19,https://api.github.com/repos/wincent/command-t/git/commits/8aec3f14d37a747f6a3f9733d84fe038e96cc539,8aec3f14d37a747f6a3f9733d84fe038e96cc539,"Add option to ignore spaces in search term

With g:CommandTIgnoreSpacesInSearchTerm set, any spaces you type
into the Command-T bar are ignored."
wincent,2015-04-29 23:29:00,https://api.github.com/repos/wincent/command-t/git/commits/d35895e196ec692c9d35b282db153b9e96354a7a,d35895e196ec692c9d35b282db153b9e96354a7a,Move FileLimitExceeded closer to the one place it is used
wincent,2015-04-29 19:31:08,https://api.github.com/repos/wincent/command-t/git/commits/2f2f5cea2f7ec22795178bfded1201cec84945a0,2f2f5cea2f7ec22795178bfded1201cec84945a0,"Fix release note preparation bug

I broke this in bc379eddf9. Ironically, at the time I said:

> As a matter of hygiene, `and` and `or` are best avoided in typical
> conditional contexts (their lower precedence can catch the unwary by
> surprise).

I still think that `and` can be surprising due to precedence, but here I
got stung by another arguable smell: using an assignment in a `while`
condition. It's a common pattern, and in C GCC will warn you unless you
write it as `((foo = thing))`, but in Ruby there's a strong idiomatic
tendency to avoid parens. I've met in the middle here by adding single
parens but not double ones."
wincent,2015-04-29 19:29:02,https://api.github.com/repos/wincent/command-t/git/commits/17f51f9668a9b7c3cfff65f87f22ffb1e49ae648,17f51f9668a9b7c3cfff65f87f22ffb1e49ae648,"Rakefile: use shorthand for chomp!

At least locally, I'm using a newish version of Ruby, so I can use
`#chomp!` in this task."
wincent,2015-04-29 19:26:39,https://api.github.com/repos/wincent/command-t/git/commits/90c00440fb42cb9c50de0e953e256717a8e044ed,90c00440fb42cb9c50de0e953e256717a8e044ed,"Move release note preparation into a callable Rake task

There is a regression here, and there has been for a couple of releases,
so to make it easier to debug, let's make the note preparation callable
with `rake notes`."
wincent,2015-04-29 19:16:21,https://api.github.com/repos/wincent/command-t/git/commits/7ae73e01886bd58fe3baf94689ee3360edc39771,7ae73e01886bd58fe3baf94689ee3360edc39771,doc: add new (empty) section for next release
wincent,2015-04-29 19:08:07,https://api.github.com/repos/wincent/command-t/git/commits/f7344ebbe95c532b2ad01f19877d6d611db0193b,f7344ebbe95c532b2ad01f19877d6d611db0193b,Update docs in preparation for 1.13 release
wincent,2015-04-29 18:43:09,https://api.github.com/repos/wincent/command-t/git/commits/d7999efcdf39183783263c9a4f9b7e04f1ff0476,d7999efcdf39183783263c9a4f9b7e04f1ff0476,"Fix infinite loop on <tab>

Whoops; a typo meant we were wrapping `#toggle_focus` in a guard, and
then wrapping the wrapped version in another guard, which meant that it
would end up calling itself repeatedly. Ouch.

The added regression spec isn't super awesome; it passes with the fix,
but hangs without the fix, so it is more documentation of what went
wrong than a real regression test per-se.

Fixes:

  https://github.com/wincent/command-t/issues/157"
wincent,2015-04-13 22:47:23,https://api.github.com/repos/wincent/command-t/git/commits/d20b347a348c2f34e86ab15aa2827aadfe10f5f8,d20b347a348c2f34e86ab15aa2827aadfe10f5f8,"Avoid W10 when running in read-only mode

This was originally reported here:

https://wincent.com/issues/2088

But for some reason it didn't repro for me then, but it definitely does
now, with both `vim -R` and `view`. As soon as we try to make an
assignment to `@@buffer[...]` Vim issues the warning.

Make sure this doesn't happen by explicitly setting `noreadonly` in the
""GoToFile"" buffer."
wincent,2015-04-13 21:55:07,https://api.github.com/repos/wincent/command-t/git/commits/1ec22fef02f7abdb3a3115931166c1eb49982c3a,1ec22fef02f7abdb3a3115931166c1eb49982c3a,"Clear CommandTMRUBuffer augroup before adding to it

It's true that this entire file is protected by a guard, but in case
somebody really, really wants to re-evaluate it they could use `:unlet`
to circumvent the guard and then re-source the file.

So, let's just follow standard best practice of clearing the entire
augroup before adding to it."
wincent,2015-04-13 21:46:52,https://api.github.com/repos/wincent/command-t/git/commits/7a8c51021ebd198be7b4d6305fd528f1cc34ff17,7a8c51021ebd198be7b4d6305fd528f1cc34ff17,"Pacify Vint

Vint[0] is a vimscript linter. This commit makes some tweaks based on
its suggestions. I don't think it found any substantive issues, but it
makes sense for Command-T to be ""clean"" according to the linter.

Issues addressed in this commit:

- prefer single quotes over doubles (nothing potentially harmful was
  changed here)
- use `function!` in ""autoload/"" (found a couple that I'd missed)
- use `abort` keyword with ""autoload/"" functions (no real behavior
  change here, as all the functions a pretty much just one-liners that
  call Ruby, so there is on distinction between aborting and continuing)
- explicitly choose case-sensitive string comparison (meaningless for
  empty strings, but let's do it anyway to keep the linter happy)

[0]: https://github.com/Kuniwak/vint"
wincent,2015-04-11 01:35:15,https://api.github.com/repos/wincent/command-t/git/commits/11156c201a424c8db6c0957183b45a6b42fc5c46,11156c201a424c8db6c0957183b45a6b42fc5c46,"Add a regression spec for the recent Watchman clowntownery

Rejigged things a bit in the scanner in order to make faking an error
condition more straightforward, then we just verify that it falls back
to the superclass."
wincent,2015-04-11 01:21:49,https://api.github.com/repos/wincent/command-t/git/commits/c38ad03b075231680ba2a32b86527a25b030aa0f,c38ad03b075231680ba2a32b86527a25b030aa0f,DRY up error handling in watchman scanner
wincent,2015-04-11 01:10:53,https://api.github.com/repos/wincent/command-t/git/commits/462508f9e7af1db6cae717244979b313567eebaf,462508f9e7af1db6cae717244979b313567eebaf,"Handle Watchman errors a little more fine-grainedly

Although, the `exitstatus.zero?` check is unlikely to fire; it seems
that Watchman always returns with an exit code of 0 even for blatantly
wrong invocations, and instead reports errors by the 'error' key in the
results object."
wincent,2015-04-10 15:12:16,https://api.github.com/repos/wincent/command-t/git/commits/be09d2d493dddb1fbef5d84717501cd9bba53862,be09d2d493dddb1fbef5d84717501cd9bba53862,"Eagerly load extension, to detect compilation problems earlier

As noted in the previous commit, the logic here wasn't really doing much
because we were only lazily loading the extension, so the likely
codepath was:

1. Try to load controller, fail
2. Modify load path
3. Try to load controller, succeed

The comment in there about falling back to the stub if there was a
problem with C extension wasn't really accurate. For example, if you
forgot to compile the extension, you'd still go through the sequence
above because we weren't even attempting to require it. Similarly, if
you compiled with the wrong Ruby version, we wouldn't find out about it
until later (and likely, with a segfault).

So, this commit reworks the logic here to do two new things:

- explicitly check run-time Ruby version against compile-time version;
  if we don't have metadata about the compile-time Ruby version we skip
  the check
- eagerly load the extension so that we can report problems via the
  `Stub` as we originally intended; this will catch the case where the
  user forgets to compile

Note that there is still one case that we can't handle, and that is the
one where the extension was previously compiled with the wrong version
of Ruby, but with an older version of Command-T so no metadata.rb file
existed or was updated. In that scenario, we skip the version check and
try to load the extension; because it exists but is the wrong version,
we'll probably segfault. From experience, segfaults are pretty much
assured if the mismatch is large (eg. 1.8.7 vs 2.0.0). If it's just a
difference in patchlevel then you _might_ get a segfault at some later
time (like during a search).

In any case, I think this commit leaves us in a better place. I tested
it with the following combinations:

- mismatched `metadata.rb`: prints diagnostic info
- unknown/default `metadata.rb`: loads and runs
- missing extension: prints diagnostic info
- unknown/default `metadata.rb` + big version mismatch (1.8.7 vs 2.0.0):
  segfaults"
wincent,2015-04-10 14:52:30,https://api.github.com/repos/wincent/command-t/git/commits/af62f93c2780e6f7ee0c5d857919a01e92421c4d,af62f93c2780e6f7ee0c5d857919a01e92421c4d,"Gather metadata and prepare to use it for installation diagnostics

When you run `extconf.rb` we get the compile-time `RUBY_VERSION` and
`RUBY_PATCHLEVEL` so that we can show it later on in a diagnostic
message if you try to run in a version of Vim with a mismatched Ruby.

Note that I say ""prepare"" to use it because in looking over this, I've
realized that the existing `Stub` module is effectively useless. We're
no longer eagerly loading the extension, which means that a failure to
compile will never be the cause of us using `CommandT::Stub`. In fact,
in order to get to the stub line, some other basic `require` has to have
failed, which in turn means things are busted and the `require` for
`Stub` likely won't work either.

I'll address that in a separate commit."
wincent,2015-04-10 01:27:35,https://api.github.com/repos/wincent/command-t/git/commits/d9741423d8f34e5c89aa8e01c051b0ba2298e286,d9741423d8f34e5c89aa8e01c051b0ba2298e286,Update docs prior to 1.12 release
wincent,2015-04-10 01:25:17,https://api.github.com/repos/wincent/command-t/git/commits/d6f4a465e09cddcfd592e0dbbae82f7f3fddbb3b,d6f4a465e09cddcfd592e0dbbae82f7f3fddbb3b,doc: Mention Watchman bugfix in docs
wincent,2015-04-10 01:21:49,https://api.github.com/repos/wincent/command-t/git/commits/05bc4ba3b5db3a9828c74cfadc21d7f92f2b47ba,05bc4ba3b5db3a9828c74cfadc21d7f92f2b47ba,"Fix incredibly clowny mis-nesting

Because we were rescuing within the class body and not the method body,
Watchman errors were bubbling up uncaught.

I think this has been broken since 542ccd4ab1c, suggesting I need a
regression test, which I will try and follow up with later."
wincent,2015-04-10 01:14:29,https://api.github.com/repos/wincent/command-t/git/commits/9773e0ed811d66b4b4d1433da3d51a8f65cfb98c,9773e0ed811d66b4b4d1433da3d51a8f65cfb98c,"Improve Watchman error messages

This isn't just about ""unavailability"". Let the Watchman error messages
show through in the exception text; it may be helpful, such as:

> CommandT::Scanner::FileScanner::WatchmanFileScanner::WatchmanError:
> unable to resolve root [PATH]: none of the files listed in global
> config root_restrict_files are present"
wincent,2015-04-09 15:30:42,https://api.github.com/repos/wincent/command-t/git/commits/404c41fc3f87ad7ec17d8a600efa4bf183384211,404c41fc3f87ad7ec17d8a600efa4bf183384211,"Make autocmd set-up consistent

Put the `MatchWindow` autocmds in a group, and make the group names
consistent across the project. Note that we don't need to worry about
the `MatchWindow` autocmds leaking in normal use, because the window
hangs around in the background and gets re-used."
wincent,2015-04-09 15:30:13,https://api.github.com/repos/wincent/command-t/git/commits/d47b3686a1b47e446d555078e842c8d6e113d7c9,d47b3686a1b47e446d555078e842c8d6e113d7c9,doc: Remove references to Gitorious
wincent,2015-03-17 00:26:56,https://api.github.com/repos/wincent/command-t/git/commits/9437a7e53391af6cfcc138234e549303f1345a95,9437a7e53391af6cfcc138234e549303f1345a95,"doc: mention g:CommandT{Ignore,Smart}Case in the tips section"
wincent,2015-03-11 01:03:07,https://api.github.com/repos/wincent/command-t/git/commits/87ef2612fa979690c646e43b22a38b89c503522e,87ef2612fa979690c646e43b22a38b89c503522e,Doc: update AUTHORS
wincent,2015-03-11 00:55:54,https://api.github.com/repos/wincent/command-t/git/commits/d418d80a6ea24f3b8dd501357b03d1c5a3b1658b,d418d80a6ea24f3b8dd501357b03d1c5a3b1658b,"Merge branch 'gh/ZyX-I/status-methods' into next

* gh/ZyX-I/status-methods:
  Git: update .mailmap
  Clean up status-line methods
  Add methods useful for status lines"
wincent,2015-03-11 00:54:01,https://api.github.com/repos/wincent/command-t/git/commits/49bd30d19763ff0f1e10b53e95b74e6e2305a02a,49bd30d19763ff0f1e10b53e95b74e6e2305a02a,Git: update .mailmap
wincent,2015-03-05 16:21:02,https://api.github.com/repos/wincent/command-t/git/commits/c4776c9e10e910edae98f9a22be9e9b8d45d7ee9,c4776c9e10e910edae98f9a22be9e9b8d45d7ee9,"Clean up status-line methods

One substantive fix in here:

- add missing (unbalanced) paren in `commandt#CommandTPath` method

And some other consistency/polish tweaks:

- add some comments indicating what the added methods are for
- use `&&` instead of `and`
- remove redundant explicit `if`/`return true`/`else`/`return false`
  construct
- allow `#path` and `#active_finder` methods to return `nil`; one of
  these requires a change to the caller to preserve desired behavior,
  but the other one can be left as-is (interpolating `nil` in a string
  is a no-op)
- use parens around method parameter lists"
ZyX-I,2014-11-08 10:19:57,https://api.github.com/repos/wincent/command-t/git/commits/a8eb1ac651fbd200c076b7f21245e811755f18bf,a8eb1ac651fbd200c076b7f21245e811755f18bf,Add methods useful for status lines
wincent,2015-03-06 15:39:20,https://api.github.com/repos/wincent/command-t/git/commits/4e3497d98f5d413904d2474f4b8c36c5ca652cbc,4e3497d98f5d413904d2474f4b8c36c5ca652cbc,"Don't create empty class bodies

Lurking on the Unicorn mailing list, I learnt that by avoiding creating
a heavyweight class definition scope, you can save a couple hundred
bytes."
wincent,2015-02-28 15:58:22,https://api.github.com/repos/wincent/command-t/git/commits/f661d9d9e5d5c1b06f465c54fa974852ef4fcc51,f661d9d9e5d5c1b06f465c54fa974852ef4fcc51,"Merge branch 'gh/mathstuf/git-submodule-scan' into next

Originally submitted at:

  https://github.com/wincent/command-t/pull/149

* gh/mathstuf/git-submodule-scan:
  doc: Update for the new g:CommandTGitScanSubmodules option
  Make @scan_submodules code work
  Expect g:CommandTGitScanSubmodules to be a boolean
  git: add option for scanning submodules"
wincent,2015-02-28 01:58:25,https://api.github.com/repos/wincent/command-t/git/commits/e4f40c3995c8b9f6f1f59967c117df30587a68e8,e4f40c3995c8b9f6f1f59967c117df30587a68e8,"doc: Update for the new g:CommandTGitScanSubmodules option

- whitespace fix
- minor rewording, adding a link back to the `g:CommandTFileScanner`
  option
- updated HISTORY and AUTHORS sections"
wincent,2015-02-28 06:57:12,https://api.github.com/repos/wincent/command-t/git/commits/15ee0dce9b037a5ab3283248effbe43715c43527,15ee0dce9b037a5ab3283248effbe43715c43527,"Make @scan_submodules code work

Based on https://github.com/mathstuf/command-t/commit/e8c68da80c, but
works."
wincent,2015-02-28 01:57:44,https://api.github.com/repos/wincent/command-t/git/commits/8d4a76861a8a3c6245acdbcc7615e9735904dea0,8d4a76861a8a3c6245acdbcc7615e9735904dea0,Expect g:CommandTGitScanSubmodules to be a boolean
wincent,2015-02-10 03:39:18,https://api.github.com/repos/wincent/command-t/git/commits/f90d3173f5e29df4da3b370572c68727d2c056ea,f90d3173f5e29df4da3b370572c68727d2c056ea,Update copyright year ranges
wincent,2015-02-09 17:00:32,https://api.github.com/repos/wincent/command-t/git/commits/187ee57c768f4d1bbde6bafb51792eafec031bf5,187ee57c768f4d1bbde6bafb51792eafec031bf5,"Merge branch 'blueyed/fix-rxvt' into next

* blueyed/fix-rxvt:
  doc: Update HISTORY for Daniel's rxvt patch
  Add `rxvt` to the pattern for terms where Escape should not be mapped

Originally submitted at:

  https://github.com/wincent/command-t/pull/151"
wincent,2015-02-09 17:00:13,https://api.github.com/repos/wincent/command-t/git/commits/56bbef8c5ad103f41be4574138a98f246b9b8b3c,56bbef8c5ad103f41be4574138a98f246b9b8b3c,doc: Update HISTORY for Daniel's rxvt patch
blueyed,2015-02-09 16:18:18,https://api.github.com/repos/wincent/command-t/git/commits/82486f41f875ad60ba1af4d2cb473e745d5753a5,82486f41f875ad60ba1af4d2cb473e745d5753a5,"Add `rxvt` to the pattern for terms where Escape should not be mapped

Originally submitted in relation to:

  https://github.com/wincent/command-t/pull/151

For some reason, had a merge conflict, so in applying it, I took the
opportunity to alphabetize the alternatives within the regex.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2015-02-09 16:49:00,https://api.github.com/repos/wincent/command-t/git/commits/fdbd126bb4f3938de5274d935ad25b4a0ab875c4,fdbd126bb4f3938de5274d935ad25b4a0ab875c4,"Merge branch 'blueyed/highlight-fix' into next

* blueyed/highlight-fix:
  doc: Add info to HISTORY section for Daniel's patch
  DRY up repeated `#gsub` calls in `#get_cursor_highlight`
  Only use `highlight!` when needed
  Teach get_cursor_highlight to return an array
  Clean-up comments in MatchWindow#get_cursor_highlight
  Fix handling output of "":hi Cursor"" with link + definition

Originally submitted at:

  https://github.com/wincent/command-t/pull/150

With some follow-up from me."
wincent,2015-02-09 16:48:28,https://api.github.com/repos/wincent/command-t/git/commits/0d47258bb21be7b4d38b6d9c9fc5530823079ad6,0d47258bb21be7b4d38b6d9c9fc5530823079ad6,doc: Add info to HISTORY section for Daniel's patch
wincent,2015-02-09 16:46:31,https://api.github.com/repos/wincent/command-t/git/commits/5c198bb945b6496e596de333d4d49fed20a0fc78,5c198bb945b6496e596de333d4d49fed20a0fc78,DRY up repeated `#gsub` calls in `#get_cursor_highlight`
wincent,2015-02-09 16:40:34,https://api.github.com/repos/wincent/command-t/git/commits/90f9e31aaf199f581272126fe3658cfa29b3881f,90f9e31aaf199f581272126fe3658cfa29b3881f,"Only use `highlight!` when needed

As mentioned in ab15fa2831b, we previously used `:highlight` for
everything, but the need to use `:highlight!` for some specific cases
led us to use `:highlight!` for everything.

This commit makes things a little more nuanced by marking the specific
cases that need the bang, and using it only in those cases."
wincent,2015-02-09 16:31:05,https://api.github.com/repos/wincent/command-t/git/commits/ab15fa2831bb458894e871e10d05bf5d45d5bf5f,ab15fa2831bb458894e871e10d05bf5d45d5bf5f,"Teach get_cursor_highlight to return an array

As of cfd65e2 `#get_cursor_highlight` may actually return more than one
`:highlight` command in order to support restoring highlights that
involve patterns like:

  :highlight! link Cursor VisualNOS

Rather than returning a string with another command tacked on, let's
just always return an array.

The one possible gotcha here is that this kind of rule must be set up
using `:highlight!` and not `:highlight`, or Vim will complain with:

  E414: group has settings, highlight link ignored

So, this commit changes the `#show_cursor` to always use `:highlight!`
instead of `:highlight`. It's possible this might have unintended
side-effects, so I'm going to follow up with a tweak that makes it a
little more nuanced."
wincent,2015-02-09 16:24:48,https://api.github.com/repos/wincent/command-t/git/commits/7d3f60b516e227af154d9de4d47fa7b57f16617b,7d3f60b516e227af154d9de4d47fa7b57f16617b,Clean-up comments in MatchWindow#get_cursor_highlight
blueyed,2015-02-09 14:33:37,https://api.github.com/repos/wincent/command-t/git/commits/cfd65e2585904dbe6aac52fa34bd92acc664f4ed,cfd65e2585904dbe6aac52fa34bd92acc664f4ed,"Fix handling output of "":hi Cursor"" with link + definition

This gets set up through my solarized theme:

    hi! link Cursor VisualNOS

`:hi Cursor` looks as follows then:

    Cursor         xxx ctermfg=8 ctermbg=12 guifg=bg guibg=fg
                       links to VisualNOS

Without this patch there's the following error when closing the match
window:

  > Error detected while processing function CommandTCancel:
  > line    1:
  > E416: missing equal sign: links to VisualNOS

This uses a hack to apply two `highlight` commands, and should maybe get
improved to return and handle a list of highlight definitions."
mathstuf,2015-02-06 03:14:32,https://api.github.com/repos/wincent/command-t/git/commits/08b548635d85157f00f07f1d3a03b48a3e24a34e,08b548635d85157f00f07f1d3a03b48a3e24a34e,git: add option for scanning submodules
wincent,2015-02-04 18:25:42,https://api.github.com/repos/wincent/command-t/git/commits/0ec989f818ff2dd53f208e2c12f4836f9d52a04e,0ec989f818ff2dd53f208e2c12f4836f9d52a04e,"doc: Mention Nicholas T's pull request in the HISTORY section

Forgot to do this earlier."
wincent,2015-02-04 18:23:17,https://api.github.com/repos/wincent/command-t/git/commits/afa8dfe890decc482eb56f738e529d7fd447c596,afa8dfe890decc482eb56f738e529d7fd447c596,"Add g:CommandTEncoding option

This is a hacky workaround for:

  https://github.com/wincent/command-t/issues/130

And most users will never need to use it, but the impact is relatively
low so I'm going to include it anyway."
wincent,2015-02-04 18:12:13,https://api.github.com/repos/wincent/command-t/git/commits/c13684ff88aef73e286232b9edc19b670bf0dd81,c13684ff88aef73e286232b9edc19b670bf0dd81,"Merge branch 'NicholasTD07/rvm-doc' into next

* NicholasTD07/rvm-doc:
  Git: add Nicholas T. to the .mailmap file
  doc: Add Nicholas T. to the AUTHORS section
  doc: Add more details about setting Ruby verisons"
wincent,2015-02-04 18:11:38,https://api.github.com/repos/wincent/command-t/git/commits/909c9bb6f893d813ec0e550f80f2368014d916b7,909c9bb6f893d813ec0e550f80f2368014d916b7,Git: add Nicholas T. to the .mailmap file
wincent,2015-02-04 18:10:15,https://api.github.com/repos/wincent/command-t/git/commits/1097f0e04d905274cf195ff2fe3e87450dc74af9,1097f0e04d905274cf195ff2fe3e87450dc74af9,doc: Add Nicholas T. to the AUTHORS section
wincent,2015-02-04 17:37:57,https://api.github.com/repos/wincent/command-t/git/commits/74ac76272c70b82b7cddded602de3b46dec256df,74ac76272c70b82b7cddded602de3b46dec256df,"doc: Mention possible need to do ""make clean"" for re-builds

Fixes:

https://github.com/wincent/command-t/issues/144"
wincent,2015-02-04 02:16:49,https://api.github.com/repos/wincent/command-t/git/commits/888c69bce728feaa7285f6f018b2c64775e265fb,888c69bce728feaa7285f6f018b2c64775e265fb,"Wrap Vim-called methods in a error logging guard

When an unrescued Ruby exception is raised Vim prints the exception text
but not the backtrace, yielding reports like this one:

> Error detected while processing function commandt#CommandTShowFileFinder:
> line    2:
> TypeError: can't convert nil into String

(Source: https://github.com/wincent/command-t/issues/146)

This commit wraps all Vim-called methods (ie. all messages sent to
`$command_t` in autoload/commandt.vim) in a guard that catches
exceptions, prints the stacktrace and then re-raises them. This should
yield more useful output; for example, the above would become something
like:

> ~/.vim/bundle/command-t/ruby/command-t/controller.rb:59:in `+'
> ~/.vim/bundle/command-t/ruby/command-t/controller.rb:59:in `show_file_finder'
> Error detected while processing function commandt#CommandTShowFileFinder:
> line    2:
> TypeError: can't convert nil into String

We trim off the two bottom frames (""main"", and the guard)."
wincent,2015-01-12 19:14:31,https://api.github.com/repos/wincent/command-t/git/commits/13760a725779b65fa0f2ebef51806f3c05a52550,13760a725779b65fa0f2ebef51806f3c05a52550,"Fix truthiness check when setting default SCM markers

I've been writing too much JavaScript lately, so stupidly expected
`markers && markers.length` to check for the presence and non-emptiness
of the `markers` array, which won't work because `0` is truthy in Ruby.

Switch to `Enumerable#any?` instead, which is roughly equivalent.
(Roughly, because `[nil, false].any?` is `false`, even though the array
has a non-zero length; the difference here shouldn't matter though.)

Thanks to Andri Möll for pointing out the mistake."
wincent,2014-12-16 16:45:03,https://api.github.com/repos/wincent/command-t/git/commits/e5a691898d53bc669245101385d472ca1be4d4ca,e5a691898d53bc669245101385d472ca1be4d4ca,"Merge branch 'blueyed/allow-reload' into next

* blueyed/allow-reload:
  doc: Update HISTORY for 'blueyed/allow-reload' change
  Allow reloading of the plugin (use bang with :fun/:com)"
wincent,2014-12-16 16:44:06,https://api.github.com/repos/wincent/command-t/git/commits/9d54fbff557732bdd8e1eec6d829db732ac675a4,9d54fbff557732bdd8e1eec6d829db732ac675a4,doc: Update HISTORY for 'blueyed/allow-reload' change
blueyed,2014-12-16 11:46:59,https://api.github.com/repos/wincent/command-t/git/commits/76242e94d1bcb352172ea8283647fe8f821fdc58,76242e94d1bcb352172ea8283647fe8f821fdc58,"Allow reloading of the plugin (use bang with :fun/:com)

Original pull request:

  https://github.com/wincent/command-t/pull/139

To reload, you'll have to do something like:

  :unlet g:command_t_loaded
  :unlet g:command_t_autoloaded
  :source path/to/plugin/command-t.vim
  :source path/to/autoload/commandt.vim

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-12-16 16:26:12,https://api.github.com/repos/wincent/command-t/git/commits/1369ccb3bfba68827b3ff66b7b8fd3f1383b7785,1369ccb3bfba68827b3ff66b7b8fd3f1383b7785,"Merge branch 'blueyed/fix-doc-pwd' into next

* blueyed/fix-doc-pwd:
  doc: Update HISTORY section with reference to Daniel Hahler's patch
  Fix doc: :CommandT uses g:CommandTTraverseSCM"
wincent,2014-12-16 16:24:57,https://api.github.com/repos/wincent/command-t/git/commits/039a1e964bf444dc5e0fd091c09c530548f62364,039a1e964bf444dc5e0fd091c09c530548f62364,doc: Update HISTORY section with reference to Daniel Hahler's patch
blueyed,2014-12-16 11:48:37,https://api.github.com/repos/wincent/command-t/git/commits/41f4034709be95917a0fa7f83e99ab8482a6bba5,41f4034709be95917a0fa7f83e99ab8482a6bba5,"Fix doc: :CommandT uses g:CommandTTraverseSCM

Original pull request:

  https://github.com/wincent/command-t/pull/140

Applied a minor tweak for clarity (ie. mention ""current project"" before
referring to the potentially confusing `g:CommandTTraverseSCM` setting).

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-12-16 16:05:47,https://api.github.com/repos/wincent/command-t/git/commits/3252faa5ef1e4c3f797702d4507bbb70400f3f9c,3252faa5ef1e4c3f797702d4507bbb70400f3f9c,"Merge branch 'vlsd/cursorbug' into next

* vlsd/cursorbug:
  doc: Update for cursor color restoration fix
  Cursor saving now looks for newlines and removes them"
wincent,2014-12-16 16:04:25,https://api.github.com/repos/wincent/command-t/git/commits/bda2a53efd05658265a48ead7438cbdcd418cf79,bda2a53efd05658265a48ead7438cbdcd418cf79,doc: Update for cursor color restoration fix
vlsd,2014-12-15 20:15:38,https://api.github.com/repos/wincent/command-t/git/commits/5eaa9bfd1487153505a0034a1830c68f6ab5c886,5eaa9bfd1487153505a0034a1830c68f6ab5c886,"Cursor saving now looks for newlines and removes them

Original pull request:

  https://github.com/wincent/command-t/pull/138

Changes:

- double-quotes to singles
- instead of turning newlines into spaces, compress any run of
  whitespace into a single space

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-11-17 16:56:14,https://api.github.com/repos/wincent/command-t/git/commits/3d640a8baa6d1934d2b5d5d0df059595413cdfaf,3d640a8baa6d1934d2b5d5d0df059595413cdfaf,"Remove unused debugging macros from watchman.c

The Watchman module is solid at this point, so let's remove the
debugging macros which I haven't had to use since the module was
originally developed."
wincent,2014-11-17 16:47:25,https://api.github.com/repos/wincent/command-t/git/commits/d8bf8ca19832c4d38a8449b22e333409d7b66d65,d8bf8ca19832c4d38a8449b22e333409d7b66d65,"DRY up requires of command-t/ext

We can require this in the common superclass (`Finder`) rather than in
all of the subclasses. The other place that needs the extension (the
'watchman' scanner) is invoked from the `FileFinder`, so doesn't need to
`require` it itself directly."
wincent,2014-11-08 23:53:58,https://api.github.com/repos/wincent/command-t/git/commits/2f6186e206576010016d9154f275175b42dacef5,2f6186e206576010016d9154f275175b42dacef5,"Add :CommandTLoad command

This command is intended to make extending Command-T via ""monkey
patching"" easier, by providing an easy way to trigger immediate loading
of the plug-in files, rather than relying on prior lazy loading, or
having to replicate the `LOAD_PATH`-management logic that
`autoload/commandt.vim` provides.

See motivating discussion at:

https://github.com/wincent/command-t/pull/131"
wincent,2014-11-05 16:58:21,https://api.github.com/repos/wincent/command-t/git/commits/10eff30d9d35247ddb23c1c3eeec30960d0cfbc7,10eff30d9d35247ddb23c1c3eeec30960d0cfbc7,"Use autoloading for most Ruby classes/modules

We used to use autoloading pervasively up until 0387f20d60a4671a4, where
we removed it because of compatibility problems across different
versions of Ruby on different platforms (specifically, the behavior when
autoloading classes provided by C extensions was divergent across
platforms and Ruby versions).

This commit goes back to using autoloading, but this time only for
classes and modules outside the C extension.

- moved `Finder` subclasses into `Finder` namespace (ie. `BufferFinder`
  becomes `Finder::BufferFinder` etc) and `Scanner` subclasses into
  `Scanner` namespace (ie. `BufferScanner` -> `Scanner::BufferScanner`);
  is more verbose but allows us to push the corresponding autoload
  directives down a layer, keeping the top level `CommandT` module small
- extract `FileLimitExceeded` exception class out into its own file, so
  it too can be autoloaded

Overall, this makes our `require` statements much simpler and will make
it much less likely that we require things that we don't need in the
future.

Note that the changes in namespacing make this diff look bigger than it
really is; view with `git show -b` or similar to see what really changed
(ie. ignoring whitespace)."
wincent,2014-11-05 06:05:22,https://api.github.com/repos/wincent/command-t/git/commits/c13dbf558bbd1d3726538d313f399997e9fc4e02,c13dbf558bbd1d3726538d313f399997e9fc4e02,"Remove useless hunk from end of command-t.vim

This is a vestige of when we didn't used to use Vim's autoload feature
(we had to abort processing before we got to all the Ruby-specific
code).

Now the Ruby-specific code is in another file, this early-exit clause no
longer serves a purpose, so let's remove it."
wincent,2014-11-05 05:57:50,https://api.github.com/repos/wincent/command-t/git/commits/4ddc0ce10f5f9f97a7551477f5627769f7861101,4ddc0ce10f5f9f97a7551477f5627769f7861101,"Remove references to multiruby

Sadly, I haven't used multiruby for a long while, so this code has
effectively been dead and unexercised.

It would be nice to replace this with something that is rbenv-aware
instead; I'll add that to my TODO list."
wincent,2014-11-05 05:46:42,https://api.github.com/repos/wincent/command-t/git/commits/bc379eddf954b5c4834a5d5338c597921f50febe,bc379eddf954b5c4834a5d5338c597921f50febe,"Replace and/or with &&/||

As a matter of hygiene, `and` and `or` are best avoided in typical
conditional contexts (their lower precedence can catch the unwary by
surprise). About the only place I feel they are called for now are
exceedingly rare post-fix statements (eg. `do_something and raise 'foo'`
and the like).

So, replace them with with `&&` and `||`. In addition to providing a
friendlier precedence, these are actually more readable, despite their
superficial ugliness (it's easier for the brain to match symbols amidst
a larger expression than English words among a string of words).

Additionally, change one `while ... do` to `while ...` for consistency;
the `do` is permitted here but best reserved for block (lambda) syntax."
wincent,2014-11-05 05:35:45,https://api.github.com/repos/wincent/command-t/git/commits/f8434122555c309f2b235422ce12b4c72c9cfc91,f8434122555c309f2b235422ce12b4c72c9cfc91,"Move CommandT::VIM::PathUtilities out of VIM namespace

Other than a reference to `VIM::pwd`, there's nothing in this module
that makes it belong in the `VIM` namespace (we should reserve that for
extensions to Vim's Ruby runtime API).

So, this commit moves it up a level and updates the `require` statements
(plus adds one missing one, and removes one unnecessary one)."
wincent,2014-11-05 01:49:21,https://api.github.com/repos/wincent/command-t/git/commits/b1e70dc7a376b7c71a0763f9d21cfe1247e179c7,b1e70dc7a376b7c71a0763f9d21cfe1247e179c7,"Extract nearest_ancestor into a module of its own

`PathUtilities` is mixed in in a bunch of places, but only one of those
makes use of the `nearest_ancestor` method.

Stop spraying it around and instead put it in a module of its own that
the controller (alone) includes."
wincent,2014-11-04 15:47:30,https://api.github.com/repos/wincent/command-t/git/commits/9a2653bc91be13b810e63a394574277192927e5d,9a2653bc91be13b810e63a394574277192927e5d,"Handle 'hidden' unwanted split edge case

If you had `'hidden'` off and a modified buffer in two windows, the old
logic here would run `:sp` instead of the `:e`, causing an unwanted
split.

We used `:sp` in order to avoid seeing an error message from Vim, but it
turns out that in this case Vim won't actually show an error because it
considers the extra window containing the modified buffer to mean that
you're not actually abandoning the buffer with unsaved changes.

The fix here detects that scenario by counting windows with the current
buffer in them. Note that this won't consider windows in other tabs,
because Vim doesn't expose those at all through `VIM::Window`.

Fixes:

https://github.com/wincent/command-t/issues/124"
wincent,2014-11-04 15:21:14,https://api.github.com/repos/wincent/command-t/git/commits/7a0a5c204eecb97b956eb69bd5436b7385253ac8,7a0a5c204eecb97b956eb69bd5436b7385253ac8,"Avoid hang on Windows with g:CommandTTraverseSCM != ""pwd""

The `while` loop in `PathUtilties#nearest_ancestor` was never
terminating on Windows because the root of the filesystem is not ""/"" but
rather ""C:/"" (or some similar drive letter).

The original fix implemented here was to replace:

  return nil if path == '/'

with:

  return nil if path == '/' || path =~ %r{\A[A-Z]:[/\\]\z}

This looks for any letter, followed by a colon, followed by ""/"" or ""\"".
In my testing on a single Windows VM (running XP and Ruby 1.9) I found
that ""/"" is used, but I wanted to be a bit more liberal in what I accept
here in order to minimize the risk of running into an infinite loop on
other versions of Windows, or other versions of Ruby.

In the end, however, I went with the more future-proof fix of checking
for whether the loop has advanced.

Fixes:

https://github.com/wincent/command-t/issues/110"
wincent,2014-10-17 15:39:06,https://api.github.com/repos/wincent/command-t/git/commits/223092c178c45a2d0597f611667603e24f01f954,223092c178c45a2d0597f611667603e24f01f954,"Print helpful message if ""mkmf"" require fails

Or at least hopefully a bit helpful..."
wincent,2014-10-17 15:32:16,https://api.github.com/repos/wincent/command-t/git/commits/4be3d4b49e4a19ac3fdcd23760fdcfa99be61333,4be3d4b49e4a19ac3fdcd23760fdcfa99be61333,"doc: mention the potential need to install ruby-dev/ruby-devel etc

I'm not going into specifics here because there are too many platform
variations possible, but I got an email from a user stating that he
needed to do:

  sudo apt-get install ruby-dev

And that the error message he got didn't make this obvious:

  'require': no such file to load — mkmf (LoadError)

(I might also consider catching that `LoadError` and trying to print
something more helpful.)"
wincent,2014-10-11 00:31:38,https://api.github.com/repos/wincent/command-t/git/commits/7c2da2b9b936f599663f211a657ccafa8bc869ec,7c2da2b9b936f599663f211a657ccafa8bc869ec,Update docs for 1.11.3 release
wincent,2014-10-11 00:28:12,https://api.github.com/repos/wincent/command-t/git/commits/f4ed2e03ae2bc54854f578f0c1abd3426c18f813,f4ed2e03ae2bc54854f578f0c1abd3426c18f813,"Fix g:CommandTTraverseSCM='pwd' staleness

In fixing https://github.com/wincent/command-t/issues/108, I introduced
another bug: https://github.com/wincent/command-t/issues/109, and in
fixing that I introduced: https://github.com/wincent/command-t/issues/118

Specifically, under 'pwd' mode we were re-using the `@path` value and
never resetting it. Try to make this more obvious and robust, at the
expense of some repetition."
wincent,2014-10-11 00:28:07,https://api.github.com/repos/wincent/command-t/git/commits/831b10ec6bfaf7b57abd45ecc8ff36568c9350f2,831b10ec6bfaf7b57abd45ecc8ff36568c9350f2,Add a spec for .escape_for_single_quotes
wincent,2014-09-20 01:14:11,https://api.github.com/repos/wincent/command-t/git/commits/0e5e1a07c444d9ea8d682693977fd074115d1bdd,0e5e1a07c444d9ea8d682693977fd074115d1bdd,"Merge branch 'sherzodv/fix-badfname-error'

* sherzodv/fix-badfname-error:
  doc: Add Sherzod Gapirov to the AUTHORS section
  Fix ArgumentError bug

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-09-20 01:13:37,https://api.github.com/repos/wincent/command-t/git/commits/06857c2fc8ac4a7273e12ab6da523334b322d987,06857c2fc8ac4a7273e12ab6da523334b322d987,"doc: Add Sherzod Gapirov to the AUTHORS section

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
sherzodv,2014-09-07 17:58:42,https://api.github.com/repos/wincent/command-t/git/commits/c9b06803cb530d1f0743e0f7dd0e6d848f5c841b,c9b06803cb530d1f0743e0f7dd0e6d848f5c841b,"Fix ArgumentError bug

Silently skip adding bad file names in scanner to a search list.

Fixes:

  https://wincent.com/issues/2154

Originally submitted at:

  https://github.com/wincent/command-t/pull/113

Except from original PR text:

  This bug appears when command-t encounters some files coming from
  cp1251 systems (e.g. cloned from perforce).

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-09-01 19:45:42,https://api.github.com/repos/wincent/command-t/git/commits/fec3e7e784291932d371dc27f020071dda82da0d,fec3e7e784291932d371dc27f020071dda82da0d,doc: Update docs for 1.11.2 release
wincent,2014-09-01 19:36:56,https://api.github.com/repos/wincent/command-t/git/commits/763fcfe84631e0c108db05c428b337ba52200e10,763fcfe84631e0c108db05c428b337ba52200e10,"Fix NoMethodError when outside of a repository

In fixing:

  https://github.com/wincent/command-t/issues/108

I recently introduced a new bug, wherein people were seeing:

  Error detected while processing function commandt#CommandTShowFileFinder:
  NoMethodError: undefined method `chomp' for nil:NilClass

when trying to use Command-T outside of an SCM repo.

I had forgotten that `#nearest_ancestor` might return `nil`, which meant
that `@path` could end up being unset. I hadn't noticed because I am
pretty much always inside an SCM repo, or not using Command-T.

This commit fixes that by ensuring `@path` is always set. I was tempted
to leave a comment to the effect of `# nearest_ancestor may return nil`
but hopefully the location where I've placed the line makes this
semi-obvious. Hopefully... Seems this kind of bug wouldn't have happened
in a statically-typed language.

Thanks to @dymv for the initial report, @DanielFerguson for finding the
commit that introduced the breakage, @MichaelJosephKramer for pointing
out that the issue only occurs outside of SCM directories, and @nilbus
for confirming the issue.

Fixes:

  https://github.com/wincent/command-t/issues/109"
wincent,2014-08-29 00:52:41,https://api.github.com/repos/wincent/command-t/git/commits/bed8f4a33d07ceb9bbec1646069f40ecf0fff87e,bed8f4a33d07ceb9bbec1646069f40ecf0fff87e,Doc: update docs for 1.11.1 release
wincent,2014-08-28 15:19:01,https://api.github.com/repos/wincent/command-t/git/commits/726b66ae05d825396e325ece727bf5d07d34bcb8,726b66ae05d825396e325ece727bf5d07d34bcb8,doc: Update HISTORY
wincent,2014-08-28 15:13:40,https://api.github.com/repos/wincent/command-t/git/commits/712fc176d19b890762cb0d0e331897ca280c231c,712fc176d19b890762cb0d0e331897ca280c231c,"Unbreak 'g:CommandTTraverseSCM' setting of ""path""

We were re-using the last-seen `@path` setting rather than updating each
time.

Fixes:

  https://github.com/wincent/command-t/issues/108"
wincent,2014-08-27 07:24:29,https://api.github.com/repos/wincent/command-t/git/commits/a3bf8df2564ade2161d8a3c8b3739a91d37b5fab,a3bf8df2564ade2161d8a3c8b3739a91d37b5fab,"Bail earlier for ineligible dot-file matches

This gets us a nice speed-up for the typical workloads (ie. everything
but the atypcial pathological test case); below are the best of three
runs before and after this change:

Before:

                          user     system      total        real
  pathological        0.110000   0.000000   0.110000 (  0.116645)
  command-t           0.360000   0.000000   0.360000 (  0.357542)
  chromium (subset)   0.790000   0.010000   0.800000 (  0.383790)
  chromium (whole)    3.290000   0.010000   3.300000 (  1.288277)

After:

                          user     system      total        real
  pathological        0.110000   0.000000   0.110000 (  0.117410)
  command-t           0.400000   0.000000   0.400000 (  0.403234)
  chromium (subset)   0.560000   0.010000   0.570000 (  0.310002)
  chromium (whole)    2.460000   0.010000   2.470000 (  1.053952)

So we knock about 19% off the chromium (subset) time, and about 18% off
the chromium (whole) time. I am pretty surprised at the size of the
gains here, given the small number of dot-files in the benchmark test
data, but I added some specs to increase my confidence and they suggest
that the behavior hasn't changed, so let's run with this and see what
happens.

The code here is mostly simpler, because the dot-file logic is better
localized. The conditionals themselves continue to be a bit gnarly/ugly."
wincent,2014-08-27 01:25:14,https://api.github.com/repos/wincent/command-t/git/commits/a97a653298904d6f8cbd6961c6106ac3a45f7161,a97a653298904d6f8cbd6961c6106ac3a45f7161,"Add MRU.last method

Try to keep `MRU.stack` as close to being an internal implementation
detail as possible. Callers should care about the data structure used
for the list of recently-used buffers.

We might also consider removing `MRU.stack` entirely -- it only has one
caller -- and replacing it with something more agnostic. (Or at least
something named in a more agnostic way.)"
wincent,2014-08-27 01:21:32,https://api.github.com/repos/wincent/command-t/git/commits/e45d8dcfb862fc70a35a7820f87f28baf5d1bcff,e45d8dcfb862fc70a35a7820f87f28baf5d1bcff,"Put initialize method at top of class

By convention, this is where people expect to see this."
wincent,2014-08-26 01:19:19,https://api.github.com/repos/wincent/command-t/git/commits/d72ea4dcd62b06d082803941b0b7010f414bddf5,d72ea4dcd62b06d082803941b0b7010f414bddf5,"Centralize setting-readers in CommandT::VIM

This is slightly more verbose, because we have to specify
`VIM::get_{bool,number,string}` etc where where we formerly just did
`get_{bool,number,string}`, but it keeps things tidier by confining all
setting-reading logic to one place."
wincent,2014-08-26 01:02:57,https://api.github.com/repos/wincent/command-t/git/commits/6b5576eee972648d49066d3d845a2a7d1c733a40,6b5576eee972648d49066d3d845a2a7d1c733a40,"Move wild_ignore method out of CommandT::VIM

It only has one caller, the `FileScanner` class, so keep it local to
that."
wincent,2014-08-26 00:47:32,https://api.github.com/repos/wincent/command-t/git/commits/ca68e95f2c3962b1af1fab75106b551749e6397c,ca68e95f2c3962b1af1fab75106b551749e6397c,"Consolidate has_conceal? and has_syntax? methods

One method will do just fine here.

Added a bit of documentation to make it clear what the difference
between the two methods is. Vim itself has a somewhat confusing
distinction between ""&option"" (option that exists) and ""+option"" (option
that works), so you still might need to read `:h exists()`."
wincent,2014-08-22 15:04:20,https://api.github.com/repos/wincent/command-t/git/commits/e81ce15e46f11d714a5a6996aa3c4b1c298a22ec,e81ce15e46f11d714a5a6996aa3c4b1c298a22ec,"Make Prompt#redraw method private

It has no external callers."
wincent,2014-08-22 14:55:42,https://api.github.com/repos/wincent/command-t/git/commits/f36e707cc51c81f10715b9180ac48b5f9607c0f0,f36e707cc51c81f10715b9180ac48b5f9607c0f0,"Remove some redundant requires

These classes all require, directly or indirectly, the `Scanner` class,
which already does a `require 'command-t/vim'`. This commit drops the
redundant requires."
wincent,2014-08-22 14:46:46,https://api.github.com/repos/wincent/command-t/git/commits/1f941a74230c109c887306469e7b48282d66eb61,1f941a74230c109c887306469e7b48282d66eb61,"Make exception messages consistent

Make the message in the `FileScanner` class identical to the one in the
`Finder` class."
wincent,2014-08-22 00:50:31,https://api.github.com/repos/wincent/command-t/git/commits/cc6c692a7e6f69019dfbadf105e6158e9d48d022,cc6c692a7e6f69019dfbadf105e6158e9d48d022,"doc: Document file scanner 'wildignore' differences

Perhaps I knew about these differences once and forgot about it; I just
noticed in preparing the last commit that the ""ruby"" scanner is not like
""git"" or ""find"".

Document the differences, and update the examples that were using "".git""
and "".hg"" (which work as you'd want only with the ""ruby"" scanner) to
instead use ""**/.git/*"" and ""**/.hg/*"" (which will work for all the
scanners except the ""watchman"" scanner, which doesn't use 'wildignore'
at all)."
wincent,2014-08-21 15:13:50,https://api.github.com/repos/wincent/command-t/git/commits/1b1c3ee7ba052d5b7dd9659d60e61e75f26b9f3a,1b1c3ee7ba052d5b7dd9659d60e61e75f26b9f3a,"Marginally simplify prefix_len handling

Instead of adding 1 to the prefix handling in multiple places, do it
once only, when initially setting it.

This uncovered a bug in the prefix handling in the `GitFileScanner`,
where we are passing in 0 as a `prefix_len` to the `#path_excluded?`
method, and it was getting bumped to 1, trimming off the first character
in the path and making it pretty much useless.

In testing this I noticed that the `'wildignore'` behavior is
fundamentally different between the `RubyFileScanner` and the other two
scanners that potentially consult `'wildignore'` (the `GitFileScanner`
and the `FindFileScanner`).

The Ruby scanner uses DFS and immediately terminates the recursion on
seeing an ignored path. As a result, if I ignore ""node_modules"" then I
won't see any files under that directory.

With the other scanners, however, such an ignore would only prevent me
from seeing a file called ""node_modules"", but not any file rooted
underneath a directory with that name (eg. ""node_modules/project/foo"").

I hadn't noticed this before because I only ever really use the
`RubyFileScanner` (for small projects) and the `WatchmanFileScanner`
(for large projects)."
wincent,2014-08-21 14:43:08,https://api.github.com/repos/wincent/command-t/git/commits/2744a46d14b148e3454213f29130dd24ce8f081e,2744a46d14b148e3454213f29130dd24ce8f081e,"Make CommandT::VIM::Window a module

As noted in the previous commit, this class had no instance methods and
it was meaningless to instantiate an instance of it.

If it's just serving as a namespaced container for methods, it should be
a module. This commit makes it so."
wincent,2014-08-21 14:39:57,https://api.github.com/repos/wincent/command-t/git/commits/cb9f357c7c64f33048cafd52446abab273b536fb,cb9f357c7c64f33048cafd52446abab273b536fb,"Remove repetitive `self.` in class method declarations

We have three classes/modules that contain no instance methods, only
class methods (and the fact that one of these is a class for which
instantiation is meaningless suggests that it should be a module; I'll
deal with that in a separate commit).

As they are just containers for class methods, get rid of the noise of
the repetitive `self.` in the method declarations by declaring the
methods in the module's metaclasses."
wincent,2014-08-21 14:33:56,https://api.github.com/repos/wincent/command-t/git/commits/22d1671d4a0624f6c53a4e8bd14653875fc8550c,22d1671d4a0624f6c53a4e8bd14653875fc8550c,"Remove spec/vim_formatter.rb

I stopped wanting to run specs inside of Vim a long time ago; Vim wants
to be single-threaded and modal (ha!) so it was never going to be a fun
workflow, and better alternatives exist (tmux, and vim-dispatch, if you
will).

So, remove the outdated formatter class, which doesn't work with the
version of RSpec in our Gemfile.lock anyway:

  $ bundle exec rspec -r ./spec/vim_formatter.rb -f Spec::Runner::Formatter::VimFormatter
  vim_formatter.rb:1:in `require': cannot load such file -- spec/runner/formatter/base_text_formatter (LoadError)"
wincent,2014-08-21 14:26:49,https://api.github.com/repos/wincent/command-t/git/commits/eebca18af2827efbe8a0eff162880511738c9d82,eebca18af2827efbe8a0eff162880511738c9d82,"Consistently use parens around method param lists

There was a mix of styles scattered throughout the codebase:

  def bar boom, bang
    # ...
  end

  def foo(bar, baz, bing)
    # ...
  end

Generally the older methods use the former style and the newer ones use
the latter. The early tendency to eschew params was driven by a desire
to embrace the ""Zen of Ruby"", which seemed to want to minimize use of
punctuation.

Since then, however, I've come around. The real ""Zen"" is actually to
minimize the use of punctuation but never to the extent that it reduces
readability. This is why Ruby has postfix conditionals and doesn't
require semi-colons to terminate statements (reduce clutter, improve
flow) but it has plenty of syntax involving punctuation.

In practice, the parens in function parameter lists serve as a useful
and instantly recognizable visual cue. They help readability more than
they introduce clutter.

Having worked on teams now with many non-Ruby programmers coming to
Ruby, I saw the confusion that paren-less method declarations brought.
And a quick survey of some high-profile Ruby projects shows that they
almost universally use parens in their param lists."
wincent,2014-08-21 05:37:26,https://api.github.com/repos/wincent/command-t/git/commits/468befc0c440ab7944d1377c7e490d84600cf9c1,468befc0c440ab7944d1377c7e490d84600cf9c1,doc: update HISTORY with wildignore fix
wincent,2014-08-21 01:51:01,https://api.github.com/repos/wincent/command-t/git/commits/542ccd4ab1c57cc73d484f3be708c3aa3bfdff75,542ccd4ab1c57cc73d484f3be708c3aa3bfdff75,"Simplify inheritance in FileScanner subclasses

The design of the FileScanner hierarchy has bugged me for a long time.
This commit cleans it up substantially, although there is still more
that could be done.

The re-use wasn't flowing in the right direction here, which showed up
as un-DRY-ness. Specifically, the superclass implemented caching in the
`#paths` method and the subclasses tried to leverage that by calling
`super`, but in some places the logic was duplicated (eg. wildignore
handling, cache updating and other management via explicit hash key
manipulation and calls to `#prepare_paths`).

This refactoring centralizes those concerns in the superclass, where
they belong. We delegate to the subclasses only for the cache-miss edge
case (edge case because it generally happen once only). This brings a
few benefits:

- no more cache logic (explicit key use) in subclasses
- no more cache management via `#prepare_paths` in subclasses
- no more wildignore management in subclasses
- less explicit exception-handling in subclasses
- less nesting in subclasses

The major thing that still smells is a mix of explicit param passing
and implicit communication via instance variables. This can be cleaned
up in a separate commit."
wincent,2014-08-21 01:06:08,https://api.github.com/repos/wincent/command-t/git/commits/67eab459438677723079af4db7daf1436300af5c,67eab459438677723079af4db7daf1436300af5c,"Fix ignoring of 'wildignore'

Since 0b8c6b44142fbb we've been ignoring Vim's built-in `'wildignore'`
setting and only filtering if `g:CommandTWildIgnore` is set.

We need to distinguish between these cases:

- user leaves `g:CommandTWildIgnore` unset; we fall through to
  `'wildignore'`, which defaults to """", and if it is empty, we do no
  filtering; otherwise we do filtering
- user sets `g:CommandTWildIgnore`; this overrides `'wildignore'` and we
  do filtering whenever it is non-empty

I have a sense that the handling might be able to be simplified, but for
now I just want to get the fix in.

Fixes:

  https://github.com/wincent/Command-T/issues/106"
wincent,2014-08-19 16:10:14,https://api.github.com/repos/wincent/command-t/git/commits/6df14dd78eedbef8f5c03519b670d5a961d220c1,6df14dd78eedbef8f5c03519b670d5a961d220c1,doc: mention Ruby 1.8.5 compatibility fixes in the HISTORY section
wincent,2014-08-19 16:08:47,https://api.github.com/repos/wincent/command-t/git/commits/29a023c791138ccfde48c0887cfeafcc6c93bd91,29a023c791138ccfde48c0887cfeafcc6c93bd91,"Attempt fix for build breakage on old Ruby

Reported here:

  https://github.com/wincent/Command-T/issues/104

`ruby extconf.rb` was blowing up with:

  extconf.rb:24: undefined method `+' for nil:NilClass (NoMethodError)

Alas, I can't test this, but I'll push this out to the ""next"" branch
anyway."
wincent,2014-08-19 16:05:49,https://api.github.com/repos/wincent/command-t/git/commits/b11f2c7092b19e1534919118781cbe1b2e585966,b11f2c7092b19e1534919118781cbe1b2e585966,"Don't assume RUBY_PATCHLEVEL exists

Apparently, on very old Ruby (1.8.5), this doesn't exist; see:

  https://github.com/wincent/Command-T/issues/104

I can't test this as I don't currently have access to a machine with
1.8.5 on it, but it seems a reasonable change to make."
wincent,2014-08-19 15:53:06,https://api.github.com/repos/wincent/command-t/git/commits/34d9e0ae01094f125e4f7811abeaa12c0c36af88,34d9e0ae01094f125e4f7811abeaa12c0c36af88,"Merge branch 'gh/pull/48' into next

* gh/pull/48:
  doc: Add Emily Strickland to AUTHORS section
  Remove unnecessary `#to_a` call
  Improve compatibility with Ruby 1.8.6"
wincent,2014-08-19 15:52:45,https://api.github.com/repos/wincent/command-t/git/commits/939c6c8102f56a10ef54f3bbd0d19bbb508ad4e8,939c6c8102f56a10ef54f3bbd0d19bbb508ad4e8,doc: Add Emily Strickland to AUTHORS section
wincent,2014-08-19 15:20:09,https://api.github.com/repos/wincent/command-t/git/commits/e1e7d30239fbebfca249388e172eb37897344b89,e1e7d30239fbebfca249388e172eb37897344b89,"Remove unnecessary `#to_a` call

I believe `#scan` will always return an array, so this isn't needed."
wincent,2014-08-19 05:26:08,https://api.github.com/repos/wincent/command-t/git/commits/2e28bf3bb87eaf6431c789a07e6510fee1ed0cab,2e28bf3bb87eaf6431c789a07e6510fee1ed0cab,"Merge branch 'gh/aledovsky/https-gitmodules' into next

Originally submitted as:

  https://github.com/wincent/Command-T/pull/103

As I noted in my comments on the PR, there are a few things to bear in
mind about these submodule URLs:

- if some people can't access port 9418, there are others whose Git
  wasn't built with support for HTTPS, so there is no one default which
  will work for everyone
- HTTPS is considered a ""dumb"" transport among the protocols used by Git
- these submodules are development dependencies only, and not necessary
  for the functioning of the plug-in
- you can easily override entries in .gitmodules for your environment
  (eg. with git config submodule.vendor/vimball.url
  https://github.com/tomtom/vimball.rb.git or similar`)

Among those, the first reason is the real kicker, which is why I
previously closed a similar pull request (#54). I would do the same for
this one, although the fact that the protocols are currently mixed and
nobody has complained suggests that perhaps nobody is relying on git
transport, so what the hey...

* gh/aledovsky/https-gitmodules:
  doc: Add Aleksandrs Ļedovskis to AUTHORS section
  Change submodule urls (git -> https)"
wincent,2014-08-19 05:25:46,https://api.github.com/repos/wincent/command-t/git/commits/4b9ad4dae7222cc8db0fe64a4fdc89decbf14755,4b9ad4dae7222cc8db0fe64a4fdc89decbf14755,doc: Add Aleksandrs Ļedovskis to AUTHORS section
aleksandrs-ledovskis,2014-08-18 19:19:32,https://api.github.com/repos/wincent/command-t/git/commits/cd82888eb8a07e53206c97a0cef2af4ef96684e4,cd82888eb8a07e53206c97a0cef2af4ef96684e4,"Change submodule urls (git -> https)

To work around too strict firewalls that block git's smart protocol port
9418.

Originally submitted at:

  https://github.com/wincent/Command-T/pull/103

Signed-off-by: Aleksandrs Ļedovskis <aleksandrs@ledovskis.lv>
Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-08-15 14:48:53,https://api.github.com/repos/wincent/command-t/git/commits/9a9b37e8c3cac982d1860ecc555d803c8d84dc5e,9a9b37e8c3cac982d1860ecc555d803c8d84dc5e,Git: ignore .ruby-version and vendor/bundle
wincent,2014-08-15 14:40:28,https://api.github.com/repos/wincent/command-t/git/commits/1b2bfdb8d9372f021054f149fd9501657e05e32c,1b2bfdb8d9372f021054f149fd9501657e05e32c,Update docs for 1.11 release
wincent,2014-08-15 14:35:25,https://api.github.com/repos/wincent/command-t/git/commits/14aad164906f5dfeb3458b05ec4a4e1e67ebb858,14aad164906f5dfeb3458b05ec4a4e1e67ebb858,"Try to detect SCM roots a little less strictly

This change was driven by working inside Git submodules. We traverse up
into the superproject, and you end up searching a much larger search
space than you want. In the case of my dotfiles repo it's even worse,
because if I am working in ~/.vim/bundle/command-t, ~/.vim is actually a
symlink to ~/code/wincent/.vim; ~/code/wincent/.vim/bundle/command-t is
a submodule of ~/code/wincent, and that gets used as the root. So not
only am I searching for more than I want (including any open files which
will be mirrored as ~/.vim/tmp/swap/some_file.rb.swp etc), the files I
am trying to find are also underneath a dot-directory, so I have to
prefix my searches with a period to get the files to show up.

So, this commit stops traversal at the submodule boundary and doesn't
keep going up to the superproject. In submodules .git will
still exist but in recent versions it will be a normal file containing a
""gitlink""; eg:

    gitdir: ../../../.git/modules/.vim/bundle/command-t

So now we just check for existence rather than directory-ness. This also
means that if you want to ever mark a diretory as a traversal boundary
you can just `touch .git` (or `touch .hg` etc) in it."
wincent,2014-08-14 14:40:39,https://api.github.com/repos/wincent/command-t/git/commits/953aa33ab33ca6059f85dc8ebb40c3b6bbaae39c,953aa33ab33ca6059f85dc8ebb40c3b6bbaae39c,"Fix (spurious) test failure on big-endian architectures

Our example includes a int_64_t value (the PDU's length prefix), which
is endian-sensitive and so needs to be asserted using native endianness.

Fixes:

  https://github.com/wincent/Command-T/issues/101
  https://bugzilla.redhat.com/show_bug.cgi?id=1130079"
wincent,2014-08-14 14:31:14,https://api.github.com/repos/wincent/command-t/git/commits/706840fcf6cbff74f9407150b9825785db56dc8d,706840fcf6cbff74f9407150b9825785db56dc8d,"Fix broken spec

Broken since 8a38757. Stub a setting to keep the old code path being
exercised."
wincent,2014-08-13 16:57:08,https://api.github.com/repos/wincent/command-t/git/commits/6c3814045646b841734a01898aadb18e9c0d63ca,6c3814045646b841734a01898aadb18e9c0d63ca,"doc: update accept selection configuration example

Incorporate what I learned from:

https://github.com/wincent/wincent/commit/8a95c3dba72616e03e62b2ffaabbea83392f983c

And add a link to a more complete example."
wincent,2014-08-13 16:42:35,https://api.github.com/repos/wincent/command-t/git/commits/d891f9d3cbf28c4386d10a71a0a041a605d598a6,d891f9d3cbf28c4386d10a71a0a041a605d598a6,"Merge branch 'voxik/appstream'

Originally submitted at:

  https://github.com/wincent/Command-T/pull/100

Includes:

* voxik/appstream:
  Add notice about AppStream data into documentation
  Update changelog.
  Add AppStream metadata (resolves #99).

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
voxik,2014-08-11 16:04:39,https://api.github.com/repos/wincent/command-t/git/commits/3627d2ee1db7b5842cd86326465b235d610b737c,3627d2ee1db7b5842cd86326465b235d610b737c,"Add notice about AppStream data into documentation

Originally submitted at:

https://github.com/wincent/Command-T/pull/100

Includes a tiny typo fix.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
voxik,2014-08-11 16:04:07,https://api.github.com/repos/wincent/command-t/git/commits/a4410380c390b20acd31f3c023ed91316c89cbc2,a4410380c390b20acd31f3c023ed91316c89cbc2,Update changelog.
voxik,2014-08-11 15:46:49,https://api.github.com/repos/wincent/command-t/git/commits/102f1cd008ca48aa5ec9166cb47d05424ddbd957,102f1cd008ca48aa5ec9166cb47d05424ddbd957,Add AppStream metadata (resolves #99).
wincent,2014-08-05 14:52:18,https://api.github.com/repos/wincent/command-t/git/commits/63d8a76a63569b58b853cc53d73d8a19cc462638,63d8a76a63569b58b853cc53d73d8a19cc462638,"doc: improve trouble-shooting docs

Based on discussion in https://github.com/wincent/Command-T/issues/97
(in which a user had an old version of Command-T from a previous vimball
install, in addition to the latest version that he was trying to install
via a plugin manager), add a tip about removing old versions.

Also, try to future-proof the text with OS X recommendations (which
unfortunately have to change with every OS X release)."
wincent,2014-07-30 01:53:15,https://api.github.com/repos/wincent/command-t/git/commits/ebcda3ce2e90211345eab89fd972e22b75883440,ebcda3ce2e90211345eab89fd972e22b75883440,"Merge branch 'davidszotten/traverse-scm' into next

* davidszotten/traverse-scm:
  Tweak SCM traversal
  Add option to search from nearest scm parent"
wincent,2014-07-30 01:42:37,https://api.github.com/repos/wincent/command-t/git/commits/8a387571cbafbcf03a0df0fdd2296ca78540748a,8a387571cbafbcf03a0df0fdd2296ca78540748a,"Tweak SCM traversal

This makes it possible to perform SCM traversal from Vim's current
working directory. This is based on Ben Osheroff's pull request at:

https://github.com/wincent/Command-T/pull/29

Note that one can't be applied cleanly at this point because of the
very similar e55f03e which I just committed.

I don't see myself using this option, but the cost of adding it is low.

Includes the following changes to e55f03e:

- added documentation
- renamed some options to better match the style of existing options
- traversal relative to the current file is now the default; in some
  ways this could be considered a breaking change[*], but I will let
  this bake on the ""next"" branch for a while before I make that call
- refactored to remove copy-pasta'd `#get_string` method from the
  `PathUtilties` module; we now pass in both the starting directory and
  the markers, which means that the module has to do a whole lot less
  talking to the `VIM` module
- minor style fixes

[*]: The behavior is different now, obviously; one somewhat surprising
example is the behavior in Git submodules (like Command-T, where I am
editing this right now): previously I would `cd` to
`.vim/bundle/command-t` and work from the submodule root; if I do that
now, we traverse up from the submodule to the superproject (in my case,
`~/code/wincent`, because `~/.vim` is a symlink to
`~/code/wincent/.vim`) and that means we don't see the Command-T files
in the listing because they're hidden inside a dot directory (unless the
search query includes a dot).

This may be ok, but like I said, I want it to bake for a while first.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
davidszotten,2012-07-29 12:47:38,https://api.github.com/repos/wincent/command-t/git/commits/e55f03e35800318cdf5d09b01d1f527bc4761445,e55f03e35800318cdf5d09b01d1f527bc4761445,"Add option to search from nearest scm parent

Originally submitted at: https://github.com/wincent/Command-T/pull/47

This is the squash of these two commits with a simple merge conflict
resolved:

- https://github.com/davidszotten/Command-T/commit/9b901a2a621ac1f143
- https://github.com/davidszotten/Command-T/commit/7a96cf9d4ce5ab60b8

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-07-30 00:36:39,https://api.github.com/repos/wincent/command-t/git/commits/4ca835cbe50c59ee0a16951813af8393210aca0e,4ca835cbe50c59ee0a16951813af8393210aca0e,"Merge branch 'abhinav/patch-1' into next

* abhinav/patch-1:
  doc: Add Abhinav Gupta to the AUTHORS section
  Check for stdint.h in mkmf config
  Include stdint.h for uint8_t"
wincent,2014-07-30 00:36:18,https://api.github.com/repos/wincent/command-t/git/commits/48ae298ae0bb8e20b3c6897ae248395b748c2b00,48ae298ae0bb8e20b3c6897ae248395b748c2b00,doc: Add Abhinav Gupta to the AUTHORS section
wincent,2014-07-30 00:34:50,https://api.github.com/repos/wincent/command-t/git/commits/e63697d9befa0ff058a61a1646895ca9ada44125,e63697d9befa0ff058a61a1646895ca9ada44125,"Check for stdint.h in mkmf config

Just in case some ""weird"" non-C99 platform that we support doesn't have
a stdint.h header but it has all the others, let's make sure we don't
blindly try to include the file if it's not there."
abhinav,2014-07-29 22:37:14,https://api.github.com/repos/wincent/command-t/git/commits/ec2b6894076dd69bee5811446e5d8d5451c5199f,ec2b6894076dd69bee5811446e5d8d5451c5199f,"Include stdint.h for uint8_t

Some compilers will be unable to compile this file without stdint.h."
wincent,2014-07-28 16:13:29,https://api.github.com/repos/wincent/command-t/git/commits/80a7c27554f34e90fada8dc5c9186f9a21ea9a3c,80a7c27554f34e90fada8dc5c9186f9a21ea9a3c,"Merge branch 'pfhayes/wildignore' into next

Originally submitted at: https://github.com/wincent/Command-T/pull/96

* pfhayes/wildignore:
  doc: update HISTORY section
  Update specs for recent wildignore changes
  Drop unneeded `else` clause
  Avoid unnecessary calls to wildignore"
wincent,2014-07-28 16:13:11,https://api.github.com/repos/wincent/command-t/git/commits/2ebb715042858ce7fb4fc0e7915639d5ce396d1d,2ebb715042858ce7fb4fc0e7915639d5ce396d1d,doc: update HISTORY section
wincent,2014-07-28 16:12:10,https://api.github.com/repos/wincent/command-t/git/commits/9dcfff860e5edcec21deb9521be5a8c8648d70bc,9dcfff860e5edcec21deb9521be5a8c8648d70bc,Update specs for recent wildignore changes
wincent,2014-07-28 15:54:59,https://api.github.com/repos/wincent/command-t/git/commits/3d3e46d37eb2261a551fe301cc78e468a8cbd9ac,3d3e46d37eb2261a551fe301cc78e468a8cbd9ac,"Drop unneeded `else` clause

None of the callers require strict boolean-ness, so let `nil`
false-yness suffice."
pfhayes,2014-07-27 21:55:06,https://api.github.com/repos/wincent/command-t/git/commits/0b8c6b44142fbbbc7423b736d937f423ae232169,0b8c6b44142fbbbc7423b736d937f423ae232169,"Avoid unnecessary calls to wildignore

This is significantly faster on large file lists

Originally submitted at: https://github.com/wincent/Command-T/pull/96

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-07-27 00:33:52,https://api.github.com/repos/wincent/command-t/git/commits/afc1b1aab4730ccbacc09a3a99e821d82a97118c,afc1b1aab4730ccbacc09a3a99e821d82a97118c,"Merge branch 'pfhayes/git-ls-files' into next

Originally submitted at: https://github.com/wincent/Command-T/pull/95

* pfhayes/git-ls-files:
  Handle missing or unexecutable git binary
  doc: add info about ""git"" file scanner
  Apply minor tweaks to ""git"" file scanner
  Simplify require statements
  Abbreviate license header
  doc: update AUTHORS/HISTORY section
  Add scanner based on git ls-files"
wincent,2014-07-27 00:32:17,https://api.github.com/repos/wincent/command-t/git/commits/a40d908f8db1f8fb8426d3eef1d921a4acf853e0,a40d908f8db1f8fb8426d3eef1d921a4acf853e0,"Handle missing or unexecutable git binary

We need to trap for `Errno::ENOENT` otherwise a missing or
non-executable `git` binary will derails us.

The `stderr` check is only good for times when we were able to actually
launch the binary."
wincent,2014-07-27 00:20:56,https://api.github.com/repos/wincent/command-t/git/commits/13615ef4ff35cc12b47bf1805f88b3c85b14b481,13615ef4ff35cc12b47bf1805f88b3c85b14b481,"doc: add info about ""git"" file scanner"
wincent,2014-07-27 00:15:34,https://api.github.com/repos/wincent/command-t/git/commits/24cf025edbae54c77affad780be90d33b265fdc8,24cf025edbae54c77affad780be90d33b265fdc8,"Apply minor tweaks to ""git"" file scanner

- use `ensure` to make sure that we restore the 'wildignore' setting in
  the event of an error
- kill unused `command` variable
- prefer single quotes over doubles
- change a `#select` + `not` to a `#reject`"
wincent,2014-07-27 00:01:19,https://api.github.com/repos/wincent/command-t/git/commits/ff8d2bd54a7dda599f2eebe5e630ebeb6599a150,ff8d2bd54a7dda599f2eebe5e630ebeb6599a150,"Simplify require statements

No need to pull in ""command-t/vim"" as that gets pulled in from
""command-t/scanner/file_scanner"".

Instead of ""command-t/scanner/file_scanner"", pull in
""command-t/scanner/file_scanner/find_file_scanner"", which is our
superclass; as it was, we had an ordering dependency which relied on
some other file having required the superclass before we get evaluated,
which isn't good.

There's no need to pull in ""open3"" as the superclass is already doing
that.

Explicit is better than implicit and all that, but this is Ruby, land of
magic, and of slow require statements."
wincent,2014-07-26 23:56:52,https://api.github.com/repos/wincent/command-t/git/commits/7ae934cc2a4285a4d43e4571a5f1a0004b8b9f66,7ae934cc2a4285a4d43e4571a5f1a0004b8b9f66,Abbreviate license header
wincent,2014-07-26 23:53:53,https://api.github.com/repos/wincent/command-t/git/commits/7e5527ca800549b14dc677cc45c0636c5a6ae286,7e5527ca800549b14dc677cc45c0636c5a6ae286,"doc: update AUTHORS/HISTORY section

Add Patrick Hayes."
pfhayes,2014-07-26 04:05:31,https://api.github.com/repos/wincent/command-t/git/commits/5193c9f6c58c4dd525ba7d44d22f210736d5352c,5193c9f6c58c4dd525ba7d44d22f210736d5352c,"Add scanner based on git ls-files

Originally submitted at: https://github.com/wincent/Command-T/pull/95

This squashes two commits:

- https://github.com/pfhayes/Command-T/commit/ee0aea14775d6721f11605db2e35f4e0f4c36002
- https://github.com/pfhayes/Command-T/commit/aa061af5ecab0d7492392442ab1479de44eaf594

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-07-26 21:52:58,https://api.github.com/repos/wincent/command-t/git/commits/aa7e6511f97bd0fbc2c9b60295fbfac2427fa225,aa7e6511f97bd0fbc2c9b60295fbfac2427fa225,"Merge branch 'rtfeldman/fix-index-out-of-bounds' into next

Originally submitted at: https://github.com/wincent/Command-T/pull/94

I wasn't able to repro the issue, but in trying to do so I was able to
uncover a couple of edge cases. Specifically, we try to avoid scrolling
but it was still possible to trigger scrolling by constraining the
available space with a lot of splits; so I made changes that ensure that
we really can't scroll ever. As a bonus, also fixed the wart wherein if
you had `g:CommandTMatchWindowReverse` set to 1, and
`g:CommandTMinHeight`, and there were not enough matches to fill the
minimum height, we were showing the matches at the top of the match
window instead of the bottom.

The `MatchWindow` class has a fair bit of bit-rot at the moment and
could use a clean-up, but I've tested it fairly thoroughly in its
current state and I think it should be functionally pretty solid at
least.

* rtfeldman/fix-index-out-of-bounds:
  Rename prev -> _prev
  doc: update AUTHORS/HISTORY sections
  Make type ahead find work intuitively with reversed match window
  Don't allow selection of empty lines
  Set scrolloff to 0 during match window display
  Further robustify scroll-prevention
  Fix 'index out of bounds' exception
  Disallow scrolling
  Remove useless `else` branches
  Re-use idx rather than recalcuating it
  Use parens consistently
  Use `#each_with_index` to save a line
  Use `#max`/`#min` more consistently
  Remove dead code
  Refactor out max_lines into its own method"
wincent,2014-07-26 21:51:36,https://api.github.com/repos/wincent/command-t/git/commits/eeb29040fd85d7512adc5703c82a0814f9ea12be,eeb29040fd85d7512adc5703c82a0814f9ea12be,"Rename prev -> _prev

We needed to name our ""next"" method ""_next"" to avoid clashing with a
language keyword; for symmetry, let's prefix the ""prev"" method in the
same way."
wincent,2014-07-26 19:03:05,https://api.github.com/repos/wincent/command-t/git/commits/076be236be466e31f4ac9262aceb652ff3e07b27,076be236be466e31f4ac9262aceb652ff3e07b27,"doc: update AUTHORS/HISTORY sections

Add Richard Feldman to list of Authors."
wincent,2014-07-26 18:57:08,https://api.github.com/repos/wincent/command-t/git/commits/29ad9722d90d519605170ea12b4e58fa83157596,29ad9722d90d519605170ea12b4e58fa83157596,"Make type ahead find work intuitively with reversed match window

Recent refactorings inverted the sense of this method (meaning that you
would search from the bottom when the listing was reversed); this commit
makes things work as you'd expect for both possible values of
`g:CommandTMatchWindowReverse`."
wincent,2014-07-26 18:49:42,https://api.github.com/repos/wincent/command-t/git/commits/04f6194b4fbc03a490a676b58913c2d03ebc2226,04f6194b4fbc03a490a676b58913c2d03ebc2226,"Don't allow selection of empty lines

When `g:CommandTMinHeight` is in effect, it is possible that there are
not enough matches to fill the entire match window. Ensure that we don't
allow selection of blank/empty lines in this case."
wincent,2014-07-26 05:52:47,https://api.github.com/repos/wincent/command-t/git/commits/8da5b3ff48b9817fd778274a9e141aa01437fb0a,8da5b3ff48b9817fd778274a9e141aa01437fb0a,"Set scrolloff to 0 during match window display

So the match window isn't supposed to scroll, but in testing for recent
commits I discovered some edge cases where it could be made to scroll.
In theory those edge cases are now all sealed, but just in case they
aren't, let's turn `'scrolloff'` off."
wincent,2014-07-26 05:41:37,https://api.github.com/repos/wincent/command-t/git/commits/5d500d42bd3c1b31c90887c3d98282b46c4b0671,5d500d42bd3c1b31c90887c3d98282b46c4b0671,"Further robustify scroll-prevention

The old version of this code worked by inverting the order of the match
list results and then allowing the rest of the code to proceed as usual.
Now that we're trying to deal with the nuances of things like different
constraint models (external resizing vs internal pressure from splits)
things will be more robust if we recognize that the match results may be
more than we can display, and explicitly rendering things in reverse.

This gives us some nice benefits, such as better handling edge cases
like having `g:CommandTMatchWindowReverse` set in conjunction with
`g:CommandTMinHeight` and too few results to fill the height; previously
we'd show them up the top of the results window instead of the bottom,
but now we do the right thing.

Overall, the code gets simpler in some places and more complicated in
others. It would be nice to follow up later with a refactoring to clean
up this class."
wincent,2014-07-26 01:19:40,https://api.github.com/repos/wincent/command-t/git/commits/3ea4173ea1b76bf04c6649584f185ee7ed97f91d,3ea4173ea1b76bf04c6649584f185ee7ed97f91d,"Disallow scrolling

We never intended to allow scrolling (see the previous commit) but it
was actually possible to make it happen with some careful staging.

Namely, you could trick Command-T into scrolling by constraining the
amount of available space by opening many splits; this didn't affect the
`#max_lines` calculation, so Command-T thought it has more room than it
actually did. Under these circumstances, you'd hit the end of the range
and be able to scroll past it to see more matches; not broken, but not
intended either.

Compare that with what happens when you change the size of your terminal
window; _that_ constraint does get picked up.

With this change, we set the desired window height and then read it back
to see what we actually got, effectively preventing scrolling because we
never put more results in the buffer than would fit on the screen."
wincent,2014-07-26 01:14:07,https://api.github.com/repos/wincent/command-t/git/commits/876865ce3f054f73011e7f073ebdbdcfa6ddaf72,876865ce3f054f73011e7f073ebdbdcfa6ddaf72,"Remove useless `else` branches

We're not going to implement looping or scrolling at this point, as
things have been working quite nicely as-is."
wincent,2014-07-26 00:56:04,https://api.github.com/repos/wincent/command-t/git/commits/3ac1ad6512cc8bc2944860d99a48a8cd495ee215,3ac1ad6512cc8bc2944860d99a48a8cd495ee215,Re-use idx rather than recalcuating it
wincent,2014-07-26 00:54:19,https://api.github.com/repos/wincent/command-t/git/commits/3506c9074ffae23839285dfac693636b8194b06b,3506c9074ffae23839285dfac693636b8194b06b,"Use parens consistently

One call to `#match_text_for_idx` was using parens around the method
parameter list and the other was not; let's just use parens consistently
throughout."
wincent,2014-07-26 00:53:33,https://api.github.com/repos/wincent/command-t/git/commits/fe47ede51e55ed2b1383580b77d667a80f855fb0,fe47ede51e55ed2b1383580b77d667a80f855fb0,Use `#each_with_index` to save a line
wincent,2014-07-26 00:36:10,https://api.github.com/repos/wincent/command-t/git/commits/4cedc7d7de7ce1ee1bbcac0419ad98508e36410d,4cedc7d7de7ce1ee1bbcac0419ad98508e36410d,"Use `#max`/`#min` more consistently

Rather than employing a mixture of styles (ternaries, postfix
conditionals etc), let's use `#max` and `#min` seeing as we recently set
the precedent for it when we extracted the `#max_lines` method."
wincent,2014-07-26 00:24:26,https://api.github.com/repos/wincent/command-t/git/commits/ca65f282e8af673e80fcbb89408efbca44640cbd,ca65f282e8af673e80fcbb89408efbca44640cbd,"Remove dead code

This line has been useless since 07f1d7cb26257ace."
wincent,2014-07-18 01:07:42,https://api.github.com/repos/wincent/command-t/git/commits/2b69d1b2635814a786e2c207fea2e5490c455d41,2b69d1b2635814a786e2c207fea2e5490c455d41,"Revert ""Add .ruby-version file""

This reverts commit a14fe878fcfebd59c44790b2c01ee4301ff64a41.

People's build environments are varied and fragile, so this change,
while convenient for me, was inconvenient for others."
wincent,2014-07-16 01:17:48,https://api.github.com/repos/wincent/command-t/git/commits/40a04aa1fbddf4660de4529f09a0f2bdf3d00f1f,40a04aa1fbddf4660de4529f09a0f2bdf3d00f1f,"Don't depend on bundler in Rake tasks

This was crashing for me via Bundler, probably due to some
Nokogiri/libxml craziness. Just `gem install mechanize` and run normally
instead."
wincent,2014-07-16 00:59:56,https://api.github.com/repos/wincent/command-t/git/commits/6cd8d28d57e991d2db17196f5d2ec214df85ee1c,6cd8d28d57e991d2db17196f5d2ec214df85ee1c,"Abbreviate license headers

There are plenty of diverse opinions on whether it's worth it to include
full license text in every file:

- http://lu.is/blog/2012/03/17/on-the-importance-of-per-file-license-information/
- http://softwarefreedom.org/resources/2012/ManagingCopyrightInformation.html
- http://stackoverflow.com/questions/845895/putting-license-in-each-code-file

The main argument against is verbosity. The main argument for is
ensuring that licensing info stays with the file even if it gets pulled
out of a project.

Seems that for a project like this one, the cost of license abuse is
low, and people's awareness of what the ""BSD 2-clause license"" is is
relatively good, so a terse point to the BSD license should suffice."
wincent,2014-07-16 00:34:57,https://api.github.com/repos/wincent/command-t/git/commits/8549419d36a73a3e93293fa896164aa90330a1bb,8549419d36a73a3e93293fa896164aa90330a1bb,"Remove donation info from docs

I've received about 200 euros in donations over the course of 4 years,
which is a few cents per day. May as well reduce clutter in the docs by
dropping the references to it."
wincent,2014-07-16 00:34:16,https://api.github.com/repos/wincent/command-t/git/commits/9ec520ab08f4753d595ba9da7bb0aa012a8a2ed9,9ec520ab08f4753d595ba9da7bb0aa012a8a2ed9,"Update authorship information

May as well do some Internet dealiasification."
wincent,2014-07-16 00:20:43,https://api.github.com/repos/wincent/command-t/git/commits/9bec0cb80670e3fec8a708b9e1f99d940d72614f,9bec0cb80670e3fec8a708b9e1f99d940d72614f,Update docs for 1.10 release
wincent,2014-07-16 00:19:58,https://api.github.com/repos/wincent/command-t/git/commits/7e8602efe3a853395cf139eb19001fc853a5af3c,7e8602efe3a853395cf139eb19001fc853a5af3c,doc: Note 1.9 in the list of performance-related releases
wincent,2014-07-15 06:24:47,https://api.github.com/repos/wincent/command-t/git/commits/7e20448f4fd22b75fabf06afc71294e08362520c,7e20448f4fd22b75fabf06afc71294e08362520c,"Add Vroom as a submodule

Going to explore using this for testing purposes.

Added with:

  git submodule add https://github.com/google/vroom.git vendor/vroom
  cd vendor/vroom
  python setup.py build && sudo python setup.py install
  cd -

See:

  https://wincent.com/issues/2160"
wincent,2014-07-15 06:17:56,https://api.github.com/repos/wincent/command-t/git/commits/a14fe878fcfebd59c44790b2c01ee4301ff64a41,a14fe878fcfebd59c44790b2c01ee4301ff64a41,"Add .ruby-version file

This is just for convenience in the local development environment."
wincent,2014-07-15 06:15:51,https://api.github.com/repos/wincent/command-t/git/commits/c292e7587c2e263408a8c5db428cf56b5378714c,c292e7587c2e263408a8c5db428cf56b5378714c,"Fix spec bustage

I really don't run these specs often enough, do I?

Borked since 30befefba80f."
wincent,2014-07-14 16:12:19,https://api.github.com/repos/wincent/command-t/git/commits/15b9fb96b72d9b5150c84504e6bcb5043d81a5cb,15b9fb96b72d9b5150c84504e6bcb5043d81a5cb,"Add g:CommandT{Ignore,Smart}Case

Originally submitted as a pull request by Jacek Wysocki here:

  https://github.com/wincent/Command-T/pull/12

I rewrote it to apply on the current HEAD of the ""next"" branch, added
a smartcase option, and renamed (and inverted the sense of)
`g:CommandTCaseSensitive` to `g:CommandTIgnoreCase` to more closely
track Vim's `'ignorecase'` and `'smartcase'` settings."
wincent,2014-07-11 05:42:05,https://api.github.com/repos/wincent/command-t/git/commits/8177e8dfda304f3503143a2deedb20a1adc4ca1b,8177e8dfda304f3503143a2deedb20a1adc4ca1b,"Update HISTORY section of docs

To include info about commit 2f6e86520c5e."
wincent,2014-07-11 04:32:52,https://api.github.com/repos/wincent/command-t/git/commits/2f6e86520c5e6362d147cc24d99643b3cbdb33e4,2f6e86520c5e6362d147cc24d99643b3cbdb33e4,"Ensure CommandT::MRU is defined

Even if the extension isn't compiled, we want/need CommandT::MRU to be
defined otherwise our autocommands will blow up as reported here:

  https://github.com/wincent/Command-T/issues/92

I don't particularly like how subtle/brittle this is (the implicit order
dependency), but for now this minimal fix will have to do.

There is still something else going on with issue #92; waiting on
further information about there."
wincent,2014-07-09 15:12:44,https://api.github.com/repos/wincent/command-t/git/commits/925cf023e4bba144bd7c3131771bf469bd8202ce,925cf023e4bba144bd7c3131771bf469bd8202ce,"Merge branch 'ton/clear-statusline' into next

* ton/clear-statusline:
  Update HISTORY section in docs
  Clear statusline upon closing the match window"
wincent,2014-07-09 15:12:27,https://api.github.com/repos/wincent/command-t/git/commits/c53ae1a32286382a114a9b28c32eb381d8e96f32,c53ae1a32286382a114a9b28c32eb381d8e96f32,Update HISTORY section in docs
ton,2012-10-11 12:32:50,https://api.github.com/repos/wincent/command-t/git/commits/30befefba80fa21aeca1e8f8f276d6c307636c20,30befefba80fa21aeca1e8f8f276d6c307636c20,"Clear statusline upon closing the match window

Originally submitted at:

  https://github.com/wincent/Command-T/pull/51

Relevant comment from the discussion:

  Had a closer look at this. This can only be reproduced under very
  specific circumstances: when running Vim in a 256 color terminal
  within tmux using a color scheme that uses a non-black background
  color the statusline never clears unless this patch is applied. For
  example, using using wombat256 or gruvbox"
wincent,2014-07-09 15:04:56,https://api.github.com/repos/wincent/command-t/git/commits/54c07c069e4fd48da4291aaa924ef451b9776569,54c07c069e4fd48da4291aaa924ef451b9776569,"Change a `#each` + `#<<` to a `#map`

Map better represents our intentions here, so use it."
wincent,2014-07-09 14:53:51,https://api.github.com/repos/wincent/command-t/git/commits/bf35d47670818c22b9122fea3c8f501439e47fb8,bf35d47670818c22b9122fea3c8f501439e47fb8,"Merge branch 'rabidpraxis/implement-ctrl-w' into next

* rabidpraxis/implement-ctrl-w:
  Tweak word clearing to match shell behavior
  Update docs with info about <C-w> feature
  Add Kevin Webster to Git .mailmap file
  Implement ctrl-w"
wincent,2014-07-09 14:32:11,https://api.github.com/repos/wincent/command-t/git/commits/6e447829ffcf83a4e1c92d60868df44f0f858b7a,6e447829ffcf83a4e1c92d60868df44f0f858b7a,"Tweak word clearing to match shell behavior

The word clearing algorithm was clearing either words or whitespace. For
example, given the following (where ^ indicates the cursor position):

  foo      bar     baz
                      ^

Hitting <C-w> three times would first delete ""baz"", then the whitespace
after ""bar"", finally ""bar"" itself.

This commit changes the behavior to match that of the shell:

  foo bar
              ^ (<C-w> deletes trailing whitespace and ""bar"")
  foo       bar
        ^ (<C-w> deletes ""foo"" and whitespace to left of cursor)
  foobar
     ^ (<C-w> deletes ""foo"")
  foo
  ^ (<C-W> does nothing)

For clarity and simplicity, switched to a largely regex-based approach
which has no conditionals in it and is probably more readable."
wincent,2014-07-09 14:16:24,https://api.github.com/repos/wincent/command-t/git/commits/a174bc15f1f7efe3f8b5e5dcd36dde6ff7d6aa48,a174bc15f1f7efe3f8b5e5dcd36dde6ff7d6aa48,"Update docs with info about <C-w> feature

- add Kevin Webster to AUTHORS list
- document option for configuring the mapping
  (`g:CommandTClearPrevWordMap`)
- update HISTORY section"
wincent,2014-07-09 14:08:38,https://api.github.com/repos/wincent/command-t/git/commits/bfafe46bcde60551f7cd3c3ff88c979e1113732f,bfafe46bcde60551f7cd3c3ff88c979e1113732f,Add Kevin Webster to Git .mailmap file
wincent,2014-07-09 14:10:37,https://api.github.com/repos/wincent/command-t/git/commits/634d0dc1d98079ec951c19401db804a784f00262,634d0dc1d98079ec951c19401db804a784f00262,"Update Git .mailmap file

To consolidate authorship info as emitted by `git shortlog -s`."
wincent,2014-07-07 15:47:10,https://api.github.com/repos/wincent/command-t/git/commits/9db519e4b3ee28244845bb7021eef31007e0c4e9,9db519e4b3ee28244845bb7021eef31007e0c4e9,"Merge branch 'gnab/configurable-acceptance-commands' into next

* gnab/configurable-acceptance-commands:
  Update docs with info about selection acceptance command configuration
  Make selection acceptance commands configurable"
wincent,2014-07-07 15:46:27,https://api.github.com/repos/wincent/command-t/git/commits/00651aff01bd8e0b6293ee438d3991ca3ce9f8c8,00651aff01bd8e0b6293ee438d3991ca3ce9f8c8,Update docs with info about selection acceptance command configuration
wincent,2014-07-07 15:27:59,https://api.github.com/repos/wincent/command-t/git/commits/b5ee82a1cd844150e876255ce02bf9c9e5e80e0b,b5ee82a1cd844150e876255ce02bf9c9e5e80e0b,Update HISTORY section in docs
gnab,2012-03-19 22:11:36,https://api.github.com/repos/wincent/command-t/git/commits/0f4c700ddf2b12ea01daccf409117164bfc5360f,0f4c700ddf2b12ea01daccf409117164bfc5360f,Make selection acceptance commands configurable
wincent,2014-07-07 15:03:14,https://api.github.com/repos/wincent/command-t/git/commits/deb4f2c80be08725add9c5f4eb9541103aca2879,deb4f2c80be08725add9c5f4eb9541103aca2879,"Consider 'autowriteall' when determining default open command

Like `'hidden'`, `'autowriteall'` makes it safe to abandon buffers with
unsaved changes, so we can issue a standard `:e` command in this case
and let Vim save modified files for us beforehand.

Note that we have to include a check to ensure that `'readonly'` isn't
set, because that would prevent `'autowriteall'` from doing its thing.

Fixes:

  https://github.com/wincent/Command-T/issues/88"
wincent,2014-07-06 05:21:05,https://api.github.com/repos/wincent/command-t/git/commits/95f10d4cba96ee17622035cd36e3acdbd379673c,95f10d4cba96ee17622035cd36e3acdbd379673c,"Merge branch 'artnez/tag-scanner-cache' into next

* artnez/tag-scanner-cache:
  Update docs, copyright year ranges
  Cache taglist() results. Add flush hook."
wincent,2014-07-06 05:19:55,https://api.github.com/repos/wincent/command-t/git/commits/aa4306e6b5f8fc58ffd3d1a6105301200b0ec5ef,aa4306e6b5f8fc58ffd3d1a6105301200b0ec5ef,"Update docs, copyright year ranges"
artnez,2014-07-05 01:10:53,https://api.github.com/repos/wincent/command-t/git/commits/42881a6faaa36b1bfa4303f6fa11a464d48b1fdb,42881a6faaa36b1bfa4303f6fa11a464d48b1fdb,"Cache taglist() results. Add flush hook.

Fixes #87"
wincent,2014-06-04 03:45:41,https://api.github.com/repos/wincent/command-t/git/commits/3a5d9b9f58f9749d6632194a45f24884882ad93d,3a5d9b9f58f9749d6632194a45f24884882ad93d,"Update installation docs

De-emphasize Vimball as an installation method (I consider it a broken
format, not just because of the way it gloms all plug-ins into a single
shared namespace, but because it frequently fails to extract correctly,
leading to support tickets). I'd like to eventually even stop
distributing the Vimball at all, but the first gentle step is not
documenting Vimball's existence.

Add info about some of the more popular plug-in managers. Pathogen is
still king of simplicity and robustness, but the allure of shiny,
overengineered things and the widespread misunderstanding of Git
submodules has caused the marketplace to fragment. Oh well."
wincent,2014-06-04 03:42:01,https://api.github.com/repos/wincent/command-t/git/commits/4122f9f619978810468a2d285b6047bd9c42f87c,4122f9f619978810468a2d285b6047bd9c42f87c,"Update docs with info about OS X Yosemite

Via:

  https://github.com/wincent/Command-T/issues/84"
wincent,2014-05-30 14:44:56,https://api.github.com/repos/wincent/command-t/git/commits/02fdf45ae6a626544ae9ac80854399595a74f7aa,02fdf45ae6a626544ae9ac80854399595a74f7aa,"Update docs for 1.9.1 release

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-30 14:43:21,https://api.github.com/repos/wincent/command-t/git/commits/cffc2cb39b6799c2c3d88ffaff8c201f1d196100,cffc2cb39b6799c2c3d88ffaff8c201f1d196100,"Include autoload file in vimball archive

This was missing from the 1.9 release.

Fixes:

  https://wincent.com/issues/2175

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 18:42:45,https://api.github.com/repos/wincent/command-t/git/commits/0bfa2f499dbbcae3bffff315038a59ac513970ff,0bfa2f499dbbcae3bffff315038a59ac513970ff,"Apply minor grammar fix to docs

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 18:40:14,https://api.github.com/repos/wincent/command-t/git/commits/1792e1fee80909885df88d62a90dfe8306981800,1792e1fee80909885df88d62a90dfe8306981800,"Add license to gemspec

This silences the warning during builds:

  WARNING:  licenses is empty

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 18:28:28,https://api.github.com/repos/wincent/command-t/git/commits/105d05cbb111f799ad379ec9d1bbb86fdd8ecfb5,105d05cbb111f799ad379ec9d1bbb86fdd8ecfb5,"Update docs for 1.9 release

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 18:21:30,https://api.github.com/repos/wincent/command-t/git/commits/cfc2e44109449de7eaaff3f7f4324ff8efd5ed0a,cfc2e44109449de7eaaff3f7f4324ff8efd5ed0a,"Merge branch 'next'

* next:
  Guard against overflow when peeking at PDU size
  Doc: update HISTORY section
  Establish new benchmark baseline
  Fix memoization
  Fix off-by-one error in last_idx management
  Fix egregious matching bug
  Add <ESC> key xterm info to FAQ
  Add casts to silence Clang warnings
  Fix compiler warnings on CentOS
  Update docs with info about autoload optimization
  Use vim's autoload feature
  Never overwrite other mappings
  Only move MRU results if appropriate
  Update docs with info about :CommandTMRU
  Teach MRU module to ignore unlisted buffers
  Work around missing matches_for method
  Split MRU functionality into separate command
  Drop an unnecessary `#compact` call
  Rename Mru -> MRU
  Make MruBufferScanner inherit from BufferScanner
  Make the MRU buffer stack an actual stack
  Make MruBufferFinder inherit from BufferFinder
  Improve diagnostic info in CommandT::Stub error message
  Add missing method to CommandT::Stub
  Fix some cosmetic typos
  Get rid of $scanner global variable
  doc: Add Ton van den Heuvel to AUTHORS section
  Add missing copyright headers
  Add support for MRU buffer ordering

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 18:05:56,https://api.github.com/repos/wincent/command-t/git/commits/7a86796bb7cca96638ff55190ec06a147c63ef35,7a86796bb7cca96638ff55190ec06a147c63ef35,"Guard against overflow when peeking at PDU size

This is a partial cherry-pick from my commit to the Facebook Watchman
project[0].

I noticed while reviewing the corresponding pull request[1] that a
malformed header could cause us to index beyond the range of the `sizes`
array, so this commit pulls in the equivalent guard.

Note there is a bunch of other stuff in that pull-request and that
specific commit which I am not pulling down here. That code is in a gem
and so needs to be more defensive; in Command-T itself, if something
goes wrong with Watchman we want to fail noisily and loudly. So we're
not going to worry about freeing memory before throwing an exception
(effectively crashing) nor do we care about restoring the flags to their
pre-`fcntl` state (as we're the only users of the socket).

[0]: https://github.com/facebook/watchman/commit/5b0aa521ae
[1]: https://github.com/facebook/watchman/pull/37
[2]: https://github.com/facebook/watchman/pull/37#discussion_r12498885

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 03:26:14,https://api.github.com/repos/wincent/command-t/git/commits/0dda67065a43da98c3c607f5ddddf15595f4d2f8,0dda67065a43da98c3c607f5ddddf15595f4d2f8,"Doc: update HISTORY section

Once I've tested the recent changes for a while I'll be updating the
master branch and cutting a release, so let's prep the docs for that.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 03:18:25,https://api.github.com/repos/wincent/command-t/git/commits/406a16f3a348b51e1d2fd70639a4123af6342833,406a16f3a348b51e1d2fd70639a4123af6342833,"Establish new benchmark baseline

The pathological benchmark runs too fast to be meaningful, and because
it only contains a single path, it doesn't make use of multi-threading
like the other test cases do.

So, let's set up a new baseline by adding more paths to the test case
and running it enough times for it to be within the same order of
magnitude as its immediate neighbors.

  Before:
                          user     system      total        real
  pathological        0.000000   0.000000   0.000000 (  0.002413)
  command-t           0.380000   0.000000   0.380000 (  0.380633)
  chromium (subset)   0.850000   0.010000   0.860000 (  0.441269)
  chromium (whole)    3.400000   0.010000   3.410000 (  1.342450)

  After:
                          user     system      total        real
  pathological        0.110000   0.000000   0.110000 (  0.112132)
  command-t           0.340000   0.000000   0.340000 (  0.340255)
  chromium (subset)   0.800000   0.010000   0.810000 (  0.398784)
  chromium (whole)    3.320000   0.010000   3.330000 (  1.236914)

As you can see there is some flutter between runs (the timings for the
other test cases shouldn't have changed), but I am doing best-of-three
runs for all of these, so that's as close as I can get to scientific.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 03:08:53,https://api.github.com/repos/wincent/command-t/git/commits/94bd7d0806bdc60d42b14dbfa770decdaa257494,94bd7d0806bdc60d42b14dbfa770decdaa257494,"Fix memoization

Commit 5621c4e21854 fixed a terrible bug that affected the correctness
of the matching algorithm, but it did so at the cost of the speed of our
pathological test case (although other test cases seemed slightly
better).

  Buggy version:
                          user     system      total        real
  pathological        0.000000   0.000000   0.000000 (  0.003640)
  command-t           0.390000   0.000000   0.390000 (  0.383473)
  chromium (subset)   1.170000   0.010000   1.180000 (  0.525694)
  chromium (whole)    4.550000   0.010000   4.560000 (  1.579863)

  Fixed version:
                          user     system      total        real
  pathological        1.880000   0.010000   1.890000 (  1.887996)
  command-t           0.350000   0.000000   0.350000 (  0.348788)
  chromium (subset)   1.140000   0.010000   1.150000 (  0.504924)
  chromium (whole)    4.430000   0.000000   4.430000 (  1.516979)

After fixing this, I went back and audited the memoization code to see
if we could ""have our cake and eat it too""; that is, get robust/correct
matching and keep some or all of the speed gains that we got from
memoization in the buggy version.

It turns out, we can:

                          user     system      total        real
  pathological        0.000000   0.000000   0.000000 (  0.002413)
  command-t           0.380000   0.000000   0.380000 (  0.380633)
  chromium (subset)   0.850000   0.010000   0.860000 (  0.441269)
  chromium (whole)    3.400000   0.010000   3.410000 (  1.342450)

So, we got faster on every test case in the benchmark suite. Not sure
what I was smoking when I originally wrote the memoization code; instead
of memoizing a known result at the earliest point in the haystack
string, I was doing so at the latest, which reduces the value of the
memoization.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-25 03:02:12,https://api.github.com/repos/wincent/command-t/git/commits/4ed8de465f151b95ec70a8b07bfec3129f486747,4ed8de465f151b95ec70a8b07bfec3129f486747,"Fix off-by-one error in last_idx management

This is a relatively benign error; causing our last_idx calculations to
be slightly more favorable than they should have been, leading to
slightly inflated match scores. I think this was likely harmless,
because all matches would have benefited from this bias.

This is how the code used to look before the ill-fated 301fd661831,
which introduced a nasty matching bug. I fixed this in 5621c4e2185, but
introduced this other error in my haste; I probably should have realized
it was wrong by comparison with the pre-301fd661831 state.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-24 15:19:31,https://api.github.com/repos/wincent/command-t/git/commits/5621c4e2185416ff90c0a97d41114e59720d5b8b,5621c4e2185416ff90c0a97d41114e59720d5b8b,"Fix egregious matching bug

This was introduced six months ago in 301fd661831 (""Fix off-by-one error
in memoization indexing""). It basically meant that you could repeat any
matching character and it would be considered to match, as long as your
query string didn't exceed the available space in the haystack.

For example, given a file ""foobar"", the following query strings would
all match it: ""foo"", ""fooo"", ""foooo"", ""fooooo"", ""fffbar"" etc; but
strings such as ""ffffbar"" and ""foooooo"" would not (due to being
overlength).

This is the most egregious bug in the matcher ever, so I'm very grateful
to Pavel Sergeev (@dzhioev) for reporting it.

Alas, the fix comes with a price; while the fix brings a marginal
performance increase for most of our test cases, the ""pathological""
benchmark gets distinctly slower:

  Before:
                          user     system      total        real
  pathological        0.010000   0.000000   0.010000 (  0.003380)
  command-t           0.410000   0.000000   0.410000 (  0.413851)
  chromium (subset)   1.190000   0.010000   1.200000 (  0.552776)
  chromium (whole)    4.540000   0.010000   4.550000 (  1.557351)

  After:
                          user     system      total        real
  pathological        1.750000   0.000000   1.750000 (  1.751254)
  command-t           0.380000   0.000000   0.380000 (  0.375418)
  chromium (subset)   1.170000   0.010000   1.180000 (  0.498126)
  chromium (whole)    4.470000   0.010000   4.480000 (  1.537441)

This reverses the win reported in 301fd661831, which at the time I
described as ""so marked that I am almost suspicious of it"". I should
have been more suspicious...

I'll keep digging into this to see if I can improve the speed of the
pathological case, but for now I just want to get this fix out as
correctness is more important than speed.

Fixes:

  https://github.com/wincent/Command-T/issues/82

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-24 15:19:31,https://api.github.com/repos/wincent/command-t/git/commits/26fca4c4076386f51f1d6f1881d17e279b1ab84c,26fca4c4076386f51f1d6f1881d17e279b1ab84c,"Fix egregious matching bug

This was introduced six months ago in 301fd661831 (""Fix off-by-one error
in memoization indexing""). It basically meant that you could repeat any
matching character and it would be considered to match, as long as your
query string didn't exceed the available space in the haystack.

For example, given a file ""foobar"", the following query strings would
all match it: ""foo"", ""fooo"", ""foooo"", ""fooooo"", ""fffbar"" etc; but
strings such as ""ffffbar"" and ""foooooo"" would not (due to being
overlength).

This is the most egregious bug in the matcher ever, so I'm very grateful
to Pavel Sergeev (@dzhioev) for reporting it.

Alas, the fix comes with a price; while the fix brings a marginal
performance increase for most of our test cases, the ""pathological""
benchmark gets distinctly slower:

  Before:
                          user     system      total        real
  pathological        0.010000   0.000000   0.010000 (  0.003380)
  command-t           0.410000   0.000000   0.410000 (  0.413851)
  chromium (subset)   1.190000   0.010000   1.200000 (  0.552776)
  chromium (whole)    4.540000   0.010000   4.550000 (  1.557351)

  After:
                          user     system      total        real
  pathological        1.750000   0.000000   1.750000 (  1.751254)
  command-t           0.380000   0.000000   0.380000 (  0.375418)
  chromium (subset)   1.170000   0.010000   1.180000 (  0.498126)
  chromium (whole)    4.470000   0.010000   4.480000 (  1.537441)

This reverses the win reported in 301fd661831, which at the time I
described as ""so marked that I am almost suspicious of it"". I should
have been more suspicious...

I'll keep digging into this to see if I can improve the speed of the
pathological case, but for now I just want to get this fix out as
correctness is more important than speed.

Fixes:

  https://github.com/wincent/Command-T/issues/82

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-23 15:20:04,https://api.github.com/repos/wincent/command-t/git/commits/777113ca9de74f59f87c9f698340547dd997cbf6,777113ca9de74f59f87c9f698340547dd997cbf6,"Add <ESC> key xterm info to FAQ

This is fruit of an email exchange I had with a user; he suggested
adding this to the docs.

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-23 15:02:37,https://api.github.com/repos/wincent/command-t/git/commits/b22fcea7c757b76357ec967acedb9eb55e3a1b86,b22fcea7c757b76357ec967acedb9eb55e3a1b86,"Add casts to silence Clang warnings

Alas, I can't repro these warnings, even with CC=clang and explicitly
adding `-Wformat` to the args. Oh well.

Reported here:

  https://github.com/wincent/Command-T/issues/80

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-23 14:54:29,https://api.github.com/repos/wincent/command-t/git/commits/f2e729df238977504ce6deca8f6c7bc376374168,f2e729df238977504ce6deca8f6c7bc376374168,"Fix compiler warnings on CentOS

Tested with a compiler on a CentOS box and got these warnings. Harmless,
but noisy, so let's fix them.

  compiling matcher.c
  matcher.c: In function ‘CommandTMatcher_sorted_matches_for’:
  matcher.c:181: warning: ISO C90 forbids mixed declarations and code
  compiling watchman.c
  watchman.c: In function ‘watchman_load_string’:
  watchman.c:313: warning: ISO C90 forbids mixed declarations and code
  watchman.c:320: warning: ISO C90 forbids mixed declarations and code
  watchman.c: In function ‘watchman_load_double’:
  watchman.c:334: warning: ISO C90 forbids mixed declarations and code
  watchman.c: In function ‘CommandTWatchmanUtils_load’:
  watchman.c:500: warning: ISO C90 forbids mixed declarations and code
  watchman.c:515: warning: ISO C90 forbids mixed declarations and code
  watchman.c:525: warning: ISO C90 forbids mixed declarations and code
  watchman.c: In function ‘CommandTWatchmanUtils_dump’:
  watchman.c:549: warning: ISO C90 forbids mixed declarations and code
  watchman.c:553: warning: ISO C90 forbids mixed declarations and code
  watchman.c: In function ‘CommandTWatchmanUtils_query’:
  watchman.c:594: warning: ISO C90 forbids mixed declarations and code
  watchman.c:605: warning: ISO C90 forbids mixed declarations and code
  watchman.c:614: warning: ISO C90 forbids mixed declarations and code
  watchman.c:624: warning: ISO C90 forbids mixed declarations and code
  watchman.c:632: warning: format ‘%lld’ expects type ‘long long int’, but argument 3 has type ‘int64_t’
  watchman.c:640: warning: pointer of type ‘void *’ used in arithmetic
  watchman.c:640: warning: ISO C90 forbids mixed declarations and code

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-22 15:14:08,https://api.github.com/repos/wincent/command-t/git/commits/b5868e2bcf81171de8d4dcd18fcc678f279f9212,b5868e2bcf81171de8d4dcd18fcc678f279f9212,"Update docs with info about autoload optimization

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
rosslagerwall,2014-05-22 15:07:49,https://api.github.com/repos/wincent/command-t/git/commits/1bfb3d8b28181ddbc4571a89459b7b80aa5f13ef,1bfb3d8b28181ddbc4571a89459b7b80aa5f13ef,"Use vim's autoload feature

By autoloading, command-t's startup time is reduced from 66ms to 0ms
on my system (see vim --startuptime).

Originally submitted as:

  https://github.com/wincent/Command-T/pull/81

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-05-22 14:49:39,https://api.github.com/repos/wincent/command-t/git/commits/809dfd566c847df900de49272f9f1d439db7a886,809dfd566c847df900de49272f9f1d439db7a886,"Never overwrite other mappings

Use `maparg()` to ensure we don't ever overwrite existing mappings.
There's also `mapcheck()` which will find partial matches, but I think
the more stricter check is appropriate here (`mapcheck()` is good for
finding prefix collisions which could make mappings slow).

Signed-off-by: Greg Hurrell <greg@hurrell.net>"
wincent,2014-04-01 01:22:31,https://api.github.com/repos/wincent/command-t/git/commits/05d998f7cb6a03676d6db434ef8f9ff88a70f328,05d998f7cb6a03676d6db434ef8f9ff88a70f328,"Merge branch 'master' into next

* master:
  Update docs for 1.8 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-04-01 01:03:00,https://api.github.com/repos/wincent/command-t/git/commits/66d9f6f4830f404b1fab3ce92f219b786a2dc5ce,66d9f6f4830f404b1fab3ce92f219b786a2dc5ce,"Update docs for 1.8 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 14:48:46,https://api.github.com/repos/wincent/command-t/git/commits/40a0b8177a22986e2e5db8bc7c32d28042870cac,40a0b8177a22986e2e5db8bc7c32d28042870cac,"Only move MRU results if appropriate

We had a bug where we would unconditionally move the first search result
to the end, thinking that it was the current buffer.

This is not necessarily always for the case. For example, if I've
visited:

  foo1
  foo2
  bar
  baz

in that order, then it's correct to move baz to the end of the list. But
if I filter my query by typing ""f"", only ""foo1"" and ""foo2"" will be
shown, and it would be incorrect to attempt moving either of them.

I think this bug was likely present in the original pull request too --
although it was moving the selection rather than moving items within the
list -- but I didn't notice it.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 14:10:56,https://api.github.com/repos/wincent/command-t/git/commits/dc687f578f91a5baba7c2fbf9abd50b575427d24,dc687f578f91a5baba7c2fbf9abd50b575427d24,"Merge branch 'mru_buffer_ordering' into next

* mru_buffer_ordering:
  Update docs with info about :CommandTMRU
  Teach MRU module to ignore unlisted buffers
  Work around missing matches_for method
  Split MRU functionality into separate command
  Drop an unnecessary `#compact` call
  Rename Mru -> MRU
  Make MruBufferScanner inherit from BufferScanner
  Make the MRU buffer stack an actual stack
  Make MruBufferFinder inherit from BufferFinder
  Improve diagnostic info in CommandT::Stub error message
  Add missing method to CommandT::Stub
  Fix some cosmetic typos
  Get rid of $scanner global variable
  doc: Add Ton van den Heuvel to AUTHORS section
  Add missing copyright headers
  Add support for MRU buffer ordering"
wincent,2014-03-31 05:43:56,https://api.github.com/repos/wincent/command-t/git/commits/ff4bbdf6bb712425eae82f7430ab8d73251743be,ff4bbdf6bb712425eae82f7430ab8d73251743be,"Update docs with info about :CommandTMRU

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 05:28:50,https://api.github.com/repos/wincent/command-t/git/commits/0b84b36d929a0c873bd28df42768b2fd711b2eb0,0b84b36d929a0c873bd28df42768b2fd711b2eb0,"Teach MRU module to ignore unlisted buffers

The MRU module itself feels like a better place to put this concern.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 05:23:59,https://api.github.com/repos/wincent/command-t/git/commits/3c265db48cf32ea8b439b85176114edcf92b6083,3c265db48cf32ea8b439b85176114edcf92b6083,"Work around missing matches_for method

Back when the MRU pull request was submitted there used to be a
matches_for method. It went away during some performance optimizations
around the time of the move towards phtreads.

Make it so that `sorted_matches_for` can optionally take an override for
how things should be sorted.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 05:10:18,https://api.github.com/repos/wincent/command-t/git/commits/bd7adba8d49a095ab4d9c645e3d89cf5d0a175ad,bd7adba8d49a095ab4d9c645e3d89cf5d0a175ad,"Split MRU functionality into separate command

Instead of having an option that changes the behavior of the existing
buffer finder, make a separate command so you can do either
`:CommandTBuffer` or `:CommandTMRU`.

If a user prefers the MRU approach, they can bind the existing buffer
finder to something else:

  nnoremap <silent> <leader>f :CommentTBuffer<CR>
  nnoremap <silent> <leader>b :CommentTMRU<CR>

(or similar...)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 04:55:56,https://api.github.com/repos/wincent/command-t/git/commits/57aaa37c8567b0c2ab360e1a7fdeb8357a42e463,57aaa37c8567b0c2ab360e1a7fdeb8357a42e463,"Drop an unnecessary `#compact` call

We `#compact` further down in the method, so this first call isn't
necessary.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 04:48:42,https://api.github.com/repos/wincent/command-t/git/commits/480d51233e44500fa125bb06546cd3aeb1cf9993,480d51233e44500fa125bb06546cd3aeb1cf9993,"Rename Mru -> MRU

For consistency, let's use ""MRU"" consistently over ""Mru"", because it is
more idiomatic.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 02:08:14,https://api.github.com/repos/wincent/command-t/git/commits/e5bf44ca984a9178e53af1ddb0b25c684b4750f8,e5bf44ca984a9178e53af1ddb0b25c684b4750f8,"Make MruBufferScanner inherit from BufferScanner

Much like we did for the MruBufferFinder, make the MruBufferScanner
inherit from the BufferScanner, and for the same reasons.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 02:06:48,https://api.github.com/repos/wincent/command-t/git/commits/e31b5a5f5f4758aa63c5bb425df193c446fcdaf9,e31b5a5f5f4758aa63c5bb425df193c446fcdaf9,"Make the MRU buffer stack an actual stack

It was really being used as a queue; if we're going to call it a stack,
let's make it one for consistency.

The added `#reverse` may look like we're doing more work here, but
getting rid of the repeated `#unshift` operations probably make this a
net win.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 01:46:00,https://api.github.com/repos/wincent/command-t/git/commits/8537a0c3a87a436c6040ddfb4c2bcfe79c38ac76,8537a0c3a87a436c6040ddfb4c2bcfe79c38ac76,"Make MruBufferFinder inherit from BufferFinder

Even though they don't share any code, they are conceptually related
(there is a stronger ""is a"" relationship between the MruBufferFinder and
the BufferFinder than there is between the MruBufferFinder and the
abstract Finder superclass).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 01:41:00,https://api.github.com/repos/wincent/command-t/git/commits/61b5122b2a0dd8d31a7139316ee7ec1377de3e80,61b5122b2a0dd8d31a7139316ee7ec1377de3e80,"Improve diagnostic info in CommandT::Stub error message

Was looking at this file while refactoring the MRU buffer code; took the
opportunity to leave it better. Hopefully this is the first of several
improvements that will make it easier to troubleshoot installation woes.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 01:40:11,https://api.github.com/repos/wincent/command-t/git/commits/769fdd09115a12c28cc6ac95057929b49409a570,769fdd09115a12c28cc6ac95057929b49409a570,"Add missing method to CommandT::Stub

Noticed while refactoring the MRU buffer code.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 01:39:55,https://api.github.com/repos/wincent/command-t/git/commits/6a27e6764c9d7d4221136e52fe297d499bc1f833,6a27e6764c9d7d4221136e52fe297d499bc1f833,"Fix some cosmetic typos

Noticed while refactoring the MRU buffer code.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 01:32:34,https://api.github.com/repos/wincent/command-t/git/commits/8f7c7ad138bcdab90bfab4d8c42bdf8faf3edf02,8f7c7ad138bcdab90bfab4d8c42bdf8faf3edf02,"Get rid of $scanner global variable

Move the concern of tracking MRU buffers out of the MruBufferScanner and
into a dedicated module, thus eliminating the $scanner global variable.

It's true that the new (singleton) MRU module is a global in disguise,
but at least it is a namespaced global which means that we're not
polluting the Ruby environment that other plug-ins might be operating in
with additional variables.

As a bonus, this allows us to keep some noise out of the scanner, and
encapsulate it in a well-contained module with a single purpose.

Also, this means that we track seen buffers from the very beginning, as
soon as the plug-in is loaded. Previously, tracking would only start as
a side effect of a call to the `#list_matches` method in the controller
(because it calls `#buffer_finder`, which instantiates the
MruBufferFinder and memoizes it).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 00:50:05,https://api.github.com/repos/wincent/command-t/git/commits/80f6cf33dcf4d0d0d0d60ada99e03c59db846feb,80f6cf33dcf4d0d0d0d60ada99e03c59db846feb,"doc: Add Ton van den Heuvel to AUTHORS section

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-31 00:47:52,https://api.github.com/repos/wincent/command-t/git/commits/63af0dcfdc6a2334e1a090db506f070c12548dcc,63af0dcfdc6a2334e1a090db506f070c12548dcc,"Add missing copyright headers

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
ton,2012-10-11 12:17:48,https://api.github.com/repos/wincent/command-t/git/commits/2172e42c3910aa70ceaaaab0f01ab9e212e40c3a,2172e42c3910aa70ceaaaab0f01ab9e212e40c3a,"Add support for MRU buffer ordering

Originally submitted at:

  https://github.com/wincent/Command-T/pull/50

Modifications from the original pull request:

- rebased (controller has changed quite a bit in the meantime)
- removed duplicate definition of `#list_matches` method
- replaced some `and`/`not` with `&&` and `!`
- broke a long ternary across multiple lines

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-29 21:08:43,https://api.github.com/repos/wincent/command-t/git/commits/c87dd7c79d6d66cc82064ad6048229fc633b6a16,c87dd7c79d6d66cc82064ad6048229fc633b6a16,"Merge branch 'rpuntaie/master' into next

* branch 'rpuntaie/master':
  Add Roland Puntaier to AUTHORS section of docs
  Drop c99 mode to enable compilation on mingw

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-29 21:08:14,https://api.github.com/repos/wincent/command-t/git/commits/fddb188b1e98ee41d0a90e210feff5d054d845d4,fddb188b1e98ee41d0a90e210feff5d054d845d4,"Add Roland Puntaier to AUTHORS section of docs

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
rpuntaie,2014-01-18 14:26:28,https://api.github.com/repos/wincent/command-t/git/commits/6fd91e2ae60d069251d40209e2c9a69828e44334,6fd91e2ae60d069251d40209e2c9a69828e44334,"Drop c99 mode to enable compilation on mingw

This avoids the 'unknown type name off_t' error that will otherwise
occur:

  http://sourceforge.net/p/mingw/bugs/2046/

Originally submitted at:

  https://github.com/wincent/Command-T/pull/63

Minor tweaks applied:

- squashed two commits into one
- reordered some lines to keep comments close to the lines they actually
  apply to
- de-c99-ize additional sites missed by original commit (eg. watchman.c
  file)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-29 15:08:50,https://api.github.com/repos/wincent/command-t/git/commits/a5f07d4a642141b98ac9dd96638fb89c1f1f622b,a5f07d4a642141b98ac9dd96638fb89c1f1f622b,"Doc updates

- added a FAQ section
- fixed a typo
- turned a ""see"" reference into a navigable link
- improved trouble-shooting documentation
- augmented and polished TIPS section
- started prepping for 1.8 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-28 05:57:48,https://api.github.com/repos/wincent/command-t/git/commits/52214cea74de4686baf41d99d810121ee4f90b1f,52214cea74de4686baf41d99d810121ee4f90b1f,"Update specs for Ruby 1.8 compatibility

The implementation does work under 1.8, but the specs needed some
convincing of that fact.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-28 05:31:46,https://api.github.com/repos/wincent/command-t/git/commits/12e26570c87516363364b1a316e2ead5c491790d,12e26570c87516363364b1a316e2ead5c491790d,"Fix compilation errors on 1.8

1.8 has an st.h header which defines ST_CONTINUE (et al), which is
apparently not included by default.

1.9 has a ruby/st.h header, included by default, and also a st.h header
for backwards compatibility. The latter works but issues a warning to
the console.

Let's check for the presence of the headers and use the appropriate one.
Note that ruby/st.h has the standard include guards in place, so we need
not worry about inadvertently including things twice.

Reported here:

  https://github.com/wincent/Command-T/issues/67#issuecomment-38815959

Leads to:

  watchman.c:188:12: error: use of undeclared identifier 'ST_CONTINUE'

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-28 04:53:18,https://api.github.com/repos/wincent/command-t/git/commits/c73d58e478a1d61742e2aee9a07ea430f6b8c983,c73d58e478a1d61742e2aee9a07ea430f6b8c983,"Silence a compiler warning

The compiler doesn't know that `rb_raise` longjmps us out of the
function, so make it feel better by pretending that we'll return a VALUE
no matter what.

Fixes the Clang warning:

  watchman.c:470:1: warning: control may reach end of non-void function [-Wreturn-type]

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-23 06:43:47,https://api.github.com/repos/wincent/command-t/git/commits/96d26bf1c00a252ec5d6dfbaa6fe066ebd9e5c6d,96d26bf1c00a252ec5d6dfbaa6fe066ebd9e5c6d,"Reorganize benchmark files

Give ""benchmark.rb"" a more descriptive name, and move it down into the
""benchmarks"" subdirectory.

Updated some relative paths.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-23 02:49:22,https://api.github.com/repos/wincent/command-t/git/commits/4b2837e8c1312be334e64bac7f14558f7ffc53ba,4b2837e8c1312be334e64bac7f14558f7ffc53ba,"Talk to Watchman using its binary protocol

A couple of people have reported problems building and using Command-T
as a result of issues with the JSON library, which we started requiring
in commit d24139eb779. For example, see:

  https://github.com/wincent/Command-T/issues/68

This commit removes that dependency, replacing it with an implementation
of the Watchman binary protocol. As a bonus (and in fact, this was my
initial motivation for starting to look at this, before I'd heard of
JSON-related problems), this reduces the cost of communicating with
Watchman by about half:

                          user     system      total        real
    watchman JSON     1.310000   0.250000   1.620000 (  5.784897)
    watchman binary   0.620000   0.220000   0.890000 (  3.839422)

Those are the timings produced by running the script in
bin/benchmarks/watchman.rb in a Watchman-monitored directory containing
well over 300k files. The speed-up is due to the fact that the binary
protocol format is much more compact, resulting in less data being
transmitted over the socket, and also because parsing JSON is typically
pretty slow.

The protocol adapter added here has been written in a relatively
straightforward way, without any hoop-jumping in the name of
optimization. It would likely be possible to make it go even faster with
some corner-cutting, but I don't really see the need for that at this
point.

I don't really test on Windows any more, so I've tried to make this safe
on Windows by adding some checks for header files which I don't expect
to be available there. On such a platform, compilation should still
succeed, but the compiled code just has some stub modules in it which
raise exceptions. Watchman doesn't work on Windows anyway, so Windows
uses shouldn't really notice any difference.

This is the first cut; I expect to do some more clean-up in follow-up
commits.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-17 00:54:41,https://api.github.com/repos/wincent/command-t/git/commits/1fcc9da1caeb80a6049bc91f24777b7c075f444b,1fcc9da1caeb80a6049bc91f24777b7c075f444b,"Fix WatchmanFileScanner for Ruby < 1.9.2 compatibility

`File.realpath` appeared in 1.9.2 (I believe), so swap it out for
Pathname instead, which should work everywhere.

Note that the call as it existed was not optimal anyway, as the call to
`File.expand_path` was redundant.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-10 06:36:54,https://api.github.com/repos/wincent/command-t/git/commits/ede4d4451986e7f9cb3a8780f79832d1154d1b0a,ede4d4451986e7f9cb3a8780f79832d1154d1b0a,"Doc: correct time scale in TIPS section

This was originally about 10 seconds, and then I switched to the JSON
protocol and it got an order of magnitude better. (There is a binary
protocol that will make it likely faster still, but I haven't gotten
around to implementing that yet.)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-10 06:16:04,https://api.github.com/repos/wincent/command-t/git/commits/987c70d2db0687a7ede34523535ed42f989cb4a0,987c70d2db0687a7ede34523535ed42f989cb4a0,"Update docs for 1.7 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-06 16:05:00,https://api.github.com/repos/wincent/command-t/git/commits/069be54d3452c2b8d7021dccf46f193c94d07db9,069be54d3452c2b8d7021dccf46f193c94d07db9,"Improve pthread detection

My initial attempts at this weren't ideal, as some people are having
trouble building Command-T, especially those with older versions of
Ruby:

  https://wincent.com/issues/2135
  https://wincent.com/issues/2153
  https://github.com/wincent/Command-T/issues/65

I'd forgotten about the `have_library` method in the `MakeMakefile`
module, which not only checks for the presence of the library, but also
modifies the list of libraries to be linked:

  http://ruby-doc.org/stdlib-2.1.0/libdoc/mkmf/rdoc/MakeMakefile.html#method-i-have_library

Note that I guard all of this inside a `THREAD_MODEL` check. I believe
this should prevent us from linking to pthread when the local Ruby has
explicitly opted out of using pthread (common in older Ruby versions due
to performance overhead).

I tested this against a few versions of Ruby on my OS X box:

  1.8.7-p249
  1.9.1-p430
  1.9.2-p326
  1.9.3-p545
  2.0.0-p451
  2.1.0
  2.1.1

With the command:

  ruby -r rbconfig -e 'puts RbConfig::CONFIG[""THREAD_MODEL""]'

This prints ""pthread"" on 1.9.1 and up, and on 1.8.7 it prints ""nil"". On
2.0.0 and up `RbConfig` is always visible, so this works even without
the `require`.

Hopefully this will work pretty much everywhere. Fingers crossed.

Signed-off-by: Wincent Colaiuta <win@wincent.com>

diff --git a/ruby/command-t/extconf.rb b/ruby/command-t/extconf.rb
index eedeae0..44cfacc 100644
--- a/ruby/command-t/extconf.rb
+++ b/ruby/command-t/extconf.rb
@@ -1,4 +1,4 @@
-# Copyright 2010-2013 Wincent Colaiuta. All rights reserved.
+# Copyright 2010-2014 Wincent Colaiuta. All rights reserved.
 #
 # Redistribution and use in source and binary forms, with or without
 # modification, are permitted provided that the following conditions are met:
@@ -36,8 +36,10 @@ def header(item)
 header('stdlib.h')
 header('string.h')

-# optional headers
-have_header('pthread.h') # sets HAVE_PTHREAD_H if found
+# optional
+if RbConfig::CONFIG['THREAD_MODEL'] == 'pthread'
+  have_library('pthread', 'pthread_create') # sets HAVE_PTHREAD_H if found
+end

 RbConfig::MAKEFILE_CONFIG['CC'] = ENV['CC'] if ENV['CC']"
wincent,2014-03-05 15:23:51,https://api.github.com/repos/wincent/command-t/git/commits/ad9557277298ffe5f6e0893cc0d76a12313dc87c,ad9557277298ffe5f6e0893cc0d76a12313dc87c,"Convert a couple more settings manipulations in the MatchWindow class

I originally didn't include these in the recent refactorings of the
Settings class as they have a somewhat different lifecycle than the
other settings changes made by the MatchWindow class (ie. most of the
changes are made as a batch on initial display and restored at the end,
but the `#lock` and `#unlock` calls can be made at distinct moments as
the result of other methods being called).

Nevertheless, they are `:setlocal` calls, so routing them through the
Settings class is not going to disturb its internal state anyway. In the
interests of reducing noise in the MatchWindow class and getting maximum
re-use out of the Settings abstraction, this commit swaps them over to
use the ""DSL"".

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-05 15:20:18,https://api.github.com/repos/wincent/command-t/git/commits/68b1920a39372a69a0b3953a95661922a9cf920c,68b1920a39372a69a0b3953a95661922a9cf920c,"Add a tiny ""DSL"" to reduce settings verbosity in MatchWindow class

This reduces some of the noise in this file, at the minor cost of adding
a non-obfuscating level of indirection.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-05 15:12:36,https://api.github.com/repos/wincent/command-t/git/commits/af1e546e5dffac3084db1eb322fdc091bce99a68,af1e546e5dffac3084db1eb322fdc091bce99a68,"Further abstract local vs global distinction inside Settings class

Commit 514194c made the Settings class a little smarter. We can make the
MatchWindow class (the sole client of the Settings class) simpler by
burying the details about the distinction between local and global
settings inside of the Settings class.

Specifically, the Settings class knows which settings are global and
which are local, so the calling MatchWindow class just tells it to apply
settings and lets the Settings class worry about exactly how that should
happen.

This is a net increase in the number of lines, but worth it because the
Settings class will be infrequently touched, and the more
actively-modified MatchWindow class is simpler for it.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-05 01:54:58,https://api.github.com/repos/wincent/command-t/git/commits/f9ea3dbcc5d684b91e7330a1117b9127317e7441,f9ea3dbcc5d684b91e7330a1117b9127317e7441,"Fix controller spec failures

With ""judicious"" stubbing. The amount of stubbing in this spec is an
immense smell, but pursuing the quick fix in the name of getting the
suite green again rather than engaging in a deeper reworking for now.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-05 01:34:58,https://api.github.com/repos/wincent/command-t/git/commits/44fce5a9a972ff0e95ac534b49256efd2ed75ae0,44fce5a9a972ff0e95ac534b49256efd2ed75ae0,"Move RubyFileScanner specs into subdirectory

We had 4 remaining spec failures in this file; this commit tries to
stick as close to being a straight move as possible to make it clear
what's happening, but just moving the code makes the specs pass.

The issue is that we recently factored some of the functionality of the
FileScanner class into a RubyFileScanner subclass, so the specs for the
FileScanner were seeking to verify behavior which was no longer present
in the class.

In this commit we split the specs out just as we split the FileScanner
and RubyFileScanner functionality out. It moves the code into another
file and changes the references to the FileScanner class to
RubyFileScanner.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-05 01:25:39,https://api.github.com/repos/wincent/command-t/git/commits/866027d97b645b4da047d6101438ae18dba8f80d,866027d97b645b4da047d6101438ae18dba8f80d,"Apply ghastly hack to fix failing spec

This is evidently breaking all the rules about encapsulation and not
testing implementation details, but it's the quickest way to get this
failing test passing again.

(And note, it is not strictly worse than what was there before either,
because the reason the test was broken was precisely because it was
wedded to implementation details; it turns out that this spec is an
assertion about implementation details...)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-04 16:21:07,https://api.github.com/repos/wincent/command-t/git/commits/514194c045bf5f13e5e1d0662033838393c2a3ce,514194c045bf5f13e5e1d0662033838393c2a3ce,"Make Settings class more flexible, less brittle

I hadn't touched this class for about 4 years, and this morning had to
add another setting to it in order to fix a bug (see commit
2861dc1a7e52). With a more flexible design, I could have left it
untouched.

This commit implements that design, teaching the settings class to
fully mediate between the caller who wants to save/restore some
settings, and Vim. It records the settings that are to be changed, makes
the changes, and can restore the settings by ""replaying"" the recorded
settings.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-03-04 15:42:26,https://api.github.com/repos/wincent/command-t/git/commits/2861dc1a7e5241f250234c03f1e8f8d1c24c00a8,2861dc1a7e5241f250234c03f1e8f8d1c24c00a8,"Don't clobber global 'updatetime' setting

Commit ff72bd9b added input debouncing, and along with it a bug in which
we were setting the global 'updatetime' setting and not restoring it.

The default value of 50 could make some mappings such as <C-X>_<C-P>
unlikely to work after opening Command-T.

This commit saves and restores the setting on opening/closing the match
window. I applied some local clean-up as well, making the controller's
`#get_number` method accept a default argument.

Thanks to Michael Jansen for the bug report.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-28 05:55:29,https://api.github.com/repos/wincent/command-t/git/commits/ff7c720e12934b4225c3953adbef7bf40cbe0f1d,ff7c720e12934b4225c3953adbef7bf40cbe0f1d,"Remove clearmatches() call

This was causing problems with the vim-css-color plug-in, blowing away
the matches that it was setting up. When I added this a long time ago in
commit d06f51f, I thought it only affected the current window, but I was
evidently wrong about that. (I'm guessing I probably didn't notice
because I likely had some autocmd that was restoring the settings any
time I opened a new file.)

The original use case was to prevent the rules that I had set up to
highlight long lines from applying in the Command-T match listing. There
are better ways to do that kind of highlighting anyway (like the
`'colorcolumn'` setting), so let's just remove the problematic call.

See:

    https://github.com/ap/vim-css-color/issues/31

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-28 05:21:24,https://api.github.com/repos/wincent/command-t/git/commits/c93ce28602699470f9c4d9bfd55213c4a0d9736d,c93ce28602699470f9c4d9bfd55213c4a0d9736d,"Merge branch 'shlomif/doc-typo-fix'

* shlomif/doc-typo-fix:
  Add Shlomi Fish to the AUTHORS section
  Correct a typo"
wincent,2014-02-28 05:21:02,https://api.github.com/repos/wincent/command-t/git/commits/321213b6987f41a6d8c429bc5084eae3ca670257,321213b6987f41a6d8c429bc5084eae3ca670257,"Add Shlomi Fish to the AUTHORS section

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
shlomif,2014-02-19 17:53:49,https://api.github.com/repos/wincent/command-t/git/commits/d30672c0aede906aa5897c3c1c3040a8cd98a170,d30672c0aede906aa5897c3c1c3040a8cd98a170,"Correct a typo

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-28 03:47:39,https://api.github.com/repos/wincent/command-t/git/commits/279c9477df89d12ae9d53747d07a5a538b96430c,279c9477df89d12ae9d53747d07a5a538b96430c,"Merge branch 'dzhioev/threads_count_fix' into master

* commit 'dzhioev/threads_count_fix':
  Add Pavel Sergeev to the credits
  Fix Util.processor_count method on some platforms"
wincent,2014-02-28 03:46:57,https://api.github.com/repos/wincent/command-t/git/commits/7693906e24e8d9dac45d24091a3c50b60b6cde6a,7693906e24e8d9dac45d24091a3c50b60b6cde6a,"Add Pavel Sergeev to the credits

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
dzhioev,2014-02-27 14:17:24,https://api.github.com/repos/wincent/command-t/git/commits/e5b6301944eb2d0e76d7f3f04c47a47080730999,e5b6301944eb2d0e76d7f3f04c47a47080730999,"Fix Util.processor_count method on some platforms

RbConfig was not imported in util.rb. As a result processor_count always
returned 1 from its rescue-branch on some platforms:

    $ ruby --version
    ruby 1.8.7 (2011-06-30 patchlevel 352) [x86_64-linux]
    $ ruby -e ""p RbConfig""
    -e:1: uninitialized constant RbConfig (NameError)

Compare with:

    $ ruby --version
    ruby 2.1.0p0 (2013-12-25 revision 44422) [x86_64-linux]
    $ ruby -e ""p RbConfig""
    RbConfig

Originally submitted as:

    https://github.com/wincent/Command-T/pull/64

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-12 07:03:44,https://api.github.com/repos/wincent/command-t/git/commits/2992bb84a15f563dae7af73c1d62afa1f08559ec,2992bb84a15f563dae7af73c1d62afa1f08559ec,"Update bundle

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-12 06:46:09,https://api.github.com/repos/wincent/command-t/git/commits/62345c9cc24f3275ef542f3f18bf6ed9caf424a8,62345c9cc24f3275ef542f3f18bf6ed9caf424a8,"Fix edge case in ""Find"" scanner with relative path

When Command-T was invoked with a path argument (eg. `:CommandT foo`),
the paths in the listing would show up as ""foo/thing"" etc, and when
selected would open as ""foo/foo/thing"" etc.

This commit fixes that oversight, and brings the ""Find"" scanner back
into line with the behavior of the default Ruby scanner. The Watchman
scanner was unaffected by this bug, except in cases where it fell back
to using the ""Find"" scanner as a backup.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-06 01:25:06,https://api.github.com/repos/wincent/command-t/git/commits/85ece0219adfe4c5b842acb6122489a8a40db5cd,85ece0219adfe4c5b842acb6122489a8a40db5cd,"Speed up WatchmanFileScanner by an order of magnitude

It was already pretty fast (about 10 seconds on a large hierarchy that
I've been testing it with), but this commit drops that to about 1
second.

I haven't profiled this to know exactly where the time was/is being
spent, but this change massively reduces the payload that Watchman has
to send over the socket (ie. just the name and none of the metadata, and
only info for files rather than all tracked paths), which means quicker
delivery of the payload, quicker parsing, and less memory pressure from
intermediate objects.

The way it was working before actually had one unintended behavior,
which was to expose directories in the listing as well. This was kind of
interesting, as Vim could ""open"" those directories for you. But it was
also inconsistent with all the other scanners, and on a very large
project, those directories could often get in the way of finding files,
which is what this plug-in is all about.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-03 03:45:55,https://api.github.com/repos/wincent/command-t/git/commits/41c8dfffbad2d38d3dcfb76f7eccf6c18aca1700,41c8dfffbad2d38d3dcfb76f7eccf6c18aca1700,"Merge branch 'pluggable-file-scanners' into next

* pluggable-file-scanners:
  Add ""watchman"" file scanner and accompanying documentation
  Remove contrib directory
  Finally commit of fswatcher files
  Simplify requiring of db and argv modules
  Exit on showing help
  Move options parsing into separate file
  Move DB wrapper into a separate file
  Disperse row operations during benchmarking
  Add args passing to fswatcher
  Add some more DB operations to complete benchmarks
  Add #bind method for use with prepared statements
  Add partial work-in-progress of fswatcher process
  Fix typo in Controller#delete method
  Silence potentially noisy stderr from `find` command
  Silence a warning from Linux `find`
  Add `find`-based scanner
  Move FileScanner into a FileScanner::RubyFileScanner subclass"
wincent,2014-02-03 01:05:59,https://api.github.com/repos/wincent/command-t/git/commits/d24139eb779131b6a2414326d9023a6e5790e6d4,d24139eb779131b6a2414326d9023a6e5790e6d4,"Add ""watchman"" file scanner and accompanying documentation

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-03 01:01:46,https://api.github.com/repos/wincent/command-t/git/commits/3ff36c957a1bc00dd074967295d89c60b4cc3e15,3ff36c957a1bc00dd074967295d89c60b4cc3e15,"Remove contrib directory

It was an experiment, and I've since found what looks to be a much
better and cheaper way.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-03 01:00:54,https://api.github.com/repos/wincent/command-t/git/commits/dc51e84153b97c8dadc17cc98a8e1c78fb7e3e89,dc51e84153b97c8dadc17cc98a8e1c78fb7e3e89,"Finally commit of fswatcher files

I've ended up tacking a different route here, but before I kill all the
files I want to leave a snapshot of how things were in the history.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-02-01 02:10:49,https://api.github.com/repos/wincent/command-t/git/commits/7fd15a0b2ddd5963d0e218df36503acbd3d7a2f1,7fd15a0b2ddd5963d0e218df36503acbd3d7a2f1,"Simplify requiring of db and argv modules

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-31 16:10:11,https://api.github.com/repos/wincent/command-t/git/commits/8f4d987c015f0a8177fe8749a3c455d9c00d079e,8f4d987c015f0a8177fe8749a3c455d9c00d079e,"Exit on showing help

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-31 16:08:25,https://api.github.com/repos/wincent/command-t/git/commits/cadeb6857c5dc740a99c6213b08ef738264149c7,cadeb6857c5dc740a99c6213b08ef738264149c7,"Move options parsing into separate file

Another somewhat distracting detail moved out the way.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-31 15:57:28,https://api.github.com/repos/wincent/command-t/git/commits/110993d556ebdbca4bc3723d6d0daa12edac8787,110993d556ebdbca4bc3723d6d0daa12edac8787,"Move DB wrapper into a separate file

Keep this somewhat extraneous detail out of the way.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-31 15:14:02,https://api.github.com/repos/wincent/command-t/git/commits/04a48ca210752ed8a56d60f51335435751d38641,04a48ca210752ed8a56d60f51335435751d38641,"Disperse row operations during benchmarking

Just spread it out a bit so we're not always working on the first 25% of
the table. Still, the workload isn't super representative of real world,
but that's probably ok.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-31 06:55:06,https://api.github.com/repos/wincent/command-t/git/commits/3bd85fb6921755eabe37d92c9e8c4ddb65f1761f,3bd85fb6921755eabe37d92c9e8c4ddb65f1761f,"Add args passing to fswatcher

The ""-p/--port"" option does nothing right now, but it will later.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-30 17:36:10,https://api.github.com/repos/wincent/command-t/git/commits/9162bf1db807b06e380d8bb3462f7d340549fb1c,9162bf1db807b06e380d8bb3462f7d340549fb1c,"Add some more DB operations to complete benchmarks

Here are the results from a sample run of an in-memory database
with 400,000 rows (ie. 400k INSERTs, 100k UPDATEs, a SELECT of 400k
rows, and 100k DELETEs).

  Timings:
    Connect 0.002 seconds
    PRAGMA 0.001 seconds
    CREATE TABLE 0.001 seconds
    CREATE INDEX 0.001 seconds
    INSERT 21.168 seconds
    UPDATE 1 hour, 46 minutes, 58 seconds
    SELECT 0.953 seconds
    DELETE 1 hour, 27 minutes, 8 seconds
  Total: 3 hours, 14 minutes, 29 seconds

It is pretty slow... I'm particularly surprised at how slow UPDATEs are
compared to INSERTs. Likewise, the DELETE performance is surprising.

This might actually be OK as large parts of the tree are unlikely to be
changing at a time.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-30 17:08:33,https://api.github.com/repos/wincent/command-t/git/commits/64d3e368fa99a68f3b79304869fdaec181e5d40a,64d3e368fa99a68f3b79304869fdaec181e5d40a,"Add #bind method for use with prepared statements

Hopefully this won't be confused with Function.prototype#bind. I am not
too happy with the verbosity of this, but it is somewhat cleaner than
what was there before. I'll keep thinking on it and see if I can come up
with a better way.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-30 16:28:04,https://api.github.com/repos/wincent/command-t/git/commits/1b61d2b9438e68d26d87adf8f0b6e64e07e006cf,1b61d2b9438e68d26d87adf8f0b6e64e07e006cf,"Add partial work-in-progress of fswatcher process

Just some simple benchmark operations to get a sense of whether
this thing can work. More to come.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-27 21:39:11,https://api.github.com/repos/wincent/command-t/git/commits/4763de2e2e6975d561034e46ff86d22cba470903,4763de2e2e6975d561034e46ff86d22cba470903,"Fix typo in Controller#delete method

This typo was originally introduced in commit ff72bd9bdffaf84247288a0.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-27 21:39:11,https://api.github.com/repos/wincent/command-t/git/commits/e82448d0acb6eb9f06f99d388cd95be3c49d2e16,e82448d0acb6eb9f06f99d388cd95be3c49d2e16,"Fix typo in Controller#delete method

This typo was originally introduced in commit ff72bd9bdffaf84247288a0.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-26 09:06:04,https://api.github.com/repos/wincent/command-t/git/commits/6f890bccf866cb3fb7848d3374284c7edef14de8,6f890bccf866cb3fb7848d3374284c7edef14de8,"Silence potentially noisy stderr from `find` command

`find` may spew a bunch of harmless but annoying messages to stderr --
things like permissions errors and such. On a large project, the
likelihood of running into one of these edge cases is much higher. For
the benefit of such projects, let's just swallow stderr.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-26 06:14:16,https://api.github.com/repos/wincent/command-t/git/commits/9bc21ca353621828ae966b0e45cd4b9216b9b7b8,9bc21ca353621828ae966b0e45cd4b9216b9b7b8,"Silence a warning from Linux `find`

`find` on Linux (at least, on the CentOS 5.2 box I am testing on)
doesn't like the order of these arguments. Specifically, it prints the
following to stderr:

  find: warning: you have specified the -maxdepth option after a
  non-option argument -name, but options are not positional (-maxdepth
  affects tests specified before it as well as those specified after
  it).  Please specify options before other arguments.

Harmless, but an eyesore nonetheless, so let's change it.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-26 03:36:04,https://api.github.com/repos/wincent/command-t/git/commits/540cc9013322c2b048a21ae4c181b79f6213c149,540cc9013322c2b048a21ae4c181b79f6213c149,"Add `find`-based scanner

This is another enhancement based off of a patch by Yiding Jia. It
allows you to choose to use a `find`-based scanner, which may be
substantially faster than doing it all in Ruby.

I have to benchmark this; it's possible that by respecting 'wildignore'
the speed benefits of shelling out to a pure-C tool will be negated
(Yiding's original patch did no filtering). At least as a starting
point, I want this to be as close to feature-parity as possible with the
Ruby scanner, which means that it respects g:CommandTMaxDepth,
g:CommandTMaxFiles, g:CommandTScanDotDirectories, and
g:CommandTWildIgnore.

To try out the scanner, use:

  :let g:CommandTFileScanner='find'

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-25 18:15:34,https://api.github.com/repos/wincent/command-t/git/commits/776bd7a47dc1cd2fd0347fc13418eb5cd38cf776,776bd7a47dc1cd2fd0347fc13418eb5cd38cf776,"Move FileScanner into a FileScanner::RubyFileScanner subclass

We want to add support for different scanning strategies. This commit
should be a no-behavior change, as we're just moving the Ruby-specific
logic from FileScanner down into a new FileScanner::RubyFileScanner
subclass.

The next step will be to show how another subclass can be used with
different performance characteristics.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2014-01-25 07:55:22,https://api.github.com/repos/wincent/command-t/git/commits/ff72bd9bdffaf84247288a0d3ee7b0054db7d3a7,ff72bd9bdffaf84247288a0d3ee7b0054db7d3a7,"Debounce key-presses to improve responsiveness

This idea is based on a patch from Yiding Jia, with some additional
logic added to ensure that potentially expensive matching only occurs
when really needed (ie. we don't re-match just because you hit a cursor
up or down key).

Not sure what the sweet spot for the debounce interval is, so starting
with 50ms, and making it configurable. I suspect that on really large
hierarchies you might want this to be higher (say, 100, 150 or even
200ms) in order to reduce the likelihood of unwanted match computations
kicking off just because you happened to slow a little in typing.

Note the use of augroups here to ensure that we don't keep adding more
and more autocmds to the buffer (depending on the platform, the buffer
will be cleaned up with bwipeout! or bunload!; in practice the same
buffer is usually used over and over again, so we wind up with a single
autocmd assigned to a buffer designated as `<buffer=2>` or similar).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-23 04:47:15,https://api.github.com/repos/wincent/command-t/git/commits/f9d168cdd2da3c20423c9eed9f538cbf0f7914d1,f9d168cdd2da3c20423c9eed9f538cbf0f7914d1,"Remove ""archive"" Rake task

I'm not going to maintain the ""releases"" branch anymore, for reasons
described in the README on that branch, so this Rake task no longer has
a reason to exist.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-23 04:39:43,https://api.github.com/repos/wincent/command-t/git/commits/7c4557ed3ceb1d1ac1f9cf90a5d566a8b1934c60,7c4557ed3ceb1d1ac1f9cf90a5d566a8b1934c60,"Update docs for 1.6.1 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-19 15:55:01,https://api.github.com/repos/wincent/command-t/git/commits/5a10ea623cefdd23b5fa9ab4d83318eb09b76c7d,5a10ea623cefdd23b5fa9ab4d83318eb09b76c7d,"Defer processor count detection until runtime

As suggested here:

  https://wincent.com/issues/2133

Copying the text of the linked issue:

  You assume, that the Ruby extension is build on the same machine,
  where the code is executed. This assumption is invalid for Fedora.
  When I package command-t for use with Fedora, the extension is built
  on Koji builder. There might be powerful CPUs with plenty of cores,
  but it says nothing about my machine.

I've moved the processor count detection into a runtime method on a new
CommandT::Util module (seeing as there isn't any other obvious place to
put it right now). The count is memoized to avoid exposure.

In the C code that consumes the count (the Matcher#sorted_matches_for
method), I do do a `nil` check because there are a few callers in places
like the test suite that shouldn't have to bother with passing it in,
but I don't worry about more robust sanity checking, leaving that up to
the CommandT::Util method instead.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-19 15:11:02,https://api.github.com/repos/wincent/command-t/git/commits/4c57f8e1577af148f79ec18dd31b5560c7f501e0,4c57f8e1577af148f79ec18dd31b5560c7f501e0,"Make sanity check more sane

Having a processor count of 0 wouldn't be very sane either, so let's
clamp within the range of 1..32 (inclusive).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-19 14:56:48,https://api.github.com/repos/wincent/command-t/git/commits/7df2a7ff7a26f2e3b4eda5c7c31b92c468d671c3,7df2a7ff7a26f2e3b4eda5c7c31b92c468d671c3,"Merge remote-tracking branch 'voxik/patch-1'

* voxik/patch-1:
  Add installation note about Fedora"
voxik,2013-12-19 14:27:32,https://api.github.com/repos/wincent/command-t/git/commits/2f43a910c5e62ee738cacd61605cfacb2c0e55d5,2f43a910c5e62ee738cacd61605cfacb2c0e55d5,"Add installation note about Fedora

Since Command-T is packaged for Fedora, installing from system
repository should be the preferred way.

Originally submitted here:

  https://github.com/wincent/Command-T/pull/61

with minor amendments applied here (capitalization and an edit for
brevity).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-19 14:56:35,https://api.github.com/repos/wincent/command-t/git/commits/b5604b0fe55eddf1b3cec085e8d2301eeaef78de,b5604b0fe55eddf1b3cec085e8d2301eeaef78de,"Merge remote-tracking branch 'voxik/add-defs-space'

* voxik/add-defs-space:
  Always prepend space to -DPROCESSOR_COUNT"
voxik,2013-12-19 13:43:41,https://api.github.com/repos/wincent/command-t/git/commits/add7297414efcb453780ee9bd9b7c2c7eb2f4302,add7297414efcb453780ee9bd9b7c2c7eb2f4302,"Always prepend space to -DPROCESSOR_COUNT

This prevents issues when something is already declared in DEFS.

Originally submitted here:

  https://github.com/wincent/Command-T/pull/60

As noted in the comment there:

  ""Just for the record, this caused issues on Fedora 20 i386 (the x86_64
  build is ok)""

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-17 13:29:09,https://api.github.com/repos/wincent/command-t/git/commits/2be7f46c9b78d0c0084866c8278dc35cf23a88ea,2be7f46c9b78d0c0084866c8278dc35cf23a88ea,"Doc: note that vimball isn't the preferred distribution method

Vimball was ""the way"" to distribute Vim plug-ins back when Command-T was
written. Since then, the world has gotten much better, so update the
documentation to reflect the priority order.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-17 13:19:57,https://api.github.com/repos/wincent/command-t/git/commits/4db058617e1173fea387588f6580247cf070ba0b,4db058617e1173fea387588f6580247cf070ba0b,"Doc: apply other updates for OS X

Since these sections of the docs were written, we've had several OS X
releases and a few things have changed (not least of which is that Apple
started calling the OS ""OS X"" instead of ""Mac OS X"").

This commit updates the names, and corrects the claim that the system
Vim doesn't support Ruby (it actually does, at least on Mavericks; I am
not actually sure when that started to be true).

Finally, the principal distribution mode for Xcode has changed, so
that's noted too.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-17 13:02:15,https://api.github.com/repos/wincent/command-t/git/commits/d58653b5d31455d6f47c8aa69451c6a7a34a7e5c,d58653b5d31455d6f47c8aa69451c6a7a34a7e5c,"Merge remote-tracking branch 'andyw8/patch-1'

* andyw8/patch-1:
  Doc: note that 1.8.7 is no longer the default OS X Ruby version"
andyw8,2013-12-16 21:13:27,https://api.github.com/repos/wincent/command-t/git/commits/30b300deead9f22641cd4d64abb5f48fd1ca5f03,30b300deead9f22641cd4d64abb5f48fd1ca5f03,"Doc: note that 1.8.7 is no longer the default OS X Ruby version

Sourced from, with tweaks:

  https://github.com/wincent/Command-T/pull/59

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-16 12:08:49,https://api.github.com/repos/wincent/command-t/git/commits/23ce2779e5791ba69f4c013eac0cf5fb8e1a8e2b,23ce2779e5791ba69f4c013eac0cf5fb8e1a8e2b,"Apply temporary hack to get AWS uploads working

Much as I did in the Clipper repo:

  https://wincent.com/repos/clipper/commits/935c05aea52971ea1a3bab4337cffc5f0e3f344e

Here we apply a hack to get the `aws` tool uploading for the 1.6
release.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-16 11:59:23,https://api.github.com/repos/wincent/command-t/git/commits/1bc2932098e02f7ef1e2ced0af6eb040d3ecd9f3,1bc2932098e02f7ef1e2ced0af6eb040d3ecd9f3,"Reformat HISTORY section to make it parseable again

The `prepare_release_notes` method in the Rakefile requires a blank line
after each ""heading"". It's possible that this is too strict, but I'm
going to leave it as-is for now.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-16 11:25:08,https://api.github.com/repos/wincent/command-t/git/commits/05a90d1ce196ae47c5a90b3e799506a1671bc0fe,05a90d1ce196ae47c5a90b3e799506a1671bc0fe,"Update docs for 1.6 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-16 11:32:36,https://api.github.com/repos/wincent/command-t/git/commits/b3993cd6fbc99b45cea64825c25c75bc4d6b0c10,b3993cd6fbc99b45cea64825c25c75bc4d6b0c10,"Remove StringValue calls from match.c

These calls were probably always overly defensive (for example, the
`needle` already gets submitted to a StringValue call by the caller, and
the `str` value is effectively always a string because the scanners
consistently provide strings; if they didn't, exceptions would be being
thrown here).

So, this is an unnecessary guard, but another reason why it's worth
getting rid of is that it involves touching the Ruby runtime (it's a
macro which expands to several nested function calls, in which it is
possible that exceptions can be raised; see string.c and object.c in the
Ruby source tree) which is considered unsafe in a threaded environment.

If my assumptions here prove to be incorrect, we can always add back
some explicit ""String-ness"" enforcement, but if we do have to do that,
we'll do it at the Scanner level.

One thing to note: I was hoping that this might give us an infinitesimal
speed-up, seeing as we're doing ever so slightly less work now, but the
benchmarks show that there is no measurable difference.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 23:48:53,https://api.github.com/repos/wincent/command-t/git/commits/54ad27a70875ebd4bea1f079f5f46196563f1dfb,54ad27a70875ebd4bea1f079f5f46196563f1dfb,"Set thread count based on processor count

As it is quite difficult to get the processor count in a cross-platform
way, I am doing it only once, at build time, and then using a hard-coded
thread count at run time, passed in via a preprocessor macro.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 23:33:31,https://api.github.com/repos/wincent/command-t/git/commits/13d67e5e0da10dee1a0a7e3a2c19311e2ac44694,13d67e5e0da10dee1a0a7e3a2c19311e2ac44694,"Tweak processor_count method for style, robustness

Some stylistic changes:

  - prefer single quotes over doubles
  - get rid of unnecessary memoization (we'll only be calling it once)

And one robustness change:

  - assume 1 processor in the event that an exception should be raised

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 23:29:23,https://api.github.com/repos/wincent/command-t/git/commits/0f2f66a5506780b1fcae1fc53b35e8c89a0fa3b8,0f2f66a5506780b1fcae1fc53b35e8c89a0fa3b8,"Add a method to detect number of cores on a system

According to Google there are a million different opinions on how best
to do this in cross-platform way. This one looks pretty good.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 23:08:53,https://api.github.com/repos/wincent/command-t/git/commits/6c99731486dd9033beaa4e2dd7db56ad80553e56,6c99731486dd9033beaa4e2dd7db56ad80553e56,"Edit a comment for accuracy

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 23:07:39,https://api.github.com/repos/wincent/command-t/git/commits/84654933b1be471e07e82608f2e08932713a2b05,84654933b1be471e07e82608f2e08932713a2b05,"Rename qsort comparison methods

For similarity with the used-nearby strcmp function from the standard
library, let's go with the shorter cmp_* name rather than comp_*.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 23:06:16,https://api.github.com/repos/wincent/command-t/git/commits/1e60f25fda530ce8031a5bbd82806706ab8b56da,1e60f25fda530ce8031a5bbd82806706ab8b56da,"Rename CommandTMatch_initialize -> calculate_match

Now that this is just a C function rather than a Ruby class, we are no
longer bound by the conventions of the Ruby runtime and can use a
shorter name.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 22:50:44,https://api.github.com/repos/wincent/command-t/git/commits/e63db18c3f9d4c13720ac94984381ebcaa31758e,e63db18c3f9d4c13720ac94984381ebcaa31758e,"Dynamically detect presence of pthread.h

This should hopefully do the right thing, even on Windows.
HAVE_PTHREAD_H should not be set if the header can't be found, so the
threading code should degrade to the main-thread-only version.

Note there is some weirdness here, at least on OS X: as soon as you
include ruby.h, you'll end up including:

  /System/Library/Frameworks/Ruby.framework/Versions/2.0/Headers/ruby/config.h

which itself sets HAVE_PTHREAD_H. This is why I moved the:

  #ifdef HAVE_PTHREAD_H
  #include <pthread.h>
  #endif

guard clause down, until after the inclusion of ruby.h (ie. to avoid the
pthread.h header not being included if mkmf couldn't find it, but then
sections further on down the file from being activated thanks to
config.h). It turns out that this works in any case, just with compiler
warnings about use of undeclared functions, but it's better to be safe
than sorry.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 20:14:43,https://api.github.com/repos/wincent/command-t/git/commits/f5723d3e984a5d2f65a020b8a30394515a97674f,f5723d3e984a5d2f65a020b8a30394515a97674f,"Avoid overhead of threading when search space is small

Don't spawn threads if the search space is small (ie. < 1,000 paths).
Additionally, instead of spawning N threads, spawn N-1 and use the main
thread as the last worker. This allows us to keep the overhead as low as
possible, and also makes things a bit DRY-er.

This brings us back to the unmitigated win territory:

Baseline (no threading):
                          user     system      total        real
  pathological        0.000000   0.000000   0.000000 (  0.004329)
  command-t           0.420000   0.000000   0.420000 (  0.416208)
  chromium (subset)   1.070000   0.000000   1.070000 (  1.071452)
  chromium (whole)    3.680000   0.010000   3.690000 (  3.683207)

With threading (unconditional):
                          user     system      total        real
  pathological        0.010000   0.030000   0.040000 (  0.018285)
  command-t           0.980000   1.850000   2.830000 (  1.391637)
  chromium (subset)   1.480000   0.020000   1.500000 (  0.551915)
  chromium (whole)    5.150000   0.020000   5.170000 (  1.861232)

With threading enabled only for large search spaces:
                          user     system      total        real
  pathological        0.000000   0.000000   0.000000 (  0.004627)
  command-t           0.420000   0.000000   0.420000 (  0.423317)
  chromium (subset)   1.470000   0.020000   1.490000 (  0.551474)
  chromium (whole)    5.050000   0.010000   5.060000 (  1.866479)

It's possible that the threshold should/could be tweaked some more, but
for now 1,000 seems like a reasonable cut-off.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 19:38:55,https://api.github.com/repos/wincent/command-t/git/commits/1b3105e615865ebcc20ae422cc396e0dfed7412b,1b3105e615865ebcc20ae422cc396e0dfed7412b,"Add basic prototype of threaded searching

The code is pretty ugly, so I'll be looking at cleaning it up in
subsequent commits, as well as adding some configurability (automatic or
otherwise), but nevertheless it gives us a very nice speedup on large
codebases.

Before:
                          user     system      total        real
  pathological        0.000000   0.000000   0.000000 (  0.004329)
  command-t           0.420000   0.000000   0.420000 (  0.416208)
  chromium (subset)   1.070000   0.000000   1.070000 (  1.071452)
  chromium (whole)    3.680000   0.010000   3.690000 (  3.683207)

After:
                          user     system      total        real
  pathological        0.010000   0.030000   0.040000 (  0.018285)
  command-t           0.980000   1.850000   2.830000 (  1.391637)
  chromium (subset)   1.480000   0.020000   1.500000 (  0.551915)
  chromium (whole)    5.150000   0.020000   5.170000 (  1.861232)

Note that the pathological case is actually slightly slower now, but I
suspect that is because of the overhead of invoking a thread which isn't
really needed for the small number of paths (ie. one!) in sample data
set.

The slowdown of the command-t sample data is a little more alarming
though, so I might end up adding a threshold such that only if the
number of paths is greater than, say, 1,000, do we invoke the threading
machinery.

As written in this commit, the threaded support will only be compiled in
if you define USE_THREADS at build time. I'll be making this somewhat
more automatic in a future commit. I've defaulted to it being
effectively inactive so that this commit could, at least in theory, be
merged to the master branch even though I haven't figured out what to do
about Windows support yet.

As Ruby threads are basically useless (even in 1.9, due to the GIL), all
of this is done at a lower-level, using pthreads and avoiding any
interaction with the Ruby runtime (beyond making read-only access of
primitive Ruby objects already in memory). Once the work is done, all
the threads are joined and Ruby and Vim are free to go back to their
usual single-threaded operation.

The division of labor here is fairly crude: given four worker threads,
thread 0 will process paths 0, 4, 8 etc, and thread 1 will process paths
1, 5, 9 etc, and so on. I did it this what instead of dividing the paths
into contiguous chunks because I wanted to increase the likelihood of
each worker getting a similar amount of work (due to the way file
scanners work -- ie. recursively, using a depth-first search -- it is
possible or even likely that the distribution of the search space will
be uneven across the paths array (ie. shorter paths near the beginning
and end, with longer paths in the middle). By ""striping"" the work across
workers, we make it more likely that they'll all have roughly the same
about of work to do.

Another reason for this simple/crude division of labor is it frees us
from the overhead of having to manage a queue data structure, or a
producer/consumer set-up. Note we don't need to use any locks here as we
effectively have a map-reduce job that slices an array into 4 chunks,
and each thread only ever tries to mutate its own chunk. It is not even
necessary to zero-out the array, as the threads will take care of
filling it out.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 19:49:44,https://api.github.com/repos/wincent/command-t/git/commits/77ea2b52f02865e3908049d2fe424e5d2526d3e5,77ea2b52f02865e3908049d2fe424e5d2526d3e5,"Annotate float.h include

I like to include a brief hint about why any given system
header is included, but the float.h include was missing the
annotation.

This commit adds it.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 17:19:39,https://api.github.com/repos/wincent/command-t/git/commits/a890ce835cd15cf448b6e0c05acdfce4376f05f4,a890ce835cd15cf448b6e0c05acdfce4376f05f4,"Demote Match class to pure-C functions

This is preparatory to being able to do threaded searching, but in the
immediate term, it delivers us a small speed boost as well.

Before:

  pathological        0.000000   0.000000   0.000000 (  0.004766)
  command-t           0.910000   0.000000   0.910000 (  0.913644)
  chromium (subset)   1.260000   0.000000   1.260000 (  1.266127)
  chromium (whole)    3.850000   0.010000   3.860000 (  3.853568)

After:

                          user     system      total        real
  pathological        0.000000   0.000000   0.000000 (  0.004329)
  command-t           0.420000   0.000000   0.420000 (  0.416208)
  chromium (subset)   1.070000   0.000000   1.070000 (  1.071452)
  chromium (whole)    3.680000   0.010000   3.690000 (  3.683207)

The speed-up is likely due to the following:

  - elimination of some Ruby message sends
  - replacement of allocation of N `Match` objects with a single
    allocation of size N * (double + long) (ie. a slab containing a
    double for the score and a long for the path string pointer for each
    path)

Note: this is in addition to some other speedup that comes from previous
commits, starting around 6420a25:

  pathological        0.000000   0.000000   0.000000 (  0.004560)
  command-t           1.030000   0.000000   1.030000 (  1.031469)
  chromium (subset)   1.450000   0.010000   1.460000 (  1.465009)
  chromium (whole)    4.630000   0.010000   4.640000 (  4.664491)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 08:50:49,https://api.github.com/repos/wincent/command-t/git/commits/98be94cf2187dc89eba3d00e0b38e79e83eb9b77,98be94cf2187dc89eba3d00e0b38e79e83eb9b77,"Make CommandTMatcher_matches_for a ""non-Ruby"" function

Bypass the normal Ruby method dispatch and just call the function like a
normal C function; it is only used internally.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 08:43:01,https://api.github.com/repos/wincent/command-t/git/commits/22188053630d10f3f7a8e744771f9f09491613a7,22188053630d10f3f7a8e744771f9f09491613a7,"Turn CommandTMatcher_matches_for into a private function

This need not be exposed externally, so make it private.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 08:00:19,https://api.github.com/repos/wincent/command-t/git/commits/27df3184b9433a234d2e06120fd346a12531b757,27df3184b9433a234d2e06120fd346a12531b757,"Simplify Match instance initialization

This is a step towards turning the Match class into something that is
pure C and has no Ruby-specific calls in it, which is itself a necessary
prelude to the threaded performance work that I plan on doing later.
(Note, I suspect the reduction of Ruby object allocations that will be a
subsequent step will make this faster even before we get to the
threading bit.)

In a sense, this makes the initialization API strictly worse, replacing
an options hash with two explicit but superficially confusing option
names. Nevertheless, I'm not worried about that right now as the whole
file is going to be reworked as I get rid of the ""Ruby-ness"" of it.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 06:36:04,https://api.github.com/repos/wincent/command-t/git/commits/da69f6339a4a5ef61fce68d471b0354618481917,da69f6339a4a5ef61fce68d471b0354618481917,"Make it clear that float.h is a system header

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 06:32:29,https://api.github.com/repos/wincent/command-t/git/commits/c3036b3d087ad2cde429e94213d42bf0a1f86978,c3036b3d087ad2cde429e94213d42bf0a1f86978,"Enumerate system headers exhaustively in extconf.rb

Let's be explicit about all the different headers we require (although
in practice, the additional headers listed here are much more ""standard""
and likely to be present on a system, compared to ""ruby.h"").

When we add pthread support later on, we'll be adding an additional
check here for ""pthread.h"", which is another less ""standard"" header (at
least, on Windows).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 02:40:05,https://api.github.com/repos/wincent/command-t/git/commits/d70f3410cf5948303c5d644a509006dc36b1811a,d70f3410cf5948303c5d644a509006dc36b1811a,"Fold Match class specs into Matcher specs

In preparation for the ""disappearance"" of the Match class, which will
soon become an internal-only implementation detail.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-15 00:23:34,https://api.github.com/repos/wincent/command-t/git/commits/27e653209f7ed4e703f1320dfbb174c5b3687363,27e653209f7ed4e703f1320dfbb174c5b3687363,"Make options hash to Matcher#sorted_matches_for truly optional

There was a lying comment in there suggesting that the options parameter
hash was optional, when in fact it was not.

Noticed while writing specs for the method.

In the name of making life as easy as possible for callers, this commit
makes the comment about optionality true.

Included for free is a (cosmetic) typo fix in a nearby code comment.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-14 21:22:58,https://api.github.com/repos/wincent/command-t/git/commits/05051d8ba91a1ce8de78e637b5342c6d991aab00,05051d8ba91a1ce8de78e637b5342c6d991aab00,"Remove unnecessary instance variables from Matcher specs

Standard local variables are good enough here.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-14 21:16:37,https://api.github.com/repos/wincent/command-t/git/commits/c56857ecc0316826bf83d70a22618c7978ddc430,c56857ecc0316826bf83d70a22618c7978ddc430,"Use one-line `expect` syntax in Matcher specs

These lines are short enough that they can all fit tidily on one line,
so make it so.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-14 21:13:40,https://api.github.com/repos/wincent/command-t/git/commits/e25b8f0d595a1c3e4b15e0491ebf44720d3c4df1,e25b8f0d595a1c3e4b15e0491ebf44720d3c4df1,"Tweak Matcher specs to use OpenStructs instead of stubbing

I'm about to fold the Match specs into the Matcher class (or rather,
I'll be exercising the Match functionality via the Matcher specs, as the
Match class will soon become an internal-only implementation detail of
the Matcher class).

So, this commit tidies up the specs a little by switching to the use of
OpenStructs rather than stubbing. This will enable me to add a bunch of
different specs more easily, as no separate stubbing step will be
required.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-12-14 20:59:51,https://api.github.com/repos/wincent/command-t/git/commits/6420a25761890cf4fff6150c26cd044bc14bdde4,6420a25761890cf4fff6150c26cd044bc14bdde4,"Combine match & matcher benchmarks

I'm about to start another round of optimizations in which the current
Match class will go away, becoming an internal implementation detail of
the Matcher class.

As such, the benchmark script needs to be adapted to only interact with
the latter.

This commit makes the necessary adjustments, folding the match
benchmarks into the matcher benchmarks. The overall results continue to
be basically the same.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-24 02:49:39,https://api.github.com/repos/wincent/command-t/git/commits/89896bd88a3d0cd5c41f8754dfa004dda91fb488,89896bd88a3d0cd5c41f8754dfa004dda91fb488,"Fix broken date in gemspec

Change some single quotes to doubles along the way.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-24 02:43:10,https://api.github.com/repos/wincent/command-t/git/commits/a7d8993cfdd947e16e211185e3ed43e1faeb548c,a7d8993cfdd947e16e211185e3ed43e1faeb548c,"Update docs for 1.5.1 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-24 02:37:37,https://api.github.com/repos/wincent/command-t/git/commits/a72f80e505d3cc98b5f303023fa6465b683e2ec0,a72f80e505d3cc98b5f303023fa6465b683e2ec0,"Add Vít Ondruch to the list of contributors

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-24 02:36:18,https://api.github.com/repos/wincent/command-t/git/commits/93066947c611e7b08608de31d20b1f9b7051d730,93066947c611e7b08608de31d20b1f9b7051d730,"Merge branch 'voxik/remove-benchmark.yml'

* voxik/remove-benchmark.yml:
  Ignore huge benchmark.yml file in exported archives.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
voxik,2013-09-23 12:35:04,https://api.github.com/repos/wincent/command-t/git/commits/d0fd76c0f6625d175a7eb70235a774f32585f932,d0fd76c0f6625d175a7eb70235a774f32585f932,"Ignore huge benchmark.yml file in exported archives.

This file bumps the release archive size from 37,4 kB to 2.2 MB. This is
quite huge space saving for Fedora's SRPM package.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-24 02:16:55,https://api.github.com/repos/wincent/command-t/git/commits/3cf0eaf24b19546259f02a15c3ed9a10849f4825,3cf0eaf24b19546259f02a15c3ed9a10849f4825,"Fix broken specs

Reported here:

  https://wincent.com/issues/2111

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-18 07:17:29,https://api.github.com/repos/wincent/command-t/git/commits/5510864a084d905ad5a522e67b53d767d58bc16d,5510864a084d905ad5a522e67b53d767d58bc16d,"Update vimscriptuploader submodule

This is necessary for compatibiity with the version of Mechanize that we
are using.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-18 07:05:34,https://api.github.com/repos/wincent/command-t/git/commits/f885f9d435b4322ce9b794405f970893fded5480,f885f9d435b4322ce9b794405f970893fded5480,"Update docs for 1.5 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-18 05:43:23,https://api.github.com/repos/wincent/command-t/git/commits/e3cac390a55f271f42c3539e77b79a89c516fc98,e3cac390a55f271f42c3539e77b79a89c516fc98,"Switch to The One True Brace Style in C files

If you look carefully at the diff, you'll see that there were some
places where I was unthinkingly gravitating towards that style anyway,
so let's just give in and make the change.

The original brace style was most likely largely due to the influence of
Objective-C on me, of which I've written a fair bit in the last decade.

The new style is largely the result of my work at Causes, where we
happen to use The One True Brace Style in our JavaScript; the force of
habit is starting to make itself felt.

In addition to modifying the brace style, I tweaked a fair few lines for
readability, making a few things align and adding blank lines where I
felt it led to a better vertical rhythm. There are a couple of gnarly
and hard-to-read conditionals that could use some more work, but I
mostly just let Vim format those as it saw fit.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-18 05:08:38,https://api.github.com/repos/wincent/command-t/git/commits/89d3f69f709f42a8eada3facca017dbaf84e09dd,89d3f69f709f42a8eada3facca017dbaf84e09dd,"Fix a misalignment issue in the docs

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-18 05:07:48,https://api.github.com/repos/wincent/command-t/git/commits/8f95871c3d0e8fc1b1a12c4b43dd436e5a9a88f8,8f95871c3d0e8fc1b1a12c4b43dd436e5a9a88f8,"Merge branch 'myitcv/special_wild_ignore' into next

* myitcv/special_wild_ignore:
  Tidy up wildignore handling
  Update docs for g:CommandTWildIgnore setting
  Drop ""Special"" from g:CommandTSpecialWildIgnore
  Add :special_wild_ignore option

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-18 05:01:33,https://api.github.com/repos/wincent/command-t/git/commits/5af67820ce5a698e12c5b4df09f424cc3f9b3d73,5af67820ce5a698e12c5b4df09f424cc3f9b3d73,"Tidy up wildignore handling

The `#add_paths_for_directory` method was getting pretty long and ghastly,
so this commit removes the wildignore handling bits from that method and
moves them elsewhere.

Specifically, the shorter and simpler `#paths` method is now responsible
for setting the temporary wildignore setting and restoring the old
setting, if appropriate.

We now get the base wildignore setting only once, at initialize-time
(although you can force re-reading by doing a `:CommandTFlush`).

The logic for reading the wildignore setting has been moved into a
utility function on the CommandT::VIM module.

Overall, this is more verbose, but I think it makes the FileScanner code
cleaner overall.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-18 04:12:25,https://api.github.com/repos/wincent/command-t/git/commits/956092f29447ee411ba5c2028b544d06f9cb3429,956092f29447ee411ba5c2028b544d06f9cb3429,"Update docs for g:CommandTWildIgnore setting

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-18 04:01:13,https://api.github.com/repos/wincent/command-t/git/commits/abfc2b2ee2dd8709a5e4061dbce06c7e36e1f3d7,abfc2b2ee2dd8709a5e4061dbce06c7e36e1f3d7,"Drop ""Special"" from g:CommandTSpecialWildIgnore

As this is Command-T's only wildignore setting (ie. there is no
""non-special"" variant), we can go with a shorter name here.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
myitcv,2013-09-17 12:56:46,https://api.github.com/repos/wincent/command-t/git/commits/e6f3822f8f22d0b72c2cc3f5829baf6fb2c0c645,e6f3822f8f22d0b72c2cc3f5829baf6fb2c0c645,"Add :special_wild_ignore option

This is a squashed version of this pull request:

  https://github.com/wincent/Command-T/pull/55

Specifically:

  https://github.com/myitcv/command-t/commit/754d91c597cc7666a8d458cc8f19e5dabb1d6dff
  https://github.com/myitcv/command-t/commit/3076cb1ca9d855b62e053e3a268e7200f8a957e8

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-17 07:44:38,https://api.github.com/repos/wincent/command-t/git/commits/301fd661831ca7a024007a603658fe38a817f8ec,301fd661831ca7a024007a603658fe38a817f8ec,"Fix off-by-one error in memoization indexing

I believe this was causing more cache lookups to miss than should have
been the case. At least with the meagre test data I was using, the
quality of the results wasn't being obviously affected.

With this change, the ""pathological"" test case gets much, much faster,
while the others remain more or less the same.

Old:

                          user     system      total        real
  pathological        2.420000   0.000000   2.420000 (  2.450693)
  command-t           3.260000   0.030000   3.290000 (  3.299227)
  chromium (subset)   2.660000   0.020000   2.680000 (  2.672489)
  chromium (whole)    7.750000   0.050000   7.800000 (  7.827607)

New:

                          user     system      total        real
  pathological        0.000000   0.000000   0.000000 (  0.004769)
  command-t           3.330000   0.030000   3.360000 (  3.368512)
  chromium (subset)   2.570000   0.020000   2.590000 (  2.591855)
  chromium (whole)    7.080000   0.040000   7.120000 (  7.119191)

The improvement is so marked that I am almost suspicious of it, but I
added logging of -- lengths and indices, hits and misses, loads and
stores -- and ran it over a simple test case and it looks like the right
values are being loaded/stored in the cache.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-17 06:58:49,https://api.github.com/repos/wincent/command-t/git/commits/566930ea77c2e08977fa733cb9057551c284e524,566930ea77c2e08977fa733cb9057551c284e524,"Terminate inner match.c loop as early as possible

We can save ourselves a decent chunk of work by terminating our inner
loop as soon as we detect that we're too close to the end of the
haystack to possibly match what's left of the needle. It doesn't seem
like much of a change, but when you factor in the elevated costs of
recursion, it ends up being a decent win.

With this change we go from:

                          user     system      total        real
  pathological        2.940000   0.000000   2.940000 (  2.958157)
  command-t           3.620000   0.030000   3.650000 (  3.652865)
  chromium (subset)   3.410000   0.020000   3.430000 (  3.437180)
  chromium (whole)   10.160000   0.050000  10.210000 ( 10.229278)

to:

                          user     system      total        real
  pathological        2.420000   0.000000   2.420000 (  2.450693)
  command-t           3.260000   0.030000   3.290000 (  3.299227)
  chromium (subset)   2.660000   0.020000   2.680000 (  2.672489)
  chromium (whole)    7.750000   0.050000   7.800000 (  7.827607)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-17 06:27:54,https://api.github.com/repos/wincent/command-t/git/commits/fc8b4b9a9051dff6989ad78eb573f5e841e320a8,fc8b4b9a9051dff6989ad78eb573f5e841e320a8,"Emit PID at start of benchmark run

This allows us to track memory usage during the run. Turns out, it's
fine, sitting stable at just under 100 MB on this machine.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-17 06:17:22,https://api.github.com/repos/wincent/command-t/git/commits/a125e1e5bfe1eda4d7a0407df2330fc83e3ce0f3,a125e1e5bfe1eda4d7a0407df2330fc83e3ce0f3,"Add benchmarks

Here are the baseline results after recent optimizations:

                          user     system      total        real
  pathological        2.940000   0.000000   2.940000 (  2.958157)
  command-t           3.620000   0.030000   3.650000 (  3.652865)
  chromium (subset)   3.410000   0.020000   3.430000 (  3.437180)
  chromium (whole)   10.160000   0.050000  10.210000 ( 10.229278)

Short-circuiting for needles that can't possibly fit is a pretty big win
for some cases. The ""pathological"" case was basically untenable prior to
adding memoization (ie. it wouldn't finish in any reasonable timeframe),
although the memoization does appear to slow down the other cases by
about 3-4%.

The goal from here on will be to make the standard cases as fast and
faster than before, while still preserving the ability to handle the
pathological cases without grinding to a halt.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-16 06:47:15,https://api.github.com/repos/wincent/command-t/git/commits/9dead42404d47882cc5fc931dd79bf49679bf66d,9dead42404d47882cc5fc931dd79bf49679bf66d,"Update Bundle

The only issue of note was that I had to specify and peg nokogiri at a
version that supports Ruby 1.8.7; see:

  http://www.redmine.org/boards/2/topics/38243

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-16 06:39:08,https://api.github.com/repos/wincent/command-t/git/commits/661942d0f15dafe2c3e9152523ccecf7d09ea007,661942d0f15dafe2c3e9152523ccecf7d09ea007,"Update Gemfile source

To silence these warnings:

  The source :rubygems is deprecated because HTTP requests are insecure.
  Please change your source to 'https://rubygems.org' if possible, or
  'http://rubygems.org' if not.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-15 07:19:37,https://api.github.com/repos/wincent/command-t/git/commits/0b5726d2847e3629ae34f332bc8e42715c06b28d,0b5726d2847e3629ae34f332bc8e42715c06b28d,"Add memoization to match.c

This is a first-cut attempt at crude memoization for match.c, which
enables Command-T to better hand ""pathological"" inputs like:

  needle   : ""aaaaaaaaaaaaaaaaa""
  haystack : ""aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa""

With memoization, we're much closer to our desired theoretical
worst-case quadratic runtime for this kind of input.

In order to make this fast, we're using a stack-allocated dynamic array
(possible in C99). The size is suitably small (needle length times
haystack length).

We want to remember the score for any given needle index/haystack index
pair, so we just use an array of doubles -- ideally I would have used a
proper multidimensional array, but I am not sure it's possible to do
that with dynamic stack-based allocation in a way that allows me to
declare a useful pointer to it in a struct -- and index into it on
needle index * length + haystack index. This could likely use some
commenting to make clearer what is going on.

We initialize the array with DBL_MAX to distinguish between
previously-calculated scores of ""0.0"" and merely missing scores.

I added some boundary checking to make it easier to reason about the
state of the recursive call (ie. by not even making it in the case where
we have zero-length needle or haystack).

Consider this a work-in-progress for now. I am going to follow up with
some benchmarks so that I can test this against what was there before
for both ""pathological"" and ""non-pathological"" workloads.

Related:

  https://wincent.com/issues/2094

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-15 06:44:31,https://api.github.com/repos/wincent/command-t/git/commits/1bd05a92d52974ca77de183e15046c11962b6fae,1bd05a92d52974ca77de183e15046c11962b6fae,"Prepare to memoize intermediate recursive results

This commit doesn't actually add memoization yet, but puts the basic
structure in place to do so. This will save us from re-doing a great
deal of work in some pathological edge cases (eg. searching for
""aaaaaaaaaaaa"" in a string like ""aaaaaaaaaaaaaaaaaaaaaaaaaa"").

Related:

  https://wincent.com/issues/2094

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-15 06:33:59,https://api.github.com/repos/wincent/command-t/git/commits/261d9231288b79f39ac8655773fdbe43911d72b7,261d9231288b79f39ac8655773fdbe43911d72b7,"Short-circuit if needle can't possibly fit inside haystack

This is a cheap little optimization that prevents us form scanning (or
further recursing) if we're too close to the end of the haystack to
possibly encounter the rest of the needle. As it only applies towards
the end of the string, it's not going to make a huge impact, but every
little bit helps.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-15 06:27:41,https://api.github.com/repos/wincent/command-t/git/commits/7a296e7d4fb60598577ab66366aef8a24a9034c0,7a296e7d4fb60598577ab66366aef8a24a9034c0,"Switch to needle/haystack names for clarity

""str"" and ""abbrev"" are not as clear as ""haystack"" and ""needle"",
respectively, so let's switch to the latter.

I'm doing this just inside the match.c functions, as this is where the
potential for confusion is most ripe. ""abbrev"" is still used in some other
places, such as in matcher.c, but there things seem less likely to
confuse, so I am leaving that as-is for now.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-09-15 04:26:01,https://api.github.com/repos/wincent/command-t/git/commits/bcd44246888c54908446781e08fb9c76f493a52c,bcd44246888c54908446781e08fb9c76f493a52c,"Add ability to move matches into quickfix window

Sometimes I want to edit a bunch of related files. For example, in the
Twigg project there are 5 gemspec files which I often have to edit
together. In this use case, it's convenient to be able to open
Command-T, type ""gemspec"" (or similar) and then move all the matches
into the quickfix window (from whence I can skip from file to file with
`:cn`, `:cnf` etc).

This commit makes this possible with a new mapping, defaulting to
`<C-q>` (mnemonic: ""[q]uickfix"") and overiddable using the
g:CommandTQuickfixMap setting, which takes the current match listing and
transfers it to the quickfix window. Additionally, it closes the match
listing and opens the quickfix window.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-04-16 07:11:24,https://api.github.com/repos/wincent/command-t/git/commits/8866bbc0e18a981889b3431790caf47432f38cf4,8866bbc0e18a981889b3431790caf47432f38cf4,"Bump CommandTMaxFiles default to 30,000 files

Computers are getting faster, so it seems reasonable to bump the
default.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-04-16 07:02:39,https://api.github.com/repos/wincent/command-t/git/commits/21376536e74952f91dc336085e81f5ca0015833a,21376536e74952f91dc336085e81f5ca0015833a,"Make selection highlight color configurable

A few comments on this commit:

  https://github.com/wincent/Command-T/commit/d30099cac79dfdbc4a16d

suggest that there is no ""one size fits all"" selection highlight color
that's going to work for everybody.

Make it configurable.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2013-02-06 05:43:23,https://api.github.com/repos/wincent/command-t/git/commits/d30099cac79dfdbc4a16d8279c5a2304b1494b2c,d30099cac79dfdbc4a16d8279c5a2304b1494b2c,"Switch selection highlight color for better readability

As suggested by André Arko here:

  https://wincent.com/issues/2055

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-09-17 00:47:55,https://api.github.com/repos/wincent/command-t/git/commits/07087e16ba8fe0a87b1d1ccd03e158a0157dc1f8,07087e16ba8fe0a87b1d1ccd03e158a0157dc1f8,"Fix tiny typo in docs

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-09-07 08:25:21,https://api.github.com/repos/wincent/command-t/git/commits/eeaa7bcff0da029115b7375c97a0269c85d9efd8,eeaa7bcff0da029115b7375c97a0269c85d9efd8,"Merge branch 'UVSoft/matlab'

* UVSoft/matlab:
  Add Ivan Ukhov to author listing
  Make Command-T open files starting with + (plus)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-09-07 08:23:42,https://api.github.com/repos/wincent/command-t/git/commits/8463537a6850b87bc00383501118e758abc9678d,8463537a6850b87bc00383501118e758abc9678d,"Merge branch 'pazustep/ignore-internal-symlink'

* pazustep/ignore-internal-symlink:
  doc: add Marcus Brito to list of authors
  Ignore internal or looped symlinks.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-07-21 16:17:03,https://api.github.com/repos/wincent/command-t/git/commits/f005db61d5fff395e3f648fc4d58b40ea5a7b6c1,f005db61d5fff395e3f648fc4d58b40ea5a7b6c1,"Add Ivan Ukhov to author listing

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-06-27 07:54:02,https://api.github.com/repos/wincent/command-t/git/commits/7a310e5b93ce13321fdb315ee8a2a7892a1ed774,7a310e5b93ce13321fdb315ee8a2a7892a1ed774,"doc: add Marcus Brito to list of authors

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
pazustep,2011-12-16 13:57:25,https://api.github.com/repos/wincent/command-t/git/commits/3cabca33a1b4a8d6ec7cf9c407b3651412fa626d,3cabca33a1b4a8d6ec7cf9c407b3651412fa626d,"Ignore internal or looped symlinks.

See also:

  https://wincent.com/issues/1838

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-06-27 07:19:00,https://api.github.com/repos/wincent/command-t/git/commits/e9267044261481fbb6717b482c2f3811eb61b409,e9267044261481fbb6717b482c2f3811eb61b409,"doc: don't suggest `bundle install`

As suggested by Denis Malinovsky here:

  https://github.com/wincent/Command-T/pull/45

Asking people to use Bundler may cause confusion for non-Rubyists, and
Bundler doesn't acutally buy us anything. The `bundle` was added in
commit c9fad733e9, but there's nothing in the Rakefile that would
require us to use Bundler for the ""make"" task (it's literally just
equivalent to `ruby extconf.rb && make`).

Keep things simple and take Bundler out of the picture.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-06-20 07:29:38,https://api.github.com/repos/wincent/command-t/git/commits/a6a604876f4d24bf329e73a4884c26f2184445f0,a6a604876f4d24bf329e73a4884c26f2184445f0,"Update docs for 1.4 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-05-28 04:15:59,https://api.github.com/repos/wincent/command-t/git/commits/67e39768ea3a0a01eabcb511e47530558a4534de,67e39768ea3a0a01eabcb511e47530558a4534de,"Add Thomas Pelletier to the author listing

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
pelletier,2012-05-11 11:02:50,https://api.github.com/repos/wincent/command-t/git/commits/795cd3220e677ca85c5ade72271b12799fed8b1a,795cd3220e677ca85c5ade72271b12799fed8b1a,"Mention the architecture problem during compilation.

Originally submitted at:
  https://github.com/wincent/Command-T/pull/44

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-04-29 20:35:47,https://api.github.com/repos/wincent/command-t/git/commits/341d0e54822c72f32be1664f8bedc0cdbd2f87c0,341d0e54822c72f32be1664f8bedc0cdbd2f87c0,"Added ability to flush cache and refresh while match listing is open

See:

  https://wincent.com/issues/1942

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-04-10 06:38:49,https://api.github.com/repos/wincent/command-t/git/commits/ca5566eb312f57b9f4091023cfc03ad8e692bf29,ca5566eb312f57b9f4091023cfc03ad8e692bf29,"Use `bundle exec` rather than assuming binstubs will be available

The binstubs were removed in commit 9a35f4036f0.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-04-10 06:34:29,https://api.github.com/repos/wincent/command-t/git/commits/356d432a83437f827fc425bf74ef8e4e3809ebcb,356d432a83437f827fc425bf74ef8e4e3809ebcb,"Fix some failing specs

These specs seem too mock- and stub-heavy, and could use a bit of
loving, but for now just making the minimal change to get the spec suite
green again (it has been neglected for a long while).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-04-10 05:42:15,https://api.github.com/repos/wincent/command-t/git/commits/46b73b2af2e4159e8db57966d8fc2b3603a36815,46b73b2af2e4159e8db57966d8fc2b3603a36815,"Update .mailmap file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
guns,2012-04-09 05:18:15,https://api.github.com/repos/wincent/command-t/git/commits/c23d31f549da344ba6ce38ef825fea761bcb6b8d,c23d31f549da344ba6ce38ef825fea761bcb6b8d,"Set synmaxcol to avoid match highlighting errors

The new match highlight feature uses <commandt></commandt> as conceal
markers per match. If the user has set a low synmaxcol (in order to
speed up syntax highlighting in files with long lines), the concealed
markers can quickly bring the character count of the line past the
synmaxcol value, causing all markers past the value to be shown.

This can be demonstrated by setting a low synmaxcol, then opening a new
match window in this project's root:

:set synmaxcol=20 | CommandT

"" Search for `//`

> fixtures/bar/abc
  fixtures/</commandt>bar<commandt>/</commandt>xyz
  fixtures/</commandt>foo<commandt>/</commandt>beta"
wincent,2012-04-08 02:10:06,https://api.github.com/repos/wincent/command-t/git/commits/e6e682d707b186ce9f1d27c94bed260c69981958,e6e682d707b186ce9f1d27c94bed260c69981958,"Attempted fix for ""E90: Cannot unload last buffer"" error

Details noted in the code comment.

Note that in the case where the `:quit` command kicks in, the subsequent
`:bwipeout!`/`:bunload!` commands will still run, and most likely fail;
this seems harmless enough and visible error messages are suppressed
with `silent!`, but it seems sensible to err on the side of caution and
make sure clean-up really happens (the Vim docs are silent on what
`:quit` does to unlisted buffers, but experimentation with help windows,
at least, shows that they linger on in the `:ls!` output after a
`:quit`, even if their contents end up getting unloaded).

See:

  https://wincent.com/issues/1778

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-04-06 22:50:31,https://api.github.com/repos/wincent/command-t/git/commits/a8fd50ef3347d598160f3990ebcf12b4a4b44750,a8fd50ef3347d598160f3990ebcf12b4a4b44750,"Add Yan Pritzker to list of authors

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
skwp,2012-01-11 22:48:48,https://api.github.com/repos/wincent/command-t/git/commits/3f0f77765e6b126e85185d5970f22e20c56c5344,3f0f77765e6b126e85185d5970f22e20c56c5344,"Silence warnings on BufLeave and BufUnload

Apply patch from https://wincent.com/issues/1778"
wincent,2012-04-01 21:14:05,https://api.github.com/repos/wincent/command-t/git/commits/bbdcfb2adf54d1fcbb6fbd007ab6e25dab623153,bbdcfb2adf54d1fcbb6fbd007ab6e25dab623153,"Merge branch 'mong8se/highlight'

I've been using this locally for about a week now without any problems,
so merging to master.

* mong8se/highlight:
  Make matching character highlighting case-insensitive
  doc: Update HISTORY section for match string highlighting
  Added highlighting of entered characters in filenames"
wincent,2012-04-01 21:11:04,https://api.github.com/repos/wincent/command-t/git/commits/f11066c38b943ac2681c750f161b14cea2262afb,f11066c38b943ac2681c750f161b14cea2262afb,"Add Felix Tjandrawibawa to the author list

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
cemeng,2012-03-29 11:55:04,https://api.github.com/repos/wincent/command-t/git/commits/d7daf87d4e122b4b51dd80d08cd83f1109414d5a,d7daf87d4e122b4b51dd80d08cd83f1109414d5a,"Add instructions on selecting system ruby using rbenv

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-03-28 07:52:53,https://api.github.com/repos/wincent/command-t/git/commits/d8a7b315d6973445ed80c27d6047a5493ccdedaa,d8a7b315d6973445ed80c27d6047a5493ccdedaa,"Replace Array#flatten() with Array()

Brevity is the soul of wit.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-03-25 00:14:13,https://api.github.com/repos/wincent/command-t/git/commits/7a66ce832a1a273a77f15611ff42e33cce98ee41,7a66ce832a1a273a77f15611ff42e33cce98ee41,"doc: add Rainux Luo to the AUTHORS section

Signed-off-by: Wincent Colaiuta <win@wincent.com>

(cherry picked from commit 3806bb09f7ffcb7a16225a0856d1f0d061bc1015)

Conflicts:

	doc/command-t.txt"
rainux,2011-10-19 19:00:52,https://api.github.com/repos/wincent/command-t/git/commits/9a35f4036f09ea7918da9c825b30765a98ea4aca,9a35f4036f09ea7918da9c825b30765a98ea4aca,"Remove and ignore .bundle

Quote from http://gembundler.com/rationale.html:

  Do not check in the .bundle directory, or any of the files inside it.
  Those files are specific to each particular machine, and are used to
  persist installation options between runs of the bundle install
  command.
(cherry picked from commit b2bcdf1bf7fc40e3bd42b9b7c4c9a358cb619901)"
wincent,2012-03-25 02:52:12,https://api.github.com/repos/wincent/command-t/git/commits/8ca91fb6f51bc08dc5ab4af09ec840a4944620f6,8ca91fb6f51bc08dc5ab4af09ec840a4944620f6,"Don't load Command-T if 'compatible' is set

Apparently, this is what plug-ins are supposed to do (eg. see:
http://vim.wikia.com/wiki/How_to_write_a_plugin).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-03-25 02:34:12,https://api.github.com/repos/wincent/command-t/git/commits/15a66cc9e09bd2d9dc61e27559a2e6d79564f75c,15a66cc9e09bd2d9dc61e27559a2e6d79564f75c,"Merge branch 'themaset/screen'

* themaset/screen:
  Avoid repeated evaluations of ""term""
  doc: add Nadav Samet to AUTHORS section
  Add screen as a possible client"
wincent,2012-03-25 02:31:36,https://api.github.com/repos/wincent/command-t/git/commits/d583f06cf72e845a345965473eb891acdb60fe55,d583f06cf72e845a345965473eb891acdb60fe55,"Avoid repeated evaluations of ""term""

And cut down on the number of custom term-related methods in the
controller.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-03-25 02:28:20,https://api.github.com/repos/wincent/command-t/git/commits/d360a0d65a902113f66479cf75ec6f71a842ae40,d360a0d65a902113f66479cf75ec6f71a842ae40,"doc: add Nadav Samet to AUTHORS section

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
thesamet,2011-09-16 02:41:57,https://api.github.com/repos/wincent/command-t/git/commits/aca53e9e9a55109506e90e5dc20e54384a0ec4c0,aca53e9e9a55109506e90e5dc20e54384a0ec4c0,"Add screen as a possible client

Amendments made to original pull request[1]:

  - fixed whitespace damage (trailing whitespace, 4-space indent)

[1]: https://github.com/wincent/Command-T/pull/19

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-03-25 01:55:52,https://api.github.com/repos/wincent/command-t/git/commits/1c47bcc7aa1dbc4fe445a2c32fba1dc22084a7fb,1c47bcc7aa1dbc4fe445a2c32fba1dc22084a7fb,"Make matching character highlighting case-insensitive

The matching algorithm is case-insensitive, which means that the display
of matching characters must also be done in a case-insensitive fashion.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-03-25 00:55:28,https://api.github.com/repos/wincent/command-t/git/commits/6bf694eef440b1fced3d6c71ce31d854b25d0553,6bf694eef440b1fced3d6c71ce31d854b25d0553,"doc: add ""Development"" section

As I've started using a ""next"" branch for cooking changes before merging
into ""master"", this commit adds a section to the documentation noting
a couple of key points:

  - ""master"" should be stable
  - ""next"" is for riskier changes, and may be rewound occasionally

Given the need for a new section, it may as well contain other ""nice to
have"" info, like info on patch submissions and mirror repos.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-03-24 22:54:07,https://api.github.com/repos/wincent/command-t/git/commits/2e26ac560651875ce64c0d364ad68c9b34763f77,2e26ac560651875ce64c0d364ad68c9b34763f77,"doc: Update HISTORY section for match string highlighting

I'm not yet sure whether this feature will get merged into master, nor
whether it should be on by default or whether it should be configurable,
so for now not mentioning it outside of the HISTORY section.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-29 08:05:31,https://api.github.com/repos/wincent/command-t/git/commits/07027c36ae96f68d3446742159fb0669989428cd,07027c36ae96f68d3446742159fb0669989428cd,"Add Gary Bernhardt to contributors list

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
garybernhardt,2012-02-25 21:34:38,https://api.github.com/repos/wincent/command-t/git/commits/fc5b5c39b4a929703b472a706c4c1bc3c04791ba,fc5b5c39b4a929703b472a706c4c1bc3c04791ba,"revert ad45f0e, which breaks :CommandT with a path argument

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-21 07:58:08,https://api.github.com/repos/wincent/command-t/git/commits/bcd391402144c80bae1d8a58a61b1bac0e0062a1,bcd391402144c80bae1d8a58a61b1bac0e0062a1,"Merge branch 'pull/33'

* pull/33:
  Add Seth Fowler to author listing
  The clean task in the Rakefile now correctly removes the generated Makefile.
  Permit the user to specify the C compiler to use via the CC environment variable.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-21 07:57:50,https://api.github.com/repos/wincent/command-t/git/commits/b29a4aca2cf75571ff8f6ffb9a1b192d8561fda6,b29a4aca2cf75571ff8f6ffb9a1b192d8561fda6,"Add Seth Fowler to author listing

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-21 07:49:22,https://api.github.com/repos/wincent/command-t/git/commits/38f387b3202ea22f4fa003901a8c2f1a3381c3f7,38f387b3202ea22f4fa003901a8c2f1a3381c3f7,"Update docs to reflect addition of CommandTMinHeight option

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
nathanaelkane,2011-08-23 13:28:42,https://api.github.com/repos/wincent/command-t/git/commits/cda68413513995787434cd8a07a34c6adb20c8d1,cda68413513995787434cd8a07a34c6adb20c8d1,"Add g:CommandTMinHeight option

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-21 07:14:09,https://api.github.com/repos/wincent/command-t/git/commits/da9f6b69b7545467d8b874a798efefb757144b81,da9f6b69b7545467d8b874a798efefb757144b81,"Update author info, history and mailmap

Split the list into two columns as it is starting to get long. There
should be room to add a third column when the time comes.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-21 07:16:01,https://api.github.com/repos/wincent/command-t/git/commits/a240bdf5ee8434b2c654870076cdb426bf48ecd8,a240bdf5ee8434b2c654870076cdb426bf48ecd8,"Merge branch 'pull/30'

* pull/30:
  Remove relative line numbers and color columns in the match window
  Extract VIM::exists? method for use outside of the controller

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
jeffkreeftmeijer,2011-12-27 23:15:03,https://api.github.com/repos/wincent/command-t/git/commits/58cc5b2b64d605b9a076f6ae076acb278d2f09da,58cc5b2b64d605b9a076f6ae076acb278d2f09da,"Remove relative line numbers and color columns in the match window

Call :setlocal norelativenumber and :set colorcolumn=0 after opening a
new match window so they won't show up in the match split. These extra
commands are not added to the existing commands array, as these are
7.3 features and need some feature detection to make sure they exist
first."
wincent,2012-02-21 07:10:35,https://api.github.com/repos/wincent/command-t/git/commits/9e4a3d3e9905b29614620a6edb5804703dae7798,9e4a3d3e9905b29614620a6edb5804703dae7798,"Extract VIM::exists? method for use outside of the controller

This will be used for feature detection in the MatchWindow class.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
nicalpi,2012-01-17 11:06:10,https://api.github.com/repos/wincent/command-t/git/commits/c9fad733e9476b667c528f7306c54d67aacdbc49,c9fad733e9476b667c528f7306c54d67aacdbc49,Added bundle install to the documentation
wincent,2012-02-21 02:57:38,https://api.github.com/repos/wincent/command-t/git/commits/93a5839348ea5205dce78a417110d77bbb16b034,93a5839348ea5205dce78a417110d77bbb16b034,"Merge branch 'tag-finder'

* tag-finder:
  Prepare tag-finder branch for merging into master
  Made it use vim's 'tags' variable to tag filename lookup
  Made it such that filenames in the tag list are optional
  Moved some functions around
  Added first version of tag plugin

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-21 02:34:04,https://api.github.com/repos/wincent/command-t/git/commits/10ed0d93fa69825bd6aaa945408fdbc74bde4fb0,10ed0d93fa69825bd6aaa945408fdbc74bde4fb0,"Fix .mailmap syntax

In order to make the .mailmap file work as intended, needed to add the
mapping on the right that corresponds to the canonical mapping on the
left.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-21 02:43:04,https://api.github.com/repos/wincent/command-t/git/commits/57bc791619a50c6cddcd8aacfb44b5147a15cb3b,57bc791619a50c6cddcd8aacfb44b5147a15cb3b,"Prepare tag-finder branch for merging into master

This commit prepare's the tag-finder contributed by Noon Silk for
merging into master. Changes made:

  - Add Noon to the .mailmap file, as his commits use two distinct email
    addresses
  - flesh out the CommandTTag documentation
  - add documentation for the g:CommandTTagIncludeFilenames setting,
    which itself was renamed from underscore-style to CamelCase for
    consistency with the other settings
  - added Noon to the AUTHORS section in the documentation
  - updated copyright year ranges in touched files
  - remove default setting of g:command_t_tag_include_filenames
    preference from the main plug-in file, for consistency with other
    settings (where defaults are handled when initializing Finders and
    Scanners)
  - get rid of the controller's @tag_finder instance when the user runs
    CommandTFlush; this means that you can change the value of
    g:CommandTTagIncludeFilenames and force Command-T to use the new
    setting without having to alter the setting in your ~/.vimrc and
    restart Vim
  - removed commented-out code
  - removed or fixed whitespace-damaged files (trailing whitespace and
    incorrect indentation)
  - changed TagFinder#open_selection to extract tag portion of the
    selection without calling #split (guard against unnecessary work in
    pathological case that filename contains colons)
  - open tags using `silent!` rather than `silent` (suppresses ""E432:
    Tags file not sorted"" warning for non-sorted tags files)
  - removed unneeded inclusion of VIM::PathUtilities in TagScanner
  - use Vim's `taglist()` function to get tags rather than opening and
    parsing tags files directly (insulate Command-T from differences in
    the different tag file formats that Vim supports)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2012-02-21 02:33:24,https://api.github.com/repos/wincent/command-t/git/commits/7c312aa0b9833c25e0ac51e71e2ecb58ea1679f9,7c312aa0b9833c25e0ac51e71e2ecb58ea1679f9,"Update copyright year range in LICENSE file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-12-18 18:21:13,https://api.github.com/repos/wincent/command-t/git/commits/18686a82a2e4d015b877bf0b6867a269aa8a284f,18686a82a2e4d015b877bf0b6867a269aa8a284f,"Update docs for 1.3.1 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
woahdae,2011-12-18 16:58:08,https://api.github.com/repos/wincent/command-t/git/commits/fb0e58a54a8fb556e80bbc5dcd4ebb748641f81c,fb0e58a54a8fb556e80bbc5dcd4ebb748641f81c,"Fix CommandTJump under Ruby 1.9.x

The jump scanner pulls in a string jumplist. This worked fine under Ruby
1.8.7, where `String#select` operates in a line-wise fashion. Under Ruby
1.9.x, however, it's a private method and explodes. Using `String#lines`
instead makes things work on both Rubies.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-11-28 06:21:33,https://api.github.com/repos/wincent/command-t/git/commits/e9a861b34674608ffa70e26063674245cd4e0927,e9a861b34674608ffa70e26063674245cd4e0927,"Update docs for 1.3 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-11-26 22:15:44,https://api.github.com/repos/wincent/command-t/git/commits/0c3a385d6208aef7b9a7f2112996f9222d77747a,0c3a385d6208aef7b9a7f2112996f9222d77747a,"Merge branch 'jump-list'

* jump-list:
  Refactor ""redir"" code to use new ""capture"" method
  Use lazy-initialization in controller
  Minor stylistic clean-up for jump finder
  Make it possible to select file from jump list"
wincent,2011-11-26 22:04:28,https://api.github.com/repos/wincent/command-t/git/commits/419852d58ec2216abd9cc3b2fac360ee4955af22,419852d58ec2216abd9cc3b2fac360ee4955af22,"Refactor ""redir"" code to use new ""capture"" method

As there are now two places in the code where we have to use ""redir"" to
capture the output of a Vim command, factor it out into a method that
can be easily reused for that purpose.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-11-26 20:43:10,https://api.github.com/repos/wincent/command-t/git/commits/5505dce3b61dd9aa5f697789430108f1215bbd41,5505dce3b61dd9aa5f697789430108f1215bbd41,"Use lazy-initialization in controller

We now have three finders (file, buffer and jumplist), so it's starting
to smell to create them all up front, especially given that some users
won't ever use anything other than the file finder.

So, switch to lazy initialization.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-11-26 20:29:25,https://api.github.com/repos/wincent/command-t/git/commits/21965981a896bbb7c41e79cc884434c29a5579d6,21965981a896bbb7c41e79cc884434c29a5579d6,"Minor stylistic clean-up for jump finder

Tweaks to bring the jump finder code into line with the conventions of
the rest of the code base:

  - add a little more detail to the :CommandTJump documentation
  - add Marian Schubert to contributors list
  - alphabetize finder methods in command-t.vim file
  - move getJumpsLines functionality down into Ruby; in general the
    VimScript portion of the plug-in is intended to be a thin wrapper
    only, and all the real work is done from Ruby
  - use ""jump"" singular rather than plural, because Vim calls it the
    ""jumplist"" and the other finders all use the singular (""buffer
    finder"", ""file finder"" and not ""buffers finder"" and ""files finder"")
  - align equals signs in consecutive assignment statements
  - update copyright year ranges
  - annotate ""end"" statements for classes and modules
  - make private methods private

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
maio,2011-11-17 11:56:51,https://api.github.com/repos/wincent/command-t/git/commits/55d08dea04e62b99e149815ebfa2bc94e5c232e1,55d08dea04e62b99e149815ebfa2bc94e5c232e1,Make it possible to select file from jump list
wincent,2011-11-06 23:45:49,https://api.github.com/repos/wincent/command-t/git/commits/d5631702d4000c8addb8d7f0052569226fd6d8a1,d5631702d4000c8addb8d7f0052569226fd6d8a1,"Record and restore window widths

Previously we stored and restored only window heights. It's been pointed
out, however, that when using Command-T Vim will reset horizontal sizes
for vertically-split windows as well, so we need to store and restore
window widths as well.

Based on patch posted by anonymous submitter here:

  https://wincent.com/issues/1896

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-10-19 06:52:51,https://api.github.com/repos/wincent/command-t/git/commits/056c06ed838a19813e5a4fd47ebe0a2827720453,056c06ed838a19813e5a4fd47ebe0a2827720453,"doc: update contributor list

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-10-19 06:51:18,https://api.github.com/repos/wincent/command-t/git/commits/0a71f70592e12ebc690ee622fe64dce28c44945e,0a71f70592e12ebc690ee622fe64dce28c44945e,"docs: use nnoremap in examples

To match the mapping command used internally since commit 56d37ff.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
panozzaj,2011-10-18 04:41:08,https://api.github.com/repos/wincent/command-t/git/commits/56d37ffdb6a9e457d3fb803bb9c914533add5ab6,56d37ffdb6a9e457d3fb803bb9c914533add5ab6,"Ensure mappings use nnoremap.

This fixes a bug when the user redefines : to ;
Previously \t and \b would not work in this case."
wincent,2011-10-09 05:28:01,https://api.github.com/repos/wincent/command-t/git/commits/f19aee00f6b7a9c451a7aa168e05f0cdd0d99374,f19aee00f6b7a9c451a7aa168e05f0cdd0d99374,"Fix possible 'rake make' breakage on Windows

I've had a report that '&&' can cause problems on Windows, so this seems
like a harmless enough fix. See:

  https://wincent.com/issues/1888

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-09-28 06:22:48,https://api.github.com/repos/wincent/command-t/git/commits/65b26797f7075259eee88c31ad0d5814b44dcbcc,65b26797f7075259eee88c31ad0d5814b44dcbcc,"Merge branch 'multi-cache'

Related ticket:

  https://wincent.com/issues/1878"
wincent,2011-09-18 05:16:53,https://api.github.com/repos/wincent/command-t/git/commits/a05def79ad233c6138d54fc1e7f34c66f90a4416,a05def79ad233c6138d54fc1e7f34c66f90a4416,"Add g:CommandTMaxCachedDirectories option

This allows the user to specify an upper limit on the number of caches
which Command-T will use when changing directories. The default of 1
preserves the existing behavior, meaning that each time you change into
a different directory, Command-T will scan it.

Set to a higher number to increase the number of cached directories, or
to 0 for no limit at all.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-09-18 04:50:30,https://api.github.com/repos/wincent/command-t/git/commits/226f6776f9473ec4365bced3e1cbdf2b0e451ab0,226f6776f9473ec4365bced3e1cbdf2b0e451ab0,"Use multiple path caches, keyed off directories

This is an initial, naïve implementation. All it does is store separate
caches for each path it is asked to scan. While this works fine, before
it can be released it needs a one key thing: people should be able to
turn it off, or otherwise configure how many different directories
should be cached.

Note that there's no cleverness here; if you work for a while in
directory ""/foo"" and later change into ""/foo/bar"", it scans the new
directory rather than trying to reuse the path info that it obtained
when scanning the first directory.

Requested in:
  https://wincent.com/issues/1878

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-08-31 07:55:35,https://api.github.com/repos/wincent/command-t/git/commits/a353ea1994cf0bc41d00a506afab572663137043,a353ea1994cf0bc41d00a506afab572663137043,"Teach CommandT::Stub to handle show_buffer_finder

If for some reason you didn't compile the extension before trying to use
the buffer finder you would trigger an error because the CommandT::Stub
class didn't implement the #show_buffer_finder method.

As the number of stubbed methods has now reached three, this commit also
includes a refactoring to eliminate the repetition in the method
definitions.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-06-30 16:13:05,https://api.github.com/repos/wincent/command-t/git/commits/3c0dc0a392fbea847ac97efe25f774cf1f2dcda0,3c0dc0a392fbea847ac97efe25f774cf1f2dcda0,"Reverting lazy-initialization code, pending investigation

This commit rolls back the recently-added lazy-initialization code due
to a report of a segfault; due to the fact that a lot of people use
Pathogen or similar to track the HEAD of master, I'd rather be
conservative about this and roll it back immediately, and then
investigate. The lazy-initialization code itself has been moved onto a
topic branch (lazy-initialization).

The bug report:

  https://wincent.com/issues/1837

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-06-30 03:36:26,https://api.github.com/repos/wincent/command-t/git/commits/6f0641b7046d4dfdd119e99326ec739e5e03d0e3,6f0641b7046d4dfdd119e99326ec739e5e03d0e3,"Correct Kien's name in docs and .mailmap file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-06-29 06:12:31,https://api.github.com/repos/wincent/command-t/git/commits/a0b64bc2449457edb13a0f536264c03ae481a6e5,a0b64bc2449457edb13a0f536264c03ae481a6e5,"Update docs with reference to Kien's patch

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-06-29 05:21:30,https://api.github.com/repos/wincent/command-t/git/commits/3d63ae61ad624e50a30df01c6aba3068b50ff2ac,3d63ae61ad624e50a30df01c6aba3068b50ff2ac,"Fixes for lazy-initialization functionality

This commit addresses some problems with the lazy-initialization
functionality contributed in commit 86e87ab. Specifically:

  - Rename Initialize function to CommandTLazyInitialize for consistency
    with all other functions (which are namespaced under ""CommandT"") and
    also to better describe the purpose of the function
  - Remove now-redundant ""has('ruby')"" check
  - Guard against repeated evaluation of the initialization function,
    which would otherwise cause a new controller instance to be created
    every time a Command-T command is run
  - Fix indentation
  - Fix bad whitespace (blank line at end of file)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
kien,2011-06-28 18:59:02,https://api.github.com/repos/wincent/command-t/git/commits/86e87abcd25ede16e688ca28dbfccdb45c9fd249,86e87abcd25ede16e688ca28dbfccdb45c9fd249,"Move ruby startup code to script local function

Command-T takes about 320 ms to load on Vim startup. This is a lot
considering most other plugins takes less than 1 ms. In this pull
request I move the ruby startup code in command-t.vim to a script local
function and only call it when user uses Command-T. With this change,
command-t.vim takes less than 1 ms to load at Vim startup.

Via:

  https://github.com/wincent/Command-T/pull/14"
wincent,2011-05-04 16:29:03,https://api.github.com/repos/wincent/command-t/git/commits/cee619ac6e906d1c6bfc3052f01ccaa6ac1d4b3c,cee619ac6e906d1c6bfc3052f01ccaa6ac1d4b3c,"Remove ""install"" Rake task as it is causing confusion

Looks like some people/scripts saw the ""rake install"" task and thought
that was the way to install the Command-T plug-in in Vim, but it is not:

  https://github.com/carlhuda/janus/issues/163

Remove the task to avoid such confusion. People who want to install the
Gem can still do so with ""gem install command-t"", which is easy enough.

(And to anyone reading this commit message, note that the gem was added
so that third-parties could access the Command-T matching algorithm from
outside of Vim, but to get the full functionality from inside Vim, you
must continue to install it as always, as a Vim plug-in and not as a
gem. See the docs for how to do this.)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-05-01 06:34:43,https://api.github.com/repos/wincent/command-t/git/commits/56b0fd3e9a30d5a982a7f638b01890cf38be51d6,56b0fd3e9a30d5a982a7f638b01890cf38be51d6,"Update docs for 1.2.1 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-05-01 06:30:53,https://api.github.com/repos/wincent/command-t/git/commits/666a3d7744bfe5f0b750cfc5a60015f06197393a,666a3d7744bfe5f0b750cfc5a60015f06197393a,"Extract cursor movement into separate method

This is more intention-revealing.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-05-01 06:18:34,https://api.github.com/repos/wincent/command-t/git/commits/e36b36074d9d5b1de48bbbc3b031f8ade2f4031e,e36b36074d9d5b1de48bbbc3b031f8ade2f4031e,"Rakefile: update ""help"" task with info about new tasks

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-05-01 06:09:54,https://api.github.com/repos/wincent/command-t/git/commits/15c2f61f40e0ad12fb78c3a5423726fbc4142076,15c2f61f40e0ad12fb78c3a5423726fbc4142076,"Fix botched commit 2328b94

We were supposed to swap the symlink and the file; ie:

  README.txt (real file)
  doc/command-t.txt (symlink)

Was supposed to become:

  README.txt (symlink)
  doc/command-t.txt (real file)

But we ended up adding a duplicate copy of the documentation:

  README.txt (symlink to doc/README.txt)
  doc/README.txt (real file)
  doc/command-t.txt (real file)

This commit fixes that, removing the redundant doc/README.txt and making
sure that doc/command-t.txt contains all recent changes.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 07:19:56,https://api.github.com/repos/wincent/command-t/git/commits/b1bd6f62c6f22570f0ecdcc3c0737dfe9dcbd1dd,b1bd6f62c6f22570f0ecdcc3c0737dfe9dcbd1dd,"Shorten description in gemspec

The long description looks terrible on the RubyGems.org website, so trim
it down to the bare minimum.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 07:11:13,https://api.github.com/repos/wincent/command-t/git/commits/92947a030517e66ee87bcde891db7929f2fac0ec,92947a030517e66ee87bcde891db7929f2fac0ec,"Update docs for 1.2 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 07:07:47,https://api.github.com/repos/wincent/command-t/git/commits/e23ca4355389fec48aea0cf1977d6a476fbf3ea4,e23ca4355389fec48aea0cf1977d6a476fbf3ea4,"Add Victor Hugo Borja to the README credits

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 07:06:58,https://api.github.com/repos/wincent/command-t/git/commits/4c8911438bb74788c2edb260078530ff4636fcfb,4c8911438bb74788c2edb260078530ff4636fcfb,"Add 'push' task for publishing to Gemcutter

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 07:00:40,https://api.github.com/repos/wincent/command-t/git/commits/8d2f171d963daef47de5335d41622f85eb6d7c04,8d2f171d963daef47de5335d41622f85eb6d7c04,"Clarify RubyGem description

Add a paragraph explaining that Command-T is a Vim plug-in first and
foremost, and that full functionality is only available when installed
as a Vim plug-in, but that it is also packaged as a RubyGem so that
third-party applications can make use of the search algorithm."
wincent,2011-04-30 06:47:11,https://api.github.com/repos/wincent/command-t/git/commits/a2545f54f2e3403592b4bee81fde0fbc84766c27,a2545f54f2e3403592b4bee81fde0fbc84766c27,"Warn about making non-release gems

Abbreviating the full version number of an intermediate build (eg.
""1.1b2-10-g61a374a"") to the last tag (eg. ""1.1b2"") is evil, because it
means we end up labelling distinct versions of the software with the
same version number.

Unfortuantely, however, it is a necessary evil because RubyGems will
choke if passed an intermediate version number:

  Invalid gemspec in [command-t.gemspec]: Malformed version number string
  1.1b2-10-g61a374a
  ERROR:  While executing gem ... (NoMethodError)
      undefined method `mark_version' for nil:NilClass
      rake aborted!

So, we resort to using the abbreviated, misleading version number in
this case. We can at least mitigate this evilness by displaying a
warning if the user ever tries to build a gem for an intermediate
release, by adding a dependency on the "":check_tag"" task.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
vic,2011-03-17 15:45:17,https://api.github.com/repos/wincent/command-t/git/commits/61a374adfd76aed420a90adb5dcfc66b19c3715c,61a374adfd76aed420a90adb5dcfc66b19c3715c,"Added command-t.gemspec and :gem, :install targets to Rakefile

This will allow other applications to use Command-T ruby binding.
Currently another app uses it besides Command-T vim plugin itself:

mrT [http://github.com/vic/mrT] - Curses based file completion
                                  for the command line.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 06:27:31,https://api.github.com/repos/wincent/command-t/git/commits/70abd5d0d34cb88eb452893babad7635bed635d3,70abd5d0d34cb88eb452893babad7635bed635d3,"Add Daniel Hahler to README credits

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
blueyed,2011-03-15 15:38:57,https://api.github.com/repos/wincent/command-t/git/commits/2328b949f17cdc617248b0882f5ca4d60d10f8cc,2328b949f17cdc617248b0882f5ca4d60d10f8cc,"Swap README.txt and doc/command-t.txt.

Make doc/command-t.txt the real file to make helptags work on
Windows.

Originally README.txt was a symlink, but GitHub didn't follow symlinks,
so things were swapped. Now, it does, so there's no penalty in swapping
back.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
blueyed,2011-02-23 14:27:49,https://api.github.com/repos/wincent/command-t/git/commits/71bc91e7444070929b9024b44c30b5661fdcefa3,71bc91e7444070929b9024b44c30b5661fdcefa3,"Fix typo/logic: ""on"" should be ""off""

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 05:56:25,https://api.github.com/repos/wincent/command-t/git/commits/f26196da96494e352d5a374699acaa85f3e2f0aa,f26196da96494e352d5a374699acaa85f3e2f0aa,"Fix alignment problems in help text

While these tweaks actually make the help text look worse when viewed as
plain text, they correct alignment problems when rendered inside Vim
itself as a help document (where some of the markup characters become
invisible).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 05:52:18,https://api.github.com/repos/wincent/command-t/git/commits/911704bc8242fd46d1489f40d8145a2b8dc0ec36,911704bc8242fd46d1489f40d8145a2b8dc0ec36,"Add Steven Moazami to the README credits

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-04-30 05:41:47,https://api.github.com/repos/wincent/command-t/git/commits/43d42ef87cdf3f78317fc63ec73a9bdb9f3db5eb,43d42ef87cdf3f78317fc63ec73a9bdb9f3db5eb,"Don't needlessly redisplay list when showing reversed lists

The ""matches != @matches"" comparison would spuriously pass for reversed
lists, except for the case where the list contains only 1 match, because
we were comparing the unreversed list with the reversed list.

So, reverse the list before doing the comparison, thus avoiding
unnecessary reprinting of the matches when the match list is unchanged.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:54:50,https://api.github.com/repos/wincent/command-t/git/commits/54b5bedf6923cfce8ee6c109fbf9e9d296bb76fa,54b5bedf6923cfce8ee6c109fbf9e9d296bb76fa,"Rakefile: add help task

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:47:43,https://api.github.com/repos/wincent/command-t/git/commits/cd71639e06ddfeaef7fdecb89ccbe87752701622,cd71639e06ddfeaef7fdecb89ccbe87752701622,"Rakefile: 'stash pop' failing is not necessarily a bad thing

If there are no local changes in the tree then the initial 'git stash'
will be a no-op, emitting:

  No local changes to save

Subsequently, when we do 'git stash pop' we'll exit with a non-zero exit
status and will see:

  No stash found.

As this is not really an error, don't make the entire Rake task explode
when this happens. If there really is an actual error at this point, the
user will see it from the message.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:31:36,https://api.github.com/repos/wincent/command-t/git/commits/61e41a0571c5163735cbf6245ad2138aa19e3e44,61e41a0571c5163735cbf6245ad2138aa19e3e44,"Update docs for 1.1b2 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:30:08,https://api.github.com/repos/wincent/command-t/git/commits/55339538158caa17d1f305307b5070b768ddfafd,55339538158caa17d1f305307b5070b768ddfafd,"Rakefile: actually filter release notes

Filtering was inadvertantly turned off during recent refactoring.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:21:29,https://api.github.com/repos/wincent/command-t/git/commits/b47221fb41922260b95d50303ccf5ddd7180895f,b47221fb41922260b95d50303ccf5ddd7180895f,"Rakefile: tweaks to get vimscriptuploader.rb working

Through experimentation, I've found that the way to get
vimscriptuploader.rb working is to:

  - pass upload credentials in via a config file found at
    ~/.vim_org.yml
  - pass the release notes in via a file pointed at by the
    --message-file option
  - pass all other options in via arguments
  - pass in an empty YAML file to keep it from barfing

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:07:18,https://api.github.com/repos/wincent/command-t/git/commits/c0eda02ae849a4a25e4d2318e4c9ce1c529eb4b7,c0eda02ae849a4a25e4d2318e4c9ce1c529eb4b7,"Rakefile: pass in script ID on the commandline rather than via file

vimscriptupload.rb will choke if we try to pass the script ID in through
the configuration file, because when the Yaml file is read back in, the
""id"" key appears as a symbol rather than a string, and it is looking for
a string only.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:04:01,https://api.github.com/repos/wincent/command-t/git/commits/69f972614114c72e883a121d8947bcbf9dd79dbd,69f972614114c72e883a121d8947bcbf9dd79dbd,"Rakefile: update bail_on_failure method to use colorized output

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:01:58,https://api.github.com/repos/wincent/command-t/git/commits/e0ba991798b50bcbacf93e38fd5f18f573ee6c8c,e0ba991798b50bcbacf93e38fd5f18f573ee6c8c,"Rakefile: check for Bundler before attempting to upload to www.vim.org

If not present, issue a warning, because the upload task will fail
unless the Mechanize gem is installed on the system.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:01:51,https://api.github.com/repos/wincent/command-t/git/commits/8be797b23fd5939c05f70f8d1661d4a06b7e6822,8be797b23fd5939c05f70f8d1661d4a06b7e6822,"Rakefile: abort upload if editor returns non-zero exit status

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 04:01:24,https://api.github.com/repos/wincent/command-t/git/commits/cd758606eb016215363ff406f0d9010eb5f784b0,cd758606eb016215363ff406f0d9010eb5f784b0,"Rakefile: add methods for printing in color and use them

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 01:55:54,https://api.github.com/repos/wincent/command-t/git/commits/ee8856a7bf65dc4ddbebf76898cc18cd10425910,ee8856a7bf65dc4ddbebf76898cc18cd10425910,"Update docs for 1.1b release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 01:54:16,https://api.github.com/repos/wincent/command-t/git/commits/4cad0ed14c1f23f0e62c265f1862c9d58d70a661,4cad0ed14c1f23f0e62c265f1862c9d58d70a661,"Mark specs broken in Ruby 1.9.2 as pending

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 00:18:42,https://api.github.com/repos/wincent/command-t/git/commits/2622d63f41722136431837a78e02c10217b5164d,2622d63f41722136431837a78e02c10217b5164d,"Git: ignore some temporary files

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 00:15:34,https://api.github.com/repos/wincent/command-t/git/commits/046a2680ad3fd0269f7d25d2ac3baa69a0b29ffa,046a2680ad3fd0269f7d25d2ac3baa69a0b29ffa,"Remove trailing newline from release notes in hash

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-27 00:12:03,https://api.github.com/repos/wincent/command-t/git/commits/ccfbec186a1bf03ac8ca1c89c692e8135bfb933a,ccfbec186a1bf03ac8ca1c89c692e8135bfb933a,"First cut at upload:vim Rake task

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 22:11:54,https://api.github.com/repos/wincent/command-t/git/commits/c512c3ad39d2102907eb419859961ed23c2d87d1,c512c3ad39d2102907eb419859961ed23c2d87d1,"Rename :upload task to namespaced 'upload:s3'

This is in preparation for the addition of a new upload task which will
upload the Vimball to www.vim.org.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 22:08:24,https://api.github.com/repos/wincent/command-t/git/commits/8ca5dc6e8edd9ff30b470f892cac85514f92a6d9,8ca5dc6e8edd9ff30b470f892cac85514f92a6d9,"Add mechanize to Gemfile (for vimscriptuploader.rb)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 21:35:26,https://api.github.com/repos/wincent/command-t/git/commits/29c1be4c6cbf6d87b83b0cc1823276ea7b35d8d0,29c1be4c6cbf6d87b83b0cc1823276ea7b35d8d0,"Git: ignore command-t.recipe file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 21:33:22,https://api.github.com/repos/wincent/command-t/git/commits/56d863e10a03d6d02e68db3a52eeb3ef42de1ae1,56d863e10a03d6d02e68db3a52eeb3ef42de1ae1,"Use vimball.rb to produce Vimball

One less thing to set up when developing on a different machine: instead
of having to find and build or install the mkvimball executable, we can
use the vendored vimball.rb script to do build the Vimball.

The world would be a better place if everyone used Pathogen, but if the
Vimball creation process is automated then there's no reason not to
continue doing it for now.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 21:01:14,https://api.github.com/repos/wincent/command-t/git/commits/7a154375cb5e766ee640088e6e60ebe332b9f09f,7a154375cb5e766ee640088e6e60ebe332b9f09f,"Add git://github.com/tomtom/vimscriptuploader.rb.git as a submodule

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 21:00:23,https://api.github.com/repos/wincent/command-t/git/commits/87b066c25307d3a57c4a81b61fd3751e6c940890,87b066c25307d3a57c4a81b61fd3751e6c940890,"Add git://github.com/tomtom/vimball.rb.git as a submodule

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 20:44:46,https://api.github.com/repos/wincent/command-t/git/commits/8e76dc6c2616a421fd5d1b90372579eaadbce267,8e76dc6c2616a421fd5d1b90372579eaadbce267,"Add specs for BufferFinder

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 20:23:28,https://api.github.com/repos/wincent/command-t/git/commits/3d2aa841d4d9f0dfd7455b5844fc1ff1d7cdb7e5,3d2aa841d4d9f0dfd7455b5844fc1ff1d7cdb7e5,"Bundle update

  rr (0.10.11)                   ->    rr (1.0.2)
  rspec (2.0.0.rc)               ->    rspec (2.5.0)
  rspec-core (2.0.0.rc)          ->    rspec-core (2.5.1)
  rspec-expectations (2.0.0.rc)  ->    rspec-expectations (2.5.0)
  rspec-mocks (2.0.0.rc)         ->    rspec-mocks (2.5.0)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 20:05:47,https://api.github.com/repos/wincent/command-t/git/commits/27869f4b50852393a37f1e02942910326bc21ae3,27869f4b50852393a37f1e02942910326bc21ae3,"Move FileFinder spec into subdirectory and correct filename

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 17:36:45,https://api.github.com/repos/wincent/command-t/git/commits/ec0a36e7206fd4dbc4dfaa3aeb5c432963592125,ec0a36e7206fd4dbc4dfaa3aeb5c432963592125,"Beef up BufferScanner spec

Return distinct paths instead of returning the same string object
multiple times.

This still isn't a hugely good spec seeing as the so much of the
stubbing ends up mirroring the tested method's implementation so
closely, but it is better than no spec at all.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 17:31:38,https://api.github.com/repos/wincent/command-t/git/commits/39064e0452a69860061b31c8601dd92f9fedcd0c,39064e0452a69860061b31c8601dd92f9fedcd0c,"Drop unnecessary call to #to_a on Range object

Range includes the Enumerable module, so #map will work on it out of the
box.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 17:20:31,https://api.github.com/repos/wincent/command-t/git/commits/a0b4e7793e7a100012f746d1590cca88932aa32e,a0b4e7793e7a100012f746d1590cca88932aa32e,"Minor spec cleanup

Use slightly tighter argument constraints and remove some unnecessary setup.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 11:28:24,https://api.github.com/repos/wincent/command-t/git/commits/da3c82128df7ba1475f49c9b50189e2d5211c397,da3c82128df7ba1475f49c9b50189e2d5211c397,"Add specs for BufferScanner

This are rudimentary specs which contain some less than ideal mocking.
Note how we're returning the same path multiple times because we can't
use RR's block syntax for return values here without causing the Ruby
parser to choke.

Nevertheless, the specs are still useful, enabling me to find the
off-by-one error corrected in the last commit.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 11:22:36,https://api.github.com/repos/wincent/command-t/git/commits/bb414a87e4333800042e151a3878e354dbeaffc1,bb414a87e4333800042e151a3878e354dbeaffc1,"Fix off-by-one error in BufferScanner

With this error fixed the nil check is no longer necesary.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 09:45:48,https://api.github.com/repos/wincent/command-t/git/commits/abf0c6c36405661c0b4632dac073d87674ff98f8,abf0c6c36405661c0b4632dac073d87674ff98f8,"Reformat to avoid line continuation

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 09:41:58,https://api.github.com/repos/wincent/command-t/git/commits/15da3c977683c2394fe235bc19e7b4d71a3fc16a,15da3c977683c2394fe235bc19e7b4d71a3fc16a,"Move FileScanner spec into a subdirectory

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 09:15:39,https://api.github.com/repos/wincent/command-t/git/commits/141df1d3c91941a8651a8d3c134b0f9cc0b2e7d7,141df1d3c91941a8651a8d3c134b0f9cc0b2e7d7,"Correct a typo in the docs

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 09:15:30,https://api.github.com/repos/wincent/command-t/git/commits/43ef0896ab5158ba97277029ec0f8fdd9dfcadc2,43ef0896ab5158ba97277029ec0f8fdd9dfcadc2,"Update docs for new :CommandTBuffer feature

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 09:06:31,https://api.github.com/repos/wincent/command-t/git/commits/a25611f510c9d7ebbf5a3145d287026b87fe2ed5,a25611f510c9d7ebbf5a3145d287026b87fe2ed5,"Always show dot files in the buffer finder

If you opened the file, you probably consider it interesting, so always
show it in the buffer finder.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 06:44:32,https://api.github.com/repos/wincent/command-t/git/commits/28d4403e604019cad846e82d48ee6dac59f3e688,28d4403e604019cad846e82d48ee6dac59f3e688,"Fix typo in default mapping for :CommandTBuffer

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 06:25:51,https://api.github.com/repos/wincent/command-t/git/commits/b3b36ab70520827bb53b0950f245cd6ed20a3f4a,b3b36ab70520827bb53b0950f245cd6ed20a3f4a,"Be careful to never pass nil to #relative_path_under_working_directory

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 06:18:17,https://api.github.com/repos/wincent/command-t/git/commits/1256c1e4009fcc5e91c4190cccd9ad700626be8e,1256c1e4009fcc5e91c4190cccd9ad700626be8e,"Set up @path in #show_buffer_finder

@path is used in the open_selection method, so now that we are
getting the BufferScanner to emit relative paths, we should ensure that
the pwd is available in order to correctly open the right buffer.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 06:17:42,https://api.github.com/repos/wincent/command-t/git/commits/cdd68da036b5bb1f73ca051a00221c6f20f7f05b,cdd68da036b5bb1f73ca051a00221c6f20f7f05b,Teach BufferScanner to use relative_path_under_working_directory
wincent,2011-03-26 06:17:06,https://api.github.com/repos/wincent/command-t/git/commits/f2b95e2623e41ff51540d2bd0c48d1c52d5528d8,f2b95e2623e41ff51540d2bd0c48d1c52d5528d8,"Extract relative_path_under_working_directory for later reuse

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 05:07:21,https://api.github.com/repos/wincent/command-t/git/commits/79f7714229683d20e8a07f195de0053584e68b82,79f7714229683d20e8a07f195de0053584e68b82,Guard against nil buffers in the buffer list
wincent,2011-03-26 04:58:53,https://api.github.com/repos/wincent/command-t/git/commits/403c5400dc6f3a422cde395d44185ddc3b503a92,403c5400dc6f3a422cde395d44185ddc3b503a92,"Add default mapping (<Leader>b) for bringing up buffer finder

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 04:57:26,https://api.github.com/repos/wincent/command-t/git/commits/2a49bff35e6c0e4f1a23527d0c56a4aa7fcac31b,2a49bff35e6c0e4f1a23527d0c56a4aa7fcac31b,"Add CommandTBuffer command to show buffer finder

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 04:54:10,https://api.github.com/repos/wincent/command-t/git/commits/f76ff4a34dbca7dc06ba3850c56f4c5fef1bca58,f76ff4a34dbca7dc06ba3850c56f4c5fef1bca58,"Rename CommandTShow function in plug-in file

In preparation for addition of a buffer-related equivalent.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 04:52:31,https://api.github.com/repos/wincent/command-t/git/commits/432d31348f76dd533534c3c5bf7ce19ac34acf2c,432d31348f76dd533534c3c5bf7ce19ac34acf2c,"Add show_buffer_finder method to Controller class

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 04:45:06,https://api.github.com/repos/wincent/command-t/git/commits/3edf8eabd8eb0d6af9f2edf32188a1552ba55d70,3edf8eabd8eb0d6af9f2edf32188a1552ba55d70,"Rename Controller#show to Controller#show_file_finder

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 04:41:34,https://api.github.com/repos/wincent/command-t/git/commits/76c76dd6c7aff40dba1845a70e2d67c7219d7d40,76c76dd6c7aff40dba1845a70e2d67c7219d7d40,"Set up buffer finder when initializing controller

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 04:39:09,https://api.github.com/repos/wincent/command-t/git/commits/9f7ff372e575944eda46bdafd445f54babdbb6f6,9f7ff372e575944eda46bdafd445f54babdbb6f6,"Refactor Controller class in preparation for buffer search

Rename the @finder instance variable and #set_up_finder method in
preparation for future commits which will teach the Controller class how
to hand BufferFinder instances as well.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 04:01:03,https://api.github.com/repos/wincent/command-t/git/commits/131aba2f79dcf4e0738c0374728376364813ab0d,131aba2f79dcf4e0738c0374728376364813ab0d,"Add BufferFinder and BufferScanner classes

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 03:52:44,https://api.github.com/repos/wincent/command-t/git/commits/a7b50bb099e6ac9a7769f7cf6b5e38676fc20eb5,a7b50bb099e6ac9a7769f7cf6b5e38676fc20eb5,"Move file-specific Scanner functionality into a subclass

Just like we did for the FileFinder, we're extracting things into a
subclass here so that we can shortly add a new BufferScanner class.

At this stage the Scanner superclass is basically an empty shell and it
may end up that we remove it entirely.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 03:31:34,https://api.github.com/repos/wincent/command-t/git/commits/97a69386bafabc0ba2262e6b0f1a5e6ef92c11ca,97a69386bafabc0ba2262e6b0f1a5e6ef92c11ca,"Move file-specific Finder functionality into subclass

Paving the way for a BufferFinder class, we keep most of the
functionality inside the Finder class, but extract the file-specific
parts into a FileFinder subclass.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-03-26 03:04:15,https://api.github.com/repos/wincent/command-t/git/commits/6a702b8a540a602101389daa592745803d146ddb,6a702b8a540a602101389daa592745803d146ddb,"Update Bundler binstubs

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-01-05 21:25:23,https://api.github.com/repos/wincent/command-t/git/commits/85fd8b0ce657f772ad9c1c50fe502e08ca2bf04c,85fd8b0ce657f772ad9c1c50fe502e08ca2bf04c,"Update docs for 1.0.1 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-01-05 21:23:20,https://api.github.com/repos/wincent/command-t/git/commits/c7e2d0cb1233a4ab984d7f7b04c98d2b5cb81bb0,c7e2d0cb1233a4ab984d7f7b04c98d2b5cb81bb0,"Rakefile: add 'archive' task for updating releases branch

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-01-05 21:12:42,https://api.github.com/repos/wincent/command-t/git/commits/8e5d955bb866a55083ec99ed5d5ac9c36c34dd46,8e5d955bb866a55083ec99ed5d5ac9c36c34dd46,"Rakefile: add 'upload' task for uploading to S3

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-01-05 21:06:33,https://api.github.com/repos/wincent/command-t/git/commits/2c65ea924a828d7c0d626a7765ef4d0fe50c761e,2c65ea924a828d7c0d626a7765ef4d0fe50c761e,"Update copyright year range to include 2011

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-01-05 21:01:51,https://api.github.com/repos/wincent/command-t/git/commits/5ed5d7bab040fd3a53581768f76ebd8f0c17a2ac,5ed5d7bab040fd3a53581768f76ebd8f0c17a2ac,"Rake: include version number in vimball filename

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2011-01-05 20:56:07,https://api.github.com/repos/wincent/command-t/git/commits/c03f26abba14c0dcdc24b4659c8ad095714f90ab,c03f26abba14c0dcdc24b4659c8ad095714f90ab,"Check for tag in ""vimball"" Rake task

I'll soon be adding a Rake task for uploading a Vimball, so we want to
check for a proper tag here and warn if we don't have one.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-12-24 04:28:36,https://api.github.com/repos/wincent/command-t/git/commits/dfc4e191604328361bfeda52cd8aae3f9238fdac,dfc4e191604328361bfeda52cd8aae3f9238fdac,"Tighten up check for existing mappings

Commit 70a8f9c9 added a check for an existing ""CommandT"" mapping before
setting up the default mapping, to allow for the case where a user has
set up a custom mapping in their .vimrc.

This, however, breaks when somebody adds a mapping for "":CommandTFlush"",
as described here:

  https://wincent.com/issues/1762

This is because the Vim hasmapto() function does a relaxed match when
looking at the right-hand side of the mapping, so a mapping for
"":CommandTFlush"" is considered to match ""CommandT"".

Fix this by tightening up the check, looking for "":CommandT<CR>"" instead
of just ""CommandT"".

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-12-14 16:25:11,https://api.github.com/repos/wincent/command-t/git/commits/a08fed9f6c37519e8ca58e6cf0b0c99ae8581ffe,a08fed9f6c37519e8ca58e6cf0b0c99ae8581ffe,"Whitespace fix

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-12-03 16:05:35,https://api.github.com/repos/wincent/command-t/git/commits/a338c4c3a964ec79215aed92b4337763757b17bd,a338c4c3a964ec79215aed92b4337763757b17bd,"Eliminate (cosmetic) spelling error in variable name

See:

  https://wincent.com/issues/1753

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-27 17:48:47,https://api.github.com/repos/wincent/command-t/git/commits/40ba35c2debaa66c1a6d6aec1208693c67f6d1ab,40ba35c2debaa66c1a6d6aec1208693c67f6d1ab,"No need for interpolation here

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-27 17:47:16,https://api.github.com/repos/wincent/command-t/git/commits/3a8ad5b46ce2c2ee9561d7587b24a1f90cf51396,3a8ad5b46ce2c2ee9561d7587b24a1f90cf51396,"Make auto-clean-up work for <C-W k> or similar BufLeave events

It is not clear why the ""unload"" event isn't triggered when we
explicitly close the window here, requiring a manual ""unload"" in order
to finish off the clean-up.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-27 12:14:28,https://api.github.com/repos/wincent/command-t/git/commits/0976b17796cda059a60f1e7ae5bd7ea6ffc2f1a7,0976b17796cda059a60f1e7ae5bd7ea6ffc2f1a7,"Use buffer-local autocmds rather than an explicit group

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-27 12:11:49,https://api.github.com/repos/wincent/command-t/git/commits/80277295f4a7072d8817bd615fc4b2d84e41ee93,80277295f4a7072d8817bd615fc4b2d84e41ee93,"First cut at using autocmds to perform cleanup

This is a naïve implementation that doesn't (yet) correctly handle pure
leaving events (eg. <C-W k>), although it does at least handle disposal
events (eg. <C-W q>).

Will follow up with a refinement that uses buffer-local autocmds.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-27 12:09:52,https://api.github.com/repos/wincent/command-t/git/commits/bc4475e3a3e6d38137615ea29121bc4f16495600,bc4475e3a3e6d38137615ea29121bc4f16495600,"Tighten up regex for detecting GoToFile buffer

We can't use a simple equality comparison because the actual buffer name
will probably be something like ""/my/current/working/directory/GoToFile""
but this is still a slight improvement.

I'm not tightening it up even further (eg. by trying to match
""/GoToFile"") because I don't want to run into trouble on Windows, where
the path separator may be different.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-26 16:21:40,https://api.github.com/repos/wincent/command-t/git/commits/a242305a563ca4e199bc26c7f1a18ff59a478501,a242305a563ca4e199bc26c7f1a18ff59a478501,"Update docs for 1.0 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-26 16:13:58,https://api.github.com/repos/wincent/command-t/git/commits/89e27d5c03f42ed46961469a6d12fbff1e299be2,89e27d5c03f42ed46961469a6d12fbff1e299be2,"Make relative path simplification work on Windows

Commit 517fd37648 made it so that paths under the working directory
would be shown as relative paths rather than absolute ones, thus saving
space in the buffer list, status line and other such places.

It didn't have any effect on Windows, however, because Vim's getcwd()
function returns paths of the form ""C:\foo\bar\baz"", while Ruby expects
paths of the form ""/foo/bar/baz"", even on Windows.

This commit adds a call to File.expand_path which will turn
""Windows-style"" paths into POSIX-style ones. It's a no-op on POSIX-y
platforms, and makes the relative path simplification work on Windows.

Reported here:

  https://wincent.com/forums/command-t/topics/440

See also:

  https://wincent.com/issues/1743

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-26 16:11:37,https://api.github.com/repos/wincent/command-t/git/commits/768f6599d66209617a533301190b021bb39b04a2,768f6599d66209617a533301190b021bb39b04a2,"Update repository link to integrated browser

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-05 15:50:14,https://api.github.com/repos/wincent/command-t/git/commits/66bd7e81adb05fa836993f85970069e6201c71e1,66bd7e81adb05fa836993f85970069e6201c71e1,"Update docs for 1.0b release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-04 16:53:52,https://api.github.com/repos/wincent/command-t/git/commits/8f38e57f24e3ef86717c6068c5d6212ec1f30480,8f38e57f24e3ef86717c6068c5d6212ec1f30480,"Fall back to name rather than giving up when selecting

See:

  https://wincent.com/issues/1617

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-04 16:37:18,https://api.github.com/repos/wincent/command-t/git/commits/89dab21b1048c507f9e84ccfaff46bfe4d2c1d9f,89dab21b1048c507f9e84ccfaff46bfe4d2c1d9f,"Check one more place where Vim's always-0-buffer-number bug can crop up

See:

  https://wincent.com/issues/1617

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-04 09:55:23,https://api.github.com/repos/wincent/command-t/git/commits/aced8ced811d040b26f72f237abe9bd375c4e522,aced8ced811d040b26f72f237abe9bd375c4e522,"Better fix for issue #1617

Even though I can't reproduce the Vim ""largefile"" bug, I did some
testing by stubbing $curbuf.number and forcing it to always return 0. It
turns out that my fallback in this case wasn't working because if you
do:

  :bunload! GoToFile

Vim will fail to close the window because the GoToFile buffer is hidden
and it can't find it.

  :bwipeout! GoToFile

However, does work, so go with that in the fallback case.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-04 09:41:46,https://api.github.com/repos/wincent/command-t/git/commits/069bc3f320e9349bff17330f1ccf7c17ee185df3,069bc3f320e9349bff17330f1ccf7c17ee185df3,"Swap conditional order

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-04 09:38:58,https://api.github.com/repos/wincent/command-t/git/commits/fcfaa281da3d11b7bb2dd1c66ce9f3f8588f5d3a,fcfaa281da3d11b7bb2dd1c66ce9f3f8588f5d3a,"Fix a comment typo

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-04 09:26:47,https://api.github.com/repos/wincent/command-t/git/commits/fa3847004abdf5f87333043a3ea5296458e454b7,fa3847004abdf5f87333043a3ea5296458e454b7,"Fall back to buffer name on platforms affected by buffer number bug

I was reluctant to use the buffer name instead of the buffer number, but
on platforms affected by the bug we have two choices:

  - allow the bug to break Command-T, causing support requests and
    requiring people to either patch the source or rebuild Vim

  - fall back to the buffer name, which may not be entirely robust but
    at least is better than being totally broken

Seeing as we can maintain the correct, robust behavior on platforms not
affected by the bug, and only use the fallback behavior when required,
adding this workaround is probably acceptable until upstream Vim gets
fixed.

See:

  https://wincent.com/issues/1617

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-11-04 09:07:54,https://api.github.com/repos/wincent/command-t/git/commits/1e4d514a7640db2f5e02aa9b031c0cb69697ce1a,1e4d514a7640db2f5e02aa9b031c0cb69697ce1a,"Dispose of match listing using :bunload! rather than :bwipeout!

Previously we created a new buffer every time we showed the match
listing and then disposed of it each time with :bwipeout!. This caused
the buffer numbers to steadily grow.

Now, we dispose of the match listing using :bunload!; this frees the
contents of the buffer and closes the window, but the buffer sticks
around and can be re-used next time we show the match listing. In this
way we always have a stable buffer number for the match listing and
repeatedly using Command-T doesn't drive the buffer numbers up any more.

For more info see:

  https://wincent.com/issues/1724

One concern with this change is that it increases our reliance on the
accuracy of the buffer number, and there is a known bug in Vim 7.3 when
built with --enable-largefile; see this ticket for full details:

  https://wincent.com/issues/1617

If you are affected by this bug the solution is to build Vim using
--disable-largefile. Until the issue gets fixed upstream I am thinking
of adding a workaround in Command-T (falling back to buffer name rather
than number for people with a broken Vim).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 17:23:13,https://api.github.com/repos/wincent/command-t/git/commits/4d081780fae18eaa37a0db03b5645af235fd6c97,4d081780fae18eaa37a0db03b5645af235fd6c97,"Update docs for 0.9 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 17:18:24,https://api.github.com/repos/wincent/command-t/git/commits/c4d5c9d548d3a0abce125c7cb216a46439d0a3e6,c4d5c9d548d3a0abce125c7cb216a46439d0a3e6,"Use a ternary to make a more compact conditional

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 17:13:53,https://api.github.com/repos/wincent/command-t/git/commits/a479297012289c10527bc16d2590f4e5715d3bf3,a479297012289c10527bc16d2590f4e5715d3bf3,"Code comment fix (concordance)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 17:00:17,https://api.github.com/repos/wincent/command-t/git/commits/f4d6d17f98bff811ceff2d5eddd8213551d72a3d,f4d6d17f98bff811ceff2d5eddd8213551d72a3d,"Add license header to recently-added file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 16:59:08,https://api.github.com/repos/wincent/command-t/git/commits/d59fe1776178fd58916a73d9adf2c91f2085de81,d59fe1776178fd58916a73d9adf2c91f2085de81,"Use expect/to rather than lambdas for readability

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 16:56:13,https://api.github.com/repos/wincent/command-t/git/commits/794ab8afc02d57cf9ea8f68985f4cf7eb90378c1,794ab8afc02d57cf9ea8f68985f4cf7eb90378c1,"Remove unneeded ""private"" in anonymous module

No external caller is going to try calling these internal methods, so
no need to mark them as private.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 16:53:29,https://api.github.com/repos/wincent/command-t/git/commits/d1bac1ce9838ea8325166f0a254c33ea3b714f28,d1bac1ce9838ea8325166f0a254c33ea3b714f28,"Reword comment that was looking at me funny

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 16:44:49,https://api.github.com/repos/wincent/command-t/git/commits/2bbe149dad9ca16b5149beb799b8d103d6fc4bab,2bbe149dad9ca16b5149beb799b8d103d6fc4bab,"Use a single ""before"" block in specs rather than two

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 16:42:49,https://api.github.com/repos/wincent/command-t/git/commits/698437b4513e45da2d4cab37b2accb65d6529583,698437b4513e45da2d4cab37b2accb65d6529583,"Spec style fixes: reword to avoid unnecessary ""should""

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 16:38:03,https://api.github.com/repos/wincent/command-t/git/commits/d79616985fc2ade5d789c97a8e43176b730e5b5a,d79616985fc2ade5d789c97a8e43176b730e5b5a,"Require spec helper using relative path

RSpec adds the spec directory to the load path, so there's no need to
specify an absolute path.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-10-08 16:35:59,https://api.github.com/repos/wincent/command-t/git/commits/292be2aa6e6468260f9434edf01db1e195592cba,292be2aa6e6468260f9434edf01db1e195592cba,"Bump minimum RSpec version to 2.0.0.rc

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
matthewtodd,2010-10-08 09:09:30,https://api.github.com/repos/wincent/command-t/git/commits/517fd3764817bed5ff049af997bc42c4386aadd3,517fd3764817bed5ff049af997bc42c4386aadd3,"Open relative paths under the working directory

This reduces absolute path noise in the buffer list, status line, tab
line, etc., for the usual no-arg case of opening files in the working
directory.

It falls back to the previous absolute path behavior for files outside
the working directory.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
matthewtodd,2010-10-08 07:36:27,https://api.github.com/repos/wincent/command-t/git/commits/ddd61231611178a2312d17b5f5d2b386e2ba52af,ddd61231611178a2312d17b5f5d2b386e2ba52af,"Add a source to the Gemfile

`bundle install` dies otherwise.

(At least for me; I'm using Bundler 1.0.2.)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-09-14 08:37:57,https://api.github.com/repos/wincent/command-t/git/commits/195dedcca4726a5d61289e617447ccb415587f6a,195dedcca4726a5d61289e617447ccb415587f6a,"Teach multi-spec.sh about Bundler

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-09-14 08:22:28,https://api.github.com/repos/wincent/command-t/git/commits/f2b03d9f646c81f153d69048a337d37a558d9a85,f2b03d9f646c81f153d69048a337d37a558d9a85,"Rakefile: remove reference to long-gone readme:check task

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-09-14 08:02:23,https://api.github.com/repos/wincent/command-t/git/commits/805a827f79a64e5385ca756095ee9d3b65c9e4e5,805a827f79a64e5385ca756095ee9d3b65c9e4e5,"Update docs for 0.8.1 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-09-02 13:26:57,https://api.github.com/repos/wincent/command-t/git/commits/c17c886e3300aa4f1f44430e6b6e93c03c607783,c17c886e3300aa4f1f44430e6b6e93c03c607783,"doc: update with info for known-working versions on Windows

See:

  https://wincent.com/issues/1673

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-23 14:03:20,https://api.github.com/repos/wincent/command-t/git/commits/0ad647a6dad3c74f5a20673269398d1c0694675b,0ad647a6dad3c74f5a20673269398d1c0694675b,"doc: update links and info for installing on Windows

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-19 06:47:07,https://api.github.com/repos/wincent/command-t/git/commits/24c5ab7a33cdc25bb3b0e6739b21d9b09298d6af,24c5ab7a33cdc25bb3b0e6739b21d9b09298d6af,"Doc: update HISTORY section for 0.8 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-19 06:29:23,https://api.github.com/repos/wincent/command-t/git/commits/276260419ffa86d0f22ac9b9f769da9a7a0e3310,276260419ffa86d0f22ac9b9f769da9a7a0e3310,"Doc: updates for Vim 7.3 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-19 06:28:31,https://api.github.com/repos/wincent/command-t/git/commits/47f991a4cf7678cffb53b9ed1dad53f1f3451648,47f991a4cf7678cffb53b9ed1dad53f1f3451648,"Doc: update MacVim download link

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-16 09:21:01,https://api.github.com/repos/wincent/command-t/git/commits/ead2d887f45eaa9fbd4313074f5842825d1b9798,ead2d887f45eaa9fbd4313074f5842825d1b9798,"Remove ""releases"" subdirectory

Releases are now archived in the separate ""releases"" branch so as to
stop them from polluting ""grep -R"", ""git grep"" and ""ack"" output with
probably-irrelevant noise.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-16 09:11:34,https://api.github.com/repos/wincent/command-t/git/commits/4ddb8d3cd15c5cde3237951fcfc1f5fb63f1192b,4ddb8d3cd15c5cde3237951fcfc1f5fb63f1192b,"Remove now-redundant 'readme' tasks

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-16 09:07:58,https://api.github.com/repos/wincent/command-t/git/commits/678a9dac3f5988b775e829e7d2f859c49fb823aa,678a9dac3f5988b775e829e7d2f859c49fb823aa,"Make doc/command-t.txt a symlink to README.txt

Originally README.txt was a symlink to doc/command-t.txt, added for the
benefit of GitHub, but GitHub doesn't follow such symlinks so it didn't
work.

Instead, I set up Rake tasks for keeping the two files in sync.

Evidently this wasn't enough because I've received patches from people
editing one file or the other.

So, invert the original approach and make doc/command-t.txt a symlink to
README.txt. The full text gets included when making the Vimball, and
Pathogen users will also get access to the documentation too because
"":call pathogen#helptags()"" does the right thing with symbolic links.

Of course, in hindsight, I should have done it this way all along.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-16 09:02:16,https://api.github.com/repos/wincent/command-t/git/commits/59c2d63a5ed33bd4a23cc73f9743be05ea10d4b5,59c2d63a5ed33bd4a23cc73f9743be05ea10d4b5,"Update README.txt for GitHub

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-16 09:00:47,https://api.github.com/repos/wincent/command-t/git/commits/ac5cfa9dd4ea30615b9a67772216cf7338faf779,ac5cfa9dd4ea30615b9a67772216cf7338faf779,"doc: update contributor list and history

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
bronson,2010-08-16 01:17:50,https://api.github.com/repos/wincent/command-t/git/commits/70a8f9c9b484c5b67e53516c2d55b1579ead9be8,70a8f9c9b484c5b67e53516c2d55b1579ead9be8,"Don't map <Leader>t if another mapping that calls :CommandT exists

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-11 14:50:58,https://api.github.com/repos/wincent/command-t/git/commits/c31d4d8c29a9b79575830e5fee16acde41a8783f,c31d4d8c29a9b79575830e5fee16acde41a8783f,"doc: mention use of ""rvm use system"" in installation notes

See:

  https://wincent.com/issues/1633

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-01 10:42:27,https://api.github.com/repos/wincent/command-t/git/commits/037046318fb78284056c0627ada5032e8453abff,037046318fb78284056c0627ada5032e8453abff,"doc: update Pathogen section

- add note about selecting a specific version

- since commit 659ea32e, we can run ""rake make"" without any
  dependencies, so use that for installation within a Git clone

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-08-01 10:34:58,https://api.github.com/repos/wincent/command-t/git/commits/659ea32e327b713173d512aa29ef2489dec8f2fe,659ea32e327b713173d512aa29ef2489dec8f2fe,"Rakefile: remove dependency on RSpec/Bundler

Based on this commit by Mike Lundy:

  http://github.com/novas0x2a/Command-T/commit/9de34c6f6df7c6f217a3945f0054ec91a120e5c9

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-31 10:06:02,https://api.github.com/repos/wincent/command-t/git/commits/0a09545ca33bfe4eae0e2bf963afcb9551f630a9,0a09545ca33bfe4eae0e2bf963afcb9551f630a9,"Documentation updates

- add Pathogen section

- flesh out troubleshooting notes

- move *command-t* tag up to top of contents so that ':h command-t' will
  show contents

- replace ""VIM"" with ""Vim""; while the former is used in the official Vim
  help in some places (usually only in titles), ""Vim"" is used far more
  often (generally in all normal sentences)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-31 09:32:03,https://api.github.com/repos/wincent/command-t/git/commits/9330c050170f75d6198cf4c9c47192276aa86a28,9330c050170f75d6198cf4c9c47192276aa86a28,"Git: ignore doc/tags

This is for people installing Command-T as a Git submodule under
~/.vim/bundle with pathogen.vim. We don't want a generated file
cluttering up their 'git status' listings.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-23 14:58:32,https://api.github.com/repos/wincent/command-t/git/commits/6cace895919e687e8a09a5aafb66ded44a16d600,6cace895919e687e8a09a5aafb66ded44a16d600,"Prevent folds from automatically appearing in match listing

This can happen if user has:

  set foldmethod=indent
  set foldlevelstart=0

See:

  https://wincent.com/issues/1619

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-18 18:52:42,https://api.github.com/repos/wincent/command-t/git/commits/043a24a9d7beb25e6227b54de36bfeb4542842f6,043a24a9d7beb25e6227b54de36bfeb4542842f6,"Fix buggy refactoring from commit a22b128

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-18 18:50:21,https://api.github.com/repos/wincent/command-t/git/commits/fe308e559d3e50887e2b57115c66bd1cea9fed31,fe308e559d3e50887e2b57115c66bd1cea9fed31,"Remove method used in only one place

Since we had to make this a class method in order to leave the Vim
module untouched, there is less reason to have this as a separate,
self-documenting method now.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 11:06:50,https://api.github.com/repos/wincent/command-t/git/commits/dde364beb08a1b79f9cd6b407aee700e221b8928,dde364beb08a1b79f9cd6b407aee700e221b8928,"Use Bundler bin stubs from multi-spec.sh

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 11:04:58,https://api.github.com/repos/wincent/command-t/git/commits/b8da7f53daa39ba03457f875418ae959834e3152,b8da7f53daa39ba03457f875418ae959834e3152,"Reference ::VIM constant for specs

Needed because the specs run outside the context of Vim, where the VIM
module isn't defined.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:51:29,https://api.github.com/repos/wincent/command-t/git/commits/64bcfbee95a6fde2612191463c99389916501199,64bcfbee95a6fde2612191463c99389916501199,"Move vim/window.rb under command-t subdirectory

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:49:27,https://api.github.com/repos/wincent/command-t/git/commits/a22b128b72ddf00d81120a0084dc72cd9a1e5cd5,a22b128b72ddf00d81120a0084dc72cd9a1e5cd5,"Move VIM::Window methods inside CommandT namespace

As these are methods called on VIM::Window instances, and we don't want
to add methods to class we don't own (to avoid trampling other plugins
that try to do so), change these methods into class methods, then move
them into the desired namespace.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:40:56,https://api.github.com/repos/wincent/command-t/git/commits/21e8b8451cf2f8bc0454fc6b501a38b03a2fa80b,21e8b8451cf2f8bc0454fc6b501a38b03a2fa80b,"Move vim/screen.rb under command-t subdirectory

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:39:39,https://api.github.com/repos/wincent/command-t/git/commits/4cbbdd483ce56de6f53ede5eb5a0eacfee733921,4cbbdd483ce56de6f53ede5eb5a0eacfee733921,"Remove unused 'columns' method

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:39:05,https://api.github.com/repos/wincent/command-t/git/commits/83c3b704ec005db7a8a4c7eb4fb7656c41c8bcff,83c3b704ec005db7a8a4c7eb4fb7656c41c8bcff,"Move Screen additions into CommandT namespace

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:36:30,https://api.github.com/repos/wincent/command-t/git/commits/9fcb4896f23b03d43f7b04c7599b10f38a7af374,9fcb4896f23b03d43f7b04c7599b10f38a7af374,"Move vim.rb into command-t subdirectory

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:35:26,https://api.github.com/repos/wincent/command-t/git/commits/6d28321e80addd3e812bd927efb3ecc628f19242,6d28321e80addd3e812bd927efb3ecc628f19242,"Move top-level VIM additions into CommandT namespace

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:31:20,https://api.github.com/repos/wincent/command-t/git/commits/7a205b983e55fcf2fcee5dd35f7e07017fae5759,7a205b983e55fcf2fcee5dd35f7e07017fae5759,"Prepare for namespace shift

As there will soon be a VIM module under CommandT, we need to make sure
all calls to the existing VIM module unambiguously reference it as a
top-level module.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-17 10:17:07,https://api.github.com/repos/wincent/command-t/git/commits/fd8bbae17d814fda122982921134327efb41126a,fd8bbae17d814fda122982921134327efb41126a,"Prepare vim/vim.rb for namespacing

All of the additions to the VIM module are going to move inside the
CommandT namespace, to play nicely with other Ruby plugins.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-14 14:15:19,https://api.github.com/repos/wincent/command-t/git/commits/a9b3e418722810badb2371e4f067d12fc51b1448,a9b3e418722810badb2371e4f067d12fc51b1448,"Add README.txt (for GitHub)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-14 14:14:46,https://api.github.com/repos/wincent/command-t/git/commits/9db26ee1db8e23c03eb5ef9b35c521bc7e5838c2,9db26ee1db8e23c03eb5ef9b35c521bc7e5838c2,"Add Rake tasks for updating README.txt

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-14 14:05:29,https://api.github.com/repos/wincent/command-t/git/commits/8abd32861efecc21c63ff2d85854bd9c0eb6aef8,8abd32861efecc21c63ff2d85854bd9c0eb6aef8,"Revert ""Link docs to README.txt in repo root (for GitHub)""

Of course, it didn't like the symlink.

This reverts commit 371322ec.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-14 13:52:37,https://api.github.com/repos/wincent/command-t/git/commits/371322ec48d27973e560340c96f068e60363681c,371322ec48d27973e560340c96f068e60363681c,"Link docs to README.txt in repo root (for GitHub)

GitHub should show this file to people visiting the start page of the
repository (unless it doesn't like symlinks, but won't know that until
I've pushed).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-12 15:44:25,https://api.github.com/repos/wincent/command-t/git/commits/0f0f3c2fa3c3cbcb0074ff28a717669b403c8d30,0f0f3c2fa3c3cbcb0074ff28a717669b403c8d30,"Watch out for nil windows when restoring dimensions

While it is unlikely to occur, it is possible that VIM::Window[w.index]
may return nil for an existing window.

For example, starting with a freshly opened Vim window, if we open the
MiniBufExplorer window with ""<leader>mbe"" and then try to open a file
with Command-T, we'll find that one of the two windows (the original ""No
Name"" window and the MiniBufExplorer window) is no longer available and
VIM::Window[w.index] returns nil.

This problem does not manifest itself when calling up Command-T directly
from within the original ""No Name"" buffer (ie. without switching to
MiniBufExplorer first), nor when we have other, real buffers present and
we call up MiniBufExplorer.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-12 15:31:46,https://api.github.com/repos/wincent/command-t/git/commits/e37febf1ebcf31a79107ef78b1760babd7cfc2f9,e37febf1ebcf31a79107ef78b1760babd7cfc2f9,"Try to avoid ""Not enough room"" errors

This commit implements an attempt to avoid ""Not enough Room"" errors
which can be reported if we try opening a file when a small buffer like
MiniBufExplorer is active.

Specifically we target ""unlisted"" buffers of buftype ""nofile"". Note that
we merely try to switch to the first window containing a buffer which is
not ""unlisted""/""nofile"". There are no guarantees that said window will
be appropriate for us either, but it is still more likely to be
appropriate than the ""unlisted""/""nofile"" buffer.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-12 11:57:05,https://api.github.com/repos/wincent/command-t/git/commits/c501b36ee88641545c93d46a58b32d0d7b394a0d,c501b36ee88641545c93d46a58b32d0d7b394a0d,"Add more explanation about why extension my fail to load

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-12 06:19:04,https://api.github.com/repos/wincent/command-t/git/commits/a0b13e10043dc947a79dac78349eeb99b46cc6d7,a0b13e10043dc947a79dac78349eeb99b46cc6d7,"Accept list of overrides for mappings

See:

  https://wincent.com/issues/1603

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-12 06:14:48,https://api.github.com/repos/wincent/command-t/git/commits/fbdad3904843aa874d6578143cddf6ed3ece23be,fbdad3904843aa874d6578143cddf6ed3ece23be,"Add get_list_or_string method

This will be used to allow users to specify multiple mappings; eg.

  :let g:CommandTBackspaceMap = ['<C-h>', '<BS>']

Instead of just a single mapping like:

  :let g:CommandTBackspaceMap = '<BS>'

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-12 06:11:46,https://api.github.com/repos/wincent/command-t/git/commits/8a54622bcc704f7b64cfb5b5d0477635da281c2f,8a54622bcc704f7b64cfb5b5d0477635da281c2f,"Extract exists?() method to avoid some repetition

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 17:18:53,https://api.github.com/repos/wincent/command-t/git/commits/4b2da2fb739771a5a8bb0bf49258a2490b8c8cbb,4b2da2fb739771a5a8bb0bf49258a2490b8c8cbb,"Optimize by eliminating repeated downcasing

Previously we were doing a lot of repeated downcasing of the search
string. Given 10,000 candidate files we would:

  - create 10,000 Match instances
  - in each instance, downcase the abbreviation at least once
  - in each instance, possibly downcase the abbreviation many times more
    during recursion

Now, instead, we get our caller, the Matcher class, to perform the
downcasing once only, and we pass the downcased search string into the
Match instances. The Match instances can now operate under the
assumption that their input has already been downcased.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 17:11:02,https://api.github.com/repos/wincent/command-t/git/commits/fe12dfbdf5f7dc7f9b8f87032a820fb34d452cfe,fe12dfbdf5f7dc7f9b8f87032a820fb34d452cfe,"Edit spec descriptions for brevity

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 16:56:25,https://api.github.com/repos/wincent/command-t/git/commits/f66e16be59a8d74de7ef6cbc247151a008ea2559,f66e16be59a8d74de7ef6cbc247151a008ea2559,"Fix typo in 0.8b changelog

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 16:39:23,https://api.github.com/repos/wincent/command-t/git/commits/11af827da67a2ca7a7e2e6751b60612b8f5f65b3,11af827da67a2ca7a7e2e6751b60612b8f5f65b3,"Remove unused .gitignore file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 16:38:01,https://api.github.com/repos/wincent/command-t/git/commits/1759b392f5b48ec15d3063e857b68485cc6eb489,1759b392f5b48ec15d3063e857b68485cc6eb489,"Store releases in ""releases"" subdirectory

Normally I don't bother storing generated files in source control, but
as the vimball archives are so small I see no harm in doing so here, as
a convenient place to store older snapshots.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 16:26:43,https://api.github.com/repos/wincent/command-t/git/commits/0d69a372e22ffb3fe4320316822ed301e11c6435,0d69a372e22ffb3fe4320316822ed301e11c6435,"Update docs for 0.8b release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 11:02:45,https://api.github.com/repos/wincent/command-t/git/commits/fc1a4a971f53d0832f15114b70e859079250d69b,fc1a4a971f53d0832f15114b70e859079250d69b,"New rake tasks

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 11:00:30,https://api.github.com/repos/wincent/command-t/git/commits/1ad912d60c25242ad8019fc2ecec83420e5650c0,1ad912d60c25242ad8019fc2ecec83420e5650c0,"Add binstubs generated by Bundler 1.0.0.beta.4

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 10:40:06,https://api.github.com/repos/wincent/command-t/git/commits/1bed48565455bee1ddb8f404438a20573316c820,1bed48565455bee1ddb8f404438a20573316c820,"Update makefile to use rspec instead of spec

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 10:03:23,https://api.github.com/repos/wincent/command-t/git/commits/8a8083b9d666e1d2cf2c225f425033f18ccf25ff,8a8083b9d666e1d2cf2c225f425033f18ccf25ff,"Scanner spec: use instance variable to keep things brief

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 09:57:58,https://api.github.com/repos/wincent/command-t/git/commits/b3a3e0fe909234019921d90b66302fc002475d31,b3a3e0fe909234019921d90b66302fc002475d31,"Use %w() syntax and =~ matcher in scanner spec

For conciseness.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 09:48:30,https://api.github.com/repos/wincent/command-t/git/commits/df6d3a40ce210614a0617a2d09234982d4069620,df6d3a40ce210614a0617a2d09234982d4069620,"Update Finder specs for new algorithm

Problems in my Ruby environment (rb_funcall crashes) are now fixed so I
can run these specs again and adjust the specs to match the new scoring
algorithm.

At the same time I took the opportunity to make things a little less
""noisy"" and more compact by using the %w() syntax for arrays of strings.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 03:31:13,https://api.github.com/repos/wincent/command-t/git/commits/10632b05d6211090e275a5d9f52a659b47008321,10632b05d6211090e275a5d9f52a659b47008321,"Address unintuitive ""do"" result described in commit 2549efe

By accentuating the drop-off produced by increasing distance from last
match, we do just enough to fix the unintuitive result for search string
""do"" and paths:

  doc/command-t.txt
  TODO

Now they are ranked in the order shown.

In general this steeper drop-off should encourage users to focus more on
characters immediately after path separators and other ""special""
characters.

Note that the distance is from the last matched character, not from the
last special char, so the ""x"" in this path

   foo/bar/baz/bax
   ^             ^

Given a match far behind at ""f"", is scored very lowly (ie. as being 14
characters from the last match at ""f"", not 3 characters from the
previous ""special"" at ""/"").

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-11 03:19:08,https://api.github.com/repos/wincent/command-t/git/commits/cd9d4e5ee47f2a513dadf0a066661f39b54e2625,cd9d4e5ee47f2a513dadf0a066661f39b54e2625,"Tweak max-score-per-char calculation

Previously early matches always won. ie. given files:

  doc/command-t.txt
  TODO

A search for ""d"" would always rank the first path more highly (with a
score of 1.0, actually, which was never really intended). This was
because the max score per char was calculated as 1 / abbrev_len.

We recently changed that to 1 / str_len. This was necessary to ensure
that given two matching paths and all else being equal, the shortest
path should win; eg. searching for ""art"":

  articles.rb
  articles_controller.rb

The first path should win over the former. In practice things often
turned out this way because both of these would score a perfect score of
1.0 under the old algorithm, and then alphabetical sorting would take
care of the rest. Under the new algorithm we guarantee that the shorter
match wins.

This however, produced unexpected results in the case of the initial
example; now we have the scores for ""d"" inverted:

  TODO
  doc/command-t.txt

In fact, even searching for ""do"" maintains that ordering.

Evidently some tweaks are required. This commit gets at least the ""d""
case tuned to where we want it, although the ""do"" case still remains to
be done.

Let the two methods of determing max score per character be called
""method 1"" and ""method 2"".

Method 1: as the number of characters in the search string increases
their importance diminishes

Method 2: the number of characters in the search string is irrelevant
and each character is always worth the same; it is the length of the
path which causes max score per character to change

So, in reality, paths never change length, they are fixed inputs, but we
will see the number of chars in the search string growing.

We take the average of ""method 1"" and ""method 2"" and use that as the max
score per char. In this way at small character counts, method 1 is
dominant -- this solves our unintuitive result for ""d"" -- but as the
user types more characters method 2 soon becomes more dominant. I
believe this will give us more intuitive results at longer search string
lengths.

As I said, the ""do"" problem remains to be solved.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 18:00:49,https://api.github.com/repos/wincent/command-t/git/commits/5b423c7c3e2dfa672a7152d95a936d1738d6f390,5b423c7c3e2dfa672a7152d95a936d1738d6f390,"Switch to RSpec 2, RR, Bundler

I've been seeing suspicious segfaults during spec suite runs and had
noticed that they mostly occurred when calling the ""paths"" method on
a scanner instance.

As this particular call is mocked or stubbed, I wondered if it might be
fixed by changing to another mocking framework. That is what this commit
does.

The easiest way I know to do this and have full control over the
versions involved is to use Bundler, so I'm switching to that in this
commit too.

Note that it doesn't actually fix the segfaults. Further investigation
shows that it has nothing to do with mocking/stubbing; the common
trigger is literally _any_ use of rb_funcall in the extension at all.

I suspect some mismatch between the version of Ruby used in the spec
environment and the version used at runtime from inside Vim, because the
latter works perfectly.

So, even though this switch doesn't fix the problem it set out to, I am
going to keep it as it brings us a nicer mocking/stubbing syntax.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 17:17:35,https://api.github.com/repos/wincent/command-t/git/commits/90f3d9ceeb6d5554e5287093cda63c212753dc65,90f3d9ceeb6d5554e5287093cda63c212753dc65,"Make literal doubles look like doubles

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 17:17:06,https://api.github.com/repos/wincent/command-t/git/commits/acbc7d0ad2d4c19fdc86a893bdca97294f921151,acbc7d0ad2d4c19fdc86a893bdca97294f921151,"Add ruby_inspect macro for debugging

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 16:42:53,https://api.github.com/repos/wincent/command-t/git/commits/6264eed4648c3bee8e637889ae1b849934146ea1,6264eed4648c3bee8e637889ae1b849934146ea1,"Drop matchinfo_new function in favor of stack-based allocation

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 16:35:38,https://api.github.com/repos/wincent/command-t/git/commits/08663d93de24ac86cf2a2f864cd9ba294410fa82,08663d93de24ac86cf2a2f864cd9ba294410fa82,"Remove garbage collection book-keeping

After the refactoring, we no longer have to worry about a Ruby exception
being raised after allocating storage for the matchinfo_t struct. The
only method which might conceivably raise is the
CommandT_option_from_hash function, and that is called before
allocating the struct.

In fact, in a subsequent commit we can just place the struct on the
stack and avoid allocation entirely.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 16:28:08,https://api.github.com/repos/wincent/command-t/git/commits/649b3019ec1f0ca00400b9e795aa8f63bb0bb575,649b3019ec1f0ca00400b9e795aa8f63bb0bb575,"Whitespace fix

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 16:16:47,https://api.github.com/repos/wincent/command-t/git/commits/618ffb6ac97f5e0c5ea6b2c2c380f8b168e223f1,618ffb6ac97f5e0c5ea6b2c2c380f8b168e223f1,"Roll best_match function into initialization method

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 10:12:02,https://api.github.com/repos/wincent/command-t/git/commits/41127bc36a29d7d2676b0a89260ae73dd239037c,41127bc36a29d7d2676b0a89260ae73dd239037c,"Drop unnecessary ':each'

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 10:11:03,https://api.github.com/repos/wincent/command-t/git/commits/226cda818aa5d9370c59046b19ba563b0d5542b9,226cda818aa5d9370c59046b19ba563b0d5542b9,"Clean up and augment Match class specs

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 10:09:36,https://api.github.com/repos/wincent/command-t/git/commits/2d3cc08e7152fbb76b4cdc95559b2cd08471e422,2d3cc08e7152fbb76b4cdc95559b2cd08471e422,"Tweaks to handling of zero-length search strings

Now we return a score of 1.0 for zero length search strings. (Previously
we relied on having an empty ""offsets"" array to detect this in the
""matches?"" method, but we no longer have that array.)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-10 00:02:31,https://api.github.com/repos/wincent/command-t/git/commits/6d1de6a78a6e14e42eb5af3a674a25edd81ff528,6d1de6a78a6e14e42eb5af3a674a25edd81ff528,"Make spec files individually runnable

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 20:17:28,https://api.github.com/repos/wincent/command-t/git/commits/fe2a38689a8d504b35a77ee2aa5c2d2ee7ade1b2,fe2a38689a8d504b35a77ee2aa5c2d2ee7ade1b2,"Invert letter weighting basis

This drives scores lower in general, but makes it so that results which
would otherwise tie end up favoring the shorter match. In this way a
search of ""art"" will result in:

  app/models/article.rb

Scoring higher than:

  app/controllers/articles_controller.rb

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 20:10:07,https://api.github.com/repos/wincent/command-t/git/commits/bd84d094a4f844f9879a1d8222b03a3ac969c771,bd84d094a4f844f9879a1d8222b03a3ac969c771,"Correctly propagate score while recursing

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 19:48:01,https://api.github.com/repos/wincent/command-t/git/commits/7b02415ba067975f4c19b837a3ae5282570fd925,7b02415ba067975f4c19b837a3ae5282570fd925,"Fix various bugs in new scoring algorithm

These were book-keeping details that were left out in the conversion.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 18:33:49,https://api.github.com/repos/wincent/command-t/git/commits/2eb44c98f354b93df41a8ae68cd53be414f3b07a,2eb44c98f354b93df41a8ae68cd53be414f3b07a,"Convert 'score' method into a simple attribute reader

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 18:31:51,https://api.github.com/repos/wincent/command-t/git/commits/e4465acc273631bbe0dde4d11aa5e43d34d7091c,e4465acc273631bbe0dde4d11aa5e43d34d7091c,"Swap in new algorithm

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 17:49:14,https://api.github.com/repos/wincent/command-t/git/commits/33c736d04f2ab89f456590bd80ff0dd07b2927fa,33c736d04f2ab89f456590bd80ff0dd07b2927fa,"Add scoring to recursive methods

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 17:19:37,https://api.github.com/repos/wincent/command-t/git/commits/28e96de0ae68156b63c87032d8308fd9a670817f,28e96de0ae68156b63c87032d8308fd9a670817f,"Add base functions for obtaining ""best score"" via recursion

As noted in this ticket:

  https://wincent.com/issues/1598

Search results might be sorted in a more intuitive order if instead of
using a naive left-to-right scoring algorithm, we consider other
possible ways of matching and pick the one that yields the best score.

The basic algorithm is this: after finding a matching letter, bump the
""cursor"" one character to the right and re-try matching via recursion to
see if a better score is produced.

In this way we scan all possible matchings and the one with the best
score ends up ""bubbling up"" out of the recursion.

It remains to be seen whether this will have acceptable performance, but
I want to try it out.

Before this can actually be used I have to insert the actual scoring
algorithm; this is just the code required to implement the recursion
itself.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 16:24:39,https://api.github.com/repos/wincent/command-t/git/commits/dd36e226ac485e1aef3d04d7ff36f98c7cb8f2cc,dd36e226ac485e1aef3d04d7ff36f98c7cb8f2cc,"Remove unnecessary conditional check

If we are looking for ""x"" and find ""x"" then we evidently weren't doing a
dot search, so setting dot_search to 0 is correct.

And if we are looking for ""."" and find ""."" then our dot search is over,
so setting dot_search to 0 is also correct.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 16:18:26,https://api.github.com/repos/wincent/command-t/git/commits/646e3f484f38e5d185b44c2ae66dae1f31786406,646e3f484f38e5d185b44c2ae66dae1f31786406,"Rename some variables to make dot-file logic clearer

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 14:45:34,https://api.github.com/repos/wincent/command-t/git/commits/924d5379deba0e3b7a440fe213552fca95c34f66,924d5379deba0e3b7a440fe213552fca95c34f66,"Drop unnecessary parens

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-07-09 14:43:44,https://api.github.com/repos/wincent/command-t/git/commits/4c9a1af3de582125de02052ab0b94ffba04243db,4c9a1af3de582125de02052ab0b94ffba04243db,"Combine two conditionals to avoid repetition

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-06-10 10:06:34,https://api.github.com/repos/wincent/command-t/git/commits/67858b126153d9fc83e0cb2681a389c299992a69,67858b126153d9fc83e0cb2681a389c299992a69,"Update docs for 0.7 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-06-02 16:33:49,https://api.github.com/repos/wincent/command-t/git/commits/9e04a1298e8b6dbf254f91d1d96fe109bcc84264,9e04a1298e8b6dbf254f91d1d96fe109bcc84264,"Doc: mention ""path-centric"" rather than ""filename-centric"" design

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-18 07:38:19,https://api.github.com/repos/wincent/command-t/git/commits/5a2be397c1b27bbf597a25cab382e95561eaf2af,5a2be397c1b27bbf597a25cab382e95561eaf2af,"Documentation updates

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-18 07:11:36,https://api.github.com/repos/wincent/command-t/git/commits/ccb4fa66cdf5b1508482805863d16bc8773c2d76,ccb4fa66cdf5b1508482805863d16bc8773c2d76,"Mock VIM calls to get all specs passing again

Recent commits (starting with f314c1e) changed the design of the Scanner
class, such that rather than performing filename globbing internally for
the purposes of exclusion, it ""shelled out"" back to VIM itself so that
it could use VIM's ""expand()"" function and thus handle a wider range of
exclusion patterns in the 'wildignore' setting.

This, of course, broke the Scanner specs, and the Finder specs too,
because the specs were always intended to be run in isolation from VIM,
and in fact there _is_ no straightfoward way of running them in any
other fashion.

So here we use mocking and stubbing to get the specs passing again when
running in isolation outside of the context of VIM. Later on will be
adding ""integration"" tests which can be run from inside VIM itself to
make sure that things actually work as expected.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-18 06:37:35,https://api.github.com/repos/wincent/command-t/git/commits/96b77c43a7f188a4b5ecb98b93237bed3787f650,96b77c43a7f188a4b5ecb98b93237bed3787f650,"Fix NameError in ""rake spec""

This error was being thrown when running ""rake spec"", but not when
running ""spec spec"", seeing as the former is effectively running the
specs in reverse order due to the --reverse option in the spec.opts
file.

Originally reported here:

  http://github.com/novas0x2a/Command-T/commit/235a7d722c5f663f483101e6cf86d59a54c794da

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
novas0x2a,2010-05-11 18:55:35,https://api.github.com/repos/wincent/command-t/git/commits/9d449bde15a011c6843d047cf484ae4958e7ccb0,9d449bde15a011c6843d047cf484ae4958e7ccb0,"Make sure entries for """" or ""."" are alpha order

Dir entries are returned in file-system-dependent order. Extract a
qsort comp function for alpha sort, and use it.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
novas0x2a,2010-05-11 19:05:54,https://api.github.com/repos/wincent/command-t/git/commits/2e69b53bcb344e8d9584c7ce004a28c4ee23eb04,2e69b53bcb344e8d9584c7ce004a28c4ee23eb04,"Make scanner tests resistant to order changes

These scanner tests don't care about order- they only care that the proper
entries are returned (order is tested elsewhere). Sorting by score changes
the order, but since we don't care, sort the expected and
actual arrays before comparison.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-13 08:09:09,https://api.github.com/repos/wincent/command-t/git/commits/f5741dc988ef3686f00d149281ce3da0f05bd8e2,f5741dc988ef3686f00d149281ce3da0f05bd8e2,"Consistency fixes

Always use the form ""VIM::method_name"" for accessing methods in the VIM
modules, to match the convention in VIM's Ruby documentation (:h ruby).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-13 06:20:33,https://api.github.com/repos/wincent/command-t/git/commits/0337d5f450f1cde51c729320e67619ebba7725be,0337d5f450f1cde51c729320e67619ebba7725be,"More robust escaping for consumption by expand()

Suggested by Mike Lundy <mike@fluffypenguin.org> here:

  http://github.com/wincent/Command-T/commit/a2b713d49bfb22e4a2afd17115835a5e7f00dd97#comments

This is more robust than the previous manual escaping, as fnameescape()
knows about platform-specific wildcards and special characeters,
apparently.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-12 18:19:31,https://api.github.com/repos/wincent/command-t/git/commits/a2b713d49bfb22e4a2afd17115835a5e7f00dd97,a2b713d49bfb22e4a2afd17115835a5e7f00dd97,"Handle ""wildcard"" characters in filenames

The recent change (commit f314c1e) to get VIM to handle exclusion
checking for us via the expand() function will choke on paths with
""special"" wildcard characters in them (see 'h: wildcards' for a
list).

For example, a path like:

  /foo/bar/notes [Foo Support #abcdef-058505].txt

Will cause en E16 range error when fed into expand() due to the ""["" and
""]"" characters which are interpreted as delimiting an invalid range.

So we escape:

  ?
  * (and by extension, **)
  [
  ]
  `

Unfortunately, the docs say ""Which wildcards are supported depends on
the system"", and lists ""the common ones"". We can only hope that the
above list covers most cases and will have to handle any breakage which
arises on specific platforms in the future.

Note also, that in this commit we switch form expand() to glob(),
because glob() takes a smaller range of ""special"" characters (just he
wildcards) and so is less likely to choke on paths with special
characters in them.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-12 16:10:44,https://api.github.com/repos/wincent/command-t/git/commits/1df3167609c48ec5935051d7e4491677a58ca678,1df3167609c48ec5935051d7e4491677a58ca678,"Replace Pathname-based code with faster inline solution

On very large test cases (500,000 max files, 50 max depth), the
performance of the code using Pathname is noticeably slower than the old
code.

This commit replaces the Pathname-based logic with a faster inline
solution.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-11 19:56:57,https://api.github.com/repos/wincent/command-t/git/commits/bbf296b775d5d9220fae28a34111117312bfcaa7,bbf296b775d5d9220fae28a34111117312bfcaa7,"Bring wildignore behavior closer to VIM's own behaviour

In commit f314c1e6 we tried to make Command-T react to the 'wildignore'
setting in way that more closely matches VIM's own behaviour by
using the builtin expand() function which takes into account
'wildignore'.

While this works quite well, there are still some discrepancies from
VIM's actual behaviour.

For example, while patterns like this work as expected with no
surprises:

  *.o
  .git
  **/build

A pattern like this:

  vendor/rails/**

Will work differently in Command-T than it does in the rest of VIM.
Specifically, if I type this in VIM:

  :e vendor/rails/<tab>

Then VIM's autocomplete won't allow me to drill down into the directory
because it is excluded by the 'wildignore' setting.

Command-T, on the other hand, will allow me to see the contents of that
directory. This is because internally, at the time the file names are
checked, they are almost always absolute paths, because the default
starting directory is "":pwd"" which is itself provided by VIM as an
absolute path. As such, VIM's expand() function checks to see if:

  /absolute/path/to/vendor/rails/

Matches against the 'wildignore' pattern of:

  vendor/rails/**

And decides that it does not match.

As a work around, a user could specify a pattern like this:

  **/vendor/rails/**

But it is a bit ugly because it doesn't fit well with the behaviour of
VIM itself.

The fix, then, is to not pass absolute paths into the expand() function,
but to pass paths relative to the starting directory.

In 99% of cases, the starting directory is the "":pwd"", so the behaviour
should then be identical to VIM's own behaviour.

In the cases where the user has passed in an override for the starting
directory (either relative or absolute), then the behaviour will diverge
slightly from VIM's while still hopefully being consistent and intuitive
from the user's perspective.

For example, if :pwd is the HOME directory and the user invokes
Command-T with:

  :CommandT path/to/some/rails/project

Then a 'wildignore' which includes this pattern:

  vendor/rails/**

Will exclude all files under:

  path/to/some/rails/prokect/vendor/rails/

Which is probably what the user expects. For comparison, typing:

  :e path/to/some/rails/project/vendor/rails/<tab>

Will autocomplete despite the 'wildignore' settings, which is consistent
with the standard VIM behaviour as described previously.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-11 16:54:18,https://api.github.com/repos/wincent/command-t/git/commits/b0438df7b286aec29660dbf161dd29e1c969b03b,b0438df7b286aec29660dbf161dd29e1c969b03b,"Use more conservative language standard setting

Previously we used ""gnu99"" as the C language standard. At least one
user, however, has reported about getting warnings with this setting and
having to manually edit the Makefile to set it to ""c99"":

  http://amix.dk/blog/post/19501

So, seeing as we don't use any GNU extensions, try switching the std
setting to ""c99"" and see if that makes any difference for such users.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
novas0x2a,2010-05-11 00:29:00,https://api.github.com/repos/wincent/command-t/git/commits/2ac56d3436a3abe5e4d75ab87c95f1c603a0561a,2ac56d3436a3abe5e4d75ab87c95f1c603a0561a,"Ignore built extension lib

This makes submodules happy.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-05-11 16:43:45,https://api.github.com/repos/wincent/command-t/git/commits/2a2f71e77f19a370e1e4a6257528744e2e511859,2a2f71e77f19a370e1e4a6257528744e2e511859,"Drop unnecessary parentheses

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
novas0x2a,2010-05-11 09:24:53,https://api.github.com/repos/wincent/command-t/git/commits/f314c1e671b9ea655b635aef038d409bee0976b7,f314c1e671b9ea655b635aef038d409bee0976b7,"make Scanner.path_excluded use wildignore

fnmatch is a lossy replacement for vim's internal wildcard match. I
reimplemented it by using wildignore directly (via expand) to perform the
exclusion.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-29 07:06:49,https://api.github.com/repos/wincent/command-t/git/commits/b7d6945531d6ab18f591224843285ab710fbcfd8,b7d6945531d6ab18f591224843285ab710fbcfd8,"Add docs for "":CommandT some/other/path""

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-29 06:46:21,https://api.github.com/repos/wincent/command-t/git/commits/96f329b744c2e298292e34548d33bcf0bcba391e,96f329b744c2e298292e34548d33bcf0bcba391e,"Update docs for 0.6 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-29 06:45:05,https://api.github.com/repos/wincent/command-t/git/commits/8c0511c4453f0331d8f64461f08a1e06b13949e5,8c0511c4453f0331d8f64461f08a1e06b13949e5,"doc: mention :CommandTFlush in the OPTIONS section

Make it clear to users that changes in the .vimrc will be picked up on
next run, and immediate changes (via :let) will only be picked up if you
do a :CommandTFlush.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-29 06:41:06,https://api.github.com/repos/wincent/command-t/git/commits/07f1d7cb26257aceb6e400e6e400d31e28381a5a,07f1d7cb26257aceb6e400e6e400d31e28381a5a,"Handle non-existent directories passed to :CommandT

Gracefully handle non-existent directories passed in via "":CommandT
path"".

Note that we catch the Errno:ENOENT exception only when the match window
is shown, because we're interested in advising the user when they enter
a dud path. (In contrast, we let Errno::ENOENT exceptions at other times
just bubble up, as may be the case if the user has something funky with
their filesystem and stuff appears in the listing but later claims to
not exist.)

This closes feature request #1522:

  https://wincent.com/issues/1522

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-28 21:18:46,https://api.github.com/repos/wincent/command-t/git/commits/a8242b498c4af0cac6bfb84f228b3dae3b0b95d8,a8242b498c4af0cac6bfb84f228b3dae3b0b95d8,"Correctly handle operation from ""/"" directory

Prior to this commit, operation from the root directory was broken
because given paths like:

  /foo
  /bar

These were scanned as:

  oo
  ar

Instead of:

  foo
  bar

The cause is actually the trailing ""/"" in ""/"". The same bug would occur
if @path were ever something like ""/foo/"" or ""/bar/"" rather than ""/foo""
or ""/bar"" (although in practice this never occurs because the callers
always pass in paths without trailing slashes).

For example, given a directory ""/foo"" and file ""/foo/bar"", our prefix
length is 4, and ""/foo/bar""[5..-1] yields the desired ""bar"".

If directory is passed in as ""/foo/"" then our prefix length ends up
being 5 and we would incorrectly do ""/foo/bar""[6..-1], which would yield
""ar"".

Likewise directory ""/"" and file ""/foo"" yields prefix length 1, and we do
""/foo""[2..-1] and get ""oo"".

Stripping the trailing slash before calculating the prefix length fixes
both cases. ""/"" becomes """", our prefix length is now 1, and our string
""/foo""[1..-1] yields the desired ""foo"".

This commit fixes the bug mentioned in commit 38837a8.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-28 21:03:00,https://api.github.com/repos/wincent/command-t/git/commits/38837a898472d8d13f5d32c040539215ed5a8894,38837a898472d8d13f5d32c040539215ed5a8894,"Add optional starting directory param to :CommandT

This fulfills:

  https://wincent.com/issues/1522

As noted in that ticket, looks like it has uncovered a latent bug
elsewhere in the plug-in when the starting path is just ""/"".

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-19 19:11:15,https://api.github.com/repos/wincent/command-t/git/commits/2c2ca9a53ec7a0fb72d784432921491716a5a8a9,2c2ca9a53ec7a0fb72d784432921491716a5a8a9,"doc: update link to screencasts

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-14 15:43:30,https://api.github.com/repos/wincent/command-t/git/commits/0c372a16c6f49a777603b75100a28462e26ae094,0c372a16c6f49a777603b75100a28462e26ae094,"Add ""trouble-shooting"" label to help and reference it

The Stub object will only be initiated if the load path is correctly set
up, so if we get that far we can basically assume that the problem lies
somewhere with the C extension.

So instead of complaining about not being able to load ""the necessary
modules"", explicitly mention the C extension and point people at the
relevant section on the documentation.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-14 15:43:12,https://api.github.com/repos/wincent/command-t/git/commits/5beef36788a85da828a1fc94ad3043c0fef7fc0f,5beef36788a85da828a1fc94ad3043c0fef7fc0f,"doc: fix spelling

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-11 18:34:09,https://api.github.com/repos/wincent/command-t/git/commits/31b7c05c6df8142f4d67ff33cb4098a299f91c9e,31b7c05c6df8142f4d67ff33cb4098a299f91c9e,"Update docs for 0.5.1 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-11 13:05:40,https://api.github.com/repos/wincent/command-t/git/commits/e516227cbe1234b81af0f1dee3528ccd2b922574,e516227cbe1234b81af0f1dee3528ccd2b922574,"Ruby 1.9 fix (String#to_a no longer exists in 1.9)

Reported by Michael Henry.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-10 11:46:14,https://api.github.com/repos/wincent/command-t/git/commits/45cc254f0815824038138f2cccf5f2706ad23f49,45cc254f0815824038138f2cccf5f2706ad23f49,"doc: add Windows-specific installation information

Carl Boldoc wrote in with some tips on getting the plug-in installed on
Windows as easily as possible, so I've worked the relevant links into
the REQUIREMENTS and INSTALLATION sections of the documentation, along
with a general reworking of the same in order to make the instructions
read as clearly as possible for users of all platforms.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-03 22:02:48,https://api.github.com/repos/wincent/command-t/git/commits/841e4beef60099bde7934eeac923e44ea76b13ac,841e4beef60099bde7934eeac923e44ea76b13ac,"doc: rationalize help links

Rather than using markers like ""command-t-max-height"" use the literal
name of the option (eg. ""g:CommandTMaxHeight"") to make finding help on
a specific setting more straightforward, and also enable links like
""|g:CommandTMaxHeight|"" within the documentation itself to work.

We also add markers for options which didn't previously have them.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-03 21:38:01,https://api.github.com/repos/wincent/command-t/git/commits/3ef4ed439ed1a15f544f7882aca96aa2a8b27b63,3ef4ed439ed1a15f544f7882aca96aa2a8b27b63,"Update docs for 0.5 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-03 20:40:59,https://api.github.com/repos/wincent/command-t/git/commits/826c0acc018c1b580eeb97c25b5f1d60f370b8c8,826c0acc018c1b580eeb97c25b5f1d60f370b8c8,"Check for overrides when setting up mappings

Apart from providing a degree of customization which users could
potentially find quite pleasing, this definitively addresses problems
wherein the default mappings don't work on some terminals by providing
users with a means to replace such mappings with working alternatives.

See:

  https://wincent.com/issues/1531

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-03 20:34:18,https://api.github.com/repos/wincent/command-t/git/commits/32035a717d0d6908e8a853a414ba757ab9881f45,32035a717d0d6908e8a853a414ba757ab9881f45,"Use hash to specify mappings

This is a refactoring in preparation for a subsequent commit in which
we will provide a means for users to override the default mappings. The
hash structure allows us to conveniently process a bunch of different
mappings -- some of which are unique and others which are multiple --
and issue the call to the ""map"" method in a single place.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-02 18:32:32,https://api.github.com/repos/wincent/command-t/git/commits/5ade684f0e53976e167d3316176ed0fe2542e4dd,5ade684f0e53976e167d3316176ed0fe2542e4dd,"Fix typo in documentation

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-04-02 17:34:06,https://api.github.com/repos/wincent/command-t/git/commits/9fe69005adc29597f6c88bdea78e4c716eaf05dd,9fe69005adc29597f6c88bdea78e4c716eaf05dd,"Don't map <Esc> for some terminal types

As vt100 and xterm terminals send the arrow keys as sequences like
<Esc>OA, VIM gets confused by bindings for the <Esc> key for those
terminals (it actually interprets the arrow keys as sequences of
commands).

For now we avoid the problem on those terminals by not mapping <Esc> at
all, but the long-term solution will be to provide a means for users to
override the default mappings.

See:

  https://wincent.com/issues/1531

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-30 16:28:24,https://api.github.com/repos/wincent/command-t/git/commits/eb167abdbf7ec1360492fca9cfd4559394c409c7,eb167abdbf7ec1360492fca9cfd4559394c409c7,"Don't abort on hitting max depth

We incorrectly aborted all scanning rather than just the recursion into
the next level on hitting max depth.

See:

  https://wincent.com/issues/1527#comment_5499

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-30 00:14:17,https://api.github.com/repos/wincent/command-t/git/commits/dc0e950f661da94e9361e968da954c85f5332c9d,dc0e950f661da94e9361e968da954c85f5332c9d,"Drop ""pressed"" from some method names

Favor imperative verbs rather than past participle.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-30 00:11:00,https://api.github.com/repos/wincent/command-t/git/commits/e76111176132cd7e0f4ed673dd0fe2e65dbca7c3,e76111176132cd7e0f4ed673dd0fe2e65dbca7c3,"Settings: auto-save upon initialization

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 22:56:09,https://api.github.com/repos/wincent/command-t/git/commits/909bf09ddb742e1bae38236c15ea2a78266d7a2e,909bf09ddb742e1bae38236c15ea2a78266d7a2e,"Remove ""delete excess lines"" loop

The ""clear"" at the beginning of this method empties the buffer
completely, so there will never be any lines to delete.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 18:47:34,https://api.github.com/repos/wincent/command-t/git/commits/011a3a40e1f0aa6dbf64bac6aeb4099f4ae00f41,011a3a40e1f0aa6dbf64bac6aeb4099f4ae00f41,"Remove explicit check that options param is a hash

Previously we had an explicit check that the supplied options parameter
was a hash, raising an exception with the message ""options not a hash"".

This check is unnecessary because:

  - the only user of the classes involved (Match and Matcher) is the
    Controller class itself, and we can guarantee that the correct
    option type is always passed
  - the classes involved are not public API so we don't have to worry
    about the input being ""untrustworthy""
  - even if somebody does improperly access the API and pass in a
    non-hash options parameter, an exception will be raised naturally
    anyway when we try to send a message:

      NoMethodError: undefined method `has_key?'

This change might also fix the following issue where the ""options not a
hash"" exception was being raised at runtime, but not in the IRB console,
on one user's Ruby 1.9.1 install. I am not sure of the cause (perhaps
some problem with header files), but removing the check can only bring
us one step closer to solving the problem:

  https://wincent.com/issues/1520

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 18:30:24,https://api.github.com/repos/wincent/command-t/git/commits/bd4be29fb492777ca05ed071ce281c48c8d30418,bd4be29fb492777ca05ed071ce281c48c8d30418,"Re-evaluate configuration settings on :CommandTFlush

This allows the user to manipulate the various settings without having
to restart VIM for them to have effect.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:45:44,https://api.github.com/repos/wincent/command-t/git/commits/eab815c17f7c740181a8a58e3e89809098d004f5,eab815c17f7c740181a8a58e3e89809098d004f5,"Update docs for 0.4 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:44:37,https://api.github.com/repos/wincent/command-t/git/commits/13f7e1d920878b383b73a41b9d3bf02062cc4cb9,13f7e1d920878b383b73a41b9d3bf02062cc4cb9,"Force rake tasks to abort if external commands fail

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:40:21,https://api.github.com/repos/wincent/command-t/git/commits/9f6d6f889dca2fce98d671c560720658c52a6edf,9f6d6f889dca2fce98d671c560720658c52a6edf,"Run ""check_tag"" task as part of ""prerelease"" task

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:39:39,https://api.github.com/repos/wincent/command-t/git/commits/2695d3517eaad9c8245014fd0a71ed4e41439279,2695d3517eaad9c8245014fd0a71ed4e41439279,"Add ""check_tag"" Rake task

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:35:34,https://api.github.com/repos/wincent/command-t/git/commits/6886a71e17978faae9bc1e03aad8618c0fdf6506,6886a71e17978faae9bc1e03aad8618c0fdf6506,"Run ""make"" as part of ""prerelease"" task

Make sure that the vimball archive can be created.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:34:51,https://api.github.com/repos/wincent/command-t/git/commits/211aa30368e5b4f791d91a8e3cef0aade17565e1,211aa30368e5b4f791d91a8e3cef0aade17565e1,"Add ""make"" Rake task

This just calls ""make"", thus creating the vimball archive.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:33:28,https://api.github.com/repos/wincent/command-t/git/commits/3f4b1eb96e501ee48be0a8861c9bf01a6c27bfae,3f4b1eb96e501ee48be0a8861c9bf01a6c27bfae,"Add ""prerelease"" Rake task

This task checks that compilation works with all installed multiruby
versions, and that the spec suite passes under all such versions.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:31:52,https://api.github.com/repos/wincent/command-t/git/commits/9419576ca05e03a3fe93d0fe7033def9e3f243e7,9419576ca05e03a3fe93d0fe7033def9e3f243e7,"Add ""multispec"" Rake test

This just shells out to the ""multi-spec.sh"" script.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:30:50,https://api.github.com/repos/wincent/command-t/git/commits/b4ae309e7b1f96696a8003ad5a3a5e52e2dc8a6d,b4ae309e7b1f96696a8003ad5a3a5e52e2dc8a6d,"Add ""compile"" Rake task

This just shells out to the compile-test.sh script.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 10:29:15,https://api.github.com/repos/wincent/command-t/git/commits/f2eb8528d6b471eb771934a53719a0c32393967c,f2eb8528d6b471eb771934a53719a0c32393967c,"Set 'spec' as default Rake task

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 09:08:53,https://api.github.com/repos/wincent/command-t/git/commits/bc0739c2f8bc4f3aa1e2e5b04439805c2a881e26,bc0739c2f8bc4f3aa1e2e5b04439805c2a881e26,"Rename Base class to Finder

The name ""Base"" was always a little too generic for what this class
does. Switch to ""Finder"" as it is more descriptive of the class's actual
function.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-27 08:59:24,https://api.github.com/repos/wincent/command-t/git/commits/9f316dc41ef4a202c5ef5b5082b7a39537e6b072,9f316dc41ef4a202c5ef5b5082b7a39537e6b072,"Merge Ruby and Base classes up into Scanner class

Commit 305f59e removed the unused Find class, leaving only the
Ruby scanner class. Effectively the inheritance hierarchy went from:

  Scanner (module)
    Base
      Ruby
      Find

To:

  Scanner (module)
    Base
      Ruby

This commit simplifies it further to:

  Scanner (class)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-26 20:00:33,https://api.github.com/repos/wincent/command-t/git/commits/8d7cc71d9f1234388726a9d62b4fca4e87e98be2,8d7cc71d9f1234388726a9d62b4fca4e87e98be2,"doc: fix indentation

See:

  https://wincent.com/issues/1519

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-26 19:59:59,https://api.github.com/repos/wincent/command-t/git/commits/9f823193c21c5bc9845afab2b0c45d099fe2a74f,9f823193c21c5bc9845afab2b0c45d099fe2a74f,"doc: explain splits and the effect of 'nohidden'

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
zakj,2010-03-25 07:42:22,https://api.github.com/repos/wincent/command-t/git/commits/af0362e6bcd30380eca44122c3d28c286c814e7e,af0362e6bcd30380eca44122c3d28c286c814e7e,"Add ""g:CommandTMatchWindowAtTop"" setting

The best match is usually what I'm interested in, but as I'm narrowing
down the results, its location on my screen keeps shifting downward
(since it appears at the top of a bottom-anchored window). This commit
provides a g:CommandTMatchWindowAtTop boolean option, defaulting to false,
which makes the match window appear at the top of the screen, thus
keeping the best match visible at the top line.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-24 22:48:19,https://api.github.com/repos/wincent/command-t/git/commits/49faa594656a9802bfedcc4a50ef6a02292d0a7a,49faa594656a9802bfedcc4a50ef6a02292d0a7a,"Update documentation for 0.3 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-24 22:27:25,https://api.github.com/repos/wincent/command-t/git/commits/13a199983194ad778dfd1ed91e8aed7ca9dad8b4,13a199983194ad778dfd1ed91e8aed7ca9dad8b4,"Open in split if opening normally would fail

If the user has 'hidden' turned off and the current window has
modifications, then opening with the standard "":edit"" command will fail
with an error:

  E37: No write since last change (add ! to override)

So, in these cases, fall back to opening in a split, which should work
without warnings or errors.

See:

  https://wincent.com/issues/1514

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
GGLucas,2010-03-24 21:31:29,https://api.github.com/repos/wincent/command-t/git/commits/eaa312d4e4800021f3ceeac69261549ef4e15c0b,eaa312d4e4800021f3ceeac69261549ef4e15c0b,"add g:CommandTMaxHeight option to limit window height

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-24 20:26:31,https://api.github.com/repos/wincent/command-t/git/commits/f75cc4fb8246580d96b37ab224214977c4e10684,f75cc4fb8246580d96b37ab224214977c4e10684,"Remove multiruby functionality from Rakefile

The approach used in the Rakefile was never going to work for running
the specs in conjunction with a C Ruby extension, because the extension
would need to be rebuilt between each run of ""spec spec"" on different
versions.

As there is no practical way of doing this, the simpler solution is just
to create a shell script which does the builds and runs ""spec spec""
after each one. This was added in the last commit, so the stuff in the
Rakefile is officially redundant now.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-24 20:25:40,https://api.github.com/repos/wincent/command-t/git/commits/06d802d5d2010a62a5cd26ec28cf26ddd84aa7ff,06d802d5d2010a62a5cd26ec28cf26ddd84aa7ff,"Add multispec.sh

This script builds the extension under different versions of Ruby and
then runs the spec suite.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-24 19:57:37,https://api.github.com/repos/wincent/command-t/git/commits/7ae28c4b5b2f5a9f8a0ee229dfbd58708b1da915,7ae28c4b5b2f5a9f8a0ee229dfbd58708b1da915,"Suppress warning when Cursor highlight group not found

I was of the understanding that the Cursor highlight group would exist
in all color schemes seeing as the VIM docs (:help hl-Cursor) mention it
as one of the ""default highlighting groups""; neverthless, it appears
that it is possible for it not to exist, at least according to user
reports:

  https://wincent.com/issues/1513

It's not clear whether this happens when syntax highlighting isn't
enabled, or only with some colorschemes, or only on some terminals.
Regardless of the cause, make sure that any ""E411: highlight group not
found: Cursor"" errors which might occur don't bubble up to the annoy
the user, and to be doubly cautious, don't even try looking at the
Cursor highlight if syntax highlighting isn't even enable.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-24 19:41:23,https://api.github.com/repos/wincent/command-t/git/commits/305f59e09ead7b0c64b259b953ab0ea63c96d7a3,305f59e09ead7b0c64b259b953ab0ea63c96d7a3,"Remove unused Scanner::Find class

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-24 19:14:52,https://api.github.com/repos/wincent/command-t/git/commits/0387f20d60a4671a490509dc92586fc99dab377a,0387f20d60a4671a490509dc92586fc99dab377a,"Remove autoload calls for compatibilty with Ruby 1.9.1

Given file ""ext.so"" or ""ext.bundle"" (etc) and an ""autoload"" statement
like:

  autoload :Match, 'command-t/ext'

Ruby 1.8.6/1.8.7 will load the extension file but 1.9.1 will raise an
error (1.9.1 requires the full filename, including extension be
specified).

Rather than messing with the autoload statements at runtime (trying to
detect platform and appending the correct file extension), just rip out
all autoloads entirely and replace them with ""requires"".

See:

  https://wincent.com/issues/1512

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-24 17:17:34,https://api.github.com/repos/wincent/command-t/git/commits/d69e50562b79cde487b13d493e1b4365b84af386,d69e50562b79cde487b13d493e1b4365b84af386,"Treat ""list"" setting as window-local rather than global

The ""list"" setting was being incorrectly treated as a global setting
rather than a window-local one. This meant that whatever the value for
the current window at the time Command-T was invoked ended up being
saved and then restored globally afterwards, possibly causing an
incorrect ""list"" setting to be used in other windows.

See:

  https://wincent.com/issues/1515

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 20:40:05,https://api.github.com/repos/wincent/command-t/git/commits/092e83fe5936b23175aa82ecc1910c4420571ea8,092e83fe5936b23175aa82ecc1910c4420571ea8,"Update documentation for 0.2 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 11:03:47,https://api.github.com/repos/wincent/command-t/git/commits/c27394acadccd57d0317aab13664494c6e9d7a8c,c27394acadccd57d0317aab13664494c6e9d7a8c,"Further Windows compatibility enhancements

Taking the idea of commit 0faf825f a little further, we add all of the
paths in the 'runtimepath' list to our Ruby LOAD_PATH. This should
hopefully catch just about every possible installation location on all
platforms.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 10:49:35,https://api.github.com/repos/wincent/command-t/git/commits/0faf825fce7bfc12cd9117b157441c27d1603b47,0faf825fce7bfc12cd9117b157441c27d1603b47,"Windows compatibility enhancement

Instead of assuming a hard-coded path to the VIM runtime files (~/.vim)
consult the '&runtimepath' value at runtime. This should make the
plug-in work better on Windows where the runtime files are likely to be
in some other location such as ""C:\Vim\vimfiles"".

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 10:30:33,https://api.github.com/repos/wincent/command-t/git/commits/46647fab8ee40dff2852e8cd5e95bfde5d81555e,46647fab8ee40dff2852e8cd5e95bfde5d81555e,"Add compile-test.sh

Simple Bash script to see if the extension builds without errors under
different versions of Ruby.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 10:17:55,https://api.github.com/repos/wincent/command-t/git/commits/bd1c00b9bfc431f5bde93ef5f62118f3a981836c,bd1c00b9bfc431f5bde93ef5f62118f3a981836c,"Add Rakefile with spec and multi:spec tasks

At the moment the multi:spec task won't actually succeed because we need
to rebuild the extension prior to testing with each version of Ruby.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 09:36:40,https://api.github.com/repos/wincent/command-t/git/commits/44d0196104cae5ccd82634830520c328d6b437d0,44d0196104cae5ccd82634830520c328d6b437d0,"More Ruby 1.9 compatibility fixes (RFLOAT_VALUE)

See:

  https://wincent.com/issues/1505

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 09:15:14,https://api.github.com/repos/wincent/command-t/git/commits/8ef4f9ad5bda774ccfef951856bd0f7433685ab2,8ef4f9ad5bda774ccfef951856bd0f7433685ab2,"Use wildignore as a basis for excluding paths

See:

  https://wincent.com/issues/1507

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 07:39:31,https://api.github.com/repos/wincent/command-t/git/commits/e0e63e882510f264d2b42d42ca27969b74446e77,e0e63e882510f264d2b42d42ca27969b74446e77,"doc: add link to donations page

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-23 07:36:39,https://api.github.com/repos/wincent/command-t/git/commits/9d8e51b1b2f59054a46a928068abf683d04fae38,9d8e51b1b2f59054a46a928068abf683d04fae38,"Suppress ""mapping already exists"" error at startup

Suppress the error message if a user already has a <Leader>t mapping
defined when the plug-in is loaded.

See:

  https://wincent.com/issues/1508

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-22 22:09:57,https://api.github.com/repos/wincent/command-t/git/commits/fe1e035bfd77a94c52b5dfd2b0cdcd78713d9f73,fe1e035bfd77a94c52b5dfd2b0cdcd78713d9f73,"Compatibility fixes for Ruby 1.8.5

Provide RSTRING_LEN, RSTRING_PTR, RARRAY_LEN and RARRAY_PTR macros for
older versions of Ruby such as 1.8.5 which don't have them.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-22 21:57:31,https://api.github.com/repos/wincent/command-t/git/commits/7bcd9a7fa07cef1f6a906316d9c55798d2b67417,7bcd9a7fa07cef1f6a906316d9c55798d2b67417,"Ruby 1.9 compatibility fix

This should fix compilation on Ruby 1.9. See:

  https://wincent.com/issues/1505

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-22 18:12:24,https://api.github.com/repos/wincent/command-t/git/commits/846737e565f93cf3cddce3ab9996943a38b35c7d,846737e565f93cf3cddce3ab9996943a38b35c7d,"Remove note about Ruby 1.8.7 requirement

As the 1.8.7-only String#each_char method got written away with the
conversion of the performance-critical parts to C, there is no longer
any need to note that 1.8.7 or higher is required. It seems quite likely
that the plug-in will work with some older versions as well.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-22 16:39:54,https://api.github.com/repos/wincent/command-t/git/commits/8c45822e5b144f6ca6d2c99fc3e62340199814b5,8c45822e5b144f6ca6d2c99fc3e62340199814b5,"Add actual vim.org script address to docs

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-22 16:33:32,https://api.github.com/repos/wincent/command-t/git/commits/e663648da7a0836fe2368b909589c05f809b1d2d,e663648da7a0836fe2368b909589c05f809b1d2d,"Update release notes for 0.1 release

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-21 09:59:43,https://api.github.com/repos/wincent/command-t/git/commits/dd532c8a0a54eac71e9b6d154c89afbd9eae7e77,dd532c8a0a54eac71e9b6d154c89afbd9eae7e77,"doc: correct filename in installation instructions

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-09 22:22:49,https://api.github.com/repos/wincent/command-t/git/commits/9288d0b2a69bedebb2cf7bd5e12168376beb75dd,9288d0b2a69bedebb2cf7bd5e12168376beb75dd,"Add note about mapping to Command-T

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-09 18:17:50,https://api.github.com/repos/wincent/command-t/git/commits/6c6dcc65d623c6f9c467297109e6aa87d10135a8,6c6dcc65d623c6f9c467297109e6aa87d10135a8,"Make type-ahead find use case-insensitive comparison

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 21:48:04,https://api.github.com/repos/wincent/command-t/git/commits/0c5b00e7a20c4ed67741001b6f84d4e47261c078,0c5b00e7a20c4ed67741001b6f84d4e47261c078,"Add options for always/never show dot files

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 21:39:34,https://api.github.com/repos/wincent/command-t/git/commits/ba6e90fd436403568fec9d1b6906ce4b9f12c801,ba6e90fd436403568fec9d1b6906ce4b9f12c801,"Make CommandT_option_from_hash do more

This is part of a common pattern: check for an optional options hash,
confirm that it really is a hash, and check for a value.

Encapsulate it all in the one function to make things easier for
callers, so they don't have to worry about validation.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 20:16:26,https://api.github.com/repos/wincent/command-t/git/commits/acfe3a2acb74763f4feaad287f0570a3eac41211,acfe3a2acb74763f4feaad287f0570a3eac41211,"Pass options down to Match.new

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 20:10:56,https://api.github.com/repos/wincent/command-t/git/commits/5854f850b2d1c9a59c908d4fae01c1d1e0681e95,5854f850b2d1c9a59c908d4fae01c1d1e0681e95,"Avoid repetition by using CommandT_option_from_hash

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 19:58:03,https://api.github.com/repos/wincent/command-t/git/commits/b7a67ab7992169f229c5bdad842b41d4e6f2e4ec,b7a67ab7992169f229c5bdad842b41d4e6f2e4ec,"Teach Match.new to accept optional options hash

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 19:49:41,https://api.github.com/repos/wincent/command-t/git/commits/33663dad64efff38d974b8e6a0184e3ca417fdc8,33663dad64efff38d974b8e6a0184e3ca417fdc8,"Move option_from_hash into common file

Move to ext.c/ext.h so that it can be used from both the Match and the
Matcher class implementations.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 19:21:37,https://api.github.com/repos/wincent/command-t/git/commits/3145f0b16e306854fc63fee40fec4ba59a63bc7e,3145f0b16e306854fc63fee40fec4ba59a63bc7e,"Pass dot-file options down to Matcher instance as well

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 18:04:09,https://api.github.com/repos/wincent/command-t/git/commits/5f75a0e16a4c0fae2f5d2e3a206da0c965c10dc4,5f75a0e16a4c0fae2f5d2e3a206da0c965c10dc4,"Add option for scanning dot directories (or not)

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 09:39:41,https://api.github.com/repos/wincent/command-t/git/commits/de05caa22d74e90deaeab485437d172c06948ec6,de05caa22d74e90deaeab485437d172c06948ec6,"Add VIM-level options for max_files and max_depth

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 09:08:59,https://api.github.com/repos/wincent/command-t/git/commits/4a12da53eb9f2b3840c2c2fec6eeef73c9b0e00c,4a12da53eb9f2b3840c2c2fec6eeef73c9b0e00c,"Pass through scanner options via CommandT::Base.new

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 08:57:40,https://api.github.com/repos/wincent/command-t/git/commits/a9fec3c069d281fe34f84ccb79dbbdc013d8cd19,a9fec3c069d281fe34f84ccb79dbbdc013d8cd19,"Pass options through to scanner subclasses

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 08:31:26,https://api.github.com/repos/wincent/command-t/git/commits/4093bb6c909d5d2983d5553e11f511ee5993c2e6,4093bb6c909d5d2983d5553e11f511ee5993c2e6,"Update specs for dot-file changes

Change paths specifed in ""./foo/bar"" format to ""foo/bar"".

This brings the specs into line with actual usage in VIM, where paths
are always specified relative to the current working directory (without
the leading ""./"").

It also fixes some breakage in the specs caused by the recent addition
of dot-file filtering, which treats ""./"" as a dot-file seeing as it is a
path-component starting with a dot.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 08:29:06,https://api.github.com/repos/wincent/command-t/git/commits/0a835c2eb7af3ec22bffdd72092e5ca3e3f16ebd,0a835c2eb7af3ec22bffdd72092e5ca3e3f16ebd,"Add VIM formatter for running specs from inside VIM

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 08:27:30,https://api.github.com/repos/wincent/command-t/git/commits/fd296b486ee967b8706de0439ae1f1c5d0667d46,fd296b486ee967b8706de0439ae1f1c5d0667d46,"Maintain alphabetical sort order if search string is just "".""

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 08:22:04,https://api.github.com/repos/wincent/command-t/git/commits/5e24fd4ab5bfdec72cf6256a04698f2ba0d5142b,5e24fd4ab5bfdec72cf6256a04698f2ba0d5142b,"Don't show dot-files for zero-length search string

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 08:07:08,https://api.github.com/repos/wincent/command-t/git/commits/775f814a1c1d7b520cd5b6dbc23bf508e323f2b1,775f814a1c1d7b520cd5b6dbc23bf508e323f2b1,"Don't show dotfiles unless query includes an appropriate dot

This is still only a partial implementation because it lacks
configuration; ie. the ability to choose from among:

  - never show dot-files
  - always show dot-files
  - only show dot-files if query includes an appropriate dot

In addition to adding configurability, will also need to filter out
dotfiles when the query string is zero-width.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-08 08:05:37,https://api.github.com/repos/wincent/command-t/git/commits/845a8b7db052873825332eb82b95d095df3a55d6,845a8b7db052873825332eb82b95d095df3a55d6,"Don't try opening selection when there are no matches

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 19:24:38,https://api.github.com/repos/wincent/command-t/git/commits/3f14728ec96143e5c0fb9d04683c8f35a06c3228,3f14728ec96143e5c0fb9d04683c8f35a06c3228,"Add a Makefile

This allows us to make a vimball using the mkvimball utility, run the
specs, or clean up.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 18:29:29,https://api.github.com/repos/wincent/command-t/git/commits/e10b87ba6b919174c78f79b586be2ac929f34bd0,e10b87ba6b919174c78f79b586be2ac929f34bd0,"Rename ""lib"" subdirectory to ""ruby""

For parity with final installation destination (of ~/.vim/ruby); this
will make creating a vimball easier.

I am still not 100% sure that ~/.vim/ruby is the right place for these
files (as opposed to ~/.vim/plugin/ruby), but I haven't yet found any
indication of a convention other than this reference in the help (from
usr_05.txt):

  Instead of putting plugins directly into the plugin/ directory, you may
  better organize them by putting them into subdirectories under plugin/.
  As an example, consider using ""~/.vim/plugin/perl/*.vim"" for all your
  Perl plugins.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 18:23:45,https://api.github.com/repos/wincent/command-t/git/commits/bede834eeed82f9ca14d8c74d9afedfd20d87c5b,bede834eeed82f9ca14d8c74d9afedfd20d87c5b,"Add issue tracker link to help documentation

Signed-off-by: Wincent Colaiuta <win@wincent.com>

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 18:22:50,https://api.github.com/repos/wincent/command-t/git/commits/f3574bd1bf0b4bfe27c9454c4f1eaa51faf742b5,f3574bd1bf0b4bfe27c9454c4f1eaa51faf742b5,"Add BSD license header to all files

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 18:08:38,https://api.github.com/repos/wincent/command-t/git/commits/0d00fcfee2e7faa8c3561cc02004312f5addae78,0d00fcfee2e7faa8c3561cc02004312f5addae78,"Handle missing C extension

If the user installs but fails to perform the ""ruby extconf.rb && make""
incantation to build the C extension, then fail gracefully by printing a
warning message with a link back to the installation instructions in the
help documentation.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 18:03:04,https://api.github.com/repos/wincent/command-t/git/commits/97170524eaef15bf14df7049ffd6569af62d9678,97170524eaef15bf14df7049ffd6569af62d9678,"Remove ! from function declarations

As the plugin uses a ""load guard"" variable to prevent itself from being
evaluated multiple times, there is no real need for these ""!"" on
function declarations.

The ""!"" would allow us to silently redefine a pre-existing function, but
given that we won't be evaluated multiple times and our function names
are all ""protected"" by the CommandT ""namespace"", we really shouldn't
ever need to silently redefine.

In the case where we actually do end up redefining something it is
almost certainly by accident, so we should probably allow the error to
bubble up where the user might notice it.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 18:00:17,https://api.github.com/repos/wincent/command-t/git/commits/5024c163d3e63e645ad5799e4c4b27386000f790,5024c163d3e63e645ad5799e4c4b27386000f790,"Extract function for warning about missing Ruby support

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 17:16:15,https://api.github.com/repos/wincent/command-t/git/commits/ca764dd48f844c93abcacad52159cfd54839e4b9,ca764dd48f844c93abcacad52159cfd54839e4b9,"Don't map to <Leader>t unless no mapping exists

In other words, don't clobber an existing mapping.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 17:14:52,https://api.github.com/repos/wincent/command-t/git/commits/51948c4971bdbf90dfdd0e2ad15bf932d0cc95f8,51948c4971bdbf90dfdd0e2ad15bf932d0cc95f8,"Remove LustyExplorer references from plug-in file

There is really nothing copyrightable left in the plug-in file now that
it is really just a stub, so remove the reference to LustyExplorer; the
relationship with the LustyExplorer plug-in is now covered in the
""AUTHOR"" section of the help documentation.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 17:13:02,https://api.github.com/repos/wincent/command-t/git/commits/d8980b7918d9780c0a94d749f16c09310165f1c2,d8980b7918d9780c0a94d749f16c09310165f1c2,"Add intial version of documentation

Signed-off-by: Wincent Colaiuta <win@wincent.com>

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 16:42:58,https://api.github.com/repos/wincent/command-t/git/commits/535848a80e6fd976ecf8b0a8e4e2a5880c9088cc,535848a80e6fd976ecf8b0a8e4e2a5880c9088cc,"Fix: select is an instance not a class method

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-07 10:04:52,https://api.github.com/repos/wincent/command-t/git/commits/c098431709970765d5fd9ba34f86b5b0e6b42e82,c098431709970765d5fd9ba34f86b5b0e6b42e82,"Restore window sizes in tallest-to-shortest order

When restoring window sizes we have to do it in a particular order to
handle cases involving vertical splits like this:

  ----------------
     1    |
  --------|   2
     3    |
  ----------------

When collapsed to make room for the match window these windows might
look like:

  ----------------
  --------|   2
  ----------------

Afterwards when we try to restore them all to their original size the
ordering is very important.

For example, if we try to restore window 1 first we will fail because
the height of window 2 serves as a constraint and there is not enough
room.

To avoid this we make sure that we always restore the size of the taller
windows first. In this case that means we resize window 2 first, so that
the resizes of windows 1 and 3 will succeed.

For more information see:

  https://wincent.com/issues/1493

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-06 20:09:15,https://api.github.com/repos/wincent/command-t/git/commits/519435064a569b7a74b969dfad1ae1107232eae2,519435064a569b7a74b969dfad1ae1107232eae2,"Special handling or equalalways setting

Turn it off before creating the match window, so that VIM won't waste
time trying to auto-adjust the size of all the other visible windows.

Then, after deleting the match window, restore the previously existing
window sizes and then turn equalalways back on (if the user had it on).
In this way such users will get their desired behaviour (of
auto-adjusting splits).

The behaviour should now be very close to correct for all cases; for
example, when a user asks to open a new file in a split window, we
close the match window, restore the existing sizes, reselect the
previously selected window, then perform the split. This should
appropriately use the available space and dump the cursor in the new
window.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-06 19:59:18,https://api.github.com/repos/wincent/command-t/git/commits/d6751295a96c8714eb3bd3ba6148dd64c5a8b6eb,d6751295a96c8714eb3bd3ba6148dd64c5a8b6eb,"Save window heights before splitting, then restore them

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-06 19:45:40,https://api.github.com/repos/wincent/command-t/git/commits/dcfc9102242fd5cc1008591001473061958fb62b,dcfc9102242fd5cc1008591001473061958fb62b,"Don't save and restore splitbelow setting

Seeing as it is never modified.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-06 14:02:20,https://api.github.com/repos/wincent/command-t/git/commits/8de0fa42bae7096e3a18bc51b0440c1f57c62ceb,8de0fa42bae7096e3a18bc51b0440c1f57c62ceb,"Add LICENSE file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-06 13:54:29,https://api.github.com/repos/wincent/command-t/git/commits/9496df824b1c0833b011e83ef490fb6bd9abb271,9496df824b1c0833b011e83ef490fb6bd9abb271,"Add missing parens from commit bda1e5e

This fix didn't work as intended due to missing parens.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-06 12:11:56,https://api.github.com/repos/wincent/command-t/git/commits/769c65fabc8531cef5f1b697e32ffb827e7c29ee,769c65fabc8531cef5f1b697e32ffb827e7c29ee,"Remove unnecessary brackets from C code

Drop brackets where C's operator precedence rules make them unnecessary.

There is only one place where the brackets have been left in -- around
an ""a && b"" expression appearing after an ""||"" operator -- because
GCC will warn ""when operators are nested whose precedence people often
get confused about"" unless -Wno-parentheses is passed in (which would
unfortunately also turn off some other more useful warnings).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-06 12:00:04,https://api.github.com/repos/wincent/command-t/git/commits/bda1e5e6123d16a161f47350f9fc5db230d591e2,bda1e5e6123d16a161f47350f9fc5db230d591e2,"Fix for changes in MacVim snapshot 52

MacVim snapshot 52 brings changes to the Ruby runtime from the upstream
VIM, in which VIM::evaluate now returns Fixnums instead of Strings for
numeric values.

This is the quick-and-easy fix that will make things play nicely with
versions of MacVim before and after the change.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-05 20:43:48,https://api.github.com/repos/wincent/command-t/git/commits/1c4a41cc8b10a342ade21675f86b51b6e96a73ab,1c4a41cc8b10a342ade21675f86b51b6e96a73ab,"Add mappings for opening in splits, tabs etc

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-05 20:24:34,https://api.github.com/repos/wincent/command-t/git/commits/e2cd3705d91ca1b9aca94c5608033cd8549712b2,e2cd3705d91ca1b9aca94c5608033cd8549712b2,"Convert Matcher class to C

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-05 18:15:49,https://api.github.com/repos/wincent/command-t/git/commits/e8f992a06ecbdbca819e3736730b3ce4f8c2d019,e8f992a06ecbdbca819e3736730b3ce4f8c2d019,"Extract set-up code into ext.c/ext.h

Will soon be adding another C class, so want the generic set-up code to
reside in a separate file and not in match.c/match.h.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-05 08:43:17,https://api.github.com/repos/wincent/command-t/git/commits/11defb6d114ad4928dd96984d09959b2f0e0dab7,11defb6d114ad4928dd96984d09959b2f0e0dab7,"Convert Match class to C extension

This is basically a literal translation of the pure Ruby version of the
Match class with no behavioural changes.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-04 20:45:05,https://api.github.com/repos/wincent/command-t/git/commits/4f594766fc512fa69e3d936880635771b758d6c0,4f594766fc512fa69e3d936880635771b758d6c0,"Squelch bug in offsets matching

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-04 20:36:07,https://api.github.com/repos/wincent/command-t/git/commits/94e0301ab964508f32a3c5234cb7bb323b8eddfd,94e0301ab964508f32a3c5234cb7bb323b8eddfd,"Additional specs for matches? method and empty strings

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-04 20:32:44,https://api.github.com/repos/wincent/command-t/git/commits/81408dfc5019b4c266ece43b63715f9b65d03947,81408dfc5019b4c266ece43b63715f9b65d03947,"New matching implementation without regexps

This is further preparation for the conversion to C; we don't use
regular expressions and just do a manual character-wise search.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-04 18:59:20,https://api.github.com/repos/wincent/command-t/git/commits/37a73b2d244834b7a2237c20b841d3bb0b08becd,37a73b2d244834b7a2237c20b841d3bb0b08becd,"Add offsets attribute to Match class

Instead of looking at the MatchData offsets we instead mantain an array
containing the offsets of the found characters. This is a step towards
allowing the Match class to be a subclass of String.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-04 18:31:50,https://api.github.com/repos/wincent/command-t/git/commits/51d50cfb94bbfd1db35e140eba0ed7940553b1b8,51d50cfb94bbfd1db35e140eba0ed7940553b1b8,"Move actual matching from Matcher into Match class

This is the first step towards a reimplementation in C. We want to do
this piecemeal, so the idea is to get the important parts all localized
into a single small class which can be ported to C.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 21:14:03,https://api.github.com/repos/wincent/command-t/git/commits/5277151719e6747da76150859a968d5639d4ce1d,5277151719e6747da76150859a968d5639d4ce1d,"Extract Controller class into separate file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 21:11:51,https://api.github.com/repos/wincent/command-t/git/commits/aea38c10182402b8b71dbdf6add9271ed396758d,aea38c10182402b8b71dbdf6add9271ed396758d,"Move Settings class into separate file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 21:09:02,https://api.github.com/repos/wincent/command-t/git/commits/5d0f66d493fd3de0ddd65bfb559700e131614838,5d0f66d493fd3de0ddd65bfb559700e131614838,"Extract MatchWindow class into separate file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 21:04:53,https://api.github.com/repos/wincent/command-t/git/commits/e0b0b5219dff0152d3104590e09991cbe3fb3b47,e0b0b5219dff0152d3104590e09991cbe3fb3b47,"Extract Prompt class into separate file

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 21:01:04,https://api.github.com/repos/wincent/command-t/git/commits/dbc28862f2d5d3b04e4e9e5089a4aedfcb1766cc,dbc28862f2d5d3b04e4e9e5089a4aedfcb1766cc,"Further extract VIM module additions into separate files

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 20:56:47,https://api.github.com/repos/wincent/command-t/git/commits/b523e67b67579cf879be19f102069e8c7867754f,b523e67b67579cf879be19f102069e8c7867754f,"Move Screen class out into separate file

Rather than a massive ""ruby"" block inside the vimscript, move code out
into separate Ruby files. This at least allows us to perform syntax
checking with ""ruby -c"" on such files (syntax errors inside the ""ruby""
block just produce silent failures).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 20:50:48,https://api.github.com/repos/wincent/command-t/git/commits/505580ccf8e8947cf4f351454cdb82d793611a19,505580ccf8e8947cf4f351454cdb82d793611a19,"Remove duplicate pending specs

The algorithm is already tested in the Base specs so no need to
duplicate that here.

Signed-off-by: Wincent Colaiuta <win@wincent.com>

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 20:17:03,https://api.github.com/repos/wincent/command-t/git/commits/9b564c27a0dbd48cbace4886a052de29c20bcf05,9b564c27a0dbd48cbace4886a052de29c20bcf05,"Open accepted match

We sanitize paths before opening them by escaping characters which might
cause the open to otherwise fail.

Based on help docs for command-line mode (:help :).

Tested with files:

  foo[bar
  foo bar
  foo%bar
  foo|bar
  foo]bar
  foo#bar
  foo\bar
  foo""bar
  foo$bar

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 19:36:45,https://api.github.com/repos/wincent/command-t/git/commits/22d7e13565489302ffe70ff4cdd4dd5e0a23a464,22d7e13565489302ffe70ff4cdd4dd5e0a23a464,"Match behaviour of Finder for type-ahead find

In the Finder the search isn't limited to what's below the currently
selected item; if you stop typing and wait for the time out to reset,
the next key-press will in fact restart the search from the first item
in the window again.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 19:31:55,https://api.github.com/repos/wincent/command-t/git/commits/a33723449910cde03fc4cce9620142b7d6ca3b08,a33723449910cde03fc4cce9620142b7d6ca3b08,"Implement type-ahead find for MatchWindow

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 19:09:46,https://api.github.com/repos/wincent/command-t/git/commits/31532cb509c846914f417cc2fae2499b685aa2a6,31532cb509c846914f417cc2fae2499b685aa2a6,"Add C-j and C-k as synonyms for Down and Up

This is a fairly natural way of selecting items in the list, seeing as
we already support C-h and C-l for left and right movement.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-03 19:06:42,https://api.github.com/repos/wincent/command-t/git/commits/cb83ae3375ee9bb5520c1becc783f1f057e07600,cb83ae3375ee9bb5520c1becc783f1f057e07600,"Refactoring of focus tracking

In order to implement type ahead find we need to juggle things around a
little bit.

Both the MatchWindow and the Prompt need to know when they have focus,
but it should be the responsibility of the Controller to inform them of
when this is the case. The Controller should only send key press
messages to one of the other objects, and only when it is appropriate to
do so (for example, the delete key isn't sent at all when the
MatchWindow has the focus).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 22:29:18,https://api.github.com/repos/wincent/command-t/git/commits/1077143723e27e836cee4ff3019c03d10a179cbb,1077143723e27e836cee4ff3019c03d10a179cbb,"Save and restore hlsearch setting

If a users has hlsearch set to true and happens to search for a string
which is part of a file name, the string will be highlighted when we
bring up the matches list.

So set nohlsearch on showing the list, and restore whatever the old
value of hlsearch was on closing.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 22:25:06,https://api.github.com/repos/wincent/command-t/git/commits/f12b73cd31a69d3355c4a836572923166605ffb3,f12b73cd31a69d3355c4a836572923166605ffb3,"Initialize new Prompt instance with has_focus false

This ensures that we actually do a redraw the first time the focus
method is called.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 22:19:20,https://api.github.com/repos/wincent/command-t/git/commits/df68e2d652103eacd7367429e38c5c9675b91d68,df68e2d652103eacd7367429e38c5c9675b91d68,"Remove unused attribute reader

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 22:15:51,https://api.github.com/repos/wincent/command-t/git/commits/5299c4872f3344ea5d5ce2e8cf39c1e1b050b315,5299c4872f3344ea5d5ce2e8cf39c1e1b050b315,"Add and delete chars only if prompt has focus

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 20:36:15,https://api.github.com/repos/wincent/command-t/git/commits/756a348ca4418040257acb4d2510cc9070a46142,756a348ca4418040257acb4d2510cc9070a46142,"Ignore cursor movement commands if prompt unfocussed

Seeing as the new highlighting intentionally hides the cursor
highlighting when the prompt doesn't have focus, ignore any cursor
movement keys when unfocussed.

In this way avoid surprises caused by the cursor not visibly moving and
then suddenly ""moving"" once focus is reacquired.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 20:33:11,https://api.github.com/repos/wincent/command-t/git/commits/5672bf9fc5c2d557c62bbd7051ffd12fbc5557a9,5672bf9fc5c2d557c62bbd7051ffd12fbc5557a9,"Dim prompt when unfocussed

Use ""NonText"" highlight when prompt doesn't have focus; this should
hopefully be a subtle color in most color schemes.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 20:21:27,https://api.github.com/repos/wincent/command-t/git/commits/322031b8c0a2f60e53dc50fb2b785018b3d119f0,322031b8c0a2f60e53dc50fb2b785018b3d119f0,"Pass prompt into MatchWindow instance

Seeing as the MatchWindow class handles focus toggling, it makes sense
that it should have a reference to the prompt instance.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 19:41:07,https://api.github.com/repos/wincent/command-t/git/commits/d06f51fa4ee22063afd878ed1f7e2135d8f41a98,d06f51fa4ee22063afd878ed1f7e2135d8f41a98,"Call clearmatches() on creating matches window

This clears any custom highlighting rules that might have been added to
the window automatically when it was created using VimEnter autocmds
(for example, I use this to apply special highlighting to overlength
lines).

In this way we get full control over how lines are highlighting in the
matches listing. Note the effects are not permament (do not apply to
other windows).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 19:30:46,https://api.github.com/repos/wincent/command-t/git/commits/0324147a01f6cb078d1c4158f7946c4dce99715a,0324147a01f6cb078d1c4158f7946c4dce99715a,"Add mappings to jump to start and end of prompt

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 18:38:19,https://api.github.com/repos/wincent/command-t/git/commits/36cd5f511447612874d04103d73ef8601e0dea05,36cd5f511447612874d04103d73ef8601e0dea05,"Handle the delete key

We already supported backspace; now we support delete as well.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 18:32:46,https://api.github.com/repos/wincent/command-t/git/commits/a6d18a77d7876abc68db7722f6e99cd75e8e4ef3,a6d18a77d7876abc68db7722f6e99cd75e8e4ef3,"Teach add! and backspace! about cursor positions

Now characters are added and removed just before the cursor.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 18:30:28,https://api.github.com/repos/wincent/command-t/git/commits/d1b9608ff8638c7541a3152c75a579abd8e25336,d1b9608ff8638c7541a3152c75a579abd8e25336,"Extract abbrev_segments method

This will enable reuse by the ""add!"" and ""backspace!"" methods.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 18:26:12,https://api.github.com/repos/wincent/command-t/git/commits/adc8c4cb476005bb7eca01077b5047dde1cefe84,adc8c4cb476005bb7eca01077b5047dde1cefe84,"Enable left/right cursor movement

At this stage we just move the cursor. In the next commit the ""add"" and
""backspace"" methods will be taught to insert or delete text at the
current cursor position rather than at the end.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 17:59:06,https://api.github.com/repos/wincent/command-t/git/commits/ae661b40efd652aea5e6857224145dccf9a102e9,ae661b40efd652aea5e6857224145dccf9a102e9,"Add clearing using C-u

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 17:49:10,https://api.github.com/repos/wincent/command-t/git/commits/f00bea14cb1661860219d28b15d28eebf0f92300,f00bea14cb1661860219d28b15d28eebf0f92300,"Extract methods to reduce code duplication

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 10:53:34,https://api.github.com/repos/wincent/command-t/git/commits/cdf92980d0701dda6a7a39adcdffb13012a08287,cdf92980d0701dda6a7a39adcdffb13012a08287,"Move selection with keyboard

This is just a first cut: it works but there is duplicated code that can
be factored out.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 08:25:29,https://api.github.com/repos/wincent/command-t/git/commits/6135f01970a7a171070869549bae19351bc37f3a,6135f01970a7a171070869549bae19351bc37f3a,"Document settings

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 08:08:05,https://api.github.com/repos/wincent/command-t/git/commits/2a0b197352b3ca5ca50c22dde7f675b2dc3a7427,2a0b197352b3ca5ca50c22dde7f675b2dc3a7427,"Use class variables instead of hard-coded literals

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 08:01:28,https://api.github.com/repos/wincent/command-t/git/commits/cec234e8c3f7cd77038da409e823890769d594d0,cec234e8c3f7cd77038da409e823890769d594d0,"Truncate long matches with inner ""...""

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 07:35:52,https://api.github.com/repos/wincent/command-t/git/commits/1d52c6a989d1d78a097f06034ddf432d05c54cdd,1d52c6a989d1d78a097f06034ddf432d05c54cdd,"Change selection highlight depending on focus

Use ""Search"" (bright) highlighting when the results listing has focus,
and ""Visual"" (normal) highlighting when the prompt area has focus.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-02 06:59:43,https://api.github.com/repos/wincent/command-t/git/commits/cdea5e481ec5ef1d07f582ff58234e2ddb23f618,cdea5e481ec5ef1d07f582ff58234e2ddb23f618,"Add :CommandTFlush

Give the user an explicit means of flushing the scanner (for example,
after creating new files).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 22:37:40,https://api.github.com/repos/wincent/command-t/git/commits/a906ba8952b105241ff71e7c51f8f44b39e22044,a906ba8952b105241ff71e7c51f8f44b39e22044,"Highlight up to edge of screen

We pad out the selected item with spaces to achieve full-width
highlighting.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 22:17:10,https://api.github.com/repos/wincent/command-t/git/commits/98a6c3e730a5c87e128ace00b90dca33192ee4a4,98a6c3e730a5c87e128ace00b90dca33192ee4a4,"Use syntax highlight to show current selection and errors

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 22:07:17,https://api.github.com/repos/wincent/command-t/git/commits/531de769b65dd6b019b74015fac09293bb20ed0b,531de769b65dd6b019b74015fac09293bb20ed0b,"Delete excess lines in reverse order

Might be quicker, but certainly looks nicer.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 22:02:51,https://api.github.com/repos/wincent/command-t/git/commits/30edddccea6d17ba2558f80bfc8d0039f5e2ae9b,30edddccea6d17ba2558f80bfc8d0039f5e2ae9b,"Delete excess lines from buffer

Any lines which aren't needed are removed from the buffer. The intention
is to stop scrollbars from needlessly appearing, although presently it
doesn't seem to be working.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 21:57:10,https://api.github.com/repos/wincent/command-t/git/commits/e00076dc9e04f2a5acb4e9c64bb4c04ba836c18b,e00076dc9e04f2a5acb4e9c64bb4c04ba836c18b,"Prefix selected line with '> '

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 21:51:21,https://api.github.com/repos/wincent/command-t/git/commits/e3e87f6a9d08043c6b0b9258f87e4254ab7e7e6c,e3e87f6a9d08043c6b0b9258f87e4254ab7e7e6c,"Also treat space as a 'special' character

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 19:59:11,https://api.github.com/repos/wincent/command-t/git/commits/bad1646185d6f4ae8fb1d3f3ff0a3787ea805cbc,bad1646185d6f4ae8fb1d3f3ff0a3787ea805cbc,"Move pending specs to their final destination

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 19:19:05,https://api.github.com/repos/wincent/command-t/git/commits/f4c3dca6a46b0ba6a34c84c716fab3159a2180de,f4c3dca6a46b0ba6a34c84c716fab3159a2180de,"Pass scanner into matcher rather than scanner paths

This makes it much easier for the matcher to keep track of changes in
the scanner (for example, when changing directories).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 19:05:27,https://api.github.com/repos/wincent/command-t/git/commits/1a4e533eff91630bbc598cbb6234c453d1d370fb,1a4e533eff91630bbc598cbb6234c453d1d370fb,"Display of filtered, ordered results

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 18:02:59,https://api.github.com/repos/wincent/command-t/git/commits/5471391ecfd4718e50060926986a87007d979fe5,5471391ecfd4718e50060926986a87007d979fe5,"Add destroy_match_window

For symmetry with create_match_window. Note we also remove some
unnecessary (duplicate) settings saving as the settings are already
saved elsewhere (by the MatchWindow itself).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 17:53:56,https://api.github.com/repos/wincent/command-t/git/commits/ff9d8cd257dc48effcb977899b103fae4ef92781,ff9d8cd257dc48effcb977899b103fae4ef92781,"Make many methods in Controller class private

Public interface remains public, secondary and utility methods become
private.

Signed-off-by: Wincent Colaiuta <win@wincent.com>

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 17:49:45,https://api.github.com/repos/wincent/command-t/git/commits/25e634951837e54f0626396392ebd91993d71c21,25e634951837e54f0626396392ebd91993d71c21,"Add BSD license header to plug-in file

Make clear that the software is licensed under the BSD, while retaining
the copyright notice from lusty-explorer.vim as requested by the author.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 12:03:57,https://api.github.com/repos/wincent/command-t/git/commits/86b3485e1483b00b8c990484cb6a72669ad34fb0,86b3485e1483b00b8c990484cb6a72669ad34fb0,"Set up scanner

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 12:03:50,https://api.github.com/repos/wincent/command-t/git/commits/de7680ea474e92e9afa6fb4537c1e88c5241c39a,de7680ea474e92e9afa6fb4537c1e88c5241c39a,"Hide and show cursor

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 12:03:21,https://api.github.com/repos/wincent/command-t/git/commits/1d3a78d0fe12a10c7a212be1b7f49972c009b550,1d3a78d0fe12a10c7a212be1b7f49972c009b550,"Ruby scanner: skip over inaccessible directories

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 10:33:13,https://api.github.com/repos/wincent/command-t/git/commits/c2f04d842b89568c7892ab5bd9f50de217e81ca8,c2f04d842b89568c7892ab5bd9f50de217e81ca8,"Fix spelling error in code comment

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 10:20:51,https://api.github.com/repos/wincent/command-t/git/commits/1ab44628ef733b05e3fe809b649a45ee07f4a619,1ab44628ef733b05e3fe809b649a45ee07f4a619,"Flush only if new path differs from old path

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 09:06:57,https://api.github.com/repos/wincent/command-t/git/commits/d21ac4e5ad381e46e8a04023625b0a7309b51977,d21ac4e5ad381e46e8a04023625b0a7309b51977,"Additional code documentation for Matcher class

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 09:05:23,https://api.github.com/repos/wincent/command-t/git/commits/d6bca24c1be19d65dedc68333bee7f4de3887893,d6bca24c1be19d65dedc68333bee7f4de3887893,"Remove matches_for method from CommandT::Base

CommandT::Base is really just a convenience class for providing public
access to the other classes in the library which do the real work of
matching and scanning.

As such, direct access to the low-level ""matches_for"" method really
isn't required, as all public users of the class will be more interested
in the ""sorted_matches_for"" method.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-03-01 07:20:45,https://api.github.com/repos/wincent/command-t/git/commits/1c543fe4524cd1918e3aeb9fb403836563348afe,1c543fe4524cd1918e3aeb9fb403836563348afe,"Fix off-by-one error in :limit implementation

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 23:41:54,https://api.github.com/repos/wincent/command-t/git/commits/46c04309b81a865d6b2101a1662f5b59068e81eb,46c04309b81a865d6b2101a1662f5b59068e81eb,"Use alphabetical sorting for items with same score

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 23:34:43,https://api.github.com/repos/wincent/command-t/git/commits/876c5496ae6b35f14e7e78d50dd51a25b93eee2c,876c5496ae6b35f14e7e78d50dd51a25b93eee2c,"Make scoring algorithm suck a bit less

Divide ""scoring potential"" among characters typed in search string, not
characters in string to be searched.

In this way a search like ""a"" will correctly favor ""foo/a"" over ""bar"".

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 23:14:36,https://api.github.com/repos/wincent/command-t/git/commits/4f25f3dc52c7da27241c526a172e8e4f3d1a84af,4f25f3dc52c7da27241c526a172e8e4f3d1a84af,"Make matches lose weight as they move right

That is, as the distance from the last matched character increases (or
in the case of the first matched character, the distance from the start
of the string).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 23:01:22,https://api.github.com/repos/wincent/command-t/git/commits/35cf03ebd52aa7c15b3058bcb9849d42dbe5ffba,35cf03ebd52aa7c15b3058bcb9849d42dbe5ffba,"Various tweaks to scoring algorithm

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 21:28:43,https://api.github.com/repos/wincent/command-t/git/commits/b701ad420fd641c466b96b62a81d670d3c58cab4,b701ad420fd641c466b96b62a81d670d3c58cab4,"Add path= method to CommandT::Base

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 21:20:28,https://api.github.com/repos/wincent/command-t/git/commits/0c78d18b2bc77e516a37dd5d315f9ba794f68865,0c78d18b2bc77e516a37dd5d315f9ba794f68865,"Add new ""path="" method to scanners

In order to avoid duplication, the new method is defined on a new
abstract base class which all scanners now inherit from.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 21:19:53,https://api.github.com/repos/wincent/command-t/git/commits/702feac90b7822b4289b47e67760581aa11da5c6,702feac90b7822b4289b47e67760581aa11da5c6,"Switch to Ruby scanner as default

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 20:59:57,https://api.github.com/repos/wincent/command-t/git/commits/6d26f91fcd6d880a7e70e80f35e2ed94d3d45ca9,6d26f91fcd6d880a7e70e80f35e2ed94d3d45ca9,"Only select buffer if window selection succeeded

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 20:41:36,https://api.github.com/repos/wincent/command-t/git/commits/c8f4f80d23b71eed4689218cbc15a304a9ee5a69,c8f4f80d23b71eed4689218cbc15a304a9ee5a69,"Make ""select"" an instance method

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 20:40:00,https://api.github.com/repos/wincent/command-t/git/commits/35f29587e7a3b38e0dac4399e1e21e3e1146b86e,35f29587e7a3b38e0dac4399e1e21e3e1146b86e,"Try to select initial window/buffer on closing

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 20:25:00,https://api.github.com/repos/wincent/command-t/git/commits/a77f96693d0563b4e9982ebf3e94b649fcffe2aa,a77f96693d0563b4e9982ebf3e94b649fcffe2aa,"Dispose of buffer on ESC

Hide the buffer and restore the prompt line when the user hits ESC.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 19:10:17,https://api.github.com/repos/wincent/command-t/git/commits/c2f3082cd6d609617c49f803dce97d84d45423aa,c2f3082cd6d609617c49f803dce97d84d45423aa,"Make ""prompt"" reflect typed characters

As new characters are typed the prompt line is updated. Likewise when
backspace is pressed characters are removed and the prompt line is
updated.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-28 18:42:11,https://api.github.com/repos/wincent/command-t/git/commits/ad383d497d3709d90677fbc8251de8f89b279b27,ad383d497d3709d90677fbc8251de8f89b279b27,"Added functionality to Vim plugin

At this stage we have a ""MatchWindow"" and a partial implementation of a
prompt.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 23:35:46,https://api.github.com/repos/wincent/command-t/git/commits/19bf3bf5cf744c1497ce82783147e9e492ef6b19,19bf3bf5cf744c1497ce82783147e9e492ef6b19,"Use a shorter value for plugin load guard variable

Signed-off-by: Wincent Colaiuta <win@wincent.com>

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 22:29:03,https://api.github.com/repos/wincent/command-t/git/commits/4d9564181aba3ee76beef2c111cc2db7bd9c477b,4d9564181aba3ee76beef2c111cc2db7bd9c477b,"Initial starting point of Vim plugin

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 22:22:31,https://api.github.com/repos/wincent/command-t/git/commits/df60d9d5b7677d0c6b509196cb0ece8e90d3a897,df60d9d5b7677d0c6b509196cb0ece8e90d3a897,"Decrement depth counter when returning from recursion

Without this we falsely hit the depth limit on looking inside 15
directories (ie. not necessarily recursing 15 levels deep).

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 22:06:23,https://api.github.com/repos/wincent/command-t/git/commits/5d60fccd7cdc60bfab64e4b8fd3815e2be0eaef1,5d60fccd7cdc60bfab64e4b8fd3815e2be0eaef1,"Strip leading ""./"" from Find scanner paths

This matches the behaviour of the Ruby scanner and will make for shorter
paths in the UI layer.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 22:04:07,https://api.github.com/repos/wincent/command-t/git/commits/fbf34f21b9225fadac06101752379184e530588d,fbf34f21b9225fadac06101752379184e530588d,"Simplify Find scanner spec set-up

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 22:03:18,https://api.github.com/repos/wincent/command-t/git/commits/f1ab517024886dd7e4c118fca1deac76d4f2c573,f1ab517024886dd7e4c118fca1deac76d4f2c573,"Add max_depth option to Find class

This matches some but not all functionality in the Ruby scanner.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 21:55:27,https://api.github.com/repos/wincent/command-t/git/commits/cc5b60fbba6872f6b100a28c16d1dd7d0d7d94b7,cc5b60fbba6872f6b100a28c16d1dd7d0d7d94b7,"Add pure Ruby scanner

This may not be as fast as shelling out to ""find"" but it does allow some
nice advantages:

  - ability to define a file limit and return as soon as the limit is
    reached
  - similarly the ability to define a recursion depth limit and return
    as soon as it is reached
  - ability to define an exclusion pattern (such as "".git"") and ignore
    matching files or directories

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 21:09:37,https://api.github.com/repos/wincent/command-t/git/commits/d6d8251bf201fcc4d973e6ded9ec7762c438e90c,d6d8251bf201fcc4d973e6ded9ec7762c438e90c,"Refactor scanners

In preparation for the addition of other scanner backends, move existing
find-based scanner into a subdirectory.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 14:53:18,https://api.github.com/repos/wincent/command-t/git/commits/37a61d60fb63b02242de9c14d99641dad1c935c4,37a61d60fb63b02242de9c14d99641dad1c935c4,"Flesh out scoring algorithm

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 14:53:04,https://api.github.com/repos/wincent/command-t/git/commits/ba21750f2cf991df9af9514a0fdf32c10e31c1c3,ba21750f2cf991df9af9514a0fdf32c10e31c1c3,"Add spec for case-insensitive matching

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 14:15:39,https://api.github.com/repos/wincent/command-t/git/commits/2dada1081d71eddb881d7d0fbd1a7088569a77d2,2dada1081d71eddb881d7d0fbd1a7088569a77d2,"Refactor match specs

Add a helper method which makes these tests more concise and will enable
other future tests.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-27 12:21:33,https://api.github.com/repos/wincent/command-t/git/commits/1defca9ee306396ca243237f7150f8fdc8fd97a2,1defca9ee306396ca243237f7150f8fdc8fd97a2,"Add Match class for encapsulating and scoring matched strings

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 22:59:02,https://api.github.com/repos/wincent/command-t/git/commits/229d1fc5e667d465a54e525376dee5016c608482,229d1fc5e667d465a54e525376dee5016c608482,"Additional spec for Base class

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 20:39:55,https://api.github.com/repos/wincent/command-t/git/commits/4693fad129b16f8b0d0a82c84e593c8a912fd193,4693fad129b16f8b0d0a82c84e593c8a912fd193,"Add Base class

At the moment this is just a simple aggregator class which puts together
a Matcher with a Scanner and exposes a ""matches_for"" method.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 20:29:14,https://api.github.com/repos/wincent/command-t/git/commits/4497fa014b70935c663d8919932a92b759c1ce1d,4497fa014b70935c663d8919932a92b759c1ce1d,"Add specs for flush method

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 20:22:47,https://api.github.com/repos/wincent/command-t/git/commits/35ff0f331a1b698dea05ce090e26cd98871d7049,35ff0f331a1b698dea05ce090e26cd98871d7049,"Optionally override Scanner base path

This is principally for testing purposes, because in actual use the
intended purpose of the add-on is to always operate in the current
working directory.

In testing, however, it is useful to provide a helper method (in the
spec_helper.rb file) to generate a new Scanner object configured to
search the ""fixtures"" directory, without having to explicitly change
directories within the specs themselves.

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 20:18:33,https://api.github.com/repos/wincent/command-t/git/commits/535740015ce7ba54c4887cdda170a428bab4d067,535740015ce7ba54c4887cdda170a428bab4d067,"Add Scanner class

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 20:17:35,https://api.github.com/repos/wincent/command-t/git/commits/57e534a28db6fcf74c8c943ee0113547c59a0d5e,57e534a28db6fcf74c8c943ee0113547c59a0d5e,"Add spec.opts file for color output

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 20:07:05,https://api.github.com/repos/wincent/command-t/git/commits/d40cb6624c433c7e3b168293e76f3e880711ead4,d40cb6624c433c7e3b168293e76f3e880711ead4,"Add fixtures for testing purposes

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 20:06:16,https://api.github.com/repos/wincent/command-t/git/commits/b1e4062a806f922b7ddba73a4c543af8735799be,b1e4062a806f922b7ddba73a4c543af8735799be,"matches_for: complain if passed nil

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 19:54:14,https://api.github.com/repos/wincent/command-t/git/commits/a06c196a6d27ccd3d64478b256001028ee1197f1,a06c196a6d27ccd3d64478b256001028ee1197f1,"Move Matcher spec into subdirectory also

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 19:52:40,https://api.github.com/repos/wincent/command-t/git/commits/e6c5c18b7f88c22c88b25e698736ea37f98e7411,e6c5c18b7f88c22c88b25e698736ea37f98e7411,"Move Matcher into subdirectory

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 19:49:18,https://api.github.com/repos/wincent/command-t/git/commits/1c203c44f9e0b80bd416edcc737242000f87d63a,1c203c44f9e0b80bd416edcc737242000f87d63a,"Make CommandT a module rather than a class

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 19:47:42,https://api.github.com/repos/wincent/command-t/git/commits/712da39c906928d8dc7be7874a1c1035149ce8d9,712da39c906928d8dc7be7874a1c1035149ce8d9,"Move matching functionality into ""Matcher"" class

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
wincent,2010-02-26 19:25:17,https://api.github.com/repos/wincent/command-t/git/commits/8378eeb94f1c7e5656696fc6c52d8aa69831f809,8378eeb94f1c7e5656696fc6c52d8aa69831f809,"Initial import

Signed-off-by: Wincent Colaiuta <win@wincent.com>"
