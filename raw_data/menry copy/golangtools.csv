tools,[mirror] Go Tools
username,timestamp,url,sha,message
johanbrandhorst,2019-08-24 16:28:48,https://api.github.com/repos/golang/tools/git/commits/31e00f45c22e7b8b4b5a004fd8a01c664f7b175b,31e00f45c22e7b8b4b5a004fd8a01c664f7b175b,"go/analysis: add sortslice pass

The sort.Slice method accepts an empty interface as its first
argument, but a slice type is the only valid use of the method.
This analyzer adds a diagnostic if the user uses the sort.Slice
method with anything other than a slice type as the first argument.

Change-Id: I3b54873faba2e9c2e832223a3cdab15a0b534650
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191598
Run-TryBot: Johan Brandhorst <johan.brandhorst@gmail.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
pjweinb,2019-09-13 17:28:50,https://api.github.com/repos/golang/tools/git/commits/0240832f5c3d9ddcdcd51c66edbf8cd889a54108,0240832f5c3d9ddcdcd51c66edbf8cd889a54108,"internal/lsp/protocol: bring the typescript code up to date

These versions of go.ts and requests.ts generate tsprotocol.go,
tsserver.go, and tsclient.go. README.md now gives the version of the
vscode source used, showing that the typescript code and tsprotocol.go
are matched to the same git commit of vscode.

Many of the diffs are just whitespace from vscode's formatting.

Fixes golang/go#34225

Change-Id: Ib66dad9476b452f332a4c0e990faf2c6060a588e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/195297
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-09-12 21:39:10,https://api.github.com/repos/golang/tools/git/commits/3720d1ec36787cbb1ba1d4b76e4b0049db3ea911,3720d1ec36787cbb1ba1d4b76e4b0049db3ea911,"go/packages: suppress go list -e error when directory outside modules

If an absolute directory path being listed is outside any modules,
go list -e returns a non-zero exit status and non-empty stderr, but
should suppress the error. This was causing a weird bug when golang.org/cl/186337
was submitted because that changed the conditions when -export was passed,
which in turn affected how we suppressed the go list -e error (because
-export causes a compile it overtriggers errors, so we explicitly
suppress errors in that case). The way the error was being suppressed,
no error was generated, and no fake package was generated (which go list
is supposed to do), so the contains query fallback code wasn't run.

Fixes golang/go#34265
Updates golang/go#34273

Change-Id: I1213cff0e03a62c6976e50db5b2d805aa3ddbb7a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/195065
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-09-12 17:53:18,https://api.github.com/repos/golang/tools/git/commits/87d9f09c5d89af11d60862c48a7869a0a75b3543,87d9f09c5d89af11d60862c48a7869a0a75b3543,"internal/lsp: turn fuzzy matching and deep completions back on

We turned them off for the release, but let's keep them on at master so
that we can get more feedback.

Change-Id: Iaadf27d59ef925ba8ee2bc02acbb9c77c2935ce2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/195059
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-12 06:42:35,https://api.github.com/repos/golang/tools/git/commits/b0a6c2aa3ffab510cfbaab441e32f881cfe224b6,b0a6c2aa3ffab510cfbaab441e32f881cfe224b6,"internal/testenv: handle GOPACKAGESDRIVER=off in NeedsGopackage

This was causing tests to report that they required a binary
called ""off"".

Change-Id: I592109029c86af20d48d2ee9989d4a25fdb11b3d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194978
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-09-11 17:30:34,https://api.github.com/repos/golang/tools/git/commits/22c3443cadd8bc6b1faa619dceaadf5ea137fa65,22c3443cadd8bc6b1faa619dceaadf5ea137fa65,"go/packages: fall back to loading from export data if sources are missing

When a user asks Syntax or TypesInfo, we need to typecheck from sources.
If the sources are missing fall back to trying to load from export data,
but still report an error.
This will help in some cases where the driver has incomplete data.

Change-Id: I3b23e90a5cd865c5f729e50f09f5fadff2d32994
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194683
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
dcormier,2019-09-12 12:33:30,https://api.github.com/repos/golang/tools/git/commits/44811c0174895e13ada67eafee7eeeaa2be78022,44811c0174895e13ada67eafee7eeeaa2be78022,"Fixed documentation for gopls installation

Fixes this problem when trying to use the documented installation command:

```
$ GO111MODULE=on go get golang.org/x/tools gopls@latest
go: finding golang.org/x/tools latest
go: downloading golang.org/x/tools v0.0.0-20190911230505-6bfd74cf029c
go: extracting golang.org/x/tools v0.0.0-20190911230505-6bfd74cf029c
go get gopls@latest: malformed module path ""gopls"": missing dot in first path element
```

Change-Id: Ifdd13ec85eca5a069c17ae89486efe1abf4016f4
GitHub-Last-Rev: a4ddc02e3b8e6ccce12dfa711a8e7af5edb1302c
GitHub-Pull-Request: golang/tools#158
Reviewed-on: https://go-review.googlesource.com/c/tools/+/195037
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-11 23:00:37,https://api.github.com/repos/golang/tools/git/commits/6bfd74cf029c99138aa1bb5b7e0d6b57c9d4eb49,6bfd74cf029c99138aa1bb5b7e0d6b57c9d4eb49,"internal/lsp: update go.mod for next version

Change-Id: Ic2e437f7daec94f648ba1a13e99a9ada462cdf49
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194897
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
stamblerre,2019-09-11 22:21:01,https://api.github.com/repos/golang/tools/git/commits/c7d52e45e2f26d14ff8ac27510d411f75f26bbdc,c7d52e45e2f26d14ff8ac27510d411f75f26bbdc,"internal/lsp: use the view options, not the session options

Previous changes to the config mechanism made the config options
per-view, not per-session. We should now make sure to obey config
changes per-view. This does not fix the configuration handling for
""watchChangedFile"" however. This should be done in a future CL.

Change-Id: I73f6236386c36d2587fdb9c0601670833a4366c3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194818
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
stamblerre,2019-09-11 20:13:00,https://api.github.com/repos/golang/tools/git/commits/63a3583f646f18c88f3799b86f3046ad8147f3e3,63a3583f646f18c88f3799b86f3046ad8147f3e3,"gopls/doc: update config settings in documentation

Change-Id: Ieef4c541fdc48afc5b6064b7057edab3a28fefb0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194686
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
jirfag,2019-09-11 19:29:34,https://api.github.com/repos/golang/tools/git/commits/7dd31af5a648ea888c9989e92a5db33fc895d343,7dd31af5a648ea888c9989e92a5db33fc895d343,"go/packages: allow types loading without NeedDeps

Before separating Load* into Need* we could use LoadSyntax
to get types information by loading inital packages
from source code and loading it's direct dependencies from export data.
It was broken when separation was introduced and before this commit
everything was loading from source code what resulted into slow
loading times. This commit fixes it.

Also, do backwards-incompatible fix of definition of deprecated
LoadImports and LoadAllSyntax.

Improve an internal error message
""internal error: nil Pkg importing x from y"": replace it with
""internal error: package x without types was imported from y"".

Remove packages.NeedDeps request for loading in tests
TestLoadTypesBits and TestContainsOverlayXTest.

Fixes golang/go#31752, fixes golang/go#33077, fixes golang/go#32814,
          fixes golang/go#31699, fixes golang/go#31930

Change-Id: I416e3c1035d555d67039e45a4fdd1deb9b2184ef
GitHub-Last-Rev: 2e3a46e6572d100ace486af33dcde45288cced46
GitHub-Pull-Request: golang/tools#139
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186337
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-09-11 19:39:14,https://api.github.com/repos/golang/tools/git/commits/b87a5f9d5524be0ca656611a477535cc9f782711,b87a5f9d5524be0ca656611a477535cc9f782711,"internal/lsp: update gopls mod file

Change-Id: I029c690d1797b12af186fd6e445d15d3c5a27412
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194685
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-09-11 17:13:44,https://api.github.com/repos/golang/tools/git/commits/b13fa046aa370b8ebff523482a63fa045b237daf,b13fa046aa370b8ebff523482a63fa045b237daf,"internal/lsp: merge session and view options into one

This fixes the issue of config options not being applied.
Also, handle config errors and deprecation by showing a message to the
user.

Change-Id: I850d5303a7a1e301c97324060a87929710ee6700
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194682
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-11 16:28:40,https://api.github.com/repos/golang/tools/git/commits/4f2ddba30aff720d7cb90a510a695e622273ce77,4f2ddba30aff720d7cb90a510a695e622273ce77,"internal/lsp: prepare for tagged version

This change temporarily disables fuzzy matching and deep completion by
default, leaving them opt-in for the tagged versions. These will be
re-enabled after the tag on master to continue iterating on them.

Also, update the hard-coded version string.

Change-Id: I0aa688ce067abfe8ae8ebe52a25c8514ec2c7e48
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194777
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ainar-g,2019-09-11 06:14:36,https://api.github.com/repos/golang/tools/git/commits/feee8acb394c170fe9eb4eb9f538b8877d9a3cd4,feee8acb394c170fe9eb4eb9f538b8877d9a3cd4,"all: fix more typos

Change-Id: I978ad5e1800ebfceb78aaced438331a8341715d4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194697
Reviewed-by: Toshihiro Shiino <shiino.toshihiro@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
jeremyfaller,2019-09-11 14:24:31,https://api.github.com/repos/golang/tools/git/commits/663385e6ef23682fcc082b0d557638b1f1cb3094,663385e6ef23682fcc082b0d557638b1f1cb3094,"cmd/compilebench: add more linker benchmarking

Change-Id: I84ac9637b9d4221f38acbd2bfe8e1d1fc3097f48
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194680
Run-TryBot: Jeremy Faller <jeremy@golang.org>
Reviewed-by: Austin Clements <austin@google.com>"
ianthehat,2019-09-09 13:28:25,https://api.github.com/repos/golang/tools/git/commits/16c5e0f7d110d27323e11cae5489d256bc6134d3,16c5e0f7d110d27323e11cae5489d256bc6134d3,"internal/lsp: process configuration options more thoroughly

Change-Id: Ic3e2f948f857c697564fa6ab02008444dd9392c7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194458
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-08-29 07:07:32,https://api.github.com/repos/golang/tools/git/commits/c9a5ac55f0a8797df9d242d85983930506f9b8d3,c9a5ac55f0a8797df9d242d85983930506f9b8d3,"go/packages: add a test case for golang/go#33374

Change-Id: Iea94f3fd4ec2faa67a26176250e20f98d693f91d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192260
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-09-10 17:26:49,https://api.github.com/repos/golang/tools/git/commits/ec76318e7978bf114e2ed06cb23c156683613323,ec76318e7978bf114e2ed06cb23c156683613323,"internal/lsp: treat completion documentation errors as actual errors

Also, handle *ast.StarExpr in the identifier code. This fixes a specific
case with deep completions and documentation.

Change-Id: I630ae4e8f1c123ba1fdea85e6862ae93396e2cd4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194564
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2019-09-10 20:48:19,https://api.github.com/repos/golang/tools/git/commits/7f5965fd77090ec78c1d93e9e6b97b7e2e5c5af9,7f5965fd77090ec78c1d93e9e6b97b7e2e5c5af9,"internal/imports: fix scanning GOROOT in module mode

Go 1.13 introduced a module in GOROOT/src. That triggered goimports to
think that it was an invalid module, usable only as a replace target,
because its declared module path ""std"" didn't match its apparent path
""src"". The stdlib is always in scope, so skip the needs-replace check
for GOROOT.

Fixes golang/go#34199

Change-Id: I1199378b940cfedc04e9a4e943c46b9ffdf18446
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194570
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-10 21:33:35,https://api.github.com/repos/golang/tools/git/commits/3e6e7c4239da85388d17ae22a34eb67c86525d72,3e6e7c4239da85388d17ae22a34eb67c86525d72,"internal/lsp: add ID to the package cache key

Our original caching plan was to use only the file ParseGoHandles as
cache keys to define a given package. However, because of package test
variants, we cannot rely on files alone. A package may have the exact
same set of files, but be a test variant. Add the ID to the key to avoid
clobbering entries in the cache.

Also, remove the unused metadata ID cache.

Change-Id: I4b33de1f83f6c769d23441e98a2a7324ff0fa1b0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194571
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2019-09-10 19:15:18,https://api.github.com/repos/golang/tools/git/commits/d0542c01b04d73cee88be0cd7343c19d9d157525,d0542c01b04d73cee88be0cd7343c19d9d157525,"internal/imports: add all interfaces in mkstdlib

In api/*.txt, interface declarations are represented with lines like:
  pkg container/heap, type Interface interface { Len, Less, Pop, Push, Swap }
or, when they have no exported methods:
  pkg go/ast, type Expr interface, unexported methods

The latter form confuses mkstdlib into thinking that it's a method
because of the extra comma, and then it skips the interface entirely.
Running this program is a matter of seconds once per release, so rather
than trying to fix the optimization, just remove it. The parsing logic
doesn't care about the extra lines.

And the corresponding change to the copy in lsp/testdata/unimported.

Updates golang/go#34199

Change-Id: Ic34b8a47537608401e4ef6683617d797f9f50f8a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194568
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
heschik,2019-09-10 19:12:22,https://api.github.com/repos/golang/tools/git/commits/df93a1b922ffe5f0a4cf6388b54c60cdc728762a,df93a1b922ffe5f0a4cf6388b54c60cdc728762a,"internal/imports: fix mkstdlib, run for go1.13

And the corresponding change to the copy in lsp/testdata/unimported.

Change-Id: I604ae6d5217356e19bb18f7cbe69a8dd71e5f23e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194567
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
alandonovan,2019-09-10 15:16:55,https://api.github.com/repos/golang/tools/git/commits/c1ad8a4bd1ba0adac45b88805aa387f496122397,c1ad8a4bd1ba0adac45b88805aa387f496122397,"go/analysis: copyedit doc.go

Change-Id: I586a698d5026805faa5ae637eebdae565f220ae3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194557
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2019-09-09 17:04:12,https://api.github.com/repos/golang/tools/git/commits/3d22a3cfff5f51e8f1f3dd41df13b43fef4e79ad,3d22a3cfff5f51e8f1f3dd41df13b43fef4e79ad,"internal/lsp: only build a view when we have its configuration

We now wait to build views until we have the options for that view,
and pass the options in to the view constructor.
The environment and build flags are now part of the view options.

Change-Id: I303c8ba1eefd01b66962ba9cadb4847d3d2e1d3b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194278
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-09-10 00:22:42,https://api.github.com/repos/golang/tools/git/commits/238129aa638afb6cf8cf56a290487ddd93c2fad7,238129aa638afb6cf8cf56a290487ddd93c2fad7,"internal/lsp: derive ASTs from type information

In the case of documentation items for completion items, we should make
sure to use the ASTs and type information for the originating package.
To do this while avoiding race conditions, we have to do this by
breadth-first searching the top-level package and its dependencies.

Change-Id: Id657be969ca3e400bb2bbd769a82d88e91865764
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194477
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-09 19:30:30,https://api.github.com/repos/golang/tools/git/commits/0673112484210f23155c2a43af63b23fc7762655,0673112484210f23155c2a43af63b23fc7762655,"internal/lsp: update to latest version of x/tools

The fix for golang/go#29313 just went in, so update so people can fetch
it more easily.

Change-Id: I60fda011dfdd62d5de429834a6692f6b21074f0d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194377
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-09-04 17:16:09,https://api.github.com/repos/golang/tools/git/commits/75be6cdcda0754c33b2469511cc02ea1e7b063fb,75be6cdcda0754c33b2469511cc02ea1e7b063fb,"internal/lsp: enable suggested fixes by default

Remove the wantSuggestedFixes flag, and run the flagged code
by default.

Add test cases for suggested fixes.
Generate a suggested fix to the assign analysis that suggests removing redundant assignments.
Fix the propagation of suggested fixes (using rstambler's code).

Change-Id: I342c8e0b75790518f228b00ebd2979d24338be3b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193265
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-09-07 00:17:48,https://api.github.com/repos/golang/tools/git/commits/dab579b76279eeb912423b62eadda0ff2334f3a4,dab579b76279eeb912423b62eadda0ff2334f3a4,"internal/lsp: re-enable deep completions and fuzzy matching

CL 193726 accidentally turned off deep completions and fuzzy matching by default.
Re-enabling them now.

Change-Id: Ia120766b3a72243efe9c398c0efd6d1a101d0e7f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194020
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-08-29 17:18:42,https://api.github.com/repos/golang/tools/git/commits/61375c9358722a15b67386a0b3ba8b36b80c303f,61375c9358722a15b67386a0b3ba8b36b80c303f,"go/packages: ignore any go list errors that seem to come from cgo

This may overtrigger if there are errors other than cgo errors in
the output, but in general, we can't parse the errors output by
cgo. Long term, we should fix go list to suppress cgo errors when
run with -e.

Fixes golang/go#33937

Change-Id: Iad7472e41eb9ad1cdee32098649be75764f05521
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192330
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-09-07 03:58:07,https://api.github.com/repos/golang/tools/git/commits/cdebb599451b63274c091a0b0593abfbff818468,cdebb599451b63274c091a0b0593abfbff818468,"internal/lsp: remove the GetToken and GetAST functions

Change-Id: Iddbdde5f47a31da9baab6539cd2b5bd858e7f811
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194057
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-09-06 21:07:41,https://api.github.com/repos/golang/tools/git/commits/27d1b4e4f3c75e4e2c92ae1b99a67c7f34185617,27d1b4e4f3c75e4e2c92ae1b99a67c7f34185617,"internal/lsp/diff: rewrite ApplyEdits to work with sub-line diffs

This replaces the definition of ApplyEdits to be more like that in
go vet -fix, so that we can apply the results of suggested fixes.

Change-Id: Ib5724139464954e3790bc51ed1edc3ce4b2115ff
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193959
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
zoumo,2019-09-08 06:42:38,https://api.github.com/repos/golang/tools/git/commits/81ca6dc79cc2dec30e4f7549e8d3293869113200,81ca6dc79cc2dec30e4f7549e8d3293869113200,"internal/lsp: fixed a bug where GOPROXY was set to GOROOT

Change-Id: I29802f65be1f048a43b0b016051d64d400040fe9
GitHub-Last-Rev: 21c19aa216696b17e03becb5591c570879ab46a8
GitHub-Pull-Request: golang/tools#152
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194197
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ainar-g,2019-09-08 16:10:01,https://api.github.com/repos/golang/tools/git/commits/5b82db07426dbac2c94df2e3a85e83f3026c088c,5b82db07426dbac2c94df2e3a85e83f3026c088c,"go/analysis: fix typos

Change-Id: I07235ffba66bf0f7ef0e1917c6f711d317c9ae02
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194139
Reviewed-by: Toshihiro Shiino <shiino.toshihiro@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
pjweinb,2019-09-07 21:01:26,https://api.github.com/repos/golang/tools/git/commits/fef9eaa9e42b9f5f0fb87822523507d5a1c709fa,fef9eaa9e42b9f5f0fb87822523507d5a1c709fa,"x/tools/gopls: convert to the august, 2019 version of the LSP protocol

The latest version of the LSP protocol introduces a number of changes.
It is now possible to indicate partial results and progress. request.ts
had to construct some new types (at the end of tsclient.go and tsserver,go)
to avoid using a struct for a formal parameter type.  Also,
instead of using the same type for many RPCs, most RPCs now have their own
types.

Change-Id: I095a3e872f42a9f851c01ca4e3c6ac6e32446042
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194177
Run-TryBot: Peter Weinberger <pjw@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
tklauser,2019-09-07 20:43:54,https://api.github.com/repos/golang/tools/git/commits/4c50eace5a905d039580217bf299d2e15c2a0149,4c50eace5a905d039580217bf299d2e15c2a0149,"all: add a space before +build in build tag comments

Add a space before build tag comments so it corresponds to the format
documented at https://golang.org/pkg/go/build/.

Change-Id: I72a0f72ca422f15688b2d7991f82b2361c21fb17
Reviewed-on: https://go-review.googlesource.com/c/tools/+/194138
Run-TryBot: Tobias Klauser <tobias.klauser@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Emmanuel Odeke <emm.odeke@gmail.com>"
stamblerre,2019-09-06 18:55:14,https://api.github.com/repos/golang/tools/git/commits/2ca718005c187b688247516b87f8da3b9d03e6b6,2ca718005c187b688247516b87f8da3b9d03e6b6,"internal/lsp: use protocol.TextEdits in suggested fixes

Change-Id: I8b454dd8c59839468ecfcb19b7edfa659e386b57
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193957
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
freeformz,2019-09-06 20:32:09,https://api.github.com/repos/golang/tools/git/commits/12febf440ab165c4216be22da05880e7fd2e968f,12febf440ab165c4216be22da05880e7fd2e968f,"internal/lsp/cache: detail why the err is ignored

As per slack discussion with Rebecca Stambler.
https://gophers.slack.com/archives/CJZH85XCZ/p1560289227072200

Change-Id: Iaa0f93045edd719e1a874ff6ad9bc8d9e51543d5

Change-Id: Iaa0f93045edd719e1a874ff6ad9bc8d9e51543d5
GitHub-Last-Rev: b54997de95b10d01efe4722a28aea376795ba83f
GitHub-Pull-Request: golang/tools#115
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181778
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-09-06 00:04:28,https://api.github.com/repos/golang/tools/git/commits/8159a2d3d69b93c063d265c031705c4bf8855419,8159a2d3d69b93c063d265c031705c4bf8855419,"internal/lsp: use protocol.Position for textDocument/prepareRename

Change-Id: Ic896321dff17e788d46dae2efc12ecbf2b2f53dd
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193723
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-06 00:14:09,https://api.github.com/repos/golang/tools/git/commits/73ad5c96a1f6494c2daecada714d53ac8d51a5d3,73ad5c96a1f6494c2daecada714d53ac8d51a5d3,"internal/lsp: switch folding range to protocol ranges

Change-Id: I899b3cd89901b99a5c65a5be79ac561289506623
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193724
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-05 22:54:05,https://api.github.com/repos/golang/tools/git/commits/04840ef8f354469960ddc08905bfc0fd625238fa,04840ef8f354469960ddc08905bfc0fd625238fa,"internal/lsp: switch to using protocol positions for document symbols

Change-Id: I8e550b753328b8e536bff3bb61b4ff4486fcd4f9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193722
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-05 20:58:50,https://api.github.com/repos/golang/tools/git/commits/bb4ee55d3d93e572a01631df9de2f3e34619ad75,bb4ee55d3d93e572a01631df9de2f3e34619ad75,"internal/lsp: change to protocol.TextEdit for formatting

The next in the sequence of CLs to convert to using protocol positions.

Change-Id: Ib3421bfc73af1b546b60c328ca66528cb9031e19
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193719
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-09-06 04:17:36,https://api.github.com/repos/golang/tools/git/commits/f1f4a3381fbd0f7a3eaac83bd1a57f5c78273705,f1f4a3381fbd0f7a3eaac83bd1a57f5c78273705,"internal/lsp: move configuration options to structs

This cl is the first in a set that change the configuration behaviour.
This one should have no behaviour differences, but makes a lot of preparatory changes.
The same options are set to the same values in the same places.
The options are now stored on the Session instead of the Server
The View supports options, but does not have any yet.

Change-Id: Ie966cceca6878861686a1766d63bb8a78021259b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193726
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
hartzell,2019-09-06 17:19:11,https://api.github.com/repos/golang/tools/git/commits/fa2c3f315e4ada13a06bac79087b248b10c122e6,fa2c3f315e4ada13a06bac79087b248b10c122e6,"internal/telemetry/export/ocagent: fix typo in comment

Change-Id: I26a6950518441850481f66d0c8844b16e908cffd
GitHub-Last-Rev: f83d960fddfa3ac65a7b766f7fc549ef80de560d
GitHub-Pull-Request: golang/tools#151
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193917
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
pjweinb,2019-09-03 17:06:23,https://api.github.com/repos/golang/tools/git/commits/bc9f4f258ada481d391838566f2827de3e0cc111,bc9f4f258ada481d391838566f2827de3e0cc111,"x/tools/gopls: fix race condition in logging

The existing code uses maps to associate requests with responses. This
change adds locking to avoid simultaneous and illegal reads and writes.

Change-Id: I7bfb21cad6b37ac25e4f6946cb660d82f23c2b80
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193058
Run-TryBot: Peter Weinberger <pjw@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-30 18:11:42,https://api.github.com/repos/golang/tools/git/commits/93dcc2f048f5c4d0369b73a355ba598c8e61e48d,93dcc2f048f5c4d0369b73a355ba598c8e61e48d,"internal/lsp: fold contained lines when lineFoldingOnly

Folding ranges need to be computed to present folding ranges that make
sense when lineFoldingOnly is true. This change computes the folding
ranges to include the lines that are contained within the start and end
parenthesis/braces when applicable.

Folding ranges are not returned when the contained nodes begin or end on
the same lines as the parenthesis/brace. This is to avoid misleading
folding ranges like the following in unformatted code:

if true {
	fmt.Println(""true"") } else {
	fmt.Println(""false"")
}
---folding ""if true {}""--->
if true {
	fmt.Println(""false"")
}

Change-Id: I2931d02837ad5f2dd96cc93da5ede59afd6bcdce
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192678
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-09-05 21:34:00,https://api.github.com/repos/golang/tools/git/commits/4f238b926e10322727e514f9ec7635d21f9a7b8f,4f238b926e10322727e514f9ec7635d21f9a7b8f,"internal/lsp: fix deadlock between f.mu and f.handleMu

This change propagates the file handle through the type-checking
process, ensuring that the same handle is used throughout. It also
removes the ordering constraint that f.mu needs to be acquired before
f.handleMu. To make this more correct, we should associate a cached
package only with a FileHandle, but this relies on correct cache
invalidation, so that will be addressed in future changes.

Updates golang/go#34052

Change-Id: I6645046bfd15c882619a7f01f9b48c838de42a30
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193718
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-09-05 18:09:42,https://api.github.com/repos/golang/tools/git/commits/1d492ad1787f2cd942139a1e26160f9babe60bf1,1d492ad1787f2cd942139a1e26160f9babe60bf1,"internal/lsp/cache: add additional spans for tracing

Change-Id: I6935776293e55fb723801132592e7806d87f3930
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193637
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-05 20:29:59,https://api.github.com/repos/golang/tools/git/commits/fd6a59f26da9610ac117c45edf75c3163f95b0f1,fd6a59f26da9610ac117c45edf75c3163f95b0f1,"internal/lsp/cache: fix race condition in type-checking

We had previously been returning the metadata map in a few of the
loading functions. We don't actually need the map; we only need the
actual metadata. The race was caused by the return of the f.meta field
in a few functions, unprotected by the f.mu lock. This was likely a
result of the f.mu lock being added after the fact.

Fixes golang/go#33978

Change-Id: Ice5778d9d6dea23304237baf321b55d4fee6599c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193717
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
heschik,2019-09-04 18:24:10,https://api.github.com/repos/golang/tools/git/commits/6b3d1c9ba8bf7ce410f6b490852ec54953383362,6b3d1c9ba8bf7ce410f6b490852ec54953383362,"internal/imports: ignore invalid mod cache entries

If someone puts something silly in their module cache, ignore it instead
of crashing.

Fixes golang/go#34027.

Change-Id: I114e10010bd6bc483f865a628dc2b331c3a34a11
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193268
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-05 15:27:06,https://api.github.com/repos/golang/tools/git/commits/2a03e9e3a71aec549198563ca376881717f523d6,2a03e9e3a71aec549198563ca376881717f523d6,"internal/lsp: avoid using the importer's context as much as possible

There are issues with contexts being propagated through the calls to
type-checking, and I think that a lot of these were related to us using
the importer's context. Instead, we should propagate the context from
the store as much as possible - only using the importer's context when
absolutely necessary (in the call to Import). This change propagates the
correct context where possible.

Updates golang/go#34103

Change-Id: I4bdc37d014ee1f775b720c9e7ad8abffffcf6ba3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193480
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-29 06:43:58,https://api.github.com/repos/golang/tools/git/commits/adb45749da8e536f7cc9ab862ecba1bd0235c192,adb45749da8e536f7cc9ab862ecba1bd0235c192,"internal/lsp: turn on completion documentation by default

This feature has been in an experimental state for a long enough time
that I think we can enable it by default at master.

Change-Id: I9bbb8b41377719f0e97f608f6e5163a883a176b3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192259
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-04 21:23:20,https://api.github.com/repos/golang/tools/git/commits/df305b82d218535fccc89e230f23fef4c00302fe,df305b82d218535fccc89e230f23fef4c00302fe,"internal/lsp: fix declarations in references

Fixes golang/go#34087

Change-Id: I854c03cd124fe783f838dc53ee76cec5fffa563b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193379
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-09-04 19:30:42,https://api.github.com/repos/golang/tools/git/commits/70bfb60283fe5570e0925338ba880ef29421969a,70bfb60283fe5570e0925338ba880ef29421969a,"internal/lsp: fix deadlock in type-checking

Fixes golang/go#33992

Change-Id: I4e27501d1c619887038dfa77cc9cf064c966ff43
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193317
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-09-04 20:52:49,https://api.github.com/repos/golang/tools/git/commits/958971f5c2bf6dd2927330312acbda0ffd3758a0,958971f5c2bf6dd2927330312acbda0ffd3758a0,"go/ssa/interp: skip recover2 testcase

The test case (taken from the go distribution itself) seems to be broken
when run against tip. Disable it when run against tip.

Updates golang/go#34089

Change-Id: I47d2e12ca39bc060fe0a0c967e95b900bdd0d725
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193377
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-09-04 21:04:06,https://api.github.com/repos/golang/tools/git/commits/a4fdb3a8b281700221c3bd18a4e4ea48d2becf10,a4fdb3a8b281700221c3bd18a4e4ea48d2becf10,"gopls: update x/tools version

Change-Id: Ibf3c3381a3ecb3015b44436b7e28b615fab00bf4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/193378
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-29 23:03:23,https://api.github.com/repos/golang/tools/git/commits/be0da057c5e3c2df569a2c25cd280149b7d7e7d0,be0da057c5e3c2df569a2c25cd280149b7d7e7d0,"internal/lsp: return only multiline ranges when lineFoldingOnly

If the client registers with foldingRange.lineFoldingOnly = true, only
return folding ranges that span multiple lines. Do this as they are
computed, so that if other filtering is applied later, we do not include
ranges that would go unused by the client anyway.

Change-Id: I27ea24428d25f180e26892de0f6d16c211225bf7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192477
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-08-29 19:28:51,https://api.github.com/repos/golang/tools/git/commits/afe7f8212f0d48598f7ba258eba2127cbfb7c3e9,afe7f8212f0d48598f7ba258eba2127cbfb7c3e9,"internal/lsp: add tests for nested folding ranges

FoldingRanges may be nested. Test nested folding ranges by separating
out the folding ranges by nested level and checking each level.

Change-Id: I12c72daa3e6c6b9d4959209b3a41b27e2b59866f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192398
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
KarthikNayak,2019-09-02 18:59:03,https://api.github.com/repos/golang/tools/git/commits/a56fc290d6e81df358b08580adad956da56350a9,a56fc290d6e81df358b08580adad956da56350a9,"gopls: fix typo in the design document

Change-Id: I0ae8f7c9c02660111236ba88eba8faa69a974ab8
GitHub-Last-Rev: d428dbf26672646c4d25ded71e47a710279a8444
GitHub-Pull-Request: golang/tools#149
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192898
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-08-30 22:10:08,https://api.github.com/repos/golang/tools/git/commits/573d9926052aeaeb5fbebcd3cf10d994c9c6d4f5,573d9926052aeaeb5fbebcd3cf10d994c9c6d4f5,"go/analysis/doc: fix stuff that was left out of the previous commit

I forgot to add the section on supplying AST nodes directly.

Change-Id: Ibf9930693cf32542832b21a95621224c8d68e0f2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192682
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-08-30 22:10:08,https://api.github.com/repos/golang/tools/git/commits/8fa7b020d0072a8e85993910922619509b92690a,8fa7b020d0072a8e85993910922619509b92690a,"go/analysis/doc: provide more motivation for suggestedfix design

Change-Id: I8139010883357616bf6bfd76b62debe00267164b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192681
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-06-27 20:41:53,https://api.github.com/repos/golang/tools/git/commits/56125e7d709e70615e1d28fd9634fc76810c1a93,56125e7d709e70615e1d28fd9634fc76810c1a93,"go/packages: make sure to request dependencies when we NeedTypesInfo

If NeedTypesInfo, go/packages needs to do typechecking itself so it can
associate type info with the AST. To do so, we need the export data
for dependencies, which means we need to ask for the direct dependencies.
go list has no way to ask for direct dependencies, so we'll set -deps
in the command line to go list. (We need to type check the transitive
dependencies to get export data anyways so this shouldn't be that
much worse than a hypothetical mode that only did work for direct
dependencies. The main issue will be the I/O required (which could (?)
still be a problem?).)

On top of that, we need to make sure that we *don't* ask for sources for
those direct dependencies (which we might have done before) because
that would result in trying to type check the dependency packages
from source, which we'd need *those* packages' dependencies' export
data and transitive sources for and so on.

uggggggggggggggh

Fixes golang/go#32814

Change-Id: I8d95b320beea556bdf44c625607d9e7d2cc188e5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184165
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ajjensen13,2019-08-29 03:53:48,https://api.github.com/repos/golang/tools/git/commits/2161848f5abebc443310f03cf63ff1d75b6cbe47,2161848f5abebc443310f03cf63ff1d75b6cbe47,"internal/lsp/source: fixes completion for slice literals of pointers

The existing implementation did not suggest struct field names
when running completion from within a slice literal of
pointers. Now, struct field names are suggested in that case.

Fixes golang/go#33211

Change-Id: I6028420a9a789846b070fcc6e45ec89dc4d898d4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192277
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bcmills,2019-08-30 16:02:01,https://api.github.com/repos/golang/tools/git/commits/311ec0312ec691aab862c62ae51cb3dbe04010d6,311ec0312ec691aab862c62ae51cb3dbe04010d6,"all: skip more memory-intensive tests on linux-arm

Updates golang/go#32834

Change-Id: I9844dc09d9a6eb2e79a0b28a1e69ed018bfa1bff
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192578
Run-TryBot: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bcmills,2019-08-30 15:02:08,https://api.github.com/repos/golang/tools/git/commits/df13fa7beb7bd19b13183d68337a0798432d6e36,df13fa7beb7bd19b13183d68337a0798432d6e36,"all: do not write to testdata directories

I got tired of spurious 'git' diffs while a 'go test' was running, so
I fixed the test that produced the diffs. (We need to do that anyway
in order to run them in the module cache, plus it's just good hygiene
not to have tests interfering with each other's sources.)

Tested using:

	$ chmod -R ugo-w . && go test ./...; chmod -R u+w .

Updates golang/go#28387

Change-Id: Ie17e31aecf0e3cb022df5503d7c443000366a5c6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192577
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bcmills,2019-08-29 20:22:26,https://api.github.com/repos/golang/tools/git/commits/c17b040389b9bd32f56273cb5ef7b727bda5155c,c17b040389b9bd32f56273cb5ef7b727bda5155c,"all: skip tests if required tools are not found

Fixes golang/go#33950

Change-Id: Iefcb757e773bc052793611c099c25a457fd7e243
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192400
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
leitzler,2019-08-28 20:02:38,https://api.github.com/repos/golang/tools/git/commits/f340ed3ae274cf744edc12c671194b31a12fe4ac,f340ed3ae274cf744edc12c671194b31a12fe4ac,"x/tools/gopls: add fallback to default GOPATH if missing

The ""Organize imports"" code action uses internal/imports that needs a
valid GOPATH set. Since Go 1.8 setting GOPATH manually is not required,
and if it isn't set gopls will sometimes fail to properly import
packages.

This CL sets GOPATH to the default if the env var GOPATH isn't set.

Fixes golang/go#33918.

Change-Id: Ib63a26a801e15af730197999de4d1d4901694a30
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191600
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-07-19 16:41:29,https://api.github.com/repos/golang/tools/git/commits/340205e581e5dc00b878f201b7d712686d344c7a,340205e581e5dc00b878f201b7d712686d344c7a,"internal/imports: skip scanned module cache dirs

Packages found in the module cache do not change. When we encounter a
directory we have already processed in the module cache, skip that
directory and add the packages that have already been computed.

Change-Id: Ib1bf0bf22727110b8073b415b145034acceb6787
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186921
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
bcmills,2019-08-29 19:24:41,https://api.github.com/repos/golang/tools/git/commits/5d7988b71de217af38e495525e0083cc425c3e5a,5d7988b71de217af38e495525e0083cc425c3e5a,"go/packages,internal/lsp: skip memory-intensive tests on the linux-arm builder

Updates golang/go#32834
Updates golang/go#30309

Change-Id: I75edb84776216523d00fadfb2e2d94ae08533c03
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192336
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
suzmue,2019-07-19 19:21:23,https://api.github.com/repos/golang/tools/git/commits/ee1fc86af278c9cc9211217ad2c8ca8f529bcf63,ee1fc86af278c9cc9211217ad2c8ca8f529bcf63,"internal/imports: use cache of mod cache pkgs in find packages

To check if a package is in a module that is in scope, the module
resolver checks if there are Go files that would be included in a
package in the directory matching the import path in scope.

If this directory is in the module cache and we have saved it as a
package, we know this directory contains Go files, and do not have to
read the directory.

Change-Id: I7c9365ce42c760ab95bc68b036212120895c89fb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186922
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
suzmue,2019-08-20 19:39:18,https://api.github.com/repos/golang/tools/git/commits/857b4dd9f8ebfc4d4ef02f3027f2526810b0428c,857b4dd9f8ebfc4d4ef02f3027f2526810b0428c,"internal/imports: avoid walking dir for mod file in mod cache

The root of the module containing a package in the module cache can be
determined by looking at the directory path. Use this instead of
scanning up the file tree to find the mod file of a package from a
module cache. The go command prunes nested modules before populating
the module cache, so there is only one go.mod within each module.

Change-Id: I434a04350ef3ca2f44b7ffd08ccc5afe4209654f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190906
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
suzmue,2019-08-22 17:31:03,https://api.github.com/repos/golang/tools/git/commits/c9403068c1cd1b80a777f3ffce656fa17a45e51c,c9403068c1cd1b80a777f3ffce656fa17a45e51c,"internal/lsp: add prepare rename support

Prepare rename gets the range of the identifier to rename. Returns an
error when there is no identifier to rename.

Change-Id: I5e5865bc9ff97e6a95ac4f0c48edddcfd0f9ed67
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191170
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-08-29 01:48:29,https://api.github.com/repos/golang/tools/git/commits/114c575556d67ac3fcace911de61ee98a3d1eedd,114c575556d67ac3fcace911de61ee98a3d1eedd,"internal/lsp: add foldingRange support

Support textDocument/foldingRange request. Provide folding ranges for
multiline comment blocks, declarations, block statements, field lists,
case clauses, and call expressions.

Fixes golang/go#32987

Change-Id: I9c76e850ffa0e5bb65bee273d8ee40577c342f92
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192257
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-08-29 20:07:50,https://api.github.com/repos/golang/tools/git/commits/88604bcfcf168d1bb75636f2237e59db187e4eb1,88604bcfcf168d1bb75636f2237e59db187e4eb1,"go/packages: set GOPACKAGESDRIVER=off for all the tests

Tests that use packagestest.Export already have GOPACKAGESDRIVER=off,
make sure the rest of the tests are setting it off to make sure the
value of GOPACKGESDRIVER doesn't affect tests that are run locally.

Fixes golang/go#33956

Change-Id: If14dce17f413f46a3d36cdf2679e992ec9147a53
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192397
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-08-29 03:32:52,https://api.github.com/repos/golang/tools/git/commits/bce6695301c7de1d5f5852d2c5ed425058fd68be,bce6695301c7de1d5f5852d2c5ed425058fd68be,"go/analysis/passes/printf: handle a potential nil pointer

Fixes golang/go#33911

Change-Id: I9351bb6d9e040b39e4ade10846da5d59b93c3087
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192258
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
hajimehoshi,2019-08-29 15:41:45,https://api.github.com/repos/golang/tools/git/commits/f4d8977246093ee4389026a1f5e51666d7371b54,f4d8977246093ee4389026a1f5e51666d7371b54,"go/packages: ignore Cgo compilation error correctly

Before this change, Cgo error was ignored only when the number of
the error message lines was exactly 2. There are many environments
where that condition did not work well.

This CL removes this condition. This is not a perfect solution
because the error message can include other message than Cgo.
However, this should work in most cases.

Updates golang/go#33462
Fixes golang/go#33859

Change-Id: I606fb9eab3cd1e73b88ac1add1a82aff53f36708
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191942
Run-TryBot: Hajime Hoshi <hajimehoshi@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
pjweinb,2019-08-27 16:52:32,https://api.github.com/repos/golang/tools/git/commits/d151469ab045740f351d3f2079020e9907956116,d151469ab045740f351d3f2079020e9907956116,"x/tools/gopls: reimplement rpc logging at a lower level

Over time the existing implementation became buggy. This implementation
logs close to where data is read or written from the stream connected
to the client. As is required, the log records are from the point of view
of the client.

Fixes golang/go#33755

Change-Id: I91150c697dc2cdb6d3eecbbed7a8d1805a7c476d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191963
Run-TryBot: Peter Weinberger <pjw@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-27 04:26:45,https://api.github.com/repos/golang/tools/git/commits/42f498d34c4d67145e3950193a8f23db9328e7f3,42f498d34c4d67145e3950193a8f23db9328e7f3,"internal/lsp: use protocol.Ranges for source.Identifier

Change-Id: I42cb957e3c1676e2ec7e3f50dd5e3613f3dd9555
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191880
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-08-28 21:19:44,https://api.github.com/repos/golang/tools/git/commits/aed303cbaa74a4d974e6e79dae05b2901ff009e8,aed303cbaa74a4d974e6e79dae05b2901ff009e8,"go/analysis/cmd/vet: remove

The existence of two versions of vet, namely this one and the one in the
Go distribution, creates confusion. Remove this one.

Fixes golang/go#31886

Change-Id: I351ad95329088f91f6a88452ee8e3654849f6ef2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/192177
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-14 19:24:21,https://api.github.com/repos/golang/tools/git/commits/a0cf054a4555933c163d9bff1b5395fa6de484ac,a0cf054a4555933c163d9bff1b5395fa6de484ac,"internal/lsp: initialize CodeActionProvider with supported actions

Send the code action kinds that we support, if codeActionLiteralSupport
is specified. Editors may use the CodeActionKinds that we support to
determine UI layout for example.

Change-Id: Iee368aa02c26f4395bb2894593ef38d84d3283b7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191620
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-09 14:35:27,https://api.github.com/repos/golang/tools/git/commits/062dbaebb618132bda6dd6e3192a7b857ea212d0,062dbaebb618132bda6dd6e3192a7b857ea212d0,"cmd/gopls: add documentation

Much of this documentation has been collated from other sources,
but this pulls it all into one coherent and public structure in
a way that allows us to peer review changes.

Change-Id: Ic24a59bb92b27ec85d2f57affcf2eb396c9de3c0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191741
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
jan-xyz,2019-08-22 17:55:05,https://api.github.com/repos/golang/tools/git/commits/11cc3c157ee1e29a8c604e80168e2b80ddf7b9cf,11cc3c157ee1e29a8c604e80168e2b80ddf7b9cf,"internal/lsp: add additional information when logging errors

Fixes golang/go#33499

This logs additional information compatible with `golang.org/x/xerrors` like the frames.

Change-Id: If25c3979cf294dbe55b0e3d9d999b24c1ff8900d
GitHub-Last-Rev: 210fa40bd29de99a9052eb67d197154f4bd74e10
GitHub-Pull-Request: golang/tools#144
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189344
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dominikh,2019-08-26 12:22:23,https://api.github.com/repos/golang/tools/git/commits/07722704da13b34f76beebaf51bf2e372727ae6d,07722704da13b34f76beebaf51bf2e372727ae6d,"go/internal/gcimporter: make safe for concurrent use

Change-Id: Ie1de8a92ffbe0927dc4afb12b17cd072b633092b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191599
Run-TryBot: Dominik Honnef <dominik@honnef.co>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
tklauser,2019-08-22 07:30:48,https://api.github.com/repos/golang/tools/git/commits/95c3470cfb70bba4d4d578afaf29e0b4b307e3b3,95c3470cfb70bba4d4d578afaf29e0b4b307e3b3,"all: replace reference to plan9.bell-labs.com with 9p.io

Change-Id: I5fbe6f0f4a3bf99841fcbb4b47101ff5556db50d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191297
Run-TryBot: Tobias Klauser <tobias.klauser@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
kevinburke,2019-02-17 02:45:48,https://api.github.com/repos/golang/tools/git/commits/d72b05d2b1b6a1e6d58527b2e45e597b662af52e,d72b05d2b1b6a1e6d58527b2e45e597b662af52e,"godoc: apply gofmt

Using Go 1.12.9.

Change-Id: I3df42ca98e9af19742ce4d528eea453ef541f892
Reviewed-on: https://go-review.googlesource.com/c/tools/+/162997
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
stamblerre,2019-08-20 20:36:06,https://api.github.com/repos/golang/tools/git/commits/c2567a220953b182b16e41598083a188a394ebdb,c2567a220953b182b16e41598083a188a394ebdb,"go/analysis: handle common nil pointers

Updates golang/go#33727, golang/go#33689

Change-Id: Ie32ac4efc9fe0d7b08fcff3feb44b28d83df942d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190908
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
suzmue,2019-08-22 02:40:36,https://api.github.com/repos/golang/tools/git/commits/c4a336ef6a2feb97e86b0c7ebdd500717074f42b,c4a336ef6a2feb97e86b0c7ebdd500717074f42b,"internal/lsp: support renaming of import spec

This change allows renamings of the name of an import spec.
Since there is not always explicit identifier available to select and
rename, allow renaming packages from positions within the import spec.

Change-Id: I0a8aaa92c26e1795ddb9c31a1165b2f2ee89aa34
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191165
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
AndersonQ,2019-08-23 09:09:32,https://api.github.com/repos/golang/tools/git/commits/aa644d2adf2a0206508fa6a8f9de0e726dddf77e,aa644d2adf2a0206508fa6a8f9de0e726dddf77e,"x/tools/cmd/stringer: document -linecomment in the GoDoc

Fixes golang/go#29867
Change-Id: I0328a97c9e2ee4b42a0b0d2b9948bf69a6ee3322
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191309
Reviewed-by: Rob Pike <r@golang.org>"
andybons,2019-08-22 18:56:02,https://api.github.com/repos/golang/tools/git/commits/b1e2c8edcefde75c7687c448a1ae9f07944fd462,b1e2c8edcefde75c7687c448a1ae9f07944fd462,"cmd/getgo/server: update to go112 GAE runtime

Change-Id: Ib8a301da7ce32ece3fe15d7cbecddeaf380ec43a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191377
Reviewed-by: Katie Hockman <katie@golang.org>"
suzmue,2019-08-21 23:36:09,https://api.github.com/repos/golang/tools/git/commits/71f556f074d4f3c11c9e0cb2ec3317317e8393a5,71f556f074d4f3c11c9e0cb2ec3317317e8393a5,"internal/lsp: use the explicit import spec name as ident

When there is an explicit name for an import spec, treat it as its own
identifier, separate from the import path.

Example:
	import h ""hello""

The name h is defined in that import spec, not in the package hello
it contains its own references. If asked about a position within the
import path, continue treating that as referencing the imported package.
If the position is within the name, use the identifier there that is
local to that file.

This change allows for go to definition of the explicit name to point to
itself, find all references from the import spec, and rename the
explicit name from the import spec.

Change-Id: Ia1d927a26e73f2dc450d256d71909c006bdf4c37
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191164
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-21 22:13:42,https://api.github.com/repos/golang/tools/git/commits/fc82fb2afd64396b05ea9aa0bccd6e8f2257b154,fc82fb2afd64396b05ea9aa0bccd6e8f2257b154,"internal/lsp: return error when renaming within an import spec

Since renaming an identifier within an import spec is not yet supported,
return an error when this is encountered. These idents from the import
spec have a nil declaration object.

Import paths that contain '.' or '/' are caught by the valid identifier check
avoiding the crash, but import paths such as ""fmt"" are not as fmt is a
valid identifier. This change checks if i.decl.obj is nil and returns an error
if it is to avoid the crash.

Fixes golang/go#33768

Change-Id: I4e757b42bedffd648fc821590e4a383826200dc3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/191163
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-16 21:05:40,https://api.github.com/repos/golang/tools/git/commits/547ecf7b1ef191ac7fb91078460aa55f0fb4416d,547ecf7b1ef191ac7fb91078460aa55f0fb4416d,"internal/lsp: use protocol.Range in completion items

This change switches Completion to use protocol positions instead of
token.Pos.

Change-Id: I012ce03c9316d8363938dd0156f485982b7e04fe
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190600
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-08-16 21:29:19,https://api.github.com/repos/golang/tools/git/commits/3aeeb259764d7901ae27a44eac15fab3f6129c5c,3aeeb259764d7901ae27a44eac15fab3f6129c5c,"internal/lsp: unlabel context, log errors when canceled

Updates golang/go#33678

Change-Id: I844d6599a3e0ae9594dda1abaebe938402b65822
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190601
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-02 18:05:22,https://api.github.com/repos/golang/tools/git/commits/324b35332a02709111b444669e3fa0309b327559,324b35332a02709111b444669e3fa0309b327559,"internal/imports: save information about the module cache

The module cache can only be added to, so any information discovered
about directories that are within a module in the module cache will
not change. Store the information we have discovered about the module
cache.

Updates #32750

Change-Id: I56c88f03f6a364221198fb032b139208497cd0e5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188762
Reviewed-by: Heschi Kreinick <heschi@google.com>"
suzmue,2019-08-19 16:43:15,https://api.github.com/repos/golang/tools/git/commits/15fda70baffdaf33960a0c82145a5d020cd802fd,15fda70baffdaf33960a0c82145a5d020cd802fd,"internal/lsp: test adding imports for package statements with comments

Test that having a comment at the start of a file allows imports
to be added correctly.

Updates golang/go#33721

Change-Id: Id1673c2509537413710b73261ad2a59afe06b93f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190800
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-16 19:02:11,https://api.github.com/repos/golang/tools/git/commits/d308a98e2e82cd44144bc2a94c2309b99bc8dc09,d308a98e2e82cd44144bc2a94c2309b99bc8dc09,"internal/lsp: prefer inserting imports into existing blocks

Insert imports into existing multiline import declarations when
possible.

Logic for choosing where to insert taken from
golang.org/x/tools/go/ast/astutil.

Change-Id: Ie5ad96d5e3d5db2e92a2c05a6104d14a4a192ed3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190598
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-16 17:49:17,https://api.github.com/repos/golang/tools/git/commits/6889da9d54793ea182dd07be58824cf86bf0746b,6889da9d54793ea182dd07be58824cf86bf0746b,"internal/lsp: separate out getMapper function

This is a super minimal change that will simplify the diffs for when I
actually delete the getMapper function.

Change-Id: I16984b344c87b3645fd451668b6ea747c5be12ab
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190557
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-14 21:25:47,https://api.github.com/repos/golang/tools/git/commits/caa95bb40b630f80d344d1f710f7e39be971d3e8,caa95bb40b630f80d344d1f710f7e39be971d3e8,"internal/lsp: add completions of unimported std lib pkgs

Unimported packages may be suggested as completion items. Since these
are not yet imported, they should be ranked lower than other candidates.

They also require an additional import statement to be valid, which is
provided as an AdditionalTextEdit.

Adding this import does not use astutil.AddNamedImport, to avoid
editing the current ast and work even if there are errors. Additionally,
it can be hard to determine what changes need to be made to the source
document from the ast, as astutil.AddNamedImport includes a merging
pass. Instead, the completion item simply adds another import
declaration.

Change-Id: Icbde226d843bd49ee3713cafcbd5299d51530695
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190338
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-08-15 00:12:18,https://api.github.com/repos/golang/tools/git/commits/a857023c21909dd70c5b3f3df068e1ffffdf8291,a857023c21909dd70c5b3f3df068e1ffffdf8291,"internal/lsp: use protocol.Range for diagnostics instead of span.Span

This is the first in a series of many changes that will change the API
of the source package to use different types for positions. Using
token.Pos is particularly fragile, since the pos has to refer to the
specific *ast.File from which it was derived.

Change-Id: I70c9b806f7dd45b2e229954ebdcdd86e2cf3bbbb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190340
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-16 16:23:59,https://api.github.com/repos/golang/tools/git/commits/d5940c88eb64d71eb1c2d8a638569b1ac7cb66fb,d5940c88eb64d71eb1c2d8a638569b1ac7cb66fb,"internal/lsp: return rename errors for one package only

Rename checks all of the packages that may be affected for conflicts. An
error in any of them leads to renaming error. Returning errors from
multiple packages may be confusing (for example, when there is a test
variant of a package and the same error appears twice). This change
stops after an error is found and returns that error instead of
continuing to search.

Change-Id: Ifba1feddbf8829d3aad30309154d578967e05a36
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190416
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-08-12 21:50:58,https://api.github.com/repos/golang/tools/git/commits/d0b4265052f070e4c4338dfc87688bec63983279,d0b4265052f070e4c4338dfc87688bec63983279,"internal/imports: get candidate imports

This exposes the candidate imports that are discovered, even if there is
not a particular reference that requires it to be imported. Currently,
this only produces results for standard library packages.

This is useful for autocompletion on unimported packages.

Change-Id: Iafd883153d451a0ef1dae29b24d4d48530c855f7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189999
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
stamblerre,2019-08-15 15:35:00,https://api.github.com/repos/golang/tools/git/commits/256244171580ced85d318eef79d5bd59e6fb338b,256244171580ced85d318eef79d5bd59e6fb338b,"internal/lsp: propagate hoverKind to completion documentation

Fixes golang/go#33653

Change-Id: Ia45e4f4b7377681619303a6d414d9b9de3143c01
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190400
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-08-15 20:03:47,https://api.github.com/repos/golang/tools/git/commits/3100af0b0e07a95e0f581895fd6a47a1b9db8f01,3100af0b0e07a95e0f581895fd6a47a1b9db8f01,"internal/lsp: label context cancellation errors

This change will just make it a bit easier to debug the context
cancellation errors.

Change-Id: I580751ac04e3357031678eb31914828029c96e4b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190412
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
svanharmelen,2019-08-15 12:54:27,https://api.github.com/repos/golang/tools/git/commits/d87e9bbada1ffc4e8a44c415bc9b5b8e0110b61b,d87e9bbada1ffc4e8a44c415bc9b5b8e0110b61b,"internal/lsp: limit concurrent file reads

We need to limit the concurrent file reads to prevent `too many open
file` errors. The first attempt to solve this was done in change 189437,
but this change turned out to be incorrect.

So this change reverts the changes made in change 189437 and instead
adds an new semaphore around the `nativeFileHandle.Read` method.

The limit is currently set to half of the lowest open file system limit
of *nix, Windows and MacOS system (their respective limits are 1024, 16384,
and 256).

Change-Id: I27d741e3a3c36eb11bfa7457575f5d5831c06ad7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190417
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
suzmue,2019-08-15 14:29:18,https://api.github.com/repos/golang/tools/git/commits/9065c182e3b630a18ed9d858055bd9f0a70e5775,9065c182e3b630a18ed9d858055bd9f0a70e5775,"internal/lsp: fix bug renaming local vars with test files present

This fix adds all packages to the renamer packages map.

Renaming performs checks on each package to make sure there are no
conflicts. If there are multiple packages, each package needs to be
checked. The packages were being incorrectly added to the map and were
all being put under a single key.

Fixes golang/go#33664

Change-Id: I68466ce34ac49b700ce6d14ce0b53e2795926fa9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190399
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-08-12 18:56:31,https://api.github.com/repos/golang/tools/git/commits/ea4142463bf318ea636acb7d053d0c3ebbe51e47,ea4142463bf318ea636acb7d053d0c3ebbe51e47,"internal/imports: merge import declarations

When an import is added to the ast, the import declarations are merged
together into the first import declaration. Since this is a part of
the formatting functionality of goimports, do this during formatting
regardless.

The merging pass was added to astutil.AddNamedImport in order to address
issue golang/go#14075. This joined imports from other blocks into the first
import declaration, so that a single block of imports isn't split across
multiple blocks.

This functionality is more of a formatting change than a fix imports
change, in line with sorting the imports, which occurs even when
FormatOnly. The formatting was only applied when an import was added
(not renamed or deleted). This change makes formatting by goimports
more consistent across runs and is not dependent on the exact fixes
that need to be applied.

Change-Id: Icb90bf694ff35e2d6405a3d477cf82fcd3e697e0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189941
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
suzmue,2019-08-02 17:04:42,https://api.github.com/repos/golang/tools/git/commits/578fe56564c48735981368f97bfca4cb2f41c78a,578fe56564c48735981368f97bfca4cb2f41c78a,"internal/imports: use the resolver to load exports

Have the imports resolvers load the exports for packages. This allows
each resolver to provide its own implementation of loading exports,
beyond reading from the directory.

Change-Id: I813f2ca59271a1698874556e8771243ac008f46f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188759
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
suzmue,2019-08-12 22:26:35,https://api.github.com/repos/golang/tools/git/commits/4cb0cfd181b672ef301b82e4480025cc99533c5c,4cb0cfd181b672ef301b82e4480025cc99533c5c,"internal/imports: test exported functions with nil args

Test the api of the internal imports package to make sure that it does
not crash when given nil as opts or Env.

Change-Id: I0127d550a49f63040efb16c07e8cff8b599bbe3c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190000
Reviewed-by: Heschi Kreinick <heschi@google.com>"
matloob,2019-08-14 22:01:57,https://api.github.com/repos/golang/tools/git/commits/9fae7b2cd541ad0f7f21054d801bdc45ad877a14,9fae7b2cd541ad0f7f21054d801bdc45ad877a14,"go/packages: work around another case where go list doesn't respect -e

When there's an error running the C compiler for cgo, go list will produce
output, but will also complain in stderr, and return a nonzero exit status.
But it sholudn't return a non-zero exit status in that case when run with
-e. Check for and suppress this case.

Fixes golang/go#33462

Change-Id: Idae0970000a0cb134386f5e66d2b63b348ec8576
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190339
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-08-13 21:06:10,https://api.github.com/repos/golang/tools/git/commits/f60b6e7d83f473a75095cd04667b4a9b271a3ff7,f60b6e7d83f473a75095cd04667b4a9b271a3ff7,"go/packages: add test case for golang/go#33462

Updates golang/go#33462

Change-Id: I66e0ff1a87eab1958eed87a30e0e09b47a62d43c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190177
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-08-13 21:33:18,https://api.github.com/repos/golang/tools/git/commits/5b18234b3ae0699ab67172552068d2b73845c9b6,5b18234b3ae0699ab67172552068d2b73845c9b6,"go/packages: set -mod=readonly when processing overlays in module mode

To prevent us from adding additional module dependencies to modules, especially
if the file is in a different module. Sometimes adding additional dependencies
would be the right behavior, but sometimes we run go list to determine
information about files in other modules, and modifying modules outside the one
the user is operating in is bad  behavior.

Fixes golang/go#32499

Change-Id: I2a12e0a64dc6cd34fa98931cbacc30707e5ba494
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190179
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
dominikh,2019-08-13 12:16:51,https://api.github.com/repos/golang/tools/git/commits/597f57769402f90a9c238d64701717ff5fe472d6,597f57769402f90a9c238d64701717ff5fe472d6,"go/packages: handle more errors that 'go list' prints to stderr

This change adds special handling for two more errors that 'go list'
prints to stderr:

1. when trying to construct an ad-hoc package from files in multiple
   directories
2. the ""unexpected directory layout"" error (#24854)

Change-Id: Icbd14bcc02c2ca9676dc0449e155ff817da038cb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190077
Run-TryBot: Dominik Honnef <dominik@honnef.co>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-08-14 14:57:47,https://api.github.com/repos/golang/tools/git/commits/60bb3025ec9a8bf33d1fe3ef47aadf127f2a9885,60bb3025ec9a8bf33d1fe3ef47aadf127f2a9885,"internal/lsp: fix race condition in caching

This change fixes a race condition in the metadata caching logic.
Also, some minor fixes to comments and invalidation logic (it's not
necessary to invalidate ASTs when a package is invalidated).

Change-Id: I927bf6fbc661a86ef0ba99b29a9ed979cd1eb95d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190317
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-12 22:50:01,https://api.github.com/repos/golang/tools/git/commits/9dba7caff850354a6238aa8121bf3c338e6696ba,9dba7caff850354a6238aa8121bf3c338e6696ba,"internal/lsp: show generated warning on didChange, not didOpen

Change-Id: I1c7346ab5265ed56d7142318b94028095e51f695
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190017
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-07-09 21:52:23,https://api.github.com/repos/golang/tools/git/commits/62ee03427e2169b55547bd25ef90a4cfd52939cf,62ee03427e2169b55547bd25ef90a4cfd52939cf,"internal/lsp: use memoize package to cache source.Packages

This change eliminates the need for the package cache map, and instead
stores package type information in the store. We still have to maintain
invalidation logic because the key is not computed correctly.

Change-Id: I1c2a7502b99491ef0ff68d68c9f439503d531ff1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185438
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-08-12 21:43:41,https://api.github.com/repos/golang/tools/git/commits/97f12d73768f0481c12570ed574cf04a8879b04b,97f12d73768f0481c12570ed574cf04a8879b04b,"go/analysis: add a ""-fix"" flag to checker to apply suggested fixes

Fix will rewrite all the files in place given that there were no
overlapping or invalid suggested fixes. It's intended to be used
with analyses that generate refactorings.

Change-Id: I7ef3c872b58fdd4913fc34b725188e1846969849
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189997
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-12 23:22:27,https://api.github.com/repos/golang/tools/git/commits/afc3694995b65298451d51bbeb39aefa1c121694,afc3694995b65298451d51bbeb39aefa1c121694,"go/packages: add a test case for golang/go#32499

Updates golang/go#32499

Change-Id: Ib9daf7c0dc8c6052f84230e54e181ab60166349b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/190037
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
suzmue,2019-08-12 21:56:59,https://api.github.com/repos/golang/tools/git/commits/2ad8dc80bc2f516248a794383ddd5e1ddf15997e,2ad8dc80bc2f516248a794383ddd5e1ddf15997e,"internal/imports: return initialized options

Whent the pointer is nil, changing its value does not fix the returned
options. Return the new pointer so it can be used.

Change-Id: Ie17fe5c47b48b4a77ffb17b974a5c90e3b44df5e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189998
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
stamblerre,2019-08-12 18:54:57,https://api.github.com/repos/golang/tools/git/commits/1e8b33d652914950a313c07dcfbaea320660f448,1e8b33d652914950a313c07dcfbaea320660f448,"internal/lsp: ignore files that begin with underscores

Fixes golang/go#33540

Change-Id: I5b55c23ac8ff54db94387ed6b70ba39c61ba6108
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189940
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-08-12 20:59:23,https://api.github.com/repos/golang/tools/git/commits/89a01ca1a8d2f8fa299a2cd5c2a568e8a0819b49,89a01ca1a8d2f8fa299a2cd5c2a568e8a0819b49,"internal/lsp: support an experimental structured hover format

Updates golang/go#33352

Change-Id: Ibf18e2529c9ba8c94c66942ea6f2c27f047ed285
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189977
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-12 19:51:32,https://api.github.com/repos/golang/tools/git/commits/0d62d4405efdf3c61df550e92d30bf970ec579bf,0d62d4405efdf3c61df550e92d30bf970ec579bf,"internal/lsp: change ordering of hover depending on hoverKind

This change configures the ordering of documentation on hover. If the
user has requested full documentation, the signature appears at the top,
to avoid the user having to scroll. Otherwise, the signature appears at
the bottom, to minimize the distance between the triggering identifier
and the signature.

Updates golang/go#33352

Change-Id: I017baaabd0ee0c31cb13cb6abdda296782929823
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189943
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-08-12 18:36:50,https://api.github.com/repos/golang/tools/git/commits/4147ede4f82bafd862025601acbcce9e47c2b117,4147ede4f82bafd862025601acbcce9e47c2b117,"internal/imports: fix setting default options

This fixes a nil pointer bug that occurs when opt is nil.

If nil is provide as opt to the internal/imports package, use the
default options settings.

Also check separately that Env is non-nil, as this would also cause
a crash.

Change-Id: I9a43b219b31ba80b7cb8111437f211cb72f1ca18
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189939
Reviewed-by: Heschi Kreinick <heschi@google.com>"
stamblerre,2019-08-06 22:51:17,https://api.github.com/repos/golang/tools/git/commits/f07d81a593a5888a079a2082e0c4fb9d28b98ded,f07d81a593a5888a079a2082e0c4fb9d28b98ded,"internal/lsp: fix documentation for completion items

This change fixes documentation for completion items by using cached
package and AST information to derive the documentation. We also add
testing for documentation in completion items.

Change-Id: I911fb80f5cef88640fc06a9fe474e5da403657e3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189237
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
jadekler,2019-07-18 20:20:30,https://api.github.com/repos/golang/tools/git/commits/6d4652c779c4add9e1a69db058dabafddba21c37,6d4652c779c4add9e1a69db058dabafddba21c37,"digraph: add transpose

Change-Id: Idd6299fd7397840000139ce4fbea43a95ee76b1e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186797
Reviewed-by: Alan Donovan <adonovan@google.com>
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
jadekler,2019-07-16 22:12:11,https://api.github.com/repos/golang/tools/git/commits/a4e10e6d0e4284a2c390e51c19ea72651c65e6be,a4e10e6d0e4284a2c390e51c19ea72651c65e6be,"digraph: refactor somepath to print an adjacency list

Refactors somepath to print an adjacency list from ""from"" to ""to"", instead of
just the nodes. This allows other tools like modgraphviz to print the subgraph.

This is a breaking change. The previous behavior returned vertices; now it
returns edges. If you relied on the previous behavior, use:

    my-application | digraph somepath <from> <to> | digraph nodes

Change-Id: Id5e77e19eea79849ec6f25018f627c8dc4e2a831
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184338
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2019-08-08 19:30:52,https://api.github.com/repos/golang/tools/git/commits/e713427fea3f98cb070e72a058c557a1a560cf22,e713427fea3f98cb070e72a058c557a1a560cf22,"go/analysis: remove +experimental build tag from suggested fixes

We're still leaving open the possibility of changing this API,
but things have baked for a bit so I feel comfortable removing the
build tag.

Also add some documentation.

Change-Id: I3beb666b58177553fc406dc9670d569d5928fedd
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189460
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-08-07 19:31:54,https://api.github.com/repos/golang/tools/git/commits/a804cf87ae27e57363977674127b076d5f260a7f,a804cf87ae27e57363977674127b076d5f260a7f,"go/packages: handle ad-hoc overlays with sources outside modules

If a user runs a file= query for a source that doesn't exist,
and they are outside of a module, fill in the GoSources for the
empty package that go list returns, so the overlay can be applied.

Also add a hack for the case where go list can't determine the compiler
(gc or gccgo) a user is using because
    go list -f ""{{context.Compiler}}"" -- unsafe
doesn't work. If go list complains that a user is outside a module,
we'll give ourselves flexibility to guess things because there's
no right answer. So we'll guess that the compiler is gc.

Fixes golang/go#33482

Change-Id: I6a8aa0c617c4d803558389fb4272854245f59c5a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189322
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
svanharmelen,2019-08-08 16:18:43,https://api.github.com/repos/golang/tools/git/commits/128824a23e7c038a341252700f1001ad29ef1988,128824a23e7c038a341252700f1001ad29ef1988,"internal/lsp: prevent too much open files issues

On MacOS the default open file limit is 256 files per process. For big
projects this could cause issues when reading all files (more or less)
at the same time.

By moving up the `parseLimit` so the reading of the file is only done
when it is allowed to start parsing the file, we stay well below the 256
files per process (as the `parseLimit` is currently set to 20).

Since `parseLimit` is actually only used to limit IO access, let's also
rename the const to `parseLimit`.

Change-Id: Ie8744030875d84d0d6095ee4ec2d9d553911bed1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189437
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
svanharmelen,2019-08-07 21:49:42,https://api.github.com/repos/golang/tools/git/commits/b346f7fd45de50e7e5dd5d24a7a009c3c8d8ec61,b346f7fd45de50e7e5dd5d24a7a009c3c8d8ec61,"x/tools/cmd/gopls: prevent nil pointer dereferences

The `files` slice is used twice. First it's used to get all results from `ph.Parse`, and then it's reused to filter all `nil` values (which may have been returned by the `ph.Parse` method).

After the loop to ""filter"" out all the `nil` values, we also need to strip the remaining values.

I also changed the ordering so that we first check the errors and
only then perform this loop. That way the code will return earlier
when the context was canceled.

Partially fixes #33531 by prevention the panic reported in that issue.

Change-Id: I09478e765adcd0384ec4745921eb5c5aea405ef2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189397
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-08-07 20:03:45,https://api.github.com/repos/golang/tools/git/commits/8be58fba63529bbb3f25f43fe10179356ca2497e,8be58fba63529bbb3f25f43fe10179356ca2497e,"internal/lsp: minor refactoring for source.Identifier

Change-Id: Ia604f59d6229c2086fe63e73466de7489e1cda2d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189321
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-08-02 23:45:56,https://api.github.com/repos/golang/tools/git/commits/cae9aa54349647754b22764599d5c8110e09e95b,cae9aa54349647754b22764599d5c8110e09e95b,"internal/lsp: show ""do not edit"" message when user opens generated file

This is probably a better approach than showing an extra diagnostic,
since a user cannot dismiss a diagnostic.

Fixes golang/go#33397

Change-Id: I92b9a00f51a463673993793abfd4cfb99ce69a91
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188766
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-06 21:37:06,https://api.github.com/repos/golang/tools/git/commits/88ddfcebc769cb7884c38d144ee893cfb4519053,88ddfcebc769cb7884c38d144ee893cfb4519053,"go/packages: add a test for ad-hoc packages in overlays

Updates golang/go#33482

Change-Id: Ib24a0b955694455ddf1fc31011d57a7d797519ae
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189217
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-08-05 22:21:19,https://api.github.com/repos/golang/tools/git/commits/9fb8e5c879014c7755851104314d74dced1b630d,9fb8e5c879014c7755851104314d74dced1b630d,"internal/lsp/testdata: delete nodisk/newdisk_exists.go

It should work now that go packages accepts go1.13's new go list
behavior.

Updates golang/go#33157

Change-Id: I1780210b414bc0556e10e10c8c775fbfd2922b2e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189038
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-08-06 19:40:41,https://api.github.com/repos/golang/tools/git/commits/6743d4095d4ba28cd0ccd2ba6fbab7b662b1191f,6743d4095d4ba28cd0ccd2ba6fbab7b662b1191f,"go/packages: rewrite Go 1.11's no such directory err to look like 1.13's

Then the rest of go/packages can process the go list output as usual.

Fixes golang/go#33491

Change-Id: I1bd46154ce75d67dc3e18454a067bcc084526c5d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189160
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
jan-xyz,2019-08-06 19:13:11,https://api.github.com/repos/golang/tools/git/commits/be5259f29810d11c5fb57d7d2922e1ed021867b5,be5259f29810d11c5fb57d7d2922e1ed021867b5,"internal/lsp: use x/xerrors to create new errors

This relates to https://github.com/golang/go/issues/31374 and should switch all instances within `gopls` to use `x/errors` instead of `fmt` to create new errors.

Change-Id: I18339b75d12418d852e0dcc2ba0ed6c2970783b3
GitHub-Last-Rev: f4a55d9b79e7458ef1f1e06cb5eabbabd884f321
GitHub-Pull-Request: golang/tools#108
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179880
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-08-01 20:31:02,https://api.github.com/repos/golang/tools/git/commits/249e2b9b6d3c7768a126fd2856da5362fb435f2d,249e2b9b6d3c7768a126fd2856da5362fb435f2d,"internal/lsp/cmd: handle errors when adding a file

Change-Id: Iaed5c92fe777e5b9b588614b5c1696851e3f6c93
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188597
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-07-31 22:19:50,https://api.github.com/repos/golang/tools/git/commits/73d708539c4a8d44dbe6f9bfd7353ce1c60a97c8,73d708539c4a8d44dbe6f9bfd7353ce1c60a97c8,"internal/lsp/cmd: remove unused isRace global variable in cmd

Change-Id: I9a71df9012fe7477b9e28b8665806d2ecc18f659
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188359
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Emmanuel Odeke <emm.odeke@gmail.com>"
stamblerre,2019-08-05 23:27:28,https://api.github.com/repos/golang/tools/git/commits/1dcc99b65a21c088c193b0ee94fe25cd9d16276e,1dcc99b65a21c088c193b0ee94fe25cd9d16276e,"internal/lsp: do not show errors for code actions on go.mod files

This change keys the supported code actions map by file kind, so that we
can extend it more easily for go.mod files.

Change-Id: Ic28f91bd517700cf070281b1c4d4ded14a702790
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189039
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-05 20:42:19,https://api.github.com/repos/golang/tools/git/commits/982211fce4f6a0e3faefd92bddac199580f3bb13,982211fce4f6a0e3faefd92bddac199580f3bb13,"internal/lsp: support single-line hover for LSP clients like Vim

Fixes golang/go#32561

Change-Id: I4399be3cfe745b85a23a82a183277e290ef2a3d8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188981
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-08-05 21:57:49,https://api.github.com/repos/golang/tools/git/commits/35ef2682e516ea0dd37d51a73b1e957db246ebbf,35ef2682e516ea0dd37d51a73b1e957db246ebbf,"go/analysis: change AllObjectFacts and AllPackageFacts to filter facts

Facts are intended to be private to an analysis. Even though it's hard
to guarantee with the information we have that facts won't leak to the
wrong analysis, we can filter some analyses that couldn't possibly have
come from the same analysis. AllObjectFacts and AllPackageFacts will
now filter facts if their type isn't specified in an analysis's FactTypes.

Change-Id: I2794437a5810e08fe6a9652b3569c5e3c17e159f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/189037
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Dominik Honnef <dominik@honnef.co>"
matloob,2019-08-02 20:21:37,https://api.github.com/repos/golang/tools/git/commits/c5a2fd39b72a2403dae32d544b008ff4973c8b29,c5a2fd39b72a2403dae32d544b008ff4973c8b29,"go/packages: handle case when go list returns absolute ImportPath

go list -e, when given an absolute path, will find the package contained at
that directory. But when no package exists there, it will return a fake package
with an error and the ImportPath set to the absolute path provided to go list.
This change modifies the go list driver to convert that absolute path to what
its package path would be if it's contained in a known module or GOPATH entry.
This will allow the package to be properly ""reclaimed"" when overlays are
processed.

Fixes golang/go#33157

Change-Id: I5ac032879884f52edbe45e00ed3949d84a71715e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188764
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
odeke-em,2019-08-03 23:13:38,https://api.github.com/repos/golang/tools/git/commits/e1fc249b66216923389caee0cb976614f8b05f53,e1fc249b66216923389caee0cb976614f8b05f53,"internal/lsp/telemetry/ocagent: add convertAnnotation tests

* Adds tests for 'convertAnnotation'.
* Ensures that converting an empty string """" to
a truncatable string returns nil, to save bandwidth. However,
in the future, we should perhaps allow empty strings to
be serialized if say ""emptyAllowed"" is set.
* Caught the case where convertAttribute hadn't type
switched on ""int""
* Provides 40.5% test coverage for ocagent.go

More tests for the other functions shall follow in later CLs.

Updates CL 186679

Change-Id: Ie9b46b0b320339ed79cd136fff536ccfcfbeb9e7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188877
Run-TryBot: Emmanuel Odeke <emm.odeke@gmail.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-08-02 23:54:15,https://api.github.com/repos/golang/tools/git/commits/2756c524cc1ca1284d912b9c5ee3b0092ff4459b,2756c524cc1ca1284d912b9c5ee3b0092ff4459b,"internal/lsp: format files that parse in packages with parse errors

Updates golang/go#31291

Change-Id: Ibbd0b6cef9b9ec588c8a2e0c5e7ee6e3512b8a22
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188767
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
albertteoh,2019-08-03 17:21:48,https://api.github.com/repos/golang/tools/git/commits/773fe550c1f7ef2cba842fb51731067c52005767,773fe550c1f7ef2cba842fb51731067c52005767,"gopls: return file error if file open fails

The bug manifests itself when a non-existent file is passed in as an
argument to gopls, causing a nil pointer dereference panic. This is due
to an attempt to reference the ""mapper"" attribute, which is not set if
the file is not found.

The resolution is to check for an informative error that is set on the
file instance after ""getFile"" is called and return it immediately to the
caller to allow the error to propagate up to the main() function and
print the error to stdout.

Testing:
--------

Non-existent file:
$ gopls -rpc.trace -v check gopls/doesnotexist.go
check: file:///Users/albertteoh/repo/tools/gopls/doesnotexist.go: open /Users/albertteoh/repo/tools/gopls/doesnotexist.go: no such file or directory

Existing go file:
$ gopls -rpc.trace -v check internal/lsp/definition.go
2019/08/03 13:33:00 Info:go/packages.Load
	packages = 2
2019/08/03 13:33:00 Info:go/packages.Load
	package = golang.org/x/tools/internal/lsp
...

Fixes golang/go#33445

Change-Id: Ib56d8a4b7f23f4882b75cf684c5d18a49d27b824
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188857
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
neild,2019-05-16 17:57:39,https://api.github.com/repos/golang/tools/git/commits/1d1727260058c6d58ebfdeb982c4657342282355,1d1727260058c6d58ebfdeb982c4657342282355,"go/analysis/passes/printf: improve support for %w

Report use of %w with non-error arguments.

Report multiple %w in a format.

Report use of %w with non-Errorf functions.

Fixes golang/go#32070

Change-Id: I65d8fcc235ae2f3717582d00352356eeb0eaf73c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177601
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Jonathan Amsterdam <jba@google.com>"
stamblerre,2019-08-02 14:46:19,https://api.github.com/repos/golang/tools/git/commits/43c5e4ca5b1012c595e579f7306906c5aba61e36,43c5e4ca5b1012c595e579f7306906c5aba61e36,"internal/lsp: handle potential nil pointers in GetToken

Change-Id: Icd24c7c717099209f246fd4c0d5dc2e424613962
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188757
Reviewed-by: Suzy Mueller <suzmue@golang.org>"
anthonyfok,2019-08-01 08:10:48,https://api.github.com/repos/golang/tools/git/commits/e9bb7d36c0606a2c422dffe30db7d628ebeb9302,e9bb7d36c0606a2c422dffe30db7d628ebeb9302,"internal/gopathwalk: fix typo (""nonexistant"" → ""nonexistent"")

Change-Id: Ie127474e5d1e1d71177e0e38d8a4cba2ce415db3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188497
Run-TryBot: Ian Lance Taylor <iant@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
suzmue,2019-07-30 18:00:02,https://api.github.com/repos/golang/tools/git/commits/5f95ed5921efa3338dc38833ce4ce39317f8b6e9,5f95ed5921efa3338dc38833ce4ce39317f8b6e9,"internal/imports, internal/lsp: quick fix import errors

Get quick fixes for the diagnostics related to import errors. These
fixes add, remove, or rename exactly one import.

This change exposes the individual fixes found by the imports package,
and then applies each of them separately to the source.  Since applying each
fix requires a new ast anyway, we pass in the source to be parsed each time.

Change-Id: Ibcbfa703d21b6983d774d2010716da8c25525d4f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188059
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-07-02 18:55:42,https://api.github.com/repos/golang/tools/git/commits/1e85ed8060aa6fdecbcb0fd2614c1e8ab5fb12fa,1e85ed8060aa6fdecbcb0fd2614c1e8ab5fb12fa,"internal/imports: fix typos in documentation

Fix typos and fix descriptions of methods where the behavior described
in the comment is not implemented by that method.

Change-Id: I2c34caff43399dcb4f0e5e41b67189d8d8404fd5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184697
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
jayconrod,2019-07-30 23:43:22,https://api.github.com/repos/golang/tools/git/commits/5a5cfefe1f00d344e335c86780cde23407b81251,5a5cfefe1f00d344e335c86780cde23407b81251,"x/tools/internal/imports: don't load package names for empty list

goimports should not attempt to load package names for an empty list
of packages. 'go list' interprets an empty argument list as '.', which
may or may not be a package.

Fixes golang/go#33175

Change-Id: Id8df148432437295905c52f2d5fb73d890277569
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188379
Run-TryBot: Jay Conrod <jayconrod@google.com>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
ianthehat,2019-07-10 00:16:21,https://api.github.com/repos/golang/tools/git/commits/c001e47e7f00e86e2589be2312a5f197de244238,c001e47e7f00e86e2589be2312a5f197de244238,"internal/lsp: extra telemetry tagging of files and packages

Change-Id: Ia9a8fb5dcfb74e86b9366849810dd3edc1f898dd
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186918
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
bhcleek,2019-07-30 03:48:11,https://api.github.com/repos/golang/tools/git/commits/09f9cfa88292dd2b01eb8fc08387898ff3561f27,09f9cfa88292dd2b01eb8fc08387898ff3561f27,"internal/lsp: set initialized state

Set the server state to initialized so that dynamic configuration
requests will be sent to the client.

Rename the mutex that guards state. The state field was previously named
initialized, so it only makes sense to similarly rename the mutex that
guards the state field.

Always unlock stateMu before calling other functions so that callees
that need to check state can acquire the lock.

Change-Id: Ia5592ca1dedfc6f004ae6b61548890624ae98d59
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188097
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-07-30 15:10:00,https://api.github.com/repos/golang/tools/git/commits/a81e99d7481f02952fe65614f5650db67a76d273,a81e99d7481f02952fe65614f5650db67a76d273,"internal/lsp: find import errors for named imports

String matching is used to find diagnostics that could be fixed by
organizing imports. Unused imports are of the form:
	""X imported but not used""
	""X imported but not used as Y""

Check that ""imported but not used"" is contained in the message to
include both named and unnamed imports.

Change-Id: I478d1fb239962e706eb1adf305b858fcc875b7f0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188158
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
odinuge,2019-07-30 21:37:57,https://api.github.com/repos/golang/tools/git/commits/ed3277de27998232ef7586f5f0d01384bfa52c37,ed3277de27998232ef7586f5f0d01384bfa52c37,"internal/lsp: use correct desc for annotation

If the message is empty and there is and there is an error,
the description of the annotation should be the error message.

More info can be found here:
https://go-review.googlesource.com/c/tools/+/186679

Change-Id: Ica0a9cc132de912b2e14ab527baf4304f8b5d8ba
Reviewed-on: https://go-review.googlesource.com/c/tools/+/188118
Reviewed-by: Emmanuel Odeke <emm.odeke@gmail.com>
Run-TryBot: Emmanuel Odeke <emm.odeke@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
freeformz,2019-07-28 00:52:02,https://api.github.com/repos/golang/tools/git/commits/7deaedd405c46b3ae866eb17b9a5df1ced9a0688,7deaedd405c46b3ae866eb17b9a5df1ced9a0688,"internal/lsp/cache: clean up parse.go

switch the ioLimit channel from a bool to a struct{} as the values
stuffed into the channel have no meaning.

A mix of consistency and comment cleanups in *importer.parseFiles.

sameFile is reported as unused, so removed, removing some now unused
imports.

The assignment to lit in *view.parseDeferOrGoStmt's for{} loop was
reported as ineffective.

Update the comment of fix a little for clarity.

Change-Id: I50f0442bfd7e4d0cc0e6fdadbf1f6272366a716c

Change-Id: I50f0442bfd7e4d0cc0e6fdadbf1f6272366a716c
GitHub-Last-Rev: 74d8a8bdb768a827db3c1fd1723a528818e222ee
GitHub-Pull-Request: golang/tools#109
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179957
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-07-27 20:37:10,https://api.github.com/repos/golang/tools/git/commits/ff9f1409240a6589b749f29c118cc0ac9bd5bcde,ff9f1409240a6589b749f29c118cc0ac9bd5bcde,"internal/lsp/source: fix renaming of SuggestedFixes in experimental file

Change-Id: I4a20ef09c565da39ed49f25d85133cd388c2bf05
Reviewed-on: https://go-review.googlesource.com/c/tools/+/187820
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-07-12 22:54:06,https://api.github.com/repos/golang/tools/git/commits/db2fa46ec33c618b29a7c6935439e6800b3078a8,db2fa46ec33c618b29a7c6935439e6800b3078a8,"internal/lsp: compare mod file versions used in imports

The results of running 'go list -m' are only valid as long as the
current module and the modules in its replace directives do not
change their go.mod files. Store the 'go.mod' versions that are
used in the imports call, and reinitialize the module resolver if
they change.

Change-Id: Idb73c92b9e4dc243a276885e5333fafd2315134d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186597
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-07-26 22:17:04,https://api.github.com/repos/golang/tools/git/commits/1bd56024c6204c5d493f13273473cf5b3e0e8194,1bd56024c6204c5d493f13273473cf5b3e0e8194,"internal/lsp: format files in packages with errors

Packages with errors may still contain files that can be formatted.
Try to format the source of the files in packages that have errors.
This change will still not format files with parse errors.

Updates golang/go#31291

Change-Id: Ia5168d7908948d201eac7f2ee28534022a2d4eb0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/187757
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
muesli,2019-07-25 00:40:27,https://api.github.com/repos/golang/tools/git/commits/2e34cfcb95cb3d24b197d58fe6d25046b8f25c86,2e34cfcb95cb3d24b197d58fe6d25046b8f25c86,"internal/import: strings.Trim expects a cutset, not a string

strings.Trim treats the second parameter as a set of characters you
want to trim. It does not look for an entire string to trim.

This fix will maintain the current behavior, simply eliminating the dupe
character in the set.

Should we instead mean to really trim the entire string, this needs a
different fix.

Change-Id: Id3fa4105421819edc6a898efb1ffab26c8cea67a
GitHub-Last-Rev: 198e429869711ee1510fffe5a993acb07eff4502
GitHub-Pull-Request: golang/tools#142
Reviewed-on: https://go-review.googlesource.com/c/tools/+/187497
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Heschi Kreinick <heschi@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>"
shackra,2019-07-24 16:13:56,https://api.github.com/repos/golang/tools/git/commits/4e8ec5a31696c917d1bbdb97aa24979566a98d7f,4e8ec5a31696c917d1bbdb97aa24979566a98d7f," internal/lsp: swallow hover error over identifier not found

Fixes https://github.com/golang/go/issues/32967

Change-Id: I41245582f95f8a31e0d1990eac7aeb2a9c29cf05
GitHub-Last-Rev: 5d257b66138be4b9ea502af89ff48f0574c91718
GitHub-Pull-Request: golang/tools#140
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186997
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-19 20:16:41,https://api.github.com/repos/golang/tools/git/commits/8bb11ff117ca820938b6d899b13b3f2832ef244c,8bb11ff117ca820938b6d899b13b3f2832ef244c,"internal/lsp: fix lockup for packages with many files

We should not be sending messages from within the telemetry worker. This does it in a new go routine now.

Change-Id: I55e3b6df04699b8e45bc37b99997463f45ee114e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186958
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-07-17 23:17:43,https://api.github.com/repos/golang/tools/git/commits/e377ae9d63860e3b8f606b92a1a7c7df5b14ca67,e377ae9d63860e3b8f606b92a1a7c7df5b14ca67,"internal/lsp: add an ocagent exporter for the telemetry system

Metrics will be added once the agent supports the json form.

Change-Id: I40f6790970311b020a7cab72474b71f4e2aa32e9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186679
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
dominikh,2019-07-18 22:48:11,https://api.github.com/repos/golang/tools/git/commits/5ec23663d0a4c54c5e8ec3d258613482eb6764a4,5ec23663d0a4c54c5e8ec3d258613482eb6764a4,"go/cfg: stop once we've found the fallthrough target

The old code didn't stop after finding the fallthrough target, always
walking the entire list to the top. This would effectively break
fallthroughs, constructing an invalid graph, as the fallthrough target
would never be found.

The fix brings the loop condition in line with all the other
stack-walking loop conditions in the surrounding code, which abort
once the target block has been found.

Alternatively, the entire loop could been omitted, as 'fallthrough'
has to be the last statement in a case body and thus always refers to
the immediate element on the stack. However, since the builder already
handles malformed ASTs as gracefully as possible, it seemed better to
keep the loop and to construct a slightly less wrong graph in the
presence of malformed ASTs.

Before the fix, the following code

	func fn(x int) {
		for {
			switch x {
			case 1:
				println(""case 1"")
				fallthrough
			case 2:
				println(""case 2"")
			}
		}
	}

would result in the following graph. Note the presence of an
undefined.branch block.

	.0: # entry
		succs: 1

	.1: # for.body
		x
		1
		succs: 4 6

	.2: # for.done

	.3: # switch.done
		succs: 1

	.4: # switch.body
		println(""case 1"")
		succs: 7

	.5: # switch.body
		println(""case 2"")
		succs: 3

	.6: # switch.next
		2
		succs: 5 9

	.7: # undefined.branch

	.8: # unreachable.branch
		succs: 3

	.9: # switch.next
		succs: 3

After the fix, this graph is computed instead:

	.0: # entry
		succs: 1

	.1: # for.body
		x
		1
		succs: 4 6

	.2: # for.done

	.3: # switch.done
		succs: 1

	.4: # switch.body
		println(""case 1"")
		succs: 5

	.5: # switch.body
		println(""case 2"")
		succs: 3

	.6: # switch.next
		2
		succs: 5 8

	.7: # unreachable.branch
		succs: 3

	.8: # switch.next
		succs: 3

Change-Id: I3bb00eddec2a7da02cb929860f4c95cf477c848c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186857
Run-TryBot: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-07-18 22:59:26,https://api.github.com/repos/golang/tools/git/commits/72478f39386abfc20552c81b0b394fe794a47210,72478f39386abfc20552c81b0b394fe794a47210,"internal/imports: disable go/packages-incompatible tests

A recent change to the go command broke these tests. Mark them as
go/packages incompatible for now, until we have time to fix them.

Updates golang/go#33175

Change-Id: Ib4c594bd032107fb1245bfe18fc80392fbab0730
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186838
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-07-15 18:37:23,https://api.github.com/repos/golang/tools/git/commits/87e92536fd944779e4e26a40867aebff9ffa4c0f,87e92536fd944779e4e26a40867aebff9ffa4c0f,"internal/lsp: the json wire format of the open cencus agent

These are hand written structs that when passed through the standard json
encoder produce output that mathches the json form of the open census protobuf
messages.
This allows us to talk to the agent without any extra dependancies.

Change-Id: I23d617018009520aad3832e0425ed0a53c51fd1f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186678
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Emmanuel Odeke <emm.odeke@gmail.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-07-18 00:30:54,https://api.github.com/repos/golang/tools/git/commits/625c92e46d0ef8f89a9d285ea06843c5ac545e70,625c92e46d0ef8f89a9d285ea06843c5ac545e70,"internal/lsp: have tests report a different application name to the main gopls binary

Change-Id: I246dc9c468ee35586a8332ebdf41f23521adbc6c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186677
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-06-27 02:46:12,https://api.github.com/repos/golang/tools/git/commits/38daa6564ba7c9082106f8f6a36e12aa57225147,38daa6564ba7c9082106f8f6a36e12aa57225147,"internal/lsp: new tracing system

Change-Id: Id6e6b121e8c69d6324a15cb46b3b9937dfe7a1dd
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186201
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
suzmue,2019-07-16 21:37:05,https://api.github.com/repos/golang/tools/git/commits/82a3ea8a504c93d7b757804e7cd1983dc8022443,82a3ea8a504c93d7b757804e7cd1983dc8022443,"internal/imports: save scanned module cache results

Save the packages found when scanning of the module cache.
The computed package may have a different import path due
to replace directives, so this needs to be updated
when the moduleResolver is initialized again.

Change-Id: Ib575fcc59b814ff263b431362df3698839a282f6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186301
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-07-16 05:58:38,https://api.github.com/repos/golang/tools/git/commits/c81b74871bfb3aa986d22a2dac8c4f0583912550,c81b74871bfb3aa986d22a2dac8c4f0583912550,"go/packages, internal/lsp: modify tests to expose overlays bug

https://golang.org/issue/33157 explains the issues with overlays. The
gopls tests caught this bug, but the go/packages tests didn't, so modify
the go/packages tests correspondingly.

Change-Id: I8ea8e06e145aa2420655cbe4884e60f36acfad7b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186299
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-07-15 16:24:58,https://api.github.com/repos/golang/tools/git/commits/7caf8110c969658d662808a6b3694aa8bfd96195,7caf8110c969658d662808a6b3694aa8bfd96195,"internal/lsp: purge the remains of the xlog system now it is not used

Change-Id: Iad8f037de88c2657734b8a1b5c73fc708d3b5924
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186198
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-15 03:08:10,https://api.github.com/repos/golang/tools/git/commits/73497f0562d3f4531ca004b58994f0ba49f6db8a,73497f0562d3f4531ca004b58994f0ba49f6db8a,"internal/lsp: convert logging calls

Change-Id: I09ee44d0121b7ced001b8195f9fa81b5225cb0c7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186197
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-10 19:19:29,https://api.github.com/repos/golang/tools/git/commits/7ec096a1122469269330911b24bb7db048b83649,7ec096a1122469269330911b24bb7db048b83649,"internal/lsp: add a new telemetry based logging system

Also add enough support that using it from within the context of the lsp will
report back to the original client.

Change-Id: I081f157c289642454e9f0476747b2131dcd4e16c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185996
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-17 02:20:43,https://api.github.com/repos/golang/tools/git/commits/f2838559cbd256b1a8a74d2fa196769eefaeecda,f2838559cbd256b1a8a74d2fa196769eefaeecda,"internal/lsp: use a background context for the background worker

A detatched context ends up attributing all background work to the initialize
function.

Change-Id: I81206462752228d5ac81408fb1e3fb86ab36796e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186457
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-16 23:56:49,https://api.github.com/repos/golang/tools/git/commits/128ec6dfca091cc7d4fe6d18d97911f37c95a590,128ec6dfca091cc7d4fe6d18d97911f37c95a590,"internal/lsp: fixed broken tracing

I dropped the line that added the stats to the context when merging the recent changes.

Change-Id: I66ab2958b0737360896b40bf30c5ca3c2cebbae5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186300
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-07-14 17:59:24,https://api.github.com/repos/golang/tools/git/commits/e98af230987614b97d20a34f8062bf3fa0fe2376,e98af230987614b97d20a34f8062bf3fa0fe2376,"go/packages: add debug logging via the packages.Config

This change adds a Logf field to the packages.Config.

Change-Id: I144a9a1e1181585bbe621898c4a3e6a007a38322
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185993
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
suzmue,2019-07-03 19:23:05,https://api.github.com/repos/golang/tools/git/commits/fdb8f0bb4ea248ed808cd0895ecbb0aafc333079,fdb8f0bb4ea248ed808cd0895ecbb0aafc333079,"internal/lsp: cache the imports ProcessEnv across imports calls

The imports ProcessEnv contains cached module and filesystem state. This change
allows gopls to use the same ProcessEnv and resolver across multiple calls to the
internal/imports library.

A ProcessEnv belongs to a view, because the cached module state depends
on the module that is open in the workspace.

Since we do not yet track whether the 'go.mod' file has changed, we
conservatively reset the cached state in the module resolver before
every call to imports.Process.

Change-Id: I27c8e212cb0b477ff425d5ed98a544b27b7d92ee
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184921
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-07-16 20:24:47,https://api.github.com/repos/golang/tools/git/commits/b0712d6011d3000e445dee2964eb73448d9acdaf,b0712d6011d3000e445dee2964eb73448d9acdaf,"internal/lsp: fix the incomplete and broken commit

https://go-review.googlesource.com/c/tools/+/186297 was the wrong commit, this
adds the changes that were supposed to be part of it.

Change-Id: I0c4783195c2670f89c3213dce2511d98f21f1cf4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186379
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-07-12 01:05:55,https://api.github.com/repos/golang/tools/git/commits/b667c4c58e8b4025e1449ef8252532107e5b7b78,b667c4c58e8b4025e1449ef8252532107e5b7b78,"internal/lsp: cache the *ast.File and *token.File on the package

This change removes the need for the ast and token fields on the *goFile
object. We switch to using source.ParseGoHandles on the package, which
means that we can easily access both the AST and token via the package,
which is already cached.

Change-Id: I5f78bbe09362f4d95eb15556617bdbd809a7a55d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185878
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-07-12 20:33:10,https://api.github.com/repos/golang/tools/git/commits/502543d2eda973a752458304a1cb8931c554aaea,502543d2eda973a752458304a1cb8931c554aaea,"internal/jsonrpc2: move stats and logging across to gopls

Change-Id: I718ad6075028e922a1a046b22fd01a1315421be1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186297
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-15 16:59:09,https://api.github.com/repos/golang/tools/git/commits/0b5a7f81db506d65ef355dcd89d4fba30f623e99,0b5a7f81db506d65ef355dcd89d4fba30f623e99,"internal/lsp: add tracing to the didOpen call

We only had the tracing on didChange before this

Change-Id: Iadec8a43d439931bf58925f149a1d32b3ae29c36
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186199
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-07-16 05:27:56,https://api.github.com/repos/golang/tools/git/commits/919acb9f1ffda3028c42840623ff091b9523ca0b,919acb9f1ffda3028c42840623ff091b9523ca0b,"internal/lsp: add continue to source_test

Noticed this because I was accidentally running these tests with Go
1.11.

Change-Id: Ic35d71bd1da9078b4bde6aa2ed62d54a8b95b0e0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186298
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Suzy Mueller <suzmue@golang.org>"
jadekler,2019-07-12 16:22:56,https://api.github.com/repos/golang/tools/git/commits/fefcef05abb16e5cc4907457d0008e26c57246ca,fefcef05abb16e5cc4907457d0008e26c57246ca,"digraph: refactor allpaths to print an adjacency list

Refactors allpaths to print an adjacency list from ""from"" to ""to"", instead of
just the nodes. This allows other tools like modgraphviz to print the subgraph.
For example, the following command:

    cd $GOPATH/src/cloud.google.com/go && \
    go mod graph | \
    digraph allpaths cloud.google.com/go golang.org/x/text@v0.3.2 | \
    modgraphviz | \
    dot -Tpng -o graph.png

Generates the following graph.png: https://user-images.githubusercontent.com/3584893/60481727-df0a8680-9c4b-11e9-8df9-c581d599edd1.png

Also splits out the allpaths tests into their own test, and adds many test
cases.

This is a breaking change. The previous behavior returned vertices; now it
returns edges. If you relied on the previous behavior, use:

    my-application | digraph allpaths <from> <to> | digraph nodes

Change-Id: I2eb7c377f5fe1e1e90c5b74eaa78d5211192bb2a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184337
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2019-07-15 21:57:01,https://api.github.com/repos/golang/tools/git/commits/9b2cb0e5f602ea1985fa63f891f2a91e1162dfa8,9b2cb0e5f602ea1985fa63f891f2a91e1162dfa8,"internal/lsp: add temporary file to fix bug with tip go

There is a problem with this test failing in module mode only with the
tip of the go tree. Adding this file changes it from a pure overlay package
to one that has an extra file, which fixes it for now.

updates golang/go#33125

Change-Id: I87dae0b44691246a1f79df454afb190f944cc886
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186259
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
suzmue,2019-07-15 21:02:40,https://api.github.com/repos/golang/tools/git/commits/a0f5e6c5c28cd7ac82dc45318ee2465c103c6e9f,a0f5e6c5c28cd7ac82dc45318ee2465c103c6e9f,"internal/lsp: sort rename results

We recommend that gopls integrators apply the []TextEdit responses in
reverse order to get a correct resulting document. This strategy works
when the response is already sorted. Have gopls return sorted []TextEdit
for each file.

Fixes golang/go#33123

Change-Id: Ib570881c9623695d2ae3194fa8a97b0a681a3250
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186258
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-07-12 21:14:28,https://api.github.com/repos/golang/tools/git/commits/9e48ab1d90cd1149871596a85c24cc0c6376e013,9e48ab1d90cd1149871596a85c24cc0c6376e013,"go/loader: normalize cycle to remove flake

Fixes golang/go#31279

Change-Id: Idd1eead3b1e9a90ba39d04019ef32200deb4c983
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185984
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-07-14 18:54:41,https://api.github.com/repos/golang/tools/git/commits/607ca053a1376e059c47e49108c4656de7934535,607ca053a1376e059c47e49108c4656de7934535,"internal/lsp: fix panics in loading, add more logging

Fixes golang/go#32929

Change-Id: I15e258fe03ef07dbb4ece79f52cb0d0353c8b0b1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185994
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-07-09 14:55:22,https://api.github.com/repos/golang/tools/git/commits/ef8e0831447801a19f50653d1b0e3cc00bc4605c,ef8e0831447801a19f50653d1b0e3cc00bc4605c,"internal/lsp: add an rpc summary debug page using the metrics

Change-Id: I92481b0e7996747d70081d575a47768222219506
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185986
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-12 23:26:13,https://api.github.com/repos/golang/tools/git/commits/565492930fe956658e494128d8179ac30779a0be,565492930fe956658e494128d8179ac30779a0be,"internal/lsp: remove the non context xlog path

And purge the loggers from the view and session.

Change-Id: I262958f340e9a5ac9cc9b3db9e9910381e457478
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185989
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-11 00:47:54,https://api.github.com/repos/golang/tools/git/commits/1b7e409d2c99fb8c7afe394baf4ee018feea4811,1b7e409d2c99fb8c7afe394baf4ee018feea4811,"internal/lsp: convert all logging calls to the context version

Change-Id: I20e3acee4272f05a9f31a7bb4219fc2fe751e6b3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185988
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-11 01:01:12,https://api.github.com/repos/golang/tools/git/commits/c8ecc7589e39a1da896e840b1e016e24839d17de,c8ecc7589e39a1da896e840b1e016e24839d17de,"interal/lsp: add context based version of xlog

this is a temporary migration solution

Change-Id: Idb6542298dff85a0926aae761f6317ea155293db
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185987
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-12 04:43:12,https://api.github.com/repos/golang/tools/git/commits/8b927904ee0dec805c89aaf9172f4459296ed6e8,8b927904ee0dec805c89aaf9172f4459296ed6e8,"internal/jsonrpc2: extract logic to handler hooks

Change-Id: Ief531e4b68fcb0dbc71e263c185fb285a9042479
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185983
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-11 16:57:35,https://api.github.com/repos/golang/tools/git/commits/b32ec66a2388b02f8d9f60e1301ef5f41de82250,b32ec66a2388b02f8d9f60e1301ef5f41de82250,"internal/jsonrpc2: cleanup the jsonrpc2 callbacks

We merge them into a single interface and support multiple of them rather than
just one.
This will allow us to stack handlers with different responsabilities and extract
some core logic (like tracing) out to a handler where it belongs.

Change-Id: I6aab92138550c5062fcb1bed86171e0850d1eb38
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185879
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
litleleprikon,2019-07-12 19:16:29,https://api.github.com/repos/golang/tools/git/commits/f4b4e63240932efad190fe5b1f21ed53df8a0d3d,f4b4e63240932efad190fe5b1f21ed53df8a0d3d,"internal/lsp: fix unnecessary error logging

In internal/lsp/link.go appeared a bug that error message is printed
even if error is not apeared. this commit is fixing this behaviour.

Fixes golang/go#33087

Change-Id: I932546867d78c5c0c3d2c9dabd13287f6837f458
Reviewed-on: https://go-review.googlesource.com/c/tools/+/186037
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-27 18:59:09,https://api.github.com/repos/golang/tools/git/commits/128c804424a08c9e7a7c3088d739b97f0b69e00d,128c804424a08c9e7a7c3088d739b97f0b69e00d,"internal/lsp: handle language ID in didOpen calls

This change merely modifies session.DidOpen to accept the document's
language ID. It does not actually add any handling of the language ID.

Change-Id: I2582ae307d1ca062f37b4683907cdbcfdfc61809
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184160
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
litleleprikon,2019-07-07 22:25:19,https://api.github.com/repos/golang/tools/git/commits/8308f912863565ef47725163d9193b36ee0a8bc4,8308f912863565ef47725163d9193b36ee0a8bc4,"internal/lsp: add links search in comments and string literals

Add to ""textDocument/documentLink"" request handler ability to search
URLs in string literals and comments.

Fixes golang/go#32339

Change-Id: Ic67ad7bd94feba0bb67ab090a8903e30b2dff996
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185219
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-07-12 14:45:00,https://api.github.com/repos/golang/tools/git/commits/d5f455491e2f028578d3349b43426ca65e2e0ee0,d5f455491e2f028578d3349b43426ca65e2e0ee0,"go/analysis: update internal/facts and unit checker to support all(Package|Object)Facts methods

Change-Id: Ibae7a87417be49941a5e4970c25df2ff48b346a7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185978
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-07-11 18:53:13,https://api.github.com/repos/golang/tools/git/commits/9a621aea19f8341c01da59e0d42dd97700f677d0,9a621aea19f8341c01da59e0d42dd97700f677d0,"internal/lsp: update the generated lsp protocol

Change-Id: Ic30a6e9e49a67f93419547ea2c61d87109959393
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185777
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-07-09 14:55:41,https://api.github.com/repos/golang/tools/git/commits/9c57229d8a1bf332c4c51b3c55f6d5b924f41f1e,9c57229d8a1bf332c4c51b3c55f6d5b924f41f1e,"internal/lsp: add prometheus exporting of all metrics

Change-Id: I1e7ce371d8abd2eb80aad70935695f61b6374ff8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185347
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-06-27 02:46:12,https://api.github.com/repos/golang/tools/git/commits/75aaabac358ecc1eb86d647e9ba64978397e39ab,75aaabac358ecc1eb86d647e9ba64978397e39ab,"internal/lsp: reduce trace package to minimal StartSpan for now

also change the return type to be and end function and not an incomplete span

Change-Id: Icd99d93ac98a0f8088f33e905cf1ee3fe410c024
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185349
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-09 01:22:37,https://api.github.com/repos/golang/tools/git/commits/6156d14a7ac1bbbd39688aea6c664834c92ff060,6156d14a7ac1bbbd39688aea6c664834c92ff060,"internal/lsp: add the metrics package

This provides the basic support for aggregating stats into useful metrics,
utilizing tags.
This change also adds the standard rpc metrics for the stats the jsonrpc2 system
is already filling in.

Change-Id: Ibe1b64c4c4c587dacd53112454606634e9f682ce
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185342
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
movie-travel-code,2019-07-11 17:00:13,https://api.github.com/repos/golang/tools/git/commits/01b81f4f9334efb0d7397843d5f1cbeac7902a64,01b81f4f9334efb0d7397843d5f1cbeac7902a64,"internal/lsp: support hover for *ast.ImportSpec

Since 'IdentifierInfo' doesn't contain ast node of import spec,
gopls will construct an empty string under plaintext mode and
'```go\n\n```' under markdown mode for *ast.ImportSpec. For now,
the hovering result of import spec is the corresponding node
format.

Fixes golang/go#33000

Change-Id: I4c25782ddb5bcc557ace82f46d480316b0b90509
GitHub-Last-Rev: 150728f401c5f9b161b557584ad3250f46e50869
GitHub-Pull-Request: golang/tools#134
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185357
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-07-11 01:11:23,https://api.github.com/repos/golang/tools/git/commits/5f9351755fc13ce6b9542113c6e61967e89215f6,5f9351755fc13ce6b9542113c6e61967e89215f6,"internal/lsp: stop making background contexts everywhere

For all uses inside the lsp we use the detatch logic instead
For tests we build it in the test harness instead
This is in preparation for things on the context becomming important

Change-Id: I7e6910e0d3581b82abbeeb09f9c22a99efb73142
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185677
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
jadekler,2019-06-28 17:55:43,https://api.github.com/repos/golang/tools/git/commits/286818132824cc7a932bc972207f079caafd739f,286818132824cc7a932bc972207f079caafd739f,"digraph: clean up docs, usage, copyright

- Move verbose usage docs to godoc, replace usage with terse description of
usage and commands.
- Add copyrights.
- Update usage to more canonical function format instead of const format.

Change-Id: I30d072f391bbf9911798e90efb85cd5351d99205
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184177
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2019-07-10 16:46:48,https://api.github.com/repos/golang/tools/git/commits/554846603d9bd6cd876d3c3f3ba31aa16384c78d,554846603d9bd6cd876d3c3f3ba31aa16384c78d,"internal/lsp: update version and go.mod

Change-Id: I637085b8866d561b9ac21a6612b3bdad8cf6c99a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185557
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-07-09 21:53:04,https://api.github.com/repos/golang/tools/git/commits/831012c29e4263b1e52a997b731201ee7d86c76a,831012c29e4263b1e52a997b731201ee7d86c76a,"internal/lsp/debug: increase gopls version before tagging new version

Change-Id: I4273faa26e23dd237078c02439c1bafa2904fcc5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185348
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-07-09 01:53:01,https://api.github.com/repos/golang/tools/git/commits/7b25e351ac0e848b1efa6625bde14603cb29e2b3,7b25e351ac0e848b1efa6625bde14603cb29e2b3,"internal/lsp: rename identifiers in test packages

Support renaming of identifiers in test packages. The packages for
all of the references must be checked and the changes need to be
deduped, since both a package and its test package contain some of the
same files.

Fixes golang/go#32974

Change-Id: Ie51e19716faae77ce7e5254eeb3956faa42c2a09
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185277
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-08 19:15:11,https://api.github.com/repos/golang/tools/git/commits/f82b303b69d78b21fdc1f53a547848b19117caf1,f82b303b69d78b21fdc1f53a547848b19117caf1,"internal/lsp: add new stats library

This is the basic library that allows for recording of stats about the program
operation.

Change-Id: I09f7e3de5fc37aaf29bc0db46f15b15056fc0eb2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185338
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-08 16:53:01,https://api.github.com/repos/golang/tools/git/commits/75a6f91e26f6860d2d2ff1fa2ff501d20fbf0b9b,75a6f91e26f6860d2d2ff1fa2ff501d20fbf0b9b,"internal/lsp: add the new form of the telemetry tagging package

This maps more directly to the basic telementery tagging requirements and uses
the context package in a way that is more idomatic.

Change-Id: If08c429b897bddfe014224ac2d92d7796a521ab9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184941
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-07-08 16:51:26,https://api.github.com/repos/golang/tools/git/commits/8962968d5a005a8e2021b9f681599baa78811bc8,8962968d5a005a8e2021b9f681599baa78811bc8,"internal/lsp: add the worker package

This is used by all the telemetry packages that come next

Change-Id: Ic84d91da2a792b53ee8839aae207ae5767ab17e0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184940
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-07-02 21:31:31,https://api.github.com/repos/golang/tools/git/commits/4f9eeaf1bf48b6552059d5949ad1c86b5091ff21,4f9eeaf1bf48b6552059d5949ad1c86b5091ff21,"internal/lsp: add documentation to completion items

This change adds documentation to the completion items. This normally
should be done in completionItem/resolve, since it takes more time to
compute documentation. However, I am not sure if that latency incurred
by pre-computing documentation is actually significantly more than the
latency incurred by an extra call to 'completionItem/resolve'. This
needs to be investigated, so we begin by just precomputing all of the
documentation for each item.

Updates golang/go#29151

Change-Id: I148664d271cf3f1d089c1a871901e3ee404ffbe8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184721
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-07-09 00:14:33,https://api.github.com/repos/golang/tools/git/commits/e491332ed8cc1fe97843bb892f55fba0bb410c5a,e491332ed8cc1fe97843bb892f55fba0bb410c5a,"internal/lsp: compare names when finding references

Objects for builtin types all have position token.NoPos. We do
not want all objects that have position token.NoPos to be matched
when we are looking for references for this object, so we need to
compare the names of the objects as well.

Fixes golang/go#32991

Change-Id: I67e7aba9909ebcbb246203ea5c572debf996c792
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185247
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-07-08 23:41:40,https://api.github.com/repos/golang/tools/git/commits/07655f7ec712a8fd796ed69ce5895539910e1248,07655f7ec712a8fd796ed69ce5895539910e1248,"internal/lsp: return an error when renaming a builtin

Return an error when attempting to rename a builtin identifier.

Fixes golang/go#32992

Change-Id: I7fb0f9cc9499e5afdfb14805c49c820e4da3b601
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185246
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-07-08 20:11:00,https://api.github.com/repos/golang/tools/git/commits/c8855242db9c1762032abe33c2dff50de3ec9d05,c8855242db9c1762032abe33c2dff50de3ec9d05,"go/packages: add documentation on the driver protocol.

This adds a comment in go/packages/external.go that specifies what the
driver protocol is.

Change-Id: Ie0c272a84cd34ba80f80f68b328463d8ddd07189
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184943
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-07-02 22:35:35,https://api.github.com/repos/golang/tools/git/commits/c93f28baaae07c168b9e3eacc138484da397ec60,c93f28baaae07c168b9e3eacc138484da397ec60,"internal/lsp: check no errs for assignability rename

The satisfy package has a precondition for Finder.Find that requires
that the package has no type errors. If this is a check that we would
perform, give an error and do not rename.

Fixes golang/go#32882

Change-Id: Id44b451bf86ff883fd78a6306f2b2565ad3bdeb9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184857
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
movie-travel-code,2019-07-08 09:55:40,https://api.github.com/repos/golang/tools/git/commits/dd7c7173f160f55e5c8583101f0e9ae2b7c4ce57,dd7c7173f160f55e5c8583101f0e9ae2b7c4ce57,"internal/lsp: remove the unused function 'markupContent'.

The last usage of 'markupContent' has been deleted in
https://go-review.googlesource.com/c/tools/+/172958.

Change-Id: I03296fa93069427339f17c7b2ad2267030a5b99b
GitHub-Last-Rev: a85b88cdfd00c8d1edf4fdad6302486379beae9a
GitHub-Pull-Request: golang/tools#132
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185237
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
myitcv,2019-07-08 15:07:47,https://api.github.com/repos/golang/tools/git/commits/60762fc531e6fae24fe8b52cf41f4dc6c03cea47,60762fc531e6fae24fe8b52cf41f4dc6c03cea47,"internal/lsp: fix test failure introduced in CL 185058

Failed to properly check the try-bot result in CL 185058. Hence didn't
spot the LSP tests that also verify offset behaviour. This CL fixes
those tests to align the LSP tests with the change introduced in CL
185058.

Change-Id: Ia81ab6db7a2c3a4729d8ef73205b6071af270b00
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185220
Run-TryBot: Paul Jolly <paul@myitcv.org.uk>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
myitcv,2019-07-04 08:55:57,https://api.github.com/repos/golang/tools/git/commits/72ffa07ba3db8d09f5215feec0f89464f3028f8e,72ffa07ba3db8d09f5215feec0f89464f3028f8e,"internal/span: handle character values beyond end of line in FromUTF16Column

On the assumption these implementations are designed to
support/implement the LSP spec, FromUTF16Column should handle the case
where a character value is beyond the end of the line.

https://github.com/Microsoft/language-server-protocol/blob/gh-pages/specification.md#position:

> * If the character value is greater than the line length it defaults back to the
> * line length.

Fixes golang/go#31883

Change-Id: I370845b7f2f046d8e84048a26bae5b23e9c27d06
Reviewed-on: https://go-review.googlesource.com/c/tools/+/185058
Run-TryBot: Paul Jolly <paul@myitcv.org.uk>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-07-01 21:08:29,https://api.github.com/repos/golang/tools/git/commits/2214986f1668163f6c7315bcfa4a6496af4c3829,2214986f1668163f6c7315bcfa4a6496af4c3829,"internal/lsp/fuzzy: add fuzzy matching library

This change uses a fuzzy matching library to score completion results.

Updates golang/go#32754

Change-Id: Ia7771b33534de393a865443e05c0fcbf1e9a969b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184441
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-07-02 22:10:05,https://api.github.com/repos/golang/tools/git/commits/719fbf7c21f0b080aaf9b16df18e1b3b59260d58,719fbf7c21f0b080aaf9b16df18e1b3b59260d58,"internal/lsp: move function signature into detail instead of label

Fixes golang/go#32414

Change-Id: If08e655d7a0e29b0865c13d8377e98be01cf24c5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184777
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-06-25 04:50:01,https://api.github.com/repos/golang/tools/git/commits/504de27b367af6ad4eab54c9d0486ca9b3e2606a,504de27b367af6ad4eab54c9d0486ca9b3e2606a,"internal/lsp: connect memoize actions to their callers

This adds the ability to tie a background context to the context that created it
in traces, and also cleans up and annotates the context used in type checking.
This gives us detailed connected traces of all the type checking and parsing
logic.

Change-Id: I32721220a50ecb9b4404a4e9354343389d7a5219
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183757
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-06-21 20:28:23,https://api.github.com/repos/golang/tools/git/commits/4457e4cfd49e5ab5e998d5829ac6530c56bcb5b9,4457e4cfd49e5ab5e998d5829ac6530c56bcb5b9,"internal/lsp: add some trace spans to important functions

This uses the new opencensus compatability layer to add telementry to some of
the functions in the lsp, in order to allow us to understand their costs and
call patterns.

Change-Id: I7df820cd4eace7a4840ac6397d5df402369bf0a7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183419
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-07-02 21:41:09,https://api.github.com/repos/golang/tools/git/commits/abb7e64e8926d66086e3708e237aadde4226e9eb,abb7e64e8926d66086e3708e237aadde4226e9eb,"internal/lsp: include declaration for references

A client can specify ""IncludeDeclaration"" in its ReferenceParams.
When they do so, we want to include the declaration, even if it was not
in the scope we searched for references.

Additionally, we also return the location of the declaration first in
the result array when it is included in the results.

Updates golang/go#32572

Change-Id: I12837cd98102ee8d531f0f4bac2fb7bded2564c0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184723
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
jba,2019-07-03 17:06:27,https://api.github.com/repos/golang/tools/git/commits/063514c48b266a22eca80e1db0591f5f8b41ecac,063514c48b266a22eca80e1db0591f5f8b41ecac,"internal/lsp/cmd: replace time.Tick with time.After

time.Tick produces multiple ticks (and leaks a Ticker); time.After
produces a single tick, which is what is called for here.

Change-Id: I922b11e1263a8367afec76c10831b7284f3559ec
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184938
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-07-02 22:37:59,https://api.github.com/repos/golang/tools/git/commits/1c78e262338f760ac624f8212acaad9a23c3525b,1c78e262338f760ac624f8212acaad9a23c3525b,"internal/lsp: add configuration for hover levels

Instead of defaulting to a one sentence synopsis for documentation on
hover, allow the user to configure the amount of documentation they want
to see. Right now, the options are none, some (using go/doc.Synopsis),
or all. We should add a 4th, single-line, mode, which will allow clients
like vim-go to stop stripping off documentation on hover.

Updates golang/go#32561

Change-Id: I529242da84b794636984d5ef2918b7252886f0ef
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184797
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
johanbrandhorst,2019-07-02 19:24:52,https://api.github.com/repos/golang/tools/git/commits/44aeb8b7c377f1eed68ac06f687821c6658c65a2,44aeb8b7c377f1eed68ac06f687821c6658c65a2,"cmd/present: correct function reference.

A previous change introduced a new way of storing
which page should be synced with the notes, but
used the wrong function name. This corrects the
function reference.

Fixes golang/go#32902

Change-Id: Iefbb189eae12f0d53e46e6f42d3526302515cab3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184737
Run-TryBot: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Bryan C. Mills <bcmills@google.com>"
stamblerre,2019-06-29 01:27:41,https://api.github.com/repos/golang/tools/git/commits/7e72c71c505fa4ee8da98520d2b0673ba2eefe56,7e72c71c505fa4ee8da98520d2b0673ba2eefe56,"internal/lsp: hide signature help in function literals

Often anonymous functions can be passed as arguments to a function. In
these cases, it can be annoying for a user to see signature help for the
entire duration of their writing this function. This change detects if
the user is typing in a function literal and disables signature help in
that case.

Fixes golang/go#31633

Change-Id: I7166910739b6e1ec0da2ec852336136b81d13be0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184260
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Suzy Mueller <suzmue@golang.org>"
suzmue,2019-06-27 18:01:56,https://api.github.com/repos/golang/tools/git/commits/f80f67146e584e84e6c179fdb72a38f367331d6e,f80f67146e584e84e6c179fdb72a38f367331d6e,"internal/lsp: support renaming import specs

Support the renaming of the imported name of a package within a file.
This case needs to be special cased because the ident may be added or
removed.

Change-Id: I333bc2b2ca5ce81c4a2afb8b10035f525dfad464
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184199
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-06-28 19:19:56,https://api.github.com/repos/golang/tools/git/commits/9bea2ecb9504b47b0689751119be8b92a371a771,9bea2ecb9504b47b0689751119be8b92a371a771,"internal/imports: refactor to split finding and applying fixes

A pass is responsible for fixing the imports of a given file. It now
finds the necessary changes to make without applying the result to the
ast, which may be desirable to give a user more control about what
changes will be applied to their program. This change splits the process
of finding the fixes from making the modifications to the ast to allow
this functionality to be easily possible.

Change-Id: Ibf8ca247c35539f91de4be90c634f0db9a939d07
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184197
Reviewed-by: Heschi Kreinick <heschi@google.com>
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-06-28 20:21:07,https://api.github.com/repos/golang/tools/git/commits/38ae2c8f64122bd595b7f93f968a6686cd27bb5a,38ae2c8f64122bd595b7f93f968a6686cd27bb5a,"internal/lsp, internal/imports: use the internal goimports library

This change modifies gopls to use the internal goimports library, which
allows us to manually configure the ProcessEnv. We also add a logger to
the ProcessEnv to allow this change not to conflict with gopls's logging
mechanism.

Fixes golang/go#32585

Change-Id: Ic9aae69c7cfbc9b1f2e66aa8d812175dbc0065ce
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184198
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
stamblerre,2019-06-28 23:32:53,https://api.github.com/repos/golang/tools/git/commits/e47c3d98c3071163206f20da3b00aaf9e9bbe4dc,e47c3d98c3071163206f20da3b00aaf9e9bbe4dc,"internal/lsp: check file content on disk when opening

As per discussion on golang/go#32810, to avoid the `go list` storm caused by many
files being opened, we check if the file content opened is equivalent to
the content on disk. If so, we mark this file as ""on disk"" so that we
don't send it as an overlay to go/packages.

Updates golang/go#32810

Change-Id: I0a520cf91bbe933c9afb76d0842f5556ac4e5b28
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184257
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-06-26 22:05:29,https://api.github.com/repos/golang/tools/git/commits/58bb5bbe30c4eb074100b90be6b81beba70f37b7,58bb5bbe30c4eb074100b90be6b81beba70f37b7,"internal/lsp: find references in test packages

Find references to identifiers in both a package and its test package.

Change-Id: I9d9da4aa37c36c448336aed044df79cfd1c903f1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183990
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-28 01:26:42,https://api.github.com/repos/golang/tools/git/commits/e750c417fbbc76ecc8514bcc384e9b3337b49a7d,e750c417fbbc76ecc8514bcc384e9b3337b49a7d,"internal/lsp: handle the context.only parameter for code actions

This change refactors code actions to handle the Context.Only parameter,
which indicates which code actions a language server should execute.

Change-Id: Iddfccbbeba3a53fde2aa8df844434f2ab9d01666
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184158
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-28 23:59:25,https://api.github.com/repos/golang/tools/git/commits/970b2b065d9c2a179350fb945834b04c4e349656,970b2b065d9c2a179350fb945834b04c4e349656,"internal/lsp: fix bug where gopls hangs on manually typed imports

Fixes golang/go#32797

Change-Id: I0d2975561035c3ac5f5cd460ecdee452c2f6a17f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184258
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-28 20:37:54,https://api.github.com/repos/golang/tools/git/commits/fb37f6ba82613749b0b522aa509da78361849fc3,fb37f6ba82613749b0b522aa509da78361849fc3,"internal/lsp: fix deadlock in type-checking

There was a situation where we were trying to re-acquire a lock that was
already held. This change solves this issue.

Change-Id: I97cf6bad7e7c219a267e3ca5d174a2573f70ebe2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184217
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-06-28 02:18:22,https://api.github.com/repos/golang/tools/git/commits/59bec042292dcfabf5c63176f6468abd2c8fc2d0,59bec042292dcfabf5c63176f6468abd2c8fc2d0,"internal/lsp: clear diagnostics for files on close, even with errors

Change-Id: I7230d560c57455c53200f4d8f2702fbbdd3f5e51
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184162
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-28 16:46:49,https://api.github.com/repos/golang/tools/git/commits/d5de6b6fc58bc539be97fad40cfb7a86d38d9bcf,d5de6b6fc58bc539be97fad40cfb7a86d38d9bcf,"tools: update go.mod

Change-Id: I00c016e9fe43d8ec141aa212dfc45044d819f28d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184168
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-06-27 18:09:03,https://api.github.com/repos/golang/tools/git/commits/6cfa55603c286bef3d2de051f6603e4140181f6d,6cfa55603c286bef3d2de051f6603e4140181f6d,"internal/lsp: check ident exists for comment rename

The identifier in a reference is used to check for a doc comment.
Implicits do not have an ident, so do not use that to look for a doc
comment.

Also set the context.Context for the renamer.

Change-Id: I085d9e6c11d919222592dcb6fb30982eeb0fc7cd
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184042
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-28 16:53:43,https://api.github.com/repos/golang/tools/git/commits/86796bd73f73e873063b463d70f2ecd012635806,86796bd73f73e873063b463d70f2ecd012635806,"internal/lsp: update version

Change-Id: Ic56ff917846589f12c4c214ea1ac19eac45b187e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184167
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-28 16:42:24,https://api.github.com/repos/golang/tools/git/commits/e9dfff8d5ac400ac6bd3d485bd4c5c4f2a47571e,e9dfff8d5ac400ac6bd3d485bd4c5c4f2a47571e,"gopls: update go.mod file

Change-Id: I55cb89de76d64c0f2c6d3b3e680b0f5c8e72154b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184166
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-28 02:07:33,https://api.github.com/repos/golang/tools/git/commits/af4a5fc627484effc5dcaa52eb8907b169662a1c,af4a5fc627484effc5dcaa52eb8907b169662a1c,"internal/lsp: fix bug in missing imports tracking

Change-Id: Iaba7e9cd8a8fb54f8e78f52afa0ef98790288c93
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184161
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
pjweinb,2019-06-27 23:49:48,https://api.github.com/repos/golang/tools/git/commits/6cdbf07be9d0ad08776df0b65fb1b3e4e617c42a,6cdbf07be9d0ad08776df0b65fb1b3e4e617c42a,"internal/lsp: new requests.ts to generate new versions of tsclient.go and tsserver.go

Adjust the output of requests.ts to use the new facilities of jsonrpc2.go.

Change-Id: I316f7846db9f683345b836915d992e751f126196
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184081
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-27 20:28:22,https://api.github.com/repos/golang/tools/git/commits/212fb13d595e5faf79425c78ae101012873a81a1,212fb13d595e5faf79425c78ae101012873a81a1,"internal/lsp: match completions case-insensitively

Change-Id: I31f2ea338ae3e2ec2837a444705f990e140ebc77
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184159
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-06-27 03:36:29,https://api.github.com/repos/golang/tools/git/commits/85b1a4bcd4e667b8036f04a5dc3d26eb12688b9e,85b1a4bcd4e667b8036f04a5dc3d26eb12688b9e,"internal/jsonrpc2: add some extra comments

Change-Id: I31531f32a88a02acf82814ab4ea151e54fd6d0fc
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184037
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-27 20:29:03,https://api.github.com/repos/golang/tools/git/commits/94c5763a7c8445e53114d02cae1060df14079935,94c5763a7c8445e53114d02cae1060df14079935,"internal/lsp: handle err in formatRange

Change-Id: I4aa2715c7adf541da814cb60dd5205dd6e575b61
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184044
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Suzy Mueller <suzmue@golang.org>"
matloob,2019-06-12 15:27:36,https://api.github.com/repos/golang/tools/git/commits/19ff4fff8850daad8ce6b52f7a6aad790cf87b3f,19ff4fff8850daad8ce6b52f7a6aad790cf87b3f,"go/packages: avoid loading some packages in when computing overlays

In some cases, it's safe to avoid loading additional packages
when computing overlays. However it's not always safe to do so.
Avoid some unnecessary loads when it's completely safe to do so.

Updates golang/go#32538

Change-Id: Ie12204735940a540c9b3f29742f8479bcab5f077
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181917
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-06-27 18:49:29,https://api.github.com/repos/golang/tools/git/commits/aac0b97cf93b20107ae688cd90e54cdc211fd043,aac0b97cf93b20107ae688cd90e54cdc211fd043,"go/packages: fix bug in contains for ad-hoc packages

The test was wrong and the code was wrong.

Change-Id: I4ffe4bb4788912210b307a06e168629c6800d0fb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184043
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-27 17:28:40,https://api.github.com/repos/golang/tools/git/commits/9947fec5c3ab2e0e52fb2890e20ab960eed216c2,9947fec5c3ab2e0e52fb2890e20ab960eed216c2,"internal/lsp: modify check for a missing package

Trying again. Apparently it's useful to run tests before submitting
code.

Change-Id: I487ffd391663cba47d2b26e8346cc7ac589dcd1a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184041
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
freeformz,2019-06-27 16:17:07,https://api.github.com/repos/golang/tools/git/commits/1a55b1581c4637db109fd31393d03436087fe797,1a55b1581c4637db109fd31393d03436087fe797,"internal/lsp/source: move the common path to the left

As per the following guidance: ""Try to keep the normal code path at a minimal indentation""

I know this is normally applied to error handling, but the same logic about improving readability applies here too.

Change-Id: Ib20dae9975e94b40fb6ff7049782375b18ef59ba

Change-Id: Ib20dae9975e94b40fb6ff7049782375b18ef59ba
GitHub-Last-Rev: 97919272de76ec15845556e032985c5969a277fa
GitHub-Pull-Request: golang/tools#125
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183698
Reviewed-by: Suzy Mueller <suzmue@golang.org>
Run-TryBot: Suzy Mueller <suzmue@golang.org>"
stamblerre,2019-06-27 17:24:40,https://api.github.com/repos/golang/tools/git/commits/ba023a1bc99eeb4f4a1791af897917fd8b046629,ba023a1bc99eeb4f4a1791af897917fd8b046629,"Revert ""internal/lsp: modify check for a missing package""

This reverts commit 55ee3a41311a7fa2447fd773c868f0d13555f695.

Reason for revert: <forgot to run trybots>

Change-Id: I6d0890e2514841244a2a1f8ca861107c5de1f8aa
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184040
Reviewed-by: Suzy Mueller <suzmue@golang.org>"
stamblerre,2019-06-27 17:07:30,https://api.github.com/repos/golang/tools/git/commits/55ee3a41311a7fa2447fd773c868f0d13555f695,55ee3a41311a7fa2447fd773c868f0d13555f695,"internal/lsp: modify check for a missing package

This change moves from marking a package with `go list` errors as
missing, to marking a package with no files as missing.

Change-Id: Ibad1e67518d8a7f4c4bde416c53ab8132ae534e3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184039
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-27 16:39:54,https://api.github.com/repos/golang/tools/git/commits/4e38253394d6762ca10c127634fd01762526b642,4e38253394d6762ca10c127634fd01762526b642,"internal/span: catch potential panics in go/token

Updates golang/go#32639

Change-Id: Ib413fc316af4308d8928647ff36a437d243a9c11
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184038
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-26 18:34:36,https://api.github.com/repos/golang/tools/git/commits/043e3d946a6c7cda6aafb44f171e03bcf15b42e3,043e3d946a6c7cda6aafb44f171e03bcf15b42e3,"internal/lsp: fix race condition in type-checking

There has been a race condition that occasionally appears in test runs
on TryBots. Multiple threads perform type-checking, so they may race on
setting the fields of the *goFiles. Add a mutex to synchronize this.

Change-Id: If52c9d792c6504fc89044964998b06de7dfbd19c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183978
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
myitcv,2019-06-27 07:26:21,https://api.github.com/repos/golang/tools/git/commits/0707a68ae860d085a25eb907ccaaa5dd7e6a0c6e,0707a68ae860d085a25eb907ccaaa5dd7e6a0c6e,"all: go mod tidy all modules under x/tools

CL 183264 accidentally introduced a circular modular reference from
golang.org/x/tools -> golang.org/x/tools/gopls.

Fixed by running go mod tidy on all modules under the x/tools repo for
good measure.

Change-Id: Ib09b111315cb107bc4e34015b74266d2522f33fd
Reviewed-on: https://go-review.googlesource.com/c/tools/+/184018
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Bryan C. Mills <bcmills@google.com>
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-06-24 13:16:28,https://api.github.com/repos/golang/tools/git/commits/4874f863e654449ac721e9d65f7467dbaba3da2e,4874f863e654449ac721e9d65f7467dbaba3da2e,"internal/jsonrpc2: change the concurrency strategy

This abandons the limited size queue
Instead we kick a go-routine per request, but have each request wait for the
previous request to say it is okay to continue. This allows each request to
control when it is finished with tasks that required strict ordering without
every blocking the routine that handles replies.
It also protects against repeated or missing replies.

Fixes golang/go#32631
Fixes golang/go#32589
Fixes golang/go#32467
Fixes golang/go#32360
Fixes golang/go#31977

Change-Id: Icd071620052351ec7f8fac136f1b8e3f97d4bb2d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183718
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-06-24 13:18:31,https://api.github.com/repos/golang/tools/git/commits/619de4ed6790d0a78186875fe81e28420e8cbcb5,619de4ed6790d0a78186875fe81e28420e8cbcb5,"internal/jsonrpc2: refactor to enable a more advanced request

This separates hides the wire structures, and then exposes a new Request
type to allow for it to carry advanced features.
It also embeds the connection into the request and changes the signature of the
handler to no longer require a separate Conn argument.

Change-Id: I20b54f146285f7a9cb5f279c6ebdf0f286f4b829
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183717
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-06-21 20:26:30,https://api.github.com/repos/golang/tools/git/commits/a6ef77d3cb2d022b636aba9bf5dfdb823dbc977e,a6ef77d3cb2d022b636aba9bf5dfdb823dbc977e,"internal/jsonrpc2: add telemetry to the rpc system

This uses the opencensus compatability later to track all the json rpc calls in
and out.

Change-Id: Ib719879a8d6855b6e6479a4f1b01fe823b548110
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183248
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-26 21:03:11,https://api.github.com/repos/golang/tools/git/commits/a575db70c06744141b7a52bb6c4aff8d860588c6,a575db70c06744141b7a52bb6c4aff8d860588c6,"go/packages: check error in addNeededOverlayPackages

Change-Id: I65e4817da00695007fa62554e61ff4d61c19eb44
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183988
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-06-20 20:57:45,https://api.github.com/repos/golang/tools/git/commits/e8e6be9f454cfa4adddf4e1fb87ed70f958d7321,e8e6be9f454cfa4adddf4e1fb87ed70f958d7321,"internal/lsp: plumb suggested fixes through the LSP

Change-Id: Ia9e077e6b9cf8a817103d90481768ae99409c574
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183264
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-17 17:07:16,https://api.github.com/repos/golang/tools/git/commits/7ef8a99cf38d6ce8fdee03746bc7f58a48eff71e,7ef8a99cf38d6ce8fdee03746bc7f58a48eff71e,"internal/lsp: enable incrementalSync by default

This change also leaves in an opt-out setting (noIncrementalSync), just
in case we need to disable it at some point.

Change-Id: I3575efe942294b764c35d9259ce75d124b590e98
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182468
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-26 19:24:04,https://api.github.com/repos/golang/tools/git/commits/cd2ed857af9b4c9b1ce2aeb39b18973117f8ea28,cd2ed857af9b4c9b1ce2aeb39b18973117f8ea28,"internal/lsp: fix panic in computing file version

Fixes golang/go#32791

Change-Id: I04fc3de5ed94137424a32f3e7200ba72d3913329
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183984
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-06-20 19:57:29,https://api.github.com/repos/golang/tools/git/commits/cf32dd832e4b9969e3e4a278334af8b89de6ac29,cf32dd832e4b9969e3e4a278334af8b89de6ac29,"go/analysis/doc: add  doc about suggested_fixes.

Change-Id: Ie0c2ef42665312e679feb34202588a9dd78bbfd2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183262
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
freeformz,2019-06-24 21:48:30,https://api.github.com/repos/golang/tools/git/commits/d1f656545b674ade3c8f42d8cdaaf4f714a73a6a,d1f656545b674ade3c8f42d8cdaaf4f714a73a6a,"internal/lsp/source: don't panic compiling regex

This package is basically a library (even though it's internal) and
it's generally considered a bad practice for libraries to panic, so
don't.

Change-Id: I37d9d73ae48ececc6b31436f1076e1f85213f129

Change-Id: I37d9d73ae48ececc6b31436f1076e1f85213f129
GitHub-Last-Rev: 453b538e53e48889171d31829af3304409f9a8bc
GitHub-Pull-Request: golang/tools#124
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183680
Reviewed-by: Suzy Mueller <suzmue@golang.org>"
stamblerre,2019-06-24 20:34:21,https://api.github.com/repos/golang/tools/git/commits/3cbd95df513543ea0e3c8e6dbf9c3ef3792bebd2,3cbd95df513543ea0e3c8e6dbf9c3ef3792bebd2,"internal/lsp: support a file belonging to multiple packages

This change adds supports for a package belonging to multiple files.
It requires additional packages.Loads for all of the packages to which a
file belongs (for example, if a non-test file also belongs to a package's
test variant).

For now, we re-run go/packages.Load for each file we open, regardless of
whether or not we already know about it.

This solves the issue of packages randomly belonging to a test or not.
Follow-up work needs to be done to support multiple packages in
references, rename, and diagnostics.

Fixes golang/go#32791
Fixes golang/go#30100

Change-Id: I0a5870a05825fc16cc46d405ef50c775094b0fbb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183628
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-21 21:00:02,https://api.github.com/repos/golang/tools/git/commits/252024b8295926254bbc18903b9b7d4f0389df2f,252024b8295926254bbc18903b9b7d4f0389df2f,"internal/lsp: separate refactorings out of memoization CL

This change just separates minor changes made along the course of the
memoization CL out into their own change. This will clean up the diffs
in the memoization CL.

Change-Id: I7d59e05ba6472af5f1bf516b1e5b879a5815b9a5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183250
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
danicat,2019-05-24 13:50:18,https://api.github.com/repos/golang/tools/git/commits/a101b041ded4588cfeb96c45f394050221b40f11,a101b041ded4588cfeb96c45f394050221b40f11,"cmd/present: use unique key for destSlide in local store

We use a 'destSlide' entry in the local storage to keep presentation
and notes in sync while using '-notes' flag. This caused a name
collision if we had different presentations open at the same time.

This changes the 'destSlide' key in local storage to
'destSlide:<presentation-url>' to avoid collisions between different
presentations.

Fixes golang/go#24688

Change-Id: I4833fa83856a96b5978c09ed7e4360484ba4f109
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178659
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
dmitshur,2019-06-22 01:59:57,https://api.github.com/repos/golang/tools/git/commits/7f22187876386a0191627eacc82c8a69e6eb33d6,7f22187876386a0191627eacc82c8a69e6eb33d6,"go/loader: document that package is deprecated

By now, go/packages is ready for widespread use and has obsoleted
go/loader. CL 141684 and CL 155237 removed warnings from go/packages
documentation. Add a deprecation notice to go/loader for visibility.

Modify the deprecation notice in other packages to be consistent with
the deprecation convention as documented at golang.org/wiki/Deprecated.

Change-Id: Iaa93205a6e5beb3ec95f87a6d9d42f0b8ffe8e80
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183418
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-06-24 16:57:11,https://api.github.com/repos/golang/tools/git/commits/663943adaa4df3a602f08cf7d0145e5fdb157e40,663943adaa4df3a602f08cf7d0145e5fdb157e40,"go/packages: fix mistake for ad-hoc packages

Change-Id: I6247e0392a43cf4c4f4ded8446e045dfcd8e423d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183620
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2019-06-14 22:32:09,https://api.github.com/repos/golang/tools/git/commits/64633d5e86290dc950eb1202bcbdfb48b83c1ac9,64633d5e86290dc950eb1202bcbdfb48b83c1ac9,"internal/lsp: add telemetry stubs

This is designed to provide a compatible API to opencensus libraries while we
still cannot directly depend on it.
Most of this will be deleted again when we move the code over into the
sub-module.

Change-Id: I42b561f4f403c18cd22fb909b037f584ea90ad1b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183247
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-06-20 19:24:17,https://api.github.com/repos/golang/tools/git/commits/70d37148ca0c4cc85774332f301132d213c9c46c,70d37148ca0c4cc85774332f301132d213c9c46c,"internal/lsp: update doc comments on rename

Replace doc comment text for the declaration of an identifier with the
new name.

This implementation is taken from golang.org/x/tools/refactor/rename.

Change-Id: Id1b80fad456646a46c8ae2caa4e8febf05aaf798
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183261
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
agnivade,2019-06-24 08:31:44,https://api.github.com/repos/golang/tools/git/commits/8ea4f8e3e5bfd414380c369ad66f924066e789f7,8ea4f8e3e5bfd414380c369ad66f924066e789f7,"refactor/rename: remove extraneous space

Fixes golang/go#27573

Change-Id: I484878c612c50009316bc7d03e4157b455421236
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183577
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-20 18:52:06,https://api.github.com/repos/golang/tools/git/commits/6e04913cbbac05c5c0c9d8f237717e292f700e76,6e04913cbbac05c5c0c9d8f237717e292f700e76,"internal/lsp: fix bug in creating token.Files

Change-Id: Ib133762b6848d78fd3d264b211b44b36316a551d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183260
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-06-11 19:09:43,https://api.github.com/repos/golang/tools/git/commits/1fa568393b23e69144eafde9840835928bb33567,1fa568393b23e69144eafde9840835928bb33567,"internal/lsp: check for conflicts on rename

Before renaming a variable, check the package to make sure that this
renaming would not result in a conflict that could break the program.

All of the implementation is taken from ""refactor/rename"" with the
dependency on ""go/loader"" removed.

Change-Id: Ib0782ec8f247a6df1750f2c8213f69186699ce1a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183257
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-06-20 15:29:44,https://api.github.com/repos/golang/tools/git/commits/494e18b268547195c59a3e1b6c1b0f58385aff86,494e18b268547195c59a3e1b6c1b0f58385aff86,"internal/lsp: send client expected rename provider

This change sends the expected boolean value for 'renameProvider'
to the client.

When a client does not send 'prepareSupport' in its initial
'initialize' request, the client expects to get a boolean value for
'renameProvider'. Since we do not yet provide prepare support, we just
set 'renameProvider' to true regardless of the value of prepareSupport.

Fixes golang/go#32703

Change-Id: I1103e51e1a2927b98aaedf2839996e9cd7f7cbcc
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183259
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-06-20 15:19:49,https://api.github.com/repos/golang/tools/git/commits/e0e20f22c01fe0f7629a795e1ab071563f5e29e6,e0e20f22c01fe0f7629a795e1ab071563f5e29e6,"go/packages: trim errors returned by go list

go list sometimes sticks a leading newline in its error messages
have go/packages trim them until go list does the right thing

(of course, no one should depend on this behavior)

Fixes golang/go#32363

Change-Id: I6e145fb85bfc9d710c5f06146a64ec6919f59e36
Reviewed-on: https://go-review.googlesource.com/c/tools/+/183258
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dominik Honnef <dominik@honnef.co>"
suzmue,2019-06-18 14:23:37,https://api.github.com/repos/golang/tools/git/commits/4adf7a708c2de4c9ea24a1f351c2e1c9b82fbde8,4adf7a708c2de4c9ea24a1f351c2e1c9b82fbde8,"internal/lsp: add identifier renaming

This change provides support to rename identifiers within a single
package.

The renaming is performed by finding all references to an identifier,
and then creating text edits to replace the existing text with the
new identifier.

Editing an import spec is not supported.

Fixes #27571

Change-Id: I0881b65a1b3c72d7c53d7d6ab1ea386160dc00fb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182585
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
suzmue,2019-06-14 18:55:24,https://api.github.com/repos/golang/tools/git/commits/b76e30ffa0aae7f195c4a462ebbef1aba735d27f,b76e30ffa0aae7f195c4a462ebbef1aba735d27f,"internal/lsp: fix references for type switch vars

Implicit local variables for type switches do not appear in the Uses
map and do not have objects associated with them.  This change
associates all of the different types objects for the same local type
switch declaration with one another in the declaration.

The identifier for the implicit local variable does not have a type but
does have declaration objects.

Find references for type switch vars will return references to all the
identifiers in all of the case clauses and the declaration.

Fixes golang/go#32584

Change-Id: I5563a2a48d31ca615c1e4e73b46eabca0f5dd72a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182462
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-06-18 22:25:22,https://api.github.com/repos/golang/tools/git/commits/8b2b8cf54a6a1ee11911d31b72c90e3f92054cfc,8b2b8cf54a6a1ee11911d31b72c90e3f92054cfc,"internal/lsp: add a field on the package to store diagnostics

So we can surface their code actions later.

Change-Id: I735e5d025a1250861d49db227f5a79453f599140
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182837
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-06-17 19:34:24,https://api.github.com/repos/golang/tools/git/commits/c152035a7b8ea75a594fe6905b4334aea566bd8a,c152035a7b8ea75a594fe6905b4334aea566bd8a,"go/packages: support test files in overlays

Fixes golang/go#31542

Change-Id: I4dd303a43e16d301142010db5633e80e20cd2e76
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182583
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
movie-travel-code,2019-05-30 10:13:54,https://api.github.com/repos/golang/tools/git/commits/bf5f34bf872323daf6f0a0034ff2ffe1c0a1b1f4,bf5f34bf872323daf6f0a0034ff2ffe1c0a1b1f4,"internal/lsp: remove the redundant `Server.Run()` call.

`go s.Run(ctx)` repeats `h(s)`.

Change-Id: I03ae6df64ad34194b8f46aabd0cf67e5a9e8c777
GitHub-Last-Rev: 3669875d72a196a8c84fb1709a7cf9f84fdbb688
GitHub-Pull-Request: golang/tools#105
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179297
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-18 16:41:22,https://api.github.com/repos/golang/tools/git/commits/04b924abaa25159becde493bc31b979bcecd4887,04b924abaa25159becde493bc31b979bcecd4887,"internal/lsp: enable textDocument/didSave notifications

The previous change to handle didSave never actually was turned on
because you need to specify it in the server capabilities.

Change-Id: I5ce40b4270eda125e0af6accf144d2a96070238c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182777
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-06-14 22:31:00,https://api.github.com/repos/golang/tools/git/commits/ab136c9d47137e9efce9a5142045610154871775,ab136c9d47137e9efce9a5142045610154871775,"internal/lsp: switching debug pages to not use the default mux

Change-Id: I270fd1d4d44986aed6655da93e7388628f7b8b9c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182467
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-14 21:16:26,https://api.github.com/repos/golang/tools/git/commits/fdf1049a943acdab3a1008d66838170551d1dedb,fdf1049a943acdab3a1008d66838170551d1dedb,"internal/lsp: determine diagnostics to show per-file, not per-package

Previously, if any one file in a package had a parse error, we would not
send type errors for any of the other files. Now we make this decision
per-file, so that, even if a file has parse errors, type errors in the
other files will be shown.

Fixes golang/go#32596

Change-Id: I086c04f0ec37cd1b33845153328faf368232d834
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182466
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-17 18:37:25,https://api.github.com/repos/golang/tools/git/commits/1d40570c5c726e05e8ab95c7fb86a26cd5fa0f8b,1d40570c5c726e05e8ab95c7fb86a26cd5fa0f8b,"go/packages: fix support for ad-hoc packages to handle errors

This change retries the query even if go/packages returns an error, not
just an empty response.

This also fixes support for ad-hoc packages in gopls.

Change-Id: I7bc07c225568efd18f4e5759f7eb3c23cd12bfa4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182580
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-06-03 20:06:25,https://api.github.com/repos/golang/tools/git/commits/6fea9ef05e7acc76b65a0e3ff75325223f999e43,6fea9ef05e7acc76b65a0e3ff75325223f999e43,"go/analysis: add SuggestedFix to Diagnostic

This change is uploaded for discussion.

This adds a SuggestedFix field to Diagnostic that can be used
to prepare refactorings or to surface fixes for diagnostics
when they're shown by the LSP.

Change-Id: Icad3bb78540b55df1707955139c889f612d1084f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181941
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-06-14 17:17:31,https://api.github.com/repos/golang/tools/git/commits/4bb205a2067d17ffba8609084fd437e5b1775cf1,4bb205a2067d17ffba8609084fd437e5b1775cf1,"go/packages: add support for file= queries on ad-hoc packages

This will do a go list using a filename directly if listing using
the directory failed.

Fixes golang/go#32587

Change-Id: Id9993968f0ebc18a455132e0f1468356416a66dd
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182465
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
freeformz,2019-06-14 20:32:31,https://api.github.com/repos/golang/tools/git/commits/7653e6d3d5edc0ac8e4a3d0c9d9cdbf718618855,7653e6d3d5edc0ac8e4a3d0c9d9cdbf718618855,"internal/lsp/cache: fix ineffectual err assignment

The `if err :=` block creates a shadow err value that is then discarded
after the block.

Change-Id: I78f6a7298ac5d3d86ece056a9e328bcee9fdc683

Change-Id: I78f6a7298ac5d3d86ece056a9e328bcee9fdc683
GitHub-Last-Rev: 4bac8fb982fa3a0724206422b1a4dbc5e41c34a9
GitHub-Pull-Request: golang/tools#114
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181777
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
linguohua,2019-06-14 22:42:14,https://api.github.com/repos/golang/tools/git/commits/97de5656fd0abb4da8799a4c7235e596f1ae41e3,97de5656fd0abb4da8799a4c7235e596f1ae41e3,"internal/lsp/diff: remove redundant memory allocate and copy operations in function 'shortestEditSequence'.

These redundant operations can cause more memory and cpu consumption.

Change-Id: I54e0e23a8d1079c7991f55c897c441566c5fb2d8
GitHub-Last-Rev: 13162aa1e88ff272738c6a6675010edd2140c8a4
GitHub-Pull-Request: golang/tools#120
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182478
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-06-14 19:08:02,https://api.github.com/repos/golang/tools/git/commits/5aca471b1d59ca42d39ca6419e64061391b9a6ad,5aca471b1d59ca42d39ca6419e64061391b9a6ad,"internal/lsp: clear diagnostics when all files from a package are closed

This change clears diagnostics for a package when all files from that
package have been closed in the editor. This prevents the user from
seeing irrelevant diagnostics.

Change-Id: I63d337805835dc45086cfba684d810f86ade5655
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182463
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
freeformz,2019-06-14 20:22:20,https://api.github.com/repos/golang/tools/git/commits/6f0482744cab9ab0f859f77e8969589e5158f807,6f0482744cab9ab0f859f77e8969589e5158f807,"internal/lsp/cache: fix nil check by adding missing ""continue""

Without this accessing gof.ast.file.Pos() will panic if gof.ast.file is nil

Change-Id: I829f3667d201f026fcf0475f4fdabce0aced58f8

Change-Id: I829f3667d201f026fcf0475f4fdabce0aced58f8
GitHub-Last-Rev: 777c015d691bf0d14cab5bb0bca6749cc9bdf605
GitHub-Pull-Request: golang/tools#119
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182420
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-14 18:23:47,https://api.github.com/repos/golang/tools/git/commits/9a3b5d688fe624c74a0b8352b023249b01218cd3,9a3b5d688fe624c74a0b8352b023249b01218cd3,"internal/lsp: parse filenames only out of go list errors

This changes the packageErrorSpan function into the listErrorSpan.
Previously, this was causing the gopls-generated errors to get parsed,
which would result in attempts to send diagnostics for invalid filenames.

Fixes golang/go#32603

Change-Id: I7a54ed8884b78beb3f894598f18a24ed232f7412
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182460
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-13 19:55:53,https://api.github.com/repos/golang/tools/git/commits/61e0f78580b2b4f33a13ce90d1ee3031af42a4f8,61e0f78580b2b4f33a13ce90d1ee3031af42a4f8,"internal/lsp: use the memoize package to get *token.Files

This change does not actually use the token handle for GetToken right
now, but implements the approach for memoizing *token.Files.

Change-Id: I75919f4e97abd6893b202c021adecd2c9dbfc2be
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182277
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-06-14 17:17:16,https://api.github.com/repos/golang/tools/git/commits/a82f0323a434afaf2f6a8c5511f7eeb99e919ad3,a82f0323a434afaf2f6a8c5511f7eeb99e919ad3,"internal/lsp: block rather than reject when the message queue is full

Change-Id: Ic8d4a0a4abfed71fe9290e9aae4efd6ab55124d5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182458
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-14 18:10:39,https://api.github.com/repos/golang/tools/git/commits/d1d6cdd8a67e21a0b648ba78eaa5730d0d447ca7,d1d6cdd8a67e21a0b648ba78eaa5730d0d447ca7,"internal/lsp: clear out missing imports set when we re-load package

This change ensures that we always populate a new set of missing imports
when we re-load a package. Otherwise, we might keep stale missing
imports around.

Change-Id: Id9b6b8201e3ed093a7b9ece97a81e298de612a5e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182459
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-06-13 14:10:44,https://api.github.com/repos/golang/tools/git/commits/1edc8e83c8971a61ace316267a21e03f34f687e6,1edc8e83c8971a61ace316267a21e03f34f687e6,"internal/lsp: update analysis runner for new features

This adds support for the AllObjectFacts and AllPackageFacts features that were
added to the analysis library.
It also moves the list of analyzers to an exported global so it can be added to
easily.

Change-Id: Ibbe81b17b190d04a0e49510c23558430bc03ca70
Reviewed-on: https://go-review.googlesource.com/c/tools/+/182177
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
letientai299,2019-06-10 08:34:22,https://api.github.com/repos/golang/tools/git/commits/ed0dc450797fdfbe6a9ee6bf3381a02099b897f9,ed0dc450797fdfbe6a9ee6bf3381a02099b897f9,"go/analysis/passes/composite: whitelist unicode.Range32

We already whitelist unicode.Range16. This CL whitelists unicode.Range32
also, to be more consistent.

Fixes golang/go#32507

Change-Id: I72a8cf7c63845510e51c7e6ebbd3b627ecb7e0da
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180922
Reviewed-by: Emmanuel Odeke <emm.odeke@gmail.com>
Run-TryBot: Emmanuel Odeke <emm.odeke@gmail.com>"
ianthehat,2019-06-12 00:14:39,https://api.github.com/repos/golang/tools/git/commits/149740340b5f650cf618fb4e02716f04efac92bb,149740340b5f650cf618fb4e02716f04efac92bb,"internal/span: improve invalid uri message

Change-Id: Iaf4de4f3a3494868db130fe5fb6885fd28f2a4ea
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181684
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
pjweinb,2019-06-03 18:59:40,https://api.github.com/repos/golang/tools/git/commits/027b3b4d7bb148858e42480e5d6a61c5f7d68163,027b3b4d7bb148858e42480e5d6a61c5f7d68163,"internal/lsp/protocol: bring the code generating programs up to date

This is the typescript code that generates the current versions of
tsprotocol.go, tsserver.go, and tsclient.go.

Change-Id: If40cd7a46e5e7d646d99670da5e04831b6ddc222
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180477
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-06-12 19:54:15,https://api.github.com/repos/golang/tools/git/commits/d4e310b4a8a5f0fe33e0a7e813a14ff19b433da4,d4e310b4a8a5f0fe33e0a7e813a14ff19b433da4,"gopls: adding the gopls module

Change-Id: I521ff33f8733a7d636b8ebc611715cb19e41bc83
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181946
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-06-12 21:58:43,https://api.github.com/repos/golang/tools/git/commits/10539ce30318f0464b076b55974ed41fa75159fa,10539ce30318f0464b076b55974ed41fa75159fa,"cmd/gopls: preparing for v0.1.0

Change-Id: I6b749858cbba0ec300caa77426ba0ae69a97677d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181997
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-06-11 22:06:27,https://api.github.com/repos/golang/tools/git/commits/59534d075a876675ef41a20fd596536cfa103662,59534d075a876675ef41a20fd596536cfa103662,"internal/lsp: use ids instead of package paths as map keys

This adds an IDs map to the metadata cache, which maps package paths to
IDs. This is only ever used by the Import function in the type checker.

Change-Id: I8677d9439895bc6cbca5072e3fa9fddad4e165d5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181683
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
zchee,2019-06-12 13:55:08,https://api.github.com/repos/golang/tools/git/commits/028e009f4092f27d2b7c391d2686902cd8440a7e,028e009f4092f27d2b7c391d2686902cd8440a7e,"internal/lsp: fix typo on license year

Change-Id: I3cd4a55c633fd7a154d35fd3669e13562295242b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181897
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-12 16:38:51,https://api.github.com/repos/golang/tools/git/commits/7db4ac6d26618953d34baaea10596dd8904562f5,7db4ac6d26618953d34baaea10596dd8904562f5,"internal/lsp/debug: add newlines to debug messages

Change-Id: Ie8232bf857b8a277abb789e3788a6b6e12048731
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181938
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-12 01:16:35,https://api.github.com/repos/golang/tools/git/commits/ecc01b77164e1ea79b7aba2621266c1befb64725,ecc01b77164e1ea79b7aba2621266c1befb64725,"internal/memoize: document the complicated parts of the memoize package

This change is more of an exercise for myself to better understand the
implementation of the memoize package. It adds detailed documentation
for the get function in particular.

I also modified the tests to use a table-driven test format. I'm not
certain if this was the right approach (in case we want to add a
different type of test case in the future), but for now, it seems to
work fine.

Change-Id: I191a3b65af230e0af54b221c9f671582adec6c79
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181685
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-11 21:56:24,https://api.github.com/repos/golang/tools/git/commits/3c1b0c2805ae93e484dea8ba21342a28440a596d,3c1b0c2805ae93e484dea8ba21342a28440a596d,"internal/lsp: fix panic when file deleted

Change-Id: I6eb7e5ae7fb9de74d5a3fb42031adb4e933d99d8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181680
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-11 21:09:26,https://api.github.com/repos/golang/tools/git/commits/6050b95026f5d0edd10765e963889bebf4546100,6050b95026f5d0edd10765e963889bebf4546100,"internal/lsp: create types for package paths and IDs

This change replaces the strings that were previously used for both the
ID and package path fields. This is a precursor to the change that will
replace the uses of package path with package ID.

Change-Id: I353e98aedede9b85c7a183fdd49048ff43b1e26d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181757
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-06-10 12:58:14,https://api.github.com/repos/golang/tools/git/commits/d303ba255abc413ea5afc7dae2fdc6bfdf65f449,d303ba255abc413ea5afc7dae2fdc6bfdf65f449,"internal/lsp: move the fixup and parallel limits into the main parse function

Previously these were only applied from inside parseFiles, which also made it
harder to refactor the remaining parse logic.
This theoretically means fixup is now called in more places than it was before,
but should cause no change in behaviour.

Change-Id: Ic6d006c1d36daca7514626653aaedf90d76e1d0f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181544
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-06-05 02:14:37,https://api.github.com/repos/golang/tools/git/commits/346706fc3d7290b634e6fadd5b5e7e4bc00f7e89,346706fc3d7290b634e6fadd5b5e7e4bc00f7e89,"internal/lsp: memoize all the parsing

Change-Id: Ic7864a564f88b3fe0a421bb825b01d750610dee9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181119
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-30 13:03:31,https://api.github.com/repos/golang/tools/git/commits/ce2cddb08b7b9c508607d1f51aa073ff89ec40e0,ce2cddb08b7b9c508607d1f51aa073ff89ec40e0,"internal/lsp: using memoize for all file contents

Change-Id: I7293bbcfea33c0df90f7b6df8e991aae9a03f2ab
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180846
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-11 18:50:43,https://api.github.com/repos/golang/tools/git/commits/5b939d657d44a73216272e85588e956a30418bd7,5b939d657d44a73216272e85588e956a30418bd7,"internal/lsp: fix type checking for unsafe package

Change-Id: I229a9329f38b8fc7f38e964652c582858c4edb5b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181678
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-07 19:55:45,https://api.github.com/repos/golang/tools/git/commits/a99d5a724b61ab88cc2f8b0b0bf623d2069e137d,a99d5a724b61ab88cc2f8b0b0bf623d2069e137d,"internal/lsp: add a Version constant

This change will allow users in $GOPATH mode to have some
semblance of a gopls version.

Change-Id: I1b490d18fdf7550c54d56653ae500dc4dc25ee3b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181238
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-06-11 15:17:26,https://api.github.com/repos/golang/tools/git/commits/25a4f137592ff7de30eb0758889d917a1c6979bf,25a4f137592ff7de30eb0758889d917a1c6979bf,"internal/span: handle empty paths correctly

Change-Id: I3f411c5e27bcada26a756485a3b9de3514ac7955
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181677
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-06-10 18:02:28,https://api.github.com/repos/golang/tools/git/commits/ff694a2184c2d6c20485efd5755dcb56f284306c,ff694a2184c2d6c20485efd5755dcb56f284306c,"internal/lsp: stop requiring a .go extension for all Go files

This change should fix the TryBot failures exposed by
https://golang.org/cl/181317.

Updates golang/go#31561

Change-Id: Ie77c9e3bfd6825dcd2608523e72f804f81d3f48c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181546
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-05-10 20:36:20,https://api.github.com/repos/golang/tools/git/commits/f8d1dee965f76837e891ded19dd59ee264db8ddc,f8d1dee965f76837e891ded19dd59ee264db8ddc,"internal/memoize: a new library to memoize functions

This library holds onto results with a weak reference, and guarantees that for
as long as
a result has not been garbage collected it will return the same result for the
same key.

Change-Id: I4a4528f31bf8bbf18809cbffe95dc93e05d769fe
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180845
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
heschik,2019-06-07 21:21:57,https://api.github.com/repos/golang/tools/git/commits/0945d3616f18a7224b3a184b8a5d5281f0f6daac,0945d3616f18a7224b3a184b8a5d5281f0f6daac,"internal/imports: suggest x for x_tests

golang.org/cl/170238 forgot that it's okay for an x_test to import a
package in the same directory. Only skip the candidate if the package
we're looking for has the same name as the one being fixed.

Fixes golang/go#32440

Change-Id: I7806d9f4174ca217ac83887da5e23b28cd102095
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181338
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-06-06 17:51:00,https://api.github.com/repos/golang/tools/git/commits/e88138204b917ae37302e34a19722b8087966128,e88138204b917ae37302e34a19722b8087966128,"internal/span: change URI.Filename so it just returns the filename

We panic if the uri was not a valid file uri instead
They always are a valid file URI, and we would fail miserably to cope if they were
not anyway, and there are lots of places where we need to be able to get the filename
and don't want to cope with an error that cannot occur.
If we ever have not file uri's, you will have to check if it is a file before calling
.Filename, which seems reasonable anyway.

Change-Id: Ifb26a165bd43c2d310378314550b5749b09e2ebd
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181017
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-01 03:31:58,https://api.github.com/repos/golang/tools/git/commits/fe937a7521e50b486d5dcb5802db60e2d1e110d7,fe937a7521e50b486d5dcb5802db60e2d1e110d7,"internal/lsp: allow fine-grained control over vet checks

This change adds an ""experimentalDisabledAnalyses"" configuration
to the ""gopls"" configuration. A user can specify a list of excluded
analyses by analyzer name.

Fixes golang/go#31717

Change-Id: I4b162fcd61ecfcef5c926bd0e96f182748a7721d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179920
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2019-06-07 14:04:22,https://api.github.com/repos/golang/tools/git/commits/bca362e842d497814cb616549d97b5481101b10d,bca362e842d497814cb616549d97b5481101b10d,"internal/lsp: add find all references

This change implements the find all references feature by finding all of
the uses and definitions of the identifier within the current package.

Testing for references is done using ""refs"" in the testdata files and
marking the references in the package.

Change-Id: Ieb44b68608e940df5f65c3052eb9ec974f6fae6c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181122
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-04 22:06:55,https://api.github.com/repos/golang/tools/git/commits/5ae6a9745e44f90b85d14baaf7e4bd6419db11ab,5ae6a9745e44f90b85d14baaf7e4bd6419db11ab,"internal/lsp: track missing imports, re-running packages.Load

This change marks any unresolved packages discovered as imports by
go/packages.Load. It re-runs go/packages.Load for any package with
missing imports, which will result in the LSP registering changes in
dependencies.

However, this means that we re-run go/packages.Load on
package's with unresolved imports much more than we normally would, so
it may result in a slowdown or unexpected behavior. I'm not sure if this
is necessarily the correct approach here.

Updates golang/go#32232

Change-Id: Id611fa1876e42c88ca2c3e4db30da66dc66945fc
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180537
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-08 01:57:42,https://api.github.com/repos/golang/tools/git/commits/f68ef2071d6849faa45c5f46d3991a0debcebd4b,f68ef2071d6849faa45c5f46d3991a0debcebd4b,"internal/lsp: enable ""ignoreFuncBodies"" and fix caching

This change enables the trimmed ASTs behavior and fixes the broken
tests by caching parse errors along with the ASTs that are being reused.

Change-Id: Ia8e7cdb138c62a8be88659f801506e03f213fe8c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181357
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2019-06-07 20:25:48,https://api.github.com/repos/golang/tools/git/commits/e9a20a1396589c9874145a91a798bc70796f4874,e9a20a1396589c9874145a91a798bc70796f4874,"internal/imports: actually cache resolvers

I forgot to actually save the resolver instances...

Change-Id: Ieff4f22d29038895dc15be97491476f414544a5c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181337
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-07 15:34:41,https://api.github.com/repos/golang/tools/git/commits/e6ce0ddf03215642dccfd6f6193d16f0408bd310,e6ce0ddf03215642dccfd6f6193d16f0408bd310,"internal/lsp: add an implementation for textDocument/didSave

This change marks the overlay for a saved file as ""on disk"".
This will reduce the number of overlays we provide to go/packages, which
can be expensive.

Updates golang/go#31796, golang/go#32457

Change-Id: I8e69503ab80bba29caf4e42491d87e643bf17f1a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181123
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Peter Weinberger <pjw@google.com>"
stamblerre,2019-06-08 02:07:33,https://api.github.com/repos/golang/tools/git/commits/eacb66d2a7c3d6b93b39f7224e6bef6a44cbe70e,eacb66d2a7c3d6b93b39f7224e6bef6a44cbe70e,"internal/lsp: reply with nil, rather than empty, signature help

Change-Id: I9326ad59fb3ee33aba2ba9d05758dae5c3451bde
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181358
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2019-06-07 22:37:28,https://api.github.com/repos/golang/tools/git/commits/755ce86c7629f15bd3128fa8dbfa6a619a9a6c7a,755ce86c7629f15bd3128fa8dbfa6a619a9a6c7a,"internal/imports: fix TestNoMainModule

https://golang.org/cl/179998 made it an error to run go mod download
without args and without a go.mod. Don't do that.

Fixes golang/go#32488

Change-Id: Icd845feb8fecae69b6a8363438bb9ee546a310dc
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181298
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Jay Conrod <jayconrod@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-06-05 21:44:09,https://api.github.com/repos/golang/tools/git/commits/68211a626cca1068197e1fa98907659c722d4222,68211a626cca1068197e1fa98907659c722d4222,"internal/lsp: fix some issues with trimming ASTs

This change correctly invalidates the cache when we
have to go from a trimmed to untrimmed AST.

The ""ignoreFuncBodies"" behavior is still disabled due to a racy test.

Updates golang/go#30309

Change-Id: I6b89d1d2140d77517616cb3956721a157c25ab71
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180857
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
thanm,2019-06-07 12:28:16,https://api.github.com/repos/golang/tools/git/commits/5aed7825b13ee2b55737e99244fd658841b12a99,5aed7825b13ee2b55737e99244fd658841b12a99,"go/internal/gccgoimporter: update package to match std lib version

Import changes from std lib version, specifically

          https://golang.org/cl/181118

related to importing inlinable function bodies.

Change-Id: Ie5fe1db508f7ec2cbef2dcdc96e2136c8e4f23ad
Reviewed-on: https://go-review.googlesource.com/c/tools/+/181120
Run-TryBot: Than McIntosh <thanm@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Cherry Zhang <cherryyz@google.com>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
stamblerre,2019-06-05 05:16:23,https://api.github.com/repos/golang/tools/git/commits/0139d5756a7dfc6302f04af275a50cbc37ea0153,0139d5756a7dfc6302f04af275a50cbc37ea0153,"internal/lsp: attach documentation to signature help

This change refactors hover to generate documentation for just the
declaration portion of an identifier.

Updates golang/go#29151

Change-Id: I16d48a99b56c36132e49cc87e2736f85c88ed14a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180657
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
tklauser,2019-06-06 10:19:35,https://api.github.com/repos/golang/tools/git/commits/d0a3d012864b53e579e8ec5cbf6a5405dbc12423,d0a3d012864b53e579e8ec5cbf6a5405dbc12423,"go/internal/gccgoimporter: update importer tests to match std lib version

Import CL 174738 and CL 164862 from std lib version. This should fix
test failures of issue31540.go on gccgo versions < 7, e.g. on
solaris-amd64-smartosbuildlet

Change-Id: I0a41ca9fe2b248d301fbdf14c9bac3aa3e7b091c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180897
Run-TryBot: Tobias Klauser <tobias.klauser@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Than McIntosh <thanm@google.com>"
ianthehat,2019-06-04 05:04:18,https://api.github.com/repos/golang/tools/git/commits/4d9ae51c2468f6d6621b356e95df4bffa253f0b6,4d9ae51c2468f6d6621b356e95df4bffa253f0b6,"internal/lsp: remove source.FileContent

On FileHandle Read now just returns the data hash and error
This makes it more obvious that you should handle the error, rather than hiding
it all in a struct.
We also change the way we get and return content, the main source.File
constructs now hold a FileHandle that then updates on invalidation

Change-Id: I20be1b995355e948244342130eafec056df10081
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180417
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-06-01 00:58:48,https://api.github.com/repos/golang/tools/git/commits/596a85b56b4961c2b37afc3d71e36e5ae4b90bed,596a85b56b4961c2b37afc3d71e36e5ae4b90bed,"internal/lsp: don't queue content changes

This updates overlays immeditely, and uses the handle identity change to
correctly update the content on demand.

Fixes golang/go#32348

Change-Id: I3125a6350cac358b7c0f7dc11f2bd11ae1f41031
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179922
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-06-06 03:14:32,https://api.github.com/repos/golang/tools/git/commits/a544cfa3896ee873f83b2264d3236444a26ee4c0,a544cfa3896ee873f83b2264d3236444a26ee4c0,"go/internal/gcimporter: skip stdlib tests in race mode as they are too slow

The duration causes them to be flakey on the builders.

Change-Id: I968c6418054e42e3758a6ba4030750f12c4d4b66
Reviewed-on: https://go-review.googlesource.com/c/tools/+/180844
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
ianthehat,2019-05-31 23:41:39,https://api.github.com/repos/golang/tools/git/commits/2c3de6a5aea1814ceabe3c0b72be5223f0d8f600,2c3de6a5aea1814ceabe3c0b72be5223f0d8f600,"internal/lsp: change file system to allow lazy reads

We split aquiring a ""handle"" from reading a files contents so that we can do the
former eagerly and the latter lazily.
We also ""version"" the handles so that the same file at different versions is a
different handle.

Change-Id: I06cc346d4b4c77d784aa454702c54689f2f177e0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179917
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-06-01 02:42:59,https://api.github.com/repos/golang/tools/git/commits/8aaa1484dc108aa23dcf2d4a09371c0c9e280f6b,8aaa1484dc108aa23dcf2d4a09371c0c9e280f6b,"internal/lsp: add some basic tests for imports

This change adds a few simple tests for the goimports behavior of gopls.
There are still missing cases for non-standard library, but this is a
good start.

Change-Id: I2f9bc2cc876dcabf81413384b83fa3508517adf0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179918
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
zchee,2019-05-24 12:32:26,https://api.github.com/repos/golang/tools/git/commits/70bf279967a6c40a5e75fb4a31ec8273089700f8,70bf279967a6c40a5e75fb4a31ec8273089700f8,"internal/lsp: support build flags on processConfig

Add 'buildFlags' config to processConfig and pass that value to packages.Config.
We can avoid incorrect diagnostics such as if current source codes require any build tags.

Change-Id: Id191469ec75eedaa82b75ec4fdec084fa78c2c5d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178782
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-05-23 17:51:56,https://api.github.com/repos/golang/tools/git/commits/b012c1979805ea0a881b19587663b3306232cb43,b012c1979805ea0a881b19587663b3306232cb43,"internal/lsp: trim ASTs for which we do not require function bodies

This change trims the function bodies from the ASTs of files belonging to
dependency packages. In these cases, we do not necessarily need full
file ASTs, so it's not necessary to store the function bodies in memory.

This change will reduce memory usage. However, it will also slow down
the case of a user opening a file in a dependency package, as we will
have to re-typecheck the file to get the full AST. Hopefully, this
increase in latency will not be significant, as we will only need to
re-typecheck a single package (all the dependencies should be cached).

Updates golang/go#30309

Change-Id: I7871ae44499c851d1097087bd9d3567bb27db691
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178719
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-01 03:34:02,https://api.github.com/repos/golang/tools/git/commits/a4e9122f10c5ab41ebe4595674c7e2acb8737ac7,a4e9122f10c5ab41ebe4595674c7e2acb8737ac7,"internal/lsp: fix regression from CL 179439

Fixes golang/go#32378

Change-Id: I7c5b794ba6137084a56e3e7bf8027a6f65819b34
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179919
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-06-01 04:08:57,https://api.github.com/repos/golang/tools/git/commits/178e83bc9d6a1190667fd60e42deb7c461adabf2,178e83bc9d6a1190667fd60e42deb7c461adabf2,"internal/lsp: build the builtin package preemptively

This change fixes a regression introduced by the building the builtin
package on demand. Although this change increases the startup tasks of
gopls, it is necessary to ensure that we ignore diagnostics from
builtin.go.

Change-Id: I897e747a273056d70cecba486a74c75a736d8f80
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179921
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-03-14 00:45:59,https://api.github.com/repos/golang/tools/git/commits/359a0754b7dde5717118f0022ccbc7662e9e2175,359a0754b7dde5717118f0022ccbc7662e9e2175,"internal/jsonrpc2: adding rpc trace tasks

Change-Id: I101957f7aeb95034a71ab2db47e0422721c500f6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179717
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-30 03:57:43,https://api.github.com/repos/golang/tools/git/commits/37dc81f20179699d98f7f10cb67c86554a6ffdbf,37dc81f20179699d98f7f10cb67c86554a6ffdbf,"internal/lsp: add memory debugging page

Display the memory statistics provided by the runtime package.

Change-Id: I3ae9c51a847fc1808c15faaadbbdc7a4874c11f0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179517
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-29 18:55:52,https://api.github.com/repos/golang/tools/git/commits/df5f6463074e4a467b67562d053dd9a2d61fcf06,df5f6463074e4a467b67562d053dd9a2d61fcf06,"internal/lsp: debug pages for sessions views and files

Change-Id: Id21f391bd66513615d274588ce7d1d1efe407074
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179438
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-29 23:58:27,https://api.github.com/repos/golang/tools/git/commits/08e0b306e832746e6ccdb36ca8720cec1d3675e4,08e0b306e832746e6ccdb36ca8720cec1d3675e4,"internal/lsp: move PrintVersionInfo to the debug package

Also add a new rendering mode, and clean up the plain text one.
Then use it to add an info page to to the server in debug mode.

Change-Id: Ifa66a75260965d0e46e874200203ebbc4490e424
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179497
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
mvdan,2019-05-30 16:20:57,https://api.github.com/repos/golang/tools/git/commits/2de7f9bf822ce37065c31659ae7187ea9e416dde,2de7f9bf822ce37065c31659ae7187ea9e416dde,"go/analysis/passes/structtag: allow field tag shadowing

In the following piece of code:

	type T1 struct {
		Shadowed string `json:""foo""`
	}
	type T2 struct {
		T1
		Shadowing int `json:""foo""`
	}

encoding/json will encode T2 using T2.Shadowing, ignoring T2.Shadowed
entirely. This can be a useful feature to replace some of T1's fields
when encoding it. Moreover, this feature is already in use in the wild,
even though it's probably never been documented.

This started being a problem, as the structtag pass started walking
through embedded fields a few months ago. To keep it from complaining
about these useful shadowing cases, make it only see duplicate field tag
names if they are at the same embedding level, in which case no
shadowing is happening.

The old code indexed these tags by encoding key and name, using a
[2]string. The new code needs to add a level integer, so start declaring
named types for the map, and use methods to simplify the code further
below. We still use a map pointer, to avoid allocating on every single
struct definition.

Updates golang/go#30846.

Change-Id: Iae53228d4f8bd91584c59dcc982cb1300970bc8f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179360
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
jba,2019-05-20 19:54:34,https://api.github.com/repos/golang/tools/git/commits/0abef6e9ecb84abbb13f782a96b8ce932107c545,0abef6e9ecb84abbb13f782a96b8ce932107c545,"errorsas: handle single-actual case

Handle the case where there is syntactically only one actual argument
passed to errors.As.

Following the unmarshal check, we ignore this case.

Change-Id: Ia7d77d5b3c9eb5416b37a141104c9ad7ed290b5f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178159
Run-TryBot: Jonathan Amsterdam <jba@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
jba,2019-05-07 10:38:00,https://api.github.com/repos/golang/tools/git/commits/b1dcc6b1892c0a4e28b52b9f6b680076c895c74a,b1dcc6b1892c0a4e28b52b9f6b680076c895c74a,"errorsas: ignore empty interface target

No longer report a problem if target's type is interface{}.
This avoids false positives like

```
var e error
var i interface{} = &e
... errors.As(..., i) ...
```

Change-Id: Ibf6e7163147248305130a5e650f92b80e34a44de
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175717
Run-TryBot: Jonathan Amsterdam <jba@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Damien Neil <dneil@google.com>"
freeformz,2019-05-31 22:04:48,https://api.github.com/repos/golang/tools/git/commits/26e35f15edef9a960ed13c88b445c5674371da18,26e35f15edef9a960ed13c88b445c5674371da18,"internal/lsp/cache: fix leaking wg.Done() and <-ioLimit

There were several returns in this function that could leak both the
wg.Done() and <-ioLimit. This refactors them into defers close to their
counterparts.

Additionally I refactored the function to favor early returns over
nested if statements.

Fixes golang/go#32368

Change-Id: I5357d11ee526c1cb7a6bd1a0f652c61d574c10ab
GitHub-Last-Rev: bfa160b9fd75c4464d2e0a2820c04ddae01de21f
GitHub-Pull-Request: golang/tools#107
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179878
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>"
matloob,2019-05-31 15:34:40,https://api.github.com/repos/golang/tools/git/commits/b3315ee88b7da2b23cc6c62484a006958910e841,b3315ee88b7da2b23cc6c62484a006958910e841,"go/packages: update documentation for Package.Types and Package.Syntax

so that they don't refer to the deprecated LoadX LoadModes

Also break apart the NeedX from the LoadX fields so that the needX fields
are rendered in the godoc next to the definition of LoadMode

Fixes golang/go#32364

Change-Id: Ic8837950a5e25937c556b62fbedbd8dc5356cfdb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179741
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dominik Honnef <dominik@honnef.co>"
matloob,2019-05-29 20:33:14,https://api.github.com/repos/golang/tools/git/commits/75312fb06703a759656ae75b3d1c24b4aae95dfe,75312fb06703a759656ae75b3d1c24b4aae95dfe,"go/packages: support new main packages in overlays

Refactor the overlay code to create package structs for
new packages that don't already exist. This requires
calling out to the go command to determine module
roots to figure out which module a package belongs to.
The extra go list call is done in sequence in this CL
but can easily be done in parallel with other go list
calls in the future.

Change-Id: Ia0f7812fba250d154033038cb1e2afa7dedf0e16
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179600
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
myitcv,2019-05-30 16:14:29,https://api.github.com/repos/golang/tools/git/commits/ce1a3806b557e2b3236499f772c2320f933d5a80,ce1a3806b557e2b3236499f772c2320f933d5a80,"internal/lsp: send void client response to client/registerCapapbility

Following CL 179157, client/registerCapapbility and
client/unregisterCapapbility are both (void) requests, not
notifications. Hence the client must send a response, else the server
will wait forever.

Fixes golang/go#32322

Change-Id: I77969317465c0c31fb29d27519d655712d8c3c2a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179359
Reviewed-by: Peter Weinberger <pjw@google.com>"
matloob,2019-05-28 20:31:28,https://api.github.com/repos/golang/tools/git/commits/2b03ca6e44eb97adb8824db161059e54d6014dc3,2b03ca6e44eb97adb8824db161059e54d6014dc3,"go/analysis: add an End field to Diagnostic

This will allow diagnostics to denote the range they apply to.
The ranges are now interpreted using the internal/span library.

This is primarily intended for the benefit of the LSP, which will
be able to (in future CLs) more accurately highlight the part
of the code a diagnostic applies to.

Change-Id: Ic35cec2b21060c9dc6a8f5ebb7faa62d81a07435
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179237
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-29 18:59:35,https://api.github.com/repos/golang/tools/git/commits/12d73424210d5399ae74d7e94f5c464d70d02406,12d73424210d5399ae74d7e94f5c464d70d02406,"internal/lsp: refactor to separate pieces of type-checking

Change-Id: Idab49286e59803e4ae0f749eb9f2990b611ea689
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179439
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-05-29 05:38:51,https://api.github.com/repos/golang/tools/git/commits/b97706b7f64d6771fed3c72922d4a663c7b19b56,b97706b7f64d6771fed3c72922d4a663c7b19b56,"internal/lsp: add debug page serving

This adds a framework for gopls server debugging pages, and adds the standard profiling pages to it.

Change-Id: Ie319e4ad070ac41b2ae7791cb3e0e5bb4ae12ef4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179277
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-02-12 18:25:49,https://api.github.com/repos/golang/tools/git/commits/fb6c8ffd22070e69b7642308d055748cda081989,fb6c8ffd22070e69b7642308d055748cda081989,"go/analysis/passes/tests: add pointer to where test name conventions are specified

Change-Id: Id177e04271f4549d79547b6c88a99a52058288ca
Reviewed-on: https://go-review.googlesource.com/c/tools/+/162079
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-29 18:37:11,https://api.github.com/repos/golang/tools/git/commits/d850aa06e894b69b09ba5701bd8d0cba5bd438aa,d850aa06e894b69b09ba5701bd8d0cba5bd438aa,"internal/lsp: fix setting overlays in tests

This change fixes the test failure that has appeared in a few TryBot
runs.

Change-Id: If583555250d63b7f446ec7d8eb09810b842633ae
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179437
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-28 20:32:04,https://api.github.com/repos/golang/tools/git/commits/f98590f1bfc84d0afb884c0444d6ba8cef01fff8,f98590f1bfc84d0afb884c0444d6ba8cef01fff8,"go/packages: handle potential nil pointer error

Change-Id: I2b889e1d5ec07d9271292c58b896f6c0c7155cf3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179220
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-04-25 21:24:21,https://api.github.com/repos/golang/tools/git/commits/d5577298ecb5a09d2392559f4012a60c3872dfd0,d5577298ecb5a09d2392559f4012a60c3872dfd0,"go/packages: officially deprecate LoadX values in favor of NeedX values

Update doc to specify that users should request the fields needed in the
Package struct by using the NeedX bits directly.

Change-Id: I9213827fa7e5d01800d79173fe5161f39ffda85e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173959
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-28 22:13:06,https://api.github.com/repos/golang/tools/git/commits/aa71c3f32488bfee7774668abdf1ae045e013079,aa71c3f32488bfee7774668abdf1ae045e013079,"internal/lsp: set env to os.Environ to start

Change-Id: Ia3952f76918957eba46f8ba2c616f14f424ff4b3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179221
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-05-28 19:17:07,https://api.github.com/repos/golang/tools/git/commits/08bd53a4b4c43fb1e199ef0baf706273b2e25fd0,08bd53a4b4c43fb1e199ef0baf706273b2e25fd0,"internal/lsp: run analyses despite some errors

Updates golang/go#32247

Change-Id: Id474e62ea70676c782eb49dddebd64d7f274d2cf
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179218
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
dmitshur,2019-05-17 00:44:44,https://api.github.com/repos/golang/tools/git/commits/09281b52a140843e6a2aeacde239aa4ea0511a5d,09281b52a140843e6a2aeacde239aa4ea0511a5d,"godoc: re-add test for ignoring //line comments in source code

The original CL 84050044 added a test case, and it happened to be
in between various CLI test cases. CLI support was removed from
x/tools/cmd/godoc in CL 141397, as part of golang/go#25443.
Re-add a test case for this behavior to prevent regressions.

Updates golang/go#32092
Updates golang/go#25443
Updates golang/go#5247

Change-Id: I0cea74cfe40d120e398a9005676134c5bad6136c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177737
Reviewed-by: Robert Griesemer <gri@golang.org>"
pjweinb,2019-05-28 13:47:51,https://api.github.com/repos/golang/tools/git/commits/d238219cc233110bab5949ee47e1505814ab1197,d238219cc233110bab5949ee47e1505814ab1197,"internal/lsp: client/registerCapapbility is a request, not a notification

Although they have null responses, client/[un]registerCapability messages
are RPCs from golps to the editor, not notifications.
(This bug had unknown impact.)

Change-Id: I3be2eb30b46f937b8ec29d1668f682b797d84be9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/179157
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Peter Weinberger <pjw@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-04-05 19:22:56,https://api.github.com/repos/golang/tools/git/commits/1a7b4747f5e90458f2568a3a98335640f9e156fa,1a7b4747f5e90458f2568a3a98335640f9e156fa,"go/packages: work around go list behavior for missing dependencies

If go/packages.Load tries to load a package with a missing dependency, it
should not return an error, but a package with an error set on it.  This is a
workaround for go list -e -compiled (or even just go list -e) returning a
non-zero exit status for packages with missing dependencies.

Change-Id: I2d7d848ae5133235f595baf7b30296077e891ee3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170891
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
bradfitz,2019-05-23 19:47:01,https://api.github.com/repos/golang/tools/git/commits/7be61e1b0e514e106d83fc439d56a79143738603,7be61e1b0e514e106d83fc439d56a79143738603,"cmd/splitdwarf: fix skip on Windows

Unify the two files rather than have to maintain two copies of the
+build line.

Fixes golang/go#32212

Change-Id: I1f9ee4956183aa6248a5a2e83b5760d02532bacb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178699
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: David Chase <drchase@google.com>"
stamblerre,2019-05-23 19:03:11,https://api.github.com/repos/golang/tools/git/commits/3d17549cdc6bfc8f924b817a94ec54bec5596488,3d17549cdc6bfc8f924b817a94ec54bec5596488,"internal/lsp: add modfile, sumfile structs, require Go files for diagnostics

This change adds a stub modFile struct for use in the future. It also
moves the singleDiagnostic function out into the lsp package, so that
the source package does not make decisions about what to show to the
user as a diagnostic.

Fixes golang/go#32221

Change-Id: I577c66fcd3c1daadaa221b52ff36bfa0fe07fb53
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178681
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-24 20:03:39,https://api.github.com/repos/golang/tools/git/commits/d532c0723df8fac5ff45eea34e5435634ba6ada5,d532c0723df8fac5ff45eea34e5435634ba6ada5,"internal/lsp: fix race condition in type-checking

Change-Id: Idff7cc3a28b4a03ce0d374c6c5035b51330143b1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178724
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2019-05-24 18:32:38,https://api.github.com/repos/golang/tools/git/commits/d487f80763e23959f9c7535d03cf4a1573d6c4a5,d487f80763e23959f9c7535d03cf4a1573d6c4a5,"all: GOSUMDB=off for tests that use fake modules

Users of packagestest will create modules that don't exist on the
Internet and can change. There's no point in checking sum.golang.org for
them under any circumstances.

Similarly for the various goimports tests.

Fixes golang/go#32216.

Change-Id: Id9a6b660564cb744530bf9d209fca19008fb9c4f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178722
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-05-17 16:15:22,https://api.github.com/repos/golang/tools/git/commits/2c0ae70061356820330c96810d9483beb9a6da8e,2c0ae70061356820330c96810d9483beb9a6da8e,"internal/lsp: add file watching and use it to trigger invalidations

Change-Id: I6148539509364655e7d42044b73789870d30fbb6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178161
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-17 16:15:22,https://api.github.com/repos/golang/tools/git/commits/75713da8968e979b986f375a10f681d3323cfe17,75713da8968e979b986f375a10f681d3323cfe17,"internal/lsp: add a file system abstraction

Change-Id: Ie42835b835ed22fddbba187ab10d8c31019ff008
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178097
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
pjweinb,2019-05-21 11:54:00,https://api.github.com/repos/golang/tools/git/commits/991f2949994bf2adbdc4c3e9c90f21eba656ccb5,991f2949994bf2adbdc4c3e9c90f21eba656ccb5,"internal/lsp: remove SelectionRange and textDocument/selectionRange

These are the latest changes to vscode-languageserver-node brought to Go.

Change-Id: I88d0b384356964c358cb2c51ea3b79cb6b51b434
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178357
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-05-23 16:08:20,https://api.github.com/repos/golang/tools/git/commits/38d8bcfa38af6494a92557425458dc19a8e204d4,38d8bcfa38af6494a92557425458dc19a8e204d4,"internal/lsp: don't show diagnostics for mod files

The Go file changes didn't actually check the file extensions for the
files the Go extension is receiving. This error was not noticed because
the VSCode extension doesn't yet actually send mod files to gopls yet,
but it will in its next release.

Fixes golang/go#32178

Change-Id: Ia04d0a92ce7df13fcf4c601421bc000d69855f6d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178679
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-21 18:14:29,https://api.github.com/repos/golang/tools/git/commits/521d6ed310dd2348b2d3c64b91c55df233c52860,521d6ed310dd2348b2d3c64b91c55df233c52860,"internal/lsp: re-run go/packages.Load when the package name changes

Fixes golang/go#32149

Change-Id: Ic02af6fd4fb19aae0d38a4d51ec4462abdc4f446
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178162
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-05-17 14:51:19,https://api.github.com/repos/golang/tools/git/commits/7927dbab1be7d178ed14189b31e26c604b8baba8,7927dbab1be7d178ed14189b31e26c604b8baba8,"internal/lsp: build the packages config on demand from proper configuration

This moves the fileset down to the base cache, the overlays down to the session
and stores the environment on the view.
packages.Config is no longer part of any public API, and the config is build on
demand by combining all the layers of cache.
Also added some documentation to the main source pacakge interfaces.

Change-Id: I058092ad2275d433864d1f58576fc55e194607a6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178017
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-05-20 22:44:24,https://api.github.com/repos/golang/tools/git/commits/2c78df6d2ceec2cde4b7bff46c9b42cd05742fe1,2c78df6d2ceec2cde4b7bff46c9b42cd05742fe1,"internal/lsp: log when we fail to type-check a package

Change-Id: I07a0a224359b698e50da8496b21634d8bd947aa9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178277
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2019-05-20 22:00:48,https://api.github.com/repos/golang/tools/git/commits/26647e34d3c04fd3eaef6fb824493b00af7b1b26,26647e34d3c04fd3eaef6fb824493b00af7b1b26,"imports: allow nil Options in Process

Forgot this case in CL 175437.

Change-Id: I9825cf010611fed9f47b1a87fc793bf3a5a36f68
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178257
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
heschik,2019-05-06 20:34:48,https://api.github.com/repos/golang/tools/git/commits/0133cac3176f225883c5d817146de8633ed07ebc,0133cac3176f225883c5d817146de8633ed07ebc,"cmd/goimports: reuse cached state

The internal imports API allows the user to control the lifetime of
caches, via the ProcessEnv object. Change the goimports command to use
the same cache for its lifetime. This should speed up goimports -w *.go
dramatically in cases where imports need to be added.

Change-Id: I01e3531ad53b038896435474ac9a8be97d5f3c10
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175448
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
heschik,2019-05-06 19:37:46,https://api.github.com/repos/golang/tools/git/commits/757ca719ca9689950c69081c10c5300fbb8e35db,757ca719ca9689950c69081c10c5300fbb8e35db,"imports: rename to internal/imports

For various reasons we need an internal-facing imports API. Move imports
to internal/imports, leaving behind a small wrapper package. The wrapper
package captures the globals at time of call into the options struct.

Also converts the last goimports tests to use the test helpers, and
fixes go/packages in module mode to work with empty modules, which was
necessary to get those last tests converted.

Change-Id: Ib1212c67908741a1800b992ef1935d563c6ade32
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175437
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-20 19:23:02,https://api.github.com/repos/golang/tools/git/commits/7e7c6e521403f4a79ffde46e1136f2f5e1c17953,7e7c6e521403f4a79ffde46e1136f2f5e1c17953,"internal/lsp: add nil checks for ASTs and token

Fixes golang/go#32120
Updates golang/go#32132

Change-Id: Ib4bb8a4818be7dec468c46b72afc3dd57b35f155
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178158
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-05-17 19:18:39,https://api.github.com/repos/golang/tools/git/commits/faf83c64e9269d0b25a74424705e3606824fcbe6,faf83c64e9269d0b25a74424705e3606824fcbe6,"internal/lsp: fix race in delivering diagnostics to the command line client

Fixes golang/go#32091

Change-Id: I1399a596169384f48d9f2409988226708dcd3473
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177937
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-05-20 18:56:01,https://api.github.com/repos/golang/tools/git/commits/9558fe4a7893c491f71cd402ea24d4a9366b8918,9558fe4a7893c491f71cd402ea24d4a9366b8918,"internal/lsp: update column mapper with content on incremental changes

Fixes golang/go#32114

Change-Id: If2ffade3d8d1e026e3b0aa7f2c9db4dc46d7c8b2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/178157
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
evandigby,2019-05-17 17:45:50,https://api.github.com/repos/golang/tools/git/commits/d88f79806bbd013f54a668506864ce559edf6f0a,d88f79806bbd013f54a668506864ce559edf6f0a,"internal/lsp: fix swallowed package errors

If a package has an error that makes it completely unparseable, such as containing a .go file with no ""package"" statement, the error was previously unreported. Such errors would manifest as other errors.

Fixes golang/go#31712

Change-Id: I11b8d0e2e4d64b03fbcb4c35e7f0b02fccc83fad
GitHub-Last-Rev: 1581cbe36c269dd964f0b9226dbd63b1650c2a5b
GitHub-Pull-Request: golang/tools#102
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177605
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
dmitshur,2019-04-23 02:27:50,https://api.github.com/repos/golang/tools/git/commits/1da8801a9502f29f3f03edfc3149b947e6e1913c,1da8801a9502f29f3f03edfc3149b947e6e1913c,"godoc: declare small victory over the punched card tyranny

At least inside this one package.

It's because golang.org/x/tools/cmd/godoc no longer has CLI support
as of golang/go#25443, it is now only a web server. Luckily, browsers
that display HTML pages are not constrained to the fixed width of
punched cards. On the contrary, they seem to embrace a wide variety of
arbitrary page widths, ranging from narrow to wide. This is in part due
to the proliferation of internet access on device form factors such as
the mobile phone, tablet, laptop, and desktop.

So the punchCardWidth constant is now unused and can be removed. This
is a followup to CL 141397 that removed most of the CLI support code,
including the function comment_textFunc, which was its only user. Same
goes for containsOnlySpace.

Updates golang/go#25443

Change-Id: I61fabe6ea801c88758fb2c6aefa70b53d52e2cb5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172975
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2019-05-15 21:58:16,https://api.github.com/repos/golang/tools/git/commits/bffc5affc6df36a7c1fee87811e47b69912e721f,bffc5affc6df36a7c1fee87811e47b69912e721f,"internal/lsp: support definitions and hover for builtins

This change adds support for definitions and hover for builtin types and
functions. It also includes some small (non-logic) changes to the import
spec definition function.

Additionally, there are some resulting changes in diagnostics to ignore
the builtin file but also use it for definitions (Ian, you were right
with your comment on my earlier review...).

Fixes golang/go#31696

Change-Id: I52d43d010a5ca8359b539c33e40782877eb730d0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177517
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-16 19:57:51,https://api.github.com/repos/golang/tools/git/commits/1a8f2608bd819ae0c5aeb07edd6bae2fa2cebd71,1a8f2608bd819ae0c5aeb07edd6bae2fa2cebd71,"internal/lsp: use ranges instead of positions in completion items

Fixes golang/go#32078

Change-Id: If33cc6f7a914e6ef17d06a34c39dceb61cfa16d4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177657
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-05-15 16:24:49,https://api.github.com/repos/golang/tools/git/commits/b9584148efcb10d08933a70e48b8f7b0732a1b47,b9584148efcb10d08933a70e48b8f7b0732a1b47,"internal/lsp: add structured layers to the cache

This is primarily to separate the levels because they have different cache
lifetimes and sharability.
This will allow us to share results between views and even between servers.

Change-Id: I280ca19d17a6ea8a15e48637d4445e2b6cf04769
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177518
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-28 02:45:06,https://api.github.com/repos/golang/tools/git/commits/abbb706b23e2d9bc06fbe27b205907d92f66f868,abbb706b23e2d9bc06fbe27b205907d92f66f868,"internal/lsp: enable enhanced hover by default

This change removes the explicit configuration for improved
documentation on hover. We use a comment's synopsis rather than the full
comment.

However, we also add a ""noDocsOnHover"" setting that is used by the cmd
tests. Ultimately, no one should use this setting and we should remove
it. We leave it temporarily because the cmd tests still need work.

Change-Id: I5488eca96a729ed7edad8f59b95af163903740d6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174378
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
andybons,2019-05-15 23:37:55,https://api.github.com/repos/golang/tools/git/commits/d1a3278ee74994e9aa609e9e711c616bba677d5d,d1a3278ee74994e9aa609e9e711c616bba677d5d,"godoc/util: serve SVG files raw

When a godoc Presentation is serving a file, it will sniff its
contents to determine if it contains ""human-readable"" text. If
it does, then it serves the contents of the file with surrounding
HTML. SVG files should not be served with any additional HTML even
though their contents are not a binary format (just like CSS or JS
files).

Updates golang/go#9936

Change-Id: Id3dd3b6cda4f103b08f6e924923426a86bd46ec8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177498
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2019-05-04 04:04:18,https://api.github.com/repos/golang/tools/git/commits/4f9510c6a12d5544b14ed8164f6dbbb3dfeb2a9f,4f9510c6a12d5544b14ed8164f6dbbb3dfeb2a9f,"internal/lsp: prepare for non go files

This abstracts out the concrete file type so that we can support non go files.

Change-Id: I7447daa2ce076ec2867de9e59a0dedfe1a0553f5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175217
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-02 14:55:04,https://api.github.com/repos/golang/tools/git/commits/0e55654012fa60706c9eb74cef2619bfd3c74d31,0e55654012fa60706c9eb74cef2619bfd3c74d31,"internal/lsp: add shutdown handling

We correcly cancel all background tasks and drop all active views when
the server is asked to shut down now.
This was mostly to support the command line being able to exit cleanly

Change-Id: Iff9f5ab51572aad5e3245dc01aa87b00dcd47963
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174940
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-05-15 18:16:16,https://api.github.com/repos/golang/tools/git/commits/7c3f65130f290a790cd2a8742f0636e46e345bc2,7c3f65130f290a790cd2a8742f0636e46e345bc2,"internal/lsp: remove constant value from label and add tests

Fixes golang/go#29816
Fixes golang/go#31923

Change-Id: I4f0ff7941a5d26994ef6bbd10346eafe31160a21
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177357
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-15 02:02:51,https://api.github.com/repos/golang/tools/git/commits/473d3dc1d7ebfe600ef76607c3e200794eaf947a,473d3dc1d7ebfe600ef76607c3e200794eaf947a,"internal/lsp: handle additional snippet cases

This change handles the case when a function that has already been
written out is being completed.

Change-Id: I0c4e9ec9bb5a8428526f00a4e62e020bcc30f0bf
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176923
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-05-15 03:04:23,https://api.github.com/repos/golang/tools/git/commits/ce09bef8aae21fe8b969f02e519f1e28826ead5d,ce09bef8aae21fe8b969f02e519f1e28826ead5d,"internal/lsp: reduce the api surface of the cache package

The cache now exposes only one symbol, NewView
This is preparing the cache for a re-write

Change-Id: I411c2cd7a7edc2e7c774218c6786f9fd4fcc53cb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176924
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-05-15 01:20:41,https://api.github.com/repos/golang/tools/git/commits/707862fa78b87f8fb5d33b3920ff5662a607f1cf,707862fa78b87f8fb5d33b3920ff5662a607f1cf,"internal/lsp: use builtin package for signature help

This change uses the builtin package to derive the signature help for
builtin functions.

Updates golang/go#31696

Change-Id: I458b3a89bdf143e7018e8be7cb6a5e8c068a47c2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176922
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-14 18:15:18,https://api.github.com/repos/golang/tools/git/commits/2196cb7019cc9876ad1b1d378e0e8309dbf5454c,2196cb7019cc9876ad1b1d378e0e8309dbf5454c,"internal/lsp: make snippets private fields

Change-Id: I35d883196c7c3b35e14b49c0f5c779a91e72ce42
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177177
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-14 20:23:46,https://api.github.com/repos/golang/tools/git/commits/921b34c7d07f74c8b33bbbfae8e373bb20929ea2,921b34c7d07f74c8b33bbbfae8e373bb20929ea2,"internal/lsp: ignore files in the builtin package

This change stops diagnostics from running in files making up the ""fake""
builtin package.

Fixes golang/go#31962

Change-Id: Ic54e1587e3ad54f0c1f5e82f1a6f3522b4c6bee9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177218
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
zchee,2019-05-14 08:59:32,https://api.github.com/repos/golang/tools/git/commits/faff00d7e7f637e51751b4147e653ca32eb9364c,faff00d7e7f637e51751b4147e653ca32eb9364c,"internal/lsp: fix typo on license year

Change-Id: I5643ce049bad0dfb45405c06adc7c2eb46a394ac
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177017
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-05-14 14:22:10,https://api.github.com/repos/golang/tools/git/commits/2d081dbd584edb37a01ef482b03a9dc98817c47a,2d081dbd584edb37a01ef482b03a9dc98817c47a,"internal/lsp: fix nil pointer when propagating diagnostics

Fixes golang/go#32030

Change-Id: I5ae7f2dc68c68c1a4851c637dcb75f312b0b35f5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/177057
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
rsc,2019-05-09 21:18:50,https://api.github.com/repos/golang/tools/git/commits/4789ca9922f080dd3a8fc3c74df1c1306db2bb0b,4789ca9922f080dd3a8fc3c74df1c1306db2bb0b,"go/analysis/internal/analysisflags: call gob.Register on deleted analyzers

Otherwise the specific set of gob registrations varies
according to the command line, which makes it impossible
for a narrow analysis run (for example, just one analyzer)
to read fact files written by less narrow runs (for example, all the analyzers).

This will start mattering in the standard repo vet.

For golang/go#31916.

Change-Id: I6fa90b3dfdf28ede6f995db3904211b6be68bb73
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176357
Reviewed-by: Alan Donovan <adonovan@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-05-13 20:49:29,https://api.github.com/repos/golang/tools/git/commits/7d589f28aaf42086c56499a48b55b9c1495e1453,7d589f28aaf42086c56499a48b55b9c1495e1453,"internal/lsp: stop trimming prefix from InsertText

After some discussion about how to handle insert and filter text
(https://github.com/microsoft/vscode-languageserver-node/issues/488), it
seems that it is better practice to overwrite the prefix in completion
items, rather than trimming the prefix from the insert text.

Change-Id: I7c794b4b1d4518af31e7318a283aa3681a0cf66a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176958
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
bradfitz,2019-05-13 21:30:29,https://api.github.com/repos/golang/tools/git/commits/2a413a02cc735933997fa1b467a7b27bc1b82567,2a413a02cc735933997fa1b467a7b27bc1b82567,"godoc/static: let client use vet check returned by /compile endpoint

(Forked off Yury Smolsky's CL 176618)

With this change, the playground.js client now asks the server to do a
vet check in the same HTTP request as the /compile (and run) step. If
the server replies that it understands the request (VetErrors or VetOK
in the repsonse), then the client can avoid the latency of a second
HTTP roundtrip. We'll remove the /vet handler after we see it fall out
of use from older clients.

Updates golang/go#31970

Change-Id: I5b123883e19cbc6a8ec30c50705e6b945a4d322d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176939
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
rsc,2019-05-10 03:11:12,https://api.github.com/repos/golang/tools/git/commits/d81a07b7e58487eed036bf115fa834653590d6cd,d81a07b7e58487eed036bf115fa834653590d6cd,"go/analysis/passes/bools: eliminate quadratic runtime, output

If you have x == 1 || x == 2 || x == 3 || x == 4, the pass considered the set

	{x==1, x==2, x==3, x==4}

and then also

	{x==2, x==3, x==4}
	{x==3, x==4}

Since the comparison is itself linear in the size of the set, this was overall
taking time quadratic in the length of the || or && sequence.
Worse, if it found duplicates, they'd be reported a quadratic number of times.

This CL cuts the time and output to linear by avoiding already-checked
subexpressions. This cuts the time spent analyzing cmd/compile/internal/ssa
(with all passes enabled, not just this one) by 20%.

Fixes golang/go#28086.

Change-Id: I812f64bd5a44fea995c9ab0c4fa2fbefb44037ce
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176457
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Rob Pike <r@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
pjweinb,2019-05-13 16:27:26,https://api.github.com/repos/golang/tools/git/commits/8696927a2839210fb998cd751a78f8609855a381,8696927a2839210fb998cd751a78f8609855a381,"internal/lsp: respond to shutdown requests and add DO NOT EDITs

Partly fixes golang/go#31333 (responds to shutdown request, but does
not reject later requests)
Fixes: golang/go#31375 by adding DO NOT EDIT comments to tsclient.go,
tsserver.go, and further details in the package doc in tsprotocol.go,
following the rule in golang/go#13560

Change-Id: I412e3dc6661373b8b70cdd15a385ad7bbd55a897
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176921
Run-TryBot: Peter Weinberger <pjw@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-05-10 20:35:43,https://api.github.com/repos/golang/tools/git/commits/99f201b6807eb28f750a1966316bb0d4417b6020,99f201b6807eb28f750a1966316bb0d4417b6020,"internal/lsp: add some missing copyright notices

Change-Id: Ieba43cfb3637bb50959801ce1226431f77e16e05
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176642
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-03 18:31:03,https://api.github.com/repos/golang/tools/git/commits/44dd5717712cd41bf80691fcbe296bc704710e48,44dd5717712cd41bf80691fcbe296bc704710e48,"internal/lsp: add version and bug commands

Also log gopls version information on startup in server mode.

Change-Id: If7bf85d19f993430709b1fae83083e6fdfe1b2ca
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175199
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-10 22:50:29,https://api.github.com/repos/golang/tools/git/commits/90441677ad005d37494156d31c1c842ffb046987,90441677ad005d37494156d31c1c842ffb046987,"internal/lsp: suppress info and default logging unless a verbose flag is supplied

Change-Id: Ib4bf2a47cad4151b4b64d922855013b22b4fbb15
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176641
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-06 20:44:43,https://api.github.com/repos/golang/tools/git/commits/80b1e8742cb01fdfe2d41b165c52c2288265a5f0,80b1e8742cb01fdfe2d41b165c52c2288265a5f0,"internal/lsp: support dynamic workspace folder changes

This also required us to change the way we map files to a view, as it may change
over time.

Fixes golang/go#31635

Change-Id: Ic82467a1185717081487389f4c25ad69df1af290
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175477
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-29 18:57:27,https://api.github.com/repos/golang/tools/git/commits/4ca280b5bd7ffa38db1d537521b1732172bd8dda,4ca280b5bd7ffa38db1d537521b1732172bd8dda,"internal/lsp: fix definition tests to use golden files

specifically it uses them for the guru compatability tests
This change radically increases the test coverage of the godef tests as it now
works for all the jump to definition tests not just the specialized ones.

Change-Id: I63547138566ac3de56344dcfddb758ed5f362a06
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174937
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-09 18:30:05,https://api.github.com/repos/golang/tools/git/commits/45e43b2cb4facd370abb846ebf35575161849f3b,45e43b2cb4facd370abb846ebf35575161849f3b,"go/packages/packagestest: fix MustCopyFileTree so that file fragments are always slash form

Change-Id: I866384c2b382cbf3e839f0ef826eea654319fa5d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176219
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-08 20:04:29,https://api.github.com/repos/golang/tools/git/commits/0522b6e926c1b9b28f212087d4b6fe920511e6c3,0522b6e926c1b9b28f212087d4b6fe920511e6c3,"internal/lsp: adding the test suite to the source package

Change-Id: Ia287d84186bccca9e74050528daf809cb0e88c46
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176117
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-07 17:54:07,https://api.github.com/repos/golang/tools/git/commits/d4e30f1c225c14bd66e6b9f5db7b841024233459,d4e30f1c225c14bd66e6b9f5db7b841024233459,"internal/lsp: making cmd tests fast and small

This required extensive changes to the ""internal"" server handling and also to
the way we wait for diagnostics in the ""check"" verb.
It improves both memory and time by over an order of magnitude, hopefully
allowing us to renable the tests on the builders

Change-Id: I84e84ca4c449e9970ebf1d922a0a2ce0a8a49c72
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175878
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ysmolsky,2019-05-09 09:33:11,https://api.github.com/repos/golang/tools/git/commits/35884eef200b5fc81c9044f644a8d9d911262488,35884eef200b5fc81c9044f644a8d9d911262488,"cmd/vet: print help to stdout only

Previously help for flags was printed to stderr.
This CL makes all the output to be printed to stdout.

Updates golang/go#31885

Change-Id: If95edeccd79581326502dd5c7fc2b49d8f160be7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175900
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-05-02 02:46:07,https://api.github.com/repos/golang/tools/git/commits/3eedecdc80844777beb9205d91b2f5fd2d9e842f,3eedecdc80844777beb9205d91b2f5fd2d9e842f,"internal/lsp: propagate diagnostics for reverse dependencies

Prior to this change, if a package was rendered invalid by a change in
one of its dependencies, diagnostics would not be propagated until the
user typed in one of the package's files. Now, these updated diagnostics
are sent along with the diagnostics for the dependency.

Fixes golang/go#29817

Change-Id: I4761de31c4bdee820e024005f6112b3b3d2e1da6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174977
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-05-08 07:25:54,https://api.github.com/repos/golang/tools/git/commits/a1c92a4ac6fb35b30ff98eeac3429ff9aad7fc28,a1c92a4ac6fb35b30ff98eeac3429ff9aad7fc28,"internal/lsp: add additional error handling for builtin packages

Change-Id: I1a084a47d2f171c6b94bde6fece008cddd547833
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175937
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
rsc,2019-05-09 00:48:33,https://api.github.com/repos/golang/tools/git/commits/73554e0f78058c37e5421bc48273a72400172221,73554e0f78058c37e5421bc48273a72400172221,"go/analysis/passes: fix bugs discovered in std

asmdecl:
- MOVW $x+0(FP) is OK if x is big, because $x is an address
  (happens in internal/cpu, golang.org/x/sys/cpu, runtime)
- ignore TEXT lines in comments
  (happens in runtime/internal/atomic)
- wasm's CallImport instruction writes return results
  (happens in syscall)
- allow write out-of-bounds (SP) references in NOFRAME functions
  (happens in runtime)
- recognize ""NOP SP"" as an SP ""write"" to disable SP bounds checking
- 'go test' in passes/asmdecl was not testing all architectures; fix that

stdmethods:
- ignore WriteTo if obviously not io.WriterTo (as in go/types and runtime/pprof)

errorsas:
- don't complain about package errors testing invalid calls

structtag:
- don't complain about encoding/json and encoding/xml testing invalid tags

unmarshal:
- don't complain about encoding/gob, encoding/json, encoding/xml testing invalid calls

For golang/go#31916.
Fixes golang/go#25822.

Change-Id: I322c08b5991ffc4995112b8ea945161a4c5193ce
Reviewed-on: https://go-review.googlesource.com/c/tools/+/176097
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
kortschak,2019-05-09 01:40:16,https://api.github.com/repos/golang/tools/git/commits/d996b19ee77cd9c8df974510f23b0696cedf1ca1,d996b19ee77cd9c8df974510f23b0696cedf1ca1,"go/analysis/analysistest: fix word usage

Change-Id: Iec304e44375b0740b8bc594cfe6ce35637284555
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175939
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
aclements,2019-05-08 01:46:40,https://api.github.com/repos/golang/tools/git/commits/e31d36578abb3d202c4007c3747bf8ebb7c51011,e31d36578abb3d202c4007c3747bf8ebb7c51011,"compilebench: handle missing MemStats more gracefully

Reporting MemStats requires the legacy profile format (see golang/go#18641).
This CL detects when it couldn't get the MemStats from the profile and
reports this, rather than reporting 0 allocs.

Change-Id: Ib621ad975290cf05835fafa81e8e47762d82a519
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175802
Run-TryBot: Austin Clements <austin@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Russ Cox <rsc@golang.org>
Reviewed-by: Cherry Zhang <cherryyz@google.com>"
aclements,2019-05-08 01:25:39,https://api.github.com/repos/golang/tools/git/commits/60140f09094406e46618ef436a26dd8394983503,60140f09094406e46618ef436a26dd8394983503,"compilebench: add a linker benchmark

This links cmd/compile, which is the largest binary in GOROOT.

Unfortunately, this can't measure the linker's allocation metrics
prior to CL 176057 because the fix for golang/go#18641 was applied to
the compiler but not the linker.

Change-Id: Ia44d80f1d727c1608cedaa4b8ad2a05903774875
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175801
Run-TryBot: Austin Clements <austin@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Russ Cox <rsc@golang.org>
Reviewed-by: Cherry Zhang <cherryyz@google.com>"
aclements,2019-05-08 00:42:40,https://api.github.com/repos/golang/tools/git/commits/eeb76a0c47a3b97e99f330dc14174ef14777d2ba,eeb76a0c47a3b97e99f330dc14174ef14777d2ba,"compilebench: factor running build tool commands

We do a lot of sophisticated things around running the compile command
to gather benchmark metrics from it. We're about to add a benchmark
for the linker and will want all of the same mechanism. This CL
factors this out into a function.

Change-Id: I499d15d30417618f372982404ceb3e0f9c762e5c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175800
Run-TryBot: Austin Clements <austin@google.com>
Reviewed-by: Russ Cox <rsc@golang.org>
Reviewed-by: Cherry Zhang <cherryyz@google.com>"
aclements,2019-05-08 01:14:09,https://api.github.com/repos/golang/tools/git/commits/8a42e17289ea392d63892321ce1f40bd07efcc9f,8a42e17289ea392d63892321ce1f40bd07efcc9f,"compilebench: clean up different benchmark types

compilebench contains three different types of benchmarks and we're
about to add a fourth. Currently we dispatch based on name. This CL
cleans this up so the list of benchmarks points to how to run each
benchmark. It also joins together common error-reporting paths.

Change-Id: Icd4f77bdda9776863792dcd85f27b17829a833e6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175799
Run-TryBot: Austin Clements <austin@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Russ Cox <rsc@golang.org>
Reviewed-by: Cherry Zhang <cherryyz@google.com>"
ianthehat,2019-05-03 02:35:49,https://api.github.com/repos/golang/tools/git/commits/cf84161cff3fdeddfd5ab5e686c1e2c17cb5db04,cf84161cff3fdeddfd5ab5e686c1e2c17cb5db04,"internal/lsp: fix incremental updates and turn them on

Updates that only add text have a start and end that are the same, we were
erroring on those and failing to apply the changes.

Fixes golang/go#31800

Change-Id: Ia31b90f108742e5532d2da35137c347c26090a6a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174949
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-01 23:16:03,https://api.github.com/repos/golang/tools/git/commits/490d13020f0a39416a045e8f46a70f8bc0c423a9,490d13020f0a39416a045e8f46a70f8bc0c423a9,"internal/lsp: switch golden files to use txtar

I was about to add some more tests and it caused a huge number of golden files,
which was hard to deal with. Now all the golden files are packed into a single
.golden archive in the txtar format.
I also changed the tagging key for hover results to use the marker name rather
than the line and column, as it makes it more stable against test data changes.

Change-Id: Iaa1f54ab55a41d380db67b9f6f928fa7a52d9a5e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174877
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-05-08 09:44:01,https://api.github.com/repos/golang/tools/git/commits/5658f888b308fcf8b34b296b5434c71e003ef5b0,5658f888b308fcf8b34b296b5434c71e003ef5b0,"internal/lsp: disable rangeFormatting temporarily

RangeFormatting was broken with the introduction of the diff library,
but not noticed until golang/go#31150. Temporarily disable this behavior
until we fix it.

Change-Id: Ie3e50a763e0c0e8672ad20c3a2e37d901325d356
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175938
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
SilverRainZ,2019-05-08 02:06:31,https://api.github.com/repos/golang/tools/git/commits/95299016986435f846545c27f956768ad3c3cb2f,95299016986435f846545c27f956768ad3c3cb2f,"lostcancel: do not analyze cancel variable which defined outside current function scope

See golang/go#31856.

Change-Id: I229a7f4a48e7806df62941f801302b6da8a0c12b
GitHub-Last-Rev: 33f85236bb79e325112866ee555950a4479ad7a7
GitHub-Pull-Request: golang/tools#95
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175617
Reviewed-by: Alan Donovan <adonovan@google.com>
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dmitshur,2019-05-05 17:44:54,https://api.github.com/repos/golang/tools/git/commits/2d16b83fe98cd1bed9e2ce9fdc86bd438d14aab7,2d16b83fe98cd1bed9e2ce9fdc86bd438d14aab7,"go/vcs: ignore ""mod"" VCS type

golang.org/x/tools/go/vcs is significantly behind the upstream
cmd/go/internal/get code, and has no support for modules. It continues
to implement mechanics for GOPATH mode only.

This change is a minimal fix to get it to continue to work
in the presence of the module mode-only ""mod"" VCS type
(documented at https://golang.org/cmd/go/#hdr-Remote_import_paths)
by effectively implementing IgnoreMod ModuleMode behavior.

It is similar to issue golang/go#24751 and a small subset of CL 109340
that fixed it.

This helps with module adoption by reducing the harm of adding the
""mod"" VCS type for vanity import paths, something that was meant to
be backwards compatible.

While here, also backport CL 14482 (the Token to RawToken change).

Fixes golang/go#31845
Updates golang/go#24751

Change-Id: I0852f52cb9bda56879f923337c7f361df8412845
Reviewed-on: https://go-review.googlesource.com/c/tools/+/175219
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>"
ianthehat,2019-04-24 15:33:45,https://api.github.com/repos/golang/tools/git/commits/3b6f9c0030f769fa3ded8a7f0d9420c71ac20caf,3b6f9c0030f769fa3ded8a7f0d9420c71ac20caf,"internal/lsp: add document link handling for import paths to godoc

Change-Id: Ib2eef50047dfcc64110c264e77d648f959613b88
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173698
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-05-02 17:01:46,https://api.github.com/repos/golang/tools/git/commits/9cb3dcf692a103de0fd68c26f4f04183e0933f7c,9cb3dcf692a103de0fd68c26f4f04183e0933f7c,"internal/span: update the offset if the end offset should be valid but is not

It used to be that when the start offset was valid, it was presumed the end was
as well.
This was not true in the case where the start offset was not supplied but could
be inferred (at the very start of the file).

Fixes golang/go#31797

Change-Id: Ie5a079796fa0f77cef5571a4e5b309c798e1e06b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174943
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-04-29 20:34:09,https://api.github.com/repos/golang/tools/git/commits/5cec639030af3a6ada2732d9bfa1d3731ed55106,5cec639030af3a6ada2732d9bfa1d3731ed55106,"go/analysis: proposed fact enumeration API

Updates golang/go#29616

Change-Id: Ibaf10526ea35f06b853ad55451a50750c764fab4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174379
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-05-02 17:04:19,https://api.github.com/repos/golang/tools/git/commits/83df196e5764ed2415c28c1f39ba6cb3db747da0,83df196e5764ed2415c28c1f39ba6cb3db747da0,"internal/span: add a filename only print for spans

This prints the base of the path rather than the whole path when printing a
span.
This is useful for places where you are printing for the user rather than for
machines.
The format is %f

Change-Id: I6d1a52e4583099ff298c1fb645272578a49472eb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174942
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-30 01:08:16,https://api.github.com/repos/golang/tools/git/commits/23463209683dad3f2b9cc7f7c2663e1847c59017,23463209683dad3f2b9cc7f7c2663e1847c59017,"internal/lsp: support builtin types without hardcoding

This change uses an *ast.Package built from the file
go/src/builtin/builtin.go. Completion (and ultimately other features)
will be resolved using this AST instead of being hardcoded.

Change-Id: I3e34030b3236994faa484cf17cf75da511165133
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174381
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-30 00:58:12,https://api.github.com/repos/golang/tools/git/commits/2d28432af7a5a441de115cf3ccf9a2af1cdc332c,2d28432af7a5a441de115cf3ccf9a2af1cdc332c,"internal/lsp: first pass at some hover tests

This uses golden files to hold the hover text as they are no more fragile than
hard coding the text in the tests, and much easier to update.
We need a lot more tests, and ones with actual comments, but this is a start and
at least adds the machienery it would take.

Change-Id: Ia2f79257642759e4c2f972d4037f258134e0fb33
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174380
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
pjweinb,2019-04-23 14:05:23,https://api.github.com/repos/golang/tools/git/commits/08ecc9edd986314bbac56119515b56bf1cd52eec,08ecc9edd986314bbac56119515b56bf1cd52eec,"internal/lsp: generate RPC interface from Typescript source

The generated code adds some server methods that are unsupported, but were
prviously unimplemented, and makes small adjusments to some parameter types.

Change-Id: I3dd32cafa3e457193f0771e0f8e150c88b381c82
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173420
Run-TryBot: Peter Weinberger <pjw@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-04-29 23:47:54,https://api.github.com/repos/golang/tools/git/commits/b9fed7929fc1d5f8c3daa266389c35f3ee124473,b9fed7929fc1d5f8c3daa266389c35f3ee124473,"internal/lsp: change some comments and variable names in completion code

Also, return diagnostics instead of errors from source.Diagnostics (to
avoid stuck diagnostics).

Change-Id: I56b067273982fd086ed74185e50eda5b72b5fba1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174400
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
bradfitz,2019-04-29 19:51:48,https://api.github.com/repos/golang/tools/git/commits/9d4d845e86f14303813298ede731a971dd65b593,9d4d845e86f14303813298ede731a971dd65b593,"cmd/goimports: add -format-only flag

Fixes golang/go#31745

Change-Id: I127ca4140c9db7df224b1892c43c457ac6edd646
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174326
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
ianthehat,2019-04-26 16:45:14,https://api.github.com/repos/golang/tools/git/commits/35c670923e21e5c3722e299a75d7cf2fb7daefac,35c670923e21e5c3722e299a75d7cf2fb7daefac,"internal/lsp: clean up formatting header handling

This is mostly to set things up to use golden files the same way for other commands.

Change-Id: I7fcc7165706763e655b0e46f0790b367fe5d3d59
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174018
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-27 04:00:15,https://api.github.com/repos/golang/tools/git/commits/f97eea45a17d867065d43518bd94037ae88aba9a,f97eea45a17d867065d43518bd94037ae88aba9a,"internal/lsp: handle nil pointer in (*Package).GetActionGraph

Fixes golang/go#31700

Change-Id: I1ee71f65d2bdb2a95b261c4266df64b473d2fda5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174019
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
myitcv,2019-04-29 17:36:30,https://api.github.com/repos/golang/tools/git/commits/7af746645d5165109de0b5cb499980c22812dfc2,7af746645d5165109de0b5cb499980c22812dfc2,"internal/span: fix another off-by-one in ToUTF16Column

The current tests contain a bug in the priming of funnyString; the
subslicing leaves the resulting content slice with a capacity greater
than its length. This allowed a bug ToUTF16Column to sneak through where
we were not using 0-based column as the offset within the line.

Fix the priming of funnyString, and fix the implementation of
ToUTF16Column.

Change-Id: I2618878d85bba26f52f99a3fc136ad21fe198dfc
Reviewed-on: https://go-review.googlesource.com/c/tools/+/174357
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-24 23:26:34,https://api.github.com/repos/golang/tools/git/commits/550556f78a900afacb9e8b22219f5e5b5c6106db,550556f78a900afacb9e8b22219f5e5b5c6106db,"internal/lsp/source: refactor completion

This change separates the completion formatting functions from the
completion logic. It also simplifies the completion logic by necessary
values per-request into a struct that is used throughout.

Change-Id: Ieb6b09b7076ecf89c8b76ec12c1f1c9b10618cfe
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173779
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-25 21:19:24,https://api.github.com/repos/golang/tools/git/commits/ad9eeb80039afa52dec461f6814f3f79c5b45c39,ad9eeb80039afa52dec461f6814f3f79c5b45c39,"internal/lsp: handle shadowed variables in lexical completions

Fixes golang/go#31621

Change-Id: I6d5cfde5d5bebc704c9178d40bb93801b255e01c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173958
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-08 03:08:47,https://api.github.com/repos/golang/tools/git/commits/4eab536980eb9dd4357f478646fcc752af67e3a2,4eab536980eb9dd4357f478646fcc752af67e3a2,"internal/lsp: add the format command line

Change-Id: If7c4135b6b81b4f691d0f5eae8b49a1aca028346
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171031
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-25 21:29:46,https://api.github.com/repos/golang/tools/git/commits/0c752f569a3efd362925ea641059c7c60856053f,0c752f569a3efd362925ea641059c7c60856053f,"internal/lsp: fix utf16 conversion for end of file cursor

Also remove error case that can no longer happen and the related test.

Fixes golang/go#31341

Change-Id: I534956f6e835dea4334b68d0ad0297cf93920af2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173960
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-25 21:07:38,https://api.github.com/repos/golang/tools/git/commits/b5495a5ed748ccd17e8709ebc9e03e3df454453f,b5495a5ed748ccd17e8709ebc9e03e3df454453f,"internal/lsp: extensive utf16 tests

Based on the work Paul Jolly did in https://go-review.googlesource.com/c/tools/+/173797
but not as internal tests and with a mildly obsessive attention to coverage.
Also has a failing test for golang/go#31341 that you can enable with -b31341

Change-Id: I528eee5304cd7191eafd3bcddb2f636c8722846f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173978
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-25 19:50:50,https://api.github.com/repos/golang/tools/git/commits/079ac3a490a18433496e4e5bf58fd5e27c6b3d05,079ac3a490a18433496e4e5bf58fd5e27c6b3d05,"internal/lsp: handle error from runAnalyses

Change-Id: I73062bd3b4db8f238f009b8c8f3786c39c5d0d54
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173957
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
jayconrod,2019-04-25 18:11:42,https://api.github.com/repos/golang/tools/git/commits/2d660fb8a000e1c288dc2f2150401b364922ebe9,2d660fb8a000e1c288dc2f2150401b364922ebe9,"go/packages/packagestest: fix GOPROXY file URLs for Windows

Amends prematurely submitted CL 173918. We now use file:/// URLs for
go1.13 and later and file:// URLs for go1.12 and earlier.

Fixes golang/go#31675

Change-Id: I009c63a900bdfd091bf46def5cea5a0843639b47
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173919
Run-TryBot: Jay Conrod <jayconrod@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-24 23:31:07,https://api.github.com/repos/golang/tools/git/commits/bb8aefc696b9add0862ca2f5f56272cf9540748d,bb8aefc696b9add0862ca2f5f56272cf9540748d,"internal/lsp: return errors when we can't find a package

This will allow us to surface these errors as diagnostics.

Change-Id: Ic8ad11ba43c08be6f391c0e2aa95015183461133
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173780
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
jayconrod,2019-04-25 16:07:40,https://api.github.com/repos/golang/tools/git/commits/31fd60d6bfdcfb2861856aa5b333bb135f6bbfd8,31fd60d6bfdcfb2861856aa5b333bb135f6bbfd8,"x/tools/go/packages/packagestest: fix GOPROXY file URLs for Windows

On Windows, file URLs should look like file:///C:/foo/bar instead of
file://C:/foo/bar. In the latter case, the ""C:"" is parsed as the host.

Updates golang/go#31675

Change-Id: I7f75be44dd5d289de3ffdbd20a78130ed03cd233
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173918
Run-TryBot: Jay Conrod <jayconrod@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
reillywatson,2019-02-27 19:53:29,https://api.github.com/repos/golang/tools/git/commits/36563e24a2627da92566d43aa1c7a2dd895fc60d,36563e24a2627da92566d43aa1c7a2dd895fc60d,"cmd/vet: verify potentially-recursive Stringers are actually Stringers

The printf recursiveStringer check was checking for a function called String(),
but wasn't checking that it matched the actual function signature of Stringer.

Fixes golang/go#30441

Change-Id: I09d5fba035bb717036f7edf57efc63e2e3fe51d5
Reviewed-on: https://go-review.googlesource.com/c/tools/+/164217
Reviewed-by: Alan Donovan <adonovan@google.com>"
thanm,2019-04-24 19:47:23,https://api.github.com/repos/golang/tools/git/commits/9e44c1c403071e0c2831952513e7b948587d94af,9e44c1c403071e0c2831952513e7b948587d94af,"go/internal/gccgoimporter: update package to match std lib version

Import changes from std lib version, specifically

      https://golang.org/cl/173440

which rolls out a more robust fix for issue 31540.

Updates golang/go#31540.

Change-Id: Ibeeb00ffd0ee6456d50fd4a243a1162f3940ad68
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173777
Run-TryBot: Than McIntosh <thanm@google.com>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
stamblerre,2019-04-22 20:04:44,https://api.github.com/repos/golang/tools/git/commits/1e8e1cfdf96bc4cba93fa2cb4a081be14622d2bd,1e8e1cfdf96bc4cba93fa2cb4a081be14622d2bd,"internal/lsp: handle completion after defer, go statements

This change adds support for completion of incomplete selectors after a
defer or go statement. We modify the AST before type-checking it with a
fake *ast.CallExpr.

Updates golang/go#29313

Change-Id: Ic9e8c9c49aa569cd7874791692c70a28c3146251
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172974
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
dominikh,2019-04-10 13:47:02,https://api.github.com/repos/golang/tools/git/commits/cb2dda6eabdf9160e66ca7293897f984154a7f8b,cb2dda6eabdf9160e66ca7293897f984154a7f8b,"go/packages: deduplicate file parsing

When loading packages from source, many files are being parsed
repeatedly, for example due to test variants. While the median number of
times a file gets parsed is 2, it is significantly higher (up to 28
times) when parsing the standard library, because of test variant
shenanigans.

By caching file contents and their parsed representations we can cut
down on processing time and garbage produced. When loading individual
packages or 3rd party projects, the effect is rather small. However when
loading the entire standard library, the effect is substantial.

name       old time/op    new time/op    delta
Jaeger-8      2.95s ± 7%     2.84s ± 8%     ~     (p=0.089 n=10+10)
Std-8         4.96s ± 7%     4.23s ± 3%  -14.62%  (p=0.000 n=9+9)
Strconv-8     892ms ±34%     877ms ±21%     ~     (p=0.853 n=10+10)

name       old alloc/op   new alloc/op   delta
Jaeger-8     1.22GB ± 0%    1.21GB ± 0%   -0.84%  (p=0.000 n=10+10)
Std-8        2.57GB ± 0%    2.20GB ± 0%  -14.61%  (p=0.000 n=10+8)
Strconv-8     201MB ± 1%     200MB ± 1%     ~     (p=0.105 n=10+10)

name       old allocs/op  new allocs/op  delta
Jaeger-8      12.7M ± 0%     12.4M ± 0%   -1.82%  (p=0.000 n=9+10)
Std-8         26.4M ± 0%     17.3M ± 0%  -34.62%  (p=0.000 n=9+9)
Strconv-8     1.94M ± 0%     1.91M ± 0%   -1.50%  (p=0.000 n=10+10)

When loading std, peak RSS decreases from 1.96 GB to 1.57 GB.

While we're here, we simplify our ParseFile implementation. The contract
of ParseFile specifies that implementations must use src for parsing,
and use filename only for display purposes. As such, we mustn't ever
call it with a nil src, making the check for a nil src in our own
implementation superfluous.

Change-Id: I33daac20fc52ccdb3187a336633f712d01b71d86
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171377
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
zmb3,2019-04-22 00:08:10,https://api.github.com/repos/golang/tools/git/commits/f62e16ca4165a3ae6024315bdec53b340c447b6d,f62e16ca4165a3ae6024315bdec53b340c447b6d,"internal/lsp: make interface methods children of the interface symbol

Change-Id: I8dbb1400a228ea077f63c2c48f8dba0ac93990d2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173237
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-23 19:08:15,https://api.github.com/repos/golang/tools/git/commits/4bf14f7f0668366a4275c6ef5e99bd8e807da1d3,4bf14f7f0668366a4275c6ef5e99bd8e807da1d3,"internal/span: fix off-by-one in ToUTF16Column

Change-Id: I8c8344046b13f2606d7257ef8632e0426e15a85b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173498
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-23 18:36:30,https://api.github.com/repos/golang/tools/git/commits/e58f34171df65cd22cff6eb9040ad9798f622cf7,e58f34171df65cd22cff6eb9040ad9798f622cf7,"internal/lsp: add more error propagation and logging for analyses

This change propagates more errors from analyses, instead of just saving
them in act.err, we actually return immediately. Ultimately, we'd want
to return to the previous behavior, but this will help us figure out
what's going wrong.

Updates golang/go#30786

Change-Id: I9d3288fd113c43775140e5c008e3e300b6d28c2a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173497
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-23 17:49:20,https://api.github.com/repos/golang/tools/git/commits/bb3b3ca95aec36bfc4a5cb10b58022e64aca735b,bb3b3ca95aec36bfc4a5cb10b58022e64aca735b,"go/packages: add some documentation for extractPackage

Change-Id: I68d4824157d389c0f08e871eec2b594f52717bae
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173478
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
jayconrod,2019-04-23 21:52:53,https://api.github.com/repos/golang/tools/git/commits/15bbd99efc6f20619676dec93f914d12e5139e83,15bbd99efc6f20619676dec93f914d12e5139e83,"all: run go mod tidy

This adds golang.org/x/sync.
Needed by golang.org/x/tools/internal/lsp/source.

Change-Id: Id42e597be74ed6cb1b7c30c172c5efb3f1c0f2b1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173481
Run-TryBot: Jay Conrod <jayconrod@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-22 22:15:39,https://api.github.com/repos/golang/tools/git/commits/18110c573cdff9739aa994a7703de469b926b96f,18110c573cdff9739aa994a7703de469b926b96f,"internal/lsp: delay the running of gofmt until the test is running

Change-Id: I222c83313a6366367fbeb7ce7d08058968d3a08e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173340
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-10 02:23:02,https://api.github.com/repos/golang/tools/git/commits/2acd0f4c519f3752d89633cf1fdb1368a0fba555,2acd0f4c519f3752d89633cf1fdb1368a0fba555,"internal/lsp: adding golden file support to the test harness

Also convert the format tests to use it. This means that the build bots no
longer need to run gofmt.

Change-Id: I5cb9d239183b17d81fdb00b38e9099d224c07e6a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172973
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
jba,2019-04-18 13:46:22,https://api.github.com/repos/golang/tools/git/commits/fe54fb35175bb1c0c175e2335e23d7fa90ca987a,fe54fb35175bb1c0c175e2335e23d7fa90ca987a,"apidiff: represent a Report as a list of Changes

Modify the Report representation to be a list of Change values,
instead of two string slices.

This will enable adding more information to each change, like source
location.

Change-Id: Ia7389d7bc552479ea5e06efd7fdefe004058e66f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172777
Run-TryBot: Jay Conrod <jayconrod@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Jay Conrod <jayconrod@google.com>"
stamblerre,2019-04-22 21:05:43,https://api.github.com/repos/golang/tools/git/commits/c6b416e8a41dc8e1c3df588301c4740ce59da876,c6b416e8a41dc8e1c3df588301c4740ce59da876,"internal/lsp: add more error handling to analysis

Updates golang/go#30786

Change-Id: Icf054b9bcd62b36e3aa55288946a9f0d1c845300
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172972
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-22 16:49:04,https://api.github.com/repos/golang/tools/git/commits/3ff669b183a17dd5e5d03ed96e1715343cc21ff6,3ff669b183a17dd5e5d03ed96e1715343cc21ff6,"internal/lsp: add check for nil package

Fixes golang/go#31604

Change-Id: I60ec000d505c64783e5f51f62d168dc31c2fbe19
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172968
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-22 19:28:38,https://api.github.com/repos/golang/tools/git/commits/1e2181f3f4b5c7c23d8605d9c000a2421690c01c,1e2181f3f4b5c7c23d8605d9c000a2421690c01c,"internal/lsp: add additional debug logging for diagnostics

This change adds detailed debug logging for lsp.Diagnostics. This is
necessary for further investigation of cases where diagnostics aren't
propagated after a ""didChange"" request.

Updates golang/go#30786

Change-Id: I30eabf5a1cb17d4538a8860310b450494626b76f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172971
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
zchee,2019-04-22 09:59:53,https://api.github.com/repos/golang/tools/git/commits/61c0d375276aca115057aa6f1c53026a5440195d,61c0d375276aca115057aa6f1c53026a5440195d,"internal/lsp: fix typo on 'textDocument/foldingRange' method

LSP specification define 'foldingRange', not 'foldingRanges'.
Just trims end of 's' and rename interface method name.

ref: https://github.com/Microsoft/language-server-protocol/blob/gh-pages/specification.md#folding-range-request-leftwards_arrow_with_hook

Change-Id: Ie2a91f6c0bdd99b8ae9000ba87c24118b264b934
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173079
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
micnncim,2019-04-20 03:47:39,https://api.github.com/repos/golang/tools/git/commits/15d5d381ff62ba91f005c11eca1cf6c5dff66eec,15d5d381ff62ba91f005c11eca1cf6c5dff66eec,"internal/lsp: fix error handling in cmd

Found unnecessary error handling so removed.

Change-Id: I1a48e73186425291fdb0ede963b92ef6c9ce0ed8
GitHub-Last-Rev: d5cf67cb4a418bdc81dbd32eef9afb567ae4ff15
GitHub-Pull-Request: golang/tools#84
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173097
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
micnncim,2019-04-20 03:47:48,https://api.github.com/repos/golang/tools/git/commits/75f23652ec9350444872409fc4937b2c32f1d60a,75f23652ec9350444872409fc4937b2c32f1d60a,"internal/lsp: fix query cmd usage

`query` usage has the following duplicated description.

```
Usage: query [flags] query [flags] <mode> <mode args>
```

```
$ gopls query
query: query must be supplied a mode
answer queries about go source code

Usage: query [flags] query [flags] <mode> <mode args>

The mode argument determines the query to perform:
  definition : show declaration of selected identifier

query flags are:
  -emulate string
        compatibility mode, causes gopls to emulate another tool.
        values depend on the operation being performed
  -json
        emit output in JSON format
```

Change-Id: Ib511b6c77d8b6dc8148ca46f88a1a133d21ba25c
GitHub-Last-Rev: a022377913fec65482a26e61a2b22927de7d4132
GitHub-Pull-Request: golang/tools#85
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173098
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-04-16 19:47:48,https://api.github.com/repos/golang/tools/git/commits/7f54bd5c703d544c7e3c61fd76ec79f8442d2dfc,7f54bd5c703d544c7e3c61fd76ec79f8442d2dfc,"internal/lsp: extract the common test logic

Change-Id: I0a3e8a2837cdeefb3dbbe7b86ed75a32b321797e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172778
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-19 17:09:33,https://api.github.com/repos/golang/tools/git/commits/9eb0fb1732b19b7f2307f50cae8e912fa05e93b9,9eb0fb1732b19b7f2307f50cae8e912fa05e93b9,"internal/lsp: support comments on hover for typenames, funcs, fields

This change adds support for showing documentation when hovering over any
named type or function. For now, we show the entire comment associated
with the type; in future CLs, we should refine our approach and perhaps
only show the first line or sentence.

Updates golang/go#29151

Change-Id: Ib33284747b19acba67d79fb55c916574c3dd8073
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172958
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
thanm,2019-04-19 20:05:25,https://api.github.com/repos/golang/tools/git/commits/685fecacd0a02bd01f374ad779b72456e0cd9f8b,685fecacd0a02bd01f374ad779b72456e0cd9f8b,"go/internal/gccgoimporter: update package to match std lib version

Import changes from std lib version, specifically

  https://golang.org/cl/172603
  https://golang.org/cl/165739

which contain to a fix for reading of import data as
well as a couple of new test cases.

Updates golang/go#31540.

Change-Id: Iecb1a5a5a7bf100b2ebb871196868e96b1a50611
Reviewed-on: https://go-review.googlesource.com/c/tools/+/173037
Run-TryBot: Than McIntosh <thanm@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
stamblerre,2019-04-18 20:40:24,https://api.github.com/repos/golang/tools/git/commits/c39e7748f6ebfccd12b373374b6d14018827ea9c,c39e7748f6ebfccd12b373374b6d14018827ea9c,"internal/lsp: add type to placeholders in completion parameters

Fixes golang/go#31547

Change-Id: Ib6e54ae17c778421a49f34d3c60d56b126419a91
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172666
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-18 20:55:24,https://api.github.com/repos/golang/tools/git/commits/f9398171876ba36b8a4d8264091eaf07c1ed776e,f9398171876ba36b8a4d8264091eaf07c1ed776e,"internal/lsp: add an additional check to ToUTF16Column

This change will at least stop the panic from occurring.

Updates golang/go#31341

Change-Id: I6b06941cfb6c020d2b37813573cb0dc068d54e65
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172667
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-17 22:21:47,https://api.github.com/repos/golang/tools/git/commits/4796d4bd3df0a291c397154cd7d68f1290cf7deb,4796d4bd3df0a291c397154cd7d68f1290cf7deb,"internal/lsp: use ast.Nodes for hover information

This change associates an ast.Node for some object declarations.
In this case, we only handle type declarations, but future changes will
support other objects as well. This is the first step in adding
documentation on hover.

Updates golang/go#29151

Change-Id: I39ddccf4130ee3b106725286375cd74bc51bcd38
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172661
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-18 15:02:52,https://api.github.com/repos/golang/tools/git/commits/6732636ccdfd99c4301d1d1ac2307f091331f767,6732636ccdfd99c4301d1d1ac2307f091331f767,"internal/lsp: use strings.EqualFold instead of ==

Change-Id: I34dc519f25fa976a959a749d4e1a525f5480b963
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172664
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-04-17 21:54:50,https://api.github.com/repos/golang/tools/git/commits/a5870b40385977769b3e1d711864fcd2d82bb9fd,a5870b40385977769b3e1d711864fcd2d82bb9fd,"internal/lsp/protocol: add a compare function for span.URI

Add an additional check to handle URI comparisons. This fixes Hover on
Windows.

Change-Id: Ibfc816f1ec374144377a873c5b52867fafa3d7e8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172659
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-17 22:01:48,https://api.github.com/repos/golang/tools/git/commits/183b688ac41c86a95675080a5729507620255376,183b688ac41c86a95675080a5729507620255376,"internal/lsp: add compare functions for spans

Needed in order to sort lists of spans for stable tests, also used for span
equality tests.

Change-Id: Id2bedff4d7136494e2302c02bcb9bdc662ccfeb1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172660
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-04-17 18:47:10,https://api.github.com/repos/golang/tools/git/commits/f6abc2cac8bfc7ec669c70f0f0d5b5d2557425e7,f6abc2cac8bfc7ec669c70f0f0d5b5d2557425e7,"internal/lsp: check content format instead of assuming markdown

Fixes golang/go#31078

Change-Id: I2227f64d839d65d7b46d43e1b90f5b1dc298bf6f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172601
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-17 19:45:43,https://api.github.com/repos/golang/tools/git/commits/afc68fbc60f0d22a27d25aceb1f5f46f4d046510,afc68fbc60f0d22a27d25aceb1f5f46f4d046510,"internal/lsp: a cleaner way of doing overlays

Change-Id: I3ee053cfc4b63f54b9bf43d0ce6a2bae713e3a0d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172638
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-17 18:31:17,https://api.github.com/repos/golang/tools/git/commits/780da32332f6dddca61451903bec2fdc28299b49,780da32332f6dddca61451903bec2fdc28299b49,"internal/lsp: trigger signature help after completing a function

Change-Id: Ib0ee79a11dd828c77bdf22a19a24ed9d883d8393
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172600
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-17 19:37:20,https://api.github.com/repos/golang/tools/git/commits/34437f544f2d838e096090539bc2da3d573b5a93,34437f544f2d838e096090539bc2da3d573b5a93,"internal/lsp: refactor server.go to separate into LSP categories

This change separates the different behaviors of server.go by the
categories defined in the spec. This allows us to differentiate more
easily between the language features and the text synchronization code.

I also renamed the ""Symbols"" function to ""Symbol"", which fits with the
specification
(https://microsoft.github.io/language-server-protocol/specification#workspace_symbol),
and makes clearer the distinction between DocumentSymbols and Symbol.

Change-Id: I926b8a772c478f6ae426352fb12dc4403f0e736a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172637
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-17 20:21:47,https://api.github.com/repos/golang/tools/git/commits/6149f385e4c0773e6f83d3fb0300960403bcdff2,6149f385e4c0773e6f83d3fb0300960403bcdff2,"internal/lsp: reply to shutdown request

Fixes golang/go#31333

Change-Id: I5cb40baee49c4b1644df5612c977ab1d71942022
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172639
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-17 02:04:21,https://api.github.com/repos/golang/tools/git/commits/7b3e515a8ce1cafff3ceb7c23b5065a7151437c0,7b3e515a8ce1cafff3ceb7c23b5065a7151437c0,"internal/lsp: switch completion item tests to using the enum strings

Also change the enum values to match the prior string conversion routine.

Change-Id: I23ac6a72c8e116c5ee05e9324356481e519781e9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172410
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-16 20:19:03,https://api.github.com/repos/golang/tools/git/commits/aa385af2d92e973b95fbf830d7a4d27aac4be218,aa385af2d92e973b95fbf830d7a4d27aac4be218,"go/packages: add support for entire packages defined in overlays

This change adds support in go/packages for defining an entire package
in an overlay. We also add corresponding tests for this in gopls, to
confirm that it works as expected.

Fixes golang/go#31467

Change-Id: Iead203ab2964a7ac4f571be97624b725ac5de7e0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172409
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-16 19:47:48,https://api.github.com/repos/golang/tools/git/commits/4ca4b55e2050cfa75f1a1f72ae10825e80b052a0,4ca4b55e2050cfa75f1a1f72ae10825e80b052a0,"internal/lsp: make the symbols tests use the enum names rather than hard coding the values

this makes them less fragile, more portable and also more understandable.

Change-Id: Ife8a7ed76b7517eaae37bd3896fee87740ffb22a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172405
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-17 00:27:09,https://api.github.com/repos/golang/tools/git/commits/35716ff3bceb158be887f21d33877fd284f6bd08,35716ff3bceb158be887f21d33877fd284f6bd08,"internal/lsp: set the diagnostic source earlier

We now set the diagnostic source in the diagnostics call rather than when
converting it to the LSP protocol.

Change-Id: Ic762aaab1b2bf93b75c4c3d78aa84e2f918398fc
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172408
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-16 22:03:59,https://api.github.com/repos/golang/tools/git/commits/49a16094365e44e2b25a42d15065a8cb589fe14b,49a16094365e44e2b25a42d15065a8cb589fe14b,"internal/lsp: cleanup the diagnostic and completion tests

this make the same kinds of changes I already made to the symbol tests,
to make the messages more detailed and remove the goto

Change-Id: I7cb27839b2ab696ad4e3d6537d91152e34fb1d89
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172477
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-16 21:28:20,https://api.github.com/repos/golang/tools/git/commits/dd61c98faef72b3f3887b6e95177b943d9f0f918,dd61c98faef72b3f3887b6e95177b943d9f0f918,"internal/lsp: run source.organizeImports on all codeActions

This change addresses the additional information we received in
https://github.com/Microsoft/language-server-protocol/issues/726.

Fixes golang/go#31359

Change-Id: Ied7c97ac1f9e429e28cc44563b93acabd80921a3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172406
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-16 20:47:01,https://api.github.com/repos/golang/tools/git/commits/e2848a0e7dd591ee47f07105728bf3ae9c75e21f,e2848a0e7dd591ee47f07105728bf3ae9c75e21f,"internal/lsp: minor clean up of symbol tests

remove the goto and make it print more information about why the failed.

Change-Id: I2f5f3c7fe88eae6fe5de61c5d9b401797b6933b2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172404
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-16 13:38:51,https://api.github.com/repos/golang/tools/git/commits/e528388d46bcdcd78d0a0566069615ef19dfae7f,e528388d46bcdcd78d0a0566069615ef19dfae7f,"internal/lsp: Add to and from string handling for the enums

This is to help with debugging, and to allow us to write tests that do not
rely on hard coded constants.

Change-Id: Ica9ed5eee3d35539fe50d76276988852e62b81ca
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172401
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-16 19:38:41,https://api.github.com/repos/golang/tools/git/commits/f6a9ef9393126b25bf52e3fd8f5339acae9c2552,f6a9ef9393126b25bf52e3fd8f5339acae9c2552,"go/packages: fix broken test that checks errors

Change-Id: Id9b1dc5e01a5b7eeca45448be0b7d7eef79fa928
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172400
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-16 19:03:58,https://api.github.com/repos/golang/tools/git/commits/76038274be7a01841c956b392153ceea3758f3ab,76038274be7a01841c956b392153ceea3758f3ab,"internal/lsp: fix badly formatted error messages from go vet

Fixes golang/go#31494

Change-Id: Id65e0daaa67a9fe955b7586af82e4433762cd56c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172398
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-16 16:50:59,https://api.github.com/repos/golang/tools/git/commits/b8fc0e172220788651b68521af24b707e8932693,b8fc0e172220788651b68521af24b707e8932693,"internal/lsp: organize imports as a quickfix

This change adds the ability to organize all imports as quickfix on a
diagnostic, in addition to the standard ""source.organizeImports"" code
action kind. This change still requires a bit of work, since really, we
should only add one import per diagnostic and each edit should be the
edits necessary for the addition or removal of the individual import,
but this is a good start.

Change-Id: I57679446bec833d215c35533240102fb61c86f20
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172397
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-16 17:39:56,https://api.github.com/repos/golang/tools/git/commits/52f869c107d738bedd99a66b74517eb7c6b41ff6,52f869c107d738bedd99a66b74517eb7c6b41ff6,"go/gcexportdata: fix example test for changes in net/rpc

Apparently this frozen package is not so frozen. A change in the imports
has changed the line numbers, causing the test to break. Switch to
another test case in the hopes that it is less fragile.

Change-Id: I8d5203417b8bd73a9e837060d40980a09a767869
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172285
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
stamblerre,2019-04-16 16:58:00,https://api.github.com/repos/golang/tools/git/commits/3e7148b2facff7edbfacc39961fa6a633e1eea64,3e7148b2facff7edbfacc39961fa6a633e1eea64,"internal/lsp: log errors when diagnostics fail

This will allow us to better track the errors that might cause golang/go#30786.

Change-Id: I310ad0fd0eda3102d5763e28fc383a4994ef0ff3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172280
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-16 00:24:28,https://api.github.com/repos/golang/tools/git/commits/9c9e1878f421008fb032021982001085e87d6713,9c9e1878f421008fb032021982001085e87d6713,"internal/lsp: fix crash when there is a type alias to a struct in the symbols code

Change-Id: If492a88c9f80003d7102b4f517621e52cc15759f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171861
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-15 20:15:49,https://api.github.com/repos/golang/tools/git/commits/2e9de471ebd3a3af420e4dd35a826936b94da7f6,2e9de471ebd3a3af420e4dd35a826936b94da7f6,"internal/lsp: handle definitions for variables with error types

Fixes golang/go#31465

Change-Id: I2f79fe2167bab79b497125995efc938f2b63d274
Reviewed-on: https://go-review.googlesource.com/c/tools/+/172117
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-08 13:22:58,https://api.github.com/repos/golang/tools/git/commits/744a51dd885aeae6b2ab02191a8dc51b3c83c805,744a51dd885aeae6b2ab02191a8dc51b3c83c805,"internal/lsp: normalise and make public diff<->edit conversions

This allows us to use the diff.ApplyEdits in tests, saving us from a different
implementation.
It also prepares for command lines that need to use diff features based on the
results of a protocol message.

Splitting content into lines is too easy to get wrong, and needs to be done
correctly or the diff results make no sense. This adds the SplitLines function
to the diff pacakge to do it right and then uses it everwhere we we already
doing it wrong.

It also makes all the diff tests external black box tests.

Change-Id: I698227d5769a2bfbfd22a64ea42906b1df9268d9
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171027
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-04 21:42:34,https://api.github.com/repos/golang/tools/git/commits/fa491999fbfe4e54000520294779f2944b8ef912,fa491999fbfe4e54000520294779f2944b8ef912,"internal/lsp: add unified diff

This adds unified diff handling to the diff package.
It also adds a lot more testing and also verifies the unified
diff tests against the diff program if you run the tests with
the flag -verify-diff
This functionality is needed for some of the command verbs.

Change-Id: I817438fd25c0b16f3f31578f51a886944e74a948
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171024
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-10 03:35:46,https://api.github.com/repos/golang/tools/git/commits/2b5498619ef1a28b0c62559aa2d2ded43a30ce2e,2b5498619ef1a28b0c62559aa2d2ded43a30ce2e,"internal/lsp: Remove 1.10 compatability in tests

Change-Id: I6e136d8b3292c1bedfdbb294c0465689ad1ffafb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171239
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
cuonglm,2019-03-31 07:21:38,https://api.github.com/repos/golang/tools/git/commits/681f9ce8ac52c4ba431539a515ecb7f2ab72eca0,681f9ce8ac52c4ba431539a515ecb7f2ab72eca0,"cmd/compilebench: update document

Add document for ""-go"" and ""-short"" flag, which are listed in output of
""compilebench help"".

Also reformat ""-pkg"" document to align with the rest.

Change-Id: I8ce80d8e02a9cf2b94aa099aa34e53412210d61b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170237
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
zmb3,2019-03-30 20:18:22,https://api.github.com/repos/golang/tools/git/commits/2538eef75904eff384a2551359968e40c207d9d2,2538eef75904eff384a2551359968e40c207d9d2,"internal/lsp: enhance document symbols support

Make methods children of their receiver's type symbol.
Add struct fields as children of the struct's type symbol.
Also identify numeric, boolean, and string types.

Updates golang/go#30915
Fixes golang/go#31202

Change-Id: I33c4ea7b953e981ea1e858505b77c7a3ba6ee399
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170198
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
jba,2019-04-10 18:01:25,https://api.github.com/repos/golang/tools/git/commits/db7bebf5ae722a4f82f734e051bebd8b323d5687,db7bebf5ae722a4f82f734e051bebd8b323d5687,"apidiff: fix old reference to golang.org/x/exp

Change-Id: I46027c584758a37bee51f1a514b1bee292c1514a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171437
Reviewed-by: Michael Matloob <matloob@golang.org>"
tklauser,2019-04-10 06:34:13,https://api.github.com/repos/golang/tools/git/commits/7e5bf9270d7061560865b8847c378236480f47e3,7e5bf9270d7061560865b8847c378236480f47e3,"cmd/getgo: fix build on aix

Change-Id: Ic4a2f8f32258b14354658af5a09c736404d38808
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170961
Run-TryBot: Tobias Klauser <tobias.klauser@gmail.com>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
stamblerre,2019-04-09 04:22:09,https://api.github.com/repos/golang/tools/git/commits/96f2e7ef861b625ecc256679029cf597531360bc,96f2e7ef861b625ecc256679029cf597531360bc,"internal/lsp: ignore errors for completion and signature help

This change makes sure that we never return error messages for
completions and signature help requests - just empty results.

Change-Id: I00d75cd116daab63beb07f2344e47aac01bb64ee
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170958
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
jba,2019-04-08 23:46:42,https://api.github.com/repos/golang/tools/git/commits/9e5445377b7a6defdd04a4466548322eeb7f0eff,9e5445377b7a6defdd04a4466548322eeb7f0eff,"internal/apidiff: diffs of package APIs

This is copied unchanged from x/exp.

Change-Id: I944b912212f7fd844a4bea81605433baf4bcc9a2
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170862
Reviewed-by: Jay Conrod <jayconrod@google.com>"
pjweinb,2019-04-08 13:16:48,https://api.github.com/repos/golang/tools/git/commits/04e50493df54f6f4b9660e767a69b5c5187dc679,04e50493df54f6f4b9660e767a69b5c5187dc679,"cmd/gopls: fix incomplete ClientCapabilities struct

go.ts, the program that generates Go types for the LSP protocol, now
handles Typescript type merging for ClientCapabilites, so fields are no
longer missing. Also, to silence go lint and go vet there are changes
in the comments generated in tsprotocol.go. All the *structs were changed
to structs in ClientCapabilities as it was absurdly complex to write literals
of the type. Finally, several otherwise unused types are no longer
generated.

Change-Id: If414a32bc4d733adb2cf8befda9d8a0703c568a6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171026
Run-TryBot: Peter Weinberger <pjw@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-05 22:05:31,https://api.github.com/repos/golang/tools/git/commits/e5b8258f49188ec2c4702802a35d1ea0c7ccee77,e5b8258f49188ec2c4702802a35d1ea0c7ccee77,"internal/lsp: stop formatting on files that do not parse

This change will stop formatting from working on any file that does not
parse. This is a temporary fix to handle the formatting problems
mentioned here: https://github.com/Microsoft/vscode-go/issues/2410, but
is not a long-term solution.

Change-Id: Ie34b1876519832d6859db95fdcad7cc37a20b769
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171019
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-08 16:48:41,https://api.github.com/repos/golang/tools/git/commits/12dd9f86f35064e818f2474523ed0aacba64399f,12dd9f86f35064e818f2474523ed0aacba64399f,"internal/lsp: remove defunct copy of the LSP protocol

Change-Id: I1cf3f670a3ca0fd9af18a3889ce5ad3d4128e002
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171028
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Peter Weinberger <pjw@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-04-05 21:46:00,https://api.github.com/repos/golang/tools/git/commits/cb42bbeb799cab99c22c42762584b4ab07e4daf3,cb42bbeb799cab99c22c42762584b4ab07e4daf3,"go/packages: add a work around for go list behavior for missing ad-hoc package

If a file in an ad-hoc package doesn't exist, go list should exit 0 and
return an dummy package with an error set on it. Since it doesn't do that
yet, add a work-around.

Updates golang/go#29280

Change-Id: I6019f28ce4770582f274919d1aa35d85a634687e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171018
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
kazyshr,2019-03-31 12:03:24,https://api.github.com/repos/golang/tools/git/commits/0fdf0c73855bae8482c5d3907a9e06f33ff70a10,0fdf0c73855bae8482c5d3907a9e06f33ff70a10,"imports: fix circular imports

goimports will add an import for the package of target source file accidentally,
so check if package path is different from target source file when finding import candidates.

Fixes golang/go#30663

Change-Id: I77c29bc74bef6c888e63ccb501b013a5fbc30b5c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170238
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2019-04-05 17:49:15,https://api.github.com/repos/golang/tools/git/commits/a81264a82310305db9c186558cb6466c4057c97d,a81264a82310305db9c186558cb6466c4057c97d,"internal/lsp: change diff tests to take strings not string arrays to make them more realistic

Change-Id: I7916c29c24cf581ddb4909a9beb8b0be3fb94c68
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170881
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-05 21:30:30,https://api.github.com/repos/golang/tools/git/commits/719e078ade55b7837564fa380a8946830f621152,719e078ade55b7837564fa380a8946830f621152,"cmd/gopls/integration/vscode: log diagnostics as they are received

This change will allow us to investigate golang/go#30786 more easily.
Diagnostics are getting stuck even though they appear to be being sent
in the correct order, so it will be helpeful to see what's happening on
the VSCode side.

Change-Id: I623fcd9979c05decb0a6f60da2f75af7d0ff3853
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170895
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-05 19:56:08,https://api.github.com/repos/golang/tools/git/commits/ccd373261625ba16c1b21278457c5e5a47be4c3c,ccd373261625ba16c1b21278457c5e5a47be4c3c,"internal/lsp: refactor code actions

This change makes codeActions look at the diagnostics provided before
responding. Specifically, before running ""source.organizeImports"", we
check if there is a diagnostic relating to imports.

Change-Id: I5268d5e8f144c4f2e085b2a861d0abfb7614323b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170997
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-06 16:22:29,https://api.github.com/repos/golang/tools/git/commits/0d5674b3111ae60790d3e203196ca141cd2cee71,0d5674b3111ae60790d3e203196ca141cd2cee71,"internal/jsonrpc2: fix bug in direction logging of call responses

Change-Id: Id2fe0caf49e68b01641dadbc9e801210ecbd464f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/171021
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Peter Weinberger <pjw@google.com>"
bcmills,2019-02-08 20:26:59,https://api.github.com/repos/golang/tools/git/commits/052fc3cfdbc2c9e9082b1d51f850b7974b5efb2a,052fc3cfdbc2c9e9082b1d51f850b7974b5efb2a,"cmd/auth/cookieauth: add a GOAUTH implementation that reads from a cookiefile

Updates golang/go#26232

Change-Id: Ic8a7336eeb395fb9e8bbb7589a98a402deed0501
Reviewed-on: https://go-review.googlesource.com/c/tools/+/161669
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Jay Conrod <jayconrod@google.com>"
bcmills,2019-02-08 20:23:49,https://api.github.com/repos/golang/tools/git/commits/aafdb068a05f8fb287af7c5e5cb7b51b0348a213,aafdb068a05f8fb287af7c5e5cb7b51b0348a213,"cmd/auth/netrcauth: add a reference GOAUTH implementation using .netrc files

Updates golang/go#26232

Change-Id: Ic6e0003be518e37927a25552b23da4f62eb1072d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/161668
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Jay Conrod <jayconrod@google.com>"
bcmills,2019-02-08 20:31:29,https://api.github.com/repos/golang/tools/git/commits/e32fe8a1b347224f89e1ab4dbe9e5e84a0c45297,e32fe8a1b347224f89e1ab4dbe9e5e84a0c45297,"cmd/auth/gitauth: add a reference GOAUTH implementation using 'git credential fill'

Updates golang/go#26232

Change-Id: Ic22722756df1e66551222a8834a152519cb39e24
Reviewed-on: https://go-review.googlesource.com/c/tools/+/161667
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Jay Conrod <jayconrod@google.com>"
bcmills,2019-02-07 22:41:51,https://api.github.com/repos/golang/tools/git/commits/50503db0be4cadd5ccc3a59c89780806ef145906,50503db0be4cadd5ccc3a59c89780806ef145906,"cmd/auth/authtest: add a manual-test harness for GOAUTH implementations

Updates golang/go#26232

Change-Id: Idd6d32f4fcb99172a31e50fbd5993d563839c530
Reviewed-on: https://go-review.googlesource.com/c/tools/+/161666
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Jay Conrod <jayconrod@google.com>"
ianthehat,2019-04-05 16:16:45,https://api.github.com/repos/golang/tools/git/commits/b184d1ccfcd1d13c364aff7c82f795030472b4a0,b184d1ccfcd1d13c364aff7c82f795030472b4a0,"internal/lsp: change diff Op.Content to be the unjoined strings

This also means we don't need the J2 becasue it is implied by len(Content)

Change-Id: I04e2cbaa3e1faa1e3add22ec2d478821b9062419
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170878
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-02 00:08:14,https://api.github.com/repos/golang/tools/git/commits/f558378bf83116fb4c80b6acdc028aee0003eb1b,f558378bf83116fb4c80b6acdc028aee0003eb1b,"internal/lsp: make definition use the lsp protocol

instead of driving the source pacakge directly, it indirects through the lsp
protocol (the same way check does)
We are normalizing on all the command lines doing this, so that server mode
is more viable in the future.

Change-Id: Ib5f2a059a44a5c60a53129c554e3cc14ca72c4a8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170577
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-04-04 13:26:18,https://api.github.com/repos/golang/tools/git/commits/d996c1aa53b10c3c47e1764d087a569bb6c32ed1,d996c1aa53b10c3c47e1764d087a569bb6c32ed1,"internal/lsp: minor comment fix

Change-Id: I6603375beac4e321dd45f99e90d7eddbae4c6c4b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170717
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-04 23:33:08,https://api.github.com/repos/golang/tools/git/commits/1058ed41f41a753118f11138e463285d488ceee9,1058ed41f41a753118f11138e463285d488ceee9,"internal/lsp: add a ""usePlaceholders"" setting to gopls configuration

This change allows us to determine if we should complete with
placeholders in the function signature or not.

We currently complete all functions with parameters with a set of
parentheses with the cursor between them. Now, we support the option to
tab through the parameters.

Change-Id: I01d9d7ffdc76eb2f8e009ab9c8aa46d71c24c358
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170877
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-02 16:06:03,https://api.github.com/repos/golang/tools/git/commits/923d25813098b2ffdf1b4bb7ee4ec425fef796a9,923d25813098b2ffdf1b4bb7ee4ec425fef796a9,"internal/lsp: make the guru emulation tests slightly looser with a different matching system

We now match only the things we realy need to, to allow the description to vary more.

Change-Id: Ib3591c41ed5a5c725f2a3efb180ba17f808de51a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170341
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
bradfitz,2019-04-03 17:40:56,https://api.github.com/repos/golang/tools/git/commits/8a44e74612bcf51f0d4407df3d3a8377cb99c2d8,8a44e74612bcf51f0d4407df3d3a8377cb99c2d8,"go/packages: only test TestSizes on GOOS where 386 and amd64 GOARCH exists

Fixes solaris/amd64 about missing solaris/386, which isn't a supported port:

https://build.golang.org/log/39bfb29694089b7aaa6d0a60cc9bd3360129c2ab

Change-Id: If6d9fb368f3236ccf461d5ec47ad3ff4b7ef55b6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170619
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-04-02 21:08:11,https://api.github.com/repos/golang/tools/git/commits/1aadbdfdbb7ad749c12012e6b5ea3eecd3d4257b,1aadbdfdbb7ad749c12012e6b5ea3eecd3d4257b,"go/packages: make sure TypesSizes are requested when Types are

This code fixes a bug when a user specifies NeedTypes, which
implicitly requires TypesSizes, but TypesSizes isn't fetched,
which causes typechecking to explode.

Also fix a similar issue where NeedImports isn't implicitly
fetched for NeedDeps.

I added a TODO for a better fix, which is to have an ""implicitMode""
in the loader type containing all the data that's needed as a prerequisite
for other fields. Then we can use implicitMode when fetching data,
and cfg.Mode to clear out the fields the user didn't request.

Fixes golang/go#31163

Change-Id: If3506765470af43dfb24d06fcbd31b66a623f2e0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170342
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-04-02 19:54:42,https://api.github.com/repos/golang/tools/git/commits/202502a5a9245830b5ec7b877e26b67760da8e67,202502a5a9245830b5ec7b877e26b67760da8e67,"go/packages: fix json struct tag on driverRequest.Command

Fixes golang/go#31181

Change-Id: I99bceb66809ed66393cc8e8deb5b82b8429ca337
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170477
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-04-01 23:38:11,https://api.github.com/repos/golang/tools/git/commits/c5ac96b4c419ee8b66a6eb7e805180844f9f176b,c5ac96b4c419ee8b66a6eb7e805180844f9f176b,"internal/span: span to protocol needs position as well as offset

Change-Id: I4f39abb5932a951b2e5fa0932f478b00138e626a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170186
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
arnottcr,2019-03-22 07:00:44,https://api.github.com/repos/golang/tools/git/commits/b7e8f894e31a2c38d0fcb029c1a9584e8d66319b,b7e8f894e31a2c38d0fcb029c1a9584e8d66319b,"go/packages: rename golistDriverCurrent to golistDriver

This fixes a naming preference missed in CL 166537.

Since func golistDriverCurrent is no longer polymorphic, it was
suggested we simply call it golistDriver.

Change-Id: Ibf517365c20953628ede3457b9247efd8b79897c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168837
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-04-01 18:25:45,https://api.github.com/repos/golang/tools/git/commits/4c644d7e323d3b4a3883d4e238b908fe615f7586,4c644d7e323d3b4a3883d4e238b908fe615f7586,"internal/lsp: avoid extra work in *cache.View.remove

Fixes golang/go#31177

Change-Id: I31219c6285fecd0abc4ff5ec4ae732bcfcb69511
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170182
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-04-01 20:15:58,https://api.github.com/repos/golang/tools/git/commits/36ba6a502a4c18effc6207ad7894c8f52edef281,36ba6a502a4c18effc6207ad7894c8f52edef281,"internal/lsp: suppress error message when there is no config

Change-Id: I04d26ec3967f6515703142a11fc88b115890ab59
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170185
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-01 18:56:49,https://api.github.com/repos/golang/tools/git/commits/5bca5db4cb6bc7230a9916f5a4b9b646270740a0,5bca5db4cb6bc7230a9916f5a4b9b646270740a0,"internal/lsp: check the client capabilities before calling workspace/configuration

Change-Id: I88d1142f4737cb74f5d6c9409218dde674dc1834
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170184
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-03-29 20:05:59,https://api.github.com/repos/golang/tools/git/commits/1bac838f5b88a48878b365c32f610b2f75653109,1bac838f5b88a48878b365c32f610b2f75653109,"internal/lsp: support multiple views

This uses the workspace folders to build multiple views, and then tries to pick
the right view to send each incomming request to.

Change-Id: I0cc896dbbc67eb0a88225ddeca6c518f4258bbba
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170179
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-04-01 19:11:03,https://api.github.com/repos/golang/tools/git/commits/bf99c0974b0e48291a11416482d1fe7762c3078f,bf99c0974b0e48291a11416482d1fe7762c3078f,"internal/lsp: create the undelivered map

(for real, this time)

Change-Id: I563b7b34a1849914e9b922b07a86916bac7be30d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170183
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-04-01 14:55:08,https://api.github.com/repos/golang/tools/git/commits/4fc9f0bfa59af25ec747132b66fc7887a8c34490,4fc9f0bfa59af25ec747132b66fc7887a8c34490,"internal/lsp: cache file objects for every dependency

Change-Id: I68eedc49a07aa9ba3328a4380e97ed03d1b75749
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170180
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-03-14 21:19:01,https://api.github.com/repos/golang/tools/git/commits/cf22ef03859dcea3e5d191a604baec82f00b8cd5,cf22ef03859dcea3e5d191a604baec82f00b8cd5,"internal/lsp: handle undelivered diagnostics

This change adds a cache of undelivered diagnostics on the server-side.
If we fail to send a diagnostic once, we will retry the next time that
the server sends diagnostics.

Change-Id: I161dfad8ea1d2cfdcee933baed2d6872dc03b0c0
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167737
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-04-01 15:28:21,https://api.github.com/repos/golang/tools/git/commits/e2f00d1e077caed96bb6eb4ce03a6bc8464e6c59,e2f00d1e077caed96bb6eb4ce03a6bc8464e6c59,"internal/lsp: make pipe mode the default for command line tests

now there are no more race conditions in the jsonrpc or server code make
connected pipe (rather than direct API) the default in the tests to make
sure we stay clean.

Change-Id: Id1ffede795a660dbf7b265b9e0419c60cf83c6e8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170181
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-03-29 23:04:29,https://api.github.com/repos/golang/tools/git/commits/5d16bdd7b52e1f60221247e74fc795574a05424a,5d16bdd7b52e1f60221247e74fc795574a05424a,"internal/lsp: add the ability to log back to the client

Also use it for errors that were otherwise silently dropped
This makes it much easier to debug problems.

Also added command line control over whether the rpc trace messages are printed, which allows you to read the
log, otherwise the file edit messages swamp the log.

Change-Id: I7b70fd18034a87b2964e6d6d5f6f33dcaf7d8ea8
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170178
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
dmitshur,2019-03-30 16:18:02,https://api.github.com/repos/golang/tools/git/commits/aef51cc3777c6a88d6834b42444edffdac4860fa,aef51cc3777c6a88d6834b42444edffdac4860fa,"go/analysis/unitchecker: allow dash in file paths

The temporary directory may contain a dash, and the test shouldn't
fail because of that.

Fixes golang/go#31164

Change-Id: I3c0d636771e13fec345e46394fb548e3c4ea4478
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170177
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2019-03-30 16:19:12,https://api.github.com/repos/golang/tools/git/commits/a68386b9fffea123b568538dfe34776a89c14492,a68386b9fffea123b568538dfe34776a89c14492,"go/packages: add NeedTypesSizes to LoadTypes

This change moves the NeedTypesSizes bit to LoadTypes instead of LoadSyntax.

Fixes golang/go#31163

Change-Id: Icaf16639202533fbb2190756a325b36d8ac9251c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170016
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dmitshur,2019-03-30 07:23:49,https://api.github.com/repos/golang/tools/git/commits/1cd2f21070ecb547260f77e509ce60906a51b4ca,1cd2f21070ecb547260f77e509ce60906a51b4ca,"imports: add syscall/js API to zstdlib.go

The syscall/js API is not included in the GOROOT/api/go1.*.txt files
at this time, and so it needs to be added to mkstdlib.go explicitly.
Run the cmd/api command directly in the generator to determine the
syscall/js API.

Regenerate zstdlib.go with the updated generator, using Go 1.12.1.

Fixes golang/go#27590

Change-Id: I541588986d70f67f4917d9b34bdd57ca44f538f7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170014
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2019-03-29 22:16:43,https://api.github.com/repos/golang/tools/git/commits/a96101f168f4ff1e2cd559ba4f61dbd091684e41,a96101f168f4ff1e2cd559ba4f61dbd091684e41,"internal/lsp: add a work-around for golang.org/issue/31090

Change-Id: I6be1a61bc0b573913ef86b7a47e9f71d036f84e3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170011
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-03-29 20:39:22,https://api.github.com/repos/golang/tools/git/commits/73054e8977d1bcb4f5837e4a85d0f8a9f0bcb092,73054e8977d1bcb4f5837e4a85d0f8a9f0bcb092,"internal/lsp: use new go/packages LoadMode to get TypesSizes

This change also fixes the corresponding code in go/packages, which was
actually not filling in the TypesSizes if the bit was set.

Change-Id: I2d5a849045768a81c94218eb41da2faec26189a3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170010
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-03-29 20:14:24,https://api.github.com/repos/golang/tools/git/commits/24738cbdc1170d3afac144266fe5b2171011eddc,24738cbdc1170d3afac144266fe5b2171011eddc,"internal/lsp: add an error result to findFile

This change allows us to return diagnostics in the case of a file that
doesn't exist.

Change-Id: I6275c0dc9103a3f44070919937afe27c64545828
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170009
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-03-29 18:16:59,https://api.github.com/repos/golang/tools/git/commits/0ec5c269d481877e08b598fe3cdadce903fffb4a,0ec5c269d481877e08b598fe3cdadce903fffb4a,"internal/lsp: clean up the confguraton handling

Now the jsonrpc2 library allows you to call outgoing methods within a handler
we can clean up some stuff and also have it work correctly in more cases.

Change-Id: I8633069816d92f7cc16842431775efb1a98a506a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170008
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-03-29 15:13:22,https://api.github.com/repos/golang/tools/git/commits/1f1f5f5d5753bd1efa20508d9cf76bf3d6549d7a,1f1f5f5d5753bd1efa20508d9cf76bf3d6549d7a,"internal/lsp: decouple message processing from stream processing.

The means that the stream reader can move forward while a message is being processed.
This will significantly improve responsivness and cancellation handling, and also
allow message handlers to send messages themselves, reducing the need to spin up
new go routines inside handlers.
The flow control changes from blocking to failing when a server is busy, which removes
the main current cause of deadlock, but may break non deadlock cases that currently wait
if the queue is not sufficiently large.

Change-Id: Ia73eb049b38d0651344abdbf16c477a8ce1a6fd1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170007
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-03-29 01:06:01,https://api.github.com/repos/golang/tools/git/commits/a8f40b3f4d73b4863d04b4ad6b0337d3a78f5eaa,a8f40b3f4d73b4863d04b4ad6b0337d3a78f5eaa,"internal/jsonrpc2: split main loop from construction to fix race

This changes the basic API of a jsonrpc2 connection to run the
read loop as a method rather than in a go routine launched in
the NewConn. This allows the handler to be created and bound
between construction and the read loop starting, which fixes
the race.

Fixes golang/go#30091

Change-Id: I8201175affe431819cf473e5194d70c019f58425
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170003
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-03-29 17:46:33,https://api.github.com/repos/golang/tools/git/commits/0926561711323f19c6649aaf9bf227d6addf1209,0926561711323f19c6649aaf9bf227d6addf1209,"internal/lsp: fix nil pointer exception in document symbols

Change-Id: I168bf7b995aa0b609de67999879addad250eff11
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170006
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-03-22 16:00:34,https://api.github.com/repos/golang/tools/git/commits/23e29df326feb00fa2c3f4a4e8ba3365fdc4e93d,23e29df326feb00fa2c3f4a4e8ba3365fdc4e93d,"internal/lsp: fix broken gopls query help comment

Change-Id: I7f1f9c4a56a1471ebb6f2b4d1a72b8d7c2223e85
Reviewed-on: https://go-review.googlesource.com/c/tools/+/170017
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-03-28 21:17:40,https://api.github.com/repos/golang/tools/git/commits/4471d52094c500bd0e187792a770b40b42e8c0a9,4471d52094c500bd0e187792a770b40b42e8c0a9,"internal/lsp: allow command line tests to connect through a pipe

With this change (finally, after a lot of detours) if you run the lsp tests with `-race -pipe` then you
can reliably reproduce the race in golang/go#30091

Change-Id: Ibd9fda5e07409a15d1bc8d14cb46fde41155aa6e
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169999
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-02-08 21:16:57,https://api.github.com/repos/golang/tools/git/commits/ab21143f238442efbf2d6acedb69eaddbb43d088,ab21143f238442efbf2d6acedb69eaddbb43d088,"internal/lsp: adding command line access to diagnostics

Change-Id: I011e337ec2bce93199cf762c09e002442ca1bd0d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167697
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-03-28 12:49:42,https://api.github.com/repos/golang/tools/git/commits/8889bfc21e268a2baf5e076ae225d2ec7da8856d,8889bfc21e268a2baf5e076ae225d2ec7da8856d,"internal/lsp: wire up configuration

This connects up the configuration message, and uses it to allow the client to set the environment
in the config passed to packages.Load

Change-Id: I75e03c01c74e9b11c8b4c47b9cbdd0574cddf778
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169704
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
zmb3,2019-03-28 00:00:20,https://api.github.com/repos/golang/tools/git/commits/8f05a32dce9ff80c9bf11baeb89d26b410f39281,8f05a32dce9ff80c9bf11baeb89d26b410f39281,"internal/lsp: correctly report interface symbols

Updates golang/go#30915

Change-Id: I9c5faa615df506cf1d015a9eb48196fa9b0387ee
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169682
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-03-28 02:12:54,https://api.github.com/repos/golang/tools/git/commits/2898d834dca37fe46e3e223470c94dd567c5a8ad,2898d834dca37fe46e3e223470c94dd567c5a8ad,"internal/lsp: fix tiny bug in getting files by basename

This change fixes gopls on Windows.

Fixes golang/go#30967

Change-Id: Iba5eb6932a4acd6a574ad6970faf7c133ecb7d32
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169703
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-03-27 13:25:30,https://api.github.com/repos/golang/tools/git/commits/c70d86f8b7cf4b047359c1da990de8d884ddff9a,c70d86f8b7cf4b047359c1da990de8d884ddff9a,"internal/lsp: match files by identity

Instead of using a simple path map we now attempt to match files with
os.SameFile with fast paths for exact path matches. This should fix issues both
with symlinked directories (the mac tmp folder) and with case sensitivity
(windows)

Change-Id: I014dd01f89d08a348e7de7697cbc3a2512a6e5b3
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169699
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-02-04 18:58:07,https://api.github.com/repos/golang/tools/git/commits/dbeab5af4b8d3204d444b78cafaba18a9a062a50,dbeab5af4b8d3204d444b78cafaba18a9a062a50,"go/packages: split LoadMode into fine-grained options

The options are all unexported, and this CL is (almost) a no-op:
the one difference is that since needImports and needSyntax are now
independently specified, LoadSyntax and LoadAllSyntax are equivalent,
because LoadSyntax needs both the needImports and needSyntax bits.

I want to pin down the options that we want to split into, and
future CLs can allow the options to be used individually...

Updates golang/go#29429
Updates golang/go#29427

Change-Id: I5b2913e2c53e7ade56905e46912b076ccc339827
Reviewed-on: https://go-review.googlesource.com/c/tools/+/162140
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Jay Conrod <jayconrod@google.com>"
stamblerre,2019-03-27 01:11:20,https://api.github.com/repos/golang/tools/git/commits/45dd101d87843da2a383dd0ce49a8c8519ce766b,45dd101d87843da2a383dd0ce49a8c8519ce766b,"internal/lsp: unescape uris before we convert them to span.URI

This is the first step of fixing gopls on Windows.

Change-Id: I20cea63051f448cba86996edaf7a8347b0d20bd1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169444
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-03-27 01:02:11,https://api.github.com/repos/golang/tools/git/commits/79af862e6737e9b6ea995ccf9e8eaccd41ef1523,79af862e6737e9b6ea995ccf9e8eaccd41ef1523,"internal/span: switch to an offset function that doesn't panic

go/token.File.Offset panics on invalid positions, which is causing
crashes on invalid ASTs.

Change-Id: I6c698760ae92f3076a056c3560bea2e8eeb528db
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169443
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-03-27 00:11:20,https://api.github.com/repos/golang/tools/git/commits/41a94eb788dfcbf5bbc4a947d165ddd74538965c,41a94eb788dfcbf5bbc4a947d165ddd74538965c,"internal/lsp: add back distinction between var and const symbols

Change-Id: I59f87d4430c93438804cea7cc56a80f12bb42a00
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169441
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-03-26 23:48:42,https://api.github.com/repos/golang/tools/git/commits/cd3f3f06fc2d4af88acdfebc352e4cc2a8aeafe5,cd3f3f06fc2d4af88acdfebc352e4cc2a8aeafe5,"internal/span: return error when on spans with invalid starts

Fixes golang/go#30155

Change-Id: I7f9dbec6fdfa92654f58627ef44ee4bfe2870fa6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169440
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-03-26 21:38:40,https://api.github.com/repos/golang/tools/git/commits/c02eab13f049c3a200e45693441b027772cfa325,c02eab13f049c3a200e45693441b027772cfa325,"internal/lsp: group document symbols and add more detail

This change uses go/types information to get the types for the
different symbols. It also groups the symbols according to their kinds,
though this doesn't seem to be reflected in the actual VSCode UI...

Updates golang/go#30915

Change-Id: I2caefe01f9834aaad6b9e81cd391d461405ef725
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169438
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
jba,2019-03-26 20:50:29,https://api.github.com/repos/golang/tools/git/commits/3ad05305c9b0e30fce8bcbef2a43203fc3beb792,3ad05305c9b0e30fce8bcbef2a43203fc3beb792,"go/analysis/cmd/vet: add errorsas analyzer

Change-Id: I4900b62cb460c8fab2fca6302b472bb531e46eb7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169457
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
jba,2019-03-22 14:37:01,https://api.github.com/repos/golang/tools/git/commits/b8c0eb49112411cafed4f44f5b7debe8e40bc349,b8c0eb49112411cafed4f44f5b7debe8e40bc349,"go/analysis/passes/errorsas: check type of errors.As target

Add a vet pass that checks that the second argument to errors.As
is a pointer to a type implementing error.

Change-Id: I0924e634cbea0664c8728f0e74213b924f8498e6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168938
Reviewed-by: Damien Neil <dneil@google.com>"
ianthehat,2019-03-25 22:30:55,https://api.github.com/repos/golang/tools/git/commits/0268d3dd0724eb8b65d4e71a1285076f6efd643d,0268d3dd0724eb8b65d4e71a1285076f6efd643d,"internal/lsp: use main testdata folder

This upgrades the current gopls query definition tests to use the main testdata
folder. This considerably increases the coverage and also sets us up to better
test the other command line features as we add them.

Change-Id: If722f3f6d0270104000f1451d20851daf0757874
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169159
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
zmb3,2019-03-26 00:56:05,https://api.github.com/repos/golang/tools/git/commits/ca36ab2721ce4360c1df074e6575160aede8f287,ca36ab2721ce4360c1df074e6575160aede8f287,"internal/lsp: add support for document highlight

Change-Id: I232dbb0b66d690e45079808fd0dbf026c4459400
Reviewed-on: https://go-review.googlesource.com/c/tools/+/169277
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
zmb3,2019-03-18 22:43:08,https://api.github.com/repos/golang/tools/git/commits/1d95b17f1b046c395bb6a29c453b501d267151d3,1d95b17f1b046c395bb6a29c453b501d267151d3,"x/tools/internal/lsp: add support for document symbols

Updates golang/go#30915

Change-Id: I9a447f7748eb9894fb6f4072febec132b2ed91d7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168338
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-03-22 20:43:20,https://api.github.com/repos/golang/tools/git/commits/5a8dccf5b48ae388eebac31f4077f14adda4dbc6,5a8dccf5b48ae388eebac31f4077f14adda4dbc6,"go/packages/packagestest: convert to the span library

Change-Id: Ib8984dd0828e3bb0b49eaa1604649300a4d54306
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168900
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-03-22 20:28:41,https://api.github.com/repos/golang/tools/git/commits/c1a832b0ad89ed14aba1b0a13a0733e291a7c7fc,c1a832b0ad89ed14aba1b0a13a0733e291a7c7fc,"go/packages: remove spurious print

Also fix a test name.

Fixes golang/go#30994

Change-Id: Ib37359254206ecf47b0ac23098c57da1e69944a1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168939
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-03-21 20:00:43,https://api.github.com/repos/golang/tools/git/commits/3a76a6439c9d8f66c0beeb51a5a9ebd2168943a3,3a76a6439c9d8f66c0beeb51a5a9ebd2168943a3,"go/packages/testdata: add go directives to fake module files

Stop fighting the behavior of the go tool when run in these directories.

Updates golang/go#30790

Change-Id: I32dfeb0bafa3ed3664500f1768b2293e5257d09b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168757
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
dmitshur,2019-03-22 15:37:48,https://api.github.com/repos/golang/tools/git/commits/8f249a1648fcc76f3d199643ac427b4e20262098,8f249a1648fcc76f3d199643ac427b4e20262098,"go/packages: detect missing binary via exec.ErrNotFound error

exec.Command already runs exec.LookPath when given a name that contains
no path separators. There's no need to call exec.LookPath a second time
to detect that cmd.Run failed because of a missing executable file.
It can be detected from the returned error. Do so because it's cleaner.

Also improve the error text to say that the problem was that the go
executable file was not found in $PATH (or %PATH%, etc., depending on
the underlying operating system). In the general case, we can't know if
Go is or isn't installed.

Example error text on macOS:

	gopackages: 'go list' driver requires 'go', but executable file not found in $PATH

Updates golang/go#29552

Change-Id: I769553f125240dccd02098c22641f6a1ed10063c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168897
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2019-03-22 15:32:16,https://api.github.com/repos/golang/tools/git/commits/e779aa49e359eb9a328069406fafdb0d559c205d,e779aa49e359eb9a328069406fafdb0d559c205d,"go/ssa/interp: make tests fast and robust

The go/ssa/interp tests have been a maintenance nightmare for years
because the interpreter requires intrinsics for all low-level or
non-Go code functions, and the set of such functions in the standard
library naturally changes from day to day.

This CL finally drops support for interpreting real packages (which
has anyway been broken for ages) and restricts the test suite to small
programs that use a handful of simple functions in packages bytes,
strings, errors, runtime, reflect, and unicode. These functions are
declared in a tiny fake standard libary in testdata/src, and the
implementations of these functions are provided by interpreter
intrinsics that delegate to the real Go implementation---all their
parameters and results are basic datatypes.

The test suite is now very fast and should be easy to maintain going
forward. It is still possible that a change to some file in
$GOROOT/test/*.go adds a dependency to a symbol not present in our
standard library, but this is rare. I will either delete the test or
add the intrinsic on a case-by-case basis.

We no longer attempt to interpret major functionality like
fmt.Sprintf or ""testing"".

The interpreter always pretends to be in linux/amd64 mode.

Happy Christmas, Brad. ;)

Fixes golang/go#27292

Change-Id: I715cf63e3534e2e0dab4666a5d7c669bf1d92674
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168898
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianlancetaylor,2019-03-22 14:49:12,https://api.github.com/repos/golang/tools/git/commits/cc8e56e55e700fa70980a80fae002eeca49f8aa9,cc8e56e55e700fa70980a80fae002eeca49f8aa9,"go/analysis/passes/tests: break out of loop when we find a method

Updates golang/go#30971

Change-Id: I7c9250c46fede553689cdc5007b6f330a006b867
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168804
Run-TryBot: Ian Lance Taylor <iant@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianlancetaylor,2019-03-22 14:22:32,https://api.github.com/repos/golang/tools/git/commits/6aabc1ca790df3e0b556593b27bc25d26b151751,6aabc1ca790df3e0b556593b27bc25d26b151751,"go/analysis/passes/tests: don't warn about missing method for each type

Only warn if the method is missing for all types.

Fixes golang/go#30971

Change-Id: I94169ad3266f68ca20378a8dc5538aed2541a773
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168803
Run-TryBot: Ian Lance Taylor <iant@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2019-03-21 23:13:33,https://api.github.com/repos/golang/tools/git/commits/e250d351ecad161c4cf2f50bce18a1b2df5dfd78,e250d351ecad161c4cf2f50bce18a1b2df5dfd78,"go/packages: fix the build

Broken by CL 168657

Change-Id: I359d53c13eb470a5d95440d89b0cca3616b94f00
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168798
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
Groxx,2019-03-17 21:01:14,https://api.github.com/repos/golang/tools/git/commits/a94d7df2cbc86f0529cda4092aef610aaf26e257,a94d7df2cbc86f0529cda4092aef610aaf26e257,"go/analysis/internal/checker: don't clobber fact when codeFact fails

`codeFact` returns `nil, err` on errors, which results in error messages like:

    panic: internal error: encoding of nil fact failed in [analyzer]

Though that and the stacktrace are often enough to identify the cause, the nil
hides the actual source of the problem.

Change-Id: Iddcdee386a5c64c6567d2727ebe7a77fe21927e9
GitHub-Last-Rev: 92163c2a5a631817319c992f7445f86d95130514
GitHub-Pull-Request: golang/tools#78
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167997
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
matloob,2019-03-21 20:31:13,https://api.github.com/repos/golang/tools/git/commits/43e94f73381ff6c32de35fb91fd13969d352f35a,43e94f73381ff6c32de35fb91fd13969d352f35a,"go/packages: give a better error if 'go' is missing

If we can't execute the go command, check to see if it exists. If it doesn't,
say so in the error.

Fixes golang/go#29552

Change-Id: Iffd2db5fc8f1daa2e458eaa326b27d9a0d971b6b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168777
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-03-21 17:02:52,https://api.github.com/repos/golang/tools/git/commits/86483bace61a0658d207b92f8ed38e06b386a5cb,86483bace61a0658d207b92f8ed38e06b386a5cb,"go/packages: make error message for conflicting packages more clear

Make it slightly more clear that this is not a user error, but an
internal error.

Updates golang/go#30519

Change-Id: I7adb3b5bb1548eab8e46db48946d55f9d59a4311
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168657
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-03-20 18:41:40,https://api.github.com/repos/golang/tools/git/commits/db798565ff988d5f10b21f1af83e0c8894596e74,db798565ff988d5f10b21f1af83e0c8894596e74,"go/analysis/passes/test: remove some false positives

Alternative build systems like blaze don't always provide a way to determine
the relationship between a package and the package it's testing. This means
that sometimes the check for misspelled Example function names over-reports
because it doesn't find the object being exemplified. Don't report errors
unless a object can't be found in any of the imports. This means that there
won't be any false positives though of course this comes at the cost of
false positives.

Change-Id: I7435eeb2333b6dd72e06bb6383fff2ac17bee845
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168404
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
arnottcr,2019-03-11 03:20:47,https://api.github.com/repos/golang/tools/git/commits/c5e06eb4cd0c26e155eece9f6ad4abbb0acb3318,c5e06eb4cd0c26e155eece9f6ad4abbb0acb3318,"go/packages: remove fallback listfunc for Go 1.10.4

go list functionality changed in 1.11 and compatibility logic was added
to support 1.10 and before. Now that Go 1.12 has been released, support
for those version has ended and we can remove the legacy code.

Change-Id: Ifdd5c566dbbfe4fade5be27ad9ae20052d604c15
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166537
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
benjaminp,2019-03-21 15:40:04,https://api.github.com/repos/golang/tools/git/commits/ae772f11d2940420ae531585c96e6241cf648cbb,ae772f11d2940420ae531585c96e6241cf648cbb,"third_party: remove

third_party only had JavaScript for cmd/heapview, which was deleted in 3c4dfba64b8d62b66f7db99209b647948a2d2a62.

Change-Id: I7378e04e8eea74c32fcad4f7759b4e3b399faabc
GitHub-Last-Rev: 0f6ad4a47d85fe2ad00adb4b851ac01ba1881463
GitHub-Pull-Request: golang/tools#79
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168577
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bsiegert,2019-03-20 14:12:34,https://api.github.com/repos/golang/tools/git/commits/3096223ce80706f73be7154726e67f3539691be7,3096223ce80706f73be7154726e67f3539691be7,"internal/lsp/cmd: fix regexp in test

The test fails if the GOROOT directory contains a dash, e.g. as in
/usr/lib/google-golang on corporate workstations, or on certain
builders.

Change-Id: If08c438764f4b76fff7fb43ccf3e4fd56afeff1a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168063
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
Skarlso,2019-03-02 20:03:14,https://api.github.com/repos/golang/tools/git/commits/36c10c0a621fb2fede4686e8ae7bb1d900735d53,36c10c0a621fb2fede4686e8ae7bb1d900735d53,"x/tools/go/packages: seems to do nothing when given non-Go files

This CL fixes packages ignoring errors regarding files that have
non .go extensions. Packages can be called with just file names
or path which includes files. These aren't checked at all by
packages if they are go files or not, but it fails silently because
of it.

In more detail, go list fails with named files error in STDERR.
However, that is ignored, because go list notoriously abused STDERR
for non-error messages.

Fixes golang/go#29899

Change-Id: Ie4dc39da0b87200ebd23e6c607396557685e2807
Reviewed-on: https://go-review.googlesource.com/c/tools/+/164663
Reviewed-by: Michael Matloob <matloob@golang.org>"
mvdan,2019-03-18 19:56:56,https://api.github.com/repos/golang/tools/git/commits/b6b7807791df8aa3e230578a98256106c4f912ab,b6b7807791df8aa3e230578a98256106c4f912ab,"go/analysis: make stdmethods happy on encoding/xml

Historically, vet had always been unhappy about encoding/xml itself:

	method MarshalXML(e *xml.Encoder, start xml.StartElement) error should
		have signature MarshalXML(*xml.Encoder, xml.StartElement) error

This dates back to the time when vet couldn't depend on type
information. It compared the type expressions directly as strings, which
was a problem when the code was in encoding/xml itself. There, the
function parameters are *Encoder and StartElement, not *xml.Encoder and
xml.StartElement.

However, vet has been depending on type information for a while, so this
restriction no longer makes sense. The analyzer almost got it right, but
the only stopgap was a piece of the old code that tried to compare type
expression strings.

Remove it; typeString already deals with these edge cases for us. To
ensure vet remains happy with encoding/xml, add a very simple test for
it. The package now has zero reports, so the fact that its source has
zero ""// want"" comments is appropriate.

Finally, remove some long unused parameters from matchParamType.

Change-Id: Iab3ed57da7bc4a80522ae21e62b67e7828b97c89
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168058
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
dr2chase,2019-03-19 20:54:43,https://api.github.com/repos/golang/tools/git/commits/3f1ed9edd1b43b011064eb59e5c9e73f5537ddd9,3f1ed9edd1b43b011064eb59e5c9e73f5537ddd9,"go/gcexportdata: fix gcexportdata example for new compiler behavior

Initialization changes in
https://go-review.googlesource.com/c/go/+/161337
added a symbol, which was not 'expected output'.

Adjusted behavior to conform to expectations, since older
Go versions must continue to pass.

Fixes golang/go#30912.

Change-Id: If2f27ea29e20a03c5412f1999711a9208c3ca470
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168397
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2019-03-18 18:40:57,https://api.github.com/repos/golang/tools/git/commits/bb1270c20edf080f9f069ea11a1fe5c2b0ebd62c,bb1270c20edf080f9f069ea11a1fe5c2b0ebd62c,"internal/lsp: fix accepting line:colum forms to query definition

Change-Id: I425a9ebf77925b16fb7cb6fd5727d2377ab836b1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168178
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2019-03-18 19:07:21,https://api.github.com/repos/golang/tools/git/commits/a41300a290d92b502c559258f5e6d1ebc99996e6,a41300a290d92b502c559258f5e6d1ebc99996e6,"internal/lsp: refactor query definition test to allow adding a new test

Change-Id: I360f21012f26118947dbac7c39e17c9c1f599379
Reviewed-on: https://go-review.googlesource.com/c/tools/+/168177
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
rogpeppe,2019-02-22 12:01:45,https://api.github.com/repos/golang/tools/git/commits/63e6ed9258fa6cbc90aab9b1eef3e0866e89b874,63e6ed9258fa6cbc90aab9b1eef3e0866e89b874,"cmd/stringer: compile error when constants change

When constant values change but stringer has not
been run again, we can get misleading string values.
Protect against this by generating code that will fail
with a compiler error when this happens.
Most compilers should be smart enough to omit the
code containing the checks.

Change-Id: I7a36d20f014cba0e7d88851d1b649a098ee30d76
Reviewed-on: https://go-review.googlesource.com/c/tools/+/163637
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>"
eliasnaur,2019-03-15 15:11:23,https://api.github.com/repos/golang/tools/git/commits/f0bfdbff1f9c986484a9f02fc198b1efcfe76ebe,f0bfdbff1f9c986484a9f02fc198b1efcfe76ebe,"internal/lsp,internal/lsp/cmd: skip tests on android

Change-Id: Idd9ddd32742a9f85096b71509511492b54538190
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167818
Run-TryBot: Elias Naur <mail@eliasnaur.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
bradfitz,2019-03-15 20:26:42,https://api.github.com/repos/golang/tools/git/commits/658e28e1e60993a49b40c6690f11f8a797097f0f,658e28e1e60993a49b40c6690f11f8a797097f0f,"cmd/stringer: add temporary(?) fix to get stringer test working in module mode

Updates golang/go#30874

Change-Id: I170ea99b3f06c8bc4cc624e86b80eeb852ea7115
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167771
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
heschik,2019-03-15 19:21:23,https://api.github.com/repos/golang/tools/git/commits/c74ccfb859c02fdeda7e69caf9e7fdccd9a080fc,c74ccfb859c02fdeda7e69caf9e7fdccd9a080fc,"imports: handle missing main module

If GO111MODULE=on but there's no go.mod, GOMOD will be set to /dev/null
or NUL and there will be no main module. goimports should handle this
case roughly the same way the go command does.

Fixes golang/go#30855

Change-Id: I6fbf4c056000db5abd8788a6014ae5f13b1c8cd4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167860
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-03-15 18:25:54,https://api.github.com/repos/golang/tools/git/commits/e6df0c1bb376613eeaa3a70f829542dad44c2589,e6df0c1bb376613eeaa3a70f829542dad44c2589,"go/packages: run name query tests in a temporary directory

Some of the tests on the name query operate on test modules or module cache
trees that are checked in as testdata. When the tests run, they can modify
the go.mod files and the cache tree directories. Copy the directories
to a temporary directory to avoid getting spurious git diffs showing up.

Change-Id: I991a4510201988d596833faea88425a335d3228b
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167859
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
ianthehat,2019-03-15 17:19:43,https://api.github.com/repos/golang/tools/git/commits/2f43c6d1a261a733f4aeb551a5d5b410f3c18233,2f43c6d1a261a733f4aeb551a5d5b410f3c18233,"internal/span: change to private fields

Change span to hide its fields and have validating accessors
This catches the cases where either the offset or the position is being used
when it was not set.
It also normalizes the forms as the API now controls them, and allows us to
simplify some of the logic.
The converters are now allowed to return an error, which lets us cleanly
propagate bad cases.
The lsp was then converted to the new format, and also had some error checking
of its own added on the top.
All this allowed me to find and fix a few issues, most notably a case where the
wrong column mapper was being used during the conversion of definition results.

Change-Id: Iebdf8901e8269b28aaef60caf76574baa25c46d4
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167858
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
marwan-at-work,2019-03-15 16:10:31,https://api.github.com/repos/golang/tools/git/commits/f59e586bb35d2073f940c7d02e0746dcec436810,f59e586bb35d2073f940c7d02e0746dcec436810,"cmd/lsp: skip completion in string literals

This CL ensures that a ""."" inside a string literal will return an empty
completion list.

Fixes golang/go#30477

Change-Id: I1442d0acab4c12a829047805f745c4729d69c208
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167857
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-03-11 21:14:55,https://api.github.com/repos/golang/tools/git/commits/8110780cfa068905824bca5103f95cac20c79fc8,8110780cfa068905824bca5103f95cac20c79fc8,"internal/lsp: add correct handling for circular imports

This change brings back handling for circular imports, which was removed
because I originally thought that go/packages would handle that.
However, since we are type-checking from source, we still end up having
to deal with that.

Additionally, we propagate the errors of type-checking to the
diagnostics so that the user can actually see some of the problems.

Change-Id: I0139bcaae461f1bcaf95706532bc5026f2430101
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166882
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-03-14 01:41:54,https://api.github.com/repos/golang/tools/git/commits/8b67d361bba210f5fbb3c1a0fc121e0847b10b57,8b67d361bba210f5fbb3c1a0fc121e0847b10b57,"internal/lsp: configure completion to preselect the first item

The language client must support the preselect feature, so as of right
now, I don't think that this change has any effect. However, ultimately,
we should preselect the first completion item we suggest, as we rank
items.

Change-Id: I977cce26157504595a0193ab551685e21a3df155
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167466
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-03-14 20:55:23,https://api.github.com/repos/golang/tools/git/commits/8781451fe3aa8f57e6e3d175e99bcc1f1382a021,8781451fe3aa8f57e6e3d175e99bcc1f1382a021,"internal/lsp: propagate errors from in diagnostics

An ignored error in toProtocolDiagnostics could result in empty
diagnostics being (incorrectly) sent to the user.

Change-Id: I34c86a1f5bbf28888bedad094f596cc27a52b86d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167714
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-03-14 00:59:59,https://api.github.com/repos/golang/tools/git/commits/1286b2016bb195031cab5657d3244bc996b3f2dd,1286b2016bb195031cab5657d3244bc996b3f2dd,"internal/lsp: filter on insert text, not label

Change-Id: Ibd0c0c7af57cc8aeec56188cf52300f7c558adfe
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167464
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
josharian,2019-03-11 01:34:09,https://api.github.com/repos/golang/tools/git/commits/4ccd092f47c954d1f5224a270a26c942eecffbe8,4ccd092f47c954d1f5224a270a26c942eecffbe8,"cmd/compilebench: generate separate mem profiles when using -count

When the -count flag is provided,
instead of having each run overwrite the previous profile,
add a count suffix to the profile filename.

Then you can combine the profiles with

go tool pprof `go tool -n compile` <all profile files here>

This was done for CPU profiles in https://golang.org/cl/39718.

Change-Id: I4aa66d745fe18088655fc1d9cf3ecf29f68370bb
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166523
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
stamblerre,2019-03-13 23:31:41,https://api.github.com/repos/golang/tools/git/commits/a10017ccd2b9f00ddbb45c5f7e522b352da97888,a10017ccd2b9f00ddbb45c5f7e522b352da97888,"internal/lsp: handle common nil pointer exceptions

We may encounter these nil pointer if go/packages cannot find the
package of the given file, for example, when the user creates a new file
or a new package.

Change-Id: I16993017243a56332dd9f7e0aaf3c1d57f20fc3a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167462
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-03-13 22:00:13,https://api.github.com/repos/golang/tools/git/commits/48d47c461c4e2a323cb7c6608d6a830afc4711d3,48d47c461c4e2a323cb7c6608d6a830afc4711d3,"internal/span: fix utf16 column when span is line based

A span with column 0 is intended to mean the start of the line, which in utf16
mode must be the 1st character

Change-Id: I4b98fe86528b889bbfe4b5ed3ae79c4da81017b1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167459
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-02-20 02:11:15,https://api.github.com/repos/golang/tools/git/commits/dbad8e90c91bdd4d0527ece950a56895f51d84b7,dbad8e90c91bdd4d0527ece950a56895f51d84b7,"internal/lsp: convert to the new location library

This rationalises all the position handling and conversion code out.
Fixes golang/go#29149

Change-Id: I2814f3e8ba769924bc70f35df9e5bf4d97d064de
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166884
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-03-13 18:25:56,https://api.github.com/repos/golang/tools/git/commits/d55b9fb8ef72d82490e38e4b1263c176592987ae,d55b9fb8ef72d82490e38e4b1263c176592987ae,"internal/lsp: stop providing insertText for completion items

InsertText is deprecated, and it seems that providing both InsertText
and TextEdits causes unexpected behavior from VSCode. Avoid this by
providing only TextEdits.

Fixes golang/go#30796

Change-Id: Ieb5ad2fecd6f7083a4c1bc402634893c7e6ff49f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167457
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-03-11 18:13:52,https://api.github.com/repos/golang/tools/git/commits/516ab0aa77ec86b0412e71cb5c8ecf489b97f62b,516ab0aa77ec86b0412e71cb5c8ecf489b97f62b,"go/packages/packagestest: add Exported as a type expectations can use

This is mostly to allow access to exported file contents for tests
that need the source.

Change-Id: I0ef946d7bdd971b931e509d2cb54e2c59649fe47
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166883
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-03-12 16:53:45,https://api.github.com/repos/golang/tools/git/commits/e65039ee4138194d75ebaa2da35887260d5e15b2,e65039ee4138194d75ebaa2da35887260d5e15b2,"internal/lsp: make sure completion items are never null

Change-Id: Ic6e0988319f8fb2c91b473ac2fa5480dc25dc0b7
Reviewed-on: https://go-review.googlesource.com/c/tools/+/167158
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Peter Weinberger <pjw@google.com>"
stamblerre,2019-03-06 21:33:47,https://api.github.com/repos/golang/tools/git/commits/7b79afddac434519a8ca775cc575fddb0d162aab,7b79afddac434519a8ca775cc575fddb0d162aab,"internal/lsp: add a source.Package interface

This change adds a Package interface to the source package, which allows
us to reduce the information cached per-package (we don't use any of the
unnecessary fields in a *go/packages.Package).

This change also adds an analysis cache for each package, which is used
to cache the results of analyses to avoid recomputation.

Change-Id: I56c6b5ed51126c27f46731c87ac4eeacc63cb81a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165750
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
pjweinb,2019-03-08 14:01:42,https://api.github.com/repos/golang/tools/git/commits/0bb0c0a6e84655f8baa6389e6dff9796ca1b26d2,0bb0c0a6e84655f8baa6389e6dff9796ca1b26d2,"tools/internal/lsp/protocol: generate LSP protocol types from source

The existing code implementing the jsonrpc LSP (language server protocol)
relies on hand-translated definitions for the needed Go data types.
Unfortunately Microsoft makes changes, not always backwards
compatibly. This code generates the Go data types directly from the
Typescript source.

Adapting gopls to the new data definitions will happen in a future CL.

Change-Id: I032c69a16b6f2614370765dcd6dbdb38e9f40ab6
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166277
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
pjweinb,2019-03-11 16:17:05,https://api.github.com/repos/golang/tools/git/commits/6a988fd03a8aebf2fba583e70b7c87e766e55cc2,6a988fd03a8aebf2fba583e70b7c87e766e55cc2,"tools/cmd/gopls: modify gopls to use automatcally generated types

Gopls presently uses hand-coded data types (in internal/lsp/protocol)
for communicating with LSP clients. Instead, modify it to use the
automatically generated file (internal/lsp/protocol/tsprotocol.go).

Replaced files have been put (temporarily) in a directory 'preserve'
so readers can compare the old data types with the new ones.

Change-Id: Idfa53a5783e2d6a47e03b20641dd76fbc2c32677
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166757
Run-TryBot: Peter Weinberger <pjw@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
josharian,2019-03-02 00:34:44,https://api.github.com/repos/golang/tools/git/commits/c0c382bb4e650d9c5e3cdf44525479505dcd0d6f,c0c382bb4e650d9c5e3cdf44525479505dcd0d6f,"go/ssa: fix import in comment

Change-Id: I55c5d407079afa0137f931c983ebef76ec194413
Reviewed-on: https://go-review.googlesource.com/c/tools/+/164643
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2019-03-08 18:22:06,https://api.github.com/repos/golang/tools/git/commits/5c2858a9cfe5880270ceee8da4391f3c44612b47,5c2858a9cfe5880270ceee8da4391f3c44612b47,"internal/lsp: adding utf16 handling to the span package

Change-Id: Icf8a531c4257e31178beea8f98b755648938fa7a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166777
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-03-11 18:40:28,https://api.github.com/repos/golang/tools/git/commits/11955173bddd0ab0afcd688e6dc9c1b7c28fb546,11955173bddd0ab0afcd688e6dc9c1b7c28fb546,"all: update golang.org/x/net dependency in go.mod

x/net now has a smaller set of transitive module dependencies, and
with this update, x/tools will also have a smaller set of transitive
module dependencies.

Change-Id: Idaa0bb72bf896bb8addc0004f17c3e97f8cc8b7a
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166877
Run-TryBot: Michael Matloob <matloob@golang.org>
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
ianthehat,2019-03-11 20:41:00,https://api.github.com/repos/golang/tools/git/commits/6eedde5c1db55f93bd1ff37e852bd25f6eeb56f8,6eedde5c1db55f93bd1ff37e852bd25f6eeb56f8,"internal/lsp: using a non line based applyEdits in tests

Change-Id: Ibbef0a74b53a95d0b08fae6e8ef24be8b0f78273
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166881
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-03-11 20:42:38,https://api.github.com/repos/golang/tools/git/commits/de4a0b36f11949b6391b0d731291a2755d827c24,de4a0b36f11949b6391b0d731291a2755d827c24,"internal/lsp: allow end of file byte offsets

Change-Id: I46d7e07a4603f19f615fed2e37e733573ea0fe08
Reviewed-on: https://go-review.googlesource.com/c/tools/+/166880
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-03-05 22:30:44,https://api.github.com/repos/golang/tools/git/commits/00c44ba9c14f88ffdd4fb5bfae57fe8dd6d6afb1,00c44ba9c14f88ffdd4fb5bfae57fe8dd6d6afb1,"internal/lsp: add cache for type information

This change adds an additional cache for type information, which here is
just a *packages.Package for each package. The metadata cache maintains
the import graph, which allows us to easily determine when a package X
(and therefore any other package that imports X) should be invalidated.

Additionally, rather than performing content changes as they happen, we
queue up content changes and apply them the next time that any type
information is requested.

Updates golang/go#30309

Change-Id: Iaf569f641f84ce69b0c0d5bdabbaa85635eeb8bf
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165438
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-02-12 18:13:49,https://api.github.com/repos/golang/tools/git/commits/b40df0fb21c33a42fff2bf0316d73f412f6b7b3e,b40df0fb21c33a42fff2bf0316d73f412f6b7b3e,"internal/span: adding a source location package to unify the pos conversions

This implements a standard way of describing source locations along with
printing and parsing of those locations and conversion to and from the token.Pos
forms.

Change-Id: Ibb3df0a282bc2effb0fa8bd3a51bb0d281b2ffb1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/163778
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
dmitshur,2019-03-05 21:57:57,https://api.github.com/repos/golang/tools/git/commits/6a08e3108db3c45254bbacc63c70c6addc62e6cb,6a08e3108db3c45254bbacc63c70c6addc62e6cb,"playground: use stdlib instead of appengine packages

With modern versions of App Engine, it's no longer needed to use the
google.golang.org/appengine/... packages.

Package log from standard library can be used instead of the
google.golang.org/appengine/log package. Packages net/http and
context from standard library can be used instead of
google.golang.org/appengine/urlfetch.

This simplifies the code and reduces the number of dependences.

Start using the golangorgenv package from previous commit to
make the decision of whether to enforce sharing restrictions,
rather than relying on the appengine build tag. The appengine
build tag is no longer set in App Engine Standard with Go 1.11+
runtime. An alternative solution would be detect App Engine by
doing something like:

	// GAE_ENV environment variable is set to ""standard"" in App Engine environment, Go 1.11 runtime.
	// See https://cloud.google.com/appengine/docs/standard/go111/runtime#environment_variables.
	var onAppengine = os.Getenv(""GAE_ENV"") == ""standard""

But we choose to upgrade to explicit app-scoped environment variable
configuration as part of this change. It provides better security
properties, and the value of adding an intermediate transitional step
is not high enough to justify doing it.

When getting the value of ""X-AppEngine-Country"" header, use its
canonical format ""X-Appengine-Country"" to avoid an allocation.
This does not change behavior.

Run go mod tidy (using Go 1.12).

Updates golang/go#29981
Updates golang/go#30486

Change-Id: I82a59e0f28623e06762b7ebdf3930b5ee243acda
Reviewed-on: https://go-review.googlesource.com/c/tools/+/160837
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2019-03-05 21:56:02,https://api.github.com/repos/golang/tools/git/commits/bd17c084dfc55e91b0bb50cc3d33bd5e31e498c9,bd17c084dfc55e91b0bb50cc3d33bd5e31e498c9,"godoc/env: replace with golangorgenv

This change replaces the env package with a new golangorgenv package.

The previous env package existed primarily to configure the godoc
instance that was running golang.org. By now, the golang.org website
has been factored out to x/website, which has its own env package,
but ends up still using this env package indirectly via x/tools/godoc.

The goal of this change is to make env available for other services
that run on subdomains of golang.org, so they can continue to safely
rely on the x/tools/playground, which will be modified in the next
commit to also use the new golangorgenv.

The golangorgenv package replaces the IsProd function with a more
specific one. Start using it in packages x/tools/{,cmd}/godoc. Also,
re-arrange the order of checks to give the host suffix check higher
priority than the environment variable check. This way, if the
environment variable isn't set, the host suffix check gets a chance
to run.

When getting the value of ""X-AppEngine-Country"" header, use its
canonical format ""X-Appengine-Country"" to avoid an allocation.
This does not change behavior.

Updates golang/go#30486

Change-Id: I97b47211a45ca0351f31fcb4fa6d408a4b0c4c7c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165459
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2019-03-04 23:01:51,https://api.github.com/repos/golang/tools/git/commits/69e0dcfa1121488c38c3c8f9624f7de769003896,69e0dcfa1121488c38c3c8f9624f7de769003896,"internal/lsp: cache package metadata to minimize calls to packages.Load

Instead of calling packages.Load on every character change, we reparse
the import declarations of the file and determine if they have
changed. We also introduce a metadata cache that caches the import
graph. This is used in type-checking and only updated on calls to
packages.Load.

Change-Id: I7cb384aba77ef3c1565d3b0db58e6c754d5fed15
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165137
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
eliasnaur,2019-03-06 09:28:10,https://api.github.com/repos/golang/tools/git/commits/ab489119c542e8e63aed6dd38f6001593c17f70e,ab489119c542e8e63aed6dd38f6001593c17f70e,"cmd/godoc,cmd/gorename,refactor/rename: skip tests on GOOS=android

Change-Id: I7a493ba4c41dddb3049a8e62198d87749fb72f62
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165719
Run-TryBot: Elias Naur <mail@eliasnaur.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
eliasnaur,2019-03-06 09:56:26,https://api.github.com/repos/golang/tools/git/commits/1f7a77873d766c3128699c852302cb14a5270e3e,1f7a77873d766c3128699c852302cb14a5270e3e,"go/packages: skip tests for GOOS=android

Change-Id: I93dacb676e008682008351962cdafec2d3734bac
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165718
Run-TryBot: Elias Naur <mail@eliasnaur.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2019-03-04 22:45:01,https://api.github.com/repos/golang/tools/git/commits/f8c04913dfb7b2339a756441456bdbe0af6eb508,f8c04913dfb7b2339a756441456bdbe0af6eb508,"internal/lsp: refactor type-checking code

Separate out functions to make the code more readable.

Change-Id: I4c48a8343ba5666de375c43499420bdf244aafd1
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165022
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-03-04 22:50:16,https://api.github.com/repos/golang/tools/git/commits/ac1696789ee11b6bcad6ee4b561d323885a4971a,ac1696789ee11b6bcad6ee4b561d323885a4971a,"internal/lsp: temporarily disable incremental changes

It is difficult to debug gopls in combination with the incremental
changes feature. Because gopls is slow (caching CL is in progress), it
seems like the incremental changes can sometimes produce strange
behavior. Disable it for now until we can prioritize work on it.

Change-Id: I931aa39756f198d1af21dca359acc83ca3392c4c
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165023
Reviewed-by: Michael Matloob <matloob@golang.org>"
bradfitz,2019-03-04 23:42:30,https://api.github.com/repos/golang/tools/git/commits/fd53dfa0871c2be5ba8b68bc32406580684743f2,fd53dfa0871c2be5ba8b68bc32406580684743f2,"Revert ""cmd/vet: add deepequalerrors""

This reverts CL 164837 (0f64db555a9c58aea153f7c094f19673926fb0b3)

Reason for revert: breaks vetall against tip (and thus go tip's trybots)

Change-Id: I5109691481f44a9807675a6139f1619a03b0c58d
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165039
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
stamblerre,2019-03-04 22:01:39,https://api.github.com/repos/golang/tools/git/commits/d56157ae751d43fa5668eee3f2bfe4d8087cf660,d56157ae751d43fa5668eee3f2bfe4d8087cf660,"internal/lsp: remove handling for circular imports

Also, separate type-checking logic into its own file.
go/packages returns import cycle errors anyway, so we just return them instead.

Change-Id: I1f524cdf81e1f9655c1b0afd50dd2aeaa167bb2f
Reviewed-on: https://go-review.googlesource.com/c/tools/+/165021
Reviewed-by: Michael Matloob <matloob@golang.org>"
jba,2019-03-01 17:16:44,https://api.github.com/repos/golang/tools/git/commits/0f64db555a9c58aea153f7c094f19673926fb0b3,0f64db555a9c58aea153f7c094f19673926fb0b3,"cmd/vet: add deepequalerrors

Add the deepequalerrors analyzer to the vet command.

I don't really understand the comment in the file. I do want the analyzer to run
when the user explicitly calls go vet, but not automatically via go test.
I'm not sure this CL captures that.

Change-Id: Ie78ef110c7828ccbcc86735442c81dbb516dcf18
Reviewed-on: https://go-review.googlesource.com/c/tools/+/164837
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mvdan,2019-02-26 12:40:04,https://api.github.com/repos/golang/tools/git/commits/589c23e65e65055d47b9ad4a99723bc389136265,589c23e65e65055d47b9ad4a99723bc389136265,"go/analysis/passes/printf: fix big.Int false positive

It's possible to use a type which implements fmt.Formatter without
importing fmt directly, if the type is imported from another package
such as math/big.

On top of that, it's possible to use printf-like functions without
importing fmt directly, such as using testing.T.Logf.

These two scenarios combined can lead to the printf check not finding
the fmt.Formatter type, since it's not a direct dependency of the root
package.

fmt must still be in the import graph somewhere, so we could search for
it via types.Package.Imports. However, at that point it's simpler to
just look for the Format method manually via go/types.

Fixes #30399.

Change-Id: Id78454bb6a51b3c5e1bcb1984a7fbfb4a29a5be0
Reviewed-on: https://go-review.googlesource.com/c/163817
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2019-02-27 22:52:14,https://api.github.com/repos/golang/tools/git/commits/4a0f391d88ad54bda39499b6f9961889b884309a,4a0f391d88ad54bda39499b6f9961889b884309a,"go/packages: make TestLoadImportsGraph more stable.

Our tests depend on the dependency graphs of the errors which
is not guaranteed to have a stable dependency graph across go versions.
Especially because we're planning on making changes to the errors package
in Go 1.13.
Instead, use the container/list package, which is completely useless
and won't be changed (unless/until Go gets generics).

Fixes golang/go#30448

Change-Id: Ia5f4853d1da336dde2f025b1dd5e1d6223571dd6
Reviewed-on: https://go-review.googlesource.com/c/164298
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
jba,2019-02-15 22:56:24,https://api.github.com/repos/golang/tools/git/commits/ac7c11b94d3fbf818005f9da21e0f48814ee47de,ac7c11b94d3fbf818005f9da21e0f48814ee47de,"go/analysis/passes/deepequalerrors: check for reflect.DeepEqual on errors

The new error value proposal (https://golang.org/design/29934-error-values)
adds stack frame information to the errors produced by errors.New
and fmt.Errorf. This will break any test that compares errors
with reflect.DeepEqual.

This vet check finds any call to reflect.DeepEqual both of whose
arguments are of type error, or are of a type that can store
of value of type error.

Change-Id: I55939339344ed5b4f61557a7296734a710211918
Reviewed-on: https://go-review.googlesource.com/c/162939
Reviewed-by: Damien Neil <dneil@google.com>"
stamblerre,2019-02-27 23:08:04,https://api.github.com/repos/golang/tools/git/commits/f0a709d59f0fd2d705cf7767149e23a7a99f585b,f0a709d59f0fd2d705cf7767149e23a7a99f585b,"internal/lsp: set severity levels for compiler errors and vet checks

This change adds severity levels to source.Diagnostics, allowing us to
pass this information along to the LSP. This allows compiler errors to
show up in red, while vet results show up in green.

Change-Id: I2bc0b27ed6629f987c05affe00fdbe4b9bfb3b3e
Reviewed-on: https://go-review.googlesource.com/c/164299
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
josharian,2019-02-24 00:55:23,https://api.github.com/repos/golang/tools/git/commits/8dcc6e70cdefe9a82236b6e195e4f4e2108fcb9f,8dcc6e70cdefe9a82236b6e195e4f4e2108fcb9f,"go/packages: expand CompiledGoFiles workaround

Updates golang/go#28749

Change-Id: I76eb264f61b511fec7e05cef1bdd35e1c7fd603b
Reviewed-on: https://go-review.googlesource.com/c/163597
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
heschik,2019-02-22 20:48:23,https://api.github.com/repos/golang/tools/git/commits/f727befe758c04ce68d52abc6e69ad111e2c6797,f727befe758c04ce68d52abc6e69ad111e2c6797,"go/packages: improve debug logging

Address a few irritating glitches in the go list debug logging.
- Print a fully runnable command line, with args like ""a"" ""b"" ""c""
instead of [a b c].
- Include stderr in the debug logs for cases where the command fails.
- Print the correct PWD environment var from cmd instead of cfg.

Change-Id: I58e77b370baf8378a21377b81ee2ba5d21a557ab
Reviewed-on: https://go-review.googlesource.com/c/163497
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
doxxx,2019-02-23 03:21:59,https://api.github.com/repos/golang/tools/git/commits/2dc4ef2775b8122dd5afe2c18fd6f775e87f89e5,2dc4ef2775b8122dd5afe2c18fd6f775e87f89e5,"cmd/guru: fix guessImportPath for Windows

Import paths in Go use forward slashes, not the operating system's path separator.

Fixes golang/go#24699.
Fixes golang/go#23318.

Change-Id: I190224f6b7236e8ee19893f3589dd9686cbf116a
GitHub-Last-Rev: 751b29ca5f2e52ee1124c4baca6e45eecf4a3052
GitHub-Pull-Request: golang/tools#56
Reviewed-on: https://go-review.googlesource.com/c/151057
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-02-25 22:02:13,https://api.github.com/repos/golang/tools/git/commits/69f75a3b0640e0fb1a767eaf0ce11eded956a88c,69f75a3b0640e0fb1a767eaf0ce11eded956a88c,"cmd/golsp: remove golsp binary, since we've moved to gopls

We left the golsp binary for a few weeks after migrating to gopls.
Remove it now.

Change-Id: Iad44a3c9cf1427be6e2d81cc7a8e9fc60ef6ee50
Reviewed-on: https://go-review.googlesource.com/c/163779
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-02-21 17:51:16,https://api.github.com/repos/golang/tools/git/commits/83362c3779f5f48611068d488a03ea7bbaddc81e,83362c3779f5f48611068d488a03ea7bbaddc81e,"go/gcexportdata: use a constant from a frozen package for testing

Switch from test to use net/rpc instead of text/scanner, since net/rpc
is a frozen package that is guaranteed not to change.

Change-Id: I6ece679bc16737fa9a75ac896f9eb2190317a498
Reviewed-on: https://go-review.googlesource.com/c/163204
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
mattn,2019-02-21 00:26:10,https://api.github.com/repos/golang/tools/git/commits/9c8c5aeafa05ca9c7edb0f32e24955a9236a61ed,9c8c5aeafa05ca9c7edb0f32e24955a9236a61ed,"internal/lsp/cache: skip duplicate import of packages

Change-Id: I33e06b53269cef7aa8962dd41ea74ce25e82fc54
Reviewed-on: https://go-review.googlesource.com/c/163257
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mattn,2019-02-18 06:00:10,https://api.github.com/repos/golang/tools/git/commits/a24c58a2098b47045f204f5b90f13c155897ffd2,a24c58a2098b47045f204f5b90f13c155897ffd2,"internal/lsp: implement incremental updates to document

gopls return Incremental for TextDocumentSyncKind.

Change-Id: I7b302a540a4d2ef9eaa079cea5155859febb9a95
Reviewed-on: https://go-review.googlesource.com/c/162921
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-02-20 20:14:33,https://api.github.com/repos/golang/tools/git/commits/a754db16a40a9d94359b6600b825419c0ca6f986,a754db16a40a9d94359b6600b825419c0ca6f986,"internal/lsp: absolutize paths when converting filenames to URIs

Fixes golang/go#30280

Change-Id: I95e72c8d952ce7d64114772e9ef3df6568ae5dd4
Reviewed-on: https://go-review.googlesource.com/c/163160
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-02-20 20:36:48,https://api.github.com/repos/golang/tools/git/commits/8bdde6d5f2ff06efe2259964b2d2065945d8516c,8bdde6d5f2ff06efe2259964b2d2065945d8516c,"internal/lsp: create new cache for each analysis

Because diagnostics computations happen in parallel, we were getting
concurrent map writes by keeping one cache.

Change-Id: Ifa5adffe14c509168c9f8c5cb012f3fcd3a32441
Reviewed-on: https://go-review.googlesource.com/c/163161
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-02-20 22:23:36,https://api.github.com/repos/golang/tools/git/commits/191e9ce6ac8f89353b648c1a5142589d496d774d,191e9ce6ac8f89353b648c1a5142589d496d774d,"go/gcexportdata: switch constant used in tests

text/scanner was used in tests because it was unlikely to change between
releases, but of course, a line number changed, breaking the tests. Use
a different constant for testing that remained on the same line.

Change-Id: I41425728e0918ffe388b3c8df9fd71e8371eb38e
Reviewed-on: https://go-review.googlesource.com/c/163197
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Julie Qiu <julie@golang.org>"
dmitshur,2019-02-13 19:14:21,https://api.github.com/repos/golang/tools/git/commits/97f80cd5504df5e234a0ce7ba9a0f412468307fb,97f80cd5504df5e234a0ce7ba9a0f412468307fb,"godoc/dl, godoc/proxy, godoc/short, internal/memcache: delete

These packages existed only to power cmd/godoc for the purpose of
serving the golang.org website. That functionality has moved into
x/website as part of golang/go#29206. x/website has become the
canonical source of golang.org in CL 162157, the golang.org-serving
code was removed from cmd/godoc in CL 162400, and these packages can
be deleted too now.

This removes the last dependency on the cloud.google.com/go module,
which results in a significant reduction of the number of indirect
dependencies in x/tools (this is due to issue golang/go#29935, which
affects the current version of the cloud.google.com/go module).

Run go mod tidy (using Go 1.12 RC 1).

Updates golang/go#29206
Updates golang/go#29981

Change-Id: If07e3ccae8538b3ebd51af64b6af5be5463f4906
Reviewed-on: https://go-review.googlesource.com/c/162401
Reviewed-by: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Channing Kimble-Brown <channing@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
dmitshur,2019-02-04 22:49:46,https://api.github.com/repos/golang/tools/git/commits/b4f3f039864db86a9946e26f9bae0e61e36f6759,b4f3f039864db86a9946e26f9bae0e61e36f6759,"cmd/godoc: remove golang.org serving code

The code to serve the golang.org website has been moved to
the golang.org/x/website sub-repository. x/website has become
the canonical source of the golang.org website as of CL 162157,
and so this code can be removed from here now.

This has the benefit of removing some external dependencies
that were only used by the website in production mode, and
in turn enabling x/tools to be a smaller tools-related module.

In future changes, the golang.org/x/tools/cmd/godoc command
will be reduced in scope to be a tool for serving Go package
documentation only, not the rest of the golang.org website.

Run go mod tidy (using Go 1.12 RC 1).

Updates golang/go#29206
Updates golang/go#29981

Change-Id: I61fd25627d0506901b04688dea8d8c9da9fe8f04
Reviewed-on: https://go-review.googlesource.com/c/162400
Reviewed-by: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Channing Kimble-Brown <channing@golang.org>
Run-TryBot: Bryan C. Mills <bcmills@google.com>"
stamblerre,2019-02-15 18:21:27,https://api.github.com/repos/golang/tools/git/commits/58344e540362b864ba5079e052f28ccf7f947dca,58344e540362b864ba5079e052f28ccf7f947dca,"internal/lsp: use cached AST when parsing files, if available

Change-Id: Ie5c9f77d973b8f9d8f7732d62b54e0a99e6b4659
Reviewed-on: https://go-review.googlesource.com/c/162890
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-02-20 17:20:02,https://api.github.com/repos/golang/tools/git/commits/f7b6a898a46f76ee87102157912eb3034c32adaa,f7b6a898a46f76ee87102157912eb3034c32adaa,"internal/lsp: remove unused range parameter from computeTextEdits

Change-Id: I3e9853b2a83d0328d10bcb75fc9f1f1cc996f14e
Reviewed-on: https://go-review.googlesource.com/c/163157
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-02-15 19:32:38,https://api.github.com/repos/golang/tools/git/commits/550322b34f0c1a077f457cc62ee5ccd634948797,550322b34f0c1a077f457cc62ee5ccd634948797,"internal/lsp: return an updated view after setting a file's contents

Change-Id: I71cfa1463c3f3ec3b80faf9dd57c81d6fa75c466
Reviewed-on: https://go-review.googlesource.com/c/162892
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
bcmills,2019-02-20 14:37:26,https://api.github.com/repos/golang/tools/git/commits/e8c45e0433280218fb679d7bbad0f80fc9677353,e8c45e0433280218fb679d7bbad0f80fc9677353,"go/analysis: allow overriding V flag without code patches

In CL 149609, a file was added to
src/cmd/vendor/golang.org/x/tools/go/analysis/internal/analysisflags/patch.go
to override the behavior of the V flag for cmd/vet.

That modification causes the behavior of cmd/vet to change when a
pristine copy of x/tools is vendored in, and module-mode vendoring
will only support pristine copies (see golang/go#30240).

Instead, allow cmd/vet to override the V flag by defining its own V
flag before it invokes unitchecker.Main.

Tested manually (by patching into cmd/vendor).

Updates golang/go#30240
Updates golang/go#30241
Updates golang/go#26924
Updates golang/go#30228

Change-Id: I10e4523e1f4ede94fbfc745012dadeefef48e927
Reviewed-on: https://go-review.googlesource.com/c/162989
Run-TryBot: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dmitshur,2019-02-18 18:49:49,https://api.github.com/repos/golang/tools/git/commits/9394956cfdc50651347ab69dbde09af8a8e24776,9394956cfdc50651347ab69dbde09af8a8e24776,"godoc: don't clear user-set page mode for package builtin

When rendering the documentation of the fake package builtin,
there are two PageInfoMode flags that always get set,
regardless of what the user has provided via the ?m= query parameter.
They are:

• NoFiltering
• NoTypeAssoc

This is being done to make the documention of this special package more
usable and helpful (see golang/go#6645).

This change modifies the way those flags are set, so that any additional
flags the user may have set are no longer cleared. This makes it possible,
for example, to use ?m=src to view the source, as it is for all other
packages.

Also elaborate more about this behavior in the comments.

Fixes golang/go#30300
Updates golang/go#6645

Change-Id: I77728bd2683191b97d8f58f19092f2833dfc474c
Reviewed-on: https://go-review.googlesource.com/c/162983
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2019-02-18 18:44:53,https://api.github.com/repos/golang/tools/git/commits/d38dac729dc5e4180e0e029a1b0bcf7b0a1e84fd,d38dac729dc5e4180e0e029a1b0bcf7b0a1e84fd,"godoc: remove unused CLI-only identifiers

This is a followup to CL 141397, which removed CLI support from the
godoc command for golang/go#25443. This change removes a few more
CLI-related fields from Presentation type, which are now unused.

It also removes the unused and no longer documented (since CL 143077)
NoHTML PageInfoMode.

Updates golang/go#25443

Change-Id: Ia4147515052889570e2f050e3c2394689d3c5d6c
Reviewed-on: https://go-review.googlesource.com/c/162982
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Agniva De Sarker <agniva.quicksilver@gmail.com>"
rhysh,2019-02-15 18:30:09,https://api.github.com/repos/golang/tools/git/commits/f000d56b39dc0a2ce627c268f181ee36527f2378,f000d56b39dc0a2ce627c268f181ee36527f2378,"cmd/godoc: fix -url flag, add tests

This change adds a small number of integration tests for the godoc
command's -url flag, confirming that the behavior matches the local http
server tests in those cases. It fixes three bugs which prevent the -url
flag from working currently.

Fixes golang/go#30259
Fixes golang/go#30260
Fixes golang/go#30261

Change-Id: I0ca1fe81f9f186d0ca02b31674cc8654af434e92
Reviewed-on: https://go-review.googlesource.com/c/162907
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
dmitshur,2019-02-18 19:29:27,https://api.github.com/repos/golang/tools/git/commits/0a7d439b5fa8ee7a8f32a346b902355d03f84897,0a7d439b5fa8ee7a8f32a346b902355d03f84897,"cmd/godoc: re-add documentation for flat presentation mode

The documentation of the ""flat"" presentation mode was removed
inadvertently as part of post-CLI-removal documentation cleanup
in CL 143077. The FlatDir flag still exists and is supported.
This change re-adds it to cmd/godoc documentation.

Also fix a typo in the ""src"" presentation mode description.

Updates golang/go#25443

Change-Id: If4705d70bc5eafee92cdfd52409aca4606a0efd7
Reviewed-on: https://go-review.googlesource.com/c/162984
Reviewed-by: Agniva De Sarker <agniva.quicksilver@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2019-02-13 16:43:12,https://api.github.com/repos/golang/tools/git/commits/8dcb7bc8c7fe0a895995c76c721cef79419ac98a,8dcb7bc8c7fe0a895995c76c721cef79419ac98a,"all: add a go.mod file

This change adds a go.mod and go.sum file to the tools repo, following the
requirements stated in bcmills's comment here:
https://golang.org/issue/28136#issuecomment-462971974. It's
important to note that we will not be
adding versions to the repo for now.

The change was generated by running ""go mod init"" and ""go mod tidy"" using Go
1.11.5 in the top-level directory of the tools repository.

The tools repo has some extraneous dependencies, but they will be removed soon
(we expect a couple of weeks). At that point, our go.sum should shrink to a
small handful of entries.

Updates golang/go#28136

Change-Id: Ie7802d8d70094a855b112ad0507a47036cb81ba0
Reviewed-on: https://go-review.googlesource.com/c/162397
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
stamblerre,2019-02-14 03:30:25,https://api.github.com/repos/golang/tools/git/commits/78f9822548c13e2c41cc8039d1492a111240db07,78f9822548c13e2c41cc8039d1492a111240db07,"internal/lsp: fix nil pointer exception on vendored packages

Make sure to use the import path in the packages cache, rather than the
package path. Also, prefetch dependencies.

Change-Id: I0de3942346aa6755dbe904f973aca51d26ba0306
Reviewed-on: https://go-review.googlesource.com/c/162577
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-02-14 19:13:34,https://api.github.com/repos/golang/tools/git/commits/12f59dd68bb9d5f5731a281b455695a12e43730b,12f59dd68bb9d5f5731a281b455695a12e43730b,"refactor/importgraph: get test to pass when run in modules mode

Use packagestest to copy the code in the test directory to a GOPATH
in a temporary directory, so the test doesn't depend on accessing
the user's GOPATH.

Change-Id: I5895ad97ab478625048fdcd330ef516df9c428d3
Reviewed-on: https://go-review.googlesource.com/c/162777
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-02-14 18:39:17,https://api.github.com/repos/golang/tools/git/commits/4ea155ddbddeeb05c556df189a381646b87bcd8a,4ea155ddbddeeb05c556df189a381646b87bcd8a,"go/buildutil: get tests to pass when run from a module

These tests tried to access the user's GOPATH, which can't work if you're
running from a module! So use packagestest to set up a fake GOPATH.

Also remove a TODO that's never going to be done because we won't
be making more investments in go/build.

Change-Id: I379c74345ace91e6c4282a42ff62106bf325d0e0
Reviewed-on: https://go-review.googlesource.com/c/162757
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mvdan,2019-02-14 16:06:32,https://api.github.com/repos/golang/tools/git/commits/c161412db0d0912a7438a865c39bdd7edcd20ede,c161412db0d0912a7438a865c39bdd7edcd20ede,"go/analysis/singlechecker: use Stderr in flag.Usage

It was using a mix of stdout and stderr. Most users won't notice, but
it's inconsistent for no apparent reason. In particular, I noticed as
some of my tool execution tests started failing.

Change-Id: I9afe5f5bed0a575d3ba20e8dc1cc593c35565cf9
Reviewed-on: https://go-review.googlesource.com/c/162717
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2019-02-13 21:08:29,https://api.github.com/repos/golang/tools/git/commits/508f945e1a9bd8b5e3a9444bb2cdd13d0896132e,508f945e1a9bd8b5e3a9444bb2cdd13d0896132e,"internal/lsp: change File.Read to a File.GetContent accessor

Like the previous change to the FIle interface, we treat Read as if it were an
accessor, we remember the content part but not the error part, and we may fill
it in asynchronously, so this change makes it explicit.
In the future we should probably trap the error in the read and push it back
through another channel though, it will be the root cause of later errors.

Change-Id: I3d374dd557178b4e8c5544813cd77f5c0faefe5b
Reviewed-on: https://go-review.googlesource.com/c/162403
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-02-13 21:57:09,https://api.github.com/repos/golang/tools/git/commits/88f95592de8ca4ac2a2b84fbed1698703773784c,88f95592de8ca4ac2a2b84fbed1698703773784c,"go/analysis/unitchecker: rewrite test in terms of packagestest

This means the test excercise modules and gopath workspaces. That will
allow this test to run once tools becomes a module...

The test still doesn't pass under Windows.

Change-Id: Ic5e46b9b92c5aac909a6ceb56f30851832fc09ac
Reviewed-on: https://go-review.googlesource.com/c/162404
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-02-13 20:36:05,https://api.github.com/repos/golang/tools/git/commits/f3aee3358bea85c863521ece4a3fe8365836bd7e,f3aee3358bea85c863521ece4a3fe8365836bd7e,"internal/lsp: allow ExecuteCommandParams to be nil

The ExecuteCommandParams field is optional, so it can be set to nil.

Change-Id: If440257e6b64ce5189b0a4b39a6ed7fc867da5af
Reviewed-on: https://go-review.googlesource.com/c/162402
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2019-02-13 18:23:28,https://api.github.com/repos/golang/tools/git/commits/69a2705782a05011d654f89087fdc771b4c6f776,69a2705782a05011d654f89087fdc771b4c6f776,"internal/lsp: remove error return values from interface ""field"" accessors

we don't really use them, only generate them in cases where the failure is way more fundamental, and then also fail
to remember them for the next call to the same accessor. Better to not have them.

Change-Id: I0e8abeda688f5cc2a932ed95a80d89225c399f93
Reviewed-on: https://go-review.googlesource.com/c/162399
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-02-13 18:03:16,https://api.github.com/repos/golang/tools/git/commits/740235f6c0d8f7dfb8e225ffed588731060a3617,740235f6c0d8f7dfb8e225ffed588731060a3617,"internal/lsp: add back check that a package was found for a given file

Added this check in golang.org/cl/161077 and unintentionally removed it in
golang.org/cl/161497.

Change-Id: I66bd2b616f4b41c25f134f6e9457c97bbcd3f72b
Reviewed-on: https://go-review.googlesource.com/c/162398
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2019-02-12 18:16:08,https://api.github.com/repos/golang/tools/git/commits/dbb4d4be5353aa01a3652094d511f7fe53952a7f,dbb4d4be5353aa01a3652094d511f7fe53952a7f,"lsp/internal: fix incorrectly formatted file

Change-Id: Ibef9c7d5ce0abfa26ba98744c26b54d843227c23
Reviewed-on: https://go-review.googlesource.com/c/162077
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
mpvl,2019-02-12 19:22:36,https://api.github.com/repos/golang/tools/git/commits/6bedcd10978a1d1183f0f20ed24adb2451e3bf89,6bedcd10978a1d1183f0f20ed24adb2451e3bf89,"go/analysis/passes/printf: add support for %w

Change-Id: I91bd2a1f3f65f95258fa5a5b91aca51ff0885bad
Reviewed-on: https://go-review.googlesource.com/c/162058
Run-TryBot: Marcel van Lohuizen <mpvl@golang.org>
Reviewed-by: Damien Neil <dneil@google.com>"
stamblerre,2019-02-12 18:51:16,https://api.github.com/repos/golang/tools/git/commits/0e66cc6fab8bce4b5783ae1fc63b303910fb8b08,0e66cc6fab8bce4b5783ae1fc63b303910fb8b08,"internal/lsp/diff: fix bug that adds extra line to files on format

Small changes to handle the last line in the diff library, LSP tests,
and diff to text edits conversion.

Fixes golang/go#30137

Change-Id: Iff0e53a04c2dabf6f54eb7c738b4c0837f16efba
Reviewed-on: https://go-review.googlesource.com/c/162217
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-02-08 22:55:06,https://api.github.com/repos/golang/tools/git/commits/a21eef959bac60a9bd31897f391020fd5bcb2351,a21eef959bac60a9bd31897f391020fd5bcb2351,"internal/lsp: use parallel parse files function

This change adds a copy of the parseFiles function from go/packages for
file parsing. Also fix crash caused by lack of TypeSizes from
go/packages.Load when using LoadImports mode.

Change-Id: Ie8c3c653679ab81da45905c6839de7e63966d84c
Reviewed-on: https://go-review.googlesource.com/c/161670
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-02-12 19:23:47,https://api.github.com/repos/golang/tools/git/commits/f7e1b50d2251eb957c5454d558352956c9a8feed,f7e1b50d2251eb957c5454d558352956c9a8feed,"internal/lsp/cmd: set Serve.app when running with remote

Change-Id: Idf299a0b28b77a3372db20ccb0f80512422e601a
Reviewed-on: https://go-review.googlesource.com/c/162138
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
dmitshur,2019-02-08 23:53:25,https://api.github.com/repos/golang/tools/git/commits/49fb246514ccd468da904b9488c1c7dd542d9615,49fb246514ccd468da904b9488c1c7dd542d9615,"refactor/rename: re-enable TestMoves on Windows

This CL is based on the work and discussion in CL 24969 and CL 32392.
It simplifies the code further and makes trybots pass on Windows.

Also update the documentation and implementation of the subpackages
function slightly to make it more clear what it's doing.

Background

CL 24943 has made progress on fixing rename.Move behavior on Windows,
but hadn't re-enabled TestMoves at the time. CL 24969 attempted to do
so, but the tests weren't passing and it didn't get merged at the time.

Since that time, CL 65672 has fixed a bug in the subpackages function.
As a result, it's possible to simplify code in Move now.

The subpackages function returns a set of packages in the given srcDir
whose import path equals to root or has ""root/"" as the prefix.
After CL 65672, it correctly filters out ones that are not true
sub-packages of root. That's why it's not necessary to try to append
a trailing separator when doing the string replacement in Move now.

Given subpackages reports their import paths (always '/'-separated),
not filesystem paths, it's not necessary to use filepath.ToSlash either.

Updates golang/go#16384

Change-Id: Ia808fbaaeffe44ea1e51d7cc3ed9499bc2b438cf
Reviewed-on: https://go-review.googlesource.com/c/161777
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-02-06 23:47:00,https://api.github.com/repos/golang/tools/git/commits/340a1cdb50704a56147854e4ea4ba19f716aff00,340a1cdb50704a56147854e4ea4ba19f716aff00,"internal/lsp: copy fact support from go/analysis/internal/checker.go

This changes the analysis code from that which was in unitchecker.go
to that in checker.go, so we can run actions that get facts for dependencies
concurrently.

Adds the rest of the traditional vet suite to the LSP.

TODO(matloob): test that facts are actually propagated between packages

Change-Id: I946082159777943af81bcf10e503fecc99da521e
Reviewed-on: https://go-review.googlesource.com/c/161671
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-02-12 19:22:52,https://api.github.com/repos/golang/tools/git/commits/05d253c83ec748b9566f592126e37774f741a2eb,05d253c83ec748b9566f592126e37774f741a2eb,"go/analysis/analysistest: change error message checked in expectation

text/scanner now uses the word ""invalid"" instead of ""illegal"".
See golang.org/cl/161199

Change-Id: I7db0ea2628760cba5c993bdec6e15e76b20b0e06
Reviewed-on: https://go-review.googlesource.com/c/162137
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2019-02-07 22:05:20,https://api.github.com/repos/golang/tools/git/commits/44bee7e801e4a70b5fc9a91ff23830ab4df55d5e,44bee7e801e4a70b5fc9a91ff23830ab4df55d5e,"internal/lsp: changing server noun to serve verb

Also adding in --remote support and using it to implement the equivalent
functionality of the external forward command
Also adding in --listen as a replacement for --port as it is more flexible,
specifically it allows localhost:port which
is helpful in environments where opening remotely accesible ports is
problematic.

Change-Id: I5de1cea7dd6f1ee46e7423f3be2a4caca6f040b2
Reviewed-on: https://go-review.googlesource.com/c/161658
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2019-02-11 18:15:26,https://api.github.com/repos/golang/tools/git/commits/657755b003d86beb7f1e59808a410123ce89b15b,657755b003d86beb7f1e59808a410123ce89b15b,"internal/lsp: fix crash caused by lack of TypeSizes from go/packages.Load

Get dummy sizes values until we can get go/packages to forward the correct
values.

Change-Id: Ie31333e9ed7c57d02e1447097567fa894ea9de7d
Reviewed-on: https://go-review.googlesource.com/c/161937
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-02-06 23:47:00,https://api.github.com/repos/golang/tools/git/commits/3744606dbb67b99c60d3f11cb10bd3f9e6dad472,3744606dbb67b99c60d3f11cb10bd3f9e6dad472,"internal/lsp: type-check packages from source

This change moves gopls from type-checking packages using the
go/packages API to type-checking from source. This is the first step in
adding caching to gopls.

Change-Id: I2a7dcfd8c9c0bfc6c35c86eadcdc6f9ce53d9be7
Reviewed-on: https://go-review.googlesource.com/c/161497
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-02-07 22:27:10,https://api.github.com/repos/golang/tools/git/commits/a3f91d6be4f3f5e50038dad5daba2c8e042146c3,a3f91d6be4f3f5e50038dad5daba2c8e042146c3,"internal/lsp: add support for analyzers with dependencies on other analyzers

Steal alan's parallel analysis-graph-running code from multichecker.
Facts are still not supported.

Change-Id: I22f83375d7a314b49d4f458d6dd40c33febc795b
Reviewed-on: https://go-review.googlesource.com/c/161659
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-02-06 22:04:16,https://api.github.com/repos/golang/tools/git/commits/44bcb96178d39510d2bb8a61ef1c08b85bb24a45,44bcb96178d39510d2bb8a61ef1c08b85bb24a45,"go/packages: fix broken tests to handle changes to packagestest

golang.org/cl/161317 set Tests to true in the packagestest go/packages
Config. Handle this in the go/packages tests.

Fixes golang/go#30115

Change-Id: I6b4c0ca3dc2d73855239f3e7122e29da6ce81657
Reviewed-on: https://go-review.googlesource.com/c/161457
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2019-02-06 16:24:10,https://api.github.com/repos/golang/tools/git/commits/a8576e2603b2bc62c97e830174b002dba60d6a0c,a8576e2603b2bc62c97e830174b002dba60d6a0c,"internal/lsp: connect basic analysis functionality

This starts hooking up the analysis framework into the LSP. It runs
the Tests analysis (which I think might be the only one that doesn't
need facts or results) and reports its diagnostics if there are
no parse or typecheck failures.

Next step: figure out how to pass through results.

Change-Id: I21702d1cf5d54da399df54437f556b9351caa864
Reviewed-on: https://go-review.googlesource.com/c/161358
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
mattn,2019-01-31 11:02:48,https://api.github.com/repos/golang/tools/git/commits/4892ae6946ab8a542e4fe1bf1376eb714b9e7aec,4892ae6946ab8a542e4fe1bf1376eb714b9e7aec,"go/packages: use strings.EqualFold in sameFile to handle case-insensitive file systems

Name of file or URI must be checked ignorecase on Windows.

Change-Id: I61507b0aa95389c5e1f421f0702ba6ad17b79177
Reviewed-on: https://go-review.googlesource.com/c/160597
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-02-05 22:27:35,https://api.github.com/repos/golang/tools/git/commits/40960b6deb8ecdb8bcde6a8f44722731939b8ddc,40960b6deb8ecdb8bcde6a8f44722731939b8ddc,"internal/lsp/cmd: fix a nil pointer and some minor clean-up

This change fixes a nil error, in addition to cleaning up a spacing
error and a typo. It also fixes the golint errors in internal/lsp/cmd.

Updates golang/go#30091

Change-Id: I24867bb878fda4e341f87d31bbec701a3814a341
Reviewed-on: https://go-review.googlesource.com/c/161220
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-02-06 00:10:40,https://api.github.com/repos/golang/tools/git/commits/279ab8e0019826e01e5eaf7ee88a3c89a0e5678d,279ab8e0019826e01e5eaf7ee88a3c89a0e5678d,"internal/lsp, go/packages/packagestest: support testing test files

This change allows testdata files to be *_test.go files.

Change-Id: Ic771ea7c89ff2d2aabd1af8be56f9c7286da9053
Reviewed-on: https://go-review.googlesource.com/c/161317
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-02-05 19:22:07,https://api.github.com/repos/golang/tools/git/commits/379209517ffe9b1ca12ec8db6abe90d4a6605675,379209517ffe9b1ca12ec8db6abe90d4a6605675,"internal/lsp: add additional logging for go/packages failures

Change-Id: I8c6dae4309df1746cd8b74d280f1f360f42cc77b
Reviewed-on: https://go-review.googlesource.com/c/161218
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-02-04 22:44:35,https://api.github.com/repos/golang/tools/git/commits/90c8b4f75bb8138a9c3dbdd792d028a691e2abf4,90c8b4f75bb8138a9c3dbdd792d028a691e2abf4,"internal/lsp: handle escaping URIs for files in the module cache

This change makes sure to handle escaped characters, for instance, files
in the module cache contain ""@"" in the path. Also, return errors when a
package is not found for a file.

Updates golang/go#30027

Change-Id: I6c4f6d0f30dde55701308b89785f02b671e81cc6
Reviewed-on: https://go-review.googlesource.com/c/161077
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Yasuhiro MATSUMOTO <mattn.jp@gmail.com>"
stamblerre,2019-02-05 17:58:32,https://api.github.com/repos/golang/tools/git/commits/069601f3714ee8c0caa1075f1946b1e466c18b67,069601f3714ee8c0caa1075f1946b1e466c18b67,"internal/lsp: use interface for diagnostics code

Since the diagnostics code can be either a string or a number, use an
empty interface.

Change-Id: Ie1a4183b5c82ef177176075828511070ae3520bd
Reviewed-on: https://go-review.googlesource.com/c/161217
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
agnivade,2019-02-02 10:20:54,https://api.github.com/repos/golang/tools/git/commits/7f7074d5bcfd282eb16bc382b0bb3da762461985,7f7074d5bcfd282eb16bc382b0bb3da762461985,"godoc: remove leading tabs while formatting text

Fixes golang/go#29568

Change-Id: Ia9e91bb4cf7a5916696268141ef5ec29e4372130
Reviewed-on: https://go-review.googlesource.com/c/160917
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
jba,2019-01-29 14:59:49,https://api.github.com/repos/golang/tools/git/commits/b2f7fe607dec60bbd2ddab79a4ff07adeb3acf14,b2f7fe607dec60bbd2ddab79a4ff07adeb3acf14,"cmd/stringer: type check using export data

Use go/packages to find and type check packages using export data.

In addition to type checking with export data, this should also enable
cmd/stringer to work correctly when using go modules.

jba: took over CL, tweaked package.Config use.

Change-Id: Ie253378b52fbd909f7194dfd09c039aab63dd8f0
Reviewed-on: https://go-review.googlesource.com/c/126535
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2019-02-04 18:53:25,https://api.github.com/repos/golang/tools/git/commits/d810ce9e47b0f3d0c3913072641989177aea2410,d810ce9e47b0f3d0c3913072641989177aea2410,"cmd/guru: remove Go 1.9 handling, since we no longer support 1.8

Some tests were split off for Go 1.9, when we still supported Go 1.8.
This change recombines them and removes the special handling for 1.9.

Fixes golang/go#24421

Change-Id: Ic871f4c3af4bb90b00cdd6d7b8f3253783554535
Reviewed-on: https://go-review.googlesource.com/c/161000
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-01-31 22:29:12,https://api.github.com/repos/golang/tools/git/commits/021ffbf1e960365e4f27af6d04c390b92cd00462,021ffbf1e960365e4f27af6d04c390b92cd00462,"internal/lsp: do not return nil identifiers without errors

Change-Id: I9ffc37dc07f46536a44f7173277d0374fdda1fb8
Reviewed-on: https://go-review.googlesource.com/c/160698
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-02-02 23:53:37,https://api.github.com/repos/golang/tools/git/commits/8a24307720a941b0383526f28e8343454cb733e9,8a24307720a941b0383526f28e8343454cb733e9,"internal/lsp/diff: fix sources listed for diff implementation

Change-Id: I36b2903f4938c4e7a3f15567e11ab31f3f7d78f7
Reviewed-on: https://go-review.googlesource.com/c/160840
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
anjmao,2019-02-01 06:40:03,https://api.github.com/repos/golang/tools/git/commits/7414d4c1f71cec71978b1aec0539171a2e42d230,7414d4c1f71cec71978b1aec0539171a2e42d230,"internal/lsp: rank types higher when completing in return of a function

Completion now ranks type names higher for func receiver, type params and type results (e.g. func (<>) foo(<>) (<>) {}).

Fixes golang/go#29152

Change-Id: Icdd18b1b344c1cd617a4f45a7b071e53c1345478
GitHub-Last-Rev: e6acb1f2d2a7e571ffcecc500e407fdefd118fed
GitHub-Pull-Request: golang/tools#73
Reviewed-on: https://go-review.googlesource.com/c/159797
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
bradfitz,2019-02-02 20:07:21,https://api.github.com/repos/golang/tools/git/commits/718ddee9569ab27cee4900b77d6f38f1ddbbbf39,718ddee9569ab27cee4900b77d6f38f1ddbbbf39,"Revert ""go/analysis/passes/atomicalign: handle pointers to struct""

This reverts CL 158999, commit 8dbcc66f33bb0acac38e8777732a369d38151a35.

Reason for revert: broke the build, nobody ever ran trybots

Change-Id: I2180ed8f9281b413b2ffea086abbd09fbfc3c99e
Reviewed-on: https://go-review.googlesource.com/c/160839
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2019-01-17 16:59:05,https://api.github.com/repos/golang/tools/git/commits/51e363b66d25e28ae79d34610901114c8df309ee,51e363b66d25e28ae79d34610901114c8df309ee,"internal/lsp: implement diff for computing text edits

Rather than replacing the whole file on gofmt or goimports, use the Myers
diff algorithm to compute diffs for a file. We send those back as text
edits.

Change-Id: I4f8cce5b27d51eae1911049ea002558a84cdf1bf
Reviewed-on: https://go-review.googlesource.com/c/158579
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
bradfitz,2019-02-01 18:49:11,https://api.github.com/repos/golang/tools/git/commits/0e05534988fece6d00407fef91bec542a7859d8e,0e05534988fece6d00407fef91bec542a7859d8e,"cmd/tip: delete

The cmd/tip program moved to x/build (along with its history) in:

  https://go.googlesource.com/build/+/63986c177d1ff5d2629840f6b00c445f1cb932bf

(There's no associated Gerrit CL; the merge commit of x/build's old
HEAD + a git-filter-branch of x/tools's cmd/tip was pushed directly to
Gerrit's git server, without creating Gerrit CLs for review for each
commit in its history)

Updates golang/go#29981

Change-Id: I16b9b1b0079e3d7b6851cb3e7322a878ece73e23
Reviewed-on: https://go-review.googlesource.com/c/160817
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
ianthehat,2018-12-14 20:46:12,https://api.github.com/repos/golang/tools/git/commits/067a2f313b693f3c2d3c0eb328434c91c7fc9b6b,067a2f313b693f3c2d3c0eb328434c91c7fc9b6b,"internal/lsp/cmd: add the definition mode

Change-Id: Ib171016fb1bb063a6424677458b554a08144465c
Reviewed-on: https://go-review.googlesource.com/c/159438
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
arl,2019-01-22 09:20:45,https://api.github.com/repos/golang/tools/git/commits/8dbcc66f33bb0acac38e8777732a369d38151a35,8dbcc66f33bb0acac38e8777732a369d38151a35,"go/analysis/passes/atomicalign: handle pointers to struct

The atomicalign checker detects non-64-bit aligned struct field
arguments to sync/atomic functions but currently misses out cases
where the struct variable identifier is a pointer to struct. This
is very common as it happens when the 64-bit field is accessed
in a method with pointer receiver, where the struct is itself the
method receiver. Add some tests to cover that new case.

While I'm at it, fix some typos.

Change-Id: I582cf5b7286b11285010f085045f58dc636ef3ee
Reviewed-on: https://go-review.googlesource.com/c/158999
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2019-01-30 20:47:45,https://api.github.com/repos/golang/tools/git/commits/bb1329dc71a0cb59ec60f5bce4e5e087516677c0,bb1329dc71a0cb59ec60f5bce4e5e087516677c0,"godoc/static: update static.go

golang.org/cl/158137 was missing a corresponding update to static.go.

Updates golang/go#29482

Change-Id: I60e059c3f00408c0d41e5284cb3e154fc1515032
Reviewed-on: https://go-review.googlesource.com/c/160482
Reviewed-by: Katie Hockman <katie@golang.org>"
stamblerre,2019-01-07 19:50:49,https://api.github.com/repos/golang/tools/git/commits/58ecf64b2ccd4e014267d2ea143d23c617ee7e4c,58ecf64b2ccd4e014267d2ea143d23c617ee7e4c,"go/internal/gcimporter: write export data for go/types

Add an iexport.go (and corresponding iexport_test.go) file, which is an
adapted version of $GOROOT/src/cmd/compile/internal/gc/iexport.go. This
code writes exportdata for a *go/types.Package.

A majority of this code is directly copied from iexport.go, with a
change of types, while some of it had to be modified slightly.

Updates golang/go#28260

Change-Id: Ic7e8e99f0c6b886839280b410afffb037da8a79b
Reviewed-on: https://go-review.googlesource.com/c/156901
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
andybons,2019-01-30 19:00:40,https://api.github.com/repos/golang/tools/git/commits/9bdeaddf5f7fa2b68eb5edd6688db5cd3cfc5ae7,9bdeaddf5f7fa2b68eb5edd6688db5cd3cfc5ae7,"godoc/static: inherit textarea color to avoid illegible text

The cascading sylesheet from the users UI can be inverted.
If the background color is altered in the textarea and the text
style is left unchanged the text may become illegible.
The default value of the textarea color is that of the users UI
styling and is not the same as that of the document body.
Setting color: inherit; resolves this.

Fixes golang/go#29482

Change-Id: Iaa6780154e0bd01d2a8219d813468dab25331b46
GitHub-Last-Rev: 8706d7aa4e183f98144b0b958f745bab12b6ce75
GitHub-Pull-Request: golang/tools#70
Reviewed-on: https://go-review.googlesource.com/c/158137
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
ianthehat,2019-01-10 17:51:27,https://api.github.com/repos/golang/tools/git/commits/cb89afadce946e09f295886d955e7135642e195c,cb89afadce946e09f295886d955e7135642e195c,"imports: drop anything after a non identifier rune in package names

A package name cannot contain a '.' anyway, so this is a mostly likely
internal package name in the presence of a '.' in the import path.
This stops goimports from adding a local alias in places where it is not
needed, for instance in gopkg.in conventions.

Fixes golang/go#29556

Change-Id: I0ab11f2852d7f1dae14457995692760077201c8e
Reviewed-on: https://go-review.googlesource.com/c/157357
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
dmitshur,2019-01-30 06:36:27,https://api.github.com/repos/golang/tools/git/commits/1c3581914d338ed45d4c3b4b5029c7c7d112faca,1c3581914d338ed45d4c3b4b5029c7c7d112faca,"godoc/short: point to new tracking issue for shortlink creation

There's a new dedicated issue tracking this task, point to it instead
of the previous large issue which has been closed by now.

Updates golang/go#29988
Updates golang/go#27205

Change-Id: Ib1443d14a6369322b36cdf8305344a35c421a2e5
Reviewed-on: https://go-review.googlesource.com/c/160377
Reviewed-by: Agniva De Sarker <agniva.quicksilver@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2019-01-30 00:46:19,https://api.github.com/repos/golang/tools/git/commits/a06a922acc1b97001c51689385e2144227c9e820,a06a922acc1b97001c51689385e2144227c9e820,"imports: update zstdlib to Go 1.12

Change-Id: Ie70c3d060de9c2e5d3404e073bdc20defdc46357
Reviewed-on: https://go-review.googlesource.com/c/160183
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2019-01-25 21:12:01,https://api.github.com/repos/golang/tools/git/commits/9cefa6771f8f3c72b346adb1995b7432464d4038,9cefa6771f8f3c72b346adb1995b7432464d4038,"go/packages: rename name= query and ""disable"" it

It was originally added to support goimports, but goimports
is going with another solution. We're going to disable it for
now, but not delete it, so that the goimports code path that
uses it can continue to be tested if and when we want to
use it.

We don't think there are any other users of name= but if
there are, please let us know and we'll work with you to
fix you, or we'll stop or revert this change. Thanks!

Change-Id: I73b7b6c0a5788148af5f3380189055b450f7b45e
Reviewed-on: https://go-review.googlesource.com/c/159702
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
dmitshur,2019-01-27 18:37:01,https://api.github.com/repos/golang/tools/git/commits/0a99049195aff55f007fc4dfd48e3ec2b4d5f602,0a99049195aff55f007fc4dfd48e3ec2b4d5f602,"go/vcs: remove go.googlesource.com vcsPath entry

This change synchronizes the absence of a special case entry for
go.googlesource.com import paths in cmd/go/internal/get to this
package. It seems it was added to x/tools/go/vcs in CL 180540043,
but it was never added to cmd/go/internal/get itself.

Having an go.googlesource.com entry here but not in cmd/go/internal/get
means the import path resolution logic diverges from that of the go
command, which is counter to the goal of this package.

After this change is applied, vcs.RepoRootForImportPathStatic reports
correct results for import paths like ""go.googlesource.com/scratch.git""
(resolving it without an error) and ""go.googlesource.com/scratch""
(reporting an error).

Updates golang/go#11490

Change-Id: I0b1c959675d9e20205a587a06d734fcd103ebf91
Reviewed-on: https://go-review.googlesource.com/c/159817
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2019-01-28 22:30:02,https://api.github.com/repos/golang/tools/git/commits/3c4dfba64b8d62b66f7db99209b647948a2d2a62,3c4dfba64b8d62b66f7db99209b647948a2d2a62,"cmd/heapview: delete

This is all dead code that never went anywhere.

Change-Id: I79db05d6391709bb9ae3d86f557246f1dd3b21f7
Reviewed-on: https://go-review.googlesource.com/c/159957
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2019-01-25 23:07:50,https://api.github.com/repos/golang/tools/git/commits/d66bd3c5d5a61998d3e35797d266491d11b5e487,d66bd3c5d5a61998d3e35797d266491d11b5e487,"cmd/godoc: add x/xerrors redirect

Change-Id: I367caa5f8c90e53768b07427248ed2bcc83a58e3
Reviewed-on: https://go-review.googlesource.com/c/159739
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
ianthehat,2019-01-23 19:16:43,https://api.github.com/repos/golang/tools/git/commits/cc6a436ffe6b424fffa1d91862c9b664d8407828,cc6a436ffe6b424fffa1d91862c9b664d8407828,"internal/lsp: refactor definition and hover to share functionality

The source package now exposes an Identifier method that returns information
about an identifier, which can be used to implement Definition, TypeDefinition
and Hover, as well as other command line functions in a later cl.

Change-Id: I03629c2c940215b4e2c86ee45bee8a18b79ee0e1
Reviewed-on: https://go-review.googlesource.com/c/159337
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
tekkamanendless,2019-01-24 02:05:24,https://api.github.com/repos/golang/tools/git/commits/4e3518700c9886a1bcaa8eb1d795cf32bcc57792,4e3518700c9886a1bcaa8eb1d795cf32bcc57792,"go/packages: stop parsing files if the context is canceled

`stamblerre/gocode`, which is the fork of `mdempsky/gocode` that supports Go 1.11 modules, uses `packages.Load` to load all of the Go code for, among other things, IDE autocomplete support.  A common aspect to IDE autocomplete is asking for suggestions very frequently (perhaps at every character typed).  Once the user has typed another character, the previous request for autocomplete is invalid and can be canceled.

`packages.Load` already stops its `go list` component if the context is canceled, but if the context is canceled afterward, then it will parse all of the files that it found.  This change stops the parsing of Go files once it detects that the context has been canceled.  When a file has not been processed due to cancelation, its error will be set to that of the context.

This change dramatically improves the performance of the `stamblerre/gocode` fork when requests have been canceled.

Change-Id: Iba8c1e08eefa59137559ac9108238bfe5ba4ac21
GitHub-Last-Rev: 11a2210c8ce2ed9db9462ddc3e9676476f49f937
GitHub-Pull-Request: golang/tools#72
Reviewed-on: https://go-review.googlesource.com/c/159259
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-01-24 17:48:11,https://api.github.com/repos/golang/tools/git/commits/a78a3054ec8e347bbf61862726567d29bfbcc101,a78a3054ec8e347bbf61862726567d29bfbcc101,"go/analysis/passes/composite: add an example to the doc

Change-Id: I929a5390aa5f4a4484e57ffa1eaa66f3238da1c1
Reviewed-on: https://go-review.googlesource.com/c/159338
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2019-01-23 23:18:15,https://api.github.com/repos/golang/tools/git/commits/78ee07aa9465da43bde6d5044c687571ab4362d6,78ee07aa9465da43bde6d5044c687571ab4362d6,"cmd/gopls/integration: git ignore temporary vscode files

Change-Id: I9585fb227f44c4bf8071247bb6b89b6fed6cf83b
Reviewed-on: https://go-review.googlesource.com/c/159277
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
tell-k,2019-01-22 16:59:15,https://api.github.com/repos/golang/tools/git/commits/85a87a81a9ff95ef538712ace5e5ccf1909d2e2e,85a87a81a9ff95ef538712ace5e5ccf1909d2e2e,"cmd/present: fix CSS when printing slides

The existing CSS style was causing slides to not align with page
boundaries when printing slides. The cause of that is the CSS transform
property that is applied to automatically scale size of slides.
This change clears the transform property just before printing.

Fixes golang/go#29480

Change-Id: I6f719ad1b716e9bda8ba83007c3d1d7dece9ce08
GitHub-Last-Rev: d46dfee57601b2e9127c5e8e80e596dc2a2f24fa
GitHub-Pull-Request: golang/tools#67
Reviewed-on: https://go-review.googlesource.com/c/155940
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
dmitshur,2019-01-22 22:47:02,https://api.github.com/repos/golang/tools/git/commits/9279ec27fd88b9e004f857564a7b4123cc584f63,9279ec27fd88b9e004f857564a7b4123cc584f63,"cmd/tip: also fetch x/net repository before building cmd/godoc

x/tools/cmd/godoc uses at least one Go package from x/net as of
CL 157197.

Don't add it to signature because we don't want the signature to
change whenever new commits to x/net are pushed, causing tip.golang.org
to be redeployed. This is because x/net is not considered a critical
component of the website at this time, and that's not expected to
change soon.

When the website begins using modules, it will specify the x/net
version precisely and this decision will no longer matter.

Fixes golang/go#29874

Change-Id: I1fa76bb81f8d2ffc2314375e2dfe4898c3af58de
Reviewed-on: https://go-review.googlesource.com/c/158937
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
heschik,2019-01-16 21:24:49,https://api.github.com/repos/golang/tools/git/commits/9c309ee22fabb87c92e9e710efec4c8cfd8d7a84,9c309ee22fabb87c92e9e710efec4c8cfd8d7a84,"imports: stop using go/packages for modules

go/packages needs to call `go list` multiple times, which causes
redundant work and slows down goimports. If we reimplement `go list` in
memory, we can reuse state, saving time. `go list` also does work we
don't really need, like adding stuff to go.mod, and skipping that saves
more time.

We start with `go list -m`, which does MVS and such. The remaining work
is mostly mapping import paths and directories through the in-scope
modules to make sure we're giving the right answers. Unfortunately this
is quite subtle, and I don't know where all the traps are. I did my
best.

cmd/go already has tests for `go list`, of course, and packagestest is
not well suited to tests of this complexity. So I ripped off the script
tests in cmd/go that seemed relevant and made sure that our logic
returns the right stuff in each case. I'm sure that there are more cases
to cover, but this hit all the stuff I knew about and quite a bit I
didn't.

Since we may want to use the go/packages code path in the future, e.g.
for Bazel, I left that in place. It won't be used unless the magic env
var is set.

Files in internal and imports/testdata/mod were copied verbatim from
cmd/go.

Change-Id: I1248d99c400c1a0c7ef180d4460b9b8a3db0246b
Reviewed-on: https://go-review.googlesource.com/c/158097
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
anjmao,2019-01-19 13:54:24,https://api.github.com/repos/golang/tools/git/commits/2d2e1b17492d17a1e11c7d5a920980cc967bc8ed,2d2e1b17492d17a1e11c7d5a920980cc967bc8ed,"internal/lsp: do not complete inside comments in functions

The previous change (https://go-review.googlesource.com/c/tools/+/157678) only stopped completion in comments in global scope. This change prevents completions results from being sent for comments inside of functions.

Fixes golang/go#29370

Change-Id: I2b43ae2942c6ce7376d2a5f88c40e6ac45c2b773
GitHub-Last-Rev: bc4aac1370aa5758941cdfae63290f061a55e204
GitHub-Pull-Request: golang/tools#71
Reviewed-on: https://go-review.googlesource.com/c/158538
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianlancetaylor,2019-01-22 14:35:59,https://api.github.com/repos/golang/tools/git/commits/b2f184786440f9405b57712d13b838784a733759,b2f184786440f9405b57712d13b838784a733759,"go/analysis/internal/checker: correct comment grammar

Change-Id: I78b41326c5d8d22fbff40f89721ac3aad3a5c63c
Reviewed-on: https://go-review.googlesource.com/c/158841
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
arl,2018-12-19 08:47:35,https://api.github.com/repos/golang/tools/git/commits/24cd39ecf74570612483b772d45cf9d53d908340,24cd39ecf74570612483b772d45cf9d53d908340,"go/analysis/passes/atomicalign: add atomicalign ckecker

The atomicalign Analyzer checks the alignment of 64-bits variables
accessed atomically via sync/atomic functions on 32-bits
architectures. Per the sync/atomic BUG note those variables must
be 64-bits aligned, otherwise a runtime panic is issued.

The analyzer only shows and runs on 32-bits architectures.

This CL should not introduce any false positives.

Add some tests in testdata/src/a to verify the analyzer behavior
on affected architectures plus some very basic test to verify that
no warning is generated on non-affected ones.

Fixes golang/go#11891

Change-Id: I02cfc574883564cd2a213a92d33bda3cc9a1ea98
Reviewed-on: https://go-review.googlesource.com/c/158277
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
heschik,2019-01-17 20:27:01,https://api.github.com/repos/golang/tools/git/commits/16909d206f00da7d0d5ba28cd9dc7fb223648ecf,16909d206f00da7d0d5ba28cd9dc7fb223648ecf,"imports: remove globals, stop using build.Default

The imports package's public API is build.Default, but that doesn't mean
we need to use it in the internal implementation or the tests. Now we
have a new type, fixEnv, that contains everything relevant from
build.Context, as well as the various global vars that were only used
for testing.

Don't worry too much about the new function parameters; they mostly
move into the resolvers in the next CL.

Refactoring only; no user-visible changes intended.

Change-Id: I0d4c904955c5854dcdf904009cb3413c734baf88
Reviewed-on: https://go-review.googlesource.com/c/158437
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2019-01-16 21:24:49,https://api.github.com/repos/golang/tools/git/commits/6466e7265ebb6615f31effa751a73ef745599dfa,6466e7265ebb6615f31effa751a73ef745599dfa,"imports: don't eagerly guess package names

Before this change, we guessed package names during loadPackageNames
when necessary. That made it impossible to tell if we failed to load
a package's name, e.g. because its source code is unavailable. That
interferes with fixes for golang/go#29557. It also meant that each
implementation of package name loading needs to do the guessing,
which gets annoying in CL 158097.

Instead, leave package names unset unless we're certain about them, and
guess only in (*pass).importIdentifier when necessary.

Refactoring only; no user-visible changes intended.

Change-Id: Ia6072ada823e6e3a86981ad90228f30baa2ac708
Reviewed-on: https://go-review.googlesource.com/c/158199
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2019-01-17 16:56:24,https://api.github.com/repos/golang/tools/git/commits/b4b6fe2cb82970f144debbe03ecb71e340b15446,b4b6fe2cb82970f144debbe03ecb71e340b15446,"go/{analysis,packages}: add TypesSizes

Many Analyzers need to measure the width of an integer and all today
use hacks. This change causes analysis.Pass to retain and expose the
type sizing function used during type checking.

This in turn requires go/packages to retain and expose the type sizing
function in Packages.TypesSizes, which addresses a longstanding need
among many of its clients.

Change-Id: Ia8362019bcde34c10cb4fbc38cfdfddcbef3eb5c
Reviewed-on: https://go-review.googlesource.com/c/158317
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
stamblerre,2019-01-16 22:01:06,https://api.github.com/repos/golang/tools/git/commits/b258f6da23835bf37e95cc50af792447c7c67fe4,b258f6da23835bf37e95cc50af792447c7c67fe4,"cmd/gopls: rename ""golsp"" to ""gopls"", as in ""Go Please""

Change-Id: Ie5688759ce21bffa6745eb86ef3606639e3ce335
Reviewed-on: https://go-review.googlesource.com/c/158197
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
mvdan,2019-01-08 22:48:41,https://api.github.com/repos/golang/tools/git/commits/c3e15677277459a71545fa40c982ca9e4562801e,c3e15677277459a71545fa40c982ca9e4562801e,"go/packages: make tests pass with custom GOCACHE

This commit was merged earlier with some failing trybots, so it was
reverted. This is a re-submission.

Before this change, a test would fail:

	$ GOCACHE=$HOME/go/cache go test
	--- FAIL: TestLoadImportsGraph (0.36s)
	    --- FAIL: TestLoadImportsGraph/GOPATH (0.19s)
		packages_test.go:191: golang.org/fake/subdir/d.test.Srcs = [4302876da86a8aae0c1669924daa223cafca60ef49ccaa060ae37e778d18f218-d], want [0.go]
	    --- FAIL: TestLoadImportsGraph/Modules (0.17s)
		packages_test.go:191: golang.org/fake/subdir/d.test.Srcs = [4302876da86a8aae0c1669924daa223cafca60ef49ccaa060ae37e778d18f218-d], want [0.go]
	FAIL

This is because it assumed that the user hadn't set their own GOCACHE,
and thus that all source files in the cache would be under the default
""go-build"" cache directory.

We could fix this via os.Getenv(""GOCACHE""), but a simpler mechanism is
to see if the source file has an extension. Source files don't have an
extension in GOCACHE, so that's much simpler to detect.

After this change:

	$ GOCACHE=$HOME/go/cache go test
	PASS

golist_fallback.go also had a bit of code to add ""/go-build/"" to the
added testmain.go path, to trick the tests on Go 1.10 to think the file
was in GOCACHE. Update that code too, to now not add "".go"" to the path
instead.

While at it, gofmt.

Fixes golang/go#29445.

Change-Id: I21fc59f13f00bea1f9a8a80e0438825f1a36ac3e
Reviewed-on: https://go-review.googlesource.com/c/156977
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
anjmao,2019-01-16 06:36:31,https://api.github.com/repos/golang/tools/git/commits/f94e9803bfe7e52f51cac3714eb124a23b669bec,f94e9803bfe7e52f51cac3714eb124a23b669bec,"internal/lsp: do not complete inside comments

Fixes golang/go#29370

Change-Id: I160b00f95fe44b2d87f66dc5842bb3a124e0292c
GitHub-Last-Rev: 924c13bc86f947ca01b291e7cc0d171164c2c856
GitHub-Pull-Request: golang/tools#69
Reviewed-on: https://go-review.googlesource.com/c/157678
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2019-01-15 22:04:34,https://api.github.com/repos/golang/tools/git/commits/2e4132e53b93d8d81f7a076566396511238b89b0,2e4132e53b93d8d81f7a076566396511238b89b0,"internal/lsp: add a test for completion of builtin types and functions

Change-Id: I7df2cfebbf2c44d189066a6d16770c753f7bf1d4
Reviewed-on: https://go-review.googlesource.com/c/158020
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2019-01-11 22:03:01,https://api.github.com/repos/golang/tools/git/commits/bf090417da8b6150dcfe96795325f5aa78fff718,bf090417da8b6150dcfe96795325f5aa78fff718,"internal/lsp: fix a few nil pointer exceptions in definition

Jumping to the definition of a builtin function or basic kind would
cause a nil pointer because these have no position.

Change-Id: I043a61a148757b127ff1123c8429ce23858bd13a
Reviewed-on: https://go-review.googlesource.com/c/157597
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
dmitshur,2019-01-14 16:24:28,https://api.github.com/repos/golang/tools/git/commits/36f37f8f5c8169a4482a16bcccc34b26413e704c,36f37f8f5c8169a4482a16bcccc34b26413e704c,"go/packages: rename Illtyped to IllTyped in docs

Fix the field name in docs to have the correct case, as seen at
https://godoc.org/golang.org/x/tools/go/packages#Package.IllTyped.

Change-Id: I3184c2fc5f9c4641a61dbd2af6a11309e9f284ea
Reviewed-on: https://go-review.googlesource.com/c/157797
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2019-01-11 01:42:25,https://api.github.com/repos/golang/tools/git/commits/fc1d57b08d7be19e6befb8d9a9405221faa3d5c9,fc1d57b08d7be19e6befb8d9a9405221faa3d5c9,"cmd/golsp: add a debugging tool to connect with golsp on a port

This change allows golsp to be run on a port, with an intermediary
command passing the data through. This allows for improved logging.
Also, add necessary changes to VSCode integration to allow changing the
name of the command for golsp.

Change-Id: I20dca1a50296636e57e022342ee70f0610ad1531
Reviewed-on: https://go-review.googlesource.com/c/157497
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
dmitshur,2019-01-11 04:40:35,https://api.github.com/repos/golang/tools/git/commits/4b7be70d8ad9781b0ec435623d9707d1e54ea2ce,4b7be70d8ad9781b0ec435623d9707d1e54ea2ce,"godoc/dl: don't display unstable releases under archive

If a release is unstable, don't consider adding it to archive or stable
lists as well. It should be present in the unstable list only.

Create and use test helper list to make tests more compact and thorough.

Also use a more consistent order of got, want in TestFilesToReleases.

Fixes golang/go#29669

Change-Id: I74cf1fa8ebf05b13a3a4c40b53442c50e0427302
Reviewed-on: https://go-review.googlesource.com/c/157499
Reviewed-by: Chris Broadfoot <cbro@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2019-01-10 09:05:22,https://api.github.com/repos/golang/tools/git/commits/40c2d4768f506be1614546418c5e178535a2da1e,40c2d4768f506be1614546418c5e178535a2da1e,"go/analysis: fix typos and update documentation

Change-Id: I48187fcb1eedd5b94d7b6b2db1ae11009bab23a2
Reviewed-on: https://go-review.googlesource.com/c/157299
Reviewed-by: Alan Donovan <adonovan@google.com>"
mvdan,2018-12-28 18:44:36,https://api.github.com/repos/golang/tools/git/commits/68c5ac90f574c3cf0e181d3cdde7cc60cb38fa9b,68c5ac90f574c3cf0e181d3cdde7cc60cb38fa9b,"go/packages: Load with no patterns should load "".""

At least on the go list driver, which is the default fallback. Note that
we need to call 'go list' on Load(""foo"") and Load(), but not
Load(""name=bar""). This is what the current logic was trying to
accomplish.

But it didn't take into account the case where there are zero initial
patterns, in which case we should still call 'go list'. Fix that, and
add a test.

Fixes #28767.

Change-Id: I40af9eb7f2407449c5683df1403928e2c57c86a4
Reviewed-on: https://go-review.googlesource.com/c/155898
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mattn,2019-01-08 03:56:24,https://api.github.com/repos/golang/tools/git/commits/a2c791aa643c06723cbbec1cbba98909a95253ba,a2c791aa643c06723cbbec1cbba98909a95253ba,"internal/lsp/cache: return error when no packages found

Change-Id: Ia11f0c428cffdd42eab5c4322e9ff6f0a38870fc
Reviewed-on: https://go-review.googlesource.com/c/156777
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2019-01-08 19:41:59,https://api.github.com/repos/golang/tools/git/commits/51295c7ec13a7e2fccbbf0c405b35d07ff136e75,51295c7ec13a7e2fccbbf0c405b35d07ff136e75,"go/packages: update comment on when golist fallback triggers

It triggers for all go versions before 1.11. We thought we might
be able to backport some of the necessary changes to 1.10.4, but
it was infeasible, so no 1.10.x versions will support the non-fallback
behavior.

Change-Id: Ib22be2715bf504464e4bd09c14453e5d132776f3
Reviewed-on: https://go-review.googlesource.com/c/156898
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
agnivade,2019-01-10 09:06:02,https://api.github.com/repos/golang/tools/git/commits/158f3dcaf6fd34726c03eaeec90da41c62dd9697,158f3dcaf6fd34726c03eaeec90da41c62dd9697,"go/ast/inspector: fix a small typo

Change-Id: Ifa677f0b0cd1cc345ce65eceacae4413a5644646
Reviewed-on: https://go-review.googlesource.com/c/157300
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2019-01-09 19:52:00,https://api.github.com/repos/golang/tools/git/commits/aa033095749b3c5414cb40cb5fb235173be6b186,aa033095749b3c5414cb40cb5fb235173be6b186,"godoc/redirect: display Gerrit/Rietveld CL disambiguation page when needed

For CL numbers that are determined to be Rietveld CLs, instead of
immediately redirecting, check whether a Gerrit CL with the same
number also exists. Do so by querying the Gerrit API and caching
the existing CLs. If both exist, display a very simple disambiguation
HTML page.

Cache Gerrit CLs that exist, to avoid querying the remote API server
more than once per CL. We can't cache Gerrit CLs that don't exist,
since they might get created in the future.

Fixes golang/go#28836

Change-Id: I08c32dc82a0136788337c5c32028e87428e8d81e
Reviewed-on: https://go-review.googlesource.com/c/157197
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dr2chase,2018-10-05 22:08:29,https://api.github.com/repos/golang/tools/git/commits/d30e00c240341e9e2a2d9519c67bd95fde906c7b,d30e00c240341e9e2a2d9519c67bd95fde906c7b,"splitdwarf: initial working commit

splitdwarf osxMachoFile [ osxDsymFile ]

splitdwarf takes an executable produced by go build as input,
and uncompresses and copies the DWARF segment into a separate
file in the way that is expected by OSX-hosted tools
(lldb and ports of gdb).
If osxDsymFile is not named explicitly, the default of
""<osxMachoFile>.dSYM/Contents/Resources/DWARF/<osxMachoFile>""
is used instead, with directories created as needed.

If the input file contains no UUID, then one is created by
hashing non-DWARF segment contents, and added to the
executable. This is necessary because gdb and lldb both
expect matching UUIDs to be present in the executable
and its debugging symbols.

Includes a modified version of debug/macho, with additional
definitions and the ability to write segments, sections, and
some MachO load commands added.

Change-Id: Ia5b0e289260f72bbca392cdf2c7c0a75e3ca40e5
Reviewed-on: https://go-review.googlesource.com/c/143357
Reviewed-by: Austin Clements <austin@google.com>"
dr2chase,2018-12-11 21:11:12,https://api.github.com/repos/golang/tools/git/commits/d674b4ad678f67fe02b23ad40ae3d9ad309336f7,d674b4ad678f67fe02b23ad40ae3d9ad309336f7,"cmd/splitdwarf: copy debug/macho

The splitdwarf command will need a modified version of debug/macho.
This is a verbatim copy from std as of Go 1.11, which we'll modify in
the next CL.

Change-Id: Ia9ded870d1ba91dad21f9f6dc5bb38f9f6cc0e80
Reviewed-on: https://go-review.googlesource.com/c/152240
Run-TryBot: David Chase <drchase@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Austin Clements <austin@google.com>
Reviewed-by: David Chase <drchase@google.com>"
pjweinb,2019-01-07 19:34:44,https://api.github.com/repos/golang/tools/git/commits/98df4c70bed4257d67f661795a408da85d2ce752,98df4c70bed4257d67f661795a408da85d2ce752,"tools/internal/lsp/protocol: add LocationLink type

LocationLink was added in 3.14.0 of lsp.

Change-Id: I388dba5ab43b195cc3965e4199b49155094a2627
Reviewed-on: https://go-review.googlesource.com/c/156617
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2019-01-08 22:25:39,https://api.github.com/repos/golang/tools/git/commits/421f03a57a641a72b8ea4ceb640e73391675fc6f,421f03a57a641a72b8ea4ceb640e73391675fc6f,"Revert ""go/packages: make tests pass with custom GOCACHE""

This reverts commit e7b5a6dfd88b61ac7c2f61acb9f83cffb4b4f3fa.

Reason for revert: merged by mistake

Change-Id: Ibf6ff4aa346b569aaa5e06b58770a93ca3eebdab
Reviewed-on: https://go-review.googlesource.com/c/156900
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>"
frioux,2018-12-20 06:25:32,https://api.github.com/repos/golang/tools/git/commits/e8d59ebc6619940c261d32f0095b5f1235eeb8fe,e8d59ebc6619940c261d32f0095b5f1235eeb8fe,"Remove warning stability warning

December 1, 2018 has come and gone.

If the timeframe should change that's fine; feel free to reject this and just update the date.

Change-Id: If6aaee30340ee0bfde7e578e054c5b8bc910a5b9
GitHub-Last-Rev: ec781ca1374a010168bc4a457d2ea5d0c023f8dc
GitHub-Pull-Request: golang/tools#64
Reviewed-on: https://go-review.googlesource.com/c/155237
Reviewed-by: Michael Matloob <matloob@golang.org>"
Groxx,2018-12-29 20:24:44,https://api.github.com/repos/golang/tools/git/commits/5e40c1c23643177c876c1dd087b8a700bac4cf57,5e40c1c23643177c876c1dd087b8a700bac4cf57,"go/analysis/internal/checker: don't clobber error when packages.Load fails

Previously, if `packages.Load` failed, it would (sometimes? always?) return an error + no initial packages.
The moved `len(initial)` check was overriding the actual err with a much less useful one.

Example output before:
```
13:03:17.856866 load [./...]
13:03:28.403532 ./... matched no packages
```
And after:
```
13:03:30.942191 load [./...]
13:03:36.999506 go list repeated package [an internal package] with different values
```

Change-Id: I1a821e3855cbbbee904bcec9c29877e091c3e3a0
GitHub-Last-Rev: d1235fc2eceb0d4e947f47be99edc5ac96da5f84
GitHub-Pull-Request: golang/tools#65
Reviewed-on: https://go-review.googlesource.com/c/155745
Reviewed-by: Michael Matloob <matloob@golang.org>"
mvdan,2018-12-28 17:31:36,https://api.github.com/repos/golang/tools/git/commits/e7b5a6dfd88b61ac7c2f61acb9f83cffb4b4f3fa,e7b5a6dfd88b61ac7c2f61acb9f83cffb4b4f3fa,"go/packages: make tests pass with custom GOCACHE

Before this change, a test would fail:

	$ GOCACHE=$HOME/go/cache go test
	--- FAIL: TestLoadImportsGraph (0.36s)
	    --- FAIL: TestLoadImportsGraph/GOPATH (0.19s)
		packages_test.go:191: golang.org/fake/subdir/d.test.Srcs = [4302876da86a8aae0c1669924daa223cafca60ef49ccaa060ae37e778d18f218-d], want [0.go]
	    --- FAIL: TestLoadImportsGraph/Modules (0.17s)
		packages_test.go:191: golang.org/fake/subdir/d.test.Srcs = [4302876da86a8aae0c1669924daa223cafca60ef49ccaa060ae37e778d18f218-d], want [0.go]
	FAIL

This is because it assumed that the user hadn't set their own GOCACHE,
and thus that all source files in the cache would be under the default
""go-build"" cache directory.

We could fix this via os.Getenv(""GOCACHE""), but a simpler mechanism is
to see if the source file has an extension. Source files don't have an
extension in GOCACHE, so that's much simpler to detect.

After this change:

	$ GOCACHE=$HOME/go/cache go test
	PASS

While at it, gofmt.

Fixes #29445.

Change-Id: I83c0afc20a527bb50a03f9946e555db36cc85efd
Reviewed-on: https://go-review.googlesource.com/c/155897
Reviewed-by: Michael Matloob <matloob@golang.org>"
zmb3,2018-12-31 18:15:34,https://api.github.com/repos/golang/tools/git/commits/1bc491975cf8057f88cd3bce778e273f1ac6ee7c,1bc491975cf8057f88cd3bce778e273f1ac6ee7c,"go/packages: update doc for name= queries

Change-Id: I2ba387703ae1f31e7dff271007607f377701f7dd
Reviewed-on: https://go-review.googlesource.com/c/155941
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2018-12-17 18:21:31,https://api.github.com/repos/golang/tools/git/commits/7cb465e0075ac2acb142ec8a60c086952192c501,7cb465e0075ac2acb142ec8a60c086952192c501,"go/package/gopackages: update gopackages to use the new tool library for its main function

Change-Id: I06f13024c021d14e4a759ca9ec24aa54f9d1b97f
Reviewed-on: https://go-review.googlesource.com/c/154558
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
mvdan,2019-01-07 15:24:50,https://api.github.com/repos/golang/tools/git/commits/e063def13b29c433b3c57fc99257c18c1f9399ce,e063def13b29c433b3c57fc99257c18c1f9399ce,"go/analysis: fix package doc copy-paste typo

Change-Id: I17495106c76bbf270f621abe2eca367ed818a79b
Reviewed-on: https://go-review.googlesource.com/c/156500
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ceh,2019-01-05 19:20:03,https://api.github.com/repos/golang/tools/git/commits/d345f29b0d7b54f2b7ec62b5363832790be35e40,d345f29b0d7b54f2b7ec62b5363832790be35e40,"internal/lsp: fix typo

Change-Id: I04164ea5b57ebb828ecb837caa397c9e736f4d57
Reviewed-on: https://go-review.googlesource.com/c/156457
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mvdan,2018-12-28 19:09:56,https://api.github.com/repos/golang/tools/git/commits/3ef68632349c4eab68426d81d981d131b625cafc,3ef68632349c4eab68426d81d981d131b625cafc,"go/analysis: fix ambiguous paths in structtag pass

Now that we support checking for duplicate struct field tags across
anonymous struct fields, we must deal with the fact that the files
involved in such a warning may not be in the same package or directory.

This could lead to errors where a file was mentioned in a package where
it didn't exist. Or even worse, point at a location within an existing
file that doesn't contain the field we want, causing even further
confusion to the user.

To fix this, always make the ""also at"" positions relative to the current
warning, if possible.

Fixes #29130.

Change-Id: Iaa29b406978f1671bdfb2ddddb7058eeffec92a9
Reviewed-on: https://go-review.googlesource.com/c/155899
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
heschik,2019-01-02 19:39:27,https://api.github.com/repos/golang/tools/git/commits/498d95493402f719ce3de5c8cb60d1b50d0a1239,498d95493402f719ce3de5c8cb60d1b50d0a1239,"go/packages/packagestest: make temp directory writeable

In module mode, the temp dir will contain a mod cache, which needs to be
made writeable before it can be deleted.

Change-Id: Ia979a8b06d1b4db47d25ffdfdf925ba8a0ac67de
Reviewed-on: https://go-review.googlesource.com/c/156078
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
dmitshur,2019-01-04 16:54:00,https://api.github.com/repos/golang/tools/git/commits/9ea1c200b25ea2a4f90be295f0bb17d2d32c635b,9ea1c200b25ea2a4f90be295f0bb17d2d32c635b,"cmd/godoc: add x/website redirect

Add a redirect for the recently created x/website subrepository.

It's not yet included at https://golang.org/pkg/#subrepo because it's
in development. Once development reaches the point that x/website
is the canonical location of the golang.org server, we can consider
including x/website at https://golang.org/pkg/#subrepo (just like
x/blog, x/tour, x/build are already included there).

Updates golang/go#29206

Change-Id: I6889c1f5e40f11abca944b217a7354f76c08c8eb
Reviewed-on: https://go-review.googlesource.com/c/156337
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
heschik,2019-01-03 18:53:54,https://api.github.com/repos/golang/tools/git/commits/8a6051197512ff9cbf65108d80613b631fe0b4f3,8a6051197512ff9cbf65108d80613b631fe0b4f3,"imports: don't look for, or find, empty packages

Fix a pair of bugs that combined to cause golang/go#29520. First, don't go
looking for a package if we've only seen unexported identifiers selected
from it. It's probably a typo. Second, don't find packages with no files
in them, e.g. because they're all build tagged out. We can't know what
package they form, so we have no business considering them.

Test only for the first, since without the first bug the second has no
observable effect on behavior, and I don't want to test the private API.

Fixes golang/go#29520

Change-Id: I5b797940bec051be5945b9c5cb4e7bf28527a939
Reviewed-on: https://go-review.googlesource.com/c/156178
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
quasilyte,2018-12-10 10:41:58,https://api.github.com/repos/golang/tools/git/commits/ca9055ed7d0470e61b81778f76637846e891ff60,ca9055ed7d0470e61b81778f76637846e891ff60,"cmd/guru: fix incorrect case order in describe.go

Since *ast.CommClause implements ast.Stmt, type switch for
it would never execute in the original code, it will always
execute ast.Stmt branch.

Moving concrete types before interfaces help in this case.

Change-Id: Id84f2f7f3fac859029155d8e6debf4a8ef170b26
Reviewed-on: https://go-review.googlesource.com/c/153397
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
Groxx,2018-12-29 13:50:23,https://api.github.com/repos/golang/tools/git/commits/52ae6dee2324c0099122222e7119f09905e14df9,52ae6dee2324c0099122222e7119f09905e14df9,"go/analysis/internal/checker: fix debug flag docs

The list of recognized values for the `-debug` flag was old / incorrect.

Change-Id: Ic5f260e650e73512cca2f4db8155bb70bc6b6d17
GitHub-Last-Rev: af642385b81da00169ab9700abb26bed54bdf8ac
GitHub-Pull-Request: golang/tools#66
Reviewed-on: https://go-review.googlesource.com/c/155938
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2019-01-02 18:22:47,https://api.github.com/repos/golang/tools/git/commits/7c850e7ac1bd556c6a810c049637a26a750e2898,7c850e7ac1bd556c6a810c049637a26a750e2898,"godoc/static: update copyright year in static.go

This change was created with `go generate
golang.org/x/tools/godoc/static` and updates the year in the copyright
notice in the file.

Change-Id: I5916b7a6d1f1ceae84d58c392767ca97b314ebc3
Reviewed-on: https://go-review.googlesource.com/c/156077
Reviewed-by: Heschi Kreinick <heschi@google.com>
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mattn,2018-12-21 01:22:55,https://api.github.com/repos/golang/tools/git/commits/79186431cf2917562ba2e632326924b5594ce114,79186431cf2917562ba2e632326924b5594ce114,"go/internal/packagesdriver: fix crash when GOARCH and Go compiler can't be determined

When run ""go list"" outside GOPATH, result should be empty

Change-Id: If832c46d3e4c32a2a87338cca95e3169ea3be055
Reviewed-on: https://go-review.googlesource.com/c/155557
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2018-12-21 22:54:19,https://api.github.com/repos/golang/tools/git/commits/d00ac6d27372a4273825635281f2dc360d4be563,d00ac6d27372a4273825635281f2dc360d4be563,"internal/lsp: remove unnecessary packagestest.RangePosition type

Some cleanup of lsp_test.

Change-Id: I0cf4eb73f223845374c7f7f4939a461ff676bde8
Reviewed-on: https://go-review.googlesource.com/c/155579
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Libor K <aschrak1978@gmail.com>"
zmb3,2018-12-17 20:07:32,https://api.github.com/repos/golang/tools/git/commits/c446015edc5ef4919a8da23e83ceb4c24a153c2e,c446015edc5ef4919a8da23e83ceb4c24a153c2e,"go/packages/packagestest: fix Expect doc

The type is expect.Note, not expect.Comment.

Change-Id: I04338fee3b20a7507bbe2a6a15ea36cf1066fe88
Reviewed-on: https://go-review.googlesource.com/c/154580
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-12-20 22:31:55,https://api.github.com/repos/golang/tools/git/commits/62138107dfcf98a2a23c0fb5a91983423e39973a,62138107dfcf98a2a23c0fb5a91983423e39973a,"internal/lsp: fix diagnostics range computation

Diagnostics were failing because of
https://go-review.googlesource.com/c/tools/+/154742, where I was using
the wrong *token.File for the position calculations. This should fix the
problem.

Change-Id: Ic44e7799da56010b5014d56029fb4e0a8a6bb0e8
Reviewed-on: https://go-review.googlesource.com/c/155479
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-12-18 21:18:03,https://api.github.com/repos/golang/tools/git/commits/85a09cd5ed866e5d86abd3f1131104ee73ac92d9,85a09cd5ed866e5d86abd3f1131104ee73ac92d9,"internal/lsp: set file contents through the source.View, not File

Refactor code as a follow-up to
https://go-review.googlesource.com/c/tools/+/154742.
Also, change every instance of ""source.URI()"" to ""fromProtocolURI"", so
that we can add a better implementation of that later on (for Windows
support).

Change-Id: Ifa24ffd7e1aebf1f7d05df6f65742769ead0922f
Reviewed-on: https://go-review.googlesource.com/c/154741
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
pjweinb,2018-12-21 18:30:51,https://api.github.com/repos/golang/tools/git/commits/54d1bacb4e83cdcbb081a7ea09a69092f72bd2e6,54d1bacb4e83cdcbb081a7ea09a69092f72bd2e6,"internal/lsp/server: fix typo in name of method foldingRange

It should say ""textDocument/foldingRange"" even though everyone names
the associated function FoldingRanges.

Change-Id: I79c8449a689dc8c80f745c875d9ec9892d926e9c
Reviewed-on: https://go-review.googlesource.com/c/155578
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
pjweinb,2018-12-19 14:55:15,https://api.github.com/repos/golang/tools/git/commits/3ad2d988d5e25022ad68b1cc9ff2dd3ef6a12043,3ad2d988d5e25022ad68b1cc9ff2dd3ef6a12043,"cmd/golsp: log elapsed times in milliseconds rather than microseconds.

Language servers provided by Microsoft seem to use Date.Now()
for calculating elapsed times. In javascript and typescript Date.Now()
reports milliseconds.

Change-Id: Ic12fc4a1d31f2548d8808b8b22aba80c44f000c3
Reviewed-on: https://go-review.googlesource.com/c/155018
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
heschik,2018-12-20 21:09:19,https://api.github.com/repos/golang/tools/git/commits/537d06c362073e8c95164d0d4709059603cfdb02,537d06c362073e8c95164d0d4709059603cfdb02,"imports: use LoadFiles everywhere

Since we don't really need type info, and want everything to be fast,
use LoadFiles and do parsing manually. It would be nice if there were a
mode for that.

Change-Id: I33f8a85ffb87a70048c4775058bd0813cf677061
Reviewed-on: https://go-review.googlesource.com/c/155478
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2018-12-20 21:07:38,https://api.github.com/repos/golang/tools/git/commits/d12035dfdc6da9d82d9f9d0fba01b218324cb314,d12035dfdc6da9d82d9f9d0fba01b218324cb314,"go/packages: use -find, add GOPACKAGESDEBUG env var

Pass -find whenever possible to speed up go list calls. Add an
environment variable, GOPACKAGESDEBUG, that controls debug logging
so that we don't have to tell users to recompile goimports to debug it.

Change-Id: If39ff7829279dafa4e066e74a024c27a8235154b
Reviewed-on: https://go-review.googlesource.com/c/155477
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2018-12-18 20:46:14,https://api.github.com/repos/golang/tools/git/commits/f344c7530cd827b6783f004fad0d8e0cd260ec96,f344c7530cd827b6783f004fad0d8e0cd260ec96,"internal/lsp: add ranges to some diagnostics messages

Added a View interface to the source package, which allows for reading
of other files (in the same package or in other packages). We were
already reading files in jump to definition (to handle the lack of
column information in export data), but now we can also read files in
diagnostics, which allows us to determine the end of an identifier so
that we can report ranges in diagnostic messages.

Updates golang/go#29150

Change-Id: I7958d860dea8f41f2df88a467b5e2946bba4d1c5
Reviewed-on: https://go-review.googlesource.com/c/154742
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2018-12-19 21:23:27,https://api.github.com/repos/golang/tools/git/commits/3571f65a7bda7edee4a56b5a4d641a7028ca75d4,3571f65a7bda7edee4a56b5a4d641a7028ca75d4,"go/packages: deduplicate roots

refine needs to match packages back to roots, and it gets confused if
the same root appears twice. Deduplicate roots the same way we
deduplicate packages.

Introduce a new wrapper around driverResponse to make this easier, and
pass that around instead of the addPackage callback.

Fixes golang/go#29297

Change-Id: I49ea37155c507af136391b9eb55a83b6dedfcc14
Reviewed-on: https://go-review.googlesource.com/c/155020
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
robpike,2018-12-20 01:12:42,https://api.github.com/repos/golang/tools/git/commits/92cdcd90bf52150d9c63b7a8432ab7b10fc92385,92cdcd90bf52150d9c63b7a8432ab7b10fc92385,"godoc: choose a smaller-output example as help when there are unexpected arguments

Change CL 153869 added a help message when there are leftover arguments,
as that used to invoke the command-line interface that is now gone.
But the example in the help text (go doc -all net/http) generates a huge
amount of output.

Use a very simple, small-output example instead, to illustrate how to
solve the problem without scrolling the program description hundreds
of screenfuls away.

Change-Id: I1887af1f3e853bf3a852dc374746074f1cd39441
Reviewed-on: https://go-review.googlesource.com/c/155157
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
stamblerre,2018-12-11 05:52:31,https://api.github.com/repos/golang/tools/git/commits/6e267b5cc78e9baebc0af24b760802105d843647,6e267b5cc78e9baebc0af24b760802105d843647,"internal/lsp: add additional tests for completion

New tests include cases for anonymous structs, composite literals,
ranking of results in binary expressions, and import cycles.

Change-Id: Ic02e84e09101bb9873fc1705bba2594d655bb45b
Reviewed-on: https://go-review.googlesource.com/c/153443
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianlancetaylor,2018-12-18 16:10:04,https://api.github.com/repos/golang/tools/git/commits/2240b23956e77c5836e78a8a5ce3af0ce4afea49,2240b23956e77c5836e78a8a5ce3af0ce4afea49,"go/packages: use packagesdriver to fetch sizes for ""go list""

Also fix packagesdriver to use ""go list"" if the gopackagesdriver
program is not available, rather than returning nil with no error.

Also fix some comments.

Change-Id: I0457cfa4eab4294760af71c780c62c05ad841c85
Reviewed-on: https://go-review.googlesource.com/c/154757
Run-TryBot: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
FiloSottile,2018-12-13 00:26:57,https://api.github.com/repos/golang/tools/git/commits/88e3b261f28032aa04435fc7aeae5d27d26bf777,88e3b261f28032aa04435fc7aeae5d27d26bf777,"cmd/godoc: print a helpful error if used for command-line docs

The command-line interface was recently removed in favor of ""go doc"".

Change-Id: Idfcfca3b2eafaf63148a2ed88d4d25c61d9e3c69
Reviewed-on: https://go-review.googlesource.com/c/153869
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
heschik,2018-12-18 19:53:56,https://api.github.com/repos/golang/tools/git/commits/d4971274fe382404aee0e8c163af974f2bf738e6,d4971274fe382404aee0e8c163af974f2bf738e6,"imports: don't remove imports that conflict with globals

When a package contains both a var and an import that produce the same
identifier, the compiler will complain. I had thought that it made sense
to remove the redundant imports in that case. However, we can't reliably
tell whether a global from one file is in scope in another file. Most
notably, having multiple main packages in the same directory is pretty
common, and if someone declares a var in one that matches an import in
another, we don't want to remove the import.

Change-Id: I49f58fccdb8a8542ec85cf4d80d3e20d3159d2c7
Reviewed-on: https://go-review.googlesource.com/c/154740
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
mmcloughlin,2018-12-18 09:36:47,https://api.github.com/repos/golang/tools/git/commits/bbbd9518e88c8c9d74d2b0f29f0d19b3b22338a1,bbbd9518e88c8c9d74d2b0f29f0d19b3b22338a1,"go/analysis/passes/asmdecl: fix array offsets

Array offsets in recursive structures do not include the accumulated
offset. This diff fixes the mistake and adds a test.

Fixes golang/go#29318

Change-Id: Iaa2a2f9404e4ed0e38b87e5e041709c1a8e25809
Reviewed-on: https://go-review.googlesource.com/c/154665
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>"
dsymonds,2018-12-18 01:41:13,https://api.github.com/repos/golang/tools/git/commits/13ba8ad772dfbf0f451b5dd0679e9c5605afc05d,13ba8ad772dfbf0f451b5dd0679e9c5605afc05d,"go/vcs: use Bitbucket v2 REST API

This ports the change made to cmd/go in
https://go-review.googlesource.com/36219 (Feb 2017).

Change-Id: I04e55749b187e21d140500b8878866bd3ceea174
Reviewed-on: https://go-review.googlesource.com/c/154677
Reviewed-by: Andrew Gerrand <adg@golang.org>"
ianthehat,2018-12-17 18:52:58,https://api.github.com/repos/golang/tools/git/commits/a072e661040ecdb936ae4a592d04f74f8d77199f,a072e661040ecdb936ae4a592d04f74f8d77199f,"internal/lsp: refactor the command line handling

This switched the golsp binary to support a sub-command model so it can grow
some guru like command line query capabilites

Change-Id: I1a7a49bb17701e62004bba636d6bee9de2481ffd
Reviewed-on: https://go-review.googlesource.com/c/154559
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2018-12-17 18:50:15,https://api.github.com/repos/golang/tools/git/commits/71d3d868db8c656cc813fada55c43989c0d27bbe,71d3d868db8c656cc813fada55c43989c0d27bbe,"internal/tool: add a small package to unify the flag handling across all our tools

This adds an opinionated package that has the common code that should be in all
our tools (profiling, logging, context handling etc)
It also adds code for using struct fields as flags to allow us to remove all the
flag globals.

Change-Id: I27bb493ebcce3a86ddcdab87892a2295c237cb16
Reviewed-on: https://go-review.googlesource.com/c/154557
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2018-12-17 18:26:00,https://api.github.com/repos/golang/tools/git/commits/ae5b88167698f5f718baac67cf6088827de6569f,ae5b88167698f5f718baac67cf6088827de6569f,"go/packages: suppress go list errors when ad-hoc package doesn't exist

Updates golang/go#29280

Change-Id: Ie5a5dc1fef8f3d989b3a5fffb6c2ca66e97c143a
Reviewed-on: https://go-review.googlesource.com/c/154517
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-12-14 22:00:24,https://api.github.com/repos/golang/tools/git/commits/57eff0d8ac5e8e0e378638d379d584e8f5029ea5,57eff0d8ac5e8e0e378638d379d584e8f5029ea5,"internal/lsp: add support for running goimports as a code action

This change adds support for goimports as a code action that can be run
on save. However, there do appear to be issues with the propagation of
the context.Only field of the CodeActionParams, so we treat every
codeAction as an organizeImports action - this should be fixed in the
next vscode-languageclient release
(https://github.com/Microsoft/vscode-languageserver-node/issues/442).

Change-Id: I64ca0034c393762248fde6521aba86ed9d41bf70
Reviewed-on: https://go-review.googlesource.com/c/154338
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-12-13 00:16:30,https://api.github.com/repos/golang/tools/git/commits/17661a972447b8775be81004e28d47a990362198,17661a972447b8775be81004e28d47a990362198,"internal/lsp/source: avoid having build tagged files for uri

Create helper functions for the exported URI functions to test
the logic that isn't OS-specific (filepath.{To,From}Slash is the OS-specific part).
Also add helpers to determine is a file or URI path is Windows-specific.

Change-Id: I6ba5119424ad5edcd59b946276e4268b2525505f
Reviewed-on: https://go-review.googlesource.com/c/153867
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
pjweinb,2018-12-15 12:35:11,https://api.github.com/repos/golang/tools/git/commits/728ed46ae025e62457a6a626418c79bc3da4c8a1,728ed46ae025e62457a6a626418c79bc3da4c8a1,"cmd/golsp: make each log message result from a single call to fmt.Fprintf

If several RPCs finish together the existing code may mix the log
messages, making reading them difficult.

Change-Id: I1de15373f739c97ccfaf210511b5f5443f7ef036
Reviewed-on: https://go-review.googlesource.com/c/154346
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
bradfitz,2018-12-14 14:45:46,https://api.github.com/repos/golang/tools/git/commits/3c39ce7b61056afe4473b651789da5f89d4aeb20,3c39ce7b61056afe4473b651789da5f89d4aeb20,"tip: fix, update tip.golang.org

Primarily for golang/go#29251 but also update the base Docker layer
from Go 1.9 to Go 1.11, update other deps, and fix some Kubernetes
config cleanups that happened prior without testing apparently.

Fixes golang/go#29251

Change-Id: I0aafccdfedfc0d9ebb75d0c1a3b0819245ea5f19
Reviewed-on: https://go-review.googlesource.com/c/154181
Reviewed-by: Bryan C. Mills <bcmills@google.com>"
thanm,2018-12-13 13:40:11,https://api.github.com/repos/golang/tools/git/commits/fe2443f7b95069e01d0b02159564c1b4d0dfcb5e,fe2443f7b95069e01d0b02159564c1b4d0dfcb5e,"go/internal/gccgoimporter: test fix for older gccgo versions

Import test fix https://golang.org/cl/153831 from std lib
version (skips issue29198.go test for older versions of gccgo).

Updates golang/go#29198.

Change-Id: Iddd903068a73a307b1d19d93a7c03b1d00365022
Reviewed-on: https://go-review.googlesource.com/c/153870
Run-TryBot: Than McIntosh <thanm@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
heschik,2018-11-20 21:20:01,https://api.github.com/repos/golang/tools/git/commits/bbccd8cae4a9a47e0f978e03ff4b5df88a9fde1e,bbccd8cae4a9a47e0f978e03ff4b5df88a9fde1e,"imports: use go/packages, support modules

When in module mode (go env GOMOD is nonempty), use go/packages to load
package information. This adds module support, without slowing down
non-module mode. Functionality should be the same in both cases.

Since we intend to use go/packages for everything eventually, the tests
run in three modes: GOPATH, using the old code paths; GOPATH_GoPackages,
using go/packages on a GOPATH layout; and Modules, using go/packages on
a module layout. They do take a little while to run.

The code path for go/packages is a lot more convoluted than it should be,
since it mixes in and out of the older path. I expect we'll clean that
up after deleting the old one.

Change-Id: I5b54bd470e091e6fb429597dfbfd1c8fa03f5b59
Reviewed-on: https://go-review.googlesource.com/c/152317
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-10-29 20:10:42,https://api.github.com/repos/golang/tools/git/commits/c779628d65d906060a998dc805c44579faba21bb,c779628d65d906060a998dc805c44579faba21bb,"go/ssa: convert the objlookup tests to the new marker syntax

Change-Id: I5df3a3cc3d3ab236a6ad964914393a2ccb29803b
Reviewed-on: https://go-review.googlesource.com/c/145637
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
thanm,2018-12-13 00:16:14,https://api.github.com/repos/golang/tools/git/commits/7529026f5b7cbe519021cf9fbfa023677c091ea8,7529026f5b7cbe519021cf9fbfa023677c091ea8,"go/internal/gccgoimporter: update package to match std lib version

Import changes from std lib version, specifically

    https://golang.org/cl/153821

which fixes a bug (#29198) in reading of import data.

Change-Id: I26d4da015b88bbc8f4f7775b0850bef5dffadbec
Reviewed-on: https://go-review.googlesource.com/c/153868
Run-TryBot: Than McIntosh <thanm@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
mattn,2018-12-11 16:02:12,https://api.github.com/repos/golang/tools/git/commits/49db546f375eee2dbfef045773161e6a4ea59c2f,49db546f375eee2dbfef045773161e6a4ea59c2f,"internal/lsp/source: Use file:///C:/ on Windows file system

URI should be started with file:/// always.

Change-Id: I123e577d421de3e85dfec00596fbdb63c2231938
Reviewed-on: https://go-review.googlesource.com/c/153618
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2018-12-12 18:57:52,https://api.github.com/repos/golang/tools/git/commits/b620e9ecbe281f2f0c982845e3e26010296c3991,b620e9ecbe281f2f0c982845e3e26010296c3991,"internal/lsp: use rootURI as config.Dir in packages.Load

This change was inspired by https://golang.org/cl/153777.

Fixes golang/go#29174

Change-Id: I9d9a8b95e984c8e70160d199cd1efc5aa2964ef7
Reviewed-on: https://go-review.googlesource.com/c/153863
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
FiloSottile,2018-12-07 01:45:49,https://api.github.com/repos/golang/tools/git/commits/4d6773f6fa9b23c1fcaf4bf59ab88709651e7171,4d6773f6fa9b23c1fcaf4bf59ab88709651e7171,"godoc/dl: serve ""go get"" meta for golang.org/dl/gotip

Change-Id: I05db10e9b3f4983d23af4dc5fd4cce9b3979e9c5
Reviewed-on: https://go-review.googlesource.com/c/153097
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
heschik,2018-12-12 18:11:39,https://api.github.com/repos/golang/tools/git/commits/5f4a60f04f23ac48e0665f257413ae3eacf339be,5f4a60f04f23ac48e0665f257413ae3eacf339be,"imports: fix renamed sibling imports more

This is the fix I should have made in CL 153440. What I get for being in
a rush.

Fixes golang/go#29180

Change-Id: I7ee3e26173b86c70574b9710f84094e46db27a37
Reviewed-on: https://go-review.googlesource.com/c/153859
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
broady,2018-10-12 00:31:38,https://api.github.com/repos/golang/tools/git/commits/837e80568c097270a86b7410b4b6d2f8de427d2e,837e80568c097270a86b7410b4b6d2f8de427d2e,"godoc/proxy: remove use of httputil.ReverseProxy for /share

ReverseProxy doesn't re-set the Request's Host field, only
Request.URL.Host.
The HTTP/2 client prefers Request.Host over Request.URL.Host, so this
results in the request being sent back to the host that originally
accepted the request.
This results in an infinite redirect (and consumption of many connections to
itself).
See Issue golang/go#28168 for details.

Replace it with a simple proxy that drops all the headers (except
Content-Type).

I tried setting the proxy.Director, but it still didn't work. Could do
with some more investigation.

Fixes golang/go#28134.

Change-Id: I5051ce72a379dcacfbe8484f58f8cf7d9385024d
Reviewed-on: https://go-review.googlesource.com/c/141718
Run-TryBot: Chris Broadfoot <cbro@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2018-12-11 22:08:25,https://api.github.com/repos/golang/tools/git/commits/59cd96f77e7ec4d6e1fc7489f61915a82879680d,59cd96f77e7ec4d6e1fc7489f61915a82879680d,"go/packages: add doc for the current state of overlays

Change-Id: Iba4ea587d7a14a1b930df122c925d1bc2f39eda8
Reviewed-on: https://go-review.googlesource.com/c/153678
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2018-12-10 22:33:17,https://api.github.com/repos/golang/tools/git/commits/6a3e9aa2ab7749d72d1006ee484271b4a11f96c2,6a3e9aa2ab7749d72d1006ee484271b4a11f96c2,"imports: fix renamed sibling imports

Fix some logic errors around renamed sibling imports. The one in
findMissingImport was just a silly mistake, the one in addCandidate
was because I hadn't thought about renamed imports.

Change-Id: Iecd0b4e6151bff7b8cb6ad21065f017fb1245bfd
Reviewed-on: https://go-review.googlesource.com/c/153440
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2018-12-10 21:07:01,https://api.github.com/repos/golang/tools/git/commits/feaab9440b1acf247d8ef2caf2aad3a982db5615,feaab9440b1acf247d8ef2caf2aad3a982db5615,"cmd/golsp/integration/vscode: add language server client for testing

We've been using https://github.com/stamblerre/vscode-test-golsp to test
the golsp. Ideally, we'd like to add integration tests with the major
editors, so we're moving this basic extension into x/tools, with the
intention of integration tests here. This is not meant to be used by any
users of golsp; it is only for testing.

Change-Id: I7c45e7c638311d29629ff6d3291332e68cf4621a
Reviewed-on: https://go-review.googlesource.com/c/153438
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2018-12-10 20:09:03,https://api.github.com/repos/golang/tools/git/commits/1d424dbce8dd500e9e449fd3ff9d0668c09e2ae1,1d424dbce8dd500e9e449fd3ff9d0668c09e2ae1,"imports: clean up customization seam

imports exposes a few function vars that can be overridden to customize
its behavior. Now that the pass type exists, it should be easier to use
that as a rough API, rather than replacing functions piecemeal.

Remove all the existing hooks and just allow for fixImports to be
overridden entirely.

Change-Id: I8400eb64dab7b7b1bfa0b85fe2599df5780ddf37
Reviewed-on: https://go-review.googlesource.com/c/153437
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
heschik,2018-12-10 18:43:31,https://api.github.com/repos/golang/tools/git/commits/4c53570e0460bc32468f75bf9dd71c018d03bfa9,4c53570e0460bc32468f75bf9dd71c018d03bfa9,"imports: ignore globals in different packages

Some people put multiple packages' files in the same directory, most
commonly commands and code generators. Global variables from one package
should be ignored in other packages.

Change-Id: I9a5d27778570183dfe391dd3273dfa8277a29bf2
Reviewed-on: https://go-review.googlesource.com/c/153419
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2018-12-07 16:33:44,https://api.github.com/repos/golang/tools/git/commits/85346a39118e4327e405a18b545b118b5ff4febf,85346a39118e4327e405a18b545b118b5ff4febf,"cmd/golsp: enable logging to a default location

Add a default ""auto"" value to the ""--logfile"" flag that allows logs to be
written to a default location.

Change-Id: I1952ad2622b824795906c6b8183b58f88c35fb62
Reviewed-on: https://go-review.googlesource.com/c/153197
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2018-12-07 18:54:29,https://api.github.com/repos/golang/tools/git/commits/e00c0697c2f106a0b15ac44d6a8da2b4217935b1,e00c0697c2f106a0b15ac44d6a8da2b4217935b1,"go/internal/packagesdriver: expose function to return sizes

Change-Id: Ifc26abd280607401c8995b6b41fc0fd8ca29e7eb
Reviewed-on: https://go-review.googlesource.com/c/153199
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-12-07 18:58:01,https://api.github.com/repos/golang/tools/git/commits/4c874b978acba4ecd4a257d3bb8829dd5de17be8,4c874b978acba4ecd4a257d3bb8829dd5de17be8,"go/packages/packagestest: allow tests to also specify overlay contents

This is needed to write the more advanced test cases for editor integrated
tools.
The expectation system also uses the overlay rather than the file if it is
supplied.

Change-Id: I8fd21f4efe5ac5869fa6e25d3cd0d5096051e5e5
Reviewed-on: https://go-review.googlesource.com/c/153240
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2018-12-06 20:52:34,https://api.github.com/repos/golang/tools/git/commits/8634b1ecd393732f1e82ea5e9e42ddfcecc57333,8634b1ecd393732f1e82ea5e9e42ddfcecc57333,"internal/lsp: improve handling of code completion snippets

A few minor fixes: check that the insert text has the expected prefix
before removing it, use a bytes.Buffer to build up snippets, and check
that functions have parentheses in their insert text before trimming
them.

Change-Id: Iaeaf6fda25d6b0a375460b975188486685be1061
Reviewed-on: https://go-review.googlesource.com/c/152978
Reviewed-by: Ingo Oeser <nightlyone@googlemail.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-12-07 18:29:09,https://api.github.com/repos/golang/tools/git/commits/8bc39b98806018cdd1163c436250fa9b8048f834,8bc39b98806018cdd1163c436250fa9b8048f834,"go/packages: an empty overlay does not force source mode

we check length of the map, and a non empty map forces source mode.

Change-Id: Id314ad87b96d9154198122586fd8672a70c5ca95
Reviewed-on: https://go-review.googlesource.com/c/153198
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2018-12-05 17:51:22,https://api.github.com/repos/golang/tools/git/commits/bcd4e47d02889ebbc25c9f4bf3d27e4124b0bf9d,bcd4e47d02889ebbc25c9f4bf3d27e4124b0bf9d,"go/packages: check for containing files after overlay is processed

files specified in file= queries will now also be checked for in overlay
packages.

Fixes golang/go#29048

Change-Id: I096d02c3777e6c7decedfcb97c0d011ce9b47b28
Reviewed-on: https://go-review.googlesource.com/c/152797
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-12-05 22:00:36,https://api.github.com/repos/golang/tools/git/commits/3576414c54a492fc48cd913814eb209914c717f0,3576414c54a492fc48cd913814eb209914c717f0,"internal/lsp: refactor source package to use an interface

This change separates a cache package out of the
golang.org/x/tools/internal/lsp/source package. The source package now
uses an interface instead a File struct, which will allow it be reused
more easily. The cache package contains the View and File structs now.

Change-Id: Ia2114e9dafc5214c8b21bceba3adae1c36b9799d
Reviewed-on: https://go-review.googlesource.com/c/152798
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-12-04 23:16:34,https://api.github.com/repos/golang/tools/git/commits/62e1d13d531d487ad5dcafb9e929534f3b019339,62e1d13d531d487ad5dcafb9e929534f3b019339,"internal/lsp: add basic support for hover

This change adds a very simple implementation of hovering. It doesn't
show any documentation, just the object string for the given object.

Also, this change sets the prefix for composite literals, making sure we
don't insert duplicate text.

Change-Id: Ib706ec821a9e459a6c61c10f5dd28d1798944fa3
Reviewed-on: https://go-review.googlesource.com/c/152599
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-12-04 22:08:00,https://api.github.com/repos/golang/tools/git/commits/22934f0fdb6201c132a3dc6120150dcb1646d74c,22934f0fdb6201c132a3dc6120150dcb1646d74c,"go/...: use recommended issue tracker URLs

Change-Id: I249de6aad723f4c2c49dc028995f4f6d1fcc54fd
Reviewed-on: https://go-review.googlesource.com/c/152598
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
thanm,2018-12-04 17:02:32,https://api.github.com/repos/golang/tools/git/commits/555fafe5a21747e01395a24ad9a3f93460c2f9b9,555fafe5a21747e01395a24ad9a3f93460c2f9b9,"go/internal/gccgoimporter: update package to match std lib version

This CL updates the importer to match the original code in the std lib
but for the necessary changes to make the code work in x/tools and
with older versions of the std lib.

Notably, it brings over changes from:

       https://go-review.googlesource.com/c/152378

Change-Id: Icaa05303a05a226c710b5923d8574f255651fe47
Reviewed-on: https://go-review.googlesource.com/c/152577
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2018-12-03 22:14:30,https://api.github.com/repos/golang/tools/git/commits/3832e276fb482db22223edf38dc9166e795131e0,3832e276fb482db22223edf38dc9166e795131e0,"internal/lsp: implement type definitions

Extend definition tests to add typdef test.

Change-Id: Ibad988ae68f91d18f2c6b4739d758a536172fb35
Reviewed-on: https://go-review.googlesource.com/c/152239
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-12-04 18:36:50,https://api.github.com/repos/golang/tools/git/commits/65c3061cc97bab2988b6ac9a942120c468747220,65c3061cc97bab2988b6ac9a942120c468747220,"go/analysis: remove ""experimental"" warning

The interface is now stable.

Change-Id: I7dc3feb70131cddb003f9320272a0fbd9b314048
Reviewed-on: https://go-review.googlesource.com/c/152597
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-12-04 18:07:17,https://api.github.com/repos/golang/tools/git/commits/47a17e0312726ab807f59b03d85d312e67b37158,47a17e0312726ab807f59b03d85d312e67b37158,"go/analysis/unitchecker: use importer.ForCompiler under go1.12

importer.For does not populate the caller's token.FileSet
leading to spurious position information in diagnostics.

This change is the upstream fix for
https://go-review.googlesource.com/c/go/+/152258.

Fixes golang/go#28995

Change-Id: I9307d4f1f25c2b0877558426d4d71b3f1df99505
Reviewed-on: https://go-review.googlesource.com/c/152578
Reviewed-by: Robert Griesemer <gri@golang.org>
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mvdan,2018-11-19 13:34:02,https://api.github.com/repos/golang/tools/git/commits/e5f3ab76ea4b26ebea349e4994ee72d38250c9b0,e5f3ab76ea4b26ebea349e4994ee72d38250c9b0,"go/analysis: fix more printf pointer bugs

The first issue is that %b and %o can print pointers, but printVerbs
didn't reflect that:

	The %b, %d, %o, %x and %X verbs also work with pointers,
	formatting the value exactly as if it were an integer.

The second issue is that arrays can never be printed as pointers. This
was previously reported as part of #27672.

The third issue is that only %p can print all slices, maps, and
functions as if they were pointers. This differs from verbs like %b or
%o, which can't print these types as pointers.

Fix all of the issues above, and add extensive test cases covering all
the combinations. Verified all of them with an executed program. The
amount of test cases is perhaps overkill, but this is not the first time
we've gotten the printf pointer logic wrong.

Updates #27672.
Fixes #28858.

Change-Id: I62eb79d505fd1e250a16b90bda3c68b702f35a29
Reviewed-on: https://go-review.googlesource.com/c/149979
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianlancetaylor,2018-12-03 19:35:20,https://api.github.com/repos/golang/tools/git/commits/99b2a93e1f84a3dfa8da651b94e2e176187fc2a9,99b2a93e1f84a3dfa8da651b94e2e176187fc2a9,"go/analysis/unitchecker: improve error message for go tool vet

Previously running ""go tool vet"" said

vet: invalid command: want .cfg file (this reduced version of vet is
intended to be run only by the 'go vet' command)

With this change it says:

vet: invoking ""go tool vet"" directly is unsupported; use ""go vet""

Updates golang/go#28869

Change-Id: I603ab2f75bb52d860e5cd7466e89d051dfbf3f08
Reviewed-on: https://go-review.googlesource.com/c/152217
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
heschik,2018-11-20 20:24:09,https://api.github.com/repos/golang/tools/git/commits/ee45598d2ff288037f53f9e13ae0b1a6e2165ad5,ee45598d2ff288037f53f9e13ae0b1a6e2165ad5,"imports: create named imports for name/path mismatches (again)

For clarity and performance reasons, we want the fast path of goimports
to be purely syntactic. Packages whose import paths don't match their
package names make this harder. Before this CL, we parsed each imported
package to get its real package name. Now, we make named imports for
such packages, and on subsequent runs we don't have to do the extra
work.

A package name matches its import path if the name is the last segment
of the path, or the next-to-last before a version suffix vNN. gopkg.in
style .vNN suffixes are considered mismatching.

The previous attempt (CL 145699) failed because I assumed we'd be able
to find all packages from scratch. That's not true if the import path is
completely unrelated to the package name. To avoid that problem, rather
than removing and re-adding mismatched imports, we just literally add
names to them.

Fixes golang/go#28428

Change-Id: I93bd820f5956162ae9c99afa73bdcfc570a2e7b4
Reviewed-on: https://go-review.googlesource.com/c/152000
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
heschik,2018-11-19 22:56:05,https://api.github.com/repos/golang/tools/git/commits/5bbcdc15656ef390fab5dd6e8daf95354f7171e3,5bbcdc15656ef390fab5dd6e8daf95354f7171e3,"imports: redesign fixImports

Redesign fixImports to have a clearer workflow, and hopefully create
clear places to plug in go/packages. This change is mostly
performance/functionality neutral, but does clean up some corner cases.

The new flow centers around the pass type, which encapsulates the
process of loading information about the current code, adding possible
new imports, and trying to apply them. I'm hoping that it's easy to
understand what's happening just by reading fixImports, and that new
sources of information (e.g. a network service) fit well into that flow.

Where possible, I left the functions near where they were extracted in
hopes of making review easier, but it's probably not going to be easy.
Sorry. I might move them into a more reasonable order in a followup CL.

Notable modifications:
- The stdlib cache is restructured to match pass' internal storage.
- Sibling imports with conflicting names are considered.
- Package name lookups are batched, hopefully making it easier to plug
in go/packages.

Questions that might be worth answering:
- Should findImportGoPath really scan $GOROOT? Unless the user is working
on a development copy, it's totally redundant with the cache.
- What is the best way to combine candidates from multiple sources?
Right now the first one wins, and findStdlibCandidates relies on that
to get crypto/rand ahead of math/rand.
- In the third pass, should it assume sibling imports or should it
actually go load the exports? It didn't load them before, but that seems
arbitrary.

Change-Id: Ie4ad0b69bfbe9b16883f2b0517b1278575c9f540
Reviewed-on: https://go-review.googlesource.com/c/150339
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-12-01 00:13:28,https://api.github.com/repos/golang/tools/git/commits/d0ca3933b724e6be513276cc2edb34e10d667438,d0ca3933b724e6be513276cc2edb34e10d667438,"cmd/bundle: change the behavior of the -underscore flag

It used to rewrite golang.org/x/* imports to golang_org/x/*.

But https://golang.org/cl/147443 renamed golang_org/x to internal/x,
which broke the ability to run ""go generate"" in net/http, which runs
this command.

Given that net/http (and Go itself) is the only caller of cmd/bundle
or the -underscore flag, repurpose it to instead rewrite the
golang.org/x imports to internal/x, like CL 147443. But we keep its
name out of laziness and to minimize the number of cross-repo changes
needed.

Change-Id: I310ce8b45812a26c8b3522eaf407fffff138b1be
Reviewed-on: https://go-review.googlesource.com/c/152097
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>"
thanm,2018-11-29 16:37:58,https://api.github.com/repos/golang/tools/git/commits/e51e3523bf428a351d970ea09324e3600f0998f7,e51e3523bf428a351d970ea09324e3600f0998f7,"go/internal/gccgoimporter: update package to match std lib version

This CL updates the importer to match the original code in the std lib
but for the necessary changes to make the code work in x/tools and
with older versions of the std lib.

Notably, it brings over changes from:

   https://go-review.googlesource.com/c/152078
   https://go-review.googlesource.com/c/152077
   https://golang.org/cl/151997
   https://golang.org/cl/151557
   https://golang.org/cl/149957

including test fixes (we want tests to run when gccgo is available,
not just when all go tools are gccgo-based), bug fixes (primarily
related to aliases), performance enhancements, and new code to read
the V3 export data emitted by the most recent gccgo.

Change-Id: I2d34bace23769e62795599b93db8295169076594
Reviewed-on: https://go-review.googlesource.com/c/151717
Run-TryBot: Than McIntosh <thanm@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
matloob,2018-11-30 18:28:43,https://api.github.com/repos/golang/tools/git/commits/34bb05f9d8cbec78a19916357043e58ea7271089,34bb05f9d8cbec78a19916357043e58ea7271089,"go/packages: add support to overlays for unwritten files to existing packages

This support is not perfect, but should produce more accurate results than
the previous behavior, which is to silently drop those files.

Change-Id: Ia00c042bf303e9ec0fb1cbd579c0fccb29073de0
Reviewed-on: https://go-review.googlesource.com/c/151999
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-11-30 18:23:47,https://api.github.com/repos/golang/tools/git/commits/895048a75ecf3ee9bb32121d21f2f4bf20d96fb3,895048a75ecf3ee9bb32121d21f2f4bf20d96fb3,"go/expect: rewrite the expectation parser

The expectation langauge is LL(1) but the scanner does not support true
lookahead
This change adds a true LL(1) token stream and rewrites the parser in terms of
it.
Also clean up the error handling and use the behaviour to fix all the broken
edge cases, and then change the tests to cover the now correct behaviour.

Change-Id: If3d602cda490ed2f4732efce400eb8eabce8a8ec
Reviewed-on: https://go-review.googlesource.com/c/151998
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stribb,2018-11-29 18:01:04,https://api.github.com/repos/golang/tools/git/commits/1c3d964395ce8f04f3b03b30aaed0b096c08c3c6,1c3d964395ce8f04f3b03b30aaed0b096c08c3c6,"cmd/goimports: update Emacs install instructions

When I tried to use the Emacs instructions, I found there was no go-mode-autoloads available. Searching, I found: https://github.com/dominikh/go-mode.el/issues/222

Removing the (require) line solved my problem.

I don't know what the add-to-list invocation was supposed to do, so I propose removing it too.

Change-Id: I027654dd2c634f0747dcefee71f413866049a608
GitHub-Last-Rev: 7d43dabf6a46210eaaa849900c13cd52001878cb
GitHub-Pull-Request: golang/tools#57
Reviewed-on: https://go-review.googlesource.com/c/151680
Reviewed-by: Dominik Honnef <dominik@honnef.co>"
ianthehat,2018-11-29 18:51:30,https://api.github.com/repos/golang/tools/git/commits/e015b91f2629f3276e199cb5a549c8ad9dcdc275,e015b91f2629f3276e199cb5a549c8ad9dcdc275,"go/expect: allow multi-line expectations

This allows for multi-line comments where a new line is allowed between
expectations.
It also allows trailing new lines and commas in expectation lists.

Change-Id: I714f8ad483a0238281f26ceb74ce9e73d922af69
Reviewed-on: https://go-review.googlesource.com/c/151718
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2018-11-28 22:32:05,https://api.github.com/repos/golang/tools/git/commits/c5b00d9557fd23dd2a6d9c2f4c80a31d08cac00d,c5b00d9557fd23dd2a6d9c2f4c80a31d08cac00d,"go/packages: fix build breakage caused by math/bits to unsafe dep

Our tests compare import graphs from go/packages to expected graphs,
and one of the test cases imports math/bits. But in tip math/bits
picked up a dependency on unsafe, which means the expected graph
is different when run against a Go version >= go1.11. Remove that edge
before comparing against the expected graph to work around the breakage.

Change-Id: Ic586a75ba530741d251df9f87d0817a8e37d92ea
Reviewed-on: https://go-review.googlesource.com/c/151657
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-11-27 20:31:57,https://api.github.com/repos/golang/tools/git/commits/e782529d0ddd4bb872a63766185bebe89c96d1ae,e782529d0ddd4bb872a63766185bebe89c96d1ae,"go/packages/packagestest: allow expectations to have *regexp.Regexp and interface{} parameters

Change-Id: I86312ae2f30ba04290e9b7a001e0284439f4bfe6
Reviewed-on: https://go-review.googlesource.com/c/151346
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
aclements,2018-11-19 15:48:26,https://api.github.com/repos/golang/tools/git/commits/b4e97c0ed882dfd67cc1c1ade6ec4b2b67535c1f,b4e97c0ed882dfd67cc1c1ade6ec4b2b67535c1f,"cmd/stress: prefix logs with start date/time

Currently, stress logs are named ""/tmp/go-stress-"" plus a random
number. This makes it really annoying to tease apart failures from
different stress runs.

This CL changes the default prefix to

  ""/tmp/go-stress-<ISO 8601 date/time>-<random number>""

where the date/time part is when the stress command started.  This
naming clusters logs by stress invocation, making it easy to tease
apart invocations, even if there are multiple stresses running
concurrently or they are run back-to-back.

This also provides a flag to override this prefix.

Change-Id: I043e5ee7168ba6db4e2355e39b147071edbc6864
Reviewed-on: https://go-review.googlesource.com/c/150047
Run-TryBot: Austin Clements <austin@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
stamblerre,2018-11-22 04:51:01,https://api.github.com/repos/golang/tools/git/commits/36a8f0a386c7af6d9788f28ab9595dcf7150fded,36a8f0a386c7af6d9788f28ab9595dcf7150fded,"internal/lsp: sort completions according to rank

The LSP specification doesn't have a Score field, so we must provide
sortText to the protocol in order to maintain the correct order.

Change-Id: I075849f520c21a0465dfb2060c598d8bae5f876b
Reviewed-on: https://go-review.googlesource.com/c/151237
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ysmolsky,2018-11-21 22:04:10,https://api.github.com/repos/golang/tools/git/commits/04b5d21e00f1f47bd824a6ade581e7189bacde87,04b5d21e00f1f47bd824a6ade581e7189bacde87,"cmd/gorename: move gorename TODOs to a comment in the code

This CL moves gorename TODOs from -help output
to a comment in the code.

Fixes golang/go#25824

Change-Id: I60e843804ebf1e374882ea3424e4ab749d038c1f
Reviewed-on: https://go-review.googlesource.com/c/150937
Run-TryBot: Yury Smolsky <yury@smolsky.by>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-11-07 21:22:34,https://api.github.com/repos/golang/tools/git/commits/91f80e683c10fea00e7f965a1a7cac482ce52541,91f80e683c10fea00e7f965a1a7cac482ce52541,"go/packages: use absolute path of dir in call to go list for file= query

When running go list for a file= query, the go/packages code previously ran ""go list ."" command in the directory of the provided file. This was necessary for compatibility with the fallback, but caused problems when running file= queries for files in the module cache. We now use absolute directory paths (supported in Go >=1.11) in the non-fallback case and retain the previous behavior in the fallback case.

Change-Id: I3a9feaaeda12e068ec3d510b5f78437482c65b4c
Reviewed-on: https://go-review.googlesource.com/c/148199
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-11-21 18:55:09,https://api.github.com/repos/golang/tools/git/commits/72292f0c83ea51e7c11dd4c00018b4c599ec865c,72292f0c83ea51e7c11dd4c00018b4c599ec865c,"go/packages/packagestest: adds a benchmark version of TestAll

This is needed because testing.TB does not have a ""Run"" method for sub
tests, and the signature of the function it takes needs to match the
testing parameter.

Change-Id: I9201dd75891ed1bda300a4247fe7eac1e25bd30d
Reviewed-on: https://go-review.googlesource.com/c/150857
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2018-11-19 22:59:29,https://api.github.com/repos/golang/tools/git/commits/ff0519d4cf5e7411f0ac96c0571c3d8589d8458c,ff0519d4cf5e7411f0ac96c0571c3d8589d8458c,"go/packages: change driver communication mechanism

Pass in parameters to the driver in stdin rather than through argv.
This allows us to more easily route parameters to the driver and add
more parameters without breaking users. The driver doesn't need to
have the same interface as go list, because it's unlikely the driver interface
will converge with the go list interface.

We still pass in the query ""words"" to the driver in the argv, because
that's as good a place as any, but there's no ""list"" command.

Question: should we add a ""command"" option to the driverRequest struct?

Change-Id: Ifdbb3f84b6bfd04259f5ab63e756341d7f69de9b
Reviewed-on: https://go-review.googlesource.com/c/150337
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-11-20 23:18:33,https://api.github.com/repos/golang/tools/git/commits/b5f2cae84da8243ade5d6a1d2b6c92ec1907be0f,b5f2cae84da8243ade5d6a1d2b6c92ec1907be0f,"internal/lsp: fix a bug stopped package names from being printed

Also, trigger signature help on completion of a function (the ""("" as a
trigger character doesn't work if it's part of a completion).

Change-Id: I952cb875fa72a741d7952178f85e20f9efa3ebff
Reviewed-on: https://go-review.googlesource.com/c/150638
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-11-20 21:05:10,https://api.github.com/repos/golang/tools/git/commits/d5eafb537d9c9c477fe0431e9e50a952177f7230,d5eafb537d9c9c477fe0431e9e50a952177f7230,"internal/lsp: add InsertText to completions

If signature help is enabled, we should not offer parameter suggestions.
If signature help is not enabled, the user should be able to tab
through parameter completions.

Change-Id: I10990ef4aefb306ddbf51ed14cc1110065eba655
Reviewed-on: https://go-review.googlesource.com/c/150637
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
hummerd,2018-11-20 19:27:59,https://api.github.com/repos/golang/tools/git/commits/9c8bd463e3aca40b6288cd14f7b7703206ff743b,9c8bd463e3aca40b6288cd14f7b7703206ff743b,"cmd/guru: add type position to describe command

Add typepos field to json output of describe command. This field shows where
type of current (under cursor) identifier is defined. This will help code editors
implement command 'Go to type definition'.

Implements [#27308](https://github.com/golang/go/issues/27308)

Change-Id: I4e02ddbdc03fecec98135b8996f9562a88a9cfb8
GitHub-Last-Rev: be47e397a293a96d3d39776d6090d861e7904a24
GitHub-Pull-Request: golang/tools#50
Reviewed-on: https://go-review.googlesource.com/c/140379
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2018-11-20 00:19:47,https://api.github.com/repos/golang/tools/git/commits/b6bf2958931606642f3451852c25103758bd2fd9,b6bf2958931606642f3451852c25103758bd2fd9,"internal/lsp: fix formatting bug that keeps adding extra newlines

If a file ends with an empty newline, go/token treats the newline as the
final character of the previous line. VSCode, however, treats this as a
final line with no characters. We handle this by determining if the file
we are formatting ends with a newline character and updating the
protocol ranges accordingly.

Change-Id: Id8be0fd776ae65c8f0f937f3e718825e407cb217
Reviewed-on: https://go-review.googlesource.com/c/150338
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2018-11-13 16:13:53,https://api.github.com/repos/golang/tools/git/commits/fc4f04983f629377122b333bebb16bfd5a5dcfed,fc4f04983f629377122b333bebb16bfd5a5dcfed,"internal/lsp: add more testdata for completion and diagnostics

Change-Id: I2a73e51b60f76a2af0f8ff4d34220b551e0cd378
Reviewed-on: https://go-review.googlesource.com/c/150041
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-10-25 20:11:44,https://api.github.com/repos/golang/tools/git/commits/89e258047f9bd4255fae0d48139e1d5ff0a7b8dd,89e258047f9bd4255fae0d48139e1d5ff0a7b8dd,"go/ssa: convert tests to new annotation system

Change-Id: I4f44da4fa6a4976b790b6707300cd4facf99c9a5
Reviewed-on: https://go-review.googlesource.com/c/144738
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2018-11-15 02:11:16,https://api.github.com/repos/golang/tools/git/commits/6dfe7efaa95e7279f548deb2e1730469c462b6c8,6dfe7efaa95e7279f548deb2e1730469c462b6c8,"internal/lsp: add definition tests from godef

This makes our internal version of go to definition be tested with the
same test data that godef now uses

Change-Id: I04e488b6b9b2d891181f202ea1125b823a079c50
Reviewed-on: https://go-review.googlesource.com/c/150045
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2018-11-18 00:01:23,https://api.github.com/repos/golang/tools/git/commits/1aef8974947a2638978d28537afbfcbfeedbfc7b,1aef8974947a2638978d28537afbfcbfeedbfc7b,"internal/lsp: fix for limitations of export data

It is impossible to reconstruct a line and column correctly from export data, so
we have to attempt to find open and process the file in order to guess what the
original pos was when we have one that originated in export data.
This occurs in any time in go to definition when the target is not in the same
pacakge as the source.

Change-Id: Ib2ee404d4f1c39d8bd7f1fbc2096d8d6cbeed6f8
Reviewed-on: https://go-review.googlesource.com/c/150044
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
alandonovan,2018-11-19 17:28:29,https://api.github.com/repos/golang/tools/git/commits/d1f8dbfb0b0b6546bb10eb272220fab84b83bc61,d1f8dbfb0b0b6546bb10eb272220fab84b83bc61,"go/analysis/cmd/vet-lite: remove

The vet-lite tool was useful for developing the new cmd/vet but no
longer needs to exist. This changes removes the command and moves the
main.go file to the unitchecker directory where it serves as an
example and can still be built for testing and debugging.

See also https://go-review.googlesource.com/c/go/+/150297.

Change-Id: Ic10c7cd3aeeaa2e1397dd81939616c6877f7005d
Reviewed-on: https://go-review.googlesource.com/c/150298
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>"
ianthehat,2018-11-15 05:05:30,https://api.github.com/repos/golang/tools/git/commits/3d801af142726ed6a432e42984f4051d8eaaa13b,3d801af142726ed6a432e42984f4051d8eaaa13b,"internal/lsp: use subtests for all lsp categories

This makes it possible to run just one type of test if needed
Also add some verification that the right number of tests is being run
And finally collect all the expectations up front, including the completions.

Change-Id: Iee6045a8ad89fa399fefd03bc0712770701ec6f8
Reviewed-on: https://go-review.googlesource.com/c/149737
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2018-11-16 23:15:25,https://api.github.com/repos/golang/tools/git/commits/68f7e630ce0dd8d94fc02d63066bff53e1b90bfa,68f7e630ce0dd8d94fc02d63066bff53e1b90bfa,"internal/lsp: make all the tests work on 1.10

Also improve the error messages from a failing diagnostic tests so you can read
them.

Change-Id: I3554ce5a029de22a55a9636ed26ba02d95fc3246
Reviewed-on: https://go-review.googlesource.com/c/150042
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2018-11-19 16:24:30,https://api.github.com/repos/golang/tools/git/commits/31e4346e360c762ca753d162162fd6565ecb600e,31e4346e360c762ca753d162162fd6565ecb600e,"go/packages/packagestest: change the Export method to take a testing.TB

This allows it to be used in benchmarks as well as tests.

Change-Id: I1eb7307a0a7d27c541b14dd8b84c4bc2c770f3c9
Reviewed-on: https://go-review.googlesource.com/c/150257
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
mvdan,2018-11-16 15:51:55,https://api.github.com/repos/golang/tools/git/commits/139d099f662071f73eab0df7b7fdf9682c8f9e91,139d099f662071f73eab0df7b7fdf9682c8f9e91,"go/analysis: use TypeString when matching types

As Alan rightfully guessed, porting the stdmethods check to use go/types
required the use of types.TypeString not only when printing signatures
in warnings, but also when matching them.

Added a simple test case too.

Fixes golang/go#28792.

Change-Id: Ifbbdd4b1a2f1090d6f9a1674d52b8f0887a67d06
Reviewed-on: https://go-review.googlesource.com/c/149977
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
mvdan,2018-11-16 16:13:26,https://api.github.com/repos/golang/tools/git/commits/70b12541d3fecd5bcb3e66a8234612737629313b,70b12541d3fecd5bcb3e66a8234612737629313b,"go/analysis: unindent some pieces of code

All of these were quite heavily indented for no good reason; breaking or
returning early makes the code easier to read and follow.

Change-Id: Ic539517b07604d71495277b16f1b7eb60d2e3d3c
Reviewed-on: https://go-review.googlesource.com/c/149978
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-11-17 14:46:52,https://api.github.com/repos/golang/tools/git/commits/2ddaf7f79a0937ffa9072ede7b696fd084abfe86,2ddaf7f79a0937ffa9072ede7b696fd084abfe86,"go/analysis: two trivial doc tweaks

Change-Id: I9a85d4099550e56dd07dfb6e0f8921e3b3e8bd30
Reviewed-on: https://go-review.googlesource.com/c/150043
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-11-16 18:45:48,https://api.github.com/repos/golang/tools/git/commits/e77c06808af6317101c5a7124008b3f7e0103768,e77c06808af6317101c5a7124008b3f7e0103768,"godoc/redirect: improve Rietveld CL heuristic

Go's CL numbers as assigned by Gerrit have started to collide with the
lower numbers in the sparse set of CL numbers as returned by our old
code review system (Rietveld).

The old heuristic no longer works now that Gerrit CL numbers have
reached 150000.

Instead, include a map of the low Rietveld CL numbers where we might
overlap and bump the threshold heuristic up.

Updates golang/go#28836

Change-Id: Ice719ab807ce3922b885a800ac873cdbf165a8f7
Reviewed-on: https://go-review.googlesource.com/c/150057
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
alandonovan,2018-11-16 18:36:49,https://api.github.com/repos/golang/tools/git/commits/8e5aba0a364076a2c2450d665be0796cca1de6d9,8e5aba0a364076a2c2450d665be0796cca1de6d9,"go/analysis: harmonize flags across all checkers

The -json and -c=N flags, formerly belonging only to the
go/packages-based {single,multi}checkers, are now supported by
unitchecker as well.

The no-op -source, -v, -all, and -tags flags, formerly belonging only
to unitchecker, have moved to the analysisflags package, which is
common to all checkers.

The -flags flag now reports all registered flags (except the
{single,multi}checker-only debugging flags) rather than just those
related to analyzers, allowing one to say: 'go vet -json' or 'go vet -c=1'.

The code for printing diagnostics, either plain or in JSON, has been
factored and moved into the common analysisflags package.

This CL depends on https://go-review.googlesource.com/c/go/+/149960 to
cmd/go, which causes 'go vet' to populate the ID field of the *.cfg.
This field is used as a key in the JSON tree.

Added basic tests of the new -json and -c unitchecker flags.

Change-Id: Ia7a3a9adc86de067de060732d2c200c58be3945a
Reviewed-on: https://go-review.googlesource.com/c/150038
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-16 18:52:01,https://api.github.com/repos/golang/tools/git/commits/e3f267ad69a40df7ea4e43dcb68b86b3b310de30,e3f267ad69a40df7ea4e43dcb68b86b3b310de30,"go/analysis/cmd/vet-lite: remove pkgfact

It's only for debugging.

Change-Id: Ic2aacc6bcb52607c253f02b963e0e281213142b0
Reviewed-on: https://go-review.googlesource.com/c/150039
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-16 19:00:34,https://api.github.com/repos/golang/tools/git/commits/23984592fec6c30afc42cb38a146ad93922df564,23984592fec6c30afc42cb38a146ad93922df564,"go/analysis/cmd/vet: remove pkgfact, findcall analyzers

The suite used by this tool matters to GOROOT/src/cmd/vet/all and the
'vetall' builder.  Add a comment to this effect.

Change-Id: I2e16eb670b03a7bae8224625baaebd1298e2424c
Reviewed-on: https://go-review.googlesource.com/c/150040
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2018-11-16 17:16:36,https://api.github.com/repos/golang/tools/git/commits/8190738e3deacfce409a5a31df13d772eb04d527,8190738e3deacfce409a5a31df13d772eb04d527,"internal/lsp: add formatting functions to some common lsp protocol types

These are intended only for debug printing and error messages for the most
common protocol types that you need to know the contents of.

Change-Id: I1f0f7b17b4b12c3b26096b46808bce37c3722ced
Reviewed-on: https://go-review.googlesource.com/c/150037
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2018-11-15 01:42:30,https://api.github.com/repos/golang/tools/git/commits/f87c222f148786695d2ee5761b06751bb9211f61,f87c222f148786695d2ee5761b06751bb9211f61,"internal/lsp: fix and add tests for formatting

The go/format.Node function fails silently on malformed ASTs, even
though it writes out an invalid tree containing the strings ""BadExpr""
and ""BadStmt"". We fix this by checking for *ast.Bad{Expr,Decl,Stmt}
before running the function. Ultimately, this should be fixed upstream
and just return an error from format.Node.

Change-Id: I2ba25551f0e97c0321d8e757de67360af44044d7
Reviewed-on: https://go-review.googlesource.com/c/149613
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-11-15 01:47:28,https://api.github.com/repos/golang/tools/git/commits/fc2e60c3c3d93bf3ed50cc552213b44c5799b69c,fc2e60c3c3d93bf3ed50cc552213b44c5799b69c,"internal/lsp: make Definition handle embedded fields

This change allows it to jump to the type if you are directly on the
embedded field when you trigger go to definition.

Change-Id: I48825a5a683e69c0714978c76b1d188d40b38c5d
Reviewed-on: https://go-review.googlesource.com/c/149615
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
alandonovan,2018-11-15 03:13:33,https://api.github.com/repos/golang/tools/git/commits/5215be16cde3bead50519b4e7dd444c15c042b86,5215be16cde3bead50519b4e7dd444c15c042b86,"go/analysis/internal/unitchecker: reenable integration test

Fixes golang/go#28676

Change-Id: I361a5d61fb6acc90ff8c0167651a45cb9a433472
Reviewed-on: https://go-review.googlesource.com/c/149697
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
ianthehat,2018-11-15 02:05:48,https://api.github.com/repos/golang/tools/git/commits/1a405fd27e6556a89186464ce4fc110e42b95d52,1a405fd27e6556a89186464ce4fc110e42b95d52,"internal/lsp: better handling of .in files

This walks the list produced by the MustCopyFileTree call instead of
scanning the file system
It also removes the .in file from the copies, so only the trimmed
version will be present in the exported data set.

Change-Id: I95b0298ab49021a09f6b26e08158ce162b5a99e6
Reviewed-on: https://go-review.googlesource.com/c/149614
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
alandonovan,2018-11-15 02:31:18,https://api.github.com/repos/golang/tools/git/commits/f62bfb5415380414cb751ad4556504f5eac6179d,f62bfb5415380414cb751ad4556504f5eac6179d,"go/analysis/passes/printf: fix regression in ""recursive stringer"" logic

The recursive stringer check should report cases such as

   func (x T) String() string { return fmt.Sprint(x) }

in which the receiver x (or possibly &x) was passed into a fmt print call.
However, in translating it from the go/ast to the go/types representation,
I inadvertently made it report any situation in which a value of type T
was passed to fmt, even when the value is not x, as in:

   func (cons *cons) String() string {
	... fmt.Sprint(cons.cdr) ...
   }

Fixed and tested.

Change-Id: I57e88755c9989deaaad45cc306a604f3db4ee269
Reviewed-on: https://go-review.googlesource.com/c/149616
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-15 15:33:45,https://api.github.com/repos/golang/tools/git/commits/17409aa234eac3e745edad243c76873dd4a28619,17409aa234eac3e745edad243c76873dd4a28619,"go/analysis/unitchecker: a main function for vet-lite tools

(By ""vet lite"", we mean static tools that must be invoked by a build
system, such as 'go vet'.)

This CL publishes the former internal/unitchecker package.
Its misnamed Main function is renamed Run, and it has a new Main
that does the steps of a real main (log, flag, etc).

The motivation for this change is to reduce cmd/vet-lite to the point
of triviality to simplify the maintenance of the vendored copy of
x/tools in GOROOT, because GOROOT/src/cmd/vet will need a copy of that
logic. It is now essentially a one-liner.

Also, improve usage messages; analysisflags.PrintUsage wasn't
appropriate for all callers so it has been eliminated.
Each of {single,multi,unit}checker prints its own 1-line usage message.

Change-Id: I214c0e4ae7a2923eee8df3f7548341f2320cad2b
Reviewed-on: https://go-review.googlesource.com/c/149742
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-14 22:51:06,https://api.github.com/repos/golang/tools/git/commits/1fdeb1692e0bf54f07926710b72fe30e350c946f,1fdeb1692e0bf54f07926710b72fe30e350c946f,"go/analysis/internal/unitchecker: three fixes

- add a no-op -tags flag for legacy compatibility.
  Tags processing is done by go vet, but it passes the flag on.
  Exercised by cmd/go TestGoVetWithTags.

- rename OtherFiles to NonGoFiles in the JSON *.cfg file, to match
  the name actually used for this field (see github.com/golang/go/issues/27665).
  We really need to publish the types for this protocol.
  Exercised by cmd/go TestScript/vet_asm.

- suppress diagnostics in cfg.VetxOnly mode.
  Exercised by cmd/go TestTestVet.

Change-Id: I63259f1bd01531d110362e38190a220389b2ec4b
Reviewed-on: https://go-review.googlesource.com/c/149608
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-15 14:43:13,https://api.github.com/repos/golang/tools/git/commits/103f3f3613295dab738a2a545cb7bebad5fcb50b,103f3f3613295dab738a2a545cb7bebad5fcb50b,"go/analysis: doc updates

Change-Id: Id784b350955cc8d76a1cc903b3ff29be36414434
Reviewed-on: https://go-review.googlesource.com/c/149741
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-15 14:29:40,https://api.github.com/repos/golang/tools/git/commits/29e82b56d92429a9ee02a612a70638ef8d91d63b,29e82b56d92429a9ee02a612a70638ef8d91d63b,"go/analysis/passes/printf: actually use doc constant

Change-Id: If33697d77a86e4b29089f3a1ba096477a34062be
Reviewed-on: https://go-review.googlesource.com/c/149740
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2018-11-15 01:02:22,https://api.github.com/repos/golang/tools/git/commits/2a3f5192be2e07bdd7fb3acc42f44f67f69c9343,2a3f5192be2e07bdd7fb3acc42f44f67f69c9343,"internal/lsp: handle $GOROOT in file paths

This happens whenever we load standard library information from export
data, and prevents the editor from understanding the file names

Change-Id: If5c04176a3e669ba396f322275993616e51ec097
Reviewed-on: https://go-review.googlesource.com/c/149612
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-11-15 00:25:49,https://api.github.com/repos/golang/tools/git/commits/6778892796fe0c93b9407702b025045af13c0555,6778892796fe0c93b9407702b025045af13c0555,"internal/lsp: use the new marker support

We use the custom marker support to allow us to simplify the
annotations, making it much easier to understand the tests.

Change-Id: Id818a286e4e85f48cfe505f14ec82a80498e494c
Reviewed-on: https://go-review.googlesource.com/c/149611
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-11-14 23:27:09,https://api.github.com/repos/golang/tools/git/commits/cd212e53e13d2ebdbc69022c35b54c47553642c9,cd212e53e13d2ebdbc69022c35b54c47553642c9,"make the packagestest marker system more flexible

This exposes the ability to add markers to the public interface, and
changes the way markers are collected to make it so a standard call to
Expect can replicate the internal behaviour.
This allows custom rules to also add marks.

Also add a special EOF identifier that acts like a mark at the end of
the file in which it occurs.

Change-Id: Ic5e41cbc5b7ae3c4d1c5b8baba980147c1d22ef1
Reviewed-on: https://go-review.googlesource.com/c/149610
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-11-14 03:49:07,https://api.github.com/repos/golang/tools/git/commits/94339b83286c7f22eac192a60dc031c1128522e5,94339b83286c7f22eac192a60dc031c1128522e5,"internal/jsonrpc2: change to a more synchronous dispatch model

Delivering each message in a go routine turned out to be problematic, there are some messages
that must be fully processed before later messages are started, and there was no way to guarantee that.
We now push concurrence handling up to the higher level, this has the disadvantage of not being able to guarantee
we respond to call messages correctly, but its a small price to pay.
The LSP currently processes each message fully in order blocking the handler, while we still work on basic
functionality.

Change-Id: If0648c77713ddbe4fed69da97a57696f433b8002
Reviewed-on: https://go-review.googlesource.com/c/149497
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
alandonovan,2018-11-14 17:29:46,https://api.github.com/repos/golang/tools/git/commits/7d6b83ca4d93578cc5d93a0f3591e31be3da1a96,7d6b83ca4d93578cc5d93a0f3591e31be3da1a96,"go/analysis: exit nonzero upon diagnostics

This change causes singlechecker and multichecker to exit with the
correct error code: 0 for success, 1 for load/analysis and other
errors, 3 for diagnostics.  (We avoid 2 because the flag package uses
it.)

In JSON mode, errors in package loading, parsing, typechecking and
analysis are successfully in JSON format, with exit code 0.

+ Test.

Change-Id: Iaf130ed3d4cb3e747a628af6da8dc97d065aa869
Reviewed-on: https://go-review.googlesource.com/c/149603
Run-TryBot: Alan Donovan <adonovan@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2018-11-14 14:59:22,https://api.github.com/repos/golang/tools/git/commits/2f5a1a7a23ccb071b34c7e63dc1fe20680b98ba4,2f5a1a7a23ccb071b34c7e63dc1fe20680b98ba4,"go/analysis/passes/stdmethods: show p.T not dir/p.T in diagnostic

Type.String prints named types using the complete package path: ""dir/pkg.T""

The notation used by canonicalMethod, and the cmd/vet/all whitelist,
and the one users want to see, uses only the package name: ""pkg.T"".

Change-Id: If2334a8cca1fb80e947cb105530b946a5a8dec7b
Reviewed-on: https://go-review.googlesource.com/c/149597
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-14 15:25:09,https://api.github.com/repos/golang/tools/git/commits/4f7cb802ba5deae2bd4738c740f36760f11823ad,4f7cb802ba5deae2bd4738c740f36760f11823ad,"go/analysis/passes/asmdecl: turn two diagnostics into log messages

Vet issues a warning (non-error diagnostic) when, for example, it
cannot check an assembly file because the Go and asm symbols are in
different packages. The new analysis API has no concept of warnings:
any diagnostic always causes a non-zero exit.

This change turns the asmdecl diagnostics back into warnings using
log.Print, which is not ideal, but is necessary to pacify cmd/vet/all
and its whitelist during the transition. Better solutions would be for
the new analysis API to have a concept of warning, or for asmdecl to
be silent and cmd/vet/all's whitelist not to expect these messages.

Also, fix a bug in the ""cross-check"" predicate: cmd/vet confuses the
name of a package and its path. The a∕b∕c names (using Unicode
division slash) that appear in assembly correspond directly to the
path.

The only effective test of this change will be cmd/vet/all itself.

Change-Id: I2e402d48717df723e2efdc2379636ec9b204031d
Reviewed-on: https://go-review.googlesource.com/c/149598
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-13 19:17:48,https://api.github.com/repos/golang/tools/git/commits/99072bc9d7ade6fc470d6c040de25d2edeac78c4,99072bc9d7ade6fc470d6c040de25d2edeac78c4,"go/analysis/passes/stdmethods: rewrite check to use go/types

Now that vet can rely on go/types, there's no reason to do extra work to
avoid using it. The rewrite lets us get rid of the field list flattening
code, as well as the slight verbosity that comes with go/printer.

While at it, make the testdata/method.go expected errors be more
specific, to make sure that we're not breaking the warnings that are
printed.

This change was originally made to cmd/vet in
https://go-review.googlesource.com/c/148919

Change-Id: I123e64d369e521199712c9807583c53d428534ac
Reviewed-on: https://go-review.googlesource.com/c/149418
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2018-11-12 21:53:10,https://api.github.com/repos/golang/tools/git/commits/7e59e591a2617a3067db5fe2fe8e903b4c1b10cc,7e59e591a2617a3067db5fe2fe8e903b4c1b10cc,"internal/lsp: implement signature help

Add SignatureHelp functionality to source package. Tests will be added
in a subsequent change.

Change-Id: Ia43280946d96a984c5741273a00c12255d637b2a
Reviewed-on: https://go-review.googlesource.com/c/149177
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
alandonovan,2018-11-13 18:28:57,https://api.github.com/repos/golang/tools/git/commits/0a8e63141faff1a55ecf777e0e846c73e23fe6e7,0a8e63141faff1a55ecf777e0e846c73e23fe6e7,"go/analysis/passes/printf: fix false negative with nested pointers

Pointers to compound objects (structs, slices, arrays, maps) are only
followed by fmt if the pointer is at the top level of an argument. This
is to minimise the chances of fmt running into loops.

However, vet did not follow this rule. It likely doesn't help that fmt
does not document that restriction well, which is being tracked in
 #28625.

This change was originally made to cmd/vet as
https://go-review.googlesource.com/c/147997.

Updates #27672.

Change-Id: I65944cf355baedb4578af57046e2bbfd3fe6a9dc
Reviewed-on: https://go-review.googlesource.com/c/149319
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-13 19:09:50,https://api.github.com/repos/golang/tools/git/commits/c92118686944d3473aa83b6f834170f2ea2d074c,c92118686944d3473aa83b6f834170f2ea2d074c,"go/analysis/internal/analysisflags: add flag aliases for renames

Some of the Analyzers' names were changed during the refactoring.
These legacy flags ensure the old names continue to work.

Change-Id: I466aa38ec55071c944fb73571915aa7afb42dbc2
Reviewed-on: https://go-review.googlesource.com/c/149417
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-13 18:19:12,https://api.github.com/repos/golang/tools/git/commits/ea84011da2848032433bb8841abc1a9e5d5e2bb0,ea84011da2848032433bb8841abc1a9e5d5e2bb0,"go/analysis/passes/printf: fix some pointer false positives

fmt's godoc reads:

	For compound objects, the elements are printed using these
	rules, recursively, laid out like this:

		struct:             {field0 field1 ...}
		array, slice:       [elem0 elem1 ...]
		maps:               map[key1:value1 key2:value2 ...]
		pointer to above:   &{}, &[], &map[]

That is, a pointer to a struct, array, slice, or map, can be correctly
printed by fmt if the type pointed to can be printed without issues.

vet was only following this rule for pointers to structs, omitting
arrays, slices, and maps. Fix that, and add tests for all the
combinations.

This change was originally made to cmd/vet in
https://go-review.googlesource.com/c/147758

Updates #27672.

Change-Id: I7e25ecaeed619ae8b6ada79bccacba6b67171733
Reviewed-on: https://go-review.googlesource.com/c/149318
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-09 21:12:25,https://api.github.com/repos/golang/tools/git/commits/150d8ac28524ccbf76b28c54cc349359fc77060e,150d8ac28524ccbf76b28c54cc349359fc77060e,"go/analysis/cmd/vet-lite: remove deprecation warnings

Per discussion with Russ,
the -all/-source/-v flags now silently do nothing, and
the -printffuncs (et al) shims now silently delegate to -printf.funcs, and
the -NAME.enable (et al) flags are now called just -NAME.

Various minor tweaks to command-line help messages.

Change-Id: If6587937f58446e605eca4d3a5be0aaf6287065d
Reviewed-on: https://go-review.googlesource.com/c/148879
Reviewed-by: Russ Cox <rsc@golang.org>"
stamblerre,2018-11-12 22:37:20,https://api.github.com/repos/golang/tools/git/commits/a8570e12b66263a4d2bc406de590d7651e494615,a8570e12b66263a4d2bc406de590d7651e494615,"internal/lsp: use bytes.Buffer instead of strings.Builder

x/tools only supports Go 1.10 and Go 1.11, but it's such a simple fix to
support 1.9, so change from strings.Builder to bytes.Buffer.

Change-Id: Ie37d6c7da7ce7dbbd4e9ec933e1eff3304142a59
Reviewed-on: https://go-review.googlesource.com/c/149178
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2018-11-13 00:18:07,https://api.github.com/repos/golang/tools/git/commits/5a00de994c4c9af25ebd5e7321fc8ac8bd784feb,5a00de994c4c9af25ebd5e7321fc8ac8bd784feb,"go/packages: remove .s files from go list's CompiledGoFiles

This is a workaround for a go list regression that broke
go/packages but went unnoticed by because of a missing
call to packages.PrintErrors, added here.

Updates golang/go#28749

Change-Id: I1819a6143134a422791106ac037d3458ef864322
Reviewed-on: https://go-review.googlesource.com/c/149237
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
agnivade,2018-11-12 06:09:05,https://api.github.com/repos/golang/tools/git/commits/c3404317771e23bb54e22f9afec8cadd7ca6c940,c3404317771e23bb54e22f9afec8cadd7ca6c940,"cmd/godoc: start RunIndexer synchronously when index is present

Until the index is read completely, search requests will serve
an ""indexing in progress"" message. We make this synchronous
to allow the index to be read completely before starting to serve
requests.

Fixes golang/go#24965

Change-Id: I6b094374a9c5cc923f0582107dde2b652e64fd96
Reviewed-on: https://go-review.googlesource.com/c/148998
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mikolajb,2018-11-10 17:09:09,https://api.github.com/repos/golang/tools/git/commits/5f9a5413737ba4b4f692214aebee582b47c8be74,5f9a5413737ba4b4f692214aebee582b47c8be74,"internal/fastwalk: avoid slice bounds out of range for long file names

Fixes golang/go#28715

Change-Id: Ibed78d2376f4ec010ee9e5e772069afd14fd5552
Reviewed-on: https://go-review.googlesource.com/c/148884
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2018-11-12 19:15:47,https://api.github.com/repos/golang/tools/git/commits/7f27c5d70a7d3c068d02c9ad0c0e18bd1cf32945,7f27c5d70a7d3c068d02c9ad0c0e18bd1cf32945,"internal/lsp: move diagnostics logic to source directory

Change-Id: I6bea7a76501e852bbf381eb5dbc79217e1ad10ac
Reviewed-on: https://go-review.googlesource.com/c/148889
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-11-07 17:58:55,https://api.github.com/repos/golang/tools/git/commits/4b1f3b6b1646cd96503e999bfa428631d60c74ca,4b1f3b6b1646cd96503e999bfa428631d60c74ca,"internal/lsp: make format work on the ast not the source

This makes the format code use the AST that is already cached on the file to do
the formatting. It also moves the core format code into the source directory.

Change-Id: Iaa79169708e92525cce326ea094ab98144fe1011
Reviewed-on: https://go-review.googlesource.com/c/148198
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
stamblerre,2018-11-07 20:21:31,https://api.github.com/repos/golang/tools/git/commits/806e1cfd89d53e23e5143a4b6f10596cbf85ea7a,806e1cfd89d53e23e5143a4b6f10596cbf85ea7a,"internal/lsp: add a preliminary test for completion

Use the packagestest framework to test completion. Add support for a
slice of token.Position to packagestest to support this.

Change-Id: Ie5ddece4446a3c74419727461a77faa3788cb040
Reviewed-on: https://go-review.googlesource.com/c/148197
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>"
matloob,2018-11-09 21:24:45,https://api.github.com/repos/golang/tools/git/commits/680468b7556f697577414fb99a2dbdcb97626720,680468b7556f697577414fb99a2dbdcb97626720,"go/packages: fix flaky TestJSON and reenable it on Go 1.10

The fallback driver wasn't returning the roots in a
deterministic order because it was using sticking them in
a map and then iterating over that map to get each element.
Put them into a slice instead (and make a few small
associated changes) to preserve behavior.

Fixes golang/go#28040
Fixes golang/go#28609

Change-Id: Ib8f8c88d65b7a48b2b04ca91e2d3c316d5bb5803
Reviewed-on: https://go-review.googlesource.com/c/148880
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dpinela,2018-11-10 12:53:12,https://api.github.com/repos/golang/tools/git/commits/6d71ab8aade08605ffc36622332264e2f6991952,6d71ab8aade08605ffc36622332264e2f6991952,"go/internal/gcimporter: ensure tests pass even if GOROOT is read-only

This mainly entails writing compiler output files to a temporary
directory, as well as the corrupted files in TestVersionHandling.

This is a backport of CL 146119.

Fixes golang/go#28644

Change-Id: I5701fe3fda7d6364411eef8265c575c279dbf9a1
Reviewed-on: https://go-review.googlesource.com/c/149017
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2018-11-08 21:54:54,https://api.github.com/repos/golang/tools/git/commits/92d8274bd7b8a4c65f24bafe401a029e58392704,92d8274bd7b8a4c65f24bafe401a029e58392704,"go/analysis/passes/printf: preload with facts for std lib

This change adds to the list of standard library functions known to be
print or printf wrappers.

Although the printf Analyzer is capable of identifying wrapper
functions in the standard library, some drivers (e.g. Bazel) do not
apply analyzers to the standard packages. Really this is a  bug
in those drivers but it is not likely to be fixed for a while.

Change-Id: I2032d0cb5fcb50e7b9933a75809becdd680380ec
Reviewed-on: https://go-review.googlesource.com/c/148572
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-08 19:12:54,https://api.github.com/repos/golang/tools/git/commits/a00bb74625bdd57f48e427e23c0b26f505882e50,a00bb74625bdd57f48e427e23c0b26f505882e50,"go/analysis/cmd/vet-lite: make CLI closer to cmd/vet

Details:
- Add -source, -v, and -all flags to vet-lite.
  These have no effect and issue a warning.
- Add usage message to vet-lite that lists all
  analyzers and explains -foo.enable and other flags.
- Factor this help message (common to vet-lite and
  multichecker) into analysisflags.
- Add legacy aliases of new flags.
  e.g. -printfuncs is now -printf.funcs
  The old names work but issue a warning when used.

Also: update comments to say -vettool not$GOVETTOOL

I think we should probably do away with singlechecker
in a follow-up: a singleton multichecker is good enough,
and will allow us to remove cases in the flag-processing
logic.

Change-Id: Ib62f16b5e2f4c382a29e6300a6246b2db9e08049
Reviewed-on: https://go-review.googlesource.com/c/148559
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-09 18:09:17,https://api.github.com/repos/golang/tools/git/commits/4e34152f16764ffb54b96842e6a72195df6e2d07,4e34152f16764ffb54b96842e6a72195df6e2d07,"cmd/vet: lostcancel: suppress the check in the main.main function

When main.main returns, the process exits, so there's no need to cancel contexts.

This CL was originally reviewed as
  https://go-review.googlesource.com/c/go/+/106915
and then retried in
  https://go-review.googlesource.com/c/go/+/148758
but then reverted due to an embarrassing sequence
of careless moves.

Change-Id: Icdee0650996a442023e030697f10d2c31fd5fdff
Reviewed-on: https://go-review.googlesource.com/c/148877
Run-TryBot: Alan Donovan <adonovan@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
mvdan,2018-11-09 16:59:25,https://api.github.com/repos/golang/tools/git/commits/d3a25d70bd81b856234d22c2b05b334ebd2b46ea,d3a25d70bd81b856234d22c2b05b334ebd2b46ea,"go/packages: fix minor godoc typo

Spotted while reading some docs.

Change-Id: I856c73b55f459fd980591ba5525d5170d035d79c
Reviewed-on: https://go-review.googlesource.com/c/148797
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stapelberg,2017-03-17 11:49:50,https://api.github.com/repos/golang/tools/git/commits/138c20b9325349fbf5b50a83e7f2f0853adaa591,138c20b9325349fbf5b50a83e7f2f0853adaa591,"go/callgraph/rta: fix comment

Change-Id: I52d37297118f9e99f3a71d3a9cf47a01da4aa72c
Reviewed-on: https://go-review.googlesource.com/c/38260
Reviewed-by: Alan Donovan <adonovan@google.com>"
nickng,2017-05-03 22:14:54,https://api.github.com/repos/golang/tools/git/commits/8542fc29bd5bc48c006896de3f8af38acc47482b,8542fc29bd5bc48c006896de3f8af38acc47482b,"go/ssa: updated inconsistent docs after Program.Method rename

Fixes golang/go#20225

Change-Id: Ifd069546698981f3c6a3673dd73a1bd770560f8b
Reviewed-on: https://go-review.googlesource.com/c/42570
Reviewed-by: Alan Donovan <adonovan@google.com>"
matematik7,2018-07-16 15:54:33,https://api.github.com/repos/golang/tools/git/commits/84d77ece312ed504d11e7151508732a4c8c8b6ae,84d77ece312ed504d11e7151508732a4c8c8b6ae,"cmd/bundle: permit empty -prefix

This enables bundling of programs with `main` method to single file.
I used this to upload code for the new codejam.

Change-Id: I9e65ba8717c1d81d6fb9bef8f234c21fc5b91421
GitHub-Last-Rev: 5d0d623c46ff1629e7371693ddf0916df328e319
GitHub-Pull-Request: golang/tools#32
Reviewed-on: https://go-review.googlesource.com/c/105515
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-11-08 20:16:25,https://api.github.com/repos/golang/tools/git/commits/879803d4ad65db084a5d3bca52759684f3cd8943,879803d4ad65db084a5d3bca52759684f3cd8943,"go/analysis/passes/unmarshal: port vet's unmarshal checker

The checker has been modified to avoid making two memory allocations
for every CallExpr in the program.

Originally: https://go-review.googlesource.com/c/139997
Updates golang/go#27564

Change-Id: I168869272a1d78d47d84c049aba619bb223cad70
Reviewed-on: https://go-review.googlesource.com/c/148562
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-08 20:38:15,https://api.github.com/repos/golang/tools/git/commits/77439c55185e6a04040f35d2fe78f2b9bc61d8cc,77439c55185e6a04040f35d2fe78f2b9bc61d8cc,"go/analysis/passes/shadow: add shadow command

In vet, the shadow check is experimental, meaning not on by default.
The new analysis API has no concept of experimental, but you can
easily supply a different checker. By providing a shadow command, we
make it easy for users that want it to run it:

  $ go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow
  $ go vet -vettool $(which shadow) my/project

Change-Id: I25dc7f3c830296121c7217e4615e8ff90e1b7c79
Reviewed-on: https://go-review.googlesource.com/c/148565
Reviewed-by: Michael Matloob <matloob@golang.org>"
fhs,2018-09-01 04:14:33,https://api.github.com/repos/golang/tools/git/commits/5b8b0ce6cc69da1713b40934d68d7b8a72a74743,5b8b0ce6cc69da1713b40934d68d7b8a72a74743,"go/packages: pass TestConfigDefaultEnv on Plan 9

Change-Id: Ice0d44c97dc76bf0ebfe433577d55eb6763cb6d3
Reviewed-on: https://go-review.googlesource.com/c/132601
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-11-08 20:58:35,https://api.github.com/repos/golang/tools/git/commits/fc0741f0ff8b1dbd15f5b048b7994d1072e6bb72,fc0741f0ff8b1dbd15f5b048b7994d1072e6bb72,"go/analysis/printf: delete

The printf checker is in the passes/ subdirectory.

Change-Id: I0a912231280bc954fee3088050541ba5ecb17dde
Reviewed-on: https://go-review.googlesource.com/c/148571
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-11-08 19:41:29,https://api.github.com/repos/golang/tools/git/commits/353f99afd4471fb873360a646923246a42c3db37,353f99afd4471fb873360a646923246a42c3db37,"go/analysis/passes/cgocall: fix typo in comment

Change-Id: Ie71f93c1fa0d5e7de498ad2af611c4db8a27171d
Reviewed-on: https://go-review.googlesource.com/c/148561
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-03 20:24:43,https://api.github.com/repos/golang/tools/git/commits/e5d4b58ff5020f74d6b9085bc1db45e898c4724f,e5d4b58ff5020f74d6b9085bc1db45e898c4724f,"go/analysis/passes/cgocall: analyze raw cgo files (again)

The cgocall analyzer was originally written in vet to analyze ""raw"" cgo files,
which are type-checked on a best-effort basis.  However, the go/analysis
API presents analyzers with ""cooked"" cgo files, which are well-typed
legal Go but obscure the relationship between a call C.f(...) and its arguments.
Prior to this CL, cgocall attempted to ""uncook"" the file, which was
as predictably fragile as it sounds, and it rapidly broke as the cgo
recipe evolved.

This change causes cgocall to parse, modify, type-check and analyze ""raw""
cgo files. The approach (based on dot-importing the ""cooked"" package)
is rather too clever but should be more robust than the one it replaces.

Fixes golang/go#28566

Change-Id: I3092a313c64d27153eaaa115fe8635abfed17023
Reviewed-on: https://go-review.googlesource.com/c/147317
Reviewed-by: Michael Matloob <matloob@golang.org>"
bradfitz,2018-11-08 18:11:12,https://api.github.com/repos/golang/tools/git/commits/dfbbb7b6d4af9851715d68a9c8ac612b21592ee6,dfbbb7b6d4af9851715d68a9c8ac612b21592ee6,"go/packages, go/analysis/internal/unitchecker: skip broken tests for now

Updates golang/go#28609
Updates golang/go#28676

Change-Id: Id0fbc6cb0ce14aed9b20afcd0488708df33d5a62
Reviewed-on: https://go-review.googlesource.com/c/148637
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2018-11-08 01:57:08,https://api.github.com/repos/golang/tools/git/commits/c26e340d2f6d4e95b683e6fe994653436ca30337,c26e340d2f6d4e95b683e6fe994653436ca30337,"internal/lsp: refactor completion and move into source directory

The completion function belongs in internal/lsp/source, so move it
there. Some small refactoring of completion, by moving each type of
completion into helper functions that append to the list of results.

Change-Id: I8599092906609591d499183657fe2d21d1f74df1
Reviewed-on: https://go-review.googlesource.com/c/148397
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
heschik,2018-11-07 22:40:17,https://api.github.com/repos/golang/tools/git/commits/a28dfb48e06b2296b66678872c2cb638f0304f20,a28dfb48e06b2296b66678872c2cb638f0304f20,"revert ""imports: create named imports for name/path mismatches""

This reverts CL 145699 (commit 864069cfd1b106326ae556b3ca5c1d6b94645987)

Reason for revert: If the mismatch is bad enough that goimports can't find
it again, then the import is just removed, even if the user adds it back again.

Fixes #28645.

Change-Id: I6c8fc5434c2b56c73b260bcec2c12d8746fac4ad
Reviewed-on: https://go-review.googlesource.com/c/148237
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2018-11-05 22:36:47,https://api.github.com/repos/golang/tools/git/commits/4ca49954c3f2dca17746a9bd2d3f253c4849d9ee,4ca49954c3f2dca17746a9bd2d3f253c4849d9ee,"go/ast/astutil: allow AddNamedImport to add imports with different names

This change makes AddNamedImport more symmetrical to DeleteNamedImport
in behavior, signature, and documentation.

In Go, it is valid to import a package (identified by an import path)
with different names in a single .go file¹. For example, this is ok,
and the program will build as long as there are no unused imports²:

	import (
		""path""
		. ""path""
		_ ""path""
		pathpkg ""path""
	)

The four imports (represented by ast.ImportSpec type) have the same
import path, but different names.

It's currently possible to use DeleteNamedImport to delete the exact
{name, import path} ast.ImportSpec from an AST.

Previously, it wasn't possible to use AddNamedImport to add an exact
{name, import path} ast.ImportSpec if the AST already has another
ast.ImportSpec with the same import path (but different name).
This change fixes that, making it possible to use AddNamedImport as
expected.

Rename the ipath parameter to path in AddNamedImport for consistency
with DeleteNamedImport. Also change the language used in its
documentation to be more precise and consistent with DeleteNamedImport.

Add test cases for this behavior. The DeleteNamedImport test cases
were passing before any changes to the astutil code.

Add test coverage for the return bool value of {Add,Delete}NamedImport.
Document the behavior of DeleteNamedImport when there are duplicate
matching imports.

Simplify string(buf.Bytes()) to buf.String() in test helper code.

¹ https://golang.org/ref/spec#Import_declarations
² https://play.golang.org/p/bi6L34rQbcD

Fixes golang/go#28605
Fixes golang/go#16411

Change-Id: I70e887f5174764ab1cf32a761c8c734e216eea67
Reviewed-on: https://go-review.googlesource.com/c/147448
Run-TryBot: Dmitri Shuralyov <dmitshur@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-11-06 22:04:41,https://api.github.com/repos/golang/tools/git/commits/34b416bd17b3a33e02879e34237e92c171550ed5,34b416bd17b3a33e02879e34237e92c171550ed5,"go/packages: change the driverResponse.Sizes to have type StdSizes

This will allow Sizes to be marshalled and unmarshalled. All the Sizes
we care about ane StdSizes anyways.

Change-Id: I79d1dcaebba32f7730de4375945e372eeefa78fe
Reviewed-on: https://go-review.googlesource.com/c/147978
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
heschik,2018-11-07 19:55:33,https://api.github.com/repos/golang/tools/git/commits/42c3d2e9aae13638ff117fbcbeb63f06dd5393ba,42c3d2e9aae13638ff117fbcbeb63f06dd5393ba,"internal/gopathwalk: ignore $GOROOT/.../vendor/ in module mode

go list in module mode doesn't like looking at vendor directories in
GOROOT. Skip them.

Change-Id: Iec501fbab70914ea6dd76dcbed97ecda461358d0
Reviewed-on: https://go-review.googlesource.com/c/148159
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2018-10-29 21:38:22,https://api.github.com/repos/golang/tools/git/commits/864069cfd1b106326ae556b3ca5c1d6b94645987,864069cfd1b106326ae556b3ca5c1d6b94645987,"imports: create named imports for name/path mismatches

For clarity and performance reasons, we want the fast path of goimports
to be purely syntactic. Packages whose import paths don't match their
package names make this harder. Before this CL, we parsed each imported
package to get its real package name. Now, we make named imports for
such packages, and on subsequent runs we don't have to do the extra
work.

A package name matches its import path if the name is the last segment
of the path, or the next-to-last before a version suffix vNN. gopkg.in
style .vNN suffixes are considered mismatching.

goimports already had almost exactly the desired logic, but only when
adding a new import. So the bulk of this change is simply removing the
logic that allowed it to recognize that a mismatched import satisfied
some uses. With that gone, it will remove those imports as unused, then
add a new renamed import. Some comments may be destroyed.

Fixes golang/go#28428

Change-Id: I53846e6046affb420f41719f84c71086c5b9e5e6
Reviewed-on: https://go-review.googlesource.com/c/145699
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2018-11-06 19:04:07,https://api.github.com/repos/golang/tools/git/commits/15ad1aa0cbfab7f8ca1631cbff233055bce788bc,15ad1aa0cbfab7f8ca1631cbff233055bce788bc,"internal/lsp: implement go to definition

This enables go to definition for the lsp.
It has one known non working case (where the filenames have $GOROOT in them)

Change-Id: I142c6e04b8691c5076dfcd55592ea710b4b361a4
Reviewed-on: https://go-review.googlesource.com/c/148158
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2018-11-05 22:54:12,https://api.github.com/repos/golang/tools/git/commits/d0600fd9f1e4e671be16626adc0d76d54a50dfdf,d0600fd9f1e4e671be16626adc0d76d54a50dfdf,"internal/lsp: make source independent of protocol

I realized this was a mistake, we should try to keep the source
directory independent of the LSP protocol itself, and adapt in
the outer layer.
This will keep us honest about capabilities, let us add the
caching and conversion layers easily, and also allow for a future
where we expose the source directory as a supported API for other
tools.
The outer lsp package then becomes the adapter from the core
features to the specifics of the LSP protocol.

Change-Id: I68fd089f1b9f2fd38decc1cbc13c6f0f86157b94
Reviewed-on: https://go-review.googlesource.com/c/148157
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2018-11-06 21:22:53,https://api.github.com/repos/golang/tools/git/commits/aa0cdd1ef5f10a010b3c213eaf04e533755a046f,aa0cdd1ef5f10a010b3c213eaf04e533755a046f,"go/packages: remove contains: query. it's been superceeded by file=

Change-Id: I472787d50e799ef0ee663168201933dd70a1a487
Reviewed-on: https://go-review.googlesource.com/c/147977
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-11-05 23:13:37,https://api.github.com/repos/golang/tools/git/commits/e21233ffa6c386fc230b4328493f77af54ff9372,e21233ffa6c386fc230b4328493f77af54ff9372,"go/packages: remove unnecessary TODO

See adonovan's comment here:
https://go-review.googlesource.com/c/tools/+/146757/6/go/packages/golist.go#330

Change-Id: I7885fc1e7787c6b265be345f8622476b69d14325
Reviewed-on: https://go-review.googlesource.com/c/147447
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-11-06 02:23:02,https://api.github.com/repos/golang/tools/git/commits/6f4a86804e93aa17a473d309add2fb66cd74f133,6f4a86804e93aa17a473d309add2fb66cd74f133,"internal/lsp: add implementation of completion to LSP

Add an autocompletion implementation to the LSP. Also, add a function
that type-checks a package at a certain position, returning an *ast.File
and token.Pos for querying completion.

Change-Id: I288d4e6ed168e6014e79a4436f31f5b4a99b7139
Reviewed-on: https://go-review.googlesource.com/c/147657
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2018-11-01 19:45:26,https://api.github.com/repos/golang/tools/git/commits/78dc5bac0cacea7969e98b79c3b86597e0aa4e25,78dc5bac0cacea7969e98b79c3b86597e0aa4e25,"go/packages: determine sizes by calling go list

This is more reliable than looking in the environment.

Change-Id: I96c093b89faaece6b6256eefb4a4aac4d66b9cc9
Reviewed-on: https://go-review.googlesource.com/c/146757
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2018-11-02 22:10:49,https://api.github.com/repos/golang/tools/git/commits/e504f914a84bac643e28c885e01664d8a4e5703c,e504f914a84bac643e28c885e01664d8a4e5703c,"internal/lsp: make file a first class concept

A file is strongly associated with a view, and knows how to manage it's own
contents.
We can also now track files that are not ""active""

Change-Id: Ib9474cd40e5caa3db6596548612a9f90168b8a19
Reviewed-on: https://go-review.googlesource.com/c/147204
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2018-11-02 20:15:31,https://api.github.com/repos/golang/tools/git/commits/9b5bafe36f85e86bd27ccf7989d811fa697f5872,9b5bafe36f85e86bd27ccf7989d811fa697f5872,"internal/lsp: extract view to its own package

This allows us to write the lsp verbs in terms of a stable underlying source
management layer.
This should make it easier to refactor the underlying layer to add more powerful
caching and incremental modes as we go.

Change-Id: Iab97b061d80394a6fa6748a93a4c68f2deb46129
Reviewed-on: https://go-review.googlesource.com/c/147201
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ainar-g,2018-11-03 10:45:46,https://api.github.com/repos/golang/tools/git/commits/f1b4bd93c9465ac3d4edf2a53caf28cd21f846aa,f1b4bd93c9465ac3d4edf2a53caf28cd21f846aa,"go/ssa: fix vet issues

The new go/analysis/cmd/vet tool found a few issues. Fix them by
explicitly ignoring results where needed and renaming examples in
accordance to package testing's guidelines to make them appear on the
godoc pages.

This change doesn't touch go/ssa/interp/external.go because the
possible misuse of package unsafe there looks intentional.

Change-Id: Id63109e3797818a5e869fe8ed1bc1476959541f2
Reviewed-on: https://go-review.googlesource.com/c/147297
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2018-11-05 19:24:16,https://api.github.com/repos/golang/tools/git/commits/fc67db3d9a53227ff9e3a1d2c9fe897b3227a0c6,fc67db3d9a53227ff9e3a1d2c9fe897b3227a0c6,"go/packages: fix crash

This is based on 147340 and has the same test, but with a different fix.
We now produce a nice error if there is an empty root, instead of
crashing, and the cause of empty roots in go list has been fixed.
The underlying call to go list is returning the same package more than
once, and we only fix the first entry in the root list, so the second
one got left blank.
The fix was to not add the second duplicate copy to the output of the
driver at all.

Change-Id: I9f1b2f0fd63635ba101cdd3c8a5108530e968ba9
Reviewed-on: https://go-review.googlesource.com/c/147440
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2018-11-05 19:48:08,https://api.github.com/repos/golang/tools/git/commits/c76e1ad98a635a7c069d7ab43d31fcf38381facc,c76e1ad98a635a7c069d7ab43d31fcf38381facc,"internal/lsp: add copyright notices to files that were missing them

Change-Id: Ifb3bedeed7a38366da234b2329c4078931d1a208
Reviewed-on: https://go-review.googlesource.com/c/147441
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-11-05 17:47:03,https://api.github.com/repos/golang/tools/git/commits/ebdbadb46e45d9ad83679a453c8c922be3d13eb1,ebdbadb46e45d9ad83679a453c8c922be3d13eb1,"internal/lsp: fix LSP tests to be compatible with Go 1.10

Change golang/go#145697 added tests for diagnostics in the LSP implementation,
but these test did not work with Go 1.10. This change skips tests that
require Go 1.11.

Change-Id: I52bd2df484b5786395edac2c1c8592c83ac1aaa4
Reviewed-on: https://go-review.googlesource.com/c/147439
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-10-31 00:12:26,https://api.github.com/repos/golang/tools/git/commits/96e9e165b75e735822645eff82850b08c377be36,96e9e165b75e735822645eff82850b08c377be36,"cmd/golsp: format logging for the lsp inspector

This improves the logging capabilities of the jsonrpc 2 library to always
include the method and also an optional elapsed time.
This is used to implement an lsp inspector compatible logging mode in the golsp.

Change-Id: I2f7ac8b9298c4364b1b89cf6f696b534557ed139
Reviewed-on: https://go-review.googlesource.com/c/146157
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
heschik,2018-11-02 21:43:46,https://api.github.com/repos/golang/tools/git/commits/1a6034dbfc3be629037eb833fd808ad97356db9d,1a6034dbfc3be629037eb833fd808ad97356db9d,"go/packages: small fixes

For performance, bail out of runNamedQueries before running go env if
there's nothing to do.

Add t.Helper() calls to packagestest.TestAll.

Escape # in packagestest.Export. The testing package adds #NN suffixes
to subtests that have redundant names.

Log how long gopathwalk.Walk took for name= queries when debug is on.

Change-Id: I37cb0ed11cf58e1693e29dea04697e5885ecc62b
Reviewed-on: https://go-review.googlesource.com/c/147203
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-10-29 22:12:41,https://api.github.com/repos/golang/tools/git/commits/f7a8a58e8d082a049620072678a245a18b8d26c4,f7a8a58e8d082a049620072678a245a18b8d26c4,"internal/lsp: use packagestest markers to test diagnostics

Add some basic tests for diagnostics using the new
go/packages/packagestest framework.

Change-Id: I6a7bfba6c392928a9eb123ab71ceb73785c12600
Reviewed-on: https://go-review.googlesource.com/c/145697
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2018-10-31 23:47:44,https://api.github.com/repos/golang/tools/git/commits/633a9364edf77cf82cad886e581a0518f8189fbe,633a9364edf77cf82cad886e581a0518f8189fbe,"go/packages: disable network, improve debug logging

When the name= query constructs the temporary module, it may find things
that don't resolve. In at least some cases (#28518), allowing go list
to access the network results in not just bad performance but actual
failures. Default GOPROXY to ""off"" when doing queries on the temporary
module to try to address that.

Also, add some more debug logging, including various environment
variables, so that it's easier to reproduce failing commands.

Change-Id: I1a6d3ffa5c845271ce48e9fe802a2491ccadcd7c
Reviewed-on: https://go-review.googlesource.com/c/146477
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-11-02 19:51:42,https://api.github.com/repos/golang/tools/git/commits/c3ef14e642609d0a4820c510958c5c8878d3fad6,c3ef14e642609d0a4820c510958c5c8878d3fad6,"go/analysis/passes/cgocall: disable test in go1.12

The test correctly identified a problem.
Suppressing test to keep dashboard cleean, pending a fix.

Updates golang/go#28566

Change-Id: Ib3a8dbdd617c9f5701b5d6673434917d284dfb32
Reviewed-on: https://go-review.googlesource.com/c/147199
Run-TryBot: Alan Donovan <adonovan@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-11-02 19:08:45,https://api.github.com/repos/golang/tools/git/commits/896f44f055db74ba1c67ee6b177f4d0a5d98624f,896f44f055db74ba1c67ee6b177f4d0a5d98624f,"go/analysis/.../unitchecker: suppress test unless go1.12

Change-Id: I1af89b9e077cf7eddeeeed72e66cd88f650492a2
Reviewed-on: https://go-review.googlesource.com/c/147197
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
ianthehat,2018-10-11 14:57:13,https://api.github.com/repos/golang/tools/git/commits/619897c5a2e47f9afd0d8570226d9f0878f2efd1,619897c5a2e47f9afd0d8570226d9f0878f2efd1,"go/packages/packagestest: add marker support

This adds a library that allows markers and actions inside comments in go source
files.
It then also adds an easy way to use that library for tests using packagestest.Expect
This is used to easily write code inspection and manipulation tests in a
language that is common to all tests.

Change-Id: I755caaad1557c9b8779ad9ecda2b3309550d6976
Reviewed-on: https://go-review.googlesource.com/c/142998
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-19 17:38:44,https://api.github.com/repos/golang/tools/git/commits/15a0f8a7f13d32e7ef63241aa7f25369b75ea373,15a0f8a7f13d32e7ef63241aa7f25369b75ea373,"go/analysis/internal/unitchecker: a 'go vet'-compatible driver

Also:
- add cmd/vet-lite, a version of cmd/vet that doesn't depend on
  go/packages and must be run under ""go vet"". This will be vendored
  into $GOROOT/src/cmd/vet.
- add an integration test for a unitchecker-based command under ""go vet"".

Change-Id: Id613dac2812816c6d6372fa6d1536c8d4e4c2676
Reviewed-on: https://go-review.googlesource.com/c/143418
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
agnivade,2018-11-02 04:55:23,https://api.github.com/repos/golang/tools/git/commits/92b943e6bff73e0dfe9e975d94043d8f31067b06,92b943e6bff73e0dfe9e975d94043d8f31067b06,"cmd/tip: enable playground on tip.golang.org

Updates golang/go#28536

Change-Id: I3ece72aacd4635f4580be404672394a47791a1e8
Reviewed-on: https://go-review.googlesource.com/c/146917
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2018-10-31 18:51:16,https://api.github.com/repos/golang/tools/git/commits/d51e88b5aec5e5af4b3c8a4083777f5d1623d846,d51e88b5aec5e5af4b3c8a4083777f5d1623d846,"go/packages: make visit order stable

Change-Id: Iee9b29364dd986e1f1676ff0aa989267c4149c30
Reviewed-on: https://go-review.googlesource.com/c/146357
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
dsymonds,2018-11-01 03:33:50,https://api.github.com/repos/golang/tools/git/commits/45ff765b4815d34d8b80220fd05c79063b185ce1,45ff765b4815d34d8b80220fd05c79063b185ce1,"cmd/stringer: accept simple type conversion expressions in constant ValueSpec

This permits constants of the form `const X = T(A)` to add `X` to the
stringer output for type `T`.

While those constants can be rewritten as `const X T = T(A)`, that
becomes tedious and visually noisy when `T` is a long name. It is quite
easy to address this easy and common case, while not attempting to solve
this with full generality.

Fixes #11581.

Change-Id: Ifb8e43515f05493de190e02577260d94dd851581
Reviewed-on: https://go-review.googlesource.com/c/146577
Run-TryBot: David Symonds <dsymonds@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
ianthehat,2018-10-30 14:53:58,https://api.github.com/repos/golang/tools/git/commits/3a10b9bf0a52df7e992a8c3eb712a86d3c896c75,3a10b9bf0a52df7e992a8c3eb712a86d3c896c75,"go/packages: change so no results are sorted

We do insist that drivers are stable (not sorted, just stable) and that
refine is also stable, which allows us to promise a stable output.
I also changed refine so it returns the root set in the same order that
the original root id list was supplied, as this seems to be a strictly
better experience.

Change-Id: I8eb0bffd7547865d14a6c6f18646018b9af140bd
Reviewed-on: https://go-review.googlesource.com/c/145877
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
heschik,2018-10-30 20:50:41,https://api.github.com/repos/golang/tools/git/commits/6c7e314b6563ee0a4dc169c7ee9960e0b709c035,6c7e314b6563ee0a4dc169c7ee9960e0b709c035,"go/packages/packagestest: make versioned modules

If a Module's Name ends with a version suffix (v2), create its module
with an appropriate version number (v2.0.0).

Change-Id: I1a16f054fac5717e79871ba1bf9a6343c0ce2f5b
Reviewed-on: https://go-review.googlesource.com/c/146097
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
myitcv,2018-10-30 09:13:23,https://api.github.com/repos/golang/tools/git/commits/240a8bfde1833f559ff3a018ff8ddb6e20019531,240a8bfde1833f559ff3a018ff8ddb6e20019531,"cmd/stringer: move away from using os.Args[0]

stringer's usage currently uses os.Args[0] to refer to the program name
as a defensive measure in case stringer is compiled and then run using a
name other than stringer, e.g. mystringer. However, the following lines
of the usage docs hardcode ""stringer."" So it seems this has little
benefit.

Indeed this style of using os.Args[0] can make the usage information of
stringer extremely ugly when stringer itself is invoked with an absolute
path:

Usage of /tmp/tmp.ahddh3ZjE7/.gobincache/golang.org/x/tools/@v/v0.0.0-20181030000716-a0a13e073c7b/golang.org/x/tools/cmd/stringer/stringer:
        stringer [flags] -type T [directory]
        stringer [flags] -type T files... # Must be a single package

...

Instead, opt for the simpler approach of hardcoding stringer throughout.

Change-Id: Ia296c8d9a91c94e77b7cc2b6242908c959fb5985
Reviewed-on: https://go-review.googlesource.com/c/145799
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Alan Donovan <adonovan@google.com>
Reviewed-by: Rob Pike <r@golang.org>"
ianthehat,2018-10-30 00:06:37,https://api.github.com/repos/golang/tools/git/commits/bb28844c46df63910d88c11eb36098ce781adfa0,bb28844c46df63910d88c11eb36098ce781adfa0,"go/packages: make packagestest.Export call t.Helper

Change-Id: Ib95ab480899ee14fb8ae841b0210734ecbc0d0d9
Reviewed-on: https://go-review.googlesource.com/c/145698
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
heschik,2018-10-26 18:54:05,https://api.github.com/repos/golang/tools/git/commits/a0a13e073c7bae39af55369bcd1c2dc7ebb88ede,a0a13e073c7bae39af55369bcd1c2dc7ebb88ede,"imports: make tests compatible with modules

Tweak the goimports tests to be more module-compatible. This should be
the last big change to the tests; they all pass with the new
implementation.

The primary change is to avoid using packages not provided by the test's
modules. Other modules will be downloaded at test time, which is
nonhermetic and quite slow.

Other miscellanea:

- The appengine grouping tests have to be split out so
they can be GOPATH-only, because modules have to have dots in their
names.
- The tests for .goimportsignore and node_modules are GOPATH-only
because we decided not to include those behaviors in go/packages in
module mode.
- Some vendoring tests are GOPATH-only because vendoring is not a thing
in module mode.
- TestFindImportInLocalGoFiles changes content, because the existing
test was incorrect: bogus.net/bytes was a viable candidate even though
it isn't on disk. I'm not sure why it wasn't flaky.

Change-Id: I35a3aac92d3fb7f70a1a8f027f0b423282420a4d
Reviewed-on: https://go-review.googlesource.com/c/145138
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
heschik,2018-10-25 22:51:23,https://api.github.com/repos/golang/tools/git/commits/00c5fa58688ea7ffa51656ec1d88eb2c67844802,00c5fa58688ea7ffa51656ec1d88eb2c67844802,"go/packages: find mismatched top level packages in name=

Treat the top-level package of a module specially so that the VCS
working dir name doesn't have to match the package name. Generally we
take the position that directory names should match packages, but for
the top-level package that's a pretty strict requirement. Now we always
check the top-level directory, just in case.

Change-Id: I2e96751bf46736fbaef434fa9788fdc1339c37b9
Reviewed-on: https://go-review.googlesource.com/c/144817
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-10-22 17:05:19,https://api.github.com/repos/golang/tools/git/commits/2d2de6298155751e44170d1c9a9baacb688d2606,2d2de6298155751e44170d1c9a9baacb688d2606,"go/packages: sort root list in Load

The builders are currently flaky failing because of a root order being
wrong.
This causes all root lists to be sorted before being returned, so the
order is always stable no matter which underlying driver is running.

Fixes golang/go#27594

Change-Id: I09db45c67ad00f23dfaec8e271acbd13fc338888
Reviewed-on: https://go-review.googlesource.com/c/143737
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2018-10-25 21:23:41,https://api.github.com/repos/golang/tools/git/commits/9aea6da185268e75d87fc7b14386a1e13c87442a,9aea6da185268e75d87fc7b14386a1e13c87442a,"go/analysis/internal/facts: fact serialization support

Package facts provides an implementation of the Import/Export methods
of the analysis.Pass interface and functions to encode and decode
facts, using Gob encoding, to a file. It will be part of the vet-lite
driver (invoked by go vet) but the same logic has been validated in
other build systems such as Blaze.

Change-Id: I60ef561e84e833b9a3b17c269ab358e7d0800ff3
Reviewed-on: https://go-review.googlesource.com/c/144737
Reviewed-by: Jay Conrod <jayconrod@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2018-10-23 19:13:28,https://api.github.com/repos/golang/tools/git/commits/f60e5f99f0816fc2d9ecb338008ea420248d2943,f60e5f99f0816fc2d9ecb338008ea420248d2943,"go/packages/packagestest: use a module proxy

Instead of writing replace directives to link the test's modules
together, fill a GOPROXY dir and use `go mod download` to fill a real
GOCACHE with them. This makes the tests more realistic, since replace
directives will be somewhat unusual. It also gives the name= query
something to search.

Actually doing this in a way that's compatible with packagestest's
abstraction is a little tricky, since it wants to know where the files
will be. The actual files will be created by go mod download, so we have
to get Export to put them there to begin with, then move them out of the
way.

Since the GOPROXY zip format doesn't support symlinks, those will only
work in the primary module.

Change-Id: I6bc1d368f1c950d789e409213107d60bb1389802
Reviewed-on: https://go-review.googlesource.com/c/144498
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
heschik,2018-10-22 21:56:19,https://api.github.com/repos/golang/tools/git/commits/e74f1bd585edab6d9359eeb7516b7e97d12e59f8,e74f1bd585edab6d9359eeb7516b7e97d12e59f8,"imports: port tests to packagestest

I tried to introduce new modules where it made sense. I deleted the
weird goroot test because I removed the optimization it was testing in
an earlier CL.

Change-Id: I219ddaa4f462a4aeb640f62215d16f246511a5fe
Reviewed-on: https://go-review.googlesource.com/c/144497
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-10-24 15:31:02,https://api.github.com/repos/golang/tools/git/commits/a2dc47679d30b6c496245bafc6a166b46c5fe318,a2dc47679d30b6c496245bafc6a166b46c5fe318,"Revert ""imports: support repairing import grouping/ordering""

This reverts commit CL 116795 12a7c317e894c0a622b5ed27f0a102fcdd56d1ad.

Reason for revert: mangles comments in imports. See comments
on issue golang/go#20818.

Updates golang/go#20818

Change-Id: Iff82f8dc310dceb982b48d82b26176ea279fef10
Reviewed-on: https://go-review.googlesource.com/c/144339
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
hyangah,2018-10-22 15:02:50,https://api.github.com/repos/golang/tools/git/commits/40a48ad93fbe707101afb2099b738471f70594ec,40a48ad93fbe707101afb2099b738471f70594ec,"godoc: replace x/net/context with context

Change-Id: I5b0508ccf7a912a8f334abcfb32033e120fc7971
Reviewed-on: https://go-review.googlesource.com/c/143717
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2018-10-19 20:03:29,https://api.github.com/repos/golang/tools/git/commits/9650c66da3ff428b355c9b29c8a5ca02bd026f3d,9650c66da3ff428b355c9b29c8a5ca02bd026f3d,"internal/lsp: add support for publishing diagnostics

Any time a file is changed, we compute diagnostics for its package and
return them to the client. No caching is implemented yet, so we parse
and type-check the package each time.

Change-Id: I7fb2f1d8975e7ce092938d903599188cc2132512
Reviewed-on: https://go-review.googlesource.com/c/143497
Reviewed-by: Alan Donovan <adonovan@google.com>
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dmitshur,2018-10-20 05:03:24,https://api.github.com/repos/golang/tools/git/commits/6fe81c087942f588f40c3f67b41ce284f2f70eee,6fe81c087942f588f40c3f67b41ce284f2f70eee,"present: remove mention of non-existing emphasis toggle

To find out whether the documentation was wrong, or if the
implementation had a bug, I did some code archeology. The earliest
commit I found where the 'h' key in browser was mentioned was the
very first commit where the present format is added. It was in talks
subrepo before being moved to tools subrepo. It was CL 6497063.

In that commit, I see no mention of 'h' key anywhere else except
that one line of documentation.

Three years later, the 'h' key got mapped to hiding the help dialog
in CL 4910.

My best guess is this original feature was documented but
never implemented. So removing it from documentation is
the most appropriate fix.

Fixes golang/go#17375.

Change-Id: Ibe0b39d73a7a0652acd6a04beddfcff22b0e3c4a
Reviewed-on: https://go-review.googlesource.com/c/143557
Reviewed-by: Andrew Gerrand <adg@golang.org>"
ianthehat,2018-10-19 20:48:31,https://api.github.com/repos/golang/tools/git/commits/c5032d394f0028702e058dbbabd93c08ddcaea5b,c5032d394f0028702e058dbbabd93c08ddcaea5b,"go/packages: Fixes for bad wd handling

Darwin convertes the working directory to a real path which affects the
path a command is started with when you exec.
This causes a problem where the path the go list command is run with
does not match the path the outside program is trying to use, which
causes both undesirably changed paths in it's outputs, and sometimes
failures to cope with modules when source files are ""outside"" the module
root.
The go standard library has a special feature in os.Getwd where it
checks if the PWD environment variable is the same inode as the system
cwd, and if it is it returns the PWD instead. This change deliberately
sets the PWD before running go list so that behaviour is triggered,
which fixes all the paths.
This was breaking the mac build bots in a goimports test, it should be
fixed now.

Change-Id: I0f5d3c7d020b55749738036ba51c19884bb26598
Reviewed-on: https://go-review.googlesource.com/c/143517
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
agnivade,2018-08-11 08:03:17,https://api.github.com/repos/golang/tools/git/commits/3e7aa9e59977626dc60433e9aeadf1bb63d28295,3e7aa9e59977626dc60433e9aeadf1bb63d28295,"godoc: generate TOC from server-side for search page

Currently, we generate the TOC for a page dynamically after page load
through javascript. This is fine for pages with static content.

But for pages with dynamic output like /search, sometimes this causes a
noticeable page jump due to extensive DOM traversal. Also, the heuristics
to calculate the no. of columns is very rudimentary and fills the entire
above-the-fold area if the no. of results is very large.

Therefore, we generate the TOC from server side itself. And improve
the no. of columns heuristic further to accomodate up to 4 columns.

This improves page performance and utilizes real estate appropriately
according to the input.

Some screenshots at laptop (1366x768) resolution.
https://snag.gy/AXz2rP.jpg
https://snag.gy/th3Nn8.jpg

More can be found in the CL comments.

Fixes golang/go#21685
Updates golang/go#21686

Change-Id: Ia9b6dd1e67231d992709e4ba10ebdbedfe38b564
Reviewed-on: https://go-review.googlesource.com/c/129135
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>"
alandonovan,2018-10-19 19:05:40,https://api.github.com/repos/golang/tools/git/commits/26c26290c3ec4bc75ba9f93d69ab53a878dfc904,26c26290c3ec4bc75ba9f93d69ab53a878dfc904,"go/*: fix pre-1.11 tests

packagestest.Modules is now available pre-go1.11 but doesn't add
itself to packagestest.All.

strings.ReplaceAll is not available in pre-go1.11

Change-Id: Ia8bf0e82bb853c6f29d31ca5c54651097342b19c
Reviewed-on: https://go-review.googlesource.com/c/143419
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-10-19 17:50:20,https://api.github.com/repos/golang/tools/git/commits/9545aa7b51002313cdc37510dd7664c62c99ec06,9545aa7b51002313cdc37510dd7664c62c99ec06,"go/analysis/cmd/vet: new name for cmd/analyze

This is the new vet command. It can be run standalone:

	$ vet my/project/...

or (soon) under go vet:

	$ GOVETTOOL=$(which vet) go vet my/project/...

A forthcoming CL will add support for the second mode, and define a
vet-lite command that supports only that mode, but has fewer
dependencies; it is intended to be vendored into $GOROOT/src/cmd/vet.

Change-Id: I57696ae6d43aa31fd10b370247b7e7497f0f3597
Reviewed-on: https://go-review.googlesource.com/c/143417
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
griesemer,2018-10-17 23:03:08,https://api.github.com/repos/golang/tools/git/commits/5efdaf2100b5f305e331cb3651282d7105af2235,5efdaf2100b5f305e331cb3651282d7105af2235,"go/internal/gcimporter: update gcimporter.go to incorporate std lib changes

This CL brings over changes from https://golang.org/cl/74354/
which were not brought over.

The code was adjusted slightly such that a filename is still available
for ImportData even if a custom lookup function is provided (adjustments
are on lines 133, 188-193).

Change-Id: I58960e648c9aae1683eb4d7f8d7578f09349eca2
Reviewed-on: https://go-review.googlesource.com/c/143017
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2018-10-17 21:42:40,https://api.github.com/repos/golang/tools/git/commits/a53bc13a6341e9847bbcf8c0a0691e60e18a87c0,a53bc13a6341e9847bbcf8c0a0691e60e18a87c0,"go/internal/gcimporter: remove support for Go versions < Go 1.10

- eliminated special case for isAlias predicate
- appended code from bexport19_test.go to bexport_test.go

No other changes.

Change-Id: Icf10691510e51f4e618b2a48bc1a1215a98832b6
Reviewed-on: https://go-review.googlesource.com/c/142896
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-10-18 21:00:01,https://api.github.com/repos/golang/tools/git/commits/a019f6b7c5bfcffdf421924fc0ddb74b867a53f2,a019f6b7c5bfcffdf421924fc0ddb74b867a53f2,"go/analysis/internal/analysisflags: common flag handling

The analysisflags package provides a function to help
ensure that all drivers support consistent command-line
interfaces.  In particular, -analyzer.enable flags use
tristate logic as in vet, and the -flags flag dumps
a list of flags in JSON for use by 'go vet' and other
build systems.

This code is in a separate package from internal/checker
(the common parts of multichecker, singlechecker)
because we don't want the forthcoming vet-lite (formerly
known as doctor) driver to have an unnecessary dependency
on go/packages.  (When go/packages is promoted to the
standard library we can consolidate them.)

+ Test of tristate analyzer selection logic.

Change-Id: I5ea4e556e0f56505df06eb8fa9dd9eed884a1b47
Reviewed-on: https://go-review.googlesource.com/c/143197
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-15 21:45:59,https://api.github.com/repos/golang/tools/git/commits/45f20876fcd73d9671d0ccacfce5c573ba28e893,45f20876fcd73d9671d0ccacfce5c573ba28e893,"go/analysis/passes/shadow: adapt for analysis API

Change-Id: I9b7c98ab9647e17c286e656860038498e32f99f2
Reviewed-on: https://go-review.googlesource.com/c/142358
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2018-10-19 02:10:33,https://api.github.com/repos/golang/tools/git/commits/4805105a3a8d777ea549f95266029c9a2b6003b9,4805105a3a8d777ea549f95266029c9a2b6003b9,"go/analysis: doc: explain how to report diagnostics in raw text files

Change-Id: I6b31e6f4b61948e459faf5a1ada18de69741b947
Reviewed-on: https://go-review.googlesource.com/c/143299
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-19 01:28:34,https://api.github.com/repos/golang/tools/git/commits/8dacc032e7c064a157eafa59d426d16b437f95ca,8dacc032e7c064a157eafa59d426d16b437f95ca,"go/analysis/cmd/analyze: install all analyzers

The default value of -findcall.name has been changed to """"
to avoid producing noise.

Change-Id: I71554080bcc7b6e23f632b49e30590fa0b0bc034
Reviewed-on: https://go-review.googlesource.com/c/143297
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-19 02:26:36,https://api.github.com/repos/golang/tools/git/commits/9f76e5c58b59280894d8f3a0c64460b6375f7fe7,9f76e5c58b59280894d8f3a0c64460b6375f7fe7,"go/analysis/passes/vet: delete

All the passes have been moved into their own packages.

The README file has been saved for the new cmd/analyze command,
which will shortly be renamed to vet.

Change-Id: I68c765a4da2f8d5a2b0161b462bd81483b5ceed5
Reviewed-on: https://go-review.googlesource.com/c/143301
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2018-10-19 01:45:41,https://api.github.com/repos/golang/tools/git/commits/19100bfbe94757ec676b35db83322b2b574436e3,19100bfbe94757ec676b35db83322b2b574436e3,"go/analysis/passes/asmdecl: fix nil deref panic

Due to a bug in go/types, a function f(...T) has no type
recorded for the parameter type expression ...T, and apparently
this has never occcured in a file checked by asmdecl before.

The addParams function should really be simplified to use types.Signature.

Updates golang/go#28277

Change-Id: I5b73535a7739b6771ffef1c0a7568f5161d564d5
Reviewed-on: https://go-review.googlesource.com/c/143298
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2018-10-19 02:20:58,https://api.github.com/repos/golang/tools/git/commits/327a9b56d07517addd8958843de93127e7f92a1f,327a9b56d07517addd8958843de93127e7f92a1f,"go/analysis/passes/tests: add testcase from vet

vet's ""divergent"" testdata package exercises various mistakes
in naming Example functions.

vet's ""incomplete"" testdata package has been deleted because
it is no longer applicable. It was intended to ensure that a
x_test.go file specified on its own would not trigger false
positives without the corresponding x.go files, but the
new Analysis API always analysis complete packages.

Change-Id: I1a40ead340c806b571302fdaa537f481514b0c22
Reviewed-on: https://go-review.googlesource.com/c/143300
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-16 20:17:24,https://api.github.com/repos/golang/tools/git/commits/6adeb8aab2ded9eb693b831d5fd090c10a6ebdfa,6adeb8aab2ded9eb693b831d5fd090c10a6ebdfa,"go/analysis/passes/nilness: degenerate nil condition checker

This check uses the control-flow graph and SSA value graph to detect
problems such as:

	p := &v
	...
	if p != nil { // tautological condition
	}

and:

	if p == nil {
		print(*p) // nil dereference
	}

(It was originally developed within Google's Go analysis framework and
can now be published in a form useful to all analysis drivers.)

This CL also includes buildssa, an Analyzer that constructs SSA for
later analysis passes but does not report diagnostics or facts of its
own.

Change-Id: I27bc4eea10d71d958685a403234879112c21f433
Reviewed-on: https://go-review.googlesource.com/c/142698
Reviewed-by: Michael Matloob <matloob@golang.org>"
agnivade,2018-10-18 07:21:06,https://api.github.com/repos/golang/tools/git/commits/def26773749ba304ef17a9d8bf8a148a1dc29018,def26773749ba304ef17a9d8bf8a148a1dc29018,"cmd/godoc: cleanup documentation for CLI mode

- Removed all documentation which referred to godoc's CLI capabilities.
- Added some missing flags which were not documented.
- Removed some redundant mentions of ""web server"" because now it is
just a web server.
- Converted some links to https

Change-Id: I7ddcf417d2bc3df13183adcfd0f82af9a37a1b91
Reviewed-on: https://go-review.googlesource.com/c/143077
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2018-10-05 17:08:11,https://api.github.com/repos/golang/tools/git/commits/06f26fdaaa28cdb20cf496a5eec17e1270830a63,06f26fdaaa28cdb20cf496a5eec17e1270830a63,"go/packages/packagestest: Testing with multiple drivers

This extracts some of the test code from packages, and adds the ability to run
the same test with multiple drivers.
This should generally be useful for all tools that run on top of go/packages as
well when writing tests for them.

Change-Id: I88c596ad07c0782270c5798d92ae29f7549943cf
Reviewed-on: https://go-review.googlesource.com/c/140118
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
griesemer,2018-10-17 20:40:36,https://api.github.com/repos/golang/tools/git/commits/249abec53bb4ef8dc85bae4f77c07b24307393ec,249abec53bb4ef8dc85bae4f77c07b24307393ec,"go/internal/gccgoimporter: update package to match std lib version

This CL makes sure it matches the original code in the std lib
but for the necessary changes to make the code work in x/tools
and with older versions of the std lib.

Notably, it brings over changes from https://golang.org/cl/119895
which were not ported to x/tools.

To simplify future comparisons with the original, streamlined
some comments.

Fixes golang/go#27891.

Change-Id: Iff48c11cb7f0f8a55b4ea33321c686f9d5c707c7
Reviewed-on: https://go-review.googlesource.com/c/142893
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2018-10-17 20:30:25,https://api.github.com/repos/golang/tools/git/commits/9183b6540812d03d39b2bdd0861ff77df7b2876a,9183b6540812d03d39b2bdd0861ff77df7b2876a,"go/internal/gccgoimporter: add missing copyright notice

Change-Id: I2a1d5132f7263d8dc0e2a42c42b37b9d962a3ab7
Reviewed-on: https://go-review.googlesource.com/c/142892
Reviewed-by: Alan Donovan <adonovan@google.com>"
heschik,2018-10-17 20:50:47,https://api.github.com/repos/golang/tools/git/commits/4a1b41eed170862fe82028699015842e9382fe2b,4a1b41eed170862fe82028699015842e9382fe2b,"go/packages: don't spam stderr

Some editors combine stdout and stderr when running tools, so
printing to stderr without failing confuses them. Stop printing go
list's warnings.

They're still useful for debugging, so users can set
GOPACKAGESPRINTGOLISTERRORS to see them. This isn't part of the API and
has no compatibility guarantees.

Change-Id: I9cf091cf59d082123149888468fa0d126dc972c7
Reviewed-on: https://go-review.googlesource.com/c/142997
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
griesemer,2018-10-17 20:12:44,https://api.github.com/repos/golang/tools/git/commits/7099c87f61d54175d5b3a8ac30dbb386eb68fce4,7099c87f61d54175d5b3a8ac30dbb386eb68fce4,"go/internal/gccgoimporter: add missing copyright notice

Change-Id: I20f7aba8a76cfe8549771ef96244e8641a4157e6
Reviewed-on: https://go-review.googlesource.com/c/142891
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
bradfitz,2018-06-20 16:33:51,https://api.github.com/repos/golang/tools/git/commits/4cdd33fd982acab76e378b4fe489ae197a381bb0,4cdd33fd982acab76e378b4fe489ae197a381bb0,"cmd/tip: make tip.golang.org also serve & redirect beta.golang.org to tip

We're turning down the old (and neglected) beta.golang.org godoc VM.
It's not different enough from tip.golang.org, which is more reliable
than it used to be.

Now beta.golang.org will just redirect to tip.

Updates golang/go#25978
Fixes golang/go#21073

Change-Id: Iae7fe4c82c14cec7381e75a2e214210d38b6e623
Reviewed-on: https://go-review.googlesource.com/c/120056
Reviewed-by: Filippo Valsorda <filippo@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>"
heschik,2018-10-17 17:59:53,https://api.github.com/repos/golang/tools/git/commits/654e6e76cd7e95033ae4d328fd5c7d45290efd58,654e6e76cd7e95033ae4d328fd5c7d45290efd58,"gopathwalk: don't log for nonexistant root dirs

If users don't have a module cache yet, or put a nonexistant directory
in their GOPATH, it doesn't make sense to print an error. Just ignore it
and move on.

No tests; I don't think it makes sense to set up log scraping for this.

Change-Id: I90719297ade37999e8b401767a0a37c940828c27
Reviewed-on: https://go-review.googlesource.com/c/142977
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-10-16 20:22:17,https://api.github.com/repos/golang/tools/git/commits/e94054f4104a5f41efd6edfd762152ddcb3acd70,e94054f4104a5f41efd6edfd762152ddcb3acd70,"go/analysis/passes/composite: add testing.Internal* to whitelist

These structs appear in test main files generated by ""go test""
and so can be trusted.

Change-Id: I1514a8cdcbd633392ccaaedfa8eccf944d514129
Reviewed-on: https://go-review.googlesource.com/c/142699
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
heschik,2018-10-16 20:41:19,https://api.github.com/repos/golang/tools/git/commits/5ef16f43e633c268c7c28abdba1a0173a4d715b8,5ef16f43e633c268c7c28abdba1a0173a4d715b8,"go/packages: fix tests on 1.10

Can't do module tests on a pre-modules version of Go.

Change-Id: I8e3e22d472f37ebc9f930a68c9a6c0f4b7ba7ea0
Reviewed-on: https://go-review.googlesource.com/c/142700
Run-TryBot: Heschi Kreinick <heschi@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-15 22:10:24,https://api.github.com/repos/golang/tools/git/commits/a0ecdcbec46f2cd944b1ad9e1ffb51b94f227b6b,a0ecdcbec46f2cd944b1ad9e1ffb51b94f227b6b,"go/analysis/passes: add doc and copyright comments

...and other trivial cleanups.

Multi-line doc comments have been moved to exported Doc constants for
the sake of godoc.

Change-Id: Ib1cbec5806c699d51283c34685c4cd96953f5384
Reviewed-on: https://go-review.googlesource.com/c/142360
Reviewed-by: Michael Matloob <matloob@golang.org>"
heschik,2018-09-27 22:21:00,https://api.github.com/repos/golang/tools/git/commits/63d31665e311d0da81db6a27060589b038fad816,63d31665e311d0da81db6a27060589b038fad816,"go/packages: add name= query

Add an implementation of name= for go list. It will be used to
implement goimports and godoc-like lookups by package name.

Imported a copy of the semver package from the stdlib to do version
comparison, and tweaked the gopathwalk API to include a hint about what
kind of source directory is being traversed.

Note that the tests, despite my best efforts, are not hermetic: go list
insists on doing version lookups in situations where it seems to me like
it shouldn't need to.

I think this implementation is ready for serious use. The one thing I'm
nervous about is that it currently does a substring match when looking
for a package name, so if you look up a package named ""a"" you will get
a huge number of results. This matches goimports' behavior but I don't
know if it's suitable for general use.

Change-Id: I2b7f823b74571fe30d3bd9c7dfafb4e6a40df5d3
Reviewed-on: https://go-review.googlesource.com/c/138878
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-16 01:01:26,https://api.github.com/repos/golang/tools/git/commits/bf9c22dffd8ac62d291a71530049601b128dca8e,bf9c22dffd8ac62d291a71530049601b128dca8e,"go/analysis/passes/httpresponse: split out from vet

Change-Id: Ica54852964837182d1848d4d96d43309ad0a6d84
Reviewed-on: https://go-review.googlesource.com/c/142477
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-14 14:34:06,https://api.github.com/repos/golang/tools/git/commits/3a0c4deef17a05d90ac789de162b10649b6dcf6d,3a0c4deef17a05d90ac789de162b10649b6dcf6d,"go/analysis/passes/printf: changes for analysis API

Guide to changes:

- The -printfuncs flag is renamed -printf.funcs.
  It no longer supports ""pkg.T.f"" form, requiring instead
  ""(dir/pkg.T).f"" or ""(*dir/pkg.T).f"".
  The legacy "":%d"" suffix is no longer supported.

- (*testing.T).Errorf and friends are removed from the isPrint map
  because they are discovered by induction while analyzing package
  ""testing"".

- localPrintfLike map operations are replaced by the Fact mechanism.

- The go/types representation is used instead of strings/ast.Nodes in
  various places. For example:

       pkgpath, name string -> *types.Func  (to identify a function)
    format, args *ast.Field -> *types.Var   (to identify format/args params)

  This was required to fix a latent bug in maybePrintfWrapper's
  handling of format string parameters` declared using ""factored""
  syntax, such as: func f(foo, format string, args...interface{}).
  See L253 of the original testdata file for a testcase that ensured
  the buggy (?) behavior.

- func printfLike is removed as it was deadcode.

- isFormatter is rewritten to avoid a global variable.

- ""if verbose { warn }"" is replaced by ""if false { report }"" for now.

- recursive stringer is rewritten more simply in term of go/types.

Change-Id: Ia6ee827117b611c686e38207916a21fe1fc296e2
Reviewed-on: https://go-review.googlesource.com/c/142239
Reviewed-by: Michael Matloob <matloob@golang.org>"
heschik,2018-10-10 23:17:04,https://api.github.com/repos/golang/tools/git/commits/bf693efdb346d7b4b753a83ebabb2cef1046ccc5,bf693efdb346d7b4b753a83ebabb2cef1046ccc5,"imports: make tests use a helper, read from disk more

Replace the repeated Process/err check/output block with a test helper
eliminating a lot of copy/pasting. Change many tests to get their input
from disk rather than the argument to Process; this is mostly me being
selfish: go/packages doesn't support creating new packages with overlays
and that breaks a lot of these tests.

Change-Id: Ib1b7908c3d86d17323a94f1ee4ce074e264327b4
Reviewed-on: https://go-review.googlesource.com/c/141680
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ysmolsky,2018-10-11 09:34:09,https://api.github.com/repos/golang/tools/git/commits/321fe744f386079338b126dfb02b3ddaaf672926,321fe744f386079338b126dfb02b3ddaaf672926,"playground.js: make output of ""Run"" clearer

This CL changes the last line displayed after the program was run
to display more details on what happened.

If the program cannot be built,
the last message is ""Go build failed"".

If the program has tests,
the last message is ""All tests passed"" in case of success.
Otherwise it is ""N tests failed"".

If the program has exited with non-zero code,
the exit message is postfixed with the code.

This CL adds output for timed out programs.

This CL is prerequisite for the backend change in CL 141478.
Dockerfile in playground repo has to be updated to include this CL.

Updates golang/go#10590
Updates golang/go#25454

Change-Id: Ie0a51b0729c574d2508a4a1b89f629def1d79fd6
Reviewed-on: https://go-review.googlesource.com/c/141477
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
agnivade,2018-08-15 12:38:08,https://api.github.com/repos/golang/tools/git/commits/4fd33079060a7ef7bffe3a1c2369620f4f21ad06,4fd33079060a7ef7bffe3a1c2369620f4f21ad06,"godoc: fix inline playground width for mobile devices

The inline playground had a fixed width due to which it gets partially
hidden on mobile devices. Hence, expanding the div to fit the entire
screen properly inside the media query for mobile resolutions.

Also, since the playground appears on top of the button, there is
no way to hide it except to reload the page. So, added a click handler
on the page to hide the playground if it is open.

Fixes golang/go#21636

Change-Id: Id15caec25e870e9ff3be7736e2bb1084591d1016
Reviewed-on: https://go-review.googlesource.com/c/129435
Reviewed-by: Andrew Bonventre <andybons@golang.org>
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-10-15 22:09:00,https://api.github.com/repos/golang/tools/git/commits/3bba45614315521542f59606bf362dcebcdb99f7,3bba45614315521542f59606bf362dcebcdb99f7,"go/packages: don't use os.LookupEnv

Get the value of GOARCH from the config instead.
It should have been set to the same as the one from the environment by
default, but may have been overidden by the caller.

Change-Id: If9a6c0ae998c1c72ad2a68fe83c8bb9f5614a189
Reviewed-on: https://go-review.googlesource.com/c/142361
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2018-10-15 22:01:28,https://api.github.com/repos/golang/tools/git/commits/5d4988d199e2aeefda3528f599e06410c43caa29,5d4988d199e2aeefda3528f599e06410c43caa29,"go/packages: fix TestRejectInvalidQueries test case

We agreed on a different set of invalid queries than what the test
tests. The change got lost in a merge. Fix it.

Change-Id: I812e561d924f5dbd0c29e3a6ec5fb53022d09487
Reviewed-on: https://go-review.googlesource.com/c/142359
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-10-15 21:30:35,https://api.github.com/repos/golang/tools/git/commits/91ec7db2f84a6830ff144bd0cf14f8f47ecc152f,91ec7db2f84a6830ff144bd0cf14f8f47ecc152f,"go/analysis/passes/shadow: split out of vet

This is just a rename for ease of review.
The logic change will follow.

Change-Id: I8856b22f2157d63c6983c0f00a12c87e5d5dd1a4
Reviewed-on: https://go-review.googlesource.com/c/142357
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 01:17:35,https://api.github.com/repos/golang/tools/git/commits/d777022dd83705401fce69afbdf354e796dcdeb8,d777022dd83705401fce69afbdf354e796dcdeb8,"go/analysis/passes/structtag: split out from vet

Change-Id: Ib3c4c783e4bca2bf2b3c76bea8f19959b7e39539
Reviewed-on: https://go-review.googlesource.com/c/142097
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-12 20:10:15,https://api.github.com/repos/golang/tools/git/commits/8919434dde1e35f7b9ef589ecb80ec0833f021bc,8919434dde1e35f7b9ef589ecb80ec0833f021bc,"go/analysis/passes/copylock: add workaround for go1.10

CL 121876 made sync.noCopy implement sync.Locker and
added this as an assumption to vet.  But now that copylock
is no longer in the standard library it cannot
assume that it is analyzing a recent standard library
in which noCopy has an Unlock method.

Change-Id: I5a30b3711ae6cc0855eb246fdd93b1906779bdde
Reviewed-on: https://go-review.googlesource.com/c/141683
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2018-10-15 19:49:20,https://api.github.com/repos/golang/tools/git/commits/cdd5f6199ca25d7e80bf55d0e5dde44772a02216,cdd5f6199ca25d7e80bf55d0e5dde44772a02216,"go/analysis/passes/printf: add types.go too

This file is nominally part of the core vet tool but in reality it is
only used by the printf checker.

This is just a rename; the actual change will come in a follow-up.

Change-Id: I5497d6888228e6781cf0d3ae62b7c6b5b723e151
Reviewed-on: https://go-review.googlesource.com/c/142240
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-15 19:05:26,https://api.github.com/repos/golang/tools/git/commits/104357fe96759bfa72d6ffc6cd57cf1d1e62089c,104357fe96759bfa72d6ffc6cd57cf1d1e62089c,"go/analysis/passes/printf: move printf to correct subdirectory

Change-Id: I9c510fe042461707a47d8ba4fb4f70c33efbc8cc
Reviewed-on: https://go-review.googlesource.com/c/142238
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-15 19:05:26,https://api.github.com/repos/golang/tools/git/commits/25a9b7c7296e47612360f920e840f5121482084b,25a9b7c7296e47612360f920e840f5121482084b,"go/analysis/passes/printf: create printf pass

This is a straight rename to simplify review of the actual change in a
follow-up CL. (This is a workaround for git diff's weak support for
renames.)

Change-Id: If63336d4f782e12066fce83a848465371013cdde
Reviewed-on: https://go-review.googlesource.com/c/142237
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-12 21:57:33,https://api.github.com/repos/golang/tools/git/commits/aa46a019962be36460a931a248899f6cba462a67,aa46a019962be36460a931a248899f6cba462a67,"go/ssa/ssautil: add AllPackages method

In go1.10, go/packages falls back to loading all packages
from source but not typechecking function bodies for imports.
The ssautil.Packages function would nonetheless provide
the partially-typed ASTs to the SSA builder, which would crash.
Now Packages only passes syntax trees to the SSA builder for
the initial packages, which are the only ones guaranteed to be
fully typed.

It is impossible to discern whether the caller of Packages intends to
build SSA code for dependencies, as in some clients such as
cmd/callgraph, so we add a new function, AllPackages, that expresses
this intent.

Fixes golang/go#28106

Change-Id: I6a88b7c7545e9de90b61f5bee0e6de3d2e21b548
Reviewed-on: https://go-review.googlesource.com/c/141686
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2018-10-12 20:29:09,https://api.github.com/repos/golang/tools/git/commits/4b6ee5fb873dbd9210d5e0db7bdb0ee4f501aeaf,4b6ee5fb873dbd9210d5e0db7bdb0ee4f501aeaf,"go/packages: remove scary warning on documentation

Add a guarantee for breaking changes.

Change-Id: I7c176eb0c3a309ad187e3a33a645996e397d09be
Reviewed-on: https://go-review.googlesource.com/c/141684
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-10-12 18:38:18,https://api.github.com/repos/golang/tools/git/commits/13ebad898d587c5cd7762e13ce1393af81826e8d,13ebad898d587c5cd7762e13ce1393af81826e8d,"go/packages: use ""="" instead of "":"" for special queries

This change updates the language accepted through the arguments
to packages.Load to make it more consistent. There are now two layers.
A pattern containing an ""="" is considered to be a special query, and the
part of the pattern up to the first ""="" is considered the query type. All
other patterns are to be interpreted as the build system interprets it.
For now two special queries exist. file= has the behavior that contains:
did: finding packages containing the given file. The query type pattern=
is used to pass through a pattern to be interpreted by the build system.
pattern= is a type of escaping to allow passing through patterns that
contain an ""="" to be interpreted by the underlying buildsystem. To allow
for new query types to be introduced, packages.Load will report an
error if the qury type is not understood. We expect name= to be added in
an  upcoming change.

""contains:"" changes to ""file="". A new

Change-Id: I1b208d1c998c67d5556cdc872d7694273cedb7e4
Reviewed-on: https://go-review.googlesource.com/c/141681
Reviewed-by: Alan Donovan <adonovan@google.com>"
paulzhol,2018-10-13 10:57:27,https://api.github.com/repos/golang/tools/git/commits/5e66757b835f155f7e50931f54c9f6af8af86f75,5e66757b835f155f7e50931f54c9f6af8af86f75,"internal/fastwalk: don't cross Dirent.Reclen boundry while looking for NULL in parseDirEnt

Crossing Dirent.Reclen boundry was manifested in golang/go#28131 as garbaled filenames,
when Dirent.Name was not NULL terminated on FreeBSD due to a bug (parseDirEnt would find a NULL
in the following Dirent's Fileno/Reclen fields).

Only search for NULL on linux, when the Namlen field is available use it directly instead.

Updates golang/go#28131

Change-Id: I64090576c8bad2bd246d1561432bf73d5caee2a9
Reviewed-on: https://go-review.googlesource.com/c/141801
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2018-10-12 20:38:04,https://api.github.com/repos/golang/tools/git/commits/13216ffa54f0037b62d5680cf1e54d933b149d77,13216ffa54f0037b62d5680cf1e54d933b149d77,"cmd/present: address minor comments not applied in a previous change

These changes were suggested in golang.org/cl/140841 but were not
applied in that change. They are small documentation fixes and a
switch from using fmt.Fprintf/os.Exit to log.Fatalf.

Change-Id: I9393261f8f28b589678866dd7b8904d46629fb4b
Reviewed-on: https://go-review.googlesource.com/c/141685
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2018-10-12 18:52:13,https://api.github.com/repos/golang/tools/git/commits/c0eb142035b5aa4db001a5cc0703b55a8fbf9540,c0eb142035b5aa4db001a5cc0703b55a8fbf9540,"go/analysis/passes/asmdecl: fix a panic under go1.10

Now that asmdecl is not in the standard repo, we must not assume
that types.SizesFor knows about all architectures and panic if it
does not. This change makes it print a warning and assume 64-bit
norms.

Change-Id: Idacad350b2fc9343adfb32539fec7003b39380ed
Reviewed-on: https://go-review.googlesource.com/c/141679
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
heschik,2018-10-09 21:32:55,https://api.github.com/repos/golang/tools/git/commits/d1d6d0cbb6ff4d6a2964061c75da5b56df012720,d1d6d0cbb6ff4d6a2964061c75da5b56df012720,"imports: refactor tests

We plan to change goimports to use go/packages, which requires changing
its internal design. Having tests use the external interface makes those
changes easier. After this change almost all testing is through Process.

Broadly speaking, the changes are:

- Switch to subtests wherever possible. This involved making up many
names, which I hope are accurate.

- Convert tests that used findImport directly to use Process instead.
This often made them slightly larger but not unduly IMO.

- Replace simple tests with entries in the giant table at the top.

- Remove uses of custom goroots, which are troublesome for
go/packages' use of the go command. Almost none of them were actually
necessary. I left one in TestGoRootPrefixOfGoPath; I'm not sure how
to handle it yet.

Change-Id: I7b810750f72842b58223f102097ccbb51b82bf39
Reviewed-on: https://go-review.googlesource.com/c/140840
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
heschik,2018-09-18 19:06:34,https://api.github.com/repos/golang/tools/git/commits/19e2aca3fdf9724feacb8701307db6fb35055030,19e2aca3fdf9724feacb8701307db6fb35055030,"internal/gopathwalk: create

Extract goimports' logic for walking Go source directories into a
separate package, suitable for use in go/packages. No functional
changes. Added a convenience feature to fastwalk, allowing the user to
say that they're done with a directory and stop receiving callbacks for
it.

Testing is a little light; I expect goimports' tests to cover most
everything we care about.

Change-Id: If047ada4414f5f282637d11fd07e8342fadc9c33
Reviewed-on: https://go-review.googlesource.com/c/138877
Run-TryBot: Heschi Kreinick <heschi@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
heschik,2018-09-17 22:07:46,https://api.github.com/repos/golang/tools/git/commits/1d07bcb7f9e4be0b6288f9fa1c0fc1bf743e232e,1d07bcb7f9e4be0b6288f9fa1c0fc1bf743e232e,"imports: refactor directory walking

We plan to reuse goimports' directory walking logic in the
implementation of go/packages. To prepare for that, refactor it to have
fewer global variables and a simpler interface.

This CL makes no functional changes, but may change performance
slightly. It always scans both $GOPATH and $GOROOT, and does so
serially. I expect that fastwalk's internal parallelism is enough to
keep the disk busy, and I don't think it's worth optimizing for people
hacking on Go itself.

Change-Id: Id797e1b8e31d52e2eae07b42761ac136689cec32
Reviewed-on: https://go-review.googlesource.com/c/135678
Run-TryBot: Heschi Kreinick <heschi@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
saheienko,2018-06-06 20:43:48,https://api.github.com/repos/golang/tools/git/commits/12a7c317e894c0a622b5ed27f0a102fcdd56d1ad,12a7c317e894c0a622b5ed27f0a102fcdd56d1ad,"imports: support repairing import grouping/ordering

The existing implementation detects import groups and tryies to
sort/regroup only the last one. Ignore existing grouping and
applying the sort function to all imports fix this.

Fixes golang/go#20818

Change-Id: I5db46c6dc8fabd9299b79349880994be5c1b8195
Reviewed-on: https://go-review.googlesource.com/c/116795
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-10-12 03:10:21,https://api.github.com/repos/golang/tools/git/commits/87312bc3edd028a31d662e145d02b38790f4c716,87312bc3edd028a31d662e145d02b38790f4c716,"go/packages: use effective GOARCH to determine type size function

The typechecker's Sizes function is not currently set correctly.
The correct answer requires information known only to the build
system's query tool (go list, blaze query, etc), and we need to
add a mechanism for it to return this information.

In the meantime, we use this simple workaround: if the GOARCH
environment variable is set, we use that to determine sizes according
to the conventions of gc. Otherwise, we use the architecture for which
the application was compiled. Both could easily be incorrect, but this
is nonetheless progress.

This change should fix the tests of go/analysis/passes/shift,
which are currently broken for GOARCH=386 because the analysistest
driver uses go/packages, which ignores GOARCH.

Change-Id: Iabe3211ad513a9a94eadd6d8f4b2068f7abdd053
Reviewed-on: https://go-review.googlesource.com/c/141757
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2018-10-11 22:56:43,https://api.github.com/repos/golang/tools/git/commits/d3c6139142f2181b42a21db02903fafea6215674,d3c6139142f2181b42a21db02903fafea6215674,"cmd/godoc: synchronously init corpus for index mode

The corpus needs to be init'd before generating the index.

Regression caused by CL 141397.

Updates golang/go#25443.

Change-Id: I04d19bf5d279031cc8ddf0f850d81eb06fc5efa8
Reviewed-on: https://go-review.googlesource.com/c/141717
Run-TryBot: Chris Broadfoot <cbro@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-10-09 14:33:47,https://api.github.com/repos/golang/tools/git/commits/157aeed469d45afeaf9bb13175a49867798fd2a2,157aeed469d45afeaf9bb13175a49867798fd2a2,"go/analysis/passes/ctrlflow: add test of modularity

See the Modularity section of the design doc:
https://docs.google.com/document/d/1-azPLXaLgTCKeKDNg0HVMq2ovMlD-e7n1ZHzZVzOlJk#heading=h.s7mcpao0dpqu

Change-Id: I83e6df01691964703a07a47c222101f3307a0dc6
Reviewed-on: https://go-review.googlesource.com/c/140759
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-10 18:27:22,https://api.github.com/repos/golang/tools/git/commits/8149dec50d887b3322b76ac694f08fe28a3e3627,8149dec50d887b3322b76ac694f08fe28a3e3627,"go/analysis: validate: report duplicates among analyzers (roots)

Duplicate root analyzers caused duplicate flag registration and other problems.

Change-Id: Id0c2761529c57ed1f9a63b669e62401ebf035cc2
Reviewed-on: https://go-review.googlesource.com/c/141159
Reviewed-by: Michael Matloob <matloob@golang.org>"
zchee,2017-07-10 05:54:58,https://api.github.com/repos/golang/tools/git/commits/be3ddffac43eb1791317593585f2e6682815cf57,be3ddffac43eb1791317593585f2e6682815cf57,"cmd/guru: fix several functions godoc comment prefix

The several functions not exported, Use ""The xxx function ..."" rule.

Change-Id: Iaba2490b4a9675213f70d055bd9ded9e5a245aa5
Reviewed-on: https://go-review.googlesource.com/c/47872
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-10-09 00:58:01,https://api.github.com/repos/golang/tools/git/commits/6979e85b73a6fc202a05126152f035eb7e70b9c0,6979e85b73a6fc202a05126152f035eb7e70b9c0,"go/analysis/passes/shift: split out of vet

Change-Id: I9c0c86e7aee4f7bb9239dc4b4836df9bba471b03
Reviewed-on: https://go-review.googlesource.com/c/140757
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 19:39:47,https://api.github.com/repos/golang/tools/git/commits/a398e557df606a73ba39c8fd09a1b392b2a7ab59,a398e557df606a73ba39c8fd09a1b392b2a7ab59,"go/analysis/passes/cgocall: split out of vet

This checker needed some reworking because whereas vet sees
unprocessed cgo source files (with partial type information), the
analysis API sees cgo-processed files with complete type information.
However, that means the checker must effectively undo some of the
transformations done by cgo, making it more fragile during changes to
cgo.

Change-Id: I3a243260f59b16e2e546e8f3e4585b93d3731192
Reviewed-on: https://go-review.googlesource.com/c/141157
Reviewed-by: Michael Matloob <matloob@golang.org>"
cuonglm,2018-10-11 03:16:23,https://api.github.com/repos/golang/tools/git/commits/1f849cf54d09e106002f24257b1cf8b31780c97a,1f849cf54d09e106002f24257b1cf8b31780c97a,"cmd/godoc: do not use httptest

httptest assumes it's running a test, it registers its own flags, which
means godoc ends up with mysterious flags.

By implement an http.ResponseWriter, we do not need to use httptest.

Fixes golang/go#28138

Change-Id: Ia0de8597c3edb0e7bdea6d8b3b2f1618a12f9239
Reviewed-on: https://go-review.googlesource.com/c/141417
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-05-12 05:13:07,https://api.github.com/repos/golang/tools/git/commits/c75e7e6983e78066d98496e6a979a9d3f14f3023,c75e7e6983e78066d98496e6a979a9d3f14f3023,"godoc: inject treeview content only when needed

- This shaves off 12.8KB (unzipped) / 3.8KB (zipped)
downloadable data and around 6ms of javascript parse time
when the files are not injected.

- Also, conditionally rendering the callgraph html only when
callgraph is actually present.

- Removed the ""text/javascript"" attribute as it is the default
value now.

Change-Id: I70c030bdda2a054c181b2b3a693842bafed88d1a
Reviewed-on: https://go-review.googlesource.com/c/115875
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
namusyaka,2018-08-25 17:00:12,https://api.github.com/repos/golang/tools/git/commits/48cd23a0c881438e9d2d7e3c8fc96d5428924e88,48cd23a0c881438e9d2d7e3c8fc96d5428924e88,"godoc/static: get rid of ::-webkit-search-decoration of #search

The input[type=""search""] has a pseudo element,
it's ::-webkit-search-decoration and has an original margin.

To get rid of the margin, this commit specifies -webkit-appearance
property to none.

Fixes golang/go#27210

Change-Id: I09bbae5e0b811a3b3fa3a047b97ea45190e75f46
Reviewed-on: https://go-review.googlesource.com/c/131317
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-10-11 02:21:09,https://api.github.com/repos/golang/tools/git/commits/e5fe289229602997ae560753d57bbbe888c1d34f,e5fe289229602997ae560753d57bbbe888c1d34f,"godoc, cmd/godoc: remove CLI support

godoc is now just a webserver (the one that runs golang.org)

A future change might rename this to something else, but not now.

Fixes golang/go#25443

Change-Id: Ib95d0589e13f4c7a717ff28d694f1472e427eef4
Reviewed-on: https://go-review.googlesource.com/c/141397
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2018-10-10 07:01:02,https://api.github.com/repos/golang/tools/git/commits/0e57ebad1d6b3a6c2d423576b4455ba6818a15e2,0e57ebad1d6b3a6c2d423576b4455ba6818a15e2,"godoc/static: prevent menu ""bouncing"" when showing Play button

The code as written would use JavaScript to show the ""Play"" button in
the menu when the Playground is enabled, making the button appear
after the page first renders, causing a visible ""bounce"" in the menu.
This change checks the condition (whether this is not the front page, or
""wide"") in the template code, instead of with JavaScript after the page
has loaded.

Change-Id: Iccf0a344116372f3207158793be8c7734e67a4ae
Reviewed-on: https://go-review.googlesource.com/c/140798
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
alandonovan,2018-10-05 20:37:45,https://api.github.com/repos/golang/tools/git/commits/38981630ecb498da1c103c57bf9b8edb43715328,38981630ecb498da1c103c57bf9b8edb43715328,"go/analysis/passes/tests: split out from vet

The analysistest.Run function now applies a single analysis to
a set of packages, not just one, as this is necessary for testing
the ""tests"" Analyzer.  The Run function also returns a richer
Result for each package, allowing a test to perform additional
checks if necessary.

I really don't understand how Gerrit decides whether to render
a file such as passes/tests/tests.go as a mv+edit or an add;
small changes to the CL seem to perturb the heuristic.
When reviewing these CLs please inspect the logical diff of
 passes/vet/tests.go -> passes/tests/tests.go

Change-Id: I7812837278b20c8608ccbb6c709c675588a84db1
Reviewed-on: https://go-review.googlesource.com/c/140457
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
andybons,2018-10-09 21:35:48,https://api.github.com/repos/golang/tools/git/commits/37fd46feaea9f88591493cb90891998c53754473,37fd46feaea9f88591493cb90891998c53754473,"cmd/present: merge appengine and non-appengine files

Without changing the behavior of the present command for local
usage (using the local socket for running examples, defaulting to
the current directory for all content). Add flags and set them to
the appropriate values if running on App Engine.

Notably, since the Go files must be in the same directory as
app.yaml, the content root must be ./content/ to avoid listing
the present source files.

It also defaults to running example snippets via the HTTPTransport
(https://play.golang.org/compile) instead of locally when on App
Engine.

There are also some small cleanup code changes.

Update golang/go#28080

Change-Id: I40bb7923107614f88d2bfdffd34a824d4bacb3a1
Reviewed-on: https://go-review.googlesource.com/c/140841
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>"
alandonovan,2018-10-09 00:37:15,https://api.github.com/repos/golang/tools/git/commits/f78a1e934587320e316e5782463234ed4e1280c5,f78a1e934587320e316e5782463234ed4e1280c5,"go/analysis/passes/composite: split out of vet

Change-Id: Ie6e05bea1c8c607407479f5f45dea6fcec62f60c
Reviewed-on: https://go-review.googlesource.com/c/140739
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 01:01:00,https://api.github.com/repos/golang/tools/git/commits/34804b1db3c90a092d5f990f6feb9b80c1191c04,34804b1db3c90a092d5f990f6feb9b80c1191c04,"go/analysis/passes/unsafeptr: split out from vet

Change-Id: Ic5f41b62b4539709f83d9a960f0ab6b87dd2092c
Reviewed-on: https://go-review.googlesource.com/c/140758
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 14:56:14,https://api.github.com/repos/golang/tools/git/commits/fe0886716edde2778bfb3d42b7a2c0f99f9b7996,fe0886716edde2778bfb3d42b7a2c0f99f9b7996,"go/analysis/passes/nilfunc: split out of vet

Change-Id: Ibbe8dfddfcabd2bb71753c969eef14f92603c17d
Reviewed-on: https://go-review.googlesource.com/c/140762
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 00:26:44,https://api.github.com/repos/golang/tools/git/commits/06b1b3f6e38f6ad84a6988ecff3323db0d80fbb7,06b1b3f6e38f6ad84a6988ecff3323db0d80fbb7,"go/analysis/passes/bools: split out of vet

And rename from ""bool"" to ""bools"".

Using analysistest unearthed a minor bug,
github.com/golang/go/issues/28086.
To avoid complicating the diff we work
around it in the tests for now.

Change-Id: I682f33506de778dfdfe97841cd2b16e3d47062b8
Reviewed-on: https://go-review.googlesource.com/c/140737
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 00:33:22,https://api.github.com/repos/golang/tools/git/commits/3f6d6d9dddbf2dac342afecc00a20476d5e976ec,3f6d6d9dddbf2dac342afecc00a20476d5e976ec,"go/analysis/passes/atomic: split out of vet

Also: don't abort loading just because there were parse/type errors.
It's the driver's job to decide whether to fail due to errors.

Change-Id: I055033fb89319d957b328c4fa4a30144afc7457c
Reviewed-on: https://go-review.googlesource.com/c/140738
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
broady,2018-10-07 00:12:19,https://api.github.com/repos/golang/tools/git/commits/65a9b9c4aba07496a99cb67aa9d843ac284da610,65a9b9c4aba07496a99cb67aa9d843ac284da610,"cmd/godoc: add missing Dockerfile ARG

Also moves the ARG declarations immediately before they're used to
make this omission less likely for future additions.

Change-Id: Id52a936d978f96d3c629feff69fc9dc4ae1b8463
Reviewed-on: https://go-review.googlesource.com/c/140377
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2018-10-09 21:22:08,https://api.github.com/repos/golang/tools/git/commits/29f11e2b93f4d66f7c335bd7b2892836d4944f5c,29f11e2b93f4d66f7c335bd7b2892836d4944f5c,"playground: use play.golang.org instead of golang.org

Calling golang.org/{compile|share} just forwards it to
play.golang.org/{compile|share}. Avoid the extra jump for the
request.

Change-Id: I95e8e79fe4623346663d0c11204f196c75716177
Reviewed-on: https://go-review.googlesource.com/c/140839
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
andybons,2018-10-09 21:10:18,https://api.github.com/repos/golang/tools/git/commits/9ae43096244f067598960f85a9c4c8a3c4e30911,9ae43096244f067598960f85a9c4c8a3c4e30911,"playground: set content-type header on non-appengine builds

Currently, when a POST request is made using code with build tag
+build !appengine it doesn't set the content-type header passed
to the function. This was breaking the case where a url-encoded
body (a code snippet's body and protocol version) was being POSTed
to golang.org/compile since it never set the content-type of the
request and the corresponding form values parsed out were empty as
a result.

Update golang/go#28080

Change-Id: I677ca01b2f5aecedbd13d1faa7a838ddc0199244
Reviewed-on: https://go-review.googlesource.com/c/140838
Run-TryBot: Andrew Bonventre <andybons@golang.org>
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
alandonovan,2018-10-09 19:11:49,https://api.github.com/repos/golang/tools/git/commits/afb03721b58870ab358a6e5c430fc1ea96f6de4b,afb03721b58870ab358a6e5c430fc1ea96f6de4b,"go/analysis/passes/unreachable: split out of vet

Change-Id: Ibbc888ee86de1cc59392b258ec32d2aec3b9fbef
Reviewed-on: https://go-review.googlesource.com/c/140837
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 14:45:32,https://api.github.com/repos/golang/tools/git/commits/088df9ca28c8cc0b3b115e80d4205ca29d174db1,088df9ca28c8cc0b3b115e80d4205ca29d174db1,"go/analysis/passes/unusedresult: split out of vet

Change-Id: I4bdba827ab0a518d62dda85cfc66875a54aeda24
Reviewed-on: https://go-review.googlesource.com/c/140760
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 14:52:57,https://api.github.com/repos/golang/tools/git/commits/dd8190d4c737fd889da7df899bc102ef1458299a,dd8190d4c737fd889da7df899bc102ef1458299a,"go/analysis/passes/stdmethods: split check out of vet

Also, rename to stdmethods and add more tests.

Change-Id: I09b65899dc02a8062f3ec1d909c2eae45472e236
Reviewed-on: https://go-review.googlesource.com/c/140761
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-09 00:53:19,https://api.github.com/repos/golang/tools/git/commits/6d96510a3a1ce41c929ca332a25fa9cab475bd0c,6d96510a3a1ce41c929ca332a25fa9cab475bd0c,"go/analysis/passes/copylock: split out of vet

Change-Id: Ib7c735e714d8b5436d055bf99ca90e840c963c7b
Reviewed-on: https://go-review.googlesource.com/c/140740
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-08 17:56:31,https://api.github.com/repos/golang/tools/git/commits/a2b3f7f249e90c6fe7ca632df1cbbb6fd73c0cfa,a2b3f7f249e90c6fe7ca632df1cbbb6fd73c0cfa,"go/analysis/passes/assign: split out from vet

Also: create internal/analysisutil package for
trivial helper functions shared by many vet analyzers.
(Eventually we may want to export some of these functions.)

Change-Id: I2b721a16989826756d0426bc7f70089dfb1ef9ce
Reviewed-on: https://go-review.googlesource.com/c/140577
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
bcmills,2018-10-03 18:28:31,https://api.github.com/repos/golang/tools/git/commits/a2cab1077b72a218e7ffd26e3375a7692f1f3aed,a2cab1077b72a218e7ffd26e3375a7692f1f3aed,"cmd/gorename: set GO111MODULE=off in gorename_test

Updates golang/go#27858

Change-Id: Ia823c49d8f05831c833df9f745a879c94c915626
Reviewed-on: https://go-review.googlesource.com/c/139319
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-10-03 16:41:27,https://api.github.com/repos/golang/tools/git/commits/2f1727f1b37d7d257665debc72d4ae0b8e449748,2f1727f1b37d7d257665debc72d4ae0b8e449748,"go/packages: add basic support for overlays

This allows users of go/packages to replace the contents of already
existing files, to support use-cases such as unsaved files in editors.

BREAKING CHANGE: This CL changes the signature of the function provided
to Config.ParseFile.

Change-Id: I6ce50336060832679e9f64f8d201b44651772e0b
Reviewed-on: https://go-review.googlesource.com/c/139798
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-10-08 18:19:38,https://api.github.com/repos/golang/tools/git/commits/aa04744b491957d48794ae78fc1d766fe14d6dfd,aa04744b491957d48794ae78fc1d766fe14d6dfd,"go/analysis/passes/loopclosure: split out of vet

This analysis was renamed from ""rangeloops"" since it applies equally
to non-range for-loops.

Change-Id: I441378b29d36aaf7fe102913c5b3aaa7cfd351a0
Reviewed-on: https://go-review.googlesource.com/c/140578
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-05 15:50:13,https://api.github.com/repos/golang/tools/git/commits/ae971d7220690a166354ea17ea2c28b5d011f7e9,ae971d7220690a166354ea17ea2c28b5d011f7e9,"go/analysis/passes/asmdecl: split out of vet

Also: extend analysistest to extract '// want ...' comments
out of non-Go source files such as assembly.

This change also moves asm8.s file into the right directory
so that it gets exercised by the test.

All the .s files were git-mv'd and then the ERROR comments
were changed to 'want'; also +build vet_test tags were removed.
Sadly Gerrit reports the old and new files as unrelated...

Change-Id: I8a2ecd6dd6fb0e20630f0ba6205c4378e4e912b3
Reviewed-on: https://go-review.googlesource.com/c/140120
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-04 18:28:38,https://api.github.com/repos/golang/tools/git/commits/8a9223ac31b60f7f1aa9236865d8396b7cb310fe,8a9223ac31b60f7f1aa9236865d8396b7cb310fe,"go/analysis/passes/buildtag: split out of vet

buildtag checker:
- This checker has been modified from the version in vet to handle Go
  and non-Go files differently, to avoid having to re-read-and-parse
  Go files in the common case.
- The old cmd/vet driver would run this check on all the files in
  a directory whereas new drivers will run it only on the files
  selected for a particular configuration, so some of the checks
  (those in checkArguments) will never fire. But this is not a regression
  relative to 'go vet', because it too presents cmd/vet with only the
  files selected as part of the package.

analysistest:
- fix bug that processed a block of //-comments as one.
- treat ""...// want..."" within a //-comment as a want comment.
  This is required for adding expectations on lines that are already comments.

Change-Id: Iacf3684864e07532f77176481afbf059a9638f3b
Reviewed-on: https://go-review.googlesource.com/c/139797
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-04 14:30:31,https://api.github.com/repos/golang/tools/git/commits/1ca53e67e529c4f4ac570c2e6999f4bb77280abf,1ca53e67e529c4f4ac570c2e6999f4bb77280abf,"go/analysis/passes/lostcancel: split out from vet

Change-Id: Id19410d1e81ae29813404cd2e9781f57813110ef
Reviewed-on: https://go-review.googlesource.com/c/139677
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-04 17:56:41,https://api.github.com/repos/golang/tools/git/commits/4601f5dabaf2773cafa49a4d3919986823b509b8,4601f5dabaf2773cafa49a4d3919986823b509b8,"go/analysis: write package documentation

godoc: http://100.101.181.83:8000/pkg/golang.org/x/tools/go/analysis/
(Apologies to those not on Google corp network.)

Change-Id: I9e21e551443d3048cf247696367d6d06aa7da13e
Reviewed-on: https://go-review.googlesource.com/c/139678
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>"
broady,2018-10-04 01:38:58,https://api.github.com/repos/golang/tools/git/commits/f60d9635b16a5a57b06eaa119614ba4df421966a,f60d9635b16a5a57b06eaa119614ba4df421966a,"cmd/godoc: add version info for golang.org

Adds version information for package docs for the production version of
godoc running on golang.org.

Updates golang/go#5778.

Change-Id: I8b56e8152b20b34104f274263a6c0b5a0180093b
Reviewed-on: https://go-review.googlesource.com/c/139557
Reviewed-by: Devon H. O'Dell <devon.odell@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-10-03 22:01:32,https://api.github.com/repos/golang/tools/git/commits/3a5b620dc588bfddc8e80df67f65a8f2c630b84c,3a5b620dc588bfddc8e80df67f65a8f2c630b84c,"go/analysis/passes/ctrlflow: an Analyzer that builds CFGs

The ctrlflow Analyzer builds a control-flow graph (see
golang.org/x/tools/go/cfg) for each named and unnamed function in the
package.

It computes for each function whether it can never return, either
because the function is an intrinsic that stops the thread (e.g.
os.Exit), or because control never reaches a return statement, or
because the function inevitably calls another function that never
returns.  For each such function it exports a noReturn fact.

This change also:
- adds 'inspect', another Analyzer that builds an optimized AST
  traversal table for use by nearly every other Analyzer.
- changes analysistest.Run to return the analysis result to enable
  further testing.
  (This required changing it to analyze one package at a time,
  which is no less efficient, and is the typical case.)

Change-Id: I877e2b2363a365a9976aa9c2719ad3fba4df2634
Reviewed-on: https://go-review.googlesource.com/c/139478
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2018-10-05 20:08:45,https://api.github.com/repos/golang/tools/git/commits/e60d0f5bfdcd465de53b34b3cdf97fd7dd51e95a,e60d0f5bfdcd465de53b34b3cdf97fd7dd51e95a,"go/packages: skip TestLoadImportsC when Go has been built without cgo

This test is unsurprisingly failing on the nocgo builder because
the cgo packages don't exist on those builders.

Updates golang/go#28040

Change-Id: I633b73bb48e76824645e4e8dd141fb42c9adc19f
Reviewed-on: https://go-review.googlesource.com/c/140121
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-10-04 14:08:55,https://api.github.com/repos/golang/tools/git/commits/59602fdee893255faef9b2cd3aa8f880ea85265c,59602fdee893255faef9b2cd3aa8f880ea85265c,"go/analysis: several little fixes

internal/checker
- don't display ""[name.category]"" in diagnostic
  output. Most users don't care which analyzer reported the message.
  The -json output retains this information.
- print better log messages for analyze -debug=f.
- print (non-JSON) text output to standard error, like a compiler would.

passes/pkgfact
- fix a nil deref panic when encountering non-renaming imports.
- require names to have underscores before and after (_x_)
  as this avoids a huge number of spurious matches in (e.g.) the
  syscall package.
- don't export empty facts.

Change-Id: I86c003b96521334e371f9d5fcea1323cd779d7f0
Reviewed-on: https://go-review.googlesource.com/c/139657
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2018-10-03 21:43:12,https://api.github.com/repos/golang/tools/git/commits/211dcd1cef82d4dbfb19179d0694fa0dc9207ef1,211dcd1cef82d4dbfb19179d0694fa0dc9207ef1,"go/analysis/analysistest: unset GO111MODULE and GOPROXY

CL 139320 unset these env vars for the whole process in two tests,
but the correct fix is to unset them for subprocesses forked by go/packages.

Change-Id: I35e3ab9e424b00326e9e813e4daf0ae92ec36e26
Reviewed-on: https://go-review.googlesource.com/c/139477
Reviewed-by: Bryan C. Mills <bcmills@google.com>
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
broady,2018-10-03 05:21:05,https://api.github.com/repos/golang/tools/git/commits/1f2a8f46bd66722a69f1649231de9bf0635eb085,1f2a8f46bd66722a69f1649231de9bf0635eb085,"cmd/godoc: add cloud build config

Deploys no longer depend on Docker.

With only Make and gcloud installed, the following should deploy a new version:

$ git clone https://go.googlesource.com/tools
$ cd tools
$ cd cmd/godoc
$ make cloud-build deploy

Updates golang/go#27205.

Change-Id: I5cc1142e02dc288450d55dbd4da4b30c0a080bd5
Reviewed-on: https://go-review.googlesource.com/c/139240
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2018-10-03 05:21:05,https://api.github.com/repos/golang/tools/git/commits/a3d532c85d4e3a45dcf8348e79c5957c6ff76571,a3d532c85d4e3a45dcf8348e79c5957c6ff76571,"cmd/godoc: add `make publish` to migrate traffic

Also rename `make build` and `make push` to `make docker-build` and
`make docker-push` in preparation to introduce Cloud Build (removing
the dependency on Docker).

Updates golang/go#27205.

Change-Id: Iae19b9a6f77d09246a1332c7ec9eceec449cdba8
Reviewed-on: https://go-review.googlesource.com/c/139239
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bcmills,2018-10-03 18:31:06,https://api.github.com/repos/golang/tools/git/commits/140737fa61ecd083e4967b36551743e4d3c4600f,140737fa61ecd083e4967b36551743e4d3c4600f,"go/analysis/analysistest: set GO111MODULE=off in TestTheTest

This fixes 'go test ./...' in the root of the tools repo with GO111MODULE=on.

Updates golang/go#27858

Change-Id: I7492d2a2406997a399fe2badd24882fcb19d37c5
Reviewed-on: https://go-review.googlesource.com/c/139320
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2018-10-03 17:23:01,https://api.github.com/repos/golang/tools/git/commits/8e930c179322b2999de259aa029e04013ea24b19,8e930c179322b2999de259aa029e04013ea24b19,"go/packages: change ParserError to ParseError

Correct minor typo from
https://go-review.googlesource.com/c/tools/+/139317/3.

Change-Id: I76b661fbe136914b903011990e48c74563115ae6
Reviewed-on: https://go-review.googlesource.com/139318
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-10-02 20:24:02,https://api.github.com/repos/golang/tools/git/commits/71dfda0503371efaacb2be1d5226572b72bbe60d,71dfda0503371efaacb2be1d5226572b72bbe60d,"go/analysis/analysistest: support testing of facts

This change adds support for testing the facts produced by an Analyzer
using a similar mechanism to the way it checks for diagnostics.

A ""// want ..."" comment may now contain a mixture of expectations for
diagnostics and facts. Diagnostics are indicated by a string literal,
as before. Facts are indicated by name:""regexp"" where name identifies
the object (declared on the same line) with which the fact is
associated.

  func neverReturns() { // want neverReturns:""noReturn""
       for {}
  }

Also:
- analysistest: report errors during package loading.
  (We don't yet have a way to test RunDespiteErrors Analyzers in the
  face of errors.)
- tests for Facts produced by findcall and pkgfacts.
  (Findcall now produces facts just for testing.)
- Add String method to various Fact types.
  Should the Fact interface have this method?

Change-Id: Ifa15fbd49d6ec3042b5fe9d3ebf22f4bdfdc8769
Reviewed-on: https://go-review.googlesource.com/139157
Reviewed-by: Michael Matloob <matloob@golang.org>"
bcmills,2018-09-26 19:32:23,https://api.github.com/repos/golang/tools/git/commits/9fb5a2f241faf72fa927d328771f18998e4126b0,9fb5a2f241faf72fa927d328771f18998e4126b0,"all: set GO111MODULE=off for tests that use GOPATHs in testdata.

Some users may set GO111MODULE=on, and we will eventually want to be able to
build x/tools itself in module mode.

Updates golang/go#27858
Updates golang/go#27852

Change-Id: Iaf488b2a89e6526471530245cb580f1f0391a770
Reviewed-on: https://go-review.googlesource.com/137815
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2018-10-03 16:52:17,https://api.github.com/repos/golang/tools/git/commits/959914185653a8468eab6ff289b3a939eeee9b19,959914185653a8468eab6ff289b3a939eeee9b19,"go/packages: add ErrorKind field to differentiate error sources

Some applications (for example, diagnostics shown to a user in an
editor) may want to distinguish between errors generated by
the driver, parser, and type-checker. The Error struct did not have any
mechanism for doing this, so add an ErrorKind field and set it in
appendError.

Change-Id: If347163225d1e3a567e98610e9ba8a0930e4659c
Reviewed-on: https://go-review.googlesource.com/139317
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-10-02 19:34:24,https://api.github.com/repos/golang/tools/git/commits/c930a8531daf66d01ce069cc6b196eb98fe1138b,c930a8531daf66d01ce069cc6b196eb98fe1138b,"go/packages: remove code that skips two tests for Go 1.10

TestLoadImportsC just works on Go 1.10. And there's no good reason
that TestLoadAllSyntaxImportErrors shouldn't work, even though
it's currently always skipped.

Change-Id: Icd8d311f12c5731cc635937a00251eab0a3077ec
Reviewed-on: https://go-review.googlesource.com/139117
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-10-01 22:02:39,https://api.github.com/repos/golang/tools/git/commits/34d7740906d5daa29039c6f6c0c9311dabcfc274,34d7740906d5daa29039c6f6c0c9311dabcfc274,"gopackages: don't make .go files relative to search path

A previous change (golang.org/cl/137096) that made absolute package paths relative to
GOROOT or GOPATH entries also accidentally applied to .go filesnames.
Filter those out of the list of paths considered to make relative to
search path.
(package paths that don't start with './' or '/' are relative to GOROOT or GOPATH,
but filenames are not.)

Change-Id: I67fbd0e5caa7e53f3ab5b77f55d6841fe2132578
Reviewed-on: https://go-review.googlesource.com/c/138880
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-10-03 14:48:25,https://api.github.com/repos/golang/tools/git/commits/cb0b3361806ffaceeb9b0c4893144fad72d0d10b,cb0b3361806ffaceeb9b0c4893144fad72d0d10b,"go/packages: pass through packages with error in the fallback

This applies a part of golang.org/cl/137075 to the fallback. If go list
doesn't find a package, it returns an almost empty package structure
with an error set on it. That change passed through those packages
from the 1.11+ go list, so users could determine there wasn't a match.
This change does the same from the go 1.10 fallback go list code.

Change-Id: I98acc186c0a9eeef0416e9fec0e1fe0e29ddc51c
Reviewed-on: https://go-review.googlesource.com/c/139158
Reviewed-by: Alan Donovan <adonovan@google.com>"
broady,2018-10-03 01:41:55,https://api.github.com/repos/golang/tools/git/commits/2f84ea8ef8720b418a1414ed610df828e1db1b3b,2f84ea8ef8720b418a1414ed610df828e1db1b3b,"cmd/godoc: move regression tests to a go test

Run them separately from the other tests in godoc_test by requiring a
regtest.host flag and by filtering on the test name.

Updates golang/go#27205.

Change-Id: I166d2278a3f6954307f7c935567a81e73f78e7bb
Reviewed-on: https://go-review.googlesource.com/c/139238
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2018-10-02 23:44:50,https://api.github.com/repos/golang/tools/git/commits/390954b1abeec67b79c606727d1731bc70d16448,390954b1abeec67b79c606727d1731bc70d16448,"cmd/godoc: re-enable host checking, allow test versions

test.golang.org is no longer -- instead allow access to version-specific
App Engine URLs (like 20181002t1342-dot-golang-org.appspot.com).

App Engine Flex uses the X-Forwarded-Proto to signify the proto used by
the originating request (it always uses h1 on 8080 when proxying the
request).

Updates golang/go#27205.

Change-Id: I423ffe65df325500a2fa04c7b655797ecc6ad037
Reviewed-on: https://go-review.googlesource.com/c/139237
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2018-10-02 09:08:51,https://api.github.com/repos/golang/tools/git/commits/bdd8ae38fda3acb3ee7970c967ff994ba7f335a2,bdd8ae38fda3acb3ee7970c967ff994ba7f335a2,"cmd/godoc: improve deployment scripts, add buildinfo

* Build Go from a given version (make.bash)
* Add a /buildinfo file that describes the inputs of the
  build/deployment.
* Use Makefile/environment variables to override Go version and
  Docker tag.

Updates golang/go#27205.

Change-Id: Ia7a88b75f9d5b2319d2381e56bc963eb53e889c7
Reviewed-on: https://go-review.googlesource.com/c/138978
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-10-02 22:15:30,https://api.github.com/repos/golang/tools/git/commits/cd09f19c2f7e7d8a0054b976214f468f18e7aaf0,cd09f19c2f7e7d8a0054b976214f468f18e7aaf0,"godoc: move third-party godoc deps behind build tag

Fixes golang/go#27970

Change-Id: I6de10c260f31721bf83073ef5b140442c3ef7eb0
Reviewed-on: https://go-review.googlesource.com/c/139197
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
broady,2018-10-02 04:52:20,https://api.github.com/repos/golang/tools/git/commits/008d18139cb7769f4e539d7aecda5996c7b7217b,008d18139cb7769f4e539d7aecda5996c7b7217b,"godoc/static: regenerate

I must have forgotten to re-generate after rebasing from upstream.

Change-Id: I3465cd4cce9f4b6fd6e94fc51dc42b5efd11052b
Reviewed-on: https://go-review.googlesource.com/138977
Reviewed-by: Andrew Gerrand <adg@golang.org>"
broady,2018-09-04 16:55:45,https://api.github.com/repos/golang/tools/git/commits/ee6b03148c11e3c6e1901650849a84880be2b1f1,ee6b03148c11e3c6e1901650849a84880be2b1f1,"godoc: migrate to App Engine flexible

See bug for more details on exactly what was migrated.

Notably:
* No more Google-internal deployment scripts; see README.godoc-app and
  the Makefile for details.
* Build tag ""golangorg"" is used for the godoc configuration used for
  golang.org.
* Use of App Engine libraries replaced with GCP client libraries.
* Redis is used to replace App Engine memcache.
* Google analytics is controlled by an environment variable.
* Regression tests have been migrated from Google-internal.
* hg -> git hash map is moved from Google-internal.

Updates golang/go#27205.

Change-Id: Ia0a983f239c50eda8be2363494c8b784f60c2c6d
Reviewed-on: https://go-review.googlesource.com/133355
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2018-10-01 21:55:50,https://api.github.com/repos/golang/tools/git/commits/b71db7f417f13fa74a2565bc57b2387fdbf2c611,b71db7f417f13fa74a2565bc57b2387fdbf2c611,"godoc/dl: add dmitshur, katiehockman to binary upload whitelist

This is for uploading Go release binaries to dl.google.com with
x/build/cmd/release.

Updates golang/go#27953.

Change-Id: Idc9e5d5c4cf4c1e5602b51cc1159c982038c7901
Reviewed-on: https://go-review.googlesource.com/138879
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Reviewed-by: Katie Hockman <katie@golang.org>"
stamblerre,2018-09-27 22:15:45,https://api.github.com/repos/golang/tools/git/commits/8deeabbe2e5312c8a8c390e9cb04c61112f0c2f5,8deeabbe2e5312c8a8c390e9cb04c61112f0c2f5,"internal/lsp: support range formatting

Refactor code a bit to support range formatting as well document
formatting. Also, separate view from server to clean up.

Change-Id: Ica397c7a0fb92a7708ea247c2d5de83e5528d8d4
Reviewed-on: https://go-review.googlesource.com/138275
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-10-01 15:22:22,https://api.github.com/repos/golang/tools/git/commits/792c3e655cc60428ede8808000e7c30a26956da9,792c3e655cc60428ede8808000e7c30a26956da9,"go/types/objectpath: fix tests for pre-go1.11

The behavior of go/types.ObjectString (or perhaps the underlying
object) changed at some point.

Change-Id: I77f1d13c180e1f78ddc08e80e5d38aa01f425111
Reviewed-on: https://go-review.googlesource.com/138777
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2018-09-17 13:36:13,https://api.github.com/repos/golang/tools/git/commits/b3c0be4c978b9aca5acfec41ac043ed3914154a7,b3c0be4c978b9aca5acfec41ac043ed3914154a7,"go/ast/inspector: faster (amortized) AST traversals

This new package provides helper functions for traversal over the
syntax trees of a package, including node filtering by type, and
materialization of the traversal stack.

During construction, the inspector does a complete traversal and
builds a list of push/pop events and their node type. Subsequent
method calls that request a traversal scan this list, rather than walk
the AST, and perform type filtering using efficient bit sets.

Experiments suggest the inspector's traversals are about 2.5x faster
than ast.Inspect, but it may take around 5 traversals for this benefit
to amortize the inspector's construction cost.

This design is well-suited to the ongoing reworking of cmd/vet (see
docs.google.com/document/d/1-azPLXaLgTCKeKDNg0HVMq2ovMlD-e7n1ZHzZVzOlJk),
which historically made a single pass over the ASTs but is being
replaced by a design that requires a separate pass for each analysis.

Change-Id: I9a67aed6a3bf948076641d96447860d97ede67b4
Reviewed-on: https://go-review.googlesource.com/135655
Reviewed-by: Robert Griesemer <gri@golang.org>"
matloob,2018-09-24 21:54:34,https://api.github.com/repos/golang/tools/git/commits/16720d5f2d266a9398a17cd3fac6f7b5267b1751,16720d5f2d266a9398a17cd3fac6f7b5267b1751,"go/packages: allow absolute paths when using the fallback

Another change to bring the go1.10 fallback's functionality in line with
the go1.11 go list implementation. The fallback now uses go env to
determine GOPATH and GOROOT and searches them to see if any match an
absolute path, and if so trims the GOPATH/GOROOT entry off  the start
of the path.

Fixes golang/go#27734

Change-Id: Ibd2313fc4301d42fd8c0cd98f1f3e7a313d65eb7
Reviewed-on: https://go-review.googlesource.com/137096
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Heschi Kreinick <heschi@google.com>"
alandonovan,2018-09-28 14:56:40,https://api.github.com/repos/golang/tools/git/commits/51aacb140279dbef8da334580f2b6105110a7604,51aacb140279dbef8da334580f2b6105110a7604,"go/analysis: add command-line help

The format of Analyzer.Doc is now specified as a short title followed
by a longer description. This allows us to build a nice
self-documenting command-line interface. Much of the documentation in
vet's doc.go and file-level comments can now be displayed to the user.

Change-Id: I462343e97ac9b743284aaa3e06e7a81d11e9593f
Reviewed-on: https://go-review.googlesource.com/138396
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-09-28 13:02:09,https://api.github.com/repos/golang/tools/git/commits/7b71b077e1f4a3d5f15ca417a16c3b4dbb629b8b,7b71b077e1f4a3d5f15ca417a16c3b4dbb629b8b,"go/analysis/analysistest: refuse to analyze zero packages

It's easy to forget to pass the last argument,
in which case the test would silently pass.

Change-Id: I95249e1fe8bee75cfaa535fcf723d04f102214fc
Reviewed-on: https://go-review.googlesource.com/138395
Reviewed-by: Michael Matloob <matloob@golang.org>"
agnivade,2018-09-28 10:33:36,https://api.github.com/repos/golang/tools/git/commits/ae8529dc1617e5bdf52ad634399d6411d4b31324,ae8529dc1617e5bdf52ad634399d6411d4b31324,"godoc/vfs/zipfs: join paths to get correct RootType

The logic was incorrectly written from vfs/os.go. zipfs filesystem
passes actual paths during dirTree building. So we need to join the paths
to determine whether they are under GOROOT or GOPATH.

Updates golang/go#27205

Change-Id: Ic4330fce02c6ebfc44ae21122e2412c33f0cd45a
Reviewed-on: https://go-review.googlesource.com/138435
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-09-17 13:50:12,https://api.github.com/repos/golang/tools/git/commits/73ed285d4cd8d8e1bf4d9fcb3f0b94ba45a44e7b,73ed285d4cd8d8e1bf4d9fcb3f0b94ba45a44e7b,"go/types/objectpath: a stable naming scheme for types.Object

Type-checker objects are canonical, so they are usually identified by
their address in memory (a pointer), but a pointer has meaning only
within one address space. By contrast, objectpath names allow the
identity of a logical object to be sent from one program to another,
establishing a correspondence between types.Object variables that are
distinct but logically equivalent.

This package was developed for Google's internal fork of guru.
It is needed for lemma support in the analysis API; see
docs.google.com/document/d/1-azPLXaLgTCKeKDNg0HVMq2ovMlD-e7n1ZHzZVzOlJk

Change-Id: I9899ce14d57909858a68f84e90d58a039f2bb7a0
Reviewed-on: https://go-review.googlesource.com/135675
Reviewed-by: Robert Griesemer <gri@golang.org>"
bcmills,2018-09-20 20:46:50,https://api.github.com/repos/golang/tools/git/commits/84988e2dba31f16dd5c0b1b843ed45c72a0a1b22,84988e2dba31f16dd5c0b1b843ed45c72a0a1b22,"go/packages: do not error out for patterns that match no packages

The documentation for Load says:
“Load returns an error if any of the patterns was invalid as defined
by the underlying build system. It may return an empty list of
packages without an error, for instance for an empty expansion of a
valid wildcard. Errors associated with a particular package are
recorded in the corresponding Package's Errors list, and do not cause
Load to return an error.”

Therefore, it should not be an error for a pattern to match no
packages. If the pattern is a literal package path that does not
exist, we should prefer to return a *Package for it with an error in
the Errors field.

Change-Id: Iaecfb920097e3b520e763bd52c0e326d2e7a4861
Reviewed-on: https://go-review.googlesource.com/137075
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
broady,2017-06-27 04:05:28,https://api.github.com/repos/golang/tools/git/commits/e9ca907325a54929174f01b115742dbac294b788,e9ca907325a54929174f01b115742dbac294b788,"cmd/godoc: simplify dev and prod environment for App Engine

Remove all of the code generation and the concept of ""APPDIR"" - just
generate godoc.zip and index files in the app directory.

Simplify generation of the zip - use a symlink so that every file in
godoc.zip is under the ""goroot"" directory, regardless of the
environment. Previously, the prefix would be dependent on the location
of the user's GOROOT.

Running the setup script is now optional - it's now possible to run
dev_appserver.py on a regular checkout of cmd/godoc without godoc.zip
and search index files. Use environment variables to switch whether the
zip file is used vs reading GOROOT from the filesystem.

Change-Id: I1ce95c891717fe2da975f979778fd775b23f18c8
Reviewed-on: https://go-review.googlesource.com/46725
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
alandonovan,2018-09-27 17:10:15,https://api.github.com/repos/golang/tools/git/commits/1be7b45b4c8359a408756f1a626897c173a5be94,1be7b45b4c8359a408756f1a626897c173a5be94,"go/analysis/passes/vet: fork cmd/vet@31d19c0

This change creates a fork of vet from the standard distribution.

It was created by this script:

 $ mkdir go/analysis/passes/vet/
 $ cd go/analysis/passes/vet/
 $ (cd $GOROOT/src/cmd/vet >/dev/null && git co 31d19c0 && tar cf - .) | tar xf -
 $ rm -fr all              # We'll deal with cmd/vet/all later.
 $ rm -fr internal/cfg     # Published as golang.org/x/tools/go/cfg.
 $ sed -i -e '1s?^?// +build ignore\n\n?' *.go

All the Go files have been tagged ""ignore"" for now.
A series of follow-up changes will convert each vet check
into an instance of the new go/analysis API's Analyzer.

At some point soon, cmd/vet in the standard distribution will use a
vendored copy of this code. Until then we will periodically integrate
any changes made to cmd/vet to this fork. The current version of
cmd/vet will be recorded in the REVISION file.

Change-Id: I0c63eeb17cc612b3f013679595dcbc71a90950f7
Reviewed-on: https://go-review.googlesource.com/138137
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-09-27 16:42:39,https://api.github.com/repos/golang/tools/git/commits/b41e4b469b2bafe522fded91c604eed59357789c,b41e4b469b2bafe522fded91c604eed59357789c,"go/analysis: add Pass.OtherFiles field

This field lists the names of non-Go files that are part of the
package under analysis.

Change-Id: Ic967dc18b98e018c691442f7378cb29db30a1454
Reviewed-on: https://go-review.googlesource.com/138136
Reviewed-by: Michael Matloob <matloob@golang.org>"
stamblerre,2018-09-27 15:28:20,https://api.github.com/repos/golang/tools/git/commits/d457fc80545a81e74af7ab0ea8ee875e86d59c65,d457fc80545a81e74af7ab0ea8ee875e86d59c65,"cmd/golsp: support formatting in golsp

This commit adds support for some basic commands necessary for
integration with VSCode. It also adds support for the
""textDocument/format"" method.

Change-Id: I8fd0e33ca544ab65d3233efe2fef9716446ad4ff
Reviewed-on: https://go-review.googlesource.com/138135
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-09-26 20:34:31,https://api.github.com/repos/golang/tools/git/commits/308f0c7c09fc9a2cba898a7445d92edc31bf2a85,308f0c7c09fc9a2cba898a7445d92edc31bf2a85,"go/analysis: revert UsesFacts to FactTypes

Forcing clients to register their Fact types with gob made for an
unfriendly API. Now the driver is again responsible for doing it.

The FactTypes field is now a slice of Fact values (not reflect.Types)
used only for their dynamic type, which is slightly more convenient.

Change-Id: I01219edb24bd2371ba642bb56508aa80c19a9b61
Reviewed-on: https://go-review.googlesource.com/137836
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2018-09-24 22:05:51,https://api.github.com/repos/golang/tools/git/commits/ef04bbebd8b9defaeba49812314bc84151d6f39f,ef04bbebd8b9defaeba49812314bc84151d6f39f,"cmd/golsp: An empty shell of an lsp server for the go language

Change-Id: I51ef556048c2d10537ad90fa5284939e09bc31fd
Reviewed-on: https://go-review.googlesource.com/137097
Reviewed-by: Rebecca Stambler <rstambler@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2018-09-27 05:02:40,https://api.github.com/repos/golang/tools/git/commits/9e2f8b2a0ac2cc9c3237908fdd5c0471b6ab311f,9e2f8b2a0ac2cc9c3237908fdd5c0471b6ab311f,"go/internal/gccgoimporter: remove special case for Go1.9

The supported x/tools versions are now all at least Go1.9.

Change-Id: I9476329f2be8f3c560efb280f06d65669a3e9f85
Reviewed-on: https://go-review.googlesource.com/137996
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2018-09-27 03:35:05,https://api.github.com/repos/golang/tools/git/commits/b14f328a62114bcf7494e8f83220679c7be17fb3,b14f328a62114bcf7494e8f83220679c7be17fb3,"go/internal/gccgoimporter: port recent changes from stdlib version

This CL brings over the following changes from the std lib:

	https://golang.org/cl/137857
	https://golang.org/cl/137935
	https://golang.org/cl/137975

There are no further code changes except that the importer test
cases are split between importer_test.go and importer19_test.go
to support multiple Go versions.

Updates golang/go#27856.

Change-Id: I625def738c22c24c6659af37c3871038fdd8b981
Reviewed-on: https://go-review.googlesource.com/137995
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2018-09-26 20:17:24,https://api.github.com/repos/golang/tools/git/commits/ef4a2a23bb352ec5208f5bb6cb3d7a8b15351afc,ef4a2a23bb352ec5208f5bb6cb3d7a8b15351afc,"go/analysis/analysistest: fix tests on MS Windows

CL 137735 only fixed Darwin, and was submitted prematurely.

Change-Id: Idf9706ab2dc6ef716471cd6a2089bb0be63a54a2
Reviewed-on: https://go-review.googlesource.com/137835
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-09-26 16:43:23,https://api.github.com/repos/golang/tools/git/commits/34cd4017e8bd2db8369a03c60ae9c41a171e4ad6,34cd4017e8bd2db8369a03c60ae9c41a171e4ad6,"go/analysis/analysistest/analysistest: fix test on non-Linux

The test's pathname sanitization heuristically assumed that $TMPDIR
contained /tmp, which is not the case on Darwin or Windows. Now we
pass it the precise directory prefix to strip off.

Fixes golang/go#27877

Change-Id: I85167d721ebb9c4f6d74016a00025fd726939e47
Reviewed-on: https://go-review.googlesource.com/137735
Run-TryBot: Andrew Bonventre <andybons@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-09-26 13:05:57,https://api.github.com/repos/golang/tools/git/commits/c756801b0141e5d8f5f43e38d9962117e034e565,c756801b0141e5d8f5f43e38d9962117e034e565,"go/analysis/internal/checker: fix go1.10 build

...by removing references to trace API for now.

Change-Id: Ide6bbbfd98e15a3773b4a10232bcbf2dc2153341
Reviewed-on: https://go-review.googlesource.com/137615
Reviewed-by: Alan Donovan <adonovan@google.com>"
jaqx0r,2018-09-25 23:48:44,https://api.github.com/repos/golang/tools/git/commits/9eb9690e392a79b547be16fa2fa66f1710ed3035,9eb9690e392a79b547be16fa2fa66f1710ed3035,"cmd/goyacc: put //line annotations on the first column.

This appears to have broken since go1.11, and ""go doc compile"" and
https://golang.org/issue/24183 documents this new convention (point
2)

Change-Id: I6a4bc0fc51a18c17ac9a72a67d9a8eb4c879e0f9
Reviewed-on: https://go-review.googlesource.com/137515
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2018-09-17 22:20:11,https://api.github.com/repos/golang/tools/git/commits/d5fdb01c2f8f8a60487620d9db2c0119c46f784e,d5fdb01c2f8f8a60487620d9db2c0119c46f784e,"go/analysis/internal/checker: analysis driver based on go/packages

Package checker is a driver for the analysis API.
It is an internal package, but is exposed by three different APIs:
analysistest, singlechecker, and multichecker.

Checker uses go/packages to load the specified packages (plus their
dependencies, if any analysis uses facts) from source code.

It constructs a graph of actions (analysis passes), whose dependency
edges may be ""horizontal"", when one analyzer depends on the output of
another applied to the same package, or ""vertical"", when an an
analyzer consumes facts produced by the same analyzer applied to a
dependency package.
The graph is executed in parallel, unless -debug=p.

Facts are passed from one pass to another in memory.
If -debug=s, facts are serialized, to exercise that logic.

Findings are printed at the end.
The -json flag selects JSON output.

Use -debug=t to print timing information.
Always use -debug=tp, for sequential mode, when timing.

Also:
- analysistest:  a wrapper for testing checkers
- multichecker:  a wrapper for writing multi-checker tools
                 Analysis flags are prefixed by name: -findcall.name=foo.
- cmd/analyze:   a command-line tool based on multichecker
- singlechecker: a wrapper for writing single-checker tools
                 Analysis flags are unprefixed: -name=foo.
- passes/findcall/cmd/findcall: a standalone tool for the findcall analysis
- tests for findcall
- tests for pkgfact

Change-Id: Icfd4a49cee17e7de1ddb6ec15a62dc667fb2db04
Reviewed-on: https://go-review.googlesource.com/135679
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-09-17 13:28:16,https://api.github.com/repos/golang/tools/git/commits/942d58378d2f3579ccd791f25feaa07c319e1e79,942d58378d2f3579ccd791f25feaa07c319e1e79,"go/cfg: a syntactic control-flow graph (CFG)

This package defines a control-flow graph of Go statements and
expressions. It was originally built as part of cmd/vet (where
it was in turn derived from x/tools/go/ssa) and is being
published to make it available to other analyses.

Change-Id: Ib6077c5a856bb74d6a8411e9c3f9e2f79beb5658
Reviewed-on: https://go-review.googlesource.com/135636
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-09-25 18:36:08,https://api.github.com/repos/golang/tools/git/commits/31d48d9a8c6e57e685683e013f5800f277a8a145,31d48d9a8c6e57e685683e013f5800f277a8a145,"go/analysis: more API renamings:

                Info -> TypesInfo
              Syntax -> Files
          Diagnostic -> Finding

Also, diagnostics are now reported by calling Pass.Report (or Reportf).

Change-Id: Id5e0745fca914699a6a64be3554049ffc02e822b
Reviewed-on: https://go-review.googlesource.com/137395
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2018-09-17 22:17:20,https://api.github.com/repos/golang/tools/git/commits/0b24b358f4c7eaa92895f67a3f6cea2a0cf525d5,0b24b358f4c7eaa92895f67a3f6cea2a0cf525d5,"go/packages: add missing test variants to fallback loader

For all packages p, q where there's an dependency path of
p.test -> ... -> q -> ... -> p, Go creates test variants
q [p.test] of each q and replaces the dependency on q with
a dependency on q [p.test], and replaces p with the expanded
test variant p[p.test]. Fix the fallback logic to add
these missing test variants. (Before this change, it was
only producing the variant of p: p [p.test].)

Fixes golang/go#27670

Change-Id: Ic56ba35fadcdf8c5928ec76f5a7b0ebe650c9f02
Reviewed-on: https://go-review.googlesource.com/136176
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-09-24 21:32:33,https://api.github.com/repos/golang/tools/git/commits/e2857128af6b14510c22a7ba5f85839bff1c4b1e,e2857128af6b14510c22a7ba5f85839bff1c4b1e,"go/analysis: several API renamings

                 Analysis -> Analyzer
                 Unit     -> Pass
                 Output   -> Result
                 Inputs   -> ResultOf
                 Lemma    -> Fact
 Set{Object,Package}Lemma -> Export{Object,Package}Fact
    {Object,Package}Lemma -> Import{Object,Package}Fact
               LemmaTypes -> UsesFacts bool
                 plugins/ -> passes/

Notes:
- Unit.Output is no longer a field; it's the result of calling Analyzer.Run.
- Because analyzers no longer declare their LemmaTypes, they, not the
  driver, are now responsible for registering Fact types with Gob.

A follow-up change will additionally rename:

                  Finding -> Report
              Pass.Syntax -> Pass.Files
                Pass.Info -> Pass.TypesInfo

Change-Id: Iccbdadbea5a0aafe732e23a344dd57fd93681931
Reviewed-on: https://go-review.googlesource.com/137095
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
bcmills,2018-09-25 14:54:35,https://api.github.com/repos/golang/tools/git/commits/dca76387a03d76c7ad4a79783e9c37238168280e,dca76387a03d76c7ad4a79783e9c37238168280e,"go/ssa/interp: skip failing test

This test introduces noise when using 'go test all' or 'go test ./...'
to test go/packages and the tools that depend on it.

Since it has been broken for around a month, skip it indefinitely.

Updates golang/go#27292

Change-Id: I796292310332712e14bc8a0b73e36a8ed6f8a73f
Reviewed-on: https://go-review.googlesource.com/137315
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2018-09-24 21:24:58,https://api.github.com/repos/golang/tools/git/commits/ff3f684ce0136592e4f7398b9a9fabaf9b712dbc,ff3f684ce0136592e4f7398b9a9fabaf9b712dbc,"internal/lsp: the core lsp protocol

This is not intended to be a user friendly package, just the rawest correct
implemenation of the protocol as a building block

Change-Id: Ib672b7f1e2fd8284be422dc7964f1876e94c9578
Reviewed-on: https://go-review.googlesource.com/136676
Reviewed-by: Alan Donovan <adonovan@google.com>
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
ianthehat,2018-09-21 15:17:43,https://api.github.com/repos/golang/tools/git/commits/e93be7f42f9fcac2c537bcd78bab08e6e63ed5bf,e93be7f42f9fcac2c537bcd78bab08e6e63ed5bf,"internal/jsonrpc2: a basic json rpc library to build an lsp on top of

Change-Id: I6aa47fffcb29842e3194231e4ad4b6be4386d329
Reviewed-on: https://go-review.googlesource.com/136675
Reviewed-by: Rebecca Stambler <rstambler@golang.org>"
matloob,2018-09-08 00:11:41,https://api.github.com/repos/golang/tools/git/commits/90fa682c2a6e6a37b3a1364ce2fe1d5e41af9d6d,90fa682c2a6e6a37b3a1364ce2fe1d5e41af9d6d,"go/packages: generate test main files from the golist fallback

Part of the testmain generation logic (sans coverage) has been taken
from go build and put into golist_fallback_testmain.go.
golist_fallback invokes this logic and builds up the package metadata
for the testmain.
The tests checking for testmain are now no longer skipped from
packages_test.go.

Change-Id: I487a947f087f3ad4161ea6c2bed06ebb2f833422
Reviewed-on: https://go-review.googlesource.com/134119
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-09-17 13:25:48,https://api.github.com/repos/golang/tools/git/commits/9f3b32b5c48ba2ae38aa67c3c1ff69f1dbbf54ca,9f3b32b5c48ba2ae38aa67c3c1ff69f1dbbf54ca,"go/analysis: a new API for analysis tools

This CL contains just the API, the validate function,
and two example analyses, findcall and pkglemma.

Change-Id: Ia1f2652647050b1e0e15dad8b9ae10cf1a5fbdbc
Synopsis: go-review.googlesource.com/c/tools/+/134935
Design:   docs.google.com/document/d/1-azPLXaLgTCKeKDNg0HVMq2ovMlD-e7n1ZHzZVzOlJk
Reviewed-on: https://go-review.googlesource.com/135635
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
alandonovan,2018-09-17 14:16:20,https://api.github.com/repos/golang/tools/git/commits/02eab57fcf07c5dffe3a7f31258e1da0bddc02b5,02eab57fcf07c5dffe3a7f31258e1da0bddc02b5,"go/types/typeutil: add StaticCallee helper function

StaticCallee reports the destination of a CallExpr, if it is a static
call to a Go function or method.

StaticCallee is not a complicated function, but I wrote it four times
during the course of prototyping the analysis API in
go-review.googlesource.com/c/tools/+/134935.

Change-Id: Icd26fc1e5f6ed9edebd4d0a00fdf18aa0acb074c
Reviewed-on: https://go-review.googlesource.com/135676
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2018-09-11 01:30:46,https://api.github.com/repos/golang/tools/git/commits/677d2ff680c188ddb7dcd2bfa6bc7d3f2f2f75b2,677d2ff680c188ddb7dcd2bfa6bc7d3f2f2f75b2,"go/ssa: use correct type for variadic parameter in wrapper methods

For some reason, the type of the last Param in a wrapper function
for a variadic method (T) f(...U) had type [][]U instead of []U.
(Possibly a workaround for a long-since fixed bug in go/types?)

Added a sanity check to ensure that the common suffix of
fn.Params and fn.Signature.Params match in type.

Fixes golang/go#27453

Change-Id: I9506f4f67a7ff3a283e9ec0142f638aad00287a9
Reviewed-on: https://go-review.googlesource.com/134515
Reviewed-by: Robert Griesemer <gri@golang.org>"
zchee,2018-09-10 14:40:50,https://api.github.com/repos/golang/tools/git/commits/18207bb12d3a3338e74403fed8ca1ba866dd3a57,18207bb12d3a3338e74403fed8ca1ba866dd3a57,"go/packages: remove unnecessary newline on import section

Change-Id: I5d0019b76335460b35d4253f5c534810cc6bda77
Reviewed-on: https://go-review.googlesource.com/134335
Reviewed-by: Alan Donovan <adonovan@google.com>"
dmitshur,2018-09-10 03:08:43,https://api.github.com/repos/golang/tools/git/commits/becf93d7cfc653520cea308da2bc870574b0b3bb,becf93d7cfc653520cea308da2bc870574b0b3bb,"imports: update zstdlib to Go 1.11

Go 1.11 has been released; it's time to update zstdlib so
imports knows about API additions that went into Go 1.11.

Unfortunately, this does not include the syscall/js package
that was added in Go 1.11 for WebAssembly. This is because
it's not included in the GOROOT/api/go1.11.txt file. Getting
it into imports can/will be done in a future CL (after some
discussion of the best way to do it).

Previously:

-	https://golang.org/cl/93195 (Go 1.10)
-	https://golang.org/cl/49150 (Go 1.9)

Updates golang/go#27590.

Change-Id: I229d7c0a658b0d8090b58cfe844c95b4cb0b2212
Reviewed-on: https://go-review.googlesource.com/134176
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
kevinburke,2018-08-30 21:43:30,https://api.github.com/repos/golang/tools/git/commits/af9b995e7e6da8c597674d7f4d22b5fa47b7c3cb,af9b995e7e6da8c597674d7f4d22b5fa47b7c3cb,"imports: rerun ""go generate"" with new gofmt

This reformats the table using the new gofmt rules in Go 1.11. No
changes apart from the whitespace change.

Change-Id: I74a1d9c14ec7a4f691e78cc7ffa443da68fb8681
Reviewed-on: https://go-review.googlesource.com/132395
Reviewed-by: Andrew Bonventre <andybons@golang.org>
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2018-08-21 21:35:57,https://api.github.com/repos/golang/tools/git/commits/0aa4b8830f481fed77b73cf7cea2bc3129e05148,0aa4b8830f481fed77b73cf7cea2bc3129e05148,"go/packages: remove the Config.Error hook

Errors relating to a particular package (as opposed to the Load
operation as a whole) are now only recorded in the Errors
field of the corresponding Package.
Clients are responsible for printing or otherwise handling errors.
This is a breaking API change.

The PrintErrors function prints all accumulated errors,
dependencies first, and is provided for convenience.

PrintErrors is based on Visit, another helper function, which
visits each Package in an import graph.

Also:
- add an Example documenting typical use.
- update clients to handle errors explicitly.

Depends on https://go-review.googlesource.com/c/tools/+/130576

Change-Id: I39407ab7f46dae2f0dd0fdde21080e172e1258aa
Reviewed-on: https://go-review.googlesource.com/131015
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2018-09-04 19:10:42,https://api.github.com/repos/golang/tools/git/commits/18b2bbde9dd0ec9af0dcc5779baf873c36f89fff,18b2bbde9dd0ec9af0dcc5779baf873c36f89fff,"go/packages: fix incorrect x_test graph in fallback

This change fixes a bug that occured in the golist fallback logic when
an x_test package imported its own package under test. For a package
""a"", if ""a_test"" imported ""a"", we'd populate ""a_test""'s import map
with an entry ""a [a.test]"" pointing to the test variant of the package
with id ""a [a.test]"". This change fixes the key to be ""a"", the correct
import path of the package, not ""a [a.test], which is the ID"".

Change-Id: If798f2675b01aa537c6ccc129dc35d042d967337
Reviewed-on: https://go-review.googlesource.com/133356
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2018-08-21 21:35:57,https://api.github.com/repos/golang/tools/git/commits/f1c1faf65a94bd57d856f83f39af12fbb8c04c80,f1c1faf65a94bd57d856f83f39af12fbb8c04c80,"go/packages: coerce all errors to a single type

Rather than document the range of possible error types, requiring
clumsy client code to extract position information, we now expose a
single concrete type for all errors. Position information (in
standardized string form) is technically optional, but we should
strive for 100%, fixing gaps as they arise.

This change enables us to unify the Package and JSON structs in a
follow-up.

Question: should we eliminate the Config.Error hook and be silent by default?
Pro:
+ most clients suppress it.
Con:
- clients that want to print errors (e.g. vet-like tools) would have
  to traverse the entire import graph to find them.
- silence is not the most fail-safe behavior.

Change-Id: Ie92b9fb7641ceda429f00928474b650d1dfadedd
Reviewed-on: https://go-review.googlesource.com/130576
Reviewed-by: Michael Matloob <matloob@golang.org>"
tzneal,2018-08-31 20:37:03,https://api.github.com/repos/golang/tools/git/commits/7ca132754999accbaa5c1735eda29e7ce0f3bf03,7ca132754999accbaa5c1735eda29e7ce0f3bf03,"go/packages: fix docs

Change-Id: Ife879995fd1a8f23821efefe6970a0e907f2fb12
Reviewed-on: https://go-review.googlesource.com/132600
Run-TryBot: Todd Neal <todd@tneal.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Kevin Burke <kev@inburke.com>"
kevinburke,2018-08-27 22:02:08,https://api.github.com/repos/golang/tools/git/commits/4bc20fc7916bc21abba37451a6923cffa9a2cd3f,4bc20fc7916bc21abba37451a6923cffa9a2cd3f,"godoc: fix indenting on Firefox

See comment in the patch for an explanation, Firefox (specifically
with the Menlo font) does not like tabs beginning in column 9, so we
start it in column 10.

Updates webcompat/web-bugs#17530
Fixes golang/go#26316
Fixes golang/go#23500

Change-Id: I4c96118b8c3b13ee1fd21ce85bd7c681e99a4b4f
Reviewed-on: https://go-review.googlesource.com/131716
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
andybons,2018-08-27 21:23:45,https://api.github.com/repos/golang/tools/git/commits/6cd1fcedba52a3e8045a1c96970cec308e4a632c,6cd1fcedba52a3e8045a1c96970cec308e4a632c,"cmd/godoc: remove workaround for 1.8 behavior

1.8 is no longer supported. Remove code that placates it.
Also removes a superfluous newline in appinit.go.

Change-Id: I9c89b5bddf4c001d0854404114fb354209ad6024
Reviewed-on: https://go-review.googlesource.com/131715
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-08-28 01:44:31,https://api.github.com/repos/golang/tools/git/commits/4426aff4d03c8029cace1ee1eff5b658c608079f,4426aff4d03c8029cace1ee1eff5b658c608079f,"go/ssa/interp: disable regularly broken tests in short mode

Updates golang/go#27292

Change-Id: I845afc64ca9ed2065c3b5645b7ce6def290d7a6d
Reviewed-on: https://go-review.googlesource.com/131717
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-08-25 23:28:30,https://api.github.com/repos/golang/tools/git/commits/f6ba5742950514ddd66494151ed5498ed77969ca,f6ba5742950514ddd66494151ed5498ed77969ca,"godoc/dl: update Mac & Windows minimum versions

Updates golang/go#27213

Change-Id: I25813e9aafcdb39d4f93e27b98d8672c770234a6
Reviewed-on: https://go-review.googlesource.com/131402
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
agnivade,2018-08-25 04:52:28,https://api.github.com/repos/golang/tools/git/commits/b776bcbf45cd3a7a25b056cb456aae1d27f0cdf9,b776bcbf45cd3a7a25b056cb456aae1d27f0cdf9,"godoc/vfs: improve comment on GOROOT

GOROOT is not a function, so use ""is"" instead of ""returns"".
This was originally raised during review of golang.org/cl/131315.

Also add a missing period.

Change-Id: Ie28d38529889702ae5035d0f48d8122b6bee6819
Reviewed-on: https://go-review.googlesource.com/131316
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
agnivade,2018-08-24 17:18:03,https://api.github.com/repos/golang/tools/git/commits/6c1c5e93cdc185a6ddf8f821166b3e631b0f8a72,6c1c5e93cdc185a6ddf8f821166b3e631b0f8a72,"godoc/vfs: reorder comment paras to display the correct one

This is a fixup for golang.org/cl/130796.

Change-Id: If151325738b59ab61a7b456a140d3bc8dff57b9c
Reviewed-on: https://go-review.googlesource.com/131315
Reviewed-by: Dmitri Shuralyov <dmitshur@golang.org>"
jayconrod,2018-08-23 14:47:20,https://api.github.com/repos/golang/tools/git/commits/ff6c8c104af2168da09d225428803f855a80b1ce,ff6c8c104af2168da09d225428803f855a80b1ce,"go/packages: initialize config.Env with os.Environ when unset

This makes Load use the value of GOPACKAGESDRIVER in the current
process's environment if the loader's environment wasn't explicitly
set.

Note that if GOPACKAGESDRIVER is not set, we'll still search PATH in
the current process, regardless of whether PATH is set in the loader's
environment. This has not changed.

Change-Id: I3081a6cb0876a21ccd4d87b4b8d082aa47911b75
Reviewed-on: https://go-review.googlesource.com/131016
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-23 16:01:34,https://api.github.com/repos/golang/tools/git/commits/0bd7993ac0faaa363ea801cf51c8a3c140ea586b,0bd7993ac0faaa363ea801cf51c8a3c140ea586b,"go/ssa/interp: disable failing part of a test

The interpreter has no intrinsic for reflect.Value.MapRange,
so it no longer supports fmt.Sprint on a map, which uses it.
Suppressing part of complit.go test for now.

Change-Id: Id6ade19bdbb92593d6da57c82e75f311fb65b4fe
Reviewed-on: https://go-review.googlesource.com/131075
Reviewed-by: Robert Griesemer <gri@golang.org>"
agnivade,2018-08-23 05:24:26,https://api.github.com/repos/golang/tools/git/commits/ba93f9405e5422070378f3fd678025dfceec0863,ba93f9405e5422070378f3fd678025dfceec0863,"godoc: update to use new goroot finding logic

The logic to determine whether a filesystem root was in GOROOT or GOPATH
still relied on runtime.GOROOT(), whereas cmd/godoc was updated to copy
the goroot finding logic from standard library.

Hence, godoc is unable to determine if a filesystem is in GOROOT or not
when the binary is outside runtime.GOROOT(). So we expose a new variable
and set that from cmd/godoc to avoid copying the logic again for the 3rd time.

Fixes golang/go#27162

Change-Id: I160dcdbdd262e671f09f7bf01c329be5eac280ad
Reviewed-on: https://go-review.googlesource.com/130796
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-08-22 14:55:55,https://api.github.com/repos/golang/tools/git/commits/447b503c8ba6e20bc730585499fc01c81a78c621,447b503c8ba6e20bc730585499fc01c81a78c621,"go/packages: fix flaky TestJSON

Visit packages in deterministic order for predictable JSON.

(I don't know why the test only appears to fail on darwin;
I would expect it to randomly fail in linux 50% of the time.)

Change-Id: I5270804077fc9ca8f529a1f4657e1c35f0586579
Reviewed-on: https://go-review.googlesource.com/130755
Reviewed-by: Michael Matloob <matloob@golang.org>"
bradfitz,2018-08-21 21:39:23,https://api.github.com/repos/golang/tools/git/commits/ef27ca3af5e1f1424fdf755673c150c59c9fbe9d,ef27ca3af5e1f1424fdf755673c150c59c9fbe9d,"cmd/godoc: redirect to https instead of http for blog.golang.org

And update some comments.

Change-Id: I4e0b7062fa0d12982ad0f9ee150635cf11ed247c
Reviewed-on: https://go-review.googlesource.com/130555
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
jayconrod,2018-08-20 21:51:35,https://api.github.com/repos/golang/tools/git/commits/5fad05c81888302518e9dfb20b55b3e1790c7a11,5fad05c81888302518e9dfb20b55b3e1790c7a11,"go/packages: rename config.Flags to BuildFlags

This change adds the -buildflag argument to go/packages/gopackages,
which may be passed repeatedly to set config.BuildFlags. I felt -flag
was too vague.

config.Flags is renamed to config.BuildFlags for consistency, and
packages.findExternalDriver now passes -buildflag instead of -flag to
drivers. This will break existing drivers.

Change-Id: Iaed58026373a46e137a236ee9a652eb3a9433ee3
Reviewed-on: https://go-review.googlesource.com/130136
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-20 20:53:32,https://api.github.com/repos/golang/tools/git/commits/c1406c36efe20fb423f43a73518f0454febeed1f,c1406c36efe20fb423f43a73518f0454febeed1f,"go/packages: fix test failing on go1.10

The legacy implementation currently always loads from source code, so
packages are more complete than expected.

Change-Id: Ib8c9f7ac590038108dba05c1f47d22e70734945c
Reviewed-on: https://go-review.googlesource.com/130095
Reviewed-by: Michael Matloob <matloob@golang.org>"
dominikh,2018-08-18 03:25:46,https://api.github.com/repos/golang/tools/git/commits/44ec670fe79651ce497331d55a0336059ed81d9a,44ec670fe79651ce497331d55a0336059ed81d9a,"cmd/digraph: print usage on -h

Also switch usage printing to using stderr always, as is common for Go
tools.

Change-Id: I240da4344fe6b51a418c0d4b0b7d7e7d5614c1d7
Reviewed-on: https://go-review.googlesource.com/129776
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-20 18:00:39,https://api.github.com/repos/golang/tools/git/commits/7395529d165913577b7818a1210e11865cec1855,7395529d165913577b7818a1210e11865cec1855,"go/packages: disable failing test on plan9

Updates golang/go#27100

Change-Id: I41528e3635a9d7a68c84c3f089a3b4634469830d
Reviewed-on: https://go-review.googlesource.com/129975
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-08-16 21:11:07,https://api.github.com/repos/golang/tools/git/commits/7d1dc997617fb662918b6ea95efc19faa87e1cf8,7d1dc997617fb662918b6ea95efc19faa87e1cf8,"go/packages: smooth API documentation for release

Change-Id: Ia3d06a320228831115eb0e0e99d45a84a812da03
Reviewed-on: https://go-review.googlesource.com/129636
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-08-14 19:11:50,https://api.github.com/repos/golang/tools/git/commits/641913b2bdc0ebfde3f418ea18eaab5b1b898104,641913b2bdc0ebfde3f418ea18eaab5b1b898104,"go/packages: reduce the number of export data files loaded

In ModeTypes, we only need the roots, in ModeSyntax we need the direct
dependancies.
We now do exactly what we need rather than the entire set of transitive
dependancies.
Without this change tools operating on source of a deep dependancy tree are far
to slow.

Change-Id: I3ddbe660709184758ad33ab7cdea860244433ce6
Reviewed-on: https://go-review.googlesource.com/129355
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2018-08-15 23:55:49,https://api.github.com/repos/golang/tools/git/commits/1dfe8478fdec02e49c998048ab9f761d64949349,1dfe8478fdec02e49c998048ab9f761d64949349,"go/packages: disable modules in all tests that set GOPATH

Change-Id: I940e3eebe2f2f5c3ab75b6961fc90ba7e26cdf56
Reviewed-on: https://go-review.googlesource.com/129496
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-15 23:53:02,https://api.github.com/repos/golang/tools/git/commits/9de19001913fbbc31d62e61c3c2d0a49ee352534,9de19001913fbbc31d62e61c3c2d0a49ee352534,"go/packages: opt: ignore function bodies in non-initial packages

This saves 35% of wall time in a command such as

 $ gopackages -mode=syntax golang.org/x/tools/go/packages/gopackages fmt

that would otherwise typecheck every function in each package that
depends on fmt. It also applies in -mode=types when source was loaded
as a fall back for missing export data due to an error in a lower package.

Also, remove Config.TypeChecker field now that not a single of its
subfields is passed through go/packages to the type checker.
(The Sizes function is logically a result, not an input, of loading,
though we have yet to implement it properly.)

Change-Id: I472d21b34fc5e2832f7353e82992a67a06e4e4cc
Reviewed-on: https://go-review.googlesource.com/129497
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
andybons,2018-08-14 22:55:10,https://api.github.com/repos/golang/tools/git/commits/8f8fd1f23985f19c387c894e5597b22d8256a495,8f8fd1f23985f19c387c894e5597b22d8256a495,"playground: increase urlfetch timeout on GAE classic

The default timeout for urlfetch requests on App Engine Classic is
5 seconds. Sometimes the requests can take longer, so increase it to
the maximum value of 60 seconds. The playground has its own timeout for
running code so there's no need to impose a second level of protection.

Also cleans up the code to remove old appenginevm code and use the
correct imports.

Change-Id: I15da96e5ba70fb008bf821f4609f431847662223
Reviewed-on: https://go-review.googlesource.com/129395
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dominikh,2018-08-13 20:30:15,https://api.github.com/repos/golang/tools/git/commits/a434f64ace81347eff0fb4a32bc80a235e0ad762,a434f64ace81347eff0fb4a32bc80a235e0ad762,"go/pointer: support reflect.Value in AddExtendedQuery

We were calling types.Type.Underlying() too early, which caused CanPoint
to see an ordinary struct, not reflect.Value.

Change-Id: I23ba3b9451bc1abc1ad8a45c790d2e22c1481f26
Reviewed-on: https://go-review.googlesource.com/129196
Run-TryBot: Dominik Honnef <dominik@honnef.co>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-13 17:45:06,https://api.github.com/repos/golang/tools/git/commits/87c7dcbd5db6be1a938380ce9944ed2299806701,87c7dcbd5db6be1a938380ce9944ed2299806701,"cmd/callgraph: temporarily disable failing tests on go1.10

go1.10 and earlier versions of go list do not report test main packages.
Furthermore, go/packages has errors in its Imports under go1.10.

The long-term fix is for go/packages to synthesize test main packages
when working with older versions of the go command, but in the
meantime we will disable the tests.

Updates golang/go#11811

Change-Id: Ifd5e37d5b68a01134e911fda90e30a39fc25b88d
Reviewed-on: https://go-review.googlesource.com/129175
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2018-08-10 17:04:38,https://api.github.com/repos/golang/tools/git/commits/e10408200fe9a3b7b1d3e07bede3214d321974fe,e10408200fe9a3b7b1d3e07bede3214d321974fe,"cmd/guru: fix tests for line directives in Go 1.11

Go 1.11 changed the behavior of line directives, so reflect that in the
golden files for tests.

Change-Id: I7df282dfbeb3bfc5d75481c345acf724bb0b25bf
Reviewed-on: https://go-review.googlesource.com/128999
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-09 17:20:37,https://api.github.com/repos/golang/tools/git/commits/27709f6afec43b6c6d899bd199bf0f39c731216c,27709f6afec43b6c6d899bd199bf0f39c731216c,"cmd/ssadump: use go/packages

Unlike go/loader's FromArgs, go/packages doesn't return the
non-package arguments, so we add a new repeated flag -arg=x -arg=y to
specify them.

Because we cannot add packages to a packages.Load query, we emit an
error if -run is specified and ""runtime"" is not among the
dependencies.

There is no easy way to distinguish synthetic test main packages
from regular main packages, so we no longer try.
This makes -test and -run orthogonal.

Change-Id: Ibd69b993c05de62df01dde52218a9e266cd63a71
Reviewed-on: https://go-review.googlesource.com/128837
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
stamblerre,2018-08-10 19:20:38,https://api.github.com/repos/golang/tools/git/commits/cf99646d84d2e5f25f0853f1f3b3233efb3ceff2,cf99646d84d2e5f25f0853f1f3b3233efb3ceff2,"imports: stub out dirPackageInfo function in tests

TestFixImports did not have to explicitly add ""strings"" to the
simplePkgs map - this only happened because sibling files were searched
and the strings import was found through them. If we stub out the
dirPackageInfo function, we have to explicitly add the strings import.

Change-Id: I149e522fad37039fc790e6a855834d86ff050674
Reviewed-on: https://go-review.googlesource.com/129036
Run-TryBot: Rebecca Stambler <rstambler@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2018-08-10 19:05:40,https://api.github.com/repos/golang/tools/git/commits/7883bde2a5b29921a3418bde043fca0f5025a3b4,7883bde2a5b29921a3418bde043fca0f5025a3b4,"go/packages: minor fixes

This is fixes for review comments made on cl/128120

Change-Id: Ie6382d6ec91db2bbdece564a83ae028be4e2e269
Reviewed-on: https://go-review.googlesource.com/129000
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
suzmue,2018-08-09 18:25:22,https://api.github.com/repos/golang/tools/git/commits/69b93a3d4a70454ae621d09b2742fb9d281fe7f5,69b93a3d4a70454ae621d09b2742fb9d281fe7f5,"go/packages: prefer import map to identity imports

For any identity imports to be added to the import map of a package,
make sure these are not already in there.  If the package imports ""C"",
be sure not to overwrite the import map entries for ""runtime/cgo"", ""unsafe"",
and ""syscall"".

Test the import map when test variants are loaded. This tests the fix
in 'go list' made by https://golang.org/cl/128836

Fixes golang/go#26847

Change-Id: I05dff4d3a75fab03f333f6d88128de6a6bf169e6
Reviewed-on: https://go-review.googlesource.com/128876
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
seratch,2018-08-10 18:13:41,https://api.github.com/repos/golang/tools/git/commits/4354ead92e86caa4017bfeb36f54ac136dc5f70a,4354ead92e86caa4017bfeb36f54ac136dc5f70a,"all: fix typos in comments

This pull request fixes several typos in comments. I believe that they're safe enough.

Change-Id: Ic7c594bdb89dcd04f8775f225abbc0f966f3728e
GitHub-Last-Rev: 2394feb263714c83b419f45eccb3c6c9fdff7fed
GitHub-Pull-Request: golang/tools#45
Reviewed-on: https://go-review.googlesource.com/128956
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-08-10 16:49:16,https://api.github.com/repos/golang/tools/git/commits/e96c4e24768da594adeb5eed27c8ecd547a3d4f1,e96c4e24768da594adeb5eed27c8ecd547a3d4f1,"x/tools: remove old renaming imports of go/constant as exact

Fixes golang/go#26522

Change-Id: Ie8184a358f11bc7ad855e0eeb964c29848d2263e
Reviewed-on: https://go-review.googlesource.com/128998
Run-TryBot: Alan Donovan <adonovan@google.com>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
stamblerre,2018-08-10 16:49:12,https://api.github.com/repos/golang/tools/git/commits/00d4fcd8413f88bea933725034db27a8dd8b46ba,00d4fcd8413f88bea933725034db27a8dd8b46ba,"go/packages: remove dependency on imports

Copy imports.VendorlessPath into go/packages to avoid an unnecessary
dependency on imports.

Change-Id: Ie77c2fb87f2199f139ece9f3d1b707f065fc1a79
Reviewed-on: https://go-review.googlesource.com/128996
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-08-07 03:01:37,https://api.github.com/repos/golang/tools/git/commits/af5e78811ae33d6683fe32926e3c744d88d75bba,af5e78811ae33d6683fe32926e3c744d88d75bba,"go/packages: use Package as the raw form

This deletes the raw and golist packatges, instead using the main
Package structure as the serialzied form between the build tool and the
loader.
This requires a few new fields on Package for information that we used
to hide, and some extra json tags on Package.
It also required Package to have custom JSON marshalling methods.

Change-Id: Ib72171bc93e2b494b97f4b0266504acaa9b3f647
Reviewed-on: https://go-review.googlesource.com/128120
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
rsc,2018-04-26 15:20:03,https://api.github.com/repos/golang/tools/git/commits/4432cd1c27c82c87fe2507a05a1a940f794b617f,4432cd1c27c82c87fe2507a05a1a940f794b617f,"cmd/compilebench: fix GOROOT inconsistencies

If GOROOT is unset (as is common now),
then the output of ""go env GOROOT"" may
differ from the GOROOT inferred by alternate
compilers being executed and also from the
value of runtime.GOROOT() inside compilebench,
used by go/build. Harmonize all of these by
setting GOROOT explicitly (will fix subcommands)
and by invoking the go command to learn about
packages instead of assuming go/build has any
idea what it's doing.

Change-Id: If97aa76cc2afec11a8404975f39329db7eb452e0
Reviewed-on: https://go-review.googlesource.com/109516
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: David Chase <drchase@google.com>"
matloob,2018-08-09 19:43:28,https://api.github.com/repos/golang/tools/git/commits/aaa76ee82d78834d5701ca08f4970dcae9a758fc,aaa76ee82d78834d5701ca08f4970dcae9a758fc,"go/packages: cleanup style

This change addresses some style issues pointed out by rsc in
golang.org/cl/126177. It doesn't fix the comment on listfunc
or the comment on the processing of the containing directories.
Those will be handled in a separate cl.

Change-Id: I2094ad1e5e2ee181a646466675f4d993bd69ff9b
Reviewed-on: https://go-review.googlesource.com/128897
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Russ Cox <rsc@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2018-08-09 17:48:11,https://api.github.com/repos/golang/tools/git/commits/0167fde4103bd8b15775e19816345d5c54d9fb0e,0167fde4103bd8b15775e19816345d5c54d9fb0e,"go/packages: make corrections to fallback golist processing

This change addresses adonovan's comments in golang.org/cl/125939.
Make sure to include CXXFiles, MFiles, HFiles, FFiles, SwigFiles,
SwigCXXFiles, and SysoFiles from the go list output into the Package
struct's OtherFiles field.
When computing packages from the output of fallback golist,
make sure to create the test variant of a package whenever creating
an x_test for a package because the x_test always depends on
the test variant even when there are no non-x_test files.
Sort dependency packages from the fallback golist to ensure
output is deterministic.

Change-Id: I3a942898c7edbe0ad62dbdf3d521775ffd9b9594
Reviewed-on: https://go-review.googlesource.com/128838
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-09 18:35:13,https://api.github.com/repos/golang/tools/git/commits/2e5c1e6f756c631a56a2ebc6670be9cf6aee7da4,2e5c1e6f756c631a56a2ebc6670be9cf6aee7da4,"go/packages: make LoadFiles the zero mode

Also:
- make a nil *Config equivalent to new(Config).
- add a test for nil *Config.
- document that Load may return an empty list of packages.

Change-Id: I642133abe18553ca8c7f46b7bd2709a03eda0b28
Reviewed-on: https://go-review.googlesource.com/128875
Reviewed-by: Michael Matloob <matloob@golang.org>"
suzmue,2018-08-07 23:48:18,https://api.github.com/repos/golang/tools/git/commits/2fda359797429021095d43b13e565d0796da5a5f,2fda359797429021095d43b13e565d0796da5a5f,"go/packages: use export data to load types info

Use export data in LoadTypes mode, when it is available to get the type information.

The lock can be moved back to loadFromExportData, as each package is
loaded in topological order, and all calls to loadFromExportData for a
particular package occur when that package is being loaded.

Fixes golang/go#26834

Change-Id: Ib6c28eb8642a473cc100d54d0aac7b90644d5d22
Reviewed-on: https://go-review.googlesource.com/128365
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-08 21:02:13,https://api.github.com/repos/golang/tools/git/commits/1bd72987c24b70db9ef315df103e9fef4abd022e,1bd72987c24b70db9ef315df103e9fef4abd022e,"cmd/callgraph: use go/packages

Because go/packages presents each synthesized test main package
as a first-class package, the tests now analyze all of the dependencies
of ""testing"", which they previously avoided.  This makes the tests
slower and the resulting call graph much larger,
so they now look for a subset match, not an exact match,
on the set of graph edges.

Change-Id: I9d7acf420e41cbffc03ca8423f5afb3ef671d775
Reviewed-on: https://go-review.googlesource.com/128695
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
dominikh,2018-08-09 11:49:36,https://api.github.com/repos/golang/tools/git/commits/2fad9c56520a6ca94c6960472b921c21a8fa9343,2fad9c56520a6ca94c6960472b921c21a8fa9343,"go/ssa: emit position information for assignment operators

Fixes golang/go#26294

Change-Id: Ica2aa9787c58f703aa65786c2123a28b820af45d
Reviewed-on: https://go-review.googlesource.com/128776
Reviewed-by: Alan Donovan <adonovan@google.com>"
rsc,2018-08-08 17:50:59,https://api.github.com/repos/golang/tools/git/commits/ad8705d9f66de7461d0035a9b184c5bc66c7ae64,ad8705d9f66de7461d0035a9b184c5bc66c7ae64,"godoc/redirect: redirect design docs to Gerrit, not GitHub

Gerrit's rendering is cleaner and Gerrit is the source of truth anyway.

Fixes golang/go#26871.

Change-Id: I0bf69d174662c7acc083b03b009bac92f781a17c
Reviewed-on: https://go-review.googlesource.com/128596
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
alandonovan,2018-08-08 19:08:42,https://api.github.com/repos/golang/tools/git/commits/5b5e9c877a65dcf1f386adf9542d43cd797cc43a,5b5e9c877a65dcf1f386adf9542d43cd797cc43a,"go/ssa: updates to support go/packages

Adds ssautil.Packages function, which creates ssa.Packages
from packages.Packages.

Deprecates testmain synthesis logic now that go/packages
reports the test packages synthesized by the build system
as first-class packages.

Updates docs, examples, and tests.

Flags potential confusion around legacy concept of ""importable"" packages.

Change-Id: I6d9cd7c6436c715d1ef39e3e280f4af4d48ccc5a
Reviewed-on: https://go-review.googlesource.com/128675
Reviewed-by: Dominik Honnef <dominik@honnef.co>"
matloob,2018-08-07 19:25:39,https://api.github.com/repos/golang/tools/git/commits/62181fabb05016ba7c8336c12935ee8579066575,62181fabb05016ba7c8336c12935ee8579066575,"go/internal/cgo: simplify names of ProcessCgoFiles and RunCgo

Also collect errors so we can set them on the Package (once
golang.org/cl/128120 is in).

Change-Id: I2950405404f060312813e4aa27393496078a3b7e
Reviewed-on: https://go-review.googlesource.com/128357
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-08-08 16:33:10,https://api.github.com/repos/golang/tools/git/commits/201986631be82bf14f1af080e231f3a6d31ae2c5,201986631be82bf14f1af080e231f3a6d31ae2c5,"go/packages: initialise Fset if mode >= Types

...as it is required not just for Syntax processing but also
when loading export data.

Clarify comments surrounding Types, Fset.
Remove bogus comment re: Dir.

Change-Id: I8d234bc311d73cbed4fd271ef883ebba22ba2708
Reviewed-on: https://go-review.googlesource.com/128595
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
suzmue,2018-08-07 20:00:29,https://api.github.com/repos/golang/tools/git/commits/e832138124bbf0916f7d8613b0fe1205bb1f0750,e832138124bbf0916f7d8613b0fe1205bb1f0750,"go/packages: make cache names predictable in tests

Check for the go-build subdirectory to identify a filepath in the go
build cache.  The go command uses a subdirectory of the default os cache
called ""go-build"" for the build cache.

Additionally, this responds to the comments about function names and tests in the following
CLs:
https://golang.org/cl/125536
https://golang.org/cl/125302

Fixes https://github.com/golang/go/issues/26387

Change-Id: I4ec65822e1e178d3de215a773e42f09fcc5bdb0d
Reviewed-on: https://go-review.googlesource.com/128360
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2018-08-07 18:48:55,https://api.github.com/repos/golang/tools/git/commits/ca6481ae56504398949d597084558e50ad07117a,ca6481ae56504398949d597084558e50ad07117a,"go/packages/golist: fix golist fallback selection

The fallback was being reset to the incorrect value
after it was set. This change fixes it.

Also add a test that triggers the fallback (a query with both
a contains: line and a regular package path).

Change-Id: I49a9aeb3a0c7d7cc308ac56f4985545315a5bfd2
Reviewed-on: https://go-review.googlesource.com/128356
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2018-07-25 23:22:41,https://api.github.com/repos/golang/tools/git/commits/3c07937fe18c27668fd78bbaed3d6b8b39e202ea,3c07937fe18c27668fd78bbaed3d6b8b39e202ea,"go/packages: enable an external source of package information

This allows an external binary (not go list) to be the source of package
information.
It uses a binary called gopackagesraw if present in the PATH.
The binary can be overriden by specifying the GOPACKAGESRAW
environment variable.
The command must accept the -test -deps -export and -flags, and take a
list of package patterns to match. It then returns a raw.Results followed by
the matching raw.Package structs in json format on stdout.

Change-Id: I836014d837a284999ded0c1157b8e6dac058ba69
Reviewed-on: https://go-review.googlesource.com/125938
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2018-08-03 16:55:38,https://api.github.com/repos/golang/tools/git/commits/1f25352b1e28410f29432d7f90d03a0d60b1db5f,1f25352b1e28410f29432d7f90d03a0d60b1db5f,"go/packages: add cgo support to go1.10 fallback loader

This change moves the cgo support for go loader to a common
internal package that can be reused by go/packages. That
support is used to invoke cgo to process the files returned
by the fallback pre-go1.11 Go list.

The cgo processing does not propagate all of the config correctly.
We're building a go/build.Package to get the cgo command line
invocation and it might be incorrectly configured if the user's
configuration is different from go/build.Default.

Change-Id: I0de3c65cb723587e1551edeb77219614ba9650bf
Reviewed-on: https://go-review.googlesource.com/127816
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2018-08-02 19:35:27,https://api.github.com/repos/golang/tools/git/commits/82515cf89538b3e8a206be74377c01dee420b76d,82515cf89538b3e8a206be74377c01dee420b76d,"go/packages: fix race detected by race detector

Diamonds in the dependency graph could cause the same package
to be processed by two separate gorotines, causing a potential
race between checking if the package's Types field is set, and
setting the field.

adonovan's comment suggested this might be unnecessary. We'll
ask him about this once he returns from his vacation.

Change-Id: I27511b6e44bb1b6a04ea294206fd8ed4ea60f56f
Reviewed-on: https://go-review.googlesource.com/127636
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2018-08-01 17:40:35,https://api.github.com/repos/golang/tools/git/commits/4a42e0a488594317cb9575fe80faab691478751c,4a42e0a488594317cb9575fe80faab691478751c,"go/packages/golist: pass in -compiled to go list

This is mostly straightforward, except that go list -e -compiled
will now return errors if a package can't build. This is a bug.
We need to skip the errors test until that's fixed.

For now, don't try to run go list with no arguments because it will
fail. So when all arguments are contains, we will check for empty
patterns and skip running go list.

Change-Id: I7c92b1bf9448e5dbea22f9ade9fb9429945e3719
Reviewed-on: https://go-review.googlesource.com/127339
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2018-08-02 01:38:32,https://api.github.com/repos/golang/tools/git/commits/78b3e717651b2f0170900ca0ac1080c331822c22,78b3e717651b2f0170900ca0ac1080c331822c22,"go/packages: include test deps in golist fallback

In Go 1.10 and earlier, the Deps field returned by go list does not
include the dependencies of any test files.  To get the dependencies
of the test packages, we need to run go list another time (for a total
of 3 calls to go list), to get the dependencies of the packages the
tests import.

Fixes golang/go#26753

Change-Id: Id3b424ac935e5ed459b4d4a55630715171bb9710
Reviewed-on: https://go-review.googlesource.com/127457
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-08-01 17:22:45,https://api.github.com/repos/golang/tools/git/commits/681bc0c94ca8c8796e6f777d8cb2b1af7d11962f,681bc0c94ca8c8796e6f777d8cb2b1af7d11962f,"go/packages: fix the documentation

It got out of sync after the round of API design changes, this brings it
back in line.
Also fix the behavior of passing nil as the config to match the
expected/documented behavior.

Change-Id: I8b51f5bd29ef9338ddb920fb872d857f180f9c84
Reviewed-on: https://go-review.googlesource.com/127255
Reviewed-by: Michael Matloob <matloob@golang.org>"
matloob,2018-08-01 20:28:21,https://api.github.com/repos/golang/tools/git/commits/1801cb7c1535809b97bb6628791b3fb0df73476e,1801cb7c1535809b97bb6628791b3fb0df73476e,"go/packages/golist: remove -cgo flag from go list invocation

It's been removed from go list.

Change-Id: I45b496bb6b693462484b1089cdb89c4e19e35b2e
Reviewed-on: https://go-review.googlesource.com/127341
Run-TryBot: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-07-30 18:10:18,https://api.github.com/repos/golang/tools/git/commits/8149a73649a0118d28e0152493abf048af72e7b1,8149a73649a0118d28e0152493abf048af72e7b1,"go/packages: extract the raw API to its own package

We want to make it public to enable external sources of information
(other than go list), but we don't want to clutter the main
go/packages API with things that are intended for implementers only.
We also want to move the two API's from experimental to stable at
different times.
We also need to split the API because the golist implementation has to depend on
the raw structs, and then the main packages.Load has to depend on the golist
implementation.

The golist functionality is now in it's own package, and provides a Load method
to return the raw structures. This can be re-used by more complex raw providers.

Change-Id: I767af216b0d1ad9391e613cbf24eb2db5f503369
Reviewed-on: https://go-review.googlesource.com/126718
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2018-07-31 21:06:16,https://api.github.com/repos/golang/tools/git/commits/7ebc57ba1992bada70db16c8d92e3444a97cbe07,7ebc57ba1992bada70db16c8d92e3444a97cbe07,"go/packages: remove DepOnly from the raw package

All the other members of raw package are stable for any given package,
DepOnly relates to the query patterns, not thepackages.
Instead the raw functions now return the set of roots matched

Other minor changes included:
rawConfig.ExtraFlags -> rawConfig.Flags
delete rawConfig.Context

Change-Id: I3a729fa4557043f65da386eed94ab46fdfacb8ad
Reviewed-on: https://go-review.googlesource.com/127035
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2018-07-31 19:06:28,https://api.github.com/repos/golang/tools/git/commits/33176b2029f9538e722efa4a005f7aa00cf60010,33176b2029f9538e722efa4a005f7aa00cf60010,"go/packages: make a test Errorf into Fatalf

It is a bounds check on an array before an access, the test cannot
continue safely if it fails, so it should be fatal.

Change-Id: Icd081df9cb81d549519d69bd34739d950946ccf5
Reviewed-on: https://go-review.googlesource.com/126975
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mostynb,2018-07-31 17:27:32,https://api.github.com/repos/golang/tools/git/commits/9e9f7f69ece9394ec1578405596b20912f97b823,9e9f7f69ece9394ec1578405596b20912f97b823,"godoc: skip build tag annotations when displaying examples

After moving the filepath.Walk example to a standalone example file
in CL 122237 (so it could use a standalone function), godoc includes
the build tag annotation (""// +build !windows,!plan9"" in this case)
in the runnable example.  The example runs correctly, but the
annotation might be confusing for new users.

Change the behavior so that godoc skips these annotations when
displaying examples.

To avoid false positives in older versions of ""go vet"", which are still used
on the build dashboard, we avoid using a multiline string in the test.

Fixes golang/go#26490.

Change-Id: I1da4b3b7e1e5a85a76773e25d9355b3f92479c19
GitHub-Last-Rev: bc5ed29bd368e5bcf11fed7a0c7f14b872fef065
GitHub-Pull-Request: golang/tools#42
Reviewed-on: https://go-review.googlesource.com/126256
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
ianthehat,2018-07-31 16:36:23,https://api.github.com/repos/golang/tools/git/commits/ade7853a2a5896e5dacdb611fdec9a89cb905087,ade7853a2a5896e5dacdb611fdec9a89cb905087,"go/packages: allow Load to use source if no export data is possible

We ask the underlying tool to produce export data if needed, but if it
cant we should fall back to source rather than just failing.

Change-Id: I376d41b4c8ad4d3c1aef3ca4ab4e3d0466b83b56
Reviewed-on: https://go-review.googlesource.com/126875
Run-TryBot: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ianthehat,2018-07-30 21:36:35,https://api.github.com/repos/golang/tools/git/commits/cfaff8d5dbb6477588b050b60eddd96008693f81,cfaff8d5dbb6477588b050b60eddd96008693f81,"go/packages: fix tests for new go list behaviour

go list has been changed so that when -tests is added it reports the
test packages as well as the test mains in the initial set.
This fixes all the tests that assumed the old behaviour.
I changed the test that checked the initial set to check the entire
graph because the comparison became unreadable with the expanded set,
and this seemd like a nicer standardised way to check the behaviour.

Change-Id: I69404f8ef77cd092b0f02011a7789db71bee9b47
Reviewed-on: https://go-review.googlesource.com/126796
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
andybons,2018-07-30 18:02:51,https://api.github.com/repos/golang/tools/git/commits/0700b576e4d8bfc20051cc93cfb041e6e52ce8ed,0700b576e4d8bfc20051cc93cfb041e6e52ce8ed,"godoc: don't display tar instructions for malformed download query

Ensure that the filename passed via ?download= matches the given
regexp before showing the command-line instructions to download it.

Change-Id: Ieb7c6912409474f31637ff1193fd195eb9f172b3
Reviewed-on: https://go-review.googlesource.com/126717
Reviewed-by: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Filippo Valsorda <filippo@golang.org>"
suzmue,2018-07-20 18:24:40,https://api.github.com/repos/golang/tools/git/commits/8cc4e8a6f4841aa92a8683fca47bc5d64b58875b,8cc4e8a6f4841aa92a8683fca47bc5d64b58875b,"go/packages: add Flags to Config

Add the Flags field to the Config struct in packages to provide a way
for users to pass along additional information to the underlying query
tool.

Since users that need Flags will already know something about the build
system they are using (and flags will vary depending on the underlying
build system), they can pass through the flags that they need for that
build system.

For example, build tags should be passed through using the Flags field in go build,
using ""-tags="".

Change-Id: Ia65bf0d003db2f6d9aaad6cd09c602f4bc5bf3e3
Reviewed-on: https://go-review.googlesource.com/125302
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
matloob,2018-07-25 20:40:23,https://api.github.com/repos/golang/tools/git/commits/9dbe528bbb9ffa4b83eb2b813c08f5b07c86c286,9dbe528bbb9ffa4b83eb2b813c08f5b07c86c286,"go/packages: add support for 'contains:' words

If a 'word' provided to go/packages' Load function starts with contains,
go/packages will interpret that word as the package containing the given
file.

For example:
   packages.Load(config, ""contains:/usr/local/go/src/fmt/format.go"")
would load the fmt package from the Go installation at /usr/local/go.

This implementation uses ""go list ."" in the directory the file is
contained in to find the package, but this won't work in the module
cache. We plan to add support to go list directly to help find the
containing package. Then, because we won't need to change directory,
go list will have knowledge of the correct vgo root module, and will
be able to surface correct results.

Change-Id: I6bff62447c12f13dae5e4c0c65f729d9f271c388
Reviewed-on: https://go-review.googlesource.com/126177
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
andybons,2018-07-26 20:58:37,https://api.github.com/repos/golang/tools/git/commits/bfb5194568d3c40db30de765edc44cae9fc94671,bfb5194568d3c40db30de765edc44cae9fc94671,"Revert ""godoc: skip build tag annotations when displaying examples""

This reverts commit faa8a71ab532725a7fd9d901a97f74c5038c409b.

Reason for revert: +build tag in test causes build to fail :(

Change-Id: I8942a6dcc29faaceada23b63ba80ea881b3b2ca6
Reviewed-on: https://go-review.googlesource.com/126195
Reviewed-by: Andrew Bonventre <andybons@golang.org>
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mostynb,2018-07-26 20:37:57,https://api.github.com/repos/golang/tools/git/commits/faa8a71ab532725a7fd9d901a97f74c5038c409b,faa8a71ab532725a7fd9d901a97f74c5038c409b,"godoc: skip build tag annotations when displaying examples

After moving the filepath.Walk example to a standalone example file
in CL 122237 (so it could use a standalone function), godoc includes
the build tag annotation (""// +build !windows,!plan9"" in this case)
in the runnable example.  The example runs correctly, but the
annotation might be confusing for new users.

With this change, godoc skips these annotations when displaying examples.

Fixes golang/go#26490.

Change-Id: Ice3d6a2ce4db5b5176c9c6fcabc01b69c323016d
GitHub-Last-Rev: 52beabd3d2a9cb9a556bfa3bd998a2e31ac96960
GitHub-Pull-Request: golang/tools#40
Reviewed-on: https://go-review.googlesource.com/125040
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
suzmue,2018-07-20 15:40:29,https://api.github.com/repos/golang/tools/git/commits/0bf5a322479700bd87eed5ce5e010ba369fe7161,0bf5a322479700bd87eed5ce5e010ba369fe7161,"go/packages: add tests for vendoring

Test that the import graph for packages in the GOPATH that use vendoring
are correct and are keyed by the import path as it appears in the source
file.

Change-Id: Ibf9a516b4bfcc9f2d45f349d2ae49a0dbf958e30
Reviewed-on: https://go-review.googlesource.com/125298
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
suzmue,2018-07-23 19:26:09,https://api.github.com/repos/golang/tools/git/commits/54429628ee12bfc838a1d67ae80a57539ab6366d,54429628ee12bfc838a1d67ae80a57539ab6366d,"go/packages: test absolute filepaths

Paths to files in a Package should exist and be absolute.

Check that both GoFiles and OtherFiles are absolute paths.

Change-Id: I381830425ef313a91fa49be4d1751631d0a3a0c8
Reviewed-on: https://go-review.googlesource.com/125536
Run-TryBot: Suzy Mueller <suzmue@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
suzmue,2018-07-26 16:58:38,https://api.github.com/repos/golang/tools/git/commits/83365fc83f54acd468e770d2b7efcffa1cb1a835,83365fc83f54acd468e770d2b7efcffa1cb1a835,"go/packages: fix bug preventing build

Change-Id: Ia5bc184c3762dc00338bfad182371568827da75e
Reviewed-on: https://go-review.googlesource.com/126095
Run-TryBot: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2018-07-26 00:16:16,https://api.github.com/repos/golang/tools/git/commits/ceb18cec46a547d681c55177e7121193afa005d6,ceb18cec46a547d681c55177e7121193afa005d6,"go/packages: switch fallback implementation to use go list

The go/loader based implementation was too different. Instead
Just call go list twice to get all the dependencies. This immediately
enables more functionality.

Change-Id: I22883492e996133bc61664314318c5e0a9cc10dc
Reviewed-on: https://go-review.googlesource.com/125939
Reviewed-by: Suzy Mueller <suzmue@golang.org>
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-07-25 23:23:17,https://api.github.com/repos/golang/tools/git/commits/475b7a1e12f029fbb4d210958352057952ea9f7a,475b7a1e12f029fbb4d210958352057952ea9f7a,"go/packages: fix the gopackages command

It got broken when we renamed all the modes, and because it is just an
example binary it is not testsed.

Change-Id: Ia6608af574d0abebb4fe0d967e1bed88af6563bd
Reviewed-on: https://go-review.googlesource.com/125937
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2018-07-24 18:54:35,https://api.github.com/repos/golang/tools/git/commits/b1e4acd68ab67534bb0d0aea1080e6f27c9f3032,b1e4acd68ab67534bb0d0aea1080e6f27c9f3032,"go/packages: alter the internal api to go list

This separates the go list specific behavior from the generalised go/packages
loading behaviour, to enable alternate build system back ends.

Change-Id: I07e7649f8f2afc7470a3ee3d0d743cbbcc6f713e
Reviewed-on: https://go-review.googlesource.com/125715
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
bradfitz,2018-07-25 16:43:58,https://api.github.com/repos/golang/tools/git/commits/65cc56d75605e61e9bac234f168c804205d7224e,65cc56d75605e61e9bac234f168c804205d7224e,"godoc: fix tests on Go 1.9

Updates golang/go#11811
Updates golang/go#26531

Change-Id: I9cc7daf551b76c3f06b9dd827c5733513c06895e
Reviewed-on: https://go-review.googlesource.com/125816
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Agniva De Sarker <agniva.quicksilver@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianthehat,2018-07-24 18:52:52,https://api.github.com/repos/golang/tools/git/commits/14e571052bc8441e4b96006dfcb6640ec6b8a5cd,14e571052bc8441e4b96006dfcb6640ec6b8a5cd,"go/packages: fix internal go list function signatures

After a discussion in cl/125535 this is a proposal to clean up some
internal function signatures that were becomming unwieldy.

Change-Id: I37a9e525ab18dface9ea9fb0b0ec68ac942ee632
Reviewed-on: https://go-review.googlesource.com/125659
Reviewed-by: Michael Matloob <matloob@golang.org>"
agnivade,2018-07-25 07:31:31,https://api.github.com/repos/golang/tools/git/commits/4d8a0ac9f66cf9815826183631c4da2e48d982c6,4d8a0ac9f66cf9815826183631c4da2e48d982c6,"cmd/godoc: fix TestWeb for versions < 1.11

The test was looking for strings found in specific Go versions
without checking for the actual Go version running the test.

Used ReleaseTags to check whether the current go version should
execute a test or not.

P.S. The version info is inferred from the binary running the test.
But the test builds godoc using the ""go"" binary in $PATH. In case
one is testing different go versions, please ensure to run tests
by changing the $PATH variable to point to different go versions,
rather than using a custom go binary in a different path.

Fixes golang/go#26531

Change-Id: I16dda81518021e865e79c9c29fc2d9e8a83e7057
Reviewed-on: https://go-review.googlesource.com/125755
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2018-07-13 18:50:28,https://api.github.com/repos/golang/tools/git/commits/526516e9c4bf5a3f76fe506dec01ca51d04cbe50,526516e9c4bf5a3f76fe506dec01ca51d04cbe50,"go/packages: support pre go1.10.4 using go/loader

If go list fails because it doesn't support the new flags added
for Go 1.11 (which will be also released in Go 1.10.4) try again
using the Loader to approximate the packages requested.

This implementation is incomplete. It will never support test packages
because of the two phase test loading process of the Loader. It
also doesn't reliably have access to export data so it will
always do an upgraded whole-program query. But we'll try to get
the best level of support we can for the go/packages interface
given the limitations of the loader.

Once Go 1.12 is released, we'll delete this support. By then, most
Go users should have at least switched to Go 1.10.4.

Change-Id: I5248e20980032695a86b052caa9ff368ecf7b142
Reviewed-on: https://go-review.googlesource.com/125616
Reviewed-by: Ian Cottrell <iancottrell@google.com>"
ianthehat,2018-07-23 20:29:28,https://api.github.com/repos/golang/tools/git/commits/214274eeeb8e4e24b05e1506578f90b3e9bc6c6d,214274eeeb8e4e24b05e1506578f90b3e9bc6c6d,"go/packages: changes to the API per CL 125305

Collapse the main entry points to the single Load function.
Make public the Mode enumeration in the Config.
Add a lowest level mode that does not do the import graph.
Remove PkgPath.
Remove the DisableCgo option.
Rename some fields of Package:
  Srcs -> GoFiles
  OtherSrcs -> OtherFiles
  Type -> Types
  Files -> Syntax
  Info -> TypesInfo
delete the All function

Change-Id: I54e5dc3ca5cb0b7e33fe6aa6f70cc66e18ea8cac
Reviewed-on: https://go-review.googlesource.com/125535
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Russ Cox <rsc@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
ianthehat,2018-07-18 23:45:17,https://api.github.com/repos/golang/tools/git/commits/ded554d0681e0cba3cf074977cdc12e2c0906fe6,ded554d0681e0cba3cf074977cdc12e2c0906fe6,"go/packages: splitting the scratch fields out of Package

This makes Package a struct we can re-use in other places/algorithms.

Change-Id: I2e095a624bf44223319ba1ea3d60deb727b38f81
Reviewed-on: https://go-review.googlesource.com/124855
Run-TryBot: Ian Cottrell <iancottrell@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
rsc,2018-07-20 20:35:14,https://api.github.com/repos/golang/tools/git/commits/96ee42108acc4bbbcdc1714606a25b974b4cc50c,96ee42108acc4bbbcdc1714606a25b974b4cc50c,"go/packages: revise documentation

I made a pass through the documentation trying to simplify
and make it more accessible to readers who are unfamiliar
with all the ins and outs of the implementation.

I also added TODOs about things I don't understand
and names that we should think about changing.

Change-Id: I633316bd407f3360eb8a683bc8d85fba93ca381e
Reviewed-on: https://go-review.googlesource.com/125305
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
zegl,2018-07-22 11:07:42,https://api.github.com/repos/golang/tools/git/commits/60ffea201e66e0d9375dc5bec85245d7b416710f,60ffea201e66e0d9375dc5bec85245d7b416710f,"godoc: correctly parse packages with digits in the package name

Fixes golang/go#26514

Change-Id: I4540737425c225c0f0c6104b5b3524621d2b0c6f
GitHub-Last-Rev: 9d5fefb6ed31579b723293c7f43fcf677ac4cddb
GitHub-Pull-Request: golang/tools#41
Reviewed-on: https://go-review.googlesource.com/125335
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2018-07-20 04:14:21,https://api.github.com/repos/golang/tools/git/commits/99195f4d4ffa6331a9bc856c72697a15d9842950,99195f4d4ffa6331a9bc856c72697a15d9842950,"godoc/dl: also serve go-import meta tags at golang.org/dl for cmd/go

Updates golang/go#23223

Change-Id: Iacecbb5e095fd3d6acb3f8e1fb238db63d1e0b6d
Reviewed-on: https://go-review.googlesource.com/125195
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
bradfitz,2018-07-12 21:23:00,https://api.github.com/repos/golang/tools/git/commits/827f47db85a5e5a57ef542da3ec035cdc3c024a4,827f47db85a5e5a57ef542da3ec035cdc3c024a4,"godoc/dl: add meta tags for go get golang.org/dl/go1.N

Updates golang/go#23223

Change-Id: I628cea181d3a0e6bb25fdd98e098581aa222e049
Reviewed-on: https://go-review.googlesource.com/123679
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
andybons,2018-07-20 03:29:26,https://api.github.com/repos/golang/tools/git/commits/42aedba1e080c1b80eb85a065301500719f7f903,42aedba1e080c1b80eb85a065301500719f7f903,"godoc/dl: update download link from /x/build/version to /dl

Change-Id: Id2baaa87ab23e27ce5018271c8bb4e73750fb437
Reviewed-on: https://go-review.googlesource.com/125137
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
jim-minter,2018-07-19 18:17:40,https://api.github.com/repos/golang/tools/git/commits/4735f53fb37db012e63d1a62914417980fb3c023,4735f53fb37db012e63d1a62914417980fb3c023,"cmd/goyacc: append trailing newline to text ""Code generated by goyacc""

Fixes golang/go#26478

Change-Id: Ieaf7dcaf639b277555580964acfff034393284e2
GitHub-Last-Rev: f2a6ab2a513d4938cda62f46de7f5314714b5325
GitHub-Pull-Request: golang/tools#39
Reviewed-on: https://go-review.googlesource.com/124995
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2018-07-17 18:58:34,https://api.github.com/repos/golang/tools/git/commits/54f9f5980a5e15f94c4019cd35f5fa0f4fd7ef45,54f9f5980a5e15f94c4019cd35f5fa0f4fd7ef45,"go/packages: remove Package.IsTest field

We have not yet settled on the meaning of Package.IsTest, and more
deeply which packages are test and which are non test packages.

This change will remove Package.IsTest in the meantime to avoid
confusion. We may later add a boolean or some other way to distinguish
test and non-test packages.

Change-Id: If6b128f7914009fdd42b8bc3de3bff73c8f006cd
Reviewed-on: https://go-review.googlesource.com/124388
Reviewed-by: Russ Cox <rsc@golang.org>"
bradfitz,2018-07-17 21:23:18,https://api.github.com/repos/golang/tools/git/commits/32950ab3be12acf6d472893021373669979907ab,32950ab3be12acf6d472893021373669979907ab,"godoc: add version info for struct fields

Follow-up to CL 85396, which only did types, funcs, and methods.

This adds version info to struct fields (in the form of small
comments) if the struct field's version is different from the struct
itself, to minimize how often this fires.

Updates golang/go#5778

Change-Id: I34d60326cbef88c108d5c4ca487eeb98b039b16e
Reviewed-on: https://go-review.googlesource.com/124495
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Devon O'Dell <dhobsd@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dhobsd,2017-12-23 01:30:39,https://api.github.com/repos/golang/tools/git/commits/57f659e14dda699044a713b0f8d1d3ff033e0455,57f659e14dda699044a713b0f8d1d3ff033e0455,"godoc: show version information for stdlib

This change reads $GOROOT/api/go1.*.txt when godoc starts and caches
information about which versions of Go introduce functions, types, and
methods. This information is displayed currently only in HTML output.
Functions, types, and methods introduced as part of Go 1 are not
annotated, as their presence at that version is implied.

This change does not address constants or variables, and completely
ignores the syscall package. The former are future work, the latter is
likely an exercise in futility. In all cases, this is because the story
around displaying the version information is not well developed.

Fixes golang/go#5778

Change-Id: Ieb3cc0da7b18e195bc9c443f14fd8a82e8b2bbf8
Reviewed-on: https://go-review.googlesource.com/85396
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Devon O'Dell <dhobsd@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2018-07-13 18:50:28,https://api.github.com/repos/golang/tools/git/commits/d74aaa1f57016ff7631311e553c625b952ce5853,d74aaa1f57016ff7631311e553c625b952ce5853,"go/packages: Options.{Dir,Env} pass-through

This change adds optional Dir string and Env []string options
that are passed through to the build system's metadata query.
As with exec.Cmd, the defaults are inherited from the parent
process.

Options.GOPATH is gone. If the client needs to override
GOPATH, they must use Env, but typically the inherited environment
is correct.

The tests not longer use os.Chdir.

We now guarantee that Package.Srcs are absolute file names.

Added test for Options.Dir and relative patterns.

This is a copy of golang.org/cl/123777, which had a merge conflict.

Change-Id: I301724581f3d8c712ea78fa5ab5cabd909940dca
Reviewed-on: https://go-review.googlesource.com/123777
Run-TryBot: Michael Matloob <matloob@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
bradfitz,2018-07-14 19:31:00,https://api.github.com/repos/golang/tools/git/commits/fd2d2c45eb2dff7b87eab4303a1016b4dbf95e81,fd2d2c45eb2dff7b87eab4303a1016b4dbf95e81,"go/packages: fix/skip some tests making build.golang.org red

Updates golang/go#26387

Change-Id: I5d91f3747b4f17186813d830f24aa510f5cf0060
Reviewed-on: https://go-review.googlesource.com/123957
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-07-13 16:09:24,https://api.github.com/repos/golang/tools/git/commits/18e9dfbf20567d5156dd6f1dd987092c021f7fa6,18e9dfbf20567d5156dd6f1dd987092c021f7fa6,"go/packages: add Option.Tests bool, which affects pattern expansion

In the go build system, test packages and executables do not have a
name distinct from the package under test; they are implied, so
""go test fmt"" means build those packages but ""go build fmt"" does not.

This change adds a Tests boolean option to indicate that implied
tests are desired during pattern expansion.
It has no effect on build systems that have explicit names
for tests, such as Blaze/Bazel.

The gopackages diagnostic tool now has a -test flag.

Change-Id: I424f343958c4286539e518d5f30067da19a57f3b
Reviewed-on: https://go-review.googlesource.com/123775
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-07-13 15:49:34,https://api.github.com/repos/golang/tools/git/commits/9d3ae49c73ce10a6e25424c99b6cf42439ebbd88,9d3ae49c73ce10a6e25424c99b6cf42439ebbd88,"go/packages: report a distinguished ErrGoTooOld error for older go commands

We should add support for older go commands using the multiple-calls
approach of earlier drafts of go/packages.

Also, tag tests for go1.11 to make 1.10 builder happy.

Change-Id: Ia04979528af25cbcd4b4fa5b21cb91d014d530c1
Reviewed-on: https://go-review.googlesource.com/123756
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-07-11 20:27:19,https://api.github.com/repos/golang/tools/git/commits/2087f8c10712366cfc2f4fcb1bf99eeef61ab21e,2087f8c10712366cfc2f4fcb1bf99eeef61ab21e,"go/packages: remove POSIX filename assumption from test

Change-Id: If1aac9f109b05897b21a2f27a4050fbee2cc2d2e
Reviewed-on: https://go-review.googlesource.com/123357
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-06-05 19:28:39,https://api.github.com/repos/golang/tools/git/commits/9622293277df7f1cc2c4196d7378a2b44251139f,9622293277df7f1cc2c4196d7378a2b44251139f,"go/packages: a new Go package loader for go, vgo and other build systems

This package defines a new API for applications that need information
about Go packages, such as their source files, tests, dependencies,
and (optionally) typed syntax trees. It is intended to replace both
go/build and golang.org/x/tools/go/loader with an API that is simpler
yet supports a range of build systems including 'go build', vgo,
Bazel, and Blaze.

This CL contains the API, the ""go list""-based implementation, and some
basic tests. More tests, more features as described in doc.go, and
implementations for bazel and blaze will follow.

Read doc.go for orientation and a list of open questions.

Change-Id: Ib39f15b5e4e2f854553e7185fec5cf135641ffb0
Reviewed-on: https://go-review.googlesource.com/116359
Run-TryBot: Alan Donovan <adonovan@google.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
robpike,2018-07-09 02:25:47,https://api.github.com/repos/golang/tools/git/commits/18f0b668f1069d7f55ac25b6f2670e30cd6499c0,18f0b668f1069d7f55ac25b6f2670e30cd6499c0,"cmd/stringer: add a -tags flag that supports build tags

This is reapplying CL121995 after rolling back the change to the importing
methods. There is still a need for a flag to control tags.
The original CL decription:

The feature has been requested but, like build tags in general,
only works in a directory, not when files are specified explicitly.
Unlike the build tools, report when the feature is misused like this
to avoid confusion.

Fixes golang/go#9449

Change-Id: I732627d5f2e6323367e3bdd5de746923868890a9
Reviewed-on: https://go-review.googlesource.com/122537
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
cuonglm,2018-07-09 19:50:39,https://api.github.com/repos/golang/tools/git/commits/8cb83b71b42ccf5fe279fa8a24a6a8f65507dc9c,8cb83b71b42ccf5fe279fa8a24a6a8f65507dc9c,"imports: fix lost line between package and import statement

Fixes golang/go#26290

Change-Id: Ide797a46bf1d0d6070940fb5b9db3e76502bc528
Reviewed-on: https://go-review.googlesource.com/122736
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
cuonglm,2018-07-09 02:40:43,https://api.github.com/repos/golang/tools/git/commits/d600f31f815368e57b551e524b0169bd175f7edb,d600f31f815368e57b551e524b0169bd175f7edb,"imports: fix unexpected blank line after package comment

The fix in golang/go#23709 introduced a separate bug where extra blank
lines were sometimes inserted. This fixes that newly introduced bug.

Fixes golang/go#26246

Change-Id: I78131cc1d01ae246922ed9e4336ebb31d1c6cfa1
Reviewed-on: https://go-review.googlesource.com/122538
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
rsc,2018-07-09 16:01:45,https://api.github.com/repos/golang/tools/git/commits/893c2b1ff5959a5b546f24ed09627c6d72e3255a,893c2b1ff5959a5b546f24ed09627c6d72e3255a,"imports: assume import x/y/v2 is package y

This will be true in general for Go modules, so it's the right fallback.
Note that if the package can be found in GOPATH, the code still
uses the actual package name from GOPATH, so this only changes
the fallback path. The fallback path is what currently executes
when using modules (because they are not in GOPATH).

Change-Id: I3d48517583eae9431e139371d363ce354c89340a
Reviewed-on: https://go-review.googlesource.com/122616
Run-TryBot: Russ Cox <rsc@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
rsc,2018-07-09 15:50:51,https://api.github.com/repos/golang/tools/git/commits/ee8f72c7202b2ffd6a14fd881480f012aaaef58e,ee8f72c7202b2ffd6a14fd881480f012aaaef58e,"imports: avoid src/v and src/mod again

This time for real.

Change-Id: I480fd6e4aa591efaf8380e86f5447b8c2bc28cda
Reviewed-on: https://go-review.googlesource.com/122615
Run-TryBot: Russ Cox <rsc@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
robpike,2018-07-09 03:37:09,https://api.github.com/repos/golang/tools/git/commits/e2be0f7276f6ea2d8290dea1ffd89c98f6ac0b9e,e2be0f7276f6ea2d8290dea1ffd89c98f6ac0b9e,"cmd/goyacc: include arguments in DO NOT EDIT marker

A follow-on to CL122095, which normalized the marker but
did not include the arguments.

Output now looks like this:

	// Code generated by goyacc -o expr.go -p expr expr.y. DO NOT EDIT.

Change-Id: I20577ea90943516f45478d778353b5bd2f485dfa
Reviewed-on: https://go-review.googlesource.com/122540
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
robpike,2018-07-06 22:11:50,https://api.github.com/repos/golang/tools/git/commits/827133af57adc910f5a5f91130bbc3c15a520991,827133af57adc910f5a5f91130bbc3c15a520991,"cmd/stringer: revert back to source importer

Roll back my two recent changes. Stringer is now very slow again,
but works in most use cases.

My git foo is insufficient to do this as a revert, but it is a by-hand
reversion of CLs

	https://go-review.googlesource.com/121884
	https://go-review.googlesource.com/121995

See the issue for a long conversation about the general problem.

Update golang/go#10249
Update golang/go#25650

Change-Id: I7b6ce352a4c7ebf0977883509e9d7189aaac1251
Reviewed-on: https://go-review.googlesource.com/122535
Run-TryBot: Rob Pike <r@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
agnivade,2018-07-04 03:44:33,https://api.github.com/repos/golang/tools/git/commits/435878328fa3e083e1ba27bd45ff348d808ae1c1,435878328fa3e083e1ba27bd45ff348d808ae1c1,"cmd/godoc,cmd/tip: enable HSTS preload

Add the includeSubDomains directive to meet the requirements
for being added to the preload list described at https://hstspreload.org/.

Updates golang/go#26162

Change-Id: I415775aa523bcef3a52f1853de033f343b914e83
Reviewed-on: https://go-review.googlesource.com/122175
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
vishen,2018-07-03 15:50:15,https://api.github.com/repos/golang/tools/git/commits/16f8f9bb720111f0b7b5c750acc28768620bb0c7,16f8f9bb720111f0b7b5c750acc28768620bb0c7,"cmd/goyacc: add header to generated go output file

Add ""// Code generated by goyacc. DO NOT EDIT."" to the top of the
generated go output file.

Fixes golang/go#26158

Change-Id: I5dd66af9cd8ccccd27440886c55cd604686472e3
Reviewed-on: https://go-review.googlesource.com/122095
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>"
robpike,2018-07-03 04:15:06,https://api.github.com/repos/golang/tools/git/commits/75d2ffb453d53bed20f95f0d563ee000dc4c0c83,75d2ffb453d53bed20f95f0d563ee000dc4c0c83,"stringer: add a -tags flag that supports build tags

The feature has been requested but, like build tags in general,
only works in a directory, not when files are specified explicitly.
Unlike the build tools, report when the feature is misused like this
to avoid confusion.

Fixes golang/go#9449

Change-Id: I079d363c5eeb5bc647fd2f0f3d88d28d630644d8
Reviewed-on: https://go-review.googlesource.com/121995
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
robpike,2018-07-02 04:44:56,https://api.github.com/repos/golang/tools/git/commits/ffe88906718454e356e61776b54256e873fc133b,ffe88906718454e356e61776b54256e873fc133b,"cmd/stringer: revert CL 40403

Revert ""cmd/stringer: use source importer when available""

This reverts CL 40403.

The idea is to avoid type-checking and use just parsing, which should be
enough for stringer.

Separately reopening golang/go#10249 because the original change closed that issue,
but the change is itself causing other problems as described in the discussion
at golang/go#25650.

This reversion restores the old behavior of stringer and will be followed
with other fixes if they can be worked out.

Change-Id: I8404d78da08043ede1a36b0e135a3fc7fdf6728d
Reviewed-on: https://go-review.googlesource.com/121884
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
cuonglm,2018-07-01 15:28:45,https://api.github.com/repos/golang/tools/git/commits/b23eb6252fad4550577208636764807058a5331a,b23eb6252fad4550577208636764807058a5331a,"imports: fixup comments on import lines correctly

The current implementation uses the added import specs EndPos to fixup
the comments position after import specs is sorted. If two or more
import specs have the same EndPos, a comment associated with one of them
is always added to the last import spec.

This commit uses the current import spec position to compute new
position for next import spec. So there is never two or more specs have
the same EndPos.

Fixes golang/go#23709

Change-Id: I60ace9431d871e94a2b3d90892aa80d0671aeea0
Reviewed-on: https://go-review.googlesource.com/121878
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-06-27 20:58:43,https://api.github.com/repos/golang/tools/git/commits/1c99e1239a0c8b0e59c34000995c4e319b7702ca,1c99e1239a0c8b0e59c34000995c4e319b7702ca,"godoc: default to GOOS/GOARCH js/wasm when rendering syscall/js docs

Otherwise it was just blank. With this CL, this URL should start rendering docs:

   https://tip.golang.org/pkg/syscall/js/

Tested locally.

Change-Id: I2d9b7286f374e9372be372987bb5d12ce5044ce9
Reviewed-on: https://go-review.googlesource.com/121315
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Richard Musiol <neelance@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-06-27 14:16:43,https://api.github.com/repos/golang/tools/git/commits/16699b2d33e2654d743c50b4525ab7e73e346238,16699b2d33e2654d743c50b4525ab7e73e346238,"go/gcexportdata: add -package flag to diagnostic tool

...to show information about indirectly mentioned packages.

Change-Id: Ib74b56493861bf41d9720760e76ace186efae2ea
Reviewed-on: https://go-review.googlesource.com/121195
Reviewed-by: Robert Griesemer <gri@golang.org>
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
griesemer,2018-06-25 23:31:58,https://api.github.com/repos/golang/tools/git/commits/56e9b8e653c818f46a96eb4828aba7be54271a69,56e9b8e653c818f46a96eb4828aba7be54271a69,"go/internal/gcimporter,gccgoimporter: use types.NewInterfaceType

https://go-review.googlesource.com/c/go/+/120875 changed the name
of types.NewInterface2 to NewInterfaceType. Adjust x/tools code to
match new API.

For golang/go#25301.

Change-Id: I21e13566f7c88591a16ce461cb4cce8901980b05
Reviewed-on: https://go-review.googlesource.com/120895
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
agnivade,2018-06-24 17:07:16,https://api.github.com/repos/golang/tools/git/commits/3c1bb8b785f2aa4d86f83a0cd87fc1df046c60de,3c1bb8b785f2aa4d86f83a0cd87fc1df046c60de,"godoc: accept scanner.RawString too during EBNF parsing

Commit c8915a0696ddb53399e9c7ebae1cd1158f27175 changed the text/scanner
package to return a scanner.RawString (rather than a scanner.String) token
for raw string literals. This broke the EBNF parser which didn't look
for scanner.RawString.

Updated the EBNF parser code to reflect that change.

Fixes golang/go#25986

Change-Id: Ib9c133a7c357dd750a4038d2ed39be86a245995c
Reviewed-on: https://go-review.googlesource.com/120659
Reviewed-by: Robert Griesemer <gri@golang.org>
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
aclements,2018-06-20 01:23:51,https://api.github.com/repos/golang/tools/git/commits/25b95b48224cce18163c7d49dcfb89a2d5ecd209,25b95b48224cce18163c7d49dcfb89a2d5ecd209,"go/ssa: fix some incorrect comments

Change-Id: I8aa4780e0fa4a182678f1d34b247ab203e906144
Reviewed-on: https://go-review.googlesource.com/119915
Reviewed-by: Alan Donovan <adonovan@google.com>"
dsymonds,2018-06-20 02:41:44,https://api.github.com/repos/golang/tools/git/commits/fcb3cb6c24ed40ff2a8753f4257a76dc3022330c,fcb3cb6c24ed40ff2a8753f4257a76dc3022330c,"go/vcs: match go-import package prefixes by slash

This is related to golang/go#15947.

This ports https://golang.org/cl/23732 (June 2016)
from cmd/go to this repository.

Change-Id: I9960556bd19775b433d4eecc0ecca3f09ce1368b
Reviewed-on: https://go-review.googlesource.com/119935
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2018-06-18 17:09:27,https://api.github.com/repos/golang/tools/git/commits/53440098a4ee92255ee62fe260cd95970c544076,53440098a4ee92255ee62fe260cd95970c544076,"godoc/static: resolve merge conflict, committed in error

Change-Id: Ica50edbae03eb1c6efad702841b926ffaf1c98ec
Reviewed-on: https://go-review.googlesource.com/119476
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-06-15 19:06:09,https://api.github.com/repos/golang/tools/git/commits/e10d6c9a84802dced65cb0278773be159bb7ed07,e10d6c9a84802dced65cb0278773be159bb7ed07,"godoc/static: use a stable quote function

Printf(%q) aka strconv.AppendQuote depends on the Unicode tables du
jour, which means gen_test breaks after a Go release in which Unicode
evolves. This change uses a very dumb quotation function that emits
only ASCII and is independent of the Go release.

Perhaps an even better fix would have been to parse the generated file.

Change-Id: I197942f1c36a8b53d6a37be4bb2b1e63a208f7e2
Reviewed-on: https://go-review.googlesource.com/119157
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
rsc,2018-06-16 02:29:15,https://api.github.com/repos/golang/tools/git/commits/c06a8d8ed11aae27b08c1c109a509ada9de81240,c06a8d8ed11aae27b08c1c109a509ada9de81240,"imports: skip $GOPATH/src/v and $GOPATH/src/mod

These are both vgo module cache locations (originally v, soon to be mod).
Vgo dumps a lot of code into these directories.
If goimports walks in there, it takes forever.

Change-Id: I667b0a4979bf6a6b71c3651d25ec29777ff15301
Reviewed-on: https://go-review.googlesource.com/119337
Run-TryBot: Russ Cox <rsc@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-06-13 09:29:40,https://api.github.com/repos/golang/tools/git/commits/465e6f399236d0ea2466584539d4eab4d3d83720,465e6f399236d0ea2466584539d4eab4d3d83720,"godoc: add link to expand/close all examples

Fixes golang/go#3081

Change-Id: I096b22691a08d72b88dbe925e17893d24ba3c992
Reviewed-on: https://go-review.googlesource.com/118935
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
myitcv,2018-06-14 19:14:02,https://api.github.com/repos/golang/tools/git/commits/c6269430a55499efa2e293ae66926175dc3af30e,c6269430a55499efa2e293ae66926175dc3af30e,"refactor/rename: allow Force to make edits within autogenerated files.

Currently, as documented, gorename fails if it would cause an edit to an
autogenerated file:

- detect and reject edits to autogenerated files (cgo, protobufs)

There are times when refactoring code where such an edit is necessary.
This CL enables such edits if Force is set (which corresponds to
gorename -force).

Change-Id: If21249ae50d61fb5b59ee6e1ecf7157aaae0260a
Reviewed-on: https://go-review.googlesource.com/118975
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2018-06-14 19:07:04,https://api.github.com/repos/golang/tools/git/commits/903a227b9b99d04ae84564cc07f246cbc8e175a5,903a227b9b99d04ae84564cc07f246cbc8e175a5,"godoc/static: mimic the pre-1.10 behavior of strconv.Quote

Thanks to iant for identifying the root cause.

Tested with go1.9 and go1.10.

Fixes golang/go#25880

Change-Id: Ibc3a2aadd92c1e512cf6c537134ee085398e8e6c
Reviewed-on: https://go-review.googlesource.com/118955
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-06-13 21:17:30,https://api.github.com/repos/golang/tools/git/commits/49ce10d9330e262e6059960eead401f06fec32b7,49ce10d9330e262e6059960eead401f06fec32b7,"godoc/static: suppress gen_test on go1.9

Either string quotation or Go formatting has since changed.
Will investigate later, but this fixes the dashboard for now.

Change-Id: Ieab3800fc2c24ba86026d25dea12853131c04948
Reviewed-on: https://go-review.googlesource.com/118715
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2018-06-13 18:57:27,https://api.github.com/repos/golang/tools/git/commits/c995a088887b4ae00a4c85a984117cbc8d86ca3d,c995a088887b4ae00a4c85a984117cbc8d86ca3d,"go/internal/gcimporter: move 1.11 specific tests out of non-1.11 builds (fix build)

TBR=adonovan

The tests TestImportedTypes and TestIssue25301 are dependent on many
1.11-specific bug fixes that went into go/types. Just move them out
of non-1.11 builds.

While doing so, also extended the set of test cases run by
TestImportedTypes (now matching the corresponding tests cases
in the std lib).

This also makes it again unnecessary to factor out the embeddedType
function into build-specific versions. Removed again.

For https://github.com/golang/lint/issues/402.

Change-Id: I45eb8c3d1dcca7b392f14a7660bc1599a44a0d41
Reviewed-on: https://go-review.googlesource.com/118567
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2018-06-13 18:25:52,https://api.github.com/repos/golang/tools/git/commits/e580e344d4e0cbda7790e2565e2ce2051647612a,e580e344d4e0cbda7790e2565e2ce2051647612a,"go/internal/gcimporter: don't use Interface.EmbeddedType for builds before go1.11

For https://github.com/golang/lint/issues/402.

Change-Id: I3f4eab123e52460980e76f5ffaca3a77a3af7374
Reviewed-on: https://go-review.googlesource.com/118565
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2018-06-13 17:59:32,https://api.github.com/repos/golang/tools/git/commits/6f857df7d488d55727e9513a1517bfc591b11fb3,6f857df7d488d55727e9513a1517bfc591b11fb3,"go/internal/gccgoimporter: use types.NewInterface (not NewInterface2) for builds before Go 1.11

For https://github.com/golang/lint/issues/402.

Change-Id: I06d944aaa168fb595ff96eb27a7d6e7da344ebd6
Reviewed-on: https://go-review.googlesource.com/118564
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
griesemer,2018-06-13 17:56:57,https://api.github.com/repos/golang/tools/git/commits/9d855108b0b1da96109446caeab282d4423ef49e,9d855108b0b1da96109446caeab282d4423ef49e,"go/internal/gcimporter: missed a NewInterface2 call in prior CL

For https://github.com/golang/lint/issues/402.

Change-Id: Ideaac18b4f0be1674bb07010840b3d10e6ebe9d6
Reviewed-on: https://go-review.googlesource.com/118639
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
griesemer,2018-06-13 17:42:45,https://api.github.com/repos/golang/tools/git/commits/58c6d92c350b07117a185248780ff4a905bafc29,58c6d92c350b07117a185248780ff4a905bafc29,"go/internal/gcimporter: use types.NewInterface (not NewInterface2) for builds before Go 1.11

For https://github.com/golang/lint/issues/402.

Change-Id: If8802c93679af57bcb50c43f386f37458813d910
Reviewed-on: https://go-review.googlesource.com/118563
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alindeman,2018-02-26 18:23:29,https://api.github.com/repos/golang/tools/git/commits/e1f909067fba6f4764ff0dc14860b136d9181ce0,e1f909067fba6f4764ff0dc14860b136d9181ce0,"godoc: correct abspath when looking for cmds

godoc is erroneously detecting paths like syscall and unsafe as possible
commands.

A previous attempt at a fix adjusted the parameters of pkgHandler in
pres.go, but that change had unexpected ripple effects that broke links
and other features of godoc. This change is scoped only to the godoc
command line tool.

cmdline_test.go is updated to match the parameters used in the real
pkgHandler in pres.go.

Fixes golang/go#14447

Change-Id: I8f740c6847e46523b8443722b16942192bdf9cb8
GitHub-Last-Rev: cfc24f2d4c3519c4c87628b2021f65a4725cda6b
GitHub-Pull-Request: golang/tools#27
Reviewed-on: https://go-review.googlesource.com/96515
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2018-06-13 05:33:41,https://api.github.com/repos/golang/tools/git/commits/9a70f1fcbf8c687dc1907029b064b4de34cc1c61,9a70f1fcbf8c687dc1907029b064b4de34cc1c61,"go/internal/gcimporter, gccgoimporter: updated to match latest version in std lib

This CL brings over the changes from:

https://go-review.googlesource.com/118496 (better error message when importer is out of date)
https://go-review.googlesource.com/114317 (permit embedding of non-defined interfaces via alias type names)
https://go-review.googlesource.com/85318  (use named receiver types for methods of named interfaces)
https://go-review.googlesource.com/42870  (report import path if package is not found)
https://go-review.googlesource.com/41710  (version tests for 1.8, v4 and v5)

Also updated go/gcexportdata to select between binary and new indexed export format.

For golang/go#25856.
For golang/go#25301.
For golang/go#20230.
For golang/go#13829.

Change-Id: Ibf77c50f86e767cef411bd1d3809e12397678958
Reviewed-on: https://go-review.googlesource.com/118555
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2018-06-13 06:46:11,https://api.github.com/repos/golang/tools/git/commits/02fcd6aaf1349bf6a3f24ef1b62ca07ff618ff59,02fcd6aaf1349bf6a3f24ef1b62ca07ff618ff59,"godoc: fix test failure

Adjust code to satisfy vet.

Change-Id: I532b4d988eb29b413520de60b8520d9e100b42c9
Reviewed-on: https://go-review.googlesource.com/118557
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-06-11 23:34:51,https://api.github.com/repos/golang/tools/git/commits/8c39fb57ad842377bfea6ab5eff7608e4e8f6765,8c39fb57ad842377bfea6ab5eff7608e4e8f6765,"cmd/godoc: use same GOROOT discovery as Go 1.10's cmd/go

Fixes golang/go#23445

Change-Id: I4c707107e636558b49ea9a1a8690723b06dda235
Reviewed-on: https://go-review.googlesource.com/118075
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
ianlancetaylor,2018-06-11 18:53:59,https://api.github.com/repos/golang/tools/git/commits/2475cf16d30626b42cfadd38c9be514959b36f37,2475cf16d30626b42cfadd38c9be514959b36f37,"cmd/guru: if built with gccgo, switch to gc mode if GOROOT is valid

The gccgo compiler does not provide a gc-style GOROOT with standard
library sources. The effect is that guru may not fully work when using
gccgo. However, it can fully work if the GOROOT environment variable
points to valid gc-style GOROOT. In that case, make it work by telling
the go/build package to use gc mode.

Change-Id: Iadff8be61be8cc9a7ff2ca0a067b116b62895451
Reviewed-on: https://go-review.googlesource.com/117997
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianlancetaylor,2018-06-11 18:45:24,https://api.github.com/repos/golang/tools/git/commits/f96157268cd4b34e3c6b84cda1b905a7c80796a7,f96157268cd4b34e3c6b84cda1b905a7c80796a7,"imports: fix test to work with gccgo

Change-Id: I382905b7b7bd8189c169048ba05080ee96e1da5b
Reviewed-on: https://go-review.googlesource.com/117995
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianlancetaylor,2018-06-08 04:33:18,https://api.github.com/repos/golang/tools/git/commits/c65208ee29128450a4a024e3b7710f3a8d14028d,c65208ee29128450a4a024e3b7710f3a8d14028d,"go/...: make most tests pass with gccgo

There is one non-test change: have FakeContext change the compiler to
""gc"", as callers expect to be accessing a gc-style GOROOT.

The go/pointer, go/ssa, and go/ssa/interp tests still fail with gccgo.

Change-Id: I850c9618401f6b9e63d7ca7196f91931b03f1524
Reviewed-on: https://go-review.googlesource.com/117395
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
FiloSottile,2018-06-07 18:57:16,https://api.github.com/repos/golang/tools/git/commits/4e38c85762ef97af128e1043dea2059b9f0ae206,4e38c85762ef97af128e1043dea2059b9f0ae206,"godoc/dl: add valsorda to users allowed to upload

Change-Id: Iac4a80b030be9c275323a27d2dfba4f83942cbf9
Reviewed-on: https://go-review.googlesource.com/117195
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ysmolsky,2018-05-20 07:57:22,https://api.github.com/repos/golang/tools/git/commits/a5b4c53f6e8bdcafa95a94671bf2d1203365858b,a5b4c53f6e8bdcafa95a94671bf2d1203365858b,"playground.js: display vet errors when program has no output

When program has no output and vet errors are encountered,
initialize data.Events as an empty array.

Fixes golang/go#25455.

Change-Id: Icedd77685b784505da3bb6383629cdfa8b8b22e9
Reviewed-on: https://go-review.googlesource.com/113875
Run-TryBot: Yury Smolsky <yury@smolsky.by>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
sbinet,2018-05-22 14:52:10,https://api.github.com/repos/golang/tools/git/commits/1937f90a1bb43667aff4059b1bab13eb15121e8e,1937f90a1bb43667aff4059b1bab13eb15121e8e,"cmd/gomvpkg: add missing closing double-quote to documentation

This CL adds a missing closing double-quote to the documentation string
of gomvpkg.

Change-Id: I000fe33fb9ddc5342bbf51c36595a884d6aa4eab
Reviewed-on: https://go-review.googlesource.com/114115
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2018-05-17 00:14:04,https://api.github.com/repos/golang/tools/git/commits/28aef64757f4d432485ab970b094e1af8b301e84,28aef64757f4d432485ab970b094e1af8b301e84,"go/internal/gcimporter: return error from BExportData

This change adds an error return value to BExportData and replaces the
various calls to log.Fatal within that library with panics that
propagate the internal error up the call stack to BExportData which
recovers and returns the error.

Fixes golang/go#25431

Change-Id: Id628c63a04145bb469bd6fbc7fbab1b0fa291b2c
Reviewed-on: https://go-review.googlesource.com/113457
Reviewed-by: David Symonds <dsymonds@golang.org>
Reviewed-by: Rob Pike <r@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ysmolsky,2018-04-16 16:40:48,https://api.github.com/repos/golang/tools/git/commits/48418e5732e1b1e2a10207c8007a5f959e422f20,48418e5732e1b1e2a10207c8007a5f959e422f20,"godoc: display ""go vet"" errors before the output of a program

This change adds an option to run ""go vet"" for the playground program
and display errors before any output. To enable this, the playground
function has to be supplied with opts.enableVet set to true.
Vet check is performed only for succesfully run programs,
meaning that the ""/compile"" endpoint returned no errors.

This change highlights lines printed to stderr as errors (in red).

There is a corresponding change for the Playground: CL 100776.

Updates golang/go#7597
Updates golang/go#24576

Change-Id: I8c0f8c1189c461338b5bce57777b12aecab268fb
Reviewed-on: https://go-review.googlesource.com/107455
Run-TryBot: Yury Smolsky <yury@smolsky.by>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
jimmyfrasche,2018-04-22 23:06:11,https://api.github.com/repos/golang/tools/git/commits/76f5b51ce419c0aba01931daad2860cd70be32ca,76f5b51ce419c0aba01931daad2860cd70be32ca,"x/tools/godoc: make front page video respond to layout changes (2/2)

This part of a multi-repo change. See CL 108677 for details.

Note: this change also requires a CL to golang/go to complete the fix,
though either CL without the other is harmless.

Updates golang/go#24997.

Change-Id: I99ca9a4e6df16347b8706f24cef9689b3345854a
Reviewed-on: https://go-review.googlesource.com/108678
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
bradfitz,2018-04-26 18:12:02,https://api.github.com/repos/golang/tools/git/commits/87723262609ca8fd55d449c027454c29cadefd68,87723262609ca8fd55d449c027454c29cadefd68,"cmd/guru: skip the slow tests in short mode

Change-Id: I85c2de03087ae8bb8989763f255b362eeee5b397
Reviewed-on: https://go-review.googlesource.com/109556
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
agnivade,2018-04-28 19:20:38,https://api.github.com/repos/golang/tools/git/commits/ae8027637c91c400af8a3e006c35c7011b3ca1fe,ae8027637c91c400af8a3e006c35c7011b3ca1fe,"godoc/static: add test for static.go file generation

Moved the code which generates static.go to remain in the static package.
This makes the code testable.

Additionally, it is very easy for developers to forget to run ""go generate""
to update static.go. Because while development, the templates directory
can be directly passed as a flag to read the files from it.

This test catches that.

Change-Id: I314907b98907bb14e4eabfd3c532ba2d84ce7c5f
Reviewed-on: https://go-review.googlesource.com/110158
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
jeevatkm,2018-05-03 04:36:43,https://api.github.com/repos/golang/tools/git/commits/f4ce24f1d8feacab63a0476fc8bee0de7f9dc291,f4ce24f1d8feacab63a0476fc8bee0de7f9dc291,"godoc/static: cleanup unused lines in makestatic.go

Change-Id: I9b930efb5efd4b32c41c40d2399e04bacd75b470
GitHub-Last-Rev: 53db7899927e5ae255310c6a765526a10552649f
GitHub-Pull-Request: golang/tools#36
Reviewed-on: https://go-review.googlesource.com/111155
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2018-05-02 20:56:06,https://api.github.com/repos/golang/tools/git/commits/8026fb003c560896db954319ee6d037f22a8d9c7,8026fb003c560896db954319ee6d037f22a8d9c7,"cmd/guru: fix vet error in referrers.go

Fixes golang/go#25227

Change-Id: If121154f95681367874332dac30bfe69d1755182
Reviewed-on: https://go-review.googlesource.com/111035
Run-TryBot: Andrew Bonventre <andybons@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
agnivade,2018-04-11 07:59:15,https://api.github.com/repos/golang/tools/git/commits/a25dedfa5301ffeb4be3968bf2d852610eb0a680,a25dedfa5301ffeb4be3968bf2d852610eb0a680,"godoc: set the GOROOT path properly in cmdline mode

- Setting the GOROOT build path to the value passed from the command line.

- Clarified the return values to named parameters for extra clarity.

- And while here, added some missed out error handling. Just logging the error
to preserve original behavior.

Fixes golang/go#13296

Change-Id: I91427eee790928a3cfb51ae207747e9a17bd5496
Reviewed-on: https://go-review.googlesource.com/110275
Run-TryBot: Andrew Bonventre <andybons@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
josharian,2018-04-23 19:43:41,https://api.github.com/repos/golang/tools/git/commits/5c8013c5617234a9515f1b1379aba7e03e846479,5c8013c5617234a9515f1b1379aba7e03e846479,"cmd/guru: re-use buffer for reading files

I felt guilty about leaving 2% on the table in CL 108878,
so I thought I'd get it a different way.

Teach readFile to accept a re-usable bytes.Buffer to read into,
to reduce the amount of garbage created.

To limit the possible memory impact of giant files,
only re-use the buffer for the duration of a single package.
Even that is enough to help.

name       old time/op       new time/op       delta
Referrers        4.67s ± 3%        4.58s ± 2%  -1.96%  (p=0.029 n=10+10)

name       old user-time/op  new user-time/op  delta
Referrers        16.5s ± 3%        15.8s ± 1%  -4.39%  (p=0.000 n=10+8)

name       old sys-time/op   new sys-time/op   delta
Referrers        16.1s ± 3%        15.9s ± 3%    ~     (p=0.218 n=10+10)

This work supported by Sourcegraph.

Change-Id: I594ef25c0fd5ccb766ff5b98dbbd1a75a7a4f957
Reviewed-on: https://go-review.googlesource.com/108935
Reviewed-by: Alan Donovan <adonovan@google.com>"
josharian,2018-04-23 19:57:10,https://api.github.com/repos/golang/tools/git/commits/c1f4e2c6dc737270fb7df7336ef12da407e4a157,c1f4e2c6dc737270fb7df7336ef12da407e4a157,"cmd/guru: emit initial referrers result earlier

This simplifies and unifies the code.
It also improves the output:
Now the initial result is referred to from the perspective of
the query site, rather than from the perspective of the package
containing the query object, which seems more natural.

This work supported by Sourcegraph.

Change-Id: Ie7a77d39dd6568334e72d894dc66d35494ed4ac4
Reviewed-on: https://go-review.googlesource.com/108936
Reviewed-by: Alan Donovan <adonovan@google.com>"
josharian,2018-04-23 18:53:40,https://api.github.com/repos/golang/tools/git/commits/d4c6246f3ebd42b56701500810e2ce2ce0dbad43,d4c6246f3ebd42b56701500810e2ce2ce0dbad43,"cmd/guru: parallelize loop in globalReferrersPkgLevel

This change parallelizes the outer loop in globalReferrersPkgLevel,
which loops over packages to inspect.

There is also an easily parallelizable inner loop.
However, parallelizing it adds complication
(deffiles needs a mutex, inQueryPackage requires a wait group)
and offers only a 2% speed-up.

Benchmarks for this change, looking for encoding/json.MarshalIndent:

name       old time/op       new time/op       delta
Referrers        5.31s ± 2%        4.67s ± 3%  -11.95%  (p=0.000 n=10+10)

name       old user-time/op  new user-time/op  delta
Referrers        15.9s ± 2%        16.5s ± 3%   +3.71%  (p=0.000 n=10+10)

name       old sys-time/op   new sys-time/op   delta
Referrers        15.7s ± 3%        16.1s ± 3%   +2.73%  (p=0.011 n=10+10)


Fixes golang/go#24272
Updates golang/go#25017


This work supported by Sourcegraph.

Change-Id: I5dcda9017103cdff59d0ffdf5e87d2c2c955a33a
Reviewed-on: https://go-review.googlesource.com/108878
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
josharian,2018-03-01 01:01:09,https://api.github.com/repos/golang/tools/git/commits/1e1ec013b916a41f3dffeb3699ee9dfc44bc5470,1e1ec013b916a41f3dffeb3699ee9dfc44bc5470,"cmd/guru: optimize global pkglevel referrer queries

Global, package-level queries can be done without typechecking.
This makes it significantly cheaper.

Instead of typechecking, consider all packages that directly
import the query package. In each of those packages, filter out:

* files that don't contain the query name
* files that don't import the query package

Fully parse the remaining files and look for selector expressions
matching the query package and name.

There are a few twists (dot imports, the query package, xtests).
They are described, along with how they are handled,
in the large comment at the beginning of globalReferrersPkgLevel.

On my machine and GOPATH, this reduces typical time
needed to find referrers to encoding/json.MarshalIndent
from (roughly)

real	0m39.946s
user	2m27.844s
sys	0m54.774s

to (roughly)

real	0m5.687s
user	0m15.793s
sys	0m16.001s

The processing of packages could be parallelized;
that is left for a future change, to ease reviewing.

Benefits from that will be limited;
building the reverse import graph accounts for 73%
of the runtime, and that is dominated by syscalls.

Optimization idea from Alan Donovan.

This work supported by Sourcegraph.

Change-Id: Ib19e25fcdcb27673fb03d7300dba2a53198901ad
Reviewed-on: https://go-review.googlesource.com/97800
Reviewed-by: Alan Donovan <adonovan@google.com>
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
andybons,2018-05-01 16:23:54,https://api.github.com/repos/golang/tools/git/commits/c47212f6f0f9f75a23516f7a938ff23dd00dc110,c47212f6f0f9f75a23516f7a938ff23dd00dc110,"godoc: don't exclude version field from File struct

When uploading a new release, it deserializes the payload into
a File struct for processing. It needs the Version field to
determine which release it's in.

Change-Id: I171f416dbb1b1b6c354948ea9a31b9c8694f892e
Reviewed-on: https://go-review.googlesource.com/110627
Run-TryBot: Andrew Bonventre <andybons@golang.org>
Reviewed-by: Bryan C. Mills <bcmills@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Filippo Valsorda <filippo@golang.org>"
benesch,2018-04-30 23:40:03,https://api.github.com/repos/golang/tools/git/commits/836e0f611e69f12657ca7b4ff1d5747865308e2d,836e0f611e69f12657ca7b4ff1d5747865308e2d,"cmd/goyacc: fix an off-by-one error in lineno tracking

Previously, goyacc's line number tracking would run off by one whenever
a multiline comment was used inside of an action, like so:

    expr:
        TOKEN
        {
            /* Hello. */
        }

This is because the character after the multi-line comment close marker
(i.e., the character immediately after `*/`) was blindly printed out
instead of properly accounted for. A newline character after a
multi-line comment would fail to increment lineno, for example, and any
error messages generated after that point would refer to the wrong line.
Similarly, a variable reference after a multi-line comment, like

    $$.val = &someStruct{Value: /* oops */$1}

would copy the $ literally into the resulting Go code. (This was not a
problem in practice because multi-line comments are typically followed
by whitespace.)

Adjust the control flow so the character after the multi-line comment
close marker character gets run through the relevant switch statement
and accounted for.

Change-Id: I276b6ffdb7626101f76811b7ee4804bacc6ef740
Reviewed-on: https://go-review.googlesource.com/110495
Run-TryBot: Ian Lance Taylor <iant@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
bcmills,2018-04-24 20:05:29,https://api.github.com/repos/golang/tools/git/commits/165bdd618e6d174c61ee7bd73a28f3e5c6fdced1,165bdd618e6d174c61ee7bd73a28f3e5c6fdced1,"imports: fix races in findImportGoPath

Before this change, findImportGoPath used a field within the
(otherwise read-only) structs in the dirScan map to cache the distance
from the importing package to the candidate package to be imported. As
a result, the top-level imports.Process function was not safe to call
concurrently: one goroutine could overwrite the distances while
another was attempting to sort by them. Furthermore, there were some
internal write-after-write races (writing the same cached distance to
the same address) that otherwise violate the Go memory model.

This change fixes those races, simplifies the concurrency patterns,
and clarifies goroutine lifetimes. The functions in the imports
package now wait for the goroutines they spawn to finish before
returning, eliminating the need for an awkward test-only mutex that
could otherwise mask real races in the production code paths.

See also:
https://golang.org/wiki/CodeReviewComments#goroutine-lifetimes
https://golang.org/wiki/CodeReviewComments#synchronous-functions

Fixes golang/go#25030.

Change-Id: I8fec735e0d4ff7abab406dea9d0c11d1bd93d775
Reviewed-on: https://go-review.googlesource.com/109156
Run-TryBot: Bryan C. Mills <bcmills@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Joe Tsai <thebrokentoaster@gmail.com>"
agnivade,2018-04-27 04:40:32,https://api.github.com/repos/golang/tools/git/commits/8e070db38e5c55da6a85c81878ab769bf5667848,8e070db38e5c55da6a85c81878ab769bf5667848,"godoc: remove vendor prefixes for border-radius

All major browsers support the border-radius directive
without any vendor prefix. Hence, removing them.

https://caniuse.com/#search=border-radius

Change-Id: I2da5f109296df3c7f191df95876bd6849f51d9ae
Reviewed-on: https://go-review.googlesource.com/110155
Reviewed-by: Andrew Bonventre <andybons@golang.org>
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
agnivade,2018-02-02 09:15:40,https://api.github.com/repos/golang/tools/git/commits/0b5ca0b0400f3828340b1302bc811fa777cb5958,0b5ca0b0400f3828340b1302bc811fa777cb5958,"godoc: use relative css unit

To scale the website elements independently of the default font size,
we use the css rem unit. This scales the elements proportionally if the
user has set a different font size than the default.

We make all calculations assuming that 1rem=16px, which is the
default font size for browsers.

Tested manually on FF 59 and Chrome 65 with permutations of different
resolutions and different default font-sizes upto 36px.

Fixes golang/go#6150

Change-Id: I7ded227ee2c55178271667009ab98ee0b4e7e8b3
Reviewed-on: https://go-review.googlesource.com/94935
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
stamblerre,2018-04-26 17:58:52,https://api.github.com/repos/golang/tools/git/commits/6e0e2181b9b7327c20fd9aa37d42a9515169a418,6e0e2181b9b7327c20fd9aa37d42a9515169a418,"go/internal/gcimporter: support indexed export data

Support indexed export data in the x/tools gcimporter. Fixes tests with
tip.

This is just a copy of the bimport.go and iimport.go files in the
standard library gcimporter package, including some minor fixes to the
existing bimport.go. The iexport logic in x/tools still needs to be
updated.

Fixes golang/go#25052

Change-Id: I2858e5c0853735c904f32b7b27c1c288a9e62e88
Reviewed-on: https://go-review.googlesource.com/109595
Reviewed-by: Alan Donovan <adonovan@google.com>
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
josharian,2018-04-23 20:21:01,https://api.github.com/repos/golang/tools/git/commits/c1def519f03ddf76f16b3e444ee1095d73afa01b,c1def519f03ddf76f16b3e444ee1095d73afa01b,"imports: improve VendorlessPath docs

Eliminate Latin, lest someone complain
""it's Greek to me"".

This work supported by Sourcegraph,
though perhaps not the commit message.

Change-Id: Ia44eaf5bc5adb6624b590c9cfdfe8083d1414a2c
Reviewed-on: https://go-review.googlesource.com/108937
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2018-04-23 16:37:30,https://api.github.com/repos/golang/tools/git/commits/81527693ec4d570943ba3e1e8ffc2c54c2eb5647,81527693ec4d570943ba3e1e8ffc2c54c2eb5647,"imports: export VendorlessPath

Rename to avoid imports/import stutter and export.
It will be used soon by guru's referrers command.

This work supported by Sourcegraph.

Change-Id: Ibfc39d061d6269a336a59d9b6979188a94537d94
Reviewed-on: https://go-review.googlesource.com/108877
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
josharian,2018-04-23 16:31:51,https://api.github.com/repos/golang/tools/git/commits/71f44073ef4ffd32376e2b197dad0bd815b0056b,71f44073ef4ffd32376e2b197dad0bd815b0056b,"cmd/guru: always import tests in initial referrers import

If test files are not included here,
then results in those files will be missing
for queries within a single package.

This work supported by Sourcegraph.

Change-Id: I8136ea250ba980179228d9b408d9e7409c49a873
Reviewed-on: https://go-review.googlesource.com/97799
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
josharian,2018-04-23 16:10:15,https://api.github.com/repos/golang/tools/git/commits/7e5e8df4df4d07da05bd54ddd49990e99dcccd56,7e5e8df4df4d07da05bd54ddd49990e99dcccd56,"cmd/guru: make tests granular and parallel

This make it possible to easily run individual guru tests.

It also slightly speeds up the overall test run,
from 23s to 18s on my machine;
the TestGuru/calls is now the limiting factor,
by a significant margin.

This work supported by Sourcegraph.

Change-Id: If61ebf1cc60441a65274f3fddd31f69c7ca23b48
Reviewed-on: https://go-review.googlesource.com/108876
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianthehat,2018-03-08 21:10:10,https://api.github.com/repos/golang/tools/git/commits/94b14834a20132093826ea5e2da5502a13908ad3,94b14834a20132093826ea5e2da5502a13908ad3,"imports: extract fastWalk into new package internal/fastwalk

It is going to be used by a new tool.
Moved to an internal package so it does not become a publicly supported
api.
Modified the tests so they don't depend on the fix_test infrastructure.

Change-Id: Ib8ebef24dc23e180960af04aa3d06b5f41a7c02b
Reviewed-on: https://go-review.googlesource.com/99678
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-04-14 21:33:16,https://api.github.com/repos/golang/tools/git/commits/1a83a0b54880dd62aaf82968d7cdd83007ecc60e,1a83a0b54880dd62aaf82968d7cdd83007ecc60e,"godoc: fix counting of package files in GetPageInfo

CL 107155 introduced this bug due to oversight. There can be
a scenario where a folder has no source .go or .c files,
but has an ignored .go file. In that case, both the if conditions
to check the length of pkgfiles slice will evaluate to true.

Added a test case for it to prevent this happening in future.

Change-Id: I7181699bbf7580888a6f7923c5aeb842356941a8
Reviewed-on: https://go-review.googlesource.com/107195
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
kevinburke,2018-02-17 21:40:32,https://api.github.com/repos/golang/tools/git/commits/d9caac373771d868e508d835ebc3294a9a611c50,d9caac373771d868e508d835ebc3294a9a611c50,"godoc: add benchmark for directory scan

I'd like to propose changes to the directory scanner implementation,
and it would be good to be able to measure how changes compare in
terms of allocations and time taken.

Change-Id: I4ff4bbd38b5e3522f50d31473f2ac607bb0de802
Reviewed-on: https://go-review.googlesource.com/94904
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-04-03 06:22:19,https://api.github.com/repos/golang/tools/git/commits/327197e6b056fd5c2c733feceab7a7a195556dbc,327197e6b056fd5c2c733feceab7a7a195556dbc,"godoc,blog: perform minor cleanup

- Remove a stray comment which was no longer needed. The accompanying
issue golang.org/issue/7524 was discussed and closed.
- Combine 2 if conditions into a single if-else because
length of a slice can never be negative.
- Remove http links from golangOrgAbsLinkReplacer now that all
links have been changed to https in the blog articles.

Change-Id: I2fe2ec245b580a91760c9331e9626b367f1b6740
Reviewed-on: https://go-review.googlesource.com/107155
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
agnivade,2018-04-14 18:45:41,https://api.github.com/repos/golang/tools/git/commits/8723cc7387521a38ae242937c34eb8e15055e484,8723cc7387521a38ae242937c34eb8e15055e484,"blog: revert strings.Builder to bytes.Buffer

The blog repo can still be imported by older Go versions. Hence,
we need to maintain backward compatibility.

Change-Id: I0235d888734c2f191d04924815f8ffea0239aace
Reviewed-on: https://go-review.googlesource.com/107175
Run-TryBot: Kevin Burke <kev@inburke.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-04-08 06:55:29,https://api.github.com/repos/golang/tools/git/commits/d11f6ec946130207fd66b479a9a6def585b5110b,d11f6ec946130207fd66b479a9a6def585b5110b,"blog: serve relative links when run locally

Currently, links inside blog articles are absolute links to golang.org.
But when a godoc server is run locally, the blog package should
serve local links pointing to the local godoc server. It is not possible
to simply change the links inside the blog templates to relative urls
because the blog articles are independant pages on their own.
And moreover, they are served from blog.golang.org.

Rather, the blog package consumes and serves blog articles.
So, a flag was added in the Config struct to denote whether
to convert the links or not. This flag is then set from the
call site in godoc package where the blog server is initialized from.

This was required because ""golang.org/x/tools/blog"" is a package
which can be used by other code to serve blog pages and not just godoc.
This preserves existing functionality for all working code which
imports ""golang.org/x/tools/blog"" and changes the functionality only
when a godoc server is run locally.

And while here, replace relevant bytes.Buffer occurences
with strings.Builder.

Fixes golang/go#22681

Change-Id: I7dbf9c5f2f93fd0b7e17915238de1c084fcd1431
Reviewed-on: https://go-review.googlesource.com/105835
Reviewed-by: Andrew Bonventre <andybons@golang.org>
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
urld,2018-02-25 17:01:30,https://api.github.com/repos/golang/tools/git/commits/5e86cd2985e3522a4347346e38527de88ceefffd,5e86cd2985e3522a4347346e38527de88ceefffd,"cmd/present: display slide numbers

Fixes golang/go#5331

Change-Id: Iddd45452959823b2e8e3f9b4236a9a9a3968d35f
Reviewed-on: https://go-review.googlesource.com/97058
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
haya14busa,2017-03-24 05:58:37,https://api.github.com/repos/golang/tools/git/commits/1c0c7a8ccea464136be9160da64d04309e424a3b,1c0c7a8ccea464136be9160da64d04309e424a3b,"imports: Process should accept nil src

The comment of Process() implies src can be nil, but it didn't handle
nil src correctly before because parse() doesn't expect nil src.
Passing []byte(nil) to parser.ParseFile() results in error and parse()
tries to parse again by modifying src if src is statement list.

This problem isn't related with cmd/goimports because goimports doesn't
pass []byte(nil) to Process() as src.

Fixes golang/go#19676

Change-Id: Idbaa6646c3907690763eabc798860c56bb9963d4
Reviewed-on: https://go-review.googlesource.com/38613
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-04-11 20:51:08,https://api.github.com/repos/golang/tools/git/commits/dc06d3e643411517e465276d75b66dbed2898850,dc06d3e643411517e465276d75b66dbed2898850,"cmd/godoc: support http-01 ACME challenge in optional autocert support

Using same structure & naming as CL 91518.

Fixes golang/go#23627

Change-Id: Ifb73c77d2c39f9f669d425650f9c5bc31bace196
Reviewed-on: https://go-review.googlesource.com/106455
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
agnivade,2018-04-10 20:38:02,https://api.github.com/repos/golang/tools/git/commits/8b3cccae50961d427273d41c8a6ad18bfa623e08,8b3cccae50961d427273d41c8a6ad18bfa623e08,"godoc/vfs: improve implementation of RootType

- Removed the StandAlone and Asset root types as they were just there
for other vfses to satisfy the FileSystem interface and causing unnecessary
confusion. Returning just empty strings in those scenarios now to clarify
that it is a dummy placeholder.

- Removed the prefix ""Fs"" from RootType as it was unnecessary.

- Using the RootType type to pass down to the html templates
instead of converting to string. The templates are capable of converting
to the actual string representation when comparing the value.

Change-Id: Iadc039f1354ecd814eec0af1e52cdbaaeff0cc89
Reviewed-on: https://go-review.googlesource.com/106196
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
tklauser,2018-04-11 18:41:39,https://api.github.com/repos/golang/tools/git/commits/ccd319aab13add0b98acdb0db5d46c20c2d1fedd,ccd319aab13add0b98acdb0db5d46c20c2d1fedd,"go/ssa/interp: add internal/syscall/unix.syscall_fcntl to fix tests

CL 100077 added the syscall_fcntl function in the internal/syscall/unix
package to refer to syscall.fcntl outside of the syscall package in a
unified way.

Add a replacement that simulates a successful fcntl call to fix the
interp tests.

Change-Id: I05847d222f18a19cb30f1395497e708a027a002e
Reviewed-on: https://go-review.googlesource.com/106415
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-04-11 19:17:23,https://api.github.com/repos/golang/tools/git/commits/368a7e18b5e0fd3f3b6c9d58ab8cc49bc357cc5d,368a7e18b5e0fd3f3b6c9d58ab8cc49bc357cc5d,"cmd/guru: skip broken test for old Go versions for now

Updates golang/go#24421

Change-Id: Iedcb629135802f78e8f149b377f34e49c8019fe9
Reviewed-on: https://go-review.googlesource.com/106435
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
agnivade,2018-03-17 19:16:28,https://api.github.com/repos/golang/tools/git/commits/faed997d2c50aac9885d111f84817ba5a3a71455,faed997d2c50aac9885d111f84817ba5a3a71455,"godoc: cleanup package templates

Separate the templates of package root directory and other
directories. This removes several if-else conditions and
makes the template code much cleaner.

To be merged after CL 95835.

For golang/go#3305

Change-Id: I435441dbe214e4c89271483173df7c30a42ee28f
Reviewed-on: https://go-review.googlesource.com/101295
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
agnivade,2018-01-28 14:23:55,https://api.github.com/repos/golang/tools/git/commits/16d1af8d88c08b6a22e07a0900aad5279a7fb4fd,16d1af8d88c08b6a22e07a0900aad5279a7fb4fd,"godoc: group package home page list by root

This CL groups the package list into two groups - standard library(GOROOT),
and third-party code(GOPATH).

It also wraps the list with a collapsible div header used in the package
documentation page. This makes the entire page easy to view and manage, and also
makes it consistent with the rest of the pages.

To implement this, a new function was added to the filesystem interface
which returns the root type of the filesystem. In most cases, it is either GOROOT
or GOPATH. There are other kinds of filesystems which are not used in the home page,
so additional values have been added to satisfy the interface.

A side effect of this is that the html template code has become a bit spaghetti-like
with if conditions all over. This is because the same template is used to render
a package directory as well as the package home page. A better way is to use
two separate templates for the different tasks. This cleans out a lot of the
if conditions and make for a much cleaner code. This has been taken care in CL 101295.

Fixes golang/go#3305
Fixes golang/go#15020

Change-Id: I876357dc76280a7df2ed08d7c6bc53d9a41e69ab
Reviewed-on: https://go-review.googlesource.com/95835
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
mdempsky,2018-04-10 01:10:05,https://api.github.com/repos/golang/tools/git/commits/5dfd8930f264888dd5fe26820a0ac605a384dd33,5dfd8930f264888dd5fe26820a0ac605a384dd33,"go/internal/gcimporter: rename from go/gcimporter15

Follow through on promise to remove the old API.

Change-Id: If1f5addfeb1b82acc5a1730474e2f06102dbb615
Reviewed-on: https://go-review.googlesource.com/105977
Run-TryBot: Matthew Dempsky <mdempsky@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
mdempsky,2018-04-09 23:27:07,https://api.github.com/repos/golang/tools/git/commits/14d5b80f954f510ba9bcd241821b6f4828498e1a,14d5b80f954f510ba9bcd241821b6f4828498e1a,"go/gcimporter15: support bimport format v6

Format change introduced by golang.org/cl/105038.

Change-Id: I76eefe9ce7f52743cb5cdcfe77e5ee0b5eb8743f
Reviewed-on: https://go-review.googlesource.com/105976
Run-TryBot: Matthew Dempsky <mdempsky@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-03-30 18:03:06,https://api.github.com/repos/golang/tools/git/commits/ac136b6c2db7c4d43955e4bc7174db36dc0539c0,ac136b6c2db7c4d43955e4bc7174db36dc0539c0,"godoc: sort package listing

The directory slice gets created first from newDirTree and then
gets appended again after reading from the dirchs channel. Hence
we need to sort the slice after all the entries are added.

Fixes golang/go#24601

Change-Id: I9282e8643a4448b2c1c84495b7642610f6c56d50
Reviewed-on: https://go-review.googlesource.com/103955
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Kevin Burke <kev@inburke.com>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dmitshur,2018-03-28 16:45:32,https://api.github.com/repos/golang/tools/git/commits/370143dbcae1edc3c1c0f447e98e00a837bddd2d,370143dbcae1edc3c1c0f447e98e00a837bddd2d,"godoc/static: add perf, review, sync subrepos

They exist and are considered to be worth listing based on the decision
made in golang/go#24432. They weren't listed previously. This change
fixes that.

Document the remaining subrepos that are not meant to be listed (per
decision in golang/go#24432), so it's clear that it's intentional for
them to not be visible at https://golang.org/pkg/#subrepo.

Closes golang/go#24432.
Updates golang/go#14304.

Change-Id: Icc50ebfcdbc490c32519d92a1a838eb3f54c823d
Reviewed-on: https://go-review.googlesource.com/103075
Reviewed-by: Austin Clements <austin@google.com>"
ysmolsky,2018-03-23 11:59:17,https://api.github.com/repos/golang/tools/git/commits/77106db15f689a60e7d4e085d967ac557b918fb2,77106db15f689a60e7d4e085d967ac557b918fb2,"cmd/godoc: fix TestWebIndex test

The godoc in the test was indexing sources in the default GOPATH.
If the default GOPATH pointed to local workspace, test would timeout.
The fix is to supply GOPATH set to non-existing path.

Fixes golang/go#24504

Change-Id: Iedf044cdec78d5c5642105650ad8ec17aa10a5ba
Reviewed-on: https://go-review.googlesource.com/102295
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ysmolsky,2018-03-14 21:00:17,https://api.github.com/repos/golang/tools/git/commits/4c0f0e48a635ba08a80fbebdb19258a0f675a910,4c0f0e48a635ba08a80fbebdb19258a0f675a910,"godoc: add vet support to playground.js

Playground needs godoc to support calls to /vet endpoint in playground.js.
Optional parameter ""vetEl"" is added to the function ""playground"".
If it's passed then the js installs the click handler to the element.

There is a corresponding CL 100776 for the playground code.

Updates golang/go#7597

Change-Id: Ica2e7cb9d76f6f19a1805c182e666b8142762da9
Reviewed-on: https://go-review.googlesource.com/100775
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
clrprod,2017-11-14 23:37:00,https://api.github.com/repos/golang/tools/git/commits/2226533658007779ffd629b495a088530c84dc50,2226533658007779ffd629b495a088530c84dc50,"refactor/eg: Add support for multi line after statements to eg.

The semantics of this change are that the last line will be subsituted
in place of the expression, where as the lines before that will undergo
variable substitution and be prepended before the lowest (in the AST
tree sense) statement which included the expression.

Change-Id: Ie2571934dcc1b0a30b5cec157e690924a4ac2c5a
Reviewed-on: https://go-review.googlesource.com/77730
Reviewed-by: Alan Donovan <adonovan@google.com>"
kevinburke,2018-02-17 21:43:41,https://api.github.com/repos/golang/tools/git/commits/96caea41033df6f8c3974c845ab094f8ec3bd345,96caea41033df6f8c3974c845ab094f8ec3bd345,"godoc: fix runaway goroutine use

Previously we would spin up a new goroutine for every directory
we needed to parse. Since parent directories cannot exit until
children have exited, in large GOPATH directories we could have 8000+
goroutines evaluating directories concurrently. The race detector uses
tsan, and tsan can handle a maximum of 8192 concurrent threads at one
time.

Limit the number of concurrent threads. It is difficult to do this
in a way that does not involve a child being blocked on a parent
completing to spin up goroutines for itself to complete. Solve this by
completing work on the main thread if there are no additional workers
available to help complete work.

I was expecting limiting the concurrency to hurt performance, but it
actually significantly improves it. Benchmarks were performed using CL
94904 at tip, and with goroutines at 2, 4, and 8 times the number of
CPU's.

$ benchstat tip.benchmark gated-2.benchmark gated-4.benchmark gated-8.benchmark
name \ time/op    tip.benchmark  gated-2.benchmark  gated-4.benchmark  gated-8.benchmark
NewDirectory-4       293ms ± 2%         262ms ± 4%         252ms ± 4%         253ms ± 2%

name \ alloc/op   tip.benchmark  gated-2.benchmark  gated-4.benchmark  gated-8.benchmark
NewDirectory-4       218MB ± 0%         218MB ± 0%         218MB ± 0%         218MB ± 0%

name \ allocs/op  tip.benchmark  gated-2.benchmark  gated-4.benchmark  gated-8.benchmark
NewDirectory-4        513k ± 0%          508k ± 0%          509k ± 0%          510k ± 0%

Fixes golang/go#22110.

Change-Id: If01f78f1fc53cd195e4f8f6988c3c39b3c275992
Reviewed-on: https://go-review.googlesource.com/94955
Reviewed-by: Yury Smolsky <yury@smolsky.by>
Reviewed-by: Kevin Burke <kev@inburke.com>"
dmitshur,2018-03-16 21:40:10,https://api.github.com/repos/golang/tools/git/commits/14b3f5b193ad5f5529253a12070c010b60e5f62b,14b3f5b193ad5f5529253a12070c010b60e5f62b,"godoc/static: add x/time subrepo

It exists, but wasn't listed previously. This change fixes that.

Fixes golang/go#24430.

Change-Id: Iaf83a4b7353794e6f411941de811ed1554955179
Reviewed-on: https://go-review.googlesource.com/101241
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ysmolsky,2018-03-08 08:04:01,https://api.github.com/repos/golang/tools/git/commits/39919aea0440ceb01a167207d6ec6eb6d48d8a42,39919aea0440ceb01a167207d6ec6eb6d48d8a42,"cmd/godoc: provide -all flag to output unexported identifiers

This flag includes unexported identifiers in command-line mode.
It is equivalent to ?m=all in web mode.

Fixes golang/go#8093

Change-Id: I1e5a69626929d3430638d900f3e975b272a98c90
Reviewed-on: https://go-review.googlesource.com/99435
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
griesemer,2018-03-16 00:47:48,https://api.github.com/repos/golang/tools/git/commits/c4b4e4b0fa4a67bbbfceacd5e484460d33fb87f5,c4b4e4b0fa4a67bbbfceacd5e484460d33fb87f5,"cmd/guru: fix .golden file (fix build)

This regression is due to https://go-review.googlesource.com/c/go/+/100235
which made the go/scanner behavior match the compiler's scanner by
not modifying filenames in line directives in any form. Specifically,
relative filenames now remain relative. This makes it easier to reason
about the behavior of the scanner but may require clients to adjust
those filenames.

If removing the longer path in the .golden file is not satisfactory,
the (scanner) client may have to massage positions returned via line
directives; or better, the line directives are created with extended
path information.

R=adonovan

Change-Id: I836571a6dafef5e6d81e4c7add203c994e107055
Reviewed-on: https://go-review.googlesource.com/101015
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
agnivade,2018-03-13 09:51:37,https://api.github.com/repos/golang/tools/git/commits/5ad4d95e58135daa27cc1463f290951ea6fe0809,5ad4d95e58135daa27cc1463f290951ea6fe0809,"godoc: add the defer attribute to script tags

This allows the scripts to be downloaded concurrently as the
body is being parsed.

Deferred scripts are executed in order and only after the entire
document has been loaded. So essentially the entire effect remains same
but we reduce the network download time.

Also, CL 90396 missed out updating static.go. Packaging the change along
with this.

Change-Id: Ia850bd50b49f2a9e0e4fbc29617858ab0fa8a0b9
Reviewed-on: https://go-review.googlesource.com/100295
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
nmiyake,2018-03-13 21:48:25,https://api.github.com/repos/golang/tools/git/commits/c41d1439521820892798a1ede0322bc890f8dd4c,c41d1439521820892798a1ede0322bc890f8dd4c,"imports: support match without trailing slash for -local flag

Make it so that import prefixes specified using the -local flag are considered
a match for an import path if the prefix ends with a '/' and the import path
matches exactly the prefix without a slash. For example, specifying
""golang.org/x/tools/"" as a prefix would match the import for the package
""golang.org/x/tools"".

Fixes golang/go#24368

Change-Id: I0302db72fda63ad24d7b964aa73f78aa0ebccb37
Reviewed-on: https://go-review.googlesource.com/100460
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2018-03-14 17:21:36,https://api.github.com/repos/golang/tools/git/commits/d853e8088c62fe13976545876d4ebb5917e2e4da,d853e8088c62fe13976545876d4ebb5917e2e4da,"CONTRIBUTING.md: remove note about not accepting Pull Requests

Updates golang/go#24185

Change-Id: I6462c066b7efc4086496d9ed5e85a0d826f962bd
Reviewed-on: https://go-review.googlesource.com/100716
Reviewed-by: Andrew Bonventre <andybons@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
ianthehat,2018-03-12 23:32:48,https://api.github.com/repos/golang/tools/git/commits/c1547a3f90f245aa85784a99580d3f601380cc07,c1547a3f90f245aa85784a99580d3f601380cc07,"imports: Limit the amount of text printed in the large token case

If the test fails, it tries to print a million characters.
This limits it to just the start of got and want, which is enough to see
the imports block anyway.

Change-Id: I2c58db8e96e73da436ca16fa8a57c820a95242ca
Reviewed-on: https://go-review.googlesource.com/100216
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
nishanths,2017-12-23 08:05:04,https://api.github.com/repos/golang/tools/git/commits/059bec968c61383b574810040ba9410712de36c5,059bec968c61383b574810040ba9410712de36c5,"cmd/goimports: support multiple comma-separated imports in -local flag

In cmd/goimports, allow for the -local flag to accept a comma-separated
list of import path prefixes. Also, update the imports package
accordingly to support this.

Fixes golang/go#19188

Change-Id: I083d584df8c3a77532f0f66e9c5d970960180e0d
Reviewed-on: https://go-review.googlesource.com/85397
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
dmitshur,2018-02-17 07:00:07,https://api.github.com/repos/golang/tools/git/commits/9f6d4ad827bbe70b5f5c8db2d3d279ea0a2767ad,9f6d4ad827bbe70b5f5c8db2d3d279ea0a2767ad,"go/buildutil: use build.Import to find GOPATH containing x/tools

Previously, the test assumed that golang.org/x/tools was always in the
first GOPATH workspace. It may not be. Find it dynamically instead.

Fixes golang/go#19400.

Change-Id: I9c75d5ff1409aebd403d7ad4314b496fe1a04140
Reviewed-on: https://go-review.googlesource.com/94900
Run-TryBot: Dmitri Shuralyov <dmitri@shuralyov.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ysmolsky,2018-02-27 16:02:18,https://api.github.com/repos/golang/tools/git/commits/73e16cff9e0d4a802937444bebb562458548241d,73e16cff9e0d4a802937444bebb562458548241d,"imports: show detailed error when directory cannot be opened

Fixes golang/go#24154

Change-Id: I2834cc2578e911499cbce5412fe6a9041248794d
Reviewed-on: https://go-review.googlesource.com/97359
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
ddatsh,2018-02-26 18:23:26,https://api.github.com/repos/golang/tools/git/commits/10db2d12cfa8602d0ffa73c5c2270ce47ba56b30,10db2d12cfa8602d0ffa73c5c2270ce47ba56b30,"cmd/present: support being reverse proxied from https

Fixes golang/go#21921

Change-Id: Idc6ff2773dcef7210ce4d0eecb7affb357a213b5
GitHub-Last-Rev: 50b959e9b6f2f1513235c5ca0124d80b487c5296
GitHub-Pull-Request: golang/tools#26
Reviewed-on: https://go-review.googlesource.com/96295
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-02-01 17:09:07,https://api.github.com/repos/golang/tools/git/commits/2ae76fd1560b622911f444c1e66b70a857e1de67,2ae76fd1560b622911f444c1e66b70a857e1de67,"godoc: show synopses for subdirectories in package view

In command-line mode, we were traversing the dir tree with depth
of only 1. This prevented the synopses of sub-directories from being
scanned and showed in the output when a package path was being passed.

Increasing the depth to 2 so that sub-directories of the next
level is also parsed and the synopses gets shown.

Also fixed the comment to reflect that dir can be nil only in
command-line mode now after golang.org/cl/93215

Fixes golang/go#22646

Change-Id: I066a3bc3ba3d9d3a9589f97137e1bc4497a45473
Reviewed-on: https://go-review.googlesource.com/93675
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
bradfitz,2018-02-22 03:57:59,https://api.github.com/repos/golang/tools/git/commits/f8f2f88271bf2c23f28a09d288d26507a9503c97,f8f2f88271bf2c23f28a09d288d26507a9503c97,"Revert ""godoc/dl: provide JSON feed of releases""

This reverts commit 07fd8470d635b985c9c749fa83bdbc2f20b35d42.

Reason for revert: doesn't compile; was never tested apparently.

Change-Id: I9502dbd3fae1f388ee48d6de9a3f2c1df53411ad
Reviewed-on: https://go-review.googlesource.com/96235
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2018-02-22 03:51:16,https://api.github.com/repos/golang/tools/git/commits/733d4897861a986ead19acef78641affd601ca57,733d4897861a986ead19acef78641affd601ca57,"cmd/godoc: add x/lint and x/vgo redirects

Change-Id: I6e21f167091338600c2a0a37411b0a565d27ce36
Reviewed-on: https://go-review.googlesource.com/96196
Run-TryBot: Andrew Bonventre <andybons@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2018-02-21 16:37:51,https://api.github.com/repos/golang/tools/git/commits/45c8140d108726864cb8acf1a7a480a7e8aa3b33,45c8140d108726864cb8acf1a7a480a7e8aa3b33,"Revert ""godoc: correct fsRoot to prevent misleading message about cmd/""

This reverts commit db9df828801ebeef3516fd9505e6be3168b75d8e.

Reason for revert: Broke the build. I forgot to run tests, sorry.

Change-Id: I8a6ef88cac2aa638982530960f0d37a32dc5ccf0
Reviewed-on: https://go-review.googlesource.com/95875
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2018-02-17 06:00:02,https://api.github.com/repos/golang/tools/git/commits/e8fdd2090a90b7fc79eedebbc4c348c9d453fcc2,e8fdd2090a90b7fc79eedebbc4c348c9d453fcc2,"go/vcs: fix command injection in VCS path

Apply same change as CL 94656 did for cmd/go/internal/get, but for
golang.org/x/tools/go/vcs, to help keep them in sync.

It indirectly includes changes from CL 94603, since CL 94656 was
rebased on top of CL 94603.

Updates golang/go#23867.
Helps golang/go#11490.

Change-Id: I33eca1aba19f47bbe3e83d4ef9f9cc9a9c9ae975
Reviewed-on: https://go-review.googlesource.com/94899
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alindeman,2018-02-21 02:59:22,https://api.github.com/repos/golang/tools/git/commits/db9df828801ebeef3516fd9505e6be3168b75d8e,db9df828801ebeef3516fd9505e6be3168b75d8e,"godoc: correct fsRoot to prevent misleading message about cmd/

Fixes golang/go#14447

GitHub-Last-Rev: 98ea70ca4df4e1bdead0b3960ef0381b4f81572b
GitHub-Pull-Request: golang/tools#24
Change-Id: Ida7db414a47ea6f6da5de400bcb6a5aea03f1d05
Reviewed-on: https://go-review.googlesource.com/94841
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2018-02-21 00:33:11,https://api.github.com/repos/golang/tools/git/commits/2c624306892e9c0e84204c42a08978beb847b185,2c624306892e9c0e84204c42a08978beb847b185,"go/callgraph/cha: fix bug computing correspondence of abstract/concrete methods

In a dynamic interface method call x.f() where x has type I, it is not sound
to assume that the receiver of the types.Signature for types.Func f has type I, as
Func objects for abstract methods may be shared by multiple interfaces.

Fixes golang/go#23925

Change-Id: I755e3010d1310480c46855e072946346626b3e59
Reviewed-on: https://go-review.googlesource.com/95697
Reviewed-by: Robert Griesemer <gri@golang.org>
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
andybons,2018-02-20 22:17:00,https://api.github.com/repos/golang/tools/git/commits/5e776fee60db37e560cee3fb46db699d2f095386,5e776fee60db37e560cee3fb46db699d2f095386,"cmd/tip: update talks hash to pull in e00c182

Updates golang/go#21643

Change-Id: Ic662ac6ca152d8cf702b02651f55936a29a2e234
Reviewed-on: https://go-review.googlesource.com/95675
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-02-14 13:06:10,https://api.github.com/repos/golang/tools/git/commits/ce871d178848e3eea1e8795e5cfb74053dde4bb9,ce871d178848e3eea1e8795e5cfb74053dde4bb9,"godoc: allow line numbers to be searched by ctrl+f

We used a css-pseudo class rule to move the line number inside
the pseudo element. The idea was to prevent line numbers from getting
selected while copying the code. But this was already implemented
with the ""user-select: none"" rule.

Since the spec was undefined on ""user-select"", we had to resort
to the pseudo-class, but now both FF and Chrome implement the correct
behavior.

Hence, moving the content to be inside the span, and removing the
pseudo-class rule.

Manually tested with Chrome 63 and Firefox 58 on Ubuntu.

Fixes golang/go#23724

Change-Id: I3e733db766b44875ba6bc3f6985cde2559d116e2
Reviewed-on: https://go-review.googlesource.com/93975
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
dmitshur,2018-02-09 20:17:51,https://api.github.com/repos/golang/tools/git/commits/a4ae70923768403983fdab4e1d612d79c08ba465,a4ae70923768403983fdab4e1d612d79c08ba465,"go/vcs: add package comment

According to https://golang.org/doc/effective_go.html#commentary,
""Every package should have a package comment.""

Updates golang/go#11490.

GitHub-Last-Rev: 8dd80d0f1cbd94ab14dbfdbf0199ca199f33e1fd
GitHub-Pull-Request: golang/tools#22
Change-Id: Ia3af83cc68bcde12c37492ad240031aecf6934a3
Reviewed-on: https://go-review.googlesource.com/93081
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-01-28 14:52:12,https://api.github.com/repos/golang/tools/git/commits/7374a09fcc20b83847803a10e57fbb49ae3b7349,7374a09fcc20b83847803a10e57fbb49ae3b7349,"godoc: move package example section

The example_html was being rendered outside the "".expanded"" div which
did not hide it when the parent Overview div was being hidden. Moving it
inside the div so that the behavior is consistent

Fixes golang/go#23590

Change-Id: I75ee0af1c4074e02629b84ce366b34711e6d823b
Reviewed-on: https://go-review.googlesource.com/90396
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
aantelov87,2018-02-10 11:48:53,https://api.github.com/repos/golang/tools/git/commits/6c27c68f27f0d7b30dc15cd675853cc3d95be1e5,6c27c68f27f0d7b30dc15cd675853cc3d95be1e5,"imports: fix mangled comments after package clause insertion

Fixes golang/go#12097

Change-Id: Ie6a6aa997e89700e49d703b7fd00f515b03ad6f8
Reviewed-on: https://go-review.googlesource.com/93235
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mvdan,2018-02-13 14:24:18,https://api.github.com/repos/golang/tools/git/commits/90b807ada4cc7ab5d1409d637b1f3beb5a776be7,90b807ada4cc7ab5d1409d637b1f3beb5a776be7,"all: fix a few issues found by unparam

In cmd/present, a mode was being passed to the function parse, but it
wasn't actually being used. Use it.

In go/ssa, checkFinalInstr received an idx integer but it doesn't
actually need it. Get rid of it.

Lastly, in imports, findImportStdlib always returned rename==false. Get
rid of that result parameter.

Change-Id: I719006b69ee80a3ef4b0ea24c1c206016a7e304b
Reviewed-on: https://go-review.googlesource.com/93596
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
benesch,2018-02-13 00:48:13,https://api.github.com/repos/golang/tools/git/commits/c0251d31d27142b569bd4a16ced6073bbcda6150,c0251d31d27142b569bd4a16ced6073bbcda6150,"imports: handle arbitrarily long lines

Previous work to resolve golang/go#18201 increased the maximum line
length that goimports could handle to 1MiB (CL83800), but generated code
can result in Go files with longer lines. Use a bufio.Reader instead of
a bufio.Scanner to support arbitrarily long lines, as permitted by the
Go spec.

Change-Id: If719e531859804304d60a8c00db6304ab3d5fe5e
Reviewed-on: https://go-review.googlesource.com/93439
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-02-10 04:29:54,https://api.github.com/repos/golang/tools/git/commits/006ac430a0c602f226457adf750e51d6b533f746,006ac430a0c602f226457adf750e51d6b533f746,"godoc: init corpus in a separate goroutine in http mode

Currently, in http mode the server blocks until the corpus
has been initialized. This can cause considerable delay
if the user workspace is significantly large and the files
are not present in the buffer cache.

This CL spawns off the initialization in a separate goroutine
if httpMode is set and turns on a flag when it's done.
The http handler checks the flag and returns an error response
if it has not been set.

The check is only performed for the path prefixes handled by the
handlerServer struct. Other paths do not call the GetPageInfo() function
and hence can return immediately. This preserves maximum responsiveness
of the server.

Also adds an additional print statement in verbose mode

Note: This is a re-do of a previous CL golang.org/cl/88695 which was
incorrect committed without running tests. This CL fixes that test.

Fixes golang/go#13278

Change-Id: I80c801f32af007312090d3783a2ea2c6f92cad66
Reviewed-on: https://go-review.googlesource.com/93215
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
ianlancetaylor,2018-02-12 22:11:11,https://api.github.com/repos/golang/tools/git/commits/f05340fad48926594a3c17968f98ffc30e075b59,f05340fad48926594a3c17968f98ffc30e075b59,".gitignore: roll back "".gitignore: ignore emacs backup files""

The .gitignore file should only list files created by the build.

Change-Id: I0cab4662e54a560851cf5d9c4b4d18c4eb9a6bb6
Reviewed-on: https://go-review.googlesource.com/93437
Reviewed-by: Rob Pike <r@golang.org>"
ianlancetaylor,2018-02-12 17:51:33,https://api.github.com/repos/golang/tools/git/commits/235755e1942ac8d38ab186a82e6fe154d39051ac,235755e1942ac8d38ab186a82e6fe154d39051ac,".gitignore: ignore emacs backup files

Change-Id: I283243e963abcdd7e41c58fc6ece79e384bed6e9
Reviewed-on: https://go-review.googlesource.com/93415
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2018-02-10 01:38:34,https://api.github.com/repos/golang/tools/git/commits/95b47aa5df4eda9bfbc0133f77c0e320f0275eba,95b47aa5df4eda9bfbc0133f77c0e320f0275eba,"imports: update zstdlib to Go 1.10

Change-Id: I36e7a5638de2cdcd3523bb3c6c89399586aab938
Reviewed-on: https://go-review.googlesource.com/93195
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2018-02-09 16:58:40,https://api.github.com/repos/golang/tools/git/commits/70252dea49c01dbfc3f800978304eb00eb15b698,70252dea49c01dbfc3f800978304eb00eb15b698,"Revert ""godoc: init corpus in a separate goroutine in http mode""

This reverts commit f86b507a7e91633e9ed99e4071f91a62e78f05f6.

Reason for revert: broke tests in tools repo

Change-Id: Id7e5d8e050896b6f5fedaee705be8a5f9adf4bf3
Reviewed-on: https://go-review.googlesource.com/93115
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
bradfitz,2018-02-01 23:02:22,https://api.github.com/repos/golang/tools/git/commits/66487607e2081c7c2af2281c62c14ee000d5024b,66487607e2081c7c2af2281c62c14ee000d5024b,"cmd/tip: enable HTTP ACME challenges

Updates golang/go#23627

Change-Id: I9dff655b531dc3491419ee1883c570c0bc5d8955
Reviewed-on: https://go-review.googlesource.com/91518
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
andybons,2018-01-25 02:48:19,https://api.github.com/repos/golang/tools/git/commits/25101aadb97aa42907eee6a238d6d26a6cb3c756,25101aadb97aa42907eee6a238d6d26a6cb3c756,"godoc,cmd/getgo: update download links to dl.google.com

Change-Id: Idd003c76edbf9d3ecf3354036e734386c55ed1f2
Reviewed-on: https://go-review.googlesource.com/89695
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
agnivade,2018-01-19 07:13:17,https://api.github.com/repos/golang/tools/git/commits/f86b507a7e91633e9ed99e4071f91a62e78f05f6,f86b507a7e91633e9ed99e4071f91a62e78f05f6,"godoc: init corpus in a separate goroutine in http mode

Currently, in http mode the server blocks until the corpus
has been initialized. This can cause considerable delay
if the user workspace is significantly large and the files
are not present in the buffer cache.

This CL spawns off the initialization in a separate goroutine
if httpMode is set and turns on a flag when it's done.
The http handler checks the flag and returns an error response
if it has not been set.

The check is only performed for the path prefixes handled by the
handlerServer struct. Other paths do not call the GetPageInfo() function
and hence can return immediately. This preserves maximum responsiveness
of the server.

Also adds an additional print statement in verbose mode

Fixes golang/go#13278

Change-Id: I0505acc1c190423d09fb199b11ca86e0400e84d4
Reviewed-on: https://go-review.googlesource.com/88695
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
andybons,2018-01-20 03:12:17,https://api.github.com/repos/golang/tools/git/commits/99037e3760ed7d9c772c980caee42b17779b80ce,99037e3760ed7d9c772c980caee42b17779b80ce,"cmd/godoc: allow golang.google.cn as a valid host

Change-Id: I8a585ad64f389f57800afe99824ae249c9f80340
Reviewed-on: https://go-review.googlesource.com/88677
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
fraenkel,2017-09-24 14:03:04,https://api.github.com/repos/golang/tools/git/commits/af2bfe26b6891a197d033db63786cf8eb6bebd7b,af2bfe26b6891a197d033db63786cf8eb6bebd7b,"cmd/gomvpkg: Only process paths that are children

When determining children of a parent directory, look for the expected /
to avoid processing directories that look similar but are not direct
descendants.

Fixes golang/go#21991

Change-Id: I5c7d18076540e5588a856845f04645231856196f
Reviewed-on: https://go-review.googlesource.com/65672
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2018-01-17 17:45:26,https://api.github.com/repos/golang/tools/git/commits/a5d79d28aa86310829fc68e084b39c765c8bf353,a5d79d28aa86310829fc68e084b39c765c8bf353,"go/...: fix/disable broken tests

gp/ssa: add {Start,Stop}TestLog methods to synthesized test main package.

go/ssa/interp: add (not thread-safe) intrinsics for atomic.Value,
which are now used by Getenv.

go/pointer: disable test of callbacks from runtime timers
as the analysis's intrinsics are out of date.  Also fix 3 typos.

Change-Id: I25f95ba18986727275a730b465e7fd23c08b2af2
Reviewed-on: https://go-review.googlesource.com/88055
Reviewed-by: Robert Griesemer <gri@golang.org>
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
agnivade,2018-01-09 05:14:40,https://api.github.com/repos/golang/tools/git/commits/8ea45f96742f825c49e900f42a01928554b5a6a0,8ea45f96742f825c49e900f42a01928554b5a6a0,"blog: show a helpful error for invalid template directory

Currently, if the blog binary is executed outside the root directory
without any additional flags, it bails out with the following error -
""open template/root.tmpl: no such file or directory""

This CL prints out a more user friendly error which allows the user to
learn that there is a flag with which the template directory can be set.

Fixes golang/go#22622

Change-Id: I726e7c28f5e5036146769ca01516368f45a6262c
Reviewed-on: https://go-review.googlesource.com/86855
Run-TryBot: Andrew Gerrand <adg@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
griesemer,2018-01-10 20:46:33,https://api.github.com/repos/golang/tools/git/commits/fbec762f837dc349b73d1eaa820552e2ad177942,fbec762f837dc349b73d1eaa820552e2ad177942,"go/internal/gccgoimporter: parse optional escape info in export data

This is a copy of https://go-review.googlesource.com/c/go/+/86977
and brings those changes into the x/tools repo.

It also includes a minor change to parser.go that was done via
https://go-review.googlesource.com/37839 but that wasn't brought
over.

For golang/go#23324.

Change-Id: I84b7cf134fec250ac340e404802158860cb3c630
Reviewed-on: https://go-review.googlesource.com/87295
Reviewed-by: Cherry Zhang <cherryyz@google.com>"
fraenkel,2017-12-08 14:26:14,https://api.github.com/repos/golang/tools/git/commits/8cab8a1319f0be9798e7fe78b15da75e5f94b2e9,8cab8a1319f0be9798e7fe78b15da75e5f94b2e9,"imports: sibling imports must have matching references

When selecting a sibling's import, the unresolved reference must have
been also used otherwise use the normal search to determine the best
possible package to import.

Fixes golang/go#23001

Change-Id: I38a983569991464970ad5921fe7f280dd3e35a2c
Reviewed-on: https://go-review.googlesource.com/82875
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2018-01-05 03:24:33,https://api.github.com/repos/golang/tools/git/commits/b790d0ba0332a621d0b58cfd69fa13bd3dc358d2,b790d0ba0332a621d0b58cfd69fa13bd3dc358d2,"godoc: set proper content-type header on share request

When sending the request to /share, it defaulted to
application/x-www-form-urlencoded. This caused the body to be
empty since it was sending a form with the actual code as a
key in the r.Form map.

Set the content type explicitly to text/plain.

Fixes golang/go#21691

Change-Id: I0d5981d9c9aa901010af65b0d0a7670870b77f2b
Reviewed-on: https://go-review.googlesource.com/86317
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
andybons,2018-01-05 00:52:29,https://api.github.com/repos/golang/tools/git/commits/08da88d2714e44bffda720342aa4d3ff010e7788,08da88d2714e44bffda720342aa4d3ff010e7788,"godoc/proxy: remove unused cacheKey function

Change-Id: Ic7392e973de4a8c9232e9c55ed76c4ca799d68b4
Reviewed-on: https://go-review.googlesource.com/86315
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2018-01-04 23:12:00,https://api.github.com/repos/golang/tools/git/commits/951512dfed6ce3af7c9c8aa37505a03c9b0c348d,951512dfed6ce3af7c9c8aa37505a03c9b0c348d,"godoc: proxy /compile requests to play.golang.org

Now that play.golang.org and sandbox[-flex].golang.org have been
merged, proxy requests to the former.

Change-Id: I7d18d0494fd54c2357dc53952fa458ceb1380aca
Reviewed-on: https://go-review.googlesource.com/86253
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stevegilbert23,2017-12-15 13:15:17,https://api.github.com/repos/golang/tools/git/commits/96b5a5404f303f074e6117d832a9873c439508f0,96b5a5404f303f074e6117d832a9873c439508f0,"imports: support files with longer lines

This change set fixes the issue by specifying a max buffer size of ~1 megabyte for Scanner.
Previously the max was not set resulting in the default max which is ~64k.  This increased max should not increase
memory use for smaller, normal files because it is a max and the code expands the buffer as needed for large tokens.

The change set includes an additional change to return an error from the Scanner which was ignored previously.

Fixes golang/go#18201

Change-Id: I11be39af74d5eb3b353ad81ba1cb5404207aa65d
Reviewed-on: https://go-review.googlesource.com/83800
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2018-01-03 17:34:11,https://api.github.com/repos/golang/tools/git/commits/ef037a11d26f0c92de679ad2b1e1c6a9ccbfbd5f,ef037a11d26f0c92de679ad2b1e1c6a9ccbfbd5f,"go/ssa/interp: skip tests on darwin until crashes are fixed

Updates golang/go#23166

Change-Id: Ie9db70d6f2f8d90817ec3de35e6ca51ec476f949
Reviewed-on: https://go-review.googlesource.com/85995
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mwhudson,2017-12-22 01:12:16,https://api.github.com/repos/golang/tools/git/commits/894cde2672a2fb65ca40a8fbdce343f755975005,894cde2672a2fb65ca40a8fbdce343f755975005,"go/ssa/interp: add intrinsic for math.hasVectorFaciliy to fix tests on s390x

Change-Id: I482924585d2d74a25bf88169900a8788b5333738
Reviewed-on: https://go-review.googlesource.com/85235
Reviewed-by: Michael Munday <mike.munday@ibm.com>
Run-TryBot: Michael Munday <mike.munday@ibm.com>"
kashav,2017-12-28 01:47:17,https://api.github.com/repos/golang/tools/git/commits/f271d7a0f8cf389f3ee4f6bf8d68e716a60ea571,f271d7a0f8cf389f3ee4f6bf8d68e716a60ea571,"go/pointer: fix typo (""distiction"" -> ""distinction"")

Change-Id: I88334b30b08e110b837c255220385c9c4cd4a823
Reviewed-on: https://go-review.googlesource.com/85576
Reviewed-by: Emmanuel Odeke <emm.odeke@gmail.com>"
johanbrandhorst,2017-12-26 19:45:35,https://api.github.com/repos/golang/tools/git/commits/b451b9aaee4dcf75f9f28cddb69b9d0ed17a9752,b451b9aaee4dcf75f9f28cddb69b9d0ed17a9752,"present: update link to sam documentation

The link to the sam documentation explaining the use
of the address syntax used when loading code files
was dead. This updates the location of the
documentation to the new plan9 site.

Fixes golang/go#23247

Change-Id: If27702a17700ac859650e1e3c070cb43345f32b0
Reviewed-on: https://go-review.googlesource.com/85420
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mvdan,2017-11-19 20:52:17,https://api.github.com/repos/golang/tools/git/commits/ae8cc594552814363a7aeeb4f2825515a771fa38,ae8cc594552814363a7aeeb4f2825515a771fa38,"cmd/stringer: add flag to use line comment as str

This can be very helpful if you lay out each value's string
representation like this:

	and    // &
	andAnd // &&
	or     // |
	orOr   // ||

Without the use of comments, it's impossible to use stringer with these
names as the characters & and | cannot form valid identifiers in a Go
program.

Fixes #20483.

Change-Id: I4d36c74059dd48ae3a5e09b70a429a75853ef179
Reviewed-on: https://go-review.googlesource.com/44076
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Rob Pike <r@golang.org>"
andybons,2017-12-11 18:51:56,https://api.github.com/repos/golang/tools/git/commits/64890f4e2b733655fee5077a5435a8812404c3a3,64890f4e2b733655fee5077a5435a8812404c3a3,"godoc: fix missing search icon on /dl and correct borders

Some default browser stylesheets set a border radius on <button>
elements that was not being overridden in style.css. The button
should not have any border radii on the left as it should look
like an extension of the search field.

Change-Id: I458bd2e3a903a4c1dd246ff0304e7d3cf29c0988
Reviewed-on: https://go-review.googlesource.com/83296
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
haya14busa,2017-12-10 15:23:31,https://api.github.com/repos/golang/tools/git/commits/5d8e38b9550d35d893ff8276756b4118ec1bf360,5d8e38b9550d35d893ff8276756b4118ec1bf360,"cover: handle multiple samples from the same location

This change is ported from src/cmd/cover/profile.go[1].

Now that go test supported -coverprofile with multiple packages (#6909),
x/tools/cover/profile should also handle multiple samples from the same
location.

[1]: https://github.com/golang/go/commit/f39050c8ebf894ccedc0b99de96f7412be97af89

Fixes golang/go#23076

Change-Id: I1b1d664bf56f7e22c6cb2726df44fb577408c6f7
Reviewed-on: https://go-review.googlesource.com/83078
Run-TryBot: Rob Pike <r@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
bradfitz,2017-12-10 00:23:26,https://api.github.com/repos/golang/tools/git/commits/9b32ad6a0077c7f766ad108c08f5852a8e0690fa,9b32ad6a0077c7f766ad108c08f5852a8e0690fa,"godoc/dl: bump minimum Windows version to XP SP 3

That's what our main XP developer has, and what our builder is.

We can't vouch for anything older. Also, IIRC, there were some
TLS/cert changes in SP3 we depended on, but I can't find the details
in quick searches.

Change-Id: I876494b2c8d201e2d1a8a74ffc6150697208af6f
Reviewed-on: https://go-review.googlesource.com/83096
Reviewed-by: Alex Brainman <alex.brainman@gmail.com>"
andybons,2017-12-07 22:38:12,https://api.github.com/repos/golang/tools/git/commits/a5ff95640e8c289d9c807a532e8110268036c0dd,a5ff95640e8c289d9c807a532e8110268036c0dd,"godoc: add andybons to binary upload whitelist

Change-Id: I87c43864b07a05d257ef94267073f0e13aff353e
Reviewed-on: https://go-review.googlesource.com/82715
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
henryas,2017-12-06 15:54:56,https://api.github.com/repos/golang/tools/git/commits/71657689f07604379fce067b57ff757f42c0bf3d,71657689f07604379fce067b57ff757f42c0bf3d,"stringer: don't emit unnecessary variables

Fixes golang/go#23014

Change-Id: I159f83bae0ed632b0b3c00f8ab02f5701acbc4cc
Reviewed-on: https://go-review.googlesource.com/82215
Run-TryBot: Rob Pike <r@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
griesemer,2017-11-30 05:28:37,https://api.github.com/repos/golang/tools/git/commits/04447353bc504b9a5c02eb227b9ecd252e64ea20,04447353bc504b9a5c02eb227b9ecd252e64ea20,"go/ssa: complete interface types for correct string form (fix build)

Fixes golang/go#22933.

Change-Id: I0cf0aab8b77114ee7eb1e181aee2c5b75087aa83
Reviewed-on: https://go-review.googlesource.com/80897
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2017-11-29 19:51:57,https://api.github.com/repos/golang/tools/git/commits/36c7af3342056179a831c19ec142f2763b310f7b,36c7af3342056179a831c19ec142f2763b310f7b,"all: fix plan9 build

getgo doesn't work on plan9. Skip it entirely.

And skip the massive slow godoc start-up test. Not worth it.

Change-Id: If062b7c4c8c7c5084e607ed22085657054c10ba9
Reviewed-on: https://go-review.googlesource.com/80737
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2017-11-28 21:15:16,https://api.github.com/repos/golang/tools/git/commits/2c687adedb6d6e9609b0f4b0c69d445c6e2cd69c,2c687adedb6d6e9609b0f4b0c69d445c6e2cd69c,"go/ssa/interp: drop interpretation of ""testing"" package

The ""testing"" package depends on low-level details that change too often.

Change-Id: I59101e16588296cb40c851d4a34ddf199f4d176c
Reviewed-on: https://go-review.googlesource.com/80376
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2017-11-28 20:46:15,https://api.github.com/repos/golang/tools/git/commits/0e42b0fe4097d90b68d864fa8c38d0dea70a1ad9,0e42b0fe4097d90b68d864fa8c38d0dea70a1ad9,"go/ssa/interp: add fake runtime.callerName to fix broken tests

We are inching towards the point at which I blow away this entire
package, or at least all tests that interpret the standard ""testing""
package.

Change-Id: I06d99aac6d7baab14ee6c6a61afe0af34b814767
Reviewed-on: https://go-review.googlesource.com/80356
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2017-11-15 05:27:03,https://api.github.com/repos/golang/tools/git/commits/6d70fb2e85323e81c89374331d3d2b93304faa36,6d70fb2e85323e81c89374331d3d2b93304faa36,"go/ast/astutil: add Apply, for rewriting Go ASTs

This change implements an AST walker, Apply, with the capability
to perform various actions (including rewrites) during the AST
walk, in pre- and post-iteration order.

Ideally we would like to have this functionality in the std lib
(go/ast), but as this change contains significant new API, it
is better to first gain some experience with it in x/tools.

Credits: This is joint work of Josh Bleecher Snyder, Roger
Peppe, and myself (author of this CL). The code is based on
proposal golang/go#17108 which I had started, together with an
initial implementation. It was then reworked significantly by
Josh in golang.org/cl/55790, further refined by suggestions
from Roger (allocation reduction), and finally cleaned up a bit
by me (AST simplifications).

Fixes golang/go#17108.

Change-Id: I56d56b7f2bc5be2acfeb927f76aea7f264bb7b94
Reviewed-on: https://go-review.googlesource.com/77811
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
178inaba,2017-08-25 06:00:21,https://api.github.com/repos/golang/tools/git/commits/4de4a8d2069ae83551a383b100f80859283a6a12,4de4a8d2069ae83551a383b100f80859283a6a12,"godoc: use ""IsPredeclared"" of go/doc

In the go/doc, the same map as ""predeclared"" is defined.
Instead of the ""predeclared"" map use the ""IsPredeclared"" function
which is an accessor for the go/doc map.

Deleted unnecessary ""predeclared"".

Fixes golang/go#20357

Change-Id: I4ea360efddd28a9a1236d5adfdafb1a0970a4215
Reviewed-on: https://go-review.googlesource.com/58890
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mvdan,2017-11-14 11:28:52,https://api.github.com/repos/golang/tools/git/commits/bd4635fd25596cdd56c1fb399c53b351d1a81f2d,bd4635fd25596cdd56c1fb399c53b351d1a81f2d,"cmd/stringer: use strconv instead of fmt

In the generated code, we want to pull in as few dependencies as
possible. fmt is heavier than strconv, and the latter can be used with a
bit of extra code for the same results.

More importantly, this will allow stringer to be used in some std
packages that cannot import fmt, such as regexp/syntax. While strconv
lies in L2 in deps_test.go, fmt lies in L4.

This means that many other packages will also be able to use stringer
where it could be useful, such as path/filepath, os/exec, or io/ioutil.

Since some of these types may be 64-bit integers, use FormatInt instead
of Itoa to avoid overflows with int on 32-bit.

Also double-checked that the generated code is still formatted properly.

Change-Id: Iffb3bd2df5c94407705689719240aca0c7474a89
Reviewed-on: https://go-review.googlesource.com/77473
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
fraenkel,2017-02-15 13:46:03,https://api.github.com/repos/golang/tools/git/commits/9c57063f678bcbddd0bd7d5c26fdcc3f8ffee056,9c57063f678bcbddd0bd7d5c26fdcc3f8ffee056,"imports: prioritize closer packages

Prefer imports that are closer to the current package.

Fixes golang/go#17557

Change-Id: Iec55a294d396feac6234be307e08608b8559f65c
Reviewed-on: https://go-review.googlesource.com/37070
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
andybons,2017-11-10 17:05:31,https://api.github.com/repos/golang/tools/git/commits/9c477bae194915bfd4bc8c314e90e28b9ec1c831,9c477bae194915bfd4bc8c314e90e28b9ec1c831,"godoc: use dl.google.com instead of redirector.gvt1.com

Fixes golang/go#22648

Change-Id: I59185cc1ed61235a0fcfadc060c4735372586358
Reviewed-on: https://go-review.googlesource.com/76971
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mvdan,2017-11-08 22:03:33,https://api.github.com/repos/golang/tools/git/commits/bce7a99f8ae89e194045114404fcc6287b1f8722,bce7a99f8ae89e194045114404fcc6287b1f8722,"cmd/stringer: add -trimprefix option

To trim a string prefix from the names when generating their final
strings. Add a simple test too.

There is no automatic detection of prefixes for now. That can be added
later, building on top of this first simple implementation.

Fixes #16539.

Change-Id: Ica37273ac74bb0a6cbd43e61823786963d86a492
Reviewed-on: https://go-review.googlesource.com/76650
Run-TryBot: Daniel Martí <mvdan@mvdan.cc>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
ianlancetaylor,2017-11-07 22:44:15,https://api.github.com/repos/golang/tools/git/commits/05e91d06384e3a4eb0aba75560d254b8d5a7b431,05e91d06384e3a4eb0aba75560d254b8d5a7b431,"cmd/stringer: fix typo in test log message (""no"" -> ""not"")

Fixes golang/go#22623

Change-Id: I62ab82a04f34f379f715f0902a69caa9c74c50d2
Reviewed-on: https://go-review.googlesource.com/76397
Run-TryBot: Ian Lance Taylor <iant@golang.org>
Reviewed-by: Kevin Burke <kev@inburke.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
davidrjenni,2017-11-06 19:55:38,https://api.github.com/repos/golang/tools/git/commits/c84da9fa1c1dbcae4557e8c8509abeb814ed9632,c84da9fa1c1dbcae4557e8c8509abeb814ed9632,"refactor/rename: fix test failures in TestRewrites.

CL https://golang.org/cl/66130 changes go/printer to format one-method
interfaces to be printed on a single line. This change broke the
equality check in TestRewrites. Fix it by reformatting the expected
file buffers so that the tests pass with tip and previous Go versions.

Change-Id: I660efd81b362554db0515760dad7c8b62e4db1b3
Reviewed-on: https://go-review.googlesource.com/75812
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-11-05 09:15:23,https://api.github.com/repos/golang/tools/git/commits/9adcb2aa4107eee297917bb99f890a495f7afff9,9adcb2aa4107eee297917bb99f890a495f7afff9,"cmd/getgo: fix vet failure caused by missing argument to Errorf call.

Change-Id: I2812e2c655a0e463203f5c2ede08182c40556953
Reviewed-on: https://go-review.googlesource.com/75975
Reviewed-by: Gabriel Aszalos <gabriel.aszalos@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Gabriel Aszalos <gabriel.aszalos@gmail.com>"
davidrjenni,2017-11-05 09:25:41,https://api.github.com/repos/golang/tools/git/commits/9e72de2cfb502924882dcfe6ca22d7be1d1e2dc9,9e72de2cfb502924882dcfe6ca22d7be1d1e2dc9,"cmd/gorename: fix test failure formatting.

Change-Id: Idbfb356225f4650446bffa80a43cec4679bcd507
Reviewed-on: https://go-review.googlesource.com/75976
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2017-11-02 22:51:16,https://api.github.com/repos/golang/tools/git/commits/032dfd515a0b058cc9bc616139b136f923d3924a,032dfd515a0b058cc9bc616139b136f923d3924a,"cmd/toolstash: don't try comparing ""asm -V=full"" output.

Added link as well, since they are all symmetric.

Follow-up on https://go-review.googlesource.com/c/tools/+/75670.

For golang/go#22552.

Change-Id: I12d951b800cd5fc7abc6d09e6a8a986e3f9f6936
Reviewed-on: https://go-review.googlesource.com/75672
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
mdempsky,2017-11-02 22:27:13,https://api.github.com/repos/golang/tools/git/commits/d620ba0fbbb7e786cbc8643c0876a79af93eeb9d,d620ba0fbbb7e786cbc8643c0876a79af93eeb9d,"cmd/toolstash: don't try comparing ""compile -V=full"" output

Fixes golang/go#22552.

Change-Id: I2a31cf4fe85f33068502102031ed62f06abb6d6e
Reviewed-on: https://go-review.googlesource.com/75670
Run-TryBot: Matthew Dempsky <mdempsky@google.com>
Reviewed-by: Robert Griesemer <gri@golang.org>"
andybons,2017-10-24 20:47:09,https://api.github.com/repos/golang/tools/git/commits/9b61fcc4c548d69663d915801fc4b42a43b6cd9c,9b61fcc4c548d69663d915801fc4b42a43b6cd9c,"Revert ""godoc: better distinguish links and link state""

This reverts commit 9bd2f442688b66c5289262d70f537c2ecf81d7de.

Reason for revert: https://github.com/golang/go/issues/22171#issuecomment-339125376

Update golang/go#22171

Change-Id: I41da526912b3484721782e0dad02d97ab2845a12
Reviewed-on: https://go-review.googlesource.com/73151
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
andybons,2017-10-24 20:45:43,https://api.github.com/repos/golang/tools/git/commits/5ec91747d9f09be5b9088308b58945a585c68391,5ec91747d9f09be5b9088308b58945a585c68391,"Revert ""godoc: accessible permalinks""

This reverts commit f57adc18217d779aa42266ea71a545827755a77b.

Reason for revert: See https://github.com/golang/go/issues/22171#issuecomment-339125376 for reasoning.

Change-Id: Ifd81ad716cf2acdf7a1d73602ac781186aca5596
Reviewed-on: https://go-review.googlesource.com/73150
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
jimmyfrasche,2017-10-07 19:42:05,https://api.github.com/repos/golang/tools/git/commits/9bd2f442688b66c5289262d70f537c2ecf81d7de,9bd2f442688b66c5289262d70f537c2ecf81d7de,"godoc: better distinguish links and link state

There were two issues with links in godoc:

1) They were only distinguished from ordinary text only by color,
affecting those with color-vision deficiencies.

2) The same blue used for links is used by non-links,
affecting everybody.

This change adds a an underline to all links.

Usually, it is safe to skip underlining in locations where it clear
that the only contents are navigational links, such as #pkg-index.
However, (2) prevented this.

To work around this I used some less well supported CSS techniques:
http://caniuse.com/#feat=text-decoration

Less capable browsers, which are unlikely to be used by developers, may
have a less than optimal experience, unfortunately. In more capable
browsers, including those without full support, the experience is quite
pleasant and the additional underlying does not interfere with the godoc
aesthetic.

For golang/go#22171

Change-Id: I5a0d817793e8aa31912ba065b4e5a63d4a3f138c
Reviewed-on: https://go-review.googlesource.com/69150
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
jimmyfrasche,2017-10-08 20:00:25,https://api.github.com/repos/golang/tools/git/commits/5d186094d5308fe6b03ce53178de1e26f9f43e70,5d186094d5308fe6b03ce53178de1e26f9f43e70,"godoc: add label and button to search bar

To increase accessibility of the search bar,
an aria-label for screen readers and a submit
button was added.

The search field was given the semantically correct
input type and marked required field as hints to UAs
that can use that to provide context to the user.

The placeholder text was restyled for improved contrast.
The javascript for handling placeholders was removed
as it is no longer necessary.

For golang/go#22171

Change-Id: I8db6428bb727a09e7f175e77100b4bcf9b6a5f3e
Reviewed-on: https://go-review.googlesource.com/69190
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
jimmyfrasche,2017-10-08 23:16:30,https://api.github.com/repos/golang/tools/git/commits/f57adc18217d779aa42266ea71a545827755a77b,f57adc18217d779aa42266ea71a545827755a77b,"godoc: accessible permalinks

This CL makes permalinks accessible to keyboard-users and screen
readers.

Adding an aria-label to permalinks overrides the default content
of ""pilcrow"".

As the permalinks only showed on hover they were inaccessible
to users who could only use a keyboard and are now always shown.

For golang/go#22171

Change-Id: I6ce3828dfedfd7edc29dd16f3eb94a0abcabfc7c
Reviewed-on: https://go-review.googlesource.com/69210
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
cherrymui,2017-08-30 20:00:42,https://api.github.com/repos/golang/tools/git/commits/e4b401d06e5ee9f990011dc4f24cd24162131565,e4b401d06e5ee9f990011dc4f24cd24162131565,"cmd/toolstash: pass -c=1 in the second compilation

When toolstash -cmp found diff, it does a second compilation
with extra flags -v -m=2, which are imcompatible with the
concurrent backend. Pass -c=1 in the second compilation.

Change-Id: I3c77069936da1829b68375a4a6c7f9bbe364247c
Reviewed-on: https://go-review.googlesource.com/60390
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
bhainesva,2017-10-09 00:15:37,https://api.github.com/repos/golang/tools/git/commits/a567bbf739617291e377ca944a35ffb092c8c6b2,a567bbf739617291e377ca944a35ffb092c8c6b2,"godoc: avoid skipping heading level in package docs

The heading of the #pkg-index section of package documentation pages
uses an h2 heading but its 'Examples' and 'Package files' subsections
use h4 headings, skipping the h3 level.

This change switches the h4s to h3s and adds styling to preserve the
current font-size with the new heading level.

For golang/go#22171

Change-Id: Ifd2cacab22c1e82fd6f061b9322523fa5859a80f
Reviewed-on: https://go-review.googlesource.com/69171
Reviewed-by: jimmy frasche <soapboxcicero@gmail.com>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
jimmyfrasche,2017-10-07 15:42:58,https://api.github.com/repos/golang/tools/git/commits/0b88a3aa0751a3accc5cadec90e6c9bc88e8219e,0b88a3aa0751a3accc5cadec90e6c9bc88e8219e,"godoc: add alt attr to gopher on main package index

The gopher with a miner hat on /pkg had no alt attribute
so screen readers would announce the image by its filename.
As the image is purely decorative, adding the empty string
as alternative text prevents the image from being announced.

For golang/go#22171

Change-Id: Ib214f296d3d9f9084c44d4e33d1cbe432f2183ed
Reviewed-on: https://go-review.googlesource.com/69130
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
dmitshur,2017-10-05 02:43:55,https://api.github.com/repos/golang/tools/git/commits/ebae2dcdbabadfdb9880a627481eaf0079a08767,ebae2dcdbabadfdb9880a627481eaf0079a08767,"go/vcs: reject update of VCS inside VCS

Manually apply same change as CL 68110 did for cmd/go/internal/get,
but for golang.org/x/tools/go/vcs, to help keep them in sync.

Updates golang/go#22125.
Helps golang/go#11490.

Change-Id: I255f7a494d9572389fc8dc8ce96891b6fcc214a0
Reviewed-on: https://go-review.googlesource.com/68352
Reviewed-by: Russ Cox <rsc@golang.org>"
andybons,2017-10-04 20:10:08,https://api.github.com/repos/golang/tools/git/commits/bbddea47c314db1df8088f531ab0355915c9b564,bbddea47c314db1df8088f531ab0355915c9b564,"godoc: fix error with gcsBaseURL not being defined

Change-Id: I508209c3bad67b791ee8c162bd4df448f9b84bef
Reviewed-on: https://go-review.googlesource.com/68270
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
kevinburke,2017-07-19 04:03:19,https://api.github.com/repos/golang/tools/git/commits/68e087e2a5786de2c035ed544b1c5a42e31f1933,68e087e2a5786de2c035ed544b1c5a42e31f1933,"README: switch to Markdown and add links

Move the README to README.md so Gerrit can render it; currently
Gerrit only renders files named exactly ""README.md"" (for example at
https://go.googlesource.com/go).

Add more links to the README explaining how to file issues,
how to submit code changes, where to download the code to and
how to get it. Hopefully this should help people who go to
https://go.googlesource.com/tools or https://github.com/golang/tools
figure out how to get started with development.

Change-Id: I778202d9759df5cf79e86b8524046e108aa3db3d
Reviewed-on: https://go-review.googlesource.com/49852
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2017-08-29 21:31:23,https://api.github.com/repos/golang/tools/git/commits/aebcdfcd021159d208f37cb89f7cbbf6bc3bf619,aebcdfcd021159d208f37cb89f7cbbf6bc3bf619,"godoc: use Google’s CDN edge cache to serve downloads

This increases reliability and performance of downloads
across locales.

Change-Id: I619f986496dea57e1ee5e8150e31b2a6f8d8dde7
Reviewed-on: https://go-review.googlesource.com/60090
Reviewed-by: Chris Broadfoot <cbro@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
andybons,2017-09-01 15:45:22,https://api.github.com/repos/golang/tools/git/commits/3b1faeda9afbcba128c2d794b38ffe7982141139,3b1faeda9afbcba128c2d794b38ffe7982141139,"imports: fix +build tags to exclude syscall deps on appengine

The following tag

// +build linux,!appengine darwin

Translated to (linux AND !appengine) OR (darwin)

Causing issues on darwin when attempting to run dev_appserver.

Change this to always exclude these files from appengine builds.

Change-Id: Ifd63a884747001797d0b0e828f0c9c391bc7c73c
Reviewed-on: https://go-review.googlesource.com/60911
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
martisch,2017-09-01 07:23:47,https://api.github.com/repos/golang/tools/git/commits/421c33e67890c689ba1a61e5201f789b88b26e83,421c33e67890c689ba1a61e5201f789b88b26e83,"godoc: update out of sync static.go

Replace references to Share by GoogleCN.

Fixes golang/go#21725

Change-Id: I6db4aa282cca7c104cbe34b40d152aa53ce07280
Reviewed-on: https://go-review.googlesource.com/60851
Run-TryBot: Martin Möhrmann <moehrmann@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
carlmjohnson,2017-08-30 14:02:37,https://api.github.com/repos/golang/tools/git/commits/e00c182679a043c63cd52172ee2d9d3d8ad22e26,e00c182679a043c63cd52172ee2d9d3d8ad22e26,"present: Scale down slides on smaller displays

On mobile and tablets, it was very difficult to view slides because the
slides were not designed to be smaller than 1250x750.

This adds a function to the JS that uses CSS scaling to make the slides
fit on smaller displays.

Fixes golang/go#21643

Change-Id: I68e9e2c1274aaf6396bf01d19ca023cddf76e2ec
Reviewed-on: https://go-review.googlesource.com/60270
Reviewed-by: Andrew Bonventre <andybons@golang.org>
Reviewed-by: Francesc Campoy Flores <campoy@golang.org>
Reviewed-by: Rob Pike <r@golang.org>
Run-TryBot: Francesc Campoy Flores <campoy@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
andybons,2017-08-29 20:28:01,https://api.github.com/repos/golang/tools/git/commits/2d19ab38faf14664c76088411c21bf4fafea960b,2d19ab38faf14664c76088411c21bf4fafea960b,"godoc: hide link to blog in header in CN

Change-Id: I952ce003edecdd62179a8dfbc3c0e56f78eecfb1
Reviewed-on: https://go-review.googlesource.com/60071
Reviewed-by: Andrew Bonventre <andybons@golang.org>
Run-TryBot: Andrew Bonventre <andybons@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
griesemer,2017-08-25 14:08:19,https://api.github.com/repos/golang/tools/git/commits/1736caf17f29e06c0475c0d334e921f1d96a6598,1736caf17f29e06c0475c0d334e921f1d96a6598,"present: fix link in documentation

Change-Id: I53e2e9009eebdc38a6f6f4f639a1bd7e14ccf188
Reviewed-on: https://go-review.googlesource.com/59010
Reviewed-by: Kevin Burke <kev@inburke.com>
Reviewed-by: Rob Pike <r@golang.org>"
RaduBerinde,2017-08-05 03:37:51,https://api.github.com/repos/golang/tools/git/commits/1807494da808122833b9bd8e3e5fa179ef237d41,1807494da808122833b9bd8e3e5fa179ef237d41,"x/tools/container/intsets: add LowerBound

Fixes golang/go#21310.

Change-Id: Id3f23a66b9889a5087c1f83e7d672d14c41a59e3
Reviewed-on: https://go-review.googlesource.com/53432
Reviewed-by: Alan Donovan <adonovan@google.com>"
RaduBerinde,2017-08-05 01:38:32,https://api.github.com/repos/golang/tools/git/commits/43e94ff2028def3d10b2a2159622f59510ea75a1,43e94ff2028def3d10b2a2159622f59510ea75a1,"x/tools/container/intsets: use root block

The root block was used as a sentinel. This means we always need to
allocate a second block on the heap, even if the set has a few small
elements.

We now use the root block: it is always the block with the smallest
offset. The logic becomes very messy if there is no sentinel; to avoid
this we still use a sentinel (a special singleton block) and return it
in when appropriate in the first, last, next wrappers.

Also adding some benchmarks and making some optimizations:

name                           old time/op    new time/op    delta
Popcount-4                       2.18ns ± 1%    2.21ns ± 1%    +1.47%
InsertProbeSparse_2_10-4         76.2ns ±23%    37.2ns ± 1%   -51.21%
InsertProbeSparse_10_10-4         240ns ±15%     162ns ± 4%   -32.58%
InsertProbeSparse_10_1000-4       419ns ± 4%     371ns ±19%   -11.43%
InsertProbeSparse_100_100-4      2.30µs ± 1%    1.93µs ± 1%   -16.08%
InsertProbeSparse_100_10000-4    2.12µs ± 3%    2.07µs ± 1%    -2.11%
UnionDifferenceSparse-4           165µs ±16%     170µs ± 9%      ~
UnionDifferenceHashTable-4        310µs ±10%     291µs ±17%      ~
AppendTo-4                       11.0µs ± 0%    11.0µs ± 0%    -0.35%

name                           old alloc/op   new alloc/op   delta
Popcount-4                       0.00B ±NaN%    0.00B ±NaN%      ~
InsertProbeSparse_2_10-4          64.0B ± 0%     0.0B ±NaN%  -100.00%
InsertProbeSparse_10_10-4         64.0B ± 0%     0.0B ±NaN%  -100.00%
InsertProbeSparse_10_1000-4        256B ± 0%      192B ± 0%   -25.00%
InsertProbeSparse_100_100-4       64.0B ± 0%     0.0B ±NaN%  -100.00%
InsertProbeSparse_100_10000-4      256B ± 0%      192B ± 0%   -25.00%
UnionDifferenceSparse-4          59.4kB ± 0%    59.2kB ± 0%    -0.32%
UnionDifferenceHashTable-4        138kB ± 0%     138kB ± 0%      ~
AppendTo-4                       0.00B ±NaN%    0.00B ±NaN%      ~

name                           old allocs/op  new allocs/op  delta
Popcount-4                        0.00 ±NaN%     0.00 ±NaN%      ~
InsertProbeSparse_2_10-4           1.00 ± 0%     0.00 ±NaN%  -100.00%
InsertProbeSparse_10_10-4          1.00 ± 0%     0.00 ±NaN%  -100.00%
InsertProbeSparse_10_1000-4        4.00 ± 0%      3.00 ± 0%   -25.00%
InsertProbeSparse_100_100-4        1.00 ± 0%     0.00 ±NaN%  -100.00%
InsertProbeSparse_100_10000-4      4.00 ± 0%      3.00 ± 0%   -25.00%
UnionDifferenceSparse-4             928 ± 0%       925 ± 0%    -0.32%
UnionDifferenceHashTable-4          271 ± 0%       271 ± 0%      ~
AppendTo-4                        0.00 ±NaN%     0.00 ±NaN%      ~

Fixes golang/go#21311.

Change-Id: Ie472a2afa269c21cb33b22ffdac8dd2594b816ac
Reviewed-on: https://go-review.googlesource.com/53431
Reviewed-by: Alan Donovan <adonovan@google.com>"
haya14busa,2017-03-01 08:02:44,https://api.github.com/repos/golang/tools/git/commits/84a35ef54dff3c5596983e180ec10919fc432242,84a35ef54dff3c5596983e180ec10919fc432242,"go/ast/astutil: new third-party imports shouldn't go in the std group

Before this change, astutil would only do a prefix match of a new import
with all the existing ones, to try to place it in the correct group. If
none was found, the new import would be placed at the beginning of the
first import group.

This works well for new std imports, but it doesn't work well for new
third-party packages that don't share any prefix with any of the
existing imports.

Example:

	import (
		""time""

		""github.com/golang/snappy""
	)

When adding ""golang.org/x/sys/unix"" with astutil.AddImport, the import
is inserted as follows:

	import (
		""golang.org/x/sys/unix""
		""time""

		""github.com/golang/snappy""
	)

And goimports reorganizes the imports to separate std and third-party
packages:

	import (
		""time""

		""golang.org/x/sys/unix""

		""github.com/golang/snappy""
	)

We usually don't want to introduce a new import group; in most cases,
the desired behavior is separating std from third-party packages.

With this CL, new imports that don't share prefix with any existing ones
will be placed with the first group of third-party imports, if any
exist. If no third-party import group exists, a new one will be added.
In the case of our example above, this will be the new outcome:

	import (
		""time""

		""github.com/golang/snappy""
		""golang.org/x/sys/unix""
	)

Fixes golang/go#19190.

Change-Id: Id4630015c029bd815234a6c8726cb97f4af16f1c
Reviewed-on: https://go-review.googlesource.com/37552
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
dmitshur,2017-05-22 20:11:25,https://api.github.com/repos/golang/tools/git/commits/5831d16d18029819d39f99bdc2060b8eff410b6b,5831d16d18029819d39f99bdc2060b8eff410b6b,"cmd/callgraph: fix ""import path of the enclosing package"" example in usage

Caller is *ssa.Function. Its Pkg field is *ssa.Package. But ssa.Package
struct doesn't contain either field or method named Object.

So one gets the following error:

	$ callgraph -format '{{.Caller.Pkg.Object.Path}} -> {{.Callee.Pkg.Object.Path}}' \
	    $(go env GOROOT)/src/net/http/triv.go | sort | uniq
	callgraph: template: -format:1:9: executing ""-format"" at <.Caller.Pkg.Object.P...>: can't evaluate field Object in type *ssa.Package

ssa.Package contains Pkg field:

	Pkg     *types.Package    // the corresponding go/types.Package

types.Package contains Path() method that returns the package path.

That appears to be the right way to get the ""import path of the
enclosing package"" with the current x/tools/go/ssa API.

Fixes golang/go#20459.

Change-Id: I3cb7b61b767148f5c771d57f8f5e7e6ab20aea87
Reviewed-on: https://go-review.googlesource.com/43812
Reviewed-by: Avelino <t@avelino.xxx>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianlancetaylor,2017-08-07 23:04:23,https://api.github.com/repos/golang/tools/git/commits/f03b3350b7d6cb09e4221e7f2ecffaf41f89fce1,f03b3350b7d6cb09e4221e7f2ecffaf41f89fce1,"godoc: don't try to follow all symlinks

Revert https://golang.org/cl/45096.

Original change description:
    godoc: follow symbolic links to folders in GOROOT

    Directory walking in godoc relies on ReadDir which returns the result
    of os.Lstat.

    Instead make the the OS VFS's ReadDir use os.Stat on symlinks before
    returning.

Updates golang/go#15049
Fixes golang/go#21061

Change-Id: Ieaa7923d85842f3da5696a7f46134d16407dae66
Reviewed-on: https://go-review.googlesource.com/53634
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
Merovius,2017-08-05 17:29:30,https://api.github.com/repos/golang/tools/git/commits/0f5d61c4c19cce89dd1354f5d5a97e14bb02d3d2,0f5d61c4c19cce89dd1354f5d5a97e14bb02d3d2,"imports: print dir of candidates in addition to import path

The import path is ambiguous in the presence of vendoring (e.g. golang/go#20610)

Change-Id: I22f372b233b8554e3d9210b383a7df7a6a0f3eee
Reviewed-on: https://go-review.googlesource.com/53470
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2017-08-03 22:01:02,https://api.github.com/repos/golang/tools/git/commits/a237aba5f578100f4f8419bbda73189b8e6dbae5,a237aba5f578100f4f8419bbda73189b8e6dbae5,"godoc: fix out-of-bounds panic when serving top-level files

Change-Id: I0ba84bac0c97715c0bc66fdc4c33678341ef140c
Reviewed-on: https://go-review.googlesource.com/53151
Reviewed-by: Chris Broadfoot <cbro@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
andybons,2017-08-02 20:37:59,https://api.github.com/repos/golang/tools/git/commits/4e70a1b26a7875f00ca1916637a876b5ffaeec59,4e70a1b26a7875f00ca1916637a876b5ffaeec59,"godoc: add GoogleCN property to pages

Use that property to determine whether to show share functionality
or link to sites that are blocked in mainland China.

This change requires https://go-review.googlesource.com/c/52872

Change-Id: I47327f9dbd2624206564fa99eb1cc6a10b4f46db
Reviewed-on: https://go-review.googlesource.com/52873
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
rakyll,2017-08-01 20:19:14,https://api.github.com/repos/golang/tools/git/commits/fcc44a6330868f7bdb7285effa1a0666eede46ac,fcc44a6330868f7bdb7285effa1a0666eede46ac,"cmd/getgo: add a user-agent to download requests

Change-Id: Ic8fa61e53e2d06a02b06b685bd1082423df00825
Reviewed-on: https://go-review.googlesource.com/52530
Run-TryBot: Jaana Burcu Dogan <jbd@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Chris Broadfoot <cbro@golang.org>
Reviewed-by: Andrew Bonventre <andybons@golang.org>"
bradfitz,2017-08-01 17:22:09,https://api.github.com/repos/golang/tools/git/commits/3fd990c6be325a4f9f9a82b6b4951b1393e90fff,3fd990c6be325a4f9f9a82b6b4951b1393e90fff,"cmd/tip: fix the build

https://golang.org/cl/52390 was submitted too early with failing trybots.

This fixes it, hiding the cloud.google.com stuff behind a build tag,
used by the Dockerfile but not the Go build system.

Change-Id: I66c6b40d4b06bf6c763f3ab221c7997856bfc910
Reviewed-on: https://go-review.googlesource.com/52470
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Jessie Frazelle <me@jessfraz.com>"
bradfitz,2017-08-01 05:59:20,https://api.github.com/repos/golang/tools/git/commits/d07a458d9a550b2c6e4a77ff38125a8fcd237f78,d07a458d9a550b2c6e4a77ff38125a8fcd237f78,"cmd/tip: add a cert cache, clean up Kubernetes config, use update-deps

Fixes expired cert issue too, either by virtue of newer autocert, or
that we're no longer hitting some LetsEncrypt rate limit.

But we have a cache now at least, so we should be nicer to LetsEncrypt
when the process dies. I did see some process crashes (old?) in the
logs. So maybe we were crashing and re-hitting LE often.

Verified that the cert now expires:
    Sunday, October 29, 2017 at 9:57:00 PM Pacific
and that it's cached in GCS.

Fixes golang/go#21251

Change-Id: I3def551ae8eef5df0ec7c51927c4d4bb52cd7a6a
Reviewed-on: https://go-review.googlesource.com/52390
Reviewed-by: Chris Broadfoot <cbro@golang.org>
Reviewed-by: Jessie Frazelle <me@jessfraz.com>
Run-TryBot: Jessie Frazelle <me@jessfraz.com>"
rakyll,2017-07-29 19:51:58,https://api.github.com/repos/golang/tools/git/commits/9badcbe49be523255546b669968041d707ece12e,9badcbe49be523255546b669968041d707ece12e,"cmd/getgo: prompt warning if an earlier installation exists

There is nothing else we can do other than just showing a
message that user need to remove it from their PATH not
to conflict with the current installation.

Fixes #21217.

Change-Id: Ie65385f4d536d5bb789387ba0229f54f2ee793f0
Reviewed-on: https://go-review.googlesource.com/51930
Run-TryBot: Jaana Burcu Dogan <jbd@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Kevin Burke <kev@inburke.com>"
andybons,2017-07-31 20:04:46,https://api.github.com/repos/golang/tools/git/commits/6fdd948b8189c73f33b89f4fafb3d1275db66b89,6fdd948b8189c73f33b89f4fafb3d1275db66b89,"godoc: remove disabled admin code

Change-Id: If3e2264b874c7a5447929888fed0ce6ad61f3475
Reviewed-on: https://go-review.googlesource.com/52291
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
broady,2017-07-31 18:02:19,https://api.github.com/repos/golang/tools/git/commits/f2b3bb0049976dc77ab5211f90f5c5e9f1d5b4c1,f2b3bb0049976dc77ab5211f90f5c5e9f1d5b4c1,"cmd/getgo: fix builds

A couple fixes:

* Disable integration tests in short mode.
* Remove import of ""google.golang.org/appengine"" package. App Engine has
two ways to create an app: as a main package and calling
appengine.Main(), and as any regular Go package with handlers registered
in init().

Change-Id: Ib416111786c1c86cf428d91c60dc406c251d3ca1
Reviewed-on: https://go-review.googlesource.com/52211
Run-TryBot: Chris Broadfoot <cbro@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Jaana Burcu Dogan <jbd@google.com>"
rakyll,2017-07-29 19:25:26,https://api.github.com/repos/golang/tools/git/commits/001b4ec8192fbc230137936197bb952603d53f2a,001b4ec8192fbc230137936197bb952603d53f2a,"cmd/getgo: have consistent messages

Currently, we output:

The latest go version is go1.8.3, install that? Y/n [Y]: Y
Download go version go1.8.3 to /Users/jbd/.go? Y/n [Y]: Y

Change-Id: I4fa72f2066259b75d3349487dae5bdced9fdd8a2
Reviewed-on: https://go-review.googlesource.com/51910
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
rakyll,2017-07-29 19:57:38,https://api.github.com/repos/golang/tools/git/commits/29518d98f4f8f3676493a890e09e78007b6dcded,29518d98f4f8f3676493a890e09e78007b6dcded,"cmd/getgo: display that -i stands for interactive mode

Change-Id: Ia6d8b0e9b2a355d2c4b41634fd51de51187be833
Reviewed-on: https://go-review.googlesource.com/51931
Reviewed-by: Kevin Burke <kev@inburke.com>"
andybons,2017-07-31 16:13:08,https://api.github.com/repos/golang/tools/git/commits/5724bdc2fde1ae49ef1d4adfc4971a092333b6dc,5724bdc2fde1ae49ef1d4adfc4971a092333b6dc,"x/tools/godoc: fix redirect to Gerrit

Redirects to /r/NNNN broke due to crbug.com/gerrit/6888.
Alternative URLs are available in the meantime: /NNNN and /c/NNNN.
This change uses the /NNNN format.

Fixes golang/go#21235

Change-Id: Ie30e01bedd7a8277aedd4070b5f82a754521ed03
Reviewed-on: https://go-review.googlesource.com/52150
Reviewed-by: Kevin Burke <kev@inburke.com>"
broady,2017-07-25 21:46:40,https://api.github.com/repos/golang/tools/git/commits/ac1e4b1998e6a311e006d9629b9283295dee36a3,ac1e4b1998e6a311e006d9629b9283295dee36a3,"cmd/getgo: initial commit

Initial commit of getgo, a ""one-line installer"".

Example use from bash:

  curl -LO https://get.golang.org/$(uname)/go_installer && chmod +x go_installer && ./go_installer && rm go_installer

It's comprised of two parts:

cmd/getgo/server: an App Engine application that redirects users to an
appropriate installer based on the request path, which identifies the
user's operating system. It's deployed to get.golang.org.

cmd/getgo: a cross-compiled binary that does the heavy lifting of
downloading and installing the latest Go version (including setting up
the environment) to the user's system. The installers are served from
the golang GCS bucket.

Currently supported systems:
  linux, darwin, windows / amd64, 386

Authored by Jess Frazelle, Steve Francia, Chris Broadfoot.

Change-Id: I615de86e198d3bd93e418fa23055d00ddbdd99fb
Reviewed-on: https://go-review.googlesource.com/51115
Reviewed-by: Jaana Burcu Dogan <jbd@google.com>"
mdempsky,2017-07-17 21:44:42,https://api.github.com/repos/golang/tools/git/commits/3da34b1b520a543128e8441cd2ffffc383111d03,3da34b1b520a543128e8441cd2ffffc383111d03,"cmd/gorename: disable TestGeneratedFiles for !cgo builds

Fixes golang/go#21055.

Change-Id: I126cef4496c15424048e39b2af111c95580b90fb
Reviewed-on: https://go-review.googlesource.com/49390
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Reviewed-by: Chris Broadfoot <cbro@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
theckman,2017-07-17 02:34:44,https://api.github.com/repos/golang/tools/git/commits/807424b52bbede51990d57ed6e388f9ccc283770,807424b52bbede51990d57ed6e388f9ccc283770,"cmd/go-contrib-init: exit with an error if package install fails

During the first run of `go-contrib-init` it tries to install the
golang.org/x/review/git-codereview package using `go get`. If this command were
to fail, we would check for the error and log that the command failed to
succeed. However, when failure occurred we would only log the error and not
interrupt the flow of the program. This would cause the program to continue with
the assumption that git-codereview had been installed correctly.

This change enhances the `go-contrib-init` command to exit with a bad status
code, after logging the failure, if installing git-codereview fails.

Fixes golang/go#21040

Change-Id: Ie01d78557d54285001db61faafbb409888b2893c
Reviewed-on: https://go-review.googlesource.com/49151
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2017-07-17 02:24:57,https://api.github.com/repos/golang/tools/git/commits/478150226d2cb1ef545b87f19b4a960008737415,478150226d2cb1ef545b87f19b4a960008737415,"imports: update zstdlib to Go 1.9

We're at beta 2 already, so the API is likely stable.
If anything gets rolled back, we can update imports again.

Change-Id: I87e0adde062e45cab16e2bee2f929c1ac1bb828d
Reviewed-on: https://go-review.googlesource.com/49150
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
freeformz,2017-06-29 00:57:38,https://api.github.com/repos/golang/tools/git/commits/41b76ca51cdffeebf7db1cc29b424a2e8b0df67b,41b76ca51cdffeebf7db1cc29b424a2e8b0df67b,"present: Set the background using CSS

This allowed me to better match the background image to the size of
the slides.

Change-Id: Ieaae93cd78582a3059ed6c3e64e740dea9088af5
Reviewed-on: https://go-review.googlesource.com/47130
Reviewed-by: Andrew Gerrand <adg@golang.org>
Run-TryBot: Andrew Gerrand <adg@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
flowchartsman,2017-07-15 20:21:41,https://api.github.com/repos/golang/tools/git/commits/d78e5d2552f0118165e0525719c6ab6b9eaebc4e,d78e5d2552f0118165e0525719c6ab6b9eaebc4e,"refactor/eg: already documented; remove TODO

Change-Id: I7166006a3a922505a5f0a619bd98c0a1505831bc
Reviewed-on: https://go-review.googlesource.com/48981
Reviewed-by: Leo Rudberg <ljr@google.com>
Reviewed-by: Ross Light <light@google.com>
Run-TryBot: Ross Light <light@google.com>"
aclements,2017-07-15 16:30:38,https://api.github.com/repos/golang/tools/git/commits/7a4327eb7a5941ff1c0852b894d24631baf390fc,7a4327eb7a5941ff1c0852b894d24631baf390fc,"cmd/go-contrib-init: don't crash from src/golang.org/x

If go-contrib-init is executed from the src/golang.org/x directory (as
opposed to a sub-directory), it crashes with an index out-of-bounds.

Fix this by including the trailing slash in the inspected path prefix
so we never slice more than what we know is in the string.

Change-Id: Ibbb74759c2ba839972de34a8ffb28b6cfb6825e2
Reviewed-on: https://go-review.googlesource.com/48690
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
medwards,2017-06-08 20:59:08,https://api.github.com/repos/golang/tools/git/commits/4ce273956ad94783559177dfe13ab1864ca3359c,4ce273956ad94783559177dfe13ab1864ca3359c,"godoc: follow symbolic links to folders in GOROOT

Directory walking in godoc relies on ReadDir which returns the result
of os.Lstat.

Instead make the the OS VFS's ReadDir use os.Stat on symlinks before
returning.

Fixes golang/go#15049

Change-Id: I34d17ca0027b0245f5ef434a000e5a3fe2af11cf
Reviewed-on: https://go-review.googlesource.com/45096
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kevinburke,2017-07-13 03:43:35,https://api.github.com/repos/golang/tools/git/commits/6f1996fdfe16ee1642cf6f4876ed3648e2f66969,6f1996fdfe16ee1642cf6f4876ed3648e2f66969,"cmd/go-contrib-init: better GOPATH checkout error message

Modify the error message to provide more context if the user is in the
wrong directory. (The default Terminal.app does not do a great job of
showing what directory you are currently in).

Change-Id: Iafcbbd2070ca968863120fb8c4bc15609475cda2
Reviewed-on: https://go-review.googlesource.com/48232
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
LOZORD,2017-07-12 23:47:01,https://api.github.com/repos/golang/tools/git/commits/7a94893dc32f250be4cb02e1798cf64d25306886,7a94893dc32f250be4cb02e1798cf64d25306886,"cmd/eg: Gofmt eg's dry-run output.

The content of the dry-run and the actual (file-editing) run should now
be the same.

Change-Id: If89f85838f7f53f14ffa4e2b6a425507835dda62
Reviewed-on: https://go-review.googlesource.com/48210
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kevinburke,2017-07-13 03:39:45,https://api.github.com/repos/golang/tools/git/commits/76622760f034591c2a88cf900d664078099649c7,76622760f034591c2a88cf900d664078099649c7,"cmd/go-contrib-init: match subdomain-less .gitcookies file

My `.gitcookies` file starts with "".googlesource.com"", which
errored because it did not match ""go.googlesource.com"" or
""go-review.googlesource.com"". Fix this by optionally matching on
""go.googlesource.com"" or "".googlesource.com"".

Fixes golang/go#20992.

Change-Id: I29d3c0b1e958382495a90502f280bdb52868c2c7
Reviewed-on: https://go-review.googlesource.com/48230
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
hirochachacha,2017-06-09 12:59:18,https://api.github.com/repos/golang/tools/git/commits/bce9606b3f617bc6280aab6abbf25962c23f398d,bce9606b3f617bc6280aab6abbf25962c23f398d,"cmd/bundle: include non-associated comments

https://golang.org/cl/45117 doesn't handle comments which don't
belong to any declarations. This CL addresses it.

Fixes golang/go#20627

Change-Id: I81c7cdc070efc6cb9e9f38101d7b2b8909916ba6
Reviewed-on: https://go-review.googlesource.com/45190
Reviewed-by: Alan Donovan <adonovan@google.com>"
suzmue,2017-07-04 02:29:01,https://api.github.com/repos/golang/tools/git/commits/9dc2b714a0fcefe426bc2c9dd9ec0894bed5a5bf,9dc2b714a0fcefe426bc2c9dd9ec0894bed5a5bf,"cmd/gorename: add tests that run successfully

Set the env variable to only include the correct gopath in the test.

Fixes golang/go#20805

Change-Id: I496ed5c60278e508016f915cf53a115cc3c222ae
Reviewed-on: https://go-review.googlesource.com/47410
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2017-07-07 16:16:50,https://api.github.com/repos/golang/tools/git/commits/6e57528ade4c045edb91dac8af1c4a3ab30fa738,6e57528ade4c045edb91dac8af1c4a3ab30fa738,"imports: fix reading from stdin on Windows

Don't panic when reading from stdin on Windows. This is a regression
from https://golang.org/cl/43454

Also fix some weird behavior with stdin processing I noticed during
reviewing the code: don't allow the -w (write) flag, and adust the
filename shown with the -d (diff) flag.

Fixes golang/go#20941

Change-Id: I73d0a1dc74c919238a3bb72823585bbf1b7daba1
Reviewed-on: https://go-review.googlesource.com/47810
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Jones <rbjones@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2017-07-06 18:30:37,https://api.github.com/repos/golang/tools/git/commits/72ed06fbe2cf37c56ab4877b06571d2e7620627b,72ed06fbe2cf37c56ab4877b06571d2e7620627b,"godoc: include dir listing in rate limit, log dir reading errors

Updates golang/go#14252

Change-Id: I3ce2a410708900f5c80d15e722b410855fd9c571
Reviewed-on: https://go-review.googlesource.com/47651
Reviewed-by: Dmitri Shuralyov <shurcool@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
navytux,2017-07-03 14:18:56,https://api.github.com/repos/golang/tools/git/commits/c2d03f470b3e28d9e9eb89e22c8023f2642e802c,c2d03f470b3e28d9e9eb89e22c8023f2642e802c,"go/loader: Fix thinko in FindPackage hook signature

(*build.Context).Import has signature of

	(ctx, importPath, fromDir, mode)

not

	(ctx, fromDir, importPath, mode)

and the loader actually uses the first version.

The thinko was introduced in d6e83e53 (go/loader: changes for vendor
support; CL 18053) and was possible because importPath and fromDir both
have the same type string.

Fix it.

Change-Id: I52deaec6d141846b8a495835b121c1bdc2864215
Reviewed-on: https://go-review.googlesource.com/47343
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2017-06-29 19:41:28,https://api.github.com/repos/golang/tools/git/commits/1b3bb8de7d39fe135abc674c1e6d642cce854d4a,1b3bb8de7d39fe135abc674c1e6d642cce854d4a,"godoc/dl: change OS X to macOS, clarify WinXP requirement

Change-Id: Ib90881aef9c1bec0339dbbc38cbb320d5b731d97
Reviewed-on: https://go-review.googlesource.com/47251
Reviewed-by: Andrew Bonventre <andybons@google.com>"
bradfitz,2017-06-28 06:26:50,https://api.github.com/repos/golang/tools/git/commits/9be3b7cbc7ccd19baaa3b7704c22f57db5ebbdf2,9be3b7cbc7ccd19baaa3b7704c22f57db5ebbdf2,"godoc/dl: update some pretty GOARCH strings

Fixes golang/go#19082

Change-Id: Id0e985eeff543ad24ff969ff8c94e086a7bc9303
Reviewed-on: https://go-review.googlesource.com/46916
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
zchee,2017-06-22 07:15:10,https://api.github.com/repos/golang/tools/git/commits/e6cb469339aef5b7be0c89de730d5f3cc8e47e50,e6cb469339aef5b7be0c89de730d5f3cc8e47e50,"imports: fix LocalPrefix document prefix

golint suggested:
  comment on exported var LocalPrefix should be of the form ""LocalPrefix ...""

Change-Id: I1d2f92ba76e3c091440f676936dbb1fc1ce07f3a
Reviewed-on: https://go-review.googlesource.com/46432
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2017-06-22 13:35:10,https://api.github.com/repos/golang/tools/git/commits/da9759ca307d8a24c0bedce3a771d3cb79b96cbd,da9759ca307d8a24c0bedce3a771d3cb79b96cbd,"cmd/bundle: fix nil dereference panic

In the loader API, (*Config).Import, like go/build, accepts relative
paths such as ""."", but (*Program).Package requires the exact path of a
loaded package.  So, to find the package identified by ""."" we must
look at the set of packages actually loaded, which in this scenario is
guaranteed to be a singleton.

(This is a definite weakness of the loader API.  In the more general
case where two or more packages are imported, it's tricky to correlate
the calls to Import with the package(s) each call actually loads.)

Fixes golang/go#20751

Change-Id: I925e969c9b4f4d6b6344c16f156b47857436d70a
Reviewed-on: https://go-review.googlesource.com/46414
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
suzmue,2017-06-14 22:37:15,https://api.github.com/repos/golang/tools/git/commits/1ab5277e8379405f090b5901d5b1ce812e172969,1ab5277e8379405f090b5901d5b1ce812e172969,"refactor/rename: fail cleanly when attempting to rename cgo files

Previous implementation will overwrite files the import ""C"" with the
cgo preprocessing and renaming. Rename will now emit an error when
rename must edit files that import ""C"". Will also emit more useful
error when using -offset in a ""C"" importing file.

Fixes golang/go#17839

Change-Id: I072100b22197ec145b56d727feca58be7529e359
Reviewed-on: https://go-review.googlesource.com/45930
Reviewed-by: Alan Donovan <adonovan@google.com>"
mattn,2017-06-22 01:34:33,https://api.github.com/repos/golang/tools/git/commits/545ce0dcddd1970fecf855a7d881cd83a96a10f8,545ce0dcddd1970fecf855a7d881cd83a96a10f8,"tools: handle paths like ~/ or $HOME/.

tilde should be located at the beginning of line.

Change-Id: I271ba5220da3c483838d1741d908755aee8e081e
Reviewed-on: https://go-review.googlesource.com/46430
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
zchee,2017-06-21 05:51:24,https://api.github.com/repos/golang/tools/git/commits/cd6e398dae38fb8b0b57f221b13c4b75c0a53fb9,cd6e398dae38fb8b0b57f221b13c4b75c0a53fb9,"cmd/git-contrib-init: support http.cookiefile config for gitcookies

Change-Id: I097905122e1cb7298c31c330731f0fc3c6fc9b59
Reviewed-on: https://go-review.googlesource.com/46235
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
zchee,2017-06-21 04:53:24,https://api.github.com/repos/golang/tools/git/commits/601a54bfa356e683e439b3ec9c95d48217d0ccce,601a54bfa356e683e439b3ec9c95d48217d0ccce,"cmd/go-contrib-init: fix get GOPATH env logic

Go runtime now uses user homedir+go (i.e. $HOME/go) if GOPATH
environment variable is not set.

Change-Id: I26d90e07976a5311ea19de8a6e2c63830b802882
Reviewed-on: https://go-review.googlesource.com/46234
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2017-06-19 17:33:23,https://api.github.com/repos/golang/tools/git/commits/63c6481f3be3d4c29183574fa76516c4e7f54c6e,63c6481f3be3d4c29183574fa76516c4e7f54c6e,"go/loader: fix a data race

The loader was calling (*types.Checker).Files on the ""unsafe"" package,
a global variable.  Even with zero files, this operation is not a no-op
because it sets the package's ""complete"" flag, leading to a data race.
(Because Unsafe.complete is already set at construction, the
race is benign, but is reported by -race nonetheless.)

Fixes golang/go#20718

Change-Id: I5a4f95be5ab4c60ea3b6c2a7fb6f1b67acbf42bc
Reviewed-on: https://go-review.googlesource.com/46071
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
siadat,2016-09-16 12:42:50,https://api.github.com/repos/golang/tools/git/commits/5128de728888ea5cc98be50b4efaabc4d3491274,5128de728888ea5cc98be50b4efaabc4d3491274,"godoc: add links to docs in text and dir pages

Fixes golang/go#17125

Change-Id: I22dd0561cd1c8eb30524797b6c0488d08a65285b
Reviewed-on: https://go-review.googlesource.com/29279
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2017-06-15 21:24:39,https://api.github.com/repos/golang/tools/git/commits/34f7837286c0bd1ea0d50c06fbf585a7090dbd4e,34f7837286c0bd1ea0d50c06fbf585a7090dbd4e,"go/ssa: remove statement with no effect

Change-Id: I1c7958ab16f19fbdc71d2305da3d4afb6e150f73
Reviewed-on: https://go-review.googlesource.com/45934
Reviewed-by: Dmitri Shuralyov <shurcool@gmail.com>"
alandonovan,2017-06-15 01:08:52,https://api.github.com/repos/golang/tools/git/commits/6d30ceaab7ab5caffba4974a61e36d34268756ec,6d30ceaab7ab5caffba4974a61e36d34268756ec,"go/ssa: fix regression in φ-elimination

https://go-review.googlesource.com/37157 introduced a bug that caused
some live φ-nodes to be removed from the CFG.  The cause was that
reachability traversal considered edges only among ""new"" φ-nodes
(those introduced during SSA renaming) but not existing φ-nodes from
&& and || expressions.  The fix is to mark existing phis, and thus
other phis reachable from them, as live.  We also clear the Phi.block
field when eliminating a φ-node.

Also, during reachability, we treat DebugRef instructions as roots
like any other non-Phi instruction.  This eliminates a related known
bug whereby the operand of a DebugRef may be a dead φ.

This change also adds a sanity check that all operands of an SSA value
that are themselves instructions must belong to a block.  The sanity
check would fail 7 times on the standard library without the fix.

Fixes golang/go#19622

Change-Id: If3a897a6a593a17bc3f0f8228d1edf483be7a3d0
Reviewed-on: https://go-review.googlesource.com/45832
Run-TryBot: Dominik Honnef <dominik@honnef.co>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Dominik Honnef <dominik@honnef.co>"
alandonovan,2017-06-15 14:28:26,https://api.github.com/repos/golang/tools/git/commits/365911de24d7d54ce29b6d11ad714e772e3e82ee,365911de24d7d54ce29b6d11ad714e772e3e82ee,"go/ssa: opt: avoid an allocation

In the dom tree traversal, the final child of each node now
inherits the parent's renaming map, reducing garbage.

This reduces allocations by 1.4% and bytes allocated by 2.0% when
building SSA for the entire standard library.

Change-Id: Id19b6d6766b3e0bf32d1db1238eff8a42d11b242
Reviewed-on: https://go-review.googlesource.com/45833
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2017-06-13 22:34:38,https://api.github.com/repos/golang/tools/git/commits/f2cd9d3b518cfa0e287637dd02a895ce2b587f14,f2cd9d3b518cfa0e287637dd02a895ce2b587f14,"cmd/go-contrib-init: fix in-GOPATH check

It's okay to have GOROOT=$HOME/go, GOPATH=$HOME.

That's what I have.

It's just not okay to hack in Go under $GOPATH/src.

Change-Id: I6ae69aceb43970bbdc9631ab090689a153954087
Reviewed-on: https://go-review.googlesource.com/45651
Reviewed-by: Steve Francia <spf@golang.org>"
broady,2017-06-13 22:58:32,https://api.github.com/repos/golang/tools/git/commits/b4e0c5ecfb3125b1fbb235b1d381898d2b2a16d6,b4e0c5ecfb3125b1fbb235b1d381898d2b2a16d6,"cmd/tip: manually scale talks to 1 instance

Disable health checker - it only causes trouble if we're running on one
instance. We'd rather see ""starting up"" than to have nothing served and
the instance killed when it doesn't come up ready in time.

Change-Id: I3396c626f840d606e0fb4a5ec4c0493195fd015f
Reviewed-on: https://go-review.googlesource.com/45654
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2017-06-13 22:59:58,https://api.github.com/repos/golang/tools/git/commits/aca8b28035ebc23a82531a99b123bc3c6e59ce96,aca8b28035ebc23a82531a99b123bc3c6e59ce96,"cmd/tip: log error when fetching metadata

This error was previously ignored. This caused a silent failure when the
meta URL wasn't accessible.

Change-Id: I4020897ac15fec7b60a46277d81a99a6b6447a7d
Reviewed-on: https://go-review.googlesource.com/45655
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2017-06-12 17:22:52,https://api.github.com/repos/golang/tools/git/commits/7d47e840ac8ec63c4a5cd5c900156cad5e6b6a63,7d47e840ac8ec63c4a5cd5c900156cad5e6b6a63,"cmd/goimports: update docs to not imply goimports is superset of gofmt

Change-Id: I098fa50c274d8206b6e2534d647cfae18d6b2703
Reviewed-on: https://go-review.googlesource.com/45390
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2017-06-13 16:13:33,https://api.github.com/repos/golang/tools/git/commits/5d733ef37e81489f2f92255a57b19ead08e97ad7,5d733ef37e81489f2f92255a57b19ead08e97ad7,"godoc: fix crash in -analysis

Fixes golang/go#20641

Change-Id: I499b4b8da2899c4b606ce3eedd30caab57607a85
Reviewed-on: https://go-review.googlesource.com/45570
Reviewed-by: Robert Griesemer <gri@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
kevinburke,2017-06-05 05:26:59,https://api.github.com/repos/golang/tools/git/commits/011098bb9222df9796d1d4c85a8772f0bf39d741,011098bb9222df9796d1d4c85a8772f0bf39d741,"cmd/stress: flush out Usage doc

Provide more context when you run `stress -h` besides just the flags.

Change-Id: I9dbe7ba2b7178dd7a542d8c4c29bf79999a38234
Reviewed-on: https://go-review.googlesource.com/44810
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kazrakcom,2017-05-12 20:54:58,https://api.github.com/repos/golang/tools/git/commits/e011c1062a41d0e2614279f1dc8cf7f1bf6aaac3,e011c1062a41d0e2614279f1dc8cf7f1bf6aaac3,"imports: prefer paths imported by sibling files.

Adds an Imports field to packageInfo with the imports used by sibling
files, and uses it preferentially if it matches a missing import.

Example: if foo/foo.go imports ""local/log"", it's a reasonable assumption
that foo/bar.go will also want ""local/log"" instead of ""log"".

Change-Id: Ifb504ed5e00ff18459f19d8598cc2c94099ae563
Reviewed-on: https://go-review.googlesource.com/43454
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
hirochachacha,2017-06-09 01:48:25,https://api.github.com/repos/golang/tools/git/commits/e4933889654a3d0cd7f3ab2ae7511ce0199b4994,e4933889654a3d0cd7f3ab2ae7511ce0199b4994,"x/tools/cmd/bundle: include comments inside functions

Fixes golang/go#20548

Change-Id: Ieff2323b63308cbc052a2883237520620965cf86
Reviewed-on: https://go-review.googlesource.com/45117
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
griesemer,2017-06-08 21:03:24,https://api.github.com/repos/golang/tools/git/commits/b9ad13c5e80a1725c16bdc3f6ddce507a242ddef,b9ad13c5e80a1725c16bdc3f6ddce507a242ddef,"go/gcexportdata: fix test again (fix older builds)

This time, chose a package that's not changed across several builds.
Follow-up on https://go-review.googlesource.com/45151.

Change-Id: I0b487a45f8b12179b3aa495d852c0b7caa44c921
Reviewed-on: https://go-review.googlesource.com/45154
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
griesemer,2017-06-08 18:18:08,https://api.github.com/repos/golang/tools/git/commits/add5a5203491e33892c3a3d8d6e94ad891d2dc21,add5a5203491e33892c3a3d8d6e94ad891d2dc21,"go/gcexportdata: fix test output (fix build)

Change-Id: Ib9a92c7b7ac09e739177b8c4c16f893dfb5e4420
Reviewed-on: https://go-review.googlesource.com/45151
Reviewed-by: Alan Donovan <adonovan@google.com>"
spf13,2017-06-07 23:57:47,https://api.github.com/repos/golang/tools/git/commits/2a3bccfb1bf676aea1cfefb8eae1c7f4c566d22d,2a3bccfb1bf676aea1cfefb8eae1c7f4c566d22d,"cmd/go-contrib-init: check working dir and autodectect repo

Change-Id: I730216e2954ff591a57314e82ffd7b43d1da8ed4
Reviewed-on: https://go-review.googlesource.com/45084
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kortschak,2017-06-07 23:58:27,https://api.github.com/repos/golang/tools/git/commits/987877771eddef8b4a6f9ee406ce8c9a3462efee,987877771eddef8b4a6f9ee406ce8c9a3462efee,"x/tools/present: fix element number check

Fixes golang/go#20605

Change-Id: Ia87097741b743d9b138f0f16540d601b9525c7de
Reviewed-on: https://go-review.googlesource.com/45110
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2017-06-07 23:44:52,https://api.github.com/repos/golang/tools/git/commits/a7681979548872ff5783d092e7ad87a3a1202512,a7681979548872ff5783d092e7ad87a3a1202512,"cmd/go-contrib-init: add git alias dry run mode, add success message

Updates golang/go#17802

Change-Id: I2b5473bc0539a760c26889497a301808deb5e5ae
Reviewed-on: https://go-review.googlesource.com/45083
Reviewed-by: Steve Francia <spf@golang.org>"
bradfitz,2017-06-07 23:28:22,https://api.github.com/repos/golang/tools/git/commits/16c483b02b3c9045d0a117e3646ed075e9e67e23,16c483b02b3c9045d0a117e3646ed075e9e67e23,"cmd/go-contrib-init: don't assume user is in root directory of git checkout

Updates golang/go#17802

Change-Id: I8eeae42f395dee4eedd17114f10bb56536783089
Reviewed-on: https://go-review.googlesource.com/45082
Reviewed-by: Steve Francia <spf@golang.org>"
bradfitz,2017-06-07 23:16:00,https://api.github.com/repos/golang/tools/git/commits/154c88c09dcddf88ffa77fa8a0a18fcf445252c0,154c88c09dcddf88ffa77fa8a0a18fcf445252c0,"cmd/go-contrib-init: add git-codereview bits

Updates golang/go#17802

Change-Id: Ic5278804203029926dd5a26e571f79aaafb13110
Reviewed-on: https://go-review.googlesource.com/45080
Reviewed-by: Steve Francia <spf@golang.org>"
bradfitz,2017-06-07 22:43:26,https://api.github.com/repos/golang/tools/git/commits/fe66dd2e3eed67947cbb4d7a55e5369a74e58d70,fe66dd2e3eed67947cbb4d7a55e5369a74e58d70,"cmd/go-contrib-init: add some git origin checks

Updates golang/go#17802

Change-Id: I70d30c5ff12837d51d13b5ca7e73be96eb535286
Reviewed-on: https://go-review.googlesource.com/45079
Reviewed-by: Steve Francia <spf@golang.org>"
bradfitz,2017-06-07 22:15:38,https://api.github.com/repos/golang/tools/git/commits/851770f01f04a0a480149de08a871c0378bc3fed,851770f01f04a0a480149de08a871c0378bc3fed,"cmd/go-contrib-init: add start of new tool to help new Go contributors

Updates golang/go#17802

Change-Id: Ieb4be41039d414a3ba6766d98ed95a6154f964f4
Reviewed-on: https://go-review.googlesource.com/45078
Reviewed-by: Steve Francia <spf@golang.org>"
posener,2017-06-02 11:28:38,https://api.github.com/repos/golang/tools/git/commits/92d42b9ff15f625347a13b6aeafd04a33537ce91,92d42b9ff15f625347a13b6aeafd04a33537ce91,"present: return an error for a bad link instead of panic

Change-Id: Ic41b2794268b6399bda01febafb85852f6634198
Reviewed-on: https://go-review.googlesource.com/44690
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2017-06-05 18:04:35,https://api.github.com/repos/golang/tools/git/commits/b62b8c72b8132d85d39147764e7b5780e5cff5fe,b62b8c72b8132d85d39147764e7b5780e5cff5fe,"go/gcexportdata: a command for inspecting gc export data in archive files

Change-Id: I2428b201c49dc441a0023053798f3287902fc370
Reviewed-on: https://go-review.googlesource.com/44861
Reviewed-by: Robert Griesemer <gri@golang.org>"
spenczar,2017-03-22 18:59:57,https://api.github.com/repos/golang/tools/git/commits/2a5864fcfb595b4ee9a7607f1beb25778cf64c6e,2a5864fcfb595b4ee9a7607f1beb25778cf64c6e,"x/tools/go/ssa: Accept struct conversions that ignore tags

This is now allowed in go1.8.

Fixes golang/go#19646.

Change-Id: Iece4fd2a881144bdbe841e0a26ba4348d6b8828e
Reviewed-on: https://go-review.googlesource.com/38452
Reviewed-by: Alan Donovan <adonovan@google.com>
Run-TryBot: Alan Donovan <adonovan@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
fatih,2017-05-28 22:52:52,https://api.github.com/repos/golang/tools/git/commits/bc6db94186c03835daa5c1c679fba599dc1f3b79,bc6db94186c03835daa5c1c679fba599dc1f3b79,"go/ast/astutil: do not merge if import path is last line

DeleteNamedImport assumes the import declaration is in the form of:

    import (
      ""foo""
    )

If an import path is deleted there might be a blank line-sized hole:

    import (

    )

It'll merge the black hole with the last line to change it to:

    import (
    )

However the import declaration might be in the following form as well:

    import (
      ""foo"")

Whic means after deleting the import path, it changes to:

    import (
    )

In this case it still tries to merge the line with a non existing line,
causing token.File.MergeLine to panic.

We fix the issue by checking that the import path line is not the last
line to avoid panicing.

Fixes golang/go#20229

Change-Id: I37537a4eaa83d14db59a2926d7bb14c27167a2e4
Reviewed-on: https://go-review.googlesource.com/44372
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2017-05-15 17:12:53,https://api.github.com/repos/golang/tools/git/commits/bf4b54dc687c73b6ef63de8b8abf0ad3951e3edc,bf4b54dc687c73b6ef63de8b8abf0ad3951e3edc,"Revert ""godoc: use ""IsPredeclared"" of go/doc""

This reverts commit 144c6642b5d832d6c44a53dad6ee61665dd432ce.

Reason for revert: Breaks Go 1.7 and below.

See https://go-review.googlesource.com/c/43473/

Change-Id: I06ff6e9dccb842e29389af6beb67d6cdc217fb98
Reviewed-on: https://go-review.googlesource.com/43496
Reviewed-by: Dmitri Shuralyov <shurcool@gmail.com>"
178inaba,2017-05-13 17:36:24,https://api.github.com/repos/golang/tools/git/commits/144c6642b5d832d6c44a53dad6ee61665dd432ce,144c6642b5d832d6c44a53dad6ee61665dd432ce,"godoc: use ""IsPredeclared"" of go/doc

In the go/doc, the same map as ""predeclared"" is defined.
Instead of the ""predeclared"" map use the ""IsPredeclared"" function
which is an accessor for the go/doc map.

Deleted unnecessary ""predeclared"".

Fixes golang/go#20357

Change-Id: I7fdf42cfeb4440fb490be9380f39035be88f9a5a
Reviewed-on: https://go-review.googlesource.com/43473
Reviewed-by: Kevin Burke <kev@inburke.com>"
178inaba,2017-05-06 19:40:42,https://api.github.com/repos/golang/tools/git/commits/ce1291533bf047e29f9e188b3f697d3a5157d142,ce1291533bf047e29f9e188b3f697d3a5157d142,"godoc: remove the function declaration link

The link of the function declaration part is unnecessary because it points to the same place.
Removed the link of the function declaration part.

""IdentMode"" has been removed since it is no longer used.

Fixes golang/go#20269

Change-Id: I6399899947e46dc84c5432c1d645f6d96b7db4f6
Reviewed-on: https://go-review.googlesource.com/42892
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2017-05-12 16:26:12,https://api.github.com/repos/golang/tools/git/commits/15c7897560d12bc23b2b315916db89daccdaa8e7,15c7897560d12bc23b2b315916db89daccdaa8e7,"go/ssa/interp: fix tests on Go 1.7 and Go 1.8

This mostly reverts commit 1c59bc354db124c4a797df6930a19c7a3cf8008c
(CL 43350) which had fixed Go tip but broken Go 1.7 and Go 1.8
builders.

Change-Id: I4e7bdfafde74c9e730bb870b9db05b663b4f56a3
Reviewed-on: https://go-review.googlesource.com/43391
Reviewed-by: Alan Donovan <adonovan@google.com>"
martisch,2017-05-12 06:21:13,https://api.github.com/repos/golang/tools/git/commits/1c59bc354db124c4a797df6930a19c7a3cf8008c,1c59bc354db124c4a797df6930a19c7a3cf8008c,"go/ssa/interp: add internal/cpu.cpuid to fix short tests

http://golang.org/cl/41476 added the internal/cpu package
to unify cpu feature flag detection in the standard library.

Add a replacement for the assembler function internal/cpu.cpuid
that simulates a x86 cpu with no feature detection capabilities.

Remove bytes.init and strings.init from the external function list
because they do not depend on assembler functions anymore.

Remove hash/crc32.haveSSE42 and math.hasSSE4 because they
have been removed from the go standard library.

Change-Id: Icab6ed3cb13eb14b28d23f2b9c5ae94688f2dc95
Reviewed-on: https://go-review.googlesource.com/43350
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
josharian,2017-04-10 14:18:22,https://api.github.com/repos/golang/tools/git/commits/aaeb897338ad8befb681a567765b40c7052adf5a,aaeb897338ad8befb681a567765b40c7052adf5a,"refactor/rename: add line number to ambiguityError

Updates golang/go#19906

Change-Id: If13c828541cdb3937e5e970dd8add7615d36d866
Reviewed-on: https://go-review.googlesource.com/40171
Reviewed-by: David R. Jenni <david.r.jenni@gmail.com>
Reviewed-by: Robert Griesemer <gri@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
randall77,2017-05-09 19:41:43,https://api.github.com/repos/golang/tools/git/commits/1dbffd0798679c0c6b466e620725135944cfddea,1dbffd0798679c0c6b466e620725135944cfddea,"cmd/toolstash: use ""go env GOROOT"" instead of runtime.GOROOT()

The GOROOT of whatever tool build toolstash is irrelevant. We want
the goroot of the ""go"" command we're testing.

Change-Id: Ie7e11c74cb445ea694d88c743dbc239a55d47864
Reviewed-on: https://go-review.googlesource.com/43033
Run-TryBot: Keith Randall <khr@golang.org>
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
randall77,2017-05-08 22:47:55,https://api.github.com/repos/golang/tools/git/commits/a6971f4c117642c93184cda48ee409aea4f53ada,a6971f4c117642c93184cda48ee409aea4f53ada,"cmd/compilebench: use go command in goroot, not environment

The ""go"" command is a random ""go"" in the environment, not
necessarily the one under test.  Use the go command in the
goroot we're testing.

This CL removes the need to add $GOROOT/bin to your path
before running compilebench.

Change-Id: Ieb7f441f8287105e13446006e73b760d80e51e03
Reviewed-on: https://go-review.googlesource.com/42932
Run-TryBot: Keith Randall <khr@golang.org>
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
surryhill,2017-05-06 12:55:42,https://api.github.com/repos/golang/tools/git/commits/11b386927a86209ac5f9c7c54bf31bb0698be332,11b386927a86209ac5f9c7c54bf31bb0698be332,"present: fix misspelled log message

Change-Id: I959bc4ec6ba4995a1da7d300cf9d3b63e96b1a0e
Reviewed-on: https://go-review.googlesource.com/42817
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
zchee,2017-05-06 08:06:16,https://api.github.com/repos/golang/tools/git/commits/9862c35773a14ca029b7da49c410111ba13830a0,9862c35773a14ca029b7da49c410111ba13830a0,"go/gcexportdata: fix unnecessary plural type definitions of arg

importPath and srcDir are both of string type.

Change-Id: Ia5230bd19ea83bc210cb0b1a50046e4e0ef2accb
Reviewed-on: https://go-review.googlesource.com/42890
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
atetubou,2017-04-30 10:24:11,https://api.github.com/repos/golang/tools/git/commits/15b145e4e3bee8ae65bfd262016b9fa6e144f40b,15b145e4e3bee8ae65bfd262016b9fa6e144f40b,"cmd/goimports: update doc.go for go-mode elisp

go-mode does not use go-mode-load now.
Need to use go-mode-autoloads instead.

Change-Id: I3ee2113b41972a1f700d604ea7a6c2d5b59da8bb
Reviewed-on: https://go-review.googlesource.com/42193
Reviewed-by: Alan Donovan <adonovan@google.com>"
dmitshur,2017-04-27 23:18:25,https://api.github.com/repos/golang/tools/git/commits/2382e3994d48b1d22acc2c86bcad0a2aff028e32,2382e3994d48b1d22acc2c86bcad0a2aff028e32,"go/vcs: allow go get on github.com/ import paths with Unicode letters

Manually apply same change as CL 41822 did for cmd/go/internal/get,
but for golang.org/x/tools/go/vcs, to help keep them in sync.

Updates golang/go#18660.
Helps golang/go#11490.

Change-Id: I6c7759c073583dea771bc438b70f8c2eb7b5ebfb
Reviewed-on: https://go-review.googlesource.com/42017
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
josharian,2017-04-28 02:52:22,https://api.github.com/repos/golang/tools/git/commits/b6d1a163df3764ae6741562027e99e264f80cee9,b6d1a163df3764ae6741562027e99e264f80cee9,"Revert ""cmd/compilebench: update example to use benchcmp instead of benchstat""

This reverts commit 3aa1caa08a9813c4635689965b58bd050828f0bf.

Reason for revert: benchstat is preferred to benchcmp

Change-Id: I9772eb342fb631a68511986d832bb1444766afdc
Reviewed-on: https://go-review.googlesource.com/42027
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2017-04-26 04:16:31,https://api.github.com/repos/golang/tools/git/commits/1b22574ddb1f9559c014d7aa13416bd6f4aba26b,1b22574ddb1f9559c014d7aa13416bd6f4aba26b,"cmd/godoc: fix expected test output for Go 1.8 and older

A go/build change in Go 1.9 (CL 33158) allowed for a better expected
error message for ""nonexistingpkg"" case. CL 37768 did that. However,
that shouldn't be done for Go 1.8 and older, since they don't have
the corresponding go/build change.

So, if the version is Go 1.8 or older, allow matching those previous
expected outputs (before CL 37768) for ""nonexistingpkg"" case.

Move test cases for TestCLI from a package-level variable into TestCLI
itself. This is more readable, and isGo19's value is ready in time.

Fixes golang/go#20122.

Change-Id: I5e80600a75176d9e54ffebb7730849e381568316
Reviewed-on: https://go-review.googlesource.com/41810
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
josharian,2017-04-25 21:03:37,https://api.github.com/repos/golang/tools/git/commits/4bb9a6d30bdc727aebd0747694f31de632a5282e,4bb9a6d30bdc727aebd0747694f31de632a5282e,"go/gcimporter: update to latest copy from master

Backport of CL 41619.
Generated by copying bimport.go and reverting
the chunk containing the ""This file is a copy""
comment near the top.

Fixes golang/go#20121

Change-Id: If24c97d01a550318ab919c37cd0c4a8f34d776c7
Reviewed-on: https://go-review.googlesource.com/41756
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2017-04-25 00:28:29,https://api.github.com/repos/golang/tools/git/commits/518248cfad0199b1145f2d761110fd670b4bdb86,518248cfad0199b1145f2d761110fd670b4bdb86,"cmd/compilebench: add -pkg flag to compile a single package

Sometimes, as with CL 41493, or when investigating
a reported issue, there's a package of interest
that is not part of the standard compilebench suite.
Add a -pkg flag to allow easy access to the compilebench
set of goodies (allocs, object file stats) without
having to edit and reinstall compilebench itself,
which is what I have been doing.

Change-Id: Id6ca6356cae062208f8686c0cb597ed45fc861c0
Reviewed-on: https://go-review.googlesource.com/41627
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2017-04-25 16:26:45,https://api.github.com/repos/golang/tools/git/commits/81478017b604f98ba7a7300ddf703b12b119c49c,81478017b604f98ba7a7300ddf703b12b119c49c,"imports: wait for fastWalk workers to finish before returning (take 2)

This is Joël Stemmer's https://golang.org/cl/40092 again, but with
a fix to prevent workers from deadlocking on send if the caller had
already started to shut down. See:

https://github.com/golang/go/issues/16399#issuecomment-293278556

Updates golang/go#16399
Fixes golang/go#20109 (it looks like)

Change-Id: I3d1cf6f24563d02e1369a4496c2d37dcc1f5e5b8
Reviewed-on: https://go-review.googlesource.com/41681
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Joël Stemmer <jstemmer@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kevinburke,2017-04-22 02:13:36,https://api.github.com/repos/golang/tools/git/commits/75e5ff36f363f6a84a3dce209446774ff2d13076,75e5ff36f363f6a84a3dce209446774ff2d13076,"godoc: make line numbers unselectable

Insert line numbers via a ::before pseudo-element so you can't select
them when you copy text. See the code comment for more information.

Fixes golang/go#20077.

Change-Id: I24a5b17786a52c8107b4f830e824526ba03bc38d
Reviewed-on: https://go-review.googlesource.com/41418
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2017-04-19 14:33:51,https://api.github.com/repos/golang/tools/git/commits/7745887299ffd504a804ea7998424a02d3941ad3,7745887299ffd504a804ea7998424a02d3941ad3,"cmd/compilebench: add object file size to package benchmarks

Protected by flag -obj.

Sample relevant output from compilecmp using this commit.

name       old obj-bytes     new obj-bytes     delta
Template          382k ± 0%         381k ± 0%   -0.23%  (p=0.002 n=6+6)
Unicode           203k ± 0%         203k ± 0%   -0.00%  (p=0.002 n=6+6)
GoTypes          1.18M ± 0%        1.17M ± 0%   -0.08%  (p=0.002 n=6+6)
Compiler         3.99M ± 0%        3.99M ± 0%   -0.08%  (p=0.002 n=6+6)
SSA              8.28M ± 0%        8.28M ± 0%   -0.02%  (p=0.002 n=6+6)
Flate             230k ± 0%         230k ± 0%   -0.05%  (p=0.002 n=6+6)
GoParser          287k ± 0%         287k ± 0%   -0.16%  (p=0.002 n=6+6)
Reflect          1.00M ± 0%        1.00M ± 0%   -0.01%  (p=0.002 n=6+6)
Tar               190k ± 0%         189k ± 0%   -0.24%  (p=0.002 n=6+6)
XML               416k ± 0%         415k ± 0%   -0.16%  (p=0.002 n=6+6)

name       old export-bytes  new export-bytes  delta
Template         19.0k ± 0%        18.2k ± 0%   -4.55%  (p=0.002 n=6+6)
Unicode          4.45k ± 0%        4.44k ± 0%   -0.11%  (p=0.002 n=6+6)
GoTypes          29.7k ± 0%        28.8k ± 0%   -3.12%  (p=0.002 n=6+6)
Compiler         75.6k ± 0%        72.5k ± 0%   -4.03%  (p=0.002 n=6+6)
SSA              76.2k ± 0%        74.8k ± 0%   -1.72%  (p=0.002 n=6+6)
Flate            4.98k ± 0%        4.87k ± 0%   -2.29%  (p=0.002 n=6+6)
GoParser         8.81k ± 0%        8.34k ± 0%   -5.30%  (p=0.002 n=6+6)
Reflect          6.25k ± 0%        6.16k ± 0%   -1.49%  (p=0.002 n=6+6)
Tar              9.49k ± 0%        9.03k ± 0%   -4.82%  (p=0.002 n=6+6)
XML              16.0k ± 0%        15.4k ± 0%   -4.03%  (p=0.002 n=6+6)


Change-Id: I3f5e6ec022cb02ad6937f7859c573ca1edc39fb7
Reviewed-on: https://go-review.googlesource.com/41053
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2017-04-20 21:57:57,https://api.github.com/repos/golang/tools/git/commits/c853fd576988aeebd3665f6224972f1379960013,c853fd576988aeebd3665f6224972f1379960013,"go/gcimporter: fix importing of anonymous interfaces

This is a backport of https://go-review.googlesource.com/#/c/41198/.

For golang/go#20046.

Change-Id: I58448c7dcc5e835d5c774e253cb56fec6e154f12
Reviewed-on: https://go-review.googlesource.com/41204
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
zombiezen,2017-04-20 19:54:45,https://api.github.com/repos/golang/tools/git/commits/a17c85b5d7945796e854325b6019e5189add8e1e,a17c85b5d7945796e854325b6019e5189add8e1e,"go/vcs: fix doc for Cmd.TagSync

Change-Id: I6037372d7390faad23e12d85a0f1189648e80f8f
Reviewed-on: https://go-review.googlesource.com/41199
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kazrakcom,2017-03-31 22:27:27,https://api.github.com/repos/golang/tools/git/commits/663269851cdddc898f963782f74ea574bcd5c814,663269851cdddc898f963782f74ea574bcd5c814,"imports: allow dirPackageInfo to be overridden

Change-Id: Ie90d2681e364e2a3f905675db266cb8960e08277
Reviewed-on: https://go-review.googlesource.com/39995
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2017-04-14 23:47:37,https://api.github.com/repos/golang/tools/git/commits/fc77adfcad7856a7b4346cf351a76efddd5fea90,fc77adfcad7856a7b4346cf351a76efddd5fea90,"go/ssa/interp: add two intrinsics to fix tests

(specifically: strings.Count, testing.callerEntry)

The interpreter tests were very useful for finding bugs during
development of go/ssa but now seem to be all cost and no benefit.
It may be time to delete this package.

Change-Id: I22348be9fb37bb0fd0c572c3e6f57e70fc069e02
Reviewed-on: https://go-review.googlesource.com/40871
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
jayconrod,2017-04-11 19:25:53,https://api.github.com/repos/golang/tools/git/commits/3bcb6efb399c5289003b99a1c165bd9797ff406c,3bcb6efb399c5289003b99a1c165bd9797ff406c,"godoc: Restore anchors for variables and constants

godoc once again adds anchors for variable and constant
declarations. Individual declarations and lists of declarations are
both covered.

Fixes golang/go#19894

Change-Id: If5f8f0c3429774f33535e2e654685ba5d71937f1
Reviewed-on: https://go-review.googlesource.com/40300
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2017-04-14 23:19:15,https://api.github.com/repos/golang/tools/git/commits/25abe5b3226e35df4cd46531a0ed7cac8e2592b6,25abe5b3226e35df4cd46531a0ed7cac8e2592b6,"cmd/guru: fix and reenable failing test case

And avoid assumptions about the contents of the standard hash/fnv
package.

Change-Id: I10cc95ac6e3b482da5b027d68ff218d08f425e89
Reviewed-on: https://go-review.googlesource.com/40870
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2017-04-14 22:43:09,https://api.github.com/repos/golang/tools/git/commits/2a4809d2cbbceaa83453141a7876be2f5b836f75,2a4809d2cbbceaa83453141a7876be2f5b836f75,"cmd/guru: disable a failing test for now

Updates golang/go#19464

Change-Id: I60a77bc25aa8d92c4f2fc1835d96002ea5b8bfea
Reviewed-on: https://go-review.googlesource.com/40850
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Kevin Burke <kev@inburke.com>"
josharian,2017-04-13 18:26:28,https://api.github.com/repos/golang/tools/git/commits/cbb995d093b2c4a12ac074e53d90373ecc827527,cbb995d093b2c4a12ac074e53d90373ecc827527,"cmd/compilebench: make StdCmd respect compiler flags flag

Change-Id: I9230492805583092c52ccc87e3be7740ba794c3f
Reviewed-on: https://go-review.googlesource.com/40652
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2017-04-12 13:51:24,https://api.github.com/repos/golang/tools/git/commits/9bf174b4d3fab31065b140e4a69c6e6b17746806,9bf174b4d3fab31065b140e4a69c6e6b17746806,"cmd/stringer: use source importer when available

This means that running stringer should always
have the intended effect, without having to
go install the package first, which was a common
source of confusion.

The source importer is marginally slower,
but stringer is run infrequently,
and we're only typechecking one package (and fmt),
not an entire tree, as vet does.

Fixes golang/go#10249

Change-Id: Ib8cde29bd6cc596964dbe7348065932dd59075fc
Reviewed-on: https://go-review.googlesource.com/40403
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Robert Griesemer <gri@golang.org>"
bradfitz,2017-04-11 14:41:39,https://api.github.com/repos/golang/tools/git/commits/7ee420f17d7525d013c72c05ed371361a29895d3,7ee420f17d7525d013c72c05ed371361a29895d3,"Revert ""imports: wait for fastWalk workers to finish before returning""

This reverts commit 4436e5475416d77a9352558d118d0b585b962ef1.

Reason for revert: Breaks goimports. See:
https://github.com/golang/go/issues/16399#issuecomment-293248363

Change-Id: I3bda8f0fd32380d19d7daecf3489a24e51abfbe7
Reviewed-on: https://go-review.googlesource.com/40296
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2017-03-28 21:15:02,https://api.github.com/repos/golang/tools/git/commits/ef3dcd5937c94da5c25df3f3a5d8356d778af8e4,ef3dcd5937c94da5c25df3f3a5d8356d778af8e4,"cmd/heapview: look for tools repository in all GOPATH entries

The GOPATH environment variable is defined at
https://golang.org/cmd/go/#hdr-GOPATH_environment_variable as:

> The GOPATH environment variable lists places to look for Go code. On
> Unix, the value is a colon-separated string. On Windows, the value is
> a semicolon-separated string. On Plan 9, the value is a list.

It is legal for Go packages to be in any of those places, not only
the first entry. Look in all places for golang.org/x/tools repository.

Cache the directory that is found. It's slightly more expensive
to look for it, since potentially multiple directories must be
checked for existence.

Updates golang/go#19400.

Change-Id: I16661b7149d52ea6168fffc605c842d7a4da009b
Reviewed-on: https://go-review.googlesource.com/38778
Reviewed-by: Michael Matloob <matloob@golang.org>"
josharian,2017-04-10 14:05:03,https://api.github.com/repos/golang/tools/git/commits/6e29264c4f0ec543e4fb305d013e2efcf03b71d9,6e29264c4f0ec543e4fb305d013e2efcf03b71d9,"cmd/compilebench: fix package name in comment

Change-Id: Ie5c413fc9f13cf029d8d8a6cae5754838c834395
Reviewed-on: https://go-review.googlesource.com/40170
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
rasky,2017-04-08 11:02:39,https://api.github.com/repos/golang/tools/git/commits/5584fb072038fc3e052d7fe8da43e5b130979cbb,5584fb072038fc3e052d7fe8da43e5b130979cbb,"gotype: fix default importer for Go 1.8.

Importer ""source"" does not exist in Go 1.8, so this means that
default usage of gotype is broken in that compiler version.

Change-Id: I517520b0cac7c62a3e213d0647a3d621e8ced58c
Reviewed-on: https://go-review.googlesource.com/40091
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
jstemmer,2017-04-08 22:55:30,https://api.github.com/repos/golang/tools/git/commits/4436e5475416d77a9352558d118d0b585b962ef1,4436e5475416d77a9352558d118d0b585b962ef1,"imports: wait for fastWalk workers to finish before returning

In some cases walkFn is being called after the fastWalk function has
returned. This often happens when an error was encountered early on in
scanning directories with many entries.

It is caused by fastWalk not waiting for its workers to complete their
work. A sync.WaitGroup is used to wait for all workers to finish when
the function returns.

Updates golang/go#16399

Change-Id: I695d30c18e4878b789520b9d8a650f9688d896ac
Reviewed-on: https://go-review.googlesource.com/40092
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2017-04-06 18:43:20,https://api.github.com/repos/golang/tools/git/commits/24acc66eabead631b4e856255a9ad925549cee80,24acc66eabead631b4e856255a9ad925549cee80,"cmd/compilebench: put in correct subdirectory

Apparently there was a typo during initial import,
and compilebench was placed at the top level,
rather than in the cmd subdirectory. Oops. Fix that.

Change-Id: Ibea9ed132dca26c022ea02933defec9534105f18
Reviewed-on: https://go-review.googlesource.com/39792
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2017-04-06 17:01:01,https://api.github.com/repos/golang/tools/git/commits/ded95f530cd4dce7ff727e30d95a405425bb0dbb,ded95f530cd4dce7ff727e30d95a405425bb0dbb,"cmd/compilebench: generate separate cpu profiles when using -count

When the -count flag is provided,
instead of having each run overwrite the previous profile,
add a count suffix to the profile filename.
Then you can combine the profiles with

go tool pprof `go tool -n compile` <all profile files here>

This allows generation of precise profiles,
even for fast-compiling packages.

Change-Id: I006cf8fad143346b28a646a0b3582cc0f6eec310
Reviewed-on: https://go-review.googlesource.com/39718
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
josharian,2017-04-06 16:59:01,https://api.github.com/repos/golang/tools/git/commits/1cab72a4780baad7d53ad55bdc95b746f616af13,1cab72a4780baad7d53ad55bdc95b746f616af13,"cmd/compilebench: unify Size benchmark implementations

Change-Id: I181d9f9ce8880af8fbcdd43073d62f492725c85b
Reviewed-on: https://go-review.googlesource.com/39717
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2017-04-06 16:56:56,https://api.github.com/repos/golang/tools/git/commits/89b6e5ee0d83e2b3c5945e5962b7c1ea29d62d1b,89b6e5ee0d83e2b3c5945e5962b7c1ea29d62d1b,"cmd/compilebench: change MakeBash to StdCmd

Instead of running make.bash, run 'go build -a std cmd'.
Change the benchmark name to reflect this.

This does roughly the same task, namely compile and link
all the code in the tree, but with several advantages:

* It works cross-platform.
* It is a bit faster, while measuring the same fundamentals.
* It doesn't measure how fast the bootstrap compiler works,
  which is irrelevant.
* If interrupted, it leaves the current Go installation
  in a usable state.

Change-Id: I469b1d032b48b06e3dea021bd031283bc3a16ff4
Reviewed-on: https://go-review.googlesource.com/39714
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
josharian,2017-04-06 16:43:27,https://api.github.com/repos/golang/tools/git/commits/7e40ef38764382fe39c121c240a034b3e3259c38,7e40ef38764382fe39c121c240a034b3e3259c38,"cmd/compilebench: update list of packages

There's a surprising amount of variety
in the drivers of compilation speed.
It's helpful to have a variety of packages here.
For example, archive/tar exhibits golang/go#19839
much more than the others.

Change-Id: If66b332d63427fb246305cb14cfee9ef450bcdcf
Reviewed-on: https://go-review.googlesource.com/39713
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
josharian,2017-04-06 16:20:15,https://api.github.com/repos/golang/tools/git/commits/a0d14bb1f70368b971b928356b6d806b6cc3c70f,a0d14bb1f70368b971b928356b6d806b6cc3c70f,"cmd/compilebench: import from rsc.io

This CL is an import of compilebench from rsc.io/compilebench
at commit 1a5bec7724500bd6df47e053dbc42b41fe653372.

This CL brings in only main.go, unaltered.
The other files were:

* LICENSE: now unnecessary
* README.md: now unnecessary
* compilecmp: still available at its original home,
  soon to be superceded by a new tool in x/tools

Once compilecmp is available in x/tools,
I will replace rsc.io/compilebench with a breadcrumb repo.

All outstanding pull requests against rsc.io/compilebench are from me.
They will be closed, and new CLs sent here as appropriate.

Change-Id: Ic436abf4a662173c6c184bc765b1b9cab13b3cfb
Reviewed-on: https://go-review.googlesource.com/39712
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
josharian,2017-04-05 15:09:19,https://api.github.com/repos/golang/tools/git/commits/5054e612afecd2460e8659117a716cb5b58d4b88,5054e612afecd2460e8659117a716cb5b58d4b88,"cmd/toolstash: don't build cmd for android

Linking cmd for android requires a cross-compiling toolchain,
which is not standard fare.

Skip it, and trust that the other platforms will pick up the slack.

Change-Id: Ifcf74f77e98489c859805ab7a448d80d019f3d20
Reviewed-on: https://go-review.googlesource.com/39556
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kevinburke,2017-03-31 23:31:41,https://api.github.com/repos/golang/tools/git/commits/37a1062ad0bb70f026cd45d6b92cb37eacd927bb,37a1062ad0bb70f026cd45d6b92cb37eacd927bb,"cmd/tip: redirect http://tip.golang.org to https

At some point we switched tip.golang.org to run in GKE, which
terminates TLS directly on port 443. This requires a new technique
for detecting a plain HTTP connection. In addition we may want to run
talks.golang.org on App Engine Flex, which uses an X-Forwarded-Proto
header to indicate HTTP, so let's prepare for that possibility.

Fixes golang/go#19759.

Change-Id: Iddc567214c5d28f61c405db065aa1b3f2c92fd85
Reviewed-on: https://go-review.googlesource.com/38800
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kevinburke,2017-04-01 01:20:38,https://api.github.com/repos/golang/tools/git/commits/620ecdb8d7943e20dc030b61bfe898d1b000bdea,620ecdb8d7943e20dc030b61bfe898d1b000bdea,"all: apply new machine-generated doc spec to files

Updates golang/go#13560.

Change-Id: I1664807a065c7982a57d4dc9cee22ce261536c5b
Reviewed-on: https://go-review.googlesource.com/39202
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
haya14busa,2017-03-31 02:52:04,https://api.github.com/repos/golang/tools/git/commits/d83db204cec938a53072124e16d79022316b3dc5,d83db204cec938a53072124e16d79022316b3dc5,"cmd/goimports: flush to disk before diffing

Port of gofmt change at golang.org/cl/36750

Change-Id: Ie0ef6770be6361264ed45a9a9ece950aba24e852
Reviewed-on: https://go-review.googlesource.com/39073
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mattn,2017-03-28 08:28:24,https://api.github.com/repos/golang/tools/git/commits/d63e2b22b05a9682de336cd4802bba367ed429e7,d63e2b22b05a9682de336cd4802bba367ed429e7,"cmd/toolstash: use strings.LastIndexAny

Change-Id: I06a4610a5f5c49806a1b151a65c25bbbd881a314
Reviewed-on: https://go-review.googlesource.com/38753
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mattn,2017-03-28 08:49:10,https://api.github.com/repos/golang/tools/git/commits/474a26d4c8c8eb72a8240934d521132eadfe3880,474a26d4c8c8eb72a8240934d521132eadfe3880,"cmd/guru: Close before Remove a file

Change-Id: Ia12ff7a0f6898f8d140565d255793904ce8585c4
Reviewed-on: https://go-review.googlesource.com/38754
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
mattn,2017-03-28 08:10:21,https://api.github.com/repos/golang/tools/git/commits/963fe939f1f179a8f7aa459391c7409ced6796a4,963fe939f1f179a8f7aa459391c7409ced6796a4,"cmd/heapview: remove needless slash

Change-Id: Ie19a60595862c0afff9364ee21dd9598370e6c91
Reviewed-on: https://go-review.googlesource.com/38752
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
haya14busa,2017-03-10 11:12:44,https://api.github.com/repos/golang/tools/git/commits/1f0f7f68c993a0ff4e0fe1793c08cdd14cc243cb,1f0f7f68c993a0ff4e0fe1793c08cdd14cc243cb,"imports: return when done channel is closed

Change-Id: I49317a947ec58572fd16078279678d4514cc2a4b
Reviewed-on: https://go-review.googlesource.com/37919
Run-TryBot: Matt Layher <mdlayher@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Matt Layher <mdlayher@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2017-03-22 22:55:50,https://api.github.com/repos/golang/tools/git/commits/c21bc47f893ee73c18dd2119bb8ff9a2b492c4c6,c21bc47f893ee73c18dd2119bb8ff9a2b492c4c6,"go/gcimporter: exclude failing test from gcimporter tests (fix build)

This is already tested in the std library. Ok to take the easy way
out here.

Change-Id: Ie17e16fddba827bfe279e1f790006b3874f830ad
Reviewed-on: https://go-review.googlesource.com/38455
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
josharian,2017-03-19 05:44:30,https://api.github.com/repos/golang/tools/git/commits/322b9d710a4429c1ea838c836bdb923ece84de2a,322b9d710a4429c1ea838c836bdb923ece84de2a,"cmd/toolstash: use 'go tool dist list' to get platforms

This fixes several issues:

* The ls sed hackery generates GOARCH values mipsx and mipsxle,
  instead of mips, mips64, mipsle, and mips64le.
* It removes the dependence on the 9 command.
* It marginally increases readability.

Change-Id: Ie46abc289c2c9923eed693dcf1194f4fd3ea9bd2
Reviewed-on: https://go-review.googlesource.com/38347
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
mdempsky,2017-03-21 22:45:56,https://api.github.com/repos/golang/tools/git/commits/81dff79736a5dfbfa04fdfe7bebdabcd0fd6456a,81dff79736a5dfbfa04fdfe7bebdabcd0fd6456a,"cmd/godoc: fix tests for cmd/compile refactorings

In golang.org/cl/38089, I removed all of the prog.go files.

Change-Id: I4d8dd021a62b5d6d8b7cb5cfe0ecd7268812805c
Reviewed-on: https://go-review.googlesource.com/38432
Run-TryBot: Matthew Dempsky <mdempsky@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mdempsky,2017-03-21 22:15:34,https://api.github.com/repos/golang/tools/git/commits/b08393ce6db03dc9c3b8a34f5cf0c7994d59a44e,b08393ce6db03dc9c3b8a34f5cf0c7994d59a44e,"go/gcimporter15: backport interface embedding support

Backports golang.org/cl/38392 from go/internal/gcimporter.

Updates golang/go#16369.

Change-Id: Ic805f96e6565590987a5dae9f0f76c206fceab05
Reviewed-on: https://go-review.googlesource.com/38429
Run-TryBot: Matthew Dempsky <mdempsky@google.com>
Reviewed-by: Robert Griesemer <gri@golang.org>"
robpike,2017-03-21 03:28:02,https://api.github.com/repos/golang/tools/git/commits/23ca8a2633c38bca2a2fd4d0c0f8523a2f266d65,23ca8a2633c38bca2a2fd4d0c0f8523a2f266d65,"cmd/stringer: tweak ""Code generated by"" comment to match new standard

See https://golang.org/issue/13560 for the full discussion.

The actual change is just the addition of a final period.

Update golang/go#13560

Change-Id: Icc2f52b67181de344aa5107f94faa0e739ff993c
Reviewed-on: https://go-review.googlesource.com/38415
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
josharian,2017-03-20 20:03:44,https://api.github.com/repos/golang/tools/git/commits/a5c9681e31155c07ac546c8cb7cf5018ac4ef2b7,a5c9681e31155c07ac546c8cb7cf5018ac4ef2b7,"cmd/toolstash: don't pass -N when compiling runtime

The runtime cannot be compiled with optimizations disabled.
This lead to very confusing error messages
when toolstash -cmp failed.

Change-Id: Ie341d633ff9b26693b475957309591ff0757f1ab
Reviewed-on: https://go-review.googlesource.com/38378
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
kevinburke,2017-03-15 22:55:52,https://api.github.com/repos/golang/tools/git/commits/2946dd1f77e693e136d9ed202ba093bb4a3ea761,2946dd1f77e693e136d9ed202ba093bb4a3ea761,"godoc/static: add license preamble to static file

Change-Id: Icfdb6b544ff8613efc5a183d50efe6bb92dc6784
Reviewed-on: https://go-review.googlesource.com/38165
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
tamird,2017-03-14 19:53:37,https://api.github.com/repos/golang/tools/git/commits/6185cb1f3105899cd34484c59407846bec0acc06,6185cb1f3105899cd34484c59407846bec0acc06,"cmd/goyacc: remove empty branch

Found with honnef.co/go/tools/cmd/staticcheck.

Change-Id: I39e23936e01543db62b7b0919a3b58b65cd40099
Reviewed-on: https://go-review.googlesource.com/38174
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
tamird,2017-03-14 19:56:22,https://api.github.com/repos/golang/tools/git/commits/43bc42d6f5fdc83a654b12ae2858923279f698e4,43bc42d6f5fdc83a654b12ae2858923279f698e4,"cmd/goyacc: remove unused functions

Found with honnef.co/go/tools/cmd/unused.

Change-Id: Ie7ee9f687bcec1faa40c890a84666ef6c27d9b77
Reviewed-on: https://go-review.googlesource.com/38176
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2017-03-07 04:52:45,https://api.github.com/repos/golang/tools/git/commits/b282a57667dab7f4b905b91a925f097fe0d1c48c,b282a57667dab7f4b905b91a925f097fe0d1c48c,"godoc/redirect: allow trailing slashes for prefix handlers

This allows URLs like golang.org/wiki/DevExp/, where before only
golang.org/wiki/DevExp was accepted.

Fixes golang/go#19432.

Change-Id: Ie41a4fe1d1930fd947c1d0523060d08c7c6d6d39
Reviewed-on: https://go-review.googlesource.com/37882
Reviewed-by: Jaana Burcu Dogan <jbd@google.com>"
tamird,2017-03-14 19:50:37,https://api.github.com/repos/golang/tools/git/commits/d3322838080c05840bcf3f02347cec5bb3172282,d3322838080c05840bcf3f02347cec5bb3172282,"cmd/goyacc: remove ineffective break statement

Found with honnef.co/go/tools/cmd/staticcheck.

Change-Id: I7f765ef1710d151ebda5716c99587acd3a90db1f
Reviewed-on: https://go-review.googlesource.com/38173
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
tamird,2017-03-14 19:50:13,https://api.github.com/repos/golang/tools/git/commits/1f5953e3406a04c7a1b1777b5675a0b8232b5ddd,1f5953e3406a04c7a1b1777b5675a0b8232b5ddd,"cmd/goyacc: use a constant instead of zero value

Found with honnef.co/go/tools/cmd/unused.

Change-Id: I373d710e0f5f98dcf591826a26541d1d12696e14
Reviewed-on: https://go-review.googlesource.com/38175
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
tamird,2017-03-14 19:58:01,https://api.github.com/repos/golang/tools/git/commits/ab34c5f581f90acc47c03ceeb38c51f3153833a2,ab34c5f581f90acc47c03ceeb38c51f3153833a2,"cmd/goyacc: remove unused generated bindings

Found with honnef.co/go/tools/cmd/unused (in CockroachDB).

Change-Id: I0e2f7ac6ad2a0fdc724928f316060f06c3261ece
Reviewed-on: https://go-review.googlesource.com/38178
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>"
tamird,2017-03-14 19:57:20,https://api.github.com/repos/golang/tools/git/commits/f2e43688df3beac1ff323c331eca52c15a2cc180,f2e43688df3beac1ff323c331eca52c15a2cc180,"cmd/goyacc: merge variable declaration with assignment

Found with honnef.co/go/tools/cmd/simple.

Change-Id: I04c65394f1c6404f57bb2088353325899f35011f
Reviewed-on: https://go-review.googlesource.com/38177
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>"
griesemer,2017-03-14 21:44:29,https://api.github.com/repos/golang/tools/git/commits/2f69a5922b0b358fb9dd08ed224b748348ad821a,2f69a5922b0b358fb9dd08ed224b748348ad821a,"cmd/gotype: make it compile against Go 1.8 and earlier

types.SizesFor was introduced for Go 1.9. Need to provide
a local implementation to have gotype build against earlier
versions.

Fixes golang/go#19545.

Change-Id: I6fdbe414e6574eda00c01295b666230daff2dfdc
Reviewed-on: https://go-review.googlesource.com/38157
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2017-03-13 17:28:12,https://api.github.com/repos/golang/tools/git/commits/381149a2d6e5d8f319ccf04bfefc71e03a78b868,381149a2d6e5d8f319ccf04bfefc71e03a78b868,"cmd/gotype: re-introduce gotype command at traditional location

Except for the added comment in the beginning and the removal of
the 'ignore' build tag, there is no difference between gotype.go
and the original.

Fixes golang/go#19516.

Change-Id: Ie1ab9aced6e650573c2cdce0c165af1e1094213f
Reviewed-on: https://go-review.googlesource.com/38132
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2017-03-08 22:01:44,https://api.github.com/repos/golang/tools/git/commits/f60b69ed8cd7a29e91f87050ae23a29581a0f367,f60b69ed8cd7a29e91f87050ae23a29581a0f367,"imports: fix symlink loop detection, deflaking TestImportSymlinks

Change the shouldTraverse function to no longer keep a global map of
which inodes it's seen. Instead, whenever a symlink is seen for a path
name, check every directory entry in that path name and see if any are
the same inode as the current one, detecting any loop just from the
name itself.

More details of why the test was flaky are in the bug.

Fixes golang/go#18142

Change-Id: I869f7a13d130c63d78b7af81802a16c4b4b2f3bd
Reviewed-on: https://go-review.googlesource.com/37947
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2017-03-08 16:09:54,https://api.github.com/repos/golang/tools/git/commits/7fdb908eadb85898a38f38499851496bbc25fa78,7fdb908eadb85898a38f38499851496bbc25fa78,"cmd/guru: fix tests now that go1.9 go/types returns fake packages

The go1.9 type checker now returns fake packages in addition to an
error if the package was not found at all.  This changes the behavior
of guru in a release-specific way, requiring the test to be split into
a common part and a go1.9-specific part.

In hindsight, perhaps it would have been better to place the
expectation in a comment alongside the query so that they can be
easily enabled or disabled together.  (The downside of that design is
that you can't batch-update all the expectations to match the actual
behavior.)

Change-Id: I58054adec428fbab7fe3c57097aefc827f89a46e
Reviewed-on: https://go-review.googlesource.com/37865
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2017-03-03 20:43:35,https://api.github.com/repos/golang/tools/git/commits/03d3934baf81f2387349b58864cb98b6fe7cf85e,03d3934baf81f2387349b58864cb98b6fe7cf85e,"cmd/tip: move tip.golang.org from App Engine to Kubernetes on GKE

Change-Id: I52ca7eaca98de27bd920ae01086b3f7724819738
Reviewed-on: https://go-review.googlesource.com/37754
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
alandonovan,2017-03-02 23:23:31,https://api.github.com/repos/golang/tools/git/commits/767744efe214e838bfe7ae8c0dee67cb686a3964,767744efe214e838bfe7ae8c0dee67cb686a3964,"go/ssa/interp: add more intrinsics for sync/atomic and runtime

Change-Id: I4743fa32be5549b2d141595d236c653e53cc9ff4
Reviewed-on: https://go-review.googlesource.com/37712
Reviewed-by: Robert Griesemer <gri@golang.org>"
dominikh,2017-03-01 19:43:03,https://api.github.com/repos/golang/tools/git/commits/a99f4ece3600c1664c2ee4e345e3c3dbe8e90b52,a99f4ece3600c1664c2ee4e345e3c3dbe8e90b52,"go/pointer: implement extended queries

The existing API for querying values only allows directly querying
pointer-like values, or pointers to such values. The new, extended
queries make it possible to destructure values and access arbitrarily
nested pointers, such as fields in structs, or specific values in
tuples.

We use single Go expressions as the queries, which we further restrict
to a subset of the language (indexing, field access, pointer
dereferences and channel receives).

Instead of adding another map to Result, we return a *Pointer and
populate it during analysis. This does mean that a Config cannot be
reused for multiple analyses, as it now holds analysis-specific state.
That is, however, not a big problem as reusing one Config had little
use.

Since the new API can do everything the old could, it deprecates
AddQuery and AddIndirectQuery.

Change-Id: I4b2ae7d85c462bc7faa6bab76456106e76be5a65
Reviewed-on: https://go-review.googlesource.com/37635
Reviewed-by: Alan Donovan <adonovan@google.com>"
dmitshur,2017-03-05 00:06:07,https://api.github.com/repos/golang/tools/git/commits/f595fb5c9663ecbe1b08ae76e9c0a1b69cd0fa33,f595fb5c9663ecbe1b08ae76e9c0a1b69cd0fa33,"cmd/godoc, godoc: implement build.Context.IsDir, update expected error string

Prior to this change, handlerServer.GetPageInfo created a build.Context
starting with build.Default, and provided custom implementations for
its IsAbsPath, ReadDir, and OpenFile funcs. Those funcs would operate
on h.c.fs virtual filesystem.

https://godoc.org/go/build#Context.IsDir is documented as:

	// IsDir reports whether the path names a directory.
	// If IsDir is nil, Import calls os.Stat and uses the result's IsDir method.
	IsDir func(path string) bool

IsDir was left as nil, and so the default implementation was used.
The default implementation uses os.Stat and isn't aware of the h.c.fs
virtual filesystem.

This appears to have been harmless in the past, but after the change to
go/build in https://golang.org/cl/33158, it started to interfere with
the operation of godoc. The command godoc began to fail to resolve
relative import path ""."" in directories that exist, because the
incorrect IsDir implementation was looking in real filesystem, rather
than the virtual one:

	$ ./godoc fmt
	2017/03/04 18:59:50 cannot find package ""."" in:
		/target
	$ ./godoc -http=localhost:6060
	2017/03/04 19:00:07 cannot find package ""."" in:
		/src/fmt

Providing a custom implementation of IsDir that is aware of the h.c.fs
virtual filesystem, and performs a stat operation on the correct path
there resolves that problem. It also fixes the failing tests.

Additionally, because the exact error string returned from
Context.Import has changed after https://golang.org/cl/33158,
and now contains the text ""package not found"" rather than the
underlying error text from filesystem caused by a failed ReadDir
operation, the expected error message from ""./godoc nonexistingpkg""
in a test needed to be updated to ""cannot find package"". It's no longer
dependent on the operating system.

It might be desirable to provide more relevant detail in the error
message from cmd/godoc when a package is not found, but that should be
determined and done in a followup CL. The scope of this one is to fix
normal functionality.

This change follows update to go/build in https://golang.org/cl/33158.

Helps golang/go#19401.

Change-Id: I00e2f746ec4a2fe7e640218adce75f15bdf29aaf
Reviewed-on: https://go-review.googlesource.com/37768
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
davidrjenni,2017-03-04 16:46:29,https://api.github.com/repos/golang/tools/git/commits/8ffd8eda92fbb57a42688bcd05e2481b813f88e8,8ffd8eda92fbb57a42688bcd05e2481b813f88e8,"x/tools/cmd/guru: fix golden files for what query

CL golang.org/cl/37349 broke the tests, because the
golden files were not updated appropriately.

Change-Id: I9a2a56d1ca74b8bc77935aff26ed6297fbacf232
Reviewed-on: https://go-review.googlesource.com/37770
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Run-TryBot: Dominik Honnef <dominik@honnef.co>"
alandonovan,2017-02-24 21:57:05,https://api.github.com/repos/golang/tools/git/commits/3537037b0ba3c86130e74019e3880dc7e4c83cef,3537037b0ba3c86130e74019e3880dc7e4c83cef,"cmd/guru: report 'whicherrs' in modes of 'what' query

A 'what' query reports which other query modes are applicable to the
selected syntax.  A 'whicherrs' query is similar to a 'pointsto'
query, so we enable it using the same criteria.

Fixes issue golang/go#18938

Change-Id: Iae062e0c933c7764bc335488adabf816d63ac837
Reviewed-on: https://go-review.googlesource.com/37349
Reviewed-by: Dominik Honnef <dominik@honnef.co>"
dmitshur,2017-03-02 02:58:49,https://api.github.com/repos/golang/tools/git/commits/a663d825ff309f7e98e889d4739babb91c7f813b,a663d825ff309f7e98e889d4739babb91c7f813b,"cmd/godoc: Fix package comment inconsistencies.

Remove inadvertent and unwanted spaces in the middle of an
indented block.

Insert blank lines before indented sections for consistency.

Insert colon after ""pointer"" for consistency with ""type"".

Fixes golang/go#19356.

Change-Id: Iaae12f69d17adb51a27b516727c13132cb8df8e8
Reviewed-on: https://go-review.googlesource.com/37660
Reviewed-by: Daniel Martí <mvdan@mvdan.cc>
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Run-TryBot: Dominik Honnef <dominik@honnef.co>"
alandonovan,2017-03-02 23:20:40,https://api.github.com/repos/golang/tools/git/commits/181cdfd456484b2008e9061c656a52a1413a66aa,181cdfd456484b2008e9061c656a52a1413a66aa,"go/ssa: create an 'init' function even if len(files)==0

Package ""unsafe"" has no files, and is treated like a regular package since
https://go-review.googlesource.com/37710, and the interpreter needs an
init function with a body for every package.

Change-Id: I27bd7cdb1ecaf01d0b5ed91db57145d1b4f551e1
Reviewed-on: https://go-review.googlesource.com/37711
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2017-03-02 01:21:00,https://api.github.com/repos/golang/tools/git/commits/f5a6ee1ea9f7b3a91e3e70dc1b9706886d0e0ae3,f5a6ee1ea9f7b3a91e3e70dc1b9706886d0e0ae3,"cmd/gotype: delete this command in favor of go/types/gotype.go in the std lib

Change-Id: Ifd03e5ec607ff127ab11c307d99877de81aeacf2
Reviewed-on: https://go-review.googlesource.com/37657
Reviewed-by: Paul Jolly <paul@myitcv.org.uk>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2017-03-02 21:31:04,https://api.github.com/repos/golang/tools/git/commits/7a49e427c87609bb42725524c71c89b244c5fa87,7a49e427c87609bb42725524c71c89b244c5fa87,"go/loader: don't create types.Package for ""unsafe""

https://golang.org/cl/37694 is a backwards-incompatible change to the
go/types API that causes ""unsafe"" to be included among the results of
(*types.Package).Imports().  Client packages such as go/loader and
go/ssa now need to recognize the special unsafe package and its
unusual *Bultin members and not create a types.Package for it.

Change-Id: I902725d3053cb887246978efdb5ec5dcdc0e4818
Reviewed-on: https://go-review.googlesource.com/37710
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
davidrjenni,2017-03-01 11:38:50,https://api.github.com/repos/golang/tools/git/commits/1dce95f761bfeb6fe2aa3c4e9ffdb261b69b3fc4,1dce95f761bfeb6fe2aa3c4e9ffdb261b69b3fc4,"x/tools/imports: remove unused type gate.

Found with honnef.co/go/tools/cmd/unused.

Change-Id: I3e40d58044c250bfeafc77e5eef4533390ace12b
Reviewed-on: https://go-review.googlesource.com/37607
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
davidrjenni,2017-03-01 11:44:24,https://api.github.com/repos/golang/tools/git/commits/ee178bea371108feba8cc4e9c9dee7a66362d362,ee178bea371108feba8cc4e9c9dee7a66362d362,"x/tools/godoc: remove unused functions

Found with honnef.co/go/tools/cmd/unused.

Change-Id: I193ddd265673f133a489d268629b94be693a8dbc
Reviewed-on: https://go-review.googlesource.com/37606
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:51:36,https://api.github.com/repos/golang/tools/git/commits/b20a216efba9d98e29fe65da18979c57ff6885e8,b20a216efba9d98e29fe65da18979c57ff6885e8,"x/tools/go/internal/gccgoimporter: remove unused method

Found with honnef.co/go/tools/cmd/unused.

Change-Id: Ib8acac744a171b70f3f842f8f5f8c34064869383
Reviewed-on: https://go-review.googlesource.com/37604
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:46:37,https://api.github.com/repos/golang/tools/git/commits/76c38d6bce29d646b24558d6d79251362d31aa5b,76c38d6bce29d646b24558d6d79251362d31aa5b,"x/tools/go/buildutil: remove unused function

Found with honnef.co/go/tools/cmd/unused.

Change-Id: I1dc8e4dbfd784bb22b2f0dabb7c1a08cf1ef44ee
Reviewed-on: https://go-review.googlesource.com/37603
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:35:10,https://api.github.com/repos/golang/tools/git/commits/fd9cb7c10f263c514e2a171eb10b54406214d3a9,fd9cb7c10f263c514e2a171eb10b54406214d3a9,"x/tools/cmd/html2article: remove unused functions

Found with honnef.co/go/tools/cmd/unused.

Change-Id: Ifd1ed4005eec55cebfd5c0d0519b8af328fcc470
Reviewed-on: https://go-review.googlesource.com/37601
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:32:51,https://api.github.com/repos/golang/tools/git/commits/8211efe185f4996cdb31f21c25137ccf80bb4eb3,8211efe185f4996cdb31f21c25137ccf80bb4eb3,"x/tools/cmd/guru: remove unused method.

Found with honnef.co/go/tools/cmd/unused.

Change-Id: Ied3a906269ca7782071428eeb1764b3b863576a2
Reviewed-on: https://go-review.googlesource.com/37600
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:31:07,https://api.github.com/repos/golang/tools/git/commits/e06694fefde0e67a4490122aacc4e4cdf4312595,e06694fefde0e67a4490122aacc4e4cdf4312595,"x/tools/cmd/godoc: remove unused variable

Found with honnef.co/go/tools/cmd/unused.

Change-Id: I3db2aad14de33f0be69569cd355e453173098358
Reviewed-on: https://go-review.googlesource.com/37599
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2017-03-01 14:50:34,https://api.github.com/repos/golang/tools/git/commits/81cc31eaa95165d4238f563a1dfe688740f35d90,81cc31eaa95165d4238f563a1dfe688740f35d90,"Revert ""x/tools/container/intsets: remove unused function""

This reverts commit 79902b439b3ef4c163ff5e96ac1f282f31c8a131.

Reason for revert: build broken on some platforms.

Change-Id: I5ceddc305580ff97f47ae27da831f99e96dab424
Reviewed-on: https://go-review.googlesource.com/37539
Reviewed-by: David R. Jenni <david.r.jenni@gmail.com>
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:41:02,https://api.github.com/repos/golang/tools/git/commits/f9348ea9b152ab34697dd2fc82ed74492b3454d7,f9348ea9b152ab34697dd2fc82ed74492b3454d7,"x/tools/present: remove unused code

Found with honnef.co/go/tools/cmd/unused.

Change-Id: Iabfa1e9926e097ba11d1db0a2d785fec70ce3997
Reviewed-on: https://go-review.googlesource.com/37609
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:42:51,https://api.github.com/repos/golang/tools/git/commits/64f598be56b023aa2a90099050b3ab5bd9d209eb,64f598be56b023aa2a90099050b3ab5bd9d209eb,"x/tools/refactor/eg: remove unused variable

Found with honnef.co/go/tools/cmd/unused.

Change-Id: I4a39f337a266e14f0188d32cf89a7e19718e0ded
Reviewed-on: https://go-review.googlesource.com/37630
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:37:16,https://api.github.com/repos/golang/tools/git/commits/79902b439b3ef4c163ff5e96ac1f282f31c8a131,79902b439b3ef4c163ff5e96ac1f282f31c8a131,"x/tools/container/intsets: remove unused function

Found with honnef.co/go/tools/cmd/unused.

Change-Id: I54dab41d423050b883a3af1f5bb8c5119e2b7100
Reviewed-on: https://go-review.googlesource.com/37602
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 11:48:21,https://api.github.com/repos/golang/tools/git/commits/36a48c93a6c6d1ca6cd293d2c4f1bf866cc285fa,36a48c93a6c6d1ca6cd293d2c4f1bf866cc285fa,"x/tools/go/ssa: remove unused field from NamedConst

Found with honnef.co/go/tools/cmd/unused.

Change-Id: I68b4af07cc64a46f5794a0e339859f4d6bc9dad1
Reviewed-on: https://go-review.googlesource.com/37605
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-03-01 14:35:00,https://api.github.com/repos/golang/tools/git/commits/43de7a390a85c6197c96b9c1c9ac5b4a688dcb64,43de7a390a85c6197c96b9c1c9ac5b4a688dcb64,"x/tools/cmd/goyacc: remove unused function.

Found with honnef.co/go/tools/cmd/unused.

Change-Id: Iad26e1ae1dbeb29a3223279eccc4ba6f6bb48bd6
Reviewed-on: https://go-review.googlesource.com/37631
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2017-02-27 19:11:17,https://api.github.com/repos/golang/tools/git/commits/718875e4f9a39b5a303f3fa67a7dd9367b07c02f,718875e4f9a39b5a303f3fa67a7dd9367b07c02f,"x/tools: simplify and format code

Semi-mechanical changes using gofmt -s
and honnef.co/go/tools/cmd/gosimple.

Change-Id: I41bcf4bea5b16c4776b7cf6534b76aa59b3c022d
Reviewed-on: https://go-review.googlesource.com/37447
Reviewed-by: Alan Donovan <adonovan@google.com>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
davidrjenni,2017-02-23 17:31:04,https://api.github.com/repos/golang/tools/git/commits/496819729719f9d07692195e0a94d6edd2251389,496819729719f9d07692195e0a94d6edd2251389,"x/tools/refactor/rename: fix nil pointer dereference.

Fix a nil pointer dereference by checking the error returned by
conf.Load.

Bug was reported on Reddit:
https://www.reddit.com/r/golang/comments/5vo0fb/

Change-Id: I2ad6f03922b772f03e282a0af6eea24f8de9cef8
Reviewed-on: https://go-review.googlesource.com/37432
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2017-02-17 15:35:14,https://api.github.com/repos/golang/tools/git/commits/219e654bb7266d3b73c4610ed24c33d12560826a,219e654bb7266d3b73c4610ed24c33d12560826a,"go/ssa: eliminate dead φ-nodes in cycles

The previous ""dead φ"" check was simple and naive but left cycles of
dead φ-nodes.  This confused some downstream static analysis tools.
This change makes the φ-nodes liveness check transitive.

+ Test.

Also, number phi nodes so they're not all called t0 during debugging.

Reduces memory consumption by  1%.
Increases execution time   by <1%.

Change-Id: I2908662c1478d455fdf4a179f4a12d6184a456c0
Reviewed-on: https://go-review.googlesource.com/37157
Reviewed-by: Robert Griesemer <gri@golang.org>"
myitcv,2017-02-14 15:12:52,https://api.github.com/repos/golang/tools/git/commits/8e779ee0a4509783f6940db32d1a4e8df910cc8b,8e779ee0a4509783f6940db32d1a4e8df910cc8b,"x/tools/cmd/gotype: support type checking of xtest packages.

As noted by griesemer in golang/go#18799, this doesn't address the issues
raised in golang/go#11415 because when checking an xtest package the
corresponding package is assumed to have been installed. This
however is similar to the assumptions made by go vet (raised
as an issue in golang/go#16086). So whilst not perfect, it will probably
suffice until golang/go#11415 is resolved.

Fixes golang/go#18799

Change-Id: I1ea005c402e5d6f5abddda68fee6386b0531dfba
Reviewed-on: https://go-review.googlesource.com/36992
Reviewed-by: Robert Griesemer <gri@golang.org>"
jayconrod,2017-02-10 21:20:20,https://api.github.com/repos/golang/tools/git/commits/e1bdc76d0461f7041136c70e0a1356ea0f5e01d0,e1bdc76d0461f7041136c70e0a1356ea0f5e01d0,"x/tools/cmd/godoc: fix broken links in composite literals

Previously, field names in composite literals were treated as normal
identifiers. For example, in Foo{X: 42}, X was treated link a normal
variable and was linked to ""#X"".

With this change, field links now include a prefix for their type
definition, for example, ""#Foo.X"".

Fixes golang/go#16031

Change-Id: I9cb501704f284fbbc05424555312307c61843e47
Reviewed-on: https://go-review.googlesource.com/36830
Run-TryBot: Jay Conrod <jayconrod@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
jayconrod,2017-02-07 22:34:43,https://api.github.com/repos/golang/tools/git/commits/00f7cd5589365aa8eb6e88f55d845eea9ca39f25,00f7cd5589365aa8eb6e88f55d845eea9ca39f25,"x/tools/cmd/godoc: Fix incorrectly indented literals in examples

godoc formats function examples for text or HTML output by
stripping the surrounding braces and un-indenting by replacing
""\n    "" with ""\n"". This modifies the content of string literals,
resulting in misleading examples.

This change introduces a function, replaceLeadingIndentation, which
unindents more carefully. It removes the first level of indentation
only outside of string literals. For plain text output, it adds custom
indentation at the beginning of every line including string literals.

Fixes golang/go#18446

Change-Id: I52a7f5756bdb69c8a66f031452dd35eab947ec1f
Reviewed-on: https://go-review.googlesource.com/36544
Run-TryBot: Jay Conrod <jayconrod@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ianlancetaylor,2017-02-17 18:35:41,https://api.github.com/repos/golang/tools/git/commits/f84eaba4be9c31b348df3436ab629c641aa9177b,f84eaba4be9c31b348df3436ab629c641aa9177b,"go/loader: only run examples on 1.8

Tip introduces a new internal/poll package that breaks the expected
output.

Fixes golang/go#19150
Updates golang/go#19152

Change-Id: I5ff7e8a92afe4d25feb6365933062e931c9b435f
Reviewed-on: https://go-review.googlesource.com/37148
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
broady,2017-02-16 21:19:20,https://api.github.com/repos/golang/tools/git/commits/f7f4b0b08a3ec1e3560fffa2d769052b12b5b1d2,f7f4b0b08a3ec1e3560fffa2d769052b12b5b1d2,"imports: update zstdlib to Go 1.8

Change-Id: I22d9e395bb901ba0c2d949a464228b46911c9405
Reviewed-on: https://go-review.googlesource.com/37139
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
davidrjenni,2016-11-04 18:56:24,https://api.github.com/repos/golang/tools/git/commits/be0fcc31ae2332374e800dfff29b721c585b35df,be0fcc31ae2332374e800dfff29b721c585b35df,"x/tools/go: gofmt -s -w

Change-Id: I978b981d95909f2590c1e1db05e8a95e232a67d5
Reviewed-on: https://go-review.googlesource.com/32794
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2016-11-04 18:52:17,https://api.github.com/repos/golang/tools/git/commits/598477199528f7aa7f2e4309d72c0510f27975a9,598477199528f7aa7f2e4309d72c0510f27975a9,"x/tools/godoc: gofmt -s -w

Change-Id: Ic14a0ec2782b52a0dfe7e892af9f5549f92cb2ec
Reviewed-on: https://go-review.googlesource.com/32791
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2016-11-04 19:00:22,https://api.github.com/repos/golang/tools/git/commits/cc429c273cd11acc8843970a38b022a8e485fb6e,cc429c273cd11acc8843970a38b022a8e485fb6e,"x/tools/cmd/guru: gofmt -s -w

Change-Id: Idf3d1865b0c349ad45d983fac1c52e7729bf0069
Reviewed-on: https://go-review.googlesource.com/32793
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2017-02-09 19:54:08,https://api.github.com/repos/golang/tools/git/commits/6e7ee5a9ec598d425ca86d6aab6e76e21baf328c,6e7ee5a9ec598d425ca86d6aab6e76e21baf328c,"x/tools: support Go 1.9 type aliases

For #18130.

Change-Id: Ice695602619dbbf851af970e790f07ff2ac2c141
Reviewed-on: https://go-review.googlesource.com/36623
Reviewed-by: Robert Griesemer <gri@golang.org>"
haya14busa,2017-02-09 09:39:36,https://api.github.com/repos/golang/tools/git/commits/8524ce5143c569852232960af38dc05cad8c6189,8524ce5143c569852232960af38dc05cad8c6189,"imports, go/ast/astutil: do not make grouped imports non-grouped when removing

	import (
		""fmt""
		""strings""
	)

When deleting ""fmt"" import statement, code should be converted to the
following code.

	import (
		""strings""
	)

Instead of

	import ""strings""

Diff becomes nicer by this change and it avoids that rewriting grouped
imports non-grouped may result in confusion comments.

Example:

	// comment 1
	import (
		""fmt""
	        // comment 2
		""strings""
	)

should be

	// comment 1
	import (
	        // comment 2
		""strings""
	)

instead of

	// comment 1
        // comment 2
	import ""strings""

Fixes golang/go#18051

Change-Id: I3c07b70b657191eacf83c3197a965e587286c950
Reviewed-on: https://go-review.googlesource.com/36853
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>
Reviewed-by: Robert Griesemer <gri@golang.org>"
haya14busa,2017-02-12 17:06:11,https://api.github.com/repos/golang/tools/git/commits/13507735c40b4afd2626062b27c40578748f7f95,13507735c40b4afd2626062b27c40578748f7f95,"imports: fix formatting directive error found by go vet

Change-Id: Ib702ecf928b84bfc18ec250adc1d3670c66cfead
Reviewed-on: https://go-review.googlesource.com/36852
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
haya14busa,2017-02-09 09:43:25,https://api.github.com/repos/golang/tools/git/commits/44492e23b4afd3e75591994228422613777ee4ee,44492e23b4afd3e75591994228422613777ee4ee,"cmd/goimports: use actual filename in goimports -d output

Port of gofmt change at golang/go#18932 with golang/go#18999 fix

Change-Id: I8999d6a3e04946086dd159201dbc4b09338bf1c0
Reviewed-on: https://go-review.googlesource.com/36644
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
tedkornish,2017-01-18 18:52:36,https://api.github.com/repos/golang/tools/git/commits/396c176f119e89f957290de823600e03660610ce,396c176f119e89f957290de823600e03660610ce,"godoc: preserve ?m=... query string

Right now, clicking around packages in the godoc web interface strips
the URL of any query strings it may have, which makes traversing
internal packages a clumsy experience (constantly have to re-add ?m=...).

This revision preserves the ?m=... flag in links between packages by examining
the current PageInfoMode and converting it to a query string.

Change-Id: I4e28279d8cbf221bcc7d5bce8de04c90cc907678
Reviewed-on: https://go-review.googlesource.com/34982
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
broady,2017-02-07 18:29:28,https://api.github.com/repos/golang/tools/git/commits/19c96be7c450e3dff3797cb1e458414c15010358,19c96be7c450e3dff3797cb1e458414c15010358,"static: fix playground share

Change-Id: I5decba3efb750e32fbc07ac1093cd37a00b65912
Reviewed-on: https://go-review.googlesource.com/36488
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
alandonovan,2017-02-07 20:33:46,https://api.github.com/repos/golang/tools/git/commits/b56ef3019149200a915fa9c35a15368723d7a75e,b56ef3019149200a915fa9c35a15368723d7a75e,"tools: updates for minimum Go version 1.6

Details:
- remove go1.5 ""default version"" labels on most files
- remove go1.6 labels on a few files
- go/loader: use conf.Cwd not ""."" in a couple places; update faulty
  test expectations.  (Not sure why this wasn't caught sooner.)
- go/ssa/interp: add 'mono' result to time.now intrinsic
- go/gcimporter15/bimport.go: make consistent with the version in gc
- go/ssa/interp: update test error message
- go/ssa: update a comment

The go/gcimporter15/bexport.go logic is stale and needs to be brought
up to date.  Needs a separate CL since it's tricky.

Tested on go1.6, go1.7, go1.8.

Change-Id: I841189d30e131b7c49a4e8690ea7c40b55041bae
Reviewed-on: https://go-review.googlesource.com/36540
Reviewed-by: Robert Griesemer <gri@golang.org>"
broady,2017-02-07 18:29:28,https://api.github.com/repos/golang/tools/git/commits/69cfa789611bdb3e17152c1e81fc4a5a8bfcf863,69cfa789611bdb3e17152c1e81fc4a5a8bfcf863,"static: add optional save shortcut support to playground

If enabled (via the ""enableShortcuts"" option), Ctrl+S/Cmd+S now
saves/shares the playground snippet and initiates a download.

Credit to Alexander Kucherenko (see golang.org/cl/35950).

Updates golang/go#15378.

Change-Id: I8a2d733c25e4c95787fbe1f5ac00fa1befbb4693
Reviewed-on: https://go-review.googlesource.com/36486
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2017-02-07 19:22:38,https://api.github.com/repos/golang/tools/git/commits/1977f1cf7df3172b930129929a3ec075da9d2967,1977f1cf7df3172b930129929a3ec075da9d2967,"go/ssa/interp: remove old TODO

Change-Id: Ia518721769048a5f7413eb90265cc27128cc9c10
Reviewed-on: https://go-review.googlesource.com/36537
Reviewed-by: Robert Griesemer <gri@golang.org>"
lazyhackeratwork,2017-02-07 00:07:17,https://api.github.com/repos/golang/tools/git/commits/f5bb18ad35b61d4b6afef07c2634c8f21adf131e,f5bb18ad35b61d4b6afef07c2634c8f21adf131e,"cmd/godoc: add better user error messages

Fixes golang/go#14280

Change-Id: I3151a17ce9553d0a7fe56c2d614e3a6f6a96344c
Reviewed-on: https://go-review.googlesource.com/36472
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kaueraal,2017-02-03 14:50:12,https://api.github.com/repos/golang/tools/git/commits/bd1cf89d8f275c6b69675f9a05d48b1573805ea5,bd1cf89d8f275c6b69675f9a05d48b1573805ea5,"blog/atom: support atom:link as in RFC4287 4.2.7

Change-Id: Id704a4b1f0deca1e9b090dd1fc21e7b1b55478ec
Reviewed-on: https://go-review.googlesource.com/36281
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2017-02-04 03:16:49,https://api.github.com/repos/golang/tools/git/commits/1a60337c22bc70e65519850cdb17b96fde550e8d,1a60337c22bc70e65519850cdb17b96fde550e8d,"godoc/static: clean up the expandos code that handles the hash

Change-Id: I14e6777f781253a574f76c7d8a345d248b5a4306
Reviewed-on: https://go-review.googlesource.com/36320
Reviewed-by: Russ Cox <rsc@golang.org>"
griesemer,2017-02-01 22:41:46,https://api.github.com/repos/golang/tools/git/commits/7e08f6711b5baef141eabd919245020d7e1004a6,7e08f6711b5baef141eabd919245020d7e1004a6,"godoc: run TestStructField for Go 1.7 and up only (fix build)

There's no testing.T.Run method in Go 1.6.

Change-Id: I0ed7bdbe91d4cc4406ad5626dbae9acc42b4853a
Reviewed-on: https://go-review.googlesource.com/36119
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2017-02-01 21:49:24,https://api.github.com/repos/golang/tools/git/commits/b55a2aaa40217fc1670db8afd0f03e877bc19f4b,b55a2aaa40217fc1670db8afd0f03e877bc19f4b,"go/internal/gccgoimporter: add missing testfile (fix 1.9 build)

Change-Id: Icba8d6917dcac4b8f541fc11305981539a12924a
Reviewed-on: https://go-review.googlesource.com/36116
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Matthew Dempsky <mdempsky@google.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
zchee,2017-01-25 19:08:12,https://api.github.com/repos/golang/tools/git/commits/f8ed2e405fdcbb42c55233531ad98721e6d1cb3e,f8ed2e405fdcbb42c55233531ad98721e6d1cb3e,"cmd/guru: fix typo of 'hyphen' to rename to 'comma'

start|end byte offset separator is not hyphen(-), actually comma(,)

Change-Id: I344ae74d33863e9456e8cdb2f058fd70f1eedf95
Reviewed-on: https://go-review.googlesource.com/35770
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2017-01-20 18:35:00,https://api.github.com/repos/golang/tools/git/commits/61efd71121b3bca48e6c4201c4c6a74a7adf5b47,61efd71121b3bca48e6c4201c4c6a74a7adf5b47,"godoc: fix quadratic and ASCII-only struct field linkification

Fixes two problems with adding the #StructType.FieldName anchors for
linkified struct fields:

* the old code was quadratic

* the old code only dealt with ASCII only

Change-Id: If03a367a94d05d3d470e1326dfb573037088ff78
Reviewed-on: https://go-review.googlesource.com/35486
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
ludi317,2017-01-22 15:50:54,https://api.github.com/repos/golang/tools/git/commits/721f218496963f33ebc9fbc5cdbdeed007ad9c49,721f218496963f33ebc9fbc5cdbdeed007ad9c49,"imports: remove unnecessary string conversion

This change remove an unnecessary string conversion of
a variable that is already a string.

Change-Id: I64d9a6c059276fa22f1be9f2dba02bbeb63cb8fb
Reviewed-on: https://go-review.googlesource.com/35560
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2017-01-17 23:39:01,https://api.github.com/repos/golang/tools/git/commits/fcfba28e23c7bbd8474b355ca7d6a9d88afcca00,fcfba28e23c7bbd8474b355ca7d6a9d88afcca00,"go/internal/gccgoimporter: support for type aliases

This is essentially a copy of the changes in https://golang.org/cl/35268/
but with Go1.9 specific tests factored out into a separate file with build
tag.

For golang/go#18130.

Change-Id: I235693e1bc6145bb53bfd3b343647704c8e82e61
Reviewed-on: https://go-review.googlesource.com/35269
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
broady,2017-01-18 20:06:52,https://api.github.com/repos/golang/tools/git/commits/add1aac04e65808e1f3ea9969c10e4494fd39d93,add1aac04e65808e1f3ea9969c10e4494fd39d93,"static: don't use the jQuery func for looking up based on hash

$.find is safer.

Change-Id: I51893b64ce804ac5a70f780a1255af2c91413110
Reviewed-on: https://go-review.googlesource.com/35430
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
gulyasm,2017-01-15 20:31:16,https://api.github.com/repos/golang/tools/git/commits/608c3b098abba448c9e25b436e2c0e0c937311d6,608c3b098abba448c9e25b436e2c0e0c937311d6,"present: fix typo

Fixes golang/go#18670.

Change-Id: Ia4e0d6b1d8fd78a165e31e72c17f520850da7a3f
Reviewed-on: https://go-review.googlesource.com/35258
Reviewed-by: Minux Ma <minux@golang.org>"
griesemer,2016-12-22 22:50:28,https://api.github.com/repos/golang/tools/git/commits/0d047c8d5a8c3a1c89d9d78511f4ed7aef49ea0c,0d047c8d5a8c3a1c89d9d78511f4ed7aef49ea0c,"cmd/godex: handle printing of type aliases

Also: remove go1.5 build tags (x/tools requires Go 1.6 or higher).

For golang/go#18130.

Change-Id: I3d9deee9e87d8794b2884281c0bb53caa5ed6221
Reviewed-on: https://go-review.googlesource.com/35106
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2017-01-10 22:30:26,https://api.github.com/repos/golang/tools/git/commits/de557280a1356eaf02f30918562e425b6c7a5ca8,de557280a1356eaf02f30918562e425b6c7a5ca8,"go/gcimporter15: update import/export to handle type aliases

- bimport.go is a 1:1 copy of the respective version in the std
  library: $GOROOT/src/go/internal/gcimporter/bimport.go .

- bexport.go is mimicking the respective code in the cmd/compile.

- isAlias18/19.go are needed because types.TypeName.IsAlias does
  not exist before Go 1.9.

Tested against Go 1.6, 1.7, 1.8, 1.9 (dev.typealias branch).

For golang/go#18130.

Change-Id: Ic46c5850923fab2a35d4dc33850f2b0667c30398
Reviewed-on: https://go-review.googlesource.com/35104
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
broady,2017-01-10 22:20:17,https://api.github.com/repos/golang/tools/git/commits/5d76f8ce4fe6027ed92e3f05471193f1f595906d,5d76f8ce4fe6027ed92e3f05471193f1f595906d,"static: detect platform to hide/show unix/windows instructions

Currently both ""testUnix"" and ""testWindows"" elements are shown simultaneously.
This change detects the correct platform to hide/show the appropriate
elements based on the viewer's browser.

Change-Id: I3afee7507d61b2d756127166caede85adcd531b8
Reviewed-on: https://go-review.googlesource.com/35103
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mvdan,2017-01-07 18:41:16,https://api.github.com/repos/golang/tools/git/commits/116266f628c17291116b53f99f0bd7f2773bf30c,116266f628c17291116b53f99f0bd7f2773bf30c,"godoc: remove some unused code

Run goimports while at it.

Change-Id: Ia3fea40835deb88bba0bb72c605bf02a6e407c88
Reviewed-on: https://go-review.googlesource.com/34953
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
kevinburke,2017-01-07 23:09:41,https://api.github.com/repos/golang/tools/git/commits/cb538dbcf8433b41e56e07ccae2256c5632c555c,cb538dbcf8433b41e56e07ccae2256c5632c555c,"godoc: add README

Explain how to make changes to the project's static files and get them compiled
in to the godoc binary.

Change-Id: I12e0c50bf31925b3f211b6d0dd3e5f8cff547f32
Reviewed-on: https://go-review.googlesource.com/34925
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kevinburke,2017-01-07 20:01:25,https://api.github.com/repos/golang/tools/git/commits/b54fdb7e522e703b17aad527c6cbfd193ffade55,b54fdb7e522e703b17aad527c6cbfd193ffade55,"godoc: don't select line numbers in orange

Previously a selection of text that spanned multiple lines would
include the line number as part of the orange highlight. This is
misleading (the line numbers aren't copied when you highlight the
text with your mouse) and a little ugly.

I had to move the tab character inside the <span class=""ln""> block,
otherwise the orange highlight goes right up to the number, which is
off-putting and means the orange highlights don't line up vertically.

Before: https://monosnap.com/file/F9L166Zxxnf3ev74Z3JoJT0xz0nYLn.png
After: https://monosnap.com/file/6jfeFBG6tzhy3ZErqYWn6BfZ4fyk1R.png

Fixes golang/go#18561

Change-Id: I312d30ce01071850f8724246c54ce2d7259619d2
Reviewed-on: https://go-review.googlesource.com/34924
Run-TryBot: Matt Layher <mdlayher@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Matt Layher <mdlayher@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mvdan,2017-01-07 18:45:34,https://api.github.com/repos/golang/tools/git/commits/354f9f8b43608012e8192f2e8d9e13c615df5c34,354f9f8b43608012e8192f2e8d9e13c615df5c34,"cmd/cover: check os.Create error im html output

The error was being written over by Execute.

Change-Id: Id5965542bf4d414043fdbe70ee3f2f790728c01d
Reviewed-on: https://go-review.googlesource.com/34954
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
broady,2017-01-06 18:27:24,https://api.github.com/repos/golang/tools/git/commits/8b89e95de3193f7363c912845b43a7c72d3e1d95,8b89e95de3193f7363c912845b43a7c72d3e1d95,"godoc/dl: change ""All versions"" to ""Archived versions""

This change makes each release show only once on the whole page.
The current stable releases are not shown under the archive.

This change also fixes expandos to work correctly on IDs that are not
valid CSS selectors (i.e., ""#go1.7.4"") to ensure that the file listing
for a given version is expanded.

Updates golang/go#17574.

Change-Id: I7ff1041be3e0072286772ffa545a124764f81945
Reviewed-on: https://go-review.googlesource.com/34911
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2017-01-05 23:28:34,https://api.github.com/repos/golang/tools/git/commits/2219f9c93eca043d840bc53c705a1f112078e1b7,2219f9c93eca043d840bc53c705a1f112078e1b7,"godoc/dl: clean up display of stable versions

Under ""Stable Versions"", only show the latest minor versions of the most two
recent major versions.

Under each of those versions, move the downloads for primary ports to
the top of the table and the other downloads under a separate
""Other Ports"" heading.

Add a listing for every stable Go version under ""All versions"",
collapsed by default.

Fixes golang/go#17574.
Updates golang/go#17018.

Change-Id: I7d74fef1b44a319a4bf65dedf24ffb27a7009f60
Reviewed-on: https://go-review.googlesource.com/34824
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2017-01-06 01:20:21,https://api.github.com/repos/golang/tools/git/commits/2d7295cc9f5678aa7c2c267c599ec6a1a6c1714b,2d7295cc9f5678aa7c2c267c599ec6a1a6c1714b,"godoc: allow nested toggles and toggles with <a name>

Toggles can now be nested within one another. They can also be
referenced using an <a> element with the name attribute, rather than
an element with the ""id"" attribute.

Updates golang/go#17574.

Change-Id: I43c17499a6879e983a79a74e14c99128296288e1
Reviewed-on: https://go-review.googlesource.com/34825
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2017-01-06 03:19:54,https://api.github.com/repos/golang/tools/git/commits/4e83100c599c933f49188cc82621bc9c3cbc9867,4e83100c599c933f49188cc82621bc9c3cbc9867,"static: add underlines back to links in blog body

Specifically restricted to the ""article"" class, which is only used on
the blog.

Fixes golang/go#18302.

Change-Id: I5988c3df70f0de93d77544edf091640b0c5df30c
Reviewed-on: https://go-review.googlesource.com/34828
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2017-01-05 23:26:00,https://api.github.com/repos/golang/tools/git/commits/e0896bc9b91643fb10d4a197facb5c26251409be,e0896bc9b91643fb10d4a197facb5c26251409be,"godoc/dl: add instructions for unstable ""go get""

Adds instructions for ""go get golang.org/x/build/version/...""
for the unstable version.

Fixes golang/go#18337.

Change-Id: Iea5e8fab7f00a053e3b42ef355277307addb635b
Reviewed-on: https://go-review.googlesource.com/34823
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
rsc,2016-12-20 20:06:13,https://api.github.com/repos/golang/tools/git/commits/908849c3379245f71612058fbf92cf6bf58c3c75,908849c3379245f71612058fbf92cf6bf58c3c75,"cmd/godoc: add perf subrepo

For golang/go#14304.

Change-Id: Ia90193d3a9ad027231f977ffa6b66cf60ea40683
Reviewed-on: https://go-review.googlesource.com/34615
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
rsc,2016-12-01 05:23:15,https://api.github.com/repos/golang/tools/git/commits/c6da36ac37fa479a14a014100585889997f4daf8,c6da36ac37fa479a14a014100585889997f4daf8,"cmd/tip: update tools hash to include CL 33662

Change-Id: Ifab1436d10b5b738a3386969cb41b7353711c3a5
Reviewed-on: https://go-review.googlesource.com/34690
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
griesemer,2016-12-13 20:47:37,https://api.github.com/repos/golang/tools/git/commits/ae0208420024a4690a48068625e8fe111e8cb448,ae0208420024a4690a48068625e8fe111e8cb448,"godoc: flip order of signature and doc string for functions and methods

This partially reverts https://go-review.googlesource.com/#/c/33279/
(which moved doc strings above the declaration for all kinds of objects)
by moving the doc string for functions and methods below the signature
where they traditionally were.

Fixes golang/go#18150.

Change-Id: Icbb9e7edcb3b34ad1d900acb3180217abdc56a16
Reviewed-on: https://go-review.googlesource.com/34332
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
kevinburke,2016-12-11 04:50:47,https://api.github.com/repos/golang/tools/git/commits/0a14ca4e16cec5dfac9208167b18539631488a10,0a14ca4e16cec5dfac9208167b18539631488a10,"godoc: don't select line numbers when highlighting source code

CSS3 introduces the user-select property, which you can use to prevent snippets
of text from being highlighted. This is also the technique used by Github to
avoid highlighting line numbers when highlighting source code.

For more information, see:

https://developer.mozilla.org/en-US/docs/Web/CSS/user-select
https://www.w3.org/TR/1999/WD-css3-userint-19990916#user-select

Fixes golang/go#18279

Change-Id: Ia5eb68d5a042d6ee2a1c8e7bbad753a35de5c487
Reviewed-on: https://go-review.googlesource.com/34278
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
kevinburke,2016-12-12 19:16:46,https://api.github.com/repos/golang/tools/git/commits/7932c3d4c815fb3eb39a35ff33622a7eeb8c436f,7932c3d4c815fb3eb39a35ff33622a7eeb8c436f,"godoc: Regenerate static/static.go

Picks up changes made in previous commits.

Change-Id: I8edc9e0a512e4d687c471274faaa06e0b40ea657
Reviewed-on: https://go-review.googlesource.com/34283
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2016-12-10 19:39:41,https://api.github.com/repos/golang/tools/git/commits/7d72743fcee8196243e764bcff70047b6c3ce126,7d72743fcee8196243e764bcff70047b6c3ce126,"playground/socket: deflake test, remove sleep

Fixes golang/go#18275

Change-Id: Iedb0a21a3fe0b383a2e51fc92076d7fd005d71e6
Reviewed-on: https://go-review.googlesource.com/34277
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
bradfitz,2016-12-10 02:10:40,https://api.github.com/repos/golang/tools/git/commits/a888bfdffa4526cc6987572bca9a2c6b7758290f,a888bfdffa4526cc6987572bca9a2c6b7758290f,"go/loader: fix broken tests after context removal from testing package

Updates golang/go#11811
Updates golang/go#18199

Change-Id: I2ce4615653034563a64b9c126651d2a6ce2aef50
Reviewed-on: https://go-review.googlesource.com/34274
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Joe Tsai <thebrokentoaster@gmail.com>"
alandonovan,2016-12-07 15:57:27,https://api.github.com/repos/golang/tools/git/commits/3d92dd60033c312e3ae7cac319c792271cf67e37,3d92dd60033c312e3ae7cac319c792271cf67e37,"go/internal/gccgoimporter: handle conversions in exported const values

Same as https://go-review.googlesource.com/c/33412/ in the standard library.

Fixes #17981.

Change-Id: Iaf47872840a4456d824ed5d7b3eda205c043e4cf
Reviewed-on: https://go-review.googlesource.com/34110
Reviewed-by: Robert Griesemer <gri@golang.org>"
stamblerre,2016-12-06 00:28:20,https://api.github.com/repos/golang/tools/git/commits/99be5a0b85664c12d36a536b14d0d0b85c74da45,99be5a0b85664c12d36a536b14d0d0b85c74da45,"go/buildutil, cmd/guru: resolve symlinks in filenames through build.Context

Resolve symlinks in source directories (GOPATH, GOROOT, etc.) and source
files in order to find correct package. All I/O performed through
build.Context. Also add minor fix to guru unit tests in order to pass on
Windows.

Change-Id: Ie6134b9cd74eb7386e1d93603eb37c8e44b083b8
Reviewed-on: https://go-review.googlesource.com/33924
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2016-12-05 23:37:18,https://api.github.com/repos/golang/tools/git/commits/4073e786f5785dfee3ace4b073478182db51e73b,4073e786f5785dfee3ace4b073478182db51e73b,"cmd/guru: avoid testing symlinks on OSes that do not support them

Add condition to prevent unit tests from checking cases with symlinks on
Windows and Plan 9.

Change-Id: Idc41db94a04a0daab556a26390db3f75ded7be73
Reviewed-on: https://go-review.googlesource.com/33923
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2016-12-05 22:44:22,https://api.github.com/repos/golang/tools/git/commits/ae1141fc8b3e38d9e074b383af516745815897c3,ae1141fc8b3e38d9e074b383af516745815897c3,"Revert ""go/buildutil: handle symlinks in filenames""

Reason: ContainingPackage should do all I/O through build.Context.

This reverts commit 3a9a2cbbc44c28889bacca49eb91cdd645eb8fe5.

Change-Id: I3897d8da5026ddc470989e3f239540286e89df4d
Reviewed-on: https://go-review.googlesource.com/33922
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2016-12-05 22:40:03,https://api.github.com/repos/golang/tools/git/commits/07e766bf8100502835a79cfc4709adf8d8bddcb5,07e766bf8100502835a79cfc4709adf8d8bddcb5,"Revert ""go/buildutil, cmd/guru: fix tests for symlinks in guru and gorename to account for windows."" 

Reason: ContainingPackage must do all I/O through build.Context.

This reverts commit c945ee3be47cb14cbc5e48ff0572d967d772d8b9.

Change-Id: I625410bc754ea2d150be097bf424de2be42acde4
Reviewed-on: https://go-review.googlesource.com/33921
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2016-12-05 20:37:24,https://api.github.com/repos/golang/tools/git/commits/c945ee3be47cb14cbc5e48ff0572d967d772d8b9,c945ee3be47cb14cbc5e48ff0572d967d772d8b9,"go/buildutil, cmd/guru: fix tests for symlinks in guru and gorename to account for windows

Restructure tests to account for possibility of being run on Windows
(which doesn't handle symlinks).

Change-Id: I428db26c9a1aad337d8972baa2b71468be3a2e58
Reviewed-on: https://go-review.googlesource.com/33920
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2016-12-05 17:47:36,https://api.github.com/repos/golang/tools/git/commits/3a9a2cbbc44c28889bacca49eb91cdd645eb8fe5,3a9a2cbbc44c28889bacca49eb91cdd645eb8fe5,"go/buildutil: handle symlinks in filenames

Resolve symlinks in source directories (GOPATH, GOROOT, etc.) and source
files in order to find correct package.

Fixes golang/go#16219

Change-Id: I6fae14908827d5ebac55dfe455eaf616f71f8767
Reviewed-on: https://go-review.googlesource.com/33919
Reviewed-by: Alan Donovan <adonovan@google.com>"
zmb3,2016-12-05 15:18:38,https://api.github.com/repos/golang/tools/git/commits/8462b1669fefea1e1b88d7bce510d5b684996224,8462b1669fefea1e1b88d7bce510d5b684996224,"go/buildutil: fix doc reference

Fix reference to OverlayContext in the doc for
ParseOverlayArchive.

Change-Id: I0b1db478489764fa309cb2e2f788865ac7ff71bb
Reviewed-on: https://go-review.googlesource.com/33916
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
stamblerre,2016-12-02 15:55:52,https://api.github.com/repos/golang/tools/git/commits/366e27042d04e36bdf2d0033252e4e29f958f175,366e27042d04e36bdf2d0033252e4e29f958f175,"cmd/guru: handle source file aliasing gracefully

Resolve symlinks in GOPATH or source file path in order to find correct package.

Fixes golang/go#17515

Change-Id: Iaf7e85578fce040b329427ce6f51948a69e57a39
Reviewed-on: https://go-review.googlesource.com/33858
Reviewed-by: Alan Donovan <adonovan@google.com>"
rsc,2016-11-29 18:39:51,https://api.github.com/repos/golang/tools/git/commits/e04df2157ae7263e17159baabadc99fb03fc7514,e04df2157ae7263e17159baabadc99fb03fc7514,"present: allow markup inside punctuation connected to other text

This allows markup bracketed by punctuation even when the
punctuation has text on the other side, like in:

- Markup—_especially_italic_text_—can easily be overused.
- We want to increase `go`vet`'s usage.

Change-Id: I0c6ca790f23f705d8c8ba8a225c0280b916ebb6c
Reviewed-on: https://go-review.googlesource.com/33662
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
bradfitz,2016-11-30 23:49:04,https://api.github.com/repos/golang/tools/git/commits/e5f9a3deee5b06348b13f525a32018b324159594,e5f9a3deee5b06348b13f525a32018b324159594,"godoc: update struct field anchor code

Now without regexps and allocations.

And also match comments like:

    // Foo, if non-nil, ...

The comma confused the old pattern.

Updates golang/go#16753

Change-Id: I9016ee7b5933ea343950a39989952804c74a598b
Reviewed-on: https://go-review.googlesource.com/33755
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
bradfitz,2016-11-30 23:15:23,https://api.github.com/repos/golang/tools/git/commits/0f86c627e2ba8f04cf5e285430eeac47139e0730,0f86c627e2ba8f04cf5e285430eeac47139e0730,"cmd/godoc: optional ACME autocert support

If built with the ""autocert"" build tag, use
golang.org/x/crypto/autocert and for automatic TLS certs.

This will be used for https://beta.golang.org/ running on GCE.

Change-Id: Id0e385796a25d663708ea9bb65c45cb1471dd526
Reviewed-on: https://go-review.googlesource.com/33751
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
bradfitz,2016-11-29 23:53:36,https://api.github.com/repos/golang/tools/git/commits/0f65b31aee0c0a77f4b223c295bca8d86b9581d8,0f65b31aee0c0a77f4b223c295bca8d86b9581d8,"godoc: make struct fields linkable in HTML mode

This adds <span id=""StructName.FieldName""> elements around
field names, starting at the comment if present, so people
can link to /pkg/somepkg/#SomeStruct.SomeField.

Fixes golang/go#16753

Change-Id: I4a8b30605d18e9e33e3d42f273a95067ac491438
Reviewed-on: https://go-review.googlesource.com/33690
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-30 18:53:12,https://api.github.com/repos/golang/tools/git/commits/34fe8ce027768604b4e8f1d457f2f2208fa7de1d,34fe8ce027768604b4e8f1d457f2f2208fa7de1d,"go/gcexportdata: better error when reading exportdata directly from archive

Change-Id: Iaa6fe8a33bee852be4e2414c6db7ca5df17006b6
Reviewed-on: https://go-review.googlesource.com/33715
Reviewed-by: Robert Griesemer <gri@golang.org>"
bradfitz,2016-11-30 00:12:53,https://api.github.com/repos/golang/tools/git/commits/b66e054640c8249b6bc92cebffaec2bcf8b5efd0,b66e054640c8249b6bc92cebffaec2bcf8b5efd0,"Revert ""refactor/eg: remove vendor prefix from imported packages""

This reverts commit c060f04f93f57c44284360be78bb323077183645.

Reason for revert: breaks the build. Nobody ran tests.

Change-Id: I981101eb503e8cebd6f7b5640299d106ca733b33
Reviewed-on: https://go-review.googlesource.com/33674
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
zmb3,2016-11-22 19:19:45,https://api.github.com/repos/golang/tools/git/commits/cbfb669053f449915d8520a0e5c87240ec4d3e13,cbfb669053f449915d8520a0e5c87240ec4d3e13,"refactor/rename: perform renaming in doc comments

Attempt to update doc comments when renaming an identifier.
This reduces the amount of manual steps that need to be taken
when using gorename.

All occurrences of the old identifier are updated in the doc.
The update is done  using a regex to ensure that we replace
whole word matches only.

Fixes golang/go#17994

Change-Id: I4265021b5b34cf7d70bf43ad6ceee74ec132f185
Reviewed-on: https://go-review.googlesource.com/33452
Reviewed-by: Alan Donovan <adonovan@google.com>"
rsc,2016-11-29 14:48:46,https://api.github.com/repos/golang/tools/git/commits/955e2aeb12f44792e648a8ab7cb997a2734f9bfd,955e2aeb12f44792e648a8ab7cb997a2734f9bfd,"cmd/present: fix indentation in template

No semantic change.
Pointed out by Dmitri Shuralyov on CL 33578.

Change-Id: Ic67f41e8dde8fc9bf624c98307a89bbe1f10e7f7
Reviewed-on: https://go-review.googlesource.com/33659
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
rsc,2016-11-29 03:02:19,https://api.github.com/repos/golang/tools/git/commits/76b6c242fbd3fa734fbfe26a653f14fd495cb03a,76b6c242fbd3fa734fbfe26a653f14fd495cb03a,"cmd/tip: update talks rev to pick up CL 33578

Change-Id: I5161f7ee490391a71a3c9a00017b2449705fcb7a
Reviewed-on: https://go-review.googlesource.com/33655
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
rsc,2016-11-27 18:49:31,https://api.github.com/repos/golang/tools/git/commits/f19f04f5492745c70cc5906b15b125b7a3d3b1a3,f19f04f5492745c70cc5906b15b125b7a3d3b1a3,"cmd/present: adjust article presentation

* Give the article title a larger, heavier font than any heading.
  It was strange that the title was 20px regular while the
  h1 section headings were 24px.

* Move the author attribution to the top of the page.
  Author at the bottom, like a signature, may make sense for blog posts,
  but I think it makes less sense for articles.

* Fix the spacing around author lines. Each author line is a <p>
  and the intent seemed to be to cut the vertical space between them
  but that wasn't working.

* Give the table of contents a title, to make clearer what it is.
  Do not show table of contents in printouts.

Change-Id: Iee940ca7697015281fc057750f5db56f70393836
Reviewed-on: https://go-review.googlesource.com/33578
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
broady,2016-11-28 23:24:11,https://api.github.com/repos/golang/tools/git/commits/c97d1a26237322aa3e2d0c0da76ce3c59c0fc3e0,c97d1a26237322aa3e2d0c0da76ce3c59c0fc3e0,"godoc: add on-hover permalink anchors across the site

We already have anchors for godoc types and functions. Add them for
every heading (and ""dl"") on every other page on the site.

Change-Id: Ibad77f04442e48dd5a41de759010625f89b48604
Reviewed-on: https://go-review.googlesource.com/33641
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-11-28 21:48:17,https://api.github.com/repos/golang/tools/git/commits/6c803ab014286e086881c410cba381b02317423c,6c803ab014286e086881c410cba381b02317423c,"go/loader: resolve imports in ""created"" packages w.r.t. parent dir not cwd

Fixes golang/go#16580

Change-Id: Id891f40659257eac9dbb0d70dae17f725e911f9b
Reviewed-on: https://go-review.googlesource.com/33589
Reviewed-by: Robert Griesemer <gri@golang.org>"
rhysh,2016-09-21 00:13:43,https://api.github.com/repos/golang/tools/git/commits/c060f04f93f57c44284360be78bb323077183645,c060f04f93f57c44284360be78bb323077183645,"refactor/eg: remove vendor prefix from imported packages

For package paths that include a ""vendor"" segment, use only the
portion of the path that comes after the final ""vendor"" segment, as
is done by the imports package.

Fixes golang/go#17247

Change-Id: Ic83c4662cfddd1a696c206494b3a869e8c7dff5c
Reviewed-on: https://go-review.googlesource.com/29851
Reviewed-by: Alan Donovan <adonovan@google.com>"
jordanlewis,2016-11-28 17:04:18,https://api.github.com/repos/golang/tools/git/commits/ebf631f91765900b0af5a2010d1ee5e471db6b49,ebf631f91765900b0af5a2010d1ee5e471db6b49,"cmd/goyacc: quadruple the max states and actions

This commit quadruples the maximum number of states and the size of the
action table to allow for larger grammars.

Fixes golang/go#11517

Change-Id: Ieb64efa8e3402ae1a5a9190710f98a44195ecd1b
Reviewed-on: https://go-review.googlesource.com/33585
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2016-11-28 18:15:10,https://api.github.com/repos/golang/tools/git/commits/574d60b05ac3e9405ebcd6a5a31e72fe68b9d229,574d60b05ac3e9405ebcd6a5a31e72fe68b9d229,"refactor/rename: skip TestDiff on plan9, whose diff has no -u

Change-Id: I372591ad3f2804dcd20f0ab3b5a91ddda762cba8
Reviewed-on: https://go-review.googlesource.com/33586
Reviewed-by: Robert Griesemer <gri@golang.org>"
adonovan,2016-11-12 18:00:25,https://api.github.com/repos/golang/tools/git/commits/89662b06bc9e3784fabd6ab12a41e06d45e05c2b,89662b06bc9e3784fabd6ab12a41e06d45e05c2b,"go/ssa/interp: add several intrinsics for Darwin

Also: drop all pretense of support for platforms other than darwin and linux.
This package is just a test of go/ssa, not a portable interpreter, and these
are the only platforms to which I have easy access.

Builds on: freebsd darwin plan9 linux windows

Change-Id: I965abc67b1280d33e933b83607a4372d65e070cf
Reviewed-on: https://go-review.googlesource.com/33163
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-23 22:43:09,https://api.github.com/repos/golang/tools/git/commits/167995c67fa45f3a7fc8dab62bb872212e397c11,167995c67fa45f3a7fc8dab62bb872212e397c11,"go/ssa: avoid no-arg println(), for gccgo compatibility

Change-Id: I5f789ae492ff0f0ad62d89e3ae762ece6c867d20
Reviewed-on: https://go-review.googlesource.com/33573
Reviewed-by: Alan Donovan <adonovan@google.com>"
luigi-riefolo,2016-11-17 02:10:15,https://api.github.com/repos/golang/tools/git/commits/a829d47117efb998a07c14b4a06857f6d5e216e3,a829d47117efb998a07c14b4a06857f6d5e216e3,"cmd/godoc: show comment before code block

The existing implementation shows a comment after its code block.
This causes confusion regarding how the comment relates to a code block.
Comments have been moved before their relative code blocks.

Fixes golang/go#16728

Change-Id: Ie07a6dd2f340a2555513662f263d26377060f93b
Reviewed-on: https://go-review.googlesource.com/33279
Reviewed-by: Alan Donovan <adonovan@google.com>"
stamblerre,2016-11-17 21:44:22,https://api.github.com/repos/golang/tools/git/commits/e64f1a4c635f3f65c068836f76a56f6d50be7fb7,e64f1a4c635f3f65c068836f76a56f6d50be7fb7,"cmd/guru: add workaround to handle inconsistency between go/types and gc

Add identical workaround from gorename to guru. Only affects queries
that typecheck the code first.

Fixes golang/go#16530

Change-Id: I718cfceb8d26868eea9128c8873b164333c50f53
Reviewed-on: https://go-review.googlesource.com/33359
Reviewed-by: Alan Donovan <adonovan@google.com>"
broady,2016-11-15 21:43:08,https://api.github.com/repos/golang/tools/git/commits/8b84dae17391c154ca50b0162662aa1fc9ff84c2,8b84dae17391c154ca50b0162662aa1fc9ff84c2,"godoc/dl: remove the tiny, unselectable SHA sums from Featured Downloads

The SHA sums are clearly visible (and copy-pastable) in the expanded section
immediately below it.

Fixes golang/go#16900.

Change-Id: If1805534b3893f6c38f4170c4b457ff0e935ce28
Reviewed-on: https://go-review.googlesource.com/33290
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-11-11 21:39:39,https://api.github.com/repos/golang/tools/git/commits/5e2ae75eb72a62985e086eed33a5982a929e4fff,5e2ae75eb72a62985e086eed33a5982a929e4fff,"go/ssa/interp: add syscall.Readlink intrinsic, needed by os package

Change-Id: Ie408fd5ffb2be2d60773eb3fda91912887df0a7e
Reviewed-on: https://go-review.googlesource.com/33147
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-11 21:06:02,https://api.github.com/repos/golang/tools/git/commits/22ba3f367cb7983f78ca68a0be06b92c5d316797,22ba3f367cb7983f78ca68a0be06b92c5d316797,"go/gcimporter15: pretend blank fields have same owner

The export data formats (text and binary) emitted by gc in Go 1.7 did
not record the package that ""owns"" each blank field, even though blank
is an unexported identifier.  Before, gcimporter would assume the
package of the export data file owns blank fields within it, even
blank fields reexported from another package.  As a result, identical
types would become nonidentical during reexporting.

For bug compatibility with gc, gcimporter now treats blank fields as
if they all belong to the same dummy package, avoiding spurious ""can't
assign A to B"" errors in tools based on go/types.

Change-Id: I0dbf71491a0ec0f376e9dc8a91efe0376c855a28
Reviewed-on: https://go-review.googlesource.com/33146
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-11-11 00:18:58,https://api.github.com/repos/golang/tools/git/commits/a69656e0e2d271df86336e3f498cf180de2be9c4,a69656e0e2d271df86336e3f498cf180de2be9c4,"go/gcimporter: update export data format version

We already are compatible with the latest format. Update version.

Tested against 1.6, 1.7, and tip.

Fixes golang/go#17734.

Change-Id: Ia167adf0ed1de371c348329513819fb9e8ca2628
Reviewed-on: https://go-review.googlesource.com/33113
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-11-11 00:03:20,https://api.github.com/repos/golang/tools/git/commits/c959b77b386df1ec8bf3a488b0915aece12b9c41,c959b77b386df1ec8bf3a488b0915aece12b9c41,"go/gcimporter15: update build tags and comments

We don't support Go1.5 anymore.

Tested with 1.6, 1.7, and tip.

For golang/go#17734.

Change-Id: I718c7996b99f9b98744346e119ee209b4709a070
Reviewed-on: https://go-review.googlesource.com/33111
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-11-09 17:56:38,https://api.github.com/repos/golang/tools/git/commits/5061f921c7c3e66b68ad903adf57da380c327b8c,5061f921c7c3e66b68ad903adf57da380c327b8c,"go/gccgoexportdata: correctly handle archive files containing string tables

If the name of an archive member is longer than 16 bytes, an ELF archive
file contains a string table of file names under the name ""//"", and this
member has no mode.  Skip such members.

+ Test.

Change-Id: Ib10db1cc42816c9002433be6176240e490678560
Reviewed-on: https://go-review.googlesource.com/32973
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
josharian,2016-11-08 20:45:54,https://api.github.com/repos/golang/tools/git/commits/44b4c5d044d148f4248b0188ff5ea3e57cfedbc5,44b4c5d044d148f4248b0188ff5ea3e57cfedbc5,"cmd/toolstash: fix format string arguments

Found by vet.

Follow-up to comments on CL 32682.

Change-Id: I76391e02b9991bc480404f634ea809e75645e9dc
Reviewed-on: https://go-review.googlesource.com/32918
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-11-08 02:18:49,https://api.github.com/repos/golang/tools/git/commits/7ce0cddaad4247e6e07aae35a9f7b2fdc136180e,7ce0cddaad4247e6e07aae35a9f7b2fdc136180e,"go/ssa: synthesize Go 1.8-compatible test main package

...to match the new interface between ""go test"" and the standard testing
package.

Rather than generate SSA code directly, which was tricky and fragile, we
now generate source just as ""go test"" does, type-check it, and build an
SSA package from it.  crawshaw suggested I do this in the very first
version of testmain.go, but at the time I believed it to be infeasible.

The testMainStartBodyHook mechanism has gone away; installations that
needed it can now achieve the same results more easily by overriding the
templates.

Tested with Go 1.6, 1.7 and 1.8.

Fixes golang/go#17722

Change-Id: I3ffd25f01157f6fb7a39acd18af46f17e9c07b99
Reviewed-on: https://go-review.googlesource.com/32888
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-11-04 22:17:09,https://api.github.com/repos/golang/tools/git/commits/46c63f3841d8992b4f0ca9f8fdb91b652de1980c,46c63f3841d8992b4f0ca9f8fdb91b652de1980c,"go/gcimporter15: revert user-visible changes related to aliases

Reason: Decision to back out current alias implementation.
For golang/go#16339 (comment).

Change-Id: Id2a394d78a8661c767bcc05370b81f79d9bfb714
Reviewed-on: https://go-review.googlesource.com/32756
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Chris Manghane <cmang@golang.org>
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
alandonovan,2016-11-04 21:43:38,https://api.github.com/repos/golang/tools/git/commits/58ec10c513dfc49286c140a86ef22d01e77662a6,58ec10c513dfc49286c140a86ef22d01e77662a6,"go/ssa/interp: handle nil *hashmap cleanly

Change-Id: I2cb8eef79bc011b209b3df0b859bcddefd4c8337
Reviewed-on: https://go-review.googlesource.com/32818
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 21:35:38,https://api.github.com/repos/golang/tools/git/commits/2e348630fdff451a3c77f37a21d4385fa0d61228,2e348630fdff451a3c77f37a21d4385fa0d61228,"go/loader: fix fragile example test

Change-Id: Ib6313cdba54da8911b8a2ec9e1bc115c30ea6afe
Reviewed-on: https://go-review.googlesource.com/32817
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 21:23:57,https://api.github.com/repos/golang/tools/git/commits/701d65734755b49d3c1409ace1c239c203242c0e,701d65734755b49d3c1409ace1c239c203242c0e,"tools: remove go1.8-tagged files

Change-Id: Ib52b85e1c981b6fca55c472120371a0cd37d2dc9
Reviewed-on: https://go-review.googlesource.com/32816
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 21:20:28,https://api.github.com/repos/golang/tools/git/commits/be0bbf23993c6f01530ad67f2b509d0178e5b30f,be0bbf23993c6f01530ad67f2b509d0178e5b30f,"refactor/...: remove go1.8-tagged files

Change-Id: I7df485b71ba87670d9e70e5b44e2110fd8f6a815
Reviewed-on: https://go-review.googlesource.com/32815
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 21:04:32,https://api.github.com/repos/golang/tools/git/commits/fe1fa3830036f3098bef89f44235bf4605e63b24,fe1fa3830036f3098bef89f44235bf4605e63b24,"go/ssa: remove go1.8 tagged files

Change-Id: Iac37a0dba27459f0484aa4e286c21bb618116619
Reviewed-on: https://go-review.googlesource.com/32836
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 20:53:39,https://api.github.com/repos/golang/tools/git/commits/0e041570ebf5201568b40f865326915758594c2d,0e041570ebf5201568b40f865326915758594c2d,"cmd/guru: revert support for Go 1.8 aliases

Change-Id: I8ba368d5036be47b6d64e3576f366eb0301d2d5b
Reviewed-on: https://go-review.googlesource.com/32831
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 20:55:43,https://api.github.com/repos/golang/tools/git/commits/188d338f0b75ae87bebfff5d1383cbc407e936a9,188d338f0b75ae87bebfff5d1383cbc407e936a9,"godoc: revert support for Go 1.8 aliases

Change-Id: Ibb3afede1121bd53567f3ff70b886b02dd81399f
Reviewed-on: https://go-review.googlesource.com/32832
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 21:02:15,https://api.github.com/repos/golang/tools/git/commits/e2e4d7aa62866e266601e2089c80d5306c2efd92,e2e4d7aa62866e266601e2089c80d5306c2efd92,"go/ast/astutil: revert support for Go 1.8 type aliases

This reverts commit 50193ec1c508c7b5714160a9c0979366fbbcabb4.

Reason for revert: aliases will not be part of Go 1.8

Change-Id: Idb3b74243eeb8dbeb2a2f4bd69a248c1dafa5348
Reviewed-on: https://go-review.googlesource.com/32835
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 20:59:37,https://api.github.com/repos/golang/tools/git/commits/d268a2ba768ea9d3b8ff1a51d170da48a067a16e,d268a2ba768ea9d3b8ff1a51d170da48a067a16e,"imports: revert support for Go 1.8 aliases

Change-Id: I8f7c0ff2c544fa51686b2e178ba82a486398651c
Reviewed-on: https://go-review.googlesource.com/32834
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-04 20:56:47,https://api.github.com/repos/golang/tools/git/commits/8cbea6846d314f8052fdf23e47b6e06ac000608a,8cbea6846d314f8052fdf23e47b6e06ac000608a,"cmd/bundle: revert support for Go 1.8 aliases

Change-Id: I2b3bcc7653507e392b243dbe0610adc6be6967bd
Reviewed-on: https://go-review.googlesource.com/32833
Reviewed-by: Robert Griesemer <gri@golang.org>"
josharian,2016-11-04 00:17:27,https://api.github.com/repos/golang/tools/git/commits/c74ac01963d19af894026dbcfb7f421906a57d8f,c74ac01963d19af894026dbcfb7f421906a57d8f,"cmd/toolstash: adapt to golang.org/x/tools

This repo already contains an identical LICENSE.
The README adds little, particularly in golang.org/x.
Update the custom import path comment.

Change-Id: I23fb5e31df6ff4828d298d44dc30dca901b0627b
Reviewed-on: https://go-review.googlesource.com/32682
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
josharian,2016-11-04 00:09:50,https://api.github.com/repos/golang/tools/git/commits/133d2e05a6f22bbda4616960360deba6b97ef209,133d2e05a6f22bbda4616960360deba6b97ef209,"cmd/toolstash: import from rsc.io

This CL copies rsc.io/toolstash verbatim at commit
7508e1dd47d11b2fc45f544415e014e4f25d3f95
to golang.org/x/tools/cmd/toolstash.
There are no code changes to adapt it
to its new home; those will happen in a follow-up CL.

rsc.io/toolstash will be updated to contain only
a README and a doc.go redirecting readers.

Change-Id: Icbef4d72215a8b124f857587905b45902d6cdece
Reviewed-on: https://go-review.googlesource.com/32681
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
alandonovan,2016-11-03 22:15:48,https://api.github.com/repos/golang/tools/git/commits/55f54c00618d048d9c0101f95016f1255a5520a1,55f54c00618d048d9c0101f95016f1255a5520a1,"Revert ""cmd/stringer: reject Go 1.8 type aliases""

This reverts commit 9a286cdc334bcda1296aaa1c8cc85c2d5d64dac7.

Reason for revert: go1.8 code in a go1.7 file.

Change-Id: I5465820c60197f4288243d1b15b1be20531b923d
Reviewed-on: https://go-review.googlesource.com/32733
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-11-03 18:58:50,https://api.github.com/repos/golang/tools/git/commits/242b5dc7800420a95af896bb16149e74837164a3,242b5dc7800420a95af896bb16149e74837164a3,"godoc: changes to support aliases

Fixes golang.org/go#17763

Change-Id: I18012dcfd878db916cbb940c3a361a89341b9209
Reviewed-on: https://go-review.googlesource.com/32711
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-03 20:40:09,https://api.github.com/repos/golang/tools/git/commits/d15da3015c832ff48d9eede2723e5d2272a59adf,d15da3015c832ff48d9eede2723e5d2272a59adf,"cmd/guru: describe Go 1.8 aliases

Also:
- always display the value of a constant expr, whether query expr is a
  definition, a reference, or an alias.
- eliminate some go1.5 portability code.
- remove go1.8 fork of referrers; no changes are necessary
  since I decided not to treat aliases specially.
- add tests.

Tested with Go 1.6, Go 1.7, and tip (Go 1.8).

Change-Id: I94624cff82f4d8c0dcbf12d11c8ce16e8168a7fe
Reviewed-on: https://go-review.googlesource.com/32730
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-03 21:52:54,https://api.github.com/repos/golang/tools/git/commits/50193ec1c508c7b5714160a9c0979366fbbcabb4,50193ec1c508c7b5714160a9c0979366fbbcabb4,"go/ast/astutil: support Go 1.8 type aliases

Change-Id: I67d561755c1c06c0438f2b42e6a13efb024558c4
Reviewed-on: https://go-review.googlesource.com/32732
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-03 21:19:55,https://api.github.com/repos/golang/tools/git/commits/9a286cdc334bcda1296aaa1c8cc85c2d5d64dac7,9a286cdc334bcda1296aaa1c8cc85c2d5d64dac7,"cmd/stringer: reject Go 1.8 type aliases

Change-Id: I56e615bf202ca2018602c93e66ecdbc2577335e2
Reviewed-on: https://go-review.googlesource.com/32731
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-11-03 15:34:01,https://api.github.com/repos/golang/tools/git/commits/4d145add37465c3f53e8731e3f384e42ad02ebd2,4d145add37465c3f53e8731e3f384e42ad02ebd2,"cmd/ssadump: fix typo that broke -run

Change-Id: I6cc618a3cf1036f4dffb2acad766d86c14d658cd
Reviewed-on: https://go-review.googlesource.com/32645
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-11-02 22:03:14,https://api.github.com/repos/golang/tools/git/commits/f08d70c2ed47107d9cee59201cba9081790d125b,f08d70c2ed47107d9cee59201cba9081790d125b,"go/gcimporter15: support export/import of invalid aliases

+ test

Tested on 1.6, 1.7, and 1.8.

Fixes golang/go#17731.

Change-Id: I06dff4a72ff08ed5e8ae1d23a1e65fe719c03180
Reviewed-on: https://go-review.googlesource.com/32581
Reviewed-by: Matthew Dempsky <mdempsky@google.com>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-11-02 22:55:57,https://api.github.com/repos/golang/tools/git/commits/c3ce94f8a8ae358bf8a34048ae5ff6ff466389a4,c3ce94f8a8ae358bf8a34048ae5ff6ff466389a4,"go/gcimporter15: update importer test (fix build)

The -newexport flag is on by default for 1.7,
no need to special-case it anymore.

Tested against 1.6, 1.7, and 1.8.

Change-Id: I9c4a31f80d1309564e2a01514fca4b17e4378b9c
Reviewed-on: https://go-review.googlesource.com/32582
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
griesemer,2016-11-02 23:14:54,https://api.github.com/repos/golang/tools/git/commits/d54c98191e65aa751343281b6ea5de0a0a4a3c1c,d54c98191e65aa751343281b6ea5de0a0a4a3c1c,"go/loader: fix ExampleConfig_Import (fix build)

TBR=adonovan

Tested against 1.6, 1.7, and 1.8.

Change-Id: Ifd8e02a83e7b92c00a746f10475ab725801199e2
Reviewed-on: https://go-review.googlesource.com/32638
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
mdempsky,2016-11-02 19:23:21,https://api.github.com/repos/golang/tools/git/commits/d4397e8931702e08a85f7a67ea3dd46637032505,d4397e8931702e08a85f7a67ea3dd46637032505,"go/gcimporter15: backport double-export fix for aliased objects

Backport of https://golang.org/cl/32575.

Change-Id: Ic4b0794ee440b7ac6275f0ef7dacda20de4fdad0
Reviewed-on: https://go-review.googlesource.com/32577
Reviewed-by: Alan Donovan <adonovan@google.com>
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-11-02 00:11:01,https://api.github.com/repos/golang/tools/git/commits/a829b5068dbbe4238c68bbce22888f6315c86abe,a829b5068dbbe4238c68bbce22888f6315c86abe,"go/gcimporter15: remove support for Go1.5

Change-Id: I183090131a675237be42cc005719554399704f8d
Reviewed-on: https://go-review.googlesource.com/32541
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-11-01 23:56:04,https://api.github.com/repos/golang/tools/git/commits/a4fe4f61402dd1447f89bc8e0ac557ce8d8d2b0d,a4fe4f61402dd1447f89bc8e0ac557ce8d8d2b0d,"go/gcimporter15: implement support for exporting aliases

Tested with 1.6, 1.7, 1.8.

Change-Id: Ib0f751484c360b02aa34c993ce795cb94656705f
Reviewed-on: https://go-review.googlesource.com/32540
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-10-31 21:54:29,https://api.github.com/repos/golang/tools/git/commits/5b3db005873d29fb6c2e37dae2f788ada7963207,5b3db005873d29fb6c2e37dae2f788ada7963207,"go/gcimporter15: implement support for importing aliases

- backport of changes made to std lib:
  https://go-review.googlesource.com/32350/
  https://go-review.googlesource.com/32538

- factored out newAlias for non-Go1.8 builds

- tested against 1.6, 1.7, 1.8

Change-Id: I538b2d4a0f0c93c517a7aaa3b1562aa3afd154dd
Reviewed-on: https://go-review.googlesource.com/32470
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-11-02 14:08:09,https://api.github.com/repos/golang/tools/git/commits/4549178751bc8ef613f84211d118e6c75b4a26b0,4549178751bc8ef613f84211d118e6c75b4a26b0,"x/tools: clone some files in preparation for alias changes

This CL only copies files and updates build tags.
Substantive changes will come in follow-ups.
This is a workaround for git's lack of rename/copy tracking.

Tested with go1.6, go1.7, and tip (go1.8).

Change-Id: Id88a05273fb963586b228d5e5dfacab32133a960
Reviewed-on: https://go-review.googlesource.com/32630
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-31 13:53:48,https://api.github.com/repos/golang/tools/git/commits/1529f889eb4b594d1f047f2fb8d5b3cc85c8f006,1529f889eb4b594d1f047f2fb8d5b3cc85c8f006,"cmd/guru: report start and end positions for non-PkgName Objects

Most objects are declared by an identifier, so the end position is
start+len(name).  However, this heuristic doesn't work for PkgName
objects because a (non-renaming) import creates an object without an
identifier.

Fixes issue github.com/Microsoft/vscode-go#562

Change-Id: I0eb44ca33a643c910d97abbf700ea4c3cd23bb41
Reviewed-on: https://go-review.googlesource.com/32440
Reviewed-by: Robert Griesemer <gri@golang.org>"
adonovan,2016-10-28 17:47:36,https://api.github.com/repos/golang/tools/git/commits/b814a3b030588c115189743d7da79bce8b549ce1,b814a3b030588c115189743d7da79bce8b549ce1,"go/internal/gccgoimporter: use 0 not io.SeekStart for Go 1.6 compatibility.

Change-Id: I396e221217c7fac5e7a9d66cbd97ef51782b0dd8
Reviewed-on: https://go-review.googlesource.com/32298
Reviewed-by: Robert Griesemer <gri@golang.org>"
adonovan,2016-10-28 17:52:00,https://api.github.com/repos/golang/tools/git/commits/f24fea3cd410721843931e5b6f341ca3fd67119e,f24fea3cd410721843931e5b6f341ca3fd67119e,"go/gcexportdata: suppress example_test.go on Go 1.6

because its export data doesn't contain file position information.

Change-Id: Ia3ab54ae8a493666b9ad63577aa8fad513385052
Reviewed-on: https://go-review.googlesource.com/32299
Reviewed-by: Robert Griesemer <gri@golang.org>"
adonovan,2016-10-28 15:44:06,https://api.github.com/repos/golang/tools/git/commits/6d7cee0134e889eb7e1f17662ea1881d5a6ffb42,6d7cee0134e889eb7e1f17662ea1881d5a6ffb42,"go/gcimporter15: read v3 export data not containing type aliases

This is a short-term stop-gap to keep the builders happy.

Change-Id: I87171c20bf44f36fd2c4d7213211217de6110fdd
Reviewed-on: https://go-review.googlesource.com/32293
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-25 20:43:39,https://api.github.com/repos/golang/tools/git/commits/0db92ca630c08f00e3ba4b5abea93836ca04b42e,0db92ca630c08f00e3ba4b5abea93836ca04b42e,"go/gcexportdata: make example portable to MS Windows, 2nd attempt

(The first was go-review.googlesource.com/c/31813)

Fixes issue golang/go#17565

Change-Id: I61c124e041af689913aedebdde654197c5526228
Reviewed-on: https://go-review.googlesource.com/32034
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-25 15:08:46,https://api.github.com/repos/golang/tools/git/commits/17d0fe57ecdbca844bc45f84b12aba2149b7e93f,17d0fe57ecdbca844bc45f84b12aba2149b7e93f,"go/gccgoexportdata: lost edits from review of CL 31822

Change-Id: I4d1eb36c2da5c7ad51989a1c9ab09b03019fd8f0
Reviewed-on: https://go-review.googlesource.com/31971
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-10-24 21:33:01,https://api.github.com/repos/golang/tools/git/commits/5e7fa1cbaac7c20ee61e6fafce3e778e0e854571,5e7fa1cbaac7c20ee61e6fafce3e778e0e854571,"go/gccgoexporter: an API for parsing gccgo export data

This package is provided as a stop-gap until gccgo uses the same export
data format as gc.  Once that occurs, this package will be deprecated
and eventually deleted.  The API is similar to (a subset of) gcexportdata.

Change-Id: I3398dbb8eab508a24d12036bbadaa60c2c1e77b3
Reviewed-on: https://go-review.googlesource.com/31822
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-24 20:09:14,https://api.github.com/repos/golang/tools/git/commits/20055e012df642222098b26b314090eb8177055e,20055e012df642222098b26b314090eb8177055e,"go/internal/gccgoimporter: fork go/internal/gccgoimporter

The standard go/internal/gccgoimporter package is essentially unusable
behind the go/importer.For API, so this change makes a copy of it in
x/tools.  A follow-up change will expose a small but usable API to it.

Change-Id: Ica5092267ecafb78e1d983c86aa46e4e0bef02d5
Reviewed-on: https://go-review.googlesource.com/31854
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-24 16:53:56,https://api.github.com/repos/golang/tools/git/commits/b5ed9db83fbf41b937824795876668fc8d31335a,b5ed9db83fbf41b937824795876668fc8d31335a,"go/gcexportdata: support old export data (again), needed by AE1.6

+ test

Change-Id: I0842795ece634e4441b17a10009d26bfc2a8481a
Reviewed-on: https://go-review.googlesource.com/31818
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-24 16:16:06,https://api.github.com/repos/golang/tools/git/commits/0f7f54c9d9154d0f060ef03ecacd1b3e3a34f8bc,0f7f54c9d9154d0f060ef03ecacd1b3e3a34f8bc,"go/gcexportdata: make test portable to MS Windows

Fixes issue #17565

Change-Id: I67d2e11acae873ac47694a73ced40d2db38c0fc0
Reviewed-on: https://go-review.googlesource.com/31813
Reviewed-by: Robert Griesemer <gri@golang.org>"
alexcarol,2016-10-16 21:18:27,https://api.github.com/repos/golang/tools/git/commits/c6efba04dd0d931bb11cd7f556285fa3c9305398,c6efba04dd0d931bb11cd7f556285fa3c9305398,"present: add speaker notes to the title page

Change-Id: I68f17f933e2526c6419e1463acfcb3c838aeecf4
Reviewed-on: https://go-review.googlesource.com/31396
Reviewed-by: Jaana Burcu Dogan <jbd@google.com>"
alandonovan,2016-10-06 21:39:25,https://api.github.com/repos/golang/tools/git/commits/1a954d519b177dee7aa0a24e9b70ecce2ff8bd7d,1a954d519b177dee7aa0a24e9b70ecce2ff8bd7d,"go/gcexportdata: a new simpler API for the deprecated go/gcimporter15

Fixes golang/go#15651

Change-Id: I7dc7ba731a22c677e3c01bf13e91ecfff9e46765
Reviewed-on: https://go-review.googlesource.com/30612
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-19 19:23:29,https://api.github.com/repos/golang/tools/git/commits/8b5a8a45aecd9f9921fc04d07c24619827b54aa2,8b5a8a45aecd9f9921fc04d07c24619827b54aa2,"refactor/rename: remove Emacs support, now in github.com/dominikh/go-mode.el

Change-Id: I710e0ae0dcecebbd3f02a8a2186e461f9435d731
Reviewed-on: https://go-review.googlesource.com/31412
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-07-20 19:03:06,https://api.github.com/repos/golang/tools/git/commits/8e53eb937b67fe74bcc9a2071d25c0397101637f,8e53eb937b67fe74bcc9a2071d25c0397101637f,"go/ssa: support custom TestMain functions in test packages

Supporting user-defined TestMain functions requires that we generate a
""testmain"" package for each testable package, rather than a single one
for the entire program.  This entails these API changes:

1. (*ssa.Program).{CreateTestMainPackage,FindTests} both now
   accept only a single package.  Existing clients that pass them
   multiple packages must call them from a loop.

2. (*ssa.Program).FindTests returns an additional result, the the
   optional TestMain *ssa.Function.  Existing clients may discard it.

Also:
- Test the new logic using the SSA interpreter
- add ssautil.MainPackages helper
- callgraph: allow multiple main packages, and analyze them all
- ssadump -run: allow multiple main/test packages, and run each in a new interpreter
- minor simplifications to some callers (e.g. guru)

Fixes golang/go#9553

Change-Id: Ia7de9bd27448fb08b8d172ba5cdbcf37a762b7a0
Reviewed-on: https://go-review.googlesource.com/25102
Reviewed-by: Robert Griesemer <gri@golang.org>"
dominikh,2016-10-19 16:14:54,https://api.github.com/repos/golang/tools/git/commits/860883f6daa98743766727e8f7e4305661fa2748,860883f6daa98743766727e8f7e4305661fa2748,"refactor/rename: require cl-lib, use cl- namespace

go-rename.el used the cl list* macro without requiring cl. This only
worked for people who required it for other code. go-guru.el, before its
removal from the tree, changed from cl to cl-lib, indirectly breaking
go-rename.el for some users.

Switch to using cl-list* and require cl-lib.

Fixes golang/go#17468

Change-Id: I70f2052b9fd3d1a8671794d9a3954be218026af2
Reviewed-on: https://go-review.googlesource.com/31471
Reviewed-by: Alan Donovan <adonovan@google.com>"
rhysh,2016-09-24 00:37:05,https://api.github.com/repos/golang/tools/git/commits/af95c112ad356bcee7a61b6f494e8e47756b970f,af95c112ad356bcee7a61b6f494e8e47756b970f,"go/ast/astutil: do not remove imports in AddNamedImport

When adding imports to an existing import declaration, ensure that
the target declaration will be printed with parentheses. This allows
all of the imported packages to be printed, not just the first one.

Fixes golang/go#17212

Change-Id: Ie5de5ec9bca6169650336ee2ea98334817e64e48
Reviewed-on: https://go-review.googlesource.com/29688
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2016-10-13 16:01:01,https://api.github.com/repos/golang/tools/git/commits/69f6f5b782e1f090edb33f68be67d96673a8059e,69f6f5b782e1f090edb33f68be67d96673a8059e,"cmd/guru: remove Emacs support, now at github.com/dominikh/go-mode.el

Change-Id: I4350331b4f047b7388c274157ecbd49a582cf091
Reviewed-on: https://go-review.googlesource.com/30991
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-13 16:02:07,https://api.github.com/repos/golang/tools/git/commits/ab8f7d902d752c506abcd42dfef2ea5901b8d731,ab8f7d902d752c506abcd42dfef2ea5901b8d731,"cmd/guru: remove Vim support, now at github.com/fatih/vim-go

Change-Id: I94f478e32f358fd23dc187fcfbca9c05bf7da576
Reviewed-on: https://go-review.googlesource.com/30990
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-13 15:59:04,https://api.github.com/repos/golang/tools/git/commits/2f93937767f6593402dcf262934f579cc49b9f97,2f93937767f6593402dcf262934f579cc49b9f97,"x/tools: s/oracle/guru/g in various comments

Change-Id: Ie0da80db4f58d9f6e7d9675c89f106d1cd01710a
Reviewed-on: https://go-review.googlesource.com/30983
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-13 15:53:44,https://api.github.com/repos/golang/tools/git/commits/d9f94846124da038b1884c193510860f21a2f2f4,d9f94846124da038b1884c193510860f21a2f2f4,"cmd/oracle: oracle is dead, long live guru

Change-Id: I0f729b1477d8b14f255538414087d25f99b20c1e
Reviewed-on: https://go-review.googlesource.com/30982
Reviewed-by: Robert Griesemer <gri@golang.org>"
rsc,2016-10-12 19:26:21,https://api.github.com/repos/golang/tools/git/commits/b44548ae6ac7f353d03366d7d115508500b00f0e,b44548ae6ac7f353d03366d7d115508500b00f0e,"go/vcs: accept plain file for .vcs (instead of directory)

Sometimes .git is a plain file; maybe others will follow.

Fixes golang/go#10322.

Change-Id: Id57424998c207080c3ed5826b1e5e091fa26aad5
Reviewed-on: https://go-review.googlesource.com/21430
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2016-10-12 15:50:13,https://api.github.com/repos/golang/tools/git/commits/a2b1312ca0a80d229b6ccb0d0bce33434b07881a,a2b1312ca0a80d229b6ccb0d0bce33434b07881a,"cmd/godoc: increase test timeout

Darwin was flaking. Its HFS filesystem is probably too slow.

Change-Id: I44ea6de8dae8054d41c94c0c36e703e62fbdfcd9
Reviewed-on: https://go-review.googlesource.com/30954
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2016-10-12 15:10:48,https://api.github.com/repos/golang/tools/git/commits/992f6f9bcc4275c91873caa9102e0f68b9ae0698,992f6f9bcc4275c91873caa9102e0f68b9ae0698,"go/loader: fix CreateFromFilenames example

The ""sort"" package is no longer quite as low-level as it once was.

Change-Id: Ic62d780841ef1172f65d4c00ec500994f94cb4b7
Reviewed-on: https://go-review.googlesource.com/30931
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2016-10-12 14:52:42,https://api.github.com/repos/golang/tools/git/commits/41f4ee4e59bf2caa8994b0b05b9af183daf6c7cc,41f4ee4e59bf2caa8994b0b05b9af183daf6c7cc,"cmd/godoc, cmd/fiximports: fix or skip failing tests at tip

Fix godoc test failure.

Skip fiximports test failure for now, to not hide other
failures. (tracking bug to fix properly in golang/go#17417)

x/tools being broken is preventing use of trybots for unrelated CLs.

Change-Id: I3a1deee4036096e0377cf8b63fabe444c58dd86e
Reviewed-on: https://go-review.googlesource.com/30953
Reviewed-by: Russ Cox <rsc@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2016-04-25 11:36:54,https://api.github.com/repos/golang/tools/git/commits/f4e1751b91d59c081cd28d574a6b2f646189c0c6,f4e1751b91d59c081cd28d574a6b2f646189c0c6,"go/ast/astutil: handle documentation of imports in DeleteNamedImport.

If the parens of an ast.GenDecl are dropped, move the documentation
of the ImportSpec above the import statement, otherwise the the
code is invalid.

Fixes golang/go#15432.

Change-Id: I715750b8f528380b96a6bc8b5f216043937976c2
Reviewed-on: https://go-review.googlesource.com/22415
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
syohex,2016-08-14 05:35:19,https://api.github.com/repos/golang/tools/git/commits/5e567c6dffd72fe8707ab59b43a62be14f5a20f8,5e567c6dffd72fe8707ab59b43a62be14f5a20f8,"cmd/guru: emacs: Use cl-lib.el instead of cl.el

This package requires cl-lib.el in package header but it is not loaded
and cl.el functions are used instead of cl-lib functions. Using cl.el
functions causes byte-compile warnings.

Change-Id: I6d9400f9ced6a5cc0592d83da2ab1c1cf34e20b8
Reviewed-on: https://go-review.googlesource.com/27031
Reviewed-by: Alan Donovan <adonovan@google.com>"
campoy,2016-10-07 20:27:53,https://api.github.com/repos/golang/tools/git/commits/8453f27cc7e9bc769059b8eb7c88f61da9382d1e,8453f27cc7e9bc769059b8eb7c88f61da9382d1e,"present: make code in slides editable only with -edit

Also added a suite of tests and fixed a minor bug that
caused a panic when the .code command specified HL with
no text after.

Fixes golang/go#17379.

Change-Id: I3c246523c3d4010bf76a467ee648475255090e1b
Reviewed-on: https://go-review.googlesource.com/30691
Reviewed-by: Rob Pike <r@golang.org>"
tamird,2016-08-18 16:32:25,https://api.github.com/repos/golang/tools/git/commits/4c4edc0becc8f904a613878ed3e4f970f40a83ce,4c4edc0becc8f904a613878ed3e4f970f40a83ce,"cmd/goyacc: remove hardcoded NTYPES

Updates #16144.

Change-Id: I196dd4e871c88792ea95c02b31c54f269fdc505f
Reviewed-on: https://go-review.googlesource.com/27350
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
griesemer,2016-10-06 18:03:39,https://api.github.com/repos/golang/tools/git/commits/b5358b5feea9734b97ff1e792ca6bc55170bc92a,b5358b5feea9734b97ff1e792ca6bc55170bc92a,"go/gcimporter15: update exportdata.go to match latest version from std lib

For golang/go#17281.

Change-Id: I7bed233368939719672eb331cca1d6aef01e807d
Reviewed-on: https://go-review.googlesource.com/30591
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-10-05 18:42:45,https://api.github.com/repos/golang/tools/git/commits/03663480faa767e684bf17d7c45c65f79d7f5ef3,03663480faa767e684bf17d7c45c65f79d7f5ef3,"go/buildutil: ExpandPatterns: ignore a trailing slash in a pattern

Previously, a trailing slash would cause ""foo/"" to be treated as the
name of a package, with comical results.

Fixed golang/go#14584

Change-Id: I660f8a079bbd63d3645812e516a9264c8e080e61
Reviewed-on: https://go-review.googlesource.com/30452
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-10-05 18:15:28,https://api.github.com/repos/golang/tools/git/commits/27f88d9b7a2f740ca09706d3579bfed0afe4c2a9,27f88d9b7a2f740ca09706d3579bfed0afe4c2a9,"cmd/guru: if query file is not beneath GOPATH, treat it as a package

This allows type-based guru queries to work on arbitrary files at the
root or even outside of a GOPATH workspace (as ""go run foo.go"" does).

Fixes golang/go#15797

Change-Id: I2be28f7259448e6398aae84d6ae7e71d8649967a
Reviewed-on: https://go-review.googlesource.com/30451
Reviewed-by: Robert Griesemer <gri@golang.org>"
0xmohit,2015-12-01 13:21:54,https://api.github.com/repos/golang/tools/git/commits/73d2e795b859a48cba2d70040c384dd1cea7e113,73d2e795b859a48cba2d70040c384dd1cea7e113,"cmd/godoc: fix command for creating the zip file

The `-r` option (to recurse into directories) need to be specified
else the created file consists only of the specified directory and
nothing else.

Change-Id: I624184fc2e88998a3119c12f8c328603588c123c
Reviewed-on: https://go-review.googlesource.com/17283
Reviewed-by: Russ Cox <rsc@golang.org>"
campoy,2016-09-24 00:07:21,https://api.github.com/repos/golang/tools/git/commits/471a6e15ec47c884037aa3cd756a3d5874db480b,471a6e15ec47c884037aa3cd756a3d5874db480b,"godoc: drop outdated comment

Change-Id: I2a4d0c112575cad70180ba0f8984a271a7658775
Reviewed-on: https://go-review.googlesource.com/29686
Reviewed-by: Sameer Ajmani <sameer@golang.org>"
alandonovan,2016-09-27 13:58:56,https://api.github.com/repos/golang/tools/git/commits/fc2b74b64ef08c618146ebc92062f6499db5314c,fc2b74b64ef08c618146ebc92062f6499db5314c,"refactor/rename: don't stop because of ""soft"" errors

Because go/types is slightly more strict than gc about certain ""soft""
errors (ones that aren't necessary to interpret a Go program), gorename
rejects programs that compile under gc.  This change relaxes gorename's
error checks so that they are weaker than gc's.

This is a workaround for issue golang/go#14596 in gorename,
whose underlying problem is issue golang/go#8560 in gc.

Fixes golang/go#14596

Change-Id: Ica5006c2376c0564a575224269093c1497348ee6
Reviewed-on: https://go-review.googlesource.com/29853
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
rhysh,2016-09-23 21:57:19,https://api.github.com/repos/golang/tools/git/commits/c2ef61f450233d3c629ade8eb2083e43fa75c97a,c2ef61f450233d3c629ade8eb2083e43fa75c97a,"go/ast/astutil: fix loop logic in AddNamedImport

When merging import declarations into a single block, AddNamedImport
modifies the list of declarations in the provided file while
iterating over the list. Take care to adjust the index into the list
so as to not skip entries or fall off the end.

Fixes golang/go#17213

Change-Id: I807246f762c965ea1fc51eb57759f6088336db86
Reviewed-on: https://go-review.googlesource.com/29681
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
campoy,2016-09-20 23:58:29,https://api.github.com/repos/golang/tools/git/commits/3f4088edb48e8a4e3c66a5f8e7b2a78615fcb83f,3f4088edb48e8a4e3c66a5f8e7b2a78615fcb83f,"godoc: avoid exposing absolute paths on 404

Exposing the full paths to files is considered possible
source of vulnerabilities.

Change-Id: Ie9ae3791e51fcff5f1df711f84db9879d7e6ce37
Reviewed-on: https://go-review.googlesource.com/29445
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2016-09-12 22:56:01,https://api.github.com/repos/golang/tools/git/commits/f1a397bba50dee815e8c73f3ec94ffc0e8df1a09,f1a397bba50dee815e8c73f3ec94ffc0e8df1a09,"cmd/bundle: add flag to rewrite golang.org/ to golang_org/ in imports

I've been doing this by hand since Go 1.7rc2.

Updates golang/go#16333

Change-Id: Ib12c013b14210123d48d6ad78922caf1286c20cc
Reviewed-on: https://go-review.googlesource.com/29086
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-26 07:48:56,https://api.github.com/repos/golang/tools/git/commits/5ffc3249d341c947aa65178abbf2253ed49c9e03,5ffc3249d341c947aa65178abbf2253ed49c9e03,"present: dont crash if address searched backwards

For /start/,/end/, the /end/ address can wrap around and match somewhere
before /start/. Handle this case without crashing.

Fixes golang/go#7163.

Change-Id: I6fc3b5048e88728c9403a1d1e284ea8ada567a1e
Reviewed-on: https://go-review.googlesource.com/21182
Run-TryBot: Rob Pike <r@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
alandonovan,2016-09-07 20:32:09,https://api.github.com/repos/golang/tools/git/commits/86ad1193da6aba71355e71191641b9cfb26daa67,86ad1193da6aba71355e71191641b9cfb26daa67,"go/ssa/interp: turn {strings,bytes}.init into no-ops

...to avoid executing the supportAVX2 assembly function.

Also, combine all no-op intrinsics into a single function.

Change-Id: Ic65a80d3a6df52c3850c34406f034781057a0991
Reviewed-on: https://go-review.googlesource.com/28711
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-08-29 18:36:23,https://api.github.com/repos/golang/tools/git/commits/9deed8c6c1c89e0b6d68d727f215de8e851d1064,9deed8c6c1c89e0b6d68d727f215de8e851d1064,"go/gcimporter15: update to recognize export format version 2

Port of https://go-review.googlesource.com/#/c/27999/.

Change-Id: I71c4553e925fcf943ecafdef307591f63136d432
Reviewed-on: https://go-review.googlesource.com/28001
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-08-26 20:44:43,https://api.github.com/repos/golang/tools/git/commits/a832035fe553cf32b3cf3fd083ca8d4ec067f36d,a832035fe553cf32b3cf3fd083ca8d4ec067f36d,"go/gcimporter15: update to match latest changes to cmd/compiler exporter

Backport of https://go-review.googlesource.com/27814 changes to
bexport.go.

With this, the gcimporter15 is again up-to-date and in sync with both
the compiler's export code, and the compiler's and std lib gcimporter's
import code.

Change-Id: I8e229660eb78ddc1506b7b96a89c81ff083e0412
Reviewed-on: https://go-review.googlesource.com/27914
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
griesemer,2016-08-26 20:27:03,https://api.github.com/repos/golang/tools/git/commits/e545a4ce60afbc8c3754e95ba657cec6791e621c,e545a4ce60afbc8c3754e95ba657cec6791e621c,"go/gcimporter15: update to match latest changes to std lib gcimporter

Mostly a backport of https://go-review.googlesource.com/27816.
Includes an update to TestIssue13898 to match the std lib gcimporter
test.

Change-Id: I790123a49deb2d52f19e51c84bbc7ee74c99156e
Reviewed-on: https://go-review.googlesource.com/27913
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
dmitshur,2016-06-05 06:20:26,https://api.github.com/repos/golang/tools/git/commits/5cb1c80a83ef2a98bbc7b2fba1305239bb684fbe,5cb1c80a83ef2a98bbc7b2fba1305239bb684fbe,"cmd/bundle: Support renaming imports.

Document a risk of generating invalid code due to shadowing between
identifiers in code files and the imported package names.

This risk was present before for any package with more than 1 .go file,
but it's increased when some files have renamed imports (since they're
typically used to resolve shadowing conflicts).

Resolves TODO(adonovan): support renaming imports.

Change-Id: Ie0e702345790fd2059c229623fb99fe645d688a4
Reviewed-on: https://go-review.googlesource.com/23785
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2016-08-14 23:12:16,https://api.github.com/repos/golang/tools/git/commits/6e2a0ce36e2d31c9afea9e2f4a993e5c9e9e831e,6e2a0ce36e2d31c9afea9e2f4a993e5c9e9e831e,"cmd/guru: show correct definition for embedded type.

Fixes golang/go#16263.

Change-Id: I081a12306ac5415d2223e3509a29a1b47700e1ff
Reviewed-on: https://go-review.googlesource.com/27001
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-08-23 23:35:56,https://api.github.com/repos/golang/tools/git/commits/b2560d12f64dbcfe7229cdf58d59a6892a43ba00,b2560d12f64dbcfe7229cdf58d59a6892a43ba00,"go/gcimporter15: backport compiler exporter fix for golang/go#15514

Code from https://go-review.googlesource.com/#/c/27639/ .

Remain backward-compatible with possibly installed packages
that remain in Go1.6 format.

Change-Id: If424e7a881c81bbfcacf38c0946542793c406abd
Reviewed-on: https://go-review.googlesource.com/27640
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
griesemer,2016-08-17 17:41:00,https://api.github.com/repos/golang/tools/git/commits/2bbdb4568e161d12394da43e88b384c6be63928b,2bbdb4568e161d12394da43e88b384c6be63928b,"go/gcimporter15: update to match std lib gcimporter (fix build)

TBR=adonovan

Change-Id: Ib2464def48932e0d0fc24f67c76a10e8918acb9d
Reviewed-on: https://go-review.googlesource.com/27235
Reviewed-by: Robert Griesemer <gri@golang.org>"
kostya-sh,2016-08-01 15:18:57,https://api.github.com/repos/golang/tools/git/commits/8ea9d4606980305f7f46cabde046adbb530e71c8,8ea9d4606980305f7f46cabde046adbb530e71c8,"refactor/rename: do not allow a new name to be a keyword

Fixes golang/go#16535

Change-Id: I46f9b9530e25bb286557712a7969715f8dde99b9
Reviewed-on: https://go-review.googlesource.com/25343
Reviewed-by: Alan Donovan <adonovan@google.com>"
tamird,2016-08-18 16:31:39,https://api.github.com/repos/golang/tools/git/commits/df703d648499d3a21541e2a80c79319c0ba5cc1e,df703d648499d3a21541e2a80c79319c0ba5cc1e,"cmd/goyacc: remove unused constants

Change-Id: I48002d39de6d32ee9410fd4271f623b5661f0081
Reviewed-on: https://go-review.googlesource.com/27328
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2016-08-18 15:29:49,https://api.github.com/repos/golang/tools/git/commits/f1ba7e38e56275a633a256581e5f788ecb2782a3,f1ba7e38e56275a633a256581e5f788ecb2782a3,"cmd/goyacc: move go tool yacc from the go repo

This moves the 'go tool yacc' command from the main Go repo
to x/tools.

Copied from go rev 795ad07b3 + doc changes from ""go tool yacc"" to ""goyacc"".

Updates golang/go#11229

Change-Id: I6d17911a3bf64724c090c4fe4903238e3bce3b8c
Reviewed-on: https://go-review.googlesource.com/27324
Reviewed-by: Matthew Dempsky <mdempsky@google.com>"
griesemer,2016-08-17 05:08:34,https://api.github.com/repos/golang/tools/git/commits/1cf0a337cd20f304e6caa20d6a07392e7f071245,1cf0a337cd20f304e6caa20d6a07392e7f071245,"go/gcimporter15: don't run 1.7-specific test under 1.8 (fix build)

TBR=adonovan

Change-Id: I310ff6e51d681b2e5c8288e73870ce7d68e45518
Reviewed-on: https://go-review.googlesource.com/27208
Reviewed-by: Robert Griesemer <gri@golang.org>"
davidrjenni,2016-08-10 01:56:44,https://api.github.com/repos/golang/tools/git/commits/491cbb1158973687398d5a1ee197321e17464843,491cbb1158973687398d5a1ee197321e17464843,"go/ast/astutil: add tests for UsesImport.

Change-Id: I05e9897b2ac858e1c3cc0d54f9da74e34f72f9e2
Reviewed-on: https://go-review.googlesource.com/27002
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2016-08-10 15:43:06,https://api.github.com/repos/golang/tools/git/commits/08b1e0510c4cfc628a52f0ce641d027b4b2cebe0,08b1e0510c4cfc628a52f0ce641d027b4b2cebe0,"x/tools/cmd/heapview: add a sidebar to hold navigation

This change also puts more structure into the viewer.
Adds an enum for events that we'll issue and a few more elements
to organize things.

Change-Id: I39c7c53422779348ca05f051c6b0b07d22ad6a00
Reviewed-on: https://go-review.googlesource.com/26656
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2016-08-15 22:27:39,https://api.github.com/repos/golang/tools/git/commits/3fe2afc9e626f32e91aff6eddb78b14743446865,3fe2afc9e626f32e91aff6eddb78b14743446865,"imports: update zstdlib to Go 1.7

Change-Id: I936c6f03e8c3dc14832c8493937fdb64e6d1a853
Reviewed-on: https://go-review.googlesource.com/27079
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
broady,2016-08-15 21:54:39,https://api.github.com/repos/golang/tools/git/commits/c66da98c4f517def4dca71b61b41ec91e27d0ee1,c66da98c4f517def4dca71b61b41ec91e27d0ee1,"imports: don't use fastpath on appengine (syscall not available)

Change-Id: I02fbdf1a08894b35a19a3638357c0d42e64d42cc
Reviewed-on: https://go-review.googlesource.com/27078
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
tamird,2016-08-13 01:48:14,https://api.github.com/repos/golang/tools/git/commits/0e9f43fcb67267967af8c15d7dc54b373e341d20,0e9f43fcb67267967af8c15d7dc54b373e341d20,"cmd/goimports: work around lack of runtime/trace in gccgo

Moves runtime/trace support (including its command line flag) behind
a ""gc"" build tag to allow goimports to build under gccgo, which does
not support runtime/trace.

Updates golang/go#15544.

Change-Id: I017a44089c0a4f3d3ba98815d57a141e25b3fe56
Reviewed-on: https://go-review.googlesource.com/26998
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2016-08-11 04:12:21,https://api.github.com/repos/golang/tools/git/commits/68cf18548ebdbe2964ebfe414b7ac0c52910f4be,68cf18548ebdbe2964ebfe414b7ac0c52910f4be,"x/tools/cmd/heapview/internal/core: stub mmapfile for !darwin,!linux

mmapfile.go uses symbols in the syscall package that are not defined
on windows and some other operating systems. Temporarily
buildtag-restrict mmapfile to darwin and linux (the platforms easiest
for me to test) to fix the build.

Change-Id: Ib056608a655b6d32170cd86deac785811e7bc0d1
Reviewed-on: https://go-review.googlesource.com/26830
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
briantkennedy,2016-05-25 23:35:48,https://api.github.com/repos/golang/tools/git/commits/62f0028207d2e71e9b96716726b9ca5b9517dbcc,62f0028207d2e71e9b96716726b9ca5b9517dbcc,"imports: properly handle global variables when creating imports

Fixes golang/go#7463

Change-Id: Ib8b511a34c562a2b3cdce6bb143caa7cf453bd00
Reviewed-on: https://go-review.googlesource.com/23444
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2016-08-08 18:19:54,https://api.github.com/repos/golang/tools/git/commits/855bbc50ad86de9aa46f829ff040ed8edc5b4c37,855bbc50ad86de9aa46f829ff040ed8edc5b4c37,"cmd/heapview: add an internal core package for reading cores

This is based on github.com/tombergan/goheapdump/heapdump.

This CL mostly just copies over the 'raw' data structures based
on the profiler records' data structures. Many of them may need
to be changed, but I think it will be good to have these definitions
here to provide a base.

Change-Id: I609202b6b87d980b0835c8087b3d78e11bd6dfe3
Reviewed-on: https://go-review.googlesource.com/25584
Reviewed-by: Hyang-Ah Hana Kim <hyangah@gmail.com>"
matloob,2016-08-09 18:04:40,https://api.github.com/repos/golang/tools/git/commits/29462195f224219ae1eb9517cbece164b1149dea,29462195f224219ae1eb9517cbece164b1149dea,"x/tools/cmd/goimports: define verbose flag in parseFlags

This will allow users to use a different flag name.

Change-Id: I252871b8efb6867e61ca507f59a9663cb7140b7d
Reviewed-on: https://go-review.googlesource.com/26632
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2016-08-05 20:40:13,https://api.github.com/repos/golang/tools/git/commits/72064bd64745c21ad7fe43d550d08e8f07bf4f73,72064bd64745c21ad7fe43d550d08e8f07bf4f73,"cmd/heapview: dowgrade to customelements v0

I've had too many issues with customelements v1. The interface for v0
isn't as nice, and v0 will eventually be deprecated. But v1's polyfill
library is better supported, and it will be easy to upgrade later.

Change-Id: I87b376376b750167a0464c6c249930edecbd59db
Reviewed-on: https://go-review.googlesource.com/25545
Reviewed-by: Joe Tsai <thebrokentoaster@gmail.com>"
matloob,2016-08-04 18:24:04,https://api.github.com/repos/golang/tools/git/commits/337c0124d7839ba49a64f0077b59cc02dd2d591f,337c0124d7839ba49a64f0077b59cc02dd2d591f,"x/tools/cmd/heapview: add a heading to the page

This CL's purpose is to introduce the dependency on the HTML Custom
Elements polyfill. Like we've done so far, I'm trying to keep
dependencies light by using current or polyfilling future webcomponents
standards.

Change-Id: I11d14db367b697cdd527fb66b9d7d160ac244b78
Reviewed-on: https://go-review.googlesource.com/25494
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2016-08-02 20:38:13,https://api.github.com/repos/golang/tools/git/commits/7ef02fdb2243dc494cd0528d4a29856b4a56ecfc,7ef02fdb2243dc494cd0528d4a29856b4a56ecfc,"cmd/heapview: add karma+jasmine TS unit testing config

Add a configuration that allows unit testing of client Typescript
code using Karma and Jasmine. Add a basic test to exercise this.

Change-Id: I88af82b68547423efeaafb0fab8214ed39573ee9
Reviewed-on: https://go-review.googlesource.com/25411
Reviewed-by: David Crawshaw <crawshaw@golang.org>
Reviewed-by: Evan Martin <evanm@google.com>"
mgenov,2016-08-03 09:51:06,https://api.github.com/repos/golang/tools/git/commits/bf0c35b6b660fa15ad2469a340d3d49f7637cbfa,bf0c35b6b660fa15ad2469a340d3d49f7637cbfa,"tip/doc: update doc to match latest gcloud syntax

gcloud command no longer requires preview for deployment and is showing
warning when command is executed:

```
WARNING: The `gcloud preview app` command group is deprecated; please
use the `gcloud app` commands instead.
```

This change is removing ""preview"" text from README to make deploy
command up to date with gcloud.

Change-Id: I64d390ab4891f82fe608c64be20fae01a80d00fc
Reviewed-on: https://go-review.googlesource.com/25430
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2016-07-27 16:38:56,https://api.github.com/repos/golang/tools/git/commits/9e7459099f9afd6a15464d69d93c6eed49bb545d,9e7459099f9afd6a15464d69d93c6eed49bb545d,"x/tools/cmd/heapview: break out init code

This change breaks out the code that adds handler funcs and
starts the HTTP server into separate functions, so that they
can be overridden in other environments, such as Google's.

For instance, listenAndServe can be overridden in an init method
in a different file to use a HTTP2 server.

Updates golang/go#16410

Change-Id: I074242af10486c60c374e9ac7ebe9d0e61a8fa22
Reviewed-on: https://go-review.googlesource.com/25273
Reviewed-by: Hyang-Ah Hana Kim <hyangah@gmail.com>"
matloob,2016-07-26 14:27:44,https://api.github.com/repos/golang/tools/git/commits/053ddb97bfa3b2e3021b6eb07f873233a62b2abb,053ddb97bfa3b2e3021b6eb07f873233a62b2abb,"x/tools/cmd/heapview: add basic client serving

This change primarily exists to import Typescript and the
ES6 module loader polyfill as dependencies for this project.
Both dependencies are relatively lightweight and can be easily
removed if we decide we don't need them.

The module loader polyfill implements support for an upcoming
browser feature in ES6 (the next version of JavaScript). This
feature helps modularize Javascript code and conveniently split it
into multiple files. It should be supported by the stable versions
of the four major browsers (Chrome, Firefox, Safari and Edge)
by the end of the year. Once that happens, we can remove the polyfill.

The Typescript compiler provides two things: First, it compiles
new, but not-yet-supported ES6 Javascript features into ES5. It
also provides a typechecker similar to what Closure does, but types
are indicated in syntax rather than JSDoc comments. If we decide
we don't want this dependency, we can compile the Typescript code
into human-readable JavaScript code. (The compiler basically
strips out types and replaces ES6 language features with more
well-supported JavaScript equivalents). The Typescript compiler
is not required for development. typescript.js and a feature in
the module loader will be used to compile Typescript into JavaScript
at serving time. (We might want to do something different for the
production version, but we can get to that later).

The change also adds code to serve the HTML and Javascript files.

Updates golang/go#16410

Change-Id: I42c669d1de636d8b221fc03ed22aa7ac60554610
Reviewed-on: https://go-review.googlesource.com/25240
Reviewed-by: Austin Clements <austin@google.com>"
bradfitz,2016-07-25 15:05:58,https://api.github.com/repos/golang/tools/git/commits/1c6f639aae50dbb1e0b87915849b4bb206e5bc05,1c6f639aae50dbb1e0b87915849b4bb206e5bc05,"imports: don't ignore GOPATH if GOROOT is a prefix of GOPATH

Fixes golang/go#16458

Change-Id: I1aaec5d115dd703dd702101f6bec37bf8b02a73d
Reviewed-on: https://go-review.googlesource.com/25192
Reviewed-by: Andrew Gerrand <adg@golang.org>"
kr,2016-07-22 01:35:08,https://api.github.com/repos/golang/tools/git/commits/ed69e84b1518b5857a9f4e01d1f9cefdcc45246e,ed69e84b1518b5857a9f4e01d1f9cefdcc45246e,"cmd/goimports, imports: add -local flag

This allows the caller to indicate they want certain
import paths to sort into another group after 3rd-party
imports when added by goimports. For example, running
'goimports -local example.com/' might produce

    import (
        ""database/sql""
        ""io""
        ""strconv""

        ""golang.org/x/net/context""

        ""example.com/foo/bar""
        ""example.com/foo/baz""
    )

Resolves golang/go#12420

Change-Id: If6d88599f6cca2f102313bce95ba6ac46ffec1fe
Reviewed-on: https://go-review.googlesource.com/25145
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2016-07-21 19:29:03,https://api.github.com/repos/golang/tools/git/commits/f3284303b68708e9943bf3e940fd1a5483438cc1,f3284303b68708e9943bf3e940fd1a5483438cc1,"cmd/goimports: permit complete filename for -srcdir

Updates dominikh/go-mode.el#146
Updates golang/go#7463 (for https://golang.org/cl/23444)

Change-Id: Ieb769329531050b803528acce0c50d02786533b6
Reviewed-on: https://go-review.googlesource.com/25140
Reviewed-by: Alan Donovan <adonovan@google.com>"
dmitshur,2016-06-06 11:27:18,https://api.github.com/repos/golang/tools/git/commits/5b59ce8b5f114a06fca053c08a380efbcbf7a5e5,5b59ce8b5f114a06fca053c08a380efbcbf7a5e5,"cmd/bundle: More idiomatic flag.Usage.

The responsibility of flag.Usage is to print usage to stderr:

> Usage prints to standard error a usage message documenting all
> defined command-line flags.

Calling os.Exit(2) is outside of its scope, flag package does that.

Change-Id: I3eef2b796e5ddedff6d5927dbcdbfff3a6082270
Reviewed-on: https://go-review.googlesource.com/23788
Reviewed-by: Joseph Holsten <joseph@josephholsten.com>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alexbrainman,2016-07-21 06:51:57,https://api.github.com/repos/golang/tools/git/commits/682b24125499c3779613897eca06e51b62e26fbd,682b24125499c3779613897eca06e51b62e26fbd,"imports: make filepath.Rel work on windows

filepath.Rel will always fail if one parameter starts with
drive letter and the other does not. Make both filepath.Rel
parameters absolute paths, to give it chance to succeed.

Fixes broken tools build on windows.

Change-Id: Ibefcfe283f28977503323f01bc3a698478227f84
Reviewed-on: https://go-review.googlesource.com/25120
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
matloob,2016-07-20 18:57:55,https://api.github.com/repos/golang/tools/git/commits/55296b3bebf97ef1b14b5b86a4ecd6337ef99bb2,55296b3bebf97ef1b14b5b86a4ecd6337ef99bb2,"x/tools/cmd/heapview: rename heapdump to heapview

Updates golang/go#16410

Change-Id: I0133971f9a1149da6d88180fc2e378003f189cc8
Reviewed-on: https://go-review.googlesource.com/25101
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
timtadh,2016-07-20 15:51:44,https://api.github.com/repos/golang/tools/git/commits/1634796cc3a3ee4b3cc216d256b5614f74a43ef4,1634796cc3a3ee4b3cc216d256b5614f74a43ef4,"go/ssa: fix stale docs for CreateProgram and Build

Both functions had documentation referring to BuildAll when the
function is now called Build.

Change-Id: I59cce397a0a72bf7fa36f9798e2b07bb6b1da726
Reviewed-on: https://go-review.googlesource.com/25084
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
matloob,2016-07-20 16:26:50,https://api.github.com/repos/golang/tools/git/commits/5dbb806c12d692c3ee68107c8043675ace619d94,5dbb806c12d692c3ee68107c8043675ace619d94,"x/tools/cmd/heapdump: add empty heapdump command

This change creates a place where we can start building
the 'heapdump' heap viewer and analyzer

Updates golang/go#16410

Change-Id: I216e13f1ceb6790bf492cfc8cbcc4f19f12b0b9e
Reviewed-on: https://go-review.googlesource.com/25085
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2016-07-19 04:42:54,https://api.github.com/repos/golang/tools/git/commits/d4a8e583a10c1e702d1accc9e66c104f992115c8,d4a8e583a10c1e702d1accc9e66c104f992115c8,"imports: skip ""node_modules"" directories

Updates golang/go#16417

Change-Id: Ia4a5f997036274d09cca2ff10e500e403c1725ba
Reviewed-on: https://go-review.googlesource.com/25044
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2016-07-18 00:47:35,https://api.github.com/repos/golang/tools/git/commits/edf8e6fef861d8c5ecc9e394b0146d6ebba57795,edf8e6fef861d8c5ecc9e394b0146d6ebba57795,"cmd/goimports, imports: optimize directory scanning and other things

This brings goimports from 160ms to 100ms on my laptop, and under 50ms
on my Linux machine.

Using cmd/trace, I noticed that filepath.Walk is inherently slow.
See https://golang.org/issue/16399 for details.

Instead, this CL introduces a new (private) filepath.Walk
implementation, optimized for speed and avoiding unnecessary work.

In addition to avoid an Lstat per file, it also reads directories
concurrently. The old goimports code did that too, but now that logic
is removed from goimports and the code is simplified.

This also adds some profiling command line flags to goimports that I
found useful.

Updates golang/go#16367 (goimports is slow)
Updates golang/go#16399 (filepath.Walk is slow)

Change-Id: I708d570cbaad3fa9ad75a12054f5a932ee159b84
Reviewed-on: https://go-review.googlesource.com/25001
Reviewed-by: Andrew Gerrand <adg@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2016-07-18 21:58:52,https://api.github.com/repos/golang/tools/git/commits/caebc7a51c4e0f3abaf0f13fb8266d6e1a150d58,caebc7a51c4e0f3abaf0f13fb8266d6e1a150d58,"imports: ignore case and hyphens when lexically filtering candidate dirs

This means a directory /gopath/src/foo/Go-Bar is considered as maybe
containing package ""bar"" or even ""gobar"".

Also, more tests.

Fixes golang/go#16402

Change-Id: I14208d738e3a081cb6d9bcd83d777280e118f4e7
Reviewed-on: https://go-review.googlesource.com/25030
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2016-07-18 22:24:40,https://api.github.com/repos/golang/tools/git/commits/b825d2868c6af260faccb770f87fcf29c8361283,b825d2868c6af260faccb770f87fcf29c8361283,"cmd/oracle: announce planned deletion in 2.5 months

Change-Id: Id3e1dd598707c04be883b168add0a7049dc45874
Reviewed-on: https://go-review.googlesource.com/25031
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-07-18 13:54:51,https://api.github.com/repos/golang/tools/git/commits/f2932db7c0155d2ea19373270a3fa937349ac375,f2932db7c0155d2ea19373270a3fa937349ac375,"cmd/guru: suppress failing test on plan9

The test expectation includes the text of a UNIX ENOENT message.

Also, make the same change for (deprecated) oracle tool.

Fixes golang/go#16397

Change-Id: I8c3c6a300ff2366bfeb97cf41d34097c41aab680
Reviewed-on: https://go-review.googlesource.com/24968
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2016-07-17 16:24:21,https://api.github.com/repos/golang/tools/git/commits/29481a356d4ec9c4badb3e4239ba69dc979f8d03,29481a356d4ec9c4badb3e4239ba69dc979f8d03,"imports: skip test on plan9

Change-Id: I608a1ba47a049b7eb5f4ded481744d8b25e68800
Reviewed-on: https://go-review.googlesource.com/24988
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
adg,2016-07-17 07:15:30,https://api.github.com/repos/golang/tools/git/commits/681db090d94e07d421e8ec0d2c5d29e40c4ac2f5,681db090d94e07d421e8ec0d2c5d29e40c4ac2f5,"godoc/static: use window scope for checking notesEnabled

This prevents a JS error when the notes are not present.

Change-Id: Ib8875306027b7e43441310d4228c690e2249056e
Reviewed-on: https://go-review.googlesource.com/24963
Reviewed-by: Andrew Gerrand <adg@golang.org>"
josharian,2016-07-16 21:48:20,https://api.github.com/repos/golang/tools/git/commits/6d32be89d569efd9d2426c967e8d133fd4abb9f0,6d32be89d569efd9d2426c967e8d133fd4abb9f0,"imports: minor fixes

These are mostly comments for CL 24941 that didn't
get sent quickly enough.

strings.Trim(`\""`) works, but by accident.
It trims all leading and trailing ""s and \s,
but there are never leading or trailing \s.

Semantic line breaks and punctuation cleanup.

The reflow of comments in the pkgName == ""main"" if
block is to silence this spurious vet failure:

fix.go:247: +build comment must appear before package clause and be followed by a blank line

Plain sync.Once values are enough.

Change-Id: I241f3025031b6f21605da78ea52066713a203327
Reviewed-on: https://go-review.googlesource.com/24983
Run-TryBot: Josh Bleecher Snyder <josharian@gmail.com>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-07-15 21:31:40,https://api.github.com/repos/golang/tools/git/commits/c550f66b0b48fb80f7076e0a5f8a0d736e3bb7bd,c550f66b0b48fb80f7076e0a5f8a0d736e3bb7bd,"go/gcimporter15: backport of https://golang.org/cl/23606/

Change-Id: I24a6a844e179dd1b69c90c5834d7998cb963c543
Reviewed-on: https://go-review.googlesource.com/24974
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-07-15 21:16:42,https://api.github.com/repos/golang/tools/git/commits/3f933d433a6940406a52011e5caf459e7e0cb273,3f933d433a6940406a52011e5caf459e7e0cb273,"go/gcimporter15: backport of https://golang.org/cl/23012/

Fixes golang/go#16365.

Change-Id: I8e33fbd9f1bf1b4b5d85a5c972ad43414cea57cb
Reviewed-on: https://go-review.googlesource.com/24973
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2016-07-15 18:28:37,https://api.github.com/repos/golang/tools/git/commits/ffe4e61c6496f07d2bdbb590286f0b13bd51a158,ffe4e61c6496f07d2bdbb590286f0b13bd51a158,"imports: add configuration mechanism to exclude directories

Each $GOPATH entry may have a file $GOPATH/src/.goimportsignore which
may contain blank lines, #comment lines, or lines naming a directory
relative to the configuration file to ignore when scanning.  No
globbing or regex patterns are allowed.

Updates golang/go#16367 (goimports speed)
Fixes golang/go#16386 (add mechanism to ignore directories)

Change-Id: I8f1a88ae6c4d0ed3075444d70aec3e2228c5ce6a
Reviewed-on: https://go-review.googlesource.com/24971
Reviewed-by: Rob Pike <r@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2016-07-15 15:24:26,https://api.github.com/repos/golang/tools/git/commits/7c26c999737b6551aa3656490a29843433ca6f1d,7c26c999737b6551aa3656490a29843433ca6f1d,"imports: do less I/O finding the package name of an import

When goimports was run on a file like:

    package main

    import (
        ""example.net/foo""
        ""example.net/bar""
    )

    var _, _ = foo.Foo, bar.Bar

... even though there looks to be no work to do, it still needs to
verify that ""example.net/foo"" is really package ""foo"" (even though it
looks like it) and ""example.net/bar"" is really package
""bar"". (Packages in the standard library are hard-coded since the
previous commit and not verified for consistency since they're always consistent)

To do that verification for non-std packages, go/build.Import was
being used before, but Import reads all files in the directory to make
sure they're consistent. That's unnecessary. Instead, stop after the
first file. If example.net/foo has foo.go with ""package foo"" and
just_kidding.go with ""package other"", we never read that far to find
the inconsistency. Oh well. Prefer speed.

Updates golang/go#16367

Change-Id: I9fc3fefbee0e8a6bc287bf2a565257fb9523fd5c
Reviewed-on: https://go-review.googlesource.com/24948
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
alandonovan,2016-07-15 16:04:53,https://api.github.com/repos/golang/tools/git/commits/ef6b6ebf3bae8fcf7070dc621fa12c7ea08ea3c7,ef6b6ebf3bae8fcf7070dc621fa12c7ea08ea3c7,"cmd/guru: what: include imported package names in sameids

+ Test.

Change-Id: Ib7ef99786f5b60bb3e56ced9588d2ba5725576e1
Reviewed-on: https://go-review.googlesource.com/24949
Reviewed-by: Robert Griesemer <gri@golang.org>
Run-TryBot: Robert Griesemer <gri@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2016-07-08 19:42:05,https://api.github.com/repos/golang/tools/git/commits/92480e476063dbeb161fff66c62da6e55c10310a,92480e476063dbeb161fff66c62da6e55c10310a,"cmd/guru: update Emacs installation documentation

I was going to add a hook to enable go-guru-hl-identifier-mode
as a side effect of go-mode, but a person I consulted said that
was bad form; instead I merely documented it.

Change-Id: I48b00b71c7ba485b3d632211923509a74281acbe
Reviewed-on: https://go-review.googlesource.com/24834
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-07-15 14:26:15,https://api.github.com/repos/golang/tools/git/commits/9c3986db53d305e3872da341e84daa265dc74a64,9c3986db53d305e3872da341e84daa265dc74a64,"refactor/rename: fix two bugs related to MS Windows' path separator

In the package, the added import declarations used backslashes.
In the test, filenames in warning messages used backslashes.
Now both use forward slash.

Fixes golang/go#16384

Change-Id: I43116aab0b3209305f23ed9def7c4adf3259941e
Reviewed-on: https://go-review.googlesource.com/24943
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
bradfitz,2016-07-15 00:08:27,https://api.github.com/repos/golang/tools/git/commits/e047ae774b027ae958a270598c5ac2591e457afc,e047ae774b027ae958a270598c5ac2591e457afc,"cmd/goimports, imports: make goimports great again

I felt the burn of my laptop on my legs, spinning away while processing
goimports, and felt that it was time to make goimports great again.

Over the past few years goimports fell into a slow state of disrepair
with too many feature additions and no attention to the performance
death by a thousand cuts. This was particularly terrible on OS X with
its lackluster filesystem buffering.

This CL makes goimports stronger, together with various optimizations
and more visibility into what goimports is doing.

* adds more internal documentation

* avoids scanning $GOPATH for answers when running goimports on a file
  under $GOROOT (for Go core hackers)

* don't read all $GOROOT & $GOPATH directories' Go code looking for
  their package names until much later. Require the package name of
  missing imports to be present in the last two directory path
  components.  Then only try importing them in order from best to
  worst (shortest to longest, as before), so we can stop early.

* when adding imports, add names to imports when the imported package name
  doesn't match the baes of its import path. For example:
        import foo ""example.net/foo/v1""

* don't read all *.go files in a package directory once the first file
  in a directory has revealed itself to be a package we're not looking
  for. For example, if we're looking for the right ""client"" for ""client.Foo"",
  we used to consider a directory ""bar/client"" as a candidate and read
  all 50 of its *.go files instead of stopping after its first *.go
  file had a ""package main"" line.

* add some fast paths to remove allocations

* add some fast paths to remove disk I/O when looking up the base
  package name of a standard library import (of existing imports in a
  file, which are very common)

* adds a special case for import ""C"", to avoid some disk I/O.

* add a -verbose flag to goimports for debugging

On my Mac laptop with a huge $GOPATH, with a test file like:

	package foo
	import (
	       ""fmt""
	       ""net/http""
	)

	/*

	*/
	import ""C""

	var _ = cloudbilling.New
	var _ = http.NewRequest
	var _ = client.New

... this took like 10 seconds before, and now 1.3 seconds. (Still
slow; disk-based caching can come later)

Updates golang/go#16367 (goimports is slow)
Updates golang/go#16384 (refactor TestRename is broken on Windows)

Change-Id: I97e85d3016afc9f2ad5501f97babad30c7989183
Reviewed-on: https://go-review.googlesource.com/24941
Reviewed-by: Andrew Gerrand <adg@golang.org>
Reviewed-by: Rob Pike <r@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
alandonovan,2016-07-14 18:17:37,https://api.github.com/repos/golang/tools/git/commits/b3887f7a17a5421126693d97f9015d00d396f6fb,b3887f7a17a5421126693d97f9015d00d396f6fb,"refactor/rename: fix spurious conflict report when renaming x/foo to y/foo

There is no need to check for import conflicts when the package name
doesn't change.  Add test.

Also, when reporting a (non-spurious) import conflict, make clear that
the error is just a warning.  Add a test for same.

Change-Id: Idde0483b502cd041fd893230fec06b8533f54f3c
Reviewed-on: https://go-review.googlesource.com/24917
Reviewed-by: Michael Matloob <matloob@golang.org>"
bradfitz,2016-07-11 22:38:22,https://api.github.com/repos/golang/tools/git/commits/0835c735343e0d8e375f0b980b358619ff0853a2,0835c735343e0d8e375f0b980b358619ff0853a2,"imports: special case rand.Read, prevent math/rand by chance

In Go 1.7, math/rand.Read was added. Previously, the only package
containing ""rand.Read"" was ""crypto/rand"".

goimports was updated to know that, and zstdlib.go contains a note
that it's ambiguous:

        ""rand.Perm"":        ""math/rand"",
        ""rand.Prime"":       ""crypto/rand"",
        ""rand.Rand"":        ""math/rand"",
        // ""rand.Read"" is ambiguous
        ""rand.Reader"":                   ""crypto/rand"",
        ""rand.Seed"":                     ""math/rand"",
        ""rand.Source"":                   ""math/rand"",

The intention originally was that such ambiguous things would
never be resolved, even randomly.

But a later change added support for build.Default.SrcDirs, which
meant GOROOT was also searched for ambiguous things. Or maybe I forget
the history.

In any case, when goimports tried to resolve ""rand.Read"", the
findImportStdlib check was returning nothing, which lead to the
$GOROOT being searched, where math/rand was picked by chance. That's a
dangerous default when the intentional might've been crypto/rand.

Special case it and prefer crypto/rand if there's no more specific
clue either way.

Change-Id: Ib5f8f297f72fa309d5ca9b15a37493df2e17567c
Reviewed-on: https://go-review.googlesource.com/24847
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2016-07-06 17:21:57,https://api.github.com/repos/golang/tools/git/commits/cda5280914a6bccec2b76d8d4341f4f4c5d62592,cda5280914a6bccec2b76d8d4341f4f4c5d62592,"cmd/guru: fix quoting bug in Emacs binding

combine-and-quote-strings is buggy.  The value of this expression:
 (split-string-and-unquote (combine-and-quote-strings '(""a"" """" ""b"")))
is (""a"" ""b"").  Consequently, if go-guru-scope is """", the following
""-tags"" flag is interpreted as the scope.

Change-Id: I2955ffa2b95914e01d44b52690e810f816076d5c
Reviewed-on: https://go-review.googlesource.com/24746
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Alan Donovan <adonovan@google.com>"
parkr,2016-07-11 20:29:34,https://api.github.com/repos/golang/tools/git/commits/130914b00446972075490fae5951ccee5a902147,130914b00446972075490fae5951ccee5a902147,"tip: update package doc to refer to stable code

This comment was written and has not been changed since this package was
created: https://www.youtube.com/watch?v=1rZ-JorHJEY

It is no longer called 'tipgodoc', and it is no longer all that 'new'. This
change request updates that text to reflect the current state of the 'tip'
command.

Change-Id: I4ce56fb9a3bd617cf92f8d53df5a2d4726085a9a
Reviewed-on: https://go-review.googlesource.com/24860
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-07-08 22:09:44,https://api.github.com/repos/golang/tools/git/commits/35c6e68a1a5ffc3e3afef71586710e9b0515582d,35c6e68a1a5ffc3e3afef71586710e9b0515582d,"cmd/guru: update link to documentation

Change-Id: Ia50c7878b0ba3c6576acf56b033beda122812c76
Reviewed-on: https://go-review.googlesource.com/24835
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-07-08 18:41:07,https://api.github.com/repos/golang/tools/git/commits/2b3249681bcba9b3687b094eb0f2112c2961ea5a,2b3249681bcba9b3687b094eb0f2112c2961ea5a,"cmd/guru: add menu to Emacs

Change-Id: Ife18d22f8f9b81a0e898a2b5da202feb1df23852
Reviewed-on: https://go-review.googlesource.com/24832
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
glorieux,2016-07-02 12:52:24,https://api.github.com/repos/golang/tools/git/commits/527b253f588776e5f72a0a0d1e93195cd3f82707,527b253f588776e5f72a0a0d1e93195cd3f82707,"x/tools/cmd/present: Fix present not working on Safari

As described on https://github.com/golang/go/issues/16216 present is not
currently working on Safari because of the use of ES6 JavaScript let
statements.
The solution is to use var statements instead of let.

Fixes golang/go#16216

Change-Id: I44c84f920aa41dfc8de5997ab50a440de6d57093
Reviewed-on: https://go-review.googlesource.com/24721
Reviewed-by: Andrew Gerrand <adg@golang.org>"
griesemer,2016-07-01 18:19:09,https://api.github.com/repos/golang/tools/git/commits/6c3528d5c186efa3a569b9bf311e3db54c825ff6,6c3528d5c186efa3a569b9bf311e3db54c825ff6,"go/gcimporter15: backport https://golang.org/cl/24648/

Change-Id: Id85050b236f5da2c705c45163c90fef1a396e8f8
Reviewed-on: https://go-review.googlesource.com/24700
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-06-28 21:23:16,https://api.github.com/repos/golang/tools/git/commits/0d2bde8553c1385ba127c53d1d792629e5ca2529,0d2bde8553c1385ba127c53d1d792629e5ca2529,"go/ast/astutil: describe fewer CallExprs as ""conversions""

Only unary CallExprs with no ellipsis, f(x), are ambiguous.

Change-Id: If4f17445ab0725dee916992db133eac5536133a7
Reviewed-on: https://go-review.googlesource.com/24552
Reviewed-by: Robert Griesemer <gri@golang.org>"
josharian,2016-06-24 22:27:06,https://api.github.com/repos/golang/tools/git/commits/1727758746e7a08feaaceb9366d1468498ac2ac2,1727758746e7a08feaaceb9366d1468498ac2ac2,"imports: add unsafe symbols to zstdlib

Change-Id: Ia5856e2197925671ebaa5e673af3e97fad1cdaee
Reviewed-on: https://go-review.googlesource.com/24463
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kortschak,2016-06-22 09:34:47,https://api.github.com/repos/golang/tools/git/commits/8b3828f1c8f7c67e5ebb863a4c632937778eaaae,8b3828f1c8f7c67e5ebb863a4c632937778eaaae,"cmd/present: add request address to logged errors

Change-Id: I504d29d7196b8c61cff5e92bb4244a34c9c41fa8
Reviewed-on: https://go-review.googlesource.com/24331
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2016-06-13 23:43:03,https://api.github.com/repos/golang/tools/git/commits/a2a552218a0e22e6fb22469f49ef371b492f6178,a2a552218a0e22e6fb22469f49ef371b492f6178,"godoc: rate limit file parsing on startup, improve diagnostics

When building the corpus of local packages, a ""too many open files""
error would cause some directories inside GOPATH to be skipped.
Further, the error would not be reported because it was masked by a
""file not found"" error from the GOROOT VFS layer.

This change adds a rate limit around parsing files when buildling
the directory tree, error reporting when godoc is run with -v, and
fixes the masked error issue in the vfs package.

It's possible that the rate limiting could be put into the
godoc/vfs/gatefs package, but I tried making the gate account for
open files (not just individual open/close/read/write operations)
but then godoc just hard locks (it wasn't designed to only open 20
files at once).

Change-Id: I925d120b53d9a86430b6977cb90eb143785ecc48
Reviewed-on: https://go-review.googlesource.com/24060
Reviewed-by: Dave Day <djd@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
audreylim,2016-06-13 20:54:00,https://api.github.com/repos/golang/tools/git/commits/3d35e41306ffcece1355f044f347080f9b3f3160,3d35e41306ffcece1355f044f347080f9b3f3160,"x/tools/present: fix null notes value on initial slide

Change-Id: I370fdf2ef7de33976028f8cd872402a08d8f103c
Reviewed-on: https://go-review.googlesource.com/24050
Reviewed-by: Andrew Gerrand <adg@golang.org>"
FiloSottile,2016-06-07 20:47:49,https://api.github.com/repos/golang/tools/git/commits/95963e031d86b0e7dafe40fde044d7f610404855,95963e031d86b0e7dafe40fde044d7f610404855,"imports: support symlinks in GOPATH

The go tool will import a package with a import path that traverses
symlinks with no problems, but goimports would remove that import
because it would fail to recognize the package as existent.

Fixes golang/go#14845

Note: if the file you are currently processing also has a name inside
the symlink, you might have to use the ""long"" path for vendoring to
work, as it wouldn't be recognized as ""deeper"" than the vendor folder
otherwise. For example in this tree:

.
├── myfile.go
└── x
    ├── vendor
    │   └── mypkg
    │       └── foo.go
    └── y -> ..

If myfile.go imports mypkg, you will have to process it as
./x/y/myfile.go, not ./myfile.go.

Change-Id: Ic8f41baed3f28d4e9b813160d91aef09ece1fc9f
Reviewed-on: https://go-review.googlesource.com/23803
Reviewed-by: Andrew Gerrand <adg@golang.org>
Run-TryBot: Andrew Gerrand <adg@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
audreylim,2016-04-03 23:39:49,https://api.github.com/repos/golang/tools/git/commits/b41cbfc0fac050e3a416b4f51df202a101cd2aa5,b41cbfc0fac050e3a416b4f51df202a101cd2aa5,"x/tools/present: add presenter notes documentation

Fixes golang/go#14654

Fixes golang/go#12355

Change-Id: I0c05db624170f7bef5883192b47b618ca343a830
Reviewed-on: https://go-review.googlesource.com/21489
Reviewed-by: Andrew Gerrand <adg@golang.org>"
audreylim,2016-04-03 23:36:34,https://api.github.com/repos/golang/tools/git/commits/19c2ab042a80921dcba430d996ddfa7c0a53224c,19c2ab042a80921dcba430d996ddfa7c0a53224c,"x/tools/present: display presenter notes and synchronize browser windows

Change-Id: If7d5cc52f7594c141060d40e8393ac69cb7ba9ad
Reviewed-on: https://go-review.googlesource.com/21488
Reviewed-by: Andrew Gerrand <adg@golang.org>"
kostya-sh,2016-05-28 02:55:32,https://api.github.com/repos/golang/tools/git/commits/6eef0b4fad0c51b103e29205c16f72fef5b09341,6eef0b4fad0c51b103e29205c16f72fef5b09341,"cmd/godoc: fix anchor links for constructors

Fixes golang/go#15866

Change-Id: I67f41026c64046ca581251fb0851d337d2651560
Reviewed-on: https://go-review.googlesource.com/23531
Reviewed-by: Andrew Gerrand <adg@golang.org>"
kostya-sh,2016-05-28 02:59:14,https://api.github.com/repos/golang/tools/git/commits/3560419ce9e2c8e8d7fd8a8221cebcb588a3c715,3560419ce9e2c8e8d7fd8a8221cebcb588a3c715,"godoc/static: makestatic.go: gofmt generated code

Change-Id: Ibe0948fa283af94b1213e9ef344ef9eda6e59c05
Reviewed-on: https://go-review.googlesource.com/23532
Reviewed-by: Andrew Gerrand <adg@golang.org>"
mattn,2016-05-12 04:39:32,https://api.github.com/repos/golang/tools/git/commits/ba484b064f228462fd5d8e41dcbbf4004636bbfe,ba484b064f228462fd5d8e41dcbbf4004636bbfe,"cmd/bundle: move down imports of external package

imports should be ordered like

    import (
    	""fmt""

    	""golang.org/x/text""
    )

Change-Id: I000374833de370463d772c2596c7ac6ee5e9725c
Reviewed-on: https://go-review.googlesource.com/23026
Reviewed-by: Mikio Hara <mikioh.mikioh@gmail.com>
Reviewed-by: Nigel Tao <nigeltao@golang.org>"
emonty,2016-05-24 13:08:02,https://api.github.com/repos/golang/tools/git/commits/6d483ee8323479ab4b8cca41d7033c69f880971f,6d483ee8323479ab4b8cca41d7033c69f880971f,"vcs: Add support for git.openstack.org

Go is being proposed as an officially supported language for elements of
OpenStack:

  https://review.openstack.org/#/c/312267/

As such, repos that exist in OpenStack's git infrastructure
are likely to become places from which people might want to go get
things. Allow optional .git suffixes to allow writing code that
depends on git.openstack.org repos that will work with older go versions
while we wait for this support to roll out.

Change-Id: I1f7be6b7aae63f9c554dbcdbfa46855bcff321df
Reviewed-on: https://go-review.googlesource.com/23362
Reviewed-by: Ian Lance Taylor <iant@golang.org>
Run-TryBot: Ian Lance Taylor <iant@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>"
adg,2016-05-19 06:23:57,https://api.github.com/repos/golang/tools/git/commits/9ae4729fba20b3533d829a9c6ba8195b068f2abc,9ae4729fba20b3533d829a9c6ba8195b068f2abc,"godoc/proxy: use HTTPS when bouncing through to the playground

Fixes golang/go#15692

Change-Id: I0d0731b249de9399b972c8ee9cf9e0f355d4fcc0
Reviewed-on: https://go-review.googlesource.com/23241
Reviewed-by: Andrew Gerrand <adg@golang.org>"
cezarsa,2016-04-13 21:57:13,https://api.github.com/repos/golang/tools/git/commits/c86fe5956d4575f29850535871a97abbd403a145,c86fe5956d4575f29850535871a97abbd403a145,"imports: try importing pkg path from vendor when looking for pkg name

Since CL 17728 goimports was using the file path to try finding packages
inside its /vendor directory. This CL builds upon this previous work to
also consider packages inside /vendor when converting an import path to
a package name.

Change-Id: I173472ac51e3f681d758ec52add60ffc04c62c1a
Reviewed-on: https://go-review.googlesource.com/22020
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-05-09 23:50:32,https://api.github.com/repos/golang/tools/git/commits/fbb6674a7495706ad1ba2d7cca18ca9d804ccdca,fbb6674a7495706ad1ba2d7cca18ca9d804ccdca,"go/gcimporter15: match recent changes to export format

This is a copy&paste fix of the changes in golang.org/cl/22839.

Fixes https://github.com/golang/lint/issues/207 .

Change-Id: I2c4850395c8aa330ea27ad629b21ac21b973ef75
Reviewed-on: https://go-review.googlesource.com/22963
Reviewed-by: Matthew Dempsky <mdempsky@google.com>
Reviewed-by: Alan Donovan <adonovan@google.com>"
adonovan,2016-05-04 20:46:49,https://api.github.com/repos/golang/tools/git/commits/3f1f7eeff104d9ef829677f12b9780dfdd26a96a,3f1f7eeff104d9ef829677f12b9780dfdd26a96a,"go/gcimporter15: set Pos attribute of decoded types.Objects

BImportData now requires a token.FileSet.
Column numbers are not exported, and are always reported as 1.
Line numbers greater than the limit (currently 64K) are reported as 1.

+ Test that file/line info is correctly preserved for the entire
  standard library.

Change-Id: I80cf370685320240dfb262d36fafd6cdf8569bfb
Reviewed-on: https://go-review.googlesource.com/22788
Reviewed-by: Robert Griesemer <gri@golang.org>"
nwidger,2016-03-06 14:31:52,https://api.github.com/repos/golang/tools/git/commits/2c200eec40d70d74e01852aad22cf6637e8f8f3d,2c200eec40d70d74e01852aad22cf6637e8f8f3d,"cmd/godoc: Add anchor links to functions, types and methods

Added anchor link beside each function, type and method definition in
godoc's generated HTML.  Anchor links are only shown when the mouse is
hovering over the definition.  The link body is the Unicode PILCROW SIGN
character (&#xb6; HTML entity).

Fixes: golang/go#13748

Change-Id: I645269f6c229f76b2882899e1a7483577877ac30
Reviewed-on: https://go-review.googlesource.com/20246
Reviewed-by: Andrew Gerrand <adg@golang.org>"
campoy,2016-05-01 13:45:43,https://api.github.com/repos/golang/tools/git/commits/0b2f4dcf4db5371000beb66b65cde17aa91a28a2,0b2f4dcf4db5371000beb66b65cde17aa91a28a2,"tools: fix 'Split called after Scan'

Change-Id: I2dae23440d33fa830107575987805e858e4bf4a7
Reviewed-on: https://go-review.googlesource.com/22749
Reviewed-by: Andrew Gerrand <adg@golang.org>"
griesemer,2016-05-03 15:58:41,https://api.github.com/repos/golang/tools/git/commits/8dab6f11295bfbb4ddd1fca4efa34261bc9ea0fb,8dab6f11295bfbb4ddd1fca4efa34261bc9ea0fb,"go/gcimporter15: adopt changes from golang.org/cl/22714

Fixes x/tools build.

Change-Id: Ifd958ff1293ec2c4fd971813ae7b199b5d8244fe
Reviewed-on: https://go-review.googlesource.com/22721
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2016-05-01 05:56:16,https://api.github.com/repos/golang/tools/git/commits/c9a2436076ccd8b926215df8bce88b07ebdbccc8,c9a2436076ccd8b926215df8bce88b07ebdbccc8,"cmd/godoc: set Strict-Transport-Security header in production

This coerces browsers into enforcing HTTPS-only for golang.org.

Change-Id: I91a4cc64b10b9836ef5623314a3cf22a54033dc2
Reviewed-on: https://go-review.googlesource.com/22673
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2016-05-01 06:00:33,https://api.github.com/repos/golang/tools/git/commits/0238d429c7ad51c9cb95c32f10c7d92964792dc8,0238d429c7ad51c9cb95c32f10c7d92964792dc8,"cmd/tip: set Strict-Transport-Security header in production

Change-Id: I33db74025785c802a634f324ad110a4ec5381c1f
Reviewed-on: https://go-review.googlesource.com/22674
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2016-05-02 16:01:04,https://api.github.com/repos/golang/tools/git/commits/f3109af80d49c7baac52514e1d4f6d3f8914dcca,f3109af80d49c7baac52514e1d4f6d3f8914dcca,"playground: fix share URL

The baseURL is used to construct the target URLs for both /compile
and /share. When I changed it recently, I forgot about the latter case.

Change-Id: Icde617b1cc3d31d98ca4b62e313b9d886253f1cc
Reviewed-on: https://go-review.googlesource.com/22689
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kostya-sh,2016-04-28 02:55:11,https://api.github.com/repos/golang/tools/git/commits/d4437bf59744b83da8bb401f87f0ae099fc66564,d4437bf59744b83da8bb401f87f0ae099fc66564,"imports: add go:generate directive for generating zstdlib.go

Change-Id: I8c54e01799f690819cda746ad5fb7c4d87e769c4
Reviewed-on: https://go-review.googlesource.com/22541
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-04-28 21:38:59,https://api.github.com/repos/golang/tools/git/commits/686d0ad5b87ed507f86def89d5e63d555036928e,686d0ad5b87ed507f86def89d5e63d555036928e,"go/ssa: reduce set of expected indirect imports

...now that gc's export data records fewer dependencies.

Change-Id: Ie0f68f1f7b0825f6d2c100dfe189be017383db60
Reviewed-on: https://go-review.googlesource.com/22584
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-04-28 20:47:39,https://api.github.com/repos/golang/tools/git/commits/c5c16cf68a7d3f6d3feb536af2a3e620d2e7ed10,c5c16cf68a7d3f6d3feb536af2a3e620d2e7ed10,"go/gcimporter: update importer to match latest gc export data changes

Adjustments taken from https://golang.org/cl/22580.

Change-Id: Ic88137b410767bd17e3d6142cec2b5a112df56be
Reviewed-on: https://go-review.googlesource.com/22582
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-04-28 18:12:43,https://api.github.com/repos/golang/tools/git/commits/14480f21a0d927bdb9fdcad7edbd934abe81767a,14480f21a0d927bdb9fdcad7edbd934abe81767a,"cmd/guru: for determinism, sort referrers output in test

Previously we were sorting only JSON objects, but we must do the same
for plain output too to avoid sporadic failures.

Tested 20 times.

Change-Id: Ic60363b720c2afc91b57864bc93e298f83e85b99
Reviewed-on: https://go-review.googlesource.com/22555
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-04-28 17:44:44,https://api.github.com/repos/golang/tools/git/commits/56005b4126fe4c3f7454f0a4c63a31a28491cb92,56005b4126fe4c3f7454f0a4c63a31a28491cb92,"go/ssa/interp: add intrinsic for runtime.NumGoroutine

...which is used by $GOROOT/test/goprint.go.

Change-Id: I4626b8fae3f87d9c8dd8cdcd8c05036955a36262
Reviewed-on: https://go-review.googlesource.com/22560
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-04-27 18:13:18,https://api.github.com/repos/golang/tools/git/commits/50ff896a1cbefcfb06368aec7d4c3904bf5c8651,50ff896a1cbefcfb06368aec7d4c3904bf5c8651,"cmd/guru: definition: opt: avoid type checker for qualified identifiers

For a 'definition' query on X in p.X, use special logic to load and
parse package p and find the declaration of package member X, without
using the type checker.  Such queries now typically take under
10ms (faster than godef).

The logic assumes that import ""something/p"" defines the name p.  If this
assumption is false, p.X could be a selection of a field or method X on
a member p of the same package, defined in another file.
So don't write code like that.

Added missing test of 'definitions'.
JSON tests now sanitize absolute $GOPATH filenames in the output.

Fixes issue #15458

Change-Id: I21e75fcc9372aaedd56851cace444aef205c7a97
Reviewed-on: https://go-review.googlesource.com/22526
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Michael Matloob <matloob@golang.org>"
kostya-sh,2016-04-28 02:41:15,https://api.github.com/repos/golang/tools/git/commits/e48e17a0b53ae4153fa6507c56e898a9ad9e0d89,e48e17a0b53ae4153fa6507c56e898a9ad9e0d89,"imports: update static stdlib index to go1.6

Change-Id: Ie19594472ec0fa2455a3f1aeac681e74eb3a6b0b
Reviewed-on: https://go-review.googlesource.com/22539
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adonovan,2016-04-17 16:46:58,https://api.github.com/repos/golang/tools/git/commits/0f5f9fcf9a6bbb4d763b2dcd349421959cde4201,0f5f9fcf9a6bbb4d763b2dcd349421959cde4201,"cmd/guru: implements: if selected expr is a value, use its type

...as the basis of the query, instead of reporting an error.

+ test

Change-Id: Ie5defa98cd8dfc8e200e296c2aa02c88893cf9ac
Reviewed-on: https://go-review.googlesource.com/22117
Reviewed-by: Michael Matloob <matloob@golang.org>"
adonovan,2016-04-09 19:34:27,https://api.github.com/repos/golang/tools/git/commits/9ae7e1769c8df0883c58182c2a555089bed55e31,9ae7e1769c8df0883c58182c2a555089bed55e31,"cmd/guru: Emacs: run guru asynchronously using compilation-mode

We define a derived mode of compilation-mode, so that various
names say ""guru"" instead of ""compilation"", and use the hooks it
provides to apply our postprocessing incrementally instead of
all at the end.  It's much faster, and works nicely with the
new streaming referrers query.

Compilation mode requires a shell command, not an execve array,
so go-guru--compile-command joins the arguments with spaces.
go-guru--exec has been specialized for JSON mode,
and renamed to go-guru--json.

go-guru--set-scope-if-empty is now done by each mode, to avoid
the NEED-SCOPE parameter to go-guru--exec.

Change-Id: I692b8b28449b7cc17fd6251a152588f9d8b89ebc
Reviewed-on: https://go-review.googlesource.com/21772
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2016-04-28 00:44:37,https://api.github.com/repos/golang/tools/git/commits/94f857c7cfbc5d8f9a4d0bc33ca16e3d968bb6e2,94f857c7cfbc5d8f9a4d0bc33ca16e3d968bb6e2,"cmd/tip: bump verison serving tip.golang.org to HEAD

This picks up a recent change to the playground package.

Change-Id: I9b5f0ef9981373274d707014a2c0e2786e9624c0
Reviewed-on: https://go-review.googlesource.com/22538
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2016-04-27 05:24:22,https://api.github.com/repos/golang/tools/git/commits/1f1b3322f67af76803c942fd237291538ec68262,1f1b3322f67af76803c942fd237291538ec68262,"playground: hit golang.org/compile endpoint instead of play.golang.org

Not sure why this was originally going via the playground. It needn't.

Change-Id: I40b5886a56ba4b941ff74f4bc325625412d7eaff
Reviewed-on: https://go-review.googlesource.com/22497
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2016-04-22 03:40:43,https://api.github.com/repos/golang/tools/git/commits/53006ac4c204faf590b60aaeda0f13d0d3361927,53006ac4c204faf590b60aaeda0f13d0d3361927,"cmd/tip: redirect from HTTP to HTTPS; update to Go 1.6

Change-Id: I7b219a991df4f71d068b62a22f69acb123ac31f0
Reviewed-on: https://go-review.googlesource.com/22367
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-04-25 21:56:12,https://api.github.com/repos/golang/tools/git/commits/4e3242e000c9086052d8d700ca255d64e2b9fdfb,4e3242e000c9086052d8d700ca255d64e2b9fdfb,"go/gcimporter: cut off any gc-specific parameter numbering

Matching pending CL https://golang.org/cl/22441/.

Change-Id: I96fab1da7abfeb8f22ce680183649dfa4b84d461
Reviewed-on: https://go-review.googlesource.com/22442
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-04-25 20:02:21,https://api.github.com/repos/golang/tools/git/commits/487c81ee3313ae07db365dc61dd01d91f78d9b94,487c81ee3313ae07db365dc61dd01d91f78d9b94,"go/gcimporter15: match https://golang.org/cl/22385

Don't export position info for now. Enabled/disabled with a flag.
The importer recognizes the chosen format automatically.

Change-Id: I055818eb9dba50cc97f40eb92220258a1ddbfbec
Reviewed-on: https://go-review.googlesource.com/22427
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2016-04-13 23:31:55,https://api.github.com/repos/golang/tools/git/commits/477d3b98e5c650e877b858e6c26b9de2ef46341a,477d3b98e5c650e877b858e6c26b9de2ef46341a,"godoc: recognize examples with unordered output

A pared down verison of https://golang.org/cl/20458
that is compatible with Go 1.5.

Fixes golang/go#10149

Change-Id: I550b097dc1cd65d0711bdea943f2b0678cfbc5fd
Reviewed-on: https://go-review.googlesource.com/22032
Reviewed-by: Caleb Spare <cespare@gmail.com>
Reviewed-by: Andrew Gerrand <adg@golang.org>
Run-TryBot: Andrew Gerrand <adg@golang.org>"
adonovan,2016-04-17 16:37:22,https://api.github.com/repos/golang/tools/git/commits/5e468032ea9e193c60de97cfcd040ffa7a9b774e,5e468032ea9e193c60de97cfcd040ffa7a9b774e,"cmd/guru: avoid bug when -scope=""""

strings.Split is not your friend.

Change-Id: I829f08f113f3340b2dd865aea47f5759a427f7c4
Reviewed-on: https://go-review.googlesource.com/22116
Reviewed-by: Michael Matloob <matloob@golang.org>"
adg,2016-04-18 03:04:04,https://api.github.com/repos/golang/tools/git/commits/0c4d9b309900fcec927633e5a5fe08a1f44ecad4,0c4d9b309900fcec927633e5a5fe08a1f44ecad4,"godoc/dl: remove broken link to old releases

Fxies golang/go#15284

Change-Id: I64db7db801eb8ab89765aeb6ab3f3facad4f21be
Reviewed-on: https://go-review.googlesource.com/22165
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dominikh,2016-04-15 21:03:12,https://api.github.com/repos/golang/tools/git/commits/3114265539b6c85f1c6f172bb589baecc129874b,3114265539b6c85f1c6f172bb589baecc129874b,"cmd/guru: emacs: interpret byte offsets correctly

Change-Id: Id506c6c0b3f3c585781bfc38df1b665d507a7c33
Reviewed-on: https://go-review.googlesource.com/22019
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-04-16 10:42:08,https://api.github.com/repos/golang/tools/git/commits/837ce23ea348dcb09182fe7a87437b76ec39107b,837ce23ea348dcb09182fe7a87437b76ec39107b,"cmd/guru: emacs: report most specific element in expand-region

Keep the leftmost element when removing duplicates, so that we report
""function call"" instead of ""expression statement"".

Also split go-guru--enclosing into two functions.

Change-Id: Ie325613e292e36dda9558eda54bc7323fbf0bc6d
Reviewed-on: https://go-review.googlesource.com/22132
Reviewed-by: Alan Donovan <adonovan@google.com>"
motemen,2016-04-16 17:19:34,https://api.github.com/repos/golang/tools/git/commits/321c6fd1712ce3e7b050d41b524e6ec44f945f15,321c6fd1712ce3e7b050d41b524e6ec44f945f15,"cmd/stringer: fixed usage line typo

Change-Id: I5852d03c0326d82c13d9e1078f9648ecc695fbbf
Reviewed-on: https://go-review.googlesource.com/22150
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-04-14 22:38:53,https://api.github.com/repos/golang/tools/git/commits/764c4ccf448e9568efd90fa837d6c38ee64252e9,764c4ccf448e9568efd90fa837d6c38ee64252e9,"go/gcimporter15: match https://golang.org/cl/22096/

Read and write position info.

Change-Id: Ibe4a914ff51911bbda656b08f1397132e495ab8a
Reviewed-on: https://go-review.googlesource.com/22098
Reviewed-by: Alan Donovan <adonovan@google.com>"
simonjefford,2016-04-13 15:37:18,https://api.github.com/repos/golang/tools/git/commits/4b9c8b56b805848dc5d50aca0cf02723d30482fc,4b9c8b56b805848dc5d50aca0cf02723d30482fc,"cmd/godoc: fix multi-paragraph marker rendering

Fixes golang/go#15231

Change-Id: Ia0e00f1eca41dfdd85158feb3fa300df40cfa185
Reviewed-on: https://go-review.googlesource.com/21972
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2016-04-14 02:13:35,https://api.github.com/repos/golang/tools/git/commits/3868f57059a826bce3a0097012d4870f8d7c9bd1,3868f57059a826bce3a0097012d4870f8d7c9bd1,"godoc/static: replace version strings with actual versions

This will allow the source installation instructions to
always show the current version, but only when that version
is a release version.

Fixes golang/go#14371

Change-Id: Ibfad8054f3c75d9320ca94ba5149ab9bf052157e
Reviewed-on: https://go-review.googlesource.com/22056
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-04-13 05:06:59,https://api.github.com/repos/golang/tools/git/commits/5da1e91fb2cc877989e7c73748b505a0612956f2,5da1e91fb2cc877989e7c73748b505a0612956f2,"go/gcimporter15: match https://golang.org/cl/21939/

Plus cleanups from https://golang.org/cl/21963/.

Change-Id: Ifb216081581950f38d73bcb5f22e2ca7acd64f01
Reviewed-on: https://go-review.googlesource.com/21965
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2016-04-13 01:15:14,https://api.github.com/repos/golang/tools/git/commits/c3291436fa3bc9d4246ad2434b89496fd7c85089,c3291436fa3bc9d4246ad2434b89496fd7c85089,"cmd/tip: look for godoc binary under $GOPATH/bin instead of $GOROOT/bin

A recent change to the cmd/go tool made it place godoc in $GOPATH/bin
instead of the special-cased $GOROOT/bin.

Change-Id: If026ff7e3a521ee2aa9b4107585124df108d7124
Reviewed-on: https://go-review.googlesource.com/21951
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dominikh,2016-04-11 18:58:33,https://api.github.com/repos/golang/tools/git/commits/446a18e7091bdea5c45cba7ade08a311d9956c99,446a18e7091bdea5c45cba7ade08a311d9956c99,"go/buildutil, cmd/guru: extract overlay context into buildutil

This extracts the overlay context and archive parsing from guru into
buildutil.

At least one tool (gogetdoc) has a vendored copy of this code already,
and more tools implementing the same functionality will follow.

The new code in buildutil is an almost identical copy of the code in
guru (names aside), except for the following changes:

- Instead of reading into a bytes.Buffer, we read directly into a []byte
  of appropriate size

- sameFile first attempts a simple comparison of path.Clean'ed paths.

Change-Id: I97cd978ccc10722e3648e5e10625fa7f1407f202
Reviewed-on: https://go-review.googlesource.com/21805
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-04-09 18:52:02,https://api.github.com/repos/golang/tools/git/commits/fb9c7fc43c97e918a21d7be33d10044ed293e438,fb9c7fc43c97e918a21d7be33d10044ed293e438,"cmd/guru: emacs: add function for expandiong region

The go-guru-expand-region function uses the ""what"" query to determine
the enclosing regions. Consecutive calls to go-guru-expand-region will
reuse a cached version of the list.

Change-Id: Ice9ac5540c1b639c6cbdc505866bbab347be1e98
Reviewed-on: https://go-review.googlesource.com/21754
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-04-12 19:31:05,https://api.github.com/repos/golang/tools/git/commits/b9ac36caf8fc6a7ac5932e94c5324070a34a7706,b9ac36caf8fc6a7ac5932e94c5324070a34a7706,"go/gcimporter15: match https://golang.org/cl/21896/

Change-Id: I1cd7a77617658c057c863bd311470f1f22062aee
Reviewed-on: https://go-review.googlesource.com/21900
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-04-12 17:07:16,https://api.github.com/repos/golang/tools/git/commits/51487f711d37b1d88626391ee8e4da8a516e1231,51487f711d37b1d88626391ee8e4da8a516e1231,"x/tools: remove remaining files tagged for Go 1.4

(accidentally omitted from https://go-review.googlesource.com/20810)

Change-Id: Ib6ee4b2e43b6f32c5c0c031910087cc39d5c5d14
Reviewed-on: https://go-review.googlesource.com/21862
Reviewed-by: Robert Griesemer <gri@golang.org>"
dmitshur,2016-04-10 01:14:50,https://api.github.com/repos/golang/tools/git/commits/d601baae9c8df74f2531dfdca1e13c2ba8fd5eec,d601baae9c8df74f2531dfdca1e13c2ba8fd5eec,"go/vcs: apply test style improvements from cmd/go

Apply style improvements to TestFromDir from golang/go@b6cd6d7d3211bd90,
in order to keep them in sync.

Check for error when creating a directory, its successful existence is a
precondition for the test to run.

Helps golang/go#11490.

Change-Id: I87054114c84aead96977f603ca3bd9eccfcfbd5e
Reviewed-on: https://go-review.googlesource.com/21795
Reviewed-by: Alex Brainman <alex.brainman@gmail.com>"
alandonovan,2016-04-01 19:04:45,https://api.github.com/repos/golang/tools/git/commits/2da0720e4f0a8d82e510747c24a9e09038acb984,2da0720e4f0a8d82e510747c24a9e09038acb984,"cmd/guru: support streaming plain and -json output

Visible changes:
- ""referrers"" queries now emit a stream of results,
  so they start appearing quickly even in large queries.
  We no longer report the total number of matches.
- packageReferrers now also uses AfterTypeCheck hook and streaming.
- XML support has been dropped.
- The -format flag has been replaced by -json.

JSON protocol changes:
- The enclosing Result struct has been removed.
- Likewise the 'mode' field (since the caller knows it already)
- ""freevars"" and ""referrers"" now emit a stream of objects
  In the case of referrers, the first object has a different from the rest.
- The ""referrers"" results include the text of the matching line
  (parity with -json=false)

Implementation details:
- the concurrency-safe q.Output function can be called
  many times, each with a queryResult to print.
- fset is no longer saved in Query (cleaner)
- queryResult methods renamed PrintPlain, JSON

Change-Id: I41a4e3f57f266fcf043ece4045bca82c6f6a356f
Reviewed-on: https://go-review.googlesource.com/21397
Reviewed-by: Michael Matloob <matloob@golang.org>"
dmitshur,2016-03-31 05:21:51,https://api.github.com/repos/golang/tools/git/commits/13c24a6d6a329878e5ee2cdb76d84423604191d5,13c24a6d6a329878e5ee2cdb76d84423604191d5,"go/vcs: report correct directory for 'no version control'

Apply golang/go@b99fdb2a11ae58834a2c0c646f54d0a587dd269c.

Updates golang/go#6175.
Helps golang/go#11490.

Change-Id: I897bac1bac94b53e950cb5cf5e572d25a7c5996b
Reviewed-on: https://go-review.googlesource.com/21342
Reviewed-by: Andrew Gerrand <adg@golang.org>"
audreylim,2016-04-03 23:33:36,https://api.github.com/repos/golang/tools/git/commits/b75b3f5cd5d50fbb1fb88ce784d2e7cca17bba8a,b75b3f5cd5d50fbb1fb88ce784d2e7cca17bba8a,"x/tools/present: add command line flag to enable presenter notes

Change-Id: I9d4414ce8bafcb13f53361b45774f379bacd886b
Reviewed-on: https://go-review.googlesource.com/21486
Reviewed-by: Andrew Gerrand <adg@golang.org>"
audreylim,2016-04-03 23:27:25,https://api.github.com/repos/golang/tools/git/commits/52d9c872e340cad8da00dbde80f6c90cd3ee1f66,52d9c872e340cad8da00dbde80f6c90cd3ee1f66,"x/tools/present: parse presenter notes and record them in Section struct

This is the first of a series of changes that add support for
speaker notes to the Go present tool. This is done by displaying
slides with speaker notes on a second window, and synchronizing
both windows.

Updates golang/go#14654

Change-Id: Ic7b158d1e40f9e7e58d01791c88909f5619ce87f
Reviewed-on: https://go-review.googlesource.com/21485
Reviewed-by: Andrew Gerrand <adg@golang.org>"
griesemer,2016-04-06 21:13:27,https://api.github.com/repos/golang/tools/git/commits/83f918d66bc8f7d594cf0f2ff3756944f491adf5,83f918d66bc8f7d594cf0f2ff3756944f491adf5,"go/gcimporter15: update gcexporter to match gc export format

Change-Id: Icd84cbef6463ba584a2a29f01b23c7e4542d0101
Reviewed-on: https://go-review.googlesource.com/21618
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-04-06 22:00:18,https://api.github.com/repos/golang/tools/git/commits/f07cde3d91da1b9e207b43aa4ce4b822555d1f8b,f07cde3d91da1b9e207b43aa4ce4b822555d1f8b,"refactor/eg: fix build after deletion of x/tools/go/types

Change-Id: Ic8d9c37230b3359a3caa7514c89eae9595f2fb80
Reviewed-on: https://go-review.googlesource.com/21584
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-03-17 19:25:34,https://api.github.com/repos/golang/tools/git/commits/adaaa074861b0d254acf51dec74daf7c2ba20e90,adaaa074861b0d254acf51dec74daf7c2ba20e90,"x/tools: delete x/tools/go/types and dependent packages/client files

Per https://groups.google.com/forum/#!topic/golang-announce/qu_rAphYdxY
this change deletes the packages

  go/exact
  go/gccgoimporter
  go/gcimporter
  go/importer
  go/types
  cmd/vet

from the x/tools repo and any files depending on those packages
building against Go 1.4.

x/tools packages depending on any of these libraries must use the
respective versions from the std lib or use vendored versions if
building against 1.4.

Remaining packages may or may not build against Go 1.4 anymore
and will not be supported against 1.4.

Change-Id: I1c655fc30aee49b6c7326ebd4eb1bb0836ac97e0
Reviewed-on: https://go-review.googlesource.com/20810
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2016-04-05 22:21:58,https://api.github.com/repos/golang/tools/git/commits/fe1488f8abd7e0eea44f1950dad93a6ff6880a60,fe1488f8abd7e0eea44f1950dad93a6ff6880a60,"present: fix misspelled TODO

Change-Id: Id984c4e5c7cde4a5ecf3ae783441fc866d86d404
Reviewed-on: https://go-review.googlesource.com/21527
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
adg,2016-04-05 22:45:55,https://api.github.com/repos/golang/tools/git/commits/e77df0732c8c9ad53effb90e2bfba173c55f7941,e77df0732c8c9ad53effb90e2bfba173c55f7941,"cmd/tip: use manual scaling for tip.golang.org

Always serve from four instances to avoid flakiness.

Change-Id: I11684f93bb27a377f54ddbe4fb3d95894d393a48
Reviewed-on: https://go-review.googlesource.com/21528
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
griesemer,2016-04-05 19:49:32,https://api.github.com/repos/golang/tools/git/commits/44f369b77936e16f6cc4bd35182e94668fb9978d,44f369b77936e16f6cc4bd35182e94668fb9978d,"gco/gcimporter15: update importer to match new gc binary export format

This is simply a copy of std lib's go/internal/gcimporter/bimport.go
with updated header comment and build tag. No semantic changes.

This will fix part of the x/tools build break at tip. The other part
is to adjust bexport.go (next CL).

Change-Id: Ibc37fae7e0d0447fdea9e3a733aa38589735c59a
Reviewed-on: https://go-review.googlesource.com/21543
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2016-04-05 16:10:15,https://api.github.com/repos/golang/tools/git/commits/02e8ee6893d42fbed1f021f3acb3d2d2f96a04f3,02e8ee6893d42fbed1f021f3acb3d2d2f96a04f3,"imports: add Options.FormatOnly

Fixes golang/go#14500

Change-Id: Ied9d772e5f606ce6716193faa2c1a285f0ab00b9
Reviewed-on: https://go-review.googlesource.com/21532
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2016-04-04 04:28:37,https://api.github.com/repos/golang/tools/git/commits/f2e4f834ecb7acd0edd3ba4d2d777b55f1a42470,f2e4f834ecb7acd0edd3ba4d2d777b55f1a42470,"cmd/present/static: remove unused function

Change-Id: I2d5db20ffb2ae59818b69d33d91256bc829ee6d8
Reviewed-on: https://go-review.googlesource.com/21445
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-04-01 14:32:03,https://api.github.com/repos/golang/tools/git/commits/6361b5799a8e5f2ed8a234717d217fd289451c53,6361b5799a8e5f2ed8a234717d217fd289451c53,"go/pointer: clarify a comment

Change-Id: Ia434ca4e7259cdb9a6f50d51432977fd31be27db
Reviewed-on: https://go-review.googlesource.com/21391
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
adonovan,2016-03-29 18:32:15,https://api.github.com/repos/golang/tools/git/commits/84e7bc0dd39bab24b696dde4d714641fa738f945,84e7bc0dd39bab24b696dde4d714641fa738f945,"go/loader: don't pass ldflags to cgo

Although these flags are harmless on linux, they
cause clang on darwin to issue an error about
unused flags (-lpthread).  We only care about compilation
so we don't need them.

Change-Id: I0fc756e2f4d7a829d43b5aa912c4e4b24a802a1c
Reviewed-on: https://go-review.googlesource.com/21283
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-03-29 16:29:14,https://api.github.com/repos/golang/tools/git/commits/0ed9f242ee2c67068188017ba7e46a86d91ddefb,0ed9f242ee2c67068188017ba7e46a86d91ddefb,"go/loader: update stdlib test after changes to stdlib

The os/user.lookup function no longer exists so instead we use
os/user.current.  (This function also existed in go1.5.)

Change-Id: Ic66d80acc186289331f1023e0145370feab6a001
Reviewed-on: https://go-review.googlesource.com/21281
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-03-29 14:29:08,https://api.github.com/repos/golang/tools/git/commits/0d7417cc0214b2b3ccf413e3eb9f2dd0b8ea918e,0d7417cc0214b2b3ccf413e3eb9f2dd0b8ea918e,"go/pointer: disable analysis of runtime package

It has few interesting effects on aliasing and it contains a lot of
unsafe code that we can't analyze.

Change-Id: I66d3592ea7797802c6be36eb30fd17e2ee307e50
Reviewed-on: https://go-review.googlesource.com/21260
Reviewed-by: Robert Griesemer <gri@golang.org>"
AkihiroSuda,2016-03-25 04:48:32,https://api.github.com/repos/golang/tools/git/commits/681404b4b2ebf4ba465e2fdb8217e97744be40a8,681404b4b2ebf4ba465e2fdb8217e97744be40a8,"go/loader: support pkg-config

Fix golang/go#13526

Signed-off-by: Akihiro Suda <suda.kyoto@gmail.com>

Change-Id: I015a3777c345ec06455ebf275c6acc246e8be73d
Reviewed-on: https://go-review.googlesource.com/21121
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-09 01:36:08,https://api.github.com/repos/golang/tools/git/commits/74b98c2c7a3672416250e65c8eaa76c3aabe0e08,74b98c2c7a3672416250e65c8eaa76c3aabe0e08,"cmd/guru: emacs: only check modified buffers with file names

We cannot determine the extension of buffers with no file names (not
without throwing an error, anyway.)

Change-Id: I2b10390da738d71b6f95a6f668d3b92b54db29ed
Reviewed-on: https://go-review.googlesource.com/20470
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-09 14:34:04,https://api.github.com/repos/golang/tools/git/commits/fc3ceb182530a065271bc29e4a7b16b7c4929e06,fc3ceb182530a065271bc29e4a7b16b7c4929e06,"cmd/guru: emacs: update default-directory

That way, running guru on /a/foo.go, followed by /b/bar.go won't leave
the user with a display buffer that still defaults to /a/

Change-Id: I3f9b085c6d206ac2adc269fc2009799c624c371a
Reviewed-on: https://go-review.googlesource.com/20475
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-09 13:51:31,https://api.github.com/repos/golang/tools/git/commits/999f50710050053de9ee43a7f3f4ae7651c184c4,999f50710050053de9ee43a7f3f4ae7651c184c4,"cmd/guru: emacs: store output in separate buffer

Now that we have both interactive and non-interactive uses of the guru,
we should separate the command output buffer from the display buffer.

Change-Id: I50082fdc3847c7b12869e204509141e906df3852
Reviewed-on: https://go-review.googlesource.com/20473
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-08 20:35:31,https://api.github.com/repos/golang/tools/git/commits/5c5d8332080fd8c2caf96b338c9f52df6d2c7260,5c5d8332080fd8c2caf96b338c9f52df6d2c7260,"cmd/guru: emacs: support running on nameless buffers

By using guru's -modified flag and making up a file name, we can run
guru on a buffer that has no file attached to it. This feature will only
be useful for queries that operate on single files, as otherwise our made
up name could cause conflicts.

This will be useful for the ""what"" query and features using it.

Change-Id: I3d199bc0548245d59ba7b492f57beb9422d7f43d
Reviewed-on: https://go-review.googlesource.com/20431
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-03-25 14:23:05,https://api.github.com/repos/golang/tools/git/commits/35cacb533ebacc58422cb578526aed4a9e23cbda,35cacb533ebacc58422cb578526aed4a9e23cbda,"cmd/guru: change ""Method set:"" to less formal ""Methods:""

Change-Id: I7a43f3e9ed7e88f4f8f09d4d112c81aa037b7d8d
Reviewed-on: https://go-review.googlesource.com/21111
Reviewed-by: Michael Matloob <matloob@golang.org>"
davidrjenni,2016-02-24 09:45:56,https://api.github.com/repos/golang/tools/git/commits/c6be41b91f7bd1224366b5e82a1ac2735b01fb0c,c6be41b91f7bd1224366b5e82a1ac2735b01fb0c,"go/ast/astutil: add merging pass to AddImport and AddNamedImport.

After inserting an import, merge all import declarations.

Fixes golang/go#14075.

Change-Id: I17fceb60f490deced2ee8eadf78091720580ffa1
Reviewed-on: https://go-review.googlesource.com/19828
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dominikh,2016-03-26 05:16:12,https://api.github.com/repos/golang/tools/git/commits/361bcb2be3eb3ebc2db2be295a33b4e3531f053d,361bcb2be3eb3ebc2db2be295a33b4e3531f053d,"all: address vet issues, fix print calls

This fixes some print calls with wrong format directives. Additionally,
struct initialisers were changed to use keyed fields, purely to reduce
the amount of noise generated by go vet.

Change-Id: Ib9f6fd8f2dff7ce84826478de0ba83dda9746270
Reviewed-on: https://go-review.googlesource.com/21180
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
idora,2016-03-26 07:30:49,https://api.github.com/repos/golang/tools/git/commits/3b9441cce4719ed5198481549ecf7d160ca6433b,3b9441cce4719ed5198481549ecf7d160ca6433b,"go/importer: fix doc typo

Fix the following issue detected by golint:

	import.go:9:1: package comment should be of the form ""Package importer ...""

It makes the package comment more consistent with other packages.

Change-Id: I1415066c136ce249af19d70848a38203caf7c9c7
Reviewed-on: https://go-review.googlesource.com/21177
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-03-25 17:35:18,https://api.github.com/repos/golang/tools/git/commits/5a2fc32f4475381b7c41823909c5ec098f07c040,5a2fc32f4475381b7c41823909c5ec098f07c040,"imports: adjust vendored packages test to keep working against 1.6

The prior commit fixed this test for tip (1.7) but broke it for 1.6.

Change-Id: Ic39d215ac8bc60dba4b66201f1f16713b2e02d9c
Reviewed-on: https://go-review.googlesource.com/21144
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-03-25 17:03:58,https://api.github.com/repos/golang/tools/git/commits/35f54f0ea088a9ee17b12172bae73a86d48aefdd,35f54f0ea088a9ee17b12172bae73a86d48aefdd,"imports: adjust tests to check vendored packages again (fix build)

Change-Id: I616dccc07c255bb7ca1146ad0d37d05999eeb772
Reviewed-on: https://go-review.googlesource.com/21142
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-25 05:53:37,https://api.github.com/repos/golang/tools/git/commits/47218d24f212e7c2842e86977c1e213d65771ec8,47218d24f212e7c2842e86977c1e213d65771ec8,"cmd/guru: whicherrs: don't crash on dead code

Change-Id: I5e80613ec27a4edb45516ff1ff3a88d5f9cb3a67
Reviewed-on: https://go-review.googlesource.com/21130
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-08 23:07:18,https://api.github.com/repos/golang/tools/git/commits/824b504fc734b5a1937a7860175838a86642481f,824b504fc734b5a1937a7860175838a86642481f,"cmd/guru: emacs: highlight all instances of an identifier

Implement the ""what"" query and use it to get all uses of an
identifier (the ""sameids"" attribute). The user can either manually call
go-guru-hl-identifier, which will highlight all instances of the
identifier under point, or they can enable the
go-guru-hl-identifier-mode minor mode. The minor mode sets up an idle
timer, which will highlight the current identifier after a configurable
timeout. If the user modifies the buffer, or moves point off of an
identifier, we clear the highlight.

Change-Id: Iac870f3bcd17e0002eafcba0b73f07adaa03cd76
Reviewed-on: https://go-review.googlesource.com/20433
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2016-03-21 19:42:17,https://api.github.com/repos/golang/tools/git/commits/21cc49bd030cf5c6ebaca2fa0e3323628efed6d8,21cc49bd030cf5c6ebaca2fa0e3323628efed6d8,"cmd/guru: fix assignment to entry in nil map.

Fixes golang/go#14746.

Change-Id: Id79c43c7d3700b98c010aa7dc0aac2463164be09
Reviewed-on: https://go-review.googlesource.com/20988
Reviewed-by: Alan Donovan <adonovan@google.com>"
srinathh,2016-02-15 02:14:09,https://api.github.com/repos/golang/tools/git/commits/936084890addeb6a59af6777f071465fd149c9c8,936084890addeb6a59af6777f071465fd149c9c8,"x/tools/godoc/vfs: adds NewNameSpace() and emptyVFS for better behavior

The existing implementation of NameSpace implicitly assumes that a
FileSystem with a directory at the top will be mounted at the root
mount point ""/"" of the NameSpace. If this is not the case, then
Stat(""/"") will fail even if ReadDir(""/"") succeedes. This is unexpected
behavior which breaks directory traversal routines (eg. http.FileServer).

This CL adds an unexported implementation of FileSystem called emptyVFS
that emulates an empty directory and adds a NewNameSpace() function that
binds emptyVFS to ""/"" so that unexpected behavior does not arise even if
the use does not mount anything explicitly at ""/"".

Latest patch set causes the FileInfo of the empty top level emulated
directory to return ""/"" for Name() and Zero Time for ModTime() and
removes the related struct state fields being used in the previous
implementation.

Fixes golang/go#14190

Change-Id: Idce2fc3c9b81206847a33840d76b660059d53d18
Reviewed-on: https://go-review.googlesource.com/19445
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
yulrizka,2016-03-19 08:01:33,https://api.github.com/repos/golang/tools/git/commits/6e94e8a89f540122eaaf125fd43055d59fb22099,6e94e8a89f540122eaaf125fd43055d59fb22099,"imports: cleanup test due to assignment copies of sync.Once

go vet detected that the value of pkgIndexOnce
is copied through assignments in the test.
This patch fixes that by converting it to *sync.Once instead.

Change-Id: I90b2252942625b2f8a93eb5da24d16c6a8a56e4e
Reviewed-on: https://go-review.googlesource.com/20910
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-03-18 17:09:10,https://api.github.com/repos/golang/tools/git/commits/fcde77432eb91f1389e8b5be6a4d018536ceac02,fcde77432eb91f1389e8b5be6a4d018536ceac02,"go/gcimporter15: create dummy ""anyType"" to fix breakage

The previous CL added a duplicate InvalidType to the predecl table so
that it tracked the one used by gc, but this caused it to fail an
assertion of uniqueness, and I ran the wrong tests.

Change-Id: I56342046cea328e503d917127f5b12205df7999a
Reviewed-on: https://go-review.googlesource.com/20870
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-03-18 15:07:33,https://api.github.com/repos/golang/tools/git/commits/8a9be374d7df8d1fdb04813e33a9ec26a6c99276,8a9be374d7df8d1fdb04813e33a9ec26a6c99276,"go/gcimporter15: support invalid types and constants in binary export data

Although invalid types and unknown constant values should never appear
in .a files (since gc will stop with an error before writing export
data), they can now be faithfully encoded and decoded.  This makes the
protocol robust for IDE-like applications that must deal with incomplete
or incorrect programs.

(Corresponding std lib CL: https://go-review.googlesource.com/20828)

Change-Id: I539ffd951b90f01705a7f23ec778c623c729d9a0
Reviewed-on: https://go-review.googlesource.com/20827
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-03-16 14:40:46,https://api.github.com/repos/golang/tools/git/commits/758728c4b28cfbac299730969ef8f655c4761283,758728c4b28cfbac299730969ef8f655c4761283,"go/ssa/interp: add no-op intrinsic for sync.runtime_notifyListCheck

Change-Id: Iece2511253c0ab361cdc493ab954a2e7f6aeaeac
Reviewed-on: https://go-review.googlesource.com/20760
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2016-03-16 03:51:36,https://api.github.com/repos/golang/tools/git/commits/d8da78068eea9df0dcd05d05e201dfd65c2f35e9,d8da78068eea9df0dcd05d05e201dfd65c2f35e9,"cmd/tip: add context to error values and log prints

To help track down some flakiness.

Change-Id: I2dd21abdc0f05c58857da580d962b0ab72cf52b3
Reviewed-on: https://go-review.googlesource.com/20728
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-03-15 22:14:11,https://api.github.com/repos/golang/tools/git/commits/1431634c5607631cf68bb453e5a6487800e4cf80,1431634c5607631cf68bb453e5a6487800e4cf80,"cmd/guru: fix for prior submission (fix build)

Accidentally submitted wrong file version in
https://go-review.googlesource.com/20719.

TBR: adonovan

Change-Id: I362ded51cf9cef8cb22faf6a2334ce01678d9f4e
Reviewed-on: https://go-review.googlesource.com/20742
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-03-15 21:36:36,https://api.github.com/repos/golang/tools/git/commits/ce9c53141f41289843fcfda29b2be5cfeb378e60,ce9c53141f41289843fcfda29b2be5cfeb378e60,"cmd/guru: adjust test output for go1.5 (fix build)

In go1.5, go/constant (floating-point) numeric values are printed
as fractions. Correct output as necessary so that they always
appear as floating-point numbers to match golden files.

Change-Id: If63a14d8d87bb664bf6272b16345e38e8d638ead
Reviewed-on: https://go-review.googlesource.com/20719
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-03-15 19:56:10,https://api.github.com/repos/golang/tools/git/commits/f42ec616d3061dd0a453e8f174d62b38eddab928,f42ec616d3061dd0a453e8f174d62b38eddab928,"go/gcimporter15: require go1.6 for binary import/export (fix build)

The binary import/export functionality depends on go/constant from
go1.6 - make it only available if we build against go1.6. Eventually
this packet will be replaced by std lib go/importer functionality.

Change-Id: If96cf2e889daf1250152d7719afa64ad1ba8fb0e
Reviewed-on: https://go-review.googlesource.com/20716
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-03-15 04:17:20,https://api.github.com/repos/golang/tools/git/commits/95e5e624247e7b2ae404786a954c06ee5cd81a26,95e5e624247e7b2ae404786a954c06ee5cd81a26,"imports: fix TestFindImportVendor for 1.5 (fix build)

TBR=adonovan

Change-Id: I7edeb180bdf09648e7539b9371db0d14272b9030
Reviewed-on: https://go-review.googlesource.com/20697
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-03-15 03:27:22,https://api.github.com/repos/golang/tools/git/commits/8852e49d27b9d98194697eecd22a6f7ed1e89373,8852e49d27b9d98194697eecd22a6f7ed1e89373,"imports: adjust tests to fix build

These changes will need to be reverted once we use
vendoring in the stdlib again, but it's trivial to
do so when the time comes.

TBR=adonovan

Fixes #14823.

Change-Id: I2173c48d5466874492affc679332f6484bf96592
Reviewed-on: https://go-review.googlesource.com/20695
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-03-15 01:01:59,https://api.github.com/repos/golang/tools/git/commits/cac57117484ea4c22f17400955ee793641a15cc3,cac57117484ea4c22f17400955ee793641a15cc3,"go/gcimporter15: update build tag for binary import (fix build for 1.6)

Also: renamed file to match 1.7 tag.

Fixes golang/go#14824.

Change-Id: Iea92292d93c1140e3396678bc37f50f0348e616a
Reviewed-on: https://go-review.googlesource.com/20694
Reviewed-by: Michael Hudson-Doyle <michael.hudson@canonical.com>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-03-15 00:25:30,https://api.github.com/repos/golang/tools/git/commits/48737e9c89cc5c10ef1a821ebe9ae2d01adb7f17,48737e9c89cc5c10ef1a821ebe9ae2d01adb7f17,"go/gcimporter15: update import/export to match std lib at tip

This change copies the respective changes from https://golang.org/cl/20605.

There is a format conflict here - we are going to track tip, not 1.6.
This change should fix the issue when testing against tip.

Fixes golang/go#14824.

Change-Id: I58e79cc65748e7a3e5c8486c6cee339884110a07
Reviewed-on: https://go-review.googlesource.com/20693
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2016-03-09 21:59:58,https://api.github.com/repos/golang/tools/git/commits/093d7650abf0a26882924de03a6c840a00356572,093d7650abf0a26882924de03a6c840a00356572,"Revert: godoc: Implement Unordered Output.

Revert https://go-review.googlesource.com/#/c/20458/3 (git rev 3d2dab63)

It doesn't compile.

Change-Id: I62fb10fe611e9ba0f599f037b03a91600b024d30
Reviewed-on: https://go-review.googlesource.com/20492
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mslinton,2016-03-09 05:32:41,https://api.github.com/repos/golang/tools/git/commits/3d2dab63d97df38e19a41a8e70432fb905a9b6bc,3d2dab63d97df38e19a41a8e70432fb905a9b6bc,"godoc: Implement Unordered Output.

When an Example's output is listed as being Unordered this will make
godoc display ""Unordered output:"" rather than the normal ""Output:"".

For an example of where this is useful, see the recently added example
for math.rand.Perm().

Change-Id: I737c901102dca46434f46a48300445bb43ce34e0
Reviewed-on: https://go-review.googlesource.com/20458
Reviewed-by: Andrew Gerrand <adg@golang.org>"
dominikh,2016-03-08 21:11:22,https://api.github.com/repos/golang/tools/git/commits/c5b51756cefcc04c36e39022da52cca90ddff917,c5b51756cefcc04c36e39022da52cca90ddff917,"cmd/guru: emacs: add go-guru-debug variable

Don't print debug messages unless go-guru-debug is set.

Change-Id: I1332a0b10eba1d1107ef987734b2b787ae28d9c2
Reviewed-on: https://go-review.googlesource.com/20432
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-09 14:06:31,https://api.github.com/repos/golang/tools/git/commits/b023cf6107a1b6bcafd651ad8a97ebea78cfc06f,b023cf6107a1b6bcafd651ad8a97ebea78cfc06f,"cmd/guru: emacs: update scope documentation

Also fix a typo in the tool's help string.

Change-Id: I54a9ed4a5515b137b0fbf1b2391dd6fa84b2d2d8
Reviewed-on: https://go-review.googlesource.com/20474
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2016-03-08 22:17:37,https://api.github.com/repos/golang/tools/git/commits/498e5ca20752b991e09551fa8fdebca879eaeedb,498e5ca20752b991e09551fa8fdebca879eaeedb,"cmd/tip: kill godoc when it fails to be ready on time

If godoc didn't come up quickly enough, we would leave it running and
then try to start another one on the same port.
The new one would fail to start, being unable to bind to the address,
causing cascading failures.

Also increase the timeout to 10 minutes.

Change-Id: I7008a39f649021ea213902d557f26bf78567026d
Reviewed-on: https://go-review.googlesource.com/20420
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dave,2016-02-06 20:43:52,https://api.github.com/repos/golang/tools/git/commits/e740c56c6b632f5de23904ba803740a7e229915a,e740c56c6b632f5de23904ba803740a7e229915a,"cover: fixed broken error message

The error message is attempting to display the line of text, but was
incorrectly using m (which is always nil) instead of line.

Change-Id: Id09f488b3b7b0e8c3c2cb6e8f0a8d635861c77ac
Reviewed-on: https://go-review.googlesource.com/19330
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2016-01-04 15:40:40,https://api.github.com/repos/golang/tools/git/commits/3d26f6847a824a26211a433ba4b7813cebd768c9,3d26f6847a824a26211a433ba4b7813cebd768c9,"go/ssa: make *BuilderMode satisfy flag.Value

The BuilderModeFlag function does not work with flag packages (such as
Google's) that define their own FlagSet.  This change exposes a type
that satisifies flag.Value insted of a function.  That type
is *BuilderMode; there's no need for a separate wrapper type.

Change-Id: I8095b80de499e3c52a29a5c1996d1b1fe3799358
Reviewed-on: https://go-review.googlesource.com/20330
Reviewed-by: Michael Matloob <matloob@golang.org>"
kostya-sh,2016-03-07 16:12:11,https://api.github.com/repos/golang/tools/git/commits/53f5cdeed1c99d21ba9fbbeb98c98a206d5a4de6,53f5cdeed1c99d21ba9fbbeb98c98a206d5a4de6,"cmd/present: fix displaying line numbers for .code and .play

Line numbers match line numbers from the included file,
not the lines in the segment selected by the
.code or .play START/STOP regexps.

Fixes golang/go#5248

Change-Id: I374e7b665e98db5032446ae49e6fae00d9d2b975
Reviewed-on: https://go-review.googlesource.com/20311
Reviewed-by: Andrew Gerrand <adg@golang.org>"
kostya-sh,2016-03-07 14:29:25,https://api.github.com/repos/golang/tools/git/commits/1074774aec5b3ef45520341e9116648584d8d331,1074774aec5b3ef45520341e9116648584d8d331,"cmd/present: fix slides movement when -play=false

Fix by removing jQuery usage from slides.js as jquery.js is only
available when play.js is included.

Fixes golang/go#9878

Change-Id: I5793350105b138d7b7645f11d814e1d2f573a73e
Reviewed-on: https://go-review.googlesource.com/20288
Reviewed-by: Andrew Gerrand <adg@golang.org>"
kostya-sh,2016-03-07 15:40:07,https://api.github.com/repos/golang/tools/git/commits/7a73fe1b6ce91a7493a48a51bfe00012901d13a2,7a73fe1b6ce91a7493a48a51bfe00012901d13a2,"cmd/guru: emacs: add default key binding for whicherrs

Bind go-guru-whicherrs to `C-C C-o e'

Also remove go-guru-callgraph as callgraph mode is not supported
by guru.

Change-Id: Id233d178629a3cafc00e4f9640191c3d3c673cf1
Reviewed-on: https://go-review.googlesource.com/20310
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-03-07 14:47:24,https://api.github.com/repos/golang/tools/git/commits/d2abdd5413db36db8ad2a285399d571da6b28c57,d2abdd5413db36db8ad2a285399d571da6b28c57,"cmd/guru: fix nil deref when position is not in Go source

+ test

Fixes issue golang/go#14684

Change-Id: I56023bf36c307d02c71b4ddf08aee9c229fc66c1
Reviewed-on: https://go-review.googlesource.com/20247
Reviewed-by: Daniel Morsing <daniel.morsing@gmail.com>"
kostya-sh,2016-03-07 15:32:26,https://api.github.com/repos/golang/tools/git/commits/b15543bacc193e66dc9cb410bc8b1dcfe0ca6fc7,b15543bacc193e66dc9cb410bc8b1dcfe0ca6fc7,"cmd/gorename: emacs: do not auto shrink error window

Change-Id: Iffa740a15658993cd905a34333f89145952524ca
Reviewed-on: https://go-review.googlesource.com/20289
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-07 12:34:47,https://api.github.com/repos/golang/tools/git/commits/adda3a68941b2f4a68e14c6af0d27d01027fe8f6,adda3a68941b2f4a68e14c6af0d27d01027fe8f6,"cmd/guru: emacs: push mark in go-guru-definition

This allows users to swap point and mark to jump between use and
definition in the same buffer, or pop-tag-mark (M-*) to jump back to the
use even between multiple buffers.

This mirrors the behaviour of godef-jump from go-mode.

Also remove an obosolete TODO and fix a typo.

Change-Id: I614090493b565acadf359ebb4c7092f4c673fd56
Reviewed-on: https://go-review.googlesource.com/20303
Reviewed-by: Alan Donovan <adonovan@google.com>"
dominikh,2016-03-07 01:24:43,https://api.github.com/repos/golang/tools/git/commits/459f0c0f7388988791c04ff54887c6c0d193e4d2,459f0c0f7388988791c04ff54887c6c0d193e4d2,"cmd/guru: emacs: allow passing tags to guru

Change-Id: I2e49d050add1f764a0e41300b2cca8da699f418a
Reviewed-on: https://go-review.googlesource.com/20302
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-02-21 23:45:02,https://api.github.com/repos/golang/tools/git/commits/2336c53cf04073efa9df218532d1fba3967d883b,2336c53cf04073efa9df218532d1fba3967d883b,"cmd/guru: compute referrers as packages are type checked

This CL makes little observable difference to the behavior but paves the
way for streaming 'referrers' and (later) 'implements' queries which
scan the entire workspace, but print each result as soon as it is found.

The go/loader package now exposes a hook, AfterTypeCheck, that lets
clients inspect each package as soon as it is type-checked, and also
modify it, for instance to release unneeded data structures.

A 'referrers' query applied to an exported object must scan the entire
workspace.  It uses this hook so to gather uses of the query object in
streaming fashion.  However, for now, it still accumulates the results
and prints them all at the end, though I propose to change that in a
follow-up.

Code details:
- The referrers logic had a 2-iteration loop to load first the query
  package and then if necessary the enlarged program.  The second
  iteration has now been unrolled and split into globalReferrers.
- Queries for package names (whether in a package declaration or
  a qualified identifier) have been split off into packageReferrers.
  It now loads all direct importers of the query package,
  which catches some references that were missing before.
  (It used to inspect only the forward dependencies of the query
  package.)

Also:
- Referrers.Pos (the position of query identifier) was removed from the
  JSON output.  It's a nuisance to compute now, and it's already
  absent from the plain output.
  (In a follow-up, I plan to simplify the information content of the
  JSON output exactly what is currently printed in the plain output.)

Change-Id: Ia5677636dc7b0fe4461a5d393107665757fb9a97
Reviewed-on: https://go-review.googlesource.com/19794
Reviewed-by: Daniel Morsing <daniel.morsing@gmail.com>"
alandonovan,2016-02-22 20:26:12,https://api.github.com/repos/golang/tools/git/commits/ac02106e04bdb66a2db0413d931012bea165d7e0,ac02106e04bdb66a2db0413d931012bea165d7e0,"refactor/importgraph: document that graphs are cyclic

Change-Id: I195656b523488433945b3215558c3442cf45b2bd
Reviewed-on: https://go-review.googlesource.com/19831
Reviewed-by: Robert Griesemer <gri@golang.org>"
hyangah,2016-02-21 13:24:27,https://api.github.com/repos/golang/tools/git/commits/51464e57afedfe8174ad9c3437710abb4a69d5bc,51464e57afedfe8174ad9c3437710abb4a69d5bc,"godoc/analysis: use build.Default.GOROOT instead of runtime.GOROOT

Change-Id: Ic34744557c3fbddd27590303794d384e28ff1ae3
Reviewed-on: https://go-review.googlesource.com/19781
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-03-03 16:32:24,https://api.github.com/repos/golang/tools/git/commits/3dafbd1ba4c62a1d3b209101efe824e9eefb4d66,3dafbd1ba4c62a1d3b209101efe824e9eefb4d66,"go/types/typeutil: make IntuitiveMethodSet(*C) nonempty for concrete types C

This fixes a bug in guru describe.

Also, add a test of IntuitiveMethodSet.

Change-Id: Ied3780807afd88e664fdb186619499670529fe33
Reviewed-on: https://go-review.googlesource.com/20166
Reviewed-by: Daniel Morsing <daniel.morsing@gmail.com>"
alandonovan,2016-03-03 18:42:12,https://api.github.com/repos/golang/tools/git/commits/6c84e9e3e0e1963d3cfd406a767da00fbd9d4d30,6c84e9e3e0e1963d3cfd406a767da00fbd9d4d30,"cmd/guru: make fastQueryPos indirect through the -modified map

This fixes a bug in which guru reports a ""query position beyond end of
file"" error when making a query from an unsaved editor buffer at an
offset greater than the length of the file on disk.

Change-Id: I908c024d8dd14baa657b4227e3231fa760443732
Reviewed-on: https://go-review.googlesource.com/20167
Reviewed-by: Daniel Morsing <daniel.morsing@gmail.com>"
alandonovan,2016-03-02 19:24:29,https://api.github.com/repos/golang/tools/git/commits/2f1d035a8abfa2a0ecdc5ad63a17625468d900c2,2f1d035a8abfa2a0ecdc5ad63a17625468d900c2,"go/gcimporter15: BExportData: inverse of BImportData

+ test

Change-Id: I8db03e19ebb4cf3888f259457aaa3c931da23f24
Reviewed-on: https://go-review.googlesource.com/20109
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-03-01 18:25:48,https://api.github.com/repos/golang/tools/git/commits/6f233b96dfbc53e33b302e31b88814cf74697ff6,6f233b96dfbc53e33b302e31b88814cf74697ff6,"cmd/guru: fix nil dereference in describe

+ test

Fixes issue golang/go#14579

Change-Id: I6fd56f10c170027f06917935ccbc28490d413d8a
Reviewed-on: https://go-review.googlesource.com/20100
Reviewed-by: Michael Matloob <matloob@golang.org>"
adg,2016-02-26 04:47:36,https://api.github.com/repos/golang/tools/git/commits/8b178a93c1f5b5c8f4e36cd6bd64e0d5bf0ee180,8b178a93c1f5b5c8f4e36cd6bd64e0d5bf0ee180,"playground/socket: fix message buffering

Use time.After to avoid the finnicky antics of
correctly resetting a time.Timer.

Fixes golang/go#13749

Change-Id: I3f1ed17a31d981996e2bb7a8155c3ba0ec723c7d
Reviewed-on: https://go-review.googlesource.com/19942
Reviewed-by: Dmitry Vyukov <dvyukov@google.com>"
davidrjenni,2016-02-25 19:09:00,https://api.github.com/repos/golang/tools/git/commits/e852fdd89f1a2f53b9538a99c21a44a9f199218b,e852fdd89f1a2f53b9538a99c21a44a9f199218b,"go/ast/astutil: add function DeleteNamedImport.

DeleteNamedImport deletes the import with a given
name and path from a parsed file, if present.

imports uses this function to delete named imports.

Fixes golang/go#8149.

Change-Id: I84539d5627191c45f06db2d008507aee4d3b1eb2
Reviewed-on: https://go-review.googlesource.com/19951
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
kostya-sh,2016-02-24 00:44:10,https://api.github.com/repos/golang/tools/git/commits/a917fb9d7b3e6c98ae167f9026d49d8e02f32d7c,a917fb9d7b3e6c98ae167f9026d49d8e02f32d7c,"cmd/guru: emacs: package.el compatibility changes

Make go-guru compatible with package.el prior to uploading this pacakge to
MELPA.

Also add ;;;###autoload magic comments, so that the go-guru-xxx commands can
be used without need to explicitly (require 'go-guru) first.

Change-Id: I21c7f5f354fb7b39877a05c2a9ffecd02ab022f6
Reviewed-on: https://go-review.googlesource.com/19789
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-02-26 01:10:38,https://api.github.com/repos/golang/tools/git/commits/06f9f0dd883db127702c988d7e352d3ada0685be,06f9f0dd883db127702c988d7e352d3ada0685be,"go/gcimporter15: backport latest changes to binary export format (fix build)

This is the gcimporter/bimport.go part of:

https://go-review.googlesource.com/19627

Also, fixed a type that was fixed in gcimporter/bimport.go before.

TBR=adonovan

Change-Id: I0be8549f6ea8c199842623284091499abf698322
Reviewed-on: https://go-review.googlesource.com/19926
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-02-25 22:06:15,https://api.github.com/repos/golang/tools/git/commits/2327a658112013937f07fab08d576a2d6bd19407,2327a658112013937f07fab08d576a2d6bd19407,"cmd/guru: fix tests

A consequence of CL 19747 was that ad hoc packages of a single filename
are no longer valid -scope arguments, which broke most of the tests.

This CL fixes the tests by extracting the import path from the filename.
The test output now includes the import path, not the package
name, of each of these packages, so the output was updated too.

Also, the -scope argument caused the main package to be imported twice,
once as main.go and once under its import path, causing duplicate
'implements' results.

I'm not sure how I failed to notice this.

Change-Id: I6fb3ae3e1497f0eb8cf88f453660b9e2fd9718d8
Reviewed-on: https://go-review.googlesource.com/19886
Reviewed-by: Michael Matloob <matloob@golang.org>"
davidrjenni,2016-02-23 08:31:56,https://api.github.com/repos/golang/tools/git/commits/108746816ddf01ad0c2dbea08a1baef08bc47313,108746816ddf01ad0c2dbea08a1baef08bc47313,"go/ast/astutil: keep comment position for existing imports.

Fixes golang/go#10337.

Change-Id: Ia21547bb57790c077ca01a2ad656086da3f2ba8a
Reviewed-on: https://go-review.googlesource.com/19822
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-02-20 22:33:56,https://api.github.com/repos/golang/tools/git/commits/f7268ab39bf8b78faa0c2f9eb524b9ea85982c41,f7268ab39bf8b78faa0c2f9eb524b9ea85982c41,"cmd/bundle: fix broken test

Change-Id: I95bd6cd1b63a1d1b5bd255546fbf571010a67266
Reviewed-on: https://go-review.googlesource.com/19745
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-02-22 20:21:13,https://api.github.com/repos/golang/tools/git/commits/9aae8f06b52ead95e74b590e01d3c5735dad135b,9aae8f06b52ead95e74b590e01d3c5735dad135b,"go/loader: update comment

CL 18580 (Jan 12) made the loader cache non-blocking.

Change-Id: I8f280dbd405bd9b19a201191a4a987f13d862300
Reviewed-on: https://go-review.googlesource.com/19830
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-02-21 00:34:40,https://api.github.com/repos/golang/tools/git/commits/3f95c6634578c08ac4fc93560638031f114d076b,3f95c6634578c08ac4fc93560638031f114d076b,"cmd/guru: allow foo/... and -foo patterns in scope argument

Also, document -scope argument.

Depends on CL 19746 (buildutil.ExpandPatterns)

Change-Id: I3c9000e94d87cca5c2c49fe8de12a77fc43f7257
Reviewed-on: https://go-review.googlesource.com/19747
Reviewed-by: Daniel Morsing <daniel.morsing@gmail.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2016-02-21 01:14:32,https://api.github.com/repos/golang/tools/git/commits/a69e659f4492f782f7f44907be21b6089c027cb3,a69e659f4492f782f7f44907be21b6089c027cb3,"cmd/guru: fix mode map, again

Change-Id: Ic1fef2e237205ed392912601324415af625417b0
Reviewed-on: https://go-review.googlesource.com/19749
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-02-21 00:26:39,https://api.github.com/repos/golang/tools/git/commits/ba766134cc38dea5ed957cf2b40266a8e0aa5660,ba766134cc38dea5ed957cf2b40266a8e0aa5660,"go/buildutil: add ExpandPatterns utility

This will be used by the guru command's -scope argument.

+ test

Change-Id: I5bf38b544809e4518e2c22a73ec3349a5d2c09fc
Reviewed-on: https://go-review.googlesource.com/19746
Reviewed-by: Michael Matloob <matloob@golang.org>"
kostya-sh,2016-02-21 03:42:14,https://api.github.com/repos/golang/tools/git/commits/54fa7477e2df81929a0258e99e45dde5ab73ba62,54fa7477e2df81929a0258e99e45dde5ab73ba62,"cmd/guru: emacs: do not shrink results window

This fixes the following usability issues:

- when go-guru is called twice in a row and the output from the second invocation
  is bigger then this output is not fully visible
- output window could be re-used by other packages (such as helm) that are not
  usable with the shrank window

Change-Id: I86d522006d29e945a71b96c9d13a1a39572bdb3b
Reviewed-on: https://go-review.googlesource.com/19780
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-02-20 21:14:17,https://api.github.com/repos/golang/tools/git/commits/86372b3255bd23c074d3112bdb87052e725463ed,86372b3255bd23c074d3112bdb87052e725463ed,"cmd/guru: use byte (not rune) count in -modified archive

Change-Id: I7fc575c8ec7a8170e64719419079d6742f47b119
Reviewed-on: https://go-review.googlesource.com/19744
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2016-02-21 01:07:13,https://api.github.com/repos/golang/tools/git/commits/b0452eeec4321022e8c7484acba84858c4e418bf,b0452eeec4321022e8c7484acba84858c4e418bf,"cmd/guru: fix bug in mode map caused by bad merge

Change-Id: I2c4ff577f744e168a7914d15269636092ceef5a9
Reviewed-on: https://go-review.googlesource.com/19748
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-11-10 19:32:36,https://api.github.com/repos/golang/tools/git/commits/ee6079c0acef0126eb0fd2feafcedbd2650270ef,ee6079c0acef0126eb0fd2feafcedbd2650270ef,"go/buildutil: add (*TagsFlag).Get method to satisfy Getter interface

Change-Id: I8a52a1cc006608ff87d1436d14c836b6e9c7d6d4
Reviewed-on: https://go-review.googlesource.com/16810
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
adonovan,2016-02-16 01:46:51,https://api.github.com/repos/golang/tools/git/commits/4828f5cb61616a9cc48d421420cdc10f2598762d,4828f5cb61616a9cc48d421420cdc10f2598762d,"cmd/guru: emacs: minor changes to keybindings

Major modes should use the C-c prefix followed by C-something.  We'll
stick with C-o (oracle) since C-g is taken by go-jump-xxx (and in any
case C-g should be reserved for keyboard-quit.)

Change-Id: I18f41d7cbd5bf83aa53909554501e7f76543f033
Reviewed-on: https://go-review.googlesource.com/19510
Reviewed-by: Michael Matloob <matloob@golang.org>"
adonovan,2016-02-16 02:12:49,https://api.github.com/repos/golang/tools/git/commits/ee8cb08bfe4453a27a4bd7c86a917800d339c5ac,ee8cb08bfe4453a27a4bd7c86a917800d339c5ac,"cmd/guru: what: report identifiers equivalent to the selected one

This information is useful for editor UIs that highlight all
uses of the local variable under the cursor.

Change-Id: I718d648d407468509e6d12f932ae6cdef368830a
Reviewed-on: https://go-review.googlesource.com/19512
Reviewed-by: Michael Matloob <matloob@golang.org>"
ALTree,2016-02-18 20:13:42,https://api.github.com/repos/golang/tools/git/commits/a17fa845d74d17bf6d466f84fd9d3c5602669e53,a17fa845d74d17bf6d466f84fd9d3c5602669e53,"go/gcimporter15: add missing argument to error message

Backport of Change 19641

Change-Id: Ic386cc8ecc006a2cd96c5ac3ff00f3d314873fd3
Reviewed-on: https://go-review.googlesource.com/19643
Reviewed-by: Robert Griesemer <gri@golang.org>"
rsc,2015-12-11 06:32:07,https://api.github.com/repos/golang/tools/git/commits/bf084ef7580ee99a5efa3086138c942aca4aefd4,bf084ef7580ee99a5efa3086138c942aca4aefd4,"imports: add support for vendor directories

Editor modes that invoke the goimports command on temporary copies
of actual source files will need to invoke goimports -srcdir now to say
where the real source directory is. Otherwise goimports will not consider
vendored or internal packages when looking for new imports.

In lieu of a test for cmd/goimports (because it has no tests),
a command transcript:

	$ cd /tmp
	$ cat x.go
	package p
	var _ = hpack.HuffmanDecode
	$

	$ GOPATH= goimports < x.go
	package p

	var _ = hpack.HuffmanDecode
	$ GOPATH= goimports x.go
	package p

	var _ = hpack.HuffmanDecode
	$

But with the new flag:

	$ GOPATH= goimports -srcdir $GOROOT/src/math < x.go
	package p

	import ""golang.org/x/net/http2/hpack""

	var _ = hpack.HuffmanDecode
	$ GOPATH= goimports -srcdir $GOROOT/src/math x.go
	package p

	import ""golang.org/x/net/http2/hpack""

	var _ = hpack.HuffmanDecode
	$

The tests in this CL and the above transcript assume that
$GOROOT/src/vendor/golang.org/x/net/http2/hpack exists.
It did in 40a26c9, but it does not today.
It will again soon (once Go 1.7 opens).

For golang/go#12278 (original request).

Change-Id: I27b136041f54edcde4bf474215b48ebb0417f34d
Reviewed-on: https://go-review.googlesource.com/17728
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
rsc,2016-02-09 03:27:09,https://api.github.com/repos/golang/tools/git/commits/d0c9d43af10037f4450ed6562e047f244612bf64,d0c9d43af10037f4450ed6562e047f244612bf64,"bundle: new docs, command-line interface

Before, ""bundle -help"" printed only one not particularly useful line:

	Usage of bundle:

and ""bundle"" printed a bit more but not a standard usage message:

	bundle: Usage: bundle package dest prefix

	Arguments:
	 package is the import path of the package to concatenate.
	 dest is the import path of the package in which the resulting file will reside.
	 prefix is the string to attach to all renamed identifiers.

And most of that output belonged in (but was missing from) the doc comment,
which leaned heavily on the reader inferring usage from one example.

While fixing all this, I ended up dropping ""dest"" and ""prefix"" as required
arguments: perfectly good defaults can be inferred in the common case
where the bundle is intended for the current directory. The defaults can be
overridden with the new -dst and -prefix option.

I corrected a TODO about not assuming the package name could be
derived from the destination import path. Like -dst and -prefix, the
default package name can be inferred from the current directory,
but there is also a new -pkg option to override the default if needed.

I added a -o option to specify the destination output file (standard output
is still the default output). One benefit of -o is that it makes the bundle
commands self-contained in the sense of not needing a shell.
That in turn makes them suitable for use with ""go generate"", so when -o
is specified the bundle output now includes a ""//go:generate"" comment
for updating the bundle mechanically.

To keep bundle working for net/http's use case, I added a -importmap
option to specify additional import rewrites (net/http needs the http2
import of golang.org/x/net/http2/hpack rewritten to begin with internal/golang.org).

The net effect of all of this is that the first two lines at the top of
net/http/h2_bundle.go will change from:

	// Code generated by golang.org/x/tools/cmd/bundle command:
	//   $ bundle golang.org/x/net/http2 net/http http2

to

	// Code generated by golang.org/x/tools/cmd/bundle.
	//go:generate bundle -o h2_bundle.go -prefix http2 -import golang.org/x/net/http2/hpack=internal/golang.org/x/net/http2/hpack golang.org/x/net/http2

and net/http's copy of http2 can now be updated by ""go generate""
instead of by copying and pasting commands from source code to shell.

For an experiment I am doing with cmd/dist bundling archive/zip,
the header is even shorter and makes a better demonstration of the
power of the defaults:

	// Code generated by golang.org/x/tools/cmd/bundle.
	//go:generate bundle -o zip.go archive/zip

New usage message, printed by ""bundle -help"" and ""bundle"":

	Usage: bundle [options] <src>
	  -dst path
	    	set destination import path (default taken from current directory)
	  -import map
	    	rewrite import using map, of form old=new (can be repeated)
	  -o file
	    	write output to file (default standard output)
	  -pkg name
	    	set destination package name (default taken from current directory)
	  -prefix p
	    	set bundled identifier prefix to p (default source package name + ""_"")

See CL for new doc comment.

Following this CL I will send a CL updating the two-line header in net/http/h2_bundle.go
to match the new usage of the bundle, whatever that ends up being.

Change-Id: I83a65b6a500897854027cefdefb8f62f1d4448b4
Reviewed-on: https://go-review.googlesource.com/19428
Run-TryBot: Russ Cox <rsc@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
adonovan,2016-02-16 02:39:23,https://api.github.com/repos/golang/tools/git/commits/cd3cb7be66fa0563f7ae86a1b3072603a54cd9bf,cd3cb7be66fa0563f7ae86a1b3072603a54cd9bf,"cmd/guru: fix build breakage due to unneeded log import

I think this resulted from git automerging.

Change-Id: Icc285601846bd0a2a2bb2316ae4575395744c44b
Reviewed-on: https://go-review.googlesource.com/19511
Reviewed-by: Alan Donovan <adonovan@google.com>"
adonovan,2016-02-15 19:50:53,https://api.github.com/repos/golang/tools/git/commits/fb3df4a89de421b470256bfa72eb56810ec0405f,fb3df4a89de421b470256bfa72eb56810ec0405f,"cmd/guru: definition: try parser-based resolution first

The parser does intra-file resolution.  It's only a best-effort but
it's extremely fast, so we try it first and fall back to the loader-based
implementation if it fails.

Also:
- factor definitionResult so it doesn't depend on either go/types.Object
  or go/ast.Object.
- guessImportPath: make importPath=="""" result an error,
  since you can't import the empty string.  Simplify importQueryPackage.
- Make fastQueryPos continue in face of minor parse errors.
- describe: eliminate old TODO; suppress log statement.

Change-Id: I30a32487e9fd9d5308b1580ec12220cad2c16299
Reviewed-on: https://go-review.googlesource.com/19507
Reviewed-by: Daniel Morsing <daniel.morsing@gmail.com>"
adonovan,2016-02-15 20:48:08,https://api.github.com/repos/golang/tools/git/commits/cadb821a95df0e7ef6343c3d16d13d53e8f9a9d6,cadb821a95df0e7ef6343c3d16d13d53e8f9a9d6,"cmd/guru: don't panic on *ast.Bad{Decl,Stmt,Expr}

These nodes are common in incomplete programs.

Change-Id: Iff9750050c78762f0cb8bebc7739584c197d661e
Reviewed-on: https://go-review.googlesource.com/19509
Reviewed-by: Michael Matloob <matloob@golang.org>"
adonovan,2016-02-15 20:43:58,https://api.github.com/repos/golang/tools/git/commits/d7762ee5c03a0c0bbde14ca809011bbb7f3a6c8b,d7762ee5c03a0c0bbde14ca809011bbb7f3a6c8b,"cmd/guru: emacs: report an error when the guru command fails

Don't just display the output buffer or, worse, parse it as JSON.

Change-Id: I1125ff235a5073b07f45f587ef8844b8a12f05ac
Reviewed-on: https://go-review.googlesource.com/19508
Reviewed-by: Michael Matloob <matloob@golang.org>"
adonovan,2016-02-15 16:45:55,https://api.github.com/repos/golang/tools/git/commits/19c83edf02aa9d6a1f19eda0df366253116e0911,19c83edf02aa9d6a1f19eda0df366253116e0911,"cmd/guru: in Emacs, change 'definition' to jump directly

go-guru--run has been split up to separate running the tool
from turning its output into compilation-mode form.
The definition command uses only the first part,
and parses its output in JSON form.

Added test, factoring the test script.

Change-Id: I4c3e4a51a1346551a3703a5e3137c878d7b2d95f
Reviewed-on: https://go-review.googlesource.com/19499
Reviewed-by: Michael Matloob <matloob@golang.org>"
adonovan,2016-02-15 03:14:31,https://api.github.com/repos/golang/tools/git/commits/e08a7ae6bc768150ab5a607623d45dff165065f8,e08a7ae6bc768150ab5a607623d45dff165065f8,"cmd/guru: add support for loading modified files

The -modified flag causes guru to read a simple archive file from stdin.
This archive specifies alternative contents for one or more file names.
The build.Context checks this table before delegating to the usual
behavior.

This will not work for files that import ""C"" since cgo accesses the
file system directly.

Added end-to-end test via Emacs.

Simplify findQueryPos (now: fileOffsetToPos)

Credit: Daniel Morsing, for the prototype of this feature.

Change-Id: I5ae818ed5e8bb81001781893dded2d085e9cf8d6
Reviewed-on: https://go-review.googlesource.com/19498
Reviewed-by: Daniel Morsing <daniel.morsing@gmail.com>"
dmitshur,2016-02-15 03:32:03,https://api.github.com/repos/golang/tools/git/commits/5a22c00969ca85e2a020645ccaf02fffa89d95ca,5a22c00969ca85e2a020645ccaf02fffa89d95ca,"godoc/vfs/zipfs: use an os.IsNotExist-compatible error

When a file is not found, it's common to return an error that can
be detected with os.IsNotExist helper. It's possible to use
os.PathError type to satisfy that requirement while still providing
the path information in the error.

Add a test that files that are not found return a non-nil error, and
that the error satisfies os.IsNotFound.

Change-Id: I5f1a26b18f2556af822ede73306541e8575ede28
Reviewed-on: https://go-review.googlesource.com/19503
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adonovan,2016-02-14 22:56:23,https://api.github.com/repos/golang/tools/git/commits/93ea01aea0ae43fe24fb660091655dd6ddd33046,93ea01aea0ae43fe24fb660091655dd6ddd33046,"cmd/guru: describe: show methods and fields of an expression

Previously you had to describe a type to get this information,
which required two queries, and the need for this query is
extremely common.

Change-Id: I1d1d5b45fead60ca8719ddc302eee47d9f10a375
Reviewed-on: https://go-review.googlesource.com/19501
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2016-02-12 20:39:35,https://api.github.com/repos/golang/tools/git/commits/608d57b3ae930138a65e85b64edf2ba1b3450b06,608d57b3ae930138a65e85b64edf2ba1b3450b06,"cmd/guru: call{ers,stack}: avoid pointer analysis where possible

As an optimization, the callers and callstack queries now avoid the
relatively costly pointer analysis in some common cases:

The callers of a function that is never address-taken can be enumerated
directly from the SSA representation.

Similarly, the callstack can be computed initially by ignoring dynamic
call edges; we run the pointer analysis only if no path is found in this
partial callgraph.  As a bonus, this also causes the tool to
preferentially report all-static callpaths.

A callers query on fmt.Errorf now completes in 3 seconds instead of 8,
and a callstack query completes in 2 seconds instead of 8.

The new code is covered by the existing tests.

Change-Id: I777ea07a1cdb6cadcc2a94952f553b6b036e7382
Reviewed-on: https://go-review.googlesource.com/19496
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2016-02-12 21:46:09,https://api.github.com/repos/golang/tools/git/commits/8da9f8bbd71095aa993a98ff1e3218d9fe826384,8da9f8bbd71095aa993a98ff1e3218d9fe826384,"cmd/guru: describe: show selectable fields when describing a type

Also, qualify field and method types relative to the defining package,
not the query package.

Change-Id: If65d2a4c2fd60e51d0d34e44000954e95106972e
Reviewed-on: https://go-review.googlesource.com/19495
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2016-02-12 21:57:12,https://api.github.com/repos/golang/tools/git/commits/1d6b8698af98062cc776eb05043d22c130f543a7,1d6b8698af98062cc776eb05043d22c130f543a7,"cmd/guru: remove vestiges of -pos flag

It's a positional parameter now.

Also, update -help message to address
https://go-review.googlesource.com/#/c/19474 comments

Change-Id: Ie5947aa3c37180961e780747ca02be54f7030c21
Reviewed-on: https://go-review.googlesource.com/19493
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adonovan,2016-02-12 05:04:56,https://api.github.com/repos/golang/tools/git/commits/00b8b1eb95b8e621c9a6db8c4b2c3cfcd700ea85,00b8b1eb95b8e621c9a6db8c4b2c3cfcd700ea85,"cmd/guru: clean ups to command-line interface

-pos is now a positional argument; -scope is now a flag.
Tidy up usage message.
Update Vim and Emacs scripts and test
Remove call to GOMAXPROCS.
Use log.{SetPrefix,SetFlags} and Fatalf

Change-Id: I3786ed83aecb17d622b29d2a538a374f813f0adc
Reviewed-on: https://go-review.googlesource.com/19438
Reviewed-by: Michael Matloob <matloob@golang.org>"
adonovan,2016-02-12 03:52:19,https://api.github.com/repos/golang/tools/git/commits/789265387ff52550e7d48b4e6f4c6bce831c1248,789265387ff52550e7d48b4e6f4c6bce831c1248,"cmd/guru: freevars: reenable test of labels (and improve output)

Change-Id: Icb7747d0856a4be2de52e143b793b52a725d297c
Reviewed-on: https://go-review.googlesource.com/19437
Reviewed-by: Alan Donovan <adonovan@google.com>"
adonovan,2016-02-12 03:57:18,https://api.github.com/repos/golang/tools/git/commits/37bb37ec1cba77120c4c5e112c4404806abfe4f1,37bb37ec1cba77120c4c5e112c4404806abfe4f1,"cmd/guru: fix bad import, and run gofmt

Change-Id: Ieb5c732bad494942f7b45ac5a1b605e810436e87
Reviewed-on: https://go-review.googlesource.com/19478
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-02-11 22:57:17,https://api.github.com/repos/golang/tools/git/commits/734737930440fc305a816e577cab457fbbc807c1,734737930440fc305a816e577cab457fbbc807c1,"cmd/guru: rename oracle to guru, copying it to a single package

See plans at:
https://docs.google.com/document/d/1UErU12vR7jTedYvKHVNRzGPmXqdMASZ6PfE7B-p6sIg/edit#heading=h.t5rbcuy7di7j

Change-Id: I369747e0ce8cd42a2975eb0f651a2e5fba47cf9e
Reviewed-on: https://go-review.googlesource.com/19475
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-02-11 22:20:40,https://api.github.com/repos/golang/tools/git/commits/78e666a89491edaed6ef187b66127814670bbafa,78e666a89491edaed6ef187b66127814670bbafa,"cmd/oracle: add pointsto, whicherrs to help message

Also, remove stale example.

Change-Id: Ifa1123b9dca49c991a16ef35eb7227847878c657
Reviewed-on: https://go-review.googlesource.com/19474
Reviewed-by: Alan Donovan <adonovan@google.com>"
broady,2016-02-10 18:03:24,https://api.github.com/repos/golang/tools/git/commits/344080534465c5613c3563c30fd38c031073841d,344080534465c5613c3563c30fd38c031073841d,"godoc/static: disable spellcheck on textareas

Fixes golang/go#14287.

Change-Id: I028eb6d669998b59e1bf1e3b40a337d5e28fbc57
Reviewed-on: https://go-review.googlesource.com/19430
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2016-02-09 21:14:21,https://api.github.com/repos/golang/tools/git/commits/7ed774bdc0d941f843a2755877d6366b3b85cbf5,7ed774bdc0d941f843a2755877d6366b3b85cbf5,"go/gcimporter15: interpret relative srcDir relative to cwd

This is a backport of the respective changes in golang.org/cl/19393.

For golang/go#14215.

Change-Id: I8d60dd6daa827a60597f3af925e6732914537319
Reviewed-on: https://go-review.googlesource.com/19394
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2016-02-05 00:04:38,https://api.github.com/repos/golang/tools/git/commits/fe74a4186116b8d7dd38a723993e0d84f8834b34,fe74a4186116b8d7dd38a723993e0d84f8834b34,"godoc: don't quote search term to avoid escaping regexps

This is safe because the page title is HTML-escaped as it is displayed.

Fixes golang/go#14208

Change-Id: Ib98071a08adeaad79043b9a2eb07bc7a5e8d251d
Reviewed-on: https://go-review.googlesource.com/19242
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-02-04 16:15:46,https://api.github.com/repos/golang/tools/git/commits/02f1928320c505d9c43388e28907e652420406d8,02f1928320c505d9c43388e28907e652420406d8,"go/loader: ignore (*build.Package).Goroot flag when handling ""unsafe""

For the default build.Context, the Package.Goroot flag indicates when a
package was loaded from the standard library.  Until now, the loader
used it to enable the typechecker's intrinsics for the ""unsafe"" package.
This seemed like a good check, but it is troublesome for clients that
use a nonstandard build.Context.  For example, if a client defines
nonstandard Context hooks that load all packages, whether standard or
user-defined, from a flat sstable, there is no way for those hooks to
indicate which packages should have this flag set and which not.  As a
result the contents of the ""unsafe"" package directory are treated as Go
source code when they are merely documentation.

Change-Id: Iea0a7cc9877507d73606391293971a28279c4e4b
Reviewed-on: https://go-review.googlesource.com/19188
Reviewed-by: Robert Griesemer <gri@golang.org>"
larzconwell,2014-12-11 15:10:04,https://api.github.com/repos/golang/tools/git/commits/9a6ae37d4e8489946c162432b091610a0fb664af,9a6ae37d4e8489946c162432b091610a0fb664af,"cmd/godoc: accept GOOS and GOARCH URL parameters in -http mode

This allows users to change the GOOS/GOARCH without running their own
godoc server (or restarting with appropriate env vars).

Change-Id: I0b54ef1b2dd93cf2c965ca584d8df74119ed1be6
Reviewed-on: https://go-review.googlesource.com/1371
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2016-02-04 16:29:55,https://api.github.com/repos/golang/tools/git/commits/a6e3cc80e87d58d7fdb23da870845b456969b929,a6e3cc80e87d58d7fdb23da870845b456969b929,"oracle: describe: backport fix to 1.4, 1.5

(See CL 19158, bug 14160, commit 35b3d64)

Change-Id: I01ee2bb0eca072141b2c4551789793b1d5c480e3
Reviewed-on: https://go-review.googlesource.com/19189
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2016-02-02 21:27:46,https://api.github.com/repos/golang/tools/git/commits/35b3d645bc84b6874ecb165b70b488f1b19fc9c4,35b3d645bc84b6874ecb165b70b488f1b19fc9c4,"oracle: fix panic when describing ""unsafe""

Fixes issue 14160

Change-Id: Ie27d79ba135cadd2e6f5d3b40b8eca25b6a030d9
Reviewed-on: https://go-review.googlesource.com/19158
Reviewed-by: Michael Matloob <matloob@golang.org>"
bradfitz,2016-01-28 00:28:08,https://api.github.com/repos/golang/tools/git/commits/b47dfd93e5c47f9311ab20047c690df78d460f75,b47dfd93e5c47f9311ab20047c690df78d460f75,"all: fix plan9 failures

Updates golang/go#11811

Change-Id: I6ed252eb3272354fce8084ec99f4777e41c3daa3
Reviewed-on: https://go-review.googlesource.com/18993
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
bradfitz,2016-01-28 00:09:23,https://api.github.com/repos/golang/tools/git/commits/2fd075ed02e0c37a80abd41cb6c2ce8b555350e1,2fd075ed02e0c37a80abd41cb6c2ce8b555350e1,"all: skip slow tests in short mode

Updates golang/go#14113
Updates golang/go#11811

Change-Id: I61851de12ff474d3b738fc88f402742677973cae
Reviewed-on: https://go-review.googlesource.com/18992
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2016-01-27 04:42:49,https://api.github.com/repos/golang/tools/git/commits/95cc01bac9af31b888c95e60ffc191bae43db13b,95cc01bac9af31b888c95e60ffc191bae43db13b,"godoc/static: fix dd styles

This makes /doc/install/source render correctly.

Fixes golang/go#14104

Change-Id: I58a883abd875197064a5e120a47e5ea8faad7df9
Reviewed-on: https://go-review.googlesource.com/18955
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2016-01-27 01:32:34,https://api.github.com/repos/golang/tools/git/commits/e7cdd7bb9f2990fbb9c16d41bc4a699146baa1e1,e7cdd7bb9f2990fbb9c16d41bc4a699146baa1e1,"cmd/tip: update deploy instructions

Change-Id: I5c26a2fc8ef7c0ad99c3d176b866f221cb39c9e2
Reviewed-on: https://go-review.googlesource.com/18980
Reviewed-by: Andrew Gerrand <adg@golang.org>"
broady,2015-12-18 02:23:29,https://api.github.com/repos/golang/tools/git/commits/ce967854d3abba2c69b5d1a1ea2bb13fd5c28474,ce967854d3abba2c69b5d1a1ea2bb13fd5c28474,"cmd/tip: move side health check to main health check. Use 503.

500 is considered to be healthy. Use 503 instead, so the instance is
considered unhealthy while the side is coming up.

Add some extra log statements that help debug instances from
application logs.

Fixes golang/go#13682.

Change-Id: I713c8c2fa75de4e275f632b999edc98cedd257bd
Reviewed-on: https://go-review.googlesource.com/18547
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2016-01-21 22:49:27,https://api.github.com/repos/golang/tools/git/commits/f3a63969dd29f8cfa913fdaea22f30c1ed537cb3,f3a63969dd29f8cfa913fdaea22f30c1ed537cb3,"go/gcimporter15: fix build for go1.4

Change-Id: I0b2650bbb2bf35d7895e1a808cfb45f7f0194ea9
Reviewed-on: https://go-review.googlesource.com/18822
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2016-01-21 21:59:03,https://api.github.com/repos/golang/tools/git/commits/d2e00652bac3dae765da6608ff9b84b445e25aa6,d2e00652bac3dae765da6608ff9b84b445e25aa6,"x/tools: fix build

Change-Id: I02b42abcc29ee04c8f54dc8ba2c6079b3e6c4153
Reviewed-on: https://go-review.googlesource.com/18816
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
ScottMansfield,2016-01-19 07:03:27,https://api.github.com/repos/golang/tools/git/commits/abfa4875c0931a74a2715f4f11ffacb7d06f5991,abfa4875c0931a74a2715f4f11ffacb7d06f5991,"cmd/gorename: Fixing panic when showing diffs

When displaying a diff the gorename command would panic because the
stdout variable was never set. These changes default stdout to
os.Stdout.

Fixes https://github.com/golang/go/issues/14009

Change-Id: I0902b2b4e2b8e1f46f8ab50e30dcfc841c925174
Reviewed-on: https://go-review.googlesource.com/18813
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-01-20 21:32:52,https://api.github.com/repos/golang/tools/git/commits/7912bef4df2a5e800f88a0142017ed59d1c64ea4,7912bef4df2a5e800f88a0142017ed59d1c64ea4,"go/gcimporter15: only test binary export when running against Go 1.6

Also: rename setname15.go to setname.go for consistency

Change-Id: I3f7e37ef4ade716ce64674edb4d53a543a1150c5
Reviewed-on: https://go-review.googlesource.com/18772
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-01-20 20:59:31,https://api.github.com/repos/golang/tools/git/commits/e6d5370703a7ed7a5734b28245ceac26561ab0e4,e6d5370703a7ed7a5734b28245ceac26561ab0e4,"go/gcimporter15: implement types.Package.SetName for Go 1.5

This makes gcimporter15 build against Go 1.5.

Change-Id: I14e7ff80b28d99f996abc19a0a74b08e5e1bbd75
Reviewed-on: https://go-review.googlesource.com/18771
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2016-01-20 19:13:58,https://api.github.com/repos/golang/tools/git/commits/2fb4b8bc95ab293fe694580af203e49c5c3d4b15,2fb4b8bc95ab293fe694580af203e49c5c3d4b15,"go/gcimporter15: use latest std/lib gcimporter code

Change-Id: Ia497e56084cf262510461b7e94296570ca8e2049
Reviewed-on: https://go-review.googlesource.com/18770
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
dmitshur,2016-01-09 03:44:58,https://api.github.com/repos/golang/tools/git/commits/5804fef4c0556d3e5e7d2440740a3d7aced7d58b,5804fef4c0556d3e5e7d2440740a3d7aced7d58b,"x/tools/go/vcs: fix FromDir returning bad root on Windows

Import path is a '/'-separated path. FromDir documentation says
on return, root is the import path corresponding to the root of
the repository. On Windows and other OSes where os.PathSeparator
is not '/', that wasn't true since root would contain characters
other than '/', and therefore it wasn't a valid import path
corresponding to the root of the repository. Fix that by using
filepath.ToSlash.

Add test coverage for root value returned from FromDir, it was
previously not tested.

Additionally, remove a dubious statement from the documentation
""(thus root is a prefix of importPath)"". There is no variable
importPath that is being referred to. It's also redundant and
confusing. Without it, the description of root value matches
the documentation of RepoRoot.Root struct field:

	// Root is the import path corresponding to the root of the
	// repository.
	Root string

Fixes golang/go#7723.

Change-Id: If9f5f55b5751e01a7f88b79d9b039402af3e9312
Reviewed-on: https://go-review.googlesource.com/18461
Reviewed-by: Chris Manghane <cmang@golang.org>
Run-TryBot: Brad Fitzpatrick <bradfitz@golang.org>"
kkaneda,2016-01-16 03:34:54,https://api.github.com/repos/golang/tools/git/commits/3c782264fbde3108fd1eae9abcc4015edfd79e65,3c782264fbde3108fd1eae9abcc4015edfd79e65,"go/types: fix a comment of Named.Obj

   // TypeName returns ...
-> // Obj returns ...

Change-Id: I2ac6133a703ec2c4b2045d4bdf9acc70049f0e1e
Reviewed-on: https://go-review.googlesource.com/18704
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
DanielMorsing,2016-01-13 15:50:34,https://api.github.com/repos/golang/tools/git/commits/ae18226edd6df820ca562ef374e4441e6f8f5145,ae18226edd6df820ca562ef374e4441e6f8f5145,"oracle: handle implicit selections in callees

The types only optimization for callees looked at the type of the
receiver to figure out if it was a dynamic call. If the selection
involves any implicit selections, we cannot be sure that this type
is the one that will actually receive the call.

Fix by working backwards from function signature to find the true
receiver

Change-Id: If79e3de7af33480e37bcf1081abe44bb04914da4
Reviewed-on: https://go-review.googlesource.com/18563
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-01-12 17:34:15,https://api.github.com/repos/golang/tools/git/commits/5a2875abe7f0f5eec05b5702a4ce9d472b395e3e,5a2875abe7f0f5eec05b5702a4ce9d472b395e3e,"go/loader: reduce contention for findPackage mutex

...by making the cache non-blocking and duplicate-suppressing.

(The bottleneck was introduced while adding vendoring support.)
This reduces the 95th percentile map shard time for type-checking 120K
packages to 8min from 20min.

Also: move the I/O-limiting counting semaphore and the NoGoError check
from FindPackage to findPackage so that all implementations benefit.

Change-Id: I43527122262cf80475dd3212d78c340e1c71e36c
Reviewed-on: https://go-review.googlesource.com/18580
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2016-01-13 02:06:35,https://api.github.com/repos/golang/tools/git/commits/b81ea3a5e1464fbf99a5fab6e8ac6e95f7c95822,b81ea3a5e1464fbf99a5fab6e8ac6e95f7c95822,"godoc: hide vendored packages from /pkg/ as we do with internal packages

Such packages may be viewed by adding ?m=all to the URL.

Fixes golang/go#13929

Change-Id: Id0ac48bc2937b5bec722b95b9a690d48d065ea6b
Reviewed-on: https://go-review.googlesource.com/18554
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
timstudd,2016-01-10 22:03:33,https://api.github.com/repos/golang/tools/git/commits/b57d82def59d39391cf376b727e0605a667a1ef8,b57d82def59d39391cf376b727e0605a667a1ef8,"x/tools/present: add video element for slides

Change-Id: I19f7c181d9bd8148f7791925f04207a34c95ac1e
Reviewed-on: https://go-review.googlesource.com/18484
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2016-01-08 15:12:21,https://api.github.com/repos/golang/tools/git/commits/f8ecfdb6b66ec67ca930b39806519a2b72d1eaca,f8ecfdb6b66ec67ca930b39806519a2b72d1eaca,"cmd/stringer: fork and tag for go1.4

The previous change updated the import of golang.org/x/tools/go/types
to the standard go/types package, causing 1.4 builds to fail.

Fixes #13874.

Change-Id: Idf0b4ac5e4e01dd5cd7cc9b89d017fbffb7a29df
Reviewed-on: https://go-review.googlesource.com/18430
Reviewed-by: Robert Griesemer <gri@golang.org>"
timstudd,2016-01-07 06:13:13,https://api.github.com/repos/golang/tools/git/commits/4ad533583d0194672e7d3bc6fb8b67c8e905d853,4ad533583d0194672e7d3bc6fb8b67c8e905d853,"x/tools/godoc: fixed width limit for non-paragraph text

Change-Id: I6020e03959a434622e3e999e0054849f0bfb522f
Fixes: golang/go#13602
Reviewed-on: https://go-review.googlesource.com/18361
Reviewed-by: Francesc Campoy Flores <campoy@golang.org>"
alandonovan,2016-01-08 19:46:14,https://api.github.com/repos/golang/tools/git/commits/ae186f56a288e77e24e9cb06b7aba1d6c2456212,ae186f56a288e77e24e9cb06b7aba1d6c2456212,"go/loader: don't treat unsafe specially wrt vendoring

The loader treats GOROOT's ""unsafe"" package specially,
with no source files and a Package of types.Unsafe.

Tested on Go 1.4.1, 1.5, and ~1.6 (tip).

Fixes issue #13882

Change-Id: I86c4e394665d86a50ec3852d6d702f0e9c5d2276
Reviewed-on: https://go-review.googlesource.com/18457
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-01-08 19:13:35,https://api.github.com/repos/golang/tools/git/commits/e211dfb0007a215198c1161cbbb9683265c7c83a,e211dfb0007a215198c1161cbbb9683265c7c83a,"refactor/rename: fix crash with ""."" as -from package

Cause: the absolute cwd, not ""."", must be passed to build.Import.

Also: simplify the lookup logic in findFromObjects, and handle nil
gracefully.

(No unit test---not worth faking os.Getwd.)

Fixes issue #13866

Change-Id: I7e8eede55bc83d98e2ef5e42609c287e74c04501
Reviewed-on: https://go-review.googlesource.com/18453
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2016-01-08 19:30:43,https://api.github.com/repos/golang/tools/git/commits/1fb1f857ac13798252e62980798de06d84fefae0,1fb1f857ac13798252e62980798de06d84fefae0,"go/loader: use Skipf in test

(late response to comment in review of CL 18452)

Change-Id: I1fa80fd1c7fd22cec752c839d20a483e0732337c
Reviewed-on: https://go-review.googlesource.com/18454
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-01-08 18:18:57,https://api.github.com/repos/golang/tools/git/commits/10712091e14c80a563b8dcfd6781bd4f8282b640,10712091e14c80a563b8dcfd6781bd4f8282b640,"tools: fallout from flipped sense of build.IgnoreVendor flag

(See https://go-review.googlesource.com/#/c/18450)

Details:
- delete buildutil.AllowVendor flag.
  Instead use unexported 'go16' var in each package that needs it.
- delete buildutil.StripVendor; was never needed.
- remove inapplicable vendoring comments from loader14.go
- importgraph: go1.5: don't bother checking for 1.6 before calling
  absolutize (minor simplifiication and deoptimization).

Tested on 1.4.1, 1.5, and ~1.6 (tip).

Change-Id: If692b0df2eb6c120a9c09d7b1ed99f1b4c6b0826
Reviewed-on: https://go-review.googlesource.com/18452
Reviewed-by: Russ Cox <rsc@golang.org>"
griesemer,2016-01-08 00:29:29,https://api.github.com/repos/golang/tools/git/commits/dd6e749ee1461e4067ce1fc2e19d99c6c37d6ba4,dd6e749ee1461e4067ce1fc2e19d99c6c37d6ba4,"refactor/rename: skip Diff test on Windows (build fix attempt)

TBR=adonovan

Change-Id: I37dd29bfaa73b4b563c19be5fa47b938f06a4e0d
Reviewed-on: https://go-review.googlesource.com/18392
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-01-07 19:57:24,https://api.github.com/repos/golang/tools/git/commits/da91609d887c6b1e28ad4548c47f3ff39a471989,da91609d887c6b1e28ad4548c47f3ff39a471989,"cmd/vet: roll back update of go/types import

(from importing golang.org/x/tools/go/types to std lib go/types)

The cmd/vet package should never have been included in this change.

Tested with 1.4.1, 1.5 and ~1.6 (tip).

Change-Id: I6d915619cbfa0297dbb9aa9ba033c1320a08c367
Reviewed-on: https://go-review.googlesource.com/18385
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2016-01-07 16:17:39,https://api.github.com/repos/golang/tools/git/commits/4747062949bf9494e68ca5ff3443bd094ec9334c,4747062949bf9494e68ca5ff3443bd094ec9334c,"go/gcimporter15: a copy of go/gcimporter using go1.5 std go/types

Because the std go/importer's Lookup functionality is incomplete,
clients have no way to create a Go 1.5 types.Package from an io.Reader
reading from gc export data.  This package provides a stopgap until
the standard library is complete.

The go/gcimporter package remains unchanged, and uses only the
golang.org/x/tools/go/types package.

Change-Id: I47a817f4b6a52ddab26c6b01de6e28099301faf5
Reviewed-on: https://go-review.googlesource.com/18382
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2016-01-07 04:16:41,https://api.github.com/repos/golang/tools/git/commits/819a9109e1b5bf2674589db7c4ab5fc99cd3d6d0,819a9109e1b5bf2674589db7c4ab5fc99cd3d6d0,"godoc/dl: record and display SHA256 hashes for files

Fixes golang/go#12057

Change-Id: I2e0a27c96f3f13478a079765b8c363c9f3919c48
Reviewed-on: https://go-review.googlesource.com/18354
Reviewed-by: Russ Cox <rsc@golang.org>"
timstudd,2016-01-07 00:52:04,https://api.github.com/repos/golang/tools/git/commits/1e63c6ac3bbb3154f503eb6c6cb44033260257e3,1e63c6ac3bbb3154f503eb6c6cb44033260257e3,"present: add background image element for slides

Fixes golang/go#11470

Change-Id: I665622197bea48b95adc839be8de7d03bf812f37
Reviewed-on: https://go-review.googlesource.com/18360
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2016-01-06 23:52:28,https://api.github.com/repos/golang/tools/git/commits/791f468ced9d96d4ffbc3af50cfe877d253494c1,791f468ced9d96d4ffbc3af50cfe877d253494c1,"godoc/static: show relevant test instructions on install page

Fixes golang/go#12490

Change-Id: Ifb408f225a84b3c5daf739e1e0afc4f5540e4ebd
Reviewed-on: https://go-review.googlesource.com/18278
Reviewed-by: Russ Cox <rsc@golang.org>"
alandonovan,2015-12-29 18:06:30,https://api.github.com/repos/golang/tools/git/commits/542ffc7e75cf45ac7ad456664a710cd96338fda6,542ffc7e75cf45ac7ad456664a710cd96338fda6,"tools: switch to standard go/types at tip

A few files have been forked and tagged ""go1.5,!go1.6"" to work around
minor API changes between the two types packages:
- constant.Value.String() in oracle/describe.go and its tests;
- constant.ToInt must now be called before constant.Int64Val.
- types.Config{Importer: importer.Default()} in a number of places
- go/types/typeutil/import_test.go uses lowercase names to avoid 'import ""C""'.

Files in go/types/typesutil, missing from my previous CL, have been
tagged !go1.5; these files will be deleted in February.

All affected packages were tested using 1.4.1, 1.5, and ~1.6 (tip).

Change-Id: Iec7fd370e1434508149b378438fb37f65b8d2ba8
Reviewed-on: https://go-review.googlesource.com/18207
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-01-06 19:56:13,https://api.github.com/repos/golang/tools/git/commits/2477c0d5780ddec6439a9322a6862dfe20cc8b81,2477c0d5780ddec6439a9322a6862dfe20cc8b81,"x/tools/...: fork and tag !1.5 all files that use go/types et al

This change will ensure that the tree continues to work with go1.4.1.

All files continue to depend on golang.org/x/tools/go/types, but in a
follow-up change, I will switch the primary files to depend on the
standard go/types package.  Another (smaller) set of files will be
forked and tagged, this time !1.6, due to API differences between the
two packages.

All tests pass using 1.4.1, 1.5, and ~1.6 (tip).

Change-Id: Ifd75a6330e120957d646be91693daaba1ce0e8c9
Reviewed-on: https://go-review.googlesource.com/18333
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-01-06 19:23:03,https://api.github.com/repos/golang/tools/git/commits/8f90b5e56022b5487519f678f4253e9e6ca9146c,8f90b5e56022b5487519f678f4253e9e6ca9146c,"go/ssa/interp: remove stale TODO

Followup to TBR'd change https://go-review.googlesource.com/#/c/18191/.

Change-Id: I7d6957a46aea00cfe0b734576b5392d578ee06d9
Reviewed-on: https://go-review.googlesource.com/18326
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2016-01-06 19:05:03,https://api.github.com/repos/golang/tools/git/commits/c49318f04ad720296bc024c3ac49c423dceb089f,c49318f04ad720296bc024c3ac49c423dceb089f,"go/ssa/interp: make os.Pipe intrinsic POSIX-portable; disable on Windows

Change-Id: I6c2f495c7c75f86590a0d79f86423ca67d695347
Reviewed-on: https://go-review.googlesource.com/18325
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2016-01-06 16:34:23,https://api.github.com/repos/golang/tools/git/commits/0f870d4d866f243ba9e19631a63ae3e4cbac6f79,0f870d4d866f243ba9e19631a63ae3e4cbac6f79,"go/loader: fix interaction of cwd and vendor

Packages specified on the command line should be interpreted relative to
cwd iff they are local (e.g. ./http within $GOROOT/src/net), otherwise a
request for, say, ""golang.org/x/net/http2/hpack"" might return the vendored
package depending on the working directory.

The FindPackage hook function now takes a build.ImportMode parameter, so
it matches the signature of (*build.Context).Import.  The AllowVendor
flag is enabled only for imports within source files, but not for the
initial packages.

+ test.

Change-Id: I756dc46b70928d2fd9f824e6670092d8169e0d64
Reviewed-on: https://go-review.googlesource.com/18318
Reviewed-by: Robert Griesemer <gri@golang.org>"
davidrjenni,2015-08-09 17:07:02,https://api.github.com/repos/golang/tools/git/commits/e7d14dfe5b9e4ef4f0e4844492d1db499e8c9f5f,e7d14dfe5b9e4ef4f0e4844492d1db499e8c9f5f,"refactor/rename: fix crash when renaming type embedded in another package.

Fixes golang/go#12038.

Change-Id: I9026edef7f8769b451f2b1502c107d6b2bb45096
Reviewed-on: https://go-review.googlesource.com/13451
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2016-01-04 22:56:55,https://api.github.com/repos/golang/tools/git/commits/a8498a77d5b6ca3adbb0ff41125bd05af0f21f2b,a8498a77d5b6ca3adbb0ff41125bd05af0f21f2b,"godoc: hide appengine dependencies behind build tags

Fixes the continuous build.

Change-Id: If55b08c3b702ba705d84a30fdbce842438477883
Reviewed-on: https://go-review.googlesource.com/18241
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-12-30 00:06:21,https://api.github.com/repos/golang/tools/git/commits/2dff1e88eb92a374a989dd38e3402481f498ffa2,2dff1e88eb92a374a989dd38e3402481f498ffa2,"oracle: referrers: fix crash when loading nonexistent files

Files with //line directives may not exist.
Print a helpful error instead of panicking when a file fails to load.

+ Test.

Fixes issue #13459

Change-Id: I305d1380e66e64d20ea84a27c284f53c019fe5e6
Reviewed-on: https://go-review.googlesource.com/18209
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2015-12-30 19:17:09,https://api.github.com/repos/golang/tools/git/commits/3a85b8da3830e027d8fd2d446a8675d0ad9a57b3,3a85b8da3830e027d8fd2d446a8675d0ad9a57b3,"refactor/importgraph: reduce I/O concurrency to avoid EMFILE

Use an concurrency-limiting semaphore to reduce I/O parallelism in Import.

Also, start the producer in a new goroutine so that it runs in parallel
with the consumer.  Paradoxically, this reduces the peak number of
goroutines.

Also, in buildutil.ForEachPackage, make the concurrency limiting
semaphore global, since I/O parallelism is a process-wide resource.

Change-Id: I282b717c50603361826e5675077c9f464c874132
Reviewed-on: https://go-review.googlesource.com/18215
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2015-12-30 20:24:19,https://api.github.com/repos/golang/tools/git/commits/6e2f52e572ea836c54886d4856872cf239800498,6e2f52e572ea836c54886d4856872cf239800498,"refactor/importgraph: document some optimization experiments

Change-Id: I5ea8f097814cd83a8534be1bfbeda4ebdabee168
Reviewed-on: https://go-review.googlesource.com/18216
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-12-30 15:37:15,https://api.github.com/repos/golang/tools/git/commits/22501a76a1647f341697bfe27ce6e8475d42cb0d,22501a76a1647f341697bfe27ce6e8475d42cb0d,"oracle: describe: fix crash on bad ImportSpec

+ Test

Fixes issue #13380

Change-Id: I6d738756017f83a296bde6a04845cd985a351409
Reviewed-on: https://go-review.googlesource.com/18210
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2015-12-30 16:05:30,https://api.github.com/repos/golang/tools/git/commits/d331899c12bac157d76780c6f3107b00514ca3d8,d331899c12bac157d76780c6f3107b00514ca3d8,"refactor/rename: add pid to name of temporary file for diff

Change-Id: Icd543062b4e1fe8c998f95c0daff5364f08ce83c
Reviewed-on: https://go-review.googlesource.com/18211
Reviewed-by: Ralph Corderoy <ralph.corderoy@gmail.com>
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2015-12-30 16:36:47,https://api.github.com/repos/golang/tools/git/commits/b2a76986510e1d23982e13eaf8a70d8380433012,b2a76986510e1d23982e13eaf8a70d8380433012,"go/loader: in stdlib_test, remove workaround for lack of vendoring

Change-Id: I058081ef596e8b5231321ef05d5256ec44cc58c6
Reviewed-on: https://go-review.googlesource.com/18214
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-12-29 21:26:28,https://api.github.com/repos/golang/tools/git/commits/108b52ee614ab0a9b06bfd1fff57984a19e1c725,108b52ee614ab0a9b06bfd1fff57984a19e1c725,"cmd/gorename: -d flag prints diffs instead of rewriting files

The user may specify the diff tool using the -diffcmd flag.

+ test.

Also:
- eliminate redundant DryRun flag
- simplify Verbose messages using log.SetPrefix

Fixes issue #13355

Change-Id: I917edc73e31ddf0f5d5b9b30c43f826465529da1
Reviewed-on: https://go-review.googlesource.com/18208
Reviewed-by: Michael Matloob <matloob@golang.org>"
alandonovan,2015-12-28 21:51:30,https://api.github.com/repos/golang/tools/git/commits/a09dffbb6c9a92df8f0380ce64dc56316d3af9a1,a09dffbb6c9a92df8f0380ce64dc56316d3af9a1,"go/vcs: workaround EOF bug in token-based XML decoder

...using same logic as in $GOROOT/go/src/cmd/go/discovery.go

See issue #13757

Change-Id: I2ace0abed0743f4a8675fa8780e190d640b57e6c
Reviewed-on: https://go-review.googlesource.com/18196
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2015-12-29 05:19:58,https://api.github.com/repos/golang/tools/git/commits/157f8abbbd7c19e90432c72cb6216cf0b9324c55,157f8abbbd7c19e90432c72cb6216cf0b9324c55,"go/vcs: accept domain.root in RepoRootForImportDynamic

This is the same change as in https://golang.org/cl/12193.

Fixes golang/go#13506.

Related to golang/go#9357.

Change-Id: I9c7d956008641b1907e14bcb08198235f5f9552f
Reviewed-on: https://go-review.googlesource.com/18152
Reviewed-by: Russ Cox <rsc@golang.org>"
alandonovan,2015-12-28 22:27:01,https://api.github.com/repos/golang/tools/git/commits/2b785679434b0fd32e1331d4508a99f0abcfed04,2b785679434b0fd32e1331d4508a99f0abcfed04,"go/loader: fix tests to work at go1.5 and tip

Change-Id: Icc80f112a7ec4b64519220c57b6ccb2612166656
Reviewed-on: https://go-review.googlesource.com/18197
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-12-28 21:26:54,https://api.github.com/repos/golang/tools/git/commits/b14dd1a5b7c57e0372799e7632e2b6fecdd47fde,b14dd1a5b7c57e0372799e7632e2b6fecdd47fde,"go/importer: in TestImportStdLib, skip 2 packages that use vendoring

(See issue #13756)

Change-Id: Icda14c34f3460e941ae092f147432c795465a077
Reviewed-on: https://go-review.googlesource.com/18195
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-12-28 19:06:52,https://api.github.com/repos/golang/tools/git/commits/9b7a39c6be22cc4681bc92b0b85a8ea1a7b6fdf1,9b7a39c6be22cc4681bc92b0b85a8ea1a7b6fdf1,"go/loader: fix brittle example test

We need a better approach for tests such as these.

Change-Id: I6fb608acc096088fe377f6f2c40ff6124cf3d09c
Reviewed-on: https://go-review.googlesource.com/18194
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-12-28 18:35:57,https://api.github.com/repos/golang/tools/git/commits/8463610142a5a3d2c03b8b57a35848d2c2fd9a55,8463610142a5a3d2c03b8b57a35848d2c2fd9a55,"go/ssa/interp: enable support for Example tests

1. Added intrinsic for os.Pipe to avoid use of ""unsafe"".  This makes
   Example tests work in the interpreter, fixing the broken ""unicode""
   package (which recently sprouted some Examples) and allowing us to
   enable tests for:

      encoding/csv
      flag
      path
      text/scanner
      unicode/utf8

   The implementation of os.Pipe may require tweaking for non-Linux platforms.

2. Added intrinsic for strings.Index to avoid assembly dependency.

3. Added dumb intrinsic for testing۰runExample to work around a bug in
   go/ssa/testmain.go that requires an invasive fix
   (Until then, the output of Example functions will not be checked.)

Change-Id: I6374c9c47aa802275b7cdc98525e057f5db0615a
Reviewed-on: https://go-review.googlesource.com/18191
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-12-28 20:41:34,https://api.github.com/repos/golang/tools/git/commits/e3e5aae018b42b4409446d64a034e6bb119808fd,e3e5aae018b42b4409446d64a034e6bb119808fd,"go/types: in TestStdlib, skip 2 packages that use vendoring

(gcimporter does not support vendoring---see issue #13756)

Change-Id: Ief4101e4f33007d497ed1519845febfcffdded38
Reviewed-on: https://go-review.googlesource.com/18193
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-12-28 18:59:28,https://api.github.com/repos/golang/tools/git/commits/f75338cbc6f21a4058f39115735379386a179e1c,f75338cbc6f21a4058f39115735379386a179e1c,"go/types: skip two failing $GOROOT/test/fixedbugs tests

Change-Id: I7dfb95f34ae23c0b7905714b32068dc336a05656
Reviewed-on: https://go-review.googlesource.com/18192
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adonovan,2015-12-19 02:02:28,https://api.github.com/repos/golang/tools/git/commits/d6e83e534da905609e21e4086a0fbaed33f88d07,d6e83e534da905609e21e4086a0fbaed33f88d07,"go/loader: changes for vendor support

Prior to this change, the loader made the simplifying assumption
that an import path is equal to a package path, that is, a
subdirectory of src/.  (This assumption was already false because
relative imports ""../foo"" are possible, though discouraged.)
Now, an import ""foo"" may denote ""a/vendor/foo"" or ""b/vendor/foo""
depending on whether it appears beneath a/ or b/.  Thus import
paths and package paths are no longer the same, and the directory
containing an import declaration is a necessary input to the
import resolution function.

This change makes the loader hygienic w.r.t. the directory of
each import declaration, and cleans up the terminology.
The only API change is to the FindPackage hook, which most
clients never use.

Details:
- Add a 'fromDir string' parameter to the FindPackage hook function.
- Add a dir field to each PackageInfo.
- doImport (called by go/types) now consists of two steps:
  use FindPackage(dir, importPath) to locate the package,
  then consult the import map using the canonical package path.
  Only the first step can fail.
- Memoize FindPackage.
- Simplify importInfo now that it no longer has to deal with errors.
  Replace a condition variable with a channel.
- Use a separate type to report importErrors.
- Rename loadAll to importAll
- Delete the importMode constant.
- Test.

Change-Id: I3defab51bfa12b48b1511a2172fb48dc8e9150e6
Reviewed-on: https://go-review.googlesource.com/18053
Reviewed-by: Robert Griesemer <gri@golang.org>"
minux,2015-12-20 07:08:49,https://api.github.com/repos/golang/tools/git/commits/9673333889cecd0170042cef4585f782e59c45da,9673333889cecd0170042cef4585f782e59c45da,"godoc/dl: update label for ARMv6 binary distribution

See also golang/go#13669 and https://golang.org/cl/18059.

Change-Id: If958efc4a09082dad393df9a891f20921602320d
Reviewed-on: https://go-review.googlesource.com/18080
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adonovan,2015-12-18 19:11:09,https://api.github.com/repos/golang/tools/git/commits/fa833fdef560f0fe9b40dbb37fd03030ac3d514b,fa833fdef560f0fe9b40dbb37fd03030ac3d514b,"refactor/importgraph: changes for vendor support

Each string in build.Package.{,Test,XTest}Imports must now be
interpreted relative to the Package.Dir.  This adds a ton of
redundant I/O.

Also:
- use a counting semaphore to limit concurrent I/O calls
  (Fixes golang/go#10306)
- remove obsolete call to runtime.GOMAXPROCS from the test.

Change-Id: Ic556c4cf41cce7a88c0158800c992e66f354c484
Reviewed-on: https://go-review.googlesource.com/18050
Reviewed-by: Russ Cox <rsc@golang.org>"
adonovan,2015-12-18 18:19:00,https://api.github.com/repos/golang/tools/git/commits/27534aa9517ffbc41e1f1b8d3c3f26919a27e5e5,27534aa9517ffbc41e1f1b8d3c3f26919a27e5e5,"go/buildutil: changes for vendor support

Add AllowVendor constant for convenience across x/tools.
 (Will delete go/loader's importMode later)
Add StripVendor utility function + test.

Change-Id: I885076cb4ea67588996d85b749b85f49cd619f0d
Reviewed-on: https://go-review.googlesource.com/18049
Reviewed-by: Robert Griesemer <gri@golang.org>"
adonovan,2015-12-18 18:13:44,https://api.github.com/repos/golang/tools/git/commits/42bc1282f3dad2babdc9a28d8014e394426ea861,42bc1282f3dad2babdc9a28d8014e394426ea861,"go/loader: update example_test for Go1.6

Change-Id: Ib3bf913e3c8f3cf06ba855f8dda855453e0a1aa2
Reviewed-on: https://go-review.googlesource.com/18048
Reviewed-by: Alan Donovan <adonovan@google.com>"
adonovan,2015-12-18 04:35:19,https://api.github.com/repos/golang/tools/git/commits/99c318c742339e824d89d23ba3b3bff4f4ab27a8,99c318c742339e824d89d23ba3b3bff4f4ab27a8,"cmd/bundle: add blank line before package declaration

so that the bundled package doesn't clobber the package declaration
of the host package.

Also: minor comment tweaks.

Change-Id: I28ab3aca2b02213edc95c6b12c0d1a2514453cfe
Reviewed-on: https://go-review.googlesource.com/18040
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2015-12-18 02:23:29,https://api.github.com/repos/golang/tools/git/commits/4a5fb9938b381c8d0933806c456cc00fe2a2c8a9,4a5fb9938b381c8d0933806c456cc00fe2a2c8a9,"cmd/tip: add App Engine Managed VM health check handler

Change-Id: I67826efaa3cb2883771837581dd95aa9ec3e6d2b
Reviewed-on: https://go-review.googlesource.com/18025
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
broady,2015-12-18 00:11:58,https://api.github.com/repos/golang/tools/git/commits/9532e1006bdf80e0252aa3cb111101c819c7dcd1,9532e1006bdf80e0252aa3cb111101c819c7dcd1,"godoc: use ARMv6 as the label for arm6 builds.

Change-Id: I53c51fb772f23ab3f035b8e50bf017335d01e1c4
Reviewed-on: https://go-review.googlesource.com/18019
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Dave Cheney <dave@cheney.net>"
rsc,2015-12-11 05:00:02,https://api.github.com/repos/golang/tools/git/commits/34ae141ecc497f26b54c3a9d04cb19b3b1019b1a,34ae141ecc497f26b54c3a9d04cb19b3b1019b1a,"go/loader: use build.AllowVendor during Import on Go 1.6 and later

Makes programs like ssadump work on packages using vendored code,
for example net/http.

For golang/go#12278.
Depends on CL 17726 in main repository.

Change-Id: Ibabf564e397044a0f449087124dd96161081baaf
Reviewed-on: https://go-review.googlesource.com/17727
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2015-12-14 01:21:38,https://api.github.com/repos/golang/tools/git/commits/1cdaff4a02c554c9fb39dda0b56241c5f0949d91,1cdaff4a02c554c9fb39dda0b56241c5f0949d91,"go/types: fix build

Fixes golang/go#13603

Change-Id: Ie35094e9fd9976317340fae19425bffa307d7c8a
Reviewed-on: https://go-review.googlesource.com/17753
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dsymonds,2015-12-14 00:44:47,https://api.github.com/repos/golang/tools/git/commits/8297301f3aa0cf939f8f7bf96e3cb3603614eb55,8297301f3aa0cf939f8f7bf96e3cb3603614eb55,"imports: Remove ancient Go 1.1 compatibility indirections.

Change-Id: Id389cba2d3696c3bd2c2987ddc1768059747e8ac
Reviewed-on: https://go-review.googlesource.com/17793
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dsymonds,2015-12-14 00:44:26,https://api.github.com/repos/golang/tools/git/commits/e842f6af3a48fbfd686d3e1d41614075227fa985,e842f6af3a48fbfd686d3e1d41614075227fa985,"go/types: Remove ancient Go 1.1 compatibility indirections.

Change-Id: Ie16cc01ea2bd4806eaa7bd77cfbd2fa90f11ea36
Reviewed-on: https://go-review.googlesource.com/17792
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2015-12-04 14:51:03,https://api.github.com/repos/golang/tools/git/commits/c0008c5889c0d5091cdfefd2bfb08bff96527879,c0008c5889c0d5091cdfefd2bfb08bff96527879,"x/tools/cmd/callgraph: add -ptalog flag

Since this tool is a handy way to run the pointer analysis during debugging.

Change-Id: If9a62f71dd8651ad6c782ead85bb84f09c703cba
Reviewed-on: https://go-review.googlesource.com/17382
Reviewed-by: Robert Griesemer <gri@golang.org>"
broady,2015-12-03 20:01:13,https://api.github.com/repos/golang/tools/git/commits/eb69368e05c29338c7d489799e460058b71791f1,eb69368e05c29338c7d489799e460058b71791f1,"godoc/dl: use datastore to retrieve secret key.

godoc still runs on App Engine (not Managed VMs). The metadata server is only
available from Compute Engine and Managed VMs, but not App Engine.

Change-Id: I0e5e9ef3f169f6d24ca7562df744c8f1556b825f
Reviewed-on: https://go-review.googlesource.com/17391
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2015-12-02 22:19:53,https://api.github.com/repos/golang/tools/git/commits/b844739462ee2a4b0cc4ac80812549fb2efb36ff,b844739462ee2a4b0cc4ac80812549fb2efb36ff,"oracle: implements: inspect all packages in the analysis scope

If the analysis scope is not set, inspect all packages that depend on
the query package.

Fixes issue 13457

Change-Id: I08791d8a0a752470891ee93e65e664d0408525c5
Reviewed-on: https://go-review.googlesource.com/17342
Reviewed-by: Robert Griesemer <gri@golang.org>"
alexbrainman,2015-11-24 06:36:50,https://api.github.com/repos/golang/tools/git/commits/fff8fd7b194011cfedeafda246f0bfc275abb904,fff8fd7b194011cfedeafda246f0bfc275abb904,"go/buildutil: ignore path letters case in ContainingPackage on windows

Fixes golang/go#13368

Change-Id: I4cee2078bc64b6f175f206daa9609246cc1b1f85
Reviewed-on: https://go-review.googlesource.com/17211
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-11-20 20:08:07,https://api.github.com/repos/golang/tools/git/commits/977844c7af2aa555048a19d28e9fe6c392e7b8e9,977844c7af2aa555048a19d28e9fe6c392e7b8e9,"go/ssa: fix crash when building map[*struct{}]bool{{}: true}

Since Go 1.5, if a key expression in a map literal is itself a composite
literal, the type may be omitted.  An & operation may be implied,
but was not generated, resulting in a type mismatch crash.

Added regression test.
Also, added missing intrinsic math.hasSSE4 to interpreter.

Fixes issue 13341

Change-Id: I6a5e560460cdcac295a500a3fc3738cbe8aa5853
Reviewed-on: https://go-review.googlesource.com/17123
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2015-11-18 04:14:22,https://api.github.com/repos/golang/tools/git/commits/9cd799205e6fcf8628275ce5d7814bc09a22fff0,9cd799205e6fcf8628275ce5d7814bc09a22fff0,"cmd/godoc: add redirect for x/term repo

Update golang/go#13104

Change-Id: I76102038d8dc87503c9a8994f9008b1a9fdb19d4
Reviewed-on: https://go-review.googlesource.com/17020
Reviewed-by: Dave Cheney <dave@cheney.net>"
jdhenke,2015-11-14 19:52:32,https://api.github.com/repos/golang/tools/git/commits/5bc19071d3cdfcc1c95102384201d9074c4dc645,5bc19071d3cdfcc1c95102384201d9074c4dc645,"godoc/vfs/zipfs: add tests; fix handling of ""/""

- add tests for Open, ReadDir, and Stat funcs
- add tests for Seek of Open()
- simplify internal handling of absolute vs. ""zip"" paths
- fix handling of ""/""

The fix special cases this scenario, leaving the codepath for all
other file paths the same. Specifically,

- Exported funcs call stat(), so stat(""/"") is handled by simply
returning 0 to indicate all entries are (effectively) prefixed
by ""/"" and zipFI{"""", nil} because ""/"" has no name and nil
indicates it is a directory.

- ReadDir(""/"") is further handled by seeding the existing lookup
logic with """" instead of what would have been ""/"". This is
necessary because, per the zipfs spec, the zip file entries MUST
NOT start with ""/"", so using ""/"" would incorrectly match nothing.
This works because seeding lookup with """" (correctly) matches
all files and then the following, existing logic (correctly) pares
things down to just the files in the root directory; not in any
subdirectories.

Verified that godoc -zip still works.

Fixes golang/go#12743

Change-Id: Icb5f01b8a29cefa4e2820135f318894042970301
Reviewed-on: https://go-review.googlesource.com/16925
Reviewed-by: Andrew Gerrand <adg@golang.org>"
ianlancetaylor,2015-11-11 01:38:53,https://api.github.com/repos/golang/tools/git/commits/d94e6fe0fd36ddeac451f8ed1987b55db35bca35,d94e6fe0fd36ddeac451f8ed1987b55db35bca35,"container/intsets: use fast popcount with gccgo

Use the compiler intrinsic __builtin_popcount.

Change-Id: I58286fbcf66d1068390ea9caff2f98b8fe244c2d
Reviewed-on: https://go-review.googlesource.com/16831
Reviewed-by: Andrew Gerrand <adg@golang.org>"
dsymonds,2015-11-10 23:45:51,https://api.github.com/repos/golang/tools/git/commits/3dedf801ddf6232211026ed20e3e4a9d448a5cf9,3dedf801ddf6232211026ed20e3e4a9d448a5cf9,"container/intsets: update build tags to exclude assembly from gccgo.

Change-Id: I6f3b351d42f5534dd5a5ff161f1e5680b4dbfd58
Reviewed-on: https://go-review.googlesource.com/16793
Reviewed-by: Andrew Gerrand <adg@golang.org>
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
dmitshur,2015-11-09 03:14:07,https://api.github.com/repos/golang/tools/git/commits/747ae2594e531eeef12cf276085f6409cb10ff2d,747ae2594e531eeef12cf276085f6409cb10ff2d,"go/buildutil: Fix example code for TagsFlag.

The example incorrectly used buildutil.TagsDoc identifier which does not
exist. It should be buildutil.TagsFlagDoc instead.

The issue was introduced in https://golang.org/cl/9172 when this code was
first written.

Also use more idiomatic style for Go comments, '//' followed by a space,
then tab (instead of skipping the space). Although both render correctly
in godoc, this form is more correct and consistent.

Change-Id: I3b3c9767fe313106a8ff81e7887f3241c5806b59
Reviewed-on: https://go-review.googlesource.com/16743
Reviewed-by: Alan Donovan <adonovan@google.com>"
tamird,2015-09-27 13:47:35,https://api.github.com/repos/golang/tools/git/commits/4b07c5ce8adfdbd352cff286306e3829499f6ebf,4b07c5ce8adfdbd352cff286306e3829499f6ebf,"cmd/stringer: prepend ""Code"" to codegen warning

This allows Github to hide diffs in generated files. See:
https://github.com/github/linguist/blob/473282d/lib/linguist/generated.rb#L241

Change-Id: Ic0a9ed80ecc6130d81fd0ba10e2df48217eb14cc
Reviewed-on: https://go-review.googlesource.com/15073
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-11-04 02:23:52,https://api.github.com/repos/golang/tools/git/commits/dec63b8e987f00163960d2f9ceb798ca1614cc32,dec63b8e987f00163960d2f9ceb798ca1614cc32,"cmd/godoc: add x/time and x/sync redirects

Fixes golang/go#13133

Change-Id: I45031352d4d7c040889134310ad5721dd9dcc1ee
Reviewed-on: https://go-review.googlesource.com/16640
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-10-30 05:59:40,https://api.github.com/repos/golang/tools/git/commits/823804e1ae08dbb14eb807afc7db9993bc9e3cc3,823804e1ae08dbb14eb807afc7db9993bc9e3cc3,"playground/socket: only buffer messages of one kind, add tests

Change-Id: I38c2b39fb1090669f8ede7f681f7b1c800111f23
Reviewed-on: https://go-review.googlesource.com/16508
Reviewed-by: jcd . <jcd@golang.org>"
adg,2015-10-29 08:28:03,https://api.github.com/repos/golang/tools/git/commits/14fd3daae1c0a800d94aebe176c9b60e8c693ade,14fd3daae1c0a800d94aebe176c9b60e8c693ade,"playground/socket: fix race condition and goroutine leak

Fixes golang/go#11507

Change-Id: Ifa0a34df02433b3f8a5fb60c4df4eca47750646e
Reviewed-on: https://go-review.googlesource.com/16468
Reviewed-by: jcd . <jcd@golang.org>"
tw4452852,2015-10-28 03:29:04,https://api.github.com/repos/golang/tools/git/commits/23f9896d9eb12b45e1a62d4ac05f24405cdd9743,23f9896d9eb12b45e1a62d4ac05f24405cdd9743,"present: don't ignore command within text scope

when handling text line by line, the current line will be ignored if it
may be a command line, so we should stack back this line for further parse.

Fixes golang/go#11435

Change-Id: If0567c46c90d09b30e78b72f24395725b9e00ea3
Reviewed-on: https://go-review.googlesource.com/16410
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-10-14 17:24:18,https://api.github.com/repos/golang/tools/git/commits/199b70b4262133b26f0f5891b27e69c51c5b220d,199b70b4262133b26f0f5891b27e69c51c5b220d,"x/tools/cmd/bundle: a tool to concatenate source files, preserving reference integrity

+ Test.

For background, see ""http -> http2 -> http import cycle"" thread on golang-dev.

Change-Id: Idc422247e5935ef7615cd5e8b7e2c489f7f2bc31
Reviewed-on: https://go-review.googlesource.com/15850
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
tw4452852,2015-10-28 09:07:50,https://api.github.com/repos/golang/tools/git/commits/6a71ab8780826416708c47687337091a434d7b3b,6a71ab8780826416708c47687337091a434d7b3b,"cmd/present: only include play.js in article when necessary

There is no need to add play.js in article page when
playground is disabled.

Signed-off-by: Tw <tw19881113@gmail.com>

Change-Id: If40d256c89d7bd37efff9e08bb176bd3ea2d6f88
Reviewed-on: https://go-review.googlesource.com/16415
Reviewed-by: Andrew Gerrand <adg@golang.org>"
0xmohit,2015-10-26 18:34:38,https://api.github.com/repos/golang/tools/git/commits/f96de0f7c89f643f8a1fa32ba5bdf6411c1c0082,f96de0f7c89f643f8a1fa32ba5bdf6411c1c0082,"x/tools/cmd/godoc: Examples should be followed by blank a newline

before the beginning of another function.

For example, a snippet in `godoc -ex strings` would change from

<
func Contains(s, substr string) bool
    Contains reports whether substr is within s.

    Example:
        fmt.Println(strings.Contains(""seafood"", ""foo""))
        fmt.Println(strings.Contains(""seafood"", ""bar""))
        fmt.Println(strings.Contains(""seafood"", """"))
        fmt.Println(strings.Contains("""", """"))
        // Output:
        // true
        // false
        // true
        // true
func ContainsAny(s, chars string) bool
    ContainsAny reports whether any Unicode code points in chars are within
    s.

    Example:
        fmt.Println(strings.ContainsAny(""team"", ""i""))
        fmt.Println(strings.ContainsAny(""failure"", ""u & i""))
        fmt.Println(strings.ContainsAny(""foo"", """"))
        fmt.Println(strings.ContainsAny("""", """"))
        // Output:
        // false
        // true
        // false
        // false
func ContainsRune(s string, r rune) bool
>

to

<
func Contains(s, substr string) bool
    Contains reports whether substr is within s.

    Example:
        fmt.Println(strings.Contains(""seafood"", ""foo""))
        fmt.Println(strings.Contains(""seafood"", ""bar""))
        fmt.Println(strings.Contains(""seafood"", """"))
        fmt.Println(strings.Contains("""", """"))
        // Output:
        // true
        // false
        // true
        // true

func ContainsAny(s, chars string) bool
    ContainsAny reports whether any Unicode code points in chars are within
    s.

    Example:
        fmt.Println(strings.ContainsAny(""team"", ""i""))
        fmt.Println(strings.ContainsAny(""failure"", ""u & i""))
        fmt.Println(strings.ContainsAny(""foo"", """"))
        fmt.Println(strings.ContainsAny("""", """"))
        // Output:
        // false
        // true
        // false
        // false

func ContainsRune(s string, r rune) bool
>

Fixes: golang/go#13053

Change-Id: I355870b1e90b2b6ca0104d67e85869593f294252
Reviewed-on: https://go-review.googlesource.com/16329
Reviewed-by: Andrew Gerrand <adg@golang.org>"
kostya-sh,2015-10-26 12:40:53,https://api.github.com/repos/golang/tools/git/commits/0227ea4101b996525f163300f3bc957e4a1f72a5,0227ea4101b996525f163300f3bc957e4a1f72a5,"refactor/rename: emacs: set up autoloading of go-rename function

Add an ;;;###autoload magic comment, so that the go-rename command can be used
without need to explicitly (require 'go-rename) first.

Change-Id: Ibdf9886fe98c55e1d948469aac972b568649f910
Reviewed-on: https://go-review.googlesource.com/16327
Reviewed-by: Alan Donovan <adonovan@google.com>"
0intro,2015-10-26 20:54:52,https://api.github.com/repos/golang/tools/git/commits/81e6679d083a03ea6b14d8132080e7a15c7672f4,81e6679d083a03ea6b14d8132080e7a15c7672f4,"x/tools/cmd/stress: build on Plan 9

Fixes golang/go#11975.

Change-Id: Icfbf3015031824481b351ac78be5917ee5d20e8e
Reviewed-on: https://go-review.googlesource.com/16306
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Run-TryBot: David du Colombier <0intro@gmail.com>"
alandonovan,2015-10-26 13:55:02,https://api.github.com/repos/golang/tools/git/commits/0f9d71c42812ad989f3b01df8db9b9356bba6c2c,0f9d71c42812ad989f3b01df8db9b9356bba6c2c,"go/pointer: fix bug in constraint generation of ""for _, v := range map""

+ regression test

Change-Id: I9ec28f222e14af0cb737494e3c48e5423cdcf236
Reviewed-on: https://go-review.googlesource.com/16294
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
DanielMorsing,2015-10-22 12:22:06,https://api.github.com/repos/golang/tools/git/commits/b6b32a4fbfbe1d75f52bc8e702425259b5406b2a,b6b32a4fbfbe1d75f52bc8e702425259b5406b2a,"go/ssa: emit DebugRefs for x, y = z() assignments

This would cause oracle callee lookup failures when the RHS is an
invoke-style call.

Fixes golang/go#12999

Change-Id: Ifd561c4e7bf26f57ace5f62afac746b926c70993
Reviewed-on: https://go-review.googlesource.com/16210
Reviewed-by: Alan Donovan <adonovan@google.com>"
kostya-sh,2015-10-08 11:37:13,https://api.github.com/repos/golang/tools/git/commits/f941d540e399747b10540b096ff9300cb3a35ad9,f941d540e399747b10540b096ff9300cb3a35ad9,"refactor/rename: emacs: package.el compatibility changes

Change-Id: Ia37db2bfbe02015eb38f13fc7fc58a9aec9c551c
Reviewed-on: https://go-review.googlesource.com/15527
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-10-19 14:00:53,https://api.github.com/repos/golang/tools/git/commits/5b9ecb9f68e2e1be33b663895c700aac9726378e,5b9ecb9f68e2e1be33b663895c700aac9726378e,"rename/refactor: fix typo in gorename usage message

Fixes issue #12981

Change-Id: I5faf8534153b13b967ce5d8da4d56bdd2bb4c501
Reviewed-on: https://go-review.googlesource.com/16053
Reviewed-by: Alan Donovan <adonovan@google.com>"
matttproud,2015-10-11 08:26:20,https://api.github.com/repos/golang/tools/git/commits/f53a5581bc2fdd52820df86cbfd8483816fe8bcc,f53a5581bc2fdd52820df86cbfd8483816fe8bcc,"cmd/present: update the instructions for App Engine

The command's documentation mistakingly said that the instructions for
testing and deployment to App Engine were contained in the top-level
README for the tools repository.  As best as I can tell, the top-level
README never contained this information.

This commit adds a configuration fragment and provides sample
instructions for the App Engine workflow.

Change-Id: If89c099e254ef91ca224742aebd81f7d1206d9b8
Reviewed-on: https://go-review.googlesource.com/15685
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-10-10 23:22:29,https://api.github.com/repos/golang/tools/git/commits/4caddfa68c06386a7e2a3370658f5f193ed9bc17,4caddfa68c06386a7e2a3370658f5f193ed9bc17,"go/vcs: fix doc typos

Change-Id: Ife1f9534d08d3bd9beeb4e6e798733d71e6f72b5
Reviewed-on: https://go-review.googlesource.com/15750
Reviewed-by: Dmitri Shuralyov <shurcool@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2015-10-09 20:35:07,https://api.github.com/repos/golang/tools/git/commits/fe3445e822d021942dd58cd4e2ed5cc833103d8a,fe3445e822d021942dd58cd4e2ed5cc833103d8a,"x/tools/cmd/godex: prepare sources for switch to 1.5 go/types

- copied all affected xxx.go files to a respective xxx14.go file
- added build tags
- no other source changes

Change-Id: Ic150a097e537ee29a0e0616ab8e1e74b21e3066d
Reviewed-on: https://go-review.googlesource.com/15702
Reviewed-by: Alan Donovan <adonovan@google.com>"
davidrjenni,2015-10-06 17:51:57,https://api.github.com/repos/golang/tools/git/commits/13be4dfe75fd7b383cf1c753873f118a97c4aeb4,13be4dfe75fd7b383cf1c753873f118a97c4aeb4,"refactor/mvpkg: rewrite import comments.

Fixes golang/go#10508.

Change-Id: Id9b0f12e1a81b3b16e167462fd3639a6c6c1e0bb
Reviewed-on: https://go-review.googlesource.com/15267
Reviewed-by: Alan Donovan <adonovan@google.com>"
nvanbenschoten,2015-10-04 09:01:51,https://api.github.com/repos/golang/tools/git/commits/78a4eef08756bc7b2099267d8bd96606ae7d3400,78a4eef08756bc7b2099267d8bd96606ae7d3400,"cmd/oracle: Fix help message for Go Oracle usage.

Change-Id: Iba2c49c380ca81cd76b84c384ff468b8779f80e4
Reviewed-on: https://go-review.googlesource.com/15382
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-10-06 04:31:24,https://api.github.com/repos/golang/tools/git/commits/3d33c30540ee974fd1401bbd98937887a337ae9d,3d33c30540ee974fd1401bbd98937887a337ae9d,"container/intsets: build correctly on App Engine

App Engine is amd64 but it doesn't support uploading assembly files.
Use the explicit build tag so that it selects the generic implementation
on App Engine.
This is required to deploy golang.org.

Change-Id: I7374c91961c53d59f6fdcc9ac98b8a9cec755b2c
Reviewed-on: https://go-review.googlesource.com/15246
Reviewed-by: Andrew Gerrand <adg@golang.org>"
rakyll,2015-10-06 03:00:21,https://api.github.com/repos/golang/tools/git/commits/f247eeaee6978cdf4dc9e13150953c8550c0a428,f247eeaee6978cdf4dc9e13150953c8550c0a428,"godoc: don't drop the query params when redirecting

http://golang.org/issue/new?title=Title was being redirected to
https://github.com/golang/go/issues/new. The CL preserves the
query parameters during direct.

Change-Id: I3057ccd5304b00df53b664b71ea35ea05d313aa4
Reviewed-on: https://go-review.googlesource.com/15431
Reviewed-by: Andrew Gerrand <adg@golang.org>"
broady,2015-10-01 20:43:46,https://api.github.com/repos/golang/tools/git/commits/365aedefa0b4f4168a8ac3c016bf04b36e7dc4f9,365aedefa0b4f4168a8ac3c016bf04b36e7dc4f9,"godoc/redirect: add listing path for /design and add tests.

Change-Id: I05d2f48d60e433ebf1d54fb3597db580644761e1
Reviewed-on: https://go-review.googlesource.com/15282
Reviewed-by: Hyang-Ah Hana Kim <hyangah@gmail.com>
Reviewed-by: Austin Clements <austin@google.com>"
alandonovan,2015-10-05 14:55:06,https://api.github.com/repos/golang/tools/git/commits/9d2ff756b797a862da0686e2e41e09cd87da017b,9d2ff756b797a862da0686e2e41e09cd87da017b,"go/loader: document cgo limitation

Change-Id: I8ce744d204fe2850d322b3095d04e8a399984983
Reviewed-on: https://go-review.googlesource.com/15391
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alandonovan,2015-09-30 21:47:19,https://api.github.com/repos/golang/tools/git/commits/b7f0150d16f143e2d871156fa142dd6fa372ffdf,b7f0150d16f143e2d871156fa142dd6fa372ffdf,"container/intsets: popcount: use POPCNT on amd64, Hacker's Delight algorithm on 386

This function accounts for 2% of ""godoc -analysis=pointer""
and this change makes it twice as fast---and simpler.

Added test and benchmark.

Change-Id: I8578fa42dce34df057d81f6c522a7b4e0506d09d
Reviewed-on: https://go-review.googlesource.com/15211
Run-TryBot: Robert Griesemer <gri@golang.org>
Reviewed-by: Ilya Tocar <ilya.tocar@intel.com>
Reviewed-by: Robert Griesemer <gri@golang.org>"
broady,2015-10-01 18:15:49,https://api.github.com/repos/golang/tools/git/commits/3f8a7a0787f1bab61eeed06d47da5e6bd7b4aa40,3f8a7a0787f1bab61eeed06d47da5e6bd7b4aa40,"godoc/redirect: add redirect for design proposals at /design/.

Change-Id: Ifa10c0477a7d79673f7f841b5aebb448742cc378
Reviewed-on: https://go-review.googlesource.com/15280
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-09-28 07:00:17,https://api.github.com/repos/golang/tools/git/commits/e1d85eb8a3a8d29c824a9f1d33a8a78a8ab90b78,e1d85eb8a3a8d29c824a9f1d33a8a78a8ab90b78,"playground, godoc: remove HK and RC from share-blocked country code list

These codes were initially included because of a miscommunication.
They should not be in the list at all.

Fixes golang/go#12747

Change-Id: I1a53e9c7be8edf5e1dbb95cd03101b93023a12c1
Reviewed-on: https://go-review.googlesource.com/15082
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-09-25 02:10:38,https://api.github.com/repos/golang/tools/git/commits/10179a7e86144730c51d0dd1edd7c25ae4226e81,10179a7e86144730c51d0dd1edd7c25ae4226e81,"cmd/godoc: set Content-Type in fmt handler

Change-Id: I51b12838c65d67d4323e07d70f7c1e66fce23251
Reviewed-on: https://go-review.googlesource.com/14938
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
tamird,2015-09-27 13:47:54,https://api.github.com/repos/golang/tools/git/commits/0f7bc422859da131a6b58db7a5e96d030b40fd5b,0f7bc422859da131a6b58db7a5e96d030b40fd5b,"godoc/static: have makestatic use the same code header comment as stringer

This allows Github to hide diffs in generated files. See:
https://github.com/github/linguist/blob/473282d/lib/linguist/generated.rb#L241

Change-Id: I0565c729dacfa7861e7da7eb66bc8021d191fc3e
Reviewed-on: https://go-review.googlesource.com/15074
Reviewed-by: Andrew Gerrand <adg@golang.org>"
shuLhan,2015-09-26 13:44:38,https://api.github.com/repos/golang/tools/git/commits/2b5f3dc0de528767ab621dce83fffeed88f4452e,2b5f3dc0de528767ab621dce83fffeed88f4452e,"cmd/godoc: make setup-godoc-app.bash more portable

Unlike in BSD, in GNU/Linux find option for -depth is without an
argument. To make the command compatible in both system, use
-mindepth and -maxdepth arguments.

Change-Id: Ie82736fd2c28b6fe0f64dbfc7272f0e0f0d8e8df
Reviewed-on: https://go-review.googlesource.com/15014
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-09-24 04:33:14,https://api.github.com/repos/golang/tools/git/commits/6b41c776c8733a36ba4586aa0bfaf5b6878c41d8,6b41c776c8733a36ba4586aa0bfaf5b6878c41d8,"cmd/godoc: always serve fmt handler, HTTPS fix redirection

Change-Id: Ib00a54f40b3c52c9bc6a07623259c5c82f9d28d9
Reviewed-on: https://go-review.googlesource.com/14933
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-09-23 05:00:56,https://api.github.com/repos/golang/tools/git/commits/c206e42859260562beca3dc8cbda311657f7ff3f,c206e42859260562beca3dc8cbda311657f7ff3f,"cmd/godoc: serve proxy paths without host enforcer

Change-Id: I4647c1e18df3ea441c5220cd03fe6163794b7e84
Reviewed-on: https://go-review.googlesource.com/14862
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
adg,2015-09-23 02:17:19,https://api.github.com/repos/golang/tools/git/commits/e83bc563341b00d5a331c0c3419b084ca6b36ab3,e83bc563341b00d5a331c0c3419b084ca6b36ab3,"godoc/{dl,proxy,short}: move packages out of Google's internal repo

These were built inside Google but have been in production for years.
Move them into the public tools repository so that they can be more
easily maintained.

This is step one to moving the entire golang.org deployment process out
of Google's internal source repository.

Change-Id: I72f875c5020b3f58f1c0cea1d19268e0f991833f
Reviewed-on: https://go-review.googlesource.com/14842
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
adg,2015-09-22 03:53:20,https://api.github.com/repos/golang/tools/git/commits/40b1b219defb04ecd3f7b32bac7e6d0c5ebbe89c,40b1b219defb04ecd3f7b32bac7e6d0c5ebbe89c,"cmd/godoc: restrict requests to HTTPS and canonical host names

Fixes golang/go#12684

Change-Id: Ibb49e604bfd92c902c9fd2bf9506ded60b2a9d8d
Reviewed-on: https://go-review.googlesource.com/14814
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
robpike,2015-09-21 17:16:11,https://api.github.com/repos/golang/tools/git/commits/5a90b2958f12ca0f046ffe2eb1523c5896af5dae,5a90b2958f12ca0f046ffe2eb1523c5896af5dae,"vet: put a notice in main that this version of vet is not the place to update

Change-Id: I295d1e902626a3f5edd09a3b594a2059530ca821
Reviewed-on: https://go-review.googlesource.com/14820
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
fordhurley,2015-09-18 14:43:42,https://api.github.com/repos/golang/tools/git/commits/0ced849c613cfbccb9bfdf4bd88d2551b7bf8f81,0ced849c613cfbccb9bfdf4bd88d2551b7bf8f81,"tools/cmd/vet: check only first rune of example suffix

The documentation for the testing package states only that ""The suffix
must start with a lower-case letter.""

Fixes golang/go#12663

Change-Id: I9b079b105a7c9680325fed442c42adcf3b75055e
Reviewed-on: https://go-review.googlesource.com/14760
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-09-18 15:01:08,https://api.github.com/repos/golang/tools/git/commits/8049553ca8132354f07c71224d1bb579514725e6,8049553ca8132354f07c71224d1bb579514725e6,"go/ssa: use sync.Once instead of sync.atomic

This adds a missing memory barrier at the end of Package.Build.

Change-Id: Ife35d5ad5a48ba121f35656fef682863d4f2aef6
Reviewed-on: https://go-review.googlesource.com/14761
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2015-09-17 03:15:13,https://api.github.com/repos/golang/tools/git/commits/1d593709ec9f23224e06ee4e42406ed38530a2ed,1d593709ec9f23224e06ee4e42406ed38530a2ed,"cmd/tip: serve talks.golang.org

Also make health check test the backup process.

Change-Id: I9d2ed2780c07bb08683d231fccad4674c2ac22a1
Reviewed-on: https://go-review.googlesource.com/14668
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-09-18 04:26:40,https://api.github.com/repos/golang/tools/git/commits/ac6d9c1d842f9b6482f39f7a172e0251a0f7cbc0,ac6d9c1d842f9b6482f39f7a172e0251a0f7cbc0,"cmd/present: include Google Analytics tracking code for talks.golang.org

This was formerly inserted by some deployment scripts. Putting it in
the code here simplifies deployment at little cost to other users.

Change-Id: Ic092bb560c4c90e0e5bc6f9f33426b35214d613d
Reviewed-on: https://go-review.googlesource.com/14741
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-09-17 03:07:34,https://api.github.com/repos/golang/tools/git/commits/51ebb3f1be4617b0021596e94945694f1e1246bc,51ebb3f1be4617b0021596e94945694f1e1246bc,"cmd/present: move critical _ import to another file

This was preventing the playground /compile and /share handlers
from being registered under Managed VMs.

Change-Id: I690bd50abc2f42b30956e734903d09487f712d4a
Reviewed-on: https://go-review.googlesource.com/14665
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-09-17 02:11:32,https://api.github.com/repos/golang/tools/git/commits/ffb6076c75ada9e4d551aa9cb28d72e2f3d8074a,ffb6076c75ada9e4d551aa9cb28d72e2f3d8074a,"playground: recognize managed vm's as being ""on app engine""

Change-Id: I117b113e2782cab1180e6f56e1869525564ab18f
Reviewed-on: https://go-review.googlesource.com/14663
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-09-17 01:19:51,https://api.github.com/repos/golang/tools/git/commits/25693e10e179bb66d32bb9083fa11f3603027780,25693e10e179bb66d32bb9083fa11f3603027780,"cmd/tip: refactor tipgodoc into general-purpose tip server

This will allow us to serve blog.golang.org and talks.golang.org from
the latest sources without re-deploying.

Change-Id: I2399a8a7eb60a0c6648916052f5f129cb826d546
Reviewed-on: https://go-review.googlesource.com/14662
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-09-17 00:10:04,https://api.github.com/repos/golang/tools/git/commits/6c387a1d0785765a4846888d252f24b586aef2fe,6c387a1d0785765a4846888d252f24b586aef2fe,"cmd/tipgodoc: implement health checking and enable auto-scaling

Change-Id: I860d0913d051616d7958a88a3c7b11a26ec1d4d6
Reviewed-on: https://go-review.googlesource.com/14661
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
adg,2015-09-16 23:56:21,https://api.github.com/repos/golang/tools/git/commits/374b14e99b1078de1b3788f3224ca659186902cc,374b14e99b1078de1b3788f3224ca659186902cc,"cmd/tipgodoc: fix deployment instructions

Change-Id: Iaa8e1e61f5c6966a66fc613173853846408584b5
Reviewed-on: https://go-review.googlesource.com/14636
Reviewed-by: Chris Broadfoot <cbro@google.com>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
matttproud,2015-09-15 17:11:23,https://api.github.com/repos/golang/tools/git/commits/c262de870b618eed648983aa994b03bc04641c72,c262de870b618eed648983aa994b03bc04641c72,"tools/cmd/vet: Sort checks list alphabetically.

The existing list of checks in doc.go has become somewhat unwieldy.
This commit is purely cosmetic and sorts the list alphabetically keyed
by the flag name.

Change-Id: Ibb56357f9d4667d199acc6637dc28f6e17903046
Reviewed-on: https://go-review.googlesource.com/14558
Reviewed-by: Rob Pike <r@golang.org>"
matttproud,2015-09-15 14:56:48,https://api.github.com/repos/golang/tools/git/commits/871b75fbfcda725b6d7bba585a32f0faf1955e4c,871b75fbfcda725b6d7bba585a32f0faf1955e4c,"tools/cmd/vet: Incorporate comments from r@.

This commit fixes a few defects from a25a8d567b:

(1.) Making the top-level vars in main consistent w.r.t. documentation
     formatting, and the-like.

(2.) Removing of one-use top-level is-test predicate.

(3.) Including documentation of what the validation does and when.

Change-Id: I19b34d25836bb2af865219d18600e1add78c3fd7
Reviewed-on: https://go-review.googlesource.com/14557
Reviewed-by: Rob Pike <r@golang.org>"
matttproud,2015-07-08 19:35:20,https://api.github.com/repos/golang/tools/git/commits/a25a8d567b492f9a659e1e1838cc093d5bf278a0,a25a8d567b492f9a659e1e1838cc093d5bf278a0,"tools/cmd/vet: Create vet checks for examples.

In spite of https://blog.golang.org/examples and
http://golang.org/pkg/testing/#pkg-examples, a number of internal Go
authors have found writing documentation examples to be problematic in
the sense that the syntax is error-prone due to loose coupling with
identifiers found in the source corpus.

This commit introduces a suite of validations for documentation
examples:

    Overall:
    - Correct suffices, if present
    - Niladic function argument and return signatures

    func Example() {}
    func ExampleF() {}
    - F exists
    func ExampleT() {}
    - T exists
    func ExampleT_M() {}
    - T exists
    - M exists within T

Further, if the example is in `package foo_test`, vet attempts to
resolve the respective lookups in `package foo`, if `package foo`
exists (cf., `package stringutil_test`).

Change-Id: Ifa13906363541ebf28325681b749b14b7f8b103d
Reviewed-on: https://go-review.googlesource.com/11982
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-09-15 05:06:46,https://api.github.com/repos/golang/tools/git/commits/d868c356db681aeb5cb46208317fa1a8f2ff4ce3,d868c356db681aeb5cb46208317fa1a8f2ff4ce3,"imports: update static stdlib index to go1.5

Fixes golang/go#12609

Change-Id: Ic7efa796d50037a3b0fbf87a748c07bd41f07e02
Reviewed-on: https://go-review.googlesource.com/14576
Reviewed-by: Dave Cheney <dave@cheney.net>"
adg,2015-08-28 01:00:04,https://api.github.com/repos/golang/tools/git/commits/31971b752158ba9a2e6f5f4f01677ba1c075ef16,31971b752158ba9a2e6f5f4f01677ba1c075ef16,"godoc: fix source links for cmd/*

Fixes golang/go#12159

Change-Id: Id498443171cbdf0fe9808745a79edc863d836db1
Reviewed-on: https://go-review.googlesource.com/14001
Reviewed-by: Rob Pike <r@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-09-01 23:49:30,https://api.github.com/repos/golang/tools/git/commits/1330b289ad6d59313d86910fa35d5022cd871e7f,1330b289ad6d59313d86910fa35d5022cd871e7f,"godoc: hide and block share functionality from specific countries

This will permit us to serve *.golang.org to Chinese users.

Change-Id: I5217753aa67931522c7e6be106477534c99a20b2
Reviewed-on: https://go-review.googlesource.com/14194
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-09-01 22:40:41,https://api.github.com/repos/golang/tools/git/commits/4df6ae9fadf1b67873018036b2707fceb651da04,4df6ae9fadf1b67873018036b2707fceb651da04,"playground: block share functionality from specific countries

This will permit us to serve *.golang.org to Chinese users.

Change-Id: If184760d7f4c9e49a3df3785c15af770958413de
Reviewed-on: https://go-review.googlesource.com/14190
Reviewed-by: Jason Buberel <jbuberel@google.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2015-06-01 19:21:03,https://api.github.com/repos/golang/tools/git/commits/b9fbbb8e31c4009aa2d3a848240c61625a0a0bdc,b9fbbb8e31c4009aa2d3a848240c61625a0a0bdc,"refactor/eg: refactor to break dependency on go/loader

Change-Id: I0a865a694b911437944743f60bfaa2a937d85c9a
Reviewed-on: https://go-review.googlesource.com/14133
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-07-30 19:43:19,https://api.github.com/repos/golang/tools/git/commits/af0fde4393dc6cabd384841bbcd9c21cbbb4854d,af0fde4393dc6cabd384841bbcd9c21cbbb4854d,"cmd/fiximports: -replace flag specifies canonical packages in absence of import comments

+ Tests.

Change-Id: I0544546dda93d24aedbbfe1ffdc6882e76bfb3f8
Reviewed-on: https://go-review.googlesource.com/12940
Reviewed-by: Jason Buberel <jbuberel@google.com>"
adg,2015-09-01 02:56:40,https://api.github.com/repos/golang/tools/git/commits/513c731aab546b4628168d772550499740fe9dd2,513c731aab546b4628168d772550499740fe9dd2,"cmd/godoc: add x/arch repo to list

Fixes golang/go#12393

Change-Id: I0b56c36dec11a6c2fddcc092867f24701815dce3
Reviewed-on: https://go-review.googlesource.com/14145
Reviewed-by: Dave Cheney <dave@cheney.net>"
alandonovan,2015-08-31 21:50:03,https://api.github.com/repos/golang/tools/git/commits/afcda55b39c7af49a70f0b6bdb9c381a95205816,afcda55b39c7af49a70f0b6bdb9c381a95205816,"go/ssa: rename some API features (incompatible change)

Rename the following exported names:
	(*Program).BuildAll → Build
	(*Program).Method   → MethodValue
	Package.Object      → Pkg
Also:
	(*Function).pkgobj  → pkg

Change-Id: Iff7e6c240ebe6786ba759278ac0daa3d66698013
Reviewed-on: https://go-review.googlesource.com/14134
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-08-31 20:59:02,https://api.github.com/repos/golang/tools/git/commits/e21b7325f78e5114b2601c053c3421d1aafae058,e21b7325f78e5114b2601c053c3421d1aafae058,"refactor/lexical: delete package

It is possible to reconstruct the lexical environment at any point
using only Object and Scope positions; see CL 9544 for an example.

Change-Id: I1268f9490c072ceb1c4d044df2e9c49678d73dfd
Reviewed-on: https://go-review.googlesource.com/14131
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-08-31 21:12:12,https://api.github.com/repos/golang/tools/git/commits/25bacdead0e43d2f2594d05c9827ab179c0e94c6,25bacdead0e43d2f2594d05c9827ab179c0e94c6,"refactor/rename: fix build breakage (due to go/types version skew)

Change-Id: Id798ff0acdc9d4a83efe1b760ca32ede6a1aa5bb
Reviewed-on: https://go-review.googlesource.com/14132
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-04-30 15:39:50,https://api.github.com/repos/golang/tools/git/commits/03e05ec5a59d9f211a842c8ab4cc709058ac69d1,03e05ec5a59d9f211a842c8ab4cc709058ac69d1,"refactor/rename: eliminate dependency on refactor/lexical package

so that we can delete that package.

lexicalLookup reconstructs the lexical scope from the existing tree of
types.Scope blocks, using source position information to determine
which prefix of declarations are visible.  (Inspired by Russ's
lookupAtPos in github.com/rsc/grind/grinder.)

forEachLexicalRef implements the part of the recursion from
refactor/lexical that enumerates the ast.Idents that use lexical
lookup.  (I would still like to eliminate this redundant logic by
having go/types record environments, as in CL 9493.)

Change-Id: I040ab33b508aad2dc68fd48850fe92ec072045d1
Reviewed-on: https://go-review.googlesource.com/9544
Reviewed-by: Sameer Ajmani <sameer@golang.org>"
alandonovan,2015-08-31 20:54:01,https://api.github.com/repos/golang/tools/git/commits/b9f1f6a3c1a16adb5f7a437ffcd5a34dc2393a03,b9f1f6a3c1a16adb5f7a437ffcd5a34dc2393a03,"go/loader: in stdlib_test, skip packages that depend on vendoring

until vendoring support is added (soon).

Change-Id: I954514b5c6b82622c0c831a289ccdcc16dbd37f8
Reviewed-on: https://go-review.googlesource.com/14130
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-08-24 21:45:44,https://api.github.com/repos/golang/tools/git/commits/b48dc8da98ae78c3d11f220e7d327304c84e623a,b48dc8da98ae78c3d11f220e7d327304c84e623a,"cmd/gotype: keep gotype working with Go1.4

Fixes #12305.

Change-Id: Ib9e36621708ab35fd0e685aaca37d8640f265366
Reviewed-on: https://go-review.googlesource.com/13899
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2015-08-24 21:26:10,https://api.github.com/repos/golang/tools/git/commits/12c48ced94a7752f71687ef145a83a59e9a6f846,12c48ced94a7752f71687ef145a83a59e9a6f846,"cmd/gotype: use std lib go/types instead of x/tools version

Change-Id: I89ba20512129d0557f3f606d8242472d78ea37a9
Reviewed-on: https://go-review.googlesource.com/13898
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
nathany,2015-08-23 19:25:07,https://api.github.com/repos/golang/tools/git/commits/6c9aff342968e5fb8cb698d2798e6c0dca773692,6c9aff342968e5fb8cb698d2798e6c0dca773692,"website: fix JavaScript error on website and blog in non-ES6 browsers

In Safari a JavaScript error in personalizeInstallInstructions prevents
the featured articles from displaying. startsWith is an ES6-only feature.

Fixes golang/go#12283

Change-Id: I9f471362cdac0243758e482ed3a21b0d6aa48c8b
Reviewed-on: https://go-review.googlesource.com/13841
Reviewed-by: Andrew Gerrand <adg@golang.org>"
rsc,2015-08-18 17:24:30,https://api.github.com/repos/golang/tools/git/commits/93604a3dc2a5ae0168456c672ec35cc90ea881e6,93604a3dc2a5ae0168456c672ec35cc90ea881e6,"go/loader: fix fd leak and limit calls to ioutil.ReadDir

This makes 'ulimit -n 128; go test -short -v' pass.
It did not before, and that was breaking the openbsd/386 builder.

For golang/go#11811.

Change-Id: Idfdb2f4007ed06c6084486c0e58a561add552d2c
Reviewed-on: https://go-review.googlesource.com/13695
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2015-08-13 17:32:40,https://api.github.com/repos/golang/tools/git/commits/9f2124fb70150373b1fa070cb5547a7d8d6f2930,9f2124fb70150373b1fa070cb5547a7d8d6f2930,"cmd/tipgodoc: change capitalization of 'Authors' to be consistent

Change-Id: I040007a2b9bfa3388f3fbed839b2e5c6853925b3
Reviewed-on: https://go-review.googlesource.com/13596
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
davidrjenni,2015-08-07 15:16:12,https://api.github.com/repos/golang/tools/git/commits/4f50f44d7a3206e9e28b984e023efce2a4a75369,4f50f44d7a3206e9e28b984e023efce2a4a75369,"imports: fix bug, where unused named import is mistaken for unnamed import.

Fixes #8149.

Change-Id: Ia3d318f70981b2032a71d3fd32eaffba20cfbcbd
Reviewed-on: https://go-review.googlesource.com/13371
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
adg,2015-08-10 00:17:57,https://api.github.com/repos/golang/tools/git/commits/b8e61d42cac5c078c304659f916845a6ee81ac72,b8e61d42cac5c078c304659f916845a6ee81ac72,"cmd/godoc: remove obsolete vet redirect

The vet command has been moved back to the core repo.

Fixes golang/go#12088

Change-Id: I26e5ed6a8c7915af1cf96db4c3a16a2e812ab394
Reviewed-on: https://go-review.googlesource.com/13460
Reviewed-by: Rob Pike <r@golang.org>"
griesemer,2015-08-06 00:53:24,https://api.github.com/repos/golang/tools/git/commits/d02228d1857b9f49cd0252788516ff5584266eb6,d02228d1857b9f49cd0252788516ff5584266eb6,"cmd/callgraph: exclude test for Android

For golang/go#11811.

Change-Id: I4cec398a0a6d43f3297c205f73193522928a5b31
Reviewed-on: https://go-review.googlesource.com/13280
Reviewed-by: Rob Pike <r@golang.org>
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
griesemer,2015-08-05 23:42:54,https://api.github.com/repos/golang/tools/git/commits/958ab4f550841ef2a394d6c39ae969e29a53b132,958ab4f550841ef2a394d6c39ae969e29a53b132,"x/tools: disable tests not supported on Android

For golang/go#11811.

Change-Id: Icf16a2d47fcf2fe0d79dd825ccb851a3d63a660f
Reviewed-on: https://go-review.googlesource.com/13268
Reviewed-by: Rob Pike <r@golang.org>
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
griesemer,2015-08-05 22:33:02,https://api.github.com/repos/golang/tools/git/commits/63f996ec7589bd261586dcea2cd0f0301439022b,63f996ec7589bd261586dcea2cd0f0301439022b,"cmd/stringer: exclude end-to-end test for Android

Change-Id: I37224abb3d9ca902ed23d520493f3b2794ef0471
Reviewed-on: https://go-review.googlesource.com/13261
Reviewed-by: Rob Pike <r@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
griesemer,2015-08-05 21:05:52,https://api.github.com/repos/golang/tools/git/commits/874e71548b2fdfcdd34fe7ddc9a7839f3bf013bb,874e71548b2fdfcdd34fe7ddc9a7839f3bf013bb,"go/ssa/interp: exclude another long-running test if -short is set

For #11811.

Change-Id: Ic3bf3c035ce402f144b5b6670d5ef062874b167e
Reviewed-on: https://go-review.googlesource.com/13260
Reviewed-by: Chris Manghane <cmang@golang.org>"
adg,2015-08-05 06:22:07,https://api.github.com/repos/golang/tools/git/commits/7e0ad01d16aa99fd5a2eb43531862cf7ec5acee3,7e0ad01d16aa99fd5a2eb43531862cf7ec5acee3,"godoc/static: tweak regular expression to match source builds

(This time for sure!)

Change-Id: Ic9b7dbfb527af9aa029365f7a91bd3b949985431
Reviewed-on: https://go-review.googlesource.com/13220
Reviewed-by: Chris Broadfoot <cbro@google.com>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-08-05 06:22:07,https://api.github.com/repos/golang/tools/git/commits/18635ec5c3ecb0fba684b083bff1fa8c2f5e0d1f,18635ec5c3ecb0fba684b083bff1fa8c2f5e0d1f,"godoc/static: tweak regular expression to match old darwin builds

Change-Id: I74020ece0cf8b4aceb60d75475500569d08416ee
Reviewed-on: https://go-review.googlesource.com/13211
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-08-05 05:31:48,https://api.github.com/repos/golang/tools/git/commits/a29e96e3bfc4dafdcda1d4910f88807048169feb,a29e96e3bfc4dafdcda1d4910f88807048169feb,"godoc/static: redirect to download from installation instructions page

Change-Id: If29d04ced7404d6ba8761f734b4a16fe96959635
Reviewed-on: https://go-review.googlesource.com/13200
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
adg,2015-08-05 03:36:28,https://api.github.com/repos/golang/tools/git/commits/46829bf9ceb11ec1aae81c0acc62f59c5a27b1e5,46829bf9ceb11ec1aae81c0acc62f59c5a27b1e5,"godoc/static: dynamically adjust install instructions for a given download

This change allows the download page to redirect the user to
/doc/install?download=filename so the user can see installation
instructions specific to the file they are downloading.

This is related to this change to the core repo:
https://golang.org/cl/13151

Change-Id: Ia81344ed913aea1d1a4deed021c0e07f7360ff68
Reviewed-on: https://go-review.googlesource.com/13180
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
adg,2015-08-03 05:09:23,https://api.github.com/repos/golang/tools/git/commits/bbc42023183460376b7d44a35a5c5a5710856477,bbc42023183460376b7d44a35a5c5a5710856477,"godoc/static: shorten vertical space above headings

Without this change, a h3 below a h2 looks weird.

Change-Id: I96cd1545615547b03460cf6896acd0df1abfc1a1
Reviewed-on: https://go-review.googlesource.com/13052
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
griesemer,2015-07-31 22:49:16,https://api.github.com/repos/golang/tools/git/commits/5a6a7b4d4072b8742ae111275d27779f79c533e0,5a6a7b4d4072b8742ae111275d27779f79c533e0,"x/tools/cmd/stress: don't build for Plan 9 (syscall.SIGABRT not defined)

See golang/go#11975.
For golang/go#11811.

Change-Id: I56ee20cd798bf963afdf3c81c4745f07850f6dcc
Reviewed-on: https://go-review.googlesource.com/13034
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
griesemer,2015-07-31 22:26:00,https://api.github.com/repos/golang/tools/git/commits/32dcbb4ccca1d39fc73d6d9707d72e31d53fa0e1,32dcbb4ccca1d39fc73d6d9707d72e31d53fa0e1,"cmd/godoc: exclude TestTypeAnalysis on Plan 9 for now

Attempt to make build work on Plan 9.

For golang/go#11811.

Change-Id: I37a5eaef441262342994a8f77c86aa5e120deea7
Reviewed-on: https://go-review.googlesource.com/13033
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
griesemer,2015-07-31 21:40:56,https://api.github.com/repos/golang/tools/git/commits/50fdc6b94688900e17f8cd121e0ebc136995fbf8,50fdc6b94688900e17f8cd121e0ebc136995fbf8,"go/loader: exclude example tests from Windows tests

The output of ExampleConfig_CreateFromFiles and ExampleConfig_Import
are different for Windows that for other platforms: They contain
internal/syscall/windows packages and unicode/utf16 not present in
the output for other platforms.

For golang/go#11811.

Change-Id: Id391fbeec8123616da86cb68fc3cefcd513b2493
Reviewed-on: https://go-review.googlesource.com/13032
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
griesemer,2015-07-31 21:13:37,https://api.github.com/repos/golang/tools/git/commits/784fe34e06a7ec996e4213c496cdcd76a6ad3df5,784fe34e06a7ec996e4213c496cdcd76a6ad3df5,"go/ssa/interp: abort long-running test when testing.Short() is set

This should help on slower machines.

For golang/go#11811.

Change-Id: Ibb5d5bf0f6cedcda6437ef0ee3fc1f4ba89dab90
Reviewed-on: https://go-review.googlesource.com/13009
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
alexbrainman,2015-07-30 05:06:07,https://api.github.com/repos/golang/tools/git/commits/d89a97263459b6692c111501d9ec3edadcf61473,d89a97263459b6692c111501d9ec3edadcf61473,"go/loader: remove blank line

Blank line was inserted by mistake in CL 12830.

Change-Id: I9e4b3562a4efcab43c5a85c2960a0d22c0aab752
Reviewed-on: https://go-review.googlesource.com/12883
Reviewed-by: Dmitri Shuralyov <shurcool@gmail.com>
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-07-31 19:41:33,https://api.github.com/repos/golang/tools/git/commits/fe546a323315ed4013754d0bd942c3e502ca9137,fe546a323315ed4013754d0bd942c3e502ca9137,"go/types: exclude some tests when running against Go 1.4

For golang/go#11811.

Change-Id: I130f9608840177cfb7fb9fae30765fcb5aa77411
Reviewed-on: https://go-review.googlesource.com/13008
Reviewed-by: Russ Cox <rsc@golang.org>"
alandonovan,2015-07-30 17:51:09,https://api.github.com/repos/golang/tools/git/commits/680b4cd5a825aeeab55760b43131fce777d5b602,680b4cd5a825aeeab55760b43131fce777d5b602,"cmd/fiximports: added package-level documentation

Change-Id: I612229e5d9e80a25cd77296c0abb6bdcf62bcf8a
Reviewed-on: https://go-review.googlesource.com/12924
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-07-31 05:02:02,https://api.github.com/repos/golang/tools/git/commits/d1eaf389564d40239d6b0a897cc08f4f476a8156,d1eaf389564d40239d6b0a897cc08f4f476a8156,"cmd/godoc: don't run indexer test in -short mode

It takes too long for the builders.
Also remove GOPATH from the environment when indexing.

Change-Id: I9a3f2628f248bdbf9dce97119c2fbb7cbd63f3fe
Reviewed-on: https://go-review.googlesource.com/12917
Reviewed-by: Andrew Gerrand <adg@golang.org>"
davidrjenni,2015-07-26 15:55:23,https://api.github.com/repos/golang/tools/git/commits/20d85c34f38c8b82369f050814228f2af29b5dc0,20d85c34f38c8b82369f050814228f2af29b5dc0,"refactor/mvpkg: rewrite external test packages.

Rename the package name of the external test package, e.g. <from>_test to <to>_test.
Rewrite the import statements of external test packages which import the renamed package.

Fixes #10507

Change-Id: Iad702189469c54776e55ed4a821610bd9977618c
Reviewed-on: https://go-review.googlesource.com/12637
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-07-30 00:05:09,https://api.github.com/repos/golang/tools/git/commits/14b825345585d3006ae56ef5101468d77d74511d,14b825345585d3006ae56ef5101468d77d74511d,"go/loader: fork example_test.go for go1.4 since the expectations differ

Change-Id: I91138351525ce49b9afccdc66c59e7a4c1c0e096
Reviewed-on: https://go-review.googlesource.com/12870
Reviewed-by: Alex Brainman <alex.brainman@gmail.com>"
alexbrainman,2015-07-29 06:20:08,https://api.github.com/repos/golang/tools/git/commits/f25d0131d475904250c3a8d0005799a96a8e5538,f25d0131d475904250c3a8d0005799a96a8e5538,"go/loader: make TestLoad_ParseError_AllowErrors pass on windows

Update golang/go#11811

Change-Id: Ic5f1ea87c88d563b6e0ef2d44042e28a9ea03a03
Reviewed-on: https://go-review.googlesource.com/12830
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-07-29 18:08:07,https://api.github.com/repos/golang/tools/git/commits/739a26ae62f2ed2c446089078276fb52f303f46e,739a26ae62f2ed2c446089078276fb52f303f46e,"go/loader: add paranoid assertions to help diagnose issue 11012

Change-Id: I5e24fe0fb605bdb39de11309e0e3c8ffd7a1eb8b
Reviewed-on: https://go-review.googlesource.com/12842
Reviewed-by: Robert Griesemer <gri@golang.org>"
alexbrainman,2015-07-29 07:35:31,https://api.github.com/repos/golang/tools/git/commits/166a1118e9ee7e51d6e2665484f039c87bc9549b,166a1118e9ee7e51d6e2665484f039c87bc9549b,"go/loader: update examples Output

Some standard library dependencies have changed (packages and files).
Both ExampleConfig_CreateFromFiles and ExampleConfig_Import Output
needs to be adjusted. Do that.

Update golang/go#11811

Change-Id: I523f2adc1aa46f0932a71ccb23dd7c5a6b07fb27
Reviewed-on: https://go-review.googlesource.com/12832
Reviewed-by: Alan Donovan <adonovan@google.com>"
jeffallen,2015-07-23 10:30:11,https://api.github.com/repos/golang/tools/git/commits/06e42bd9eb281c80b8c04b1c38ece4e33e0df1f3,06e42bd9eb281c80b8c04b1c38ece4e33e0df1f3,"tools/godoc: list all sub-repos

The list of sub-repos at the bottom of the /pkg
page is unfortunately hand-maintained. With this
commit, it is now up-to-date and ready to get out
of date again.

Fixes golang/go#9081.

Change-Id: I3dc5e11ed65f53ea7299a259575ebcb6ad6b13ec
Reviewed-on: https://go-review.googlesource.com/12512
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alexbrainman,2015-07-29 04:57:13,https://api.github.com/repos/golang/tools/git/commits/0cac9d87b785bec832be427dfe78a3a4cf529485,0cac9d87b785bec832be427dfe78a3a4cf529485,"cmd/fiximports: make tests pass on windows

Update golang/go#11811

Change-Id: I1f8977cf8eed84936c7c2b568f87abe88f5723f9
Reviewed-on: https://go-review.googlesource.com/12788
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alexbrainman,2015-07-29 05:41:15,https://api.github.com/repos/golang/tools/git/commits/7ba2a8c9a970818574cbc70d8144c9fefefcc43f,7ba2a8c9a970818574cbc70d8144c9fefefcc43f,"cmd/vet: make TestTags pass on windows

Update golang/go#11811

Change-Id: I3d875acf58a015fa4cae16473a118ac8196b9b44
Reviewed-on: https://go-review.googlesource.com/12789
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-07-28 04:42:13,https://api.github.com/repos/golang/tools/git/commits/0f0e72bcc31b2426ce21174cd57f985a84b7724b,0f0e72bcc31b2426ce21174cd57f985a84b7724b,"godoc/static: fix handling of playground snippets with no output

Fixes golang/go#11903

Change-Id: Ia7f85d83f1f697fd787a87cd74971f6cf0540792
Reviewed-on: https://go-review.googlesource.com/12751
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
cierniak,2015-07-22 23:16:56,https://api.github.com/repos/golang/tools/git/commits/7fe0389f47838f029f5c85ff7c21e997c351c05e,7fe0389f47838f029f5c85ff7c21e997c351c05e,"go/ssa: update package doc to mention ssautil.CreateProgram

Change-Id: I92fb6cf5683c335826d2e84394cc594639e34fe6
Reviewed-on: https://go-review.googlesource.com/12542
Reviewed-by: Dave Cheney <dave@cheney.net>"
aclements,2015-07-25 04:13:09,https://api.github.com/repos/golang/tools/git/commits/69f53eb622e0f41d0e91debd71d6694148b52a30,69f53eb622e0f41d0e91debd71d6694148b52a30,"cmd/stress: add ""-ignore regexp"" flag

This adds a flag for specifying a regular expression for failures that
should be ignored. This is useful for filtering out known issues and
provides a logical mirror to the existing -failure flag.

Change-Id: Ibbacdd2125aa23fe819896e5a17664b703c4ee35
Reviewed-on: https://go-review.googlesource.com/12676
Reviewed-by: Dmitry Vyukov <dvyukov@google.com>"
stapelberg,2015-07-24 09:36:53,https://api.github.com/repos/golang/tools/git/commits/4d49207e6bc4068d660d507e4faf40f02b603d86,4d49207e6bc4068d660d507e4faf40f02b603d86,"fix typo: s/connnection/connection/

Change-Id: Ib59dd669cf44b10f5ba811b4916721e6aea611d7
Reviewed-on: https://go-review.googlesource.com/12630
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
griesemer,2015-07-23 22:52:57,https://api.github.com/repos/golang/tools/git/commits/1c460ffc925e89a72add52c6fc53755e988b3b4a,1c460ffc925e89a72add52c6fc53755e988b3b4a,"go/types: run tests that were excluded by mistake

Backport of https://go-review.googlesource.com/#/c/12517/.

TBR=adonovan

Change-Id: I6b010c977c9a770a27c3fa1271c07c38d9b84185
Reviewed-on: https://go-review.googlesource.com/12601
Reviewed-by: Robert Griesemer <gri@golang.org>"
josharian,2015-07-22 19:56:57,https://api.github.com/repos/golang/tools/git/commits/ec600479b27be7ad21ea55b80251085208d6cfef,ec600479b27be7ad21ea55b80251085208d6cfef,"godoc/redirect: make /issue and /issues identical

I frequently type one when the other is required.
Make them interchangeable.

Change-Id: Ib98d2b67aa42d79e6a8e9fd29fdea17048378eb6
Reviewed-on: https://go-review.googlesource.com/12509
Reviewed-by: Andrew Gerrand <adg@golang.org>"
griesemer,2015-07-21 18:38:22,https://api.github.com/repos/golang/tools/git/commits/88421f4cb273a62118790d1a4166031adc82ba5d,88421f4cb273a62118790d1a4166031adc82ba5d,"go/types: unexport UniverseByte/Rune; make Typ a slice

Also: backport https://go-review.googlesource.com/#/c/12443/ .

Change-Id: Ia8a664c627a70a17701b2d48946704c15f4f49c0
Reviewed-on: https://go-review.googlesource.com/12482
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2015-07-20 23:23:50,https://api.github.com/repos/golang/tools/git/commits/436a79e5dd4cbda2129930db3a660c99276d7357,436a79e5dd4cbda2129930db3a660c99276d7357,"go/types: fix internal inInteger operand predicate

Backport of https://go-review.googlesource.com/#/c/12045/

Fixes golang/go#11594.

Change-Id: I3c81e2b1bbdc084d4a323fd963c1c780054ce223
Reviewed-on: https://go-review.googlesource.com/12046
Reviewed-by: Alan Donovan <adonovan@google.com>"
Sajmani,2015-07-15 18:49:51,https://api.github.com/repos/golang/tools/git/commits/87156cb7667343326165d84f3557bd91ab57428b,87156cb7667343326165d84f3557bd91ab57428b,"tools/godoc: remove server's dependence on ""expvar"".

Importing ""expvar"" exports server variables on /debug/vars by default.  This
raises security concerns in some environments.  Users should opt-in to this
instead.  If users need godoc metrics, we can provide a function in the godoc
package to read them.

Change-Id: Ie12e695d5958b646e82e7e00de651cc1913aa98d
Reviewed-on: https://go-review.googlesource.com/12270
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-07-14 17:57:11,https://api.github.com/repos/golang/tools/git/commits/c5ca59aab8c27791ce3f820caad760cff360cfc8,c5ca59aab8c27791ce3f820caad760cff360cfc8,"go/loader: issue informative error (not panic) if cgo used in ad hoc package

See https://github.com/golang/go/issues/11627.

Change-Id: I458bc4ea54d0db34f3ba96060d284eda4bad7111
Reviewed-on: https://go-review.googlesource.com/12190
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
jmhodges,2015-07-10 04:35:09,https://api.github.com/repos/golang/tools/git/commits/ea5101579e09ace53571c8a5bae6ebb896f8d5e4,ea5101579e09ace53571c8a5bae6ebb896f8d5e4,"tools/refactor/rename: add provide to rename.el

Fixes #11110

Change-Id: I29eaff7f730f7680afaa9ad058ac797bdab98a18
Reviewed-on: https://go-review.googlesource.com/11947
Reviewed-by: Alan Donovan <adonovan@google.com>"
crawshaw,2015-07-12 13:49:48,https://api.github.com/repos/golang/tools/git/commits/5c915edf6255d95abcd0dd247a38b8ea098e62fc,5c915edf6255d95abcd0dd247a38b8ea098e62fc,"cmd/godoc: redirect /x to subrepo page

Fixes golang/go#9061.

Change-Id: Ibe5764932bb8e223e7f838415f84bc330eb5d818
Reviewed-on: https://go-review.googlesource.com/12082
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2015-07-13 16:37:01,https://api.github.com/repos/golang/tools/git/commits/543085f0ecbe65f1dd183883c76b604564d740ab,543085f0ecbe65f1dd183883c76b604564d740ab,"go/callgraph: add ""concurrent"" or ""deferred"" prefix to (*Edge).Description

Fixes golang/go#11518

Change-Id: If6c86c1995c0b6a1226deedaa1713947baa6593a
Reviewed-on: https://go-review.googlesource.com/12085
Reviewed-by: Daniel Morsing <daniel.morsing@gmail.com>"
griesemer,2015-07-10 21:48:11,https://api.github.com/repos/golang/tools/git/commits/4cd43f3077b3fc4acadf24ffd03da6b5a1d883b8,4cd43f3077b3fc4acadf24ffd03da6b5a1d883b8,"go/types: exclude tests that run too long

Backport of the go/types-specific changes of:

https://go-review.googlesource.com/#/c/11673/

(from std repo go/types). This will allow running
the go/types tests again in the x/tools repo.

Change-Id: I97d4664d5aed6309e74b571f86f36f8bb4df4fca
Reviewed-on: https://go-review.googlesource.com/12042
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
methane,2015-07-09 22:27:05,https://api.github.com/repos/golang/tools/git/commits/e81d36e137aa217dc6cdfa012c23f37d00e180a6,e81d36e137aa217dc6cdfa012c23f37d00e180a6,"refactor/rename: fix command name in comment

Change-Id: I7a74c07b104cf1d1adb4536522ff2341d24ebd82
Reviewed-on: https://go-review.googlesource.com/12010
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
adg,2015-07-05 20:46:14,https://api.github.com/repos/golang/tools/git/commits/e645bbf89890fbf93251a1432dad678746bcec6c,e645bbf89890fbf93251a1432dad678746bcec6c,"playground/socket: make output/end race less likely

This doesn't fix the race; doing that would require a bit of a redesign.
Since GopherCon is this week, just put in this stop-gap measure for now.

Update golang/go#11534

Change-Id: Ied6c5dd52778534a7a08b5ba3fa15c0352a65646
Reviewed-on: https://go-review.googlesource.com/11886
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
alandonovan,2015-06-26 20:11:46,https://api.github.com/repos/golang/tools/git/commits/997b3545fd86c3a2d8e5fe6366174d7786e71278,997b3545fd86c3a2d8e5fe6366174d7786e71278,"go/types: change {Type,Object,Selection}String to accept a Qualifier function

The optional Qualifier function determines what prefix to attach to
package-level names, enabling clients to qualify packages in different
ways, for example, using only the package name instead of its complete
path, or using the locally appropriate name for package given a set of
(possibly renaming) imports.

Prior to this change, clients wanting this behavior had to copy
hundreds of lines of complex printing logic.

Fun fact: (*types.Package).Path and (*types.Package).Name are valid
Qualifier functions.

We provide the RelativeTo helper function to create Qualifiers so that
the old behavior remains a one-liner.

Fixes golang/go#11133

Change-Id: Ibd63f639c7b3aa1738826d6165f2d810efeb8293
Reviewed-on: https://go-review.googlesource.com/11692
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-06-29 16:34:05,https://api.github.com/repos/golang/tools/git/commits/749901c67649e560c838fd4d6c6aa458938b31f5,749901c67649e560c838fd4d6c6aa458938b31f5,"go/types: add an API test of the Scope type

Also: make (*Scope).Innermost work for Package scopes.

Change-Id: I9836676e94f95df897101606bed6f29ba46e0f9d
Reviewed-on: https://go-review.googlesource.com/11691
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-06-29 19:01:33,https://api.github.com/repos/golang/tools/git/commits/27bc91e0badb9c4879ea332e8c4925f4f7b1766d,27bc91e0badb9c4879ea332e8c4925f4f7b1766d,"go/ssa/interp: disable interpretation of packages that have sprouted Examples

since we can't interpret os.Pipe yet.

Change-Id: If27dadc18532274ce97ad7e7557e8614dd15279e
Reviewed-on: https://go-review.googlesource.com/11712
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2015-06-26 03:18:22,https://api.github.com/repos/golang/tools/git/commits/7e09e07243f7aafa5fbcc4da39f79083d1797e7b,7e09e07243f7aafa5fbcc4da39f79083d1797e7b,"cmd/present: fix mixed content warnings when served by HTTPS

Fixes golang/go#11392

Change-Id: Ic7ecf19d88c5a7f1d0ef9bd21476074b242854f0
Reviewed-on: https://go-review.googlesource.com/11534
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mholt,2015-04-17 23:09:18,https://api.github.com/repos/golang/tools/git/commits/9febd36660f3f0e6532bee9b1af70673631c045a,9febd36660f3f0e6532bee9b1af70673631c045a,"tools/godoc: Fix indentation in doc contents

Mobile-friendly design overlooked indentation in table of contents
for article table of contents; this change restores indentation.

Change-Id: I9a3013497e1659ebfb657a8fb9374b8ad9b04b16
Reviewed-on: https://go-review.googlesource.com/11582
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-04-22 18:48:18,https://api.github.com/repos/golang/tools/git/commits/a87e08b564e401b7961951e02f1cb2197c2cbb60,a87e08b564e401b7961951e02f1cb2197c2cbb60,"godoc/static/analysis: update user documentation

Change-Id: I765b246b44210612a8d7d0484beab07a86fa79c5
Reviewed-on: https://go-review.googlesource.com/9243
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-06-04 22:38:33,https://api.github.com/repos/golang/tools/git/commits/a9866431adbeea12b9d01b6f97d1cc4197ca4184,a9866431adbeea12b9d01b6f97d1cc4197ca4184,"refactor/importgraph: don't ignore imports in packages with errors.

And in gomvpkg, don't stop just because some packages had errors.
This is inevitable in a large GOPATH tree.

Fixes issue golang/go#10907

Change-Id: I9a60b070228d06d44880202eeef54394e914f5d5
Reviewed-on: https://go-review.googlesource.com/10715
Reviewed-by: Sameer Ajmani <sameer@golang.org>"
mholt,2015-04-17 23:09:18,https://api.github.com/repos/golang/tools/git/commits/f671283c2250b23f313e8045102573e526a9beb2,f671283c2250b23f313e8045102573e526a9beb2,"tools/godoc: Mobile-friendly site design

This change makes golang.org responsive, including a top
bar menu and appropriate font sizing. The result is a
website that looks pleasing and is functional both on
mobile and on desktop. Also added a few print styles so
the site looks great on paper or PDF.

Change-Id: I16ee25ef4afde2002f240aec0804414bfb172a24
Reviewed-on: https://go-review.googlesource.com/9062
Reviewed-by: Chris Broadfoot <cbro@golang.org>"
griesemer,2015-06-23 20:58:10,https://api.github.com/repos/golang/tools/git/commits/e841ad2e007fc240496d82af77277ef650667982,e841ad2e007fc240496d82af77277ef650667982,"go/types: fix minor typo in comment

Change-Id: I2d696655c409f94a5ab6a3837b4b83bc7eb0b15d
Reviewed-on: https://go-review.googlesource.com/11366
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-06-23 20:17:41,https://api.github.com/repos/golang/tools/git/commits/8c8cd541fada27c1bb61d540ed3280e8165e388a,8c8cd541fada27c1bb61d540ed3280e8165e388a,"go/types: in string(x) conversions, x must be of integer type

Fixes golang/go#11357.

Change-Id: Id6994a0fe3830cf56d3dbdd60a4dff89404e5a41
Reviewed-on: https://go-review.googlesource.com/11365
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-23 19:26:56,https://api.github.com/repos/golang/tools/git/commits/63696995047e373bbf7204083172805e72fa6064,63696995047e373bbf7204083172805e72fa6064,"go/types: better error message for certain unaary/binary expression errors

Fixes golang/go#11367.

Change-Id: Ic7f1bad51165685097c909fd18c245a57924cdc8
Reviewed-on: https://go-review.googlesource.com/11363
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-22 21:28:08,https://api.github.com/repos/golang/tools/git/commits/e9a746de6e61b9b823a981843c0d98bc209eed2b,e9a746de6e61b9b823a981843c0d98bc209eed2b,"go/types: add missing test for constant shifts

Fixes golang/go#11325.

Change-Id: Ic302098fffd337fcfa31274319cdbd78907a6d5d
Reviewed-on: https://go-review.googlesource.com/11344
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-18 00:25:35,https://api.github.com/repos/golang/tools/git/commits/af817890aa7b628234075a6cb01a3a435fb8317d,af817890aa7b628234075a6cb01a3a435fb8317d,"go/gccgoimporter: fix tests for Plan9

This is a backport of https://go-review.googlesource.com/#/c/11194/.

Change-Id: I2f8a8efec77a29258c85f5a1b11cd9deb81853d0
Reviewed-on: https://go-review.googlesource.com/11210
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
griesemer,2015-06-15 20:37:35,https://api.github.com/repos/golang/tools/git/commits/605d5bf7f53c886f0b33afe425db6664d1ed899c,605d5bf7f53c886f0b33afe425db6664d1ed899c,"go/gcimporter, go/types: skip nacl-arm for some tests

Backport of https://go-review.googlesource.com/9674 .

Change-Id: Ie86bea98e910616b2d6a49387b1aed973d4f1c66
Reviewed-on: https://go-review.googlesource.com/11126
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-13 01:23:47,https://api.github.com/repos/golang/tools/git/commits/f9379e5b1f88898c255ae48ea60dfa733831dd8c,f9379e5b1f88898c255ae48ea60dfa733831dd8c,"go/types: be robust in the presence of incorrect/missing position info

Fixes go/loader test crash.

TBR: adonovan

Change-Id: I91dba5e001afa0ee188ccea4db904a6ce744c4d0
Reviewed-on: https://go-review.googlesource.com/11042
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-06-13 01:07:02,https://api.github.com/repos/golang/tools/git/commits/e5c3ebe4c75c7f8d84a92853cff976756a24faf9,e5c3ebe4c75c7f8d84a92853cff976756a24faf9,"go/pointer: fix build (provide correct args to types.NewSignature and types.Eval)

TBR: adonovan

Change-Id: I4b43b566278ede6b780a59f986c0fc392a5ef4ac
Reviewed-on: https://go-review.googlesource.com/11041
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-06-13 00:55:46,https://api.github.com/repos/golang/tools/git/commits/f389b292089a2cf43f61f6ff6717250d14437be4,f389b292089a2cf43f61f6ff6717250d14437be4,"go/ssa: fix build (remove unused params to types.NewSignature)

TBR: adonovan

Change-Id: I669140d6e0735804625b0327caa51f4e1807d277
Reviewed-on: https://go-review.googlesource.com/11040
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-06-12 23:59:51,https://api.github.com/repos/golang/tools/git/commits/136b4e419bad76498a33c7eaaf467f7fdfc22279,136b4e419bad76498a33c7eaaf467f7fdfc22279,"go/types: revert most recent change - we cannot rely on 1.5 features quite yet

Revert ""go/types: fix Eval to use correct file set when evaluating an expression""

This reverts commit d241a1448bb9a6aeab0697421853a3ab1fbf243c.

Change-Id: Ie16c57da2732d8b079108efef100fc956b71f737
Reviewed-on: https://go-review.googlesource.com/11010
Reviewed-by: David Symonds <dsymonds@golang.org>"
griesemer,2015-06-12 23:37:39,https://api.github.com/repos/golang/tools/git/commits/d241a1448bb9a6aeab0697421853a3ab1fbf243c,d241a1448bb9a6aeab0697421853a3ab1fbf243c,"go/types: fix Eval to use correct file set when evaluating an expression

Change-Id: I221bd26cc90755de57c8f1941cabddd14d56584d
Reviewed-on: https://go-review.googlesource.com/10999
Reviewed-by: Alan Donovan <adonovan@google.com>"
josharian,2015-06-12 23:44:52,https://api.github.com/repos/golang/tools/git/commits/85ad76014a93c3c437d000ae0f00417575fee867,85ad76014a93c3c437d000ae0f00417575fee867,"cmd/vet: fix build

Broken by CLs 10994 and 10800.

Fixes golang/go#11194.

Change-Id: Ic071fae6bf7e8ac9518d84c74c98d1d7233c2025
Reviewed-on: https://go-review.googlesource.com/11004
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-06-12 23:16:32,https://api.github.com/repos/golang/tools/git/commits/b5429ae521c44a111a8438ea257a61ec20bf3875,b5429ae521c44a111a8438ea257a61ec20bf3875,"go/types: fix comment (missed in last commit)

Change-Id: I4ea2a6b89b44b11cbcf771d0aab3e30370f59d31
Reviewed-on: https://go-review.googlesource.com/10996
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-06-12 22:56:23,https://api.github.com/repos/golang/tools/git/commits/ee0cf325b1acdf3cbacb153fc7a6e353c3146e3d,ee0cf325b1acdf3cbacb153fc7a6e353c3146e3d,"go/types: provide full source file extent to file scope

Change-Id: Ib3472ab9e6b5bae0b03474ea57857fde1afbd43a
Reviewed-on: https://go-review.googlesource.com/10995
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-12 21:29:43,https://api.github.com/repos/golang/tools/git/commits/44761a8f84d6444f74938c73a94a4255933eedb7,44761a8f84d6444f74938c73a94a4255933eedb7,"go/types: remove unused scope parameter from NewSignature

Change-Id: I93c4185d7eeafde43b6b512b6e574d3332401c09
Reviewed-on: https://go-review.googlesource.com/10994
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-12 21:23:25,https://api.github.com/repos/golang/tools/git/commits/3c2fc37aec6bfeba26265fe9ba6fd6d3bfa5e869,3c2fc37aec6bfeba26265fe9ba6fd6d3bfa5e869,"go/gccgoimporter: remove incorrect scope passed to NewSignature

Change-Id: I4b9670dc72ef85b852361aa5524a55b82d88e8f2
Reviewed-on: https://go-review.googlesource.com/10993
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-12 21:15:51,https://api.github.com/repos/golang/tools/git/commits/568df9f49c6b770aa78c34aae4db40cb75800f45,568df9f49c6b770aa78c34aae4db40cb75800f45,"go/types: remove global vars in test

Change-Id: I5fb61a38362a40c706ba5cb8968c387c8dc4aef2
Reviewed-on: https://go-review.googlesource.com/10992
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-05 23:52:52,https://api.github.com/repos/golang/tools/git/commits/665374f1c86631cf73f4729095d4cf4313670545,665374f1c86631cf73f4729095d4cf4313670545,"go/types: add pos parameter to Eval; remove New, EvalNode

Scopes now have ""extent"" information; that is they provide a
range [scope.Pos(), scope.End()) which describes the source
text range covered by the scope. It requires that the incoming
AST has correct position information; also the extent for the
Universe and for package scopes is not set (positions are invalid).

Objects have a new (currently unexported) scopePos position,
which is the position at which the object becomes visible inside
its *Scope.

Scope.LookupParent takes an addition parameter pos. If valid, an
identifier is looked up as if found at position pos. This can be
used to find the object corresponding to an identifier at position
pos after scopes have been completely populated (and thus may
contain the same identifier which may be defined only later in the
source text).

Fixes #9980.

Change-Id: Icb49c44c5c3d4b93c0718ce2a769ec468877709d
Reviewed-on: https://go-review.googlesource.com/10800
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-08 21:37:01,https://api.github.com/repos/golang/tools/git/commits/a6d2a4254ebe0154bc44ff9b8473b8738f0d68e8,a6d2a4254ebe0154bc44ff9b8473b8738f0d68e8,"cmd/vet: backport of https://go-review.googlesource.com/#/c/10777/3

Change-Id: I8d63575f2053eda2d7f0a63f3ff862bf0de88d31
Reviewed-on: https://go-review.googlesource.com/10807
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-06-05 22:37:20,https://api.github.com/repos/golang/tools/git/commits/ac303766f5f240c1796eeea3dc9bf34f1261aa35,ac303766f5f240c1796eeea3dc9bf34f1261aa35,"go/ssa/interp: don't run encoding/pem tests in interpreter

since they use quick.Check, which requires the unimplemented
(reflect.Value).SetString.

Also:
- Add reflect.Type.{In,NumIn} methods, whose absence
  was only the proximate cause of the failed test.
- Delete bodies of reflect.Value methods so that it's obvious a
  function that should be intrinsic is missing.

Change-Id: Ib64b8f4953a913f4ead90e376bda70419adb87cb
Reviewed-on: https://go-review.googlesource.com/10796
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-06-05 19:18:13,https://api.github.com/repos/golang/tools/git/commits/f0b0213b21c65c9c9e7e0cfab2832b41866c132e,f0b0213b21c65c9c9e7e0cfab2832b41866c132e,"cmd/vet: remove dependency on types.New

In preparation for removal of types.New.

Change-Id: Ieff0c41cf03351124cea32e9b96075a4801c051f
Reviewed-on: https://go-review.googlesource.com/10775
Reviewed-by: Rob Pike <r@golang.org>"
griesemer,2015-06-05 18:40:02,https://api.github.com/repos/golang/tools/git/commits/de24c4870a4245298b527aa48c399e681933e2bd,de24c4870a4245298b527aa48c399e681933e2bd,"go/types: remove unused return value (minor cleanup)

Change-Id: I37dd83100b7e977e1d5a06ae84a93a40bbd651c3
Reviewed-on: https://go-review.googlesource.com/10773
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-05 18:08:59,https://api.github.com/repos/golang/tools/git/commits/e262ee18f0663de7d759102868aa72b193bf22bf,e262ee18f0663de7d759102868aa72b193bf22bf,"go/types/typeutil: add missing copyright notices

Change-Id: I101c033ffc20fde38b0f0b075f559aa10a6e43d0
Reviewed-on: https://go-review.googlesource.com/10772
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-06-05 17:18:37,https://api.github.com/repos/golang/tools/git/commits/3f8eecd15b7eada39e820290de2599f80b7cbc71,3f8eecd15b7eada39e820290de2599f80b7cbc71,"go/types: move MethodSetCache into package go/types/typeutil

Change-Id: Iba5d7c2df533948a5b28373b077cc0476a6745ad
Reviewed-on: https://go-review.googlesource.com/10770
Reviewed-by: Alan Donovan <adonovan@google.com>"
robpike,2015-06-04 21:15:26,https://api.github.com/repos/golang/tools/git/commits/cc54cd6553c6d65235fdb9bbeccf6b0097eee518,cc54cd6553c6d65235fdb9bbeccf6b0097eee518,"cmd/vet: don't use filepath.Join to build binary name in test

It cleans the string and removes the initial ./, which will cause the
test to fail if . is not in $PATH

Change-Id: Icc216f7ab4887c39ccda93d1c4093ccd03de44bc
Reviewed-on: https://go-review.googlesource.com/10696
Reviewed-by: Robert Griesemer <gri@golang.org>"
robpike,2015-06-04 18:37:07,https://api.github.com/repos/golang/tools/git/commits/3caa6cfbd2616ae9194fd65277a9c68571cb9cc3,3caa6cfbd2616ae9194fd65277a9c68571cb9cc3,"cmd/vet: add -tags flag

This is needed to control which files to test in the usual manner.
A followup CL on the main repo will add the flag to the go vet command.

Updates golang/go#10228

Change-Id: I820d3c74657b58de5e92276627368dedf4e2096c
Reviewed-on: https://go-review.googlesource.com/10692
Reviewed-by: Andrew Gerrand <adg@golang.org>"
ncw,2015-04-23 21:54:52,https://api.github.com/repos/golang/tools/git/commits/578c521fc29d6b5e17e052d4382ef72664fc1e2d,578c521fc29d6b5e17e052d4382ef72664fc1e2d,"cmd/stringer: fix panic caused by integer overflow

When String() was called on the maximum value of an integer type (eg
255 for uint8) this would cause an integer overflow, which would cause
an index error later in the code.

Fixed by re-arranging the code slightly.

Fixes golang/go#10563

Change-Id: I9fd016afc5eea22adbc3843f6081091fd50deccf
Reviewed-on: https://go-review.googlesource.com/9255
Reviewed-by: Rob Pike <r@golang.org>"
robpike,2015-06-02 04:02:04,https://api.github.com/repos/golang/tools/git/commits/27e692e6ec36d8f48be794f32553e1400c70dbf2,27e692e6ec36d8f48be794f32553e1400c70dbf2,"cmd/cover: check error

The variable was assigned but not used, as caught by a tool
written by gorden.klaus@gmail.com.

Change-Id: I84ca3d00896287a35561bd122a0cf64212854a86
Reviewed-on: https://go-review.googlesource.com/10610
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
gpaul,2015-05-31 18:34:06,https://api.github.com/repos/golang/tools/git/commits/68353d275041f5bac9e70dce7e08305864ddb0e9,68353d275041f5bac9e70dce7e08305864ddb0e9,"godoc/vfs: close file on error

When Stat() or IsDir() return errors, close the file to avoid a leak.

Change-Id: I46d5e34c3443413ca674f2a703d033d945c21efa
Reviewed-on: https://go-review.googlesource.com/10557
Reviewed-by: Minux Ma <minux@golang.org>"
alandonovan,2015-05-29 16:33:10,https://api.github.com/repos/golang/tools/git/commits/8ccf558e8ad400746c297c66f6493427d382cfe4,8ccf558e8ad400746c297c66f6493427d382cfe4,"cmd/callgraph: update flag docstring

And add a TODO.

Change-Id: I51c63b32e9ac4309cdfb8228348a5d528f36a919
Reviewed-on: https://go-review.googlesource.com/10489
Reviewed-by: Robert Griesemer <gri@golang.org>"
dominikh,2015-05-28 14:53:24,https://api.github.com/repos/golang/tools/git/commits/9c7ccd869cbf3b407e50f8ed03190c333c9bd896,9c7ccd869cbf3b407e50f8ed03190c333c9bd896,"refactor/rename: emacs: kill go-rename buffer correctly

Match gofmt's behaviour of closing the status buffer. Don't display the
buffer in case of success as we were going to hide it instantly again,
anyway. Also, instead of using delete-window, use
gofmt--kill-error-buffer. gofmt--kill-error-buffer uses quit-window if
there's a window for the buffer, kill-buffer otherwise.

quit-window only deletes the window if it was created explicitly for the
status buffer and if it is still displaying it. This way, we won't close
windows that the user created or repurposed himself.

Additionally, this change ensures that we don't leave a *go-rename*
buffer lying around when gorename succeeded.

Fixes golang/go#10972.

Change-Id: Id1efb60d399f0062d870e925138aa827e12f3e58
Reviewed-on: https://go-review.googlesource.com/10453
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-05-22 19:53:13,https://api.github.com/repos/golang/tools/git/commits/9333b8f458d2cca3206b26884fe102adf13e6634,9333b8f458d2cca3206b26884fe102adf13e6634,"refactor/eg: fix crash while unifying wildcard with KeyValueExpr, which has no type

+ tests.

Fixes issue golang/go#10923

Change-Id: I0813cdfbb447bbd9f579bb1998b355a3179a7e79
Reviewed-on: https://go-review.googlesource.com/10332
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
griesemer,2015-05-28 19:59:43,https://api.github.com/repos/golang/tools/git/commits/5e9beacd7719ae7c43fabd197739886eeb75bcf2,5e9beacd7719ae7c43fabd197739886eeb75bcf2,"go/types: fix error message for embedded non-interface types in interfaces

Backport of https://go-review.googlesource.com/#/c/10466/ .

Change-Id: Ib88a9707ea8ad6e2dbfaeb2edeb586a968abd508
Reviewed-on: https://go-review.googlesource.com/10468
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-05-28 19:08:21,https://api.github.com/repos/golang/tools/git/commits/8c8390201da5f9e2d3cb713b554613f2e7ccec80,8c8390201da5f9e2d3cb713b554613f2e7ccec80,"go/types: exclude test/fixedbugs/issue7746.go from tests

This backports an anlogous change made to std repo go/types and
enables running the tests again in a reasonable amount of time.

Change-Id: Ied59f6788b7b180f34c918a3c94d50c892b15f32
Reviewed-on: https://go-review.googlesource.com/10467
Reviewed-by: Alan Donovan <adonovan@google.com>"
minux,2015-05-28 00:54:35,https://api.github.com/repos/golang/tools/git/commits/cd3ef3b6f02d2f468247c06a6f9b3273e9d186b4,cd3ef3b6f02d2f468247c06a6f9b3273e9d186b4,"godoc/static: set explicit page background color

Fixes golang/go#10961.

Change-Id: I3fc947bb18535853b278bad5fa449cf259eba59c
Reviewed-on: https://go-review.googlesource.com/10451
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-05-20 19:58:44,https://api.github.com/repos/golang/tools/git/commits/3d1847243ea4f07666a91110f48e79e43396603d,3d1847243ea4f07666a91110f48e79e43396603d,"oracle: disable parser bailout

This change sets ParserMode=AllErrors so that the parser is never
allowed to discard the AST and use a dummy one just because it saw too
many errors.

Also, change (*loader.Program).PathEnclosingInterval so that other
clients that forget to set this flag don't panic while calling
fset.File(f.Pos()).Base() on an ast.File f with no position info.

Change-Id: Ie544f169d367d2aa85426212b27063dc72e36fb1
Reviewed-on: https://go-review.googlesource.com/10290
Reviewed-by: Robert Griesemer <gri@golang.org>"
DanielMorsing,2015-05-18 21:53:22,https://api.github.com/repos/golang/tools/git/commits/500e9560000dc4521479f08d7f612f662a98f435,500e9560000dc4521479f08d7f612f662a98f435,"oracle: attempt to deduce callees statically before building SSA

When querying for callees against a static call, the entire SSA
form for the program was built. Since we can tell if a callee is
statically dispatched after typechecking, try to do that before
building the SSA form.

This cuts 3.5 seconds off queries against static calls.

Change-Id: I22291381d3bec490e3b1d6f9c6b5a0092fd9f635
Reviewed-on: https://go-review.googlesource.com/10230
Reviewed-by: Alan Donovan <adonovan@google.com>"
josharian,2015-05-19 22:51:30,https://api.github.com/repos/golang/tools/git/commits/3f8aef80c8663afe839340245170f63d49a5f256,3f8aef80c8663afe839340245170f63d49a5f256,"go/ast/astutil: set Pos for import name

Failing to set this when adding a named import
to an existing block at the 0th position
caused the Lparen position to be set to zero.
As a result, the specs were printed as if
they were a single spec, not a group.
This made it appear as if imports had
been swallowed.

See CL 8663 for more context
and the original bug report.

CL 2050 fixed most similar cases
but missed this one.

Change-Id: Ic578fbb8040fa3d3d41db5bde2b839e394801608
Reviewed-on: https://go-review.googlesource.com/10252
Reviewed-by: Robert Griesemer <gri@golang.org>"
aclements,2015-05-18 14:59:35,https://api.github.com/repos/golang/tools/git/commits/45716cd4c6ff17c3ef8a40254ab0708bbe35a4ef,45716cd4c6ff17c3ef8a40254ab0708bbe35a4ef,"cmd/stress: print number of failed runs

Currently at the end of a long stress run you may not know from the
end of the output whether there were any failures. Add a failure count
to the periodic status message to make this obvious.

Change-Id: I5ad19b9e6f462369fb32be6efbfb6f21568e98e4
Reviewed-on: https://go-review.googlesource.com/10187
Reviewed-by: Rick Hudson <rlh@golang.org>
Reviewed-by: Dmitry Vyukov <dvyukov@google.com>"
alandonovan,2015-04-07 18:52:39,https://api.github.com/repos/golang/tools/git/commits/7d75e8b219c3efda2d08ae38acd6b42f8da4f5f9,7d75e8b219c3efda2d08ae38acd6b42f8da4f5f9,"cmd/fiximports: a tool to rewrite import paths to match import comments.

fiximports enumerates the set of packages identified by the
command-line arguments, using ""go list"" notation.  Within each
package, it replaces all imports of non-canonical packages by their
canonical name, introducing an import renaming if (heuristically)
necessary.

If a package comes from one of the -baddomains, and it has no import
comment, fiximports reports an error.  The error message includes the
list of packages that import the errant package, directly or
indirectly.  This flag is used to indicate ""sinking ship"" package
hosting domains like code.google.com.

Caveat: this process is not trivially reversible.  Consider a package A
to which we add an import comment ""B"", and run the tool.  Package C,
which imported A, now imports B.  ('go get -u' would fetch package B).
But changing the import comment in directory A and re-running the tool
will not cause C to be changed because it no longer imports A; it
imports B.

+ Tests.

Change-Id: I3d3d9663d3c084356fffc7e55407709ebc6d9a39
Reviewed-on: https://go-review.googlesource.com/8562
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-05-12 14:44:04,https://api.github.com/repos/golang/tools/git/commits/d1b42377f98cad7c8b8b2996c4ada87e7410b9fe,d1b42377f98cad7c8b8b2996c4ada87e7410b9fe,"cmd/oracle: improve error messages

Also, in Emacs, make 'referrers' query not prompt for a scope.

Change-Id: I5c0f034d4fa8b653311f1b7d8ff58b699d168b79
Reviewed-on: https://go-review.googlesource.com/9927
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-04-07 18:52:39,https://api.github.com/repos/golang/tools/git/commits/5df6d9290d4cd3599258f01a8bee81dc4bc435e5,5df6d9290d4cd3599258f01a8bee81dc4bc435e5,"go/ssa/interp: remove hash/crc32 from test suite, since it uses Examples

Change-Id: Ia87b7f6d589cd22028b437a94355f499fbedd18a
Reviewed-on: https://go-review.googlesource.com/9928
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-05-04 15:09:42,https://api.github.com/repos/golang/tools/git/commits/d00f0cb57d439b122af924676c6d45d3106891c9,d00f0cb57d439b122af924676c6d45d3106891c9,"cmd/oracle: emacs: look for oracle on $PATH and nowhere else

Change-Id: Ifbc8e3ff6fe22a56e29fe7ba8004510cb0cee343
Reviewed-on: https://go-review.googlesource.com/9687
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-05-04 14:49:16,https://api.github.com/repos/golang/tools/git/commits/fb47c16287e9a62ccb3bd579e304d393871b58cf,fb47c16287e9a62ccb3bd579e304d393871b58cf,"go/buildutil: fix usage message for -tags flag

Now:

% gorename -h
Usage of ./gorename:
...
  -tags build tags
        a list of build tags to consider...

Change-Id: I46d6906f683407bad6f3dee25c63b139f47e4588
Reviewed-on: https://go-review.googlesource.com/9655
Reviewed-by: Dominik Honnef <dominik@honnef.co>
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
robpike,2015-04-30 21:36:17,https://api.github.com/repos/golang/tools/git/commits/96f6cfbb921ad6d191c67d09a6d4c4fd056403ae,96f6cfbb921ad6d191c67d09a6d4c4fd056403ae,"cmd/cover: document that it is moving to the standard repository

Change-Id: I876afaa2c468f0f6f5d30bff8bc884e3beb33c7f
Reviewed-on: https://go-review.googlesource.com/9539
Reviewed-by: Minux Ma <minux@golang.org>
Reviewed-by: Russ Cox <rsc@golang.org>"
alandonovan,2015-04-30 17:44:34,https://api.github.com/repos/golang/tools/git/commits/8ff1f51a5bdc044fe6282fb3918ce02a8a56fca8,8ff1f51a5bdc044fe6282fb3918ce02a8a56fca8,"cmd/oracle: expect oracle binary beneath $GOBIN, $GOPATH/bin, or $GOROOT/bin

in that order, so that ""go get golang.org/x/tools/cmd/oracle"" installs
it and no copy is needed.  We keep the old location for compatibility.

Why is if/else control flow so hard in basic Lisp?  Sometimes you just need 'return'.

Change-Id: Iae231a761d707daaa1316161cfad0365111eff0e
Reviewed-on: https://go-review.googlesource.com/9547
Reviewed-by: David Chase <drchase@google.com>"
alandonovan,2015-04-30 17:29:28,https://api.github.com/repos/golang/tools/git/commits/6a8dc4ed40822ce940caba73e78d0b7a4ea99fa8,6a8dc4ed40822ce940caba73e78d0b7a4ea99fa8,"oracle: report a better error if query is outside GOROOT/GOPATH

Change-Id: I2f724b5015021be8bf1fccb518f17cc011d687e8
Reviewed-on: https://go-review.googlesource.com/9546
Reviewed-by: David Chase <drchase@google.com>"
dsymonds,2015-04-28 23:51:41,https://api.github.com/repos/golang/tools/git/commits/863c9c67a8003388f9e39232cdf41404fac27525,863c9c67a8003388f9e39232cdf41404fac27525,"go/pointer: Remove a mention of the deleted ImportFromBinary option.

Change-Id: I9ca8a5b37afc6ae9603849d233ee6b4976e2b973
Reviewed-on: https://go-review.googlesource.com/9462
Reviewed-by: Alan Donovan <adonovan@google.com>"
dvyukov,2015-04-27 12:16:46,https://api.github.com/repos/golang/tools/git/commits/7534f4943d94a318edde90212439e538ed54cdde,7534f4943d94a318edde90212439e538ed54cdde,"x/tools/cmd/stress: add utility for stress testing

The stress utility is intended for catching of episodic failures.
It runs a given process in parallel in a loop and collects any failures.
Usage:
 	$ stress ./fmt.test -test.run=TestSometing -test.cpu=10
You can also specify a number of parallel processes with -p flag;
instruct the utility to not kill hanged processes for gdb attach;
or specify the failure output you are looking for (if you want to
ignore some other episodic failures).

Do you find it useful?
I use it for several years for all kinds of episodic failures (not just Go btw).

Change-Id: I06553345b76768a819412acb45f9bdfb3bababf7
Reviewed-on: https://go-review.googlesource.com/9373
Reviewed-by: Keith Randall <khr@golang.org>"
alandonovan,2015-04-24 20:57:46,https://api.github.com/repos/golang/tools/git/commits/a9f55c4fa4523b12937b7347ac8a4314d6793560,a9f55c4fa4523b12937b7347ac8a4314d6793560,"oracle: support ""referrers"" query on package declaration

Added test.

Change-Id: Id7d061b0f74959166b5631a3fde8da4000ffb8d2
Reviewed-on: https://go-review.googlesource.com/9326
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
chai2010,2015-04-27 03:32:30,https://api.github.com/repos/golang/tools/git/commits/fb59b33999ca96ae37729ab071bc3947c84e947e,fb59b33999ca96ae37729ab071bc3947c84e947e,"godoc: add missing copyright

Change-Id: Ic0256b511b4d4346702aeac18298614b1e8d5438
Reviewed-on: https://go-review.googlesource.com/9384
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2015-04-23 19:45:31,https://api.github.com/repos/golang/tools/git/commits/837a81a1b21294ced895f2610fc258a487486c23,837a81a1b21294ced895f2610fc258a487486c23,"oracle: referrers: display the selected object relative to the current package

Added test.  (Its previous output was ""references to type
referrers.s"", with s package-qualified.)

Change-Id: Ifd70246bf5976d5f59ed85e7bbded618286ec6bc
Reviewed-on: https://go-review.googlesource.com/9294
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-04-21 18:00:20,https://api.github.com/repos/golang/tools/git/commits/ee9a07d37363089be7cb56181a0c17caac6ee915,ee9a07d37363089be7cb56181a0c17caac6ee915,"go/buildutil: TagsFlag provides a flag.Value for setting build.Context.BuildTags from -tags flag.

Add -tags flag to oracle, ssadump, callgraph, gomvpkg, gorename, eg.

Change-Id: I4a818501b2331c4ea589caca37a3ad9d381dc8af
Reviewed-on: https://go-review.googlesource.com/9172
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
josharian,2015-04-21 22:56:58,https://api.github.com/repos/golang/tools/git/commits/b1aed1a596ad02d2aa2eb5c5af431a7ba2f6afc4,b1aed1a596ad02d2aa2eb5c5af431a7ba2f6afc4,"cmd/vet: add arm64 asmdecl support

Change-Id: I5ab54616488bc9bc41aefb27b45d72c36fc4fbde
Reviewed-on: https://go-review.googlesource.com/9211
Reviewed-by: Rob Pike <r@golang.org>"
alandonovan,2015-04-21 15:18:52,https://api.github.com/repos/golang/tools/git/commits/bc61fa75b34722a68a7a4d8948576ba1253347a6,bc61fa75b34722a68a7a4d8948576ba1253347a6,"go/ssa: acquire TestEnclosingFunction from go/loader package.

Not sure how it ended up there...

Change-Id: I0d48025fd6595714b0c52cadf305b3e06e2b9b84
Reviewed-on: https://go-review.googlesource.com/9171
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-04-17 19:17:55,https://api.github.com/repos/golang/tools/git/commits/41d9a0e7b2d60d52ef1caf232b081c16af220b44,41d9a0e7b2d60d52ef1caf232b081c16af220b44,"go/loader: rename Example functions to appease godoc

And other minor cosmetic tweaks.

Change-Id: Ic75d405e6eca8f29b7e97de66fb86f1f39bcae1e
Reviewed-on: https://go-review.googlesource.com/9035
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-04-14 20:56:02,https://api.github.com/repos/golang/tools/git/commits/9c57c19a58835b00c0e3e283952087842242e49b,9c57c19a58835b00c0e3e283952087842242e49b,"go/loader: eliminate ImportFromBinary option and PackageCreated hook

The loader package now loads, parses, and type-checks a whole program
from source, and that is all.

Also:
- simplified loader logic
- ssa.Create is gone; use ssautil.CreateProgram.
- ssautil.LoadPackage renamed to BuildPackage.
  It is now independent of go/types' Import hook and the Packages map.
- ssadump: -importbin flag removed.
  The value of this flag was that it caused the tool to print IR
  for only a single package; this is now the normal behaviour.

Fixes #9955

Change-Id: I4571118258ab1a46dccece3241b7dc51401a3acc
Reviewed-on: https://go-review.googlesource.com/8953
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-04-16 19:42:28,https://api.github.com/repos/golang/tools/git/commits/1b6275a2ec3945664bc6a7bb2efa4e46a62a4b50,1b6275a2ec3945664bc6a7bb2efa4e46a62a4b50,"go/loader: API examples

Also: make it easier to find packages.  Hide the importMap field
(never used) and expose a (*Program).Package method which searches
importMap and then Created.

Also: move huge comments into doc.go.

Change-Id: Iad96a12524b7c41ad9acd1e806af23171e71fa7c
Reviewed-on: https://go-review.googlesource.com/9030
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-04-14 21:56:55,https://api.github.com/repos/golang/tools/git/commits/77d380c9e6de4a0e740c35f0f4ebe0117a766c44,77d380c9e6de4a0e740c35f0f4ebe0117a766c44,"go/gcimporter: populate (*types.Package).Imports

All importers should populate the set of imported packages.  In Go 1.5
importer API, there will be no package map from which to compute the
transitive closure of dependencies, and SSA package creation needs
this information.

+ test.

Change-Id: I1c2823b07bf7316aa62c80e2ef2a0755cf6f5384
Reviewed-on: https://go-review.googlesource.com/8924
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-04-08 20:14:19,https://api.github.com/repos/golang/tools/git/commits/20186168d5994c0682d36c5e57e190cd5b81a79c,20186168d5994c0682d36c5e57e190cd5b81a79c,"go/ssa/ssautil: break ssa->loader dependency

Remove all dependencies from non-test code in go/ssa to go/loader,
except the deprecated Create function which will be eliminated in
favor of ssautil.CreateProgram in a mechnanical followup.

Add Examples of two main use cases of SSA construction:
loading a complete program from source; and
building a single package, loading its dependencies from import data.

Add tests to ssautil of the two load functions.
Suggestions welcome for better names.

Planned follow-ups:
- replace all references to ssa.Create with ssautil.CreateProgram and eliminate it.
- eliminate support in go/loader for the ImportBinary flag, and the
  PackageCreated hook which is no longer needed since clients can
  create the package themselves (see Example).

Step 1 to fixing issue 9955.

Change-Id: I4e64df67fcd5b7f0c0388047e06cea247fddfec5
Reviewed-on: https://go-review.googlesource.com/8669
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-04-14 04:01:35,https://api.github.com/repos/golang/tools/git/commits/14c815ee28144ea6fec48a81fb48b6a4fcb09164,14c815ee28144ea6fec48a81fb48b6a4fcb09164,"cmd/vet: remove (another) dependency on go/astutil

Missed this in a prior change.

Change-Id: I7358c17b73a1221cb8f9dff6b808fdea8b13ec06
Reviewed-on: https://go-review.googlesource.com/8916
Reviewed-by: Rob Pike <r@golang.org>"
griesemer,2015-04-14 03:53:55,https://api.github.com/repos/golang/tools/git/commits/850ba653f716f096ad4faa40cf6d0cc20c4dbcb9,850ba653f716f096ad4faa40cf6d0cc20c4dbcb9,"Revert ""cmd/vet: switch to go/types from std repo""

This reverts commit 5b72e8e9bb5dc77f14e0a58f15c95b64b231e87d.

Change-Id: I75270045022d69444b7812f290cdd5861af13feb
Reviewed-on: https://go-review.googlesource.com/8915
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-04-11 06:10:34,https://api.github.com/repos/golang/tools/git/commits/5b72e8e9bb5dc77f14e0a58f15c95b64b231e87d,5b72e8e9bb5dc77f14e0a58f15c95b64b231e87d,"cmd/vet: switch to go/types from std repo

Depends on https://golang.org/cl/8767/.

With this change, cmd/vet does not depend on x/tools anymore
and could be moved into the std repo if so desired.

Change-Id: Ia205c6e1a6a63eebb27776064e5c24491043b683
Reviewed-on: https://go-review.googlesource.com/8791
Reviewed-by: Rob Pike <r@golang.org>"
griesemer,2015-04-08 18:11:27,https://api.github.com/repos/golang/tools/git/commits/069d2f3bcb68257b627205f0486d6cc69a231ff9,069d2f3bcb68257b627205f0486d6cc69a231ff9,"go/types, go/gcimporter: backport changes from std repo

This is a 1:1 backport of the following changes:

https://go-review.googlesource.com/8611
https://go-review.googlesource.com/8621

Change-Id: I4a75d73cb99a7d104d32553f5530408c2b6d81b8
Reviewed-on: https://go-review.googlesource.com/8629
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-04-08 16:29:37,https://api.github.com/repos/golang/tools/git/commits/bf8b6a5c4c0612bab11f36ac4968a47e97e4c5ac,bf8b6a5c4c0612bab11f36ac4968a47e97e4c5ac,"go/types: reenable disabled test (backport from std repo go/types)

Change-Id: I93a914dcfc5bd2cfa8078cec683a46225b665e44
Reviewed-on: https://go-review.googlesource.com/8626
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-04-07 20:19:34,https://api.github.com/repos/golang/tools/git/commits/48e2a5be4486186d3ad737b936a6ecc45dbc4f29,48e2a5be4486186d3ad737b936a6ecc45dbc4f29,"cmd/vet: remove dependency on go/ast/astutil

This package was only imported for the trivial Unparen function.

Change-Id: I0ead916a7fdb469a26b4fe99c6964a8ed1438c49
Reviewed-on: https://go-review.googlesource.com/8566
Reviewed-by: Rob Pike <r@golang.org>"
tommyschaefer,2015-04-07 20:03:20,https://api.github.com/repos/golang/tools/git/commits/0770aced4f7ca3bc002d8b94a43f9970a72b6889,0770aced4f7ca3bc002d8b94a43f9970a72b6889,"cmd/tipgodoc: Kill godoc process if http.ListenAndServe fails

Currently, if for some reason http.ListenAndServe fails, any running
running godoc processes don't get killed. I don't think this would ever
actually happen because, with godoc being set up in a separate go
routine, http.ListenAndServe would always(?) fail before the godoc
server started.

This change ensures that, if a Proxy has a cmd, it is closed when
http.ListenAndServe fails.

Change-Id: I0d3bfae0c16bc583248c2052a4d7a84c95127e76
Reviewed-on: https://go-review.googlesource.com/8570
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2015-04-07 22:18:44,https://api.github.com/repos/golang/tools/git/commits/8a634c58319a74d0acd921dfdc4a4fe631a35dbc,8a634c58319a74d0acd921dfdc4a4fe631a35dbc,"go/ssa/interp: don't let target calls to runtime.GOMAXPROCS set host state

...otherwise the interpreted program can make the whole test suite
slow.  Just ignore the argument and return the current GOMAXPROCS
value.

Change-Id: Ife2ad6c53e6fdf9feea1d1b231d8d796b3db3a24
Also: add missing intrinsic for os.runtime_beforeExit.
Reviewed-on: https://go-review.googlesource.com/8591
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-03-03 20:01:37,https://api.github.com/repos/golang/tools/git/commits/4a08fb6fc335489d063834778b71d1af382f4c27,4a08fb6fc335489d063834778b71d1af382f4c27,"cmd/vet: -unusedresult: report calls of pure functions in expression statements

Change-Id: Ib8b6eaecd56ae15c44fb8ac11c781244964428f1
Reviewed-on: https://go-review.googlesource.com/6661
Reviewed-by: David Symonds <dsymonds@golang.org>
Reviewed-by: Rob Pike <r@golang.org>"
alandonovan,2015-04-06 19:11:42,https://api.github.com/repos/golang/tools/git/commits/ab1b92fc435bcbd8ff53c3c72388b1afdc870689,ab1b92fc435bcbd8ff53c3c72388b1afdc870689,"oracle: ignore errors during import graph construction

Such errors include files without package decl, or conflicting package
decls.  We ignore type errors, so we should ignore import errors too.

Fixes #10347

Change-Id: I9011a9099a2804281ea2d989d7263a9ce691be16
Reviewed-on: https://go-review.googlesource.com/8498
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
griesemer,2015-04-06 19:29:37,https://api.github.com/repos/golang/tools/git/commits/5cf8a6b1aa6d8384af8899652074c5d863a18212,5cf8a6b1aa6d8384af8899652074c5d863a18212,"go/types: remove dependency on go/ast/astutil

This package was only imported for the trivial Unparen function.

Change-Id: I14f8d91bc0afaa6ab3aa797a53e42e56b59ffcbe
Reviewed-on: https://go-review.googlesource.com/8499
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-04-06 16:22:14,https://api.github.com/repos/golang/tools/git/commits/f0d8175b3e2ce217a75e5ee6370594dd30be56a8,f0d8175b3e2ce217a75e5ee6370594dd30be56a8,"oracle: skip cgo processing for queries that don't need SSA/PTA

This makes type-based queries faster and more robust because they
needn't invoke a C compiler, at the cost of worse results in/near .go
files that import ""C"".  It's particularly important for ""referrers""
since a refererrs query on a name from the standard library can load
every package in the workspace.

Fixes issue 10347

Change-Id: I2f65474ce963de5c0897ba67eeb26290dd449cf1
Reviewed-on: https://go-review.googlesource.com/8493
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-04-02 17:05:03,https://api.github.com/repos/golang/tools/git/commits/8a9ac1b8064014c8bab32a509a3214b09beeb8a8,8a9ac1b8064014c8bab32a509a3214b09beeb8a8,"go/loader: limit concurrency of I/O operations during parsing

This is a putative fix for the file descriptor exhaustion problem
described in https://github.com/golang/go/issues/10306.

Change-Id: If603fb9bbaec1b53f6b44d15b2c202e4670035ce
Reviewed-on: https://go-review.googlesource.com/8421
Reviewed-by: Matt Joiner <anacrolix@gmail.com>
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-04-02 14:01:50,https://api.github.com/repos/golang/tools/git/commits/a18bb1d557dac8d19062dd0240b44ab09cfa14fd,a18bb1d557dac8d19062dd0240b44ab09cfa14fd,"oracle: add TODO

Change-Id: I315af962e43a3ae9c8e5cad13766d2200484fdf9
Reviewed-on: https://go-review.googlesource.com/8386
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-04-02 14:00:08,https://api.github.com/repos/golang/tools/git/commits/d4e70101500b43ffe705d4c45e50dd4f1c8e3b2e,d4e70101500b43ffe705d4c45e50dd4f1c8e3b2e,"go/pointer: add TODO comment

Change-Id: Ic383036a6b3aa092aa571694bba86d821428f236
Reviewed-on: https://go-review.googlesource.com/8385
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-04-02 13:58:18,https://api.github.com/repos/golang/tools/git/commits/c6a14e550a1216d77d0bac74d1bce3891c6044b1,c6a14e550a1216d77d0bac74d1bce3891c6044b1,"cmd/ssadump: fix usage message

Change-Id: I95fee5042e39156462a5c21ade29d7216474be02
Reviewed-on: https://go-review.googlesource.com/8384
Reviewed-by: Robert Griesemer <gri@golang.org>"
robpike,2015-03-31 17:47:12,https://api.github.com/repos/golang/tools/git/commits/65b5a8eca7a871e7c1d99722e4a43a4a6e32ebe0,65b5a8eca7a871e7c1d99722e4a43a4a6e32ebe0,"cmd/cover: cover funcs in if, for, switch clauses

This peculiar case arose in range statements but there are other contexts
and one turned up in the auto-generated translation of the compiler.
Take care of it always.

	for i := 0; i < 0; func() {i++; q=q.Link}() { ... }

That code has been given the obvious rewrite but we should still handle it.

Odd but easy to fix (tricky to test).

Fixes #10269.

Change-Id: I66e1404eb24da15a24be7f67403e19ed66fba0a7
Reviewed-on: https://go-review.googlesource.com/8284
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-03-31 14:39:18,https://api.github.com/repos/golang/tools/git/commits/dce4131cda0b51ec3ed751dbe58745fd3974ed31,dce4131cda0b51ec3ed751dbe58745fd3974ed31,"oracle: referrers: also scan *_test.go files for references.

Added test case.  This required making the result sort order
deterministic when the results are spread across several packages.

Also: implements: print type names relative to query package.
Updated tests.

Change-Id: I9f882cd358a612585a4aac9a117b89d9131a294e
Reviewed-on: https://go-review.googlesource.com/8283
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-03-30 19:44:25,https://api.github.com/repos/golang/tools/git/commits/a27f5b3448cac6aa82f9fd4c1d71dc245593ddd5,a27f5b3448cac6aa82f9fd4c1d71dc245593ddd5,"oracle: factor part of the initial setup for PTA queries

The check for len(argv)==0 now only applies to these modes.

Also, more consistent variable naming.

Change-Id: I9adb6bebc819eb43d54ddf63c42d952671ce9236
Reviewed-on: https://go-review.googlesource.com/8244
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-03-30 15:21:48,https://api.github.com/repos/golang/tools/git/commits/b28839e4bdc90af193b3e38f473e5f9175158b41,b28839e4bdc90af193b3e38f473e5f9175158b41,"oracle: several major improvements

Features:

  More robust: silently ignore type errors in modes that don't need
  SSA form: describe, referrers, implements, freevars, description.
  This makes the tool much more robust for everyday queries.

  Less configuration: don't require a scope argument for all queries.
  Only queries that do pointer analysis need it.
  For the rest, the initial position is enough for
  importQueryPackage to deduce the scope.
  It now works for queries in GoFiles, TestGoFiles, or XTestGoFiles.
  (It no longer works for ad-hoc main packages like
  $GOROOT/src/net/http/triv.go)

  More complete: ""referrers"" computes the scope automatically by
  scanning the import graph of the entire workspace, using gorename's
  refactor/importgraph package.  This requires two passes at loading.

  Faster: simplified start-up logic avoids unnecessary package loading
  and SSA construction (a consequence of bad abstraction) in many
  cases.

  ""callgraph"": remove it.  Unlike all the other commands it isn't
  related to the current selection, and we have
  golang.org/x/tools/cmdcallgraph now.

Internals:

  Drop support for long-running clients (i.e., Pythia), since
  godoc -analysis supports all the same features except ""pointsto"",
  and precomputes all the results so latency is much lower.

  Get rid of various unhelpful abstractions introduced to support
  long-running clients.  Expand out the set-up logic for each
  subcommand.  This is simpler, easier to read, and gives us more
  control, at a small cost in duplication---the familiar story of
  abstractions.

  Discard PTA warnings.  We weren't showing them (nor should we).

  Split tests into separate directories (so that importgraph works).

Change-Id: I55d46b3ab33cdf7ac22436fcc2148fe04c901237
Reviewed-on: https://go-review.googlesource.com/8243
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-03-26 18:07:29,https://api.github.com/repos/golang/tools/git/commits/68b5f7541d840b07800dc21d83ebdaa8ca8a771f,68b5f7541d840b07800dc21d83ebdaa8ca8a771f,"cmd/oracle: usability improvements to ""describe"", ""referrers""

Emacs integration:
- eliminate oracle minor mode
- in go-mode, bind F5, F6 to ""describe"", ""referrers"".
  This reverts a previous policy decision but convenience matters too.
- don't insist on an analysis scope for modes that don't do PTA.
- don't hide the filename as ""▶""; show the last 20 chars.
  (Especially useful for ""referrers"" mode.)
- output postprocessing: don't get stuck in a loop if the output
  is not as expected (e.g. when it includes a panic log).

referrers:
- show the matching lines (like grep does).
  We do the I/O in parallel.

Change-Id: I86b18c1d3a4d9fa4242984cba62b314796669d8e
Reviewed-on: https://go-review.googlesource.com/8120
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
josharian,2015-03-25 18:52:44,https://api.github.com/repos/golang/tools/git/commits/57d2ff39c71a8e76350255ccea87bbddb55c0f0b,57d2ff39c71a8e76350255ccea87bbddb55c0f0b,"go/ast/astutil: match prefix segments when adding imports

AddImport and AddNamedImport attempt to place new
imports in roughly the correct place--and thus the
correct group--by matching prefixes. Matching prefixes
byte-by-byte led to ""regexp"" being grouped with ""rsc.io/p"".
Instead, match prefixes by segments.

Fixes golang/go#9961.

Change-Id: I52b7c58a9a2fbe85c2b5297e50c87d409364bda3
Reviewed-on: https://go-review.googlesource.com/8090
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
robpike,2015-03-27 20:47:18,https://api.github.com/repos/golang/tools/git/commits/0c09ff325ac41535a3d5fb6d539c32aca981bada,0c09ff325ac41535a3d5fb6d539c32aca981bada,"cmd/cover: preserve //go: comments

Cover deleted all comments because they can break the simple way that
counters are injected into the rewritten source. But //go: comments have
semantic value, and for instance go test -cover runtime fails during
compilation because of their absence from the annotated source.

We can keep the //go: comments because they are at the beginning of
the line and are not affected by our counter injection.

Fixes #10270.

After this CL, go test -cover runtime works.
A testing strategy that does not involve a golden file would be welcome
but I can't think of one.

Change-Id: I73f7b7a36383a8efed8e33fa2414cd0eac7d015a
Reviewed-on: https://go-review.googlesource.com/8173
Reviewed-by: Robert Griesemer <gri@golang.org>"
Sajmani,2015-03-27 18:09:40,https://api.github.com/repos/golang/tools/git/commits/1e216dc2e33abac72c076ca48ead2dcb476c2ddc,1e216dc2e33abac72c076ca48ead2dcb476c2ddc,"goimports: create a var to permit custom implementations of flag parsing and
startup work.

Change-Id: I9e60ec785313295bce614b5735238943af607223
Reviewed-on: https://go-review.googlesource.com/8204
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
robpike,2015-03-26 23:10:09,https://api.github.com/repos/golang/tools/git/commits/e77366c32d8a84eb72bf83ca6c0d77e3afe1626d,e77366c32d8a84eb72bf83ca6c0d77e3afe1626d,"cmd/cover: do not cover statements after panic

Given
	x()
	panic(1)
	y()

the y should not show as covered.

Fixes #10185

Change-Id: Iec61f1b096a888e6727be5f4526508654f5d3c91
Reviewed-on: https://go-review.googlesource.com/8140
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-01-09 22:46:21,https://api.github.com/repos/golang/tools/git/commits/af0a4481dd36113fd967a37a64d887d4b9d3425e,af0a4481dd36113fd967a37a64d887d4b9d3425e,"go/types: permit type elision from composite literal map keys

Per pending https://go-review.googlesource.com/2591 .
Depends on: https://go-review.googlesource.com/2621 .

Change-Id: I2aa82916454504b5852518b3ef7fc8637126d0c7
Reviewed-on: https://go-review.googlesource.com/2623
Reviewed-by: Alan Donovan <adonovan@google.com>"
sbinet,2015-03-17 17:35:54,https://api.github.com/repos/golang/tools/git/commits/473fd854f8276c0b22f17fb458aa8f1a0e2cf5f5,473fd854f8276c0b22f17fb458aa8f1a0e2cf5f5,"godoc/static: insert newlines in -src mode

Running 'godoc -src' would end up with concatenated sources:

$ godoc -src github.com/bradfitz/http2 Frame
// a frameParser parses a frame given its FrameHeader and payload
// bytes. The length of payload will always equal fh.Length (which
// might be 0).
type frameParser func(fh FrameHeader, payload []byte) (Frame, error)//
A Frame is the base interface implemented by all frame types.
// Callers will generally type-assert the specific frame type:
// *HeadersFrame, *SettingsFrame, *WindowUpdateFrame, etc.
//
// Frames are only valid until the next call to Framer.ReadFrame.
type Frame interface {

Unconditionnally insert two newlines:

$ godoc -src github.com/bradfitz/http2 Frame
// a frameParser parses a frame given its FrameHeader and payload
// bytes. The length of payload will always equal fh.Length (which
// might be 0).
type frameParser func(fh FrameHeader, payload []byte) (Frame, error)

// A Frame is the base interface implemented by all frame types.
// Callers will generally type-assert the specific frame type:
// *HeadersFrame, *SettingsFrame, *WindowUpdateFrame, etc.
//
// Frames are only valid until the next call to Framer.ReadFrame.
type Frame interface {

Fixes #9726.

Change-Id: I51ee04e53d4962c890ea601125eda8fce84d6a46
Reviewed-on: https://go-review.googlesource.com/7681
Reviewed-by: Robert Griesemer <gri@golang.org>"
josharian,2015-03-18 16:33:06,https://api.github.com/repos/golang/tools/git/commits/8364437ab220c3734d249cab363e56403f2c5770,8364437ab220c3734d249cab363e56403f2c5770,"tools: add codereview.cfg

See golang.org/cl/4131 for context.

Change-Id: I474d4d455ad0207bf6cea6c36fc8bdcea3405b47
Reviewed-on: https://go-review.googlesource.com/7726
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
robpike,2015-03-17 13:15:38,https://api.github.com/repos/golang/tools/git/commits/53f3b29c5de72b73d7836e1e6112e45485e9f2fe,53f3b29c5de72b73d7836e1e6112e45485e9f2fe,"cmd/cover: fix race in test

Silly test added yesterday requires that some code in a goroutine executes.
Make sure it does.

Change-Id: I7e852454736e300151473986cc437a70b41dc9b7
Reviewed-on: https://go-review.googlesource.com/7691
Reviewed-by: Russ Cox <rsc@golang.org>"
alandonovan,2015-02-25 17:37:17,https://api.github.com/repos/golang/tools/git/commits/e591801c2d4e9296e6c1912b807665f160c01345,e591801c2d4e9296e6c1912b807665f160c01345,"refactor/rename: fix misplaced 'continue'.

This was not a visible bug since the only caller discards the relevant
result, so I also deleted the result.

Fixes #9999

Change-Id: I276d6523b2891d3cb9c8137448e1aed32a5fd197
Reviewed-on: https://go-review.googlesource.com/5921
Reviewed-by: Michael Matloob <michaelmatloob@gmail.com>
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-03-17 17:11:52,https://api.github.com/repos/golang/tools/git/commits/bd8de46c84478b66c31ac6fef404aa830805cdb7,bd8de46c84478b66c31ac6fef404aa830805cdb7,"go/ssa/interp/testdata: remove comment about now-fixed go/types bug

Change-Id: I55372a40c0049368a74247fe1819be384313f838
Reviewed-on: https://go-review.googlesource.com/7666
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-03-17 15:17:36,https://api.github.com/repos/golang/tools/git/commits/22067118645556995c55964f3e5c82470e0b0c9f,22067118645556995c55964f3e5c82470e0b0c9f,"refactor/rename: don't make backups; overwrite in place, preserving inode.

This avoids littering the tree, and confusing some editors (e.g. Atom)
that expect the inode number to remain constant.

Change-Id: I2faeda1ed1b01e5e4cc720744ea3c99ab29e7333
Reviewed-on: https://go-review.googlesource.com/7664
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-03-05 19:55:52,https://api.github.com/repos/golang/tools/git/commits/782516301f02ca59d4314e74fb20a90a374ba5b2,782516301f02ca59d4314e74fb20a90a374ba5b2,"cmd/eg: improve usage and help messages

eg with no arguments prints its usage, including a hand-written flag summary.
eg -help shows the detailed help message.

Change-Id: I615d8de3985ced1e86e9d7cafa9ef679079b249c
Reviewed-on: https://go-review.googlesource.com/6951
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-03-13 18:29:51,https://api.github.com/repos/golang/tools/git/commits/33fcc815f25acbad230357a496e783fb450fb0fe,33fcc815f25acbad230357a496e783fb450fb0fe,"go/ssa: fix incorrect SSA code for composite literals

Composite literals are initialized in place where possible, but in
cases the initializer expression refers to the variable that
is being updated

	x = T{a: x.a}

we must ensure that the RHS is fully evaluated before we execute any
stores to x.  This means we need to record the sequence of stores in a
""store buffer"" and execute it only once the entire composite literal
has been evaluated.

Fixes issue #10127

Change-Id: If94e3b179beb25feea5b298ed43de6a199aaf347
Reviewed-on: https://go-review.googlesource.com/7533
Reviewed-by: Robert Griesemer <gri@golang.org>"
robpike,2015-01-14 23:48:06,https://api.github.com/repos/golang/tools/git/commits/ed1e7c5cf2370fe4bcb5dfd8b6376bc8ae43e04d,ed1e7c5cf2370fe4bcb5dfd8b6376bc8ae43e04d,"vet: fix documentation about recursive scanning

It used to do packages only when run by the go tool, but it was
fixed a while back to handle packages properly when doing a
directory walk. Remove the incorrect information from the
documentation.

Change-Id: I961340bb84e48474c94ee03bf88f9136492c0226
Reviewed-on: https://go-review.googlesource.com/7642
Reviewed-by: Andrew Gerrand <adg@golang.org>"
robpike,2015-03-16 21:52:01,https://api.github.com/repos/golang/tools/git/commits/26365e4e90c98f4b41230c50615e3a856598c66a,26365e4e90c98f4b41230c50615e3a856598c66a,"cmd/cover: fix handling of empty type switch

Just missed a case (ha!) in the tree walk. Dup the code for an empty switch, add test.

Fixes #10163.

Change-Id: I3d50ab6cb450ca21e87213291eaab8cbe924fac5
Reviewed-on: https://go-review.googlesource.com/7641
Reviewed-by: Andrew Gerrand <adg@golang.org>"
davecheney,2015-03-13 05:21:50,https://api.github.com/repos/golang/tools/git/commits/0ee0dd6ea86cdfe5cac3522bfd6c4c69f6dbc25f,0ee0dd6ea86cdfe5cac3522bfd6c4c69f6dbc25f,"cmd/godoc: skip tests on arm platforms

Skip tests on arm platforms.

The godoc tests require large amounts of memory, in excess of 700mb in -index mode which none of the arm builders have spare.

Because of their requirements the tests can be killed by the test runner leaving stray godoc processes spinning in swap trying to -index.

Change-Id: I1544d56e9d9aabbbaac21adeebfb9e2690bd2da5
Reviewed-on: https://go-review.googlesource.com/7540
Reviewed-by: Andrew Gerrand <adg@golang.org>"
griesemer,2015-03-13 21:35:38,https://api.github.com/repos/golang/tools/git/commits/e4a1c78f0f69fbde8bb74f5e9f4adb037a68d753,e4a1c78f0f69fbde8bb74f5e9f4adb037a68d753,"go/types: typecheck loop body even if range clause is broken

Be more tolerant in the presence of incorrect range clauses
if for loops and type-check loop body with minimal assumptions
about iteration variables. (Before, in some cases we would simply
ignore the loop body in such cases).

Fixes #10148.

Change-Id: I0b66f81875348088c1a7fa04ccdcbfe768f2eb6c
Reviewed-on: https://go-review.googlesource.com/7525
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-03-13 16:44:27,https://api.github.com/repos/golang/tools/git/commits/868c429971639d95d5e37089c6397e64108fce74,868c429971639d95d5e37089c6397e64108fce74,"go/ssa/interp: fix bug causing subelements of aggregates to change address.

Since all SSA values are immutable, no value copying is required for
any operations except those that load from or store to a variable;
those operations must do an aggregate copy, i.e., descend into struct
and array elements.  All other calls to copyVal have been removed;
they were pieces of duct tape, as I had long suspected.

The descent must be based on the static type information, not the
""shape"" of the dynamic value, since two reflect.Value structs may have
different internal shapes.  We clobber the true definition of
reflect.Value's underlying type, replacing it with struct{interface{},
interface{}}, which is close enough to make the load/store functions
work.

+ Test

Change-Id: I5e239d91ed0cb2a669a9f75766024fe1f9a5c347
Reviewed-on: https://go-review.googlesource.com/7532
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-03-12 18:33:01,https://api.github.com/repos/golang/tools/git/commits/8cc1c75580c242028666ac6e9cbf90d86b11c216,8cc1c75580c242028666ac6e9cbf90d86b11c216,"go/loader: support relative imports like the go tool does

Config.Cwd sets the base directory; os.Getwd is its default.

+Test.

Change-Id: I213abfb30085cd1306719ed6f94aeae6a3170bc0
Reviewed-on: https://go-review.googlesource.com/7502
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-03-12 17:23:14,https://api.github.com/repos/golang/tools/git/commits/bf80246757bad8f63b2f130232f17db69150b7c9,bf80246757bad8f63b2f130232f17db69150b7c9,"oracle/testdata: avoid sort.Sort so that my $GOROOT doesn't appear in output

Sorry for the oversight.

Change-Id: Ibb686dbee996b5223bd223fdd3afaab243a7a3ee
Reviewed-on: https://go-review.googlesource.com/7501
Reviewed-by: Robert Griesemer <gri@golang.org>"
speter,2015-03-10 11:29:27,https://api.github.com/repos/golang/tools/git/commits/8239116d598cef15982af82eed790944f82fa3a4,8239116d598cef15982af82eed790944f82fa3a4,"cmd/godoc: exclude /pkg from search indexing

On tip, search included redundant source results from /pkg/bootstrap
(with broken links as godoc doesn't support source files under /pkg).
This change excludes all directories under /pkg from indexing.

Fixes golang/go#10024.

Change-Id: I0c69d22ff08d131f9c37c91a7711db6a4ec53fd4
Reviewed-on: https://go-review.googlesource.com/7267
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-03-10 01:13:37,https://api.github.com/repos/golang/tools/git/commits/3b0cd1bf65de128b09351d8a5fee592ef37eea9a,3b0cd1bf65de128b09351d8a5fee592ef37eea9a,"cmd/tipgodoc: increase startup 'health check' deadline

Also use a more reliable implementation.

Change-Id: I9e6858c7e9bdb60f1fb4e060e6d4d1b3762b83bc
Reviewed-on: https://go-review.googlesource.com/7260
Reviewed-by: Minux Ma <minux@golang.org>"
speter,2015-03-07 22:25:49,https://api.github.com/repos/golang/tools/git/commits/a160d803d7944e4c5a0f79836c20b78a94a807d6,a160d803d7944e4c5a0f79836c20b78a94a807d6,"cmd/tipgodoc: enable indexing

Run godoc indexing just once on startup. Wait for indexing to complete
before switching to new side. Increase startup timeout to accommodate for
indexing.

Updates golang/go#9996.

Change-Id: I1e746a68b7d787e6d7f180c2617ea75f0d3291f8
Reviewed-on: https://go-review.googlesource.com/7120
Reviewed-by: Andrew Gerrand <adg@golang.org>"
paulsmith,2015-03-07 04:53:24,https://api.github.com/repos/golang/tools/git/commits/92211c448d04f8672d287e7ef3272d5e86abadbc,92211c448d04f8672d287e7ef3272d5e86abadbc,"cmd/stringer: remove os.Exit call from Usage func

The caller of Usage should call os.Exit -- Usage shouldn't call it.

Change-Id: I3decf662883fb2a6b19b7035138ee8a06a02de08
Reviewed-on: https://go-review.googlesource.com/7110
Reviewed-by: Andrew Gerrand <adg@golang.org>"
speter,2015-03-06 11:24:21,https://api.github.com/repos/golang/tools/git/commits/c327a7c00bfa16aba015bc8084b40e3d99f0a213,c327a7c00bfa16aba015bc8084b40e3d99f0a213,"cmd/godoc: add -index_interval

Updates golang/go#9996.

Change-Id: I6112b1c32832aaa6604b096cfe7a8833f092b17a
Reviewed-on: https://go-review.googlesource.com/7031
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-01-23 19:53:23,https://api.github.com/repos/golang/tools/git/commits/bdcea2c1b36a391fd43708dcb8bdca48adf3d724,bdcea2c1b36a391fd43708dcb8bdca48adf3d724,"go/buildutil: use chan (not func) in the ForEachPackage API

The callbacks are intentionally concurrent, making this function very
easy to misuse (most clients so far have got it wrong, even my own).
Using a channel in the API makes the concurrency obvious, the
correct usage easy, and the client control flow simpler.

Change-Id: Ied38c3ed5c98b40eb1b322a984ed9dc092ac0918
Reviewed-on: https://go-review.googlesource.com/3250
Reviewed-by: Sameer Ajmani <sameer@golang.org>"
alandonovan,2015-03-05 19:35:50,https://api.github.com/repos/golang/tools/git/commits/9957739054eda1f0e99582dad0d702da8a3d7d66,9957739054eda1f0e99582dad0d702da8a3d7d66,"go/ssa: treat declared init functions less specially

Before this change, declared init functions were not package members;
this choice dates from when go/types did not create Func objects for them.

Now, they have an Object.  They appear in Members, keyed by ""init#%d""
(sequence number) for uniqueness.  They can be enumerated.  They can
be looked up from a *types.Func via (*Program).FuncValue.

Caveat: fn.Object.Name() no longer equals fn.Name() in all cases.

NB: incompatible API change!  (Your build will not break though.)

Change-Id: I2de873079fd57329e6c2f55a282940f6699a77a1
Reviewed-on: https://go-review.googlesource.com/6950
Reviewed-by: Robert Griesemer <gri@golang.org>
Reviewed-by: Peter Collingbourne <pcc@google.com>"
alandonovan,2015-03-02 19:23:59,https://api.github.com/repos/golang/tools/git/commits/4744be3abc70249546ce31c32fa9b5a5e96b5ad1,4744be3abc70249546ce31c32fa9b5a5e96b5ad1,"refactor/eg: use format.Node not printer.Fprint for canonical output

Fixes golang/go#10038

Change-Id: If3243f0c68fc0442dcc1e2dd71cbdc629beff70c
Reviewed-on: https://go-review.googlesource.com/6481
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
griesemer,2015-03-02 04:59:15,https://api.github.com/repos/golang/tools/git/commits/133ecf9210d4e3560916c6e5ece2b91a97399a9d,133ecf9210d4e3560916c6e5ece2b91a97399a9d,"go/types: better error message for use of _ in type switch

Change-Id: If690d2d9607b3632451df2681c293835321ed9bd
Reviewed-on: https://go-review.googlesource.com/6413
Reviewed-by: Alan Donovan <adonovan@google.com>"
speter,2015-02-28 03:16:22,https://api.github.com/repos/golang/tools/git/commits/705f1dfb24353e2ea08365b033140fe6bc10bc63,705f1dfb24353e2ea08365b033140fe6bc10bc63,"godoc/static: fix variable reference in search.txt

Change to match searchdoc.html which works.
(Was referring to ""$val.Idents"" in line 26, but ""$val"" here is
already an element of Idents.)
Also clarify naming and comments for makestatic.

Fixes golang/go#10022.

Change-Id: Ia3f2fdadd5d10f31a1825e8db966b6e92da2b93e
Reviewed-on: https://go-review.googlesource.com/6236
Reviewed-by: Minux Ma <minux@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-02-27 22:05:06,https://api.github.com/repos/golang/tools/git/commits/8913eaef7527f8112f65ce5c73f1282354de5fe0,8913eaef7527f8112f65ce5c73f1282354de5fe0,"go/loader: name unnamed packages so errors make sense

Add tests for:
- this naming
- missing file in created package

Change-Id: I07c66b66e845c52d4685509c362b34f1f0c92648
Reviewed-on: https://go-review.googlesource.com/6310
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-02-24 23:02:49,https://api.github.com/repos/golang/tools/git/commits/264bffc00c400ce4401cc2be15ed56e18a12e889,264bffc00c400ce4401cc2be15ed56e18a12e889,"oracle: when 'implements' is invoked on a method, show related methods, not types.

Fixes #9972

Change-Id: I25b65a64dcc4d551be3db8566783a9d23d410a2e
Reviewed-on: https://go-review.googlesource.com/5860
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-02-23 22:03:22,https://api.github.com/repos/golang/tools/git/commits/69db398fe0e69396984e3967724820c1f631e971,69db398fe0e69396984e3967724820c1f631e971,"go/loader: rename SourceImports flag to ImportFromBinary and invert sense

...since the zero value is more useful by far.

This is a breaking API change, obviously.  (One or two tests in this
CL have intentional been left using the zero value, i.e., they now
load source.)

Change-Id: I42287bfcdb1afef8ee84e5eac12534dd0a1fd5d2
Reviewed-on: https://go-review.googlesource.com/5653
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-02-23 22:19:41,https://api.github.com/repos/golang/tools/git/commits/b141c84c2e5a8291126375acbd8f4ac7d6b12588,b141c84c2e5a8291126375acbd8f4ac7d6b12588,"Fix broken build

Due to copy/paste from Google-internal branch.
I can't explain why I didn't test this; sorry.

Change-Id: I7b5f083a124c7cfb0fa6cb0506465a36bd79e983
Reviewed-on: https://go-review.googlesource.com/5654
Reviewed-by: Alan Donovan <adonovan@google.com>"
rsc,2015-02-23 15:57:19,https://api.github.com/repos/golang/tools/git/commits/c7a00958ec4b051c2ceca641429068cd5242f6b9,c7a00958ec4b051c2ceca641429068cd5242f6b9,"cmd/vet: fix unnamed FP check

While we're here, silence a print about failure to import fmt.
When it prints, it looks like a problem, and in fact the result
is never used in vet.

Change-Id: I76121b335026a2b09637608b997517be94fd167c
Reviewed-on: https://go-review.googlesource.com/5573
Reviewed-by: Rob Pike <r@golang.org>"
alandonovan,2015-02-23 19:24:45,https://api.github.com/repos/golang/tools/git/commits/4e75c2682bad0876577742afbbe6115d32abf6a4,4e75c2682bad0876577742afbbe6115d32abf6a4,"cmd/oracle: check errors from Flush and Close.

Change-Id: Ia3c61b37140a83769373b322de691362ac919a90
Reviewed-on: https://go-review.googlesource.com/5630
Reviewed-by: Robert Griesemer <gri@golang.org>"
josharian,2015-02-22 21:41:11,https://api.github.com/repos/golang/tools/git/commits/97b1f37055c1ef2ed70df42859fb7233246f0b16,97b1f37055c1ef2ed70df42859fb7233246f0b16,"cmd/present: do not show help text on localhost

Also allow escape key to hide help text.

Fixes golang/go#9950

Change-Id: Ifcffbafda68d383e529f4ad6119b384a9c5cef6a
Reviewed-on: https://go-review.googlesource.com/5531
Reviewed-by: Andrew Gerrand <adg@golang.org>"
egonelbre,2015-02-22 09:54:26,https://api.github.com/repos/golang/tools/git/commits/e0e177e89644ba97737ab5a8890d3f9ae29390ee,e0e177e89644ba97737ab5a8890d3f9ae29390ee,"cmd/present: Fixed printing of slides.

I moved print.css into styles.css - to make it obvious that it needs to be
considered when modifying the styles.css. I use @media screen for all the
framwork related css, this means the @media print doesn't have to start
overriding each property - also there's less chance of a problem when
something isn't overridden.

Change-Id: Ic58e8c80df3339b55f67140a47866a232e0d30a3
Reviewed-on: https://go-review.googlesource.com/5526
Reviewed-by: Andrew Gerrand <adg@golang.org>"
alandonovan,2015-02-20 16:23:27,https://api.github.com/repos/golang/tools/git/commits/51931f86bff673e8a6255ee0d5960fc7f78c609e,51931f86bff673e8a6255ee0d5960fc7f78c609e,"go/loader: define a FindPackage hook for build systems not compatible with ""go build"".

Google's proprietary build system, for example, does not use the
_test.go suffix to distinguish test from non-test files; this
information is stated explicitly in another form.

Change-Id: I3a8e919dbc556b6d5cfea1d2123da2616bd934d4
Reviewed-on: https://go-review.googlesource.com/5450
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
alandonovan,2015-02-20 15:42:06,https://api.github.com/repos/golang/tools/git/commits/f96426939ca581c13e94e15b8365e1957968bf40,f96426939ca581c13e94e15b8365e1957968bf40,"go/ssa: minor doc tweaks.

Change-Id: I116405d5014e4f2bccfff91e01945e10feacf9ee
Reviewed-on: https://go-review.googlesource.com/5442
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
adg,2015-02-18 20:58:27,https://api.github.com/repos/golang/tools/git/commits/2a105dc4ba99792ac380f48d154af4e10b822846,2a105dc4ba99792ac380f48d154af4e10b822846,"doc: add CONTRIBUTING.md

Change-Id: I121e02f941c4996d4ea44b699f2e10259bc0a665
Reviewed-on: https://go-review.googlesource.com/5219
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2015-02-18 17:53:21,https://api.github.com/repos/golang/tools/git/commits/9bdc5913730054d40cef92bf4b486e92e65d1d6d,9bdc5913730054d40cef92bf4b486e92e65d1d6d,"go/ssa: standardize parsing of BuilderMode flags.

ssadump's -build=G option is now spelled -import; it was never related to ssa.

Change-Id: Ic21cd8b6990c0ffd25651c17a842a63bfa5019cf
Reviewed-on: https://go-review.googlesource.com/5172
Reviewed-by: David Crawshaw <crawshaw@golang.org>"
nigeltao,2015-02-17 02:36:22,https://api.github.com/repos/golang/tools/git/commits/10d7cacb911f0ca07f31beebe5e019da2c2b393f,10d7cacb911f0ca07f31beebe5e019da2c2b393f,"cmd/vet: add color.CMYK to the whitelist of frozen structs.

Change-Id: I5164ef9a998a0807f80668b9140eac4b2f889049
Reviewed-on: https://go-review.googlesource.com/4997
Reviewed-by: David Symonds <dsymonds@golang.org>"
adg,2015-02-14 22:58:40,https://api.github.com/repos/golang/tools/git/commits/753a094e8ab3f6e567ce75c7feebea04917a137f,753a094e8ab3f6e567ce75c7feebea04917a137f,"cmd/present: show navigational help text on page load

Change-Id: I35e7cbec56a0617540316f0205c5a92e7532c491
Reviewed-on: https://go-review.googlesource.com/4910
Reviewed-by: Minux Ma <minux@golang.org>"
griesemer,2015-02-12 21:42:52,https://api.github.com/repos/golang/tools/git/commits/229cb676030665bfefd55ab45fd60ce82117e7e7,229cb676030665bfefd55ab45fd60ce82117e7e7,"go/gccgoimporter: disable test case (fix build, at least partially)

Change-Id: I021c4b4525006d27dd63f6eee16a5d219f6ba9dc
Reviewed-on: https://go-review.googlesource.com/4750
Reviewed-by: Alan Donovan <adonovan@google.com>"
matloob,2015-02-10 21:18:58,https://api.github.com/repos/golang/tools/git/commits/d29758bc2ee3aad47371bd6918424054ea9c1029,d29758bc2ee3aad47371bd6918424054ea9c1029,"cmd/gomvpkg: fix import rewrites for top-level moved package

The top-level moved package was skipped when doing import rewrites.
Don't skip that package.

Fixes #9811

Change-Id: I1c524ed44606586b5231e5adb6168079aa0e0228
Reviewed-on: https://go-review.googlesource.com/4470
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2015-02-10 05:33:58,https://api.github.com/repos/golang/tools/git/commits/88df7a741d4e0719f78564b5102e94665c3d742c,88df7a741d4e0719f78564b5102e94665c3d742c,"cmd/godoc: add golang.org/x/tour meta redirect

Change-Id: I2b855bb166612af391bb99742f6b6d58bc3ec226
Reviewed-on: https://go-review.googlesource.com/4340
Reviewed-by: David Symonds <dsymonds@golang.org>"
alandonovan,2015-02-09 15:45:08,https://api.github.com/repos/golang/tools/git/commits/159ae4d1631985184b8557168a1a5a6172c62a27,159ae4d1631985184b8557168a1a5a6172c62a27,"cmd/callgraph: fix careless quoting bug

Change-Id: I809a2ea711bb1a516dfcf8abf5e4d26061b4daf0
Reviewed-on: https://go-review.googlesource.com/4230
Reviewed-by: Sameer Ajmani <sameer@golang.org>"
griesemer,2015-02-06 20:39:19,https://api.github.com/repos/golang/tools/git/commits/fa3649f71fdbcee9cbc3fc4b8b820803c92b607e,fa3649f71fdbcee9cbc3fc4b8b820803c92b607e,"go/types: don't permit implicit assignments to unexported struct fields via literals

Change-Id: I74eec172ba5a319f91c95e33b047f489dfce0c95
Reviewed-on: https://go-review.googlesource.com/4090
Reviewed-by: Alan Donovan <adonovan@google.com>"
nigeltao,2015-02-05 04:42:17,https://api.github.com/repos/golang/tools/git/commits/9622599500adce60e13ea72b2ac73fd516d57493,9622599500adce60e13ea72b2ac73fd516d57493,"cmd/vet: allow spaces in struct tag values.

The validateStructTag code now closely mimics the StructTag.Get code in
package reflect.

This addresses the comment raised on issue #9500:
https://github.com/golang/go/issues/9500#issuecomment-70218780

See also https://go-review.googlesource.com/3953

Change-Id: I583f7447dbc5a2d7ecbb393d9bb6b1515cb10b18
Reviewed-on: https://go-review.googlesource.com/3952
Reviewed-by: Rob Pike <r@golang.org>"
jstemmer,2015-02-02 11:01:08,https://api.github.com/repos/golang/tools/git/commits/913f41fc5f1b7afd8f7c66c011c1ad368fa23fb8,913f41fc5f1b7afd8f7c66c011c1ad368fa23fb8,"cmd/vet: warn about zero arg index in print format

Argument indexes in a format string are one-based, however vet would not
warn when using a zero-index unless the type of the argument referenced
was not a string. That warning was misleading as it would say the type
was not a string. Vet will now print a correct warning when using a zero
index.

Included are tests for both cases.

Fixes #9752

Change-Id: I285e99990a86a653b4668b0c279d5f5f1c34f7aa
Reviewed-on: https://go-review.googlesource.com/3692
Reviewed-by: Rob Pike <r@golang.org>"
alandonovan,2015-01-30 18:30:23,https://api.github.com/repos/golang/tools/git/commits/0dda50d42a7564ec2d84149ab0ee90751d0dc589,0dda50d42a7564ec2d84149ab0ee90751d0dc589,"go/loader: improve robustness in face of input errors

    Before this change, many kinds of error would cause the loader to stop.
    making it brittle when analyzing large codebases, as in ""godoc -analysis"".

    This change moves operations that used to occur during
    configuration---(*build.Context).Import, loading, and parsing of
    initial packages---into the Load call, and ensures that all failures
    during Loading are reported at the end so that the maximum amount of
    progress is made.

    Also: redesign the tests and add many new cases.

Change-Id: Ia8cd99416af7c5d4a5fe133908adfa83676d401f
Reviewed-on: https://go-review.googlesource.com/3626
Reviewed-by: Robert Griesemer <gri@golang.org>"
matttproud,2015-02-01 18:17:49,https://api.github.com/repos/golang/tools/git/commits/7f3a9aa4e4b3fd6589c270d7dc9b672093864843,7f3a9aa4e4b3fd6589c270d7dc9b672093864843,"benchmark/parse: fix cosmetic defect in error str.

The ""Benchmark"" header parser's error string lacked a closing double
quotation mark.

Change-Id: I2361cc86866296503f2733aa84b3fd52cdf33c09
Reviewed-on: https://go-review.googlesource.com/3683
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
griesemer,2015-01-29 22:12:14,https://api.github.com/repos/golang/tools/git/commits/1afe783e9f23b46389ab7a439ed4e0eee558382a,1afe783e9f23b46389ab7a439ed4e0eee558382a,"go/types: update testdata (fix build)

Change-Id: Ifd38444c7c22f65f6e85fe6233b01703d1d14b4f
Reviewed-on: https://go-review.googlesource.com/3540
Reviewed-by: Alan Donovan <adonovan@google.com>"
adg,2015-01-24 15:40:49,https://api.github.com/repos/golang/tools/git/commits/39a2d013becdcfa6c1c320818544e27af68cea4c,39a2d013becdcfa6c1c320818544e27af68cea4c,"cmd/tipgodoc: set GOROOT_BOOTSTRAP environment variable

Change-Id: I7d5dc5f7510641d2976f2ea6acf0d52cb10b94e8
Reviewed-on: https://go-review.googlesource.com/3266
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2015-01-15 15:13:01,https://api.github.com/repos/golang/tools/git/commits/84312aa521a751f09abebc5bd240a1719f2d1dcf,84312aa521a751f09abebc5bd240a1719f2d1dcf,"refactor/rename: clarify usage message

In the example, we use backslashes (not single quotes) to escape
double-quotes since it works on both Windows and POSIX.

Change-Id: Id883f5457bec4d8a36d5b12c759ad385125a98a6
Reviewed-on: https://go-review.googlesource.com/2862
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2014-12-15 21:35:59,https://api.github.com/repos/golang/tools/git/commits/d56977266019f070ce097c082a929f54de17e473,d56977266019f070ce097c082a929f54de17e473,"Extend duplicate check to exported wrappers

Change-Id: I892fca0a374476aa9e65bf26fb03b73d6a0ae75a
Reviewed-on: https://go-review.googlesource.com/1583
Reviewed-by: Robert Griesemer <gri@golang.org>"
alexbrainman,2015-01-21 23:40:50,https://api.github.com/repos/golang/tools/git/commits/2ef5a0d23bc4e07573bb094b97e96c9cd9844fca,2ef5a0d23bc4e07573bb094b97e96c9cd9844fca,"refactor/rename: make tests pass on windows (fixes build)

- use import path not file path in go/buildutil.FakeContext OpenFile;
- use regexp to compare error messages in TestErrors, because
  they contain windows file paths;
- use OS file path (not unix path), when checking move results
  in TestMoves.

Change-Id: Ib62d344acb551fb612d8a0773ae1ab5f18341294
Reviewed-on: https://go-review.googlesource.com/3171
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2015-01-22 22:24:58,https://api.github.com/repos/golang/tools/git/commits/96af1504f60193ba43510e8d515cc0ad6cac5c5c,96af1504f60193ba43510e8d515cc0ad6cac5c5c,"go/ssa: add list-of-tests constant to generated testmain package

And log its value in godoc -analysis.

Related to issue 8968

Change-Id: I96a96922a3fa5c434c69e0faff1cc8ec4686b6f2
Reviewed-on: https://go-review.googlesource.com/3154
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2014-12-29 18:20:22,https://api.github.com/repos/golang/tools/git/commits/f011631cea2c67954dff8b1551b6998d54a99feb,f011631cea2c67954dff8b1551b6998d54a99feb,"go/ssa: simplify TypesWithMethodSets

Details:
- rename (*Program).TypesWithMethodSets() to RuntimeTypes()
- delete (*Package).TypesWithMethodSets() method and simplify
- move code to methods.go
- update test to use

1-2% improvement in space and time (though I barely trust this data
because the GC at tip is in such terrible state).

Change-Id: I38eab78b11e0ad0ff16e0530e775b6ff6a2ab246
Reviewed-on: https://go-review.googlesource.com/3148
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2015-01-21 19:13:33,https://api.github.com/repos/golang/tools/git/commits/e079f6c63283585db69001a632951cc88c70b052,e079f6c63283585db69001a632951cc88c70b052,"go/ssa: change import path of synthetic test package to ""test$main""

...to avoid namespace conflicts.
Also make its name ""main"", since it defines func main().

And fix 2 typos.

Change-Id: I7cf7894d6bed134907b3d2742255e5a82426071b
Reviewed-on: https://go-review.googlesource.com/3150
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2014-12-29 20:47:06,https://api.github.com/repos/golang/tools/git/commits/4d45c8502056aca783c84cb9f5824c3301490945,4d45c8502056aca783c84cb9f5824c3301490945,"go/types: expose IsInterface predicate, eliminating 6 copies

Change-Id: I3704d7bd7a11f691c66556c1b77ef79a503d2fe9
Reviewed-on: https://go-review.googlesource.com/2173
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-01-21 06:58:44,https://api.github.com/repos/golang/tools/git/commits/d702aaaabeb8e868ad03c3514a593da7673453d1,d702aaaabeb8e868ad03c3514a593da7673453d1,"cmd/godoc: add golang.org/x/build to go-import redirect list

Change-Id: Id372b2da716b31bc016855d2d7f783fd1764e5c0
Reviewed-on: https://go-review.googlesource.com/3110
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-01-21 06:32:48,https://api.github.com/repos/golang/tools/git/commits/cb6b359e69e54fe0afde51176ac97c38f6095fb1,cb6b359e69e54fe0afde51176ac97c38f6095fb1,"dashboard: delete after move to the golang.org/x/build repository

Change-Id: I04335eb643d342fa7de1f39fc3fc26b1543a60e1
Reviewed-on: https://go-review.googlesource.com/3078
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-20 04:53:34,https://api.github.com/repos/golang/tools/git/commits/b34c44b0e229d347ba41e25702f82e305f572b2b,b34c44b0e229d347ba41e25702f82e305f572b2b,"dashboard: buildlet client, server, and gomote enhancements

- get tarballs out of buildlets
- gomote can pass arguments to buildlet's exec handler
- buildlet's exec handler can run system-level commands
- hard-code GOROOT_BOOTSTRAP to be ""go1.4"" under the workdir
- adjust MTU size on GCE

etc

Change-Id: I73e18b7a5e395a889f5ee93ba9850d331ffb7812
Reviewed-on: https://go-review.googlesource.com/3052
Reviewed-by: Andrew Gerrand <adg@golang.org>"
dominikh,2015-01-15 21:12:18,https://api.github.com/repos/golang/tools/git/commits/4a084c77916db7ba5c75e91777cfee2f0ecfd35a,4a084c77916db7ba5c75e91777cfee2f0ecfd35a,"refactor/rename: allow passing -force flag from Emacs

Change-Id: Iac9355bc8a98cf61cb3d4ff871723ce466d38531
Reviewed-on: https://go-review.googlesource.com/2912
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2015-01-20 03:43:25,https://api.github.com/repos/golang/tools/git/commits/b09f9e69fad4704b4eb66fb11b6f53f58b09c9c2,b09f9e69fad4704b4eb66fb11b6f53f58b09c9c2,"dashboard/cmd/buildlet: support for writing files from tgz URL directly

Client + server support, and gomote flags.

Change-Id: I91320f47731f8c69b84c4961028bfbbdfc85467a
Reviewed-on: https://go-review.googlesource.com/3029
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-16 20:59:14,https://api.github.com/repos/golang/tools/git/commits/3aad931e88ab402274a53e272899de64ca74eb63,3aad931e88ab402274a53e272899de64ca74eb63,"dashboard: start of cmd/gomote buildlet client, more packification

Change-Id: I874f4f5ef253cf7f1d6d5073d7c81e76fa1de863
Reviewed-on: https://go-review.googlesource.com/2981
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-16 17:54:03,https://api.github.com/repos/golang/tools/git/commits/3ecc311976cc3f7c7b7a50314929bdc1b07c4c9d,3ecc311976cc3f7c7b7a50314929bdc1b07c4c9d,"dashboard: move buildlet exec code from coordinator to client package

Change-Id: I778ac78ed02be9f67436ec045a3816dfc24afda3
Reviewed-on: https://go-review.googlesource.com/2923
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2015-01-16 00:29:16,https://api.github.com/repos/golang/tools/git/commits/d78771bc1cd4141fbfd9c5573f37bb3669b1f231,d78771bc1cd4141fbfd9c5573f37bb3669b1f231,"dashboard: create buildlet client package, move coordinator code into it

Operation Packification, step 2 of tons.

Eventually the buildlet client binary will use this stuff now.

Change-Id: I4cf5f3e6beb9e56bdc795ed513ce6daaf61425e3
Reviewed-on: https://go-review.googlesource.com/2921
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
atomaths,2015-01-16 11:23:02,https://api.github.com/repos/golang/tools/git/commits/694e7507fc4e9ac9aea5ded2524bc5909550da30,694e7507fc4e9ac9aea5ded2524bc5909550da30,"present: fix References link of talks.golang.org

Change-Id: I797a745dc891483217b732e9bf5413539f8c417e
Reviewed-on: https://go-review.googlesource.com/2954
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
nigeltao,2015-01-15 23:06:00,https://api.github.com/repos/golang/tools/git/commits/045f02ba9d81e6c1e4def7109c739b89a3d22782,045f02ba9d81e6c1e4def7109c739b89a3d22782,"cmd/stringer: fix ignored error in TestEndToEnd.

Change-Id: Ia139e9da37aecddebe8895c0d3427d7e97d408f8
Reviewed-on: https://go-review.googlesource.com/2931
Reviewed-by: David Symonds <dsymonds@golang.org>"
alandonovan,2015-01-14 21:53:34,https://api.github.com/repos/golang/tools/git/commits/771af7e25c19513441fa290c83076e1af8e876c0,771af7e25c19513441fa290c83076e1af8e876c0,"go/buildutil: FakeContext: create build.Context of fake file tree, for testing

This refactoring of the tests of go/loader and refactor/rename made it
possible to write some loader tests I wanted, but the new tests reveal
bugs so they're commented out for now.  I will fix them in a follow-up.

Change-Id: Iae3a20681a0a0791076debd4b82bb5ed74b0c577
Reviewed-on: https://go-review.googlesource.com/2825
Reviewed-by: Robert Griesemer <gri@golang.org>"
bradfitz,2015-01-15 20:46:22,https://api.github.com/repos/golang/tools/git/commits/03b46a3e2f45f5027e6d582dfdb2723a5cdc9362,03b46a3e2f45f5027e6d582dfdb2723a5cdc9362,"dashboard: move builder configuration out of coordinator into a package

The new package will be used by the buildlet command line tool in the
future.

Also use the metadata package in the coordinator for the master build key,
since it was already depending on that package. Might as well use it.

Change-Id: I6ad7593787ebba364090951ccbaecb4aa38e1dd6
Reviewed-on: https://go-review.googlesource.com/2920
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-15 18:40:44,https://api.github.com/repos/golang/tools/git/commits/44f7d38ccc50fb539a5761948d61e83534ab0111,44f7d38ccc50fb539a5761948d61e83534ab0111,"dashboard/cmd/retrybuilds: add another flaky detection rule

Change-Id: Ifb88fc7903260e9d32dbeac6bfbc1b60d26bedc8
Reviewed-on: https://go-review.googlesource.com/2891
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-15 18:49:14,https://api.github.com/repos/golang/tools/git/commits/94e3c965eb5f379282555aa1d41a84157a596a5a,94e3c965eb5f379282555aa1d41a84157a596a5a,"dashboard: fixes from tree move, use 'extdep' build tag consistently

extdep means the package has contains external dependencies and will
be omitted from the regular x/tools build + tests.

Change-Id: I48d9161665811f0a0dc988d6f0c25d9c14b9e4ab
Reviewed-on: https://go-review.googlesource.com/2892
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
hyangah,2015-01-15 18:16:57,https://api.github.com/repos/golang/tools/git/commits/e14d0b6f6b4dcde66d9c4ff8951a0d37001d6f30,e14d0b6f6b4dcde66d9c4ff8951a0d37001d6f30,"cmd/godoc: godoc test needs clean up tmp dir when buildGodoc fails.

Change-Id: I584ed27d37a85d39294b07febf396f567d4016a5
Reviewed-on: https://go-review.googlesource.com/2901
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2015-01-15 01:24:45,https://api.github.com/repos/golang/tools/git/commits/e83451b9c2f0bffdd8ae5e5889d982ad960a81f4,e83451b9c2f0bffdd8ae5e5889d982ad960a81f4,"dashboard: rearrange tree, in prep for packagification

Package main binaries now go under cmd, leaving the top level for
similarly-named packages.

I'll be moving a lot of data structures and functions out of the
commands and into common packages.

A future CL will also unify all the ""+build whatever"" restrictions
into one common build tag, since there will be so much package sharing
coming up. Probably they will become ""+build extdep"", to indicate that
they have dependencies outside of x/tools.

Change-Id: Idc198e0dfa933b5f5de8f2b581533e8d299d2293
Reviewed-on: https://go-review.googlesource.com/2738
Reviewed-by: Andrew Gerrand <adg@golang.org>"
dominikh,2015-01-09 08:47:44,https://api.github.com/repos/golang/tools/git/commits/9f20d8c1983155428edf49b3f12ea85580740f91,9f20d8c1983155428edf49b3f12ea85580740f91,"benchmark/parser, cmd/benchcmp: improve names of exported identifiers

Most of the names have been brought in line with the names used in
testing/BenchmarkResult. For example, NsOp becomes NsPerOp.

Additionally, ""Bench"" becomes ""Benchmark"" and ""BenchSet"" becomes ""Set"".

Change-Id: I7dfca68a804e285a87ab9692b5bb99ccb676da7f
Reviewed-on: https://go-review.googlesource.com/2610
Reviewed-by: Rob Pike <r@golang.org>"
bradfitz,2015-01-14 23:38:29,https://api.github.com/repos/golang/tools/git/commits/d272cc0504d044205c5de2943a4cd53110371dd9,d272cc0504d044205c5de2943a4cd53110371dd9,"dashboard/builder: log to stderr when a build fails

Fixes golang/go#9593

Change-Id: I62c8152995db05945fb0c3dd5c62915e45aaeff9
Reviewed-on: https://go-review.googlesource.com/2737
Reviewed-by: Burcu Dogan <jbd@google.com>"
bradfitz,2015-01-14 20:31:04,https://api.github.com/repos/golang/tools/git/commits/31ce909f9690174dc8b8776d670cde987623c27c,31ce909f9690174dc8b8776d670cde987623c27c,"dashboard/coordinator: set timeout when polling buildlet, show more status

Change-Id: I04f1f2bb1f13718a07f6939042b61b3f675ca8be
Reviewed-on: https://go-review.googlesource.com/2735
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-14 22:52:45,https://api.github.com/repos/golang/tools/git/commits/c573f9d0b510efaf7c90f0bfb3d0cf8e0ee7b9d6,c573f9d0b510efaf7c90f0bfb3d0cf8e0ee7b9d6,"dashboard/buildlet: fix start-up crash when TLS attributes aren't set

I had never run the 44d7ecb402b7c on GCE, and never caught that it
crashed on start-up if TLS attributes weren't defined.

Updated to use the new NotDefinedError from the metadata package in
https://code-review.googlesource.com/#/c/1790/

Change-Id: Iaec8df126e4cef8026c930e8cc0163ae088affb3
Reviewed-on: https://go-review.googlesource.com/2736
Reviewed-by: Burcu Dogan <jbd@google.com>"
abursavich,2015-01-14 05:48:57,https://api.github.com/repos/golang/tools/git/commits/ac8637e9faf9e90715fc78021f8b8195b068e0b7,ac8637e9faf9e90715fc78021f8b8195b068e0b7,"container/intsets: Intersects, SubsetOf, SymmetricDifference(With)

Just reading through intsets and decided to knock out a few TODOs.

Change-Id: I677dbcc5ff934fbe0f0af09a4741e708a893f8db
Reviewed-on: https://go-review.googlesource.com/2733
Reviewed-by: Alan Donovan <adonovan@google.com>"
bradfitz,2015-01-13 23:06:48,https://api.github.com/repos/golang/tools/git/commits/84afeba47153a634589b0a7249cb1e8c17b03d29,84afeba47153a634589b0a7249cb1e8c17b03d29,"dashboard: consolidate upload code, update to new oauth2 libraries

Adds dashboard/upload/upload.go, instead of oddly shoving it as part
of the coordinator/buildongce tool.

And as part of that (in order to compile and test buildongce/create.go
without installing mercurial on this machine), I updated it from
goauth2 to oauth2.

Despite this ""just"" being a cleanup CL, it took forever because I hit
OAuth2+Cloud Storage+Web UI woes along the way, documented partially
in upload.go. The web UI misled me for a long time. Maybe I shouldn't
have used service accounts, but it does make configuration easier for
upload.go. The buildongce/create.go probably should use them too,
but I can do that later. I'm done cleaning for now.

Change-Id: Icb8e3decb682d3685edffecea2a10fcb4e385e10
Reviewed-on: https://go-review.googlesource.com/2731
Reviewed-by: Andrew Gerrand <adg@golang.org>"
matloob,2014-12-20 23:33:48,https://api.github.com/repos/golang/tools/git/commits/796e50ba3208b4dec9fbad26e4546d1ef2eea227,796e50ba3208b4dec9fbad26e4546d1ef2eea227,"cmd/mvpkg: a package moving tool

This change adds a command mvpkg that will move a given package and
update all its imports. It uses similar logic to gorename to update
the imports.

Change-Id: Iebbd0b4c93c2302b0a71c3b99c68f6778106012a
Reviewed-on: https://go-review.googlesource.com/1973
Reviewed-by: Alan Donovan <adonovan@google.com>"
alandonovan,2014-12-15 18:20:21,https://api.github.com/repos/golang/tools/git/commits/9c9660e35a263aab3937a77bd58b371e2063ee1a,9c9660e35a263aab3937a77bd58b371e2063ee1a,"go/loader: use concurrency to reduce I/O latency and perform typechecking in parallel.

See loader.go comments for orientation.

This is what happens when you use start using Dmitry's new trace tool. :)

Tests:
- added test of cycles
- load/parse/typecheck of 'godoc' is ~2.5x faster
- race detector finds no errors.

Change-Id: Icb5712c7825002342baf471b216252cecd9149d6
Reviewed-on: https://go-review.googlesource.com/1582
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2015-01-14 00:45:42,https://api.github.com/repos/golang/tools/git/commits/af97332187419cfe422e1451ef0f13ad49f038ef,af97332187419cfe422e1451ef0f13ad49f038ef,"cmd/godoc: send go-source meta tag for golang.org/x repos

This allows godoc.org to link to the source code. I chose to link to
github.com instead of googlesource.com because their file browser is
better.

Details here:
https://github.com/golang/gddo/commit/864b1c0aba009e37d301365a2f6f6cf51a3caef3

Change-Id: I962b3fadc822e753245f52240937be5c7e158dc7
Reviewed-on: https://go-review.googlesource.com/2719
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2015-01-13 20:41:09,https://api.github.com/repos/golang/tools/git/commits/44d7ecb402b7c5a02072f36bafb27d8a32ec6467,44d7ecb402b7c5a02072f36bafb27d8a32ec6467,"dashboard/buildlet: optional TLS + password support

Change-Id: Id72301c1be8da12d2c31cbec6cc94f26dc5ad808
Reviewed-on: https://go-review.googlesource.com/2743
Reviewed-by: Andrew Gerrand <adg@golang.org>"
crawshaw,2015-01-13 16:00:57,https://api.github.com/repos/golang/tools/git/commits/e0ba1bf74c385300c872a79b73a89ada47f3e4e4,e0ba1bf74c385300c872a79b73a89ada47f3e4e4,"cmd/vet: keep processing files after warning

This lets go vet produce useful results for syscall on darwin/amd64,
otherwise it gets caught on asm.s.

Change-Id: I3daa49cf61eeada52eb9d4e94e40c4d21d1d5b2d
Reviewed-on: https://go-review.googlesource.com/2741
Reviewed-by: Rob Pike <r@golang.org>"
alandonovan,2015-01-12 23:13:41,https://api.github.com/repos/golang/tools/git/commits/47f2109c640e97025f36c98610bd9782e815012e,47f2109c640e97025f36c98610bd9782e815012e,"go/ssa: slight simplification to setCallFunc

Change-Id: I6b8cc35f779910ebab3db9994bb17456a6df4b94
Reviewed-on: https://go-review.googlesource.com/2742
Reviewed-by: Robert Griesemer <gri@golang.org>"
pcc,2014-12-28 19:32:27,https://api.github.com/repos/golang/tools/git/commits/d3e7567302afecbc7bd1297b8746ae69843b350e,d3e7567302afecbc7bd1297b8746ae69843b350e,"go/loader: introduce PackageCreated hook

PackageCreated is a hook called when a types.Package
is created but before it has been populated.

The package's import Path() and Scope() are defined,
but not its Name() since no package declaration has
been seen yet.

Clients may use this to insert synthetic items into
the package scope, for example.

Change-Id: I210a0c4c766f03f715f03f26d5cd765f15f56e04
Reviewed-on: https://go-review.googlesource.com/2138
Reviewed-by: Alan Donovan <adonovan@google.com>"
pcc,2015-01-09 02:32:51,https://api.github.com/repos/golang/tools/git/commits/4f8578d2c095328e9192e9d0b0ea335c6ea3e9a5,4f8578d2c095328e9192e9d0b0ea335c6ea3e9a5,"astutil: move to go/ast/astutil

Change-Id: I9a45bfc07613eb2210081d306d71f0a4d152eda5
Reviewed-on: https://go-review.googlesource.com/2592
Reviewed-by: Alan Donovan <adonovan@google.com>"
tw4452852,2015-01-13 08:46:26,https://api.github.com/repos/golang/tools/git/commits/230eaff9cf0f955a0ae49dc3c372ae3e960b732f,230eaff9cf0f955a0ae49dc3c372ae3e960b732f,"cmd/benchcmp: close file when parse done

prevent file descriptor leak

Signed-off-by: Tw <tw19881113@gmail.com>

Change-Id: Ia1cacb3a287477b1f9b50fae248b5c34156c9557
Reviewed-on: https://go-review.googlesource.com/2740
Reviewed-by: Rob Pike <r@golang.org>"
bradfitz,2015-01-13 01:36:23,https://api.github.com/repos/golang/tools/git/commits/996ff9bec305e74c7edb7538642bf68db56a7a74,996ff9bec305e74c7edb7538642bf68db56a7a74,"dashboard/env: update Linux builders to contain Go 1.4 for GOROOT_BOOTSTRAP

Change-Id: I256168d1bbe542ae78e4c1e7c4879d2b62b74c7e
Reviewed-on: https://go-review.googlesource.com/2690
Reviewed-by: Andrew Gerrand <adg@golang.org>"
robpike,2015-01-12 01:43:33,https://api.github.com/repos/golang/tools/git/commits/682ca03389b762630846eff46e0d91d9307a2e63,682ca03389b762630846eff46e0d91d9307a2e63,"vet: improve validation of struct tags

Actually parse the strings to check them more accurately.
The particular problem it missed was that it didn't check
for control characters in the key. The only valid separator
is a space.

More tests.

Fixes #9500

Change-Id: Ib547e11c7e8d47d81eb8b1e8f1ab9c26174933df
Reviewed-on: https://go-review.googlesource.com/2685
Reviewed-by: Russ Cox <rsc@golang.org>"
alandonovan,2015-01-12 17:48:42,https://api.github.com/repos/golang/tools/git/commits/86040b7505c0e138ef6b476614a03e35c0706c05,86040b7505c0e138ef6b476614a03e35c0706c05,"go/types: close scope for each ""select"" case after its body

Classic Go pitfall: ""defer"" in a loop does not do what you might expect.

+ test case

Fixes issue 9570
Fixes issue 9569

Change-Id: Iec05420872ef71190083a7192f76c92f54f4a2a1
Reviewed-on: https://go-review.googlesource.com/2655
Reviewed-by: Robert Griesemer <gri@golang.org>"
adg,2015-01-09 21:28:29,https://api.github.com/repos/golang/tools/git/commits/4ed956ea274edb00cc6cc2b20755cdee3ed29385,4ed956ea274edb00cc6cc2b20755cdee3ed29385,"cmd/tipgodoc: kill old process as we switch over

Change-Id: I0d311b479441d1a359f953466e4ff93f3397c52d
Reviewed-on: https://go-review.googlesource.com/2630
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2015-01-11 18:34:19,https://api.github.com/repos/golang/tools/git/commits/d79e0375a07367cd4fc0cb384b7cf7f9c56ee858,d79e0375a07367cd4fc0cb384b7cf7f9c56ee858,"dashboard/builder: pass GOROOT_BOOTSTRAP to child processes

Part of https://golang.org/s/go15bootstrap

This is one step in a series of CLs to make the dev.cc branch build
after https://golang.org/cl/2470 (which converted cmd/dist from C to
Go)

TBR to adg because subsequent changes to Dockerfiles depend on knowing
the commit hash of this one.

Change-Id: I26122e2446c345446bbbca0df601f50ea9383adb
Reviewed-on: https://go-review.googlesource.com/2651
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dmitshur,2015-01-10 07:26:36,https://api.github.com/repos/golang/tools/git/commits/c10e262955e9f7bf20aaa801af6ff2dd14674159,c10e262955e9f7bf20aaa801af6ff2dd14674159,"go/vcs: fix bug in remote package discovery

The parser was assuming it would find <body> or </head>.
If the entire response is just <meta> tags, it finds EOF and
treats that as an error. It's not.

This is the same change as in https://golang.org/cl/68520044.

Fixes #9556.

Change-Id: If51ed36e7364c15788311039caf8323eb5fe9a6c
Reviewed-on: https://go-review.googlesource.com/2650
Reviewed-by: Minux Ma <minux@golang.org>"
bradfitz,2015-01-09 17:15:54,https://api.github.com/repos/golang/tools/git/commits/9468e480c808603061c9404002ee3d39c70f4e7e,9468e480c808603061c9404002ee3d39c70f4e7e,"dashboard/buildlet: add NetBSD-amd64 to Makefile

Update golang/go#8643

Change-Id: Ie60b87c447180a2a7f2411fcf8fece8035ddfa9d
Reviewed-on: https://go-review.googlesource.com/2602
Reviewed-by: Benny Siegert <bsiegert@gmail.com>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2015-01-08 23:34:45,https://api.github.com/repos/golang/tools/git/commits/e083199384e1d0cd389a8e092314fd6d644e1279,e083199384e1d0cd389a8e092314fd6d644e1279,"dashboard/coordinator: notify dashboard when we're building

Fixes golang/go#9494

Change-Id: Ib9451d41b2dd02d30d2efddbc0ec410a34bdb42c
Reviewed-on: https://go-review.googlesource.com/2583
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-08 22:48:50,https://api.github.com/repos/golang/tools/git/commits/5f779d76c147a87efdeec6a4d000d46c7eb24b37,5f779d76c147a87efdeec6a4d000d46c7eb24b37,"dashboard/app: support for showing links to build-in-progress status

Update golang/go#9494

Change-Id: I849d9f8ed423d29daede167193704dbda26785b1
Reviewed-on: https://go-review.googlesource.com/2590
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-08 05:01:08,https://api.github.com/repos/golang/tools/git/commits/968c2a1d60023b9efd6d1ef28a566637d303da2c,968c2a1d60023b9efd6d1ef28a566637d303da2c,"dashboard/coordinator: rename plan9 builder to plan9-386-gcepartial

... because it's not running all the tests.

Updates golang/go#9491

Change-Id: I2f3e8d1c2cba1b014d59cd3adfe5e04bd5f74dae
Reviewed-on: https://go-review.googlesource.com/2524
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-08 04:56:15,https://api.github.com/repos/golang/tools/git/commits/727ecd5ac436b9008f5b43c57094de22e436f48d,727ecd5ac436b9008f5b43c57094de22e436f48d,"dashboard/buildlet: set GOTESTONLY=std on plan9

This resulted in our first ""ok"" on the dashboard for Plan 9 with the
buildlet, in 19 minutes. It only runs the std tests, and nothing else
after that.

Update golang/go#9491

Change-Id: Iad77a594f83bfd3fa72596bcc3057645d9c9bb4c
Reviewed-on: https://go-review.googlesource.com/2523
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-01-09 00:26:56,https://api.github.com/repos/golang/tools/git/commits/75337c43b34cbe1cd58069244b06bc246544c572,75337c43b34cbe1cd58069244b06bc246544c572,"cmd/tipgodoc: fix some nits

Change-Id: I54a98340ec2e5d54c2ca27b869c7f38b7cbfe2d7
Reviewed-on: https://go-review.googlesource.com/2536
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-01-08 23:53:37,https://api.github.com/repos/golang/tools/git/commits/0e66a62615741f602d46fa1d86ccfd2018c91218,0e66a62615741f602d46fa1d86ccfd2018c91218,"cmd/tipgodoc: simplify Dockerfile and fix deployment

Change-Id: Ib2fd1346255467cb790a9e4c37d25f8e8ca136f5
Reviewed-on: https://go-review.googlesource.com/2534
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
atomaths,2015-01-08 08:55:03,https://api.github.com/repos/golang/tools/git/commits/dc0000626dc277d1a08500b0b042a33f3c3510c5,dc0000626dc277d1a08500b0b042a33f3c3510c5,"cmd/present: fix unclosed section element

Change-Id: I974ec7a2caccfca3aff18836d6495597e17664e7
Reviewed-on: https://go-review.googlesource.com/2533
Reviewed-by: Andrew Gerrand <adg@golang.org>"
griesemer,2015-01-08 20:15:36,https://api.github.com/repos/golang/tools/git/commits/4fbaee50fd9e93464c5bd6964c6afb9230b79de1,4fbaee50fd9e93464c5bd6964c6afb9230b79de1,"go/types: revert gofmt -s change to permit building with 1.3

Per request from dsymonds.

Change-Id: I1f034859880df0d8313d67da90457ac56459ed76
Reviewed-on: https://go-review.googlesource.com/2562
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
Reviewed-by: David Symonds <dsymonds@golang.org>"
josharian,2014-12-22 21:54:38,https://api.github.com/repos/golang/tools/git/commits/962c79ce9f0f7b5357affbc4384eb8522ac6f8f7,962c79ce9f0f7b5357affbc4384eb8522ac6f8f7,"tools/astutil: clean up AddNamedImport token positions

Fixes golang/go#8729
Fixes golang/go#6884 (again)

Change-Id: Ic90319d9af7e2da9f3fda036f7e111725fc0572a
Reviewed-on: https://go-review.googlesource.com/2050
Reviewed-by: Robert Griesemer <gri@golang.org>"
griesemer,2015-01-06 23:10:57,https://api.github.com/repos/golang/tools/git/commits/44ee65f5451d813b9795358b974e5798777f9e21,44ee65f5451d813b9795358b974e5798777f9e21,"go/types: don't allow f()... if f() is multi-valued

Also: Better position for error messages related to wrong use of ... .

Fixes #9473.

Change-Id: I90565f51a42897b7292f651a84a23611a5d8f359
Reviewed-on: https://go-review.googlesource.com/2390
Reviewed-by: Alan Donovan <adonovan@google.com>"
griesemer,2015-01-07 21:15:59,https://api.github.com/repos/golang/tools/git/commits/4ad370efaa163bc6919068dba73f7f7344e03bc7,4ad370efaa163bc6919068dba73f7f7344e03bc7,"go/types: avoid follow-up error if composite literal type is unknown

Fixes #9182.

Change-Id: I7090e600e9981131db7f323e7ce6419017e95458
Reviewed-on: https://go-review.googlesource.com/2481
Reviewed-by: Alan Donovan <adonovan@google.com>"
0intro,2015-01-07 23:49:53,https://api.github.com/repos/golang/tools/git/commits/8ab2c33beaed1ac24ab7b9fd6c478ba049d6e4ac,8ab2c33beaed1ac24ab7b9fd6c478ba049d6e4ac,"dashboard/env: add script to create Plan 9 386 GCE image

Update golang/go#9491

Change-Id: I219e2e071c0f58bf8c2b69c57b96a9114773c7b7
Reviewed-on: https://go-review.googlesource.com/2251
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2015-01-08 03:49:00,https://api.github.com/repos/golang/tools/git/commits/d77725735e0fcac79b5e915c2fb51feb7ac9b19b,d77725735e0fcac79b5e915c2fb51feb7ac9b19b,"dashboard/coordinator: clean up trailer handling

This got lost before in my git stash stack.

Change-Id: Id73cdb89e73ab83c26971c6c1c4e0fc74d91018f
Reviewed-on: https://go-review.googlesource.com/2521
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-07 22:08:28,https://api.github.com/repos/golang/tools/git/commits/47646d42a25ce15f4d5265baa4e51a11252a93ed,47646d42a25ce15f4d5265baa4e51a11252a93ed,"dashboard/buildlet: darwin support

Update golang/go#9495

Change-Id: I732cfdee952ad3bf0b3411d0ce45723900acedb4
Reviewed-on: https://go-review.googlesource.com/2472
Reviewed-by: Andrew Gerrand <adg@golang.org>"
speter,2015-01-07 23:36:07,https://api.github.com/repos/golang/tools/git/commits/bd69d2dd34ce26b379b70a92c4c05d2f20b944e2,bd69d2dd34ce26b379b70a92c4c05d2f20b944e2,"cmd/godoc: mention examples feature in godoc

Godoc documentation did not mention the feature for showing example code
runnable by the testing package. Add a link to the testing package.

Update golang/go#9471

Change-Id: Ic15794c59732e9b0b42c5b16c60be0a47c41afa5
Reviewed-on: https://go-review.googlesource.com/2490
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-07 23:44:25,https://api.github.com/repos/golang/tools/git/commits/2cd6e42cb2d1c65be7a57cfa385c5cbafe677e58,2cd6e42cb2d1c65be7a57cfa385c5cbafe677e58,"dashboard/coordinator: clean up VMs more, fix watchVM bug, tweak plan 9 settings

Change-Id: I30609505cd3790f9e9505a4f020215de7b0ab74b
Reviewed-on: https://go-review.googlesource.com/2474
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2015-01-07 05:00:26,https://api.github.com/repos/golang/tools/git/commits/af7d92a90fbbc868c5d6cd4c3c9637637668d599,af7d92a90fbbc868c5d6cd4c3c9637637668d599,"cmd/tipgodoc: record and report errors

Change-Id: I76c04c745367427cd3b474949d213e105f6b47c1
Reviewed-on: https://go-review.googlesource.com/2413
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2015-01-07 01:46:00,https://api.github.com/repos/golang/tools/git/commits/57335a8a8f27199b135705be1f8dca2e2441c67b,57335a8a8f27199b135705be1f8dca2e2441c67b,"cover: accept inaccurate block endings

When cover is used with cgo packages, the coverage profile is produced
from the cgo-generated Go source files, so the profile will reference
line and column numbers from that generated source, even though it names
the original file.
This is okay in general because the cgo-generated Go source files are
very similar to the original, with one significant exception:
the original source may refer to C identifiers such as C.foo(), but the
cgo tool generates source that rewrites these mentions to something like
_Cfunc_foo.
This means that column numbers in coverage profiles might be higher than
they should be, so be lenient when interpreting them.

Update golang/go#9479

Change-Id: Ic3abef07471614101ce0c686d35b85e7e5e6a777
Reviewed-on: https://go-review.googlesource.com/2410
Reviewed-by: Rob Pike <r@golang.org>"
adg,2015-01-06 02:03:54,https://api.github.com/repos/golang/tools/git/commits/c836fe615a448dbf9ff5448c1aa657479a0d0aeb,c836fe615a448dbf9ff5448c1aa657479a0d0aeb,"cmd/godoc: add golang.org/x/playground custom import path

Change-Id: Ic399dbf8a77e7c61ba8be263515b13a6b488b4e9
Reviewed-on: https://go-review.googlesource.com/2309
Reviewed-by: Rob Pike <r@golang.org>"
dominikh,2014-12-24 01:15:25,https://api.github.com/repos/golang/tools/git/commits/0ff667834040107b7dcaa724e90f4a283da6a1b7,0ff667834040107b7dcaa724e90f4a283da6a1b7,"benchmark/parse, cmd/benchcmp: new package for parsing benchmarks

Move the parser for benchmark output from cmd/benchcmp into its own
package, benchmark/parse.

The majority of the change is just moving code around. Instead of
implementing the '-best' flag in ParseBenchSet, it is now implemented in
its own function 'selectBest' in cmd/benchcmp.

Bench.Ord (the ordinal position of a Bench within a BenchSet) has been
exported.

Change-Id: Id27032a220f9ff2596117b58b86243998695a804
Reviewed-on: https://go-review.googlesource.com/2102
Reviewed-by: Rob Pike <r@golang.org>"
bradfitz,2015-01-05 05:46:23,https://api.github.com/repos/golang/tools/git/commits/ac848a95366ad35cd998363f0c1a01d3cd367cde,ac848a95366ad35cd998363f0c1a01d3cd367cde,"dashboard/coordinator: use new dashboard JSON interface to find work

This uses the new JSON interface to the build dashboard (from
golang.org/cl/2290) to find all work, and re-enables the OpenBSD
builder[*], and can do multiple things at a time. Andrew and I just
watched it fire up 8 OpenBSD VMs at once to catch up.

[*] The OpenBSD builder was disabled because it would only report
results for the main repo, not subrepos, and the old
build.golang.org/todo interface didn't understand that was
possible. Now the steps are considered separate.

Update golang/go#8642 (OpenBSD)
Update golang/go#9492 (builds in VMs)

Change-Id: Ic6c2f73ee3da218dd54ef1a33f3afc97046ea3cc
Reviewed-on: https://go-review.googlesource.com/2282
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-03 01:16:44,https://api.github.com/repos/golang/tools/git/commits/58c8b8a73844ec94edcf645c1a8f82697292478c,58c8b8a73844ec94edcf645c1a8f82697292478c,"dashboard/coordinator: use VMs to run non-Linux builders

Currently this is running an OpenBSD amd64 builder, but other operating
systems are now easy.

Updates golang/go#8642
Updates golang/go#9492

Change-Id: I4e1026c49ee4d253dfcf78c7606767294784f02e
Reviewed-on: https://go-review.googlesource.com/2264
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-05 03:02:59,https://api.github.com/repos/golang/tools/git/commits/026c0f4d1dca20a2d92701abd652b9eb4177ca90,026c0f4d1dca20a2d92701abd652b9eb4177ca90,"dashboard/app: add a JSON output mode for the data on the front page

Fixes golang/go#9493

Change-Id: I4891abf530901c620c2923e9f2d3e3227dd7ced9
Reviewed-on: https://go-review.googlesource.com/2290
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-04 04:12:38,https://api.github.com/repos/golang/tools/git/commits/dd517c42bc0960248584a19b23447581cfb4d6d9,dd517c42bc0960248584a19b23447581cfb4d6d9,"dashboard/buildlet: add Makefiles, and add Windows stage0 bootstrap binary

Change-Id: I69938af38fb5c45c01598e9171e851a1c29790bc
Reviewed-on: https://go-review.googlesource.com/2268
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-04 04:14:13,https://api.github.com/repos/golang/tools/git/commits/e1019ed0e116fe29c324159562694d8c8d438a47,e1019ed0e116fe29c324159562694d8c8d438a47,"dashboard/env/windows: instructions for setting up a buildlet

Updates golang/go#8640

Change-Id: I3f0b10c237f437137ed46415d7cc443d4c6a419b
Reviewed-on: https://go-review.googlesource.com/2269
Reviewed-by: Alex Brainman <alex.brainman@gmail.com>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2015-01-03 02:19:51,https://api.github.com/repos/golang/tools/git/commits/938dd670d280c9d37a6b1b2241a4b8b3e4061aa0,938dd670d280c9d37a6b1b2241a4b8b3e4061aa0,"env/openbsd-amd64: install git, improve README

Updates golang/go#8642

Change-Id: Ia11faeafb96a325ff62dcf95fedb5a6489e41bd4
Reviewed-on: https://go-review.googlesource.com/2263
Reviewed-by: Minux Ma <minux@golang.org>"
bradfitz,2015-01-02 23:00:54,https://api.github.com/repos/golang/tools/git/commits/0a8eb31860c27ab322c2e8b4b56ab86bfbe9c81e,0a8eb31860c27ab322c2e8b4b56ab86bfbe9c81e,"dashboard/coordinator: refactor status handling in prep for VM builders

Currently the coordinator only handles Docker container builders. An
upcoming change will add VM builders, running VMs on GCE for OpenBSD,
Plan 9, Windows, etc.

This change refactors the handling of the coordinator's build status
in prep for VM builders. Notably, it doesn't call ""docker logs""
directly to get logs. It now keeps them in memory instead. Because
they're then in memory, we might as well make it keep the details of
the last N builds too, which we kept wanting earlier.

Updates #9492

Change-Id: I6bae4a5854e7efa3f8a6186ec3670a43c98c4df2
Reviewed-on: https://go-review.googlesource.com/2262
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2014-12-31 00:19:06,https://api.github.com/repos/golang/tools/git/commits/005d2be0bab99244e237e12e61863c10e79b17ca,005d2be0bab99244e237e12e61863c10e79b17ca,"dashboard/coordinator: periodically clean stale VMs

This isn't used yet, but will be for the new-style builders (VMs on
GCE running the buildlet, started by the coordinator).

From the code's comments:

cleanUpOldVMs periodically enumerates virtual machines and deletes
any which have a ""delete-at"" attribute having a unix timestamp
before the current time. These VMs are created to run a single
build and should be shut down by a controlling process. Due to
various types of failures, they might get stranded. To prevent them
from getting stranded and wasting resources forever, we instead set
the ""delete-at"" metadata attribute on them when created to some
time that's well beyond their expected lifetime, and then this is
the backup mechanism to delete them if they get away.

Update golang/go#8639
Update golang/go#8640
Update golang/go#8642

Change-Id: I489e97926e7ab56487571c2bf0bd255cdf49570d
Reviewed-on: https://go-review.googlesource.com/2199
Reviewed-by: Burcu Dogan <jbd@google.com>"
ceh,2015-01-02 08:56:34,https://api.github.com/repos/golang/tools/git/commits/faf0ad1ad362309609d2f081a6e06bb666e7d325,faf0ad1ad362309609d2f081a6e06bb666e7d325,"dashboard: update wiki links

The Go wiki has moved to GitHub. Update links to use a golang.org/wiki/... target.

Change-Id: Iff7e1b2add469318f5e467aed5d1f3e67155b283
Reviewed-on: https://go-review.googlesource.com/2250
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
pcc,2014-12-28 16:35:52,https://api.github.com/repos/golang/tools/git/commits/bcd5efa0efcbda3fb95df5ea5b83a1ec07ab43b6,bcd5efa0efcbda3fb95df5ea5b83a1ec07ab43b6,"go/types: make import check optional via a flag in types.Config

It is sometimes useful for API clients to be able to disable the unused
import check, although for good reason this should not be exposed as part of
a user-facing interface. There are at least two use cases that I am aware of:

1) It allows for automated test case reduction tools such as delta or C-Reduce
   to be more easily applied to type checker input. Disabling the check
   makes it possible for the tool to identify and remove code that depends
   on imported packages without any specific knowledge of Go, as the import
   need not be removed simultaneously with the code.

2) Interactive tools (such as REPLs) that may have previously received a
   list of imports and subsequently receive a line of code that may use any
   number of these imports. It is simpler for such tools to import all the
   packages in its list than to try to identify the correct set of imports.

Change-Id: I00091a4e5c8e1bd664efd82a636f255eaaa5a2db
Reviewed-on: https://go-review.googlesource.com/2136
Reviewed-by: Robert Griesemer <gri@golang.org>"
pcc,2014-12-28 19:35:42,https://api.github.com/repos/golang/tools/git/commits/6370cd3a8e29686c28bf339debaf967f046b8d46,6370cd3a8e29686c28bf339debaf967f046b8d46,"go/types: modify Eval, EvalNode to return a TypeAndValue

The new interface makes the functions more useful by allowing clients to
check the various properties that TypeAndValue provides.

Change-Id: I8b41a27316081bea24a18ffe6fa1812e809d6f67
Reviewed-on: https://go-review.googlesource.com/2134
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2014-12-30 15:48:23,https://api.github.com/repos/golang/tools/git/commits/c1ef9c75bf53da39c9d01811e45420ba60e5a431,c1ef9c75bf53da39c9d01811e45420ba60e5a431,"cmd/gorename: make Usage documentation sensible in godoc

Fixes golang/go#9469

Change-Id: I74e19e3d095e4c2ab62f755a408f58fd5e7ac2f2
Reviewed-on: https://go-review.googlesource.com/2176
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
bradfitz,2014-12-30 04:54:40,https://api.github.com/repos/golang/tools/git/commits/d7ed24f1387e3dca9c56da8b80bf2bda359ee6df,d7ed24f1387e3dca9c56da8b80bf2bda359ee6df,"dashboard/env/openbsd-amd64: typo and wording change

Review comments from Joel in https://golang.org/cl/2156

Change-Id: Ic3679d5c103b85f249f0ddcaceb29e50313f3a4f
Reviewed-on: https://go-review.googlesource.com/2190
Reviewed-by: Andrew Gerrand <adg@golang.org>
Reviewed-by: Joel Sing <jsing@google.com>"
bradfitz,2014-12-30 04:51:32,https://api.github.com/repos/golang/tools/git/commits/721bf87b5bd65ddc9dd5f8655670a03d75f49a7f,721bf87b5bd65ddc9dd5f8655670a03d75f49a7f,"dashboard/buildlet: make exec handler return process state in HTTP trailer

Requires Go tip to function, but compiles with old versions of Go, but
without returning the trailer, which we'll be able to detect in the
coordinator to make sure nobody used an old Go to cross-compile a
buildlet.

Change-Id: Ie5f71c0a4477563dea5f1526af10a49aa41536d6
Reviewed-on: https://go-review.googlesource.com/2159
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-29 20:29:13,https://api.github.com/repos/golang/tools/git/commits/9c946b9540d4393cf84f594b170c182dde8c5345,9c946b9540d4393cf84f594b170c182dde8c5345,"dashboard/buildlet: start of the buildlet

This is the basics: untar a tar.gz file to a directory, and execute a
command.

Update golang/go#8639
Update golang/go#8640
Update golang/go#8642

Change-Id: I5917ed8bd0e4c2fdb4b3fab34ca929caca95cc8a
Reviewed-on: https://go-review.googlesource.com/2180
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-29 23:05:32,https://api.github.com/repos/golang/tools/git/commits/b2523aab470f7b48cbc34d0a23c24e783c9d70f8,b2523aab470f7b48cbc34d0a23c24e783c9d70f8,"dashboard/env: add script to create OpenBSD GCE image

This is almost entirely the work of @mdempsky; I just ran
it a bunch and reported bugs or tweaked things until it worked
and booted the buildlet on GCE.

Update #8642

Change-Id: If5d50bcdf90bc6aa648472cc951ed1c53b46eef3
Reviewed-on: https://go-review.googlesource.com/2156
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
alandonovan,2014-12-29 21:49:20,https://api.github.com/repos/golang/tools/git/commits/538acf1c92a7ddf0fc9a724ab0c8c2df7dab7d62,538acf1c92a7ddf0fc9a724ab0c8c2df7dab7d62,"go/ssa: add position info to all Load/Store instructions

Was originally https://codereview.appspot.com/92880043/ by Richard Musiol.

Change-Id: If0b22cf962b94ef44edbac28a5e5af4acb950991
Reviewed-on: https://go-review.googlesource.com/2174
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2014-12-29 20:35:00,https://api.github.com/repos/golang/tools/git/commits/4f13714aca90105a7905f35e7ce70686bc24e518,4f13714aca90105a7905f35e7ce70686bc24e518,"astutil: add Unparen utility, eliminating 7 copies.

Change-Id: I824328c275bd6198a57edd64bf72cb2cf0490a68
Reviewed-on: https://go-review.googlesource.com/2172
Reviewed-by: Chris Manghane <cmang@golang.org>
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
alandonovan,2014-12-15 17:34:41,https://api.github.com/repos/golang/tools/git/commits/43a68970476908d921f2a423dca94402212a6f0c,43a68970476908d921f2a423dca94402212a6f0c,"go/ssa: simplify make([]T, len, k) to new([k]T)[:len] for constant k

+ test.

Change-Id: I0255e38a0f95af95a32dc1d9cf18b26db85af36f
Reviewed-on: https://go-review.googlesource.com/1519
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2014-12-22 22:20:37,https://api.github.com/repos/golang/tools/git/commits/8bc439de181cfdcb69c8ec9476254085349f28bc,8bc439de181cfdcb69c8ec9476254085349f28bc,"go/ssa: canonicalize receiver types to avoid creating duplicate thunk functions

+ Tests:
  Extend function name uniqueness check to exported wrappers.
  Check that expected synthetic functions are created, reachable, and not duplicated.

Change-Id: I0e87ebb2712e33e1f49da3fa9a9dde0085bf3850
Reviewed-on: https://go-review.googlesource.com/2013
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2014-12-15 17:58:00,https://api.github.com/repos/golang/tools/git/commits/761c80fdf4ef15924d56df8ca1b2b0764fd47627,761c80fdf4ef15924d56df8ca1b2b0764fd47627,"go/ssa: canonicalize receiver types to avoid creating duplicate thunk functions

+ test

Change-Id: Ie37835577ffcdd764cf6a0b611e02f04386755cf
Reviewed-on: https://go-review.googlesource.com/1580
Reviewed-by: Robert Griesemer <gri@golang.org>"
alandonovan,2014-12-29 16:44:01,https://api.github.com/repos/golang/tools/git/commits/4b1d99f7f3ee4b328430e99cb7b364ccba3a2eef,4b1d99f7f3ee4b328430e99cb7b364ccba3a2eef,"go/ssa/interp: delete SSA bodies from standalone functions in ""reflect""

...like we do for ""runtime"" functions, so that they fail informatively
if executed.  They all need intrinsics, but only some are yet defined.

Also:
- added test for issue 9462
- ""BUG"" in test output is now a failure in all tests (not just $GOROOT tests)
- added intrinsic for reflect.SliceOf
- show dynamic type of panic value

Fixes issue 9462

Change-Id: I3a504c7faeed81e922fedc7dd59222717f3a7e95
Reviewed-on: https://go-review.googlesource.com/2145
Reviewed-by: Robert Griesemer <gri@golang.org>"
ceh,2014-12-29 05:15:53,https://api.github.com/repos/golang/tools/git/commits/ca3901c3d89cec6ff073746fb5ce873876175b75,ca3901c3d89cec6ff073746fb5ce873876175b75,"all: address vet reports

Fixes various problems reported by go vet.

Change-Id: I12a6fdba8f911b21805d8e42903f8f6a5033790a
Reviewed-on: https://go-review.googlesource.com/2163
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
minux,2014-12-23 23:02:05,https://api.github.com/repos/golang/tools/git/commits/f72c7f764272a1bb2b1700c198bf9edbc7fbb240,f72c7f764272a1bb2b1700c198bf9edbc7fbb240,"cmd/godoc: show the BUG section

This will match the default behavior when running locally.

In fact, our http://blog.golang.org/godoc-documenting-go-code explicitly
documents this feature (see also golang.org/cl/1953).

Change-Id: I581b17b60229ce70900cb51d548d1e2a34df41ba
Signed-off-by: Shenghou Ma <minux@golang.org>
Reviewed-on: https://go-review.googlesource.com/2116
Reviewed-by: Andrew Gerrand <adg@golang.org>"
mattbostock,2014-12-26 15:21:04,https://api.github.com/repos/golang/tools/git/commits/79d60d6e2ca483f3b11bf0022d3968a0a342a390,79d60d6e2ca483f3b11bf0022d3968a0a342a390,"cmd/present: Fix indentation in styles.css

No functional changes.

Also adds a newline to the end of the file, for compatibility with
`cat(1)` and `vim(1)`. See also:

https://gcc.gnu.org/ml/gcc/2003-11/msg01568.html

Change-Id: I4fc7ac64ad7c4b4d9c2be7296cb8b612e0becef2
Reviewed-on: https://go-review.googlesource.com/2106
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
mattbostock,2014-12-25 00:11:19,https://api.github.com/repos/golang/tools/git/commits/255341fbe0404f1620b4972d5137b54dc714f880,255341fbe0404f1620b4972d5137b54dc714f880,"cmd/present: Fix HTML to use matching header tag

Close the `<h3>` header tag with a closing `</h3>` tag to fix the HTML
syntax.

Change-Id: Ic86c5f31ec5550d6875aa085eed8da6a75881405
Reviewed-on: https://go-review.googlesource.com/2104
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
alexbrainman,2014-12-23 06:13:51,https://api.github.com/repos/golang/tools/git/commits/9afb7711dc3f3c99dbe2fe59449403b34d32e26a,9afb7711dc3f3c99dbe2fe59449403b34d32e26a,"tools: copying .gitattributes to all subrepositories (fixes windows build)

Fixes #9281

Change-Id: I42ef7105b2a5a99452d804db31eea57a8d6d9d01
Reviewed-on: https://go-review.googlesource.com/2071
Reviewed-by: Minux Ma <minux@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2014-12-23 04:57:12,https://api.github.com/repos/golang/tools/git/commits/6538dd105dbffa58b4fbb14aa249939de31c7612,6538dd105dbffa58b4fbb14aa249939de31c7612,"dashboard/app: fix the broke-the-build commit URL

Change-Id: I153211b2609b18210227f0cd805bd4b52df83ecb
Reviewed-on: https://go-review.googlesource.com/2056
Reviewed-by: Andrew Gerrand <adg@golang.org>"
robpike,2014-12-22 20:20:51,https://api.github.com/repos/golang/tools/git/commits/575b88be8f1a15f3b7467e3253c779b213e90c35,575b88be8f1a15f3b7467e3253c779b213e90c35,"stringer: avoid if's in the generated code

Suggestion by dsymonds: Save code not data.
Add an extra element to the index array and an if can be eliminated.

Old generated code:
const _Day_name = ""MondayTuesdayWednesdayThursdayFridaySaturdaySunday""

var _Day_index = [...]uint8{6, 13, 22, 30, 36, 44, 50}

func (i Day) String() string {
	if i < 0 || i >= Day(len(_Day_index)) {
		return fmt.Sprintf(""Day(%d)"", i)
	}
	hi := _Day_index[i]
	lo := uint8(0)
	if i > 0 {
		lo = _Day_index[i-1]
	}
	return _Day_name[lo:hi]
}

New generated code:
const _Day_name = ""MondayTuesdayWednesdayThursdayFridaySaturdaySunday""

var _Day_index = [...]uint8{0, 6, 13, 22, 30, 36, 44, 50}

func (i Day) String() string {
	if i < 0 || i+1 >= Day(len(_Day_index)) {
		return fmt.Sprintf(""Day(%d)"", i)
	}
	return _Day_name[_Day_index[i]:_Day_index[i+1]]
}

Change-Id: I6f46a4892d5813a12ec1ad01738c6a21c7e45172
Reviewed-on: https://go-review.googlesource.com/1990
Reviewed-by: David Symonds <dsymonds@golang.org>
Reviewed-by: Josh Bleecher Snyder <josharian@gmail.com>"
minux,2014-12-10 02:25:00,https://api.github.com/repos/golang/tools/git/commits/4d81e11d78ab0ca147f1f4ea3d67561dcb0c39f8,4d81e11d78ab0ca147f1f4ea3d67561dcb0c39f8,"godoc/redirect: update the rules for /cl/ redirect

If id is a number greater than 150k, then it is a Rietveld CL, otherwise
treat it as a Gerrit change id.

Also add support for /cl/ID/, because go commit 0edafefc36 uses this
form.

Change-Id: I46575e3284faaa727e346b34bbc46ab248cf12b3
Signed-off-by: Shenghou Ma <minux@golang.org>
Reviewed-on: https://go-review.googlesource.com/1283
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-20 06:07:06,https://api.github.com/repos/golang/tools/git/commits/71d01446358836b150768026f969e79d01493830,71d01446358836b150768026f969e79d01493830,"dashboard/retrybuilds: add more flaky phrases

Change-Id: Id1a1b870a348a24040d94b157328b1632776711f
Reviewed-on: https://go-review.googlesource.com/1877
Reviewed-by: Dave Cheney <dave@cheney.net>"
ceh,2014-12-19 19:05:29,https://api.github.com/repos/golang/tools/git/commits/864e280a1d082a1edb004ffe89cbae6ac3bc85cb,864e280a1d082a1edb004ffe89cbae6ac3bc85cb,"cmd/godoc: add missing space to flag description

Change-Id: I8f4dada13353065475baf33c71e6e1a28f889e71
Reviewed-on: https://go-review.googlesource.com/1892
Reviewed-by: Ian Lance Taylor <iant@golang.org>"
OlingCat,2014-12-14 09:00:44,https://api.github.com/repos/golang/tools/git/commits/65b875be277f95afe7816ff5c987eedc28f54669,65b875be277f95afe7816ff5c987eedc28f54669,"cmd/godoc: update GAE setup script

Change-Id: Ief2c49a03cbd3251d62d854be4f51dcb27a42458
Reviewed-on: https://go-review.googlesource.com/1522
Reviewed-by: Andrew Gerrand <adg@golang.org>"
minux,2014-12-18 22:01:26,https://api.github.com/repos/golang/tools/git/commits/458cff5230751b488dc6eb6d2adb799ff544f6be,458cff5230751b488dc6eb6d2adb799ff544f6be,"cmd/tipgodoc: add appenginevm build tag

Fixes golang/go#9381.

Change-Id: Ied5fd00475dde2b781cedff398dc9ee8d7f642a4
Signed-off-by: Shenghou Ma <minux@golang.org>
Reviewed-on: https://go-review.googlesource.com/1801
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
minux,2014-12-14 20:42:37,https://api.github.com/repos/golang/tools/git/commits/a47975eda8f51a682601a6a6884d93595e65082e,a47975eda8f51a682601a6a6884d93595e65082e,"cmd/eg, godoc/redirect: update remaining code.google.com links

Change-Id: I67da9e0c0c511c19e5b5296fbcf46f641273a7bb
Signed-off-by: Shenghou Ma <minux@golang.org>
Reviewed-on: https://go-review.googlesource.com/1515
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
minux,2014-12-12 21:30:15,https://api.github.com/repos/golang/tools/git/commits/a6c97ce1443f68f8e7940e22ad9b90c33a4cb6a0,a6c97ce1443f68f8e7940e22ad9b90c33a4cb6a0,"dashboard/builder: remove the repo export speed hack for hg

The builder will no longer generate a VERSION file, so we
can revert https://golang.org/cl/1405 once all builders
have updated.

Fixes golang/go#9296.

Change-Id: Ie51cb06a712157c16b231167f166b31d10ba8667
Signed-off-by: Shenghou Ma <minux@golang.org>
Reviewed-on: https://go-review.googlesource.com/1510
Reviewed-by: Andrew Gerrand <adg@golang.org>
Reviewed-by: Chris Manghane <cmang@golang.org>"
bradfitz,2014-12-18 04:40:08,https://api.github.com/repos/golang/tools/git/commits/f56df04f2d7e93934b304f818b899500aa5b50ac,f56df04f2d7e93934b304f818b899500aa5b50ac,"cmd/tipgodoc: make tipgodoc run on App Engine Managed VMs

At least in theory. We don't totally have it working yet. It does
run locally in the dev environment, though, which should be the same
as production, since it builds the Docker container locally.
But we're getting problems when pushing it to production.

Also some minor tweaks to the code with Andrew.

Change-Id: Id192669dbc8d3f86d9c8dad79764abd66e983895
Reviewed-on: https://go-review.googlesource.com/1761
Reviewed-by: Andrew Gerrand <adg@golang.org>"
OlingCat,2014-12-13 07:08:58,https://api.github.com/repos/golang/tools/git/commits/443d37c586f1f211b0f1fa85724d9aa9f74c1704,443d37c586f1f211b0f1fa85724d9aa9f74c1704,"godoc/static/analysis: update a link to new home

While we're at it, fix some bad tags and wrap one long line.

Change-Id: I4808b4645b7d18c4320b0969ab53fb244d6f169d
Reviewed-on: https://go-review.googlesource.com/1520
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2014-12-17 04:49:59,https://api.github.com/repos/golang/tools/git/commits/5bf57d6426a625ebb1ba00fcbeb3d926a9f52305,5bf57d6426a625ebb1ba00fcbeb3d926a9f52305,"cmd/tipgodoc: new tip.golang.org server

Rough work in progress. Don't hate.

Change-Id: I9d8247005724a21bdb5d4760cc6135bceb49f2d4
Reviewed-on: https://go-review.googlesource.com/1704
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-15 02:10:25,https://api.github.com/repos/golang/tools/git/commits/cf555faef78b64e3e3c71e1a59f7655c53d75821,cf555faef78b64e3e3c71e1a59f7655c53d75821,"dashboard/coordinator: add SSD disk option, turn off auto-update

Change-Id: I4d2dfe34a6c2fde8603704e716b7c91ad285ecec
Reviewed-on: https://go-review.googlesource.com/1561
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-16 05:36:46,https://api.github.com/repos/golang/tools/git/commits/c6dbbb5857766c0252aa735e17e01a6d48e19697,c6dbbb5857766c0252aa735e17e01a6d48e19697,"dashboard/env: update watcher Dockerfile to use latest version

This version includes the JSON polling from:
   https://go-review.googlesource.com/#/c/1568/

Also, we no longer need sid because we no longer need Mercurial,
so revert back to wheezy, which is less of a moving target.

Change-Id: I3e6bde097e49deb891101cd92fa80e9f093a7c8b
Reviewed-on: https://go-review.googlesource.com/1613
Reviewed-by: David Symonds <dsymonds@golang.org>"
bradfitz,2014-12-15 03:12:14,https://api.github.com/repos/golang/tools/git/commits/75054c4284d42614192d452baffdfda68846c5cc,75054c4284d42614192d452baffdfda68846c5cc,"dashboard/retrybuilds: new tool to clear build.golang.org results

Change-Id: Iae541d2c8a80a7d88ddea47c8ef45912826f705e
Reviewed-on: https://go-review.googlesource.com/1566
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-15 06:26:21,https://api.github.com/repos/golang/tools/git/commits/a54d0066172a0f461d92159c9bd9195950ad4234,a54d0066172a0f461d92159c9bd9195950ad4234,"dashboard/watcher: use Gerrit's JSON meta URL to poll smarter

Reduces our HTTP requests to Gerrit by a factor of the number of
subrepos we have.

Change-Id: I3f8fabeb70fdb5c276c639924baebcf5510fda9b
Reviewed-on: https://go-review.googlesource.com/1568
Reviewed-by: Andrew Gerrand <adg@golang.org>
Reviewed-by: Chris Manghane <cmang@golang.org>"
adg,2014-12-15 05:55:31,https://api.github.com/repos/golang/tools/git/commits/55402a2b46b9839ad57afb2e4257ab5d97eb6ffe,55402a2b46b9839ad57afb2e4257ab5d97eb6ffe,"godoc/redirect: support loading hg->git change map from a file

This isn't exposed through the godoc binary, as it will only be
used by the Google-specific deployment of godoc.

Change-Id: Id5808f3adcb7eb36a7ccd6e4960ce3f01179fe51
Reviewed-on: https://go-review.googlesource.com/1567
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2014-12-15 04:37:18,https://api.github.com/repos/golang/tools/git/commits/88d370fb935d52692cd4cf13db505b8da4f20e66,88d370fb935d52692cd4cf13db505b8da4f20e66,"cmd/godoc: add debug subrepo meta to x handler

Change-Id: I0ba56b32dd9b53d06817f9f7e2dafff04e6a86d2
Reviewed-on: https://go-review.googlesource.com/1565
Reviewed-by: David Symonds <dsymonds@golang.org>"
bradfitz,2014-12-15 03:10:20,https://api.github.com/repos/golang/tools/git/commits/c7100dffc334f2a1c833c200c50af38d6405c0ec,c7100dffc334f2a1c833c200c50af38d6405c0ec,"dashboard/app: update app.yaml comments to preferred test convention

Change-Id: I61f0b3a31a4f0435037a6583131bb50b36ac20d7
Reviewed-on: https://go-review.googlesource.com/1563
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-15 02:40:39,https://api.github.com/repos/golang/tools/git/commits/8d0ad68ce25540516db841415b41597c928530dd,8d0ad68ce25540516db841415b41597c928530dd,"dashboard/app: add machine-readable list of recent failures

Change-Id: I90be865aaab01701d10af57bdf1e0bee5533d3e5
Reviewed-on: https://go-review.googlesource.com/1562
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2014-12-15 01:16:31,https://api.github.com/repos/golang/tools/git/commits/40817d5f2c4fb4dcb4b50e1aa5dd3acdb98b56d1,40817d5f2c4fb4dcb4b50e1aa5dd3acdb98b56d1,"dashboard/app: add handler to wipe a builder's results column

Change-Id: Idc3284ff8564a8863d8352890e285babded362cf
Reviewed-on: https://go-review.googlesource.com/1539
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
bradfitz,2014-12-15 00:51:42,https://api.github.com/repos/golang/tools/git/commits/36f7c537c7d19add852c8bc7339ecf37aadee137,36f7c537c7d19add852c8bc7339ecf37aadee137,"dashboard/coordinator: run background goroutine cleaning old docker containers

I'm tired of figuring out what isn't cleaning up after itself, so keep
a background goroutine that looks at old containers and deletes them
as a backup measure. Verified it works by creating some dummy containers on
the machine.

Also adds df output to the HTML status page.

Change-Id: I23adc22872def882b3b9b3a4ec730017899bb966
Reviewed-on: https://go-review.googlesource.com/1537
Reviewed-by: Andrew Gerrand <adg@golang.org>"
minux,2014-12-14 08:11:40,https://api.github.com/repos/golang/tools/git/commits/14ecce811fe734186cbf7b1481f7b8368ddb0e68,14ecce811fe734186cbf7b1481f7b8368ddb0e68,"cmd/present: skip the ""golang.org"" directory

Change-Id: I732194c22062c77c431dcec57f9ef832f1dc1afe
Signed-off-by: Shenghou Ma <minux@golang.org>
Reviewed-on: https://go-review.googlesource.com/1512
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2014-12-13 03:49:54,https://api.github.com/repos/golang/tools/git/commits/05fa16d2852c3a28b0354f88d50449e827bc18ac,05fa16d2852c3a28b0354f88d50449e827bc18ac,"dashboard/app: add review subrepo, link changes correctly

Change-Id: I1eeea2beb4ffab690b2bb005c08a08d7e41c1fc3
Reviewed-on: https://go-review.googlesource.com/1503
Reviewed-by: Minux Ma <minux@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-12 05:50:58,https://api.github.com/repos/golang/tools/git/commits/551edbff13f7ff6f240a4a082c02f9ada86f3e1a,551edbff13f7ff6f240a4a082c02f9ada86f3e1a,"dashboard: more environment cleanups

sid was trying to use hg still.

And remove curl everywhere (except nacl). It's unnecessary.

Change-Id: I2a235d83b2bc7cf599c8de5796c724d8f368348e
Reviewed-on: https://go-review.googlesource.com/1368
Reviewed-by: David Symonds <dsymonds@golang.org>"
bradfitz,2014-12-12 03:17:35,https://api.github.com/repos/golang/tools/git/commits/d5854b7d675acdab6eb93d8e243e7ef89672ea2f,d5854b7d675acdab6eb93d8e243e7ef89672ea2f,"dashboard: update Linux clang, nacl, and sid builders

Change-Id: I69cda2fb7b0047201999781cdb27f4a9013920c6
Reviewed-on: https://go-review.googlesource.com/1367
Reviewed-by: David Symonds <dsymonds@golang.org>"
bradfitz,2014-12-12 02:58:46,https://api.github.com/repos/golang/tools/git/commits/802ec582a3102df0d222e0e0131d619f68d95d05,802ec582a3102df0d222e0e0131d619f68d95d05,"all: update links from code.google.com to new homes

Change-Id: Id3c5b2480c8499ab712265a421ffba125fb913db
Reviewed-on: https://go-review.googlesource.com/1401
Reviewed-by: David Symonds <dsymonds@golang.org>"
bradfitz,2014-12-12 02:19:15,https://api.github.com/repos/golang/tools/git/commits/a3a1a20bcc6cdba95dae3b12d2d365076c50756f,a3a1a20bcc6cdba95dae3b12d2d365076c50756f,"dashboard: update the coordinator for new watchers

New default repo, restart watchers on failure, etc.

Change-Id: Idb2e8e6f65debd07d2fa04d998b8036a00260683
Reviewed-on: https://go-review.googlesource.com/1366
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-12 00:39:44,https://api.github.com/repos/golang/tools/git/commits/8c1a5674dd305ad36144080741c56abb450fcb5b,8c1a5674dd305ad36144080741c56abb450fcb5b,"dashboard: update the watcher and linux base builder image

Updates for the hg->git move.

Change-Id: I4c1b91ada1b90090db958554c92d06fb1d36ec35
Reviewed-on: https://go-review.googlesource.com/1364
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2014-12-12 00:15:08,https://api.github.com/repos/golang/tools/git/commits/1c945908eddec6ce6622bf9f600cdb7d29e472cd,1c945908eddec6ce6622bf9f600cdb7d29e472cd,"dashboard/app: show Mercurial page at /hg/

Change-Id: If5e77adc3766609b8f37423d0f132bcceff704f8
Reviewed-on: https://go-review.googlesource.com/1359
Reviewed-by: Dave Cheney <dave@cheney.net>
Reviewed-by: Minux Ma <minux@golang.org>
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2014-12-11 23:54:42,https://api.github.com/repos/golang/tools/git/commits/6735829fe0427d784e33bcf258ee419fd9fef898,6735829fe0427d784e33bcf258ee419fd9fef898,"dashboard: create notion of a builder version

Don't accept results from old builders once we cut over to the git
dashboard.

Change-Id: I1087b9fa174542ecfc7251c13f4319f51eca17b6
Reviewed-on: https://go-review.googlesource.com/1358
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2014-12-11 23:20:18,https://api.github.com/repos/golang/tools/git/commits/6f3c548bba2669d6d41a0735ff28dfad648981f1,6f3c548bba2669d6d41a0735ff28dfad648981f1,"dashboard: make git dashboard the default

Also bump the watcher version, so the old watcher doesn't try to write
to the new dashboard.

Change-Id: I7f62ad937fe162dadfd1222f56a3c5e493be9a61
Reviewed-on: https://go-review.googlesource.com/1357
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
adg,2014-12-11 23:06:45,https://api.github.com/repos/golang/tools/git/commits/9df76cfcdb07ca535fe8f346a473ede148292f57,9df76cfcdb07ca535fe8f346a473ede148292f57,"dashboard/watcher: use commit date, not author date

Commit date is what is relevant to the dashboard.

Change-Id: I807492768c8f7dcbf9ee6bdc233976cb25ee8647
Reviewed-on: https://go-review.googlesource.com/1356
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dvyukov,2014-12-11 21:12:03,https://api.github.com/repos/golang/tools/git/commits/93f9911d07d79a9c01c6d298a140acbcd3f7c08d,93f9911d07d79a9c01c6d298a140acbcd3f7c08d,"dashboard: tell perf dashboard about release 1.4

Change-Id: I074b12a155278cb2a53414cd1f9abf650df8e89d
Reviewed-on: https://go-review.googlesource.com/1381
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2014-12-10 03:14:55,https://api.github.com/repos/golang/tools/git/commits/0ea69b51f7d843942e31d2eead54090a8824ae42,0ea69b51f7d843942e31d2eead54090a8824ae42,"dashboard/builder: re-set -dash default to hg dashboard

Change-Id: Ia52dd20c6ad927bbe32450c437e202c4695980af
Reviewed-on: https://go-review.googlesource.com/1292
Reviewed-by: Andrew Gerrand <adg@golang.org>"
paranoiacblack,2014-12-09 17:04:19,https://api.github.com/repos/golang/tools/git/commits/8f92739d3e3db37010213936dc409e8fa9389105,8f92739d3e3db37010213936dc409e8fa9389105,"dashboard/builder: add -gccopts flag; use shallow clones for gccgo

Change-Id: I3a48e2f664996bf99bb8a7f850d876731dd80808
Reviewed-on: https://go-review.googlesource.com/1253
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>"
dsymonds,2014-12-09 04:00:58,https://api.github.com/repos/golang/tools/git/commits/24257c8cd2d4a24e16e9f638b0ec6424daab38af,24257c8cd2d4a24e16e9f638b0ec6424daab38af,"tools: add import comments.

Change-Id: Idda6e64580432cb9a731e4ebf4005ee4ceb4202d
Reviewed-on: https://go-review.googlesource.com/1244
Reviewed-by: Andrew Gerrand <adg@golang.org>"
minux,2014-12-09 06:22:46,https://api.github.com/repos/golang/tools/git/commits/6e0e92af7e68a970d4babae511bbc8340a1d80c2,6e0e92af7e68a970d4babae511bbc8340a1d80c2,"godoc/redirect: if id in /cl/{id} is less than 150k, treat as Gerrit CL id

Change-Id: Id69c00d908d18151486007ec03da5495b34b05f5
Reviewed-on: https://go-review.googlesource.com/1223
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-09 05:56:36,https://api.github.com/repos/golang/tools/git/commits/d7df296309f475b793c06f5bc229096146919f34,d7df296309f475b793c06f5bc229096146919f34,"dashboard/env: update linux builder Dockerfile to use git, update builder

Uses a builder that can build both hg & git. (Should fix the git
subrepos on the main dashboard currently)

Change-Id: I3af96e35d40f6397625730b812a288f36622cb8a
Reviewed-on: https://go-review.googlesource.com/1203
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-09 05:49:59,https://api.github.com/repos/golang/tools/git/commits/98c15d46be3806e7f37a076d900601e902d48bd3,98c15d46be3806e7f37a076d900601e902d48bd3,"dashboard/builder: change default gcpath back to hg for now

We're doing this so we can update the main builders to fix the
problems with subrepos. The coordinator doesn't know how to
pass -gcpath to this.

We can change it back to git after Go 1.4 is out.

Change-Id: I3924a34ac974cb77954acea4772ef0f52e36fa45
Reviewed-on: https://go-review.googlesource.com/1202
Reviewed-by: Andrew Gerrand <adg@golang.org>"
bradfitz,2014-12-09 04:04:26,https://api.github.com/repos/golang/tools/git/commits/d76ba60748091000ef9928ec3be2b28a01b3ed39,d76ba60748091000ef9928ec3be2b28a01b3ed39,"dashboard/builder: don't use vcs TagSync to update a path to a hash

Change-Id: Ic4bbcb294995483482f51e3539b9ba8a741d1a98
Reviewed-on: https://go-review.googlesource.com/1245
Reviewed-by: Andrew Gerrand <adg@golang.org>"
adg,2014-12-08 07:23:29,https://api.github.com/repos/golang/tools/git/commits/24a7fa781ce3dddbecb27a907401a655f576c1e6,24a7fa781ce3dddbecb27a907401a655f576c1e6,"x/tools/dashboard/watcher: various fixes

Report master branch commits first.
Display branch name in log message.
Send branch name to dashboard.
Better error messages.
Remove redundant TODO.

Change-Id: Ib37943a38b88626cf4bb56420b488e2452ce262b
Reviewed-on: https://go-review.googlesource.com/1173
Reviewed-by: David Symonds <dsymonds@golang.org>"
adg,2014-12-08 07:26:27,https://api.github.com/repos/golang/tools/git/commits/97f1340e43c8c8b94f240cb1ee84b1eb4a9b4bcc,97f1340e43c8c8b94f240cb1ee84b1eb4a9b4bcc,"x/tools/dashboard/app: record branch names, disallow multiple first commits

Change-Id: I3fed749bb0b5c2084a490eb4c6696c4555a0ac9c
Reviewed-on: https://go-review.googlesource.com/1174
Reviewed-by: David Symonds <dsymonds@golang.org>"
dsymonds,2014-12-07 23:59:03,https://api.github.com/repos/golang/tools/git/commits/78a571aa375aad394969ceeb5524edb12d9700e0,78a571aa375aad394969ceeb5524edb12d9700e0,remove codereview.cfg.
dsymonds,2014-12-07 23:49:54,https://api.github.com/repos/golang/tools/git/commits/11949f683d0935baaed21a2adcba8a42408d7cbe,11949f683d0935baaed21a2adcba8a42408d7cbe,convert .hgignore to .gitignore.
adg,2014-12-07 23:39:42,https://api.github.com/repos/golang/tools/git/commits/c73666300b16f761455d0aeddcc2942bf5507ece,c73666300b16f761455d0aeddcc2942bf5507ece,"x/tools/godoc/redirect: point to new git/github URLs

LGTM=dsymonds
R=dsymonds
CC=golang-codereviews
https://golang.org/cl/187920043"
adg,2014-12-07 23:37:26,https://api.github.com/repos/golang/tools/git/commits/2d24bddc61879239b14378e394037ff922e891a9,2d24bddc61879239b14378e394037ff922e891a9,"x/dashboard/app: update sub-repo list (+mobile, +text, -codereview)

LGTM=dsymonds
R=dsymonds
CC=golang-codereviews
https://golang.org/cl/176610044"
adg,2014-12-07 23:30:52,https://api.github.com/repos/golang/tools/git/commits/9e66c59fb14f2ba4da1447eff0fef0d85a8aad8c,9e66c59fb14f2ba4da1447eff0fef0d85a8aad8c,"x/tools/cmd/godoc: update golang.org/x/ redirects to point to git repos

LGTM=dsymonds
R=dsymonds
CC=golang-codereviews
https://golang.org/cl/182620043"
alandonovan,2014-12-05 19:07:01,https://api.github.com/repos/golang/tools/git/commits/a28cb655e608bf639a9a820baad1fe121dbec534,a28cb655e608bf639a9a820baad1fe121dbec534,"refactor/rename: preserve file modes.

Fixes golang/go#9013

LGTM=sameer
R=sameer, minux
CC=golang-codereviews
https://golang.org/cl/185000043"
DanielMorsing,2014-12-05 15:51:34,https://api.github.com/repos/golang/tools/git/commits/25f58f97cea9cf57bc1a799af168a4e411c503e3,25f58f97cea9cf57bc1a799af168a4e411c503e3,"x/tools/oracle: add whicherrs query mode

The whicherrs query mode takes the position of an error and returns the set of constants, globals and types visible from within the scope of the error being queried.
It is meant to be used as a shortcut to find out which errors should be handled for a given functions call.

LGTM=adonovan
R=golang-codereviews, dominik.honnef, adonovan
CC=golang-codereviews
https://golang.org/cl/167420043"
alandonovan,2014-12-04 14:37:50,https://api.github.com/repos/golang/tools/git/commits/c6ec5ea66dbbf4dc044694d25371c8aa2555a1b2,c6ec5ea66dbbf4dc044694d25371c8aa2555a1b2,"cmd/gorename: support renaming of methods with consequences for other types, iff initiated at an abstract method.

Previously, gorename rejected all method renamings if it would
change the assignability relation.

Now, so long as the renaming was initiated at an abstract
method, the renaming proceeds, changing concrete methods (and
possibly other abstract methods) as needed.  The user
intention is clear.

The intention of a renaming initiated at a concrete method is
less clear, so we still reject it if it would change the
assignability relation.  The diagnostic advises the user to
rename the abstract method if that was the intention.

Additional safety checks are required: for each
satisfy.Constraint that couples a concrete type C and an
interface type I, we must treat it just like a set of implicit
selections C.f, one per abstract method f of I, and ensure the
selections' meanings are unchanged.

The satisfy package no longer canonicalizes types, since this
substitutes one interface for another (equivalent) one, which
is sound, but makes the type names random and the error
messages confusing.

Also, fixed a bug in 'satisfy' relating to map keys.

+ Lots more tests.

LGTM=sameer
R=sameer
CC=golang-codereviews
https://golang.org/cl/173430043"
adg,2014-12-03 23:47:26,https://api.github.com/repos/golang/tools/git/commits/7e91bb35f89636831efdea03cd1f210f7caa542c,7e91bb35f89636831efdea03cd1f210f7caa542c,"x/tools/dashboard/watcher: convert to git

LGTM=dsymonds
R=bradfitz, dsymonds
CC=golang-codereviews
https://golang.org/cl/177660043"
adg,2014-12-03 23:45:11,https://api.github.com/repos/golang/tools/git/commits/2d83fa5bf154b059c0304177f82bb7ff9bcf7029,2d83fa5bf154b059c0304177f82bb7ff9bcf7029,"x/tools/dashboard/app: update to support git

This adds a ""Git"" dashboard at ""/git/"", which has its own namespace for
datastore and memcache. Once we have pushed out the new git repositories
we will spin up a commit watcher and builders that point to the Git
dashboard.

Once we are ready to switch the dashboard over to the new Git builders,
the (*Dashboard).Context method will be changed to return ""Git""
as the default namespace. The old builders will be retired, and the
new builders will be configured to report to ""/"" instead of ""/git/"".
At that point all our old data will still be available in the default
namespace, but hidden from view.

LGTM=dsymonds, cmang
R=bradfitz, cmang, dsymonds, adg
CC=golang-codereviews
https://golang.org/cl/183050043"
adg,2014-12-03 23:43:53,https://api.github.com/repos/golang/tools/git/commits/4ed659d59242484a47639e4963e90d9465349f43,4ed659d59242484a47639e4963e90d9465349f43,"x/tools/dashboard/builder: support git; remove commit watcher

This binary isn't intended to support hg anymore.
It almost might not support gccgo; I'm not sure.
But there'll be more work to do there anyway.

LGTM=dave, bradfitz, cmang
R=cmang, bradfitz, dave, adg
CC=golang-codereviews
https://golang.org/cl/181520043"
adg,2014-12-03 23:43:23,https://api.github.com/repos/golang/tools/git/commits/a652b8bab4f1544b9d8b954711202d231826fc64,a652b8bab4f1544b9d8b954711202d231826fc64,"x/tools/go/vcs: support go.googlecode.com paths

Also fix a bug in CreateAtRev, which was doing something hg-specific.

LGTM=cmang
R=cmang
CC=golang-codereviews
https://golang.org/cl/180540043"
alandonovan,2014-12-03 14:56:23,https://api.github.com/repos/golang/tools/git/commits/41f0d01034040fc15c3f90913cb3543a1a8aa695,41f0d01034040fc15c3f90913cb3543a1a8aa695,"refactor/importgraph: fix a race condition.

The main goroutine wasn't waiting for the two closed channels to drain.

Moral: with concurrency, never invent.  D'oh.

LGTM=sameer
R=sameer
CC=golang-codereviews
https://golang.org/cl/178090043"
robpike,2014-12-01 23:15:26,https://api.github.com/repos/golang/tools/git/commits/0e9050009a3d1fd766d435a52d4c1e53a8f1b166,0e9050009a3d1fd766d435a52d4c1e53a8f1b166,"tools/cmd/vet: check that cgo is enabled before testing it
Should fix the tools builders.

LGTM=bradfitz
R=rsc, bradfitz
CC=golang-codereviews
https://golang.org/cl/176530043"
paranoiacblack,2014-12-01 17:59:02,https://api.github.com/repos/golang/tools/git/commits/9393b170806def447d4de9dbe299bc5445f48f77,9393b170806def447d4de9dbe299bc5445f48f77,"dashboard/env: add go-commit-watcher image

LGTM=bradfitz
R=bradfitz, adg
CC=adg, golang-codereviews
https://golang.org/cl/179370043"
adg,2014-11-26 04:31:30,https://api.github.com/repos/golang/tools/git/commits/354b6ccbcccd0b7c71cdf8c0ff87072e329abe1d,354b6ccbcccd0b7c71cdf8c0ff87072e329abe1d,"x/tools/cmd/godoc: add golang.org/x/oauth2 import path

LGTM=r
R=jbd, r
CC=golang-codereviews
https://golang.org/cl/175700043"
adg,2014-11-24 07:08:25,https://api.github.com/repos/golang/tools/git/commits/8dfc1ba4d039bb354a2875a0ac2677b0c831028b,8dfc1ba4d039bb354a2875a0ac2677b0c831028b,"x/tools/dashboard/app: have cron.yaml point to build.golang.org

LGTM=dvyukov
R=dvyukov
CC=golang-codereviews
https://golang.org/cl/174600043"
adg,2014-11-24 02:25:05,https://api.github.com/repos/golang/tools/git/commits/566014162e5496fc537980e174c11787d32a07a1,566014162e5496fc537980e174c11787d32a07a1,"x/tools/godoc/redirect: handle Rietveld and Gerrit CLs at /cl/

LGTM=rsc, dsymonds
R=rsc, dsymonds
CC=golang-codereviews
https://golang.org/cl/177260043"
griesemer,2014-11-21 21:08:59,https://api.github.com/repos/golang/tools/git/commits/cc6170934be99c055cc2a5674fffe6303207f570,cc6170934be99c055cc2a5674fffe6303207f570,"go/exact: handle unknowns consistently

Fixes golang/go#9147.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/180110043"
alandonovan,2014-11-21 16:07:56,https://api.github.com/repos/golang/tools/git/commits/a9651d6ad76cf79d736f0b21888dcb2eb3107ae1,a9651d6ad76cf79d736f0b21888dcb2eb3107ae1,"cmd/callgraph: add -algo=static and -algo=cha options.

""static"" ignores dynamic calls altogether.

""cha"" uses Class Hierarchy Analysis, which assumes that a
dynamic call may dispatch to any func or method that satisfies
the type.

Both these algorithms can work on partial programs,
e.g. libraries without a main function or tests.

(This feature was requested after my talk last night.)

+ Tests.

LGTM=sameer
R=sameer, minux
CC=golang-codereviews, gri
https://golang.org/cl/176780043"
alandonovan,2014-11-20 18:33:20,https://api.github.com/repos/golang/tools/git/commits/ce7df396da211db60243e103554195b509287073,ce7df396da211db60243e103554195b509287073,"go/pointer: fix two crashes caused by 'print()'.

+ Test.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/173540043"
adg,2014-11-19 04:51:44,https://api.github.com/repos/golang/tools/git/commits/4f9827a99de50b6b264c16f46f8eb4d24b0e0f56,4f9827a99de50b6b264c16f46f8eb4d24b0e0f56,"x/tools/cmd/godoc: fix bad repository path

Not caught by inattentive reviewer. Pick up your game, people.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/180880043"
adg,2014-11-19 03:03:19,https://api.github.com/repos/golang/tools/git/commits/1536a92c033ea2a264b5432bc56acb96a58fb11e,1536a92c033ea2a264b5432bc56acb96a58fb11e,"x/tools/cmd/godoc: add golang.org/x/review custom import path

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/174410043"
adg,2014-11-18 21:51:39,https://api.github.com/repos/golang/tools/git/commits/a3be5384d54bd4db901e4260c9d3f39f841dc5a3,a3be5384d54bd4db901e4260c9d3f39f841dc5a3,"x/tools/godoc/redirect: add redirect for Gerrit reviews at /review/

LGTM=rsc, bradfitz
R=bradfitz, rsc
CC=golang-codereviews
https://golang.org/cl/178960043"
alandonovan,2014-11-17 20:24:12,https://api.github.com/repos/golang/tools/git/commits/0088b7ecd7687e8eeb7a30e4a3a491ef55f87d42,0088b7ecd7687e8eeb7a30e4a3a491ef55f87d42,"go/types: don't panic if DefaultImport==nil, until we actually use it.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/178860044"
alandonovan,2014-11-17 18:54:36,https://api.github.com/repos/golang/tools/git/commits/89c9513804940b8e6054380737c2c345db5b86b2,89c9513804940b8e6054380737c2c345db5b86b2,"go/types/typeutil: add an example of Map usage.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/177740043"
alandonovan,2014-11-17 18:50:23,https://api.github.com/repos/golang/tools/git/commits/d75c6bdb8faea29fd211f909798f42fbd2377860,d75c6bdb8faea29fd211f909798f42fbd2377860,"cmd/oracle: minor fixes.

- print ""oracle:"" not ""Error:"" in error messages; remove period.
- allocate token.FileSet correctly.
- remove stale TODO (multiple test packages)
- fix typo and omission ('what') in usage message.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/178860043"
alandonovan,2014-11-17 17:58:28,https://api.github.com/repos/golang/tools/git/commits/4162082cba27a76628811b0fafd9eb637bd66407,4162082cba27a76628811b0fafd9eb637bd66407,"x/tools/*: print program name, not ""Error"", when reporting command error messages.

Such messages are more informative when the error occurs deep within a script.

Also: add tool name to digraph's usage messages.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/173380043"
alandonovan,2014-11-17 17:17:16,https://api.github.com/repos/golang/tools/git/commits/0ae83e44bada02dbd9a307e046cb4860505ff345,0ae83e44bada02dbd9a307e046cb4860505ff345,"refactor/rename: add missing operand to fmt.Errorf

TBR=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/177920043"
adg,2014-11-17 02:08:44,https://api.github.com/repos/golang/tools/git/commits/33b1bf3b85ff9d32dd97bfbff92a33e1c572cb7e,33b1bf3b85ff9d32dd97bfbff92a33e1c572cb7e,"x/tools/dashboard/env: bump known good builder revision

LGTM=dsymonds
R=dsymonds
CC=golang-codereviews
https://golang.org/cl/176900043"
adg,2014-11-17 01:06:56,https://api.github.com/repos/golang/tools/git/commits/9920aceb57dc74bc8ef12a5bc19cf0df8fa3e5ee,9920aceb57dc74bc8ef12a5bc19cf0df8fa3e5ee,"x/tools/dashboard/builder: only write VERSION file if it doesn't exist

LGTM=dsymonds
R=dsymonds
CC=golang-codereviews
https://golang.org/cl/172610043"
adg,2014-11-17 00:32:13,https://api.github.com/repos/golang/tools/git/commits/c2c2cf49ad408f4baa7c8f64c704065763658c35,c2c2cf49ad408f4baa7c8f64c704065763658c35,"x/tools/dashboard/app: ignore freebsd-arm failures

The previous instance of this change was applied to the release branch.
I don't know why the codereview plugin allowed me to do this.
Thankfully we won't be using it for much longer.

TBR=dfc
R=dave
CC=golang-codereviews
https://golang.org/cl/175870044"
alandonovan,2014-11-14 16:02:44,https://api.github.com/repos/golang/tools/git/commits/c13d674f5ecd20cf69d97852e35f9413fb5ad630,c13d674f5ecd20cf69d97852e35f9413fb5ad630,"go/callgraph/rta: rename from go/rta

LGTM=sameer
R=sameer
CC=golang-codereviews, gri
https://golang.org/cl/175770043"
alandonovan,2014-11-13 18:03:59,https://api.github.com/repos/golang/tools/git/commits/50755a56a851e42bf412ad697ae99f6268549790,50755a56a851e42bf412ad697ae99f6268549790,"go/ssa: report memory consumption separated by phase in stdlib_test

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/170600043"
alandonovan,2014-11-13 17:34:25,https://api.github.com/repos/golang/tools/git/commits/b8d26f5b949e8ff69f7df1aed48f3e1a5b1e105c,b8d26f5b949e8ff69f7df1aed48f3e1a5b1e105c,"tools: minor comment fixes.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/173170043"
adg,2014-11-13 10:53:13,https://api.github.com/repos/golang/tools/git/commits/c05aea77a9e80070f55034be19757acd2436cbbc,c05aea77a9e80070f55034be19757acd2436cbbc,"x/tools/dashboard/app: use ?branch=foo to show foo branch commits

LGTM=rsc
R=bradfitz, rsc
CC=golang-codereviews
https://golang.org/cl/167660043"
griesemer,2014-11-13 00:49:47,https://api.github.com/repos/golang/tools/git/commits/c2b324b9b47f3b71cb2eabe1dede5b8ec39dc309,c2b324b9b47f3b71cb2eabe1dede5b8ec39dc309,"cmd/callgraph: fix build

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/171640043"
griesemer,2014-11-12 23:39:43,https://api.github.com/repos/golang/tools/git/commits/932b62a02f87862730a919fcb6f627010bfdecd9,932b62a02f87862730a919fcb6f627010bfdecd9,"go/types: add missing nil check in Info.TypeOf

Also use type assertions in a more defensive
way (check for != nil rather than ok).

LGTM=dsymonds, adonovan
R=adonovan, dsymonds
CC=golang-codereviews
https://golang.org/cl/169480043"
alandonovan,2014-11-12 22:36:22,https://api.github.com/repos/golang/tools/git/commits/b8a5fcfcec6ee118953b8f5294652e0c7c793dfb,b8a5fcfcec6ee118953b8f5294652e0c7c793dfb,"cmd/callgraph: a utility for dumping the callgraph of a Go program.

(This functionality is provided by the oracle, but its output
format is inflexible, and the functionality is better suited
to a shell utility.  I may remove the oracle 'callgraph' feature.)

See Usage for details.

+ Test.

LGTM=sameer
R=sameer
CC=golang-codereviews, gri
https://golang.org/cl/164460044"
alandonovan,2014-11-12 22:34:15,https://api.github.com/repos/golang/tools/git/commits/194c5aa35001a7091449d82b395f4a00b4cf27e0,194c5aa35001a7091449d82b395f4a00b4cf27e0,"go.tools/go/rta: implement Rapid Type Analysis for Go.

This is an algorithm for callgraph construction that is faster
but much less precise than pointer analysis.
(I evaluated this for the Go Oracle last year but shelved it,
but it's a natural fit for the work Brian is doing on
automatic program minimization.)

LGTM=sameer
R=gri, crawshaw, sameer
CC=bwkster, golang-codereviews
https://golang.org/cl/124690043"
dmitshur,2014-11-12 20:45:17,https://api.github.com/repos/golang/tools/git/commits/a26eca502f195faceb8dbe35a82b1e2e86a0d00a,a26eca502f195faceb8dbe35a82b1e2e86a0d00a,"go.tools/imports: use same logic as 'go' tool for pruning package search.

The previous logic would descend into ""_""-prefixed names, ""testdata"" folders,
and skipped folders beginning with a digit.

Fixes golang/go#8958.

LGTM=bradfitz
R=golang-codereviews, dave, bradfitz
CC=golang-codereviews
https://golang.org/cl/167000043"
alandonovan,2014-11-12 18:37:06,https://api.github.com/repos/golang/tools/git/commits/c097262a24a0e95f95209911a4b11f3257424500,c097262a24a0e95f95209911a4b11f3257424500,"cmd/digraph: support Go-style double-quotes in input data.

+ test.

LGTM=sameer
R=sameer
CC=golang-codereviews, gri
https://golang.org/cl/170090043"
alandonovan,2014-11-10 21:03:40,https://api.github.com/repos/golang/tools/git/commits/fb44a24d4c58830790f15b26afd7a0f10d8b907a,fb44a24d4c58830790f15b26afd7a0f10d8b907a,"refactor/rename: fix crash when renaming anonymous struct field that's a qualified reference

(or a pointer, or both).

+ test

Fixes bug 8924

LGTM=sameer
R=dominik.honnef, sameer
CC=<dominik.honnef, golang-codereviews
https://golang.org/cl/158920043"
adg,2014-11-10 02:58:29,https://api.github.com/repos/golang/tools/git/commits/ab433339646f484c6a609c92d0a8e5a80b94bb59,ab433339646f484c6a609c92d0a8e5a80b94bb59,"x/tools/dashboard/app: respect gohash in Commit.AddResult

This should fix the issue where results sub-repo results are clobbered
by subsequent commits. (Much like the previous fix, which only
fixed the issue for main repo commits.)

TBR=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/167440044"
adg,2014-11-10 02:22:35,https://api.github.com/repos/golang/tools/git/commits/8bd0dd9d190fc73f2ea5959f0ec4fc2551d3c7b1,8bd0dd9d190fc73f2ea5959f0ec4fc2551d3c7b1,"x/tools/dashboard/coordinator: provide build key in / and /root

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/170260044"
adg,2014-11-10 02:21:57,https://api.github.com/repos/golang/tools/git/commits/df7f175a643058ef2be6ff8ccafa270ea4f0ffa6,df7f175a643058ef2be6ff8ccafa270ea4f0ffa6,"x/tools/dashboard/app: revert sub-repo path rename

We're going to keep the old paths in the dashboard until
after Go 1.4 is out the door.

TBR=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/169240044"
adg,2014-11-10 02:18:31,https://api.github.com/repos/golang/tools/git/commits/42bbc3ebf003319b5a6a0149b7631981546528e2,42bbc3ebf003319b5a6a0149b7631981546528e2,"x/tools/dashboard/app: prevent builders from nuking other results

This fixes the issue where a builder would occasionally wipe out
the results from another builder.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/172150043"
adg,2014-11-10 00:49:19,https://api.github.com/repos/golang/tools/git/commits/3ee677ac1c3288940ec6616ca33d4711497b1ec4,3ee677ac1c3288940ec6616ca33d4711497b1ec4,"go.tools/dashboard/env: use newer builder

This version of the builder can handle the new golang.org/x/ paths.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/174750043"
adg,2014-11-09 23:42:45,https://api.github.com/repos/golang/tools/git/commits/bdb10cf821c421b1dcf4a0ed438a264765a3542e,bdb10cf821c421b1dcf4a0ed438a264765a3542e,"go.tools/dashboard/builder: rewrite sub-repo paths before 'go get' and 'go test'

The dashboard still uses the old ""code.google.com/p/go.*"" import paths.
Rewrite them to the new ""golang.org/x/*"" before running 'go get' and 'go test'.

Update golang/go#9079.

LGTM=rsc
R=rsc, bradfitz
CC=golang-codereviews
https://golang.org/cl/174740043"
adg,2014-11-09 21:50:40,https://api.github.com/repos/golang/tools/git/commits/5ebbcd132f1e9c320204496eeeaac47007339543,5ebbcd132f1e9c320204496eeeaac47007339543,"go.tools: use golang.org/x/... import paths

Rewrite performed with this command:
  sed -i '' 's_code.google.com/p/go\._golang.org/x/_g' \
    $(grep -lr 'code.google.com/p/go.' *)

LGTM=rsc
R=rsc
CC=golang-codereviews
https://golang.org/cl/170920043"
alandonovan,2014-11-05 17:34:34,https://api.github.com/repos/golang/tools/git/commits/3191bbae17db7ba9d176ba6a5c7cfb12a9b719b9,3191bbae17db7ba9d176ba6a5c7cfb12a9b719b9,"go/buildutil: call ReadDir via the build.Context's file system interface

LGTM=gri
R=gri, crawshaw
CC=golang-codereviews
https://golang.org/cl/171920043"
adg,2014-11-05 05:52:40,https://api.github.com/repos/golang/tools/git/commits/ef648ad89b6ad7240dd16d3da68e8e7198242f2c,ef648ad89b6ad7240dd16d3da68e8e7198242f2c,"go.tools/godoc/static: replace bake.sh with ""go generate"" rule

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/164490043"
aclements,2014-11-03 22:27:41,https://api.github.com/repos/golang/tools/git/commits/348181cdd4d50393c21eb60fda78af6679a640cc,348181cdd4d50393c21eb60fda78af6679a640cc,"cmd/vet: tests for RET checking, SP checking, and leaf functions

Add tests for recently introduced asm error checks in vet.
This adds tests for the new warnings about functions that
don't store to their return slot before returning or that
store to SP-relative addresses in or beyond the argument
frame.  It also adds a test for leaf function handling on arm,
where the link register is not implicitly saved.

LGTM=rsc
R=rsc
CC=adg, golang-codereviews, r
https://golang.org/cl/166040044"
aclements,2014-11-02 17:21:04,https://api.github.com/repos/golang/tools/git/commits/52f3c4bf8adc7b41d07174539b46b7a2fd1bc0c6,52f3c4bf8adc7b41d07174539b46b7a2fd1bc0c6,"cmd/vet: update test patterns to include asm function name

vet now includes function names in its error messages about
assembly code.  Update the error test patterns to account for
this and expand some patterns to check that go vet discovers
the function name correctly.

Fixes golang/go#9041

LGTM=r
R=adg, r, rsc
CC=golang-codereviews
https://golang.org/cl/170940044"
alandonovan,2014-10-31 19:39:22,https://api.github.com/repos/golang/tools/git/commits/d73c11bfcb55cf77a7fd00a3b7684fc88a03c4b2,d73c11bfcb55cf77a7fd00a3b7684fc88a03c4b2,"refactor/rename: make -from syntax support string literals for complex import paths.

(They may contain any character, after all.)

Also, allow but don't require parens and stars.
e.g. (*""encoding/json"".Decoder).Decode or ""encoding/json"".Decoder.Decode
     but not encoding/json.Decoder.Decode.

Since -from queries are now Go expressions, we use the Go parser.
(Thanks to Rog Peppe for the suggestion.)

LGTM=sameer
R=sameer
CC=golang-codereviews, gri, rogpeppe
https://golang.org/cl/154610043"
adg,2014-10-30 22:04:03,https://api.github.com/repos/golang/tools/git/commits/cf285cde6063ab130cb4b9342346b437411e90a7,cf285cde6063ab130cb4b9342346b437411e90a7,"go.tools/dashboard/app: fix tests

TBR=dvyukov
R=dvyukov, bradfitz
CC=golang-codereviews
https://golang.org/cl/165740043"
adg,2014-10-30 22:03:27,https://api.github.com/repos/golang/tools/git/commits/cce262cd474982b94f209b21ec9a225391c89367,cce262cd474982b94f209b21ec9a225391c89367,"go.tools/dashboard/app: remove redundant transaction

The code is already called from inside a transaction.

TBR=dvyukov
R=dvyukov
CC=golang-codereviews
https://golang.org/cl/161580045"
adg,2014-10-30 22:01:52,https://api.github.com/repos/golang/tools/git/commits/5d1cfb1968816f7ef241a38368aaa1926384be21,5d1cfb1968816f7ef241a38368aaa1926384be21,"go.tools/cmd/godoc: add handlers for new sub-repo paths

Fixes golang/go#9009.

LGTM=rsc
R=rsc
CC=golang-codereviews
https://golang.org/cl/162470043"
aclements,2014-10-30 15:53:56,https://api.github.com/repos/golang/tools/git/commits/c7512a5f833b8065e559e4f58f6f8f292da6a179,c7512a5f833b8065e559e4f58f6f8f292da6a179,"cmd/vet: check return moves, support power64x, various fixes

This adds support for checking moves to the return value stack
slot (from rsc), adds support for checking power64x assembly,
fixes argument offset checking and leaf function support on
platforms with a link register (arm and power64).

LGTM=rsc
R=rsc
CC=golang-codereviews
https://golang.org/cl/166920043"
alandonovan,2014-10-28 16:19:23,https://api.github.com/repos/golang/tools/git/commits/dcf508a4edb3f4fc13325d704b2fbc5c2505c22a,dcf508a4edb3f4fc13325d704b2fbc5c2505c22a,"astutil: delete unused function RenameTop.

Fixes golang/go#9008
(in a manner of speaking)

LGTM=crawshaw
R=crawshaw
CC=bradfitz, golang-codereviews
https://golang.org/cl/165010043"
alexbrainman,2014-10-28 05:59:58,https://api.github.com/repos/golang/tools/git/commits/4bb917e48d0850be408dba39049249930d1738ba,4bb917e48d0850be408dba39049249930d1738ba,"go.tools/cmd/godoc: wait for godoc to exit before removing tmp directory

otherwise tmp directories do not get deleted on windows

LGTM=adg
R=golang-codereviews, adg
CC=golang-codereviews
https://golang.org/cl/166750043"
alexbrainman,2014-10-28 01:26:29,https://api.github.com/repos/golang/tools/git/commits/30f7e631005308139a4fdc8e428fd90950a89338,30f7e631005308139a4fdc8e428fd90950a89338,"go.tools/godoc: do not assume that all windows paths are delimited by os.PathSeparator (fixes build)

Fixes golang/go#9003.

LGTM=adg
R=golang-codereviews, adg
CC=golang-codereviews
https://golang.org/cl/161420043"
alexbrainman,2014-10-28 01:25:46,https://api.github.com/repos/golang/tools/git/commits/d8b266df1c913a8ceeaa9da0cbc83a65760dbfb2,d8b266df1c913a8ceeaa9da0cbc83a65760dbfb2,"go.tools/cmd/godoc: wait for analysis to complete in TestTypeAnalysis

LGTM=adg
R=golang-codereviews, adg
CC=golang-codereviews
https://golang.org/cl/157590043"
adg,2014-10-28 00:25:09,https://api.github.com/repos/golang/tools/git/commits/113eb67ee063e249a73e39b7a75133a82aed03cb,113eb67ee063e249a73e39b7a75133a82aed03cb,"go.tools/dashboard/app: update commit in transaction on perf regression

The sendPerfFailMail function populated a dummy commit value and
then calls commonNotify, which then updated and stored that dummy
commit, hosing the original commit entity.

LGTM=rsc
R=rsc, bradfitz, dvyukov
CC=golang-codereviews
https://golang.org/cl/164960043"
alandonovan,2014-10-27 17:55:52,https://api.github.com/repos/golang/tools/git/commits/11451553df90dae7672c8fe6e1e869263bff4841,11451553df90dae7672c8fe6e1e869263bff4841,"go/pointer: fix panic due to bogus constraint from value,ok receive operation.

See regression test for explanation.

I audited the code for similar issues and found none.

Many thanks to Daniel Morsing for providing a small
reproducible test case, a rarity for PTA bugs!

Fixes golang/go#9002

LGTM=crawshaw
R=crawshaw
CC=daniel.morsing, golang-codereviews
https://golang.org/cl/163350043"
4ad,2014-10-27 16:31:13,https://api.github.com/repos/golang/tools/git/commits/818b91e9f2d469394c91b756301bb41f11384047,818b91e9f2d469394c91b756301bb41f11384047,"go.tools/dashboard: remove Solaris builders from flaky builders list

solaris-amd64-solaris11 has been the most stable builder,
by far, over the last 9 months. solaris-amd64-smartos is
stable too and it's our fastest builder.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=adg, dave, golang-codereviews
https://golang.org/cl/163280043"
dvyukov,2014-10-27 10:07:50,https://api.github.com/repos/golang/tools/git/commits/74dcdae16ab8da7db27c54e37a87e45029edae9f,74dcdae16ab8da7db27c54e37a87e45029edae9f,"dashboard: fix update script
It needs to remove perf results rather than build results.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/164000043"
dvyukov,2014-10-27 10:07:31,https://api.github.com/repos/golang/tools/git/commits/0b5a61fa3aa82a028e0587029a1d44c03a02073e,0b5a61fa3aa82a028e0587029a1d44c03a02073e,"dashboard: fix typo

LGTM=bradfitz
R=adg, bradfitz
CC=golang-codereviews
https://golang.org/cl/162180043"
adg,2014-10-27 09:56:27,https://api.github.com/repos/golang/tools/git/commits/0d5881e51cdf85e66343d0c4dbf29a77e064cc76,0d5881e51cdf85e66343d0c4dbf29a77e064cc76,"go.tools/dashboard: don't notify on failures from flaky plan9 builder

LGTM=dvyukov
R=golang-codereviews, dvyukov
CC=golang-codereviews
https://golang.org/cl/157580043"
dvyukov,2014-10-24 17:05:24,https://api.github.com/repos/golang/tools/git/commits/a7be95346693cee337f776088fd2627bd1adb8c6,a7be95346693cee337f776088fd2627bd1adb8c6,"dashboard: always run bench binary with timeout
When the tree is particularly broken,
even the first invocation of bench binary that queries list
of benchmarks can hang.
Fixes golang/go#8844.

LGTM=bradfitz
R=adg, bradfitz
CC=golang-codereviews
https://golang.org/cl/162160043"
dvyukov,2014-10-24 17:04:13,https://api.github.com/repos/golang/tools/git/commits/e419b2a606c21636faf25d2543295532ae5eca70,e419b2a606c21636faf25d2543295532ae5eca70,"dashboard: extend builder logging
Current response logging logs either nil or pointer value
(e.g. ""dash -> {0xc20802e058}""). Not very useful.
Log actual response data.

LGTM=bradfitz
R=adg, bradfitz
CC=golang-codereviews
https://golang.org/cl/163860043"
griesemer,2014-10-23 17:59:27,https://api.github.com/repos/golang/tools/git/commits/bdfcf50b6ff8d0b870fa75c42a94563d78e5f9b3,bdfcf50b6ff8d0b870fa75c42a94563d78e5f9b3,"cmd/vet: fix internal comments

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/163070043"
alandonovan,2014-10-23 17:42:24,https://api.github.com/repos/golang/tools/git/commits/e2e1830b02bc5325f8f35f114cdcf50ee3769637,e2e1830b02bc5325f8f35f114cdcf50ee3769637,"godoc/analysis: remove obsolete comment.

The bug it refers to is now fixed, and the alternative
implementation it suggests is not an improvement.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/151620044"
griesemer,2014-10-23 16:57:19,https://api.github.com/repos/golang/tools/git/commits/ea1477608dc2669ff085c18ed30750701addccd5,ea1477608dc2669ff085c18ed30750701addccd5,"cmd/vet: use changed types.LookupParent API (fix build)

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/162080043"
griesemer,2014-10-23 16:39:20,https://api.github.com/repos/golang/tools/git/commits/b10dfb99c537d8ff190f5c9585e5f112691d1fc5,b10dfb99c537d8ff190f5c9585e5f112691d1fc5,"go/types: don't mark external package objects as used

Also removes a potential race condition regarding the
used flag of Var objects when type-checking packages
concurrently.

Implementation: Rather than marking all used dot-imported
objects and then deduce which corresponding package was used,
now we consider all dot-imported packages as unused and remove
each package from the unused packages map as objects are used.

Now only objects that can be marked as used have a used field
(variables, labels, and packages).

As a result, the code became cleaner and simpler.

Fixes golang/go#8969.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/163740043"
awly,2014-10-23 16:34:01,https://api.github.com/repos/golang/tools/git/commits/b916c559e7c49356c21f5e3ae6f2bdf7bd169896,b916c559e7c49356c21f5e3ae6f2bdf7bd169896,"cmd/godoc: do not apply package path restrictions onto GOROOT when indexing.

Fixes golang/go#6925.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/156540043"
alandonovan,2014-10-23 13:13:39,https://api.github.com/repos/golang/tools/git/commits/5f5b110a59624295a25a7a7aff322e74e153a009,5f5b110a59624295a25a7a7aff322e74e153a009,"cmd/digraph: digraph: a UNIX-style utility command for common operations on directed graphs in text format.

Example: show the transitive closure of imports of the digraph tool itself:

% go list -f '{{.ImportPath}}{{.Imports}}' ... | tr '[]' '  ' |
    digraph forward code.google.com/p/go.tools/cmd/digraph

+ basic test.

LGTM=gri
R=gri, sameer
CC=golang-codereviews
https://golang.org/cl/161760043"
alexbrainman,2014-10-22 22:45:47,https://api.github.com/repos/golang/tools/git/commits/181e280a22ef5ed4ed8e35d51a73fe6f3b897dc6,181e280a22ef5ed4ed8e35d51a73fe6f3b897dc6,"refactor/rename: use filepath.ToSlash everywhere to fix windows tests

Fixes golang/go#8823.

LGTM=adonovan
R=golang-codereviews, gobot, adonovan
CC=golang-codereviews
https://golang.org/cl/142660043"
dvyukov,2014-10-22 13:44:46,https://api.github.com/repos/golang/tools/git/commits/d183041bb04542dd7aa48b4dca4c31ba25bbe676,d183041bb04542dd7aa48b4dca4c31ba25bbe676,"dashboard: update update script to delete Commit.PerfResult
This is required to repair perf data in the datastore.
Update golang/go#8930.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/158320043"
adg,2014-10-22 00:54:29,https://api.github.com/repos/golang/tools/git/commits/501f6851f9e80ad4267c8a0b60e2e311e97f939d,501f6851f9e80ad4267c8a0b60e2e311e97f939d,"go.tools/dashboard: silence notifications from netbsd-amd64-bsiegert

It is a flaky builder.

LGTM=dave
R=golang-codereviews, dave
CC=golang-codereviews
https://golang.org/cl/155620047"
Luit,2014-10-21 22:33:04,https://api.github.com/repos/golang/tools/git/commits/db0461cf4c1337875be094935c38adfc873a4818,db0461cf4c1337875be094935c38adfc873a4818,"dashboard: images should be fetched from HTTPS

Revision 184f9219148f (from review 152790043) introduced a new image,
linux-x86-clang, and the url is missing the `s` for TLS.

LGTM=adg
R=bradfitz, golang-codereviews, adg
CC=golang-codereviews
https://golang.org/cl/156480043"
alandonovan,2014-10-21 15:15:00,https://api.github.com/repos/golang/tools/git/commits/7f1538dc8cdc02abc028ada3320eb663d18c00af,7f1538dc8cdc02abc028ada3320eb663d18c00af,"refactor: don't litter the source tree with backup turdlets.

Also, restore from backup if the replacement file cannot be written.

LGTM=sameer
R=sameer
CC=golang-codereviews
https://golang.org/cl/155660043"
griesemer,2014-10-20 18:38:02,https://api.github.com/repos/golang/tools/git/commits/0dc96eb94448a6473bc71d83eed18090aef586cb,0dc96eb94448a6473bc71d83eed18090aef586cb,"go/types: make array and struct size computations symetric

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/157110043"
dvyukov,2014-10-18 10:39:02,https://api.github.com/repos/golang/tools/git/commits/78ab88e7210ca33ea1fcc9e48d5e0447aea31c46,78ab88e7210ca33ea1fcc9e48d5e0447aea31c46,"dashboard: fix perf graph view
1. Add missing comma to empty records after addition of Ann column.
2. Fix off-by-one in commit range calculation.
Release tags refer to the last commit of the release,
so there is no need to subtract 1 from them.

TBR=adg
R=adg, bradfitz
CC=golang-codereviews
https://golang.org/cl/157120043"
dvyukov,2014-10-17 10:51:03,https://api.github.com/repos/golang/tools/git/commits/e2b4e09ae172b1b92669461ffe277649c89e13ad,e2b4e09ae172b1b92669461ffe277649c89e13ad,"dashboard: ensure that we ever store valid commits

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews, rsc
https://golang.org/cl/160960043"
dvyukov,2014-10-17 09:56:22,https://api.github.com/repos/golang/tools/git/commits/444afab9ddb03416f256dbf2c3b32a5600f7a2d8,444afab9ddb03416f256dbf2c3b32a5600f7a2d8,"dashboard: add Help button to perf pages
As per Russ' request I've described perf dashboard here:
https://code.google.com/p/go-wiki/wiki/PerfDashboard
And adding links to that page.

LGTM=bradfitz
R=adg, rsc, bradfitz
CC=golang-codereviews
https://golang.org/cl/153620045"
dvyukov,2014-10-17 09:51:23,https://api.github.com/repos/golang/tools/git/commits/be0f29f1782ead5ba339975b960d1ec42a3e149d,be0f29f1782ead5ba339975b960d1ec42a3e149d,"dashboard: fix perf builder
One of these ""how it ever worked?.."" moments.

LGTM=bradfitz
R=adg, bradfitz
CC=golang-codereviews
https://golang.org/cl/158980045"
dvyukov,2014-10-17 08:17:50,https://api.github.com/repos/golang/tools/git/commits/2a277d9349f63359863b7f7a8dfb27ec541cb8c8,2a277d9349f63359863b7f7a8dfb27ec541cb8c8,"dashboard: further improve graph view
1. Don't interpolate missing data points,
instead just use the previous value for missing points.
Interpolation hides significant line jumps,
making it look like the jump is a result of several small changes.
2. Add annotations for significant changes.

LGTM=adg
R=adg
CC=golang-codereviews, iant, rsc
https://golang.org/cl/154360046"
dvyukov,2014-10-17 08:17:35,https://api.github.com/repos/golang/tools/git/commits/165ed12db14ff00adbb45c8085c2a9197682026f,165ed12db14ff00adbb45c8085c2a9197682026f,"dashboard: fix pagination on perf page
Currently the 'latest' button on perf page leads to build page.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/159990044"
dvyukov,2014-10-17 07:38:11,https://api.github.com/repos/golang/tools/git/commits/ddb83b48153625bab7fe7a5aa331a9a1820bcd3d,ddb83b48153625bab7fe7a5aa331a9a1820bcd3d,"dashboard: faster perf data fetching
Use single query to fetch commit runs and metric runs (instead of individual selects).
Hopefully this enables some kind of prefetching.
But more importantly it allows to work around ""gaps"" in commit nums,
as we only fetch data that is actually in the database
and don't try to query all commit runs in the ""gap"".

LGTM=adg
R=adg
CC=golang-codereviews, rsc
https://golang.org/cl/159910045"
dvyukov,2014-10-17 07:34:53,https://api.github.com/repos/golang/tools/git/commits/3eede9be087d51eead20f0d623cb8e679ccc44cd,3eede9be087d51eead20f0d623cb8e679ccc44cd,"dashboard: improve graph view
Several changes as per Russ and Ian requests:

1. Fix almost broken ZoomIn/ZoomOut/Newer/Older with ability zoom in/out and move left/right w/o reloading (the 'explorer' attribute on graph).

2. Start the graph from the current release by default.

3. Allow to select the range of commits by specifying release range (e.g. go1.1 to go1.3 or go1.3 to tip).

4. Make it visually clear that you can select several benchmarks/metrics (replace select with a set of checkboxes).

5. Remove the ""absolute"" mode. Instead normalize all metrics to the start of the release (start becomes 1.0) and all subsequent changes are relative to it.

LGTM=adg
R=adg
CC=golang-codereviews, iant, rsc
https://golang.org/cl/159980043"
dvyukov,2014-10-17 07:34:27,https://api.github.com/repos/golang/tools/git/commits/4201ff03b599e184bc23d705c4f67ef6db46ed62,4201ff03b599e184bc23d705c4f67ef6db46ed62,"dashboard: separate build and non-build metrics in perf dashboard
As per Ian request:

>> Let's clearly separate the build numbers from the runtime numbers.
>> The build numbers are interesting but there are many things that
>> affect them.  The runtime numbers are presumably stable.

LGTM=adg
R=adg
CC=golang-codereviews, iant, rsc
https://golang.org/cl/154440043"
dvyukov,2014-10-17 07:32:43,https://api.github.com/repos/golang/tools/git/commits/a0cb59fbc3a868a290220dd7f325e2c5963668c5,a0cb59fbc3a868a290220dd7f325e2c5963668c5,"dashboard: highlight positive changes
Initially both positive and negative changes had solid background (green and red).
Then we removed background of positive changes due to:
https://code.google.com/p/go/issues/detail?id=8624
However, Ian noted:

""I did intuitively understand that + was an increase and - was a
decrease.  I did not notice how the numbers were segregated between
the third and fourth columns.  Now that you point it out, it is
obvious.  It would be more obvious if the numbers in the fourth column
were highlighted in green.""

Give positive changes green *border* (not background),
so they are still visually distinguishable from negative even in grayscale.
This is especially beneficial for perf detail view,
because currently it looks like everything is either
negative or neutral in that view (only red and black).

LGTM=adg
R=adg
CC=golang-codereviews, iant, rsc
https://golang.org/cl/159970043"
dsymonds,2014-10-15 05:56:09,https://api.github.com/repos/golang/tools/git/commits/26439e8d81646959903b2904e02dbf3ab12eb122,26439e8d81646959903b2904e02dbf3ab12eb122,"cmd/vet: return nil from importType if it fails.

This permits vet to not panic during init if fmt.a is unavailable.

LGTM=r
R=gri, r
CC=golang-codereviews
https://golang.org/cl/153590043"
robpike,2014-10-14 19:55:46,https://api.github.com/repos/golang/tools/git/commits/9be0b38f5b87c386812ee70c63a3bfbf27f128ee,9be0b38f5b87c386812ee70c63a3bfbf27f128ee,"cmd/vet: don't panic if import fails
Initializing the unused variable formatterType (it will be used soon) was
panicking if the import couldn't be done, but vet shouldn't be so fragile.

LGTM=gri
R=gri
CC=dsymonds, golang-codereviews
https://golang.org/cl/153480044"
alandonovan,2014-10-14 16:57:00,https://api.github.com/repos/golang/tools/git/commits/b45b275b99df46918a709c73655e9cbca02cd7d1,b45b275b99df46918a709c73655e9cbca02cd7d1,"go/buildutil: use same logic as 'go' tool for pruning package search.

The previous logic would descend into (e.g.) .git repositories
and vendored packages with ""_""-prefixed names.

Fixes golang/go#8907

LGTM=gri
R=gri
CC=golang-codereviews, shurcool
https://golang.org/cl/157800043"
alandonovan,2014-10-14 16:27:37,https://api.github.com/repos/golang/tools/git/commits/efd8523ea7ce3440815c60f9dab60c9b2d236b5f,efd8523ea7ce3440815c60f9dab60c9b2d236b5f,"go/loader: minor comment fix.

TBR=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/157970043"
alandonovan,2014-10-13 21:47:43,https://api.github.com/repos/golang/tools/git/commits/4ada33969dccba20525b16272792101b605a1f78,4ada33969dccba20525b16272792101b605a1f78,"go/buildutil: use a counting semaphore to limit the number of parallel calls to ReadDir

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/153430043"
hyangah,2014-10-13 16:47:02,https://api.github.com/repos/golang/tools/git/commits/13837d25ef838b2a4bf984086cb9cc392fd66b43,13837d25ef838b2a4bf984086cb9cc392fd66b43,"godoc: exclude internal packages and cmd from packages page.
Internal packages are now only included with ?m=all

Fixes golang/go#8879

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/155910044"
dsymonds,2014-10-12 21:44:37,https://api.github.com/repos/golang/tools/git/commits/0513cb08b66b83f42b171db3006bb417ab6927cd,0513cb08b66b83f42b171db3006bb417ab6927cd,"go.tools/imports: Permit fix_test.go to work pre-Go 1.4.

LGTM=iant
R=iant
CC=golang-codereviews
https://golang.org/cl/156980043"
DanielMorsing,2014-10-12 14:08:28,https://api.github.com/repos/golang/tools/git/commits/70f0e2472d3be5eb3834f4ede6749ab746b87ea4,70f0e2472d3be5eb3834f4ede6749ab746b87ea4,"go.tools/oracle: consider calls to close a peer operation.

This makes it possible to find corresponding closes to receives and sends.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/155260043"
paranoiacblack,2014-10-09 21:04:49,https://api.github.com/repos/golang/tools/git/commits/cced8d21ddff0072338da11d7de4f37958662dba,cced8d21ddff0072338da11d7de4f37958662dba,"dashboard: add 32-bit gccgo builder; improve performance of gccgo builds on docker

This change adds a 32-bit builder for gccgo and fixes some specific
configuration problems with the docker image/coordinator to speed up builds.
The go builder running on the linux-x86-gccgo image has been modified to run
`make -j16` when building to reduce build times from ~60 minutes to ~10 minutes
and the coordinator has been modified to run the command `make check-go -j16`
to reduce testsuite run times from ~30 minutes to ~10 minutes.

LGTM=bradfitz
R=bradfitz
CC=adg, golang-codereviews
https://golang.org/cl/151530043"
griesemer,2014-10-08 20:49:38,https://api.github.com/repos/golang/tools/git/commits/2f1c768885116676fbf6188c7a4b41ac3bd382cb,2f1c768885116676fbf6188c7a4b41ac3bd382cb,"go/types: document default unsafe.Sizeof computation better

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/155150043"
paranoiacblack,2014-10-08 18:45:00,https://api.github.com/repos/golang/tools/git/commits/c066f3309e39c08ed0b03b0bfc7c4c3c0c30b438,c066f3309e39c08ed0b03b0bfc7c4c3c0c30b438,"dashboard/builder: fix gccgo `git log` execution

LGTM=adg
R=bradfitz
CC=adg, golang-codereviews
https://golang.org/cl/149630043"
rsc,2014-10-07 19:37:31,https://api.github.com/repos/golang/tools/git/commits/46e9d8e060515275078b76da523f1bec1e1a08cc,46e9d8e060515275078b76da523f1bec1e1a08cc,"dashboard/app: ignore, try not to create partial Commits

It looks like the partial Commits are coming from the build breakages mails.
If you have commit A newer than commit B, then there are two code
paths depending on which reports its build result first.
For slow development, B finishes before A is committed, so when
A notices a failure it checks to see if B was okay.
That code path seems to be okay.
For submit of back-to-back changes, typically A finishes before B,
so when B notices an okay it checks to see if A failed.
That code path seems to zero the Commit for A while
trying to set its FailNotificationSent to true.
It does (did) succeed in setting FailNotificationSent to true,
it just zeroed everything else.

This CL adds code to refuse to do the datastore.Put to
update FailNotificationSent if the Commit info is incomplete.

It also tries to ignore Num=0 records, but that may not be
as important anymore.

LGTM=cmang
R=cmang
CC=golang-codereviews
https://golang.org/cl/154080043"
adg,2014-10-06 22:58:49,https://api.github.com/repos/golang/tools/git/commits/f463296c27a054e8ed6a4245577209391439a603,f463296c27a054e8ed6a4245577209391439a603,"go.tools/dashboard/app: document special error string

TBR=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/152250043"
adg,2014-10-06 05:32:41,https://api.github.com/repos/golang/tools/git/commits/491eb0856413d0182b7eed17c9b8bb244c8e8183,491eb0856413d0182b7eed17c9b8bb244c8e8183,"go.tools/dashboard/watcher: commit watcher rewrite

LGTM=bradfitz
R=bradfitz, alex.brainman, dvyukov
CC=golang-codereviews
https://golang.org/cl/155730043"
adg,2014-10-06 05:28:27,https://api.github.com/repos/golang/tools/git/commits/fcf4a08452f41a6ac343d36985d9499822de38fb,fcf4a08452f41a6ac343d36985d9499822de38fb,"go.tools/dashboard/app: return specific error string on commit not found

TBR=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/153070043"
adg,2014-10-04 04:18:41,https://api.github.com/repos/golang/tools/git/commits/51be54e32f361c59569717433695d7e4ebf6a201,51be54e32f361c59569717433695d7e4ebf6a201,"go.tools/dashboard/app: show main repo commits with no build results

The UI template iterates over ResultGoHashes to display the Commit
rows. This was done for the sub-repository build view, where it
only makes sense to show a row when there's build data for it.

However, in the main page UI we do want to see if a commit has hit
the dashboard but has not yet been built.

This change causes the dashboard to show the commit row even if
there are no build results for it yet.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/153010043"
adg,2014-10-03 22:43:04,https://api.github.com/repos/golang/tools/git/commits/4fb5eee0bdcc5f4798da290b52089092a2937610,4fb5eee0bdcc5f4798da290b52089092a2937610,"go.tools/dashboard/builder: fix build

TBR=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/151370044"
adg,2014-10-03 22:33:52,https://api.github.com/repos/golang/tools/git/commits/fce07d6ae8f6506712f58e4bb2d32d8f08192ea2,fce07d6ae8f6506712f58e4bb2d32d8f08192ea2,"go.tools/dashboard/app: fix integration tests

They had been broken after a few recent changes.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/152150043"
adg,2014-10-03 22:26:17,https://api.github.com/repos/golang/tools/git/commits/d322540ca775bffa9cc618cdc0a7f60767d82234,d322540ca775bffa9cc618cdc0a7f60767d82234,"go.tools/dashboard/builder: make old commit watcher opt-in and exclusive

Only gccgo should be using this now, and hopefully not for too long.
Turn it off by default, and make it the only thing that happens
when it's switched on.

LGTM=bradfitz, cmang
R=bradfitz, cmang
CC=golang-codereviews
https://golang.org/cl/153940043"
adg,2014-10-03 22:25:32,https://api.github.com/repos/golang/tools/git/commits/8f69c6b2df5c1f87da2a1c94c9bc96a8dda1df8d,8f69c6b2df5c1f87da2a1c94c9bc96a8dda1df8d,"go.tools/dashboard/app: require version=2 for commit updates

This will prevent older, buggy builders from posting commits.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/153930043"
dmitshur,2014-10-02 17:33:35,https://api.github.com/repos/golang/tools/git/commits/cccd43354a94cc5c2d3178355fbfe9b7a2db03c1,cccd43354a94cc5c2d3178355fbfe9b7a2db03c1,"cmd/vet: fix bug where incorrect exit code was returned

Fixes golang/go#8792.

This is a simple change that fixes the issue. It may be desireable
to opt for a larger code change that makes this problem less likely
to be inadvertedly reintroduced in the future. For instance, a vetMain()
func can be used similar to gofmtMain(), or the os.Exit call can be
deferred.

LGTM=r
R=golang-codereviews, r
CC=golang-codereviews
https://golang.org/cl/150850043"
paranoiacblack,2014-10-01 23:40:04,https://api.github.com/repos/golang/tools/git/commits/59d8afa26b98f2b5311703f89fbd5f4397b40a4c,59d8afa26b98f2b5311703f89fbd5f4397b40a4c,"dashboard/env: install necessary headers for linux-386-clang

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/147420044"
paranoiacblack,2014-10-01 18:57:02,https://api.github.com/repos/golang/tools/git/commits/bcbfc883f4916ec1fb4a15463df4830c380100d7,bcbfc883f4916ec1fb4a15463df4830c380100d7,"dashboard: add linux-amd64-clang builder.

Fixes golang/go#8805.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/152790043"
griesemer,2014-10-01 16:56:28,https://api.github.com/repos/golang/tools/git/commits/a7f9d5d4f823e184bed26710a1f19cc116a9c29f,a7f9d5d4f823e184bed26710a1f19cc116a9c29f,"go/types: use file not parse order for init order computation

The type-checker depended on (token.Pos) position information of
the presented files to determine source order. That information
is determined by the parse order of the files rather than the
order in which the files are presented to the type-checker.

Introduced an order number strictly determined by the file
order as presented to the type-checker and the AST structure
of each file; thus providing source order information even in
the absence of (token.Pos) position information.

Added test case (provided by adonovan).

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/151160043"
alandonovan,2014-09-30 16:12:40,https://api.github.com/repos/golang/tools/git/commits/4fd305d5dc4a4a8854a05aa01b9f9960cae18d68,4fd305d5dc4a4a8854a05aa01b9f9960cae18d68,"go/types: remove surplus (obsolete) lines from test expectation.

Also add assertion that there are no surplus lines.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/151890043"
paranoiacblack,2014-09-29 19:47:01,https://api.github.com/repos/golang/tools/git/commits/0e613cdb27899cb9918e32b27994317f30118913,0e613cdb27899cb9918e32b27994317f30118913,"dashboard/env: optimize linux docker image size for gccgo

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/141320043"
josharian,2014-09-29 19:46:11,https://api.github.com/repos/golang/tools/git/commits/b6c30b58fc98af83f12e946ffeddd50d0cebb8f0,b6c30b58fc98af83f12e946ffeddd50d0cebb8f0,"go.tools/imports: recognize exports in cgo files

Fixes golang/go#8815.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/143660044"
josharian,2014-09-26 22:09:18,https://api.github.com/repos/golang/tools/git/commits/e62e5f9885b771592173395e9fee76423203fd3c,e62e5f9885b771592173395e9fee76423203fd3c,"go.tools/cmd/vet: remove duplicate test file

In CL 145360043, I hg cp'd copylock.go to copylock_func.go instead of hg mv. Oops.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/143660043"
bradfitz,2014-09-26 22:02:51,https://api.github.com/repos/golang/tools/git/commits/51805171bdfbb2a8d71b338afed8317c470badc4,51805171bdfbb2a8d71b338afed8317c470badc4,"dashboard: add Debian sid builder

Update golang/go#8382

LGTM=rsc
R=adg, rsc
CC=golang-codereviews
https://golang.org/cl/150090044"
bradfitz,2014-09-26 19:21:08,https://api.github.com/repos/golang/tools/git/commits/aca3a63806fce103ad2182701c1384b81e976f07,aca3a63806fce103ad2182701c1384b81e976f07,"dashboard/coordinator: restore buildroot to /

So the optimization to avoid hg clone works again.  The
builder looks at buildroot+""goroot"" for an hg clone repo. If
it finds it, it can just ""hg pull"" instead of a slow ""hg
clone"".

LGTM=cmang
R=cmang, proppy
CC=golang-codereviews
https://golang.org/cl/147960044"
griesemer,2014-09-26 04:36:45,https://api.github.com/repos/golang/tools/git/commits/6f764e19fa6fc3b7d556c0372f6d01bef61b3689,6f764e19fa6fc3b7d556c0372f6d01bef61b3689,"go/types: don't permit declarations in post statements

Plus better names for some internal objects.

Fixes golang/go#8804.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/149080043"
bradfitz,2014-09-26 01:06:17,https://api.github.com/repos/golang/tools/git/commits/29d9ef959cacd1501457696c853e71365e02e1d5,29d9ef959cacd1501457696c853e71365e02e1d5,"dashboard: more robust commit handler, and allow modifications

LGTM=rsc, adg
R=golang-codereviews, rsc, adg
CC=dvyukov, golang-codereviews
https://golang.org/cl/136540044"
alandonovan,2014-09-25 21:14:39,https://api.github.com/repos/golang/tools/git/commits/c80e5833f9eb770594f7f75c41351301b4ae7c0c,c80e5833f9eb770594f7f75c41351301b4ae7c0c,"go/ssa/interp: fix fallout from recent runtime refactoring.

(It's not clear at what point a more robust solution would be worthwhile.)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/142700043"
griesemer,2014-09-24 20:54:50,https://api.github.com/repos/golang/tools/git/commits/315249fc55ae97302d56fda38cb3fd822f9a5724,315249fc55ae97302d56fda38cb3fd822f9a5724,"cmd/vet: provide access to externally defined types

Preliminaries for fixing issue 6212.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/145370043"
alandonovan,2014-09-24 20:38:46,https://api.github.com/repos/golang/tools/git/commits/3fc6159fa3973e6a1ea138da11dbc8d4123e5b17,3fc6159fa3973e6a1ea138da11dbc8d4123e5b17,"refactor/rename: attempt to fix windows test, 2nd attempt.

Windows doesn't regard ""/go/src"" as an absolute path,
so we must explicitly define the virtual IsAbsPath method.

LGTM=gri
R=gri, sameer
CC=golang-codereviews
https://golang.org/cl/147100043"
alandonovan,2014-09-24 20:18:58,https://api.github.com/repos/golang/tools/git/commits/a69ece7231e1edfca29369f20942777f1649c284,a69ece7231e1edfca29369f20942777f1649c284,"refactor/rename: attempt to fix windows build...

...by using buildutil.ContainingPackage instead of guessImportPath.
The former should be more portable.

(I meant to do this earlier, so this is also a nice cleanup.)

LGTM=gri
R=gri, sameer
CC=golang-codereviews
https://golang.org/cl/148050043"
bradfitz,2014-09-24 19:54:59,https://api.github.com/repos/golang/tools/git/commits/717118b6c83ee612ffee325fd4f1aca22437f12c,717118b6c83ee612ffee325fd4f1aca22437f12c,"dashboard: add builder with optimizations and inlining disabled

LGTM=josharian
R=josharian
CC=golang-codereviews
https://golang.org/cl/148060043"
josharian,2014-09-24 19:35:15,https://api.github.com/repos/golang/tools/git/commits/2cd071c190dbf3b1aaf805f58bc62dd6054ceff4,2cd071c190dbf3b1aaf805f58bc62dd6054ceff4,"go.tools/cmd/vet: warn about copying locks in range statements

Fixes golang/go#8356.

LGTM=r
R=r, dsymonds
CC=golang-codereviews
https://golang.org/cl/145360043"
griesemer,2014-09-24 18:09:05,https://api.github.com/repos/golang/tools/git/commits/37dd89e3af765ed41f0ad6c1c3b007e726e54eaf,37dd89e3af765ed41f0ad6c1c3b007e726e54eaf,"go.tools/go/types: reduce spurious errors after missing identifiers

Fixes golang/go#8799.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/143560043"
alexbrainman,2014-09-24 02:59:42,https://api.github.com/repos/golang/tools/git/commits/9cde9bdbd1c56aeed4ff872b43384b1846737bad,9cde9bdbd1c56aeed4ff872b43384b1846737bad,"go.tools/dashboard/builder: try to recreate workpath if already exists

Fixes golang/go#8714.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/148010043"
bradfitz,2014-09-23 21:56:02,https://api.github.com/repos/golang/tools/git/commits/e06c202657e115f001a9f1eece0092d9bcaa1255,e06c202657e115f001a9f1eece0092d9bcaa1255,"dashboard: use correct hg template for parents

The 'parents' field is documented to be blank if there's only one
simple parent. We want 'p1node', which is the hex commit of the
first parent.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/142530043"
alandonovan,2014-09-23 19:17:49,https://api.github.com/repos/golang/tools/git/commits/e94ae771711a01555408dd0aba2735cdae96312b,e94ae771711a01555408dd0aba2735cdae96312b,"refactor: minor no-op fixes

- fix typos and mistakes in docstrings, usage message and comments.
- remove 'backup' parameter to rewriteFile

LGTM=sameer
R=sameer
CC=golang-codereviews
https://golang.org/cl/147980043"
bradfitz,2014-09-23 18:22:54,https://api.github.com/repos/golang/tools/git/commits/f123f00fbce98f1d53e4de2330c151ccaa09e646,f123f00fbce98f1d53e4de2330c151ccaa09e646,"dashboard: add commit-only mode

Also add a added=true addition that I seemed to think was
previously missing.

Breaking this out of previous big CL.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/146080043"
alandonovan,2014-09-23 14:23:04,https://api.github.com/repos/golang/tools/git/commits/74021b417566bf454c6cba504c3114d6e891bb1a,74021b417566bf454c6cba504c3114d6e891bb1a,"cmd/gorename: a precise, type-aware renaming tool for Go identifiers.

See the usage message in main.go for orientation.

To the best of my knowledge, the tool implements all required
soundness checks, except:
- the dynamic behaviour of reflection is obviously undecidable.
- it rejects method renamings that change the ""implements"" relation.
  It should probably be more aggressive.
- actually it only checks the part of the ""implements"" relation
  needed for compilation.  Understanding the dynamic behaviour
  of interfaces is obviously undecidable.
- a couple of minor gaps are indicated by TODO comments.

Also:
- Emacs integration.
- tests of all safety checks and (some) successful rewrites.

LGTM=dominik.honnef, sameer
R=gri, sameer, dominik.honnef
CC=golang-codereviews
https://golang.org/cl/139150044"
alandonovan,2014-09-23 14:20:48,https://api.github.com/repos/golang/tools/git/commits/aba8625c37c754698e2b0dbf6243ddf9c819d6b4,aba8625c37c754698e2b0dbf6243ddf9c819d6b4,"go.tools/go/buildutil: more utilities.

- ParseFile (core of go/loader's parseFiles(); also used by refactor/rename)
- ContainingPackage (core of Oracle's guessImportPath; also used by refactor/rename)
- Accessors for effective ""methods"" of build.Context:
  FileExists, OpenFile, IsAbsPath, JoinPath.

LGTM=sameer
R=dave, sameer
CC=golang-codereviews, gri
https://golang.org/cl/146120043"
alandonovan,2014-09-22 20:19:29,https://api.github.com/repos/golang/tools/git/commits/c90cb9e0422f3ea01937d3df305effa56b2afe49,c90cb9e0422f3ea01937d3df305effa56b2afe49,"refactor/satisfy: enumerate interface satisfaction constraints induced by Go syntax.

The type checker does not currently report the set of pairs of
types that are tested for assignability (though gri and I
agree that it should).  This information is useful for many
applications.  For example, refactoring tool needs to know the
minimal set of interface satisfaction constraints that must be
preserved during a refactoring.

This package is a stopgap measure to deduce the same
information using another pass.  Unlike go/types, it is not
robust against inputs containing type errors.

LGTM=sameer
R=gri, sameer
CC=golang-codereviews
https://golang.org/cl/136470043"
alandonovan,2014-09-19 17:11:01,https://api.github.com/repos/golang/tools/git/commits/897f6677aee36b4a9dea3c04538a95dd38120d01,897f6677aee36b4a9dea3c04538a95dd38120d01,"refactor/lexical: understand the structure of the lexical environment.

The Uses, Defs and Scope information provided by go/types is
inadequate for answering ""what if?"" queries about the
structure of the lexical environment.

In this code, for example,

        var x int

        func f() {
                print(x)
                x := """"
                print(x)
        }

the two referring Idents x appear at the same lexical depth,
inside the function f's Scope object, yet they resolve to
different objects.

This package associates a lexical.Environment instance with
every reference to capture these differences.  Each
environment is a linked list of enclosing Blocks, and for each
block, a number indicating what prefix of its bindings are
visible.  (Zero for the first 'x' reference above, 1 for the
second.)

+ Smoke test over stdlib.

This functionality could be integrated with the type checker
in lieu of the not-so-useful types.Info.Scopes data, at little
extra cost in code or in running time/space.  We should talk
about that.

LGTM=sameer
R=gri, sameer
CC=golang-codereviews
https://golang.org/cl/143790043"
alandonovan,2014-09-18 14:05:26,https://api.github.com/repos/golang/tools/git/commits/fec4d1f60d661c44ff920425ed99d24c8aaec863,fec4d1f60d661c44ff920425ed99d24c8aaec863,"refactor/importgraph: add test of cycles

Nodes in a strongly connected component (which includes most
stdlib packages) appear in results of both ""forward"" and
""reverse"" searches from any other node in the same SCC.

LGTM=sameer
R=sameer
CC=golang-codereviews, gri
https://golang.org/cl/136470044"
adg,2014-09-18 08:07:02,https://api.github.com/repos/golang/tools/git/commits/520acf2e17e380d794da2a17728250e4287a1862,520acf2e17e380d794da2a17728250e4287a1862,"go.tools/dashboard/app: don't ignore field mismatch errors

This was a hold-over from when we removed install counts years ago.
All the Package entities are well-formed these days.

LGTM=dsymonds
R=dsymonds
CC=golang-codereviews
https://golang.org/cl/138620043"
alandonovan,2014-09-16 20:24:52,https://api.github.com/repos/golang/tools/git/commits/15e89a9a8c4ade0da550b4b87936fd137337cc8e,15e89a9a8c4ade0da550b4b87936fd137337cc8e,"godoc/analysis: log one error per error package.

Previously type errors were reported via the web interface but
not logged, but this led to confusion as to why SSA
construction and/or pointer analysis were not attempted.

LGTM=gri
R=gri, bradfitz
CC=golang-codereviews
https://golang.org/cl/136660043"
griesemer,2014-09-15 18:32:39,https://api.github.com/repos/golang/tools/git/commits/9dcf670d507b1b21e2842b9fa8ec847de8348238,9dcf670d507b1b21e2842b9fa8ec847de8348238,"go.tools/go/types: documentation follow-up

Added documentation per request in
https://golang.org/cl/108230044 .

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/137620044"
alandonovan,2014-09-15 18:01:54,https://api.github.com/repos/golang/tools/git/commits/f13b4c029c97f81c00837ddc9f984067692b2af5,f13b4c029c97f81c00837ddc9f984067692b2af5,"go.tools/go/ssa: fix a race condition in needMethodsOf.

Now all calls are serialized with a mutex.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/140600043"
alandonovan,2014-09-15 17:13:07,https://api.github.com/repos/golang/tools/git/commits/b94e29089bf072d1a9d4b4ea76f4fd731b65bf72,b94e29089bf072d1a9d4b4ea76f4fd731b65bf72,"godoc: run bake.sh again.

CL 141540043 was half-baked.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/142130043"
alandonovan,2014-09-15 17:00:40,https://api.github.com/repos/golang/tools/git/commits/ebc87c5c5e8ebc43d402336e5c68290211ed0c29,ebc87c5c5e8ebc43d402336e5c68290211ed0c29,"godoc: fix bug in ""internal call graph"" tree widget.

Today I learned that getElementByClass returns an
HTMLContainer, not an array, so the for loop was iterating its
properties, which include:
- the methods of the type, which were filtered out by the condition;
- the array-like integer indices of the elements, which we want;
- the ids of the same elements (!), which we weren't expecting.
The net result is that various functions were called twice,
causing the tree to be double-populated and clicks to cause
and expand+collapse.

It's a miracle to me that any JS program even approximately works.

Fixes golang/go#8237

LGTM=bradfitz
R=gri, bradfitz
CC=golang-codereviews
https://golang.org/cl/141540043"
alandonovan,2014-09-15 16:03:05,https://api.github.com/repos/golang/tools/git/commits/1bd4ccf210abd566d1ad6abfd0bcdc6257f265e2,1bd4ccf210abd566d1ad6abfd0bcdc6257f265e2,"go/loader: clarify the nocgo check.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/144910043"
griesemer,2014-09-13 03:29:27,https://api.github.com/repos/golang/tools/git/commits/ab25303a78b751d9fa6fb2e72c6950953eaa426b,ab25303a78b751d9fa6fb2e72c6950953eaa426b,"go.tools/go/loader: disable test case to fix build

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/139650043"
griesemer,2014-09-12 15:17:14,https://api.github.com/repos/golang/tools/git/commits/f04d2c5c346b9e42e1f69109134f03be60967c45,f04d2c5c346b9e42e1f69109134f03be60967c45,"go.tools/go/importer: fix importer test for 32bit platforms

(The previous fix attempt didn't address all uses uses of
types.Config.Check.)

Fixes golang/go#8366.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/141430044"
adg,2014-09-12 01:14:03,https://api.github.com/repos/golang/tools/git/commits/37340ffc2f341e23f031cf2c33e6dc1a7836250b,37340ffc2f341e23f031cf2c33e6dc1a7836250b,"go.tools/dashboard: use shorter notification template for cl updates

LGTM=dvyukov
R=dvyukov
CC=golang-codereviews
https://golang.org/cl/139320043"
griesemer,2014-09-11 22:22:30,https://api.github.com/repos/golang/tools/git/commits/83560bf6dbcdda6b1a8acb6fb6b2c68a7109d915,83560bf6dbcdda6b1a8acb6fb6b2c68a7109d915,"go.tools/go/importer: fix test (src/pkg -> src)

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/142010043"
alandonovan,2014-09-11 22:08:33,https://api.github.com/repos/golang/tools/git/commits/85a95658226904faa771be470dfb809b7e4aea22,85a95658226904faa771be470dfb809b7e4aea22,"go/ssa: fix bug causing (manual) go/pointer stdlib test to crash.

The needMethods cache logic was wrong: it would treat any
previous call as a cache hit, even if 'skip' was true for that
call.  As a result it could fail to generate methods for some
'skip' types, i.e. anonymous structs.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/144750043"
alandonovan,2014-09-11 18:33:37,https://api.github.com/repos/golang/tools/git/commits/66176e290c95d6d032a38b9be652f0d2a6a753cf,66176e290c95d6d032a38b9be652f0d2a6a753cf,"go/buildutil: rename AllPackages{,List} -> {ForEachPackage,AllPackages}.

This CL is the first refactoring automated by ""gorename"". :)
Though I had to update the comments and run 'hg gofmt'.   :(

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/142930043"
alandonovan,2014-09-11 18:14:53,https://api.github.com/repos/golang/tools/git/commits/78aabae27e59f253778b6ac751579fd009db274f,78aabae27e59f253778b6ac751579fd009db274f,"go.tools: eliminate three copies of the allPackages utility.

The one in godoc/analysis will have to wait.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/142860043"
alandonovan,2014-09-11 17:31:05,https://api.github.com/repos/golang/tools/git/commits/7de4da029c452cd88975fc1708d511b42fc2c039,7de4da029c452cd88975fc1708d511b42fc2c039,"go/ssa/interp: exclude ""runtime"" from the list of initial packages in the test

It now has a main() function, which was confusing the logic to find the entry point.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/142860044"
alandonovan,2014-09-10 13:02:54,https://api.github.com/repos/golang/tools/git/commits/6c93dbff3ec12656424bf64aa2c771b2ff028bac,6c93dbff3ec12656424bf64aa2c771b2ff028bac,"go.tools/godoc: deal with fallout from $GOROOT/src/pkg -> $GOROOT/src renaming.

To avoid breaking URLs, we redirect /src/pkg/* to /src/*.

The URL /pkg is now the ""directory"" /src, which triggers the
""Packages"" index.

All other references to ""src/pkg"" are now gone,
except a number in the namespace documentation which are
probably still illustrative.

Tested: go test cmd/godoc godoc
        Manual inspection of src and src/pkg pages.
        with GOROOT and GOPATH packages
        -analysis
        /AUTHORS file URL still works

LGTM=bradfitz, adg
R=bradfitz, adg
CC=golang-codereviews
https://golang.org/cl/141770044"
alandonovan,2014-09-09 22:39:26,https://api.github.com/repos/golang/tools/git/commits/3cded4a933411269fc791af6d1167c4f6149e8ee,3cded4a933411269fc791af6d1167c4f6149e8ee,"refactor/importgraph: a utility for computing the import graph.

Refactoring tools can use this to determine an upper bound on
the set of packages potentially affected by a refactoring.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/141310043"
alandonovan,2014-09-09 22:39:14,https://api.github.com/repos/golang/tools/git/commits/77b9ff6df372713b070dabbc087761ae770e4555,77b9ff6df372713b070dabbc087761ae770e4555,"go.tools/go/buildutil: AllPackages: enumerate all packages in a Go workspace.

This function has been copied at least 6 times throughout
go.tools.  This implementation is superior since it does
all I/O through the virtualized go/build file system, and it
is highly parallel (and much faster).

We expose two flavours, simple (for existing tests) and
parallel (for high-performance tools such as gorename).

This CL creates the go/buildutil package, which is intended for
utilities related to go/build.

+ test.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/137430043"
robpike,2014-09-09 20:29:38,https://api.github.com/repos/golang/tools/git/commits/e548cb3dfea0bc39e43e2f702259027f60328f10,e548cb3dfea0bc39e43e2f702259027f60328f10,"go.tools/cmd/stringer: fix docs: stringer is not a ""go tool""
Documentation change only. The binary will not be installed
using the ""go tool"" mechanism.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/133710046"
paranoiacblack,2014-09-09 17:56:30,https://api.github.com/repos/golang/tools/git/commits/84c740c8b6af133cc42c1013cbfe314aa6bcc92a,84c740c8b6af133cc42c1013cbfe314aa6bcc92a,"dashboard/env: install dejagnu for gccgo's testsuite

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/141860043"
paranoiacblack,2014-09-09 17:54:11,https://api.github.com/repos/golang/tools/git/commits/bbfe5adf96127c110435259602fa7c6f2d8f0087,bbfe5adf96127c110435259602fa7c6f2d8f0087,"coordinator: add support for different build dashboards

LGTM=bradfitz
R=bradfitz
CC=adg, golang-codereviews
https://golang.org/cl/135520043"
proppy,2014-09-08 22:35:40,https://api.github.com/repos/golang/tools/git/commits/afc3bf64c0db903a40b476ab867e02168806f839,afc3bf64c0db903a40b476ab867e02168806f839,"dashboard: optimize linux docker image size

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/132590043"
alandonovan,2014-09-08 18:20:12,https://api.github.com/repos/golang/tools/git/commits/159879b3367bbe72ba1b32752d99b2033db7cf2b,159879b3367bbe72ba1b32752d99b2033db7cf2b,"go.tools/imports: src/pkg -> src

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/141260043"
griesemer,2014-09-08 17:29:00,https://api.github.com/repos/golang/tools/git/commits/476d41c67b58f833e3f2c094ca766cad9ad2f59e,476d41c67b58f833e3f2c094ca766cad9ad2f59e,"go.tools/go/types: better error messages

- for unused packages where base(package path) != package name
- for conflicts between imported packages or dot-imported objects
  and local declarations

Per suggestions from adonovan, inspired by the gc error messages.

LGTM=adonovan
R=adonovan, bradfitz
CC=golang-codereviews
https://golang.org/cl/135550043"
alandonovan,2014-09-08 17:24:38,https://api.github.com/repos/golang/tools/git/commits/9872f0d268f2a312a77e14a5164cd5ee3b11722d,9872f0d268f2a312a77e14a5164cd5ee3b11722d,"go.tools/*: replace $GOROOT/src/pkg with $GOROOT/src where appropriate.

(godoc is excluded from this CL since it will continue to use
/src/pkg in its URL namespace, making the necessary cleanup
more subtle.)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/141770043"
adg,2014-09-08 05:46:41,https://api.github.com/repos/golang/tools/git/commits/850afc6bb538c115c9b4fbfa367a8a8f115f53d3,850afc6bb538c115c9b4fbfa367a8a8f115f53d3,"go.tools/dashboard/app: update CL threads with perf notifications

LGTM=dvyukov
R=dvyukov
CC=golang-codereviews, rsc
https://golang.org/cl/135460043"
alexbrainman,2014-09-08 03:55:05,https://api.github.com/repos/golang/tools/git/commits/d39af6c903d154189b34ef63aa3bb0eef1532bde,d39af6c903d154189b34ef63aa3bb0eef1532bde,"go.tools/cmd/stringer: add .exe suffix to executable name in TestEndToEnd

Fixes windows build

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/140360043"
adg,2014-09-08 00:05:20,https://api.github.com/repos/golang/tools/git/commits/96adaa5618b8742d2c96536afe4d5ace17ce214c,96adaa5618b8742d2c96536afe4d5ace17ce214c,"go.tools/godoc: remove Google+ buttons

LGTM=bradfitz
R=golang-codereviews, bradfitz, dsymonds
CC=golang-codereviews
https://golang.org/cl/138180043"
robpike,2014-09-06 00:05:28,https://api.github.com/repos/golang/tools/git/commits/d03e8a67dfec146df46dca2d65e87a3d00050349,d03e8a67dfec146df46dca2d65e87a3d00050349,"go.tools/cmd/stringer: delete needless subtraction of zero in generated code

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/136270043"
robpike,2014-09-05 22:42:23,https://api.github.com/repos/golang/tools/git/commits/d0448f16e38c37ca134c308efa7a5a847114772d,d0448f16e38c37ca134c308efa7a5a847114772d,"go.tools/cmd/stringer: add end-to-end test that compiles, runs, and verifies the generated method
In the process, fix a bug in one of the method generators.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/141130043"
bradfitz,2014-09-05 21:48:12,https://api.github.com/repos/golang/tools/git/commits/d30a33e34685200965aae5e1d315a118b46db29a,d30a33e34685200965aae5e1d315a118b46db29a,"dashboard/builder: finish the previous -report=false change

We weren't using the *report flag enough.

LGTM=proppy
R=proppy
CC=golang-codereviews
https://golang.org/cl/132650043"
bradfitz,2014-09-05 20:00:51,https://api.github.com/repos/golang/tools/git/commits/cb318644df424281fe40953e4867dbb998dbccb3,cb318644df424281fe40953e4867dbb998dbccb3,"dashboard/builder: add -report=false flag for testing Docker images

LGTM=proppy
R=proppy
CC=golang-codereviews
https://golang.org/cl/138140043"
rsc,2014-09-05 18:13:44,https://api.github.com/repos/golang/tools/git/commits/27a49c973b892d479edb73ee4449540dbe879338,27a49c973b892d479edb73ee4449540dbe879338,"goimports: print \n at end of errors

LGTM=r
R=r
CC=bradfitz, golang-codereviews
https://golang.org/cl/136230045"
paranoiacblack,2014-09-05 18:08:15,https://api.github.com/repos/golang/tools/git/commits/f0c7ec0ef3bb04dd30ddd52ae597d962ddae2cea,f0c7ec0ef3bb04dd30ddd52ae597d962ddae2cea,"dashboard/env: add gccgo amd64 builder

LGTM=bradfitz
R=bradfitz
CC=adg, golang-codereviews
https://golang.org/cl/139250043"
bradfitz,2014-09-05 00:48:56,https://api.github.com/repos/golang/tools/git/commits/89759c3d1a9c715c504665dbd4e4d9b54477038f,89759c3d1a9c715c504665dbd4e4d9b54477038f,"dashboard/coordinator: set USER for the -nocgo builder

... since it already caught a problem and was fixed in
hg rev 0b99c2137ccc.

I pushed this live already just so don't get a whole column of
fail that might hide other issues. Real users have USER set
anyway. (Perhaps we should set it for all our builders?)

LGTM=adg
R=golang-codereviews
CC=adg, dave, golang-codereviews, minux
https://golang.org/cl/137180043"
bradfitz,2014-09-04 23:58:49,https://api.github.com/repos/golang/tools/git/commits/8c30c1b367e1acf24ac82a3487cbedbf8b45cb3a,8c30c1b367e1acf24ac82a3487cbedbf8b45cb3a,"dashboard/env: add a cgo-disabled Linux builder

I think this is all that's needed?

Fixes golang/go#4795

LGTM=adg, dave
R=adg, dave
CC=golang-codereviews
https://golang.org/cl/138090043"
robpike,2014-09-04 23:18:38,https://api.github.com/repos/golang/tools/git/commits/75b67f833e59953244f9c58f358c57b32d9b8c42,75b67f833e59953244f9c58f358c57b32d9b8c42,"go.tools/cmd/stringer: fix generated map code
Missed comment from previous code review.
Next up: execution tests so this won't happen again

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/134480043"
robpike,2014-09-04 23:06:51,https://api.github.com/repos/golang/tools/git/commits/22ede605a76fe5957178d9b6290c986ae066316d,22ede605a76fe5957178d9b6290c986ae066316d,"go.tools/cmd/stringer: use const for names, slice for map strings
Improve the generated code by using a const instead of a var for the names string.
This requires some refactoring to get neat const() and var() blocks.
Also change the generate map code go use a single sliced string, to reduce the
size of the compiled representation (only one string value).

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/135450044"
bradfitz,2014-09-04 21:52:34,https://api.github.com/repos/golang/tools/git/commits/a4e9bdfb20b340583fa4a101f49e368ec45996e4,a4e9bdfb20b340583fa4a101f49e368ec45996e4,"dashboard/builder: set correct path to gcc

Otherwise when running -386 and -amd64 on the same machine
with both copies of TDM-GCC installed (the installer wizard lets
you choose which one, and you can do both options in two
different install attemps), one previously got this error when
using the 64-bit gcc with a 386 build:

--- FAIL: TestStdcallAndCDeclCallbacks (0.12s)
panic: Failed to load C:\Users\WINDOW~1\AppData\Local\Temp\1\TestCDeclCallback960696761\test.dll: %1 is not a valid Win32 application. [recovered]
       panic: Failed to load C:\Users\WINDOW~1\AppData\Local\Temp\1\TestCDeclCallback960696761\test.dll: %1 is not a valid Win32 application.

goroutine 81490 [running]:
runtime.panic(0x5b8c00, 0x1390d4e0)
        c:/gobuilder/windows-386-gce-b24422c8828f/go/src/pkg/runtime/panic.c:130 +0xed fp=0x12d99f78 sp=0x12d99f24
testing.func·006()
        c:/go/src/pkg/testing/testing.go:421 +0x147 fp=0x12d99fd0 sp=0x12d99f78
----- stack segment boundary -----
runtime.panic(0x5b8c00, 0x1390d4e0)
        c:/gobuilder/windows-386-gce-b24422c8828f/go/src/pkg/runtime/panic.c:98 +0x17a fp=0x12155e98 sp=0x12155e44
syscall.MustLoadDLL(0x1390b7c0, 0x4a, 0x2)
        c:/go/src/pkg/syscall/dll_windows.go:62 +0x6c fp=0x12155eb8 sp=0x12155e98
runtime_test.(*cbTest).run(0x12155f24, 0x1213cc00, 0x1390b7c0, 0x4a)
        c:/gobuilder/windows-386-gce-b24422c8828f/go/src/pkg/runtime/syscall_windows_test.go:399 +0x36 fp=0x12155ef4 sp=0x12155eb8
runtime_test.TestStdcallAndCDeclCallbacks(0x1213cc00)
        c:/gobuilder/windows-386-gce-b24422c8828f/go/src/pkg/runtime/syscall_windows_test.go:448 +0x28e fp=0x12155fac sp=0x12155ef4

TBR=cmang
R=cmang
CC=adg, golang-codereviews
https://golang.org/cl/141070043"
robpike,2014-09-04 21:16:59,https://api.github.com/repos/golang/tools/git/commits/9207f672793c6826aa8fbd57d49bb32dfff02657,9207f672793c6826aa8fbd57d49bb32dfff02657,"go.tools/cmd/stringer: add tests
Refactor a little to make testing easier.
Add golden tests and a check fo splitIntoRuns, which is the subtlest piece.
Still to come: execution tests.

Also fix a few issues in the generated code.

LGTM=gri
R=gri
CC=golang-codereviews, josharian
https://golang.org/cl/134450044"
bradfitz,2014-09-04 20:46:24,https://api.github.com/repos/golang/tools/git/commits/196bd6741ea8e1e952cd0fb3c26f844f365f6fbf,196bd6741ea8e1e952cd0fb3c26f844f365f6fbf,"dashboard/builder: fallback to finding build keys from GCE metadata

LGTM=cmang
R=cmang
CC=adg, golang-codereviews
https://golang.org/cl/133610043"
mattn,2014-09-04 17:51:38,https://api.github.com/repos/golang/tools/git/commits/0673c34537f17801600241c44aad2ceecfb4298e,0673c34537f17801600241c44aad2ceecfb4298e,"go.tools/cmd/stringer: Fix build on 32bit OSs.

LGTM=r
R=golang-codereviews, gri, r
CC=golang-codereviews
https://golang.org/cl/138040043"
griesemer,2014-09-04 17:13:49,https://api.github.com/repos/golang/tools/git/commits/de5d8186816c66b2421e59b08276e9673c195799,de5d8186816c66b2421e59b08276e9673c195799,"go.tools/go/types: simplify LookupFieldOrMethod

Remove a 2nd lookup in some cases.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/136190043"
bradfitz,2014-09-04 14:10:07,https://api.github.com/repos/golang/tools/git/commits/710872e5c8aff71025111c518770da0cde33eca1,710872e5c8aff71025111c518770da0cde33eca1,"dashboard/coordinator: support reusing VM disk between boots

Creating a new disk is the major latency cost of creating a
new instance.  If we reuse a previous disk image, the VM and
CoreOS boot much quicker and start building again.

So add a mode where we don't mark the disk as delete-on-death
when we create it, and we search for a suitably-named existing
one on creation and try to reuse it.

It's a cache, essentially. It's still stateless.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/135410043"
bradfitz,2014-09-04 14:09:54,https://api.github.com/repos/golang/tools/git/commits/148182812545940da218eea5b8f64663f363c3f3,148182812545940da218eea5b8f64663f363c3f3,"dashboard/env: restore the periods after docker build

They're required but adg wanted them removed and I listened :)

TBR=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/136200043"
bradfitz,2014-09-04 04:41:16,https://api.github.com/repos/golang/tools/git/commits/c0bc9ba88d775d8271cad6aaee425c08c1a638dd,c0bc9ba88d775d8271cad6aaee425c08c1a638dd,"dashboard: add Cloud Storage upload support to create.go

Then make the coordinator and linux environment Makefiles have
an upload target. Amusingly, this actually worked: the Docker
images now tar + compress + upload over HTTP all in a stream,
without even knowing how large the resulting tar.gz will be until
it's done uploading.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/140200043"
robpike,2014-09-04 00:27:48,https://api.github.com/repos/golang/tools/git/commits/2c5c896732f6bfdcc0360b5afe8b3345c6b2e758,2c5c896732f6bfdcc0360b5afe8b3345c6b2e758,"go.tools/cmd/stringer: new tool

This tool creates String methods from constant definitions.
It's a time-saver designed to be used from go generate.
The methods generated are efficient, more so than one
is likely to create by hand.

Given

        package date

        type Day int

        const (
                Monday Day = iota
                Tuesday
                Wednesday
                Thursday
                Friday
                Saturday
                Sunday
        )

the command

        stringer -type Day

will create the file day_string.go containing

        package date

        import ""fmt""

        var (
                _Day_indexes = []uint8{6, 13, 22, 30, 36, 44, 50}
                _Day_names   = ""MondayTuesdayWednesdayThursdayFridaySaturdaySunday""
        )

        func (i Day) String() string {
                if i < 0 || i >= Day(len(_Day_indexes)) {
                        return fmt.Sprintf(""Day(%d)"", i)
                }
                hi := _Day_indexes[i]
                lo := uint8(0)
                if i > 0 {
                        lo = _Day_indexes[i-1]
                }
                return _Day_names[lo:hi]
        }

There are several strategies for the created method chosen according to
the structure of the sequence of constants.

Handles integer types only, both signed and unsigned. That's probably
all that is needed.

Tests to follow, but the test structure will be large so sending this out
separately. The code has been heavily hand-tested but there are
some bugs. Don't depend on this until the tests are installed.

LGTM=gri
R=gri, josharian
CC=golang-codereviews
https://golang.org/cl/136180043"
bradfitz,2014-09-04 00:15:00,https://api.github.com/repos/golang/tools/git/commits/9f2fca72f63940c11d6d77c8deef93a1cd3c9bc8,9f2fca72f63940c11d6d77c8deef93a1cd3c9bc8,"dashboard: find static IP automatically, update images

Remove subversion & use newer version of the builder which
makes -verbose direct all.bash output to stdout/stderr.

LGTM=cmang
R=adg, cmang
CC=golang-codereviews
https://golang.org/cl/140910044"
robpike,2014-09-03 23:49:14,https://api.github.com/repos/golang/tools/git/commits/1e11d05bd820097463af874315e4a16256439d7f,1e11d05bd820097463af874315e4a16256439d7f,"cmd/vet: simplify file-reading code per gri

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/140960043"
bradfitz,2014-09-03 17:26:52,https://api.github.com/repos/golang/tools/git/commits/867f4b09aeb52d0aefadfdd6aa6beb2dd03bd2de,867f4b09aeb52d0aefadfdd6aa6beb2dd03bd2de,"coordinator: new binary to run on GCE and manage Docker builds

See http://golang.org/s/builderplan (WIP doc)

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/131490043"
adg,2014-09-03 02:54:38,https://api.github.com/repos/golang/tools/git/commits/a455c4c58e4cdb73be605b67161a865eedf63f5e,a455c4c58e4cdb73be605b67161a865eedf63f5e,"go.tools/dashboard/app: drop green coloring from perf dashboard

Fixes golang/go#8624.

LGTM=dave, aram
R=dvyukov, dave, aram
CC=golang-codereviews
https://golang.org/cl/140840043"
griesemer,2014-09-02 22:53:24,https://api.github.com/repos/golang/tools/git/commits/d7f2ea810f481a229be853c054e08671f63b69e6,d7f2ea810f481a229be853c054e08671f63b69e6,"go.tools/go/types: document Config.Error better

LGTM=adonovan
R=adonovan, dsymonds
CC=golang-codereviews
https://golang.org/cl/137960044"
alandonovan,2014-09-02 22:40:16,https://api.github.com/repos/golang/tools/git/commits/79df80a148c441e3268b2fb5226c9bf5c9a634bf,79df80a148c441e3268b2fb5226c9bf5c9a634bf,"go/ssa/interp: add no-op intrinsic for runtime.init().

Recent changes in the runtime caused the interpreter to call 'getg',
and it should never have gotten that far.

Also, delete bodies of ""runtime"" functions, since they're too magical.
This makes missing intrinsics cause very obvious failures.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/135330043"
alandonovan,2014-09-02 22:12:08,https://api.github.com/repos/golang/tools/git/commits/95bd0c4fdf163d875765b42c6c707221d49fe137,95bd0c4fdf163d875765b42c6c707221d49fe137,"go.tools/go/types: add (*PkgName).ImportedPackage method.

It returns the value formerly returned by Pkg(), i.e. the imported package.
Pkg() now returns the package enclosing the import statement,
which is consistent with all other Objects.

Fixes golang/go#8628.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/136090043"
dvyukov,2014-09-01 08:51:14,https://api.github.com/repos/golang/tools/git/commits/297fd8229cc32585f134cfeff777a049918d4a90,297fd8229cc32585f134cfeff777a049918d4a90,"dashboard/app: actually learn noise levels

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/135190043"
mjibson,2014-08-29 18:17:01,https://api.github.com/repos/golang/tools/git/commits/59c864756201f50c737208490a686f22a2033e17,59c864756201f50c737208490a686f22a2033e17,"go.tools/cmd/vet: detect suspicious shifts

LGTM=josharian, dsymonds, r
R=golang-codereviews, josharian, minux, dsymonds, dave, axwalk, adg, r
CC=golang-codereviews
https://golang.org/cl/134780043"
griesemer,2014-08-29 16:15:36,https://api.github.com/repos/golang/tools/git/commits/a4d1505cfc0c9e4bf946db7d1662c8643f974b3d,a4d1505cfc0c9e4bf946db7d1662c8643f974b3d,"go.tools/go/types: remove Strict mode from API

Also: factor out shared code assertableTo.

LGTM=adonovan
R=adonovan, gordon.klaus
CC=golang-codereviews
https://golang.org/cl/139880043"
dsymonds,2014-08-28 22:56:35,https://api.github.com/repos/golang/tools/git/commits/2b15aa63b7ef877573980c91658d6b79e6356409,2b15aa63b7ef877573980c91658d6b79e6356409,"go.tools/cmd/vet: don't panic on zero arg Log method calls.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/134000043"
griesemer,2014-08-28 22:19:30,https://api.github.com/repos/golang/tools/git/commits/4c3c0f68c510f59809e79f5a61116dbbf0449032,4c3c0f68c510f59809e79f5a61116dbbf0449032,"go.tools/go/importer: use platform-specific word size in tests

Hopefully
Fixes golang/go#8366.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/138810043"
bradfitz,2014-08-28 21:58:15,https://api.github.com/repos/golang/tools/git/commits/cd91e8d0964547a2bc7db49f9492be21922353f4,cd91e8d0964547a2bc7db49f9492be21922353f4,"dashboard/builder: modernize ancient exec wrappers

They were from a time before we had the os/exec package, if
memory serves.

Also, make verbose also mean that the main build's stdout
and stderr go to the real stdout and stderr as well.
I'll want that for the Docker-based builder.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/135000043"
griesemer,2014-08-28 21:57:53,https://api.github.com/repos/golang/tools/git/commits/776a9335ce9d8d6983dfc2bc9b86dd17e03f57fe,776a9335ce9d8d6983dfc2bc9b86dd17e03f57fe,"go.tools/go/types: fix typo in comment

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/135960043"
griesemer,2014-08-28 21:03:10,https://api.github.com/repos/golang/tools/git/commits/289e96cc2682be00f0fbf3641972f774617b0d36,289e96cc2682be00f0fbf3641972f774617b0d36,"go.tools/go/types: no errors for x.(T) where T is an interface

Also: Added Config.Strict flag to enable type checker tests
      beyond the Go 1 specification.

Fixes golang/go#8561.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/134050043"
alandonovan,2014-08-28 20:56:49,https://api.github.com/repos/golang/tools/git/commits/cd5b7ff3181e5a095e9eac4c157b0b340222bca0,cd5b7ff3181e5a095e9eac4c157b0b340222bca0,"go/ssa/interp: add intrinsic for runtime.environ, recently added.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/135120043"
paranoiacblack,2014-08-28 20:50:29,https://api.github.com/repos/golang/tools/git/commits/86df324d650de37e8fc311848b6a07718060c598,86df324d650de37e8fc311848b6a07718060c598,"dashboard: quote metacharacters when searching for gcc commits

LGTM=adg
R=adg
CC=golang-codereviews, iant
https://golang.org/cl/131420043"
griesemer,2014-08-28 20:03:13,https://api.github.com/repos/golang/tools/git/commits/5dca7d8bd123e6b72bd63e2910d9b5cf15a28462,5dca7d8bd123e6b72bd63e2910d9b5cf15a28462,"go.tools/go/types: LookupFieldOrMethod checks method set

LookupFieldOrMethod now also decides whether a found
method is actually in the method set. Simplifies call
sites. Added corresponding API tests.

TODO (separate CL): Decide what the correct value for
the indirect result should be (as required for code
generation). For now, the result value for indirect
is unchanged from before if a field/method is found.

Fixes golang/go#8584.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/132260043"
griesemer,2014-08-28 19:17:30,https://api.github.com/repos/golang/tools/git/commits/87b4cd993d5a680572e14238721a0f848e479f7d,87b4cd993d5a680572e14238721a0f848e479f7d,"go.tools/go/types: don't crash dealing with unknown constants

Also: Better tracing for top-level declarations.

Fixes golang/go#8518.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/132310043"
adg,2014-08-28 00:57:52,https://api.github.com/repos/golang/tools/git/commits/61ce470a5ed4f38114e1586b61bca0413a53989a,61ce470a5ed4f38114e1586b61bca0413a53989a,"go.tools/dashboard/app: fix column order for -temp builders

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/138760044"
bradfitz,2014-08-27 07:10:16,https://api.github.com/repos/golang/tools/git/commits/f34e673079278609eb856cece9f421b8231986c3,f34e673079278609eb856cece9f421b8231986c3,"dashboard/env: add nacl-386 and nacl-amd64p32 builders

LGTM=adg
R=adg, dave
CC=golang-codereviews
https://golang.org/cl/136830043"
OlingCat,2014-08-26 20:22:54,https://api.github.com/repos/golang/tools/git/commits/5a1d3be7549cedfb1bd4f8bcbd4f218c647f3b8c,5a1d3be7549cedfb1bd4f8bcbd4f218c647f3b8c,"go.tools/godoc/static/package.html: remove extra tag; indent with tabs.

LGTM=gri
R=golang-codereviews, gobot, rsc, gri
CC=golang-codereviews
https://golang.org/cl/120380044"
OlingCat,2014-08-26 20:21:29,https://api.github.com/repos/golang/tools/git/commits/e14fb0e1eeaa2dbe6bfca74ed4ea5097f160090e,e14fb0e1eeaa2dbe6bfca74ed4ea5097f160090e,"go.tools/godoc/static: indent with tabs.

LGTM=gri
R=golang-codereviews, gobot, gri
CC=golang-codereviews
https://golang.org/cl/120390043"
alandonovan,2014-08-26 19:52:40,https://api.github.com/repos/golang/tools/git/commits/4abc8436bc9453e8f90fe166abb7b4a26f0d1c5f,4abc8436bc9453e8f90fe166abb7b4a26f0d1c5f,"cmd/eg: add -beforeedit flag, which specifies a command to run before editing a file.

e.g. chmod +w, checkout.

Also: add a TIPS section to the documentation.

LGTM=crawshaw
R=crawshaw, gri
CC=golang-codereviews
https://golang.org/cl/136780044"
griesemer,2014-08-26 17:56:22,https://api.github.com/repos/golang/tools/git/commits/7486f5904a9e33b41f41e8275a314709fc05618a,7486f5904a9e33b41f41e8275a314709fc05618a,"go.tools/go/types: added TODO re: misleading error message

Fix not urgent.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/135810043"
alandonovan,2014-08-26 15:48:15,https://api.github.com/repos/golang/tools/git/commits/4aaa1f6f6c088818d1d24200e5256443c9166537,4aaa1f6f6c088818d1d24200e5256443c9166537,"go/ssa/interp: fix intrinsics for (*runtime.Func) methods.

They changed when they were ported to Go in CL
https://golang.org/cl/124300044.

LGTM=crawshaw
R=gri, crawshaw
CC=golang-codereviews
https://golang.org/cl/136780043"
alandonovan,2014-08-26 15:08:45,https://api.github.com/repos/golang/tools/git/commits/067a2992ee7962d12b195ad350a074ce89447aca,067a2992ee7962d12b195ad350a074ce89447aca,"go/pointer: fix runtime.startTimer intrinsic.

The test broke because the actual behaviour of time.startTimer changed in
https://golang.org/cl/129480043.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/131280043"
bradfitz,2014-08-26 07:41:41,https://api.github.com/repos/golang/tools/git/commits/cd6dcd8cb54ce41e7be9f460a3b6a4c7f2b561be,cd6dcd8cb54ce41e7be9f460a3b6a4c7f2b561be,"dashboard/env: fix 32-bit builds

(Fix from adg)

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/136760043"
adg,2014-08-26 07:34:24,https://api.github.com/repos/golang/tools/git/commits/cb487641b8869c8a141b2a176dccb74d13d3d53c,cb487641b8869c8a141b2a176dccb74d13d3d53c,"go.tools/dashboard: fix integration test

LGTM=dvyukov
R=dvyukov
CC=golang-codereviews
https://golang.org/cl/126700043"
bradfitz,2014-08-26 07:33:19,https://api.github.com/repos/golang/tools/git/commits/eb8b4b0d41c427608a45ca64089cbab4250b3cbe,eb8b4b0d41c427608a45ca64089cbab4250b3cbe,"dashboard: start of Dockeritization of Linux builders

Good checkpoint. Can now do builds by hand.

Next step is coordinator server in front of this, and things
to fire up beefy GCE instances running CoreOS and each build
in its own Docker container. See README for how to do a single
build.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/134870043"
adg,2014-08-26 04:49:16,https://api.github.com/repos/golang/tools/git/commits/51353854a46fa6fa74c00831a4dc47659e2ae58c,51353854a46fa6fa74c00831a4dc47659e2ae58c,"go.tools/dashboard: display ""-temp"" builders last

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/133000043"
robpike,2014-08-25 19:31:49,https://api.github.com/repos/golang/tools/git/commits/cd9959d7961630233395ad0a1167a51c3f5b06ef,cd9959d7961630233395ad0a1167a51c3f5b06ef,"go.tools/cmd/vet: validate calls to t.Log and t.Logf
Be careful not to complain about math.Log and cmplx.Log.
Seems worthwhile since t.Log and t.Logf are often written but
rarely executed.

Nothing new turned up in the standard library.

Fixes golang/go#8504.

LGTM=josharian, dsymonds
R=golang-codereviews, josharian, dsymonds
CC=golang-codereviews
https://golang.org/cl/130490043"
robpike,2014-08-25 00:26:18,https://api.github.com/repos/golang/tools/git/commits/671b9204b8535d162539565b87e7c0d66243efd7,671b9204b8535d162539565b87e7c0d66243efd7,"go.tools/cmd/vet: change message for range check
s/enclosed by function/captured by func literal/
Users complained. They often do.

LGTM=josharian, adg
R=golang-codereviews, josharian, nightlyone, minux, adg
CC=golang-codereviews
https://golang.org/cl/132080043"
fatih,2014-08-21 23:28:12,https://api.github.com/repos/golang/tools/git/commits/ba91af23b8efe23f923097d9a065e4ee75f9e8cb,ba91af23b8efe23f923097d9a065e4ee75f9e8cb,"cmd/cover: add start lines numbers to each function in -func mode

This CL aims to fix the problem described here:

https://groups.google.com/forum/#!topic/golang-nuts/R6ms1n9KjiY

This makes it easier to parse via external tools such as editors. Editors can
show each function in a list and jump directly to each function with this
additional information. This pattern can be seen in other Go tools such as ""go
test"" in the form of:

--- FAIL: TestCover (0.52 seconds)
        cover_test.go:43: example error

LGTM=adg
R=r, adg, josharian, dave
CC=golang-codereviews
https://golang.org/cl/131820043"
adg,2014-08-20 23:53:57,https://api.github.com/repos/golang/tools/git/commits/277e5a16d79a3b9d4cbbdd6577f6fd32546d2353,277e5a16d79a3b9d4cbbdd6577f6fd32546d2353,"go.tools/godoc: mention sub-repos and package indexes on packages page

Also several cosmetic tweaks to the package page.

LGTM=r, bradfitz
R=bradfitz, r
CC=golang-codereviews
https://golang.org/cl/128490043"
robpike,2014-08-20 18:14:50,https://api.github.com/repos/golang/tools/git/commits/f11381f265cad9b00eff0401a73a308bb77870ca,f11381f265cad9b00eff0401a73a308bb77870ca,"go.tools/cmd/cover: don't assume code is gofmt'd

We want to make an if look like two blocks and have the coverage
report for the else block decorate the ""else"" keyword with the right
color. To do this, we adjust the apparent starting point of the else
block to include the ""else"".

The previous code assumed the way to do this was to move the
width of ""else "" backwards from the else block's opening brace, but
that assumes there is a space there. Instead, we now just start the
else block exactly at the end of the if block. Simpler, cleaner, and
fixes a bug.

Fixes golang/go#8557.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/127620043"
adg,2014-08-20 11:45:01,https://api.github.com/repos/golang/tools/git/commits/c21a767b2c99c5eee40e63075b5309f1ed8dcb11,c21a767b2c99c5eee40e63075b5309f1ed8dcb11,"go.tools/dashboard/app: reject /commit requests from old builders

This is so that we don't corrupt our commit history with reports
from old builders, after the migration to the latest build dashboard.

LGTM=dvyukov
R=dvyukov
CC=golang-codereviews
https://golang.org/cl/130300043"
dvyukov,2014-08-20 09:24:05,https://api.github.com/repos/golang/tools/git/commits/5d476c529359b5b4a042a0f91e2d2d10d0ad2538,5d476c529359b5b4a042a0f91e2d2d10d0ad2538,"dashboard/app: dedup changes in UI
Currently for every benchmark/metric we show all changes for all builders x procs.
With 4 builders and 5 procs, that's 20 changes (20 red/green boxes in a single cell).
Instead show only maximum change for every benchmark/metric.
This significantly reduces clutter in UI.
When you click on the red/green box, you can see the rest of the changes.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/126430043"
dvyukov,2014-08-20 09:20:12,https://api.github.com/repos/golang/tools/git/commits/1d2a5001058c6e520e8fcb44786916cd4143a138,1d2a5001058c6e520e8fcb44786916cd4143a138,"dashboard/app: allow to gob-encode PerfChange
Currently appspot logs say:
delay: gob encoding failed: gob: type build.PerfChange has no exported fields
And I was thinking why it is not sending mails...

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/125480043"
campoy,2014-08-20 00:55:46,https://api.github.com/repos/golang/tools/git/commits/e8a1924bfbd35797bc654c2a0f2638c99f0b9a76,e8a1924bfbd35797bc654c2a0f2638c99f0b9a76,"html2article: Ignore empty anchor elements and obtain the original url from Google Docs

LGTM=adg
R=adg, campoy
CC=golang-codereviews
https://golang.org/cl/127560043"
dvyukov,2014-08-19 12:22:27,https://api.github.com/repos/golang/tools/git/commits/f579fb3656a7193bb17a8f842f098733df467b6a,f579fb3656a7193bb17a8f842f098733df467b6a,"dashboard/app: eliminate more flakes
Currently we still see some flakes on perf dashboard (e.g. sys-stack is quite frequent).
I am planning to run real perf builder with 5 different values of GOMAXPROCS,
so we can require 3 builders to agree on a change instead of 2.
This will provide 20x improvement in flake detection.
At the same time lower noise bar from 1.2 to 1.1, as I see some real perf changes gets ignored as noise.

All these magic numbers affect only representation of data, but not the data stored in DB.
So we can continue freely tuning them later. There are no significant risks here.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/127520044"
adg,2014-08-19 10:43:50,https://api.github.com/repos/golang/tools/git/commits/92eb99d907ce01085643d982b886bfd26d9259ea,92eb99d907ce01085643d982b886bfd26d9259ea,"go.tools/dashboard: fix various small UI issues

- stop time column from wrapping,
- fix pagination on front page,
- left-align pagination buttons.

LGTM=dvyukov
R=dvyukov, golang-codereviews
CC=golang-codereviews
https://golang.org/cl/126410043"
alandonovan,2014-08-19 02:31:56,https://api.github.com/repos/golang/tools/git/commits/845abca4e3ccd90e71d02564828a909ddb514cc6,845abca4e3ccd90e71d02564828a909ddb514cc6,"go/types/typeutil: Dependencies utility returns transitive closure of import graph.

(Used by forthcoming 'singlefile' command.)

+ Test.

LGTM=bwkster, gri
R=gri, bwkster
CC=golang-codereviews
https://golang.org/cl/130100043"
josharian,2014-08-14 18:51:51,https://api.github.com/repos/golang/tools/git/commits/cc1e254c181bce8a6e6b741f835d5e5ab1b94854,cc1e254c181bce8a6e6b741f835d5e5ab1b94854,"go.tools/astutil: delete all matching imports in DeleteImport

Fixes golang/go#8459.

LGTM=crawshaw, bradfitz
R=bradfitz, crawshaw
CC=golang-codereviews
https://golang.org/cl/128220043"
alandonovan,2014-08-14 16:10:34,https://api.github.com/repos/golang/tools/git/commits/f13ba7892045b73661c82cb621d32f97b29694c9,f13ba7892045b73661c82cb621d32f97b29694c9,"go.tools/go/loader: make error message for massive failure (e.g. no ""fmt"") more concise.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/126080043"
adg,2014-08-13 00:54:52,https://api.github.com/repos/golang/tools/git/commits/c98886f21f04323d9d829df3fc52ab642f9ce7c5,c98886f21f04323d9d829df3fc52ab642f9ce7c5,"go.tools/dashboard/builder: use https to talk to dashboard

LGTM=crawshaw
R=golang-codereviews, crawshaw
CC=golang-codereviews
https://golang.org/cl/125100043"
adg,2014-08-12 21:55:36,https://api.github.com/repos/golang/tools/git/commits/2607e9b47aa6b14cedddbe66b9933588c98d4b57,2607e9b47aa6b14cedddbe66b9933588c98d4b57,"go.tools/dashboard/app: add go.sys to builder package list

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/129030043"
adg,2014-08-11 23:22:11,https://api.github.com/repos/golang/tools/git/commits/573fa9f0bda4e82239019dc199de58f24d545721,573fa9f0bda4e82239019dc199de58f24d545721,"cmd/cover: show file coverage in HTML drop down

As requested on Stack Overflow: http://goo.gl/ams9fY
(Kudos to sberry for his JavaScript solution, provided there.
This change does the same thing on the server side.)

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/127030043"
alandonovan,2014-08-08 18:47:16,https://api.github.com/repos/golang/tools/git/commits/cd6b8ab06d3bf22ad12964d8d3894c063d7a3375,cd6b8ab06d3bf22ad12964d8d3894c063d7a3375,"go.tools/go/ssa: improvements to CreateTestMainPackage.

(1) support Example functions defined in programs that don't
    import ""testing"".  We emit code to testmain.main() to call
    them directly, since we can't call testing.Main.

(2) expose a FindTests function which reports the set of
    Test, Example and Benchmark functions it finds.
    Certain clients need this.

Added test for logic in FindTests.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/115290048"
griesemer,2014-08-07 19:45:28,https://api.github.com/repos/golang/tools/git/commits/8ce35843de20ec7db259ef7e21e8f5bcbd5cec57,8ce35843de20ec7db259ef7e21e8f5bcbd5cec57,"go.tools/go/types: handle all receiver errors in go/types

Pending parser change in CL 123010044.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/125830043"
alandonovan,2014-08-07 16:50:15,https://api.github.com/repos/golang/tools/git/commits/3bbc63016b1c00619a8ddab1d92b31162a740df0,3bbc63016b1c00619a8ddab1d92b31162a740df0,"go.tools/go/loader: report parser errors too.

Previously these were recorded in the PackageInfo, but not
reported to the user's error handler (types.Config.Error),
which is typically what prints them.

Minor subtlety: that function must now be able to handle error
values that are not of type types.Error.

+ Test (and renamed it).

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/121290043"
alandonovan,2014-08-07 14:57:00,https://api.github.com/repos/golang/tools/git/commits/d3f2df4854085b15e90fb7e99440b07ee93c0a02,d3f2df4854085b15e90fb7e99440b07ee93c0a02,"go.tools/go/ssa/interp: some fixes to tests

- Break out parts of coverage.go into more specific files.
- Re-enable test of nil interface-to-interface conversion.
- Update initorder test to reflect spec ambiguity and gc vs go/types variance.
- Re-enable test dependent on now-fixed bug 8189 (""value,ok"" yields an untyped bool)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/119530043"
campoy,2014-08-05 23:02:39,https://api.github.com/repos/golang/tools/git/commits/11569f39ea28129db47c4512bc236be4faed1f64,11569f39ea28129db47c4512bc236be4faed1f64,"go.tools/cmd/present: track page views for every slide.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/124720043"
griesemer,2014-08-05 18:34:36,https://api.github.com/repos/golang/tools/git/commits/b31dcd16559d7f9f25199b34d137a2156b93e21c,b31dcd16559d7f9f25199b34d137a2156b93e21c,"go/types: comma-ok expressions return untyped boolean as 2nd result

Per acceptance of https://golang.org/cl/112320045/ .

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/113990043"
campoy,2014-08-04 22:55:39,https://api.github.com/repos/golang/tools/git/commits/82b913fb17ccd8b3b308d70de99e847ce05ca5a9,82b913fb17ccd8b3b308d70de99e847ce05ca5a9,"playground: add ctrl-enter shortcut for gofmt (as in the tour)

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/120420044"
campoy,2014-08-01 22:04:49,https://api.github.com/repos/golang/tools/git/commits/cf8082eec5232d8074be664cef7ce8020c1a6bc7,cf8082eec5232d8074be664cef7ce8020c1a6bc7,"go.tools/playground: return a better message for code starting with a shebang on non local mode

LGTM=adg, dan.kortschak
R=adg, dan.kortschak, campoy
CC=golang-codereviews
https://golang.org/cl/119160043"
alandonovan,2014-08-01 18:44:37,https://api.github.com/repos/golang/tools/git/commits/149e03031883e8d3b65441a91d17bf11a19fa6c1,149e03031883e8d3b65441a91d17bf11a19fa6c1,"go.tools/cmd/ssadump: print packages and functions to stdout, not stderr.

And serialize the printing of each item with a mutex.
It is the formatted output of this tool, after all.

Also: minor doc tweaks.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/114620044"
alandonovan,2014-07-31 21:37:41,https://api.github.com/repos/golang/tools/git/commits/4228ee80630b1fe5c46861efc593dc57b718afe3,4228ee80630b1fe5c46861efc593dc57b718afe3,"go.tools/go/ssa: improve printing of anonymous functions.

Examples:
- ""foo$1"" becomes ""pkg.foo$1""
- ""init$1"" (meaning the first declared ""init"" function) becomes ""init#1"",
   to distinguish it from ""init$1"" (meaning the first anonymous function
   within the synthetic ""init"" function that initializes package-level vars).

It is now an invariant that all source-level (non-synthetic)
functions have distinct names, and that all names include the
enclosing package.  Added test for this.

+ updated various clients.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/122750043"
alandonovan,2014-07-31 20:29:47,https://api.github.com/repos/golang/tools/git/commits/b4194651313e596e8bd94b57c154f20f5048ad9e,b4194651313e596e8bd94b57c154f20f5048ad9e,"go.tools/go/ssa: print types package-relative in all instructions.

It was missing from the four conversions and the Make* instructions.

(Experiments with pure bytes.Buffer-based printing were not faster; various TODOs removed.)

LGTM=crawshaw
R=gri, crawshaw
CC=golang-codereviews
https://golang.org/cl/58040043"
alandonovan,2014-07-31 20:28:34,https://api.github.com/repos/golang/tools/git/commits/31c2077fe3fb3392717e1e65e409811dcb90db13,31c2077fe3fb3392717e1e65e409811dcb90db13,"go.tools/go/ssa: rename promote.go and split into two files, {methods,wrappers}.go.

Also:
- move shared utilities to util.go.
- rename types.Selection vars.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/113550043"
josharian,2014-07-29 00:15:17,https://api.github.com/repos/golang/tools/git/commits/3442faf3c16806675020c2d1c0efd338b228a771,3442faf3c16806675020c2d1c0efd338b228a771,"go.tools/imports: go/format outbound code

Fixes golang/go#8035.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews, shurcool
https://golang.org/cl/120840044"
adg,2014-07-25 00:27:31,https://api.github.com/repos/golang/tools/git/commits/8aabc9a084facc8f2b103bc241df6cbc215fef61,8aabc9a084facc8f2b103bc241df6cbc215fef61,"go.tools/godoc: drop scheme from links

golang.org now serves HTTPS,
so the scripts should work
with either HTTP ot HTTPS.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/111640043"
alandonovan,2014-07-24 18:12:52,https://api.github.com/repos/golang/tools/git/commits/935700a08155da65d3d9b04fc227777c08c718f4,935700a08155da65d3d9b04fc227777c08c718f4,"go.tools/go/loader: apply DisplayPath to working directory of cgo tool.

This transforms the virtualized directory (build.Context).Dir to a physical one,
for proprietary build systems that distinguish them.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/116230043"
alandonovan,2014-07-23 19:37:37,https://api.github.com/repos/golang/tools/git/commits/9ffbf2997150d3566659b50fb55387118cffaed9,9ffbf2997150d3566659b50fb55387118cffaed9,"go.tools/go/ssa: add hook to testmain.go for proprietary (non-'go test') build systems.

Users need only add an extra file to the package to specify
additional imports and initialization steps in testmain, to
match their build system.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/120090043"
paranoiacblack,2014-07-23 17:22:29,https://api.github.com/repos/golang/tools/git/commits/129869a1a69588204419117f686297977a7af178,129869a1a69588204419117f686297977a7af178,"go.tools/dashboard: don't do method calls or field lookups on a possibly nil repo

LGTM=mischief, adg
R=adg, mischief
CC=golang-codereviews
https://golang.org/cl/106660043"
alandonovan,2014-07-23 16:28:56,https://api.github.com/repos/golang/tools/git/commits/b5528ca0705ec592dae7c67dd4f7ff97d130d0bf,b5528ca0705ec592dae7c67dd4f7ff97d130d0bf,"go.tools/go/pointer: add test file missing from CL 112610043 (rev 32ae05502022)

TBR=gri
R=gri
CC=adg, golang-codereviews
https://golang.org/cl/111580043"
adg,2014-07-22 23:59:58,https://api.github.com/repos/golang/tools/git/commits/63db0771efeb718903ce6591f799516106d3112b,63db0771efeb718903ce6591f799516106d3112b,"go.tools/godoc: fix search heading anchors

Right now they're all ""Global"" so you can't click use the table of
contents headings for ""Types"", ""Functions"", and ""Methods"".

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/118100043"
alandonovan,2014-07-22 22:30:06,https://api.github.com/repos/golang/tools/git/commits/e5d15a97816b2a43da47208e882a2b91bbfcf94a,e5d15a97816b2a43da47208e882a2b91bbfcf94a,"go.tools/go/pointer: add intrinsic for time.startTimer, which is implemented in C.

Without it, no value appears to be sent on NewTicker/NewTimer channels.

+ test

Also:
- add (callgraph.Edge).{Description,Pos} convenience methods
  to simplify client code when Site==nil.

LGTM=gri
R=gri, friestein68503
CC=golang-codereviews
https://golang.org/cl/112610043"
alandonovan,2014-07-22 22:29:56,https://api.github.com/repos/golang/tools/git/commits/f9612295cb7f1aeda8af2d194c1bae69364a5ef2,f9612295cb7f1aeda8af2d194c1bae69364a5ef2,"go.tools/oracle: pointsto: if the queried expression is an lvalue, use the type of its value, not its address.

(Probable regression caused by recent changes to VarValue.)

+ regression test.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/116160044"
dsymonds,2014-07-22 07:50:39,https://api.github.com/repos/golang/tools/git/commits/105b764ad04a565063eeac88bc5e2803224e9892,105b764ad04a565063eeac88bc5e2803224e9892,"benchcmp: Fix invocation instructions.

`go test` takes -run and -bench; the -test.run and -test.bench flags
are only for the test binary itself.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/113390043"
randall77,2014-07-22 04:15:39,https://api.github.com/repos/golang/tools/git/commits/562b65fda730c16f4d2362f539347eb3f976a051,562b65fda730c16f4d2362f539347eb3f976a051,"vet: LEA* opcodes don't need to have matching length source and destination.

LGTM=rsc
R=golang-codereviews, khr, rsc
CC=golang-codereviews
https://golang.org/cl/117950044"
alandonovan,2014-07-17 19:10:29,https://api.github.com/repos/golang/tools/git/commits/cd61993a08917887401141f8ac03d1b1c80c8806,cd61993a08917887401141f8ac03d1b1c80c8806,"go.tools/go/types: move {Type,Object}Of methods from *loader.PackageInfo to *types.Info

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/113750044"
alandonovan,2014-07-17 19:06:09,https://api.github.com/repos/golang/tools/git/commits/514bdfb1b7d1c8768d36e37ac730b86f2f5e3f45,514bdfb1b7d1c8768d36e37ac730b86f2f5e3f45,"go.tools/go/ssa: improve generated code for addressable expressions.

If an expression is addressable, we compute its address then load, rather than
extracting the value of subelements.  For aggregates this avoids large copies.
Example:
        var x [2]struct{y [3]int}
        print(x[1].y[2])

Was:
t0 = local [3]struct{x [5]int} (x)                 *[3]struct{x [5]int}
t1 = *t0                                            [3]struct{x [5]int}
t2 = t1[1:int]                                         struct{x [5]int}
t3 = t2.x [#0]                                                   [5]int
t4 = t3[2:int]                                                      int

Now:
t1 = &t0[1:int]                                       *struct{x [5]int}
t2 = &t1.x [#0]                                                 *[5]int
t3 = &t2[2:int]                                                    *int
t4 = *t3                                                            int

Also:
- make emitFieldSelections responsible for calling emitDebugRef, as
  one of its two calls was forgetting to do it.
- relax the specification of (*Program).VarValue because not all
  subexpressions are materalized as values now.
- fix up the objlookup.go test expectations to match.

go/ssa/interp test runs 10% faster.

Thanks to Peter Collingbourne for pointing this out.

LGTM=pcc
R=pcc, gri
CC=golang-codereviews
https://golang.org/cl/109710043"
kortschak,2014-07-16 06:33:46,https://api.github.com/repos/golang/tools/git/commits/09286920ba341262aea2965b8d1667e4d1ba6bed,09286920ba341262aea2965b8d1667e4d1ba6bed,"go.tools/cmd/present: move jquery ui code into static

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/118760043"
adg,2014-07-15 23:39:11,https://api.github.com/repos/golang/tools/git/commits/cc0b856ebee0fe659e031cb7ab3d72af5a8e64c7,cc0b856ebee0fe659e031cb7ab3d72af5a8e64c7,"go.tools/godoc/static: remove unnecessary mainframe wrapper

Fixes golang/go#8300.

LGTM=adonovan
R=golang-codereviews, adonovan, bradfitz
CC=golang-codereviews
https://golang.org/cl/113130044"
alandonovan,2014-07-15 16:34:50,https://api.github.com/repos/golang/tools/git/commits/b2ea2e8560ff198fb2f80aee693183a42526961a,b2ea2e8560ff198fb2f80aee693183a42526961a,"go.tools/go/ssa: permit ""for range x""

+ test

Also: don't generate init() functions for packages loaded from export data.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/111200043"
griesemer,2014-07-15 15:54:09,https://api.github.com/repos/golang/tools/git/commits/e078800d1f47ca3cf12d68aaee1eb05147c672b3,e078800d1f47ca3cf12d68aaee1eb05147c672b3,"go/types: permit ""for range x""

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/110630044"
campoy,2014-07-15 15:23:16,https://api.github.com/repos/golang/tools/git/commits/bbb1c45ba5baa5a03cd8088cad09f25fa8c579b8,bbb1c45ba5baa5a03cd8088cad09f25fa8c579b8,"go.tools/present: add support for figure captions

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/110600043"
alandonovan,2014-07-11 09:50:09,https://api.github.com/repos/golang/tools/git/commits/f2db24a319eae4c252712e9616927ece673bdbb6,f2db24a319eae4c252712e9616927ece673bdbb6,"go.tools/go/loader: use new types.TypeAndValue mode predicates.

PackageInfo:
- deleted IsType
- inlined + deleted: ValueOf, TypeCaseVar, ImportSpecPkg
- on failure, TypeOf accessor now returns nil (was: panic)

go/ssa: avoid extra map lookups by using Uses or Defs directly when safe to do so,
and keeping the TypeAndValue around in expr0().

LGTM=gri
R=gri, pcc
CC=golang-codereviews
https://golang.org/cl/107650043"
griesemer,2014-07-10 23:59:50,https://api.github.com/repos/golang/tools/git/commits/961ab3ca8da85b939bda5b0ae5f8d0bb442a038a,961ab3ca8da85b939bda5b0ae5f8d0bb442a038a,"go.tools/go/types: provide TypeAndValue predicates

LGTM=adonovan
R=adonovan, pcc
CC=golang-codereviews
https://golang.org/cl/110880043"
alandonovan,2014-07-10 11:24:52,https://api.github.com/repos/golang/tools/git/commits/a16d58355fe65f5e038cbca6c54c5a66375cab55,a16d58355fe65f5e038cbca6c54c5a66375cab55,"go.tools: various doc fixes.

LGTM=crawshaw
R=gri, crawshaw
CC=golang-codereviews
https://golang.org/cl/91420044"
alandonovan,2014-07-10 10:30:01,https://api.github.com/repos/golang/tools/git/commits/400db89b867d4cae265340edc564e7a833bc651e,400db89b867d4cae265340edc564e7a833bc651e,"go/types: fix incorrect InitOrder in packages created from multiple calls to (*Checker).Files.

The InitOrder needs to be reset.

+ Test.

This bug manifested itself in duplicate HTML in the godoc -analysis view,
e.g. ""f((x)"" or ""funcfunc f()""

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/107660044"
pcc,2014-07-10 10:27:25,https://api.github.com/repos/golang/tools/git/commits/661e836afb5bf18826a30bbb4a0217d3d7818de8,661e836afb5bf18826a30bbb4a0217d3d7818de8,"go.tools/go/ssa: introduce a sanity check for dead referrers

This extends the sanity checker to identify and report referrers
which do not appear in the function's instruction lists, and fixes two
bugs in the lifting algorithm which were caught by the sanity check.

LGTM=adonovan
R=adonovan
CC=axwalk, golang-codereviews
https://golang.org/cl/110210045"
minux,2014-07-10 04:46:43,https://api.github.com/repos/golang/tools/git/commits/daba707591c5e7fc8b9a7d632c8fff65c128e5fe,daba707591c5e7fc8b9a7d632c8fff65c128e5fe,"go.tools/playground/socket: fix nacl/arm command line.
nacl_helper_bootstrap_arm doesn't consult $PATH for sel_ldr_arm.

LGTM=adg
R=adg, dan.kortschak
CC=golang-codereviews
https://golang.org/cl/112010044"
pcc,2014-07-10 03:00:49,https://api.github.com/repos/golang/tools/git/commits/4329a10ae7748848fb5aae36d3c660468fe81eec,4329a10ae7748848fb5aae36d3c660468fe81eec,"go.tools/go: separate interface construction from method set construction

We introduce a method (*Interface).Complete(), which is intended
to be called from clients after all embedded interfaces have been
fully defined. For importers, this will definitely be the case
after the import has finished, so each importer have been updated
to do so, with the exception of the gcimporter, which does not use
embedded interfaces, therefore Complete() can be called immediately
after construction.

Building the method set separately from the constructor type caused
some problems with go/importer, which copies the types.Interface
object, leading to there existing two almost-identical interface
types referenced from interface method receivers, only one of which
has been completed. To avoid this situation, the importer has been
modified to construct the interface object only once.

Fixes golang/go#8177.

LGTM=gri
R=gri, dave, gordon.klaus, adonovan
CC=golang-codereviews
https://golang.org/cl/105060044"
crawshaw,2014-07-09 19:44:17,https://api.github.com/repos/golang/tools/git/commits/54655402b551c001216776133ff241f228188a9b,54655402b551c001216776133ff241f228188a9b,"go.tools/dashboard/builder: android cross compiles

LGTM=minux
R=golang-codereviews, minux
CC=golang-codereviews
https://golang.org/cl/112870045"
alandonovan,2014-07-09 11:59:55,https://api.github.com/repos/golang/tools/git/commits/99d45c0e8ea8b33f08ff4481a5b61ca254a80477,99d45c0e8ea8b33f08ff4481a5b61ca254a80477,"godoc/analysis: show analysis status in UI (source file view)

Also:
- declare PackageInfo, FileInfo types to simplify API.
- update docs:
        eliminate this TODO item
        document improved analysis times
        state that -analysis=pointer implies -analysis=type

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/112770044"
campoy,2014-07-09 03:14:06,https://api.github.com/repos/golang/tools/git/commits/bb2f616e98b16e277f780ba4708fe207b3c0b170,bb2f616e98b16e277f780ba4708fe207b3c0b170,"go.toosl/cmd/present: Remove border from iframes

If the author wants a border they can add it on their own.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/107590045"
kortschak,2014-07-09 02:40:37,https://api.github.com/repos/golang/tools/git/commits/ea9b1bd08b2961f5ca4b8b838d88f77c51f53c9c,ea9b1bd08b2961f5ca4b8b838d88f77c51f53c9c,"go.tools/playground/socket: add support for Native Client on arm

LGTM=minux
R=adg, minux
CC=golang-codereviews
https://golang.org/cl/110900043"
minux,2014-07-09 02:40:11,https://api.github.com/repos/golang/tools/git/commits/5a340a31b7cff403f851524b921719479730a9ce,5a340a31b7cff403f851524b921719479730a9ce,"godoc/static/analysis/help.html: fix a typo

LGTM=crawshaw, r
R=golang-codereviews, crawshaw, jscrockett01, r
CC=golang-codereviews
https://golang.org/cl/110120044"
kortschak,2014-07-09 02:14:27,https://api.github.com/repos/golang/tools/git/commits/063db5971cb2f5fed479d7c6616c8d7a11d0c1d5,063db5971cb2f5fed479d7c6616c8d7a11d0c1d5,"go.tools/playground/socket: log connections and code snippet run requests

This logs all successful handshakes and all requests to run code snippets;
it is not immediately obvious how to limit this to non-localhost hosts, or
to instances where publicly available playgrounds are allowed without resorting
to addition of a new global. The level of noise on the log should not be too
great.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/112850043"
griesemer,2014-07-08 20:33:43,https://api.github.com/repos/golang/tools/git/commits/32c9809768a42725e9f2d2743dbe67b68a695534,32c9809768a42725e9f2d2743dbe67b68a695534,"go.tools/go/types: const decls with invalid init expr must not panic

Make sure const objects always have a valid (possibly unknown) value.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/106530044"
alandonovan,2014-07-08 14:11:36,https://api.github.com/repos/golang/tools/git/commits/79e0c7b71eef1674813aac5e9a2dfe33dee99d18,79e0c7b71eef1674813aac5e9a2dfe33dee99d18,"go.tools/go/pointer: eliminate TODOs regarding sound treatment of unsafe.Pointer.

Ain't gonna happen.

Also, don't emit a warning when this happens.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/110030044"
kortschak,2014-07-08 05:27:33,https://api.github.com/repos/golang/tools/git/commits/f563a1f0f5ede37b1dbaa7f0927b79ad775a5b6c,f563a1f0f5ede37b1dbaa7f0927b79ad775a5b6c,"go.tools/cmd/present: move dirListTemplate into template file

This change allows the directory front page to be more easily configurable.

Templates are now read only at start-up and stored in a map rather than re-parsed for each page rendering.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/109080044"
kortschak,2014-07-08 00:44:34,https://api.github.com/repos/golang/tools/git/commits/34a8e961919bb8b70a1ce19d85fd1b059f570d6b,34a8e961919bb8b70a1ce19d85fd1b059f570d6b,"go.tools/playground/socket: add Native Client wrapper handling

LGTM=adg
R=adg, dave, rsc, minux
CC=golang-codereviews
https://golang.org/cl/77240043"
gordonklaus,2014-07-07 21:02:32,https://api.github.com/repos/golang/tools/git/commits/3abe688aea0bcfc7e434bb7e2244257c3bbdfb95,3abe688aea0bcfc7e434bb7e2244257c3bbdfb95,"undo CL 107160049 / 9abbb23a14f6

This method was deemed unfit for the API.  See the original CL for discussion.

««« original CL description
go.tools/go/loader: Add Program.FilePath convenience method for getting the full path of a source file.

LGTM=gri
R=gri, adonovan
CC=golang-codereviews
https://golang.org/cl/107160049

»»»

LGTM=gri
R=gri, adonovan
CC=golang-codereviews
https://golang.org/cl/107570043"
josharian,2014-07-07 18:55:26,https://api.github.com/repos/golang/tools/git/commits/3e7bc48329b7469ef3b703ab2e9b32e470ae8566,3e7bc48329b7469ef3b703ab2e9b32e470ae8566,"go.tools/cmd/benchcmp: do not generate trailing whitespace

text/tabwriter cells are tab-terminated, not tab-separated. This creates trailing whitespace. However, with left-aligned columns, it is ok not to treat the final element as a cell. Demo: http://play.golang.org/p/m_ajG8SSZe

LGTM=gri
R=golang-codereviews, gobot, gri
CC=golang-codereviews, r
https://golang.org/cl/103650043"
josharian,2014-07-02 17:39:57,https://api.github.com/repos/golang/tools/git/commits/7da5f193b77edcfcf26ac513864432001693735a,7da5f193b77edcfcf26ac513864432001693735a,"go.tools/cmd/vet: detect stupid boolean conditions

This CL introduces two vet checks. Statistics and code below are from a recent 50mb corpus of public code.

1. Check for redundant conjunctions and disjunctions. This check caught 26 instances, of which 20 were clearly copy/paste bugs and 6 appeared to be mere duplication. A typical example:

if xResolution < 0 || xResolution < 0 {
        panic(""SetSize(): width < 0 || height < 0"")
}

2. Check for expressions of the form 'x != c1 || x != c2' or 'x == c1 && x == c2', with c1 and c2 constant expressions. This check caught 16 instances, of which all were bugs. A typical example:

if rf.uri.Scheme != ""http"" || rf.uri.Scheme != ""ftp"" {
        rf.uri.Scheme = ""file""
}

Fixes golang/go#7622.

LGTM=rsc, r
R=golang-codereviews, jscrockett01, r, gri, rsc
CC=golang-codereviews
https://golang.org/cl/98120043"
robpike,2014-07-01 17:24:22,https://api.github.com/repos/golang/tools/git/commits/ccb18ed35d7bee1b5a94f468963d012452ec4ca4,ccb18ed35d7bee1b5a94f468963d012452ec4ca4,"go.tools/cmd/goimports: update doc.go to new emacs instructions

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/103670045"
pcc,2014-06-27 23:00:54,https://api.github.com/repos/golang/tools/git/commits/87301fe3a66ca581e210c9e5c7b400bf0790bfe9,87301fe3a66ca581e210c9e5c7b400bf0790bfe9,"go.tools/go/types: type the append([]byte, string...) builtin more correctly

This builtin is a little weird in this form as it is (to my knowledge)
the only function that takes a variadic argument of non-slice
type. The language provides no syntax to express this, so we pick
a stringification for such arguments that does not appear in the
language. Specifically, use T... instead of ...T to distinguish it
from the normal case where the type is a slice.

This change lets the go/ssa package produce more efficient IR by
avoiding an extra conversion of the second argument.

LGTM=gri
R=gri
CC=adonovan, golang-codereviews
https://golang.org/cl/108230044"
pcc,2014-06-26 23:50:12,https://api.github.com/repos/golang/tools/git/commits/969a226d692c9ee3ba6439be5ea898596fd396a2,969a226d692c9ee3ba6439be5ea898596fd396a2,"go.tools/go/types: correctly type the copy([]byte, string) builtin

LGTM=gri
R=gri, adonovan
CC=golang-codereviews
https://golang.org/cl/104340046"
griesemer,2014-06-26 16:48:58,https://api.github.com/repos/golang/tools/git/commits/f38fc6a97a3d28c984f20f8013d6c99d53cc9a51,f38fc6a97a3d28c984f20f8013d6c99d53cc9a51,"go.tools/go/types: add test cases for parenthesized receivers

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/101510043"
4ad,2014-06-24 10:47:16,https://api.github.com/repos/golang/tools/git/commits/6cd21e820b604029289690551d52745dbbc800ba,6cd21e820b604029289690551d52745dbbc800ba,"go.tools/go/loader: fix Solaris build

Also fix one test that failed on Plan 9.

LGTM=0intro, dave
R=golang-codereviews, 0intro, dave
CC=golang-codereviews
https://golang.org/cl/101370053"
gordonklaus,2014-06-23 22:13:07,https://api.github.com/repos/golang/tools/git/commits/3309b0d8799c3150ace916786bc031462dae3a99,3309b0d8799c3150ace916786bc031462dae3a99,"go.tools/go/loader: Add Program.FilePath convenience method for getting the full path of a source file.

LGTM=gri
R=gri, adonovan
CC=golang-codereviews
https://golang.org/cl/107160049"
dvyukov,2014-06-21 03:48:41,https://api.github.com/repos/golang/tools/git/commits/9ba88c9a9957fa1eb79f7d38e8fff1e89d669763,9ba88c9a9957fa1eb79f7d38e8fff1e89d669763,"dashboard/app: tag 1.3 release

R=adg
TBR=adg
CC=golang-codereviews
https://golang.org/cl/102590043"
dvyukov,2014-06-21 01:35:07,https://api.github.com/repos/golang/tools/git/commits/b96847cb92f605c1bdc8417a912a4251706628df,b96847cb92f605c1bdc8417a912a4251706628df,"dashboard/builder: fix crash on commits that contain ESC symbol
Currently performance builders crash with:
hg log: unmarshal Mercurial log: XML syntax error on line 4991: illegal character code U+001B

R=adg
CC=golang-codereviews
https://golang.org/cl/110060046"
josharian,2014-06-20 23:52:48,https://api.github.com/repos/golang/tools/git/commits/95a7aeb19222c24f73133a4a64ee263ac39a80a2,95a7aeb19222c24f73133a4a64ee263ac39a80a2,"go.tools/cmd/vet: don't panic on commented-out asm

Really two fixes: Don't panic on bad instructions and don't complain about commented out instructions.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/110070044"
josharian,2014-06-20 18:08:45,https://api.github.com/repos/golang/tools/git/commits/9d6cc5fd083f8e30134f26983442adc31a10e05f,9d6cc5fd083f8e30134f26983442adc31a10e05f,"go.tools/cmd/vet: prevent panic on goto without label

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/107260043"
alandonovan,2014-06-19 19:30:51,https://api.github.com/repos/golang/tools/git/commits/5c5c4f4888847d89d377b04ba4e7c847dd08c957,5c5c4f4888847d89d377b04ba4e7c847dd08c957,"go/pointer: fix crash: valueNode(*FreeVar) was allocating 1 node, even for multi-word types.

+ regression test.

Fixes golang/go#8172

Also: return error (not panic) when called with empty input.

LGTM=gri
R=crawshaw, gri
CC=golang-codereviews, jon
https://golang.org/cl/104270043"
alandonovan,2014-06-19 18:35:37,https://api.github.com/repos/golang/tools/git/commits/5fe8afcb15d7671a315928d3b8ad38401c4d62e5,5fe8afcb15d7671a315928d3b8ad38401c4d62e5,"container/intsets: add benchmark of AppendTo method.

Also:
- increase sparsity of sets in benchmarks.
- removed TODO in forEach.  Subword masks had no benefit.
- minor cleanup.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/103470049"
alandonovan,2014-06-18 22:02:15,https://api.github.com/repos/golang/tools/git/commits/e436e8e4aa7daedc1263db1a7249e059d98a310c,e436e8e4aa7daedc1263db1a7249e059d98a310c,"go.tools/godoc/analysis: be defensive about files without position info (such as cgo generated files)

Also: improve log message for frontend errors without position info.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/109100043"
alandonovan,2014-06-18 22:02:07,https://api.github.com/repos/golang/tools/git/commits/02dba5d1e67b29f4ae8bdce7ecd42e8c0cf0ab7f,02dba5d1e67b29f4ae8bdce7ecd42e8c0cf0ab7f,"go.tools/go/pointer: fix crash in constraint generation of ssa.Convert to a named unsafe.Pointer type.

+ test.

Fixes golang/go#8231.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/106060046"
alandonovan,2014-06-18 22:00:03,https://api.github.com/repos/golang/tools/git/commits/f4ab48cb8329223b911fb9d138c54bfbafbe7e30,f4ab48cb8329223b911fb9d138c54bfbafbe7e30,"go.tools/go/ssa: remove obsolete comment.

This was a cryptic prediction of the bug you fixed. :)

LGTM=pcc
R=pcc
CC=golang-codereviews
https://golang.org/cl/103470048"
adg,2014-06-18 05:44:09,https://api.github.com/repos/golang/tools/git/commits/4aa650cf8070e1055c33523e6f572f2ae982029f,4aa650cf8070e1055c33523e6f572f2ae982029f,"go.tools/cmd/godoc: register redirect handler for /dl/

LGTM=minux
R=golang-codereviews, gobot, bradfitz, minux
CC=golang-codereviews
https://golang.org/cl/107050044"
alexbrainman,2014-06-18 01:28:36,https://api.github.com/repos/golang/tools/git/commits/a20078a082b50664042318e6b3ddad7413a3b55f,a20078a082b50664042318e6b3ddad7413a3b55f,"go.tools/go/loader: skip TestCgoOption on windows

windows std packages do not use cgo.

LGTM=minux
R=golang-codereviews, minux
CC=golang-codereviews
https://golang.org/cl/102460043"
griesemer,2014-06-17 18:06:19,https://api.github.com/repos/golang/tools/git/commits/2bf6947d09e64257a0e7e6f716ba7ea05cd1e586,2bf6947d09e64257a0e7e6f716ba7ea05cd1e586,"go.tools/cmd/gotype: fix call site (fix build)

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/101330046"
pcc,2014-06-17 17:56:47,https://api.github.com/repos/golang/tools/git/commits/02990bd4944bae4461a455fb1c0a478ddcc1c532,02990bd4944bae4461a455fb1c0a478ddcc1c532,"go.tools/go/gccgoimporter: keep track of package and import priority

Clients such as compilers need this information in order
to correctly link against imported packages.

This also adds support for the condensed import data format
where the priority information is stored as a suffix of the
condensed import data, as well as support for archive files.

LGTM=gri
R=gri
CC=golang-codereviews, iant
https://golang.org/cl/78740043"
alexbrainman,2014-06-17 06:59:05,https://api.github.com/repos/golang/tools/git/commits/ee07305c2a15b20d15702a7c8ba42fafcbc69a6f,ee07305c2a15b20d15702a7c8ba42fafcbc69a6f,"go.tools/dashboard/builder: skip ""path"" environment variable on windows

""PATH"" and ""path"" are one and the same environment variable
on windows. We set PATH variable, while ""path"" is set to its
original value. Windows might use either for the sub-process.

LGTM=adg
R=golang-codereviews, adg
CC=golang-codereviews
https://golang.org/cl/109980043"
pcc,2014-06-17 01:34:51,https://api.github.com/repos/golang/tools/git/commits/4a6efa0a34caad81d854f18237c1c488887cdfa0,4a6efa0a34caad81d854f18237c1c488887cdfa0,"go.tools/go/ssa: add a flag for selecting bare init functions

Bare init functions omit calls to dependent init functions and the
use of an init guard. They are useful in cases where the client uses
a different calling convention for init functions, or cases where
it is easier for a client to analyze bare init functions.

LGTM=adonovan
R=adonovan
CC=golang-codereviews, iant
https://golang.org/cl/78780043"
alandonovan,2014-06-16 20:31:30,https://api.github.com/repos/golang/tools/git/commits/f0324261341f078b48c41ed63a1a6f46dfe603d8,f0324261341f078b48c41ed63a1a6f46dfe603d8,"go.tools/go/pointer: suppress logging by default

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/102490043"
alandonovan,2014-06-16 19:46:56,https://api.github.com/repos/golang/tools/git/commits/15820532341370a912401dc9bafb25b225a5dcd8,15820532341370a912401dc9bafb25b225a5dcd8,"go.tools/oracle: remove stale item

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/101320043"
alandonovan,2014-06-16 19:46:07,https://api.github.com/repos/golang/tools/git/commits/9b38eafe607ba43ac44da301e6e04a1b7c2e8d90,9b38eafe607ba43ac44da301e6e04a1b7c2e8d90,"go/pointer: implement pointer equivalence via hash-value numbering, a pre-solver optimization.

This reduces solver time by about 40%.
See hvn.go for detailed description.

Also in this CL:
- Update package docs.
- Added various global opt/debug options for maintainer convenience.
- Added logging of phase timing.
- Added stdlib_test, disabled by default, that runs the analysis
  on all tests in $GOROOT.
- include types when dumping solution

LGTM=crawshaw
R=crawshaw, dannyb
CC=golang-codereviews
https://golang.org/cl/96650048"
alandonovan,2014-06-16 16:31:46,https://api.github.com/repos/golang/tools/git/commits/47c0a8f0c30aa0ffdc2109b0a1b585123e2c0534,47c0a8f0c30aa0ffdc2109b0a1b585123e2c0534,"go.tools/go/types: give Label objects a non-nil Package() too.

New invariant: all user-defined objects have an associated package.
Added a check of this invariant to stdlib_test.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/104170043"
alandonovan,2014-06-16 16:29:30,https://api.github.com/repos/golang/tools/git/commits/6db8a00c756207a4a6f272911d1512b838674b1a,6db8a00c756207a4a6f272911d1512b838674b1a,"go.tools/go/ssa: write zero value when storing a composite literal in-place if necessary

Previously, statements such as:

type T struct { a, b int }
[...]
x = T{}
x = T{b: 1}

would only affect the aggregate members mentioned in the composite
literal and leave the other members unchanged. This change causes us
to write a zero value to the target in cases where the target is not
already known to hold a zero value and the number of initializers in
the composite literal differs from the number of elements in its type.

Author: Peter Collingbourne.  (hg clpatch got confused)

LGTM=pcc
R=pcc
CC=golang-codereviews
https://golang.org/cl/107980045"
adg,2014-06-16 01:36:20,https://api.github.com/repos/golang/tools/git/commits/ba844075b3ee79b14b0f6b74587165c4d515521c,ba844075b3ee79b14b0f6b74587165c4d515521c,"go.tools/godoc/static: don't capture ctrl-tab in editor

This fixes an issue where Firefox users can't ctrl-tab out to switch
to other tabs when using the playground.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/106020043"
adg,2014-06-14 02:45:55,https://api.github.com/repos/golang/tools/git/commits/a94a6a54d12f8e24ea2db773208f4999b3c6b015,a94a6a54d12f8e24ea2db773208f4999b3c6b015,"go.tools/go/types/typeutil: use reflect instead of unsafe

Godoc depends on this package.
Packages that use unsafe cannot be deployed to App Engine.
Packages that use reflect can.
This package needn't use unsafe, so don't.

LGTM=adonovan, rsc
R=rsc, adonovan
CC=golang-codereviews
https://golang.org/cl/105960043"
josharian,2014-06-14 01:44:31,https://api.github.com/repos/golang/tools/git/commits/d46b792624199e09d16b5e381553f22ee1c5f1fb,d46b792624199e09d16b5e381553f22ee1c5f1fb,"cmd/vet: check for use of json/xml struct tags with unexported fields

This is a common source of bugs, particularly for those new to Go. Running this on a corpus of public code flagged 114 instances.

This check may need to be updated once issue 7363 is resolved.

LGTM=r
R=golang-codereviews, r
CC=bradfitz, golang-codereviews
https://golang.org/cl/91010047"
alandonovan,2014-06-13 21:34:07,https://api.github.com/repos/golang/tools/git/commits/de23e2b0c2049df607ddc8b5e4397357d3888dbc,de23e2b0c2049df607ddc8b5e4397357d3888dbc,"go/ssa: make Builtin capable of representing non-spec-defined intrinsics.

Also, define ssa:wrapnilchk intrinsic to check and gracefully
fail when a T method is dynamically invoked via a nil *T receiver.
+ Test.

A follow-up CL will add another intrinsic, ssa:memclr.

+ minor cleanups.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/101170044"
alandonovan,2014-06-13 21:12:28,https://api.github.com/repos/golang/tools/git/commits/38cb4c096637c1b067a7a759646ab9f792a11fa9,38cb4c096637c1b067a7a759646ab9f792a11fa9,"go.tools/go/ssa: record ast.CallExpr.Rparen as Alloc.Pos() for varargs arrays.

+ pointer analysis test-case.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/108980043"
pcc,2014-06-13 17:08:35,https://api.github.com/repos/golang/tools/git/commits/ce1e99a260dbcab2ba89ae18c0d5b7b78465448e,ce1e99a260dbcab2ba89ae18c0d5b7b78465448e,"go.tools/go/ssa: emit a recover block if the function's results are unnamed

It is easier for clients to recover from panics if the recover block
is always present. Otherwise, the client has to work around the lack
of a recover block by synthesizing a zero value return.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/87210044"
alandonovan,2014-06-13 15:32:46,https://api.github.com/repos/golang/tools/git/commits/f0ff511183298a491f5024c7a81645b8dd690542,f0ff511183298a491f5024c7a81645b8dd690542,"go/loader: make (*Config).Load() robust against I/O, scanner and parser errors.

Before, Load() would just fail.  Now, it gathers all frontend
errors (not just the first go/types error) in PackageInfo.Errors.

There are still cases where Load() can fail hard, e.g. errors in x_test.go
files.  That case is trickier to fix and remains a TODO item.

Also, make godoc display all scanner/parser/type errors in the source view.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/108940043"
adg,2014-06-13 06:49:32,https://api.github.com/repos/golang/tools/git/commits/5a5dc64a9686537757109f5357c509ed5ebdaa34,5a5dc64a9686537757109f5357c509ed5ebdaa34,"go.tools/godoc: fix index reading and writing

In command godoc, set IndexEnabled when the -write_index flag is set.
Previously you would need to (unintuitively) set the -http flag to
achieve this.

In package godoc, set up the FS tree before loading the index, and
then return before starting the index refresh loop. Previously the
index would be loaded and then immediately refreshed, negating the
benefits of the on-disk index.

TBR=bradfitz
R=golang-codereviews
CC=golang-codereviews
https://golang.org/cl/103370046"
adg,2014-06-13 05:20:15,https://api.github.com/repos/golang/tools/git/commits/93b08999a7402f7cd183d6957dc09b887ae2895a,93b08999a7402f7cd183d6957dc09b887ae2895a,"go.tools/cmd/godoc: set corpus.MaxResults in appinit.go

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/101220045"
dsymonds,2014-06-13 05:04:45,https://api.github.com/repos/golang/tools/git/commits/f895b4368827ee6a5430bad26c17a8e2655d6976,f895b4368827ee6a5430bad26c17a8e2655d6976,"vet: Rearrange checkers to use a registration system.

This removes much of the AST logic out of main.go,
and makes it easier to build custom vet binaries

The trade-off in this change is for flexibility.
There's very little change in the per-check files,
a lot less code in main.go (specifically the AST walking
logic has shrunk), and it makes it much easier to build
custom vet binaries simply by dropping new source files
in the directory.

LGTM=josharian, r
R=r, josharian, kamil.kisiel
CC=golang-codereviews
https://golang.org/cl/83400043"
adg,2014-06-13 02:42:11,https://api.github.com/repos/golang/tools/git/commits/229ca526b776e254ab77c6b62230c0b37f7346f4,229ca526b776e254ab77c6b62230c0b37f7346f4,"go.tools/cmd/godoc: remove useless code from index.go

This code was moved to a throttle method on Corpus but I guess it was
never deleted.

LGTM=crawshaw
R=golang-codereviews, crawshaw
CC=golang-codereviews
https://golang.org/cl/102350043"
kortschak,2014-06-12 23:54:10,https://api.github.com/repos/golang/tools/git/commits/6251f07ecdf31db1385cf63d9199d05e84a5502e,6251f07ecdf31db1385cf63d9199d05e84a5502e,"go.tools/present: correctly test empty argument

Updates golang/go#7613.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/105130046"
kortschak,2014-06-12 22:45:26,https://api.github.com/repos/golang/tools/git/commits/53915e22e2e72e168849dd59fdfe3706b5729ac0,53915e22e2e72e168849dd59fdfe3706b5729ac0,"go.tools/present: allow intentionally empty parameters

Fixes golang/go#7613.

LGTM=r
R=adg, r
CC=golang-codereviews
https://golang.org/cl/105070043"
alandonovan,2014-06-12 22:05:33,https://api.github.com/repos/golang/tools/git/commits/d014be43ae995b90135727583a015aa5b53e9baa,d014be43ae995b90135727583a015aa5b53e9baa,"go.tools/go/types: remove PackageObj Selection - not needed

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/105920043"
griesemer,2014-06-12 19:46:21,https://api.github.com/repos/golang/tools/git/commits/f59b01c69b4ff13b323cac3d50f4a733c065d991,f59b01c69b4ff13b323cac3d50f4a733c065d991,"go.tools/go/types, exact: fix build for 1.2

Fixes golang/go#8192.

LGTM=bradfitz
R=bradfitz, adonovan
CC=golang-codereviews
https://golang.org/cl/105160043"
griesemer,2014-06-12 18:13:58,https://api.github.com/repos/golang/tools/git/commits/afafa2630f542e7528584a1a7e4718757da0aff3,afafa2630f542e7528584a1a7e4718757da0aff3,"go.tools/go/types: export types.Checker (cleanup)

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/109850044"
alandonovan,2014-06-12 15:31:41,https://api.github.com/repos/golang/tools/git/commits/142566e5294c54d01845800a9b3d6bfce81841bb,142566e5294c54d01845800a9b3d6bfce81841bb,"go/ssa: avoid ""premature optimization"" of dead branch removal.

Blocks dominated by ""if false"" should be retained in the
initial SSA form so they remain visible to subsequent source
code analysis tools.

In any case, true compilers already need a stronger version of
this optimization so they can simplify CFGs such as this:
	const x, y = ...
        switch x {case y:...}
where a branch is constant but the comparison of constants
does not occur within an expression.

LGTM=gri
R=gri
CC=golang-codereviews, pcc
https://golang.org/cl/101250043"
griesemer,2014-06-11 22:03:38,https://api.github.com/repos/golang/tools/git/commits/0fa48054cad1f1d57035389e767bed01bcd4a872,0fa48054cad1f1d57035389e767bed01bcd4a872,"go.tools/go/types: comma-ok expressions return bool rather than untyped bool

Per the current spec.

Fixes golang/go#8188.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/101200043"
alandonovan,2014-06-11 20:33:25,https://api.github.com/repos/golang/tools/git/commits/30166088e46389150ed2e766c1fb02bd3c0d8e6a,30166088e46389150ed2e766c1fb02bd3c0d8e6a,"go/ssa: remove optimization of 'rundefers'.

The SSA builder shouldn't be in the business of
interprocedural optimization, especially in the presence of
concurrency.

This causes the instruction count to increase by 0.03%.

LGTM=gri
R=gri, pcc
CC=golang-codereviews
https://golang.org/cl/105020045"
pcc,2014-06-11 20:16:19,https://api.github.com/repos/golang/tools/git/commits/cd36f5255874a8ca6b8f660d010986d21c5a364b,cd36f5255874a8ca6b8f660d010986d21c5a364b,"go.tools/go/ssa: add Max to Slice's SSA operand list

LGTM=adonovan
R=adonovan, bradfitz
CC=golang-codereviews
https://golang.org/cl/101160043"
alandonovan,2014-06-11 18:04:45,https://api.github.com/repos/golang/tools/git/commits/cc02c5be3657f1c949e316dcfbb5d418dbba15a9,cc02c5be3657f1c949e316dcfbb5d418dbba15a9,"go/ssa: s/Capture/FreeVar/g

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/109820044"
alandonovan,2014-06-11 18:03:40,https://api.github.com/repos/golang/tools/git/commits/1edc750a9c685381095b34d45d706ad266e5e1c8,1edc750a9c685381095b34d45d706ad266e5e1c8,"go/ssa: cleanup: make NewFunction a member of *Program.

(since it always needs this field)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/106960045"
alandonovan,2014-06-11 17:19:52,https://api.github.com/repos/golang/tools/git/commits/94d1589bd2960950bab9e94cdb5db8a5f7ed084d,94d1589bd2960950bab9e94cdb5db8a5f7ed084d,"go.tools/go/pointer: fix objectNode() bug causing it to return nil spuriously.

It was making the unsound assumption that cgn==nil => v is one
of {Global,Function,Const,Capture} to avoid checking v's type,
which is what it now does.  This caused more expensive
constraints to be generated, which is suboptimal though not
wrong exactly.

In one benchmark, this change reduces the number of complex
constraints by about 23% of loads and 53% of stores, and
increases the number of (simple) copy constraints by about 5%.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/106940043"
alandonovan,2014-06-11 17:16:51,https://api.github.com/repos/golang/tools/git/commits/7746b67294e80b3b12ae5779fde79e254a19a442,7746b67294e80b3b12ae5779fde79e254a19a442,"go.tools/go/loader: enable cgo processing of files that import ""C"".

Files that import ""C"" are not valid Go source files and
require preprocessing.  Until now, the loader has simply
hard-coded CGO_ENABLED=0 (in effect) which causes go/build to
use build tags select pure Go implementations where they exist
(e.g. in $GOROOT).  Where they don't (e.g. arbitrary user
code) this leads to masses of spurious type errors.
(Reported by Guillaume Charmes, private correspondence.)

This change causes the loader to invoke the cgo preprocessor
on such files and to load the preprocessed files instead,
using the original names.  This means that the syntax offset
position information is garbage, although thanks to //line
directives, the line numbers at least should be good.

See comment in cgo.go for details.

This CL changes the loader's default behaviour and may make it slower.
CGO_ENABLED=0 enables the old behaviour.

Tested via stdlib_test, which now loads all standard packages
using cgo, and also exercises CGO_ENABLED=0 for ""net"" and ""os/user"".

LGTM=gri
R=gri, rsc
CC=golang-codereviews, guillaume.charmes
https://golang.org/cl/86140043"
alandonovan,2014-06-11 17:14:06,https://api.github.com/repos/golang/tools/git/commits/04427c85cf58e1f7f3b724fef2fda6398b1793e4,04427c85cf58e1f7f3b724fef2fda6398b1793e4,"go/ssa: add Node interface: common parts of Value+Instruction, plus Operands/Referrers.

Also:
- extend Parent() to all Values and add to interface:
  (Builtin/Const/Global => nil; Function => Enclosing)
- hide Function.Enclosing since it's now redundant wrt Parent()
- make (*Function).String robust for synthetics without pkg object

LGTM=gri
R=gri
CC=golang-codereviews, khr
https://golang.org/cl/87580044"
alandonovan,2014-06-11 17:12:15,https://api.github.com/repos/golang/tools/git/commits/74117bcfd8ba581052280e6718c3b70e6b9d1067,74117bcfd8ba581052280e6718c3b70e6b9d1067,"go/pointer: use sparse bit vectors to represent points-to sets in solver.

This optimization reduces solve time (typically >90% of the
total) by about 78% when analysing real programs.  It also
makes the solver 100% deterministic since all iterations are
ordered.

Also:
- remove unnecessary nodeid parameter to solve() method.
- don't add a fieldInfo for singleton tuples (cosmetic fix).
- inline+simplify ""worklist"" type.
- replace ""constraintset"" type by a slice.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/95240043"
alandonovan,2014-06-11 17:10:26,https://api.github.com/repos/golang/tools/git/commits/fec252214bc8bbee0246644b5bb1a63304d556b9,fec252214bc8bbee0246644b5bb1a63304d556b9,"go.tools/ssa: create thunks for method expressions T.f.

Until now, the same Function was used to represent a method
(T)func() and the ""method expression"" function func(T) formed
from it. So the SSA code for this:

    var buf bytes.Buffer
    f := Buffer.Bytes
    f(buf)
    buf.Bytes()

would involve an implicit cast (ChangeType) on line 2.
However, compilers based on go/ssa may want to use different
calling conventions for them, like gccgo does (see issue
7839).  This change decouples them by using an anonymous
function called a ""thunk"", rather like this:

    f := func(r *bytes.Buffer) []byte { return r.Bytes() }

Thunks are similar to method wrappers; both are created by
makeWrapper.

""Interface method wrappers"" were a special case of thunks for
direct calls (no indirection/fields) of interface methods.
They are now subsumed by thunks and have been deleted.  Now
that only the needed thunks are built, we don't need to
populate the concrete method sets of interface types at all,
so (*Program).Method and LookupMethod return nil for them.
This results in a slight reduction in function count (>1%) and
instruction count (<<1%).

Details:

go/ssa:
- API: ChangeType no longer supports func/method conversions.
- API: (*Program).FuncValue now returns nil for abstract
  (interface) methods.
- API: (*Function).RelString simplified.
  ""$bound"" is now a suffix not a prefix, and the receiver
  type is rendered package-relative.
- API: Function.Object is now defined for all wrappers too.
- API: (*Program).Method and LookupMethod return nil for
  abstract methods.
- emitConv no longer permits (non-identical)
  Signature->Signature conversions.  Added assertion.
- add and use isInterface helper
- sanity: we check packages after Build, not Create, otherwise
  cross-package refs might fail.

go/pointer:
- update tests for new function strings.
- pointer_test: don't add non-pointerlike probes to analysis.
  (The error was checked, but too late, causing a panic.)
- fixed a minor bug: if a test probe print(x) was the sole
  reference to x, no nodes were generated for x.
- (reflect.Type).MethodByName: updated due to ssa API changes.
  Also, fixed incorrect testdata/funcreflect.go expectation
  for MethodByName on interfaces.

oracle:
- fix for new FuncValue semantics.
- a ""pointsto"" query on an I.f thunk now returns an error.

Fixes golang/go#7839

LGTM=gri
R=gri
CC=golang-codereviews, pcc
https://golang.org/cl/93780044"
pcc,2014-06-11 17:01:51,https://api.github.com/repos/golang/tools/git/commits/9fc9dd9a01a164f4be2d0b8a00b9b2118b185e63,9fc9dd9a01a164f4be2d0b8a00b9b2118b185e63,"go.tools/go/types: dup check interface keys in composite map literals correctly

Specifically, take into account the key type.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/103080044"
griesemer,2014-06-11 16:15:31,https://api.github.com/repos/golang/tools/git/commits/3827909f2194123e425c78904b64f56b9f614c19,3827909f2194123e425c78904b64f56b9f614c19,"go.tools/go/types: compute correct initialization order

- Replaced check.initDependencies with check.initOrder;
  this is the only semantic change, it affects only the
  value of Info.InitOrder.
- Added additional init order test cases and adjusted
  existing tests.
- Moved orderedSetObjects from resolver.go to ordering.go.

Fixes golang/go#7964.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/91450043"
griesemer,2014-06-11 16:12:52,https://api.github.com/repos/golang/tools/git/commits/459aaad458b412a6f787a33264172045047ef840,459aaad458b412a6f787a33264172045047ef840,"go.tools/go/types: fix float32 conversions

Pending CL 93550043.
For submission after the 1.3 release.

Fixes golang/go#8066.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/95580045"
alandonovan,2014-06-10 16:36:40,https://api.github.com/repos/golang/tools/git/commits/95e5e90454d4fd0a013ed3975539602c0d3f707b,95e5e90454d4fd0a013ed3975539602c0d3f707b,"go.tools/oracle: callgraph: fix crash caused by sparse node numbering.

Revision 0ea4058a1ca3 caused the node numbering to become
sparse, violating a precondition of
(*callgraphResult).toSerial.  Now we renumber the callgraph
nodes always, not just the qpos != nil case.

Fixes golang/go#8171

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/103240044"
pcc,2014-06-05 21:19:58,https://api.github.com/repos/golang/tools/git/commits/afea1b1755cab453fb2f14989de4c17e5fefdce0,afea1b1755cab453fb2f14989de4c17e5fefdce0,"go.tools/go/ssa: fix range iteration over values of pointer to named array type

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/107800045"
adg,2014-06-03 04:16:59,https://api.github.com/repos/golang/tools/git/commits/83c1b4e7d41ad42688bfa3935cb3b3b6a55e45f5,83c1b4e7d41ad42688bfa3935cb3b3b6a55e45f5,"go.tools/cmd/present: register SVG mime type

This will fix the images in Brad's GoCon presentation.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/100950043"
adg,2014-06-01 22:39:03,https://api.github.com/repos/golang/tools/git/commits/707c7629cb89ba220eee36bbad8e84832887ebe7,707c7629cb89ba220eee36bbad8e84832887ebe7,"dashboard: split key handler into key package, add TimeKey to cache

LGTM=dsymonds
R=golang-codereviews, dsymonds
CC=golang-codereviews
https://golang.org/cl/104780044"
rsc,2014-05-31 01:45:27,https://api.github.com/repos/golang/tools/git/commits/222283a9c8849e939f0b05b6cfaf296763e9f169,222283a9c8849e939f0b05b6cfaf296763e9f169,"go.tools/cmd/benchcmp: add -best flag

If you have multiple runs in old.txt and new.txt
the default behavior is to match them up pairwise
and compare successive pairs (and if you have a
different number of runs in each file, benchcmp
refuses to do anything).

The new -best flag changes the behavior to instead
compare the fastest run of each benchmark from
the two files. This makes sense if you believe that
the fastest speed is the 'actual' speed and the slower
results are due to the computer spending time doing
non-benchmark work while the benchmark was
running.

LGTM=josharian
R=golang-codereviews, josharian
CC=golang-codereviews
https://golang.org/cl/102890047"
alandonovan,2014-05-30 20:27:51,https://api.github.com/repos/golang/tools/git/commits/43c97eab79f88b544078ac777d9a4514429294cd,43c97eab79f88b544078ac777d9a4514429294cd,"go.tools/go/pointer: fix solver nontermination bug due to reflective type construction cycles.

Programs such as this cause the PtrTo solver to attempt to
enumerate an infinite set of types {T, *T, ..., *******T, etc}.

        t := reflect.TypeOf(T{})
        for {
                t = reflect.PtrTo(t)
        }

The fix is to bound the depth of reflectively created types at
about 4 map/chan/slice/pointer constructors.

+ test.

LGTM=gri
R=gri
CC=crawshaw, golang-codereviews
https://golang.org/cl/102030044"
alandonovan,2014-05-30 17:21:36,https://api.github.com/repos/golang/tools/git/commits/fd72015344bbd957a1bd7f1147a2c3e4f3eaef13,fd72015344bbd957a1bd7f1147a2c3e4f3eaef13,"go.tools/container/intsets: increase block size to 256 bits.

This consistently yields better performance with go/pointer.

Also: return int not word from ntz().

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/97570044"
griesemer,2014-05-22 20:45:29,https://api.github.com/repos/golang/tools/git/commits/8df7a779dbfcbaed6c2e2149df28444431b35b3e,8df7a779dbfcbaed6c2e2149df28444431b35b3e,"go.tools/go/types: package name must not be blank

Fixes golang/go#8077.

LGTM=adonovan
R=golang-codereviews, adonovan
CC=golang-codereviews
https://golang.org/cl/91640043"
griesemer,2014-05-22 20:10:53,https://api.github.com/repos/golang/tools/git/commits/2afc128b30d9ac995aaa17b63de8e3500e429873,2afc128b30d9ac995aaa17b63de8e3500e429873,"go.tools/go/types: interfaces may not have blank methods

Fixes golang/go#8050.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/96520047"
griesemer,2014-05-21 16:55:02,https://api.github.com/repos/golang/tools/git/commits/2fcf90cfacd0502b7fd87fe67e54e2cccc07310a,2fcf90cfacd0502b7fd87fe67e54e2cccc07310a,"go.tools/go/types: re-disable float_lit2.go std test

go/types doesn't correctly round the largest possible
float32 literal values and fails. Instead of relying
on Rat.Float64 and float32 conversion, we need a
Rat.Float32 implementation with correct rounding.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/96540045"
griesemer,2014-05-21 15:54:23,https://api.github.com/repos/golang/tools/git/commits/11314ad3ea96da27c9d971ef971fd632a99406d6,11314ad3ea96da27c9d971ef971fd632a99406d6,"go.tools/go/types: enable float_lit2.go test

Pending CL 91590047 which fixes that test.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/91630043"
adg,2014-05-21 04:35:45,https://api.github.com/repos/golang/tools/git/commits/d29843f35e68a7e804cff772358c092563a14b8e,d29843f35e68a7e804cff772358c092563a14b8e,"go.tools/cmd/present: re-enable transitions

They were disabled by mistake during the move to go.tools.

LGTM=dan.kortschak
R=golang-codereviews, dan.kortschak
CC=golang-codereviews
https://golang.org/cl/98440048"
dmitshur,2014-05-20 21:02:16,https://api.github.com/repos/golang/tools/git/commits/1154a04eb035ec5dd556cb399495e2cc67c1405d,1154a04eb035ec5dd556cb399495e2cc67c1405d,"go.tools/imports: fix case where output not gofmt-compatible

Fixes 7866. Adds a test case.

When trying to add newlines before certain imports via text manipulation,
a regex is used to iterate over all imports. The regex failed to match
dot imports because \w doesn't match a literal dot. This changes the regex
to accept a dot as well.

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/99400043"
griesemer,2014-05-20 20:27:11,https://api.github.com/repos/golang/tools/git/commits/33097bf3ed278c9414fce6f49e9e75cdf2fccd2b,33097bf3ed278c9414fce6f49e9e75cdf2fccd2b,"go.tools/go/types: exclude newly added std test (fix build)

TBR=adonovan

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/99410045"
alandonovan,2014-05-20 18:52:50,https://api.github.com/repos/golang/tools/git/commits/65906ce503d95eb83df784bfd4a0ae81965b1118,65906ce503d95eb83df784bfd4a0ae81965b1118,"go.tools/container/intsets: support negative elements in BitString().

(I forgot about this when we added support for negative elements generally.)

We use floating point for negative numbers.  The order of the
output is reversed from the previous (little-endian) behaviour
since it makes for more readable floating point.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/95570043"
dmitshur,2014-05-19 21:04:30,https://api.github.com/repos/golang/tools/git/commits/c0060eca2c81c0b9077b4152e09329e0f0f84f34,c0060eca2c81c0b9077b4152e09329e0f0f84f34,"go.tools/astutil: fix edge case in DeleteImport causing merging of import sections.

The issue occurs only when deleting an import that has a blank line immediately preceding,
and other imports before that.

Currently, DeleteImport assumes there's a blank line-sized hole left behind
where the import was, and always deletes it. That blank line-sized hole is there in all cases
except the above edge case.

This fix checks for that edge case, and does not remove the blank line-sized hole.

The CL also adds a previously failing test case that catches this scenario. After the change to
DeleteImport, the new test passes (along with all other tests).

Fixes golang/go#7679.

Note that there is no attempt to ensure the result *ast.File and *token.FileSet are perfectly
matching to what you would get if you printed the AST and parsed it back. This is how the
rest of the package and the current tests work (i.e., they only check that printing the AST gives
the correct output).
Changing that is very hard, if not impossible, at least not
without resorting to manipulating AST via printing, text manipulation and parsing.
This is okay for most usages, but it does create potential problems. For example,
astutil.Imports() currently only works correctly on freshly parsed AST. If that AST
is manipulated via astutil funcs, then Imports() may not always generate correct
output. However, thas is a separate issue and should be treated as such.

LGTM=bradfitz
R=golang-codereviews, gobot, adonovan, bradfitz
CC=golang-codereviews
https://golang.org/cl/92250045"
robpike,2014-05-19 18:34:31,https://api.github.com/repos/golang/tools/git/commits/4374c8910fc8b91c8b531f5fc7907883326a7e72,4374c8910fc8b91c8b531f5fc7907883326a7e72,"go.tools/cmd/vet: clean up formatting of the package document
It was very ugly; a little tweaking helps godoc parse it better.
Also make unsafeptr.go not own the package doc (add a blank line)
and put one more sentence about that check into doc.go.

Fixes golang/go#7925.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/98370044"
paranoiacblack,2014-05-19 16:51:04,https://api.github.com/repos/golang/tools/git/commits/c309b30e41f453c453ea80b0ab8cd4795271d333,c309b30e41f453c453ea80b0ab8cd4795271d333,"go.tools/dashboard: update existing results when builder retries a commit

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/96360047"
robpike,2014-05-19 16:48:30,https://api.github.com/repos/golang/tools/git/commits/a8c8f48be37192b54b243b56df95182040532169,a8c8f48be37192b54b243b56df95182040532169,"go.tools/all: the the thes are too frequent, it's clear that that's not what we want

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/98380043"
rsc,2014-05-19 16:31:38,https://api.github.com/repos/golang/tools/git/commits/322a5f1b4cc7f977d038534edd3e733c63fc0a19,322a5f1b4cc7f977d038534edd3e733c63fc0a19,"cmd/vet: add amd64p32 (nacl) support to asmdecl check

Also add 'ErrorString', for checking Plan 9's package syscall.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/93410045"
rsc,2014-05-19 16:31:28,https://api.github.com/repos/golang/tools/git/commits/d8a81d8377516347afd8cb4e0edf31d2aaf4bf0a,d8a81d8377516347afd8cb4e0edf31d2aaf4bf0a,"cmd/vet: fix line number in asm errors

Before:
: asm_amd64.s:16: [amd64] invalid offset new+16(FP); expected new+8(FP)
: asm_amd64.s:26: [amd64] invalid offset new+16(FP); expected new+8(FP)

After:
asm_amd64.s:16: [amd64] invalid offset new+16(FP); expected new+8(FP)
asm_amd64.s:26: [amd64] invalid offset new+16(FP); expected new+8(FP)

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/91510043"
robpike,2014-05-19 15:47:28,https://api.github.com/repos/golang/tools/git/commits/6f17d00f0d53c3e87ca99daac8a4b266a2df1135,6f17d00f0d53c3e87ca99daac8a4b266a2df1135,"go.tools: fix various minor issues found by go vet

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/96360048"
robpike,2014-05-16 21:29:34,https://api.github.com/repos/golang/tools/git/commits/31d5e8dca1a688aa657ad0089b7a8ec63eafb250,31d5e8dca1a688aa657ad0089b7a8ec63eafb250,"go.tools/present: fix printf bug found by go vet

LGTM=iant
R=adg, iant
CC=golang-codereviews
https://golang.org/cl/93450044"
robpike,2014-05-16 21:27:32,https://api.github.com/repos/golang/tools/git/commits/87a30fd93f34733a1e64792424aeeb4a57f852c7,87a30fd93f34733a1e64792424aeeb4a57f852c7,"go.tools/dashboard: fix printf buf found by go vet

LGTM=iant
R=adg, iant
CC=golang-codereviews
https://golang.org/cl/100460047"
kortschak,2014-05-16 17:35:33,https://api.github.com/repos/golang/tools/git/commits/ab1e5c6c942ed733a7518bf814d25aecbb4a3ff5,ab1e5c6c942ed733a7518bf814d25aecbb4a3ff5,"go.tools/astutil: fix parameter omission in doc comment

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/98290045"
alandonovan,2014-05-16 17:06:08,https://api.github.com/repos/golang/tools/git/commits/174d6e8ca3b1d32eff2641d86f5a37cf859b8061,174d6e8ca3b1d32eff2641d86f5a37cf859b8061,"go.tools/container/intsets: use "" "" not "", "" as (*Sparse).String() separator.

This is both easier to read and 25% shorter (helpful when
using String() as a map key for interning sets).

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/96370045"
alandonovan,2014-05-16 16:37:17,https://api.github.com/repos/golang/tools/git/commits/18c694293a14a80db4c0f15c0c0c68f8e921c8fb,18c694293a14a80db4c0f15c0c0c68f8e921c8fb,"go.tools/go/ssa: fix incorrect indentation in SSA printout.

Very long instructions caused the printf width spec to go
negative, which causes right-padding, often several lines'
worth.

Also: print the basic block comment once on the RHS. It's too
verbose to print it each time we mention the block.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/97490046"
rsc,2014-05-15 19:32:51,https://api.github.com/repos/golang/tools/git/commits/b752e9ffdf67539a73dc836ce2ef786501f2217c,b752e9ffdf67539a73dc836ce2ef786501f2217c,"cmd/vet: diagnose use of unsafe.Pointer to convert integer to pointer

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/100470044"
alandonovan,2014-05-15 18:03:05,https://api.github.com/repos/golang/tools/git/commits/e1b97610f028375d05c3359c66c79014795e52aa,e1b97610f028375d05c3359c66c79014795e52aa,"go.tools/container/intsets: fix compile error on 32-bit platforms.

Also, fix typo.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/99310043"
paranoiacblack,2014-05-14 23:34:51,https://api.github.com/repos/golang/tools/git/commits/ce3f450b0d50e943975651be680af6fb187df3b8,ce3f450b0d50e943975651be680af6fb187df3b8,"go.tools/dashboard/builder: remove redundant makefile

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/95410043"
alandonovan,2014-05-14 21:54:14,https://api.github.com/repos/golang/tools/git/commits/61c5c64029a6d90092bcae4fb59f68a453d9643c,61c5c64029a6d90092bcae4fb59f68a453d9643c,"go.tools/container/intsets: Sparse: a space-efficient representation for ordered sets of int values.

intsets.Sparse is a sparse bit vector.  It uses space proportional
to the number of elements, not the maximum element (as is the case		for a dense bit vector).

A forthcoming CL will make use of it in go/pointer, where it reduces
solve time by 78%.  A similar representation is used for Andersen's
analysis in gcc and LLVM.

+ Tests.

LGTM=sameer, crawshaw, gri
R=gri
CC=crawshaw, golang-codereviews, sameer
https://golang.org/cl/10837043"
robryk,2014-05-14 19:16:58,https://api.github.com/repos/golang/tools/git/commits/91b1b28499e6946ccc9bbc23c8c3a71015c60c6c,91b1b28499e6946ccc9bbc23c8c3a71015c60c6c,"go.tools/cmd/vet: fix a panic on invalid AddInt

Ignore calls to various flavours of atomic.AddInt with a wrong
number of arguments.

LGTM=r
R=golang-codereviews, r
CC=golang-codereviews
https://golang.org/cl/91370045"
alexbrainman,2014-05-14 02:39:20,https://api.github.com/repos/golang/tools/git/commits/d52b449ed7b1f5b8167bf7406679aa253f1f6a82,d52b449ed7b1f5b8167bf7406679aa253f1f6a82,"go.tools/cmd/godoc: prevent duplicate GOROOT/GOPATH in environment in TestTypeAnalysis

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/94430044"
alexbrainman,2014-05-14 02:38:43,https://api.github.com/repos/golang/tools/git/commits/63a1026f64364680f1f0177871f2845d1f08f778,63a1026f64364680f1f0177871f2845d1f08f778,"go.tools/godoc/analysis: convert path to url (fixes windows build)

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/94440043"
dvyukov,2014-05-13 07:02:19,https://api.github.com/repos/golang/tools/git/commits/240540d096ed8bf7bf505708b0aa73f122ee690a,240540d096ed8bf7bf505708b0aa73f122ee690a,"dashboard: database updater for performance dashboard (server part)
This CL moves code from code.google.com/p/dvyukov-go-perf-dashboard,
which was previously reviewed.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/96170043"
dvyukov,2014-05-13 07:01:50,https://api.github.com/repos/golang/tools/git/commits/904c4641c7f90e9c04102f705ee15c2d6e278b52,904c4641c7f90e9c04102f705ee15c2d6e278b52,"dashboard: server app UI changes for performance dashboard
This CL moves code from code.google.com/p/dvyukov-go-perf-dashboard,
which was previously reviewed.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/96180043"
dvyukov,2014-05-13 07:01:38,https://api.github.com/repos/golang/tools/git/commits/9bb1e09cc4958ce4497e1d35994d3a4e4fcde11a,9bb1e09cc4958ce4497e1d35994d3a4e4fcde11a,"dashboard: database updater for performance dashboard
This CL moves code from code.google.com/p/dvyukov-go-perf-dashboard,
which was previously reviewed.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/97250044"
dvyukov,2014-05-13 07:00:32,https://api.github.com/repos/golang/tools/git/commits/828191dc1e6f88f57d637313cb40e59f93323225,828191dc1e6f88f57d637313cb40e59f93323225,"dashboard: server app changes for performance dashboard
This CL moves code from code.google.com/p/dvyukov-go-perf-dashboard,
which was previously reviewed.
UI part will be submitted separately.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/97260043"
dvyukov,2014-05-13 07:00:11,https://api.github.com/repos/golang/tools/git/commits/d2a9e7164ee23fcf0d9650ec4dbd2f10e405e718,d2a9e7164ee23fcf0d9650ec4dbd2f10e405e718,"dashboard: builder changes for performance dashboard
This CL moves code from code.google.com/p/dvyukov-go-perf-dashboard,
which was previously reviewed.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/95190043"
adg,2014-05-12 23:17:18,https://api.github.com/repos/golang/tools/git/commits/a41b4fc37a4c6fe8d02f51f3b02e29b5d2d0cc28,a41b4fc37a4c6fe8d02f51f3b02e29b5d2d0cc28,"go.tools/cmd/present: update docs after move

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/99060043"
griesemer,2014-05-09 20:57:38,https://api.github.com/repos/golang/tools/git/commits/51d8ee0ff8958ff43eebcd5d62fdb1434f26304c,51d8ee0ff8958ff43eebcd5d62fdb1434f26304c,"go.tools/go/types: report init dependencies via method values

- one-line fix
- comprehensive set of test cases added

Fixes golang/go#7963.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/100320043"
alandonovan,2014-05-08 18:03:06,https://api.github.com/repos/golang/tools/git/commits/4700b7a61274d53845c36ebcf157ed016a904e6e,4700b7a61274d53845c36ebcf157ed016a904e6e,"go/callgraph: fix asymptote trap in DeleteSyntheticNodes.

The previous implementation would cause the graph to contain
many duplicate edges resulting in very large cross products,
so that for some inputs (and random map iteration orders) the
running time of DeleteSyntheticNodes was many minutes---more
than the pointer analysis!

Duplicate edges can arise from an interface call that
dispatches to several different wrapper functions each
wrapping the same declared method.

For example, in the callgraph for go/types, a call to
Object.Pos() dispatches to the synthetic functions (*Type).Pos
and (*Var).Pos, each of which wrap (*object).Pos().  After
DeleteSyntheticNodes, Object.Pos() appeared to call
(*object).Pos() twice.

This change builds the set of all edges and avoids adding
edges already in the set.

Also, document findings.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/96100043"
alandonovan,2014-05-07 22:35:43,https://api.github.com/repos/golang/tools/git/commits/c212b356b8db7799c816565c2d7b70124f88e7a7,c212b356b8db7799c816565c2d7b70124f88e7a7,"go.tools/go/types: add API test of Selection mechanism.

Also: fixed a crash in (*Selection).String() for FieldVal of a
non-function type.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/93830043"
josharian,2014-05-06 00:42:00,https://api.github.com/repos/golang/tools/git/commits/e6020f72295a58c1483b87275941562642137fcc,e6020f72295a58c1483b87275941562642137fcc,"go.tools/godoc/static: fix import path doc typo

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/98970043"
adg,2014-05-05 21:55:27,https://api.github.com/repos/golang/tools/git/commits/ca18093feafe501e9b4fa8c49a05d32dcd722b7d,ca18093feafe501e9b4fa8c49a05d32dcd722b7d,"go.tools/cmd/present: add present tool

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/97030045"
griesemer,2014-05-05 17:12:50,https://api.github.com/repos/golang/tools/git/commits/9f1412014fb2db7a3eb133538962de67b14b39ae,9f1412014fb2db7a3eb133538962de67b14b39ae,"go.tools/go/types: added test case for channel make

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/95910044"
adg,2014-05-05 15:42:12,https://api.github.com/repos/golang/tools/git/commits/3d0528640bbb4f77bdd8872d7a58629651dc2f9c,3d0528640bbb4f77bdd8872d7a58629651dc2f9c,"go.tools/playground/socket: require origin to set up socket handler

This prevents cross-site request forgery attacks.

LGTM=rsc
R=rsc
CC=golang-codereviews
https://golang.org/cl/95030044"
griesemer,2014-05-02 21:38:08,https://api.github.com/repos/golang/tools/git/commits/30b1abe2f773680bfeb64d7ffa5f448e8df2384a,30b1abe2f773680bfeb64d7ffa5f448e8df2384a,"go.tools: fix various typos

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/97920045"
griesemer,2014-04-30 02:58:47,https://api.github.com/repos/golang/tools/git/commits/f84e8b3f0373c97ce6fd7e98971110f63604d797,f84e8b3f0373c97ce6fd7e98971110f63604d797,"go.tools/cmd/godex: print correct type for const/var decls

The old code printed the underlying type; e.g., the type
of time.Millisecond was reported to be int64 rather than
time.Duration.

Testsuite (and corresponding tests) in progress (another CL).

LGTM=adonovan
R=adonovan, dsymonds
CC=golang-codereviews
https://golang.org/cl/94770045"
stephenmw,2014-04-28 21:15:33,https://api.github.com/repos/golang/tools/git/commits/55d5722095072cb0b57d2a2adec2577e0541a575,55d5722095072cb0b57d2a2adec2577e0541a575,"imports, cmd/goimports: add missing package main if func main exists

Assuming:
        1) package declaration does not exist
        2) the Fragment option is set
        3) a main function exists

We will assume it is a main package and add the declaration.

This change also sets the Fragment option in goimports.

LGTM=crawshaw, bradfitz
R=bradfitz, crawshaw
CC=golang-codereviews
https://golang.org/cl/96850044"
alandonovan,2014-04-25 19:08:13,https://api.github.com/repos/golang/tools/git/commits/6e03bb4eb410ff9e3c6c6c017868c8e229434a80,6e03bb4eb410ff9e3c6c6c017868c8e229434a80,"go.tools: remove dead code

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/90320043"
alandonovan,2014-04-25 16:08:31,https://api.github.com/repos/golang/tools/git/commits/8e263c554df09bb0dbc0774043235825ef4300d2,8e263c554df09bb0dbc0774043235825ef4300d2,"go.tools/go/types: fix incorrect receiver in (*Selection).Type().

Method expressions T.f are reported as having type (T)func(T),
i.e. T appears twice, as a receiver and a regular parameter.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/96780044"
alandonovan,2014-04-25 16:03:38,https://api.github.com/repos/golang/tools/git/commits/c288136f0cdda47863199a07f318f101dbd30c5c,c288136f0cdda47863199a07f318f101dbd30c5c,"go.tools/cmd/eg: Use Print, not Printf, to print Help string.

Fixes golang/go#7861

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/95770043"
alandonovan,2014-04-24 13:08:21,https://api.github.com/repos/golang/tools/git/commits/7d1d69032bdaae0e1805054e003fd0a745141728,7d1d69032bdaae0e1805054e003fd0a745141728,"go.tools/go/ssa: don't attempt fusion on single-pred blocks with φ-nodes

During block optimization, degenerate conditional logic such
as ""false && x"" may result in single-predecessor blocks
containing φ-nodes.  (Ideally such φ-nodes would be replaced
by their sole operand, but that requires Referrers information
which isn't computed until later.)  It is obviously not safe
to fuse such blocks, so now we don't.

Fixes golang/go#7840

LGTM=gri
R=gri
CC=golang-codereviews, pcc
https://golang.org/cl/90620043"
minux,2014-04-22 22:46:26,https://api.github.com/repos/golang/tools/git/commits/35875c1a9260f19b90d4452fa3ec9ac26a0eee6d,35875c1a9260f19b90d4452fa3ec9ac26a0eee6d,"go.tools/cmd/godoc/static: fix text template for variable examples.
Fixes golang/go#7771.

LGTM=bgarcia
R=golang-codereviews, bradfitz, bgarcia
CC=golang-codereviews
https://golang.org/cl/87180044"
griesemer,2014-04-21 23:35:40,https://api.github.com/repos/golang/tools/git/commits/4bc2f4e34b02ede9732797ceec917d4ed62abd82,4bc2f4e34b02ede9732797ceec917d4ed62abd82,"go.tools/go/types: fix doc comment

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/90100043"
alandonovan,2014-04-21 22:35:16,https://api.github.com/repos/golang/tools/git/commits/8eccac8f9a8acc5729651ff30619882493d2dd37,8eccac8f9a8acc5729651ff30619882493d2dd37,"go.tools/refactor/eg: avoid nonstandard 'diff -N' option.

(To fix broken Solaris test)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/90080044"
alandonovan,2014-04-21 22:34:22,https://api.github.com/repos/golang/tools/git/commits/f1247de5721e9160ce5be066f0064d59a1750281,f1247de5721e9160ce5be066f0064d59a1750281,"go.tools/cmd/doc: make filename logic separator-agnostic

(Speculative fix for broken cmd/godoc test on Windows.)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/90090043"
alandonovan,2014-04-21 21:56:06,https://api.github.com/repos/golang/tools/git/commits/4a9f74ad65e9dede8efe691fdd4392e2fb7c6e74,4a9f74ad65e9dede8efe691fdd4392e2fb7c6e74,"cmd/godoc: wait up to 500ms for results of -analysis=type.

(The test thread is racing with the analysis thread, which
takes around 4ms on this input.)

LGTM=gri
R=gri, bradfitz
CC=golang-codereviews
https://golang.org/cl/89780044"
pcc,2014-04-21 18:38:43,https://api.github.com/repos/golang/tools/git/commits/feafa747560b4a39ea5f70e69c2bfe41543b34b2,feafa747560b4a39ea5f70e69c2bfe41543b34b2,"go.tools/go/types: address and slice operations are not addressable

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/89380044"
pcc,2014-04-21 18:20:54,https://api.github.com/repos/golang/tools/git/commits/998b73a2e99ff8340663236531963377815f5374,998b73a2e99ff8340663236531963377815f5374,"go.tools/go/types: result of make and new builtins are not addressable

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/89390045"
alandonovan,2014-04-21 18:05:25,https://api.github.com/repos/golang/tools/git/commits/379e0e7704234cadd7c2ae1237374e615cbf4ebc,379e0e7704234cadd7c2ae1237374e615cbf4ebc,"go.tools/go/types: x,y:=0,0 is a Use (not Def) of x if it is already defined.

+ test.

Fixes golang/go#7827

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/89600045"
alandonovan,2014-04-18 19:58:12,https://api.github.com/repos/golang/tools/git/commits/1ae1c63748b9603baa04208633e463a362fbdbfa,1ae1c63748b9603baa04208633e463a362fbdbfa,"go.tools/go/ssa/interp: add wrappers for Sysctl{,Uint32} intrinsics on FreeBSD

(Speculative fix---I can't test it directly.)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/89320043"
griesemer,2014-04-18 16:44:23,https://api.github.com/repos/golang/tools/git/commits/de6fbfe0ea16aba6c1bed77da9caddf43e0f1553,de6fbfe0ea16aba6c1bed77da9caddf43e0f1553,"go.tools/cmd/godex: make relative package paths work

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/89160044"
axw,2014-04-17 20:40:42,https://api.github.com/repos/golang/tools/git/commits/f8200537d87d50be8cbd97d0018541bbe3717c19,f8200537d87d50be8cbd97d0018541bbe3717c19,"go.tools/go/gccgoimporter: use gccgo -dumpversion

GccgoInstallation.InitFromDriver currently parses
the output of gccgo -### to get the gcc version,
target triple, and library paths. At least with
Ubuntu's stock libgo5 package, the search path for
.gox files derived from the version is incorrect.

gccgo uses the DEFAULT_TARGET_VERSION macro when
constructing the search path; this value can be
retrieved from gccgo via the ""-dumpversion"" flag.

Fixes golang/go#7772.

LGTM=iant, gri
R=golang-codereviews, iant, gri
CC=golang-codereviews
https://golang.org/cl/88150043"
alandonovan,2014-04-17 19:51:27,https://api.github.com/repos/golang/tools/git/commits/4843aaee02494d60c800a44b56985aaaa1d7d30d,4843aaee02494d60c800a44b56985aaaa1d7d30d,"godoc: add very basic integration test of godoc -analysis=type.

Also: fix careless regression introduced yesterday.

LGTM=bgarcia
R=bgarcia
CC=golang-codereviews
https://golang.org/cl/88880043"
griesemer,2014-04-17 18:28:24,https://api.github.com/repos/golang/tools/git/commits/a7ddb1e509fe65721002b4cbffca30d8c3ada9b5,a7ddb1e509fe65721002b4cbffca30d8c3ada9b5,"godex: improved printing of numeric constants

TODO: Add testing code (another CL).

LGTM=adonovan
R=golang-codereviews, adonovan
CC=golang-codereviews
https://golang.org/cl/88090044"
alandonovan,2014-04-16 20:50:19,https://api.github.com/repos/golang/tools/git/commits/066bab14960384fb5c1daf2a4307b62242d13c4d,066bab14960384fb5c1daf2a4307b62242d13c4d,"go.tools/refactor/eg: move misplaced comment

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/88100046"
alandonovan,2014-04-16 20:35:08,https://api.github.com/repos/golang/tools/git/commits/503140c72e4f92d387c89731f3f8e19c490a1e79,503140c72e4f92d387c89731f3f8e19c490a1e79,"godoc: documentation of -analysis features.

The text and images are ""baked in"" to the godoc executable's
rodata section (~300KB) and are accessible from the godoc
server itself at /lib/godoc/analysis/help.html.

In due course, the page will become visible at
http://golang.org/lib/godoc/analysis/help.html, which will be
the canonical location for this doc (in announcements, etc).

The page is temporarily visible here, for those on the Google corp network:
http://172.26.104.127:7777/lib/godoc/analysis/help.html

Also:
- add link to new doc from source view pages.
- document -analysis flag in cmd/godoc/doc.go
- fix indentation of -analysis flag's help string

LGTM=gri
R=gri, bgarcia, r
CC=golang-codereviews
https://golang.org/cl/87110045"
griesemer,2014-04-16 20:07:59,https://api.github.com/repos/golang/tools/git/commits/1961019b8cdb69fef5fd3d77d5d785f984083992,1961019b8cdb69fef5fd3d77d5d785f984083992,"go.tools/go/exact: tweaked documentation

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/88630043"
alandonovan,2014-04-16 19:01:23,https://api.github.com/repos/golang/tools/git/commits/83a7488b3dcae26305da77ccd10ddd72f7217484,83a7488b3dcae26305da77ccd10ddd72f7217484,"go.tools/godoc: remove nil deference panic on loading error

Also:
- remove stale comment about line numbers.
- log a warning if file's package root not found.

LGTM=bgarcia
R=bgarcia
CC=golang-codereviews
https://golang.org/cl/88510044"
alandonovan,2014-04-15 19:41:02,https://api.github.com/repos/golang/tools/git/commits/9531aca448eb5137b7a86a3117fc4b100cc58117,9531aca448eb5137b7a86a3117fc4b100cc58117,"go.tools/go/pointer: add TODO comment.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/87810046"
alandonovan,2014-04-15 19:39:38,https://api.github.com/repos/golang/tools/git/commits/6ec40d9aac621a156a0659beda968ea96f6e2060,6ec40d9aac621a156a0659beda968ea96f6e2060,"go.tools/oracle: don't discard /usr/bin/diff's stderr

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/87980045"
alandonovan,2014-04-15 19:39:24,https://api.github.com/repos/golang/tools/git/commits/5421af34cc2a1c202558f925da6e87372c9506a8,5421af34cc2a1c202558f925da6e87372c9506a8,"go.tools/go/types: fix typo in comment.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/88200044"
alandonovan,2014-04-15 19:37:44,https://api.github.com/repos/golang/tools/git/commits/b3970ee1594dc2937d8127386552f6258af2beeb,b3970ee1594dc2937d8127386552f6258af2beeb,"go.tools/go/oracle: show import path (not just name) when describing an import.

+ test.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/88190044"
alandonovan,2014-04-15 19:37:32,https://api.github.com/repos/golang/tools/git/commits/bc722df585c4b1482e035d6c989a1780b772978f,bc722df585c4b1482e035d6c989a1780b772978f,"go.tools/go/ssa/interp: minor cleanup

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/88080044"
josharian,2014-04-15 00:00:04,https://api.github.com/repos/golang/tools/git/commits/6157b5a256aff3bb2c2abc853f2e41c762d15a62,6157b5a256aff3bb2c2abc853f2e41c762d15a62,"go.tools/cmd/benchcmp: expand documentation

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/85390044"
alandonovan,2014-04-14 21:53:58,https://api.github.com/repos/golang/tools/git/commits/647d17e45f07dfe503bc97da6a34164e689feb47,647d17e45f07dfe503bc97da6a34164e689feb47,"go.tools/go/ssa/interp: add no-op intrinsic sync.runtime_registerPoolCleanup

Also, compute correct index of struct field sync.Pool.New, which just changed.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/87780043"
griesemer,2014-04-10 17:39:00,https://api.github.com/repos/golang/tools/git/commits/b5d07c813b4df369483e8f4789315e925f68b562,b5d07c813b4df369483e8f4789315e925f68b562,"go.tools/go/types: tweak test exceptions

Per feedback from rsc.

LGTM=rsc, adonovan
R=adonovan, rsc
CC=golang-codereviews
https://golang.org/cl/86310043"
alandonovan,2014-04-10 17:17:20,https://api.github.com/repos/golang/tools/git/commits/ccb0e9ab885512d38196ba7f5aaebfb7a97ec9fa,ccb0e9ab885512d38196ba7f5aaebfb7a97ec9fa,"go.tools/.hgignore: don't ignore test-generated files, clean them up.

(Includes rollback of CL 83680043.)

LGTM=gri
R=gri
CC=golang-codereviews, rsc
https://golang.org/cl/86430045"
josharian,2014-04-10 00:40:05,https://api.github.com/repos/golang/tools/git/commits/3bca0c7d87c96206bd4abd5d33aad5851d9bd393,3bca0c7d87c96206bd4abd5d33aad5851d9bd393,"imports: use chan struct{} for disk semaphore

Update golang/go#7747

LGTM=bradfitz
R=bradfitz, iant
CC=golang-codereviews
https://golang.org/cl/86280043"
griesemer,2014-04-09 22:32:36,https://api.github.com/repos/golang/tools/git/commits/8caaaf224f2a349f9cb27014f2afe22110da0c0b,8caaaf224f2a349f9cb27014f2afe22110da0c0b,"go.tools/go/types: exclude broken test case (fix build)

TBR=adonovan

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/86260043"
alandonovan,2014-04-09 22:00:57,https://api.github.com/repos/golang/tools/git/commits/7ef831a4e63ba47f1eff18536af12427b5d3cac3,7ef831a4e63ba47f1eff18536af12427b5d3cac3,"go.tools/go/ssa: perform nil check when taking value of interface method.

+ test.

Fixes golang/go#7269

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/84650046"
alandonovan,2014-04-09 19:47:42,https://api.github.com/repos/golang/tools/git/commits/b12fe1707cf881f845bb8a8b95a7deac5e2bf6f0,b12fe1707cf881f845bb8a8b95a7deac5e2bf6f0,"go.tools/go/loader: slashify the name of packages found by walking the file tree.

Otherwise on Windows the enumerated package ""net\\http"" will
be distinct from the imported package ""net/http"" leading to
strange errors.  (A similar bug was fixed in go/ssa/stdlib_test.go.)

Fixes golang/go#7189

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/86170043"
alandonovan,2014-04-09 19:41:18,https://api.github.com/repos/golang/tools/git/commits/7f24a8300e00136fb178593b1fb842d4f3ef48ba,7f24a8300e00136fb178593b1fb842d4f3ef48ba,"go.tools/godoc: restore line anchors to the source view.

These were removed when adding the -analysis flag (CL
60540044), ostensibly for performance, but I can't reproduce
the serious slowdowns I saw then.  In any case, they are
needed for certain URLs.

Fixes golang/go#7743

LGTM=bgarcia
R=bgarcia
CC=golang-codereviews
https://golang.org/cl/86150043"
bradfitz,2014-04-08 23:43:52,https://api.github.com/repos/golang/tools/git/commits/87f95283ac68dcd26ed2aee233ba90e9e3bd1166,87f95283ac68dcd26ed2aee233ba90e9e3bd1166,"imports: limit local disk concurrency, avoid reads in non-Go directories

If $GOPATH was large, or $GOPATH was $HOME and $HOME/src had
many files, the unbounded concurrency in loadPkgIndex/loadPkg
could make the operating system unhappy with so many
threads. (sigh once again for no async file IO and needing
threads for file operations)

In addition, don't call go/build.Context.Import on directories
that we've already determined to have no go files in them.
It's just a waste of time. Makes it about 3x faster on my
machine with hot caches and a big $HOME/src.

Fixes golang/go#7731

LGTM=iant, adg
R=golang-codereviews, iant, adg
CC=david.crawshaw, golang-codereviews
https://golang.org/cl/85670044"
griesemer,2014-04-07 20:49:05,https://api.github.com/repos/golang/tools/git/commits/fa0f6bd59195173d3a9806dbff554e9654cbb810,fa0f6bd59195173d3a9806dbff554e9654cbb810,"go.tools/cmd/godex: update documentation

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/83580046"
griesemer,2014-04-07 19:54:28,https://api.github.com/repos/golang/tools/git/commits/42a4cd3392db543a8e6296d49535aedc5f9be326,42a4cd3392db543a8e6296d49535aedc5f9be326,"go.tools/godoc: sanitize function signatures for object index

Fixes golang/go#7703.

LGTM=bgarcia
R=bgarcia
CC=golang-codereviews
https://golang.org/cl/84410045"
bradfitz,2014-04-07 00:15:49,https://api.github.com/repos/golang/tools/git/commits/93a91768527a5cbdc828302974df556f89d73493,93a91768527a5cbdc828302974df556f89d73493,"dashboard/builder: pass GO386 to child builder, like GOARM

Update golang/go#7720

LGTM=dave
R=adg, dave
CC=golang-codereviews, rsc
https://golang.org/cl/84410046"
alexbrainman,2014-04-06 02:41:24,https://api.github.com/repos/golang/tools/git/commits/29617042319773f6ba9d87419a965b1cab601603,29617042319773f6ba9d87419a965b1cab601603,"go.tools/cmd/godoc: correct TestCLI match string on windows

Fixes golang/go#7707

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/84280045"
griesemer,2014-04-03 20:12:54,https://api.github.com/repos/golang/tools/git/commits/55ea53125770b1ee7bd5cdbd3794ccf2875831e3,55ea53125770b1ee7bd5cdbd3794ccf2875831e3,"go.tools/godoc: ignore //line comments in source code

Per suggestion from Gary Burd.

Fixes golang/go#5247.

LGTM=rsc
R=bgarcia, rsc
CC=golang-codereviews
https://golang.org/cl/84050044"
alandonovan,2014-04-02 20:42:42,https://api.github.com/repos/golang/tools/git/commits/bf97d00464b2bd2be6e764cf6d6644f64c64286e,bf97d00464b2bd2be6e764cf6d6644f64c64286e,"go.tools/.hgignore: ignore *.got files from ""golden file"" testing.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/83680043"
griesemer,2014-04-02 18:42:29,https://api.github.com/repos/golang/tools/git/commits/0b23073b5c92207753940c0e89009a2bebbb9970,0b23073b5c92207753940c0e89009a2bebbb9970,"go.tools/go/types: type-check interfaces in reverse dependency order

Side-effect: Because interfaces are now type-checked in reverse order,
cycle errors in interface declarations appear at the ""end"" rather than
at the ""beginning"" of the cycle in the source code. This is harmless.
Eventually we may want to do dependency order determination and thus
cycle detection for all types before fully type-checking them, which
might simplify some code and also produce consistently positioned cycle
errors again.

Fixes golang/go#7158.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/83640043"
alandonovan,2014-04-02 16:39:10,https://api.github.com/repos/golang/tools/git/commits/14aef25050441118115f81512c2b4b6460e046b5,14aef25050441118115f81512c2b4b6460e046b5,"go.tools/refactor/eg: remove debugging code accidentally committed.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/83650043"
alandonovan,2014-04-02 16:24:55,https://api.github.com/repos/golang/tools/git/commits/bfcffc697d3096eb52a4394c92a85877e8b7aedf,bfcffc697d3096eb52a4394c92a85877e8b7aedf,"go.tools/refactor/eg: an example-based refactoring tool.

See refactor/eg/eg.go for details.

LGTM=crawshaw
R=crawshaw, gri, kamil.kisiel, josharian
CC=golang-codereviews
https://golang.org/cl/81010043"
griesemer,2014-04-02 16:01:28,https://api.github.com/repos/golang/tools/git/commits/d7048bec641065df224effdff6fb2de3d4182e53,d7048bec641065df224effdff6fb2de3d4182e53,"go.tools/go/types: simplified init dependency data structures

Preparation for fixing issue 7158.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/83160045"
griesemer,2014-04-02 15:49:21,https://api.github.com/repos/golang/tools/git/commits/fb8f3e8fbf7efb61f96dfd5902015def5d108889,fb8f3e8fbf7efb61f96dfd5902015def5d108889,"go/tools/cmd/godex: print combined method sets

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/82890044"
griesemer,2014-03-31 23:48:42,https://api.github.com/repos/golang/tools/git/commits/3d9dcf408f91084bb4db62d15b0bb3304c12da76,3d9dcf408f91084bb4db62d15b0bb3304c12da76,"go.tools/go/types: comment fixes - no code changes

TBR=adonovan

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/80430045"
griesemer,2014-03-31 16:49:52,https://api.github.com/repos/golang/tools/git/commits/4f89dd6aed43620297274811c94cea8a24f87e4a,4f89dd6aed43620297274811c94cea8a24f87e4a,"go.tools/go/importer: record low-level encoding format

This avoids confusion when trying to read correctly
encoded export data that happens to be encoded in
a different format (debug vs product).

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/82090043"
adg,2014-03-30 21:54:14,https://api.github.com/repos/golang/tools/git/commits/58edf2a69d16e105bf47124c99e15ab8ee059702,58edf2a69d16e105bf47124c99e15ab8ee059702,"go.tools/dashboard: option to show only ""first-class"" ports

LGTM=rsc
R=rsc, minux.ma, iant, oleku.konko
CC=golang-codereviews
https://golang.org/cl/81730043"
griesemer,2014-03-28 22:26:40,https://api.github.com/repos/golang/tools/git/commits/4775a5ed460920abb9aacddb2a7c7659146b5dbe,4775a5ed460920abb9aacddb2a7c7659146b5dbe,"go.tools/cmd/godex: remove spurious println

TBR=adonovan

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/82040043"
griesemer,2014-03-28 22:17:20,https://api.github.com/repos/golang/tools/git/commits/723686bb4b5d14fe323f5fd424b3c4bf73b560cc,723686bb4b5d14fe323f5fd424b3c4bf73b560cc,"go.tools/cmd/godex: permit absolute paths for gccgo-generated package (export) files

TBR=adonovan

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/82030043"
griesemer,2014-03-28 21:59:25,https://api.github.com/repos/golang/tools/git/commits/7e60d06cfc83ebba5b8a66663793780dad2ec666,7e60d06cfc83ebba5b8a66663793780dad2ec666,"go.tools/cmd/godex: don't generate prefixes for local and absolute path arguments

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/81340047"
griesemer,2014-03-28 21:50:14,https://api.github.com/repos/golang/tools/git/commits/1faba6e3b8edd9fe1b04d33ced3544a39f440d0a,1faba6e3b8edd9fe1b04d33ced3544a39f440d0a,"go.tools/cmd/godex: replicate path logic for gccgo-new importer

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/81990043"
griesemer,2014-03-28 21:24:35,https://api.github.com/repos/golang/tools/git/commits/250eb11b9b598cbeac7b9db50d5c8f4035f1f10e,250eb11b9b598cbeac7b9db50d5c8f4035f1f10e,"go.tools/go/gccgoimporter: backported some changes from godex implementation

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/82000043"
griesemer,2014-03-28 19:21:51,https://api.github.com/repos/golang/tools/git/commits/700390eaed90147fb644b8783fa6689f351db505,700390eaed90147fb644b8783fa6689f351db505,"go.tools/cmd/godex: fix prefix generation, filtering, formatting

Details:
- auto-generate prefixes for std lib (e.g., ""godex big"" works now)
- apply filtering to package-level objects only
- nicer formatting of single-entry const, var, or type declaration

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/81360046"
griesemer,2014-03-27 22:47:04,https://api.github.com/repos/golang/tools/git/commits/069e8474def314390ec12c96ff3e52d687e8245f,069e8474def314390ec12c96ff3e52d687e8245f,"go.tools/go/types: print meaningful panic for unknown expressions

LGTM=iant
R=iant
CC=golang-codereviews
https://golang.org/cl/81310045"
alandonovan,2014-03-27 19:30:14,https://api.github.com/repos/golang/tools/git/commits/f35b5691f303af32a69ec8bfa15d9bc718df4a6b,f35b5691f303af32a69ec8bfa15d9bc718df4a6b,"go.tools/godoc: fix two regressions caused by -analysis CL.

- Add missing methodset.html template file.
- Suppress initial display of package callgraph.
  Client-side JS will make it visible if there is data.

LGTM=bgarcia
R=crawshaw, bgarcia
CC=golang-codereviews
https://golang.org/cl/81550043"
griesemer,2014-03-27 17:49:59,https://api.github.com/repos/golang/tools/git/commits/f293460f678ce00979046850cd02a38bea00387f,f293460f678ce00979046850cd02a38bea00387f,"go/tools/cmd/godex: don't print unexported methods

and print exported methods of unexported types

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/80920046"
griesemer,2014-03-27 17:03:51,https://api.github.com/repos/golang/tools/git/commits/33f2a1701b45b3fb6d1749baef77fc38eccb2490,33f2a1701b45b3fb6d1749baef77fc38eccb2490,"go.tools/go/types: minor internal cleanup

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/80960046"
alandonovan,2014-03-27 16:50:26,https://api.github.com/repos/golang/tools/git/commits/2414677bb9cf78f65fa5dba8418121bb2765bc78,2414677bb9cf78f65fa5dba8418121bb2765bc78,"go.tools/go/loader: add Config.ParserMode configuration parameter.

Existing tools use the default value of zero; their behaviour is unchanged.
(*Config).ParseFile is used only from tests.

LGTM=crawshaw, rsc, gri
R=crawshaw, gri, rsc
CC=golang-codereviews
https://golang.org/cl/79290044"
griesemer,2014-03-26 21:47:52,https://api.github.com/repos/golang/tools/git/commits/8b161c33a96c6a1bdbe702094d399777cdf7b0f8,8b161c33a96c6a1bdbe702094d399777cdf7b0f8,"go.tools/cmd/godex: support for common path prefixes

All of these work now as expected:

        godex code.google.com/p/go.tools/go/types
        godex go.tools/go/types
        godex go/types
        godex types

Also improved logging/verbose mode.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/80930043"
griesemer,2014-03-26 16:54:20,https://api.github.com/repos/golang/tools/git/commits/03478d3d3e8e39b312530dc7d797a25d796c4731,03478d3d3e8e39b312530dc7d797a25d796c4731,"go.tools/cmd/godex: better argument handling

1) Split a path.name argument at the last '.' that
   is not part of the path.

2) Try various importers always in the same order
   for consistent results (use lists instead of maps).

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/80790043"
griesemer,2014-03-26 15:38:40,https://api.github.com/repos/golang/tools/git/commits/8648e1a4819c5044ad85ce73286aaf2de8c950e6,8648e1a4819c5044ad85ce73286aaf2de8c950e6,"go.tools/cmd/godex: nicer formatting

- handle indentation
- write non-empty tuples and signatures in multiple lines
- don't crash for package unsafe

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/79920044"
griesemer,2014-03-25 22:26:38,https://api.github.com/repos/golang/tools/git/commits/4a27ee3a1b8f396960e1a984bcf33a89b2c21e85,4a27ee3a1b8f396960e1a984bcf33a89b2c21e85,"go.tools/cmd/godex: a tool to dump export information

Initial implementation. Lots of missing pieces.

Example use:
        godex math
        godex math.Sin
        godex math.Sin math.Cos

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/76890044"
Sajmani,2014-03-25 13:37:10,https://api.github.com/repos/golang/tools/git/commits/a1c1cf19badefe87e2f3d38d5abdb167a9c829b0,a1c1cf19badefe87e2f3d38d5abdb167a9c829b0,"imports: extend findImports to return a boolean, rename, that tells
goimports to use the package name as a local qualifier in an import.
For example, if findImports(""pkg"", ""X"") returns (""foo/bar"",
rename=true), then goimports adds the import line:
  import pkg ""foo/bar""
to satisfy uses of pkg.X in the file.

This change doesn't add any implementations of rename=true, though one
is sketched in a TODO.

LGTM=crawshaw
R=crawshaw, rsc
CC=bradfitz, golang-codereviews
https://golang.org/cl/76400050"
griesemer,2014-03-20 18:28:26,https://api.github.com/repos/golang/tools/git/commits/a781b00b0d8ee632221216ea11d058e0436a8b9e,a781b00b0d8ee632221216ea11d058e0436a8b9e,"go.tools/go/types: avoid spurious ""declared but not used"" errors in case of other errors

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/76810044"
alandonovan,2014-03-19 18:00:35,https://api.github.com/repos/golang/tools/git/commits/a4491f08bf5b232d5e20ca71522c4da179bc7a08,a4491f08bf5b232d5e20ca71522c4da179bc7a08,"go.tools/oracle: fix bug in reduceScope on ad-hoc main packages.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/77450048"
griesemer,2014-03-19 16:36:06,https://api.github.com/repos/golang/tools/git/commits/6256e2d81b67364c168ba0e7a4de25a59c12e684,6256e2d81b67364c168ba0e7a4de25a59c12e684,"go.tools/go/types: use package-local type names in errors referring to operands

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/77670043"
griesemer,2014-03-18 20:37:09,https://api.github.com/repos/golang/tools/git/commits/62216e60bb458aea1438372c67fc15298be91866,62216e60bb458aea1438372c67fc15298be91866,"go.tools/go/types: use unqualified names for local objects in error messages

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/77590043"
adg,2014-03-18 05:02:54,https://api.github.com/repos/golang/tools/git/commits/5893c271ff822bb50d3261c6673df40b6adb5f73,5893c271ff822bb50d3261c6673df40b6adb5f73,"go.tools/dashboard: include builder in ""invalid key"" error message

LGTM=bradfitz
R=bradfitz
CC=golang-codereviews
https://golang.org/cl/77250043"
kortschak,2014-03-17 05:57:36,https://api.github.com/repos/golang/tools/git/commits/84fae1b2155b0764ec62df038804a0d6c40086d9,84fae1b2155b0764ec62df038804a0d6c40086d9,"go.tools/playground: provide script-safe option for playground

This change allows code to be sent safely to a partially sandboxed playground using the Native Client environment.

Execution of non-Go code is blocked when the RunScripts is false to prevent inclusion of code that might escape by virtue of being under a different runtime environment.

Two options for communicating whether to prevent non-Go code were considered: as has been done here and alternatively, using a message field. The latter was not chosen to close that as an attack option.

Another will be follow that adds a -nacl flag to the present command to allow sandboxing of playground code in presentations.

See discussion here: https://groups.google.com/d/topic/golang-dev/Hy-7PBP-T4Q/

LGTM=adg
R=adg, dave
CC=golang-codereviews
https://golang.org/cl/74740045"
alandonovan,2014-03-16 20:17:13,https://api.github.com/repos/golang/tools/git/commits/7877131709c946d345b863ed83cece24b24e5bba,7877131709c946d345b863ed83cece24b24e5bba,"cmd/godoc: fix careless crash introduced by recent analysis CL

+ basic integration test

LGTM=bgarcia
R=bgarcia, bradfitz
CC=golang-codereviews
https://golang.org/cl/76410045"
alandonovan,2014-03-14 22:58:22,https://api.github.com/repos/golang/tools/git/commits/80c4f06c0ff5e0920c4cdcaa3c9591624422ae28,80c4f06c0ff5e0920c4cdcaa3c9591624422ae28,"go.tools/godoc: server mode: add support for type and pointer analysis.

See analysis.go for overview of new features.
See README for known bugs and issues.

Much UI polish, testing and optimization work remains, but
this is a starting point.

Flag: we add a new flag -analysis=type,pointer, default """",
for adventurous users only at this stage.
Type analysis takes ~10s for stdlib + go.tools;
Pointer analysis (currently) takes several minutes.

Dependencies: we now include jquery.treeview.js and its GIF
images among the resources.  (bake.go now handles binary.)

LGTM=crawshaw, bgarcia
R=crawshaw, bgarcia
CC=bradfitz, golang-codereviews
https://golang.org/cl/60540044"
alandonovan,2014-03-14 20:17:53,https://api.github.com/repos/golang/tools/git/commits/e3dc58c6e083234b1749a446dce4d9a56075d46a,e3dc58c6e083234b1749a446dce4d9a56075d46a,"go.tools/go/loader: use the build.Context's I/O hooks, if any.

Also, add loader.Config.DisplayPath hook, which allows the
filename returned by build.Context.Import() to be transformed
prior to attaching to the AST.  This allows a virtual file
system to be used without leaking into the user interface.

Eliminate parsePackageFiles hook; I don't think we need it any
more.  The test that was using it has been rewritten to use
the build.Context hooks.

LGTM=gri
R=gri, crawshaw
CC=daniel.morsing, golang-codereviews, rsc
https://golang.org/cl/75520046"
griesemer,2014-03-14 17:34:06,https://api.github.com/repos/golang/tools/git/commits/71b6dfeb195e0b022aaef1351748b2b1a5c23b9c,71b6dfeb195e0b022aaef1351748b2b1a5c23b9c,"go.tools/go/types: correct a comment (was pointing at wrong issue)

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/76160044"
dsymonds,2014-03-14 05:08:04,https://api.github.com/repos/golang/tools/git/commits/7c69950f7f83ba323ac8800154313944fe724901,7c69950f7f83ba323ac8800154313944fe724901,"vet: Don't consider %T for recursive stringers.

Unlike the other anyType verbs, %T never calls String.

Fixes golang/go#7540.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/75580045"
adg,2014-03-13 22:51:13,https://api.github.com/repos/golang/tools/git/commits/ccd43c1d95a18ad3244d6973373e07bac06c6efb,ccd43c1d95a18ad3244d6973373e07bac06c6efb,"go.tools/dashboard/app: send log hash to gobot on build failure

Fixes golang/go#7322.

LGTM=rsc
R=rsc
CC=golang-codereviews
https://golang.org/cl/75630043"
griesemer,2014-03-13 20:22:44,https://api.github.com/repos/golang/tools/git/commits/c4ca0e24893ba829194ddbfe910a430e28fd06d6,c4ca0e24893ba829194ddbfe910a430e28fd06d6,"go.tools/go/types: don't change dot-imported object's parents

With this CL, an Object.Parent() Scope is always the scope in
which the object was originally declared. For dot-imported
objects, that is the package scope of the package from which
the objects are imported (not the file scope into which they
are imported).

Also:

- Changed Scope.Insert to be agnostic regarding blank
identifiers - blank identifiers must be handled outside.

- Fixed handling of blank labels: they are never declared.

Fixes golang/go#7537.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/75570043"
dsymonds,2014-03-13 00:19:34,https://api.github.com/repos/golang/tools/git/commits/d4c8d5dae38efb18e645ff140486f33b8860a17a,d4c8d5dae38efb18e645ff140486f33b8860a17a,"vet: Broaden suppression of recursive stringer warning.

Updates golang/go#6212.

LGTM=r, gri
R=r, gri
CC=golang-codereviews
https://golang.org/cl/75130043"
adg,2014-03-12 23:50:06,https://api.github.com/repos/golang/tools/git/commits/1a2b7a26ccfc4cdb79be3611cf88279865645b58,1a2b7a26ccfc4cdb79be3611cf88279865645b58,"godoc/static: update site policies link

Fixes golang/go#7520.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/74900047"
robpike,2014-03-12 23:27:55,https://api.github.com/repos/golang/tools/git/commits/e239f1b3f2dd0c654d3cf3de093f9710f99fa0cb,e239f1b3f2dd0c654d3cf3de093f9710f99fa0cb,"go.tools/cmd/vet: don't check for shadowing of blank identifier
It's pointless.
Also this fixes a crash, because the blank identifier no longer appears as a
defined object after CL 74190043 so we were getting nil pointer violations.
Even better, we get to re-enable a disabled test.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/75140043"
griesemer,2014-03-12 18:56:25,https://api.github.com/repos/golang/tools/git/commits/ea79d922e62f999fe8c39b2530915406c47685b9,ea79d922e62f999fe8c39b2530915406c47685b9,"go.tools/go/vet: temporarily disable some tests to fix build

Revert this CL once a proper fix is in place.

LGTM=adonovan
R=r, adonovan
CC=golang-codereviews
https://golang.org/cl/74930043"
alandonovan,2014-03-12 18:12:09,https://api.github.com/repos/golang/tools/git/commits/4f7b2f8882ba7ba470d810a61d555fc7faac8314,4f7b2f8882ba7ba470d810a61d555fc7faac8314,"go.tools/go/types: add Scope.comment as a debugging aid.

e.g. file foo.go scope {...}
     package math scope {...}
     function f scope {...}
     if scope {...}

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/74320043"
bradfitz,2014-03-12 01:13:26,https://api.github.com/repos/golang/tools/git/commits/305a363bdd889332ac42305d19a4435dee264b4b,305a363bdd889332ac42305d19a4435dee264b4b,"dashboard/builder: fix bugs

1) Killing proceses on timeout was wrong: the os/exec
package will never return our package's error type
from its Wait.

2) fix a goroutine leak on timeout.

3) unexported an undocumented and elsewhere-unused type.

4) rename timeout type to end in ""Error"", per convention,
not Err.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/74290043"
davecheney,2014-03-11 22:52:02,https://api.github.com/repos/golang/tools/git/commits/dc0772a41eb84cbbfc62d9661fdaada493fbec02,dc0772a41eb84cbbfc62d9661fdaada493fbec02,"go.tools/dashboard/builder: always cross compile for nacl builds

If we are building, for example, linux/386 on a linux/amd64 machine we want to make sure that the whole build is done as a if this were compiled on a real linux/386 machine. In other words, we want to not do a cross compilation build.

The exception to this rule is when we are doing nacl builds. These are by definition always cross compilation, and we have support built into cmd/go to be able to handle this case.

LGTM=bradfitz
R=golang-codereviews, bradfitz
CC=golang-codereviews
https://golang.org/cl/74230043"
alandonovan,2014-03-11 22:37:19,https://api.github.com/repos/golang/tools/git/commits/98ed3d3c76ce6d0cd22d94cfaee0f555ca6244a3,98ed3d3c76ce6d0cd22d94cfaee0f555ca6244a3,"  go.tools/go/pointer: node renumbering

  This change renumbers nodes so that addressable ones
  (that may appear in a points-to set) all have lower
  numbers than non-addressable ones----initially at least:
  reflection, SetFinalizer, etc add new nodes during
  solving.

  This improves the efficiency of sparse PTS
  representations (to be added later).  The largest int in
  a PTS is now about 20% of the previous max.

  Overview:
  - move constraint stuff into constraint.go.
  - add two methods to constraint:
    (1) renumber(): renumbers all nodeids.  The
        implementations are very repetitive but simple.  I
        thought hard about other ways (mixins, reflection)
        but decided this one was fine.
	(2) indirect(): report the set of nodeids whose
        points-to relations depend on the solver, not just
        the initial constraint graph.
        (This method is currently unused and is logically
        part of a forthcoming change to implement PE/LE
        presolver optimizations. (Perhaps I should comment
        it out/remove it for now.)
  - split up the population of the intrinsics map by file.
  - delete analysis.probes (unused field)
  - remove state=""..."" from panic message; unnecessary.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/73320043"
griesemer,2014-03-11 22:31:12,https://api.github.com/repos/golang/tools/git/commits/52c6f24392ed964471b13cb55399028460c65818,52c6f24392ed964471b13cb55399028460c65818,"go.tools/go/types: short var decls require new variables

This appears to be a regression. Added fix and test case.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/74190043"
alandonovan,2014-03-11 22:24:39,https://api.github.com/repos/golang/tools/git/commits/ba9c80143385b1db976a755b074bb94cd30699ad,ba9c80143385b1db976a755b074bb94cd30699ad,"go.tools: various comments + doc tweaks.

No functional changes.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/74270043"
alandonovan,2014-03-11 21:04:45,https://api.github.com/repos/golang/tools/git/commits/be96a2037f57d163372b738b70c2b5b2ef53f7b6,be96a2037f57d163372b738b70c2b5b2ef53f7b6,"go.tools/go/loader: fix broken test.

(The previous figure was based on an unclean workspace.)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/74210043"
alandonovan,2014-03-11 19:41:57,https://api.github.com/repos/golang/tools/git/commits/cd987a3c8316bc2b71733338491c3ed334986120,cd987a3c8316bc2b71733338491c3ed334986120,"      go.tools/go/loader: allow loading of multiple test packages.

      Now that go/types permits files to be added to a package
      incrementally (fixing bug 7114), this CL extends the loader
      to load and augment multiple test packages at once.

      TESTED:
      - go/loader/stdlib_test runs the type-checker on the entire
        standard library loaded from source in a single gulp, with
        each package augmented by tests.
      - Manually tested on:
        % ssadump -test -run unicode encoding/ascii85
            Both sets of tests are run (and pass).

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/61060043"
griesemer,2014-03-10 22:25:56,https://api.github.com/repos/golang/tools/git/commits/2b8dd19c6416908bcfa2e8440c382adb6dfa8fa6,2b8dd19c6416908bcfa2e8440c382adb6dfa8fa6,"go.tools/go/types: enable incremental adding of package files

With this CL, it is now possible to type-check additional
package files to an already type-checked package through
repeated calls to Checker.Files.

Fixes golang/go#7114.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/72730043"
griesemer,2014-03-07 22:40:14,https://api.github.com/repos/golang/tools/git/commits/c5d02e0e946701b72207554bdfb07d844ce1bab0,c5d02e0e946701b72207554bdfb07d844ce1bab0,"go.tools/go/types: factor resolveFiles

Another step towards resolvinng issue 7114.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/72550044"
griesemer,2014-03-07 19:03:08,https://api.github.com/repos/golang/tools/git/commits/f06b7e1853401da297876d02a6d773fc74767c38,f06b7e1853401da297876d02a6d773fc74767c38,"go.tools/go/types: remove need for global initializer map

Another step towards resolving issue 7114.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/72260043"
robpike,2014-03-07 05:02:49,https://api.github.com/repos/golang/tools/git/commits/6bd3206b1fa8e34ec6099541424cbef3bc031dd5,6bd3206b1fa8e34ec6099541424cbef3bc031dd5,"go.tools/cmd/vet: allow checks to be disabled explicitly as well as set explicitly
Now we can say
        vet -printf=false
to disable the printf test but run all others.
Implemented by creating a tri-state boolean flag that records whether it has been
set explicitly; before this, -printf=false was not distinguishable from not having
mentioned the printf flag at all.

Fixes golang/go#7422.

LGTM=rsc
R=rsc
CC=golang-codereviews
https://golang.org/cl/72330043"
robpike,2014-03-07 04:31:28,https://api.github.com/repos/golang/tools/git/commits/95c9b7bad16efb52679b0a618b1dc303b41c86a7,95c9b7bad16efb52679b0a618b1dc303b41c86a7,"go.tools/cmd/vet: replace warnings by errors
Over time, a number of modules were added that used Warn instead of Bad
to report problems with the code, but the documentation states that
if there is a problem, the exit code must be 1, not 0. Warn does not set the
exit code and should be used only for internal errors and messages
triggered by the -v flag.

There's nothing substantive here except calling the other function in a few
places.

Fixes golang/go#7017.

LGTM=crawshaw
R=golang-codereviews, crawshaw
CC=golang-codereviews
https://golang.org/cl/71860044"
griesemer,2014-03-06 23:53:37,https://api.github.com/repos/golang/tools/git/commits/4f1c486d350ae03b90507abf3329274d6c01c235,4f1c486d350ae03b90507abf3329274d6c01c235,"go.tools/go/types: towards permitting adding additional package files incrementally

Another small step towards resolving issue 7114.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/72230043"
griesemer,2014-03-05 23:19:38,https://api.github.com/repos/golang/tools/git/commits/d14a9d31e6b7440fb2090450ad6c89eda368e9ff,d14a9d31e6b7440fb2090450ad6c89eda368e9ff,"go.tools/go/types: support for ""soft"" errors

Provide an extra field, ""Soft"" in types.Error.
A client may want to filter out soft errors and
only abort if there are ""hard"" errors.

Qualified a first set of errors as ""soft"".

Fixes golang/go#7360.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/71800043"
griesemer,2014-03-05 23:05:34,https://api.github.com/repos/golang/tools/git/commits/5d3ec727598bc694c912a0473321538d7221dfa6,5d3ec727598bc694c912a0473321538d7221dfa6,"go.tools/go/types: implement shadowed return parameter restriction

Also:
- slightly better error messages for return statements
- more AST validity checking of parameter lists
- use secondary error message for clarifying message in type switch errors

Fixes golang/go#7469.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/71780044"
griesemer,2014-03-05 18:23:33,https://api.github.com/repos/golang/tools/git/commits/e3ab34248152006cc023dbb5bb4109dccee04ea4,e3ab34248152006cc023dbb5bb4109dccee04ea4,"go.tools/go/types: report correctly rounded constant values

Also:
- better documentation of exact.Float64Val
- minor rearrangement in go/importer (unrelated)

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/70200047"
griesemer,2014-03-04 22:32:55,https://api.github.com/repos/golang/tools/git/commits/fccaf8c467f785e42fa30f4650b98fd0a1c6df6e,fccaf8c467f785e42fa30f4650b98fd0a1c6df6e,"go.tools/go/types: adjust tests for better parser error positions

The parser may return error positions referring to positions
immediately after rather than at a token position. Provide
mechanism to identify those positions in test cases.

Also: Don't compute position strings for each token in test
cases. Should speed up Check test.

Pending CL 70190046 in main repo.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/71330043"
alandonovan,2014-03-04 18:48:09,https://api.github.com/repos/golang/tools/git/commits/5536d2ae3ecaf1fec1c5481777b4ee3152550b16,5536d2ae3ecaf1fec1c5481777b4ee3152550b16,"go/loader: convert directory separators to slash when enumerating packages.

(On Windows the two are not the same.)

Fixes golang/go#7189.

Also: remove exception for code.google.com subtree; this was
an artifact of my unusual setup.

LGTM=gri
R=alex.brainman, gri
CC=golang-codereviews
https://golang.org/cl/70060048"
alandonovan,2014-03-04 18:34:45,https://api.github.com/repos/golang/tools/git/commits/53324e8992d98bbc47b5d920bffc36aec6a99902,53324e8992d98bbc47b5d920bffc36aec6a99902,"go/ssa/interp: add syscall.Sysctl to Darwin.

This fixes a recent test breakge now that os.init calls it
(on Darwin).

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/68000048"
griesemer,2014-03-04 17:26:21,https://api.github.com/repos/golang/tools/git/commits/ddcdb3637a39bd116d32dbde5b5aa340fbe8d41a,ddcdb3637a39bd116d32dbde5b5aa340fbe8d41a,"go.tools/go/types: built-in calls returning constants don't count as function calls

Fixes golang/go#7457.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/69890052"
robpike,2014-03-04 04:41:49,https://api.github.com/repos/golang/tools/git/commits/31c219bef71c80f65ac18b04c352c3d3f4f595c1,31c219bef71c80f65ac18b04c352c3d3f4f595c1,"go.tools/cmd/vet: change reporting of incorrect error count in Printf
The old code was misleading in saying how many args were present.
Change the wording of the message to be unambiguous and change
the presentation of the format to include the full directive, making
it easier to correlate with the input (and fixing a silent bug).
Fixes golang/go#6248.

LGTM=dsymonds
R=golang-codereviews, dsymonds
CC=golang-codereviews
https://golang.org/cl/69120044"
adg,2014-03-04 00:53:58,https://api.github.com/repos/golang/tools/git/commits/744443b9dc7359624bd6080a61daf3c720d22a84,744443b9dc7359624bd6080a61daf3c720d22a84,"go.tools/dashboard/app: silence solaris11 and dragonfly builders

LGTM=aram, minux.ma
R=minux.ma, jsing, ality, aram, 0intro
CC=golang-codereviews
https://golang.org/cl/69980045"
0intro,2014-03-02 18:34:05,https://api.github.com/repos/golang/tools/git/commits/ec0de5a8bcea841d9b51b38e60834f5dde0e098f,ec0de5a8bcea841d9b51b38e60834f5dde0e098f,"go.tools/cmd/godoc: fix test on Plan 9

LGTM=bradfitz
R=minux.ma, bradfitz
CC=golang-codereviews
https://golang.org/cl/70610044"
alandonovan,2014-02-28 15:18:55,https://api.github.com/repos/golang/tools/git/commits/d503a640d7980f7cae4ff3df79929781f19e3e49,d503a640d7980f7cae4ff3df79929781f19e3e49,"go.tools/go/ssa: name anon funcs by their enclosing func.

Before, they were named func@line:col which made them easy to find in the source if you know the file, but hard if you don't, and it made tests fragile.

Now, they are named outer$1, outer$2, etc, which makes them
more informative in a UI since ""outer"" has meaning.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/65630048"
alandonovan,2014-02-27 19:13:52,https://api.github.com/repos/golang/tools/git/commits/c509cf123c690af199c031ab537f2759a3e3d0d2,c509cf123c690af199c031ab537f2759a3e3d0d2,"go.tools/go/pointer: recover from panic in Analyse and return an error.

This is to avoid an internal error in pointer analysis from
bringing down a long-lived application such as godoc.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/68930046"
griesemer,2014-02-27 18:46:04,https://api.github.com/repos/golang/tools/git/commits/d15a45223808dadce2d0e2b6523e8611384268c1,d15a45223808dadce2d0e2b6523e8611384268c1,"go.tools/go/types: move new switch test case in the right place (cleanup)

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/69000047"
alandonovan,2014-02-27 18:21:59,https://api.github.com/repos/golang/tools/git/commits/ced954c167af947a6d119cd125918ace69e9be23,ced954c167af947a6d119cd125918ace69e9be23,"go.tools/go/types: split Info.Objects map into Defs and Uses.

An identifier X in anonymous struct field struct{X} is both a
definition of a field (*Var) and reference to a type
(*TypeName).  Now that we have split the map, we can capture
both of these aspects.

Interestingly, every client but one was going to extra effort
to iterate over just the uses or just the defs; this
simplifies them.

Also, fix two bug related to tagless switches:
- An entry was being recorded in the Object map for a piece of
  synthetic syntax.
- The ""true"" identifier was being looked up in the current scope,
  which allowed perverse users to locally redefine it.  Now
  we use the bool (not untyped boolean) constant true, per the
  consequent clarification of the spec (issue 7404).

+ tests.

Fixes golang/go#7276

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/68270044"
campoy,2014-02-26 01:53:00,https://api.github.com/repos/golang/tools/git/commits/246da560726363fa64b37f815d7377dfc87490a4,246da560726363fa64b37f815d7377dfc87490a4,"go.tools/present: Remove formatting comments (HL, OMIT) from raw code.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/68870043"
robpike,2014-02-24 19:39:42,https://api.github.com/repos/golang/tools/git/commits/ee3eeefaa3ab42cfc301dcff2c06c8bb89c86f12,ee3eeefaa3ab42cfc301dcff2c06c8bb89c86f12,"cmd/vet: check for nil result set in isStringer
Fixes golang/go#7149.

LGTM=gri
R=golang-codereviews, gri
CC=golang-codereviews
https://golang.org/cl/68260044"
robpike,2014-02-24 18:44:02,https://api.github.com/repos/golang/tools/git/commits/cde4d316d2ac888848893d531bd9dd4b0a3e55cb,cde4d316d2ac888848893d531bd9dd4b0a3e55cb,"go.tools/cmd/vet: docs: explain the command line interface better
How it handles packages vs. directories vs. files was not explained.

LGTM=rsc
R=golang-codereviews, gobot, rsc
CC=golang-codereviews
https://golang.org/cl/67150043"
griesemer,2014-02-24 18:14:33,https://api.github.com/repos/golang/tools/git/commits/3ff8e6554d525a32295edf0b5d03e33d278140df,3ff8e6554d525a32295edf0b5d03e33d278140df,"go/types: simplify tracking of side effects for len/cap

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/67190043"
davecheney,2014-02-22 02:24:39,https://api.github.com/repos/golang/tools/git/commits/1c1af4be5d701fa70d04e3c766dfa50daf6fd27e,1c1af4be5d701fa70d04e3c766dfa50daf6fd27e,"go.tools/dashboard/builder: fix imported by not used error

Update golang/go#7372

This slipped into the build in revision 4b4229fc616b.

Thanks to @pierredurand87 for noticing the break.

LGTM=bgarcia
R=golang-codereviews, bgarcia
CC=golang-codereviews
https://golang.org/cl/66670043"
0intro,2014-02-21 20:53:57,https://api.github.com/repos/golang/tools/git/commits/29d0463c1c2593eafc7bc5395b674a07ad9c9ef2,29d0463c1c2593eafc7bc5395b674a07ad9c9ef2,"go.tools/oracle: fix TestOracle on Plan 9

LGTM=minux.ma
R=golang-codereviews, lucio.dere, gobot, minux.ma
CC=golang-codereviews
https://golang.org/cl/64400043"
alandonovan,2014-02-21 15:46:02,https://api.github.com/repos/golang/tools/git/commits/99b2441d955f6c7ed43cfb675f9e4fba1a7f9866,99b2441d955f6c7ed43cfb675f9e4fba1a7f9866,"go.tools/oracle: optionally restrict 'callgraph' query to a single package.

If a -pos argument is specified, a 'callgraph' query reports only the
functions within the query package.  This produces a far more manageable
amount of information, and because we don't need to package-qualify the
names, the result is easier to read.

Added tests:
- callgraph query with/without -pos
  (The test driver was extended to allow ""nopos"" queries.)
- callers and callees queries don't return wrappers

Also, in go/callgraph:
- (*Node).String, (*Edge).String
- (*Graph).DeleteSyntheticNodes eliminates synthetic wrapper functions,
  preserving topology.  Used in all four oracle ""call*"" queries.
- (*Graph).DeleteNode

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/66240044"
alandonovan,2014-02-21 01:11:00,https://api.github.com/repos/golang/tools/git/commits/49eaa56ed197df94ae3f86bc28950cc2b8ac2b75,49eaa56ed197df94ae3f86bc28950cc2b8ac2b75,"go.tools/go/*: fix breakage caused by removal of types.NewPackage parameter.

(This fixes the build, but one test is failing.)

TBR=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/66730043"
alandonovan,2014-02-21 00:49:38,https://api.github.com/repos/golang/tools/git/commits/01263f0a00c6b31087287d8edacf85483b3f7366,01263f0a00c6b31087287d8edacf85483b3f7366,"go.tools/go/ssa: fix breakage caused by removal of types.NewPackage parameter.

TBR=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/66600045"
griesemer,2014-02-20 22:52:21,https://api.github.com/repos/golang/tools/git/commits/9111cead205b1d04568d7312fe5001b733c46e4a,9111cead205b1d04568d7312fe5001b733c46e4a,"go.tools/go/types: internal cleanups

- clearer separation between package-level and object-level state
- lazy allocation of various package-level maps
- NewPackage automatically allocates a package scope
- steps towards enabling incremental checking of extra (test) files
  after the (non-test) package is type-checked (not yet exposed)

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/66230044"
0intro,2014-02-20 20:43:24,https://api.github.com/repos/golang/tools/git/commits/374c600caeb4b27127ed3c7da95d449e47245ef6,374c600caeb4b27127ed3c7da95d449e47245ef6,"go.tools/cmd/vet: disable TestVet on Plan 9

LGTM=minux.ma
R=golang-codereviews, minux.ma
CC=golang-codereviews
https://golang.org/cl/64410043"
alandonovan,2014-02-20 16:57:48,https://api.github.com/repos/golang/tools/git/commits/829d52f2e8ad011c7e9d04e42d196e1b1472dbdb,829d52f2e8ad011c7e9d04e42d196e1b1472dbdb,"go.tools/go/callgraph: simplifications to API.

1) We remove context sensitivity from API.  The pointer analysis is
   not sufficiently context-sensitive for the context information to
   be worth exposing.  (The actual analysis precision still benefits
   from being context-sensitive, though.)  Since all clients would
   discard the context info, we now do that for them.
2) Make the graph doubly-linked.  Edges are now shared by the Nodes
   at both ends of the edge so it's possible to navigate more easily
   (e.g. to the callers).
3) Graph and Node are now concrete, not interfaces.

Less code in every file!

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/66460043"
alandonovan,2014-02-20 16:35:09,https://api.github.com/repos/golang/tools/git/commits/28104d2c91d3866b6573ac98e543de106314507e,28104d2c91d3866b6573ac98e543de106314507e,"go.tools/go/pointer: remove context-sensitivity from API.

Previously, each {Indirect,}Query would return a set of Pointers, one per context; now it returns (at most) one Pointer combining information from all contexts.

The old API was more faithful to the implementation concepts, but the analysis is not sufficiently context-sensitive that it makes sense: all existing clients simply throw away the context information---so now we do that for them.

(I may remove the context-sensitivity from the callgraph too, but I'll benchmark that first to see if it reduces precision.)

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/66130044"
paranoiacblack,2014-02-20 00:32:41,https://api.github.com/repos/golang/tools/git/commits/fcad4a15d8bce085bd42c4ed6444010444ff604a,fcad4a15d8bce085bd42c4ed6444010444ff604a,"go.tools/dashboard/builder: Use git for gccgo builds instead of svn.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/66090046"
alandonovan,2014-02-19 22:55:30,https://api.github.com/repos/golang/tools/git/commits/0eac03b836dd917e9beeb8fd353a4bca5125a853,0eac03b836dd917e9beeb8fd353a4bca5125a853,"go.tools/go/types: include import path in (*Package).String()

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/66120045"
griesemer,2014-02-19 21:27:11,https://api.github.com/repos/golang/tools/git/commits/9d6717b260ec864f2ec189ebf172fbaeeb3d3b58,9d6717b260ec864f2ec189ebf172fbaeeb3d3b58,"go.tools/go/importer: handle predeclared types consistently

- pre-poluate typIndex and typList using a predefined list of types
- no need to handle basic types explicitly anymore
- removed basicTag
- go/types: exported UniverseByte and UniverseRune for now

LGTM=adonovan
R=adonovan
CC=cmang, golang-codereviews
https://golang.org/cl/65920044"
alandonovan,2014-02-19 18:52:19,https://api.github.com/repos/golang/tools/git/commits/aaa5866ea1bbce948457c413a16b1751f70643ec,aaa5866ea1bbce948457c413a16b1751f70643ec,"go.tools/go/loader: rename backdoor so only tests can use it.

Also: add copyright message.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/64040044"
alandonovan,2014-02-19 18:32:36,https://api.github.com/repos/golang/tools/git/commits/03ca00ddd4d133ab02e30f66a9ae2d13493c0c30,03ca00ddd4d133ab02e30f66a9ae2d13493c0c30,"go.tools/go/types/typeutil: new package for type utilities.

Contains the members formerly known as:
- ssa.IntuitiveMethodSet
- typemap.M (now: Map)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/65670043"
alandonovan,2014-02-19 18:28:12,https://api.github.com/repos/golang/tools/git/commits/42022f89d4587eee8132a6c4fc489eb0ec24ae7a,42022f89d4587eee8132a6c4fc489eb0ec24ae7a,"go.tools/go/loader: add file missing from rev ebef51b726fc
(CL https://golang.org/cl/62540043)

TBR=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/65530046"
alandonovan,2014-02-19 18:08:06,https://api.github.com/repos/golang/tools/git/commits/0c9517ddba6a73ab69d371f45286500e7669314a,0c9517ddba6a73ab69d371f45286500e7669314a,"go.tools/go/pointer: assert that input program is complete.

Fixes golang/go#7257

LGTM=crawshaw
R=daniel.morsing, crawshaw
CC=golang-codereviews
https://golang.org/cl/65730045"
josharian,2014-02-19 15:44:49,https://api.github.com/repos/golang/tools/git/commits/e8c291b808571c832a31555b9f4f737a3fb73e28,e8c291b808571c832a31555b9f4f737a3fb73e28,"go.tools/cmd/benchcmp: sort by original benchmark order by default

benchcmp now preserves benchmark order. This restores the original
misc/benchcmp behavior. This also makes the output of benchcmp stable,
and groups together multiple -cpu results.

Magnitude-based sorting is still available via the -mag flag.
It is useful for surfacing items of note (particularly changes
in allocs) when making compiler changes and running broad
benchmarks.

Fixes golang/go#7259.

LGTM=dave
R=dave, mtj
CC=bradfitz, dvyukov, golang-codereviews
https://golang.org/cl/60840045"
alandonovan,2014-02-19 00:43:14,https://api.github.com/repos/golang/tools/git/commits/ed45af74ff09a280906089e383aca5d202ba6698,ed45af74ff09a280906089e383aca5d202ba6698,"go.tools/go/loader: add AllowTypeErrors flag.

If this flag is set, (*Config).Load will not return an
error even if some packages had type errors.  Each individual
PackageInfo can be queried for its error state, now exposed as
TypeError.

In addition, each PackageInfo exposes whether it is
""transitively error-free"".  ssa.Create skips packages without
this flag since it is required for SSA construction.

+ Test.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/62000045"
alandonovan,2014-02-18 20:40:44,https://api.github.com/repos/golang/tools/git/commits/5f96644dbf29b1c6dcc9676c4b5f680bba1433bd,5f96644dbf29b1c6dcc9676c4b5f680bba1433bd,"go.tools/pointer: opt: type-based label tracking reduces solver time by up to 75%.

Observation: not all alias facts are interesting.
- A channel-peers query also cares about pointers of kind chan.
- An oracle ""points-to"" query on an expression of kind map
  only cares about maps.
- We always care about func, interface and reflect.Value,
  since they're needed for sound analysis of dynamic dispatch.

We needn't bother collecting alias information for
uninteresting pointers, and this massively reduces the number
of labels flowing in to the constraint system.
The only constraints that create new labels are addressOf
and offsetAddr; both are now selectively emitted by type.

We compute the set of type kinds to track, based on the
{Indirect,}Query types.  (We could enable tracking at an
even finer grain if we want.)

This requires that we can see all the {Indirect,}Query
value types a priori, which is not the case for the PrintCalls
mechanism used in the tests, so I have rewritten the latter
to use {Indirect,}Query instead.

This reduces the solver-phase time for the entire standard
library and tests from >8m to <2m.  Similar speedups are
obtained on small and medium-sized programs.

Details:
- shouldTrack inspects the flattened form of a type to see if
  it contains fields we must track.  It memoizes the result.
- added precondition checks to (*Config).Add{,Indirect}Query.
- added (*ssa.Program).LookupMethod convenience method.
- added Example of how to use the Query mechanism.
- removed code made dead by a recent invariant:
  the only pointerlike Const value is nil.
- don't generate constraints for any functions in ""reflect"".
  (we had forgotten to skip synthetic wrappers too).
- write PTA warnings to the log.
- add annotations for more intrinsics.

LGTM=gri, crawshaw
R=crawshaw, gri
CC=golang-codereviews
https://golang.org/cl/62540043"
alandonovan,2014-02-18 20:39:29,https://api.github.com/repos/golang/tools/git/commits/675033b4f39146560cf391680ad863023ec05c63,675033b4f39146560cf391680ad863023ec05c63,"go.tools/go/ssa: fix nondeterministic computation of necessary method sets.

Method Signatures (types.Signatures with a non-nil receiver) behave
like ordinary func Signatures in the hash function/equivalence relation
used by typemap.M, which leads to surprising incomplete traversal
over the type graph if an M is used to remember types already
visited.

This change avoids ever putting method Signatures in a typemap.

% go test -v code.google.com/p/go.tools/go/ssa
now repeatedly shows the exact same number of functions and
instructions.

(We should discuss how to avoid this problem more generally.)

Also:
- recur over the params/results of all the methods of
  each type when computing necessary method sets.
- there's no longer any need to treat declarations of unexported
  methods as a root for traversal.  Added test case.
- enable SourceImports flag in stdlib_test, which was dropped
  during a recent refactoring (d'oh).
- doc tweaks

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/65450043"
alandonovan,2014-02-18 20:37:24,https://api.github.com/repos/golang/tools/git/commits/a75195d0910ff1f9e6bfd00d089bbb5039eba9af,a75195d0910ff1f9e6bfd00d089bbb5039eba9af,"       go.tools/go/ssa/interp: fix tests broken by recent runtime changes.

       This CL adds no-op stubs for intrinsics now required by tests:
 	 runtime.Goexit
	 sync.runtime_Sem{acquire,release}
        sync/atomic.AddUint{32,64}
 	Goexit needs more thought; for now I've disabled the interpreted
       tests of the ""testing"" package to make the build green again.

TBR=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/65480044"
campoy,2014-02-18 17:44:12,https://api.github.com/repos/golang/tools/git/commits/ca8198c1320730270b4582ffd537ab2ab5079121,ca8198c1320730270b4582ffd537ab2ab5079121,"go.tools/playground: parse shebang correctly

Fixes golang/go#7321.

LGTM=adg
R=adg
CC=golang-codereviews
https://golang.org/cl/63560043"
0intro,2014-02-16 16:40:50,https://api.github.com/repos/golang/tools/git/commits/0b0cd8b22c147a232520b3da3df4722594f3a774,0b0cd8b22c147a232520b3da3df4722594f3a774,"go.tools/dashboard/builder: use $home on Plan 9

LGTM=alex.brainman
R=golang-codereviews, lucio.dere, alex.brainman
CC=golang-codereviews
https://golang.org/cl/64520043"
davecheney,2014-02-16 09:43:00,https://api.github.com/repos/golang/tools/git/commits/a565a4ff672b9d698f4fec49fdd1802504de829e,a565a4ff672b9d698f4fec49fdd1802504de829e,"go.tools/dashboard/builder: respect CGO_ENABLED value from the environment

Allow builder owners to set CGO_ENABLED to override the logic in cmd/go

LGTM=minux.ma, adg
R=golang-codereviews, minux.ma, adg
CC=golang-codereviews
https://golang.org/cl/63570046"
minux,2014-02-14 01:50:29,https://api.github.com/repos/golang/tools/git/commits/ddb496edf3fff01b6ee6cef3b5e8ab17b0d9a184,ddb496edf3fff01b6ee6cef3b5e8ab17b0d9a184,"go.tools/dashboard/builder: use ""hg archive -t files -r REV dest"" instead of ""hg clone"" for the work directory.
It will save a lot of time for slow builders running on slow SD cards.

LGTM=dave, adg
R=golang-codereviews, dave, adg
CC=golang-codereviews
https://golang.org/cl/63550043"
adg,2014-02-14 00:35:50,https://api.github.com/repos/golang/tools/git/commits/b277773706f9db865b992bba36363744d19fa545,b277773706f9db865b992bba36363744d19fa545,"go.tools/dashboard/app: tweak build column order

LGTM=rsc
R=rsc
CC=golang-codereviews
https://golang.org/cl/63590043"
adg,2014-02-13 00:05:01,https://api.github.com/repos/golang/tools/git/commits/47596b4b81f617b282dea592014ce4a4e33a3d73,47596b4b81f617b282dea592014ce4a4e33a3d73,"go.tools/cmd/vet: add stable checks to doc.go

These are the simplest possible descriptions of each command.
They may be fleshed out later.

Fixes golang/go#7298.

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/61480044"
alandonovan,2014-02-12 17:45:55,https://api.github.com/repos/golang/tools/git/commits/8c7a4539cdf942f4fa988eacad094e0ab754de3c,8c7a4539cdf942f4fa988eacad094e0ab754de3c,"go.tools/pointer: implement (*reflect.rtype).MethodByName for abstract methods.

+ test.

LGTM=crawshaw
R=crawshaw
CC=golang-codereviews
https://golang.org/cl/25810043"
bradfitz,2014-02-12 16:35:02,https://api.github.com/repos/golang/tools/git/commits/05bc285da4634e7ce87d8551264eba751898979a,05bc285da4634e7ce87d8551264eba751898979a,"cmd/goimports: update doc, remove old gofmt flags

Don't say the word ""fork"" (not accurate), and remove the
tab/comment flags that were removed from gofmt.

LGTM=adg
R=golang-codereviews, adg
CC=golang-codereviews
https://golang.org/cl/61410052"
alandonovan,2014-02-12 01:35:18,https://api.github.com/repos/golang/tools/git/commits/d10dca34caf5a371d647ca4a5d99ace899b31fcd,d10dca34caf5a371d647ca4a5d99ace899b31fcd,"go.tools/ssa/interp: add several standard library packages to test suite.

- Add math.{Log,Ldexp} to externals
- Test now uses FromArgs
- Scan all initial packages for tests, don't assume Created[0] exists.
  (It doesn't if we import a package that has only in-package tests.)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/62010044"
alandonovan,2014-02-11 23:15:10,https://api.github.com/repos/golang/tools/git/commits/b2557286bbfa68c8ed788c456b22db662df70aef,b2557286bbfa68c8ed788c456b22db662df70aef,"go.tools/go/ssa/interp: improve ""no such method"" error.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/59740043"
alandonovan,2014-02-11 21:52:16,https://api.github.com/repos/golang/tools/git/commits/08fadac0710af0af980b537e051f474d23056a55,08fadac0710af0af980b537e051f474d23056a55,"go.tools/go/loader: simplify command-line syntax.

Previously, each word could be a package import path or a
comma-separated list of *.go file names.  Now, if the
first word ends with "".go"", all words are assumed to be
Go source files.  This makes it impossible to specify
two ad-hoc packages from source files, but no-one needs that.

FromArgs also takes a boolean indicating whether tests
are wanted or not.

Also: ssadump: add -test flag to set that boolean.
For the oracle it's always true.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/61470047"
alandonovan,2014-02-11 21:49:27,https://api.github.com/repos/golang/tools/git/commits/1f29e74bfac701d8dfa40b6aaa35d20a7685ac46,1f29e74bfac701d8dfa40b6aaa35d20a7685ac46,"go.tools/go/types: remove Type.MethodSet() method.

Method-set caching is now performed externally using a MethodSetCache (if desired), not by the Types themselves.

This a minor deoptimization due to the extra maps, but avoids a situation in which method-sets are computed and frozen prematurely. (See b/7114)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/61430045"
griesemer,2014-02-11 21:40:59,https://api.github.com/repos/golang/tools/git/commits/fc1d9c55052172ecb0557341eda4f17a80a94d6e,fc1d9c55052172ecb0557341eda4f17a80a94d6e,"go.tools/go/types: adjust 3-index slice tests

The parser is now checking the presence of the 2nd and 3rd
index of 3-index slice expressions. See also:

https://golang.org/cl/58950045/
http://golang.org/issue/7305

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/58500045"
alandonovan,2014-02-11 20:59:20,https://api.github.com/repos/golang/tools/git/commits/ee92efc193e3a66ef1fbd962fbd343d699e1f280,ee92efc193e3a66ef1fbd962fbd343d699e1f280,"go.tools/ssa: tweaks to CreateTestMainPackage.

Move mutation of program to the final step.
+ 2 assertions;
+ switches.go: comment fix.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/61510044"
alandonovan,2014-02-11 20:36:41,https://api.github.com/repos/golang/tools/git/commits/ddfef020d1a44c871a0bba8234dd157f091f1aff,ddfef020d1a44c871a0bba8234dd157f091f1aff,"go.tools/go/ssa/interp: add missing case to fake reflect function.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/61410049"
adg,2014-02-10 22:26:17,https://api.github.com/repos/golang/tools/git/commits/1a5e5b083b52f2ebd63c34de3c99e70df531515c,1a5e5b083b52f2ebd63c34de3c99e70df531515c,"go.tools/godoc/redirect: remove race detector blog post redirect

Update golang/go#7275

LGTM=minux.ma, dvyukov
R=dvyukov, minux.ma
CC=golang-codereviews
https://golang.org/cl/60900044"
bradfitz,2014-02-08 01:03:34,https://api.github.com/repos/golang/tools/git/commits/a0c2140b91d8451b85837830d546d04d319218fc,a0c2140b91d8451b85837830d546d04d319218fc,"imports: fix a case where we weren't gofmt-compatible

Because goimports also sorts stdlib-vs-external differently
(whereas gofmt just sorts string-wise), we need to put a blank
line between imports of different classes. This happened in
some cases, but not all.

Fixes golang/go#7132

LGTM=kamil.kisiel
R=golang-codereviews, kamil.kisiel
CC=golang-codereviews
https://golang.org/cl/60870047"
alandonovan,2014-02-05 22:54:51,https://api.github.com/repos/golang/tools/git/commits/b3dbe56610e0e7bcaeadfb3cc2ced864abff18e9,b3dbe56610e0e7bcaeadfb3cc2ced864abff18e9,"go.tools/go/ssa: support 3-operand x[lo:hi:max] slices.

+ very basic test ($GOROOT/test/slice3.go needs unsafe.Pointer)

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/60030043"
griesemer,2014-02-04 19:06:00,https://api.github.com/repos/golang/tools/git/commits/c37c5f6f4630c20b2fc852e6cb84f0a5a07ca13a,c37c5f6f4630c20b2fc852e6cb84f0a5a07ca13a,"go.tools/go/types: internal cleanup (resolve a TODO)

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/59560046"
griesemer,2014-02-04 18:26:38,https://api.github.com/repos/golang/tools/git/commits/5351a1ccd2fe06cc69b013cca678836e935141c5,5351a1ccd2fe06cc69b013cca678836e935141c5,"go.tools/godoc: don't associate builtin nil with a type

Special case for (fake) package builtin: don't associate
any constant, variable, or factory function with a type.

Fixes golang/go#6645.

LGTM=bgarcia
R=bgarcia, r, bradfitz
CC=golang-codereviews
https://golang.org/cl/54820044"
griesemer,2014-02-04 00:02:56,https://api.github.com/repos/golang/tools/git/commits/20efc5ba73634062f13f434a862ad72f2ffcf552,20efc5ba73634062f13f434a862ad72f2ffcf552,"go.tools/go/types: use init cycle tracking for all const and var cycles

Also rename types.Assertable -> types.AssertableTo per adonovan.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/59680044"
griesemer,2014-02-03 19:39:10,https://api.github.com/repos/golang/tools/git/commits/4dcaee97b259e88d2377a406f4331948b865853e,4dcaee97b259e88d2377a406f4331948b865853e,"go.tools/cmd/vet: use new Assertable predicate (fix build)

LGTM=r
R=r
CC=golang-codereviews
https://golang.org/cl/59210045"
gordonklaus,2014-02-03 19:21:01,https://api.github.com/repos/golang/tools/git/commits/3e68d0825106de2ffefc17e200b886c539dcf0b7,3e68d0825106de2ffefc17e200b886c539dcf0b7,"go.tools/go/types: export Comparable and Assertable, simplify Implements

The ""static bool"" parameter to Implements was confusing; typically we think about interface implementation and type assertion as separate but related concepts, but here they were merged.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/58540044"
griesemer,2014-02-03 18:34:06,https://api.github.com/repos/golang/tools/git/commits/ed1b894adec0681ec94d889e887e8447af94bf02,ed1b894adec0681ec94d889e887e8447af94bf02,"go.tools/go/types: print cyles of recursive type declarations

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/59140043"
josharian,2014-01-31 23:39:59,https://api.github.com/repos/golang/tools/git/commits/285f6fe2f647521fc047b414c5e15f7ebe27c7af,285f6fe2f647521fc047b414c5e15f7ebe27c7af,"go.tools/cmd/benchcmp: add benchcmp

This is intended to replace the awk-based misc/benchcmp.
It mostly matches the existing misc/benchcmp.
Notable changes:

* Written in Go.
* Minor whitespace changes in the output; the tabular nature of the
  output is preserved, as is most number formatting and verbiage.
* Comparisons within each section are sorted from highest change to lowest.
* Proper handling of multiple benchmarks with the same name (issue 7016).
* Does not omit benchmark comparisons for which the new value is zero.
* Adds -changed flag to only show benchmarks whose value have changed.
  Useful for memory-oriented, large-scale benchmark comparisons.
* Has tests.
* Formats small ns measurements with extra precision.

Updates golang/go#7016.

LGTM=r
R=golang-codereviews, dave, dvyukov, oleku.konko, bradfitz, gobot, r
CC=golang-codereviews
https://golang.org/cl/47980043"
griesemer,2014-01-31 23:31:10,https://api.github.com/repos/golang/tools/git/commits/caced9f3042ab0f0fd7b5017ce88922ea2a6ac3f,caced9f3042ab0f0fd7b5017ce88922ea2a6ac3f,"go.tools/go/ssa: remove windows test exclusion

Issue 7189 was likely fixed with revision ed6ecfe1bc4e .

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/59230044"
griesemer,2014-01-31 23:12:05,https://api.github.com/repos/golang/tools/git/commits/91159eb2145da3b9086b9363ec7cd38e6bc86519,91159eb2145da3b9086b9363ec7cd38e6bc86519,"go.tools/go/types: don't type-check methods twice

- Centralize ""visited"" check in check.objDecl.
- Assert that object-specific declX functions
are only called with objects that have no
type associated with them, yet.
- Added test case.

Thanks to Richard Musiol (neelance@gmail.com) for
finding the bug and providing an easy test case.

For a discussion of the bug see the issue.

Fixes golang/go#7245.

TBR=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/59210043"
alexbrainman,2014-01-31 06:46:15,https://api.github.com/repos/golang/tools/git/commits/269daf307c35900987627eadd7063709fa387b80,269daf307c35900987627eadd7063709fa387b80,"go.tools/go/ssa: skip broken TestStdlib on windows

Update golang/go#7189

LGTM=dave
R=golang-codereviews, dave
CC=golang-codereviews
https://golang.org/cl/49640049"
alexbrainman,2014-01-31 06:30:37,https://api.github.com/repos/golang/tools/git/commits/69f7b061bdcd5e709e84666f5212de2130441c9a,69f7b061bdcd5e709e84666f5212de2130441c9a,"go.tools/go/ssa: stop if error in TestStdlib

Update golang/go#7189

LGTM=dave
R=golang-codereviews, dave
CC=golang-codereviews
https://golang.org/cl/58910043"
griesemer,2014-01-30 17:46:03,https://api.github.com/repos/golang/tools/git/commits/9cd9226d63135f9b66e72e391a0549294b772cc7,9cd9226d63135f9b66e72e391a0549294b772cc7,"go.tools/go/types: fix type cycle tracking

Fixes golang/go#7236.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/58430043"
griesemer,2014-01-29 22:24:54,https://api.github.com/repos/golang/tools/git/commits/bf4d636dc95c4c058e7a69e96addada5bf240cb7,bf4d636dc95c4c058e7a69e96addada5bf240cb7,"go.tools/go/types: cleanup handling of forward chains of underlying types

- consistently set underlying types of incoming named types in typInternal
- use underlying() helper function to resolve forward chains
- related consistency cleanups

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/53870044"
griesemer,2014-01-29 18:53:49,https://api.github.com/repos/golang/tools/git/commits/c4535ece1b90331f8c451db6596c2c7211b6b810,c4535ece1b90331f8c451db6596c2c7211b6b810,"go.tools/go/types: various cleanups - no semantic changes

- split resolver.go into resolver.go and decl.go
- renamed types.go -> type.go
- renamed objects.go -> object.go

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/58010043"
alandonovan,2014-01-28 22:48:10,https://api.github.com/repos/golang/tools/git/commits/744d7e68b105ab34d7c4ff86d5119886c67f2c44,744d7e68b105ab34d7c4ff86d5119886c67f2c44,"go.tools/go/ssa: use bytes.Buffer instead of io.Writer.

This is (a) more efficient and (b) avoids the need for
constant error handling, since buffer writes can't fail.

Also:
- added WriteFunction and WritePackage functions,
  similar to types.WriteFoo.
- *Function and *Package now implement io.WriterTo.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/57930044"
griesemer,2014-01-28 22:28:10,https://api.github.com/repos/golang/tools/git/commits/83cdd9ba10ebbe249893fdd66e12634e6ca066b7,83cdd9ba10ebbe249893fdd66e12634e6ca066b7,"go.tools/go/types: export ConvertibleTo

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/57950043"
alandonovan,2014-01-28 22:04:41,https://api.github.com/repos/golang/tools/git/commits/d0efad30825eba96ad450bc263ab64073983fe8e,d0efad30825eba96ad450bc263ab64073983fe8e,"go.tools/go/ssa: use types.WriteSignature

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/57930043"
alandonovan,2014-01-28 21:46:24,https://api.github.com/repos/golang/tools/git/commits/64ec206bfdf248ca1f3b619e050c2ae25ce36fee,64ec206bfdf248ca1f3b619e050c2ae25ce36fee,"go.tools/go/types: combine Info.{Types,Values} maps.

This results in significant improvement to type-checking time:
it reduces by 4% the entire running time of ssa/stdlib_test
(GOMAXPROCS=8, n=7).

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/57770043"
griesemer,2014-01-28 21:42:46,https://api.github.com/repos/golang/tools/git/commits/e5e20e3af553c1b6114bad4a2d83d98f22444e82,e5e20e3af553c1b6114bad4a2d83d98f22444e82,"go.tools/go/types: make WriteType cycle-resistent

Also:
- expose WriteSignature
- s/identicalInternal/identical/g

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/57860043"
griesemer,2014-01-28 20:56:33,https://api.github.com/repos/golang/tools/git/commits/7dbf7c000d1dd8edadd9e16abfe6de60020ef071,7dbf7c000d1dd8edadd9e16abfe6de60020ef071,"go.tools/go/types: internal cleanup - nil out objmap when done with it

Also: print package path with quotes.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/55520046"
griesemer,2014-01-28 18:57:56,https://api.github.com/repos/golang/tools/git/commits/ebfa4efbc4757eb4dca06f30f67e33c2f5bfa28d,ebfa4efbc4757eb4dca06f30f67e33c2f5bfa28d,"go.tools/go/types: cleanup: more consistent exported predicate names

Renamed predicates:
IsIdentical -> Identical
IsAssignableTo -> AssignableTo
Signature.IsVariadic -> Signature.Variadic
Object.IsExported -> Object.Exported

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/53370043"
griesemer,2014-01-28 17:40:12,https://api.github.com/repos/golang/tools/git/commits/aea9f6881139192ada389c3c7b1c93b48a217bb1,aea9f6881139192ada389c3c7b1c93b48a217bb1,"go.tools/go/types: set array type even if length is invalid

This avoids some follow-up errors due to invalid
array declarations.

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/57640043"
griesemer,2014-01-28 17:22:53,https://api.github.com/repos/golang/tools/git/commits/ffc64162138c30bd186c62504e4206a53f0b3b3e,ffc64162138c30bd186c62504e4206a53f0b3b3e,"go.tools/go/types: print local types unqualified in error/debugging output

LGTM=adonovan
R=adonovan
CC=golang-codereviews
https://golang.org/cl/57630044"
adg,2014-01-28 06:59:29,https://api.github.com/repos/golang/tools/git/commits/8aae1381312cc7ae8fb1c1f7d2561e3d551f74ce,8aae1381312cc7ae8fb1c1f7d2561e3d551f74ce,"go.tools/dashboard/app: update bad builder list

LGTM=r
R=r, minux.ma
CC=golang-codereviews
https://golang.org/cl/57580043"
adg,2014-01-28 03:30:48,https://api.github.com/repos/golang/tools/git/commits/5cb6365d33271287832d5eef84dceb57c8d83cc5,5cb6365d33271287832d5eef84dceb57c8d83cc5,"go.tools/dashboard/app: show sub-repository build history

LGTM=cmang
R=adonovan, gobot, cmang
CC=golang-codereviews
https://golang.org/cl/56410043"
alandonovan,2014-01-27 20:39:17,https://api.github.com/repos/golang/tools/git/commits/4dcb74e810a668298e9a95c5d6d869abf124f82c,4dcb74e810a668298e9a95c5d6d869abf124f82c,"go.tools/go/ssa/interp: implement reflection over callstack (now that we have access to it).

+ tests.

Fixes golang/go#6041

Also: move global var _sizes to a field of interpreter.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/56530046"
alandonovan,2014-01-27 18:11:16,https://api.github.com/repos/golang/tools/git/commits/fbb3d81367a2fdab908bbd5d6e322391de81a972,fbb3d81367a2fdab908bbd5d6e322391de81a972,"go.tools/ssa/interp: add intrinsics for (*sync.Pool).{Get,Put}.

Since Put() makes a dynamic function call, this CL includes a long-overdue change to supply a *frame (and thus the call
stack and the interpreter) to intrinsics too.

This fixes the tests that were broken by (sound) revision e4a4cb47c141.

LGTM=gri
R=gri
CC=golang-codereviews
https://golang.org/cl/57350043"
bradfitz,2014-01-26 17:47:31,https://api.github.com/repos/golang/tools/git/commits/eda00ba4ece02ca59ca720d473fb936ddf838a6d,eda00ba4ece02ca59ca720d473fb936ddf838a6d,"imports: bake in the standard library again

Fast path for the common case. Avoids scanning GOPATH usually.

LGTM=r, crawshaw
R=david.crawshaw, adg, r, crawshaw
CC=golang-codereviews
https://golang.org/cl/56820043"
adg,2014-01-24 03:52:23,https://api.github.com/repos/golang/tools/git/commits/3b2989e9ea078513ac63048cfcdff2c7bd6fe6f5,3b2989e9ea078513ac63048cfcdff2c7bd6fe6f5,"go.tools/dashboard: update CL on build failure

Only send mail to golang-dev if updating the CL fails.

R=golang-codereviews, dvyukov, minux.ma, rsc
CC=golang-codereviews
https://golang.org/cl/43760043"
adg,2014-01-23 22:13:34,https://api.github.com/repos/golang/tools/git/commits/334285616146378efd5f0acbac2c18046fd0d524,334285616146378efd5f0acbac2c18046fd0d524,"go.tools/dashboard/app: sort builder columns in a more useful manner

Supported operating systems first, then race builders, then the rest.

R=r, bradfitz
CC=golang-codereviews
https://golang.org/cl/56190043"
alandonovan,2014-01-22 22:19:25,https://api.github.com/repos/golang/tools/git/commits/87b29f65dc0d6317f849adda0d9535163a4c7092,87b29f65dc0d6317f849adda0d9535163a4c7092,"go.tools/go/ssa/interp: fix broken import paths.

Fixes golang/go#7166

R=gri
CC=golang-codereviews
https://golang.org/cl/55710045"
alandonovan,2014-01-22 14:59:19,https://api.github.com/repos/golang/tools/git/commits/0dcaae1610245422666a8cc1efb7fce907acb915,0dcaae1610245422666a8cc1efb7fce907acb915,"go.tools/go/loader: permit Create* methods to specify the ad-hoc package's path

CL 49530047 made the (over-)simplifying assumption that the
Path of an ad-hoc (Created) package should default to its
Name, i.e. package declaration.

With this change, the Name is still always computed from the
package declaration (by go/types) but the Path may be
specified by the loader.Config.  If """", the value of the Name
is used, which is not globally unique.

R=gri, axwalk
CC=golang-codereviews
https://golang.org/cl/55180043"
griesemer,2014-01-17 19:17:43,https://api.github.com/repos/golang/tools/git/commits/074bd4ac9ca53d30c16816162a7fe07afcbe65eb,074bd4ac9ca53d30c16816162a7fe07afcbe65eb,"go.tools/go/types: cleanup: remove unnecessary receiver

R=adonovan
CC=golang-codereviews
https://golang.org/cl/53810044"
alandonovan,2014-01-17 14:38:25,https://api.github.com/repos/golang/tools/git/commits/28456381572c0f8906d75ef5f4449ca25ed35597,28456381572c0f8906d75ef5f4449ca25ed35597,"go.tools/go/ssa: simplify builder.exprN now that go/types emits correct types.

(Follow-up to fix of issue 7060.)

Also: comment fixes.

R=gri
CC=golang-codereviews
https://golang.org/cl/47670043"
griesemer,2014-01-17 03:33:51,https://api.github.com/repos/golang/tools/git/commits/2d6b34a0f58917040193afdfdb02a6e8759cbc45,2d6b34a0f58917040193afdfdb02a6e8759cbc45,"go.tools/go/types: report rhs type for comma-ok expressions

Fixes golang/go#7060.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/53520043"
griesemer,2014-01-16 22:47:26,https://api.github.com/repos/golang/tools/git/commits/0b4b877c725b0f72fb47ca587439bb31fcc86866,0b4b877c725b0f72fb47ca587439bb31fcc86866,"go.tools/go/types: remove size from Basic

More localized computation of sizes.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/53460043"
griesemer,2014-01-16 21:20:02,https://api.github.com/repos/golang/tools/git/commits/9b91992c8cdf840b33decfed3a04eafa44ac4271,9b91992c8cdf840b33decfed3a04eafa44ac4271,"go.tools/go/loader: add missing argument to fmt.Errorf call

R=adonovan
CC=golang-codereviews
https://golang.org/cl/53360043"
griesemer,2014-01-16 21:19:39,https://api.github.com/repos/golang/tools/git/commits/184bc0cc8cd8a53607b0f7cda0743e55bd5aa4f6,184bc0cc8cd8a53607b0f7cda0743e55bd5aa4f6,"go.tools/go/gccgoimporter: remove dead code

R=adonovan
CC=golang-codereviews
https://golang.org/cl/53340043"
griesemer,2014-01-16 21:17:46,https://api.github.com/repos/golang/tools/git/commits/e4a00b5ce3b5591c2b59a2baaae0add9c372216f,e4a00b5ce3b5591c2b59a2baaae0add9c372216f,"go.tools/go/importer: fix format string

R=adonovan
CC=golang-codereviews
https://golang.org/cl/52360045"
alandonovan,2014-01-16 19:08:04,https://api.github.com/repos/golang/tools/git/commits/9cfde22948646bae6961157e039505b16fec1c54,9cfde22948646bae6961157e039505b16fec1c54,"go.tools/ssa/interp: rewrite initorder test.

Correct, this time.

R=gri
CC=golang-codereviews
https://golang.org/cl/52930043"
alandonovan,2014-01-16 19:04:19,https://api.github.com/repos/golang/tools/git/commits/b856247075e5425aeff2ecd4335aaebffe350159,b856247075e5425aeff2ecd4335aaebffe350159,"go.tools/call: rename package to go/callgraph

Was:		Now:
call.Graph	callgraph.Graph
call.GraphNode	callgraph.Node
call.Edge	callgraph.Edge

Though call.Graph was cute, the original naming was a mistake:
'call' is too useful a var name to waste on a package.

R=gri, crawshaw
CC=golang-codereviews
https://golang.org/cl/53190043"
alandonovan,2014-01-16 14:33:58,https://api.github.com/repos/golang/tools/git/commits/3fc0fc1310d6e1d2ce061634e539fef038499eff,3fc0fc1310d6e1d2ce061634e539fef038499eff,"go.tools: rename packages.

Was:		Now:
ssa		go/ssa
importer	go/loader
pointer		go/pointer

Next CL: call -> go/callgraph (requires more care)

R=gri, crawshaw
CC=golang-codereviews
https://golang.org/cl/52960043"
alandonovan,2014-01-16 03:55:52,https://api.github.com/repos/golang/tools/git/commits/d20cbc12f1322f4cd71aa9b9d8c6291f27d4b525,d20cbc12f1322f4cd71aa9b9d8c6291f27d4b525,"go.tools/oracle: eliminate reliance on undefined map iteration order.

(Unmasked by recent randomization of small (<8) map iteration.)

R=gri, crawshaw, bradfitz
CC=golang-codereviews
https://golang.org/cl/51170044"
alandonovan,2014-01-16 02:37:55,https://api.github.com/repos/golang/tools/git/commits/e8afbfad8c3cb83e36eae15ba32f6b57fb19bb75,e8afbfad8c3cb83e36eae15ba32f6b57fb19bb75,"go.tools/importer: API rethink.

The Importer type has been replaced with Config and Program.

Clients populate a Config, directly or more usually via
convenience functions.  They then call its Load() method to do
all of the typechecking and transitive-closure computation.

ssa.NewProgram and ssa.CreatePackages have been fused into
ssa.Create, which now cannot fail, since (*Config).Load()
reports all type errors.

Also:
- The addition of an ssa.GlobalDebug builder mode flag
  eliminates a loop-over-packages repeated in many clients.
- PackageInfo.Err flag unexported.  Clients never see bad infos now.
- cmd/ssadump: now only looks for func ""main"" in package ""main"".
- importsOf deleted, was dead code.

STILL TODO:
- ParseFile seems like API creep (though it's convenient)
  and CreateFromFiles is dangerous (w.r.t. FileSet identity).
  Need to think more...
- the need for clients to rely on elementwise correspondence
  of Config.CreatePkgs and Program.Created is a little sad.
- The command-line interface has not changed.
  That will happen in a follow-up.
  r recommends using a repeated flag: -package p -package q ...

R=gri
CC=axwalk, frederik.zipp, golang-codereviews
https://golang.org/cl/49530047"
griesemer,2014-01-16 00:25:40,https://api.github.com/repos/golang/tools/git/commits/d71b7746ee2671dd8d74ff3a5f80266c19b94fcd,d71b7746ee2671dd8d74ff3a5f80266c19b94fcd,"go.tools/oracle: disable broken test (fix build)

R=adonovan
TBR=adonovan
CC=golang-codereviews
https://golang.org/cl/52920043"
griesemer,2014-01-16 00:16:49,https://api.github.com/repos/golang/tools/git/commits/981e35990fede700ff70b2a476447eba6a745489,981e35990fede700ff70b2a476447eba6a745489,"go.tools/ssa/interp: fix init order test (partial build fix)

R=adonovan
TBR=adonovan
CC=golang-codereviews
https://golang.org/cl/52600044"
griesemer,2014-01-15 23:15:32,https://api.github.com/repos/golang/tools/git/commits/e1c6a8ff956551dd3fc8f8f4fe77b18dee3a37c8,e1c6a8ff956551dd3fc8f8f4fe77b18dee3a37c8,"go.tools/go/types: init order depends on source order

Apply sorting consistently to object->decl maps.

Fixes golang/go#7131.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/52890043"
alandonovan,2014-01-15 18:51:50,https://api.github.com/repos/golang/tools/git/commits/b75a5a4b65fb33a19a7327b9c4e22777a684b004,b75a5a4b65fb33a19a7327b9c4e22777a684b004,"go.tools/ssa: skip redundant identifier qualification in package dump.

(Reduces ssadump -build=P verbosity by 25%.)

R=gri
CC=golang-codereviews
https://golang.org/cl/52730044"
alandonovan,2014-01-15 18:50:11,https://api.github.com/repos/golang/tools/git/commits/8dabab4124f79bf45cec40d446f90a4244c596fd,8dabab4124f79bf45cec40d446f90a4244c596fd,"go.tools/ssa/interp: remove irrelevent parts of test, improve comments.

(Discovered during diagnosis of bug 7131.)

R=gri
CC=golang-codereviews
https://golang.org/cl/52780043"
griesemer,2014-01-15 05:04:35,https://api.github.com/repos/golang/tools/git/commits/5d7773006a2cc1e72a37b13996b018566aab0cf8,5d7773006a2cc1e72a37b13996b018566aab0cf8,"go.tools/go/types: minor cleanups

- remove TODO in exact.go
- use testing.Verbose() rather than local verbose flag

R=adonovan
CC=golang-codereviews
https://golang.org/cl/52500043"
alandonovan,2014-01-15 02:47:31,https://api.github.com/repos/golang/tools/git/commits/39fe7e6f8e9fb9af5456e861018963eb1f38a6c6,39fe7e6f8e9fb9af5456e861018963eb1f38a6c6,"go.tools/ssa/interp: fix windows build.

- Add missing import.
- platform-specific files syswrite() wrapper presents
  standard API to syscall.Write, even on Windows where
  first arg is a Handle.

Fixes golang/go#7100

R=gri, minux.ma, alex.brainman
CC=golang-codereviews
https://golang.org/cl/52250043"
pcc,2014-01-14 22:47:27,https://api.github.com/repos/golang/tools/git/commits/a0cc29953e041c650eca9ecb09cfc72ce503c4ce,a0cc29953e041c650eca9ecb09cfc72ce503c4ce,"go.tools/go/types: introduce Func.Scope()

The goal is to allow clients to distinguish function-local objects
from package-local objects and identify the specific function by
examining its scope. For example, a compiler may need to mangle
object names according to the outer function name.

R=gri
CC=golang-codereviews, golang-dev
https://golang.org/cl/52280043"
pcc,2014-01-14 22:10:09,https://api.github.com/repos/golang/tools/git/commits/0c15485ecc3328f2060daac605395675bab9990f,0c15485ecc3328f2060daac605395675bab9990f,"go.tools/go/types: use WordSize as function pointer size

Both gc and gccgo appear to use this size, so it seems appropriate
to use it here.

R=gri
CC=golang-codereviews, golang-dev, iant, rsc
https://golang.org/cl/52290043"
alandonovan,2014-01-13 21:45:46,https://api.github.com/repos/golang/tools/git/commits/f3eb05bcef52fc7c4bd040f5368956926e9083e9,f3eb05bcef52fc7c4bd040f5368956926e9083e9,"go.tools/ssa: eliminate (non-nil) slice constants.

go/types no longer reports a constant value for a slice,
e.g. []byte(""foo"").

ssa.Const no longer support slice constants, only
bool/string/numeric and nil.

emitConv emits a Convert instruction for string->[]byte
conversions.

Added regression test for bug 6949.

R=gri
CC=golang-codereviews
https://golang.org/cl/50590043"
griesemer,2014-01-11 00:05:14,https://api.github.com/repos/golang/tools/git/commits/29ac1365f478a19335c47311dbb33a612133fecd,29ac1365f478a19335c47311dbb33a612133fecd,"go.tools/oracle: adjust golden output to new names

R=adonovan
TBR=adonovan
CC=golang-codereviews
https://golang.org/cl/49530049"
griesemer,2014-01-10 23:21:51,https://api.github.com/repos/golang/tools/git/commits/179e0b3699b2ee0615122609962e8e0787f6ea88,179e0b3699b2ee0615122609962e8e0787f6ea88,"go.tools/go/types: only report constants with constant types

The issue is addressed with the change in conversions.go.

Also:
- added corresponding API test
- made names for untyped ints, bools consistent with others
- use *Basic with names byte/rune instead of uint8/int32 for better output
- minor cleanups

Fixes golang/go#6949.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/50520043"
alandonovan,2014-01-10 22:10:12,https://api.github.com/repos/golang/tools/git/commits/d2fe54b33cbfcacb9e563015bc3469455aaf9e87,d2fe54b33cbfcacb9e563015bc3469455aaf9e87,"go.tools/ssa: fix bug: lifting pass invalidated Referrers info for DebugRef's X operand.

Tested: by enabling debug info globally in stdlib_test,
the existing sanity checks catch it.

R=gri
CC=golang-codereviews
https://golang.org/cl/50570043"
alandonovan,2014-01-09 19:11:54,https://api.github.com/repos/golang/tools/git/commits/3d82e7e94aea934d599326287f45bf5bf26868d7,3d82e7e94aea934d599326287f45bf5bf26868d7,"go.tools/ssa: fix crash in SSA builder when using GCImporter to satisfy imports (ssadump -build=G).

Packages were not being created for all types.Packages,
specifically, indirectly imported packages were missing.
(*Program).CreatePackages now iterates over the type-checker's
package map too.

Also: removed all concurrency from importer.  I think it was
incorrect (and hard to fix).

Also: change LoadInitialPackages so that all named packages
are loaded from source.  This happens regardless of whether
GCImporter is used to satisfy imports.

Details:
- importer.Config.SourceImports flag determines whether to
  load all packages from *.go source.
  (Before, this was indicated by Config.Build != nil.)
- importer.Config.Build field effectively defaults to
  &go/build.Default.  A zero importer.Config is now usable.
- importer.Importer.Config field is now exported.
- LoadPackage renamed to ImportPackage since the resulting
  packages may come from GCImporter (and be incomplete).
- doImport and ImportPackage fused.

Fixes golang/go#7028

R=gri, axwalk
CC=golang-codereviews
https://golang.org/cl/48770043"
griesemer,2014-01-09 18:45:42,https://api.github.com/repos/golang/tools/git/commits/df3357d07f16778acb02a9c183cb6b94639a010c,df3357d07f16778acb02a9c183cb6b94639a010c,"go.tools/go/types: simplify variable usage error detection

Now that inner functions are processed ""in line"", usage errors
can be detected immediately after each function is processed.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/49900044"
griesemer,2014-01-09 16:40:32,https://api.github.com/repos/golang/tools/git/commits/4e620158a20b8f8d69d1fdaa9da4ec21de677fed,4e620158a20b8f8d69d1fdaa9da4ec21de677fed,"go.tools/go/types: use correct outer scope state for inner functions

Inner function bodies must be type-checked ""in-place"" for
them to see the correct state of the surrounding scopes.

Fixes golang/go#7035.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/49350043"
pcc,2014-01-08 23:25:17,https://api.github.com/repos/golang/tools/git/commits/d0b88d22069443bdde878336655982e9c012fa6b,d0b88d22069443bdde878336655982e9c012fa6b,"cmd/gotype: add -gccgo flag

R=gri
CC=golang-codereviews, golang-dev
https://golang.org/cl/39050043"
alandonovan,2014-01-08 19:50:52,https://api.github.com/repos/golang/tools/git/commits/18b807c7ac460b90db5bcb942f64d3ebe676fe63,18b807c7ac460b90db5bcb942f64d3ebe676fe63,"go.tools/ssa: doc: Builtin is not an Instruction.

Fixes golang/go#7026.

R=gri
CC=golang-codereviews
https://golang.org/cl/48630045"
alandonovan,2014-01-08 19:46:17,https://api.github.com/repos/golang/tools/git/commits/5612f0615f30202fbde765ffd2175fb67190ab1a,5612f0615f30202fbde765ffd2175fb67190ab1a,"go.tools/ssa: use correct word size for GOARCH during type checking, interpretation.

Also report an error for ""cross-interpretation"": not supported
due to the interpreter's assumption that host and target
{int,uint,uintptr} are the same.  (Too tedious and messy to fix.)

Tested manually:

% cat d.go
package main
const m = ^uintptr(0)
const w = m>>8&1 + m>>16&1 + m>>32&1
func main() { println(m, w) }

% ./ssadump -build=P -run d.go
package main:
  const m          m = 18446744073709551615:uintptr
  const w          w = 3:uintptr
18446744073709551615 3

% GOARCH=386 ./ssadump -build=P -run d.go
package main:
  const m          m = 4294967295:uintptr
  const w          w = 2:uintptr
Error: Cross-interpretation is not yet supported (target has GOARCH 386, interpreter has amd64).

Fixes golang/go#7080

R=gri
CC=golang-codereviews
https://golang.org/cl/49070043"
pcc,2014-01-08 17:00:50,https://api.github.com/repos/golang/tools/git/commits/893253274d26c3356bd9f7e2a317d7a2086a8940,893253274d26c3356bd9f7e2a317d7a2086a8940,"go.tools/go/gccgoimporter: importer for gccgo export data

This can import all of the standard library, and has been tested
by using gotype to type check libgo with gccgo's export data (this
would be nice to automate, but I can't see a good way to do it,
not least because system-specific source files cause errors which
I needed to identify manually).

It includes a builtin export locator. Unfortunately I can't see a
more reliable way to locate the builtin export files than to parse
the output of 'gccgo -###'.

R=gri, iant, gri
CC=golang-codereviews, golang-dev
https://golang.org/cl/31860043"
griesemer,2014-01-08 16:58:00,https://api.github.com/repos/golang/tools/git/commits/a9b6519df86872474695ef87745ab604a748d4e9,a9b6519df86872474695ef87745ab604a748d4e9,"go.tools/go.types: cleanups

- if a named type was imported before, read it again
  and throw it away in favor of the existing type
  (the old code did the same, but more circuitously)

- better tag name for int64 values

R=adonovan
CC=golang-codereviews
https://golang.org/cl/47650044"
griesemer,2014-01-07 22:46:10,https://api.github.com/repos/golang/tools/git/commits/ff72a95f0517241ef5e2f67ed273cceb8383fc8c,ff72a95f0517241ef5e2f67ed273cceb8383fc8c,"go.tools/go/gcimporter: correct package for imported methods

R=adonovan
CC=golang-codereviews
https://golang.org/cl/48630044"
alandonovan,2014-01-07 18:31:05,https://api.github.com/repos/golang/tools/git/commits/d6eb8982f6e4ae9e753fa0b0217fea12c94f7e8e,d6eb8982f6e4ae9e753fa0b0217fea12c94f7e8e,"go.tools/ssa: two fixes to CallCommon.

(*CallCommon).Signature() now returns non-nil even for
built-ins.  Builtins are now created with specialized types for
each use.  Added sanity-check.

CallCommon.HasEllipsis field eliminated.  It was an incorrect
memoization of Signature().IsVariadic() used only for
printing.

Also: introduce and use newTypeVar utility.

R=gri
CC=golang-codereviews
https://golang.org/cl/46880044"
griesemer,2014-01-07 18:03:15,https://api.github.com/repos/golang/tools/git/commits/b6eef48120953c8b90400974e90255c64dace0f2,b6eef48120953c8b90400974e90255c64dace0f2,"go.tools/go/types: adjust comments for godoc

R=adonovan
CC=golang-codereviews
https://golang.org/cl/38560045"
campoy,2014-01-03 22:51:34,https://api.github.com/repos/golang/tools/git/commits/5f5d42a466833e78bfb2b70286e1e1a3c1fd613d,5f5d42a466833e78bfb2b70286e1e1a3c1fd613d,"go.tools/present: links with the prefix ""javascript:"" should be executed in the same window.

Using url.Parse instead of more ad hoc solution.

R=r
CC=golang-codereviews
https://golang.org/cl/47320043"
griesemer,2014-01-03 22:08:12,https://api.github.com/repos/golang/tools/git/commits/822669c6580f4faf6dd88de3ec437744e6276093,822669c6580f4faf6dd88de3ec437744e6276093,"go.tools/importer: fix field package for anonymous fields

Anonymous field names are emitted as """" in the export data
since the actual name can be reconstructed easily from the
field's type name. But """" names are not exported names and
thus the respective qualified name emits complete package
information even if the actual field name is exported. Fix
the package upon import.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/42090044"
griesemer,2014-01-03 19:37:20,https://api.github.com/repos/golang/tools/git/commits/df08273253c094c25d93d75f475593b940e5823f,df08273253c094c25d93d75f475593b940e5823f,"go.tools/gcimporter: use imported package info for anonymous fields

The package of a struct field is independent of the type of the
struct field - the old code was technically not correct. That said,
it does not seem possible (or very difficult) to create a test case
because for exported anonymous fields that field package doesn't matter
(it's not needed for name identity), and non-exported anonymous fields
cannot be accessed from an imported package.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/47560043"
griesemer,2014-01-03 17:12:32,https://api.github.com/repos/golang/tools/git/commits/6770b5cdca06dba0636252221ed77a8125dabec2,6770b5cdca06dba0636252221ed77a8125dabec2,"go.tools/go/importer: more cleanups

R=adonovan
CC=golang-codereviews
https://golang.org/cl/34660046"
campoy,2014-01-03 00:03:56,https://api.github.com/repos/golang/tools/git/commits/53273c1d55522b6b9c909ddff15be5dc56fc0999,53273c1d55522b6b9c909ddff15be5dc56fc0999,"go.tools: Expose filename rather than extension only, needed for new tour.

R=adg, r
CC=golang-codereviews
https://golang.org/cl/43470050"
alandonovan,2014-01-02 20:12:23,https://api.github.com/repos/golang/tools/git/commits/8c66e887f74654dd29d68e0f173ce1b157e04ba5,8c66e887f74654dd29d68e0f173ce1b157e04ba5,"go.tools/ssa: a blocking select's implicit ""default"" case should runtime-panic, not fall through.

Although such a control-flow path is impossible by
construction, we must avoid no-arg returns (even if
unreachable) in non-void functions.

Tested by adding a sanity-check that ssa.Return has the correct arity.
Also: added ssautil.Switches() test.

Fixes golang/go#7702

R=gri, axwalk
CC=golang-codereviews
https://golang.org/cl/46520043"
griesemer,2014-01-02 18:07:48,https://api.github.com/repos/golang/tools/git/commits/10f0067eb1394491fe079dd2df6cab2a7039219b,10f0067eb1394491fe079dd2df6cab2a7039219b,"go.tools/go.types: cleanups

Per feedback for CL 37250044.

R=adonovan
CC=golang-codereviews
https://golang.org/cl/47150043"
campoy,2013-12-29 05:10:40,https://api.github.com/repos/golang/tools/git/commits/3d2d158b9d69bbd99755db3343ed863a00516f4d,3d2d158b9d69bbd99755db3343ed863a00516f4d,"go.tools/present: Open links with local (non absolute) URLs in the same window.

This allows having links from one slide to another one in the same presentation.
Also it is needed in the new tour to cross reference lessons.

R=r
CC=golang-codereviews
https://golang.org/cl/46130043"
griesemer,2013-12-21 00:43:31,https://api.github.com/repos/golang/tools/git/commits/30645c4bc6178174e0d6dc57cab2ced184c8d0aa,30645c4bc6178174e0d6dc57cab2ced184c8d0aa,"go.tools/go/importer: fine-tuning of export format, test against std lib

(TBR adonovan)

- provide version string rather than version number (more flexible)
- match naming of tag constants with documentation (forth-coming)
- more formats for constant values (1-byte booleans, short 64bit
  values, support for floating point numbers +123p+45)
- more regular format for signatures: always print with type tag;
  this permits (future) sharing of identical signatures and possibly
  large export data size reduction
- test export and import of all type-checked std library packages
- compare import of all std library packages against corresponding
  import of gc-generated export data and verify that the packages
  match 100% (except for floating point values which are exact when
  coming from go/types, and possibly inexact when coming from gc)

On average, export data generated by the importer is ~28% of the size
of the gc-generated export data for corresponding packages of the std
library:

        package 		size	gc size

        archive/tar		2945	12030	24%
        archive/zip		4122	15796	26%
        bufio			1776	6171	28%
        bytes			2540	8006	31%
        compress/bzip2		146	419	34%
        compress/flate		2305	6356	36%
        compress/gzip		4262	17917	23%
        compress/lzw		336	832	40%
        compress/zlib		2503	9814	25%
        container/heap		255	527	48%
        container/list		653	2971	21%
        container/ring		246	707	34%
        crypto			368	1015	36%
        crypto/aes		219	499	43%
        crypto/cipher		809	1875	43%
        crypto/des		254	636	39%
        crypto/dsa		3324	15609	21%
        crypto/ecdsa		3833	18567	20%
        crypto/elliptic		3801	17417	21%
        crypto/hmac		205	459	44%
        crypto/md5		206	413	49%
        crypto/rand		3070	15047	20%
        crypto/rc4		180	443	40%
        crypto/rsa		4205	17941	23%
        crypto/sha1		208	414	50%
        crypto/sha256		272	555	49%
        crypto/sha512		274	555	49%
        crypto/subtle		247	1157	21%
        crypto/tls		13769	48330	28%
        crypto/x509		10716	40556	26%
        crypto/x509/pkix	5670	24616	23%
        database/sql		4227	15957	26%
        database/sql/driver	1239	2806	44%
        debug/dwarf		5165	12066	42%
        debug/elf		14205	36401	39%
        debug/goobj		992	2495	39%
        debug/gosym		1808	4798	37%
        debug/macho		4560	13173	34%
        debug/pe		3694	10530	35%
        encoding		261	387	67%
        encoding/ascii85	368	1541	23%
        encoding/asn1		479	1661	28%
        encoding/base32		608	2636	23%
        encoding/base64		610	2636	23%
        encoding/binary		1006	3591	28%
        encoding/csv		2287	8405	27%
        encoding/gob		9161	30565	29%
        encoding/hex		384	1331	28%
        encoding/json		6564	23334	28%
        encoding/pem		208	529	39%
        encoding/xml		7964	27220	29%
        errors			52	277	18%
        expvar			955	2978	32%
        flag			2475	18028	13%
        fmt			1141	3141	36%
        go/ast			11595	41019	28%
        go/build		3736	13920	26%
        go/doc			2647	9523	27%
        go/format		1310	5010	26%
        go/parser		4346	18525	23%
        go/printer		1737	6442	26%
        go/scanner		2360	8598	27%
        go/token		2290	7599	30%
        hash			215	595	36%
        hash/adler32		217	391	55%
        hash/crc32		399	1475	27%
        hash/crc64		324	1327	24%
        hash/fnv		338	3964	8%
        html			80	253	31%
        html/template		7981	37471	21%
        image			4270	18894	22%
        image/color		845	3154	26%
        image/color/palette	121	319	37%
        image/draw		947	4807	19%
        image/gif		1468	6611	22%
        image/jpeg		971	4534	21%
        image/png		880	4432	19%
        index/suffixarray	3702	13960	26%
        io			2049	6117	33%
        io/ioutil		2845	12060	23%
        log			2416	10241	23%
        log/syslog		3102	12208	25%
        math			2361	6008	39%
        math/big		3648	12250	29%
        math/cmplx		473	1542	30%
        math/rand		786	2002	39%
        mime			180	595	30%
        mime/multipart		2761	9338	29%
        net			10593	34352	30%
        net/http		24542	84065	29%
        net/http/cgi		12859	50970	25%
        net/http/cookiejar	2845	12429	22%
        net/http/fcgi		12331	49111	25%
        net/http/httptest	18953	75243	25%
        net/http/httputil	13994	54386	25%
        net/http/pprof		12153	49039	24%
        net/mail		1803	8599	20%
        net/rpc			18503	69044	26%
        net/rpc/jsonrpc		1063	2737	38%
        net/smtp		11775	46821	25%
        net/textproto		2684	8678	30%
        net/url			767	2886	26%
        os			5712	20293	28%
        os/exec			4705	18350	25%
        os/signal		125	330	37%
        os/user			234	720	32%
        path			231	770	30%
        path/filepath		2236	9721	23%
        reflect			4518	13467	33%
        regexp			3608	11167	32%
        regexp/syntax		2184	5157	42%
        runtime			1563	3407	45%
        runtime/cgo		36	66	54%
        runtime/debug		1714	8010	21%
        runtime/pprof		485	1358	35%
        runtime/race		38	43	88%
        sort			748	2658	28%
        strconv			949	2573	36%
        strings			1846	6220	29%
        sync			712	1970	36%
        sync/atomic		1089	2506	43%
        syscall			38975	79396	49%
        testing			3734	13626	27%
        testing/iotest		332	2378	13%
        testing/quick		4411	16434	26%
        text/scanner		1821	5349	34%
        text/tabwriter		1593	4937	32%
        text/template		6882	33329	20%
        text/template/parse	3946	12760	30%
        time			3031	9703	31%
        unicode			3148	8676	36%
        unicode/utf16		163	760	21%
        unicode/utf8		475	1122	42%

        total			463641	1644936	28%

R=adonovan
TBR=adonovan
CC=golang-codereviews
https://golang.org/cl/37250044"
griesemer,2013-12-21 00:35:31,https://api.github.com/repos/golang/tools/git/commits/e405e03b161146d1858ff1e428a93601a75a1ddd,e405e03b161146d1858ff1e428a93601a75a1ddd,"go.tools/go/types: complete set of Interface accessors

Also: Provide GcCompatibilityMode for printing types
(intended for testing with gc-generated export data
only).

(TBR adonovan)

R=adonovan
TBR=adonovan
CC=golang-codereviews
https://golang.org/cl/44780043"
robpike,2013-12-21 00:28:57,https://api.github.com/repos/golang/tools/git/commits/8f712fcb9883ec222e7d806f1266a7e437ea59fd,8f712fcb9883ec222e7d806f1266a7e437ea59fd,".hgignore: add comment setting policy

R=golang-codereviews, iant
CC=golang-codereviews
https://golang.org/cl/44840044"
griesemer,2013-12-20 23:51:04,https://api.github.com/repos/golang/tools/git/commits/e2acb64f867549da38175326da1e5b07c132d99e,e2acb64f867549da38175326da1e5b07c132d99e,"go.tools/go/types: submit missed file (fix build)

R=adonovan
CC=golang-codereviews
https://golang.org/cl/38130044"
ality,2013-12-20 23:20:51,https://api.github.com/repos/golang/tools/git/commits/a1406b40c5d2f4b3470cd7e9f16a5cb84cd3c699,a1406b40c5d2f4b3470cd7e9f16a5cb84cd3c699,"go.tools/ssa/interp: fix Plan 9 build for Brad

R=golang-codereviews, rsc, 0intro
CC=golang-codereviews
https://golang.org/cl/26500043"
griesemer,2013-12-20 23:17:16,https://api.github.com/repos/golang/tools/git/commits/d4da60d38fd7bdc2350677085b6973aae7385d70,d4da60d38fd7bdc2350677085b6973aae7385d70,"go.tools/gc/importer: fix struct tags and parameter names

R=iant
CC=golang-codereviews
https://golang.org/cl/42280046"
rsc,2013-12-20 15:54:33,https://api.github.com/repos/golang/tools/git/commits/87ccd3155a4f011494431c61deeb5a81c7d70d3c,87ccd3155a4f011494431c61deeb5a81c7d70d3c,"codereview: switch defaultcc to golang-codereviews

See this thread for background:
https://groups.google.com/forum/#!topic/golang-dev/xG7vPi21r8g

R=golang-codereviews, r
CC=golang-codereviews
https://golang.org/cl/41500044"
adg,2013-12-19 22:26:26,https://api.github.com/repos/golang/tools/git/commits/efcc5ffb587f58f9f08808b107a1395d7da08169,efcc5ffb587f58f9f08808b107a1395d7da08169,"go.tools/cmd/goimports: rename README to doc.go

README is a GitHub thing. Let's do the godoc thing.

R=golang-dev, crawshaw
CC=golang-dev
https://golang.org/cl/44030046"
robpike,2013-12-19 00:06:56,https://api.github.com/repos/golang/tools/git/commits/bae6bf618049d556b72f4f03a4f240d85d6c1000,bae6bf618049d556b72f4f03a4f240d85d6c1000,"go.tools/cmd/vet: improve error message for build tag problems
Fixes golang/go#6979.

R=golang-dev, dave, iant
CC=golang-dev
https://golang.org/cl/37720048"
griesemer,2013-12-18 19:49:45,https://api.github.com/repos/golang/tools/git/commits/00fab17bd20a790ff8e60f9e10cf2ebb0a16819b,00fab17bd20a790ff8e60f9e10cf2ebb0a16819b,"go.tools/ssa/interp: fix build (add missing runtime function)

Introduced by CL 41860043.

R=adonovan
TBR=adonovan
CC=golang-dev
https://golang.org/cl/42950044"
griesemer,2013-12-18 18:53:59,https://api.github.com/repos/golang/tools/git/commits/4e3127283a86b0f12bb86e6939f0ad34cd93b1d0,4e3127283a86b0f12bb86e6939f0ad34cd93b1d0,"go.tools/go/gcimporter: adjust for new .a file format

R=rsc, r
CC=golang-dev
https://golang.org/cl/41510044"
bradfitz,2013-12-18 17:09:37,https://api.github.com/repos/golang/tools/git/commits/b6e674b8e7fc09f9a2c73ebe49de48ed89b5834f,b6e674b8e7fc09f9a2c73ebe49de48ed89b5834f,"go.tools/imports: fix fileset mismatch bug

Fixes golang/go#6884

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/43890043"
crawshaw,2013-12-18 11:44:50,https://api.github.com/repos/golang/tools/git/commits/64c6d0410bcc49becc22531dc0ce1731af43c2ee,64c6d0410bcc49becc22531dc0ce1731af43c2ee,"go.tools/imports: fix test broken in b33d2e25015b6793aac4f9dcef3d8a8d1c9243b3

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/41950048"
crawshaw,2013-12-18 02:21:03,https://api.github.com/repos/golang/tools/git/commits/c87866116c5004382833e51aa08d938a6f6ff120,c87866116c5004382833e51aa08d938a6f6ff120,"go.tools/imports: move goimports from github to go.tools.

From revision d0880223588919729793727c9d65f202a73cda77.

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/35850048"
griesemer,2013-12-18 00:21:23,https://api.github.com/repos/golang/tools/git/commits/53dfbf8a00a35aa423f19e2d42a68160f48e37af,53dfbf8a00a35aa423f19e2d42a68160f48e37af,"go.tools: fix build

Missed a couple of places with previous CL.

R=adonovan
TBR=adonovan
CC=golang-dev
https://golang.org/cl/40850046"
griesemer,2013-12-17 23:45:01,https://api.github.com/repos/golang/tools/git/commits/74d33a9c3385a4cff77edbcf3240acebb291eb9f,74d33a9c3385a4cff77edbcf3240acebb291eb9f,"go.tools/go/types: use types.ChanDir instead of ast.ChanDir

Clearer code and fewer dependencies on go/ast.

R=adonovan
CC=golang-dev
https://golang.org/cl/43630043"
adg,2013-12-17 22:32:51,https://api.github.com/repos/golang/tools/git/commits/1de4f6df60c54f0888489ae625b1c836b1fb35af,1de4f6df60c54f0888489ae625b1c836b1fb35af,"go.tools/godoc/static: add 'fmtImportEl' option to playground

The 'fmtImportEl' option lets the called specify a checkbox element
that determines whether to send the 'imports=true' key/value pair when
calling '/fmt'.

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/43240043"
dvyukov,2013-12-17 08:14:27,https://api.github.com/repos/golang/tools/git/commits/676ac131e1f26caf2419d35e14d4cf63811d6544,676ac131e1f26caf2419d35e14d4cf63811d6544,"dashboard/app: properly limit commit description length
Ensure that we do not split UTF-8 rune in half.
Otherwise appengine python scripts will break badly.

R=adg, r
CC=golang-dev
https://golang.org/cl/42530043"
paranoiacblack,2013-12-16 22:50:22,https://api.github.com/repos/golang/tools/git/commits/9e3292f107ad370dc80fbf54ae0ac7a598be11ab,9e3292f107ad370dc80fbf54ae0ac7a598be11ab,"go.tools/dashboard: Turn off multilib compilation in gccgo.

R=adg
CC=golang-dev
https://golang.org/cl/43020043"
paranoiacblack,2013-12-16 22:50:09,https://api.github.com/repos/golang/tools/git/commits/2cbda9de6165d8f96b48d82b81d692cee3333fbd,2cbda9de6165d8f96b48d82b81d692cee3333fbd,"go.tools/dashboard: Fix incorrect parsing of log hash.

R=adg
CC=golang-dev
https://golang.org/cl/43000043"
griesemer,2013-12-16 22:44:22,https://api.github.com/repos/golang/tools/git/commits/a02c76070bda6c914eeac9d2badf989e88f118ae,a02c76070bda6c914eeac9d2badf989e88f118ae,"go/importer: fix build (disable tests that won't run on builders)

R=adonovan
TBR=adonovan
CC=golang-dev
https://golang.org/cl/43010043"
bradfitz,2013-12-16 22:43:29,https://api.github.com/repos/golang/tools/git/commits/ae534bcb6ccdd13487d0491c2194d10ebcd30ff3,ae534bcb6ccdd13487d0491c2194d10ebcd30ff3,"astutil: fix a comment corruption case

This fixes a case where adding an import when there are is no
existing import declaration can corrupt the position of
comments attached to types. This was the last known
goimports/astutil corruption case.

See golang.org/issue/6884 for more details.

Unfortunately this requires changing the API to add a
*token.FileSet, which we should've had before.  I will update
goimports (the only user of this API?) immediately after
submitting this.

This CL also contains a hack (used only in this case of no
imports): rather than fix the comment positions by hand
(something that only Robert might know how to do), it instead
just prints the AST, manipulates the source, and re-parses
the AST. We can fix up later.

Fixes golang/go#6884

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/38270043"
griesemer,2013-12-16 22:28:17,https://api.github.com/repos/golang/tools/git/commits/5eb4fdc120bc3f9d692e66f981fd857e5f9079ff,5eb4fdc120bc3f9d692e66f981fd857e5f9079ff,"go.tools/go/importer: simplified exporter/importer

By using a simple (graph-based) serialization algorithm
and binary encoding, a significantly more compact export
data format is achieved than what the current compilers
use. Furthermore, the exporter and importer are completely
symmetric algorithms that are compact, and much easier to
change/expand.

R=adonovan
CC=golang-dev
https://golang.org/cl/42960043"
griesemer,2013-12-16 21:53:08,https://api.github.com/repos/golang/tools/git/commits/91abc02562e2fa39f5e88a7bb879e0237666c370,91abc02562e2fa39f5e88a7bb879e0237666c370,"go.tools/go/types: print interface methods in sorted order

Required for testing code of clients.

R=adonovan
CC=golang-dev
https://golang.org/cl/35940049"
bradfitz,2013-12-16 19:25:50,https://api.github.com/repos/golang/tools/git/commits/59db9754095662b2d2bd6fe9dbf4e9d494424f0f,59db9754095662b2d2bd6fe9dbf4e9d494424f0f,"godoc: limit concurrency to local disk filesystem

Not for Go 1.2.  Still needs a flag.

Linux at least (and likely other OSes) don't like you doing
a few hundred readdirs at once and spawing as many threads.

R=golang-dev, adg, jeremyjackins
CC=golang-dev
https://golang.org/cl/30620043"
mewmew,2013-12-16 15:05:40,https://api.github.com/repos/golang/tools/git/commits/01caf7ba7e265df79228f7b38adb5d1c71df5952,01caf7ba7e265df79228f7b38adb5d1c71df5952,"ssa: Update the location of the ssadump command in an example comment.

R=golang-dev, adonovan
CC=golang-dev
https://golang.org/cl/42420043"
alandonovan,2013-12-13 23:00:55,https://api.github.com/repos/golang/tools/git/commits/8b9d1fd507bffa8640ccac1114b07df6301b50f5,8b9d1fd507bffa8640ccac1114b07df6301b50f5,"go.tools/oracle: implements: now shows whole-program implements relation for selected type.

(Previously it showed the implements relation for all types within the query package.)

R=crawshaw
CC=golang-dev
https://golang.org/cl/42000043"
alandonovan,2013-12-13 15:04:55,https://api.github.com/repos/golang/tools/git/commits/f1198742036d0b391747b1120333d65fd0771a7d,f1198742036d0b391747b1120333d65fd0771a7d,"go.tools/oracle: improvements to command set and performance.

Command set:
- what: an extremely fast query that parses a single
  file and returns the AST stack, package name and the
  set of query modes that apply to the current selection.
  Intended for GUI tools that need to grey out UI elements.
- definition: shows the definition of an identifier.
- pointsto: the PTA features of 'describe' have been split
  out into their own command.
- describe: with PTA stripped out, the cost is now bounded by
  type checking.

Performance:
- The importer.Config.TypeCheckFuncBodies predicate supports
  setting the 'IgnoreFuncBodies' typechecker flag on a
  per-package basis.  This means we can load dependencies from
  source more quickly if we only need exported types.
  (We avoid gcimport data because it may be absent or stale.)
  This also means we can run type-based queries on packages
  that aren't part of the pointer analysis scope. (Yay.)
- Modes that require only type analysis of the query package
  run a ""what"" query first, and restrict their analysis scope
  to just that package and its dependencies (sans func
  bodies), making them much faster.
- We call newOracle not oracle.New in Query, so that the
  'needs' bitset isn't ignored (oops!).  This makes the
  non-PTA queries faster.

Also:
- removed vestigial timers junk.
- pos.go: existing position utilties split out into own file.
  Added parsePosFlag utility.
- numerous cosmetic tweaks.

+ very basic tests.

To do in follow-ups:
- sophisticated editor integration of ""what"".
- better tests.
- refactoring of control flow as described in comment.
- changes to ""implements"", ""describe"" commands.
- update design doc + user manual.

R=crawshaw, dominik.honnef
CC=golang-dev, gri
https://golang.org/cl/40630043"
griesemer,2013-12-12 22:18:40,https://api.github.com/repos/golang/tools/git/commits/3df3227c35bdc3fa246808788e6c3870d08ef1a1,3df3227c35bdc3fa246808788e6c3870d08ef1a1,"go.tools/go/exact: fix bug introduced with CL 41170043

R=adonovan
CC=golang-dev
https://golang.org/cl/37820052"
griesemer,2013-12-12 21:43:00,https://api.github.com/repos/golang/tools/git/commits/e2828468ff0735988ffa1fbc8024707cd5abf91a,e2828468ff0735988ffa1fbc8024707cd5abf91a,"go.tools/go/exact: serialization support and better unknown handling

- fixed various imprecise doc strings
- consistent handling of unknown values

R=adonovan
CC=golang-dev
https://golang.org/cl/41170043"
griesemer,2013-12-12 21:32:36,https://api.github.com/repos/golang/tools/git/commits/4728c2f3f6053df119a8154d8c28fb361d82fcce,4728c2f3f6053df119a8154d8c28fb361d82fcce,"go.tools/go/types: turn off internal debug mode

- much improved performance
- enable when testing changes

R=adonovan
CC=golang-dev
https://golang.org/cl/36480049"
griesemer,2013-12-12 20:12:32,https://api.github.com/repos/golang/tools/git/commits/693727787e96104b48c806e0242c9a6367a4a9c3,693727787e96104b48c806e0242c9a6367a4a9c3,"go.tools/go/types/typemap: fix formatting verb

(%p is trouble if the interface value is not a pointer)

R=adonovan
CC=golang-dev
https://golang.org/cl/41440043"
alandonovan,2013-12-12 02:12:08,https://api.github.com/repos/golang/tools/git/commits/036b7d3489ead40684bfe8f08b50208b8286c132,036b7d3489ead40684bfe8f08b50208b8286c132,"go.tools/types: skip ""imported but not used"" check if IgnoreFuncBodies.

Obviously in that mode, we can't correctly diagnose such
errors, so we shouldn't attempt it (and emit false positives).

R=gri
CC=golang-dev
https://golang.org/cl/41080043"
griesemer,2013-12-11 18:48:17,https://api.github.com/repos/golang/tools/git/commits/11cfd4a636c30e4163f920daf73313be38f400cf,11cfd4a636c30e4163f920daf73313be38f400cf,"go.toools/go/types: clearer comment (per adonovan)

R=adonovan
CC=golang-dev
https://golang.org/cl/40860045"
alandonovan,2013-12-10 15:16:35,https://api.github.com/repos/golang/tools/git/commits/26d5173f5ed96df14ecdeb75b7cd723e6245246b,26d5173f5ed96df14ecdeb75b7cd723e6245246b,"go.tools/oracle: ""callees"": skip pointer analysis at static call sites.

This improves both performance (most calls are static) and
precision (e.g. for static calls in dead code).

Also, break callees() function into smaller ones.

R=crawshaw
CC=golang-dev
https://golang.org/cl/38740045"
alandonovan,2013-12-10 14:15:39,https://api.github.com/repos/golang/tools/git/commits/5d70784acab792fc9d16fec34cdf2f9d1daa10a3,5d70784acab792fc9d16fec34cdf2f9d1daa10a3,"go.tools/pointer: replace Config.Print (callback) with a Result.PrintCalls (map).

This avoids leaking nodeids into client code before the
analysis has had a chance to run the (forthcoming) constraint
optimizer, which renumbers them.

R=crawshaw
CC=golang-dev
https://golang.org/cl/39410043"
adg,2013-12-10 05:43:15,https://api.github.com/repos/golang/tools/git/commits/05f8c7dc661c208b76e56643e2e18defd2d3c891,05f8c7dc661c208b76e56643e2e18defd2d3c891,"go.tools/dashboard/app: app index.yaml

This is equivalent to the previously-reviewed change to Dmitry's
performance dashboard repo clone:
https://golang.org/cl/35490043

R=golang-dev, dave
CC=golang-dev
https://golang.org/cl/39840043"
adg,2013-12-10 04:30:35,https://api.github.com/repos/golang/tools/git/commits/922f326cd730e64b189e818b4eca8f106a7c9ac4,922f326cd730e64b189e818b4eca8f106a7c9ac4,"go.tools/dashboard/app: fix tests and add TODO to reall fix them

This change is a really nasty hack to preserve the magic header
across requests. The nasty hack will go away once we refactor these
tests to use the new ""appengine/aetest"" package instead.

R=golang-dev, dvyukov
CC=golang-dev
https://golang.org/cl/39230043"
josharian,2013-12-10 04:14:28,https://api.github.com/repos/golang/tools/git/commits/866b24e16628390d6f728f23c3758a2a8f3a5e4d,866b24e16628390d6f728f23c3758a2a8f3a5e4d,"cmd/vet: check for sync types being copied during function calls

Using a type containing a sync type directly
in a function call (whether as a receiver,
a param, or a return value) is an easy way
to accidentally copy a lock or other sync primitive.
Check for it.

The test as implemented does not provide 100%
coverage; see the discussion near the bottom of
testdata/copylock.go for shortcomings.

Fixes golang/go#6729.

R=adg, r, dsymonds
CC=golang-dev
https://golang.org/cl/23420043"
griesemer,2013-12-09 23:43:31,https://api.github.com/repos/golang/tools/git/commits/d6902b2ad57f2d9af8a95e6ba269764c13d44960,d6902b2ad57f2d9af8a95e6ba269764c13d44960,"go/tools/go/gcimporter: avoid possible endless loops in case of errors

R=adonovan
CC=golang-dev
https://golang.org/cl/39630045"
pcc,2013-12-09 21:37:24,https://api.github.com/repos/golang/tools/git/commits/7dcd8ded7cc178ba4a3ed71fcd7e92b89cb7291a,7dcd8ded7cc178ba4a3ed71fcd7e92b89cb7291a,"go.tools/go/types: handle embedded interfaces in NewInterface

R=gri
CC=golang-dev
https://golang.org/cl/39040043"
alandonovan,2013-12-09 14:36:29,https://api.github.com/repos/golang/tools/git/commits/fb3d862caeee3404de8ce066ee4eeb4b7ec2955b,fb3d862caeee3404de8ce066ee4eeb4b7ec2955b,"go.tools/importer: move PathEnclosingInterval to package astutil.

R=crawshaw
CC=golang-dev
https://golang.org/cl/38650044"
adg,2013-12-09 03:33:08,https://api.github.com/repos/golang/tools/git/commits/55fb2e8e2851ee01e25023dbcfb5b5e02500e8b6,55fb2e8e2851ee01e25023dbcfb5b5e02500e8b6,"go.tools/dashboard/app: only accept commits when given master key

R=dvyukov, rsc
CC=golang-dev
https://golang.org/cl/37790044"
alandonovan,2013-12-06 17:52:04,https://api.github.com/repos/golang/tools/git/commits/6b75c15eec6c18ec73339decdeff5e772b6e0f77,6b75c15eec6c18ec73339decdeff5e772b6e0f77,"go.tools/pointer: replace Pointer, PointsToSet interfaces with their sole implementations.

(Elminate premature abstraction.)

The test probes used Pointer!=nil for the ""is pointerlike""
predicate. Now that Pointer is a struct, they check the type
of the expression, which is more accurate.  Two probes on
non-pointerlike values have beem removed.

R=crawshaw
CC=golang-dev
https://golang.org/cl/38420043"
bradfitz,2013-12-06 06:11:13,https://api.github.com/repos/golang/tools/git/commits/2d324f247c7a93056b6dd8b61046d98c6da0eb97,2d324f247c7a93056b6dd8b61046d98c6da0eb97,"astutil: in test, dump AST before and after on failure

R=golang-dev, crawshaw
CC=golang-dev
https://golang.org/cl/37740043"
alandonovan,2013-12-06 03:30:42,https://api.github.com/repos/golang/tools/git/commits/7f8168b1d406d69ff4a3fe5c6e45cd352b86fe53,7f8168b1d406d69ff4a3fe5c6e45cd352b86fe53,"go.tools/pointer: allow clients to request both pts(v) and pts(*v) in the same analysis.

Also: add (ptset).String().

R=crawshaw
CC=golang-dev
https://golang.org/cl/36800044"
alandonovan,2013-12-06 02:22:57,https://api.github.com/repos/golang/tools/git/commits/100638985b2a910cc0150ffc98577414623c355c,100638985b2a910cc0150ffc98577414623c355c,"go.tools/ssa/interp: fix bug: recovered panic without NRPs should return zero values.

+ test.

R=gri
CC=golang-dev
https://golang.org/cl/38040043"
alandonovan,2013-12-05 22:16:00,https://api.github.com/repos/golang/tools/git/commits/d063887ea04a341d3fea56146f998cc5acf29992,d063887ea04a341d3fea56146f998cc5acf29992,"go.tools/ssa: move AllFunctions to ssautil subpackage

R=gri
CC=golang-dev
https://golang.org/cl/37970043"
alandonovan,2013-12-05 22:00:17,https://api.github.com/repos/golang/tools/git/commits/d6490fa51090183f780b6ccb3e8ff1aaf0b4431c,d6490fa51090183f780b6ccb3e8ff1aaf0b4431c,"go.tools/ssa/ssautil: Switches() utility infers multiway branches.

(Note new subpackage ssa/ssautil.)

R=gri, axwalk, gri
CC=golang-dev
https://golang.org/cl/36710043"
alandonovan,2013-12-05 14:50:18,https://api.github.com/repos/golang/tools/git/commits/b5016cbbbd237e7530fa061e87fa22396904901b,b5016cbbbd237e7530fa061e87fa22396904901b,"go.tools/ssa: expose dominator tree of control-flow graph in API.

New APIs:
  (*BasicBlock).{Idom,Dominees,Dominates}
  (*Function).DomPreorder

Messy but systematic refactoring of domNode:
- renamed ""domInfo"".
- embedded directly in BasicBlock, not as pointer. Block field removed.
- Level field removed; was unused.
- Working state of LT algorithm now in its own type.
  {semi,parent,ancestor} fields moved into it.
- remaining fields made private; accessors added.
- use 32-bit ints for pre/postorder numbers.
- allocate LT working space (5 copies of fn.Blocks) contiguously.

dom.go is simpler but somewhat more verbose.

Also:
- we always build the domtree now---yet memory usage is down 5%.
- number the Recover block too.
- add sanity check for DomPreorder.

R=gri
CC=golang-dev
https://golang.org/cl/37230043"
alandonovan,2013-12-04 18:59:55,https://api.github.com/repos/golang/tools/git/commits/c846ececdef4666afa204903f1c66c07c5d8b995,c846ececdef4666afa204903f1c66c07c5d8b995,"go.tools/ssa: eliminate remaining uses of operands of ""untyped"" type.

Added sanity check.

R=gri
CC=golang-dev
https://golang.org/cl/37270043"
axw,2013-12-04 04:55:21,https://api.github.com/repos/golang/tools/git/commits/df34f985210318854b9ced9bab2fcd5a44111c1c,df34f985210318854b9ced9bab2fcd5a44111c1c,"go.tools/cover: split parsing code out from cmd/cover

Split the profile parsing code out of cmd/cover into
a reusable package, to support third-party coverage
tools.

R=golang-dev, r, adg
CC=golang-dev
https://golang.org/cl/36050045"
griesemer,2013-12-04 01:51:54,https://api.github.com/repos/golang/tools/git/commits/ff84d756df91f94289bef164765142632922a6bc,ff84d756df91f94289bef164765142632922a6bc,"go.tools/go/types: avoid spurious error in a common case

R=adonovan
CC=golang-dev
https://golang.org/cl/36900043"
minux,2013-12-03 22:37:59,https://api.github.com/repos/golang/tools/git/commits/5d386107a05af3b92fb5712d7c558fcb5ed0c334,5d386107a05af3b92fb5712d7c558fcb5ed0c334,"go.tools/cmd/oracle: output help messages to stderr for consistency
Fixes golang/go#6838.

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/36820043"
griesemer,2013-12-03 21:36:57,https://api.github.com/repos/golang/tools/git/commits/14cf5b0a28c166adf702674dd7417c960e1a96ad,14cf5b0a28c166adf702674dd7417c960e1a96ad,"go.tools/go/types: fun with Hilbert: a const arithmetic test

This test generates a program that declares the constant
elements of an n*n Hilbert matrix, its inverse, and the
constant elements of the explicit product of the two.
The product should be the identity matrix; that check is
also expressed as a constant expression. Type-checking
verifies that the product is indeed the identity matrix
by asserting the result of the identity check (using the
assert built-in which is available for type-check tests).

The test is run for n = 5. Other values can be tested via
the -H flag, say: go test -run=Hilbert -H=100

The generated program can be written to a file for testing
the constant arithmetic of a compiler: go test -out=test.go

Because of the mathematically precise constant arithmetic
of go/types, this test should always succeed and is only
limited by the size of the matrix. It does run successfully
from n = 0 to values larger than 100.

The Hilbert matrix is famous for being ill-conditioned and
thus exposes arithmetic imprecision very quickly. The gc
compiler only produces a correct result for n = 0 (trivially),
and n = 1 at the moment.

R=adonovan, rsc
CC=golang-dev
https://golang.org/cl/35840043"
griesemer,2013-11-27 01:48:47,https://api.github.com/repos/golang/tools/git/commits/62a3fc7538336a196c7049ac9e942bac1563abdb,62a3fc7538336a196c7049ac9e942bac1563abdb,"go.tools/go/types: clean up internal iota in all cases

R=dsymonds
CC=golang-dev
https://golang.org/cl/33570043"
griesemer,2013-11-26 20:42:52,https://api.github.com/repos/golang/tools/git/commits/3d343e42d146b4b9e8613cade3916b1691989bcd,3d343e42d146b4b9e8613cade3916b1691989bcd,"go.tools/go/types: constants must have constant types

R=adonovan
CC=golang-dev
https://golang.org/cl/33210043"
griesemer,2013-11-26 17:34:12,https://api.github.com/repos/golang/tools/git/commits/bbf45e5e0c89101f7115662c03799ee239b19a12,bbf45e5e0c89101f7115662c03799ee239b19a12,"go.tools/go/types: missing assignment checks when assigning to _

R=adonovan, gri
CC=golang-dev
https://golang.org/cl/31340044"
griesemer,2013-11-26 17:19:17,https://api.github.com/repos/golang/tools/git/commits/b9c2c88573f823f55606b9d5833bd85915ba64f9,b9c2c88573f823f55606b9d5833bd85915ba64f9,"go.tools/go/types: add Package.SetImports

R=adonovan, neelance
CC=golang-dev
https://golang.org/cl/32500043"
campoy,2013-11-26 09:04:08,https://api.github.com/repos/golang/tools/git/commits/6cb29d8d47f40d5a0266329d5695ad3e2c4c37ab,6cb29d8d47f40d5a0266329d5695ad3e2c4c37ab,"go.tools/present: add Raw content to Code for new go-tour.

R=adg
CC=golang-dev
https://golang.org/cl/26390044"
dvyukov,2013-11-25 06:15:56,https://api.github.com/repos/golang/tools/git/commits/23d25a2ed76daa75228c6d8a25e33c5497d407fc,23d25a2ed76daa75228c6d8a25e33c5497d407fc,"dashboard/app: do not send unnecessary data in todo response

R=adg
CC=golang-dev
https://golang.org/cl/30350043"
neelance,2013-11-24 20:48:45,https://api.github.com/repos/golang/tools/git/commits/397114a391ccc01c92795740484b04128b3741f5,397114a391ccc01c92795740484b04128b3741f5,"go.tools/go/gcimporter: ImportData has no need for *bufio.Reader, can get just io.Reader.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/31620043"
griesemer,2013-11-23 04:34:07,https://api.github.com/repos/golang/tools/git/commits/8c9bb9c1e325d0aed160469b42ec5879c2fc4272,8c9bb9c1e325d0aed160469b42ec5879c2fc4272,"go.tools/go/types: various cleanups

- use unpack also for assignments
- run benchmarks only requested (-b flag)

R=adonovan
CC=golang-dev
https://golang.org/cl/31190044"
dvyukov,2013-11-22 06:12:51,https://api.github.com/repos/golang/tools/git/commits/1dd13c247803be82f1d52c909e33f4d37ed70665,1dd13c247803be82f1d52c909e33f4d37ed70665,"dashboard/builder: minor fixes and enhancements
- do not print secret key
- log app responses
- allow to customize go repo

R=adg, bradfitz
CC=golang-dev
https://golang.org/cl/29990046"
griesemer,2013-11-22 05:08:29,https://api.github.com/repos/golang/tools/git/commits/007f41d43e3138b7cc35f37338b0f88951a39177,007f41d43e3138b7cc35f37338b0f88951a39177,"go.tools/go/types: more benchmarks, clearer results

The benchmarks don't permit clear-cut apples-to-apples
comparisons since they depend on the very source code
they are testing. But they do give an indication of
the approximate performance - as a sanity test.

Using 3 different code bases makes it apparent that
there's some difference in performance per code base;
i.e., the lines/s speed varies pretty strongly. This
may be due to setup costs, or other issues. We should
investigate eventually.

R=adonovan
CC=golang-dev
https://golang.org/cl/30650043"
alandonovan,2013-11-21 20:38:58,https://api.github.com/repos/golang/tools/git/commits/cf7368c8793cb850c86266d7a8bdabb63f9ec321,cf7368c8793cb850c86266d7a8bdabb63f9ec321,"go.tools/ssa: fix builder crash in select { case n, _ := <-c: ... }.

Cause: emitExtract requires a type for each component of the
receive tuple; blank supplies no such type.

Solution: remove type parameter for emitExtract as it is no
longer needed: since rev b75cc03b4a56 it is always identical
to the tuple.Type().At(index).

+ tests.

Fixes golang/go#6806.

R=gri, gri
CC=axwalk, golang-dev
https://golang.org/cl/30410043"
alandonovan,2013-11-21 19:19:38,https://api.github.com/repos/golang/tools/git/commits/8f1fdf33ded3511f9d150c5b5e931ceccbf81762,8f1fdf33ded3511f9d150c5b5e931ceccbf81762,"go.tools/ssa: opt: improve the ""unused φ-node"" check to eliminate self-refs, debug-refs.

This removes about 5% of φ-nodes in one large program
and eliminates many zero-value constants.

(This does cause some Idents to no longer map to an ssa.Value.
This is observable in the oracle, whose tests are here updated.)

R=gri, gri
CC=golang-dev
https://golang.org/cl/26980043"
griesemer,2013-11-21 17:11:57,https://api.github.com/repos/golang/tools/git/commits/ef434a14dad153150ce126026ceab64f0a27f0b7,ef434a14dad153150ce126026ceab64f0a27f0b7,"go.tools/go/types: record correct type for parenthesized x.(T) in comma-ok expressions

Fixes golang/go#6796.

R=adonovan
CC=golang-dev
https://golang.org/cl/30070044"
neelance,2013-11-20 21:42:30,https://api.github.com/repos/golang/tools/git/commits/88e292849005889fa89d5e9889049753a377f1e2,88e292849005889fa89d5e9889049753a377f1e2,"go.tools/go/types: Do not throw error on division of complex variables by zero.

See http://play.golang.org/p/DrgLKnHaUW
Seems like division of a variable by zero should only throw an error if the variable is an integer.

R=golang-dev, mtj, gri
CC=golang-dev, gri
https://golang.org/cl/29500047"
alandonovan,2013-11-20 21:00:23,https://api.github.com/repos/golang/tools/git/commits/2e33158b6007f75e4a08bb859941183a072abe70,2e33158b6007f75e4a08bb859941183a072abe70,"go.tools/oracle: show size and alignment for structs and named types.

Users should be familiar with the sizes of all other types.

Currently we assume amd64 (as do other parts of the oracle,
e.g. go/build tags).  Will parameterize later.

R=crawshaw
CC=golang-dev, gri
https://golang.org/cl/29710043"
griesemer,2013-11-19 21:58:01,https://api.github.com/repos/golang/tools/git/commits/b4286c4c1b3735966ff04a8c797b63a90f44dd16,b4286c4c1b3735966ff04a8c797b63a90f44dd16,"go.tools/go/types: missing checks for select statements

Also: Use defer to make sure scopes are always closed
even in case of early exits via bailout (and don't cause
an imbalanced scope error in debug mode).

R=adonovan, gri
CC=golang-dev
https://golang.org/cl/29300043"
griesemer,2013-11-19 17:07:02,https://api.github.com/repos/golang/tools/git/commits/849643aaafecf4cd93ebfb74bfbe233fe94798a2,849643aaafecf4cd93ebfb74bfbe233fe94798a2,"go.tools: cleanups (added copyrights to astutil, clearer logic in go/types)

R=adonovan
CC=golang-dev
https://golang.org/cl/29110043"
griesemer,2013-11-19 06:38:48,https://api.github.com/repos/golang/tools/git/commits/df6f0829a2262d19411ebbd5db9baee8cb5ffa36,df6f0829a2262d19411ebbd5db9baee8cb5ffa36,"go.tools/go/types: complete expr and type string functions

- consolidate them in (expr|type)string[_test].go
- support for printing all ast.Expr
- fix printing of type: chan (<-chan int) (parentheses)
- more consistent names, comments, and exports

R=adonovan
CC=golang-dev
https://golang.org/cl/28680043"
griesemer,2013-11-18 19:26:49,https://api.github.com/repos/golang/tools/git/commits/65aa1a4fbe39d4079b3b843095af2f4975443459,65aa1a4fbe39d4079b3b843095af2f4975443459,"go.tools/go/types: String method for Initializers

Plus a couple of minor fixes.

R=adonovan
CC=golang-dev
https://golang.org/cl/28540043"
bradfitz,2013-11-16 22:53:18,https://api.github.com/repos/golang/tools/git/commits/a284a61701f146bc9e626ac636f520102755ecbc,a284a61701f146bc9e626ac636f520102755ecbc,"astutil: add new broken test

Tests will still pass because it's marked as known broken,
but it will log the unexpected for now.

R=golang-dev, crawshaw
CC=golang-dev
https://golang.org/cl/27330043"
griesemer,2013-11-15 22:26:29,https://api.github.com/repos/golang/tools/git/commits/e785f050b606d624af4c787b5961c8e02dc2a3fb,e785f050b606d624af4c787b5961c8e02dc2a3fb,"go.tools/go/types: add missing checks for short variable declarations

Fixes golang/go#6766.

R=adonovan
CC=golang-dev
https://golang.org/cl/24330044"
griesemer,2013-11-15 19:58:23,https://api.github.com/repos/golang/tools/git/commits/01f122e48bd73726eeb5ac87c2d31d31c4199c61,01f122e48bd73726eeb5ac87c2d31d31c4199c61,"go.tools/go/gcimporter: fix build by adjusting test to new print output

R=adonovan, bradfitz
CC=golang-dev
https://golang.org/cl/26430049"
alandonovan,2013-11-15 17:35:11,https://api.github.com/repos/golang/tools/git/commits/9c112540f669f904924364d9da2f6c7af50d26ca,9c112540f669f904924364d9da2f6c7af50d26ca,"go.tools/oracle: use SelectionString when printing methods.

R=gri, crawshaw, gri
CC=golang-dev
https://golang.org/cl/26900043"
alandonovan,2013-11-15 17:35:03,https://api.github.com/repos/golang/tools/git/commits/45992044b5df4da5dc6f91ced15e2becbe02b123,45992044b5df4da5dc6f91ced15e2becbe02b123,"go.tools/go/types: SelectionString: print method with selective package-qualification.

R=gri, gri
CC=golang-dev
https://golang.org/cl/26570048"
alandonovan,2013-11-15 14:22:16,https://api.github.com/repos/golang/tools/git/commits/f488a2c4f5322b3dcbd14b9256812c9f9da0df54,f488a2c4f5322b3dcbd14b9256812c9f9da0df54,"go.tools/oracle: use TypeString, ObjectString to print relative (unqualified) names when a package is implied by the context.

+ a couple more tests.

R=gri, crawshaw
CC=golang-dev
https://golang.org/cl/26370046"
alandonovan,2013-11-15 14:21:48,https://api.github.com/repos/golang/tools/git/commits/9fcd20e68017c5dda26d88ea5154b561ee933d98,9fcd20e68017c5dda26d88ea5154b561ee933d98,"go.tools/ssa: display named types package-qualified using types.TypeString.

Details:
- use relative (non-qualified) names in more places
- Member interface now has Package(), RelString() methods.
- (*Function).DumpTo: add ""# Package: "" header.
- Added sanity checks for String functions.

R=gri, gri
CC=golang-dev
https://golang.org/cl/26380043"
alandonovan,2013-11-15 14:20:46,https://api.github.com/repos/golang/tools/git/commits/08209344079a9b0ef3d3f93c816c7a81da97ae71,08209344079a9b0ef3d3f93c816c7a81da97ae71,"go.tools/go/types: add TypeString, ObjectString utilities

These are variants of Type.String(), Object.String() that
accept a 'from *Package' argument.  If provided, package
qualification is omitted when printing named types belonging
to that package.

This is useful for UIs where a package is implied by context
e.g. ssadump disassembly, oracle output.

+ Test.

R=gri, gri, gordon.klaus
CC=golang-dev
https://golang.org/cl/22190048"
griesemer,2013-11-15 05:38:04,https://api.github.com/repos/golang/tools/git/commits/91e5190eb91cbbeb711ca1c68e7ac00724588bf7,91e5190eb91cbbeb711ca1c68e7ac00724588bf7,"go.tools/go/types: minor cleanups

R=adonovan
CC=golang-dev
https://golang.org/cl/26430045"
alandonovan,2013-11-14 22:33:07,https://api.github.com/repos/golang/tools/git/commits/19dd02b670dfa6dabaebf6deea609f999b8d87c3,19dd02b670dfa6dabaebf6deea609f999b8d87c3,"go.tools/ssa: fix bug in SSA lifting (!)

The previous code introduced spurious loop-carried
dependencies for variables local to a loop body (for example).
The SSA renaming pass now treats an Alloc instruction like a
Store of the zero value.

Also:
- added regression test
- improved log messages
- made the Store/Load/Alloc cases look more similar.

R=gri, gri
CC=golang-dev
https://golang.org/cl/26750043"
griesemer,2013-11-14 22:11:43,https://api.github.com/repos/golang/tools/git/commits/27563ff576bdfe997aea4f0daee7b48f7b523bc7,27563ff576bdfe997aea4f0daee7b48f7b523bc7,"go.tools/go/types: move gcimporter to its own package

- fixed a couple of TODOs
- various cleanups along the way
- adjusted clients

Once submitted, clients of go/types that don't explicitly
specify Config.Import will need to add the extra import:

import _ ""code.google.com/p/go.tools/go/gcimporter""

to install the default (gc) importer in go/types.

R=adonovan, gri
CC=golang-dev
https://golang.org/cl/26390043"
bradfitz,2013-11-14 17:01:08,https://api.github.com/repos/golang/tools/git/commits/88f792caef10c2acb1770c614e6e7b272ceabbd1,88f792caef10c2acb1770c614e6e7b272ceabbd1,"godoc: be quiet by default about bad examples

Fixes golang/go#6759

R=golang-dev, adg, rsc
CC=golang-dev
https://golang.org/cl/26420044"
alandonovan,2013-11-13 23:50:24,https://api.github.com/repos/golang/tools/git/commits/75d66fbb7b65293d971a0e1a0bba460510453aab,75d66fbb7b65293d971a0e1a0bba460510453aab,"go.tools/ssa/interp: fix build breakage.

(intersecting changes in client)

R=gri, gri
CC=golang-dev
https://golang.org/cl/24100046"
griesemer,2013-11-13 23:21:38,https://api.github.com/repos/golang/tools/git/commits/d1184e294e64c34d6ef4ae75a6b5eb340cf792b6,d1184e294e64c34d6ef4ae75a6b5eb340cf792b6,"go.tools/go/types: fix build

(I inadvertently submitted a modified file.)

R=adonovan
CC=golang-dev
https://golang.org/cl/22750044"
neelance,2013-11-13 23:16:19,https://api.github.com/repos/golang/tools/git/commits/cfc002f30b7028be0edba24d5d084b62066fbf9b,cfc002f30b7028be0edba24d5d084b62066fbf9b,"go.tools/go/types: Do not throw error on division of float variables by zero.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/26040043"
alandonovan,2013-11-13 21:05:13,https://api.github.com/repos/golang/tools/git/commits/cadc2255feedfce8b7d695aedf3bbdb13591a5ad,cadc2255feedfce8b7d695aedf3bbdb13591a5ad,"go.tools/ssa: don't synthesize an empty ""testmain"" package.

Also, only examine functions defined in *_test.go files.

Added tests for empty and nonempty behaviour of CreateTestMainPackage.
(Required some surgery to interp_test.)

R=gri, gri
CC=golang-dev
https://golang.org/cl/25570044"
alandonovan,2013-11-13 21:03:41,https://api.github.com/repos/golang/tools/git/commits/3f686cae848063601233e61dccc026b3e8ce5d5a,3f686cae848063601233e61dccc026b3e8ce5d5a,"go.tools/go/types: print named types with package qualification.

Depending on the context, printing only the package name can
be ambiguous or even incorrect since it is valid only within
the environment of a given file's import specs.

(The standard library packages are mostly unique in their last
segment, but this is not the case for proprietary repos.)

R=gri, gri
CC=golang-dev
https://golang.org/cl/26300043"
alandonovan,2013-11-13 20:13:55,https://api.github.com/repos/golang/tools/git/commits/677415b351d2e163234760b90bd103b3b09e418a,677415b351d2e163234760b90bd103b3b09e418a,"go.tools/ssa: don't print * on type of package-level vars (*ssa.Global)

R=gri, gri
CC=golang-dev
https://golang.org/cl/26240043"
alandonovan,2013-11-13 14:13:42,https://api.github.com/repos/golang/tools/git/commits/70692d3c5feb2dd71b19393c21d0746c21cec5e9,70692d3c5feb2dd71b19393c21d0746c21cec5e9,"go.tools/pointer: fix constraint generation bug in *ssa.Select.

The previous code assumed that each channel item contained one field.

+ regression test.

R=crawshaw
CC=golang-dev
https://golang.org/cl/25480044"
alandonovan,2013-11-13 14:11:10,https://api.github.com/repos/golang/tools/git/commits/775fb1976b450c4822e2dbadeedb7b987f8daa73,775fb1976b450c4822e2dbadeedb7b987f8daa73,"go.tools/oracle: make callgraph printing deterministic (and context-insensitive)

+ re-enable test.

R=crawshaw
CC=golang-dev
https://golang.org/cl/25730044"
alandonovan,2013-11-13 04:04:09,https://api.github.com/repos/golang/tools/git/commits/e7a2e079b030b54a7e47bfe3f71182b974b60eab,e7a2e079b030b54a7e47bfe3f71182b974b60eab,"go.tools/ssa: use correct Alloc.Comment in lifting.

(Only affects diagnostic output.)

R=gri, gri
CC=golang-dev
https://golang.org/cl/23770046"
bradfitz,2013-11-12 23:46:25,https://api.github.com/repos/golang/tools/git/commits/626e9341d5d598b4646360de613bf7b494a91f92,626e9341d5d598b4646360de613bf7b494a91f92,"godoc: add forgotten file from last CL to fix build

R=adg, franciscossouza, dave
CC=golang-dev
https://golang.org/cl/25650043"
crawshaw,2013-11-12 23:02:47,https://api.github.com/repos/golang/tools/git/commits/545b16b6db7cfc46f82a97297d3a6ec323866f81,545b16b6db7cfc46f82a97297d3a6ec323866f81,"go.tools/astutil: add AddNamedImport

R=bradfitz
CC=golang-dev
https://golang.org/cl/23850044"
bradfitz,2013-11-12 22:58:47,https://api.github.com/repos/golang/tools/git/commits/515bcdc536878ac703be9e63975cca4e8b5d2f36,515bcdc536878ac703be9e63975cca4e8b5d2f36,"godoc: update Index.{Write,Reader}, add tests

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/24490043"
griesemer,2013-11-12 20:45:43,https://api.github.com/repos/golang/tools/git/commits/f339918a70c42b22f11577002a2e25b23d8996c1,f339918a70c42b22f11577002a2e25b23d8996c1,"go.tools/go/exact: some factoring, more tests

R=adonovan
CC=golang-dev
https://golang.org/cl/25440043"
neelance,2013-11-12 18:06:24,https://api.github.com/repos/golang/tools/git/commits/a5baa859aed222fc8f1ba9aaf5460e8f34eb08fa,a5baa859aed222fc8f1ba9aaf5460e8f34eb08fa,"go.tools/go/exact: Fix for exact.BinaryOp. It was modifying its argument.

R=golang-dev, gri, mail
CC=golang-dev
https://golang.org/cl/24570043"
alandonovan,2013-11-11 22:20:27,https://api.github.com/repos/golang/tools/git/commits/d8292e2a38ccf032e9da1df21df0a83fcce11b43,d8292e2a38ccf032e9da1df21df0a83fcce11b43,"go.tools/go/types: cache method set for pointer-to-named in the Named.

This change improves the complete running time of 'ssadump cmd/oracle' by ~20%.

R=gri, gri
CC=golang-dev
https://golang.org/cl/22910045"
griesemer,2013-11-08 22:14:58,https://api.github.com/repos/golang/tools/git/commits/c798b9cca0693195ced593ad6acfe844ff632f26,c798b9cca0693195ced593ad6acfe844ff632f26,"go.tools/go/types: check validity of import paths

This check is currently done in go/parser as well but
eventually can be removed from there (after Go 1.2).

R=adonovan
CC=golang-dev
https://golang.org/cl/22240045"
griesemer,2013-11-08 20:52:57,https://api.github.com/repos/golang/tools/git/commits/7b183d1766471e53676fdfa7405ef0ff40229720,7b183d1766471e53676fdfa7405ef0ff40229720,"go.tools/go/types, cmd/gotype: fix early bailout

Clients must have chance to look at panics they
are raising.

R=adonovan
CC=golang-dev
https://golang.org/cl/23820043"
griesemer,2013-11-08 20:06:10,https://api.github.com/repos/golang/tools/git/commits/e8fe66cd57d4a51254807475bff7a2037f47a93e,e8fe66cd57d4a51254807475bff7a2037f47a93e,"go.tools/go/types: print initialization cycles

Also: Always report cycle at first (in source order)
variable in the cycle.

R=adonovan, gri
CC=golang-dev
https://golang.org/cl/23370043"
crawshaw,2013-11-08 19:51:15,https://api.github.com/repos/golang/tools/git/commits/0d4ee40f21419f2ed88980d978011b133d8bea8e,0d4ee40f21419f2ed88980d978011b133d8bea8e,"go.tools/astutil: add Imports, which returns imports grouped by spacing.

R=bradfitz
CC=golang-dev
https://golang.org/cl/23660045"
griesemer,2013-11-08 16:56:55,https://api.github.com/repos/golang/tools/git/commits/0f193b767df50a18b711062ef6da5c65bed260d9,0f193b767df50a18b711062ef6da5c65bed260d9,"go.tools/go/types: simplified GcImportedTypes test

R=adonovan
CC=golang-dev
https://golang.org/cl/23340043"
griesemer,2013-11-08 16:55:16,https://api.github.com/repos/golang/tools/git/commits/7520cff8d3fa3b190039d4736285830967ee1f6c,7520cff8d3fa3b190039d4736285830967ee1f6c,"go.tools/go/types: remove a workaround for 386 bug

R=adonovan
CC=golang-dev
https://golang.org/cl/23350043"
adg,2013-11-08 02:28:32,https://api.github.com/repos/golang/tools/git/commits/50d9adec93a6af06c78415e082535a83604d4cc9,50d9adec93a6af06c78415e082535a83604d4cc9,"go.tools/blog: strip prefix when serving static content

This fix permits godoc to serve images correctly under /blog/.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/22700043"
kisielk,2013-11-07 21:47:35,https://api.github.com/repos/golang/tools/git/commits/e59751ce565608e0ab41f291c1916b98e562276a,e59751ce565608e0ab41f291c1916b98e562276a,"oracle: Fix documentation references to importer package functions.

R=golang-dev, adonovan
CC=golang-dev
https://golang.org/cl/21230043"
griesemer,2013-11-07 21:32:02,https://api.github.com/repos/golang/tools/git/commits/0c141425f68028fef9574a7cc2546b9efc1a868e,0c141425f68028fef9574a7cc2546b9efc1a868e,"go.tools/cmd/gotype: parse in parallel

Performance increase is much smaller than expected;
need to investigate. Possibly, repeatedly (for each
line) accessing file sets from multiple goroutines
(in the scanner) is a bottle neck; or perhaps i/o.

R=adonovan
CC=golang-dev
https://golang.org/cl/23090043"
alandonovan,2013-11-07 15:08:51,https://api.github.com/repos/golang/tools/git/commits/f1e5b03c6ee09f00ae86aa8626894f1c8961e02a,f1e5b03c6ee09f00ae86aa8626894f1c8961e02a,"go.tools/ssa: populate Function.Referrers(), for anon functions.

Added sanity check to ensure Operands/Referrers are complete and dual.

Also: unexport Instruction.setBlock (=> no longer user-implementable).

R=gri
CC=golang-dev
https://golang.org/cl/22150043"
griesemer,2013-11-07 01:47:54,https://api.github.com/repos/golang/tools/git/commits/7123ca00a835777133d19c51723862ae13d9b6c6,7123ca00a835777133d19c51723862ae13d9b6c6,"go.tools/go/types: fix bug in init cycle detection

Initialization cycles need to reported for cycles
that contain variables, even if they don't end in
a variable.

This fixes the last known issue with the existing
std library tests.

R=adonovan, gri
CC=golang-dev
https://golang.org/cl/22200049"
campoy,2013-11-06 21:02:20,https://api.github.com/repos/golang/tools/git/commits/2c650d6a84db04ff71419986ded7c275bc66ff5d,2c650d6a84db04ff71419986ded7c275bc66ff5d,"go.tools/present: add extension name to Code

This will be used to show the ""Run"" button for code snippets in go.talks only for Go when running on App Engine.

R=adg, r, iant
CC=golang-dev
https://golang.org/cl/21930047"
crawshaw,2013-11-06 20:31:54,https://api.github.com/repos/golang/tools/git/commits/6df4bd0406a130f0aff26bdcf70197ff2f2bafdf,6df4bd0406a130f0aff26bdcf70197ff2f2bafdf,"go.tools/astutil: make sure import blocks are marked as such (Lparen=1)

R=bradfitz
CC=golang-dev
https://golang.org/cl/22320044"
bradfitz,2013-11-06 20:00:26,https://api.github.com/repos/golang/tools/git/commits/56a1b4d0b77cc9eab9a93ae9f415c00fa8c7f3ba,56a1b4d0b77cc9eab9a93ae9f415c00fa8c7f3ba,"godoc: index import counts, package name to path(s), and exported symbols

R=golang-dev, crawshaw
CC=golang-dev
https://golang.org/cl/22190047"
bradfitz,2013-11-06 18:31:30,https://api.github.com/repos/golang/tools/git/commits/42513df8b8c75e3babca445dc8bc1fbb69367c7e,42513df8b8c75e3babca445dc8bc1fbb69367c7e,"godoc: add IndexInterval option

This will permit deleting some forked code elsewhere.

R=golang-dev, crawshaw
CC=golang-dev
https://golang.org/cl/22010046"
crawshaw,2013-11-06 18:30:30,https://api.github.com/repos/golang/tools/git/commits/0b5928ea2a9876e65af8a25e02c450c8299513a4,0b5928ea2a9876e65af8a25e02c450c8299513a4,"go.tools/astutil: a package for common AST utilities.

Lifts the import management utilities from gofix into
a package, so they can be used by goimports.

R=bradfitz
CC=golang-dev
https://golang.org/cl/22430043"
griesemer,2013-11-06 17:55:03,https://api.github.com/repos/golang/tools/git/commits/eb67edd0476ded6e4bfcb65a1b977d6f704f26ae,eb67edd0476ded6e4bfcb65a1b977d6f704f26ae,"go.tools/go/types: add test cases for pending issues

The gc compiler is inconsistent how it handles method
""mentions"" with respect to initialization cycle detection
(see issue 6703 for details). Pending a spec clarification,
this CL assumes that for a method to be ""mentioned"", it
must be mentioned as a method expression rather than a
method value (closer in intent to ""syntactic"" mention).

R=adonovan
CC=golang-dev
https://golang.org/cl/22050044"
alandonovan,2013-11-05 22:32:45,https://api.github.com/repos/golang/tools/git/commits/2e7d5a8b6b363f9b93c34b397bb77aaecca44b26,2e7d5a8b6b363f9b93c34b397bb77aaecca44b26,"go.tools/ssa: dump types in ""pkg.""-unqualified form where appropriate.

Also: types.Typ[types.UnsafePointer].String() now always prints as ""unsafe.Pointer"".

R=gri
CC=golang-dev
https://golang.org/cl/21820044"
griesemer,2013-11-05 21:42:31,https://api.github.com/repos/golang/tools/git/commits/8e64946a3a0d5dac8b80cd1ab087cc5201730e0c,8e64946a3a0d5dac8b80cd1ab087cc5201730e0c,"go.tools/go/types: better error messages for api tests

R=adonovan
CC=golang-dev
https://golang.org/cl/22140043"
griesemer,2013-11-05 19:47:22,https://api.github.com/repos/golang/tools/git/commits/8b05c30f065a4e066927e8d6c5a2994131e31502,8b05c30f065a4e066927e8d6c5a2994131e31502,"go.tools/go/types: track cycles through methods

R=adonovan
CC=golang-dev
https://golang.org/cl/22070043"
griesemer,2013-11-05 18:51:13,https://api.github.com/repos/golang/tools/git/commits/b33df7e76ac34951b978123d8494d32e7e494732,b33df7e76ac34951b978123d8494d32e7e494732,"go.tools/go/types: track init cycles through closures

R=adonovan
CC=golang-dev
https://golang.org/cl/21790044"
alandonovan,2013-11-05 18:03:14,https://api.github.com/repos/golang/tools/git/commits/d84d338a42552634dc7a95228dbfa002176a6f0a,d84d338a42552634dc7a95228dbfa002176a6f0a,"go.tools/ssa/interp: improve print() on interfaces, and log message for panic.

R=gri
CC=golang-dev
https://golang.org/cl/21960043"
alandonovan,2013-11-05 18:02:46,https://api.github.com/repos/golang/tools/git/commits/ce321e34d09c330b660b61baea1c3d26de8bd2f8,ce321e34d09c330b660b61baea1c3d26de8bd2f8,"go.tools/ssa: simplify initialization of globals using go/types.Info.InitOrder.

R=gri
CC=golang-dev
https://golang.org/cl/21950043"
griesemer,2013-11-05 17:25:25,https://api.github.com/repos/golang/tools/git/commits/9d1e9ed2ab352c3181dd649a0b9ad6e714634f1f,9d1e9ed2ab352c3181dd649a0b9ad6e714634f1f,"go.tools/go/types: track init cycles through functions

- Info.InitOrder now provides list of Initializers
  (vars + init expr), handling n:1 decls and blank
  identifiers
- added respective API test
- cycles detected through function ""mentions""

Missing: cycles through method ""mentions"" and via
         closures

R=adonovan
CC=golang-dev
https://golang.org/cl/21810043"
bradfitz,2013-11-05 14:35:58,https://api.github.com/repos/golang/tools/git/commits/964f0f559cb5e33a8db407e71f00e7adb3a43c87,964f0f559cb5e33a8db407e71f00e7adb3a43c87,"godoc: feed indexer concurrently, add selective indexing hook, tests

On big corpuses, the indexer was spending most of its time waiting
for filesystem operations (especially with network filesystems)
and not actually indexing.  This keeps the filesystem busy and indexer
running in different goroutines.

Also, add a hook to let godoc hosts disable indexing of certain
directories.

And finally, start adding tests for godoc, which required
fleshing out (and testing) the mapfs code.

R=golang-dev, adg, bgarcia
CC=golang-dev
https://golang.org/cl/21520045"
robpike,2013-11-01 18:49:11,https://api.github.com/repos/golang/tools/git/commits/2afbb1cd5fd71d84600691f02ce813e584c460d9,2afbb1cd5fd71d84600691f02ce813e584c460d9,"go.tools/cmd/vet: handle symbolic TEXT annotations
The symbolic names such as NOSPLIT for annotations on the TEXT
directive appeared after vet started checking .s files. This CL tweaks
the regular expression to allow CAPITALS and the symbols | and +
as well as digits in that field, and interprets NOSPLIT as equivalent
to 7 in that field. All magic.

Fixes golang/go#6695

R=golang-dev, rsc
CC=golang-dev
https://golang.org/cl/18700044"
alandonovan,2013-11-01 18:32:44,https://api.github.com/repos/golang/tools/git/commits/0faac9ebe650ced04722ed72214b45976211471b,0faac9ebe650ced04722ed72214b45976211471b,"go.tools/ssa: include line count in stdlib_test.

R=gri
CC=golang-dev
https://golang.org/cl/20860043"
griesemer,2013-11-01 04:47:35,https://api.github.com/repos/golang/tools/git/commits/d259ea48d140dfcd518f9c17c5ded1e6d5cebe9e,d259ea48d140dfcd518f9c17c5ded1e6d5cebe9e,"go.tools/go/types: first cut at checking variable initialization cycles

Missing:
- dependencies via functions (incl. closures and methods)
- more tests (incl. API test)

R=adonovan
CC=golang-dev
https://golang.org/cl/20510043"
alexbrainman,2013-11-01 00:28:31,https://api.github.com/repos/golang/tools/git/commits/5879669d9dc45ecc6ab3b3a07eb73c229fcc5ced,5879669d9dc45ecc6ab3b3a07eb73c229fcc5ced,"go.tools/dashboard/builder: ignore GOPATH setting during build (on windows)

R=golang-dev, minux.ma, adg
CC=golang-dev
https://golang.org/cl/18920046"
alandonovan,2013-10-31 21:59:52,https://api.github.com/repos/golang/tools/git/commits/74b761d0998eba2c1f9d504f2e65480a0df149e8,74b761d0998eba2c1f9d504f2e65480a0df149e8,"go.tools/ssa: clarify spec of (*builder).complit().

Added test for []*map composite literals containing nested
literal subelements.  This required implementing
(reflect.Value).Map{Keys,Index} in ssa/interp.

Plus two minor fixes in ssa/interp.

R=gri
CC=golang-dev
https://golang.org/cl/20470043"
griesemer,2013-10-31 19:01:00,https://api.github.com/repos/golang/tools/git/commits/fb0632eb7d817e95b706d7841c5192343a08826a,fb0632eb7d817e95b706d7841c5192343a08826a,"go.tools/go/types: Provide explicit type checker Error.

R=adonovan
CC=golang-dev
https://golang.org/cl/20400044"
griesemer,2013-10-31 17:01:58,https://api.github.com/repos/golang/tools/git/commits/03e3f0cf81fc3cf8560874a4e0c49181d346dbcf,03e3f0cf81fc3cf8560874a4e0c49181d346dbcf,"go.tools/cmd/gotype: make gotype use go/build

This CL makes gotype usable again. Removed -r
(recursive) mode; use go/build to determine
the correct set of Go files when processing
a directory. The -v (verbose) mode now prints
some basic stats (duration, number of files,
lines, and lines/s).

Thoroughly restructured the code.

Applying gotype -v -a . to the go/types directory:
128.94141ms (40 files, 12008 lines, 93127 lines/s)

On a 2.8 GHz Quad-Core Intel Xeon, 800 MHz DDR2 FB-DIMM,
with go/types built with the (interal) debug flag set to
false. There's still quite a bit of room for performance
improvement in all parts of the code since no tuning has
been done.

R=golang-dev, adonovan
CC=golang-dev
https://golang.org/cl/19930043"
alandonovan,2013-10-31 14:56:33,https://api.github.com/repos/golang/tools/git/commits/1518a244642df4eb2c999d1161b08a21dd9e1f18,1518a244642df4eb2c999d1161b08a21dd9e1f18,"go.tools/importer: don't pass srcDir=os.Getwd to go/build.Import().

This makes imports independent of the process's working
directory.  (Perhaps this was a feature, but I haven't found a
situation in which it actually works.)

R=gri
CC=golang-dev
https://golang.org/cl/19420043"
alandonovan,2013-10-31 14:24:00,https://api.github.com/repos/golang/tools/git/commits/f4fca995ad2f1b61136bbb21372f218ca265687e,f4fca995ad2f1b61136bbb21372f218ca265687e,"go.tools/pointer: fix test of pts(os.Args) on Windows.

I have no way to test this.

R=crawshaw
CC=alex.brainmain, golang-dev
https://golang.org/cl/17820044"
bradfitz,2013-10-30 18:34:32,https://api.github.com/repos/golang/tools/git/commits/766a70612a3e0ca08a83f8220bb3cea03260c16c,766a70612a3e0ca08a83f8220bb3cea03260c16c,"godoc: add a Corpus hook to summarize a package

This lets godoc implementations provide a more efficient means
of getting this information, without reading files and parsing the
package docs.

This is especially important when the files themselves don't
actually exist and the VFS is synthesizing them on demand
(e.g. protocol buffer files -> their generated *.pb.go files).
This means corpus.Init can run quickly, without generating
every protocol file in a large corpus (or fetching it from a
cache).

In the future, this hook could also be used for caching the summaries of
regular packages.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/19440043"
adg,2013-10-30 02:13:42,https://api.github.com/repos/golang/tools/git/commits/99890b82e729083584a44e56d5e45587cd3fab60,99890b82e729083584a44e56d5e45587cd3fab60,"go.tools/godoc/static: use preferred JS for Google+ buttons

R=bradfitz, dsymonds
CC=golang-dev
https://golang.org/cl/19070044"
alandonovan,2013-10-30 01:57:53,https://api.github.com/repos/golang/tools/git/commits/94c387c61089ea5fae8f92c5eb0cc7dd3f250d18,94c387c61089ea5fae8f92c5eb0cc7dd3f250d18,"go.tools/pointer: implement (reflect.Value).Call.

The implementation follows the basic pattern of an indirect
function call (genDynamicCall).

We use the same trick as SetFinalizer so that direct calls to
(r.V).Call, which are overwhelmingly the norm, are inlined.

Bug fix (and simplification): calling untag() to unbox a
reflect.Value is wrong for reflect.Values containing interfaces
(rare).  Now, we call untag for concrete types and typeFilter
for interface types, and we can use this pattern in all cases.
It corresponds to the ssa.TypeAssert operator, so we call
it typeAssert.  Added tests to cover this.

We also specialize reflect.{In,Out} when the operand is an int
literal.

+ Tests.

Also:
- make taggedValue() panic, not return nil, eliminating many checks.
  We call isTaggedValue for the one place that cares.
- pointer_test: recover from panics in Analyze() and dump the log.

R=crawshaw
CC=golang-dev
https://golang.org/cl/14426050"
alandonovan,2013-10-29 17:20:58,https://api.github.com/repos/golang/tools/git/commits/e1b710c31e47eba04c71a90fb4ac9642c3deaef6,e1b710c31e47eba04c71a90fb4ac9642c3deaef6,"go.tools/README: minor correction.

R=gri
CC=golang-dev
https://golang.org/cl/18490043"
alandonovan,2013-10-29 15:07:09,https://api.github.com/repos/golang/tools/git/commits/bac709817371c349d17a2ee245f29411849babda,bac709817371c349d17a2ee245f29411849babda,"go.tools/ssa: fix crash on (new)(T) due to missing unparen() call.

Audited codebase for other occurrences, found two more.
Added test coverage for all of them.

R=gri
CC=golang-dev
https://golang.org/cl/14698043"
marete,2013-10-29 06:55:27,https://api.github.com/repos/golang/tools/git/commits/4a813e4058adbcd26849c01961b0dc71fe831c85,4a813e4058adbcd26849c01961b0dc71fe831c85,"blog: Fix atom feed's `updated' time when there's only one article.

When computing the time for the ""updated"" tag of the atom feed, the
current code checks if there is more than one article and if that is
not true, it sets the time to the zero time.Time. This means that
the feed also gets the zero time in this tag when there is exactly one
article.

This trivial patch fixes this so that when there is exactly one
article, the time is set to that article's time.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/18420044"
bradfitz,2013-10-28 19:51:01,https://api.github.com/repos/golang/tools/git/commits/452c763fc7edadfb7416857335de5b05d83de4be,452c763fc7edadfb7416857335de5b05d83de4be,"godoc: parallelize corpus init

Massive win for high-latency network filesystems.
Also benefits the local disk/ssd case too, though.

R=golang-dev, bgarcia
CC=golang-dev
https://golang.org/cl/18650043"
alandonovan,2013-10-28 16:05:29,https://api.github.com/repos/golang/tools/git/commits/e29626539b917f3da639a674877eee36022aa38d,e29626539b917f3da639a674877eee36022aa38d,"go.tools/ssa: clarify that DebugRef relation is a function from ast.Expr to (ssa.Value, IsAddr bool), in docs and printed form.

R=gri
CC=golang-dev
https://golang.org/cl/18410043"
alandonovan,2013-10-28 14:58:46,https://api.github.com/repos/golang/tools/git/commits/7a70c382bed84c92bcb14fc25d9c3da4455cd81a,7a70c382bed84c92bcb14fc25d9c3da4455cd81a,"go.tools/pointer: fix panic in reflection.

reflect.Values may point to tagged objects with
interface type, e.g. x := reflect.ValueOf(new(interface{})).Elem().
We failed to consider this when implementing Elem.

Also, (reflect.Value).Interface() must do one ""unboxing""
when it encounters such tagged objects.
i.e., x.Elem().Interface() and x.Interface() are equivalent
in that case.

Also:
- add example of tagged object with interface type.
- untabify (Label).String docstring.
- added tests.

R=crawshaw
CC=golang-dev
https://golang.org/cl/18020044"
marete,2013-10-28 08:17:10,https://api.github.com/repos/golang/tools/git/commits/f3120b161ebde3ed45cdd924996ecac51859b6b1,f3120b161ebde3ed45cdd924996ecac51859b6b1,"blog: Make the atom feed title configurable.

The blog code is quite generic and with the replacement of template and
static files, it can be re-used. But the atom feed title is hard-coded
into the code. This patch adds a field to set the atom feed title to
the Config structure and uses it in the code where the title was
previously hard-coded.

A CL sent separately will set this Config field in the main package in
the go.blog sub-repository. (See CL 16850043 for that other patch).

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/16830043"
alandonovan,2013-10-27 14:55:21,https://api.github.com/repos/golang/tools/git/commits/aa2386290bcf76f96579b0969beafa0eeabd014c,aa2386290bcf76f96579b0969beafa0eeabd014c,"go.tools/ssa: new Function.Syntax() returns the declaring AST (debug mode) or just the Pos/End of the function's extent (otherwise).

R=gri
CC=golang-dev
https://golang.org/cl/16980043"
griesemer,2013-10-25 22:37:03,https://api.github.com/repos/golang/tools/git/commits/3eb9e504e36b608c56a9fb7bf59a54c764a242c2,3eb9e504e36b608c56a9fb7bf59a54c764a242c2,"go.tools/go/types: update a TODO comment (not a TODO anymore)

R=adonovan
TBR=adonovan
CC=golang-dev
https://golang.org/cl/17440043"
griesemer,2013-10-25 21:38:52,https://api.github.com/repos/golang/tools/git/commits/b98997fdfe0dc8676bede18a242c711b653d475c,b98997fdfe0dc8676bede18a242c711b653d475c,"go.tools/go/types: enable std lib test of map key types

R=adonovan
CC=golang-dev
https://golang.org/cl/17390043"
griesemer,2013-10-25 21:32:14,https://api.github.com/repos/golang/tools/git/commits/65aaa0093cff3ede1f0749875cd3fed8082d55a0,65aaa0093cff3ede1f0749875cd3fed8082d55a0,"go.tools/go/types: check map key type when it is fully known

Fixes golang/go#6667.

R=adonovan
CC=golang-dev
https://golang.org/cl/17360043"
griesemer,2013-10-25 20:59:40,https://api.github.com/repos/golang/tools/git/commits/1e05a58b11012eaa9d4021fa188c16df16b27dcc,1e05a58b11012eaa9d4021fa188c16df16b27dcc,"go.tools/go/types: consistently use 'elem' instead of 'elt'

This is simply a rename of unexported struct fields.
No other changes.

R=adonovan
CC=golang-dev
https://golang.org/cl/17330043"
griesemer,2013-10-25 20:16:45,https://api.github.com/repos/golang/tools/git/commits/cf08eefe7f07ef7b4720aa752695ffa622dab05e,cf08eefe7f07ef7b4720aa752695ffa622dab05e,"go.tools/go/types: test cases for comparisons

- better error messages
- in contrast to a long-standing TODO, comparisons
  between interface and non-interface types always
  worked correctly

R=adonovan
CC=golang-dev
https://golang.org/cl/17310043"
alandonovan,2013-10-25 02:38:10,https://api.github.com/repos/golang/tools/git/commits/d644aa1fcdd83c34c0a14f59de800b166569938f,d644aa1fcdd83c34c0a14f59de800b166569938f,"go.tools/ssa/interp: enable $GOROOT/test/switch.go test

(now that go/types can handle it)

R=gri
TBR=gri
CC=golang-dev
https://golang.org/cl/16970043"
alandonovan,2013-10-24 22:31:50,https://api.github.com/repos/golang/tools/git/commits/9f640c2abb1cb665e9227930030021043dd2e30c,9f640c2abb1cb665e9227930030021043dd2e30c,"go.tools/ssa: record lvalue/rvalue distinction precisely in DebugRef.

A DebugRef associates a source expression E with an ssa.Value
V, but until now did not record whether V was the value or the
address of E.  So, we would guess from the ""pointerness"" of
the Value, leading to confusion in some cases, e.g.

   type N *N
   var n N
   n = &n  // lvalue and rvalue are both pointers

Now we explicitly record 'IsAddress bool' in DebugRef, and
plumb this everywhere: through (*Function).ValueForExpr and
(*Program).VarValue, all the way to forming the pointer
analysis query.

Also:
- VarValue now treats each reference to a global distinctly,
  just like it does for other vars.  So:
    var g int
    func f() {
   	g = 1     // VarValue(g) == Const(1:int), !isAddress
        print(g)  // VarValue(g) == Global(g), isAddress
    }
- DebugRefs are not emitted for references to predeclared
  identifiers (nil, built-in).
- DebugRefs no longer prevent lifting of an Alloc var into a
  register; now we update or discard the debug info.
- TestValueForExpr: improve coverage of ssa.EnclosingFunction
  by putting expectations in methods and init funcs, not just
  normal funcs.
- oracle: fix golden file broken by recent
  (*types.Var).IsField change.

R=gri
CC=golang-dev
https://golang.org/cl/16610045"
griesemer,2013-10-24 22:20:03,https://api.github.com/repos/golang/tools/git/commits/69f5b543df3134f44e4c700ce31d2f4b16d2e0ff,69f5b543df3134f44e4c700ce31d2f4b16d2e0ff,"go.tools/go/types: check for duplicate types in type switches

R=adonovan
CC=golang-dev
https://golang.org/cl/16860043"
alandonovan,2013-10-24 21:07:11,https://api.github.com/repos/golang/tools/git/commits/96bdcd22e3f454473b0a3d0e221fa790b66cffe1,96bdcd22e3f454473b0a3d0e221fa790b66cffe1,"go.tools/go/types: add Var.IsField() accessor, and print ""field"" not ""var"".

R=gri
CC=golang-dev
https://golang.org/cl/16780043"
griesemer,2013-10-24 21:02:14,https://api.github.com/repos/golang/tools/git/commits/c20165988ab6cd020f2a55ec2f273a1972f7d3d3,c20165988ab6cd020f2a55ec2f273a1972f7d3d3,"go.tools/go/types: no duplicate checking in expr switches for now

See also issue 4524.

R=adonovan
CC=golang-dev
https://golang.org/cl/16700045"
griesemer,2013-10-24 16:12:28,https://api.github.com/repos/golang/tools/git/commits/ad467275258c9ab72ddbce30a292e08f37c91396,ad467275258c9ab72ddbce30a292e08f37c91396,"go.tools/go/types: handle blank _ methods in interface types

The spec does not exclude blank _ method names in interfaces
from the uniqueness criteria; i.e., at most one blank method
may appear in an interface type.

Arguably the spec is vague (and possibly incorrect) here.
gccgo handles it the same way. gc crashes with an internal
compiler error.

R=adonovan
CC=golang-dev
https://golang.org/cl/16380043"
griesemer,2013-10-24 16:09:10,https://api.github.com/repos/golang/tools/git/commits/40b09326ee0a0674eef6ef464e919b06349966af,40b09326ee0a0674eef6ef464e919b06349966af,"go.tools/go/types: enable another test case

Working now that circular interface types are handled correcly.

R=adonovan
CC=golang-dev
https://golang.org/cl/16310046"
alandonovan,2013-10-23 22:07:53,https://api.github.com/repos/golang/tools/git/commits/8636f40baf632662ff11f5d3dba2f297da32b19e,8636f40baf632662ff11f5d3dba2f297da32b19e,"go.tools/ssa: CreateTestMainPackage: synthesize test driver as a package (""testmain"") not 'main' function.

This allows us to run/analyze multiple tests.
Also it causes the production code packages to be properly initialized.

Also:
- cmd/ssadump: improved usage message (add example;
  incorporate LoadInitialPackages usage; explain how -run
  finds main).
- pointer, oracle, ssa/interp: use CreateTestMainPackage.
- ssa/builder.go: remove 'rundefers' instruction from package init,
  which no longer uses 'defer'.

R=gri
CC=golang-dev
https://golang.org/cl/15920047"
alandonovan,2013-10-23 21:07:52,https://api.github.com/repos/golang/tools/git/commits/87ced824bdd859dccb560c403ffcc364031ac872,87ced824bdd859dccb560c403ffcc364031ac872,"go.tools/ssa: fix computation of set of types requiring method sets.

Motivation:

Previously, we assumed that the set of types for which a
complete method set (containing all synthesized wrapper
functions) is required at runtime was the set of types
used as operands to some *ssa.MakeInterface instruction.

In fact, this is an underapproximation because types can
be derived from other ones via reflection, and some of
these may need methods.  The reflect.Type API allows *T to
be derived from T, and these may have different method
sets.  Reflection also allows almost any subcomponent of a
type to be accessed (with one exception: given T, defined
'type T struct{S}', you can reach S but not struct{S}).

As a result, the pointer analysis was unable to generate
all necessary constraints before running the solver,
causing a crash when reflection derives types whose
methods are unavailable.  (A similar problem would afflict
an ahead-of-time compiler based on ssa.  The ssa/interp
interpreter was immune only because it does not require
all wrapper methods to be created before execution
begins.)

Description:

This change causes the SSA builder to record, for each
package, the set of all types with non-empty method sets that
are referenced within that package.  This set is accessed via
Packages.TypesWithMethodSets().  Program.TypesWithMethodSets()
returns its union across all packages.

The set of references that matter are:
- types of operands to some MakeInterface instruction (as before)
- types of all exported package members
- all subcomponents of the above, recursively.
This is a conservative approximation to the set of types
whose methods may be called dynamically.

We define the owning package of a type as follows:
- the owner of a named type is the package in which it is defined;
- the owner of a pointer-to-named type is the owner of that named type;
- the owner of all other types is nil.

A package must include the method sets for all types that it
owns, and all subcomponents of that type that are not owned by
another package, recursively.  Types with an owner appear in
exactly one package; types with no owner (such as struct{T})
may appear within multiple packages.
(A typical Go compiler would emit multiple copies of these
methods as weak symbols; a typical linker would eliminate
duplicates.)

Also:
- go/types/typemap: implement hash function for *Tuple.
- pointer: generate nodes/constraints for all of
  ssa.Program.TypesWithMethodSets().
  Add rtti.go regression test.
- Add API test of Package.TypesWithMethodSets().
- Set Function.Pkg to nil (again) for wrapper functions,
  since these may be shared by many packages.
- Remove a redundant logging statement.
- Document that ssa CREATE phase is in fact sequential.

Fixes golang/go#6605

R=gri
CC=golang-dev
https://golang.org/cl/14920056"
griesemer,2013-10-23 20:46:40,https://api.github.com/repos/golang/tools/git/commits/93ef310aabb77aec25606163f0bc066a79af9570,93ef310aabb77aec25606163f0bc066a79af9570,"go.tools/go/types: handle interface types recurring via method signatures

Fixes golang/go#5090.

R=adonovan, gri, r, mtj
CC=golang-dev
https://golang.org/cl/14795044"
griesemer,2013-10-23 20:45:49,https://api.github.com/repos/golang/tools/git/commits/c8f4d650c829d8c2ce6d599b12d67c8caa98190e,c8f4d650c829d8c2ce6d599b12d67c8caa98190e,"go.tools/ssa/interp: make typeAssert robust against nil types

R=adonovan
CC=golang-dev
https://golang.org/cl/16180043"
griesemer,2013-10-23 20:26:23,https://api.github.com/repos/golang/tools/git/commits/a1886cc6ef994d8cd6f03dbca0aeaf949c568b0e,a1886cc6ef994d8cd6f03dbca0aeaf949c568b0e,"go/tools/ssa/interp: make iface.eq robust against nil types

A future version of go/types.IsIdentical does not accept
nil types anymore.

R=adonovan
CC=golang-dev
https://golang.org/cl/16150043"
adg,2013-10-18 01:42:41,https://api.github.com/repos/golang/tools/git/commits/36c288d6d760548be74a017319febd978ca481bf,36c288d6d760548be74a017319febd978ca481bf,"go.tools/cmd/godoc: search go.tools/cmd before $GOROOT/cmd

Fixes golang/go#6527.

R=rsc
CC=golang-dev
https://golang.org/cl/14725043"
griesemer,2013-10-17 17:48:19,https://api.github.com/repos/golang/tools/git/commits/851a7b980a3c9f88124b3e448c7aefe8c6ec82e1,851a7b980a3c9f88124b3e448c7aefe8c6ec82e1,"go.tools/go/types: return invalid type (rather than nil) for (*Label).Type()

R=adonovan
CC=golang-dev
https://golang.org/cl/14782043"
alandonovan,2013-10-17 13:26:44,https://api.github.com/repos/golang/tools/git/commits/8bb20b8231108421a4db5a2426bef66ff7d94a68,8bb20b8231108421a4db5a2426bef66ff7d94a68,"go.tools/pointer: more reflection.

Support for:
        (*reflect.rtype).Field
        (*reflect.rtype).FieldByName
        reflect.MakeSlice
        runtime.SetFinalizer

Details:
- analysis locates ssa.Functions for (reflect.Value).Call
  and runtime.SetFinalizer during startup to that it can
  special-case them during genCall.  ('Call' is forthcoming.)
- The callsite.targets mechanism is only used for dynamic
  calls now.  For static calls we call callEdge during constraint
  generation; this is a minor optimisation.
- Static calls to SetFinalizer are inlined so that the call
  appears to go direct to the finalizer.  (We'll use the same
  trick for (reflect.Value).Call.)
- runtime.FuncForPC: treat as a no-op.
- Fixed pointer_test to properly deal with expectations
  that are multi-sets.
- Inlined rtypeMethodByNameConstraint.addMethod.
- More tests.

R=crawshaw
CC=golang-dev
https://golang.org/cl/14682045"
griesemer,2013-10-16 17:45:58,https://api.github.com/repos/golang/tools/git/commits/ac0a1222cb65222fce311782ccad7379c1c09490,ac0a1222cb65222fce311782ccad7379c1c09490,"go.tools/go/types: fix StdSizes.Sizeof computation

Thanks to Travis Cline for finding this bug.

R=adonovan
CC=golang-dev
https://golang.org/cl/14752043"
griesemer,2013-10-15 22:30:03,https://api.github.com/repos/golang/tools/git/commits/d8391b87d18edb06bf25232186cbeea936df86a4,d8391b87d18edb06bf25232186cbeea936df86a4,"go.tools/ssa/interp: use new Sizes interface (fix build)

R=adonovan
TBR=adonovan
CC=golang-dev
https://golang.org/cl/14722043"
griesemer,2013-10-15 21:51:52,https://api.github.com/repos/golang/tools/git/commits/5fcdb7b3ff5b542ddbc41c3baaf693e78483cdc6,5fcdb7b3ff5b542ddbc41c3baaf693e78483cdc6,"go.tools/go/types: provide Sizes interface instead of individual sizing functions

This will make it a bit easier to create commonly used ""custom"" sizes for types.

With this CL, interfaces are now by default 2*WordSize (= 16) instead of 1*WordSize
as before.

Also: minor unrelated cleanups.

R=adonovan
CC=golang-dev
https://golang.org/cl/14719043"
campoy,2013-10-14 21:14:08,https://api.github.com/repos/golang/tools/git/commits/fea69e5bab87f163771c3642effa53a96cb9381d,fea69e5bab87f163771c3642effa53a96cb9381d,"go.tools/present: add support for non Go code execution

R=adg, r
CC=golang-dev
https://golang.org/cl/14615043"
alandonovan,2013-10-14 19:38:56,https://api.github.com/repos/golang/tools/git/commits/2accef29d7fa0b03adf0dff65f686461babb2a20,2accef29d7fa0b03adf0dff65f686461babb2a20,"go.tools/ssa: implement correct control flow for recovered panic.

A function such as this:
        func one() (x int) {
                defer func() { recover() }()
                x = 1
                panic(""return"")
        }
that combines named return parameters (NRPs) with deferred calls
that call recover, may return non-zero values despite the
fact it doesn't even contain a return statement. (!)

This requires a change to the SSA API: all functions'
control-flow graphs now have a second entry point, called
Recover, which is the block at which control flow resumes
after a recovered panic.  The Recover block simply loads the
NRPs and returns them.

As an optimization, most functions don't need a Recover block,
so it is omitted.  In fact it is only needed for functions that
have NRPs and defer a call to another function that _may_ call
recover.

Dataflow analysis of SSA now requires extra work, since every
may-panic instruction has an implicit control-flow edge to
the Recover block.  The only dataflow analysis so far implemented
is SSA renaming, for which we make the following simplifying
assumption: the Recover block only loads the NRPs and returns.
This means we don't really need to analyze it, we can just
skip the ""lifting"" of such NRPs.  We also special-case the Recover
block in the dominance computation.

Rejected alternative approaches:
- Specifying a Recover block for every defer instruction (like a
   traditional exception handler).
   This seemed like excessive generality, since Go programs
   only need the same degenerate form of Recover block.
- Adding an instruction to set the Recover block immediately
   after the named return values are set up, so that dominance
   can be computed without special-casing.
   This didn't seem worth the effort.

Interpreter:
- This CL completely reimplements the panic/recover/
  defer logic in the interpreter.  It's clearer and simpler
  and closer to the model in the spec.
- Some runtime panic messages have been changed to be closer
  to gc's, since tests depend on it.
- The interpreter now requires that the runtime.runtimeError
  type be part of the SSA program.  This requires that clients
  import this package prior to invoking the interpreter.
  This in turn requires (Importer).ImportPackage(path string),
  which this CL adds.
- All $GOROOT/test/recover{,1,2,3}.go tests are now passing.

NB, the bug described in coverage.go (defer/recover in a concatenated
init function) remains.  Will be fixed in a follow-up.

Fixes golang/go#6381

R=gri
CC=crawshaw, golang-dev
https://golang.org/cl/13844043"
alandonovan,2013-10-14 18:08:23,https://api.github.com/repos/golang/tools/git/commits/7aabe2e113a04e686f56d4639ff64a2862fbbe02,7aabe2e113a04e686f56d4639ff64a2862fbbe02,"go.tools/ssa: build a separate Function for each init() func.

Before, we would concatenate all the init() blocks together,
resulting in incorrect treatment of a recovered panic in one
init block: the implicit return would cause the subsequent ones
to be skipped.

The result is simpler, and closer to what gc does.

The additional functions are visible in the call graph,
so some tests required updating.

R=gri
CC=crawshaw, golang-dev
https://golang.org/cl/14671044"
alandonovan,2013-10-14 17:53:41,https://api.github.com/repos/golang/tools/git/commits/d7a9805478c3e4247c5f13f9d0d42a405396be57,d7a9805478c3e4247c5f13f9d0d42a405396be57,"go.tools/pointer: use assignable not identical type predicate in reflect.{Send,SetMapIndex,etc}

Various reflect operations permit assignability conversions,
i.e. their internals behave unlike y=x.(T) which unpacks only
those interface values in x that are identical to T.

We split typeAssertConstraint y=x.(T) into two constraints:
1) typeFilter, for when T is an interface type and no
   representation change occurs.
2) unpack, for when T is a concrete type and the payload of the
   tagged object is extracted.  This constraint has an 'exact'
   parameter indicating whether to use the predicate
   IsIdentical (for type assertions) or
   IsAssignable (for reflect operators).

+ Tests.

R=crawshaw
CC=golang-dev
https://golang.org/cl/14547043"
alandonovan,2013-10-14 17:48:34,https://api.github.com/repos/golang/tools/git/commits/1ff3452afa8d27e12d5f8de0719012f08881af2d,1ff3452afa8d27e12d5f8de0719012f08881af2d,"go.tools/ssa: unexport Register.

R=gri
CC=golang-dev
https://golang.org/cl/14672043"
minux,2013-10-14 02:22:48,https://api.github.com/repos/golang/tools/git/commits/1e6b0db4b9198eeb1613d496d3fca84f5f1e617b,1e6b0db4b9198eeb1613d496d3fca84f5f1e617b,"go.tools/godoc/static: fix &amp; escape in codewalks

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/14426053"
griesemer,2013-10-11 21:27:44,https://api.github.com/repos/golang/tools/git/commits/60c505c95ced022e610d98c043067de638779872,60c505c95ced022e610d98c043067de638779872,"go.tools/go/types: fix recorded type for append(s, ""foo""...)

R=adonovan
CC=golang-dev
https://golang.org/cl/14512057"
alandonovan,2013-10-11 19:34:19,https://api.github.com/repos/golang/tools/git/commits/aff951c80f02f909dbff86eafa3e1a5993095bbe,aff951c80f02f909dbff86eafa3e1a5993095bbe,"go.tools/pointer: more reflection operators.

(reflect.Value).Bytes
(reflect.Value).Elem
(reflect.Value).Index
(reflect.Value).SetBytes
(reflect.Value).Slice
reflect.PtrTo
reflect.SliceOf

+ Tests.

Also: comment out an 'info-'level print statement in the test; it was distracting.

R=crawshaw
CC=golang-dev
https://golang.org/cl/14454055"
griesemer,2013-10-11 19:26:31,https://api.github.com/repos/golang/tools/git/commits/271af2c14956a63ece7cfedf5a83da68e44b669b,271af2c14956a63ece7cfedf5a83da68e44b669b,"go.tools/importer: delete BuiltinCallSignature

This functionality is now provided by go/types.

R=adonovan
CC=golang-dev
https://golang.org/cl/14489045"
alandonovan,2013-10-11 19:18:21,https://api.github.com/repos/golang/tools/git/commits/7e4be2f6bc2de129d1835d35c4b132cce3c805e9,7e4be2f6bc2de129d1835d35c4b132cce3c805e9,"go.tools/importer: crude fix for race condition.

Revision 8f2c714c6d97 made the 'imports' map per-typechecker,
not per package, breaking an assumption of doImport0.  This
API needs a rethink for a number of reasons, some of which are
noted in this CL.

R=gri
CC=golang-dev
https://golang.org/cl/14606044"
robpike,2013-10-11 17:32:36,https://api.github.com/repos/golang/tools/git/commits/e4256a40f42110a8d7338dbdc75ec0ff42f5343d,e4256a40f42110a8d7338dbdc75ec0ff42f5343d,"go.tools/cmd/cover: for range loops might contain function literals
Break the basic block at the function literal. The code to do this analysis
was already there; this CL just factors it out more nicely and uses it in
one new place. Also adds a test.

Fixes golang/go#6555.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/14601043"
griesemer,2013-10-11 17:04:10,https://api.github.com/repos/golang/tools/git/commits/0c4522091728c38bf1b9f0ddb94376d08a2be22a,0c4522091728c38bf1b9f0ddb94376d08a2be22a,"go.tools/go/types: record call-site specific types of built-in functions

Given a built-in call f(args), Info.Types now maps f to the call-site
specific type of f (by looking at the argument types) if the built-in
call is not producing a constant (at typecheck time) result. If the
result is constant, the recorded type is invalid (a back-end won't
need it).

R=adonovan
CC=golang-dev
https://golang.org/cl/14598045"
adg,2013-10-11 01:36:50,https://api.github.com/repos/golang/tools/git/commits/7b481db5061faa008a3d0f8a79c3019ed9dbaabe,7b481db5061faa008a3d0f8a79c3019ed9dbaabe,"go.tools/cmd/godoc: search go.tools/cmd for command docs

Update golang/go#6527

R=r, dsymonds
CC=golang-dev
https://golang.org/cl/14526053"
adg,2013-10-11 00:13:58,https://api.github.com/repos/golang/tools/git/commits/ce4c62719270444624bda2cd81e9556ed496273f,ce4c62719270444624bda2cd81e9556ed496273f,"go.tools/cmd/cover: move docs to separate doc.go

The doc.go files will be copied into the binary distributions'
source tree that ""godoc cover"" works.

R=r
CC=golang-dev
https://golang.org/cl/14599045"
alandonovan,2013-10-10 19:29:24,https://api.github.com/repos/golang/tools/git/commits/f5b337da553ca705f9a7813a724d27ef55eac3d7,f5b337da553ca705f9a7813a724d27ef55eac3d7,"go.tools/cmd/cover: preserve comments, as other build tools may need ""// +build"" directives.

Also: fix a crash when a file already contains 'import ""sync/atomic""'.

R=r, gri
CC=golang-dev
https://golang.org/cl/14441052"
griesemer,2013-10-10 18:05:46,https://api.github.com/repos/golang/tools/git/commits/579c61d653de0000e117b12a5fe268d6253193f8,579c61d653de0000e117b12a5fe268d6253193f8,"go.tools/go/types: more robust handling of ... errors with built-ins

Catch ... errors earlier and in case of error, type-check all
arguments anyway for better type reporting and fewer ""declared
but not used"" errors.

R=adonovan
CC=golang-dev
https://golang.org/cl/14600043"
griesemer,2013-10-10 17:46:54,https://api.github.com/repos/golang/tools/git/commits/f54303d6cb4e8139ec008d32a59f10a74803afea,f54303d6cb4e8139ec008d32a59f10a74803afea,"to.tools/go/types: check invalid use of ... with built-ins

R=adonovan
CC=golang-dev
https://golang.org/cl/14531047"
alandonovan,2013-10-10 17:34:24,https://api.github.com/repos/golang/tools/git/commits/548052f0fa0864d98fa7b22446fd1385eaaf74cc,548052f0fa0864d98fa7b22446fd1385eaaf74cc,"go.tools/importer: honor the client's TypeChecker.{Import,Error} values.

This requires us to make a copy of (not clobber) the supplied
config, and retain their Import hook separately so that it can
be wrapped by Importer.doImport.

Fixes bug 6562.

R=gri
CC=golang-dev
https://golang.org/cl/14523054"
alandonovan,2013-10-10 17:33:29,https://api.github.com/repos/golang/tools/git/commits/e1e9089196427c2b665aced3632e0a26b97cb16d,e1e9089196427c2b665aced3632e0a26b97cb16d,"go.tools/importer: change type of print{,ln} built-ins.

Before: func(any, ...interface{}).
After:  func(any, ...any)

They are no longer variadic, so you can't write print(x, y...).

(Recall that print(1) and print(interface{}(1)) behave
differently and that this is useful.)

Fixes bug 6560

R=gri
CC=golang-dev
https://golang.org/cl/14455054"
alandonovan,2013-10-10 16:37:49,https://api.github.com/repos/golang/tools/git/commits/9cce4759bba93c94be72d233d2080d3e39261f6d,9cce4759bba93c94be72d233d2080d3e39261f6d,"go.tools/importer: expose CreatePackage method.

The new method is functionally identical to typeCheck, and
obviates the LoadMainPackage method.

Updated all clients.

Fixes bug 6561.

R=gri
CC=golang-dev
https://golang.org/cl/14494051"
griesemer,2013-10-10 16:02:54,https://api.github.com/repos/golang/tools/git/commits/7ca228a514cc98bf6e9a4a6e84a8aaca97e19145,7ca228a514cc98bf6e9a4a6e84a8aaca97e19145,"go.tools/go.types: more missing assigment checks implemented

Assignments to ""comma, ok"" expressions on the lhs of an
assignment are not permitted unless we have map index
""comma, ok"" expression. Created new operand mode 'mapindex'
to distinguish this case. Renamed mode 'valueok' to the more
commonly used 'commaok' term, which also makes it easier to
distinguish from simply 'value'.

Added corresponding tests.

Fixes a TODO.

R=adonovan
CC=golang-dev
https://golang.org/cl/14526049"
griesemer,2013-10-09 21:17:25,https://api.github.com/repos/golang/tools/git/commits/f50f6c858a0ca8a95eb4fa06ece82e1783810081,f50f6c858a0ca8a95eb4fa06ece82e1783810081,"go.tools/go/types: nil is not a constant + misc. cleanups

- removed support for nil constants from go/exact
- instead define a singleton Nil Object (the nil _value_)
- in assignments, follow more closely spec wording
  (pending spec CL 14415043)
- removed use of goto in checker.unary
- cleanup around handling of isRepresentable for
  constants, with better error messages
- fix missing checks in checker.convertUntyped
- added isTyped (== !isUntyped) and isInterface predicates
- fixed hasNil predicate: unsafe.Pointer also has nil
- adjusted ssa per adonovan
- implememted types.Implements (wrapper arounfd types.MissingMethod)
- use types.Implements in vet (and fix a bug)

R=adonovan, r
CC=golang-dev
https://golang.org/cl/14438052"
alandonovan,2013-10-09 20:35:59,https://api.github.com/repos/golang/tools/git/commits/9c8d9fe73695f57ffb16a2880361be7fd9f95f44,9c8d9fe73695f57ffb16a2880361be7fd9f95f44,"go.tools/pointer: support reflect.Method{,ByName}.

R=crawshaw
CC=golang-dev
https://golang.org/cl/14589043"
robpike,2013-10-09 18:47:05,https://api.github.com/repos/golang/tools/git/commits/3edc3b18a961c6ad06a421ee87cb53488f287654,3edc3b18a961c6ad06a421ee87cb53488f287654,"go.tools/README: update to make truthful
The old README was misleading, saying the packages were not of interest.

R=golang-dev, iant
CC=golang-dev
https://golang.org/cl/14516051"
alandonovan,2013-10-09 16:47:30,https://api.github.com/repos/golang/tools/git/commits/e590cdbdf82e269f7a656c200951b165d34c413c,e590cdbdf82e269f7a656c200951b165d34c413c,"go.tools/ssa: doc tweaks + a sanity check.

R=gri
CC=golang-dev
https://golang.org/cl/14454053"
alandonovan,2013-10-09 16:41:55,https://api.github.com/repos/golang/tools/git/commits/2299ac6bf31d4fe46b7fb3523771921212e31558,2299ac6bf31d4fe46b7fb3523771921212e31558,"go.tools/pointer: make sole callsite available to intrinsics in non-shared contours.

This information can be used to specialize such calls, e.g.
- report location of unsound calls (done for reflect.NewAt)
- exploit argument information (done for constant 'dir' parameter to reflect.ChanOf)

+ tests.

R=crawshaw
CC=golang-dev
https://golang.org/cl/14517046"
alandonovan,2013-10-08 18:35:39,https://api.github.com/repos/golang/tools/git/commits/cd908f1108c2dbb1b260e9f8953dbb3530a2c9ed,cd908f1108c2dbb1b260e9f8953dbb3530a2c9ed,"go.tools/ssa/interp: capture stdout/err of target programs and check for ""BUG"".

The $GOROOT/tests may print ""BUG"" on failure but do not
necessarily exit zero, so we must capture their output too.

Details:
- make plan9 use unix's valueToBytes function (now in externals.go)
- direct the target's syscall.Write and print/println built-ins to a new utility, write().  This may capture the output into a global variable.

R=gri, r
CC=golang-dev
https://golang.org/cl/14550044"
alandonovan,2013-10-08 16:31:39,https://api.github.com/repos/golang/tools/git/commits/068f01709207fc87c62be6817e429a33c4dd34f9,068f01709207fc87c62be6817e429a33c4dd34f9,"go.tools/ssa: s/Ret/Return/g

R=gri
CC=golang-dev
https://golang.org/cl/14526044"
alandonovan,2013-10-08 14:34:36,https://api.github.com/repos/golang/tools/git/commits/8ae5d36d2aa529fc2c3706f23cb6c15c61d0b22f,8ae5d36d2aa529fc2c3706f23cb6c15c61d0b22f,"go.tools: clear DeclarationErrors flag; it's redundant w.r.t go/types checking.

R=gri
CC=golang-dev
https://golang.org/cl/14147043"
tw4452852,2013-10-08 05:55:56,https://api.github.com/repos/golang/tools/git/commits/da6f00a60b87392dc9207dc60cf1c1a18451cc18,da6f00a60b87392dc9207dc60cf1c1a18451cc18,"go.tools/blog: replace ""\\"" with ""/"" in path string to be compatible with windows platform

Fixes golang/go#6539

The problem happens on my win7,
for example, the path is ""/content\\foo.article"".
It leads to the wrong link in generated html page.
So I think we should replace all""\\"" with ""/"" in path string at first.

R=golang-dev, dsymonds, mirtchovski, dave, adg, alex.brainman
CC=golang-dev
https://golang.org/cl/14023043"
griesemer,2013-10-08 03:27:21,https://api.github.com/repos/golang/tools/git/commits/5d9b86d6ce8c08bcda760f7c4153a530bd30957a,5d9b86d6ce8c08bcda760f7c4153a530bd30957a,"go.tools/go/types: range iteration variables are typed (not untyped)

R=adonovan
CC=golang-dev
https://golang.org/cl/14516044"
dominikh,2013-10-07 18:10:36,https://api.github.com/repos/golang/tools/git/commits/d5044c7ed254fc8a60eacad27641b931bd4e790b,d5044c7ed254fc8a60eacad27641b931bd4e790b,"go.tools/cmd/vet: Update canonical method check for new xml.Marshaler/Unmarshaler interfaces

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/14484043"
paranoiacblack,2013-10-07 16:06:32,https://api.github.com/repos/golang/tools/git/commits/1d4de002928445a5da3c643c00978075e9c89d62,1d4de002928445a5da3c643c00978075e9c89d62,"go.tools/dashboard: clone main repo from local path if it already exists locally.

R=adg, minux.ma
CC=golang-dev
https://golang.org/cl/14462049"
alandonovan,2013-10-04 20:52:12,https://api.github.com/repos/golang/tools/git/commits/eb632ebaca4938163b57354169ee35df8af057f4,eb632ebaca4938163b57354169ee35df8af057f4,"go.tools/ssa/interp: enable tests of builtin(f()) where f has multiple results.

R=gri
CC=golang-dev
https://golang.org/cl/14408043"
griesemer,2013-10-04 20:32:21,https://api.github.com/repos/golang/tools/git/commits/5d0990f59113fba1f010aaa8e96b683045ad5bfb,5d0990f59113fba1f010aaa8e96b683045ad5bfb,"go.tools/go/types: built-in calls of the form builtin(f())

- factor out argument extraction logic
- cleaned up error handling in builtin.go (no need for goto's anymore)
- lots of additional test cases
- various cleanups, better documentation

Fixes golang/go#5795.

R=adonovan
CC=golang-dev
https://golang.org/cl/14312044"
mreiferson,2013-10-04 01:46:57,https://api.github.com/repos/golang/tools/git/commits/6af036a65900426f1eaa9302d5e43b9eb6ab81b0,6af036a65900426f1eaa9302d5e43b9eb6ab81b0,"go.tools/vcs: allow compilation with go 1.0

It would be nice to be able to use this package
as a dependency (or other go utilities in the
ecosystem that depend on this package) in
environments which have not (or cannot) for
whatever reason upgraded to newer versions of
golang.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/14283043"
adg,2013-10-03 23:49:25,https://api.github.com/repos/golang/tools/git/commits/c8494e30f94ff25da61e0724b76a1a6151039dae,c8494e30f94ff25da61e0724b76a1a6151039dae,"go.tools/godoc/redirect: remove redundant redirect rules

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/14365043"
adg,2013-10-03 23:48:07,https://api.github.com/repos/golang/tools/git/commits/0ccb6234c3a341ba1197452410dcbdaf86d2eeb9,0ccb6234c3a341ba1197452410dcbdaf86d2eeb9,"undo CL 14368043 / 7750fc1a6bd2

Not the right approach.

««« original CL description
go.tools/godoc: reverse reversed redirects

Make godoc work again for go spec and memory model doc.

TBR=rsc
CC=golang-dev
https://golang.org/cl/14368043
»»»

R=gri
CC=golang-dev
https://golang.org/cl/14370043"
robpike,2013-10-03 23:37:34,https://api.github.com/repos/golang/tools/git/commits/51613a10d7b19e2f3024b2da2ca0cea7167d62de,51613a10d7b19e2f3024b2da2ca0cea7167d62de,"go.tools/cmd/cover: sort the file names in the output presentation
Present the files in lexical order so the output is reproducible
and easier to navigate. Do a little type rearrangement to simplify
things while we're there.

R=adg
CC=golang-dev
https://golang.org/cl/14357043"
griesemer,2013-10-03 23:36:34,https://api.github.com/repos/golang/tools/git/commits/40ede1040a8cd681e930eb721783241e36c56bf6,40ede1040a8cd681e930eb721783241e36c56bf6,"go.tools/godoc: reverse reversed redirects

Make godoc work again for go spec and memory model doc.

TBR=rsc
CC=golang-dev
https://golang.org/cl/14368043"
rsc,2013-10-03 17:41:38,https://api.github.com/repos/golang/tools/git/commits/5785dc19d763fd751e0ab22b6c6d09975bafe758,5785dc19d763fd751e0ab22b6c6d09975bafe758,"godoc: redirect bogus /doc/spec links to /ref/spec

It was not enough to make /ref/spec work (which it now does),
because some of the docs on golang.org (in particular golang.org/doc)
are pulled from tip, and tip links to /doc/spec now.
Make those ""too new"" links work by redirecting /doc/spec
back to /ref/spec for now.

TBR=adg
CC=golang-dev
https://golang.org/cl/14348043"
rsc,2013-10-03 17:16:17,https://api.github.com/repos/golang/tools/git/commits/c11b695c55e7f2714f76e9fac98680fd70dbcbd2,c11b695c55e7f2714f76e9fac98680fd70dbcbd2,"go.tools/godoc: remove Go 1.2 redirects

They are breaking golang.org
(try loading golang.org/ref/spec).

TBR=adg
CC=golang-dev
https://golang.org/cl/14165044"
adg,2013-10-03 08:10:57,https://api.github.com/repos/golang/tools/git/commits/dcad628c68b73107cab156498aa4a745862b7d12,dcad628c68b73107cab156498aa4a745862b7d12,"go.tools/cmd/blog: handle ""/blog/"" redirect properly

The redirect.PrefixHandler redirects ""/foo/"" to ""/foo"", which is what
we want in most cases (""/cl/"", ""/change/"", etc) but not here.
So wrap it with a handler that handles ""/blog/"" explictly.

R=dsymonds
CC=golang-dev
https://golang.org/cl/14326043"
adg,2013-10-03 05:07:29,https://api.github.com/repos/golang/tools/git/commits/228e3cbbaa01bc2499ca20d9566733175097e24c,228e3cbbaa01bc2499ca20d9566733175097e24c,"go.tools/blog: remove playground package import

This is the responsibility of the godoc or blog binary,
not the blog package.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/14323043"
adg,2013-10-03 04:29:16,https://api.github.com/repos/golang/tools/git/commits/3a3a7657825036bba3803df3a95cfc1996bf59ef,3a3a7657825036bba3803df3a95cfc1996bf59ef,"go.tools/cmd/godoc: fix app engine version; update build script and readme

R=golang-dev, dsymonds, bradfitz
CC=golang-dev
https://golang.org/cl/12897045"
rsc,2013-10-03 02:08:24,https://api.github.com/repos/golang/tools/git/commits/1d95d02fef91ccb91bc4829424af56a3d907ea31,1d95d02fef91ccb91bc4829424af56a3d907ea31,"go.tools/cmd/godoc: point at doc.ToHTML documentation for formatting rules

Fixes golang/go#5429.

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/14292043"
griesemer,2013-10-02 23:53:34,https://api.github.com/repos/golang/tools/git/commits/b9b3bed16ed609a680fab3bdd19d12ada7e0ae98,b9b3bed16ed609a680fab3bdd19d12ada7e0ae98,"go.tools/go/types: fix build (gc export format changed)

Revision f280b8a485fd of the std library changed the
gc export format: anonymous fields may be qualified
with a package.

R=rsc
TBR=rsc
CC=golang-dev
https://golang.org/cl/14312043"
paranoiacblack,2013-10-02 22:56:27,https://api.github.com/repos/golang/tools/git/commits/63365376dbf845e7479f29d363685d84a8137b1f,63365376dbf845e7479f29d363685d84a8137b1f,"go.tools/dashboard: Don't keep unversioned directories in gcc copy.

`svn update` would fail if the updated files were in the gcc/libgo or gcc/go/gofrontend because unrevisioned versions of those files had been inserted in the last build of gcc.

R=adg, adg
CC=golang-dev
https://golang.org/cl/14299043"
paranoiacblack,2013-10-02 22:55:44,https://api.github.com/repos/golang/tools/git/commits/691b055ea6021b671bca699146fc7442207bde0a,691b055ea6021b671bca699146fc7442207bde0a,"go.tools/dashboard: Make sure links to commits and logs are dashboard specific.

R=adg
CC=golang-dev
https://golang.org/cl/14297043"
adg,2013-10-02 03:13:34,https://api.github.com/repos/golang/tools/git/commits/401293d22cc22966d6ce9e16f021f01812fe86a2,401293d22cc22966d6ce9e16f021f01812fe86a2,"go.tools/godoc: provide an explicit mux to register redirects

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/14199043"
griesemer,2013-10-02 01:14:15,https://api.github.com/repos/golang/tools/git/commits/a32c2633d024cb1869f6ee20545ddeb95f80e965,a32c2633d024cb1869f6ee20545ddeb95f80e965,"go.tools/go/types: complete checking of append built-in

R=adonovan
CC=golang-dev
https://golang.org/cl/14238043"
nilnilnil,2013-10-02 01:02:33,https://api.github.com/repos/golang/tools/git/commits/d7d04a24e84baff5591db639c584e6ba0fef0f35,d7d04a24e84baff5591db639c584e6ba0fef0f35,"present/code.go: remove residual file from an hg merge.

R=adg
CC=golang-dev
https://golang.org/cl/14043043"
alandonovan,2013-10-01 14:17:26,https://api.github.com/repos/golang/tools/git/commits/2bd0ec31c0da1eef33aa124836972a2cc238a675,2bd0ec31c0da1eef33aa124836972a2cc238a675,"go.tools/oracle: fix minor but confusing bug in test driver.

Since rev 4c5f46cc7b9d, error messages no longer contain
""file:line:col: "" prefixes, so applying stripLocation to them
is incorrect.

Also: add rationale comment to callgraph2.go test.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13888044"
alandonovan,2013-10-01 13:46:33,https://api.github.com/repos/golang/tools/git/commits/ae060fe8496898021dea04ae41c6653712523296,ae060fe8496898021dea04ae41c6653712523296,"go.tools/pointer: make os.Args point to something.

Since the Go runtime treats it specially, so must the pointer analysis.

Details:
- Combine object.{val,typ} fields into 'data interface{}'.
  It may now hold a string, describing an instrinsically
  allocated object such as the command-line args.
- extend Label accordingly; add Label.ReflectType() accessor.

Also: document pointer analysis algorithm classification.

R=crawshaw
CC=golang-dev
https://golang.org/cl/14156043"
adg,2013-10-01 06:32:13,https://api.github.com/repos/golang/tools/git/commits/d20f86cc8e30eb09a90497e5a01c4f97ada5b445,d20f86cc8e30eb09a90497e5a01c4f97ada5b445,"go.tools/godoc: move redirect helpers to new package

Update golang/go#6512

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/14193043"
griesemer,2013-10-01 04:47:05,https://api.github.com/repos/golang/tools/git/commits/35e395da0978977af81eb64b5261755fe3ee9b15,35e395da0978977af81eb64b5261755fe3ee9b15,"go.tools/go/types: more flexible error checking

- permit ERROR markers to be in full or line comments
- don't require """"s in /* ERROR ""foo"" */
- enable more std tests
- some minor cleanups

R=adonovan
CC=golang-dev
https://golang.org/cl/14169044"
adg,2013-10-01 02:11:47,https://api.github.com/repos/golang/tools/git/commits/f8e922be8efeabd06a510065ca5836b62fa10b9a,f8e922be8efeabd06a510065ca5836b62fa10b9a,"go.tools/godoc/static: make this the canonical source for playground JS

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/14184043"
adg,2013-10-01 01:20:35,https://api.github.com/repos/golang/tools/git/commits/04d74c081e17cc03fa16bca5c1ae7e6a65ae8718,04d74c081e17cc03fa16bca5c1ae7e6a65ae8718,"go.tools: sync play.js from go.talks

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/14177043"
adg,2013-10-01 00:43:07,https://api.github.com/repos/golang/tools/git/commits/c635598ddf066c3aa203cdb0658d74ce85f2f2d8,c635598ddf066c3aa203cdb0658d74ce85f2f2d8,"go.tools: sync play.js with go.talks

R=golang-dev
CC=golang-dev
https://golang.org/cl/14167044"
griesemer,2013-09-30 21:03:33,https://api.github.com/repos/golang/tools/git/commits/c92471fb8564bcdcbad7b3e6d7acc4c0ae9aea50,c92471fb8564bcdcbad7b3e6d7acc4c0ae9aea50,"go.tools/go/types: improved error messages for invalid labels

In general, if a break or continue label is not found, we don't
know if a correspondingly named label was not declared, was declared
but is not visible, or will be declared (and won't be visible).
Complain about ""invalid"" rather than ""not declared"" label.

Added more tests.

R=adonovan
CC=golang-dev
https://golang.org/cl/14149043"
griesemer,2013-09-30 19:59:02,https://api.github.com/repos/golang/tools/git/commits/49904d9a2c8656bd35752428024cfefddebe7779,49904d9a2c8656bd35752428024cfefddebe7779,"go.tools/cmd/gotype: use go/types identifier resolution

R=adonovan
CC=golang-dev
https://golang.org/cl/14146043"
griesemer,2013-09-30 18:05:30,https://api.github.com/repos/golang/tools/git/commits/3daa579643df3a1d3c0d1d3834a37edb975389c4,3daa579643df3a1d3c0d1d3834a37edb975389c4,"go.tools/go/types: implement label checks

R=adonovan
CC=golang-dev
https://golang.org/cl/14036046"
alandonovan,2013-09-30 16:39:54,https://api.github.com/repos/golang/tools/git/commits/06c41924236c0b3287b17ed251d87f6976f90e57,06c41924236c0b3287b17ed251d87f6976f90e57,"go.tools/pointer: minor API simplifications.

Details:
- Warnings are reported as values in Result, not a callback in Config.
- remove TODO to eliminate Print callback.  It's better than the alternative.
- remove unused Config.root field.
- hang Result off analysis object (impl. detail)
- reword TODO.

R=crawshaw
CC=golang-dev
https://golang.org/cl/14128043"
griesemer,2013-09-27 20:43:11,https://api.github.com/repos/golang/tools/git/commits/0730d79f0fb1c2ccaf89e3a3d699910f47cd2aaa,0730d79f0fb1c2ccaf89e3a3d699910f47cd2aaa,"go.tools/go/types: check unlabeled break, continue statements

This CL temporarily removes some preliminary label checks.
They will be implemented completely in a subsequent CL.

R=adonovan
CC=golang-dev
https://golang.org/cl/14055043"
griesemer,2013-09-27 16:33:00,https://api.github.com/repos/golang/tools/git/commits/27b698bc2a69e30dd13df20576181031863d6e8d,27b698bc2a69e30dd13df20576181031863d6e8d,"go.tools/go/types: x.f is addressable if x is addressable or x.f contains an indirection

Fixes golang/go#6487.

R=adonovan
CC=golang-dev
https://golang.org/cl/14047043"
alandonovan,2013-09-27 15:33:01,https://api.github.com/repos/golang/tools/git/commits/5b55a710084c82c845da40e3c94daec00e7adff5,5b55a710084c82c845da40e3c94daec00e7adff5,"go.tools/pointer: strength reduction during constraint generation.

Motivation: simple constraints---copy and addr---are more
amenable to pre-solver optimizations (forthcoming) than
complex constraints: load, store, and all others.

In code such as the following:

         t0 = new struct { x, y int }
         t1 = &t0.y
         t2 = *t1

there's no need for the full generality of a (complex)
load constraint for t2=*t1 since t1 can only point to t0.y.
All we need is a (simple) copy constraint t2 = (t0.y)
where (t0.y) is the object node label for that field.

For all ""addressable"" SSA instructions, we tabulate
whether their points-to set is necessarily a singleton.  For
some (e.g. Alloc, MakeSlice, etc) this is always true by
design.  For others (e.g. FieldAddr) it depends on their
operands.

We exploit this information when generating constraints:
all load-form and store-form constraints are reduced to copy
constraints if the pointer's PTS is a singleton.
Similarly all FieldAddr (y=&x.f) and IndexAddr (y=&x[0])
constraints are reduced to offset addition, for singleton
operands.

Here's the constraint mix when running on the oracle itself.
The total number of constraints is unchanged but the fraction
that are complex has gone down to 21% from 53%.

                before    after
--simple--
 addr		20682     46949
 copy        	61454     91211
--complex--
 offsetAddr  	41621     15325
 load        	18769     12925
 store       	30758     6908
 invoke      	758       760
 typeAssert  	1688      1689
total           175832    175869

Also:
- Add Pointer.Context() for local variables,
  since we now plumb cgnodes throughout. Nice.
- Refactor all load-form (load, receive, lookup) and
  store-form (Store, send, MapUpdate) constraints to use
  genLoad and genStore.
- Log counts of constraints by type.
- valNodes split into localval and globalval maps;
  localval is purged after each function.
- analogous maps localobj[v] and globalobj[v] hold sole label
  for pts(v), if singleton.
- fnObj map subsumed by globalobj.
- make{Function/Global/Constant} inlined into objectValue.
  Much cleaner.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13979043"
griesemer,2013-09-27 03:34:35,https://api.github.com/repos/golang/tools/git/commits/ca3d62b66d299ac0baa7cf969d117bb8100af731,ca3d62b66d299ac0baa7cf969d117bb8100af731,"go.tools/go/types: fix incorrect argument to fmt.Printf

(found by r using the vet tool)

R=adonovan
CC=golang-dev
https://golang.org/cl/14013043"
adg,2013-09-27 00:40:53,https://api.github.com/repos/golang/tools/git/commits/0ebdd2c316785bb26ea54c04c0e76a4b51d1dfcb,0ebdd2c316785bb26ea54c04c0e76a4b51d1dfcb,"go.tools/cmd/html2article: move command from go.blog repository

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/14009043"
adg,2013-09-26 23:46:08,https://api.github.com/repos/golang/tools/git/commits/88be67fd252b81af8d10a9c0ae3216c314996f62,88be67fd252b81af8d10a9c0ae3216c314996f62,"go.tools/present: add -edit and -numbers flags to .code/.play

Also update style.css to hide outline of editable text areas and apply
correct styles to line numbers in non-playground snippets.

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/13946043"
rsc,2013-09-26 16:45:44,https://api.github.com/repos/golang/tools/git/commits/577fe73c91942e11c19d8755d95729c7964759b3,577fe73c91942e11c19d8755d95729c7964759b3,"go.tools/go/types: fix build for Go 1.1 users

Fixes golang/go#6485.

R=gri
CC=golang-dev
https://golang.org/cl/13901045"
alandonovan,2013-09-26 13:31:39,https://api.github.com/repos/golang/tools/git/commits/d7287a0289ad3d16724a21a58b7811e8eca23615,d7287a0289ad3d16724a21a58b7811e8eca23615,"go.tool.pointer: fix regression in pointer.cgraph.Root().

The previous CL made the assumption that Root is the first
node, which is false for programs that import ""reflect"".
Reverted to the previous way: an explicit root field.

Added regression test (callgraph2) via oracle.

R=crawshaw
TBR=crawshaw
CC=golang-dev
https://golang.org/cl/13967043"
alandonovan,2013-09-25 21:17:42,https://api.github.com/repos/golang/tools/git/commits/785cfaa9387bd2960874108740de435baa534b4c,785cfaa9387bd2960874108740de435baa534b4c,"go.tools/pointer: use new callgraph API.

Also: pointer.Analyze now returns a pointer.Result object,
containing the callgraph and the results of ssa.Value queries.

The oracle has been updated to use the new call and pointer APIs.

R=crawshaw, gri
CC=golang-dev
https://golang.org/cl/13915043"
alandonovan,2013-09-25 18:34:39,https://api.github.com/repos/golang/tools/git/commits/3a4c0462d8842bea76f76bb69a6c5ac86a8c8f8f,3a4c0462d8842bea76f76bb69a6c5ac86a8c8f8f,"go.tools/oracle: change -mode argument into subcommand.

e.g. ""oracle callgraph <package>""

Also: simplified error handling.
Eliminated oracle.errorf because it prepends ""file:line:col: ""
to the error message so the main function can't safely prepend ""Error: "".
The position wasn't interesting though: it was just -pos, more or less.

R=crawshaw, dominik.honnef, r
CC=golang-dev
https://golang.org/cl/13864044"
alandonovan,2013-09-25 18:16:35,https://api.github.com/repos/golang/tools/git/commits/39779f52c3b0f4fd599b49250293eb5d50626e12,39779f52c3b0f4fd599b49250293eb5d50626e12,"go.tools/call: a callgraph API.

This package provides a simple abstraction of a call graph,
capable of representing context sensitive and insensitive
graphs.  It also provides some basic utilities and algorithms.

This simplifies clients such as the oracle, and makes similar
clients (e.g. an offline version of the oracle) easier to write.

R=crawshaw, gri
CC=golang-dev
https://golang.org/cl/13901044"
griesemer,2013-09-25 17:19:24,https://api.github.com/repos/golang/tools/git/commits/a6c151c04db078d856d9bae182646c11f4662a1b,a6c151c04db078d856d9bae182646c11f4662a1b,"go.tools/go/types: (panic(0)) (parenthesized) is a terminating statement

R=adonovan
CC=golang-dev
https://golang.org/cl/13913043"
griesemer,2013-09-25 17:15:40,https://api.github.com/repos/golang/tools/git/commits/9d1c551b43ea6be8b9d68711c9ef0351c5132212,9d1c551b43ea6be8b9d68711c9ef0351c5132212,"go.tools/go/types: check 3-index slice expressions

R=adonovan
CC=golang-dev
https://golang.org/cl/13881043"
paranoiacblack,2013-09-24 23:08:25,https://api.github.com/repos/golang/tools/git/commits/b25f3012f3d43ee1c6d4af40423bdf9e4017a1fc,b25f3012f3d43ee1c6d4af40423bdf9e4017a1fc,"go.tools/dashboard/builder: only download gcc once for gccgo buildTool.

Downloading the GCC repo takes a lot of time and everything works fine if we just store it in the buildRoot and reuse it.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/13583045"
griesemer,2013-09-24 19:51:45,https://api.github.com/repos/golang/tools/git/commits/dfaa5cc0c12136685290a47a2aa6397f63615338,dfaa5cc0c12136685290a47a2aa6397f63615338,"go.tools/go/types: test case for issue 6413

Fixes golang/go#6413.

R=adonovan
CC=golang-dev
https://golang.org/cl/13840047"
griesemer,2013-09-24 19:22:04,https://api.github.com/repos/golang/tools/git/commits/bce88d26eaaa7ae8216f0e8d8fac6495e032222a,bce88d26eaaa7ae8216f0e8d8fac6495e032222a,"go.tools/go/types: improved operand printing in error messages

Also:
- removed operand.val hack for built-in encoding; added id field
- minor cleanups

R=adonovan
CC=golang-dev
https://golang.org/cl/13840046"
alandonovan,2013-09-24 19:08:14,https://api.github.com/repos/golang/tools/git/commits/37f76edde8d59c1d3ed56e7339a6e81115c86a6d,37f76edde8d59c1d3ed56e7339a6e81115c86a6d,"go.tools/oracle: support -format=xml (for Eclipse)

This CL is mostly a renaming s/json/serial/, abstracting the
oracle package away from any particular data syntax.  (The
encoding/* machinery is very clean; clearly I should have
structured it this way from the outset.)

Supporting XML then becomes a one-liner in cmd/oracle/main.go.

Also: call MarshalIndent(), not Marshall() then Indent().

R=crawshaw
CC=golang-dev
https://golang.org/cl/13858046"
paranoiacblack,2013-09-24 00:18:31,https://api.github.com/repos/golang/tools/git/commits/1d4127908622a63189ebba543fb33cd374efdee5,1d4127908622a63189ebba543fb33cd374efdee5,"go.tools/dashboard: fix Repo creation in buildSubRepo to have valid Master repo.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/13568047"
paranoiacblack,2013-09-24 00:06:49,https://api.github.com/repos/golang/tools/git/commits/7bcc81e644943902376514087b32ac02bb3ef6d0,7bcc81e644943902376514087b32ac02bb3ef6d0,"go.tools/dashboard: add gccgo build dashboard.

This change adds a new build dashboard url to the existing appengine app: $dashurl/gccgo/ which will show the build status of gccgo.
* Added Dashboard struct with exported Name, Rel(ative)Path, and Packages fields.
* Added Dashboard Context method that returns an appengine context with a namespace corresponding to the dashboard's name.
* Modified HandlerFuncs to use Dashboard's Context method for all appengine requests.
* Modified ui template to show different title/header for separate dashboard and added dashboard tab.

R=adg
CC=golang-dev
https://golang.org/cl/13753043"
griesemer,2013-09-23 22:39:11,https://api.github.com/repos/golang/tools/git/commits/0e6d095d1187dbd1fdf4da0cd452d72b4047fa26,0e6d095d1187dbd1fdf4da0cd452d72b4047fa26,"go.tools/go/types: better error messages for invald expression statements

Also: removed some dynamic print formats.

R=adonovan
CC=golang-dev
https://golang.org/cl/13849043"
alandonovan,2013-09-23 22:18:35,https://api.github.com/repos/golang/tools/git/commits/318b83e376c68e02256517e1709d3e3c0e561a2f,318b83e376c68e02256517e1709d3e3c0e561a2f,"go.tools/ssa: SSA fixes for *types.Builtin becoming an object (CL 13813043)

R=gri
CC=golang-dev
https://golang.org/cl/13848043"
griesemer,2013-09-23 22:14:17,https://api.github.com/repos/golang/tools/git/commits/a05da76c7b5c297d32abf7aa836a9efabbadabe9,a05da76c7b5c297d32abf7aa836a9efabbadabe9,"go.tools/go/types: represent built-ins as Objects (rather than types)

This change affects the API: Func objects now always have a *Signature
as type (never a *Builtin). Instead, built-ins now appear as *Builtin
objects. Only the built-in name is exposed, other fields are now private
to go/types.

Several bugs are fixed:
- correctly checking for built-ins permitted in statement context
- expression statements that are calls are not type-checked twice anymore
- go/defer statements report call types and provide good error messages now

This CL will briefly break the build until CL 13848043 is submitted.

R=adonovan
CC=golang-dev
https://golang.org/cl/13813043"
alandonovan,2013-09-23 20:13:01,https://api.github.com/repos/golang/tools/git/commits/3371b79a961d3e788e9471bbb483194f12ecc4c5,3371b79a961d3e788e9471bbb483194f12ecc4c5,"go.tools/pointer: reflect, part 2: channels.

        (reflect.Value).Send
        (reflect.Value).TrySend
        (reflect.Value).Recv
        (reflect.Value).TryRecv
        (reflect.Type).ChanOf
        (reflect.Type).In
        (reflect.Type).Out
        reflect.Indirect
        reflect.MakeChan

Also:
- specialize genInvoke when the receiver is a reflect.Type under the
  assumption that there's only one possible concrete type.  This
  makes all reflect.Type operations context-sensitive since the calls
  are no longer dynamic.
- Rename all variables to match the actual parameter names used in
  the reflect API.
- Add pointer.Config.Reflection flag
  (exposed in oracle as --reflect, default false) to enable reflection.
  It currently adds about 20% running time.  I'll make it true after
  the presolver is implemented.
- Simplified worklist datatype and solver main loop slightly
  (~10% speed improvement).
- Use addLabel() utility to add a label to a PTS.

(Working on my 3 yr old 2x2GHz+4GB Mac vs 8x4GHz+24GB workstation,
one really notices the cost of pointer analysis.
Note to self: time to implement presolver.)

R=crawshaw
CC=golang-dev
https://golang.org/cl/13242062"
alandonovan,2013-09-23 19:02:18,https://api.github.com/repos/golang/tools/git/commits/25a0cc4bfd406533eedfbd18180ffe23a10d8c3a,25a0cc4bfd406533eedfbd18180ffe23a10d8c3a,"go.tools/oracle: refactor Oracle API to allow repeated queries on same scope.

The existing standalone Query function builds an importer, ssa.Program, oracle,
and query position, executes the query and returns the result.
For clients (such as Frederik Zipp's web-based github.com/fzipp/pythia tool)
that wish to load the program once and make several queries, we now expose
these as separate operations too.  Here's a client, in pseudocode:

        o := oracle.New(...)
        for ... {
                qpos := o.ParseQueryPos(...)
                res := o.Query(mode, qpos)
                print result
        }

NB: this is a slight deoptimisation in the one-shot case since we have to
build the entire SSA program with debug info, not just the query package,
since we now don't know the query package at that time.

The 'exact' param to ParseQueryPos needs more thought since its
ideal value is a function of the query mode.  This will do for now.

Details:
- expose Oracle type, New() func and Query() method.
- expose QueryPos type and ParseQueryPos func.
- improved package doc comment.
- un-exposed the ""needs"" bits.
- added test.

R=crawshaw
CC=frederik.zipp, golang-dev
https://golang.org/cl/13810043"
adg,2013-09-23 03:57:03,https://api.github.com/repos/golang/tools/git/commits/eb130cb48106d0a0e96dc5286235f69b297dd02d,eb130cb48106d0a0e96dc5286235f69b297dd02d,"go.tools/cmd/cover: add content-type meta tag to HTML output

Fixes golang/go#6435.

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/13822045"
griesemer,2013-09-20 17:09:40,https://api.github.com/repos/golang/tools/git/commits/26a4f47422a70d5f2a5299bcef026993e2850aa9,26a4f47422a70d5f2a5299bcef026993e2850aa9,"go.tools/go/types: enable more std lib tests

R=adonovan
CC=golang-dev
https://golang.org/cl/13798043"
griesemer,2013-09-20 17:09:16,https://api.github.com/repos/golang/tools/git/commits/c2d7895b1e0ae2a318019c8aa8b7068c3a3adcfc,c2d7895b1e0ae2a318019c8aa8b7068c3a3adcfc,"go.tools/go/types: ""imported but not used"" errors for dot-imports

R=adonovan, josharian
CC=golang-dev
https://golang.org/cl/13795043"
alandonovan,2013-09-20 15:35:00,https://api.github.com/repos/golang/tools/git/commits/0c4a02a8c460635219eb31840255017a167170e5,0c4a02a8c460635219eb31840255017a167170e5,"go.tools/oracle: improve usage messages.

Full help is only displayed when -help is requested;
CLI usage errors just remind the the user of this flag.

R=r, crawshaw
CC=golang-dev
https://golang.org/cl/13523048"
mattn,2013-09-20 01:09:27,https://api.github.com/repos/golang/tools/git/commits/7959c09b86e61728265626caafc6d9ec571a260d,7959c09b86e61728265626caafc6d9ec571a260d,"go.tools/cmd/oracle: Encoding issue, Possible to describe modified file
        line2byte doesn't handle non utf-8 fileencoding. So added s:getpos().
        And also, changing errorformat is not right way on go filetype.
        Added range operations.

R=golang-dev, kamil.kisiel, dsymonds, dominik.honnef
CC=golang-dev
https://golang.org/cl/13656045"
griesemer,2013-09-19 17:05:34,https://api.github.com/repos/golang/tools/git/commits/86e41f819a814bcc3f7d015c16fc5e98a77775bc,86e41f819a814bcc3f7d015c16fc5e98a77775bc,"go.tools/go/types: ""imported but not used"" checks for packages

also:
- initial code for unused label errors
- some cleanups, better names
- additional tests

TODO: Dot-imported packages are not handled yet; i.e., they
      are always considered used for now.

R=adonovan
CC=golang-dev
https://golang.org/cl/13768043"
robpike,2013-09-19 01:38:07,https://api.github.com/repos/golang/tools/git/commits/34fbb29ae00af3a61c641642137dfecc8c2ebc65,34fbb29ae00af3a61c641642137dfecc8c2ebc65,"go.tools/gotype: move to go.tools/cmd/gotype
Commands in the go.tools repo should be under the cmd subdirectory.

R=gri, adg
CC=golang-dev
https://golang.org/cl/13768044"
adg,2013-09-19 00:59:21,https://api.github.com/repos/golang/tools/git/commits/f54bd1aebf3e05bf390d2e66a0b039feb8a81b5e,f54bd1aebf3e05bf390d2e66a0b039feb8a81b5e,"go.tools/cmd/godoc: update import paths

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/13770043"
adg,2013-09-19 00:59:00,https://api.github.com/repos/golang/tools/git/commits/b605e38d5d9473c2189b37e9c24a3e9bdc6225b4,b605e38d5d9473c2189b37e9c24a3e9bdc6225b4,"go.tools/playground/socket: move package from go.talks

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13244049"
adg,2013-09-19 00:58:36,https://api.github.com/repos/golang/tools/git/commits/cc069b62970dc9cd806880c53130ab68cda883ca,cc069b62970dc9cd806880c53130ab68cda883ca,"go.tools/blog: use atom and present packages from go.tools

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13244050"
adg,2013-09-19 00:58:11,https://api.github.com/repos/golang/tools/git/commits/2cac03d8054cba95e08cce0be103061c17cd257c,2cac03d8054cba95e08cce0be103061c17cd257c,"go.tools/blog/atom: move package from go.blog

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13368058"
adg,2013-09-19 00:55:46,https://api.github.com/repos/golang/tools/git/commits/9fc516408c20780e497c274fc4ae016ca47955c7,9fc516408c20780e497c274fc4ae016ca47955c7,"go.tools/godoc/present: move present package from go.talks

Godoc depends on go.talks/pkg/present by way of go.tools/pkg/blog.
Better to keep all godoc dependencies in one place.

R=golang-dev, dsymonds, r
CC=golang-dev
https://golang.org/cl/13656047"
adg,2013-09-19 00:45:22,https://api.github.com/repos/golang/tools/git/commits/a76da35c4055dbcb79bee3370a2ddb1e1b04ee2f,a76da35c4055dbcb79bee3370a2ddb1e1b04ee2f,"go.tools: move playground to repo root

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/13451046"
griesemer,2013-09-18 18:39:55,https://api.github.com/repos/golang/tools/git/commits/2695d311b910e357ea1a347b221676a6906850bd,2695d311b910e357ea1a347b221676a6906850bd,"go.tools/ssa: fix ssa tests (fix build partly)

R=adonovan
CC=golang-dev
https://golang.org/cl/13668048"
griesemer,2013-09-18 18:37:26,https://api.github.com/repos/golang/tools/git/commits/a24d794bb190590e19874cc53f922ddf435a5efd,a24d794bb190590e19874cc53f922ddf435a5efd,"go.tools/pointer: fix pointer tests (fix build partly)

R=adonovan
CC=golang-dev
https://golang.org/cl/13246052"
griesemer,2013-09-18 18:32:18,https://api.github.com/repos/golang/tools/git/commits/0e06e5845b96948d55b27feb6968e4183d80d781,0e06e5845b96948d55b27feb6968e4183d80d781,"go.tools/oracle: fix oracle tests (fix build partly)

R=adonovan
CC=golang-dev
https://golang.org/cl/13722049"
griesemer,2013-09-18 18:31:46,https://api.github.com/repos/golang/tools/git/commits/a68deb25ffcbdbc5757f63c850a47c1d6bf0cb14,a68deb25ffcbdbc5757f63c850a47c1d6bf0cb14,"go.tools/go/types: ""declared but not used"" error for type switches

Also:
- added more tests
- removed Var.Used accessor: it's not meaningful for clients since
  it does not reflect actual use/def information
- fixed position for short variable declaration errors

R=adonovan
CC=golang-dev
https://golang.org/cl/13240051"
griesemer,2013-09-18 15:39:02,https://api.github.com/repos/golang/tools/git/commits/f1051f2025df7f92ca10f8f8b29f8582ea0895b9,f1051f2025df7f92ca10f8f8b29f8582ea0895b9,"go.tools/go/types: 'declared but not used' checks for variables

- updated all tests to conform to stricter rules
- TODO: check for implicitly declared variables in type switches

R=adonovan
CC=golang-dev
https://golang.org/cl/13695046"
adg,2013-09-18 05:20:41,https://api.github.com/repos/golang/tools/git/commits/072133c61b61d14f1ce7a866c0bfb741f19e92a0,072133c61b61d14f1ce7a866c0bfb741f19e92a0,"go.tools/cmd/godoc: include the blog server

Defer parsing of blog content until accessed for faster startup.
Fall back on redirect if blog content unavailable locally.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13335052"
adg,2013-09-18 05:12:51,https://api.github.com/repos/golang/tools/git/commits/371fdaacb995f15973f19901222207b0986d762b,371fdaacb995f15973f19901222207b0986d762b,"go.tools/godoc: add 'Blog' heading and playground scripts and styles

This is part of altering the blog to be styled like the rest of golang.org.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13641045"
adg,2013-09-18 04:59:34,https://api.github.com/repos/golang/tools/git/commits/03c8be29dbbd7eb1528e6c98d75957e9b8053c04,03c8be29dbbd7eb1528e6c98d75957e9b8053c04,"go.tools/godoc/blog: add PlayEnabled and GodocURL options

Also make NewServer take a Config, not *Config.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13755044"
adg,2013-09-18 04:56:44,https://api.github.com/repos/golang/tools/git/commits/72d39cf5855589f5d48355455e07f743eebec377,72d39cf5855589f5d48355455e07f743eebec377,"go.tools/godoc/blog: copy package from go.blog

R=golang-dev, r, dsymonds
CC=golang-dev
https://golang.org/cl/13755043"
robpike,2013-09-18 02:57:59,https://api.github.com/repos/golang/tools/git/commits/6ad0d283e1776340a352c48bdcb7de5143630357,6ad0d283e1776340a352c48bdcb7de5143630357,"go.tools/cmd/vet: handle recursive structs and slices.
Fixes golang/go#6309

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13386046"
adg,2013-09-18 01:15:12,https://api.github.com/repos/golang/tools/git/commits/dceff279d092d9518733a0402865cdd1d60cb28e,dceff279d092d9518733a0402865cdd1d60cb28e,"go.tools/cmd/godoc: add redirects for godoc, vet, and gotest

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/13709046"
griesemer,2013-09-17 17:26:06,https://api.github.com/repos/golang/tools/git/commits/4acd602bea6db37389ee5f39bce01267c0fdcfbd,4acd602bea6db37389ee5f39bce01267c0fdcfbd,"go.tools/go/types: fix a couple of std lib test failures

1. handle return statements with zero (but expected) return values
2. indices provided for array or slice composite literals must be integer constants

Added additional test cases.

R=adonovan
CC=golang-dev
https://golang.org/cl/13734043"
griesemer,2013-09-16 20:18:56,https://api.github.com/repos/golang/tools/git/commits/cf1e27bbdaf64faeb286a20cd9abf0f93cfee9cb,cf1e27bbdaf64faeb286a20cd9abf0f93cfee9cb,"go.tools/go/types: add test case for resolution of blank methods

(was bug on go/types wishlist; probably fixed a while ago)

R=adonovan
CC=golang-dev
https://golang.org/cl/13633047"
alandonovan,2013-09-16 19:22:19,https://api.github.com/repos/golang/tools/git/commits/5db6491e90cce8195e6270de41fbf721825b790b,5db6491e90cce8195e6270de41fbf721825b790b,"go.tools/ssa/interp: fixes to equivalence relations.

- This change implements the correct type-based equivalence
  relation for aggregate types. e.g. comparison of struct
  types no longer compares the anonymous fields.  We do
  analogous things for hash().

- equals() and eqnil() have been separated: the former panics
  for uncomparable types, the latter permits comparisons of
  slice/map/func types against a literal nil and is intended
  for use only by ""static"" ssa.BinOp(EQL), not ""dynamic"" slice
  comparisons encountered during (e.g.) interface comparisons,
  which should panic regardless of operand nilness.

- we use a (global) typemap.Hasher to compute type hashes;
  hashing the Type.String() value was not sound.

+ tests.

NB, this change unearthed a bug in defer/recover within
init(); it will be fixed in a followup change.

R=gri, crawshaw
CC=golang-dev
https://golang.org/cl/13719043"
alandonovan,2013-09-16 13:49:10,https://api.github.com/repos/golang/tools/git/commits/3b5de067a120fcc5aa9b6986ac205654ec0b62b7,3b5de067a120fcc5aa9b6986ac205654ec0b62b7,"go.tools/pointer: reflection, part 1: maps, and some core features.

Core:
        reflect.TypeOf
        reflect.ValueOf
        reflect.Zero
        reflect.Value.Interface
Maps:
        (reflect.Value).MapIndex
        (reflect.Value).MapKeys
        (reflect.Value).SetMapIndex
        (*reflect.rtype).Elem
        (*reflect.rtype).Key

+ tests:
  pointer/testdata/mapreflect.go.
  oracle/testdata/src/main/reflection.go.

Interface objects (T, V...) have been renamed ""tagged objects"".

Abstraction: we model reflect.Value similar to
interface{}---as a pointer that points only to tagged
objects---but a reflect.Value may also point to an ""indirect
tagged object"", one in which the payload V is of type *T not T.
These are required because reflect.Values can hold lvalues,
e.g. when derived via Field() or Elem(), though we won't use
them till we get to structs and pointers.

Solving: each reflection intrinsic defines a new constraint
and resolution rule.  Because of the nature of reflection,
generalizing across types, the resolution rules dynamically
create additional complex constraints during solving, where
previously only simple (copy) constraints were created.
This requires some solver changes:

  The work done before the main solver loop (to attach new
  constraints to the graph) is now done before each iteration,
  in processNewConstraints.

  Its loop over constraints is broken into two passes:
  the first handles base (addr-of) constraints,
  the second handles simple and complex constraints.

  constraint.init() has been inlined.  The only behaviour that
  varies across constraints is ptr()

Sadly this will pessimize presolver optimisations, when we get
there; such is the price of reflection.

Objects: reflection intrinsics create objects (i.e. cause
memory allocations) with no SSA operation.  We will represent
them as the cgnode of the instrinsic (e.g. reflect.New), so we
extend Labels and node.data to represent objects as a product
(not sum) of ssa.Value and cgnode and pull this out into its
own type, struct object.  This simplifies a number of
invariants and saves space.  The ntObject flag is now
represented by obj!=nil; the other flags are moved into
object.

cgnodes are now always recorded in objects/Labels for which it
is appropriate (all but those for globals, constants and the
shared contours for functions).

Also:
- Prepopulate the flattenMemo cache to consider reflect.Value
  a fake pointer, not a struct.
- Improve accessors and documentation on type Label.
- @conctypes assertions renamed @types (since dyn. types needn't be concrete).
- add oracle 'describe' test on an interface (missing, an oversight).

R=crawshaw
CC=golang-dev
https://golang.org/cl/13418048"
alandonovan,2013-09-16 13:27:59,https://api.github.com/repos/golang/tools/git/commits/4c5148c4cde6a818f1b91c8c768a863a5751dc67,4c5148c4cde6a818f1b91c8c768a863a5751dc67,"go.tools/ssa/interp: set GOARCH to runtime.GOARCH in target program.

Causes $GOROOT/test/env.go to pass if GOARCH is unset in parent's env.

R=gri
CC=golang-dev
https://golang.org/cl/13709043"
adg,2013-09-16 05:46:38,https://api.github.com/repos/golang/tools/git/commits/b9b578154e7163b8802cf0b6e6ec755d83573a98,b9b578154e7163b8802cf0b6e6ec755d83573a98,"go.tools/godoc: some content re-organization

Remove References section heading.
Add redirects from old paths to new content.
Add a link to the SubRepositories wiki page from package list.
Add styles for ""pop-out"" link.

R=r
CC=golang-dev
https://golang.org/cl/13356047"
adg,2013-09-16 04:39:12,https://api.github.com/repos/golang/tools/git/commits/4709d08a3637acade07aa6cdeda4f3775c461f6f,4709d08a3637acade07aa6cdeda4f3775c461f6f,"go.toos/cmd/cover: ""add"" package comment

R=r
CC=golang-dev
https://golang.org/cl/13463046"
adg,2013-09-16 03:02:15,https://api.github.com/repos/golang/tools/git/commits/334d56a124a71c8db0101b7b175579765739a69b,334d56a124a71c8db0101b7b175579765739a69b,"go.tools/cmd/godoc: permit dash and capitals in redirect paths

This was causing some /blog/foo-bar-baz paths to 404.

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/13640044"
adg,2013-09-16 01:41:03,https://api.github.com/repos/golang/tools/git/commits/15649888974208f8c3c79379019567dcbccd8be2,15649888974208f8c3c79379019567dcbccd8be2,"go.tools/cmd/godoc: add redirect helpers

Previously these helpers were added by a private deployment script.
There's no reason why they shouldn't be part of godoc proper now
that it's in the go.tools repository.

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/13722043"
robpike,2013-09-15 22:18:27,https://api.github.com/repos/golang/tools/git/commits/ece05f910e6bbd8816c4b39d6d24377d79396aa8,ece05f910e6bbd8816c4b39d6d24377d79396aa8,"go.tools/cmd/vet: update for fmt handling %b for complex numbers

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/13490048"
griesemer,2013-09-13 16:52:57,https://api.github.com/repos/golang/tools/git/commits/1928c01286fa71901552b33505954d855d2e099e,1928c01286fa71901552b33505954d855d2e099e,"go.tools/go/types: separate package descriptor from package object

Includes changes by adonovan to make oracle work again
(former CL 13395050).

R=adonovan
CC=golang-dev
https://golang.org/cl/13672044"
dominikh,2013-09-13 02:34:38,https://api.github.com/repos/golang/tools/git/commits/59968caad502b72aa1f26bc5778ae836710d8d88,59968caad502b72aa1f26bc5778ae836710d8d88,"go.tools/oracle: turn emacs integration into minor-mode

Define a minor mode called go-oracle-mode. Right now its sole
purpose is to define a keymap but it might later be used to add
hooks or add other features to go-mode.

R=adonovan
CC=golang-dev
https://golang.org/cl/13412048"
alandonovan,2013-09-12 15:00:31,https://api.github.com/repos/golang/tools/git/commits/7e7d99b4c9eecd2c8f9ceb10c3651318b1dac2f3,7e7d99b4c9eecd2c8f9ceb10c3651318b1dac2f3,"go.tools/ssa/interp: fixes to enable running tests of package ""encoding"".

Running the interpreter on (most of) the tests package in
""encoding"" unearthed a couple of ssa.builder bugs, already
fixed.  This CL contains the interpreter fixes that were
required.  (The ""encoding"" tests aren't added to the suite
since they're slow.)

Added intrinsics for:
        math.Exp
        math.Min
        hash/crc32.haveSSE42
        (reflect.Type).Field
        (reflect.Type).NumField
        (reflect.Type).NumMethod
        reflect.New
        (reflect.Value).NumMethod
        syscall.RawSyscall (returns ENOSYS)
        reflect.Set (a no-op)

Treat unsafe.Pointer -> *T conversions by returning new(T).
This is incorrect but at least preserves type-safety,
which is sufficient for these tests.

hashmap: treat nil *hashmap as an empty map.

R=gri
CC=golang-dev
https://golang.org/cl/12901046"
alandonovan,2013-09-12 15:00:22,https://api.github.com/repos/golang/tools/git/commits/daa44ab9704f70531712ca1f569e58e4b45a3ee9,daa44ab9704f70531712ca1f569e58e4b45a3ee9,"go.oracle: freevars: don't report free identifiers defined in package scope.

The existing check rejected only free identifiers defined in
file scope, i.e. just imports.

+ regression test.

R=crawshaw, gri
CC=golang-dev
https://golang.org/cl/13256050"
alandonovan,2013-09-12 14:56:37,https://api.github.com/repos/golang/tools/git/commits/7a5597c226b4ace3d90343c89ca82bcbbe8dc6e2,7a5597c226b4ace3d90343c89ca82bcbbe8dc6e2,"go.tools/pointer: suppress warnings from unsafe.Pointer conversions in the ""syscall"" package.

This is a short-term usability measure.
Longer term, we need to audit each conversion to decide
whether it should be ignored or modelled by an analytic
summary.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13263050"
alandonovan,2013-09-12 14:55:24,https://api.github.com/repos/golang/tools/git/commits/d38c09ed222f3db50a2a48fd28cca841c5d12621,d38c09ed222f3db50a2a48fd28cca841c5d12621,"go.tools/oracle: set AllASTs=true always, and simplify.

Every one of the oracle's query modes needs to have typed ASTs
available, at least transiently, so that the -pos flag can be
interpreted.  (The only mode that doesn't need the -pos flag
is callgraph, but that needs PTA.)  So we hard-code it to true.

This change fixes a bug in the 'implements' query that causes
-pos parsing to fail.  (This wasn't exposed by the tests
because they are degenerate in that the query always occurs in
the main package, which is specified ad-hoc, i.e. as a source
file not an import path.  That's unfortunate, but this
change renders the distinction uninteresting in future.)

R=crawshaw, dominik.honnef
CC=golang-dev
https://golang.org/cl/13334050"
paranoiacblack,2013-09-11 23:45:24,https://api.github.com/repos/golang/tools/git/commits/c871e361fc0613a5879a090a8ab27d1f3ba5b7e8,c871e361fc0613a5879a090a8ab27d1f3ba5b7e8,"go.tools/dashboard: add option to build gccgo revisions

* Added --tool flag that allows user to specify ""gccgo"" as the tool to build.
* Added builderEnv struct to abstract away setting up the build.
* Made envv and envvWindows methods of the builderEnv struct.
* Modified Builder.envv() to wrap envv and envvWindows
* Added internal builderEnv in Builder.

R=adg
CC=golang-dev
https://golang.org/cl/13240044"
griesemer,2013-09-11 17:03:40,https://api.github.com/repos/golang/tools/git/commits/3fee9166d4ed6c5df4a54d9bcf8b037ba5a8c7d9,3fee9166d4ed6c5df4a54d9bcf8b037ba5a8c7d9,"go.tools/go/types: treat unsafe.Pointer like a pointer for receivers and embedding

Also: Better error message for receiver type errors.

R=adonovan
CC=golang-dev
https://golang.org/cl/13259044"
griesemer,2013-09-10 21:43:23,https://api.github.com/repos/golang/tools/git/commits/67c866ec7414a915abaadddb8c1d21c698113e48,67c866ec7414a915abaadddb8c1d21c698113e48,"go.tools/go/types: extra tests for float conversions

R=adonovan
CC=golang-dev
https://golang.org/cl/13393046"
griesemer,2013-09-10 21:26:49,https://api.github.com/repos/golang/tools/git/commits/b591789053c1ed8a5399769f57320a5e1b40db67,b591789053c1ed8a5399769f57320a5e1b40db67,"go.tools/go/types: clearer documentation

(Follow-up of CL feedback.)

R=adonovan
CC=golang-dev
https://golang.org/cl/13333047"
alandonovan,2013-09-10 18:40:37,https://api.github.com/repos/golang/tools/git/commits/0b534359c5d1610a2a42f3bd485a9a6085ce5f0b,0b534359c5d1610a2a42f3bd485a9a6085ce5f0b,"go.tools/pointer: summaries for more intrinsics.

All have been audited to ensure that they have NoEffect on
aliasing.  Also: clarify the requirements for NoEffect to
explicitly disclaim trivial loads/stores.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13314045"
alandonovan,2013-09-10 18:19:11,https://api.github.com/repos/golang/tools/git/commits/c18d759e6b3186e361db5314800a4755084796d9,c18d759e6b3186e361db5314800a4755084796d9,"go.tools/oracle: describe package: simplify to use only types.Package, not ssa.Package.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13396050"
alandonovan,2013-09-10 18:11:42,https://api.github.com/repos/golang/tools/git/commits/0725e5a5b3140bfacb19554b9d1ddcfe975b2790,0725e5a5b3140bfacb19554b9d1ddcfe975b2790,"go.tools/oracle: new query 'referrers' returns all references to an identifier.

+ test.

Also:
- provide non-nil map to Importer.doImport0() to avoid a crash.
- reorganize oracle ""needs"" bits.
- reduce ""needs"" of 'freevars' and 'implements' queries by avoiding
  ssa.Packages when types.Package suffices.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13421046"
alandonovan,2013-09-10 18:11:17,https://api.github.com/repos/golang/tools/git/commits/9a9fb35468f58c7041129e21ca236006a8d5e12e,9a9fb35468f58c7041129e21ca236006a8d5e12e,"go.types/go/types: document primary vs. secondary Package distinction.

And: add accessor to get the primary from a secondary Package.

This change documents a surprising fact about the current
go/types resolver implementation, namely that each ast.ImportSpec
    import ""fmt""
creates a new (""secondary"") Package object for fmt with the
same String, Name, Path and Scope as the canonical (""primary"")
fmt package, but with a different identity.

This change also adds an accessor Package.Primary() that
returns the primary package associated with a secondary
package object, if any.

IMHO the current design is wrong, and the resolver should not
create secondary packages at all.  Even if a package is
imported under a non-default name, as in
    import f ""fmt""
    ...
    f.Print
we should just regard f as a reference to the existing package
""fmt"", not as the defining identifier for a secondary package.
What we would lose by such a change (the connection of the two
f's in 'f.Print' and 'import f ""fmt""') seems a small price to
pay.

This CL is thus just a minimal change to permit clients to
make progress under the status quo.

R=r, gri, crawshaw
CC=golang-dev
https://golang.org/cl/13626043"
alandonovan,2013-09-10 16:08:55,https://api.github.com/repos/golang/tools/git/commits/6bc6da88ecbd2f922db37a40f3e3b75daceaf891,6bc6da88ecbd2f922db37a40f3e3b75daceaf891,"go.tools/ssa/interp: implement unary negation of complex numbers.

Fixes golang/go#6291.

Also: call go/types.DefaultSizeof instead of hard-coding the
initial value of runtime.sizeof_C_MStats.

R=gri
CC=golang-dev
https://golang.org/cl/13648043"
alandonovan,2013-09-10 14:39:51,https://api.github.com/repos/golang/tools/git/commits/829240cc2ee7b03faa3c8de745a833652c862a65,829240cc2ee7b03faa3c8de745a833652c862a65,"go.tools/importer: add unit test of LoadInitialPackages.

Also: fix nil pointer dereference during failed import of
non-first import path.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13646043"
alandonovan,2013-09-10 01:31:33,https://api.github.com/repos/golang/tools/git/commits/5eb0d4d152460b880c540a45af11b45893b27ed6,5eb0d4d152460b880c540a45af11b45893b27ed6,"go.tools/oracle: restore edits lost in rev aa9b649bccd9 (botched merge)

R=crawshaw
TBR=crawshaw
CC=golang-dev
https://golang.org/cl/13604044"
alandonovan,2013-09-10 01:06:25,https://api.github.com/repos/golang/tools/git/commits/927e0f9da660f87fc3ad91a359e4ba805a639bac,927e0f9da660f87fc3ad91a359e4ba805a639bac,"go.tools/oracle: describe: query content of lvalues, not their address.

Background: some ssa.Values represent lvalues, e.g.
      var g = new(string)
the *ssa.Global g is a **string, the address of what users
think of as the global g.

Querying pts(g) returns a singleton containing the object g, a
*string.  What users really want to see is what that in turn
points to, i.e. the label for the call to new().

This change now lets users make ""indirect"" pointer queries,
i.e. for pts(*v) where v is an ssa.Value.  The oracle makes an
indirect query if the type of the ssa.Value differs from the
source expression type by a pointer, i.e. it's an lvalue.

In other words, we're hiding the fact that compilers (e.g. ssa) internally represent globals by their address.

+ Tests.

This serendipitously fixed an outstanding bug mentioned in the
describe.go

R=crawshaw
CC=golang-dev
https://golang.org/cl/13532043"
griesemer,2013-09-09 23:41:46,https://api.github.com/repos/golang/tools/git/commits/6688b01dc12ebe2d769dc9ce59e5de8a47be0db3,6688b01dc12ebe2d769dc9ce59e5de8a47be0db3,"go.tools/go/types: fix unsafe.Pointer conversions

Make compliant with gc. Spec is not very clear.
Also: Fix error handling (don't destroy x before
using it in error message).

Fixes golang/go#6326.

R=adonovan
CC=golang-dev
https://golang.org/cl/13632043"
griesemer,2013-09-09 22:20:14,https://api.github.com/repos/golang/tools/git/commits/932a87ce16f5e62afef54c8def1341c5c57f5467,932a87ce16f5e62afef54c8def1341c5c57f5467,"go.tools/go/types: fix ... parameter passing

Also: exclude test case from std test to fix build.

Fixes golang/go#6344.

R=adonovan
CC=golang-dev
https://golang.org/cl/13630043"
paranoiacblack,2013-09-09 19:49:08,https://api.github.com/repos/golang/tools/git/commits/95e4181bb50f246fe5e5127c68102641b2295e5c,95e4181bb50f246fe5e5127c68102641b2295e5c,"go.tools/go/vcs: apply fix to issue 5801.

No semantic difference from https://golang.org/cl/12343043/

R=bradfitz
CC=golang-dev
https://golang.org/cl/13383044"
alandonovan,2013-09-09 16:25:25,https://api.github.com/repos/golang/tools/git/commits/65f2ef9ae311da48242cc95b617751f9cd0d002d,65f2ef9ae311da48242cc95b617751f9cd0d002d,"go.tools/pointer: add runnable example.

Also: update TODO list.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13622043"
alandonovan,2013-09-09 02:10:11,https://api.github.com/repos/golang/tools/git/commits/c6e88b1b2a1885081c97642720104695571a9bf0,c6e88b1b2a1885081c97642720104695571a9bf0,"go.tools/cmd/oracle: use -pos=file:#start,#end syntax to indicate half-open [start,end) extent of byte offsets.

Also: improve help message.

R=r, crawshaw, rsc
CC=golang-dev
https://golang.org/cl/13593043"
alandonovan,2013-09-06 22:13:57,https://api.github.com/repos/golang/tools/git/commits/3f2f9a7e70872991cf616768309677aa3d5fb1e8,3f2f9a7e70872991cf616768309677aa3d5fb1e8,"go.tools/importer: generalize command-line syntax.

Motivation: pointer analysis tools (like the oracle) want the
user to specify a set of initial packages, like 'go test'.
This change enables the user to specify a set of packages on
the command line using importer.LoadInitialPackages(args).

Each argument is interpreted as either:
- a comma-separated list of *.go source files together
  comprising one non-importable ad-hoc package.
  e.g. ""src/pkg/net/http/triv.go"" gives us [main].
- an import path, denoting both the imported package
  and its non-importable external test package, if any.
  e.g. ""fmt"" gives us [fmt, fmt_test].

Current type-checker limitations mean that only the first
import path may contribute tests: multiple packages augmented
by *_test.go files could create import cycles, which 'go test'
avoids by building a separate executable for each one.
That approach is less attractive for static analysis.

Details:  (many files touched, but importer.go is the crux)

importer:
- PackageInfo.Importable boolean indicates whether
  package is importable.
- un-expose Importer.Packages; expose AllPackages() instead.
- CreatePackageFromArgs has become LoadInitialPackages.
- imports() moved to util.go, renamed importsOf().
- InitialPackagesUsage usage message exported to clients.
- the package name for ad-hoc packages now comes from the
  'package' decl, not ""main"".

ssa.Program:
- added CreatePackages() method
- PackagesByPath un-exposed, renamed 'imported'.
- expose AllPackages and ImportedPackage accessors.

oracle:
- describe: explain and workaround a go/types bug.

Misc:
- Removed various unnecessary error.Error() calls in Printf args.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13579043"
alandonovan,2013-09-06 13:19:34,https://api.github.com/repos/golang/tools/git/commits/33f988691ea2ff81aa2873de3dcabb93036192d7,33f988691ea2ff81aa2873de3dcabb93036192d7,"go.tools/ssa: use correct names for Captures.

Until now, the name of the captured ssa.Value, not
types.Var was used, leading to confusing disassembly
when it was a numbered register.  See:
https://code.google.com/p/go/issues/detail?id=6337

Now the output is:

# Free variables:
#   0:	a *int
#   1:	b *int
func func@6.9() int:
.0.entry:
        t0 = *b
        t1 = *a
        t2 = *b
        etc...

BUG=6337

R=crawshaw
CC=golang-dev
https://golang.org/cl/13249049"
alandonovan,2013-09-04 20:15:41,https://api.github.com/repos/golang/tools/git/commits/a1dade8bdc1cf8f8a12b263bf51f955efd561aa9,a1dade8bdc1cf8f8a12b263bf51f955efd561aa9,"go.oracle: describe: disambiguate 'func' object kinds.

The typechecker uses *types.Func for functions, concrete
methods and interface methods; and *types.Var for variables
and struct fields.  This change makes clear which kind of
function we're describing.  (We can't do it for vars since
go/types doesn't expose enough information, yet.)

Also: add ""omitempty"" to one JSON field.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13527044"
alandonovan,2013-09-04 19:20:38,https://api.github.com/repos/golang/tools/git/commits/b21b4e8c887191309302b761240703625970d143,b21b4e8c887191309302b761240703625970d143,"go.tools/importer: negate ""cgo"" build tag to avoid native code in ""net"".

This removes the need for the caller to specify CGO_ENABLED=0
in the environment.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13464045"
alandonovan,2013-09-04 18:35:24,https://api.github.com/repos/golang/tools/git/commits/f9e325b5756a6fd945323ab98580defa36662b95,f9e325b5756a6fd945323ab98580defa36662b95,"go.tools/oracle: change notation for byte offsets to ""-pos=file.go:#123-#456""

The previous notation (sans '#') now yields an error but is
""reserved for future use"", e.g. to denote line/column offsets.
Will implement as needed.

R=r, crawshaw
CC=golang-dev
https://golang.org/cl/13526043"
alandonovan,2013-09-04 18:32:36,https://api.github.com/repos/golang/tools/git/commits/f5ac829804b3444786677b8ac96c56e6bb50d753,f5ac829804b3444786677b8ac96c56e6bb50d753,"go.tools/importer: fix classic closing-over-induction-variable gotcha.

Now we actually prefetch all n packages, instead of
prefetching the last one n times.  This yields a further 22%
improvement, which is more like what I was hoping for.

It makes me so sad that Go reproduced one of the best-known
mistakes of JavaScript.  D'oh!

R=crawshaw
CC=golang-dev
https://golang.org/cl/13379046"
alandonovan,2013-09-04 17:15:49,https://api.github.com/repos/golang/tools/git/commits/e2921e188a77d0a621a7d8dce2216430fc3674b4,e2921e188a77d0a621a7d8dce2216430fc3674b4,"go.tools/importer: make loading/parsing concurrent.

1. ParseFiles (in util.go) parses each file in its own goroutine.

2. (*Importer).LoadPackage asynchronously prefetches the
   import graph by scanning the imports of each loaded package
   and calling LoadPackage on each one.

   LoadPackage is now thread-safe and idempotent: it uses a
   condition variable per package; the first goroutine to
   request a package becomes responsible for loading it and
   broadcasts to the others (waiting) when it becomes ready.

ssadump runs 34% faster when loading the oracle.

Also, refactorings:
- delete SourceLoader mechanism; just expose go/build.Context directly.
- CreateSourcePackage now also returns an error directly,
  rather than via PackageInfo.Err, since every client wants that.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13509045"
alandonovan,2013-09-03 19:41:05,https://api.github.com/repos/golang/tools/git/commits/48d14ded32f890900a3a87b10c3ebb253850e6d8,48d14ded32f890900a3a87b10c3ebb253850e6d8,"go.tools/cmd/oracle: cosmetic tweaks to Emacs.

1. call display-buffer after the postprocessing step to avoid display glitch.
2. suppress the postprocessing progress message---it's too verbose.
   (instead I should just make the postprocessing loop faster)

Also: rename channel-peers to just peers for consistency with other commands and documentation.

R=dominik.honnef
CC=golang-dev
https://golang.org/cl/13388044"
alandonovan,2013-09-03 19:29:02,https://api.github.com/repos/golang/tools/git/commits/d2cdbefbfcd57a61af74e8b0f58b15e0a45defd4,d2cdbefbfcd57a61af74e8b0f58b15e0a45defd4,"go.tools/oracle: add option to output results in JSON syntax.

See json.go for interface specification.

Example usage:
% oracle -format=json -mode=callgraph code.google.com/p/go.tools/cmd/oracle

+ Tests, based on (small) golden files.

Overview:
  Each <query>Result structure has been ""lowered"" so that all
  but the most trivial logic in each display() function has
  been moved to the main query.

  Each one now has a toJSON method that populates a json.Result
  struct.  Though the <query>Result structs are similar to the
  correponding JSON protocol, they're not close enough to be
  used directly; for example, the former contain richer
  semantic entities (token.Pos, ast.Expr, ssa.Value,
  pointer.Pointer, etc) whereas JSON contains only their
  printed forms using Go basic types.

  The choices of what levels of abstractions the two sets of
  structs should have is somewhat arbitrary.  We may want
  richer information in the JSON output in future.

Details:
- oracle.Main has been split into oracle.Query() and the
  printing of the oracle.Result.
- the display() method no longer needs an *oracle param, only
  a print function.
- callees: sort the result for determinism.
- callees: compute the union across all contexts.
- callers: sort the results for determinism.
- describe(package): fixed a bug in the predicate for method
  accessibility: an unexported method defined in pkg A may
  belong to a type defined in package B (via
  embedding/promotion) and may thus be accessible to A.  New
  accessibleMethods() utility fixes this.
- describe(type): filter methods by accessibility.
- added tests of 'callgraph'.
- pointer: eliminated the 'caller CallGraphNode' parameter from
  pointer.Context.Call callback since it was redundant w.r.t
  site.Caller().
- added warning if CGO_ENABLED is unset.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13270045"
alandonovan,2013-09-03 14:58:58,https://api.github.com/repos/golang/tools/git/commits/0126405cad367331e51f351854592ae44541fb8b,0126405cad367331e51f351854592ae44541fb8b,"go.tools/oracle: change -pos flag syntax from ""file pos-pos"" to file:pos-pos.

Pro: no shell quotation needed.
Con: can't be parsed by (the perpetually useless) Scanf.

R=crawshaw, dgryski
CC=golang-dev
https://golang.org/cl/13441043"
alandonovan,2013-08-30 01:36:59,https://api.github.com/repos/golang/tools/git/commits/a483497cf1fa1b73664a32c5e60fad477379a747,a483497cf1fa1b73664a32c5e60fad477379a747,"go.tools/oracle: address reviewer suggestions from CL 9502043

(I made these changes in the wrong workspace.)

R=crawshaw
CC=golang-dev
https://golang.org/cl/13328044"
alandonovan,2013-08-30 01:34:36,https://api.github.com/repos/golang/tools/git/commits/b43fa6fbda03d2d4ec615ec291605371e0b5bbb3,b43fa6fbda03d2d4ec615ec291605371e0b5bbb3,"go.tools/cmd/ssadump: move ssa/ssadump.go command to its own package.

(Its former location was based on a misunderstanding of 'go build'.)

Also: set GOMAXPROCS to NumCPU by default.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13354043"
alandonovan,2013-08-30 01:32:49,https://api.github.com/repos/golang/tools/git/commits/3184482148e9d88645bbab180d4d2561475fc243,3184482148e9d88645bbab180d4d2561475fc243,"go.tools/oracle: change -ptalog default to """".

Also: add a TODO.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13352043"
robpike,2013-08-29 04:32:06,https://api.github.com/repos/golang/tools/git/commits/6fb9ae0ed5cc658ed39f283db58c4f142edd5fee,6fb9ae0ed5cc658ed39f283db58c4f142edd5fee,"go.tools/go/vcs: use same regular expression for code.google.com as cmd/go

No semantic change.

R=golang-dev, bradfitz, dsymonds
CC=golang-dev
https://golang.org/cl/13373043"
robpike,2013-08-29 04:31:39,https://api.github.com/repos/golang/tools/git/commits/1b67ef00784ff962ddc7950677b10cef3a54c6e1,1b67ef00784ff962ddc7950677b10cef3a54c6e1,"go.tools/oracle: fix build on darwin

diff -u3: the 3 is redundant and an error on darwin; redundant and unnecessary on linux.

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/13231044"
alexbrainman,2013-08-29 04:04:05,https://api.github.com/repos/golang/tools/git/commits/7f887510d9cc215332b63eb1aa5f7470a12ba7e1,7f887510d9cc215332b63eb1aa5f7470a12ba7e1,"go.tools/oracle: disable TestOracle test on windows (fixes windows build)

windows does not have required /usr/bin/diff program

R=golang-dev, r
CC=adonovan, golang-dev
https://golang.org/cl/13353047"
robpike,2013-08-29 03:50:05,https://api.github.com/repos/golang/tools/git/commits/b38e3512f0b2f027568401adec5586e614e0749e,b38e3512f0b2f027568401adec5586e614e0749e,"go.tools/go/vcs: support cloned repos in code.google.com

R=golang-dev, bradfitz, dsymonds
CC=golang-dev
https://golang.org/cl/13241047"
paranoiacblack,2013-08-28 04:52:18,https://api.github.com/repos/golang/tools/git/commits/1d214a6a09ff4746cf03d1ca1a08c08e5ad3914f,1d214a6a09ff4746cf03d1ca1a08c08e5ad3914f,"go.tools/dashboard: implement dashboard using vcs package.

To make the dashboard more flexible with different VCS, the Repo now depends on the VCS package for running commands.

* Exported Repo.Master
* Modified RemoteRepo to return a repo and an error
* Reimplemented all Repo methods using vcs package
* Removed hgCmd
* Removed repoURL
* Removed scheme from hgUrl since vcs.RepoRootForImportPath decides the scheme.
* Changed waitWithTimeout into timeout
* Added waitForFuncWithTimeout to wrap vcs commands with a timeout.

R=adg
CC=golang-dev
https://golang.org/cl/13201043"
robpike,2013-08-28 01:24:43,https://api.github.com/repos/golang/tools/git/commits/bc5f637240fcf26032021247b10ba6beeae7bdb1,bc5f637240fcf26032021247b10ba6beeae7bdb1,"go.tools/cmd/vet: assume implementations of fmt.Formatter print just fine
Update golang/go#6212
See issue 6259.
When that is resolved, we can do a better job. Until then, we just see if the
type has a method called Format and, if so, assume it's a Formatter and so
there's nothing to check.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13267043"
adg,2013-08-27 23:39:02,https://api.github.com/repos/golang/tools/git/commits/2e6fbd84f8b884c6fc8b95a633f289c0df1f1bf8,2e6fbd84f8b884c6fc8b95a633f289c0df1f1bf8,"go.tools/cmd/godoc: don't list factory functions under types in builtin package

Fixes golang/go#6220.

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/13094049"
alandonovan,2013-08-27 22:49:13,https://api.github.com/repos/golang/tools/git/commits/713699d8ad3085ffef214f6358fa9b4e0b3e9f31,713699d8ad3085ffef214f6358fa9b4e0b3e9f31,"go.tools: add copyright messages to source files.

R=r
CC=golang-dev
https://golang.org/cl/13305043"
bradfitz,2013-08-27 22:16:31,https://api.github.com/repos/golang/tools/git/commits/6f6897428afc7b27b1b446d016a8df5fd19ed32b,6f6897428afc7b27b1b446d016a8df5fd19ed32b,"cmd/godoc: fix indexing

Use the flag.

Thanks to Travis Cline.

Fixes golang/go#6233

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/13284044"
alandonovan,2013-08-27 21:58:26,https://api.github.com/repos/golang/tools/git/commits/e08d89f3ed535b6158e5a3b3f897fd57753af8ca,e08d89f3ed535b6158e5a3b3f897fd57753af8ca,"go.tools/oracle: an oracle that answers questions about Go source code.

+ Tests.
+ Emacs integration.
+ Emacs integration test.
+ very rudimentary Vim integration.  Needs some love from a Vim user.

TODO (in follow-ups):
- More tests would be good.
  We'll need to make the output order deterministic in more places.
- Documentation.

R=gri, crawshaw, dominik.honnef
CC=golang-dev
https://golang.org/cl/9502043"
alandonovan,2013-08-27 21:57:55,https://api.github.com/repos/golang/tools/git/commits/be2647ec014c2ebdfd0966ee738aa18a29b24df9,be2647ec014c2ebdfd0966ee738aa18a29b24df9,"go.tools/ssa: fix bug in Program.VarValue.

Before, VarValue looked for the ssa.Value for the 'var' object
in the same package as the object was defined, but this is
(obviously) wrong for a cross-package FieldVal selection,
expr.f.  The caller must provide the package containing the
reference.

+ test.

Also:
- add 2 TODOs.
- split builder.expr into two functions so we don't need
  defer, which makes panic dumps harder to read.

R=golang-dev, crawshaw
CC=golang-dev
https://golang.org/cl/13257045"
alandonovan,2013-08-27 15:18:31,https://api.github.com/repos/golang/tools/git/commits/de47ebac4bb2750ce488a2e7595a1cec6a06ffc6,de47ebac4bb2750ce488a2e7595a1cec6a06ffc6,"go.tools/ssa: fix bad type info in 'for _ = range channel'.

Previously, if the result was not wanted, the received
(value, ok) tuple had no type for 'value'.
Now it is always set to the channel's element type.

Also: set the position on such receive instructions to that of
the = or := token, and document it.

+ (indirect) test via pointer analysis.

R=crawshaw, gri
CC=golang-dev
https://golang.org/cl/12956052"
alandonovan,2013-08-22 21:10:06,https://api.github.com/repos/golang/tools/git/commits/7ce958b4a5d2a91f20709c2a0978b84cb966ca27,7ce958b4a5d2a91f20709c2a0978b84cb966ca27,"go.tools/pointer: fix build breakage.

(caused by overlapping pending CLs at commit time).

R=crawshaw
TBR=crawshaw
CC=golang-dev
https://golang.org/cl/12820048"
alandonovan,2013-08-22 16:27:55,https://api.github.com/repos/golang/tools/git/commits/6643abb26c4eebe7b5608a0066b7c1d4e3841512,6643abb26c4eebe7b5608a0066b7c1d4e3841512,"go.tools/pointer: inclusion-based pointer analysis for Go.

Suggested reading order:
- doc.go
- api.go, analysis.go, callgraph.go, labels.go
- print.go, util.go
- gen.go
- solve.go
- pointer_test.go, testdata/*
- intrinsics.go (none are implemented yet)

R=dannyb, gri, crawshaw, 0xjnml
CC=golang-dev
https://golang.org/cl/10618043"
alandonovan,2013-08-22 14:13:51,https://api.github.com/repos/golang/tools/git/commits/c8a6890a12cba10819c367a5d4c8b2d2ef24b2ed,c8a6890a12cba10819c367a5d4c8b2d2ef24b2ed,"go.tools/ssa: fix a bug building SSA code for ast.CompositeLit.

Map literals should use the same recursion logic as
struct/array/slice literals to apply an implicit &-operator to
the nested literals when a pointer is wanted.

+ test.

Also:
- ensure we set the source location for all Lookup and
  MapUpdate instructions.
- remove obsolete address.object field.

R=gri, crawshaw
CC=golang-dev
https://golang.org/cl/12787048"
adg,2013-08-22 01:44:39,https://api.github.com/repos/golang/tools/git/commits/890e4c0731e69d8d70cd0d17704e6af6475b9cb1,890e4c0731e69d8d70cd0d17704e6af6475b9cb1,"go.tools/cmd/vet: exclude ""%#v"" from recursive stringer check

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/13163043"
adg,2013-08-22 01:29:44,https://api.github.com/repos/golang/tools/git/commits/f6a22edf6613f6638e03bfcd47d59757d18dd76f,f6a22edf6613f6638e03bfcd47d59757d18dd76f,"go.tools/cmd/vet: relax recursive stringer check

For the pointer receiver x, fmt.Sprintf(*x) does not invoke x's String
method.

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/12971045"
dsymonds,2013-08-21 03:55:33,https://api.github.com/repos/golang/tools/git/commits/cec37cabd426081019c99e1f10db12586be8fc8d,cec37cabd426081019c99e1f10db12586be8fc8d,"go/vcs: add proper error handling to test.

Fix a couple of error messages to report better messages.

R=adg
CC=golang-dev
https://golang.org/cl/13146043"
adg,2013-08-21 03:49:05,https://api.github.com/repos/golang/tools/git/commits/373fd88c8039cfea5ce737c07f38abaa366f830a,373fd88c8039cfea5ce737c07f38abaa366f830a,"go.tools/cmd: move static files into new package 'static'

Fixes golang/go#6200.

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/12805046"
paranoiacblack,2013-08-21 03:10:15,https://api.github.com/repos/golang/tools/git/commits/d64ad4559481af3dec02fd674171e9b9282a7eee,d64ad4559481af3dec02fd674171e9b9282a7eee,"go.tools/go/vcs: add logging functionality and create/log at revision
Add support for logging commands for Mercurial and Subversion as well as the ability to create/log a repo at a certain revision.

- Exported Cmd.LogCmd
- Exported Cmd.CreateAtRev
- Exported Cmd.Log
- Exported Cmd.LogAtRev

R=adg
CC=golang-dev
https://golang.org/cl/13060044"
adg,2013-08-21 01:08:25,https://api.github.com/repos/golang/tools/git/commits/de72360261aa5245fb17e9f4d503d1f9f4fd0e41,de72360261aa5245fb17e9f4d503d1f9f4fd0e41,"go.tools/cmd/vet: fix build of testdata package

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/13144043"
adg,2013-08-21 01:07:53,https://api.github.com/repos/golang/tools/git/commits/61d86e98d586bc1a4715eb92069199268a2445a9,61d86e98d586bc1a4715eb92069199268a2445a9,"go.tools/cmd/vet: check for recursive stringers

Fixes golang/go#6129.

R=r
CC=golang-dev
https://golang.org/cl/12936046"
bradfitz,2013-08-20 22:39:49,https://api.github.com/repos/golang/tools/git/commits/3e29592dba4a7aee36a50e98f6493e097bf2ecc3,3e29592dba4a7aee36a50e98f6493e097bf2ecc3,"cmd/vet: move whitelist to its own package

App Engine needs the whitelist file and it's cleaner if it's
in its own package where it can be imported directly, without
pushing composite.go through a pile of sed.

R=dsymonds, r
CC=golang-dev
https://golang.org/cl/12746045"
alandonovan,2013-08-20 18:50:13,https://api.github.com/repos/golang/tools/git/commits/99ac9493e10d8042294a784b117a525cc799ee63,99ac9493e10d8042294a784b117a525cc799ee63,"go.types/ssa: add back Signature.Recv to interface method wrappers.

It is needed after all, as I discovered in the pointer analysis.
(ssa needs more API test coverage.)

Also:
- sanity: remove debugging cruft
- promote: don't redundantly include the function's
  own name in its Synthetic string.
- print: IntuitiveMethodSet utility fixes a bug in the
  printing logic (for interface types, mset(*T) is empty).
  The function is also used by the Oracle.

R=crawshaw
CC=golang-dev
https://golang.org/cl/13116043"
adg,2013-08-20 06:11:01,https://api.github.com/repos/golang/tools/git/commits/74ecc2c09b18d5645b916a780e1ac79b0b86c223,74ecc2c09b18d5645b916a780e1ac79b0b86c223,"go.tools/cmd/vet: detect useless function comparisons

Also fix bug in types.go discovered by this check.

Fixes golang/go#5347.

R=golang-dev, dsymonds, r
CC=golang-dev
https://golang.org/cl/13102043"
bradfitz,2013-08-20 05:29:56,https://api.github.com/repos/golang/tools/git/commits/7c5549876ed3f6b12a601f34508ed22b8576d63b,7c5549876ed3f6b12a601f34508ed22b8576d63b,"cmd/godoc: don't parse HTML templates in command-line mode

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/12956044"
adg,2013-08-20 05:26:04,https://api.github.com/repos/golang/tools/git/commits/4e1a4d9fde6a700ec24be54b8ff0fc060e110517,4e1a4d9fde6a700ec24be54b8ff0fc060e110517,"go.tools/go/types: fix bad function comparison

Issue found by vet -nilfunc.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/12816044"
alandonovan,2013-08-19 21:51:33,https://api.github.com/repos/golang/tools/git/commits/5cbf2abd36240fbd8b2c34aacad2ba093baedb29,5cbf2abd36240fbd8b2c34aacad2ba093baedb29,"go.tools/ssa: ensure address-deriving operations panic on nil inputs.

&x.f, &x[0], x[i:j], &*x all must panic if x==nil.

The first three are already addressed by the semantics of
FieldAddr, IndexAddr, Slice; updated docs to reflect this.
The final case requires generation of an additional dynamic check.

See golang.org/s/go12nil for details.

Tested on $GOROOT/test/nilptr2.go (with patch from CL 13108043)

Also: remove a TODO where a no-op will do.

R=gri, crawshaw
CC=golang-dev, rsc
https://golang.org/cl/13064044"
alandonovan,2013-08-19 19:38:30,https://api.github.com/repos/golang/tools/git/commits/7072253af5300c9a2c2141cb64f57f7ff7a2282f,7072253af5300c9a2c2141cb64f57f7ff7a2282f,"go.tools/ssa: fixes, cleanups, cosmetic tweaks.

Fix bug: the Signature for an interface method wrapper
erroneously had a non-nil receiver.

Function:
- Set Pkg field non-nil even for wrappers.
  It is equal to that of the wrapped function.
  Only wrappers of error.Error
  (and its embeddings in other interfaces) may have nil.
  Sanity checker now asserts this.
- FullName() now uses .Synthetic field to discriminate
  synthetic methods, not Pkg==nil.
- Fullname() uses new relType() utility to print receiver type
  name unqualified if it belongs to the same package.
  (Alloc.String also uses relType utility.)

CallCommon:
- Description(): fix switch logic broken when we
  eliminated the Recv field.
- better docs.

R=david.crawshaw, crawshaw, gri
CC=golang-dev
https://golang.org/cl/13057043"
alandonovan,2013-08-19 19:14:13,https://api.github.com/repos/golang/tools/git/commits/df0c50c614176e51316a11f95897cdb4fc86fcfc,df0c50c614176e51316a11f95897cdb4fc86fcfc,"go.tools/importer: retain scope information.

(It's needed by the oracle.)

R=crawshaw, gri
CC=golang-dev
https://golang.org/cl/13071043"
alandonovan,2013-08-19 19:00:25,https://api.github.com/repos/golang/tools/git/commits/50bd0e328866c6ca130cbdc0c65e40a131d667ff,50bd0e328866c6ca130cbdc0c65e40a131d667ff,"go.tools/ssa: synthesize main functions for test packages.

Package.CreateTestMainFunction() creates a function called
main and adds it to the package.  This function calls
testing.Main in the Go library with the appropriate arguments:
slices of test, benchmark and example functions from the
package.

Tested by running the interpreter on the following tests:
- unicode/script_test.go
- unicode/digit_test.go
- hash/crc32/crc32_test.go
- path/path_test.go

It's also covered indirectly via the pointer analysis.

R=crawshaw, gri
CC=golang-dev
https://golang.org/cl/12814046"
alandonovan,2013-08-19 16:50:40,https://api.github.com/repos/golang/tools/git/commits/3b53279d8f7ee670151761f69aa5ebaeeb73cd81,3b53279d8f7ee670151761f69aa5ebaeeb73cd81,"go.tools/ssa: preserve type of &&/|| operands in result.

+ test.

With this change, the Go Oracle is now self-aware. :)

R=gri, rsc
CC=golang-dev
https://golang.org/cl/12381043"
davecheney,2013-08-19 06:22:31,https://api.github.com/repos/golang/tools/git/commits/41a15a301319ec3a4be03eda90e9611b44701e9c,41a15a301319ec3a4be03eda90e9611b44701e9c,"go.tools/go/vcs: do not delete $TMPDIR during test runs

The test would nuke the entire contents of os.TempDir on completion.

This change corrects the code to use ioutil.TempDir.

R=r, adg
CC=golang-dev
https://golang.org/cl/12796045"
dsymonds,2013-08-19 01:12:44,https://api.github.com/repos/golang/tools/git/commits/a7c698b0708dd0f934fa791e9925a4013165996a,a7c698b0708dd0f934fa791e9925a4013165996a,"undo CL 12811043 / 44387735a77d

Not the right thing to do.
Fixes golang/go#6148.

««« original CL description
cmd/vet: flag redundant invocations of String and Error methods in printf calls.

R=r
CC=golang-dev
https://golang.org/cl/12811043
»»»

R=r
CC=golang-dev
https://golang.org/cl/13034043"
bradfitz,2013-08-17 02:49:24,https://api.github.com/repos/golang/tools/git/commits/1633383a2bb20dcafbba3df60dbb94374cadd414,1633383a2bb20dcafbba3df60dbb94374cadd414,"cmd/godoc: don't start up indexer in command-line mode

Fixes golang/go#6075

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/12995044"
adg,2013-08-16 03:44:52,https://api.github.com/repos/golang/tools/git/commits/32acd2b3728c7ef49b858aaa32633034f6c7f52d,32acd2b3728c7ef49b858aaa32633034f6c7f52d,"go.tools/cmd/godoc: redirect old pkg/cmd paths

fixes golang/go#5317.

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/12869046"
adg,2013-08-16 01:44:27,https://api.github.com/repos/golang/tools/git/commits/562e4faeca3a05090422a0cf8e43d8608129d53e,562e4faeca3a05090422a0cf8e43d8608129d53e,"cmd/godoc: bake templates and scripts into godoc binary

Add godoc/vfs/mapfs package for serving baked files.

Fixes golang/go#6010.

R=golang-dev, bradfitz, r, arnehormann, rsc
CC=golang-dev
https://golang.org/cl/12978043"
paranoiacblack,2013-08-15 16:00:02,https://api.github.com/repos/golang/tools/git/commits/dfa65ded175c9b59931f427bb1fcadc8dece55d5,dfa65ded175c9b59931f427bb1fcadc8dece55d5,"go.tools: add go/vcs
go/vcs exposes cmd/go/vcs.go from the `go get` command.

- Exported global variables `Verbose` and `ShowCmd` to replace `buildV` and `buildX` from cmd/go/main.go.
- Moved environment building code (envForDir, mergeEnvLists)from cmd/go/main.go to env.go
- Exported Cmd and its methods: Create, Download, Ping, TagSync, and Tags
- Exported ByCmd and FromDir functions for constructing Cmd
- Exported TagCmd
- Exported RepoRoot
- Exported RepoRootForImport* functions for constructing RepoRoot

R=golang-dev, adg, cmang, bradfitz
CC=golang-dev
https://golang.org/cl/12058054"
griesemer,2013-08-14 18:02:10,https://api.github.com/repos/golang/tools/git/commits/ae874abc7a72a327ef87016e8c10edacbe4ab1d0,ae874abc7a72a327ef87016e8c10edacbe4ab1d0,"go.tools/go/types: *interface types have no methods

Fixes golang/go#5918.

R=adonovan
CC=golang-dev
https://golang.org/cl/12909043"
griesemer,2013-08-13 22:00:07,https://api.github.com/repos/golang/tools/git/commits/0b3996b1d36e3cbbdd22709f3312068c87e1ed0b,0b3996b1d36e3cbbdd22709f3312068c87e1ed0b,"go.tools/ssa/interp: add missing ""external"" (fix build)

R=adonovan, bradfitz
CC=golang-dev
https://golang.org/cl/12898043"
dsymonds,2013-08-13 03:47:58,https://api.github.com/repos/golang/tools/git/commits/c0b6badc83baaf67ef8db0adb9b2539c39f09ed6,c0b6badc83baaf67ef8db0adb9b2539c39f09ed6,"cmd/vet: flag redundant invocations of String and Error methods in printf calls.

R=r
CC=golang-dev
https://golang.org/cl/12811043"
griesemer,2013-08-12 21:57:08,https://api.github.com/repos/golang/tools/git/commits/d13d94afe78f847f81a504071dafdb378cea6438,d13d94afe78f847f81a504071dafdb378cea6438,"go.tools/go/types: do rounding in constant numeric conversions

- cleaned up surrounding code
- adjusted error message positions for too few/many argument errors
- added more conversion tests
- added all tests under test/ken to std tests

R=adonovan, r
TBR=adonovan
CC=golang-dev
https://golang.org/cl/12711043"
griesemer,2013-08-09 03:54:28,https://api.github.com/repos/golang/tools/git/commits/508ae115ae81ced77301e3fa8cad86b776ae16b9,508ae115ae81ced77301e3fa8cad86b776ae16b9,"go.tools/go/types: added missing test for file scopes

R=adonovan, r
CC=golang-dev
https://golang.org/cl/12671044"
robpike,2013-08-09 03:48:46,https://api.github.com/repos/golang/tools/git/commits/28fe5aa8d355beddcc03086357bcdcec2a33782d,28fe5aa8d355beddcc03086357bcdcec2a33782d,"go.tools/cmd/cover: s/ParseInt/Atoi/
So people stop asking me to do this.

R=golang-dev, rsc
CC=golang-dev
https://golang.org/cl/12691044"
griesemer,2013-08-09 03:27:15,https://api.github.com/repos/golang/tools/git/commits/2449594308855e4191921631d10f37152c7f8ea8,2449594308855e4191921631d10f37152c7f8ea8,"go.tools/go.types: retain ast.Node links on demand only

- support Info.Scopes mapping that maps ast.Nodes
  to the respective *Scope
- remove old node link from *Scope
- added corresponding API test

Also: re-enable debug mode (the faster version was
only important for the go api tool, which  has its
own version now).

R=adonovan, r
CC=golang-dev
https://golang.org/cl/12552047"
robpike,2013-08-09 02:55:21,https://api.github.com/repos/golang/tools/git/commits/4622486b626d22465cf8248b39f3e5a169ec8f25,4622486b626d22465cf8248b39f3e5a169ec8f25,"go.tools/cmd/cover: add -func mode to print per-function coverage

fmt/format.go:	init			100.0%
fmt/format.go:	clearflags		100.0%
fmt/format.go:	init			100.0%
fmt/format.go:	computePadding		84.6%
fmt/format.go:	writePadding		83.3%
...
total:		(statements)		91.3%

Fixes golang/go#5985.

R=golang-dev, dave, gri
CC=golang-dev
https://golang.org/cl/12454043"
griesemer,2013-08-07 21:09:50,https://api.github.com/repos/golang/tools/git/commits/875ff2496f865e805b15e42b9cefc98cc18b4744,875ff2496f865e805b15e42b9cefc98cc18b4744,"go.tools/go/types: support for fake imports of package ""C""

Also:
- cleaner method set printing
- disable debug mode internally (50% faster)

R=adonovan, bradfitz
CC=golang-dev
https://golang.org/cl/12578043"
griesemer,2013-08-06 18:27:05,https://api.github.com/repos/golang/tools/git/commits/56b9e46247a88d0efe316362880daabe96ecb555,56b9e46247a88d0efe316362880daabe96ecb555,"go.tools/go/types: fewer guarantees in case of type errors

Provide fewer guarantees regarding the collected result
type information in types.Info if there are type errors.

Specifically, don't record nil objects in the Objects map
in case of a declaration error; instead, simply omit them.

R=adonovan
TBR=adonovan
CC=golang-dev
https://golang.org/cl/12553043"
robpike,2013-08-06 06:19:10,https://api.github.com/repos/golang/tools/git/commits/75920173e4c0a4057c258aea2f1a72ba75ca4b51,75920173e4c0a4057c258aea2f1a72ba75ca4b51,"go.tools/go/types: don't put an interface nil into the Objects map
If a method cannot type check, we end up with the interface variable
m to hold <*Func, nil>. Don't put that in the map because it defeats
the usual != nil check.

R=gri, dsymonds
CC=golang-dev
https://golang.org/cl/12506043"
griesemer,2013-08-05 21:02:52,https://api.github.com/repos/golang/tools/git/commits/45e3d57f327e01869d66a315a85b71505678261e,45e3d57f327e01869d66a315a85b71505678261e,"go.tools/cmd/vet: enable test (fix build)

R=r
TBR=r
CC=golang-dev
https://golang.org/cl/12482043"
griesemer,2013-08-05 20:54:22,https://api.github.com/repos/golang/tools/git/commits/b956928b06fbb6d0289602d080ffb3b897426d75,b956928b06fbb6d0289602d080ffb3b897426d75,"go.tools/go/types: Fix for broken IsAssignableTo.

Was broken by CL 12378043.

- factored out some error checking code
- adjusted error positions

R=adonovan
TBR=adonovan
CC=golang-dev
https://golang.org/cl/12401043"
dsymonds,2013-08-05 03:54:22,https://api.github.com/repos/golang/tools/git/commits/1dce9cc7c790c12e145155682a8590b64be89675,1dce9cc7c790c12e145155682a8590b64be89675,"go/types: exclude a couple of files from the stdlib test that don't parse on Windows.

They use stuff in syscall that doesn't exist on Windows, and this test does not
parse build tags (not that we make that easy) to automatically skip them.

R=golang-dev, r, gri
CC=golang-dev
https://golang.org/cl/12453043"
robpike,2013-08-03 05:56:56,https://api.github.com/repos/golang/tools/git/commits/c333e7a7b649f5ebb54498051659abf01d4d4c3a,c333e7a7b649f5ebb54498051659abf01d4d4c3a,"go.tools/cmd/vet: fix go.tools build
TBR: gri

I cannot create an issue on the tracker for some reason, so here it is:
go vet contains this snippet:

        if types.IsAssignableTo(typ, errorType) || types.IsAssignableTo(typ, stringerType) {

It's getting the wrong answer: It claims

interface {
        f()
}

or even

interface {
        f() float64
}

matches the Error and Stringer interfaces. Both of them.  This causes a test failure:
$ go test code.google.com/p/go.tools/cmd/vet
BUG: errchk: testdata/print.go:124: missing expected error: '""for printf verb %s of wrong type""'
$
This worked until very recently.

R=gri
CC=golang-dev
https://golang.org/cl/12398043"
robpike,2013-08-03 02:19:59,https://api.github.com/repos/golang/tools/git/commits/aecec2f502b498f27ec88c065de8eda3e29776dd,aecec2f502b498f27ec88c065de8eda3e29776dd,"go.tools/cmd/vet: the composite test is about keys, not tags
Fix the confusion.
No semantic change, just some renamings.

Fixes golang/go#6017.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/12394043"
griesemer,2013-08-02 21:37:19,https://api.github.com/repos/golang/tools/git/commits/3209d6ad734d934b76bdce554581d0da20121ab4,3209d6ad734d934b76bdce554581d0da20121ab4,"go.tools/go/types: fix interface vs interface type assertion

R=adonovan
CC=golang-dev
https://golang.org/cl/12378043"
griesemer,2013-08-02 16:33:37,https://api.github.com/repos/golang/tools/git/commits/e06b897351850a7b973cc3284937a45bcf090593,e06b897351850a7b973cc3284937a45bcf090593,"go.tools/go/types: mark imported named types as 'complete'

Fixes ""illegal cycle"" error for: go tool vet -v pkg/unicode.

R=adonovan
CC=golang-dev
https://golang.org/cl/12355043"
robpike,2013-08-02 12:52:38,https://api.github.com/repos/golang/tools/git/commits/797431e1a314e09984500e2425acb8e4fd4854f2,797431e1a314e09984500e2425acb8e4fd4854f2,"go.tools/cmd/vet: fix printf analysis for structs.
The old code only got it right for Stringers (etc.) and a few other simple cases.
But the rule used by fmt.Printf for non-Stringers is that pointers to structs
print as pointers, the rest must satisfy the format verb element-wise.
Thus for example
        struct {a int, b []byte}
prints with %d and %q (sic) but not %g.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/12340043"
alexbrainman,2013-08-02 06:25:49,https://api.github.com/repos/golang/tools/git/commits/4ff367ac3ce3d502721a1430b8e5f88cc3a4225c,4ff367ac3ce3d502721a1430b8e5f88cc3a4225c,"go.tools/ssa: fix windows build

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/12320043"
griesemer,2013-08-01 23:37:56,https://api.github.com/repos/golang/tools/git/commits/4ceda807d521e08cfe7272733044ca3766e7fdc9,4ceda807d521e08cfe7272733044ca3766e7fdc9,"go.tools/go/types: add mode to typecheck pkg-level decls only

This is useful for situations where one only cares about
exports, for instance (as in the goapi checker).

R=adonovan, bradfitz
CC=golang-dev
https://golang.org/cl/12292043"
alandonovan,2013-08-01 19:38:41,https://api.github.com/repos/golang/tools/git/commits/61a33ecd43ff7fef03e020d759dd542085e0c551,61a33ecd43ff7fef03e020d759dd542085e0c551,"go.tools/go/types: fix: the type of a method value should not have a reciever

e.g.
type T int
func (T) f() {}
var t T
_ = t.f  // method value: should have signature ""func()"", no receiver

Also:
- ssa: add sanity check that helped diagnose this.

R=gri
CC=golang-dev
https://golang.org/cl/12283043"
alandonovan,2013-08-01 18:06:10,https://api.github.com/repos/golang/tools/git/commits/5cc33ea5a7c9184a69f02b22d60c44361ce0fe68,5cc33ea5a7c9184a69f02b22d60c44361ce0fe68,"go.tools/ssa: cosmetic changes to ssa.Alloc.

Remove its 'name' field and treat it just like any other
ssa.Register: it gets a temp name like ""t1"".

Instead, give it a comment field holding its purpose, e.g, ""x""
for a source-level vare, or ""new"", ""slicelit"", ""complit"" or
""varargs"".

This improves usability of tools whose UI needs to refer to a
particular allocation site.

R=gri
CC=golang-dev
https://golang.org/cl/12273043"
adg,2013-08-01 07:43:31,https://api.github.com/repos/golang/tools/git/commits/8d550395600098be42e72cb7bebb1a2b72ec61e6,8d550395600098be42e72cb7bebb1a2b72ec61e6,"go.tools/cmd/godoc: fix typo

R=golang-dev
CC=golang-dev
https://golang.org/cl/12238043"
adg,2013-08-01 07:37:20,https://api.github.com/repos/golang/tools/git/commits/37c18cdcf3aff529d2ddc9c480be7ee444fbd59c,37c18cdcf3aff529d2ddc9c480be7ee444fbd59c,"go.tools/cmd/godoc: start indexer in app engine mode

R=golang-dev
CC=golang-dev
https://golang.org/cl/12237044"
adg,2013-08-01 07:36:56,https://api.github.com/repos/golang/tools/git/commits/0830cbddc92c7859c9be977c1ea1dd949e45eac0,0830cbddc92c7859c9be977c1ea1dd949e45eac0,"go.talks/cmd/godoc: add jquery.js and style.css

Somehow missed these.

R=golang-dev
CC=golang-dev
https://golang.org/cl/12233043"
adg,2013-08-01 05:08:46,https://api.github.com/repos/golang/tools/git/commits/0afeff2d4b7467d1a53f05caec1452c7e7120776,0afeff2d4b7467d1a53f05caec1452c7e7120776,"go.tools/cmd/godoc: add godocs.js and playground.js from core repo

The originals will be removed.

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/12219043"
paranoiacblack,2013-08-01 03:23:51,https://api.github.com/repos/golang/tools/git/commits/a705311956be8b6f407d08438c9be24b0bd595f8,a705311956be8b6f407d08438c9be24b0bd595f8,"go.tools: add dashboard
Moving misc/dashboard to its new home. It will be deleted
(except for misc/dashboard/codereview) from its current home
if this is approved.

R=golang-dev, bradfitz, cmang, adg
CC=golang-dev
https://golang.org/cl/12180043"
griesemer,2013-08-01 03:08:18,https://api.github.com/repos/golang/tools/git/commits/caf3fc90ed3fe63c78010a733202d0d1933ab7a1,caf3fc90ed3fe63c78010a733202d0d1933ab7a1,"go.tools/go/types: test against test/fixedbugs

Fixed several bugs:
- lhs blank identifier may be parenthesized: (_) = 0 is ok
- constant shift counts in non-constant shifts must be >= 0
- init functions must have a body

Classified currently failing tests:
- 10 classes of errors not checked at the moment

R=adonovan, r
CC=golang-dev
https://golang.org/cl/11952046"
alandonovan,2013-08-01 01:31:46,https://api.github.com/repos/golang/tools/git/commits/e7016436a68110719372ace23ad9280ab4cfa432,e7016436a68110719372ace23ad9280ab4cfa432,"go.tools/ssa: accommodate go/types changes to value,ok-mode inferred types.

The required changes were surprisingly minimal (I was hoping for a net
code deletion) because ssa is essentially doing its own type inference
for the three value,ok operators---and it continues to have to do so.
To see why, consider:

  var i interface{}; var ok bool
  i, ok := (map[string]string)(nil)[""""]

Before, go/types inferred interface{} for the RHS of the assignment,
and now it infers (interface{}, bool), yet neither of these is what
ssa needs: it needs to know that the map values were strings so
that it can emit a lookup of the right type followed by a conversion
from string to interface{}.

TBR=gri
CC=golang-dev
https://golang.org/cl/11988044"
adg,2013-08-01 01:01:10,https://api.github.com/repos/golang/tools/git/commits/508186a7653be66b05ea9a5820a14ab55f93875c,508186a7653be66b05ea9a5820a14ab55f93875c,"go.tools/cmd/godoc: copy templates from $GOROOT/lib/godoc

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/12209043"
griesemer,2013-07-31 19:49:34,https://api.github.com/repos/golang/tools/git/commits/ae07aa605539f692f7745cbd52de6e283e996ec7,ae07aa605539f692f7745cbd52de6e283e996ec7,"go.tools/go/types: return typed bool for comma-ok expressions

Also: determine default types for assignments of the form: _ = x .

R=adonovan
CC=golang-dev
https://golang.org/cl/12186043"
alandonovan,2013-07-31 17:30:59,https://api.github.com/repos/golang/tools/git/commits/323b856f4d9fe766320dacd8fbc16297f7a17ad6,323b856f4d9fe766320dacd8fbc16297f7a17ad6,"go.tools/ssa: oops, missing file from CL 12147043.

(Should fix build; ssa tests remain broken from CL 12024046)

R=gri
TBR=gri
CC=golang-dev
https://golang.org/cl/12002046"
alandonovan,2013-07-31 17:13:05,https://api.github.com/repos/golang/tools/git/commits/c28bf6e069be915eca45e6d949b2489f66b5b81b,c28bf6e069be915eca45e6d949b2489f66b5b81b,"go.tools/ssa: extend debug information to arbitrary ast.Exprs.

CanonicalPos was inadequate since many pairs of instruction share the same pos (e.g. Allocs and Phis).  Instead, we generalize the DebugRef instruction to associate not just Idents but Exprs with ssa.Values.

We no longer store any DebugRefs for constant expressions, to save space.  (The type and value of such expressions can be obtained by other means, at a cost in complexity.)

Function.ValueForExpr queries the DebugRef info to return the ssa.Value of a given Expr.

Added tests.

Also:
- the DebugInfo flag is now per package, not global.
   It must be set between Create and Build phases if desired.
- {Value,Instruction}.Pos() documentation updated: we still maintain
  this information in the instruction stream even in non-debug mode,
  but we make fewer claims about its invariants.
- Go and Defer instructions can now use their respective go/defer
   token positions (not the call's lparen), so they do.
- SelectState:
     Posn token.Pos indicates the <- position
     DebugNode ast.Expr is the send stmt or receive expr.
- In building SelectStmt, we introduce extra temporaries in debug
   mode to hold the result of the receive in 'case <-ch' even though
   this value isn't ordinarily needed.
- Use *SelectState (indirectly) since the struct is getting bigger.
- Document some missing instructions in doc.go.

R=gri
CC=golang-dev
https://golang.org/cl/12147043"
griesemer,2013-07-31 16:33:46,https://api.github.com/repos/golang/tools/git/commits/e5cfd92deb348030b7cfe7846ac2302084443029,e5cfd92deb348030b7cfe7846ac2302084443029,"go.tools/go/types: record comma-ok results as tuples

- added corresponding api tests
- support tuple comparison with IsIdentical

This CL will require some adjustments to SSA.

R=adonovan
CC=golang-dev
https://golang.org/cl/12024046"
griesemer,2013-07-31 03:28:18,https://api.github.com/repos/golang/tools/git/commits/eae0511b70367bc78d30d83e39f278fb63cdf3a2,eae0511b70367bc78d30d83e39f278fb63cdf3a2,"go.tools/ssa/interp: fix build

fallthrough's are now checked - adjust
now illegal test.

TBR: adonovan

R=adonovan
CC=golang-dev
https://golang.org/cl/12041052"
griesemer,2013-07-30 23:00:57,https://api.github.com/repos/golang/tools/git/commits/1e79a68ff5697ab72a7d87292cf3793252913de7,1e79a68ff5697ab72a7d87292cf3793252913de7,"go.tools/go/types: check fallthrough statements

R=adonovan
CC=golang-dev
https://golang.org/cl/12041049"
bradfitz,2013-07-30 20:42:50,https://api.github.com/repos/golang/tools/git/commits/143d18d6c5f71dd1b0c5966c52de5fb5384a6d0c,143d18d6c5f71dd1b0c5966c52de5fb5384a6d0c,"cmd/godoc: fix build

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/12127043"
alandonovan,2013-07-30 20:36:58,https://api.github.com/repos/golang/tools/git/commits/2f6855ad75cc39dfe74576426045b386bf965997,2f6855ad75cc39dfe74576426045b386bf965997,"go.tools/ssa: avoid calling go/types.NewSelection, and eliminate it.

Also: s/LookupMethod/Method/

R=gri
CC=golang-dev
https://golang.org/cl/12058052"
griesemer,2013-07-30 20:15:28,https://api.github.com/repos/golang/tools/git/commits/4ae33302a4bfb136675050ed01bf075250e40160,4ae33302a4bfb136675050ed01bf075250e40160,"go.tools/go/types: map keys must be comparable

R=adonovan
CC=golang-dev
https://golang.org/cl/12102044"
griesemer,2013-07-30 19:47:40,https://api.github.com/repos/golang/tools/git/commits/33d57bf48f2422f230218e0a663cd0994bb4ab4b,33d57bf48f2422f230218e0a663cd0994bb4ab4b,"go.tools/go/types: report identifier for methods with blank names

R=adonovan
CC=golang-dev
https://golang.org/cl/12123045"
alandonovan,2013-07-30 18:28:14,https://api.github.com/repos/golang/tools/git/commits/2a3a12930b2759c2d7f3b1e355fcf8fbc3a7c336,2a3a12930b2759c2d7f3b1e355fcf8fbc3a7c336,"go.tools/ssa: add test of SSA construction on $GOROOT/src/pkg/...

stdlib_test runs the builder (in sanity-checking mode) over
the Go standard library.  It also prints some stats about
the time and memory usage.

Also:
- importer.LoadPackage too (not just doImport) must consult
  the cache to avoid creating duplicate Package instances for
  the same import path when called serially from a test.
- importer: skip empty directories without an error.
- importer: print all errors, not just the first.
- visit.go: added AllFunctions utility for enumerating all
  Functions in a Program.
- ssa.MethodSet is not safe to expose from the package since
  it must be accessed under an (inaccessible) lock.  (!!!)
  This CL makes it unexported and restricts its use to the
  single function Program.LookupMethod().
- Program.MethodSet() has gone.
  Clients should instead iterate over the types.MethodSet
  and call LookupMethod.
- Package.DumpTo(): improved efficiency of methodset printing
  (by not creating wrappers) and accuracy (by showing * on
  receiver type only when necessary).
- Program.CreatePackage: documented precondition and added
  assertion.

R=gri
CC=golang-dev
https://golang.org/cl/12058048"
griesemer,2013-07-30 18:10:28,https://api.github.com/repos/golang/tools/git/commits/e7c7afbb1a9ca2aff304fb20721a87d8efe9256d,e7c7afbb1a9ca2aff304fb20721a87d8efe9256d,"go.tools/go/types: enable (previously broken) shift tests

R=adonovan
CC=golang-dev
https://golang.org/cl/12109044"
griesemer,2013-07-30 17:28:57,https://api.github.com/repos/golang/tools/git/commits/7a1a18283b36aa39bac04f9967a52e01461a7d9e,7a1a18283b36aa39bac04f9967a52e01461a7d9e,"go.tools/go/types: constant shifts always produce integers (bug fix)

R=adonovan
CC=golang-dev
https://golang.org/cl/12025044"
griesemer,2013-07-30 16:00:25,https://api.github.com/repos/golang/tools/git/commits/30c6d6350dcffcc67b82e5180938fde12c626e22,30c6d6350dcffcc67b82e5180938fde12c626e22,"go.tools/go/types: check type-checker against $GOROOT/test

R=adonovan
CC=golang-dev
https://golang.org/cl/12070044"
robpike,2013-07-30 05:51:35,https://api.github.com/repos/golang/tools/git/commits/2a8b9debdde0307f91248528a6fd60ad14a810da,2a8b9debdde0307f91248528a6fd60ad14a810da,"go.tools/cmd/vet: don't complain about empty interface values in printf

R=dsymonds
CC=golang-dev
https://golang.org/cl/12005047"
adg,2013-07-30 04:23:23,https://api.github.com/repos/golang/tools/git/commits/253974207b0e8eeede38edb7534277d551358e72,253974207b0e8eeede38edb7534277d551358e72,"go.tools/cmd/godoc: update appinit.go to use new godoc packages

Also move some common code from main.go to handlers.go, and
exclude remotesearch.go from the appengine build (it is only
relevant to the command line interface).

R=bradfitz, dsymonds
CC=golang-dev
https://golang.org/cl/12001049"
robpike,2013-07-30 04:00:52,https://api.github.com/repos/golang/tools/git/commits/5ba51116ee39a14a475d7f92a16dd676fccd0729,5ba51116ee39a14a475d7f92a16dd676fccd0729,"go.tools/cmd/vet: treat arrays like slices in the printf checks.
The analysis for types.Array was just missing. It's the same as a slice,
but we can't share code easily because the types differ, so we just dup it.

R=dsymonds
CC=golang-dev
https://golang.org/cl/12041045"
dsymonds,2013-07-30 03:41:07,https://api.github.com/repos/golang/tools/git/commits/40baf7558775cf890f7dc6c1e0ac3001b45d02b4,40baf7558775cf890f7dc6c1e0ac3001b45d02b4,"cmd/vet: Avoid warning on pointer to invalid types.

TBR=r
CC=golang-dev
https://golang.org/cl/12038051"
dsymonds,2013-07-30 03:15:31,https://api.github.com/repos/golang/tools/git/commits/573374c476611d26a3422497bebb46a5a63ff7ba,573374c476611d26a3422497bebb46a5a63ff7ba,"cmd/vet: Fix handling of non-Stringer arguments.

First, %v and %T accept any arguments, so they should never warn.
Second, pointer types were not handled in matchArgType.
Third, the default response for matchArgType should be false.

R=r
CC=adonovan, golang-dev
https://golang.org/cl/12038050"
alandonovan,2013-07-29 21:10:11,https://api.github.com/repos/golang/tools/git/commits/0ba53b54bdc5810fa0fc1f63d3d129037c9bb1c3,0ba53b54bdc5810fa0fc1f63d3d129037c9bb1c3,"go.tools/ssa: add debug info for x.f where Selection.Kind()==FieldVal.

Also:
- Implement Program.FuncValue for interface methods (+ test).
- go/types.Object.String(): don't package-qualify names unless
  they are package level objects---otherwise you see ""main.x"" for
  locals, struct fields, etc.
- go/types.Func.String(): don't assume Type() is *Signature;
  it could be *Builtin.

R=gri
CC=golang-dev
https://golang.org/cl/12058045"
griesemer,2013-07-29 20:22:46,https://api.github.com/repos/golang/tools/git/commits/90aa993096adbf375b520ab66536805df1e293b6,90aa993096adbf375b520ab66536805df1e293b6,"go.tools/go/types: provide package for imported methods

Fixes golang/go#5815.

R=adonovan
CC=golang-dev
https://golang.org/cl/12048043"
griesemer,2013-07-29 20:07:46,https://api.github.com/repos/golang/tools/git/commits/bb34185432e55fd6ccfbab6dffaf483225abeb03,bb34185432e55fd6ccfbab6dffaf483225abeb03,"go.tools/go/types: more implicit conversion tests

Also: Fixed grammar in selection.go comment.

R=adonovan
CC=golang-dev
https://golang.org/cl/11962043"
alandonovan,2013-07-29 18:24:09,https://api.github.com/repos/golang/tools/git/commits/fb0642f5fbf5250f12d3622a9d583dda2f418045,fb0642f5fbf5250f12d3622a9d583dda2f418045,"go.tools/ssa: fix a package-level var initialization order bug.

buildDecl was visiting all decls in source order, but the spec
calls for visiting all vars and init() funcs in order, then
all remaining functions.  These two passes are now called
buildInit(), buildFuncDecl().

+ Test.

Also:
- Added workaround to gcimporter for Func with pkg==nil.
- Prog.concreteMethods has been merged into Pkg.values.
- Prog.concreteMethod() renamed declaredFunc().
- s/mfunc/obj/ (name cleanup from recent gri CL)

R=gri
CC=golang-dev
https://golang.org/cl/12030044"
griesemer,2013-07-27 05:27:48,https://api.github.com/repos/golang/tools/git/commits/64ea46e0bcdf1bc6f3e2c56632fd1360ed28fb0e,64ea46e0bcdf1bc6f3e2c56632fd1360ed28fb0e,"go.tools/go/types: replace Method w/ Selection

A Method corresponds to a MethodVal Selection;
so the explicit Method object is not needed anymore.

- moved Selection code into separate file
- implemented Selection.String()
- improved and more consistent documentation

R=adonovan
CC=golang-dev
https://golang.org/cl/11950043"
alandonovan,2013-07-27 02:29:44,https://api.github.com/repos/golang/tools/git/commits/ba2241824d447fc55b83c0d946da6c3b8c199eda,ba2241824d447fc55b83c0d946da6c3b8c199eda,"go.tools/ssa: use new Selections to simplify builder case discrimination.

Delete importer.PkgInfo.{ClassifySelector,IsPackageRef}.

R=gri
CC=golang-dev
https://golang.org/cl/11937045"
alandonovan,2013-07-27 01:49:27,https://api.github.com/repos/golang/tools/git/commits/ae8016313d8e5881557b3db3cba3cbb5aed5f80b,ae8016313d8e5881557b3db3cba3cbb5aed5f80b,"go.tools/ssa: tests of method promotion and of interface conversion + bugfixes.

methprom.go covers method promotion.
Found bug: receiver() requires a following load under some
circumstances.

ifaceconv.go covers interface conversion.
Found bug: confusion about infallible and fallible conversions
led to use of TypeAssert in emitConv, which should never fail.
Changed semantics of ChangeInterface to make it infallible
and made some simplifications.

Also in this CL:
- SelectState.Pos now records the position of the
  the '<-' operator for sends/receives done by a Select.

R=gri
CC=golang-dev
https://golang.org/cl/11931044"
griesemer,2013-07-27 01:21:14,https://api.github.com/repos/golang/tools/git/commits/4ea4ce9e0399e7401d72897037c823939d8151ad,4ea4ce9e0399e7401d72897037c823939d8151ad,"go.tools/go/types: added missing implicit conversion checks

R=adonovan, r
CC=golang-dev
https://golang.org/cl/11934047"
griesemer,2013-07-26 20:55:14,https://api.github.com/repos/golang/tools/git/commits/41fb587948487d8fdd1ef5af4d7f082f172292cf,41fb587948487d8fdd1ef5af4d7f082f172292cf,"go.tools/go/types: implement Info.Selections

Should make it easier for clients to deal with
selector expressions.

Removed Field type: The respective information
is now reported in Info.Selections.

R=adonovan
CC=golang-dev
https://golang.org/cl/11942043"
alandonovan,2013-07-26 18:06:26,https://api.github.com/repos/golang/tools/git/commits/118786e3d67de12a1f0dbb4a34e30b55dfb75448,118786e3d67de12a1f0dbb4a34e30b55dfb75448,"go.tools/ssa: combine CallCommon.{Recv,Func} as Value.

Also:
- add types.Func.FullName() (e.g. ""fmt.Println"", ""(main.S).f"")
- remove rogue print stmt.
- fix bad docstrings.

R=gri
CC=golang-dev
https://golang.org/cl/11936044"
griesemer,2013-07-26 16:53:47,https://api.github.com/repos/golang/tools/git/commits/bf6a1e674eb6f88c1552cc8cb026d4a0dbadd7fa,bf6a1e674eb6f88c1552cc8cb026d4a0dbadd7fa,"go.tools/go/types: unsafe.Offsetof must deref named pointers to structs

R=adonovan
CC=golang-dev
https://golang.org/cl/11889043"
alandonovan,2013-07-26 15:22:34,https://api.github.com/repos/golang/tools/git/commits/4da31df1c8993875f1bc4a91c4469ab2335a37a9,4da31df1c8993875f1bc4a91c4469ab2335a37a9,"go.tools/ssa: (another) major refactoring of method-set logic.

We now use LookupFieldOrMethod for all SelectorExprs, and
simplify the logic to discriminate the various cases.

We inline static calls to promoted/indirected functions,
dramatically reducing the number of functions created.

More tests are needed, but I'd like to submit this as-is.

In this CL, we:
- rely less on Id strings.  Internally we now use
  *types.Method (and its components) almost everywhere.
- stop thinking of types.Methods as objects. They don't
  have stable identities. (Hopefully they will become
  plain-old structs soon.)
- eliminate receiver indirection wrappers:
  indirection and promotion are handled together by makeWrapper.
- Handle the interactions of promotion, indirection and
  abstract methods much more cleanly.
- support receiver-bound interface method closures.
- break up builder.selectField so we can re-use parts
  (emitFieldSelection).
- add importer.PackageInfo.classifySelector utility.
- delete interfaceMethodIndex()
- delete namedTypeMethodIndex()
- delete isSuperInterface() (replaced by types.IsAssignable)
- call memberFromObject on each declared concrete method's
  *types.Func, not on every Method frem each method set, in the
  CREATE phase for packages loaded by gcimporter.

go/types:
- document Func, Signature.Recv() better.
- use fmt in {Package,Label}.String
- reimplement Func.String to be prettier and to include method
  receivers.

API changes:
- Function.method now holds the types.Method (soon to be
  not-an-object) for synthetic wrappers.
- CallCommon.Method now contains an abstract (interface)
  method object; was an abstract method index.
- CallCommon.MethodId() gone.
- Program.LookupMethod now takes a *Method not an Id string.

R=gri
CC=golang-dev
https://golang.org/cl/11674043"
griesemer,2013-07-25 03:02:54,https://api.github.com/repos/golang/tools/git/commits/c98ff05fdd5920330e3c61c1acb857c4abff27c6,c98ff05fdd5920330e3c61c1acb857c4abff27c6,"go.tools/go/types: faster scopes, cleanups around method lookups

R=adonovan
CC=golang-dev
https://golang.org/cl/11787043"
griesemer,2013-07-24 19:39:11,https://api.github.com/repos/golang/tools/git/commits/6dbbc59ae0bcee82879e8f51cf8bdc4ca939f3eb,6dbbc59ae0bcee82879e8f51cf8bdc4ca939f3eb,"go.tools/go/types: simplify handling of blank _ identifiers

Also: Fixes a couple of places where scopes instead
      of objsets were used (missed in previous CL).

R=adonovan
CC=golang-dev
https://golang.org/cl/11419047"
griesemer,2013-07-24 19:38:51,https://api.github.com/repos/golang/tools/git/commits/d0657ebb0d5ab938afb6003df4a8bf770dd45b27,d0657ebb0d5ab938afb6003df4a8bf770dd45b27,"go.tools/go/types: record lhs identifier in switch lhs := rhs.(type)

Added testcase.

R=adonovan
CC=golang-dev
https://golang.org/cl/11742043"
alandonovan,2013-07-24 18:03:53,https://api.github.com/repos/golang/tools/git/commits/d4f2f2d7fa932351635515cbd0496684e6da6fd2,d4f2f2d7fa932351635515cbd0496684e6da6fd2,"go.tools/ssa: repair treatment of typeswitch after recent go/types changes.

Now, in a ""switch y := x.(type)"", there is no object for the
outer y, only implicit objects, one per case (including
default).

Also: don't set obj=nil for blank idents (workaround suggested by gri).

R=gri
CC=golang-dev
https://golang.org/cl/11564046"
griesemer,2013-07-24 17:49:44,https://api.github.com/repos/golang/tools/git/commits/c5b1cc4227e168b52af8d388ba4e7f9f5688ce6a,c5b1cc4227e168b52af8d388ba4e7f9f5688ce6a,"go.tool/go/types: ignore invalid anonymous fields

Fixes go tool vet breakage when applied to files
with incomplete type information for anonymous
fields.

R=adonovan
CC=golang-dev
https://golang.org/cl/11773043"
griesemer,2013-07-24 16:26:39,https://api.github.com/repos/golang/tools/git/commits/407e159412e524ff0356a3c24b90868f90fdad0f,407e159412e524ff0356a3c24b90868f90fdad0f,"go.tools/go/types: fix typo in self test

R=adonovan
CC=golang-dev
https://golang.org/cl/11749044"
adg,2013-07-24 07:25:24,https://api.github.com/repos/golang/tools/git/commits/7375911b0e347b980aba5f54893a032788256548,7375911b0e347b980aba5f54893a032788256548,"go.tools/cmd/godoc: use playground package from go.tools

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/11507044"
adg,2013-07-24 07:25:00,https://api.github.com/repos/golang/tools/git/commits/8cc9c49348fd8f741712d457a88655f998280198,8cc9c49348fd8f741712d457a88655f998280198,"go.tools/godoc/playground: copy playground package from go.talks

After this change is submitted the dependants on go.talks/pkg/playground
talks will be updated to use this one and the old package will be deleted.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/11759043"
griesemer,2013-07-24 04:21:37,https://api.github.com/repos/golang/tools/git/commits/66e7552830954f6a0a85df096530cb4f96305ee1,66e7552830954f6a0a85df096530cb4f96305ee1,"go.tools/go/types: simplified and faster Scope

- implemented objset for tracking duplicates of fields and methods
  which permitted a simpler and faster scope implementation in turn
- related cleanups and internal renames
- fixed a couple of identifier reporting bugs

Speed of type-checking itself increased by almost 10%
(from ~71Kloc/s to ~78Kloc/s on one machine, measured
via go test -run=Self).

R=adonovan
CC=golang-dev
https://golang.org/cl/11750043"
griesemer,2013-07-24 03:52:41,https://api.github.com/repos/golang/tools/git/commits/2f54663e0ee85ad825706eacfd55c1132e325e9b,2f54663e0ee85ad825706eacfd55c1132e325e9b,"go.tools/go/types: fix build: ignore self-test if it fails

R=adonovan
CC=golang-dev
https://golang.org/cl/11398045"
griesemer,2013-07-24 01:30:06,https://api.github.com/repos/golang/tools/git/commits/cc55bd9129a3b17c267f2209bfeb39d42bf989b9,cc55bd9129a3b17c267f2209bfeb39d42bf989b9,"go.tools/go/types: add self test

R=adonovan
CC=golang-dev
https://golang.org/cl/11739043"
griesemer,2013-07-23 21:18:38,https://api.github.com/repos/golang/tools/git/commits/09d04edfcf2fef78e84dca5e841e99d86a8536af,09d04edfcf2fef78e84dca5e841e99d86a8536af,"go.tools/go/types: declare typeswitch local variable in correct scope

R=adonovan
CC=golang-dev
https://golang.org/cl/11534044"
griesemer,2013-07-23 20:42:04,https://api.github.com/repos/golang/tools/git/commits/7bc647b29a9ab1dd589c97fa0322507d4785270d,7bc647b29a9ab1dd589c97fa0322507d4785270d,"go.tools/go/types: internal cleanups

- more consistent naming of some internal data types and methods
- better factoring of some error reporting code
- cleanup around association of methods with receiver base types
- more tests

R=adonovan
CC=golang-dev
https://golang.org/cl/11726043"
alandonovan,2013-07-23 17:38:52,https://api.github.com/repos/golang/tools/git/commits/7eafcedc87ad51183234eebff819941a8e4c8147,7eafcedc87ad51183234eebff819941a8e4c8147,"go.tools/ssa: opt: create elements of method sets lazily.

Reduces by 94% the number of wrappers created during the tests.
(No appreciable difference in running time, sadly.)

R=gri
CC=golang-dev
https://golang.org/cl/11619043"
griesemer,2013-07-23 03:42:10,https://api.github.com/repos/golang/tools/git/commits/2bff3a03e74ed1deb0b02ff0236415f0952dabed,2bff3a03e74ed1deb0b02ff0236415f0952dabed,"go.tools/go/types: clean up method type checking

- treat receivers like ordinary parameters when checking signatures;
  concentrate all respective checks in one place
- continue to type-check methods even if receiver base type does not
  satisfy receiver type criteria (comes for free)
- don't ignore blank _ methods anymore
- various related cleanups

As a consequence, the resolving needs one less internal phase.

R=adonovan
CC=golang-dev
https://golang.org/cl/11591045"
robpike,2013-07-23 00:37:43,https://api.github.com/repos/golang/tools/git/commits/9ac8940d2974f695aaf3e36476f561de4837f5e4,9ac8940d2974f695aaf3e36476f561de4837f5e4,"all: be more idiomatic when documenting boolean return values.
Phrases like ""returns whether or not the image is opaque"" could be
describing what the function does (it always returns, regardless of
the opacity) or what it returns (a boolean indicating the opacity).
Even when the ""or not"" is missing, the phrasing is bizarre.

Go with ""reports whether"", which is still clunky but at least makes
it clear we're talking about the return value.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/11458046"
dsymonds,2013-07-22 02:43:11,https://api.github.com/repos/golang/tools/git/commits/75919c8eeecee7a3abec7c08c536605767d1c1ca,75919c8eeecee7a3abec7c08c536605767d1c1ca,"cmd/vet: avoid panic if no valid inputs are found.

I'd like to make vet work as a filter, but passing /dev/stdin as a
command line argument doesn't work. This at least makes it not panic.

R=r
CC=golang-dev
https://golang.org/cl/11521045"
alandonovan,2013-07-19 23:38:16,https://api.github.com/repos/golang/tools/git/commits/d203f128e2788ad61f53d815b6cf11ed981c68ba,d203f128e2788ad61f53d815b6cf11ed981c68ba,"go.tools/ssa: drop ssa.Id in favour of types.Id function.
Also exploit fact that Recv() is now always non-nil, even for interfaces.

R=gri
CC=golang-dev
https://golang.org/cl/11613043"
griesemer,2013-07-19 23:26:32,https://api.github.com/repos/golang/tools/git/commits/d722d82c522b0dfbc1f2fafc659f1a096270a5c4,d722d82c522b0dfbc1f2fafc659f1a096270a5c4,"go.tools/go/type: hook up interface method receivers

Also:
- Renamed Object.SameName -> Object.SameId
- Exported Object.Id

R=adonovan
CC=golang-dev
https://golang.org/cl/11567046"
griesemer,2013-07-19 21:46:28,https://api.github.com/repos/golang/tools/git/commits/b0ae7702cbb5a32fb90c21d651749cfc6345f604,b0ae7702cbb5a32fb90c21d651749cfc6345f604,"go.tools/go/types: record Field/Method object for f in selector expressions x.f

TODO(gri) This needs tests.

R=adonovan
CC=golang-dev
https://golang.org/cl/11519046"
alandonovan,2013-07-19 21:35:29,https://api.github.com/repos/golang/tools/git/commits/5d7d9091bb80114e9a1701fb30cdad87ebcba828,5d7d9091bb80114e9a1701fb30cdad87ebcba828,"go.tools/ssa: big simplification: use new types.MethodSet to compute ssa.MethodSet.

Details:
- emitImplicitSelections now emits common code for implicit
  field selections in both method and field lookups.
  The last iteration over the LookupFieldOrMethod indices---the explicit,
  final index---is handled by the caller.
- anonFieldPath, candidate and the BFS algo in buildMethodSet are all gone.

R=gri
CC=golang-dev
https://golang.org/cl/11576045"
griesemer,2013-07-19 20:00:02,https://api.github.com/repos/golang/tools/git/commits/f4540b71939a269f5746652e2ce26a516a0e8863,f4540b71939a269f5746652e2ce26a516a0e8863,"go.tools/go/types: set correct Method recv type in NewMethodSet

R=adonovan
CC=golang-dev
https://golang.org/cl/11602043"
griesemer,2013-07-19 18:01:51,https://api.github.com/repos/golang/tools/git/commits/35f4fd1cd17cc072cd94ac35d5eea0753a4f3ba3,35f4fd1cd17cc072cd94ac35d5eea0753a4f3ba3,"go.tools/go/types: use *Var instead of *Field for struct fields

Temporarily remove Field objects in favor of Vars for struct fields.
In forthcoming CL, Fields will play the symmetric role to Methods, and
serve as lookup results including index information.

R=adonovan
CC=golang-dev
https://golang.org/cl/11594043"
alandonovan,2013-07-19 15:02:27,https://api.github.com/repos/golang/tools/git/commits/8a9eca10cd41c08e10d5199d5bf2ee0c3c4ffcbc,8a9eca10cd41c08e10d5199d5bf2ee0c3c4ffcbc,"go.tools/importer: rename Context to Config for consistency with go/types.

R=gri
CC=golang-dev
https://golang.org/cl/11485046"
griesemer,2013-07-19 14:52:43,https://api.github.com/repos/golang/tools/git/commits/9f26deaa1dfd1db6841c798cf60c863d8935b3da,9f26deaa1dfd1db6841c798cf60c863d8935b3da,"go.tools/gotype: fix build

R=adonovan
CC=golang-dev
https://golang.org/cl/11542045"
bradfitz,2013-07-19 04:02:03,https://api.github.com/repos/golang/tools/git/commits/80d38231f758dcfe0cfcc8474e9e5dbb4296159b,80d38231f758dcfe0cfcc8474e9e5dbb4296159b,"godoc: move search from cmd to the package

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11540045"
bradfitz,2013-07-19 01:54:15,https://api.github.com/repos/golang/tools/git/commits/5b72c43fc0417d2ad239b8e5ce01db70e505b8be,5b72c43fc0417d2ad239b8e5ce01db70e505b8be,"godoc/util: remove FileSystem. It's in vfs now.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11555043"
dsymonds,2013-07-19 00:31:12,https://api.github.com/repos/golang/tools/git/commits/0160160d5e3e6e6086b909a038cb554329182efc,0160160d5e3e6e6086b909a038cb554329182efc,"cmd/godoc: Fix reg test on Windows.

R=bradfitz, gri
CC=golang-dev
https://golang.org/cl/11551043"
bradfitz,2013-07-19 00:27:53,https://api.github.com/repos/golang/tools/git/commits/705bb7ffce9bdf77c77d4dc22b950d90a93f4474,705bb7ffce9bdf77c77d4dc22b950d90a93f4474,"godoc: remove the last of the global variables, unexport Server

The exported Server becomes handlerServer, and part of Presentation
now.  Presentation is also now an http.Handler with its own
internal mux (a detail, which might go away).

main.go becomes ever simpler.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11505043"
griesemer,2013-07-19 00:07:44,https://api.github.com/repos/golang/tools/git/commits/40a278e5eee1f4b78bc7cd47541330819f1d6d75,40a278e5eee1f4b78bc7cd47541330819f1d6d75,"go.tools/go/types: rename Context -> Config (more apt name)

Also: Various minor cleanups.

R=adonovan, r
CC=golang-dev
https://golang.org/cl/11445044"
griesemer,2013-07-18 23:56:01,https://api.github.com/repos/golang/tools/git/commits/9460d02473f31c7b58da8f42bf9d4e44a472733b,9460d02473f31c7b58da8f42bf9d4e44a472733b,"go.tools/cmd/vet: fix error message

R=r, dsymonds, bradfitz
CC=golang-dev
https://golang.org/cl/11552043"
alandonovan,2013-07-18 20:59:06,https://api.github.com/repos/golang/tools/git/commits/69ce87a6c18e4f1ecb80ea5f890caf710b6ad786,69ce87a6c18e4f1ecb80ea5f890caf710b6ad786,"go.tools/ssa: some refactorings

ssa:
- Prog.CreatePackages inlined into all callers.
- Prog.CreatePackage is now exposed; idempotent; and checks for errors.
- '*address' not 'address' now implements lvalue (since it's 6 words).
- removed types.Method case from createMemberFromObject.

importer:
- added importer.PackageInfo.String method.
- simplifed importer.PackageInfo by putting types.Info in it.
- removed obsolete precondition from IsType.

R=gri
CC=golang-dev
https://golang.org/cl/11408045"
griesemer,2013-07-18 20:09:03,https://api.github.com/repos/golang/tools/git/commits/6d85cc17ddd3f78347f3e8ac3b8910e5e7b60e0d,6d85cc17ddd3f78347f3e8ac3b8910e5e7b60e0d,"go.tools/go/types: request type Info via maps instead of callbacks

Allmost all uses of go/types that wanted the type
information computed, installed callback functions
that stored the information in maps. Most of the
time this is the only thing that could be done because
there is no guarantee that types are completely set
up before the end of type-checking.

This CL removes the respective Context callbacks in favor
of corresponding maps that collect the desired information
on demand, grouped together in an optional Info struct.

R=adonovan
CC=golang-dev
https://golang.org/cl/11530044"
griesemer,2013-07-18 17:48:03,https://api.github.com/repos/golang/tools/git/commits/78c8226b42f4555201c9bb28d627132571f7e9cc,78c8226b42f4555201c9bb28d627132571f7e9cc,"go.tools/go/types: don't modify lhs untyped types in constant shifts

Also: fix TestCheck (don't fail if there are no errors in -list mode)

Fixes golang/go#5895.

R=adonovan
CC=golang-dev
https://golang.org/cl/11535043"
bradfitz,2013-07-18 03:51:17,https://api.github.com/repos/golang/tools/git/commits/66f0d6e92ec48433638d95a102d7ea1b1e0ffa66,66f0d6e92ec48433638d95a102d7ea1b1e0ffa66,"godoc: more cleanup

cmd/godoc/godoc.go is now merged into main.go, which is now
only 530 lines.

App Engine mode is still broken, but should be easy to fix up.
(just needs a global *godoc.Presentation created in init)

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11498044"
bradfitz,2013-07-18 03:14:09,https://api.github.com/repos/golang/tools/git/commits/5395cfe05a70555b2ac18035b7657050378d038e,5395cfe05a70555b2ac18035b7657050378d038e,"godoc: remove more global variables

More moves into Corpus and Presentation.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11492043"
bradfitz,2013-07-17 23:52:45,https://api.github.com/repos/golang/tools/git/commits/4fc632338558be7db7f76425bf905fcd13a908fd,4fc632338558be7db7f76425bf905fcd13a908fd,"godoc: add a Corpus and Presentation type

Start of moving globals into those types.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11484043"
dsymonds,2013-07-17 07:32:45,https://api.github.com/repos/golang/tools/git/commits/3af65e49c23c7837691ae12347980237aa7817ba,3af65e49c23c7837691ae12347980237aa7817ba,"cmd/godoc: Add a basic regression test.

R=adg, bradfitz
CC=golang-dev
https://golang.org/cl/11419044"
adg,2013-07-17 07:31:24,https://api.github.com/repos/golang/tools/git/commits/57f0a571b9193dc899d42bada28e612760559247,57f0a571b9193dc899d42bada28e612760559247,"godoc: unexport InterfaceSlice and Comparer types

R=golang-dev, bradfitz
CC=golang-dev
https://golang.org/cl/11429043"
bradfitz,2013-07-17 07:25:54,https://api.github.com/repos/golang/tools/git/commits/cd835f01af6e8d9bb618f5c0b1574d9937490b6c,cd835f01af6e8d9bb618f5c0b1574d9937490b6c,"godoc: use httptest.ResponseRecorder instead of reimplementing it

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11428043"
bradfitz,2013-07-17 07:17:12,https://api.github.com/repos/golang/tools/git/commits/ca3319fbd28781ed11fb2ebe137f0e5900094e45,ca3319fbd28781ed11fb2ebe137f0e5900094e45,"godoc: actually include files from previous CL

This stuff was deleted from cmd/godoc, and is
moving into pkg godoc.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11425043"
bradfitz,2013-07-17 07:09:54,https://api.github.com/repos/golang/tools/git/commits/e6ff53bcc832d124109c26270e3e5f4dda8da629,e6ff53bcc832d124109c26270e3e5f4dda8da629,"godoc: move bulk of the code to the package

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11424043"
adg,2013-07-17 05:23:31,https://api.github.com/repos/golang/tools/git/commits/2392be72c2551d6ea844f4afdd5edda4d88a2dbd,2392be72c2551d6ea844f4afdd5edda4d88a2dbd,"go.tools/godoc: move Throttle to package godoc/util

R=bradfitz
CC=golang-dev
https://golang.org/cl/11417043"
griesemer,2013-07-17 05:18:08,https://api.github.com/repos/golang/tools/git/commits/8901caa2b335f244a61d05e35d41109f1955b154,8901caa2b335f244a61d05e35d41109f1955b154,"go.tools/go/types: Method sets for all types

- fixed method set computation
- lazily compute it for a type on demand
- lazy allocation of various temporary maps

Also:
- removed Interface.IsEmpty, Scope.IsEmpty
  (these convenience functions didn't carry their weight)
- cosmetic changes

Next:
- consolidate various lookup APIs
- use lazily computed method sets for various checks
  instead of individual lookups

R=adonovan
CC=golang-dev
https://golang.org/cl/11385044"
adg,2013-07-17 05:17:04,https://api.github.com/repos/golang/tools/git/commits/2822addeae2a51ef03fd105ad4bacf5e293e77b0,2822addeae2a51ef03fd105ad4bacf5e293e77b0,"go.tools/cmd/godoc: use go.talks playground package

R=bradfitz
CC=golang-dev
https://golang.org/cl/11416043"
adg,2013-07-17 05:02:27,https://api.github.com/repos/golang/tools/git/commits/5ff0687cc92e3b8806ec366c7c6e847adb6e03b6,5ff0687cc92e3b8806ec366c7c6e847adb6e03b6,"go.tools/godoc: move vfs code to vfs package

R=bradfitz
CC=golang-dev
https://golang.org/cl/11414043"
bradfitz,2013-07-17 04:44:18,https://api.github.com/repos/golang/tools/git/commits/7526441b70d3c389f8933c474e7598d1db519b9f,7526441b70d3c389f8933c474e7598d1db519b9f,"godoc: add util package, add start of vfs package

Move some code out of cmd/godoc.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11413043"
adg,2013-07-17 04:02:35,https://api.github.com/repos/golang/tools/git/commits/d79f4fe25b7f2c134c99abcb0fbf8ac71907cd09,d79f4fe25b7f2c134c99abcb0fbf8ac71907cd09,"go.tools/cmd/godoc: copy godoc from core reposistory

The plan for godoc:
- Copy godoc source from the core repo to go.tools (this CL).
- Break godoc into several packages inside go.tools, leaving a package
  main that merely sets up a local file system, interprets the command
  line, and otherwise delegates the heavy-lifting to the new packages.
- Remove godoc from the core repo.
- Update cmd/go to install this godoc binary in $GOROOT/bin.
- Update misc/dist to include godoc when building binary distributions.

R=bradfitz
CC=golang-dev
https://golang.org/cl/11408043"
alandonovan,2013-07-16 17:50:08,https://api.github.com/repos/golang/tools/git/commits/732dbe9ff8e67cddf970ae68e1c17384065ed3ef,732dbe9ff8e67cddf970ae68e1c17384065ed3ef,"go.tools/ssa: s/Literal/Const/g, s/Constant/NamedConst/g

(Motivation: ""Literal"" is a syntactic property, not a semantic one.)

Also: delete a ""TODO: opt"" that the lifting pass already does for us.

R=gri
CC=golang-dev
https://golang.org/cl/11351043"
alandonovan,2013-07-16 16:23:55,https://api.github.com/repos/golang/tools/git/commits/80ec883f7bf38331bd7bf3d36393794bd031e725,80ec883f7bf38331bd7bf3d36393794bd031e725,"go.tools/ssa: several small clean-ups.

- removed a number of obsolete TODO(gri) comments.
- bring ssa.DefaultType back into sync with types.defaultType.
- re-enable types.Package.Path()!="""" assertion.
- use Path() (not reflect pointer) in sort routine.
- make interp.checkInterface use types.MissingMethod.
- un-export ssa.MakeId function.
- inline pointer() into all callers, and delete.
- enable two more interp_tests: $GOROOT/test/{method3,cmp}.go
- add links to bugs to other interp_tests.
- add runtime.NumCPU to ssa/interp/externals.go

R=gri
CC=golang-dev
https://golang.org/cl/11353043"
alandonovan,2013-07-16 16:22:22,https://api.github.com/repos/golang/tools/git/commits/da051f41cc7c82a4c3072deae58fae8733002e5c,da051f41cc7c82a4c3072deae58fae8733002e5c,"go.tools/ssa: fixes required by go/types CL 11317043: the last
parameter of a variadic signature is now a slice type.

R=gri
CC=golang-dev
https://golang.org/cl/11347043"
griesemer,2013-07-16 16:12:33,https://api.github.com/repos/golang/tools/git/commits/0117ba266d7d376c4d8eef4e75a0171a546391d3,0117ba266d7d376c4d8eef4e75a0171a546391d3,"go.tools/go/types: cleanup parameter passing

- now represent ...T parameter type as []T (rather than T)
- simplified call checking
- added missing check and test for x... arguments (x must be slice)

This CL will temporarily break ssa and ssa/interp.

R=adonovan, axwalk
CC=golang-dev
https://golang.org/cl/11317043"
alandonovan,2013-07-15 22:37:49,https://api.github.com/repos/golang/tools/git/commits/25f3e0fbdee99787c0895b8d5d5f537deefe9ee1,25f3e0fbdee99787c0895b8d5d5f537deefe9ee1,"go.tools/cmd/vet: improvements to static checking of printf calls.

Details:
- added support for complex numbers as distinct from floats:
  %[efg] allows complex; %b does not.
- %p: only Signature, Map, Chan, Slice, unsafe.Pointer allowed.
- %s: allow []byte.
- allow a verb to match map[K]V and []T if it matches K/V/T,
  e.g. %d now matches []int.  i.e. matching is recursive.
- use go/types' constant folding.  literal() is gone.
- group cases together.

Added tests.

R=gri, r
CC=golang-dev
https://golang.org/cl/10895043"
alandonovan,2013-07-15 22:09:18,https://api.github.com/repos/golang/tools/git/commits/da3a30b5e1f6ffc78e853c43cf4ebb70644a0232,da3a30b5e1f6ffc78e853c43cf4ebb70644a0232,"go.tools/ssa: move pure-AST functions to importer package.

This slightly simplifies the PathEnclosingInterval spec (and
some uncommitted client code of mine).

R=gri
CC=golang-dev
https://golang.org/cl/11305043"
alandonovan,2013-07-15 20:10:08,https://api.github.com/repos/golang/tools/git/commits/a399e26e0e50dd4adc267e41924c7602332c6b77,a399e26e0e50dd4adc267e41924c7602332c6b77,"go.tools/ssa: remove position info from Literals.

R=gri
CC=golang-dev
https://golang.org/cl/11292043"
alandonovan,2013-07-15 17:56:46,https://api.github.com/repos/golang/tools/git/commits/55d678e6972328931224766d2551ce30f27da4c9,55d678e6972328931224766d2551ce30f27da4c9,"go.tools/ssa: add debug information for all ast.Idents.

This CL adds three new functions to determine the SSA Value
for a given syntactic var, func or const object:
  Program.{Const,Func,Var}Value.
Since constants and functions are immutable, the first
two only need a types.Object; but each distinct
reference to a var may return a distinct Value, so the third
requires an ast.Ident parameter too.

Debug information for local vars is encoded in the
instruction stream in the form of DebugRef instructions,
which are a no-op but relate their operand to a particular
ident in the AST.  The beauty of this approach is that it
naturally stays consistent during optimisation passes
(e.g. lifting) without additional bookkeeping.

DebugRef instructions are only generated if the DebugMode
builder flag is set; I plan to make the policy more fine-
grained (per function).

DebugRef instructions are inserted for:
- expr(Ident) for rvalue idents
- address.store() for idents that update an lvalue
- address.address() for idents that take address of lvalue
  (this new method replaces all uses of lval.(address).addr)
- expr() for all constant expressions
- local ValueSpecs with implicit zero initialization (no RHS)
  (this case doesn't call store() or address())

To ensure we don't forget to emit debug info for uses of Idents,
we must use the lvalue mechanism consistently.  (Previously,
many simple cases had effectively inlined these functions.)
Similarly setCallFunc no longer inlines expr(Ident).

Also:
- Program.Value() has been inlined & specialized.
- Program.Package() has moved nearer the new lookup functions.
- refactoring: funcSyntax has lost paramFields, resultFields;
  gained funcType, which provides access to both.
- add package-level constants to Package.values map.
- opt: don't call localValueSpec for constants.
  (The resulting code is always optimised away.)

There are a number of comments asking whether Literals
should have positions.  Will address in a follow-up.

Added tests of all interesting cases.

R=gri
CC=golang-dev
https://golang.org/cl/11259044"
griesemer,2013-07-13 04:09:33,https://api.github.com/repos/golang/tools/git/commits/f1a889124ded24f445d5898bb3c19f8af64d4f58,f1a889124ded24f445d5898bb3c19f8af64d4f58,"go.tools/go/types: cleanups

Objects:
- provide IsExported, SameName, uniqueName methods
- clean up a lot of dependent code

Scopes:
- don't add children to Universe scope (!)
- document Node, WriteTo

Types:
- remove Deref in favor of internal function deref

ssa, ssa/interp:
- introduced local deref, adjusted code
- fixed some ""Underlying"" bugs (pun intended)

R=adonovan
CC=golang-dev
https://golang.org/cl/11232043"
robpike,2013-07-12 21:52:00,https://api.github.com/repos/golang/tools/git/commits/b0425054909a19686f5faea7140ff6f0c9deda14,b0425054909a19686f5faea7140ff6f0c9deda14,"go.tools/cmd/vet: use types.Eval to simplify some checking.
Depends on CL 10748044

R=gri
CC=golang-dev
https://golang.org/cl/11206043"
griesemer,2013-07-12 20:51:24,https://api.github.com/repos/golang/tools/git/commits/a3301d1bc625a68c73b7ac385888058c367b442d,a3301d1bc625a68c73b7ac385888058c367b442d,"go.tools/go/types: more test cases for types.Eval

R=adonovan
CC=golang-dev
https://golang.org/cl/11229043"
griesemer,2013-07-12 18:03:34,https://api.github.com/repos/golang/tools/git/commits/32ed9615b3caf63a721e0bcddc788dac90776439,32ed9615b3caf63a721e0bcddc788dac90776439,"go.tools/go/types: implement New, Eval and EvalNode

Eval and EvalNode permit the evaluation of an expression
or type literal string (or AST node in case of EvalNode)
within a given context (package and scope).

Also:
- track nested (children) scopes for all scopes
- provide a mechanism to iterate over nested scopes
- permit recursive printing of scopes

TODO: more tests

R=adonovan
CC=golang-dev
https://golang.org/cl/10748044"
griesemer,2013-07-11 21:23:23,https://api.github.com/repos/golang/tools/git/commits/5ec27f6da9bf8d877d92150564f2c11da3e27892,5ec27f6da9bf8d877d92150564f2c11da3e27892,"go.tools/go/types: export IsAssignableTo

Tested implictly since its simply calling the
internal isAssignableTo which is used in every
assignment when testing the std library.

R=adonovan
CC=golang-dev
https://golang.org/cl/11189043"
griesemer,2013-07-11 20:19:12,https://api.github.com/repos/golang/tools/git/commits/424b1fda003006b8a46c22c3b63c8298a870d5f6,424b1fda003006b8a46c22c3b63c8298a870d5f6,"go.tools/go/types: only print underlying type in Object.String for type objects

R=adonovan
CC=golang-dev
https://golang.org/cl/11161045"
griesemer,2013-07-11 19:57:56,https://api.github.com/repos/golang/tools/git/commits/ed5ac0e6f15914e9e55217bc43ba5279b6219f53,ed5ac0e6f15914e9e55217bc43ba5279b6219f53,"go.tools/go/types: provide Object.String method

R=adonovan
CC=golang-dev
https://golang.org/cl/11178043"
alandonovan,2013-07-11 18:12:30,https://api.github.com/repos/golang/tools/git/commits/bc1f724aa469dfccee676d11b3b6efa1d799e066,bc1f724aa469dfccee676d11b3b6efa1d799e066,"go.tools/ssa: Member.Object() returns typechecker object for package members.

Also:
- {Must,}SanityCheck un-exported.  Added sanityCheckPackage.

R=gri
CC=golang-dev
https://golang.org/cl/11174043"
griesemer,2013-07-11 17:54:52,https://api.github.com/repos/golang/tools/git/commits/1f28df4b6ce00ff0000665f188d55a01b4ded097,1f28df4b6ce00ff0000665f188d55a01b4ded097,"go.tools/go/types: reuse code for m:n assignments

- more test cases

R=adonovan
CC=golang-dev
https://golang.org/cl/10952044"
griesemer,2013-07-11 05:19:43,https://api.github.com/repos/golang/tools/git/commits/59f09dcb8c3181713b3c7c10e66cb899f15fcd61,59f09dcb8c3181713b3c7c10e66cb899f15fcd61,"go.tools/go/types: report test errors immediately in -list mode

This way, errors reported before a crash are visible.

R=adonovan, r
CC=golang-dev
https://golang.org/cl/10802044"
griesemer,2013-07-11 05:14:40,https://api.github.com/repos/golang/tools/git/commits/71e1c684458ce2fd76ce8d99c564b09fb03e9c33,71e1c684458ce2fd76ce8d99c564b09fb03e9c33,"go.tools/ssa: fix build

Caused by https://golang.org/cl/11093044/ .

R=adonovan
CC=golang-dev
https://golang.org/cl/11149043"
griesemer,2013-07-11 03:10:24,https://api.github.com/repos/golang/tools/git/commits/3a75f78acd3bf2dd3abe9072d2de9410a77e339f,3a75f78acd3bf2dd3abe9072d2de9410a77e339f,"go.tools/go/types: cleanup init expr checks

- factored our arity checks
- started more systematic tests for const/var decls
- better error messages
- fixed several corner case errors

R=adonovan
CC=golang-dev
https://golang.org/cl/11137043"
alandonovan,2013-07-10 22:37:52,https://api.github.com/repos/golang/tools/git/commits/32f601bfbe3a94a16708bf3d5d9d3c9783676727,32f601bfbe3a94a16708bf3d5d9d3c9783676727,"go.types/ssa: unexport Package.Init; clients should use pkg.Func(""init"").

R=gri
CC=golang-dev
https://golang.org/cl/11093044"
alandonovan,2013-07-10 22:08:42,https://api.github.com/repos/golang/tools/git/commits/e783d2d666f42e3b4a56ca06337e2154587d270b,e783d2d666f42e3b4a56ca06337e2154587d270b,"go.tools/ssa: added test of loading of partial programs (via gcimporter).

This exposed a bug: we weren't creating Functions for methods
of imported named types.

Also:
- simplification: 'candidate' no longer contains 'concrete *Function'.
  We look this up on demand.

NB: this CL contains a copy of CL 10935047 (use of typemap);
will submit/sync/resolve soon.

R=gri
CC=golang-dev
https://golang.org/cl/11051043"
alandonovan,2013-07-10 22:01:11,https://api.github.com/repos/golang/tools/git/commits/4df74776da6ee13500bb85c70afa7bcc93fcf8e6,4df74776da6ee13500bb85c70afa7bcc93fcf8e6,"go.tools/ssa: de-dup the creation of method sets, using typemap.

Yields a ~20% improvement in SSA construction time.

Also: better names for promotion wrapper functions.

R=gri
CC=golang-dev
https://golang.org/cl/11050043"
alandonovan,2013-07-10 21:57:07,https://api.github.com/repos/golang/tools/git/commits/26d93d2e47020daa78849b0093a89631d1c5ca2f,26d93d2e47020daa78849b0093a89631d1c5ca2f,"go.tools/go.types/typemap: a map whose keys are types.

go/types.Type has an equivalence relation (IsIdentical) that
is not consistent with the equivalence relation implemented by
Go's == operator for Types.  Therefore extra work is required
to build a map whose keys are types.  This package does that
work.

Has simple unit test.  More tests might be good.

R=gri
CC=golang-dev
https://golang.org/cl/9649044"
robpike,2013-07-10 05:20:52,https://api.github.com/repos/golang/tools/git/commits/1c382c95b27f3bc97f0391e634b2fa5adffed447,1c382c95b27f3bc97f0391e634b2fa5adffed447,"go.tools/cmd/cover: get cover counters on if conditions
This requires a little more tree rewriting to put a block around the if of an ""else if"".
More tests too.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/11042045"
griesemer,2013-07-10 04:13:37,https://api.github.com/repos/golang/tools/git/commits/8cd6c3be050968988ef89d97b86477664023f7b4,8cd6c3be050968988ef89d97b86477664023f7b4,"go.tools/go/types: check for non-func init declarations

R=adonovan
CC=golang-dev
https://golang.org/cl/11075043"
adg,2013-07-10 04:03:35,https://api.github.com/repos/golang/tools/git/commits/5b27bc1db9a5eef61a435021cc50534c54df3a06,5b27bc1db9a5eef61a435021cc50534c54df3a06,"go.talks/cmd/cover: show simpler legend for ""set"" mode

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/10738044"
adg,2013-07-10 03:22:04,https://api.github.com/repos/golang/tools/git/commits/c659fcb7c8bffffee1465dc68760b024982f4225,c659fcb7c8bffffee1465dc68760b024982f4225,"go.tools/cmd/cover: add floating bar with file selector and legend

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/11076043"
griesemer,2013-07-09 16:45:09,https://api.github.com/repos/golang/tools/git/commits/b8f13c4c9b0de6077c2c1556343d3e1e2804db75,b8f13c4c9b0de6077c2c1556343d3e1e2804db75,"go.tools/go/types: assignment checking cleanup (round 2)

- consolited remainign assignment check routines
- removed more dead code
- fixed incorrect scope hierarchy in case of errors for some statements
- fixed scope of key iteration variable for range clauses

R=adonovan
CC=golang-dev
https://golang.org/cl/10694044"
alandonovan,2013-07-09 14:21:25,https://api.github.com/repos/golang/tools/git/commits/06a43b8a0c49ab27d27fb7813983abe5ca06f2be,06a43b8a0c49ab27d27fb7813983abe5ca06f2be,"go.tools/ssa: fix regression in x<<y logic from CL 11011043

Details:
- reintroduce interp.asUint64: it's not sound to use only the
  low 32 bits of y, which is what asInt gives us, when GOARCH=386.
- instead, emit a uint64 conversion when y is not unsigned
  (i.e. a signed var, or an untyped constant).

Tested on 386 & x86-64.

R=gri
CC=golang-dev
https://golang.org/cl/11023043"
adg,2013-07-09 06:58:15,https://api.github.com/repos/golang/tools/git/commits/2b6515094c9cf9a96148073984fe4d98aaf7cc57,2b6515094c9cf9a96148073984fe4d98aaf7cc57,"go.talks/cmd/cover: better color scheme and fonts

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/11032043"
alandonovan,2013-07-08 22:02:50,https://api.github.com/repos/golang/tools/git/commits/5da7e5a1a8fb12a9a131434e45af1ebfbb44f4d2,5da7e5a1a8fb12a9a131434e45af1ebfbb44f4d2,"go.tools/ssa: give consistent positions for CanonicalPos(Literal).

(There are only seven ast.Expr types that can be constant.)

R=gri
CC=golang-dev
https://golang.org/cl/10766044"
alandonovan,2013-07-08 21:33:51,https://api.github.com/repos/golang/tools/git/commits/88469928233b20045117dd41c08caf75a82d589d,88469928233b20045117dd41c08caf75a82d589d,"go.tools/ssa: avoid redundant uint64 conversion of right operand of <<, >>.

Also: add sanity check that no Instruction yields a Value of 'untyped' type.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/11011043"
griesemer,2013-07-08 20:51:20,https://api.github.com/repos/golang/tools/git/commits/1aa0484f4bf55f7649bbc9ba492ec477994a2e84,1aa0484f4bf55f7649bbc9ba492ec477994a2e84,"go.tools/go/types: report correct type for untyped conversion arguments

Fixes golang/go#5849.

R=adonovan
CC=golang-dev
https://golang.org/cl/11007043"
griesemer,2013-07-08 16:40:30,https://api.github.com/repos/golang/tools/git/commits/cc52b8b7f834aeb2ec013b631d93696c75ee5ca1,cc52b8b7f834aeb2ec013b631d93696c75ee5ca1,"go.tools/go/types: clean up assignment checks (round 1)

Various bug fixes:
- don't allow := to redeclare non-variables
- don't permit a comma-ok expression as a two-value function return

Lots of dead code removed.

Fixes golang/go#5500.

R=adonovan
CC=golang-dev
https://golang.org/cl/10792044"
adg,2013-07-08 05:24:34,https://api.github.com/repos/golang/tools/git/commits/a82eaff6b78350f32128c27897a567e0642636d1,a82eaff6b78350f32128c27897a567e0642636d1,"go.tools/cmd/cover: change color scheme and add legend

R=r, dsymonds
CC=golang-dev
https://golang.org/cl/10991043"
adg,2013-07-06 06:58:50,https://api.github.com/repos/golang/tools/git/commits/00268482c034f0c5abf8484d8825e93426d66f3b,00268482c034f0c5abf8484d8825e93426d66f3b,"go.tools/cmd/cover: use html/template for html generation

Also includes simple JavaScript dropdown picker.

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/10838045"
adg,2013-07-05 03:53:09,https://api.github.com/repos/golang/tools/git/commits/d9e6cbb135386ea092d5102ccd17dc0fdf5b80fd,d9e6cbb135386ea092d5102ccd17dc0fdf5b80fd,"go.tools/cmd/cover: use a gradient to colorize ""count"" profiles

R=r
CC=golang-dev
https://golang.org/cl/10858047"
griesemer,2013-07-04 03:51:39,https://api.github.com/repos/golang/tools/git/commits/4ca3d7e9da201f61ed3c9ccef3309de968013309,4ca3d7e9da201f61ed3c9ccef3309de968013309,"go.tools/go/types: remove defers from critical paths

Various minor cleanups.

R=adonovan
CC=golang-dev
https://golang.org/cl/10925043"
alandonovan,2013-07-03 21:57:20,https://api.github.com/repos/golang/tools/git/commits/1fa3f78146eb68358f884ab580e37f46a5246c40,1fa3f78146eb68358f884ab580e37f46a5246c40,"go.tools/ssa: Function.Synthetic documents provenance of synthetic functions.

We use the new field to determine whether or not a function is
synthetic, not Pos() == 0, so synthetic functions can have
positions too.

R=gri
CC=golang-dev
https://golang.org/cl/10916044"
alandonovan,2013-07-03 21:54:55,https://api.github.com/repos/golang/tools/git/commits/3b6580d5b42bfab3e2c2ba331d583d2edd594060,3b6580d5b42bfab3e2c2ba331d583d2edd594060,"go.tools/ssa: remove workaround for missing go/types check, now fixed.

R=gri
CC=golang-dev
https://golang.org/cl/10921043"
alandonovan,2013-07-03 19:10:49,https://api.github.com/repos/golang/tools/git/commits/ea8ba6f45b3f49499a1ec64253035e3fbb874163,ea8ba6f45b3f49499a1ec64253035e3fbb874163,"go.tools/ssa: fix crash on 'select { case x, ok = <-ch: }' (= not :=).

Added test.

Also:
- abstracted Function.addLocalForIdent (9 calls).
- remove vestige of old typeswitch hack.
- specify and fix CallCommon.Signature() for calls to built-ins.

R=gri
CC=golang-dev
https://golang.org/cl/10884044"
alandonovan,2013-07-03 18:41:26,https://api.github.com/repos/golang/tools/git/commits/997111ba7d463016c2f44a2740062555951f93fe,997111ba7d463016c2f44a2740062555951f93fe,"go.tools/importer: update comment (and absolve gri of blame) for non-bug.

R=gri
CC=golang-dev
https://golang.org/cl/10911044"
griesemer,2013-07-03 17:06:09,https://api.github.com/repos/golang/tools/git/commits/f0526543144487fe063201745babcbbf64cf8496,f0526543144487fe063201745babcbbf64cf8496,"go.tools/go/types: remove iota from all parameter lists (cleanup)

Instead of passing around iota everywhere, keep track of the
current value in the checker, and update it when entering
different declarations. This is less explicit, but the improvement
over all code is so significant that it is worth it.

R=adonovan
CC=golang-dev
https://golang.org/cl/10814044"
griesemer,2013-07-02 23:39:30,https://api.github.com/repos/golang/tools/git/commits/b58f98e9c2061b7bebf8a8b54d2755acf4a38b9f,b58f98e9c2061b7bebf8a8b54d2755acf4a38b9f,"go.tools/go/types: fix more cycle errors, lots of refactoring

- moved ident and typ expr checking into typexpr.go
- as a result, fewer parameters are needed for expr checking
- forward-chain type decls of the form type ( A B; B C; C *A) etc.
  so that cycles are getting the right types in all cases
- fixed several corner case bugs, added more test cases

R=adonovan
CC=golang-dev
https://golang.org/cl/10773043"
alandonovan,2013-07-01 19:24:50,https://api.github.com/repos/golang/tools/git/commits/6ae930a01c73c890e460d72237eaf425f960f2cc,6ae930a01c73c890e460d72237eaf425f960f2cc,"go.tools/ssa: some renamings.

- Prog.Files -> Fset
- Prog.Packages -> PackagesByPath
- Prog.Builtins -> builtins
- Package.Types -> Object

R=gri
CC=golang-dev
https://golang.org/cl/10748043"
alandonovan,2013-07-01 19:17:36,https://api.github.com/repos/golang/tools/git/commits/c24b2413c0bdf361c1f9d0342dcfa8dbde3bbad5,c24b2413c0bdf361c1f9d0342dcfa8dbde3bbad5,"go.tools/ssa: use go/types.LookupFieldOrMethod, and simplify.

Added tests.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/10830043"
adg,2013-07-01 02:42:08,https://api.github.com/repos/golang/tools/git/commits/98e813113238b047d71441cf94b58c3a99edf4f9,98e813113238b047d71441cf94b58c3a99edf4f9,"go.tools/cmd/vet: add image.Uniform to untagged literal white list

R=nigeltao
CC=golang-dev
https://golang.org/cl/10817043"
robpike,2013-06-27 21:48:27,https://api.github.com/repos/golang/tools/git/commits/78efac5f330a33fe8298cca1a516b8752192b8d9,78efac5f330a33fe8298cca1a516b8752192b8d9,"go.tools/cmd/cover: yet another attempt at a usage message (YAAAAUM) for go tool cover

R=golang-dev, rsc
CC=golang-dev
https://golang.org/cl/10710044"
griesemer,2013-06-27 20:26:13,https://api.github.com/repos/golang/tools/git/commits/69c297407fc967af57adfd34556555102212148c,69c297407fc967af57adfd34556555102212148c,"go.tools/go/types: fix nil assignment

Fixes golang/go#5800.

R=adonovan
CC=golang-dev
https://golang.org/cl/10709044"
griesemer,2013-06-27 19:43:20,https://api.github.com/repos/golang/tools/git/commits/a0160af20b89b420cb1bcc45e3c11213e85fd26c,a0160af20b89b420cb1bcc45e3c11213e85fd26c,"go.tools/go/types: tests for cycles in type decls

Fixed one aspect of issue 5090. Fixing it completely
requires a bit more work around the representation of
interface types.

R=adonovan
CC=golang-dev
https://golang.org/cl/10678045"
robpike,2013-06-27 16:20:34,https://api.github.com/repos/golang/tools/git/commits/b52f745c3a210fbc4d816b547c9fea111380df4b,b52f745c3a210fbc4d816b547c9fea111380df4b,"go.tools/cmd/cover: delete TODO that is NOWDONE

R=adg
CC=golang-dev
https://golang.org/cl/10505044"
griesemer,2013-06-26 20:01:16,https://api.github.com/repos/golang/tools/git/commits/feb0ab2b103a5bd6924b078c0b066b06f01eb021,feb0ab2b103a5bd6924b078c0b066b06f01eb021,"go.tools/go/types: -files flag for testing one-off packages

Removed special case for testdata/test.go file in favor of
a simpler, more flexible, and explicit flag for one-off test
packages.

R=adonovan
CC=golang-dev
https://golang.org/cl/10618044"
alandonovan,2013-06-26 17:18:31,https://api.github.com/repos/golang/tools/git/commits/86b0a65b6510d58762f2d5ac10fab2f6d1a2d99b,86b0a65b6510d58762f2d5ac10fab2f6d1a2d99b,"go.tools/ssa: emit ChangeType when using method as function in f := T.meth.

Previously: typeOf(f).Signature.Recv == T
       Now: typeOf(f).Signature.Params.At(0) == T

Added test.

BUG=5781

R=gri
CC=golang-dev
https://golang.org/cl/10622043"
alandonovan,2013-06-26 16:38:08,https://api.github.com/repos/golang/tools/git/commits/b68a029040f87d0f56cb346c8c5eee540ea4386f,b68a029040f87d0f56cb346c8c5eee540ea4386f,"go.tools/ssa: un-export Function.FullName.  Use String.

R=gri
CC=golang-dev
https://golang.org/cl/10604044"
griesemer,2013-06-25 22:40:28,https://api.github.com/repos/golang/tools/git/commits/22b7915ff5acd262d08734919baa5447d58287a1,22b7915ff5acd262d08734919baa5447d58287a1,"go.tools/go/types: factored out code for calls and selectors

No other changes.

R=adonovan
CC=golang-dev
https://golang.org/cl/10573043"
griesemer,2013-06-25 04:29:47,https://api.github.com/repos/golang/tools/git/commits/25da72adcd8dcac8a5ba523023a009c08a784521,25da72adcd8dcac8a5ba523023a009c08a784521,"go.tools/go/types: initialize local x early in case of bailout panic

- added respective test case

Fixes golang/go#5770.

R=adonovan
CC=golang-dev
https://golang.org/cl/10531043"
griesemer,2013-06-25 00:38:41,https://api.github.com/repos/golang/tools/git/commits/124e603d87b94159e6750e9f7c1d9beb5a80a9a6,124e603d87b94159e6750e9f7c1d9beb5a80a9a6,"go.tools/go/types: imported structs may contain _ fields

Don't report import errors due to (multiple) _ fields
in imported structs.

Fixes golang/go#5758.

R=adonovan
CC=golang-dev
https://golang.org/cl/10529043"
robpike,2013-06-24 19:56:35,https://api.github.com/repos/golang/tools/git/commits/6740bb083883d3ea6dd2343d4ea7c7eeb21cbc7d,6740bb083883d3ea6dd2343d4ea7c7eeb21cbc7d,"go.tools/cmd/vet: delete the word ""only"" from a warning
No semantic change.

R=dsymonds, rsc
CC=golang-dev
https://golang.org/cl/10516043"
robpike,2013-06-24 19:56:25,https://api.github.com/repos/golang/tools/git/commits/40caf1ff72778ae86b8137fcee406665b781da69,40caf1ff72778ae86b8137fcee406665b781da69,"go.tools/cmd/cover: better usage message

R=adg, rsc
CC=golang-dev
https://golang.org/cl/10453044"
griesemer,2013-06-24 18:49:02,https://api.github.com/repos/golang/tools/git/commits/c13bb422def7a750219452041ed45bdcc99307f7,c13bb422def7a750219452041ed45bdcc99307f7,"go.tools/go/types: fix nil-ptr deref in gcimporter

Also: Make error handling more explicit.

Possibly a fix for issue 5758.

R=adonovan
CC=golang-dev
https://golang.org/cl/10520043"
alandonovan,2013-06-24 18:15:13,https://api.github.com/repos/golang/tools/git/commits/8097dad7245c29420da5191740748b851e9067de,8097dad7245c29420da5191740748b851e9067de,"go.tools/ssa: Select now returns received values by tuple, not interface.

Before, all values received on some channel by Select would
flow to an empty interface, creating a spurious confluence for
flow analyses.  Now, the tuple returned by Select has one
component for each 'receive' case.

Also, fixes:
- Removed workarounds for now-fixed typechecker bug in FuncLit+TypeAssert.
- sanity check that all Value Instructions have non-nil Type().
- Convert: document and sanity-check that at least one of the types is basic.

Also, other things to help clients:
- Define CallInstruction interface: common parts of Call, Go, Defer.
- Add CallCommon.Signature() method.
- Literal.Pos() is now populated.

R=gri
CC=golang-dev
https://golang.org/cl/10505043"
griesemer,2013-06-24 16:58:27,https://api.github.com/repos/golang/tools/git/commits/bd55eef6ec02177396fccfc8d2c52d8916223968,bd55eef6ec02177396fccfc8d2c52d8916223968,"go.tools/go/types: handle p.x with p of type P *S

R=adonovan
CC=golang-dev
https://golang.org/cl/10459044"
griesemer,2013-06-22 02:56:40,https://api.github.com/repos/golang/tools/git/commits/cf8ec1591f55eee862e1fa9bf6a8334a9fec64c7,cf8ec1591f55eee862e1fa9bf6a8334a9fec64c7,"go.tools/go/exact: more consistent handling of unknown values

R=adonovan
CC=golang-dev
https://golang.org/cl/10431046"
robpike,2013-06-21 21:47:04,https://api.github.com/repos/golang/tools/git/commits/78d364c43eb1c8968690726f4d1e456ded589f92,78d364c43eb1c8968690726f4d1e456ded589f92,"go.tools/cmd/cover: fix build
Need the ./ for the path. Quick fix to get the build green, but what really is the right answer for Windows?

R=golang-dev
CC=golang-dev
https://golang.org/cl/10359044"
robpike,2013-06-21 21:35:09,https://api.github.com/repos/golang/tools/git/commits/c28528d489dc604159635e3c96309cf349b112e1,c28528d489dc604159635e3c96309cf349b112e1,"go.tools/cmd/cover: add a test
Test the statistics work as expected for a simple program, which can be extended as needed. This is all a bit meta.

R=golang-dev, rsc
CC=golang-dev
https://golang.org/cl/10392050"
griesemer,2013-06-21 21:30:47,https://api.github.com/repos/golang/tools/git/commits/628104465d1ec3aabcb2dbdd55d827923d10686c,628104465d1ec3aabcb2dbdd55d827923d10686c,"go.tools/go/types: fix logic error in MissingMethod and type assert code

R=adonovan
CC=golang-dev
https://golang.org/cl/10448046"
robpike,2013-06-21 21:19:57,https://api.github.com/repos/golang/tools/git/commits/decfd079c599d38c12a5ae9e89fdeec5874fb3be,decfd079c599d38c12a5ae9e89fdeec5874fb3be,"go.tools/cmd/cover: skip mode line (first line of profile)
Still to do: use the mode to affect how to present the data.

R=adg, rsc
CC=golang-dev
https://golang.org/cl/10364050"
griesemer,2013-06-21 20:19:41,https://api.github.com/repos/golang/tools/git/commits/0325defab0c43804ed8a6032a036d9c67d10ed4a,0325defab0c43804ed8a6032a036d9c67d10ed4a,"go.tools/go/types: factor method set and lookup better

No functional change, just symmetric cleanup.

R=adonovan
CC=golang-dev
https://golang.org/cl/10417045"
robpike,2013-06-21 18:27:53,https://api.github.com/repos/golang/tools/git/commits/331c428e7671b353ec7112e73605f5ef32c8d168,331c428e7671b353ec7112e73605f5ef32c8d168,"go.tools/cmd/vet: add check for shadowed variables
Experimental feature. It's too noisy yet to be enabled by default,
so it must be enabled explicitly by
        go tool vet -shadow *.go
or
        go tool vet -shadow directory
(The go command does not know about the -shadow flag.)

Fixes golang/go#5634.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/10409047"
griesemer,2013-06-21 15:57:26,https://api.github.com/repos/golang/tools/git/commits/2d345c1dd711f294595c44c1a406c6387654624c,2d345c1dd711f294595c44c1a406c6387654624c,"go.tools/go/types: improved LookupFieldOrMethod, ast.Nodes for Scopes

- LookupFieldOrMethod now computes if any indirection was found on the
  way to an embedded field/method: this is the only information required
  to determine if a result method is in the method set.

- Scopes now provide a link to the ast.Node responsible for them.

Also:
- don't permit unsafe.Offsetof on method values
- report ambiguities in field/method lookup errors
- added some missing checks for anonymous fields
- lots of new tests

Fixes golang/go#5499.

R=adonovan
CC=golang-dev
https://golang.org/cl/10411045"
griesemer,2013-06-19 19:29:17,https://api.github.com/repos/golang/tools/git/commits/9ff248b00d7f66eb6ed692462fa0cedf1ac2f1c3,9ff248b00d7f66eb6ed692462fa0cedf1ac2f1c3,"go.tools/go/types: simplified lookup

- much simpler lookup
- more result information
- will make tracking of pointer-ness easier

TODO: apply the same changes to method set computation

R=adonovan
CC=golang-dev
https://golang.org/cl/10379049"
robpike,2013-06-19 16:11:32,https://api.github.com/repos/golang/tools/git/commits/33ae2b030f77db1a72d7e98f33643640f09f64f8,33ae2b030f77db1a72d7e98f33643640f09f64f8,"go.tools.cmd/cover: define a block to end at the closing brace rather than last statement
Makes for prettier output in many cases.

R=golang-dev, adg
CC=golang-dev
https://golang.org/cl/10360049"
griesemer,2013-06-18 23:41:11,https://api.github.com/repos/golang/tools/git/commits/d338982a6442541694cdbebe733a5558f74c345b,d338982a6442541694cdbebe733a5558f74c345b,"go.tools/go/types: use qualified names when printing types in errors

Also: Require that clean package paths are not ""."".

R=adonovan, r
CC=golang-dev
https://golang.org/cl/10368047"
griesemer,2013-06-18 22:59:16,https://api.github.com/repos/golang/tools/git/commits/9a50e157b43cb2535dfdffa493b572cc04090581,9a50e157b43cb2535dfdffa493b572cc04090581,"go.tools/go/types: first cut at sorted method sets

- moved single field and method lookup functionality
  from operand.go to new file lookup.go and cleaned
  up the lookup implementation

- implemented method set computation using the same
  basic structure as for field/method lookup, in new
  file methodset.go

- minor related changes

- the method set computation ignores pointer-ness of
  the receiver type at the moment (next CL)

- fixed a couple of bugs (missing pkg info for imported
  embedded types, wrong test for method expressions)

The method set computation is currently verified by
comparing a regular method lookup with a method-set
based method lookup.

R=adonovan
CC=golang-dev
https://golang.org/cl/10235049"
griesemer,2013-06-18 22:34:12,https://api.github.com/repos/golang/tools/git/commits/7517d8bae3f41c96cb511cf241a14fd807a2e103,7517d8bae3f41c96cb511cf241a14fd807a2e103,"go.tools/go/types: catch cycles in function declarations

Fixes golang/go#5217.

R=adonovan
CC=golang-dev
https://golang.org/cl/10402044"
robpike,2013-06-18 21:12:51,https://api.github.com/repos/golang/tools/git/commits/86c0ff156ce9352410c10f64171e9aedaab25bfa,86c0ff156ce9352410c10f64171e9aedaab25bfa,"go.tools/cmd/vet: set the package name unconditionally
A better fix than the one in CL 10400044

R=gri
CC=golang-dev
https://golang.org/cl/10376044"
robpike,2013-06-18 21:02:01,https://api.github.com/repos/golang/tools/git/commits/ce82fb0e23f80d423830d9e2389e141c3ea83d97,ce82fb0e23f80d423830d9e2389e141c3ea83d97,"go.tools/cmd/vet: use directory for pkg.path if path is "".""
Before:
        math/big/nat_test.go:688: arg r for printf verb %s of wrong type: ..Word
After:
        math/big/nat_test.go:688: arg r for printf verb %s of wrong type: big.Word

R=gri
CC=golang-dev
https://golang.org/cl/10400044"
robpike,2013-06-18 15:21:06,https://api.github.com/repos/golang/tools/git/commits/df787c2073dd5abaab30d4db348c5afe382c7d68,df787c2073dd5abaab30d4db348c5afe382c7d68,"go.tools/cmd/vet: check for missing printf verb
A trailing % resulted in a bad error message.
Also clean up a couple of dregs left over from the
refactoring to add indexed formats.

R=dsymonds
CC=golang-dev
https://golang.org/cl/10336044"
adg,2013-06-14 22:53:10,https://api.github.com/repos/golang/tools/git/commits/16c6244c270fa92d69aa77f097e407f67f95e582,16c6244c270fa92d69aa77f097e407f67f95e582,"go.tools/cmd/cover: add HTML output

R=r, dsymonds
CC=golang-dev
https://golang.org/cl/10277043"
alandonovan,2013-06-14 19:50:37,https://api.github.com/repos/golang/tools/git/commits/f1d4d01fed0a2d686c2bfceef2a3db526750f5c2,f1d4d01fed0a2d686c2bfceef2a3db526750f5c2,"go.tools/ssa: memoize synthesis of all wrapper methods.

methodIndex() utility was split and specialized to its two
cases, *Interface vs *Named, which are logically quite
different.

We can't memoize promotion wrappers yet; we need typemap.

Terminology:
- ""thunks"" are now ""wrappers""
- ""bridge methods"" are now ""promotion wrappers""

Where the diff is messy it's just because of indentation.

R=gri
CC=golang-dev
https://golang.org/cl/10282043"
alandonovan,2013-06-13 21:31:32,https://api.github.com/repos/golang/tools/git/commits/0f26bbae8fa22272ca31ed56647de3b327dbfd57,0f26bbae8fa22272ca31ed56647de3b327dbfd57,"go.tools/ssa: fix bug in code emitted for ast.TypeAssertExpr.

var x I = ...
x.(E) may fail dynamically (iff x is nil).

Added a testcase.

R=gri
CC=golang-dev
https://golang.org/cl/10237045"
robpike,2013-06-13 21:27:22,https://api.github.com/repos/golang/tools/git/commits/3162ce0df281581f5d0ca7d3627911ded9223a67,3162ce0df281581f5d0ca7d3627911ded9223a67,"go.tools/cmd/cover: record statements-per-block
This number will allow us to give a conventional meaning to ""coverage"":
the percentage of executable statements visited by the test.

R=adonovan
CC=golang-dev
https://golang.org/cl/10271045"
robpike,2013-06-13 19:50:30,https://api.github.com/repos/golang/tools/git/commits/e330494adc1da4d66c88008b4732e7ed8a2f4ac2,e330494adc1da4d66c88008b4732e7ed8a2f4ac2,"go.tool/cmd/cover: use a struct instead of multiple variables
We are going to need one more piece of data, so rather than create
a third variable let's just put it all in one struct. The interface gets
easier too.

R=adonovan
CC=golang-dev
https://golang.org/cl/10271044"
alandonovan,2013-06-13 18:43:35,https://api.github.com/repos/golang/tools/git/commits/341a07a3aabb3e5e123dadf0a74f77d8a5a31436,341a07a3aabb3e5e123dadf0a74f77d8a5a31436,"go.tools/ssa: small changes accumulated during gri's vacation. :)

Method sets:
- Simplify CallCommon.
  Avoid the implicit copy when calling a T method on a *T
  receiver.  This simplifies clients.  Instead we generate
  ""indirection wrapper"" functions that do this (like gc does).
  New invariant:
  m's receiver type is exactly T for all m in MethodSet(T)
- MakeInterface no longer holds the concrete type's MethodSet.
  We can defer its computation this way.
- ssa.Type now just wraps a types.TypeName object.
  MethodSets are computed as needed, not eagerly.

Position info:
- new CanonicalPos utility maps ast.Expr to canonical
  token.Pos, as returned by {Instruction,Value}.Pos() methods.
- Don't set posn for implicit operations (e.g. varargs array alloc)
- Set position info for ChangeInterface and Slice instructions.

Cosmetic:
- add Member.Token() method
- simplify isPointer
- Omit words ""interface"", ""slice"" when printing MakeInterface,
  MakeSlice; the type is enough.
- Comments on PathEnclosingInterval.
- Remove Function.FullName() where implicit String() suffices.

Also:
- Exposed NewLiteral to clients.
- Added ssa.Instruction.Parent() *Function
  Added ssa.BasicBlock.Parent() *Function.
  Added Sanity checks for above.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/10166045"
griesemer,2013-06-13 18:11:53,https://api.github.com/repos/golang/tools/git/commits/9ce6fcb502a44b25f125d00c5c96b376ad8d25ef,9ce6fcb502a44b25f125d00c5c96b376ad8d25ef,"go.tools/go/types: use []*Func instead of *Scope to hold methods

R=golang-dev, adonovan
CC=golang-dev
https://golang.org/cl/10243043"
griesemer,2013-06-12 02:54:47,https://api.github.com/repos/golang/tools/git/commits/5efab5e9c05a793570485077d786a86ff7f0a5b8,5efab5e9c05a793570485077d786a86ff7f0a5b8,"go.tools/go/types: Use []*Field instead of *Scope for struct fields

This partially reverts a previous change, using a []*Field is a better
representation for struct fields than a *Scope, after all; however
*Fields remain Objects.

Fixes golang/go#5670.

R=adonovan, axwalk
CC=golang-dev
https://golang.org/cl/10207043"
robpike,2013-06-11 17:18:55,https://api.github.com/repos/golang/tools/git/commits/0ca15cc618d2ac5cd01ec7c92d6afa1d5450dc8b,0ca15cc618d2ac5cd01ec7c92d6afa1d5450dc8b,"go.tools/cmd/cover: add -o outputfile option
Makes it easier to get error output when run from the go tool.

R=adonovan
CC=golang-dev
https://golang.org/cl/10190043"
griesemer,2013-06-11 17:00:00,https://api.github.com/repos/golang/tools/git/commits/0d2f7d411be7ce4e6f7ab8075647631dcbb3ac53,0d2f7d411be7ce4e6f7ab8075647631dcbb3ac53,"go.tools/go/types: fix isAssignable and IsIdentical

- Imported objects that are explicitly exported may have a nil package;
  don't use it for qualified name computation (it's not needed).
- isAssignable must check all possibilities before declaring failure.

Fixes golang/go#5675.

R=adonovan
CC=golang-dev
https://golang.org/cl/10141044"
griesemer,2013-06-10 23:42:22,https://api.github.com/repos/golang/tools/git/commits/63f3103b6fa5e5a7062c252e2e07e8de55b0e11d,63f3103b6fa5e5a7062c252e2e07e8de55b0e11d,"go.tools/go/types: call Context.Ident for selectors

Fixes golang/go#5669.

R=adonovan
CC=golang-dev
https://golang.org/cl/9714045"
robpike,2013-06-10 22:58:32,https://api.github.com/repos/golang/tools/git/commits/73612ddbfdaa5cabf51a2d2b77db6f158d17802a,73612ddbfdaa5cabf51a2d2b77db6f158d17802a,"go.tools/cmd/cover: handle empty select
Putting a coverage counter inside select{} is invalid Go.

R=adonovan
CC=golang-dev
https://golang.org/cl/10175043"
robpike,2013-06-10 17:58:08,https://api.github.com/repos/golang/tools/git/commits/ba51e7a5864b8123c8f63631d034f965b536ba54,ba51e7a5864b8123c8f63631d034f965b536ba54,"go.tools/cmd/cover: make -mode=atomic work again
It was broken by a previous simplification. The import was missing.

R=adonovan
CC=golang-dev
https://golang.org/cl/10117045"
robpike,2013-06-07 06:51:51,https://api.github.com/repos/golang/tools/git/commits/ab78c3fa1021b6fb5ada0fef694403f1c7a1d6c9,ab78c3fa1021b6fb5ada0fef694403f1c7a1d6c9,"go.tools/cmd/cover: new tool

This is just the tool proper; stitching into ""go test"" will be a separate CL.
Tests are missing - they'll come once it's integrated - but it can handle,
perhaps correctly, all of src/pkg/...

The basic approach is to rewrite the source to add annotations that will
track coverage; the rewritten source must of course be compiled and
run after this tool has done its job.

R=adonovan
CC=golang-dev
https://golang.org/cl/10102043"
robpike,2013-06-06 23:05:14,https://api.github.com/repos/golang/tools/git/commits/3402cf10abb2c5ca5232be44655c965dc6de724f,3402cf10abb2c5ca5232be44655c965dc6de724f,"go.tools/cmd/vet: verify printf for String and Error implementers
Fixes golang/go#5624.

R=adonovan
CC=gobot, golang-dev, gri
https://golang.org/cl/9657048"
griesemer,2013-06-04 19:15:41,https://api.github.com/repos/golang/tools/git/commits/221795b447af6a4fd8361f63b5e405c671a29c9b,221795b447af6a4fd8361f63b5e405c671a29c9b,"go.tools/go/types: Factories for all objects

R=adonovan
CC=golang-dev
https://golang.org/cl/9794044"
alandonovan,2013-06-03 20:46:57,https://api.github.com/repos/golang/tools/git/commits/fc4c97d1f1680d3dd9039b14d61c95b1b924f3a8,fc4c97d1f1680d3dd9039b14d61c95b1b924f3a8,"go.tools/ssa: refactoring: eliminate Builder from API.

Details:
- builder is now un-exported and is now a per-package entity.
- Package.nTo1Vars is now part of builder, where it belongs.
- CREATE phase code split out into its own file, create.go
- Context type is gone; it had become trivial after the
  Importer refactoring.
- importer.PackageInfo.Imports() now encapsulates iteration
  over imports.

Typical usage is now:
  prog := ssa.NewProgram(imp.Fset, mode)
  prog.CreatePackages(imp)
  prog.BuildAll()

Builder.BuildPackage(Package) is now Package.Build()
Builder.BuildAllPackages() is now Program.BuildAll()

R=iant, gri
CC=golang-dev
https://golang.org/cl/9970044"
alandonovan,2013-06-03 18:15:19,https://api.github.com/repos/golang/tools/git/commits/4d628a0312e1d179a352b52e07e0b886ac18ac85,4d628a0312e1d179a352b52e07e0b886ac18ac85,"go.tools/ssa: refactoring to make Builder stateless.

A Builder is now just a Program and a Context.

Details of this CL:
- Builder.imp field removed.
- Builder.globals split up into Package.values and Prog.Builtins.
- Builder.packages  moved to Prog.packages.
- Builder.PackageFor moved to Program.Package(types.Object)
- Program.Lookup() func replaces Builder.globals map.
- also: keep Package.info field around until end of BuildPackage.

Planned follow-ups to eliminate Builder from API:
- split NewBuilder up into NewProgram and Program.CreatePackages(...)
- move Builder.BuildAllPackages -> Program.BuildAll(Context)
- move Builder.BuildPackage -> Package.Build(Context)

R=gri, iant
CC=golang-dev
https://golang.org/cl/9966044"
alandonovan,2013-05-31 20:36:03,https://api.github.com/repos/golang/tools/git/commits/1f2812fe9be02649e4f29b4706dca78f2e0a9053,1f2812fe9be02649e4f29b4706dca78f2e0a9053,"go.tools/ssa: fix bug in makeBridgeMethod for promoted interfaces.

The method index was hard-coded to zero, which works some of
the time.  Apparently I just forgot to implement the
method-table lookup...

Added regression test.

R=gri
CC=golang-dev
https://golang.org/cl/9916043"
robpike,2013-05-31 20:31:01,https://api.github.com/repos/golang/tools/git/commits/838e9a8987879b571e0340d519023162efc8d397,838e9a8987879b571e0340d519023162efc8d397,"go.tools/cmd/vet: check indexed arguments in printf
Refactor the printf parser to be easier to understand.

R=gri
CC=golang-dev
https://golang.org/cl/9909043"
alandonovan,2013-05-31 20:14:13,https://api.github.com/repos/golang/tools/git/commits/be28dbb86f2e08e12871e3f870c110cc122973ab,be28dbb86f2e08e12871e3f870c110cc122973ab,"go.types/ssa: split the load/parse/typecheck logic off into a separate package.

PLEASE NOTE: the APIs for both ""importer"" and ""ssa"" packages
will continue to evolve and both need some polishing; the key
thing is that this CL splits them.

The go.types/importer package contains contains the Importer,
which takes care of the mechanics of loading a set of packages
and type-checking them.  It exposes for each package a
PackageInfo containing:
- the package's ASTs (i.e. the input to the typechecker)
- the types.Package object
- the memoization of the typechecker callbacks for identifier
  resolution, constant folding and expression type inference.

Method-set computation (and hence bridge-method creation) is
now moved to after creation of all packages: since they are no
longer created in topological order, we can't guarantee the
needed delegate methods exist yet.

ssa.Package no longer has public TypeOf, ObjectOf, ValueOf methods.
The private counterparts are valid only during the build phase.

Also:
- added to go/types an informative error (not crash) for an
  importer() returning nil without error.
- removed Package.Name(), barely needed.
- changed Package.String() slightly.
- flag what looks like a bug in makeBridgeMethod. Will follow up.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/9898043"
griesemer,2013-05-31 19:02:33,https://api.github.com/repos/golang/tools/git/commits/710a117e3344b2d0eb92e1b56c42d63258044ad5,710a117e3344b2d0eb92e1b56c42d63258044ad5,"go.tools/go/types: don't use nil fields and methods

The change for fields is in anticipation of fields
becoming a *Scope.

Pointed out by adonovan.

R=adonovan
CC=golang-dev
https://golang.org/cl/9874049"
griesemer,2013-05-31 18:22:00,https://api.github.com/repos/golang/tools/git/commits/e5f49b1c9f0ba4fee8e587fedf534720db655b63,e5f49b1c9f0ba4fee8e587fedf534720db655b63,"go.tools/go/types: typecheck call arguments even if the call doesn't typecheck

This provides better partial type information in case of type errors.

R=r
CC=golang-dev
https://golang.org/cl/9835049"
griesemer,2013-05-31 04:58:14,https://api.github.com/repos/golang/tools/git/commits/3cad037e2fccf59962ca80c4c56daef25d9b2779,3cad037e2fccf59962ca80c4c56daef25d9b2779,"go.tools/go/types: replace ObjSet with improved Scope

- First step towards unified use of scopes. Will enable
  further simplifications.

- Removed various ForEach iterators in favor of the existing
  accessor methods, for a thinner API.

- Renamed outer/Outer to parent/Parent for scopes.

- Removed check.lookup in favor of Scope.LookupParent.

R=adonovan
CC=golang-dev
https://golang.org/cl/9862044"
robpike,2013-05-30 18:26:22,https://api.github.com/repos/golang/tools/git/commits/291b2c84b6bb89f61fa2fde160b11b7eafa4b09c,291b2c84b6bb89f61fa2fde160b11b7eafa4b09c,"go.tools/cmd/vet: prepare print format checker for indexed arguments
Rewrite the checker to be more flexible and better documented, being
more explicit about parsed format vs. checked arguments.
No attempt yet to do check indexed formats; this just paves the way.
All tests still pass.

R=gri
CC=golang-dev
https://golang.org/cl/9881044"
alandonovan,2013-05-30 17:18:07,https://api.github.com/repos/golang/tools/git/commits/18f85da60d5122ef004c93d7582f7f1656c6faf1,18f85da60d5122ef004c93d7582f7f1656c6faf1,"go.tools/ssa: fix breakage caused by CL 9839045 to go/types.

This removes the ast.CaseClase hack for implicit variables.

R=gri
CC=golang-dev
https://golang.org/cl/9863045"
griesemer,2013-05-30 16:50:44,https://api.github.com/repos/golang/tools/git/commits/faef64e27194a95a926689d6010f008f3ad3bf21,faef64e27194a95a926689d6010f008f3ad3bf21,"go.tools/go/types: support for Context.ImplicitObj callbacks

Also:
- more cleanup of new identifier resolution code
- removed residue Object.Pos() code
- two separate, equally formatted error messages for redeclaration
  errors for easier tool support
- initial support for labels
- enabled several disabled tests

Thic CL will break go.tools/ssa/interp, but the pending
CL 9863045 fixes that.

Fixes golang/go#5504.

R=adonovan
CC=golang-dev
https://golang.org/cl/9839045"
alandonovan,2013-05-30 16:13:42,https://api.github.com/repos/golang/tools/git/commits/4e0d6858c8832fd208f30403289941e38d05e18a,4e0d6858c8832fd208f30403289941e38d05e18a,"go.types/ssa: inline all calls to objKind().

R=gri
CC=golang-dev
https://golang.org/cl/9740052"
alandonovan,2013-05-30 13:59:17,https://api.github.com/repos/golang/tools/git/commits/6c7ce1c2d30f2477bee802ee38fd6814806a6b9f,6c7ce1c2d30f2477bee802ee38fd6814806a6b9f,"go.tools/ssa: Value.Pos() method + remaining source position plumbing.

Implement Pos() method for
  Values:       Parameter, Capture, Phi.  (Not Literal, Builtin.)
  Instructions: UnOp, BinOp, Store.

'address' (an lvalue) now needs position of '*' in ""*addr"".

Also:
- Un-export fields Pos_ Type_ Name_ Block_ from various values/instructions.
  Define NewFunction() as a temporary measure.
  Will try to eliminate calls from clients...
- Remove Implements{Value,Member,Interface} marker methods.
  I've decided I don't like them.
- Func.addParamObj helper.
- Various comment fixes.

R=gri
CC=golang-dev
https://golang.org/cl/9740046"
robpike,2013-05-29 19:00:51,https://api.github.com/repos/golang/tools/git/commits/d6c1c75eab4ec5928bef4e365d2944d7fc0c2862,d6c1c75eab4ec5928bef4e365d2944d7fc0c2862,"go.tools/cmd/vet: say ./testvet instead of testvet
I bet ""."" is not in the default PATH.

R=golang-dev, minux.ma
CC=golang-dev
https://golang.org/cl/9867043"
robpike,2013-05-29 15:28:19,https://api.github.com/repos/golang/tools/git/commits/f91ca661794a9d3f293d81cb06231fc8ff9918f6,f91ca661794a9d3f293d81cb06231fc8ff9918f6,"go.tools/cmd/vet: attempt to fix build
Can't reproduce the failure outside the builder, but attempt a fix
by changing the criterion for failure: FAIL iff the output contains ""BUG"".

R=golang-dev, rsc
CC=golang-dev
https://golang.org/cl/9798050"
robpike,2013-05-28 20:51:47,https://api.github.com/repos/golang/tools/git/commits/2b48cfca086d34fedf78aa73fbfff68817bc3256,2b48cfca086d34fedf78aa73fbfff68817bc3256,"cmd/vet: use length of output from errchk to check PASS/FAIL
errchk is itself a FAIL: it doesn't exit non-zero on error!

R=golang-dev, iant
CC=golang-dev
https://golang.org/cl/9842044"
robpike,2013-05-28 19:37:34,https://api.github.com/repos/golang/tools/git/commits/c7f7fa13811f37c34d350a30e0974c5af5f517fe,c7f7fa13811f37c34d350a30e0974c5af5f517fe,"cmd/vet: simplify format checker
Simplify the code a bit, get it working after recent go/types changes,
and handle ""%*%"" just in case. Preparation for handling argument indexing.

R=gri
CC=golang-dev
https://golang.org/cl/9747045"
alandonovan,2013-05-28 19:28:46,https://api.github.com/repos/golang/tools/git/commits/20029fe5f7182fd2549d5a34416b25c16c75bf9e,20029fe5f7182fd2549d5a34416b25c16c75bf9e,"go.tools/ssa: utility functions mapping source intervals to ast.Nodes.

PathEnclosingInterval: 	maps a source position to an ast.Node.
EnclosingFunction:   	finds ssa.Function enclosing an ast.Node.
HasEnclosingFunction:   cheaper impl of EnclosingFunction()!=nil
NodeDescription:        user friendly node type descriptions.

+ tests.

Also: make ssa.Package.TypeInfo field a pointer.

R=gri, r
CC=golang-dev
https://golang.org/cl/9639045"
griesemer,2013-05-28 18:39:15,https://api.github.com/repos/golang/tools/git/commits/b52cce75f37150a1a154c3ab25d34fcec605e658,b52cce75f37150a1a154c3ab25d34fcec605e658,"adonovan: first round of cleanups: remove 'resolve' internal flag and respective dead code

No other changes besides documentation updates for now.

R=golang-dev, adonovan
CC=golang-dev
https://golang.org/cl/9780045"
griesemer,2013-05-28 17:25:11,https://api.github.com/repos/golang/tools/git/commits/5c2bbcb0fd9fd839ee0e8753ea20ef18842d0c6e,5c2bbcb0fd9fd839ee0e8753ea20ef18842d0c6e,"go.tools/go/types: enable resolution of objects in type checker

R=adonovan
CC=golang-dev
https://golang.org/cl/9838043"
griesemer,2013-05-28 17:06:37,https://api.github.com/repos/golang/tools/git/commits/3df6f127f0357271d8bbcce92e2b92a44696e691,3df6f127f0357271d8bbcce92e2b92a44696e691,"go.tools/go/types: resolve objects in type checker

By setting resolve = true in check.go, the type checker
will do all identifier resolution during type checking
time and ignore (and not depend on) parser objects. This
permits the type checker to run easily on ASTs that are
not generated with invariants guaranteed by the parser.

There is a lot of new code; much of it slightly modified
copies of old code. There is also a lot of duplication.
After removing the dead code resulting from resolve = true
permanently (and removing the flag as well), it will be
easier to perform a thorough cleanup. As is, there are
too many intertwined code paths.

For now resolve = false. To be enabled in a successor CL.

R=adonovan
CC=golang-dev
https://golang.org/cl/9606045"
griesemer,2013-05-25 17:04:20,https://api.github.com/repos/golang/tools/git/commits/98bcbfbab73cde8019079d9b7397a9656cac06c0,98bcbfbab73cde8019079d9b7397a9656cac06c0,"go.tools/ssa: print identifer location if not found in TypeInfo

R=adonovan, r
CC=golang-dev
https://golang.org/cl/9703044"
griesemer,2013-05-25 16:51:29,https://api.github.com/repos/golang/tools/git/commits/7a4893150847d79411a1c80e7a63d8d3f7526d1f,7a4893150847d79411a1c80e7a63d8d3f7526d1f,"go.tools/ssa: fix debug printing

R=adonovan, r
CC=golang-dev
https://golang.org/cl/9774043"
alandonovan,2013-05-22 21:56:18,https://api.github.com/repos/golang/tools/git/commits/8cdf1f1cb1d7f2f40439720766c2f063e3ca4c49,8cdf1f1cb1d7f2f40439720766c2f063e3ca4c49,"go.tools/ssa: add support for bound-method closures.

Extracted Builder.findMethod function to handle
methodset/receiver logic common to
function calls (Builder.setCall) and
bound method closure creation (Builder.selector).

Capture: added explicit Name, Type fields to Capture instead
of relying on Outer field, which is now un-exported since its
only purpose is to let Builder.expr(case *ast.FuncLit) know
which values to put in the closure; it is nilled immediately
after.

Simplified Function.lookup() logic: there's no need to walk
the Outer chain each time to set Alloc.Heap=true, as it's
already set during creation of the outermost
Capture{outer:*Alloc}.

Added interp/testdata/boundmeth.go test.

Cosmetic changes:
- add support for bound method thunks to Function.FullName().
- Simplified {Literal,Global,Builtin,Function}.String()
- doc: Captures are no longer necessarily addresses.
- added yet another missing pair of ""()"" (go/types accessors).
- print ""Synthetic"" not ""Declared at -"" for synthetic functions.
- use '$' not center-dot in synthetic identifiers (easier to type).

R=gri
CC=golang-dev
https://golang.org/cl/9654043"
robpike,2013-05-22 17:20:50,https://api.github.com/repos/golang/tools/git/commits/bf87b9f0f503f69b7623be389fba66a5f48005d2,bf87b9f0f503f69b7623be389fba66a5f48005d2,"go.tools/cmd/vet: use ""go test"" to test
- remove Makefile
- move test data into a subdirectory
- encapsulate the invocation of errchk into a standard Test using os.exec

R=golang-dev, minux.ma, rsc
CC=golang-dev
https://golang.org/cl/9509045"
griesemer,2013-05-20 21:29:57,https://api.github.com/repos/golang/tools/git/commits/08ee2985d7cc766e719f840638c79047e368cedd,08ee2985d7cc766e719f840638c79047e368cedd,"go.tools/go.types: check for redeclarations across package files

Fixes golang/go#5506.

R=adonovan
CC=golang-dev
https://golang.org/cl/9600044"
griesemer,2013-05-20 19:56:17,https://api.github.com/repos/golang/tools/git/commits/ad2dafcf8feebeb29ee8a7f1c9bc166a840df3b1,ad2dafcf8feebeb29ee8a7f1c9bc166a840df3b1,"go.tools/gotype: fix build

Move from go.exp brought over an old version.

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/9594043"
robpike,2013-05-20 19:20:05,https://api.github.com/repos/golang/tools/git/commits/08cc526448150be9866736bb4c37f46286d102f3,08cc526448150be9866736bb4c37f46286d102f3,"go.tools/cmd/vet: update to new go/types package
Now that it's in the same repository as the go/types package we can delete
the mechanism to build it without type checking.

Add a make rule to install it where the go tool can find it.
Why doesn't ""go install"" take a -o flag?

R=gri
CC=gobot, golang-dev
https://golang.org/cl/9526043"
alandonovan,2013-05-17 21:33:09,https://api.github.com/repos/golang/tools/git/commits/113d6d30b12ec59097f6cd4608fb159b474c4f75,113d6d30b12ec59097f6cd4608fb159b474c4f75,"code.google.com/p/go.tools/ssa: include ssa.Package and init() function in example output.

Also:
- remove redundant text in doc.go.
- fix (yet more) cases of missing parens in Printf, fallout from
  go/types accessors refactoring.
- don't mix spaces and tabs within lines printed by ssa.Function.DumpTo:
  it makes it too hard to constructed expected outputs for tests.
  (Tabs may appear at line start though.)

Sadly godoc -play won't run this program; it complains it
can't import ""code.google.com/p/go.exp/ssa"".  Any idea why?

R=gri
CC=golang-dev
https://golang.org/cl/9481044"
robpike,2013-05-17 21:02:47,https://api.github.com/repos/golang/tools/git/commits/87334f402b5e9d8a9ef7956e55847794dbaa04e1,87334f402b5e9d8a9ef7956e55847794dbaa04e1,"go.tools: bring up to date
Repo was copied from old point.  Bad r.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/9504043"
robpike,2013-05-17 20:25:48,https://api.github.com/repos/golang/tools/git/commits/83f21b922684a7fcdd5e486c6870061bec6d1d68,83f21b922684a7fcdd5e486c6870061bec6d1d68,"go.tools: add missing files ssa/*.go

R=golang-dev, adonovan
CC=golang-dev
https://golang.org/cl/9500043"
robpike,2013-05-17 20:20:39,https://api.github.com/repos/golang/tools/git/commits/01f8cd246d3de57dc580b56c610c5e73c591c59c,01f8cd246d3de57dc580b56c610c5e73c591c59c,"go.tools: add go/types, ssa, and cmd/vet
They will be deleted from their current homes once this has landed.
Changes made to import paths to make the code compile, and to find
errchk in the right place in cmd/vet's Makefile.
TODO in a later CL: tidy up vet.

R=golang-dev, gri
CC=golang-dev
https://golang.org/cl/9495043"
robpike,2013-05-17 19:55:10,https://api.github.com/repos/golang/tools/git/commits/9f31513c9263e823a9904203053f72a0ed014bac,9f31513c9263e823a9904203053f72a0ed014bac,"go.tools: provide the right README

R=golang-dev, minux.ma
CC=golang-dev
https://golang.org/cl/9479044"
nigeltao,2012-04-16 01:24:04,https://api.github.com/repos/golang/tools/git/commits/ca8b903872a563212611fbebd17d321d319763ad,ca8b903872a563212611fbebd17d321d319763ad,"go.empty: add PATENTS file to the subrepo.

R=r
CC=golang-dev
https://golang.org/cl/6026043"
robpike,2012-03-17 04:20:58,https://api.github.com/repos/golang/tools/git/commits/b38d45f7ff30da05839dfc1ac9f5f7241049f427,b38d45f7ff30da05839dfc1ac9f5f7241049f427,"LICENSE: add

R=golang-dev, dsymonds
CC=golang-dev
https://golang.org/cl/5845057"
rsc,2012-01-25 19:45:13,https://api.github.com/repos/golang/tools/git/commits/f61fbb80d2fc0f581f66365e8907f07a4d7506b0,f61fbb80d2fc0f581f66365e8907f07a4d7506b0,"go.empty: prototype for new subrepository

R=golang-dev, r
CC=golang-dev
https://golang.org/cl/5572056"
