feather,"Feather: fast, interoperable binary data frame storage for Python, R, and more powered by Apache Arrow"
username,timestamp,url,sha,message
hadley,2019-09-03 21:44:31,https://api.github.com/repos/wesm/feather/git/commits/93168c96de62a310cfc3cca1b4a44803e1e0c5cb,93168c96de62a310cfc3cca1b4a44803e1e0c5cb,Increment version number
hadley,2019-09-03 21:44:09,https://api.github.com/repos/wesm/feather/git/commits/dc9ebcc49132fd126d21adbccaafb5260c07646a,dc9ebcc49132fd126d21adbccaafb5260c07646a,Bump version for release
hadley,2019-09-03 18:54:20,https://api.github.com/repos/wesm/feather/git/commits/34d809e2af75fd41511e52eb4210d2f6e09ee160,34d809e2af75fd41511e52eb4210d2f6e09ee160,"Bump required version of tibble

Fixes #374"
hadley,2019-09-03 18:52:50,https://api.github.com/repos/wesm/feather/git/commits/6f0bea71d47286b3fd64cd5f59e5a90fce50a490,6f0bea71d47286b3fd64cd5f59e5a90fce50a490,"Skip file path test on windows

Fixes #378"
jimhester,2019-08-30 15:10:02,https://api.github.com/repos/wesm/feather/git/commits/bbf285737d8f5d3227899fd3831c5f5d3adc8964,bbf285737d8f5d3227899fd3831c5f5d3adc8964,"[R] Changes for feather v0.3.3 (#375)

Fixes for v0.3.3 CRAN releaes 

* In `feather_metadata()`- to avoid the error when using ""~"" in the path, added `path <- path.expand(path)`

* Ignore feather Makefile

* Update version and news for release

* Use tibble::tibble instead of dplyr::data_frame"
alchemyst,2019-01-24 17:03:47,https://api.github.com/repos/wesm/feather/git/commits/99267b30461c46b9e437f95e1d9338a92a854270,99267b30461c46b9e437f95e1d9338a92a854270,"Specify long_description_content_type for pypi rendering (#370)

See https://packaging.python.org/guides/making-a-pypi-friendly-readme/\#including-your-readme-in-your-package-s-metadata"
hadley,2019-01-07 21:48:25,https://api.github.com/repos/wesm/feather/git/commits/f6bb6c73b0e3284bb8fc01c5825b0ff9c1a92944,f6bb6c73b0e3284bb8fc01c5825b0ff9c1a92944,Increment version number
hadley,2019-01-07 14:30:24,https://api.github.com/repos/wesm/feather/git/commits/d3ef8ea3c2510544e02fb38d82fe654c0dbd3100,d3ef8ea3c2510544e02fb38d82fe654c0dbd3100,Prepare for release
hadley,2019-01-07 14:30:04,https://api.github.com/repos/wesm/feather/git/commits/2a8e9572f3551b7d70ecd4b97c5d11b7f466bca1,2a8e9572f3551b7d70ecd4b97c5d11b7f466bca1,Update Rcpp
krlmlr,2018-12-20 22:57:41,https://api.github.com/repos/wesm/feather/git/commits/85d7ce77689231e77fd5cda96774b38c1eaa98dd,85d7ce77689231e77fd5cda96774b38c1eaa98dd,"Prefer as_tibble() over as_data_frame() (#365)

* Prefer as_tibble() over as_data_frame()

* Also in tests

* :-)"
jimhester,2018-11-08 20:59:37,https://api.github.com/repos/wesm/feather/git/commits/3e7af04ec83352856b954fee6a82b168b29fab91,3e7af04ec83352856b954fee6a82b168b29fab91,"Fixes for CRAN failures (#353)

* Bump version

* Use native routine registration

* Re-document with roxygen 6.1.1

* Remove the as_data_frame method

This has been deprecated in newer versions of tibble

* Use native encoding for paths

normalizePath returns UTF-8 encoded paths with newer versions of R, but
most C APIs assume the paths are in the native encoding.

* Avoid protect issue by using Rcpp coercion"
gansanay,2017-09-20 19:00:43,https://api.github.com/repos/wesm/feather/git/commits/be5141bf3c4013c046ec44776b864845b8e458ad,be5141bf3c4013c046ec44776b864845b8e458ad,"snprintf() is called in status.cc and belongs to cstdio, that should then be included (#317)"
kevin-montrose,2017-07-06 15:51:46,https://api.github.com/repos/wesm/feather/git/commits/9a3938333cf9d5ea4efe89d133839aff582eda8b,9a3938333cf9d5ea4efe89d133839aff582eda8b,Note variable length arrays have a final offset (#302)
wesm,2017-05-24 00:19:17,https://api.github.com/repos/wesm/feather/git/commits/9da1fd3e17c8dd4ad4725fe81c80add8cf08ab33,9da1fd3e17c8dd4ad4725fe81c80add8cf08ab33,RLS: Feather 0.4 Python release
kevin-montrose,2017-05-21 23:23:16,https://api.github.com/repos/wesm/feather/git/commits/d253ed6ebbc232d770abadd5238d944a8a9c183a,d253ed6ebbc232d770abadd5238d944a8a9c183a,"Add a note about required alignment (#301)

[Format] Add a note about required alignment"
wesm,2017-05-15 13:37:52,https://api.github.com/repos/wesm/feather/git/commits/c1052ecc2af7ee7df432b0ef8502c41810211a5a,c1052ecc2af7ee7df432b0ef8502c41810211a5a,[C++] Add deprecation notice
wesm,2017-05-15 13:35:28,https://api.github.com/repos/wesm/feather/git/commits/5b9cb5f3f0817086f0ba1732747bd175a33e5d5e,5b9cb5f3f0817086f0ba1732747bd175a33e5d5e,"[Python] Use feather implementation from pyarrow

Author: Wes McKinney <wes.mckinney@twosigma.com>

Closes #297 from wesm/use-pyarrow and squashes the following commits:

d4c5b52 [Wes McKinney] Remove Python builds from Travis CI
d21a9fa [Wes McKinney] Edit READMEs
9531c8a [Wes McKinney] Cython no longer required
048505d [Wes McKinney] Pare down feather to a shell library that uses pyarrow as a dependency"
kevinushey,2017-01-02 22:20:40,https://api.github.com/repos/wesm/feather/git/commits/88722946a93d03469a943a59e2300e0c9efeb79d,88722946a93d03469a943a59e2300e0c9efeb79d,[R] tweaks for feather + gcc-4.6 (#280)
BenLangmead,2016-12-20 17:10:18,https://api.github.com/repos/wesm/feather/git/commits/88267c78cb10d28a965e4a7c6a6f42f1a607a3dd,88267c78cb10d28a965e4a7c6a6f42f1a607a3dd,Add compatibility.h to cpp install (#275)
kevinushey,2016-11-09 16:35:27,https://api.github.com/repos/wesm/feather/git/commits/9d4b4e3230dfbbba22674089b67b2bb8d3325835,9d4b4e3230dfbbba22674089b67b2bb8d3325835,"[R] prepare for R CRAN release

cc: @hadley @wesm; I don't think there's anything else needed beyond bumping the version number here?

Author: Kevin Ushey <kevinushey@gmail.com>

Closes #263 from kevinushey/R/release-0.3.1 and squashes the following commits:

228c0f0 [Kevin Ushey] [R] bump version to 0.3.1 + NEWS
d0e0027 [Kevin Ushey] [R] re-run Rcpp::compileAttributes()"
wesm,2016-10-29 04:34:21,https://api.github.com/repos/wesm/feather/git/commits/6d93b2ffe0b1286be05ef32974f8fa8a1910a9c7,6d93b2ffe0b1286be05ef32974f8fa8a1910a9c7,[Python] Bump release to 0.3.1
guillett,2016-10-29 01:04:50,https://api.github.com/repos/wesm/feather/git/commits/034f9695aa3a0146523a4549b3700305ba9f9705,034f9695aa3a0146523a4549b3700305ba9f9705,"[Python] Datetime and Categorical handling improvement

Depends on #247.

* Allow null mask retrieval in Python
* Prevent int to float conversion when nulls are present (particularly relevant for high precision Datetimes - many significant figures).
* Prevent float array generation when nulls are present in categorical

Author: Thomas Guillet <guillet.thomas@gmail.com>
Author: Wes McKinney <wes.mckinney@twosigma.com>

Closes #253 from guillett/full_ctype_handling and squashes the following commits:

47503e4 [Wes McKinney] Flip bits in primitive_mask, remove np.invert
fe104c8 [Thomas Guillet] [Python] Improve Categorical read from file
0beca7d [Thomas Guillet] [Python] Fix timestamp loss of precision due to int64 to double conversion"
guillett,2016-10-28 17:17:21,https://api.github.com/repos/wesm/feather/git/commits/f120c392ef5afc57d38c450f0f78f3c59fc11f05,f120c392ef5afc57d38c450f0f78f3c59fc11f05,"[C++] Fix issue when overwriting feather files

Fixes #249.

* Added R and Python tests and
* Added Truncate flag in the open call.

It may also impact #232 (as per the latest comment there).

Author: Thomas Guillet <guillet.thomas@gmail.com>

Closes #252 from guillett/overwrite_bug and squashes the following commits:

06ff3f3 [Thomas Guillet] [C++] Fix issue when overwriting feather files"
guillett,2016-10-28 16:47:35,https://api.github.com/repos/wesm/feather/git/commits/4025862769860a6cfdcddc437b5f2ff800e2a6a0,4025862769860a6cfdcddc437b5f2ff800e2a6a0,"[Python] Fix bug with missing value for Datetime

Deals with #230 and depends on #242.

* Writing missing values was fixed as in #242 updating the mask before writing to disk.
* Reading is still bogus but largely mitigated with that PR. Integer array with missing are imprecisely read as they are converted to floating point numbers. They used to be converted to 32-bit floating point number before been converted to 64-bit float. That costly intermediate conversion is removed in that PR.

I have a test that fails because of the 64-bit float conversion. This test is not part of the PR, just here for reference (extracted from test_reader.py).

```python
    def test_out_of_float64_timestamp_with_nulls(self):
        df = pd.DataFrame({'test': pd.DatetimeIndex([1451606400000000001,None,14516064000030405])})
        df['with_tz'] = df.test.dt.tz_localize('utc')

        self._check_pandas_roundtrip(df, null_counts=[1,1])
```

Author: Thomas Guillet <guillet.thomas@gmail.com>

Closes #247 from guillett/missing_dt and squashes the following commits:

c62f11d [Thomas Guillet] [Python] Fix bug with missing value for Datetime"
jreback,2016-10-28 16:24:40,https://api.github.com/repos/wesm/feather/git/commits/262b3792b1a4f6040c13acf609274faa3a0c296a,262b3792b1a4f6040c13acf609274faa3a0c296a,"ERR: [Python] infer_dtypes for better error messages on write_dataframe

ERR: nicer error message on passing duplicate columns, xref #53
ERR: nice error message on serializing python objects, closes #240

should be after #239

xref https://github.com/pydata/pandas/pull/14383

Author: Jeff Reback <jeff@reback.net>

Closes #244 from jreback/infer_dtype and squashes the following commits:

091ee60 [Jeff Reback] fix pandas < 0.19.0 compat
6ef3a47 [Jeff Reback] fixed up mixed with embedded nulls tests
560b9e6 [Jeff Reback] ERR: nicer error message on passing duplicate columns, xref #53"
evolvedmicrobe,2016-10-28 16:19:33,https://api.github.com/repos/wesm/feather/git/commits/f6184d58b353ce1cb8f15fbbe5d5d0c236507c89,f6184d58b353ce1cb8f15fbbe5d5d0c236507c89,"[R] Workaround for Error Messages

Under certain conditions, Rscript gives a warning message of:

    WARNING: ignoring environment value of R_HOME

When there seems to be a valid but unusual setup of R_HOME.  As a
result, the command to determine the endianess of the system returns

    WARNING: ignoring environment value of R_HOME little

instead of just “little”. causing this script to think it is big
endian when it isn’t.  This pull changes the configure script to
remove this warning message before checking the endianness.

Author: Nigel Delaney <spamavoid@outlook.com>

Closes #237 from evolvedmicrobe/warningfix and squashes the following commits:

bfb870d [Nigel Delaney] Workaround for Error Messages"
jreback,2016-10-28 16:11:27,https://api.github.com/repos/wesm/feather/git/commits/93f1a0530f428194ba6b61016c0e6cf25dae3c98,93f1a0530f428194ba6b61016c0e6cf25dae3c98,"[Python] add __version__ attribute to feather namespace

closes #241

Author: Jeff Reback <jeff@reback.net>

Closes #243 from jreback/version and squashes the following commits:

862fe8d [Jeff Reback] add __version__ attribute to feather namespace"
kevinushey,2016-10-28 16:09:09,https://api.github.com/repos/wesm/feather/git/commits/5189adcf391e05c860fa763f04ea408f5f28436f,5189adcf391e05c860fa763f04ea408f5f28436f,"[C++] fixes for gcc-4.4

This PR resolves some compilation errors with `gcc-4.4`.

We're hoping to take this patch and re-submit to CRAN so that R users on RHEL5 can install `feather` more easily -- @wesm, would that be alright?

Author: Kevin Ushey <kevinushey@gmail.com>

Closes #254 from kevinushey/bugfix/gcc-4.4-compilation and squashes the following commits:

f8e5ff0 [Kevin Ushey] [C++] tweaks for gcc-4.4"
kevinushey,2016-10-28 16:07:52,https://api.github.com/repos/wesm/feather/git/commits/d7d944bfbf464e62d89788c4ac889a2321c9a482,d7d944bfbf464e62d89788c4ac889a2321c9a482,"[CI] attempt to build R with gcc-4.4

This PR tweaks the Travis build script, to attempt to build the R bits with `gcc-4.4`.

Note that I expect the R run to fail with this PR (https://github.com/wesm/feather/pull/254 provides the associated necessary fixes)

Author: Kevin Ushey <kevinushey@gmail.com>

Closes #255 from kevinushey/feature/r-travis-gcc-4.4 and squashes the following commits:

6b026d1 [Kevin Ushey] [CI] attempt to build R with gcc-4.4"
cscheid,2016-10-17 02:15:53,https://api.github.com/repos/wesm/feather/git/commits/dca1a3421cb9dd4be6e75a6e14b76d2a8f9d3cc5,dca1a3421cb9dd4be6e75a6e14b76d2a8f9d3cc5,"[JS] Add support for JS

This PR partially addresses issue #17. There's plenty of missing features, but if this style of API seems OK for you, then maybe it makes sense to add support for those.

Let me know if you have concerns about documentation. There isn't a test suite, but there is a self-contained example in the test directory which, if the code works, should recreate the most boring scatterplot on the planet (I blame @hadley for including iris.feather as an example).

Author: Carlos Scheidegger <cscheid@cs.arizona.edu>

Closes #233 from cscheid/feather-js-proposal and squashes the following commits:

978668e [Carlos Scheidegger] Clean up tilde files
60a3771 [Carlos Scheidegger] Remove accidentally-commited file
93a0407 [Carlos Scheidegger] Clean up tilde files
0321a5b [Carlos Scheidegger] Add a minimal JS API and a working example"
phillc73,2016-10-17 02:14:00,https://api.github.com/repos/wesm/feather/git/commits/c8d6992a9240143e1429c0ff81eb3f08ed8805c3,c8d6992a9240143e1429c0ff81eb3f08ed8805c3,"Added Other Languages Section & link to Feather.jl

Author: Phill <phill@starkingdom.co.uk>

Closes #234 from phillc73/patch-1 and squashes the following commits:

05ce85a [Phill] Added Other Languages Section & link to Feather.jl"
guillett,2016-10-17 02:12:28,https://api.github.com/repos/wesm/feather/git/commits/bec87f0e8fd6c68efe892e9f2fa97c05097ce90f,bec87f0e8fd6c68efe892e9f2fa97c05097ce90f,"[Python] Fix bug (read and write) with missing value for Categorical

That PR fixes the incorrect handling of nan in Categorical (as described in #230).
Depends on #239.

The Python implementation do not *read* nor *write* nan properly (but manage to understand nan written to disk in Python).

Currently:
* nan in a file is replaced (in Python) by the value of the first category
* nan in a dataframe is stored as -1 in a file

In the first commit, I added a property to Column in order to get the number of nulls and use it in tests.
In the second commit, I fix the bugs on reading and writing and make tests pass.

The first commit generates tests that fail and the second one fixes the tests.
Should I invert the two commits? Have a single commit?

### Details:
Here are some snippets that highlight the underlying behavior and the origin on the bug:
```python
import numpy as np
import pandas as pd
pd.Categorical(np.array([0,-1.0,-1]),categories=['a'],fastpath=True)
```
returns
```python
[a, NaN, a]
Categories (1, object): [a]
```
when we expect:
```python
[a, NaN, NaN]
Categories (1, object): [a]
```

That is because:
```python
np.array(np.array([0,-1,np.nan]),dtype=np.int8)
```
returns
```python
array([ 0, -1,  0], dtype=int8)
```

Author: Thomas Guillet <guillet.thomas@gmail.com>

Closes #242 from guillett/missing_cat and squashes the following commits:

075df75 [Thomas Guillet] [Python] Fix bug with missing value for Categorical
bb58780 [Thomas Guillet] [Python] Add null_counts property to Column
f1166ac [Thomas Guillet] [Python] backward-compatible pandas type check
69612b4 [Thomas Guillet] [Python] Move to Pandas public API for categorical and datetime64 type check
3d07800 [Thomas Guillet] [Python] Add travis builds fixing pandas to 0.18.0
aef5838 [Thomas Guillet] [Python] Change expected values in test_strings and test_category (remove unicode prefix)"
jorahn,2016-09-01 18:51:51,https://api.github.com/repos/wesm/feather/git/commits/6b5a27c58d1e850f4eabb8c013e0976b8844eb3c,6b5a27c58d1e850f4eabb8c013e0976b8844eb3c,"[Python] fix SparseDataFrames exception

test for sparse dataframe #221

Author: Jonathan Rahn <rahn.jonathan@gmail.com>

Closes #223 from jorahn/patch-1 and squashes the following commits:

a674fb0 [Jonathan Rahn] Update api.py
32a81eb [Jonathan Rahn] Update test_reader.py
2e1bcf4 [Jonathan Rahn] Update test_reader.py
f5d7c40 [Jonathan Rahn] Update api.py
7214177 [Jonathan Rahn] Update test_reader.py"
wesm,2016-08-25 18:29:51,https://api.github.com/repos/wesm/feather/git/commits/f621ec072911645f4af777390f1510d3d8526133,f621ec072911645f4af777390f1510d3d8526133,"[Python] 0.3 release prep

Author: Wes McKinney <wesm@apache.org>

Closes #220 from wesm/python/0.3-release and squashes the following commits:

293300f [Wes McKinney] Add Python release notes"
hadley,2016-08-25 18:25:45,https://api.github.com/repos/wesm/feather/git/commits/cbe9286be5dce1c0057f0bb78929f06d676c356d,cbe9286be5dce1c0057f0bb78929f06d676c356d,"[R] Release prep

Probably worth letting this percolate for a bit so I can add other small release related stuff.

Have we decided on a version number? 0.1.0?

Author: hadley <h.wickham@gmail.com>

Closes #216 from hadley/release-prep and squashes the following commits:

fc13857 [hadley] Update CRAN comments
3434ff3 [hadley] Run revdeps
9f0b4c2 [hadley] New tweaks
8300c9f [hadley] Update docs
29b7d53 [hadley] Bump version (to match feather)
7a2b6df [hadley] Add news
bd8d9ee [hadley] Clean up readme
d38c4ec [hadley] Add test for utf-8 filenames"
wesm,2016-08-23 04:30:15,https://api.github.com/repos/wesm/feather/git/commits/002c79822a77379c5ea395c83474779863db9712,002c79822a77379c5ea395c83474779863db9712,"[C++] Add WritePadded methods and pad all memory buffers to 8 byte boundaries

This patch ensures that all the memory buffers in the file fall on aligned / padded 64-bit word boundaries, to improve cross-language compatibility per the discussion in #17.

This has the downside of making existing Feather files unreadable, but we never told anyone they were going to be portable between versions while the project is new anyway. With some effort I could add backwards compatibility -- @hadley what do you think?

Closes #213

Author: Wes McKinney <wesm@apache.org>

Closes #219 from wesm/feature/aligned-memory and squashes the following commits:

996bda3 [Wes McKinney] Add a warning message for old feather files
1c1058d [Wes McKinney] Add backwards compatibility function for pre 0.3 feather files
4b7e5be [Wes McKinney] Update iris/mtcars binary files
422ff24 [Wes McKinney] Bump Feather file version and add error message for old files
2d5aaf0 [Wes McKinney] Add WritePadded methods and pad all memory buffers to 8 byte boundaries"
kevinushey,2016-08-19 22:49:25,https://api.github.com/repos/wesm/feather/git/commits/e220ce9e4df14c38e9adf28598afcbeda2f4c6d5,e220ce9e4df14c38e9adf28598afcbeda2f4c6d5,"[R] resolve R CMD check issues

This PR resolves an `R CMD check` issue where setting `-std=c++0x` triggers a new warning in R-devel.

Note that, for users of R with older gccs, they will likely need to manually set their own CXX1X and CXX1XSTD variables in a `~/.R/Makevars` file, e.g. I have:

```
CXX1X=g++-4.4
CXX1XSTD=-std=c++0x
```

If we hear from RHEL users with older gccs, we should just instruct them to do this.

Author: Kevin Ushey <kevinushey@gmail.com>

Closes #217 from kevinushey/bugfix/cxx11-r-cmd-check and squashes the following commits:

35478e7 [Kevin Ushey] [R] resolve R CMD check issues"
roman-kh,2016-08-19 22:47:26,https://api.github.com/repos/wesm/feather/git/commits/c096f52f81d70435475173184146da91db609555,c096f52f81d70435475173184146da91db609555,"[R/Python] Metadata handling tweaks, implement `columns` filter argument in Python

Both the Python and R code were using `TableReader::GetColumn` to access column metadata which causes data to be read from the file. This is OK when we are using memory maps but will cause performance problems should we switch to some other file-like object. I added a `GetColumnMetadata` API and refactored both Python and R codebases to use this

Closes #208

Author: roman-kh <rhudor@gmail.com>
Author: Wes McKinney <wesm@apache.org>

Closes #218 from wesm/feature/python-read-columns and squashes the following commits:

8deeaf8 [Wes McKinney] Expose column metadata in public API to avoid reading columns multiple times. Fix up Python and R code
b5f2b68 [roman-kh] [Python] Add support of columns parameter in read_dataframe"
wesm,2016-08-18 23:28:54,https://api.github.com/repos/wesm/feather/git/commits/05d983bc4ed3ef2bbd801a7075fabdaa7a6157bb,05d983bc4ed3ef2bbd801a7075fabdaa7a6157bb,"[C++/Python] Windows unicode filenames

This was a bit of a doozy. I know much more about `utf-16le` encoding in Windows than I ever wanted to know.

Fixes #209

Author: Wes McKinney <wesm@apache.org>

Closes #214 from wesm/windows-unicode-filenames and squashes the following commits:

4e4b916 [Wes McKinney] cpplint
c23ecd1 [Wes McKinney] Fix errors on posix
71fae83 [Wes McKinney] disable io-tests that involve utf16 issues on msvc
7ea64d4 [Wes McKinney] Convert utf-16le filenames back to utf8 for console errors
3e2fb3c [Wes McKinney] Get _wsopen_s working, with some hackarounds for wchar_t null terminator
a6d3ba4 [Wes McKinney] Add utf-16le hack for Windows, needs to be verified"
hadley,2016-08-16 14:53:23,https://api.github.com/repos/wesm/feather/git/commits/9b32b0a406af7f8b717dbc736f5dad94fb9d86cf,9b32b0a406af7f8b717dbc736f5dad94fb9d86cf,"[R] Use better class for times in R (hms)

Fixes #119. Closes #212"
hadley,2016-08-17 02:28:09,https://api.github.com/repos/wesm/feather/git/commits/eb797f002160e107fb4e5b0e4be6229be87ef32d,eb797f002160e107fb4e5b0e4be6229be87ef32d,"[R] Check for NA before decrementing

This fixes the UBSAN error on write

Author: hadley <h.wickham@gmail.com>

Closes #211 from hadley/na-factor-write and squashes the following commits:

0dceb7e [hadley] Check for NA before decrementing"
kevinushey,2016-08-16 06:00:51,https://api.github.com/repos/wesm/feather/git/commits/62c2b0cc3a88136d49900e183f90ceb5af887b0f,62c2b0cc3a88136d49900e183f90ceb5af887b0f,"[R] memset wrapper, cleaned up handling of NA values in category/factor types

Closes #207

Author: Kevin Ushey <kevinushey@gmail.com>
Author: Wes McKinney <wesm@apache.org>

Closes #210 from wesm/memset-factor-codes and squashes the following commits:

87e06d7 [Wes McKinney] More precise R logic for handling factor codes with NA values
b1e59ea [Kevin Ushey] [R] avoid issues with 'Inf' factor codes
3343b48 [Kevin Ushey] [R] avoid transforming NA integer values
54576a8 [Kevin Ushey] [C++] use wrapper over 'memset' that checks for null ptr"
kevinushey,2016-08-10 00:22:35,https://api.github.com/repos/wesm/feather/git/commits/8d86ae9b84504520b167afba5f4368dcf63acdf2,8d86ae9b84504520b167afba5f4368dcf63acdf2,"[C++] Help feather + R work with older gccs

This PR tries to add a minimal set of compatibility macros + changes to help feather build with gcc 4.4. This would help ensure `feather` could work / build on e.g. RHEL 6, which is fairly ubiquitous in the enterprise world.

Author: Kevin Ushey <kevinushey@gmail.com>

Closes #205 from kevinushey/feature/gcc-44-compatibility and squashes the following commits:

fc05b4c [Kevin Ushey] [C++] avoid need to patch 'flatbuffers'
a9783ab [Kevin Ushey] [C++] avoid cpplint false positive
4392c26 [Kevin Ushey] [C++] remove unused class member
0ce403a [Kevin Ushey] [C++] compatibility layer for older gcc
332eafc [Kevin Ushey] [R] use '-std=c++0x' to permit older gcc versions"
hadley,2016-08-10 00:02:52,https://api.github.com/repos/wesm/feather/git/commits/136518a0a8298e898d763f8a55bff58e8fe30e5d,136518a0a8298e898d763f8a55bff58e8fe30e5d,"[R] Add missing protect statements

This should alleviate some of the gc issues - I'm not 100% I got them all though

#150

Author: hadley <h.wickham@gmail.com>

Closes #204 from hadley/missing-protect and squashes the following commits:

d3e847d [hadley] Add missing protect statements"
wesm,2016-08-02 23:54:15,https://api.github.com/repos/wesm/feather/git/commits/8ad3453f22f6dae0f67afcd1c796c12a535143b6,8ad3453f22f6dae0f67afcd1c796c12a535143b6,"[C++] Add Win32 / POSIX compatibility layer for consistent handling of files over 2 GB

To properly do this, I had to make usages of `cstdio` ""private"" and push down the file interactions into a private implementation.

Per #155
Per #120

I've tested locally that this fixes the observed Windows failure on files > 2 GB. I will ask others to verify before I close the issues.

Author: Wes McKinney <wesm@apache.org>

Closes #187 from wesm/large-file-32-bit-issue and squashes the following commits:

309c0ce [Wes McKinney] Add missing include
0fddf40 [Wes McKinney] Refactor file handling to be cross-platform compatible on large files. Return error message when trying to read a large file on Windows 32-bit."
jeroen,2016-08-01 19:29:01,https://api.github.com/repos/wesm/feather/git/commits/2f8c04ba21f08d9c9ae3f7411baa6a6f3a43119c,2f8c04ba21f08d9c9ae3f7411baa6a6f3a43119c,"[R] Fix windows development build

The `configure.win` script copies the c++ files into the R package because Windows does not understand the symlinks. This makes it possible to install the source package on windows straight from git.

Note that this is not needed for released versions of feather because `R CMD build` already replaces symlinks with actual content in the source package. Hence `configure.win` in `.Rbuildignore`.

Author: Jeroen Ooms <jeroenooms@gmail.com>

Closes #201 from jeroenooms/windows and squashes the following commits:

30e7497 [Jeroen Ooms] Fix windows development build"
hadley,2016-07-26 22:26:08,https://api.github.com/repos/wesm/feather/git/commits/c156483ba4a738ee69d1d135efe7edc32dc7bce8,c156483ba4a738ee69d1d135efe7edc32dc7bce8,"[R] Ensure column names flagged as UTF-8

Fixes #198

Author: hadley <h.wickham@gmail.com>

Closes #199 from hadley/utf8-names and squashes the following commits:

89d9346 [hadley] Ensure column names flagged as UTF-8"
wesm,2016-06-12 04:24:48,https://api.github.com/repos/wesm/feather/git/commits/84f9f914c3f7287736003f86c7244b6b21c28dc4,84f9f914c3f7287736003f86c7244b6b21c28dc4,[Python] Add conda-forge install note to README. Close #134
wesm,2016-06-12 04:22:19,https://api.github.com/repos/wesm/feather/git/commits/b79304954b550216797cfb20f26747fc41421d52,b79304954b550216797cfb20f26747fc41421d52,"[C++] Do not call TableWriter::Init multiple times

Close #182

Author: Wes McKinney <wesm@apache.org>

Closes #186 from wesm/redundant-magic-bytes and squashes the following commits:

ab69b19 [Wes McKinney] Set initialized_stream_ = true after first Init() call"
wesm,2016-06-09 20:31:47,https://api.github.com/repos/wesm/feather/git/commits/d37f21da3624abf627728632c9749fffc1b42410,d37f21da3624abf627728632c9749fffc1b42410,"[Doc] Add note to front README about format stability

Close #183

Author: Wes McKinney <wesm@apache.org>

Closes #184 from wesm/doc/readme-stability and squashes the following commits:

3e8d68d [Wes McKinney] Add note to README about format stability"
chris-b1,2016-06-03 18:17:58,https://api.github.com/repos/wesm/feather/git/commits/91817bc148f4c71a4f5140c67f7ae795fd2d751c,91817bc148f4c71a4f5140c67f7ae795fd2d751c,"[C++] export symbols for Windows shared library

The main change here is adding `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS` which exports everything on Windows without adding a bunch of ``__declspec(dllexport)`` to the api, described further [here](https://blog.kitware.com/create-dlls-on-windows-without-declspec-using-new-cmake-export-all-feature/)

The other tweaks were basically trial and error to get it to find the dependencies and build/test.  I'm not very experienced with cmake, so if something I've changed looks bad/strange, please let me know!

Author: Chris <cbartak@gmail.com>

Closes #165 from chris-b1/windows-dll and squashes the following commits:

c79bff3 [Chris] more appveyor wip
b92f695 [Chris] wip - appveyor
5774176 [Chris] wip - appveyor
2ca6196 [Chris] Windows dependencies and instructions
f9d8ba4 [Chris] correct apple logic
a239fb1 [Chris] [C++] Windows shared library"
aadler,2016-06-01 01:49:45,https://api.github.com/repos/wesm/feather/git/commits/bbfebbd5bf4b9340ba6ff7af93b8d8c598b6c95e,bbfebbd5bf4b9340ba6ff7af93b8d8c598b6c95e,"[R] Update README.md

Update for feather being on CRAN and having binaries. Addresses https://github.com/wesm/feather/issues/153.

Author: Avraham Adler <aadler@users.noreply.github.com>

Closes #172 from aadler/patch-1 and squashes the following commits:

579cebb [Avraham Adler] Update README.md"
jeroen,2016-05-27 19:01:14,https://api.github.com/repos/wesm/feather/git/commits/b4cc44de55aa0b72d7e216ff7f777a8155495bad,b4cc44de55aa0b72d7e216ff7f777a8155495bad,"[R] Declare and test for little-endian platform

BDR wants us to test for a little endian platform in configure. However currently we are already using the configure script as a hack to copy some source files into the R dir.

Therefore we now use symlinks instead, so that we can include an actual configure script.

Author: Jeroen Ooms <jeroenooms@gmail.com>

Closes #168 from jeroenooms/configure and squashes the following commits:

d0420c3 [Jeroen Ooms] Remove travis hack
9dbc9be [Jeroen Ooms] Declare and test for little-endian platform
ef63375 [Jeroen Ooms] replace configure script with symlinks because we need an actual configure script"
hadley,2016-05-24 21:41:58,https://api.github.com/repos/wesm/feather/git/commits/2045f3bb29d53673f056be21c1d94d76a78e841a,2045f3bb29d53673f056be21c1d94d76a78e841a,"[R] Correctly restore missing values for TIMESTAMP

Fixes #157

Author: hadley <h.wickham@gmail.com>

Closes #161 from hadley/r-na-dates and squashes the following commits:

efa868e [hadley] Correct restore missing values for TIMESTAMP"
hadley,2016-05-18 17:17:41,https://api.github.com/repos/wesm/feather/git/commits/36c328ec8303c7ab64afa8781c0b00bae8e5f462,36c328ec8303c7ab64afa8781c0b00bae8e5f462,"[R] Version bump

Now that the package is on CRAN.

Author: hadley <h.wickham@gmail.com>

Closes #152 from hadley/version-bump and squashes the following commits:

ee98f4a [hadley] Bump version and add NEWS
4d92c81 [hadley] Update authors post CRAN-feedback"
hadley,2016-05-16 18:13:57,https://api.github.com/repos/wesm/feather/git/commits/d10e22c3f2b72cd400a11dc5e4109c380684eac3,d10e22c3f2b72cd400a11dc5e4109c380684eac3,"[R] Fixes for R package on windows

Unfortunately overlaps with #140 since it seems like we were working in parallel.

Author: hadley <h.wickham@gmail.com>
Author: Jeroen Ooms <jeroenooms@gmail.com>

Closes #142 from hadley/r-windows and squashes the following commits:

4873a37 [hadley] Add comments for CRAN
af2b9be [hadley] Bump version to prepare for CRAN release
86d6e77 [hadley] Use title case for title
b318124 [Jeroen Ooms] Fix compiler warnings on Windows"
jjhelmus,2016-05-16 04:27:38,https://api.github.com/repos/wesm/feather/git/commits/7d917a93f0e5c489ebde0ced811b543fb208311c,7d917a93f0e5c489ebde0ced811b543fb208311c,"[Doc] Install with earlier OS X deployment targets

Author: Jonathan Helmus <jjhelmus@gmail.com>

Closes #147 from jjhelmus/macosx_install_docs and squashes the following commits:

d26036e [Jonathan Helmus] [Doc] Install with earlier OS X deployment targets"
chris-b1,2016-05-15 23:27:24,https://api.github.com/repos/wesm/feather/git/commits/e27a58e3fbab9b32aec4a1ed4b5779cd8779dbeb,e27a58e3fbab9b32aec4a1ed4b5779cd8779dbeb,"[Python] Windows support

Closes #111

Python 3.5 defines a `timezone` symbol; which was causing all the crazy compilation errors.
https://bugs.python.org/issue24643

I changed the test due to https://github.com/numpy/numpy/issues/4085 - numpy won't generate a random int bigger than the platform int.

Author: Chris <cbartak@gmail.com>

Closes #146 from chris-b1/master and squashes the following commits:

371d68a [Chris] [Python] Windows support"
jeroen,2016-05-11 20:22:44,https://api.github.com/repos/wesm/feather/git/commits/3aae4937510cbe3027f5028df9654705ed8d9796,3aae4937510cbe3027f5028df9654705ed8d9796,"Fixes cast from double to int64 to prevent loss of precision.

With this fix all unit tests pass on windows. I think it might also fix the problem on Solaris.

The problem was that the implicit cast from double to int64 results in rounding error on 32 bit platforms.

Author: Jeroen Ooms <jeroenooms@gmail.com>

Closes #141 from jeroenooms/fix_32bit and squashes the following commits:

5cb392c [Jeroen Ooms] Fixes cast from double to int64 to prevent loss of precision."
hadley,2016-05-07 15:44:24,https://api.github.com/repos/wesm/feather/git/commits/2f1853a81504e4275c04375ab9d21d5df6e4f4a8,2f1853a81504e4275c04375ab9d21d5df6e4f4a8,R CMD check spellings
jeroen,2016-05-05 04:26:25,https://api.github.com/repos/wesm/feather/git/commits/35df40dccf31da38c6710e975e84a83dd5e20b3a,35df40dccf31da38c6710e975e84a83dd5e20b3a,"Remove depenency on GNU make

Needed on e.g. Solaris.

Author: Jeroen Ooms <jeroenooms@gmail.com>

Closes #135 from jeroenooms/master and squashes the following commits:

3299ab4 [Jeroen Ooms] Remove depenency on GNU make"
wesm,2016-04-30 20:56:47,https://api.github.com/repos/wesm/feather/git/commits/8ee26a764896978b0bbf9ff956258f357749e0aa,8ee26a764896978b0bbf9ff956258f357749e0aa,[Python] Set release to 0.2.0
wesm,2016-04-30 20:35:33,https://api.github.com/repos/wesm/feather/git/commits/4ef85fb13c0577923dd790a5f4c56d8bf49ad099,4ef85fb13c0577923dd790a5f4c56d8bf49ad099,"[Doc] Fix typo in format doc, make variable-length format more clear. Close #55"
wesm,2016-04-30 20:30:00,https://api.github.com/repos/wesm/feather/git/commits/5f9bbeac23d4ca71f869a3964b50d40cb0ad4e8a,5f9bbeac23d4ca71f869a3964b50d40cb0ad4e8a,[Python] Improve documentation for MACOSX_DEPLOYMENT_TARGET
wesm,2016-04-30 20:16:18,https://api.github.com/repos/wesm/feather/git/commits/4d966bba2a603bc286823ef837030373beb862b4,4d966bba2a603bc286823ef837030373beb862b4,"[Python] Add workaround for NPY_LONGLONG == NPY_INT64 on Apple i386

Close #129. See discussion there.

On Apple's universal / i386 built-in Python, `NPY_LONGLONG` and `NPY_INT64` are not distinct types, however both enum values can occur in the wild. This prevents a compilation error on these platforms.

Author: Wes McKinney <wesm@apache.org>

Closes #133 from wesm/bug/longlong-i386 and squashes the following commits:

3671115 [Wes McKinney] Add back LONGLONG cases for x86_64
f294c3b [Wes McKinney] Add workaround for NPY_LONGLONG == NPY_INT64 on Apple i386"
tdsmith,2016-04-28 21:19:39,https://api.github.com/repos/wesm/feather/git/commits/ad390a4be8d9759356344e7678373e138b6450af,ad390a4be8d9759356344e7678373e138b6450af,"[Python] Add PyPI flair

Hint where the package can be found on PyPI since it doesn't match the name of the Github repo.

Author: tim smith <github@tim-smith.us>

Closes #131 from tdsmith/patch-1 and squashes the following commits:

99473d3 [tim smith] Add PyPI flair"
wesm,2016-04-28 21:01:52,https://api.github.com/repos/wesm/feather/git/commits/4db649a2b568611035d04dda252244122472ce6f,4db649a2b568611035d04dda252244122472ce6f,[Dev] Add codecov.yml
lindbrook,2016-04-22 20:07:07,https://api.github.com/repos/wesm/feather/git/commits/010e8bf5c84242dc94c95dfa3e62f8e4e56a06b5,010e8bf5c84242dc94c95dfa3e62f8e4e56a06b5,"[R] update R/README.md

Does the ""it"" in ""which is also when we'll submit it to CRAN"" refer to Feather or the toolchain?

Author: lindbrook <lindbrook@gmail.com>

Closes #122 from lindbrook/patch-1 and squashes the following commits:

4b9300f [lindbrook] Update README.md
96f7231 [lindbrook] [R] update R/README.md"
lindbrook,2016-04-11 18:57:48,https://api.github.com/repos/wesm/feather/git/commits/364e6b4e2ca1daea13a43bc248a2d58a054ce652,364e6b4e2ca1daea13a43bc248a2d58a054ce652,"[Doc] Update README.md

Author: lindbrook <lindbrook@gmail.com>

Closes #116 from lindbrook/patch-1 and squashes the following commits:

c5d779b [lindbrook] Update README.md"
wesm,2016-04-11 18:55:20,https://api.github.com/repos/wesm/feather/git/commits/06e69b0af92505e94ac785daf6c7f7d09236580c,06e69b0af92505e94ac785daf6c7f7d09236580c,"[R] Set factor codes to 0-based when writing to Feather file

Closes #108

I had to update some Feather files in `R/inst/feather` because this changed the on-disk files. I still need to add a version number to the file metadata.

Author: Wes McKinney <wesm@apache.org>

Closes #113 from wesm/bug/r-factor-off-by-one and squashes the following commits:

030ff6f [Wes McKinney] Add a version field to the file metadata, plus APIs. Add to R feather_metadata
982b412 [Wes McKinney] Add offset-by-one logic to R factor read/write path. Integration test. preserve column order in Python reads"
dfalbel,2016-04-09 14:44:30,https://api.github.com/repos/wesm/feather/git/commits/4441832af735fc9a9e51dab1ffe215a6514e94c8,4441832af735fc9a9e51dab1ffe215a6514e94c8,"[R] remove feather(path)

feather path was beeing called 2 times apparently with no need

Author: Daniel Falbel <dfalbel@gmail.com>

Closes #109 from dfalbel/patch-1 and squashes the following commits:

2fe9067 [Daniel Falbel] remove feather(path)"
jimhester,2016-04-07 19:13:22,https://api.github.com/repos/wesm/feather/git/commits/9b5d6a9c8dc28cb2b54c697a25065cdcbeda997c,9b5d6a9c8dc28cb2b54c697a25065cdcbeda997c,"[Dev] Specify the travis build directory as the git root

Because we build outside the git tree the upload script was not able to
find the coverage files properly.

This is I believe why we were not seeing C++ coverage on codecov properly.

Author: Jim Hester <james.f.hester@gmail.com>

Closes #104 from jimhester/code_coverage and squashes the following commits:

179192d [Jim Hester] Put build directory in project directory rather than $HOME"
wesm,2016-04-07 19:11:41,https://api.github.com/repos/wesm/feather/git/commits/d41078ce20eaab373e8f0397c17d252594af622d,d41078ce20eaab373e8f0397c17d252594af622d,"[Python] Add type mapping for NPY_LONGLONG

Closes #79

Author: Wes McKinney <wesm@apache.org>

Closes #107 from wesm/bug/numpy-long-long and squashes the following commits:

109ab60 [Wes McKinney] Add type mapping for NPY_LONGLONG"
jimhester,2016-04-05 17:11:11,https://api.github.com/repos/wesm/feather/git/commits/f829c699052b45140d563d7a95f86a5300d18813,f829c699052b45140d563d7a95f86a5300d18813,"[R]: Install package dependencies as binaries

Author: Jim Hester <james.f.hester@gmail.com>

Closes #102 from jimhester/r_binaries and squashes the following commits:

c5056d7 [Jim Hester] Install package dependencies as binaries"
jimhester,2016-04-05 17:09:42,https://api.github.com/repos/wesm/feather/git/commits/d0f997aa8c458b891c23376851f6e1fa5c1034d3,d0f997aa8c458b891c23376851f6e1fa5c1034d3,"[Dev] Adding code coverage for C++ and python code

The CPP code coverage requires you to compile without optimizations to ensure accurate reporting. If this is an issue we could have a separate build for coverage.

Using the bash uploader in this fashion is the recommended approach from codecov (https://github.com/codecov/example-c). If you are not comfortable doing that we could add the script from https://github.com/codecov/codecov-bash to `$FEATHER_CPP/ci` directly and simply source that.

Author: Jim Hester <james.f.hester@gmail.com>

Closes #101 from jimhester/code_coverage and squashes the following commits:

5afae3e [Jim Hester] Add some spacing to travis log
e454ee9 [Jim Hester] Prepend previous CMAKE_CXX_FLAGS rather than overwriting
92058b6 [Jim Hester] Adding code coverage for CPP and python code
3426b96 [Jim Hester] Adding code coverage for CPP and python code"
dmbates,2016-04-04 20:32:12,https://api.github.com/repos/wesm/feather/git/commits/3e83dc0fb1d07556c0db3272e0be79d2653f4505,3e83dc0fb1d07556c0db3272e0be79d2653f4505,"[C++] Add C API wrapper for TableReader::num_columns

Close #98

Author: Douglas Bates <dmbates@gmail.com>
Author: Wes McKinney <wesm@apache.org>

Closes #99 from wesm/c-api-num-columns and squashes the following commits:

8e902ac [Wes McKinney] Add unit test for feather_reader_num_columns
78ff327 [Douglas Bates] Implementation of feather_reader_num_columns"
wesm,2016-04-04 19:57:55,https://api.github.com/repos/wesm/feather/git/commits/9700592b663e5b111668a17b96f2ef8b030dd051,9700592b663e5b111668a17b96f2ef8b030dd051,"[C++] Implement a C99 API for libfeather

Spurred by Julia and others needing a non-C++ API for libfeather, I drafted something simple that should be a good start. @dmbates can you take a look and let me know if this will work for you all? See `feather/feather-c.h`

I believe C users will need to perform the link step with g++ for this to work.

```shell
$ nm -g debug/libfeather.so | grep feather_
0000000000050565 T feather_column_free
00000000000508e2 T feather_reader_close
00000000000508f1 T feather_reader_free
0000000000050731 T feather_reader_get_column
0000000000050717 T feather_reader_num_rows
000000000005059b T feather_reader_open_file
000000000005030c T feather_writer_append_plain
00000000000504d4 T feather_writer_close
0000000000050533 T feather_writer_free
000000000005016b T feather_writer_open_file
00000000000502e7 T feather_writer_set_num_rows
```

Author: Wes McKinney <wesm@apache.org>

Closes #96 from wesm/libfeather-c-api and squashes the following commits:

25027f0 [Wes McKinney] Fix R C++ bugs caused by change from shared_ptr to unique_ptr
fce299a [Wes McKinney] Fix cpplint issues
b93863d [Wes McKinney] Compare array contents
65747de [Wes McKinney] Draft end-to-end C API. Not fully tested yet
e0fb573 [Wes McKinney] Start drafting C API"
wesm,2016-04-03 22:24:10,https://api.github.com/repos/wesm/feather/git/commits/5a7769a921b3c738d10f7bd0bafda4066e277cff,5a7769a921b3c738d10f7bd0bafda4066e277cff,[Python] Bump version to 0.2.0dev
wesm,2016-04-03 22:21:57,https://api.github.com/repos/wesm/feather/git/commits/9d38b9de3c1c18e8a45e6725b75ad17f9f449b7a,9d38b9de3c1c18e8a45e6725b75ad17f9f449b7a,"[Python] Fix compilation failure on 32-bit platforms

Closes #91. 32-bit arch may needs some more specific attention at some point.

There is a separate issue, which is distutils on Apple's default Python 2.7 compiling C extensions in 32-bit mode. On my OSX 10.0 (64-bit) machine, a 2014 Macbook Pro Core i7, I see

```shell
$ arch
i386
```

Building feather with `/usr/bin/python setup.py build` invokes `gcc -arch i386` which is incorrect. I googled a bit but didn't find a conclusive explanation how to fix it, so if someone figures it out, let me know. Something something universal binaries.

Author: Wes McKinney <wesm@apache.org>

Closes #95 from wesm/bug/fix-apple-python-2.7 and squashes the following commits:

17dae74 [Wes McKinney] Prevent compilation failure with Apple Python erroniously compiling for i386 architecture"
jreback,2016-04-03 21:25:08,https://api.github.com/repos/wesm/feather/git/commits/67399d73b2fd81ef543adde6a1c588cc5ae2c0ce,67399d73b2fd81ef543adde6a1c588cc5ae2c0ce,"[Python] COMPAT: raise ImportError on pandas < 0.17.0

xref #90

Author: Jeff Reback <jeff@reback.net>

Closes #92 from jreback/import and squashes the following commits:

dbd4c0d [Jeff Reback] COMPAT: raise ImportError on pandas < 0.17.0"
andrioni,2016-04-03 21:23:57,https://api.github.com/repos/wesm/feather/git/commits/7860e0381492284be7af80a0f84c76240f8851fa,7860e0381492284be7af80a0f84c76240f8851fa,"[Python] Add automated Python builds on travis

There's a bit of repetition on the .travis.yml due to not being able to just use a list of Python versions directly, unfortunately. Related to travis-ci/travis-ci#1519, I believe.

Most projects apparently solve this this by setting environment variables describing each build and some scripts to automatically install different compilers/virtualenvs as needed, but I decided to go for the simpler approach for now. If anyone wants to see the alternatives I've tried, [here's a link to the build history is travis](https://travis-ci.org/andrioni/feather/builds).

Author: Alessandro Andrioni <alessandroandrioni@gmail.com>

Closes #93 from andrioni/travis-python and squashes the following commits:

caa2bb7 [Alessandro Andrioni] Add automated Python builds on travis"
andrioni,2016-04-02 21:20:30,https://api.github.com/repos/wesm/feather/git/commits/7bd4094e528865ea62882ca9f652dd34c0d7d85e,7bd4094e528865ea62882ca9f652dd34c0d7d85e,"[Doc] Explain Python static build procedure for packing and install from source

Closes #66

Author: Alessandro Andrioni <alessandro.andrioni@nubank.com.br>
Author: Wes McKinney <wesm@apache.org>

Closes #89 from wesm/doc/python-static-build and squashes the following commits:

7f4aba0 [Wes McKinney] Add more notes about the static build
6c410e9 [Alessandro Andrioni] Document the need for the symlink
13a2b6b [Alessandro Andrioni] Remove unneeded declaration"
wesm,2016-04-01 23:40:19,https://api.github.com/repos/wesm/feather/git/commits/890a1e377dcb266d6e321305896871ed8d4d4211,890a1e377dcb266d6e321305896871ed8d4d4211,"[C++] Fix BufferBuilder edge case where all inputs were length-0

Fixes #68

Author: Wes McKinney <wesm@apache.org>

Closes #86 from wesm/bug/empty-strings and squashes the following commits:

94fe016 [Wes McKinney] Fix BufferBuilder edge case where all inputs were length-0"
hadley,2016-04-01 20:21:05,https://api.github.com/repos/wesm/feather/git/commits/0fc55f32b260eac325cdc5b64b7ef3ab410cdf50,0fc55f32b260eac325cdc5b64b7ef3ab410cdf50,"Check for nullptr when opening file

Fixes #80

Author: hadley <h.wickham@gmail.com>
Author: Wes McKinney <wesm@apache.org>

Closes #85 from hadley/fopen-check and squashes the following commits:

fcbbe7a [Wes McKinney] Add unit test
8a00802 [hadley] Check for nullptr."
krlmlr,2016-04-01 20:16:52,https://api.github.com/repos/wesm/feather/git/commits/8b26403a0ca07611ea092e302ffad91e78df1349,8b26403a0ca07611ea092e302ffad91e78df1349,"[R] Avoid cp -u

- R -> C++ uses `rsync`, failure doesn't matter

- C++ -> R doesn't use `-u`"
wesm,2016-03-30 20:56:26,https://api.github.com/repos/wesm/feather/git/commits/ecf4f87a51688103b256b571146166daf02131ac,ecf4f87a51688103b256b571146166daf02131ac,"[C++] Fix cpplint issues causing Travis CI build failures

Author: Wes McKinney <wesm@apache.org>

Closes #70 from wesm/bug/fix-cpplint-build-failure and squashes the following commits:

4082ad6 [Wes McKinney] Exclude flatbuffers.h from cpplint checks, fix other errors"
andrioni,2016-03-30 15:11:43,https://api.github.com/repos/wesm/feather/git/commits/660c25f915adb4407f841d8a658985af43d1caa2,660c25f915adb4407f841d8a658985af43d1caa2,"[C++] Remove old reference to `update_fbs.sh`

Since `7dad4e93` the code generation is done automatically as a part of the build.

Author: Alessandro Andrioni <alessandro.andrioni@nubank.com.br>

Closes #57 from andrioni/remove-unneeded-reference and squashes the following commits:

16022b4 [Alessandro Andrioni] Remove old reference to `update_fbs.sh`"
wesm,2016-03-29 22:52:20,https://api.github.com/repos/wesm/feather/git/commits/a58e3bef81c810091a081eb899961a7475b62dfc,a58e3bef81c810091a081eb899961a7475b62dfc,[Dev]: Merge tool: repository is no longer private
xhochy,2016-03-29 22:51:40,https://api.github.com/repos/wesm/feather/git/commits/1cf10e20ce6d0c2592bbe8025932afe1778b4e29,1cf10e20ce6d0c2592bbe8025932afe1778b4e29,"[C++] Use PATH instead of DIRECTORY to support older CMake 2.8

Author: Uwe L. Korn <uwelk@xhochy.com>

Closes #54 from xhochy/cmake-2.8-support and squashes the following commits:

a1008b5 [Uwe L. Korn] Use PATH instead of DIRECTORY to support older CMake 2.8"
seankross,2016-03-29 22:50:36,https://api.github.com/repos/wesm/feather/git/commits/ab7d88b9f626ff61afca0ce5885c8766f8544ce8,ab7d88b9f626ff61afca0ce5885c8766f8544ce8,"[R] Fix typo in R/README.md

Author: Sean Kross <smk240@gmail.com>

Closes #56 from seankross/master and squashes the following commits:

c6e7473 [Sean Kross] Update README.md"
wesm,2016-03-29 20:34:33,https://api.github.com/repos/wesm/feather/git/commits/51de4bb0290633054a44b76e49a7e951c035d0af,51de4bb0290633054a44b76e49a7e951c035d0af,[Doc]: Markdown typo
wesm,2016-03-29 19:57:02,https://api.github.com/repos/wesm/feather/git/commits/879aed0043a8ca958ca6f9c5904db5cdc671b9d2,879aed0043a8ca958ca6f9c5904db5cdc671b9d2,"[Python]: Add pandas to requirements.txt, update README"
wesm,2016-03-29 17:09:16,https://api.github.com/repos/wesm/feather/git/commits/1c09667f131ebe8667b64884fcc3dbf366af7a99,1c09667f131ebe8667b64884fcc3dbf366af7a99,"[Python] Static build configuration and PyPI packaging setup

Author: Wes McKinney <wesm@apache.org>

Closes #52 from wesm/python-static-build and squashes the following commits:

1830582 [Wes McKinney] Add URL to PyPI metadata
d950053 [Wes McKinney] Configure Python bindings for static build and PyPI"
hadley,2016-03-29 16:30:25,https://api.github.com/repos/wesm/feather/git/commits/9216376974f9a3326d4966ab6fa14330cacfdc68,9216376974f9a3326d4966ab6fa14330cacfdc68,"[Doc] Start on more informative readme

Author: hadley <h.wickham@gmail.com>
Author: Wes McKinney <wesm@apache.org>

Closes #48 from hadley/readme and squashes the following commits:

b4707f5 [Wes McKinney] README tweaks
2e246a5 [hadley] More links
96e1807 [hadley] Tweak title. Add missing parens
eb9129b [hadley] Readmes can't use `@` user names?
f02da6b [hadley] Link to language bindings. Fix typo
9da89ab [hadley] More readme tweaking
c415ebc [hadley] Move details in main readme
beb3015 [Wes McKinney] Explain relationship between feather and arrow
759ab22 [hadley] Start on more informative readme"
wesm,2016-03-29 16:27:39,https://api.github.com/repos/wesm/feather/git/commits/9c15bcc44da195b809fc57456f3d23b36446a161,9c15bcc44da195b809fc57456f3d23b36446a161,"[Python/R] Flip interpretation of null bitmap

Now matches the Arrow spec (and Postgres). My mistake initially. @hadley I'm going to merge this but let me know if any R tests fail (we'll have to get Travis CI set up for that soon)

Author: Wes McKinney <wesm@apache.org>

Closes #51 from wesm/flip-null-bits and squashes the following commits:

b316ff3 [Wes McKinney] Flip null bits so that 1 is valid and 0 is null. Add note to format docs about PostgreSQL"
wesm,2016-03-29 08:01:44,https://api.github.com/repos/wesm/feather/git/commits/c70904ba8e67662b581ab5615e334eb4345e917c,c70904ba8e67662b581ab5615e334eb4345e917c,"[Python] Implement category, timestamp times. Cast non-string column names to strings

Author: Wes McKinney <wesm@apache.org>

Closes #50 from wesm/finish-python-features and squashes the following commits:

e4001f7 [Wes McKinney] Handle non-string columns
a7caee7 [Wes McKinney] Implement timestamps, tz naive and with timezone
7567378 [Wes McKinney] Implement category types
e3c342e [Wes McKinney] Handle PyFloat objects that are not exactly numpy.nan"
hadley,2016-03-24 23:08:05,https://api.github.com/repos/wesm/feather/git/commits/5b316846afa93cb6846a092a36b2318144efed4f,5b316846afa93cb6846a092a36b2318144efed4f,"[R] Polishing R installation process

So that `install_github()` can work.

@wesm I think this will require some tweaks to the C++ configure since we're now assuming a cached `flatbuffers.h`

Author: hadley <h.wickham@gmail.com>

Closes #49 from hadley/r-polishing and squashes the following commits:

61f2850 [hadley] Include copy of flatbuffers in source.
909d78c [hadley] Check in flatbuffer generated metadata
0dee888 [hadley] Add note about windows
3907f0d [hadley] Automatically copy feather headers if available"
hadley,2016-03-24 15:46:27,https://api.github.com/repos/wesm/feather/git/commits/e1838799d5f017c872a710317fe4b266b14c941c,e1838799d5f017c872a710317fe4b266b14c941c,"Types tweaking

This makes it more obvious (at least from reading the source) how the type system works.

Author: hadley <h.wickham@gmail.com>

Closes #46 from hadley/types-tweaking and squashes the following commits:

df895a2 [hadley] Update R code with new type knowledge
bad685c [hadley] Check primitive arrays are correct type
8a75bcc [hadley] Eliminate compound types from PrimitiveType"
hadley,2016-03-24 15:18:06,https://api.github.com/repos/wesm/feather/git/commits/ad29d3d9d93ee376ab4f89edafd2ea38e1a0d49d,ad29d3d9d93ee376ab4f89edafd2ea38e1a0d49d,"[C++] Expose ordered field in CategoryColumn

I don't understand why you cache the levels as well as the metadata object, but I followed the same pattern for the `ordered` flag.

Author: hadley <h.wickham@gmail.com>

Closes #47 from hadley/category-ordered and squashes the following commits:

a9e0b79 [hadley] Expose ordered field in CategoryColumn"
hadley,2016-03-24 15:14:28,https://api.github.com/repos/wesm/feather/git/commits/f620952f8e698db3f6037356ff590ac0e19906bd,f620952f8e698db3f6037356ff590ac0e19906bd,"[R] Full reading and writing of primitives, factors

Including tests for round-tripping vectors of various sorts.

Author: hadley <h.wickham@gmail.com>

Closes #42 from hadley/r-write and squashes the following commits:

378fe54 [hadley] Implement timestamp reading/writing
913a183 [hadley] Support for ColumnType::TIME
b451614 [hadley] Read and write date types
aa2ff10 [hadley] Refactor column addition
19f98bd [hadley] More checks for factor corruption
c186f28 [hadley] Better to use return 0 instead of throw 0
221ea71 [hadley] Consistently use throw 0 where needed
7cd899a [hadley] Adjust gitgnore so examples aren't ignored
af5f132 [hadley] Consistently capture failures
240ffde [hadley] Generate null mask for doubles
ad4307d [hadley] Avoid copying strings
2278fec [hadley] Set length = 0 for missing string values
1fcc35c [hadley] Implement reading and writing of factors
d1471c0 [hadley] Better column adding API.
640cb35 [hadley] Add a litte infrastructure for examples
7b4ec8e [hadley] Add a little to readme
83d746d [hadley] Drop R version dep
3056d6f [hadley] Better metadata interface
05a4f70 [hadley] Add test for encoding conversion
0b31e4f [hadley] Unify suggested packages
1db45d9 [hadley] Document and check input to write_feather
8d88870 [hadley] Add basic round trip unit tests
b56cc81 [hadley] Expose R api
9de8e63 [hadley] Smarter makevars
0387f1b [hadley] Consistently use camelCase in C++
3378ffb [hadley] Write strings
dad8fdf [hadley] Write logical vectors
89b1f38 [hadley] Rename makeNullBuffer to makeBoolBuffer
1a211c1 [hadley] Generate nulls vector for integers
696b6aa [hadley] Write ints and doubles
ba3fc6d [hadley] WS
99b5e79 [hadley] Handle missing values
bcf3f3b [hadley] Read full set of primitive types
b844c2b [hadley] Add boolean
557fad7 [hadley] Read integer columns
5966b87 [hadley] Create template data frame
2ff3ba8 [hadley] Take advantage of auto
ba44c66 [hadley] Extract out common file open code"
wesm,2016-03-23 04:58:06,https://api.github.com/repos/wesm/feather/git/commits/fea7cbac87cc78782c5b0793c891fc6e8702d3ad,fea7cbac87cc78782c5b0793c891fc6e8702d3ad,"[C++] Implement date/time column types

Will need to come back and clean up the tests / add more comprehensive testing, but this should unblock you!

Author: Wes McKinney <wesm@apache.org>

Closes #43 from wesm/date-time-types and squashes the following commits:

3b5db8e [Wes McKinney] Add basic (with much code duplication) implementations of date/time column types"
hadley,2016-03-21 17:54:38,https://api.github.com/repos/wesm/feather/git/commits/1def06045edbb60854bd6fc6c289d3d9ff26b407,1def06045edbb60854bd6fc6c289d3d9ff26b407,"[R] Simple reading of metadata

Author: hadley <h.wickham@gmail.com>

Closes #37 from hadley/r-read and squashes the following commits:

24e115d [hadley] Read feather types with feather_metadata
81cf95d [hadley] Converters between R types and feather types
dbda231 [hadley] Read feather metadata from disk
5fff173 [hadley] Ignore install manifest"
wesm,2016-03-18 20:51:57,https://api.github.com/repos/wesm/feather/git/commits/38162c5ef1779316736ad67307755cc6a70d7115,38162c5ef1779316736ad67307755cc6a70d7115,"[Python] BUG: set the num_rows metadata field when finishing a feather file in
Python"
hadley,2016-03-18 16:36:25,https://api.github.com/repos/wesm/feather/git/commits/33564fe13291f3a034b56950f4c535feaa547190,33564fe13291f3a034b56950f4c535feaa547190,"Rbootstrap

Starting to work towards a more standard build system.

Open questions:

* How should I automate the copying of feather into this package? Ideally it'd be part of the configure/build process so that `install_github()` can work. I think that will require checking in of the generated flatbuffers header file so the user doesn't need a big dependency chain

* How can we tweak file selection in Makevars so I don't need to manually update it each time I add a new cpp file, or when the files in feather change.

cc @jjallaire

Author: hadley <h.wickham@gmail.com>

Closes #36 from hadley/rbootstrap and squashes the following commits:

d71dfd8 [hadley] Ignore feather binaries when building R package
4af9b5c [hadley] No trailing .
89a7919 [hadley] Require GNU make
d05974c [hadley] No longer need hacky onLoad
04600b7 [hadley] Slightly less hacky approach.
b8b85a5 [hadley] Use same license as libfeather"
wesm,2016-03-03 18:50:34,https://api.github.com/repos/wesm/feather/git/commits/4895d0d9b9a4d49307aa7913e9801d801b960e03,4895d0d9b9a4d49307aa7913e9801d801b960e03,libfeather does not need to link to libflatbuffers.a
hadley,2016-03-03 17:17:09,https://api.github.com/repos/wesm/feather/git/commits/2fd9d628a414eca40ef125629726d59c008de9f0,2fd9d628a414eca40ef125629726d59c008de9f0,Hack together basic prototype
hadley,2016-03-02 22:43:32,https://api.github.com/repos/wesm/feather/git/commits/9c26eab23f7c5a9fbb928b221fffa7fb803bbc74,9c26eab23f7c5a9fbb928b221fffa7fb803bbc74,Use Rcpp
hadley,2016-03-02 22:43:00,https://api.github.com/repos/wesm/feather/git/commits/9a2262fbc2040e08ce02219c8971ad1cb012092e,9a2262fbc2040e08ce02219c8971ad1cb012092e,Bootstrap R package
wesm,2016-03-02 05:35:40,https://api.github.com/repos/wesm/feather/git/commits/c5382905fc5b64dd324fbab84f47e7da9febebcb,c5382905fc5b64dd324fbab84f47e7da9febebcb,"Implement read/write path for category (factor) data

No tests yet (bad Wes), will do that a bit later today.

Author: Wes McKinney <wesm@apache.org>

Closes #35 from wesm/category-read-write and squashes the following commits:

aba43bb [Wes McKinney] Test category write-read roundtrip
2cf89bc [Wes McKinney] Read path for category, untested
bbe8b1b [Wes McKinney] Refactor AppendPlain so Category can use same primitive array write path"
wesm,2016-03-02 01:27:42,https://api.github.com/repos/wesm/feather/git/commits/7dad4e934f7677a83593c2816f1aaa6fa057f00f,7dad4e934f7677a83593c2816f1aaa6fa057f00f,"Automate flatbuffers IDL generation as part of build

Removed the unneeded `update_fbs.sh` script, too

```
$ make
[  8%] Running flatc compiler on metadata.fbs
[  8%] Built target metadata_fbs
Scanning dependencies of target feather
[ 16%] Building CXX object src/feather/CMakeFiles/feather.dir/buffer.cc.o
[ 25%] Building CXX object src/feather/CMakeFiles/feather.dir/io.cc.o
[ 33%] Building CXX object src/feather/CMakeFiles/feather.dir/metadata.cc.o
[ 41%] Building CXX object src/feather/CMakeFiles/feather.dir/reader.cc.o
[ 50%] Building CXX object src/feather/CMakeFiles/feather.dir/status.cc.o
[ 58%] Building CXX object src/feather/CMakeFiles/feather.dir/types.cc.o
[ 66%] Building CXX object src/feather/CMakeFiles/feather.dir/writer.cc.o
Linking CXX shared library ../../debug/libfeather.so
[ 66%] Built target feather
[ 75%] Building CXX object src/feather/CMakeFiles/feather_test_main.dir/test_main.cc.o
Linking CXX static library ../../debug/libfeather_test_main.a
[ 75%] Built target feather_test_main
Scanning dependencies of target io-test
[ 83%] Building CXX object src/feather/CMakeFiles/io-test.dir/io-test.cc.o
Linking CXX executable ../../debug/io-test
[ 83%] Built target io-test
Scanning dependencies of target metadata-test
[ 91%] Building CXX object src/feather/CMakeFiles/metadata-test.dir/metadata-test.cc.o
Linking CXX executable ../../debug/metadata-test
[ 91%] Built target metadata-test
Scanning dependencies of target writer-test
[100%] Building CXX object src/feather/CMakeFiles/writer-test.dir/writer-test.cc.o
Linking CXX executable ../../debug/writer-test
[100%] Built target writer-test
```

Author: Wes McKinney <wesm@apache.org>

Closes #34 from wesm/automate-fbs and squashes the following commits:

e05d019 [Wes McKinney] Remove unneeded flatc step from travis build script
5aaa084 [Wes McKinney] Automate flatbuffers IDL generation as part of build"
wesm,2016-03-01 23:45:56,https://api.github.com/repos/wesm/feather/git/commits/497c4069be9859d151a344e448186589e8ad1b34,497c4069be9859d151a344e448186589e8ad1b34,Add missing build steps to cpp/README.md
wesm,2016-02-29 02:34:10,https://api.github.com/repos/wesm/feather/git/commits/d8f5d516001b33d9ad925865e1772ba31aae597d,d8f5d516001b33d9ad925865e1772ba31aae597d,"Implement basic handling for strings and booleans with nulls for pandas

replaces #30

Author: Wes McKinney <wesm@apache.org>

Closes #31 from wesm/pandas-string-boolean and squashes the following commits:

85e6274 [Wes McKinney] Add commented-out failing category test
328d97c [Wes McKinney] Handle booleans+nulls as object arrays
5d98c53 [Wes McKinney] Test strings with nulls roundtrip
8d088d4 [Wes McKinney] Refactoring to get closer on writing string arrays
58d71dd [Wes McKinney] Handle boolean+nulls -> upcast to PyObject with None
6b9a4fd [Wes McKinney] Pack booleans in a bitmap
5a13b4d [Wes McKinney] Stubs"
wesm,2016-02-28 01:40:08,https://api.github.com/repos/wesm/feather/git/commits/694e15bba7d456790eafd6216e2354899fe65deb,694e15bba7d456790eafd6216e2354899fe65deb,"Bootstrap pandas numeric data roundtrips to feather files

progress!

```
In [1]: import numpy as np

In [2]: import pandas as pd
i
In [3]: import feather.ext as ext

In [4]: arr = np.random.randint(0, 100, size=10000000)

In [5]: df = pd.DataFrame({'data': arr})

In [6]: ext.write_dataframe(df, 'bar.feather')

In [7]: df2 = ext.read_dataframe('bar.feather')
```

Now to implement and test all the null handling, strings, category/factor types, and so forth.

Author: Wes McKinney <wesm@apache.org>

Closes #28 from wesm/python-read-write-roundtrip and squashes the following commits:

6401f64 [Wes McKinney] Test booleans with no nulls
e8cbe0a [Wes McKinney] Add a more rigorous floating-with-nulls test and fix bugs
c8f5a67 [Wes McKinney] Convert double nulls
eb04642 [Wes McKinney] Add test case for integer with nulls -> upcast to float
4852a45 [Wes McKinney] Set up feather.( namespace
f3172d9 [Wes McKinney] Implement MemoryMapReader and use that to read files by default
b85d30e [Wes McKinney] OS X clang / rpath fixes and note about deployment target
cc59cc6 [Wes McKinney] Prototype integer+nulls -> float deserialization
48cb953 [Wes McKinney] We actually want LSB bit-ordering. Changed format
ff81ec0 [Wes McKinney] Add floating point (no null) check
049ae9a [Wes McKinney] Working for integers, fix undefined null_count
b1271be [Wes McKinney] Initial file writing, no null handling
958a991 [Wes McKinney] Progress on pandas type conversion
5bd8d56 [Wes McKinney] Test scaffolding for first read/write tests
ed2c00c [Wes McKinney] Get exception handling working
e868c20 [Wes McKinney] Do not use C++ exceptions as too hard to wrap in Python, store buffer in PrimitiveArray class
8461cf7 [Wes McKinney] More scaffolding. Use dynamic linking for now"
wesm,2016-02-21 04:54:30,https://api.github.com/repos/wesm/feather/git/commits/4e2ad0fed7e62657ef410b5d63e0d056eb0e779d,4e2ad0fed7e62657ef410b5d63e0d056eb0e779d,"Bootstrap Python library build, hide flatbuffers from public API

No actual functionality yet. Have to write some pandas/NumPy <-> Arrow conversion functions but we should be in business soon.

Author: Wes McKinney <wesm@apache.org>

Closes #27 from wesm/python-api-bootstrap and squashes the following commits:

0fd00bb [Wes McKinney] Typos, move over links to cpp/README.md
f9856a5 [Wes McKinney] Add build/install instructions for libfeather
6b66cc5 [Wes McKinney] Refactor metadata flatbuffer details into private impls (PIMPL idiom) so that wrappers don't need to know about flatbuffers
88f139e [Wes McKinney] Python wrapper scaffold. Does not build/link yet"
wesm,2016-02-20 19:11:53,https://api.github.com/repos/wesm/feather/git/commits/94e10ba5f6069cf03e18134f5e8ab6e8a7fedc46,94e10ba5f6069cf03e18134f5e8ab6e8a7fedc46,"Nest libfeather core under a top level cpp/ directory

No functional changes here. Just making it more clear what is what, and we can work on a top-level README for new people arriving at the project.

Author: Wes McKinney <wesm@apache.org>
Author: Wes McKinney <wes@cloudera.com>

Closes #26 from wesm/organize-cpp-core and squashes the following commits:

163daf9 [Wes McKinney] Fix clang segfault due to missing encoding
46d5e70 [Wes McKinney] Give up on linux-clang on Travis for now
c94b08a [Wes McKinney] Clean up compiler setup for Travis
2d2568f [Wes McKinney] Fix paths in travis scripts
3c4f10e [Wes McKinney] Reorganize codebase to have cpp/R/python directories at top level"
wesm,2016-02-20 18:18:12,https://api.github.com/repos/wesm/feather/git/commits/eaa1406aa9b54ac790a0d754054082b8263006d7,eaa1406aa9b54ac790a0d754054082b8263006d7,"More progress on file round-trips

I'm just testing to data in-memory but we can add an on-disk output stream and test that round-trip after enough things work the in-memory stream (easier).

Author: Wes McKinney <wes@cloudera.com>

Closes #23 from wesm/basic-complete-read-write and squashes the following commits:

f3978ec [Wes McKinney] Avoid unnecessary shared_ptr copy, more explicit memcpy check
3c98d91 [Wes McKinney] Test writing variable-length UTF8 data
9e6ad34 [Wes McKinney] Verify SetNumRows
1ae9bad [Wes McKinney] Add test for primitive array with no nulls
91c730b [Wes McKinney] Return Buffer from InMemoryOutputStream
69dd557 [Wes McKinney] Round-trip primitive array works
41ee7b1 [Wes McKinney] Add a buffer class to manage allocated memory lifetime and allow for copy/zero-copy buffers with a common API
229b82c [Wes McKinney] Generate random primitive array and write to file, as yet unverified
70ac170 [Wes McKinney] Incomplete test stubs
3b11218 [Wes McKinney] Test setting table description
3f6f3ed [Wes McKinney] Parse and validate file header, footer, metadata"
wesm,2016-02-10 05:50:59,https://api.github.com/repos/wesm/feather/git/commits/d72d1f803cac3ba216a235ee6f725a32539fb77c,d72d1f803cac3ba216a235ee6f725a32539fb77c,"Start prototyping read/write path, reify file format

Author: Wes McKinney <wes@cloudera.com>

Closes #13 from wesm/writer-scaffold and squashes the following commits:

6a2b0c4 [Wes McKinney] Table writer test stubs
c2e4eb7 [Wes McKinney] Address various comments
7d98803 [Wes McKinney] Fix a bug (not tested yet) and add a comment
07cdd4e [Wes McKinney] Add release and debug build types
95f75c0 [Wes McKinney] Implement an in-memory buffer reader and port over/improve Parquet file reader
00a4fab [Wes McKinney] cpplint
9d76166 [Wes McKinney] Draft file reader public API
40a4634 [Wes McKinney] Compiling draft of primary write path for primitive data
c971e54 [Wes McKinney] Trim metadata to have a single table in a file
920db8c [Wes McKinney] Exclude cmake from line counts
4092f6b [Wes McKinney] cpplint
47a0049 [Wes McKinney] Some docstrings
d3a19aa [Wes McKinney] Add some format documentation, writer API prototyping
fc5d7f7 [Wes McKinney] IO interface stubs, vector comparison"
wesm,2016-02-08 01:58:23,https://api.github.com/repos/wesm/feather/git/commits/79b57cb98cf6ddd9297c1f5c1ccda3b8aa07671f,79b57cb98cf6ddd9297c1f5c1ccda3b8aa07671f,"Work through metadata details and write tests verifying round-trips to flatbuffers

Making some progress

- [x] primitive column metadata
- [x] category
- [x] timestamp
- [x] date
- [x] time

I'm getting the hang of flatbuffers. Modest learning curve (unions are not at all well documented...I might write a blog post about it) but luckily there are only a few essential concepts.

After completing the metadata I'll create the file reader and writer public APIs.

Author: Wes McKinney <wes@cloudera.com>

Closes #4 from wesm/metadata-tests and squashes the following commits:

f66a302 [Wes McKinney] Don't build flatbuffers test to speed up the build
a260332 [Wes McKinney] Add metadata tests for date and time, toO
4b845df [Wes McKinney] Add a count lines script -- stay small, stay strong
a5cee0b [Wes McKinney] Implement and test essentials for Timestamp metadata
04ad91a [Wes McKinney] cpplint
3a0518b [Wes McKinney] Slight refactoring to hide more flatbuffer types, test category metadata roundtrip
49973ff [Wes McKinney] Trim some code duplication for comparing array results
fe89377 [Wes McKinney] Development notes in README
507ca03 [Wes McKinney] Update readme and add notice file
57e7a1c [Wes McKinney] Update a copyright header
3004f5f [Wes McKinney] Relax build failure on clang compiler warnings for now. Move user types to types.h
058c84e [Wes McKinney] Test round-tripping primitive column metadata
75ba498 [Wes McKinney] cpplint
1c9d97a [Wes McKinney] Test more table metadata
df42020 [Wes McKinney] First unit test working with roundtrip metadata"
wesm,2016-02-07 06:34:52,https://api.github.com/repos/wesm/feather/git/commits/eeaf31c03df82e58c9831a7a9aff77bd22e3e1eb,eeaf31c03df82e58c9831a7a9aff77bd22e3e1eb,DEV: Do not use textwrap on PR description
wesm,2016-02-07 06:33:12,https://api.github.com/repos/wesm/feather/git/commits/50500fd339af1f577acc6277fa2b4d234654d724,50500fd339af1f577acc6277fa2b4d234654d724,DEV: Add PR merge tool used in many Apache projects
wesm,2016-02-07 06:31:53,https://api.github.com/repos/wesm/feather/git/commits/54330a24323def83f8429d25ccbf6ce75196bfe1,54330a24323def83f8429d25ccbf6ce75196bfe1,"Library bootstrap: ""Hello, world""

Getting this thing started    * Build toolchain and thirdparty
libraries  * Basic Travis CI configuration  * Start of metadata API,
flatbuffers boilerplate  * Googletest configuration

Author: Wes McKinney <wes@cloudera.com>

Closes #3 from wesm/library-bootstrap and squashes the following commits:

643f498 [Wes McKinney] Trying again, may have it this time
0015b16 [Wes McKinney] Fix up some bad paths for Travis
66270f1 [Wes McKinney] Add flatbuffers to thirdparty, configure travis to be able to use it (possibly!)
994b713 [Wes McKinney] cpplint
3eca98f [Wes McKinney] More flatbuffers boilerplate, wrangling metadata builder API
7b494b9 [Wes McKinney] Fix cpplint
b5424eb [Wes McKinney] Add start of a Travis CI setup
7870501 [Wes McKinney] Add tools for running ctest and capturing test logs
84e30d3 [Wes McKinney] Move type enums to feather/types.h
970756b [Wes McKinney] Fix up make lint target
11c5b14 [Wes McKinney] Start drafting flatbuffer metadata read/write interface
2286f1a [Wes McKinney] Adapt a bunch of toolchain/thirdparty/cmake infra from Apache Parquet. Add FindFlatbuffers.cmake"
wesm,2016-02-06 03:10:57,https://api.github.com/repos/wesm/feather/git/commits/9a29d88a9bab37885203cf24a74a7a3eb7f6f733,9a29d88a9bab37885203cf24a74a7a3eb7f6f733,Add Apache License 2.0
wesm,2016-01-28 00:12:13,https://api.github.com/repos/wesm/feather/git/commits/9fea7d0e769100bc117c2831fa266caf2a506c91,9fea7d0e769100bc117c2831fa266caf2a506c91,Put metadata in a sub-namespace
wesm,2016-01-27 22:57:35,https://api.github.com/repos/wesm/feather/git/commits/d744ea336bee56a889bbdc22d2a6121821502baf,d744ea336bee56a889bbdc22d2a6121821502baf,Add dictionary encoding option
wesm,2016-01-27 22:44:10,https://api.github.com/repos/wesm/feather/git/commits/6e91cc5e5cfeb0a5771997bee402f8fe1e72ebc2,6e91cc5e5cfeb0a5771997bee402f8fe1e72ebc2,First commit -- draft table serialization metadata
