pegjs,PEG.js: Parser generator for JavaScript
username,timestamp,url,sha,message
heronils,2019-07-24 16:04:01,https://api.github.com/repos/pegjs/pegjs/git/commits/0b102d29a86254a50275b900706098aeca349740,0b102d29a86254a50275b900706098aeca349740,"Fix last link in the TOC (#621)

There was a '-1' missing at the end of the link."
futagoza,2019-03-20 22:35:05,https://api.github.com/repos/pegjs/pegjs/git/commits/30f32600084d8da6a50b801edad49619e53e2a05,30f32600084d8da6a50b801edad49619e53e2a05,Skip publishing on Build.Reason === PullRequest
futagoza,2019-03-20 22:09:50,https://api.github.com/repos/pegjs/pegjs/git/commits/56f3c9857952544482262692b998cf0f011e3381,56f3c9857952544482262692b998cf0f011e3381,Use env parameter to pass variables
futagoza,2019-03-20 22:00:04,https://api.github.com/repos/pegjs/pegjs/git/commits/42514c4951c7f8edf1958b5730b10802d03d7717,42514c4951c7f8edf1958b5730b10802d03d7717,Ensure GIT_COMMIT_SHA is valid
futagoza,2019-03-20 21:57:26,https://api.github.com/repos/pegjs/pegjs/git/commits/910a51bf5f976334a0814d5b05a1f9978e95ff94,910a51bf5f976334a0814d5b05a1f9978e95ff94,Dont auto-publish on PR's
futagoza,2019-02-20 11:00:50,https://api.github.com/repos/pegjs/pegjs/git/commits/42a6f774fb6b780df574ac990d2235b4ebefff5f,42a6f774fb6b780df574ac990d2235b4ebefff5f,Update installation document
futagoza,2019-02-20 10:00:08,https://api.github.com/repos/pegjs/pegjs/git/commits/9b8b1c5e645781adb245d536b39024755d2f5151,9b8b1c5e645781adb245d536b39024755d2f5151,Fix links in browser benchmark results
futagoza,2019-02-19 16:17:36,https://api.github.com/repos/pegjs/pegjs/git/commits/85dbe5a396b947f80e62c0de92ab46a7c861b48d,85dbe5a396b947f80e62c0de92ab46a7c861b48d,Fix build path for browser benchmark entry
futagoza,2019-02-15 21:07:40,https://api.github.com/repos/pegjs/pegjs/git/commits/0253215c242fc711843b67b2cccaa2f13bcbb7bf,0253215c242fc711843b67b2cccaa2f13bcbb7bf,Update benchmark paths
futagoza,2019-02-15 11:55:57,https://api.github.com/repos/pegjs/pegjs/git/commits/53b966289bb1214c8355ef78194aed8cc8ceed61,53b966289bb1214c8355ef78194aed8cc8ceed61,Fix url's for ajax requests
futagoza,2019-02-15 11:50:12,https://api.github.com/repos/pegjs/pegjs/git/commits/e82994582a7d6a0c0a9e800d8102770ecc326d57,e82994582a7d6a0c0a9e800d8102770ecc326d57,Use files from repo during benchmark in a browser
futagoza,2019-02-15 03:46:04,https://api.github.com/repos/pegjs/pegjs/git/commits/f69239dcc0d85e5168f8e8c197f83b1ad7e564f4,f69239dcc0d85e5168f8e8c197f83b1ad7e564f4,Use env directly with publishing script
futagoza,2019-02-15 03:26:38,https://api.github.com/repos/pegjs/pegjs/git/commits/ec3f2962a8599a753bf1a842b8dfe13f84bdd7c1,ec3f2962a8599a753bf1a842b8dfe13f84bdd7c1,CI: env -> variables
futagoza,2019-02-15 03:14:43,https://api.github.com/repos/pegjs/pegjs/git/commits/83616b4d5d000947e9a41cc99ccc5d81945e98a3,83616b4d5d000947e9a41cc99ccc5d81945e98a3,CI: Use displayName + NPM_CI_TOKEN
futagoza,2019-02-15 02:49:02,https://api.github.com/repos/pegjs/pegjs/git/commits/6a810cc78f84d1a5b9d1cd07fdcdd5f31d690841,6a810cc78f84d1a5b9d1cd07fdcdd5f31d690841,pegjs@dev should always run
futagoza,2019-02-15 01:04:07,https://api.github.com/repos/pegjs/pegjs/git/commits/38cd65d193110572e9cdcd2998c730e815525312,38cd65d193110572e9cdcd2998c730e815525312,Use env variables when auto-publishing
futagoza,2019-02-15 00:54:31,https://api.github.com/repos/pegjs/pegjs/git/commits/baf8b3a339d0879f0d063e48bb42e8b2c1c4e6ea,baf8b3a339d0879f0d063e48bb42e8b2c1c4e6ea,"Publish to pegjs@dev on every CI run

This adds a new local package called '@pegjs/publish-dev' that will be run by the CI after all other tasks.

'@pegjs/publish-dev' will, as the name implies, publish a new release of pegjs on NPM under the dev tag."
futagoza,2019-02-14 13:15:43,https://api.github.com/repos/pegjs/pegjs/git/commits/d7c11c54e8f8f1c8adf44c040a5d17ebfd6c2c81,d7c11c54e8f8f1c8adf44c040a5d17ebfd6c2c81,Ensure all js files are transpiled
futagoza,2019-02-14 12:37:37,https://api.github.com/repos/pegjs/pegjs/git/commits/ef2d318c15f13fcd29269ca9b840b9a8ffb3ccc8,ef2d318c15f13fcd29269ca9b840b9a8ffb3ccc8,Regenerate test bundle [NO_CI]
futagoza,2019-02-14 12:08:40,https://api.github.com/repos/pegjs/pegjs/git/commits/703fbbf8d084f8588bd5a9ddd4787c6d77c69af2,703fbbf8d084f8588bd5a9ddd4787c6d77c69af2,Ensure mocha only finds test files
futagoza,2019-02-14 12:07:46,https://api.github.com/repos/pegjs/pegjs/git/commits/caa8b4cf7b7ae6b5261bac57fd86e68843dfe0cd,caa8b4cf7b7ae6b5261bac57fd86e68843dfe0cd,Use html reporter for mocha browser
futagoza,2019-02-14 11:41:46,https://api.github.com/repos/pegjs/pegjs/git/commits/fcbfa391023c0b87fe20804bc15fbce136b37684,fcbfa391023c0b87fe20804bc15fbce136b37684,Ensure mocha runs on the browser
futagoza,2019-02-14 11:16:06,https://api.github.com/repos/pegjs/pegjs/git/commits/ea991cd65cf8745a6bf540d05da9f602b5796fdc,ea991cd65cf8745a6bf540d05da9f602b5796fdc,Rebuild ci bundles
futagoza,2019-02-14 11:05:27,https://api.github.com/repos/pegjs/pegjs/git/commits/ed6690e5bbb39556c670a9511587c4fea45079d6,ed6690e5bbb39556c670a9511587c4fea45079d6,Use mocha/mocha.js
futagoza,2019-02-13 06:43:48,https://api.github.com/repos/pegjs/pegjs/git/commits/6525825f2e29cf97a1d5a5d67c8ef0a5daec2e3b,6525825f2e29cf97a1d5a5d67c8ef0a5daec2e3b,Use mocha-loader
futagoza,2019-02-13 05:01:07,https://api.github.com/repos/pegjs/pegjs/git/commits/f7a52c70a4b453a12738f0c1453d056d5a54c3da,f7a52c70a4b453a12738f0c1453d056d5a54c3da,Webpack: use library option
futagoza,2019-02-13 03:13:38,https://api.github.com/repos/pegjs/pegjs/git/commits/c35a61f524ab4434d73cb11fc366a7c6b9899cd6,c35a61f524ab4434d73cb11fc366a7c6b9899cd6,Commit bundled web ci files
futagoza,2019-02-12 10:11:21,https://api.github.com/repos/pegjs/pegjs/git/commits/a2c677ef3885c7bcd6bb6aeb125a5c367250e0b5,a2c677ef3885c7bcd6bb6aeb125a5c367250e0b5,Use CODECOV_TOKEN secret
futagoza,2019-02-12 09:41:45,https://api.github.com/repos/pegjs/pegjs/git/commits/55425470914bd000af81d299beca339c22a34f85,55425470914bd000af81d299beca339c22a34f85,Switch to codecov.io
futagoza,2019-02-12 08:59:59,https://api.github.com/repos/pegjs/pegjs/git/commits/b1350d46f89e1e86c10879dd4a22611567355bbc,b1350d46f89e1e86c10879dd4a22611567355bbc,ci: use beforeEach and afterEach hooks
futagoza,2019-02-12 07:40:01,https://api.github.com/repos/pegjs/pegjs/git/commits/05c6fc9a349e453bd1a9911b9da3a4eba32cb83c,05c6fc9a349e453bd1a9911b9da3a4eba32cb83c,Remove env variables for Git
futagoza,2019-02-12 02:34:51,https://api.github.com/repos/pegjs/pegjs/git/commits/9801b966c0a1e9166387269e36dbea980d483085,9801b966c0a1e9166387269e36dbea980d483085,Add repository to packages table
futagoza,2019-02-12 02:21:45,https://api.github.com/repos/pegjs/pegjs/git/commits/97f98122f828b5afeee858302676df474120fa20,97f98122f828b5afeee858302676df474120fa20,devDependencies > dependencies
futagoza,2019-02-12 02:17:43,https://api.github.com/repos/pegjs/pegjs/git/commits/8d1a9a6cebfd413212c62005ef759c69e8a3ce3d,8d1a9a6cebfd413212c62005ef759c69e8a3ce3d,Updated packages table [no ci]
futagoza,2019-02-12 02:00:48,https://api.github.com/repos/pegjs/pegjs/git/commits/da3ea8e47dd8192e1d9fe22787e7c02951a0c2c9,da3ea8e47dd8192e1d9fe22787e7c02951a0c2c9,Implement @pegjs/bundler
futagoza,2019-02-07 05:45:41,https://api.github.com/repos/pegjs/pegjs/git/commits/b2e69586984dc6c24052d5ee3d9f8e1c1df6cf87,b2e69586984dc6c24052d5ee3d9f8e1c1df6cf87,Ensure all node_modules dirs are ignored
futagoza,2019-02-07 05:40:01,https://api.github.com/repos/pegjs/pegjs/git/commits/7a78b7cfdf8aeed5ecd871310aeb7c46056d1cb1,7a78b7cfdf8aeed5ecd871310aeb7c46056d1cb1,Upgrade dependencies
futagoza,2019-01-27 12:01:42,https://api.github.com/repos/pegjs/pegjs/git/commits/f13d0268d6df31d9d6aa1b852e5fa2b694302ff1,f13d0268d6df31d9d6aa1b852e5fa2b694302ff1,Pipelines: combine some scripts
futagoza,2019-01-27 11:42:19,https://api.github.com/repos/pegjs/pegjs/git/commits/06f782d397ed9e57841159154eddd9cf09dd6fb9,06f782d397ed9e57841159154eddd9cf09dd6fb9,Pipelines: Move CC scripts to after hook
futagoza,2019-01-27 11:28:42,https://api.github.com/repos/pegjs/pegjs/git/commits/e72e85bc1d0347d94d08eacbfb77a248773e0436,e72e85bc1d0347d94d08eacbfb77a248773e0436,Pipelines: fix cc-test-reporter path
futagoza,2019-01-27 11:19:08,https://api.github.com/repos/pegjs/pegjs/git/commits/0259640d3cf4e18aef16df9cb0c26240b9774c4a,0259640d3cf4e18aef16df9cb0c26240b9774c4a,Pipelines: Add test script hooks for CC
futagoza,2019-01-27 06:20:10,https://api.github.com/repos/pegjs/pegjs/git/commits/e6c4d8289d5e134a20b92a6dc4a89ec65eb369cd,e6c4d8289d5e134a20b92a6dc4a89ec65eb369cd,Rename azure_coverage to publish_*
futagoza,2019-01-25 07:23:27,https://api.github.com/repos/pegjs/pegjs/git/commits/935f80d7401968a4ed94ee52183de99a52c12b70,935f80d7401968a4ed94ee52183de99a52c12b70,Pipelines: Use node-matrix-test.yml
futagoza,2019-01-25 05:57:49,https://api.github.com/repos/pegjs/pegjs/git/commits/9906f21c57798a4dfa197829d73fb5bfcf3cb0a3,9906f21c57798a4dfa197829d73fb5bfcf3cb0a3,Update output for mocha-junit-reporter
futagoza,2019-01-25 05:52:07,https://api.github.com/repos/pegjs/pegjs/git/commits/dedb37207614a5ebacd3a4c485e0aff0d8252565,dedb37207614a5ebacd3a4c485e0aff0d8252565,Pipelines: Add displayName for coverage step
futagoza,2019-01-25 05:14:05,https://api.github.com/repos/pegjs/pegjs/git/commits/c67fdeb59be52c13a0e08f0fb483df9aec814fd9,c67fdeb59be52c13a0e08f0fb483df9aec814fd9,Change endpoint for Pipeline templates
futagoza,2019-01-25 05:07:30,https://api.github.com/repos/pegjs/pegjs/git/commits/ba6cac15b38335cf1cf7afe37cd5108adb446c8c,ba6cac15b38335cf1cf7afe37cd5108adb446c8c,Add endpoint for Pipeline templates
futagoza,2019-01-25 04:50:15,https://api.github.com/repos/pegjs/pegjs/git/commits/41b5f44288c36d3eea81c4a0c1c8f51d31090596,41b5f44288c36d3eea81c4a0c1c8f51d31090596,Use Pipeline templates from futagoza/apt
futagoza,2019-01-15 19:09:26,https://api.github.com/repos/pegjs/pegjs/git/commits/0074d0456aef0e4c4ab70db680ffcaf64ada9923,0074d0456aef0e4c4ab70db680ffcaf64ada9923,Upgrade dependencies
futagoza,2019-01-15 17:58:07,https://api.github.com/repos/pegjs/pegjs/git/commits/9716fe5f38548030f93fd942d3ea9781f24aa105,9716fe5f38548030f93fd942d3ea9781f24aa105,Yarn: ignore website directory
futagoza,2019-01-02 16:11:51,https://api.github.com/repos/pegjs/pegjs/git/commits/c17e9b2df7e10ae60af2b642172fe7fd2f7c589d,c17e9b2df7e10ae60af2b642172fe7fd2f7c589d,Removed  '--coverage-input-type lcov -d'
futagoza,2019-01-02 16:10:12,https://api.github.com/repos/pegjs/pegjs/git/commits/c59c81c318214989c9c71461b0a0989c35625450,c59c81c318214989c9c71461b0a0989c35625450,Removed test coverage badges (#598)
futagoza,2019-01-01 17:45:23,https://api.github.com/repos/pegjs/pegjs/git/commits/dcd43eb251a1cfe5510990d3179b2d96b942c887,dcd43eb251a1cfe5510990d3179b2d96b942c887,cc-test-reporter -d
futagoza,2019-01-01 17:27:22,https://api.github.com/repos/pegjs/pegjs/git/commits/9d381f0a0931ea582e4d4d1ed9b845d964639a96,9d381f0a0931ea582e4d4d1ed9b845d964639a96,Explicitly tell codeclimate the coverage format
futagoza,2019-01-01 17:10:57,https://api.github.com/repos/pegjs/pegjs/git/commits/b240b773865fbfb2489007854c1a5f6a3332ec0c,b240b773865fbfb2489007854c1a5f6a3332ec0c,Move coveralls step into main ci step
futagoza,2019-01-01 16:43:00,https://api.github.com/repos/pegjs/pegjs/git/commits/1f1ac34009529156aa07c75e908123e5a04cd5df,1f1ac34009529156aa07c75e908123e5a04cd5df,Remove trigger section; Use defaults
futagoza,2019-01-01 16:17:38,https://api.github.com/repos/pegjs/pegjs/git/commits/8b5d384e327cd6d6065cc1c015fa8c9fa96f5715,8b5d384e327cd6d6065cc1c015fa8c9fa96f5715,Add inclusion path
futagoza,2019-01-01 15:51:02,https://api.github.com/repos/pegjs/pegjs/git/commits/7f908e9a7befdfd46bd033c57de3f8ab5f1a94fe,7f908e9a7befdfd46bd033c57de3f8ab5f1a94fe,Update workspaces field
futagoza,2019-01-01 15:28:50,https://api.github.com/repos/pegjs/pegjs/git/commits/d8b7e15169200da4dc2406ceb987b746181f3e62,d8b7e15169200da4dc2406ceb987b746181f3e62,Add echo statements
futagoza,2019-01-01 15:14:34,https://api.github.com/repos/pegjs/pegjs/git/commits/15cb8ff968c3c172ad4161416a5e47d8a092b3a6,15cb8ff968c3c172ad4161416a5e47d8a092b3a6,Only use value of BuildID as name
azure-pipelines[bot],2019-01-01 14:32:10,https://api.github.com/repos/pegjs/pegjs/git/commits/024ac1a1b509fe94ddcd179051800f38853411e9,024ac1a1b509fe94ddcd179051800f38853411e9,Update azure-pipelines.yml for Azure Pipelines
futagoza,2019-01-01 14:22:57,https://api.github.com/repos/pegjs/pegjs/git/commits/aa0412b2fbe4cb1b57b0059867f27004709a0972,aa0412b2fbe4cb1b57b0059867f27004709a0972,nyc: use text-summary
futagoza,2019-01-01 13:57:33,https://api.github.com/repos/pegjs/pegjs/git/commits/3986ca70481d6a12678a1bea49ed743edf8fda8f,3986ca70481d6a12678a1bea49ed743edf8fda8f,Export utils explicitly
futagoza,2019-01-01 13:39:53,https://api.github.com/repos/pegjs/pegjs/git/commits/e17cdabd4d9688d92401e918aee1d4b365021e29,e17cdabd4d9688d92401e918aee1d4b365021e29,Use default arguments
futagoza,2019-01-01 12:51:59,https://api.github.com/repos/pegjs/pegjs/git/commits/2dc0a1b64ad59004cbdfe912cbedc9cf756b360e,2dc0a1b64ad59004cbdfe912cbedc9cf756b360e,Upgrade dependencies
futagoza,2019-01-01 12:40:39,https://api.github.com/repos/pegjs/pegjs/git/commits/485f37c290445f9320b379a003ee07400aaf14ed,485f37c290445f9320b379a003ee07400aaf14ed,Add changes for #596
futagoza,2019-01-01 12:26:41,https://api.github.com/repos/pegjs/pegjs/git/commits/bdde25a9e444f05de11912d6e31fa80ae3bccfb2,bdde25a9e444f05de11912d6e31fa80ae3bccfb2,"Set up CI with Azure Pipelines (#596)

* Add support for Azure Pipelines
* Remove Travis CI support
* coverage: Generate cobertura and lcov reports only
* Add support for Code Climate"
futagoza,2018-12-22 14:36:16,https://api.github.com/repos/pegjs/pegjs/git/commits/8c30834ccce40c78ad8c3fd2a1bad344a0a72d05,8c30834ccce40c78ad8c3fd2a1bad344a0a72d05,Run eslint on .vue files
futagoza,2018-12-22 12:34:47,https://api.github.com/repos/pegjs/pegjs/git/commits/b7d4d01ff557c1ce6da06bf937246aecd72b151f,b7d4d01ff557c1ce6da06bf937246aecd72b151f,Fix build script for Now v2 [skip ci]
futagoza,2018-12-22 12:21:17,https://api.github.com/repos/pegjs/pegjs/git/commits/498c13f7a908fb48a732a7aee5044b61a788a8d1,498c13f7a908fb48a732a7aee5044b61a788a8d1,Use latest version of Yarn on Travis
futagoza,2018-12-22 11:40:23,https://api.github.com/repos/pegjs/pegjs/git/commits/132a68b4d5f330d30e9ba6ef57dcd992473fdbad,132a68b4d5f330d30e9ba6ef57dcd992473fdbad,"Upgrade to Vuepress@next

Travis was failing with a weird ESLint error, and when I checked locally, the problem seemed to be related to Vuepress v0. Upgrading to Vuepress v1-alpha seems to fix this (at least on my machine...)"
futagoza,2018-12-22 09:33:05,https://api.github.com/repos/pegjs/pegjs/git/commits/2433c76ffbd249948cb660e35f1e661af03a817d,2433c76ffbd249948cb660e35f1e661af03a817d,Add now-build script for Now v2
futagoza,2018-12-22 09:30:57,https://api.github.com/repos/pegjs/pegjs/git/commits/4095a054201ef3f5570453983adf57d96e218fb7,4095a054201ef3f5570453983adf57d96e218fb7,Add a dummy page for the editor (temp)
futagoza,2018-12-22 09:20:57,https://api.github.com/repos/pegjs/pegjs/git/commits/9b805a955de5a4a81ef63ed510f6e7b86d055d13,9b805a955de5a4a81ef63ed510f6e7b86d055d13,Add index page
futagoza,2018-12-22 09:20:17,https://api.github.com/repos/pegjs/pegjs/git/commits/f10d93f32fe4b7d93a67b6eb5aa9c8eee86f2ffe,f10d93f32fe4b7d93a67b6eb5aa9c8eee86f2ffe,Move + Update dev docs
futagoza,2018-12-22 09:13:52,https://api.github.com/repos/pegjs/pegjs/git/commits/12c98b70984c138f9ed47257c8c2571ffe554a93,12c98b70984c138f9ed47257c8c2571ffe554a93,Add index page for Changelogs
futagoza,2018-12-22 09:13:15,https://api.github.com/repos/pegjs/pegjs/git/commits/22c280f069ecaaceaafd0adc63e1b34078e0c994,22c280f069ecaaceaafd0adc63e1b34078e0c994,Hide edit button
futagoza,2018-12-22 09:11:22,https://api.github.com/repos/pegjs/pegjs/git/commits/a8e75345950806fd3f9c866ef8d13b45616ef569,a8e75345950806fd3f9c866ef8d13b45616ef569,Add basic config for Vuepress
futagoza,2018-12-22 07:40:50,https://api.github.com/repos/pegjs/pegjs/git/commits/a04486711fca34c811766088896f8efd09019cb6,a04486711fca34c811766088896f8efd09019cb6,Switch to Now v2
futagoza,2018-12-22 07:40:09,https://api.github.com/repos/pegjs/pegjs/git/commits/29943edf60e220e51e1506c00e15cb3e652cf133,29943edf60e220e51e1506c00e15cb3e652cf133,Add forum badge
futagoza,2018-12-22 07:38:22,https://api.github.com/repos/pegjs/pegjs/git/commits/f754684fae6836797afdbfd79479b301a2800d4b,f754684fae6836797afdbfd79479b301a2800d4b,Update Rollup dependencies
futagoza,2018-12-22 07:24:45,https://api.github.com/repos/pegjs/pegjs/git/commits/1dd5a04ef25e196b272f809394f032fc741b31cd,1dd5a04ef25e196b272f809394f032fc741b31cd,Add support for Vuepress v0.14
futagoza,2018-12-10 06:29:39,https://api.github.com/repos/pegjs/pegjs/git/commits/5dfb6b14dc0de14e3647991e904de9679a59eb2a,5dfb6b14dc0de14e3647991e904de9679a59eb2a,"Update eslint config

I removed ""linebreak-style""  because it is now enabled by default within my eslint-config, with the same options.

Disabled padding-line-between-statements until https://github.com/eslint/eslint/issues/11178 is resolved"
futagoza,2018-12-10 02:54:16,https://api.github.com/repos/pegjs/pegjs/git/commits/011b28be03443b7d3efa3bb413f27e87dd5cc9a2,011b28be03443b7d3efa3bb413f27e87dd5cc9a2,"Upgrade dependencies

- @babel/core
- @babel/preset-env
- rollup"
futagoza,2018-11-05 12:06:23,https://api.github.com/repos/pegjs/pegjs/git/commits/975198026150b86ff7c9474432354e30348b3257,975198026150b86ff7c9474432354e30348b3257,Remove unrequired ESLint rules
futagoza,2018-11-05 11:46:22,https://api.github.com/repos/pegjs/pegjs/git/commits/4f9cec5937c647677a743b6d97507503512c845f,4f9cec5937c647677a743b6d97507503512c845f,Ensure .js files always use LF
futagoza,2018-11-05 11:34:31,https://api.github.com/repos/pegjs/pegjs/git/commits/7cf887ec4b65a143a9668d4684d0649f2c1f0213,7cf887ec4b65a143a9668d4684d0649f2c1f0213,Update packages table
futagoza,2018-11-04 11:40:28,https://api.github.com/repos/pegjs/pegjs/git/commits/4723176e2034846899497bab4c75ed6d289916fe,4723176e2034846899497bab4c75ed6d289916fe,Update changelog for v0.11
futagoza,2018-11-04 10:06:45,https://api.github.com/repos/pegjs/pegjs/git/commits/104edadf27d28522ff05b561dac7957db39149a5,104edadf27d28522ff05b561dac7957db39149a5,website: Fix twitter link
futagoza,2018-11-04 10:01:56,https://api.github.com/repos/pegjs/pegjs/git/commits/93ceeff597a012c5cd6fc9d01b28f09b2930fe6f,93ceeff597a012c5cd6fc9d01b28f09b2930fe6f,"General QOL changes

- Added 'test/package.json' for dependencies used by spec tests
- Changed package names of local tools to reflect actual usage
- Removed bins for local tools (using files via 'node [file]' command)
- Updated help text for the CLIs of local tools to reflect changes
- Updated READMEs for tools
- Moved babel dependencies to 'tools/bundle/package.json'
- 'tools/bundle' now only logs created and watching
- Updated scripts in root package.json"
futagoza,2018-11-04 08:26:22,https://api.github.com/repos/pegjs/pegjs/git/commits/4866d6ddb61e25959a6e092f148300cf2b361e2d,4866d6ddb61e25959a6e092f148300cf2b361e2d,Move server.js to website/server.js
futagoza,2018-11-04 07:15:03,https://api.github.com/repos/pegjs/pegjs/git/commits/7deb6a779e848106fed8ceced7d67f3487596bb6,7deb6a779e848106fed8ceced7d67f3487596bb6,Add README for bundle + consmetic changes
futagoza,2018-11-04 07:03:59,https://api.github.com/repos/pegjs/pegjs/git/commits/0f2426bdbfbf9db524d2763261cf85fdcbd3a356,0f2426bdbfbf9db524d2763261cf85fdcbd3a356,Move dist bundler to tools/bundle
futagoza,2018-11-03 16:13:57,https://api.github.com/repos/pegjs/pegjs/git/commits/6d4ad483193f8669bc06ecd2eda04e9e7ca790f0,6d4ad483193f8669bc06ecd2eda04e9e7ca790f0,Remove Gulp
futagoza,2018-11-02 18:20:02,https://api.github.com/repos/pegjs/pegjs/git/commits/1c81df1245adb80ca6bc98c660c9cab4585d31ee,1c81df1245adb80ca6bc98c660c9cab4585d31ee,Update MD doc for devs
futagoza,2018-11-02 18:19:02,https://api.github.com/repos/pegjs/pegjs/git/commits/71414cfb19eac2c18fb15e33047a79b07c534eb0,71414cfb19eac2c18fb15e33047a79b07c534eb0,Update URLs: e.g. spec > development/spec
futagoza,2018-11-02 18:05:53,https://api.github.com/repos/pegjs/pegjs/git/commits/aa58b73cae0b53b95a19ff5b905b81cca03e0ce5,aa58b73cae0b53b95a19ff5b905b81cca03e0ce5,Use ESLint directly instead of gulp-eslint
futagoza,2018-11-02 17:51:26,https://api.github.com/repos/pegjs/pegjs/git/commits/390478d61e21633074320ef72615b2d373f6c865,390478d61e21633074320ef72615b2d373f6c865,Move test/spec to test
futagoza,2018-11-02 17:42:42,https://api.github.com/repos/pegjs/pegjs/git/commits/70a6fab63636e1f2aeed9e72b50f556d622c9b87,70a6fab63636e1f2aeed9e72b50f556d622c9b87,Add README for tools/benchmark
futagoza,2018-11-02 17:03:30,https://api.github.com/repos/pegjs/pegjs/git/commits/163ff2050885ed404176a2c46d69bf4d59e0669b,163ff2050885ed404176a2c46d69bf4d59e0669b,Move test/benchmark to tools/benchmark
futagoza,2018-11-02 15:15:25,https://api.github.com/repos/pegjs/pegjs/git/commits/9c039ce79b06f075d8386d66b960b006b37bd778,9c039ce79b06f075d8386d66b960b006b37bd778,Move test/impact to tools/impact
futagoza,2018-10-30 03:38:42,https://api.github.com/repos/pegjs/pegjs/git/commits/32477337c14cfb19d7187e66d5a464b25a236345,32477337c14cfb19d7187e66d5a464b25a236345,Updated dependencies
futagoza,2018-10-30 03:23:06,https://api.github.com/repos/pegjs/pegjs/git/commits/87dcc13d0f87843d8eb5980f8fa1f493d13a7db0,87dcc13d0f87843d8eb5980f8fa1f493d13a7db0,Updated changelog for upcoming 0.11
futagoza,2018-10-29 23:53:34,https://api.github.com/repos/pegjs/pegjs/git/commits/e69646cc7811e47dcaad271f21560e48c1f1091f,e69646cc7811e47dcaad271f21560e48c1f1091f,Merge branch 'master' of github.com:pegjs/pegjs
futagoza,2018-10-29 23:43:53,https://api.github.com/repos/pegjs/pegjs/git/commits/2ae32a6510ce4af3c3740d8a759e04abd478f8b7,2ae32a6510ce4af3c3740d8a759e04abd478f8b7,"Merge pull request #587 from psbrandt/patch-1

✍🏼 Fix small typo."
psbrandt,2018-10-28 21:39:12,https://api.github.com/repos/pegjs/pegjs/git/commits/d29704ff9c1e7d0c18f0462e99bcfcb9fccdf1f5,d29704ff9c1e7d0c18f0462e99bcfcb9fccdf1f5,✍🏼 Fix small typo.
futagoza,2018-10-15 07:03:53,https://api.github.com/repos/pegjs/pegjs/git/commits/afc653c46f78e293f80e7c242a88f368474aa5b5,afc653c46f78e293f80e7c242a88f368474aa5b5,fix stray spelling error: empry -> empty
futagoza,2018-10-15 06:20:33,https://api.github.com/repos/pegjs/pegjs/git/commits/27687615e581a561ab8b9dbe3a02638657ae66ae,27687615e581a561ab8b9dbe3a02638657ae66ae,Document filename option for generated parsers
futagoza,2018-10-15 06:08:21,https://api.github.com/repos/pegjs/pegjs/git/commits/d23366016129c82dff1c9099094b46e9515c3ea2,d23366016129c82dff1c9099094b46e9515c3ea2,fix incorrect API reference
futagoza,2018-10-13 18:08:11,https://api.github.com/repos/pegjs/pegjs/git/commits/a70fc7664857d18feb5569ff96341a86cd6a82b4,a70fc7664857d18feb5569ff96341a86cd6a82b4,Update dependencies
futagoza,2018-10-12 13:12:29,https://api.github.com/repos/pegjs/pegjs/git/commits/176f89b9c254c999a93dc0c23bf1033ce399d991,176f89b9c254c999a93dc0c23bf1033ce399d991,"Merge pull request #585 from doersino/patch-1

Fix typo"
doersino,2018-10-12 09:11:16,https://api.github.com/repos/pegjs/pegjs/git/commits/1d2ed4ca22394ecc31cee874d8bfa97a67ded5c9,1d2ed4ca22394ecc31cee874d8bfa97a67ded5c9,Fix typo
futagoza,2018-10-05 19:32:11,https://api.github.com/repos/pegjs/pegjs/git/commits/3d755b8196a6a7e20835ddba559323bc26f3246e,3d755b8196a6a7e20835ddba559323bc26f3246e,Update gulpfile.js
futagoza,2018-09-25 22:36:02,https://api.github.com/repos/pegjs/pegjs/git/commits/a1b8013b6b9a3d97df322eb6c43d73bf59238b81,a1b8013b6b9a3d97df322eb6c43d73bf59238b81,Add info for production building
futagoza,2018-09-25 20:27:45,https://api.github.com/repos/pegjs/pegjs/git/commits/4f4af756d3ea9fec5944d53895f81d5dfef752a5,4f4af756d3ea9fec5944d53895f81d5dfef752a5,Fix CBT image width [ci skip]
futagoza,2018-09-25 20:26:36,https://api.github.com/repos/pegjs/pegjs/git/commits/40b7cdfa81ce1f98daa7d69e41462eb430cf260f,40b7cdfa81ce1f98daa7d69e41462eb430cf260f,Update lockfile
futagoza,2018-09-25 20:06:05,https://api.github.com/repos/pegjs/pegjs/git/commits/fe2237476f8d883b5ff59a400b5528c9d7f7b96f,fe2237476f8d883b5ff59a400b5528c9d7f7b96f,Clarify parts of the documentation
futagoza,2018-09-25 19:29:26,https://api.github.com/repos/pegjs/pegjs/git/commits/213c70ced4615397921aa250c321fee19cf52a5c,213c70ced4615397921aa250c321fee19cf52a5c,Spec Runner cant run on IE11
futagoza,2018-09-25 18:15:16,https://api.github.com/repos/pegjs/pegjs/git/commits/14b8b76a7985cbe20c4438a850fa0a22c0c60132,14b8b76a7985cbe20c4438a850fa0a22c0c60132,runInContext -> evalModule
futagoza,2018-09-25 16:59:38,https://api.github.com/repos/pegjs/pegjs/git/commits/616749377b7feb8ba09e07a4b85d969b05272da2,616749377b7feb8ba09e07a4b85d969b05272da2,"Fix IE11 Support (#583)

- Revert ES6 changes to arithmetics.pegjs
- Use Array#forEach instead of for..of
- Don't use native Array#find & Array#findIndex
- Added util/arrays.js (find & findIndex)
- Use Function instead of eval"
futagoza,2018-09-18 07:10:28,https://api.github.com/repos/pegjs/pegjs/git/commits/e636ee654c6f10ded6465272f0470320f99cdab9,e636ee654c6f10ded6465272f0470320f99cdab9,Update typings (Plucking)
futagoza,2018-09-18 06:58:49,https://api.github.com/repos/pegjs/pegjs/git/commits/ec93e649396600c14bc81d1119a084046facf1bb,ec93e649396600c14bc81d1119a084046facf1bb,Update root README.md: Add packages table
futagoza,2018-09-18 06:39:35,https://api.github.com/repos/pegjs/pegjs/git/commits/9dc4d4a5ef1cea2ecf8431a1783ae265a2c84e28,9dc4d4a5ef1cea2ecf8431a1783ae265a2c84e28,website online/try: serve different example
futagoza,2018-09-18 06:27:21,https://api.github.com/repos/pegjs/pegjs/git/commits/fd3dbb77ac7531f0d5b170d9bffbd7eff81a928d,fd3dbb77ac7531f0d5b170d9bffbd7eff81a928d,Update arithmetics example (Value plucking)
futagoza,2018-09-18 06:09:11,https://api.github.com/repos/pegjs/pegjs/git/commits/e0e9fbcd302ef1dabb9743d7b8377232849de9a5,e0e9fbcd302ef1dabb9743d7b8377232849de9a5,Unicode 11
futagoza,2018-09-18 05:57:55,https://api.github.com/repos/pegjs/pegjs/git/commits/e64118f3b7236fb3792df9f30c601a7ba8239c65,e64118f3b7236fb3792df9f30c601a7ba8239c65,"Update src/parser.pegjs

- use value plucking
- remove helpers not needed now
- types in OPS_* are now returned by *Operator
- RESERVED_WORDS is now a `Object<Identifier,true>`
- use ES2015+ JavaScript
- cleanup source code"
futagoza,2018-09-17 13:27:59,https://api.github.com/repos/pegjs/pegjs/git/commits/4964b9af7e33a1c804eaff21d337d0d0926f9717,4964b9af7e33a1c804eaff21d337d0d0926f9717,Add pegjs.org/development/try
futagoza,2018-09-17 12:27:31,https://api.github.com/repos/pegjs/pegjs/git/commits/c65e9dd95fc1789d4d12ec6d0becd32a42ad5e32,c65e9dd95fc1789d4d12ec6d0becd32a42ad5e32,Updated dependencies
futagoza,2018-09-17 10:32:34,https://api.github.com/repos/pegjs/pegjs/git/commits/460f0cc5bc9e7b12e7830a13a9afa5026a5f20f4,460f0cc5bc9e7b12e7830a13a9afa5026a5f20f4,"Implement value plucking

Resolves #235, #427, #545"
futagoza,2018-09-15 05:41:57,https://api.github.com/repos/pegjs/pegjs/git/commits/26969475f7543c96a02be2410b779b4b92fc1c31,26969475f7543c96a02be2410b779b4b92fc1c31,IdentifierName > Identifier
futagoza,2018-09-15 05:21:53,https://api.github.com/repos/pegjs/pegjs/git/commits/6bc85de25656146a3316627b3e2e1d12300d46ab,6bc85de25656146a3316627b3e2e1d12300d46ab,Define version only in one place
futagoza,2018-09-15 04:17:27,https://api.github.com/repos/pegjs/pegjs/git/commits/4b0f637626311a895051272566cec3affafcb4b5,4b0f637626311a895051272566cec3affafcb4b5,"Revert ""Ensure VERSION is consistent""

This reverts commit 95abd42c953d42f5b35dcdde1f03528f825fa517."
futagoza,2018-09-14 02:43:09,https://api.github.com/repos/pegjs/pegjs/git/commits/8b43c8419f566267a65620d1a62d7be60925fd1d,8b43c8419f566267a65620d1a62d7be60925fd1d,Use input/output from the config file
futagoza,2018-09-14 01:42:46,https://api.github.com/repos/pegjs/pegjs/git/commits/95abd42c953d42f5b35dcdde1f03528f825fa517,95abd42c953d42f5b35dcdde1f03528f825fa517,"Ensure VERSION is consistent

The PEG.js version is exported and also written into the generated parser. In both these instances the version is a separate string, which means every time the version is bumped, it has to be changed in 3 places. This commit makes it slightly less of a maintenance burden."
futagoza,2018-09-13 09:59:49,https://api.github.com/repos/pegjs/pegjs/git/commits/ecb81504cb8f586a01ec2f7d4cab52415e75e53c,ecb81504cb8f586a01ec2f7d4cab52415e75e53c,"Remove redundant __slice

Should have been removed in #f66751b"
futagoza,2018-09-13 08:13:29,https://api.github.com/repos/pegjs/pegjs/git/commits/aadc318fcd216d186abc47fe4511de74888d7dea,aadc318fcd216d186abc47fe4511de74888d7dea,Add a guide for the CLI
futagoza,2018-09-13 04:14:52,https://api.github.com/repos/pegjs/pegjs/git/commits/7813c07025af35ed2f63ff5e5a966b2cfacae68c,7813c07025af35ed2f63ff5e5a966b2cfacae68c,"Fix: global variable is peg, not PEG"
futagoza,2018-09-11 10:09:02,https://api.github.com/repos/pegjs/pegjs/git/commits/506419474df28797f832848c057dbb7fd21fc767,506419474df28797f832848c057dbb7fd21fc767,Include yarn.lock on zeit.now deployment
futagoza,2018-09-11 10:01:42,https://api.github.com/repos/pegjs/pegjs/git/commits/dd044b8cfb4f83167fb26cd094ad09333d0961ea,dd044b8cfb4f83167fb26cd094ad09333d0961ea,remove extronous files
futagoza,2018-09-11 10:00:00,https://api.github.com/repos/pegjs/pegjs/git/commits/46280b39927c14a4c44f1ed5cd63a5e776929ccc,46280b39927c14a4c44f1ed5cd63a5e776929ccc,Use cdn for jQuery
futagoza,2018-09-11 09:32:23,https://api.github.com/repos/pegjs/pegjs/git/commits/dd76ff85d4ac8681e506d6bd69601e40ce5b55f4,dd76ff85d4ac8681e506d6bd69601e40ce5b55f4,Update execution files
futagoza,2018-09-10 04:20:13,https://api.github.com/repos/pegjs/pegjs/git/commits/8c751e69177c218ded04bb02c6761a00492b1ada,8c751e69177c218ded04bb02c6761a00492b1ada,Istanbul: only check packages
futagoza,2018-09-10 04:08:47,https://api.github.com/repos/pegjs/pegjs/git/commits/445cdcde44a2fca7ec7b27999b2c3be254b4f479,445cdcde44a2fca7ec7b27999b2c3be254b4f479,ensure zeit.now ignores devDependencies
futagoza,2018-09-10 03:57:12,https://api.github.com/repos/pegjs/pegjs/git/commits/2b543ed97ace5069771807dbd59368bbbdf5437a,2b543ed97ace5069771807dbd59368bbbdf5437a,browserify -> rollup
futagoza,2018-09-08 01:39:12,https://api.github.com/repos/pegjs/pegjs/git/commits/be882395436f064833645ef35a5f4acd4c83136d,be882395436f064833645ef35a5f4acd4c83136d,"Move PEG.js to packages/pegjs

* Move PEG.js from . to packages/pegjs
* Update relevanr paths
* Remove pegjs-dev; Use pegjs directly
* Generate browser files at packages/pegjs/dist
* nyc: exclude website
* website: keep packages folder
* Root package.json is private now"
futagoza,2018-09-07 08:49:21,https://api.github.com/repos/pegjs/pegjs/git/commits/35a650dc50df0e0ef3ec3552b0a8c2bfbb6fce85,35a650dc50df0e0ef3ec3552b0a8c2bfbb6fce85,Update dependency: babelify@v10
futagoza,2018-09-07 08:39:10,https://api.github.com/repos/pegjs/pegjs/git/commits/60c81d1cba1d3e6be48a5cf6bb444ffbc4a2637e,60c81d1cba1d3e6be48a5cf6bb444ffbc4a2637e,Update paths
futagoza,2018-09-06 14:36:31,https://api.github.com/repos/pegjs/pegjs/git/commits/46ce02404ff1701e41259eda8cc2b28468786806,46ce02404ff1701e41259eda8cc2b28468786806,Remove refs to removed files.
futagoza,2018-09-06 11:58:23,https://api.github.com/repos/pegjs/pegjs/git/commits/a8d8afbbda0cb347570e73ca06501433d714cf89,a8d8afbbda0cb347570e73ca06501433d714cf89,Add missing dirs for websites test suites
futagoza,2018-09-06 11:42:42,https://api.github.com/repos/pegjs/pegjs/git/commits/f09f2f2cb49f450d92b47c91b7784530162d0975,f09f2f2cb49f450d92b47c91b7784530162d0975,Move CBT logo
futagoza,2018-09-06 11:38:26,https://api.github.com/repos/pegjs/pegjs/git/commits/5e7134936bf44f6fab6685a1ccd4dae3bc4b471a,5e7134936bf44f6fab6685a1ccd4dae3bc4b471a,Merge the test suites into the website
futagoza,2018-09-06 07:32:55,https://api.github.com/repos/pegjs/pegjs/git/commits/4596daae28642da1499b92714d2354f1965c7dff,4596daae28642da1499b92714d2354f1965c7dff,Add config for Zeit Now
futagoza,2018-09-06 04:52:02,https://api.github.com/repos/pegjs/pegjs/git/commits/dfbfdd350b1b711f4bc3ec57e072d8df2553e688,dfbfdd350b1b711f4bc3ec57e072d8df2553e688,Import source code for pegjs.org
futagoza,2018-09-05 22:03:47,https://api.github.com/repos/pegjs/pegjs/git/commits/7c93ffb22b830957a47d5da48aac1a2eb3329769,7c93ffb22b830957a47d5da48aac1a2eb3329769,Move old changelogs to docs/changelogs [ci skip]
futagoza,2018-09-05 21:00:36,https://api.github.com/repos/pegjs/pegjs/git/commits/8bd4d390a9f43b730cd4403b4c767847e1e8cd4e,8bd4d390a9f43b730cd4403b4c767847e1e8cd4e,Add linkback to CrossBrowserTesting [ci skip]
futagoza,2018-09-05 09:22:14,https://api.github.com/repos/pegjs/pegjs/git/commits/7edc7d902b94d8597d49feb3e668c1c5ba9917ce,7edc7d902b94d8597d49feb3e668c1c5ba9917ce,Merge branch 'master' of github.com:pegjs/pegjs
futagoza,2018-09-05 09:16:34,https://api.github.com/repos/pegjs/pegjs/git/commits/f66751ba39e4ebda14edf4827e112fa12402eaf1,f66751ba39e4ebda14edf4827e112fa12402eaf1,prefer rest and spread
futagoza,2018-09-05 07:54:35,https://api.github.com/repos/pegjs/pegjs/git/commits/60f69d65585ced9e13bdfd57d3a2540a5b3987e3,60f69d65585ced9e13bdfd57d3a2540a5b3987e3,"Stop ESLint warnings

- about use of eval
- whitespace before comments"
futagoza,2018-09-05 07:53:32,https://api.github.com/repos/pegjs/pegjs/git/commits/b92690392eb491433f27acca305e5e0c2f00acd3,b92690392eb491433f27acca305e5e0c2f00acd3,Extend the main .eslintrc.js
futagoza,2018-09-05 07:03:51,https://api.github.com/repos/pegjs/pegjs/git/commits/0089da669833fcfa3d8190fc34889d2510158c5e,0089da669833fcfa3d8190fc34889d2510158c5e,Use Babel 7 dependencies
futagoza,2018-09-05 03:04:14,https://api.github.com/repos/pegjs/pegjs/git/commits/27904791542a53437d89fa37dd96fc67c373d9e2,27904791542a53437d89fa37dd96fc67c373d9e2,Update dependencies
futagoza,2018-09-05 00:37:57,https://api.github.com/repos/pegjs/pegjs/git/commits/3cedf4439dace255ef8ad46c9a4f5c110b46dc6d,3cedf4439dace255ef8ad46c9a4f5c110b46dc6d,"Update supported platforms

- Drop support for Node.js v4
- Add support for Node.js v10
- Drop support for IE < 11"
futagoza,2018-05-09 21:59:45,https://api.github.com/repos/pegjs/pegjs/git/commits/06c9400bcac1b696eb5c4f2787734ab7038cef3e,06c9400bcac1b696eb5c4f2787734ab7038cef3e,Update plugins.md
futagoza,2018-04-05 07:41:47,https://api.github.com/repos/pegjs/pegjs/git/commits/4089aac71e99d73ea22db83f536b5e70c878d947,4089aac71e99d73ea22db83f536b5e70c878d947,Use util.processOptions
futagoza,2018-04-05 07:16:50,https://api.github.com/repos/pegjs/pegjs/git/commits/b8db835af951bed9e56e515108c0f48f2061935d,b8db835af951bed9e56e515108c0f48f2061935d,Refactor vm.runInContext
futagoza,2018-04-04 19:21:31,https://api.github.com/repos/pegjs/pegjs/git/commits/94ca36469b8081774f053fd37e46918ad197bc3d,94ca36469b8081774f053fd37e46918ad197bc3d,Move compiler/vm.js to util/vm.js
futagoza,2018-04-04 18:15:04,https://api.github.com/repos/pegjs/pegjs/git/commits/146d021d216da69630759e069944b654c32d47f8,146d021d216da69630759e069944b654c32d47f8,Updated keywords for NPM
futagoza,2018-04-04 17:24:05,https://api.github.com/repos/pegjs/pegjs/git/commits/fbc8ea2bdf49fe85a559d25a00d40b8909296a86,fbc8ea2bdf49fe85a559d25a00d40b8909296a86,"Add an ignore file

The gulp file is usuaully used to glob the JavaScript files and run ESLint on them, but editor based instances of ESLint (e.g. VSCode extension) don't read the gulp file, so can't tell which files to ignore unless specified in the official .eslintignore file."
futagoza,2018-04-03 02:17:30,https://api.github.com/repos/pegjs/pegjs/git/commits/b81396a904fef4992ecd9fdc2b77a0226e2d7ee4,b81396a904fef4992ecd9fdc2b77a0226e2d7ee4,Regenerate parser
futagoza,2018-04-03 02:16:55,https://api.github.com/repos/pegjs/pegjs/git/commits/b31009f73d8849d3a680af38f038afc0580c82d8,b31009f73d8849d3a680af38f038afc0580c82d8,Use peg.util.reservedWords
futagoza,2018-04-03 02:16:10,https://api.github.com/repos/pegjs/pegjs/git/commits/01555ebbac23e717a003972981439ac32c039951,01555ebbac23e717a003972981439ac32c039951,Move compiler/js.js to util/js.js
futagoza,2018-04-02 20:17:35,https://api.github.com/repos/pegjs/pegjs/git/commits/8d3dc109ede63e379470d544004f03306c6c5dab,8d3dc109ede63e379470d544004f03306c6c5dab,Rename js.regexpClassEscape to js.regexpEscape
futagoza,2018-04-02 19:59:13,https://api.github.com/repos/pegjs/pegjs/git/commits/878421ab7531cc7d6df9703d213da3823bfd451c,878421ab7531cc7d6df9703d213da3823bfd451c,Moved seperate utilities into util route.
futagoza,2018-04-01 01:51:53,https://api.github.com/repos/pegjs/pegjs/git/commits/83e3b9edc4e3ac5af2c7d24b0527bc5f7d745e20,83e3b9edc4e3ac5af2c7d24b0527bc5f7d745e20,Add missing whitespace to generated parsers
futagoza,2018-03-29 02:55:50,https://api.github.com/repos/pegjs/pegjs/git/commits/af917b1e4d719f25d04e5443e676779afd5f5ce5,af917b1e4d719f25d04e5443e676779afd5f5ce5,Refactor removeProxyRules
futagoza,2018-03-29 00:20:57,https://api.github.com/repos/pegjs/pegjs/git/commits/dbdba75b15f287ed7552da387035a7e5a52ee8c3,dbdba75b15f287ed7552da387035a7e5a52ee8c3,run plugins optionally
futagoza,2018-03-29 00:07:48,https://api.github.com/repos/pegjs/pegjs/git/commits/7e10622b9a2297a392e05fbc9ac7646a9fcae530,7e10622b9a2297a392e05fbc9ac7646a9fcae530,Update lockfile
futagoza,2018-03-28 22:56:23,https://api.github.com/repos/pegjs/pegjs/git/commits/1fca2daff6521ff3b068b15c7a83813c570a03a3,1fca2daff6521ff3b068b15c7a83813c570a03a3,Move processOptions to utils
futagoza,2018-03-23 12:33:06,https://api.github.com/repos/pegjs/pegjs/git/commits/b5d01f75059343ccd7f354e023be8e9193e044a8,b5d01f75059343ccd7f354e023be8e9193e044a8,Test only the latest versions of LTS releases
futagoza,2018-03-23 04:12:19,https://api.github.com/repos/pegjs/pegjs/git/commits/c2c823196f34a60ec37833ec67ac6c784d430049,c2c823196f34a60ec37833ec67ac6c784d430049,Re-generate parser
futagoza,2018-03-23 03:20:14,https://api.github.com/repos/pegjs/pegjs/git/commits/699038c5076c2a83cc70cb72e49b5bec7e113de6,699038c5076c2a83cc70cb72e49b5bec7e113de6,Link to doc for plugins
futagoza,2018-03-23 03:18:02,https://api.github.com/repos/pegjs/pegjs/git/commits/ab9b8d41bbca316a508f2c2e7ba0ff0c39909260,ab9b8d41bbca316a508f2c2e7ba0ff0c39909260,Add doc for tracer.trace
futagoza,2018-03-23 02:38:00,https://api.github.com/repos/pegjs/pegjs/git/commits/87ad103177f5d4ca60cc259ec5b4ce694dbf470e,87ad103177f5d4ca60cc259ec5b4ce694dbf470e,Move nyc options to separate config
futagoza,2018-03-23 02:22:11,https://api.github.com/repos/pegjs/pegjs/git/commits/94a5f2481712f0576b7d7cb66501a3fbb08015fa,94a5f2481712f0576b7d7cb66501a3fbb08015fa,Use only Yarn
futagoza,2018-03-23 02:19:08,https://api.github.com/repos/pegjs/pegjs/git/commits/b3329e626ef8205e0eda452479e0bcf6e55ccc9e,b3329e626ef8205e0eda452479e0bcf6e55ccc9e,Integrate yarn
futagoza,2018-03-23 02:00:03,https://api.github.com/repos/pegjs/pegjs/git/commits/6335818cb7be7f5c85b96e31b0caa3661f1c8f02,6335818cb7be7f5c85b96e31b0caa3661f1c8f02,Gulp 4
futagoza,2018-03-22 00:41:44,https://api.github.com/repos/pegjs/pegjs/git/commits/37451953153c34d7f54ebd0ae73ce79c8d6b1032,37451953153c34d7f54ebd0ae73ce79c8d6b1032,Make the default tracer an optional feature
futagoza,2018-03-22 00:07:53,https://api.github.com/repos/pegjs/pegjs/git/commits/72ba85b3af4dbfc6019fd0d18c17278cb611b641,72ba85b3af4dbfc6019fd0d18c17278cb611b641,Use 'visitor.on' instead of 'visitor.for'
futagoza,2018-03-21 02:13:47,https://api.github.com/repos/pegjs/pegjs/git/commits/7cd291cbe0fe59af98bc6aee15cac7f81239d9f2,7cd291cbe0fe59af98bc6aee15cac7f81239d9f2,Add doc for plugins (closes #544)
futagoza,2018-03-21 01:04:44,https://api.github.com/repos/pegjs/pegjs/git/commits/70dea07923714abc4c26c4bb30d21f3ba97e937a,70dea07923714abc4c26c4bb30d21f3ba97e937a,Update twitter link
futagoza,2018-03-20 23:45:14,https://api.github.com/repos/pegjs/pegjs/git/commits/46c3dcf40b99a8fb94f4d59ebda263dc6d7cdf0b,46c3dcf40b99a8fb94f4d59ebda263dc6d7cdf0b,Document Session#fatal method
futagoza,2018-03-20 23:40:47,https://api.github.com/repos/pegjs/pegjs/git/commits/f4ca7ca4616e82486c05b1ab6508e1be0601a57e,f4ca7ca4616e82486c05b1ab6508e1be0601a57e,Remove grammar option for Session API
futagoza,2018-03-20 03:21:58,https://api.github.com/repos/pegjs/pegjs/git/commits/6d25da2d2b3a25bdfd2bdbb759484de653f32437,6d25da2d2b3a25bdfd2bdbb759484de653f32437,Use bare option with browserify
futagoza,2018-03-20 03:19:30,https://api.github.com/repos/pegjs/pegjs/git/commits/126a4c95f46b0072cc96d7dc8bfebadb87f2dd7c,126a4c95f46b0072cc96d7dc8bfebadb87f2dd7c,"Update devDependencies

Closes #568"
futagoza,2018-03-17 04:27:09,https://api.github.com/repos/pegjs/pegjs/git/commits/2f0680ca16c48bd53265b2b42359d7b5eed77ecf,2f0680ca16c48bd53265b2b42359d7b5eed77ecf,"Restore orignal output on generation fail

If the output file already exists, and the parser generator fails, the result is a empty file. This commit tries  to avoid this pitfall."
futagoza,2018-03-17 04:08:05,https://api.github.com/repos/pegjs/pegjs/git/commits/21a6de06d5a50cf9188cee2935bb76eeb85fd332,21a6de06d5a50cf9188cee2935bb76eeb85fd332,"Optional features

This commit enables optional features that are enabled by default in the generated parser.

For now, only some of the helpers and filename are generated based on this new option, but this will change in the future most likely.

Resolves #421"
futagoza,2018-03-12 19:57:43,https://api.github.com/repos/pegjs/pegjs/git/commits/15d364587c29cf6197f2b34d0b862c79ed16e44d,15d364587c29cf6197f2b34d0b862c79ed16e44d,Update tsd to include changes since 8e9be9a
futagoza,2018-02-16 02:39:13,https://api.github.com/repos/pegjs/pegjs/git/commits/2ac387e1c9affe05eca3c71c431e1b41202ce60a,2ac387e1c9affe05eca3c71c431e1b41202ce60a,"Move documentation

The README.md file in the root of the repository had become too large, and as a result the file became hard to maintain.

This commit extracts all the documentation and moves it to separate but managable files within the docs directory, a new folder also located in the root of the repository."
futagoza,2018-02-09 13:33:36,https://api.github.com/repos/pegjs/pegjs/git/commits/418f441d8858ae6223156b8e6f11526dbd83c49a,418f441d8858ae6223156b8e6f11526dbd83c49a,Ignore '.idea' directory
futagoza,2018-02-04 00:12:30,https://api.github.com/repos/pegjs/pegjs/git/commits/fedf0f34801d5382b5e76a43bee40a3c590ee6f0,fedf0f34801d5382b5e76a43bee40a3c590ee6f0,"Resolve 'vm.runInContext' bottleneck

Calling 'vm.runInContext'  is slightly more expensive then calling `eval`, but removing the string template and extracting the variable generator helps abit."
futagoza,2018-02-03 16:46:16,https://api.github.com/repos/pegjs/pegjs/git/commits/43a305eaef4971353b850003502d64dbf5effac4,43a305eaef4971353b850003502d64dbf5effac4,"Clarify templates

- what to chose and do
- remove checkboxs
- all question in comments
- reformat style"
futagoza,2018-02-02 07:13:58,https://api.github.com/repos/pegjs/pegjs/git/commits/b3135690b0ace67a6e545bf9f4060d013a121f9f,b3135690b0ace67a6e545bf9f4060d013a121f9f,Not session.fail but session.fatal
futagoza,2018-02-02 06:42:03,https://api.github.com/repos/pegjs/pegjs/git/commits/30cfa295530a17b53bd1f71202bc8effe976408a,30cfa295530a17b53bd1f71202bc8effe976408a,Provide context to parser (#517)
futagoza,2018-02-02 04:32:39,https://api.github.com/repos/pegjs/pegjs/git/commits/04dfef3b63b4c707a4feba956b74e8a75fb3c04e,04dfef3b63b4c707a4feba956b74e8a75fb3c04e,Use error emitter (Closes #430)
futagoza,2018-02-02 04:32:26,https://api.github.com/repos/pegjs/pegjs/git/commits/ef0595596fb9c032ff537f3d1fb326a395f3fe68,ef0595596fb9c032ff537f3d1fb326a395f3fe68,"Implement error emitter (Closes #431)

Along with commit 851d8ed, this resolves #431 based on the fact that plugins can overwrite session methods, allowing use cases like multiple or limited errors (and/or warnings) to be an opt-in feature."
futagoza,2018-02-01 21:51:17,https://api.github.com/repos/pegjs/pegjs/git/commits/a11d2171672fcdb899dbd9741b402888e8e738c7,a11d2171672fcdb899dbd9741b402888e8e738c7,Updated devDependencies
futagoza,2018-01-31 02:23:24,https://api.github.com/repos/pegjs/pegjs/git/commits/621b11b71587fd105044d4396a85b08560cfbaa9,621b11b71587fd105044d4396a85b08560cfbaa9,Disable no-unused-vars in Session API
futagoza,2018-01-31 02:17:27,https://api.github.com/repos/pegjs/pegjs/git/commits/6500189d58cb8259906b75b8f77d5c736f3ede75,6500189d58cb8259906b75b8f77d5c736f3ede75,Report unused rules (Closes #200)
futagoza,2018-01-31 02:04:19,https://api.github.com/repos/pegjs/pegjs/git/commits/851d8edfddc6a4a74de472721c67579882ced34b,851d8edfddc6a4a74de472721c67579882ced34b,Implement warning emitter (Closes #327)
futagoza,2018-01-30 02:38:49,https://api.github.com/repos/pegjs/pegjs/git/commits/f4c67993f6d132c57bf4e7176cc990670b820259,f4c67993f6d132c57bf4e7176cc990670b820259,Added the Session API
futagoza,2018-01-30 01:02:39,https://api.github.com/repos/pegjs/pegjs/git/commits/8e9be9afea75b07490f6d2a5107e5d93abee6b69,8e9be9afea75b07490f6d2a5107e5d93abee6b69,Use CommentMap
futagoza,2018-01-29 02:08:12,https://api.github.com/repos/pegjs/pegjs/git/commits/11bc94f4c35fe0b2cefe78cc0b31101dad496681,11bc94f4c35fe0b2cefe78cc0b31101dad496681,"Updated docs for JavaScript API [ci skip]

This includes detials about the 3 main methods a developer will use along with their respective options.

Closes #553"
futagoza,2018-01-29 02:02:17,https://api.github.com/repos/pegjs/pegjs/git/commits/a5d7cc11a47980e06b70636a8acffe0d31e26067,a5d7cc11a47980e06b70636a8acffe0d31e26067,"ECMA, not ESMA"
futagoza,2018-01-28 23:42:16,https://api.github.com/repos/pegjs/pegjs/git/commits/fe6f09238a398d3b4a0a3d4574b023cff4eb69b8,fe6f09238a398d3b4a0a3d4574b023cff4eb69b8,Relay parser opts from peg.generate (#553)
futagoza,2018-01-28 02:18:02,https://api.github.com/repos/pegjs/pegjs/git/commits/8d711627c10ad671af2641f8aecc7642cb029fba,8d711627c10ad671af2641f8aecc7642cb029fba,Remove usless refrences to peg
futagoza,2018-01-28 02:16:37,https://api.github.com/repos/pegjs/pegjs/git/commits/269b36b9db727909cf9daad59e0e43fba84a2424,269b36b9db727909cf9daad59e0e43fba84a2424,Remove redundant glob for linting
futagoza,2018-01-28 02:08:20,https://api.github.com/repos/pegjs/pegjs/git/commits/a79757683fb0b9afa3ab721f54bb3df7540226bd,a79757683fb0b9afa3ab721f54bb3df7540226bd,Should be 'test/impact master'
futagoza,2018-01-28 02:00:28,https://api.github.com/repos/pegjs/pegjs/git/commits/5476eca59f05dfeb69aae424bf1edd24b280a3d3,5476eca59f05dfeb69aae424bf1edd24b280a3d3,Moved AST and visitor classes
futagoza,2018-01-26 10:32:55,https://api.github.com/repos/pegjs/pegjs/git/commits/f41ef82ce942b723af668742332b367432511ba3,f41ef82ce942b723af668742332b367432511ba3,"Update tsd to include latest changes

These changes are mainly from from @Minigun and @futagoza"
futagoza,2018-01-26 09:33:13,https://api.github.com/repos/pegjs/pegjs/git/commits/4b6ceb2b46306a6425d42b30e3b71607b8d8c519,4b6ceb2b46306a6425d42b30e3b71607b8d8c519,"Fix plugin test that replaces parser

This test broke down aftert I intergrated the AST utils directly into the Grammar class, then I had problems importing the PEG.js parser to use the Grammar class, but found a workaround using 'process.cwd()'"
futagoza,2018-01-26 08:24:51,https://api.github.com/repos/pegjs/pegjs/git/commits/b0a5db1ab964745add140632d72b8bd451612cf2,b0a5db1ab964745add140632d72b8bd451612cf2,Expose ast classes used by parser
futagoza,2018-01-26 08:17:53,https://api.github.com/repos/pegjs/pegjs/git/commits/9ecb21b7497ed27a8956e127b82e3934581b67b2,9ecb21b7497ed27a8956e127b82e3934581b67b2,stripLocation > stripProperties
futagoza,2018-01-26 07:49:34,https://api.github.com/repos/pegjs/pegjs/git/commits/9d266625b42130aeff79fa930182e610082e2d06,9d266625b42130aeff79fa930182e610082e2d06,Merge ast utils into Grammar class
Mingun,2018-01-24 18:12:13,https://api.github.com/repos/pegjs/pegjs/git/commits/1a713d0175d0705c48d036048c6109655904dc2d,1a713d0175d0705c48d036048c6109655904dc2d,"Add some useful debug information to some exceptions (#475)

* Add some useful debug information to some exceptions

* Add guard for visitor functions preventing from cryptic errors due to incomplete visitors

* Add guard for js generator for preventing from cryptic errors due to incarrect stack manipulations"
Mingun,2018-01-24 18:10:45,https://api.github.com/repos/pegjs/pegjs/git/commits/0dab14d652dce2c247c2b1d3cd4be472e9a54ef1,0dab14d652dce2c247c2b1d3cd4be472e9a54ef1,"Add ability to extract comments from the grammar (#511)

All comments stored in the `comments` property of the `grammar` node.
Comments extracted only if the `extractComments` options set to `true` when you generate parser.
This property is object with mapping start offset of comment to comment object, that looks like:

```js
{
  text: 'text in the comment, just after // or /* and before */',
  multiline: true|false,// true for /**/ comments, false for // comments
  location: location()
}
```"
futagoza,2018-01-19 08:55:04,https://api.github.com/repos/pegjs/pegjs/git/commits/b6bc0d905e8c1a1c9cdb825d03980a06a668f5b8,b6bc0d905e8c1a1c9cdb825d03980a06a668f5b8,"Use .js files with -c option on CLI

This commit adds support for '.js' files to be passed to the '-c', '--config'  or '--extra-options-file' options on the CLI, allowing the developer to do some extra work before the parser is generated (if they wish), or dynamically set options based on the enviroment."
futagoza,2018-01-18 21:52:06,https://api.github.com/repos/pegjs/pegjs/git/commits/d06a5b52efcf0fa4b9e5bf21f97607786c1c7db5,d06a5b52efcf0fa4b9e5bf21f97607786c1c7db5,Restore silentFails guard for rule$expects
futagoza,2018-01-18 01:47:13,https://api.github.com/repos/pegjs/pegjs/git/commits/75a41016225033ed9e6f65db5a039f8b7f8bcaea,75a41016225033ed9e6f65db5a039f8b7f8bcaea,"Some cosmetic changes

- Remove unused '__slice' variable
- Nicely indent a map/concat chain
- 'forEach' instead of 'map' in emitted code"
futagoza,2018-01-18 01:24:34,https://api.github.com/repos/pegjs/pegjs/git/commits/f5b323b40124e9ebe1336b509af0716d5a31ce55,f5b323b40124e9ebe1336b509af0716d5a31ce55,"Report consistent errors on look ahead + cached results

This should resolve issue #452, and is based entirely on a fix @nikku did on a local branch of PEG.js v0.10.0 (Currently at https://github.com/nikku/pegjs/tree/452-peg-js-0.10-fix).

Also his test case from #555 is included.

Fixes #452, Closes #555"
Mingun,2018-01-17 16:57:49,https://api.github.com/repos/pegjs/pegjs/git/commits/9b90fa1d8168878bcaef06be57e5d1f27489743c,9b90fa1d8168878bcaef06be57e5d1f27489743c,"Move all codegeneration from `generateBytecode` pass to `generateJs` pass (#459)

* Split 'consts' collection by content types into:

  - literals: for literal expressions, like `""a""`
  - classes: for character class expressions, like `[a]`
  - expectations: for constants describing expected values when parse failed
  - functions: for constants with function code

* Move any JavaScript code generation from 'generateBytecode' to 'generateJs'.
* Rename opcode 'MATCH_REGEXP' to 'MATCH_CLASS' (name reflects purpose, not implementation).
* Replace 'PUSH' opcode with 'PUSH_EMPTY_STRING' opcode because it is only used with empty strings"
futagoza,2018-01-16 04:28:27,https://api.github.com/repos/pegjs/pegjs/git/commits/617b6b7425e055772dd53ff9b06e625cacc825cd,617b6b7425e055772dd53ff9b06e625cacc825cd,"Updated utils and tsd

- Exposed 'visitor.ASTVisitor'
- Remoed 'util.createVisitor'
- Added type 'peg.SourceLocation'
- Updated tsd for 'peg.compiler.visitor'
- Added tsd for 'peg.util.enforceFastProperties'
- Added tsd for new parser modules"
futagoza,2018-01-16 02:57:12,https://api.github.com/repos/pegjs/pegjs/git/commits/27ec5ed9b16b5fa6fa759d63eb8daea15f037639,27ec5ed9b16b5fa6fa759d63eb8daea15f037639,"Ensure we are nearly always in fast mode on V8

See: https://stackoverflow.com/a/24989927/1518408"
futagoza,2018-01-16 02:54:14,https://api.github.com/repos/pegjs/pegjs/git/commits/7a19d46e8a291ca7a80f7507a514455b9e789677,7a19d46e8a291ca7a80f7507a514455b9e789677,"Add the ASTVisitor class (#451)

For compatibility with pre-0.11 plugins, this class lives on the same namespace as the orignal visitor helper and also exports a static method called 'build'."
futagoza,2018-01-16 02:46:41,https://api.github.com/repos/pegjs/pegjs/git/commits/93cc6c5b26854fc6026aa0a2d9202786d336c339,93cc6c5b26854fc6026aa0a2d9202786d336c339,"Parser calls AST node creator now

Before this commit, the PEG.js parser always created the AST using a plain JavaSctript object, but allthough simple and effective for the job, this method sacrificies performance slightly.

From now on the parser shall call a Node creator. This should help with performance, as well as in the future move some AST helpers into the new AST functions."
futagoza,2018-01-14 20:44:53,https://api.github.com/repos/pegjs/pegjs/git/commits/7cdfc03e9f3e87505a638690c90212a4eeabe631,7cdfc03e9f3e87505a638690c90212a4eeabe631,"Added utility methods for objects

Before there used to be some internal utility methods for arrays and objects, but as the code base moved to ES5+ use  case only, these were removed in favour of native alternatives, but most of these were only beneficial for arrays.

This commit add's common utility methods for objects, and also exposes these as they can be used by plugin developer's on the PEG.js AST."
futagoza,2018-01-13 13:42:34,https://api.github.com/repos/pegjs/pegjs/git/commits/02486cef7f36c2c1abeabd5e3631cb02d5429d99,02486cef7f36c2c1abeabd5e3631cb02d5429d99,ignore sh.exe stack trace file
futagoza,2018-01-07 16:32:33,https://api.github.com/repos/pegjs/pegjs/git/commits/1b2072f23923ddd2cf1d27a0f66c7d9abc836249,1b2072f23923ddd2cf1d27a0f66c7d9abc836249,"Fix edgecase in gulpfile.js

There seem's to be an edgecase where a spawned process (in this case node.exe it self) is opened and gulp straight away thinks it closed. At first I thought it was a problem with Gulp, but after fiddleing it seem's to be a Window's problem, so I just updated the `node()` spawner to work on all platforms by using Gulp's callback to create an async task. Problem solved :)"
futagoza,2018-01-07 15:32:28,https://api.github.com/repos/pegjs/pegjs/git/commits/b0056d7a9feae6cbe6a7de4c48c5415b16994116,b0056d7a9feae6cbe6a7de4c48c5415b16994116,Merge branch 'master' of github.com:pegjs/pegjs
Mingun,2018-01-07 14:51:06,https://api.github.com/repos/pegjs/pegjs/git/commits/4cc9185a781ad8ff3b902433809ab452d2586b59,4cc9185a781ad8ff3b902433809ab452d2586b59,"Improve error when reserved word used as label (#552)

Before this commit error looks like (for input `start = break:'a'`)

> Expected ""!"", ""$"", ""&"", ""("", ""*"", ""+"", ""."", ""/"", ""/*"", ""//"", "";"", ""?"", character class, code block, comment, end of line, identifier, literal, or whitespace but "":"" found.

After this error looks like

> Label can't be a reserved word ""break""."
futagoza,2018-01-07 02:12:05,https://api.github.com/repos/pegjs/pegjs/git/commits/1434346332e83e483d2514541237879836488e00,1434346332e83e483d2514541237879836488e00,Move require statement to the top
futagoza,2018-01-07 01:08:35,https://api.github.com/repos/pegjs/pegjs/git/commits/93f9068c99021086941d03b00931149b0001140f,93f9068c99021086941d03b00931149b0001140f,Updated tsd for compiler passes [ci skip]
Mingun,2018-01-06 23:29:24,https://api.github.com/repos/pegjs/pegjs/git/commits/fde1c480f4214be4e4770c94fa0fc91881ba2211,fde1c480f4214be4e4770c94fa0fc91881ba2211,Use chai-like instead of own properties matcher (#550)
Mingun,2018-01-06 23:23:20,https://api.github.com/repos/pegjs/pegjs/git/commits/a480c7d39c80549d1a0795e55d2730d70b083a4f,a480c7d39c80549d1a0795e55d2730d70b083a4f,"Excess points are deleted from the PR template (#551)

They already covered by `lint` and `test` checks [ci skip]"
Mingun,2018-01-05 21:28:09,https://api.github.com/repos/pegjs/pegjs/git/commits/534dc53ac2fe2bf00ac9178f9c7ac3fe6b91d619,534dc53ac2fe2bf00ac9178f9c7ac3fe6b91d619,"Optimize redundant fail checks (#400)

eliminate unnecessary checks for the result of parse, when it can be statically determined"
futagoza,2018-01-03 22:49:44,https://api.github.com/repos/pegjs/pegjs/git/commits/f5699d63fb9c75599ba5111cb8f9df2d25b024e2,f5699d63fb9c75599ba5111cb8f9df2d25b024e2,"Updated devDependencies

- Bump: eslint-config-futagozaryuu@3.8
- Bump:  run-sequence@2.2.1"
futagoza,2018-01-02 02:18:02,https://api.github.com/repos/pegjs/pegjs/git/commits/cb385476c13b6684068765a0a4a010ff6f784aea,cb385476c13b6684068765a0a4a010ff6f784aea,"Updated header for generated browser files

The 'broser/*.js' files should now include the 'eslint-disable' comment directive."
futagoza,2018-01-02 02:08:50,https://api.github.com/repos/pegjs/pegjs/git/commits/92f17983086fec523f461b85180bd5b9ad4baa17,92f17983086fec523f461b85180bd5b9ad4baa17,Moved Babel options to .babelrc
futagoza,2018-01-02 01:50:38,https://api.github.com/repos/pegjs/pegjs/git/commits/06f1565a322793729da38437180822deb53a6153,06f1565a322793729da38437180822deb53a6153,tsd: Added NotExpectation interface
Mingun,2018-01-01 19:35:59,https://api.github.com/repos/pegjs/pegjs/git/commits/42ec335d13229eb64278a844f9da40cb570e713e,42ec335d13229eb64278a844f9da40cb570e713e,"Optimize silent fails: remove checks that always false (#399)

* Optimization: do not generate unreachable calls |peg$fail| and constants for it (local to the rule).
* Optimization: do not generate unreachable calls |peg$fail| and constants for it (non-local to rule)."
Mingun,2017-12-31 22:01:29,https://api.github.com/repos/pegjs/pegjs/git/commits/a7a0a0d9ac4dc228a7b5805569d857da1336155f,a7a0a0d9ac4dc228a7b5805569d857da1336155f,"Bump devDependencies (#549)

- Removed: babel-preset-es2015@6.24.1
- Added: babel-preset-env@1.6.1
- Updated: gulp-mocha@5.0.0
- Updated: nyc@11.4.1
- Updated: vinyl-buffer@1.0.1
- Updated: vinyl-source-stream@2.0.0"
Mingun,2017-12-31 10:59:51,https://api.github.com/repos/pegjs/pegjs/git/commits/669f782a5f3928a2958147992eb07df5b0ecf54a,669f782a5f3928a2958147992eb07df5b0ecf54a,"Partial fix #194 - nonsenses error messages with semantic predicates (#547)

* Remove stack manipulations from FAIL opcode and rename FAIL to EXPECT
* Always save the expected values regardless of the match result of expression
* Remove unnecessary check for match result in the `named` node
* Collect and process expectations from predicates"
futagoza,2017-12-28 01:48:01,https://api.github.com/repos/pegjs/pegjs/git/commits/1b20aa5427234308428aa59b7de9766ae1260f82,1b20aa5427234308428aa59b7de9766ae1260f82,"Ensure usage of 'lib/peg.d.ts'

This commit ensures that all modules outside 'lib' are importing 'lib/peg.js' so that VS Code automatically gets 'lib/peg.d.ts'.

An alias module for 'lib/peg.js' called 'pegjs-dev' was made for test files at 'test/node_modules/pegjs-dev.js'"
futagoza,2017-12-28 01:23:37,https://api.github.com/repos/pegjs/pegjs/git/commits/03cc2eae95cf252b3fa81aad7b220b68ecd37ece,03cc2eae95cf252b3fa81aad7b220b68ecd37ece,Added 'lib/peg.d.ts' for internal use
futagoza,2017-12-28 00:01:35,https://api.github.com/repos/pegjs/pegjs/git/commits/ea688abd02e0dfee24b9747814d8bbe1383e5bce,ea688abd02e0dfee24b9747814d8bbe1383e5bce,Fix shadowing issue on UMD format (#499)
futagoza,2017-12-27 23:35:07,https://api.github.com/repos/pegjs/pegjs/git/commits/cd02806c94e0637706aa20c8487037e05ec42e1c,cd02806c94e0637706aa20c8487037e05ec42e1c,Moved 'package.json:repository' field
futagoza,2017-12-27 23:33:49,https://api.github.com/repos/pegjs/pegjs/git/commits/95409f01551271311688c9d1ea6df3912893f4e5,95409f01551271311688c9d1ea6df3912893f4e5,Moved Github related documents
futagoza,2017-12-27 23:31:35,https://api.github.com/repos/pegjs/pegjs/git/commits/01a2be7b787ca7c53b103b92b2dc7cfe5aaadc48,01a2be7b787ca7c53b103b92b2dc7cfe5aaadc48,Removed 'gulp benchmark' from default tasks
futagoza,2017-12-27 23:04:05,https://api.github.com/repos/pegjs/pegjs/git/commits/d3cbbee592eda311558a342ddbb083e72473a26d,d3cbbee592eda311558a342ddbb083e72473a26d,Added .d.ts declaration files (#519)
futagoza,2017-12-18 21:10:32,https://api.github.com/repos/pegjs/pegjs/git/commits/a02f8091e384d02751437b58b7116ea6568ac1cf,a02f8091e384d02751437b58b7116ea6568ac1cf,"Merge pull request #541 from Mingun/correct-options-in-tests

Auto-add `allowedStartRules` to test options for `changeAST` method if it not defined"
Mingun,2017-10-28 10:57:54,https://api.github.com/repos/pegjs/pegjs/git/commits/3e89534bb70bf9907f2c91b1d9de23db832fef25,3e89534bb70bf9907f2c91b1d9de23db832fef25,Auto-add `allowedStartRules` to test options for `changeAST` and `reportError` methods if it not defined
futagoza,2017-12-18 18:59:16,https://api.github.com/repos/pegjs/pegjs/git/commits/75d655409c8588ebc39cfd88cf7313e549964f5d,75d655409c8588ebc39cfd88cf7313e549964f5d,"Merge pull request #546 from Mingun/coverage

Add code coverage by Istanbul and coveralls.io"
Mingun,2017-12-17 09:13:07,https://api.github.com/repos/pegjs/pegjs/git/commits/3f8cf7cd58c2e038046a94c93636c0ec8444d10c,3f8cf7cd58c2e038046a94c93636c0ec8444d10c,Add coveralls.io support
Mingun,2017-12-16 22:00:05,https://api.github.com/repos/pegjs/pegjs/git/commits/f0e5eebe1a3d6e03170119120466a394c1dd3087,f0e5eebe1a3d6e03170119120466a394c1dd3087,Add code coverage by Intanbul
futagoza,2017-12-18 03:52:23,https://api.github.com/repos/pegjs/pegjs/git/commits/d6142772f878ad67cbb10616c9ccd9ad3990946b,d6142772f878ad67cbb10616c9ccd9ad3990946b,Switch dev to pegjs@dev [ci skip]
futagoza,2017-12-18 01:23:17,https://api.github.com/repos/pegjs/pegjs/git/commits/1dd1487f9be8ca80dcdfb21be3879758d188bf97,1dd1487f9be8ca80dcdfb21be3879758d188bf97,Set version to v0.11.0-dev
futagoza,2017-12-18 00:54:47,https://api.github.com/repos/pegjs/pegjs/git/commits/db70215c4a4813b8c69ccc241d753efe85fc3b03,db70215c4a4813b8c69ccc241d753efe85fc3b03,Added 'header' option (#491)
futagoza,2017-12-17 01:01:00,https://api.github.com/repos/pegjs/pegjs/git/commits/247a0bf707c25aacec957d50b83a056885cc19d5,247a0bf707c25aacec957d50b83a056885cc19d5,Removed non-LTS versions of Node.js
futagoza,2017-12-16 21:51:45,https://api.github.com/repos/pegjs/pegjs/git/commits/f7dd11698a076b6547a5b48a038c8855bfed9a05,f7dd11698a076b6547a5b48a038c8855bfed9a05,"Updates devDependencies

- eslint-config-futagozaryuu
- sinon"
futagoza,2017-11-30 12:49:15,https://api.github.com/repos/pegjs/pegjs/git/commits/2a7dcdcfbe774dc346c355094d37df3a263147d5,2a7dcdcfbe774dc346c355094d37df3a263147d5,"Changed 'bin/usage.txt' to 'bin/usage.js'

This change ensures the usage text always has LF line ending on Linux"
futagoza,2017-11-29 20:52:07,https://api.github.com/repos/pegjs/pegjs/git/commits/881eb67545c2968ab8972cb4a7813ef5df5a80db,881eb67545c2968ab8972cb4a7813ef5df5a80db,"Removed redundant css files

The css files used in the benchmark contained 2 files for IE that contained syntax errors. These files weren't actually used by the benchmark, but were still in the repository."
futagoza,2017-11-29 18:53:12,https://api.github.com/repos/pegjs/pegjs/git/commits/a33eb0b45c2c1f8409ae39aded695fe7cb921ef2,a33eb0b45c2c1f8409ae39aded695fe7cb921ef2,Updated contribution section
futagoza,2017-11-29 18:34:55,https://api.github.com/repos/pegjs/pegjs/git/commits/30d39f62670b2d19f155e9816876633ed9ea0ff3,30d39f62670b2d19f155e9816876633ed9ea0ff3,"Added PR Template

Based on the example at https://github.com/stevemao/github-issue-templates/tree/master/checklist2"
futagoza,2017-11-29 18:34:19,https://api.github.com/repos/pegjs/pegjs/git/commits/280466cc7b56a282413ff91cbefa74ff5f14c5ac,280466cc7b56a282413ff91cbefa74ff5f14c5ac,"Added Issue Template

Based on the example at https://github.com/stevemao/github-issue-templates/tree/master/checklist2"
futagoza,2017-11-29 15:29:42,https://api.github.com/repos/pegjs/pegjs/git/commits/9568522d9c9324d9e0c8e82da3b160b775e8719e,9568522d9c9324d9e0c8e82da3b160b775e8719e,Move guidelines to docs folder
futagoza,2017-11-28 20:42:01,https://api.github.com/repos/pegjs/pegjs/git/commits/123a20a83c53251518dd6879b8c02e739745750c,123a20a83c53251518dd6879b8c02e739745750c,Updated ignored and published files
futagoza,2017-11-28 17:49:51,https://api.github.com/repos/pegjs/pegjs/git/commits/37698d8981c6bb8ad44236458dc6336081142164,37698d8981c6bb8ad44236458dc6336081142164,"Updated NPM scripts & Gulp tasks

- updated names & ordering
- set ""gulp clean"" to also remove generated examples
- added ""gulp lint"" to list of default tasks"
futagoza,2017-10-26 09:20:29,https://api.github.com/repos/pegjs/pegjs/git/commits/b4e5b97a2e550c1d10a350b012da0b0c2343a4e9,b4e5b97a2e550c1d10a350b012da0b0c2343a4e9,Disabled eslint rule 'prefer-spread'
futagoza,2017-10-25 21:42:12,https://api.github.com/repos/pegjs/pegjs/git/commits/5f0001c3e5a4eac920a6aef5507dc09a1c73962a,5f0001c3e5a4eac920a6aef5507dc09a1c73962a,Fix compatibility for older bins
futagoza,2017-10-25 18:19:42,https://api.github.com/repos/pegjs/pegjs/git/commits/e6d018a88d15917ac6df82f255aefa9269652f26,e6d018a88d15917ac6df82f255aefa9269652f26,"Update code format and style

This is related to my last commit. I've updated all the JavaScript files to satisfy 'eslint-config-futagozaryuu', my eslint configuration.

I'm sure I've probally missed something, but I've run all NPM scripts and Gulp tasks, fixed any bugs that cropped up, and updated some stuff (mainly related to generated messages), so as far as I can, tell this conversion is over (I know I've probally jixed it just by saying this ;P)."
futagoza,2017-10-24 18:46:10,https://api.github.com/repos/pegjs/pegjs/git/commits/3c6523ff836b4e8edc38f2b508eb5f3f5b61ee44,3c6523ff836b4e8edc38f2b508eb5f3f5b61ee44,"Switched eslint configuration

Was using 'eslint-config-dmajda' by @dmajda, but since it's diffucult for me to use multiple styles across multiple projects, I'm switching to my own 'eslint-config-futagozaryuu'."
futagoza,2017-10-24 17:49:04,https://api.github.com/repos/pegjs/pegjs/git/commits/50cbcd670449e1212779e0eacd45feb27ed2f23f,50cbcd670449e1212779e0eacd45feb27ed2f23f,"Updated devDependencies

Was planning on doing this after 0.11 (see #497), but since I'm doing an overhaul of the development files now instead, might as well..."
futagoza,2017-10-24 15:38:10,https://api.github.com/repos/pegjs/pegjs/git/commits/35832f474f1051aadeb30f5803bf9c934a5b70ba,35832f474f1051aadeb30f5803bf9c934a5b70ba,"Updated gulpfile.js

- Updated glob for test files
- Updated HEADER var for generated browser build
- Inlined list of JS_FILES to lint
- Added helper 'execFile'
- Simplyfied 'gulp benchmark'
- Parser generator now use's 'bin/peg.js'
- Moved HEADER var into 'browser:build' function
- Simplyfied 'gulp browser:clean'
- removed dependency 'gulp-transform'"
futagoza,2017-10-24 14:26:31,https://api.github.com/repos/pegjs/pegjs/git/commits/9802bae15fb4ca90198204c18803bf00ae240c65,9802bae15fb4ca90198204c18803bf00ae240c65,"test/impact: Add compatibility for older bin files

This ensures the impact test doesn't throw when testing against older commits that contain the bin files at their orignal locations."
futagoza,2017-10-20 18:01:19,https://api.github.com/repos/pegjs/pegjs/git/commits/abadaf4d5d9db5fc0c476de51037bd7fadda678d,abadaf4d5d9db5fc0c476de51037bd7fadda678d,"Add test for empty grammars

This add's a test that ensures grammars without any rules are not accepted."
futagoza,2017-10-15 01:36:10,https://api.github.com/repos/pegjs/pegjs/git/commits/96a386ff154f29c004321823377a72dc6eb19cc9,96a386ff154f29c004321823377a72dc6eb19cc9,Merged documents for test suites
futagoza,2017-10-06 05:20:09,https://api.github.com/repos/pegjs/pegjs/git/commits/5c36738a5258560b741f30e5c61b6b0dea4c20fd,5c36738a5258560b741f30e5c61b6b0dea4c20fd,"Rewrote test/impact as a Node.js script

""test/impact"" was a bash script before, and used tools spefic to some systems, which required Window users to have more software installed.

This rewrite removes the bash script and add's a cross platform Node.js script that doesn't depend on platform-spefic tools."
futagoza,2017-10-02 05:32:20,https://api.github.com/repos/pegjs/pegjs/git/commits/08bbd6d5b60114878e5d160eeda7792ca85a94ed,08bbd6d5b60114878e5d160eeda7792ca85a94ed,"Moved ""eslint-env node"" to the root

It seem's kind of pointless setting the comment ""/* eslint-env node */"" at the top of only some JavaScript files when nearly all of them are Node.js releated, so I moved this option to the root level config, only leaving the 'lib' folder as ""/* eslint-env commonjs */"""
futagoza,2017-10-02 02:49:42,https://api.github.com/repos/pegjs/pegjs/git/commits/5a833bd982f8f43f8df7234d0f177030db53b053,5a833bd982f8f43f8df7234d0f177030db53b053,"Moved all spec and benchmark tests

- Moved benchmark to test/benchmark
- Moved tests to test/spec
- Removed individual servers
- Implemented single test server
- Moved server assets to test/server
- Updated Gulpfile.js
- Moved tools/impact to test/impact

This commit move's nearly all code related to testing the PEG.js module into the test directory, and also ensures they run as they did before the move."
futagoza,2017-09-16 00:27:10,https://api.github.com/repos/pegjs/pegjs/git/commits/a1ad351c2c745ecf60a3f0a75720348206971066,a1ad351c2c745ecf60a3f0a75720348206971066," Add extension for bin file

Fixes #535 (again ...)"
futagoza,2017-09-15 21:22:15,https://api.github.com/repos/pegjs/pegjs/git/commits/14948dad9394c311b635bc52b2b9151e32c59e89,14948dad9394c311b635bc52b2b9151e32c59e89,"Update files field to include bin files

Closes #529, Fixes #535"
felix9,2017-09-15 20:40:14,https://api.github.com/repos/pegjs/pegjs/git/commits/6a9a9a5d23a9e9605430c21a05bdc8d6ad83c0d9,6a9a9a5d23a9e9605430c21a05bdc8d6ad83c0d9,Add more explanation of balanced braces (#533)
felix9,2017-09-15 20:36:19,https://api.github.com/repos/pegjs/pegjs/git/commits/cb3c5f447344176d1460dfd045092ece8a4d90a2,cb3c5f447344176d1460dfd045092ece8a4d90a2,"Improve error message for unbalanced brace. (#534)

Currently, an open brace without a corresponding brace will emit this confusing error message:

> Expected ""!"", ""$"", ""&"", ""("", ""*"", ""+"", ""."", ""/"", ""/*"", ""//"", "";"", ""?"", character class, code block, comment, end of line, identifier, literal, or whitespace but ""{"" found.

This change adds an error case to the grammar to make it clear what the problem is."
felix9,2017-09-14 21:56:39,https://api.github.com/repos/pegjs/pegjs/git/commits/369b8cdcc6f1e9c99357bacd8ef84177a3f5f9b5,369b8cdcc6f1e9c99357bacd8ef84177a3f5f9b5,"Clarify details for the execution environment for actions (#531)

* Clarify execution environment of actions and predicates
* Makes a new section for describing the common execution environment
* Add the new section to TOC
* Clarify start/end for predicates
* Clarify the scope of labels"
felix9,2017-09-12 20:21:35,https://api.github.com/repos/pegjs/pegjs/git/commits/ee00a1ae6ade63bce007e3849cbe6c7ef4e0e72d,ee00a1ae6ade63bce007e3849cbe6c7ef4e0e72d,"Check allowedStartRules exist. (#532)

Fixes #524"
felix9,2017-09-04 04:48:17,https://api.github.com/repos/pegjs/pegjs/git/commits/958e15879d029988af84f6723a4b6136cee5ebb3,958e15879d029988af84f6723a4b6136cee5ebb3,"Reimplement offset() and add range(). (#528)

* Reimplement offset()
* Implement range()

Fixes #526, thanks @felix9"
futagoza,2017-08-30 16:58:04,https://api.github.com/repos/pegjs/pegjs/git/commits/5cde815341daf22adbce96b917c75f4a4d7aae89,5cde815341daf22adbce96b917c75f4a4d7aae89,"Add default export for es format.

This is a minor addition that add's a default export statement (e.g. `export default { ... };`) for the es output format.

Fixes #525"
alanmimms,2017-08-24 19:11:49,https://api.github.com/repos/pegjs/pegjs/git/commits/4cdc6d63531e7c08c160929e922acaef1d6f1d56,4cdc6d63531e7c08c160929e922acaef1d6f1d56,"Do not indent backtick quoted strings in code blocks (#492)

* Do not indent backtick quoted strings in initializer or rule action code blocks
* Use const instead of var for ESLint happiness
* Fix ESLint issues for double quotes and indent6"
futagoza,2017-08-24 03:17:45,https://api.github.com/repos/pegjs/pegjs/git/commits/57bb28414e238808f4ebe8a362996ebe14fdc3bb,57bb28414e238808f4ebe8a362996ebe14fdc3bb,"Merge pull request #509 from Mingun/simplify-bc

Simplify bytecode: remove unnecessary opcode."
futagoza,2017-08-24 01:39:16,https://api.github.com/repos/pegjs/pegjs/git/commits/0ed8c6f89a37dad7883680af64bc99641c54823e,0ed8c6f89a37dad7883680af64bc99641c54823e,"Rewrote command line tool

- Split into 3 files: ""peg.js"", ""options.js"" and ""usage.txt""
- Rewrote arguments parser and helpers to be more precise
- Any arguments after ""--"" will be passed to ""options['--']"" now
- Added negation options: ""--no-cache"" and ""--no-trace""
- Added ""bare"" to accepted module formats
- Added 2 aliases for ""--extra-options-file"": ""-c"" and ""--config""
- Added short options: ""-a"", ""-f"" and ""-p""
- Reformatted help text in ""usage.txt""
- Updated documentation related to command line options and normal options
- Changed ""bin"" field in ""package.json"" from ""bin/pegjs"" to ""bin/peg""
- Added documentation note about command line options that are repeated
- Updated gulpfile.js, replacing ""bin/pegjs"" with ""bin/*.js""

See #429, which was what I intended to fix/solve, but instead pushed back and did this instead."
futagoza,2017-08-23 08:41:45,https://api.github.com/repos/pegjs/pegjs/git/commits/d7d5f375f132d1201f321b4861635b4d8058e68a,d7d5f375f132d1201f321b4861635b4d8058e68a,"Removed redundant .eslintrc

See https://github.com/pegjs/pegjs/commit/55bcaa46efe6f4ffe0521109d57de65f7c4f68d5"
futagoza,2017-08-23 08:20:05,https://api.github.com/repos/pegjs/pegjs/git/commits/48a0c37997ccf7321f45ce5a4d19f93b935e329a,48a0c37997ccf7321f45ce5a4d19f93b935e329a,Fix link for dot character [ci skip]
futagoza,2017-08-20 11:44:08,https://api.github.com/repos/pegjs/pegjs/git/commits/6661f6b9588c62042f49798c68b15dd5503caf1d,6661f6b9588c62042f49798c68b15dd5503caf1d,"Updated documentation

- Updated Badges
- Moved the introduction back to the top
- Added a title for the TOC list
- Added ""Latest"" sub-section (closes #521)
- Added ""Case-insensitivity"" sub-section (see #518)
- Added ""Backtracking"" sub-section (closes #438)
- Fixed link for . (dot character)
- Added a title for the links in the development section
- Added ""Contribution"" sub-section (closses #457)
- Updated the TOC list"
futagoza,2017-08-20 07:05:30,https://api.github.com/repos/pegjs/pegjs/git/commits/b926be7d717a5125179448cf328c6efc1fb591c8,b926be7d717a5125179448cf328c6efc1fb591c8,Added npm scripts for gulp tasks
futagoza,2017-08-20 05:57:10,https://api.github.com/repos/pegjs/pegjs/git/commits/dcf9790da0a659863c80bbd9b0aeb557078676bc,dcf9790da0a659863c80bbd9b0aeb557078676bc,"Ensure 'package-lock.json' is never created

I've noticed on Travis that if a project is testing on Node.js 8 then NPM will automatically create the 'package-lock.json' file, but it's best not to use this file yet.

See https://github.com/pegjs/pegjs/commit/10ec7f0576a9d070b0bb9542d98250a0a0576a2a"
futagoza,2017-07-22 15:01:13,https://api.github.com/repos/pegjs/pegjs/git/commits/30ea7d5ed0e3e24b18f8a309227cf3ef3dd82b9a,30ea7d5ed0e3e24b18f8a309227cf3ef3dd82b9a,"Fix ""gulp benchmark"" for Windows

I'm presuming this task worked fine on Linux, but I use a Windows 10 laptop, and since Windows doesn't open extensionless files to check their shebang, this task failed.

Node.js on the other hand ignore's JavaScript files with a shebang, so this simple fix should make it work on all platforms now."
futagoza,2017-07-22 14:45:10,https://api.github.com/repos/pegjs/pegjs/git/commits/55bcaa46efe6f4ffe0521109d57de65f7c4f68d5,55bcaa46efe6f4ffe0521109d57de65f7c4f68d5,"Updated ESLint configuration files

- added ""root"" option to main config
- moved ""env.commonjs"" to root"
futagoza,2017-07-22 14:10:26,https://api.github.com/repos/pegjs/pegjs/git/commits/10ec7f0576a9d070b0bb9542d98250a0a0576a2a,10ec7f0576a9d070b0bb9542d98250a0a0576a2a,"Removed `package-lock.json`

See npm/npm#16866"
futagoza,2017-07-17 10:28:48,https://api.github.com/repos/pegjs/pegjs/git/commits/8cf81b47b7fef478d950d4cf602c3380a112cca7,8cf81b47b7fef478d950d4cf602c3380a112cca7,Ensure bin/*.js files use LF instead of CRLF
futagoza,2017-06-26 18:23:37,https://api.github.com/repos/pegjs/pegjs/git/commits/1afe682c65b1bb73e5c646abe40049c1f39cb4f6,1afe682c65b1bb73e5c646abe40049c1f39cb4f6,"Merge pull request #510 from Mingun/group-location

Add location information to group AST node"
Mingun,2017-06-24 18:34:50,https://api.github.com/repos/pegjs/pegjs/git/commits/c98fee162999e07676261302855c3f07a62aeaf8,c98fee162999e07676261302855c3f07a62aeaf8,Add location information to group AST node
Mingun,2017-06-24 17:36:21,https://api.github.com/repos/pegjs/pegjs/git/commits/575db38d1f6bcec79bb764f01b1ccd408fc310df,575db38d1f6bcec79bb764f01b1ccd408fc310df,"Simplify bytecode: remove unnecessary opcode.

Now generated sources looks little better :)"
futagoza,2017-06-14 22:37:38,https://api.github.com/repos/pegjs/pegjs/git/commits/03912dc7613885a35699d06d8609a9b06055c622,03912dc7613885a35699d06d8609a9b06055c622,Create CODE_OF_CONDUCT.md
futagoza,2017-06-12 07:15:14,https://api.github.com/repos/pegjs/pegjs/git/commits/928fdca6ac3340b5cb405b36f3d35568901b2eae,928fdca6ac3340b5cb405b36f3d35568901b2eae,Added TOC's [skip ci]
futagoza,2017-06-12 06:40:38,https://api.github.com/repos/pegjs/pegjs/git/commits/8856913ae878f2466423a2106fc2823e9729dfc2,8856913ae878f2466423a2106fc2823e9729dfc2,Updated maintainer #503
futagoza,2017-06-12 06:09:27,https://api.github.com/repos/pegjs/pegjs/git/commits/9658f4a92df52a2115d2f2160fafd0c4224c0b64,9658f4a92df52a2115d2f2160fafd0c4224c0b64,Added package-lock.json
futagoza,2017-06-12 06:08:34,https://api.github.com/repos/pegjs/pegjs/git/commits/081856cdebec292a554817ea623eb4e04fa5d2be,081856cdebec292a554817ea623eb4e04fa5d2be,"Set ""linebreak-style"" rule to 0"
futagoza,2017-06-12 04:23:13,https://api.github.com/repos/pegjs/pegjs/git/commits/5e3ed79f95f80940b71e52f79812cf0dadc90685,5e3ed79f95f80940b71e52f79812cf0dadc90685,"Merge pull request #415 from sampsyo/master

Docs: try to explain error messages"
futagoza,2017-06-12 01:13:06,https://api.github.com/repos/pegjs/pegjs/git/commits/6939d1eb8d4b36df9be08696b75d2ca526845794,6939d1eb8d4b36df9be08696b75d2ca526845794,"Merge pull request #481 from fatfisz/esm-support

Add support for ES modules"
futagoza,2017-06-12 01:12:38,https://api.github.com/repos/pegjs/pegjs/git/commits/bc5c8a0f97c6a8a113280c5d859a8644cae2765b,bc5c8a0f97c6a8a113280c5d859a8644cae2765b,Add support for testing with Node.js 8
fatfisz,2017-06-11 17:03:33,https://api.github.com/repos/pegjs/pegjs/git/commits/9c60380f8696fd971e9452e9ebe548f13301e55e,9c60380f8696fd971e9452e9ebe548f13301e55e,Add info about es to the cmd tool
fatfisz,2016-12-26 13:20:23,https://api.github.com/repos/pegjs/pegjs/git/commits/d1f62596f15042bb835880a4e70b4cbbcef12a16,d1f62596f15042bb835880a4e70b4cbbcef12a16,"Add info about the ""es"" target to the README"
fatfisz,2016-12-26 13:16:24,https://api.github.com/repos/pegjs/pegjs/git/commits/c541911c04d79c86500206fbe9db40e60e5c887a,c541911c04d79c86500206fbe9db40e60e5c887a,"Extract formats into array

Previously there was a very long condition."
fatfisz,2016-12-26 13:08:24,https://api.github.com/repos/pegjs/pegjs/git/commits/e3b7f0c3a94b7cb6b6ed5ac9299f12721940e952,e3b7f0c3a94b7cb6b6ed5ac9299f12721940e952,"Change ""esm"" to ""es"""
fatfisz,2016-12-10 13:52:15,https://api.github.com/repos/pegjs/pegjs/git/commits/aab928de911bf0cac7cafdb5284e80c56d4703b6,aab928de911bf0cac7cafdb5284e80c56d4703b6,Add support for ES modules
futagoza,2017-06-11 11:25:14,https://api.github.com/repos/pegjs/pegjs/git/commits/35f3c5267a062646c8f5762af37f31c5443f0696,35f3c5267a062646c8f5762af37f31c5443f0696,"Merge pull request #490 from chearon/css-num-fix

CSS example: parse decimal form of nums correctly"
futagoza,2017-06-11 00:48:14,https://api.github.com/repos/pegjs/pegjs/git/commits/f18cf30d762c4f1eb3a92934ea895fdcf151ae72,f18cf30d762c4f1eb3a92934ea895fdcf151ae72,"Merge pull request #493 from AdhirRamjiawan/master

spelling error"
futagoza,2017-06-09 20:52:31,https://api.github.com/repos/pegjs/pegjs/git/commits/91c85d824d5b0a05b786799149086deb4fa01d04,91c85d824d5b0a05b786799149086deb4fa01d04,"Merge pull request #494 from davidberneda/patch-1

Update arithmetics.pegjs"
futagoza,2017-05-22 19:27:04,https://api.github.com/repos/pegjs/pegjs/git/commits/624f87f66b18e29d93da8f5fcecac540cf214de8,624f87f66b18e29d93da8f5fcecac540cf214de8,"README.md: Remove the notice about looking for a new maintainer [ci skip]

PEG.js has [a new maintainer](https://github.com/pegjs/pegjs/issues/503#issuecomment-303004127)."
dmajda,2017-05-07 11:47:28,https://api.github.com/repos/pegjs/pegjs/git/commits/ba2f8bf3c2f51a4d2baed681a53325c6bc1e4c5b,ba2f8bf3c2f51a4d2baed681a53325c6bc1e4c5b,README.md: Add a notice about looking for a new maintainer
AdhirRamjiawan,2017-03-08 06:56:56,https://api.github.com/repos/pegjs/pegjs/git/commits/f861c2f476e61e57bfd8184967296ec0a9acb15f,f861c2f476e61e57bfd8184967296ec0a9acb15f,spelling error
chearon,2017-02-15 02:01:32,https://api.github.com/repos/pegjs/pegjs/git/commits/770ca6e7232ee87b503820d8f4034edeed5ee689,770ca6e7232ee87b503820d8f4034edeed5ee689,"CSS example: parse decimal form of nums correctly

Before, 0.02 could get parsed as 0 and 0.02 when looking for nums+"
dmajda,2016-12-16 15:44:08,https://api.github.com/repos/pegjs/pegjs/git/commits/205c55d3099ed8247a274a6aec7914356224bae3,205c55d3099ed8247a274a6aec7914356224bae3,"Tests: s/Spec/Test/

Missed in f5a372b075d633bc288019c8cd1b7b4c8a47f5ae (I probably grepped
case-sensitively)."
dmajda,2016-12-16 13:18:02,https://api.github.com/repos/pegjs/pegjs/git/commits/2942fa18673a5ad4716087f9c168f6392e1b0496,2942fa18673a5ad4716087f9c168f6392e1b0496,"Tests: Make tracing tests more specific

Check that the console and the default tracer are called with specific
arguments in given order. Previously the order of calls wasn't checked."
dmajda,2016-12-16 13:14:05,https://api.github.com/repos/pegjs/pegjs/git/commits/9cc35d2cab3456fead374b00eb2d983736af5d5f,9cc35d2cab3456fead374b00eb2d983736af5d5f,Tests: DRY up tracing tests
dmajda,2016-12-16 12:43:22,https://api.github.com/repos/pegjs/pegjs/git/commits/5d6bd756196c4e27129d09afe849c721226d8e7e,5d6bd756196c4e27129d09afe849c721226d8e7e,"Tests: Use ""to.be.{a,an}"" instead of ""expect(typeof ...)"""
dmajda,2016-12-16 12:21:48,https://api.github.com/repos/pegjs/pegjs/git/commits/6817f3b96416427f4d976d42e9801293ff8b754d,6817f3b96416427f4d976d42e9801293ff8b754d,"Tests: Require specific modules instead of the whole library

Requiring the whole library was a relict from the time where the tests
were exercising the browser build when run in the browser."
dmajda,2016-12-08 09:45:07,https://api.github.com/repos/pegjs/pegjs/git/commits/9f361316378403c44ef9e281bc13f1428472e0c5,9f361316378403c44ef9e281bc13f1428472e0c5,"Use https: in links to majda.cz

This avoids redirects."
dmajda,2016-12-08 09:31:12,https://api.github.com/repos/pegjs/pegjs/git/commits/e0511a55d583225695990b3a8fcc4e4509e3ee0a,e0511a55d583225695990b3a8fcc4e4509e3ee0a,.travis.yml: Test also with Node.js 7.0.x
dmajda,2016-12-08 09:26:30,https://api.github.com/repos/pegjs/pegjs/git/commits/f982e1cfd1c5279ad9b13e4be8295134b49c81e3,f982e1cfd1c5279ad9b13e4be8295134b49c81e3,"README.md: Indicate that IE8 is unsupported

Should have been done as part of #441."
dmajda,2016-12-08 09:23:11,https://api.github.com/repos/pegjs/pegjs/git/commits/95d1e0decff2fc5574555e696002b806b358b7b5,95d1e0decff2fc5574555e696002b806b358b7b5,"package.json: Use exact version of run-sequence

The package was added with a version range (""^"") by mistake."
dmajda,2016-12-08 09:05:17,https://api.github.com/repos/pegjs/pegjs/git/commits/f5a372b075d633bc288019c8cd1b7b4c8a47f5ae,f5a372b075d633bc288019c8cd1b7b4c8a47f5ae,"Use ""test"" and ""tests"" instead of ""spec"" and ""specs""

This reflects a convention used in most JavaScript projects. The change
involves renaming the ""spec"" directory, Gulp task, etc."
dmajda,2016-12-08 07:59:04,https://api.github.com/repos/pegjs/pegjs/git/commits/73de2c9384159b6afe9153d169e6258b45126c66,73de2c9384159b6afe9153d169e6258b45126c66,"Switch from Jasmine to Mocha & Chai

The switch is mostly mechanical, with assertions translated 1:1. The
biggest non-mechanical part is rewriting Jasmine custom matchers as Chai
helpers. The matchers were streamlined and simplified in the process and
their messages were made more in line with messages produced by built-in
Chai helpers.

Fixes #409."
dmajda,2016-12-04 10:24:33,https://api.github.com/repos/pegjs/pegjs/git/commits/266f17d11c772b6af334a6e2db63f71ce1b0fbf1,266f17d11c772b6af334a6e2db63f71ce1b0fbf1,"Adapt to using HTTPS on PEG.js website

PEG.js website is now served exclusively using HTTPS. Change protocol in
all links to it to avoid redirects."
dmajda,2016-12-01 15:30:10,https://api.github.com/repos/pegjs/pegjs/git/commits/a733beb933d67b725c4972c97b8e5929792224bd,a733beb933d67b725c4972c97b8e5929792224bd,"Remove unnecessary escaping of ""]"" in a regexp

This fixes the following ESLint error, which started to appear after
eslint/eslint#7424 was fixed:

  /Users/dmajda/Programming/PEG.js/pegjs/lib/compiler/js.js
    37:17  error  Unnecessary escape character: \]  no-useless-escape

This should fix broken Travis CI builds:

  https://travis-ci.org/pegjs/pegjs/builds/180092802"
dmajda,2016-12-01 14:46:04,https://api.github.com/repos/pegjs/pegjs/git/commits/b5bd30c813fccd674995c3f61f843162236a076c,b5bd30c813fccd674995c3f61f843162236a076c,"gulpfile.js: Use ""run-sequence"" to run default tasks

Instead of specifying tasks that are part of the ""default"" task using
dependencies and running them in parallel, execute them serially using
""run-sequence"". This makes things deterministic and ensures that all
messages from all tasks are seen in the output (which wasn't the case
before, leading to confusion)."
dmajda,2016-10-11 10:18:27,https://api.github.com/repos/pegjs/pegjs/git/commits/9d12b500df1b427dc9d21b366516e7e7312f0fe5,9d12b500df1b427dc9d21b366516e7e7312f0fe5,.travis.yml: Separate entries with empty lines
dmajda,2016-10-11 10:00:34,https://api.github.com/repos/pegjs/pegjs/git/commits/b33f2b2d24508d623ab9a637f921d6b8897f7c98,b33f2b2d24508d623ab9a637f921d6b8897f7c98,"Remove VERSION

Version information is already present in package.json and no code uses
the VERSION file anymore. It doesn't make sense too keep it just for the
sake of following an old convention as it is a maintenance burden."
dmajda,2016-10-11 09:33:20,https://api.github.com/repos/pegjs/pegjs/git/commits/9956b423927e4ecddfe1e48cb432a4766a8040db,9956b423927e4ecddfe1e48cb432a4766a8040db,"Switch from Make to Gulp

The core of the transition is getting rid of Makefile and replacing it
with gulpfile.js. The rest is details (fixing dependencies, changing all
references to ""make"", etc.).

Target/task names mostly stay the same, so in most cases ""gulp foo"" does
what ""make foo"" did before. The only exceptions are ""make browser"" and
""make browserclean"", which are now ""gulp browser:build"" and ""gulp
browser:clean"" (it feels more systematic).

Functionality is mostly unchanged (modulo Gulp clutter in the console),
but there are two small exceptions:

  gulp spec

    The reporter now displays just dots while previously it displayed
    spec descriptions. There is also a deprecation warning (most likely
    because I used an old version of gulp-jasmine in order to support
    Jasmine 1.x). I kept these issues unfixed because I plan to switch
    to Mocha soon (#409).

  gulp browser:build

    The copyright header is now added manually both to the development
    and minified build. Before, it was added only to the development
    build and the minified build relied on preserving it using ""uglify
    --comments"". This was broken since switching to //-style comments.

    There is now also an empty line between the header and the source
    code.

Fixes #444."
dmajda,2016-10-10 12:29:27,https://api.github.com/repos/pegjs/pegjs/git/commits/ef3abf33b956d71541759abf883d0e063400a87f,ef3abf33b956d71541759abf883d0e063400a87f,"Fix error when generating AMD/UMD dependencies

Generating AMD/UMD dependencies lead to an error:

  $ bin/pegjs --format amd --dependency $:jquery examples/arithmetics.pegjs
  dependencyIds is not defined

  $ bin/pegjs --format umd --dependency $:jquery examples/arithmetics.pegjs
  dependencyIds is not defined

This commit fixes the problem, which was caused by a mistake done in
d2569b9bf3d4b8843d4a0e82de2e1681e16fd27a."
dmajda,2016-10-10 11:38:39,https://api.github.com/repos/pegjs/pegjs/git/commits/83d748d52250e3e93c72a14091f3e7570ffc3dc8,83d748d52250e3e93c72a14091f3e7570ffc3dc8,"Code style: Make all static ""require"" calls global

The ""global-require"" rule is disabled in ESLint configuration used by
PEG.js, but the idea is not bad, so let's make all static ""require""
calls global.

Follow-up to #407."
dmajda,2016-10-10 11:32:33,https://api.github.com/repos/pegjs/pegjs/git/commits/f4df9ddde171122d8b875a03ff94df669cdbf930,f4df9ddde171122d8b875a03ff94df669cdbf930,"Code style: Fix some ESLint errors in generated code

Running ESLint on generated code with the configuration used on PEG.js
itself produces a lot of errors. This commit fixes some unnecessary ones
caught by these rules:

  - max-len
  - new-cap
  - newline-before-return
  - no-unused-vars

See also 5dd8e797f7babbc971874f0e2c80073f7077d9db.

Follow-up to #407."
dmajda,2016-10-07 19:03:32,https://api.github.com/repos/pegjs/pegjs/git/commits/7d6ad99e335451b5800988ec14dbf8b8e9ff34d6,7d6ad99e335451b5800988ec14dbf8b8e9ff34d6,"Code style: Remove unnecessary ""eslint-disable"" directives

Part of #407."
dmajda,2016-10-07 19:01:41,https://api.github.com/repos/pegjs/pegjs/git/commits/8471b621a89e782130b1be3a9f07e7bdd5dcb4a1,8471b621a89e782130b1be3a9f07e7bdd5dcb4a1,"Code style: Fix ESLint ""newline-before-return"" errors

Part of #407."
dmajda,2016-10-07 18:58:31,https://api.github.com/repos/pegjs/pegjs/git/commits/2cb94adba73460d41537270c6b01bf2745206f01,2cb94adba73460d41537270c6b01bf2745206f01,"Code style: Fix ESLint ""space-in-parens"" errors

Part of #407."
dmajda,2016-10-07 18:56:39,https://api.github.com/repos/pegjs/pegjs/git/commits/6c3565fc96480314c7ff53ace5300d31a02c924c,6c3565fc96480314c7ff53ace5300d31a02c924c,"Code style: Fix ESLint ""func-style"" errors

Part of #407."
dmajda,2016-10-07 18:54:10,https://api.github.com/repos/pegjs/pegjs/git/commits/88f115146da2feea85db20cce495b6b337f8a4b6,88f115146da2feea85db20cce495b6b337f8a4b6,"Code style: Fix ESLint ""space-infix-ops"" errors

Part of #407."
dmajda,2016-10-07 18:51:28,https://api.github.com/repos/pegjs/pegjs/git/commits/80a9e0361457992d5d9610fdeeeb82749c5eea7d,80a9e0361457992d5d9610fdeeeb82749c5eea7d,"Code style: Fix ESLint ""no-empty-function"" errors

Part of #407."
dmajda,2016-10-07 18:50:30,https://api.github.com/repos/pegjs/pegjs/git/commits/fd07f64637b5a449c802fc974b16b50160c206ed,fd07f64637b5a449c802fc974b16b50160c206ed,"Code style: Fix ESLint ""indent"" errors

Part of #407."
dmajda,2016-10-07 18:49:12,https://api.github.com/repos/pegjs/pegjs/git/commits/e61ae596819107812e2100f5f8662e051d6c67a6,e61ae596819107812e2100f5f8662e051d6c67a6,"Code style: Fix ESLint ""default-case"" errors

Part of #407."
dmajda,2016-10-07 18:44:26,https://api.github.com/repos/pegjs/pegjs/git/commits/364482dd686fd85ca99170aefd62490748f2f6be,364482dd686fd85ca99170aefd62490748f2f6be,"Code style: Fix ESLint ""no-prototype-builtins"" errors

Part of #407."
dmajda,2016-10-07 15:03:10,https://api.github.com/repos/pegjs/pegjs/git/commits/1870308afbe677d1d8e421a1aa5d8a63ba456464,1870308afbe677d1d8e421a1aa5d8a63ba456464,"Code style: Fix ESLint ""object-shorthand"" errors

Part of #407."
dmajda,2016-10-07 12:30:14,https://api.github.com/repos/pegjs/pegjs/git/commits/6f34b542b42fad5587bbad8a56f425389dfc2b10,6f34b542b42fad5587bbad8a56f425389dfc2b10,"Code style: Use eslint-config-dmajda ESLint configuration

This change leads to quite some errors being reported by ESLint. These
will be fixed in subsequent commits.

Part of #407."
dmajda,2016-10-05 09:09:03,https://api.github.com/repos/pegjs/pegjs/git/commits/5dd8e797f7babbc971874f0e2c80073f7077d9db,5dd8e797f7babbc971874f0e2c80073f7077d9db,"Code style: Do not lint lib/parser.js

The idea behind linting lib/parser.js was that it would improve quality
of code generated by PEG.js in general. However, there is a couple of
problems with it:

  1. Code in lib/parser.js is ES5 while the rest of the code is ES2015.
     This would mean a separate ESLint configuration and a separate set
     of code style rules just for lib/parser.js once code style checks
     are added.

  2. Code in lib/parser.js is generated. This means that even today it
     violates checks like ""no-unused-var"", which have to be disabled.
     This would get worse once code style checks are added, again
     requiring a separate ESLint configuration just for lib/parser.js.

  3. Linting lib/parser.js checks only small portion of possible code
     generator output. For example, code generated when optimizing for
     size or when tracing is not checked at all. Thus, linting
     lib/parser.js gives a false sense of security.

Because of these problems I decided not to lint lib/parser.js at all and
rely on ad-hoc linting of parser files produced by PEG.js with ignoring
false-positives. I consider this more of a pragmatic cost vs. benefits
decision than a principial one.

Part of #407."
dmajda,2016-10-04 18:25:39,https://api.github.com/repos/pegjs/pegjs/git/commits/f82d9872ba0e029ae23d229a716cdcf573eee467,f82d9872ba0e029ae23d229a716cdcf573eee467,"Replace stray ""var"" by ""let""

Likely missed in bdf91b594171529138a3e278809993168688ca16."
dmajda,2016-10-04 18:05:10,https://api.github.com/repos/pegjs/pegjs/git/commits/65afb7fd5d4e43492125bdd1a633039c0d289821,65afb7fd5d4e43492125bdd1a633039c0d289821,Remove unnecessary parens around arrow function parameters
dmajda,2016-10-04 14:53:07,https://api.github.com/repos/pegjs/pegjs/git/commits/7495e6e03fc523044b6ce9506e2f4dcc2941b639,7495e6e03fc523044b6ce9506e2f4dcc2941b639,Add missing semicolons
dmajda,2016-10-04 14:25:54,https://api.github.com/repos/pegjs/pegjs/git/commits/b81afb147129504f1d35ca11764a289548261f6c,b81afb147129504f1d35ca11764a289548261f6c,"Do not quote the ""class"" key

Quoting reserved words in property names is not needed since dropping
support of IE < 9."
dmajda,2016-10-04 13:28:05,https://api.github.com/repos/pegjs/pegjs/git/commits/fb26d6425bab384afa9bb15ca09bb1d91ae9609c,fb26d6425bab384afa9bb15ca09bb1d91ae9609c,Remove extra newlines
dmajda,2016-10-04 10:42:46,https://api.github.com/repos/pegjs/pegjs/git/commits/45b62d66d230aa483d916fba0f8a2f83135d1ffb,45b62d66d230aa483d916fba0f8a2f83135d1ffb,Whitespace fixes
dmajda,2016-10-01 13:37:44,https://api.github.com/repos/pegjs/pegjs/git/commits/47bc456dcded9de319481bd34123f39274b1c897,47bc456dcded9de319481bd34123f39274b1c897,Remove useless variable reference
dmajda,2016-10-04 09:15:52,https://api.github.com/repos/pegjs/pegjs/git/commits/ec3f7f5bb07ffb3fb72aa0c2a67bc8642eea2474,ec3f7f5bb07ffb3fb72aa0c2a67bc8642eea2474,Remove extra indentation
dmajda,2016-10-04 09:00:25,https://api.github.com/repos/pegjs/pegjs/git/commits/7ca229a43247636de73e35248ca8597a1e70b04f,7ca229a43247636de73e35248ca8597a1e70b04f,"Improve indentation of variable declarations

Before this commit, continuation lines of multi-line values in variable
declaration initializers were aligned with the variable name:

  let foo = {
        a: 5,
        b: 6
      };

This was highly irregular, maintenance intensive, and made declarations
look different from assignments.

This commit changes the indentation to be more regular and similar to
assignments:

  let foo = {
    a: 5,
    b: 6
  };"
dmajda,2016-09-30 12:30:54,https://api.github.com/repos/pegjs/pegjs/git/commits/b5eb1a0ec43b6d89760abb137936d969dd54eb0e,b5eb1a0ec43b6d89760abb137936d969dd54eb0e,Use eslint 3.6.1
dmajda,2016-09-29 09:50:54,https://api.github.com/repos/pegjs/pegjs/git/commits/ca5ac6bd5f2b3eb09a8170ee3ed93d25f21a0ab8,ca5ac6bd5f2b3eb09a8170ee3ed93d25f21a0ab8,"LICENSE: Use more standard format

The LICENSE file used weird word wrapping and it didn't explicitly name
the license. I'm not sure where I originally copied it from.

I decided to replace it with more standard form from here:

  http://choosealicense.com/licenses/mit/

The content of the license stays exactly the same."
dmajda,2016-09-29 09:36:18,https://api.github.com/repos/pegjs/pegjs/git/commits/c0efd8339430763acbb381fcad2af34c403e4e39,c0efd8339430763acbb381fcad2af34c403e4e39,benchmark/README.md: Fix command to execute the benchmark suite
dmajda,2016-09-29 09:24:51,https://api.github.com/repos/pegjs/pegjs/git/commits/e29d62558d2408fc7f9de2504b58effe7fe891e4,e29d62558d2408fc7f9de2504b58effe7fe891e4,"Do not prepend the ""eslint-env"" directive to lib/parser.js

The lib/parser.js file is a CommonJS module like all the other files in
lib/, so setting the environment explicitly is not needed. Besides, the
environment set by ""eslint-env"" was wrong (since transitioning from the
AMD format)."
dmajda,2016-09-29 09:14:22,https://api.github.com/repos/pegjs/pegjs/git/commits/c721b9bf6ed97a20a7dd3d9b8f9fc4c676bce9e8,c721b9bf6ed97a20a7dd3d9b8f9fc4c676bce9e8,"Omit PEG.js version from browser version file name

This makes upgrades easier for browser version users and it is in line
with most other JavaScript projects."
dmajda,2016-09-23 04:30:52,https://api.github.com/repos/pegjs/pegjs/git/commits/ff3cc7930e9fd4bfb2f89a6fd7bcd0ed2b196f19,ff3cc7930e9fd4bfb2f89a6fd7bcd0ed2b196f19,"CSS Example: Move null filtering from extractList to buildList

This makes extractList identical to the same function in other grammars
and makes it so that nulls are dealt with in only one function (until
now, they were dealt with both in extractList and buildList).

The refactoring should be safe as extractList isn't by itself used in
contexts where it can be passed a list containing nulls."
dmajda,2016-09-23 04:20:08,https://api.github.com/repos/pegjs/pegjs/git/commits/647d4881473afb6af3968032ad9b9f01e4254581,647d4881473afb6af3968032ad9b9f01e4254581,JSON example: Fix link to RFC 4234.
dmajda,2016-09-23 04:16:23,https://api.github.com/repos/pegjs/pegjs/git/commits/2baeace2356f971ddea47844aa8537873d271b1f,2baeace2356f971ddea47844aa8537873d271b1f,"JSON example: Expand some one-line rules to multiple lines

Blocks of one-line rules with aligned ""="" signs should be used only in
cases where the rules are symmetric and we want to emphasize that.

Follow-up to ff7193776e62d451b740b391a803246d89d31108."
dmajda,2016-09-23 04:01:04,https://api.github.com/repos/pegjs/pegjs/git/commits/1508e804a66084987ea3d57d836aaea5fcc90adc,1508e804a66084987ea3d57d836aaea5fcc90adc,parser.spec.js: Remove extra spaces
dmajda,2016-09-23 04:00:27,https://api.github.com/repos/pegjs/pegjs/git/commits/65ea01cd631abbe8a5d818185fc9ac7a78c3d338,65ea01cd631abbe8a5d818185fc9ac7a78c3d338,parser.spec.js: Fix comment typo
dmajda,2016-09-23 03:56:52,https://api.github.com/repos/pegjs/pegjs/git/commits/9808b88ccbf2d9267d41abcbd2f916d97e8e7922,9808b88ccbf2d9267d41abcbd2f916d97e8e7922,generated-parser-behavior.spec.js: Move variable inside loop
dmajda,2016-09-22 17:20:50,https://api.github.com/repos/pegjs/pegjs/git/commits/6e463e21138b0889cf85f6ecb2eaac3a425539b5,6e463e21138b0889cf85f6ecb2eaac3a425539b5,"{spec,benchmark}/server: Use template literals"
dmajda,2016-09-22 17:10:48,https://api.github.com/repos/pegjs/pegjs/git/commits/70e59fc5d078e0d1f1c3c73019e1816c22c26427,70e59fc5d078e0d1f1c3c73019e1816c22c26427,"{spec,benchmark}/server: Remove extra trailing newline"
dmajda,2016-09-22 15:05:42,https://api.github.com/repos/pegjs/pegjs/git/commits/9648ca53d75d2adb52996a9e81797d888be660c1,9648ca53d75d2adb52996a9e81797d888be660c1,"Use the ""eslint-disable"" directive instead of ""eslint""

The ""eslint-disable"" directive is more specific."
dmajda,2016-09-22 14:59:47,https://api.github.com/repos/pegjs/pegjs/git/commits/60821bb80b6223ffa7657383faa87fa4098b28d8,60821bb80b6223ffa7657383faa87fa4098b28d8,"Sort ""require"" calls by variable names and group them

This makes things consistent and reduces thinking about ""require""
ordering."
dmajda,2016-09-22 14:23:24,https://api.github.com/repos/pegjs/pegjs/git/commits/c134e06229d97e04c40e4c8c496714c03c8ee4d3,c134e06229d97e04c40e4c8c496714c03c8ee4d3,"Move ""use strict"" directives up

Move ""use strict"" directives to the first line of each file. In
particular, move them above any ESLint comments, which are far less
important.

There are few exceptions:

  Executable files

    In these, the ""use strict"" directive must give way to the shebang.

  lib/parser.js

    Here, the ""Generated by..."" comment comes first. Also, ESLint
    comments are prepended in post-processing."
dmajda,2016-09-22 07:25:31,https://api.github.com/repos/pegjs/pegjs/git/commits/ff7193776e62d451b740b391a803246d89d31108,ff7193776e62d451b740b391a803246d89d31108,"Avoid aligning ""=""

The only exception left are instances where aligning ""="" helps to
express symmetry between lines.

See #443."
dmajda,2016-09-22 03:25:09,https://api.github.com/repos/pegjs/pegjs/git/commits/400a3cfa3c0512991dfb71f205b5b81c945d36b5,400a3cfa3c0512991dfb71f205b5b81c945d36b5,"Avoid aligning object keys

The only exception left are objects representing a mapping with simple
keys and values -- essentially tables written as object literals.

See #443."
dmajda,2016-09-21 13:06:56,https://api.github.com/repos/pegjs/pegjs/git/commits/12112310f2a2bef3c638247d72fc981b094a04b5,12112310f2a2bef3c638247d72fc981b094a04b5,"Use only double quotes for strings

See #443"
dmajda,2016-09-17 14:28:28,https://api.github.com/repos/pegjs/pegjs/git/commits/6294bb5b137486c82d4778834e94ef7202d3839c,6294bb5b137486c82d4778834e94ef7202d3839c,"Use only ""//"" comments

See #443."
dmajda,2016-09-20 12:47:10,https://api.github.com/repos/pegjs/pegjs/git/commits/1da6abc458cf4af0b4279e9041b368b54c8db175,1da6abc458cf4af0b4279e9041b368b54c8db175,"Use one var/let/const per variable (fixup)

Fix few instances in generated code which I missed in the previous
commit.

See #443."
dmajda,2016-09-17 13:08:47,https://api.github.com/repos/pegjs/pegjs/git/commits/516023546d8413851816e096aeb23f452d0a0b12,516023546d8413851816e096aeb23f452d0a0b12,"Use one var/let/const per variable (for initialized variables)

Use one var/let/const per variable, but only for initialized variables.
Uninitialized variables are still grouped into one var/let/const
declaration as I don't see any value in separating them. This approach
reflects the fact that initialized and uninitialized var/let/const
declarations are really two different things.

See #443."
dmajda,2016-09-14 19:31:47,https://api.github.com/repos/pegjs/pegjs/git/commits/381b5f4db70e9ac791818c34f3b3887df334019f,381b5f4db70e9ac791818c34f3b3887df334019f,Merge pull request #455 from Mingun/fix-testing
Mingun,2016-09-14 16:39:04,https://api.github.com/repos/pegjs/pegjs/git/commits/fcddfbebdd8e9219ce4f85a5f325b8e7aa204546,fcddfbebdd8e9219ce4f85a5f325b8e7aa204546,Add `glob` dev dependency used in spec and benchmark servers
Mingun,2016-09-12 17:53:51,https://api.github.com/repos/pegjs/pegjs/git/commits/26ded450f45f3ad7e21bd94bdfb341f1ed786884,26ded450f45f3ad7e21bd94bdfb341f1ed786884,"Add ""use strict"" for spec and benchmark servers"
dmajda,2016-09-14 14:08:14,https://api.github.com/repos/pegjs/pegjs/git/commits/7f01db2fb804b21c26e64c416e7d69d0abaf39f3,7f01db2fb804b21c26e64c416e7d69d0abaf39f3,"Get rid of for-in loops

The for-in statement in JavaScript iterates also over inherited
properties. This is typically not desired and requires adding a
check using Object.prototype.hasOwnProperty inside the loop.

This commit replaces all for-in statements and related checks inside
them with iteration over Object.keys(...). The iteration is performed
using either Array.prototype.forEach of a plain for loop."
dmajda,2016-09-14 12:06:59,https://api.github.com/repos/pegjs/pegjs/git/commits/b2a9dabcff19e339f32cb0dbfcffe7de15c7bcc9,b2a9dabcff19e339f32cb0dbfcffe7de15c7bcc9,"Remove now unused lib/utils/objects.js

See #442."
dmajda,2016-09-14 12:04:28,https://api.github.com/repos/pegjs/pegjs/git/commits/5fbb557f808df14b607bb9d62cebf6dee5284520,5fbb557f808df14b607bb9d62cebf6dee5284520,"Don't use ""objects"" in lib/peg.js

The ""objects"" module will be removed.

See #442."
dmajda,2016-09-14 11:53:23,https://api.github.com/repos/pegjs/pegjs/git/commits/66ca7e216897829161a298fcaa3412bcab8bad8b,66ca7e216897829161a298fcaa3412bcab8bad8b,"Don't use ""objects"" in lib/compiler/visitor.js

The ""objects"" module will be removed.

See #442."
dmajda,2016-09-14 11:48:12,https://api.github.com/repos/pegjs/pegjs/git/commits/76e70c3923c13e2c21a9f24d274bdc82379b7825,76e70c3923c13e2c21a9f24d274bdc82379b7825,"Don't use ""objects"" in lib/compiler/passes/report-duplicate-labels.js

The ""objects"" module will be removed.

See #442."
dmajda,2016-09-14 11:42:44,https://api.github.com/repos/pegjs/pegjs/git/commits/d2569b9bf3d4b8843d4a0e82de2e1681e16fd27a,d2569b9bf3d4b8843d4a0e82de2e1681e16fd27a,"Don't use ""objects"" in lib/compiler/passes/generate-js.js

The ""objects"" module will be removed.

See #442."
dmajda,2016-09-14 11:35:49,https://api.github.com/repos/pegjs/pegjs/git/commits/8a75d194686402cfbf10326263c5f21b70e3cdcd,8a75d194686402cfbf10326263c5f21b70e3cdcd,"Don't use ""objects"" in lib/compiler/passes/generate-bytecode.js

The ""objects"" module will be removed.

See #442."
dmajda,2016-09-14 09:09:53,https://api.github.com/repos/pegjs/pegjs/git/commits/97d92c9d8b4cf58eb59a282be0383426a9620d02,97d92c9d8b4cf58eb59a282be0383426a9620d02,"Don't use ""objects"" in lib/compiler/index.js

The ""objects"" module will be removed.

See #442."
dmajda,2016-09-14 08:06:36,https://api.github.com/repos/pegjs/pegjs/git/commits/c344460855ffcaef5dda22025e45d7559de4a41a,c344460855ffcaef5dda22025e45d7559de4a41a,"Remove now unused lib/utils/arrays.js

See #442."
dmajda,2016-09-14 08:03:59,https://api.github.com/repos/pegjs/pegjs/git/commits/f81ae1845baa83ef561e2a0e1b974eb8c91ddd3e,f81ae1845baa83ef561e2a0e1b974eb8c91ddd3e,"Don't use ""arrays"" in lib/compiler/passes/report-infinite-recursion.js

The ""arrays"" module will be removed.

See #442."
dmajda,2016-09-14 08:01:47,https://api.github.com/repos/pegjs/pegjs/git/commits/71ef4c9b91d289e4efc29a25e222bf07d4689177,71ef4c9b91d289e4efc29a25e222bf07d4689177,"Don't use ""arrays"" in lib/compiler/passes/remove-proxy-rules.js

The ""arrays"" module will be removed.

See #442."
dmajda,2016-09-14 07:41:02,https://api.github.com/repos/pegjs/pegjs/git/commits/8f8484b1a15cc4ad4a505f4723c5e474cda10019,8f8484b1a15cc4ad4a505f4723c5e474cda10019,"Don't use ""arrays"" in lib/compiler/passes/generate-js.js

The ""arrays"" module will be removed.

See #442."
dmajda,2016-09-14 07:37:02,https://api.github.com/repos/pegjs/pegjs/git/commits/33f23ee4be3ea86535a93bed64480beabe758908,33f23ee4be3ea86535a93bed64480beabe758908,"Don't use ""arrays"" in lib/compiler/passes/generate-bytecode.js

The ""arrays"" module will be removed.

See #442."
dmajda,2016-09-13 14:08:45,https://api.github.com/repos/pegjs/pegjs/git/commits/4dec5e52ba0cbb24a42168f07b1e03e66c30236c,4dec5e52ba0cbb24a42168f07b1e03e66c30236c,"Don't use ""arrays"" in lib/compiler/asts.js

The ""arrays"" module will be removed.

See #442."
dmajda,2016-09-13 07:09:40,https://api.github.com/repos/pegjs/pegjs/git/commits/5822596ab8f9f9b659a108e0a7f69d403cc86e41,5822596ab8f9f9b659a108e0a7f69d403cc86e41,"Replace classes.subclass with native classes

See #442."
dmajda,2016-09-09 11:27:24,https://api.github.com/repos/pegjs/pegjs/git/commits/6fa8ad63f9fb7bf393459b5166092cc3920e13cb,6fa8ad63f9fb7bf393459b5166092cc3920e13cb,"Replace some functions with arrow functions

Because arrow functions work rather differently than normal functions (a
bad design mistake if you ask me), I decided to be conservative with the
conversion.

I converted:

  * event handlers
  * callbacks
  * arguments to Array.prototype.map & co.
  * small standalone lambda functions

I didn't convert:

  * functions assigned to object literal properties (the new shorthand
    syntax would be better here)
  * functions passed to ""describe"", ""it"", etc. in specs (because Jasmine
    relies on dynamic ""this"")

See #442."
dmajda,2016-09-09 09:43:06,https://api.github.com/repos/pegjs/pegjs/git/commits/d00e9526c3a234ba725334a4b7b7bc04f42f4d17,d00e9526c3a234ba725334a4b7b7bc04f42f4d17,"Minimize variable scope

Where possible, move ""let"" statements into inner blocks, loop headers,
etc.

See #442."
dmajda,2016-09-08 14:04:36,https://api.github.com/repos/pegjs/pegjs/git/commits/bdf91b594171529138a3e278809993168688ca16,bdf91b594171529138a3e278809993168688ca16,"Replace ""var"" with ""let"" & ""const""

This is purely a mechanical change, not taking advantage of block scope
of ""let"" and ""const"". Minimizing variable scope will come in the next
commit.

In general, ""var"" is converted into ""let"" and ""const"" is used only for
immutable variables of permanent character (generally spelled in
ALL_CAPS). Using it for any immutable variable regardless on its
permanence would feel confusing.

Any code which is not transpiled and needs to run in ES6 environment
(examples, code in grammars embedded in specs, ...) is kept unchanged.
This is also true for code generated by PEG.js.

See #442."
dmajda,2016-09-08 14:01:52,https://api.github.com/repos/pegjs/pegjs/git/commits/5249814fc027b67171881e92a4e050ee26ad9abb,5249814fc027b67171881e92a4e050ee26ad9abb,".eslintrc.json: Set parserOptions.ecmaVersion to 6

This means all code will be parsed as ES2015 by ESLint.

See #442."
dmajda,2016-09-08 12:54:18,https://api.github.com/repos/pegjs/pegjs/git/commits/4a49e910ac6b57c9cd2362f997ac24df529fcebb,4a49e910ac6b57c9cd2362f997ac24df529fcebb,"package.json: Remove http-server

It is no longer used after introducing spec/server and benchmark/server.

See #442."
dmajda,2016-09-08 12:31:32,https://api.github.com/repos/pegjs/pegjs/git/commits/959f20f6e25edb7d4e7e25317e1118aca67794fd,959f20f6e25edb7d4e7e25317e1118aca67794fd,"Pass benchmark code through Babel before serving it to the browser

This will allow to use ES2015 constructs in benchmark code.

The change required introducing a small server, which serves both PEG.js
and benchmark code passed through Babel and bundled together. This
allowed to convert the benchmark to regular modules and to get rid of
the hackery that was previously needed to make it run both in Node.js
and in the browser.

Note the benchmark no longer exercises the browser version.

See #442."
dmajda,2016-09-08 11:29:06,https://api.github.com/repos/pegjs/pegjs/git/commits/5c40fff136ef9225a51685711ed884cfffeb2e4d,5c40fff136ef9225a51685711ed884cfffeb2e4d,"Pass spec code through Babel before serving it to the browser

This will allow to use ES2015 constructs in spec code.

The change required introducing a small server, which serves both PEG.js
and spec code passed through Babel and bundled together. This allowed to
convert the specs to regular modules and get rid of the hackery that was
previously needed to make them run both in Node.js and in the browser.

Note the specs no longer exercise the browser version. This will allow
to spec PEG.js internals in the future.

See #442."
dmajda,2016-09-08 11:26:31,https://api.github.com/repos/pegjs/pegjs/git/commits/d239bf01074e8a67f152d001544c31b1f6ce2860,d239bf01074e8a67f152d001544c31b1f6ce2860,"package.json: Add packages that will be needed soon

Add ""express"" and ""morgan"" packages, which will be needed by
soon-to-be-introduced spec server and benchmark server.

See #442."
dmajda,2016-09-07 16:08:27,https://api.github.com/repos/pegjs/pegjs/git/commits/4e3861774870bce830154d339a1d501595f16c25,4e3861774870bce830154d339a1d501595f16c25,"Pass the browser version through Babel

This will allow to use ES2015 constructs in PEG.js code.

See #442."
dmajda,2016-09-07 09:24:38,https://api.github.com/repos/pegjs/pegjs/git/commits/16f38f63808591611d68ec96b876c4733720a65f,16f38f63808591611d68ec96b876c4733720a65f,"Drop Node 0.10.x & 0.12.x support

See #442."
dmajda,2016-09-01 13:36:24,https://api.github.com/repos/pegjs/pegjs/git/commits/5ad1bc2add22232d6f42536ec01f61a1d08d4d06,5ad1bc2add22232d6f42536ec01f61a1d08d4d06,"CSS example: Switch from first/rest to head/tail

Follow-up to e510ecc3d01103b61b504128cee5341dd8c4e005."
dmajda,2016-09-01 13:31:26,https://api.github.com/repos/pegjs/pegjs/git/commits/f0657ba628c4a8d658462521fbd6b8314df4ea95,f0657ba628c4a8d658462521fbd6b8314df4ea95,"generated-parser-behavior.spec.js: Switch from first/rest to head/tail

Follow-up to these commits:

  e510ecc3d01103b61b504128cee5341dd8c4e005
  a4a66a2e5be41832bcf23127a37515d155b700bc"
dmajda,2016-09-01 13:29:47,https://api.github.com/repos/pegjs/pegjs/git/commits/0d48ffca2b92cc884b546a95b05a6798461005e9,0d48ffca2b92cc884b546a95b05a6798461005e9,generated-parser-behavior.spec.js: s/==/===/
dmajda,2016-09-01 13:25:23,https://api.github.com/repos/pegjs/pegjs/git/commits/c3e7072fa2963a8b8b71dfc0e684da2df1ebf089,c3e7072fa2963a8b8b71dfc0e684da2df1ebf089,Remove unused arrays.pluck function
dmajda,2016-09-01 13:20:33,https://api.github.com/repos/pegjs/pegjs/git/commits/062c6ae706d4307de2555a8a6acf9d6a7204d274,062c6ae706d4307de2555a8a6acf9d6a7204d274,"Escape backspace in regexp classes as ""\b"", not ""\x08""

The ""\x08"" escaping is necessary only outside of classes (where ""\b""
means ""word boundary"")."
dmajda,2016-09-01 13:09:02,https://api.github.com/repos/pegjs/pegjs/git/commits/1c71bf6cd76f7432efb561f66072bc18ee303460,1c71bf6cd76f7432efb561f66072bc18ee303460,"spec/index.html: Add <!DOCTYPE html>

This ensures the specs are run in standards mode in Internet Explorer."
dmajda,2016-09-01 12:59:44,https://api.github.com/repos/pegjs/pegjs/git/commits/bd62ddf8461eedd0c31f7f67b9f5ca0a6f6d04c5,bd62ddf8461eedd0c31f7f67b9f5ca0a6f6d04c5,"Use ""[]"" & ""[^]"" for empty character classes, not ""(?!)"" & ""[\\S\\s]""

See #441."
dmajda,2016-09-01 12:52:26,https://api.github.com/repos/pegjs/pegjs/git/commits/9c04c94c85faad8e223eeabe146039d654cd1cf8,9c04c94c85faad8e223eeabe146039d654cd1cf8,"Escape vertical tab as ""\v"", not ""\x0B""

See #441."
dmajda,2016-09-01 12:12:16,https://api.github.com/repos/pegjs/pegjs/git/commits/f36a6673767627ff81d26ec3bd11997b778c6474,f36a6673767627ff81d26ec3bd11997b778c6474,"Remove ""undefined"" redefinition protection

See #441."
dmajda,2016-09-01 11:55:41,https://api.github.com/repos/pegjs/pegjs/git/commits/aa1a2e74cfce13e543793b264c7d911c43626e32,aa1a2e74cfce13e543793b264c7d911c43626e32,"Replace suitable for loops with Array methods (in /examples)

See #441."
dmajda,2016-09-01 11:25:53,https://api.github.com/repos/pegjs/pegjs/git/commits/9fbb45a2c975c429a24265ccddb75246975f61d9,9fbb45a2c975c429a24265ccddb75246975f61d9,"Replace suitable for loops with Array methods (in /benchmark)

See #441."
dmajda,2016-09-01 11:03:51,https://api.github.com/repos/pegjs/pegjs/git/commits/df5f86103efc8ed2d0558f754f6e2cce3db920d5,df5f86103efc8ed2d0558f754f6e2cce3db920d5,"Replace suitable for loops with Array methods (in /spec)

See #441."
dmajda,2016-09-01 11:00:46,https://api.github.com/repos/pegjs/pegjs/git/commits/fad4ab74d1de67ef1902cd22d479c81ccab73224,fad4ab74d1de67ef1902cd22d479c81ccab73224,"Replace suitable for loops with Array methods (in /lib)

See #441."
dmajda,2016-09-01 10:55:26,https://api.github.com/repos/pegjs/pegjs/git/commits/3e8bcbea73028af22cdc132975820af46fa5bde4,3e8bcbea73028af22cdc132975820af46fa5bde4,"Replace suitable for loops with Array methods (in /src)

See #441."
dmajda,2016-08-30 14:37:05,https://api.github.com/repos/pegjs/pegjs/git/commits/1c3fbf6cb009a5041b8e62981609c1834002abdc,1c3fbf6cb009a5041b8e62981609c1834002abdc,"Replace ""... instanceof Array"" with ""Array.isArray(...)""

See #441."
dmajda,2016-08-30 06:17:22,https://api.github.com/repos/pegjs/pegjs/git/commits/d346d2a66dfc79ba9284031095f026c7eade7f3c,d346d2a66dfc79ba9284031095f026c7eade7f3c,"Replace objects.keys with Object.keys

See #441."
dmajda,2016-08-19 15:20:40,https://api.github.com/repos/pegjs/pegjs/git/commits/0059cc3bddb5de6894dfc4f13936b08ab1babbb7,0059cc3bddb5de6894dfc4f13936b08ab1babbb7,"Replace arrays.some with Array.prototype.some

See #441."
dmajda,2016-08-19 15:18:43,https://api.github.com/repos/pegjs/pegjs/git/commits/d162fe1cfcfc5a3ba3e20f360b846e5f1927be98,d162fe1cfcfc5a3ba3e20f360b846e5f1927be98,"Replace arrays.every with Array.prototype.every

See #441."
dmajda,2016-08-19 15:11:57,https://api.github.com/repos/pegjs/pegjs/git/commits/5f65de92bca6278ea0783d11e89e826db9dc6e46,5f65de92bca6278ea0783d11e89e826db9dc6e46,"Replace arrays.map with Array.prototype.map

See #441."
dmajda,2016-08-19 15:07:31,https://api.github.com/repos/pegjs/pegjs/git/commits/b044a021c4966bfce0a3be412a602de13ed01c14,b044a021c4966bfce0a3be412a602de13ed01c14,"Replace arrays.each with Array.prototype.forEach

See #441."
dmajda,2016-08-26 06:38:43,https://api.github.com/repos/pegjs/pegjs/git/commits/2a6a058c9c918dcbd615a7fff7464c1e73cce765,2a6a058c9c918dcbd615a7fff7464c1e73cce765,"Merge pull request #440 from atavakoli/fix-js-example-logicalexpr

JavaScript example: Use LogicalExpression nodes for ""&&"" and ""||"""
atavakoli,2016-08-24 18:50:13,https://api.github.com/repos/pegjs/pegjs/git/commits/d914c7b1503ac38f0eadf78660ba9a1f0f2272cc,d914c7b1503ac38f0eadf78660ba9a1f0f2272cc,"JavaScript example: Use LogicalExpression nodes for ""&&"" and ""||""

The buildLogicalExpression function was defined, but not used;
specifically, the Logical(AND|OR)Expression(NoIn)? rules were
constructing BinaryExpression nodes, but are now LogicalExpression
nodes as per the ESTree spec (es5.md)."
dmajda,2016-08-24 09:01:23,https://api.github.com/repos/pegjs/pegjs/git/commits/bf08c6cbc3d08a11b9cdc18023b93a94a289e17a,bf08c6cbc3d08a11b9cdc18023b93a94a289e17a,"JavaScript example: Declare built AST as compatible with ESTree

ESTree is now the canonical JavaScript AST format. Mozilla SpiderMonkey
Parser API, which we delared compatibility with before, is obsolete."
dmajda,2016-08-24 08:55:58,https://api.github.com/repos/pegjs/pegjs/git/commits/567655e72fdcff694ce502aac544df4a137cb5f6,567655e72fdcff694ce502aac544df4a137cb5f6,"JavaScript example: Add ""type"" to ObjectExpression properties

Nodes representing ObjectExpression properties were missing the ""type""
property (set to ""Property"") so let's add it."
dmajda,2016-08-24 08:49:22,https://api.github.com/repos/pegjs/pegjs/git/commits/7fd273d893daf08a43d9fa3f599f55498b4d3cbd,7fd273d893daf08a43d9fa3f599f55498b4d3cbd,"Merge pull request #439 from atavakoli/fix-js-example-vardecl

Added 'kind' to VariableDeclaration in example"
atavakoli,2016-08-23 03:40:54,https://api.github.com/repos/pegjs/pegjs/git/commits/5f9bc6ed4dfa09e8ec8b76db872f6f8967f0e77a,5f9bc6ed4dfa09e8ec8b76db872f6f8967f0e77a,"JavaScript example: Add ""kind"" to VariableDeclaration nodes

The JavaScript example grammar's VariableDeclaration nodes were missing
the ""kind"" member (which is always set to ""var"", according to the
ESTree spec)."
dmajda,2016-08-18 12:33:46,https://api.github.com/repos/pegjs/pegjs/git/commits/671166bbe82150042b71d5756405c0ee067df961,671166bbe82150042b71d5756405c0ee067df961,Update version to 0.10.0
dmajda,2016-08-06 14:59:57,https://api.github.com/repos/pegjs/pegjs/git/commits/86c040e05f55829d7add3e9b0e99891361c7c805,86c040e05f55829d7add3e9b0e99891361c7c805,Update CHANGELOG.md
dmajda,2016-08-06 16:05:03,https://api.github.com/repos/pegjs/pegjs/git/commits/8003edafc9fd593f25bf12f48b039169187a9872,8003edafc9fd593f25bf12f48b039169187a9872,"Rename the ""node"" module format to ""commonjs""

Parsers generated in this format use module.exports, so they are not
strictly CommonJS, but this is a common extension and the original name
would be confusing once Node.js implements ES2015 modules."
dmajda,2016-08-06 15:51:49,https://api.github.com/repos/pegjs/pegjs/git/commits/8962dcfd164b0ace24bfe0a53cb2c8cba0f07f70,8962dcfd164b0ace24bfe0a53cb2c8cba0f07f70,"Rename the ""global"" module format to ""globals""

I think the new name is more widely used when describing the pattern."
dmajda,2016-08-06 15:00:42,https://api.github.com/repos/pegjs/pegjs/git/commits/0478f8a6cfa33c6a95094823f7558be77ca8209f,0478f8a6cfa33c6a95094823f7558be77ca8209f,package.json: Sort files alphabetically
dmajda,2016-08-05 12:46:32,https://api.github.com/repos/pegjs/pegjs/git/commits/b77d33ca05794927b17356c58868a04c99a3749b,b77d33ca05794927b17356c58868a04c99a3749b,"generate-js.js: Quote the ""class"" key in DESCRIBE_EXPECTATION_FNS

""class"" is a reserved word. Having it as a key unquoted broke IE 8 (both
in standards and quirks mode) and IE 9 (in quirks mode)."
dmajda,2016-08-05 09:39:02,https://api.github.com/repos/pegjs/pegjs/git/commits/2a8544d86c4359aa37fccc7d73347a7026e76029,2a8544d86c4359aa37fccc7d73347a7026e76029,README.md: Remove io.js from the list of compatible environments
dmajda,2016-08-02 14:57:47,https://api.github.com/repos/pegjs/pegjs/git/commits/5c0f0add958a5aa292559aa9bae304ec8c6e17f2,5c0f0add958a5aa292559aa9bae304ec8c6e17f2,"Downgrade eslint to 2.13.1

It turns out ESLint 3.x works only with Node.js >= 4, which breaks Travis
CI builds:

  https://travis-ci.org/pegjs/pegjs/builds/149205616"
dmajda,2016-08-02 14:36:29,https://api.github.com/repos/pegjs/pegjs/git/commits/f09271493c7cea000cf0524250e8c251b5cce088,f09271493c7cea000cf0524250e8c251b5cce088,Use jQuery.scrollTo 2.1.2
dmajda,2016-08-02 14:32:17,https://api.github.com/repos/pegjs/pegjs/git/commits/0753d8d4d5fb5403bd55023212642a6f278cb13f,0753d8d4d5fb5403bd55023212642a6f278cb13f,Use jQuery 1.12.4
dmajda,2016-08-02 13:10:48,https://api.github.com/repos/pegjs/pegjs/git/commits/9446e07f6acba905481e2e71c0a37774e479be70,9446e07f6acba905481e2e71c0a37774e479be70,Use uglify-js 2.7.0
dmajda,2016-08-02 13:02:49,https://api.github.com/repos/pegjs/pegjs/git/commits/a8d01e1834f3373c8e14f7c546ddc576cd3b40e0,a8d01e1834f3373c8e14f7c546ddc576cd3b40e0,"Use eslint 3.2.0

Note the update required disabling the ""no-control-regex"" rule, which
started reporting following errors:

  /Users/dmajda/Programming/PEG.js/pegjs/lib/compiler/js.js
    22:16  error  Unexpected control character in regular expression  no-control-regex
    27:16  error  Unexpected control character in regular expression  no-control-regex
    28:16  error  Unexpected control character in regular expression  no-control-regex
    51:16  error  Unexpected control character in regular expression  no-control-regex
    52:16  error  Unexpected control character in regular expression  no-control-regex

  /Users/dmajda/Programming/PEG.js/pegjs/lib/parser.js
    76:16  error  Unexpected control character in regular expression  no-control-regex
    77:16  error  Unexpected control character in regular expression  no-control-regex
    90:16  error  Unexpected control character in regular expression  no-control-regex
    91:16  error  Unexpected control character in regular expression  no-control-regex"
dmajda,2016-08-01 13:41:32,https://api.github.com/repos/pegjs/pegjs/git/commits/e6c3e7180fadeef1c9a5578ad43f5c69a20a27a0,e6c3e7180fadeef1c9a5578ad43f5c69a20a27a0,Use browserify 13.1.0
dmajda,2016-08-01 09:50:00,https://api.github.com/repos/pegjs/pegjs/git/commits/2647f5789f50ec066f6381941f3ed58606c17c0c,2647f5789f50ec066f6381941f3ed58606c17c0c,"generated-parser-behavior.spec.js: Test also with options.trace === true

Based on a pull request by @Mingun:

  https://github.com/pegjs/pegjs/pull/397"
dmajda,2016-08-01 09:37:23,https://api.github.com/repos/pegjs/pegjs/git/commits/bf9d9561c4a6eb7552c1a1318e610845e33d3f92,bf9d9561c4a6eb7552c1a1318e610845e33d3f92,"Tighten ""try ... catch"" clauses in spec helpers

They wrapped too much code."
dmajda,2016-07-29 16:06:16,https://api.github.com/repos/pegjs/pegjs/git/commits/67d85f2de8f8e6d75e59e435b924ea62a5047758,67d85f2de8f8e6d75e59e435b924ea62a5047758,"Align names of compiler passes that detect infinite loops

Rename compiler passes as follows:

  reportLeftRecursion -> reportInfiniteRecursion
  reportInfiniteLoops -> reportInfiniteRepetition

This reflects the fact that both passes detect different ways of causing
the same problem (possible infinite loop when parsing)."
dmajda,2016-07-29 13:16:56,https://api.github.com/repos/pegjs/pegjs/git/commits/9717dc3417cc37dc920210db7c70c0e5b974a7ba,9717dc3417cc37dc920210db7c70c0e5b974a7ba,"Talk about ""undefined rules"" instead of ""missing rules"" internally

The new terminology is more precise and in line with commonly used
programming languages.

The change involves mainly renaming related compiler pass and files
associated with it."
dmajda,2016-07-29 09:58:35,https://api.github.com/repos/pegjs/pegjs/git/commits/e9cb23608d13c6278b176d1bb2ad0d21cdb574fb,e9cb23608d13c6278b176d1bb2ad0d21cdb574fb,"Split peg$buildException into two separate functions

This change reflects the fact that PEG.js-generated parsers really
produce two kinds of syntax errors:

  Structured errors

    Caused by match failures, trailing input, or calls of the ""expected""
    function in parser code. Their messages have fixed format (""Expected
    ... but ... found."").

  Simple errors

    Caused by calls of the ""error"" function in parser code. Their
    messages don't have any fixed format.

Each kind of error now has a separate helper function which builds its
instances."
dmajda,2016-07-29 09:51:58,https://api.github.com/repos/pegjs/pegjs/git/commits/e03d92488a8456078d9bbb9b0811572bedd1b556,e03d92488a8456078d9bbb9b0811572bedd1b556,"Set the ""found"" property of syntax errors produced by ""error"" to null

The property doesn't correspond to anything in the error's message."
dmajda,2016-07-14 14:18:15,https://api.github.com/repos/pegjs/pegjs/git/commits/6ca546a44eef87a92d43bb116da6645c3545104a,6ca546a44eef87a92d43bb116da6645c3545104a,Regenerate lib/parser.js
dmajda,2016-07-14 14:16:29,https://api.github.com/repos/pegjs/pegjs/git/commits/75cd17ed58e413ddd453f011fd7b316fdbdbe235,75cd17ed58e413ddd453f011fd7b316fdbdbe235,bin/pegjs: Implement the --format option
dmajda,2016-07-14 13:41:25,https://api.github.com/repos/pegjs/pegjs/git/commits/d83e4d5a48d1388af8d2c104cdb83d45d27b3805,d83e4d5a48d1388af8d2c104cdb83d45d27b3805,"bin/pegjs: Generate parsers in ""node"" format

I think the ""node"" format is what most people want these days.

An option to override will be added in the next commit."
dmajda,2016-07-14 13:08:14,https://api.github.com/repos/pegjs/pegjs/git/commits/db9920e3ca101a0b01ed87f30a8677b04dcede35,db9920e3ca101a0b01ed87f30a8677b04dcede35,"peg.generate: Implement { format: ""global"" }"
dmajda,2016-07-14 12:56:24,https://api.github.com/repos/pegjs/pegjs/git/commits/61c11ee1b4222f01eebd600a2699f27c24d4c958,61c11ee1b4222f01eebd600a2699f27c24d4c958,"peg.generate: Implement { format: ""amd"" }"
dmajda,2016-07-14 12:44:50,https://api.github.com/repos/pegjs/pegjs/git/commits/f633f697c9bf858d0428957c140f388dac7e69f6,f633f697c9bf858d0428957c140f388dac7e69f6,"peg.generate: Implement { format: ""node"" }"
dmajda,2016-07-14 11:55:13,https://api.github.com/repos/pegjs/pegjs/git/commits/9454c11c59ce430c87f9dff1cd2744881b22a369,9454c11c59ce430c87f9dff1cd2744881b22a369,"generate-js.js: Fix ""="" alignment"
dmajda,2016-07-04 07:04:47,https://api.github.com/repos/pegjs/pegjs/git/commits/e546af5543f4db32878f492486193f185b71397d,e546af5543f4db32878f492486193f185b71397d,Regenerate lib/parser.js
dmajda,2016-07-04 07:03:09,https://api.github.com/repos/pegjs/pegjs/git/commits/a3397c31f99bf9fef72af8b3549a2a594d80e4fb,a3397c31f99bf9fef72af8b3549a2a594d80e4fb,"Makefile: Fix bin/pegjs invocation

It was broken since a57431955e75fd860e43402f43d7397a335696a8."
dmajda,2016-07-04 06:17:00,https://api.github.com/repos/pegjs/pegjs/git/commits/e8be76ee3a2631f253e3628ea3441f395e79bcce,e8be76ee3a2631f253e3628ea3441f395e79bcce,"Don't expose the ""parser"" variable in parser code

The ""parser"" variable allowed access to the parser object. Among other
things, this made it possible to invoke the parser recursively using
""parser.parse"".

One problem with the ""parser"" variable is that it bakes in the idea that
the parser is an *object*, not a *module*. While this is true now, it
won't necessarily be in the future, when parsers may be exported as ES6
modules. Also, people tend to use parsers as modules even today, e.g.
like this:

  var parse = require(""parser"").parse;
  var result = parse(...);

Such usage broke the ""parser"" variable (as it was implemented).

For this reasons I decided to remove the ""parser"" variable. If someone
needs to do tricks like recursive invocation of the parser, he/she must
pass the parser or the ""parse"" function itself using options.

Related to #433."
dmajda,2016-07-04 05:56:08,https://api.github.com/repos/pegjs/pegjs/git/commits/6aa956452ead71e85bd8d7dcdaa07814a89f7b96,6aa956452ead71e85bd8d7dcdaa07814a89f7b96,"Don't use ""this"" inside peg.generate

This change makes it possible to use ""generate"" as a module function,
e.g. like this:

  var generate = require(""pegjs"").generate;
  var parser = generate(...);

Fixes #433."
dmajda,2016-07-04 05:19:57,https://api.github.com/repos/pegjs/pegjs/git/commits/65550965c6528d87fd0bc4b4e1ae2bbce336e95b,65550965c6528d87fd0bc4b4e1ae2bbce336e95b,"Remove extraneous ""with"" from an error message"
dmajda,2016-07-03 16:36:15,https://api.github.com/repos/pegjs/pegjs/git/commits/b3a90de0205e93218c4bdebbe45445cfbba48ba7,b3a90de0205e93218c4bdebbe45445cfbba48ba7,"Syntax error messages: Use Oxford comma

In general PEG.js uses American English, where Oxford comma is
prevalent.

Part of #371."
dmajda,2016-07-03 16:01:39,https://api.github.com/repos/pegjs/pegjs/git/commits/ec8ede5bbec04be8bcb2a9b87daf3d29c3804a2a,ec8ede5bbec04be8bcb2a9b87daf3d29c3804a2a,"Grammar error messages 3/3: Improve the left recursion message

New wording is more explanatory.

Part of #371."
dmajda,2016-07-03 15:56:25,https://api.github.com/repos/pegjs/pegjs/git/commits/f5e43f842cd9a809bd81b70fab81eee5136c0364,f5e43f842cd9a809bd81b70fab81eee5136c0364,"Grammar error messages 2/3: Improve the infinite loop message

New wording is more explanatory.

Part of #371."
dmajda,2016-07-03 15:43:56,https://api.github.com/repos/pegjs/pegjs/git/commits/85fb8aaa0ed54531242235d126543341e660e684,85fb8aaa0ed54531242235d126543341e660e684,"Grammar error messages 1/3: Improve the missing rule message

New wording is more similar to wording used in various programming
languages and it is in line with the duplicate rule message.

Part of #371."
dmajda,2016-06-27 11:42:28,https://api.github.com/repos/pegjs/pegjs/git/commits/eb67cbedb46267e1dd4b8c2bd4af4498b7cfa0fd,eb67cbedb46267e1dd4b8c2bd4af4498b7cfa0fd,"Report duplicate labels as errors

Resolves #270."
dmajda,2016-06-27 10:27:41,https://api.github.com/repos/pegjs/pegjs/git/commits/2a889535bdd564d75b6e8498839fdb5b57bf26f1,2a889535bdd564d75b6e8498839fdb5b57bf26f1,"Add location to the ""Rule ... is already defined"" error message

See this discussion:

  https://github.com/pegjs/pegjs/commit/eb5875bc6a8ae7454beb6f7057e9d2794fefabc7#commitcomment-17970220"
dmajda,2016-06-22 13:29:06,https://api.github.com/repos/pegjs/pegjs/git/commits/f9bc0fe619d233656834d51afee8d4954e713855,f9bc0fe619d233656834d51afee8d4954e713855,package.json: Sort files alphabetically
dmajda,2016-06-22 13:02:59,https://api.github.com/repos/pegjs/pegjs/git/commits/eb5875bc6a8ae7454beb6f7057e9d2794fefabc7,eb5875bc6a8ae7454beb6f7057e9d2794fefabc7,"Report duplicate rule definitions as errors

Based on a pull request by Futago-za Ryuu (@futagoza):

  https://github.com/pegjs/pegjs/pull/329

Resolves #318."
dmajda,2016-06-22 07:48:09,https://api.github.com/repos/pegjs/pegjs/git/commits/149c8298976aae7511a65670155c3ff2310bfadb,149c8298976aae7511a65670155c3ff2310bfadb,lib/compiler/index.js: Order default option values alphabetically
dmajda,2016-06-22 07:46:16,https://api.github.com/repos/pegjs/pegjs/git/commits/c0e2bd218c99651a91745ee7d2babd6316a8b0bf,c0e2bd218c99651a91745ee7d2babd6316a8b0bf,README.md: Describe the --optimize command-line option
dmajda,2016-06-22 07:44:23,https://api.github.com/repos/pegjs/pegjs/git/commits/da1395e21e003986958da78431376e32ab165ad3,da1395e21e003986958da78431376e32ab165ad3,README.md: Describe the --dependency command-line option
dmajda,2016-06-22 07:40:28,https://api.github.com/repos/pegjs/pegjs/git/commits/6bf19ae6f8d91ad6b6d32dc4fbbd7f7455ce9a4b,6bf19ae6f8d91ad6b6d32dc4fbbd7f7455ce9a4b,README.md: Order command-line options alphabetically
dmajda,2016-06-22 07:39:15,https://api.github.com/repos/pegjs/pegjs/git/commits/01aa32615b5311b9d71cb050a76c754cd23cde78,01aa32615b5311b9d71cb050a76c754cd23cde78,"README.md: Describe the ""trace"" peg.generate option"
dmajda,2016-06-22 07:35:50,https://api.github.com/repos/pegjs/pegjs/git/commits/f41535224dd8b408573e7c30ad772100dfc8690c,f41535224dd8b408573e7c30ad772100dfc8690c,README.md: Order peg.generate options alphabetically
dmajda,2016-06-22 07:08:43,https://api.github.com/repos/pegjs/pegjs/git/commits/3672eff31c9ebb507850f98bead5c56bff5697fc,3672eff31c9ebb507850f98bead5c56bff5697fc,bin/pegjs: Order peg.generate options alphabetically
dmajda,2016-06-22 07:06:44,https://api.github.com/repos/pegjs/pegjs/git/commits/0a2217d3da2824c4ad5021fe91f18b55230d1684,0a2217d3da2824c4ad5021fe91f18b55230d1684,bin/pegjs: Order options in a switch statement alphabetically
dmajda,2016-06-22 07:04:33,https://api.github.com/repos/pegjs/pegjs/git/commits/ff330a0d4bc5e79473804f2d75db99694a30b249,ff330a0d4bc5e79473804f2d75db99694a30b249,bin/pegjs: Order options in help text alphabetically
dmajda,2016-06-21 14:45:29,https://api.github.com/repos/pegjs/pegjs/git/commits/a57431955e75fd860e43402f43d7397a335696a8,a57431955e75fd860e43402f43d7397a335696a8,"bin/pegjs: Use the -o/--output option to specify the output file

This is more traditional compiler interface. Its main advantage against
specifying the output file as a second argument (which is what bin/pegjs
used until now) is that input and output files can't be mixed up.

Part of #370."
dmajda,2016-06-21 14:25:13,https://api.github.com/repos/pegjs/pegjs/git/commits/9bf7c0c5ff6bdd5579b7d62ad0bfbbb79c476bbe,9bf7c0c5ff6bdd5579b7d62ad0bfbbb79c476bbe,"bin/pegjs: Remove detailed instructions from the help text

They don't belong there.

Part of #370."
dmajda,2016-06-21 14:18:03,https://api.github.com/repos/pegjs/pegjs/git/commits/35b39713667d597136fba7b71c2bd16743a55515,35b39713667d597136fba7b71c2bd16743a55515,"bin/pegjs: Rename the -o option to -O

This will make room for -o to mean --output instead of --optimize. Also,
-O is more traditional option name for describing optimization config
than -o.

Part of #370."
dmajda,2016-06-21 14:11:43,https://api.github.com/repos/pegjs/pegjs/git/commits/1c14a2c8f2325e6f7f81e145c83c6af4c4481617,1c14a2c8f2325e6f7f81e145c83c6af4c4481617,"bin/pegjs: Allow using ""-"" to mean standard input and output

Part of #370."
dmajda,2016-06-21 12:21:57,https://api.github.com/repos/pegjs/pegjs/git/commits/6eb42ddae72bf08dea51c51d65f9fd0cb6486a22,6eb42ddae72bf08dea51c51d65f9fd0cb6486a22,"Update CONTRIBUTING.md

Improve the text stylistically and grammatically. Rewrite intro to nudge
people into the right direction and warn them about the usual fate of
spontaneous PRs."
dmajda,2016-06-21 09:28:56,https://api.github.com/repos/pegjs/pegjs/git/commits/b10ddc487784ab0c3e899b8f962be3af0913a03e,b10ddc487784ab0c3e899b8f962be3af0913a03e,"Move .github/CONTRIBUTING.md to CONTRIBUTING.md

No need to have a .github directory for just one file."
dmajda,2016-06-21 09:23:57,https://api.github.com/repos/pegjs/pegjs/git/commits/3db71ebcebc8d2f3ca5d1c069f65aec656d7677d,3db71ebcebc8d2f3ca5d1c069f65aec656d7677d,"Remove .github/{ISSUE,PULL_REQUEST}_TEMPLATE

The files were not really templates but instructions. These instructions
are already spelled-out in CONTRIBUTING.md and repeating them feels a
bit redundant.

If it turns out people don't read CONTRIBUTING.md when submitting issues
and pull requests, I'll probably restore the templates (likely in some
shorter/simpler form)."
dmajda,2016-06-20 06:06:14,https://api.github.com/repos/pegjs/pegjs/git/commits/930877c3bacc667d40c3a3540b59f000dbc7713e,930877c3bacc667d40c3a3540b59f000dbc7713e,"Move lib/compiler.js to lib/compiler/index.js

This makes ""compiler"" a regular Node.js module."
dmajda,2016-06-18 04:29:12,https://api.github.com/repos/pegjs/pegjs/git/commits/5a4d04fa90471dd1ac1d7294c3083fcbdc732407,5a4d04fa90471dd1ac1d7294c3083fcbdc732407,"Construct expectations using functions

Until now, expectations were constructed using object literals. This
commit changes the construction to use factory functions.

This change makes generated parsers slightly smaller because property
names don't have to be repeated many times and factory function calls
are more amenable to minifying.

Some numbers based on the aggregate size of parsers generated from
examples/*.pegjs:

  Optimization   Minified?   Size before   Size after   Saving
  ------------------------------------------------------------
  speed          no               719066       716063    0.42%
  speed          yes              188998       180202    4.65%
  size           no               194810       197813    1.52%
  size           yes              108782        99947    8.12%

(Minification was done using ""uglify --mangle --compress"" with
uglify-js 2.4.24.)"
dmajda,2016-06-18 02:52:49,https://api.github.com/repos/pegjs/pegjs/git/commits/e7d03825e0624667571ee91945ce981e23f98659,e7d03825e0624667571ee91945ce981e23f98659,"AST: Remove the ""rawText"" property from ""class"" nodes

It isn't used anymore."
dmajda,2016-06-17 17:04:49,https://api.github.com/repos/pegjs/pegjs/git/commits/35c8280743216b06e37eddce8df3f804ad5e6430,35c8280743216b06e37eddce8df3f804ad5e6430,Expectation refactoring 7/7: Regenerate lib/parser.js
dmajda,2016-06-17 13:45:00,https://api.github.com/repos/pegjs/pegjs/git/commits/8639cf6d61acf410a1e2f4b49c980ac674b1571e,8639cf6d61acf410a1e2f4b49c980ac674b1571e,"Expectation refactoring 6/7: Move ""buildMessage"" to SyntaxError

The ""buildMessage"" utility function, which was previously internal, is
now exposed as SyntaxError.buildMessage in generated parsers.

The motivation behind this is two-fold:

  1. Building of a syntax error message is a responsibility of the
     SyntaxError class, meaning the code should be placed there.

  2. By exposing the message building code, parser users can use it to
     generate customized error messages without duplicating PEG.js's code.

Note that helper functions inside ""buildMessage"" (""describeExpected"",
""describeFound"", etc.) currently aren't exposed. They may become exposed
in the future if there is enough demand."
dmajda,2016-06-17 13:36:02,https://api.github.com/repos/pegjs/pegjs/git/commits/999cc7be74b46ba2d1b69bdcd5b7e8ab4770f502,999cc7be74b46ba2d1b69bdcd5b7e8ab4770f502,"Expectation refactoring 5/7: Refactor ""buildMesage""

Mostly just extract few functions, increasing readability."
dmajda,2016-06-17 13:14:47,https://api.github.com/repos/pegjs/pegjs/git/commits/319931876d632d1a64efdf795b3b8910990f161a,319931876d632d1a64efdf795b3b8910990f161a,"Expectation refactoring 4/7: Generate descriptions dynamically

Instead of pre-generating expectation descriptions when generating
parsers, generate them dynamically from structured information contained
in the expectations.

This change makes descriptions a presentation-only concept. It also
makes generated parsers smaller."
dmajda,2016-06-13 11:39:13,https://api.github.com/repos/pegjs/pegjs/git/commits/22cb12347963397eceabe2eab1d7b6218d88d4db,22cb12347963397eceabe2eab1d7b6218d88d4db,"Expectation refactoring 3/7: Change expectation processing

Before this commit, expectations were sorted and de-duplicated before
they were passed to ""buildMessage"" and exposed in the ""expected""
property of syntax errors. This commit moves this processing into
""buildMessage"" and rewrites it to process only expectation descriptions.
This means expectations exposed in the ""expected"" property are ""raw""
(not sorted and de-duplicated).

This change will allow us to get rid of the ""description"" property of
expectations and compute descriptions dynamically from structured
information in the expectations. This will make descriptions a
presentation-only concept. It will also make generated parsers smaller.

Note that to keep expectations in the ""expected"" property sorted even
without the ""description"" property, some sorting scheme based on
structured information in the expectations would have to be devised,
which would complicate things with only a little benefit. Therefore I
chose to keep the expectations there ""raw""."
dmajda,2016-06-13 09:28:32,https://api.github.com/repos/pegjs/pegjs/git/commits/c6e8c53f1b8bc7178bf9afed56251c9c1956f9eb,c6e8c53f1b8bc7178bf9afed56251c9c1956f9eb,"Expectation refactoring 2/7: Restructure ""class"" expectations

Changes:

  * Remove the ""value"" property (it is replaced by other properties).

  * Add the ""parts"", ""inverted"", and ""ignoreCase"" properties (which
    allow more structured access to expectation data)."
dmajda,2016-06-13 09:16:58,https://api.github.com/repos/pegjs/pegjs/git/commits/eda2a34c7f9d859f67977696b8c078a0e1d23a78,eda2a34c7f9d859f67977696b8c078a0e1d23a78,"Expectation refactoring 1/7: Restructure ""literal"" expectations

Changes:

  * Rename the ""value"" property to ""text"" (because it doesn't contain
    the whole value, which also includes the case sensitivity flag).

  * Add the ""ignoreCase"" property (which was missing)."
dmajda,2016-06-13 08:21:46,https://api.github.com/repos/pegjs/pegjs/git/commits/d48983dd6aff569f52659525c3c3d9096ef405bd,d48983dd6aff569f52659525c3c3d9096ef405bd,"Don't use the ""i"" suffix for case-insensitive class descriptions

If the described class is case-sensitive, nothing changes.

If the described class is case-insensitive, its description doesn't
indicate that anymore. The indication was awkward and it was meaningful
only for parser users familiar with PEG.js grammar syntax (typically a
minority). For cases where case insensitivity indication is vital, named
rules can be used to customize the reporting.

Note that literal descriptions already ignore the case-sensitivity flag;
this commit only makes things consistent."
dmajda,2016-06-11 11:48:53,https://api.github.com/repos/pegjs/pegjs/git/commits/b2d7f9e02f5510642c1610ca32e7a69206126918,b2d7f9e02f5510642c1610ca32e7a69206126918,Fix comment typo
dmajda,2016-06-11 11:29:50,https://api.github.com/repos/pegjs/pegjs/git/commits/d73a5208a0d5ab8dc263d229fc917def7f85c8b2,d73a5208a0d5ab8dc263d229fc917def7f85c8b2,"Simplify various escaping functions

Simplify regexps that specify ranges of characters to escape with ""\xXX""
and ""\uXXXX"" in various escaping functions. Until now, these regexps
were (mostly) mutually exclusive with more selective regexps applied
before them, but this became a maintenance headache. I decided to
abandon the exclusivity, which allowed to simplify these regexps (at the
cost of introducing an ordering dependency)."
dmajda,2016-06-11 10:20:26,https://api.github.com/repos/pegjs/pegjs/git/commits/b31436d778271fd71ad70521206515a76e0abb05,b31436d778271fd71ad70521206515a76e0abb05,"Escape also DEL (U+007F) when generating JavaScript strings & regexps

It is a control character."
dmajda,2016-06-10 14:20:58,https://api.github.com/repos/pegjs/pegjs/git/commits/1f7efd57c08117b849ca821f6523504dc591cc31,1f7efd57c08117b849ca821f6523504dc591cc31,"Remove various JSHint-related cruft

We use ESLint now, which is smarter about some things."
dmajda,2016-06-10 13:36:23,https://api.github.com/repos/pegjs/pegjs/git/commits/75cedcb7d81dd3b3cdf726db70250dbc107eed7d,75cedcb7d81dd3b3cdf726db70250dbc107eed7d,"Harmonize found string escaping with expectation escaping

Change how found strings are escaped when building syntax error
messages:

  * Do not escape non-ASCII characters (U+0100-U+FFFF). They are
    typically more readable in their raw form.

  * Escape DEL (U+007F). It is a control character.

  * Escape NUL (U+0000) as ""\0"", not ""\x00"".

  * Do not use less known shortcut escape sequences (""\b"", ""\f""), only the
    well-known ones (""\0"", ""\t"", ""\n"", ""\r"").

These changes mirror expectation escaping changes done in
4fe682794d15d37d79b9f0037ebfcd5ad46d76ff.

Part of work on #428."
dmajda,2016-06-10 13:18:25,https://api.github.com/repos/pegjs/pegjs/git/commits/6b60896216fc6f00ab111e6b2e0c2b1a6c9fdba2,6b60896216fc6f00ab111e6b2e0c2b1a6c9fdba2,"Revert ""Remove info about found string from syntax errors""

This reverts commit 25ab98027d5181c30871394066b1fedc29cc90d3.

Part of work on #428."
dmajda,2016-05-06 14:59:02,https://api.github.com/repos/pegjs/pegjs/git/commits/4fe682794d15d37d79b9f0037ebfcd5ad46d76ff,4fe682794d15d37d79b9f0037ebfcd5ad46d76ff,"Improve expression descriptions in error messages

Before this commit, descriptions of literals used in error messages were
built by applying JavaScript string escaping to their values, making the
descriptions look like JavaScript strings. Descriptions of character
classes were built using their raw text. These approaches were mutually
inconsistent and lead to descriptions which were over-escaped and not
necessarily human-friendly (in case of literals) or coupled with details
of the grammar (in case of character classes).

This commit changes description building code in both cases and unifies
it. The intent is to generate human-friendly descriptions of matched
expressions which are clean, unambiguous, and which don't escape too
many characters, while handling special characters such as newlines
well.

Fixes #127."
dmajda,2016-05-06 13:15:38,https://api.github.com/repos/pegjs/pegjs/git/commits/2fd77b96fc2c26c24c9cf432eb9c93c065e0d163,2fd77b96fc2c26c24c9cf432eb9c93c065e0d163,"Revert ""Use literal raw text in error messages""

I no longer think that using raw literal texts in error messages is the
right thing to do. The main reason is that it couples error messages
with details of the grammar such as use of single or double quotes in
literals. A better solution is coming in the next commit.

This reverts commit 69a0f769fc1e3cd751affce198a8248cda2859c2."
dmajda,2016-05-05 15:35:40,https://api.github.com/repos/pegjs/pegjs/git/commits/c50ad1546129d7e67dda532b86d4c694ea990520,c50ad1546129d7e67dda532b86d4c694ea990520,"Use http-server to serve specs and benchmarks to the browser

Previously, the instructions recommended using Python's SimpleHTTPServer
module, which created unnecessary dependency on Python."
dmajda,2016-05-05 08:15:28,https://api.github.com/repos/pegjs/pegjs/git/commits/138405d89dc739601efdc1e2e090e6d6db562c45,138405d89dc739601efdc1e2e090e6d6db562c45,Add syntax highlighting to code blocks in README.md files
dmajda,2016-05-04 12:08:43,https://api.github.com/repos/pegjs/pegjs/git/commits/45de51a8818459196cdedae6ec5d4ec5a73e21ba,45de51a8818459196cdedae6ec5d4ec5a73e21ba,Consistently talk about generating (not building) a parser
dmajda,2016-05-04 12:01:14,https://api.github.com/repos/pegjs/pegjs/git/commits/f4504a93fe38eb7f283d5a37a3520bc39b9c3a5a,f4504a93fe38eb7f283d5a37a3520bc39b9c3a5a,"Rename the ""buildParser"" function to ""generate""

In most places, we talk about ""generating a parser"", not ""building a
parser"", which the function name should reflect. Also, mentioning a
parser in the name is not necessary as in case of a parser generator
it's pretty clear what is generated."
dmajda,2016-05-04 10:37:13,https://api.github.com/repos/pegjs/pegjs/git/commits/0847a69643fd17427cf2956ddffa07caf73cdfe1,0847a69643fd17427cf2956ddffa07caf73cdfe1,"Rename the ""PEG"" variable to ""peg""

So far, PEG.js was exported in a ""PEG"" global variable when no module
loader was detected. The same variable name was also conventionally used
when requiring it in Node.js or otherwise referring to it. This was
reflected in various places in the code, documentation, examples, etc.

This commit changes the variable name to ""peg"" and fixes all relevant
occurrences. The main reason for the change is that in Node.js, modules
are generally referred to by lower-case variable names, so ""PEG"" was
sticking out when used in Node.js projects."
dmajda,2016-05-03 13:59:23,https://api.github.com/repos/pegjs/pegjs/git/commits/057a93fbc7c2e169859171f760fe3c3667c63220,057a93fbc7c2e169859171f760fe3c3667c63220,"Move the ""Generated by ..."" comment out of wrapping functions

The wrapping functions are also generated by PEG.js, so the comment
should be above them to mark them as such. This shouldn't cause any
problems technically."
dmajda,2016-05-03 13:12:28,https://api.github.com/repos/pegjs/pegjs/git/commits/f934199fba7f39c20a26a18dbcda86e12cf35a96,f934199fba7f39c20a26a18dbcda86e12cf35a96,Simplify code which generates parser wrappers
dmajda,2016-05-03 12:24:34,https://api.github.com/repos/pegjs/pegjs/git/commits/f390c7cf45c7b89466ddf3fa26c22aea1f1dcb09,f390c7cf45c7b89466ddf3fa26c22aea1f1dcb09,"ESLint: Disable no-console in bin/.eslintrc.json, not bin/pegjs

The less clutter in JavaScript files themselves, the better."
dmajda,2016-05-03 09:16:03,https://api.github.com/repos/pegjs/pegjs/git/commits/810567d865930f2ef379aaaffdc6d0e87ca1555c,810567d865930f2ef379aaaffdc6d0e87ca1555c,"UMD parsers: Allow specifying parser dependencies

Introduce two ways of specifying parser dependencies: the ""dependencies""
option of PEG.buildParser and the -d/--dependency CLI option. Specified
dependencies are translated into AMD dependencies and Node.js's
""require"" calls when generating an UMD parser.

Part of work on #362."
dmajda,2016-05-02 14:42:10,https://api.github.com/repos/pegjs/pegjs/git/commits/fe6ce38d0820754a489524d9f8f5b081a7489f19,fe6ce38d0820754a489524d9f8f5b081a7489f19,"UMD parsers: Regenerate lib/parser.js

Part of work on #362."
dmajda,2016-05-02 14:40:14,https://api.github.com/repos/pegjs/pegjs/git/commits/a0a57cd22d2930123357781e2cfb70b2c40ab2bc,a0a57cd22d2930123357781e2cfb70b2c40ab2bc,"UMD parsers: Make bin/pegjs generate UMD parsers

Part of work on #362."
dmajda,2016-05-02 14:05:09,https://api.github.com/repos/pegjs/pegjs/git/commits/b87268ade6961d96838d75b9a7ace5389233127e,b87268ade6961d96838d75b9a7ace5389233127e,"UMD parsers: Allow generating parsers in UMD format from the API

Introduce new ""format"" and ""exportVar"" options to PEG.buildParser which
together allow generating parsers in UMD format.

Part of work on #362."
dmajda,2016-05-02 10:29:29,https://api.github.com/repos/pegjs/pegjs/git/commits/ab0e85b006638114bb9a643e7431726d78b09f05,ab0e85b006638114bb9a643e7431726d78b09f05,"UMD parsers: Refactor ""generateWrapper""

Extract ""generateWrapper"" code which generates code of the intro and the
returned parser object into helper functions. This is pure refactoring,
generated parser code is exactly the same as before.

This change will make it easier to modifiy ""generateWrapper"" to produce
UMD modules.

Part of work on #362."
dmajda,2016-05-02 09:51:47,https://api.github.com/repos/pegjs/pegjs/git/commits/7f8b3f70126aaa7720593804131cd9441050347a,7f8b3f70126aaa7720593804131cd9441050347a,"UMD parsers: Generate parser wrapper separately from its toplevel code

Code which was at the toplevel of the ""generateJS"" function in the code
generator is now split into ""generateToplevel"" (which genreates parser
toplevel code) and ""generateWrapper"" (which generates a wrapper around
it). This is pure refactoring, generated parser code is exactly the same
as before.

This change will make it easier to modifiy the code genreator to produce
UMD modules.

Part of work on #362."
dmajda,2016-04-28 08:10:48,https://api.github.com/repos/pegjs/pegjs/git/commits/5e702b5901abe559b5d52713c3794a77e83c331a,5e702b5901abe559b5d52713c3794a77e83c331a,lib/compiler.js: Fix indentation
dmajda,2016-04-28 08:08:55,https://api.github.com/repos/pegjs/pegjs/git/commits/a89aa11779daca5ced9061a9164f4343ebd7e90e,a89aa11779daca5ced9061a9164f4343ebd7e90e,README.md: Mention that AMD loader will be used in the browser
dmajda,2016-04-27 12:11:32,https://api.github.com/repos/pegjs/pegjs/git/commits/ce44c62f147c2a171fd52f66499205e7b2f89b8e,ce44c62f147c2a171fd52f66499205e7b2f89b8e,"Support passing custom location info to ""error"" and ""expected""

Based on a pull request by Konstantin (@YemSalat):

  https://github.com/pegjs/pegjs/pull/391

Resolves #390."
dmajda,2016-03-18 15:39:19,https://api.github.com/repos/pegjs/pegjs/git/commits/da2378d887d5e9967728094a5cfac185e593dfbc,da2378d887d5e9967728094a5cfac185e593dfbc,"Rewrite handling of optional parameters

Instead of testing arguments.length to see whether an optional parameter
was passed to a function, compare its value to ""undefined"". This
approach has two advantages:

  * It is in line with handling of default parameters in ES6.

  * Optional parameters are actually spelled out in the parameter
    list.

There is also one important disadvantage, namely that it's impossible to
pass ""undefined"" as an optional parameter value. This required a small
change in two tests.

Additional notes:

  * Default parameter values are set in assignments immediately
    after the function header. This reflects the fact that these
    assignments really belong to the parameter list (which is where they
    are in ES6).

  * Parameter values are checked against ""void 0"" in places where
    ""undefined"" can potentially be redefiend."
dmajda,2016-03-18 14:27:51,https://api.github.com/repos/pegjs/pegjs/git/commits/f866712c902d39e22674584dd92d1da033cca26d,f866712c902d39e22674584dd92d1da033cca26d,"Regularize Jasmine custom matcher signatures

The ""toParse"" matcher in generated-parser-behavior.spec.js effectively
had these signatures:

  toParse(input)
  toParse(input, expected)
  toParse(input, options, expected)

This commit regularizes them to:

  toParse(input)
  toParse(input, expected)
  toParse(input, expected, options)

Similarly, the ""toFailToParse"" matcher in
generated-parser-behavior.spec.js effectively had these signatures:

  toFailToParse(input)
  toFailToParse(input, details)
  toFailToParse(input, options, details)

This commit regularizes them to:

  toFailToParse(input)
  toFailToParse(input, details)
  toFailToParse(input, details, options)

Finally, the ""toChangeAST"" matcher in helpers.js effectively had these
signatures:

  toChangeAST(grammar, details)
  toChangeAST(grammar, options, details)

This commit regularizes them to:

  toChangeAST(grammar, details)
  toChangeAST(grammar, details, options)

The overall purpose of these changes is to avoid different parameters
appearing at the same position, which is hard to manage without using
""arguments""."
dmajda,2016-04-27 07:24:27,https://api.github.com/repos/pegjs/pegjs/git/commits/7089debae22be14d94702186501ea0267b59bdc6,7089debae22be14d94702186501ea0267b59bdc6,.travis.yml: Test also with Node.js 6.0.x
dmajda,2016-03-11 15:18:29,https://api.github.com/repos/pegjs/pegjs/git/commits/0c39f1cf86d73c85a1f832e6cfddf4176f9e58bc,0c39f1cf86d73c85a1f832e6cfddf4176f9e58bc,"Fix labels leaking to outer scope

Labels in expressions like ""(a:""a"")"" or ""(a:""a"" b:""b"" c:""c"")"" were
visible to the outside despite being wrapped in parens. This commit
makes them invisible, as they should be.

Note this required introduction of a new ""group"" AST node, whose purpose
is purely to provide label scope isolation. This was necessary because
""label"" and ""sequence"" nodes don't (and can't!) provide this isolation
themselves.

Part of a fix of #396."
dmajda,2016-03-06 16:20:19,https://api.github.com/repos/pegjs/pegjs/git/commits/58806a3d778c784399c9fe831b92a99f9fe267c0,58806a3d778c784399c9fe831b92a99f9fe267c0,"Label scope specs: Add negative specs (subexpressions)

Semantic predicate and action specs which verified label scope didn't
exercise labels in subexpressions. This commit adds cases exercising
them, including few commented-out cases which reveal #396 (these will be
uncommented when the bug gets fixed).

Note that added specs exercise all relevant expression types. This is
needed because code that makes subexpression labels invisible to the
outside is separate for each expression type so one generic test
wouldn't generate enough coverage.

Part of a fix of #396."
dmajda,2016-03-06 16:12:28,https://api.github.com/repos/pegjs/pegjs/git/commits/ffd90a8c9ec2b39bab2d1cd242c5986b4513172f,ffd90a8c9ec2b39bab2d1cd242c5986b4513172f,"Label scope specs: Add negative specs (sequences)

So far, semantic predicate and action specs which verified scope of
labels from containing or outer sequences exercised only cases where
label variables were defined. This commit adds also some negative cases.

The idea comes from @Mingun."
dmajda,2016-03-06 15:41:37,https://api.github.com/repos/pegjs/pegjs/git/commits/72293186715b1e7cc8bfc606749f5b3a48f01c17,72293186715b1e7cc8bfc606749f5b3a48f01c17,"Label scope specs: Don't exercise all expression types

Semantic predicate and action specs which verified scope of labels from
outer sequences exercised all relevant expression types. This is not
needed as the behavior is common for all expression types and no extra
code needs to be written to make it work for each of them.

This commit changes the specs to verify scope of labels from outer
sequences using only one expression type."
dmajda,2016-03-06 15:34:41,https://api.github.com/repos/pegjs/pegjs/git/commits/a20d04edf4516278b3a819770721191b6d4e502c,a20d04edf4516278b3a819770721191b6d4e502c,"Label scope specs: Remove redundant sequence elements

Semantic predicate specs which verified scope of labels from containing
sequences used 3 elements where 1 is enough.

This commit removes the redundant elements."
dmajda,2016-03-04 16:13:14,https://api.github.com/repos/pegjs/pegjs/git/commits/6bc91c010d4451ccc191fc95ddbbe50a74126d2c,6bc91c010d4451ccc191fc95ddbbe50a74126d2c,Label scope specs: Tweak spec descriptions
dmajda,2016-03-04 16:04:24,https://api.github.com/repos/pegjs/pegjs/git/commits/921f1fa8fab46732aa8221ca5a408931785ac352,921f1fa8fab46732aa8221ca5a408931785ac352,Label scope specs: Tweak suite descriptions
dmajda,2016-03-04 15:42:42,https://api.github.com/repos/pegjs/pegjs/git/commits/5c5f79519a28e3225e90bee411e01ca0d9bb18d2,5c5f79519a28e3225e90bee411e01ca0d9bb18d2,"Label scope specs: Simplify semantic predicate and action specs

Semantic predicate and action specs which verified label scope used
repetitive ""it"" blocks. Rewrite them to use just one ""it"" block and a
list of testcases. This makes them more concise."
dmajda,2016-03-04 15:11:26,https://api.github.com/repos/pegjs/pegjs/git/commits/31e7147081ddefcdf4d38cfed894fe9c36dcd71b,31e7147081ddefcdf4d38cfed894fe9c36dcd71b,"Label scope specs: No result checks in semantic predicate specs

Semantic predicate specs which verified label scope also checked parser
results. This is not necessary because for the purpose of these specs it
is enough to verify that label variables have correct values, which is
done in predicate code already.

This commit removes parser result checks from these specs."
dmajda,2016-02-28 06:54:07,https://api.github.com/repos/pegjs/pegjs/git/commits/f07ab7f32e64a697711567983a546a15c379733e,f07ab7f32e64a697711567983a546a15c379733e,"examples/json.pegjs: Fix the ""unescaped"" rule

The ""unescaped"" rule was created by mechanically translating original
RFC 7159 rule:

  unescaped = %x20-21 / %x23-5B / %x5D-10FFFF

into:

  unescaped = [\x20-\x21\x23-\x5B\x5D-\u10FFFF]

However, this mechanical translation was incorrect as PEG.js grammars
don't have 6-digit Unicode escape sequences. Sequence ""\u10FFFF"" was
interpreted as ""\u10FF"" followed by two ""F"" characters.

This commit rewrites the ""unescaped"" rule into a form which, while not
being a mechanical translation of the original rule, matches the same
characters in the whole Unicode range. It also macthes textual
description of string representation in RFC 7159:

  All Unicode characters may be placed within the quotation marks,
  except for the characters that must be escaped: quotation mark,
  reverse solidus, and the control characters (U+0000 through U+001F).

Fixes #417."
dmajda,2016-02-27 19:19:12,https://api.github.com/repos/pegjs/pegjs/git/commits/6a04067a76d4635875b85598394fb92b5eefd712,6a04067a76d4635875b85598394fb92b5eefd712,"bin/pegjs: Do not overwrite extension-less files

Running bin/pegjs with one argument which was an extension-less file
name caused the file to be overwritten. This was because internal
extension rewriting logic didn't handle this case corectly.

This commit changes the logic from regexp-based to path.extname-based,
fixing the problem. The new code generates file names like this:

  Input file name     Output file name
  ------------------------------------
  grammar.ext         grammar.js
  grammar.ext1.ext2   grammar.ext1.js
  grammar.            grammar.js
  grammar             grammar.js

Fixes #405."
dmajda,2016-02-26 12:26:00,https://api.github.com/repos/pegjs/pegjs/git/commits/5eb6225ef0767d959e570f1bc66c04af8eb6aff5,5eb6225ef0767d959e570f1bc66c04af8eb6aff5,"Merge pull request #420 from bkutil/patch-1

Grammar fix in ISSUE_TEMPLATE.md and CONTRIBUTING.md"
bkutil,2016-02-20 21:47:48,https://api.github.com/repos/pegjs/pegjs/git/commits/7f2358af1f2130ba5d0ac39980aabc9c0a660452,7f2358af1f2130ba5d0ac39980aabc9c0a660452,Grammar fix in ISSUE_TEMPLATE.md and CONTRIBUTING.md
dmajda,2016-02-26 09:48:19,https://api.github.com/repos/pegjs/pegjs/git/commits/4d85464ac43d09ebdc5b28a1a33e1fc76970d1ad,4d85464ac43d09ebdc5b28a1a33e1fc76970d1ad,"README.md: Fix npm & Bower badges to show PEG.js version

Based on a pull request by Daniel Baird (@DanielBaird):

  https://github.com/pegjs/pegjs/pull/419"
dmajda,2016-02-19 15:54:19,https://api.github.com/repos/pegjs/pegjs/git/commits/db1cc555120df3b00aa4e54e58557e24f847b75f,db1cc555120df3b00aa4e54e58557e24f847b75f,Add a .github directory with contribution guidelines and templates
dmajda,2016-02-12 15:23:32,https://api.github.com/repos/pegjs/pegjs/git/commits/d56b43bb541f0cbecc94609baf220830fa263d71,d56b43bb541f0cbecc94609baf220830fa263d71,"README.md: Add badges

Based on a pull request by Adrien Becchis (@AdrieanKhisbe):

  https://github.com/pegjs/pegjs/pull/392"
dmajda,2016-02-05 16:49:05,https://api.github.com/repos/pegjs/pegjs/git/commits/88f1d1369b7abf6a79b0faea2a151aa23aa9c801,88f1d1369b7abf6a79b0faea2a151aa23aa9c801,"Detect newlines using charCodeAt instead of charCode

In generated parsers, detect newlines using charCodeAt instead of
charCode. This should be slightly faster."
dmajda,2016-02-05 16:00:52,https://api.github.com/repos/pegjs/pegjs/git/commits/18d266be67b989a4ca6650f00e6e29beadf2fd76,18d266be67b989a4ca6650f00e6e29beadf2fd76,"Remove support for newlines other than ""\n"" and ""\r\n""

Before this commit, generated parsers considered the following character
sequences as newlines:

  Sequence   Description
  ------------------------------
  ""\n""       Unix
  ""\r""       Old Mac
  ""\r\n""     Windows
  ""\u2028""   line separator
  ""\u2029""   paragraph separator

This commit limits the sequences only to ""\n"" and ""\r\n"". The reason is
that nobody uses Unicode newlines or ""\r"" in practice.

A positive side effect of the change is that newline-handling code
became simpler (and likely faster)."
sampsyo,2016-01-31 20:19:35,https://api.github.com/repos/pegjs/pegjs/git/commits/ceebc8cda1a653465a7146e09abe2f8ac1addb8d,ceebc8cda1a653465a7146e09abe2f8ac1addb8d,"Better error position explanation

Based on @Mingun's help."
sampsyo,2016-01-31 02:03:11,https://api.github.com/repos/pegjs/pegjs/git/commits/3330ceb7b848bdeae00357efab0af0e9b646d60a,3330ceb7b848bdeae00357efab0af0e9b646d60a,Docs: try to explain error messages (#368)
dmajda,2016-01-29 13:36:56,https://api.github.com/repos/pegjs/pegjs/git/commits/e61c23c634a873f6e62f33d933d7761068214b24,e61c23c634a873f6e62f33d933d7761068214b24,"ESLint: Set environments better

Instead of setting ESLint environment to ""node"" globally, set it on
per-directory basis using separate .eslintrc.json files:

  Directory   Environment
  -----------------------
  bin         node
  lib         commonjs
  spec        jasmine

It was impossible to use this approach for the ""benchmark"" directory
which contains a mix of files used in various environments. For
benchmark/run, the environment is set inline. For the other files, as
well as spec/helpers.js, the globals are declared manually (it is
impossible to express how these files are used just by a list of
environments).

Fixes #408."
dmajda,2016-01-25 09:23:44,https://api.github.com/repos/pegjs/pegjs/git/commits/0e66f19523768bd305b6ad5a8b8d2170bec4faa8,0e66f19523768bd305b6ad5a8b8d2170bec4faa8,"Makefile: Remove obsolete comment

It should have been removed with the switch to Browserify in
0d8c0458232339e2bc399c01140561d14e6a8058."
dmajda,2016-01-24 20:22:21,https://api.github.com/repos/pegjs/pegjs/git/commits/ddd4ac378735bbcaf4224ca83b60fc7ba06f9584,ddd4ac378735bbcaf4224ca83b60fc7ba06f9584,"Fix ESLint errors in lib/parser.js

Fix the following errors:

    31:9   error  ""parser"" is defined but never used    no-unused-vars
   406:14  error  ""expected"" is defined but never used  no-unused-vars
  1304:15  error  ""s1"" is defined but never used        no-unused-vars
  1386:15  error  ""s1"" is defined but never used        no-unused-vars
  1442:15  error  ""s1"" is defined but never used        no-unused-vars"
dmajda,2016-01-22 13:38:16,https://api.github.com/repos/pegjs/pegjs/git/commits/c8d23e5471650c92a607534796df19b0d97634dc,c8d23e5471650c92a607534796df19b0d97634dc,"Fix ESLint errors in bin/pegjs

Fix the following errors:

   12:3  error  Unexpected console statement       no-console
   16:3  error  Unexpected console statement       no-console
   17:3  error  Unexpected console statement       no-console
   18:3  error  Unexpected console statement       no-console
   19:3  error  Unexpected console statement       no-console
   20:3  error  Unexpected console statement       no-console
   21:3  error  Unexpected console statement       no-console
   22:3  error  Unexpected console statement       no-console
   23:3  error  Unexpected console statement       no-console
   24:3  error  Unexpected console statement       no-console
   25:3  error  Unexpected console statement       no-console
   26:3  error  Unexpected console statement       no-console
   27:3  error  Unexpected console statement       no-console
   28:3  error  Unexpected console statement       no-console
   29:3  error  Unexpected console statement       no-console
   30:3  error  Unexpected console statement       no-console
   31:3  error  Unexpected console statement       no-console
   32:3  error  Unexpected console statement       no-console
   33:3  error  Unexpected console statement       no-console
   34:3  error  Unexpected console statement       no-console
   35:3  error  Unexpected console statement       no-console
   36:3  error  Unexpected console statement       no-console
   37:3  error  Unexpected console statement       no-console
   38:3  error  Unexpected console statement       no-console
   39:3  error  Unexpected console statement       no-console
   40:3  error  Unexpected console statement       no-console
   41:3  error  Unexpected console statement       no-console
   42:3  error  Unexpected console statement       no-console
   43:3  error  Unexpected console statement       no-console
   44:3  error  Unexpected console statement       no-console
   56:3  error  Unexpected console statement       no-console
  232:9  error  ""inputStream"" is already defined   no-redeclare
  240:9  error  ""outputStream"" is already defined  no-redeclare"
dmajda,2016-01-22 13:32:41,https://api.github.com/repos/pegjs/pegjs/git/commits/ee66113130a9e7c70260b950a7080ff63d828daf,ee66113130a9e7c70260b950a7080ff63d828daf,"Fix ESLint errors in benchmark/run

Fix the following errors:

   37:3   error  Unexpected console statement      no-console
   38:3   error  Unexpected console statement      no-console
   42:3   error  Unexpected console statement      no-console
   43:3   error  Unexpected console statement      no-console
   44:3   error  Unexpected console statement      no-console
   51:3   error  Unexpected console statement      no-console
   64:3   error  Unexpected console statement      no-console
   68:3   error  Unexpected console statement      no-console
   74:3   error  Unexpected console statement      no-console
   75:3   error  Unexpected console statement      no-console
   76:3   error  Unexpected console statement      no-console
   77:3   error  Unexpected console statement      no-console
   78:3   error  Unexpected console statement      no-console
   79:3   error  Unexpected console statement      no-console
   80:3   error  Unexpected console statement      no-console
   81:3   error  Unexpected console statement      no-console
   82:3   error  Unexpected console statement      no-console
   94:3   error  Unexpected console statement      no-console
  126:11  error  ""runCount"" is already defined     no-redeclare
  169:34  error  ""test"" is defined but never used  no-unused-vars
  194:4   error  Unexpected trailing comma         comma-dangle"
dmajda,2016-01-22 13:21:28,https://api.github.com/repos/pegjs/pegjs/git/commits/488f32e661683a41a1bace35ad6f9ccd40c1fc51,488f32e661683a41a1bace35ad6f9ccd40c1fc51,"Fix ESLint errors in benchmark/index.js

Fix the following errors:

  74:14  error  ""benchmarks"" is not defined       no-undef
  84:36  error  ""test"" is defined but never used  no-unused-vars"
dmajda,2016-01-22 13:13:59,https://api.github.com/repos/pegjs/pegjs/git/commits/00faf20fe194241f81b5795c9328c16c9547a0a9,00faf20fe194241f81b5795c9328c16c9547a0a9,"Fix ESLint errors in spec/behavior/generated-parser-behavior.spec.js

Fix the following errors:

   24:46  error  Unexpected trailing comma  comma-dangle
  403:26  error  Unexpected trailing comma  comma-dangle
  414:26  error  Unexpected trailing comma  comma-dangle"
dmajda,2016-01-22 13:08:59,https://api.github.com/repos/pegjs/pegjs/git/commits/04f8b50f807224d502d14f5db064f8640f37c0eb,04f8b50f807224d502d14f5db064f8640f37c0eb,"Fix ESLint errors in spec/api/plugin-api.spec.js

Fix the following errors:

   59:35  error  ""options"" is defined but never used  no-unused-vars
   91:11  error  ""plugin"" is defined but never used   no-unused-vars
  102:35  error  ""options"" is defined but never used  no-unused-vars
  128:35  error  ""options"" is defined but never used  no-unused-vars

Note that ESLint revealed a real problem where the test supposedly
verifying receiving options by a plugin didn't actually verify anything."
dmajda,2016-01-22 13:00:55,https://api.github.com/repos/pegjs/pegjs/git/commits/47ac688ce940fe6a9f9496f86382bd0021082863,47ac688ce940fe6a9f9496f86382bd0021082863,"Fix ESLint errors in spec/api/generated-parser-api.spec.js

Fix the following errors:

  65:20  error  Unexpected console statement  no-console
  66:20  error  Unexpected console statement  no-console
  67:20  error  Unexpected console statement  no-console
  68:20  error  Unexpected console statement  no-console
  69:20  error  Unexpected console statement  no-console
  70:20  error  Unexpected console statement  no-console"
dmajda,2016-01-22 12:58:33,https://api.github.com/repos/pegjs/pegjs/git/commits/88c957c9e8c504fbbd662cd2a22434f08c69609b,88c957c9e8c504fbbd662cd2a22434f08c69609b,"Fix ESLint errors in lib/compiler/passes/generate-js.js

Fix the following errors:

   65:11  error  Unexpected trailing comma  comma-dangle
  211:40  error  Unexpected trailing comma  comma-dangle
  223:27  error  Unexpected trailing comma  comma-dangle
  233:27  error  Unexpected trailing comma  comma-dangle"
dmajda,2016-01-22 12:48:22,https://api.github.com/repos/pegjs/pegjs/git/commits/768ece28e606f19dc2f7cadfc66aad807d5d30e9,768ece28e606f19dc2f7cadfc66aad807d5d30e9,"Use ESLint instead of JSHint

Implement the swap and change various directives in the source code. The
""make hint"" target becomes ""make lint"".

The change leads to quite some errors being reported by ESLint. These
will be fixed in subsequent commits.

Note the configuration enables just the recommended rules. Later I plan
to enable more rules to enforce the coding standard. The configuration
also sets the environment to ""node"", which is far from ideal as the
codebase contains a mix of CommonJS, Node.js and browser code. I hope to
clean this up at some point."
dmajda,2016-01-15 14:30:51,https://api.github.com/repos/pegjs/pegjs/git/commits/48f5ea4b37157040edba01e098a81c7bb78cbebe,48f5ea4b37157040edba01e098a81c7bb78cbebe,"tools/impact: Tweak the uname call

It turns out that OS X doesn't support long options for uname and it
doesn't support -o/--operating-system at all. Let's tweak uname's
options into something POSIX-compatible which still gives reasonable
results.

The new ""uname -mrs"" call results in the following:

  OS               uname -mrs
  -----------------------------------------------
  OS X Mavericks   Darwin 15.2.0 x86_64
  Ubuntu 14.04     Linux 3.13.0-32-generic x86_64"
dmajda,2016-01-15 14:09:51,https://api.github.com/repos/pegjs/pegjs/git/commits/fdd6e66321ae6defe3db3cb1dea26809aaef30e7,fdd6e66321ae6defe3db3cb1dea26809aaef30e7,"tools/impact: Set locale to C at the beginning

Without this, shell's printf is unreliable. For example, on OSX with
cs_CZ.UTF-8 locale it complained about number formatting:

  tools/impact: line 51: printf: .0300: invalid number"
dmajda,2016-01-15 13:57:54,https://api.github.com/repos/pegjs/pegjs/git/commits/8eeb0d14695db9b3ebd26e2154e592ba3f571097,8eeb0d14695db9b3ebd26e2154e592ba3f571097,"tools/impact: Use printf instead of echo -n

It turns out that on OS X, /bin/sh pretends it doesn't know the echo -n
option and just prints it with other input."
dmajda,2016-01-15 09:32:21,https://api.github.com/repos/pegjs/pegjs/git/commits/6a3ede059daadb9815bd42cb6898d33a5fea40d0,6a3ede059daadb9815bd42cb6898d33a5fea40d0,".travis.yml: Tweak Node.js versions

Do not test under io.js (which is no longer a thing), test under Node.js
4.0.x and 5.0.x.

Zero minor versions are intentional, I wan't to make sure that PEG.js
doesn't depend on any features added later in the 4.x and 5.x cycle."
dmajda,2016-01-15 09:22:47,https://api.github.com/repos/pegjs/pegjs/git/commits/3a80933430cb7978b7a72ec3b63389c7c8f90bf9,3a80933430cb7978b7a72ec3b63389c7c8f90bf9,"package.json: Update the ""engine"" field

  * Use just 0.10 instead of 0.10.0 (it's shorter).

  * Remove space after >= (it is apparently conventionally not used in
    the npm world)."
dmajda,2016-01-15 09:12:37,https://api.github.com/repos/pegjs/pegjs/git/commits/3796cbfbadd0eff28085cf9c6c3856d7f93f850d,3796cbfbadd0eff28085cf9c6c3856d7f93f850d,"package.json: Reformat to formatting used by npm

This makes it possible to do e.g. ""npm install --save"" without a lot of
whitespace noise in the resulting diff."
dmajda,2016-01-15 08:38:15,https://api.github.com/repos/pegjs/pegjs/git/commits/874b9c3dea5fb4c1491f5c9c3fb27caad3519c9e,874b9c3dea5fb4c1491f5c9c3fb27caad3519c9e,Update copyright years to 2010-1016
dmajda,2015-12-11 14:30:01,https://api.github.com/repos/pegjs/pegjs/git/commits/f34ef59ff35a60739dee735adc0ba80d8c69cd5d,f34ef59ff35a60739dee735adc0ba80d8c69cd5d,"Merge pull request #382 from josephfrazier/travis-cache-node_modules

travis: cache node_modules for faster builds"
dmajda,2015-12-11 13:07:44,https://api.github.com/repos/pegjs/pegjs/git/commits/475215aa523d9fcc0c62b1eda8a4f25155d0b086,475215aa523d9fcc0c62b1eda8a4f25155d0b086,"Expose the AST node visitor builder via PEG.compiler.visitor

This is useful mainly for plugins which manipulate the AST."
dmajda,2015-12-04 09:56:45,https://api.github.com/repos/pegjs/pegjs/git/commits/d34faba59e8940d62c2ee3a55e45edf9d9c2b441,d34faba59e8940d62c2ee3a55e45edf9d9c2b441,"Speed up deduplication of expectations

The expectation deduplication algorithm called |Array.prototype.splice|
to eliminate each individual duplication, which was slow. This caused
problems with grammar/input combinations that generated a lot of
expecations (see #377 for an example).

This commit replaces the algorithm with much faster one, eliminating the
problem."
joseph-onsip,2015-10-18 17:43:44,https://api.github.com/repos/pegjs/pegjs/git/commits/2483b950e6462c26f395a3733c9de560fd9e5235,2483b950e6462c26f395a3733c9de560fd9e5235,"travis: cache node_modules for faster builds

This reduces build times by around 10 seconds.

http://blog.travis-ci.com/2013-12-05-speed-up-your-builds-cache-your-dependencies/"
dmajda,2015-10-17 07:21:52,https://api.github.com/repos/pegjs/pegjs/git/commits/972cafbee078acd90833f7566f9257e123048844,972cafbee078acd90833f7566f9257e123048844,"Merge pull request #380 from joseph-onsip/travis-container

travis: use containers for faster builds"
dmajda,2015-10-17 07:14:09,https://api.github.com/repos/pegjs/pegjs/git/commits/f20054e1b5a405927f8431aa1c021030101b0f82,f20054e1b5a405927f8431aa1c021030101b0f82,"Merge pull request #379 from joseph-onsip/browserify

Use browserify for building the browser version"
joseph-onsip,2015-10-16 15:52:37,https://api.github.com/repos/pegjs/pegjs/git/commits/8bd2e4965e0a857e067cb458518c2cc814eca4ae,8bd2e4965e0a857e067cb458518c2cc814eca4ae,"travis: use containers for faster builds

http://docs.travis-ci.com/user/migrating-from-legacy/"
joseph-onsip,2015-10-13 03:26:51,https://api.github.com/repos/pegjs/pegjs/git/commits/0d8c0458232339e2bc399c01140561d14e6a8058,0d8c0458232339e2bc399c01140561d14e6a8058,"Use browserify for building the browser version

This resolves https://github.com/pegjs/pegjs/issues/373 and,
since `browserify` produces a UMD bundle (due to `--standalone PEG`),
addresses the first part of https://github.com/pegjs/pegjs/issues/362,

> 1. Making PEG.js itself UMD module.

This also adds a MAIN_FILE variable to the Makefile, as specified by
https://github.com/joseph-onsip/pegjs/commit/7fe3aeb9990d602177aacda0aba83a2a4760c155#commitcomment-13817973"
dmajda,2015-10-09 15:21:33,https://api.github.com/repos/pegjs/pegjs/git/commits/a4a66a2e5be41832bcf23127a37515d155b700bc,a4a66a2e5be41832bcf23127a37515d155b700bc,"Switch from first/rest to head/tail in the PEG.js grammar

In the past year I worked on various grammars where first/rest or
head/tail were used as labels for parts of lists. I found I associate
head/tail with a list immediately, while in case of first/rest I have to
""parse"" grammar rules for a while before understanding their structure.

Moreover, I tend to assume that rest is a list of the same thigs as
first, but I don't have such assumption in case of head/tail. This
assumption was in conflict with the grammar structure.

I'm not sure how much these observations are applicable to others, but I
decided to act on them and switch from first/rest to head/tail."
dmajda,2015-10-09 15:09:33,https://api.github.com/repos/pegjs/pegjs/git/commits/e510ecc3d01103b61b504128cee5341dd8c4e005,e510ecc3d01103b61b504128cee5341dd8c4e005,"Switch from first/rest to head/tail in example grammars

In the past year I worked on various grammars where first/rest or
head/tail were used as labels for parts of lists. I found I associate
head/tail with a list immediately, while in case of first/rest I have to
""parse"" grammar rules for a while before understanding their structure.

Moreover, I tend to assume that rest is a list of the same thigs as
first, but I don't have such assumption in case of head/tail. This
assumption was in conflict with the grammar structure.

I'm not sure how much these observations are applicable to others, but I
decided to act on them and switch from first/rest to head/tail."
dmajda,2015-10-09 14:34:19,https://api.github.com/repos/pegjs/pegjs/git/commits/10d7a6aded0f212a978906ea720cb18e4ec4017d,10d7a6aded0f212a978906ea720cb18e4ec4017d,"Simplify the arithmetics example grammar

The arithmetics example grammar is the first thing everyone sees in the
online editor at the PEG.js website, but it begins with a complicated
|combine| function in the initializer. Without understanding it it is
impossible to understand code in the actions. This may be a barrier to
learning how PEG.js works.

This commit removes the |combine| function and gets rid of the whole
initializer, removing the learning obstacle and streamlining action
code. The only cost is a slight code duplication."
dmajda,2015-09-18 17:56:05,https://api.github.com/repos/pegjs/pegjs/git/commits/69a0f769fc1e3cd751affce198a8248cda2859c2,69a0f769fc1e3cd751affce198a8248cda2859c2,"Use literal raw text in error messages

Fixes #127."
dmajda,2015-09-18 17:17:57,https://api.github.com/repos/pegjs/pegjs/git/commits/36eb7b81b5b22d8211090fc52ff2afd6404e94db,36eb7b81b5b22d8211090fc52ff2afd6404e94db,"Use single quotes for |rawText| in parser specs

PEG.js convention is to use single quotes for code and |rawText| *is* a
piece of code (originally)."
dmajda,2015-09-12 19:17:28,https://api.github.com/repos/pegjs/pegjs/git/commits/25ab98027d5181c30871394066b1fedc29cc90d3,25ab98027d5181c30871394066b1fedc29cc90d3,"Remove info about found string from syntax errors

The |found| property wasn't very useful as it mostly contained just one
character or |null| (the exception being syntax errors triggered by
|error| or |expected|). Similarly, the ""but XXX found"" part of the error
message (based on the |found| property) wasn't much useful and was
redundant in presence of location info.

For these reasons, this commit removes the |found| property and
corresponding part of the error message from syntax errors. It also
modifies error location info slightly to cover a range of 0 characters,
not 1 character (except when the error is triggered by |error| or
|expected|). This corresponds more precisely to the actual situation.

Fixes #372."
dmajda,2015-09-11 14:46:26,https://api.github.com/repos/pegjs/pegjs/git/commits/44662657634f82c27ba774603b5fe9b58c90321b,44662657634f82c27ba774603b5fe9b58c90321b,"README.md: Remove link to Trello board

Trello board was replaced by development roadmap in the wiki."
dmajda,2015-09-11 13:06:57,https://api.github.com/repos/pegjs/pegjs/git/commits/bbb4f006cd782037a2b2558757c0217399ca0d52,bbb4f006cd782037a2b2558757c0217399ca0d52,"Report full rule chain in recursive rule errors

The idea came from a PR by @Mingun:

  https://github.com/pegjs/pegjs/pull/307"
dmajda,2015-09-11 12:58:53,https://api.github.com/repos/pegjs/pegjs/git/commits/491106c347ca9a62e527b94ba284a56ee51ca3b2,491106c347ca9a62e527b94ba284a56ee51ca3b2,"Report left recursion and infinite loops only as ""possible""

A semantic predicate can prevent the parser to actually enter infinite
recursion or loop. This is undetectable at compile-time."
dmajda,2015-09-04 15:35:37,https://api.github.com/repos/pegjs/pegjs/git/commits/ebf5d969b2ba8767d4a35b36bf412eecda72504f,ebf5d969b2ba8767d4a35b36bf412eecda72504f,"s/alwaysAdvancesOnSuccess/alwaysConsumesOnSuccess/

Matches terminology change from the previous commit."
dmajda,2015-09-04 15:23:42,https://api.github.com/repos/pegjs/pegjs/git/commits/6ff005786c41f7b3cd4c2f94f047bb90ffad531a,6ff005786c41f7b3cd4c2f94f047bb90ffad531a,"Talk about ""consuming input"", not ""advancing parser position""

It's shorter, less technical, and more understandible."
dmajda,2015-09-04 15:15:22,https://api.github.com/repos/pegjs/pegjs/git/commits/091e60112c264dced9de0c5268c90e3010380289,091e60112c264dced9de0c5268c90e3010380289,"Consistently use ""matched text"" to describe matched part of the input"
dmajda,2015-09-04 14:52:38,https://api.github.com/repos/pegjs/pegjs/git/commits/60ebd9e69556cf45eef9051b9c1e8c00491c7861,60ebd9e69556cf45eef9051b9c1e8c00491c7861,Simplify JSHint directives
dmajda,2015-09-04 14:39:58,https://api.github.com/repos/pegjs/pegjs/git/commits/efb420479ef470417a95bf4fab464bfedafb1d1b,efb420479ef470417a95bf4fab464bfedafb1d1b,Tweak package.json
dmajda,2015-09-04 13:41:20,https://api.github.com/repos/pegjs/pegjs/git/commits/48fe4d6580f6a65820e62269230be16b927e8a4e,48fe4d6580f6a65820e62269230be16b927e8a4e,"Rename generate-javascript.js to generate-js.js

Short & sweet."
dmajda,2015-09-04 13:38:17,https://api.github.com/repos/pegjs/pegjs/git/commits/575883586ff2f5aced444a5d0bc09d85cf642ac6,575883586ff2f5aced444a5d0bc09d85cf642ac6,"Rename javascript.js to js.js

Short & sweet."
dmajda,2015-08-28 09:42:29,https://api.github.com/repos/pegjs/pegjs/git/commits/20a4fb2e7f70a0695bee4aef4984b24c06db3627,20a4fb2e7f70a0695bee4aef4984b24c06db3627,Update version to 0.9.0
dmajda,2015-08-28 09:30:03,https://api.github.com/repos/pegjs/pegjs/git/commits/7aa4d519db75bf0d6f66f252454005140146325f,7aa4d519db75bf0d6f66f252454005140146325f,Update CHANGELOG.md
dmajda,2015-08-28 12:01:30,https://api.github.com/repos/pegjs/pegjs/git/commits/9e8cb04c81d68fa18ae854cb84240ff590032f4f,9e8cb04c81d68fa18ae854cb84240ff590032f4f,examples/arithmetics.pegjs: Remove trailing whitespace
dmajda,2015-08-28 09:24:48,https://api.github.com/repos/pegjs/pegjs/git/commits/a2d6488dae601ddea3de5010694210bfe9aa1634,a2d6488dae601ddea3de5010694210bfe9aa1634,CHANGELOG.md: Add header
dmajda,2015-08-24 09:16:10,https://api.github.com/repos/pegjs/pegjs/git/commits/cee0d6a60a5b872b446583d4d6c830625d8d205c,cee0d6a60a5b872b446583d4d6c830625d8d205c,"README.md: Update the ""Compatibility"" section

  * Added io.js.
  * Added Edge.
  * Spelled out IE."
dmajda,2015-08-21 18:33:25,https://api.github.com/repos/pegjs/pegjs/git/commits/787239e15c0b369d79deae2eb53b32fc816f4b63,787239e15c0b369d79deae2eb53b32fc816f4b63,Update copyright years
dmajda,2015-08-21 18:30:10,https://api.github.com/repos/pegjs/pegjs/git/commits/be5d14eb278a8f9edaf8b575cbabd2dd8fd06455,be5d14eb278a8f9edaf8b575cbabd2dd8fd06455,"Update jQuery.scrollTo's LICENSE file

I forgot to do that after upgrading jQuery.scrollTo itself."
dmajda,2015-08-21 15:38:04,https://api.github.com/repos/pegjs/pegjs/git/commits/a4b4a575693045eb3ab9109bbcc8c642f6cf91de,a4b4a575693045eb3ab9109bbcc8c642f6cf91de,"Custom tracers specs: s/'/""/

The convention is to use single quotes only for strings containing code."
dmajda,2015-08-21 15:36:34,https://api.github.com/repos/pegjs/pegjs/git/commits/1d38b973eed177ec2401c19045136d143d0831e1,1d38b973eed177ec2401c19045136d143d0831e1,Custom tracers specs: Simplify code slightly
dmajda,2015-08-21 15:24:49,https://api.github.com/repos/pegjs/pegjs/git/commits/671c22e80f0ffdb83791057058abb867cc758334,671c22e80f0ffdb83791057058abb867cc758334,"Avoid using |console| in default tracer and its tests when not defined

This makes default tracer and its tests work in IE 8-10."
dmajda,2015-08-21 15:20:40,https://api.github.com/repos/pegjs/pegjs/git/commits/e8b379f9456262bba3274a9432afb4a531ecd619,e8b379f9456262bba3274a9432afb4a531ecd619,"Rewrite |trace| option tests to avoid using |console|

This makes them cleaner and also makes them work in IE 8-10."
dmajda,2015-08-21 14:36:43,https://api.github.com/repos/pegjs/pegjs/git/commits/cca41e6618974df5ecbe7c1663d12bf4083585e4,cca41e6618974df5ecbe7c1663d12bf4083585e4,"Quote |class| object literal key

It broke IE 8."
dmajda,2015-08-21 14:00:45,https://api.github.com/repos/pegjs/pegjs/git/commits/6d824220455842aa6eeabfa2daf7ae5450ce1ba0,6d824220455842aa6eeabfa2daf7ae5450ce1ba0,"Remove trailing comma in an array literal

It caused an additional newline in generated parsers in IE 8."
dmajda,2015-08-21 13:40:28,https://api.github.com/repos/pegjs/pegjs/git/commits/969d39e8d9342b934b4e9e4b2d22f2d46b8cbb80,969d39e8d9342b934b4e9e4b2d22f2d46b8cbb80,"Remove trailing commas in object literals

They broke IE 8-9."
dmajda,2015-08-21 10:23:37,https://api.github.com/repos/pegjs/pegjs/git/commits/2d0ab55fa2d92393dda20cb7fe40094b967cbdd9,2d0ab55fa2d92393dda20cb7fe40094b967cbdd9,Use jQuery.scrollTo 2.1.1
dmajda,2015-08-21 10:20:46,https://api.github.com/repos/pegjs/pegjs/git/commits/b929f6ed97bda7471b0f450a0244d5430fbd994e,b929f6ed97bda7471b0f450a0244d5430fbd994e,Use jQuery 1.11.3
dmajda,2015-08-21 10:11:37,https://api.github.com/repos/pegjs/pegjs/git/commits/ae407572e64ebf5e486134b3031d451038c54b7a,ae407572e64ebf5e486134b3031d451038c54b7a,Use jshint 2.8.0
dmajda,2015-08-21 10:04:03,https://api.github.com/repos/pegjs/pegjs/git/commits/9cea4502f08746a946d62c8731a2018224f0de26,9cea4502f08746a946d62c8731a2018224f0de26,Use uglify-js 2.4.24
dmajda,2015-08-21 09:54:16,https://api.github.com/repos/pegjs/pegjs/git/commits/698dba299a08f87fb317db79f258225ca3d9c502,698dba299a08f87fb317db79f258225ca3d9c502,Use jasmine-node 1.14.5
dmajda,2015-08-18 08:58:22,https://api.github.com/repos/pegjs/pegjs/git/commits/d5f93a82820ba972e0669d75b5318015c45ad18f,d5f93a82820ba972e0669d75b5318015c45ad18f,Fix comment typo
dmajda,2015-08-18 08:57:50,https://api.github.com/repos/pegjs/pegjs/git/commits/a4772376fbbb79127bb6c36852e2d54ee13dfd34,a4772376fbbb79127bb6c36852e2d54ee13dfd34,Renumber bytecode instructions sequentially
dmajda,2015-08-17 08:58:37,https://api.github.com/repos/pegjs/pegjs/git/commits/ad27a300a8e3373d69cc284b0b35b23aba3ac358,ad27a300a8e3373d69cc284b0b35b23aba3ac358,"Fix left recursion detection in sequences

Report left recursion also in cases where the recursive rule invocation
is not a direct element of a sequence, but is wrapped inside an
expression.

Fixes #359."
dmajda,2015-08-14 12:14:45,https://api.github.com/repos/pegjs/pegjs/git/commits/9eb62051bee7c14cff718dfaf26f12ede3bc72f0,9eb62051bee7c14cff718dfaf26f12ede3bc72f0,"package.json: Add the ""license"" attribute

Based on a pull request by Peter deHaan (@pdehaan):

  https://github.com/pegjs/pegjs/pull/338"
dmajda,2015-08-07 12:34:19,https://api.github.com/repos/pegjs/pegjs/git/commits/cdeecf750f8a3f781459ed817815a537392993c1,cdeecf750f8a3f781459ed817815a537392993c1,"reportLeftRecursion: Change handling of the |visitedRules| array

Before this commit, the |reportLeftRecursion| pass was written in
functional style, passing the |visitedRules| array around as a parameter
and making a new copy each time a rule was visited. This apparently
caused performance problems in some deeply recursive grammars.

This commit makes it so that there is just one array which is shared
across all the visitor functions via a closure and modified as rules are
visited.

I don't like losing the functional style (it was elegant) but
performance is more important.

Fixes #203."
dmajda,2015-08-06 15:22:06,https://api.github.com/repos/pegjs/pegjs/git/commits/de1704f007523da4e8309d799adc24e9adcb0ea7,de1704f007523da4e8309d799adc24e9adcb0ea7,"Replace |util.{puts,error}| by |console.{log,error}|

The |util.puts| and |util.error| functions are deprecated in Node.js
0.12.x.

Based on a pull request by Jan Stránský (@burningtree):

  https://github.com/pegjs/pegjs/pull/334"
dmajda,2015-08-03 14:26:26,https://api.github.com/repos/pegjs/pegjs/git/commits/4b154e177f5881b746dd3d035274f396678d5779,4b154e177f5881b746dd3d035274f396678d5779,Update character categories in grammars to Unicode 8.0.0
dmajda,2015-08-06 14:38:38,https://api.github.com/repos/pegjs/pegjs/git/commits/703a35298527761eb1dd64acc5b9fccdb11deabb,703a35298527761eb1dd64acc5b9fccdb11deabb,"Change few testcase descriptions

Reaction to changes in 130cbcfaa34e61fe0fb38a9f0c0e780d91eb312c."
dmajda,2015-08-03 14:56:57,https://api.github.com/repos/pegjs/pegjs/git/commits/d7d7e87874bbea05ed2a6a7bd4c415db5e08b831,d7d7e87874bbea05ed2a6a7bd4c415db5e08b831,"Make infinite loop and left recursion detectors work with named rules

Add missing |named| case to the visitor in lib/compiler/asts.js, which
makes the infinite loop and left recursion detectors work correctly with
named rules.

The missing case caused |make parser| to fail with:

  140:34: Infinite loop detected.
  make: *** [parser] Error 1"
dmajda,2015-07-31 11:48:46,https://api.github.com/repos/pegjs/pegjs/git/commits/130cbcfaa34e61fe0fb38a9f0c0e780d91eb312c,130cbcfaa34e61fe0fb38a9f0c0e780d91eb312c,"Rename asts.matchesEmpty to alwaysAdvancesOnSuccess and negate it

This makes it more clear that the function isn't about the input the
expression *matched* but about the input it *consumed* when it matched.

Based on a comment by @Mingun:

  https://github.com/pegjs/pegjs/pull/307#issuecomment-89512575"
dmajda,2015-07-17 13:37:45,https://api.github.com/repos/pegjs/pegjs/git/commits/317059760a9e2ddbe89af1b24f8c7d916cecf4d3,317059760a9e2ddbe89af1b24f8c7d916cecf4d3,Fix incorrect pass name in a spec description
dmajda,2015-07-17 13:31:46,https://api.github.com/repos/pegjs/pegjs/git/commits/373f48c10fb6643dde033a8bb82e99bbc7de5000,373f48c10fb6643dde033a8bb82e99bbc7de5000,"Fix small error in two testcases

Pointed out by @Mingun:

  https://github.com/pegjs/pegjs/commit/6ce97457bf194f94f78ee7cfe7ee412b42d1c265#commitcomment-10548605"
dmajda,2015-07-17 12:16:46,https://api.github.com/repos/pegjs/pegjs/git/commits/6f2c75f7d8a2f32aa7ee35a88e0a820b66eca438,6f2c75f7d8a2f32aa7ee35a88e0a820b66eca438,Label specs: Improve structure and descriptions
dmajda,2015-07-17 09:43:30,https://api.github.com/repos/pegjs/pegjs/git/commits/8487c9a0fff46e3d629e80604badfccf66a63054,8487c9a0fff46e3d629e80604badfccf66a63054,Label specs: Add missing test case
dmajda,2015-07-17 09:36:35,https://api.github.com/repos/pegjs/pegjs/git/commits/f4385da17725d36931c9799cda0130067acc3e83,f4385da17725d36931c9799cda0130067acc3e83,Label specs: Unify formatting with other code
dmajda,2015-07-10 11:18:07,https://api.github.com/repos/pegjs/pegjs/git/commits/ddff5feea3593a4bca57b53dd8c39cd3a4f8b213,ddff5feea3593a4bca57b53dd8c39cd3a4f8b213,"Label specs: Simplify and regularize block-scoped label specs

There is no need to test 3 labels from the outside scope, 1 is enough."
dmajda,2015-07-10 11:56:44,https://api.github.com/repos/pegjs/pegjs/git/commits/122d7b0737f13b4ff8731d86d9c55721e1efb4f5,122d7b0737f13b4ff8731d86d9c55721e1efb4f5,"README.md: Mention there is no backtracking for *, +, and ?

Based on a pull request by Jak Wings (@jakwings):

  https://github.com/pegjs/pegjs/pull/333"
dmajda,2015-07-03 11:05:41,https://api.github.com/repos/pegjs/pegjs/git/commits/5e6b5da4e91790200f34efb9dce55103cd1aa261,5e6b5da4e91790200f34efb9dce55103cd1aa261,"Merge pull request #347 from mbaumgartl/errorstack

Add stack trace in engines based on V8"
dmajda,2015-06-13 05:14:29,https://api.github.com/repos/pegjs/pegjs/git/commits/cb640cd0b2835dbc74abb627c5dff5d1d3ee672a,cb640cd0b2835dbc74abb627c5dff5d1d3ee672a,"Merge pull request #345 from arlolra/split4

Even more split outs from #339"
arlolra,2015-06-08 18:21:19,https://api.github.com/repos/pegjs/pegjs/git/commits/12c169e7b5b39e29aae9ae8f70e416403b61cc86,12c169e7b5b39e29aae9ae8f70e416403b61cc86,"Convert PEG.js code to strict mode

 * Issues #323"
arlolra,2015-06-08 18:59:10,https://api.github.com/repos/pegjs/pegjs/git/commits/1a32ae7bd07306a78f28908ce3782344ff8eac5f,1a32ae7bd07306a78f28908ce3782344ff8eac5f,Make PEG global explicit in helpers
arlolra,2015-06-08 18:09:22,https://api.github.com/repos/pegjs/pegjs/git/commits/f4d2357609356068d89f9b9ca8c23aa4be3cd126,f4d2357609356068d89f9b9ca8c23aa4be3cd126,Make jshint aware of node globals
arlolra,2015-06-08 17:46:28,https://api.github.com/repos/pegjs/pegjs/git/commits/7a94f97b46fd8e7a29806d8ac19be235f0bb5d12,7a94f97b46fd8e7a29806d8ac19be235f0bb5d12,Convert benchmark files to modules
dmajda,2015-06-08 17:27:23,https://api.github.com/repos/pegjs/pegjs/git/commits/9815e4947794109f3fa001ba81c35c9302b415c5,9815e4947794109f3fa001ba81c35c9302b415c5,"Merge pull request #343 from arlolra/split2

More split outs from #339"
arlolra,2015-06-05 23:11:41,https://api.github.com/repos/pegjs/pegjs/git/commits/45e39c3ac881cbd98077e97a3d8788c817a2de53,45e39c3ac881cbd98077e97a3d8788c817a2de53,"Make generated parsers use strict mode

 * Issue #324

 * JSHint complains about two possible strict violations. But are valid
   uses of `this`, so we suppress the warnings."
arlolra,2015-06-05 22:33:35,https://api.github.com/repos/pegjs/pegjs/git/commits/7285ccfd4eac501a349cadf31f1c9ab68d99bbf6,7285ccfd4eac501a349cadf31f1c9ab68d99bbf6,"Remove block around initialize code

 * In strict mode code, functions can only be declared at top level or
   immediately within another function.  This means functions defined in
   the initializer would throw."
arlolra,2015-06-05 22:05:21,https://api.github.com/repos/pegjs/pegjs/git/commits/b079a056a2c2f283e95ae3f371253fe09a1f5048,b079a056a2c2f283e95ae3f371253fe09a1f5048,"Suppress linting newcap

 * When the ""use strict""; directive is set, constructors called without
   `new` will set the execution context to undefined. JSHint tries to be
   clever and forces on newcap. Suppress this behaviour, especially
   because newcap has gone the way of the dodo."
dmajda,2015-06-05 21:44:49,https://api.github.com/repos/pegjs/pegjs/git/commits/e0be643b7cfb8c18cf4450989c8882b4f90aff1f,e0be643b7cfb8c18cf4450989c8882b4f90aff1f,"Merge pull request #341 from arlolra/split

Split up the work from #339"
arlolra,2015-06-05 21:36:03,https://api.github.com/repos/pegjs/pegjs/git/commits/c71f723b3ff5ddd7329d125dae51a553f5cabdb3,c71f723b3ff5ddd7329d125dae51a553f5cabdb3,Run `make hint` before testing
arlolra,2015-06-05 21:04:25,https://api.github.com/repos/pegjs/pegjs/git/commits/16756d90101a97038085e66e6a9b65dfd0acb7d8,16756d90101a97038085e66e6a9b65dfd0acb7d8,Run CI on newer version of node / iojs
arlolra,2015-06-05 20:55:55,https://api.github.com/repos/pegjs/pegjs/git/commits/7695e5e3c5e8c3630cb9270da55a05164c033309,7695e5e3c5e8c3630cb9270da55a05164c033309,Fix complaints from `make hint`
dmajda,2015-05-29 21:43:54,https://api.github.com/repos/pegjs/pegjs/git/commits/f2200e48af57bc8e90342e62e9389c9ca3e4f91d,f2200e48af57bc8e90342e62e9389c9ca3e4f91d,"Optimize location info computation

Before this commit, position details (line and column) weren't computed
efficiently from the current parse position. There was a cache but it
held only one item and it was rarely hit in practice. This resulted in
frequent rescanning of the whole input when the |location| function was
used in various places in a grammar.

This commit extends the cache to remember position details for any
position they were ever computed for. In case of a cache miss, the cache
is searched for a value corresponding to the nearest lower position,
which is then used to compute position info for the desired position
(which is then cached). The whole input never needs to be rescanned.

No items are ever evicted from the cache. I think this is fine as the
max number of entries is the length of the input. If this becomes a
problem I can introduce some eviction logic later.

The performance impact of this change is significant. As the benchmark
suite doesn't contain any grammar with |location| calls I just used a
little ad-hoc benchmark script which measured time to parse the grammar
of PEG.js itself (which contains |location| calls):

  var fs     = require(""fs""),
      parser = require(""./lib/parser"");

  var grammar = fs.readFileSync(""./src/parser.pegjs"", ""utf-8""),
      startTime, endTime;

  startTime = (new Date()).getTime();
  parser.parse(grammar);
  endTime = (new Date()).getTime();

  console.log(endTime - startTime);

The measured time went from ~293 ms to ~54 ms on my machine.

Fixes #337."
dmajda,2015-05-29 21:27:25,https://api.github.com/repos/pegjs/pegjs/git/commits/29bb921994dea18a474cdb274851bac19d8c8383,29bb921994dea18a474cdb274851bac19d8c8383,"Rename |peg$cache| to |peg$resultsCache|

This change will make the results cache clearly distinguishable from the
position details cache (which I'll add in a minute)."
dmajda,2015-04-06 08:34:07,https://api.github.com/repos/pegjs/pegjs/git/commits/eaca5f0acf97b66ef141fed84aa95d4e72e33757,eaca5f0acf97b66ef141fed84aa95d4e72e33757,"Add location information to |GrammarError|

This means all errors thrown by |PEG.buildParser| now have associated
location information."
dmajda,2015-04-06 08:12:31,https://api.github.com/repos/pegjs/pegjs/git/commits/89146915ce7e3f593fce96d217c06f287fc15bab,89146915ce7e3f593fce96d217c06f287fc15bab,"Add location information to AST nodes

This will allow to add location information to |GrammarError| exceptions
thrown in various passes."
dmajda,2015-04-03 15:28:48,https://api.github.com/repos/pegjs/pegjs/git/commits/d1fe86683b75d29ef52495ad643ca6b064d6a5f5,d1fe86683b75d29ef52495ad643ca6b064d6a5f5,"Improve location info in tracing events

Replace |line|, |column|, and |offset| properties of tracing events with
the |location| property. It contains an object similar to the one
returned by the |location| function available in action code:

  {
    start: { offset: 23, line: 5, column: 6 },
    end:   { offset: 25, line: 5, column: 8 }
  }

For the |rule.match| event, |start| refers to the position at the
beginning of the matched input and |end| refers to the position after
the end of the matched input.

For |rule.enter| and |rule.fail| events, both |start| and |end| refer to
the current position at the time the rule was entered."
dmajda,2015-04-03 13:59:46,https://api.github.com/repos/pegjs/pegjs/git/commits/065f4e1b752a78eaa2149aee04d4d67838a60865,065f4e1b752a78eaa2149aee04d4d67838a60865,"Improve location info in syntax errors

Replace |line|, |column|, and |offset| properties of |SyntaxError| with
the |location| property. It contains an object similar to the one
returned by the |location| function available in action code:

  {
    start: { offset: 23, line: 5, column: 6 },
    end:   { offset: 25, line: 5, column: 8 }
  }

For syntax errors produced in the middle of the input, |start| refers to
the first unparsed character and |end| refers to the character behind it
(meaning the span is 1 character). This corresponds to the portion of
the input in the |found| property.

For syntax errors produced the end of the input, both |start| and |end|
refer to a character past the end of the input (meaning the span is 0
characters).

For syntax errors produced by calling |expected| or |error| functions in
action code the location info is the same as the |location| function
would return."
dmajda,2015-04-03 11:54:54,https://api.github.com/repos/pegjs/pegjs/git/commits/b1ad2a1f61b44c897b37975e023b8883e155aab0,b1ad2a1f61b44c897b37975e023b8883e155aab0,"Rename |reportedPos| to |savedPos|

Preform the following renames:

  * |reportedPos| -> |savedPos| (abstract machine variable)
  * |peg$reportedPos| -> |peg$savedPos| (variable in generated code)
  * |REPORT_SAVED_POS| -> |LOAD_SAVED_POS| (instruction)
  * |REPORT_CURR_POS| -> |UPDATE_SAVED_POS| (instruction)

The idea is that the name |reportedPos| is no longer accurate after the
|location| change (seea the previous commit) because now both
|reportedPos| and |currPos| are reported to user code. Renaming to
|savedPos| resolves this inaccuracy.

There is probably some better name for the concept than quite generic
|savedPos|, but it doesn't come to me."
dmajda,2015-04-02 14:28:08,https://api.github.com/repos/pegjs/pegjs/git/commits/4f7145e360b274807a483ebdcef4bea5ed460464,4f7145e360b274807a483ebdcef4bea5ed460464,"Improve location info available in action code

Replace |line|, |column|, and |offset| functions with the |location|
function. It returns an object like this:

  {
    start: { offset: 23, line: 5, column: 6 },
    end:   { offset: 25, line: 5, column: 8 }
  }

In actions, |start| refers to the position at the beginning of action's
expression and |end| refers to the position after the end of action's
expression. This allows one to easily add location info e.g. to AST
nodes created in actions.

In predicates, both |start| and |end| refer to the current position.

Fixes #246."
dmajda,2015-04-02 12:41:47,https://api.github.com/repos/pegjs/pegjs/git/commits/e75f21dc8f0e66b3d87c4c19b3fcb8f89d9c3acd,e75f21dc8f0e66b3d87c4c19b3fcb8f89d9c3acd,"Don't indent empty lines when creating browser version

This prevents having lines with nothing but 4 spaces in the output."
dmajda,2015-04-02 12:35:06,https://api.github.com/repos/pegjs/pegjs/git/commits/889563a0aeb0dec395d9d19abac1f59264f8ca98,889563a0aeb0dec395d9d19abac1f59264f8ca98,"Add missing "";"""
dmajda,2015-04-02 12:34:26,https://api.github.com/repos/pegjs/pegjs/git/commits/3473c6cb640fed47aad8f6738e81dcaec88ea8a9,3473c6cb640fed47aad8f6738e81dcaec88ea8a9,Remove extra whitespace
dmajda,2015-04-02 12:32:31,https://api.github.com/repos/pegjs/pegjs/git/commits/fb320c4c5955570855e18052cd83156e199830fe,fb320c4c5955570855e18052cd83156e199830fe,Fix small errors in Jasmine matcher messages
dmajda,2015-04-01 10:16:27,https://api.github.com/repos/pegjs/pegjs/git/commits/d7fc0b5c3bfbcd079712d2d4958ec38eb9ad3822,d7fc0b5c3bfbcd079712d2d4958ec38eb9ad3822,"Implement infinite loop detection

Fixes #26."
dmajda,2015-04-01 09:33:15,https://api.github.com/repos/pegjs/pegjs/git/commits/95ce20ed9237032bd5785d0be03a0d48dadcc67f,95ce20ed9237032bd5785d0be03a0d48dadcc67f,"Extract the |matchesEmpty| visitor from the |reportLeftRecursion| pass

Beside the recursion detector, the visitor will also be used by infinite
loop detector.

Note the newly created |asts.matchesEmpty| function re-creates the
visitor each time it is called, which makes it slower than necessary.
This could have been worked around in various ways but I chose to defer
that optimization because real-world performance impact is small."
dmajda,2015-04-01 08:08:45,https://api.github.com/repos/pegjs/pegjs/git/commits/03a391e87452909110798423a861c747513b3746,03a391e87452909110798423a861c747513b3746,"s/appliedRules/visitedRules/

The rules are not really *applied* by the |reportLeftRecursion| pass,
they are just *visited*."
dmajda,2015-04-01 08:07:01,https://api.github.com/repos/pegjs/pegjs/git/commits/25ed2b7ee28b1d5835d661f070a488ee466e1b01,25ed2b7ee28b1d5835d661f070a488ee466e1b01,Improve comment describing the |reportLeftRecursion| pass
dmajda,2015-03-31 17:02:59,https://api.github.com/repos/pegjs/pegjs/git/commits/6ce97457bf194f94f78ee7cfe7ee412b42d1c265,6ce97457bf194f94f78ee7cfe7ee412b42d1c265,"Fix left recursion detection

So far, left recursion detector assumed that left recursion occurs only
when the recursive rule is at the very left-hand side of rule's
expression:

  start = start

This didn't catch cases like this:

  start = ""a""? start

In general, if a rule reference can be reached without consuming any
input, it can lead to left recursion. This commit fixes the detector to
consider that.

Fixes #190."
dmajda,2015-02-24 04:12:24,https://api.github.com/repos/pegjs/pegjs/git/commits/da57118a43a904f753d44d407994cf0b36358adc,da57118a43a904f753d44d407994cf0b36358adc,"Implement basic support for tracing

Parsers can now be generated with support for tracing using the --trace
CLI option or a boolean |trace| option to |PEG.buildParser|. This makes
them trace their progress, which can be useful for debugging. Parsers
generated with tracing support are called ""tracing parsers"".

When a tracing parser executes, by default it traces the rules it enters
and exits by writing messages to the console. For example, a parser
built from this grammar:

  start = a / b
  a = ""a""
  b = ""b""

will write this to the console when parsing input ""b"":

  1:1 rule.enter start
  1:1 rule.enter   a
  1:1 rule.fail    a
  1:1 rule.enter   b
  1:2 rule.match   b
  1:2 rule.match start

You can customize tracing by passing a custom *tracer* to parser's
|parse| method using the |tracer| option:

  parser.parse(input, { trace: tracer });

This will replace the built-in default tracer (which writes to the
console) by the tracer you supplied.

The tracer must be an object with a |trace| method. This method is
called each time a tracing event happens. It takes one argument which is
an object describing the tracing event.

Currently, three events are supported:

  * rule.enter -- triggered when a rule is entered
  * rule.match -- triggered when a rule matches successfully
  * rule.fail  -- triggered when a rule fails to match

These events are triggered in nested pairs -- for each rule.enter event
there is a matching rule.match or rule.fail event.

The event object passed as an argument to |trace| contains these
properties:

  * type   -- event type
  * rule   -- name of the rule the event is related to
  * offset -- parse position at the time of the event
  * line   -- line at the time of the event
  * column -- column at the time of the event
  * result -- rule's match result (only for rule.match event)

The whole tracing API is somewhat experimental (which is why it isn't
documented properly yet) and I expect it will evolve over time as
experience is gained.

The default tracer is also somewhat bare-bones. I hope that PEG.js user
community will develop more sophisticated tracers over time and I'll be
able to integrate their best ideas into the default tracer."
dmajda,2015-02-14 16:35:09,https://api.github.com/repos/pegjs/pegjs/git/commits/675561f085261b81f9bf8356ef9451cd5e5b05ce,675561f085261b81f9bf8356ef9451cd5e5b05ce,"Rename and generalize |generateCache{Header,Footer}|

Rename |generateCache{Header,Footer}| to |generateRule{Header,Footer}|
and change their responsibility to generate overall header/footer of a
rule function (when optimizing for speed) or the |peg$parseRule|
function (when optimizing for speed). This creates a natural place where
to generate tracing code (coming soon)."
dmajda,2015-02-13 13:10:32,https://api.github.com/repos/pegjs/pegjs/git/commits/fb5f6c6ee94b962c45f591f64b293bc11ba57ae6,fb5f6c6ee94b962c45f591f64b293bc11ba57ae6,"Make labels behave like block-scoped variables

Action and predicate code can now see variables defined in expressions
""above"" them.

Based on a pull request by Bryon Vandiver (@asterick):

  https://github.com/pegjs/pegjs/pull/180

Fixes #316."
dmajda,2015-01-26 08:44:42,https://api.github.com/repos/pegjs/pegjs/git/commits/73795a65ccda02da106691dd3f35abe320714b65,73795a65ccda02da106691dd3f35abe320714b65,"Behavior specs cleanup: Add group specs

While groups don't create separate nodes on the AST level, they exist
as concept on the user level, so they should be specified."
dmajda,2015-01-26 08:42:37,https://api.github.com/repos/pegjs/pegjs/git/commits/e306b58443446fb8b525a84ba03cd424c5785af2,e306b58443446fb8b525a84ba03cd424c5785af2,Behavior specs cleanup: Improve error reporting specs
dmajda,2015-01-26 08:37:20,https://api.github.com/repos/pegjs/pegjs/git/commits/e9d038547d42796ca857fcaa4bfb7466b0d35718,e9d038547d42796ca857fcaa4bfb7466b0d35718,"Behavior specs cleanup: Improve semantic predicate specs

Note that use of |text| inside semantic predicate code is no longer
tested and officially supported."
dmajda,2015-01-26 08:10:52,https://api.github.com/repos/pegjs/pegjs/git/commits/3d9600b81bb39684f6333b2d1ab624d4108ed6c8,3d9600b81bb39684f6333b2d1ab624d4108ed6c8,Behavior specs cleanup: Improve action specs
dmajda,2015-01-26 06:44:51,https://api.github.com/repos/pegjs/pegjs/git/commits/b623396cb8732f4612e11f8219d3e2bb72afd9f2,b623396cb8732f4612e11f8219d3e2bb72afd9f2,"Behavior specs cleanup: Improve initializer specs

Note that use of |text|, |offset|, |line|, and |column| inside
initializer code is no longer tested and officially supported."
dmajda,2015-01-24 19:17:52,https://api.github.com/repos/pegjs/pegjs/git/commits/fee58d0806c5c5e30025072513670f7b58b232fc,fee58d0806c5c5e30025072513670f7b58b232fc,Behavior specs cleanup: Improve rule specs
dmajda,2015-01-24 19:04:49,https://api.github.com/repos/pegjs/pegjs/git/commits/fa70e70ddf250a1dbb837d1e4b2cec249c8f1ff6,fa70e70ddf250a1dbb837d1e4b2cec249c8f1ff6,Behavior specs cleanup: Improve choice specs
dmajda,2015-01-24 19:02:06,https://api.github.com/repos/pegjs/pegjs/git/commits/b3828919e2b0af03f4cdbd9578f2d03557ccf340,b3828919e2b0af03f4cdbd9578f2d03557ccf340,Behavior specs cleanup: Improve sequence specs
dmajda,2015-01-16 15:24:42,https://api.github.com/repos/pegjs/pegjs/git/commits/548209b48bc23df2ec7b9917f3a02d46783bad1c,548209b48bc23df2ec7b9917f3a02d46783bad1c,Behavior specs cleanup: Improve simple predicate specs
dmajda,2015-01-16 14:45:54,https://api.github.com/repos/pegjs/pegjs/git/commits/52144e48cb2357d8c3914de4d28d567d6010b90f,52144e48cb2357d8c3914de4d28d567d6010b90f,Behavior specs cleanup: Improve label specs
dmajda,2015-01-16 14:42:32,https://api.github.com/repos/pegjs/pegjs/git/commits/c5c44b9d0c22727ebd6640fdb3cd8c8c26b43d5a,c5c44b9d0c22727ebd6640fdb3cd8c8c26b43d5a,Behavior specs cleanup: Improve text specs
dmajda,2015-01-16 14:24:48,https://api.github.com/repos/pegjs/pegjs/git/commits/bb708490a00df1bfea216f66088627b4510977c9,bb708490a00df1bfea216f66088627b4510977c9,Behavior specs cleanup: Improve one or more specs
dmajda,2015-01-16 14:20:33,https://api.github.com/repos/pegjs/pegjs/git/commits/b9a3b44cf2704b2a03d1f61dbb56cd8e6cb8a2f8,b9a3b44cf2704b2a03d1f61dbb56cd8e6cb8a2f8,Behavior specs cleanup: Improve zero or more specs
dmajda,2015-01-16 14:08:11,https://api.github.com/repos/pegjs/pegjs/git/commits/c377eff876ee0dd3c975262978b2741e2caf4fba,c377eff876ee0dd3c975262978b2741e2caf4fba,Behavior specs cleanup: Improve optional specs
dmajda,2015-01-12 15:53:59,https://api.github.com/repos/pegjs/pegjs/git/commits/ade2c249f21067c036733d44c07bdd4f83f1eed8,ade2c249f21067c036733d44c07bdd4f83f1eed8,Behavior specs cleanup: Improve rule reference specs
dmajda,2015-01-12 15:38:29,https://api.github.com/repos/pegjs/pegjs/git/commits/936d6453a5ed6e2c7540f1a846104314fe94bd25,936d6453a5ed6e2c7540f1a846104314fe94bd25,Behavior specs cleanup: Improve dot specs
dmajda,2015-01-12 15:23:08,https://api.github.com/repos/pegjs/pegjs/git/commits/74be12c6572881815b1a3963555f718aea8c120a,74be12c6572881815b1a3963555f718aea8c120a,Behavior specs cleanup: Improve character class specs
dmajda,2015-01-12 15:09:38,https://api.github.com/repos/pegjs/pegjs/git/commits/54191fbf123c80754e470c21cd76f0f8b67601f8,54191fbf123c80754e470c21cd76f0f8b67601f8,Behavior specs cleanup: Improve literal specs
dmajda,2015-01-12 15:07:38,https://api.github.com/repos/pegjs/pegjs/git/commits/2faff0000e02232e52b3ac616ad89c0ae1a5ba93,2faff0000e02232e52b3ac616ad89c0ae1a5ba93,"Behavior specs cleanup: Make |toParse| work without expected value

This means we can assert just ""this string parses"" and ignore the
returned value."
dmajda,2015-01-12 14:28:31,https://api.github.com/repos/pegjs/pegjs/git/commits/ce91921a1d7708836257ab528a3423ddb13f7f5e,ce91921a1d7708836257ab528a3423ddb13f7f5e,"Behavior specs cleanup: Don't describe named rules separately

While naming a rule creates a separate node on the AST level, it's not a
new concept on the user level, so its specs should be a part of rule
specs."
dmajda,2015-01-12 13:48:29,https://api.github.com/repos/pegjs/pegjs/git/commits/a597e65a663b7121a3dacac8a85ce696d0402f69,a597e65a663b7121a3dacac8a85ce696d0402f69,"Behavior specs cleanup: Reorder toplevel |describe| blocks

Reorder toplevel |describe| blocks to more closely match ordering used
in the PEG.js grammar and elsewhere in PEG.js."
dmajda,2015-01-12 13:31:55,https://api.github.com/repos/pegjs/pegjs/git/commits/3308807d22e14e110c533b62bd0ce0f6eab9ca21,3308807d22e14e110c533b62bd0ce0f6eab9ca21,"Behavior specs cleanup: Move spec/api/generated-parser-behavior.spec.js

Move spec/api/generated-parser-behavior.spec.js to
spec/behavior/generated-parser-behavior.spec.js. It's not an API test,
strictly speaking."
dmajda,2014-12-05 14:33:29,https://api.github.com/repos/pegjs/pegjs/git/commits/84473db3ce6dde018da4b15cf1587ad2c18a6674,84473db3ce6dde018da4b15cf1587ad2c18a6674,Specs cleanup: Small description cleanups/fixes
dmajda,2015-01-09 15:03:36,https://api.github.com/repos/pegjs/pegjs/git/commits/cc8edd8892b92c13a4b6b65ac26fe0240d144e4e,cc8edd8892b92c13a4b6b65ac26fe0240d144e4e,"README.md: Fix typo

Based on a pull request by Julien Valéry:

  https://github.com/pegjs/website/pull/14"
dmajda,2014-12-15 14:28:57,https://api.github.com/repos/pegjs/pegjs/git/commits/fb7de36051d88a5afeef6199cfcacb1dd70d6016,fb7de36051d88a5afeef6199cfcacb1dd70d6016,"Update website URL

PEG.js website was moved from http://pegjs.majda.cz/ to http://pegjs.org/."
dmajda,2014-12-12 13:06:40,https://api.github.com/repos/pegjs/pegjs/git/commits/2dedce52d6b9b0129ce5ce3787feb31d2480bdfb,2dedce52d6b9b0129ce5ce3787feb31d2480bdfb,Add info about the Bower package maintainer
dmajda,2014-12-12 13:06:11,https://api.github.com/repos/pegjs/pegjs/git/commits/9a822528f9b33a07631cca16f7a0996b6f2f2fd7,9a822528f9b33a07631cca16f7a0996b6f2f2fd7,Add Bower installation instructions
dmajda,2014-11-28 12:56:47,https://api.github.com/repos/pegjs/pegjs/git/commits/178d56699a35400bac1c19bb030fc9de03af2a3a,178d56699a35400bac1c19bb030fc9de03af2a3a,"Update GitHub project URLs

See https://groups.google.com/d/msg/pegjs/4a6zWKQSG6U/n8Pm257Lz6wJ.

I didn't update CHANGELOG.md as I consider issue URLs there historical artifacts
;-)"
dmajda,2014-06-07 12:20:53,https://api.github.com/repos/pegjs/pegjs/git/commits/5a2ca2abc77e61e726c025b31b686bec05ff8535,5a2ca2abc77e61e726c025b31b686bec05ff8535,Add two missing blank lines
dmajda,2014-06-07 12:17:11,https://api.github.com/repos/pegjs/pegjs/git/commits/5ce5f7a61205b140f0eccccf8d0dad07e382fad4,5ce5f7a61205b140f0eccccf8d0dad07e382fad4,"Specs cleanup: Use raw node types in |generateBytecode| specs

Use raw node types instead of humanized node names in |generateBytecode|
specs. This corresponds more closely to the level the specs are written
at."
dmajda,2014-06-07 12:06:42,https://api.github.com/repos/pegjs/pegjs/git/commits/0977dd37a318d56faea8417b84a9acb9517e93e0,0977dd37a318d56faea8417b84a9acb9517e93e0,"Reordering in visitors and their specs

Reorder visiting functions and their specs to more closely match
ordering used in the PEG.js grammar."
dmajda,2014-06-07 07:11:00,https://api.github.com/repos/pegjs/pegjs/git/commits/850ddf5889d7b660813aec87f3ff9aadc5bfe5cd,850ddf5889d7b660813aec87f3ff9aadc5bfe5cd,"Specs cleanup: Simplify compiler passes specs

After 898a7b5a2d0438aecfca9d0ec548ff60fcb00747 the specs mostly tested
the visitor implementation, not actual code in the passes."
dmajda,2014-06-07 06:49:04,https://api.github.com/repos/pegjs/pegjs/git/commits/4ec9e6ba10246a660badcd049368640fab53feaa,4ec9e6ba10246a660badcd049368640fab53feaa,"Remove useless test in the |reportLeftRecursion| pass

Empty sequences are not allowed anymore so we don't have to test for
them."
dmajda,2014-06-04 05:23:34,https://api.github.com/repos/pegjs/pegjs/git/commits/898a7b5a2d0438aecfca9d0ec548ff60fcb00747,898a7b5a2d0438aecfca9d0ec548ff60fcb00747,"Simplify visitors by providing default visit functions

The |visitor.build| function now supplies default visit functions for
visitors it builds. These functions don't do anything beside traversing
the tree and passing arguments around to child visit functions.

Having the default visit functions allowed to simplify several visitors."
dmajda,2014-06-04 05:37:19,https://api.github.com/repos/pegjs/pegjs/git/commits/4a3b9cbb8d4694f0c4fa8d3698e30f10cf6051c1,4a3b9cbb8d4694f0c4fa8d3698e30f10cf6051c1,"Require Node.js >= 0.10.0

Travis CI builds with Node.js 0.8.x started to fail:

  https://travis-ci.org/dmajda/pegjs/jobs/26691570

Rather than investigating what's wrong I decided to stop supporting Node
0.8.x. Node.js 0.10.x is here for over a year, which should be enough
time for everyone to upgrade in the fast-paced Node.js world."
dmajda,2014-05-23 13:07:22,https://api.github.com/repos/pegjs/pegjs/git/commits/e101e1b6f362b3619220acf5daec2a2d87abd385,e101e1b6f362b3619220acf5daec2a2d87abd385,"Specs cleanup: Implement generated parser API specs

The generated parser API specs are mostly extracted from
generated-parser.spec.js, which got renamed to
generated-parser-behavior.spec.js to better reflect its purpose."
dmajda,2014-05-23 10:57:07,https://api.github.com/repos/pegjs/pegjs/git/commits/94c8b08acff56c4ffa981615482bb13aee69731e,94c8b08acff56c4ffa981615482bb13aee69731e,Specs cleanup: Implement plugin API specs
dmajda,2014-05-17 05:52:49,https://api.github.com/repos/pegjs/pegjs/git/commits/d0ff834a3d5e02d1b60f1ef4681f3e8d1b383081,d0ff834a3d5e02d1b60f1ef4681f3e8d1b383081,"Specs cleanup: Implement PEG.js API specs

Some parts were previously part of generated parser specs, these were
moved."
dmajda,2014-05-16 15:55:30,https://api.github.com/repos/pegjs/pegjs/git/commits/0306a76152af73905eb80298fbd70b76fc6f9189,0306a76152af73905eb80298fbd70b76fc6f9189,"Specs cleanup: Rename & simplify |varyAll|

Rename |varyAll| to |varyOptimizationOptions|, because that's what the
function does. Simplify as we don't need a fully generic solution."
dmajda,2014-05-16 13:59:49,https://api.github.com/repos/pegjs/pegjs/git/commits/3d637173ee2f4d07c016135ceee9eb3321cd5769,3d637173ee2f4d07c016135ceee9eb3321cd5769,"Specs cleanup: Split specs into unit and API specs

Unit specs are unit tests of internal stuff. API specs are tests of the
user-visible APIs and behavior.

I think it makes sense to make this distinction because then the public
API line is more clearly visible e.g. when using the specs as
documentation."
dmajda,2014-05-17 06:00:21,https://api.github.com/repos/pegjs/pegjs/git/commits/f457c41dd481a20c17e985bb79e7fdd4e3503ca9,f457c41dd481a20c17e985bb79e7fdd4e3503ca9,"Declare the |j| variable before use in lib/utils/arrays.js

Until now it was inadvertently global."
dmajda,2014-05-17 05:54:16,https://api.github.com/repos/pegjs/pegjs/git/commits/24394e3f9120eb166547a716e06acceae6f824d9,24394e3f9120eb166547a716e06acceae6f824d9,Fix comment alignment in lib/compiler/passes/generate-javascript.js
dmajda,2014-05-16 11:34:53,https://api.github.com/repos/pegjs/pegjs/git/commits/2b06476c695fedcf0042f085db5c7c359ce95096,2b06476c695fedcf0042f085db5c7c359ce95096,Regenerate lib/parser.js after bytecode changes
dmajda,2014-05-15 17:12:38,https://api.github.com/repos/pegjs/pegjs/git/commits/dad1207c46fa252e80f44e566cbaec3ad0fa83ba,dad1207c46fa252e80f44e566cbaec3ad0fa83ba,"Improve semantics of the TEXT bytecode instruction

The TEXT instruction now replaces position at the top of the stack with
the input from that position until the current position. This is simpler
and cleaner semantics than the previous one, where TEXT also popped an
additional value from the stack and kept the position there."
dmajda,2014-05-11 14:23:04,https://api.github.com/repos/pegjs/pegjs/git/commits/a815a8b902beb33544ad72d92f21869444b3057e,a815a8b902beb33544ad72d92f21869444b3057e,"Implement additional PUSH_* bytecode instructions

Implement the following bytecode instructions:

  * PUSH_UNDEFINED
  * PUSH_NULL
  * PUSH_FAILED
  * PUSH_EMPTY_ARRAY

These instructions push simple JavaSccript values to the stack directly,
without going through constants. This makes the bytecode slightly
shorter and the bytecode generator somewhat simpler.

Also note that PUSH_EMPTY_ARRAY allows us to avoid a hack which protects
the [] constant from modification."
dmajda,2014-05-10 14:40:39,https://api.github.com/repos/pegjs/pegjs/git/commits/c6f0818d498cbf9f186381e9bcdf250e6b9f403b,c6f0818d498cbf9f186381e9bcdf250e6b9f403b,"Use sentence case consistently in {spec,benchmark}/README.md headers"
dmajda,2014-05-10 14:22:41,https://api.github.com/repos/pegjs/pegjs/git/commits/4d456402be1af94779d98e79567778f4db8670a5,4d456402be1af94779d98e79567778f4db8670a5,"Small cleanup of benchmark/index.js

Update coding style to match the rest of PEG.js."
dmajda,2014-05-10 14:18:55,https://api.github.com/repos/pegjs/pegjs/git/commits/811a5c0f013e2578116e2ae3fe20e8a298c51ebc,811a5c0f013e2578116e2ae3fe20e8a298c51ebc,"Small cleanup of benchmark/runner.js

Update coding style to match the rest of PEG.js."
dmajda,2014-05-09 13:06:32,https://api.github.com/repos/pegjs/pegjs/git/commits/b901a5c37acfb48c48d48a53b1dd283d3484dbdb,b901a5c37acfb48c48d48a53b1dd283d3484dbdb,"Rewrite benchmark/README.md

More clarity, better grammar (hopefully)."
dmajda,2014-05-09 13:04:56,https://api.github.com/repos/pegjs/pegjs/git/commits/f10281499891220a6193207f8397c3f37bff9970,f10281499891220a6193207f8397c3f37bff9970,"Rewrite spec/README.md

More clarity, better grammar (hopefully)."
dmajda,2014-05-09 12:41:00,https://api.github.com/repos/pegjs/pegjs/git/commits/fc1d54d04943261aec09618522890fdd2880b03c,fc1d54d04943261aec09618522890fdd2880b03c,"Convert benchmark/README to Markdown

It will look nicer on GitHub."
dmajda,2014-05-09 12:37:05,https://api.github.com/repos/pegjs/pegjs/git/commits/24e1644c58ab9b202ad5cb49471fc7a6b32e4963,24e1644c58ab9b202ad5cb49471fc7a6b32e4963,"Convert spec/README to Markdown

It will look nicer on GitHub."
dmajda,2014-05-09 11:39:56,https://api.github.com/repos/pegjs/pegjs/git/commits/85c8f386c16084906d6c2eb67f9064ba58a1dfc8,85c8f386c16084906d6c2eb67f9064ba58a1dfc8,Formatting
dmajda,2014-05-08 13:30:05,https://api.github.com/repos/pegjs/pegjs/git/commits/f03ba4bf4ff512daf46bfea5a6a3b2d6234ece53,f03ba4bf4ff512daf46bfea5a6a3b2d6234ece53,"generate-javascript.js: s/generateJavaScript/generateJavascript/

This makes the variable name in sync with pass name in lib/compiler.js."
dmajda,2014-05-08 13:26:36,https://api.github.com/repos/pegjs/pegjs/git/commits/57f7fae6846eb64ccc9fce1f5e1afa07a2c2733f,57f7fae6846eb64ccc9fce1f5e1afa07a2c2733f,"Fix a bug in |stringEscape|

The |stringEscape| function both in lib/compiler/javascript.js and in
generated parsers didn't escape characters in the U+0100..U+107F and
U+1000..U+107F ranges."
dmajda,2014-05-08 13:22:43,https://api.github.com/repos/pegjs/pegjs/git/commits/88e5f136e1fd7b941061779d73ca81fee9e2c8a5,88e5f136e1fd7b941061779d73ca81fee9e2c8a5,Utility functions cleanup: Cleanup lib/compiler/javascript.js
dmajda,2014-05-08 12:51:17,https://api.github.com/repos/pegjs/pegjs/git/commits/c1e1502d4368573225ba79d280f90901c454a37c,c1e1502d4368573225ba79d280f90901c454a37c,Utility functions cleanup: Cleanup lib/compiler/visitor.js
dmajda,2014-05-08 12:46:11,https://api.github.com/repos/pegjs/pegjs/git/commits/bfaad70899c0973c61f1c3be5468c8c81a4e0063,bfaad70899c0973c61f1c3be5468c8c81a4e0063,Utility functions cleanup: Cleanup lib/compiler/asts.js
dmajda,2014-05-08 12:54:15,https://api.github.com/repos/pegjs/pegjs/git/commits/05f97f444d2c8da2669923d25f863f68d45bfa1c,05f97f444d2c8da2669923d25f863f68d45bfa1c,Utility functions cleanup: Cleanup lib/utils/classes.js
dmajda,2014-05-08 12:41:14,https://api.github.com/repos/pegjs/pegjs/git/commits/1582304f16c1e55f359f5e6140f6dfe4c7735143,1582304f16c1e55f359f5e6140f6dfe4c7735143,Utility functions cleanup: Cleanup lib/utils/objects.js
dmajda,2014-05-08 12:38:24,https://api.github.com/repos/pegjs/pegjs/git/commits/50b2054fbfa20a45f29ed322d3b58f2d04118f8f,50b2054fbfa20a45f29ed322d3b58f2d04118f8f,Utility functions cleanup: Cleanup lib/utils/arrays.js
dmajda,2014-05-08 09:48:56,https://api.github.com/repos/pegjs/pegjs/git/commits/5adad3ae12f4e6ddeeb5a1a70dadf925c95e4dd8,5adad3ae12f4e6ddeeb5a1a70dadf925c95e4dd8,"Utility functions cleanup: Split lib/utils.js

Split lib/utils.js into multiple files. Some of the functions were
generic, these were moved into files in lib/utils. Other funtions were
specific for the compiler, these were moved to files in lib/compiler.

This commit only moves functions around -- there is no renaming and
cleanup performed. Both will come later."
dmajda,2014-05-04 12:11:44,https://api.github.com/repos/pegjs/pegjs/git/commits/ff8e877fce9e1cdd6b28293e53c6332e8f739229,ff8e877fce9e1cdd6b28293e53c6332e8f739229,"Change module exporting style

Modules now generally store the exported object in a named variable or
function first and only assign |module.exports| at the very end. This is
a difference when compared to style used until now, where most modules
started with a |module.exports| assignment.

I think the explicit name helps readability and understandability."
dmajda,2014-04-27 11:44:25,https://api.github.com/repos/pegjs/pegjs/git/commits/11aab6374f3c78d9fad68c874742983c3f4cf71b,11aab6374f3c78d9fad68c874742983c3f4cf71b,"s/head/first/ & s/tail/rest/ in a testcase

Makes the testcase in sync with example grammars."
dmajda,2014-04-27 11:41:33,https://api.github.com/repos/pegjs/pegjs/git/commits/d9354c4632db2a9649492aafbb58eb0afc0bfe8c,d9354c4632db2a9649492aafbb58eb0afc0bfe8c,Standardize on 3 spaces before // comments
dmajda,2014-04-27 11:31:49,https://api.github.com/repos/pegjs/pegjs/git/commits/f3a83788aa451d30cb3a49f86670c918200337c8,f3a83788aa451d30cb3a49f86670c918200337c8,"Inline functions extracted just because of JSHint

Rather than extracting functions just because JSHint complained about
defining functions inside a loop, let's inline then and silence the
warning."
dmajda,2014-04-22 05:37:08,https://api.github.com/repos/pegjs/pegjs/git/commits/46ac1bf1716df461f1fc4f99540f8e9b26155e76,46ac1bf1716df461f1fc4f99540f8e9b26155e76,"Wrap initializer code in generated parsers into |{...}|

Initializer code is usually indented and this indentation is carried
over to generated code. This resulted in a piece of indented code in the
middle of the parser.

This commit wraps initializer code in |{...}|, which makes indentation
in generated parsers look a bit more natural."
dmajda,2014-04-21 08:38:26,https://api.github.com/repos/pegjs/pegjs/git/commits/5fd41d444b4d726707b0cd05acabb5451813d92c,5fd41d444b4d726707b0cd05acabb5451813d92c,"Merge pull request #252 from chunpu/patch-1

Update example arithmetics.pegjs, make it work"
chunpu,2014-04-21 08:23:42,https://api.github.com/repos/pegjs/pegjs/git/commits/e6efe09ac30ae4c3366c4d6daebc8e717bb654a6,e6efe09ac30ae4c3366c4d6daebc8e717bb654a6,"Update example arithmetics.pegjs, make it work"
dmajda,2014-04-20 11:40:24,https://api.github.com/repos/pegjs/pegjs/git/commits/5a02bca34d62ed9924a1237dff2a9976e143d7e2,5a02bca34d62ed9924a1237dff2a9976e143d7e2,"Clarify initializer documentation

Make it clear that there is only one initializer in the whole grammar.
The previous formulation could have been understood to mean that there
can be an initializer for every rule in the grammar.

Fixes #82."
dmajda,2014-04-19 16:14:12,https://api.github.com/repos/pegjs/pegjs/git/commits/39084496ca9c9c6ff5aef4f7e2a79cb923a251fd,39084496ca9c9c6ff5aef4f7e2a79cb923a251fd,"Expose the parser object in action/predicate code

The action/predicate code didn't have access to the parser object. This
was mostly a side effect actions/predicates being implemented as nested
functions, in which |this| is a reference to the global object (an ugly
JavaScript quirk). The initializer, being implemented differently, had
access to the parser object via |this|, but this was not documented.

Because having access to the parser object can be useful, this commits
introduces a new |parser| variable which holds a reference to it, is
visible in action/predicate/initializer code, and is properly
documented.

See also:

  https://groups.google.com/forum/#!topic/pegjs/Na7YWnz6Bmg"
dmajda,2014-04-19 15:09:33,https://api.github.com/repos/pegjs/pegjs/git/commits/c7521fb8681b7fe9d1143dce6bb07211fde9fa20,c7521fb8681b7fe9d1143dce6bb07211fde9fa20,"Mark |parse| and |SyntaxError| as internal identifiers

The |parse| function and the |SyntaxError| exception were meant as
internal, so let's mark them as such."
dmajda,2014-04-13 14:28:58,https://api.github.com/repos/pegjs/pegjs/git/commits/7e3b4ec4f826036fd1f6caf7e1e3f20cc8136a6e,7e3b4ec4f826036fd1f6caf7e1e3f20cc8136a6e,"PEG.js grammar: Remove reserved word detection

This is mostly done for consistency with the JavaScript example grammar,
from which the |Identifier| rule is taken from. See the previous commit
for details."
dmajda,2014-04-13 14:08:35,https://api.github.com/repos/pegjs/pegjs/git/commits/c13cc882626a245a7a5a97af036f95e40e50a2c7,c13cc882626a245a7a5a97af036f95e40e50a2c7,"JavaScript example: Remove reserved word detection

Reserved word detection as it was implemented in the JavaScript example
grammar had two big downsides:

  1. It required changes in ordering of choices in some rules in order
     not to trigger the detection prematurely. One of the changes was
     already implemented (in the |Statement| rule, see the diff), but
     apparently more were needed (the grammar didn't parse inputs like
     |true| or |function f() {}|). And I'm not 100% sure that would be
     the end of it (maybe deeper structural changes would be needed).

  2. It made error messages confusing. Consider the following example:

       var a = @;

     Instead of reporting:

       Expected ... but ""@"" found.

     the generated parser reported:

       Reserved word ""var"" can't be used as an identifier.

     This was because the parser parsed the statement first as
     |VariableStatement| and when this failed, it tried to parse it as
     |ExpressionStatement|, triggering the reserved word detection.

Because of these, I decided to remove reserved word detection from the
JavaScript example grammar."
dmajda,2014-04-06 13:27:52,https://api.github.com/repos/pegjs/pegjs/git/commits/b271d6644216228af6260151328aebdb269b7942,b271d6644216228af6260151328aebdb269b7942,"JavaScript example: Fix automatic semicolon insertion

Fix parsing of inputs like this:

  foo() // comment
  bar()"
dmajda,2014-04-06 13:20:01,https://api.github.com/repos/pegjs/pegjs/git/commits/c70c8551b474dc105b549ffc8ca431fc4a73b307,c70c8551b474dc105b549ffc8ca431fc4a73b307,"JavaScript example: Fix parsing of statements

Fixes a problem where statements starting with a reserved word produced
errors like this:

  Reserved word ""return"" can't be used as an identifier.

The problem was in a wrong ordering of choices in the |Statement| rule
together with aggressive reserved word detection in the |Identifier|
rule."
dmajda,2014-04-06 13:02:51,https://api.github.com/repos/pegjs/pegjs/git/commits/e78ffbba9cf240f8b2ad204d9c31642c86ea625b,e78ffbba9cf240f8b2ad204d9c31642c86ea625b,"PEG.js grammar: Improve the |Code| rule a bit

Instead of matching segments between blocks character by character,
match them as a whole. Also align the style with other similar rules
(e.g. the comment ones)."
dmajda,2014-04-06 12:48:45,https://api.github.com/repos/pegjs/pegjs/git/commits/64eb5faf54c679058f44f2ff9cf7d81dca9f6af1,64eb5faf54c679058f44f2ff9cf7d81dca9f6af1,"PEG.js grammar: Fix line continuation handling in character classes

Before this commit, line continuations in character classes contributed
an empty string to the list of characters and character ranges matched
by a class. While this didn't lead to a buggy behavior with the current
code generator, the AST was wrong and the problem could have caused bugs
later.

This commit fixes the problem."
dmajda,2014-04-06 12:39:01,https://api.github.com/repos/pegjs/pegjs/git/commits/0678bd8a0c41bfd96a70e6951ce00aaa52c38f97,0678bd8a0c41bfd96a70e6951ce00aaa52c38f97,"PEG.js grammar: Add missing semicolon

Fixes the following JSHint error:

  lib/parser.js: line 108, col 54, Missing semicolon."
dmajda,2014-04-04 14:19:51,https://api.github.com/repos/pegjs/pegjs/git/commits/421b8d6e514e2e77676a985bac39e9bc07c55605,421b8d6e514e2e77676a985bac39e9bc07c55605,Clean up parser specs
dmajda,2014-04-04 09:18:22,https://api.github.com/repos/pegjs/pegjs/git/commits/cf294ef23634be532b02fdc969f7e11a93e2c0fe,cf294ef23634be532b02fdc969f7e11a93e2c0fe,"PEG.js grammar: Add limitations

The limitations are inherited from the JavaScript example grammar."
dmajda,2014-04-04 09:15:58,https://api.github.com/repos/pegjs/pegjs/git/commits/0459ab6b37453d00b85f7a5c30fce66b65280c08,0459ab6b37453d00b85f7a5c30fce66b65280c08,PEG.js grammar: Formatting & comments
dmajda,2014-04-04 09:14:11,https://api.github.com/repos/pegjs/pegjs/git/commits/6f2510e49e1185737134321580762b782554f838,6f2510e49e1185737134321580762b782554f838,PEG.js grammar: Make rules with operators more generic
dmajda,2014-04-04 08:40:51,https://api.github.com/repos/pegjs/pegjs/git/commits/45c29a886f62004d001547a6c83d0bb97e6b0d7a,45c29a886f62004d001547a6c83d0bb97e6b0d7a,"PEG.js grammar: Extract the |SemanticPredicateExpression| rule

Semantic predicates are kind of |PrimaryExpression|, not kind of
|PrefixedExpression|. Therefore I extracted a rule for them and
referenced it from the |PrimaryExpression|."
dmajda,2014-04-04 08:32:08,https://api.github.com/repos/pegjs/pegjs/git/commits/da18f6a7290db7f139696f5e052f5b084b2de8cc,da18f6a7290db7f139696f5e052f5b084b2de8cc,"PEG.js grammar: Extract the |RuleReferenceExpression| rule

This makes the |Primary| rule a bit more tidy."
dmajda,2014-04-04 08:03:22,https://api.github.com/repos/pegjs/pegjs/git/commits/8e6f98e45c994712597505a4c42cc90d0dc273de,8e6f98e45c994712597505a4c42cc90d0dc273de,"PEG.js grammar: Extract the |ActionExpression| rule

Having it separated from the |SequenceExpression| rule is cleaner and
more logical."
dmajda,2014-04-02 16:28:52,https://api.github.com/repos/pegjs/pegjs/git/commits/5c6f4dd38be234bf4fa2998ea42040530cecb7bf,5c6f4dd38be234bf4fa2998ea42040530cecb7bf,"PEG.js grammar: Append |Expression| to expression rule names

Makes the rule names a bit longer but also clearer."
dmajda,2014-04-02 16:16:14,https://api.github.com/repos/pegjs/pegjs/git/commits/27c2d262032bc04c847d413fcdea71f90fa24e68,27c2d262032bc04c847d413fcdea71f90fa24e68,"PEG.js grammar: More JavaScript-like initializer/rule separation

Initializer and rules are now separated in a similar way as JavaScript
statements -- either by a semicolon or a line terminator, possibly with
whitespace and comments mixed in.

One consequence is that the grammars like this are now illegal:

  foo = ""a"" bar = ""b""

A semicolon needs to be inserted between the rules:

  foo = ""a"";bar = ""b""

I consider this a good change as the now-illegal syntax was somewhat
confusing."
dmajda,2014-03-30 12:56:51,https://api.github.com/repos/pegjs/pegjs/git/commits/4ce7593f5fe66f97cc116d3f5d595eb8dd7238cf,4ce7593f5fe66f97cc116d3f5d595eb8dd7238cf,"PEG.js grammar: Extract the |AnyMatcher| rule

This makes the |Primary| rule a bit more tidy. Also, matching the |.|
character really belongs to the lexical part of the grammar, next to
literals and character classes."
dmajda,2014-03-28 15:02:21,https://api.github.com/repos/pegjs/pegjs/git/commits/c0df01b092a7359dbcf6acfee0d6bc1497087830,c0df01b092a7359dbcf6acfee0d6bc1497087830,"PEG.js grammar: Improve code block handling

  * Rename the |Action| rule to |CodeBlock| (it better describes what
    the rule matches).

  * Implement the rule in a simpler way and move it after more basic
    lexical elements."
dmajda,2014-03-28 14:44:21,https://api.github.com/repos/pegjs/pegjs/git/commits/13f72bb19d80d4bd2fbafb134c8f86dfb7d17000,13f72bb19d80d4bd2fbafb134c8f86dfb7d17000,"PEG.js grammar: More JavaScript-like rules for identifiers

This change has two side effects:

  * Label names can no longer be JavaScript reserved words.

  * |$| is allowed again in label names. However, because of the
    preference rules, names starting with it will be usually parsed as a
    text operator followed by another identifier (denoting a rule
    reference or label name)."
dmajda,2014-03-28 14:18:16,https://api.github.com/repos/pegjs/pegjs/git/commits/0d6b91cb20b750de8724a23920ad48c27530d80b,0d6b91cb20b750de8724a23920ad48c27530d80b,PEG.js grammar: More JavaScript-like rules for strings/literals/classes
dmajda,2014-03-28 12:55:25,https://api.github.com/repos/pegjs/pegjs/git/commits/bcb527164910ad6720f358220e8e04acca846080,bcb527164910ad6720f358220e8e04acca846080,PEG.js grammar: More JavaScript-like rules for skipped elements
dmajda,2014-03-28 12:27:03,https://api.github.com/repos/pegjs/pegjs/git/commits/b463808b3f7a9bede1c6873aedc74734093901d5,b463808b3f7a9bede1c6873aedc74734093901d5,PEG.js grammar: Replace several smaller comments by a big initial one
dmajda,2014-03-28 10:35:56,https://api.github.com/repos/pegjs/pegjs/git/commits/a5a0609505edf98174960f163587422e604b1830,a5a0609505edf98174960f163587422e604b1830,PEG.js grammar: Inline trivial character rules
dmajda,2014-03-28 10:26:15,https://api.github.com/repos/pegjs/pegjs/git/commits/ae89f5e46955e18f50a21f46e2001c2fb3caad0c,ae89f5e46955e18f50a21f46e2001c2fb3caad0c,"PEG.js grammar: Change whitespace handling

Before this commit, whitespace was handled at the lexical level by
making tokens consume any whitespace coming after them. This was
accomplished by appending |__| to every token rule.

This commit changes whitespace handling to be more explicit. Tokens no
longer consume whitespace coming after them and syntactic rules have to
cope with it. While this slightly complicates the syntactic grammar, I
think it's a cleaner way. Moreover, it is what JavaScript example
grammar does.

One small side-effect of thich change is that the grammar is now
stand-alone (it doesn't require utils.js anymore)."
dmajda,2014-03-28 08:46:16,https://api.github.com/repos/pegjs/pegjs/git/commits/4725632641fccec746817f84d045cc7976abc6b4,4725632641fccec746817f84d045cc7976abc6b4,"PEG.js grammar: Capitalize rule names

When rule names are capitalized, it's easier to visually distinguish
them from non-capitalized label names. Moreover, I use capitalized rule
names in all my grammars these days."
dmajda,2014-03-26 19:56:39,https://api.github.com/repos/pegjs/pegjs/git/commits/fb72c430e6b4581d88c6c10ab036033960b77888,fb72c430e6b4581d88c6c10ab036033960b77888,"PEG.js grammar: Fix line continuation handling

Before this commit, a line continuation (backslash followed by a line
terminator character) contributed a character to a string or a character
class it was used in. In JavaScript and many other languages, line
continuation doesn't contribute anything.

This commit aligns PEG.js line continuation behavior with JavaScript."
dmajda,2014-03-26 19:34:04,https://api.github.com/repos/pegjs/pegjs/git/commits/3dbec0b30dfecfdaf33e12fcf3cac735c431b6f6,3dbec0b30dfecfdaf33e12fcf3cac735c431b6f6,"PEG.js grammar: Fix how |rawText| is created

Before this commit, the value of the |rawText| property of ""class"" AST
nodes was created in a hackish way from processed input and it didn't
always exactly represent the actual input text.

This commit changes the code so that the value of the |rawText| property
is created using the |text| function. This is a clean way which also
resolves the exact representation problem."
dmajda,2014-03-26 19:04:49,https://api.github.com/repos/pegjs/pegjs/git/commits/df154daafb9c6c952351493af02d3a55e0b05c59,df154daafb9c6c952351493af02d3a55e0b05c59,"PEG.js grammar: Disallow empty sequences

Empty sequences are useless and they only confused users. Let's disallow
them."
dmajda,2014-03-23 12:29:54,https://api.github.com/repos/pegjs/pegjs/git/commits/200534597620cc818b9cd24b032c661fd770e138,200534597620cc818b9cd24b032c661fd770e138,"Complete rewrite of the CSS example grammar

This is a complete rewrite of the CSS example grammar. It is now based
on CSS 2.1 *including the errata* and the generated parser builds a
nicer syntax tree. There is also a number of cleanups, formatting
changes, naming changes, and bug fixes.

Beside this, the rewrite reflects how I write grammars today (as opposed
to few years ago) and what style I would recommend to others."
dmajda,2014-03-16 12:24:50,https://api.github.com/repos/pegjs/pegjs/git/commits/18f92c5647ce9f5e92749d81ae1cf7710581e725,18f92c5647ce9f5e92749d81ae1cf7710581e725,"Complete rewrite of the JavaScript example grammar

This is a complete rewrite of the JavaScript example grammar. It is now
based on ECMA-262, 5.1 Edition and the generated parser builds a syntax
tree compatible with Mozilla SpiderMonkey Parser API. There is also a
number of cleanups, formatting changes, naming changes, and bug fixes.

Beside this, the rewrite reflects how I write grammars today (as opposed
to few years ago) and what style I would recommend to others."
dmajda,2014-03-12 19:52:17,https://api.github.com/repos/pegjs/pegjs/git/commits/fba70833dd93d61cc1574b855a67ff6af71dfe40,fba70833dd93d61cc1574b855a67ff6af71dfe40,"Complete rewrite of the JSON example grammar

This is a complete rewrite of the JSON example grammar. It is now based
on RFC 7159 instead of an informal description at the JSON website.

Beside this, the rewrite reflects how I write grammars today (as opposed
to few years ago) and what style I would recommend to others."
dmajda,2014-03-12 18:05:26,https://api.github.com/repos/pegjs/pegjs/git/commits/f5443d2bf115c55900234baa083608fa219d6356,f5443d2bf115c55900234baa083608fa219d6356,"Complete rewrite of the arithmetics example grammar

This is a complete rewrite of the arithmetics example grammar. It now
allows whitespace between tokens, supports ""-"" and ""/"" operators, and
gets the operator associativity right. Also, rule names now match the usual
conventions (term, factor,...).

Beside this, the rewrite reflects how I write grammars today (as opposed
to few years ago) and what style I would recommend to others."
dmajda,2013-12-29 10:46:03,https://api.github.com/repos/pegjs/pegjs/git/commits/93d3c6a2509f947f57d5728c15d8b96ceedef28f,93d3c6a2509f947f57d5728c15d8b96ceedef28f,"Update .travis.yml

Remove a directive to test in Node.js 0.6. Add a directive to test in
Node.js 0.10.

Should fix broken Travis CI builds:

  https://travis-ci.org/dmajda/pegjs/builds/15922026"
dmajda,2013-12-24 07:24:35,https://api.github.com/repos/pegjs/pegjs/git/commits/2263a3003498bfee5c42c507c67306f9f87b2b30,2263a3003498bfee5c42c507c67306f9f87b2b30,Update version to 0.8.0
dmajda,2013-12-24 07:24:29,https://api.github.com/repos/pegjs/pegjs/git/commits/7d761e9aae36a83bc32b4784fdbb5b73063ecc0d,7d761e9aae36a83bc32b4784fdbb5b73063ecc0d,Update CHANGELOG.md
dmajda,2013-12-21 11:40:28,https://api.github.com/repos/pegjs/pegjs/git/commits/d74f9df7ddd5e676bdf61eaec549707f51c27b3e,d74f9df7ddd5e676bdf61eaec549707f51c27b3e,"Make CHANGELOG.md less dense

While the additional spacing makes lists with one-line items uglier, it
also makes lists with multi-line items much more readable."
dmajda,2013-12-18 07:37:35,https://api.github.com/repos/pegjs/pegjs/git/commits/4fe0167a70dc67698f18ff4842869e6f373ce7c8,4fe0167a70dc67698f18ff4842869e6f373ce7c8,"Convert CHANGELOG to Markdown

  * Convert CHANGELOG to Markdown.
  * Improve formatting a bit.
  * Add links to GitHub issues
  * Fix typos."
dmajda,2013-12-18 07:35:31,https://api.github.com/repos/pegjs/pegjs/git/commits/a449f12efe2772cfd3ef0290e05052b2a0ddca13,a449f12efe2772cfd3ef0290e05052b2a0ddca13,Require Node.js >= 0.8.0
dmajda,2013-12-15 20:45:54,https://api.github.com/repos/pegjs/pegjs/git/commits/ff0beb5a8caf6b9ab0a83e1d36bfe70b5c12e290,ff0beb5a8caf6b9ab0a83e1d36bfe70b5c12e290,benchmark/run: Always parse the -n/--run-count value as decimal integer
dmajda,2013-12-15 20:42:50,https://api.github.com/repos/pegjs/pegjs/git/commits/e73adafbf6e35eb1fa69a955a6a6d1ea0ee6b94d,e73adafbf6e35eb1fa69a955a6a6d1ea0ee6b94d,"Add license to all vendored libraries where it was missing

Fixes #207."
dmajda,2013-12-15 20:38:15,https://api.github.com/repos/pegjs/pegjs/git/commits/e7e4543bb44d7f38078aa637c7854962c975c192,e7e4543bb44d7f38078aa637c7854962c975c192,".jshintrc: Remove the ""sub"" option"
dmajda,2013-12-15 20:31:43,https://api.github.com/repos/pegjs/pegjs/git/commits/e20e907d8c092ac630d5a3b9c97fe7269d724798,e20e907d8c092ac630d5a3b9c97fe7269d724798,".jshintrc: Add the ""trailing"" option"
dmajda,2013-12-15 20:26:57,https://api.github.com/repos/pegjs/pegjs/git/commits/4402f7fd865f99ff652107898ba41e1097803a2e,4402f7fd865f99ff652107898ba41e1097803a2e,".jshintrc: Add the ""noarg"" option"
dmajda,2013-12-14 20:58:00,https://api.github.com/repos/pegjs/pegjs/git/commits/af54963233e0b471d6be4c607b1c169b61f87813,af54963233e0b471d6be4c607b1c169b61f87813,".jshintrc: Add the ""latedef"" option"
dmajda,2013-12-14 20:52:51,https://api.github.com/repos/pegjs/pegjs/git/commits/4362ba190c97024a8cd70c2285a1d0f0aa6d6674,4362ba190c97024a8cd70c2285a1d0f0aa6d6674,".jshintrc: Add the ""immed"" option"
dmajda,2013-12-14 20:51:25,https://api.github.com/repos/pegjs/pegjs/git/commits/43eeabf03a27029eec92e3d71122bc7725b4f293,43eeabf03a27029eec92e3d71122bc7725b4f293,".jshintrc: Add the ""freeze"" option"
dmajda,2013-12-14 20:46:47,https://api.github.com/repos/pegjs/pegjs/git/commits/95fd64ec152a0568734c7748d9c95992408e8d09,95fd64ec152a0568734c7748d9c95992408e8d09,".jshintrc: Add the ""forin"" option & fix fallout

Also added few missing |hasOwnProperty| calls that JSHint didn't detect
because it only looks whether there is an |if| statement wrapping the
loop body."
dmajda,2013-12-14 20:26:25,https://api.github.com/repos/pegjs/pegjs/git/commits/f22d7aabb5b9cb0276baee9e26e7f96b228c0f79,f22d7aabb5b9cb0276baee9e26e7f96b228c0f79,"Fix JSHint errors in bin/pegjs

Fixes the following JSHint errors:

  bin/pegjs: line 66, col 14, 'extraOptions' used out of scope.
  bin/pegjs: line 70, col 19, 'extraOptions' used out of scope.
  bin/pegjs: line 71, col 20, 'extraOptions' used out of scope.
  bin/pegjs: line 80, col 10, Wrap the /regexp/ literal in parens to disambiguate the slash operator.
  bin/pegjs: line 128, col 43, Missing semicolon.
  bin/pegjs: line 128, col 45, Don't make functions within a loop.
  bin/pegjs: line 150, col 13, Redefinition of 'module'.
  bin/pegjs: line 217, col 34, Expected '===' and instead saw '=='.
  bin/pegjs: line 243, col 44, 'source' used out of scope.
  bin/pegjs: line 243, col 61, 'source' used out of scope."
dmajda,2013-12-14 20:13:01,https://api.github.com/repos/pegjs/pegjs/git/commits/cc3a9fde2d4c6846911759fc98fb3d58c8d2b889,cc3a9fde2d4c6846911759fc98fb3d58c8d2b889,"Fix JSHint error in benchmark/run

Fixes the following JSHint error:

  benchmark/run: line 106, col 10, Wrap the /regexp/ literal in parens to disambiguate the slash operator."
dmajda,2013-12-14 20:08:26,https://api.github.com/repos/pegjs/pegjs/git/commits/e321f0c23eab77bf9ac17cf59c6a93e0d597c786,e321f0c23eab77bf9ac17cf59c6a93e0d597c786,"Fix JSHint error in lib/compiler/passes/generate-bytecode.js

Fixes the following JSHint error:

  lib/compiler/passes/generate-bytecode.js: line 334, col 71, Expected an assignment or function call and instead saw an expression."
dmajda,2013-12-14 12:48:59,https://api.github.com/repos/pegjs/pegjs/git/commits/b3c6a997b0c40cb9993bc326156c08af2de85de0,b3c6a997b0c40cb9993bc326156c08af2de85de0,Use JSHint 2.3.0
dmajda,2013-12-14 11:05:25,https://api.github.com/repos/pegjs/pegjs/git/commits/06a83448df411b1a99a813c505ce6377aac61e3c,06a83448df411b1a99a813c505ce6377aac61e3c,Remove various unused variables and function parameters
dmajda,2013-12-14 10:49:00,https://api.github.com/repos/pegjs/pegjs/git/commits/1ea9a5f3407f26dae1869f844b819466873027de,1ea9a5f3407f26dae1869f844b819466873027de,"Use UglifyJS 2.4.7

The |uglifyjs| call had to be adapted because the options changed
significantly in version 2."
dmajda,2013-12-09 20:57:03,https://api.github.com/repos/pegjs/pegjs/git/commits/976328b7d63dd170b66a8efa3680997eec6c0608,976328b7d63dd170b66a8efa3680997eec6c0608,"Avoid |Array.prototype.splice| call with one parameter

The one-parameter |Array.prototype.splice| call is a SpiderMonkey
extension. Apparently, IE doesn't implement it (unlike other supported
browsers), so we need to replace it with two-parameter version."
dmajda,2013-12-08 14:18:53,https://api.github.com/repos/pegjs/pegjs/git/commits/995ddb8f86664a9bfea8773d13880b76044cfac7,995ddb8f86664a9bfea8773d13880b76044cfac7,"Update bundled jQuery to version 1.10.2

I didn't use the 2.x branch because it doesn't support IE 8 anymore."
dmajda,2013-12-08 14:17:55,https://api.github.com/repos/pegjs/pegjs/git/commits/ae5630f23b8f04e7e1bcdde48340bc754852cd46,ae5630f23b8f04e7e1bcdde48340bc754852cd46,Update bundled jQuery.ScrollTo to version 1.4.7
dmajda,2013-12-08 13:48:30,https://api.github.com/repos/pegjs/pegjs/git/commits/a56d3ac94fbf19cabef4b7d3c279a0c45cc6962f,a56d3ac94fbf19cabef4b7d3c279a0c45cc6962f,"Fix error messages in certain cases with trailing input

In case the generated parser parsed successfully part of input and left
some input unparsed (trailing input), the error message produced was
sometimes wrong. The code worked correctly only if there were no match
failures in the successfully parsed part (highly unlikely).

This commit fixes things by explicitly triggering a match failure with the
following expectation at the end of the successfully parsed part of the
input:

  peg$fail({ type: ""end"", description: ""end of input"" });

This change also made it possible to simplify the |buildMessage|
function, which can now ignore the case of no expectations.

Fixes #119."
dmajda,2013-12-07 15:38:49,https://api.github.com/repos/pegjs/pegjs/git/commits/44e03187a73770f0abb119df5ee1d928528fd119,44e03187a73770f0abb119df5ee1d928528fd119,"Assert that generated bytecode manipulates stack correctly

There are two invariants in generated bytecode related to the stack:

  1. Branches of a condition must move the stack pointer in the same way.

  2. Body of a loop can't move the stack pointer.

These invariants were always true, but they were not checked. Now we
check them at least when compiling with optimization for speed, because
there we analyze the stack pointer movements statically."
dmajda,2013-12-07 14:58:26,https://api.github.com/repos/pegjs/pegjs/git/commits/0bcf7bc61bb41de9040e925faf1f2785853ef9c9,0bcf7bc61bb41de9040e925faf1f2785853ef9c9,Renumber bytecode instructions to make them sequential
dmajda,2013-12-07 14:39:27,https://api.github.com/repos/pegjs/pegjs/git/commits/41d95ad323022fc6a6a93e38571d6edf8e5a0fb4,41d95ad323022fc6a6a93e38571d6edf8e5a0fb4,Makefile: Add missing period at the ned of a sentence
dmajda,2013-12-07 14:34:16,https://api.github.com/repos/pegjs/pegjs/git/commits/5fa99ccc34bc2479945ce75dabd5d74f25eedddd,5fa99ccc34bc2479945ce75dabd5d74f25eedddd,Update copyright years to 2010-2013
dmajda,2013-12-07 14:30:03,https://api.github.com/repos/pegjs/pegjs/git/commits/9f01c4b0c4651010b2c73b025e3a6c179ce802e2,9f01c4b0c4651010b2c73b025e3a6c179ce802e2,spec/generated-parser.spec.js: s/multiple-character/multi-character/
dmajda,2013-12-07 14:23:12,https://api.github.com/repos/pegjs/pegjs/git/commits/da9a32a5f3f939eb04aab54400f28159cc567d85,da9a32a5f3f939eb04aab54400f28159cc567d85,"Example grammars: Improve |parseInt| invocations

Instead of |parseInt(""0x"" + digits)| do |parseInt(digits, 16)|, which is
a bit cleaner."
dmajda,2013-12-07 14:05:35,https://api.github.com/repos/pegjs/pegjs/git/commits/68c6452d8a2efaa6ee2df354a302b56414b69b3a,68c6452d8a2efaa6ee2df354a302b56414b69b3a,"CSS example grammar: Simplify |integer| and |float| rules

It's not necessary to parse |parts| in the |integer| and |float| rule
into integer/float value. Everywhere these rules are used the result is
converted back into string anyway."
dmajda,2013-12-07 08:42:20,https://api.github.com/repos/pegjs/pegjs/git/commits/2d4ecaf39ce184962acf704b8d561a2be8fe050a,2d4ecaf39ce184962acf704b8d561a2be8fe050a,spec/compiler/passes/generate-bytecode.spec.js: Fix comments
dmajda,2013-12-07 08:39:05,https://api.github.com/repos/pegjs/pegjs/git/commits/9ca5061fcfe3c03b4c0f736472e3ac0a07e5dfe1,9ca5061fcfe3c03b4c0f736472e3ac0a07e5dfe1,lib/compiler/opcodes.js: Fix formatting
dmajda,2013-12-07 08:36:33,https://api.github.com/repos/pegjs/pegjs/git/commits/fbcefdf523b2db8daa9de90d54def0cbb47e2617,fbcefdf523b2db8daa9de90d54def0cbb47e2617,"Fix |oneRuleGrammar| invocation

At one call site, the |oneRuleGrammar| was called with 3 parameters but
it only accepts 2. This commit removes the additional parameter."
dmajda,2013-12-03 20:20:57,https://api.github.com/repos/pegjs/pegjs/git/commits/187f9d6bb039147a6bb3f3234cfb515c56fb2a99,187f9d6bb039147a6bb3f3234cfb515c56fb2a99,"Remove the |NIP_CURR_POS| bytecode instruction

After the previous commit is is not used anywhere."
dmajda,2013-12-03 20:15:42,https://api.github.com/repos/pegjs/pegjs/git/commits/e15c57066ce7cbab2b2075a6195fb217448a635d,e15c57066ce7cbab2b2075a6195fb217448a635d,"Remove an error check after calling action code

The error check was useful when actions could have returned |null| to
trigger a match failure. This is no longer supported so the check isn't
needed anymore.

Speed impact
------------
Before:     1022.70 kB/s
After:      1035.45 kB/s
Difference: 1.24%

Size impact
-----------
Before:     975434 b
After:      931540 b
Difference: -4.50%

(Measured by /tools/impact with Node.js v0.6.18 on x86_64 GNU/Linux.)"
dmajda,2013-12-03 19:48:47,https://api.github.com/repos/pegjs/pegjs/git/commits/2f2152204a3e3b2fc7f498a816ccd32bd95c3e72,2f2152204a3e3b2fc7f498a816ccd32bd95c3e72,"Refine error handling further

Before this commit, the |expected| and |error| functions didn't halt the
parsing immediately, but triggered a regular match failure. After they
were called, the parser could backtrack, try another branches, and only
if no other branch succeeded, it triggered an exception with information
possibly based on parameters passed to the |expected| or |error|
function (this depended on positions where failures in other branches
have occurred).

While nice in theory, this solution didn't work well in practice. There
were at least two problems:

  1. Action expression could have easily triggered a match failure later
     in the input than the action itself. This resulted in the
     action-triggered failure to be shadowed by the expression-triggered
     one.

     Consider the following example:

       integer = digits:[0-9]+ {
         var result = parseInt(digits.join(""""), 10);

         if (result % 2 === 0) {
           error(""The number must be an odd integer."");
           return;
         }

         return result;
       }

     Given input ""2"", the |[0-9]+| expression would record a match
     failure at position 1 (an unsuccessful attempt to parse yet another
     digit after ""2""). However, a failure triggered by the |error| call
     would occur at position 0.

     This problem could have been solved by silencing match failures in
     action expressions, but that would lead to severe performance
     problems (yes, I tried and measured). Other possible solutions are
     hacks which I didn't want to introduce into PEG.js.

  2. Triggering a match failure in action code could have lead to
     unexpected backtracking.

     Consider the following example:

       class = ""["" (charRange / char)* ""]""

       charRange = begin:char ""-"" end:char {
         if (begin.data.charCodeAt(0) > end.data.charCodeAt(0)) {
           error(""Invalid character range: "" + begin + ""-"" + end + ""."");
         }

         // ...
       }

       char = [a-zA-Z0-9_\-]

     Given input ""[b-a]"", the |charRange| rule would fail, but the
     parser would try the |char| rule and succeed repeatedly, resulting
     in ""b-a"" being parsed as a sequence of three |char|'s, which it is
     not.

     This problem could have been solved by using negative predicates,
     but that would complicate the grammar and still wouldn't get rid of
     unintuitive behavior.

Given these problems I decided to change the semantics of the |expected|
and |error| functions. They don't interact with regular match failure
mechanism anymore, but they cause and immediate parse failure by
throwing an exception. I think this is more intuitive behavior with less
harmful side effects.

The disadvantage of the new approach is that one can't backtrack from an
action-triggered error. I don't see this as a big deal as I think this
will be rarely needed and one can always use a semantic predicate as a
workaround.

Speed impact
------------
Before:     993.84 kB/s
After:      998.05 kB/s
Difference: 0.42%

Size impact
-----------
Before:     1019968 b
After:      975434 b
Difference: -4.37%

(Measured by /tools/impact with Node.js v0.6.18 on x86_64 GNU/Linux.)"
dmajda,2013-12-03 09:53:47,https://api.github.com/repos/pegjs/pegjs/git/commits/9fa7301aec4141f56075b0965d3d3641053e985a,9fa7301aec4141f56075b0965d3d3641053e985a,"Regenerate src/parser.js

Forgot to do it in f8b5e04bba314275d0821bc5b33fcc6420a4dbb2."
dmajda,2013-12-01 13:10:24,https://api.github.com/repos/pegjs/pegjs/git/commits/f8b5e04bba314275d0821bc5b33fcc6420a4dbb2,f8b5e04bba314275d0821bc5b33fcc6420a4dbb2,"Error handling: Use the new |error| function in PEG.js's grammar itself

Implements part of #198."
dmajda,2013-11-30 16:26:06,https://api.github.com/repos/pegjs/pegjs/git/commits/5460a881af45e5bc6d2682f4d480266d822427c2,5460a881af45e5bc6d2682f4d480266d822427c2,"Error handling: Implement the |error| function

The |error| function allows users to report custom match failures inside
actions.

If the |error| function is called, and the reported match failure turns
out to be the cause of a parse error, the error message reported by the
parser will be exactly the one specified in the |error| call.

Implements part of #198.

Speed impact
------------
Before:     999.83 kB/s
After:      1000.84 kB/s
Difference: 0.10%

Size impact
-----------
Before:     1017212 b
After:      1019968 b
Difference: 0.27%

(Measured by /tools/impact with Node.js v0.6.18 on x86_64 GNU/Linux.)"
dmajda,2013-11-30 16:11:15,https://api.github.com/repos/pegjs/pegjs/git/commits/dd74ea4144b75631ec99c7c0716dbb0c838f71e2,dd74ea4144b75631ec99c7c0716dbb0c838f71e2,"Error handling: Build error message out of |SyntaxError|'s constructor

It will be possible to create errors with user-supplied messages soon.
The |SyntaxError| class needs to be ready for that.

Implements part of #198."
dmajda,2013-11-30 16:04:33,https://api.github.com/repos/pegjs/pegjs/git/commits/3fe6aba7e2cdebf4b9c748274024e6fe24773f48,3fe6aba7e2cdebf4b9c748274024e6fe24773f48,"Error handling: Extract exception building into its own function

The exception-creating code will get somewhat hairy soon, so let's make
sure them mess will be contained.

Implements part of #198."
dmajda,2013-11-30 12:20:21,https://api.github.com/repos/pegjs/pegjs/git/commits/d96eb317fd077536eb65280e5622fc904a446031,d96eb317fd077536eb65280e5622fc904a446031,"Error handling: Rename |peg$fail| to |peg$expected|

This is in anticipation of |peg$error|. The |peg$expected| and
|peg$error| internal functions will nicely mirror the |expected| and
|error| functions available to user code in actions.

Implements part of #198."
dmajda,2013-11-29 15:34:09,https://api.github.com/repos/pegjs/pegjs/git/commits/af701dcf8055a3168a6c86a8a87ede67f8786e9a,af701dcf8055a3168a6c86a8a87ede67f8786e9a,"Error handling: Implement the |expected| function

The |expected| function allows users to report regular match failures
inside actions.

If the |expected| function is called, and the reported match failure
turns out to be the cause of a parse error, the error message reported
by the parser will be in the usual ""Expected ... but found ..."" format
with the description specified in the |expected| call used as part of
the message.

Implements part of #198.

Speed impact
------------
Before:     1146.82 kB/s
After:      1031.25 kB/s
Difference: -10.08%

Size impact
-----------
Before:     950817 b
After:      973269 b
Difference: 2.36%

(Measured by /tools/impact with Node.js v0.6.18 on x86_64 GNU/Linux.)"
dmajda,2013-11-07 15:57:27,https://api.github.com/repos/pegjs/pegjs/git/commits/1b2279e026648e00370ece5db91fdea620f1741c,1b2279e026648e00370ece5db91fdea620f1741c,"Error handling: Make predicates always return |undefined|

After making the |?| operator return |null| instead of an empty string
in the previous commit, empty strings were still returned from
predicates. This didn't make much sense.

Return value of a predicate is unimportant (if you have one in hand, you
already know the predicate succeeded) and one could even argue that
predicates shouldn't return any value at all. The closest thing to
""return no value"" in JavaScript is returning |undefined|, so I decided
to make predicates return exactly that.

Implements part of #198."
dmajda,2013-11-07 15:19:56,https://api.github.com/repos/pegjs/pegjs/git/commits/86769a6c5c46efeb77020d91c0e4837020101b6d,86769a6c5c46efeb77020d91c0e4837020101b6d,"Error handling: Make |?| return |null| on unsuccessful match

Before this commit, the |?| operator returned an empty string upon
unsuccessful match. This commit changes the returned value to |null|. It
also updates the PEG.js grammar and the example grammars, which used the
value returned by |?| quite often.

Returning |null| is possible because it no longer indicates a match
failure.

I expect that this change will simplify many real-world grammars, as an
empty string is almost never desirable as a return value (except some
lexer-level rules) and it is often translated into |null| or some other
value in action code.

Implements part of #198."
dmajda,2013-10-16 06:08:35,https://api.github.com/repos/pegjs/pegjs/git/commits/57e806383cdcb15be3ea23ac4c0bbf5d3463e396,57e806383cdcb15be3ea23ac4c0bbf5d3463e396,"Error handling: Use a special value (not |null|) to indicate failure

Using a special value to indicate match failure instead of |null| allows
actions to return |null| as a regular value. This simplifies e.g. the
JSON parser.

Note the special value is internal and intentionally undocumented. This
means that there is currently no official way how to trigger a match
failure from an action. This is a temporary state which will be fixed
soon.

The negative performance impact (see below) is probably caused by
changing lot of comparisons against |null| (which likely check the value
against a fixed constant representing |null| in the interpreter) to
comparisons against the special value (which likely check the value
against another value in the interpreter).

Implements part of #198.

Speed impact
------------
Before:     1146.82 kB/s
After:      1031.25 kB/s
Difference: -10.08%

Size impact
-----------
Before:     950817 b
After:      973269 b
Difference: 2.36%

(Measured by /tools/impact with Node.js v0.6.18 on x86_64 GNU/Linux.)"
dmajda,2013-08-28 17:33:21,https://api.github.com/repos/pegjs/pegjs/git/commits/435bb8f2dfdf21d8bfca5d1bbfeb9a08cc65a068,435bb8f2dfdf21d8bfca5d1bbfeb9a08cc65a068,"Error handling: Structured expectations

Before this commit, the |expected| property of an exception object
thrown when a generated parser encountered an error contained
expectations as strings. These strings were in a human-readable format
suitable for displaying in the UI but not suitable for machine
processing. For example, expected string literals included quotes and a
string ""any character"" was used when any character was expected.

This commit makes expectations structured objects. This makes the
machine processing easier, while still allowing to generate a
human-readable representation if needed.

Implements part of #198.

Speed impact
------------
Before:     1180.41 kB/s
After:      1165.31 kB/s
Difference: -1.28%

Size impact
-----------
Before:     863523 b
After:      950817 b
Difference: 10.10%

(Measured by /tools/impact with Node.js v0.6.18 on x86_64 GNU/Linux.)"
dmajda,2013-09-04 15:47:07,https://api.github.com/repos/pegjs/pegjs/git/commits/5312e124cde69d328d6de86809fd68d1a6b1399e,5312e124cde69d328d6de86809fd68d1a6b1399e,Fix object literal formatting in generated code
dmajda,2013-08-31 09:02:00,https://api.github.com/repos/pegjs/pegjs/git/commits/f3d392bd1cb3bd6a656e656e6919817178d9ab65,f3d392bd1cb3bd6a656e656e6919817178d9ab65,"JavaScript example: Fix handling of elided elements in array literals

JavaScript allows one to skip (elide) elements in array literals. It
also allows a trailing comma, which doesn't imply an element elision.

For example, an array literal:

  [,,,]

contains three elided elements (one before each comma) and a trailing
comma.

Example JavaScript parser handled elided elements incorrectly and just
threw them away. This commit fixes this behvior and inserts |null| in
the AST for each elided element. This is in line with how SpiderMonkey's
JavaScript parser (the |Reflect.parse| API), Esprima and Acorn behave.

Based on a patch by @fpirsch:

  https://github.com/dmajda/pegjs/pull/177"
dmajda,2013-08-31 08:28:48,https://api.github.com/repos/pegjs/pegjs/git/commits/d71bca46a125213388995e2c88383f9e159e676f,d71bca46a125213388995e2c88383f9e159e676f,"Javascript example: Improve array literal rules

Makes the |ArrayLiteral| and |ElementList| rules more in line with the
ECMAScript grammar.

Based on a patch by @fpirsch:

  https://github.com/dmajda/pegjs/pull/177"
dmajda,2013-08-28 17:43:41,https://api.github.com/repos/pegjs/pegjs/git/commits/b6ccad66957435bddff8ea60240c7a41e0a1b627,b6ccad66957435bddff8ea60240c7a41e0a1b627,"Merge pull request #204 from andreineculau/upgrade-jasmine

Upgrade jasmine and jasmine-node"
andreineculau,2013-08-22 07:07:19,https://api.github.com/repos/pegjs/pegjs/git/commits/7dc9a9ae76c73c0c10a1598e870a8a8d39af4569,7dc9a9ae76c73c0c10a1598e870a8a8d39af4569,Upgrade jasmine and jasmine-node
dmajda,2013-08-20 05:49:44,https://api.github.com/repos/pegjs/pegjs/git/commits/fe18c6ffd3a2170243908ef3d63b887483960d14,fe18c6ffd3a2170243908ef3d63b887483960d14,"Fix |null| handling in the JSON parser

We couldn't return |null| in the |value| rule of the JSON example
parser because that would mean parse failure. So until now, we just
returned |""null""| (a string).

This was obviously stupid, so this commit changes the |value| rule to
return a special object instead that is converted to |null| later.

Based on patches by Patrick Logan (GH-91) and Jakub Vrána (GH-191)."
dmajda,2013-08-17 12:07:35,https://api.github.com/repos/pegjs/pegjs/git/commits/c6efb337f10a9f0e8b8dd3a8c7d02e58d9ac0c04,c6efb337f10a9f0e8b8dd3a8c7d02e58d9ac0c04,"Fix bytecode built for nested sequences inside actions

In the bytecode generator, the |context.action| property wasn't
correctly reset when generating bytecode for sequence elements. As a
result, when a sequence was wrapped in an action and it contained
another sequence as an element, the generator thought that the inner
sequence was wrapped in an action too.

For example, the following grammar:

  start = (""a"" ""b"") ""c"" { return ""x""; }

was compiled as if it looked like this:

  start = (""a"" ""b"" { return ""x""; }) ""c"" { return ""x""; }

This commit fixes the problem by resetting |context.action| correctly.

Fixes GH-168."
dmajda,2013-08-16 18:36:11,https://api.github.com/repos/pegjs/pegjs/git/commits/379f5c5eef3d4959aa93402f269d60b977664c7e,379f5c5eef3d4959aa93402f269d60b977664c7e,"Regenerate src/parser.js

It wasn't done in beb557d7d33fed5daf691fd18ffe1ed0b9c91a7b."
dmajda,2013-08-16 18:34:45,https://api.github.com/repos/pegjs/pegjs/git/commits/74636638d015e60ea6700bd06c7f97be01663620,74636638d015e60ea6700bd06c7f97be01663620,"Merge pull request #196 from vrana/comma

Add whitespace to generated action calls"
dmajda,2013-08-16 18:22:14,https://api.github.com/repos/pegjs/pegjs/git/commits/64d0e39d83696ea114c9c29092ea9ed97ecf5d67,64d0e39d83696ea114c9c29092ea9ed97ecf5d67,"Merge pull request #195 from tonylukasavage/patch-2

Add initializer example in README.md"
vrana,2013-08-02 17:45:19,https://api.github.com/repos/pegjs/pegjs/git/commits/beb557d7d33fed5daf691fd18ffe1ed0b9c91a7b,beb557d7d33fed5daf691fd18ffe1ed0b9c91a7b,"Add whitespace to generated action calls

Avoids implicit array to string conversion."
tonylukasavage,2013-08-02 15:31:37,https://api.github.com/repos/pegjs/pegjs/git/commits/35a4b35f94fd7e2ff9221ca7752d36119a2366cb,35a4b35f94fd7e2ff9221ca7752d36119a2366cb,Add initializer example in README.md
dmajda,2013-07-27 12:01:26,https://api.github.com/repos/pegjs/pegjs/git/commits/791034fad92c9cd7a9d1c71187df03441bbfd521,791034fad92c9cd7a9d1c71187df03441bbfd521,"Merge pull request #188 from vrana/comment

Fix typo in comment"
vrana,2013-07-25 21:27:50,https://api.github.com/repos/pegjs/pegjs/git/commits/62d151cb5ae13fa33e3616505c0160a9aaf8f1ad,62d151cb5ae13fa33e3616505c0160a9aaf8f1ad,Fix typo in comment
dmajda,2013-03-20 20:58:57,https://api.github.com/repos/pegjs/pegjs/git/commits/798ed6a8a4fbfc36b312ba09d428a5832808d9d6,798ed6a8a4fbfc36b312ba09d428a5832808d9d6,"Regenerate src/parser.js

Forgot to do it in 0df8989f7ad95d524b942fafabdc0e37f394969a.

Part of a fix of GH-152."
dmajda,2013-03-17 16:56:45,https://api.github.com/repos/pegjs/pegjs/git/commits/34fe2c01ae336af215a66a443e372ef68bdec9c7,34fe2c01ae336af215a66a443e372ef68bdec9c7,"Fix matching of case-instensitive literals

Code that calculated which part of the input to match against a literal
was wrong in case of case-insensitive literals when generating
speed-optimized parsers. As a result, matching of case-insensitive
literals worked only at the end of the input (where too big length
passed to the |substr| method didn't matter).

Fixes GH-153."
dmajda,2013-03-06 20:22:19,https://api.github.com/repos/pegjs/pegjs/git/commits/0df8989f7ad95d524b942fafabdc0e37f394969a,0df8989f7ad95d524b942fafabdc0e37f394969a,"Fix buggy position computation

Fixes GH-152."
dmajda,2013-02-24 15:14:26,https://api.github.com/repos/pegjs/pegjs/git/commits/76cc5d55b47ff3d5bbe1d435c6f843e2688cb729,76cc5d55b47ff3d5bbe1d435c6f843e2688cb729,"Use the |s| function instead of hardcoded |s0| value

Based on a patch by @fresheneesz:

  https://github.com/dmajda/pegjs/pull/148"
dmajda,2013-01-27 19:12:44,https://api.github.com/repos/pegjs/pegjs/git/commits/8759d4899e3853689a783258ed6c93ffa1436170,8759d4899e3853689a783258ed6c93ffa1436170,"Fix deduplication in |peg$cleanupExpected|

The deduplication skipped over an expected string right after the one
that was removed because the index variable was incorrectly incremented
in that case.

Based on a patch by @fresheneesz:

  https://github.com/dmajda/pegjs/pull/146"
dmajda,2013-01-20 09:11:08,https://api.github.com/repos/pegjs/pegjs/git/commits/851681d66324a5aed3e9e4899502ac6c2f9afbeb,851681d66324a5aed3e9e4899502ac6c2f9afbeb,"Implement the --extra-options and --extra-options-file options

These are mainly useful to pass additional options to plugins."
dmajda,2013-01-20 08:41:27,https://api.github.com/repos/pegjs/pegjs/git/commits/d0130167175f3a97cba9d7d5dc9d73a0261d06b6,d0130167175f3a97cba9d7d5dc9d73a0261d06b6,"bin/pegjs: Fix help wrapping

All help text should be wrapped at column 80."
dmajda,2013-01-14 19:45:40,https://api.github.com/repos/pegjs/pegjs/git/commits/e8a68e91e0fa11faaadb2a1fadd526a013ce4722,e8a68e91e0fa11faaadb2a1fadd526a013ce4722,"Merge pull request #155 from fpirsch/patch-3

Fix automatic semi-colon insertion"
dmajda,2013-01-14 19:33:35,https://api.github.com/repos/pegjs/pegjs/git/commits/2dc39bb77930dbae83d5815551d395a54b64a177,2dc39bb77930dbae83d5815551d395a54b64a177,"bin/pegjs: Output just the parser source if --export-var is empty

This will make embedding generated parsers into other files easier.

Based on a patch by Glen Huang:

  https://github.com/dmajda/pegjs/pull/143"
dmajda,2013-01-13 11:06:29,https://api.github.com/repos/pegjs/pegjs/git/commits/e1af175af837df1fed8476865c3149bfeef36497,e1af175af837df1fed8476865c3149bfeef36497,"Plugin API: Implement the --plugin option

Implements part of GH-106."
dmajda,2013-01-13 10:17:44,https://api.github.com/repos/pegjs/pegjs/git/commits/e4b558832781f7e09895d7a67b2d873ee838ca32,e4b558832781f7e09895d7a67b2d873ee838ca32,"Plugin API: Split compiler passes into stages

The compiler passes are now split into three stages:

  * check -- passes that check for various error conditions

  * transform -- passes that transform the AST (e.g. to perform
    optimizations)

  * generate -- passes that are related to code generation

Splitting the passes into stages is important for plugins. For example,
if a plugin wants to add a new optimization pass, it can add it at the
end of the ""transform"" stage without any knowledge about other passes it
contains. Similarly, if it wants to generate something else than the
default code generator does from the AST, it can just replace all passes
in the ""generate"" stage by its own one(s).

More generally, the stages make it possible to write plugins that do not
depend on names and actions of specific passes (which I consider
internal and subject of change), just on the definition of stages (which
I consider a public API with to which semver rules apply).

Implements part of GH-106."
dmajda,2013-01-11 19:55:33,https://api.github.com/repos/pegjs/pegjs/git/commits/76f5c88073af8e62e0b576c1762f9de30a6ed24a,76f5c88073af8e62e0b576c1762f9de30a6ed24a,"Plugin API: Implement the |plugins| option for |PEG.buildParser|

The |plugins| option allows users to use plugins that change how PEG.js
operates.

A plugin is any JavaScript object with a |use| method. After the user
calls |PEG.buildParser|, this method is called for each plugin with the
following two parameters:

  * PEG.js config that describes used grammar parser and compiler
    passes used to generate the parser

  * options passed by user to |PEG.buildParser|

The plugin is expected to change the config as needed, possibly based on
the options passed by user. It can e.g. change the used grammar parser,
change the compiler passes (including adding its own), etc. This way it
can extend PEG.js in a flexible way.

Implements part of GH-106."
fpirsch,2013-01-12 17:59:49,https://api.github.com/repos/pegjs/pegjs/git/commits/d7e853b87c91ccb9a74ef706f70288866f854cf1,d7e853b87c91ccb9a74ef706f70288866f854cf1,"Fix automatic semi-colon insertion

Fix automatic semi-colon insertion in var statements without
initialisers.
var i
i = 1;
is valid and not accepted by the parser

but
var i = 2
i = 3;
is valid and accepted by the parser, as it should be.

With this fix, both are accepted."
dmajda,2013-01-11 19:35:18,https://api.github.com/repos/pegjs/pegjs/git/commits/d02098eebecc65f292b8406b81921f918e7df217,d02098eebecc65f292b8406b81921f918e7df217,"Plugin API: Implement the |passes| parameter for |PEG.compiler.compile|

The |passes| parameter will allow to pass the list of passes from
|PEG.buildParser|. This will be used by plugins. The old way via setting
the |appliedPassNames| property is removed.

Implements part of GH-106."
dmajda,2013-01-06 19:27:35,https://api.github.com/repos/pegjs/pegjs/git/commits/3b3798fa39ef3fa880d275fce306c9575d8c2e1a,3b3798fa39ef3fa880d275fce306c9575d8c2e1a,"Merge lib/compiler/passes.js into lib/compiler.js

It didn't make sense to have the passes in a separate file."
dmajda,2013-01-06 15:05:42,https://api.github.com/repos/pegjs/pegjs/git/commits/02af83f9b416778878e52e2cbbc22d96e312164e,02af83f9b416778878e52e2cbbc22d96e312164e,"s/subclass/peg$subclass/

The |subclass| function is not intended to be used by user code."
dmajda,2013-01-06 15:00:09,https://api.github.com/repos/pegjs/pegjs/git/commits/4fe32cee8c727ed08d0c9a444aae66bc35c3e79b,4fe32cee8c727ed08d0c9a444aae66bc35c3e79b,Fix indentation
dmajda,2013-01-06 10:51:57,https://api.github.com/repos/pegjs/pegjs/git/commits/f985bd76ed8502a3af9496b4bcfdf7965a183319,f985bd76ed8502a3af9496b4bcfdf7965a183319,Fix opcodes in comment in generate-bytecode.js
dmajda,2013-01-06 09:35:09,https://api.github.com/repos/pegjs/pegjs/git/commits/c7481d4da10672797f8c95cb9ed3025eeb62c03e,c7481d4da10672797f8c95cb9ed3025eeb62c03e,"Test property presence in |utils.defaults| using |in|

This is more correct than comparing to |undefined|."
dmajda,2013-01-06 09:32:52,https://api.github.com/repos/pegjs/pegjs/git/commits/d3d4ace153320da5ed74c2446d8165b0b9eefede,d3d4ace153320da5ed74c2446d8165b0b9eefede,"Move options handling from passes to |PEG.compiler.compile|

This eliminates some duplicate code."
dmajda,2013-01-06 09:21:12,https://api.github.com/repos/pegjs/pegjs/git/commits/5942988f66ce79d4784348831b9fb0105ca0e5bf,5942988f66ce79d4784348831b9fb0105ca0e5bf,"Remove the |startRule| property from the AST

It's redundant."
dmajda,2013-01-06 09:16:17,https://api.github.com/repos/pegjs/pegjs/git/commits/398143398494b96834ef998597a735e8c5498fe2,398143398494b96834ef998597a735e8c5498fe2,"Fix too eager proxy rules removal

Fixes GH-137."
dmajda,2013-01-06 08:51:30,https://api.github.com/repos/pegjs/pegjs/git/commits/5d00815b4124f3e052f96a07c4b5e15be424efb1,5d00815b4124f3e052f96a07c4b5e15be424efb1,Improve |removeProxyRules| pass specs a bit
dmajda,2013-01-05 20:16:36,https://api.github.com/repos/pegjs/pegjs/git/commits/549d052710e7c35ed27a91b9de41a49b56a2afe1,549d052710e7c35ed27a91b9de41a49b56a2afe1,"Make |GrammarError| require work also in the browser version

Fixes a bug from ac179cda7bae7bef539d235e3f66e5eed92b50ef (a fix for
GH-135)."
dmajda,2013-01-05 19:28:24,https://api.github.com/repos/pegjs/pegjs/git/commits/d61fd1792daceb32192fa937566509c19919d701,d61fd1792daceb32192fa937566509c19919d701,"Fix JSHint errors

Fixes the following JSHint errors (which I think are JSHint bugs):

  spec/parser.spec.js: line 142, col 20, Bad for in variable 'key'.
  spec/generated-parser.spec.js: line 119, col 20, Bad for in variable 'key'."
dmajda,2013-01-03 19:42:25,https://api.github.com/repos/pegjs/pegjs/git/commits/09f3f83e1c4f33fbff40ef3a30c87967fdd101a3,09f3f83e1c4f33fbff40ef3a30c87967fdd101a3,"Merge pull request #135 from hyperpape/master

PEG.GrammarError is undefined in report-missing-rules and report-left-recursion"
dmajda,2013-01-01 14:15:37,https://api.github.com/repos/pegjs/pegjs/git/commits/fe1ca481abc7ee5a499a26eed226f06c9c2024d5,fe1ca481abc7ee5a499a26eed226f06c9c2024d5,"Code generator rewrite

This is a complete rewrite of the PEG.js code generator. Its goals are:

  1. Allow optimizing the generated parser code for code size as well as
     for parsing speed.

  2. Prepare ground for future optimizations and big features (like
     incremental parsing).

  2. Replace the old template-based code-generation system with
     something more lightweight and flexible.

  4. General code cleanup (structure, style, variable names, ...).

New Architecture
----------------

The new code generator consists of two steps:

  * Bytecode generator -- produces bytecode for an abstract virtual
    machine

  * JavaScript generator -- produces JavaScript code based on the
    bytecode

The abstract virtual machine is stack-based. Originally I wanted to make
it register-based, but it turned out that all the code related to it
would be more complex and the bytecode itself would be longer (because
of explicit register specifications in instructions). The only downsides
of the stack-based approach seem to be few small inefficiencies (see
e.g. the |NIP| instruction), which seem to be insignificant.

The new generator allows optimizing for parsing speed or code size (you
can choose using the |optimize| option of the |PEG.buildParser| method
or the --optimize/-o option on the command-line).

When optimizing for size, the JavaScript generator emits the bytecode
together with its constant table and a generic bytecode interpreter.
Because the interpreter is small and the bytecode and constant table
grow only slowly with size of the grammar, the resulting parser is also
small.

When optimizing for speed, the JavaScript generator just compiles the
bytecode into JavaScript. The generated code is relatively efficient, so
the resulting parser is fast.

Internal Identifiers
--------------------

As a small bonus, all internal identifiers visible to user code in the
initializer, actions and predicates are prefixed by |peg$|. This lowers
the chance that identifiers in user code will conflict with the ones
from PEG.js. It also makes using any internals in user code ugly, which
is a good thing. This solves GH-92.

Performance
-----------

The new code generator improved parsing speed and parser code size
significantly. The generated parsers are now:

  * 39% faster when optimizing for speed

  * 69% smaller when optimizing for size (without minification)

  * 31% smaller when optimizing for size (with minification)

(Parsing speed was measured using the |benchmark/run| script. Code size
was measured by generating parsers for examples in the |examples|
directory and adding up the file sizes. Minification was done by |uglify
--ascii| in version 1.3.4.)

Final Note
----------

This is just a beginning! The new code generator lays a foundation upon
which many optimizations and improvements can (and will) be made.

Stay tuned :-)"
hyperpape,2012-12-14 18:00:30,https://api.github.com/repos/pegjs/pegjs/git/commits/b58533ec2f9326ad103f36f650d1a08ece302f0a,b58533ec2f9326ad103f36f650d1a08ece302f0a,Merge branch 'master' of https://github.com/dmajda/pegjs
hyperpape,2012-12-07 22:32:58,https://api.github.com/repos/pegjs/pegjs/git/commits/ac179cda7bae7bef539d235e3f66e5eed92b50ef,ac179cda7bae7bef539d235e3f66e5eed92b50ef,"Fix ReferenceError in compiler passes.

Previously, the report-left-recursion and report-missing-rules passes
used PEG.GrammarError without requiring it, causing a ReferenceError.

Since requiring lib/peg.js would cause circular requirements, this
commit imports lib/grammar-error.js as GrammarError.

The bug was introduced in commit
4cda79951a2b502dd6d1c0df8fe2ed45464bb9b7.

Fixes GH-135."
dmajda,2012-12-10 20:01:30,https://api.github.com/repos/pegjs/pegjs/git/commits/bea6b1fde74c8aebf802f9bcc3380c65b241e1b7,bea6b1fde74c8aebf802f9bcc3380c65b241e1b7,"Implement the |text| function

When called inside an action, the |text| function returns the text
matched by action's expression. It can be also called inside an
initializer or a predicate where it returns an empty string.

The |text| function will be useful mainly in cases where one needs a
structured representation of the input and simultaneously the raw text.
Until now, the only way to get the raw text in these cases was to
painfully build it from the structured representation.

Fixes GH-131."
dmajda,2012-12-09 19:46:58,https://api.github.com/repos/pegjs/pegjs/git/commits/cab652169029b5910104e80bee6b6bf69b3de5ef,cab652169029b5910104e80bee6b6bf69b3de5ef,"Test |offset|, |line| and |column| in the initializer

Add a test verifying that the |offset|, |line| and |column| functions
are visible and properly initialized inside the initializer.

See GH-132."
dmajda,2012-12-02 09:40:40,https://api.github.com/repos/pegjs/pegjs/git/commits/c54483bb17e5e14a689f25d4bc08a6bab7c3aea8,c54483bb17e5e14a689f25d4bc08a6bab7c3aea8,Text nodes: Use text nodes in examples/javascript.pegjs
dmajda,2012-12-02 09:07:59,https://api.github.com/repos/pegjs/pegjs/git/commits/faaf9b6be107e72d418d92177b98175b4dea857b,faaf9b6be107e72d418d92177b98175b4dea857b,Text nodes: Use text nodes in examples/css.pegjs
dmajda,2012-12-01 15:38:13,https://api.github.com/repos/pegjs/pegjs/git/commits/d0dfe465504aa1d3077290a8ce48b10c60bb573b,d0dfe465504aa1d3077290a8ce48b10c60bb573b,Text nodes: Use text nodes in examples/json.pegjs
dmajda,2012-12-01 15:29:41,https://api.github.com/repos/pegjs/pegjs/git/commits/9ec6b6aa57e1a7e3b3eccb9b999067b28f865943,9ec6b6aa57e1a7e3b3eccb9b999067b28f865943,Text nodes: Use text nodes in examples/arithmetics.pegjs
dmajda,2012-12-01 15:16:01,https://api.github.com/repos/pegjs/pegjs/git/commits/f0a6bc92cc24b623689c7811bebc1ce2921442f0,f0a6bc92cc24b623689c7811bebc1ce2921442f0,Text nodes: Use text nodes in PEG.js grammar
dmajda,2012-12-01 14:46:14,https://api.github.com/repos/pegjs/pegjs/git/commits/5e146fce3846f3bf58562c4afe91207c11294b7e,5e146fce3846f3bf58562c4afe91207c11294b7e,"Text nodes: Implement text nodes

Implement a new syntax to extract matched strings from expressions. For
example, instead of:

  identifier = first:[a-zA-Z_] rest:[a-zA-Z0-9_]* { return first + rest.join(""""); }

you can now just write:

  identifier = $([a-zA-Z_] [a-zA-Z0-9_]*)

This is useful mostly for ""lexical"" rules at the bottom of many
grammars.

Note that structured match results are still built for the expressions
prefixed by ""$"", they are just ignored. I plan to optimize this later
(sometime after the code generator rewrite)."
dmajda,2012-12-01 14:06:15,https://api.github.com/repos/pegjs/pegjs/git/commits/af20f024c78ac99543801470f489719e4dce6f75,af20f024c78ac99543801470f489719e4dce6f75,"Text nodes: Disallow the ""$"" character in identifiers

The ""$"" character will mark text nodes in the future."
dmajda,2012-12-02 15:47:07,https://api.github.com/repos/pegjs/pegjs/git/commits/4e46a6e46e93dff24f18e7b81136e669e669c660,4e46a6e46e93dff24f18e7b81136e669e669c660,Rebuild src/parser.js (forgotten in the previous commit)
dmajda,2012-12-01 12:37:39,https://api.github.com/repos/pegjs/pegjs/git/commits/28860e88df317fcc2745a39cdd77cea799f2eb65,28860e88df317fcc2745a39cdd77cea799f2eb65,"Position tracking: Cache position info computed by |line| and |column|

Cache the last reported position info. If the position advances, the
code uses the cache and only computes the differnece. If the position
goes back, the cache is simply dropped."
dmajda,2012-12-01 12:10:50,https://api.github.com/repos/pegjs/pegjs/git/commits/3333cdd18d702e257ddefb90e9230397beef91fc,3333cdd18d702e257ddefb90e9230397beef91fc,"Position tracking: Kill the |trackLineAndColumn| option

Getting rid of the |trackLineAndColumn| simplifies the code generator
(by unifying two paths in the code).

The |line| and |column| functions currently always compute all the
position info from scratch, which is horribly ineffective. This will be
improved in later commit(s)."
dmajda,2012-12-01 11:15:46,https://api.github.com/repos/pegjs/pegjs/git/commits/da8c4556409d9efc82400ef6260d9cbe26265600,da8c4556409d9efc82400ef6260d9cbe26265600,"Position tracking: Make |offset|, |line| and |column| functions

This will allow to compute position data lazily and get rid of the
|trackLineAndColumn| option without affecting performance of generated
parsers that don't use position data."
dmajda,2012-12-02 12:04:57,https://api.github.com/repos/pegjs/pegjs/git/commits/da9ab1bf17cd860c8231feb8ae435497c786965d,da9ab1bf17cd860c8231feb8ae435497c786965d,"Remove ""make build"" from tools/impact

There is no ""build"" target anymore.

This was forgotten in 0519d7e3ce2f64dbe40b85240fbf96e3c3c80f01."
dmajda,2012-11-23 21:25:28,https://api.github.com/repos/pegjs/pegjs/git/commits/203243b8847841ecc77f5e315e96d4d83c83ffef,203243b8847841ecc77f5e315e96d4d83c83ffef,README.md: Add link to the Trello board
dmajda,2012-11-21 07:35:43,https://api.github.com/repos/pegjs/pegjs/git/commits/bc9a2528ef7edf6e9f2bf5c3de49eed8d423daaa,bc9a2528ef7edf6e9f2bf5c3de49eed8d423daaa,Add backslash forgotten in the previous commit
dmajda,2012-11-21 07:24:08,https://api.github.com/repos/pegjs/pegjs/git/commits/1988110a284678a7068ed90eaef138371b619f44,1988110a284678a7068ed90eaef138371b619f44,"Fix code generated for classes starting with ""\^""

Before this commit, incorrect regexps were produced for classes starting
with ""\^"". For example, this grammar:

  start = [\^a]

didn't match ""a"" because the generated regexp inside the parser was
/^[^a]/, not /^[\^a]/ as it should be.

This commit fixes the issue by escaping ""^"" in |quoteForRegexpClass|.

Fixes GH-125."
dmajda,2012-11-21 07:18:47,https://api.github.com/repos/pegjs/pegjs/git/commits/ff819cc579970e2bda2a5f38cbbbc856f5b27a03,ff819cc579970e2bda2a5f38cbbbc856f5b27a03,Fix whitespace
dmajda,2012-11-11 17:18:52,https://api.github.com/repos/pegjs/pegjs/git/commits/05a6bad98983e9a3c15ad72dffddcadaa18e3830,05a6bad98983e9a3c15ad72dffddcadaa18e3830,"Kill the |toSource| method, introduce the |output| option

Before this commit, |PEG.buildParser| always returned a parser object.
The only way to get its source code was to call the |toSource| method on
it. While this method worked for parsers produced by |PEG.buildParser|
directly, it didn't work for parsers instantiated by executing their
source code. In other words, it was unreliable.

This commit remvoes the |toSource| method on generated parsers and
introduces a new |output| option to |PEG.buildParser|. It allows callers
to specify whether they want to get back the parser object
(|options.output === ""parser""|) or its source code (|options.output ===
""source""|). This is much better and more reliable API."
dmajda,2012-11-11 16:49:06,https://api.github.com/repos/pegjs/pegjs/git/commits/3629d880d33a554140b28061c11c1116c37fb3d1,3629d880d33a554140b28061c11c1116c37fb3d1,"Make sure the |options| param passed to passes is always an object

Pass code can be simpler as a result."
dmajda,2012-11-10 14:21:36,https://api.github.com/repos/pegjs/pegjs/git/commits/ee1a0b5810c8369c76b4d55752862674ce46c381,ee1a0b5810c8369c76b4d55752862674ce46c381,"Add compiled examples to .gitignore

Based on patch by Pavel Lang (GH-96)."
dmajda,2012-11-10 14:17:42,https://api.github.com/repos/pegjs/pegjs/git/commits/dd2216da7e12df03b7ec7a48161fcdd6605407be,dd2216da7e12df03b7ec7a48161fcdd6605407be,"Fix versions of development dependencies

This ensures stable environment for development, CI, browser builds,
etc."
dmajda,2012-11-10 14:08:38,https://api.github.com/repos/pegjs/pegjs/git/commits/51e126882b57bf050351237ead2a868a4a255c27,51e126882b57bf050351237ead2a868a4a255c27,"Assume development dependencies are installed locally

This is compatible with what ""npm install"" does and allows for isolated
development environment."
dmajda,2012-11-10 13:52:13,https://api.github.com/repos/pegjs/pegjs/git/commits/32e372be924cfbc3d8192c02059480b58c73ba21,32e372be924cfbc3d8192c02059480b58c73ba21,package.json: Formatting
dmajda,2012-11-10 13:21:14,https://api.github.com/repos/pegjs/pegjs/git/commits/0519d7e3ce2f64dbe40b85240fbf96e3c3c80f01,0519d7e3ce2f64dbe40b85240fbf96e3c3c80f01,"Git repo npmization: Make the repo a npm package

Includes:

  * Moving the source code from /src to /lib.
  * Adding an explicit file list to package.json
  * Updating the Makefile.
  * Updating the spec and benchmark suites and their READMEs.

Part of a fix for GH-32."
dmajda,2012-11-10 08:47:22,https://api.github.com/repos/pegjs/pegjs/git/commits/4cda79951a2b502dd6d1c0df8fe2ed45464bb9b7,4cda79951a2b502dd6d1c0df8fe2ed45464bb9b7,"Git repo npmization: Compose PEG.js from Node.js modules

PEG.js source code becomes a set of Node.js modules that include each
other as needed. The distribution version is built by bundling these
modules together, wrapping them inside a bit of boilerplate code that
makes |module.exports| and |require| work.

Part of a fix for GH-32."
dmajda,2012-11-09 15:07:19,https://api.github.com/repos/pegjs/pegjs/git/commits/c6cf129635cc9006663db5d196366ef5481fcaa2,c6cf129635cc9006663db5d196366ef5481fcaa2,"Git repo npmization: Do not use @VERSION

When the Git repository will be a npm package, there will be no
preprocessing step and thus no @VERSION substitution. Let's get rid of
it.

Part of a fix for GH-32."
dmajda,2012-11-09 14:57:14,https://api.github.com/repos/pegjs/pegjs/git/commits/d742ca5dc6a2950edc2f0a72b52e1259e2673d76,d742ca5dc6a2950edc2f0a72b52e1259e2673d76,"Makefile: Small reordering

Define |PEGJS_VERSION| before it is used. While defining it after its
first use was OK technically, it made the code a tiny bit harder to
read."
dmajda,2012-10-29 07:21:46,https://api.github.com/repos/pegjs/pegjs/git/commits/a7584fa8784fa082db85c3c1b598870ad7ff4213,a7584fa8784fa082db85c3c1b598870ad7ff4213,Rebuild src/parser.js (forgotten in the previous commit)
dmajda,2012-10-28 18:17:37,https://api.github.com/repos/pegjs/pegjs/git/commits/277fb23411477936adcb369d11564d9ef566d74d,277fb23411477936adcb369d11564d9ef566d74d,Setup prototype chain for |SyntaxError| in generated parsers correctly
dmajda,2012-10-28 18:06:47,https://api.github.com/repos/pegjs/pegjs/git/commits/143924357b224181da8d370b475130842bc90a0d,143924357b224181da8d370b475130842bc90a0d,Setup prototype chain for |PEG.GrammarError| correctly
dmajda,2012-10-28 17:57:45,https://api.github.com/repos/pegjs/pegjs/git/commits/428fe294cfaaaa9adaa3ea15a1621d110e734fe7,428fe294cfaaaa9adaa3ea15a1621d110e734fe7,"Change |PEG.GrammarError| name

Change the value of the |name| property of |PEG.GrammarError| instances
from ""PEG.GrammarError"" to just ""GrammarError"". This better reflects the
fact that PEG.js can get required under different name than ""PEG""."
dmajda,2012-10-28 10:26:55,https://api.github.com/repos/pegjs/pegjs/git/commits/12398ada9a4e45f7d6ceeef6c8e73b34aac7d070,12398ada9a4e45f7d6ceeef6c8e73b34aac7d070,Implement Travis CI integration
dmajda,2012-10-28 10:21:19,https://api.github.com/repos/pegjs/pegjs/git/commits/a2672e0b48072207c73f5548fb1fb6caf671c035,a2672e0b48072207c73f5548fb1fb6caf671c035,"Make ""npm test"" work

This is will be useful for Travis CI integration"
dmajda,2012-10-28 10:12:00,https://api.github.com/repos/pegjs/pegjs/git/commits/adfeb87c8227ae553b0aad5bbe59bcb09e61e05f,adfeb87c8227ae553b0aad5bbe59bcb09e61e05f,"Do not preprecess package.json

Before this commit, package.json in the project root directory was
preprocessed in order to insert correct version into it. This made it
invalid JSON and thus unusable for npm purposes.

This commit makes package.json a valid JSON by hardcoding the version
into it. I think that introducing this small duplicity is outweighted by
being able to use npm in project root directory. For example, it is now
possible to make the ""npm test"" command work and introduce Travis CI
integration."
dmajda,2012-10-28 14:41:54,https://api.github.com/repos/pegjs/pegjs/git/commits/b1db42e1b4630693b8f0405bbb721d490be87c0a,b1db42e1b4630693b8f0405bbb721d490be87c0a,"Merge pull request #115 from fpirsch/patch-1

Changed ""arguments"" to ""args"" in a few places."
dmajda,2012-10-28 14:33:19,https://api.github.com/repos/pegjs/pegjs/git/commits/df1ecb1313a3836297c986d91a9046dce999bcf3,df1ecb1313a3836297c986d91a9046dce999bcf3,Fix typo found by Almad also in the generator
dmajda,2012-10-28 14:31:25,https://api.github.com/repos/pegjs/pegjs/git/commits/710bee256a563716d438c4926ad55b06cbde1fb8,710bee256a563716d438c4926ad55b06cbde1fb8,"Merge pull request #113 from Almad/master

Grammar typo"
dmajda,2012-10-22 09:37:18,https://api.github.com/repos/pegjs/pegjs/git/commits/e5e9ce27788135ea8dc0e1a12e3fb987b7c98f8c,e5e9ce27788135ea8dc0e1a12e3fb987b7c98f8c,README.md: Wrap lines at column 80
dmajda,2012-10-28 14:20:05,https://api.github.com/repos/pegjs/pegjs/git/commits/406ac0a288c052c0045b8943d152e2f458a02bb8,406ac0a288c052c0045b8943d152e2f458a02bb8,Fix banner typo
fpirsch,2012-10-26 20:17:54,https://api.github.com/repos/pegjs/pegjs/git/commits/fa051422925e7e0c01e94d5c6e521419895b2275,fa051422925e7e0c01e94d5c6e521419895b2275,"Update examples/javascript.pegjs

Changed ""arguments"" to ""args"" in several places to avoid shadowing ""arguments"", which is not allowed by Google Clusure Compiler."
Almad,2012-10-23 00:49:21,https://api.github.com/repos/pegjs/pegjs/git/commits/030ac3d6f94ef95777077a19f78aaf1b6cc22df6,030ac3d6f94ef95777077a19f78aaf1b6cc22df6,Grammar typo
dmajda,2012-10-20 13:58:08,https://api.github.com/repos/pegjs/pegjs/git/commits/208cc33930c267246a0287fa3127b8fb6d5e6502,208cc33930c267246a0287fa3127b8fb6d5e6502,"Allowed start rules must be specified explicitly

Before this commit, generated parser were able to start parsing from any
rule. This was nice, but it made rule code inlining impossible.

Since this commit, the list of allowed start rules has to be specified
explicitly using the |allowedStartRules| option of the |PEG.buildParser|
method (or the --allowed-start-rule option on the command-line). These
rules will be excluded from inlining when it's implemented."
dmajda,2012-10-21 10:29:38,https://api.github.com/repos/pegjs/pegjs/git/commits/6a1ec7631fe1c66b51b65b26dad714f1128de41b,6a1ec7631fe1c66b51b65b26dad714f1128de41b,"Do not modify |options| passed to |PEG.buildParser|

Modifying |options| can lead to subtle bugs."
dmajda,2012-10-20 11:45:22,https://api.github.com/repos/pegjs/pegjs/git/commits/75a78c083c9d9c1a0868f2163ff341f930cd8e6b,75a78c083c9d9c1a0868f2163ff341f930cd8e6b,Fix typo in testcase description
dmajda,2012-09-24 18:29:48,https://api.github.com/repos/pegjs/pegjs/git/commits/e97c5010724f739106822ffd841a3cc7a2ad9273,e97c5010724f739106822ffd841a3cc7a2ad9273,README.md: Add wiki link
dmajda,2012-09-23 14:06:11,https://api.github.com/repos/pegjs/pegjs/git/commits/edb547958e2cfbda77fef10d2ec7ade42c20e3cf,edb547958e2cfbda77fef10d2ec7ade42c20e3cf,README.md: Fix project website link
dmajda,2012-09-23 11:57:31,https://api.github.com/repos/pegjs/pegjs/git/commits/a4df483159918e1202cffbf3ebc1b37467891e7e,a4df483159918e1202cffbf3ebc1b37467891e7e,"s/Modelled/Modeled/

""modelled"" is a British variant, ""modeled"" an US one. PEG.js officially
uses American English.

Based on pull request by John Gietzen:

  https://github.com/dmajda/pegjs/pull/102"
dmajda,2012-09-19 06:32:21,https://api.github.com/repos/pegjs/pegjs/git/commits/98ff2eb83fb3a09655880605f248d49387d1340e,98ff2eb83fb3a09655880605f248d49387d1340e,"Allow passing options to the parser

This commit replaces the |startRule| parameter of the |parse| method in
generated parsers with more generic |options| -- an options object. This
options object can be used to pass custom options to the parser because
it is visible as the |options| variable inside parser code.

The start rule can now be specified as the |startRule| option. This
means you have to replace all calls like:

  parser.parse(""input"", ""myStartRule"");

with

  parser.parse(""input"", { startRule: ""myStartRule"" });

Closes GH-37."
dmajda,2012-09-18 20:47:09,https://api.github.com/repos/pegjs/pegjs/git/commits/e90aacd9345de9b6286d16243bb81fa8009041a1,e90aacd9345de9b6286d16243bb81fa8009041a1,Specs: Whitespace fix + add semicolon in tested parser code
dmajda,2012-07-15 18:49:30,https://api.github.com/repos/pegjs/pegjs/git/commits/a3fe36a466d7e702c6decf7daf7caa46db7588e2,a3fe36a466d7e702c6decf7daf7caa46db7588e2,Add missing semicolon
dmajda,2012-07-15 15:17:25,https://api.github.com/repos/pegjs/pegjs/git/commits/7134b09e502ca2ff17b165e72b04e88f7973fbab,7134b09e502ca2ff17b165e72b04e88f7973fbab,"Merge |allocateRegisters| and |computeParams| passes

The purpose of this change is to avoid the need to index register
variables storing match results of sequences whose elements are labeled.
The indexing happened when match results of labeled elements were passed
to action/predicate functions.

In order to avoid indexing, the register allocator needs to ensure that
registers storing match results of any labeled sequence elements are
still ""alive"" after finishing parsing of the sequence. They should not
be used to store anything else at least until code of all actions and
predicates that can see the labels is executed. This requires that the
|allocateRegisters| pass has the knowledge of scoping. Because that
knowledge was already implicitly embedded in the |coputeParams| pass,
the logical step to prevent duplication was to merge it with the
|allocateRegisters| pass. This is what this commit does.

As a part of the merge the tests of both passes were largely refactored.
This is both to accomodate the merge and to make the tests in sync with
the code again (the tests became a bit out-of-sync during the last few
commits -- they tested more than was needed).

The speed/size impact is slightly positive:

Speed impact
------------
Before:     849.86 kB/s
After:      858.16 kB/s
Difference: 0.97%

Size impact
-----------
Before:     876618 b
After:      875602 b
Difference: -0.12%

(Measured by /tools/impact with Node.js v0.6.18 on x86_64 GNU/Linux.)"
dmajda,2012-07-06 13:02:46,https://api.github.com/repos/pegjs/pegjs/git/commits/a1fd6acc923db555c62f2fcf251d4b71f8569c4d,a1fd6acc923db555c62f2fcf251d4b71f8569c4d,"Do not compute |resultIndex| for ""rule"" nodes

Computing |resultIndex| for their expressions is enough."
dmajda,2012-07-01 17:00:19,https://api.github.com/repos/pegjs/pegjs/git/commits/2d36ebeb5917cb46737373a59f806d85a2d8ae7c,2d36ebeb5917cb46737373a59f806d85a2d8ae7c,"Mental model change: Variables do not form a stack, they are registers

This commit changes the model underlying parser variables used to store
match results and parse positions. Until now they were treated as a
stack, now they are thought of as registers. The actual behavior does
not change (yet), only the terminology.

More specifically, this commit:

  * Changes parser variable names from |result0|, |result1|, etc. to
    |r0|, |r1|, etc.

  * Changes various internal names and comments to match the new model.

  * Renames the |computeVarIndices| pass to |allocateRegisters|."
dmajda,2012-07-01 16:16:04,https://api.github.com/repos/pegjs/pegjs/git/commits/2f3dd951e9525a9ae7f0591f0353017b36eacf92,2f3dd951e9525a9ae7f0591f0353017b36eacf92,"Do not store result variable indices, just the counts"
dmajda,2012-07-01 11:42:35,https://api.github.com/repos/pegjs/pegjs/git/commits/42d4fc6dd42fa92ef0d3af529d4b9c56899e7576,42d4fc6dd42fa92ef0d3af529d4b9c56899e7576,"Get rid of two parser variable stacks

One stack is conceptually simpler, requires less code and will make a
transition to a register-based machine easier.

Note that the stack variables are now named a bit incorrectly
(|result0|, |result1|, etc. even when they store also parse positions).
I didn't bother with renaming because a transition to a register-based
machine will follow soon and the names will change anyway.

The speed/size impact is insignificant.

Speed impact
------------
Before:     839.05 kB/s
After:      839.67 kB/s
Difference: 0.07%

Size impact
-----------
Before:     949783 b
After:      961578 b
Difference: 1.24%

(Measured by /tools/impact with Node.js v0.6.18 on x86_64 GNU/Linux.)"
dmajda,2012-07-01 08:22:39,https://api.github.com/repos/pegjs/pegjs/git/commits/890140d73b7fa07eb65b35c02c175a31b813af4b,890140d73b7fa07eb65b35c02c175a31b813af4b,"More responsibility for computing |resultIndex| to node's parent

Before this commit, each node was responsible for computing the value of
its |resultIndex| property in the |computeVarIndices| pass. This was
possible because |resultIndex| was always equal to |index.result|,
meaning that nodes always wrote their match results to the top of the
stack.

This behavior would cause problems in the future where nodes will use
the stack also for storing positions. Parent nodes storing position on
the stack would have to copy their childs' match results from the top of
the stack to some position below where parent's match result would be
expected. There would be no way to tell the children to place their
match result somewhere else than the top of the stack and avoid copying.

This commit fixes the described problem by shifting the responsibility
for setting the value of node's |resultIndex| property to its parent.
This way it can direct its child to place its result wherever it wants
to."
dmajda,2012-06-30 19:39:35,https://api.github.com/repos/pegjs/pegjs/git/commits/2c8b323adef5a5500411e42e1c39a6bc49350a5b,2c8b323adef5a5500411e42e1c39a6bc49350a5b,"Replace variable name computations by computations of indices

This commit replaces all variable name computations in |computeVarNames|
and |computeParams| passes by computations of indices. The actual names
are computed later in the |generateCode| pass.

This change makes the code generator the only place that deals with the
actual variable names, making them easier to change for example.

The code generator code seems bit more complicated after the change, but
this complexity will pay off (and mostly disappear) later."
dmajda,2012-06-26 18:28:06,https://api.github.com/repos/pegjs/pegjs/git/commits/725927e05fe2d4a158e5e5201990f81092c8058b,725927e05fe2d4a158e5e5201990f81092c8058b,"Change ordering of ""action"" code

Places all code that does something with ""action"" AST nodes under code
handling ""choice"" nodes.

This ordering is logical because now all the node handling code matches
the sequence in which various node types usually appear when descending
through the AST tree."
dmajda,2012-06-25 19:46:47,https://api.github.com/repos/pegjs/pegjs/git/commits/cdf23e0a49ce4b2b230fce752a36e1578b44f3ce,cdf23e0a49ce4b2b230fce752a36e1578b44f3ce,"Change ordering of ""literal"", ""class"" and ""any"" code

Changes all code that does something with ""literal"", ""class"" or ""any""
AST nodes so that the code deals with these in the follwing order:

  1. literal
  2. class
  3. any

Previously the code used this ordering:

  1. literal
  2. any
  3. class

The new ordering is more logical because the nodes are handled from the
most specific to the most generic."
dmajda,2012-06-24 14:55:30,https://api.github.com/repos/pegjs/pegjs/git/commits/eb4badab2476dd6980f9edc92dad9a192ccc6542,eb4badab2476dd6980f9edc92dad9a192ccc6542,"Refactor named rules AST representation

PEG.js grammar rules are represented by |rule| nodes in the AST. Until
now, all such nodes had a |displayName| property which was either |null|
or stored rule's human-readable name. This commit gets rid of the
|displayName| property and starts representing rules with a
human-readable name using a new |named| node (a child of the |rule|
node).

This change simplifies code generation code a bit as tests for
|displayName| can be removed (see changes in generate-code.js). It also
separates different concerns from each other nicely."
dmajda,2012-06-16 13:08:17,https://api.github.com/repos/pegjs/pegjs/git/commits/b05b09a9f699b4a44313a5b8818752ebbaafe5ff,b05b09a9f699b4a44313a5b8818752ebbaafe5ff,"README.md: Remove extraneous ""and""

Based on patch for pegjs-website by Michael Ficarra:

  https://github.com/dmajda/pegjs-website/pull/3"
dmajda,2012-06-16 13:12:09,https://api.github.com/repos/pegjs/pegjs/git/commits/4f6386ea2a2355a3c4d06dec0a5891f27537bf28,4f6386ea2a2355a3c4d06dec0a5891f27537bf28,"README.md: Fix typo

Based on patch for pegjs-website by Michael Ficarra:

  https://github.com/dmajda/pegjs-website/pull/2"
dmajda,2012-05-07 08:08:24,https://api.github.com/repos/pegjs/pegjs/git/commits/a59516f89bc8216e460ee319e1874145ae1df5a4,a59516f89bc8216e460ee319e1874145ae1df5a4,"Small reordering of properties when creating |class| nodes

General rule: Least important things/flags go last."
dmajda,2012-05-07 07:56:39,https://api.github.com/repos/pegjs/pegjs/git/commits/55a255a8823d0dd1190bda72f68fe5a01a90bbfa,55a255a8823d0dd1190bda72f68fe5a01a90bbfa,Add forgotten tests for |nonBraceCharacter| & |nonBraceCharacters| rules
dmajda,2012-05-07 07:46:53,https://api.github.com/repos/pegjs/pegjs/git/commits/7900b66c7034e34eed5a2301c53e15f0aa42bbd3,7900b66c7034e34eed5a2301c53e15f0aa42bbd3,"Fix |braced| rule in the PEG.js grammar

This fix does not change the behavior, it just makes the
|nonBraceCharacters| rule un-dead (as originally intended)."
dmajda,2012-05-06 14:45:41,https://api.github.com/repos/pegjs/pegjs/git/commits/23e04bb4f4a1117d0f5108cd57492acb1c4546c1,23e04bb4f4a1117d0f5108cd57492acb1c4546c1,Jasmine: Delete remains the old test suite
dmajda,2012-04-30 17:51:05,https://api.github.com/repos/pegjs/pegjs/git/commits/8ef5f08c90d79b9fda8ded3262529af03a3ebc22,8ef5f08c90d79b9fda8ded3262529af03a3ebc22,Jasmine: Convert |removeProxyRules| compiler pass tests
dmajda,2012-05-06 14:40:49,https://api.github.com/repos/pegjs/pegjs/git/commits/eaf2af8e7b00838fa4699719805924772fe3ce75,eaf2af8e7b00838fa4699719805924772fe3ce75,Jasmine: Convert |computeParams| compiler pass tests
dmajda,2012-05-02 06:08:09,https://api.github.com/repos/pegjs/pegjs/git/commits/4edc9982cc4dc9a5968150963622f4675975b19b,4edc9982cc4dc9a5968150963622f4675975b19b,Jasmine: Convert |computeVarNames| compiler pass tests
dmajda,2012-04-30 11:42:13,https://api.github.com/repos/pegjs/pegjs/git/commits/1471df9a697f215e2205f2d1c903aa77d77bbf79,1471df9a697f215e2205f2d1c903aa77d77bbf79,Jasmine: Convert |reportLeftRecursion| compiler pass tests
dmajda,2012-04-30 09:47:04,https://api.github.com/repos/pegjs/pegjs/git/commits/2889ca72fc4b89053c7661a3986485e6adb9ce9c,2889ca72fc4b89053c7661a3986485e6adb9ce9c,Jasmine: Convert |reportMissingRules| compiler pass tests
dmajda,2012-04-30 08:42:20,https://api.github.com/repos/pegjs/pegjs/git/commits/ef25ec08c27b11ccb455d3dd53ba2955f0ef9db9,ef25ec08c27b11ccb455d3dd53ba2955f0ef9db9,"Extract |varyAll| calls one level up

DRY + less code."
dmajda,2012-04-30 08:32:14,https://api.github.com/repos/pegjs/pegjs/git/commits/e030834a0eaf73e0f4aa594984319b98f2873668,e030834a0eaf73e0f4aa594984319b98f2873668,Delete test/compiler-test.js
dmajda,2012-04-30 08:28:01,https://api.github.com/repos/pegjs/pegjs/git/commits/112e4122d040784f11d4fb55a65b0e596d1b4527,112e4122d040784f11d4fb55a65b0e596d1b4527,Jasmine: Convert remaining error reporting tests
dmajda,2012-04-22 17:45:34,https://api.github.com/repos/pegjs/pegjs/git/commits/94aaf4ec75161567e7725ea3e0c1843b4693c85b,94aaf4ec75161567e7725ea3e0c1843b4693c85b,Jasmine: Convert error position reporting tests
dmajda,2012-04-22 17:13:25,https://api.github.com/repos/pegjs/pegjs/git/commits/1825dd4a4213680000ec3ba7a78f0617c3bf1d66,1825dd4a4213680000ec3ba7a78f0617c3bf1d66,Jasmine: Convert start rule tests
dmajda,2012-04-22 15:19:04,https://api.github.com/repos/pegjs/pegjs/git/commits/68bfeac134eba04a73f022fa0c98143f64eb8988,68bfeac134eba04a73f022fa0c98143f64eb8988,"Jasmine: Drop the idempotence test

The code this test covered is long gone."
dmajda,2012-04-22 15:16:26,https://api.github.com/repos/pegjs/pegjs/git/commits/f61813238d952de46a948af2f53d06612c7b10f2,f61813238d952de46a948af2f53d06612c7b10f2,Jasmine: Convert complex example tests
dmajda,2012-04-22 15:01:02,https://api.github.com/repos/pegjs/pegjs/git/commits/022a51f94e32a76e726a14b74da9d111f32dd0f4,022a51f94e32a76e726a14b74da9d111f32dd0f4,Jasmine: Convert cache tests
dmajda,2012-04-22 14:45:28,https://api.github.com/repos/pegjs/pegjs/git/commits/e9f7255d47d9e2eeda49d29f529a55ab4ffd60d4,e9f7255d47d9e2eeda49d29f529a55ab4ffd60d4,Jasmine: Convert initializer tests
dmajda,2012-04-22 14:33:12,https://api.github.com/repos/pegjs/pegjs/git/commits/f5f40f68d2be759944b74fb821040e07455373d9,f5f40f68d2be759944b74fb821040e07455373d9,Jasmine: Convert choice matching tests
dmajda,2012-04-22 14:29:22,https://api.github.com/repos/pegjs/pegjs/git/commits/1b0789fbae4046767dacff299b4cfdbff0fb10cd,1b0789fbae4046767dacff299b4cfdbff0fb10cd,Jasmine: Convert sequence matching tests
dmajda,2012-04-22 14:03:43,https://api.github.com/repos/pegjs/pegjs/git/commits/ae8a89c9e488127173677aa1220bae9130f6e91a,ae8a89c9e488127173677aa1220bae9130f6e91a,Jasmine: Convert labeled matching tests
dmajda,2012-04-22 14:00:54,https://api.github.com/repos/pegjs/pegjs/git/commits/b013ba8cc9e4a60338b3286e3d94c786afc7c461,b013ba8cc9e4a60338b3286e3d94c786afc7c461,Jasmine: Convert simple and matching tests
dmajda,2012-04-22 13:56:00,https://api.github.com/repos/pegjs/pegjs/git/commits/343e9db52576d946da6f50cc174904b7881e6f20,343e9db52576d946da6f50cc174904b7881e6f20,Jasmine: Convert simple not matching tests
dmajda,2012-04-22 13:45:13,https://api.github.com/repos/pegjs/pegjs/git/commits/2bb25efa44314f37cf87b07f0d47b24cff972fba,2bb25efa44314f37cf87b07f0d47b24cff972fba,Jasmine: Convert semantic and code tests
dmajda,2012-04-22 13:39:23,https://api.github.com/repos/pegjs/pegjs/git/commits/f04096189fece469f30bdcb4bd06932f582e98fe,f04096189fece469f30bdcb4bd06932f582e98fe,Jasmine: Convert semantic not code tests
dmajda,2012-04-22 09:31:15,https://api.github.com/repos/pegjs/pegjs/git/commits/ccf31f8822170bad7dca85e1b78fb7f9f9b84879,ccf31f8822170bad7dca85e1b78fb7f9f9b84879,Jasmine: Convert optional matching tests
dmajda,2012-04-22 09:27:17,https://api.github.com/repos/pegjs/pegjs/git/commits/669668fc1b2f557fdf77810a5574c6766d1d7869,669668fc1b2f557fdf77810a5574c6766d1d7869,Jasmine: Convert zero or more matching tests
dmajda,2012-04-22 09:24:16,https://api.github.com/repos/pegjs/pegjs/git/commits/1ab06ff9063de98be8910c0281c69aa11d0bc265,1ab06ff9063de98be8910c0281c69aa11d0bc265,Jasmine: Convert one or more matching tests
dmajda,2012-04-22 12:55:00,https://api.github.com/repos/pegjs/pegjs/git/commits/03716a562d50aac359a6f4892ef1b2f17d8f5e5b,03716a562d50aac359a6f4892ef1b2f17d8f5e5b,Jasmine: Convert action code tests
dmajda,2012-04-22 09:12:30,https://api.github.com/repos/pegjs/pegjs/git/commits/b06bd774f5d268e0d1f19b9cd8a070b8e7ca3f54,b06bd774f5d268e0d1f19b9cd8a070b8e7ca3f54,Jasmine: Convert rule reference matching tests
dmajda,2012-04-22 09:07:00,https://api.github.com/repos/pegjs/pegjs/git/commits/14c11b4dfc903652c276f8748fdb0b877507974d,14c11b4dfc903652c276f8748fdb0b877507974d,Jasmine: Convert class matching tests
dmajda,2012-04-22 08:59:14,https://api.github.com/repos/pegjs/pegjs/git/commits/75ab03dc85b27de66a78be8ddad2f697a90f4943,75ab03dc85b27de66a78be8ddad2f697a90f4943,Jasmine: Convert any matching tests
dmajda,2012-04-22 08:52:41,https://api.github.com/repos/pegjs/pegjs/git/commits/ec487420325fd9d187eb0ec8129b18ff7ace193e,ec487420325fd9d187eb0ec8129b18ff7ace193e,Jasmine: Convert literal matching tests
dmajda,2012-04-21 10:27:58,https://api.github.com/repos/pegjs/pegjs/git/commits/feddd101908ff2e754245daa552b49caeaca1c98,feddd101908ff2e754245daa552b49caeaca1c98,Jasmine: Delete test/parser-test.js
dmajda,2012-04-21 10:48:37,https://api.github.com/repos/pegjs/pegjs/git/commits/94205ab639d2c9c6d400d088ed932c7ff1f8d96a,94205ab639d2c9c6d400d088ed932c7ff1f8d96a,"Jasmine: Convert tests of parser's ""grammar"" rule"
dmajda,2012-04-21 10:47:56,https://api.github.com/repos/pegjs/pegjs/git/commits/f746189f2b7a0f9bca8f1b1ae37d5c3934a0a676,f746189f2b7a0f9bca8f1b1ae37d5c3934a0a676,"Jasmine: Convert tests of parser's ""initializer"" rule"
dmajda,2012-04-21 10:06:23,https://api.github.com/repos/pegjs/pegjs/git/commits/a49674b05f89b33076f98aa98eee1fde2036f019,a49674b05f89b33076f98aa98eee1fde2036f019,"Jasmine: Change |oneRuleGrammar| parameter handling

This change makes code using |oneRuleGrammar| less verbose + prepares
for passing of the initializer (will be used by code added in the next
few commits)."
dmajda,2012-04-21 09:52:27,https://api.github.com/repos/pegjs/pegjs/git/commits/171d62fce462d8b6c4dbbfc82ba2465d68411b28,171d62fce462d8b6c4dbbfc82ba2465d68411b28,"Jasmine: Convert tests of parser's ""rule"" rule"
dmajda,2012-04-21 09:48:38,https://api.github.com/repos/pegjs/pegjs/git/commits/e17d4de7ae2fdec6bfe7f9138800f8dc5024dc08,e17d4de7ae2fdec6bfe7f9138800f8dc5024dc08,"Jasmine: Convert tests of parser's ""expression"" rule"
dmajda,2012-04-21 09:29:27,https://api.github.com/repos/pegjs/pegjs/git/commits/cc22086a0924b1d091e021bfaaeae5bb123597f3,cc22086a0924b1d091e021bfaaeae5bb123597f3,"Jasmine: Convert tests of parser's ""choice"" rule"
dmajda,2012-04-21 09:18:23,https://api.github.com/repos/pegjs/pegjs/git/commits/434abdb272e655dbb33d85bb67373da1a87852ae,434abdb272e655dbb33d85bb67373da1a87852ae,"Jasmine: Convert tests of parser's ""sequence"" rule"
dmajda,2012-04-21 08:56:05,https://api.github.com/repos/pegjs/pegjs/git/commits/ec8889f85d2c77ea35a2aded0b17cd1f720cdba5,ec8889f85d2c77ea35a2aded0b17cd1f720cdba5,"Jasmine: Convert tests of parser's ""labeled"" rule"
dmajda,2012-04-21 08:45:58,https://api.github.com/repos/pegjs/pegjs/git/commits/bf6d412a4f381eb1c420af392e20d07ed4e5b19f,bf6d412a4f381eb1c420af392e20d07ed4e5b19f,"Jasmine: Convert tests of parser's ""prefixed"" rule"
dmajda,2012-04-21 08:39:31,https://api.github.com/repos/pegjs/pegjs/git/commits/3e083cc51b53babdda0862adbe80532ed27467ed,3e083cc51b53babdda0862adbe80532ed27467ed,"Jasmine: Convert tests of parser's ""suffixed"" rule"
dmajda,2012-04-20 18:00:05,https://api.github.com/repos/pegjs/pegjs/git/commits/45f825c24f5952c9d71df6373d903c61a24f18b0,45f825c24f5952c9d71df6373d903c61a24f18b0,"Jasmine: Convert tests of parser's ""primary"" rule"
dmajda,2012-04-20 17:54:47,https://api.github.com/repos/pegjs/pegjs/git/commits/57bbcd71e516f2a7b68af01c3021bcffbc00168a,57bbcd71e516f2a7b68af01c3021bcffbc00168a,"Jasmine: Convert tests of parser's ""action"" rule"
dmajda,2012-04-20 17:50:00,https://api.github.com/repos/pegjs/pegjs/git/commits/35771e15bcd284d72f963596c026cea748e23895,35771e15bcd284d72f963596c026cea748e23895,"Jasmine: Convert tests of parser's ""braced"" rule"
dmajda,2012-04-20 17:37:08,https://api.github.com/repos/pegjs/pegjs/git/commits/b1cb214e8bc92d4cd1c258d5885224e312b79040,b1cb214e8bc92d4cd1c258d5885224e312b79040,Jasmine: Convert non-tests of parser's character class rules
dmajda,2012-04-20 17:33:20,https://api.github.com/repos/pegjs/pegjs/git/commits/4f5b78b372d4de6426db1215eadcb4fec0b05e9a,4f5b78b372d4de6426db1215eadcb4fec0b05e9a,"Jasmine: Convert tests of parser's ""identifier"" rule"
dmajda,2012-04-20 17:26:19,https://api.github.com/repos/pegjs/pegjs/git/commits/a3d93f000f3a6f3fafaea117bc98815baa194682,a3d93f000f3a6f3fafaea117bc98815baa194682,"Jasmine: Convert tests of parser's ""literal"" rule"
dmajda,2012-04-20 17:22:21,https://api.github.com/repos/pegjs/pegjs/git/commits/573db92583d0c50c227cdffb3b5fea3b3d0c1342,573db92583d0c50c227cdffb3b5fea3b3d0c1342,"Jasmine: Convert tests of parser's ""string"" rule"
dmajda,2012-04-20 17:02:40,https://api.github.com/repos/pegjs/pegjs/git/commits/fa65018b15c0089c20b927a7cec604dca9eaf706,fa65018b15c0089c20b927a7cec604dca9eaf706,"Jasmine: Convert tests of parser's ""doubleQuotedString"" rule"
dmajda,2012-04-20 17:01:12,https://api.github.com/repos/pegjs/pegjs/git/commits/0e384b31f49bfc8b466939f1d1b4b88d4cb78083,0e384b31f49bfc8b466939f1d1b4b88d4cb78083,"Jasmine: Convert tests of parser's ""doubleQuotedCharacter"" rule"
dmajda,2012-04-20 16:59:59,https://api.github.com/repos/pegjs/pegjs/git/commits/2f5f8d59324cc18baee53ca36ca6a299a5cde9c4,2f5f8d59324cc18baee53ca36ca6a299a5cde9c4,"Jasmine: Convert tests of parser's ""simpleDoubleQuotedCharacter"" rule"
dmajda,2012-04-20 16:56:18,https://api.github.com/repos/pegjs/pegjs/git/commits/fb01f48c97e503e9515cd91e8388b6fd428a60bf,fb01f48c97e503e9515cd91e8388b6fd428a60bf,"Jasmine: Convert tests of parser's ""singleQuotedString"" rule"
dmajda,2012-04-20 15:36:28,https://api.github.com/repos/pegjs/pegjs/git/commits/d3b3fe9b78584d22a3e716c2504685a82e9b6c76,d3b3fe9b78584d22a3e716c2504685a82e9b6c76,"Jasmine: Convert tests of parser's ""singleQuotedCharacter"" rule"
dmajda,2012-04-20 15:34:08,https://api.github.com/repos/pegjs/pegjs/git/commits/124e45606c98f2080f927b127830c7290bd911ce,124e45606c98f2080f927b127830c7290bd911ce,"Jasmine: Convert tests of parser's ""simpleSingleQuotedCharacter"" rule"
dmajda,2012-04-20 15:30:57,https://api.github.com/repos/pegjs/pegjs/git/commits/ba68919b0af52e86a3533dca08f158c657a9dfb2,ba68919b0af52e86a3533dca08f158c657a9dfb2,"Jasmine: Convert tests of parser's ""class"" rule"
dmajda,2012-04-20 15:06:31,https://api.github.com/repos/pegjs/pegjs/git/commits/5fb59b05f270ca92dd657fb6afcf8d9d26c1e532,5fb59b05f270ca92dd657fb6afcf8d9d26c1e532,"Jasmine: Convert tests of parser's ""classCharacterRange"" rule"
dmajda,2012-04-20 14:45:57,https://api.github.com/repos/pegjs/pegjs/git/commits/d29a753b8d20f91a1f0344b92b08239985ebe593,d29a753b8d20f91a1f0344b92b08239985ebe593,"Jasmine: Convert tests of parser's ""classCharacter"" rule"
dmajda,2012-04-20 14:34:55,https://api.github.com/repos/pegjs/pegjs/git/commits/b9ae8f9561350ac24085fb0941abfc830a36b3ad,b9ae8f9561350ac24085fb0941abfc830a36b3ad,"Jasmine: Convert tests of parser's ""bracketDelimitedCharacter"" rule"
dmajda,2012-04-20 14:17:32,https://api.github.com/repos/pegjs/pegjs/git/commits/da4ac8bb92492bed696341cf1a1bc4c303dec1b1,da4ac8bb92492bed696341cf1a1bc4c303dec1b1,"Jasmine: Convert tests of parser's ""simpleBracketDelimitedCharacter"" rule"
dmajda,2012-04-20 14:04:33,https://api.github.com/repos/pegjs/pegjs/git/commits/2bb266bbaf6512e854f889cd73e65808ab7b0802,2bb266bbaf6512e854f889cd73e65808ab7b0802,"Jasmine: Convert tests of parser's ""simpleEscapeSequence"" rule"
dmajda,2012-04-20 13:52:46,https://api.github.com/repos/pegjs/pegjs/git/commits/2619becb9d1006e772c33a69c59dfae4f804e095,2619becb9d1006e772c33a69c59dfae4f804e095,"Jasmine: Convert tests of parser's ""zeroEscapeSequence"" rule"
dmajda,2012-04-20 13:49:23,https://api.github.com/repos/pegjs/pegjs/git/commits/2b43f8ebb8191f5010bc366f398f047c4dee50ef,2b43f8ebb8191f5010bc366f398f047c4dee50ef,"Jasmine: Convert tests of parser's ""hexEscapeSequence"" rule"
dmajda,2012-04-20 13:46:21,https://api.github.com/repos/pegjs/pegjs/git/commits/0bbca136a26e9abbfbc109242a74fa948c44b724,0bbca136a26e9abbfbc109242a74fa948c44b724,"Jasmine: Convert tests of parser's ""unicodeEscapeSequence"" rule"
dmajda,2012-04-20 13:30:34,https://api.github.com/repos/pegjs/pegjs/git/commits/a27dc5ae4a315ff21144cd275276dd23905b5a0c,a27dc5ae4a315ff21144cd275276dd23905b5a0c,"Jasmine: Convert tests of parser's ""eolEscapeSequence"" rule"
dmajda,2012-04-20 13:18:16,https://api.github.com/repos/pegjs/pegjs/git/commits/4f91286013e27a0e29730675171661367aecb7f0,4f91286013e27a0e29730675171661367aecb7f0,Jasmine: Convert non-tests of parser's character class rules
dmajda,2012-04-20 13:17:04,https://api.github.com/repos/pegjs/pegjs/git/commits/3bc61c4c50e2e2ccee6f6f5f739586ebb1eea7e6,3bc61c4c50e2e2ccee6f6f5f739586ebb1eea7e6,"Jasmine: Convert tests of parser's ""__"" rule"
dmajda,2012-04-20 13:13:19,https://api.github.com/repos/pegjs/pegjs/git/commits/fadaef84dd44f73a9fe070df308dc94f63e8720a,fadaef84dd44f73a9fe070df308dc94f63e8720a,"Jasmine: Convert tests of parser's ""comment"" rule"
dmajda,2012-04-20 13:10:57,https://api.github.com/repos/pegjs/pegjs/git/commits/b5ccaed491dc6ddfce26cddcfe7959ea3de7f7c7,b5ccaed491dc6ddfce26cddcfe7959ea3de7f7c7,"Jasmine: Convert tests of parser's ""singleLineComment"" rule"
dmajda,2012-04-20 13:07:33,https://api.github.com/repos/pegjs/pegjs/git/commits/dac3b0d8d94d905b9f48caa1eb1886ba74b5fa8d,dac3b0d8d94d905b9f48caa1eb1886ba74b5fa8d,"Jasmine: Convert tests of parser's ""multiLineComment"" rule"
dmajda,2012-04-20 12:29:34,https://api.github.com/repos/pegjs/pegjs/git/commits/328edf667ccbcbd109abf7c1e33c9d1e769d50c1,328edf667ccbcbd109abf7c1e33c9d1e769d50c1,"Jasmine: Convert tests of parser's ""eol"" rule"
dmajda,2012-04-20 12:27:20,https://api.github.com/repos/pegjs/pegjs/git/commits/b4cffee9d43a7e392db89842212cbe00dab00f9c,b4cffee9d43a7e392db89842212cbe00dab00f9c,"Jasmine: Convert tests of parser's ""eolChar"" rule"
dmajda,2012-04-20 11:12:17,https://api.github.com/repos/pegjs/pegjs/git/commits/a46b9c197be63c8b3f8ec6fd78a958407927084e,a46b9c197be63c8b3f8ec6fd78a958407927084e,"Jasmine: Convert tests of parser's ""whitespace"" rule"
dmajda,2012-02-27 18:59:54,https://api.github.com/repos/pegjs/pegjs/git/commits/c27b96051a850e7e14de12cc8696e5837fa9d885,c27b96051a850e7e14de12cc8696e5837fa9d885,"Jasmine: Initial infrastructure

This is the first of many commits that gradually convert PEG.js's test
suite from QUnit to Jasmine, cleaning it up on the way.

Main reason for the change is that Jasmine allows nested contexts,
allowing to structure the tests in a better way than QUnit. Moreover,
the tests needed to be cleaned up a bit."
dmajda,2012-04-20 10:29:24,https://api.github.com/repos/pegjs/pegjs/git/commits/4f86fca3d70f820d07ba43b29f06ac75839acbaa,4f86fca3d70f820d07ba43b29f06ac75839acbaa,"Make the code emitter a compiler pass

This gives the compiler a more regular structure."
dmajda,2012-04-20 10:19:49,https://api.github.com/repos/pegjs/pegjs/git/commits/44852fa6b4c97dada743629e45efae9b34de977f,44852fa6b4c97dada743629e45efae9b34de977f,Pass |options| to compiler passes
dmajda,2012-04-19 12:23:21,https://api.github.com/repos/pegjs/pegjs/git/commits/53f70b9eb98998f8104723f60b04b038800fdd8b,53f70b9eb98998f8104723f60b04b038800fdd8b,Move compiler passes and their tests into a subdirectory
dmajda,2012-04-19 10:59:40,https://api.github.com/repos/pegjs/pegjs/git/commits/f046e0a838fe85b0e1667fe51e2ff6bebcf9473e,f046e0a838fe85b0e1667fe51e2ff6bebcf9473e,Move compiler-related source files and tests into a subdirectory
dmajda,2012-04-18 09:15:16,https://api.github.com/repos/pegjs/pegjs/git/commits/5bd2ca1cb56d6ffbaec6b103508b4b535a6ee2dc,5bd2ca1cb56d6ffbaec6b103508b4b535a6ee2dc,README.md: Fix |PEG.buildParser| option name
dmajda,2012-04-18 08:31:18,https://api.github.com/repos/pegjs/pegjs/git/commits/6091e4426bb8c35b738302b6ce4d2627aec6d04f,6091e4426bb8c35b738302b6ce4d2627aec6d04f,Update version to 0.7.0
dmajda,2012-04-17 13:26:36,https://api.github.com/repos/pegjs/pegjs/git/commits/4e04acafa35cd5e12874ef41c5b57f75be5f4a92,4e04acafa35cd5e12874ef41c5b57f75be5f4a92,Update CHANGELOG
dmajda,2012-04-17 10:00:58,https://api.github.com/repos/pegjs/pegjs/git/commits/ef06621a2b24f3a786ed706746b6720ede8eed22,ef06621a2b24f3a786ed706746b6720ede8eed22,Remove extra comma in compiler tests
dmajda,2012-04-17 09:59:58,https://api.github.com/repos/pegjs/pegjs/git/commits/7faf40dc444b2aa7083f8a3a9ce5c0525a0ca631,7faf40dc444b2aa7083f8a3a9ce5c0525a0ca631,Do not use results cache in the PEG.js grammar parser
dmajda,2012-04-17 09:55:01,https://api.github.com/repos/pegjs/pegjs/git/commits/11f3dc97448e0e19c0fc4f01867c72e1735b2030,11f3dc97448e0e19c0fc4f01867c72e1735b2030,README.md: Document options and variables visible in actions/predicates
dmajda,2012-04-17 09:03:49,https://api.github.com/repos/pegjs/pegjs/git/commits/b7e41b0985cc6ef900ff3b1effde3b7f6029cf50,b7e41b0985cc6ef900ff3b1effde3b7f6029cf50,README.md: Various tweaks
dmajda,2012-04-16 16:47:23,https://api.github.com/repos/pegjs/pegjs/git/commits/6f78df19d4f431092a0c83e60b0323aad4c7572b,6f78df19d4f431092a0c83e60b0323aad4c7572b,"Make benchmark suite support the |cache| option

Both the browser and the command-line version of the benchmark suite
runner now allow users to specify a value of the |cache| option."
dmajda,2012-04-16 16:35:35,https://api.github.com/repos/pegjs/pegjs/git/commits/8f71c07cecdc29129cf6990fbeb18aad827626b4,8f71c07cecdc29129cf6990fbeb18aad827626b4,"Implement the ""--cache"" command-line option"
dmajda,2012-04-16 16:27:31,https://api.github.com/repos/pegjs/pegjs/git/commits/5b3321d302315fa47c3147492a8bd619b2174089,5b3321d302315fa47c3147492a8bd619b2174089,"Implement |cache| option for |PEG.buildParser|

This option enables/disables the results cache in generated parsers.
Until now, it was always enabled, but after this commit it needs to be
enabled explicitly (i.e. the |cache| option default value is |false|).
The reason is that parsing without it is *much* faster according to the
benchmark.

Note that disabling the cache breaks the linear parsing time guarantee,
meaning that with some grammars you can get exponential parsing time
with respect to the input length. This, together with the possibility of
improving the cache performance in the future, is the reason to keep it
as an option.

Speed impact
------------
Before:     214.08 kB/s
After:      827.52 kB/s
Difference: 286.54%

Size impact
-----------
Before:     1045396 b
After:      949783 b
Difference: -9.15%

(Measured by /tools/impact with Node.js v0.6.6 on x86_64 GNU/Linux.)"
dmajda,2012-04-16 14:24:48,https://api.github.com/repos/pegjs/pegjs/git/commits/1ee6731b51bda063900fe62f8c66d38e6f4b7846,1ee6731b51bda063900fe62f8c66d38e6f4b7846,"Supply default option value only if the option is not specified

The ""|| trick"" is too brittle in this case -- it wouldn't work e.g. for
options with default value |true| and passed value |false|, enforcing
inconsistent default values handling."
dmajda,2012-04-16 13:50:45,https://api.github.com/repos/pegjs/pegjs/git/commits/2aaa038499c3ddcb5ccce265d6f2fb8c1126a2e6,2aaa038499c3ddcb5ccce265d6f2fb8c1126a2e6,Add a hack to skip last comma in |parseFunctions|
dmajda,2012-04-16 13:45:50,https://api.github.com/repos/pegjs/pegjs/git/commits/f3970bfa5c7233243354c3e58deb6b009d538268,f3970bfa5c7233243354c3e58deb6b009d538268,Extend QUnit a bit more cleanly
dmajda,2012-04-16 13:35:54,https://api.github.com/repos/pegjs/pegjs/git/commits/abf33d3feb7a0d488b13b895b7d6b7827bc29b45,abf33d3feb7a0d488b13b895b7d6b7827bc29b45,Add a note about semantic versioning to |PEG.VERSION| comment
dmajda,2012-04-16 13:34:30,https://api.github.com/repos/pegjs/pegjs/git/commits/7f2dc850e0e4ec9d17ca5efa472eb37db0ab035f,7f2dc850e0e4ec9d17ca5efa472eb37db0ab035f,"Change how the library is exported

This commit makes the library define the |PEG| global variable (for
browser export) and possibly assign it into |module.exports| (for
Node.js export) later. The |module.exports| assignment is done *outside*
the main library |function| statement.

The big idea behind this is to make copy & paste inclusion of the
library into another code easier -- one just needs to strip the last
three lines."
dmajda,2012-04-16 13:29:04,https://api.github.com/repos/pegjs/pegjs/git/commits/d35b21e9b24e3f60a158f75afba1156e699a14fb,d35b21e9b24e3f60a158f75afba1156e699a14fb,Simplify the |indent| function in /test/run
dmajda,2012-04-16 13:26:42,https://api.github.com/repos/pegjs/pegjs/git/commits/9d5990f80aada15bfaa80c3a49ce6da4bb1af398,9d5990f80aada15bfaa80c3a49ce6da4bb1af398,Update code formatting in /test/run to match conventions I use elsewhere
dmajda,2012-04-16 13:00:21,https://api.github.com/repos/pegjs/pegjs/git/commits/8b5e88674c31eb36c3e98b4e77db920a890e184c,8b5e88674c31eb36c3e98b4e77db920a890e184c,Update bundled jQuery to version 1.7.2
dmajda,2012-04-16 12:54:34,https://api.github.com/repos/pegjs/pegjs/git/commits/6d624a89bd5b43e67106ca48b18aa89c5efde390,6d624a89bd5b43e67106ca48b18aa89c5efde390,Update bundled QUnit to version 1.5.0
dmajda,2012-04-16 12:49:48,https://api.github.com/repos/pegjs/pegjs/git/commits/8d74248251b515975720787c2abce32b84c25281,8d74248251b515975720787c2abce32b84c25281,"Make ""Generated by ..."" comment match the copyright comment"
dmajda,2012-04-16 12:39:59,https://api.github.com/repos/pegjs/pegjs/git/commits/7e02e45831411cea50a1f084299adaaeb5a6f84c,7e02e45831411cea50a1f084299adaaeb5a6f84c,Improve copyright comment
dmajda,2012-04-16 12:36:51,https://api.github.com/repos/pegjs/pegjs/git/commits/d28324306cfe62e2464679ab2788d8ff8a9ca944,d28324306cfe62e2464679ab2788d8ff8a9ca944,LICENSE: Update copyright years
dmajda,2012-04-16 12:33:32,https://api.github.com/repos/pegjs/pegjs/git/commits/90d164445a373a7215864c94d493504b3b73fe2f,90d164445a373a7215864c94d493504b3b73fe2f,Update embedded Codie to version 1.1.0
dmajda,2012-03-25 16:08:22,https://api.github.com/repos/pegjs/pegjs/git/commits/0865e9e51a5d0203789e1cd6e867a6446a3dde82,0865e9e51a5d0203789e1cd6e867a6446a3dde82,"Make benchmark suite support |trackLineAndColumn| option

Both the browser and the command-line version of the benchmark suite
runner now allow users to specify a value of the |trackLineAndColumn|
option. In case of the command-line version this required a minor CLI
redesign."
dmajda,2012-03-25 15:03:47,https://api.github.com/repos/pegjs/pegjs/git/commits/58cc5b739d972ace6ca66ee1f122b6c095cdbd73,58cc5b739d972ace6ca66ee1f122b6c095cdbd73,"Implement ""--track-line-and-column"" command-line option"
dmajda,2012-03-25 11:31:28,https://api.github.com/repos/pegjs/pegjs/git/commits/52d7ec22248e53d11044d1628fda329a7d8402cf,52d7ec22248e53d11044d1628fda329a7d8402cf,"Implement |trackLineAndColumn| option for |PEG.buildParser|

This option makes the generated parser track line and column during
parsing. Tracked line and column are made available inside actions and
predicates as |line| and |column| variables.

Note that in actions these variables denote start position of the
action's expression while in predicates they denote the current
position. The slightly different behavior is motivated by expected
usage."
dmajda,2012-02-27 19:24:07,https://api.github.com/repos/pegjs/pegjs/git/commits/9615eb4bb64a00392acac4550a80a32597604ea1,9615eb4bb64a00392acac4550a80a32597604ea1,"Allow passing options to |PEG.buildParser|

These get passed down to the emitter templates."
dmajda,2012-03-05 19:43:43,https://api.github.com/repos/pegjs/pegjs/git/commits/f2f88b87ea04931105799243378116b777bfa5e7,f2f88b87ea04931105799243378116b777bfa5e7,"Make current parse position visible in actions and predicates

The speed/size impact is insignificant.

Speed impact
------------
Before:     214.11 kB/s
After:      214.87 kB/s
Difference: 0.35%

Size impact
-----------
Before:     1042691 b
After:      1046731 b
Difference: 0.38%

(Measured by /tools/impact with Node.js v0.6.6 on x86_64 GNU/Linux.)"
dmajda,2012-03-06 07:46:28,https://api.github.com/repos/pegjs/pegjs/git/commits/f47da5c6828ac072646b89c99e6398006a434628,f47da5c6828ac072646b89c99e6398006a434628,Fix a bug in param name fixup code for sequences
dmajda,2012-03-04 16:29:32,https://api.github.com/repos/pegjs/pegjs/git/commits/4d5b1d58aa9b2d8abbf6ed88a1387e5b765ebccc,4d5b1d58aa9b2d8abbf6ed88a1387e5b765ebccc,"AST: Store rules in an array instead of an object

This simplifies the code a bit and makes the AST more regular (each node
type has a fixed set of properties). The latter may get useful later
when generalizing visitors."
dmajda,2012-03-04 10:46:28,https://api.github.com/repos/pegjs/pegjs/git/commits/bc5abfef5ca01a64773eebd4b452a2e09eb2d876,bc5abfef5ca01a64773eebd4b452a2e09eb2d876,"Replace Jakefile with Makefile

Doing scripting tasks in JavaScript is painful."
dmajda,2012-03-04 10:32:18,https://api.github.com/repos/pegjs/pegjs/git/commits/ed45a1808efd90bcf52332b36ff231d44f17269d,ed45a1808efd90bcf52332b36ff231d44f17269d,"Fix |quote| visibility in generated parsers

|quote| is used outside of the |parse| function so it must be defined in
more outer scope.

Fixes a problem (introduced in e9d8dc8ebaeda081a6617bb261733bf1a18f2152)
where construction of some error messages could throw an error."
dmajda,2012-02-27 19:18:21,https://api.github.com/repos/pegjs/pegjs/git/commits/a2af1fe61227e8801ae02eb71ae53e938776653f,a2af1fe61227e8801ae02eb71ae53e938776653f,"Semantic predicates now have access to preceding labels

Part of a fix for GH-69."
dmajda,2012-02-27 19:18:03,https://api.github.com/repos/pegjs/pegjs/git/commits/4cf50bcf9f4fa62833d07e85b1948c7e7a056e49,4cf50bcf9f4fa62833d07e85b1948c7e7a056e49,"Move param computations from the emitter into a separate pass

This has two main benefits:

  1. The knowledge about scoping params in at one designated place,
     making all future adjustments in this area easier.

  2. Action-related code does not handle sequences specially anymore.
     Such knowledge/behavior doesn't belong there."
dmajda,2012-02-27 19:10:02,https://api.github.com/repos/pegjs/pegjs/git/commits/efc38eef9bd97e60fe6a63465930b421525a4ea6,efc38eef9bd97e60fe6a63465930b421525a4ea6,"Consolidate all variable name computations into one compiler pass

Before this change, knowledge about variable names was spread between
the |computeStackDepths| pass and the code emitter code. For example,
the fact that the |&...| expression needs one variable to store a
position was represented in both places.

This changes consolidates that knowledge and introduces a new
|computeVarNames| pass. This pass replaces old |computeStackDepths|
pass, does all computations realted to variable names and stores the
results in the AST. Note that some knowledge about variables
(inevitably) remained in emitter code templates.

Beside DRYing things up, this change simplifies the emitter
significantly. By storing variable names in the AST it also allows
introduction of a pass that will identify parameters passed to actions
using proper symbol tables. Right now, this is done in a hackish way
directly in the emitter, which won't work well with changes planned in
GH-69."
dmajda,2012-02-13 07:40:12,https://api.github.com/repos/pegjs/pegjs/git/commits/9d96e1e303566cc95f71efacdd210c0dd42a1834,9d96e1e303566cc95f71efacdd210c0dd42a1834,README.md: Update compatibility information
dmajda,2012-02-13 07:13:01,https://api.github.com/repos/pegjs/pegjs/git/commits/d002cd6ff6857c3eb48035b0c33f677dcd8df28b,d002cd6ff6857c3eb48035b0c33f677dcd8df28b,"Remove comment about IE in |quoteForRegexpClass|

We escape null for general compatibility (see comment at the top of the
function), not only because of IE."
dmajda,2012-02-12 18:16:42,https://api.github.com/repos/pegjs/pegjs/git/commits/a0898388fbf5a0e12873830e4714e72b18f14e0a,a0898388fbf5a0e12873830e4714e72b18f14e0a,"/bin/pegjs: Avoid calling |process.openStdin|

While |process.openStdin| is not officially deprecated, it's no longer
documented and just using |process.stdin| and resuming it seems to be
the official way."
dmajda,2012-02-12 18:10:30,https://api.github.com/repos/pegjs/pegjs/git/commits/de256105eb62237f0ec1c2d104a3ab12c04b16cf,de256105eb62237f0ec1c2d104a3ab12c04b16cf,"/bin/pegjs: Don't close standard output

Avoids ""Error: process.stdout cannot be closed"" error when invoked
without file arguments."
dmajda,2012-02-12 14:35:26,https://api.github.com/repos/pegjs/pegjs/git/commits/70e4166bb2054bfd3dc9681b3ff8cda2bf0ae080,70e4166bb2054bfd3dc9681b3ff8cda2bf0ae080,Fix typo in a comment in JavaScript example grammar
dmajda,2012-02-12 11:20:15,https://api.github.com/repos/pegjs/pegjs/git/commits/46b2eaf3e3f8b77659e951e9cdb19a521aeb79b9,46b2eaf3e3f8b77659e951e9cdb19a521aeb79b9,"Add |expected| and |found| properties to exceptions thrown by parsers

Based on a patch by Marcin Stefaniuk (marcin@stefaniuk.info)."
dmajda,2012-02-11 14:44:24,https://api.github.com/repos/pegjs/pegjs/git/commits/e9d8dc8ebaeda081a6617bb261733bf1a18f2152,e9d8dc8ebaeda081a6617bb261733bf1a18f2152,More responsibility for building an error message into |SyntaxError|
dmajda,2012-02-11 11:42:26,https://api.github.com/repos/pegjs/pegjs/git/commits/21c6d9ccd387517ebc12e0cd8a52945a0e0e2800,21c6d9ccd387517ebc12e0cd8a52945a0e0e2800,"Add |offset| property to exceptions thrown by parsers

Based on a patch by Marcin Stefaniuk (marcin@stefaniuk.info)."
dmajda,2012-02-04 21:22:16,https://api.github.com/repos/pegjs/pegjs/git/commits/8ae3eea7c4e8b011abafc06f5b07a0a71cd52bc9,8ae3eea7c4e8b011abafc06f5b07a0a71cd52bc9,"Fix typo in JavaScript example grammar

Fixes GH-62."
dmajda,2012-01-11 19:26:47,https://api.github.com/repos/pegjs/pegjs/git/commits/433c278e5de1723669531f307dab79feefd02ca6,433c278e5de1723669531f307dab79feefd02ca6,"Merge pull request #59 from jasondavies/typo

Fix typo in comment."
dmajda,2012-01-09 19:10:05,https://api.github.com/repos/pegjs/pegjs/git/commits/791c495aec5bbe1b12423660694fa3de4e8c270a,791c495aec5bbe1b12423660694fa3de4e8c270a,Update embedded Codie to version 1.0.1
dmajda,2012-01-07 11:01:11,https://api.github.com/repos/pegjs/pegjs/git/commits/fb5028eb90777dc526bb83c0d64b23549ec3909e,fb5028eb90777dc526bb83c0d64b23549ec3909e,"Use |util| module instead of |sys|

|sys| emits a warning in Node.js 0.6.x."
dmajda,2012-01-07 10:55:26,https://api.github.com/repos/pegjs/pegjs/git/commits/fa1523b6512fd66eff56d8364690cc7809f8b77d,fa1523b6512fd66eff56d8364690cc7809f8b77d,"Update version of Node.js and development dependencies in package.json

The new versions are the ones I test with."
jasondavies,2011-10-09 15:38:26,https://api.github.com/repos/pegjs/pegjs/git/commits/d386d3a35162913581fc46c6d63f357e4d8aad6f,d386d3a35162913581fc46c6d63f357e4d8aad6f,Fix typo in comment.
dmajda,2011-10-03 13:12:50,https://api.github.com/repos/pegjs/pegjs/git/commits/47969a2f615fe639be9928182bfdb3003f135477,47969a2f615fe639be9928182bfdb3003f135477,Replace |for| loop iterating over sequence elements with |each|
dmajda,2011-10-03 12:14:14,https://api.github.com/repos/pegjs/pegjs/git/commits/a19ea83ffa4e79854c5a5ab11fdc540104b5791b,a19ea83ffa4e79854c5a5ab11fdc540104b5791b,Replace |for| loop iterating over compiler passes with |each|
dmajda,2011-10-03 12:06:49,https://api.github.com/repos/pegjs/pegjs/git/commits/cd5490dee4d507e0a95d87c04c1550902709a19c,cd5490dee4d507e0a95d87c04c1550902709a19c,Make pass list customizable via |PEG.compiler.appliedPassNames| property
dmajda,2011-10-03 12:01:25,https://api.github.com/repos/pegjs/pegjs/git/commits/8a0276ffb7644dce619eaea1db33a3612cb21220,8a0276ffb7644dce619eaea1db33a3612cb21220,"Unify checks and passes

There is no real reason to have them separated."
dmajda,2011-10-03 11:50:22,https://api.github.com/repos/pegjs/pegjs/git/commits/6cd5bdc5e60142c7fb86f7fc1c1c628202f0f721,6cd5bdc5e60142c7fb86f7fc1c1c628202f0f721,Passes now do not return anything (they always modify the AST in-place)
dmajda,2011-10-03 11:42:55,https://api.github.com/repos/pegjs/pegjs/git/commits/3983f46d5d97ee34be2df5bc5116c597d5ad0d01,3983f46d5d97ee34be2df5bc5116c597d5ad0d01,"Rename |reportMissingReferencedRules| check to |reportMissingRules|

The new name is shorter, there is no real loss of meaning."
dmajda,2011-10-03 11:34:25,https://api.github.com/repos/pegjs/pegjs/git/commits/64d26e5db20dfc506d857a1b80ed92f60f46832b,64d26e5db20dfc506d857a1b80ed92f60f46832b,Make names of compiler checks and passes verbs
dmajda,2011-10-01 17:50:52,https://api.github.com/repos/pegjs/pegjs/git/commits/2a82d863e5d82a0e3451c358ff77335381902c44,2a82d863e5d82a0e3451c358ff77335381902c44,Regenerate src/parser.js (forgot to do it in previous commit)
dmajda,2011-10-01 16:46:57,https://api.github.com/repos/pegjs/pegjs/git/commits/8acea015251917a46eec84185225929bfc888ca8,8acea015251917a46eec84185225929bfc888ca8,"Fix reported error position when part of the input is not consumed

Closes GH-48."
dmajda,2011-10-01 14:59:05,https://api.github.com/repos/pegjs/pegjs/git/commits/c90e7f369b2072afb8361d80a10e2ddeb5e780da,c90e7f369b2072afb8361d80a10e2ddeb5e780da,"Fix regexp for detecting command-line options in /bin/pegjs

Closes GH-51."
dmajda,2011-10-01 14:50:31,https://api.github.com/repos/pegjs/pegjs/git/commits/5013f79e8d78d11e992d522e71c3b9949bba8257,5013f79e8d78d11e992d522e71c3b9949bba8257,"Make ""jake clean"" and ""jake distclean"" check deleted directory existence

Closes GH-52."
dmajda,2011-09-30 17:47:05,https://api.github.com/repos/pegjs/pegjs/git/commits/211a1116e495ed8252ebcccb2bd243e6fb79cdee,211a1116e495ed8252ebcccb2bd243e6fb79cdee,"Fix stack depth computations for empty sequences

Part of a fix for GH-53."
dmajda,2011-09-30 15:57:48,https://api.github.com/repos/pegjs/pegjs/git/commits/afdcb6fc4f98eafc8340c07187ba81998c28dd7b,afdcb6fc4f98eafc8340c07187ba81998c28dd7b,"Fix |posStackDepth| computation for rules

Rules by themselves do not need any variable for storing position.

Part of a fix for GH-53."
dmajda,2011-09-30 15:19:14,https://api.github.com/repos/pegjs/pegjs/git/commits/756b6fc4737fd41a3476797f8b66089ab23b56f5,756b6fc4737fd41a3476797f8b66089ab23b56f5,"Fix |resultStackDepth| computation for sequences

The |1 + ...| was wrong -- sequence does not need its own variable since
it reuses the one used by the first item.

Part of a fix for GH-53."
dmajda,2011-09-30 14:49:50,https://api.github.com/repos/pegjs/pegjs/git/commits/9c3da347cceff1de3385cd3ec0699e29f60be68d,9c3da347cceff1de3385cd3ec0699e29f60be68d,"Fix string parsing tests

The tests were wrong because the |string| rule is not used to parse
literals but rule names."
dmajda,2011-09-30 14:44:44,https://api.github.com/repos/pegjs/pegjs/git/commits/3421bdb813e51dc86e47a8432ff2d20cb9d34b60,3421bdb813e51dc86e47a8432ff2d20cb9d34b60,Test trailing characters for strings and literals at correct places
dmajda,2011-09-30 14:37:47,https://api.github.com/repos/pegjs/pegjs/git/commits/c639c1fc83b33b40db84224e041d89ccddaac790,c639c1fc83b33b40db84224e041d89ccddaac790,"PEG.js grammar: Replace two instances of |string / """"| by |string?|"
dmajda,2011-09-30 09:45:36,https://api.github.com/repos/pegjs/pegjs/git/commits/c04af99df80c1e513c121e8de4f3b2c494b583d5,c04af99df80c1e513c121e8de4f3b2c494b583d5,Implament case-insensitive class matching
dmajda,2011-09-30 09:17:47,https://api.github.com/repos/pegjs/pegjs/git/commits/b540b2d4603221674bb05068ce3c352d2cddbf74,b540b2d4603221674bb05068ce3c352d2cddbf74,Implement case-insensitive literal matching
dmajda,2011-09-30 08:53:12,https://api.github.com/repos/pegjs/pegjs/git/commits/88c50a3e3393f67e743b2a0e0c28e33d79a132db,88c50a3e3393f67e743b2a0e0c28e33d79a132db,"Add tests for zero- and one-char literals

We optimize these cases in the emitter so we should better test them."
dmajda,2011-09-30 08:17:33,https://api.github.com/repos/pegjs/pegjs/git/commits/1c11e4aaa3856d386700622ba7b68f51dee8dbc0,1c11e4aaa3856d386700622ba7b68f51dee8dbc0,"Split |literal| rule in the PEG.js grammar to |literal| and |string|

This is just a formality now but it will make sense later when literals
(but not strings) will allow ""i"" flag for case-insensitive matching."
dmajda,2011-09-29 15:02:02,https://api.github.com/repos/pegjs/pegjs/git/commits/950cc80738ff1e217f3f14b4b2b1e7eb1e2c29df,950cc80738ff1e217f3f14b4b2b1e7eb1e2c29df,Few small README.md fixes
dmajda,2011-09-29 11:47:50,https://api.github.com/repos/pegjs/pegjs/git/commits/da12c2f5d4ca1af767828dba34a894a7cb00a146,da12c2f5d4ca1af767828dba34a894a7cb00a146,Compile Codie templates only once
dmajda,2011-09-27 14:36:58,https://api.github.com/repos/pegjs/pegjs/git/commits/a5af9611a201bb8f70e2102ae501d465e35dde7d,a5af9611a201bb8f70e2102ae501d465e35dde7d,Introduce |context.delta| function to make creating contexts more DRY
dmajda,2011-09-24 15:06:52,https://api.github.com/repos/pegjs/pegjs/git/commits/be3b87ec717007aafdb0dd4a3a2ccd261037f273,be3b87ec717007aafdb0dd4a3a2ccd261037f273,"Refactor ""grammar"" emitter function a bit"
dmajda,2011-09-24 13:24:04,https://api.github.com/repos/pegjs/pegjs/git/commits/2b09a7116d7649e8ddc164505dbc091a88a94a84,2b09a7116d7649e8ddc164505dbc091a88a94a84,"Refactor ""rule"" emitter function a bit"
dmajda,2011-09-24 12:56:45,https://api.github.com/repos/pegjs/pegjs/git/commits/131b6dd01fcf03156e6c2a29f1f5dfe1add89258,131b6dd01fcf03156e6c2a29f1f5dfe1add89258,"Refactor ""sequence"" emitter function a bit"
dmajda,2011-09-23 15:56:48,https://api.github.com/repos/pegjs/pegjs/git/commits/f29ff236b8faabbccb58e2cee8a598b6e8defcea,f29ff236b8faabbccb58e2cee8a598b6e8defcea,"Refactor ""simple_and"" emitter function a bit"
dmajda,2011-09-23 15:52:43,https://api.github.com/repos/pegjs/pegjs/git/commits/506d8107a13daeec78c20caada7e755f32782e7f,506d8107a13daeec78c20caada7e755f32782e7f,"Refactor ""simple_not"" emitter function a bit"
dmajda,2011-09-23 15:49:09,https://api.github.com/repos/pegjs/pegjs/git/commits/13ae52b2bfe325d5ebbdf9804020ac5d63132397,13ae52b2bfe325d5ebbdf9804020ac5d63132397,"Refactor ""semantic_and"" emitter function a bit"
dmajda,2011-09-23 15:48:08,https://api.github.com/repos/pegjs/pegjs/git/commits/9111020ca28d8c9a10776ae86f6db67588cc0747,9111020ca28d8c9a10776ae86f6db67588cc0747,"Refactor ""semantic_not"" emitter function a bit"
dmajda,2011-09-23 15:45:05,https://api.github.com/repos/pegjs/pegjs/git/commits/cc3bd4f310d1b10f8fb827a0020d21b511c69e70,cc3bd4f310d1b10f8fb827a0020d21b511c69e70,"Refactor ""zero_or_more"" emitter function a bit"
dmajda,2011-09-23 15:33:58,https://api.github.com/repos/pegjs/pegjs/git/commits/85c1b010b61acefc084794082a1ec3a03b0696a7,85c1b010b61acefc084794082a1ec3a03b0696a7,"Refactor ""one_or_more"" emitter function a bit"
dmajda,2011-09-23 12:49:51,https://api.github.com/repos/pegjs/pegjs/git/commits/b5ca96dd4809436f6174468163ee5e82782615a5,b5ca96dd4809436f6174468163ee5e82782615a5,"Refactor ""action"" emitter function a bit"
dmajda,2011-09-23 12:40:37,https://api.github.com/repos/pegjs/pegjs/git/commits/50a0371e2d5d36e3ad33ac98b48d5755cd3e7fe7,50a0371e2d5d36e3ad33ac98b48d5755cd3e7fe7,"Refactor ""rule_ref"" emitter function a bit"
dmajda,2011-09-23 12:21:27,https://api.github.com/repos/pegjs/pegjs/git/commits/eaba6b8a9dd5ec4ba398e52ce62650f06b8185b6,eaba6b8a9dd5ec4ba398e52ce62650f06b8185b6,"Refactor ""literal"" emitter function a bit"
dmajda,2011-09-23 12:13:48,https://api.github.com/repos/pegjs/pegjs/git/commits/2120c908c75f57c437b7cbdf7c579da6f916b2e0,2120c908c75f57c437b7cbdf7c579da6f916b2e0,"Refactor ""class"" emitter function a bit"
dmajda,2011-09-23 11:37:07,https://api.github.com/repos/pegjs/pegjs/git/commits/0748fee1d32894fc2a56b36a86eb9aea870ae05b,0748fee1d32894fc2a56b36a86eb9aea870ae05b,"Use Codie for code templates

This will allow moving some code into the templates later."
dmajda,2011-09-21 17:36:46,https://api.github.com/repos/pegjs/pegjs/git/commits/38c25efde041c737246ed9282d6a6546fd749553,38c25efde041c737246ed9282d6a6546fd749553,"Use single quotes for code in the emitter

Strings with code should use single quotes so that double quotes (which
I generally prefer) could be used in the code itself without escaping."
dmajda,2011-09-18 18:12:26,https://api.github.com/repos/pegjs/pegjs/git/commits/45c99f8f6b5a379ac304f6dd1c2ea891b4e3fdc6,45c99f8f6b5a379ac304f6dd1c2ea891b4e3fdc6,"Generate more efficient code for empty literals

Original patch by Wolfgang Kluge:

  https://github.com/WolfgangKluge/pegjs/commit/797173f676805dad80ff96ea733f0d74f93d6664"
dmajda,2011-09-18 18:06:52,https://api.github.com/repos/pegjs/pegjs/git/commits/4de3cc17165d6be8d9727dc84840b749ca6a3bca,4de3cc17165d6be8d9727dc84840b749ca6a3bca,"Fix comment typos

Original patch by Wolfgang Kluge:

  https://github.com/WolfgangKluge/pegjs/commit/07e0cfcc023c87a54268191dd14b99c7b3d99f9d"
dmajda,2011-09-18 16:08:58,https://api.github.com/repos/pegjs/pegjs/git/commits/eceda8b5e86e1993a331ecf0a363e90710571cab,eceda8b5e86e1993a331ecf0a363e90710571cab,"Use correct disjunction operator in |computeErrorPosition|

Original patch by Wolfgang Kluge:

  https://github.com/WolfgangKluge/pegjs/commit/6b793b33dfa43468bf8f4a2bc215757bd5725bd4"
dmajda,2011-09-18 16:05:10,https://api.github.com/repos/pegjs/pegjs/git/commits/cb2415a4fd4192c1548b0196c8d5bd6f91515a0d,cb2415a4fd4192c1548b0196c8d5bd6f91515a0d,"Fix output printed during test failures

Expected value was being printed instead of the actual one.

Original patch by Wolfgang Kluge:

  https://github.com/WolfgangKluge/pegjs/commit/1e875d44791776dd1a8f925257d9e8fd0718d72e"
dmajda,2011-09-18 14:55:27,https://api.github.com/repos/pegjs/pegjs/git/commits/50be1081e075937bb54cc2b2d98bb7f14d02faa8,50be1081e075937bb54cc2b2d98bb7f14d02faa8,Sort JSHint options alphabetically
dmajda,2011-09-14 18:24:27,https://api.github.com/repos/pegjs/pegjs/git/commits/ce40a8e8157ea299c5898177456cf68367ea0bd1,ce40a8e8157ea299c5898177456cf68367ea0bd1,"benchmark/index.js: Use radix in |parseInt| call

Fixes the following JSHint error:

  ./benchmark/index.js: line 59, col 18, Missing radix parameter."
dmajda,2011-09-14 18:23:09,https://api.github.com/repos/pegjs/pegjs/git/commits/c8c518776886f3c5e8421ee44f2bda7a10872943,c8c518776886f3c5e8421ee44f2bda7a10872943,"Make ""jake hint"" check benchmark/index.js"
dmajda,2011-09-14 18:16:25,https://api.github.com/repos/pegjs/pegjs/git/commits/11a44948ab66f8756fa83b624f19f39d0eb1e34d,11a44948ab66f8756fa83b624f19f39d0eb1e34d,"Extract JavaScript and CSS from benchmark/index.html into separate files

JavaScript is extracted to make it JSHintable, CSS is just for symmetry."
dmajda,2011-09-14 11:07:08,https://api.github.com/repos/pegjs/pegjs/git/commits/8841c31d1bc473a0c08c8ef37a1da2abb0a87a9c,8841c31d1bc473a0c08c8ef37a1da2abb0a87a9c,"benchamrk/runner.js: Add ""()"" to constructor invocations

Fixes the following JSHint errors:

  ./benchmark/runner.js: line 73, col 28, Missing '()' invoking a constructor.
  ./benchmark/runner.js: line 75, col 33, Missing '()' invoking a constructor."
dmajda,2011-09-14 11:01:50,https://api.github.com/repos/pegjs/pegjs/git/commits/cad30139660d9f3bdb536f09948d3dce7dcffc55,cad30139660d9f3bdb536f09948d3dce7dcffc55,"benchmark/runner.js: Add missing semicolon

Fixes the following JSHint error:

  ./benchmark/runner.js: line 21, col 42, Missing semicolon."
dmajda,2011-09-14 11:00:04,https://api.github.com/repos/pegjs/pegjs/git/commits/17f62ae9e3f630cc5d9e4661c17eb6e90e8eb156,17f62ae9e3f630cc5d9e4661c17eb6e90e8eb156,"test/parser-test.js: Replace ""\0"" with ""\x00""

Fixes the following JSHint errors:

  ./test/parser-test.js: line 353, col 54, Bad escapement.
  ./test/parser-test.js: line 384, col 54, Bad escapement.
  ./test/parser-test.js: line 436, col 60, Bad escapement.
  ./test/parser-test.js: line 437, col 60, Bad escapement.
  ./test/parser-test.js: line 472, col 50, Bad escapement."
dmajda,2011-09-14 10:56:59,https://api.github.com/repos/pegjs/pegjs/git/commits/934bfa5eefeb7e6ef6ec1795c3b0cf3cf29f6e23,934bfa5eefeb7e6ef6ec1795c3b0cf3cf29f6e23,"test/parser-test.js: Fix missing/unnecessary semicolons

Fixes the following JSHint errors:

  ./test/parser-test.js: line 49, col 4, Missing semicolon.
  ./test/parser-test.js: line 58, col 4, Missing semicolon.
  ./test/parser-test.js: line 77, col 2, Unnecessary semicolon.
  ./test/parser-test.js: line 137, col 23, Missing semicolon."
dmajda,2011-09-14 10:54:08,https://api.github.com/repos/pegjs/pegjs/git/commits/d84f38c64ba4d345e6f7dd42dc46eb9bc63b83c4,d84f38c64ba4d345e6f7dd42dc46eb9bc63b83c4,"test/parser-test.js: Fix comments that look like nested to JSHint

Fixes the following JSHint errors:

  ./test/parser-test.js: line 521, col 29, Nested comment.
  ./test/parser-test.js: line 521, col 29, Stopping, unable to continue. (87% scanned)."
dmajda,2011-09-14 10:48:11,https://api.github.com/repos/pegjs/pegjs/git/commits/34d19a7dc621e048bbc276501f5834766bae45ba,34d19a7dc621e048bbc276501f5834766bae45ba,"test/passes-test.js: Add missing semicolons

Fixes the following JSHint errors:

  ./test/passes-test.js: line 12, col 6, Missing semicolon.
  ./test/passes-test.js: line 25, col 4, Missing semicolon.
  ./test/passes-test.js: line 229, col 41, Missing semicolon."
dmajda,2011-09-14 10:45:41,https://api.github.com/repos/pegjs/pegjs/git/commits/0fe57690240da0e8ae741a49c978c2c35d566403,0fe57690240da0e8ae741a49c978c2c35d566403,"test/checks-test.js: Avoid function definitions in loops

Fixes the following JSHint errors:

  ./test/checks-test.js: line 26, col 8, Don't make functions within a loop.
  ./test/checks-test.js: line 31, col 5, Don't make functions within a loop.
  ./test/checks-test.js: line 59, col 8, Don't make functions within a loop.
  ./test/checks-test.js: line 64, col 5, Don't make functions within a loop."
dmajda,2011-09-14 10:35:21,https://api.github.com/repos/pegjs/pegjs/git/commits/96192417d8f982b4caf882127c4a7b5e8f331beb,96192417d8f982b4caf882127c4a7b5e8f331beb,"test/compiler-test.js: Remove extra comma

Fixes the following JSHint error:

  ./test/compiler-test.js: line 498, col 49, Extra comma."
dmajda,2011-09-14 10:32:53,https://api.github.com/repos/pegjs/pegjs/git/commits/e93eaa0e0ec5778f03b3b49f05b94979bac72ff9,e93eaa0e0ec5778f03b3b49f05b94979bac72ff9,"test/compiler-test.js: Add missing semicolon

Fixes the following JSHint error:

  ./test/compiler-test.js: line 420, col 47, Missing semicolon."
dmajda,2011-09-14 10:13:00,https://api.github.com/repos/pegjs/pegjs/git/commits/cc4910d9b98d00d1beaea114ca9711b9eef70543,cc4910d9b98d00d1beaea114ca9711b9eef70543,"src/compiler.js: Fix variable redefinition

Fixes the following JSHint error:

  ./src/compiler.js: line 23, col 16, 'i' is already defined."
dmajda,2011-09-14 10:05:49,https://api.github.com/repos/pegjs/pegjs/git/commits/bc4821581ccd9eb11af6c20172744d9eb67c465e,bc4821581ccd9eb11af6c20172744d9eb67c465e,"src/emitter.js: Fix variable redefinitions

Fixes the following JSHint errors:

  ./src/emitter.js: line 95, col 21, 'name' is already defined.
  ./src/emitter.js: line 361, col 35, 'setReportFailuresCode' is already defined.
  ./src/emitter.js: line 362, col 39, 'restoreReportFailuresCode' is already defined.
  ./src/emitter.js: line 363, col 31, 'reportFailureCode' is already defined.
  ./src/emitter.js: line 393, col 38, 'setReportFailuresCode' used out of scope.Fixes the following JSHint errors:
  ./src/emitter.js: line 394, col 38, 'restoreReportFailuresCode' used out of scope.
  ./src/emitter.js: line 395, col 38, 'reportFailureCode' used out of scope.
  ./src/emitter.js: line 666, col 26, 'formalParams' is already defined.
  ./src/emitter.js: line 667, col 26, 'actualParams' is already defined.
  ./src/emitter.js: line 669, col 26, 'formalParams' is already defined.
  ./src/emitter.js: line 670, col 26, 'actualParams' is already defined.
  ./src/emitter.js: line 685, col 27, 'formalParams' used out of scope.
  ./src/emitter.js: line 686, col 27, 'actualParams' used out of scope.
  ./src/emitter.js: line 770, col 20, 'regexp' is already defined.
  ./src/emitter.js: line 784, col 22, 'regexp' used out of scope."
dmajda,2011-09-14 09:57:22,https://api.github.com/repos/pegjs/pegjs/git/commits/a52522c7c6168fd450f487bac195557bfd367507,a52522c7c6168fd450f487bac195557bfd367507,"src/emitter.js: Remove unnecessary semicolon

Fixes the following JSHint error:

  ./src/emitter.js: line 77, col 4, Unnecessary semicolon."
dmajda,2011-09-14 09:55:23,https://api.github.com/repos/pegjs/pegjs/git/commits/d1b83e4ab398e7708dffcd77e938311c53b08691,d1b83e4ab398e7708dffcd77e938311c53b08691,"src/emitter.js: Use strict comparison

Fixes the following JSHint error:

  ./src/emitter.js: line 44, col 48, Expected '!==' and instead saw '!='."
dmajda,2011-09-14 09:35:40,https://api.github.com/repos/pegjs/pegjs/git/commits/f893d47b986450546c84f2d7048053c6be85d4cf,f893d47b986450546c84f2d7048053c6be85d4cf,"src/utils.js: Make |quoteForRegexpClass| escape control characters

Fixes the following JSHint errors:

  ./src/parser.js: line 3614, col 16, Mixed spaces and tabs.
  ./src/parser.js: line 3614, col 20, Unsafe character."
dmajda,2011-09-14 09:13:55,https://api.github.com/repos/pegjs/pegjs/git/commits/ab49197ef1deac8ab7d197eb8ebfa41b1e1fa612,ab49197ef1deac8ab7d197eb8ebfa41b1e1fa612,"src/utils.js: Make |quote| escape control characters

Also change |quote| in src/emitter.js so both are in sync.

Fixes the following JSHint errors:

  ./src/parser.js: line 3613, col 27, Mixed spaces and tabs.
  ./src/parser.js: line 3613, col 31, Unsafe character.
  ./src/parser.js: line 3613, col 38, Control character in string: [     .
  ./src/parser.js: line 3613, col 40, Control character in string: ["
dmajda,2011-09-14 08:39:34,https://api.github.com/repos/pegjs/pegjs/git/commits/67afc788add5a2e3960885d703dcaf4619246a77,67afc788add5a2e3960885d703dcaf4619246a77,"src/parser.pegjs: Use radix in |parseInt| calls instead of ""0x"" prefix

Fixes the following JSHint errors:

  ./src/parser.js: line 2878, col 44, Missing radix parameter.
  ./src/parser.js: line 2949, col 44, Missing radix parameter."
dmajda,2011-09-14 08:34:33,https://api.github.com/repos/pegjs/pegjs/git/commits/13c47d6c4fa7e67533d917242e8f1eab96786b53,13c47d6c4fa7e67533d917242e8f1eab96786b53,"src/parser.pegjs: Replace ""\0"" with ""\x00""

Fixes the following JSHint error:

  ./src/parser.js: line 2820, col 44, Bad escapement."
dmajda,2011-09-13 20:03:26,https://api.github.com/repos/pegjs/pegjs/git/commits/b80cd9cb02b793febe69f4bf062f13018a9b15ea,b80cd9cb02b793febe69f4bf062f13018a9b15ea,"src/parser.pegjs: Use strict comparison

Fixes the following JSHint errors:

  ./src/parser.js: line 460, col 50, Expected '!==' and instead saw '!='.
  ./src/parser.js: line 486, col 42, Expected '!==' and instead saw '!='."
dmajda,2011-09-13 19:43:32,https://api.github.com/repos/pegjs/pegjs/git/commits/cc416199be5fb6469d5a523cfe078327421fdab6,cc416199be5fb6469d5a523cfe078327421fdab6,"src/parser.pegjs: Add missing semicolons

Fixes the following JSHint errors:

  ./src/parser.js: line 193, col 18, Missing semicolon.
  ./src/parser.js: line 407, col 20, Missing semicolon.
  ./src/parser.js: line 2493, col 18, Missing semicolon.
  ./src/parser.js: line 2759, col 40, Missing semicolon."
dmajda,2011-09-13 19:36:11,https://api.github.com/repos/pegjs/pegjs/git/commits/559db3a8127f4362aba226b3a2d5a5ba42a00734,559db3a8127f4362aba226b3a2d5a5ba42a00734,"src/emitter.js: Sync |escape| in generated parsers with utils.js

Fixes the following JSHint errors:

  ./src/parser.js: line 102, col 26, 'escapeChar' is already defined.
  ./src/parser.js: line 103, col 22, 'length' is already defined.
  ./src/parser.js: line 106, col 23, 'escapeChar' used out of scope.
  ./src/parser.js: line 106, col 86, 'length' used out of scope."
dmajda,2011-09-13 19:27:28,https://api.github.com/repos/pegjs/pegjs/git/commits/e0ef7e1abbe8b03ed3b7de4fb5ab9514df94e334,e0ef7e1abbe8b03ed3b7de4fb5ab9514df94e334,"src/passes.js: Add missing semicolon

Fixes the following JSHint error:

  ./src/passes.js: line 98, col 8, Missing semicolon."
dmajda,2011-09-13 19:22:43,https://api.github.com/repos/pegjs/pegjs/git/commits/2f671e0022bb6a8d4e78613f0e395113bc53dd47,2f671e0022bb6a8d4e78613f0e395113bc53dd47,"src/peg.js: Prevent redefinition of |undefined| differently

Fixes the following JSHint error:

  ./src/peg.js: line 5, col 5, Expected an identifier and instead saw 'undefined' (a reserved word)."
dmajda,2011-09-13 17:07:42,https://api.github.com/repos/pegjs/pegjs/git/commits/10cca7b69ddd8bc268681a2506c5c01b26b08311,10cca7b69ddd8bc268681a2506c5c01b26b08311,"src/utils.js: Fix unescaped ""]"" inside a regexp

Fixes the following JSHint error:

  ./src/utils.js: line 124, col 15, Unescaped ']'."
dmajda,2011-09-13 16:59:12,https://api.github.com/repos/pegjs/pegjs/git/commits/6e934fcccad134a0aa9d8e53eaffe8e66a9ea8e7,6e934fcccad134a0aa9d8e53eaffe8e66a9ea8e7,"src/utils.js: Fix missing/unnecessary semicolons

Fixes the following JSHint errors:

  ./src/utils.js: line 108, col 2, Unnecessary semicolon.
  ./src/utils.js: line 128, col 39, Missing semicolon.
  ./src/utils.js: line 140, col 4, Missing semicolon."
dmajda,2011-09-13 16:53:27,https://api.github.com/repos/pegjs/pegjs/git/commits/938f655ccfd31fa001bf3c509e14482f03d86e58,938f655ccfd31fa001bf3c509e14482f03d86e58,"src/utils.js: Fix variable redefinition in |escape|

Fixes the following JSHint errors:

  ./src/utils.js: line 76, col 20, 'escapeChar' is already defined.
  ./src/utils.js: line 77, col 16, 'length' is already defined.
  ./src/utils.js: line 80, col 17, 'escapeChar' used out of scope.
  ./src/utils.js: line 80, col 80, 'length' used out of scope."
dmajda,2011-09-13 13:29:18,https://api.github.com/repos/pegjs/pegjs/git/commits/c7f99019c253b92075a4ece2a89b680b6e2a4ef4,c7f99019c253b92075a4ece2a89b680b6e2a4ef4,"Add ""jake hint"" task that checks all javaScript files using JSHint

This currently outputs many issues. These will be fixed in subsequent
commits."
dmajda,2011-09-13 09:37:22,https://api.github.com/repos/pegjs/pegjs/git/commits/a92676edcebf7afaf223f9461f920f47c41ef26e,a92676edcebf7afaf223f9461f920f47c41ef26e,"Upgrade QUnit to the current master

Exact commit ID: 96e42601cadcba989f80bd4c294b7e0ee4ff1d29"
dmajda,2011-09-10 09:24:52,https://api.github.com/repos/pegjs/pegjs/git/commits/468597be27954df5338fa0f57a32bb150d6469cd,468597be27954df5338fa0f57a32bb150d6469cd,"Use |charCodeAt| instead of |charCode| when matching one-character literals

The speedup is marginal (if any) but let's have this anyway.

Speed impact
------------
Before:     212.49 kB/s
After:      213.01 kB/s
Difference: 0.24%

Size impact
-----------
Before:     1056976 b
After:      1058314 b
Difference: 0.12%

(Measured by /tools/impact with Node.js v0.4.8 on x86_64 GNU/Linux.)

Closes GH-50."
dmajda,2011-09-09 17:45:22,https://api.github.com/repos/pegjs/pegjs/git/commits/d3aff0c66a7d08184ca723a1e10ddc59c7e9f9b3,d3aff0c66a7d08184ca723a1e10ddc59c7e9f9b3,"Use |charAt| instead of |substr| when matching classes

Speed impact
------------
Before:     131.36 kB/s
After:      213.59 kB/s
Difference: 62.59%

Size impact
-----------
Before:     1056976 b
After:      1056976 b
Difference: 0.00%

(Measured by /tools/impact with Node.js v0.4.8 on x86_64 GNU/Linux.)

Closes GH-49."
dmajda,2011-09-04 09:45:38,https://api.github.com/repos/pegjs/pegjs/git/commits/0a1cea5f12d17d7e73ee541b5cbfcf92613f1759,0a1cea5f12d17d7e73ee541b5cbfcf92613f1759,"Use |charAt| instead of |substr| when matching one-character literals

Speed impact
------------
Before:     130.62 kB/s
After:      133.76 kB/s
Difference: 2.40%

Size impact
-----------
Before:     1058371 b
After:      1056976 b
Difference: -0.14%

(Measured by /tools/impact with Node.js v0.4.8 on x86_64 GNU/Linux.)"
dmajda,2011-09-03 17:42:41,https://api.github.com/repos/pegjs/pegjs/git/commits/2fc877e8757944121a68c8e2047fc0f6c7ba0483,2fc877e8757944121a68c8e2047fc0f6c7ba0483,"Match literals using |RegExp.prototype.test|

This is little faster than |String.prototype.match| in successful cases
since return value of |test| is just a boolean, not a special array as
with |match|.

Speed impact
------------
Before:     130.75 kB/s
After:      131.81 kB/s
Difference: 0.81%

Size impact
-----------
Before:     1059811 b
After:      1058371 b
Difference: -0.14%

(Measured by /tools/impact with Node.js v0.4.8 on x86_64 GNU/Linux.)"
dmajda,2011-09-03 16:51:30,https://api.github.com/repos/pegjs/pegjs/git/commits/2d4ee4fb235a550d28a8d35d0ed3bb303c59e55e,2d4ee4fb235a550d28a8d35d0ed3bb303c59e55e,"Make /tools/improve script measure speed 5 times and compute an average

I measured speed 5 times manually too before introducing the script. It
gives more stable results."
dmajda,2011-09-03 15:40:26,https://api.github.com/repos/pegjs/pegjs/git/commits/d0c96481bfdd43178554829e1dcd7916cc581b06,d0c96481bfdd43178554829e1dcd7916cc581b06,Add /tools/impact script to measure speed and size impact of commits
dmajda,2011-08-22 17:48:43,https://api.github.com/repos/pegjs/pegjs/git/commits/d123cf0eda1a459d9e6c662c45b40de639196207,d123cf0eda1a459d9e6c662c45b40de639196207,"Rewrite variable handling in generated parsers

Before this commit, variables for saving match results and parse
positions in generated parsers were not used efficiently. Each rule
basically used its own variable(s) for storing the data, with names
generated sequentially during code emitting. There was no reuse of
variables and a lot of unnecessary assignments between them.

It is easy to see that both match results and parse positions can
actually be stored on a stack that grows as the parser walks deeper in
the grammar tree and shrinks as it returns. Moreover, if one creates a
new stack for each rule the parser enters, its maximum depth can be
computed statically from the grammar. This allows us to implement the
stack not as an array, but as a set of numbered variables in each
function that handles parsing of a grammar rule, avoiding potentially
slow array accesses.

This commit implements the idea from the previous paragraph, using
separate stack for match results and for parse positions. As a result,
defined variables are reused and unnecessary copying avoided.

Speed implications
------------------

This change speeds up the benchmark suite execution by 2.14%.

Detailed results (benchmark suite totals as reported by ""jake benchmark""
on Node.js 0.4.8):

-----------------------------------
 Test #      Before        After
-----------------------------------
      1   129.01 kB/s   131.98 kB/s
      2   129.39 kB/s   130.13 kB/s
      3   128.63 kB/s   132.57 kB/s
      4   127.53 kB/s   129.82 kB/s
      5   127.98 kB/s   131.80 kB/s
-----------------------------------
Average   128.51 kB/s   131.26 kB/s
-----------------------------------

Size implications
-----------------

This change makes a sample of generated parsers 8.60% smaller:

Before:

  $ wc -c src/parser.js examples/*.js
   110867 src/parser.js
    13886 examples/arithmetics.js
   450125 examples/css.js
   632390 examples/javascript.js
    61365 examples/json.js
  1268633 total

After:

  $ wc -c src/parser.js examples/*.js
    99597 src/parser.js
    13077 examples/arithmetics.js
   399893 examples/css.js
   592044 examples/javascript.js
    54797 examples/json.js
  1159408 total"
dmajda,2011-08-21 14:14:20,https://api.github.com/repos/pegjs/pegjs/git/commits/bb83b2189a77db570ea6f846f513a2c6b8918fb1,bb83b2189a77db570ea6f846f513a2c6b8918fb1,"Change how disabling failure reporting works in generated parsers

Disabling failure reporting is driven by the |reportFailures| variable.
So far it was a boolean and its value was saved before changing and
restored afterwards (requiring additional variable in few places). This
patch changes it to an integer where value 0 means ""report errors"" and
anything > 0 means ""do not report errors"".  Instead of saving/restoring
we can now simple increment/decrement (avoiding the additional
variable and simplifying the code).

This change speeds up the benchmark suite execution by 0.66%.

Detailed results (benchmark suite totals as reported by ""jake benchmark""
on Node.js 0.4.8):

-----------------------------------
 Test #      Before        After
-----------------------------------
      1   129.26 kB/s   128.28 kB/s
      2   127.34 kB/s   127.53 kB/s
      3   126.72 kB/s   129.01 kB/s
      4   126.89 kB/s   128.05 kB/s
      5   126.46 kB/s   127.98 kB/s
-----------------------------------
Average   127.33 kB/s   128.17 kB/s
-----------------------------------"
dmajda,2011-08-21 13:55:49,https://api.github.com/repos/pegjs/pegjs/git/commits/c6243fd872f7ba1d241ad93ce9e3d670220233b7,c6243fd872f7ba1d241ad93ce9e3d670220233b7,"Replace ""MatchFailure"" by ""Failure"" in many identifiers

Shorter identifier without much loss of meaning."
dmajda,2011-08-21 13:04:56,https://api.github.com/repos/pegjs/pegjs/git/commits/8b2edd3c415c9107aefae725eedf7e3be3892f93,8b2edd3c415c9107aefae725eedf7e3be3892f93,Remove trailing comma in parser tests (IE compatibility)
dmajda,2011-08-20 16:28:36,https://api.github.com/repos/pegjs/pegjs/git/commits/8f3e2d9344b9967cb21027bbefa61e6bceac197f,8f3e2d9344b9967cb21027bbefa61e6bceac197f,Update version to 0.6.2
dmajda,2011-08-20 16:27:02,https://api.github.com/repos/pegjs/pegjs/git/commits/99f80e2541c6733806328693d1e6dc9023545500,99f80e2541c6733806328693d1e6dc9023545500,Update CHANGELOG
dmajda,2011-08-20 15:34:26,https://api.github.com/repos/pegjs/pegjs/git/commits/747cb8afaabd36569e8c12f2cef896e887095ebf,747cb8afaabd36569e8c12f2cef896e887095ebf,"Reset parser position when action returns |null|

The change does not change the benchmark suite execution speed
statistically significantly.

Detailed results (benchmark suite totals as reported by ""jake benchmark""
on Node.js 0.4.8):

-----------------------------------
 Test #      Before        After
-----------------------------------
      1   128.20 kB/s   128.03 kB/s
      2   130.36 kB/s   128.73 kB/s
      3   126.53 kB/s   129.72 kB/s
      4   127.46 kB/s   127.48 kB/s
      5   127.63 kB/s   128.53 kB/s
-----------------------------------
Average   128.04 kB/s   125.50 kB/s
-----------------------------------

Closes GH-25."
dmajda,2011-08-15 18:14:34,https://api.github.com/repos/pegjs/pegjs/git/commits/5cf66d824cfceac3b697dde5c4fed07bb23e2323,5cf66d824cfceac3b697dde5c4fed07bb23e2323,Fix typo in JavaScript example grammar
dmajda,2011-04-14 17:53:56,https://api.github.com/repos/pegjs/pegjs/git/commits/c91dc7e54b3e1145900a8d067218e3f29ef22c22,c91dc7e54b3e1145900a8d067218e3f29ef22c22,Update version to 0.6.1
dmajda,2011-04-14 17:52:39,https://api.github.com/repos/pegjs/pegjs/git/commits/96364ca62305e46ea5ab7f94d162034f1cba83e3,96364ca62305e46ea5ab7f94d162034f1cba83e3,Update CHANGELOG
dmajda,2011-04-14 17:50:32,https://api.github.com/repos/pegjs/pegjs/git/commits/cca707950d9ebe3370021f222781e8392afafbe6,cca707950d9ebe3370021f222781e8392afafbe6,"CHANGELOG: Fix version (""0.6"" -> ""0.6.0"")"
dmajda,2011-04-14 17:46:04,https://api.github.com/repos/pegjs/pegjs/git/commits/9e9062d827f2dbf8115e4e05d723ac0dc96f7c0d,9e9062d827f2dbf8115e4e05d723ac0dc96f7c0d,"Use --ascii option when generating a minified version

This makes the minified version actually work and not cause syntax
errors when loaded into a browser (this happened with Chrome and Firefox
at least)."
dmajda,2011-04-14 16:26:21,https://api.github.com/repos/pegjs/pegjs/git/commits/b399004a90387bce3f981433e6cf3acf407d4b48,b399004a90387bce3f981433e6cf3acf407d4b48,Update version to 0.6.0 + update release date in CHANGELOG
dmajda,2011-04-10 18:22:10,https://api.github.com/repos/pegjs/pegjs/git/commits/ffbe60094a0003e5a42f254ded7f4d053d566eef,ffbe60094a0003e5a42f254ded7f4d053d566eef,Rewrite README.md
dmajda,2011-04-10 18:27:10,https://api.github.com/repos/pegjs/pegjs/git/commits/1f89c7746fd8d04241524980f42a69ccdcc5d8fd,1f89c7746fd8d04241524980f42a69ccdcc5d8fd,"Quote keys in |parseFunctions| table in generated parsers

IE and Nitro choked when rule names that are JavaScript reserved words
(e.g. ""class"") were used."
dmajda,2011-04-02 18:13:28,https://api.github.com/repos/pegjs/pegjs/git/commits/596bf6eba994d4a977a75665423dce44f539f258,596bf6eba994d4a977a75665423dce44f539f258,Update CHANGELOG
dmajda,2011-04-02 15:07:35,https://api.github.com/repos/pegjs/pegjs/git/commits/bafb8655f754eae80f749dc2bcb1a10f296542b1,bafb8655f754eae80f749dc2bcb1a10f296542b1,"Clean up package.json

The engine's and dependencies' versions are the ones I've tested with.
Lower version will probably work too, but I don't want to spend more
time testing now so I'll play it safe."
dmajda,2011-04-02 14:06:33,https://api.github.com/repos/pegjs/pegjs/git/commits/8d8a5e322f27988b1c09c8367b20b487828b0fe8,8d8a5e322f27988b1c09c8367b20b487828b0fe8,"Fix @VERSION substitution in build-time preprocessing

The code didn't work properly when multiple @VERSION strings were
present in a preprocessed file."
dmajda,2011-04-02 14:04:31,https://api.github.com/repos/pegjs/pegjs/git/commits/66e54180523644aecc0ca131a8cd6babfbc68b48,66e54180523644aecc0ca131a8cd6babfbc68b48,"Build also minified version for the web in ""jake dist"""
dmajda,2011-04-02 11:49:11,https://api.github.com/repos/pegjs/pegjs/git/commits/81fbbd7897312642774992566ebe525f41d37557,81fbbd7897312642774992566ebe525f41d37557,"Make ""test"" and ""benchmark"" Jakefile tasks depend on ""build""

This ensures the version tested/benchmarked is always up-to-date."
dmajda,2011-04-02 11:45:07,https://api.github.com/repos/pegjs/pegjs/git/commits/d00ba29eaddf44328dae5cedb484a15204569e1c,d00ba29eaddf44328dae5cedb484a15204569e1c,"Add ""clean"" and ""distclean"" Jakefile tasks"
dmajda,2011-04-02 10:11:11,https://api.github.com/repos/pegjs/pegjs/git/commits/69044e9d0bc8852fc47d99f200498ebe751bc1dc,69044e9d0bc8852fc47d99f200498ebe751bc1dc,"Add ""dist"" Jakefile task that prepares the distribution files"
dmajda,2011-04-02 08:41:43,https://api.github.com/repos/pegjs/pegjs/git/commits/827a5ac31261ca34b43b38512037c3979baa696e,827a5ac31261ca34b43b38512037c3979baa696e,Add PEG.js version information and homepage header to peg.js
dmajda,2011-04-02 08:37:45,https://api.github.com/repos/pegjs/pegjs/git/commits/9917f799911c99802259fac0172cfd9e955b3d1d,9917f799911c99802259fac0172cfd9e955b3d1d,"Add PEG.js version to ""Generated by..."" line in generated parsers"
dmajda,2011-04-02 08:29:39,https://api.github.com/repos/pegjs/pegjs/git/commits/aca15d6f3627008bf1500f9ded9dfaa51623e400,aca15d6f3627008bf1500f9ded9dfaa51623e400,"Change Node.js pacakge name to from ""peg"" to ""pegjs""

The only place where we use the name without ""js"" is the library
filename (peg.js) and consequently the module name (PEG)."
dmajda,2011-04-02 08:27:48,https://api.github.com/repos/pegjs/pegjs/git/commits/db32ff2d0da2252178f49c24d2a30b6478bd8151,db32ff2d0da2252178f49c24d2a30b6478bd8151,Change version to 0.6.0pre
dmajda,2011-03-29 13:40:34,https://api.github.com/repos/pegjs/pegjs/git/commits/cc7ad9739f1fd8811dbc27798022f619e3a43530,cc7ad9739f1fd8811dbc27798022f619e3a43530,"Add ability to start parsing from any grammar rule

Calling the parsing function could have been done without the ugly table
using |eval|, but this seemed to degrade performance significantly (by
about 3 %). This is probably because engines optimize badly in presence
of |eval|.

The method used in this patch does not change the benchmark suite
execution speed statistically significantly on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   38.24 kB/s   38.28 kB/s
      2   38.35 kB/s   38.15 kB/s
      3   38.43 kB/s   38.40 kB/s
      4   38.53 kB/s   38.20 kB/s
      5   38.25 kB/s   38.39 kB/s
---------------------------------
Average   38.36 kB/s   38.39 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.151 Safari/534.1"
dmajda,2011-02-13 11:50:42,https://api.github.com/repos/pegjs/pegjs/git/commits/1e57bf778d8f2096c94baae88421785405da8534,1e57bf778d8f2096c94baae88421785405da8534,"Require Node.js 0.4 or higher

This is not strictly necessary now, but I won't test PEG.js with lower
versions, so I can't guarantee correct functionality."
dmajda,2011-02-13 11:43:12,https://api.github.com/repos/pegjs/pegjs/git/commits/dcf904c392c16cd02aea034ce936336a448b8fb2,dcf904c392c16cd02aea034ce936336a448b8fb2,"bin/pegjs: Default parser variable name is ""module.exports""

The previous default name was ""exports.parser"". This meant that to use
the generated parser in Node.js, you had to use code like this:

  var parser = require(""./my-cool-parser"").parser;
  parser.parse(...);

Now you can shorten it a bit:

  var parser = require(""./my-cool-parser"");
  parser.parse(...);

The shorter version makes sense since no other objects except the parser
are exported from the module."
dmajda,2011-02-13 11:37:15,https://api.github.com/repos/pegjs/pegjs/git/commits/13a3621e79dd367ddc620758f79273d5b0f49a9c,13a3621e79dd367ddc620758f79273d5b0f49a9c,Export the PEG library in simpler and more robust way
dmajda,2011-02-13 11:22:56,https://api.github.com/repos/pegjs/pegjs/git/commits/3e7d31559d732efa09a28e049ee1e8510ecd8926,3e7d31559d732efa09a28e049ee1e8510ecd8926,"Do not pass |global| into wrapping functions in tests, it's useless"
dmajda,2011-02-13 11:17:11,https://api.github.com/repos/pegjs/pegjs/git/commits/cfc60410416814a92052a2edf6f92f888c5165a0,cfc60410416814a92052a2edf6f92f888c5165a0,"Remove function wrapping and all |global| refrences from helpers.js

Originally I wanted to be very explicit with accesses to global object,
but since all this file is about extending it, the |global.| qualifier
seems more like noise."
dmajda,2011-02-13 10:44:40,https://api.github.com/repos/pegjs/pegjs/git/commits/f0eab4728a4c64b6fc0d2fe0e9abe87fae5e10f7,f0eab4728a4c64b6fc0d2fe0e9abe87fae5e10f7,"Use Unicode box-drawing characters for command-line benchmark table

Hopefully this works reasonably in all environments where Node.js runs."
dmajda,2011-02-13 10:31:47,https://api.github.com/repos/pegjs/pegjs/git/commits/17c1531068d736962eca42a643ff3bcda63fe32f,17c1531068d736962eca42a643ff3bcda63fe32f,"Make ""Avg. time"" column in the commmand-line benchmark table wider"
dmajda,2011-01-26 15:54:18,https://api.github.com/repos/pegjs/pegjs/git/commits/c3822835c920e8a51809dc47bfea20e7142dbfde,c3822835c920e8a51809dc47bfea20e7142dbfde,Update copyright year in LICENSE
dmajda,2011-01-26 15:29:37,https://api.github.com/repos/pegjs/pegjs/git/commits/a042f78558e1865ff71be3ff608761ff33e15e8c,a042f78558e1865ff71be3ff608761ff33e15e8c,Fix unit in command-line benchmark runner
dmajda,2011-01-26 15:28:52,https://api.github.com/repos/pegjs/pegjs/git/commits/4e81eb48af8df0881a10ff2d9caa4a694505fca4,4e81eb48af8df0881a10ff2d9caa4a694505fca4,"Add ""jake test"" and ""jake benchmark"""
dmajda,2011-01-26 15:08:03,https://api.github.com/repos/pegjs/pegjs/git/commits/918dcf6ed2ac7163d8450ca94d3c7946d85276aa,918dcf6ed2ac7163d8450ca94d3c7946d85276aa,Test and benchmark command-line runners can be run from any directory
dmajda,2011-01-26 13:10:00,https://api.github.com/repos/pegjs/pegjs/git/commits/aa2327191f04134a1dd1dccca90411f73b2694f1,aa2327191f04134a1dd1dccca90411f73b2694f1,"Escape 0xFF still with ""\x"", not ""\u"""
dmajda,2011-01-26 13:01:57,https://api.github.com/repos/pegjs/pegjs/git/commits/d5caaa7877b095add2ee292c22f26f7e6ad599d6,d5caaa7877b095add2ee292c22f26f7e6ad599d6,Nicer messages in command-line mode on read/write errors
dmajda,2011-01-26 12:52:39,https://api.github.com/repos/pegjs/pegjs/git/commits/957b96c1b5726703e895968d611b915e063abad8,957b96c1b5726703e895968d611b915e063abad8,Add check for missing parameter of the -e/--export-var option.
dmajda,2011-01-26 12:07:39,https://api.github.com/repos/pegjs/pegjs/git/commits/8f005c027b6d20b74eb3ce3bc39f1d71dde758eb,8f005c027b6d20b74eb3ce3bc39f1d71dde758eb,"Fix encoding in |fs.readFileSync| calls (""utf-8"" -> ""utf8"")"
dmajda,2011-01-26 12:05:40,https://api.github.com/repos/pegjs/pegjs/git/commits/d0c074e2f86986a2d61762fdb497b37afef98917,d0c074e2f86986a2d61762fdb497b37afef98917,Small style fixes
dmajda,2011-01-26 11:53:58,https://api.github.com/repos/pegjs/pegjs/git/commits/8e63ad3b6c400137a630694e05b375b78b6cfb74,8e63ad3b6c400137a630694e05b375b78b6cfb74,Add command-line runner for the benchmark suite
dmajda,2011-01-26 09:18:56,https://api.github.com/repos/pegjs/pegjs/git/commits/a091cb2ffd96a04ea1d389a377fc6266d540e40f,a091cb2ffd96a04ea1d389a377fc6266d540e40f,Factor out parts of benchmarks unrelated to running in the browser
dmajda,2011-01-26 10:53:16,https://api.github.com/repos/pegjs/pegjs/git/commits/fc1f4891658240103e9fec99778ed57070777b7a,fc1f4891658240103e9fec99778ed57070777b7a,"Save one concatenation when creating cache keys in generated parsers

Results of benchmark with 100 runs on V8:

  Before:  38.06 kB/s
  After:   38.72 kB/s
  Speedup: 1.734 %

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.10 (KHTML, like
Gecko) Chrome/8.0.552.237 Safari/534.10"
dmajda,2011-01-25 15:59:32,https://api.github.com/repos/pegjs/pegjs/git/commits/afcceb127f36e001072de625da8e777b77e053d2,afcceb127f36e001072de625da8e777b77e053d2,"Add command-line runner for the test suite

The output format and code is heavily inspired by Nodeunit and code in
QUnit's ""cli"" branch."
dmajda,2011-01-25 13:54:38,https://api.github.com/repos/pegjs/pegjs/git/commits/0e9d58ea969cf5a56f430509b8155416bd91ee45,0e9d58ea969cf5a56f430509b8155416bd91ee45,Upgrade QUnit to the current master (c532d183664118fc2ca1)
dmajda,2011-01-25 10:21:47,https://api.github.com/repos/pegjs/pegjs/git/commits/98cbd57eada7de9dd4ba7c2cdb0c65b8ce867987,98cbd57eada7de9dd4ba7c2cdb0c65b8ce867987,Add two missing |var|s (fix global namespace pollution)
dmajda,2011-01-25 09:35:48,https://api.github.com/repos/pegjs/pegjs/git/commits/1a3291fa364a762c924f23d3884a02f184622045,1a3291fa364a762c924f23d3884a02f184622045,Jakefile: Put the LIB_DIR existence check & creation at the right place
dmajda,2011-01-24 15:05:20,https://api.github.com/repos/pegjs/pegjs/git/commits/595d3adb8284ca88d18039e972ef8695828964a9,595d3adb8284ca88d18039e972ef8695828964a9,Add package.json for installing as Node package
dmajda,2011-01-24 12:57:48,https://api.github.com/repos/pegjs/pegjs/git/commits/88f901f36eec4349b527ef7d182f0c992a23b793,88f901f36eec4349b527ef7d182f0c992a23b793,"Jakefile: Create the ""lib"" directory if it does not exist

Closes GH-14.
Closes GH-15."
dmajda,2011-01-24 12:55:14,https://api.github.com/repos/pegjs/pegjs/git/commits/4c59bbfef9e556c7a5d6b4319eb2f2d27a607ccc,4c59bbfef9e556c7a5d6b4319eb2f2d27a607ccc,"Fixes to previous commit

Require PEG only in the ""parser"" task -- it may not exist when executing
the ""build"" task. Also don't make the ""build"" task dependent on the
""parser"" to break a dependency circle."
dmajda,2011-01-24 12:38:53,https://api.github.com/repos/pegjs/pegjs/git/commits/f3845726f23bfbaa0f9ecef845a0cdd25cdd66d2,f3845726f23bfbaa0f9ecef845a0cdd25cdd66d2,"Rakefile -> Jakefile

Or, swapped Ruby dependency for a Node dependency.

The build script was also modified to always regenerate the parser (in
case of the ""parser"" task) or rebuild the library (in case of the
""build"" task) even if the source files were not modified. Not doing this
led to problems when the generating code changed but the files didn't
(which happened often during development)."
dmajda,2011-01-24 09:57:00,https://api.github.com/repos/pegjs/pegjs/git/commits/814ce7d9db6898e0b3590b9e6796c76418ade400,814ce7d9db6898e0b3590b9e6796c76418ade400,Switch command-line mode backend from Rhino to Node
dmajda,2010-11-28 15:47:13,https://api.github.com/repos/pegjs/pegjs/git/commits/e25dcfbac8f93caba2be90f7abe84a95efe38d42,e25dcfbac8f93caba2be90f7abe84a95efe38d42,Update CHANGELOG
dmajda,2010-11-20 15:58:47,https://api.github.com/repos/pegjs/pegjs/git/commits/aeb2cb4f1cf0bb0d47282e0416328a20d0bfe272,aeb2cb4f1cf0bb0d47282e0416328a20d0bfe272,"Make sure quoting functions output only ASCII characters

This patch prevents portability problems. In particular, it fixes a
problem where ""SyntaxError: Invalid range in character class."" error
appeared when using command-line version on Widnows (see GH-13)."
dmajda,2010-11-14 17:13:28,https://api.github.com/repos/pegjs/pegjs/git/commits/4d68812b6539fac45648dd7c69873acd467f21b6,4d68812b6539fac45648dd7c69873acd467f21b6,Fix usage description
dmajda,2010-11-14 16:30:54,https://api.github.com/repos/pegjs/pegjs/git/commits/490eeadffecf83ecf9c7955631e33745a8774cc9,490eeadffecf83ecf9c7955631e33745a8774cc9,Bump version to 0.5+
dmajda,2010-11-14 16:14:10,https://api.github.com/repos/pegjs/pegjs/git/commits/977d1d20c7738c2f3e364f508cc8122caf4f590b,977d1d20c7738c2f3e364f508cc8122caf4f590b,"Fix wrong version reported by ""bin/pegjs --version""

DRY: Now the version is stored only in the VERSION file."
dmajda,2010-11-14 16:11:36,https://api.github.com/repos/pegjs/pegjs/git/commits/4ea2003b7b0ea7a2343d0b1c08f5fe87bbb882cb,4ea2003b7b0ea7a2343d0b1c08f5fe87bbb882cb,"Export PEG.VERSION property with PEG.js version

Value of the property is read in build time from the VERSION file."
dmajda,2010-09-28 19:06:01,https://api.github.com/repos/pegjs/pegjs/git/commits/e3effab86be91230bfbb0a446173ee6bea760591,e3effab86be91230bfbb0a446173ee6bea760591,Behave correctly in Rhino context (fixes previous commit)
dmajda,2010-09-28 19:02:11,https://api.github.com/repos/pegjs/pegjs/git/commits/2120de36af601277daa232ec7f72a2c48d491437,2120de36af601277daa232ec7f72a2c48d491437,Behave like CommonJS module in CommonJS context
dmajda,2010-09-28 18:22:44,https://api.github.com/repos/pegjs/pegjs/git/commits/77ec4f716218085c8bcf3fbe0f840a0f452f76a4,77ec4f716218085c8bcf3fbe0f840a0f452f76a4,Little bit cleaner way to protect against |undefined| redefinition
dmajda,2010-09-28 14:44:04,https://api.github.com/repos/pegjs/pegjs/git/commits/a12a24fca12c8769f47f2b3a292282578cc520b6,a12a24fca12c8769f47f2b3a292282578cc520b6,Make parsers generated by /bin/pegjs CommonJS modules by default
dmajda,2010-08-22 18:01:16,https://api.github.com/repos/pegjs/pegjs/git/commits/2d38c5cab3e4b63654b9947422ef67728a011850,2d38c5cab3e4b63654b9947422ef67728a011850,"Handle non-unique expected values of match failuers differently

Before this commit, uniqueness was checked when addding the failure. Now
we make the entiries unique when generating the error report, saving a
little time when the parsing is successful. This does not increase the
benchmark numbers too much though.

Results of benchmark with 100 runs on V8:

  Before:  37.25 kB/s
  After:   37.41 kB/s
  Speedup: 0.241 %

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.3 (KHTML, like
Gecko) Chrome/6.0.472.63 Safari/534.3"
dmajda,2010-08-22 17:02:08,https://api.github.com/repos/pegjs/pegjs/git/commits/b6288a8d9c2880d1284842c4feb43ca38f57c7e6,b6288a8d9c2880d1284842c4feb43ca38f57c7e6,"Avoid quoting when reporting errors for literals

This is a small win performance-wise.

Results of benchmark with 100 runs on V8:

  Before:  31.65 kB/s
  After:   32.83 kB/s
  Speedup: 3.728 %

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.4 (KHTML, like
Gecko) Chrome/5.0.375.127 Safari/533.4"
dmajda,2010-08-22 16:15:53,https://api.github.com/repos/pegjs/pegjs/git/commits/c8836c0312871bf5ba27264cb916beb1336fc2e8,c8836c0312871bf5ba27264cb916beb1336fc2e8,Remove two unused variables
dmajda,2010-08-22 15:56:08,https://api.github.com/repos/pegjs/pegjs/git/commits/7b03f164b83e23a318110a0f1b2628babcaed814,7b03f164b83e23a318110a0f1b2628babcaed814,"Avoid passing |context| in the generated parser

Passing the context is not necessary, global variable is good enough
(passing the context would make more sense if each AST node was
translated into a function call, but this isn't the case).

The performance gain is very small, on the border of statstical error.

Results of benchmark with 100 runs on V8:

  Before:  31.49 kB/s
  After:   31.57 kB/s
  Speedup: 0.254 %

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.4 (KHTML, like
Gecko) Chrome/5.0.375.127 Safari/533.4"
dmajda,2010-08-21 13:38:17,https://api.github.com/repos/pegjs/pegjs/git/commits/a42b957573f48d73bd9d078002b0dc28c780c7c6,a42b957573f48d73bd9d078002b0dc28c780c7c6,Remove now mostly useless comment headers from the code
dmajda,2010-08-21 13:34:56,https://api.github.com/repos/pegjs/pegjs/git/commits/d493a4d143c58ec51c582644dff8e049fef9aa01,d493a4d143c58ec51c582644dff8e049fef9aa01,Move test helper into its own file + reorder test file includes
dmajda,2010-08-21 13:30:23,https://api.github.com/repos/pegjs/pegjs/git/commits/fea6d851949dea66022eb80b7492d604cf4c69b9,fea6d851949dea66022eb80b7492d604cf4c69b9,Little compiler tests clean-up
dmajda,2010-08-21 12:36:44,https://api.github.com/repos/pegjs/pegjs/git/commits/8918d77da1da457e07eecb7c3c4e9ce87e36eb8a,8918d77da1da457e07eecb7c3c4e9ce87e36eb8a,Add compiler passes tests (currently testing the one pass that exists)
dmajda,2010-08-21 09:59:42,https://api.github.com/repos/pegjs/pegjs/git/commits/95f70c9562dd0ec96b913c6ab328af6a83859d1b,95f70c9562dd0ec96b913c6ab328af6a83859d1b,"Test the checks directly, do not go through |PEG.buildParser|"
dmajda,2010-08-21 09:55:46,https://api.github.com/repos/pegjs/pegjs/git/commits/f82a4ebf28df6ae7f99068455800f8360114eb8b,f82a4ebf28df6ae7f99068455800f8360114eb8b,Compiler checks and passes are named for easier reference from tests
dmajda,2010-08-21 09:54:35,https://api.github.com/repos/pegjs/pegjs/git/commits/906488027b2077e8a2827d2620c606965b8f2c2e,906488027b2077e8a2827d2620c606965b8f2c2e,Fix stupid mistakes in the |buildNodeVisitor| function
dmajda,2010-08-18 19:15:48,https://api.github.com/repos/pegjs/pegjs/git/commits/1b75a7b9b33ca8afb7e696c28e40c330780003b2,1b75a7b9b33ca8afb7e696c28e40c330780003b2,Split-off |PEG.compiler.checks| tests
dmajda,2010-08-18 19:07:04,https://api.github.com/repos/pegjs/pegjs/git/commits/b15eb0bb5f843f360fcb2b8de7d939822e4cb000,b15eb0bb5f843f360fcb2b8de7d939822e4cb000,"Change term ""grammar parser"" to ""parser"" in tests"
dmajda,2010-08-18 18:59:03,https://api.github.com/repos/pegjs/pegjs/git/commits/b105c4375615c82e3931fd57c7bc02f5c692596e,b105c4375615c82e3931fd57c7bc02f5c692596e,Define |global| object in different way in tests
dmajda,2010-08-17 18:53:13,https://api.github.com/repos/pegjs/pegjs/git/commits/f7877938486019aa89237f707742c826440c0a59,f7877938486019aa89237f707742c826440c0a59,Rename |node| -> |subnode| to avoid aliasing
dmajda,2010-08-17 18:44:24,https://api.github.com/repos/pegjs/pegjs/git/commits/088c78e88cdb8d60098d7a8c99162647d5fdca06,088c78e88cdb8d60098d7a8c99162647d5fdca06,Fix incorrect variable name on two places
dmajda,2010-08-17 18:34:14,https://api.github.com/repos/pegjs/pegjs/git/commits/4d50a37b14ef4b7c254de0b66eafc8e5771037f0,4d50a37b14ef4b7c254de0b66eafc8e5771037f0,Extract |buildNodeVisitor|
dmajda,2010-08-16 19:20:37,https://api.github.com/repos/pegjs/pegjs/git/commits/1279e87766d7c91557bd4a4be97373998e86311a,1279e87766d7c91557bd4a4be97373998e86311a,Simplify utility functions structure + do not export them as part of the PEG object
dmajda,2010-08-15 17:50:59,https://api.github.com/repos/pegjs/pegjs/git/commits/5ab36f8018a285b431c57f188de1a8c5b196b8ed,5ab36f8018a285b431c57f188de1a8c5b196b8ed,"Split the vendor directory

There are now three vendor directories. The goal is to have test- and
benchmark-specific stuff is its own directories and not in the main one.

  vendor
  test/vendor
  benchmark/vendor"
dmajda,2010-08-15 17:38:15,https://api.github.com/repos/pegjs/pegjs/git/commits/44f541330e844ee6687ba26a8a833a551e28b3e3,44f541330e844ee6687ba26a8a833a551e28b3e3,Rakefile: Make everything dependencies-based again
dmajda,2010-08-15 17:14:43,https://api.github.com/repos/pegjs/pegjs/git/commits/9e2fc76fc58bb3703c1a1529f4b5952f38923ef7,9e2fc76fc58bb3703c1a1529f4b5952f38923ef7,"Rakefile: Rename ""metaparser"" task to ""parser""

This is more consistent with nomenclature in the code and with the file
names."
dmajda,2010-07-25 15:54:09,https://api.github.com/repos/pegjs/pegjs/git/commits/e59f3ba3384649cef46790f3b186be3d845006d6,e59f3ba3384649cef46790f3b186be3d845006d6,"Split the source code into several files, introduce build system

The source code is now in the src directory. The library needs to be
built using ""rake"", which creates the lib/peg.js file by combining the
source files."
dmajda,2010-07-25 13:45:56,https://api.github.com/repos/pegjs/pegjs/git/commits/95a78892ded47613e4be90972ebf28da9c4dbf84,95a78892ded47613e4be90972ebf28da9c4dbf84,"Rename |PEG.compiler.compileParser| to |PEG.compiler.compile|

It's shorter and more consistent with |PEG.parser.parse|."
dmajda,2010-07-25 13:33:28,https://api.github.com/repos/pegjs/pegjs/git/commits/5e64d09a15f782f43f863d79b0f1b09fca53bdfd,5e64d09a15f782f43f863d79b0f1b09fca53bdfd,"Renamed some properties of the |PEG| object

1. |PEG.Compiler| -> |PEG.compiler|
2. |PEG.grammarParser| -> |PEG.parser|

This brings us closer to the desired structure of the PEG object, which
is:

  +-PEG
    |- parser
    +- compiler
       |- checks
       |- passes
       +- emitter

These are the only things (together with the |PEG.buildParser| function
and exceptions) that I want to be publicly accessible -- as extension
points and also for easy testing of PEG.js's components."
dmajda,2010-07-25 12:12:56,https://api.github.com/repos/pegjs/pegjs/git/commits/1682a25b0d969dd25626eb0055bdccc5f6fb3173,1682a25b0d969dd25626eb0055bdccc5f6fb3173,Move emitter utility functions out of |PEG.Compiler|
dmajda,2010-07-25 11:37:59,https://api.github.com/repos/pegjs/pegjs/git/commits/e5a5572a876be545f9c70a235badd39e3ccc2b3a,e5a5572a876be545f9c70a235badd39e3ccc2b3a,Factored the code emitter out of the compiler
dmajda,2010-07-24 14:57:01,https://api.github.com/repos/pegjs/pegjs/git/commits/2622f432bda7f9ba8061c3de632e9467deb5dcd8,2622f432bda7f9ba8061c3de632e9467deb5dcd8,"Move compiler checks and passes out of |PEG.Compiler| definition

This allows splitting them into separate files in the future. It also
decreases indentation level in the code."
dmajda,2010-07-24 14:38:20,https://api.github.com/repos/pegjs/pegjs/git/commits/d7d1a0b28ccad4f5b7595af1baa23b8c6ec16146,d7d1a0b28ccad4f5b7595af1baa23b8c6ec16146,Remove unused |PEG.ArrayUtils.range| utility function
dmajda,2010-07-24 14:35:06,https://api.github.com/repos/pegjs/pegjs/git/commits/98da358ef4705b1e6ff3315b30f17806959bd8e9,98da358ef4705b1e6ff3315b30f17806959bd8e9,Found a neater trick how to defend against |undefined| redefinition
dmajda,2010-07-24 12:48:12,https://api.github.com/repos/pegjs/pegjs/git/commits/c3b5c2131af12b6710b10a5d71d65603002d716f,c3b5c2131af12b6710b10a5d71d65603002d716f,"Benchmark: Factor benchmark into several functions run using |setTimeout|

We do this for two reasons:

  1. To avoid bowser mechanism for interrupting long-running scripts to
     kick-in (or at least to not kick-in that often).

  2. To ensure progressive rendering of results in the browser (some
     browsers do not render at all when running JavaScript code).

This does not change the benchmark suite execution speed statistically
significantly on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   31.04 kB/s   31.18 kB/s
      2   31.26 kB/s   30.89 kB/s
      3   31.15 kB/s   31.19 kB/s
      4   30.52 kB/s   31.21 kB/s
      5   31.00 kB/s   30.73 kB/s
---------------------------------
Average   30.99 kB/s   31.04 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.99 Safari/533.4"
dmajda,2010-07-21 20:38:44,https://api.github.com/repos/pegjs/pegjs/git/commits/647e7be1fd6e4e65a171acbafc94d7f2828b0e2d,647e7be1fd6e4e65a171acbafc94d7f2828b0e2d,Benchmark: Users can specify the number of runs
dmajda,2010-07-21 19:53:09,https://api.github.com/repos/pegjs/pegjs/git/commits/4cae3f9b481f344cd08f0692c703605428370cc7,4cae3f9b481f344cd08f0692c703605428370cc7,"Benchmark: Make results table fixed-width, center everything"
dmajda,2010-06-10 07:54:23,https://api.github.com/repos/pegjs/pegjs/git/commits/1cdce638785003619548ed26f7d7afc3033d886c,1cdce638785003619548ed26f7d7afc3033d886c,Updated version to 0.5
dmajda,2010-06-10 07:53:14,https://api.github.com/repos/pegjs/pegjs/git/commits/374cf3644bab9b4b3ce0f3a324c8e4f388898bae,374cf3644bab9b4b3ce0f3a324c8e4f388898bae,CHANGELOG: Fix 0.5 release date
dmajda,2010-06-09 17:26:27,https://api.github.com/repos/pegjs/pegjs/git/commits/b30f4a9c34512384419f6ec14b7f3c0a49c18a48,b30f4a9c34512384419f6ec14b7f3c0a49c18a48,README.md tweaks
dmajda,2010-06-09 08:28:36,https://api.github.com/repos/pegjs/pegjs/git/commits/61fff6c70fab866657bc93fab93d481c09e2f508,61fff6c70fab866657bc93fab93d481c09e2f508,Updated CHANGELOG
dmajda,2010-06-09 07:44:33,https://api.github.com/repos/pegjs/pegjs/git/commits/08ea5e49d616681ce6a8c16b13b2e0b7a4e20724,08ea5e49d616681ce6a8c16b13b2e0b7a4e20724,README.md: Fix example code
dmajda,2010-06-08 14:34:28,https://api.github.com/repos/pegjs/pegjs/git/commits/a616b00c83c84b2d132d81e9923f660d317ccf2c,a616b00c83c84b2d132d81e9923f660d317ccf2c,Improve README.md
dmajda,2010-06-08 15:01:54,https://api.github.com/repos/pegjs/pegjs/git/commits/5f810f803b51039d426d4d5702c7a5c3de517b8b,5f810f803b51039d426d4d5702c7a5c3de517b8b,Make example grammars compatible with Rhino
dmajda,2010-06-08 13:06:21,https://api.github.com/repos/pegjs/pegjs/git/commits/a93ad0a5b80c7dc740c70cef4e4553cfe8f38afa,a93ad0a5b80c7dc740c70cef4e4553cfe8f38afa,"README.md: Make the ""Compatibility"" section a bulleted list"
dmajda,2010-06-08 12:49:13,https://api.github.com/repos/pegjs/pegjs/git/commits/af1968054b334e39cd11a4385a437dce33f988d2,af1968054b334e39cd11a4385a437dce33f988d2,Implement semantic predicates
dmajda,2010-06-08 10:46:16,https://api.github.com/repos/pegjs/pegjs/git/commits/4895f4f8e4c46c109a6ee1b57747daf5011826a3,4895f4f8e4c46c109a6ee1b57747daf5011826a3,Treat the whole grammar as an AST node
dmajda,2010-06-08 09:03:28,https://api.github.com/repos/pegjs/pegjs/git/commits/917cf1cf2a85d3069e10a2d17caa19c2cfcac92a,917cf1cf2a85d3069e10a2d17caa19c2cfcac92a,"Start rule of the grammar is now implicitly its first rule

Before this change, the start rule was the one named ""start"" and there
was an option to override that. This is now impossible.

The goal of this change is to contain all information for the parser
generation in the grammar itself.

In the future, some override directive for the start rule (like Bison's
""%start"") may be added to the grammar."
dmajda,2010-06-08 07:35:58,https://api.github.com/repos/pegjs/pegjs/git/commits/70cf4cd94dac1671273af73884879540e84bb229,70cf4cd94dac1671273af73884879540e84bb229,"Reset generated variable names for each rule parsing function

Little change in the source grammar now does not change variables in all
the generated code. This is helpful especially when one has the
generated grammar stored in a VCS (this is true e.g. for our
metagrammar)."
dmajda,2010-06-08 07:15:09,https://api.github.com/repos/pegjs/pegjs/git/commits/66de889f4b715553ebe06cb841577fbe8b79495a,66de889f4b715553ebe06cb841577fbe8b79495a,Implement initializers
dmajda,2010-06-07 14:47:17,https://api.github.com/repos/pegjs/pegjs/git/commits/718bcf5f87b8779bebb16a795126968922730fd4,718bcf5f87b8779bebb16a795126968922730fd4,Rename the |action| property of action AST nodes to |code|
dmajda,2010-06-07 14:06:50,https://api.github.com/repos/pegjs/pegjs/git/commits/c0f0d56975f462af5b5f3ab80a842283498bffa4,c0f0d56975f462af5b5f3ab80a842283498bffa4,Fix incorrect comment
dmajda,2010-06-07 14:04:21,https://api.github.com/repos/pegjs/pegjs/git/commits/8a2e21fa3f0d0649a1641b5452257a37f075d685,8a2e21fa3f0d0649a1641b5452257a37f075d685,Inlined the |initialContext| variable
dmajda,2010-06-07 10:11:48,https://api.github.com/repos/pegjs/pegjs/git/commits/439c815e486137ee9454a9f0c795e120d6d14871,439c815e486137ee9454a9f0c795e120d6d14871,"Move lot of stuff in generated parsers into the |parse| method

We want to have the rule parsing functions inside the |parse| method
because we want them to share a common environment. In the future,
initializers will be executed in this enviromnent and thus functions and
variables defined by them will be accessible to the rule parsing
functions.

Moving various private properties from the parser object into the
|parse| method was not strictly necessary, but it was a natural step
after moving the functions."
dmajda,2010-06-07 09:43:02,https://api.github.com/repos/pegjs/pegjs/git/commits/1daf1448e51a45bbcc63093a0c4bd2dd75235a33,1daf1448e51a45bbcc63093a0c4bd2dd75235a33,Get rid of the |_startRule| property in generated parsers.
dmajda,2010-06-07 08:59:14,https://api.github.com/repos/pegjs/pegjs/git/commits/95735f2c97bedff171a7d6c8c545d24393cac24b,95735f2c97bedff171a7d6c8c545d24393cac24b,"Allow trailing semicolon ("";"") for rules"
dmajda,2010-06-07 08:45:26,https://api.github.com/repos/pegjs/pegjs/git/commits/7d4911ec531552887603c37e4eea6bdc32331bd5,7d4911ec531552887603c37e4eea6bdc32331bd5,Emit little bit less whitespace in actions
dmajda,2010-05-31 10:40:24,https://api.github.com/repos/pegjs/pegjs/git/commits/ee8c121676a3fc6494a30d98dc90e91ac001de3b,ee8c121676a3fc6494a30d98dc90e91ac001de3b,"Use labeled expressions and variables instead of $1, $2, etc.

Labeled expressions lead to more maintainable code and also will allow
certain optimizations (we can ignore results of expressions not passed
to the actions).

This does not speed up the benchmark suite execution statistically
significantly on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   28.43 kB/s   28.46 kB/s
      2   28.38 kB/s   28.56 kB/s
      3   28.22 kB/s   28.58 kB/s
      4   28.76 kB/s   28.55 kB/s
      5   28.57 kB/s   28.48 kB/s
---------------------------------
Average   28.47 kB/s   28.53 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.4 (KHTML, like Gecko) Chrome/5.0.375.55 Safari/533.4"
dmajda,2010-05-23 17:29:53,https://api.github.com/repos/pegjs/pegjs/git/commits/52704593cde1e8396cf87fe49a100c6591139e1f,52704593cde1e8396cf87fe49a100c6591139e1f,Allow labeled expressions in the metagrammar (without any meaning yet)
dmajda,2010-05-23 13:56:57,https://api.github.com/repos/pegjs/pegjs/git/commits/409ddf2ae81eeef4410155be41618fea6fb43c44,409ddf2ae81eeef4410155be41618fea6fb43c44,"Formatted all grammars more consistently and transparently

This is purely cosmetical change, no functionality was affected
(hopefully)."
dmajda,2010-05-23 08:41:43,https://api.github.com/repos/pegjs/pegjs/git/commits/698564a3c25991da8937460ed5d348af9fa60721,698564a3c25991da8937460ed5d348af9fa60721,"Replace "":"" after a rule name with ""=""

I'll introduce labelled expressions shortly and I want to use "":"" as a
label-expression separator. This change avoids conflict between the two
meanings of "":"". (What would e.g. ""foo: 'bar'"" mean?  Rule ""foo""
matching string ""bar"", or string ""bar"" labelled ""foo""?)"
dmajda,2010-05-31 14:30:02,https://api.github.com/repos/pegjs/pegjs/git/commits/7fdf0492c775622ddbbff068954d455a062d84bc,7fdf0492c775622ddbbff068954d455a062d84bc,Fixed error message for invalid character range + added test
dmajda,2010-05-31 13:26:35,https://api.github.com/repos/pegjs/pegjs/git/commits/f9ea46ef15cdc7933a5bdbd85826f9647562d6b3,f9ea46ef15cdc7933a5bdbd85826f9647562d6b3,Fix string literal parsing in the JavaScript grammar
dmajda,2010-05-31 10:48:43,https://api.github.com/repos/pegjs/pegjs/git/commits/570658756a4dcf233be143c09f134834d59303c9,570658756a4dcf233be143c09f134834d59303c9,Remove useless action from the metagrammar
dmajda,2010-05-22 16:58:41,https://api.github.com/repos/pegjs/pegjs/git/commits/9bf86b89a64289bc27bf554dc61ee5f70411c25c,9bf86b89a64289bc27bf554dc61ee5f70411c25c,"Fix stupid mistakes in metagrammar-test.js

The mistakes weren't caught because the first one introduces a syntax
error, causing the whole test suite not to load. Unfortunately, QUnit
didn't complain so I missed this.

The real commit these changes belong to is
33a1a7c1e996dcf0d1c423b6db9740ff1ecea746."
dmajda,2010-05-22 15:43:32,https://api.github.com/repos/pegjs/pegjs/git/commits/d1fc16c3736b8e0f6709731d667df5babece2b53,d1fc16c3736b8e0f6709731d667df5babece2b53,"Fix bug causing incorrect error messages

The bug could cause the list of expected strings in an error message to
contain strings that shouldn't be there.

Closes #2."
dmajda,2010-05-22 11:15:20,https://api.github.com/repos/pegjs/pegjs/git/commits/11c67b050767cdb2577c0a797affbb8b78a3f1de,11c67b050767cdb2577c0a797affbb8b78a3f1de,Remove trailing whitespace
dmajda,2010-05-22 11:11:15,https://api.github.com/repos/pegjs/pegjs/git/commits/90ed4712e98c01de879e947c50103408c9079181,90ed4712e98c01de879e947c50103408c9079181,"Add compiler optimization: Remove proxy rules

This shouldn't have measurable effect on the benchmarks as there are no
proxy rules in the grammars the benchamrk uses. However the effect on
generated parsers' speed should be positive generally."
dmajda,2010-05-22 08:13:48,https://api.github.com/repos/pegjs/pegjs/git/commits/33a1a7c1e996dcf0d1c423b6db9740ff1ecea746,33a1a7c1e996dcf0d1c423b6db9740ff1ecea746,"Clean up class handling in the metagrammar and compiler

The class AST node now contains structured data and a raw text which is
used for error messages."
dmajda,2010-05-21 19:18:33,https://api.github.com/repos/pegjs/pegjs/git/commits/137a4b4f533d10a5e48d0e2ac3b2a84b823c6ba0,137a4b4f533d10a5e48d0e2ac3b2a84b823c6ba0,"Renamed |characters| -> |chars| (shorter, no loss of expressivity)"
dmajda,2010-05-21 18:50:29,https://api.github.com/repos/pegjs/pegjs/git/commits/4e968892be47c013ef660793b6b5a0d49ee55dd2,4e968892be47c013ef660793b6b5a0d49ee55dd2,"Guard against redefinition of |undefined|

In most cases, code pattern

  x === undefined

was transformed to

  typeof(x) === ""undefined""

and similarly with |!==|.

In the generated code, the condition was simply made less strict to
avoid performance penalty of string comparison (I don't think JavaScript
VMs optimize this specific pattern to avoid it)."
dmajda,2010-05-21 18:34:17,https://api.github.com/repos/pegjs/pegjs/git/commits/d85bfcb2e9606014ee835720c4322bf78086f550,d85bfcb2e9606014ee835720c4322bf78086f550,Fix comment typo
dmajda,2010-05-21 17:00:00,https://api.github.com/repos/pegjs/pegjs/git/commits/76ed63c86ece4559b074f6858ae2d14ce2ebb8de,76ed63c86ece4559b074f6858ae2d14ce2ebb8de,AST refactoring 6/6: Get rid of the |Grammar| namespace
dmajda,2010-05-21 16:54:52,https://api.github.com/repos/pegjs/pegjs/git/commits/b4bf49443ac0c5728bed55bf516dd89ebf3a0d2c,b4bf49443ac0c5728bed55bf516dd89ebf3a0d2c,AST refactoring 5/6: Make AST classless
dmajda,2010-05-21 15:30:39,https://api.github.com/repos/pegjs/pegjs/git/commits/41abb7ad92af0210e4480f783284e9e9c8bd5fea,41abb7ad92af0210e4480f783284e9e9c8bd5fea,AST refactoring 4/6: Rewrite compilation to not extend the AST nodes
dmajda,2010-05-21 15:10:19,https://api.github.com/repos/pegjs/pegjs/git/commits/5885a34ddeb12e2613452651a0d942a7eaf57ddf,5885a34ddeb12e2613452651a0d942a7eaf57ddf,AST refactoring 3/6: Rewrite checks to not extend the AST nodes
dmajda,2010-05-21 14:22:16,https://api.github.com/repos/pegjs/pegjs/git/commits/c59516541faa2f4e03f3567a17810e9128543618,c59516541faa2f4e03f3567a17810e9128543618,AST refactoring 2/6: Add |type| property to AST nodes
dmajda,2010-05-14 14:46:15,https://api.github.com/repos/pegjs/pegjs/git/commits/4e99a2bda7e4cda94c2366ab8111e61255755391,4e99a2bda7e4cda94c2366ab8111e61255755391,"AST refactoring 1/6: Make properties of AST nodes public

Removed undescore prefix of the properties and deleted getters."
dmajda,2010-05-15 17:56:50,https://api.github.com/repos/pegjs/pegjs/git/commits/1c7c5bb5dac5af098ccbd7d8e7bcd24c427c30e8,1c7c5bb5dac5af098ccbd7d8e7bcd24c427c30e8,"Correct variable name: ""choice"" -> ""optional""."
dmajda,2010-05-14 16:02:45,https://api.github.com/repos/pegjs/pegjs/git/commits/81eced29b2f67319d4f18117eb54c1df84ef7933,81eced29b2f67319d4f18117eb54c1df84ef7933,Whitespace fixes
dmajda,2010-05-14 15:47:25,https://api.github.com/repos/pegjs/pegjs/git/commits/08635b658b6d9ec96393b773eea7ac8c012aef5a,08635b658b6d9ec96393b773eea7ac8c012aef5a,"Make bin/pegjs work when called via a symlink

Similar issue exists on Windows too (they have symlinks since Vista), but I
could not find how to dereference symlinks from batch files, so I did not fix
it. I guess this does not matter much given how little the symlinks are used in
the Windows world.

Closes #1."
dmajda,2010-05-08 16:28:33,https://api.github.com/repos/pegjs/pegjs/git/commits/6f2a188efcafbf0fcff4f754dbf39294ed538130,6f2a188efcafbf0fcff4f754dbf39294ed538130,"Checks refactoring

Changed two things:

  1. Checks are run in |PEG.Compiler.compileParser|, not in
     |PEG.buildParser|.

  2. Checks are extracted into separate functions."
dmajda,2010-05-08 15:50:20,https://api.github.com/repos/pegjs/pegjs/git/commits/85930cbcfebe3154655f6061b3084e9cfb803131,85930cbcfebe3154655f6061b3084e9cfb803131,"Reorder AST stuff more consistently and sensibly

There is no functional change in this commit."
dmajda,2010-05-07 15:46:11,https://api.github.com/repos/pegjs/pegjs/git/commits/f28c52fde261d1ae2cee75c5d99e80da2d111dfb,f28c52fde261d1ae2cee75c5d99e80da2d111dfb,"Rename |_element| to |_expression| in AST

All nodes which have one subexpression store it in the |_expression| property
now."
dmajda,2010-05-07 15:45:25,https://api.github.com/repos/pegjs/pegjs/git/commits/7d1261c0fc05c93f024f750e706e078f0a2fe5ad,7d1261c0fc05c93f024f750e706e078f0a2fe5ad,Regenerate lib/metagrammar.js (forgot to do it in previous commit)
dmajda,2010-04-25 14:50:44,https://api.github.com/repos/pegjs/pegjs/git/commits/cc7f1d96eb6243bbbee0640d54041eef80a13ea2,cc7f1d96eb6243bbbee0640d54041eef80a13ea2,"Avoid |call| when calling actions with one parameter.

This speeds up the benchmark suite execution by 0.18%, which may just be a
measurement error. (Standrad statistic tests would tell more, but I don't want
to mess with them now.) The code is little bit nicer this way though.

Going further and avoiding |apply| seems to slow thigs down a bit, possibly
because multiple array accesses. I may try improved version without array
accesses (where Action passes the Sequence variable names to save the results
into) sometime later.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   29.08 kB/s   28.91 kB/s
      2   28.72 kB/s   28.75 kB/s
      3   28.78 kB/s   28.88 kB/s
      4   28.57 kB/s   28.90 kB/s
      5   28.84 kB/s   28.81 kB/s
---------------------------------
Average   28.80 kB/s   28.85 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.2 (KHTML, like Gecko) Chrome/5.0.342.9 Safari/533.2"
dmajda,2010-04-24 12:34:51,https://api.github.com/repos/pegjs/pegjs/git/commits/e3aa4df0903617c0da48d1ff00b625b7a72103cf,e3aa4df0903617c0da48d1ff00b625b7a72103cf,"Changed action parameter processing to avoid the arguments object.

The action now computes the number of passed parameters during the code
generation and the parameters are declared directly as $1, $2, etc. in the
generated function.

This does not speed up the benchmark suite execution statistically significantly
on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   28.68 kB/s   29.08 kB/s
      2   28.77 kB/s   28.72 kB/s
      3   28.89 kB/s   28.78 kB/s
      4   28.84 kB/s   28.57 kB/s
      5   28.86 kB/s   28.84 kB/s
---------------------------------
Average   28.81 kB/s   28.80 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.2 (KHTML, like Gecko) Chrome/5.0.342.9 Safari/533.2"
dmajda,2010-04-21 19:26:45,https://api.github.com/repos/pegjs/pegjs/git/commits/a1dcd245bb0197b3a067620dd5c018a0df9af0a6,a1dcd245bb0197b3a067620dd5c018a0df9af0a6,Action AST node no longer accepts functions as actions (only strings).
dmajda,2010-04-21 19:19:48,https://api.github.com/repos/pegjs/pegjs/git/commits/b2f230fad24ae13febcbdd07abba4921a8d72ff0,b2f230fad24ae13febcbdd07abba4921a8d72ff0,"Added Optional AST node.

This does not speed up the benchmark suite execution statistically significantly
on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   28.84 kB/s   28.75 kB/s
      2   28.76 kB/s   28.69 kB/s
      3   28.72 kB/s   28.69 kB/s
      4   28.84 kB/s   28.93 kB/s
      5   28.82 kB/s   28.70 kB/s
---------------------------------
Average   28.80 kB/s   28.75 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.2 (KHTML, like Gecko)
Chrome/5.0.342.9 Safari/533.2"
dmajda,2010-04-21 10:02:45,https://api.github.com/repos/pegjs/pegjs/git/commits/e5df8284b594739e9c1fd709c8e302675ff94183,e5df8284b594739e9c1fd709c8e302675ff94183,"Added AndPredicate AST node.

This does not speed up the benchmark suite execution statistically significantly
on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   28.72 kB/s   28.84 kB/s
      2   28.84 kB/s   28.76 kB/s
      3   28.83 kB/s   28.72 kB/s
      4   28.81 kB/s   28.84 kB/s
      5   28.76 kB/s   28.82 kB/s
---------------------------------
Average   28.79 kB/s   28.80 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.2 (KHTML, like Gecko) Chrome/5.0.342.9 Safari/533.2"
dmajda,2010-04-20 19:09:23,https://api.github.com/repos/pegjs/pegjs/git/commits/c3c1c796659c64b19f4ad098835dff6426e72cb0,c3c1c796659c64b19f4ad098835dff6426e72cb0,"Added OneOrMore AST node.

This speeds up the benchmark suite execution by 1.08% on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   28.38 kB/s   28.72 kB/s
      2   28.52 kB/s   28.84 kB/s
      3   28.41 kB/s   28.83 kB/s
      4   28.47 kB/s   28.81 kB/s
      5   28.64 kB/s   28.76 kB/s
---------------------------------
Average   28.48 kB/s   28.79 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.2 (KHTML, like Gecko) Chrome/5.0.342.9 Safari/533.2"
dmajda,2010-04-19 18:45:27,https://api.github.com/repos/pegjs/pegjs/git/commits/8f59e21c8dff392fa4597727a3d1d94c11899d6f,8f59e21c8dff392fa4597727a3d1d94c11899d6f,"Renamed an iterator variable: ""key"" -> ""rule""."
dmajda,2010-04-19 18:43:03,https://api.github.com/repos/pegjs/pegjs/git/commits/3f5cb8850c3aa0427e92e554ce1d93e067a08fcf,3f5cb8850c3aa0427e92e554ce1d93e067a08fcf,Fixed PEG.buildParser's documentation and added a test.
dmajda,2010-04-19 18:35:55,https://api.github.com/repos/pegjs/pegjs/git/commits/48da65d08ef31273afc4de79d099bac21c252d49,48da65d08ef31273afc4de79d099bac21c252d49,PEG.buildParser now accepts grammars only in string format.
dmajda,2010-04-19 18:18:15,https://api.github.com/repos/pegjs/pegjs/git/commits/927f2d65c99e99f18ac87ef86fa5f0622ff7f489,927f2d65c99e99f18ac87ef86fa5f0622ff7f489,Exception tests also test exception messages.
dmajda,2010-04-19 18:07:48,https://api.github.com/repos/pegjs/pegjs/git/commits/b5ac4f0c4a5e11ed865b03d2826901d370ecf54d,b5ac4f0c4a5e11ed865b03d2826901d370ecf54d,Refactored helpers for testing of thrown exceptions.
dmajda,2010-04-19 18:00:22,https://api.github.com/repos/pegjs/pegjs/git/commits/de7536fd94f986390d4693c1b3d0134f08b4dfa4,de7536fd94f986390d4693c1b3d0134f08b4dfa4,"Added notes about ECMA-262, 5th ed. compatibility to the JSON example grammar."
dmajda,2010-04-19 17:54:28,https://api.github.com/repos/pegjs/pegjs/git/commits/a86e06a21691432d4b0bb8d1339c1378f83d5160,a86e06a21691432d4b0bb8d1339c1378f83d5160,"Add ""Generated by ..."" message to the generated parsers."
dmajda,2010-04-17 10:31:38,https://api.github.com/repos/pegjs/pegjs/git/commits/f37ca3fcdbb71c83edc81090382342b42c22706a,f37ca3fcdbb71c83edc81090382342b42c22706a,Updated version to 0.4
dmajda,2010-04-17 10:29:49,https://api.github.com/repos/pegjs/pegjs/git/commits/870144b439c3b0cb50b461c54222450c341de69a,870144b439c3b0cb50b461c54222450c341de69a,Added CHANGELOG.
dmajda,2010-04-17 09:54:47,https://api.github.com/repos/pegjs/pegjs/git/commits/7214de6dc8fead32d6832ee966fa9e6b4ca65dfa,7214de6dc8fead32d6832ee966fa9e6b4ca65dfa,"README.md: Removed unnecessary ""id"" attribute from the example."
dmajda,2010-04-17 09:52:36,https://api.github.com/repos/pegjs/pegjs/git/commits/db4cc71f2cd15784afcc609e90ade7c0f0f6c32e,db4cc71f2cd15784afcc609e90ade7c0f0f6c32e,README.md: Fixed formatting.
dmajda,2010-04-17 09:49:18,https://api.github.com/repos/pegjs/pegjs/git/commits/7822379c703ceda824b6c916c4a7ed9df3425a37,7822379c703ceda824b6c916c4a7ed9df3425a37,"Rewrote the ""Usage"" section."
dmajda,2010-04-17 09:17:37,https://api.github.com/repos/pegjs/pegjs/git/commits/c9a5e283e784bd511679352550091c6e7df66e41,c9a5e283e784bd511679352550091c6e7df66e41,"README.md: Renamed the ""Requirements"" section to ""Compatibility"" and moved it at the end."
dmajda,2010-04-17 09:15:49,https://api.github.com/repos/pegjs/pegjs/git/commits/3752fe211a71fbc1fb23e40b253fe1b9a5155a04,3752fe211a71fbc1fb23e40b253fe1b9a5155a04,"README.md: Added the ""Features"" section."
dmajda,2010-04-16 18:28:24,https://api.github.com/repos/pegjs/pegjs/git/commits/b4bf906cf8f9d6d954ce2caa527325247e1bc4ed,b4bf906cf8f9d6d954ce2caa527325247e1bc4ed,Modified README.md to indicate that IE6+ is supported.
dmajda,2010-04-16 09:06:29,https://api.github.com/repos/pegjs/pegjs/git/commits/09291d6f0f8012e6fd601ee87132322898d97b8b,09291d6f0f8012e6fd601ee87132322898d97b8b,"Use ""charAt(...)"" instead of ""[...]"" for accessing string characters (compatibility with IE < 8)."
dmajda,2010-04-16 07:26:51,https://api.github.com/repos/pegjs/pegjs/git/commits/28459236aa7cee338e71f53bd1829f44380a9448,28459236aa7cee338e71f53bd1829f44380a9448,Removed trailing comma that caused error in IE.
dmajda,2010-04-16 06:53:02,https://api.github.com/repos/pegjs/pegjs/git/commits/4b51e6a6d3bbae659d1552a0b75afbdc81b3bdd5,4b51e6a6d3bbae659d1552a0b75afbdc81b3bdd5,"Quote null characters in regexps, IE does not like them."
dmajda,2010-04-14 19:29:05,https://api.github.com/repos/pegjs/pegjs/git/commits/7fc491412db5a817fe3aa7bd70cfbbbb98242404,7fc491412db5a817fe3aa7bd70cfbbbb98242404,"Work around the fact that IE does not recognize ""\v"" in strings."
dmajda,2010-04-14 19:08:35,https://api.github.com/repos/pegjs/pegjs/git/commits/6abda95a99f1dc03b15f33930f6f42fc050eeeac,6abda95a99f1dc03b15f33930f6f42fc050eeeac,"Made regexps generated for empty character classes (""[]"" and ""[^]"") work in IE."
dmajda,2010-04-12 19:11:02,https://api.github.com/repos/pegjs/pegjs/git/commits/e79e86999302dc8b35b8350997b3fc27bf176ab1,e79e86999302dc8b35b8350997b3fc27bf176ab1,Compensate for IE's lack of Array.prototype.indexOf function.
dmajda,2010-04-14 18:59:41,https://api.github.com/repos/pegjs/pegjs/git/commits/05381fedfab349d7f58870b1529d8889b7ca1fca,05381fedfab349d7f58870b1529d8889b7ca1fca,Fixed the inverted empty character class handling test.
dmajda,2010-04-12 17:03:11,https://api.github.com/repos/pegjs/pegjs/git/commits/e63f64a3d522fedc5de66da0189118b3e939e660,e63f64a3d522fedc5de66da0189118b3e939e660,"Make the generated parsers standalone (no runtime is required).

This and also speeds up the benchmark suite execution by 7.83 % on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   26.17 kB/s   28.16 kB/s
      2   26.05 kB/s   28.16 kB/s
      3   25.99 kB/s   28.10 kB/s
      4   26.13 kB/s   28.11 kB/s
      5   26.14 kB/s   28.07 kB/s
---------------------------------
Average   26.10 kB/s   28.14 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.2 (KHTML, like Gecko) Chrome/5.0.342.7 Safari/533.2"
dmajda,2010-04-11 15:02:53,https://api.github.com/repos/pegjs/pegjs/git/commits/3f85a9ca8479cb6eef3c7929a4702b0834d99498,3f85a9ca8479cb6eef3c7929a4702b0834d99498,Regenerated the metaparser with one-level rule cache.
dmajda,2010-04-11 14:46:45,https://api.github.com/repos/pegjs/pegjs/git/commits/24d38f74b93aa1d2947a158a43cac617190f12fe,24d38f74b93aa1d2947a158a43cac617190f12fe,"Replaced two-level rule cache with a one-level one.

This leads to simpler code and also speeds up the benchmark suite execution by
5,89 % on V8.

Detailed results (benchmark suite totals):

---------------------------------
 Test #     Before       After
---------------------------------
      1   24,70 kB/s   26,14 kB/s
      2   24,49 kB/s   26,05 kB/s
      3   24,67 kB/s   25,99 kB/s
      4   24,65 kB/s   26,13 kB/s
      5   24,71 kB/s   26,14 kB/s
---------------------------------
Average   24,64 kB/s   26.10 kB/s
---------------------------------

Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.2 (KHTML, like Gecko) Chrome/5.0.342.7 Safari/533.2"
dmajda,2010-04-11 13:34:30,https://api.github.com/repos/pegjs/pegjs/git/commits/74830d4f8f1d7d215c0b60c1ff31f823dc520822,74830d4f8f1d7d215c0b60c1ff31f823dc520822,Sort expected strings in the error messages.
dmajda,2010-04-11 13:30:02,https://api.github.com/repos/pegjs/pegjs/git/commits/37521cffa5e3f92676daadec80e641292489fa1e,37521cffa5e3f92676daadec80e641292489fa1e,Error messages now do not contain duplicities.
dmajda,2010-04-11 12:48:52,https://api.github.com/repos/pegjs/pegjs/git/commits/714512f23221b8c91711371ef1a6f716c2ba68ab,714512f23221b8c91711371ef1a6f716c2ba68ab,Implemented generic AST node extension mechanism.
dmajda,2010-04-11 12:16:38,https://api.github.com/repos/pegjs/pegjs/git/commits/1aa3d8e07ed7217dc6d44b07ba5a71cc9a22cf72,1aa3d8e07ed7217dc6d44b07ba5a71cc9a22cf72,Implemented a nop (no operation) function and used it on few places.
dmajda,2010-04-11 11:18:23,https://api.github.com/repos/pegjs/pegjs/git/commits/6a194e8f683ce6ca9c60ac74ebe0ca4489a1e0f3,6a194e8f683ce6ca9c60ac74ebe0ca4489a1e0f3,Added example JavaScript parser.
dmajda,2010-04-11 10:41:25,https://api.github.com/repos/pegjs/pegjs/git/commits/16f238a64daeb3bde04ae661b53e6e8993e98064,16f238a64daeb3bde04ae661b53e6e8993e98064,Fixed comment heading.
dmajda,2010-04-11 09:24:36,https://api.github.com/repos/pegjs/pegjs/git/commits/3291c70d97de9f521263eb1f566ed0a5d561730e,3291c70d97de9f521263eb1f566ed0a5d561730e,"Added \uFEFF (BOM) to the definition of whitespace in the metagrammar.

The Rhino bug that prevented inclusion of \uFEFF among the whitespace characters
is no longer relevant here because we compile character classes into regexps
now, which avoids the infinite recursion."
dmajda,2010-04-11 09:18:42,https://api.github.com/repos/pegjs/pegjs/git/commits/383c5acaa6021a762f4f27ba50f3978ea880d506,383c5acaa6021a762f4f27ba50f3978ea880d506,"Replaced \xA0 by \u00A0 in the whitespace definition in the metagrammar.

This is purely stylistic change."
dmajda,2010-04-11 09:15:40,https://api.github.com/repos/pegjs/pegjs/git/commits/db616f0b777e845260871cff85bb3d73106e06c1,db616f0b777e845260871cff85bb3d73106e06c1,"Made the ""version"" variable scope smaller."
dmajda,2010-04-11 09:05:44,https://api.github.com/repos/pegjs/pegjs/git/commits/c5cc545209b76df0cb76a50d4261385f2f030e5f,c5cc545209b76df0cb76a50d4261385f2f030e5f,"""rake metaparser"" and ""rake minify"" now always generate the target files.

Until now, these tasks looked at the file times and generated the target files
only when they were older than the source files. This caused problems when I
mainupulated the lib/metagrammar.* files by hand sometimes, replaced them from
backups after screw-ups, etc."
dmajda,2010-04-11 08:59:13,https://api.github.com/repos/pegjs/pegjs/git/commits/51232fd652de0d482a84dba9ce9be01d837452ee,51232fd652de0d482a84dba9ce9be01d837452ee,I don't like the .txt extension after all :-)
dmajda,2010-04-09 16:29:43,https://api.github.com/repos/pegjs/pegjs/git/commits/9488291ac058a8ceef8a0268be3440ba55ef7d47,9488291ac058a8ceef8a0268be3440ba55ef7d47,"Converted README to GitHub Flavored Markdown.

Also added "".txt"" extension to VERSION and LICENSE for more consistency."
dmajda,2010-04-09 15:30:32,https://api.github.com/repos/pegjs/pegjs/git/commits/85bd98d84690d05a435cab3dbbc48517899e5563,85bd98d84690d05a435cab3dbbc48517899e5563,Replaced .hgignore with .gitignore.
dmajda,2010-03-29 18:18:54,https://api.github.com/repos/pegjs/pegjs/git/commits/cfd46b622a4abc1abab095d87e4e91d1cc800e1a,cfd46b622a4abc1abab095d87e4e91d1cc800e1a,Added a benchmark suite.
dmajda,2010-03-29 10:44:32,https://api.github.com/repos/pegjs/pegjs/git/commits/751a33715d9b02aa3515455b8b8e9b5d4cc390b7,751a33715d9b02aa3515455b8b8e9b5d4cc390b7,Added example CSS parser.
dmajda,2010-03-22 11:18:58,https://api.github.com/repos/pegjs/pegjs/git/commits/a1adbf0607157abdd097152d2550fc8761771bea,a1adbf0607157abdd097152d2550fc8761771bea,Added example JSON parser.
dmajda,2010-03-21 14:48:28,https://api.github.com/repos/pegjs/pegjs/git/commits/20e230ca0e9a193f27956289d125abbb3ec73ef4,20e230ca0e9a193f27956289d125abbb3ec73ef4,Killed *MatchFailure classes => simpler code.
dmajda,2010-03-21 14:24:03,https://api.github.com/repos/pegjs/pegjs/git/commits/f87bcd6332352cfa19b4f709229a4cef9ee36ab4,f87bcd6332352cfa19b4f709229a4cef9ee36ab4,Added tests for error messages displayed when a character class match fails.
dmajda,2010-03-20 11:08:45,https://api.github.com/repos/pegjs/pegjs/git/commits/4f4bb34dedacd79b0ac41d8d0e160161abce0537,4f4bb34dedacd79b0ac41d8d0e160161abce0537,Implemented negative character classes (e.g. [^a-z]).
dmajda,2010-03-20 10:51:31,https://api.github.com/repos/pegjs/pegjs/git/commits/b3381b9352e3d258c30b6779fd747a5956daf322,b3381b9352e3d258c30b6779fd747a5956daf322,Fixed test name.
dmajda,2010-03-20 10:24:04,https://api.github.com/repos/pegjs/pegjs/git/commits/22d2ac8ac2c63be8f488d004b350342673669a54,22d2ac8ac2c63be8f488d004b350342673669a54,Rewrote implementation of classes to be regexp-based.
dmajda,2010-03-19 16:10:54,https://api.github.com/repos/pegjs/pegjs/git/commits/56ffa94cc73a6aed603ae33ba4325d7a7f2a504f,56ffa94cc73a6aed603ae33ba4325d7a7f2a504f,PEG.buildParser reports left recursion (both direct and indirect).
dmajda,2010-03-19 15:36:43,https://api.github.com/repos/pegjs/pegjs/git/commits/a3ecf768ca2ecf09e73fbb3cd7b02757b6339336,a3ecf768ca2ecf09e73fbb3cd7b02757b6339336,Fixed missing referenced rules test.
dmajda,2010-03-19 10:15:53,https://api.github.com/repos/pegjs/pegjs/git/commits/3a65316416cb30585c4c0a99213d828a5b586a96,3a65316416cb30585c4c0a99213d828a5b586a96,PEG.buildParser reports missing referenced rules.
dmajda,2010-03-19 09:38:46,https://api.github.com/repos/pegjs/pegjs/git/commits/6bbd88088b831472a27ac90d9cff79e8dd798f30,6bbd88088b831472a27ac90d9cff79e8dd798f30,Implemented and used PEG.ArrayUtils.each.
dmajda,2010-03-19 09:38:32,https://api.github.com/repos/pegjs/pegjs/git/commits/eae48caf9157e3c9d7d48d5f695184ab63720b24,eae48caf9157e3c9d7d48d5f695184ab63720b24,Regenerated the grammar parser.
dmajda,2010-03-19 09:28:24,https://api.github.com/repos/pegjs/pegjs/git/commits/2e94dce94459330ae8e989f307a6cbfd00e5ba32,2e94dce94459330ae8e989f307a6cbfd00e5ba32,"Improved tests of the ""arithmetics"" grammar."
dmajda,2010-03-19 09:12:35,https://api.github.com/repos/pegjs/pegjs/git/commits/6f510a033654a590fe3e5cc5719abac4544aa25a,6f510a033654a590fe3e5cc5719abac4544aa25a,"The cache does not remember match length but next position after the match.

This leads to simpler and faster code because it avoids one addition and
subtraction."
dmajda,2010-03-18 19:06:55,https://api.github.com/repos/pegjs/pegjs/git/commits/8f2aa1e834c936fda7830b731046edc601131383,8f2aa1e834c936fda7830b731046edc601131383,Fixed a bug in the example grammar where integers beginning with 0 were parsed as octal.
dmajda,2010-03-18 19:06:05,https://api.github.com/repos/pegjs/pegjs/git/commits/aff85fd228c1573ad3a75fe86a504a9ee9c7273f,aff85fd228c1573ad3a75fe86a504a9ee9c7273f,Removed subtraction and division from the example grammar because of wrong associativity.
dmajda,2010-03-14 17:49:01,https://api.github.com/repos/pegjs/pegjs/git/commits/c35417c3451542f04138a3dc256276f3316f0d1e,c35417c3451542f04138a3dc256276f3316f0d1e,Added tag 0.3 for changeset 6c4975072e03
dmajda,2010-03-14 17:48:54,https://api.github.com/repos/pegjs/pegjs/git/commits/f4e0d0a5ce655bab38660ae04074f45707f8eb21,f4e0d0a5ce655bab38660ae04074f45707f8eb21,Updated version to 0.3.
dmajda,2010-03-14 17:46:53,https://api.github.com/repos/pegjs/pegjs/git/commits/9d239db2d60469bb9915708c48db27813b78a2f4,9d239db2d60469bb9915708c48db27813b78a2f4,Simplified the example arithmetics grammar once more + addded comment.
dmajda,2010-03-14 14:03:14,https://api.github.com/repos/pegjs/pegjs/git/commits/8f3fa8436dd19ee1225a8189a3748205461e0d61,8f3fa8436dd19ee1225a8189a3748205461e0d61,Wrote README.
dmajda,2010-03-13 14:56:53,https://api.github.com/repos/pegjs/pegjs/git/commits/796c98bf8e458d9c7b25ff6a03506abf93cd8381,796c98bf8e458d9c7b25ff6a03506abf93cd8381,Changed order of parameters in the SyntaxError constructor to make creating error with unknown location easier. Also fixes bug with reporting of invalid ranges such as [b-a] in the metagrammar.
dmajda,2010-03-13 14:36:04,https://api.github.com/repos/pegjs/pegjs/git/commits/00a258d24622e75b7690daca22544f3f565540bc,00a258d24622e75b7690daca22544f3f565540bc,"Renamed ""humanName"" to ""displayName""."
dmajda,2010-03-13 14:33:03,https://api.github.com/repos/pegjs/pegjs/git/commits/bdfc2a57e77f20c2e60dc6127b84252839871791,bdfc2a57e77f20c2e60dc6127b84252839871791,Avoid ugliness in QUnit output.
dmajda,2010-03-13 14:23:59,https://api.github.com/repos/pegjs/pegjs/git/commits/d3104742d91800ffbbcbc0d39aad27fdf1f7eb67,d3104742d91800ffbbcbc0d39aad27fdf1f7eb67,Fixed --start vs. --start-rule inconsistency between help and actual option processing code.
dmajda,2010-03-13 14:18:57,https://api.github.com/repos/pegjs/pegjs/git/commits/a43d1b33e35654c6f10f41ee81c095ecd781cea9,a43d1b33e35654c6f10f41ee81c095ecd781cea9,"Bootstrapped the grammar parser, yay! I should have done this long ago."
dmajda,2010-03-13 08:52:54,https://api.github.com/repos/pegjs/pegjs/git/commits/1ee0049b08e281f88b8b280c8f3dda403536ed34,1ee0049b08e281f88b8b280c8f3dda403536ed34,Changed standard grammar extension from .peg to .pegjs (it is more specific).
dmajda,2010-03-13 08:50:56,https://api.github.com/repos/pegjs/pegjs/git/commits/0a5788b50e280ef2488e5c07e399770b65d93844,0a5788b50e280ef2488e5c07e399770b65d93844,"Fixed typo in help: ""parserVar"" -> ""parser_var""."
dmajda,2010-03-13 08:49:06,https://api.github.com/repos/pegjs/pegjs/git/commits/636ceb2719680528ea355b1d72fa9d942b80b3c0,636ceb2719680528ea355b1d72fa9d942b80b3c0,Metagrammar recognizes JavaScript-like comments.
dmajda,2010-03-12 13:27:22,https://api.github.com/repos/pegjs/pegjs/git/commits/eade133ea6e6ab2d6d76b48baeabc2693c5a009c,eade133ea6e6ab2d6d76b48baeabc2693c5a009c,Simplified the example arithmetics grammar.
dmajda,2010-03-08 14:22:03,https://api.github.com/repos/pegjs/pegjs/git/commits/d8105802320f02f9a199dce8b5373cd2f93ee623,d8105802320f02f9a199dce8b5373cd2f93ee623,Added tag 0.2.1 for changeset bf988d46416b
dmajda,2010-03-08 14:21:58,https://api.github.com/repos/pegjs/pegjs/git/commits/1b8e9f55fdfd3a701bf6991340c1ead5d337c105,1b8e9f55fdfd3a701bf6991340c1ead5d337c105,Updated version to 0.2.1.
dmajda,2010-03-08 14:21:11,https://api.github.com/repos/pegjs/pegjs/git/commits/74507d5c121f81840410173945bc0b535b30420c,74507d5c121f81840410173945bc0b535b30420c,"Added ""pegjs-"" prefix to the name of the minified runtime file."
dmajda,2010-03-08 14:17:53,https://api.github.com/repos/pegjs/pegjs/git/commits/4d9a31eb996fae4117451c8ba0544c74d3f16cde,4d9a31eb996fae4117451c8ba0544c74d3f16cde,Added tag 0.2 for changeset 65f6b56a3e6c
dmajda,2010-03-08 14:17:49,https://api.github.com/repos/pegjs/pegjs/git/commits/ea8e25c58515c3b864dd8664995f9eafa0907fa3,ea8e25c58515c3b864dd8664995f9eafa0907fa3,Updated version to 0.2.
dmajda,2010-03-08 14:16:35,https://api.github.com/repos/pegjs/pegjs/git/commits/09c7fb4f3330de2717d942c3620925b069d45366,09c7fb4f3330de2717d942c3620925b069d45366,Added Rakefile that builds minified runtime using Google Closure Compiler API.
dmajda,2010-03-08 13:44:46,https://api.github.com/repos/pegjs/pegjs/git/commits/7bf51eddf0433ef25a3676dbdc6ff467fb990685,7bf51eddf0433ef25a3676dbdc6ff467fb990685,Removed trailing commas in object initializers (Google Closure does not like them).
dmajda,2010-03-08 13:22:13,https://api.github.com/repos/pegjs/pegjs/git/commits/38dac2382cf74b3225f1c2aa935f36dcc17b2b18,38dac2382cf74b3225f1c2aa935f36dcc17b2b18,Added tag 0.1 for changeset f28e878f6afe
dmajda,2010-03-08 11:15:52,https://api.github.com/repos/pegjs/pegjs/git/commits/452243d450f5ce4ddd176a8d8e1ea3137e82f617,452243d450f5ce4ddd176a8d8e1ea3137e82f617,Improved error reporting for predicates a bit.
dmajda,2010-03-08 10:37:03,https://api.github.com/repos/pegjs/pegjs/git/commits/69906e9730114531a1e124396fb1f66423b76363,69906e9730114531a1e124396fb1f66423b76363,Do not recognize \uFEFF as whitespace in the metagrammar since it does not work with Rhino.
dmajda,2010-03-08 08:58:23,https://api.github.com/repos/pegjs/pegjs/git/commits/bddb65ab9bb0cf599bfd73db8a58be5f01e206f8,bddb65ab9bb0cf599bfd73db8a58be5f01e206f8,Improved & simplified error handling code.
dmajda,2010-03-07 20:14:07,https://api.github.com/repos/pegjs/pegjs/git/commits/b86a219c86b5b4c684fe243c3a19babb65f9d605,b86a219c86b5b4c684fe243c3a19babb65f9d605,Ensure that the same grammar and start rule always generate exactly the same parser.
dmajda,2010-03-07 19:41:02,https://api.github.com/repos/pegjs/pegjs/git/commits/c3dd696a3e915bb0399e7e53a8ffa7fd1715f634,c3dd696a3e915bb0399e7e53a8ffa7fd1715f634,Initial commit.
