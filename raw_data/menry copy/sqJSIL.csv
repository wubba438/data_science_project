JSIL,CIL to Javascript Compiler
username,timestamp,url,sha,message
kg,2017-03-09 09:59:50,https://api.github.com/repos/sq/JSIL/git/commits/1d57d5427c87ab92ffa3ca4b82429cd7509796ba,1d57d5427c87ab92ffa3ca4b82429cd7509796ba,"Merge pull request #1042 from mdaveynis/AsyncImprovements

Async improvements"
mdaveynis,2017-03-08 05:01:55,https://api.github.com/repos/sq/JSIL/git/commits/8cec982d3c286d7126a958565fa45ebfe40cc6e3,8cec982d3c286d7126a958565fa45ebfe40cc6e3,Fixed calling awaiter with Task.FromResult
mdaveynis,2017-03-08 01:47:19,https://api.github.com/repos/sq/JSIL/git/commits/f073ad32f74a8088307e695d6bbc84b81afd35a3,f073ad32f74a8088307e695d6bbc84b81afd35a3,Fixed formatting.
kg,2017-02-25 21:35:45,https://api.github.com/repos/sq/JSIL/git/commits/d1914faf9f5d4b5bdbb550ad614ca2e61a47e148,d1914faf9f5d4b5bdbb550ad614ca2e61a47e148,"Merge pull request #1038 from iskiselev/Unsigned_Comparison_1037

Support for unsigned comparison"
kg,2017-02-24 03:57:46,https://api.github.com/repos/sq/JSIL/git/commits/2751b07d9264bad996a3b8c0d19a7b3df704c9fa,2751b07d9264bad996a3b8c0d19a7b3df704c9fa,"Merge pull request #1036 from SabaSoftware/Assembly_GetType_1035

Assembly.GetType fixed"
invalid-email-address,2017-02-24 02:03:48,https://api.github.com/repos/sq/JSIL/git/commits/0cfbf85153730c7e1bec08b949d8287363162245,0cfbf85153730c7e1bec08b949d8287363162245,Fixed failed test.
invalid-email-address,2017-02-24 00:13:31,https://api.github.com/repos/sq/JSIL/git/commits/9d1c35f0f72f588f6b362fceb927d4e95146597b,9d1c35f0f72f588f6b362fceb927d4e95146597b,Assembly.GetType fixed (#1035)
kg,2016-11-02 21:33:20,https://api.github.com/repos/sq/JSIL/git/commits/855b75391c5e1304d5f012e3502b135a676651e5,855b75391c5e1304d5f012e3502b135a676651e5,"Merge pull request #1027 from iskiselev/OutOfProcessBuild

Use same executable for out-of-process build"
iskiselev,2016-11-02 21:30:58,https://api.github.com/repos/sq/JSIL/git/commits/cbfb36a6ba5311181313de47fa8f4cb8bfdfef03,cbfb36a6ba5311181313de47fa8f4cb8bfdfef03,Use same executable for out-of-process build. Fix #1022.
kg,2016-07-22 20:56:48,https://api.github.com/repos/sq/JSIL/git/commits/b4f2ff8867a05158727bbd58e7c56b3fe0b009e7,b4f2ff8867a05158727bbd58e7c56b3fe0b009e7,"Merge pull request #1014 from wklingler/StringInsert

String insert"
iskiselev,2016-07-20 23:25:55,https://api.github.com/repos/sq/JSIL/git/commits/9ab152847aa4400bf9a5fc116b61c95416f2acba,9ab152847aa4400bf9a5fc116b61c95416f2acba,"Merge pull request #1011 from iskiselev/ArrayTypeResolve_1008_Test

Change test-case for mono compatibility"
iskiselev,2016-07-19 20:55:58,https://api.github.com/repos/sq/JSIL/git/commits/01e47404c1687bf2d4123d4fb3d144b654a6cf4f,01e47404c1687bf2d4123d4fb3d144b654a6cf4f,Change test-case for mono compatibility.
kg,2016-07-19 17:35:55,https://api.github.com/repos/sq/JSIL/git/commits/c88b89681487b50764967875c3071daa125802c9,c88b89681487b50764967875c3071daa125802c9,"Merge pull request #1010 from iskiselev/IsInstanceOfType

Type.IsInstanceOfType implemented"
kg,2016-07-19 17:35:44,https://api.github.com/repos/sq/JSIL/git/commits/5af92e67efe14af15cfcb05e9b673a2a216a4d45,5af92e67efe14af15cfcb05e9b673a2a216a4d45,"Merge pull request #1009 from iskiselev/ArrayTypeResolve_1008

Correct type resolution for arrays"
iskiselev,2016-07-19 17:29:09,https://api.github.com/repos/sq/JSIL/git/commits/042553a2a45b133b801862cbd89081818b127f4e,042553a2a45b133b801862cbd89081818b127f4e,Correct type resolution for arrays. Fix #1008.
iskiselev,2016-07-18 18:07:03,https://api.github.com/repos/sq/JSIL/git/commits/e1807c1e27aec7056a268fa523d8bbe4ab9020e3,e1807c1e27aec7056a268fa523d8bbe4ab9020e3,Type.IsInstanceOfType implemented.
kg,2016-07-17 19:14:40,https://api.github.com/repos/sq/JSIL/git/commits/949a993644eb7a0d858306db009154ce5ac25017,949a993644eb7a0d858306db009154ce5ac25017,"Merge pull request #994 from iskiselev/d.ts

Variance support for d.ts"
kg,2016-07-17 19:14:14,https://api.github.com/repos/sq/JSIL/git/commits/d37c9322304374a39e80a0b123e85078fdebcbae,d37c9322304374a39e80a0b123e85078fdebcbae,"Merge pull request #984 from iskiselev/ToBase64CharArray

System.Convert.ToBase64CharArray"
kg,2016-07-17 19:13:14,https://api.github.com/repos/sq/JSIL/git/commits/0e728221a46e7541149201419ef5c8fe31bd317b,0e728221a46e7541149201419ef5c8fe31bd317b,"Merge pull request #927 from mwh/StringFile

Implement variants on string operations, and File.OpenText"
kg,2016-07-01 12:14:50,https://api.github.com/repos/sq/JSIL/git/commits/9e719a6eaab3972a46bb069363d855f68632a595,9e719a6eaab3972a46bb069363d855f68632a595,"Merge pull request #998 from iskiselev/NullableUnary_997

Fixed translation of unary operations with nullable"
iskiselev,2016-07-01 05:51:48,https://api.github.com/repos/sq/JSIL/git/commits/bb96aae4987906fa6c292d67aa1692180db7a33b,bb96aae4987906fa6c292d67aa1692180db7a33b,Fixed translation of unary operations with nullable (#997).
iskiselev,2016-06-15 04:43:02,https://api.github.com/repos/sq/JSIL/git/commits/635a3e1abaa02223bd88ec7dfc5c53951be5f34c,635a3e1abaa02223bd88ec7dfc5c53951be5f34c,Variance support.
kg,2016-06-09 00:12:46,https://api.github.com/repos/sq/JSIL/git/commits/c924d3c7b652cee1ce571c5e15e811b8b5fed219,c924d3c7b652cee1ce571c5e15e811b8b5fed219,"Merge pull request #988 from iskiselev/d.ts

TypeScript DefinitelyTyped support"
iskiselev,2016-05-28 04:32:54,https://api.github.com/repos/sq/JSIL/git/commits/b6317cf58ba03d0818e57087bbd57ea8e84f9c36,b6317cf58ba03d0818e57087bbd57ea8e84f9c36,Interface method runtime dispatcher.
iskiselev,2016-05-27 22:20:17,https://api.github.com/repos/sq/JSIL/git/commits/9f156c66faa858485e428c2bf6ce623a1587f742,9f156c66faa858485e428c2bf6ce623a1587f742,Emit interface methods.
iskiselev,2016-05-26 03:02:22,https://api.github.com/repos/sq/JSIL/git/commits/80fb70c39a73a329e36ed8300a969908c96d88ea,80fb70c39a73a329e36ed8300a969908c96d88ea,Fixed JSIL.mscorlib naming.
iskiselev,2016-05-26 00:00:20,https://api.github.com/repos/sq/JSIL/git/commits/0040d36c1b9b8160873428f2f55a0a630895368d,0040d36c1b9b8160873428f2f55a0a630895368d,Fixed broken test.
kg,2016-05-13 02:15:04,https://api.github.com/repos/sq/JSIL/git/commits/5c92bdb68373116bb5ca0aff229d00949b59414d,5c92bdb68373116bb5ca0aff229d00949b59414d,"Merge pull request #986 from iskiselev/ArrayJSON

Array JSON.stringify interop fixed"
iskiselev,2016-05-12 22:09:13,https://api.github.com/repos/sq/JSIL/git/commits/b491d1b6bd324fddc39b763b443a4dfff7cf7f05,b491d1b6bd324fddc39b763b443a4dfff7cf7f05,"Use JSIL.SetValueProperty for ""__ElementType__"" array property."
kg,2016-05-12 04:27:34,https://api.github.com/repos/sq/JSIL/git/commits/74dfc0ae4711867d8b91b3239ba11b237b7a40af,74dfc0ae4711867d8b91b3239ba11b237b7a40af,"Merge pull request #985 from iskiselev/DateTime_511

Fixed DateTime.Now and DateTime.UtcNow"
iskiselev,2016-05-11 23:27:46,https://api.github.com/repos/sq/JSIL/git/commits/eac3eac05b34d3e2166a468c9fd0de1594daf9ac,eac3eac05b34d3e2166a468c9fd0de1594daf9ac,Fixed DateTime.Now and DateTime.UtcNow (#511)
iskiselev,2016-05-11 07:53:40,https://api.github.com/repos/sq/JSIL/git/commits/945e489006776e886b03d51652e6ff29f3778c1e,945e489006776e886b03d51652e6ff29f3778c1e,Support for converting toBase64CharArray
iskiselev,2016-05-10 23:45:29,https://api.github.com/repos/sq/JSIL/git/commits/bb91fa06a51ca73073a426b3805c5c1b6f262c46,bb91fa06a51ca73073a426b3805c5c1b6f262c46,Initial .d.ts support.
kg,2016-05-09 21:17:55,https://api.github.com/repos/sq/JSIL/git/commits/563a5529a8b042b63e7cd7d2d6f7bdf6275e9c8b,563a5529a8b042b63e7cd7d2d6f7bdf6275e9c8b,"Merge pull request #982 from iskiselev/Boxing_981

Fixed incorrect numeric type boxing"
kg,2016-05-09 21:17:40,https://api.github.com/repos/sq/JSIL/git/commits/8990192e294c416ccfb32afe32fd61b03a6d3c98,8990192e294c416ccfb32afe32fd61b03a6d3c98,"Merge pull request #980 from iskiselev/Signature_Fallback

Signature inline cache for interface with fallback"
kg,2016-05-09 21:17:27,https://api.github.com/repos/sq/JSIL/git/commits/4fd4c29392507b7470a3a268bf3fa901c7f773b8,4fd4c29392507b7470a3a268bf3fa901c7f773b8,"Merge pull request #979 from iskiselev/VS_Build_Fix

Fixed clean build/rebuild under VS, packages updated"
iskiselev,2016-05-05 20:50:25,https://api.github.com/repos/sq/JSIL/git/commits/b196d556685803f70d6b058e79065ee705e589ed,b196d556685803f70d6b058e79065ee705e589ed,Fixed incorrect numeric type boxing (#981).
iskiselev,2016-05-02 20:58:55,https://api.github.com/repos/sq/JSIL/git/commits/32b8894ce3ca963dc1e2b2dae61b67f69d8e32d1,32b8894ce3ca963dc1e2b2dae61b67f69d8e32d1,"NuGet packeges updated:
Node.js/0.12.7
Npm/1.4.15.2
NoGit/0.0.8
FSharp.Compiler.CodeDom/1.0.0.1"
iskiselev,2016-04-30 02:17:04,https://api.github.com/repos/sq/JSIL/git/commits/a4b2cb7b302f3096e7ad6728f6e0970cf7e1cfec,a4b2cb7b302f3096e7ad6728f6e0970cf7e1cfec,Fixed build in VS through adding to sln project dependecies.
iskiselev,2016-04-30 01:23:35,https://api.github.com/repos/sq/JSIL/git/commits/bb48ee4c6cee0af657847b761e7c9a2c670a7d35,bb48ee4c6cee0af657847b761e7c9a2c670a7d35,Use inlineCache with fallback methods (#978).
kg,2016-04-29 04:33:29,https://api.github.com/repos/sq/JSIL/git/commits/9bf1ba0743b03305260cdb175e395f9a1e7afb63,9bf1ba0743b03305260cdb175e395f9a1e7afb63,"Merge pull request #977 from iskiselev/Signatures

Method signatures cache improvements"
iskiselev,2016-04-28 23:54:36,https://api.github.com/repos/sq/JSIL/git/commits/c0f1d48bc322bcf8318d7373dc703f8aae525d51,c0f1d48bc322bcf8318d7373dc703f8aae525d51,Broken tests are fixed. Fixed recursion on generic resolution (resolve each generic only once).
iskiselev,2016-04-28 22:44:07,https://api.github.com/repos/sq/JSIL/git/commits/c7787a040c59a4caae46f7911e5cde48fb049d7e,c7787a040c59a4caae46f7911e5cde48fb049d7e,Corrected default settings value so that signature changes were hidden with default settings.
kg,2016-04-28 19:44:10,https://api.github.com/repos/sq/JSIL/git/commits/0c88b6c8a821b0549e15bccbf3a41c09ed89f526,0c88b6c8a821b0549e15bccbf3a41c09ed89f526,"Merge pull request #976 from iskiselev/Fix_772

Correct fix for warning on roslyn-compiled struct field access."
iskiselev,2016-04-28 19:15:09,https://api.github.com/repos/sq/JSIL/git/commits/af212268b12a48b19cae2545adac8d99a4e54352,af212268b12a48b19cae2545adac8d99a4e54352,Correct fix for warning on roslyn-compiled struct field access (#772).
kg,2016-04-28 02:31:49,https://api.github.com/repos/sq/JSIL/git/commits/7442e744d1712c9d785dd22eddb0d28abdc1c5b8,7442e744d1712c9d785dd22eddb0d28abdc1c5b8,"Merge pull request #975 from iskiselev/ApplyDefaults_948

Apply default config after all other configurations already loaded"
kg,2016-04-28 02:31:29,https://api.github.com/repos/sq/JSIL/git/commits/5f2fc6444a531c858abcc428afa278bc6b30ee30,5f2fc6444a531c858abcc428afa278bc6b30ee30,"Merge pull request #974 from iskiselev/InlineManifest

Assembly wrap in IIFE with references"
kg,2016-04-28 02:31:02,https://api.github.com/repos/sq/JSIL/git/commits/b22950daf3a52c69f91d4f9f005c6564971dd0bf,b22950daf3a52c69f91d4f9f005c6564971dd0bf,"Merge pull request #973 from iskiselev/Fix_772_862

Fix false warning during compilation"
iskiselev,2016-04-28 02:04:51,https://api.github.com/repos/sq/JSIL/git/commits/9dbd9012efdf1017af5dff510664beb1d914e1a0,9dbd9012efdf1017af5dff510664beb1d914e1a0,Apply default config after all other configurations already loaded. Fix #948.
iskiselev,2016-04-27 23:43:10,https://api.github.com/repos/sq/JSIL/git/commits/71c7436843d0afe9dec3ae1cbadbc616b4bb89b5,71c7436843d0afe9dec3ae1cbadbc616b4bb89b5,Fixed warning on roslyn-compiled struct field access (#772).
iskiselev,2016-04-27 23:40:45,https://api.github.com/repos/sq/JSIL/git/commits/e00ee5f31779d709b85874af3f94e53f84e95642,e00ee5f31779d709b85874af3f94e53f84e95642,Fixed adding null node to JsAST (#862).
iskiselev,2016-04-27 22:31:41,https://api.github.com/repos/sq/JSIL/git/commits/a78f48401d6ae90be1284a58e63c4b4a9b8f34a0,a78f48401d6ae90be1284a58e63c4b4a9b8f34a0,"Implemented assmebly wrap in IIFE with other assembly references included.
Feature hidden under InlineAssemblyReferences config parameter."
iskiselev,2016-04-19 22:44:04,https://api.github.com/repos/sq/JSIL/git/commits/5b47054a1f6971ce3393b9f6f32aa6140c7b1f10,5b47054a1f6971ce3393b9f6f32aa6140c7b1f10,"Implemented storing generic signature in global cache (#970),
hidden under CodeGenerator.PreferLocalCacheForGenericMethodSignatures
and CodeGenerator.PreferLocalCacheForGenericInterfaceMethodSignatures settings.

Implemented caching one method signature per signature versus per method (#896),
hidden under CodeGenerator.CacheOneMethodSignaturePerMethod setting.

Renamed setting and inverted setting:
CodeGenerator.CacheGenericMethodSignatures -> CodeGenerator.DisableGenericSignaturesLocalCache"
kg,2016-03-26 08:53:01,https://api.github.com/repos/sq/JSIL/git/commits/b779420037f7a10481c447d09063ae51e5de8e48,b779420037f7a10481c447d09063ae51e5de8e48,"Merge pull request #959 from iskiselev/SourceMapsImprovements

Improved source map generation"
kg,2016-03-25 22:48:45,https://api.github.com/repos/sq/JSIL/git/commits/433ade4f8974ed9f04c9629b941f40eea407f9e0,433ade4f8974ed9f04c9629b941f40eea407f9e0,"Merge pull request #958 from iskiselev/NoDynamicRefresh

Refresh: Dynamic on JS side"
iskiselev,2016-03-25 21:17:22,https://api.github.com/repos/sq/JSIL/git/commits/25c1a4d40e60105d0b9504d4e168e4663af5c200,25c1a4d40e60105d0b9504d4e168e4663af5c200,Added recursive submodules init for Travis.
iskiselev,2016-03-25 20:51:23,https://api.github.com/repos/sq/JSIL/git/commits/9ad5ac8200290fa0288577a2182c96cf8b9ee73d,9ad5ac8200290fa0288577a2182c96cf8b9ee73d,Removed broken using.
iskiselev,2016-03-25 20:47:54,https://api.github.com/repos/sq/JSIL/git/commits/febe551773110a80227198a019a01a1388119425,febe551773110a80227198a019a01a1388119425,Mono.Cecil path updated.
iskiselev,2016-03-25 20:33:21,https://api.github.com/repos/sq/JSIL/git/commits/0e51ac25f6b8830b6601e1a2950f324c7ceb7019,0e51ac25f6b8830b6601e1a2950f324c7ceb7019,Merge with CecilFixMove
iskiselev,2016-03-25 20:32:48,https://api.github.com/repos/sq/JSIL/git/commits/03b2b359ca681a7275f8dd5db4ccf8d15b804f73,03b2b359ca681a7275f8dd5db4ccf8d15b804f73,Updated to latest ILSpy.
iskiselev,2016-03-25 19:51:39,https://api.github.com/repos/sq/JSIL/git/commits/3918e9fd5e2c3796accf7bf87f9b6a6624d2118f,3918e9fd5e2c3796accf7bf87f9b6a6624d2118f,"Moved Cecil fix to JSIL: Don't allow duplicate paths in search directories list in assembly resolver
Fix threading issues with AssemblyResolver"
iskiselev,2016-03-24 20:52:43,https://api.github.com/repos/sq/JSIL/git/commits/0fb8107b2b8d6d0f3f7188ae6b660b707ab01105,0fb8107b2b8d6d0f3f7188ae6b660b707ab01105,"Improved source map generation.
Create new instance of JSIndirectVariable for each usage."
mwh,2015-12-11 01:14:16,https://api.github.com/repos/sq/JSIL/git/commits/211ab2db6c181f9b7027b85bb0c4ceb2a02a80c2,211ab2db6c181f9b7027b85bb0c4ceb2a02a80c2,"Implement Char.ConvertFromUtf32

This delegates behaviour to $jsilcore.fromCharCode."
mwh,2015-12-11 02:54:21,https://api.github.com/repos/sq/JSIL/git/commits/758ad97441925f5fcca4aaf27f92881b9735df62,758ad97441925f5fcca4aaf27f92881b9735df62,"Implement String.Normalize

JavaScript strings are not automatically normalised, so the no-op
Normalize method was not correct. ES6 includes a ""normalize"" method, so
use that when available and otherwise revert to the old behaviour. A new
static String method Normalize(NormalizationForm) is added to handle the
parameterised version of the instance method."
mwh,2015-12-11 02:53:22,https://api.github.com/repos/sq/JSIL/git/commits/77703e8fdc7992c872a4eb78be451e9e346dbe12,77703e8fdc7992c872a4eb78be451e9e346dbe12,Implement Char.IsHighSurrogate
mwh,2015-12-03 02:52:16,https://api.github.com/repos/sq/JSIL/git/commits/8f4d9809e6bd1f1ed0014e719407162076afb6c1,8f4d9809e6bd1f1ed0014e719407162076afb6c1,"Implement File.OpenText method

This just constructs a StreamReader."
mwh,2015-12-03 02:51:03,https://api.github.com/repos/sq/JSIL/git/commits/2408f2066115e85fe23ec24982931243814c2328,2408f2066115e85fe23ec24982931243814c2328,"Implement Char.ConvertToUtf32

This delegates behaviour to $jsilcore.charCodeAt."
mwh,2015-12-03 02:48:34,https://api.github.com/repos/sq/JSIL/git/commits/d0948e6f5dea370c5e01510a2c758cfdb0498f0a,d0948e6f5dea370c5e01510a2c758cfdb0498f0a,"Implement String.StartsWith(string, comparison)

Matching the comparison type semantics on JavaScript is tricky, but at
least for IgnoreCase it should be correct."
mwh,2015-11-30 22:15:04,https://api.github.com/repos/sq/JSIL/git/commits/2bebb935a283534db20ac2f2bb1b67e4907cdc29,2bebb935a283534db20ac2f2bb1b67e4907cdc29,"Implement String.Split with count

JavaScript's split method has a different treatment of the limit
parameter than the CLR, and so these overloads had not been implemented.
This commit retrofits the JavaScript version with the correct semantics
on single-delimiter splits, and raises an error if multiple delimiters
are provided with a count. The test case is updated to check this
behaviour.

Partially fixes #646."
kg,2016-01-02 12:02:26,https://api.github.com/repos/sq/JSIL/git/commits/960c211daa118eb9759c31bf65196d2d1cd09dc2,960c211daa118eb9759c31bf65196d2d1cd09dc2,"Merge pull request #914 from mwh/StringJoin

Implement String.Join(string, IEnumerable<string>)"
kg,2016-01-02 12:02:01,https://api.github.com/repos/sq/JSIL/git/commits/c5d62c1921a9c44aa2a6226e1810f81d8c08ca5e,c5d62c1921a9c44aa2a6226e1810f81d8c08ca5e,"Merge pull request #931 from iskiselev/RoslynSwitch_921

Sting switch statement on Roslyn"
kg,2016-01-02 12:01:41,https://api.github.com/repos/sq/JSIL/git/commits/27a91864b404267df364e80d5064fc858a848ade,27a91864b404267df364e80d5064fc858a848ade,"Merge pull request #934 from iskiselev/AsyncMethodSignatures_915

Async updates"
kg,2016-01-02 12:01:13,https://api.github.com/repos/sq/JSIL/git/commits/ad0373d50fb03ad2f7df7a3641119f50596e1c3b,ad0373d50fb03ad2f7df7a3641119f50596e1c3b,"Merge pull request #919 from mwh/EnumerableZipSkipLast

Define Enumerable.{Zip,Skip,Last}"
kg,2015-12-16 16:13:51,https://api.github.com/repos/sq/JSIL/git/commits/b6d8154fcb5f2b60a020a0998761972d0cbdd73b,b6d8154fcb5f2b60a020a0998761972d0cbdd73b,"Merge pull request #937 from iskiselev/TypeAlias_936

JSIL.MakeTypeAlias check for same assembly prototype"
iskiselev,2015-12-16 05:17:03,https://api.github.com/repos/sq/JSIL/git/commits/4a31f616941c33dec9912393f87d38e12ee6653c,4a31f616941c33dec9912393f87d38e12ee6653c,JSIL.MakeTypeAlias check for same assembly prototype. Fix #936.
iskiselev,2015-12-15 21:02:27,https://api.github.com/repos/sq/JSIL/git/commits/a8b978d5048af04c6df7d1c9ed6d093310e2238f,a8b978d5048af04c6df7d1c9ed6d093310e2238f,Test case updated (JS-interop returns objects).
iskiselev,2015-12-15 19:29:45,https://api.github.com/repos/sq/JSIL/git/commits/0262e2d071fa62c7f115ac1f40e4f40387e64fee,0262e2d071fa62c7f115ac1f40e4f40387e64fee,Use NoDynamic Meta branch. JS-interop returns objects.
mwh,2015-11-29 21:19:24,https://api.github.com/repos/sq/JSIL/git/commits/7743d6427d5b4e1fed3611c2efa1a4c6af3267e6,7743d6427d5b4e1fed3611c2efa1a4c6af3267e6,"Implement String.Join(string, IEnumerable<string>)

This String.Join overload was not declared, although JSIL.JoinEnumerable
would already do the job if asked. This commit connects the two and
updates the existing test to cover the IEnumerable<String> case as well.
The other String.Join overloads are untouched."
mwh,2015-11-29 21:16:36,https://api.github.com/repos/sq/JSIL/git/commits/99b2ff75390f4998780879127db6cb51332c1918,99b2ff75390f4998780879127db6cb51332c1918,"Implement Enumerable.Zip and test case

The Zip extension method combines two sequences into a JSIL
AbstractEnumerable."
mwh,2015-11-29 21:14:25,https://api.github.com/repos/sq/JSIL/git/commits/cba508366e9c691c750400c571409ad4c68b77f1,cba508366e9c691c750400c571409ad4c68b77f1,"Implement Enumerable.Last and test case

The two Enumerable.Last extension methods were not implemented. This
commit introduces both variants, with special-casing for IList<T>."
mwh,2015-11-30 20:08:05,https://api.github.com/repos/sq/JSIL/git/commits/3293cbb0199caec4d321ec7df93fd743562a3717,3293cbb0199caec4d321ec7df93fd743562a3717,"Implement Enumerable.Skip

The extension method is added to S.L.E.js, and a test case added."
iskiselev,2015-12-14 20:46:49,https://api.github.com/repos/sq/JSIL/git/commits/c9e10c4573c07f12232b6e1050870177f4af6bcd,c9e10c4573c07f12232b6e1050870177f4af6bcd,"Added method signatures for TrySetException and AggregateException invokes.
Workaround for #915."
kg,2015-12-12 14:10:39,https://api.github.com/repos/sq/JSIL/git/commits/6bcee52eda01ec5f9dede1c59de39c781feab100,6bcee52eda01ec5f9dede1c59de39c781feab100,"Merge pull request #933 from iskiselev/ArrayClone_932

Fixed Array.Clone with native JS arrays"
iskiselev,2015-12-11 20:03:41,https://api.github.com/repos/sq/JSIL/git/commits/1293691a223d75539f79f595ba39146078086649,1293691a223d75539f79f595ba39146078086649,Fixed Array.Clone with native JS arrays (#932).
iskiselev,2015-12-10 00:04:23,https://api.github.com/repos/sq/JSIL/git/commits/7c8cce5566351ca7c18c56b5b510df9e5a3d0851,7c8cce5566351ca7c18c56b5b510df9e5a3d0851,Sting switch statement on Roslyn (#921) fixed and test added.
kg,2015-12-07 04:12:12,https://api.github.com/repos/sq/JSIL/git/commits/134a15c11f7d178baa59ac8281b466b08b40f10a,134a15c11f7d178baa59ac8281b466b08b40f10a,"Merge pull request #926 from iskiselev/Travis_Fixes

Travis fixes"
iskiselev,2015-12-05 20:43:25,https://api.github.com/repos/sq/JSIL/git/commits/4728b82d937350395f7603998dff8a8b26e8b5da,4728b82d937350395f7603998dff8a8b26e8b5da,Added encoding fix for mono test execution.
iskiselev,2015-12-05 06:54:57,https://api.github.com/repos/sq/JSIL/git/commits/d7b9c6da66222b9630a21dc06649cd116a022bf3,d7b9c6da66222b9630a21dc06649cd116a022bf3,Added build finish time to artifact filename
iskiselev,2015-12-05 06:02:18,https://api.github.com/repos/sq/JSIL/git/commits/6e0bee96664d2f8f58f3dbdd1711b69d6f91615e,6e0bee96664d2f8f58f3dbdd1711b69d6f91615e,JSIL build artifact folder is configurable now.
iskiselev,2015-12-05 06:01:13,https://api.github.com/repos/sq/JSIL/git/commits/d1af3df53a279519c403b4917597a3f991f9c3b9,d1af3df53a279519c403b4917597a3f991f9c3b9,Disable app domains usage on Travis-CI.
kg,2015-12-05 01:45:21,https://api.github.com/repos/sq/JSIL/git/commits/d2cc0bd12d636180ab15b14b38236ee5fdd1485f,d2cc0bd12d636180ab15b14b38236ee5fdd1485f,"Merge pull request #879 from iskiselev/Issue866_Workaround

Initialize type if not yet on IsAssignableFrom."
kg,2015-12-05 01:45:08,https://api.github.com/repos/sq/JSIL/git/commits/177ff2c651c3fd10e0c5265617a18a378c319008,177ff2c651c3fd10e0c5265617a18a378c319008,"Merge pull request #907 from iskiselev/DCE_InterfacesFix

Fixed output with DCE enabled"
kg,2015-12-05 01:44:52,https://api.github.com/repos/sq/JSIL/git/commits/1ea762ddf79795603343c185504964309cd90cee,1ea762ddf79795603343c185504964309cd90cee,"Merge pull request #908 from iskiselev/StructGetHashCode

Correct implementation of GetHashCode for struct types."
kg,2015-12-05 01:44:09,https://api.github.com/repos/sq/JSIL/git/commits/211e83ba6aac7f9cf3db1e807de00df4a801773c,211e83ba6aac7f9cf3db1e807de00df4a801773c,"Merge pull request #924 from iskiselev/MonoTests

Mono tests"
iskiselev,2015-12-05 01:43:10,https://api.github.com/repos/sq/JSIL/git/commits/c34595598869e6e35efd6e7745943f639307bda9,c34595598869e6e35efd6e7745943f639307bda9,"Fixed supposed error for dynamic tests.
CallSiteVariablesEliminated test deleted.
VerbatimDynamic test moved to FailingTests class."
iskiselev,2015-12-04 23:46:00,https://api.github.com/repos/sq/JSIL/git/commits/b92048df9653caee1cd6985d0aa19df9060bb76e,b92048df9653caee1cd6985d0aa19df9060bb76e,"Make zip test artifacts quite, as Travis not always collapse it."
iskiselev,2015-12-04 22:45:15,https://api.github.com/repos/sq/JSIL/git/commits/b4c2839f3297d1cb63caab439378ae98524eedff,b4c2839f3297d1cb63caab439378ae98524eedff,Removed FailsOnMono from several tests as they should pass now.
iskiselev,2015-12-04 22:37:25,https://api.github.com/repos/sq/JSIL/git/commits/7f51adc557eb9b99226e2bbf89b566154bba9870,7f51adc557eb9b99226e2bbf89b566154bba9870,"Marked several delegate tests as FailsOnMono
due changing of delegates implementation in Mono 4.2. (#920)"
iskiselev,2015-12-04 22:33:10,https://api.github.com/repos/sq/JSIL/git/commits/4f04f6e1ff7852d09c9ca92f36ba650b2779ebd7,4f04f6e1ff7852d09c9ca92f36ba650b2779ebd7,Don't use multithreading by default (#713).
kg,2015-12-03 02:59:52,https://api.github.com/repos/sq/JSIL/git/commits/b82c2725ccdedce2e4c05eeb7655385cb165f519,b82c2725ccdedce2e4c05eeb7655385cb165f519,"Merge pull request #917 from mwh/StringBuilderInsert

Correct argument order for StringBuilder.Insert"
mwh,2015-12-03 02:54:22,https://api.github.com/repos/sq/JSIL/git/commits/57632ee0790d36ce42de22a8f8664ed149cfc721,57632ee0790d36ce42de22a8f8664ed149cfc721,"Correct argument order for StringBuilder.Insert

The internal implementation function expected (self, string, startIndex,
count), but the bound methods both passed (self, startIndex, string,
count). The implementation would then insert the index at (usually) the
start of the string, which was not the desired behaviour."
iskiselev,2015-11-23 22:00:34,https://api.github.com/repos/sq/JSIL/git/commits/47f1ab46f95db73e03c39652d478652928120c6e,47f1ab46f95db73e03c39652d478652928120c6e,"Dynamic custom processing on translation removed.
Use JS-side callsite/binders analogs.

Updated ILSpy version."
iskiselev,2015-11-29 23:15:24,https://api.github.com/repos/sq/JSIL/git/commits/d7b74912ab3aa8e7616168e4c9f79f22639ea406,d7b74912ab3aa8e7616168e4c9f79f22639ea406,Field type resolution for generic instanses fixed (#913). Test added.
kg,2015-11-18 01:50:32,https://api.github.com/repos/sq/JSIL/git/commits/3b2bc4cbf44e6d26e052d66296e870c5735fe731,3b2bc4cbf44e6d26e052d66296e870c5735fe731,"Merge pull request #910 from callanh/Issue876

Issue #876 - Fixed typo"
callanh,2015-11-18 01:47:00,https://api.github.com/repos/sq/JSIL/git/commits/a7a31a2ba72e08fa74ce80ddf6ee268bd86df20d,a7a31a2ba72e08fa74ce80ddf6ee268bd86df20d,Fixed typo
kg,2015-11-16 16:49:27,https://api.github.com/repos/sq/JSIL/git/commits/38b8dfa198dce51b5dc05d32610ed351000024e3,38b8dfa198dce51b5dc05d32610ed351000024e3,"Merge pull request #909 from iskiselev/Arrays

GetEnumerator for multidimensional arrays fixed."
iskiselev,2015-11-16 07:10:20,https://api.github.com/repos/sq/JSIL/git/commits/53ebf95b32aa5656ec58ba74a55d998570de16c2,53ebf95b32aa5656ec58ba74a55d998570de16c2,GetEnumerator for multidimensional arrays fixed.
kg,2015-11-16 05:13:10,https://api.github.com/repos/sq/JSIL/git/commits/472dabf710e223d3acd9f1c30ff3f8945c50bcfd,472dabf710e223d3acd9f1c30ff3f8945c50bcfd,"Merge pull request #906 from iskiselev/Arrays

Array types reimplemented"
iskiselev,2015-11-16 05:01:21,https://api.github.com/repos/sq/JSIL/git/commits/35ea9cac6a45523cf342ff0362d2edf4d9301b59,35ea9cac6a45523cf342ff0362d2edf4d9301b59,"Fixed ValueType.GetHashCode implementation, test case fixed for .Net compatibility."
iskiselev,2015-11-16 04:11:23,https://api.github.com/repos/sq/JSIL/git/commits/b1b5b040d9bea18d3c091ad6c8042b0908e2b57f,b1b5b040d9bea18d3c091ad6c8042b0908e2b57f,Use !JSIL.IsArray check instead of .LowerBounds for non-vector array checks.
iskiselev,2015-11-16 03:51:39,https://api.github.com/repos/sq/JSIL/git/commits/805dac9474d35f6086618920b3dd25f9ad133e2e,805dac9474d35f6086618920b3dd25f9ad133e2e,PR based changes.
kg,2015-11-16 03:14:28,https://api.github.com/repos/sq/JSIL/git/commits/5af613c30f29052448349c7c10c334fef3f9ac55,5af613c30f29052448349c7c10c334fef3f9ac55,"Merge pull request #905 from iskiselev/IConvertible

Raw types implements IConvertible"
iskiselev,2015-11-16 03:09:21,https://api.github.com/repos/sq/JSIL/git/commits/2ad5244ba60387f8909b6ae732608388a9ee62bf,2ad5244ba60387f8909b6ae732608388a9ee62bf,Test really committed.
iskiselev,2015-11-16 03:08:46,https://api.github.com/repos/sq/JSIL/git/commits/3bcf9e962c8279cf63ec05e6404ff63cc1507db7,3bcf9e962c8279cf63ec05e6404ff63cc1507db7,Test really committed.
iskiselev,2015-11-16 03:05:10,https://api.github.com/repos/sq/JSIL/git/commits/c402657b2c9f0181847a0ef301a4abc3fe8d1a63,c402657b2c9f0181847a0ef301a4abc3fe8d1a63,Correct impelementation of GetHashCode for struct types.
iskiselev,2015-11-16 00:07:22,https://api.github.com/repos/sq/JSIL/git/commits/a71b6ea86ed3cc76d4a167037c133d159faa5765,a71b6ea86ed3cc76d4a167037c133d159faa5765,Fixed output with DCE: strip interface reference correct.
iskiselev,2015-11-14 10:01:08,https://api.github.com/repos/sq/JSIL/git/commits/cde7284b3a1b39ef1b6213b36551f0255d586bb2,cde7284b3a1b39ef1b6213b36551f0255d586bb2,Fixed error inpositional genric arguments resolution.
iskiselev,2015-11-14 09:27:11,https://api.github.com/repos/sq/JSIL/git/commits/a68bba43ecc76fe1ce53120bf9169a3dde460a01,a68bba43ecc76fe1ce53120bf9169a3dde460a01,Proper implementation for .Check for arrays. Fixed type check for null.
iskiselev,2015-11-14 05:51:48,https://api.github.com/repos/sq/JSIL/git/commits/0bd2a76a703178a60e656b7518db61f6fb73e1c3,0bd2a76a703178a60e656b7518db61f6fb73e1c3,Test include in *.csproj with Compiled fixed to None.
iskiselev,2015-11-14 05:42:35,https://api.github.com/repos/sq/JSIL/git/commits/3dd8d72b72738bc104101c8bb5653c8a18debd3d,3dd8d72b72738bc104101c8bb5653c8a18debd3d,Assembly JSIL.Core -> mscorlib.
iskiselev,2015-11-14 05:42:09,https://api.github.com/repos/sq/JSIL/git/commits/62550b7d2fc53d8bf58a845008f59cb7a4281477,62550b7d2fc53d8bf58a845008f59cb7a4281477,Reflection methods return typed array.
iskiselev,2015-11-14 03:28:44,https://api.github.com/repos/sq/JSIL/git/commits/50cd5b8f2a30c5b75f5a331617501631518c0c06,50cd5b8f2a30c5b75f5a331617501631518c0c06,Variance disabled for structs. Array casts.
iskiselev,2015-11-13 21:58:42,https://api.github.com/repos/sq/JSIL/git/commits/8d403b913d9bd758d096181180183a15a4558edb,8d403b913d9bd758d096181180183a15a4558edb,Fixed generic parameter resolution for multi-dimensions arrays.
iskiselev,2015-11-13 21:54:46,https://api.github.com/repos/sq/JSIL/git/commits/f8c16bab7f25b42f975f724f7c3c0f0164d8f8f0,f8c16bab7f25b42f975f724f7c3c0f0164d8f8f0,Fixed positional generic arguments resolution (#903).
iskiselev,2015-11-13 05:23:42,https://api.github.com/repos/sq/JSIL/git/commits/99c9046ecd8e3a661cca4520cd2873dc1c3d6543,99c9046ecd8e3a661cca4520cd2873dc1c3d6543,Fixed proxy for Array intialization.
iskiselev,2015-11-13 05:14:35,https://api.github.com/repos/sq/JSIL/git/commits/53cdec824f8e3abef06d38586754d5036aced306,53cdec824f8e3abef06d38586754d5036aced306,"MultiDimArray reference, array as/is/cast covariance."
iskiselev,2015-11-13 03:55:59,https://api.github.com/repos/sq/JSIL/git/commits/f266e67da2db898a6de963387a2380626824bd6f,f266e67da2db898a6de963387a2380626824bd6f,Test updated to track #903.
iskiselev,2015-11-13 03:54:50,https://api.github.com/repos/sq/JSIL/git/commits/6e5c6f08c6bc24cef25b334aa258be6cfa7d1362,6e5c6f08c6bc24cef25b334aa258be6cfa7d1362,Translated BCL compatibility.
iskiselev,2015-11-13 03:53:49,https://api.github.com/repos/sq/JSIL/git/commits/f846ade52d4124e13c0a18be21e282d5203ef05f,f846ade52d4124e13c0a18be21e282d5203ef05f,Don't call static ctor from Type.Initialize (#904).
iskiselev,2015-11-12 21:40:45,https://api.github.com/repos/sq/JSIL/git/commits/fc6a538b10a5a364f1490d5a61430f5c5334271c,fc6a538b10a5a364f1490d5a61430f5c5334271c,Treat type as initialized right before static ctor could be invoked.
iskiselev,2015-11-12 20:04:23,https://api.github.com/repos/sq/JSIL/git/commits/bebdb080c404b292bcb7a7c70834aabd45593303,bebdb080c404b292bcb7a7c70834aabd45593303,Marked Enum with JSSuppressTypeDeclaration to prevent ctor cycle on Init.
kg,2015-11-11 08:54:07,https://api.github.com/repos/sq/JSIL/git/commits/8ae6334165e746ffeadf88444fffe2119af701d3,8ae6334165e746ffeadf88444fffe2119af701d3,"Merge pull request #900 from iskiselev/FailsOnMono20151105

Marked some tests as FailsOnMono"
kg,2015-11-11 08:54:00,https://api.github.com/repos/sq/JSIL/git/commits/7a6a3ac1f89c13fde96d12933483714e553815d4,7a6a3ac1f89c13fde96d12933483714e553815d4,"Merge pull request #863 from iskiselev/Verbatium.Generic

Verbatium.Expression generic"
kg,2015-11-11 05:27:09,https://api.github.com/repos/sq/JSIL/git/commits/d41453e6ecd6f96f434656d873e8206998c61c3d,d41453e6ecd6f96f434656d873e8206998c61c3d,"Merge pull request #864 from iskiselev/BoxRawType

Box for Numeric types."
iskiselev,2015-11-11 04:23:59,https://api.github.com/repos/sq/JSIL/git/commits/b154c431650001a7eb4877765284ed83d2f7cd8a,b154c431650001a7eb4877765284ed83d2f7cd8a,IConvertible for char and bool. Test updated.
iskiselev,2015-11-10 23:41:53,https://api.github.com/repos/sq/JSIL/git/commits/e8b2ef918806ae34daebeaa684b8bd8f78bf5dd3,e8b2ef918806ae34daebeaa684b8bd8f78bf5dd3,Array types implement interfaces without ArrayOverlay.
iskiselev,2015-11-06 06:03:46,https://api.github.com/repos/sq/JSIL/git/commits/4193a54dd0a9a4b52c5d58188d2a50ecdb44f6a7,4193a54dd0a9a4b52c5d58188d2a50ecdb44f6a7,Marked some tests as FailsOnMono as they start to fail on Travis for several last weeks.
kg,2015-11-06 05:57:17,https://api.github.com/repos/sq/JSIL/git/commits/c44800ed6acc0a0599afb4ae18b8e3cc7cff525f,c44800ed6acc0a0599afb4ae18b8e3cc7cff525f,"Merge pull request #859 from iskiselev/Artifacts

Upload build artifacts"
kg,2015-11-06 05:57:05,https://api.github.com/repos/sq/JSIL/git/commits/d631057bec5628edd88a422ba0695bf03ef1f00a,d631057bec5628edd88a422ba0695bf03ef1f00a,"Merge pull request #893 from iskiselev/Delagate_MethodPointerInfo

Delagate fixes"
iskiselev,2015-10-30 02:22:36,https://api.github.com/repos/sq/JSIL/git/commits/5647864663031d6fd83ab31736b07e3cd58e3710,5647864663031d6fd83ab31736b07e3cd58e3710,Source unification for JSIL.MethodPointerInfo generation invocation method.
iskiselev,2015-10-30 01:39:58,https://api.github.com/repos/sq/JSIL/git/commits/b0ecbbb88a4b120636fd90ce03e38a74e970ae02,b0ecbbb88a4b120636fd90ce03e38a74e970ae02,"Use JSIL.CreateRebindableNamedFunctionin in MethodPointerInfo.
Last arg of JSIL.CreateRebindableNamedFunctionin is array of closure arg names now."
iskiselev,2015-10-30 01:03:04,https://api.github.com/repos/sq/JSIL/git/commits/a4b3ad5ded7cca010f5ddba7cd946724c5920c96,a4b3ad5ded7cca010f5ddba7cd946724c5920c96,JSIL.MethodInfoMethodPointerInfo -> JSIL.MethodPointerInfo.FromMethodInfo.
iskiselev,2015-10-30 00:47:23,https://api.github.com/repos/sq/JSIL/git/commits/4db9344f67e0e1df7b27076c01399ee7ec379890,4db9344f67e0e1df7b27076c01399ee7ec379890,Fixed generic method signature detection.
iskiselev,2015-10-29 23:59:31,https://api.github.com/repos/sq/JSIL/git/commits/9ab584596f3ea352eb2671123f820f1a778c7342,9ab584596f3ea352eb2671123f820f1a778c7342,Delegates created in runtime through MethodInfo use JSIL.MethodPointerInfo
iskiselev,2015-10-29 21:38:53,https://api.github.com/repos/sq/JSIL/git/commits/1c2d21aa62e973a1eb032b95f04bfb4b448b279c,1c2d21aa62e973a1eb032b95f04bfb4b448b279c,Use custom-generated functions for delegate invocation.
iskiselev,2015-10-29 08:54:42,https://api.github.com/repos/sq/JSIL/git/commits/6cec58ec6ee6547222d41e3508971db642856d8a,6cec58ec6ee6547222d41e3508971db642856d8a,Missed return statement fixed.
iskiselev,2015-10-29 07:07:00,https://api.github.com/repos/sq/JSIL/git/commits/31e7ae22428ade7de47c5c33552f948f6afeac3b,31e7ae22428ade7de47c5c33552f948f6afeac3b,"Test for fixed #876, #880 added."
iskiselev,2015-10-29 06:31:36,https://api.github.com/repos/sq/JSIL/git/commits/121f39ee00a7f5444dbdd2f616002fcb7f391da3,121f39ee00a7f5444dbdd2f616002fcb7f391da3,Delegate call implementation use JSIL.MethodPointerInfo.
kg,2015-10-26 22:33:58,https://api.github.com/repos/sq/JSIL/git/commits/eb73ec10fe0a85b7b3ed7d027c3d61311719d19a,eb73ec10fe0a85b7b3ed7d027c3d61311719d19a,TravisCI compatibility
kg,2015-10-24 03:14:47,https://api.github.com/repos/sq/JSIL/git/commits/760f35f1cfc1358ef6a5d49544daa080659dab52,760f35f1cfc1358ef6a5d49544daa080659dab52,Documentation updates.
iskiselev,2015-10-21 03:37:07,https://api.github.com/repos/sq/JSIL/git/commits/3eca7b3943dfe83442f667813238b218a41f7829,3eca7b3943dfe83442f667813238b218a41f7829,"Initialize type if not yet on IsAssignableFrom.
Workaround for type initiallization (#866). Test case added."
iskiselev,2015-10-21 02:57:47,https://api.github.com/repos/sq/JSIL/git/commits/42a409ecab27409877c567f321ff5ac99fc1cd4e,42a409ecab27409877c567f321ff5ac99fc1cd4e,Fixed CultureInfo.GetFormat.
iskiselev,2015-10-21 02:00:44,https://api.github.com/repos/sq/JSIL/git/commits/f7c76e16834840fda35b22e2c6800bec5a7bdbb3,f7c76e16834840fda35b22e2c6800bec5a7bdbb3,Fixed IsBoxedOfType implementation.
iskiselev,2015-10-20 06:04:14,https://api.github.com/repos/sq/JSIL/git/commits/1719456e20a29f4bad9e741997d0fa8dd6b60739,1719456e20a29f4bad9e741997d0fa8dd6b60739,Added CultureInfo implemention of FormatProvider.
iskiselev,2015-10-20 05:13:43,https://api.github.com/repos/sq/JSIL/git/commits/84ee810a6ba5fda869b8ec99382abad70a77f9ad,84ee810a6ba5fda869b8ec99382abad70a77f9ad,CultureFormatInfo.GetFormat() implemented.
iskiselev,2015-10-20 04:16:27,https://api.github.com/repos/sq/JSIL/git/commits/2c00303c05c27a8c08d2a37c523e86138f496c0d,2c00303c05c27a8c08d2a37c523e86138f496c0d,Added string.UseRandomizedHashing() returning false.
kg,2015-10-17 19:54:58,https://api.github.com/repos/sq/JSIL/git/commits/eebc933ed7d2dd9cc5ecf1539d6ff9b5f3995edc,eebc933ed7d2dd9cc5ecf1539d6ff9b5f3995edc,"Merge pull request #874 from iskiselev/Misc_Reflection

Misc reflection"
kg,2015-10-17 01:03:12,https://api.github.com/repos/sq/JSIL/git/commits/1ed796b45133249bad0b26c8b333edf9afc4b2e8,1ed796b45133249bad0b26c8b333edf9afc4b2e8,"Merge pull request #873 from iskiselev/DecimalLiterals

Create decimal literals through decimal constructor."
iskiselev,2015-10-17 00:01:32,https://api.github.com/repos/sq/JSIL/git/commits/b9bf55a341f4735f07ccc8d9b3e7e1b1fc7c9d4d,b9bf55a341f4735f07ccc8d9b3e7e1b1fc7c9d4d,"Marked Array.Empty FailsOnMono, as it comes only in 4.6 API."
iskiselev,2015-10-16 19:31:51,https://api.github.com/repos/sq/JSIL/git/commits/048a0bc5b41d835cb713e54190e1ce0e1c46ab9c,048a0bc5b41d835cb713e54190e1ce0e1c46ab9c,Avoid undefined usage as argumnet value for JSIL.GetMembersInternal.
iskiselev,2015-10-16 19:27:32,https://api.github.com/repos/sq/JSIL/git/commits/b16dc3fe5f7c993b98494524b534eb3eaebafdc5,b16dc3fe5f7c993b98494524b534eb3eaebafdc5,Array.Empty correct implementation and test added.
iskiselev,2015-10-16 04:02:56,https://api.github.com/repos/sq/JSIL/git/commits/9c4344feb1000b549c5d6bae129071debfdd015e,9c4344feb1000b549c5d6bae129071debfdd015e,ReflectionTypes test marked as FailsOnMono.
iskiselev,2015-10-16 00:34:08,https://api.github.com/repos/sq/JSIL/git/commits/5fdc4fc6937570dbff0d445cb18b9e8d81106f66,5fdc4fc6937570dbff0d445cb18b9e8d81106f66,Create decimal literals through decimal constructor (#871).
iskiselev,2015-10-15 23:52:57,https://api.github.com/repos/sq/JSIL/git/commits/77faa390ad7a62f02777df01043ee03714339f7f,77faa390ad7a62f02777df01043ee03714339f7f,Sting.Length added (refleciton compatibility).
kg,2015-10-15 19:51:51,https://api.github.com/repos/sq/JSIL/git/commits/0a33194152f4d813dab3ec0140aceefd0fd8c009,0a33194152f4d813dab3ec0140aceefd0fd8c009,"Merge pull request #870 from iskiselev/EliminateTemporaries_Fix868

EliminateTemporaries don't treat JSIndexerExpression as immutable"
kg,2015-10-15 00:48:35,https://api.github.com/repos/sq/JSIL/git/commits/e484f5d98d3d1e66ec4abb5c6a023caa46310b55,e484f5d98d3d1e66ec4abb5c6a023caa46310b55,"Merge pull request #872 from iskiselev/StringPrimitive

String primitive"
iskiselev,2015-10-15 00:04:16,https://api.github.com/repos/sq/JSIL/git/commits/1d336eedcc0ede2f5fa9e9fceb5b42d64d10055a,1d336eedcc0ede2f5fa9e9fceb5b42d64d10055a,Test for sting created through ctor added (#845).
iskiselev,2015-10-14 23:26:48,https://api.github.com/repos/sq/JSIL/git/commits/405c9a85ca263d2fb18767f362ad2f5a102629da,405c9a85ca263d2fb18767f362ad2f5a102629da,EliminateTemporaries don't treat JSIndexerExpression as immutable (fix #868).
iskiselev,2015-10-13 23:05:05,https://api.github.com/repos/sq/JSIL/git/commits/cef5614fe090e0bca3c444c2e7e1c90bad4d9677,cef5614fe090e0bca3c444c2e7e1c90bad4d9677,Strings from ctor are primitive type.
iskiselev,2015-10-13 20:45:08,https://api.github.com/repos/sq/JSIL/git/commits/4551dda60a37a1e6f3b1bdc8da79f165ba379183,4551dda60a37a1e6f3b1bdc8da79f165ba379183,Enum.ToObject fixed and additional signature added.
iskiselev,2015-10-13 02:49:09,https://api.github.com/repos/sq/JSIL/git/commits/5db48ccce1afa3e156bed04af83191bc26b02bd3,5db48ccce1afa3e156bed04af83191bc26b02bd3,String implements IConvertible.
iskiselev,2015-10-12 22:20:13,https://api.github.com/repos/sq/JSIL/git/commits/ea14f131443e4424c134579393074a27c7065d4b,ea14f131443e4424c134579393074a27c7065d4b,MemberInfo.get_IsPrivate
iskiselev,2015-10-12 22:19:48,https://api.github.com/repos/sq/JSIL/git/commits/e5a30b2a9e0196e69100604ac84c5d90336adf0a,e5a30b2a9e0196e69100604ac84c5d90336adf0a,MethodInfo.GetBaseDefinition and test added.
iskiselev,2015-10-12 22:19:08,https://api.github.com/repos/sq/JSIL/git/commits/1f286e9f123ea514e465a3c7381d622da7ef8645,1f286e9f123ea514e465a3c7381d622da7ef8645,Thread.MemoryBarrier
iskiselev,2015-10-10 04:11:59,https://api.github.com/repos/sq/JSIL/git/commits/a0de898abab8434d751bfbe593d3faa931d3924c,a0de898abab8434d751bfbe593d3faa931d3924c,Verbatium fix.
iskiselev,2015-10-10 03:23:01,https://api.github.com/repos/sq/JSIL/git/commits/25a86299c77dbb32361202616de75bca1e03eba1,25a86299c77dbb32361202616de75bca1e03eba1,RuntimeType.op_Equality implemented.
iskiselev,2015-10-09 20:48:09,https://api.github.com/repos/sq/JSIL/git/commits/555540a8c6e13390b2d8be581a82486c5087c8c9,555540a8c6e13390b2d8be581a82486c5087c8c9,Intoduced generic forms for Verbatium.Expression to prevent boxing.
kg,2015-10-08 21:49:53,https://api.github.com/repos/sq/JSIL/git/commits/46ac8704f7b9ec4bc2a0352a71df3dd91049ebba,46ac8704f7b9ec4bc2a0352a71df3dd91049ebba,"Merge pull request #857 from iskiselev/TranslatedBootstrap_NumberFormats

Bootstrap from C#. Number formats"
iskiselev,2015-10-06 23:52:18,https://api.github.com/repos/sq/JSIL/git/commits/4cd9353d1033327edb6267176b17e0240081a14b,4cd9353d1033327edb6267176b17e0240081a14b,Box Raw types.
iskiselev,2015-10-06 18:31:19,https://api.github.com/repos/sq/JSIL/git/commits/c49c9cf4b2496c3bcc26f7389da3c31316bf7c91,c49c9cf4b2496c3bcc26f7389da3c31316bf7c91,Use BCL System.Convert. Most primitive types implement IConvertible.
iskiselev,2015-11-11 04:22:01,https://api.github.com/repos/sq/JSIL/git/commits/e084df75ab1c773c892b025d0a4691f4c1083d0c,e084df75ab1c773c892b025d0a4691f4c1083d0c,JSIL.InitilaizeType fixed: Solved problem of initializing derived type while base type is initializing.
iskiselev,2015-10-04 21:51:57,https://api.github.com/repos/sq/JSIL/git/commits/0c8daa5ae2c07528421f3010894a53ec9a4c5d6f,0c8daa5ae2c07528421f3010894a53ec9a4c5d6f,"Parse(string, IFormatProvider) override added."
iskiselev,2015-10-04 21:51:08,https://api.github.com/repos/sq/JSIL/git/commits/04630df906a527ad7879d276df436dce125b3dc3,04630df906a527ad7879d276df436dce125b3dc3,Assembly.Load implemented.
iskiselev,2015-10-15 23:48:10,https://api.github.com/repos/sq/JSIL/git/commits/d1faaec2af3fb0006b34e5f7d6d820a506fe7472,d1faaec2af3fb0006b34e5f7d6d820a506fe7472,Workaround for #844. Still should be investigated more. Test added.
iskiselev,2015-10-15 23:45:15,https://api.github.com/repos/sq/JSIL/git/commits/c0a1cdcafd657cc5c19a8fd4f3f1349ea1fdc6f6,c0a1cdcafd657cc5c19a8fd4f3f1349ea1fdc6f6,"Array objects type is object[] now (fix #847, test added)."
iskiselev,2015-10-15 23:34:59,https://api.github.com/repos/sq/JSIL/git/commits/efd5cdb88d9845c82f3bdba4ade8f9a915271ca9,efd5cdb88d9845c82f3bdba4ade8f9a915271ca9,Array marked as IEnumerable (part of #846).
iskiselev,2015-10-15 23:30:16,https://api.github.com/repos/sq/JSIL/git/commits/516fcf9e2814cdb86ce6afa9e566ab3624c21e9d,516fcf9e2814cdb86ce6afa9e566ab3624c21e9d,"Type.EmptyTypes added (with hack - it's property, not field.)"
iskiselev,2015-10-15 23:29:39,https://api.github.com/repos/sq/JSIL/git/commits/f4c7801a3f7f97448d5375c731503fd10e102112,f4c7801a3f7f97448d5375c731503fd10e102112,MethodBase.IsConstructor and MethodInfo.IsVirtual added.
iskiselev,2015-10-15 23:29:00,https://api.github.com/repos/sq/JSIL/git/commits/db7bf92234294c2740c9485559c6878f794e2e1b,db7bf92234294c2740c9485559c6878f794e2e1b,JSIL.StringFromCharArray with passed length implementation fixed.
iskiselev,2015-10-15 23:28:21,https://api.github.com/repos/sq/JSIL/git/commits/1f8a4f40f71c8f1fbbfe6d600b313879e8d34549,1f8a4f40f71c8f1fbbfe6d600b313879e8d34549,char.IsNumber added.
iskiselev,2015-10-15 23:27:37,https://api.github.com/repos/sq/JSIL/git/commits/36792525ee94f91e449d6346d71fbcb522ada7e4,36792525ee94f91e449d6346d71fbcb522ada7e4,Enum.GetUnderlyingType added.
iskiselev,2015-10-04 21:50:37,https://api.github.com/repos/sq/JSIL/git/commits/7cf2a8e6e15d9c23ba0b81a0eaa7c582653acf48,7cf2a8e6e15d9c23ba0b81a0eaa7c582653acf48,Double parse signature fixed.
iskiselev,2015-10-08 16:36:56,https://api.github.com/repos/sq/JSIL/git/commits/6e3367a0d6154aef0c50f726621b06bbe579ebce,6e3367a0d6154aef0c50f726621b06bbe579ebce,PR review fixes.
iskiselev,2015-10-01 05:18:03,https://api.github.com/repos/sq/JSIL/git/commits/d37f4c6da93a97b5d0179423a5c44ddb8ea6f79a,d37f4c6da93a97b5d0179423a5c44ddb8ea6f79a,Skip compilied binaries publishing for stubbed-tests and translated-tests builds.
iskiselev,2015-09-30 18:24:04,https://api.github.com/repos/sq/JSIL/git/commits/c748369492c6aa80e01660dcf9c60dcf28529931,c748369492c6aa80e01660dcf9c60dcf28529931,Cleanup
kg,2015-09-21 22:43:09,https://api.github.com/repos/sq/JSIL/git/commits/4e13fa48e5cc610e6d1b75d0def2035ab5ad8df6,4e13fa48e5cc610e6d1b75d0def2035ab5ad8df6,Fix pointer post-increment edge case
kg,2015-09-21 22:26:06,https://api.github.com/repos/sq/JSIL/git/commits/69c877cb0a99e9398bd7300e470f9e35d24b72b1,69c877cb0a99e9398bd7300e470f9e35d24b72b1,Don't drop float -> double conversion information
kg,2015-09-19 00:01:14,https://api.github.com/repos/sq/JSIL/git/commits/dadc7aa79464235f70081884617b884ead652879,dadc7aa79464235f70081884617b884ead652879,Add a configuration pref to force decomposing all mutation operators
kg,2015-09-30 10:41:01,https://api.github.com/repos/sq/JSIL/git/commits/ac92eced3902d3d1fca0c780bfc0e96a956f82d5,ac92eced3902d3d1fca0c780bfc0e96a956f82d5,Diagnostic changes to asset download/upload scripts
kg,2015-09-16 00:53:46,https://api.github.com/repos/sq/JSIL/git/commits/458a7329dd0b47d0b0eff3a1695e0237369cebc2,458a7329dd0b47d0b0eff3a1695e0237369cebc2,Disable a (seemingly useless) PostIncrement assertion for now
kg,2015-09-15 22:08:45,https://api.github.com/repos/sq/JSIL/git/commits/b663720bee7b90df0da7c0967c70ba903ce834ec,b663720bee7b90df0da7c0967c70ba903ce834ec,Don't eliminate temporaries containing fields unless the field is provably immutable
kg,2015-09-15 21:01:06,https://api.github.com/repos/sq/JSIL/git/commits/05afd77a8d8c0a6924ee761f3e2595845553509a,05afd77a8d8c0a6924ee761f3e2595845553509a,Don't silence ignored method message in quiet mode
kg,2015-09-14 23:40:11,https://api.github.com/repos/sq/JSIL/git/commits/855f4bc42f957901716ac90d5236ce355ebff24a,855f4bc42f957901716ac90d5236ce355ebff24a,Fix JSFieldAccess and JSPropertyAccess not comparing IsWrite and other readonly fields in Equals (#854)
kg,2015-09-14 19:40:39,https://api.github.com/repos/sq/JSIL/git/commits/2eafd8170b749296d256b80dea256ec892f0a7a9,2eafd8170b749296d256b80dea256ec892f0a7a9,Add configuration value to disable int64 emulation
kg,2015-09-14 14:36:11,https://api.github.com/repos/sq/JSIL/git/commits/3bc2b64bd520edaa66d3e2587c7b393879269214,3bc2b64bd520edaa66d3e2587c7b393879269214,More diagnostic output for asset scripts
kg,2015-09-04 22:00:23,https://api.github.com/repos/sq/JSIL/git/commits/67de1c7c805b666819308c0f82578f81605f3f25,67de1c7c805b666819308c0f82578f81605f3f25,Fix mutation decomposition turning (<field-write> += <arg>) into (<field-write> = <field-write> + <arg>) instead of (<field-write> = <field-read> + arg).
kg,2015-09-30 10:34:34,https://api.github.com/repos/sq/JSIL/git/commits/9d66f27644764d701998cd1ee1386d85222eb8d6,9d66f27644764d701998cd1ee1386d85222eb8d6,"Merge pull request #858 from iskiselev/FSharp

F# CodeDom updated"
iskiselev,2015-09-28 15:42:45,https://api.github.com/repos/sq/JSIL/git/commits/da285da026c407004015250df7370ee909a0aa8b,da285da026c407004015250df7370ee909a0aa8b,Rename JSIL Tests on before_cache.
iskiselev,2015-09-28 06:40:57,https://api.github.com/repos/sq/JSIL/git/commits/19b9c6c70a0270945a21bc69437dfdbe9d339f3d,19b9c6c70a0270945a21bc69437dfdbe9d339f3d,"Use Travis cache, publish artifacts to Yandex.Disk."
iskiselev,2015-09-19 05:21:20,https://api.github.com/repos/sq/JSIL/git/commits/9424e116545bc57446a82dbdb7d806c70d8e379b,9424e116545bc57446a82dbdb7d806c70d8e379b,Removed FailsOnMono for working tests.
iskiselev,2015-09-19 05:53:00,https://api.github.com/repos/sq/JSIL/git/commits/53735d43d47cae61c1bbe593952905c7545fc164,53735d43d47cae61c1bbe593952905c7545fc164,"Added FSharp compiler installation to Travis script.
Install additional NuGet packages to packages folder."
iskiselev,2015-09-19 04:29:08,https://api.github.com/repos/sq/JSIL/git/commits/ed31a5c31a04bc306d519c598ff4bd93bc9cf180,ed31a5c31a04bc306d519c598ff4bd93bc9cf180,FSharp.Compiler.CodeDom package updated.
iskiselev,2015-09-19 03:28:28,https://api.github.com/repos/sq/JSIL/git/commits/83672d3bab93e797e5c09644079ebd33e95db9d9,83672d3bab93e797e5c09644079ebd33e95db9d9,"Use mono formatters for non-integer types.
Added BitConverter.DoubleToInt64Bits."
iskiselev,2015-09-19 02:04:27,https://api.github.com/repos/sq/JSIL/git/commits/38660870cec1955ddc743c58eddcca7fde66e388,38660870cec1955ddc743c58eddcca7fde66e388,"Temporary marked IntegerToStringFormatted as FailsOnMono.
It works incorrectly on Travis, but it works on my linux box."
iskiselev,2015-09-19 00:19:57,https://api.github.com/repos/sq/JSIL/git/commits/e16b920830fd827821b6af3d104a0275cc069c63,e16b920830fd827821b6af3d104a0275cc069c63,Analyze imported functions on translation step.
iskiselev,2015-09-18 06:20:32,https://api.github.com/repos/sq/JSIL/git/commits/43f481cdbdd7423ce672726f985adb8c0036afc0,43f481cdbdd7423ce672726f985adb8c0036afc0,"Added signatures for all numeric types.
Workaround of String-object and $Overflow JSIL bugs."
iskiselev,2015-09-18 06:24:12,https://api.github.com/repos/sq/JSIL/git/commits/be94f674fe616c147b0f3a22066b3d5f9367eaf4,be94f674fe616c147b0f3a22066b3d5f9367eaf4,Don't try to write method body for stubbed proxied methods.
iskiselev,2015-09-18 05:37:28,https://api.github.com/repos/sq/JSIL/git/commits/7d2a499cad87996f5c58584e857802d44f3d9cae,7d2a499cad87996f5c58584e857802d44f3d9cae,Fix handling JSON config on mono.
kg,2015-09-18 00:05:44,https://api.github.com/repos/sq/JSIL/git/commits/f8848c1b09ad30fc1e5045d689a76e7d57b8db04,f8848c1b09ad30fc1e5045d689a76e7d57b8db04,"Merge pull request #852 from iskiselev/SourceMap

Source map initial support"
iskiselev,2015-09-17 23:50:08,https://api.github.com/repos/sq/JSIL/git/commits/03ce404349518717678c91adaa9e95d7c14e3e1d,03ce404349518717678c91adaa9e95d7c14e3e1d,StringBuilder.Insert implemented.
iskiselev,2015-09-17 23:26:51,https://api.github.com/repos/sq/JSIL/git/commits/b008884eb9f9ae5bc28605b3dde53d4b51aa2f4e,b008884eb9f9ae5bc28605b3dde53d4b51aa2f4e,Compatibility with translated/stubbed.
iskiselev,2015-09-17 21:16:11,https://api.github.com/repos/sq/JSIL/git/commits/e26e255debf17cbd39daff5174a6e68017937105,e26e255debf17cbd39daff5174a6e68017937105,Use number .ToString formats from Mono.
iskiselev,2015-09-17 21:47:14,https://api.github.com/repos/sq/JSIL/git/commits/f28b6a367cae86e464727e6eac09887737dc5418,f28b6a367cae86e464727e6eac09887737dc5418,Overwrite defaults.jsilconfig if newer only.
iskiselev,2015-09-17 21:10:05,https://api.github.com/repos/sq/JSIL/git/commits/efdc5d32fef704eadea151ba65f80fc94c68a8f7,efdc5d32fef704eadea151ba65f80fc94c68a8f7,Added JSIL.mscorlib project with number formatter implementation.
iskiselev,2015-09-17 21:22:04,https://api.github.com/repos/sq/JSIL/git/commits/1b0461a66b9b6cd17b956014ef1d9e47ec6ea900,1b0461a66b9b6cd17b956014ef1d9e47ec6ea900,Fixed UInt64 creation (#855)
iskiselev,2015-09-17 21:00:21,https://api.github.com/repos/sq/JSIL/git/commits/6e0ae8d0de5f03c11af28776794a3a37e4712a3e,6e0ae8d0de5f03c11af28776794a3a37e4712a3e,"StringBuilder.Remove implemented.
StringBuilder.set_Chars fixed: treat not setted chars as \0."
iskiselev,2015-09-17 20:58:28,https://api.github.com/repos/sq/JSIL/git/commits/baa7349327535764e8795790a1eecd0a4dd28c7b,baa7349327535764e8795790a1eecd0a4dd28c7b,Generate JSIL.Bootstrap.Int64.js using its parts.
iskiselev,2015-09-17 07:47:01,https://api.github.com/repos/sq/JSIL/git/commits/a78c73ae74ac34a60f63fcd1d444299b11ef5f41,a78c73ae74ac34a60f63fcd1d444299b11ef5f41,Clean up of SorceMap writing and linking.
iskiselev,2015-09-17 01:55:39,https://api.github.com/repos/sq/JSIL/git/commits/82a2b6bcb4886445450716b469f7160a11023bf2,82a2b6bcb4886445450716b469f7160a11023bf2,JSOverrideAssemblyReference meta attribute introduced.
iskiselev,2015-09-16 04:02:19,https://api.github.com/repos/sq/JSIL/git/commits/ee8a52f6d6f23b3c4fe28177d0c7d312f664cec6,ee8a52f6d6f23b3c4fe28177d0c7d312f664cec6,Added JSImportType meta attribute.
iskiselev,2015-09-16 01:34:09,https://api.github.com/repos/sq/JSIL/git/commits/a9a5dd2e63c6adbb6853c7ba8654c8e49fc149d3,a9a5dd2e63c6adbb6853c7ba8654c8e49fc149d3,TypeDeclarationsToSuppress logic moved to JSSuppressTypeDeclaration meta atribute.
iskiselev,2015-09-16 00:50:36,https://api.github.com/repos/sq/JSIL/git/commits/3d09504748fbf04f149f60fbd625d75ae4a02901,3d09504748fbf04f149f60fbd625d75ae4a02901,Added JSRepaceAssemblyDeclaration meta attibute.
iskiselev,2015-09-15 22:42:40,https://api.github.com/repos/sq/JSIL/git/commits/de74cba65df72174a7ead4f78a2c4f26e8a44fd6,de74cba65df72174a7ead4f78a2c4f26e8a44fd6,"Introduced solution folders: Dependecies, Libraries, Tests
Projects moved to appropriate solution folders."
iskiselev,2015-09-15 03:57:55,https://api.github.com/repos/sq/JSIL/git/commits/517e526726a6349d03cbb4bc070491e8c7e2774f,517e526726a6349d03cbb4bc070491e8c7e2774f,JSAstVisitor.AfterNodeProcessed signature changed to Action<JSNode>.
kg,2015-09-15 01:55:22,https://api.github.com/repos/sq/JSIL/git/commits/1741d9524490dc631b28e06d9ddb740e74d54ca1,1741d9524490dc631b28e06d9ddb740e74d54ca1,"Merge pull request #853 from iskiselev/C#5_resticted

Restricted language features to C#5 (we still support VS2012)."
iskiselev,2015-09-14 19:43:30,https://api.github.com/repos/sq/JSIL/git/commits/1f49b664959f207caee5bcd6b56c345c53027581,1f49b664959f207caee5bcd6b56c345c53027581,SourceMap - use full local path for sourcemap.
iskiselev,2015-09-14 19:33:13,https://api.github.com/repos/sq/JSIL/git/commits/0203afc367cb91921cd61b84e29431f7f7fe4480,0203afc367cb91921cd61b84e29431f7f7fe4480,Restricted language features to C#5 (we still support VS2012).
iskiselev,2015-09-14 19:21:42,https://api.github.com/repos/sq/JSIL/git/commits/4b7c00b01fb21557d5b64b761d27bdf41838a1b2,4b7c00b01fb21557d5b64b761d27bdf41838a1b2,Pre-roslyn compatibility fix.
iskiselev,2015-09-14 19:12:24,https://api.github.com/repos/sq/JSIL/git/commits/f53eb947392fc9d640f2a6df9e95597bca22cc21,f53eb947392fc9d640f2a6df9e95597bca22cc21,Sourcemap builder PR review fixes applied. Code clean-up.
iskiselev,2015-09-05 01:52:59,https://api.github.com/repos/sq/JSIL/git/commits/2ef84fe18f5fd23bc4d97c56c8248863a37d9e53,2ef84fe18f5fd23bc4d97c56c8248863a37d9e53,SemaphoreSlim added to BclProxies as it was added to javascript implemntations.
iskiselev,2015-09-04 22:48:51,https://api.github.com/repos/sq/JSIL/git/commits/c9232481f5500650e802bb75da04e4987df3261d,c9232481f5500650e802bb75da04e4987df3261d,Implemented hiding for Properties/Events/Constructors.
iskiselev,2015-10-15 23:21:27,https://api.github.com/repos/sq/JSIL/git/commits/9d745a84681c7ccdcf9ca8a2840a3fcf8b925610,9d745a84681c7ccdcf9ca8a2840a3fcf8b925610,"Support .Net Attribute class implementation for translated config (.net only, no mono support yet).
Removed null-returning Attribute.GetCustomAttribute for stubbed version."
iskiselev,2015-10-15 23:19:20,https://api.github.com/repos/sq/JSIL/git/commits/2db6d9da6e11c17927735d28003a6786a740e1f7,2db6d9da6e11c17927735d28003a6786a740e1f7,"Type.GetProperty additional override added (still need proper implementation)
MemberInfo.op_Equality, MemberInfo.op_Inequality added."
iskiselev,2015-09-04 21:16:57,https://api.github.com/repos/sq/JSIL/git/commits/f4b859d9bf85d446b62ace2bd0605afc74ec6156,f4b859d9bf85d446b62ace2bd0605afc74ec6156,"Array.Empty(), Array.UnsafeCreateInstance(...)"
kg,2015-09-04 20:17:54,https://api.github.com/repos/sq/JSIL/git/commits/3c2961904e44d28a769fd31b3dd969a9f02b6fca,3c2961904e44d28a769fd31b3dd969a9f02b6fca,Allow disabling the enum and char cast transforms
kg,2015-09-04 18:37:08,https://api.github.com/repos/sq/JSIL/git/commits/41226222c549dd06492e8f0f42efe94963c8927f,41226222c549dd06492e8f0f42efe94963c8927f,Allow specifying the exact name of the main output file at the command line
iskiselev,2015-09-03 20:45:10,https://api.github.com/repos/sq/JSIL/git/commits/0d3ce8349a400d9da95a524609ec69a07d64b6d9,0d3ce8349a400d9da95a524609ec69a07d64b6d9,System.Reflection.RuntimeMethodInfo.GetParentDefinition implemented and test written.
iskiselev,2015-09-03 18:54:24,https://api.github.com/repos/sq/JSIL/git/commits/a3d3a8ab95faa30f9044497bf37c149aff4a0ae6,a3d3a8ab95faa30f9044497bf37c149aff4a0ae6,System.Reflection.Runtime* types added.
iskiselev,2015-09-03 21:21:09,https://api.github.com/repos/sq/JSIL/git/commits/84b6601f0ccbf7e6503152a6ec4160ff612af3f2,84b6601f0ccbf7e6503152a6ec4160ff612af3f2,Use short name for GenericParameter.Name to match .Net.
iskiselev,2015-09-03 20:55:29,https://api.github.com/repos/sq/JSIL/git/commits/0eca1e94ddf5510a2d4f476798c42548504d9aac,0eca1e94ddf5510a2d4f476798c42548504d9aac,Use correct name for PositionalGenericParameter.
kg,2015-08-31 22:24:53,https://api.github.com/repos/sq/JSIL/git/commits/74302a4f1b9b791014b7b4de8ba9c2468ca1648c,74302a4f1b9b791014b7b4de8ba9c2468ca1648c,Make JSDefaultValueLiteral's value more sensible
kg,2015-08-31 22:15:44,https://api.github.com/repos/sq/JSIL/git/commits/3e05fa7f446079a48816deac3812f5831ce5b433,3e05fa7f446079a48816deac3812f5831ce5b433,Update linux build script to set node env var
kg,2015-08-31 21:21:36,https://api.github.com/repos/sq/JSIL/git/commits/89ece1a87c521da0d48bf04712e822e24d524cb8,89ece1a87c521da0d48bf04712e822e24d524cb8,Add scripts to build mono from source and activate it for linux scenarios where packages don't work
kg,2015-08-31 20:26:50,https://api.github.com/repos/sq/JSIL/git/commits/84ae6bbf203075a6d0475975cb1813dc19b4eab6,84ae6bbf203075a6d0475975cb1813dc19b4eab6,Add a linux build script and update Meta
kg,2015-08-31 20:11:55,https://api.github.com/repos/sq/JSIL/git/commits/a1e458d9197e5cd363438f73b75864266cabb303,a1e458d9197e5cd363438f73b75864266cabb303,Properly exclude the XNA projects from NoXNA in both debug and release modes
kg,2015-08-31 07:36:37,https://api.github.com/repos/sq/JSIL/git/commits/89e356023f273dbd18419ba5306add805e0c056b,89e356023f273dbd18419ba5306add805e0c056b,Package restore and compilation caching work.
kg,2015-08-31 07:06:18,https://api.github.com/repos/sq/JSIL/git/commits/9caf16064f21216e6b98171a2127d9d45f8a0f75,9caf16064f21216e6b98171a2127d9d45f8a0f75,Maybe this will work? Travis and YAML are undocumented nightmares
kg,2015-08-31 06:48:41,https://api.github.com/repos/sq/JSIL/git/commits/946b908194807d6b612fd5a315c35e2cfbcd0777,946b908194807d6b612fd5a315c35e2cfbcd0777,Set the ci scripts executable
kg,2015-08-31 06:41:29,https://api.github.com/repos/sq/JSIL/git/commits/def3fb592c82556288a364cb497d9317499d7e8b,def3fb592c82556288a364cb497d9317499d7e8b,Rough attempt at compile caching for travis CI
kg,2015-08-31 03:54:07,https://api.github.com/repos/sq/JSIL/git/commits/83e3e70749717a69907427d86a57f4638bd741e3,83e3e70749717a69907427d86a57f4638bd741e3,Re-enable compilation cache
kg,2015-08-31 03:53:41,https://api.github.com/repos/sq/JSIL/git/commits/dd439db923b400f802bbefef5ef2ec5619dc88fe,dd439db923b400f802bbefef5ef2ec5619dc88fe,"Don't do JSIL.Meta version check per-appdomain, so that tests aren't painfully slow on Travis"
kg,2015-08-31 03:14:06,https://api.github.com/repos/sq/JSIL/git/commits/a3a62ba35ecbb37c91dcc1164d0635bf18fd9c78,a3a62ba35ecbb37c91dcc1164d0635bf18fd9c78,Something about yml compilation cache isn't working
kg,2015-08-31 02:52:43,https://api.github.com/repos/sq/JSIL/git/commits/3e91ab7065444859ec5d3a719c7e796539fe487e,3e91ab7065444859ec5d3a719c7e796539fe487e,Try a different approach to finding JSIL.Meta
kg,2015-08-31 02:46:34,https://api.github.com/repos/sq/JSIL/git/commits/2a57537f2773f4c9293bf07127e593c122ca877a,2a57537f2773f4c9293bf07127e593c122ca877a,More aggressive compile caching based on git version information for the Meta submodule instead of an exact timestamp match on JSIL.Meta.dll
kg,2015-08-31 02:24:27,https://api.github.com/repos/sq/JSIL/git/commits/6d998f6417fe403a0aa76bbf295bd4262e4efe6c,6d998f6417fe403a0aa76bbf295bd4262e4efe6c,Log whether or not a test compile was a cache hit
kg,2015-08-31 02:31:08,https://api.github.com/repos/sq/JSIL/git/commits/417466348fffcb1854d686594eeb3e70037f43dd,417466348fffcb1854d686594eeb3e70037f43dd,"Merge pull request #834 from dmirmilshteyn/misc/impl-2

Misc. implementations"
kg,2015-08-31 01:55:33,https://api.github.com/repos/sq/JSIL/git/commits/b696d4fbe474b7afba6704fc5491a2f887ffd8c5,b696d4fbe474b7afba6704fc5491a2f887ffd8c5,Turn on appveyor caching for nuget packages and compiled tests
dmirmilshteyn,2015-08-31 00:23:50,https://api.github.com/repos/sq/JSIL/git/commits/e6fe54b7d6057c466cb4accbfaf3ae82b7febe55,e6fe54b7d6057c466cb4accbfaf3ae82b7febe55,Implemented GetTypeInfo and TypeInfo.AsType
dmirmilshteyn,2015-08-31 00:15:23,https://api.github.com/repos/sq/JSIL/git/commits/6fd2b041ad71bf04540d8f3a7f69745752c5307b,6fd2b041ad71bf04540d8f3a7f69745752c5307b,Implemented Assembly.DefinedTypes
dmirmilshteyn,2015-08-23 16:42:39,https://api.github.com/repos/sq/JSIL/git/commits/22ae4d7231d7e61cae723fca3bdd2232bd3acfdd,22ae4d7231d7e61cae723fca3bdd2232bd3acfdd,Implemented ConcurrentQueue
dmirmilshteyn,2015-08-30 23:58:39,https://api.github.com/repos/sq/JSIL/git/commits/50894480e53b1fc86b6bcf5fdceb7fc1ab2a0c31,50894480e53b1fc86b6bcf5fdceb7fc1ab2a0c31,Implemented DateTime To/FromBinary methods
dmirmilshteyn,2015-08-30 23:54:24,https://api.github.com/repos/sq/JSIL/git/commits/cb19b37726540e45479cf0f04be0a4d7cd9f901a,cb19b37726540e45479cf0f04be0a4d7cd9f901a,Implemented Stream.CopyToAsync
dmirmilshteyn,2015-08-23 02:45:03,https://api.github.com/repos/sq/JSIL/git/commits/2c6f7ac9a78f94cd7f33ede888095b8708f28014,2c6f7ac9a78f94cd7f33ede888095b8708f28014,"Implemented CustomAttributeExtensions.GetCustomAttribute

Conflicts:
	JSIL.Libraries/JSIL.Libraries.csproj"
dmirmilshteyn,2015-08-23 07:52:12,https://api.github.com/repos/sq/JSIL/git/commits/174c4dcb345073a9a25d8c06284134b8e7c29afe,174c4dcb345073a9a25d8c06284134b8e7c29afe,Minimal implementation of SemaphoreSlim
dmirmilshteyn,2015-08-30 23:46:22,https://api.github.com/repos/sq/JSIL/git/commits/f9de8a5c510be90e1e214062a91874979acad29c,f9de8a5c510be90e1e214062a91874979acad29c,Added stub for BinaryExpression
dmirmilshteyn,2015-08-30 23:43:39,https://api.github.com/repos/sq/JSIL/git/commits/22e937b02d8233790f6cd523236813be0dede1f6,22e937b02d8233790f6cd523236813be0dede1f6,Implemented Path.Combine overload for string arrays
dmirmilshteyn,2015-08-30 23:42:40,https://api.github.com/repos/sq/JSIL/git/commits/6f4f255a13dc41404389f5d3e94717bae775c48a,6f4f255a13dc41404389f5d3e94717bae775c48a,Implemented XmlReader.ReadSubtree
dmirmilshteyn,2015-08-12 12:38:21,https://api.github.com/repos/sq/JSIL/git/commits/ef2dff2c9f7f7ad180d53adfadf3f2dc622f71f5,ef2dff2c9f7f7ad180d53adfadf3f2dc622f71f5,Created config flag to use the JSIL XML implementation
dmirmilshteyn,2015-08-24 22:50:47,https://api.github.com/repos/sq/JSIL/git/commits/3fc4e39a7dd6c97f33c563fe0774036b48a21614,3fc4e39a7dd6c97f33c563fe0774036b48a21614,Implemented non-static String.Equals with StringComparison
dmirmilshteyn,2015-08-18 22:53:09,https://api.github.com/repos/sq/JSIL/git/commits/e35cd85cd128d069b6291075e5cc82ae547a3f0c,e35cd85cd128d069b6291075e5cc82ae547a3f0c,Implemented String.Equals with the StringComparison overload
dmirmilshteyn,2015-08-18 02:34:42,https://api.github.com/repos/sq/JSIL/git/commits/8c2866907990a90f22d15dee04c3f2dd4b3a6345,8c2866907990a90f22d15dee04c3f2dd4b3a6345,Implemented String.Equals
kg,2015-08-30 10:53:55,https://api.github.com/repos/sq/JSIL/git/commits/cc999a9f274b3dbaeaaf5d5e561f8a365ba5b086,cc999a9f274b3dbaeaaf5d5e561f8a365ba5b086,"Actually remove submodules. Sigh, git"
kg,2015-08-30 10:47:49,https://api.github.com/repos/sq/JSIL/git/commits/557aab789021b26ec2478fac8df0c73722401319,557aab789021b26ec2478fac8df0c73722401319,Dead code cleanup
kg,2015-08-30 10:40:25,https://api.github.com/repos/sq/JSIL/git/commits/46c86863c4eb106e4ffb65453593e684d74dffdf,46c86863c4eb106e4ffb65453593e684d74dffdf,Eliminate MSB3884 compiler warnings
kg,2015-08-30 10:38:03,https://api.github.com/repos/sq/JSIL/git/commits/7768ef35340f6db32bef4b00af48e532efb56403,7768ef35340f6db32bef4b00af48e532efb56403,Silence some compiler warnings
kg,2015-08-30 10:32:39,https://api.github.com/repos/sq/JSIL/git/commits/5591d7eeef6e9561e2c680e70d4a83126dba3a90,5591d7eeef6e9561e2c680e70d4a83126dba3a90,"Merge pull request #832 from iskiselev/Test_Subfolders

Tests use subfolders for generated JS files."
kg,2015-08-30 10:26:18,https://api.github.com/repos/sq/JSIL/git/commits/3077d6fd3b784aa6e0bb335725d10837a303a5e6,3077d6fd3b784aa6e0bb335725d10837a303a5e6,"Merge pull request #828 from iskiselev/appveyor

Added config for ci.appveyor.com."
kg,2015-08-30 10:23:22,https://api.github.com/repos/sq/JSIL/git/commits/be035533072ddde7737bf31317ce9aa9d8d1ea1b,be035533072ddde7737bf31317ce9aa9d8d1ea1b,"Merge pull request #822 from iskiselev/JS_Split

Javascript files splitted"
iskiselev,2015-08-30 08:21:43,https://api.github.com/repos/sq/JSIL/git/commits/ffbcc2bf4b16b1570ad04730f20ca34b09002f4e,ffbcc2bf4b16b1570ad04730f20ca34b09002f4e,Tests use subfolders for generated JS files (#817).
iskiselev,2015-08-30 04:52:34,https://api.github.com/repos/sq/JSIL/git/commits/20bb884be2c68d09d22f236d6905b60c8eb2a4d7,20bb884be2c68d09d22f236d6905b60c8eb2a4d7,Diff reapplied.
kg,2015-08-30 02:41:49,https://api.github.com/repos/sq/JSIL/git/commits/ff7319df95aaa82d16c47893786055e12798248d,ff7319df95aaa82d16c47893786055e12798248d,Fix interface method names having a `1 or such in them because of formatting differences between Cecil and JSIL TypeInformation
kg,2015-08-29 22:37:22,https://api.github.com/repos/sq/JSIL/git/commits/3e5c2c9e39f3967752c7974c0061f39c82552165,3e5c2c9e39f3967752c7974c0061f39c82552165,"Fix renaming interface types and add a test
Don't emit JSIL.Meta.X attributes into output JS"
kg,2015-08-29 22:27:27,https://api.github.com/repos/sq/JSIL/git/commits/b52e18ddeff6356137f762538425430279a5ef46,b52e18ddeff6356137f762538425430279a5ef46,Fix renamed interface methods (#273)
kg,2015-08-29 22:14:22,https://api.github.com/repos/sq/JSIL/git/commits/f19fa3ac6872c7684eb1041743fef0fd4689396e,f19fa3ac6872c7684eb1041743fef0fd4689396e,Add a test for #273 and begin the fix
kg,2015-08-29 22:14:16,https://api.github.com/repos/sq/JSIL/git/commits/03c0e6bcdc9dce9f2e22a42fc69e2ee741771190,03c0e6bcdc9dce9f2e22a42fc69e2ee741771190,"Merge pull request #829 from iskiselev/gulp_BOM

Translated scripts should contain BOM at the beginning."
kg,2015-08-29 10:47:27,https://api.github.com/repos/sq/JSIL/git/commits/c013d428255d73244e4f7815b6850eace35ee918,c013d428255d73244e4f7815b6850eace35ee918,Fix dynamic method identifiers not being escaped
kg,2015-08-29 09:59:57,https://api.github.com/repos/sq/JSIL/git/commits/3b1b5de449084a55dece139450d1271124b20f67,3b1b5de449084a55dece139450d1271124b20f67,Don't escape JSFakeMethod names (fixes accessing eval)
kg,2015-08-29 09:20:44,https://api.github.com/repos/sq/JSIL/git/commits/2bd1fe2453a9176839da0a757d0a223e9d707473,2bd1fe2453a9176839da0a757d0a223e9d707473,Add a test for issue #743
kg,2015-08-29 09:17:17,https://api.github.com/repos/sq/JSIL/git/commits/c0a2d19c24d267dae449b8e3c6e9bd92b804ca82,c0a2d19c24d267dae449b8e3c6e9bd92b804ca82,Fix issue #325 and add a test; probably fix issue #725
kg,2015-08-29 09:13:37,https://api.github.com/repos/sq/JSIL/git/commits/77cac554cace2d0a90a7b6f7d32f29286676de98,77cac554cace2d0a90a7b6f7d32f29286676de98,Fix issue #721 and add a test
kg,2015-08-29 09:10:27,https://api.github.com/repos/sq/JSIL/git/commits/12a0c28daaacd02b87d0aa56be0d1e808af0bc87,12a0c28daaacd02b87d0aa56be0d1e808af0bc87,Add test for issue #710
kg,2015-08-29 09:00:55,https://api.github.com/repos/sq/JSIL/git/commits/da67bcbdf132de03bfb564d280a648a43a68a487,da67bcbdf132de03bfb564d280a648a43a68a487,Fix issue #800
kg,2015-08-29 08:50:05,https://api.github.com/repos/sq/JSIL/git/commits/cc8fb0e3363a39554908e4f6c2373f3580be50ce,cc8fb0e3363a39554908e4f6c2373f3580be50ce,Add tests for issue #800 and issue #802
kg,2015-08-29 08:47:57,https://api.github.com/repos/sq/JSIL/git/commits/45f4188cd4f113e18ec35d20830ba2bd0594c84b,45f4188cd4f113e18ec35d20830ba2bd0594c84b,"Fix issue #827 and add a test.
Add a configuration variable to disable stripping of unused loop names."
kg,2015-08-29 08:33:06,https://api.github.com/repos/sq/JSIL/git/commits/251f95230bd425d2c770b554e2c66599eb3efc61,251f95230bd425d2c770b554e2c66599eb3efc61,Add 'eval' to JS reserved words (#830)
kg,2015-08-29 08:27:32,https://api.github.com/repos/sq/JSIL/git/commits/c8925b197ce058b77fb34321d0cfb92034df69e3,c8925b197ce058b77fb34321d0cfb92034df69e3,Fix emscripten fixture creating console windows
kg,2015-08-29 07:13:53,https://api.github.com/repos/sq/JSIL/git/commits/c01a5a2348c045d9195af4eb0dbab07d0e88bee2,c01a5a2348c045d9195af4eb0dbab07d0e88bee2,Invalidate static analysis data for a function when introducing a temporary variable. If the data is stale it could cause the variable to be eliminated.
kg,2015-08-29 07:01:00,https://api.github.com/repos/sq/JSIL/git/commits/46497f8936b8d0a6c3899a76ae9d853a6461acec,46497f8936b8d0a6c3899a76ae9d853a6461acec,Fix typo in ComparisonTest
kg,2015-08-29 07:00:50,https://api.github.com/repos/sq/JSIL/git/commits/48b562a7cd1f1049325047b1b4b20ac5dbcd1c53,48b562a7cd1f1049325047b1b4b20ac5dbcd1c53,This isn't used apparently? Huh.
kg,2015-08-29 06:51:59,https://api.github.com/repos/sq/JSIL/git/commits/4d5cd1f6288b95868b0d8c1060bf5839ea242bd1,4d5cd1f6288b95868b0d8c1060bf5839ea242bd1,Fix a pair of allocation hoisting crash/infinite recursion bugs
kg,2015-08-29 00:31:08,https://api.github.com/repos/sq/JSIL/git/commits/e16f73fe175723748de9c451f9759a80304801e9,e16f73fe175723748de9c451f9759a80304801e9,Inform analyzer of the caller when doing method replacement
kg,2015-08-28 23:01:09,https://api.github.com/repos/sq/JSIL/git/commits/7361b303b56ee92dc8c4f1298f3c283551c7f12f,7361b303b56ee92dc8c4f1298f3c283551c7f12f,Never eliminate temporary variables
kg,2015-08-28 22:40:57,https://api.github.com/repos/sq/JSIL/git/commits/f9bdd53547bbb7eca4cf9aff4458069956f982d5,f9bdd53547bbb7eca4cf9aff4458069956f982d5,"Expose a function's label group count
All of a function's temporary and hoisted variables are now added to the AllVariables dictionary
Expose the types of a function's temporary variables as a list instead of just a temporary variable counter"
iskiselev,2015-08-28 22:35:51,https://api.github.com/repos/sq/JSIL/git/commits/26a48d89a62f16dc7de9db84bebb012ff8bc4092,26a48d89a62f16dc7de9db84bebb012ff8bc4092,"Gulp: don't delete Libraies, only it's content."
iskiselev,2015-08-28 07:23:46,https://api.github.com/repos/sq/JSIL/git/commits/98d17c900f8c547e0ea7f58855fab9b0e3995db9,98d17c900f8c547e0ea7f58855fab9b0e3995db9,"Remove BOM from script files, normalize EOL in generated scripts."
iskiselev,2015-08-27 20:40:17,https://api.github.com/repos/sq/JSIL/git/commits/4b64345b8df2a0686746943448d83a0cdef561d8,4b64345b8df2a0686746943448d83a0cdef561d8,Translated scripts should contain BOM at the beginning.
iskiselev,2015-08-26 22:28:20,https://api.github.com/repos/sq/JSIL/git/commits/ec2b3a6b0ddc47fff2bbdd380b129448e0f65457,ec2b3a6b0ddc47fff2bbdd380b129448e0f65457,Added config for ci.appveyor.com.
kg,2015-08-26 19:16:17,https://api.github.com/repos/sq/JSIL/git/commits/1933348cae75606a79656c56761a6c5ca40c64fc,1933348cae75606a79656c56761a6c5ca40c64fc,"Merge pull request #807 from iskiselev/DelegateOverload

Invocation overloaded method through delegate."
kg,2015-08-26 18:47:57,https://api.github.com/repos/sq/JSIL/git/commits/3af321900d5785d42a856daf99a64dfad495aee4,3af321900d5785d42a856daf99a64dfad495aee4,"Merge pull request #824 from iskiselev/Gulp_fix

Fix gulp script (run metascript after clean)."
iskiselev,2015-08-26 05:13:41,https://api.github.com/repos/sq/JSIL/git/commits/737f59b18a0683552044347bca81147864a16d61,737f59b18a0683552044347bca81147864a16d61,Fix gulp script (run metascript after clean).
iskiselev,2015-08-26 04:55:53,https://api.github.com/repos/sq/JSIL/git/commits/fc52d5567e9c8d2da39074d2c1ace4fb95f3f616,fc52d5567e9c8d2da39074d2c1ace4fb95f3f616,JSIL.Bootstap.Async.js and JSIL.Bootstap.Resources.js splited.
kg,2015-08-26 04:41:32,https://api.github.com/repos/sq/JSIL/git/commits/6eebeb75b0a9a957bb0247b5c23431b9a0025d30,6eebeb75b0a9a957bb0247b5c23431b9a0025d30,Fix constant attributes
kg,2015-08-26 01:03:47,https://api.github.com/repos/sq/JSIL/git/commits/26d256d89873c8852c451783752c9455f4b49336,26d256d89873c8852c451783752c9455f4b49336,Make it possible to identify whether a formatter just emitted a linebreak
kg,2015-08-25 23:31:55,https://api.github.com/repos/sq/JSIL/git/commits/e16e7aa3ca622598153668e6897d47d718925879,e16e7aa3ca622598153668e6897d47d718925879,Checkpoint
kg,2015-08-25 23:31:41,https://api.github.com/repos/sq/JSIL/git/commits/ddb74fd7a38b16d116382fa7213c450cb7de65d9,ddb74fd7a38b16d116382fa7213c450cb7de65d9,Fix PDBs in newer VS
kg,2015-08-25 18:45:09,https://api.github.com/repos/sq/JSIL/git/commits/1405973ee8312a6dbba2f3f06092b6d2deba30af,1405973ee8312a6dbba2f3f06092b6d2deba30af,Tweak temporary elimination to not treat readonly/JSImmutable fields as a mutation risk
kg,2015-08-25 18:16:55,https://api.github.com/repos/sq/JSIL/git/commits/44be147ab9bbc69477d49dec46bf429d4699d03b,44be147ab9bbc69477d49dec46bf429d4699d03b,Handle overloaded VisitNode(JSNode) in visitors
kg,2015-08-25 18:02:56,https://api.github.com/repos/sq/JSIL/git/commits/f02b08b9892f05cae93e4ff233545e236f14a64c,f02b08b9892f05cae93e4ff233545e236f14a64c,Quiet mode suppresses the output file listing
kg,2015-08-25 17:53:12,https://api.github.com/repos/sq/JSIL/git/commits/0e09ddcd7dd19c2847f5774f36c196a3e25c0dd6,0e09ddcd7dd19c2847f5774f36c196a3e25c0dd6,Added quiet mode to suppress non-error/warning jsilc stderr output
kg,2015-08-25 17:10:16,https://api.github.com/repos/sq/JSIL/git/commits/a864dcdf70a1033a7ec214ea90d059411628bad1,a864dcdf70a1033a7ec214ea90d059411628bad1,Changes to make it easier for analyzers and emitters to tell whether an assembly or member are being stubbed/ignored
kg,2015-08-25 16:21:49,https://api.github.com/repos/sq/JSIL/git/commits/3dcee5a7b89aa3d6543b943d35e6dca344813958,3dcee5a7b89aa3d6543b943d35e6dca344813958,"Simplify and extend the analyzer API
Emitters can provide a list of analyzers they want loaded
Analyzers can filter the configuration being used by the translator"
kg,2015-08-25 10:56:23,https://api.github.com/repos/sq/JSIL/git/commits/eecf8a5cc7f55efdca0f4b9138a59cde56cb523b,eecf8a5cc7f55efdca0f4b9138a59cde56cb523b,Move cached value stuff into the emitter
kg,2015-08-25 10:39:45,https://api.github.com/repos/sq/JSIL/git/commits/174f3c816ff2f048f67372967f3473604bf987be,174f3c816ff2f048f67372967f3473604bf987be,Rework how field JS is generated so emitters have more control
kg,2015-08-25 08:50:32,https://api.github.com/repos/sq/JSIL/git/commits/64fd63fdbaa9c112d60eea293c368d6640b004bc,64fd63fdbaa9c112d60eea293c368d6640b004bc,"Add EmitFooter hook
Add short form of emitter argument"
kg,2015-08-25 07:50:24,https://api.github.com/repos/sq/JSIL/git/commits/c0830e0ff7e16d23f69aae083010dc8f90e643ac,c0830e0ff7e16d23f69aae083010dc8f90e643ac,Checkpoint
kg,2015-08-25 07:22:26,https://api.github.com/repos/sq/JSIL/git/commits/70a2d5652dd5f8a77e902584f176a5f6123b10ba,70a2d5652dd5f8a77e902584f176a5f6123b10ba,Make tuned GC work again
kg,2015-08-25 06:01:24,https://api.github.com/repos/sq/JSIL/git/commits/de682659b3854d823d68f9a8264bf1b0e1d78e4f,de682659b3854d823d68f9a8264bf1b0e1d78e4f,Test runner cleanup
kg,2015-08-25 04:50:54,https://api.github.com/repos/sq/JSIL/git/commits/1386367a09b5ea0e3e491ad4e65558ec64acfda4,1386367a09b5ea0e3e491ad4e65558ec64acfda4,Deffered -> Deferred
kg,2015-08-25 04:46:57,https://api.github.com/repos/sq/JSIL/git/commits/7506b3ff15be7ac15d18380707cea8085905d96a,7506b3ff15be7ac15d18380707cea8085905d96a,Checkpoint
kg,2015-08-25 04:43:27,https://api.github.com/repos/sq/JSIL/git/commits/bdb5473700e4cfa17e421a70409dce3a53836208,bdb5473700e4cfa17e421a70409dce3a53836208,Fix $ references in method bodies (issue309.cs et al)
kg,2015-08-25 04:36:26,https://api.github.com/repos/sq/JSIL/git/commits/7a3a84a258bc6e229784a717f08c5746b1d1a491,7a3a84a258bc6e229784a717f08c5746b1d1a491,Checkpoint
kg,2015-08-25 04:29:52,https://api.github.com/repos/sq/JSIL/git/commits/18e5316c93de4d206fb169aaef8e88bd9b2dac4c,18e5316c93de4d206fb169aaef8e88bd9b2dac4c,Checkpoint
kg,2015-08-25 04:22:34,https://api.github.com/repos/sq/JSIL/git/commits/9239c0e580157bc5c4fd43f1be7a5be400910005,9239c0e580157bc5c4fd43f1be7a5be400910005,Checkpoint
kg,2015-08-25 04:09:02,https://api.github.com/repos/sq/JSIL/git/commits/0828caa83dc38322053d46d5b849c7f611f0677d,0828caa83dc38322053d46d5b849c7f611f0677d,"Removed skeleton generation feature
Checkpoint"
kg,2015-08-25 02:57:35,https://api.github.com/repos/sq/JSIL/git/commits/58adc88656287369fbb4c10a26d7499a4e0f21e5,58adc88656287369fbb4c10a26d7499a4e0f21e5,Checkpoint
kg,2015-08-25 02:28:02,https://api.github.com/repos/sq/JSIL/git/commits/0d998328b10b1fea46685ac119dd3d97e5f604b2,0d998328b10b1fea46685ac119dd3d97e5f604b2,Checkpoint
kg,2015-08-25 02:08:47,https://api.github.com/repos/sq/JSIL/git/commits/7d13f7f56fc5e62b11590edac27221689c82e38b,7d13f7f56fc5e62b11590edac27221689c82e38b,Checkpoint: Extract JS code generation logic from AssemblyTranslator for swappable backends
kg,2015-08-26 04:34:25,https://api.github.com/repos/sq/JSIL/git/commits/3851ba309d22d06a8e2c2aa5a8c11f57cebb8474,3851ba309d22d06a8e2c2aa5a8c11f57cebb8474,"Merge pull request #819 from iskiselev/ReflectionAdditions

Reflection additions"
kg,2015-08-26 04:33:56,https://api.github.com/repos/sq/JSIL/git/commits/6af6ae73efd90121faf3f57e441ebd105d808211,6af6ae73efd90121faf3f57e441ebd105d808211,"Merge pull request #820 from iskiselev/GeneratedScripts

Header for generated scripts, generated scripts are readonly"
iskiselev,2015-08-26 01:32:44,https://api.github.com/repos/sq/JSIL/git/commits/4e7c1fbed6fca64c80167928a06c059008d73419,4e7c1fbed6fca64c80167928a06c059008d73419,JSIL.Bootstrap.Text splitted.
iskiselev,2015-08-25 21:19:27,https://api.github.com/repos/sq/JSIL/git/commits/c035452e75e1b372386e93cb47de54f8a82affb9,c035452e75e1b372386e93cb47de54f8a82affb9,Fixed multi-assembly definitions problem in JSIL.IO.js
iskiselev,2015-08-25 20:40:47,https://api.github.com/repos/sq/JSIL/git/commits/e6f274caf42b2297f71c26a00883d1eb599321ff,e6f274caf42b2297f71c26a00883d1eb599321ff,Cleanup of JS class splitting. Reverted JSIL.Unsafe.js splitting.
kg,2015-08-25 07:57:01,https://api.github.com/repos/sq/JSIL/git/commits/9e0d95895227501d3e0172ee4d6c07a503bea626,9e0d95895227501d3e0172ee4d6c07a503bea626,"Merge pull request #821 from iskiselev/Mono_Array

Mono compatibility (array unsafe operations)"
iskiselev,2015-08-25 07:23:20,https://api.github.com/repos/sq/JSIL/git/commits/7748c209c6e45a68504ef5f1d8be319b3f90b967,7748c209c6e45a68504ef5f1d8be319b3f90b967,"Header for generated scripts, generated scripts are readonly (#818)."
kg,2015-08-25 06:58:13,https://api.github.com/repos/sq/JSIL/git/commits/0cae8523ba9382fe1e7b7f6725b390b031079c20,0cae8523ba9382fe1e7b7f6725b390b031079c20,Less noisy unsafe tests
kg,2015-08-25 06:34:46,https://api.github.com/repos/sq/JSIL/git/commits/3132dd1bcdf400b6ac98e71f70c8635f878205b7,3132dd1bcdf400b6ac98e71f70c8635f878205b7,Fix issue #789 and add a test
kg,2015-08-25 05:28:53,https://api.github.com/repos/sq/JSIL/git/commits/dfc9f694550e10499563f673ac27b132787f28be,dfc9f694550e10499563f673ac27b132787f28be,Add a workaround for the goofy new restriction against defining non-configurable properties on window
kg,2015-08-25 04:34:04,https://api.github.com/repos/sq/JSIL/git/commits/cd49e9eaece7df6c10fcfd1329c1d60ad9e126b5,cd49e9eaece7df6c10fcfd1329c1d60ad9e126b5,Fix ComparisonTest crash
kg,2015-08-25 02:46:48,https://api.github.com/repos/sq/JSIL/git/commits/aae24068711de16e07bfeadb6e2093bae8af4712,aae24068711de16e07bfeadb6e2093bae8af4712,"Reorder, fix accidental removal"
kg,2015-08-25 02:43:11,https://api.github.com/repos/sq/JSIL/git/commits/8614bbd383cf8beddfb62f4bef3c886a169b7fbe,8614bbd383cf8beddfb62f4bef3c886a169b7fbe,"Merge pull request #814 from iskiselev/Gulp

Build improvements"
kg,2015-08-25 01:31:14,https://api.github.com/repos/sq/JSIL/git/commits/56a5386d91e33267efc4b5ae2df971502eba3087,56a5386d91e33267efc4b5ae2df971502eba3087,Clearly name each configuration of the test cases
kg,2015-08-25 00:45:16,https://api.github.com/repos/sq/JSIL/git/commits/240c89264831045bdb457c0b2b0917bd9d37fb4b,240c89264831045bdb457c0b2b0917bd9d37fb4b,Fix some variations of <native-int> + <pointer>
iskiselev,2015-08-25 00:08:13,https://api.github.com/repos/sq/JSIL/git/commits/f831bb1910e77902b9507da402507cd5a30bce7d,f831bb1910e77902b9507da402507cd5a30bce7d,Compatibility with mono when BCL translated (Array.UnsafeLoad etc.)
kg,2015-08-24 23:45:44,https://api.github.com/repos/sq/JSIL/git/commits/e015a438a0c0ae63a80537310b28f08509fd600e,e015a438a0c0ae63a80537310b28f08509fd600e,"Merge pull request #816 from iskiselev/NumericFixes

Numeric fixes"
iskiselev,2015-08-24 23:34:50,https://api.github.com/repos/sq/JSIL/git/commits/28d6bd4832a101ed2bd6cb16e14e1acd3f34271c,28d6bd4832a101ed2bd6cb16e14e1acd3f34271c,Support of EnvironmentVariables and AdditionalFilesToLoad in test link.
iskiselev,2015-08-24 22:02:13,https://api.github.com/repos/sq/JSIL/git/commits/cc43048002d88f26213267455ea01266913dca86,cc43048002d88f26213267455ea01266913dca86,Base type for numeric types is ValueType now (fix #812).
iskiselev,2015-08-24 18:34:23,https://api.github.com/repos/sq/JSIL/git/commits/28b5fe54ced8b9545831456c47b830f3ddf9e0ee,28b5fe54ced8b9545831456c47b830f3ddf9e0ee,"gulp-metascript updated to latest version, custom fix removed."
iskiselev,2015-08-23 21:28:55,https://api.github.com/repos/sq/JSIL/git/commits/c374e101d123b46d717f3f209d06d850724f3d7d,c374e101d123b46d717f3f209d06d850724f3d7d,Set CopyLocal=false for NUnitTestAdapter per discussion nunit/nunit-vs-adapter#77.
iskiselev,2015-08-23 10:04:34,https://api.github.com/repos/sq/JSIL/git/commits/06cab076a0e56c1c52a4219144c37739376aa6d2,06cab076a0e56c1c52a4219144c37739376aa6d2,"Don't copy NUnit.VisualStudio.TestAdapter and dependecies on Unix, as they breaks test runner on mono."
iskiselev,2015-08-23 08:46:11,https://api.github.com/repos/sq/JSIL/git/commits/7731ec431435015d52bfbe5c6cab29a6fd4ae997,7731ec431435015d52bfbe5c6cab29a6fd4ae997,Disabled gulp presence check (untill good cross-platform solution will found).
iskiselev,2015-08-23 08:31:32,https://api.github.com/repos/sq/JSIL/git/commits/caa8c4396f6634db3957ba2b7f713a39c16b0a89,caa8c4396f6634db3957ba2b7f713a39c16b0a89,Added platform NaXNA to JSIL.sln. Other .sln files deleted.
iskiselev,2015-08-23 08:04:05,https://api.github.com/repos/sq/JSIL/git/commits/f367d8d712095ab90469fffd7213442758c1ef4a,f367d8d712095ab90469fffd7213442758c1ef4a,Migrated to Gulp with custom msbuild integration.
kg,2015-08-23 01:41:23,https://api.github.com/repos/sq/JSIL/git/commits/be0834d593b5f636a3d94bdc731fdb235e856b1e,be0834d593b5f636a3d94bdc731fdb235e856b1e,"Merge pull request #809 from iskiselev/Roslyn_int64

Roslyn Int64 comparison"
iskiselev,2015-08-23 00:04:13,https://api.github.com/repos/sq/JSIL/git/commits/95b87f5709485ee895a5f9260a1b19175151dae9,95b87f5709485ee895a5f9260a1b19175151dae9,Translated tests marked as fails on mono.
iskiselev,2015-08-22 07:36:10,https://api.github.com/repos/sq/JSIL/git/commits/53d1e2f413ea5c1abce6e435198de1cf2b9b1294,53d1e2f413ea5c1abce6e435198de1cf2b9b1294,Translated tests enable on CI.
iskiselev,2015-08-22 05:36:33,https://api.github.com/repos/sq/JSIL/git/commits/a9222841de24fe7dcc6a359a43a23cc3ea738117,a9222841de24fe7dcc6a359a43a23cc3ea738117,Type.IsClass implemented.
iskiselev,2015-08-22 05:36:33,https://api.github.com/repos/sq/JSIL/git/commits/310187ddf474ad1dacdf3ef0c88b2e9d851b89ee,310187ddf474ad1dacdf3ef0c88b2e9d851b89ee,Fix #754 for boolean (test added).
kg,2015-08-22 05:34:53,https://api.github.com/repos/sq/JSIL/git/commits/da73ebc4402c862a21fb64f0ef7d2fd4d373ded4,da73ebc4402c862a21fb64f0ef7d2fd4d373ded4,"Merge pull request #811 from iskiselev/Issue479

Fixed generic type resolution."
kg,2015-08-22 05:32:02,https://api.github.com/repos/sq/JSIL/git/commits/cb892c20c940ef675497830262edc80274b7bf84,cb892c20c940ef675497830262edc80274b7bf84,"Merge pull request #805 from iskiselev/ICustomAttributeProvider

Translated BCL, reflection improvements."
iskiselev,2015-08-22 01:34:36,https://api.github.com/repos/sq/JSIL/git/commits/7130e4f613982a5e0a48bb8caca704338ffbfd59,7130e4f613982a5e0a48bb8caca704338ffbfd59,Fixed generic type resolution (#479).
iskiselev,2015-08-21 23:38:51,https://api.github.com/repos/sq/JSIL/git/commits/cfb8884d396db51379ace2a47154f08c725fe990,cfb8884d396db51379ace2a47154f08c725fe990,PropertyInfo GetValue/SetValue.
iskiselev,2015-08-25 06:30:13,https://api.github.com/repos/sq/JSIL/git/commits/8d2744bfab37f7dcd92c31561bea35a5f0df3803,8d2744bfab37f7dcd92c31561bea35a5f0df3803,MemberInfo.IsDefined impelemented.
iskiselev,2015-08-21 21:39:01,https://api.github.com/repos/sq/JSIL/git/commits/c828bbc9ce4ad6a46d167fba3a9aa3f434037d4a,c828bbc9ce4ad6a46d167fba3a9aa3f434037d4a,Mono compatibility.
iskiselev,2015-08-21 21:38:26,https://api.github.com/repos/sq/JSIL/git/commits/41e8eba84c971d96f0f919dac517e352172f0485,41e8eba84c971d96f0f919dac517e352172f0485,Fix of ctor calls on ByRef structs (#810).
iskiselev,2015-08-21 07:17:05,https://api.github.com/repos/sq/JSIL/git/commits/3e967dbb17e9160be826a07dff5493eedd2075b9,3e967dbb17e9160be826a07dff5493eedd2075b9,Fixed type for Int64 comparison operations.
iskiselev,2015-08-21 05:31:51,https://api.github.com/repos/sq/JSIL/git/commits/e58cbd18a592b6f451eb2ae11beba3d749f184bc,e58cbd18a592b6f451eb2ae11beba3d749f184bc,Fixed #808 (<int64>==0 on roslyn release).
iskiselev,2015-08-21 04:50:02,https://api.github.com/repos/sq/JSIL/git/commits/c152009784f971751d1f192e0158fe1bfd3eb5d5,c152009784f971751d1f192e0158fe1bfd3eb5d5,Roslyn test case support.
iskiselev,2015-08-21 04:49:31,https://api.github.com/repos/sq/JSIL/git/commits/a6b6f22519d4e09bcad597d0647148a87ebf0dcd,a6b6f22519d4e09bcad597d0647148a87ebf0dcd,GetConstructors always use DeclaredOnly internally.
iskiselev,2015-08-25 06:26:58,https://api.github.com/repos/sq/JSIL/git/commits/743d1691774d4148db25f71e0004f75547640b06,743d1691774d4148db25f71e0004f75547640b06,JSIL.GetMemberAttributes iherit support for MethodInfo.
iskiselev,2015-08-25 03:08:11,https://api.github.com/repos/sq/JSIL/git/commits/74fa256cf348bc7e56bd8f98f7da8c4ef0a3572a,74fa256cf348bc7e56bd8f98f7da8c4ef0a3572a,"Added System.Reflection.TypeInfo. System.RuntimeType derived from it now.
Removed override of Type.GetType - it is normal to return typeof(RuntimeType) there."
iskiselev,2015-08-20 07:37:41,https://api.github.com/repos/sq/JSIL/git/commits/612464670e8419984ecf2de359695f28747893a9,612464670e8419984ecf2de359695f28747893a9,Fixed ilasm path resolution (for shadow copy).
iskiselev,2015-08-20 07:21:12,https://api.github.com/repos/sq/JSIL/git/commits/fbd4d9b79d4b9dc0ec7d6d6d7ca5dfb357f0d106,fbd4d9b79d4b9dc0ec7d6d6d7ca5dfb357f0d106,Fixed test Issue585.cs
invalid-email-address,2015-08-20 05:04:27,https://api.github.com/repos/sq/JSIL/git/commits/0823d7ebff2ddab5e7b9907b2f42c10557f808da,0823d7ebff2ddab5e7b9907b2f42c10557f808da,Splitted js files to one class per file.
iskiselev,2015-08-20 04:45:27,https://api.github.com/repos/sq/JSIL/git/commits/0aa7d6dca4c2a213247f26924714710a8c739a6a,0aa7d6dca4c2a213247f26924714710a8c739a6a,Type.DeclaringType implemented.
iskiselev,2015-08-20 04:44:55,https://api.github.com/repos/sq/JSIL/git/commits/d7ac07131b27f3c2ba8609bd787da651f1763845,d7ac07131b27f3c2ba8609bd787da651f1763845,Invokation overloaded method through delegate (fix #806).
kg,2015-08-20 02:38:29,https://api.github.com/repos/sq/JSIL/git/commits/ca502247a7aae794881794966c915b603f3d1391,ca502247a7aae794881794966c915b603f3d1391,"Merge pull request #801 from iskiselev/MoreCITests

More CI tests"
iskiselev,2015-08-20 01:45:44,https://api.github.com/repos/sq/JSIL/git/commits/3615f50ba0db5f696369195d5d1d579d78b1f778,3615f50ba0db5f696369195d5d1d579d78b1f778,Hack/fix of System.Type initialization.
iskiselev,2015-08-20 01:34:59,https://api.github.com/repos/sq/JSIL/git/commits/67e95347de3c92c8f40734bd7e4c74cba451341e,67e95347de3c92c8f40734bd7e4c74cba451341e,ICustomAttributeProvider added.
iskiselev,2015-08-20 01:34:10,https://api.github.com/repos/sq/JSIL/git/commits/17d8a24b07872503606e5e4d8777af5e17a9ef4a,17d8a24b07872503606e5e4d8777af5e17a9ef4a,$jsilcore.MemberInfoExternal is not required for PropertyInfo/FieldInfo.
iskiselev,2015-08-19 21:10:20,https://api.github.com/repos/sq/JSIL/git/commits/b70c2a322b3dc7cf0118c06f568c28de1a247af3,b70c2a322b3dc7cf0118c06f568c28de1a247af3,Core/Reflection/Mai.js splitted (one file per class).
iskiselev,2015-08-19 20:39:02,https://api.github.com/repos/sq/JSIL/git/commits/4a7259115833940c3c993ffb5988861efb24e7f6,4a7259115833940c3c993ffb5988861efb24e7f6,Moved content from JSIL.Core.Reflection.js to include subfolder.
kg,2015-08-16 02:08:03,https://api.github.com/repos/sq/JSIL/git/commits/9f7f45d627a2653ca6ae8db9741ffe06d4ee90ac,9f7f45d627a2653ca6ae8db9741ffe06d4ee90ac,"Merge pull request #803 from dmirmilshteyn/bugfix/converttoboolean

Added null check to boolean parsing"
dmirmilshteyn,2015-08-15 22:51:34,https://api.github.com/repos/sq/JSIL/git/commits/9eef97813e1e63e9dd295d8bef27def135fc388c,9eef97813e1e63e9dd295d8bef27def135fc388c,Added null check to boolean parsing
iskiselev,2015-08-15 05:11:37,https://api.github.com/repos/sq/JSIL/git/commits/ac40de4848fc433952f18872d5818bfea3c372d3,ac40de4848fc433952f18872d5818bfea3c372d3,Added process.WaitForExit() in test for better mono compatibility.
iskiselev,2015-08-15 03:40:35,https://api.github.com/repos/sq/JSIL/git/commits/c1aa851c987c3466c3db02803e21d626514cddf6,c1aa851c987c3466c3db02803e21d626514cddf6,Removed nvm install command from CI as it is pre-installed.
iskiselev,2015-08-14 23:37:54,https://api.github.com/repos/sq/JSIL/git/commits/80f5cf56133fce3b82beec9977302d483530cda7,80f5cf56133fce3b82beec9977302d483530cda7,"Marked ThreadingTests.WaitThrowsIfNestedDeadlockWouldHaveOccurred FailsOnMono, as it often freeze."
iskiselev,2015-08-14 18:26:00,https://api.github.com/repos/sq/JSIL/git/commits/9df037447759ffbd4af95bb58abc89e527c18acb,9df037447759ffbd4af95bb58abc89e527c18acb,Renamed JSReplacementTypeOfThisStatic back.
iskiselev,2015-08-15 01:49:10,https://api.github.com/repos/sq/JSIL/git/commits/c95fd5c5b8cfcc36ff06dfd5a9b9e283a7837933,c95fd5c5b8cfcc36ff06dfd5a9b9e283a7837933,More tests compatible with Mono.
iskiselev,2015-08-14 21:43:25,https://api.github.com/repos/sq/JSIL/git/commits/f3ec95b5dbbeebd1505ab6b6e8349e7f5a893bbc,f3ec95b5dbbeebd1505ab6b6e8349e7f5a893bbc,"UseAppDomains based on JsilUseAppDomainsInTest environment value, enabled for CI."
iskiselev,2015-08-14 10:38:24,https://api.github.com/repos/sq/JSIL/git/commits/e5c28bc904ce957edbfe1d6bf3fd9d3fd6c13634,e5c28bc904ce957edbfe1d6bf3fd9d3fd6c13634,Fix SourceMap generation.
iskiselev,2015-09-14 08:38:42,https://api.github.com/repos/sq/JSIL/git/commits/67a96d087c87f635c397a0f309e74f0c149afdaf,67a96d087c87f635c397a0f309e74f0c149afdaf,Initial support for sourcemaps. Activated by BuildSourceMap key in .jsilconfig.
kg,2015-08-14 09:31:37,https://api.github.com/repos/sq/JSIL/git/commits/9aa7caad73bcbe093d768350702ef62faa649066,9aa7caad73bcbe093d768350702ef62faa649066,"Disable AppDomains.
Enable evaluator pooling again."
kg,2015-08-14 09:27:54,https://api.github.com/repos/sq/JSIL/git/commits/98988105eb456d9a4191760f1b6aa70e4853953f,98988105eb456d9a4191760f1b6aa70e4853953f,Task.Dispose doesn't behave the way the exception says it does? Whatever
kg,2015-08-14 09:23:39,https://api.github.com/repos/sq/JSIL/git/commits/0cd3deb3b1f163819c1eee4289cd01ea2423babb,0cd3deb3b1f163819c1eee4289cd01ea2423babb,Detect appdomain.unload timeouts
kg,2015-08-14 09:03:23,https://api.github.com/repos/sq/JSIL/git/commits/6d27346e64a177368edd6d47cab88f0cc30e6e9c,6d27346e64a177368edd6d47cab88f0cc30e6e9c,Fix indefinite hang during stubbed BCL test setup
kg,2015-08-14 08:53:44,https://api.github.com/repos/sq/JSIL/git/commits/0dc01994eb6c5da58ab62e7d742fc30423c61e59,0dc01994eb6c5da58ab62e7d742fc30423c61e59,Clearly log that fixture setup is happening for the bcl bootstrap stuff
kg,2015-08-14 08:36:45,https://api.github.com/repos/sq/JSIL/git/commits/30fa7994c569e17c82837ab4c5239dd894e2d3a4,30fa7994c569e17c82837ab4c5239dd894e2d3a4,"Merge pull request #798 from iskiselev/AppDomains

Test: AppDomains and memory usage"
iskiselev,2015-08-14 06:21:48,https://api.github.com/repos/sq/JSIL/git/commits/e0393199d9db0a9788a61db41fa3e4599956531f,e0393199d9db0a9788a61db41fa3e4599956531f,Tests marked as FailsOnMono. Compatibility of some tests improved.
iskiselev,2015-08-14 06:17:15,https://api.github.com/repos/sq/JSIL/git/commits/b83f7c410ce5bad7aa074a8e957c6edc07657d35,b83f7c410ce5bad7aa074a8e957c6edc07657d35,"Folder test source works recursive.
All folders components added as test category.
Marked tests with FailsOnMono for Travis-CI compatibility."
iskiselev,2015-08-13 20:02:34,https://api.github.com/repos/sq/JSIL/git/commits/16eb11edf85333ef4123474938fa1d9433eecbcc,16eb11edf85333ef4123474938fa1d9433eecbcc,"JSIL.Bootstrap.js reordered.
Excluded from translated: SystemException, InvalidCastException, InvalidOperationException, FileNotFoundException,
FormatException."
iskiselev,2015-08-13 07:39:31,https://api.github.com/repos/sq/JSIL/git/commits/0bf6d0f89cbd8c3e5ab6576c348b8e638bcf3733,0bf6d0f89cbd8c3e5ab6576c348b8e638bcf3733,Exclude tests failing on mono from CI.
iskiselev,2015-08-13 05:14:49,https://api.github.com/repos/sq/JSIL/git/commits/8b413a9add97ec8a9ef4860af2cc81c556adc229,8b413a9add97ec8a9ef4860af2cc81c556adc229,Tests: Write js output to file without prior writing to string.
iskiselev,2015-08-13 02:50:41,https://api.github.com/repos/sq/JSIL/git/commits/17140515ff8f6d7e251142f368a66e21de60b021,17140515ff8f6d7e251142f368a66e21de60b021,Tests: Changed using Util.GetPathOfAssembly with Assembly.Location
iskiselev,2015-08-13 03:13:38,https://api.github.com/repos/sq/JSIL/git/commits/f7cba2929d3d19882b53e3719c612583c33f04d1,f7cba2929d3d19882b53e3719c612583c33f04d1,Run each test in separate app domain.
iskiselev,2015-08-12 23:27:54,https://api.github.com/repos/sq/JSIL/git/commits/03a96f006519af5ad28493809f5aa377443a5a9c,03a96f006519af5ad28493809f5aa377443a5a9c,.vs added to .gitignore.
iskiselev,2015-08-12 23:09:23,https://api.github.com/repos/sq/JSIL/git/commits/d4478c2c1bc1132dfd858b39beb9a3ff5663ee0f,d4478c2c1bc1132dfd858b39beb9a3ff5663ee0f,Fixed EOL for .travis.yml.
iskiselev,2015-08-12 23:25:15,https://api.github.com/repos/sq/JSIL/git/commits/379dec6b23b4bb662f5ce2b862bc91b83eaa6969,379dec6b23b4bb662f5ce2b862bc91b83eaa6969,?EOL in .config files fixed
kg,2015-08-12 05:13:08,https://api.github.com/repos/sq/JSIL/git/commits/9ac84915bb5e105454704d6eae400f7272c15675,9ac84915bb5e105454704d6eae400f7272c15675,"Merge pull request #797 from iskiselev/Net_45

Net 4.5 single platform configuration"
iskiselev,2015-08-11 19:54:02,https://api.github.com/repos/sq/JSIL/git/commits/63e1604bce792f336aeae453e166810fcf95694d,63e1604bce792f336aeae453e166810fcf95694d,Travis-CI support.
iskiselev,2015-08-12 04:12:56,https://api.github.com/repos/sq/JSIL/git/commits/cc593b5677a0037e27f1d5a5a528a908e26dd0ba,cc593b5677a0037e27f1d5a5a528a908e26dd0ba,Added Compiler.Executor.32bit.cspoj with x86 configuration.
iskiselev,2015-08-12 04:27:28,https://api.github.com/repos/sq/JSIL/git/commits/bb183a48d1f703167b4df0e936807e5d84420452,bb183a48d1f703167b4df0e936807e5d84420452,Migrated to .Net 4.5.
kg,2015-08-11 02:52:58,https://api.github.com/repos/sq/JSIL/git/commits/5d57cee874af874375bfbcc75dbc2b4538989c76,5d57cee874af874375bfbcc75dbc2b4538989c76,"Merge pull request #792 from iskiselev/NUnit_x64

NUnit and x64"
iskiselev,2015-08-10 23:51:10,https://api.github.com/repos/sq/JSIL/git/commits/b629e020dd124c4f134020432b115033b5e23cf1,b629e020dd124c4f134020432b115033b5e23cf1,Use AssemblyReflectionOnlyLoadFrom for .exe assemblies loading - so that it is able to load x86 assembly in x64 test.
iskiselev,2015-08-10 23:50:04,https://api.github.com/repos/sq/JSIL/git/commits/1fc4031267515d72d572f2e60eece00de1fdddcc,1fc4031267515d72d572f2e60eece00de1fdddcc,Refactored settings for IAnalyzer. Fixed settings for DCE tests.
iskiselev,2015-08-10 20:39:09,https://api.github.com/repos/sq/JSIL/git/commits/b31929ff7b848cd3c85846ad7a8ad6be18b3b4e6,b31929ff7b848cd3c85846ad7a8ad6be18b3b4e6,"AnyCPU configuration set for all *.dll projects.
Removed Compiler reference from DCE project.
IAnalyzer interface moved to JSIL project."
iskiselev,2015-08-10 20:06:19,https://api.github.com/repos/sq/JSIL/git/commits/7c7283a27ef1e756fba722b864a9486e48f7284d,7c7283a27ef1e756fba722b864a9486e48f7284d,NUnitTestAdapter dependency added to Tests (#791).
iskiselev,2015-08-10 19:49:27,https://api.github.com/repos/sq/JSIL/git/commits/9ab790461ee455ad60478d1ae2f0025eee1b08fe,9ab790461ee455ad60478d1ae2f0025eee1b08fe,NUnit dependency moved from Upstream folder to NuGet (#791).
kg,2015-08-10 04:11:42,https://api.github.com/repos/sq/JSIL/git/commits/706251c87eda96acf72037dcf07bf9a4e849aaff,706251c87eda96acf72037dcf07bf9a4e849aaff,"Merge pull request #786 from iskiselev/TranslatedBcl

Translated BCL (begin)"
iskiselev,2015-08-08 07:58:43,https://api.github.com/repos/sq/JSIL/git/commits/8c6c010c7803dd7faf0a8596b6debac298ec0465,8c6c010c7803dd7faf0a8596b6debac298ec0465,Fixed all tests except one.
iskiselev,2015-08-08 07:58:10,https://api.github.com/repos/sq/JSIL/git/commits/b1a62e3799bd8350236c32dbbba812e96b1dd176,b1a62e3799bd8350236c32dbbba812e96b1dd176,"Browser test runner updated to support Translated test run.
Use something like: .../test_runner.html?bclMode=translated&autoRun#Tests/SimpleTestCases/ReflectionMemberType.cs.out;Tests/Bootstappers/BclBootstrapTranslated.cs.out"
iskiselev,2015-08-08 05:31:04,https://api.github.com/repos/sq/JSIL/git/commits/8decfbb65052c2763fda685992643b65f2805b09,8decfbb65052c2763fda685992643b65f2805b09,Fixed most Translated/Stubbed tests.
iskiselev,2015-08-08 04:46:38,https://api.github.com/repos/sq/JSIL/git/commits/2643acc8b44ce8df08dd2ceffc9ce7c40813ac89,2643acc8b44ce8df08dd2ceffc9ce7c40813ac89,Test refactoring: Run all simple tests with translated/stubbed BCL. Translate BCL once per test execution.
iskiselev,2015-08-07 07:09:32,https://api.github.com/repos/sq/JSIL/git/commits/782c5c917651c4a71845e56f89916e595165fba0,782c5c917651c4a71845e56f89916e595165fba0,"List, ArrayList, Collection, ReadOnlyCollection from BCL for translated."
iskiselev,2015-08-07 19:49:42,https://api.github.com/repos/sq/JSIL/git/commits/6d2bdb3a50f633fa650cdc0d0d858a84fb1804d2,6d2bdb3a50f633fa650cdc0d0d858a84fb1804d2,"Array.IndexOf overload with count added, Array.sort subet supported."
iskiselev,2015-08-07 19:48:20,https://api.github.com/repos/sq/JSIL/git/commits/17af72ac3c54d3e72fde58fa295cb28b95654720,17af72ac3c54d3e72fde58fa295cb28b95654720,"Process inner types for CorlibTypes.
TypeReferenceContext.EnclosingTypeSkipped added and used instead of ShouldSkipMember delegate."
iskiselev,2015-08-07 10:17:32,https://api.github.com/repos/sq/JSIL/git/commits/85e4da903d890cf4f67010b091e677888d1067d7,85e4da903d890cf4f67010b091e677888d1067d7,Fix for #785.
iskiselev,2015-08-07 02:18:18,https://api.github.com/repos/sq/JSIL/git/commits/95af0d094885213ed6d73914906276d01af4d796,95af0d094885213ed6d73914906276d01af4d796,"Added temporary workaround for passing ""Environment"" variable in SpiderMokey.
Test that use translated/stubbed bcl use appropriate JS Library."
iskiselev,2015-08-07 02:16:37,https://api.github.com/repos/sq/JSIL/git/commits/fd36028af179eb32eb60e4a4b3e77641d71d5232,fd36028af179eb32eb60e4a4b3e77641d71d5232,"Added JSIL.Bootstap.js for bclMode=translated.
In translated mode use BCL implementation for Dictionary, HashSet, KeyValuePair."
kg,2015-08-07 01:53:21,https://api.github.com/repos/sq/JSIL/git/commits/5718a0e5c987e28fb59dfb0d2611e77164313cc2,5718a0e5c987e28fb59dfb0d2611e77164313cc2,???????????????????????????????????
kg,2015-08-07 01:52:22,https://api.github.com/repos/sq/JSIL/git/commits/293c5b8d20854e8313362a9fff5d5814dce2809e,293c5b8d20854e8313362a9fff5d5814dce2809e,I should never have merged this
kg,2015-08-01 10:32:32,https://api.github.com/repos/sq/JSIL/git/commits/f6b5df08da6c919d94122077878c6fc879b4a189,f6b5df08da6c919d94122077878c6fc879b4a189,LValue status for dynamics
kg,2015-08-01 10:17:01,https://api.github.com/repos/sq/JSIL/git/commits/3c6288d4756aea72b7943fb3e2a748b107125482,3c6288d4756aea72b7943fb3e2a748b107125482,Make pointer reads valid lvalues so they can be transformed into writes later (blech)
kg,2015-08-01 09:51:25,https://api.github.com/repos/sq/JSIL/git/commits/2bfbd27a0eff3b17ef903791814392310b84539b,2bfbd27a0eff3b17ef903791814392310b84539b,Fix 'a++.get()' and similar codegen for pointers
kg,2015-08-01 09:08:03,https://api.github.com/repos/sq/JSIL/git/commits/4f286585d4751fede4d41f54e2b61e2ba67bf443,4f286585d4751fede4d41f54e2b61e2ba67bf443,Disable compound assignment decompilation
kg,2015-08-01 09:03:53,https://api.github.com/repos/sq/JSIL/git/commits/ba11257ad8302c31c7c59faaa9dacfe7e929d34b,ba11257ad8302c31c7c59faaa9dacfe7e929d34b,Invariant fixes
kg,2015-08-01 08:45:02,https://api.github.com/repos/sq/JSIL/git/commits/1c634bcc7ed68e96cce80941de3a8175be4932c9,1c634bcc7ed68e96cce80941de3a8175be4932c9,Verify target of binary and unary expressions is an l-value
kg,2015-08-07 01:49:07,https://api.github.com/repos/sq/JSIL/git/commits/c377ad599d46d9812da807d5ca7f67a429c2e747,c377ad599d46d9812da807d5ca7f67a429c2e747,"Merge pull request #783 from iskiselev/JS_Preprocessing2

  Js preprocessing2"
kg,2015-08-07 01:47:48,https://api.github.com/repos/sq/JSIL/git/commits/efc861ac6841f61fffa614b5760454f911a2f7d4,efc861ac6841f61fffa614b5760454f911a2f7d4,"Merge pull request #778 from iskiselev/Roslyn_46

Fixed Roslyn null comparison."
iskiselev,2015-08-06 23:54:50,https://api.github.com/repos/sq/JSIL/git/commits/9969c2c992f18ae27134a7ec8f42a8e364955ad8,9969c2c992f18ae27134a7ec8f42a8e364955ad8,etypeof generic resolution. Fix for #784.
iskiselev,2015-08-07 03:04:50,https://api.github.com/repos/sq/JSIL/git/commits/f7b6deb533c1c32ef28e07fcc17c1279003dabc7,f7b6deb533c1c32ef28e07fcc17c1279003dabc7,Updated *.hgeol to preserve EOL in mercurial.
iskiselev,2015-08-06 08:58:38,https://api.github.com/repos/sq/JSIL/git/commits/a68b7b1fd862c24b7a0070dc35518b8ac804a179,a68b7b1fd862c24b7a0070dc35518b8ac804a179,Comments added.
iskiselev,2015-08-06 04:42:49,https://api.github.com/repos/sq/JSIL/git/commits/e3294a05d1cf74c946e50eefddbdd105d05b040f,e3294a05d1cf74c946e50eefddbdd105d05b040f,Always write JSIL.MakeClass for inner classes. Temporary solution.
iskiselev,2015-08-06 04:23:24,https://api.github.com/repos/sq/JSIL/git/commits/552731ec5de58ea3b0bacbd5c0f817819c5dcfc5,552731ec5de58ea3b0bacbd5c0f817819c5dcfc5,Fixed condition in Utils classes.
iskiselev,2015-08-06 04:13:17,https://api.github.com/repos/sq/JSIL/git/commits/a9e17cb3a3efb7c5f1589d6bdab4654229c25c84,a9e17cb3a3efb7c5f1589d6bdab4654229c25c84,Generate Delegate/MulticastDelegate stubs always.
iskiselev,2015-08-06 03:28:39,https://api.github.com/repos/sq/JSIL/git/commits/048ebbb67ea259303261bfad95555139c148b617,048ebbb67ea259303261bfad95555139c148b617,Fixed defining condition var.
iskiselev,2015-08-06 02:31:51,https://api.github.com/repos/sq/JSIL/git/commits/46ec46a7ef1dfaf7d27a34ef4a61b0158a3b0fa7,46ec46a7ef1dfaf7d27a34ef4a61b0158a3b0fa7,Added two versions of JSIL.Bootstrap - for ignored BCL and stubbed BCL.
iskiselev,2015-08-06 02:24:02,https://api.github.com/repos/sq/JSIL/git/commits/3f1a1d602d3fe7c9190e108b99979664370315ae,3f1a1d602d3fe7c9190e108b99979664370315ae,Added GENERATE_STUBS check to all JSIL.Bootstrap classes.
iskiselev,2015-08-06 02:06:44,https://api.github.com/repos/sq/JSIL/git/commits/428514b9dfb0f421d69f2307767c904f286a7421,428514b9dfb0f421d69f2307767c904f286a7421,"grunt-preprocessor changed with grunt-metascript.
Added GENERATE_STUBS check."
iskiselev,2015-08-05 19:03:42,https://api.github.com/repos/sq/JSIL/git/commits/976ad77ae50f9b4bd36453e86fde4c09e897b25d,976ad77ae50f9b4bd36453e86fde4c09e897b25d,"Utils/Helpers reorganised: utils used only inside gel, helpers may be used outside."
kg,2015-08-05 04:49:03,https://api.github.com/repos/sq/JSIL/git/commits/66671f4fdab854b9c82d6fea11f730aa85616fc5,66671f4fdab854b9c82d6fea11f730aa85616fc5,"Merge pull request #780 from iskiselev/JS_Preprocessing

Js preprocessing"
iskiselev,2015-08-05 04:20:19,https://api.github.com/repos/sq/JSIL/git/commits/d976712ac72bc13afa3d623e6c9702d009969431,d976712ac72bc13afa3d623e6c9702d009969431,All classes from JSIL.Bootstrap.js extracted to separate files.
iskiselev,2015-08-05 00:02:17,https://api.github.com/repos/sq/JSIL/git/commits/9e76b99f76d5f8f7aaf223965490f2a65ce21e35,9e76b99f76d5f8f7aaf223965490f2a65ce21e35,Extracted some classes from JSIL.Bootstrap.js.
iskiselev,2015-08-04 23:59:36,https://api.github.com/repos/sq/JSIL/git/commits/2bea6b136ebe3bda5c6ace90f6b53bdb48396ede,2bea6b136ebe3bda5c6ace90f6b53bdb48396ede,Added Libraries folder to ignore list.
iskiselev,2015-08-05 00:06:00,https://api.github.com/repos/sq/JSIL/git/commits/942021cce4ab5b61236961976b7ce3b83668c9a1,942021cce4ab5b61236961976b7ce3b83668c9a1,Moved *.js files from Libraries to JSIL.Libraries project.
iskiselev,2015-08-03 21:21:57,https://api.github.com/repos/sq/JSIL/git/commits/b22d5096da084936eedaf86499cfdf8128b76fc3,b22d5096da084936eedaf86499cfdf8128b76fc3,Fixed Roslyn null comparison (#776).
kg,2015-08-01 08:14:59,https://api.github.com/repos/sq/JSIL/git/commits/b969171db9f2e516595faf4a3f45b02fc7d37f2a,b969171db9f2e516595faf4a3f45b02fc7d37f2a,"Merge pull request #767 from iskiselev/DCE_Marshaller_CustomAttributes

Dce improvements (continue)"
kg,2015-08-01 08:14:26,https://api.github.com/repos/sq/JSIL/git/commits/771cf272ed5dc6dd5dfc3136b6af0e6c8c1a7cf1,771cf272ed5dc6dd5dfc3136b6af0e6c8c1a7cf1,"Merge pull request #775 from iskiselev/Test_For_774

Test case for Roslyn unary pointer operation."
iskiselev,2015-08-01 06:33:22,https://api.github.com/repos/sq/JSIL/git/commits/813874460fb46d2fb0ba948d4baaa8d193f4914e,813874460fb46d2fb0ba948d4baaa8d193f4914e,Test case for #774.
kg,2015-07-30 10:22:32,https://api.github.com/repos/sq/JSIL/git/commits/6d0f7b3866508241c19327aab5c8c81195d11b13,6d0f7b3866508241c19327aab5c8c81195d11b13,Comment
kg,2015-07-30 10:18:16,https://api.github.com/repos/sq/JSIL/git/commits/1dc5f9ce4c5d85be290c5f424c6201765367361d,1dc5f9ce4c5d85be290c5f424c6201765367361d,"Merge pull request #771 from iskiselev/Net46

.Net Framework 4.6 compatibility fix"
iskiselev,2015-07-30 02:07:16,https://api.github.com/repos/sq/JSIL/git/commits/2b608bbe26d2b49609d0d790eff4501d584398a3,2b608bbe26d2b49609d0d790eff4501d584398a3,.Net Framework 4.6 compatibility fix (temporary exclude System.Resources.FastResourceComparer from translation)
iskiselev,2015-07-28 05:19:40,https://api.github.com/repos/sq/JSIL/git/commits/00099e6a0d37e71d45c7fc18ea0e4a8e6be6deec,00099e6a0d37e71d45c7fc18ea0e4a8e6be6deec,DCE: Fixed problems with reading attributes through proxies.
kg,2015-07-27 20:35:04,https://api.github.com/repos/sq/JSIL/git/commits/4933dec43348c70a47a59c28210a1afe04420d51,4933dec43348c70a47a59c28210a1afe04420d51,<= VS2013 compat fix
kg,2015-07-26 08:39:21,https://api.github.com/repos/sq/JSIL/git/commits/7a404b5051c9df3d73cae9b81d0080e103b86c8d,7a404b5051c9df3d73cae9b81d0080e103b86c8d,"Update ILSpy to fix a threading issue
Early out a pointer expression translation for a specific class of error"
kg,2015-07-26 08:22:57,https://api.github.com/repos/sq/JSIL/git/commits/fe9cb2d932b89a6cb641025b139ffe228d2bfbfd,fe9cb2d932b89a6cb641025b139ffe228d2bfbfd,Fix runtime error in some of the BCL compilation tests on VS2015 caused by invalid writes to properties
kg,2015-07-26 08:13:52,https://api.github.com/repos/sq/JSIL/git/commits/f29071a08182755fec574bc90569348d89b2cfd9,f29071a08182755fec574bc90569348d89b2cfd9,Fix test that broke due to newline normalization
kg,2015-07-26 08:11:44,https://api.github.com/repos/sq/JSIL/git/commits/15a8b51381cf6fba7cf7536409e606846d5c9d55,15a8b51381cf6fba7cf7536409e606846d5c9d55,Emscripten test case reliability improvements
kg,2015-07-26 07:46:51,https://api.github.com/repos/sq/JSIL/git/commits/fc55ce4b18465b81d138625de4d10a0696f97d59,fc55ce4b18465b81d138625de4d10a0696f97d59,Fix Try compilation
iskiselev,2015-07-26 06:28:53,https://api.github.com/repos/sq/JSIL/git/commits/7d6d1fd97ca9a869ef0d797bf7a1f5aa0e0539df,7d6d1fd97ca9a869ef0d797bf7a1f5aa0e0539df,Fixed attribute processing. Added initial support of processing marshaller info.
kg,2015-07-25 06:41:46,https://api.github.com/repos/sq/JSIL/git/commits/95a39fd8a08fe1dadb42c211b5d35b6b82d388d9,95a39fd8a08fe1dadb42c211b5d35b6b82d388d9,"Merge pull request #733 from iskiselev/DCE_SystemTypeReference

Fix declaring reference to built-in types from enclosed type with DCE"
kg,2015-07-25 06:41:16,https://api.github.com/repos/sq/JSIL/git/commits/b3e0e54e4fc82269c319c97bac220eb7ac8b35aa,b3e0e54e4fc82269c319c97bac220eb7ac8b35aa,"Merge pull request #759 from iskiselev/DCE_Improvements

Dce improvements"
kg,2015-07-25 06:37:24,https://api.github.com/repos/sq/JSIL/git/commits/02386d2edb90ceb73328821e63dc367ef18fff10,02386d2edb90ceb73328821e63dc367ef18fff10,"Merge pull request #765 from iskiselev/Same_CachingMetadataResolver

Same caching metadata resolver"
kg,2015-07-25 06:36:17,https://api.github.com/repos/sq/JSIL/git/commits/400017da49cf2dade3d36d4ef91d03edd82d3745,400017da49cf2dade3d36d4ef91d03edd82d3745,"Merge pull request #766 from iskiselev/Issue758

Compare types using type definition."
iskiselev,2015-07-25 00:23:27,https://api.github.com/repos/sq/JSIL/git/commits/a5f9c894763771875f47d672938747be81c64a77,a5f9c894763771875f47d672938747be81c64a77,"Don't create AssemblyCache before AssemblyResolver ctor, report assembly redirecton after load (less noise if unable to load due to missing symbols)."
iskiselev,2015-07-24 23:49:51,https://api.github.com/repos/sq/JSIL/git/commits/0c9b45b8aa8218e6334b21e6904e8a3a8ce9305b,0c9b45b8aa8218e6334b21e6904e8a3a8ce9305b,"Use only one CachingMetadataResolver/AssemblyResolver for all assemblies (see #763).
All assemblies use same AssemblyCache."
iskiselev,2015-07-24 19:11:35,https://api.github.com/repos/sq/JSIL/git/commits/a71946aefad7a3e1c3ad42f5b779b757413db606,a71946aefad7a3e1c3ad42f5b779b757413db606,DCE: Added custom attributes processing for method args ang class/method generic parameters.
iskiselev,2015-07-24 11:23:51,https://api.github.com/repos/sq/JSIL/git/commits/389d90cc8fd9fe2d7478110d69038d91eebb84cd,389d90cc8fd9fe2d7478110d69038d91eebb84cd,DCE: Custom attributes processing finished.
iskiselev,2015-07-24 08:16:55,https://api.github.com/repos/sq/JSIL/git/commits/908485b0f090526a1027c80e4291f2963918d8fd,908485b0f090526a1027c80e4291f2963918d8fd,DCE: Removed double check if member white-listed.
iskiselev,2015-07-24 07:26:10,https://api.github.com/repos/sq/JSIL/git/commits/a1fafbf6a0e2f461cf83f07fe4f1b17a16c8b766,a1fafbf6a0e2f461cf83f07fe4f1b17a16c8b766,DCE: Separate processing of custom attributes.
iskiselev,2015-07-24 06:24:13,https://api.github.com/repos/sq/JSIL/git/commits/d1ce4670aaec19f87df354d2e0a78c89bfd7abfb,d1ce4670aaec19f87df354d2e0a78c89bfd7abfb,DCE: Generic argument through field preserve.
iskiselev,2015-07-24 04:54:36,https://api.github.com/repos/sq/JSIL/git/commits/1245a0bbb3b0f6c71c0d8a8d24da0461f91027c8,1245a0bbb3b0f6c71c0d8a8d24da0461f91027c8,DCE: decompile only if present virtual call.
iskiselev,2015-07-24 01:48:49,https://api.github.com/repos/sq/JSIL/git/commits/7036de897c564f0a2239effea362b52d0562bf06,7036de897c564f0a2239effea362b52d0562bf06,"DCE: Always preserve used interface method declaration, do not eliminate used virtual method without overrides."
iskiselev,2015-07-23 23:59:37,https://api.github.com/repos/sq/JSIL/git/commits/1f3df1c93e92f19a8104a6bfd19a1cdad72ba0d4,1f3df1c93e92f19a8104a6bfd19a1cdad72ba0d4,DCE: checkpoint.
iskiselev,2015-07-23 06:29:51,https://api.github.com/repos/sq/JSIL/git/commits/ab254e2484cd751a8c85f6805031b7bed14c83e1,ab254e2484cd751a8c85f6805031b7bed14c83e1,DCE: Experimental stripping unused virtual methods.
iskiselev,2015-07-23 01:35:15,https://api.github.com/repos/sq/JSIL/git/commits/706ed743b1411af2b721dbe96905b3658268b41c,706ed743b1411af2b721dbe96905b3658268b41c,DCE: Special processing for virtual method test added.
iskiselev,2015-07-22 22:24:01,https://api.github.com/repos/sq/JSIL/git/commits/19bac0ba9b576bad42e008f26e8464ccac761957,19bac0ba9b576bad42e008f26e8464ccac761957,More DCE tests.
iskiselev,2015-07-22 19:56:30,https://api.github.com/repos/sq/JSIL/git/commits/cd28c5cd0e1e248736ec5faf80a45cc8fbaacbf8,cd28c5cd0e1e248736ec5faf80a45cc8fbaacbf8,Fixed stripping of generic second generation.
iskiselev,2015-07-22 19:43:21,https://api.github.com/repos/sq/JSIL/git/commits/1c515bb6be1583d4ce997cefea993b4fe4718ec7,1c515bb6be1583d4ce997cefea993b4fe4718ec7,Test.DCE project config fixed. Some tests added.
iskiselev,2015-07-22 18:14:12,https://api.github.com/repos/sq/JSIL/git/commits/cf448d2f63a193d9f364ce3f1501f32a7106e9f2,cf448d2f63a193d9f364ce3f1501f32a7106e9f2,DCE cleanup.
iskiselev,2015-07-21 22:14:46,https://api.github.com/repos/sq/JSIL/git/commits/a8086d64a80b7421e7cd5b8a672ab1f14e9dad24,a8086d64a80b7421e7cd5b8a672ab1f14e9dad24,Added basic DCE test.
iskiselev,2015-07-21 22:06:27,https://api.github.com/repos/sq/JSIL/git/commits/a3af9f5c4af46d7f1d1ca42a04ce06d2232a5a13,a3af9f5c4af46d7f1d1ca42a04ce06d2232a5a13,DCE: Add elimination of unused Property/Event defenition.
iskiselev,2015-07-21 11:12:01,https://api.github.com/repos/sq/JSIL/git/commits/2af2ee049a3d7854e4bc31a6d3b0a8add253935f,2af2ee049a3d7854e4bc31a6d3b0a8add253935f,Compare types using type definition. Fix #758.
iskiselev,2015-07-17 05:23:05,https://api.github.com/repos/sq/JSIL/git/commits/5917e764790e0c589d093d767707e0e842f5e925,5917e764790e0c589d093d767707e0e842f5e925,Fix raw types is object check (#754).
kg,2015-07-18 07:06:02,https://api.github.com/repos/sq/JSIL/git/commits/8068f9201e089bf850d0ce4537ad10dfea4020fe,8068f9201e089bf850d0ce4537ad10dfea4020fe,"Merge pull request #756 from iskiselev/BclProxy_AsyncTaskMethodBuilder

Fixed missed BCL proxy for async task builder"
kg,2015-07-17 05:27:20,https://api.github.com/repos/sq/JSIL/git/commits/e61a307c1317920c9a18c99310483f37b4cb3d9a,e61a307c1317920c9a18c99310483f37b4cb3d9a,"Merge pull request #753 from iskiselev/HashSet_Issue752

Fix skipping values in HashSet."
iskiselev,2015-07-17 05:26:27,https://api.github.com/repos/sq/JSIL/git/commits/e41bc46510d94c7d67cdaa5ca5f374597fad57b8,e41bc46510d94c7d67cdaa5ca5f374597fad57b8,Fixed missed BCL proxy for async task builder.
iskiselev,2015-07-17 04:59:41,https://api.github.com/repos/sq/JSIL/git/commits/6fff3e320afed89387e9f7f15762515b2af257bd,6fff3e320afed89387e9f7f15762515b2af257bd,Fix skipping values in HashSet (#752).
kg,2015-07-17 02:56:03,https://api.github.com/repos/sq/JSIL/git/commits/4a9cdc7ad23c8f37e6890c41102b6a2601d8d46d,4a9cdc7ad23c8f37e6890c41102b6a2601d8d46d,"Merge pull request #751 from iskiselev/TestsRename_Issue748

Rename test pairs with same name"
kg,2015-07-17 02:55:34,https://api.github.com/repos/sq/JSIL/git/commits/98871dc4facf7f08c12dc76c90f2e914e351945d,98871dc4facf7f08c12dc76c90f2e914e351945d,"Merge pull request #749 from iskiselev/ObjectVirtualMethods

Object virtual methods"
kg,2015-07-17 02:52:36,https://api.github.com/repos/sq/JSIL/git/commits/c80e0547282f9c67a4f0c069591a5cb91ffc6a55,c80e0547282f9c67a4f0c069591a5cb91ffc6a55,"Merge pull request #750 from iskiselev/OAuth_removed

Removed from Try project delted OAuth.cs to fix compilation."
iskiselev,2015-07-16 22:54:06,https://api.github.com/repos/sq/JSIL/git/commits/e84771931fc9c65887bfc53d5e5c3ea6b1f501ef,e84771931fc9c65887bfc53d5e5c3ea6b1f501ef,Rename test pairs with same name as workaround #748.
iskiselev,2015-07-16 22:47:05,https://api.github.com/repos/sq/JSIL/git/commits/f0394d6469c4f7c95422835d03a7f673dec1cbf6,f0394d6469c4f7c95422835d03a7f673dec1cbf6,Removed from Try project delted OAuth.cs to fix compilation.
iskiselev,2015-07-16 22:35:14,https://api.github.com/repos/sq/JSIL/git/commits/6d3779e600ae18007fd6a23a45da32e3528c6ab8,6d3779e600ae18007fd6a23a45da32e3528c6ab8,"Fixed Equals for raw types passed as object (#24, #446)."
iskiselev,2015-07-16 21:17:45,https://api.github.com/repos/sq/JSIL/git/commits/b23d16dfcdece0a4e3314fd569716cfaebcf1ef3,b23d16dfcdece0a4e3314fd569716cfaebcf1ef3,Fixed GetHashCode for raw types passed as object (#240).
iskiselev,2015-07-16 19:08:13,https://api.github.com/repos/sq/JSIL/git/commits/89f21a90a8e93f824bb8ef296a83bdc047c22074,89f21a90a8e93f824bb8ef296a83bdc047c22074,"$declaringType(method), $explicitThis(method) parameter expanding for JSReplacement."
kg,2015-07-06 11:03:32,https://api.github.com/repos/sq/JSIL/git/commits/f39ca4dfcda5d61e5ce0e119273301a1e3f21d64,f39ca4dfcda5d61e5ce0e119273301a1e3f21d64,Delete dead code
kg,2015-07-06 10:37:06,https://api.github.com/repos/sq/JSIL/git/commits/68fcf8533fd0e51b06fbeafa150b9a46fb58df8b,68fcf8533fd0e51b06fbeafa150b9a46fb58df8b,"Remove abandoned MonoGame stub libraries
Remove the long-abandoned (due to fragility) smoke tests"
kg,2015-07-06 10:37:06,https://api.github.com/repos/sq/JSIL/git/commits/77a287397432fcb2e47a3699bc9053ef47d1cffd,77a287397432fcb2e47a3699bc9053ef47d1cffd,Pruning dead code
kg,2015-07-06 10:35:37,https://api.github.com/repos/sq/JSIL/git/commits/1e633a31fdfc979d9e7608d87bf2f7a4e8134330,1e633a31fdfc979d9e7608d87bf2f7a4e8134330,Fix gitattributes for icon files
kg,2015-07-06 10:14:42,https://api.github.com/repos/sq/JSIL/git/commits/3e2b5061908e43eb37950449f6e0ee414a0bacf4,3e2b5061908e43eb37950449f6e0ee414a0bacf4,Move Meta into its own submodule that applications can import
kg,2015-07-06 10:11:35,https://api.github.com/repos/sq/JSIL/git/commits/df9f4e5f3b526959a62fa8c3a4ef9504e5801839,df9f4e5f3b526959a62fa8c3a4ef9504e5801839,Remove in-tree JSIL.Meta
kg,2015-07-06 09:52:35,https://api.github.com/repos/sq/JSIL/git/commits/e08dfca03371ed2eb90da89f9b6574b80cb72faa,e08dfca03371ed2eb90da89f9b6574b80cb72faa,Fix the Buffer builtins not working correctly on subsections of typed arrays
kg,2015-07-06 09:07:36,https://api.github.com/repos/sq/JSIL/git/commits/b3e30f209729bb09f1f14b254d06b37fa263bec4,b3e30f209729bb09f1f14b254d06b37fa263bec4,Stub in Path.GetInvalidFileNameChars and Path.GetInvalidPathChars
kg,2015-07-06 08:58:57,https://api.github.com/repos/sq/JSIL/git/commits/ddfb1bd9568fc522147cdd008dfe2403550bd11a,ddfb1bd9568fc522147cdd008dfe2403550bd11a,"Introduce Verbatim.Expression<T> to suppress a result-cast when you are certain about the type of an expression
Remove the Profiling meta API"
kg,2015-07-05 15:35:09,https://api.github.com/repos/sq/JSIL/git/commits/14f1ddc4bce520636f79b973b540d219d7f16c42,14f1ddc4bce520636f79b973b540d219d7f16c42,"Prune some samples from the main page
Fix Try"
kg,2015-07-05 14:44:31,https://api.github.com/repos/sq/JSIL/git/commits/e49ac99a1473c677de7ac329a57ce27b930d6784,e49ac99a1473c677de7ac329a57ce27b930d6784,Better names for pinvoke wrappers created from function pointers
kg,2015-07-05 14:12:12,https://api.github.com/repos/sq/JSIL/git/commits/0a18111ce16e392adc99911f649c0c3c6b4a5099,0a18111ce16e392adc99911f649c0c3c6b4a5099,Generate a pair of optimized PInvoke wrappers for every method (a try-finally wrapper and an invoker)
kg,2015-07-05 11:33:54,https://api.github.com/repos/sq/JSIL/git/commits/fe8a32b8a46f3be3bf5da1d67eda75599aef4295,fe8a32b8a46f3be3bf5da1d67eda75599aef4295,Hack in proper marshal/unmarshal logic for int64 and uint64.
kg,2015-07-05 11:08:30,https://api.github.com/repos/sq/JSIL/git/commits/b6e8f4d4d01bace5e987b746fcef63155de1f0f0,b6e8f4d4d01bace5e987b746fcef63155de1f0f0,Add test case for reading int64s out of packed memory
kg,2015-07-05 10:46:15,https://api.github.com/repos/sq/JSIL/git/commits/7121195b4710163c651cf10411fdde3f71188e55,7121195b4710163c651cf10411fdde3f71188e55,"Checkpoint: Force the size of int64/uint64 to 8 bytes
Field alignment code tweaks"
kg,2015-07-05 12:42:22,https://api.github.com/repos/sq/JSIL/git/commits/4d29fa1ebfe122c4ef0d3fc645be96216f8baa1d,4d29fa1ebfe122c4ef0d3fc645be96216f8baa1d,"Merge pull request #746 from mispy/bytepointerfix

Get correct view for type in BoxedValueMarshaller"
mispy,2015-07-05 11:43:05,https://api.github.com/repos/sq/JSIL/git/commits/5de162a50d2b2acead64be161d4a7da7e86ecdf0,5de162a50d2b2acead64be161d4a7da7e86ecdf0,Get correct view for type in BoxedValueMarshaller
kg,2015-07-05 10:25:26,https://api.github.com/repos/sq/JSIL/git/commits/2cd430705430120e522c6f940a92264ea91c1d40,2cd430705430120e522c6f940a92264ea91c1d40,"Add test for struct layout disagreement that breaks SDL touch input
Update the PinnedStringBuffer test to be slightly more correct"
kg,2015-07-05 06:28:05,https://api.github.com/repos/sq/JSIL/git/commits/5d86143166dcec7eed5b0b5c763fcfe8d800b869,5d86143166dcec7eed5b0b5c763fcfe8d800b869,"Merge pull request #714 from iskiselev/UseThreads1

AssemblyId generation use lock."
kg,2015-07-05 06:23:42,https://api.github.com/repos/sq/JSIL/git/commits/4ebaca8b82c050c60c35487be9e7f5cb7fae45c9,4ebaca8b82c050c60c35487be9e7f5cb7fae45c9,Revise gitattributes file
kg,2015-07-05 06:21:30,https://api.github.com/repos/sq/JSIL/git/commits/984b5aaf512b89bc12ae2fafc4e86962faff53cb,984b5aaf512b89bc12ae2fafc4e86962faff53cb,"Merge pull request #738 from dmirmilshteyn/build/git-attributes

Added git attributes file to enforce normalized EOL"
kg,2015-07-05 03:11:33,https://api.github.com/repos/sq/JSIL/git/commits/b7df487286d1b5bdf26a597f953534b40371ecf4,b7df487286d1b5bdf26a597f953534b40371ecf4,Get rid of custom .call/.apply on bound generic methods
kg,2015-07-05 01:14:50,https://api.github.com/repos/sq/JSIL/git/commits/a1b955371f5b21fe31dc360e95dc2d762f4d4ea3,a1b955371f5b21fe31dc360e95dc2d762f4d4ea3,"Instead of letting the default CLR exception handler catch JSILc errors like FileNotFound, dump them to stdout and abort with an exit code
Version bump"
kg,2015-07-05 01:11:16,https://api.github.com/repos/sq/JSIL/git/commits/c01270713c3a30f92d682a8ad980d645a4001e45,c01270713c3a30f92d682a8ad980d645a4001e45,Make analysis tests less noisy
kg,2015-07-05 00:38:21,https://api.github.com/repos/sq/JSIL/git/commits/a9c3232be57b27eab45b2d2c931337f5d4f3a1b9,a9c3232be57b27eab45b2d2c931337f5d4f3a1b9,"Fix translated mscorlib producing parse errors
Don't dump as much generated js into stdout on test failure when compiling large programs"
kg,2015-07-05 00:06:33,https://api.github.com/repos/sq/JSIL/git/commits/7e58dd9de6611282cea51fdee4246c964efc9232,7e58dd9de6611282cea51fdee4246c964efc9232,Fix some pointer binary expression corner cases and unhandled exceptions
kg,2015-07-05 00:03:26,https://api.github.com/repos/sq/JSIL/git/commits/c90bc979de8cc8f82045944080a2eac1c38003a8,c90bc979de8cc8f82045944080a2eac1c38003a8,"Strip modifiers when checking type for ptr, intptr/uintptr, or native int/uint status"
kg,2015-07-04 23:57:56,https://api.github.com/repos/sq/JSIL/git/commits/6d0f65e4e0dda96405ebc574694493211aded7fd,6d0f65e4e0dda96405ebc574694493211aded7fd,Fix unhandled exceptions in AttemptPointerConversion
kg,2015-07-04 23:55:04,https://api.github.com/repos/sq/JSIL/git/commits/22e541bcfb621525ba430a8a0b8c4c157c0c9b53,22e541bcfb621525ba430a8a0b8c4c157c0c9b53,This isn't needed anymore
kg,2015-07-04 23:24:25,https://api.github.com/repos/sq/JSIL/git/commits/ca4ff78bbf679cb06941da4b760714adf9e7c2d3,ca4ff78bbf679cb06941da4b760714adf9e7c2d3,Checkpoint: Generate optimized .call and .apply for bound generic methods
kg,2015-07-04 23:10:24,https://api.github.com/repos/sq/JSIL/git/commits/2203c4b699d8b6cd56b754cff4ec4ad18c1d20d2,2203c4b699d8b6cd56b754cff4ec4ad18c1d20d2,Checkpoint: Generate efficient BoundGenericMethod_Invoke
kg,2015-07-04 23:06:42,https://api.github.com/repos/sq/JSIL/git/commits/1b79c53ff2f4cc79c14ed4482176849a7392f1a1,1b79c53ff2f4cc79c14ed4482176849a7392f1a1,Get rid of the array clone in BindGenericMethod
kg,2015-07-04 23:05:07,https://api.github.com/repos/sq/JSIL/git/commits/607ccc2564ec09d66a19d6e7fa4a8f5990cad9ff,607ccc2564ec09d66a19d6e7fa4a8f5990cad9ff,"Slightly more efficient dispatch stubs for unbound generic methods
Test cleanup/rearrangement
Handle a corner case in unsafe code transform for pointer offsets"
kg,2015-07-04 13:36:38,https://api.github.com/repos/sq/JSIL/git/commits/7885ca47c0c4c7b500f7f2ffb2134655af89bcb1,7885ca47c0c4c7b500f7f2ffb2134655af89bcb1,Add a test case for invoking generic methods
kg,2015-07-04 13:35:58,https://api.github.com/repos/sq/JSIL/git/commits/24f03e43ff5dc47000e2f5bee08bfee3e8f8e810,24f03e43ff5dc47000e2f5bee08bfee3e8f8e810,Restore the two pointer operation optimizations that Vector3 and UnsafeIntPerformanceComparison relied on for speed
kg,2015-07-04 13:19:04,https://api.github.com/repos/sq/JSIL/git/commits/50323b0cf6467110b718b6a581bd669ea75df47a,50323b0cf6467110b718b6a581bd669ea75df47a,Minor performance tweak to PInvoke layer
kg,2015-07-04 10:04:25,https://api.github.com/repos/sq/JSIL/git/commits/929945f6e186c37b7813c29efbd2734b6b0bb32b,929945f6e186c37b7813c29efbd2734b6b0bb32b,Fix corner cases involving default-initialized IntPtr instances
kg,2015-07-04 09:34:05,https://api.github.com/repos/sq/JSIL/git/commits/59541036f6c6bc6d0cdd010594d24f5fffb025b9,59541036f6c6bc6d0cdd010594d24f5fffb025b9,"Checkpoint: Zero length int array test works
IntPtr and UIntPtr are not 'Pointers' as far as TypeUtil is concerned, despite their names
Blacklist IntPtr& from autocasts just like IntPtr
Fix storing a 0 nativeint (null ptr) directly into a pointer local
Fix handling of null pointers in a few parts of the PInvoke code"
kg,2015-07-04 09:22:12,https://api.github.com/repos/sq/JSIL/git/commits/532c815145f375f321b1d6cd7845bb8af53a04df,532c815145f375f321b1d6cd7845bb8af53a04df,Checkpoint pointer changes
kg,2015-07-04 08:46:57,https://api.github.com/repos/sq/JSIL/git/commits/84d483923e3fff6e4551dbe463d66b0644d1c042,84d483923e3fff6e4551dbe463d66b0644d1c042,Checkpoint: More pointer fixes
kg,2015-07-04 08:35:27,https://api.github.com/repos/sq/JSIL/git/commits/1daee21647286a3c9770f54a7713814a582d7e5c,1daee21647286a3c9770f54a7713814a582d7e5c,Checkpoint: Extensive pointer and type inference overhaul
kg,2015-07-04 07:36:32,https://api.github.com/repos/sq/JSIL/git/commits/1e14d2d127352b494d2592d2839739c2350f63cd,1e14d2d127352b494d2592d2839739c2350f63cd,Centralize instantiation of System.Type typereferences
kg,2015-07-04 07:09:58,https://api.github.com/repos/sq/JSIL/git/commits/934018cc60f53c0ac8822616b0e39127c1035ec1,934018cc60f53c0ac8822616b0e39127c1035ec1,Change System.IntPtr and System.UIntPtr to 32-bit.
kg,2015-07-04 06:47:54,https://api.github.com/repos/sq/JSIL/git/commits/23ec0bb30905c94ed9470be32cf6d69c1d777d18,23ec0bb30905c94ed9470be32cf6d69c1d777d18,"Eliminate spurious round-trip numeric casts that can be proven not to do anything. (This is mostly important for int64 round-trips, since they produce a heap allocation)"
kg,2015-07-04 06:43:59,https://api.github.com/repos/sq/JSIL/git/commits/f27641fcc2ac268bdcc612e19ae6a99a5d93df6f,f27641fcc2ac268bdcc612e19ae6a99a5d93df6f,Fix some int64 conversion corner cases and add a test
kg,2015-07-03 06:53:19,https://api.github.com/repos/sq/JSIL/git/commits/48cceb48d71b468f77c18b9e3c1d00d376e71a4e,48cceb48d71b468f77c18b9e3c1d00d376e71a4e,"Merge pull request #745 from mispy/zerowidtharray

Failing test case for representation of int[0]"
mispy,2015-07-03 06:41:43,https://api.github.com/repos/sq/JSIL/git/commits/c407c545620b3816aae47f95f342ae4ffc52d0c8,c407c545620b3816aae47f95f342ae4ffc52d0c8,"Failing test case for representation of int[0]

A pointer to an array of zero-width should be a null
pointer. Important for an odd edge case in emscripten
openal"
kg,2015-07-03 06:42:35,https://api.github.com/repos/sq/JSIL/git/commits/d524eb5cee686410eea9a443b50e7f788595eae0,d524eb5cee686410eea9a443b50e7f788595eae0,Implement proper pinvoke marshaling for enums
kg,2015-07-03 02:34:47,https://api.github.com/repos/sq/JSIL/git/commits/769353b60065927f67ab2df2e743edab14f3f905,769353b60065927f67ab2df2e743edab14f3f905,"Merge pull request #744 from mispy/boxedvarpointersize

Test + fix for out ints larger than a byte"
mispy,2015-07-03 02:29:11,https://api.github.com/repos/sq/JSIL/git/commits/f0b0051289c408d65ba0624808594cdc3acf389a,f0b0051289c408d65ba0624808594cdc3acf389a,Test + fix for out ints larger than a byte
kg,2015-06-21 16:48:44,https://api.github.com/repos/sq/JSIL/git/commits/88331ac451cdb50e2f3b0871ba7fd915f0e7c29d,88331ac451cdb50e2f3b0871ba7fd915f0e7c29d,Hack around pinvoke resolve error on some mscorlib methods
kg,2015-06-20 13:29:39,https://api.github.com/repos/sq/JSIL/git/commits/1311137365d289b7301dae8d11d6bb2869aebc9a,1311137365d289b7301dae8d11d6bb2869aebc9a,IE11 compatibility hack
kg,2015-06-20 12:05:12,https://api.github.com/repos/sq/JSIL/git/commits/aa7d1de1104b41dcdbba182f5455e34b7bebd54e,aa7d1de1104b41dcdbba182f5455e34b7bebd54e,"Merge pull request #742 from mispy/outcomplexunionparametertest

Failing test case OutComplexUnionParameter"
kg,2015-06-20 11:59:52,https://api.github.com/repos/sq/JSIL/git/commits/55e13160d0ffdd8d753035b32bb6d9935faf08cf,55e13160d0ffdd8d753035b32bb6d9935faf08cf,Various fixes and corner case improvements for unions and proxies
kg,2015-06-20 11:44:30,https://api.github.com/repos/sq/JSIL/git/commits/020be73638ed609eb349c06d6d925d4ab0586179,020be73638ed609eb349c06d6d925d4ab0586179,"Fix proxy accessors for enum fields within structs, and add a test."
mispy,2015-06-20 11:36:15,https://api.github.com/repos/sq/JSIL/git/commits/09c1dace227231ff8e8b2d1f7141edef3cb040a1,09c1dace227231ff8e8b2d1f7141edef3cb040a1,Failing test case OutComplexUnionParameter
kg,2015-06-20 11:13:29,https://api.github.com/repos/sq/JSIL/git/commits/37a7ab0aa0400754e82209dbc2d3477088091225,37a7ab0aa0400754e82209dbc2d3477088091225,Fix structs containing objects being erroneously tagged as unions
kg,2015-06-20 11:04:29,https://api.github.com/repos/sq/JSIL/git/commits/b9a99cf797a47e79e831553c94555ba3ddbf8a08,b9a99cf797a47e79e831553c94555ba3ddbf8a08,FieldOffset-based unions work (by forcing the type to be constructed as a gross wrapper around a hidden byte buffer)
kg,2015-06-20 10:28:29,https://api.github.com/repos/sq/JSIL/git/commits/e953f44bfefbfe1f721abb4e1bf19103467663e6,e953f44bfefbfe1f721abb4e1bf19103467663e6,Flag types that are unions
kg,2015-06-20 10:17:51,https://api.github.com/repos/sq/JSIL/git/commits/dd8018d86ca8b171073854593cceb1d9d5c0f989,dd8018d86ca8b171073854593cceb1d9d5c0f989,Add a test case for fieldoffset-based unions
kg,2015-06-20 10:15:26,https://api.github.com/repos/sq/JSIL/git/commits/cbc79194f6ef9047bfc67c4c0f6161baebbef3c4,cbc79194f6ef9047bfc67c4c0f6161baebbef3c4,Custom padding using FieldOffset works
kg,2015-06-20 10:12:44,https://api.github.com/repos/sq/JSIL/git/commits/e4abc29f19d20576c62c8191d4a789dc0ed08072,e4abc29f19d20576c62c8191d4a789dc0ed08072,Add test for custom field offsets
kg,2015-06-20 10:07:36,https://api.github.com/repos/sq/JSIL/git/commits/3a3d4be6e7ecff488e8159c2a88124d8042b3323,3a3d4be6e7ecff488e8159c2a88124d8042b3323,Full implementation of custom struct packing (with slow path where necessary)
kg,2015-06-20 09:55:51,https://api.github.com/repos/sq/JSIL/git/commits/bbf86449f0a0c76c7ea39769e9764af9d81ffff4,bbf86449f0a0c76c7ea39769e9764af9d81ffff4,Partially implement custom struct packing
kg,2015-06-20 09:26:12,https://api.github.com/repos/sq/JSIL/git/commits/524f415b581d95b82cdcffa66eebaa015ff15ec2,524f415b581d95b82cdcffa66eebaa015ff15ec2,"Add a hack to work around ILSpy type inference messing up on pointer casts
Add a test for custom struct packing
Fix references all sharing the same cast methods"
kg,2015-06-20 08:51:10,https://api.github.com/repos/sq/JSIL/git/commits/7bc9f8775815667b29d60f8197b42a05bf48fa10,7bc9f8775815667b29d60f8197b42a05bf48fa10,"Emit offset, size, pack and layout information when translating types"
kg,2015-06-20 08:37:55,https://api.github.com/repos/sq/JSIL/git/commits/4dd34a94a90e1d68288ee39d84dfd7405af8beb2,4dd34a94a90e1d68288ee39d84dfd7405af8beb2,"Merge pull request #741 from mispy/outunionparametertest

Failing test for union out parameters"
mispy,2015-06-20 08:31:57,https://api.github.com/repos/sq/JSIL/git/commits/d2d9762460e49adf7f510f172d1ee61485ac80b9,d2d9762460e49adf7f510f172d1ee61485ac80b9,Failing test for OutUnionParameter
mispy,2015-06-20 07:42:57,https://api.github.com/repos/sq/JSIL/git/commits/03f5f39e3567f95d67a8016101d4d4c34abbd7ea,03f5f39e3567f95d67a8016101d4d4c34abbd7ea,Update to latest SDL2.js
kg,2015-06-18 03:21:06,https://api.github.com/repos/sq/JSIL/git/commits/b36c78ed9fda8104f5c019f0460edd8e4a6aa9bf,b36c78ed9fda8104f5c019f0460edd8e4a6aa9bf,Update ILSpy submodule
dmirmilshteyn,2015-06-13 05:18:35,https://api.github.com/repos/sq/JSIL/git/commits/0b637ce2f332b135b349c995bd6c5e59adaea05b,0b637ce2f332b135b349c995bd6c5e59adaea05b,Added git attributes file to enforce normalized EOL
kg,2015-06-06 10:34:29,https://api.github.com/repos/sq/JSIL/git/commits/ea06a9520425431c4bdda5edf1d7ed732b88fb98,ea06a9520425431c4bdda5edf1d7ed732b88fb98,Add slow copy-in-copy-out fallback for IntPtr marshalling that uses depraved magic to identify the source data range and make copies
kg,2015-06-06 10:09:23,https://api.github.com/repos/sq/JSIL/git/commits/361ea2cb0d74e517e883f0d155fc826aa840e2bc,361ea2cb0d74e517e883f0d155fc826aa840e2bc,Make emscripten tests cope with more emscripten sdk fragility
kg,2015-06-06 09:53:35,https://api.github.com/repos/sq/JSIL/git/commits/a836c0a4358bbd45b6c29ebeb46c9bdc67e4e88b,a836c0a4358bbd45b6c29ebeb46c9bdc67e4e88b,"Move the side effect synthesis out of first pass static analysis into the second pass to avoid some terrifying recursion.
Assorted robustness tweaks."
kg,2015-06-06 09:37:34,https://api.github.com/repos/sq/JSIL/git/commits/ad6071cd732e6fc6b8eef18bf78245b18eeab1cf,ad6071cd732e6fc6b8eef18bf78245b18eeab1cf,"Fix static analysis data not flagging .ctor methods as violating this-reference immutability
Generate SideEffects in static analysis for methods that violate this-reference immutability
Fix field reads counting as a side effect
Add diagnostic asserts to second pass"
kg,2015-06-06 08:47:19,https://api.github.com/repos/sq/JSIL/git/commits/8e5d8553387d1d844688850cb8432d2ac706dfca,8e5d8553387d1d844688850cb8432d2ac706dfca,"Fix broken struct copy optimization (affected FNA DrawSprite function) and add test - don't elide struct copies if the lhs is subject to side effects later.
Tweak struct copy elimination to use side effects to decide whether it is safe to elide a copy instead of using reassignments (less conservative; still right)"
kg,2015-06-04 22:13:21,https://api.github.com/repos/sq/JSIL/git/commits/f8cc20f6d73604466cab968c7fed3b95f3e8ea7b,f8cc20f6d73604466cab968c7fed3b95f3e8ea7b,Add missing LICENSE file
iskiselev,2015-04-21 17:25:34,https://api.github.com/repos/sq/JSIL/git/commits/9c3f8d15014d0a4d56cf3f36a21e06d18edc8c72,9c3f8d15014d0a4d56cf3f36a21e06d18edc8c72,"Fix declaring reference to built-in types from enclosed type, when parent type was stripped by DCE. Fix #727."
kg,2015-04-19 15:52:43,https://api.github.com/repos/sq/JSIL/git/commits/9b7c69a377916012d76befad71901aaf7ba902b5,9b7c69a377916012d76befad71901aaf7ba902b5,Fix StringRefArgument (implement ref string for pinvoke)
kg,2015-04-19 15:33:44,https://api.github.com/repos/sq/JSIL/git/commits/c1938fde008404e6aff8bd4f5c34e24675e65263,c1938fde008404e6aff8bd4f5c34e24675e65263,Add GCHandleType
kg,2015-04-19 15:15:14,https://api.github.com/repos/sq/JSIL/git/commits/0d42ffa7523a626677c25bbd14c9b397070ed6d6,0d42ffa7523a626677c25bbd14c9b397070ed6d6,"Struct fields of element proxies are also element proxies, unfortunately. Slow-ish fix for #732."
kg,2015-04-19 13:06:42,https://api.github.com/repos/sq/JSIL/git/commits/5b392d276435591dbdc98c963cd90b44581d8227,5b392d276435591dbdc98c963cd90b44581d8227,"Implement basic AssemblyName functionality
Don't generate attributes on skeleton methods"
kg,2015-04-19 12:21:42,https://api.github.com/repos/sq/JSIL/git/commits/702df08f5de2f872cd8da9c3a78f5968f685117b,702df08f5de2f872cd8da9c3a78f5968f685117b,"FNA sample fix checkpoint
Fix ResourceConverter spam for manifest resources"
kg,2015-04-08 07:33:51,https://api.github.com/repos/sq/JSIL/git/commits/083b060193cefa811d127c9b0027593df7440fe0,083b060193cefa811d127c9b0027593df7440fe0,Update README.md
kg,2015-04-08 07:16:53,https://api.github.com/repos/sq/JSIL/git/commits/58c62e87002f0ad05af910d44f200dc9b8283fa2,58c62e87002f0ad05af910d44f200dc9b8283fa2,"Merge pull request #718 from Rohansi/master

Fix some crashes in DeadCodeAnalyzer"
kg,2015-04-08 07:15:54,https://api.github.com/repos/sq/JSIL/git/commits/7cae3eea2cc47e93256e82841309210c7a33c0a3,7cae3eea2cc47e93256e82841309210c7a33c0a3,"Merge PR#712 (Add test for passing GCHandle ptr via pinvoke)

Conflicts:
	Tests/EmscriptenTestCases/PassPtrToPinnedArray.cs
	Tests/Tests.csproj"
kg,2015-04-08 07:13:22,https://api.github.com/repos/sq/JSIL/git/commits/ba9fc6b210e2fda601bff614d3646d125ad8cf98,ba9fc6b210e2fda601bff614d3646d125ad8cf98,Merge PR#708 (Delegate fixes)
kg,2015-04-08 07:10:30,https://api.github.com/repos/sq/JSIL/git/commits/53692504239632d5dd56fadade76174bed40cde9,53692504239632d5dd56fadade76174bed40cde9,"Merge pull request #634 from dmirmilshteyn/master

Moved JSIL.Meta to a PCL"
kg,2015-04-08 07:03:58,https://api.github.com/repos/sq/JSIL/git/commits/a811c4e07b14c6e27ef6050f13f51e0798cd6c31,a811c4e07b14c6e27ef6050f13f51e0798cd6c31,Merge mispy's emscripten/FNA branch (note: two emscripten tests aren't passing yet)
kg,2015-04-08 07:01:57,https://api.github.com/repos/sq/JSIL/git/commits/6731392e71d226c0fb6f57ae3885029f62b1bdaf,6731392e71d226c0fb6f57ae3885029f62b1bdaf,Add test for issue #696
mispy,2015-03-30 18:46:17,https://api.github.com/repos/sq/JSIL/git/commits/62def6c2fbddb00a262514e89f8a80344a885737,62def6c2fbddb00a262514e89f8a80344a885737,Simple implementation of System.Uri
mispy,2015-03-30 10:40:17,https://api.github.com/repos/sq/JSIL/git/commits/4f497dffb8eec77d3c05bf9cc2d22f4ff7d76417,4f497dffb8eec77d3c05bf9cc2d22f4ff7d76417,Fix deprecation warning about webkitAudioContext
mispy,2015-03-27 10:26:28,https://api.github.com/repos/sq/JSIL/git/commits/54e3b8fd95d28cada35fd3f20302bf0324517b8d,54e3b8fd95d28cada35fd3f20302bf0324517b8d,Implement Queue.Contains
mispy,2015-03-27 10:26:03,https://api.github.com/repos/sq/JSIL/git/commits/523cf161104b5b98972d7ed5bd58eaa5710a14f6,523cf161104b5b98972d7ed5bd58eaa5710a14f6,Enum emscripten test
mispy,2015-03-27 10:09:02,https://api.github.com/repos/sq/JSIL/git/commits/228a44af37a66fa1c7825d4e35d0cc469c2c77b2,228a44af37a66fa1c7825d4e35d0cc469c2c77b2,Restore warning tracebacks
mispy,2015-03-26 16:16:11,https://api.github.com/repos/sq/JSIL/git/commits/f4d89ef3979266aa6efe4680f90abd0f9ddb5c76,f4d89ef3979266aa6efe4680f90abd0f9ddb5c76,Fix passing of non-out pinnable arrays to emscripten
mispy,2015-03-26 12:53:53,https://api.github.com/repos/sq/JSIL/git/commits/046d52e2a87708a53f95e787eacd9f73df57e5dc,046d52e2a87708a53f95e787eacd9f73df57e5dc,Implement marshalling of string arrays
mispy,2015-03-26 07:08:37,https://api.github.com/repos/sq/JSIL/git/commits/c238329e8e82e8ac8f93a21c42c9edbbfdbe36cc,c238329e8e82e8ac8f93a21c42c9edbbfdbe36cc,Emscripten test for passing a string[] parameter
mispy,2015-03-25 10:57:16,https://api.github.com/repos/sq/JSIL/git/commits/8d8a270442825ec4a94ce9724505ede80d63745f,8d8a270442825ec4a94ce9724505ede80d63745f,"StringMarshaller NativeToManaged implementation

(sometimes it gets negative nativeValue-- why?)"
mispy,2015-03-25 08:54:34,https://api.github.com/repos/sq/JSIL/git/commits/1cb5b799743a967005b3550c3762ed6712d549ee,1cb5b799743a967005b3550c3762ed6712d549ee,Emscripten test for reading string as ref argument
mispy,2015-03-22 06:31:26,https://api.github.com/repos/sq/JSIL/git/commits/e5a36e0fded6494a696018a209e710ffe068e8f1,e5a36e0fded6494a696018a209e710ffe068e8f1,"Handle case when IntPtr.pointer is undefined

As opposed to null. Should this scenario actually arise?"
Rohansi,2015-03-19 17:57:58,https://api.github.com/repos/sq/JSIL/git/commits/91d2ff58928c7a4babf19285bbeffdf639ef8a60,91d2ff58928c7a4babf19285bbeffdf639ef8a60,Don't ignore JSDeadCodeElemination attributes when WhiteList is empty
Rohansi,2015-03-18 17:21:20,https://api.github.com/repos/sq/JSIL/git/commits/436e2d2748446552f3b6f7f618c62165e8594506,436e2d2748446552f3b6f7f618c62165e8594506,Fix null reference when trying to use default WhiteList value
Rohansi,2015-03-18 17:18:15,https://api.github.com/repos/sq/JSIL/git/commits/aa3b3b88e1e7c1e795f95c09d217740dab28a3aa,aa3b3b88e1e7c1e795f95c09d217740dab28a3aa,Fix stack overflow when generic base refers to derived type
mispy,2015-03-12 18:09:49,https://api.github.com/repos/sq/JSIL/git/commits/398cf7e20dae57936dff633746fd1a9198212db7,398cf7e20dae57936dff633746fd1a9198212db7,Implementation of System.Collections.BitArray
mispy,2015-03-12 18:09:18,https://api.github.com/repos/sq/JSIL/git/commits/1f1129bc165e2e90264a13763291f35ff7cb75f8,1f1129bc165e2e90264a13763291f35ff7cb75f8,"Test for System.Collections.BitArray

FNA needs this as part of the content reading process"
mispy,2015-03-12 14:14:59,https://api.github.com/repos/sq/JSIL/git/commits/74f5852e581acb15622affd7c11b56beb7568924,74f5852e581acb15622affd7c11b56beb7568924,"Regex.Replace(String, String, String) overload"
mispy,2015-03-12 05:18:09,https://api.github.com/repos/sq/JSIL/git/commits/b96829f0535c6be5b1a952fd68003e2ef0b1b701,b96829f0535c6be5b1a952fd68003e2ef0b1b701,Implement System.IO.Path.IsPathRooted
mispy,2015-03-12 03:53:58,https://api.github.com/repos/sq/JSIL/git/commits/bd14549df183927782a75f0a9233ea11a2d86ca5,bd14549df183927782a75f0a9233ea11a2d86ca5,Add four-argument MemoryStream constructor for FNA
iskiselev,2015-03-11 20:12:42,https://api.github.com/repos/sq/JSIL/git/commits/57f9c7a53700d21dbc77ccbef893fc6e7daad17a,57f9c7a53700d21dbc77ccbef893fc6e7daad17a,AssemblyId generation use lock.
mispy,2015-03-11 14:17:50,https://api.github.com/repos/sq/JSIL/git/commits/3a47d5aa1bc79e582275a1426dbbae212ce8b73d,3a47d5aa1bc79e582275a1426dbbae212ce8b73d,Add test for passing GCHandle ptr to emscripten
mispy,2015-03-11 14:17:50,https://api.github.com/repos/sq/JSIL/git/commits/c0ab789bfee2d0d94fb3c2e1771ee6c82005e4ea,c0ab789bfee2d0d94fb3c2e1771ee6c82005e4ea,Add test for passing GCHandle ptr to emscripten
iskiselev,2015-03-10 15:52:34,https://api.github.com/repos/sq/JSIL/git/commits/c05687408f5fd2127d239ab184a366f453509f1c,c05687408f5fd2127d239ab184a366f453509f1c,Delegate fixes.
kg,2015-03-10 10:55:13,https://api.github.com/repos/sq/JSIL/git/commits/73634440bf5761e8760a414a41c819f3ee64a3a2,73634440bf5761e8760a414a41c819f3ee64a3a2,"Merge pull request #707 from iskiselev/Issue705

Failed to extract BoxedVariable before return result"
kg,2015-03-10 10:54:34,https://api.github.com/repos/sq/JSIL/git/commits/d79432206352c8e51d3a179ef4aa40f5b1a77c5f,d79432206352c8e51d3a179ef4aa40f5b1a77c5f,"Merge pull request #709 from iskiselev/StringCompareWithNull

string.Compare against null."
iskiselev,2015-03-10 08:45:06,https://api.github.com/repos/sq/JSIL/git/commits/cff6dcd4a5e748ca51984967289ab12445f3a5f6,cff6dcd4a5e748ca51984967289ab12445f3a5f6,string.Compare against null.
iskiselev,2015-03-10 00:28:18,https://api.github.com/repos/sq/JSIL/git/commits/f32c806e00c5860a9ace07f602e8b87a906f9e99,f32c806e00c5860a9ace07f602e8b87a906f9e99,Fix #705. (Failed to extract BoxedVariable before return result).
kg,2015-03-05 05:19:36,https://api.github.com/repos/sq/JSIL/git/commits/b3f21f8756a82eaa61efd88faff3a51980a52dff,b3f21f8756a82eaa61efd88faff3a51980a52dff,"Merge pull request #703 from iskiselev/ReflectionFixes

Fixed error on reflection Invoke of static method from generic class"
iskiselev,2015-03-05 04:18:31,https://api.github.com/repos/sq/JSIL/git/commits/58f16edf6068bbd5aaaf90bb8098bb2d4f0bb771,58f16edf6068bbd5aaaf90bb8098bb2d4f0bb771,Fixed EOL style for test.
kg,2015-03-04 13:34:02,https://api.github.com/repos/sq/JSIL/git/commits/09dbb24785db64a12ae73351c00443d57c843d40,09dbb24785db64a12ae73351c00443d57c843d40,"Merge pull request #702 from mispy/intptrequalitytest

Equality between null emscripten pointer and IntPtr.Zero"
kg,2015-03-04 13:33:15,https://api.github.com/repos/sq/JSIL/git/commits/c73d6bd8ae19e8d938bf4a29d34e5dd290fc902c,c73d6bd8ae19e8d938bf4a29d34e5dd290fc902c,"Merge pull request #700 from iskiselev/ExpressionEngineRequirments

Expression engine requirments"
mispy,2015-03-04 12:31:06,https://api.github.com/repos/sq/JSIL/git/commits/ed7f681411af1d01555ca8c783ff2616879dcfae,ed7f681411af1d01555ca8c783ff2616879dcfae,Special case equality between all null IntPtrs
mispy,2015-03-04 12:00:46,https://api.github.com/repos/sq/JSIL/git/commits/ba946f0339b854c4330a2c7924911e82f85dd8b5,ba946f0339b854c4330a2c7924911e82f85dd8b5,"Failing IntPtr.Zero equality test

This bug causes FNA to incorrectly believe the platform supports
more opengl functions than it actually does, because it can't
tell that the returned function pointers are null."
kg,2015-03-04 02:02:11,https://api.github.com/repos/sq/JSIL/git/commits/fb324f0e899814173c2b34c5c13c0f4359fc0a58,fb324f0e899814173c2b34c5c13c0f4359fc0a58,"Merge pull request #698 from iskiselev/DelegateUpdate

Delegate update"
kg,2015-03-04 01:29:03,https://api.github.com/repos/sq/JSIL/git/commits/b7f4199b526b47f5892b06ab67379cc82163833a,b7f4199b526b47f5892b06ab67379cc82163833a,Update expression interpreter
kg,2015-03-03 13:35:23,https://api.github.com/repos/sq/JSIL/git/commits/27f0952c9af3c6b5eae4b83169846c28d80e87ef,27f0952c9af3c6b5eae4b83169846c28d80e87ef,Suppress spurious proxy warnings for certain types of properties and methods
kg,2015-03-03 13:11:17,https://api.github.com/repos/sq/JSIL/git/commits/1108d97933417229e750abc10a27a1c968cedefe,1108d97933417229e750abc10a27a1c968cedefe,Fix regression
kg,2015-03-03 13:02:27,https://api.github.com/repos/sq/JSIL/git/commits/7f6c3d2851ed3754a9998d009cf4006b092a98ee,7f6c3d2851ed3754a9998d009cf4006b092a98ee,Proxy warnings default-off
kg,2015-03-03 12:59:58,https://api.github.com/repos/sq/JSIL/git/commits/e67fc12aacd0f4f136d470365e0cb1a7c44db143,e67fc12aacd0f4f136d470365e0cb1a7c44db143,Implement member-specific proxy not matched warnings
kg,2015-03-03 12:31:31,https://api.github.com/repos/sq/JSIL/git/commits/8983e60aae6e1b70f4b2ea1a67d64a4ac23c6c7e,8983e60aae6e1b70f4b2ea1a67d64a4ac23c6c7e,"Add a mechanism for diagnostic warnings about proxies ('ProxyWarnings': true in compiler config)
If diagnostic proxy warnings are enabled, list any proxies that were never used at the end of translation."
kg,2015-03-03 11:35:55,https://api.github.com/repos/sq/JSIL/git/commits/de9a1d48c7cf9e0e67a670d93d465c90fa185021,de9a1d48c7cf9e0e67a670d93d465c90fa185021,"Support (int, int) overload of List.Reverse. Fixes #672"
kg,2015-03-03 11:30:32,https://api.github.com/repos/sq/JSIL/git/commits/8ad71c7d751e5e257a36120ac4ea27ecf778e819,8ad71c7d751e5e257a36120ac4ea27ecf778e819,Update shorthand table
kg,2015-03-03 11:21:59,https://api.github.com/repos/sq/JSIL/git/commits/b949dca713a34201f7ca4c4dae96a93f65c30e40,b949dca713a34201f7ca4c4dae96a93f65c30e40,Fix issue #693
kg,2015-03-03 10:50:40,https://api.github.com/repos/sq/JSIL/git/commits/9f9930988adbe49fcbf40e2d94e35eaee555c497,9f9930988adbe49fcbf40e2d94e35eaee555c497,"Merge pull request #695 from mispy/proxyexterntest

Test for bug in proxying extern methods"
kg,2015-03-03 10:50:34,https://api.github.com/repos/sq/JSIL/git/commits/6ab02859a553760cf296fb8beb97102356be6042,6ab02859a553760cf296fb8beb97102356be6042,"Merge pull request #690 from iskiselev/JsStrictMode

Strict mode"
kg,2015-03-03 10:49:39,https://api.github.com/repos/sq/JSIL/git/commits/bb3a9f58e847105e2bb1ed21766573a7db6c46e6,bb3a9f58e847105e2bb1ed21766573a7db6c46e6,"Merge pull request #691 from iskiselev/Issue686_Fix

Fixed build action for PointerWriteConversion."
mispy,2015-02-26 13:19:27,https://api.github.com/repos/sq/JSIL/git/commits/225d42992601871ffbbdea44b685cd1996a04fc2,225d42992601871ffbbdea44b685cd1996a04fc2,ProxiedExternFunction test now fails correctly
mispy,2015-02-26 12:55:13,https://api.github.com/repos/sq/JSIL/git/commits/0a0382fb4f53536923f14ac24c9d8b3f7300f4ef,0a0382fb4f53536923f14ac24c9d8b3f7300f4ef,"Pass scanForProxies through from EmscriptenTests

Means proxies inside the tests are loaded correctly, instead of the
default, which is to only load if no type info provider is specified.
There's probably a better way to do this."
mispy,2015-02-25 02:10:59,https://api.github.com/repos/sq/JSIL/git/commits/756d3aad98cdc8170dda3a19a02d924d971a6397,756d3aad98cdc8170dda3a19a02d924d971a6397,Attempting to make test for proxy extern issue
mispy,2015-02-18 21:37:55,https://api.github.com/repos/sq/JSIL/git/commits/ffb4896fcfb14b3a3da47fb53854a228e68914bd,ffb4896fcfb14b3a3da47fb53854a228e68914bd,Allow unsafe code in Tests project
iskiselev,2015-02-18 22:07:18,https://api.github.com/repos/sq/JSIL/git/commits/4632c93a0a9ff6703ee81434a4dbfc8bb9438c91,4632c93a0a9ff6703ee81434a4dbfc8bb9438c91,Fixed build action for PointerWriteConversion_Issue686.
kg,2015-02-17 23:15:58,https://api.github.com/repos/sq/JSIL/git/commits/26e61fc571fbbd74272fc54f2aa949553b27f9fd,26e61fc571fbbd74272fc54f2aa949553b27f9fd,Merge branch 'emscripten' of github.com:sq/JSIL into emscripten
kg,2015-02-17 23:15:11,https://api.github.com/repos/sq/JSIL/git/commits/598366122407e93d20dde387403d6ee121823962,598366122407e93d20dde387403d6ee121823962,"Merge pull request #688 from iskiselev/Issue686

Fixed issue with pointer write conversion."
kg,2015-02-17 23:14:49,https://api.github.com/repos/sq/JSIL/git/commits/5c5df3ff51bfdf29f3f6b12fd5237e48f55d7cab,5c5df3ff51bfdf29f3f6b12fd5237e48f55d7cab,"Merge pull request #685 from iskiselev/Issue684

Ref Integer increment issue fixed."
kg,2015-02-17 23:14:22,https://api.github.com/repos/sq/JSIL/git/commits/ad427f9d34efa33a03aa2b27d1b75b16a3c1894e,ad427f9d34efa33a03aa2b27d1b75b16a3c1894e,"Merge pull request #683 from iskiselev/SelfTransltedExpressionInterpreter

Self translated expression interpreter"
kg,2015-02-17 23:13:28,https://api.github.com/repos/sq/JSIL/git/commits/efa6f5741d0fe149181fc0a8f107314032c50e9d,efa6f5741d0fe149181fc0a8f107314032c50e9d,"Merge pull request #689 from iskiselev/Issue687

Fixed incorrect string escape for null-byte following digit char."
iskiselev,2015-02-17 22:12:09,https://api.github.com/repos/sq/JSIL/git/commits/37119469348f1d10894b1d9288fe33a2c314ad66,37119469348f1d10894b1d9288fe33a2c314ad66,Fixed incorrect string escape for null-byte following digit char (#687).
iskiselev,2015-02-17 21:57:50,https://api.github.com/repos/sq/JSIL/git/commits/c1f80025bd64da8435cedc165afcea9eb9951b4b,c1f80025bd64da8435cedc165afcea9eb9951b4b,Fixed Build Action for test cases (use None instead of Compile).
iskiselev,2015-02-17 21:55:21,https://api.github.com/repos/sq/JSIL/git/commits/09e97f3dcef8e2e6431b353c33743b16122a438a,09e97f3dcef8e2e6431b353c33743b16122a438a,Use EnableUnsafeCode for BCL translation for JS stict mode compatibility (see #677).
iskiselev,2015-02-17 21:52:43,https://api.github.com/repos/sq/JSIL/git/commits/d5c4d962cb8c8e7723ac0ca590baf8dfaf7e21af,d5c4d962cb8c8e7723ac0ca590baf8dfaf7e21af,Fixed JSIL.IgnoredMember usage for JS strict mode (#677).
iskiselev,2015-02-17 22:19:50,https://api.github.com/repos/sq/JSIL/git/commits/06d6f09ed088f133b399916809fd0598be0d0a44,06d6f09ed088f133b399916809fd0598be0d0a44,Escape variable/argument with name 'arguments'. Strict mode compatibility fix (#677).
iskiselev,2015-02-17 21:51:56,https://api.github.com/repos/sq/JSIL/git/commits/dac974e2f2118ec7b664325f1cbb1546825db242,dac974e2f2118ec7b664325f1cbb1546825db242,Fixed issue with pointer write conversion (#686) and test added.
iskiselev,2015-02-13 21:58:43,https://api.github.com/repos/sq/JSIL/git/commits/736f37c59126b238584bde25b2829638b7ef5dcc,736f37c59126b238584bde25b2829638b7ef5dcc,Ref Integer increment issue #684 fixed.
iskiselev,2015-02-13 19:41:04,https://api.github.com/repos/sq/JSIL/git/commits/a7afbb64f327ce1fc6359adf47915fcd2cabb364,a7afbb64f327ce1fc6359adf47915fcd2cabb364,Use self-translated version of ExpressionEngine.
kg,2015-02-13 15:20:24,https://api.github.com/repos/sq/JSIL/git/commits/06caa3a25094a5a32ef9ac4713ced0bc68ef7b5f,06caa3a25094a5a32ef9ac4713ced0bc68ef7b5f,"Fix static analyzer not flagging variables as accessed when a verbatim expression references them. Fixes a bug in the ProceduralTextures example
Synthesize an assignment static analysis entry for invocations of .ctor on a local"
kg,2015-02-13 13:54:53,https://api.github.com/repos/sq/JSIL/git/commits/83e8cd2049fd1c8a50a6bd38ae477f63e7963452,83e8cd2049fd1c8a50a6bd38ae477f63e7963452,Merge a fix for issue #644
kg,2015-02-13 13:45:17,https://api.github.com/repos/sq/JSIL/git/commits/4a2302dfaa0d638cbaf91ebd6b475d8281048c90,4a2302dfaa0d638cbaf91ebd6b475d8281048c90,Fix issue #651
kg,2015-02-13 13:39:10,https://api.github.com/repos/sq/JSIL/git/commits/098867bd3c9fa41f6e69007b69e8ffdc4f0ee94a,098867bd3c9fa41f6e69007b69e8ffdc4f0ee94a,Fix issue #663
kg,2015-02-13 13:27:07,https://api.github.com/repos/sq/JSIL/git/commits/d514e79ef81a442dd7f4c3713fc6d70207b8b008,d514e79ef81a442dd7f4c3713fc6d70207b8b008,Fix issue #666
kg,2015-02-13 13:23:46,https://api.github.com/repos/sq/JSIL/git/commits/0d09d2e078a3f5c5423b18db61e7743f2db4fbdf,0d09d2e078a3f5c5423b18db61e7743f2db4fbdf,Fix issue #672
kg,2015-02-13 13:17:55,https://api.github.com/repos/sq/JSIL/git/commits/d29b74571e0f599e4034733de99d9741160828a4,d29b74571e0f599e4034733de99d9741160828a4,Fix issue #676
kg,2015-02-13 13:09:10,https://api.github.com/repos/sq/JSIL/git/commits/4801daf30d928cb035c12d8d0b585e65f0903e56,4801daf30d928cb035c12d8d0b585e65f0903e56,Fix issue #678
kg,2015-02-13 13:03:04,https://api.github.com/repos/sq/JSIL/git/commits/4a7d53be25e8873534065b4be7696ad5aabbee3c,4a7d53be25e8873534065b4be7696ad5aabbee3c,Fix issue #679
kg,2015-02-13 12:58:35,https://api.github.com/repos/sq/JSIL/git/commits/b9b77369807b9faf7cc718bea94a57942dfabe7e,b9b77369807b9faf7cc718bea94a57942dfabe7e,Fix issue #681
kg,2015-02-13 12:55:08,https://api.github.com/repos/sq/JSIL/git/commits/a58c19a684a6c7f59808892b1b447ab617cb8dd1,a58c19a684a6c7f59808892b1b447ab617cb8dd1,Fix issue #682
kg,2015-02-13 12:44:18,https://api.github.com/repos/sq/JSIL/git/commits/2f62256b8fd88e28ddb14aeae1aba00a20a682e5,2f62256b8fd88e28ddb14aeae1aba00a20a682e5,Version bump
kg,2015-02-13 12:36:52,https://api.github.com/repos/sq/JSIL/git/commits/2d15640155816054898ff431cb0f908994a5b85d,2d15640155816054898ff431cb0f908994a5b85d,Fix for property setter synthesis (#491) when interacting with generic types.
kg,2015-02-12 11:17:15,https://api.github.com/repos/sq/JSIL/git/commits/ebaa5c46a3d8ac58c20e7bb27d23a8d8d0cb6b87,ebaa5c46a3d8ac58c20e7bb27d23a8d8d0cb6b87,Considerably improved Array.Erase performance by creating a unique implementation for every type
kg,2015-02-12 08:13:14,https://api.github.com/repos/sq/JSIL/git/commits/8eb81cac35ffb7bdd00bb1f438b5a9e1705c1e82,8eb81cac35ffb7bdd00bb1f438b5a9e1705c1e82,"More complete fix for issues related to #491:
Iteratively evaluate the this-reference and all setter arguments into temporaries in order to preserve exact semantics with a huge honkin' comma expression."
kg,2015-02-12 07:00:04,https://api.github.com/repos/sq/JSIL/git/commits/b185ec1794c7618d0a86a3e14228bb1df7beb5e3,b185ec1794c7618d0a86a3e14228bb1df7beb5e3,"Add partial support for AllocHGlobal.
Implement FreeHGlobal.
Fix CustomStringMarshaler"
kg,2015-02-12 06:31:13,https://api.github.com/repos/sq/JSIL/git/commits/02d0312811b4341479bfc5baf4631c534abf4967,02d0312811b4341479bfc5baf4631c534abf4967,"Fix issue #491.  UGH, ILSpy."
iskiselev,2015-02-12 06:10:56,https://api.github.com/repos/sq/JSIL/git/commits/ca65e85e2e985aec4f609d0598226e41dd75749b,ca65e85e2e985aec4f609d0598226e41dd75749b,"Generate ""use stict""; for all JS files (#677)."
kg,2015-02-12 06:06:43,https://api.github.com/repos/sq/JSIL/git/commits/7aa163f3e07b799e7fa0fe3d7f14e9f8d9ee94dc,7aa163f3e07b799e7fa0fe3d7f14e9f8d9ee94dc,Add test for issue #491
kg,2015-02-11 11:15:02,https://api.github.com/repos/sq/JSIL/git/commits/3f41f40e6c438e0d36150afca67407ebffeb2a02,3f41f40e6c438e0d36150afca67407ebffeb2a02,"Fix JavascriptFormatter emitting pointer types just as their element type (WTF????)
Update various unsafe/pinvoke implementations to handle being passed pointer types instead of element types"
kg,2015-02-11 10:39:16,https://api.github.com/repos/sq/JSIL/git/commits/e351d3a3601a3402a470952ae6a40c36daa90f3c,e351d3a3601a3402a470952ae6a40c36daa90f3c,Optimized struct pointer representation (faster creation/copying by moving type info to reusable objects)
kg,2015-02-11 10:27:53,https://api.github.com/repos/sq/JSIL/git/commits/7814fc0aca50fc477d68c7dedc0d7367c1e1d412,7814fc0aca50fc477d68c7dedc0d7367c1e1d412,"Implement the sbyte* and char* String constructors
Pointer correctness fixes
JSIL.Pointer<T>'s $Is method works correctly on runtime pointer instances
Fix StaticStringFromIntPtr"
kg,2015-02-11 09:57:47,https://api.github.com/repos/sq/JSIL/git/commits/2c628c00f0210d19c4ac40bf5f118655dcecbfdf,2c628c00f0210d19c4ac40bf5f118655dcecbfdf,Handle the [Out] annotation on pinvoke parameters
kg,2015-02-11 09:42:32,https://api.github.com/repos/sq/JSIL/git/commits/f92b19c16e80772ca1cde504c91bb3d0aefb9655,f92b19c16e80772ca1cde504c91bb3d0aefb9655,"Support passing non-pinned arrays as pinvoke arguments
Fix pointer.cast silently returning byte pointers sometimes"
kg,2015-02-10 22:16:02,https://api.github.com/repos/sq/JSIL/git/commits/290b92d333b244c74442ba7924300bd99b0f7337,290b92d333b244c74442ba7924300bd99b0f7337,Better error messages for failed invocations through signatures
kg,2015-02-10 21:46:46,https://api.github.com/repos/sq/JSIL/git/commits/e30842262ccb6c4141ae1f36f272f80ea49fcf0a,e30842262ccb6c4141ae1f36f272f80ea49fcf0a,"Merge pull request #675 from mispy/emscripten

GetDelegateForFunctionPointer related fixes and tests"
mispy,2015-02-10 19:29:31,https://api.github.com/repos/sq/JSIL/git/commits/7b304ee5f374f4c12a094bdcc61ecc8212424353,7b304ee5f374f4c12a094bdcc61ecc8212424353,"OutStructArrayParameter test

Currently dies with: ""Object being pinned must have an underlying memory
buffer""

FNA needs this for SDL_PeepEvents among other things"
mispy,2015-02-10 19:05:31,https://api.github.com/repos/sq/JSIL/git/commits/ddccef79498c2113c05353f37c90c6603e5921e2,ddccef79498c2113c05353f37c90c6603e5921e2,StringMarshaller.prototype.GetSignatureToken => i
mispy,2015-02-10 19:04:52,https://api.github.com/repos/sq/JSIL/git/commits/f9e581ae4bf0b65afdeaa800e664994f75f3188f,f9e581ae4bf0b65afdeaa800e664994f75f3188f,"Use __ReferentType__ if no __ReferentType__.__Type__

fixes issue with string refs"
mispy,2015-02-10 17:36:35,https://api.github.com/repos/sq/JSIL/git/commits/12fdaad4d425337e9289fe4b67478027d1b43172,12fdaad4d425337e9289fe4b67478027d1b43172,"Add StaticStringFromIntPtr test

I don't fully understand why, but this is the type signature
and method of access used for glGetString in SDL2-CS"
mispy,2015-02-10 16:40:46,https://api.github.com/repos/sq/JSIL/git/commits/3ef215186c11dc7a733f8ca92c1533f2936d71ae,3ef215186c11dc7a733f8ca92c1533f2936d71ae,Use WarningFormat for GDFFP errors
mispy,2015-02-10 16:30:14,https://api.github.com/repos/sq/JSIL/git/commits/49c2c3cfea23721e85b6008d39e24d3aa8f18070,49c2c3cfea23721e85b6008d39e24d3aa8f18070,UInt32 and Boolean signature tokens ('i')
mispy,2015-02-10 16:29:06,https://api.github.com/repos/sq/JSIL/git/commits/d70ffa9b6cb06212ba15a95eeb799d0793e142c6,d70ffa9b6cb06212ba15a95eeb799d0793e142c6,More detailed GetDelegateForFunctionPointer errors
mispy,2015-02-10 15:48:34,https://api.github.com/repos/sq/JSIL/git/commits/2c46b860f7297bcf98eb2897841cc6ad747e56cf,2c46b860f7297bcf98eb2897841cc6ad747e56cf,"use ""d"" as signature token for floats as well

emscripten's function table names do not seem to
discriminate between doubles and floats"
mispy,2015-02-10 15:35:15,https://api.github.com/repos/sq/JSIL/git/commits/3fc3af4d976540e9ac0b96b3769e48d8990f22d9,3fc3af4d976540e9ac0b96b3769e48d8990f22d9,"GetDelegateForFunctionPointer test

Encompasses some behavior needed by SDL2-CS, notably the (IntPtr, Type)
signature and the current inability to handle float arguments"
mispy,2015-02-10 15:01:44,https://api.github.com/repos/sq/JSIL/git/commits/af297ae386d9ae76454eeddc04232fdf8705ea9e,af297ae386d9ae76454eeddc04232fdf8705ea9e,Add GetDelegateForFunctionPointer overload
mispy,2015-02-10 13:41:58,https://api.github.com/repos/sq/JSIL/git/commits/4629342c81d9ee6764f45610fbfc5372d0f7232d,4629342c81d9ee6764f45610fbfc5372d0f7232d,Test ManagedToNative part of ICustomMarshaler too
kg,2015-02-10 12:57:20,https://api.github.com/repos/sq/JSIL/git/commits/13180b03ac07d0a1cbfe1cfabd73e5547968a6ea,13180b03ac07d0a1cbfe1cfabd73e5547968a6ea,PassIntPtrInStruct works now
kg,2015-02-10 12:50:01,https://api.github.com/repos/sq/JSIL/git/commits/45c9b5e062bc237131362a99234267e15b1e2c52,45c9b5e062bc237131362a99234267e15b1e2c52,"HACK: For arithmetic expressions that produce an implicit intptr (basically only used for stackalloc, i think?) don't MemberwiseClone the result since it's not actually a struct."
kg,2015-02-10 11:23:10,https://api.github.com/repos/sq/JSIL/git/commits/d2d7d2d16f52014ada9ff6e90645ae6196980229,d2d7d2d16f52014ada9ff6e90645ae6196980229,Fix TypeUtil.IsStruct for IntPtr/UIntPtr
kg,2015-02-10 11:17:08,https://api.github.com/repos/sq/JSIL/git/commits/bbb99fa034057e211592fb4283ba6ab985a1f496,bbb99fa034057e211592fb4283ba6ab985a1f496,Fix default(IntPtr) being emitted as 0
kg,2015-02-10 11:06:40,https://api.github.com/repos/sq/JSIL/git/commits/287571c889aa9c31ae8ff63b8abd702ab7d8f045,287571c889aa9c31ae8ff63b8abd702ab7d8f045,Tweak a test case to stop asserting that an optimization isn't happening (it happens now! :D )
kg,2015-02-10 10:53:13,https://api.github.com/repos/sq/JSIL/git/commits/8df1d77eb7d61ee38d542791b685834936f78581,8df1d77eb7d61ee38d542791b685834936f78581,Enable the eliminate-copy-for-last-access-to-struct heuristic in another scenario; make it slightly more aggressive (nodeindex isn't reliable)
kg,2015-02-10 10:41:06,https://api.github.com/repos/sq/JSIL/git/commits/d6cf3637752a3679da193a71fe804bf4d1af2187,d6cf3637752a3679da193a71fe804bf4d1af2187,Fix spurious non-reference warning from T& <- T* stloc operation
kg,2015-02-10 10:22:37,https://api.github.com/repos/sq/JSIL/git/commits/f0b5a49007d858d2f03691cc310776e2a618655f,f0b5a49007d858d2f03691cc310776e2a618655f,Introduce a simple struct copy elimination heuristic to fix the 'var temp = x; temp.y = z; foo.Baz = temp;' pattern generating a pointless copy. This is important now that object/collection initializers are gone
kg,2015-02-10 10:02:37,https://api.github.com/repos/sq/JSIL/git/commits/96ab57df380c281575720139ef6993cabe46af49,96ab57df380c281575720139ef6993cabe46af49,Fix temporary eliminator veto not applying appropriately to default(StructType)
kg,2015-02-10 09:42:59,https://api.github.com/repos/sq/JSIL/git/commits/34d35ad3cb359b667cc5b8e63681fa9876238cca,34d35ad3cb359b667cc5b8e63681fa9876238cca,"Struct and reference bug fixes
Make temporary elimination for structs slightly more aggressive"
kg,2015-02-10 09:07:12,https://api.github.com/repos/sq/JSIL/git/commits/cd28dd02500d2915481708017afca77e355fbec5,cd28dd02500d2915481708017afca77e355fbec5,Disable all support for object/collection initializers
kg,2015-02-10 02:49:47,https://api.github.com/repos/sq/JSIL/git/commits/6244ed40fa3eab084a5311b1da836b2a6e062398,6244ed40fa3eab084a5311b1da836b2a6e062398,Fix intermittent Bcl tests
kg,2015-02-10 02:25:06,https://api.github.com/repos/sq/JSIL/git/commits/c37c6803cfd3a287873d05e6eda5760421a8cdda,c37c6803cfd3a287873d05e6eda5760421a8cdda,Codegen syntax fixes
kg,2015-02-10 00:00:37,https://api.github.com/repos/sq/JSIL/git/commits/97b7a9167a739c2ede793e9e4144ec3186a3f3c5,97b7a9167a739c2ede793e9e4144ec3186a3f3c5,Partial ICustomMarshaler implementation
kg,2015-02-09 23:43:20,https://api.github.com/repos/sq/JSIL/git/commits/22cd820c9dba23ea2c149d22cb1420ab6e65e1bc,22cd820c9dba23ea2c149d22cb1420ab6e65e1bc,Translate marshalling info for delegate return values/parameters
kg,2015-02-09 23:29:09,https://api.github.com/repos/sq/JSIL/git/commits/eee9dc754fea2b9a3da53278f398c6a8611cb033,eee9dc754fea2b9a3da53278f398c6a8611cb033,Introduce machinery to write out pinvoke marshalling info for return values and parameters
kg,2015-02-09 23:06:47,https://api.github.com/repos/sq/JSIL/git/commits/18e8054d9b4dcc9d51352a4424cef1778e8bb512,18e8054d9b4dcc9d51352a4424cef1778e8bb512,Don't use module.setValue
kg,2015-02-09 23:00:25,https://api.github.com/repos/sq/JSIL/git/commits/f2db848f5a2784260f61beaba273af0630ef88b1,f2db848f5a2784260f61beaba273af0630ef88b1,"Merge pull request #674 from mispy/emscripten

FNA compatibility fixes/tests"
mispy,2015-02-09 18:49:21,https://api.github.com/repos/sq/JSIL/git/commits/c811f9326ddcf47b25438c4e5a23ed2ba0a755e7,c811f9326ddcf47b25438c4e5a23ed2ba0a755e7,Handle enum in ByValueMarshaller.GetSignatureToken
mispy,2015-02-09 16:40:04,https://api.github.com/repos/sq/JSIL/git/commits/2ffe527273d761054cf8b698e2cdd2369b8b46f2,2ffe527273d761054cf8b698e2cdd2369b8b46f2,Ensure strings are null-terminated correctly
mispy,2015-02-09 10:48:01,https://api.github.com/repos/sq/JSIL/git/commits/aa3717af89acedc6b707a2d79a5d10b013027c79,aa3717af89acedc6b707a2d79a5d10b013027c79,"CustomStringMarshaler test case

Comes from SDL2-CS, which returns all native strings using LPUtf8StrMarshaler"
kg,2015-02-09 11:43:40,https://api.github.com/repos/sq/JSIL/git/commits/a7440d6009fe1d72662ff2fc8df0eaa6149bb587,a7440d6009fe1d72662ff2fc8df0eaa6149bb587,"Merge pull request #671 from mispy/emscripten2

Add StructAlignment test for enum alignment"
mispy,2015-02-09 11:30:35,https://api.github.com/repos/sq/JSIL/git/commits/3217cb0e233b212d70cc310245fb86d5c54d8dd7,3217cb0e233b212d70cc310245fb86d5c54d8dd7,"Add StructAlignment test for enum alignment

Similar to delegate issue"
kg,2015-02-09 11:21:18,https://api.github.com/repos/sq/JSIL/git/commits/05ed7d09ec8e01ce3e64570ee76b2d1594f8ec67,05ed7d09ec8e01ce3e64570ee76b2d1594f8ec67,Fix alignment for enums
kg,2015-02-09 11:03:02,https://api.github.com/repos/sq/JSIL/git/commits/a2682dabffb08f3fb83c4831959b64ae96979959,a2682dabffb08f3fb83c4831959b64ae96979959,Fix external stub breakage
kg,2015-02-09 10:49:29,https://api.github.com/repos/sq/JSIL/git/commits/cd5fa5ae99ccf7716c674157466c993e8868d430,cd5fa5ae99ccf7716c674157466c993e8868d430,Fix ComparisonTest NRE
kg,2015-02-09 10:43:14,https://api.github.com/repos/sq/JSIL/git/commits/8c3986478c1141b8fac2e35ce0c15ecf7e550b96,8c3986478c1141b8fac2e35ce0c15ecf7e550b96,Fix alignment of delegates being -1
kg,2015-02-09 10:39:37,https://api.github.com/repos/sq/JSIL/git/commits/c78666e41bdcb671997cfe86e0bd25c76d959709,c78666e41bdcb671997cfe86e0bd25c76d959709,Generate proper file:// urls for emscripten tests
mispy,2015-02-08 12:08:34,https://api.github.com/repos/sq/JSIL/git/commits/bd5b931825a1bc89b837a170aaf1fd8fc6e85de3,bd5b931825a1bc89b837a170aaf1fd8fc6e85de3,"PassDelegateInStruct fails with ushort in struct

""Uncaught RangeError: start offset of Int32Array should be a multiple of 4""

Only seems to happen for the struct which also has a function pointer."
kg,2015-02-05 23:55:55,https://api.github.com/repos/sq/JSIL/git/commits/a72b64d611c563f1330c534732a6133c5e8c0dd8,a72b64d611c563f1330c534732a6133c5e8c0dd8,Checkpoint
kg,2015-02-05 23:41:32,https://api.github.com/repos/sq/JSIL/git/commits/e1eeaf76b65299b424951865f60eba34b42413b5,e1eeaf76b65299b424951865f60eba34b42413b5,Basic support for delegates in structs passed via pinvoke.
kg,2015-02-05 23:29:43,https://api.github.com/repos/sq/JSIL/git/commits/447be058e6f48c4a69274cec0f48c93cb578e47e,447be058e6f48c4a69274cec0f48c93cb578e47e,Checkpoint work on delegate marshalling & pinning
kg,2015-02-05 22:39:55,https://api.github.com/repos/sq/JSIL/git/commits/e6be7135488e1d62503bfdbdb572c919ca15ac45,e6be7135488e1d62503bfdbdb572c919ca15ac45,Checkpoint some support for marshaling delegates in structs
kg,2015-02-05 22:20:00,https://api.github.com/repos/sq/JSIL/git/commits/19bddaaaf87d1596db6087b441f88fc44eff30b5,19bddaaaf87d1596db6087b441f88fc44eff30b5,"Fix inout array parameters to pinvoke. If the array lives in the emscripten heap it's pinned, otherwise it's temporarily copied then copied back."
kg,2015-02-05 21:58:06,https://api.github.com/repos/sq/JSIL/git/commits/8f773328da8b1d164caf876cbc5d4da2d3fe0138,8f773328da8b1d164caf876cbc5d4da2d3fe0138,Apparently the clang behavior is merely based on field count and not size
kg,2015-02-05 21:48:48,https://api.github.com/repos/sq/JSIL/git/commits/a5f8764e8afd625399029f7a504b6f69f9b1d845,a5f8764e8afd625399029f7a504b6f69f9b1d845,"Emit enum underlying types in translation
Support returning small structs from emscripten functions (they get unpacked into scalars)
Implement struct packing/unpacking for enums"
kg,2015-02-05 20:27:27,https://api.github.com/repos/sq/JSIL/git/commits/6a973a082f76fa48c2f7d3a9637667a38d0d6956,6a973a082f76fa48c2f7d3a9637667a38d0d6956,Checkpoint new MakeEnum argument list format
kg,2015-02-05 20:02:41,https://api.github.com/repos/sq/JSIL/git/commits/30162118eb68433fd6bbbd0fd19b65fd3bc20db2,30162118eb68433fd6bbbd0fd19b65fd3bc20db2,Error handling fixes
kg,2015-02-05 19:57:07,https://api.github.com/repos/sq/JSIL/git/commits/4019a69df9c26e7594e11f89c36b38b2abd308b4,4019a69df9c26e7594e11f89c36b38b2abd308b4,Checkpoint some more WarningFormat
kg,2015-02-05 19:51:27,https://api.github.com/repos/sq/JSIL/git/commits/6ade5c8fa0552c49a7675d25469864d431104ac6,6ade5c8fa0552c49a7675d25469864d431104ac6,Checkpoint WarningFormat refactoring
kg,2015-02-05 19:43:50,https://api.github.com/repos/sq/JSIL/git/commits/b27e3051b0ead536c252551e95fbc7fa794fbbd5,b27e3051b0ead536c252551e95fbc7fa794fbbd5,$FormatStringImpl
mispy,2015-02-05 18:23:39,https://api.github.com/repos/sq/JSIL/git/commits/94921f204ef4f25e32dc3e80d27ac0306bc001cd,94921f204ef4f25e32dc3e80d27ac0306bc001cd,"Refactor delayed warnings into $WarningError

And apply to struct field marshalling as well"
mispy,2015-02-05 17:15:04,https://api.github.com/repos/sq/JSIL/git/commits/c1d56ceca98d55c673e7514e2ddaa30796bb39d2,c1d56ceca98d55c673e7514e2ddaa30796bb39d2,"JSIL.PInvoke.UnimplementedMarshaller

Warns about unmarshallable types and delays the actual
error, like with unimplemented externals"
mispy,2015-02-05 14:47:38,https://api.github.com/repos/sq/JSIL/git/commits/29d0db12d28f607a95bc42b312fed7fe8ad735c0,29d0db12d28f607a95bc42b312fed7fe8ad735c0,"ushort[] pointer pass test from FNA compatibility

SDL_CalculateGammaRamp and some other functions are
passed a ushort[] array to fill, which currently causes:

Error: Type 'System.UInt16[]' cannot be marshalled"
mispy,2015-02-04 18:23:23,https://api.github.com/repos/sq/JSIL/git/commits/7061d40d2fa46f02deb229e56d5c352a8438bef5,7061d40d2fa46f02deb229e56d5c352a8438bef5,PassFlagsInStruct test from FNA compatibility
mispy,2015-02-04 18:07:48,https://api.github.com/repos/sq/JSIL/git/commits/b5f8ed20e4b88d0b8f125ac5405164eeaeda8621,b5f8ed20e4b88d0b8f125ac5405164eeaeda8621,PassDelegateInStruct test from FNA compatibility
mispy,2015-02-04 17:48:36,https://api.github.com/repos/sq/JSIL/git/commits/e7eb4cb54977c28b768f87063034acbecdab3736,e7eb4cb54977c28b768f87063034acbecdab3736,Handle MODULARIZE or not for emscripten tests
mispy,2015-02-04 15:58:37,https://api.github.com/repos/sq/JSIL/git/commits/e9e676da49d6014f877c397931287339002a8430,e9e676da49d6014f877c397931287339002a8430,Require native stuff to be built with MODULARIZE=1
kg,2015-02-04 15:25:57,https://api.github.com/repos/sq/JSIL/git/commits/2efea0b914e915ac884a971929eca9d7b743ee9f,2efea0b914e915ac884a971929eca9d7b743ee9f,"Fix browser loader calling Initialize too early
Fix browser loader not sorting native libraries to the top"
kg,2015-02-02 18:41:42,https://api.github.com/repos/sq/JSIL/git/commits/a9c41236427f2d3a4bff83d9e63ba256e63c841f,a9c41236427f2d3a4bff83d9e63ba256e63c841f,Add an overload of NativePackedArray that specifies a module name so it'll work in the presence of multiple modules
kg,2015-02-02 18:34:21,https://api.github.com/repos/sq/JSIL/git/commits/f1f43805814b3072f487150df32cba16f8de42c9,f1f43805814b3072f487150df32cba16f8de42c9,Refactoring
kg,2015-02-02 18:23:10,https://api.github.com/repos/sq/JSIL/git/commits/aac37df6b5b7d4b26a5c0cceb93e5523ca093bcd,aac37df6b5b7d4b26a5c0cceb93e5523ca093bcd,"Track address/module mappings in more PInvoke scenarios
Refactor IntPtr's pointer representation a bit"
kg,2015-02-02 18:04:19,https://api.github.com/repos/sq/JSIL/git/commits/64af0696825238f2d020731818e0d2f3b27fe33c,64af0696825238f2d020731818e0d2f3b27fe33c,Warn when an operation attempts to access a global emscripten heap with two or more modules loaded
kg,2015-02-02 17:51:25,https://api.github.com/repos/sq/JSIL/git/commits/9342b8a4825484a0007fbc2d663a0dc1bdb277b6,9342b8a4825484a0007fbc2d663a0dc1bdb277b6,Implement DllNotFoundException and EntryPointNotFoundException
kg,2015-02-02 17:43:31,https://api.github.com/repos/sq/JSIL/git/commits/d711c5c8190e9e30cfb2b55dc4f2ca1fb1f2172d,d711c5c8190e9e30cfb2b55dc4f2ca1fb1f2172d,"Checkpoint: Load and track individual native modules by name
Associate native allocations with the module they came from
Look up native methods inside specific modules"
kg,2015-02-02 17:08:17,https://api.github.com/repos/sq/JSIL/git/commits/f4b7a540b43a25673c2c4e0d54709d44725da47a,f4b7a540b43a25673c2c4e0d54709d44725da47a,Support pinvoke EntryPoint override
kg,2015-02-02 16:48:44,https://api.github.com/repos/sq/JSIL/git/commits/3bcf38171e2c3298f41b76505c264df7156f59ed,3bcf38171e2c3298f41b76505c264df7156f59ed,"Implement automatic IntPtr -> Delegate and Delegate -> IntPtr pinvoke marshalling
Yell if a pinvoke -> managed bridge would involve an unfreed heap allocation"
kg,2015-02-01 17:38:54,https://api.github.com/repos/sq/JSIL/git/commits/3220b28badd6a0d4deade8e418a20e862e8431d9,3220b28badd6a0d4deade8e418a20e862e8431d9,More complete implementation of GetFunctionPointerForDelegate
kg,2015-02-01 17:30:45,https://api.github.com/repos/sq/JSIL/git/commits/0531bacac82cc6e89d20da2e2580dc547269548a,0531bacac82cc6e89d20da2e2580dc547269548a,Checkpoint
kg,2015-02-01 17:13:22,https://api.github.com/repos/sq/JSIL/git/commits/2083ea4a258ec67e9ffd33c4060f525b6d1dd94b,2083ea4a258ec67e9ffd33c4060f525b6d1dd94b,Checkpoint: Partial implementation of GetFunctionPointerForDelegate
kg,2015-02-01 17:03:06,https://api.github.com/repos/sq/JSIL/git/commits/c97398d7c5e2cefa5740170e6298515a64bb36a2,c97398d7c5e2cefa5740170e6298515a64bb36a2,Checkpoint more function pointer tests
kg,2015-02-01 16:46:24,https://api.github.com/repos/sq/JSIL/git/commits/fde8db1d29d19c43ec4be92c2874e8d3c271d43d,fde8db1d29d19c43ec4be92c2874e8d3c271d43d,"Function pointer refactorings
Function pointers support more argument types/signatures"
kg,2015-02-01 16:25:19,https://api.github.com/repos/sq/JSIL/git/commits/c1966d50986d78ad267b0616958b2a640422f0e6,c1966d50986d78ad267b0616958b2a640422f0e6,Checkpoint
kg,2015-02-01 16:17:27,https://api.github.com/repos/sq/JSIL/git/commits/bc8237b6f2fd110eec4135517e5ffa447461128d,bc8237b6f2fd110eec4135517e5ffa447461128d,Wrapper argument/return value marshalling refactoring complete
kg,2015-02-01 16:15:56,https://api.github.com/repos/sq/JSIL/git/commits/27d24049896b1874de45f250cd8c35843ada29d9,27d24049896b1874de45f250cd8c35843ada29d9,Checkpoint
kg,2015-02-01 16:10:32,https://api.github.com/repos/sq/JSIL/git/commits/d93038fdaa85cc23f933a29910895f7ef4e8724d,d93038fdaa85cc23f933a29910895f7ef4e8724d,Checkpoint
kg,2015-02-01 16:00:22,https://api.github.com/repos/sq/JSIL/git/commits/7173464ea7eea75b08ae41ba4f3f02b7174bcc8e,7173464ea7eea75b08ae41ba4f3f02b7174bcc8e,Checkpoint
kg,2015-02-01 15:56:03,https://api.github.com/repos/sq/JSIL/git/commits/0564a57d63d7aeb3c1d34e6ba11099a4a5489e2e,0564a57d63d7aeb3c1d34e6ba11099a4a5489e2e,Checkpoint
kg,2015-02-01 15:42:19,https://api.github.com/repos/sq/JSIL/git/commits/c321aba78aecd784ce4a7f3f3b3e8605dafafbfe,c321aba78aecd784ce4a7f3f3b3e8605dafafbfe,Checkpoint refactorings
kg,2015-02-01 14:51:29,https://api.github.com/repos/sq/JSIL/git/commits/c8b5c26b4ca544192a6985f27828df5b21ed5311,c8b5c26b4ca544192a6985f27828df5b21ed5311,Refactoring
kg,2015-02-01 14:43:52,https://api.github.com/repos/sq/JSIL/git/commits/bc2fd2c591a2d171bfd172ec27d7ae00f815573b,bc2fd2c591a2d171bfd172ec27d7ae00f815573b,Refactoring
kg,2015-02-01 14:41:49,https://api.github.com/repos/sq/JSIL/git/commits/b9f8d25c58c360f9cb29fc63a1488fe865c9f1fd,b9f8d25c58c360f9cb29fc63a1488fe865c9f1fd,Split PInvoke into its own file
kg,2015-01-31 14:03:52,https://api.github.com/repos/sq/JSIL/git/commits/28ca451b08d757a0b09663955e379c463d6227ce,28ca451b08d757a0b09663955e379c463d6227ce,Log spam fix
kg,2015-01-31 14:00:34,https://api.github.com/repos/sq/JSIL/git/commits/18ff9d54e1fe54112be00dbc2c932588764175e0,18ff9d54e1fe54112be00dbc2c932588764175e0,GetDelegateForFunctionPointer<T>
kg,2015-01-31 13:29:20,https://api.github.com/repos/sq/JSIL/git/commits/40b33afe452db138fdfdf850441ea7c6371b870f,40b33afe452db138fdfdf850441ea7c6371b870f,Update test
kg,2015-01-31 13:28:24,https://api.github.com/repos/sq/JSIL/git/commits/e0037427b71cf0f65af710c2d6d9a697cf4ec4f7,e0037427b71cf0f65af710c2d6d9a697cf4ec4f7,Fix pinning packed struct arrays
kg,2015-01-31 13:24:48,https://api.github.com/repos/sq/JSIL/git/commits/07215f6f7d49ef2693afccf97aef80916ac0c5b0,07215f6f7d49ef2693afccf97aef80916ac0c5b0,Fix default view allocation for non-byte types
kg,2015-01-31 13:17:56,https://api.github.com/repos/sq/JSIL/git/commits/39eb60ee333fcdca06b929540ef19b6ae7373a62,39eb60ee333fcdca06b929540ef19b6ae7373a62,Packed array docstrings
kg,2015-01-31 13:14:38,https://api.github.com/repos/sq/JSIL/git/commits/25c82134217b0fb6acaaf5132fb75f110d440e86,25c82134217b0fb6acaaf5132fb75f110d440e86,"Pin native packed array to get pointer into emscripten heap
Marshalling typed pointers as arguments"
kg,2015-01-31 13:08:09,https://api.github.com/repos/sq/JSIL/git/commits/a997e230b2348dee79f73e5b24564e6cd33944ff,a997e230b2348dee79f73e5b24564e6cd33944ff,Fix spidermonkey/asm.js incompatibility (typed array buffers don't have .length)
kg,2015-01-31 13:03:35,https://api.github.com/repos/sq/JSIL/git/commits/b84a84faaca31f02e272eb4c5ddb0922f61c9f3b,b84a84faaca31f02e272eb4c5ddb0922f61c9f3b,Detect outdated JSIL.Meta and flush compile cache
kg,2015-01-31 12:57:06,https://api.github.com/repos/sq/JSIL/git/commits/3c58480e6febfa735788b16871a3f8808c53b22e,3c58480e6febfa735788b16871a3f8808c53b22e,Checkpoint 'native packed array' API for allocating packed arrays in the emscripten heap
kg,2015-01-31 12:06:11,https://api.github.com/repos/sq/JSIL/git/commits/01dee73dcd4426ab3552bc942ed83a3fe64be85d,01dee73dcd4426ab3552bc942ed83a3fe64be85d,Rename the asm.js namespace to represent that it works on both platforms
kg,2015-01-27 20:34:57,https://api.github.com/repos/sq/JSIL/git/commits/8429b8a46b6e1d138f49ded1f8e335350694c5be,8429b8a46b6e1d138f49ded1f8e335350694c5be,Asm.Js.malloc and Asm.Js.free
kg,2015-01-27 20:24:20,https://api.github.com/repos/sq/JSIL/git/commits/c4aab0876c4e01e15d57129e5a1b6ac8646d7c07,c4aab0876c4e01e15d57129e5a1b6ac8646d7c07,Basic support for System.IntPtr as a way to round-trip raw emscripten pointers
kg,2015-01-27 19:59:12,https://api.github.com/repos/sq/JSIL/git/commits/a5e0007f3106860c4fa647cfee603c5523e132b9,a5e0007f3106860c4fa647cfee603c5523e132b9,Read-only marshalling for string parameters
kg,2015-01-27 19:40:53,https://api.github.com/repos/sq/JSIL/git/commits/4662c7777effc91bdc0b71e71a2788ff0a594634,4662c7777effc91bdc0b71e71a2788ff0a594634,Refactoring
kg,2015-01-27 19:36:50,https://api.github.com/repos/sq/JSIL/git/commits/4fc8bf1867fe344b6bdab72d9f113429af1c1d27,4fc8bf1867fe344b6bdab72d9f113429af1c1d27,Stringbuilder marshalling works
kg,2015-01-27 19:30:05,https://api.github.com/repos/sq/JSIL/git/commits/4ab703279df2367fca2d80cb3acb4a1ec9674582,4ab703279df2367fca2d80cb3acb4a1ec9674582,Checkpoint stringbuilder marshalling test
kg,2015-01-27 14:55:11,https://api.github.com/repos/sq/JSIL/git/commits/5a92b9d79bca5734fa4c1a33eae77787d654cec3,5a92b9d79bca5734fa4c1a33eae77787d654cec3,Checkpoint
kg,2015-01-27 14:40:42,https://api.github.com/repos/sq/JSIL/git/commits/b77ccfb7c24bd955682425c860c6be057d14c190,b77ccfb7c24bd955682425c860c6be057d14c190,"Fix marshalling bug for void functions
Add another by value struct test"
kg,2015-01-27 14:38:19,https://api.github.com/repos/sq/JSIL/git/commits/dd27ebc3f3935db136d1c1be0fd45a8c2a56fb02,dd27ebc3f3935db136d1c1be0fd45a8c2a56fb02,"Implement by-value struct arguments and by-value struct results, add test"
kg,2015-01-27 14:20:44,https://api.github.com/repos/sq/JSIL/git/commits/45397379c3775457cbd5a69f84e0827d0efcbdf3,45397379c3775457cbd5a69f84e0827d0efcbdf3,Fix struct out/ref parameters and add test
kg,2015-01-27 14:15:41,https://api.github.com/repos/sq/JSIL/git/commits/b32fe17b90699724f52c5d4128418496c0b821d3,b32fe17b90699724f52c5d4128418496c0b821d3,Add another emscripten test
kg,2015-01-27 14:14:05,https://api.github.com/repos/sq/JSIL/git/commits/319b8ed3d2031f6d1b7b45a138ff6f4f840a1320,319b8ed3d2031f6d1b7b45a138ff6f4f840a1320,Emscripten test fixture automatically compiles DLL and emscripten JS
kg,2015-01-26 15:29:46,https://api.github.com/repos/sq/JSIL/git/commits/8c6858f6d32a34273c4881782bf4a64bc31353af,8c6858f6d32a34273c4881782bf4a64bc31353af,Use correct native calling convention in windows test (fixes stack misalignment)
kg,2015-01-26 15:28:42,https://api.github.com/repos/sq/JSIL/git/commits/a9df5742683312f864f20244374bb9062b08618a,a9df5742683312f864f20244374bb9062b08618a,Basic ref/out marshalling for pinvoke methods
kg,2015-01-26 15:09:20,https://api.github.com/repos/sq/JSIL/git/commits/4469d64788a7a88bcccf6dfede3e4a6c977da665,4469d64788a7a88bcccf6dfede3e4a6c977da665,Wrap pinvoke methods with a thunk that mallocs space for any ref/out parameters
kg,2015-01-26 14:58:04,https://api.github.com/repos/sq/JSIL/git/commits/da27f9e097f5294e8e2152ac6f7b8fc209a66d9a,da27f9e097f5294e8e2152ac6f7b8fc209a66d9a,"More emscripten progress
HTML test runner can manually load emscripten DLLs"
kg,2015-01-26 14:42:47,https://api.github.com/repos/sq/JSIL/git/commits/75b8ffb4171445e90ec6730ee524ef50aa5a5748,75b8ffb4171445e90ec6730ee524ef50aa5a5748,Use lazy property for pinvoke lookup
kg,2015-01-26 14:41:25,https://api.github.com/repos/sq/JSIL/git/commits/98e3923bd660c1c49f3fc7881211ceb7fae43b0a,98e3923bd660c1c49f3fc7881211ceb7fae43b0a,PInvoke method lookup
kg,2015-01-26 14:40:13,https://api.github.com/repos/sq/JSIL/git/commits/98b891a593503041d3a8dae2eb1684bf720b7b5e,98b891a593503041d3a8dae2eb1684bf720b7b5e,PInvoke method lookup stub
kg,2015-01-26 14:37:25,https://api.github.com/repos/sq/JSIL/git/commits/cd4d42abfc955f5ada0ed1defe610516d3602f88,cd4d42abfc955f5ada0ed1defe610516d3602f88,Emscripten tests load emscripten compiler output
kg,2015-01-26 14:22:59,https://api.github.com/repos/sq/JSIL/git/commits/a4fdc5380676040fe5a05ebfc54db2e7d7c00b2f,a4fdc5380676040fe5a05ebfc54db2e7d7c00b2f,Generate thunks for PInvoke methods
kg,2015-01-26 14:19:34,https://api.github.com/repos/sq/JSIL/git/commits/a656a4b29208ea2a8728564145c03ad4964d9c9c,a656a4b29208ea2a8728564145c03ad4964d9c9c,Further emscripten/pinvoke progress
kg,2015-01-26 14:19:23,https://api.github.com/repos/sq/JSIL/git/commits/6dcd04204c5e8775daf6dea685c6085692597937,6dcd04204c5e8775daf6dea685c6085692597937,Fix TypeLoadExceptions not working without skeleton
kg,2015-01-26 14:11:58,https://api.github.com/repos/sq/JSIL/git/commits/c3b0527c093630d530dfcbbb85473ec79aca8dbe,c3b0527c093630d530dfcbbb85473ec79aca8dbe,PInvoke methods generate '$.PInvokeMethod' instead of '$.ExternalMethod'
kg,2015-01-26 13:53:09,https://api.github.com/repos/sq/JSIL/git/commits/3921d5d65b1fdbde56dcfe6ce8b99674f9b842d0,3921d5d65b1fdbde56dcfe6ce8b99674f9b842d0,C# test runner fix
kg,2015-01-26 13:46:22,https://api.github.com/repos/sq/JSIL/git/commits/b521d95a78c854a44411673d0e8b3e96b223b350,b521d95a78c854a44411673d0e8b3e96b223b350,Update ignore list
kg,2015-01-26 13:43:20,https://api.github.com/repos/sq/JSIL/git/commits/c0817bd354353e9b0b3ec3880997d53f058aac13,c0817bd354353e9b0b3ec3880997d53f058aac13,Emscripten test case scaffolding
mispy,2014-12-23 08:04:56,https://api.github.com/repos/sq/JSIL/git/commits/8e55da6f42e03458e04a4bdd3e879f961a57e98f,8e55da6f42e03458e04a4bdd3e879f961a57e98f,"Don't treat bool as integer for casting (#478)

Giving it a separate castSpecialType means casting to bool will use
the default castFunction instead, raising an InvalidCastException."
kg,2015-02-09 10:17:22,https://api.github.com/repos/sq/JSIL/git/commits/3352f30e8c1bbac1da88be784caddbd160e703a0,3352f30e8c1bbac1da88be784caddbd160e703a0,"Merge pull request #638 from mispy/issue560

IsAssignableFrom always true for Object (#560)"
kg,2015-02-07 00:20:43,https://api.github.com/repos/sq/JSIL/git/commits/20b1da2bbca94abb8030d0690f73b45c9e05093c,20b1da2bbca94abb8030d0690f73b45c9e05093c,Fix CreateNamedFunction test (generic arguments containing invalid characters in their names were not escaped in some places)
kg,2015-02-06 23:35:28,https://api.github.com/repos/sq/JSIL/git/commits/7cf75b027b519f4e495f3a93e800564c6d10fd91,7cf75b027b519f4e495f3a93e800564c6d10fd91,"In static analysis first pass, synthesize a x=x assignment for every parameter 'x' before analyzing any statements inside of a function, to ensure that optimization passes don't think a parameter with one reassignment is constant
Fixes issue #667"
kg,2015-02-06 23:29:29,https://api.github.com/repos/sq/JSIL/git/commits/5d8d886e1a1b2da159ff624959702ec077db4739,5d8d886e1a1b2da159ff624959702ec077db4739,Add test for issue #667
mispy,2014-12-22 03:40:15,https://api.github.com/repos/sq/JSIL/git/commits/54f4c92bb215c687b4f370957ca38ea1b6158819,54f4c92bb215c687b4f370957ca38ea1b6158819,IsAssignableFrom always true for Object (#560)
kg,2014-12-22 02:02:13,https://api.github.com/repos/sq/JSIL/git/commits/f70e2a90d1d1a8f0cd7d8e5db4055aceb7333af8,f70e2a90d1d1a8f0cd7d8e5db4055aceb7333af8,"Merge pull request #637 from mispy/issue555

parseInt Exception => FormatException (#555)"
mispy,2014-12-22 01:59:02,https://api.github.com/repos/sq/JSIL/git/commits/20ff8daf585ce910f8d4c7628f34faeabca97d6a,20ff8daf585ce910f8d4c7628f34faeabca97d6a,parseInt Exception => FormatException (#555)
dmirmilshteyn,2014-12-16 01:31:34,https://api.github.com/repos/sq/JSIL/git/commits/39d97cca8dc2eba9b07d271ee76f33a463d61612,39d97cca8dc2eba9b07d271ee76f33a463d61612,Updated line endings in JSIL.Meta
dmirmilshteyn,2014-12-15 23:27:00,https://api.github.com/repos/sq/JSIL/git/commits/d7832f57b52722a6662233ea2ecdbc41471a488d,d7832f57b52722a6662233ea2ecdbc41471a488d,Moved JSIL.Meta to a PCL
kg,2014-12-05 09:06:34,https://api.github.com/repos/sq/JSIL/git/commits/ea7be7f1761b4cab45f6e806fb61f54d146a2cba,ea7be7f1761b4cab45f6e806fb61f54d146a2cba,Add issue #631 test case
kg,2014-12-05 08:33:14,https://api.github.com/repos/sq/JSIL/git/commits/285f1ef5a10785e1ae7a6e6eb480076b512f269a,285f1ef5a10785e1ae7a6e6eb480076b512f269a,Use VS2013-era nuget package restore.
kg,2014-12-05 08:17:53,https://api.github.com/repos/sq/JSIL/git/commits/a5fc410ac9b74c2fc5f4d477a89d09432fcfae34,a5fc410ac9b74c2fc5f4d477a89d09432fcfae34,"Upgrade solutions to VS2013
Enable nuget
Use nuget to retrieve fsharp codedom provider, since every other method I've attempted seems to break horribly."
kg,2014-12-05 06:10:04,https://api.github.com/repos/sq/JSIL/git/commits/266f25fd8f591d15bb1101c307fa99497fb77eb8,266f25fd8f591d15bb1101c307fa99497fb77eb8,"Merge pull request #621 from iskiselev/DCE_FieldRef_DeclaringType_Fix

Fixed DCE: always add declaring type for added field."
kg,2014-12-05 06:09:27,https://api.github.com/repos/sq/JSIL/git/commits/5ad4a02d3d652d91ed7f8e9f3ce2f5b212e910d3,5ad4a02d3d652d91ed7f8e9f3ce2f5b212e910d3,"Merge pull request #615 from iskiselev/JSSomeMethods

Added some methods to JS Libraries"
kg,2014-12-05 06:07:26,https://api.github.com/repos/sq/JSIL/git/commits/89bee1a03ddcfcbf76becc3f2fbae4f756c291d0,89bee1a03ddcfcbf76becc3f2fbae4f756c291d0,"Merge pull request #613 from iskiselev/PrivateExternalImplementation_Issue578

Fixed external implementation for private types (#578)."
kg,2014-12-05 06:06:59,https://api.github.com/repos/sq/JSIL/git/commits/1ff82a06a958d2ba908a5342dda4a6893beb3d32,1ff82a06a958d2ba908a5342dda4a6893beb3d32,"Merge pull request #612 from iskiselev/EOL

EOL normalization (LF)."
iskiselev,2014-11-06 00:12:17,https://api.github.com/repos/sq/JSIL/git/commits/e8c232a489921744f1f8897b70eac0383357631d,e8c232a489921744f1f8897b70eac0383357631d,JSIL.ExpressionIterpreter added to JSIL.sln.
iskiselev,2014-11-06 00:10:18,https://api.github.com/repos/sq/JSIL/git/commits/1dbdeeddeab7049973c5d29fe7fecac81a46a0a4,1dbdeeddeab7049973c5d29fe7fecac81a46a0a4,JSIL.ExpressionInterpreter subrepo added.
iskiselev,2014-11-05 17:29:40,https://api.github.com/repos/sq/JSIL/git/commits/c3b5e0d36fb731480cd6c2e112147fda7bc4471c,c3b5e0d36fb731480cd6c2e112147fda7bc4471c,TranslateAdditional option added to .jsilconfig
iskiselev,2014-11-03 18:26:55,https://api.github.com/repos/sq/JSIL/git/commits/b38ac9028b15411f168ef1e2d328964b1632457b,b38ac9028b15411f168ef1e2d328964b1632457b,Interlocked.CompareExchange methods implemented.
iskiselev,2014-11-04 00:10:25,https://api.github.com/repos/sq/JSIL/git/commits/e0ff3569f3dce5af51e7ee17aca38373f2ab95a9,e0ff3569f3dce5af51e7ee17aca38373f2ab95a9,Type.GetMethod additional overload.
iskiselev,2014-11-03 18:28:41,https://api.github.com/repos/sq/JSIL/git/commits/b3da399608919e66861bcf83981f4b20dc8d3468,b3da399608919e66861bcf83981f4b20dc8d3468,"Stub for Expression.Equal removed.
Test #205 moved to ExpressionsTest (expressions mostly unusable without System.Core translation)."
iskiselev,2014-11-04 22:56:44,https://api.github.com/repos/sq/JSIL/git/commits/8b7485a403de4e9a9d4d7fe621a4beb7027afdc7,8b7485a403de4e9a9d4d7fe621a4beb7027afdc7,Reflection equility members added.
iskiselev,2014-10-31 19:49:32,https://api.github.com/repos/sq/JSIL/git/commits/0aee9b9570140dc39e97fde13c873bc0569fe94e,0aee9b9570140dc39e97fde13c873bc0569fe94e,"Removed attempt to find proper MethodInfo in implementation (#605, #607)."
iskiselev,2014-10-31 19:45:56,https://api.github.com/repos/sq/JSIL/git/commits/efa13414e1dbc22a83e3381c869079efaa3a2a4b,efa13414e1dbc22a83e3381c869079efaa3a2a4b,"Delegate support for ""detached"" instance methods (#624)."
iskiselev,2014-10-29 16:27:38,https://api.github.com/repos/sq/JSIL/git/commits/7d80072e8ac170684de6dc63a831502e1bc1c10b,7d80072e8ac170684de6dc63a831502e1bc1c10b,"TypedConstExpression added for proper Expression.Constant(object, Type) implemntation."
iskiselev,2014-10-20 23:38:40,https://api.github.com/repos/sq/JSIL/git/commits/414703cbc327f60ef073af074101b430b940336b,414703cbc327f60ef073af074101b430b940336b,Fixed DCE: always add declaring type for added field.
iskiselev,2014-10-17 03:32:13,https://api.github.com/repos/sq/JSIL/git/commits/6b8527ec59fc16fbe810001e69b63f153d6029c8,6b8527ec59fc16fbe810001e69b63f153d6029c8,"Fixed error on reflection Invoke of static method from generic class and test added.
Added op_Equality and op_Inequality for ConstructorInfo."
iskiselev,2014-10-17 03:18:50,https://api.github.com/repos/sq/JSIL/git/commits/805309795fbeb750ef4528b317355b70a3ba946c,805309795fbeb750ef4528b317355b70a3ba946c,"Added some methods to JS Libraries:
HashSet<>.UnionWith
string.IndexOfAny(int, char[], int)
char.ToLowerInvariant()
char.ToUpperInvariant()"
iskiselev,2014-10-15 04:14:09,https://api.github.com/repos/sq/JSIL/git/commits/fc47adbaa1c6c753ff2869c984f940db531c8d23,fc47adbaa1c6c753ff2869c984f940db531c8d23,Fixed external implementation for private types (#578).
kg,2014-10-09 14:03:40,https://api.github.com/repos/sq/JSIL/git/commits/e9184034335df96400f14e8e28b7d349899d7d0a,e9184034335df96400f14e8e28b7d349899d7d0a,Even newer spidermonkey
iskiselev,2014-10-09 23:33:23,https://api.github.com/repos/sq/JSIL/git/commits/812133d5291b5f94a275b4b8ec07c96cb1e7eecf,812133d5291b5f94a275b4b8ec07c96cb1e7eecf,EOL normalization (LF).
kg,2014-10-09 22:34:31,https://api.github.com/repos/sq/JSIL/git/commits/84314e61f011d915b623daa8dce9216a4f358eef,84314e61f011d915b623daa8dce9216a4f358eef,"Merge pull request #611 from iskiselev/ExpressionEngineUpdate

Expression engine update"
iskiselev,2014-10-09 21:15:29,https://api.github.com/repos/sq/JSIL/git/commits/090555bf5a5acb0d9c67eb3061abc35364b274af,090555bf5a5acb0d9c67eb3061abc35364b274af,Updated Expression Interpreter with #610 fix.
iskiselev,2014-10-09 20:45:28,https://api.github.com/repos/sq/JSIL/git/commits/f5b36973174ae7d67cfc4d76363d7b99d2d21c6a,f5b36973174ae7d67cfc4d76363d7b99d2d21c6a,Type.GetTypeCode() implemented.
iskiselev,2014-10-09 20:43:22,https://api.github.com/repos/sq/JSIL/git/commits/00f03c6d2e6427c070714b13386d874044c568e5,00f03c6d2e6427c070714b13386d874044c568e5,Char assigment arithmetic operations (#610).
kg,2014-10-09 09:59:26,https://api.github.com/repos/sq/JSIL/git/commits/9f17c51bce0d20b130d62423caa58e8ebf87a5d1,9f17c51bce0d20b130d62423caa58e8ebf87a5d1,Update to latest Aurora-channel spidermonkey. This makes test runs considerably faster! Yay!
kg,2014-10-09 09:47:23,https://api.github.com/repos/sq/JSIL/git/commits/cc2c6d750b5b76f51172024d74711845410a4ff5,cc2c6d750b5b76f51172024d74711845410a4ff5,"Merge pull request #608 from iskiselev/ExpressionInterpreter

Expression interpreter"
kg,2014-10-09 09:45:58,https://api.github.com/repos/sq/JSIL/git/commits/4b2ed916a062770c3ecaea2a6520a6140de4e4b1,4b2ed916a062770c3ecaea2a6520a6140de4e4b1,"Merge pull request #602 from iskiselev/DelegateReflectionUpdated

Delegate reflection updated"
kg,2014-10-09 09:45:10,https://api.github.com/repos/sq/JSIL/git/commits/aef311291a91e316e37cbde804537a846d085bf3,aef311291a91e316e37cbde804537a846d085bf3,"Merge pull request #596 from nanexcool/master

Viewport constructors"
kg,2014-10-09 09:44:45,https://api.github.com/repos/sq/JSIL/git/commits/738467a033df587f1c745875756574122bdeba1b,738467a033df587f1c745875756574122bdeba1b,"Merge pull request #584 from iskiselev/Issue494_Tests

Added some tests (as they pass now)."
kg,2014-10-09 09:44:35,https://api.github.com/repos/sq/JSIL/git/commits/13631d81e261825d436455430e94fbd3fec04f80,13631d81e261825d436455430e94fbd3fec04f80,"Merge pull request #583 from iskiselev/JSIL_NoXNA_fix

Removed Try.csproj from default compilation in JSIL_NoXNA.sln"
kg,2014-10-09 09:44:24,https://api.github.com/repos/sq/JSIL/git/commits/03945ec1c651f01a6fa16c7131e07611abcaef3d,03945ec1c651f01a6fa16c7131e07611abcaef3d,"Merge pull request #582 from iskiselev/CppTests

Added C++ code provider and Hello World test as sample."
iskiselev,2014-07-17 22:52:50,https://api.github.com/repos/sq/JSIL/git/commits/d202722f5bfc6a084e950caaaf117308c96410b0,d202722f5bfc6a084e950caaaf117308c96410b0,"Fixed incorrect GenericParameter reference in JSIL.CloneParameter (#579).

--HG--
extra : amend_source : 50c13029638e81f4f4553f640951c0e26bd58ab7"
kg,2014-10-09 09:41:30,https://api.github.com/repos/sq/JSIL/git/commits/db8285e1393dc31ea819c2accaf611e189da193a,db8285e1393dc31ea819c2accaf611e189da193a,"Merge pull request #577 from iskiselev/ILASM_ReadMe

Mono ILASM in Upstream included in README.md"
kg,2014-10-09 09:41:17,https://api.github.com/repos/sq/JSIL/git/commits/4fbc0892ad9f87a5735d236baa36c1d08569d5ea,4fbc0892ad9f87a5735d236baa36c1d08569d5ea,"Merge pull request #570 from iskiselev/CIL_Unbox

CIL Unbox instruction implemented and test added."
kg,2014-10-09 09:40:18,https://api.github.com/repos/sq/JSIL/git/commits/c390686c031aad9b052df06c1fd4e194327d795a,c390686c031aad9b052df06c1fd4e194327d795a,"Merge pull request #564 from elw00d/xmlreader

Implemented  XmlReader methods: MoveToNextAttribute, MoveToElement; props: HasAttributes, Prefix"
iskiselev,2014-10-09 04:05:38,https://api.github.com/repos/sq/JSIL/git/commits/46581f744424336d99126d7396361cb5016396fb,46581f744424336d99126d7396361cb5016396fb,Expression execution tests added.
iskiselev,2014-10-09 01:27:05,https://api.github.com/repos/sq/JSIL/git/commits/daf8496c0035c35c51a8340c5e18e663bcbec1d6,daf8496c0035c35c51a8340c5e18e663bcbec1d6,Added Expression interpreter (#601)
iskiselev,2014-10-08 07:17:11,https://api.github.com/repos/sq/JSIL/git/commits/05264a6888eaea04def72008004c872a1e86cb6a,05264a6888eaea04def72008004c872a1e86cb6a,Initial support for Delegate.Method (#604)
nanexcool,2014-09-03 18:24:54,https://api.github.com/repos/sq/JSIL/git/commits/57982b78d44b859a8bca4f71fe602c90e07746bc,57982b78d44b859a8bca4f71fe602c90e07746bc,"Viewport constructors

Implemented both Viewport constructors

http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.viewport.viewport.aspx"
kg,2014-08-02 10:57:30,https://api.github.com/repos/sq/JSIL/git/commits/db611d783af33fdcf7077d5723e3174598bf977b,db611d783af33fdcf7077d5723e3174598bf977b,Clean up junk in JSStubOnly commit
kg,2014-08-02 09:56:35,https://api.github.com/repos/sq/JSIL/git/commits/f8637e10763a29e6c241acc687baac93dad9e620,f8637e10763a29e6c241acc687baac93dad9e620,Remove issue #578 tests from the tree
kg,2014-08-02 09:50:47,https://api.github.com/repos/sq/JSIL/git/commits/2bbd85a61e1e4e42df68a45f19c54f1b728fb31a,2bbd85a61e1e4e42df68a45f19c54f1b728fb31a,Cleanup for #588
kg,2014-08-02 09:47:41,https://api.github.com/repos/sq/JSIL/git/commits/0ebb7b9a864cf26ec5b92b39801fc5590910e561,0ebb7b9a864cf26ec5b92b39801fc5590910e561,"Merge pull request #591 from desunit/master

Fix for Google Closure minification of contentManifest and additional implementation of PointF, SizeF, RectangleF"
desunit,2014-08-02 09:01:19,https://api.github.com/repos/sq/JSIL/git/commits/e9121946864c5c218fc075b5b60a762f06dfb6cd,e9121946864c5c218fc075b5b60a762f06dfb6cd,related to #591: changed window to GlobalNamespace
kg,2014-08-02 06:47:00,https://api.github.com/repos/sq/JSIL/git/commits/a94ab0030839c55a4aaf5fc1ddd851ab57f94690,a94ab0030839c55a4aaf5fc1ddd851ab57f94690,"More test cases.
Update ignore list"
kg,2014-08-02 06:35:01,https://api.github.com/repos/sq/JSIL/git/commits/719ec97d771659da60fa67fd2b705ea98c9b99da,719ec97d771659da60fa67fd2b705ea98c9b99da,Checkpoint introduction of JSNeverStub
desunit,2014-08-01 09:01:59,https://api.github.com/repos/sq/JSIL/git/commits/c7f0264247b80e337673b3971dd34ad3a9b3c71b,c7f0264247b80e337673b3971dd34ad3a9b3c71b,"Google Closure tries to minify the string with: """"object""!==typeof contentManifest&&(contentManifest={});"" which causes error that contentManifest is not defined. The better way to define global variable is to use window['contentManifest']."
desunit,2014-08-01 08:53:23,https://api.github.com/repos/sq/JSIL/git/commits/44e475fcce3b557a47f5a7025b21a913ebd85dbf,44e475fcce3b557a47f5a7025b21a913ebd85dbf,"Added partial implementation of PointF, SizeF, RectangleF"
kg,2014-07-26 21:45:03,https://api.github.com/repos/sq/JSIL/git/commits/a16db441cd3b8e68d9df8f61f0a76690856c220e,a16db441cd3b8e68d9df8f61f0a76690856c220e,Add SimpleTests category for running with stubbed BCL instead of translated BCL.
kg,2014-07-26 21:39:54,https://api.github.com/repos/sq/JSIL/git/commits/3e9ee55af83758fd213a80eb7fc4b72b6e27650e,3e9ee55af83758fd213a80eb7fc4b72b6e27650e,"Tweaks and investigation for issue #578
Added test cases for issues #578, #585"
kg,2014-07-26 20:27:18,https://api.github.com/repos/sq/JSIL/git/commits/5ecdabcac6f4543f0b93f52389af8e83764a7e9d,5ecdabcac6f4543f0b93f52389af8e83764a7e9d,"Fix member hiding to always purge placeholders
Expand member hiding logic to purge externals if a non-external is available
Throw if a method group contains multiple zero-argument methods"
iskiselev,2014-07-19 01:09:43,https://api.github.com/repos/sq/JSIL/git/commits/3997a54145926934ccc5a723fae530ccc01bd24a,3997a54145926934ccc5a723fae530ccc01bd24a,"Added from #494 (as they pass now).
(grafted from 4855ca9d98406524bd73cc2399a073445cab9e55)

--HG--
extra : source : 4855ca9d98406524bd73cc2399a073445cab9e55"
iskiselev,2014-07-18 01:19:31,https://api.github.com/repos/sq/JSIL/git/commits/f6543fe02a4e1beb24d668cc8f7c82644462004e,f6543fe02a4e1beb24d668cc8f7c82644462004e,Removed Try.csproj from default compilation in JSIL_NoXNA.sln
iskiselev,2014-07-18 00:34:29,https://api.github.com/repos/sq/JSIL/git/commits/c3401570eef23917fa7c383765b78c4ce6b165a0,c3401570eef23917fa7c383765b78c4ce6b165a0,"Added C++ code provider and Hello World test as sample.

--HG--
rename : Tests/CILCodeProvider.cs => Tests/CodeProviders.cs
extra : source : fd5623304a38940aa77f2e3fd2dd28ecc0129e3d
extra : amend_source : 5dfe9864db434a4b4a4728752b50efebcd5d0ad5"
kg,2014-07-16 10:32:31,https://api.github.com/repos/sq/JSIL/git/commits/ba6f9e00499c5af30ef7b83d77bbdc900fb8eb5f,ba6f9e00499c5af30ef7b83d77bbdc900fb8eb5f,Oops.
kg,2014-07-16 07:38:00,https://api.github.com/repos/sq/JSIL/git/commits/904a5a46b98fdd44c10db9b846500d8ea47992da,904a5a46b98fdd44c10db9b846500d8ea47992da,Fix test_runner reloads not changing file name
kg,2014-07-16 06:56:25,https://api.github.com/repos/sq/JSIL/git/commits/ffc9ea26a39990d3622a448f378b44ab12201279,ffc9ea26a39990d3622a448f378b44ab12201279,Fix missing break statement
kg,2014-07-16 06:46:36,https://api.github.com/repos/sq/JSIL/git/commits/7c4b35b3540017ebceeb5cb52d65c9b44814fdda,7c4b35b3540017ebceeb5cb52d65c9b44814fdda,"Remove TypeBuilder, I don't think it's what I want..."
iskiselev,2014-07-16 04:25:35,https://api.github.com/repos/sq/JSIL/git/commits/7fcd074a5d77e3c004a239fde175ebee438fa232,7fcd074a5d77e3c004a239fde175ebee438fa232,Struct ref invocation. IL tests added.
kg,2014-07-16 03:39:30,https://api.github.com/repos/sq/JSIL/git/commits/db878c56fa12b7d8427fa84e4ce79b477a4a728e,db878c56fa12b7d8427fa84e4ce79b477a4a728e,"Add more comments to IC implementation.
Generate switch statements instead of if statements in ICs."
kg,2014-07-16 03:19:49,https://api.github.com/repos/sq/JSIL/git/commits/e44be4880571069632f61ac3c305d59e4651ffb0,e44be4880571069632f61ac3c305d59e4651ffb0,Add comments to inline cache implementation.
kg,2014-07-16 03:09:14,https://api.github.com/repos/sq/JSIL/git/commits/ca95b5bf7ad16ba160191dd039eca73d23c85bc9,ca95b5bf7ad16ba160191dd039eca73d23c85bc9,Fix interface fallback methods.
kg,2014-07-16 02:52:35,https://api.github.com/repos/sq/JSIL/git/commits/f2a5f914dc3bcdc48ab857aed08d75af6ba57804,f2a5f914dc3bcdc48ab857aed08d75af6ba57804,Fix variant interface invocation corner case
kg,2014-07-16 02:50:17,https://api.github.com/repos/sq/JSIL/git/commits/2a7546aff37e157351e8f2493667d8f7b26b8406,2a7546aff37e157351e8f2493667d8f7b26b8406,Handle binding failures for generic interface methods better.
kg,2014-07-16 02:48:13,https://api.github.com/repos/sq/JSIL/git/commits/9b6e6ae2bebc4ec58e880e2ab998b827bd427407,9b6e6ae2bebc4ec58e880e2ab998b827bd427407,Handle interface methods without signatures.
kg,2014-07-16 02:45:34,https://api.github.com/repos/sq/JSIL/git/commits/caa98da34edfdc2b5ed3ba23feede7b3debfbe9e,caa98da34edfdc2b5ed3ba23feede7b3debfbe9e,Don't cache methods of IPackedArray
kg,2014-07-16 02:43:46,https://api.github.com/repos/sq/JSIL/git/commits/fd4d5b034797a15a141f5ac569a1be36f90c550d,fd4d5b034797a15a141f5ac569a1be36f90c550d,Test case updates
kg,2014-07-16 02:43:31,https://api.github.com/repos/sq/JSIL/git/commits/d63f1aa8f053076555101e28e7ed25905f3d0771,d63f1aa8f053076555101e28e7ed25905f3d0771,Signature inline cache tweaks
kg,2014-07-16 00:50:52,https://api.github.com/repos/sq/JSIL/git/commits/9e34486aabc8b6ee2936848da68084d5745150e5,9e34486aabc8b6ee2936848da68084d5745150e5,"General inline cache optimizations.
Enable inline caching for variant interface method calls.
Call methods for non-variant interface methods are now simple known-name call shims."
iskiselev,2014-07-15 22:31:53,https://api.github.com/repos/sq/JSIL/git/commits/e0684e819a18c28691cccd48186df8f3ae339724,e0684e819a18c28691cccd48186df8f3ae339724,Mono ILASM in Upstream included in README.md
kg,2014-07-15 21:47:14,https://api.github.com/repos/sq/JSIL/git/commits/915e1627b56129b08bfcb80f120422029b175aa9,915e1627b56129b08bfcb80f120422029b175aa9,Fix project typo
kg,2014-07-15 21:20:01,https://api.github.com/repos/sq/JSIL/git/commits/998765f5899d6e144735e38872d2e129046dde47,998765f5899d6e144735e38872d2e129046dde47,"Merge pull request #572 from iskiselev/CIL_TestCases

IL Test cases support added."
kg,2014-07-15 21:19:07,https://api.github.com/repos/sq/JSIL/git/commits/7d44c383ed0a139e29b333a032d6031bcb959bbf,7d44c383ed0a139e29b333a032d6031bcb959bbf,"Merge pull request #573 from iskiselev/AsyncExceptions

Fixed exception throwing from async methods. Test added."
kg,2014-07-15 21:18:42,https://api.github.com/repos/sq/JSIL/git/commits/92c80c62619304869c30a7096baebea5ec2ee7d8,92c80c62619304869c30a7096baebea5ec2ee7d8,"Merge pull request #576 from iskiselev/NullRef_F#

Fixed NullRefException"
kg,2014-07-15 21:17:30,https://api.github.com/repos/sq/JSIL/git/commits/d0121af94d8cfba857b5be71a55c8ea46adfff59,d0121af94d8cfba857b5be71a55c8ea46adfff59,"Merge pull request #566 from iskiselev/Issue504

Generic signature translations"
kg,2014-07-15 21:14:06,https://api.github.com/repos/sq/JSIL/git/commits/dfe7271931758a5ccec4f4b516488cf641e18280,dfe7271931758a5ccec4f4b516488cf641e18280,Fix issue #567 and add test.
iskiselev,2014-07-15 21:07:56,https://api.github.com/repos/sq/JSIL/git/commits/98c569dc300d1e70331d23e6eb101ac71dd94a7c,98c569dc300d1e70331d23e6eb101ac71dd94a7c,"Fixed NullRefException
(grafted from e32569cbf96d1edaf4e68ada468ff7648b0c0bc3)

--HG--
extra : source : e32569cbf96d1edaf4e68ada468ff7648b0c0bc3"
kg,2014-07-15 20:33:46,https://api.github.com/repos/sq/JSIL/git/commits/123ef882380a919c5c64b0b37475fcf8e0c13a93,123ef882380a919c5c64b0b37475fcf8e0c13a93,"Fix Mono delegate field name bug.
Disable original field name extraction for enumerator class locals."
iskiselev,2014-07-15 03:42:36,https://api.github.com/repos/sq/JSIL/git/commits/8e6c85ac9f96bf7e9e587269153e4103bb05c2bc,8e6c85ac9f96bf7e9e587269153e4103bb05c2bc,"Fixed exception throwing from async methods. Test added.
(grafted from dcb483023b0ac34c59d8e672fbf7fccde38e334e)

--HG--
extra : source : dcb483023b0ac34c59d8e672fbf7fccde38e334e"
kg,2014-07-14 12:08:32,https://api.github.com/repos/sq/JSIL/git/commits/420f09e9a71e34f99486f33713cf78aba68c0546,420f09e9a71e34f99486f33713cf78aba68c0546,"Update test_runner code so you can host it on IIS
Update to latest spidermonkey nightly"
iskiselev,2014-07-14 04:24:28,https://api.github.com/repos/sq/JSIL/git/commits/48f143641cee3233d91dc0265fc477b0b117134b,48f143641cee3233d91dc0265fc477b0b117134b,Fixes for CILCodeProvider.
iskiselev,2014-07-14 03:24:59,https://api.github.com/repos/sq/JSIL/git/commits/8ba208ab40e578193254a8b9d3329317e892ac70,8ba208ab40e578193254a8b9d3329317e892ac70,IL Test cases support added. HelloWorld (CIL) test case added as sample.
kg,2014-07-13 20:54:42,https://api.github.com/repos/sq/JSIL/git/commits/02d7239b4762f1142988bcc5d47ff94c56fa7bcc,02d7239b4762f1142988bcc5d47ff94c56fa7bcc,A quick hack to make pointer fields somewhat functional
kg,2014-07-13 20:47:42,https://api.github.com/repos/sq/JSIL/git/commits/3dc4edfa476bf16322793f40996f05334a01f352,3dc4edfa476bf16322793f40996f05334a01f352,Two OpenTK exception fixes for monogame platformer demo
kg,2014-07-13 20:47:27,https://api.github.com/repos/sq/JSIL/git/commits/7e56f019f4c93475ca5b12c0d6d5bd15a4155d5a,7e56f019f4c93475ca5b12c0d6d5bd15a4155d5a,Don't build Try by default
kg,2014-07-13 16:44:56,https://api.github.com/repos/sq/JSIL/git/commits/bbef358bc37cbeb6210904b136a00a4b27b6b151,bbef358bc37cbeb6210904b136a00a4b27b6b151,"God, ILSpy is the worst"
kg,2014-07-13 16:43:48,https://api.github.com/repos/sq/JSIL/git/commits/04c58c6ea6f16bc317c5592aa5f6a85875bb3e1f,04c58c6ea6f16bc317c5592aa5f6a85875bb3e1f,Fix property temporaries test
kg,2014-07-13 16:23:41,https://api.github.com/repos/sq/JSIL/git/commits/43312f2360b742cce18af26d46198543c9707d8f,43312f2360b742cce18af26d46198543c9707d8f,"Add tests for ILSpy producing mangled type information for integer arithmetic.
Implement two workarounds for wrong ilspy type information."
kg,2014-07-13 15:41:09,https://api.github.com/repos/sq/JSIL/git/commits/934601c7f4195fa5168ae2a7c9325519bce89726,934601c7f4195fa5168ae2a7c9325519bce89726,"Don't generate type.$Cast() for numeric type casts
Don't spit out | 0 at the end of imul calls.
Add a test for some of the truncation formatting optimizations"
kg,2014-07-13 15:19:51,https://api.github.com/repos/sq/JSIL/git/commits/10554c3e4a712d7e90977f867b2d1bd383f95c6b,10554c3e4a712d7e90977f867b2d1bd383f95c6b,Fix LookupMethod bug
kg,2014-07-13 15:06:42,https://api.github.com/repos/sq/JSIL/git/commits/623309c56d266cb0ad86299f9484d495363172ef,623309c56d266cb0ad86299f9484d495363172ef,"Changed element proxies so that they reuse a single instance of struct properties instead of constructing a new one on every access, so that struct copy elision can work on code that uses them."
kg,2014-07-13 14:45:13,https://api.github.com/repos/sq/JSIL/git/commits/ee8a6b13284bb5ada39ee12643b758ef5351a484,ee8a6b13284bb5ada39ee12643b758ef5351a484,Fix bug introduced into unsafe field marshallers
kg,2014-07-13 14:24:08,https://api.github.com/repos/sq/JSIL/git/commits/8e03068858735c90365c888e1c970de5fb091e8f,8e03068858735c90365c888e1c970de5fb091e8f,Don't cache pointer or reference types.
kg,2014-07-13 14:13:58,https://api.github.com/repos/sq/JSIL/git/commits/6697e92b71cbf0864f5b877886417e6cdee3768a,6697e92b71cbf0864f5b877886417e6cdee3768a,SpriteBatch draw refactorings to make it easier for JITs to optimize
kg,2014-07-13 13:48:14,https://api.github.com/repos/sq/JSIL/git/commits/f0ba7d0d2f7963db71c762fc06c4e8d54bc19701,f0ba7d0d2f7963db71c762fc06c4e8d54bc19701,Fix xna clear bailout in spidermonkey
kg,2014-07-13 13:44:18,https://api.github.com/repos/sq/JSIL/git/commits/67156452efa5a0bfe30e6d7080bf892dd94a6f4d,67156452efa5a0bfe30e6d7080bf892dd94a6f4d,Unsafe jit tweaks
kg,2014-07-13 13:28:58,https://api.github.com/repos/sq/JSIL/git/commits/ff51749ede80c4ccced925c4c7c6ca46f3553c63,ff51749ede80c4ccced925c4c7c6ca46f3553c63,Fix in-place pointer adjustments creating garbage
kg,2014-07-13 13:21:10,https://api.github.com/repos/sq/JSIL/git/commits/32dce4e2f7df35edd84471d5ed20d361bdf14f9e,32dce4e2f7df35edd84471d5ed20d361bdf14f9e,Fix a couple pointer transform bugs
kg,2014-07-13 13:16:06,https://api.github.com/repos/sq/JSIL/git/commits/0462218d6ad293b7bb28a4ad616b9fddfa6353e9,0462218d6ad293b7bb28a4ad616b9fddfa6353e9,Test fixes
kg,2014-07-13 12:39:32,https://api.github.com/repos/sq/JSIL/git/commits/3be3be220eb1f95e67d063cf73384d4fe5a1f3d8,3be3be220eb1f95e67d063cf73384d4fe5a1f3d8,"Expanded pointer support
Compile fixes for mscorlib"
kg,2014-07-13 11:27:50,https://api.github.com/repos/sq/JSIL/git/commits/d354fba7b0c89bebbe72f68b5f0b8dc41cce1301,d354fba7b0c89bebbe72f68b5f0b8dc41cce1301,Spurious parentheses reduction
kg,2014-07-13 10:52:08,https://api.github.com/repos/sq/JSIL/git/commits/9f10ce93144aec2c44c75a33644ce44e493a473c,9f10ce93144aec2c44c75a33644ce44e493a473c,"Better ternary formatting
Hinting fixes"
kg,2014-07-13 10:47:12,https://api.github.com/repos/sq/JSIL/git/commits/839d7b8c3e3f48b42c3681c0eedd9e55f01bcc86,839d7b8c3e3f48b42c3681c0eedd9e55f01bcc86,"Don't do expensive hints on loads
Fix explicit truncation dedenting too much"
kg,2014-07-13 10:25:21,https://api.github.com/repos/sq/JSIL/git/commits/a3b8db3ee4fbfed4b3ab2a10a33a6bd4d98d1b98,a3b8db3ee4fbfed4b3ab2a10a33a6bd4d98d1b98,More type hinting improvements
kg,2014-07-13 10:06:10,https://api.github.com/repos/sq/JSIL/git/commits/4c1a43941891c963c8e6e78ebf60df0d168ab15f,4c1a43941891c963c8e6e78ebf60df0d168ab15f,"Refactored and improved type hinting
Make fround less noisy.
Do float and int type hinting more consistently in more places."
kg,2014-07-13 09:29:03,https://api.github.com/repos/sq/JSIL/git/commits/6356e9334f6b626f7b395247ef90e6224c6bb237,6356e9334f6b626f7b395247ef90e6224c6bb237,More pervasive type hinting for literals and numbers
kg,2014-07-13 09:21:30,https://api.github.com/repos/sq/JSIL/git/commits/ee0be5114d5af54caf7e50b3090b652891a4d750,ee0be5114d5af54caf7e50b3090b652891a4d750,Fix test runner autoreload
kg,2014-07-13 09:08:08,https://api.github.com/repos/sq/JSIL/git/commits/1f61660b91ca0e46282e7dc8bdf141f324d97ccd,1f61660b91ca0e46282e7dc8bdf141f324d97ccd,Optimizations to signature.GetKey
kg,2014-07-13 08:47:36,https://api.github.com/repos/sq/JSIL/git/commits/b69dfea501ae6aa9e09d56fdf6c521512eca39a1,b69dfea501ae6aa9e09d56fdf6c521512eca39a1,"Remove need to manually reload test_runner.html
Cleanup Try test runner
Fix Try oauth"
iskiselev,2014-07-12 22:43:16,https://api.github.com/repos/sq/JSIL/git/commits/6e00c68aea02b2e48fb124f46d69011178e1a8c5,6e00c68aea02b2e48fb124f46d69011178e1a8c5,CIL Unbox instruction implemented(#569).
kg,2014-07-12 03:35:59,https://api.github.com/repos/sq/JSIL/git/commits/357cc4d33812b1feea2f34497f43cdcdb962ff96,357cc4d33812b1feea2f34497f43cdcdb962ff96,Write test_runner.html URLs in performance test output
iskiselev,2014-07-12 01:41:03,https://api.github.com/repos/sq/JSIL/git/commits/e81695a32dfe5bb67c46baf6469f95e24f285e8f,e81695a32dfe5bb67c46baf6469f95e24f285e8f,Fixed third issue from #504.
iskiselev,2014-07-11 21:27:16,https://api.github.com/repos/sq/JSIL/git/commits/949b492fa4691d56c85f88637e7d37f78d07c26a,949b492fa4691d56c85f88637e7d37f78d07c26a,"Issue #504 first test added.

--HG--
extra : amend_source : 8bf158be6ec8cba1f8ec647cfcd996d9a419bdcc"
kg,2014-07-11 11:01:57,https://api.github.com/repos/sq/JSIL/git/commits/295f650d599841821cdefeea12aac444f80ea491,295f650d599841821cdefeea12aac444f80ea491,"Merge pull request #557 from iskiselev/BclProxies450

BCL proxies updated"
iskiselev,2014-07-10 05:50:42,https://api.github.com/repos/sq/JSIL/git/commits/717b34bebf22af10f16e96c03fd83500c8b9038c,717b34bebf22af10f16e96c03fd83500c8b9038c,Delegate/lambda tests added.
kg,2014-07-11 10:57:17,https://api.github.com/repos/sq/JSIL/git/commits/8e45cd297f372c529edee75f569f1a46264da072,8e45cd297f372c529edee75f569f1a46264da072,"Merge pull request #562 from iskiselev/Issue504_Partial

Issue 504 partial fix."
iskiselev,2014-07-11 09:37:54,https://api.github.com/repos/sq/JSIL/git/commits/fd4c91a9de7e0e1603218ee14d1fc75dd3c96992,fd4c91a9de7e0e1603218ee14d1fc75dd3c96992,Issue 504 partial fix.
iskiselev,2014-07-10 15:02:41,https://api.github.com/repos/sq/JSIL/git/commits/1917aeab6762633f1df1fb07fb9e0eafcc511e91,1917aeab6762633f1df1fb07fb9e0eafcc511e91,BCL proxies updated for #450.
kg,2014-07-10 12:01:38,https://api.github.com/repos/sq/JSIL/git/commits/9002db8cec26f379f9374e70ae504844c6ef5a13,9002db8cec26f379f9374e70ae504844c6ef5a13,Fix bugs introduced by #450
elw00d,2014-04-26 17:16:56,https://api.github.com/repos/sq/JSIL/git/commits/2b9532e7a259dddd035b9f4370b6418779902ca7,2b9532e7a259dddd035b9f4370b6418779902ca7,"Added EventArgs default ctor, PropertyChangedEventArgs implementation, CultureInfo.InvariantCulture and some methods from IList.*."
kg,2014-07-10 06:28:39,https://api.github.com/repos/sq/JSIL/git/commits/fc8b315dc098e73af68b65851fc64adcc61373c6,fc8b315dc098e73af68b65851fc64adcc61373c6,Handle dynamic invocations of methods like Verbatim.Expression. Fixes issue #548.
kg,2014-07-10 06:03:52,https://api.github.com/repos/sq/JSIL/git/commits/b2ade2faf89d987d8f653dd0f6d85e2bcb8f6333,b2ade2faf89d987d8f653dd0f6d85e2bcb8f6333,"Checkpoint:
Refactoring method replacement
Add test case for issue 548"
kg,2014-07-10 05:00:31,https://api.github.com/repos/sq/JSIL/git/commits/91b369b347e735c0397be592a7ac597b19e9c451,91b369b347e735c0397be592a7ac597b19e9c451,"Merge pull request #551 from iskiselev/KillLambdaSpecialProcessing

Removed special processing for anonymous lambda."
kg,2014-07-10 04:45:11,https://api.github.com/repos/sq/JSIL/git/commits/5dac81aceeb6d1aff47872dfc958d5c82c58da49,5dac81aceeb6d1aff47872dfc958d5c82c58da49,"Merge pull request #542 from iskiselev/DelegateSubtraction

Delegate subtraction partial fix and test added. (#541)"
kg,2014-07-10 04:42:35,https://api.github.com/repos/sq/JSIL/git/commits/e1d37eaa21145bf1219b4e59a26ef26ac738eeb1,e1d37eaa21145bf1219b4e59a26ef26ac738eeb1,"Merge pull request #550 from iskiselev/IgnorePointerFields

Ignore pointer fields"
kg,2014-07-10 04:41:36,https://api.github.com/repos/sq/JSIL/git/commits/2ca70a9f5b7e6a28124f124092c3336efbdeeedc,2ca70a9f5b7e6a28124f124092c3336efbdeeedc,"Merge pull request #545 from iskiselev/TaskAwaiterFix

Fixed incorrect signature in TaskAwaiter<T>.GetResult and test modified."
kg,2014-07-10 04:38:49,https://api.github.com/repos/sq/JSIL/git/commits/2913f56e9af53a830d20428241e1721c5994cc7d,2913f56e9af53a830d20428241e1721c5994cc7d,"Merge pull request #549 from iskiselev/SignatureCacheDoubleGeneric

Signature for double generic fixed and test added. (#547)"
iskiselev,2014-07-09 23:45:32,https://api.github.com/repos/sq/JSIL/git/commits/04c83084d1a708dad2b3c32fb8396c65df00ba2e,04c83084d1a708dad2b3c32fb8396c65df00ba2e,Signature for double generic fixed and test added. (#547)
iskiselev,2014-07-09 22:15:30,https://api.github.com/repos/sq/JSIL/git/commits/a8c5a44578fe99a29d735161234e41adc23e2ea3,a8c5a44578fe99a29d735161234e41adc23e2ea3,"Removed special processing for anonymous lambda.

--HG--
extra : source : 1cd6499907ef8321f7f217272fd3325e6f333eb2"
iskiselev,2014-07-09 21:39:49,https://api.github.com/repos/sq/JSIL/git/commits/5009fa9452cd29c1ca2d967ad5ea20f4ecf16ab7,5009fa9452cd29c1ca2d967ad5ea20f4ecf16ab7,"Ignore pointer fields (workaround for #546).

--HG--
extra : amend_source : 4b817fc597707ebcf7a998b479f69543a88651f4"
iskiselev,2014-07-09 05:51:50,https://api.github.com/repos/sq/JSIL/git/commits/eb3e30b58db98e828ede873b1394bbbcd15e695a,eb3e30b58db98e828ede873b1394bbbcd15e695a,"Fixed incorrect signature in TaskAwaiter<T>.GetResult and test modified.

--HG--
extra : source : c72badf7cb727b15b0fb45db82061862e3008687
extra : amend_source : 76e9581c8bd856c579012a69ee6efc6e93b84e7c"
iskiselev,2014-07-08 22:05:10,https://api.github.com/repos/sq/JSIL/git/commits/f8452fce743fb4642eaa00bb3b4e44402c96f48c,f8452fce743fb4642eaa00bb3b4e44402c96f48c,"Delegate subtraction partial fix and test added. (#541)

--HG--
extra : source : 2d81d2f08ec720fdb1efc9a135956511094785e8"
kg,2014-07-08 13:52:23,https://api.github.com/repos/sq/JSIL/git/commits/932b2b9c3045d27e1b795896ee62af602c08c952,932b2b9c3045d27e1b795896ee62af602c08c952,Fixes to nullable generic struct copies
kg,2014-07-08 13:43:50,https://api.github.com/repos/sq/JSIL/git/commits/775bf42c2e9b0d0a7eef7b93c090c67980f81dc9,775bf42c2e9b0d0a7eef7b93c090c67980f81dc9,Fix erroneous cloning for nullable enums/primitives
kg,2014-07-08 13:30:53,https://api.github.com/repos/sq/JSIL/git/commits/bb25b1038e2d33fa2e341372d30f54c56e74db00,bb25b1038e2d33fa2e341372d30f54c56e74db00,Fix host canvas API bugs related to desired width/height
kg,2014-07-08 13:25:11,https://api.github.com/repos/sq/JSIL/git/commits/15ba5af7ddafbb92867546f0f7f17c0f36d00dc6,15ba5af7ddafbb92867546f0f7f17c0f36d00dc6,"Uncomment extra tests in Dictionary.cs
Slight compliance improvements for dictionaries"
kg,2014-07-08 13:11:19,https://api.github.com/repos/sq/JSIL/git/commits/1c4e68c77bc9d5ded56d1f9d76f396b36a4485aa,1c4e68c77bc9d5ded56d1f9d76f396b36a4485aa,"Don't cast null nodes.
GetElementType(void) == void"
kg,2014-07-08 13:03:41,https://api.github.com/repos/sq/JSIL/git/commits/0607c0c120382954afb88748ee0902e4fd4cb313,0607c0c120382954afb88748ee0902e4fd4cb313,More Cecil workarounds. (Why did this all break randomly???)
kg,2014-07-08 12:46:45,https://api.github.com/repos/sq/JSIL/git/commits/2b4e0cc89b1e97677a20d6608e69104d33740e53,2b4e0cc89b1e97677a20d6608e69104d33740e53,Today's latest candidate for Worst API: Literally 50% of Mono.Cecil
kg,2014-07-08 12:33:13,https://api.github.com/repos/sq/JSIL/git/commits/e4650727203c83cdc4d950776f284d9926ac11a3,e4650727203c83cdc4d950776f284d9926ac11a3,Workaround busted type inference in ILSpy. UGH.
kg,2014-07-08 12:27:42,https://api.github.com/repos/sq/JSIL/git/commits/ae75f2eb623dc389b3991707be7bd47b57343115,ae75f2eb623dc389b3991707be7bd47b57343115,"Treat variables inside invocation expressions as if they have already had dependencies resolved in struct assignment post-optimization
Move struct ctor invocation fixup before first use of static analysis so that variables are not erroneously flagged as modified"
kg,2014-07-08 11:44:15,https://api.github.com/repos/sq/JSIL/git/commits/c618d5e43eaaf90fef39202cfd4143f11c4e6aff,c618d5e43eaaf90fef39202cfd4143f11c4e6aff,"Fix various issues with nullable handling in the static analyzer
Fix static analysis sometimes failing to flag the this-reference as modified
Refactor some reference stripping logic
Fix ActualType of nullable.get_Value"
kg,2014-07-08 11:16:26,https://api.github.com/repos/sq/JSIL/git/commits/102951920766b7b4be28f833b9cd735c4c9e39c6,102951920766b7b4be28f833b9cd735c4c9e39c6,"Checkpoint
Improved decision-making and logging for post-optimized copies."
kg,2014-07-08 10:48:02,https://api.github.com/repos/sq/JSIL/git/commits/b2eae6df4d8e1a8415b9b4036851bcab4101654d,b2eae6df4d8e1a8415b9b4036851bcab4101654d,Introduce post-optimization stage for struct assignments that strips out copies when possible
kg,2014-07-08 10:25:20,https://api.github.com/repos/sq/JSIL/git/commits/020b5f1cef68baea6fa2ac44f301ceb90c6a2e3c,020b5f1cef68baea6fa2ac44f301ceb90c6a2e3c,Checkpoint: Remove complex function argument analysis from IsCopyNeeded.
kg,2014-07-08 10:08:56,https://api.github.com/repos/sq/JSIL/git/commits/7e13c1536a0eba1f16ab6201437c20f07744e121,7e13c1536a0eba1f16ab6201437c20f07744e121,Checkpoint
kg,2014-07-08 09:22:31,https://api.github.com/repos/sq/JSIL/git/commits/b8599c4a949a6abd5cb16f8dde9e79e53b9c3dc1,b8599c4a949a6abd5cb16f8dde9e79e53b9c3dc1,Checkpoint: Correctly propagate argument modification data through second pass static analysis
kg,2014-07-08 08:04:59,https://api.github.com/repos/sq/JSIL/git/commits/e3861b96c097ee6451681f55323abfbf49724224,e3861b96c097ee6451681f55323abfbf49724224,Propagate variable modification state from invocations (method x modifies 'this') into callers' second pass modification data
kg,2014-07-08 07:48:23,https://api.github.com/repos/sq/JSIL/git/commits/dab8445d6715e3ca0701b645c502955eb7e1b819,dab8445d6715e3ca0701b645c502955eb7e1b819,"Enable the commented-out cloning check for RecursivePureStructOperator
Don't flag this-references of all invocations as modified. It's unnecessary."
kg,2014-07-08 07:24:10,https://api.github.com/repos/sq/JSIL/git/commits/41f926c54f6041a1810343c395880f1d6235aed2,41f926c54f6041a1810343c395880f1d6235aed2,"Fix cloned this-reference for struct method calls through a reference, i.e.
  ref.get().x() instead of ref.get().MemberwiseClone().x()
Make tracing show messages when a this-reference is cloned"
kg,2014-07-08 07:14:18,https://api.github.com/repos/sq/JSIL/git/commits/2535712fe00762121c9b56b80ff480e04ab66276,2535712fe00762121c9b56b80ff480e04ab66276,"Checkpoint
More fixes to this-reference cloning rules"
kg,2014-07-08 06:38:53,https://api.github.com/repos/sq/JSIL/git/commits/b2e0c39fc9692b7e12cd6c9b0ce77221429f32d7,b2e0c39fc9692b7e12cd6c9b0ce77221429f32d7,Checkpoint
kg,2014-07-08 06:11:12,https://api.github.com/repos/sq/JSIL/git/commits/fd8b793e276b27f8f7b355304f8727a4f5b95866,fd8b793e276b27f8f7b355304f8727a4f5b95866,"Checkpoint
GetEnclosingNodes moved to JSAstVisitor
Various static analysis fixes"
kg,2014-07-08 05:25:51,https://api.github.com/repos/sq/JSIL/git/commits/7c4cddf3d055d2de3ca29434a66954a63059e32e,7c4cddf3d055d2de3ca29434a66954a63059e32e,"Fix issue 494 and add tests.
Fix static analysis ignoring the this-reference of invocations when generating modified/escaping variable lists.
Fix by-reference parameters not getting recorded as the this-reference variable in static analysis data.
Don't generate function cache entries for abstract methods."
kg,2014-07-07 08:14:04,https://api.github.com/repos/sq/JSIL/git/commits/80bab4665cc96eb47955b191fb52cf9e7aacaeb3,80bab4665cc96eb47955b191fb52cf9e7aacaeb3,"Merge pull request #539 from iskiselev/ClassAlreadyDefinedWarning

Fix #337. Class can be defined in three or more assemblies."
iskiselev,2014-07-06 23:27:28,https://api.github.com/repos/sq/JSIL/git/commits/b43529a7d6c17bae8afc3d72081de0e7defac8ba,b43529a7d6c17bae8afc3d72081de0e7defac8ba,Fix #337. Class can be defined in thre or more assemblies.
kg,2014-07-06 03:58:49,https://api.github.com/repos/sq/JSIL/git/commits/dbe4bf735b508073249f76ff7d7966c9546f5bcb,dbe4bf735b508073249f76ff7d7966c9546f5bcb,Fix issue #538 and add test
kg,2014-07-06 03:03:24,https://api.github.com/repos/sq/JSIL/git/commits/5adbb76b1c2a0e5b06fffbf9028a0141efc9473d,5adbb76b1c2a0e5b06fffbf9028a0141efc9473d,Fix NoXNA sln file and add 4.5 configuration
kg,2014-07-05 19:02:07,https://api.github.com/repos/sq/JSIL/git/commits/b4feea4f3f187992f99ed0faea7ca5523455a7e3,b4feea4f3f187992f99ed0faea7ca5523455a7e3,Mitigate a couple small type issues in browser code
kg,2014-07-05 18:36:00,https://api.github.com/repos/sq/JSIL/git/commits/f5d30bb00930ddc36291c3b03ba7e57c5ea6a66a,f5d30bb00930ddc36291c3b03ba7e57c5ea6a66a,"More nullable fixes
Enum->Integer casts work at runtime now"
kg,2014-07-05 17:54:27,https://api.github.com/repos/sq/JSIL/git/commits/43a8bfbfb149835ba34adda85fdc4ad318040928,43a8bfbfb149835ba34adda85fdc4ad318040928,Various nullable-related bug fixes
iskiselev,2014-06-30 18:37:52,https://api.github.com/repos/sq/JSIL/git/commits/8e2b348a12571445e5854b041fed7d3acfee40bb,8e2b348a12571445e5854b041fed7d3acfee40bb,"Added tests for Nullable issues. (See #316, #361)."
kg,2014-07-05 17:04:36,https://api.github.com/repos/sq/JSIL/git/commits/8c9df71ffb711a076834f456f2e71e3b98cefced,8c9df71ffb711a076834f456f2e71e3b98cefced,Checkpoint
kg,2014-06-30 04:48:47,https://api.github.com/repos/sq/JSIL/git/commits/d53b75cc3e4ae376fe3589e0f790080457c0949a,d53b75cc3e4ae376fe3589e0f790080457c0949a,Split SimpleTestCases out from the rest of the test cases so test runners can run them in parallel with the other test groups
kg,2014-06-30 02:49:17,https://api.github.com/repos/sq/JSIL/git/commits/0d9c8478196c6bedff5fcd49b6cf4d32948bc231,0d9c8478196c6bedff5fcd49b6cf4d32948bc231,Make __proto__/setPrototypeOf optional and turn it off by default because it is *incredibly* slow
kg,2014-06-30 02:34:01,https://api.github.com/repos/sq/JSIL/git/commits/761ba53d99395317c8ba1fd21f85965232296a6a,761ba53d99395317c8ba1fd21f85965232296a6a,Checkpoint introduction of ES7 typed objects support
kg,2014-06-30 02:06:14,https://api.github.com/repos/sq/JSIL/git/commits/4ab7d3ba5909025ddace3c49351458b32a415c33,4ab7d3ba5909025ddace3c49351458b32a415c33,Checkpoint work on introducing support for ES7 typed objects
kg,2014-06-30 02:06:01,https://api.github.com/repos/sq/JSIL/git/commits/0cba907923ea22d586ffcf8c221928fd6f30a861,0cba907923ea22d586ffcf8c221928fd6f30a861,Fix Reference.Of using assignment to declare __Type__ instead of defining a property
kg,2014-06-29 11:10:53,https://api.github.com/repos/sq/JSIL/git/commits/e8753ec203889b298317564a3faf3c823369f6ba,e8753ec203889b298317564a3faf3c823369f6ba,Implement overflow semantics for signed byte and signed short
kg,2014-06-29 10:14:23,https://api.github.com/repos/sq/JSIL/git/commits/4c4d41139fd38ebd699943035499c3f337871e0c,4c4d41139fd38ebd699943035499c3f337871e0c,"Implement overflow for unsigned byte and unsigned short
Add test for signed byte/signed short overflow"
kg,2014-06-29 01:47:34,https://api.github.com/repos/sq/JSIL/git/commits/d773e12f8ce2a3f229e5a9c5187b77665c985724,d773e12f8ce2a3f229e5a9c5187b77665c985724,Fix race condition in AsyncAwait test
kg,2014-06-29 01:24:10,https://api.github.com/repos/sq/JSIL/git/commits/3250c304b08e95526e361284c3a6ceec54b37f81,3250c304b08e95526e361284c3a6ceec54b37f81,"Fix MethodSignatureSet making a copy of the whole collection's keys behind the scenes during some operations.
Make CanUseFastOverloadDispatch bail out of the counting loop once it knows there's more than one matching signature."
kg,2014-06-26 10:30:20,https://api.github.com/repos/sq/JSIL/git/commits/a0237a3f47fd9d3fa4d630f66a10183291677ee9,a0237a3f47fd9d3fa4d630f66a10183291677ee9,Fix imul being used in cases where it shouldn't.
kg,2014-06-26 10:20:11,https://api.github.com/repos/sq/JSIL/git/commits/06dc86db40137fb6e1848667acafec7ffe753daa,06dc86db40137fb6e1848667acafec7ffe753daa,Implement int32 multiply semantics
kg,2014-06-26 10:03:05,https://api.github.com/repos/sq/JSIL/git/commits/e5b5953ebf4bac36b28d611876b3819187b31d46,e5b5953ebf4bac36b28d611876b3819187b31d46,Implement correct semantics for unsigned int32 multiply
kg,2014-06-26 09:23:04,https://api.github.com/repos/sq/JSIL/git/commits/b5b84d15c64514edc7829c680af8cad4bb3cb0e0,b5b84d15c64514edc7829c680af8cad4bb3cb0e0,"Fix stupid temporary eliminator regression
Remove some pointless String.Format calls"
kg,2014-06-26 09:09:44,https://api.github.com/repos/sq/JSIL/git/commits/d03cc9241693a894914db605d950420227d92a4c,d03cc9241693a894914db605d950420227d92a4c,Introduce Math.imul polyfill
kg,2014-06-23 10:25:21,https://api.github.com/repos/sq/JSIL/git/commits/2574331f6fae436b8d9c52eb7c3e46c64a607640,2574331f6fae436b8d9c52eb7c3e46c64a607640,Don't dump a random app.config file into the outdir
kg,2014-06-23 10:21:17,https://api.github.com/repos/sq/JSIL/git/commits/cfcc64b26e1089c6f6e60ff49abb65916c5cfe3c,cfcc64b26e1089c6f6e60ff49abb65916c5cfe3c,"Annotate some functions with the .net 4.5 inlining hint
Rearrange some code in the node enumerators to enable more effective inlining"
kg,2014-06-23 10:20:34,https://api.github.com/repos/sq/JSIL/git/commits/808006e73cc76c640bca07242c88fec909655194,808006e73cc76c640bca07242c88fec909655194,"Introduce timeouts for tracked locks
Use reasonable timeouts for static analysis cache waits (so that we don't tie up worker threads for too long)"
kg,2014-06-23 09:25:34,https://api.github.com/repos/sq/JSIL/git/commits/b5cc4571bf704b9c05ad5e0ffacb335a9b64f5ea,b5cc4571bf704b9c05ad5e0ffacb335a9b64f5ea,Some minor optimizations
kg,2014-06-23 09:17:30,https://api.github.com/repos/sq/JSIL/git/commits/3a5c4c477e397980e473b31abd3a33df18e4db91,3a5c4c477e397980e473b31abd3a33df18e4db91,Update tracked lock test
kg,2014-06-23 09:12:09,https://api.github.com/repos/sq/JSIL/git/commits/091e61b1f2efae9b443c3e75b4bff6b0c055f91b,091e61b1f2efae9b443c3e75b4bff6b0c055f91b,Use ImmutableArrayPool less since it seems to cause leaks when used in type information.
kg,2014-06-23 08:58:41,https://api.github.com/repos/sq/JSIL/git/commits/3e3b8542bcf53f83158f2e08e348d95ed1fa75d5,3e3b8542bcf53f83158f2e08e348d95ed1fa75d5,Reduce number of indirect variables allocated during translation
kg,2014-06-23 08:45:28,https://api.github.com/repos/sq/JSIL/git/commits/3affb4bd9fa358ce82459928f1b5007b8556e2ee,3affb4bd9fa358ce82459928f1b5007b8556e2ee,"Reduce GC pressure:
  Replace various uses of JSVariable in the static analyzer data with strings, since we only use their names anyway.
  Stop allocating a unique SpecialIdentifiers per-function.

Bump version number since it's been a while."
kg,2014-06-23 08:13:24,https://api.github.com/repos/sq/JSIL/git/commits/16e34daf585a8de5f8aa3f5a9d8ad01a78137ba7,16e34daf585a8de5f8aa3f5a9d8ad01a78137ba7,"Don't add a tracked lock to the tracking table until it fails to be acquired
Use weak references to tracked locks to reduce memory usage"
kg,2014-06-23 08:02:54,https://api.github.com/repos/sq/JSIL/git/commits/8dd4b357462ecbac185e08418f317eae2cd68bf4,8dd4b357462ecbac185e08418f317eae2cd68bf4,Fix .NET 4.0 build
kg,2014-06-23 07:37:42,https://api.github.com/repos/sq/JSIL/git/commits/44d3815b467920a6f44e87bc1740223193b1650b,44d3815b467920a6f44e87bc1740223193b1650b,"Introduce ImmutableArrayPool to reduce GC pressure by carving small temporary arrays out of larger ones
Use ToList in some places instead of ToArray to reduce GC pressure
Clean up a few resharper warnings"
kg,2014-06-23 06:57:10,https://api.github.com/repos/sq/JSIL/git/commits/8077dd9d1db1f7ae41a18a13929c6eb6c9eba5bb,8077dd9d1db1f7ae41a18a13929c6eb6c9eba5bb,Some minor heap size/GC pressure optimizations
kg,2014-06-23 05:36:35,https://api.github.com/repos/sq/JSIL/git/commits/5ad7102b98f70ebe67c555d69d043e8326ee2540,5ad7102b98f70ebe67c555d69d043e8326ee2540,"Add support for compiling against .NET 4.5 in VS2010.
By default, tune GC settings in JSILc to use sustained low latency mode & server GC.
Manually trigger full background collections after assembly load, analysis and translation phases complete.
Collectively these GC changes reduce time spent in GC during a corlib compile from ~50% to ~11%."
kg,2014-06-22 23:31:14,https://api.github.com/repos/sq/JSIL/git/commits/11c19e83af7818ea139c9dd84032fea023f59d9d,11c19e83af7818ea139c9dd84032fea023f59d9d,Update to latest ILSpy
kg,2014-06-22 23:22:17,https://api.github.com/repos/sq/JSIL/git/commits/f67c1aff4eb566688588461d8b4792fbd6bbc2a1,f67c1aff4eb566688588461d8b4792fbd6bbc2a1,Dump stacktrace when decompile fails
kg,2014-06-22 23:19:25,https://api.github.com/repos/sq/JSIL/git/commits/556ac3ab085c1ac39356bf55aba3b1b073ff73db,556ac3ab085c1ac39356bf55aba3b1b073ff73db,Fix old username references
Mike-EEE,2014-05-30 20:57:07,https://api.github.com/repos/sq/JSIL/git/commits/e94bae3fb12cbe83c2da8c5a50297b873b5d4857,e94bae3fb12cbe83c2da8c5a50297b873b5d4857,"[Manual merge of PR #512 - kg]
  Fixes #381 and #508
  Adding support for Generic Closures.  Not the best implementation, but
  fixes the issues.  There might be a better more comprehensive
  implementation around closures at a later point."
kg,2014-06-15 21:19:59,https://api.github.com/repos/sq/JSIL/git/commits/100744bb4895a84e5759c5ab4c76427a7089a1e3,100744bb4895a84e5759c5ab4c76427a7089a1e3,"Merge pull request #527 from iskiselev/AsyncBclProxies

Added BCL proxies for classes implemented in JSIL.Async.js"
kg,2014-06-15 21:02:12,https://api.github.com/repos/sq/JSIL/git/commits/ed00d49c112edae893fdd7d66065bf2de1c4077b,ed00d49c112edae893fdd7d66065bf2de1c4077b,"Fix reflection invoke bugs introduced by fix for #484. Fixes issues #529 and #530.
Make generated call methods strict about parameter count."
kg,2014-06-15 12:31:38,https://api.github.com/repos/sq/JSIL/git/commits/7d3824c975c4cff815b2755b4eaa2e56b15a3e8d,7d3824c975c4cff815b2755b4eaa2e56b15a3e8d,Refactor and optimize JSIL.CreateInstanceOfType
kg,2014-06-15 12:12:23,https://api.github.com/repos/sq/JSIL/git/commits/cd3bf897c49886813932f1f06a65b3d34b5fa4f4,cd3bf897c49886813932f1f06a65b3d34b5fa4f4,"Clean up old-style 'T, args' uses of CreateInstanceOfType"
iskiselev,2014-06-12 19:00:13,https://api.github.com/repos/sq/JSIL/git/commits/02776a0541d0a5b94363e8c9ad7136c9617fbe83,02776a0541d0a5b94363e8c9ad7136c9617fbe83,Added BCL proxies for classes implemented in JSIL.Async.js
kg,2014-06-12 09:58:00,https://api.github.com/repos/sq/JSIL/git/commits/e20ef5ef56cbb9158cb882a279324f32d95269a9,e20ef5ef56cbb9158cb882a279324f32d95269a9,Check in a (currently disabled) optimization for base method calls as suggested by Luke Wagner. (It's not actually an optimization :-( )
kg,2014-06-12 09:21:59,https://api.github.com/repos/sq/JSIL/git/commits/abfa294bd3ce4403fd1bf7dc7efe8d207b340175,abfa294bd3ce4403fd1bf7dc7efe8d207b340175,Add performance test for base method calls
iskiselev,2014-04-05 11:02:20,https://api.github.com/repos/sq/JSIL/git/commits/2b8b8863797b3a5d2b50d615df99be0c9735e358,2b8b8863797b3a5d2b50d615df99be0c9735e358,"Initial async/await support (#105, #108)"
kg,2014-06-11 07:06:05,https://api.github.com/repos/sq/JSIL/git/commits/857082d9c863efe3e0e90511a9c227d3c635e75e,857082d9c863efe3e0e90511a9c227d3c635e75e,Suppress stdout spew while running the BCL test
iskiselev,2014-06-03 03:51:20,https://api.github.com/repos/sq/JSIL/git/commits/753068f5ff6451fbc5227863036e9b9261a8b409,753068f5ff6451fbc5227863036e9b9261a8b409,"Test added for extracting method info from Expression.

--HG--
extra : source : 0066fc1f9067cb5db7866daa768c787e32910fb0"
iskiselev,2014-05-26 05:36:40,https://api.github.com/repos/sq/JSIL/git/commits/6b5f0966c0cd7828f4eeaceed77408a90b322a52,6b5f0966c0cd7828f4eeaceed77408a90b322a52,"Extract method/field info for expression trees.

--HG--
extra : source : d1f6f96286feaf8e5138d829c931e9b63d65c268"
kg,2014-06-10 21:32:59,https://api.github.com/repos/sq/JSIL/git/commits/9f8c09837dbaf030531585ea06d9016c336cf60e,9f8c09837dbaf030531585ea06d9016c336cf60e,Update website
kg,2014-06-10 21:28:58,https://api.github.com/repos/sq/JSIL/git/commits/69828c381a9d61c7673620ecf3df0237caa1ec6b,69828c381a9d61c7673620ecf3df0237caa1ec6b,"Fix Pointer.asView creating garbage in cases where it could just hand back the cached underlying view object.
Pointer.asView's size argument is now required (pass -1 for 'default size')"
kg,2014-06-10 21:18:46,https://api.github.com/repos/sq/JSIL/git/commits/2f96a9c0ba29afe036459f0b32e2f3c51f4b9d59,2f96a9c0ba29afe036459f0b32e2f3c51f4b9d59,Truncations need the extra parens after all. LAME.
kg,2014-06-10 20:53:01,https://api.github.com/repos/sq/JSIL/git/commits/b33bcd8de099bf316edfdfa71dd32992560e438d,b33bcd8de099bf316edfdfa71dd32992560e438d,Optimize MemoryRange.storeExistingView and MemoryRange.getView
kg,2014-06-10 21:10:35,https://api.github.com/repos/sq/JSIL/git/commits/a57f2cfcefa603b6cd420f597ce898e79eeb0445,a57f2cfcefa603b6cd420f597ce898e79eeb0445,Slightly tweak narrowing conversion support
kg,2014-06-10 21:08:02,https://api.github.com/repos/sq/JSIL/git/commits/f4cf8f688e323691cbec6a93467e0c3119f8b506,f4cf8f688e323691cbec6a93467e0c3119f8b506,"Revert ""Removed call of JSIL.ImplementExternals with $jsilcore.MemberInfoExternals for: PropertyInfo FieldInfo""

This reverts commit ddd860c159c73a15616b2fb84a53a2eabd96fff1."
kg,2014-06-10 20:48:05,https://api.github.com/repos/sq/JSIL/git/commits/3704ab507cc297085e2136d616d4200cf2364d0e,3704ab507cc297085e2136d616d4200cf2364d0e,"Implement narrowing double -> float conversion
Generate much better code for various numeric conversions (less casts, simpler cast code, etc)"
kg,2014-06-10 18:52:00,https://api.github.com/repos/sq/JSIL/git/commits/de61b4b2177aa2ac5ed3b585e84cd8675d749ee0,de61b4b2177aa2ac5ed3b585e84cd8675d749ee0,"Fix external member stubs leaking some strings
Fix IsExiting crash in monogame sample"
iskiselev,2014-06-03 05:29:22,https://api.github.com/repos/sq/JSIL/git/commits/ddd860c159c73a15616b2fb84a53a2eabd96fff1,ddd860c159c73a15616b2fb84a53a2eabd96fff1,Removed call of JSIL.ImplementExternals with $jsilcore.MemberInfoExternals for: PropertyInfo FieldInfo
iskiselev,2014-06-03 05:30:32,https://api.github.com/repos/sq/JSIL/git/commits/77cd3f47ce2876c05dd579180228327928ec886d,77cd3f47ce2876c05dd579180228327928ec886d,"Added MemberInfo.MemberType.

--HG--
extra : source : a8a63a2689e74ca2e21f65ec980295071e3eeb1b
extra : amend_source : a749dbc4cc153c0aaea4d4453cb06eae01e588f1"
kg,2014-06-10 18:06:50,https://api.github.com/repos/sq/JSIL/git/commits/8101240a072560b006d9b847428e7b95fd9148bc,8101240a072560b006d9b847428e7b95fd9148bc,Fix foldertestsources crashing if the source folder is missing.
iskiselev,2014-05-28 03:33:49,https://api.github.com/repos/sq/JSIL/git/commits/f257a3553b84c824ee63c4cf61c96f6fdc8dff54,f257a3553b84c824ee63c4cf61c96f6fdc8dff54,"Added SimpleTestCasesSourceForTranslatedBcl (empty yet). It runs test with translated mscorlib and System.Core using Proxies.Bcl and throwOnUnimplementedExternals=false.

--HG--
extra : source : 94809eace594d8e859cc6a9c50cb0b570554f283
extra : amend_source : c45207921eb28d5b2632ed041bc16cf2b2aa20a8"
iskiselev,2014-05-28 00:33:03,https://api.github.com/repos/sq/JSIL/git/commits/76260c41f12dda902c99aba2aefa8c85a88f8af8,76260c41f12dda902c99aba2aefa8c85a88f8af8,"BCL proxies cleaned up and update for last JSIL changes.

--HG--
extra : source : a606c3916eae40d19a64ef596d090dbffd1bc91e"
iskiselev,2014-05-27 22:07:41,https://api.github.com/repos/sq/JSIL/git/commits/a40ea2b677c3ff6eb23aa5bf137f7f8b29b975d7,a40ea2b677c3ff6eb23aa5bf137f7f8b29b975d7,Included Proxies.Bcl to release build.
iskiselev,2014-04-10 16:44:23,https://api.github.com/repos/sq/JSIL/git/commits/93537c2ae25507559b31d8d3cdd01eeb0f1f1d44,93537c2ae25507559b31d8d3cdd01eeb0f1f1d44,BCL proxies added.
iskiselev,2014-05-27 09:31:24,https://api.github.com/repos/sq/JSIL/git/commits/074a9fe3b399daf85548567181fea8a937aaccec,074a9fe3b399daf85548567181fea8a937aaccec,"Do not add MethodSignatures to parent/child types for static methods and constructors.

--HG--
extra : amend_source : 7b7bf1aef5f00c950d5592eb59695c684dee061b"
iskiselev,2014-05-26 09:05:12,https://api.github.com/repos/sq/JSIL/git/commits/90b86f088a813ec7974d728507449919ad478070,90b86f088a813ec7974d728507449919ad478070,"Fixed reflection for generic method argument/return type.

--HG--
extra : source : a5abbe500739e883846cef82b80f31847ca48747
extra : amend_source : 3a9b3da31436479e45202cc022c002a28b20e55b"
kg,2014-06-10 16:09:52,https://api.github.com/repos/sq/JSIL/git/commits/805698794a70fd11b4d0ccc3a2c6b3d2a8c07e2c,805698794a70fd11b4d0ccc3a2c6b3d2a8c07e2c,Line ending correction for JSIL.Core.Reflection.js.
iskiselev,2014-05-20 07:19:43,https://api.github.com/repos/sq/JSIL/git/commits/6a44a11b85aebdda72e14882bec158a93cf32a8d,6a44a11b85aebdda72e14882bec158a93cf32a8d,Interface methods reflection call. Fix #484.
iskiselev,2014-05-18 10:15:39,https://api.github.com/repos/sq/JSIL/git/commits/1ac9bfb13e865504491b73c8d53fe7c136fca6b3,1ac9bfb13e865504491b73c8d53fe7c136fca6b3,DCE: Ignorance for field/type support.
iskiselev,2014-05-18 09:51:05,https://api.github.com/repos/sq/JSIL/git/commits/5a4aa80348bc76d3071c2d7af102bb106469126e,5a4aa80348bc76d3071c2d7af102bb106469126e,"DCE/IsIgnored: We really need check only generic parameters, not return type or arguments."
iskiselev,2014-05-18 07:31:44,https://api.github.com/repos/sq/JSIL/git/commits/407545b36752afd0c1ff70c61a0ba77971bd19d1,407545b36752afd0c1ff70c61a0ba77971bd19d1,Finished IsIgnored/IsExternal/IsStubOnly attributes procesing for methods in DCE.
iskiselev,2014-05-18 06:03:34,https://api.github.com/repos/sq/JSIL/git/commits/a97362b5e06b5ac46b73e0b9f1ba9941daf4faa4,a97362b5e06b5ac46b73e0b9f1ba9941daf4faa4,"Fixed stub processing for DCE removed classes.

--HG--
extra : amend_source : 9d9193c42670444828a3b74f6c6fc15e713b6213"
iskiselev,2014-05-18 05:00:18,https://api.github.com/repos/sq/JSIL/git/commits/7b7442c6669fea063f4ab0fa79fe8ef6b30e038a,7b7442c6669fea063f4ab0fa79fe8ef6b30e038a,"Fix inner type declaration after DCE: we still may need inner type.

--HG--
extra : source : 8411d1a8b5dff28eb9dbb6130dea31fea79c3dcc"
iskiselev,2014-05-17 07:17:53,https://api.github.com/repos/sq/JSIL/git/commits/5c06da5eb6b0a059235a10f733fe70b1c2feed0e,5c06da5eb6b0a059235a10f733fe70b1c2feed0e,"Dirty solution for DCE interop with IsExternal flag.

--HG--
extra : source : 0c45b2c5ff8c3c22d6d308904e297fb54e5e58b4"
iskiselev,2014-05-17 00:51:30,https://api.github.com/repos/sq/JSIL/git/commits/45dd2a9aac1d9230e14448d4af32fdada44d8ab8,45dd2a9aac1d9230e14448d4af32fdada44d8ab8,"Removed hack for preserving all interfaces.

--HG--
extra : source : 4e31d58a2af09b73c2de77756116bc8158a0d6d4"
iskiselev,2014-05-15 03:29:41,https://api.github.com/repos/sq/JSIL/git/commits/724292aaede43ca62fd11c43e64becd82f6dad01,724292aaede43ca62fd11c43e64becd82f6dad01,Fixed output path for DCE release mode
iskiselev,2014-05-15 03:17:56,https://api.github.com/repos/sq/JSIL/git/commits/6f9f680b4a68f9da6626c14582c622e472dbe1bf,6f9f680b4a68f9da6626c14582c622e472dbe1bf,"Second try to fix .sln to include DCE in default msbuild build

--HG--
extra : amend_source : 77210f27378709d75c18862549c628bb1360bb6b"
iskiselev,2014-05-15 03:02:21,https://api.github.com/repos/sq/JSIL/git/commits/d5851019d2c05e3bbcf1072d82e3be9e63b3931a,d5851019d2c05e3bbcf1072d82e3be9e63b3931a,"Added JSIL.DeadCodeAnalyzer to sln build

--HG--
extra : source : 04cb51b3b0585c56bae9d950f3d3eb324ff077cd"
iskiselev,2014-05-15 01:58:10,https://api.github.com/repos/sq/JSIL/git/commits/452de038fde3e28322431f6e5d994c9ad965de2d,452de038fde3e28322431f6e5d994c9ad965de2d,"DCE: Generic support, fixed virtual method, interface and arguments processing. Added some meta attributes for dead code elemination.

--HG--
extra : source : 21d98b02d6f6b02dcda345e332f03c471817b101
extra : amend_source : 1597ae6e492ab00e087247784f6fe5c8d3e038b1"
iskiselev,2014-05-13 20:50:56,https://api.github.com/repos/sq/JSIL/git/commits/ea2a663f48f6e34d5d401c2386a969c61b8a7b71,ea2a663f48f6e34d5d401c2386a969c61b8a7b71,"Implemented MethodInfo properties: IsGenericMethod, IsGenericMethodDefinition, ContainsGenericParameters

--HG--
extra : source : 9222085b9c9dfa40a82df5afc7d823df7fa93961"
kg,2014-05-27 18:25:46,https://api.github.com/repos/sq/JSIL/git/commits/3296bbb554a27d0f1155a23ddddd90ed36502a47,3296bbb554a27d0f1155a23ddddd90ed36502a47,Don't call Of every time you construct a dictionary enumerator
kg,2014-05-27 18:09:29,https://api.github.com/repos/sq/JSIL/git/commits/277a7b48b6012c48fad5109129df3841d99b9f18,277a7b48b6012c48fad5109129df3841d99b9f18,Fix InheritBaseMethod.
kg,2014-05-27 17:53:47,https://api.github.com/repos/sq/JSIL/git/commits/8355a9cb134869b3933ec2c7c58fd0c2cbf93f22,8355a9cb134869b3933ec2c7c58fd0c2cbf93f22,Expand Vector3 test case slightly
kg,2014-05-27 17:24:57,https://api.github.com/repos/sq/JSIL/git/commits/df4f7199863e1daadd43bb91aae634d95a945f63,df4f7199863e1daadd43bb91aae634d95a945f63,Latest spidermonkey
kg,2014-05-27 16:34:05,https://api.github.com/repos/sq/JSIL/git/commits/15fe51a38b19308d582b11bd48d69b15f2c2f1b7,15fe51a38b19308d582b11bd48d69b15f2c2f1b7,Speed up enum casts
kg,2014-05-27 15:35:29,https://api.github.com/repos/sq/JSIL/git/commits/c80eac241d5a430e611eed796676092d0f62b08b,c80eac241d5a430e611eed796676092d0f62b08b,Fix JSReplaceConstructor
kg,2014-05-27 15:27:47,https://api.github.com/repos/sq/JSIL/git/commits/220ba0af57407591ca391e5b8e3ba209f18fcd41,220ba0af57407591ca391e5b8e3ba209f18fcd41,Fix a couple erroneous proxy tests
kg,2014-05-27 15:13:09,https://api.github.com/repos/sq/JSIL/git/commits/781a1757dd776a2c4b76bae9577bc154a31ae486,781a1757dd776a2c4b76bae9577bc154a31ae486,Fix the proxies for String.Join
kg,2014-05-27 15:09:10,https://api.github.com/repos/sq/JSIL/git/commits/b661aedc0d78089561c00c6ff8f100c228530140,b661aedc0d78089561c00c6ff8f100c228530140,"Correct the Int64.ToString fix
Don't apply System.Object proxy to interfaces.
Attempt to distinguish MemberIdentifiers for static and non-static members from each other."
kg,2014-05-27 14:46:12,https://api.github.com/repos/sq/JSIL/git/commits/32cd403f73f19419151e873dcbccffc168028fcd,32cd403f73f19419151e873dcbccffc168028fcd,"Fix Int64.ToString and other overloads of ToString getting a .NET-style 'ToString' name instead of a JS-style 'toString', and add a test."
kg,2014-05-27 12:16:41,https://api.github.com/repos/sq/JSIL/git/commits/463e468432dd0e993d05ba5d91c318c35f60fbcb,463e468432dd0e993d05ba5d91c318c35f60fbcb,"Overloaded method calls through signatures are almost as fast as normal method calls in Spidermonkey now, thanks to a simple inline cache.
Generate switch blocks instead of cascaded ifs for overload dispatchers."
iskiselev,2014-05-13 09:13:40,https://api.github.com/repos/sq/JSIL/git/commits/de945da9a54fe79a7507d0fc08437dd1e9969c79,de945da9a54fe79a7507d0fc08437dd1e9969c79,"Added closed generic method info, implemented MakeGenericMethod. Added possiblity to Invoke closed generic through reflection. Test added.

--HG--
extra : source : e5a4c33dd8b62bb49cfde120631f7da1d3c85e8e"
kg,2014-05-26 06:38:51,https://api.github.com/repos/sq/JSIL/git/commits/a5cf262e0f2a53d41bf573d8d35dda00d51e5e64,a5cf262e0f2a53d41bf573d8d35dda00d51e5e64,Split out issue from #479 from the rest of the ReflectionTypeGenericInfo test.
iskiselev,2014-05-13 09:10:46,https://api.github.com/repos/sq/JSIL/git/commits/066182686a5d9ada2f993d6e6c57a5048b122015,066182686a5d9ada2f993d6e6c57a5048b122015,Fixed test path.
iskiselev,2014-05-13 05:49:29,https://api.github.com/repos/sq/JSIL/git/commits/ab03b8208b7b3e3be2419616bcf14d28c7889f8a,ab03b8208b7b3e3be2419616bcf14d28c7889f8a,Changed order of checks.
iskiselev,2014-05-13 05:34:51,https://api.github.com/repos/sq/JSIL/git/commits/fc1640289a12e89932c4160b3be0855cd3e4cb72,fc1640289a12e89932c4160b3be0855cd3e4cb72,Fixed problem with calling interface generic method with generic arguments #348. Test added.
kg,2014-05-26 06:29:30,https://api.github.com/repos/sq/JSIL/git/commits/1c7cbceffcc274911d1a9cf6d71bd7943835f409,1c7cbceffcc274911d1a9cf6d71bd7943835f409,Make ReflectionTypeGenericInfo failures easier to understand in test runner.
iskiselev,2014-05-11 23:37:59,https://api.github.com/repos/sq/JSIL/git/commits/c64aba4363a9b12769bf1e375e9e20027ec9c922,c64aba4363a9b12769bf1e375e9e20027ec9c922,"Reflection type Generic information properties fixed.

--HG--
extra : source : dea6ca7686321354bd500c63dde980da8f81cef9
extra : amend_source : df60b530b5990e7910208356f5770760d03f20e6"
iskiselev,2014-05-06 22:45:49,https://api.github.com/repos/sq/JSIL/git/commits/a291e3594d4aa981f83c09543bfdc9c945844013,a291e3594d4aa981f83c09543bfdc9c945844013,Fix order of check this to skip adding MethodSignatures twice.
iskiselev,2014-05-06 21:36:57,https://api.github.com/repos/sq/JSIL/git/commits/1bce9133a3770dff97debfae1107f1cf40a40ab3,1bce9133a3770dff97debfae1107f1cf40a40ab3,Possible fix for incorrect selecting method FastOverloadDispatch (#368)
iskiselev,2014-05-06 05:54:40,https://api.github.com/repos/sq/JSIL/git/commits/ef22613b76ed96672194a79518734959816ad987,ef22613b76ed96672194a79518734959816ad987,Added sorting in $BuildMethodGroups based on distance from type. Fix #368.
iskiselev,2014-05-26 04:38:17,https://api.github.com/repos/sq/JSIL/git/commits/6c101817b87c37bb09a8a564544890ac705a1802,6c101817b87c37bb09a8a564544890ac705a1802,Delegate type tests added.
iskiselev,2014-10-07 23:12:30,https://api.github.com/repos/sq/JSIL/git/commits/a222d16f8cef83652e1b2b179d57367eb75a6064,a222d16f8cef83652e1b2b179d57367eb75a6064,Correct inheritance for MulticastDelegate. Added Invoke method for each instance. Fix #543.
iskiselev,2014-05-26 04:20:55,https://api.github.com/repos/sq/JSIL/git/commits/1c2303243b55582a3839557623148934f9744d2e,1c2303243b55582a3839557623148934f9744d2e,"Added reflection support to delegate types. Added Invoke method. Fix #500, #499.
Removed RawMethod Invoke from Delegate and MulticastDelegate."
kg,2014-05-04 14:56:28,https://api.github.com/repos/sq/JSIL/git/commits/78b5fbabf732a2da8d7014f0df9faffbffdd35bd,78b5fbabf732a2da8d7014f0df9faffbffdd35bd,Remove implicit bool conversion
kg,2014-04-29 09:32:02,https://api.github.com/repos/sq/JSIL/git/commits/1f04e0f9a564c41fc823132ba862ad0564d7782c,1f04e0f9a564c41fc823132ba862ad0564d7782c,Correctness fixes
kg,2014-04-29 09:25:07,https://api.github.com/repos/sq/JSIL/git/commits/72b5f315702d7249e52a8627747bdbc9944de40c,72b5f315702d7249e52a8627747bdbc9944de40c,Fix BinaryTrees choking on new invocation ThisReference copy semantics
kg,2014-04-29 09:02:31,https://api.github.com/repos/sq/JSIL/git/commits/a9aa360018cb691121d804a4eac9ae5ea914dff8,a9aa360018cb691121d804a4eac9ae5ea914dff8,Fix issue #395.
kg,2014-04-29 08:50:11,https://api.github.com/repos/sq/JSIL/git/commits/78e3542f460fffff70ec4e713d46b194352a302c,78e3542f460fffff70ec4e713d46b194352a302c,Fix issue #466
kg,2014-04-29 08:22:57,https://api.github.com/repos/sq/JSIL/git/commits/199cb3ad38fa30197f8d1dd41c7207c6588ccfa9,199cb3ad38fa30197f8d1dd41c7207c6588ccfa9,Fix reference writes not cloning structs
kg,2014-04-29 08:01:25,https://api.github.com/repos/sq/JSIL/git/commits/b37f6f20ee861744620fefd4e7f289ea62a91a97,b37f6f20ee861744620fefd4e7f289ea62a91a97,"Stop using Debug.WriteLine because it !@%*(!@%*ing blocks for no reason

Conflicts:

	JSIL/Transforms/StaticAnalysis/EmulateStructAssignment.cs"
kg,2014-04-29 07:31:47,https://api.github.com/repos/sq/JSIL/git/commits/f47bf876fa3348735ef3ab26430f3ad4bd982fd2,f47bf876fa3348735ef3ab26430f3ad4bd982fd2,Fix List.Enumerator not being a struct
kg,2014-04-29 03:07:35,https://api.github.com/repos/sq/JSIL/git/commits/9eeed4a762c697c832959f06e915c8c2a4d5c813,9eeed4a762c697c832959f06e915c8c2a4d5c813,"Fix part of issue #371 and add test.
Kill Threading's copy of ReferenceComparer"
kg,2014-04-28 16:29:09,https://api.github.com/repos/sq/JSIL/git/commits/26db81a02b5fcceefc089b9b85a2de67af57002e,26db81a02b5fcceefc089b9b85a2de67af57002e,Fix TypesAreEqual for obscure types. Resolves some mscorlib translation issues.
kg,2014-04-28 16:16:16,https://api.github.com/repos/sq/JSIL/git/commits/1845706da3f99a22f0c5d5da7771885461ada6ff,1845706da3f99a22f0c5d5da7771885461ada6ff,Update try.jsil.org to handle github api changes
kg,2014-04-28 15:59:30,https://api.github.com/repos/sq/JSIL/git/commits/04b0f7dd4edb31df45f2fd265adcb4531917fa74,04b0f7dd4edb31df45f2fd265adcb4531917fa74,Faster string lookups
kg,2014-04-28 15:47:54,https://api.github.com/repos/sq/JSIL/git/commits/c084ac6468d24587d8c34dfc723738057d16999d,c084ac6468d24587d8c34dfc723738057d16999d,"Explicitly specify string comparer for hotspot
Fix EscapeIdentifier bug"
kg,2014-04-28 15:38:39,https://api.github.com/repos/sq/JSIL/git/commits/2bb4c4f32139a4f65ca05c6137cfa63b529a9252,2bb4c4f32139a4f65ca05c6137cfa63b529a9252,Halve the amount of work in method signature set updates
kg,2014-04-28 14:59:44,https://api.github.com/repos/sq/JSIL/git/commits/7e235027e30cf5874d5b1cccf77fc00369400c0d,7e235027e30cf5874d5b1cccf77fc00369400c0d,GC optimizations for performance and memory usage
kg,2014-04-28 14:55:25,https://api.github.com/repos/sq/JSIL/git/commits/653cdedd2b033abe2efbc6a0a652079b3c9bdff9,653cdedd2b033abe2efbc6a0a652079b3c9bdff9,"Various optimizations to compile performance (related to #393)
WARNING: This may dramatically impair performance on Mono due to their inferior BCL implementation."
kg,2014-04-28 13:40:33,https://api.github.com/repos/sq/JSIL/git/commits/2e02b7fce15d26a297478821a12a0cd01363eac5,2e02b7fce15d26a297478821a12a0cd01363eac5,Make FixupInterfaces more precise for string interface names.
kg,2014-04-28 13:30:19,https://api.github.com/repos/sq/JSIL/git/commits/340cff178c8545010f91a35c153d4c55f042d3f9,340cff178c8545010f91a35c153d4c55f042d3f9,Don't emit [] in method signatures
kg,2014-04-28 13:28:50,https://api.github.com/repos/sq/JSIL/git/commits/e522f142d187f6a3ea9501b1149dc1ab0401bc0d,e522f142d187f6a3ea9501b1149dc1ab0401bc0d,Reduce memory usage for some autogenerated signatures
kg,2014-04-28 13:20:48,https://api.github.com/repos/sq/JSIL/git/commits/7d6dbfcd1da198e7c5be26693e4cda06c60c4ce9,7d6dbfcd1da198e7c5be26693e4cda06c60c4ce9,Fix InterfaceBuilder.GenericParameter using the wrong namespace in some cases.
kg,2014-04-28 12:39:56,https://api.github.com/repos/sq/JSIL/git/commits/3cceafd516d57748cc225e3f0172a66bdc2424dd,3cceafd516d57748cc225e3f0172a66bdc2424dd,"Reduce memory usage for common, simple method signatures"
kg,2014-04-28 12:25:39,https://api.github.com/repos/sq/JSIL/git/commits/26d83ec8bb7c823a88c8c6de6603ea1f2356d53e,26d83ec8bb7c823a88c8c6de6603ea1f2356d53e,Reduce some array garbage
kg,2014-04-28 12:17:39,https://api.github.com/repos/sq/JSIL/git/commits/b74f9ceb84d5442ac6dcb8486f545976a58e98e1,b74f9ceb84d5442ac6dcb8486f545976a58e98e1,Fix MemberBuilder leaks
kg,2014-04-28 12:05:31,https://api.github.com/repos/sq/JSIL/git/commits/a5e5549b65112719f9f45fa2f21ee77904e64e3c,a5e5549b65112719f9f45fa2f21ee77904e64e3c,Fix two HashSet typos (#464)
kg,2014-04-28 11:16:15,https://api.github.com/repos/sq/JSIL/git/commits/e8c5e0656d7444783f2e525687a6b4d5c5bef471,e8c5e0656d7444783f2e525687a6b4d5c5bef471,Reduce the frequency of 'new JSIL.GenericParameter' to shrink the JS heap and make generated JS smaller
kg,2014-04-28 10:59:04,https://api.github.com/repos/sq/JSIL/git/commits/6c0ad9e64a2bccdf303464ac60a2db8a172e5972,6c0ad9e64a2bccdf303464ac60a2db8a172e5972,"Deprecate indexed interface overrides; always use TypeRefs in generated code. Fixes issue #378.
Introduce JSIL.NamespaceRef"
kg,2014-04-28 10:19:57,https://api.github.com/repos/sq/JSIL/git/commits/eb74c5947a62b89c79a652a4af65527cf1e35995,eb74c5947a62b89c79a652a4af65527cf1e35995,Merge branch 'master' of github.com:sq/JSIL
kg,2014-04-28 10:19:26,https://api.github.com/repos/sq/JSIL/git/commits/f459342f59ad8c5d0eb07e3ebd3a9ed781efc266,f459342f59ad8c5d0eb07e3ebd3a9ed781efc266,Fix issue #464
kg,2014-04-28 03:12:17,https://api.github.com/repos/sq/JSIL/git/commits/2a9e9bc0c4d5754572bf38b32cba0836ed846135,2a9e9bc0c4d5754572bf38b32cba0836ed846135,"Merge pull request #461 from iskiselev/InnerClassNameJS_352

Inner class names use ""+"" sign in class name header comment"
kg,2014-04-28 03:12:05,https://api.github.com/repos/sq/JSIL/git/commits/a7f3405eced7b864f54eff74faa7c0abb7bc250b,a7f3405eced7b864f54eff74faa7c0abb7bc250b,"Merge pull request #462 from iskiselev/Issue364_Tests

Test cases from #364 added."
iskiselev,2014-04-28 03:17:31,https://api.github.com/repos/sq/JSIL/git/commits/52a3ac6ec24897f41bd851a9f10144d6bd5991c1,52a3ac6ec24897f41bd851a9f10144d6bd5991c1,"Test cases from #364 added.

--HG--
extra : source : 489069f747659723e75779cd2e6fb91f104e1bff"
iskiselev,2014-04-28 02:24:10,https://api.github.com/repos/sq/JSIL/git/commits/941344e85333f55a55a1a575a815bb71a4c955d2,941344e85333f55a55a1a575a815bb71a4c955d2,"Changed inner class name format to using ""+"" sign in class name header comment (#352)"
kg,2014-04-28 00:53:26,https://api.github.com/repos/sq/JSIL/git/commits/172b8e88e1926f4188d54fa4b5eab4cca0c9e706,172b8e88e1926f4188d54fa4b5eab4cca0c9e706,*$(@$* ArrayList
kg,2014-04-28 00:50:07,https://api.github.com/repos/sq/JSIL/git/commits/4acfc942bb601f97953a6fb2dddda63371f9f193,4acfc942bb601f97953a6fb2dddda63371f9f193,Implement IList.get_Item/set_Item for List`1.
kg,2014-04-28 00:44:17,https://api.github.com/repos/sq/JSIL/git/commits/f0798175a76da6078184f98f98448b19f56f7f40,f0798175a76da6078184f98f98448b19f56f7f40,Fix List`1 missing some interfaces (#459)
kg,2014-04-27 20:48:42,https://api.github.com/repos/sq/JSIL/git/commits/1b15a6c62d3f1e08a1adaa2fc3f20cb68bb9ac52,1b15a6c62d3f1e08a1adaa2fc3f20cb68bb9ac52,"Merge pull request #458 from iskiselev/Fix_GetVariantInvocationCandidates_Issue354

Fixed GetVariantInvocationCandidates. Fix for #354 and #426."
iskiselev,2014-04-27 18:20:32,https://api.github.com/repos/sq/JSIL/git/commits/3b3ba55ccdb58d40aedbe40d53e83dbd4cb68e52,3b3ba55ccdb58d40aedbe40d53e83dbd4cb68e52,"Fixed GetVariantInvocationCandidates. Fix for #354 and #426.

--HG--
extra : source : 6ae2b9b9e5e015541cdbcfaea11a15fcf2ca2dd9
extra : amend_source : 6f742f5fc5b902f419ef7bf0978b8e18b17326c8"
kg,2014-04-27 10:04:55,https://api.github.com/repos/sq/JSIL/git/commits/e58df5ec922dfccade48f5b02be7ceaa5a3af300,e58df5ec922dfccade48f5b02be7ceaa5a3af300,"Add tests for issues #410, #411, and #425.
Fix issue #425."
kg,2014-04-27 09:33:44,https://api.github.com/repos/sq/JSIL/git/commits/94f0b2d262ddcf2650592fdaf1d8c8480392fc57,94f0b2d262ddcf2650592fdaf1d8c8480392fc57,"Merge pull request #457 from iskiselev/ReflectionInvokeStruct_Issue449

Improvements in reflection method invoke"
iskiselev,2014-04-27 09:24:39,https://api.github.com/repos/sq/JSIL/git/commits/d7f56e45f24d1c5cc59f29c5d3253b636edffde1,d7f56e45f24d1c5cc59f29c5d3253b636edffde1,"Added parameters count check in reflection invoke.
Added replecement for null args with default value for struct (fix #449).

--HG--
extra : source : 769d0783b52562a8a9eb2596a3c7b05c6a02dd36"
kg,2014-04-27 07:28:08,https://api.github.com/repos/sq/JSIL/git/commits/585aa3da67d5a1ae9d96e30d1159a1896883f744,585aa3da67d5a1ae9d96e30d1159a1896883f744,"Merge pull request #456 from iskiselev/RecursiveTypeField_Issue394

Fixed #394 (using type instance in base type)"
iskiselev,2014-04-27 07:31:43,https://api.github.com/repos/sq/JSIL/git/commits/fc20f20f983689d81c855a2b24881b7cfb50159e,fc20f20f983689d81c855a2b24881b7cfb50159e,Fixed #394 (using type instance in base type)
kg,2014-04-27 06:45:00,https://api.github.com/repos/sq/JSIL/git/commits/70d4ff27b76411c35773c1cc6df26be7acdd7302,70d4ff27b76411c35773c1cc6df26be7acdd7302,Strip tabs
kg,2014-04-27 06:27:47,https://api.github.com/repos/sq/JSIL/git/commits/a824f1be5b53dd73d35c8f773d87d1e73cb6a0cd,a824f1be5b53dd73d35c8f773d87d1e73cb6a0cd,Fix issue #372 and add test case.
kg,2014-04-27 03:31:20,https://api.github.com/repos/sq/JSIL/git/commits/c3e16488043412a0efcbb93c6247cf555e6c8b6a,c3e16488043412a0efcbb93c6247cf555e6c8b6a,Merge branch 'master' of github.com:sq/JSIL
kg,2014-04-27 00:37:39,https://api.github.com/repos/sq/JSIL/git/commits/d2e8d45bd2773a4106480762bff13e2119f03fd0,d2e8d45bd2773a4106480762bff13e2119f03fd0,"Merge pull request #406 from iskiselev/UnusedModules

Repo compatibility with hg-git and TeamCity"
kg,2014-04-26 23:12:29,https://api.github.com/repos/sq/JSIL/git/commits/08a3286df95db7c1ee5e9e2c4f4fb1a9c043cfe6,08a3286df95db7c1ee5e9e2c4f4fb1a9c043cfe6,Fix secondary issue from #445: Wrong interface index selected for generic interfaces in some scenarios
kg,2014-04-26 23:05:00,https://api.github.com/repos/sq/JSIL/git/commits/ce74311718ce0668040deebea7fca4153a35700f,ce74311718ce0668040deebea7fca4153a35700f,"Merge pull request #451 from iskiselev/MetaDoc

Generate xml documanetation for JSIL.Meta"
kg,2014-04-26 23:03:15,https://api.github.com/repos/sq/JSIL/git/commits/6fd057db696f0e131477c89da1c95837c457bbf8,6fd057db696f0e131477c89da1c95837c457bbf8,"Fix issue #453:
  Fix HashSet not implementing ICollection`1
  Fix HashSet.Add not having a definition for ICollection`1"
kg,2014-04-26 22:55:19,https://api.github.com/repos/sq/JSIL/git/commits/71a5d5c6c8d9c9a4eb68d1c6413cc454f97aa3d2,71a5d5c6c8d9c9a4eb68d1c6413cc454f97aa3d2,Fix generic variance checks failing to find matching interfaces (#452)
iskiselev,2014-04-26 17:50:38,https://api.github.com/repos/sq/JSIL/git/commits/32ca278230de0e2f49ef5a900ed47b282c407cdd,32ca278230de0e2f49ef5a900ed47b282c407cdd,Generate xml documanetation for JSIL.Meta
kg,2014-04-26 10:30:35,https://api.github.com/repos/sq/JSIL/git/commits/f33d46d52512a5439619215eb9c8c62725273591,f33d46d52512a5439619215eb9c8c62725273591,"Merge pull request #422 from esardaya/bugfix_unknown_member

fixed unknown member bug"
kg,2014-04-26 10:30:02,https://api.github.com/repos/sq/JSIL/git/commits/f78d203199c0bc8148e3a52315e582365d3b2b91,f78d203199c0bc8148e3a52315e582365d3b2b91,"Merge pull request #447 from iskiselev/VarianceTest

Test updated: Added check for all cases for covariance/contravariance casts"
iskiselev,2014-04-26 09:22:07,https://api.github.com/repos/sq/JSIL/git/commits/48639431d82b27b3dc44c96fecbabb21d9b6082c,48639431d82b27b3dc44c96fecbabb21d9b6082c,"Test updated: Added check for all cases for covariance/contravariance casts.

--HG--
rename : Tests/SimpleTestCases/CovariantCast_Issue443.cs => Tests/SimpleTestCases/VarianceCast_Issue443.cs"
kg,2014-04-26 08:18:14,https://api.github.com/repos/sq/JSIL/git/commits/809406f0c32b9d064b75cd38b5591c9a8af01b58,809406f0c32b9d064b75cd38b5591c9a8af01b58,"When doing method lookup for methods of generic interfaces, sort the candidates by their distance from the defining type, so that we use the closest one that matches. Fixes issue #445.
Add test for issue #445."
kg,2014-04-26 07:32:49,https://api.github.com/repos/sq/JSIL/git/commits/0913702b89693456678df8a4f35fc2dfd8b687c7,0913702b89693456678df8a4f35fc2dfd8b687c7,"Clean up and correct some mismatches between JSILc and the runtime regarding interfaces.
See also: #445, #378"
iskiselev,2014-04-26 01:20:58,https://api.github.com/repos/sq/JSIL/git/commits/fd59a8e78b8ba0a78986ca9fea91bf40cd96c6a4,fd59a8e78b8ba0a78986ca9fea91bf40cd96c6a4,"Fixed covariant cast problem (#443). Simplified #353 test, as it is not hides by #443 anymore."
kg,2014-04-25 23:39:29,https://api.github.com/repos/sq/JSIL/git/commits/5f29ae18e9867e9a4e9a048d3a6ed422666a7831,5f29ae18e9867e9a4e9a048d3a6ed422666a7831,Move JSImmutable where it belongs.
kg,2014-04-25 23:22:27,https://api.github.com/repos/sq/JSIL/git/commits/923a6497c4439871931bee1f1cc33819fb1dc55a,923a6497c4439871931bee1f1cc33819fb1dc55a,Move JSReplaceConstructor to where it belongs.
kg,2014-04-25 23:07:19,https://api.github.com/repos/sq/JSIL/git/commits/e33454b1b8e8dcf0f6698539f4e38366beb24614,e33454b1b8e8dcf0f6698539f4e38366beb24614,Whoops.
kg,2014-04-25 23:03:40,https://api.github.com/repos/sq/JSIL/git/commits/b1caa8afea3ee235a10b07d6fdfbbba0e574a957,b1caa8afea3ee235a10b07d6fdfbbba0e574a957,Tweak the new array enumerator fallback so it doesn't create as much garbage and doesn't rely on 'this'
kg,2014-04-25 22:59:56,https://api.github.com/repos/sq/JSIL/git/commits/f3a9cb686690a7f1289a44c1db29db54da0a8a93,f3a9cb686690a7f1289a44c1db29db54da0a8a93,"Merge pull request #441 from iskiselev/ArrayEnumerable_Issue353

Typed array IEnumerable<T>.GetEnumerator fixed (#353)."
kg,2014-04-25 22:57:42,https://api.github.com/repos/sq/JSIL/git/commits/94e36928afe2a27e8b502190b53c0cd45e8d185c,94e36928afe2a27e8b502190b53c0cd45e8d185c,Merge branch 'master' of github.com:sq/JSIL
kg,2014-04-25 22:56:59,https://api.github.com/repos/sq/JSIL/git/commits/293720b63e86d347f25b303b4488af85d8b204a4,293720b63e86d347f25b303b4488af85d8b204a4,"Merge pull request #442 from iskiselev/AnalysisTests_PropertyTemporaries

Make AnalysisTests.PropertyTemporaries test support platform new line."
kg,2014-04-25 22:55:15,https://api.github.com/repos/sq/JSIL/git/commits/2e374880721a7a4631a4697430704413e4ca2040,2e374880721a7a4631a4697430704413e4ca2040,"Refactor TypeInfo.Interfaces and TypeInfo.AllInterfacesRecursive, and fix the Distinct call (#378)"
iskiselev,2014-04-25 21:30:43,https://api.github.com/repos/sq/JSIL/git/commits/c324a2af8430f195bdaaf62484e58d0b035bb24a,c324a2af8430f195bdaaf62484e58d0b035bb24a,Typed array IEnumerable<T>.GetEnumerator fixed (#353).
iskiselev,2014-04-25 21:26:12,https://api.github.com/repos/sq/JSIL/git/commits/b3a21dc3faa3c632108f9a2844acf03fd689ca5a,b3a21dc3faa3c632108f9a2844acf03fd689ca5a,"Make AnalysisTests.PropertyTemporaries test support platform new line.

--HG--
extra : source : e3157e65d1f5a00aa895b308a0f66d1f92e6b17f"
kg,2014-04-25 13:01:55,https://api.github.com/repos/sq/JSIL/git/commits/bdd1f76b610f2e1b8c8317be504b5f0783d0ed45,bdd1f76b610f2e1b8c8317be504b5f0783d0ed45,Fix issue #427
kg,2014-04-25 12:42:56,https://api.github.com/repos/sq/JSIL/git/commits/2ded2a231c5dd7ed41ab609f83855a7cc2b0695e,2ded2a231c5dd7ed41ab609f83855a7cc2b0695e,Update to ILSpy rev with fix for issue #434 and add test
kg,2014-04-25 11:02:17,https://api.github.com/repos/sq/JSIL/git/commits/b109c30d860bca2a355bf9152cc13268d7ade537,b109c30d860bca2a355bf9152cc13268d7ade537,Fix perf hit from unnecessary rehashing of signatures
kg,2014-04-25 10:48:22,https://api.github.com/repos/sq/JSIL/git/commits/1835e6f91ebf7dcef808d769c7a7666ae2563f92,1835e6f91ebf7dcef808d769c7a7666ae2563f92,Omit duplicates from AllInterfacesRecursive (see #378)
kg,2014-04-25 10:30:46,https://api.github.com/repos/sq/JSIL/git/commits/889ba895f0ca18879e69b479c68e76358f1a8728,889ba895f0ca18879e69b479c68e76358f1a8728,"Fix particular detail of List`1.GetEnumerator implementation
Fix HashSet having two GetEnumerator implementations
Fix a bug in GetEnumerator fallback and improve error message
Make TestPrologue work in test_runner.html"
kg,2014-04-25 10:13:26,https://api.github.com/repos/sq/JSIL/git/commits/c98ce1f6dc90b45ca9650b07db247b2302c5c9c4,c98ce1f6dc90b45ca9650b07db247b2302c5c9c4,"When checking for duplicate member definitions, also verify that we do not have a member with the same name and argument list (previously, this allowed two same-name methods with different return types - ick.)
Treat 'op_XXX' methods as special names.
Exempt special names from the more aggressive duplicate member detection (this is necessary because of op_Explicit)
Fix GetEnumerator definition in List`1"
kg,2014-04-25 09:45:33,https://api.github.com/repos/sq/JSIL/git/commits/e67f618e313f46293b3503d4a82d2f98e927586c,e67f618e313f46293b3503d4a82d2f98e927586c,Cleanup overloaded interface methods in Bootstrap (see #439)
kg,2014-04-25 09:40:25,https://api.github.com/repos/sq/JSIL/git/commits/f1eb2f71770f8f276491b32997702f9df307ee32,f1eb2f71770f8f276491b32997702f9df307ee32,"Introduce support for anonymous methods (pass null for the method name) so that you can more easily implement interface methods privately - see #439
For JS tests always write the output"
kg,2014-04-25 08:56:10,https://api.github.com/repos/sq/JSIL/git/commits/b21aa189b38b7fd16b54da791c21a5985378ec5a,b21aa189b38b7fd16b54da791c21a5985378ec5a,"Change test run compilation output from .js to .out
Allow writing tests in raw JS to exercise runtime library"
kg,2014-04-25 08:27:49,https://api.github.com/repos/sq/JSIL/git/commits/7ee5053f58543fd68af967c3b18cd4b8fb68b743,7ee5053f58543fd68af967c3b18cd4b8fb68b743,"Implement typeof(this) for static methods in JSReplacement (#424)

Conflicts:

	Tests/Tests.csproj"
kg,2014-04-25 08:17:16,https://api.github.com/repos/sq/JSIL/git/commits/07be25a0db1f8d361d69ccf414b68950868bb0cf,07be25a0db1f8d361d69ccf414b68950868bb0cf,Fix line endings.
kg,2014-04-25 08:13:08,https://api.github.com/repos/sq/JSIL/git/commits/94c59a936b884f1d4466398a17fb7e54047f7764,94c59a936b884f1d4466398a17fb7e54047f7764,Apply esardaya's fix from #378
kg,2014-04-25 03:25:57,https://api.github.com/repos/sq/JSIL/git/commits/91aeb09d74be72d4a5c5d0c7a8a5bc180edd4a91,91aeb09d74be72d4a5c5d0c7a8a5bc180edd4a91,"Merge pull request #439 from iskiselev/IDictionary

Dictionary implements IDictionary and IDictionary<TKey, TValue>"
iskiselev,2014-04-25 03:08:09,https://api.github.com/repos/sq/JSIL/git/commits/6d2b8a77ebaca170bc2eb9a0bedb872f2d0569fd,6d2b8a77ebaca170bc2eb9a0bedb872f2d0569fd,"Test added, problems fixed for Dictionary interface implementation.

--HG--
extra : amend_source : 3632e24194f8836ca4bd3a16c72f3613ce84475f"
kg,2014-04-25 02:14:43,https://api.github.com/repos/sq/JSIL/git/commits/b17135975ce422229bc8a563e403f1bfb5de59e2,b17135975ce422229bc8a563e403f1bfb5de59e2,"Merge pull request #438 from iskiselev/RemoveRangeFix

List.RemoveRange signature fixed."
iskiselev,2014-04-25 02:14:15,https://api.github.com/repos/sq/JSIL/git/commits/a39e3d49a7e67e2ad358b8490bcb7c75bf1c750c,a39e3d49a7e67e2ad358b8490bcb7c75bf1c750c,"Dictionary implements IDictionary and IDictionary<TKey, TValue>

--HG--
extra : source : 666e9778ab47cc7414d8f7ec00edb73be113beb6"
iskiselev,2014-04-24 23:24:41,https://api.github.com/repos/sq/JSIL/git/commits/a6328130b3cee769ed7a281ed40380a97fc16462,a6328130b3cee769ed7a281ed40380a97fc16462,"List.RemoveRange signature fixed. Fix #423.

--HG--
extra : source : d2c0e5dbed8c69cd0c8cbd415277b732e17208d6"
kg,2014-04-23 23:10:35,https://api.github.com/repos/sq/JSIL/git/commits/bd5c9f63eb6c2c56435c4cf65e5f6467af351f9f,bd5c9f63eb6c2c56435c4cf65e5f6467af351f9f,"Don't use indirect properties in $CopyInterfaceMethods since they incur a long-term performance hit
Remove a failing test that passes now"
kg,2014-04-23 22:53:47,https://api.github.com/repos/sq/JSIL/git/commits/afee39de907ba93271ccf8a7df4114a28e04426d,afee39de907ba93271ccf8a7df4114a28e04426d,Fix $makeImageDataForBytes deopting in V8
kg,2014-04-23 22:40:10,https://api.github.com/repos/sq/JSIL/git/commits/afbda0a5f58e15deec41a577134b37a2da62f524,afbda0a5f58e15deec41a577134b37a2da62f524,Fix ResourceConverter choking in cases where it ends up converting the same assembly resources multiple times.
kg,2014-04-23 22:32:57,https://api.github.com/repos/sq/JSIL/git/commits/c804786fa6b4c1adbb378e02922a2e2808c93632,c804786fa6b4c1adbb378e02922a2e2808c93632,"Fix GetInterfacesImplementedByType returning interfaces in an arbitrary order - now it returns the exact interface list from the type definition, followed by base class/inherited interfaces. This ensures that .Overrides indices work right."
kg,2014-04-23 22:19:45,https://api.github.com/repos/sq/JSIL/git/commits/78fb0f33df385a122d58e60fc353e9668f3ed609,78fb0f33df385a122d58e60fc353e9668f3ed609,Correct FixupInterfaces not correctly rebinding inherited interface methods when they were overridden.
kg,2014-04-23 22:19:23,https://api.github.com/repos/sq/JSIL/git/commits/5097a9219ca4f4fce5a84e7480f203b5fb3b8278,5097a9219ca4f4fce5a84e7480f203b5fb3b8278,Fix System.Type.GetInterfaces
kg,2014-04-23 22:02:42,https://api.github.com/repos/sq/JSIL/git/commits/276dbac751b9639c8a239a875b545f40380faab1,276dbac751b9639c8a239a875b545f40380faab1,Fix invocations of generic methods defined by generic/non-generic interfaces
kg,2014-04-23 21:51:45,https://api.github.com/repos/sq/JSIL/git/commits/93ea01db700bf6642b0e5dfc1767ffba0799ff43,93ea01db700bf6642b0e5dfc1767ffba0799ff43,"Partial fix for HashSet.GetEnumerator
Cleanup CopyInterfaceMethods"
kg,2014-04-23 21:23:07,https://api.github.com/repos/sq/JSIL/git/commits/18438a66cfddebe21b3d3a50d2bc9a866324bdc4,18438a66cfddebe21b3d3a50d2bc9a866324bdc4,Fix wrong signature for Dictionary.GetEnumerator
kg,2014-04-23 21:14:37,https://api.github.com/repos/sq/JSIL/git/commits/8130ffe379e6d7d9b4f140d3c6d918a15c35d30c,8130ffe379e6d7d9b4f140d3c6d918a15c35d30c,"Run FixupInterfaces before running static cctor, instead of during initial construction of type object. Maybe this actually fixes the System.Enum interface cycle..."
kg,2014-04-23 20:59:12,https://api.github.com/repos/sq/JSIL/git/commits/f95d97139bf2ea972689148221a7dd6db608947a,f95d97139bf2ea972689148221a7dd6db608947a,"Don't abort if an open signature couldn't be resolved, since there are cases where that's expected."
kg,2014-04-23 20:50:15,https://api.github.com/repos/sq/JSIL/git/commits/91fcb2d3cf618f2508cb1c98c377fed69dc029d0,91fcb2d3cf618f2508cb1c98c377fed69dc029d0,"Fix generic argument values for interfaces not being written to closed type instances
Fix generic parameters not having __IsClosed__
Fix some uses of !x.__IsClosed__
When renaming generic methods of an interface, rebind their signatures
Introduce MethodSignature.IsClosed"
kg,2014-04-23 20:06:33,https://api.github.com/repos/sq/JSIL/git/commits/7cb74bf7f4b0b31ee36387dde962a546df8f5c53,7cb74bf7f4b0b31ee36387dde962a546df8f5c53,Fix 'new' working on instances of open types in some scenarios
kg,2014-04-23 19:59:22,https://api.github.com/repos/sq/JSIL/git/commits/1b41a9d642f32dff2928b98cd9e401bb7c1c2e06,1b41a9d642f32dff2928b98cd9e401bb7c1c2e06,Checkpoint EnumerableToList fixes
kg,2014-04-23 19:37:24,https://api.github.com/repos/sq/JSIL/git/commits/32e8521a1c9ac286d45d742e1cd5e0d89f4f5808,32e8521a1c9ac286d45d742e1cd5e0d89f4f5808,"Fixed EnumerableToArray not passing through type parameter
Fix various issues with IEnumerable and IEnumerable`1:
  Linq.ToArray
  Dictionary`2.GetEnumerator
  List`1::.ctor(IEnumerable`1)"
kg,2014-04-23 19:18:40,https://api.github.com/repos/sq/JSIL/git/commits/d44b39ba86c56634c28affd597d415c603b400b5,d44b39ba86c56634c28affd597d415c603b400b5,Enable FixupInterfaces for System.Enum
kg,2014-04-23 19:00:14,https://api.github.com/repos/sq/JSIL/git/commits/236bc076c1f7ffa0612e6741b0ecbac152435054,236bc076c1f7ffa0612e6741b0ecbac152435054,These test cases didn't get merged???
kg,2014-04-23 18:59:50,https://api.github.com/repos/sq/JSIL/git/commits/1894736ba1ba6ac18af6821cc72d1d3ba1e32a8f,1894736ba1ba6ac18af6821cc72d1d3ba1e32a8f,Fix parameterInfo not being propagated
kg,2013-12-31 01:45:03,https://api.github.com/repos/sq/JSIL/git/commits/a684564c702b37bbf65a49692b8e3440f1d016b8,a684564c702b37bbf65a49692b8e3440f1d016b8,"Checkpoint:
  Don't fixup interfaces on enums because it forms a cycle ;_;
  Partial variance implementation for argument type/return type matching
  Fix ArrayEnumerator's definition of get_Current
  Fix AbstractEnumerator's definition of get_Current
  Fix AbstractEnumerable's definition of GetEnumerator"
kg,2013-12-31 01:32:58,https://api.github.com/repos/sq/JSIL/git/commits/13641d840c9b584e3fca3b4077bb6785d7bac521,13641d840c9b584e3fca3b4077bb6785d7bac521,Checkpoint: New FixupInterfaces implementation works for basic cases
kg,2013-12-31 01:24:50,https://api.github.com/repos/sq/JSIL/git/commits/11e5d5ab5d08cfd3181aac350814a37b53671b23,11e5d5ab5d08cfd3181aac350814a37b53671b23,"Checkpoint:
Add test for issue #298
Fix $FilterMethodsByArgumentTypes
Partially implement a correct approach to interface method fixup

Conflicts:

	Tests/Tests.csproj"
esardaya,2014-04-22 12:31:33,https://api.github.com/repos/sq/JSIL/git/commits/369ac815a9bb0f5a5d70f20f9a482994ee5c87d8,369ac815a9bb0f5a5d70f20f9a482994ee5c87d8,fixed unknown member bug
kg,2014-04-21 23:08:52,https://api.github.com/repos/sq/JSIL/git/commits/5050abdc6b2c274409cd2ce551cb8ffb5646d1e0,5050abdc6b2c274409cd2ce551cb8ffb5646d1e0,"Merge pull request #420 from iskiselev/InnerClassNameJS_352

Fixed generic parameter in inner classes (#352)"
iskiselev,2014-04-21 23:07:01,https://api.github.com/repos/sq/JSIL/git/commits/4dac5edd745733c144f2556953764d10f7928a9b,4dac5edd745733c144f2556953764d10f7928a9b,Test case added for #352.
iskiselev,2014-04-21 22:08:32,https://api.github.com/repos/sq/JSIL/git/commits/f05805cb920d759c690d53ea64f1965d58427437,f05805cb920d759c690d53ea64f1965d58427437,Fixed inner class name pattern for generic parameter (#352)
kg,2014-04-21 20:29:55,https://api.github.com/repos/sq/JSIL/git/commits/86ab20526f8aa6d3ed21fdee5026d7f858f711fa,86ab20526f8aa6d3ed21fdee5026d7f858f711fa,"Merge pull request #419 from iskiselev/InnerClassNameJS_352

Replace all inner classes names in JS with pattern ""Outer+Inner"""
iskiselev,2014-04-21 19:30:53,https://api.github.com/repos/sq/JSIL/git/commits/09fc541d4d5af77191b3754a4ba28bdc36feb7bd,09fc541d4d5af77191b3754a4ba28bdc36feb7bd,"Replace all inner classes names in JS with pattern ""Outer+Inner"" (""+"" instead of ""\"")"
iskiselev,2014-04-15 22:09:39,https://api.github.com/repos/sq/JSIL/git/commits/4db0b65be6fe528e9f829d37832fcb5dcd4243c0,4db0b65be6fe528e9f829d37832fcb5dcd4243c0,Reverted back removed submodules used in manual tests.
iskiselev,2014-04-14 23:17:57,https://api.github.com/repos/sq/JSIL/git/commits/5c02b08ba0adc2357c8995dcc98b951b3fc8908c,5c02b08ba0adc2357c8995dcc98b951b3fc8908c,Removed unused submodules for hg-git compatibility.
kg,2014-04-13 05:33:27,https://api.github.com/repos/sq/JSIL/git/commits/a1c58ec111a107e2d670d4a0548fcfc1f3460394,a1c58ec111a107e2d670d4a0548fcfc1f3460394,"Merge pull request #389 from iskiselev/ResourcesTranslation

Always resolve full path when generate resources."
kg,2014-04-13 05:25:14,https://api.github.com/repos/sq/JSIL/git/commits/b267d33ba6097c796e435a60b0b3cbe03fe8bc5f,b267d33ba6097c796e435a60b0b3cbe03fe8bc5f,"Merge pull request #390 from hach-que/master

Workaround Mono bug in AppDomain creation"
hach-que,2014-04-13 04:27:30,https://api.github.com/repos/sq/JSIL/git/commits/a47168d6917f2fe9e44446d9b5216f8232875f90,a47168d6917f2fe9e44446d9b5216f8232875f90,Workaround Mono bug in AppDomain creation
iskiselev,2014-04-12 15:28:29,https://api.github.com/repos/sq/JSIL/git/commits/d8010debf62946e61a2e67c9983b3248af3a7b24,d8010debf62946e61a2e67c9983b3248af3a7b24,Always resolve full path when generate resources. Fix #387.
kg,2014-04-12 06:30:39,https://api.github.com/repos/sq/JSIL/git/commits/e62cbd2d87f2865ef7b4c6e0803aeeb424934afc,e62cbd2d87f2865ef7b4c6e0803aeeb424934afc,"Merge pull request #386 from iskiselev/ResourcesTranslation

Resource processing fix."
iskiselev,2014-04-12 06:18:35,https://api.github.com/repos/sq/JSIL/git/commits/b982e6984f8db1e2318adfdd98036960205903ee,b982e6984f8db1e2318adfdd98036960205903ee,Refactored assembly resource processing in profiles.
iskiselev,2014-04-12 06:08:08,https://api.github.com/repos/sq/JSIL/git/commits/217b19b4a0f8e7800a173648ee507253c8710c6d,217b19b4a0f8e7800a173648ee507253c8710c6d,Typo error fixed.
iskiselev,2014-04-12 03:26:11,https://api.github.com/repos/sq/JSIL/git/commits/849ecc4aea9949cacd656adda5d39666a506f2ab,849ecc4aea9949cacd656adda5d39666a506f2ab,Extract resourse from all assemblies. Extract resources in default profile. Fix #385
kg,2014-03-31 23:00:34,https://api.github.com/repos/sq/JSIL/git/commits/c8b8f1c73a62e5f18557f121a20fd570311a02a7,c8b8f1c73a62e5f18557f121a20fd570311a02a7,"Merge pull request #360 from iskiselev/GenericInterfaceCall

Fixed call generic method from interface (#348)"
iskiselev,2014-03-31 23:06:07,https://api.github.com/repos/sq/JSIL/git/commits/f08f651e727f70800cdcd4f203f59395f2364edb,f08f651e727f70800cdcd4f203f59395f2364edb,Test for interface generic call added.
iskiselev,2014-03-31 22:46:10,https://api.github.com/repos/sq/JSIL/git/commits/f8bcc94181aae82d46fd3350d6c6a84527e76ebe,f8bcc94181aae82d46fd3350d6c6a84527e76ebe,Fixed call generic method from interface (#348)
kg,2014-03-30 17:23:04,https://api.github.com/repos/sq/JSIL/git/commits/de0e0b4bb023ccd4aaa9eb8897c746c035f35384,de0e0b4bb023ccd4aaa9eb8897c746c035f35384,"Merge pull request #355 from iskiselev/master

Fix LINQ method implementation for #353. It is not full #353 fix."
iskiselev,2014-03-30 17:16:47,https://api.github.com/repos/sq/JSIL/git/commits/18ca8e82e092f27f02f510c03c3413ec07aae900,18ca8e82e092f27f02f510c03c3413ec07aae900,Fix LINQ method implementation for #353. It is not full #353 fix.
kg,2014-03-25 03:10:53,https://api.github.com/repos/sq/JSIL/git/commits/aae7adba4fdb322474e7551755b23b7fbcd527b6,aae7adba4fdb322474e7551755b23b7fbcd527b6,"Merge pull request #351 from iskiselev/JSIL.Bootstrap.DateTime

Removed unimplemented methods from JSIL.Bootstrap.DateTime.js. Fix #335."
iskiselev,2014-03-25 00:41:00,https://api.github.com/repos/sq/JSIL/git/commits/358ba143841f6cc0b58d929c0c38fa272606507f,358ba143841f6cc0b58d929c0c38fa272606507f,Removed unimplemented methods from JSIL.Bootstrap.DateTime.js. Fix #335.
kg,2014-03-23 10:34:57,https://api.github.com/repos/sq/JSIL/git/commits/203eabdcca25164ddbde76902ec6c6f267540246,203eabdcca25164ddbde76902ec6c6f267540246,Fix #342 and add test
kg,2014-03-23 10:30:43,https://api.github.com/repos/sq/JSIL/git/commits/cd77b94b297c6bd8e24d69b9613e1d359bdf84d2,cd77b94b297c6bd8e24d69b9613e1d359bdf84d2,Fix noisy codegen for flags enums that have an 'Any' value
kg,2014-03-23 10:23:01,https://api.github.com/repos/sq/JSIL/git/commits/210858de7689ace4bd461ff200887d5f9b839ef2,210858de7689ace4bd461ff200887d5f9b839ef2,Fix GetConstructors and GetConstructor (#346)
kg,2014-03-23 10:18:46,https://api.github.com/repos/sq/JSIL/git/commits/497f7d6107f3f92a9fb8c51fd6533cfcf1eeac09,497f7d6107f3f92a9fb8c51fd6533cfcf1eeac09,Add a test case for constructor attributes.
kg,2014-03-23 10:12:50,https://api.github.com/repos/sq/JSIL/git/commits/12db016ca46aac40f48ad346b4f84f7c86bb1680,12db016ca46aac40f48ad346b4f84f7c86bb1680,Test fixes
kg,2014-03-23 10:06:26,https://api.github.com/repos/sq/JSIL/git/commits/0cb6ecd8f3717c050b1ccf14e89f7387f2da1e4c,0cb6ecd8f3717c050b1ccf14e89f7387f2da1e4c,"Implement parameter attributes (#346)
Implement parameter names in reflection (currently off by default unless the parameter has attributes)
Replace Cecil's stupid forward slashes with + characters to match .NET"
kg,2014-03-23 09:23:33,https://api.github.com/repos/sq/JSIL/git/commits/d977bf8ee4b961fae6d0ca69622d040c0f45070e,d977bf8ee4b961fae6d0ca69622d040c0f45070e,Implement interface attributes (#346)
kg,2014-03-23 08:37:56,https://api.github.com/repos/sq/JSIL/git/commits/ddc20ef09a1d71d8f684ff5dbc33d7f47c9a44d7,ddc20ef09a1d71d8f684ff5dbc33d7f47c9a44d7,Add test case from #345
kg,2014-03-23 08:23:25,https://api.github.com/repos/sq/JSIL/git/commits/ae111d00a2fff696612eca73fb83aa0fdb50f3a0,ae111d00a2fff696612eca73fb83aa0fdb50f3a0,Oops.
kg,2014-03-23 08:19:33,https://api.github.com/repos/sq/JSIL/git/commits/1d5d29422f0dc0a95bf6258f6261fdd16743a8cb,1d5d29422f0dc0a95bf6258f6261fdd16743a8cb,Implement IsByRef (#340)
kg,2014-03-23 07:03:17,https://api.github.com/repos/sq/JSIL/git/commits/78a089fbab115d50774e99e2038fce86740af3a1,78a089fbab115d50774e99e2038fce86740af3a1,"Implement CanRead/CanWrite (#340)
Fix GetGetMethod/GetSetMethod for static properties"
kg,2014-03-23 06:52:47,https://api.github.com/repos/sq/JSIL/git/commits/0f04bfb28ce5775b107f7aa0866c2dd03c7a6200,0f04bfb28ce5775b107f7aa0866c2dd03c7a6200,Implement IsInterface
kg,2014-03-23 06:44:36,https://api.github.com/repos/sq/JSIL/git/commits/d49390f619d0ed78a47190a846da0408c1c01af6,d49390f619d0ed78a47190a846da0408c1c01af6,Fix IsGenericParameter and GetInterfaces (#340)
kg,2014-03-11 22:48:16,https://api.github.com/repos/sq/JSIL/git/commits/afbf8d08997680347fb4c030020e1f5242ba9950,afbf8d08997680347fb4c030020e1f5242ba9950,"Merge pull request #334 from iskiselev/XmlDeserializationMultiAssembly

Support of multiple serialization assemblies."
iskiselev,2014-03-11 08:54:50,https://api.github.com/repos/sq/JSIL/git/commits/6e3454801ad43ebc2d8a516f383c27693e9bf0f9,6e3454801ad43ebc2d8a516f383c27693e9bf0f9,Changed Assembly .toString() with Assembly.FullName.
iskiselev,2014-03-11 07:54:17,https://api.github.com/repos/sq/JSIL/git/commits/e963d761a74806b50330340fd683998288c2e3e9,e963d761a74806b50330340fd683998288c2e3e9,Fix #328. Only System.Xml.XmlConvert declared.
iskiselev,2014-03-11 04:20:27,https://api.github.com/repos/sq/JSIL/git/commits/4b1f88b2d729f8633a24f6a169075e06710af986,4b1f88b2d729f8633a24f6a169075e06710af986,Support of multiple serialization assemblies.
kg,2014-03-10 19:54:23,https://api.github.com/repos/sq/JSIL/git/commits/f0d308065ce20ee07c3ea8feb064c811a7f7914d,f0d308065ce20ee07c3ea8feb064c811a7f7914d,Update README.md
kg,2014-03-09 21:52:40,https://api.github.com/repos/sq/JSIL/git/commits/6e84e9073fab9023354f54a5e5b3798c7de36879,6e84e9073fab9023354f54a5e5b3798c7de36879,"Merge pull request #324 from iskiselev/master

Added JSStubOnly attribute for simplification creation of class sutbs."
iskiselev,2014-02-26 23:28:25,https://api.github.com/repos/sq/JSIL/git/commits/dffe291e21146bc0ef560eddec02dcf494ad76eb,dffe291e21146bc0ef560eddec02dcf494ad76eb,"Rewrited test for JSStubOnly attribute that makes it muh easy to understand.

--HG--
rename : Tests/SpecialTestCases/ClassMarkedAsStubOnly.cs => Tests/SpecialTestCases/ClassMarkedWithMetaAttibutes.cs"
iskiselev,2014-02-26 03:01:37,https://api.github.com/repos/sq/JSIL/git/commits/d92c89b1f334fd9d29633825a89540b6a21ea985,d92c89b1f334fd9d29633825a89540b6a21ea985,Added JSStubOnly attribute for simplification creation of class sutbs.
kg,2014-02-25 23:56:59,https://api.github.com/repos/sq/JSIL/git/commits/c5677991ecfca3faa6e91ba63f501c767a684d0b,c5677991ecfca3faa6e91ba63f501c767a684d0b,Tenative fix for issue #323.
kg,2014-02-25 09:08:52,https://api.github.com/repos/sq/JSIL/git/commits/736f3a886d21b8370692b6a8996449c58d6727ac,736f3a886d21b8370692b6a8996449c58d6727ac,"Tenative fix for issue #322: Fix the signature cacher being willing to cache signatures containing open types because it thought it could resolve them (in reality, it was resolving them - to OTHER open types)"
kg,2014-02-25 04:20:34,https://api.github.com/repos/sq/JSIL/git/commits/88407ef36c0ecb81ee706b63ed708dc0f9af58c4,88407ef36c0ecb81ee706b63ed708dc0f9af58c4,Fix Dictionary`2's KeyCollection and ValueCollection
kg,2014-02-25 03:43:53,https://api.github.com/repos/sq/JSIL/git/commits/75eb9893f7b1788f6a80082c660bf75ac0b6a436,75eb9893f7b1788f6a80082c660bf75ac0b6a436,Fix external method stub toStringing undefined sometimes
kg,2014-02-25 03:32:44,https://api.github.com/repos/sq/JSIL/git/commits/7a3c6e09433b5eee04baced4463a7ed61ee2c418,7a3c6e09433b5eee04baced4463a7ed61ee2c418,Fix those Equals/GetHashCode warnings since I'm actually not totally sure they are spurious.
kg,2014-02-25 03:14:43,https://api.github.com/repos/sq/JSIL/git/commits/fc6b1b334eea55d4817f97e7942ec4e9bcf44611,fc6b1b334eea55d4817f97e7942ec4e9bcf44611,"Kill dead barrier generator code
ReSharper cleanup"
kg,2014-02-25 02:57:30,https://api.github.com/repos/sq/JSIL/git/commits/be6a38519efc0605325b2367fcf5d2f408286319,be6a38519efc0605325b2367fcf5d2f408286319,ReSharper cleanup
kg,2014-02-25 02:30:57,https://api.github.com/repos/sq/JSIL/git/commits/fd35757cbc05e8eb735e1a2233a352fc2e1bb02e,fd35757cbc05e8eb735e1a2233a352fc2e1bb02e,ReSharper cleanup
kg,2014-02-10 06:05:38,https://api.github.com/repos/sq/JSIL/git/commits/1b797ed09bb937931ee16e260f09121edee18aec,1b797ed09bb937931ee16e260f09121edee18aec,Fix calling generated struct constructors without any argument list
kg,2014-02-10 06:03:30,https://api.github.com/repos/sq/JSIL/git/commits/a793ccf3f29fbc4ae47e63825acad6329d28c3eb,a793ccf3f29fbc4ae47e63825acad6329d28c3eb,Fix some incorrect signatures in core types
kg,2014-02-10 06:03:23,https://api.github.com/repos/sq/JSIL/git/commits/a2a1550db12425df6945003b967239749a2a2020,a2a1550db12425df6945003b967239749a2a2020,"Fix stupid creation of MethodSignature instance in global scope
Solve some various problems with positional generic parameters and how they interact with overloaded method resolution
Fix a stupid bug in Reference.Of that makes it break when fed a positional generic parameter"
kg,2014-02-10 06:02:00,https://api.github.com/repos/sq/JSIL/git/commits/7c2059500f2e72b7ea3e86f8d1d3d2d3b80d6ad5,7c2059500f2e72b7ea3e86f8d1d3d2d3b80d6ad5,Fix some incorrect method signatures in Reflection
kg,2014-02-10 06:01:33,https://api.github.com/repos/sq/JSIL/git/commits/e7a4261f91f68418561d01dd902773c6bf0c565e,e7a4261f91f68418561d01dd902773c6bf0c565e,Fix infinite loop if initializing readonly storage fails.
kg,2014-02-01 03:02:21,https://api.github.com/repos/sq/JSIL/git/commits/aa44314a87778eece8764e90cff2100a31842503,aa44314a87778eece8764e90cff2100a31842503,Add a workaround for the broken Blob implementation in IE10. This fixes sound effects.
kg,2013-12-30 23:39:13,https://api.github.com/repos/sq/JSIL/git/commits/e9063c946c82a84f65189fabdae2f671705d1440,e9063c946c82a84f65189fabdae2f671705d1440,"Fix issue #310 and add a test:
  AssemblyTranslator translates information on events now.
  Event information is populated into reflection data structures.
  EventInfo.Get(Add|Remove)Method along with EventInfo.(Add|Remove)EventHandler are implemented."
kg,2013-12-30 23:13:17,https://api.github.com/repos/sq/JSIL/git/commits/51a5ad2fdd64a5cfd46b087e60a3a65bcda7d498,51a5ad2fdd64a5cfd46b087e60a3a65bcda7d498,"Add test case and tenative fix for issue #314
Make Dictionary enumerator implementation more robust since the old hack isn't adequate after the #314 fix"
kg,2013-12-14 19:28:23,https://api.github.com/repos/sq/JSIL/git/commits/d7f0f05bc01b606e274981596d5a26c9bf08b930,d7f0f05bc01b606e274981596d5a26c9bf08b930,"Fix marshalling functions using TypedArray.set, since it performs miserably"
kg,2013-12-08 08:32:56,https://api.github.com/repos/sq/JSIL/git/commits/b9d297d070538f843ca172ea6b3c2e245356878a,b9d297d070538f843ca172ea6b3c2e245356878a,Fix issue #305 and add a test.
kg,2013-12-08 08:20:07,https://api.github.com/repos/sq/JSIL/git/commits/6cad32857eeaa6e0630f20ad13ee583dda89edf8,6cad32857eeaa6e0630f20ad13ee583dda89edf8,"Fix issue #309 and add tests.
Add a failing test case for a type name issue revealed by issue #309."
kg,2013-12-08 01:30:45,https://api.github.com/repos/sq/JSIL/git/commits/89ae31ade82e3538aa25f17299d1c8dde206ba51,89ae31ade82e3538aa25f17299d1c8dde206ba51,Fix issue #302 and add test
kg,2013-12-08 01:25:53,https://api.github.com/repos/sq/JSIL/git/commits/9b815bb2165096cb477caef7fc3196939a4eef9f,9b815bb2165096cb477caef7fc3196939a4eef9f,Fix issue #306 and add test
kg,2013-12-08 01:16:16,https://api.github.com/repos/sq/JSIL/git/commits/2606c45daa1ed96ff947d868c5e2e7df25483f68,2606c45daa1ed96ff947d868c5e2e7df25483f68,Fix issue #303
kg,2013-12-08 00:29:25,https://api.github.com/repos/sq/JSIL/git/commits/d5c1f701a12f2101522948734b69de39f8f181e6,d5c1f701a12f2101522948734b69de39f8f181e6,Fix issue #307 and add a test.
kg,2013-12-08 00:17:41,https://api.github.com/repos/sq/JSIL/git/commits/7822b7395561f79ff01a9e4cd2930e33ee34e36c,7822b7395561f79ff01a9e4cd2930e33ee34e36c,Fix issue #304 and add test.
kg,2013-11-16 19:23:10,https://api.github.com/repos/sq/JSIL/git/commits/6ac0a169ec25c363aaa0bb0ebbae103562abd1ca,6ac0a169ec25c363aaa0bb0ebbae103562abd1ca,Made JSIL.Pointer constructor faster
kg,2013-11-16 19:16:13,https://api.github.com/repos/sq/JSIL/git/commits/0b0becd56a49153b72742e61779e729608a97f1d,0b0becd56a49153b72742e61779e729608a97f1d,Optimized JSIL.CreateInstanceOfType.
kg,2013-11-16 18:42:19,https://api.github.com/repos/sq/JSIL/git/commits/42505944f0f12816d55afe694f7f25b1e32208f4,42505944f0f12816d55afe694f7f25b1e32208f4,Fix the method signature cacher being too aggressive about caching signatures locally (because it thought a signature was open when it was actually closed. Cecil's type system is awful.)
kg,2013-11-16 18:06:03,https://api.github.com/repos/sq/JSIL/git/commits/daf9b7046d7aeabd3253cf1c8dda6bad03324873,daf9b7046d7aeabd3253cf1c8dda6bad03324873,"Stop trying to pass WebGL objects off as integers, because that's not gonna work reliably.
Introduce a simple handle table in the OpenGL backend."
kg,2013-11-16 16:57:41,https://api.github.com/repos/sq/JSIL/git/commits/8f1e42155b56b4aa62b8865d4358d554cc02b72c,8f1e42155b56b4aa62b8865d4358d554cc02b72c,Fix a minor codegen defect in element proxies.
kg,2013-11-16 16:43:42,https://api.github.com/repos/sq/JSIL/git/commits/2d7594a31da873b4f730059332f0563f3002b342,2d7594a31da873b4f730059332f0563f3002b342,"Disable a test that doesn't work against latest debug js.exe
Force on element proxy optimization in the performance tests."
kg,2013-11-16 16:32:02,https://api.github.com/repos/sq/JSIL/git/commits/49c363603661c9c9595cb558171e2d978c0ce654,49c363603661c9c9595cb558171e2d978c0ce654,Replace a lot of 'throw new Error(' uses with 'JSIL.RuntimeError(' because throw statements prevent inlining in spidermonkey
kg,2013-11-16 16:14:26,https://api.github.com/repos/sq/JSIL/git/commits/606534b5d141fb42ee7a101fb361cc7e38881835,606534b5d141fb42ee7a101fb361cc7e38881835,Make the element proxy optimizations optional and turn them off by default.
kg,2013-11-16 16:13:58,https://api.github.com/repos/sq/JSIL/git/commits/992688d66a2e0a24619f9c4bb6253277e3e067a3,992688d66a2e0a24619f9c4bb6253277e3e067a3,"Fix a spidermonkey bailout in StructPointer.getProxy
Unroll small memcpy loops in struct marshal/unmarshal functions"
kg,2013-11-16 16:13:27,https://api.github.com/repos/sq/JSIL/git/commits/98edc3fa58950b770c55a5b49ed0ef86d573e49d,98edc3fa58950b770c55a5b49ed0ef86d573e49d,Update spidermonkey builds
kg,2013-11-16 15:00:48,https://api.github.com/repos/sq/JSIL/git/commits/a62cbdb6286f878441283032024358e3306d02b2,a62cbdb6286f878441283032024358e3306d02b2,"When passing the result of a pointer dereference to a function, pass an element proxy instead. The pointer will cache a single reusable proxy instance, which reduces GC pressure and defers unpacking inside loops."
kg,2013-11-16 14:46:59,https://api.github.com/repos/sq/JSIL/git/commits/a711c5452db792b1da7e89e455fb13e09e440096,a711c5452db792b1da7e89e455fb13e09e440096,"When passing a packed array element as a function argument, pass an element proxy instead. This allows proxy hoisting to operate on loops and make things *much* faster. The proxy is also much lighter-weight (GC wise) than an actual unpacked element."
kg,2013-11-16 14:17:28,https://api.github.com/repos/sq/JSIL/git/commits/dff61300dd9204dc5ea07beca0ad6d78be18a81b,dff61300dd9204dc5ea07beca0ad6d78be18a81b,"Fix broken struct copies for structs containing chars
Fix InitializeStructClone test case"
kg,2013-11-16 14:08:31,https://api.github.com/repos/sq/JSIL/git/commits/494689f28ddeb45e2abafe3d874970e9459e2cf2,494689f28ddeb45e2abafe3d874970e9459e2cf2,"Fix structs getting cloned when an initializer expression is applied to them
Fix default(T) getting cloned if T is a struct"
kg,2013-11-15 17:50:00,https://api.github.com/repos/sq/JSIL/git/commits/364a16cabe95b8ca594ab791bcb0bef4f0c7717a,364a16cabe95b8ca594ab791bcb0bef4f0c7717a,Create named functions in MakeFieldMarshaller to improve debugging
kg,2013-11-15 17:18:43,https://api.github.com/repos/sq/JSIL/git/commits/ae1ae3bf71811dee14a29284e7705a7a5054be6a,ae1ae3bf71811dee14a29284e7705a7a5054be6a,"Generate a slightly better marshaller for structs that only contain other structs
Type hint assignments in copiers"
kg,2013-11-15 16:57:48,https://api.github.com/repos/sq/JSIL/git/commits/6b2601ee0cdfbbc3c3faab40b6c18c26b5d7377f,6b2601ee0cdfbbc3c3faab40b6c18c26b5d7377f,"Emit memcpy intrinsic in the shape of emscripten's memcpy, because spidermonkey optimizes it
scratch_{fieldName}, not scratch{fieldName} to avoid collision with a field named Bytes"
kg,2013-11-15 15:12:59,https://api.github.com/repos/sq/JSIL/git/commits/c64f3b7f55af52976482a61a6054247e9d8c0e3b,c64f3b7f55af52976482a61a6054247e9d8c0e3b,"Introduce a more efficient struct marshal/unmarshal function generator that generates custom scratch buffers for each distinct type, offloading more work to the JS VM."
kg,2013-11-13 07:13:01,https://api.github.com/repos/sq/JSIL/git/commits/4f3891dae3ab8edc2ee8af3b22db4d54255429b3,4f3891dae3ab8edc2ee8af3b22db4d54255429b3,Version bump to 0.7.8
kg,2013-11-13 05:46:56,https://api.github.com/repos/sq/JSIL/git/commits/31544c3d5fc02b542528469ee114986c196c1ee5,31544c3d5fc02b542528469ee114986c196c1ee5,Tweak some Int64 code slightly
kg,2013-11-13 05:17:25,https://api.github.com/repos/sq/JSIL/git/commits/c6b932d84497777f2c55c589d12b8389862ea9ea,c6b932d84497777f2c55c589d12b8389862ea9ea,"Simplify the codegen for count-based overload dispatch in constructors and overloaded method groups
Fix test runner not dumping stderr when no exceptions were detected"
kg,2013-11-13 04:55:22,https://api.github.com/repos/sq/JSIL/git/commits/4916235cc71d95a26ee3b571722c5b862258eca0,4916235cc71d95a26ee3b571722c5b862258eca0,Slightly easier-to-scan formatting for output JS.
kg,2013-11-13 04:49:53,https://api.github.com/repos/sq/JSIL/git/commits/6a139a98f09ef4073bb7414e4f5688b74499bd4a,6a139a98f09ef4073bb7414e4f5688b74499bd4a,"Deprecate JSIL.MakeClass/JSIL.MakeStruct in favor of a simpler JSIL.MakeType which accepts an arguments dict
Introduce a constructor optimization where if the max # of constructor arguments is known, Function.apply is never used. This works around a stupid V8 deoptimization."
kg,2013-11-13 04:12:40,https://api.github.com/repos/sq/JSIL/git/commits/a4cc85fe08026e10d5309ea0c7e471101b94c1f3,a4cc85fe08026e10d5309ea0c7e471101b94c1f3,XNA graphics tweaks to improve performance of ProceduralTextures sample.
kg,2013-11-13 03:55:28,https://api.github.com/repos/sq/JSIL/git/commits/829a562020afce8bb81365d3506b696103f2800a,829a562020afce8bb81365d3506b696103f2800a,Update to latest spidermonkey shell
kg,2013-11-13 03:42:30,https://api.github.com/repos/sq/JSIL/git/commits/68f784b42c0d4d36c26cb3e08e3a193828d8864a,68f784b42c0d4d36c26cb3e08e3a193828d8864a,"Checkpoint:
Suppress MemberwiseClone when reading out of an element proxy. Element proxy properties always return freshly unpacked structs.
Turn off tracing for the retargeting optimizer"
kg,2013-11-13 03:38:59,https://api.github.com/repos/sq/JSIL/git/commits/400a47425d3e3262fc29b17fc824666a6c8a2cbb,400a47425d3e3262fc29b17fc824666a6c8a2cbb,"Checkpoint:
Suppress MemberwiseClone on RHS when LHS is a member of a packed array element proxy (the copy is pointless since the assignment immediately unpacks the data into the array.)"
kg,2013-11-13 03:31:55,https://api.github.com/repos/sq/JSIL/git/commits/22bbc3ed3c22819ab1cf6f4532c80979890655f7,22bbc3ed3c22819ab1cf6f4532c80979890655f7,"Checkpoint:
Be slightly less aggressive about hoisting element proxy allocations
Basic implementation of pointless proxy retarget elimination"
kg,2013-11-13 03:26:53,https://api.github.com/repos/sq/JSIL/git/commits/e95196c66d8e47a989161f7fd97d2d875bc565a4,e95196c66d8e47a989161f7fd97d2d875bc565a4,"Checkpoint:
Fix IsEffectivelyConstant returning true for for JSPropertyAccess"
kg,2013-11-13 03:13:41,https://api.github.com/repos/sq/JSIL/git/commits/4a097bc912da6a8ba4157a262590f23b9a0c5e3a,4a097bc912da6a8ba4157a262590f23b9a0c5e3a,"Checkpoint:
Improve accuracy of static analysis information by invalidating it in a couple more cases.
Ensure static analyzer node indices match real node indices."
kg,2013-11-13 02:40:19,https://api.github.com/repos/sq/JSIL/git/commits/3152c85ece216886bb720dcf95d6a9ac04a0a4d5,3152c85ece216886bb720dcf95d6a9ac04a0a4d5,"Checkpoint:
Fix incorrect implementation of IsConstant for some identifiers"
kg,2013-11-13 02:36:19,https://api.github.com/repos/sq/JSIL/git/commits/149c39de8c7e899a152671d9cfe91d21ea7c3dbe,149c39de8c7e899a152671d9cfe91d21ea7c3dbe,"Checkpoint:
Clean up raw output identifiers
Partially introduce a retargeting optimizer pass"
kg,2013-11-13 02:17:52,https://api.github.com/repos/sq/JSIL/git/commits/8123aa6ba20355fee9f5d8dc66f3904e1d9bb933,8123aa6ba20355fee9f5d8dc66f3904e1d9bb933,"Checkpoint:
Make allocation hoisting for element proxies more efficient
Fix a bug in element proxy retargeting"
kg,2013-11-13 02:07:01,https://api.github.com/repos/sq/JSIL/git/commits/50f4797371523e499a8089a70f4201033070790f,50f4797371523e499a8089a70f4201033070790f,"Checkpoint:
Hoist packed array element proxy allocations
Add a test for #287"
kg,2013-11-12 13:57:42,https://api.github.com/repos/sq/JSIL/git/commits/89fbf54928a39b3c47b56cadb578a6aa6f7063a6,89fbf54928a39b3c47b56cadb578a6aa6f7063a6,"Merge pull request #282 from nanexcool/vector2-tostring

Vectors ToString and Clamp"
nanexcool,2013-11-05 23:16:44,https://api.github.com/repos/sq/JSIL/git/commits/63e4d4cf696f295f7a157f717a36c2abcbdd3e69,63e4d4cf696f295f7a157f717a36c2abcbdd3e69,"Clamp method for Vectors

Added static methods for clamping Vector2, Vector3 and Vector4. Only
added methods that return values, was having trouble with methods that
pass values by reference and have out values (/* ref */)"
nanexcool,2013-11-05 22:10:53,https://api.github.com/repos/sq/JSIL/git/commits/2367c2bf5477a6b40033676f4ede9e85b4baa3e9,2367c2bf5477a6b40033676f4ede9e85b4baa3e9,Vector4 ToString
nanexcool,2013-11-04 20:41:36,https://api.github.com/repos/sq/JSIL/git/commits/0f7f8a9f32dda2fab64ea1cc8db380a899ec05ae,0f7f8a9f32dda2fab64ea1cc8db380a899ec05ae,"Vector2, Vector3 and Rectangle ToString

Added missing ToString method for Vector2, Vector3 and Rectangle, so
they behave like their XNA counterparts"
kg,2013-11-01 23:41:23,https://api.github.com/repos/sq/JSIL/git/commits/2603403e899e0862d565b7b6b3f2edc7db07291f,2603403e899e0862d565b7b6b3f2edc7db07291f,Add a test for 5 argument Array.Copy
kg,2013-11-01 23:14:01,https://api.github.com/repos/sq/JSIL/git/commits/0f52afe02ca40ec4aaf3cdbd9a08f91cf002f015,0f52afe02ca40ec4aaf3cdbd9a08f91cf002f015,"Expand System.BitConverter to support single/double variants of GetBytes and ToXxx (#280)
Add a test covering System.BitConverter
Use typed arrays to implement BitConverter methods
Fix InterfaceBuilder.Method to throw if you pass it a non-function"
kg,2013-10-30 11:07:19,https://api.github.com/repos/sq/JSIL/git/commits/023cc3a68800b1a85bdcd212b0f03d7f230ed0e3,023cc3a68800b1a85bdcd212b0f03d7f230ed0e3,"Fix buggy GetEnumerator fallback method causing infinite recursion in some cases
Implement HashSet.GetEnumerator (#278)"
kg,2013-10-25 10:38:05,https://api.github.com/repos/sq/JSIL/git/commits/5cc314af0744a2c6dd83c3d3de7258cc0bd78d41,5cc314af0744a2c6dd83c3d3de7258cc0bd78d41,Add basic support for AL_PITCH
kg,2013-10-25 10:25:52,https://api.github.com/repos/sq/JSIL/git/commits/988fd4041edde32bcd03ca405f9b2e789755c8a4,988fd4041edde32bcd03ca405f9b2e789755c8a4,"OpenAL cleanups: Implement bits-per-sample and channel count queries so that MonoGame knows how long a sound is
Remove some placeholders for unimplemented AL functions"
kg,2013-10-25 10:12:58,https://api.github.com/repos/sq/JSIL/git/commits/55d68f38fd69729a319ec6b630531321f0cda15f,55d68f38fd69729a319ec6b630531321f0cda15f,Added basic analog stick/button input support for MonoGame's SDL-based GamePad implementation. Dpad and stuff are probably still broken.
kg,2013-10-23 11:20:09,https://api.github.com/repos/sq/JSIL/git/commits/57d2b93844129133e5a1e4071433834844d1ba32,57d2b93844129133e5a1e4071433834844d1ba32,Add basic OpenAL playback support courtesy of emscripten's OpenAL implementation.
kg,2013-10-23 10:11:51,https://api.github.com/repos/sq/JSIL/git/commits/60c1b6a14eff0edfef7a68f37156a7692a4914bb,60c1b6a14eff0edfef7a68f37156a7692a4914bb,"Implement IntPtr.op_Inequality
Add basic OpenAL context management support"
kg,2013-10-23 09:21:32,https://api.github.com/repos/sq/JSIL/git/commits/ffd73a8b84efc4f771b547a73d6ebac04174e0b2,ffd73a8b84efc4f771b547a73d6ebac04174e0b2,Add basic support for OpenTK keyboard input.
kg,2013-10-23 08:29:32,https://api.github.com/repos/sq/JSIL/git/commits/b2b44de4a7c8de384ec024694d342f46fc367c7c,b2b44de4a7c8de384ec024694d342f46fc367c7c,"Fallback to 'experimental-webgl' context if 'webgl' is not available, with a warning."
kg,2013-10-23 08:29:17,https://api.github.com/repos/sq/JSIL/git/commits/cdc17f7ef53710acd37fea25241e9d0129b46e60,cdc17f7ef53710acd37fea25241e9d0129b46e60,Implement Linq AsEnumerable
kg,2013-10-22 08:01:40,https://api.github.com/repos/sq/JSIL/git/commits/5f3f459794b3732c617786c2611bf329bb70c832,5f3f459794b3732c617786c2611bf329bb70c832,"If a method signature/interface method is invoked on a null/undefined object, throw a clear custom Error instead of letting the JS runtime do it."
kg,2013-10-10 21:08:03,https://api.github.com/repos/sq/JSIL/git/commits/cfca08c4c51e38d77ced2b01cc8211d2fcda20aa,cfca08c4c51e38d77ced2b01cc8211d2fcda20aa,Update website
kg,2013-10-03 10:07:57,https://api.github.com/repos/sq/JSIL/git/commits/ea67d6d187af36d5d7ced23401028ebcc28524b8,ea67d6d187af36d5d7ced23401028ebcc28524b8,Add basic support for Diagnostics.Trace in browser (issue #272)
kg,2013-10-03 09:50:49,https://api.github.com/repos/sq/JSIL/git/commits/50f47528eed1e1956396bdab2a713bcea784095a,50f47528eed1e1956396bdab2a713bcea784095a,Checkpoint Diagnostics.Trace implementation
kg,2013-10-02 05:41:39,https://api.github.com/repos/sq/JSIL/git/commits/5939a2c3960787fe758211401a0ed61db502ac0b,5939a2c3960787fe758211401a0ed61db502ac0b,Add basic support for MethodInfo.Invoke (issue #274)
kg,2013-10-02 05:28:57,https://api.github.com/repos/sq/JSIL/git/commits/cb8c3cbb4da3b812f300b4e78b4aae86a49f2e34,cb8c3cbb4da3b812f300b4e78b4aae86a49f2e34,Tweak 274 test case a bit so it passes and note an incompatibility with .NET
kg,2013-10-02 05:16:54,https://api.github.com/repos/sq/JSIL/git/commits/468d15be37c287643d82aae0aea8af116911854e,468d15be37c287643d82aae0aea8af116911854e,Fix interface members having their reflection visibility default to private instead of public (issue #274)
kg,2013-10-02 05:02:52,https://api.github.com/repos/sq/JSIL/git/commits/f6d3c741b20145c55e035079b357ba620ffc7c7c,f6d3c741b20145c55e035079b357ba620ffc7c7c,"Fix issue #271 and add a test.
Fix signature of ArrayList.ToArray"
kg,2013-09-24 11:27:56,https://api.github.com/repos/sq/JSIL/git/commits/d69f7a70261394db041f2154cf968edf91ee54b3,d69f7a70261394db041f2154cf968edf91ee54b3,"Merge remote-tracking branch 'remotes/dlbd/char-is'

Conflicts:
	Tests/Tests.csproj"
kg,2013-09-22 00:54:46,https://api.github.com/repos/sq/JSIL/git/commits/46237a12a9859b2a8914a4747e9ffa02061ef0a1,46237a12a9859b2a8914a4747e9ffa02061ef0a1,Use new Verbatim.Expression overload in Pathtracer. Fixes issue #264.
kg,2013-09-22 00:49:16,https://api.github.com/repos/sq/JSIL/git/commits/095e2184e0a563368d807ba6f8a782197dfb0320,095e2184e0a563368d807ba6f8a782197dfb0320,"Verbatim.Expression optionally accepts a list of indexed arguments (they can be referred to with $x, like '$0')."
kg,2013-09-22 00:00:49,https://api.github.com/repos/sq/JSIL/git/commits/f79a78b7c08d2e4e8ec82f019dd0a029e3b9c670,f79a78b7c08d2e4e8ec82f019dd0a029e3b9c670,Fix issue #268 and add test.
kg,2013-09-21 00:17:52,https://api.github.com/repos/sq/JSIL/git/commits/bdb742c7fdeed9f15ecd0648d70ad0c56e35033f,bdb742c7fdeed9f15ecd0648d70ad0c56e35033f,Fix issue #243 and update test.
kg,2013-09-19 16:21:50,https://api.github.com/repos/sq/JSIL/git/commits/e33cd629bfa01d0dbb8dc0be887cb600a6ab2bb7,e33cd629bfa01d0dbb8dc0be887cb600a6ab2bb7,"Merge pull request #266 from dlbd/array-icollection

Allow casting arrays to ICollection, implement .Count"
dlbd,2013-09-19 13:25:19,https://api.github.com/repos/sq/JSIL/git/commits/60f45291f7a6fcfe34bbd3bbbb7574e45af6f0c2,60f45291f7a6fcfe34bbd3bbbb7574e45af6f0c2,Implement array's ICollection<T>.CopyTo
dlbd,2013-09-19 13:21:04,https://api.github.com/repos/sq/JSIL/git/commits/aeab5486d0be12fbdfae011c58d44a56dd67ce0d,aeab5486d0be12fbdfae011c58d44a56dd67ce0d,"Implement string.Join(string, IEnumerable<T>)"
dlbd,2013-09-19 11:07:37,https://api.github.com/repos/sq/JSIL/git/commits/830bf6291f1128d74ca070c3225b3bbca9f7600a,830bf6291f1128d74ca070c3225b3bbca9f7600a,"Allow casting arrays to ICollection, implement .Count"
kg,2013-09-11 16:54:12,https://api.github.com/repos/sq/JSIL/git/commits/ff33be3d9f9cdbd21e82471edee2dbbea65a3e8a,ff33be3d9f9cdbd21e82471edee2dbbea65a3e8a,Clean up compiler warnings.
kg,2013-09-09 12:49:26,https://api.github.com/repos/sq/JSIL/git/commits/0c1d9dfe39940fc9d0640a61d500d3b05c95aeb6,0c1d9dfe39940fc9d0640a61d500d3b05c95aeb6,"Revert ""Change backing store for Boolean[] to be Uint8Array (issue #250)"" due to severe performance issues in V8 (WTF :( )

This reverts commit 52c5d9f6bb8075c9865d5f480357072d179a0705."
kg,2013-09-08 05:06:51,https://api.github.com/repos/sq/JSIL/git/commits/5f45c2c5774ee496b4ecd8f29e5d8fd6aabcff86,5f45c2c5774ee496b4ecd8f29e5d8fd6aabcff86,Fix bug with using Object.Equals on enum instances
kg,2013-09-08 04:42:05,https://api.github.com/repos/sq/JSIL/git/commits/52c5d9f6bb8075c9865d5f480357072d179a0705,52c5d9f6bb8075c9865d5f480357072d179a0705,Change backing store for Boolean[] to be Uint8Array (issue #250)
kg,2013-09-08 03:51:44,https://api.github.com/repos/sq/JSIL/git/commits/af406bb794a7ebcee6ef7f936dfb93ffe5c661fe,af406bb794a7ebcee6ef7f936dfb93ffe5c661fe,Add a test case that compares performance of boolean arrays and byte arrays.
kg,2013-09-04 18:14:52,https://api.github.com/repos/sq/JSIL/git/commits/06f6131c385e3faefc6cef10fa756bb17b242677,06f6131c385e3faefc6cef10fa756bb17b242677,Fix crash in control flow simplifier when translating corlib (#263)
kg,2013-09-04 03:41:37,https://api.github.com/repos/sq/JSIL/git/commits/1b1d998d2e957ee66847318534869562e62b88dd,1b1d998d2e957ee66847318534869562e62b88dd,"Merge pull request #262 from BrainSlugs83/Fix-Non-Ambiguous-Matches

Fixes an ""AmbiguousMatchException"" where the extra matches really aren't all that Ambiguous..."
BrainSlugs83,2013-09-04 03:30:23,https://api.github.com/repos/sq/JSIL/git/commits/254dc460089b0a65923dc3da9963419d2e909a06,254dc460089b0a65923dc3da9963419d2e909a06,"Made the update requested by kg.  The code now appends Path.DirectorySeparatorChar instead of ""\\"" while trying to resolve potentially non-ambiguous matches..."
kg,2013-09-04 03:21:24,https://api.github.com/repos/sq/JSIL/git/commits/1502d80960d708b220839e021466b764891f9415,1502d80960d708b220839e021466b764891f9415,"Merge pull request #261 from BrainSlugs83/Fix-Setup.exe-Files

Fixed an issue where non-CLR assemblies (such as ""Setup.exe"" files) were not ignored. ..."
BrainSlugs83,2013-09-04 03:11:52,https://api.github.com/repos/sq/JSIL/git/commits/74b5fd20961a2109c511ffb409cc272a0cd85506,74b5fd20961a2109c511ffb409cc272a0cd85506,Made update requested by kg.  The TryReadAssembly method now only catches BadImageFormatException(s).
kg,2013-09-03 14:32:13,https://api.github.com/repos/sq/JSIL/git/commits/f55519ab223f24d010a14831f1011f4a3a8a8e16,f55519ab223f24d010a14831f1011f4a3a8a8e16,"Fail early if a filename passed to JSILc is missing (assembly, solution or configuration) (issue #256)"
kg,2013-09-03 14:25:45,https://api.github.com/repos/sq/JSIL/git/commits/826536df3c1d87bf24d5ecc0693a6900788be906,826536df3c1d87bf24d5ecc0693a6900788be906,"Make control flow simplifier fully aware of label fallthrough to address cases where it was selecting the wrong exit label (fixes issue #245).
Improve the quality of JSIfStatement.ToString.
When extracting the exit label from a label group, attach a comment identifying its original label (helps when examining complex label-based JS output)."
kg,2013-09-03 12:33:59,https://api.github.com/repos/sq/JSIL/git/commits/89638c829095216f86deb0c5d87ad997e75af4eb,89638c829095216f86deb0c5d87ad997e75af4eb,Fix FromBase64String not ignoring whitespace (issue #253)
kg,2013-09-03 12:15:41,https://api.github.com/repos/sq/JSIL/git/commits/1aa93a26f51e19754d27522ec6a383257b065416,1aa93a26f51e19754d27522ec6a383257b065416,Add a readme to the demos directory (issue #257)
kg,2013-09-03 12:14:01,https://api.github.com/repos/sq/JSIL/git/commits/ee1dabe77cef0aaf1bf6c0a339ad84ad02704277,ee1dabe77cef0aaf1bf6c0a339ad84ad02704277,Add comments to the top of build_demos.bat (issue #257)
kg,2013-09-03 12:09:45,https://api.github.com/repos/sq/JSIL/git/commits/4fc9baa3bef53d3ba340c8c974965801a1a6e24c,4fc9baa3bef53d3ba340c8c974965801a1a6e24c,Implement get_ methods for PreferredBackBufferWidth and PreferredBackBufferHeight (issue #259)
kg,2013-09-03 12:07:46,https://api.github.com/repos/sq/JSIL/git/commits/943cfa99395b3c46634882a9560a56ba7ca29dea,943cfa99395b3c46634882a9560a56ba7ca29dea,Implement all overloads of Linq First and FirstOrDefault (issue #259)
kg,2013-09-03 11:55:38,https://api.github.com/repos/sq/JSIL/git/commits/447f9c35048c4f42e719ea6625649cd056fbfb85,447f9c35048c4f42e719ea6625649cd056fbfb85,Implement MathHelper.WrapAngle (issue #260)
kg,2013-09-03 11:48:53,https://api.github.com/repos/sq/JSIL/git/commits/3b6201881b4027d35e90f9cff22da45288d1267e,3b6201881b4027d35e90f9cff22da45288d1267e,Update Number proxies to use new NumberToFormattedString signature
kg,2013-09-03 11:44:40,https://api.github.com/repos/sq/JSIL/git/commits/2a6ed840768a4b608d71e244ae38063480aee3c6,2a6ed840768a4b608d71e244ae38063480aee3c6,Implement Math.IEEERemainder
kg,2013-09-03 11:21:30,https://api.github.com/repos/sq/JSIL/git/commits/578ec53c768c4b9d32fdee7d49e61ae046628573,578ec53c768c4b9d32fdee7d49e61ae046628573,"Implement basic support for alignment in String.Format format strings - {index,alignment}"
BrainSlugs83,2013-09-02 05:24:32,https://api.github.com/repos/sq/JSIL/git/commits/7e926ad17ccc6ab75f8fab1945d4ac54e1c7c00d,7e926ad17ccc6ab75f8fab1945d4ac54e1c7c00d,"Fixes an ""AmbiguousMatchException"" where the extra matches really aren't all that Ambiguous... (i.e. they don't exist and/or they're located in the itemOutputDirectory)."
BrainSlugs83,2013-09-02 03:02:06,https://api.github.com/repos/sq/JSIL/git/commits/98bc3957347183d7d3e3bf2685a454dd894d30ae,98bc3957347183d7d3e3bf2685a454dd894d30ae,"Fixed an issue where non-CLR assemblies (such as ""Setup.exe"" files) were not ignored.  This was causing Mono exceptions, and aborting the entire solution compliation.  This happens even when patterns matching the outputs were added to the ""Assemblies"": { ""Ignored:"" [] } array in the .sln.jsilconfig file."
kg,2013-08-28 05:54:17,https://api.github.com/repos/sq/JSIL/git/commits/22509776e54fd2ad3e59f856f8a4ebeb364eadd7,22509776e54fd2ad3e59f856f8a4ebeb364eadd7,Checkpoint a fix for the DeclareVariable regression
kg,2013-08-26 05:51:25,https://api.github.com/repos/sq/JSIL/git/commits/35a8b8a690bf9902a59771d3a87a4869b240aa46,35a8b8a690bf9902a59771d3a87a4869b240aa46,Fix issue #251.
kg,2013-08-26 05:33:03,https://api.github.com/repos/sq/JSIL/git/commits/5c64db40b0c7659c9b5cff8612ef9664242e50bc,5c64db40b0c7659c9b5cff8612ef9664242e50bc,Fix issue #249.
kg,2013-08-26 05:16:57,https://api.github.com/repos/sq/JSIL/git/commits/95e0d338c69cfdfe62582ed64d4ab98cc7011f79,95e0d338c69cfdfe62582ed64d4ab98cc7011f79,Disable fast overload dispatch for interface methods and expand test coverage (fixes #248)
kg,2013-08-26 05:03:01,https://api.github.com/repos/sq/JSIL/git/commits/eb9c654d45b837ff584544f7d47b434ea4159086,eb9c654d45b837ff584544f7d47b434ea4159086,Fix issue #247.
kg,2013-08-26 04:49:59,https://api.github.com/repos/sq/JSIL/git/commits/c7d4c56a68ae145cb7ea601c9301d0a4ceafe3c8,c7d4c56a68ae145cb7ea601c9301d0a4ceafe3c8,"Fix invalid field lists being generated for open types, and then being inherited by the prototype of the closed type, preventing the generation of a valid field list. Fixes issue #242."
kg,2013-08-26 04:32:14,https://api.github.com/repos/sq/JSIL/git/commits/8cc51be92a6366c61dadcb7672d99251bd332f15,8cc51be92a6366c61dadcb7672d99251bd332f15,Maybe fix issue #241; add a test.
kg,2013-08-26 04:14:06,https://api.github.com/repos/sq/JSIL/git/commits/69da9c6dd7c432e70229695ef30b3d0265c164a4,69da9c6dd7c432e70229695ef30b3d0265c164a4,"Checkpoint some work on issue #243:
Assign closure variables better, scope-unique names.
Implement some more LINQ methods (SelectMany, Empty)
Make JSIL.Dispose work on null."
kg,2013-08-26 03:27:12,https://api.github.com/repos/sq/JSIL/git/commits/0ff699afb90147da29c34027bf1f9293759b5682,0ff699afb90147da29c34027bf1f9293759b5682,"Stop generating 'x + y' for string addition since the semantics don't match C#. Fixes issue #239.
Fix JSIL.ConcatString's behavior for nulls."
kg,2013-08-26 03:15:30,https://api.github.com/repos/sq/JSIL/git/commits/187db7056aed39fee1cb82e7cb5406bec76abe9b,187db7056aed39fee1cb82e7cb5406bec76abe9b,Fix edge case where lazy default properties can return the wrong value on first access if the initializer is naughty and overwrites the default manually. (Fixes issue #234)
kg,2013-08-26 03:04:58,https://api.github.com/repos/sq/JSIL/git/commits/5d39775c1bf4e7d203b7daea978a5c3d8f9304d4,5d39775c1bf4e7d203b7daea978a5c3d8f9304d4,"Merge remote-tracking branch 'remotes/dlbd/field-getvalue'

Conflicts:
	Tests/Tests.csproj"
kg,2013-08-26 02:57:43,https://api.github.com/repos/sq/JSIL/git/commits/8bcffb97a5e2b17c0877de07f64e38576ad54fb6,8bcffb97a5e2b17c0877de07f64e38576ad54fb6,"Fix viewportScale query parameter
Apply preferred backbuffer width/height when creating the default canvas or getting it from the page."
kg,2013-08-26 02:40:33,https://api.github.com/repos/sq/JSIL/git/commits/f629203cc9f8bd589eebb4eb8f5a5245b5e67bf7,f629203cc9f8bd589eebb4eb8f5a5245b5e67bf7,"Merge pull request #252 from markusjohnsson/issue_162_246

Solves Int64 problems mentioned in issues #162 and #246"
markusjohnsson,2013-08-21 20:59:53,https://api.github.com/repos/sq/JSIL/git/commits/fcf1256586da19b651e3f9b3b1cc2896c4c83f6d,fcf1256586da19b651e3f9b3b1cc2896c4c83f6d,Truncate when converting xInt64 to lesser types.
markusjohnsson,2013-08-21 17:49:35,https://api.github.com/repos/sq/JSIL/git/commits/2983a2c44c226b783adeefba9d59471e586e4fce,2983a2c44c226b783adeefba9d59471e586e4fce,Solved some of the Int64 issues in issue 162
dlbd,2013-07-29 15:38:19,https://api.github.com/repos/sq/JSIL/git/commits/a5d0e242b9c7d14b224c0ab89251ebd44ad66d13,a5d0e242b9c7d14b224c0ab89251ebd44ad66d13,Implement FieldInfo.GetValue
dlbd,2013-07-29 11:20:05,https://api.github.com/repos/sq/JSIL/git/commits/a70aaee0224509408b938b9f8917e1b7c09c8bea,a70aaee0224509408b938b9f8917e1b7c09c8bea,"Implement char.IsLetter, char.IsLetterOrDigit, char.IsSurrogate for non-Unicode characters; fix char.IsWhiteSpace"
kg,2013-07-28 22:51:53,https://api.github.com/repos/sq/JSIL/git/commits/c940b3173e14df33af17d640bd787537716b7d92,c940b3173e14df33af17d640bd787537716b7d92,Fix for EscapeName producing huge rope strings in v8.
kg,2013-07-28 22:10:47,https://api.github.com/repos/sq/JSIL/git/commits/6cbde329b9764ac91788592323c05aa67257fc1c,6cbde329b9764ac91788592323c05aa67257fc1c,"Implement the overridable protected methods of Collection<T>. This fixes the MonoGame components collection.
Implement Collection<T>.CopyTo
Implement some more GL methods."
kg,2013-07-28 21:37:37,https://api.github.com/repos/sq/JSIL/git/commits/975b8b3332824a1e7915550a7db8d93c7be2bf20,975b8b3332824a1e7915550a7db8d93c7be2bf20,"Implement some System.Buffer methods
Move OpenTK.Service out of its own file
Stub out more OpenGL APIs needed by MonoGame"
kg,2013-07-27 03:21:19,https://api.github.com/repos/sq/JSIL/git/commits/fa5b5d9bdc362d78fb720c43152cb1eccae15e54,fa5b5d9bdc362d78fb720c43152cb1eccae15e54,Stubbed out more GL APIs
kg,2013-07-27 03:21:11,https://api.github.com/repos/sq/JSIL/git/commits/b696486d4060cdf77120419348358702b94bb3b5,b696486d4060cdf77120419348358702b94bb3b5,"Fix method signatures containing pointer types looking like method signatures without pointer types.
Add JSIL.Pointer.asView for getting a native typed array view that precisely covers N bytes starting from the pointer (for passing to APIs like WebGL that don't have offset/count parameters because they suck)"
kg,2013-07-27 00:46:45,https://api.github.com/repos/sq/JSIL/git/commits/a3826358a1de2eab44b5a6087f5610ac562a90a5,a3826358a1de2eab44b5a6087f5610ac562a90a5,Fix issue #231 and add test.
kg,2013-07-25 19:06:31,https://api.github.com/repos/sq/JSIL/git/commits/1fde139fa51f678cc5723a0812565413ec76f47b,1fde139fa51f678cc5723a0812565413ec76f47b,Stub out a few more OpenGL APIs
kg,2013-07-25 19:05:05,https://api.github.com/repos/sq/JSIL/git/commits/13ee2f7269201508a46b9d9f8b26bb3dcc05eb96,13ee2f7269201508a46b9d9f8b26bb3dcc05eb96,Tweak type logic for ternary operators and ensure that Translate_Conv does not skip the conversion operator for casts involving System.Char. Fixes issue #230.
kg,2013-07-25 14:47:54,https://api.github.com/repos/sq/JSIL/git/commits/f41e3bf44770f7c4fd7508c391aab93955c237b6,f41e3bf44770f7c4fd7508c391aab93955c237b6,Updates to OpenTK stubs
kg,2013-07-25 14:47:48,https://api.github.com/repos/sq/JSIL/git/commits/a3f600f2eff4b8f5097992f0a1424b7156c88c68,a3f600f2eff4b8f5097992f0a1424b7156c88c68,IntPtr compatibility fixes
kg,2013-07-25 13:49:44,https://api.github.com/repos/sq/JSIL/git/commits/247389c26ee6370bba49bcd3673adc1c9653f33b,247389c26ee6370bba49bcd3673adc1c9653f33b,Fix the v8 typed array ctor hack... AGAIN
kg,2013-07-25 13:45:59,https://api.github.com/repos/sq/JSIL/git/commits/550920d3271dd7313a28df103892e52331aa8f68,550920d3271dd7313a28df103892e52331aa8f68,"Ensure narrowing integral casts don't erroneously get optimized out.
Make narrowing integral casts wrap.
Expose GetHashCode on System.Object so classes can inherit it."
kg,2013-07-25 13:12:21,https://api.github.com/repos/sq/JSIL/git/commits/00e4c7caa2cbdd0b4305252d619c7ab3c7cd48c6,00e4c7caa2cbdd0b4305252d619c7ab3c7cd48c6,Enable passing packed arrays to GCHandle.Alloc
kg,2013-07-25 13:00:24,https://api.github.com/repos/sq/JSIL/git/commits/3d4b79c7f0442c91411f62ba9292aa8ecec43cf1,3d4b79c7f0442c91411f62ba9292aa8ecec43cf1,Tweak the viewCache fix again
kg,2013-07-25 12:57:59,https://api.github.com/repos/sq/JSIL/git/commits/3f6b203b0614e8a0fc8eb4759c626b7653a1bbd9,3f6b203b0614e8a0fc8eb4759c626b7653a1bbd9,Implement enum->boolean conversions for enums without zero or one values.
kg,2013-07-25 12:50:40,https://api.github.com/repos/sq/JSIL/git/commits/8bc019a6325b60894f74b15466fcce8ca9fcc18e,8bc019a6325b60894f74b15466fcce8ca9fcc18e,Work around V8 being finicky about using typed array constructors as Object keys for no obvious reason
kg,2013-07-25 12:06:22,https://api.github.com/repos/sq/JSIL/git/commits/28612d363c5aa57deb8434aae2b2738229bdb5f1,28612d363c5aa57deb8434aae2b2738229bdb5f1,"Fix issue #229 and add a test
Make GetType return Int32 for integral numbers"
kg,2013-07-22 12:30:41,https://api.github.com/repos/sq/JSIL/git/commits/ea3f9d4740cd1212be250b8de77238161962ee2f,ea3f9d4740cd1212be250b8de77238161962ee2f,More OpenTK stubs
kg,2013-07-22 11:58:43,https://api.github.com/repos/sq/JSIL/git/commits/1bb708cc750f2b9f31b717145a2c156ba11f0566,1bb708cc750f2b9f31b717145a2c156ba11f0566,"Fix CreateInstanceOfType returning 0 for System.Char
Fix the field default for System.Char being 0"
kg,2013-07-22 11:54:40,https://api.github.com/repos/sq/JSIL/git/commits/3e454756329c89f7cb85f91df56594cc2fe64dd4,3e454756329c89f7cb85f91df56594cc2fe64dd4,"Fix casts from unknown type to char getting treated as int->char casts.
Add some more casting test cases."
kg,2013-07-22 11:44:28,https://api.github.com/repos/sq/JSIL/git/commits/30b40c6665dc13ef2c88771caa92b513814855b7,30b40c6665dc13ef2c88771caa92b513814855b7,Fix a test that relied on broken String.Format
kg,2013-07-22 11:39:44,https://api.github.com/repos/sq/JSIL/git/commits/a997aa2cd7fffe9562d174f027cc2d4ec692c683,a997aa2cd7fffe9562d174f027cc2d4ec692c683,"Fix Assembly.GetType throwing when it shouldn't
Simplify the implementation of Assembly.GetType and Type.GetType
JSReplacement can generate the executing assembly as an expansion value
Fix System.String.Format formatting nulls as 'null' instead of the empty string
Fix System.Type.GetType not doing two-stage search (first search for private/public types in the current assembly, then search for public types in the global namespace)
Implement Regex.Replace
Implement the other overloads of Type.GetConstructor
Stub out parts of GCHandle
Stub out the other overloads of String.Split"
kg,2013-07-22 09:55:22,https://api.github.com/repos/sq/JSIL/git/commits/fdb35a6b258d3eb9b00dbefc3da662fa2aff9b9f,fdb35a6b258d3eb9b00dbefc3da662fa2aff9b9f,Remove that stupid hack that causes GetTypeName to be wrong for strings
kg,2013-07-22 09:45:22,https://api.github.com/repos/sq/JSIL/git/commits/c4f223a3fe67fd6f2924f4fa542966b485bb6133,c4f223a3fe67fd6f2924f4fa542966b485bb6133,"Nullables broke for some reason, so fix them.
Ensure that method invocation expressions aren't created with a null JSType if they are an actual method.
Fix cached types being references."
kg,2013-07-22 08:53:02,https://api.github.com/repos/sq/JSIL/git/commits/3a013b77f7174a0b6b2f823f271fff17677b3a5e,3a013b77f7174a0b6b2f823f271fff17677b3a5e,Fix JSILc converting satellite resources too aggressively
kg,2013-07-22 08:44:21,https://api.github.com/repos/sq/JSIL/git/commits/e142bfc26f208effe0ac7e83154c8aef2eabb788,e142bfc26f208effe0ac7e83154c8aef2eabb788,Stubbed out more OpenTK APIs.
kg,2013-07-22 08:42:46,https://api.github.com/repos/sq/JSIL/git/commits/876aa94ff5f62fec0a57f9a5165f999a1d91dca9,876aa94ff5f62fec0a57f9a5165f999a1d91dca9,Fix manifest resources being added to read only storage
kg,2013-07-22 08:42:33,https://api.github.com/repos/sq/JSIL/git/commits/05772ea5a40db4c9fcff4a72f4efd21c8c14d544,05772ea5a40db4c9fcff4a72f4efd21c8c14d544,Detect the correct output filename for files being copied to the output directory.
kg,2013-07-22 08:34:39,https://api.github.com/repos/sq/JSIL/git/commits/5906bb6ebe26e77ab195d1f140ca5b64778f5e83,5906bb6ebe26e77ab195d1f140ca5b64778f5e83,"Implement loading of manifest resource streams.
Stub out Stream.CopyTo for basic streams.
Implement MemoryStream.ToArray."
kg,2013-07-22 08:11:17,https://api.github.com/repos/sq/JSIL/git/commits/b057d0086cbe175812016a6f7a65eda4dc818ce4,b057d0086cbe175812016a6f7a65eda4dc818ce4,"Add support for converting embedded manifest resource streams
Files in TranslationResult can have string properties"
kg,2013-07-22 07:25:26,https://api.github.com/repos/sq/JSIL/git/commits/23f9bddb6b2c79d335130a38d229a1fe921af1fd,23f9bddb6b2c79d335130a38d229a1fe921af1fd,"Update to a new rev of ILSpy that contains a fix for switch statement decompilation.
Fix some cases where switch statements ended up containing gotos, and add a test case."
kg,2013-07-22 06:11:41,https://api.github.com/repos/sq/JSIL/git/commits/fdf711d7b8f938470462b784ea55a3502bbfc57a,fdf711d7b8f938470462b784ea55a3502bbfc57a,"Don't double report JS error output
Truncate JS/C# output at a short length so that ReSharper's busted test runner doesn't crash devenv"
kg,2013-07-22 05:41:33,https://api.github.com/repos/sq/JSIL/git/commits/19b622c82d2edbf299f3a726dae7f9da229cf33c,19b622c82d2edbf299f3a726dae7f9da229cf33c,"Implement Array.Clear
$typeof(x) and $etypeof(x) are now valid for any parameter in a proxy's JSReplacement. (etypeof returns the element type instead of the outer type)
Stub out WeakReference to generate a warning the first time it is constructed"
kg,2013-07-22 05:16:29,https://api.github.com/repos/sq/JSIL/git/commits/ed1b26b924b773717b3a2c4ce62b88c72c47e9c6,ed1b26b924b773717b3a2c4ce62b88c72c47e9c6,"Fix a bug in the way integer constants are translated to enums.
Fix the error message you get from calling .$As on enums."
kg,2013-07-19 22:49:56,https://api.github.com/repos/sq/JSIL/git/commits/9dabc856d9a345096aa16e369486fd7a74bb5e72,9dabc856d9a345096aa16e369486fd7a74bb5e72,"Add some property related test cases
Fix a rotted bit of property infrastructure that breaks generated code when accessor methods are off"
kg,2013-07-17 10:28:50,https://api.github.com/repos/sq/JSIL/git/commits/62937e058a0c4133fe158a7c3ca503e5d4c4fb48,62937e058a0c4133fe158a7c3ca503e5d4c4fb48,Stub parts of OpenTK DisplayDevice
kg,2013-07-17 10:14:59,https://api.github.com/repos/sq/JSIL/git/commits/908b2dbd54e184dd3bbc37304faa1064a395b394,908b2dbd54e184dd3bbc37304faa1064a395b394,Fix creating a ReadOnlyCollection from an array.
kg,2013-07-17 09:06:50,https://api.github.com/repos/sq/JSIL/git/commits/34f9c1f3cf3fe5ba4c1ecfbe515bc4b4187f06c7,34f9c1f3cf3fe5ba4c1ecfbe515bc4b4187f06c7,OpenTK stubs updated
kg,2013-07-17 08:46:35,https://api.github.com/repos/sq/JSIL/git/commits/bb3698714a446b226bea8ac45fdf8b8f0f18f584,bb3698714a446b226bea8ac45fdf8b8f0f18f584,"Don't generate tokens for assemblies that have been redirected, in order to ensure that GetAssembly(""shortname"") still works at runtime.
Make redirects case insensitive."
kg,2013-07-17 08:34:54,https://api.github.com/repos/sq/JSIL/git/commits/31cf534e11fd6e7633061cf68c1dc7d8923c2e21,31cf534e11fd6e7633061cf68c1dc7d8923c2e21,Improve generated code for skeletons by omitting private compiler-generated methods and optionally generating event accessors
kg,2013-07-17 08:23:06,https://api.github.com/repos/sq/JSIL/git/commits/4fcf46ed8e0cf9b8ee11621fd461d61258170afd,4fcf46ed8e0cf9b8ee11621fd461d61258170afd,Added a basic implementation of Assembly.GetEntryAssembly
kg,2013-07-17 08:19:52,https://api.github.com/repos/sq/JSIL/git/commits/6ab6b086d02a283a10b2074b07c2f2b5070fdfcb,6ab6b086d02a283a10b2074b07c2f2b5070fdfcb,"Translator emits entry point information for executable assemblies.
Added JSIL.GetEntryPoint and JSIL.InvokeEntryPoint to simplify invoking an executable's Main function
Tests can be flagged to compile to exe and run in the shell so that entry point behavior can be tested"
kg,2013-07-17 07:00:04,https://api.github.com/repos/sq/JSIL/git/commits/b4544cc6ccfbeea239ff1a4187abce2371209c29,b4544cc6ccfbeea239ff1a4187abce2371209c29,"Optimizing the struct allocation hoister to create less temporaries caused it to change behavior in certain code, so undo that and add a test."
kg,2013-07-17 06:47:25,https://api.github.com/repos/sq/JSIL/git/commits/9054ad9a63a5cdb04161093e398fb19048ba9e95,9054ad9a63a5cdb04161093e398fb19048ba9e95,Fix using RuntimeType as a cast target or cast source.
kg,2013-07-17 06:38:24,https://api.github.com/repos/sq/JSIL/git/commits/ef66ab5bae669de88940a3067efd9a3c02bc6a77,ef66ab5bae669de88940a3067efd9a3c02bc6a77,"Cast expressions can throw, so if they're the default value for a field, wrap them in a function."
kg,2013-07-17 06:33:19,https://api.github.com/repos/sq/JSIL/git/commits/cad33bcdeac4b07a0f4cf49f81deb9de22d630c9,cad33bcdeac4b07a0f4cf49f81deb9de22d630c9,"Made the RuntimeType inheritance chain correct
Various tweaks to ensure new type objects are constructed using an appropriate prototype object
When constructing an interface's public interface object, copy any interface methods from interfaces it implements."
kg,2013-07-17 05:31:04,https://api.github.com/repos/sq/JSIL/git/commits/d5ba30c37be813ab5f3995baaee61ab8d5c872e9,d5ba30c37be813ab5f3995baaee61ab8d5c872e9,Fixed reflection assemblies not being constructed correctly
kg,2013-07-17 05:01:55,https://api.github.com/repos/sq/JSIL/git/commits/f2ef4d0ad7e0cc506ab191a9d8fc4307c4bd33ea,f2ef4d0ad7e0cc506ab191a9d8fc4307c4bd33ea,Fix field initializers being broken due to a dependency cycle
kg,2013-07-17 04:22:15,https://api.github.com/repos/sq/JSIL/git/commits/c36282836cc0b166b73feae23b2c6b070a8a1f71,c36282836cc0b166b73feae23b2c6b070a8a1f71,Eliminate some bugs related to the System.RuntimeType and System.Reflection.RuntimeAssembly type cycles by making it possible to pre-create a type object and/or prototype
kg,2013-07-17 03:29:49,https://api.github.com/repos/sq/JSIL/git/commits/5c29f790510f1afdfe55a1a1fd452820695de35c,5c29f790510f1afdfe55a1a1fd452820695de35c,Add a 'MakeEventAccessors' convenience method to InterfaceBuilder that generates an equivalent to the default compiler-provided add/remove handlers for events.
kg,2013-07-17 03:17:15,https://api.github.com/repos/sq/JSIL/git/commits/31eb41b4799b92294eb059825f586e2634734e87,31eb41b4799b92294eb059825f586e2634734e87,Stub out OpenTK GameWindow.
kg,2013-07-17 03:14:51,https://api.github.com/repos/sq/JSIL/git/commits/2f22bf29705234de2801fe3b9d2bf9a15f9a0ca9,2f22bf29705234de2801fe3b9d2bf9a15f9a0ca9,"Add support for redirecting assembly references (point XNA assemblies to MonoGame assemblies, point corlib 2.0 to 4.0, etc.)"
kg,2013-07-17 02:57:35,https://api.github.com/repos/sq/JSIL/git/commits/40401691d28d2e18f63124d7c6592037a57ef697,40401691d28d2e18f63124d7c6592037a57ef697,Allow configuring the name of the assembly collection so that you can copy-paste skeleton output safely
kg,2013-07-17 02:49:44,https://api.github.com/repos/sq/JSIL/git/commits/c8a43c152429fa4b96042a794e9249812af7111f,c8a43c152429fa4b96042a794e9249812af7111f,Fix CopiedOutputGatherer producing bad manifests if an evaluatedinclude contained ..
kg,2013-07-17 02:49:28,https://api.github.com/repos/sq/JSIL/git/commits/5f832dc49aadd3151fe2567cc6afd6f08f35e59d,5f832dc49aadd3151fe2567cc6afd6f08f35e59d,Rearrange some of the pack-in libraries.
kg,2013-07-17 02:29:10,https://api.github.com/repos/sq/JSIL/git/commits/eefd6dcbb8be59d8468c7b3bd35d710a30d1587f,eefd6dcbb8be59d8468c7b3bd35d710a30d1587f,"Make the %AssemblyDirectory% variable available in more contexts in jsilconfig files by trying to guess the assembly given the outputs in the build group.
Add %AssemblyName% and %AssemblyNameWithoutExtension% variables you can use in the same context as %AssemblyDirectory%"
kg,2013-07-17 02:03:38,https://api.github.com/repos/sq/JSIL/git/commits/e68d4aa2880188b4013bb6b299d7e312b875f473,e68d4aa2880188b4013bb6b299d7e312b875f473,"Merge branch 'master' of github.com:kevingadd/JSIL

Conflicts:
	Tests/Tests.csproj"
kg,2013-07-17 02:01:08,https://api.github.com/repos/sq/JSIL/git/commits/5b295c1a9724d792419f3bb7730e9394d3cc3933,5b295c1a9724d792419f3bb7730e9394d3cc3933,Fix truncate expressions producing ((x * y)) | 0 instead of (x * y) | 0
kg,2013-07-17 01:58:30,https://api.github.com/repos/sq/JSIL/git/commits/e01627b4454722d9199e771f532fe02abdcefb92,e01627b4454722d9199e771f532fe02abdcefb92,Don't emit integer type hints for bitwise operators
kg,2013-07-17 01:50:38,https://api.github.com/repos/sq/JSIL/git/commits/480bad8b18b3d6ca6f5906702b8032c6ddc53f17,480bad8b18b3d6ca6f5906702b8032c6ddc53f17,"Merge pull request #224 from dlbd/convert-enum

Pass null instead of undefined as IFormatProvider in System.Convert.To__(obj)"
dlbd,2013-07-17 01:43:35,https://api.github.com/repos/sq/JSIL/git/commits/8508d266229a736b2c1a8701b39429102dffd693,8508d266229a736b2c1a8701b39429102dffd693,Pass null instead of undefined as IFormatProvider in System.Convert.To___(obj)
kg,2013-07-17 01:06:09,https://api.github.com/repos/sq/JSIL/git/commits/797c55ae1ac11df1fe16a707efe480a7bba53c93,797c55ae1ac11df1fe16a707efe480a7bba53c93,"Allow casting primitive& to primitive* in order to read the underlying bytes of a primitive or read a primitive from an array of bytes. This does not allow mutating values on the stack, though! Fixes issue #218."
kg,2013-07-17 00:43:26,https://api.github.com/repos/sq/JSIL/git/commits/00ccd46c0828281fd69398714a903544b9853a37,00ccd46c0828281fd69398714a903544b9853a37,"Fix System.Enum interface methods not getting fixups done (issue #217).
Implement IConvertible.ToInt(32|64) on System.Enum (from issue #217).
Add a definition of IFormatProvider in Bootstrap.
Fix missing interface methods being reported twice."
kg,2013-07-17 00:26:10,https://api.github.com/repos/sq/JSIL/git/commits/00f62586d2318deb18cc9f95e46ae822c56a596a,00f62586d2318deb18cc9f95e46ae822c56a596a,Make enums implement IConvertible
kg,2013-07-17 00:14:13,https://api.github.com/repos/sq/JSIL/git/commits/f7852a999f389da5b518467ecad6a9bf4446a1d8,f7852a999f389da5b518467ecad6a9bf4446a1d8,"Merge pull request #219 from dlbd/string-gethashcode

Implement string.GetHashCode"
kg,2013-07-17 00:13:31,https://api.github.com/repos/sq/JSIL/git/commits/ca0142763bc80b88d319f9383bdfd2f310e46d0d,ca0142763bc80b88d319f9383bdfd2f310e46d0d,"Merge pull request #221 from dlbd/filestream-name

Implement FileStream.Name"
dlbd,2013-07-16 18:23:43,https://api.github.com/repos/sq/JSIL/git/commits/cc6d99a33e74c76a2c09098802316885068f391b,cc6d99a33e74c76a2c09098802316885068f391b,Implement FileStream.Name
dlbd,2013-07-15 04:51:52,https://api.github.com/repos/sq/JSIL/git/commits/505b76ace0ee77c469808383bd5d89082a3a1799,505b76ace0ee77c469808383bd5d89082a3a1799,Implement string.GetHashCode
kg,2013-07-13 22:56:53,https://api.github.com/repos/sq/JSIL/git/commits/d39bf0f0caea12e561a04623f3c9253680bcdf73,d39bf0f0caea12e561a04623f3c9253680bcdf73,Try to make enum values inherit from System.Enum properly for issue #211
kg,2013-07-13 22:17:14,https://api.github.com/repos/sq/JSIL/git/commits/099ef4c22f92bb936802c7f52f0291e6e35d4e78,099ef4c22f92bb936802c7f52f0291e6e35d4e78,"Minor pull request #216 cleanups:
Fix char conversion (and add slightly better test coverage)
Remove WriteLine from test that behaves differently in spidermonkey and v8"
kg,2013-07-13 21:59:48,https://api.github.com/repos/sq/JSIL/git/commits/f137227e3a06319f062ac924711fd70ac2c25781,f137227e3a06319f062ac924711fd70ac2c25781,"Merge pull request #216 from dlbd/convert-object

Implement calling methods of System.Convert with objects"
dlbd,2013-07-13 21:12:54,https://api.github.com/repos/sq/JSIL/git/commits/aa621f66d1b0ce51bea3e9aadbd9c9d289e61d06,aa621f66d1b0ce51bea3e9aadbd9c9d289e61d06,Implement calling methods of System.Convert with objects
kg,2013-07-12 18:55:34,https://api.github.com/repos/sq/JSIL/git/commits/d79f1b030bff69870090d34c854ea0e53407dcb0,d79f1b030bff69870090d34c854ea0e53407dcb0,"Merge pull request #214 from dlbd/interface-basetype-null

Interfaces should have no base type"
dlbd,2013-07-06 13:51:40,https://api.github.com/repos/sq/JSIL/git/commits/097a9363d031bdfce9d1a0397d8e87547d4f5d7c,097a9363d031bdfce9d1a0397d8e87547d4f5d7c,Interfaces should have no base type
kg,2013-07-12 06:46:44,https://api.github.com/repos/sq/JSIL/git/commits/c2592570be8ade80f59b0ff62e7727d66648b00f,c2592570be8ade80f59b0ff62e7727d66648b00f,Implement Array.Copy (issue #208)
kg,2013-07-12 06:16:21,https://api.github.com/repos/sq/JSIL/git/commits/c25f76d2feba29e17d882394ef0705fb0f53e7b7,c25f76d2feba29e17d882394ef0705fb0f53e7b7,Fix issue #213
kg,2013-07-12 04:22:55,https://api.github.com/repos/sq/JSIL/git/commits/46305f1a0de7497584f2af352af1a2ab7581ff7d,46305f1a0de7497584f2af352af1a2ab7581ff7d,"JSIL will now find Foo.exe.jsilconfig/Foo.dll.jsilconfig files in parent directories in addition to the directory containing the file. This lets you shove the config file in, say, the project directory instead of the build directory."
kg,2013-07-12 04:11:54,https://api.github.com/repos/sq/JSIL/git/commits/2182d1ca42b8427e1f32b7f9d1567ed09b71df65,2182d1ca42b8427e1f32b7f9d1567ed09b71df65,Site updates
kg,2013-07-12 04:11:49,https://api.github.com/repos/sq/JSIL/git/commits/b8bf67aed7e2cca87fc6f824640f36e8a97787be,b8bf67aed7e2cca87fc6f824640f36e8a97787be,"Before translating build outputs, do a pass over them to identify their dependencies to avoid translating DLLs that will later get translated by an EXE."
kg,2013-07-11 21:18:15,https://api.github.com/repos/sq/JSIL/git/commits/e0a46a88027fefc32a4b9ea24e4b1d15b8beb6a5,e0a46a88027fefc32a4b9ea24e4b1d15b8beb6a5,Fix a corner case where the copied output gatherer missed some copied outputs.
kg,2013-07-05 17:39:23,https://api.github.com/repos/sq/JSIL/git/commits/88ba934751301cc4e7e9bf4546c836a8d2a8239c,88ba934751301cc4e7e9bf4546c836a8d2a8239c,Work around github API serving up mangled author info
kg,2013-07-05 00:55:52,https://api.github.com/repos/sq/JSIL/git/commits/58021eaad88eeb009034a50009cd3fbef3bbb906,58021eaad88eeb009034a50009cd3fbef3bbb906,"Implement Enumerable.Sum for Int32, Single, and Double (issue #208)"
kg,2013-07-05 00:49:01,https://api.github.com/repos/sq/JSIL/git/commits/26fff80af7b1d95d15fda74e1735618fc43f26c1,26fff80af7b1d95d15fda74e1735618fc43f26c1,Update GraphicsDeviceManager to add itself to the game's service provider (issue #208)
kg,2013-07-05 00:44:25,https://api.github.com/repos/sq/JSIL/git/commits/5bb22d6589b5011291676ca617f442eaa5b980cd,5bb22d6589b5011291676ca617f442eaa5b980cd,Implement ContentManager.get_ServiceProvider (issue #208)
kg,2013-07-05 00:38:34,https://api.github.com/repos/sq/JSIL/git/commits/911108608362a21eacb2958e089eb84c78f49c2b,911108608362a21eacb2958e089eb84c78f49c2b,Fix enums having the wrong base type (issue #211)
kg,2013-07-03 10:47:07,https://api.github.com/repos/sq/JSIL/git/commits/fff019c8d3f607ff2b28ef41e9619bf75dfe49ae,fff019c8d3f607ff2b28ef41e9619bf75dfe49ae,"Fix NewElementReference being too strict.
Add support for stripping optional/required modifiers on types in some TypeUtil methods."
kg,2013-07-03 10:41:01,https://api.github.com/repos/sq/JSIL/git/commits/5dab9f6ba960eed5a2f6e8ba379363f8a7f98546,5dab9f6ba960eed5a2f6e8ba379363f8a7f98546,"Make temporary elimination able to ignore calls to pure functions. (In practice this probably doesn't allow any additional optimizations, due to other constraints, but it's worth doing)
Mark some more packed array methods as pure."
kg,2013-07-03 10:26:08,https://api.github.com/repos/sq/JSIL/git/commits/397a61dc629c3ac20afa9f8509fec7897dd8a8e9,397a61dc629c3ac20afa9f8509fec7897dd8a8e9,Implement allocation hoisting for element references.
kg,2013-07-03 10:04:34,https://api.github.com/repos/sq/JSIL/git/commits/905c6dbce011c4ff6195c8bea3c93089289f6605,905c6dbce011c4ff6195c8bea3c93089289f6605,"Ensure element proxy prototypes are always created using crockford create, since it has a huge impact"
kg,2013-07-03 10:03:17,https://api.github.com/repos/sq/JSIL/git/commits/b38f2957a3634e91fa8fc26fc3c0d23c7d13e752,b38f2957a3634e91fa8fc26fc3c0d23c7d13e752,Naming cleanup (ElementReference -> ElementProxy)
kg,2013-07-03 09:58:19,https://api.github.com/repos/sq/JSIL/git/commits/e510aacad48a208fff724ec385f40efeecd3c4e4,e510aacad48a208fff724ec385f40efeecd3c4e4,"Fix dereferencing of packed array element references.
Rename the struct allocation hoisting transform."
kg,2013-07-03 09:47:32,https://api.github.com/repos/sq/JSIL/git/commits/c039a18750dda3f82b3f2e49e50d931fc18c93e2,c039a18750dda3f82b3f2e49e50d931fc18c93e2,Partially implement dereferencing of element references
kg,2013-07-03 09:39:46,https://api.github.com/repos/sq/JSIL/git/commits/da473bc17e5fbe88ffe98da4b003b3a197c8d671,da473bc17e5fbe88ffe98da4b003b3a197c8d671,Fix bug introduced in array pinning by element reference changes
kg,2013-07-03 09:37:08,https://api.github.com/repos/sq/JSIL/git/commits/5ff41e77a6c6fc664ba1bcf6e7aee4d9c02a1195,5ff41e77a6c6fc664ba1bcf6e7aee4d9c02a1195,Refactored the way array element references work. This should enable allocation hoisting for references in loops.
kg,2013-07-03 09:15:03,https://api.github.com/repos/sq/JSIL/git/commits/f5a359141395815f15a3ae0c95587e217d0c8503,f5a359141395815f15a3ae0c95587e217d0c8503,Fix PackedStructArray GetReference not interacting correctly with some other compiler infrastructure.
kg,2013-07-03 08:57:35,https://api.github.com/repos/sq/JSIL/git/commits/8580ae27263fb17076c1fc5bf8fa7174d5636a8b,8580ae27263fb17076c1fc5bf8fa7174d5636a8b,More Object.create tweaks
kg,2013-07-03 08:52:19,https://api.github.com/repos/sq/JSIL/git/commits/e5abd22f14490c09b19f46464ea40c40452f2608,e5abd22f14490c09b19f46464ea40c40452f2608,Merge branch 'master' of github.com:kevingadd/JSIL
kg,2013-07-03 08:51:40,https://api.github.com/repos/sq/JSIL/git/commits/d2c28b3d45637cbb78f20f6bf9547377be7c17d3,d2c28b3d45637cbb78f20f6bf9547377be7c17d3,Work around stupid undocumented jQuery behavior that mangles POST bodies. Fixes issue #210.
kg,2013-07-03 08:32:24,https://api.github.com/repos/sq/JSIL/git/commits/ff78a70a3134a8482a3a32c24a26de59621d9fdf,ff78a70a3134a8482a3a32c24a26de59621d9fdf,"Merge pull request #209 from dlbd/stream-canread

Stub Stream.CanRead"
dlbd,2013-07-03 02:42:00,https://api.github.com/repos/sq/JSIL/git/commits/eaf3768c24085034468dab28d11892070fc32680,eaf3768c24085034468dab28d11892070fc32680,Stub Stream.CanRead
kg,2013-07-02 07:21:12,https://api.github.com/repos/sq/JSIL/git/commits/7f9770e3eeca9f461d37490eedccd515cfadf973,7f9770e3eeca9f461d37490eedccd515cfadf973,More object.create specificity tweaks
kg,2013-07-01 17:53:15,https://api.github.com/repos/sq/JSIL/git/commits/456d51b4f3da02575ad4485dceffccb8cd86db1a,456d51b4f3da02575ad4485dceffccb8cd86db1a,"Clean up various mixed uses of JSIL.CloneObject and Object.create to go through three specific entry points with more semantic information, so that it's easier to optimize out uses of Object.create later as appropriate."
kg,2013-07-01 11:01:57,https://api.github.com/repos/sq/JSIL/git/commits/4f7efcf1b45ffdf723532ae5ce141c9f8770e90d,4f7efcf1b45ffdf723532ae5ce141c9f8770e90d,Bug fixes and improvements to make type aliases more generally useful
kg,2013-07-01 05:42:06,https://api.github.com/repos/sq/JSIL/git/commits/8cb269d3f8d91b2cbc4b1dc06ae5f2f98f84572f,8cb269d3f8d91b2cbc4b1dc06ae5f2f98f84572f,Fix issue #207 and add a test.
kg,2013-06-30 14:39:24,https://api.github.com/repos/sq/JSIL/git/commits/efd4bb1f38541e6facb27e4f71487cd55e8b19de,efd4bb1f38541e6facb27e4f71487cd55e8b19de,Fix string constructor bug(s) I introduced by not paying close enough attention.
kg,2013-06-30 14:34:09,https://api.github.com/repos/sq/JSIL/git/commits/e8cea8992bad48a9c103fe501017a0ca73599829,e8cea8992bad48a9c103fe501017a0ca73599829,Minor goo
kg,2013-06-30 14:33:51,https://api.github.com/repos/sq/JSIL/git/commits/f7853af245cce3362b01033fe197c2c806dd42e4,f7853af245cce3362b01033fe197c2c806dd42e4,Fix EmulateStructAssignment not introducing struct copies for constructor arguments and add a test. (How did this ever work???)
kg,2013-06-29 09:56:18,https://api.github.com/repos/sq/JSIL/git/commits/0ca51a5499ebb768404fe7db68f2b7049ddb4996,0ca51a5499ebb768404fe7db68f2b7049ddb4996,"Fix LinkedList.Count
Implement some more BasicEffect stubs"
kg,2013-06-29 09:26:21,https://api.github.com/repos/sq/JSIL/git/commits/46f4367411e0c27cdb9575d13063766180c263e4,46f4367411e0c27cdb9575d13063766180c263e4,Updates to JSIL website
kg,2013-06-29 09:26:12,https://api.github.com/repos/sq/JSIL/git/commits/c43abb2bcbf1e6f88d053a3ae526693c927a5458,c43abb2bcbf1e6f88d053a3ae526693c927a5458,Update to a modern build of spidermonkey. I will probably regret this.
kg,2013-06-29 08:22:25,https://api.github.com/repos/sq/JSIL/git/commits/4cc649b77081b357f42301b91bde5304ac727b6a,4cc649b77081b357f42301b91bde5304ac727b6a,Add ProceduralTextures to the demo build list
kg,2013-06-29 08:09:22,https://api.github.com/repos/sq/JSIL/git/commits/db62aa9c70eb8f060152ec9fedcabb6e8b0401c3,db62aa9c70eb8f060152ec9fedcabb6e8b0401c3,"Tweak $makeImageDataForBytes to be considerably faster
Stop throwing exceptions on unhandled primitive types, because it's annoying"
kg,2013-06-29 08:03:19,https://api.github.com/repos/sq/JSIL/git/commits/e9928b2efe125e8a8a7ba6e83cc26893a517483d,e9928b2efe125e8a8a7ba6e83cc26893a517483d,Unmarshal/marshal codegen tweaks for better performance
kg,2013-06-29 07:43:24,https://api.github.com/repos/sq/JSIL/git/commits/ece49cbb6029d2cff1ad7bf5132291899940672a,ece49cbb6029d2cff1ad7bf5132291899940672a,"Fix some more erroneous uses of Stream.Read
Fix bug in text decoder when passed a count of 0"
kg,2013-06-29 07:37:10,https://api.github.com/repos/sq/JSIL/git/commits/ecacdb7876a35fcbbca1b1bc5115f71611732dc6,ecacdb7876a35fcbbca1b1bc5115f71611732dc6,Various tweaks and bug fixes to the IO layer to improve performance and eliminate some deopts in v8/spidermonkey
kg,2013-06-29 07:18:26,https://api.github.com/repos/sq/JSIL/git/commits/06d312c75d096ae2bd09240fe82ff93b4fa8c7bd,06d312c75d096ae2bd09240fe82ff93b4fa8c7bd,Fix a bug in the Stream.Read baseline implementation and add type hints
kg,2013-06-29 06:52:53,https://api.github.com/repos/sq/JSIL/git/commits/9df569f84d60a60eb883e63f809f668d59542619,9df569f84d60a60eb883e63f809f668d59542619,"Expand struct allocation hoisting to work against method references that can't be resolved. This allows it to operate on PackedArray set_Item calls.
Use runtime dispatch for PackedArray's Length property to make fetching it cheaper.
Only ever create a single temporary local variable per function for a given type when doing allocation hoisting (separate temporaries aren't necessary)"
kg,2013-06-29 06:40:29,https://api.github.com/repos/sq/JSIL/git/commits/407b29b9f7e2a30290c543c595b1feea2dd7914a,407b29b9f7e2a30290c543c595b1feea2dd7914a,Fix compiler-generated property backing stores from proxies being introduced erroneously into proxied types.
kg,2013-06-29 06:36:51,https://api.github.com/repos/sq/JSIL/git/commits/bbe88a349cd573d4d7409e088445de7d91a19b6c,bbe88a349cd573d4d7409e088445de7d91a19b6c,Do type substitution in the packed array support more narrowly because ILSpy type substitution is still totally busted
kg,2013-06-29 06:22:51,https://api.github.com/repos/sq/JSIL/git/commits/cebe0e9c5866cc27091e23922cf80761c172bb66,cebe0e9c5866cc27091e23922cf80761c172bb66,Checkpoint: Do type substitution when applying packed struct array attributes so that you don't get IPackedStructArray<!!0> and nonsense like that.
kg,2013-06-29 05:49:41,https://api.github.com/repos/sq/JSIL/git/commits/81c75e306b7e8fba3d78c60c9565ddc6d1b893c9,81c75e306b7e8fba3d78c60c9565ddc6d1b893c9,Update proxies so you can pass typed arrays to Vertex/Index buffers' SetData/GetData.
kg,2013-06-29 05:42:55,https://api.github.com/repos/sq/JSIL/git/commits/a52985ebb6ba74d58b252ffda5769f5366f085ec,a52985ebb6ba74d58b252ffda5769f5366f085ec,"Add JSIL.Runtime.PackedArray.New<T> for creating packed arrays without storing them into fields
JSReplacement methods can return packed struct arrays
JSReplacement methods can have type arguments
Fix positional generic parameters not counting as structs for the packed array type check"
kg,2013-06-28 15:10:45,https://api.github.com/repos/sq/JSIL/git/commits/5f261ad28bf501fd4dc6f31755bf6b79e683d081,5f261ad28bf501fd4dc6f31755bf6b79e683d081,Improved performance of GetData against a packed array by killing the red/blue swapping behavior for Color (it was wrong anyway)
kg,2013-06-28 15:00:39,https://api.github.com/repos/sq/JSIL/git/commits/8ef6121ef15194ea6ea7388124e000382fb0797e,8ef6121ef15194ea6ea7388124e000382fb0797e,Fix Texture.GetData against packed arrays
kg,2013-06-28 14:50:54,https://api.github.com/repos/sq/JSIL/git/commits/2fea1428c7f00ad67985065fb000485a478a216f,2fea1428c7f00ad67985065fb000485a478a216f,Stop using Object.create in Color.Lerp and Color.op_Multiply.
kg,2013-06-28 14:46:02,https://api.github.com/repos/sq/JSIL/git/commits/b4257b01ed75dd7ae5caffa732edc0d8674c5b5b,b4257b01ed75dd7ae5caffa732edc0d8674c5b5b,You can now use JSRuntimeDispatch to tag interface methods in order to bypass JSIL's precise interface method dispatch behavior for that method. This makes packed arrays much faster!
kg,2013-06-28 14:36:08,https://api.github.com/repos/sq/JSIL/git/commits/a46d67a7477c80aceacc371d2ef7bfc59203e25d,a46d67a7477c80aceacc371d2ef7bfc59203e25d,Keep a single scratch canvas imagedata object per canvas so that setdata operations are cheaper.
kg,2013-06-28 14:29:06,https://api.github.com/repos/sq/JSIL/git/commits/7668352c2abed2eed2351b46b3c19265dec2ac37,7668352c2abed2eed2351b46b3c19265dec2ac37,"Don't use TypedArray.set when marshalling single-byte fields.
Better fast-path for SetData with packed arrays (no temporary array copy)"
kg,2013-06-28 14:22:59,https://api.github.com/repos/sq/JSIL/git/commits/80f3353df07dd9bae4ee7a7452540c26c5244f27,80f3353df07dd9bae4ee7a7452540c26c5244f27,Eliminate pointless struct copies for calls to PackedArray.set_Item.
kg,2013-06-28 14:21:50,https://api.github.com/repos/sq/JSIL/git/commits/25674baf6bab367410065d380edde65ff54a90db,25674baf6bab367410065d380edde65ff54a90db,Suppress color copies for Color.Lerp calls
kg,2013-06-28 14:20:07,https://api.github.com/repos/sq/JSIL/git/commits/53dcc1462d2cc0ea966b68701c5db91131bc4d0d,53dcc1462d2cc0ea966b68701c5db91131bc4d0d,Performance improvements to the SetData packed array code path.
kg,2013-06-28 14:09:44,https://api.github.com/repos/sq/JSIL/git/commits/aaf4e5f75e7c0470915d755fb62ef8eab21f76fd,aaf4e5f75e7c0470915d755fb62ef8eab21f76fd,"Add support for proxies adding new fields to existing types for the purposes of translated type information.
Make Color work correctly in packed arrays.
Add a GetItemInto method to packed arrays for getting an item without creating a new instance of its type.
Added a proxy for Texture2D so that you can pass packed arrays to GetData and SetData.
Added a sample that tests creating procedural textures with SetData and packed arrays.
Updated the Texture2D.SetData implementation to work with packed arrays of Color values."
kg,2013-06-28 13:01:52,https://api.github.com/repos/sq/JSIL/git/commits/4dcafe1fefe8330de3999988545026d42de54c76,4dcafe1fefe8330de3999988545026d42de54c76,Fix issue #204 and add test.
kg,2013-06-28 11:30:47,https://api.github.com/repos/sq/JSIL/git/commits/240ed7515de0eb371bcc2ebae649ec97b9e7da6a,240ed7515de0eb371bcc2ebae649ec97b9e7da6a,Fix issue #205 and add a basic test
kg,2013-06-27 12:09:11,https://api.github.com/repos/sq/JSIL/git/commits/f4133ee298fecfbd6dbe003184b603b4043e51e1,f4133ee298fecfbd6dbe003184b603b4043e51e1,Implement the BasicEffect View/World properties (though they default to the identity matrix)
kg,2013-06-27 12:04:58,https://api.github.com/repos/sq/JSIL/git/commits/61f2ad44581f1a4a694d2200c6b622425470289a,61f2ad44581f1a4a694d2200c6b622425470289a,Implement LinkedList removal
kg,2013-06-27 11:50:26,https://api.github.com/repos/sq/JSIL/git/commits/e220b5cd1c35d4baf8c1cdc3b2531117da6e562e,e220b5cd1c35d4baf8c1cdc3b2531117da6e562e,Fix the + prefix being generated for boxed floats.
kg,2013-06-27 11:43:36,https://api.github.com/repos/sq/JSIL/git/commits/be1deca7ab02fd45d320f8ebb44ae1b7e08e0d7c,be1deca7ab02fd45d320f8ebb44ae1b7e08e0d7c,Fix some bad constructors in Vector3 and Vector4.
kg,2013-06-27 11:25:49,https://api.github.com/repos/sq/JSIL/git/commits/94b0a94af3bdc27342ed03e4b1d55032f4dae095,94b0a94af3bdc27342ed03e4b1d55032f4dae095,Tweak the attribute argument extraction code so it won't fail silently in the future.
kg,2013-06-27 11:16:48,https://api.github.com/repos/sq/JSIL/git/commits/7feb5948f6d6747f1d953f4197e1a3c1846e67b2,7feb5948f6d6747f1d953f4197e1a3c1846e67b2,Fix a corner case where the JSEscapingArguments/JSMutatedArguments attributes' arguments were being ignored. (Cecil is dumb :()
kg,2013-06-27 11:09:49,https://api.github.com/repos/sq/JSIL/git/commits/75fb4de499e56248ece5fa3b571c25a1ea6223de,75fb4de499e56248ece5fa3b571c25a1ea6223de,Add a test case for a struct hoisting bug
kg,2013-06-27 10:45:09,https://api.github.com/repos/sq/JSIL/git/commits/61bc4a75510662d21b519d5d9f6650cc54b23b48,61bc4a75510662d21b519d5d9f6650cc54b23b48,"InterfaceMethod.Call now always accepts a second 'ga' argument that can contain generic arguments.
InterfaceMethod.Call now works for interface methods that accept generic arguments (regardless of whether they are a member of a generic interface).
Fixes issue #203."
kg,2013-06-27 10:36:22,https://api.github.com/repos/sq/JSIL/git/commits/8b1a750de2889ceff8de82702817c92414efd7ed,8b1a750de2889ceff8de82702817c92414efd7ed,Checkpoint: Use escaped names in the right places in the interface handling code
kg,2013-06-27 10:29:46,https://api.github.com/repos/sq/JSIL/git/commits/3828ec1c400e7169fb59f2c6898ab3c95653dfd8,3828ec1c400e7169fb59f2c6898ab3c95653dfd8,"Checkpoint: Fix cached signatures not being used for generic interface methods
Kill a dead file"
kg,2013-06-27 10:25:25,https://api.github.com/repos/sq/JSIL/git/commits/5788027628669370f6085d9ed0d0f9830a346a41,5788027628669370f6085d9ed0d0f9830a346a41,Checkpoint: Fix cached interface methods not getting generated with the $b suffix.
kg,2013-06-27 10:22:37,https://api.github.com/repos/sq/JSIL/git/commits/6502d997c9cbb4f773c87168077f34c658f6570a,6502d997c9cbb4f773c87168077f34c658f6570a,"Checkpoint: Add two tests for issue #203.
Fix interface methods not getting the proper $b suffix on their names when they accept generic arguments."
kg,2013-06-27 10:05:29,https://api.github.com/repos/sq/JSIL/git/commits/3a0db4eda1c0f44677e1a507d0aeee3310dfeb9b,3a0db4eda1c0f44677e1a507d0aeee3310dfeb9b,"Fixes to IE9 binary XHR. May help with issue #172.
Fixed bug in exception handling for XNA content.
Fixed XNA ContentReader having its own dumb implementation of ReadString."
kg,2013-06-27 09:27:10,https://api.github.com/repos/sq/JSIL/git/commits/478d43c9523dee4a4823b2b2f98b75130abffa0c,478d43c9523dee4a4823b2b2f98b75130abffa0c,Fix issue #201.
kg,2013-06-25 06:51:57,https://api.github.com/repos/sq/JSIL/git/commits/0d6cd1b955eaeebe1ac547bcc31bfe3493708bda,0d6cd1b955eaeebe1ac547bcc31bfe3493708bda,Optimized GamePadButtons.__CopyMembers__.
kg,2013-06-25 06:31:57,https://api.github.com/repos/sq/JSIL/git/commits/0d1a7ebced35aa46a4b90a3d10b1a819d49c5e1f,0d1a7ebced35aa46a4b90a3d10b1a819d49c5e1f,"StructGenericParameter seems to pass for the correct reasons now. Neat.
Expand metacomment support so you can set jsil configuration options in the source file for tests."
kg,2013-06-25 05:57:37,https://api.github.com/repos/sq/JSIL/git/commits/20bcfebf0ac6696ffc6f1b3f724876d7d197dddc,20bcfebf0ac6696ffc6f1b3f724876d7d197dddc,Browser.Loaders XHR wrapper throws if you attempt to load assets from file://.
kg,2013-06-24 04:35:58,https://api.github.com/repos/sq/JSIL/git/commits/04a2fb8a923246569976d545fb16c0462491dd69,04a2fb8a923246569976d545fb16c0462491dd69,"Type-hint double/single assignments with '+' in JS to try and ensure that they stay as floating point instead of integral (hopefully solves some type information problems where JS runtimes force '0.0' to integral)
Add some double type hints to the XNA vector types"
kg,2013-06-22 22:13:50,https://api.github.com/repos/sq/JSIL/git/commits/216657510ccada99d5d4a7bb64a751e86dea7331,216657510ccada99d5d4a7bb64a751e86dea7331,Fix corlib translation crash.
kg,2013-06-22 20:03:30,https://api.github.com/repos/sq/JSIL/git/commits/13fab08455ca98c2a55e16b5b55fa84c41cff40c,13fab08455ca98c2a55e16b5b55fa84c41cff40c,Update ILSpy
kg,2013-06-22 20:02:06,https://api.github.com/repos/sq/JSIL/git/commits/8ab151949a661f01aa7d0dfeaa4fb2489f7d3b97,8ab151949a661f01aa7d0dfeaa4fb2489f7d3b97,"Ensure struct values are copied when a boxed value is made out of them for pass-by-reference operations (creating a boxed value represents an assignment)
Don't copy struct *references* when creating a boxed value (like T& this)"
kg,2013-06-22 19:49:15,https://api.github.com/repos/sq/JSIL/git/commits/2273848daf60ad98ab3996b208c7db4d6d5d1b9f,2273848daf60ad98ab3996b208c7db4d6d5d1b9f,Reading a struct through a reference should always copy.
kg,2013-06-22 19:06:37,https://api.github.com/repos/sq/JSIL/git/commits/b4ff25eb95b1c478c20920ec908839f2a24bac1e,b4ff25eb95b1c478c20920ec908839f2a24bac1e,"Fix byref transformation not being applied to constructor arguments.
Fix otherwise unused variables being able to be eliminated despite being passed by ref.
Add test for issue #173 (fixed)."
kg,2013-06-22 18:41:53,https://api.github.com/repos/sq/JSIL/git/commits/0f4f90c9174e47b531061694853da8aea6e780ae,0f4f90c9174e47b531061694853da8aea6e780ae,Fix issue #199 and add a test.
kg,2013-06-21 23:07:02,https://api.github.com/repos/sq/JSIL/git/commits/3fd31be6407dcadd7c6cf16e3fa54c3c6dcd3092,3fd31be6407dcadd7c6cf16e3fa54c3c6dcd3092,Fix intermittent failure in touch thumbsticks example JS
kg,2013-06-21 23:06:50,https://api.github.com/repos/sq/JSIL/git/commits/a36daa034b87bb68f05badeaada201393eaf121f,a36daa034b87bb68f05badeaada201393eaf121f,Fix another NRE in the allocation hoister.
kg,2013-06-21 23:03:01,https://api.github.com/repos/sq/JSIL/git/commits/d8424aab639446472fa93e4be259e3cd04b29901,d8424aab639446472fa93e4be259e3cd04b29901,Remove a debugger.break.
kg,2013-06-21 23:02:37,https://api.github.com/repos/sq/JSIL/git/commits/211f8a41dd45b535166d729ff43fdc5959d79891,211f8a41dd45b535166d729ff43fdc5959d79891,Fix issue #198 and add test.
kg,2013-06-21 08:19:14,https://api.github.com/repos/sq/JSIL/git/commits/9492507944f865606480ea8b46816ee84c0fea7f,9492507944f865606480ea8b46816ee84c0fea7f,Allow disabling struct hoisting via configuration
kg,2013-06-21 08:19:03,https://api.github.com/repos/sq/JSIL/git/commits/53ed691967504a0d64ffaf575c433bd3ede1a386,53ed691967504a0d64ffaf575c433bd3ede1a386,Simpler type hints for default values in field initializers.
kg,2013-06-21 07:09:36,https://api.github.com/repos/sq/JSIL/git/commits/085a7ba5acb3b96d9c185842829e62c8fc192b80,085a7ba5acb3b96d9c185842829e62c8fc192b80,"Fix crash in struct hoisting when a method has no definition
Allow disabling struct hoisting"
kg,2013-06-21 06:04:36,https://api.github.com/repos/sq/JSIL/git/commits/3991af023671b4597162d4815f3e180d372e9be3,3991af023671b4597162d4815f3e180d372e9be3,Checkpoint: Limit struct allocation hoisting to function arguments that don't escape (for now).
kg,2013-06-21 05:43:55,https://api.github.com/repos/sq/JSIL/git/commits/7db123dd4a6587a35c753670512ae3248a70ae0a,7db123dd4a6587a35c753670512ae3248a70ae0a,Checkpoint: basic implementation of struct allocation hoisting within loop bodies.
kg,2013-06-20 05:11:45,https://api.github.com/repos/sq/JSIL/git/commits/2e5aa85a9135d831915cc5a40c5cd59da6d3c13d,2e5aa85a9135d831915cc5a40c5cd59da6d3c13d,More changes to touch thumbsticks demo to work around the complete insanity of mobile browsers
kg,2013-06-20 04:58:22,https://api.github.com/repos/sq/JSIL/git/commits/33d1ea59cfa8b51d0a8806400a3f754f35d6fdc1,33d1ea59cfa8b51d0a8806400a3f754f35d6fdc1,"Make mapping of mouse/touch coordinates compatible with CSS transforms.
Various changes to make the touch thumbsticks example work better on mobile."
kg,2013-06-20 03:51:38,https://api.github.com/repos/sq/JSIL/git/commits/82a47e971c5fb34c7932373148bbb9a603b38f06,82a47e971c5fb34c7932373148bbb9a603b38f06,Implement TimeSpan.GreaterThanOrEqual and LessThanOrEqual
kg,2013-06-20 03:48:21,https://api.github.com/repos/sq/JSIL/git/commits/1b7e1371c98cae40e62911ec7c2e743330ec4fa6,1b7e1371c98cae40e62911ec7c2e743330ec4fa6,Add microsoft TouchThumbSticks example.
kg,2013-06-20 03:47:53,https://api.github.com/repos/sq/JSIL/git/commits/9342b3af58df404ce44d75e101661f5f373c3954,9342b3af58df404ce44d75e101661f5f373c3954,Checkpoint partial implementation of touch input.
kg,2013-06-17 15:34:11,https://api.github.com/repos/sq/JSIL/git/commits/a60bf20aa221c888ff73e5d5267a3348ce9dce93,a60bf20aa221c888ff73e5d5267a3348ce9dce93,"Update sourceUrl syntax
Add missing file to output frame"
kg,2013-06-04 01:33:20,https://api.github.com/repos/sq/JSIL/git/commits/3dcc69d90d149ce07b03619adbb94db00b5fefc9,3dcc69d90d149ce07b03619adbb94db00b5fefc9,Fix Enum types not being marked as closed
kg,2013-06-04 01:25:37,https://api.github.com/repos/sq/JSIL/git/commits/e87a4f65042fb8b69ec0a864d4da84e97ad17a19,e87a4f65042fb8b69ec0a864d4da84e97ad17a19,"Checkpoint: Copy members indirectly from the open type's prototype (Foo<>.prototype) to the closed prototype (Foo<T>.prototype), but don't do so recursively."
kg,2013-06-03 07:35:35,https://api.github.com/repos/sq/JSIL/git/commits/4412d57df2553ef7b4e2118191e074535e52419e,4412d57df2553ef7b4e2118191e074535e52419e,Checkpoint: Undo some unnecessary fiddling
kg,2013-06-03 07:17:56,https://api.github.com/repos/sq/JSIL/git/commits/be68cd8a414ea96f92d090316f62af1d8b4ecdc2,be68cd8a414ea96f92d090316f62af1d8b4ecdc2,"Checkpoint: Fix bug introduced in GetTypeName
Various fiddling"
kg,2013-06-03 06:32:51,https://api.github.com/repos/sq/JSIL/git/commits/c6ea3ae371ab25f92bb1e8aa01fdde4e4c77c1b5,c6ea3ae371ab25f92bb1e8aa01fdde4e4c77c1b5,Checkpoint: Fix RenameGenericMethods.
kg,2013-06-03 06:15:02,https://api.github.com/repos/sq/JSIL/git/commits/5624df5719b80ea1750c1ece12f3ade33d73d954,5624df5719b80ea1750c1ece12f3ade33d73d954,"Checkpoint: GenericTypeBaseType test passes now. Probably broke generics hardcore, though."
kg,2013-06-03 05:55:35,https://api.github.com/repos/sq/JSIL/git/commits/56b84f6ebc6fe7838b335bce1e65b1a1f234f621,56b84f6ebc6fe7838b335bce1e65b1a1f234f621,"Checkpoint: Make the behavior of System.Type.ToString more closely match .NET's
Add a test covering invocation of an inherited overloaded method
Expose get_BaseType in System.Type"
kg,2013-05-30 07:41:34,https://api.github.com/repos/sq/JSIL/git/commits/101103684542dc9f75a5a1345f24e22d16c0ea72,101103684542dc9f75a5a1345f24e22d16c0ea72,"Remove use of temporary array in LINQ ElementAt and ElementAtOrDefault, and throw ArgumentOutOfRangeException when appropriate"
kg,2013-05-30 07:36:09,https://api.github.com/repos/sq/JSIL/git/commits/d6bb980b8922649dc538cb2cd439e7e744a47fbd,d6bb980b8922649dc538cb2cd439e7e744a47fbd,Implement Enumerable.Range
kg,2013-05-30 07:25:41,https://api.github.com/repos/sq/JSIL/git/commits/0eacde14ef2582f2cfc25465b5e824d8a02a6e94,0eacde14ef2582f2cfc25465b5e824d8a02a6e94,"Implement basic Func<T, bool> form of Enumerable.Where (issue #84)"
kg,2013-05-30 06:31:42,https://api.github.com/repos/sq/JSIL/git/commits/a2cb5b4ecf5c9998dc84c196c4d272d22ba69dff,a2cb5b4ecf5c9998dc84c196c4d272d22ba69dff,Implement ConstructorInfo.Invoke(object[]) and add a test. At this point issue #174 should be fully solved.
kg,2013-05-30 06:21:34,https://api.github.com/repos/sq/JSIL/git/commits/8c9ca8eec2910319b6d9bf84cdd4739d737896ba,8c9ca8eec2910319b6d9bf84cdd4739d737896ba,"GetMethod filtered by argument types works now.
CreateDelegate test passes."
kg,2013-05-30 06:15:16,https://api.github.com/repos/sq/JSIL/git/commits/627e1cc8f890f96990809a0a90a1ca09a5ebdcc8,627e1cc8f890f96990809a0a90a1ca09a5ebdcc8,"Checkpoint: Partial filtering implementation for GetConstructor/GetMethod
Fix two dumb instances where I was passing integers instead of BindingFlags instances.
Add a test for CreateDelegate"
kg,2013-05-30 06:12:11,https://api.github.com/repos/sq/JSIL/git/commits/55a5796a55f4470eef340881c6530516afe45be9,55a5796a55f4470eef340881c6530516afe45be9,Fix a bug in IsSystemArray
kg,2013-05-30 05:55:03,https://api.github.com/repos/sq/JSIL/git/commits/3b62dad8d7a3f9ce652c4086b86a7fbd02ca1413,3b62dad8d7a3f9ce652c4086b86a7fbd02ca1413,Checkpoint: fix static constructors
kg,2013-05-30 05:50:38,https://api.github.com/repos/sq/JSIL/git/commits/4c8fc9584079f4ef68d2704ecc197721ebc9ada2,4c8fc9584079f4ef68d2704ecc197721ebc9ada2,"Checkpoint: Add a basic implementation of GetConstructor & GetConstructors
Methods named .ctor get turned into a ConstructorInfo instance instead of a MethodInfo instance.
GetMembersInternal doesn't do wacky filtering on MethodInfo now, and doesn't take an allowConstructors parameter anymore"
kg,2013-05-30 05:34:35,https://api.github.com/repos/sq/JSIL/git/commits/02de4cad73402a6a263f9053536cfee27e6b0e7c,02de4cad73402a6a263f9053536cfee27e6b0e7c,Checkpoint: Add tests covering enumeration of class constructors and class methods
kg,2013-05-30 05:34:16,https://api.github.com/repos/sq/JSIL/git/commits/c4ff23816a8dacd266b82ab40b7b89bde69b60b6,c4ff23816a8dacd266b82ab40b7b89bde69b60b6,Fix behavior of reflection APIs when neither the Public or NonPublic flag are provided.
kg,2013-05-30 05:10:19,https://api.github.com/repos/sq/JSIL/git/commits/8be4bc3f4733f921ace039c334a81ab1c4282c2a,8be4bc3f4733f921ace039c334a81ab1c4282c2a,Implement List.ForEach (issue #192)
kg,2013-05-15 08:10:20,https://api.github.com/repos/sq/JSIL/git/commits/1696cac9e01ff225ad9c599e1a7c46a990a957d0,1696cac9e01ff225ad9c599e1a7c46a990a957d0,Version bump to 0.7.6
kg,2013-05-14 11:51:38,https://api.github.com/repos/sq/JSIL/git/commits/01c6cbe17a3f2ed0611d8333999897ba39bd02ba,01c6cbe17a3f2ed0611d8333999897ba39bd02ba,Fix System.String.Format not mapping {{ and }} to single curly braces and add a test that (accidentally) covers it
kg,2013-05-14 11:31:36,https://api.github.com/repos/sq/JSIL/git/commits/a5d868eb2239d9017ee5a12fdb11e1ff1fa15f9d,a5d868eb2239d9017ee5a12fdb11e1ff1fa15f9d,"Merge branch 'il_overrides'

Conflicts:
	Libraries/JSIL.Bootstrap.Linq.js
	Tests/Tests.csproj"
kg,2013-05-14 11:22:19,https://api.github.com/repos/sq/JSIL/git/commits/bbab7bc5ecaa97603d4bdec7309db82322a65360,bbab7bc5ecaa97603d4bdec7309db82322a65360,"Add some basic tests that cover the behavior of AssemblyTranslator and the values in defaults.jsilconfig
Attempt to fix issue #183 for real this time, and add a test."
kg,2013-05-14 08:08:21,https://api.github.com/repos/sq/JSIL/git/commits/0820faede3c8e4ad298984aa0a47b68d90f90159,0820faede3c8e4ad298984aa0a47b68d90f90159,"Make the temporary eliminator less paranoid about calls to non-JS methods.
Fix temporary elimination stopping too early (break instead of continue. Sigh.)
Eliminate some duplicated references to FunctionExpression.AllVariables"
kg,2013-05-14 07:32:43,https://api.github.com/repos/sq/JSIL/git/commits/65c9ca81008715ceab931f36070c85f77547ef60,65c9ca81008715ceab931f36070c85f77547ef60,"Add a test case that ensures the temporary locals created by dynamic call sites are actually eliminated by the temporary eliminator.
Improve the quality of the diagnostic information produced by the temporary eliminator for non-JS method calls.
Be ever so slightly more aggressive about when an invocation can be assumed not to cause side effects on the value of a temporary (basically, ignore invocations that are inside of the first assignment or last access)"
kg,2013-05-14 07:05:15,https://api.github.com/repos/sq/JSIL/git/commits/2b9831cdad12dd4d366dfb856092b8b5a478b351,2b9831cdad12dd4d366dfb856092b8b5a478b351,Fix crash bug in the variable exemption logic
kg,2013-05-14 07:00:58,https://api.github.com/repos/sq/JSIL/git/commits/53d9ccc1e3ac04b8fedef70da920c5a20390a3c4,53d9ccc1e3ac04b8fedef70da920c5a20390a3c4,"Expand function static analysis to identify side effects caused by array writes.
Never treat a local variable as effectively constant if it is passed to functions that cause side effects on it or allow it to escape.
Add a test case that covers erroneous temporary eliminations caused by array side effects not being identified."
kg,2013-05-14 06:10:57,https://api.github.com/repos/sq/JSIL/git/commits/4096c818162569ce622f641ef3f3aabf0b5b2cf3,4096c818162569ce622f641ef3f3aabf0b5b2cf3,Fix old-style interface call in List.Sort
kg,2013-05-14 06:04:36,https://api.github.com/repos/sq/JSIL/git/commits/4cb39f3cf1cf76ed2a9f7847abb7036ff25979db,4cb39f3cf1cf76ed2a9f7847abb7036ff25979db,Make the AsyncResult objects returned by the XNA storage APIs actually implement IAsyncResult.
kg,2013-05-14 04:57:17,https://api.github.com/repos/sq/JSIL/git/commits/b950f2c38be74e76172daf2edb296478ca432283,b950f2c38be74e76172daf2edb296478ca432283,Update two more broken tests
kg,2013-05-14 02:55:33,https://api.github.com/repos/sq/JSIL/git/commits/546b387290780c02762064bd027b04cfbafe7ee9,546b387290780c02762064bd027b04cfbafe7ee9,"LocalsOfIgnoredTypesAreNotInitialized was subtly broken for a while; fix it.
Generate 'JSIL.IgnoredType' expressions when a local of an ignored type is read from or written to."
kg,2013-05-14 02:41:15,https://api.github.com/repos/sq/JSIL/git/commits/bc660ac18e7b50a0533f25dad2f1a935d5bcbce1,bc660ac18e7b50a0533f25dad2f1a935d5bcbce1,Add some analysis tests for the affected field logic
kg,2013-05-14 02:29:10,https://api.github.com/repos/sq/JSIL/git/commits/d4f6828b9401277ca4867e8e7bce6cd7ceb6dc1c,d4f6828b9401277ca4867e8e7bce6cd7ceb6dc1c,Make mutated field information more compact in memory.
kg,2013-05-14 02:20:55,https://api.github.com/repos/sq/JSIL/git/commits/e3efb34e927538374bad9c7e50088f209747c52f,e3efb34e927538374bad9c7e50088f209747c52f,List of fields mutated by a function now lives in the second pass static analysis data and is computed recursively.
kg,2013-05-14 02:15:20,https://api.github.com/repos/sq/JSIL/git/commits/8de56fd3dbbb925e91ee64a13473832300f1296b,8de56fd3dbbb925e91ee64a13473832300f1296b,Make 'method call without analysis data' filter on local elimination less aggressive.
kg,2013-05-14 02:11:00,https://api.github.com/repos/sq/JSIL/git/commits/ddf0af373e2fdfa9d7582ca66edf2a0bdde5cbb2,ddf0af373e2fdfa9d7582ca66edf2a0bdde5cbb2,Expand affected field analysis to cover fields affected by method calls. Addresses a more general form of issue #194.
kg,2013-05-14 01:43:44,https://api.github.com/repos/sq/JSIL/git/commits/8bef23d2a24b118a04d7e0fd834d71c871151f3b,8bef23d2a24b118a04d7e0fd834d71c871151f3b,Add test case for Issue #194.
kg,2013-05-14 01:35:54,https://api.github.com/repos/sq/JSIL/git/commits/e973d4e1704fe230ed11c13ab6cc02194e3568e5,e973d4e1704fe230ed11c13ab6cc02194e3568e5,"Correctness improvement to field access detection in the temporary eliminator. (I really should just remove this optimizer pass, it's so fragile...)"
kg,2013-05-13 07:50:10,https://api.github.com/repos/sq/JSIL/git/commits/2205ca7df36dea44b4ef3e746ce86354959ae1e9,2205ca7df36dea44b4ef3e746ce86354959ae1e9,Made the variant invocation fast path slightly faster.
kg,2013-05-13 07:48:41,https://api.github.com/repos/sq/JSIL/git/commits/5a49c38219b8a77b426115ebb0c97e7e9512b8d6,5a49c38219b8a77b426115ebb0c97e7e9512b8d6,Add a simple benchmark for measuring the cost of variant generic interface method calls.
kg,2013-05-13 07:21:49,https://api.github.com/repos/sq/JSIL/git/commits/b15f5e69fb53d53f3b8479fc7eea28e61d312625,b15f5e69fb53d53f3b8479fc7eea28e61d312625,"Add a monstrous hack that makes it possible to call GetEnumerator on JS objects in cases where they don't actually expose the appropriate methods (just strings and arrays, right now)"
kg,2013-05-13 06:53:12,https://api.github.com/repos/sq/JSIL/git/commits/9fd42b14fbf739ee43aaa234d8755a9855af1e7c,9fd42b14fbf739ee43aaa234d8755a9855af1e7c,"Neat, MultipleGenericInterfaces2 passes now."
kg,2013-05-13 06:49:58,https://api.github.com/repos/sq/JSIL/git/commits/b45134da0478d7ceef2403de2159b9472cee3471,b45134da0478d7ceef2403de2159b9472cee3471,Added two failing tests to the project.
kg,2013-05-13 06:49:50,https://api.github.com/repos/sq/JSIL/git/commits/697d400d136e71561e7398f75f8a13cf75d50dcd,697d400d136e71561e7398f75f8a13cf75d50dcd,Variant invocations work at a basic level and have some simple optimizations applied so they aren't completely slow.
kg,2013-05-11 02:20:21,https://api.github.com/repos/sq/JSIL/git/commits/8087d28467e02a4486b9d981bf192609d51f4fa3,8087d28467e02a4486b9d981bf192609d51f4fa3,"Checkpoint:
  Unoptimized implementation of generic interface (in/out) variance for As/Is/Cast"
kg,2013-05-11 02:03:49,https://api.github.com/repos/sq/JSIL/git/commits/119c68f68a72ea2d122dbc810446cee56b553717,119c68f68a72ea2d122dbc810446cee56b553717,"Checkpoint:
  Building infrastructure for supporting variant casts of interfaces"
kg,2013-05-11 01:49:38,https://api.github.com/repos/sq/JSIL/git/commits/2d90e7615f68df1475a6cf964b86ebfbff5343af,2d90e7615f68df1475a6cf964b86ebfbff5343af,Add variance specifiers to a few interfaces.
kg,2013-05-11 01:28:02,https://api.github.com/repos/sq/JSIL/git/commits/0059d1597ff020204b0c40fcda5af81c7b432e6a,0059d1597ff020204b0c40fcda5af81c7b432e6a,"Fix bad definition of System.Math
Add an error check to generic argument name handling"
kg,2013-05-11 01:25:35,https://api.github.com/repos/sq/JSIL/git/commits/5a8aace401868695e7d12ce1ed907a785201d4ff,5a8aace401868695e7d12ce1ed907a785201d4ff,"Extract logic for handling the generic argument name list (passed to MakeClass, etc) into a utility function.
Extract variance info from generic argument names (""in T"", ""out T"")"
kg,2013-05-11 00:58:26,https://api.github.com/repos/sq/JSIL/git/commits/af326816f2f00c4766d075300a6d6f7d5c141d44,af326816f2f00c4766d075300a6d6f7d5c141d44,Move interface-focused test cases into their own folder
kg,2013-05-08 20:21:06,https://api.github.com/repos/sq/JSIL/git/commits/5895c5528eadcd228077c861876bbfcc8c1263f9,5895c5528eadcd228077c861876bbfcc8c1263f9,Fix blitSinglePixel ignoring input alpha channel
kg,2013-05-08 18:53:41,https://api.github.com/repos/sq/JSIL/git/commits/d3a2a2699777ca53270f27184c4dcc2d161084d9,d3a2a2699777ca53270f27184c4dcc2d161084d9,Stub CultureInfo.get_Name
kg,2013-05-01 19:44:49,https://api.github.com/repos/sq/JSIL/git/commits/271ad6a7378eab002b3f24ca0760c3ffc90adaaf,271ad6a7378eab002b3f24ca0760c3ffc90adaaf,Remove duplicate code
kg,2013-05-01 18:31:20,https://api.github.com/repos/sq/JSIL/git/commits/c1c4c37473ea31277b5632283d054837273f7e0e,c1c4c37473ea31277b5632283d054837273f7e0e,"Implement SoundEffectInstance pitch shifting against Web Audio. I think it works right, but I can't be sure since the spec doesn't say how it works."
kg,2013-05-01 17:19:37,https://api.github.com/repos/sq/JSIL/git/commits/6ff4026aa7b665671bfb595b96ba17417b35a2f3,6ff4026aa7b665671bfb595b96ba17417b35a2f3,Remove debugging document.title nonsense
kg,2013-05-01 17:16:59,https://api.github.com/repos/sq/JSIL/git/commits/9519732dbfdd2848e27238785120a5ceb9037940,9519732dbfdd2848e27238785120a5ceb9037940,Implement stereo panning for SoundEffectInstance in browsers with a complete enough implementation of the absolutely horrid Web Audio API. Fixes issue #186.
kg,2013-05-01 04:17:27,https://api.github.com/repos/sq/JSIL/git/commits/e427c8710e1a1ebca1723a03f6d684af0ffb04b1,e427c8710e1a1ebca1723a03f6d684af0ffb04b1,Texture.GetData<Color> was swapping the red/blue channels. OOPS.
kg,2013-05-01 04:06:02,https://api.github.com/repos/sq/JSIL/git/commits/c62ee2ce6806d37e3fdd8a657b48577904d53379,c62ee2ce6806d37e3fdd8a657b48577904d53379,Add a terrible implementation of Linq ElementAt and ElementAtOrDefault.
kg,2013-05-01 03:44:18,https://api.github.com/repos/sq/JSIL/git/commits/59608a578835edf551d369d9c69b3890c363232b,59608a578835edf551d369d9c69b3890c363232b,"Change the default output directory to . (the current directory where JSILc is invoked from) because the default of %configdirectory% puts things in the JSIL\bin directory and it is DRIVING ME INSANE
Introduce a new %currentdirectory% expansion variable for ."
kg,2013-04-30 23:25:03,https://api.github.com/repos/sq/JSIL/git/commits/7d290d65146b875c992a63b2759759ebda5b8bea,7d290d65146b875c992a63b2759759ebda5b8bea,Preliminary fix for issue #187
kg,2013-04-30 23:25:39,https://api.github.com/repos/sq/JSIL/git/commits/2bb068921eb72bc02acea830722af5d5b94fed56,2bb068921eb72bc02acea830722af5d5b94fed56,"Checkpoint:
  More covariance tests
  When generating lists of generic parameter names, prefix the names with ""in"" and ""out"""
kg,2013-04-30 23:25:03,https://api.github.com/repos/sq/JSIL/git/commits/92a6b5c2cac70165564ba16caafbe3cb94f2848a,92a6b5c2cac70165564ba16caafbe3cb94f2848a,Preliminary fix for issue #187
kg,2013-04-30 10:29:07,https://api.github.com/repos/sq/JSIL/git/commits/68c49de42629907442a81dd020ae05294404b956,68c49de42629907442a81dd020ae05294404b956,"Checkpoint:
  Tag generic parameters as in/out as appropriate, and add a formatting test"
kg,2013-04-30 10:15:39,https://api.github.com/repos/sq/JSIL/git/commits/5599484187190e1ecabab971cea57d499b45e69b,5599484187190e1ecabab971cea57d499b45e69b,"Checkpoint:
  Add a test case for interface covariance"
kg,2013-04-30 10:15:27,https://api.github.com/repos/sq/JSIL/git/commits/042b15adf39120c5b53ce26f09771900d88131b4,042b15adf39120c5b53ce26f09771900d88131b4,Implement Linq OfType
kg,2013-04-30 09:17:37,https://api.github.com/repos/sq/JSIL/git/commits/1fbef5d2fb5b7161e098d1939fd48cb212a5a60a,1fbef5d2fb5b7161e098d1939fd48cb212a5a60a,Merge branch 'master' into il_overrides
kg,2013-04-25 04:12:40,https://api.github.com/repos/sq/JSIL/git/commits/b37b5b26e53604573719058ad16701c9fbc6574e,b37b5b26e53604573719058ad16701c9fbc6574e,Clamp range of HTML5 audio volume values
kg,2013-04-25 04:12:06,https://api.github.com/repos/sq/JSIL/git/commits/4d31d64f047b7ccccb4d4b902c2747098a4c363b,4d31d64f047b7ccccb4d4b902c2747098a4c363b,Fix NaN volume levels in HTML5 audio backend
kg,2013-04-25 04:01:54,https://api.github.com/repos/sq/JSIL/git/commits/d01bf190337e1efaea1253fcc2965a8f56edf77d,d01bf190337e1efaea1253fcc2965a8f56edf77d,Add basic support for XACT sound categories and category volume control. (You may need to nuke %APPDATA%\..\Local\JSIL and do a new build of your game for this to take effect.)
kg,2013-04-25 03:29:55,https://api.github.com/repos/sq/JSIL/git/commits/519df38281a3749e0701ec67f957c06a1d45865f,519df38281a3749e0701ec67f957c06a1d45865f,"Implement XACT Cue.SetVariable(""Volume"", float)."
kg,2013-04-25 03:19:08,https://api.github.com/repos/sq/JSIL/git/commits/0747613fee7fcfbad288b2c555c545b3628a9078,0747613fee7fcfbad288b2c555c545b3628a9078,"Implement Pause/Resume support for sound effects in Google Chrome.
Implement XNA SoundEffect.get_State.
Fixes issue #180."
kg,2013-04-24 09:03:05,https://api.github.com/repos/sq/JSIL/git/commits/8ad3416009310f82ab0e50a81cf7e2441786d84f,8ad3416009310f82ab0e50a81cf7e2441786d84f,Preliminary fix for issue #175.
kg,2013-04-24 08:31:53,https://api.github.com/repos/sq/JSIL/git/commits/3c6d655990c355d4ad18c015a4c12a8049caa781,3c6d655990c355d4ad18c015a4c12a8049caa781,"Add a fix and test case for issue #184, where IntroduceVariableReferences was erroneously skipping over nodes in complex binary expressions.
Add an optional filter predicate to the VisitChildren function that allows filtering which children are visited."
kg,2013-04-24 04:47:32,https://api.github.com/repos/sq/JSIL/git/commits/fa6750cfc8765e1fda1611e4bb91ea4747f7339d,fa6750cfc8765e1fda1611e4bb91ea4747f7339d,"Fix some poorly escaped regexes in defaults.jsilconfig
Provide better feedback on the load status of given assemblies (stubbed vs translate vs proxy) in JSILc and AssemblyTranslator"
kg,2013-04-19 13:04:35,https://api.github.com/repos/sq/JSIL/git/commits/bb2cf4bfc8af0a6edd0f562e45369975ccbfad61,bb2cf4bfc8af0a6edd0f562e45369975ccbfad61,Take inherited interfaces into account when generating .ImplementInterfaces and .Overrides calls.
matthid,2013-04-19 11:38:32,https://api.github.com/repos/sq/JSIL/git/commits/2935339b19105be5ae435893f3b47fbe1e263340,2935339b19105be5ae435893f3b47fbe1e263340,added compiled version of uncompilable tests
kg,2013-04-19 12:50:51,https://api.github.com/repos/sq/JSIL/git/commits/485deb681355564283b666d5ce664063ee64ddad,485deb681355564283b666d5ce664063ee64ddad,"Move some test cases.
Write out the Virtual: part of method descriptors since it might be important."
matthid,2013-04-19 10:03:59,https://api.github.com/repos/sq/JSIL/git/commits/07574df86e02f97d31638234043afd9aba3a5480,07574df86e02f97d31638234043afd9aba3a5480,even more testfiles.
matthid,2013-04-14 09:23:36,https://api.github.com/repos/sq/JSIL/git/commits/01f661473d0470f811aec401f7725a92705fc3bb,01f661473d0470f811aec401f7725a92705fc3bb,even more testcases.
matthid,2013-04-13 17:32:31,https://api.github.com/repos/sq/JSIL/git/commits/f81100850f9eea8b439a8f8333e3b6ed7cc56534,f81100850f9eea8b439a8f8333e3b6ed7cc56534,added testcases to test project.
matthid,2013-04-13 17:32:00,https://api.github.com/repos/sq/JSIL/git/commits/b5dc2900596cc5dd005d23e3a9dd63b8e78307d5,b5dc2900596cc5dd005d23e3a9dd63b8e78307d5,more inheritance testcases.
kg,2013-04-19 10:45:20,https://api.github.com/repos/sq/JSIL/git/commits/98edac1427bd4198311a2c15fb7b34620328c2b3,98edac1427bd4198311a2c15fb7b34620328c2b3,Fix some more cases where type/signature cachers were not being used correctly.
kg,2013-04-19 10:31:08,https://api.github.com/repos/sq/JSIL/git/commits/8d35e412504ba8ce038918b848edd3681834d201,8d35e412504ba8ce038918b848edd3681834d201,Fix typo in definition of AppendText
kg,2013-04-19 10:25:38,https://api.github.com/repos/sq/JSIL/git/commits/d5bdaa9cdb52a6df4fc6f6ca32d397400894b360,d5bdaa9cdb52a6df4fc6f6ca32d397400894b360,Fix formatting of type names in method signatures.
kg,2013-04-19 10:18:58,https://api.github.com/repos/sq/JSIL/git/commits/7f54907358597dee8c78790142fe1e177f1bc219,7f54907358597dee8c78790142fe1e177f1bc219,Fix some duplicate constructors in FileStream.
kg,2013-04-19 10:16:19,https://api.github.com/repos/sq/JSIL/git/commits/0711ec48a7333978f1e4032f518e2cf5e14cad8a,0711ec48a7333978f1e4032f518e2cf5e14cad8a,"Fix a bug accidentally introduced into FixupInterfaces.
Fix a couple ArrayList external collision bugs."
kg,2013-04-19 10:08:36,https://api.github.com/repos/sq/JSIL/git/commits/ccccc38f38cf27462bf4dbc0e88ea48910860d9a,ccccc38f38cf27462bf4dbc0e88ea48910860d9a,Rename some bootstrap library .cctor methods to .cctor2 to avoid collisions with the existing static constructors.
kg,2013-04-19 10:06:04,https://api.github.com/repos/sq/JSIL/git/commits/34ff7244ff713022f4faec9ae7c1b407a8414b28,34ff7244ff713022f4faec9ae7c1b407a8414b28,"Checkpoint:
  Slightly expand List<T> test coverage
  Correct FixupInterfaces trampling non-placeholder interface member implementations with placeholder interface member implementations.
  Fix various problems with bootstrap/core implementations of types."
kg,2013-04-19 09:19:58,https://api.github.com/repos/sq/JSIL/git/commits/044d6081b9cf8b6a878c31ae969b4c939465d287,044d6081b9cf8b6a878c31ae969b4c939465d287,"Fix the ListICollection test case.
Allow passing a string interface name as the first argument to .Overrides instead of an integral index, for cases where the integral index is unknown."
kg,2013-04-19 09:14:44,https://api.github.com/repos/sq/JSIL/git/commits/767e70c0ea3706742972e572411bf362a3246806,767e70c0ea3706742972e572411bf362a3246806,"Checkpoint:
  Fix some bootstrap interface member implementations."
kg,2013-04-19 09:09:39,https://api.github.com/repos/sq/JSIL/git/commits/25e8d7bf9530e0d779156032fd10d353213fbf6f,25e8d7bf9530e0d779156032fd10d353213fbf6f,Update a test.
kg,2013-04-19 08:57:56,https://api.github.com/repos/sq/JSIL/git/commits/8f143f65eaf0addb602fbaac2ef1a05c307735d8,8f143f65eaf0addb602fbaac2ef1a05c307735d8,"Checkpoint:
  Locally cache interface members when they are members of an open generic type."
kg,2013-04-19 08:21:14,https://api.github.com/repos/sq/JSIL/git/commits/02c52ef9653e72776d7b47e06c1e9e77f0b0b1b8,02c52ef9653e72776d7b47e06c1e9e77f0b0b1b8,"Checkpoint:
  Add basic caching support for interface members."
kg,2013-04-19 07:29:46,https://api.github.com/repos/sq/JSIL/git/commits/157f19121ccccb6ad5fbb322b6376192fb463ea0,157f19121ccccb6ad5fbb322b6376192fb463ea0,Minor rearrangements of type ID machinery
kg,2013-04-19 05:29:37,https://api.github.com/repos/sq/JSIL/git/commits/0bb57fbda58a366028735956f49871179bb4f639,0bb57fbda58a366028735956f49871179bb4f639,Force-enable the 'run' button in test_runner because firefox saves form element states on reload.
kg,2013-04-19 05:25:40,https://api.github.com/repos/sq/JSIL/git/commits/b9bcc786cdd5657a05ab0f6dd2b8ca3163fb3c16,b9bcc786cdd5657a05ab0f6dd2b8ca3163fb3c16,"Checkpoint:
  Add a performance test for interface method calls
  Slight performance improvements to Is/As/Cast methods"
kg,2013-04-18 04:15:13,https://api.github.com/repos/sq/JSIL/git/commits/cb8e9d51096474ab75d71b3db265ffadcda98734,cb8e9d51096474ab75d71b3db265ffadcda98734,"Checkpoint:
  Update a test"
kg,2013-04-18 03:57:52,https://api.github.com/repos/sq/JSIL/git/commits/6ac5bb3fff07df1c27ff1dd5f6499c8037fc35c4,6ac5bb3fff07df1c27ff1dd5f6499c8037fc35c4,"Checkpoint:
  Calling a method of an open generic interface throws.
  Always rebind InterfaceMethod objects when an interface goes from open to closed.
  Fix packed struct arrays.
  It turns out the MethodReference class is incredibly broken in a very, very stupid way, so add a workaround."
kg,2013-04-18 03:37:48,https://api.github.com/repos/sq/JSIL/git/commits/b942b93015b5fd7ffac10839137c5b247711d587,b942b93015b5fd7ffac10839137c5b247711d587,"Checkpoint:
  Implement overloaded interface method invocations"
kg,2013-04-18 03:33:47,https://api.github.com/repos/sq/JSIL/git/commits/a512204ecd2be8d0a3cbfa0ed12aafbc3f5d49ae,a512204ecd2be8d0a3cbfa0ed12aafbc3f5d49ae,"Checkpoint:
  Fix type qualified properties in nested types"
kg,2013-04-18 03:26:26,https://api.github.com/repos/sq/JSIL/git/commits/3ecc5477238de835f537461760f9e425e6e850ce,3ecc5477238de835f537461760f9e425e6e850ce,"Checkpoint:
  Throw when an attempt is made to construct an instance of an open generic type.
  Make JSIL.AbstractEnumerator and JSIL.AbstractEnumerable generic types
  Update the LINQ stubs to use the new interface API"
kg,2013-04-18 03:04:39,https://api.github.com/repos/sq/JSIL/git/commits/bb8cad40e0b7a158f9b0c15b2d91fd175bd9db99,bb8cad40e0b7a158f9b0c15b2d91fd175bd9db99,"Checkpoint:
  Extend JSIL.MakeArrayEnumerator and JSIL.GetEnumerator to take a second argument specifying the desired element type.
  Fix the array interface overlay so it produces enumerators with the correct element types.
  Kill dead JSIL.EnumerableArray type.
  Fix a generic argument typo."
kg,2013-04-18 02:51:34,https://api.github.com/repos/sq/JSIL/git/commits/c15e3eef5349044c700b2c5da5a19074261aadeb,c15e3eef5349044c700b2c5da5a19074261aadeb,"Checkpoint:
  Fix array interface overlays always having a T of System.Object"
kg,2013-04-18 01:56:40,https://api.github.com/repos/sq/JSIL/git/commits/915c78201441368a1fb60f849acf0825b0088b59,915c78201441368a1fb60f849acf0825b0088b59,"Checkpoint:
  Fix a couple more BindingFlags"
kg,2013-04-18 01:55:13,https://api.github.com/repos/sq/JSIL/git/commits/bde5c5d91966d1a7da6950c75c35a8c25cb83067,bde5c5d91966d1a7da6950c75c35a8c25cb83067,"Checkpoint:
  Fix BuildFieldList and a couple others using the wrong binding flags
  Give copy constructors their own name so they aren't trampled by the real constructor in Chrome's busted web inspector"
kg,2013-04-18 01:44:35,https://api.github.com/repos/sq/JSIL/git/commits/4bb7b443cd5166cdd749e15430f2fc43e9c5f4be,4bb7b443cd5166cdd749e15430f2fc43e9c5f4be,"Checkpoint:
  Restore resolution of generic method signatures in overload dispatch, because it happens against the members of the open type, not the closed type."
kg,2013-04-18 01:36:55,https://api.github.com/repos/sq/JSIL/git/commits/21b64c071e96b0f10d3cf5f3529a7e2e10ed4871,21b64c071e96b0f10d3cf5f3529a7e2e10ed4871,"Checkpoint:
  Fix BuildMethodGroups not specifying Public & NonPublic"
kg,2013-04-18 01:26:08,https://api.github.com/repos/sq/JSIL/git/commits/c2ce7e17e44ba327d665d308ef41fb0c6b447cd7,c2ce7e17e44ba327d665d308ef41fb0c6b447cd7,"Checkpoint:
  FixupInterfaces was using the wrong BindingFlags"
kg,2013-04-18 01:22:23,https://api.github.com/repos/sq/JSIL/git/commits/7fa5396451cbdba35392ae6131ecf1908ef99a90,7fa5396451cbdba35392ae6131ecf1908ef99a90,"Checkpoint:
  When creating the type object for a closed generic type, resolve all the method signatures in advance so they are no longer generic."
kg,2013-04-18 01:16:55,https://api.github.com/repos/sq/JSIL/git/commits/67bee9b35ad61fb824d4b655139d3ccf048b0881,67bee9b35ad61fb824d4b655139d3ccf048b0881,"Checkpoint:
  Strip out all manual generic signature resolution."
kg,2013-04-18 01:06:26,https://api.github.com/repos/sq/JSIL/git/commits/112b8f57476988a24a694447f2d0eec4d7925d62,112b8f57476988a24a694447f2d0eec4d7925d62,"Checkpoint:
  ParameterInfo works well enough for basic tests against non-generic interfaces"
kg,2013-04-18 01:00:19,https://api.github.com/repos/sq/JSIL/git/commits/67736257f1204ac91e793f11450b592a86ac08b6,67736257f1204ac91e793f11450b592a86ac08b6,"Checkpoint:
  Stub out parts of ParameterInfo
  Fix a couple bugs in MethodInfo property accessors."
kg,2013-04-18 00:55:20,https://api.github.com/repos/sq/JSIL/git/commits/9eaa3f89cd5500995850be0cf5391ff5dcffdb8c,9eaa3f89cd5500995850be0cf5391ff5dcffdb8c,Fix build_skeletons having slightly messed up output
kg,2013-04-18 00:45:55,https://api.github.com/repos/sq/JSIL/git/commits/62271ae8e4c5a15930528b54d8964eecef541e37,62271ae8e4c5a15930528b54d8964eecef541e37,"Checkpoint:
  Move reflection types into their own .js file
  Expand interface test coverage."
kg,2013-04-18 00:15:16,https://api.github.com/repos/sq/JSIL/git/commits/a640d18e48366e4c749259b19cd99482c229a885,a640d18e48366e4c749259b19cd99482c229a885,"Fix some uses of BindingFlags
Fix MakeEnum choking if an enum's members contained a function (hack for $jsilcore.BindingFlags)
Add a test for listing the methods of an interface"
kg,2013-04-17 22:33:06,https://api.github.com/repos/sq/JSIL/git/commits/2616eb87ba5c3a1b562ff6dec7a348951aca90ce,2616eb87ba5c3a1b562ff6dec7a348951aca90ce,Ensure member._data is never null
kg,2013-04-17 08:33:25,https://api.github.com/repos/sq/JSIL/git/commits/25809fed18ecd9d316333dc86b74e1866519240f,25809fed18ecd9d316333dc86b74e1866519240f,"Checkpoint:
  Signatures for methods of generic interfaces seem to be wrong"
kg,2013-04-17 08:04:55,https://api.github.com/repos/sq/JSIL/git/commits/4ae8b5db28e7853996c669ca4cee7400180c22d9,4ae8b5db28e7853996c669ca4cee7400180c22d9,"Checkpoint:
  More complete interface name fixup.
  Fix calls to generic interface methods not using the generic interface method object."
kg,2013-04-17 07:37:20,https://api.github.com/repos/sq/JSIL/git/commits/9937dedf8dbcc1dfad99a450ed12931b52e76517,9937dedf8dbcc1dfad99a450ed12931b52e76517,Fix NRE in VisitNode(JSInvocationExpression) when method is null
kg,2013-04-17 07:36:15,https://api.github.com/repos/sq/JSIL/git/commits/d2886a840b68b04f625babd111bf521494528907,d2886a840b68b04f625babd111bf521494528907,"Checkpoint:
  Partial support for IEnumerable and IDisposable using the new interface model."
kg,2013-04-17 07:14:25,https://api.github.com/repos/sq/JSIL/git/commits/7a4d63f8579ba0bb3bf95b89ed5cde00bfad78ee,7a4d63f8579ba0bb3bf95b89ed5cde00bfad78ee,"Checkpoint:
  InterfaceMethod.Call is generated using MethodSignature machinery"
kg,2013-04-17 07:03:36,https://api.github.com/repos/sq/JSIL/git/commits/b5b8b8d82614cf2b4fe9f5fe3ca6aed97405da7d,b5b8b8d82614cf2b4fe9f5fe3ca6aed97405da7d,"Checkpoint:
  For non-overloaded interface method calls, use the interface method object exposed by the interface object"
kg,2013-04-17 06:55:58,https://api.github.com/repos/sq/JSIL/git/commits/3926d7049f07367e355c3ba66b03cf9219e51b25,3926d7049f07367e355c3ba66b03cf9219e51b25,"Checkpoint:
  Interface methods/properties are more similar to methods/properties of real types (they have reflection info)
  FixupInterfaces now uses reflection info"
kg,2013-04-17 06:34:43,https://api.github.com/repos/sq/JSIL/git/commits/7fba7d8142d78b74665abffab8282ce974b4638b,7fba7d8142d78b74665abffab8282ce974b4638b,"Checkpoint:
  Interface objects contain a JSIL.InterfaceMethod object for each method in the interface, that you can use to call the method on a given object"
kg,2013-04-17 05:29:56,https://api.github.com/repos/sq/JSIL/git/commits/22ed7245107a7fba46dea7b3d4fa63b79b73a64a,22ed7245107a7fba46dea7b3d4fa63b79b73a64a,"Checkpoint:
  Fix MakeProperty so it applies name escaping rules as appropriate (both for finding getters/setters and for declaring the properties)
  Stop using short names for properties"
kg,2013-04-16 02:26:54,https://api.github.com/repos/sq/JSIL/git/commits/87412bad2bf1836a61587cb31a3530fde2242b34,87412bad2bf1836a61587cb31a3530fde2242b34,"Checkpoint:
  Comment each interface in the ImplementInterfaces list with its numeric index
  Each Overrides call has the index of the interface it implements a member of
  MethodInfo.GetName spits out the full name of the method, not a short name"
kg,2013-04-16 01:57:07,https://api.github.com/repos/sq/JSIL/git/commits/05de467b1b7fd31c178215aafab7b9eb731cdcbf,05de467b1b7fd31c178215aafab7b9eb731cdcbf,"Checkpoint:
MethodInfo.Overrides exposes the Overrides information from MethodDefinitions."
kg,2013-04-16 01:07:17,https://api.github.com/repos/sq/JSIL/git/commits/fca4fb8d44b9336be345830687fafcb77e74821b,fca4fb8d44b9336be345830687fafcb77e74821b,Checkpoint: Remove the manual override handling and qualified name logic in MethodInfo and PropertyInfo.
kg,2013-04-16 00:16:35,https://api.github.com/repos/sq/JSIL/git/commits/1f7d82ef3042ede6b3134d978c47d925ff2be80a,1f7d82ef3042ede6b3134d978c47d925ff2be80a,"Don't abort if running the function transform pipeline fails due to deadlock, but print a warning about it. I think this is probably a TrackedLock bug."
kg,2013-04-16 00:16:11,https://api.github.com/repos/sq/JSIL/git/commits/269fa62c7beebce5e35b58416c9625ab8d46fe1f,269fa62c7beebce5e35b58416c9625ab8d46fe1f,Move FSharp.Core tests to FailingTests since I'm not going to fix them yet.
kg,2013-04-16 00:10:57,https://api.github.com/repos/sq/JSIL/git/commits/caa6ef7206db86d4732db9b3756d31c7a368392b,caa6ef7206db86d4732db9b3756d31c7a368392b,Merge remote-tracking branch 'remotes/matthid/fsharpTests'
kg,2013-04-14 05:16:16,https://api.github.com/repos/sq/JSIL/git/commits/1598c3e65e2f989f9211bc65efe1caa23b8c1d81,1598c3e65e2f989f9211bc65efe1caa23b8c1d81,Replace F# redistributable and power pack installers with just the assemblies needed by tests.
kg,2013-04-13 17:04:22,https://api.github.com/repos/sq/JSIL/git/commits/7c291417364bed1887a224d0aa0259d3fa54c6b2,7c291417364bed1887a224d0aa0259d3fa54c6b2,Remove client profile from Meta and Proxies.4.0
kg,2013-04-13 02:14:44,https://api.github.com/repos/sq/JSIL/git/commits/f2a476088df63799156d5f42f739bf5e3bdbc3f6,f2a476088df63799156d5f42f739bf5e3bdbc3f6,Fix the performance tests not compiling
kg,2013-04-13 02:12:55,https://api.github.com/repos/sq/JSIL/git/commits/ef44d54ef17ce226af44f14a42d77afa156c73c9,ef44d54ef17ce226af44f14a42d77afa156c73c9,Fix the four failing test cases that rely on unsafe
kg,2013-04-13 02:11:11,https://api.github.com/repos/sq/JSIL/git/commits/aa7a544ea2abaf0852740aee64018a76c4bb9152,aa7a544ea2abaf0852740aee64018a76c4bb9152,Fix problems compiling the unsafe code test cases.
kg,2013-04-13 02:04:58,https://api.github.com/repos/sq/JSIL/git/commits/8f4cb16411fc953a87f0e4a0e9d5f6069688d663,8f4cb16411fc953a87f0e4a0e9d5f6069688d663,Save compiler warnings and write them out to stderr when reusing a cached compile.
kg,2013-04-13 02:01:57,https://api.github.com/repos/sq/JSIL/git/commits/91de11ff94670f15afcf70eaf154a2eeb65cd64d,91de11ff94670f15afcf70eaf154a2eeb65cd64d,"Write compiler warnings to stderr and only fail test compilation on compile errors.
Explicitly set WarningLevel to 4 and set TreatWarningsAsErrors to false in the test compiler."
kg,2013-04-13 01:50:14,https://api.github.com/repos/sq/JSIL/git/commits/276832ed2a2f31e7bb795bfe184da95087e0b5be,276832ed2a2f31e7bb795bfe184da95087e0b5be,Reformat test case names so that they don't contain dots. This might make monodevelop's test runner happier.
kg,2013-04-13 01:46:55,https://api.github.com/repos/sq/JSIL/git/commits/d72c164da778d5f260cf5bcde71e130aaa8e578e,d72c164da778d5f260cf5bcde71e130aaa8e578e,"Windows compatibility fixes for Matthias' Linux/Mono unit test suite changes.
Moved newline/directory separator fixup functions into a static helper class."
matthid,2013-04-12 13:01:53,https://api.github.com/repos/sq/JSIL/git/commits/de62947f82c9a1099746c8ea7df3e641ee6c7422,de62947f82c9a1099746c8ea7df3e641ee6c7422,changes to make the unit test suite run on mono.
kg,2013-04-13 01:20:33,https://api.github.com/repos/sq/JSIL/git/commits/14d7eede83c3a2b37d4d7a63cca656576cbdc9ab,14d7eede83c3a2b37d4d7a63cca656576cbdc9ab,"Change the signature of the JavascriptFormatter.Identifier(string, EscapingMode?) overload so that the second argument is not nullable, and introduce an EscapingMode.None value. The null was causing problems because Mono's C# compiler has a slightly different implementation of overload resolution in this scenario, and there were two valid overloads for (string, null) because I'm a moron."
kg,2013-04-13 01:07:17,https://api.github.com/repos/sq/JSIL/git/commits/93b111b1237de66495715fe351ffbc3eb2c876f5,93b111b1237de66495715fe351ffbc3eb2c876f5,Fix wrong conditional on Compiler references
kg,2013-04-13 01:05:55,https://api.github.com/repos/sq/JSIL/git/commits/1ea57d69ef8ac7f93eb00a0d93f5ba584d1c4d2a,1ea57d69ef8ac7f93eb00a0d93f5ba584d1c4d2a,Drop use of Client .NET framework profile in JSIL.csproj
kg,2013-04-13 01:05:15,https://api.github.com/repos/sq/JSIL/git/commits/2610b8d26e325ca9b43aadc90ef4e4bf8ce7f869,2610b8d26e325ca9b43aadc90ef4e4bf8ce7f869,Only enable solution building and related MSBuild features when compiling JSILc on Windows. This should automatically disable it when people try to build JSILc on Mac or Linux using Mono.
matthid,2013-04-12 18:13:48,https://api.github.com/repos/sq/JSIL/git/commits/fe985bd0dfa2fc26798eeabd80cf0d6036bfa20a,fe985bd0dfa2fc26798eeabd80cf0d6036bfa20a,adding the testfiles to the test project
matthid,2013-04-12 18:19:44,https://api.github.com/repos/sq/JSIL/git/commits/b9fb11df265fed360612b0de7849da67d294a6c2,b9fb11df265fed360612b0de7849da67d294a6c2,added tests for FSharp.Core.
matthid,2013-04-12 18:09:14,https://api.github.com/repos/sq/JSIL/git/commits/faf87d340916b69e44be87c0eafb795fc0eb993a,faf87d340916b69e44be87c0eafb795fc0eb993a,added some testcases for interfaces and f# object expressions.
kg,2013-04-10 15:25:18,https://api.github.com/repos/sq/JSIL/git/commits/f86d9f05e32f0a62220f9e7b050c0b6a4becf6f9,f86d9f05e32f0a62220f9e7b050c0b6a4becf6f9,"Add basic implementation of some of the System.Char classifiers.
Tweak issue #118 test case so it passes now."
kg,2013-04-10 15:15:41,https://api.github.com/repos/sq/JSIL/git/commits/9b963cb64154b0dc77f010c18eba2e2758a8d3d9,9b963cb64154b0dc77f010c18eba2e2758a8d3d9,Fix VariableEliminator trying to insert raw expressions into variable declaration statements.
kg,2013-04-10 15:13:57,https://api.github.com/repos/sq/JSIL/git/commits/0f41a84c5e3d57301b7438bc7ab6756b01b60d89,0f41a84c5e3d57301b7438bc7ab6756b01b60d89,JSVariableDeclarationStatement throws if you try to add a binary operator expression that isn't an assignment
kg,2013-04-10 15:02:51,https://api.github.com/repos/sq/JSIL/git/commits/d003e22ab20426145ba82a0dad242ef17fb4cf2f,d003e22ab20426145ba82a0dad242ef17fb4cf2f,"Add a test case for issue #118
Add support for F# test cases.
Project tweaks to suppress compiler warnings
Add FSharp redistributable files to Upstream folder."
kg,2013-04-10 14:22:19,https://api.github.com/repos/sq/JSIL/git/commits/5999bc2848dcaaf74a8096be07157e77f5e20868,5999bc2848dcaaf74a8096be07157e77f5e20868,Move CompilerUtil into its own file.
kg,2013-04-01 09:21:01,https://api.github.com/repos/sq/JSIL/git/commits/c78d47e32c4516de6c89456309c245a098a99bf0,c78d47e32c4516de6c89456309c245a098a99bf0,Handle null ParentNode in VariableEliminator.
kg,2013-04-01 09:16:19,https://api.github.com/repos/sq/JSIL/git/commits/0b4df683a4a8ebbdab909fa7fe9eebe957b17d82,0b4df683a4a8ebbdab909fa7fe9eebe957b17d82,"Add test case and fix for issue #176.
Temporary eliminator cleanups.
Fix the type cacher crashing when an enum literal or default value literal ended up duplicated in the AST"
kg,2013-04-01 04:23:36,https://api.github.com/repos/sq/JSIL/git/commits/2c15bb72f9b2ea4ab283fc7e40e24297bc7a971c,2c15bb72f9b2ea4ab283fc7e40e24297bc7a971c,Expand metacomment support in tests so that they can reference DLLs
kg,2013-04-01 00:24:53,https://api.github.com/repos/sq/JSIL/git/commits/d18f4868eabee25ca5c57fbd9048f437d213913e,d18f4868eabee25ca5c57fbd9048f437d213913e,Of course IE11 doesn't fix the Canvas 2D backend. Why would it?
kg,2013-03-25 03:00:40,https://api.github.com/repos/sq/JSIL/git/commits/c9f67bed41c92975b22ff80a333e257cbc690a86,c9f67bed41c92975b22ff80a333e257cbc690a86,Add dlbd's implementation of Enumerable.ToList (issue #171)
kg,2013-03-25 01:42:58,https://api.github.com/repos/sq/JSIL/git/commits/3c931d0ff9aeeb9ae0c77599cbf0d85faa65a1a8,3c931d0ff9aeeb9ae0c77599cbf0d85faa65a1a8,"Add a binding for JSIL.CreateNamedFunction to JSIL.Meta
Move some classes/methods out of Verbatim.cs into Builtins.cs"
kg,2013-03-25 00:56:53,https://api.github.com/repos/sq/JSIL/git/commits/00f836b92280a6122f3dec05dacb263c969381f9,00f836b92280a6122f3dec05dacb263c969381f9,Add dlbd's Enumerable.Cast implementation (issue #170)
kg,2013-03-25 00:18:37,https://api.github.com/repos/sq/JSIL/git/commits/b853af45e474f6146919c3df8a0aa40380c796b4,b853af45e474f6146919c3df8a0aa40380c796b4,"Minor performance improvement to signature cacher
Fix release builds of Meta"
kg,2013-03-25 00:18:26,https://api.github.com/repos/sq/JSIL/git/commits/eb085be98ee2ef7825cf35c9a95c395921e4ef46,eb085be98ee2ef7825cf35c9a95c395921e4ef46,Split Linq support from Bootstrap into its own file.
kg,2013-03-24 16:07:49,https://api.github.com/repos/sq/JSIL/git/commits/b2057643e889d8437bf12f59ff402aee78f0b4dc,b2057643e889d8437bf12f59ff402aee78f0b4dc,Tweak method signature cacher to improve memory usage and make it less stupid
kg,2013-03-24 13:55:23,https://api.github.com/repos/sq/JSIL/git/commits/d7130e02fc65628d6f5f0a385a01caa52894faf9,d7130e02fc65628d6f5f0a385a01caa52894faf9,Implement some of the System.Convert methods for Int64/UInt64
kg,2013-03-24 13:47:54,https://api.github.com/repos/sq/JSIL/git/commits/1a9f890ce19e10176986bd949d9e7df3d645eace,1a9f890ce19e10176986bd949d9e7df3d645eace,Work around a stupid edge case in JS related to returning values from constructors. Fixes the String constructors.
kg,2013-03-24 13:37:51,https://api.github.com/repos/sq/JSIL/git/commits/de531bc31b048e7ed31909602da056ed5fbce6e3,de531bc31b048e7ed31909602da056ed5fbce6e3,Implement DateTime's year/month/day constructors
kg,2013-03-24 13:12:14,https://api.github.com/repos/sq/JSIL/git/commits/3df9b472828d53fdbef8ac21dacfaf8abda3ebe1,3df9b472828d53fdbef8ac21dacfaf8abda3ebe1,Add a .sln file without any XNA dependencies. (Issue #157)
kg,2013-03-24 13:08:52,https://api.github.com/repos/sq/JSIL/git/commits/1faf61a092f5d9abc67cbde52a0a78a8effc40de,1faf61a092f5d9abc67cbde52a0a78a8effc40de,Version bump (0.7.5)
kg,2013-03-24 13:06:57,https://api.github.com/repos/sq/JSIL/git/commits/896c9faed4bad4c2a1fbb73a09bf18db8bac5687,896c9faed4bad4c2a1fbb73a09bf18db8bac5687,Implement == and != for Decimal (issue #167)
kg,2013-03-24 13:01:14,https://api.github.com/repos/sq/JSIL/git/commits/1c9b5ad05b522504dbc465b6fbdde957cf0e009b,1c9b5ad05b522504dbc465b6fbdde957cf0e009b,Fix constructing delegate instances from interface members. (Issue #168)
kg,2013-03-24 12:53:38,https://api.github.com/repos/sq/JSIL/git/commits/be75e43e9f3a42afe05338c83a52ffe9e6debb0f,be75e43e9f3a42afe05338c83a52ffe9e6debb0f,Mark Array.get_Length pure
kg,2013-03-24 01:23:24,https://api.github.com/repos/sq/JSIL/git/commits/5d5e66d2b8ad73095fcde10b1e650c99af82bbf7,5d5e66d2b8ad73095fcde10b1e650c99af82bbf7,Cleanups to the vertex structs example.
kg,2013-03-24 01:16:16,https://api.github.com/repos/sq/JSIL/git/commits/dab31fbdf4d95f1abe27af78afc198a4921b8597,dab31fbdf4d95f1abe27af78afc198a4921b8597,"Fix a logic error in the WebGL samples
Update the WebGL vertex structs sample to use interleaved vertex data.
Fix Marshal.SizeOf(object)."
kg,2013-03-23 23:32:49,https://api.github.com/repos/sq/JSIL/git/commits/c9ea5274e51e6c67b87ad5f74f0ddcbef232a663,c9ea5274e51e6c67b87ad5f74f0ddcbef232a663,Add the ability to assert about the nature of a failing test's failure so that breakages aren't hidden
kg,2013-03-23 22:48:29,https://api.github.com/repos/sq/JSIL/git/commits/ecdac9372698828ede2df2bb2595fd2bb31a1155,ecdac9372698828ede2df2bb2595fd2bb31a1155,"Allow attributing a function to specify that its return value is a packed array.
Safety check return statements within functions to ensure that packed arrays are not returned as normal arrays or vice versa."
kg,2013-03-23 22:16:28,https://api.github.com/repos/sq/JSIL/git/commits/df09acc0f7cebcb0a35f338a1118b26151294c7e,df09acc0f7cebcb0a35f338a1118b26151294c7e,"Add a back door to opt out of the packed array argument checking via an attribute.
Make JSILc return a non-zero exit code if non-fatal errors occurred during translation."
kg,2013-03-23 21:56:30,https://api.github.com/repos/sq/JSIL/git/commits/c1cb3eed02c6edad70ab35e6cbd313d7ef2744ad,c1cb3eed02c6edad70ab35e6cbd313d7ef2744ad,"Allow annotating a function with the JSPackedArrayArguments attribute to specify which arguments expect a packed array.
Throw when an attempt is made to pass a packed array as an argument to a function expecting a normal array.
Throw when an attempt is made to pass a normal array as an argument to a function expecting a packed array.
Change the packed array interface so it exposes operator [] instead of Get/Set methods."
kg,2013-03-23 17:34:00,https://api.github.com/repos/sq/JSIL/git/commits/855489e81fc2bed8a0209a3fd4ba19a78fa9b854,855489e81fc2bed8a0209a3fd4ba19a78fa9b854,Added Builtins.IsTruthy and Builtins.IsFalsy for doing falseness/truthness checks in output JS
kg,2013-03-23 17:12:38,https://api.github.com/repos/sq/JSIL/git/commits/6aa69bcaa29a88ff69c566a2bd1cbc62a520c98f,6aa69bcaa29a88ff69c566a2bd1cbc62a520c98f,"If a JSReplacement method is also JSIsPure, treat it as constant if all its arguments are constant.
Mark the Math proxies as pure."
kg,2013-03-23 16:59:08,https://api.github.com/repos/sq/JSIL/git/commits/3d598e5d1bc2f22469a2a2fb860f77dfee9b61d5,3d598e5d1bc2f22469a2a2fb860f77dfee9b61d5,Add an example of passing packed struct arrays to WebGL
kg,2013-03-23 16:55:28,https://api.github.com/repos/sq/JSIL/git/commits/3f308d20618ae00aee2cdcb2155c1de4442fdaa0,3f308d20618ae00aee2cdcb2155c1de4442fdaa0,"Fix packed structs not working if unsafe code is disabled
Fix bugs in JSIL.IsTypedArray and JSIL.IsPackedArray
Implement support for passing an array initializer to JSIL.PackedArray.New
Add extension methods in JSIL.Runtime for getting the TypedArray/ArrayBuffer backing a given array (so that you can pass it to WebGL, etc.)"
kg,2013-03-23 14:51:48,https://api.github.com/repos/sq/JSIL/git/commits/dae732daa9bb0166345ee6a1f97654b83ce1bed0,dae732daa9bb0166345ee6a1f97654b83ce1bed0,Fix SignatureCacher records having different hashcodes when they were equal.
kg,2013-03-23 14:47:11,https://api.github.com/repos/sq/JSIL/git/commits/1b31d52e57763135d333f1e665f66e10d7757e47,1b31d52e57763135d333f1e665f66e10d7757e47,Correctness/efficiency fixes to signature caching
kg,2013-03-23 14:31:49,https://api.github.com/repos/sq/JSIL/git/commits/004d7ac0e73ad957f6025c9e0531ad169b19772b,004d7ac0e73ad957f6025c9e0531ad169b19772b,Method/constructor signatures that can't be cached type-globally can optionally be initialized once at the top of a function body. This improves performance for functions that call through these signatures inside loops.
kg,2013-03-23 13:55:52,https://api.github.com/repos/sq/JSIL/git/commits/7b0e1b1f6969c20805381014edc1b9c6352ec05c,7b0e1b1f6969c20805381014edc1b9c6352ec05c,Extend SetLazyValueProperty's feature set so that it can work correctly when used on an object's prototype.
kg,2013-03-23 13:43:30,https://api.github.com/repos/sq/JSIL/git/commits/14813cf3588fcabd352d71cf0392cd06e266c8f3,14813cf3588fcabd352d71cf0392cd06e266c8f3,Hoist SetLazyValueProperty calls out of MethodSignature and ConstructorSignature's constructors.
kg,2013-03-23 13:39:30,https://api.github.com/repos/sq/JSIL/git/commits/4f9c6e56aaad46872cb9d2071e0b4c6ed24c1044,4f9c6e56aaad46872cb9d2071e0b4c6ed24c1044,"Cache MethodSignature's generated invocation methods based on the type IDs, so that uncached method signatures aren't quite so expensive to use."
kg,2013-03-23 13:32:58,https://api.github.com/repos/sq/JSIL/git/commits/34fa43b108779cc962e44945ecb721e662de2fb7,34fa43b108779cc962e44945ecb721e662de2fb7,Add a non-performance test for the RenameGenericMethods bug
kg,2013-03-23 13:31:31,https://api.github.com/repos/sq/JSIL/git/commits/6ffe8486ed549814a5932d301e25bcbb34c60037,6ffe8486ed549814a5932d301e25bcbb34c60037,"Fix RenameGenericMethods not working for static classes.
Kill some replay files."
kg,2013-03-21 09:52:26,https://api.github.com/repos/sq/JSIL/git/commits/f9d4a99d365ddab3630e29e061b1c0c8d89b4d08,f9d4a99d365ddab3630e29e061b1c0c8d89b4d08,Visit nested functions in the signature cacher since signature caching doesn't mutate the AST. Fixes signature caching inside lambdas.
kg,2013-03-21 09:42:51,https://api.github.com/repos/sq/JSIL/git/commits/f5d28753e691733c7c4ab129fed2dbd5ae41938c,f5d28753e691733c7c4ab129fed2dbd5ae41938c,Allow method signatures containing open types to be cached if all the generic parameters are positional parameters belonging to the method being called.
kg,2013-03-21 09:07:17,https://api.github.com/repos/sq/JSIL/git/commits/f5c1a971b4f7336e3d1d284d6fd1cb3d26b68fd0,f5c1a971b4f7336e3d1d284d6fd1cb3d26b68fd0,Fix XNA ContentReader construction
kg,2013-03-21 08:53:32,https://api.github.com/repos/sq/JSIL/git/commits/16b822f0c9881ab3c3e2a161b6f790116aeaa155,16b822f0c9881ab3c3e2a161b6f790116aeaa155,Make signature cache more precise to ensure that caching can occur in more cases.
kg,2013-03-21 08:45:13,https://api.github.com/repos/sq/JSIL/git/commits/b0fcb522360c42e2f5292694ab17189661f4456f,b0fcb522360c42e2f5292694ab17189661f4456f,Fix method/constructor signatures erroneously being cached if the declaring type was open but the arguments/return type were not
kg,2013-03-21 08:39:23,https://api.github.com/repos/sq/JSIL/git/commits/f00f9cd86f5c4ad71ff2763a201d84bc4430f233,f00f9cd86f5c4ad71ff2763a201d84bc4430f233,Fix AstEmitter null reference expression when generating static constructors
kg,2013-03-21 08:37:13,https://api.github.com/repos/sq/JSIL/git/commits/6d0d01f41ba495e1ddb31c10cf46b72dd70c8943,6d0d01f41ba495e1ddb31c10cf46b72dd70c8943,Remove use of .call in ConstructorSignature.Construct. It's actually faster than fast overload dispatch now.
kg,2013-03-21 08:26:29,https://api.github.com/repos/sq/JSIL/git/commits/c7ad9964135cdd91fedb87eb58cff5b0e8ca49a0,c7ad9964135cdd91fedb87eb58cff5b0e8ca49a0,ConstructorSignature.Construct now uses a bound constructor to avoid Object.create
kg,2013-03-21 08:15:02,https://api.github.com/repos/sq/JSIL/git/commits/20a4e67fa0c4f65ff1f393be42ae2d74ee2a9f76,20a4e67fa0c4f65ff1f393be42ae2d74ee2a9f76,Don't use .apply in ConstructorSignature.Construct()
kg,2013-03-21 08:11:14,https://api.github.com/repos/sq/JSIL/git/commits/1c761e4cd2fd694e12db3d862f3af6543cbde684,1c761e4cd2fd694e12db3d862f3af6543cbde684,"Basic optimizations to ConstructorSignature.Construct
Introduce JSIL.GetFieldInitializer to eliminate duplicate field initializers"
kg,2013-03-21 07:52:03,https://api.github.com/repos/sq/JSIL/git/commits/fa3eeef93001ddef53ab8f34ced8f80673fd25c3,fa3eeef93001ddef53ab8f34ced8f80673fd25c3,"Method/constructor signatures are now cached the same way as types, using closures local to each type definition. This reduces the cost of fetching a cached signature and eliminates the need to cache all signatures.
Killed MethodSignatureCache and $sig."
kg,2013-03-21 06:16:59,https://api.github.com/repos/sq/JSIL/git/commits/171e349f857bf8f1e5d2fb0bf5d2d3b1fe12eb4b,171e349f857bf8f1e5d2fb0bf5d2d3b1fe12eb4b,"Define separate JSIL.MethodSignature and JSIL.ConstructorSignature types that inherit from a common base class.
Move MethodSignature.Construct to ConstructorSignature.Construct
ConstructorSignature.Construct no longer takes the type to construct as an argument (it is baked into the signature object)"
kg,2013-03-21 06:01:36,https://api.github.com/repos/sq/JSIL/git/commits/1c087b38e616989021bab74c4f18a7492dfa7e45,1c087b38e616989021bab74c4f18a7492dfa7e45,Add a performance test for overloaded constructors.
kg,2013-03-21 05:51:03,https://api.github.com/repos/sq/JSIL/git/commits/4ed42b5f394af230711a4a332ff37ff0fdff915f,4ed42b5f394af230711a4a332ff37ff0fdff915f,Apply the CallStatic optimization to Call and CallVirtual as well
kg,2013-03-21 05:38:52,https://api.github.com/repos/sq/JSIL/git/commits/12130824b5a67a48c8182b24f38204b0239eaaac,12130824b5a67a48c8182b24f38204b0239eaaac,Made MethodSignature.CallStatic much faster by lazily constructing a special dispatcher for each instance based on its argument count
kg,2013-03-21 05:25:20,https://api.github.com/repos/sq/JSIL/git/commits/547d147b4c3852a04300de8ddb16b6241f71dfab,547d147b4c3852a04300de8ddb16b6241f71dfab,"Extract some common MethodSignature invocation logic into a LookupMethod method.
Checkpoint some work on MethodSignature invocation optimizations."
kg,2013-03-21 05:12:07,https://api.github.com/repos/sq/JSIL/git/commits/a4bb4d430d8a75b8abd1668f1b41bf1da069d1de,a4bb4d430d8a75b8abd1668f1b41bf1da069d1de,Safari 6 compatibility hacks to WebGL sample
kg,2013-03-21 05:11:54,https://api.github.com/repos/sq/JSIL/git/commits/acf1b9d3704e5c11e7d0dd602773adaafafa0547,acf1b9d3704e5c11e7d0dd602773adaafafa0547,Add a performance test covering overloaded method calls
kg,2013-03-20 14:34:40,https://api.github.com/repos/sq/JSIL/git/commits/bdc01605b8c180118a0a48c6850ebd675810f98e,bdc01605b8c180118a0a48c6850ebd675810f98e,Fix field access analysis in the temporary eliminator being confused by casts
kg,2013-03-20 14:24:39,https://api.github.com/repos/sq/JSIL/git/commits/f4c86ce0eddccb21895b510e874e1482b903743b,f4c86ce0eddccb21895b510e874e1482b903743b,"Ugh, purity analysis for function calls has been broken for god knows how long...
Fix temporary local copies of fields not being eliminated because the NodeIndex was being compared instead of the StatementIndex"
kg,2013-03-20 14:16:46,https://api.github.com/repos/sq/JSIL/git/commits/0b4446a612ec3479afd807bef6efb85be5219a7b,0b4446a612ec3479afd807bef6efb85be5219a7b,"Make temporary variable eliminator able to eliminate a variable if all accesses come after all assignments
Move method replacement for GetTypeFromHandle into ILBlockTranslator since it enables more variable elimination
Fix JSTypeOfExpression.GetActualType"
kg,2013-03-20 13:47:53,https://api.github.com/repos/sq/JSIL/git/commits/bfe5df9142ac9353020ddc62a28cbd572e3c112d,bfe5df9142ac9353020ddc62a28cbd572e3c112d,"Updated so that the XNA 4 version of the platformer starter kit can be used (why did they reduce the resolution?!)
Tweaks to demo HTML
Added WebGL demo to main site"
kg,2013-03-20 13:11:30,https://api.github.com/repos/sq/JSIL/git/commits/ea59d16c46d94cef2bda7d9a06fb4043c7810236,ea59d16c46d94cef2bda7d9a06fb4043c7810236,WebGL example works
kg,2013-03-20 13:11:20,https://api.github.com/repos/sq/JSIL/git/commits/3b3354c1a3ff85244461499674238cf6ff6227ea,3b3354c1a3ff85244461499674238cf6ff6227ea,Implement File.ReadAllBytes
kg,2013-03-20 12:33:19,https://api.github.com/repos/sq/JSIL/git/commits/8d294b26c1e8baed13b76a23a83037434224fd1c,8d294b26c1e8baed13b76a23a83037434224fd1c,Fix for SiteContainers getting translated sometimes.
kg,2013-03-20 12:28:49,https://api.github.com/repos/sq/JSIL/git/commits/1cca2ee318b6eb9f9f38c013889484ab56e6fb67,1cca2ee318b6eb9f9f38c013889484ab56e6fb67,"Improve the accuracy of temporary variable elimination so that if it is eliminating a field read (var local = foo.Field) it scans forward to ensure that foo.Field is not mutated later on in the function.
Update the static analyzer to build a list of all field accesses and tag them as reads or potential writes.
The temporary variable eliminator now has a 'dry run' mode where it will output what it would have done without doing it."
kg,2013-03-20 12:08:10,https://api.github.com/repos/sq/JSIL/git/commits/9e421f57f675b974c30254b8e8e354b9eb8b5233,9e421f57f675b974c30254b8e8e354b9eb8b5233,Update .sln
kg,2013-03-20 12:07:26,https://api.github.com/repos/sq/JSIL/git/commits/94335313218a882fdb08f1ce1f6203ac13f39cd9,94335313218a882fdb08f1ce1f6203ac13f39cd9,Fixed the logic in a couple of the File methods.
kg,2013-03-20 12:07:10,https://api.github.com/repos/sq/JSIL/git/commits/17931453a4c8c8075bd428fdcc022b773142b70d,17931453a4c8c8075bd428fdcc022b773142b70d,"Made the Verbatim methods/properties return 'dynamic' instead of 'object'.
Killed .NET 3.5 support."
kg,2013-03-20 12:04:54,https://api.github.com/repos/sq/JSIL/git/commits/1bd03fbc8da86e11d5a4bcca1a045209e259490c,1bd03fbc8da86e11d5a4bcca1a045209e259490c,"Made the static analyzer slightly more precise when it comes to identifying assignments.
Made the static analyzer more precise when it comes to determining whether an access occurs within control flow.
Made temporary local variable elimination more aggressive."
kg,2013-03-20 10:56:17,https://api.github.com/repos/sq/JSIL/git/commits/7b40774cbf47a9ce1e484da42a717b1f0e0f8f90,7b40774cbf47a9ce1e484da42a717b1f0e0f8f90,Add a simple WebGL demo skeleton
kg,2013-03-20 10:55:42,https://api.github.com/repos/sq/JSIL/git/commits/e17585c03f009290b33de34cf2f5dedb776758af,e17585c03f009290b33de34cf2f5dedb776758af,Fix recursive initialization in System.Text.Encoding's cctor
kg,2013-03-20 10:35:04,https://api.github.com/repos/sq/JSIL/git/commits/490afe47a14e4966f0ca0f01b5d738070c3a1c0f,490afe47a14e4966f0ca0f01b5d738070c3a1c0f,"SolutionBuilder sets variables when building a solution so you can suppress pre/post build events:
  JSIL=building
  JSILVersion=<version of JSIL>"
kg,2013-03-20 07:39:03,https://api.github.com/repos/sq/JSIL/git/commits/88690cd786e4adac49328e1d08ae6087e33164eb,88690cd786e4adac49328e1d08ae6087e33164eb,Fix boolean instance fields defaulting to 0 instead of false
kg,2013-03-20 07:25:53,https://api.github.com/repos/sq/JSIL/git/commits/26c2d3e94defdb731fab82e6620068ccc9bbaf76,26c2d3e94defdb731fab82e6620068ccc9bbaf76,"More type hints in XNA classes/structs
Stop using property accessors in SpriteBatch.Draw"
kg,2013-03-20 07:03:39,https://api.github.com/repos/sq/JSIL/git/commits/0c8e597271819d20570d8f65425b4f37b000575f,0c8e597271819d20570d8f65425b4f37b000575f,Force Rectangle and Point data members to int32 for better performance
kg,2013-03-20 07:02:17,https://api.github.com/repos/sq/JSIL/git/commits/77c1d7ee6687d2ce4490e33f4a877ab9dc81910b,77c1d7ee6687d2ce4490e33f4a877ab9dc81910b,"Use WeakMaps if available for Object.GetHashCode
Tweak copy constructor codegen"
kg,2013-03-20 06:35:54,https://api.github.com/repos/sq/JSIL/git/commits/8744e9401cb9db6b2aa250f366a35f636491c0a9,8744e9401cb9db6b2aa250f366a35f636491c0a9,Use encodings in BinaryReader.ReadChars and BinaryReader.ReadString
kg,2013-03-19 14:05:12,https://api.github.com/repos/sq/JSIL/git/commits/b5fd97421fe11cee4031b13f4353e2e87b74094f,b5fd97421fe11cee4031b13f4353e2e87b74094f,Use >> or | instead of >>> in some pointer code since Spidermonkey has historical issues with >>>.
kg,2013-03-19 11:27:21,https://api.github.com/repos/sq/JSIL/git/commits/64d98344ce0415d48549f8020bdc90148e79a918,64d98344ce0415d48549f8020bdc90148e79a918,Size the marshalling scratch buffer on the fly to ensure it's always big enough
kg,2013-03-19 11:08:41,https://api.github.com/repos/sq/JSIL/git/commits/f25cb05fb2057b8bf111c9c4a5fd8292e9c83642,f25cb05fb2057b8bf111c9c4a5fd8292e9c83642,Eliminate some uses of Function.bind since it impairs performance dramatically in v8 and spidermonkey.
kg,2013-03-19 10:43:56,https://api.github.com/repos/sq/JSIL/git/commits/a639fac35bee2080f7587a529df1f044d6d01008,a639fac35bee2080f7587a529df1f044d6d01008,Checkpoint aligned marshalling work
kg,2013-03-18 12:01:25,https://api.github.com/repos/sq/JSIL/git/commits/d102b3f017f3a11f3a27f5a47784afd4a34260a3,d102b3f017f3a11f3a27f5a47784afd4a34260a3,Change type initializer protocol so that an initializer can optionally return a function that will be passed a reference to the type's public interface. This protocol will allow some additional optimizations.
kg,2013-03-18 10:55:49,https://api.github.com/repos/sq/JSIL/git/commits/7d24174a32c577cc227835625fe139d043069edd,7d24174a32c577cc227835625fe139d043069edd,"Add some comments.
Make DeadlockInfo.ToString meaningful."
kg,2013-03-18 10:26:14,https://api.github.com/repos/sq/JSIL/git/commits/6eac000a3a14b2ce7e9e6abc176b1832958294fd,6eac000a3a14b2ce7e9e6abc176b1832958294fd,"Add a test for another packed array use case
Set metadata on packed array interface methods so calls to them can be optimized better"
kg,2013-03-18 10:25:44,https://api.github.com/repos/sq/JSIL/git/commits/73ac496a506faf826d74329e4bb56882f503daba,73ac496a506faf826d74329e4bb56882f503daba,"When emitting 32-bit floating point literals, don't write out 64 bits worth of precision since the extra 32 bits will basically be noise."
kg,2013-03-18 09:58:10,https://api.github.com/repos/sq/JSIL/git/commits/9b89963b8e678c98e05aab120c062aa4cc90a2c2,9b89963b8e678c98e05aab120c062aa4cc90a2c2,Add basic support for taking a reference to an element of a packed struct array (generates an object that has property getters/setters in the place of fields that do packing/unpacking on the fly)
kg,2013-03-18 09:01:29,https://api.github.com/repos/sq/JSIL/git/commits/9f4b4537f2592757b31660a2fab7fb779e4d3051,9f4b4537f2592757b31660a2fab7fb779e4d3051,Bugfixes to the Try website
kg,2013-03-18 08:48:04,https://api.github.com/repos/sq/JSIL/git/commits/ff400e9b09629b8f14e50f4328bf5ddce6e67884,ff400e9b09629b8f14e50f4328bf5ddce6e67884,"Disable taking a reference to an element of a packed array unless it's inside a fixed statement, since it doesn't work yet."
kg,2013-03-18 08:37:41,https://api.github.com/repos/sq/JSIL/git/commits/4d4af963733c2cbf42dcc0affbac1b69433c0022,4d4af963733c2cbf42dcc0affbac1b69433c0022,Implement pinning a packed array with an offset.
kg,2013-03-18 08:14:08,https://api.github.com/repos/sq/JSIL/git/commits/df93a71b276f77ccb225ee2a6a0eaf017f554d5d,df93a71b276f77ccb225ee2a6a0eaf017f554d5d,"Fix some incorrect uses of JSIL.Host.warning.
Struct array fields tagged with the new JSPackedArray attribute are backed by a JS TypedArray instead of a native JS array, reducing their memory usage and making it possible to pin them."
kg,2013-03-18 06:11:32,https://api.github.com/repos/sq/JSIL/git/commits/aa4b61884f3e6e7e48aa5c4c7da6db4ca599dc18,aa4b61884f3e6e7e48aa5c4c7da6db4ca599dc18,"Add test coverage for struct member offsets in addition to alignment
Implement Marshal.OffsetOf
Implement IntPtr and UIntPtr's constructors and To(U)Int(32|64)"
kg,2013-03-18 05:56:23,https://api.github.com/repos/sq/JSIL/git/commits/d15d7df4824d927cff4584b94b53a93dea4bf6be,d15d7df4824d927cff4584b94b53a93dea4bf6be,Implement .NET's default alignment and padding rules for struct members and sizes.
kg,2013-03-18 04:25:31,https://api.github.com/repos/sq/JSIL/git/commits/baea832dee01f40723314db94d240d1807a3489e,baea832dee01f40723314db94d240d1807a3489e,Fix unmarshalling constructor for nested structs.
kg,2013-03-18 04:03:33,https://api.github.com/repos/sq/JSIL/git/commits/9997155743464468f518358d3deb09b8485f34c8,9997155743464468f518358d3deb09b8485f34c8,Jump through more hoops to try and get defaultFloat (in field initializers) to actually be a float. Spidermonkey is super aggressive about converting things to int32 and polluting its type information. :/
kg,2013-03-18 03:15:16,https://api.github.com/repos/sq/JSIL/git/commits/607d241d2224a105485aba2b268f9874f8f38ca0,607d241d2224a105485aba2b268f9874f8f38ca0,Make StructPointer's get methods invoke a customized constructor instead of constructing an empty struct instance and then unmarshalling into it.
kg,2013-03-18 03:01:42,https://api.github.com/repos/sq/JSIL/git/commits/44af8f271bde9795b0341d6bea4631855446d74c,44af8f271bde9795b0341d6bea4631855446d74c,Fix return type of Activator.CreateInstance<T> overloads (issue #166)
kg,2013-03-18 02:58:51,https://api.github.com/repos/sq/JSIL/git/commits/ac8f8450a597688a23f8331d3c5137079e42b662,ac8f8450a597688a23f8331d3c5137079e42b662,"Prefetch the marshaller/unmarshaller when constructing a struct pointer so that it doesn't have to be fetched on every get/set
Generate more efficient closures for marshaller/unmarshaller functions"
kg,2013-03-18 02:41:42,https://api.github.com/repos/sq/JSIL/git/commits/486eb819699e939de2cdcfe4c50b69083dad1206,486eb819699e939de2cdcfe4c50b69083dad1206,"Generate Pointer.addElement instead of Pointer.add so that addition doesn't have to invoke GetNativeSizeOf
Fix CacheTypeExpressions accidentally mixing up type references"
kg,2013-03-18 02:15:58,https://api.github.com/repos/sq/JSIL/git/commits/ccffef4bb76a17dd39b963839ba638d03411628a,ccffef4bb76a17dd39b963839ba638d03411628a,"Some small improvements to struct pointers
Implemented Sizeof instruction
Added a partially working performance test for Vector3 math"
kg,2013-03-17 15:29:28,https://api.github.com/repos/sq/JSIL/git/commits/8c84c0dcd5e0a177750cb3b64b506e004af2640d,8c84c0dcd5e0a177750cb3b64b506e004af2640d,"Attempt to handle an obscure form of generic parameter that shows up when the compiler generates a class for you (enumerator function, delegate) that has its own generic parameters and those parameters somehow leak out into the outer class. I'm not really sure how this happens, but it shows up in Autofac.dll (issue #165)"
kg,2013-03-17 15:26:45,https://api.github.com/repos/sq/JSIL/git/commits/14b505c244333671235326c795884c618959c5ca,14b505c244333671235326c795884c618959c5ca,Attempt to handle the super busted assembly references that appear in Portable Class Libraries (issue #165) (see also: Cecil issue #123)
kg,2013-03-17 14:41:56,https://api.github.com/repos/sq/JSIL/git/commits/f837e28bb15f703fbd02dc378dded7dec0cd29ed,f837e28bb15f703fbd02dc378dded7dec0cd29ed,Wrap exceptions in DeclareType so that it's clear what type caused the failure.
kg,2013-03-16 20:20:42,https://api.github.com/repos/sq/JSIL/git/commits/528dbacb50fca40a634816765f644a530d98906b,528dbacb50fca40a634816765f644a530d98906b,Fix function statement names not being disambiguated in all necessary scenarios.
kg,2013-03-16 05:16:22,https://api.github.com/repos/sq/JSIL/git/commits/8a832fb001d6c68a1826251bf6fc1174f3bd3883,8a832fb001d6c68a1826251bf6fc1174f3bd3883,Fix time wasted in JSIL.GetNativeSizeOf walking the type graph to compute the size of fields that are reference types.
kg,2013-03-16 05:10:39,https://api.github.com/repos/sq/JSIL/git/commits/8f3453c311d4ba11a05330b4357c087719b53775,8f3453c311d4ba11a05330b4357c087719b53775,Name some XNA Game functions so they're easier to identify in SPS profiles
kg,2013-03-16 05:05:21,https://api.github.com/repos/sq/JSIL/git/commits/e3dbdf90f1aa312663936e2a48a78dd782053842,e3dbdf90f1aa312663936e2a48a78dd782053842,Mechanically ensure that one-shot event listeners (like 'load' and 'error') are released after they run since they apparently cause a serious performance penalty in Firefox's cycle collector.
kg,2013-03-15 11:09:51,https://api.github.com/repos/sq/JSIL/git/commits/4ecdf7ba03745f586f8537cb155e5819f1e4d367,4ecdf7ba03745f586f8537cb155e5819f1e4d367,"Tests seem to indicate that most uses of runLater are no longer necessary. Looks like JS engine developers got their act together! :D
Tweak CanvasService implementation so applySize isn't called when it isn't needed."
kg,2013-03-14 12:36:26,https://api.github.com/repos/sq/JSIL/git/commits/174ef1f9cae502384e60eccd2f0eb65b3b6056ea,174ef1f9cae502384e60eccd2f0eb65b3b6056ea,"Expand on previous attempt so that generated method bodies really *are* singletons in SpiderMonkey.
Make JSIL.CreateNamedFunctions generate functions in the singleton style (as function statements) as well."
kg,2013-03-14 08:54:31,https://api.github.com/repos/sq/JSIL/git/commits/3b58b40d14ac1a17dd27b12d08d24326c7412d51,3b58b40d14ac1a17dd27b12d08d24326c7412d51,"Fix an edge case where CanvasService.getCanvas was setting canvas.width and canvas.height to their current values, which was hitting a recent regression in Firefox that caused GC pauses to happen all the friggin time"
kg,2013-03-14 06:12:49,https://api.github.com/repos/sq/JSIL/git/commits/3cce31ab076ee06fa8409e8fb1816cede4a848db,3cce31ab076ee06fa8409e8fb1816cede4a848db,Experimental hack: Methods are now generated as named function statements. This enables SpiderMonkey to treat them as a 'singleton' which turns on optimizations like inlining.
kg,2013-03-14 05:19:16,https://api.github.com/repos/sq/JSIL/git/commits/6085a474b0fd63647c0f25301bde44169867c589,6085a474b0fd63647c0f25301bde44169867c589,Fix property getter dependency in XNA UpdateViewport
kg,2013-03-14 04:53:18,https://api.github.com/repos/sq/JSIL/git/commits/9fa31dad542a8999a388477fcd8c752e877dd1da,9fa31dad542a8999a388477fcd8c752e877dd1da,Fix runLaterFlush
kg,2013-03-14 04:19:50,https://api.github.com/repos/sq/JSIL/git/commits/782e2a1c255aebbae5973e3b7ce6c448e1bef208,782e2a1c255aebbae5973e3b7ce6c448e1bef208,"Cleanup performance analysis support.
Make the pointer method test actually assert on what it cares about."
kg,2013-03-14 04:12:35,https://api.github.com/repos/sq/JSIL/git/commits/4a132839fd2d0a512c7d865ae21e6e9f088beaae,4a132839fd2d0a512c7d865ae21e6e9f088beaae,Split the performance tests into two fixtures to avoid the performance penalty of inferflags
kg,2013-03-14 03:47:59,https://api.github.com/repos/sq/JSIL/git/commits/0602001e0205b7c7fe501b22d3ea799aa0f59ea1,0602001e0205b7c7fe501b22d3ea799aa0f59ea1,"Checkpoint:
  Extracts type information from test output for expressions tagged with JSIL.Profiling.TagJSExpression"
kg,2013-03-14 02:30:12,https://api.github.com/repos/sq/JSIL/git/commits/78bf2f89baada9065ff943daf99231e11ead56f5,78bf2f89baada9065ff943daf99231e11ead56f5,"Checkpoint:
  Add a debug version of the spidermonkey shell to support more robust performance tests
  Add Verbatim.TagJSExpression and JSIL.Shell.TagObject for use in the debug spidermonkey shell
  Move some performance tests into their own folder and fixture
  Make JSIL.Host.runLater work in the shell (but you have to flush the queue manually)"
kg,2013-03-11 09:53:01,https://api.github.com/repos/sq/JSIL/git/commits/b0d98ad5a2d9a7d44d862c88453ac8a3575ec3a0,b0d98ad5a2d9a7d44d862c88453ac8a3575ec3a0,Version of the audio unload hack that doesn't generate error spam.
kg,2013-03-11 06:14:12,https://api.github.com/repos/sq/JSIL/git/commits/8147482ddcaad808862bf1884a05751d5584f42f,8147482ddcaad808862bf1884a05751d5584f42f,"Hack in basic support for recursive generic base classes, i.e. 'Foo<T> where T : Foo<T>':
  TypeRef.get now takes an optional argument 'allowPartiallyConstructed'. If true, it will be possible to resolve a TypeRef pointing to a type that is currently being constructed.
  Fiddled with the order in which type objects are initialized in order to make recursive generic base classes work."
kg,2013-03-11 05:51:51,https://api.github.com/repos/sq/JSIL/git/commits/f8781c9425c8c4890317f07ed2a0d5233deb17fa,f8781c9425c8c4890317f07ed2a0d5233deb17fa,Handle 'new T()' inside generic methods.
kg,2013-03-11 05:33:44,https://api.github.com/repos/sq/JSIL/git/commits/145701970cfeaba90510639262bcf0edb3310d88,145701970cfeaba90510639262bcf0edb3310d88,Hack a couple changes into the HTML5 audio backend to deal with a bug in recent versions of Firefox where audio playback stops working after enough sounds have played.
kg,2013-03-09 05:38:38,https://api.github.com/repos/sq/JSIL/git/commits/a430fa36bcd9c818e61902098bf4a58b88a0e52b,a430fa36bcd9c818e61902098bf4a58b88a0e52b,Stop checking whether a type is ignored in GetTypeDefinition since it's wasted effort
kg,2013-03-09 03:58:50,https://api.github.com/repos/sq/JSIL/git/commits/05b578fe30f5cab18f403f91f0ed98e71d0e3166,05b578fe30f5cab18f403f91f0ed98e71d0e3166,"Overhaul JSExpression.Get/SetValueNames to use Type IDs
Overhaul the JSNodeTraversalData cache to use Type IDs"
kg,2013-03-09 03:29:02,https://api.github.com/repos/sq/JSIL/git/commits/55ad148ebd1bde5d8576c86610c6f3a30d441824,55ad148ebd1bde5d8576c86610c6f3a30d441824,"Statically assign sequential IDs to node types at startup.
Change VisitorCache's cache to a contiguous array (indexed by node type ID) instead of a dictionary."
kg,2013-03-08 18:40:13,https://api.github.com/repos/sq/JSIL/git/commits/3910a1d21e0be6b1022454c4b2cc049955ec2799,3910a1d21e0be6b1022454c4b2cc049955ec2799,"Improve error message when resolving a generic TypeRef fails.
Stub out the System.Tuple types.
Declare the Console In/Out properties."
kg,2013-03-08 18:27:11,https://api.github.com/repos/sq/JSIL/git/commits/38e365737aff41ac6dd42af64a472088a00710be,38e365737aff41ac6dd42af64a472088a00710be,"Various library and translator tweaks/bug fixes so that FSharpExecutable is closer to passing:
  Handle an edge case in ControlFlowSimplifier
  Handle unnamed variables/parameters in StaticAnalyzer (this seems like an ILSpy bug)
  Escape a couple more characters in identifiers
  Make the JS identifier escape logic match the C# escape logic more closely
  Handle undefined/bad type references in FixupInterfaces and BuildTypeList
  Define the name System.IO.TextWriter in mscorlibless environments
  Make it possible for a test to not dump its output JS when it fails, since ReSharper's test runner hangs forever when you dump too much text"
kg,2013-03-08 15:55:25,https://api.github.com/repos/sq/JSIL/git/commits/d5d2b5c25f3602368b03ca0c95a77275d246b5c5,d5d2b5c25f3602368b03ca0c95a77275d246b5c5,Tweaks to enable running headless in the js shell for tests
kg,2013-03-08 03:49:49,https://api.github.com/repos/sq/JSIL/git/commits/3ddb4f7688ed8552bb55b2cbc3228cf1918c1ff5,3ddb4f7688ed8552bb55b2cbc3228cf1918c1ff5,"Add a build of spidermonkey's shell with source compression disabled. This makes it start up almost as fast as the old shell did but we still get sweet, delicious IonMonkey performance."
kg,2013-03-08 03:31:52,https://api.github.com/repos/sq/JSIL/git/commits/42beb9fcb609c67919ed691742206ecf50b040be,42beb9fcb609c67919ed691742206ecf50b040be,"Don't disable optimization settings in the new js.exe
Run more iterations in the unsafe performance comparison"
kg,2013-03-08 03:01:37,https://api.github.com/repos/sq/JSIL/git/commits/cdf418bf5aadac6fb673dbd76cde5f54ba045701,cdf418bf5aadac6fb673dbd76cde5f54ba045701,Checkpoint: New trunk build of js.exe. Sadly it is still slower...
kg,2013-03-08 03:01:31,https://api.github.com/repos/sq/JSIL/git/commits/c1015294aa2a9ebc2a09abd9796375f1ea4c21b8,c1015294aa2a9ebc2a09abd9796375f1ea4c21b8,Better diagnostic messages when we fail to lock a function for the transform pipeline.
kg,2013-03-07 23:30:15,https://api.github.com/repos/sq/JSIL/git/commits/43760d05a2197513cafdaddf566d32d0250ea590,43760d05a2197513cafdaddf566d32d0250ea590,"Make RunTransformsOnAllFunctions actually obey the threading setting. Whoops.
Write the elapsed translation time into the jsillog file."
kg,2013-03-07 06:41:24,https://api.github.com/repos/sq/JSIL/git/commits/bae5da854a5a57a5d4d5faa72c5dd978f5d3c836,bae5da854a5a57a5d4d5faa72c5dd978f5d3c836,Fix cached text canvases using the wrong ID
kg,2013-03-07 06:26:55,https://api.github.com/repos/sq/JSIL/git/commits/e0637b1dfd3cdddfb995e9f37cfa6629ad3a7b50,e0637b1dfd3cdddfb995e9f37cfa6629ad3a7b50,"Don't use .apply in constructors for argument counts below 8. This improves performance in SpiderMonkey.
Ensure that the result of .Of isn't newable if the type is an interface"
kg,2013-03-07 05:45:15,https://api.github.com/repos/sq/JSIL/git/commits/cdeab3c31be72e5b3e8d26c2d59120d2a7f3eda3,cdeab3c31be72e5b3e8d26c2d59120d2a7f3eda3,Make ClampByte faster
kg,2013-03-07 05:39:01,https://api.github.com/repos/sq/JSIL/git/commits/63b94d542f4c489961208ab3dea30abe177f1389,63b94d542f4c489961208ab3dea30abe177f1389,Improve vector operators to invoke a special constructor that sets data members directly so shape detection is easier for JITs
kg,2013-03-07 05:26:32,https://api.github.com/repos/sq/JSIL/git/commits/c3f31dae315e798aef036d10f9bf66029c8bc3f1,c3f31dae315e798aef036d10f9bf66029c8bc3f1,Eliminate use of Object.create in vector operators
kg,2013-03-07 04:09:21,https://api.github.com/repos/sq/JSIL/git/commits/4ab34cbd736145c376e21dbf754df28070d0c492,4ab34cbd736145c376e21dbf754df28070d0c492,"Fix the field initializer being generated before the static constructors had run.
Make it possible to generate a field initializer as a closure+code pair instead of a function so you can inline it into something else"
kg,2013-03-07 03:58:08,https://api.github.com/repos/sq/JSIL/git/commits/1a6b9309db415a360403c31090181abf218fde0d,1a6b9309db415a360403c31090181abf218fde0d,Give System.Object a .ctor implementation so that generated constructors don't have to check for a .ctor method on this before calling it
kg,2013-03-07 03:53:41,https://api.github.com/repos/sq/JSIL/git/commits/7a731af487791fcc2307c997192b5d22a9d19fa3,7a731af487791fcc2307c997192b5d22a9d19fa3,"Make FunctionNull not throw when called
Hack in a better way for FieldInitializers to hint that a field is an int or a float
Simplify generated constructors so they don't rely on a state object"
kg,2013-03-07 03:32:32,https://api.github.com/repos/sq/JSIL/git/commits/d07382282e215def4f33065eb963a184952ff8d0,d07382282e215def4f33065eb963a184952ff8d0,Hack in some special-case codegen for field initializers to try and force JS JITs to actually make fields the types they're supposed to be.
kg,2013-03-06 20:25:44,https://api.github.com/repos/sq/JSIL/git/commits/5336b1ce6d4c6b8e6af5110d28916c5ab8cd5f54,5336b1ce6d4c6b8e6af5110d28916c5ab8cd5f54,Turn off control flow simplifier tracing
kg,2013-03-06 20:24:41,https://api.github.com/repos/sq/JSIL/git/commits/225bbae202203878c48cec963f1d7e8eca9b013a,225bbae202203878c48cec963f1d7e8eca9b013a,Handle recursive generic types when building field lists.
kg,2013-03-06 19:55:06,https://api.github.com/repos/sq/JSIL/git/commits/1ee2f75aabfb95d940b3404620c1baf81a7b553f,1ee2f75aabfb95d940b3404620c1baf81a7b553f,"Checkpoint:
  Record outer break/continue expressions as untargetted exits from a label
  Record return expressions as untargetted exits from a label
  Narrow the cases where exit labels can be extracted."
kg,2013-03-06 19:36:13,https://api.github.com/repos/sq/JSIL/git/commits/87c19c1d397b4f3bc578312619a4aa527c8b052f,87c19c1d397b4f3bc578312619a4aa527c8b052f,"Checkpoint:
  Fix ComputeRecursiveExitLabel not aborting when a cycle is detected
  Fix ControlFlowSimplifier not handling nested label groups
  Remove a Debugger.Break"
kg,2013-03-06 19:28:38,https://api.github.com/repos/sq/JSIL/git/commits/71ae3ef407b2baedf32476538a8224d3cb425b26,71ae3ef407b2baedf32476538a8224d3cb425b26,"When extracting an exit label, append a JSExitLabelGroupExpression to the end of the prior label to preserve control flow
Comment out the complex logic for turning a single-label label group into a do loop in CollapseNulls since it's busted"
kg,2013-03-06 19:04:36,https://api.github.com/repos/sq/JSIL/git/commits/8f1a383a2b3768bbfbaa1823d39bbd0525e182e4,8f1a383a2b3768bbfbaa1823d39bbd0525e182e4,"Checkpoint:
  If all the labels in a label group (other than one) exit by jumping to that other label group, turn that other label group into an exit label.
  Expand ControlFlowSimplifier to hoist exit labels out of label groups where possible.
  Fix CollapseNulls producing a bad AST in cases where a single-label label group contains a label group exit.
  Ensure CollapseNulls runs after ControlFlowSimplifier simplifies control flow, so that more loops get turned back into proper for loops."
kg,2013-03-06 03:22:51,https://api.github.com/repos/sq/JSIL/git/commits/b737058d133384846d3789bcbb090e73b38f64ac,b737058d133384846d3789bcbb090e73b38f64ac,Eliminate some minor child enumeration bottlenecks.
kg,2013-03-06 03:03:19,https://api.github.com/repos/sq/JSIL/git/commits/9fae1451e345711f1f64e6523d760c77c9ef71c3,9fae1451e345711f1f64e6523d760c77c9ef71c3,"Make JSFunctionExpression.Parameters an array instead of an IEnumerable.
Make JSInvocationExpression cache its ActualType.
Kill ILBlockTranslator.ParameterNames."
kg,2013-03-05 23:23:57,https://api.github.com/repos/sq/JSIL/git/commits/5deff2f770a450b42177a77efacc31ca5a8df389,5deff2f770a450b42177a77efacc31ca5a8df389,Turn off analyzer tracing
kg,2013-03-05 23:21:49,https://api.github.com/repos/sq/JSIL/git/commits/ffebc2bd1ae82edacae4e6ce4c6b619f90f9c33a,ffebc2bd1ae82edacae4e6ce4c6b619f90f9c33a,Use TryBlockingEnter in FunctionTransformPipeline.RunUntilCompletion so that you won't get ThreadStateExceptions if you happen to try and transform a function while another thread is using the static analysis data.
kg,2013-03-05 22:56:24,https://api.github.com/repos/sq/JSIL/git/commits/e423242d7868d7533c23a595b9b7daab3c7449f1,e423242d7868d7533c23a595b9b7daab3c7449f1,"Simplify the locking rules for FunctionCache.Entry so that there is one (recursive) lock.
Ensure that a FunctionCache entry is locked while the transform pipeline is actively running on it, to prevent bad static analysis data being generated by other threads"
kg,2013-03-05 22:48:22,https://api.github.com/repos/sq/JSIL/git/commits/876c2207a61aeae362db77febd8aeeb90e59788c,876c2207a61aeae362db77febd8aeeb90e59788c,Add opt-in recursion support to TrackedLock
kg,2013-03-05 21:52:59,https://api.github.com/repos/sq/JSIL/git/commits/bab66a44fe57e42e57e4a7e7bf162942e4518314,bab66a44fe57e42e57e4a7e7bf162942e4518314,"Fix the static analyzer not doing invocation escape/modification analysis on 'new' expressions.
Make the escape analysis for variables less aggressive since it's now applied to constructors."
kg,2013-03-05 21:51:37,https://api.github.com/repos/sq/JSIL/git/commits/5d3f1c7ff3bffece3fc337c95c881135b4541f9c,5d3f1c7ff3bffece3fc337c95c881135b4541f9c,Use AtIndex for label group traversal to reduce the impact of a race
kg,2013-03-05 21:49:28,https://api.github.com/repos/sq/JSIL/git/commits/f196d9eca0afde34c9b91e8b3983e56a00fafe87,f196d9eca0afde34c9b91e8b3983e56a00fafe87,Add a Parameters property to JSNewExpression that works the same as JSInvocationExpression's
kg,2013-03-05 21:48:57,https://api.github.com/repos/sq/JSIL/git/commits/fd34b83fb683d4c99ae24b6bd81571de856e232a,fd34b83fb683d4c99ae24b6bd81571de856e232a,Add OrderedDictionary.AtIndex for accessing the Nth item in an OrderedDictionary
kg,2013-03-05 21:15:38,https://api.github.com/repos/sq/JSIL/git/commits/374eea96420c125897168ebdf14f8fadd0f8dc21,374eea96420c125897168ebdf14f8fadd0f8dc21,Tag List/etc's get_Item and set_Item so that their arguments don't escape/get mutated unless it actually makes sense for them to (mostly to make debugging a little easier)
kg,2013-03-05 21:14:08,https://api.github.com/repos/sq/JSIL/git/commits/12f4f47b8167739b061d2a9e5cf6201e2a015e9d,12f4f47b8167739b061d2a9e5cf6201e2a015e9d,get/set methods inherit any attributes set on the enclosing property by a proxy.
kg,2013-03-04 09:43:06,https://api.github.com/repos/sq/JSIL/git/commits/506405ca8e3f138b179251aa47979f87c1973c19,506405ca8e3f138b179251aa47979f87c1973c19,Fix a memory leak in the automated tests that was causing a complete test run's memory usage to grow up to nearly 1.5GB.
kg,2013-03-04 09:43:01,https://api.github.com/repos/sq/JSIL/git/commits/e43e35e540409763e2d9d550ae4645449ee72feb,e43e35e540409763e2d9d550ae4645449ee72feb,Tweak memory usage characteristics of TypeInfoProvider slightly
kg,2013-03-04 09:22:35,https://api.github.com/repos/sq/JSIL/git/commits/80c227484f6f7d484fa1abd7e4a55a754205ab7b,80c227484f6f7d484fa1abd7e4a55a754205ab7b,Test file cleanup
kg,2013-03-04 09:15:28,https://api.github.com/repos/sq/JSIL/git/commits/07e104ccec14b5424e3ac97e618f61bb5e6e9457,07e104ccec14b5424e3ac97e618f61bb5e6e9457,Make the EvaluatorPool smaller.
kg,2013-03-04 08:40:29,https://api.github.com/repos/sq/JSIL/git/commits/19fb9d6333f06d47dc8206c3366b9d1c81dc73a2,19fb9d6333f06d47dc8206c3366b9d1c81dc73a2,"Shave a few seconds off the test suite by having the default test fixture create a single default type info provider and clone it when a new one is needed, instead of constructing a default provider from scratch every time."
kg,2013-03-04 08:17:45,https://api.github.com/repos/sq/JSIL/git/commits/d8399291020d50f5a6f28e4fba661857e59a2513,d8399291020d50f5a6f28e4fba661857e59a2513,Do traversal data lookup once per node in the constructor instead of doing it every time an enumerator is constructed.
kg,2013-03-04 08:05:19,https://api.github.com/repos/sq/JSIL/git/commits/e9b16b3811e3010acd84701417c32312d5219a7e,e9b16b3811e3010acd84701417c32312d5219a7e,"New spidermonkey was incredibly slow, so bleh. Revert ""Add an updated build of spidermonkey""

This reverts commit f31e642cea05e997624ccf1a35b804d1a018cd25."
kg,2013-03-04 07:57:29,https://api.github.com/repos/sq/JSIL/git/commits/dfbbe491ffb8aa97a532c2d3d87fbbe0a06571be,dfbbe491ffb8aa97a532c2d3d87fbbe0a06571be,"Performance tuning:
  Initially size JSAstVisitor stacks to 32 elements (the default behavior for Stack<> is tuned poorly for our uses)
  Make VisitorCache use thread-local data structures instead of concurrent data structures
  Make JSExpression.GetValueName much, much faster
  Make traversal array records faster by hoisting some of the per-element work into a once-per-record setup cost
  Kill some LINQ use in GetAllVariablesForMethod"
kg,2013-03-04 07:55:46,https://api.github.com/repos/sq/JSIL/git/commits/f0a8f56f338688ba70bd2f1db273a18baeb8e966,f0a8f56f338688ba70bd2f1db273a18baeb8e966,Ensure mono-generated DynamicSites don't get translated.
kg,2013-03-02 12:45:03,https://api.github.com/repos/sq/JSIL/git/commits/b43ec1e2f0d635c4ab6204c62f77149bc683900d,b43ec1e2f0d635c4ab6204c62f77149bc683900d,Make it easier to run a test in the spidermonkey shell manually.
kg,2013-03-02 12:19:40,https://api.github.com/repos/sq/JSIL/git/commits/f9eefea67ef556c2f7734aa72d4d2fa1cf47275d,f9eefea67ef556c2f7734aa72d4d2fa1cf47275d,"Store both offsetInBytes and offsetInElements in pointers so that accesses are cheaper.
Don't return a value from Pointer.set"
kg,2013-03-02 12:14:23,https://api.github.com/repos/sq/JSIL/git/commits/f4ecf6ccf99874e57dc076d2b5d1b8c87c2e2dfc,f4ecf6ccf99874e57dc076d2b5d1b8c87c2e2dfc,Invoke spidermonkey with type inference and the jit enabled.
kg,2013-03-02 12:14:10,https://api.github.com/repos/sq/JSIL/git/commits/f31e642cea05e997624ccf1a35b804d1a018cd25,f31e642cea05e997624ccf1a35b804d1a018cd25,Add an updated build of spidermonkey
kg,2013-03-02 12:03:46,https://api.github.com/repos/sq/JSIL/git/commits/2ed91dc23a59ffd1501e3a940bd36ee6ac3be658,2ed91dc23a59ffd1501e3a940bd36ee6ac3be658,"Use bitshifts in Pointer instead of divides.
Construct specialized Pointer instances based on the size of elements so that the shifts in the getters/setters can be constants.
Add getElement and setElement methods to Pointer instances that let you pass an offset in elements instead of bytes, so that no shift is necessary for the offset."
kg,2013-03-01 13:15:37,https://api.github.com/repos/sq/JSIL/git/commits/60aff237c0bc5c13fdcd3be20722b33bb3d96bb6,60aff237c0bc5c13fdcd3be20722b33bb3d96bb6,"Add an experimental workaround for the ConcurrentDictionary bug ( https://bugzilla.xamarin.com/show_bug.cgi?id=10808 ), at least for MethodTypeFactory.Key."
kg,2013-03-01 12:41:10,https://api.github.com/repos/sq/JSIL/git/commits/fddcdd6d016e1560f92ba9e990a5d85a9abc053e,fddcdd6d016e1560f92ba9e990a5d85a9abc053e,"Whoops, that's probably a potential NRE."
kg,2013-03-01 12:37:50,https://api.github.com/repos/sq/JSIL/git/commits/27c2ad41905e9a697fd17bb5fd5caea4e910b449,27c2ad41905e9a697fd17bb5fd5caea4e910b449,"Rename MethodTypeFactory.MethodSignature to MethodTypeFactory.Key because I hate the name collision.
Guard MethodTypeFactory.Key against null values (issue #164) because I suspect a ConcurrentDictionary bug.
Make MethodTypeFactory.Key use an array instead of an IEnumerable in case something crazy is happening with the Parameters lists after construction.
Don't use the default equality comparer in MethodTypeFactory's cache."
kg,2013-03-01 11:26:15,https://api.github.com/repos/sq/JSIL/git/commits/faf841717368d0422eb1181f840fd904fe31fb86,faf841717368d0422eb1181f840fd904fe31fb86,Make it possible to use Environment.TickCount on Try
kg,2013-03-01 11:25:54,https://api.github.com/repos/sq/JSIL/git/commits/87546c0c70764c710e459d4215db01833c9eba79,87546c0c70764c710e459d4215db01833c9eba79,Fix potential NullReferenceException in MethodSignature.Equals
kg,2013-02-28 10:15:48,https://api.github.com/repos/sq/JSIL/git/commits/7220b12fc8705fc80ef4b483c9ddfdd4a1436381,7220b12fc8705fc80ef4b483c9ddfdd4a1436381,"Make a specialized version of Pointer for byte pointers that omits unnecessary division.
Unify the logic behind selecting the type of pointer to construct (instead of only running it in Pointer.$cast)"
kg,2013-02-28 09:50:53,https://api.github.com/repos/sq/JSIL/git/commits/4fc0cba3d3460de5edbdd7c01dd8fa21a5abefdf,4fc0cba3d3460de5edbdd7c01dd8fa21a5abefdf,Add basic support for marshalling nested structs
kg,2013-02-28 09:45:22,https://api.github.com/repos/sq/JSIL/git/commits/c8362fcc88bb5ee8dd59f34db6d368824be36ea5,c8362fcc88bb5ee8dd59f34db6d368824be36ea5,Fix minus sign placement for format strings starting with zeroes
kg,2013-02-28 08:28:31,https://api.github.com/repos/sq/JSIL/git/commits/41fdb52b4999f7c0d17836907ae5adf10ac028e6,41fdb52b4999f7c0d17836907ae5adf10ac028e6,Slight TrackedLock tweaks.
kg,2013-02-28 08:19:17,https://api.github.com/repos/sq/JSIL/git/commits/a8c4f41fc5f0a555e0b23c4afd1ec0d3e338d532,a8c4f41fc5f0a555e0b23c4afd1ec0d3e338d532,Never mutate first or second pass static analysis data. This should hopefully fix a race condition involving the temporary variable eliminator (though at the cost of some performance).
kg,2013-02-28 07:47:05,https://api.github.com/repos/sq/JSIL/git/commits/3dc57d85b51331dbf05d7962584be44525fc593b,3dc57d85b51331dbf05d7962584be44525fc593b,Fix breakage in typed array backing store selection
kg,2013-02-28 07:43:51,https://api.github.com/repos/sq/JSIL/git/commits/772fd6365d9bd7c48200d6d96c78ba32d63c2447,772fd6365d9bd7c48200d6d96c78ba32d63c2447,Fix some breakage in other parts of the pointer infrastructure.
kg,2013-02-28 07:40:18,https://api.github.com/repos/sq/JSIL/git/commits/e5dcf604883185e3d3137fbbbff88d5de672a920,e5dcf604883185e3d3137fbbbff88d5de672a920,Checkpoint: Basic support for reading and writing simple structs through pointers. Typed arrays suck.
kg,2013-02-28 06:58:02,https://api.github.com/repos/sq/JSIL/git/commits/a06bb9847bde27cb69240bd10d5b50f083465803,a06bb9847bde27cb69240bd10d5b50f083465803,Checkpoint initial work on struct pointers and marshaling/unmarshaling. Some code from vvuk's jsil-emscripten branch.
kg,2013-02-27 23:03:45,https://api.github.com/repos/sq/JSIL/git/commits/78885d63e589f1285a8a40243495d3f0dd58b7b0,78885d63e589f1285a8a40243495d3f0dd58b7b0,Handle encountering overflow checks in compound assignments.
kg,2013-02-27 22:52:08,https://api.github.com/repos/sq/JSIL/git/commits/eef8257acd06fc67060cfbd88cdbc4c004981f75,eef8257acd06fc67060cfbd88cdbc4c004981f75,"Add basic support for checked arithmetic (within JS's capabilities, at least) - issue #156"
kg,2013-02-27 22:01:22,https://api.github.com/repos/sq/JSIL/git/commits/a04d0cff77e64c0a5fe101d0530340f642b66c63,a04d0cff77e64c0a5fe101d0530340f642b66c63,Clean up the implementations of the various Conv_ opcodes.
kg,2013-02-27 20:31:10,https://api.github.com/repos/sq/JSIL/git/commits/d37dab53f69b2d35c9df3e4dff69fa15832192de,d37dab53f69b2d35c9df3e4dff69fa15832192de,"Make the traversal record cache an ordinary dictionary, but thread local, to avoid the overhead of locking/thread-safety."
kg,2013-02-27 20:05:43,https://api.github.com/repos/sq/JSIL/git/commits/b4864a17163953cd9875da86586b7b54a94991db,b4864a17163953cd9875da86586b7b54a94991db,Don't use OfType to check for a function on the stack in JSAstVisitor.
kg,2013-02-27 19:44:21,https://api.github.com/repos/sq/JSIL/git/commits/c186276eff80063ed5676fed8f677de5afb7c5da,c186276eff80063ed5676fed8f677de5afb7c5da,Fix JSNodeTraversalData.Get constructing a closure on every invocation
kg,2013-02-27 19:40:19,https://api.github.com/repos/sq/JSIL/git/commits/51b6af737b815efa192460106a3bdc2cc6d5159b,51b6af737b815efa192460106a3bdc2cc6d5159b,Change JSAstVisitor so that by default it will not recurse into nested JSFunctionExpressions. This addresses a few race conditions where it was possible for a transform to run twice on a lambda expression.
kg,2013-02-27 19:27:09,https://api.github.com/repos/sq/JSIL/git/commits/5c6d5cdc189726dcc82ea8c859a14413238f6116,5c6d5cdc189726dcc82ea8c859a14413238f6116,Make GetValueName self-optimize so it doesn't have to walk the inheritance tree every time it's called
kg,2013-02-27 19:25:42,https://api.github.com/repos/sq/JSIL/git/commits/3a61481766712654f3102a8da838eb5d4d9d48d0,3a61481766712654f3102a8da838eb5d4d9d48d0,"Generate precompiled delegates for traversal records using LINQ for better performance.
If a traversal record returns null, NodeChildEnumerator will now skip over it."
kg,2013-02-27 18:50:28,https://api.github.com/repos/sq/JSIL/git/commits/8e43845df22870702a41f616e2710ed1f2ed0b6e,8e43845df22870702a41f616e2710ed1f2ed0b6e,"Switch to a much simpler, correct implementation of SelfAndChildrenRecursive/AllChildrenRecursive, at the cost of some garbage being created (it gets used less anyway)"
kg,2013-02-27 18:15:57,https://api.github.com/repos/sq/JSIL/git/commits/b83c49ed1623737ff6788a266142837b5460ebb6,b83c49ed1623737ff6788a266142837b5460ebb6,Minor tweaks to make things compatible with the new generic traversal
kg,2013-02-27 18:14:32,https://api.github.com/repos/sq/JSIL/git/commits/fd3f80721ec60fe0cf76920764316db0f0c6d419,fd3f80721ec60fe0cf76920764316db0f0c6d419,"Fix the AllChildrenRecursive and SelfAndChildrenRecursive enumerators, and add a test."
kg,2013-02-27 17:41:27,https://api.github.com/repos/sq/JSIL/git/commits/6311014359a72e74b9ede77f560062e35c739fad,6311014359a72e74b9ede77f560062e35c739fad,Disable AST traversal for JSILIdentifier.
kg,2013-02-27 17:39:16,https://api.github.com/repos/sq/JSIL/git/commits/2a1f4926f82b9f270468d273280eb368ddaec2ae,2a1f4926f82b9f270468d273280eb368ddaec2ae,Fix JSExpression overflowing the values array.
kg,2013-02-27 17:39:01,https://api.github.com/repos/sq/JSIL/git/commits/e89f3677558f5d789a687974177e66bc84318b35,e89f3677558f5d789a687974177e66bc84318b35,"Fix SelfAndChildrenRecursive.
Add basic ast traversal tests."
kg,2013-02-27 17:36:54,https://api.github.com/repos/sq/JSIL/git/commits/c769bd810326052fbff566d030b18eea04120979,c769bd810326052fbff566d030b18eea04120979,"Fix NodeTraversalData not being correct for inheritance scenarios
Inherit value names in JSExpression"
kg,2013-02-27 17:22:59,https://api.github.com/repos/sq/JSIL/git/commits/c020c06d2251a60fdfa7cbd3256a1fcb6f72c603,c020c06d2251a60fdfa7cbd3256a1fcb6f72c603,Checkpoint: Implement JSNodeChildEnumerator.IncludeSelf
kg,2013-02-27 17:18:56,https://api.github.com/repos/sq/JSIL/git/commits/9de6c1f7167ed2c58b5cad662367a850dfbd0a9c,9de6c1f7167ed2c58b5cad662367a850dfbd0a9c,Checkpoint: Moved various annotated nodes to Traversal attributes
kg,2013-02-27 17:10:20,https://api.github.com/repos/sq/JSIL/git/commits/9a1f7939274858b9dbf549c6bcbd36d5c828af75,9a1f7939274858b9dbf549c6bcbd36d5c828af75,Checkpoint: More complete reflection-based node traversal
kg,2013-02-27 16:41:12,https://api.github.com/repos/sq/JSIL/git/commits/3a29920cf68cc011bf1ad1d76e44fd5968771c9f,3a29920cf68cc011bf1ad1d76e44fd5968771c9f,Checkpoint: Simple reflection-based automatic traversal of node fields.
kg,2013-02-27 15:34:58,https://api.github.com/repos/sq/JSIL/git/commits/bce8df5edda9541a99bd0eadd89b6cc1a7f62fa0,bce8df5edda9541a99bd0eadd89b6cc1a7f62fa0,Checkpoint: Eliminating the need for the enumerator functions for walking node children
kg,2013-02-27 15:08:42,https://api.github.com/repos/sq/JSIL/git/commits/c44cde1d34b4a63db3e78d2e8413868db9ec3ebb,c44cde1d34b4a63db3e78d2e8413868db9ec3ebb,Make the nested deadlock test actually a nested deadlock. Whoops.
kg,2013-02-27 15:03:59,https://api.github.com/repos/sq/JSIL/git/commits/f7935268663cf5de42fcac643b5b68e05ea218fb,f7935268663cf5de42fcac643b5b68e05ea218fb,Switch to a new threading model for the function cache where tracked locks are used to detect deadlocks instead of WaitOne.
kg,2013-02-27 14:50:34,https://api.github.com/repos/sq/JSIL/git/commits/52634b4c5b8af7149ee94302311339f4d0cc2410,52634b4c5b8af7149ee94302311339f4d0cc2410,"Fix TrackedLock leaking Wait instances (which could cause a ThreadStateException if the same thread waited on a given lock multiple times)
Improved TrackedLock interface so you don't have to catch exceptions to use it"
kg,2013-02-27 14:25:20,https://api.github.com/repos/sq/JSIL/git/commits/2e443f03da4cf2b15f112a0fd388766ec4197b49,2e443f03da4cf2b15f112a0fd388766ec4197b49,Make TrackedLock's name optional and allow passing in a function that returns the name so it can be dynamic
kg,2013-02-27 14:18:08,https://api.github.com/repos/sq/JSIL/git/commits/47554c8535acf707b3b5cd8e6d4993c887338d60,47554c8535acf707b3b5cd8e6d4993c887338d60,Introduce a tracked lock class that can deterministically detect and prevent deadlocks.
kg,2013-02-26 20:46:01,https://api.github.com/repos/sq/JSIL/git/commits/85444449a30c5e19288079548de7b3e18c5a2dbc,85444449a30c5e19288079548de7b3e18c5a2dbc,Nuke the Mannux demo since it requires a lot of babysitting
kg,2013-02-26 16:15:38,https://api.github.com/repos/sq/JSIL/git/commits/14cc0714ef3a519a28f1559e3ef98d2caebcc5da,14cc0714ef3a519a28f1559e3ef98d2caebcc5da,Fix a bug in VerbatimLiteral.ReplaceChild
kg,2013-02-26 16:08:00,https://api.github.com/repos/sq/JSIL/git/commits/a3914e9f94214271827e516ee65afdc28903e8d1,a3914e9f94214271827e516ee65afdc28903e8d1,"Add basic support for pointer literals (basically, this ensures that (T*)0 will translate into JS that at least runs and obeys basic pointer rules)"
kg,2013-02-26 15:14:31,https://api.github.com/repos/sq/JSIL/git/commits/40c8bec2632e1f308ca5cb3992967a74c6acae8f,40c8bec2632e1f308ca5cb3992967a74c6acae8f,"Fix JSWriteThroughPointerExpression being able to trap values that were not visible to AST traversal.
Fix EliminateSingleUseTemporaries erroneously eliminating variables that were only ever used as an assignment source and never used in any other context."
kg,2013-02-26 14:56:30,https://api.github.com/repos/sq/JSIL/git/commits/dd8b703e4c90ae12fe188831f651186e8e24ef8b,dd8b703e4c90ae12fe188831f651186e8e24ef8b,"Cecil seems to be slightly finicky about threading, actually, so acquire a lock when doing decompiles."
kg,2013-02-26 14:52:57,https://api.github.com/repos/sq/JSIL/git/commits/980221823d25c534b30c8929b803bb8671a499c4,980221823d25c534b30c8929b803bb8671a499c4,"Implement <, >, <= and >= for pointers"
kg,2013-02-26 14:47:25,https://api.github.com/repos/sq/JSIL/git/commits/ba2776dd4c625c8313406d581c6e81e1d52083e5,ba2776dd4c625c8313406d581c6e81e1d52083e5,"If it appears that the function cache is deadlocked, force an abort/retry. Better than nothing for now..."
kg,2013-02-26 14:18:17,https://api.github.com/repos/sq/JSIL/git/commits/04e4482c83e7c22d1504c6764f4efb713db407d3,04e4482c83e7c22d1504c6764f4efb713db407d3,"Added a Log stringbuilder to the TranslationResult object where miscellaneous information can be logged to end up in the jsillog file
Limit the maximum degree of automatic parallelism to (ProcessorCount + 2) because for some reason the .NET ThreadPool seems to spin up like 60 threads when a deadlock happens (???)
Only log warnings about pipelines being suspended if it happens more than once"
kg,2013-02-26 14:16:51,https://api.github.com/repos/sq/JSIL/git/commits/a0e8a00db80a6e9d9ba779ab67b297b7a82d42a3,a0e8a00db80a6e9d9ba779ab67b297b7a82d42a3,"Fix Entry.RunLocked spinning the thread for no good reason.
Tweaks to try and eliminate the GetFirstPass deadlock."
kg,2013-02-26 13:33:14,https://api.github.com/repos/sq/JSIL/git/commits/a557773deb448a165957a3f91187b1afa8eb2ada,a557773deb448a165957a3f91187b1afa8eb2ada,"Overhaul the way function transforms are run so that they are handled by a pipeline of individual stages.
All function transforms that rely on static analysis data inherit from a special base class.
Function transforms that rely on static analysis data will suspend the pipeline if they depend on data for a function that is being transformed.
If a function transform stage fails due to a dependency on a function being transformed, suspend the transform pipeline and push it onto the queue to complete later.
Change IntroduceVariableDeclarations to do all its node replacement in a single pass at the end instead of during traversal.
Fix JSBlockStatement.AnnotatedChildren throwing in weird edge cases (this is probably awful)"
kg,2013-02-26 06:05:26,https://api.github.com/repos/sq/JSIL/git/commits/6f1e8b9ff52eb2d9e5fa846434bb1de75cbca2f9,6f1e8b9ff52eb2d9e5fa846434bb1de75cbca2f9,"Huh, a bad merge seems to have inserted some duplicate transform passes."
kg,2013-02-26 04:41:24,https://api.github.com/repos/sq/JSIL/git/commits/4023a2f05b2d0a72e24c0204cc752564476d370c,4023a2f05b2d0a72e24c0204cc752564476d370c,"Make RunTransformsOnAllFunctions able to use multiple threads if threading is enabled, and add a setting to CodeGeneratorSettings so you can turn it on. It's disabled by default due to a race condition I haven't been able to fix yet.
FunctionCache.GetFirstPass/GetSecondPass now block until the requested pass is ready, unless a deadlock is detected (in which case they abort and return null).
Fix OrderedDictionary.Remove not working right if a given key had been enqueued multiple times."
kg,2013-02-26 03:22:27,https://api.github.com/repos/sq/JSIL/git/commits/bd758aba2d7abf0b5db59eaf73e38ff81c02a827,bd758aba2d7abf0b5db59eaf73e38ff81c02a827,"When ILBlockTranslator generates non-fatal warnings, prefix them with the name of the function that produced them so it's easier to find the source of the warning.
Remove pointless 'Warning:' prefix from some ILBlockTranslator warnings."
kg,2013-02-26 03:08:28,https://api.github.com/repos/sq/JSIL/git/commits/17e23f7a9a6c745fac7820c1667fcd53171161b0,17e23f7a9a6c745fac7820c1667fcd53171161b0,"Minor fixes/tweaks so that you can successfully translate mscorlib without crashing.
Allow setting 'ApplyDefaults' in configuration files loaded from the command line (you used to have to set it as a command line argument).
Make unrecognized pointer casts produce untranslatable expression nodes instead of throwing during the compile.
Make JSReadThroughPointerExpression less likely to throw if it gets constructed around a really weird expression.
Improve the robustness of LabelGroupStatement's ReplaceChild operation.
Write the names of methods that were ignored (due to untranslatable locals) to the log instead of stdout/stderr.
Handle some more compound assignment instructions."
kg,2013-02-26 02:57:33,https://api.github.com/repos/sq/JSIL/git/commits/ee5a77f4d480bb66ffd0232eacc4ff67068b046d,ee5a77f4d480bb66ffd0232eacc4ff67068b046d,Add a simple batch file/jsilconfig file for testing un-stubbed mscorlib compiles.
kg,2013-02-25 11:14:08,https://api.github.com/repos/sq/JSIL/git/commits/157a22186f1c84e64c1a446f64b5cfd075d6a565,157a22186f1c84e64c1a446f64b5cfd075d6a565,Implement stackalloc.
kg,2013-02-25 11:06:28,https://api.github.com/repos/sq/JSIL/git/commits/7bc8b79a0a7909a23264efef5dd77b87a7d95aa2,7bc8b79a0a7909a23264efef5dd77b87a7d95aa2,Enable type hinting for the (i * n) multiplies generated by pointer arithmetic.
kg,2013-02-25 10:57:57,https://api.github.com/repos/sq/JSIL/git/commits/d8c06afc8777efd3dd30620f3634629bec27c124,d8c06afc8777efd3dd30620f3634629bec27c124,Implement the == and != operators for pointers.
kg,2013-02-25 10:47:03,https://api.github.com/repos/sq/JSIL/git/commits/9e6ab7d107efc3616837be2a6033d0452a5eb91b,9e6ab7d107efc3616837be2a6033d0452a5eb91b,MemoryRange now caches views for individual element types to make repeated casts cheaper.
kg,2013-02-25 10:41:19,https://api.github.com/repos/sq/JSIL/git/commits/ce89da134ae8e27930ff771bbc5ceaf76ed64a88,ce89da134ae8e27930ff771bbc5ceaf76ed64a88,"Use WeakMap (if available) to cache a single MemoryRange instance for a given ArrayBuffer.
Handle pointer subtraction involving different MemoryRange instances as long as they share the same underlying buffer."
kg,2013-02-25 10:35:20,https://api.github.com/repos/sq/JSIL/git/commits/d1b979455d5390143be53354c5f18501e0b079f2,d1b979455d5390143be53354c5f18501e0b079f2,"Generate valid code for subtraction of pointers
Handle casts of integer literals to pointer types by producing a special pointer literal
Fix untranslatable nodes generating an extra semicolon"
kg,2013-02-25 10:13:23,https://api.github.com/repos/sq/JSIL/git/commits/285a393a236e134f5ccb0d9cc75cf25c52e8e724,285a393a236e134f5ccb0d9cc75cf25c52e8e724,"Implement +=, -=, ++ and -- for pointers.
Suppress truncation of UnaryOperatorExpressions that are negating constants (it's unnecessary).
Pointer.add mutates in-place if second arg is 'true'."
kg,2013-02-25 09:11:14,https://api.github.com/repos/sq/JSIL/git/commits/02cce72cfd8ebad8a49f1578e0ab6cd126fdc1f6,02cce72cfd8ebad8a49f1578e0ab6cd126fdc1f6,Split pointer read/write methods into with/without offset versions
kg,2013-02-24 11:56:53,https://api.github.com/repos/sq/JSIL/git/commits/804b3238f5b050497fb60099f240e919f1909116,804b3238f5b050497fb60099f240e919f1909116,"Handle weird code generated by Mono's C# compiler for fixed statements.
Handle fixed statements that pin individual elements of an array instead of the entire array."
kg,2013-02-24 11:16:29,https://api.github.com/repos/sq/JSIL/git/commits/8c82fd3977d6b8bdbb50f88fddb7ac4b6eaaee7c,8c82fd3977d6b8bdbb50f88fddb7ac4b6eaaee7c,Enable unsafe code support for try
kg,2013-02-24 11:16:19,https://api.github.com/repos/sq/JSIL/git/commits/9e74625f84b938fd2b7c3d486efbf6d4b4acf5ee,9e74625f84b938fd2b7c3d486efbf6d4b4acf5ee,Goddammit ReSharper why are you so stupid
kg,2013-02-24 11:09:12,https://api.github.com/repos/sq/JSIL/git/commits/694638be8545e2afa9060216296305b2c03acab1,694638be8545e2afa9060216296305b2c03acab1,"Add basic, uncached support for pointer casts
Store pointer offsets in bytes instead of elements (get/set get slower, but it avoids the problem of precision loss when adding)"
kg,2013-02-24 11:02:35,https://api.github.com/repos/sq/JSIL/git/commits/4c13e0d508418be1d6cd3c4f7f59844f16729f84,4c13e0d508418be1d6cd3c4f7f59844f16729f84,"Make stobj generate pointer stores correctly
Map (pointer + int) to pointer.add(int) so that pointer arithmetic not done directly inside a store still works"
kg,2013-02-24 10:46:44,https://api.github.com/repos/sq/JSIL/git/commits/880a8a6027d589d653966465f4d1681780269983,880a8a6027d589d653966465f4d1681780269983,Basic support for pointer casts.
kg,2013-02-24 10:36:28,https://api.github.com/repos/sq/JSIL/git/commits/881bd39ddaa2b071b995dd928e7a7476026ed996,881bd39ddaa2b071b995dd928e7a7476026ed996,"Fix thread safety issue with TypeUtil.IsIgnoredType by making pointers not ignored by default (yuck :()
Implement basic support for writes through pointers"
kg,2013-02-24 10:20:05,https://api.github.com/repos/sq/JSIL/git/commits/49f0edb304ed4cf0316cb1b9cc47ba8cc8818d78,49f0edb304ed4cf0316cb1b9cc47ba8cc8818d78,"Fix unsafe code not being enabled in the unsafe code tests.
The offset argument to Pointer.get/set is now in bytes."
kg,2013-02-24 09:51:31,https://api.github.com/repos/sq/JSIL/git/commits/ddc4667183c6c373cec888bd2d6227aae697c7af,ddc4667183c6c373cec888bd2d6227aae697c7af,Preliminary support for translating the pinning operation(s) in fixed blocks.
kg,2013-02-24 08:50:10,https://api.github.com/repos/sq/JSIL/git/commits/c0f3594fd0471d2837208d4c121b8bbf302d8c8e,c0f3594fd0471d2837208d4c121b8bbf302d8c8e,"Breaking change to jsilconfig files: Optimizer renamed to CodeGenerator since it contains non-optimization-related settings
Bump version to 0.7"
kg,2013-02-24 08:39:57,https://api.github.com/repos/sq/JSIL/git/commits/1e40248ed3081de62ec00f1a4f75df156fea3897,1e40248ed3081de62ec00f1a4f75df156fea3897,"Update build_demos title
Update try output frame scripts list"
kg,2013-02-24 08:24:23,https://api.github.com/repos/sq/JSIL/git/commits/b3e41f89bd1df7f78acff3bd5e1418e57fbf1819,b3e41f89bd1df7f78acff3bd5e1418e57fbf1819,Checkpoint: Fix DeoptimizeSwitchStatements breaking due to new reference expression types
kg,2013-02-24 08:12:45,https://api.github.com/repos/sq/JSIL/git/commits/b8caeb4f6f3a31d9c5a48fb911303f8c634d863a,b8caeb4f6f3a31d9c5a48fb911303f8c634d863a,"Checkpoint: Fix old-style uses of .value in Dictionary.TryGetValue.
Throw on old-style use of JavascriptFormatter.Identifier"
kg,2013-02-24 08:08:40,https://api.github.com/repos/sq/JSIL/git/commits/0163d7e4c4df6a3768c6befe03bb068e6a30719d,0163d7e4c4df6a3768c6befe03bb068e6a30719d,"Checkpoint: Fix writes to struct arrays generating an old-style '.value' reference.
Old-style '.value' references throw at runtime."
kg,2013-02-24 08:01:17,https://api.github.com/repos/sq/JSIL/git/commits/bd7375f77e1e8211121a196b7d93922be6fdbf9d,bd7375f77e1e8211121a196b7d93922be6fdbf9d,Checkpoint: Correctness fixes to reference transformations
kg,2013-02-24 07:52:29,https://api.github.com/repos/sq/JSIL/git/commits/2b39471a69cae40f53acca561f6c5db13ab78254,2b39471a69cae40f53acca561f6c5db13ab78254,"Checkpoint:
Reads and writes through references have their own distinct JSExpression types that produce the get/set method calls appropriately.
IntroduceVariableReferences now generates read-through/write-through expressions for all uses of ref variables."
kg,2013-02-24 06:38:23,https://api.github.com/repos/sq/JSIL/git/commits/5ed9c0e0d4f5b9eb9077ae75146693c02101a2f0,5ed9c0e0d4f5b9eb9077ae75146693c02101a2f0,Better exception info for errors generated by astEmitter.Visit(Function).
kg,2013-02-24 06:33:01,https://api.github.com/repos/sq/JSIL/git/commits/81e531ebc2b321ba27411332d77675be50525047,81e531ebc2b321ba27411332d77675be50525047,"Checkpoint: refactorings and cleanups to the way references work in order to enable experiments with 'unsafe' support.
References now have 'get' and 'set' methods instead of a 'value' property.
Added an ArrayElementReference type distinct from MemberReference (even though they are behaviorally identical right now)."
kg,2013-02-15 13:44:12,https://api.github.com/repos/sq/JSIL/git/commits/c5a1d2bc7763b9bdd993e247c53027f1505e7b2b,c5a1d2bc7763b9bdd993e247c53027f1505e7b2b,Change smoke tests to Firefox since Google broke Chrome and seems to have no intent to fix it.
kg,2013-02-15 13:36:27,https://api.github.com/repos/sq/JSIL/git/commits/188167850fd0e9c8f35b581272978efb9a9e94a9,188167850fd0e9c8f35b581272978efb9a9e94a9,Allow casting arrays to IList. Fixes issue #159.
kg,2013-02-15 13:36:09,https://api.github.com/repos/sq/JSIL/git/commits/e35725d4fb7529071a9ebf001938b197c215d4e8,e35725d4fb7529071a9ebf001938b197c215d4e8,Load environment scripts in JSIL.js earlier so that stdout/stderr are available while loading libraries like Bootstrap and Core.Types.
kg,2013-02-14 21:24:35,https://api.github.com/repos/sq/JSIL/git/commits/eaae6b4e086f7af06698fd28711d96e0df569abe,eaae6b4e086f7af06698fd28711d96e0df569abe,Add an experimental feature that freezes instances of immutable structs at construction time (off by default)
kg,2013-02-14 19:07:37,https://api.github.com/repos/sq/JSIL/git/commits/8e4091bb1d92502fc2ed114f6feea750a03e34d7,8e4091bb1d92502fc2ed114f6feea750a03e34d7,"Fix a nasty external method edge case I introduced at some point, and add a test."
kg,2013-02-04 01:13:04,https://api.github.com/repos/sq/JSIL/git/commits/38950af135c5f1e2052980e14117df8c244241a8,38950af135c5f1e2052980e14117df8c244241a8,Add support for compound assignments using custom operators.
kg,2013-01-08 11:50:16,https://api.github.com/repos/sq/JSIL/git/commits/e61164de887d7655cb139bda4cc2809a8375ec5a,e61164de887d7655cb139bda4cc2809a8375ec5a,"Fix issue #148: typeof(T) was being translated incorrectly as an attribute constructor argument.
Add test provided by markusjohnsson."
kg,2013-01-27 16:05:50,https://api.github.com/repos/sq/JSIL/git/commits/41561d7fbb0d9ef6b84991530ed0cfbf8ad40417,41561d7fbb0d9ef6b84991530ed0cfbf8ad40417,"Improvements to int32/uint32 semantics (issue #162):
  Fixed some cases where unsigned literals were being represented as signed literals.
  Fixed unary expressions not generating the necessary '| 0' when type hinting was enabled.
  For UInt32 expressions, generate '>>> 0' instead of '| 0' when type hinting is enabled.
  When type hinting is enabled, decompose unary/binary mutation operators into more mundane expressions so that truncation can be implemented correctly.
Added some failing test cases for integer arithmetic semantics that don't work right."
kg,2013-01-27 15:07:04,https://api.github.com/repos/sq/JSIL/git/commits/5435b0f4bba25a9980308a5cd5aa3cdbea987f34,5435b0f4bba25a9980308a5cd5aa3cdbea987f34,"Incredibly convoluted fix for issue #149:
  ILSpy generates incorrect ExpectedType information for the operands in binary operator expressions using comparison operators. To address this we need to suppress automatic casting for those operands but only if they are both reference types.
Also, fix the argument order for JSChangeTypeExpression.New because it was making me sad."
kg,2013-01-27 14:29:10,https://api.github.com/repos/sq/JSIL/git/commits/547586a9ae5c500c8b3f5648d2ce9d5cf9ea9e21,547586a9ae5c500c8b3f5648d2ce9d5cf9ea9e21,"Remove some unnecessary manual casting logic from ldloc, stloc and method invocations.
Handle an edge case where conv.u2 is used for a conversion to System.Char."
markusjohnsson,2013-01-10 19:52:10,https://api.github.com/repos/sq/JSIL/git/commits/f22231d82bfa4807198b35ecde3f9332b210ac16,f22231d82bfa4807198b35ecde3f9332b210ac16,Commit markusjohnsson's fix for issue #150 regression along with test.
kg,2013-01-27 14:05:42,https://api.github.com/repos/sq/JSIL/git/commits/54ea0243e067982da087ee3be349372075861b6c,54ea0243e067982da087ee3be349372075861b6c,Add the event handler sample from Try to the tests
kg,2013-01-26 19:35:40,https://api.github.com/repos/sq/JSIL/git/commits/86349653422fe14f290352b96c49479aa97b7a14,86349653422fe14f290352b96c49479aa97b7a14,Fix interaction between enum/long cast fix and nullable enum cast fix
markusjohnsson,2013-01-10 20:41:56,https://api.github.com/repos/sq/JSIL/git/commits/82eaa0c654e8e68010db867d7f63ba908b18b9e6,82eaa0c654e8e68010db867d7f63ba908b18b9e6,Fix issue with casts from long/ulong to enum.
kg,2013-01-26 19:15:12,https://api.github.com/repos/sq/JSIL/git/commits/76a8ee91d3ca1e97f057b8d36dd9bd69253d3ffe,76a8ee91d3ca1e97f057b8d36dd9bd69253d3ffe,Fix two compile failures when translating Newtonsoft.JSON (issue #154) related to nullable enums.
kg,2013-01-10 01:35:52,https://api.github.com/repos/sq/JSIL/git/commits/87758937d355dc654abc84974c30b0885843ee13,87758937d355dc654abc84974c30b0885843ee13,Add a simple fix for the regression introduced by markus's fix for issue #150. Not sure this is right.
kg,2013-01-07 23:56:54,https://api.github.com/repos/sq/JSIL/git/commits/dcd8d71e4cf9261c67e8ac8349b9fb6d246024c2,dcd8d71e4cf9261c67e8ac8349b9fb6d246024c2,"Merge pull request #151 from markusjohnsson/Issue150

Fixes issue #150"
markusjohnsson,2013-01-07 16:33:34,https://api.github.com/repos/sq/JSIL/git/commits/bf4b9ecfe50d9af33a9701fc529cf40bb8c14fab,bf4b9ecfe50d9af33a9701fc529cf40bb8c14fab,"Fixes issue #150

Translate object to bool coersions to (expr !== null) instead of (expr !== default(T))."
kg,2013-01-07 10:15:37,https://api.github.com/repos/sq/JSIL/git/commits/c2f2c6a76af376d1f5d9d7c226749e5b1267c5af,c2f2c6a76af376d1f5d9d7c226749e5b1267c5af,Better error handling in doXHR
kg,2013-01-07 09:42:05,https://api.github.com/repos/sq/JSIL/git/commits/7254eb17fb893caae275139ba25415be35d4a75c,7254eb17fb893caae275139ba25415be35d4a75c,Handle being asked to create nonexistent subdirectories better
kg,2013-01-02 23:56:31,https://api.github.com/repos/sq/JSIL/git/commits/01f888fd8245b392e088c204d10b93979c3ececb,01f888fd8245b392e088c204d10b93979c3ececb,Add Mozilla copyright acknowledgment
kg,2012-12-31 07:23:19,https://api.github.com/repos/sq/JSIL/git/commits/8fa38f9aa23977e8ab648e0b64d20967be355d08,8fa38f9aa23977e8ab648e0b64d20967be355d08,Implement MathHelper.ToDegrees and ToRadians (issue #142)
kg,2012-12-31 07:17:19,https://api.github.com/repos/sq/JSIL/git/commits/fdbb352242d2575b056480cb2b03e01fb850dc06,fdbb352242d2575b056480cb2b03e01fb850dc06,Fix incompatibility between delegate types and ResolveGenericExternalMethods.
kg,2012-12-31 07:16:01,https://api.github.com/repos/sq/JSIL/git/commits/5f605bfd5455d4e9d74d30bc568dced9c2e961d8,5f605bfd5455d4e9d74d30bc568dced9c2e961d8,Add basic support for List<T>.BinarySearch and Comparer<T>.Default (issue #144)
kg,2012-12-31 06:56:45,https://api.github.com/repos/sq/JSIL/git/commits/7fdf613178c56c9d2fe27fd2d69d578dd510b9ea,7fdf613178c56c9d2fe27fd2d69d578dd510b9ea,Fix signatures of external methods not having their generic parameters properly bound (this caused a stack overflow when calling an unimplemented external method with generic parameters involved).
kg,2012-12-31 05:44:43,https://api.github.com/repos/sq/JSIL/git/commits/cc67f95855c7d7a6a89c3584f1a102241fc05693,cc67f95855c7d7a6a89c3584f1a102241fc05693,Implement List.RemoveRange (issue #144)
kg,2012-12-31 05:29:59,https://api.github.com/repos/sq/JSIL/git/commits/9adca92cbc214c4459f1417a4623d714d7d52fae,9adca92cbc214c4459f1417a4623d714d7d52fae,Fix issue #146.
kg,2012-12-28 07:07:02,https://api.github.com/repos/sq/JSIL/git/commits/0b280fe4699b1f9b442b4fd92cf9564b4d9dd9b2,0b280fe4699b1f9b442b4fd92cf9564b4d9dd9b2,Improve error handling in the loaders
kg,2012-12-27 21:49:57,https://api.github.com/repos/sq/JSIL/git/commits/4793bd778a8dd87dee4e31b4f2888304e79d66a4,4793bd778a8dd87dee4e31b4f2888304e79d66a4,"Merge pull request #145 from markusjohnsson/NullableFixes

Nullable fixes"
markusjohnsson,2012-12-27 10:22:25,https://api.github.com/repos/sq/JSIL/git/commits/a931f52d14f3486e0eaef911a6dac1bb381086f7,a931f52d14f3486e0eaef911a6dac1bb381086f7,Added tests for null coalescing of nullables.
markusjohnsson,2012-12-27 09:29:56,https://api.github.com/repos/sq/JSIL/git/commits/3b9660f7a93e44f369317d1d1dcc04be0a1d92f4,3b9660f7a93e44f369317d1d1dcc04be0a1d92f4,Added JavaScriptAstEmitter.VisitNode(JSValueOfNullableExpression).
markusjohnsson,2012-12-25 00:04:46,https://api.github.com/repos/sq/JSIL/git/commits/463e8c7b4950ec9e455a9a9938660bfdfc469d95,463e8c7b4950ec9e455a9a9938660bfdfc469d95,Fix translation of Nullable<T>.Equals in corlib.
kg,2012-12-27 10:38:56,https://api.github.com/repos/sq/JSIL/git/commits/efbc1de606769edbd61ea82e5566885c70c522c5,efbc1de606769edbd61ea82e5566885c70c522c5,Adjust size of main page demo carousel to show 3 items at once.
kg,2012-12-26 00:58:42,https://api.github.com/repos/sq/JSIL/git/commits/d9bb26f41745f5ce2e58ec8b9e7912d2863785e6,d9bb26f41745f5ce2e58ec8b9e7912d2863785e6,Fix Enum.GetValues (issue #143)
kg,2012-12-24 04:41:56,https://api.github.com/repos/sq/JSIL/git/commits/10b22ecd92c30d555fa3563502be7c28f41d5fca,10b22ecd92c30d555fa3563502be7c28f41d5fca,Unbalanced canvas save/restore is a pretty serious bug so make it throw instead of spamming the console.
kg,2012-12-24 04:33:35,https://api.github.com/repos/sq/JSIL/git/commits/729655c43a51a0d1fbff3f48f977d22d7c00866a,729655c43a51a0d1fbff3f48f977d22d7c00866a,"Fix for System.String.Empty being null, but only outside the test harness. When did I break this? :-("
kg,2012-12-24 04:26:25,https://api.github.com/repos/sq/JSIL/git/commits/c6b6492a7aee779da5ef6b0e7d4b6fb9fbc0eabc,c6b6492a7aee779da5ef6b0e7d4b6fb9fbc0eabc,"Fix the ContentReader implementation so it doesn't accidentally rely on the way overloaded method resolution works. May fix issue #136.
Improvements to the handling of errors in content loaders.
Slight performance improvements to ListReader and DictionaryReader."
kg,2012-12-24 04:25:07,https://api.github.com/repos/sq/JSIL/git/commits/f9a79aefd159059afdf067f15e8a51149b0e29bf,f9a79aefd159059afdf067f15e8a51149b0e29bf,"Append inner exception information in System.Exception.ToString.
Append generic arguments in TypeRef.toString."
kg,2012-12-24 03:45:25,https://api.github.com/repos/sq/JSIL/git/commits/4a78b185585e7236eaf5bbf63abb5fd3f437cee1,4a78b185585e7236eaf5bbf63abb5fd3f437cee1,"Checkpoint:
Handle generic parameters in overloaded method dispatch.
Handle generic parameters in FixupInterfaces."
kg,2012-12-24 02:26:23,https://api.github.com/repos/sq/JSIL/git/commits/92e403504b38fae19effbd3e1cfd79deb96be69b,92e403504b38fae19effbd3e1cfd79deb96be69b,Don't generate MemberwiseClone calls for System.Decimal. Fixes issue #137.
kg,2012-12-24 01:24:02,https://api.github.com/repos/sq/JSIL/git/commits/0c566ccf072a8e6f8e8e6516236b98ff76a8d556,0c566ccf072a8e6f8e8e6516236b98ff76a8d556,Smoke tests abort early if a local web server isn't available
kg,2012-12-24 00:39:00,https://api.github.com/repos/sq/JSIL/git/commits/914abf31a81771712e61533d57b03e1b4b2ef51a,914abf31a81771712e61533d57b03e1b4b2ef51a,"Add 'disableFiltering' jsilConfig setting to force-off image smoothing for testing purposes
Smoke test tweaks"
kg,2012-12-23 23:49:35,https://api.github.com/repos/sq/JSIL/git/commits/f4172754fb68eba3769a0a7368f6062cdc3e51f4,f4172754fb68eba3769a0a7368f6062cdc3e51f4,"Add sauce labs test credentials
Add 'viewportScale' jsilConfig parameter that scales the default viewport canvas up/down
Add a submodule for the Tetris example under Examples/ThirdParty/
Add a 'game' variable to the testFixture's 'test' global so you can query game state from tests"
kg,2012-12-23 22:49:10,https://api.github.com/repos/sq/JSIL/git/commits/d721558b2bcc497489091ca0f5180ff7bab55f63,d721558b2bcc497489091ca0f5180ff7bab55f63,Work around the weird way cecil represents array attribute arguments. Fixes issue #141.
kg,2012-12-20 16:42:00,https://api.github.com/repos/sq/JSIL/git/commits/a27548ab1dfc2d6d488387b2077897eaa978dfca,a27548ab1dfc2d6d488387b2077897eaa978dfca,VS2012 compatibility fix in a test.
kg,2012-12-20 16:37:35,https://api.github.com/repos/sq/JSIL/git/commits/8b92513f14fcd68dcd45781b5d0e8377768c827a,8b92513f14fcd68dcd45781b5d0e8377768c827a,Fix issue #134.
kg,2012-12-12 02:58:38,https://api.github.com/repos/sq/JSIL/git/commits/e4fc4cee7d43b5ab2fbf2302715f183ce8d6eb47,e4fc4cee7d43b5ab2fbf2302715f183ce8d6eb47,"Fix issue #135. Thanks for making breaking changes to .NET4.0 assemblies, Microsoft."
kg,2012-12-12 00:20:17,https://api.github.com/repos/sq/JSIL/git/commits/dd3dd063a045e38f36cc5ea7695db7b75b414df4,dd3dd063a045e38f36cc5ea7695db7b75b414df4,Replay harness usability tweaks
kg,2012-11-28 16:24:14,https://api.github.com/repos/sq/JSIL/git/commits/2e6cf746089399b55f37080c29f78ecf5719f243,2e6cf746089399b55f37080c29f78ecf5719f243,"Copy the cached total seconds/milliseconds members when cloning TimeSpans.
Optimize get_TotalSeconds and get_TotalMilliseconds for zero TimeSpans.
Move the try block out of Game._Step into its own function to reduce the performance penalty."
kg,2012-11-28 16:10:27,https://api.github.com/repos/sq/JSIL/git/commits/a5da88a8d68915df005635d6a7d4ae68dbc78de1,a5da88a8d68915df005635d6a7d4ae68dbc78de1,webgl-2d performance improvements.
kg,2012-11-28 11:10:27,https://api.github.com/repos/sq/JSIL/git/commits/7bb2be91d6e1f106b5edf2a1766546d2db426bca,7bb2be91d6e1f106b5edf2a1766546d2db426bca,Fix JSIL.Browser devouring hotkeys
kg,2012-11-28 09:18:58,https://api.github.com/repos/sq/JSIL/git/commits/1a804dc8251545a661f2d6929b047be995847439,1a804dc8251545a661f2d6929b047be995847439,Check in some demo recordings
kg,2012-11-28 09:09:00,https://api.github.com/repos/sq/JSIL/git/commits/d38e56592a4d88d7b330c9f261824cadbf50ffae,d38e56592a4d88d7b330c9f261824cadbf50ffae,Nuke checked-in content files
kg,2012-11-28 09:04:33,https://api.github.com/repos/sq/JSIL/git/commits/57f12304a26daa0d3936fad97409d8289144a66f,57f12304a26daa0d3936fad97409d8289144a66f,Fix the size of space characters being factored in by MeasureString.
kg,2012-11-28 08:41:40,https://api.github.com/repos/sq/JSIL/git/commits/e9adf093d8fa3724b82b34f4937d334ab703344b,e9adf093d8fa3724b82b34f4937d334ab703344b,Demo content rebuild
kg,2012-11-28 08:29:35,https://api.github.com/repos/sq/JSIL/git/commits/b38f3aed0dd9e0f6cf103e8c36a6fe32f8cb565f,b38f3aed0dd9e0f6cf103e8c36a6fe32f8cb565f,"Add a case preservation method that works for directories, not just files."
kg,2012-11-28 08:22:47,https://api.github.com/repos/sq/JSIL/git/commits/1bedc3671688b6c179ed09dd110eeb79f35a284c,1bedc3671688b6c179ed09dd110eeb79f35a284c,Chrome compatibility fixes.
kg,2012-11-28 08:22:31,https://api.github.com/repos/sq/JSIL/git/commits/50d0203b63ddd35956222991330b9083249e48da,50d0203b63ddd35956222991330b9083249e48da,"Ensure that filenames written to content manifests preserve the actual case of the filename on disk.
Ensure that filenames written to content manifests that don't exist (like audio file prefixes) have the actual case of the directory name preserved."
kg,2012-11-28 08:02:09,https://api.github.com/repos/sq/JSIL/git/commits/94de5db85907b9e154bb4315114a94ac82d60178,94de5db85907b9e154bb4315114a94ac82d60178,Try updates
kg,2012-11-27 14:09:38,https://api.github.com/repos/sq/JSIL/git/commits/30438c545279cc3b41ceaa403ce7f8d17b8e4ae6,30438c545279cc3b41ceaa403ce7f8d17b8e4ae6,Compute and report the standard deviation of the frame time samples
kg,2012-11-27 13:38:25,https://api.github.com/repos/sq/JSIL/git/commits/5fd39c6a41030caf9fe13cc0b3b8d66d443fadbb,5fd39c6a41030caf9fe13cc0b3b8d66d443fadbb,Never call Array.sort() without an argument because it stringifies its arguments by default.
kg,2012-11-27 13:06:38,https://api.github.com/repos/sq/JSIL/git/commits/498c858b1120cd7ae647818e8c95506bcdd2e8d1,498c858b1120cd7ae647818e8c95506bcdd2e8d1,Fix bug in SpriteFont.Measure's height computation
kg,2012-11-27 12:51:50,https://api.github.com/repos/sq/JSIL/git/commits/28b7bba8356e73b656696112ccd6c6edfd7997fb,28b7bba8356e73b656696112ccd6c6edfd7997fb,Update the replay position indicator less often.
kg,2012-11-27 12:49:41,https://api.github.com/repos/sq/JSIL/git/commits/cfba67821d3e181230382ee9a8ff3abbc74bfeee,cfba67821d3e181230382ee9a8ff3abbc74bfeee,"IE10 refuses to stringify objects created with a null prototype, so stop using Object.create(null) in replay infrastructure. :("
kg,2012-11-27 12:46:03,https://api.github.com/repos/sq/JSIL/git/commits/fcfc2f89073d1342f8bf48bd91db59cdabc6ba80,fcfc2f89073d1342f8bf48bd91db59cdabc6ba80,"Make replay playback service mocks expose functions based on the function calls that were recorded in the replay, instead of the functions available at playback time.
Use postMessage for fast playback if available instead of setTimeout."
kg,2012-11-27 12:31:05,https://api.github.com/repos/sq/JSIL/git/commits/8f78245cb78a827c50318b919d08a3c68b78c5f1,8f78245cb78a827c50318b919d08a3c68b78c5f1,Use binary search to accelerate keyframe location during replay playback.
kg,2012-11-27 12:08:05,https://api.github.com/repos/sq/JSIL/git/commits/c51000235ac59decfd9580e7120aa1e46075f6c4,c51000235ac59decfd9580e7120aa1e46075f6c4,Move to a new replay recording format that represents call return values as keyframes to reduce size for state that changes infrequently.
kg,2012-11-27 11:49:50,https://api.github.com/repos/sq/JSIL/git/commits/6f69f3c801628841aa6085adf88139257831933a,6f69f3c801628841aa6085adf88139257831933a,"Move gamepad support to a service and add it to recordings.
Deep clone service results when recording a replay.
Handle failed recording saves."
kg,2012-11-26 13:46:08,https://api.github.com/repos/sq/JSIL/git/commits/5cc6cd285aca9d4e8bc5506cd638f3148f51168e,5cc6cd285aca9d4e8bc5506cd638f3148f51168e,"Speed up JSIL.$GetHighResTime.
Remove some outdated replay files."
kg,2012-11-26 13:34:03,https://api.github.com/repos/sq/JSIL/git/commits/7bdc1c96b097ab4c72a9499fd99b0600b8aa5f03,7bdc1c96b097ab4c72a9499fd99b0600b8aa5f03,"When creating a delegate instance from a static method, bind its this-reference to the declaring type. This ensures that generics always work correctly.
Fix a bug in BoundGenericMethod.apply.
Restore old behavior of not aborting when a static constructor throws."
kg,2012-11-26 13:14:23,https://api.github.com/repos/sq/JSIL/git/commits/b6ed804aca3ef18cb5d5a6eedece3ccaf82b5fb4,b6ed804aca3ef18cb5d5a6eedece3ccaf82b5fb4,"Overhaul the delegate implementation. Fixes various nasty, hard-to-test edge cases."
kg,2012-11-26 12:35:47,https://api.github.com/repos/sq/JSIL/git/commits/4f45ef90a506c3e7a4102021b58129216e654dac,4f45ef90a506c3e7a4102021b58129216e654dac,"Merge branch 'master' into replay

Conflicts:
	Tests/Tests.csproj"
kg,2012-11-26 12:31:25,https://api.github.com/repos/sq/JSIL/git/commits/c8e7d2320c5a6e3e24781d5fd4c794e0606d6338,c8e7d2320c5a6e3e24781d5fd4c794e0606d6338,"Fix various problems with Delegate == and != operators.
Fix various problems with Delegate.Remove."
kg,2012-11-26 11:50:14,https://api.github.com/repos/sq/JSIL/git/commits/460b50116f5bd310c1e8066585b3823cb22d01f6,460b50116f5bd310c1e8066585b3823cb22d01f6,Work around a bug in Opera's DOM
kg,2012-11-26 11:37:24,https://api.github.com/repos/sq/JSIL/git/commits/106432a132063e16cf83ba4e93dcd72115c432c4,106432a132063e16cf83ba4e93dcd72115c432c4,Improve on end-of-replay statistics by gathering a more complete set of samples and rounding the numeric values so the output is more readable
kg,2012-11-26 11:27:23,https://api.github.com/repos/sq/JSIL/git/commits/7e86526e76669823c8b46ea8e10cf152b492d08a,7e86526e76669823c8b46ea8e10cf152b492d08a,"Make reportPerformance use a service.
Move more global state to services.
Record detailed performance samples during replay playback and report them to the log at the end (both in user-friendly format and as a JSON blob)."
kg,2012-11-26 10:32:50,https://api.github.com/repos/sq/JSIL/git/commits/6e911c578699280c333709daacd014a0c33aeb85,6e911c578699280c333709daacd014a0c33aeb85,Fix MetadataTests
kg,2012-11-26 10:27:40,https://api.github.com/repos/sq/JSIL/git/commits/d06279be1284bc6ad751f05964d88251d92e2bff,d06279be1284bc6ad751f05964d88251d92e2bff,"Capture the initial state of localStorage keys used by a game during replay recording.
Use a mock localStorage service during replay playback."
kg,2012-11-26 10:27:08,https://api.github.com/repos/sq/JSIL/git/commits/66b6ebb4c2f0e208487beb27886a0879853a4964,66b6ebb4c2f0e208487beb27886a0879853a4964,Add JSIL.Services.Get method in JSIL.Meta that allows you to invoke JSIL.Host.getService at runtime in JS (and always fails in C#).
kg,2012-11-26 09:42:56,https://api.github.com/repos/sq/JSIL/git/commits/78009b959d1cba3c141059f46329f1a29fa3826c,78009b959d1cba3c141059f46329f1a29fa3826c,Extract some more global state into services and jsilConfig prefs
kg,2012-11-26 03:47:06,https://api.github.com/repos/sq/JSIL/git/commits/ae639b6c87b3386ccd99344fd91509b585e35df8,ae639b6c87b3386ccd99344fd91509b585e35df8,Fix issue #133 and add a test.
kg,2012-11-25 15:58:44,https://api.github.com/repos/sq/JSIL/git/commits/8b064536d8e6118f9f4fc62d04f0550820ed27cd,8b064536d8e6118f9f4fc62d04f0550820ed27cd,More replay support bug fixes.
kg,2012-11-25 15:17:14,https://api.github.com/repos/sq/JSIL/git/commits/680556084c4c95c131f8be7e0c44ec9ec172e490,680556084c4c95c131f8be7e0c44ec9ec172e490,"Fix Game.ForceQuit
Various timing and replay/record fixes.
Add a basic UI to JSIL.Browser for saving recordings to localStorage or a file.
More compact recording format."
kg,2012-11-25 13:40:19,https://api.github.com/repos/sq/JSIL/git/commits/8b5a9278043b5a85156442e7d2049517b39699ec,8b5a9278043b5a85156442e7d2049517b39699ec,"Various bug fixes and polish around replay infrastructure.
Introduce JSIL.Host.getFileTime for now as a hack so that local storage doesn't call JSIL.Host.getTime and mess up recording/replay."
kg,2012-11-25 13:26:16,https://api.github.com/repos/sq/JSIL/git/commits/435f5295fdb64118b60a4486a4852e22b8926cd3,435f5295fdb64118b60a4486a4852e22b8926cd3,"Replace some calls to JSIL.Host.getTime with Date.now() so that they don't get recorded by the replay system.
Rename JSIL.Host.reportFps to reportPerformance.
Display performance as total frames per second, based on average elapsed draw+update time instead of frame counts.
Update performance indicator four times per second."
kg,2012-11-25 12:12:12,https://api.github.com/repos/sq/JSIL/git/commits/d07e8c8eed1bbb15275b06b53194aa54bba21386,d07e8c8eed1bbb15275b06b53194aa54bba21386,Basic replay recording support
kg,2012-11-25 11:35:53,https://api.github.com/repos/sq/JSIL/git/commits/fc9b372f8cf7d401e45405a6d174eca30e77e960,fc9b372f8cf7d401e45405a6d174eca30e77e960,Move frame scheduling to a service.
kg,2012-11-25 11:19:56,https://api.github.com/repos/sq/JSIL/git/commits/20d17cabd7f57cda61cf4e985efd0ff35331703a,20d17cabd7f57cda61cf4e985efd0ff35331703a,Add support for registering initialization callbacks that get run before the app/game's main function.
kg,2012-11-25 10:53:29,https://api.github.com/repos/sq/JSIL/git/commits/0dde1ed8ed96725e77744967f3a1269822e292ee,0dde1ed8ed96725e77744967f3a1269822e292ee,Improve Environment.getUserSetting so that settings can have an argument
kg,2012-11-25 10:40:45,https://api.github.com/repos/sq/JSIL/git/commits/c63db3cf8d9397ee5185f28cfb542c441e32e1c5,c63db3cf8d9397ee5185f28cfb542c441e32e1c5,Better log output for missing external methods
kg,2012-11-25 10:35:18,https://api.github.com/repos/sq/JSIL/git/commits/9bf2346cde5008046dcc285d24663d8cad1d8a25,9bf2346cde5008046dcc285d24663d8cad1d8a25,Fix stdout writes in the browser printing 'undefined'
kg,2012-11-25 10:33:27,https://api.github.com/repos/sq/JSIL/git/commits/fc38eacca0357bd6f77d7c08aa3e9e0320fe81d6,fc38eacca0357bd6f77d7c08aa3e9e0320fe81d6,Don't warn about missing externals indefinitely since it just impairs performance.
kg,2012-11-25 10:30:54,https://api.github.com/repos/sq/JSIL/git/commits/06b9bfd143f4bdf3affda8410f27465dee1c32d9,06b9bfd143f4bdf3affda8410f27465dee1c32d9,"Restore old behavior of not actually throwing when an external method is unimplemented.
Fix extra newline in stderr writes in the browser."
kg,2012-11-25 10:25:12,https://api.github.com/repos/sq/JSIL/git/commits/38ed4e2c3a189dd6690b9fc95816643a42d89ae5,38ed4e2c3a189dd6690b9fc95816643a42d89ae5,"Rename JSIL.Host.error to JSIL.Host.abort.
Add a new host service for throwing exceptions named 'error'."
kg,2012-11-23 12:48:57,https://api.github.com/repos/sq/JSIL/git/commits/81290410145d6f6f88db2b1dd00ff6ad6b2c0617,81290410145d6f6f88db2b1dd00ff6ad6b2c0617,Restore old behavior of only writing warnings to the console
kg,2012-11-23 12:47:06,https://api.github.com/repos/sq/JSIL/git/commits/3f10b00f31dd88c23e7194216c2d7268862076f6,3f10b00f31dd88c23e7194216c2d7268862076f6,Fix JSIL.Host.warning
kg,2012-11-23 12:23:38,https://api.github.com/repos/sq/JSIL/git/commits/dada6052ba3f5a652c591ef853099dc05ff5ba61,dada6052ba3f5a652c591ef853099dc05ff5ba61,Replace most uses of Date.now() with JSIL.Host.getTime
kg,2012-11-23 11:44:07,https://api.github.com/repos/sq/JSIL/git/commits/d37357abb172ffb57fde68512200714dc76ac45a,d37357abb172ffb57fde68512200714dc76ac45a,"Refactor runLater, logWrite and logWriteLine to use services"
kg,2012-11-23 06:47:29,https://api.github.com/repos/sq/JSIL/git/commits/1b6b392dff5592d55f35cffdaef61968d4f5ce01,1b6b392dff5592d55f35cffdaef61968d4f5ce01,Merge branch 'master' into replay
kg,2012-11-22 10:31:22,https://api.github.com/repos/sq/JSIL/git/commits/b826118e0aad2a9334faf677ed17a4a3f5618cb9,b826118e0aad2a9334faf677ed17a4a3f5618cb9,Don't use CallVirtual to invoke Equals overloads since it's unnecessary
kg,2012-11-22 10:17:37,https://api.github.com/repos/sq/JSIL/git/commits/34c35b710295a7edaa9d0b081a43592834450ceb,34c35b710295a7edaa9d0b081a43592834450ceb,Add another struct equality test case
kg,2012-11-22 10:06:07,https://api.github.com/repos/sq/JSIL/git/commits/c9695afc384ffdcb94141075899bd8d4114dfa0b,c9695afc384ffdcb94141075899bd8d4114dfa0b,Fix a couple bugs in the Equals implementation for structs and classes.
kg,2012-11-22 02:57:07,https://api.github.com/repos/sq/JSIL/git/commits/3cc4a3f125390cd501144108c6dbce3c40850be2,3cc4a3f125390cd501144108c6dbce3c40850be2,"Merge branch 'master' into replay

Conflicts:
	Libraries/JSIL.Core.js"
kg,2012-11-22 02:40:52,https://api.github.com/repos/sq/JSIL/git/commits/bb62ccbc7f3fef15f02c490d7248fb11eebd7aa8,bb62ccbc7f3fef15f02c490d7248fb11eebd7aa8,"Add support for attaching attributes to constants.
Represent constants as special fields."
kg,2012-11-21 21:30:48,https://api.github.com/repos/sq/JSIL/git/commits/310dcb2de856b0e8aaeb6831a42af8df1dcde021,310dcb2de856b0e8aaeb6831a42af8df1dcde021,Make InterfaceBuilder.Constant return a (nonfunctional) MemberBuilder
kg,2012-11-21 21:29:51,https://api.github.com/repos/sq/JSIL/git/commits/326afdf048bb1e21d642962568f178fd44d6c5d6,326afdf048bb1e21d642962568f178fd44d6c5d6,Add System.Char to the suppressed type declaration list
kg,2012-11-21 21:30:48,https://api.github.com/repos/sq/JSIL/git/commits/ddf64aff5daa49ca7f746965d9fbef9ecbed5d19,ddf64aff5daa49ca7f746965d9fbef9ecbed5d19,Make InterfaceBuilder.Constant return a (nonfunctional) MemberBuilder
kg,2012-11-21 21:29:51,https://api.github.com/repos/sq/JSIL/git/commits/1bad6ddfaf4b9d1ffabde2b0ca278131966e3f59,1bad6ddfaf4b9d1ffabde2b0ca278131966e3f59,Add System.Char to the suppressed type declaration list
kg,2012-11-21 02:59:46,https://api.github.com/repos/sq/JSIL/git/commits/81f39657c8d7b179e3adcf87582c54552157e0ab,81f39657c8d7b179e3adcf87582c54552157e0ab,Fix ASI typo in XNA.Core
kg,2012-11-21 02:59:36,https://api.github.com/repos/sq/JSIL/git/commits/e6a3a8f8ec091de257fb7aa6751a28eb843f16e9,e6a3a8f8ec091de257fb7aa6751a28eb843f16e9,Use mersenne twister for System.Random.
kg,2012-11-21 02:20:46,https://api.github.com/repos/sq/JSIL/git/commits/3edb93bf6dfa4dfd0d40b9ff1c295cf9f4cf5ad4,3edb93bf6dfa4dfd0d40b9ff1c295cf9f4cf5ad4,More service refactoring
kg,2012-11-21 01:30:40,https://api.github.com/repos/sq/JSIL/git/commits/0bcc12dad89e128499e3a121890d0bfe50548ede,0bcc12dad89e128499e3a121890d0bfe50548ede,Move mouse and keyboard state into services
kg,2012-11-21 01:19:20,https://api.github.com/repos/sq/JSIL/git/commits/41566fdc0a4bde1e96ca017220563e7b6628bda9,41566fdc0a4bde1e96ca017220563e7b6628bda9,"Make getCanvas and createCanvas host functions use a service.
Change some code to use the createCanvas host function."
kg,2012-11-20 21:04:30,https://api.github.com/repos/sq/JSIL/git/commits/37de9ea81ce7d21798323e186d3891bad64e3529,37de9ea81ce7d21798323e186d3891bad64e3529,Checkpoint
kg,2012-11-19 13:39:59,https://api.github.com/repos/sq/JSIL/git/commits/b5b39dc8e46ae870f5d36cae6527737da6f5ef0d,b5b39dc8e46ae870f5d36cae6527737da6f5ef0d,"When a localStorage write fails, log diagnostic information."
kg,2012-11-19 09:22:56,https://api.github.com/repos/sq/JSIL/git/commits/1737f29b8afd19f42ddd8cdfe7bc47c0c52b9154,1737f29b8afd19f42ddd8cdfe7bc47c0c52b9154,"Refactorings and dead code elimination related to JSIL.Host.
Eliminate JSIL.Host.getFile and JSIL.Host.doesFileExist.
If no storage volumes are defined, create a null root volume so that the readonly files volume can be junctioned into the right place.
Fix bug that prevented using """" as fileVirtualRoot, contentRoot or libraryRoot"
kg,2012-11-17 16:45:03,https://api.github.com/repos/sq/JSIL/git/commits/a44000c14be0d13ec042e0a20dad6f2df00edde6,a44000c14be0d13ec042e0a20dad6f2df00edde6,"Enable requestAnimationFrame in IE10 since supposedly it's fixed.
https://connect.microsoft.com/IE/feedback/details/678165/msrequestanimationframe-calls-are-sometimes-ignored"
kg,2012-11-17 03:02:11,https://api.github.com/repos/sq/JSIL/git/commits/bbbe7e0d119c1e2d1bd4c75a2ca87fa984ddcc65,bbbe7e0d119c1e2d1bd4c75a2ca87fa984ddcc65,Add basic support for TimeSpan.ToString and TimeSpan.Parse.
kg,2012-11-17 02:16:01,https://api.github.com/repos/sq/JSIL/git/commits/809af743fc91ed1002fb4d8c4f67ae7c6140c00c,809af743fc91ed1002fb4d8c4f67ae7c6140c00c,"Fix enums using assignment to set __TypeId__ instead of SetValueProperty
Add a diagnostic mode that will ensure writes to read-only value properties always throw"
kg,2012-11-16 16:23:02,https://api.github.com/repos/sq/JSIL/git/commits/d4056305c02a5f522ab38b5d1b9ace3f91b0d71f,d4056305c02a5f522ab38b5d1b9ace3f91b0d71f,Replace two-element array in FindGenericParameters with an object
kg,2012-11-16 01:47:08,https://api.github.com/repos/sq/JSIL/git/commits/9b92f27ee96e69458942eaa804f6019900907568,9b92f27ee96e69458942eaa804f6019900907568,"Restore Vector2.Transform stub and add equivalents for Vector3 and Vector4.
Fix a typo in the Vector proxies."
kg,2012-11-16 00:04:39,https://api.github.com/repos/sq/JSIL/git/commits/595ddeb0f19336e32f211d1417de6848e62fd641,595ddeb0f19336e32f211d1417de6848e62fd641,Update some XNA proxies for better code generation
kg,2012-11-15 23:27:23,https://api.github.com/repos/sq/JSIL/git/commits/99b13f711e109575383e00a1ae4630262a3587f3,99b13f711e109575383e00a1ae4630262a3587f3,Add soulcaster to demos carousel
kg,2012-11-15 23:27:13,https://api.github.com/repos/sq/JSIL/git/commits/14ca6e9f837b03add7d13e07552b3de34d45e29b,14ca6e9f837b03add7d13e07552b3de34d45e29b,Fix MethodSignatureSet treating proxy types as distinct from the types they act as a proxy for.
kg,2012-11-15 04:55:47,https://api.github.com/repos/sq/JSIL/git/commits/f81211d3518e56d496e0a1e75a59b1993ab4173d,f81211d3518e56d496e0a1e75a59b1993ab4173d,Add a workaround for Safari 6 being garbage.
kg,2012-11-15 02:19:30,https://api.github.com/repos/sq/JSIL/git/commits/3cc0da1af7016f2fe82b728fdee540df2c106d73,3cc0da1af7016f2fe82b728fdee540df2c106d73,Fix MeasureString cutting off the bottom/right edges of the last character
kg,2012-11-15 02:11:14,https://api.github.com/repos/sq/JSIL/git/commits/e42417da16df88f49cf6f55afb44e8432ecbeedc,e42417da16df88f49cf6f55afb44e8432ecbeedc,Implement StorageContainer.DeleteFile.
kg,2012-11-15 02:10:59,https://api.github.com/repos/sq/JSIL/git/commits/ee20da95fe97cf838e02a3cff07bd48333684b32,ee20da95fe97cf838e02a3cff07bd48333684b32,Overhaul the SpriteFont implementation so that MeasureString and DrawString are consistent with each other and their semantics match XNA more closely.
kg,2012-11-15 02:10:43,https://api.github.com/repos/sq/JSIL/git/commits/5b08265b8013a5fc03cf2aa3897b1a287679f0dd,5b08265b8013a5fc03cf2aa3897b1a287679f0dd,Fix an overload resolution bug introduced in the content reader implementation.
kg,2012-11-15 02:10:27,https://api.github.com/repos/sq/JSIL/git/commits/f91a972683dea8920e0a6a91d3909aa7f2b8e558,f91a972683dea8920e0a6a91d3909aa7f2b8e558,Fix new type name parser not handling nested types correctly.
kg,2012-11-15 01:37:20,https://api.github.com/repos/sq/JSIL/git/commits/95941700ee2f5856fa92d92a27036e1c653c9d38,95941700ee2f5856fa92d92a27036e1c653c9d38,More correctness fixes for static fields and static constructors.
kg,2012-11-15 01:28:42,https://api.github.com/repos/sq/JSIL/git/commits/236bb1d37d750cf5ebb4150c15917b9438ac19dd,236bb1d37d750cf5ebb4150c15917b9438ac19dd,Tweak some browser scaffold features
kg,2012-11-15 01:28:27,https://api.github.com/repos/sq/JSIL/git/commits/bc550213a80cf739fc2aaaf596a42adecf17aedf,bc550213a80cf739fc2aaaf596a42adecf17aedf,Fix static field accesses not running static constructors if the field's default value was a literal. Whoops.
kg,2012-11-14 16:51:53,https://api.github.com/repos/sq/JSIL/git/commits/9466ce0ee2b2bb669ac563a5f7af8ef84e05fe92,9466ce0ee2b2bb669ac563a5f7af8ef84e05fe92,Add support for configuring the built in fullscreen mode to use a custom element instead of the canvas (this lets you put custom chrome on screen in fullscreen mode or manually adjust fullscreen canvas dimensions)
kg,2012-11-14 03:41:12,https://api.github.com/repos/sq/JSIL/git/commits/b0d5e535250e67e48a1db6f1315960ec7acbb723,b0d5e535250e67e48a1db6f1315960ec7acbb723,"Start using the 'loop' property of <audio> elements since Firefox implemented it, finally. Woot!"
kg,2012-11-14 00:15:02,https://api.github.com/repos/sq/JSIL/git/commits/fad1e53d615d9f76320d563516da2d7a72ef981a,fad1e53d615d9f76320d563516da2d7a72ef981a,Implement SpriteFont.set_Spacing
kg,2012-11-13 23:57:25,https://api.github.com/repos/sq/JSIL/git/commits/a4161a884825ecfc17c38654e839159250fc053b,a4161a884825ecfc17c38654e839159250fc053b,Remove SC1/SC2 demos
kg,2012-11-13 23:19:39,https://api.github.com/repos/sq/JSIL/git/commits/a05a26da10360e788a3c7a7a0801200108e72c99,a05a26da10360e788a3c7a7a0801200108e72c99,"Add robust logging of proxy load successes and failures.
When resolving a path fails, output both the unresolved and resolved forms (so it's easy to debug variable related issues)."
kg,2012-11-13 01:54:56,https://api.github.com/repos/sq/JSIL/git/commits/e72f8c97677bbf0f9c8e0a33b0d78c2760d0a168,e72f8c97677bbf0f9c8e0a33b0d78c2760d0a168,"Stub out VectorX.Transform and Matrix.CreateScale(float).
Expose more members of Assembly."
kg,2012-11-13 01:54:29,https://api.github.com/repos/sq/JSIL/git/commits/97b44455100f2a5ec9541792c165d4df2eca9a29,97b44455100f2a5ec9541792c165d4df2eca9a29,Add a workaround for incredibly stupid Firefox canvas bug
kg,2012-11-13 01:09:54,https://api.github.com/repos/sq/JSIL/git/commits/9a61935c7b081121f9256dc1767e71e733a703ac,9a61935c7b081121f9256dc1767e71e733a703ac,"Fix some missing/broken Vector4 constants.
Implement Color.ToVector4.
Silently ignore attempts to apply an object initializer to null or undefined (since that probably just means the thing you're initializing is an unimplemented external).
Fix PeekChar.
Add a partial implementation of Texture2D.GetData."
kg,2012-11-13 00:42:13,https://api.github.com/repos/sq/JSIL/git/commits/b6e25527f199778219a948e95b5ba509ed0c0b9c,b6e25527f199778219a948e95b5ba509ed0c0b9c,"Make EffectPassCollection contain a single pass again
Stub GameComponent.Dispose
Overhaul the Texture2D.SetData implementation and add support for subrects"
kg,2012-11-12 20:43:00,https://api.github.com/repos/sq/JSIL/git/commits/77364d7ac7f4b5dee2c14da7778b250b074c5ae7,77364d7ac7f4b5dee2c14da7778b250b074c5ae7,Make ContentManager.Load<Texture2D> actually return a Texture2D.
kg,2012-11-12 20:11:45,https://api.github.com/repos/sq/JSIL/git/commits/cdbfcc14e0d72c23b3d05b8b3f31796e8c296fe9,cdbfcc14e0d72c23b3d05b8b3f31796e8c296fe9,"Fix JSIL.Array.New not copying initializer values into typed arrays.
Make EffectPassCollection stub slightly more accurate."
kg,2012-11-12 19:54:35,https://api.github.com/repos/sq/JSIL/git/commits/fd9980b2ef0a121a60a4090d246842c336e42418,fd9980b2ef0a121a60a4090d246842c336e42418,Fix creating array instances using an int64 as the size.
kg,2012-11-12 19:54:26,https://api.github.com/repos/sq/JSIL/git/commits/046c18a0cd415e968fa6585b69f2e384146cf76a,046c18a0cd415e968fa6585b69f2e384146cf76a,Fix some XNA typos
kg,2012-11-12 19:54:05,https://api.github.com/repos/sq/JSIL/git/commits/244492af28f91448910eb1a40a5d146dda788641,244492af28f91448910eb1a40a5d146dda788641,"Stub in parts of LinkedList.
Fix BinaryReader not throwing when reading past the end of the stream."
kg,2012-11-12 19:53:29,https://api.github.com/repos/sq/JSIL/git/commits/d8da39502d794c18e636f46d87aed585e19da7d2,d8da39502d794c18e636f46d87aed585e19da7d2,Implement TimeSpan.op_UnaryNegation
kg,2012-11-12 18:55:23,https://api.github.com/repos/sq/JSIL/git/commits/322e3a16b924ca3168ba98b8659fb3c7fda2abc4,322e3a16b924ca3168ba98b8659fb3c7fda2abc4,"Fix a bug in GetCustomAttributes related to type filtering.
Stop emitting properties/fields in sorted order, since broken .NET code out there relies on order matching the metadata."
kg,2012-11-12 18:24:38,https://api.github.com/repos/sq/JSIL/git/commits/da2f62d203220418c699d707420f8c0abb8879f8,da2f62d203220418c699d707420f8c0abb8879f8,"Implement DictionaryReader<Key, Value>.
Add a partial ReflectiveReader implementation."
kg,2012-11-12 17:52:31,https://api.github.com/repos/sq/JSIL/git/commits/100db99146ddd47165f6c3655dd65c48a8a242ab,100db99146ddd47165f6c3655dd65c48a8a242ab,Improvements to reflection support
kg,2012-11-12 17:21:36,https://api.github.com/repos/sq/JSIL/git/commits/edb0b51f91acbfbf3f344d0b32aad31cbf4bee79,edb0b51f91acbfbf3f344d0b32aad31cbf4bee79,"Add partial stubs for ReflectiveReader and DictionaryReader.
Monkeypatch get_Message and get_StackTrace onto JS Error so generic error handling code works."
kg,2012-11-12 17:12:16,https://api.github.com/repos/sq/JSIL/git/commits/81f847c2ac35ab23ddac9867988bdb576cf1da25,81f847c2ac35ab23ddac9867988bdb576cf1da25,"Add a test covering more complex generic type names.
Add a new type name parser based on mono's."
kg,2012-11-12 15:00:29,https://api.github.com/repos/sq/JSIL/git/commits/381b836e57b38923f6df6857d88aba1492900d0d,381b836e57b38923f6df6857d88aba1492900d0d,"Add Int64Reader, UInt64Reader, SingleReader and DoubleReader"
kg,2012-11-12 14:53:05,https://api.github.com/repos/sq/JSIL/git/commits/cf63bda3da7a218780b8b414b6a136356c6e0e50,cf63bda3da7a218780b8b414b6a136356c6e0e50,Split XNACore up into multiple files.
kg,2012-11-12 12:17:19,https://api.github.com/repos/sq/JSIL/git/commits/a682423baaeb89e520361479c82b14efad379e4d,a682423baaeb89e520361479c82b14efad379e4d,Handle more cases where struct constructor invocations need to be transformed.
kg,2012-11-12 12:06:31,https://api.github.com/repos/sq/JSIL/git/commits/6ead8c9cd454d68d89001536f8bce0b02fbcd868,6ead8c9cd454d68d89001536f8bce0b02fbcd868,Expand the constructor folding transform to also fixup invocations of .ctor on instances of immutable structs. This fixes cases where generated code would accidentally mutate existing immutable struct instances.
kg,2012-11-12 11:55:10,https://api.github.com/repos/sq/JSIL/git/commits/ef0d2821d3ae2d7db93e991146cd1b7428087eba,ef0d2821d3ae2d7db93e991146cd1b7428087eba,"Fix some bugs in constructor folding.
Mark readonly fields in generated JS.
Add a test for a currently broken use of immutable structs."
kg,2012-11-11 14:16:34,https://api.github.com/repos/sq/JSIL/git/commits/3ebab464b86b08f48d15448875430de9065af348,3ebab464b86b08f48d15448875430de9065af348,"Implement Activator.CreateInstance(Type)
Implement Color.FromNonPremultiplied"
kg,2012-11-11 14:06:58,https://api.github.com/repos/sq/JSIL/git/commits/d1ea3cdc8637c01a9f5b41918e03e32280661546,d1ea3cdc8637c01a9f5b41918e03e32280661546,"Implement File.Copy.
Fix BinaryWriter.Dispose.
Implement Texture2D.SaveAsPng and SaveAsJpeg.
Implement Texture2D.FromStream for all streams (instead of just URL-based streams).
Fix Int64.FromNumber."
kg,2012-11-11 13:07:57,https://api.github.com/repos/sq/JSIL/git/commits/545a49bc8dc0c1b84a3caedb47647df6af40b941,545a49bc8dc0c1b84a3caedb47647df6af40b941,Hack in support for Dictionary.Keys.Count and Dictionary.Values.Count.
kg,2012-11-11 13:03:48,https://api.github.com/repos/sq/JSIL/git/commits/153191555df02d2c95e7440635bffc1829610b09,153191555df02d2c95e7440635bffc1829610b09,"Fix SeekOrigin.End.
Fix BinaryWriter.Seek."
kg,2012-11-11 12:53:09,https://api.github.com/repos/sq/JSIL/git/commits/db80c110f8ec2df034c2707237f1a1e62c5c68da,db80c110f8ec2df034c2707237f1a1e62c5c68da,Fix type-qualified property names in compiler-generated JS not matching the type-qualified names produced by the runtime library when the property was declared in a nested type.
kg,2012-11-11 12:24:07,https://api.github.com/repos/sq/JSIL/git/commits/c823be98d29cfc95156e25af9bcb545f48c1d5d0,c823be98d29cfc95156e25af9bcb545f48c1d5d0,"Add basic support for the Convert.ToXXX(object) methods.
Add an Int64 test case."
kg,2012-11-11 11:45:14,https://api.github.com/repos/sq/JSIL/git/commits/446b106d328dc92a2eeb3077c1647a5999dbe7ac,446b106d328dc92a2eeb3077c1647a5999dbe7ac,"Implement the 'inherit' argument to GetCustomAttributes for types
Add a definition for NotImplementedException so it can be thrown"
kg,2012-11-11 11:37:41,https://api.github.com/repos/sq/JSIL/git/commits/8fb42b120ad8bf5b07a310a6d3b3e07b0fac9aa9,8fb42b120ad8bf5b07a310a6d3b3e07b0fac9aa9,Add support for the GetCustomAttributes type filter argument
kg,2012-11-11 09:30:22,https://api.github.com/repos/sq/JSIL/git/commits/18108fdfa57df4f5e32a6deb8e4f80007ecadfd7,18108fdfa57df4f5e32a6deb8e4f80007ecadfd7,Fix Rectangle.Offset being defined wrong in the XNA proxies.
kg,2012-11-11 09:04:41,https://api.github.com/repos/sq/JSIL/git/commits/087c3fc5c157b3fe806e93b200f127d14e172168,087c3fc5c157b3fe806e93b200f127d14e172168,Fiddle with image cache parameters to be more aggressive
kg,2012-11-11 09:04:20,https://api.github.com/repos/sq/JSIL/git/commits/d9bf6f419e84a2c106580f51718d2d426809d127,d9bf6f419e84a2c106580f51718d2d426809d127,"Fix classes having attributes of their own types.
Make ReferenceContext a stack with push/pop methods so manual saving/restoring of members isn't necessary."
kg,2012-11-11 08:10:06,https://api.github.com/repos/sq/JSIL/git/commits/75c7124ee5e2f17e4f4e95fe64cec05c8a712af3,75c7124ee5e2f17e4f4e95fe64cec05c8a712af3,Add support for getting attributes from classes and structs.
kg,2012-11-11 06:47:53,https://api.github.com/repos/sq/JSIL/git/commits/e2084b177df7156d437cfd3c7984eec263aeb387,e2084b177df7156d437cfd3c7984eec263aeb387,"Fix another bug related to absolute paths in XACT projects.
Handle character overhang when measuring strings in SpriteFont."
kg,2012-11-11 06:28:38,https://api.github.com/repos/sq/JSIL/git/commits/fa851328991f4a858dbf7cdafe9eba64d6fe0789,fa851328991f4a858dbf7cdafe9eba64d6fe0789,Fix a minor bug in the DateTime stub
kg,2012-11-11 06:20:42,https://api.github.com/repos/sq/JSIL/git/commits/fd24bea45cf6607e3e8f7eed882204e98cb2e955,fd24bea45cf6607e3e8f7eed882204e98cb2e955,Add basic support for absolute paths in XACT projects.
kg,2012-11-10 18:26:29,https://api.github.com/repos/sq/JSIL/git/commits/fdf5e4f28972f720a7c14eaa73b077571ef58215,fdf5e4f28972f720a7c14eaa73b077571ef58215,Fix TimeSpan comparison operators.
kg,2012-11-10 16:12:18,https://api.github.com/repos/sq/JSIL/git/commits/3ffc147fd44437af26ac3bee7e6e8c23832559fe,3ffc147fd44437af26ac3bee7e6e8c23832559fe,Fix a bug in ApplyExternals that would cause errors if it was called twice
kg,2012-11-10 16:06:38,https://api.github.com/repos/sq/JSIL/git/commits/aba5954793d2efe4ba568df7080b70035c33ba55,aba5954793d2efe4ba568df7080b70035c33ba55,Fix nasty interaction between struct constructor invocation folding and really badly written C#.
kg,2012-11-10 15:52:12,https://api.github.com/repos/sq/JSIL/git/commits/b2703d4564e63d298b9f7f9789462855bcef80d7,b2703d4564e63d298b9f7f9789462855bcef80d7,Fix a correctness bug introduced where reads of structs from readonly fields would not generate a copy even if it was actually needed.
kg,2012-11-10 15:37:25,https://api.github.com/repos/sq/JSIL/git/commits/6bb4a59b45c35f1173a19f95fc79fec156b3d51f,6bb4a59b45c35f1173a19f95fc79fec156b3d51f,Fix some incorrectly written method signatures causing recursive initialization.
kg,2012-11-10 15:29:32,https://api.github.com/repos/sq/JSIL/git/commits/3a246aba5bd83a4fde6bf3b511302f8584633a41,3a246aba5bd83a4fde6bf3b511302f8584633a41,"Fix passing enums as attribute arguments
Add a workaround for stupid bug in Cecil where it nests attribute argument definitions"
kg,2012-11-10 15:11:37,https://api.github.com/repos/sq/JSIL/git/commits/f5ee02016c3b6ff16a8122c61e684786a08be4a6,f5ee02016c3b6ff16a8122c61e684786a08be4a6,"Add basic support for getting the custom attributes attached to a field, property or method using the reflection APIs.
Split the public interface for enum types out from their type object.
Rename Enum.Flags to Enum.$Flags to avoid name collisions."
kg,2012-11-10 12:47:34,https://api.github.com/repos/sq/JSIL/git/commits/c7427b3a05b6a93eeb51720e7e99d98482cedc74,c7427b3a05b6a93eeb51720e7e99d98482cedc74,Implement StreamReader.get_EndOfStream and add a test.
kg,2012-11-10 12:34:50,https://api.github.com/repos/sq/JSIL/git/commits/d0c6c3f13d3251f5310326d3522e073749c200bd,d0c6c3f13d3251f5310326d3522e073749c200bd,Fix StreamReader.ReadLine and add a test
kg,2012-11-10 12:27:29,https://api.github.com/repos/sq/JSIL/git/commits/1eed0a7294bd77a263be7fc1c4f4ab94c1bd975e,1eed0a7294bd77a263be7fc1c4f4ab94c1bd975e,"Implement UTF16 encoding (big endian and little endian).
Implement byte order mark detection for UTF8, UTF16LE and UTF16BE in StreamReader and add a test."
kg,2012-11-10 12:21:39,https://api.github.com/repos/sq/JSIL/git/commits/3e918498ab76065e42d72bffddbbc4545bd69bdb,3e918498ab76065e42d72bffddbbc4545bd69bdb,Add support for automatically gathering up files that were copied to the output directory by a built project and adding them to a manifest in the output directory.
kg,2012-11-10 09:46:27,https://api.github.com/repos/sq/JSIL/git/commits/d0275821c5bb0ef8e76adb8b81ac95eea1cf00b8,d0275821c5bb0ef8e76adb8b81ac95eea1cf00b8,"Change the interface __Members__ dict to be named __InterfaceMembers__ so it's not confused with the __Members__ list from types.
Change __RawMethods__ entries from arrays to object instances."
kg,2012-11-10 09:37:19,https://api.github.com/repos/sq/JSIL/git/commits/9567b7f141a59b5205d9783795785d94762ef88d,9567b7f141a59b5205d9783795785d94762ef88d,Change the elements of Type.__Members__ from arrays to class instances.
kg,2012-11-10 09:19:39,https://api.github.com/repos/sq/JSIL/git/commits/00e58f72d986ef7385627dff461c78283452b5e1,00e58f72d986ef7385627dff461c78283452b5e1,"Split the public interface of an assembly (containing the types) from the reflection assembly used by .NET.
Add basic support for Assembly.GetTypes.
Implement Regex.IsMatch.
Make some API changes to enable adding support for attributes."
kg,2012-11-10 04:53:48,https://api.github.com/repos/sq/JSIL/git/commits/247bac32f6cdc65390fc032ea629445fcd27ea05,247bac32f6cdc65390fc032ea629445fcd27ea05,Move IsControlFlow up to JSStatement so that it can be true for JSSwitchStatement. Fixes issue #129.
kg,2012-11-09 19:49:52,https://api.github.com/repos/sq/JSIL/git/commits/44cd5a995c4a2312cb51b376a4ddbb94e1bc3de0,44cd5a995c4a2312cb51b376a4ddbb94e1bc3de0,"Put in a basic implementation of Exception.get_StackTrace
Implement StringBuilder.get_Chars
Fix Microsoft.Xna.Framework.Content.ContentLoadException not having a stacktrace"
kg,2012-11-09 19:36:21,https://api.github.com/repos/sq/JSIL/git/commits/449bac8bb447263d65c5b5763017faee6ecca669,449bac8bb447263d65c5b5763017faee6ecca669,"Slightly better UTF8 support in StreamReader (still basically busted, though)
Detect broken/unimplemented content type readers and bail out with an error."
kg,2012-11-09 08:41:32,https://api.github.com/repos/sq/JSIL/git/commits/bd9046e5d4ed3c2fe99b0911d49940bc53408e6d,bd9046e5d4ed3c2fe99b0911d49940bc53408e6d,Rename Rectangle.Offset's overloads so they don't need CallStatic
kg,2012-11-09 07:50:05,https://api.github.com/repos/sq/JSIL/git/commits/5628967e63031afbe2f27b3b22c1ff8a2f6ba087,5628967e63031afbe2f27b3b22c1ff8a2f6ba087,"Force mouse coordinates in JSIL.Browser to be integers to avoid deoptimizations in V8.
Fix lazy properties producing function deoptimizations in V8 due to type information changes."
kg,2012-11-09 05:07:47,https://api.github.com/repos/sq/JSIL/git/commits/e249b983868c7f3c2ebea143a2a89e118e004e31,e249b983868c7f3c2ebea143a2a89e118e004e31,Force change ILSpy submodule commit id.
kg,2012-11-09 05:02:56,https://api.github.com/repos/sq/JSIL/git/commits/95dfbe6c5e67e98cad5a31b8d072a42778aee9b3,95dfbe6c5e67e98cad5a31b8d072a42778aee9b3,Recreate ILSpy submodule.
kg,2012-11-08 20:01:14,https://api.github.com/repos/sq/JSIL/git/commits/a74e3a2ffddc18d8e3b07c510f95eab9be7f9ccc,a74e3a2ffddc18d8e3b07c510f95eab9be7f9ccc,Tweak hash container implementation for slightly better performance.
kg,2012-11-08 14:45:20,https://api.github.com/repos/sq/JSIL/git/commits/17b1416dfd65ba781161ee647da124a447e4aee8,17b1416dfd65ba781161ee647da124a447e4aee8,Update to latest ILSpy
kg,2012-11-08 13:26:00,https://api.github.com/repos/sq/JSIL/git/commits/2e2ac3082a1cbde6d1689bcd4745473bdb85f26e,2e2ac3082a1cbde6d1689bcd4745473bdb85f26e,"Merge Int64/UInt64 support to master.
<Auto Generated by Git>"
kg,2012-11-08 10:50:35,https://api.github.com/repos/sq/JSIL/git/commits/d337d66885f8f5b7d7ef75dfed6ad36494dc1b01,d337d66885f8f5b7d7ef75dfed6ad36494dc1b01,"Fold 'var x = new struct(); struct.prototype._ctor.call(x, args);' pairs into a single constructor invocation with arguments.
Disallow creating JSVariable instances with a null type."
kg,2012-11-08 10:34:02,https://api.github.com/repos/sq/JSIL/git/commits/e5cc048e8cf3cc9ebd15f89aacd0b8eebb3bb626,e5cc048e8cf3cc9ebd15f89aacd0b8eebb3bb626,Tweak CacheTypeExpressions again to reduce the likelihood of caching multiple array types to the same type.
kg,2012-11-08 10:00:22,https://api.github.com/repos/sq/JSIL/git/commits/713bb4195d22a3472a0e7247da21db0f7883fd95,713bb4195d22a3472a0e7247da21db0f7883fd95,Rename the 'optimization' stage to more accurately reflect that it simply runs all enabled transforms on functions
kg,2012-11-08 08:21:00,https://api.github.com/repos/sq/JSIL/git/commits/8b0dbd64f5858ade55eb23c067a588393c3f07a2,8b0dbd64f5858ade55eb23c067a588393c3f07a2,"If all of a type's fields are readonly, flag the type as Immutable in type information.
Detect methods during static analysis that mutate or indirectly mutate readonly fields (by reassigning 'this') so that a copy can be forced before the invocation.
Omit copies for immutable structs.
Allow using the JSImmutable attribute on classes/structs instead of just fields."
kg,2012-11-08 06:50:22,https://api.github.com/repos/sq/JSIL/git/commits/2feeba4a3db63a67271c6235c63d7b4cfebdc264,2feeba4a3db63a67271c6235c63d7b4cfebdc264,"Expand support for compound assignments to multidimensional arrays.
Correctness fix for compound assignments to multidimensional arrays using constant array indices.
Spit out newlines between each subexpression in a comma expression for better readability."
kg,2012-11-07 12:56:37,https://api.github.com/repos/sq/JSIL/git/commits/e084593d8e1e2124f23275f87d78eb498eed870a,e084593d8e1e2124f23275f87d78eb498eed870a,"Add basic test coverage for reading/writing int64s from streams.
Fix the $jsilcore.BytesFrom/BytesTo methods for int64 and uint64."
kg,2012-11-07 11:50:47,https://api.github.com/repos/sq/JSIL/git/commits/dde2dd1b3f9f0bb826903a56648e95758e06e7dd,dde2dd1b3f9f0bb826903a56648e95758e06e7dd,Change try to use its own copy of the JSIL libraries.
kg,2012-11-07 11:27:59,https://api.github.com/repos/sq/JSIL/git/commits/db9c7040fbb39e0b346e6410c742cbd6b9c7b718,db9c7040fbb39e0b346e6410c742cbd6b9c7b718,Update comments for int64/uint64 byte conversion functions
kg,2012-11-07 11:19:04,https://api.github.com/repos/sq/JSIL/git/commits/830429509fe842f31883a385e6576f249ec58860,830429509fe842f31883a385e6576f249ec58860,Name all the Int64 functions so they aren't (anonymous function) in Chrome's profiler.
kg,2012-11-07 11:03:08,https://api.github.com/repos/sq/JSIL/git/commits/9e6cf0852ffe4625c29ded58d7b18c72d67de523,9e6cf0852ffe4625c29ded58d7b18c72d67de523,"Fix incorrect type information for Int64 binary operators in the AST resulting in spurious conversions to/from Number.
Fix some Int64 literals getting left as normal integer literals.
Fix child expressions of replaced Int64 expressions not being visited sometimes.
Made Int64 type detection slightly less fragile."
kg,2012-11-07 10:23:58,https://api.github.com/repos/sq/JSIL/git/commits/d9b05e85ba71c5445caab8ba6c87fc44f5912530,d9b05e85ba71c5445caab8ba6c87fc44f5912530,Fix broken interaction between TotalSeconds/TotalMilliseconds caching and XNACore
kg,2012-11-07 10:19:57,https://api.github.com/repos/sq/JSIL/git/commits/8046b0af616a64d946aef0a3267be923ef572126,8046b0af616a64d946aef0a3267be923ef572126,"Optimize TimeSpan to avoid creating garbage inside accessors.
Remove some garbage created by op_Modulus."
kg,2012-11-07 10:19:26,https://api.github.com/repos/sq/JSIL/git/commits/67ffdbcd126be84facf20e4a5283236be41e70e9,67ffdbcd126be84facf20e4a5283236be41e70e9,Exclude Int64 and UInt64 from translation so that the mscorlib version doesn't trample the JSIL version.
kg,2012-11-07 10:00:00,https://api.github.com/repos/sq/JSIL/git/commits/411a7804ce9bc5dd82c6be91d98260bc7162b0ae,411a7804ce9bc5dd82c6be91d98260bc7162b0ae,Simplify the temporary creation for Int64
kg,2012-11-07 09:57:02,https://api.github.com/repos/sq/JSIL/git/commits/97a5de02bae4613d12e81d91de610e668b22ce01,97a5de02bae4613d12e81d91de610e668b22ce01,"Add support for performing Int64/UInt64 arithmetic in-place by passing an extra 'result' argument.
Optimize Int64/UInt64 arithmetic methods to not create temporary values."
kg,2012-11-07 09:39:11,https://api.github.com/repos/sq/JSIL/git/commits/401b8197306ad767a26543cb2513942f112da387,401b8197306ad767a26543cb2513942f112da387,Nuke duplicate Int64 test suite.
kg,2012-11-07 09:17:26,https://api.github.com/repos/sq/JSIL/git/commits/0fa6adaea6edcbc80f755a342c61dddc1e1a7afd,0fa6adaea6edcbc80f755a342c61dddc1e1a7afd,Optimize the int64-based TimeSpan so it constructs less temporary Int64 instances.
kg,2012-11-07 09:10:06,https://api.github.com/repos/sq/JSIL/git/commits/136f5c1daebc10b97ce50a628a8b49103761cd04,136f5c1daebc10b97ce50a628a8b49103761cd04,Minor code tweak
kg,2012-11-07 09:00:10,https://api.github.com/repos/sq/JSIL/git/commits/7dda066c07fc255b7f14c84dde0fa1f5ceddc071,7dda066c07fc255b7f14c84dde0fa1f5ceddc071,Fix $BuildFieldList not resolving generic-typed fields correctly.
kg,2012-11-07 09:00:10,https://api.github.com/repos/sq/JSIL/git/commits/7ae83306c1e73f5c33583c29a20465d37d22b918,7ae83306c1e73f5c33583c29a20465d37d22b918,Fix $BuildFieldList not resolving generic-typed fields correctly.
kg,2012-11-07 08:39:58,https://api.github.com/repos/sq/JSIL/git/commits/47f057895190c691713257ee59ae74998507281e,47f057895190c691713257ee59ae74998507281e,"Fix some int64 compatibility issues in XNACore.
Throw if a non-int64 is passed to TimeSpan.FromTicks."
kg,2012-11-07 08:27:59,https://api.github.com/repos/sq/JSIL/git/commits/fa70dd69e70215179c96392d337f38fa8d084815,fa70dd69e70215179c96392d337f38fa8d084815,Fix a use of Stream.Position in JSIL.IO.
kg,2012-11-07 08:24:40,https://api.github.com/repos/sq/JSIL/git/commits/3ed8d4f44835b6713c104d602a2bd4e13514f6a4,3ed8d4f44835b6713c104d602a2bd4e13514f6a4,"64-bit correctness fixes for Stream and related types.
Add a couple basic tests for MemoryStream."
kg,2012-11-07 07:53:29,https://api.github.com/repos/sq/JSIL/git/commits/858368c8b576f69b005871090993e72be1a90e6c,858368c8b576f69b005871090993e72be1a90e6c,"Int64 correctness changes in Bootstrap.
Add .valueOf method to Int64 and UInt64 so that using the JS + - operators will produce a Number instead of a String. (This may be a bad idea.)"
kg,2012-11-07 07:46:48,https://api.github.com/repos/sq/JSIL/git/commits/e8de7304cd766ce277cfb8f34747010a21948382,e8de7304cd766ce277cfb8f34747010a21948382,"Represent Int64/UInt64 as a struct with three Int32 fields instead of a struct with an embedded array. This simplifies a bunch of things.
Add test cases for TimeSpan constructors and fix them to use 64-bit arithmetic."
kg,2012-11-07 07:21:11,https://api.github.com/repos/sq/JSIL/git/commits/9f249ffa43ca034df9e287bca4e5753ee02948d7,9f249ffa43ca034df9e287bca4e5753ee02948d7,"Add a more precise implementation of TimeSpan accessors (Days, etc)
Add ToInt32 method to Int64 and ToUInt32 method to UInt64."
kg,2012-11-07 07:13:52,https://api.github.com/repos/sq/JSIL/git/commits/f4de3704e5cdf9d395e49b1d9a6dfc8703418144,f4de3704e5cdf9d395e49b1d9a6dfc8703418144,Mark TimeSpan and DateTime add/subtract operators as pure.
kg,2012-11-07 07:02:14,https://api.github.com/repos/sq/JSIL/git/commits/441a95559a1f774893b44a41ee435ca539d0446e,441a95559a1f774893b44a41ee435ca539d0446e,Remove some dead code.
kg,2012-11-07 06:59:15,https://api.github.com/repos/sq/JSIL/git/commits/745ba80b8356dea980e18b69920139a07b143c18,745ba80b8356dea980e18b69920139a07b143c18,"Fix TimeSpan add/subtract operators.
Fix Int64 and UInt64 MemberwiseClone."
kg,2012-11-07 06:52:43,https://api.github.com/repos/sq/JSIL/git/commits/aad1a725ae602687d71a5746350085d570b91302,aad1a725ae602687d71a5746350085d570b91302,"Checkpoint:
TimeSpan int64 correctness/precision fixes.
Add a test for timespan arithmetic."
kg,2012-11-07 06:52:16,https://api.github.com/repos/sq/JSIL/git/commits/e6d3e1f09a8904f2f06a1ef29e8ba5f5f8b8bcc5,e6d3e1f09a8904f2f06a1ef29e8ba5f5f8b8bcc5,"Fix UInt64.FromNumber and Int64.FromNumber (they were previously only using ~32 bits of precision, now they try to use all 53).
Rename the old FromNumber methods to FromInt32."
kg,2012-11-07 06:14:59,https://api.github.com/repos/sq/JSIL/git/commits/9eb36f4b2f8820cb41fd4248d0d178b76b98a70a,9eb36f4b2f8820cb41fd4248d0d178b76b98a70a,"Start adding test coverage for TimeSpan and DateTime.
Expand TimeSpan methods slightly.
Change Int64 test cases to be a folder test source."
kg,2012-11-07 05:09:31,https://api.github.com/repos/sq/JSIL/git/commits/fd1df4acf44ca9e555d29756428520069906947c,fd1df4acf44ca9e555d29756428520069906947c,"Move Int64 support into its own file.
Move TimeSpan and DateTime into their own file."
kg,2012-11-07 04:48:07,https://api.github.com/repos/sq/JSIL/git/commits/fdbaf3204b16c2e55252255d73d4cedbbe140293,fdbaf3204b16c2e55252255d73d4cedbbe140293,Fix Stream.get_Length to actually return an Int64.
kg,2012-11-07 04:41:47,https://api.github.com/repos/sq/JSIL/git/commits/dbd00cb71ab6f61bfbbc79f4fc0bcbca61183947,dbd00cb71ab6f61bfbbc79f4fc0bcbca61183947,"Merge branch 'kevingadd/JSIL/master' into markusjohnsson/JSIL/int64

Conflicts:
	JSIL/AssemblyTranslator.cs
	Libraries/JSIL.Bootstrap.js
	Tests/TestUtil.cs
	Tests/Tests.csproj
	test_runner.html"
kg,2012-11-07 04:24:04,https://api.github.com/repos/sq/JSIL/git/commits/44c5c773e8370da1f9115f44e3408a904434df65,44c5c773e8370da1f9115f44e3408a904434df65,Checkpoint
kg,2012-11-07 00:33:46,https://api.github.com/repos/sq/JSIL/git/commits/ccb0baf8939afeae5fa5ad4ce89e5d15696b2fd9,ccb0baf8939afeae5fa5ad4ce89e5d15696b2fd9,"Add support for passing multiple separators to String.Split.
Add support for String.Split's default separator list (when the separator list is null). Fixes issue #125."
kg,2012-11-06 13:58:17,https://api.github.com/repos/sq/JSIL/git/commits/4aed65991b44fdf0f681d70be71cbb1831a53ac5,4aed65991b44fdf0f681d70be71cbb1831a53ac5,Optimize IsIgnoredName slightly since it's a bottleneck
kg,2012-11-06 13:05:42,https://api.github.com/repos/sq/JSIL/git/commits/6d77212446c584da91472c160dae55785cfdd17f,6d77212446c584da91472c160dae55785cfdd17f,"No longer set lazy default properties on object prototypes that contain fields' default values. This dramatically improves startup performance.
Replace a couple uses of HasOwnPropertyRecursive with the in operator."
kg,2012-11-06 12:21:31,https://api.github.com/repos/sq/JSIL/git/commits/df6323b19fa5e3132fedd7b2ba4686b80d0e7563,df6323b19fa5e3132fedd7b2ba4686b80d0e7563,"Add a more correct solution for the 'all arrays are the same' type caching problem.
Fix self-typed struct field check being too aggressive and ignoring ALL self-typed fields. Whoops."
kg,2012-11-06 12:18:12,https://api.github.com/repos/sq/JSIL/git/commits/818a2d26a4803d3cbb7980c19288014f72f50ef7,818a2d26a4803d3cbb7980c19288014f72f50ef7,Fix typo in MakeNumericType
kg,2012-11-06 12:17:20,https://api.github.com/repos/sq/JSIL/git/commits/c5911a5cae4e6e8df9c5b2b60af49f5321db3e30,c5911a5cae4e6e8df9c5b2b60af49f5321db3e30,Fix type caching incorrectly grouping all array types together.
kg,2012-11-06 12:12:25,https://api.github.com/repos/sq/JSIL/git/commits/9382fdabe90d082cb9f216bd400c8f833ecea9d7,9382fdabe90d082cb9f216bd400c8f833ecea9d7,Use cached types for default value expressions
kg,2012-11-06 11:42:01,https://api.github.com/repos/sq/JSIL/git/commits/6c7fef5a063c536550c46a63adf6e97d992cd41e,6c7fef5a063c536550c46a63adf6e97d992cd41e,Write method signature IDs out as hex since they can get pretty long.
kg,2012-11-06 10:48:41,https://api.github.com/repos/sq/JSIL/git/commits/86f114aef47e24e8533312a21af9f0b49d17c6d8,86f114aef47e24e8533312a21af9f0b49d17c6d8,"When emitting label groups, assign each label an integer index and switch on that instead of strings so that gotos are more efficient at runtime."
kg,2012-11-06 08:07:40,https://api.github.com/repos/sq/JSIL/git/commits/23e7c74b18dffb6553d3e69e119d134f5737657b,23e7c74b18dffb6553d3e69e119d134f5737657b,Don't use eval to get typed array references in MakeNumericType since it pisses off v8
kg,2012-11-06 07:51:43,https://api.github.com/repos/sq/JSIL/git/commits/dbce0c7fe7b19ee510b1924d0c59fc76670ec849,dbce0c7fe7b19ee510b1924d0c59fc76670ec849,"Add an optional optimizer mode that wraps all integer arithmetic in ( ) | 0 to hint to JS runtimes that it's integral and overflow checks can be omitted.
Name the function returned by JSIL.Memoize."
kg,2012-11-06 07:15:15,https://api.github.com/repos/sq/JSIL/git/commits/2fcdeba1b984d6524139b2d9c77c9308d15f8724,2fcdeba1b984d6524139b2d9c77c9308d15f8724,Type-hint some integer arithmetic in XNACore.
kg,2012-11-06 07:05:58,https://api.github.com/repos/sq/JSIL/git/commits/48b78939f23016b58af38ca02d01f1aca41e5c65,48b78939f23016b58af38ca02d01f1aca41e5c65,Generate better names for the cast methods.
kg,2012-11-06 06:53:11,https://api.github.com/repos/sq/JSIL/git/commits/bd228b5abdfe36953351d9d929f652a4e212d65f,bd228b5abdfe36953351d9d929f652a4e212d65f,"No longer rely on object prototypes for field default values:
  Change struct field initializers into field initializers.
  Generate a field initializer for any type with instance fields.
  Always initialize every field in a type's field initializer, in a predictable order.
  Generate field initializer code that is friendlier to JS runtimes."
kg,2012-11-06 06:09:46,https://api.github.com/repos/sq/JSIL/git/commits/c8d88a593d6d69126d16e75a233630f4fce2989a,c8d88a593d6d69126d16e75a233630f4fce2989a,Use cached types in NewArray expressions.
kg,2012-11-06 06:00:37,https://api.github.com/repos/sq/JSIL/git/commits/32289d042b8cfdb30b1194559c601880e003ee2b,32289d042b8cfdb30b1194559c601880e003ee2b,"If a field's default value is an enum, use a function to initialize it. This prevents such fields from forcing the enum to be initialized early."
kg,2012-11-06 05:57:42,https://api.github.com/repos/sq/JSIL/git/commits/9b38e308ed32a221d23b19b332fe8a6bfdd68fb8,9b38e308ed32a221d23b19b332fe8a6bfdd68fb8,Don't wrap cached types in parens when used in cast expressions.
kg,2012-11-06 05:47:56,https://api.github.com/repos/sq/JSIL/git/commits/ecc0b4fd0e82f836cfb593be582a414e30ffabde,ecc0b4fd0e82f836cfb593be582a414e30ffabde,"Rename JSIdentifier.Type to JSIdentifier.IdentifierType to avoid conflicts with other, different-meaning members named Type.
Duplicate DictionaryInitializer test case since it's run with different parameters in different circumstances.
Enable type caching for typeof expressions."
kg,2012-11-05 19:09:05,https://api.github.com/repos/sq/JSIL/git/commits/4085087e091d1a40d24035ea49dec85117ea5ca1,4085087e091d1a40d24035ea49dec85117ea5ca1,"Use cached types for enum literals.
Omit parens around cached types where possible."
kg,2012-11-05 19:00:04,https://api.github.com/repos/sq/JSIL/git/commits/0681c599061ae8793e151440f90f0eabe6887017,0681c599061ae8793e151440f90f0eabe6887017,Use cached type expressions when binding generic methods.
kg,2012-11-05 14:43:42,https://api.github.com/repos/sq/JSIL/git/commits/71e79141b6f5bd263d634fd0da8638c327dd031e,71e79141b6f5bd263d634fd0da8638c327dd031e,Use a much simpler approach to detect whether BMP files have an alpha channel. Fixes some BMP content being converted to fully-transparent images.
kg,2012-11-05 14:18:11,https://api.github.com/repos/sq/JSIL/git/commits/3a2865daf10ba6ca63d32c3271caf6ca9f712449,3a2865daf10ba6ca63d32c3271caf6ca9f712449,"Fix XNA GraphicsDevice set_Viewport
Stub some more Matrix methods
Stub out Thread.get_CurrentCulture and Culture.get_CurrentCulture
Implement Environment.get_TickCount"
kg,2012-11-05 04:27:18,https://api.github.com/repos/sq/JSIL/git/commits/6e06a162bc0ad46cb8a3479ecdc6e734c25978bf,6e06a162bc0ad46cb8a3479ecdc6e734c25978bf,Clear the assetsLoadingNames dict since it can leak some memory after the game has loaded.
kg,2012-11-05 03:46:15,https://api.github.com/repos/sq/JSIL/git/commits/261f7a4355ff394f50ab49625ded76966677be23,261f7a4355ff394f50ab49625ded76966677be23,"Generate more compact code for type cachers.
Fix some Try JSIL breakage."
kg,2012-11-05 03:37:46,https://api.github.com/repos/sq/JSIL/git/commits/c02251abf18596ceb217c6e079cdefbacecac157,c02251abf18596ceb217c6e079cdefbacecac157,Fix ResourceManager.GetResourceSet not handling a null culture argument.
kg,2012-11-05 03:11:24,https://api.github.com/repos/sq/JSIL/git/commits/97b7cafb7956c907177637935d817c50ca234720,97b7cafb7956c907177637935d817c50ca234720,Merge branch 'master' into lazy_cctors
kg,2012-11-05 02:59:10,https://api.github.com/repos/sq/JSIL/git/commits/841d1477321c40998777f74d90a032eb82ee42db,841d1477321c40998777f74d90a032eb82ee42db,Don't emit $thisType in skeletons
kg,2012-11-05 02:36:00,https://api.github.com/repos/sq/JSIL/git/commits/b4282ae5c7f89f7785ac797ec92ea85ae676f328,b4282ae5c7f89f7785ac797ec92ea85ae676f328,"Move system.string, encodings, regexes and stringbuilder into their own bootstrap file"
kg,2012-11-05 02:27:57,https://api.github.com/repos/sq/JSIL/git/commits/f2dd134ec197e4f5e4532108cdd93601a3c66205,f2dd134ec197e4f5e4532108cdd93601a3c66205,Remove some 'not implemented' stubs from HashSet
kg,2012-11-05 02:07:44,https://api.github.com/repos/sq/JSIL/git/commits/39cebd109018a09ef14faf5d42c76d40873a5b74,39cebd109018a09ef14faf5d42c76d40873a5b74,Add basic support for casting CLR arrays to IEnumerable and IEnumerable<T>. Fixes part of issue #101.
kg,2012-11-03 06:47:00,https://api.github.com/repos/sq/JSIL/git/commits/f7807830135b9c4a73233a7e106f8d0269739d11,f7807830135b9c4a73233a7e106f8d0269739d11,Implement some missing methods of System.Math and add a test.
kg,2012-10-25 21:15:06,https://api.github.com/repos/sq/JSIL/git/commits/80371e0f040d8c11b3344f3804632e03147eb8d9,80371e0f040d8c11b3344f3804632e03147eb8d9,Make filename escaping optional
kg,2012-10-25 20:57:35,https://api.github.com/repos/sq/JSIL/git/commits/f3e91b5e26595ab2e34081b806bd748c93a58839,f3e91b5e26595ab2e34081b806bd748c93a58839,Escape characters in output file names. Fixes issue #78.
kg,2012-10-25 21:15:06,https://api.github.com/repos/sq/JSIL/git/commits/288c2766cd95f33bec2495670837f5544a9a933f,288c2766cd95f33bec2495670837f5544a9a933f,Make filename escaping optional
kg,2012-10-25 20:57:35,https://api.github.com/repos/sq/JSIL/git/commits/4f68bae32c7ce25b0239dd9189fafead080aa115,4f68bae32c7ce25b0239dd9189fafead080aa115,Escape characters in output file names. Fixes issue #78.
kg,2012-10-25 14:55:40,https://api.github.com/repos/sq/JSIL/git/commits/58fc0d011daa8f30dc86b1e988cc07bf4484d39f,58fc0d011daa8f30dc86b1e988cc07bf4484d39f,"Merge branch 'master' into lazy_cctors

Conflicts:
	Libraries/JSIL.Core.js"
kg,2012-10-25 14:50:36,https://api.github.com/repos/sq/JSIL/git/commits/9ad3de4267b72d64a9f72afb13bfa0fdb5fae59f,9ad3de4267b72d64a9f72afb13bfa0fdb5fae59f,Split parts of JSIL.Core out into separate files
kg,2012-10-25 14:28:20,https://api.github.com/repos/sq/JSIL/git/commits/a38e9e77d3d15184cf5587287c24d76d06d97a88,a38e9e77d3d15184cf5587287c24d76d06d97a88,"In automated tests, wrap unhandled JS errors with stack information so that it is easier to debug them and automatically detect them.
Load JSIL.XML in shell environment"
kg,2012-10-25 13:58:21,https://api.github.com/repos/sq/JSIL/git/commits/9ef3067fa5703439af3ea0af22af1c99f6fa2569,9ef3067fa5703439af3ea0af22af1c99f6fa2569,"Move test_runner.html and nunit tests to using JSIL.js to load libraries just like the browser harness does.
Add an 'environment' setting to jsilConfig that specifies the runtime environment to load in.
Add a new 'spidermonkey_shell' environment that supports running JSIL applications from within the command line spidermonkey shell instead of the browser.
Add some optional diagnostic input/output tracing to Evaluator
Change how GenericIgnoreTest looks for JS errors
Report error stacks if available in JSIL.Host.throwException when running in the shell"
kg,2012-10-25 02:17:03,https://api.github.com/repos/sq/JSIL/git/commits/7e3f847b136d87dadfc7cfc011f8435625b900ab,7e3f847b136d87dadfc7cfc011f8435625b900ab,I'm a moron.
kg,2012-10-25 01:46:17,https://api.github.com/repos/sq/JSIL/git/commits/5d53df8a2b4207db4053f847a9ea2e539da1938e,5d53df8a2b4207db4053f847a9ea2e539da1938e,Fix Queue and Stack's Clear methods not properly clearing the backing store.
kg,2012-10-25 01:30:22,https://api.github.com/repos/sq/JSIL/git/commits/7614fe54c933a751f14e0aee83d66e341b7a0005,7614fe54c933a751f14e0aee83d66e341b7a0005,"Fix regex MatchCollection.GetEnumerator
Add basic implementation of regex Match.Groups
Add basic implementation of regex Group"
kg,2012-10-24 18:55:40,https://api.github.com/repos/sq/JSIL/git/commits/72187a112b0bc77231d98ff66005b0ddd4052c33,72187a112b0bc77231d98ff66005b0ddd4052c33,Fix List.Sort using the wrong name to invoke IComparer`1.Compare.
kg,2012-10-24 18:40:15,https://api.github.com/repos/sq/JSIL/git/commits/9e20d9c2c40f22e2e887ca8116154a9d5687c6f0,9e20d9c2c40f22e2e887ca8116154a9d5687c6f0,"Fix ContentReader.AssetName containing forward slashes when XNA code expects backslashes.
Fix incorrect presence check for initTouchEvents."
kg,2012-10-24 17:35:49,https://api.github.com/repos/sq/JSIL/git/commits/bb48472cffb1948269d8b1e53640abdfc4d0f81e,bb48472cffb1948269d8b1e53640abdfc4d0f81e,Fix bug that caused functions with pointer-typed local variables to not get entries in the function cache.
kg,2012-10-24 17:09:57,https://api.github.com/repos/sq/JSIL/git/commits/a3dbad4d20d07be652f03ad05ea557e5f9dae288,a3dbad4d20d07be652f03ad05ea557e5f9dae288,Handle duplicate entries for files in the content build journals
kg,2012-10-20 12:17:43,https://api.github.com/repos/sq/JSIL/git/commits/22b59af59467ddde44eff6c008c4007167907ea5,22b59af59467ddde44eff6c008c4007167907ea5,Checkpoint preliminary touch input support
kg,2012-10-20 12:16:58,https://api.github.com/repos/sq/JSIL/git/commits/d4de628f7891ec20b7576afb9d349e66cd2bb9a6,d4de628f7891ec20b7576afb9d349e66cd2bb9a6,Implement Dictionary's IDictionary ctor
kg,2012-10-18 09:31:16,https://api.github.com/repos/sq/JSIL/git/commits/5c3ae8fc9dc4fa33570b975377b2310de581a061,5c3ae8fc9dc4fa33570b975377b2310de581a061,Implement get_IsContentLost for Texture2D and RenderTarget2D.
kg,2012-10-18 09:18:29,https://api.github.com/repos/sq/JSIL/git/commits/63d3465abcade45c97323f64c9f6f4afa915c7fe,63d3465abcade45c97323f64c9f6f4afa915c7fe,Fix XNA3 spritebatch setting the wrong default blend state.
kg,2012-10-18 09:31:16,https://api.github.com/repos/sq/JSIL/git/commits/f27e6757b6869d6d9a08fd6d5ea2b1ca904dafe2,f27e6757b6869d6d9a08fd6d5ea2b1ca904dafe2,Implement get_IsContentLost for Texture2D and RenderTarget2D.
kg,2012-10-18 09:28:19,https://api.github.com/repos/sq/JSIL/git/commits/e9e980e4e37f7c3248524e7dd6f9e52963b8eeb2,e9e980e4e37f7c3248524e7dd6f9e52963b8eeb2,"Allow public types defined by JSIL.Core to be replaced so that unqualified references (i.e. ""System.String"") still work."
kg,2012-10-18 09:18:29,https://api.github.com/repos/sq/JSIL/git/commits/23e04588f4c9187d16849ebc3209313ce6b60c33,23e04588f4c9187d16849ebc3209313ce6b60c33,Fix XNA3 spritebatch setting the wrong default blend state.
kg,2012-10-18 08:56:49,https://api.github.com/repos/sq/JSIL/git/commits/2915fe2167925c1417aa215eb7280ddd5d2c72d7,2915fe2167925c1417aa215eb7280ddd5d2c72d7,"Slightly more reliable FullName implementation (calling toString on types was causing initialization cycles)
Give GenericParameters a __FullName__ property."
kg,2012-10-18 08:44:07,https://api.github.com/repos/sq/JSIL/git/commits/6796f4f1c9338b89527703c3442aa4c94e27d83c,6796f4f1c9338b89527703c3442aa4c94e27d83c,Fix the FullName/AssemblyQualifiedName tests in Type.cs without changing the behavior of __FullName__. This kinda sucks.
kg,2012-10-18 08:27:18,https://api.github.com/repos/sq/JSIL/git/commits/315958b630b8ccc6ce64149a8eafe4edfc4a4b3e,315958b630b8ccc6ce64149a8eafe4edfc4a4b3e,"Implement cached types as functions that evaluate the type expression on first call and return it thereafter. This eliminates the need for TypeCacher methods and removes cycles. Modern JS VMs should optimize the functions out.
Remove the FullNameUnqualified logic because it breaks things."
kg,2012-10-18 07:54:42,https://api.github.com/repos/sq/JSIL/git/commits/222ae9b18c1aa4e5044c6bf9a64fc1c7902251c6,222ae9b18c1aa4e5044c6bf9a64fc1c7902251c6,"Merge branch 'master' into lazy_cctors

Conflicts:
	Libraries/System.Windows.js"
kg,2012-10-17 08:41:14,https://api.github.com/repos/sq/JSIL/git/commits/a17d07d83e5755419b63fef16c4c56ccc16cc27a,a17d07d83e5755419b63fef16c4c56ccc16cc27a,Fix null reference bug introduced by verbatim static analyzer fix
kg,2012-10-17 08:37:09,https://api.github.com/repos/sq/JSIL/git/commits/6acde7b3063592594bd713749d6a1a5ff7bd2c60,6acde7b3063592594bd713749d6a1a5ff7bd2c60,"Fix static analyzer not recognizing arguments to verbatim expressions as potentially being modified/potentially escaping, and add a test."
kg,2012-10-17 08:14:35,https://api.github.com/repos/sq/JSIL/git/commits/c59163508c84f65bf62db2a56d63c679d3e52d36,c59163508c84f65bf62db2a56d63c679d3e52d36,"Fix a stupid bug in the proxy for new Color(int r, int g, int b)"
kg,2012-10-17 07:57:11,https://api.github.com/repos/sq/JSIL/git/commits/b6249008d7c836b69f060de074bc3ed30062377c,b6249008d7c836b69f060de074bc3ed30062377c,"Fix bug that caused an attempt to output method signatures for ignored methods.
Add a workaround for assemblies that reference multiple versions of the BCL so that they don't attempt to translate a BCL library multiple times."
kg,2012-10-17 07:43:34,https://api.github.com/repos/sq/JSIL/git/commits/72e1aeccf9ccaae6366f10dc5b28b30ef346f489,72e1aeccf9ccaae6366f10dc5b28b30ef346f489,"Overhaul the logic for de-mangling field names.
Add a hack to LabelGroupBuilder so that it doesn't stop collecting statements when it hits a switch exit label.
Fix the switch statement hoisting logic not inserting a jump to the exit label after the switch statement."
kg,2012-10-17 06:55:41,https://api.github.com/repos/sq/JSIL/git/commits/5796744b2aba0a8424c3aaf9cefd6bbbf4855cfc,5796744b2aba0a8424c3aaf9cefd6bbbf4855cfc,"If a switch case contains a label, hoist the body of the case outside the switch statement so that gotos can target it safely.
When adding an unlabelled block statement to another block statement, fold its statements into the parent block.
Change DeoptimizeSwitchStatements to do recursive replacement in the parent function instead of walking a set number of steps up the stack."
kg,2012-10-17 05:20:15,https://api.github.com/repos/sq/JSIL/git/commits/c96e97dc42846e707a8140b8c9edce3ce51d12a9,c96e97dc42846e707a8140b8c9edce3ce51d12a9,"When translating an IL switch statement, wrap it in a block statement to enable some additional code generation changes
Add a test case overing a quirk in the way Mono generates code for enumerator functions"
kg,2012-10-17 02:50:30,https://api.github.com/repos/sq/JSIL/git/commits/d822eb94d2dfd9718495519100e2f4cfcaf05801,d822eb94d2dfd9718495519100e2f4cfcaf05801,Improve some error feedback.
kg,2012-10-16 02:33:53,https://api.github.com/repos/sq/JSIL/git/commits/b08bbbffa7822d83a5352ad1904f44d7160e14f0,b08bbbffa7822d83a5352ad1904f44d7160e14f0,"Fix part of LinqExpressionSimple, and disable it since it's not completely passing"
kg,2012-10-05 06:28:07,https://api.github.com/repos/sq/JSIL/git/commits/3dfb137216da9f915680343ad09e1b4f60002b98,3dfb137216da9f915680343ad09e1b4f60002b98,Add a rough stub for MediaPlayer.Stop
markusjohnsson,2012-09-30 10:07:35,https://api.github.com/repos/sq/JSIL/git/commits/29037d423971007c915104d1bfa6c97041c92f49,29037d423971007c915104d1bfa6c97041c92f49,"Merge branch 'master' of github.com:/kevingadd/JSIL into int64

Conflicts:
	Tests/Tests.csproj"
markusjohnsson,2012-09-30 10:02:00,https://api.github.com/repos/sq/JSIL/git/commits/dc99888966a22d31902fdde85f10015f5a67ab8b,dc99888966a22d31902fdde85f10015f5a67ab8b,Making Int64 work when stubbed mscorlib is present
markusjohnsson,2012-09-29 10:13:11,https://api.github.com/repos/sq/JSIL/git/commits/8e99f057b8c170b540e0c16f35558cc9933c43bb,8e99f057b8c170b540e0c16f35558cc9933c43bb,"Added test Int64Type. Call MakeStruct for Int64, otherwise tests will
fail."
markusjohnsson,2012-09-29 10:07:38,https://api.github.com/repos/sq/JSIL/git/commits/08f483860009fa38aef108832208d4b9c434ad15,08f483860009fa38aef108832208d4b9c434ad15,Use ImplementExternals instead of creating types for Int64.
markusjohnsson,2012-09-29 10:07:23,https://api.github.com/repos/sq/JSIL/git/commits/00c3944c5307db8e9233e6d0162892105db1db47,00c3944c5307db8e9233e6d0162892105db1db47,Improved Int64 tests.
kg,2012-09-29 01:12:30,https://api.github.com/repos/sq/JSIL/git/commits/ead2d07c81231fba45ad7ad2a248c5fa9389911f,ead2d07c81231fba45ad7ad2a248c5fa9389911f,"Do assembly loading for embedded resource conversion in an appdomain, to work around a .NET limitation where the same assembly file can't be loaded twice"
kg,2012-09-29 00:45:25,https://api.github.com/repos/sq/JSIL/git/commits/7a4ac26df33a6676341b7626e2ecf5630cdb2ecc,7a4ac26df33a6676341b7626e2ecf5630cdb2ecc,Fix bug in matching of xnb asset names
kg,2012-09-20 04:08:59,https://api.github.com/repos/sq/JSIL/git/commits/b8e1ca260d84dc0451c9b1ec28ea0c7a27b10234,b8e1ca260d84dc0451c9b1ec28ea0c7a27b10234,Add test cases for a weird jsil.try bug
markusjohnsson,2012-09-19 20:12:47,https://api.github.com/repos/sq/JSIL/git/commits/ba3ab946df9dfd3cc4151332dba9d39d2d1a633b,ba3ab946df9dfd3cc4151332dba9d39d2d1a633b,Started adding type tests for int64.
markusjohnsson,2012-09-19 19:37:15,https://api.github.com/repos/sq/JSIL/git/commits/15da723bdb87d85b7f1b139957a0c46ce5a78c9d,15da723bdb87d85b7f1b139957a0c46ce5a78c9d,Change build action for Int64Nullable.cs
markusjohnsson,2012-09-19 18:59:58,https://api.github.com/repos/sq/JSIL/git/commits/46fe91ab1c2428929aa2fd795282f82664d2329e,46fe91ab1c2428929aa2fd795282f82664d2329e,"Merge remote-tracking branch 'kevin/master' into int64

Conflicts:
	JSIL/JSIL.csproj
	Tests/Tests.csproj"
markusjohnsson,2012-09-19 18:48:36,https://api.github.com/repos/sq/JSIL/git/commits/23d7a1dda612b5ecf1b2f7161ce0ab706858fe94,23d7a1dda612b5ecf1b2f7161ce0ab706858fe94,Added Int64Nullable
kg,2012-09-16 18:34:05,https://api.github.com/repos/sq/JSIL/git/commits/62b3ea5f317d165f8edb7316028d22e3d1410f38,62b3ea5f317d165f8edb7316028d22e3d1410f38,Stub out some more Windows Forms APIs
kg,2012-09-07 15:01:26,https://api.github.com/repos/sq/JSIL/git/commits/e8be5dd58c9c465f366976789682a21271d8a0a6,e8be5dd58c9c465f366976789682a21271d8a0a6,"Add escapegoat to landing page for JSIL
Force-redirect :8080 requests to the Try service back to :80 where they belong"
kg,2012-09-07 10:01:41,https://api.github.com/repos/sq/JSIL/git/commits/fbed5d957e8d018c0bb96f28506dcd4959ed9ce0,fbed5d957e8d018c0bb96f28506dcd4959ed9ce0,Fix issue #121 and add a test.
kg,2012-09-07 03:07:53,https://api.github.com/repos/sq/JSIL/git/commits/183f818ca9985aa934ec142a7f7534a759ee2d95,183f818ca9985aa934ec142a7f7534a759ee2d95,Fix gamepad.js defining mozGamepads in all firefox builds
kg,2012-09-06 12:33:49,https://api.github.com/repos/sq/JSIL/git/commits/0ee7cbab4dd868e50ddb999bc0dce5e3abee2eb6,0ee7cbab4dd868e50ddb999bc0dce5e3abee2eb6,Replace the overloaded Color constructors with static functions so that they don't have to go through MethodSignature.Construct.
kg,2012-09-06 12:22:21,https://api.github.com/repos/sq/JSIL/git/commits/12fd9b56df7e2d42a8abfd720386a5d9953a0436,12fd9b56df7e2d42a8abfd720386a5d9953a0436,"Tweak JSReplacement behavior for constructors so that it is usable on struct constructors, and update the comments"
kg,2012-09-06 12:09:18,https://api.github.com/repos/sq/JSIL/git/commits/a604a1c15f1bb7c1fe2bd4d791c1f0f93d6bf6bd,a604a1c15f1bb7c1fe2bd4d791c1f0f93d6bf6bd,"Implement JSReplacement for constructors
Add support for using '$$' in a JSReplacement literal to emit a raw dollar sign"
kg,2012-09-06 10:08:49,https://api.github.com/repos/sq/JSIL/git/commits/f8f524a50072419bc76d3e33d75f605ad7ec78bc,f8f524a50072419bc76d3e33d75f605ad7ec78bc,"Fix CORS image workaround being used when blobs aren't available
Fix some minor issues with resource file support"
kg,2012-09-06 08:59:58,https://api.github.com/repos/sq/JSIL/git/commits/e16e1825cd9914c995e8cf0e51d7413597aa5d93,e16e1825cd9914c995e8cf0e51d7413597aa5d93,"Move resource related bootstrap code into JSIL.Bootstrap.Resources
Add basic support for localized resource sets"
kg,2012-09-06 08:46:04,https://api.github.com/repos/sq/JSIL/git/commits/238ad44506324b39348918ebc10ab329a7eb5157,238ad44506324b39348918ebc10ab329a7eb5157,"Convert resources from satellite resource assemblies along with resources from output assemblies
Escape strings in resource files according to JSON escaping rules instead of JS escaping rules"
kg,2012-09-06 05:58:59,https://api.github.com/repos/sq/JSIL/git/commits/b8f7d5099953c25cba73a5f7090f914854588997,b8f7d5099953c25cba73a5f7090f914854588997,Detect and work around broken blob/typedarray behavior in FF14
kg,2012-09-06 03:40:09,https://api.github.com/repos/sq/JSIL/git/commits/27e781ed181fd93e5728bdb054e36364fc652214,27e781ed181fd93e5728bdb054e36364fc652214,Allow blocking gamepad input (like keyboard input) so you can handle it in your page
kg,2012-09-06 03:07:20,https://api.github.com/repos/sq/JSIL/git/commits/dd1480073c9b369f82a9d89681e9be3da4e640ad,dd1480073c9b369f82a9d89681e9be3da4e640ad,Fix copy-paste error
kg,2012-09-06 03:03:06,https://api.github.com/repos/sq/JSIL/git/commits/c54a7f377077dbaee37cba1cd74a94d75a579806,c54a7f377077dbaee37cba1cd74a94d75a579806,"Add basic support for left/right stick dead zones.
Enable GamePad in Lumberjack demo."
kg,2012-09-06 02:57:58,https://api.github.com/repos/sq/JSIL/git/commits/77341ae8cb78b4a60a1be3739c721c3100c5a6f9,77341ae8cb78b4a60a1be3739c721c3100c5a6f9,"Gamepad support fixes
Enable gamepads in platformer and RPG"
kg,2012-09-06 02:23:00,https://api.github.com/repos/sq/JSIL/git/commits/974f5f1eaacb6639e407b732c694a6ab71065128,974f5f1eaacb6639e407b732c694a6ab71065128,Fix button accessors
kg,2012-09-06 02:14:58,https://api.github.com/repos/sq/JSIL/git/commits/a849f4889fe1efaad5d3811bcd127dbc82f0c0f5,a849f4889fe1efaad5d3811bcd127dbc82f0c0f5,Add preliminary gamepad support based on gamepad.js
kg,2012-09-05 05:58:04,https://api.github.com/repos/sq/JSIL/git/commits/0bb15f49e2ca6c7b44ef9573d3563476976f5b34,0bb15f49e2ca6c7b44ef9573d3563476976f5b34,Fix a bug in the new audio CORS stuff.
kg,2012-09-05 05:38:28,https://api.github.com/repos/sq/JSIL/git/commits/4c593b121b242a3c00685c7e9cd0578dcc70e85f,4c593b121b242a3c00685c7e9cd0578dcc70e85f,Use a workaround to do CORS image loads in IE10 by combining CORS XHR + Object URLs.
kg,2012-09-05 04:49:24,https://api.github.com/repos/sq/JSIL/git/commits/dd7061730762623ce577da4b6aa9431e184c0a50,dd7061730762623ce577da4b6aa9431e184c0a50,Fail asset loads that require CORS and don't have it
kg,2012-09-03 08:49:01,https://api.github.com/repos/sq/JSIL/git/commits/d6ee7a0818ed3d6a38b923920c3ea17d21ea270e,d6ee7a0818ed3d6a38b923920c3ea17d21ea270e,Add test from issue #120.
kg,2012-09-02 23:57:18,https://api.github.com/repos/sq/JSIL/git/commits/505c3deab4f2fe2b2ff0389754c0208f75c1ea53,505c3deab4f2fe2b2ff0389754c0208f75c1ea53,Compensate for broken AudioContext implementation in Firefox 18
kg,2012-09-01 09:10:43,https://api.github.com/repos/sq/JSIL/git/commits/6fa4940cd47caf70289e4feaca978d887494de02,6fa4940cd47caf70289e4feaca978d887494de02,"Generate unique temporary variables for comma expressions that need them, so that the type information is correct and they don't pollute global scope."
kg,2012-08-31 11:06:17,https://api.github.com/repos/sq/JSIL/git/commits/7a66a941a11f3805fecf3d2de23e31fe52161492,7a66a941a11f3805fecf3d2de23e31fe52161492,Don't runMain() if loading failed.
kg,2012-08-31 11:03:55,https://api.github.com/repos/sq/JSIL/git/commits/780cc19cfd0a1b485ec4b489576eae23b0ea7e97,780cc19cfd0a1b485ec4b489576eae23b0ea7e97,"Improve handling of errors during the loading stage.
Add jsilConfig.onLoadFailure and jsilConfig.onLoadFailed to allow responding to failures during the loading stage."
kg,2012-08-31 09:45:51,https://api.github.com/repos/sq/JSIL/git/commits/ac7119df5ad5d391c3eb48e7ee5f428cd8eb87c2,ac7119df5ad5d391c3eb48e7ee5f428cd8eb87c2,Fix page visibility check implementation.
kg,2012-08-31 09:31:26,https://api.github.com/repos/sq/JSIL/git/commits/08005cec6a50a63af55681c675e2878ce6ddb2f4,08005cec6a50a63af55681c675e2878ce6ddb2f4,"Do clear-then-fill in source-over mode for the XNA Clear method, because using a single fill in 'copy' mode is extremely expensive in Firefox."
kg,2012-08-31 05:06:18,https://api.github.com/repos/sq/JSIL/git/commits/d74ddfcfc88f893deaaddd660a4548f899817daa,d74ddfcfc88f893deaaddd660a4548f899817daa,"Make Game.IsActive return false if the page visibility API is available and says the page is invisible.
Allow adding a custom FPS reporter in jsilConfig."
kg,2012-08-31 02:14:07,https://api.github.com/repos/sq/JSIL/git/commits/e8aeddb79c0c236df88ad68586bc2b475992efd9,e8aeddb79c0c236df88ad68586bc2b475992efd9,"Optimize in-place property mutations like 'x.Prop += y' into comma expressions so that the getters/setters can be invoked directly.
Adjust the performance thresholds for red/yellow."
kg,2012-08-29 04:57:39,https://api.github.com/repos/sq/JSIL/git/commits/08c4efbec0e0639faf2ad5bf6c4ac82bcb614ddb,08c4efbec0e0639faf2ad5bf6c4ac82bcb614ddb,Fix broken isPlaying in webkit audio backend
kg,2012-08-28 20:37:01,https://api.github.com/repos/sq/JSIL/git/commits/92cdc4d51c486d8cfac18b085a3ae59417736dbc,92cdc4d51c486d8cfac18b085a3ae59417736dbc,Fix keys remaining in the pressed state if focus is lost between keydown/keyup.
kg,2012-08-28 09:39:09,https://api.github.com/repos/sq/JSIL/git/commits/3f97359f14f2948206ba62962f5b38ae8914c443,3f97359f14f2948206ba62962f5b38ae8914c443,Remove some log spew.
kg,2012-08-28 06:27:35,https://api.github.com/repos/sq/JSIL/git/commits/a4d3fc61fa312fd11bd329f9f7243db69ef2af95,a4d3fc61fa312fd11bd329f9f7243db69ef2af95,"Fix mutation assignment (+=, -=, etc) operators for enums"
kg,2012-08-27 23:00:46,https://api.github.com/repos/sq/JSIL/git/commits/325c6cfaa20aaab182265b5cc93da28b1d20d705,325c6cfaa20aaab182265b5cc93da28b1d20d705,Detect errors when loading scripts.
kg,2012-08-27 23:00:39,https://api.github.com/repos/sq/JSIL/git/commits/f1fd529f41730ac97b409b7c3a02e6602eb02b1c,f1fd529f41730ac97b409b7c3a02e6602eb02b1c,Make command line settings always override settings provided in configuration files loaded from disk.
kg,2012-08-27 19:06:21,https://api.github.com/repos/sq/JSIL/git/commits/e50c238e3da47d354de25b1b055a344ab51e8cb4,e50c238e3da47d354de25b1b055a344ab51e8cb4,Loading tweaks
kg,2012-08-27 10:21:42,https://api.github.com/repos/sq/JSIL/git/commits/96f5a5d83a8aad24a1d3bc15acbb756f430a0532,96f5a5d83a8aad24a1d3bc15acbb756f430a0532,Detect broken CORS image implementation and warn about it.
kg,2012-08-27 08:34:44,https://api.github.com/repos/sq/JSIL/git/commits/02c8cab54756a6b540e2c2813772772835360e81,02c8cab54756a6b540e2c2813772772835360e81,Stub a few methods.
kg,2012-08-27 07:54:14,https://api.github.com/repos/sq/JSIL/git/commits/af13852e095efdccd69289200c438135598d0783,af13852e095efdccd69289200c438135598d0783,"Add support for custom progress indicators.
Fix CORS/XHR code for IE9/IE10."
kg,2012-08-26 23:59:30,https://api.github.com/repos/sq/JSIL/git/commits/e7908a04af1eb875d1ae46ba2a7891bd7939858d,e7908a04af1eb875d1ae46ba2a7891bd7939858d,Various bug fixes.
kg,2012-08-26 23:40:57,https://api.github.com/repos/sq/JSIL/git/commits/034a4fc9bb32c6fd9f1c88c93d2bd46a335d63f5,034a4fc9bb32c6fd9f1c88c93d2bd46a335d63f5,"Overhaul parts of the asset loading infrastructure:
  Audio loading will fall back on a null audio asset if a load fails.
  Attempt to manually buffer up audio assets using object URLs instead of relying on the browser to do it right. (This compensates for broken progress events in virtually every Audio implementation except Firefox's).
  Don't create audio elements until the first time a play is attempted. (This compensates for an invisible limit on the number of audio elements in IE.)
Tweak the way input events are handled."
kg,2012-08-26 10:33:15,https://api.github.com/repos/sq/JSIL/git/commits/d0398e1e5f72d27287c6d32567215b5918b7a2dd,d0398e1e5f72d27287c6d32567215b5918b7a2dd,CORS friendliness and browser coping tweaks.
kg,2012-08-26 10:19:51,https://api.github.com/repos/sq/JSIL/git/commits/16539290014715a707e530d5b0d399fcba91d78b,16539290014715a707e530d5b0d399fcba91d78b,Handle errors thrown by XHR.open.
kg,2012-08-26 02:17:58,https://api.github.com/repos/sq/JSIL/git/commits/89a1c5b923e4c183ab32442fe38c7fe078458022,89a1c5b923e4c183ab32442fe38c7fe078458022,"When copying raw XNB files, decompress them if they are compressed, so that games can be built in Release instead of Debug."
kg,2012-08-25 09:11:06,https://api.github.com/repos/sq/JSIL/git/commits/e9988f4482a78a3956329c3e6032908b2d870474,e9988f4482a78a3956329c3e6032908b2d870474,Support running with no log element.
kg,2012-08-25 08:28:35,https://api.github.com/repos/sq/JSIL/git/commits/e4f971a1f9aeeed40b8535a8cb94a9d668c077ee,e4f971a1f9aeeed40b8535a8cb94a9d668c077ee,Fix incorrect ClientBounds and Bounds properties when the canvas has been resized
kg,2012-08-25 08:10:01,https://api.github.com/repos/sq/JSIL/git/commits/a7bf99674006ac7348425d62c34715205030b5aa,a7bf99674006ac7348425d62c34715205030b5aa,Fix mouse coordinates being scaled wrong after a resolution change.
kg,2012-08-25 08:06:58,https://api.github.com/repos/sq/JSIL/git/commits/78b35afd92a5788c6083888a87b65444d8f10bb0,78b35afd92a5788c6083888a87b65444d8f10bb0,"Make it easier to replace the stock JSIL browser HTML with your own.
Attempt to support on-demand resolution changes by resizing the canvas.
Implement IsMouseVisible."
kg,2012-08-24 18:53:37,https://api.github.com/repos/sq/JSIL/git/commits/30bf35e18ab0d57ee0131b27f5cff9c42b4bee80,30bf35e18ab0d57ee0131b27f5cff9c42b4bee80,Add a SolutionBuilder setting named 'ExtraOutputs' that lets you add static files to the output list from a solution (so they inherit its configuration and get built with its outputs)
kg,2012-08-24 06:31:56,https://api.github.com/repos/sq/JSIL/git/commits/7b84c050364e5fb76d37dbbea43e6816fe65cb05,7b84c050364e5fb76d37dbbea43e6816fe65cb05,Fix double-escaping of interface member names.
kg,2012-08-24 06:29:10,https://api.github.com/repos/sq/JSIL/git/commits/2465bc0722477726de6ce95b08d80229907b708d,2465bc0722477726de6ce95b08d80229907b708d,"Don't choke on parameters named @this.
Handle an edge case in SubstituteTypeArgs.
Stub FSharp.Core by default."
kg,2012-08-24 06:07:14,https://api.github.com/repos/sq/JSIL/git/commits/3eafff3f04990791251ca7b56d1d3690fcf187d4,3eafff3f04990791251ca7b56d1d3690fcf187d4,Fix some issues translating F# applications and using them as test cases.
kg,2012-08-24 05:47:35,https://api.github.com/repos/sq/JSIL/git/commits/476571c17dde29e9c34a675b9f079bd3ed122222,476571c17dde29e9c34a675b9f079bd3ed122222,Handle test cases that don't have a Program.Main but do have an entry point.
kg,2012-08-24 04:02:09,https://api.github.com/repos/sq/JSIL/git/commits/daacf4ed730969e73e05292e5979ee646961f6ba,daacf4ed730969e73e05292e5979ee646961f6ba,Update Mono.Cecil projects to remove unsupported configurations. May help with issue #50.
kg,2012-08-23 01:40:25,https://api.github.com/repos/sq/JSIL/git/commits/98e41a8c1fee9368815a3942f72514b43bd605b1,98e41a8c1fee9368815a3942f72514b43bd605b1,Implement more BitConverter methods.
kg,2012-08-23 01:27:50,https://api.github.com/repos/sq/JSIL/git/commits/4f1ebe9f236af7822aa9c9ae1771ce464330c9ae,4f1ebe9f236af7822aa9c9ae1771ce464330c9ae,"Add support for placing [JSNeverReplace] methods on a proxy type to act as stand-ins for methods of the proxied type (like you can with fields).
Add in (probably broken) GetBytes implementations for unsigned integers."
kg,2012-08-23 00:38:50,https://api.github.com/repos/sq/JSIL/git/commits/9d36d693fa0c9b79a4b7c3bc8e9870cfa733760b,9d36d693fa0c9b79a4b7c3bc8e9870cfa733760b,Implement some methods of BitConverter
kg,2012-08-22 22:51:20,https://api.github.com/repos/sq/JSIL/git/commits/45c336fde1faa39bb3a5febfaa69eb91d96d6c1c,45c336fde1faa39bb3a5febfaa69eb91d96d6c1c,Implement System.Convert.ToBase64String and FromBase64String.
kg,2012-08-22 22:10:08,https://api.github.com/repos/sq/JSIL/git/commits/aa0d21f1d80c42bc33fc99497d1f1a1823a168fb,aa0d21f1d80c42bc33fc99497d1f1a1823a168fb,Fix some edge cases in the property access optimizer that would cause it to generate method calls on the LHS of an assignment.
kg,2012-08-22 00:36:36,https://api.github.com/repos/sq/JSIL/git/commits/7bda2d4167930b019b9dde21f4c52b86151001f3,7bda2d4167930b019b9dde21f4c52b86151001f3,"Fix JSNewArrayExpression not implementing ReplaceChild correctly, and add a test."
kg,2012-08-21 18:30:36,https://api.github.com/repos/sq/JSIL/git/commits/efc34ca4d865264de4f7da819996c2a21a25713b,efc34ca4d865264de4f7da819996c2a21a25713b,Merge branch 'master' of github.com:kevingadd/JSIL
kg,2012-08-20 17:41:10,https://api.github.com/repos/sq/JSIL/git/commits/92703630f5c1135d027a9316636898a23eaf4178,92703630f5c1135d027a9316636898a23eaf4178,Reduce WinForms error spew.
kg,2012-08-20 19:54:08,https://api.github.com/repos/sq/JSIL/git/commits/7e3c240cd3223331b0b37331d864c38046d11957,7e3c240cd3223331b0b37331d864c38046d11957,"Merge pull request #116 from danielcrenna/master

Embarassingly little patch for helping spelunking with the compiler"
danielcrenna,2012-08-20 19:49:04,https://api.github.com/repos/sq/JSIL/git/commits/7908fd06ffccdc972cd22ff01098f9d62ef14f63,7908fd06ffccdc972cd22ff01098f9d62ef14f63,"Small change to allow blocking on the output window when debugging, but leave well enough alone in production; this is helpful for examining outputs without having to continuously cut a command window or step-through"
kg,2012-08-20 17:41:10,https://api.github.com/repos/sq/JSIL/git/commits/c84f07a11ab09d51f08e2006a975b36d7df811b2,c84f07a11ab09d51f08e2006a975b36d7df811b2,Reduce WinForms error spew.
kg,2012-08-20 17:41:02,https://api.github.com/repos/sq/JSIL/git/commits/156d46525167375895bb14872d33a3a8bd30cce1,156d46525167375895bb14872d33a3a8bd30cce1,Initialization order fixes.
kg,2012-08-20 16:39:41,https://api.github.com/repos/sq/JSIL/git/commits/1d95843cfc50f8debe79668c24a38af161478269,1d95843cfc50f8debe79668c24a38af161478269,"Merge branch 'master' into lazy_cctors

Conflicts:
	Libraries/JSIL.Core.js"
kg,2012-08-20 16:35:27,https://api.github.com/repos/sq/JSIL/git/commits/c8711b157db9411fcf723e01ea4c49c60a0697e0,c8711b157db9411fcf723e01ea4c49c60a0697e0,Split some SpriteBatch_InternalDraw behavior out into functions
kg,2012-08-20 13:03:54,https://api.github.com/repos/sq/JSIL/git/commits/38946ff144d31b58c76136f4b9211cd0cfe705d5,38946ff144d31b58c76136f4b9211cd0cfe705d5,"Simplify spritebatch draw implementation by making heavier use of the canvas transform stack.
Fix bug in implementation of SpriteEffects that caused misaligned rendering."
kg,2012-08-20 11:59:41,https://api.github.com/repos/sq/JSIL/git/commits/669f9f23b919510da11f14ba7f665fad776b72d1,669f9f23b919510da11f14ba7f665fad776b72d1,"Find ffmpeg, oggenc and lame relative to the JSIL location
Handle building solutions on windows 8"
kg,2012-08-20 11:32:12,https://api.github.com/repos/sq/JSIL/git/commits/2af4e2dbbcbcde1eee43aec0012986f74b805bd6,2af4e2dbbcbcde1eee43aec0012986f74b805bd6,List out all the configuration files that contributed to a build's configuration in the jsillog file.
kg,2012-08-20 11:27:02,https://api.github.com/repos/sq/JSIL/git/commits/b1b40cb08d4fd248e0c86219d942b96fe472ae1d,b1b40cb08d4fd248e0c86219d942b96fe472ae1d,Fix the skeletons config
kg,2012-08-20 11:23:41,https://api.github.com/repos/sq/JSIL/git/commits/6902242a843408c71afb3a41c7ca6a024d58ab0b,6902242a843408c71afb3a41c7ca6a024d58ab0b,"Handle being run from different working directories.
Add a %JSILDirectory% variable."
kg,2012-08-19 22:31:30,https://api.github.com/repos/sq/JSIL/git/commits/f43ce2c0987e4190f5ac8a1955ec087e313a6240,f43ce2c0987e4190f5ac8a1955ec087e313a6240,Use a child process to run MSBuild because it leaks file handles. :|
kg,2012-08-19 18:10:57,https://api.github.com/repos/sq/JSIL/git/commits/1cd9ef2ce1ae46c7a32c5789133d40cb1961ade4,1cd9ef2ce1ae46c7a32c5789133d40cb1961ade4,Implement set_LineSpacing
kg,2012-08-18 10:39:02,https://api.github.com/repos/sq/JSIL/git/commits/9a97a1a14506a299fe3727b0822dec7bf2a72e57,9a97a1a14506a299fe3727b0822dec7bf2a72e57,"Stub out File. CreateText and AppendText
Stub out String.CopyTo and String.Join
Default-init jsilConfig.contentRoot
Fix bug in getImageTopLeftPixel"
kg,2012-08-18 10:20:50,https://api.github.com/repos/sq/JSIL/git/commits/5ad89db4b58ba0f5d073229aa9dfd6ab091c379c,5ad89db4b58ba0f5d073229aa9dfd6ab091c379c,"Handle assetsToLoad not being defined.
Default-init jsilConfig root members."
kg,2012-08-18 10:16:50,https://api.github.com/repos/sq/JSIL/git/commits/ce27d3ce99233eb9645cbdeea5997f501a37cafd,ce27d3ce99233eb9645cbdeea5997f501a37cafd,"Move the four roots (contentRoot, fileRoot, scriptRoot, libraryRoot) into the jsilConfig object."
kg,2012-08-18 09:56:09,https://api.github.com/repos/sq/JSIL/git/commits/a98e6c147dff53c884db7423cf250aeffc9d2a83,a98e6c147dff53c884db7423cf250aeffc9d2a83,Fix paths
kg,2012-08-18 09:23:38,https://api.github.com/repos/sq/JSIL/git/commits/f9d3cb3534e94a163bd41d8314232bc95c884cb5,f9d3cb3534e94a163bd41d8314232bc95c884cb5,Update the demo HTML files to match the new location of content manifests.
kg,2012-08-18 09:19:52,https://api.github.com/repos/sq/JSIL/git/commits/beb6a7d6a2523318d21e762382c202c5644afb43,beb6a7d6a2523318d21e762382c202c5644afb43,Fix ContentLoadExceptions not having messages.
kg,2012-08-18 09:14:21,https://api.github.com/repos/sq/JSIL/git/commits/b5898d1102979e80ffcf35dccbcc806277c0f48e,b5898d1102979e80ffcf35dccbcc806277c0f48e,"NOTE: This will break any configuration files from JSIL 0.5 or earlier!
NOTE: The output location for content manifests has changed!
Overhaul how variable expansion works for paths in JSIL configuration:
  The complete set of expansion variables is contained in a single VariableSet that is used for all variable expansion.
  Failed variable expansion will produce an exception along with a list of currently valid variables.
  Attempt to propagate variable expansion changes the same way nested configuration changes are propagated (so variables either always expand to what they should in a particular context, or fail)
  Configurations can now include a 'CustomVariables' dictionary that defines custom string variables.
  Variable expansions now work for file settings.
Content manifests now get written to the content output directory instead of the assembly output directory."
kg,2012-08-18 08:01:51,https://api.github.com/repos/sq/JSIL/git/commits/37af1351b421709246b65d0c99525bd41c846abd,37af1351b421709246b65d0c99525bd41c846abd,"Improve error feedback for missing references.
Fix various path handling issues in ProcessContentProjects.
Add '%solutionpath%' variable for use in ContentOutputDirectory.
Change the default configuration so that XNA content will be built by default."
kg,2012-08-18 07:27:15,https://api.github.com/repos/sq/JSIL/git/commits/43dc3f98335ad7bc865b65998fcd527275157bd3,43dc3f98335ad7bc865b65998fcd527275157bd3,"When a file copy fails during content project processing, retry a few times (after a GC and a short delay) in the hopes that the file will become unlocked. This may deal with some possible MSBuild file handle leaks, and antivirus issues."
kg,2012-08-18 06:07:19,https://api.github.com/repos/sq/JSIL/git/commits/0d677713d3c0395edde8b38636263a439fec6cd1,0d677713d3c0395edde8b38636263a439fec6cd1,Exclude demo content from the repo since it keeps making it bigger.
kg,2012-08-18 06:05:17,https://api.github.com/repos/sq/JSIL/git/commits/87f0df45eeb0ff128c78e4219be51c1b06615e5a,87f0df45eeb0ff128c78e4219be51c1b06615e5a,"If a file copy fails while processing content, spit out a warning and continue after a pause."
kg,2012-08-18 05:51:57,https://api.github.com/repos/sq/JSIL/git/commits/8aa23a65733c0d7f0fb2e53707a83ab73896a70d,8aa23a65733c0d7f0fb2e53707a83ab73896a70d,Fix typo.
kg,2012-08-18 05:51:04,https://api.github.com/repos/sq/JSIL/git/commits/bdc7d19de9d9d2f8594cf09a23f86f2d9af30c8f,bdc7d19de9d9d2f8594cf09a23f86f2d9af30c8f,Add readmes in the upstream folders.
kg,2012-08-18 05:47:16,https://api.github.com/repos/sq/JSIL/git/commits/0be6ec134f4600326e989a51e4fe17ea6506d86c,0be6ec134f4600326e989a51e4fe17ea6506d86c,"Fix a crash when both oggenc and lame are missing.
Produce better warnings when upstream executables are missing."
kg,2012-08-18 05:31:08,https://api.github.com/repos/sq/JSIL/git/commits/c379793c63e2769fe0088b323b58eec5c2b06b2d,c379793c63e2769fe0088b323b58eec5c2b06b2d,"When skipping content processing, generate a warning."
kg,2012-08-18 05:17:06,https://api.github.com/repos/sq/JSIL/git/commits/4f0a8b75bd1d44d7fd0f8d98073df141cd5418a4,4f0a8b75bd1d44d7fd0f8d98073df141cd5418a4,Resolve %assemblypath% when writing out the build log.
kg,2012-08-18 04:47:18,https://api.github.com/repos/sq/JSIL/git/commits/166fd4895236f631b9a320600527e6eadc9fd054,166fd4895236f631b9a320600527e6eadc9fd054,"Apply defaults.jsilconfig in ParseCommandLine instead of Main so that the solution builder stage has a default output directory. Fixes potential crash if you build a solution with no config file.
Handle relative paths to solution files."
kg,2012-08-17 13:55:15,https://api.github.com/repos/sq/JSIL/git/commits/f02d04d72df0ed107b5f8da95ada73eaff9df625,f02d04d72df0ed107b5f8da95ada73eaff9df625,Improve error feedback when a file is added to a translation result multiple times.
kg,2012-08-16 10:09:50,https://api.github.com/repos/sq/JSIL/git/commits/2137bacd9a5f26e88ae0f2ac5ae0bc3ed3ad25c6,2137bacd9a5f26e88ae0f2ac5ae0bc3ed3ad25c6,Trigger an image cache eviction check every second to prevent cache contents from leaking indefinitely when text/images are used infrequently.
kg,2012-08-16 09:31:01,https://api.github.com/repos/sq/JSIL/git/commits/087ede27e91476fa97640090feca5b1458bcd6d2,087ede27e91476fa97640090feca5b1458bcd6d2,"Make TypeIdentifier and MemberIdentifier structs.
Do deferred signature set updates grouped by type in the hopes that it will be slightly friendlier to the cache."
kg,2012-08-16 09:03:57,https://api.github.com/repos/sq/JSIL/git/commits/f29b547316975536c29ae4f0da04a9796187fd5b,f29b547316975536c29ae4f0da04a9796187fd5b,"Make JSILc attempt to reuse type info providers between different compiled assemblies if possible.
Minor refactorings in AssemblyTranslator."
kg,2012-08-16 08:40:47,https://api.github.com/repos/sq/JSIL/git/commits/81244f5576313ce3403093b47f1844cf4d3a698f,81244f5576313ce3403093b47f1844cf4d3a698f,"Fix JSILc not disposing its AssemblyTranslator instances.
Address some unnecessary garbage creation.
Adjust the default size of method signature collections based on gathered statistics."
kg,2012-08-16 08:11:26,https://api.github.com/repos/sq/JSIL/git/commits/2434ea16cb748fb0dd996c62de31eb00515009c8,2434ea16cb748fb0dd996c62de31eb00515009c8,Overhaul ConcurrentCache so that it's possible to reuse a single delegate instance as a creator function instead of having to create new instances for every call.
kg,2012-08-16 07:19:26,https://api.github.com/repos/sq/JSIL/git/commits/4560c8046c6658fa32fd2196bbb460e8b0d82726,4560c8046c6658fa32fd2196bbb460e8b0d82726,"Additional performance improvements for method signature sets
Fix some inconsistencies in how named method signature names were selected"
kg,2012-08-16 06:50:02,https://api.github.com/repos/sq/JSIL/git/commits/d1d2900966a96ba0711cf02a3362cd7e25ba18d2,d1d2900966a96ba0711cf02a3362cd7e25ba18d2,Performance improvements.
kg,2012-08-15 10:58:49,https://api.github.com/repos/sq/JSIL/git/commits/5c5cb91a5eb2c4fc11bf9a91b8e19db3d95352fe,5c5cb91a5eb2c4fc11bf9a91b8e19db3d95352fe,Disable bug checks in Try for now until Mono's bug is fixed.
kg,2012-08-15 10:14:23,https://api.github.com/repos/sq/JSIL/git/commits/206c132d1489395f44e2e6dfb3fbd52108c6d1ba,206c132d1489395f44e2e6dfb3fbd52108c6d1ba,Fix a bug in SetLazyDefaultProperty and SetLazyValueProperty where it was possible for them to trample changes that occurred to a property between the property being lazily evaluated and the property being cleaned up. (merge from lazy_cctors)
kg,2012-08-15 10:12:39,https://api.github.com/repos/sq/JSIL/git/commits/fb5a8607dd5f51c8dabe66b6ef8b80267338f6f0,fb5a8607dd5f51c8dabe66b6ef8b80267338f6f0,Use lazy value properties for types to eliminate the overhead of calling the getter function every time after a type is initialized.
kg,2012-08-15 09:59:35,https://api.github.com/repos/sq/JSIL/git/commits/1a24925ddea13622963f3ee78f9bc54ed5e86930,1a24925ddea13622963f3ee78f9bc54ed5e86930,"Merge branch 'experimental_typesystem' of github.com:xen2/JSIL into experimental_typesystem

Conflicts:
	Tests/Tests.csproj"
kg,2012-08-15 09:58:00,https://api.github.com/repos/sq/JSIL/git/commits/5448d1a032647b47c4a993914618d8efee0723a8,5448d1a032647b47c4a993914618d8efee0723a8,.
kg,2012-08-15 09:31:52,https://api.github.com/repos/sq/JSIL/git/commits/17f4480a997163ccdffe20a11a39843a0e6bb4d4,17f4480a997163ccdffe20a11a39843a0e6bb4d4,"Checkpoint:
Suffix generic methods with '$b<n>' again like the old days, because it's the only way to properly disambiguate. Sigh :("
kg,2012-08-15 08:37:14,https://api.github.com/repos/sq/JSIL/git/commits/ac0b443e7eb103a776c8e8f6bb386c7b6d3daf47,ac0b443e7eb103a776c8e8f6bb386c7b6d3daf47,"Checkpoint:
Fix broken dispatcher for methods overloaded by argument type."
kg,2012-08-15 08:29:33,https://api.github.com/repos/sq/JSIL/git/commits/d383a85d093832196c9b38ff253aac274de0e460,d383a85d093832196c9b38ff253aac274de0e460,"Checkpoint:
Add a test for issue #114.
Overhaul the way method groups are constructed so it's less fragile and easier to understand."
xen2,2012-08-15 08:27:39,https://api.github.com/repos/sq/JSIL/git/commits/53275c5f80042249d3ba05dc148680a7a9070379,53275c5f80042249d3ba05dc148680a7a9070379,Added System.Environment.CurrentManagedThreadId property (used by .NET 4.5 compiler for yield enumerables).
xen2,2012-08-14 18:06:31,https://api.github.com/repos/sq/JSIL/git/commits/d82345460e89e1f0c2ed8e52e097cb55960ffa00,d82345460e89e1f0c2ed8e52e097cb55960ffa00,JSIL.ResolveGenericTypeReference now supports array.
xen2,2012-08-14 11:09:17,https://api.github.com/repos/sq/JSIL/git/commits/9b3b04b6fb630093b0175780ea012ccd700035b8,9b3b04b6fb630093b0175780ea012ccd700035b8,"Improved ""is"" operator to work with generic types."
xen2,2012-08-14 09:09:32,https://api.github.com/repos/sq/JSIL/git/commits/7d9e8deeb8d1317b44882dba2d46ab27a0255bae,7d9e8deeb8d1317b44882dba2d46ab27a0255bae,Fixed various Type properties/functions and added tests.
xen2,2012-08-12 06:39:02,https://api.github.com/repos/sq/JSIL/git/commits/ef8b1b6e80739512b5ad99decd6e0f36368a4ecb,ef8b1b6e80739512b5ad99decd6e0f36368a4ecb,Added JSProxyMemberPolicy.ReplaceAll. Reordered enum so that it matches default values (when querying attribute through Mono.Cecil).
xen2,2012-08-15 05:11:46,https://api.github.com/repos/sq/JSIL/git/commits/2d9ff21e3353a54b790d59a6a5781d801e02ded9,2d9ff21e3353a54b790d59a6a5781d801e02ded9,"Add BinaryReader.Read(byte[] buffer, int index, int count)."
xen2,2012-07-03 16:17:52,https://api.github.com/repos/sq/JSIL/git/commits/e3d7602672f77ae765e40270e5309aa419c99a3b,e3d7602672f77ae765e40270e5309aa419c99a3b,Add System.IO.File.Open.
xen2,2012-08-03 18:42:38,https://api.github.com/repos/sq/JSIL/git/commits/e1d1bb50442d1804fe64a3afabe8aeb95b366d27,e1d1bb50442d1804fe64a3afabe8aeb95b366d27,Add Assembly.op_Equality.
xen2,2012-08-03 18:43:01,https://api.github.com/repos/sq/JSIL/git/commits/3801adf59ad64f0a1a939ea9e3bab253102cc506,3801adf59ad64f0a1a939ea9e3bab253102cc506,Fix Type.GetGenericArguments().
markusjohnsson,2012-08-14 20:22:05,https://api.github.com/repos/sq/JSIL/git/commits/dc6e5c98a6e368b6ec9ae8355934bdef10a32841,dc6e5c98a6e368b6ec9ae8355934bdef10a32841,Added special cast impl for int64 along with CheckType.
markusjohnsson,2012-08-14 19:47:21,https://api.github.com/repos/sq/JSIL/git/commits/d556649438b63badd137226c3b6eeec16c45d63e,d556649438b63badd137226c3b6eeec16c45d63e,Added (failing) test for nullable Int64.
markusjohnsson,2012-08-14 18:55:27,https://api.github.com/repos/sq/JSIL/git/commits/633b6f39432909501d4749f0cc10e327a0c51b6d,633b6f39432909501d4749f0cc10e327a0c51b6d,Fixed issue converting between Int64 and UInt64
kg,2012-08-14 08:15:19,https://api.github.com/repos/sq/JSIL/git/commits/8754570515aef126c34fd3f0680cfac5891fca5c,8754570515aef126c34fd3f0680cfac5891fca5c,"Checkpoint:
If a property is constructed from membrane methods, ensure that the property is reconstructed after the membrane is removed.
When constructing a delegate from a membrane, immediately unwrap the membrane and construct the delegate from the actual method instead.
Adjust the semantics of runLater."
kg,2012-08-14 07:32:11,https://api.github.com/repos/sq/JSIL/git/commits/1844026aebf92d69f9f1df0e3bb16c25f5435419,1844026aebf92d69f9f1df0e3bb16c25f5435419,"Checkpoint:
Fix conflicts between lazy property cleanup and membrane cleanup."
kg,2012-08-14 07:07:26,https://api.github.com/repos/sq/JSIL/git/commits/6267d485fc37e7b61024eae0aa4800128049441d,6267d485fc37e7b61024eae0aa4800128049441d,"Checkpoint:
Split membrane construction out from method group construction.
Fix some cases where static constructors weren't being run."
kg,2012-08-14 06:43:31,https://api.github.com/repos/sq/JSIL/git/commits/b4aa8b4088fa8fddb7d6e32b8b5d26df385b03de,b4aa8b4088fa8fddb7d6e32b8b5d26df385b03de,"Checkpoint:
Fix for static constructors running on types that weren't initialized yet. Whoops.
Make field initializers write static members to the original type and instance members to the fully derived type."
kg,2012-08-14 06:18:24,https://api.github.com/repos/sq/JSIL/git/commits/7eaaa35bc43e2d0466575d4f3a8e76b4565b6759,7eaaa35bc43e2d0466575d4f3a8e76b4565b6759,Checkpoint: Remove the membrane setting since the old approach doesn't work anymore :(
kg,2012-08-14 06:07:30,https://api.github.com/repos/sq/JSIL/git/commits/8cb6b5047f2a8281dcd21d1f832673509278634d,8cb6b5047f2a8281dcd21d1f832673509278634d,"Checkpoint:
Make the membrane used for static constructors more efficient by having a single reusable object manage all the method and field membranes for a given object.
When a membrane causes an object's static constructors to run, remove all membranes from that object at once."
kg,2012-08-14 05:55:37,https://api.github.com/repos/sq/JSIL/git/commits/f99a1a2880a104be1e5b1fa797d0ba0f4deddff3,f99a1a2880a104be1e5b1fa797d0ba0f4deddff3,"Checkpoint:
Walk up the type chain and run field initializers for all base types when initializing fields for a type. This is necessary because open generic types get a new prototype when they become closed, so their initializers potentially need to run once for each distinct derived type."
kg,2012-08-14 05:39:53,https://api.github.com/repos/sq/JSIL/git/commits/f6a267d3c736e278b631ece95547d92f4b125451,f6a267d3c736e278b631ece95547d92f4b125451,"Checkpoint:
Apply membranes to mangled versions of methods instead of to their method groups. This ensures that static constructors are triggered by slow overload dispatch."
kg,2012-08-14 05:25:22,https://api.github.com/repos/sq/JSIL/git/commits/5e53b9020dbcc71282ae13155fc8e716be976315,5e53b9020dbcc71282ae13155fc8e716be976315,"Checkpoint:
Fix static constructors not being invoked in some cases due to an erroneous IsClosed check."
kg,2012-08-14 05:19:52,https://api.github.com/repos/sq/JSIL/git/commits/9e24cde937b99b3d59ca444dce15f78b745dccb8,9e24cde937b99b3d59ca444dce15f78b745dccb8,"Checkpoint:
Fix various problems with field initializers running on the wrong target objects
Ensure that when running static constructors for a type, the base type's static constructors have run first."
kg,2012-08-14 05:01:39,https://api.github.com/repos/sq/JSIL/git/commits/d70e1d5e2f16c23cb36a8f11001abd2b1509cda0,d70e1d5e2f16c23cb36a8f11001abd2b1509cda0,"Checkpoint:
Static fields are now an accessor property that runs the type's cctors and converts the accessor property into a value property."
kg,2012-08-14 04:53:45,https://api.github.com/repos/sq/JSIL/git/commits/25c9340dfcf293f574584a26fb8f08c29a899d9f,25c9340dfcf293f574584a26fb8f08c29a899d9f,"Checkpoint:
Invoke static constructors the first time a member of a type is used (instead of when the type is first referenced)."
kg,2012-08-14 04:25:29,https://api.github.com/repos/sq/JSIL/git/commits/4257687b25de01e899c2862aca6a0982fe201fc8,4257687b25de01e899c2862aca6a0982fe201fc8,Add automated tests for some tricky cases that type caching needs to handle
kg,2012-08-14 02:47:55,https://api.github.com/repos/sq/JSIL/git/commits/62592676d25f3acf286ae0d5e4af7f29092d3f70,62592676d25f3acf286ae0d5e4af7f29092d3f70,Update to latest ILSpy.
kg,2012-08-13 17:31:53,https://api.github.com/repos/sq/JSIL/git/commits/7ba08ba14f612959bd3d024ba6a96b2d75152da7,7ba08ba14f612959bd3d024ba6a96b2d75152da7,Tweak AST emitter so it produces less unnecessary gotos inside of label groups (hopefully without breaking anything).
kg,2012-08-13 17:03:32,https://api.github.com/repos/sq/JSIL/git/commits/f743f197275ee5785c977f70d255151558302477,f743f197275ee5785c977f70d255151558302477,Prune empty labels from label groups if they are never targeted by a goto.
kg,2012-08-13 16:56:44,https://api.github.com/repos/sq/JSIL/git/commits/c3b21e8d9a81897bd19ddb6a76488d405d654763,c3b21e8d9a81897bd19ddb6a76488d405d654763,Improve on the entry/exit block construction algorithm so that the exit block stops being filled when another labelled statement is encountered.
kg,2012-08-13 16:42:22,https://api.github.com/repos/sq/JSIL/git/commits/7599e3cbd87b77fc0ba048d4af7fdb413b3246f4,7599e3cbd87b77fc0ba048d4af7fdb413b3246f4,"When constructing label groups, create both an entry label and an exit label, so that statements from after the labelled block(s) are always run upon a normal exit."
kg,2012-08-13 16:23:14,https://api.github.com/repos/sq/JSIL/git/commits/1d15ce03f9ba312df2f7ef5ab739fcbb6c372c8b,1d15ce03f9ba312df2f7ef5ab739fcbb6c372c8b,"Add a test case for issue #113.
Checkpoint improvements to goto handling and label group construction."
kg,2012-08-13 07:17:43,https://api.github.com/repos/sq/JSIL/git/commits/a35db0dd2210bbae545df7891b44d803b837e0a8,a35db0dd2210bbae545df7891b44d803b837e0a8,Better way of handling ReferenceEquals on structs.
kg,2012-08-13 05:05:00,https://api.github.com/repos/sq/JSIL/git/commits/dc4ddd5482e0b9ba3d5b5556ed84b95d2c1c0ab7,dc4ddd5482e0b9ba3d5b5556ed84b95d2c1c0ab7,Fix struct arguments passed to Object.ReferenceEquals not being boxed.
kg,2012-08-13 04:48:34,https://api.github.com/repos/sq/JSIL/git/commits/10d180c8caf86bd745f102ed4b3bb376d5f594ba,10d180c8caf86bd745f102ed4b3bb376d5f594ba,"Fix ++x, --x, x++ and x-- when x is an enum.
Add an AST node type for comma expressions.
Add a test case covering a weird inlining breakage that was around for a bit when property optimizations were busted."
kg,2012-08-11 16:07:41,https://api.github.com/repos/sq/JSIL/git/commits/69083a33814902cd93e6743b39341a1f17f9b924,69083a33814902cd93e6743b39341a1f17f9b924,Fix multiple-assignment with properties being broken by invocations being generated.
kg,2012-08-11 15:27:02,https://api.github.com/repos/sq/JSIL/git/commits/9cc98cfc3a236b05e848e9b2816d33e9ab8d7645,9cc98cfc3a236b05e848e9b2816d33e9ab8d7645,Fix enumerator instances not being optimized out in functions that contain multiple foreach loops over sequences of the same type.
kg,2012-08-11 14:44:03,https://api.github.com/repos/sq/JSIL/git/commits/528e63f819841cfdeb803fe807efb6ad663a1a41,528e63f819841cfdeb803fe807efb6ad663a1a41,Fix errors when a null filename is passed to filesystem/storage APIs
kg,2012-08-11 13:44:13,https://api.github.com/repos/sq/JSIL/git/commits/50e1c3e5578e854d6ba1abd5d0907152fc02b516,50e1c3e5578e854d6ba1abd5d0907152fc02b516,"Add InterfaceBuilder.ExternalProperty so that external properties always generate a 'method not implemented' warning instead of returning undefined sometimes.
Pass the type of the property to InterfaceBuilder.Property and ExternalProperty."
kg,2012-08-11 02:55:57,https://api.github.com/repos/sq/JSIL/git/commits/81684451a39c45c4f09d862cc5b37ba6dba46d2e,81684451a39c45c4f09d862cc5b37ba6dba46d2e,"If an access to an auto property can be converted into a field access, don't turn it into an invocation.
Split some logic out into functions
Fix a bug when streams are closed twice
Update some tests to be compatible with property invocations"
kg,2012-08-10 23:54:20,https://api.github.com/repos/sq/JSIL/git/commits/bfd73711dbf34e1e428324423b6520476936cd66,bfd73711dbf34e1e428324423b6520476936cd66,"Make Array.Clone return a typed array if the source array was a typed array.
Make storage API and streams handle file bytes more efficiently.
Make VirtualFile.writeAllBytes take ownership of the passed-in byte array.
Generate the JSON for local storage file saves manually, since JSON.stringify doesn't work for typed arrays."
kg,2012-08-10 23:33:12,https://api.github.com/repos/sq/JSIL/git/commits/2c4f9d1ea9160634583dbe6ff3db5ccd4be01835,2c4f9d1ea9160634583dbe6ff3db5ccd4be01835,Give an object's copy constructor the same name as the object itself so they are grouped together in Chrome's heap profiles
kg,2012-08-10 23:19:40,https://api.github.com/repos/sq/JSIL/git/commits/35b5e13e1acee03fe3ca2df683261e6fe7e0fc12,35b5e13e1acee03fe3ca2df683261e6fe7e0fc12,"Fix property accesses on the RHS of an assignment not being transformed into invocations.
Minor XNA stub fixes to be compatible with property invocation optimization."
kg,2012-08-10 23:04:33,https://api.github.com/repos/sq/JSIL/git/commits/0fe867c66f01c00e238a49ae85be3ffcec203c64,0fe867c66f01c00e238a49ae85be3ffcec203c64,Handle static properties correctly in access -> invocation transform.
kg,2012-08-10 23:04:15,https://api.github.com/repos/sq/JSIL/git/commits/0e49b624949ce08888dd52abbd0b462990c807b6,0e49b624949ce08888dd52abbd0b462990c807b6,"Properly implement externals for each XNA Color constant's get_ method.
Stub out Assembly.get_Location in addition to Location."
kg,2012-08-10 22:31:25,https://api.github.com/repos/sq/JSIL/git/commits/0dac6f2dc80605ae128b9617889d78d79e3e8d0a,0dac6f2dc80605ae128b9617889d78d79e3e8d0a,"Fix property access -> invocation conversion generating static invocations for property accesses that were virtual.
Detect in-place mutation of properties more accurately so that post/pre-increments of properties still work."
kg,2012-08-10 22:10:23,https://api.github.com/repos/sq/JSIL/git/commits/01b81ec7ca32bce78ead93d3dc5a797b7a34a78c,01b81ec7ca32bce78ead93d3dc5a797b7a34a78c,Handle base property invocations correctly when converting property accesses to invocations.
kg,2012-08-10 22:00:40,https://api.github.com/repos/sq/JSIL/git/commits/bf1f8ecb7168baf5313cf13b8fefeed87336e950,bf1f8ecb7168baf5313cf13b8fefeed87336e950,"Add an optimizer setting that causes property accesses to be converted back to method calls when possible, since property accesses are slow in V8 and SpiderMonkey.
Add an attribute that allows you to force accesses to a property to always remain as property accesses instead of being converted to method calls."
kg,2012-08-10 10:39:51,https://api.github.com/repos/sq/JSIL/git/commits/b20f73e9c3e57edb7fdbf37c332fcb8125398e3f,b20f73e9c3e57edb7fdbf37c332fcb8125398e3f,"Improve performance of overloaded method dispatch by removing the use of Function.apply.
Implement Graphics.Viewport.get_Bounds.
Track total memory being used by 2D render targets.
Use 'new Function' instead of eval to construct named functions, so that they show up in Chrome's web inspector again."
kg,2012-08-09 13:40:08,https://api.github.com/repos/sq/JSIL/git/commits/c53db249bcda971e057043e2ffba8acb5b089477,c53db249bcda971e057043e2ffba8acb5b089477,"Fix a bug in MemberwiseCloner generation.
Implement GraphicsDevice.GetRenderTargets.
More precise transform semantics for SpriteBatch."
kg,2012-08-09 13:00:25,https://api.github.com/repos/sq/JSIL/git/commits/21652d09e91e970c34ac221d428f8ec313b5653d,21652d09e91e970c34ac221d428f8ec313b5653d,Replace use of Function.bind and Object.create in MemberwiseClone implementations with a custom constructor function.
kg,2012-08-09 00:54:02,https://api.github.com/repos/sq/JSIL/git/commits/705913c683ac619070573ce82d691ff5964e3a3e,705913c683ac619070573ce82d691ff5964e3a3e,"Handle casts, as and is in the type expression cacher.
Disable the type expression cacher for now because it forms reference cycles."
kg,2012-08-08 23:37:18,https://api.github.com/repos/sq/JSIL/git/commits/be0b71712f1a87233b396756028ae152c2746c03,be0b71712f1a87233b396756028ae152c2746c03,Fix crash due to type expression caching processing methods it shouldn't.
kg,2012-08-08 23:24:20,https://api.github.com/repos/sq/JSIL/git/commits/fc54534dc928c5c847008fa2753dcc02aa0fa9fe,fc54534dc928c5c847008fa2753dcc02aa0fa9fe,"Disable type expression caching specifically for formatting and metadata tests because it makes it harder to write them and I am lazy and a terrible person.
Fix some straggling metadata tests that were broken by the $thisType codegen improvement.
I think ReplaceNonExternalClass has been totally busted for a while. Whoops."
kg,2012-08-08 22:18:15,https://api.github.com/repos/sq/JSIL/git/commits/e6b653f548e4f2976c542136966d98742c47cd65,e6b653f548e4f2976c542136966d98742c47cd65,"Declare a '$thisType' local inside of each type's initializer that maps to the type's public interface, and use it instead of fully-qualified references to the type. Makes generated code more compact and makes tests easier to write.
Make each cached type a variable local to the closure that is initialized before static constructors run (addresses cycle issues while preserving cached-type-specific type information for JITs)"
kg,2012-08-08 22:16:37,https://api.github.com/repos/sq/JSIL/git/commits/0fce01f6c8473095f8b4d15e2fa9996e380a1476,0fce01f6c8473095f8b4d15e2fa9996e380a1476,"Basic mannux smoke test works.
Fix nulls in JSIL.ObjectEquals."
kg,2012-08-06 08:25:29,https://api.github.com/repos/sq/JSIL/git/commits/8f7800dc09cd77188f4119cd6f5e372b246a8093,8f7800dc09cd77188f4119cd6f5e372b246a8093,"Cache types inside a special class instead of in variables, so that they can be lazily evaluated. Fixes various cycle issues.
Still don't cache references to your own type (since $.publicInterface is just fine)"
kg,2012-08-06 07:53:32,https://api.github.com/repos/sq/JSIL/git/commits/98e54415c8f1d299dbc00bd688b65661ee738a84,98e54415c8f1d299dbc00bd688b65661ee738a84,"Provide a stub for the Dictionary enumerator type so references to it work in tests
Don't cache JSTypeReference nodes
When generating code for a nested type, do not cache references to its enclosing types
Fix the function generated for field default values to use a unique name for its argument ($pi) instead of redefining $."
kg,2012-08-06 07:35:05,https://api.github.com/repos/sq/JSIL/git/commits/a8c24c6062d378a80707b2b1812fec7d8c6b29a6,a8c24c6062d378a80707b2b1812fec7d8c6b29a6,Don't synchronously decode audio in Chrome. The Web Audio API is a goddamn mess.
kg,2012-08-06 07:15:16,https://api.github.com/repos/sq/JSIL/git/commits/ce6625b281a5684e91fdca78281e0dfd4c87f1e6,ce6625b281a5684e91fdca78281e0dfd4c87f1e6,Don't cache typeof expressions since cached types are public interfaces.
kg,2012-08-06 07:12:15,https://api.github.com/repos/sq/JSIL/git/commits/d7f48dc1c52e0e018390b561d5e938b3896fb34d,d7f48dc1c52e0e018390b561d5e938b3896fb34d,Checkpoint support for caching type expressions in variables local to each type's definition
kg,2012-08-06 07:11:58,https://api.github.com/repos/sq/JSIL/git/commits/90d29afb7fb46fe50d5074b86a8e966d1166a77d,90d29afb7fb46fe50d5074b86a8e966d1166a77d,Disable smoke tests
kg,2012-08-03 01:13:07,https://api.github.com/repos/sq/JSIL/git/commits/abb91596011487bea49760339094f231725eaa89,abb91596011487bea49760339094f231725eaa89,Checkpoint work on preliminary automated smoke tests based on Selenium + Sauce Labs OnDemand
markusjohnsson,2012-08-01 21:46:23,https://api.github.com/repos/sq/JSIL/git/commits/9aa59d468f62f5e568b2146f29ac1511b884f6f1,9aa59d468f62f5e568b2146f29ac1511b884f6f1,Prepare to move GetLongLiteralExpression to JSAstEmitter.
markusjohnsson,2012-08-01 21:29:38,https://api.github.com/repos/sq/JSIL/git/commits/5604e27705385c5602abcc3906895569ba8362dd,5604e27705385c5602abcc3906895569ba8362dd,Removed long.js
markusjohnsson,2012-08-01 21:25:48,https://api.github.com/repos/sq/JSIL/git/commits/6161af3e101f631265bc6828a653699757e82d4e,6161af3e101f631265bc6828a653699757e82d4e,Added test for ulong ref parameters
markusjohnsson,2012-08-01 21:17:35,https://api.github.com/repos/sq/JSIL/git/commits/98a342350833540c573bbbe17ac9510dcf6e1279,98a342350833540c573bbbe17ac9510dcf6e1279,Added Bitwise & Equality tests
markusjohnsson,2012-08-01 20:53:12,https://api.github.com/repos/sq/JSIL/git/commits/a25e3fd1b29369e8a461f856a08aa27564bd9939,a25e3fd1b29369e8a461f856a08aa27564bd9939,Some EmulateInt64 cleanup
markusjohnsson,2012-08-01 20:42:43,https://api.github.com/repos/sq/JSIL/git/commits/f2b0499673e67aaddd61023f0f332213aafae3e5,f2b0499673e67aaddd61023f0f332213aafae3e5,Initial work on emitting ulong operators
markusjohnsson,2012-08-01 18:23:03,https://api.github.com/repos/sq/JSIL/git/commits/23b490fb8367b9030f223921ccd58dff75d9d15e,23b490fb8367b9030f223921ccd58dff75d9d15e,Added simple test for long to int conversion
markusjohnsson,2012-08-01 17:35:05,https://api.github.com/repos/sq/JSIL/git/commits/7a07602a055775198ee61535fd8eb721f0c2c389,7a07602a055775198ee61535fd8eb721f0c2c389,Allow negative numbers in long.Parse
markusjohnsson,2012-08-01 17:24:42,https://api.github.com/repos/sq/JSIL/git/commits/3f9a49a654b093f682fae76f8fab58515bd85cbe,3f9a49a654b093f682fae76f8fab58515bd85cbe,Initial work on long.Parse
markusjohnsson,2012-08-01 08:13:06,https://api.github.com/repos/sq/JSIL/git/commits/df7d48add824d1288e523166de4e042b6dbcf81f,df7d48add824d1288e523166de4e042b6dbcf81f,"Merge branch 'master' of github.com:/kevingadd/JSIL into int64

Conflicts:
	Tests/Tests.csproj"
kg,2012-07-31 23:28:44,https://api.github.com/repos/sq/JSIL/git/commits/0fb36c5da20bbedb92276bfe155a8ae2c17bcdad,0fb36c5da20bbedb92276bfe155a8ae2c17bcdad,"Match name qualification rules for interface members in JSIL to the runtime name qualification in the JS libraries. Fixes issue #112.
Change line break handling in XNACore to be slightly more tolerant of weird line breaks."
markusjohnsson,2012-07-31 17:51:01,https://api.github.com/repos/sq/JSIL/git/commits/e384fa62d96530e002d877d76647b266d8c34ae8,e384fa62d96530e002d877d76647b266d8c34ae8,"Split the Int64 test into smaller units.
Fixed op_RightShift. Removed conversion by force for binary operators in EmulateInt64"
markusjohnsson,2012-07-31 04:50:51,https://api.github.com/repos/sq/JSIL/git/commits/da24d5f4058be03aa3789d177e1ffc698052fccb,da24d5f4058be03aa3789d177e1ffc698052fccb,Added modulus operator to Int64
markusjohnsson,2012-07-30 21:45:08,https://api.github.com/repos/sq/JSIL/git/commits/771370fe8c870b3febd47b62934055b124ecf975,771370fe8c870b3febd47b62934055b124ecf975,"Started to use custom int64 implementation instead of goog.math.Long.
Some functionality still missing."
markusjohnsson,2012-07-30 20:28:21,https://api.github.com/repos/sq/JSIL/git/commits/8e3ed5107170e34172e3a0e1adabf6a366286c32,8e3ed5107170e34172e3a0e1adabf6a366286c32,Updated Int64 tests to new test pattern.
markusjohnsson,2012-07-30 19:05:08,https://api.github.com/repos/sq/JSIL/git/commits/b689dbf9d475314c73c417d870052686fb8f07e1,b689dbf9d475314c73c417d870052686fb8f07e1,"Merge branch 'master' of github.com:/kevingadd/JSIL into int64

Conflicts:
	JSIL/Transforms/ExpandCastExpressions.cs"
kg,2012-07-23 03:19:17,https://api.github.com/repos/sq/JSIL/git/commits/1c0f57e418113d8f5e074fa53f54df6e1add6233,1c0f57e418113d8f5e074fa53f54df6e1add6233,Do recursive escape analysis.
kg,2012-07-22 23:47:59,https://api.github.com/repos/sq/JSIL/git/commits/a7cb0a20870f2b4244565f175746cde034fdc733,a7cb0a20870f2b4244565f175746cde034fdc733,"Add support for runtime/library bug checks that are run automatically by JSIL before translating assemblies.
Add a configuration option for suppressing bug checks to enable running JSIL on an unsupported platform."
kg,2012-07-21 01:31:11,https://api.github.com/repos/sq/JSIL/git/commits/55af949fd899bbf985bba8bf693cbccdb5ae3f01,55af949fd899bbf985bba8bf693cbccdb5ae3f01,"Mono compatibility fixes.
Make it slightly easier to debug compile/translation failures."
kg,2012-07-19 07:08:51,https://api.github.com/repos/sq/JSIL/git/commits/1f6a26f302f4591d99c6e500038a89f6ecb89806,1f6a26f302f4591d99c6e500038a89f6ecb89806,Move BaseAutoProperties out of FailingTestCases because... I think I fixed it? Huh.
kg,2012-07-18 18:13:31,https://api.github.com/repos/sq/JSIL/git/commits/4656167faf9bdd516c902dae7dfbaf1801bafb48,4656167faf9bdd516c902dae7dfbaf1801bafb48,A couple more minor perf tweaks
kg,2012-07-18 17:08:36,https://api.github.com/repos/sq/JSIL/git/commits/61ab9b453218bd83f19bb39e72d4127713e65d75,61ab9b453218bd83f19bb39e72d4127713e65d75,"Stop setting .toString, .debugName and .displayName on functions because it deoptimizes them in V8. Augh.
Minor performance tweaks to SpriteBatch (faster sorter, slightly faster spriteeffects enum checks)"
kg,2012-07-18 05:43:35,https://api.github.com/repos/sq/JSIL/git/commits/212408c7dcc677b3a66b32a85bd269276266b5e1,212408c7dcc677b3a66b32a85bd269276266b5e1,"For non-virtual auto properties, generate a direct access to the backing field instead of an access to the property, since V8 and Spidermonkey are both really poor at optimizing simple property accessors."
kg,2012-07-18 03:18:06,https://api.github.com/repos/sq/JSIL/git/commits/d685f5b430601507a61fb16f079ee9b60f7a2c4b,d685f5b430601507a61fb16f079ee9b60f7a2c4b,Fix Bootstrap's version of KeyValuePair having no fields. Fixes issue #110.
kg,2012-07-18 02:45:26,https://api.github.com/repos/sq/JSIL/git/commits/3b35f42291570281e9d2932e3bcde83db6b6ae60,3b35f42291570281e9d2932e3bcde83db6b6ae60,Handle null format strings for integers. Fixes issue #109.
kg,2012-07-18 00:52:22,https://api.github.com/repos/sq/JSIL/git/commits/7778ced785def926a5cb00f23bc2bb33111ba448,7778ced785def926a5cb00f23bc2bb33111ba448,Cope better with performance variability by reducing the number of frames the framerate balancer will attempt to make up
kg,2012-07-17 23:29:17,https://api.github.com/repos/sq/JSIL/git/commits/1d53e42a1d21de5b421e5fb1d4e5270f247ca112,1d53e42a1d21de5b421e5fb1d4e5270f247ca112,Introduce a more complex array enumerator optimization that entirely removes the call to .GetEnumerator
kg,2012-07-17 22:56:26,https://api.github.com/repos/sq/JSIL/git/commits/510fa463a1dafcbea9701a960249ff6470ccc61c,510fa463a1dafcbea9701a960249ff6470ccc61c,Add a test for the array enumerator optimization
kg,2012-07-17 22:05:28,https://api.github.com/repos/sq/JSIL/git/commits/8b4a130d3f0a65851eedba35d7e2dcde37e10e67,8b4a130d3f0a65851eedba35d7e2dcde37e10e67,"Revert ""Checkpoint: Move to running update logic outside of requestAnimationFrame callbacks, because Google Chrome's framerate regulator goes nuts if a callback takes too long.""

This reverts commit 231a98dbaf4ab19aa09fd5505ca1afcc7904fc64."
kg,2012-07-17 22:04:24,https://api.github.com/repos/sq/JSIL/git/commits/231a98dbaf4ab19aa09fd5505ca1afcc7904fc64,231a98dbaf4ab19aa09fd5505ca1afcc7904fc64,"Checkpoint: Move to running update logic outside of requestAnimationFrame callbacks, because Google Chrome's framerate regulator goes nuts if a callback takes too long."
kg,2012-07-17 21:03:37,https://api.github.com/repos/sq/JSIL/git/commits/e14c25fa79fbb917b0196dd2f4d04cd22974d3d4,e14c25fa79fbb917b0196dd2f4d04cd22974d3d4,Minor XNA stub tweaks
kg,2012-07-17 19:58:57,https://api.github.com/repos/sq/JSIL/git/commits/7736f6579b5357a816c536e7b4994a0ed3696f28,7736f6579b5357a816c536e7b4994a0ed3696f28,"When binding .Of to a type, generate a unique named function so individual types' specializations show up in the Chrome profiler.
Name some GraphicsDevice functions.
Better formatting for CreateNamedFunction.
Slight performance improvement to GetEnumerator for collection types."
kg,2012-07-17 19:28:49,https://api.github.com/repos/sq/JSIL/git/commits/e3975cd7f04f9e88d5a87d8e0ca44103993d3507,e3975cd7f04f9e88d5a87d8e0ca44103993d3507,Fix a test.
kg,2012-07-17 19:26:49,https://api.github.com/repos/sq/JSIL/git/commits/94496eb1b54e3ac14283df59db833a1d6c7db161,94496eb1b54e3ac14283df59db833a1d6c7db161,"Add support for constructing closures in JSIL.CreateNamedFunction, in order to eliminate pointless trampoline functions and reduce noise in Chrome profiles."
kg,2012-07-17 19:03:51,https://api.github.com/repos/sq/JSIL/git/commits/c5c0d01abb6b16817842d036e0ce41ce069f3c80,c5c0d01abb6b16817842d036e0ce41ce069f3c80,Use CreateNamedFunction when creating enum ctors so that they show up with unique names in Chrome's profiler instead of as 'result.$Value'.
kg,2012-07-17 18:56:23,https://api.github.com/repos/sq/JSIL/git/commits/c7995f80bc47342965a4d4b9152711e2b56d8474,c7995f80bc47342965a4d4b9152711e2b56d8474,Use indirect eval in CreateNamedFunction to avoid leaking local variables
kg,2012-07-17 17:46:55,https://api.github.com/repos/sq/JSIL/git/commits/5f43e65a7c0075b03ddf2345c5ba27b3c7397cd8,5f43e65a7c0075b03ddf2345c5ba27b3c7397cd8,Use eval to generate a named constructor function for types so that Chrome's debugger calls them by their type name instead of calling all object instances 'Type__ctor_Dispatcher'.
kg,2012-07-17 17:04:44,https://api.github.com/repos/sq/JSIL/git/commits/284415c3de756a5ed4a6f57b771931b03a486798,284415c3de756a5ed4a6f57b771931b03a486798,"Qualify function names with type names when emitting function bodies, to work around the fact that Chrome's profiler just calls all draw methods 'Draw'."
kg,2012-07-16 21:08:54,https://api.github.com/repos/sq/JSIL/git/commits/0b6a73adb299d3bf7cd4f15d69b10a3de6b7dea0,0b6a73adb299d3bf7cd4f15d69b10a3de6b7dea0,God I'm dumb. Fix Rectangle.Contains and Intersects overloads.
kg,2012-07-14 13:52:43,https://api.github.com/repos/sq/JSIL/git/commits/212d43c4613fcc6dfa0c03fcf033f52d6176b5ac,212d43c4613fcc6dfa0c03fcf033f52d6176b5ac,"Implement part of BinaryWriter
Stub out the UTF8 encoding ctor arguments"
kg,2012-07-14 13:32:37,https://api.github.com/repos/sq/JSIL/git/commits/a38c62dfdd46a6ac46112f9308a4aef7516c2b77,a38c62dfdd46a6ac46112f9308a4aef7516c2b77,Fix arrays of Boolean being initialized to 0 instead of false.
kg,2012-07-14 13:23:19,https://api.github.com/repos/sq/JSIL/git/commits/d1bb1e983d174950106505e7164b77ffac35c27b,d1bb1e983d174950106505e7164b77ffac35c27b,"Implement the Parse and TryParse methods for Single/Double
Add a partial implementation of System.Convert"
kg,2012-07-14 12:43:08,https://api.github.com/repos/sq/JSIL/git/commits/07f2d181cacbbeb6419054f5ea293d99ba717ab6,07f2d181cacbbeb6419054f5ea293d99ba717ab6,"Implement String.Remove.
Stub out FileStream ctors with access and share arguments.
Rename SpriteFont.MeasureString(StringBuilder) in proxy so that it doesn't require complex dispatch.
Rename some XNA primitive methods so they don't require complex dispatch.
Fix TypedArray support in non-browser environments."
kg,2012-07-12 10:26:28,https://api.github.com/repos/sq/JSIL/git/commits/81f56a6961e96e767c669c684e098aab94f3438c,81f56a6961e96e767c669c684e098aab94f3438c,"IE compatibility fixes.
Don't suppress mouse events since it prevents focus changes when hosted in an iframe."
kg,2012-07-12 09:39:53,https://api.github.com/repos/sq/JSIL/git/commits/1213b0306b5382a5cf3b782837394125871de6f7,1213b0306b5382a5cf3b782837394125871de6f7,"Use '(X | 0)' to truncate X instead of 'Math.floor(X)', because Math.floor rounds down instead of towards zero."
kg,2012-07-12 09:15:36,https://api.github.com/repos/sq/JSIL/git/commits/42927df0cd53296aa00f1cb411f2338d059dd4d8,42927df0cd53296aa00f1cb411f2338d059dd4d8,Fix overriding an interface member that was already implemented by a base class not working if you overrode it with a short name (Foo instead of I.Foo)
kg,2012-07-12 09:05:43,https://api.github.com/repos/sq/JSIL/git/commits/349a1b6e366af1fcadcb40ca6e5e47dfcd0ced43,349a1b6e366af1fcadcb40ca6e5e47dfcd0ced43,Add basic support for compound assignments to elements of multidimensional arrays.
kg,2012-07-12 07:42:49,https://api.github.com/repos/sq/JSIL/git/commits/5500685047d7acb4e8f26e69161f8df8e3f140d9,5500685047d7acb4e8f26e69161f8df8e3f140d9,Fix read only storage paths being converted to lowercase unnecessarily.
kg,2012-07-12 07:25:08,https://api.github.com/repos/sq/JSIL/git/commits/4ebf86fed45172fa36c2c86291097687778b1605,4ebf86fed45172fa36c2c86291097687778b1605,"Fix JSIL.CreateInstanceOfType for integers and floats.
Fix single test runs not getting Common.cs included."
xen2,2012-07-03 17:06:44,https://api.github.com/repos/sq/JSIL/git/commits/ba60d48c482601a3d9729dbd2d2afd43e42c7ce7,ba60d48c482601a3d9729dbd2d2afd43e42c7ce7,Disable async decompilation (should be kept as state machine).
xen2,2012-06-27 16:13:23,https://api.github.com/repos/sq/JSIL/git/commits/d2206b80b382957e1d39698b752f18dd3566af15,d2206b80b382957e1d39698b752f18dd3566af15,Added Type.AssemblyQualifiedName.
xen2,2012-07-03 16:16:34,https://api.github.com/repos/sq/JSIL/git/commits/ac346ac54e00e24a798300a8513135585924694b,ac346ac54e00e24a798300a8513135585924694b,Fix Type.IsValueType for non struct value types (such as numeric types).
kg,2012-07-12 07:08:19,https://api.github.com/repos/sq/JSIL/git/commits/cb022e23eb950b23c22d535dc31aa1bd09fc8f16,cb022e23eb950b23c22d535dc31aa1bd09fc8f16,Fix InterfaceBuilder.Type being an open version of typeof(this) instead of a closed version when this is generic. Fixes the second test case from issue #96.
kg,2012-07-12 06:54:18,https://api.github.com/repos/sq/JSIL/git/commits/eadec34dddfe3e9e402ea6d3c713f98261704e65,eadec34dddfe3e9e402ea6d3c713f98261704e65,"Fix some errors in the way generic method parameters were emitted in method bodies. Fixes issue #96.
When translating a method body that was provided by a proxy, do a fixup on all type references from the method body so that if they previously pointed to the proxy, they point to the type that contains the method. This fixes field/property names being qualified incorrectly."
kg,2012-07-11 16:44:40,https://api.github.com/repos/sq/JSIL/git/commits/bfe78ca8b8423ef3bf362c11ef847dbfa812db01,bfe78ca8b8423ef3bf362c11ef847dbfa812db01,Fix file enumeration
kg,2012-07-11 16:31:09,https://api.github.com/repos/sq/JSIL/git/commits/a15be6bd2a99383ae97a5113cc3e3c21243dc29b,a15be6bd2a99383ae97a5113cc3e3c21243dc29b,"Add support for tagging audio files with the 'Stream' file setting to prevent preloading of the entire audio file, for faster startup times.
Take basic steps to make a dead game actually dead so that players don't think they can interact with it."
kg,2012-07-11 14:04:14,https://api.github.com/repos/sq/JSIL/git/commits/3c5d7c3160903b4c87054441b93843fcdc778cf1,3c5d7c3160903b4c87054441b93843fcdc778cf1,"Fixes to enum semantics:
  Bitwise operators on flags enums now produce an enum instance.
  A | B will always produce the same enum instance (A, B) instead of producing a new one every time. This ensures that all forms of equality tests work.
  Casting a nullable enum to an integer will not convert the null into something else.
Fix an unhandled exception in EvaluatorPool."
kg,2012-07-11 13:28:29,https://api.github.com/repos/sq/JSIL/git/commits/83ee17179a56d907f5f47b6364ea5edf0e2ff154,83ee17179a56d907f5f47b6364ea5edf0e2ff154,Fix FolderTestSource running Common.cs.
kg,2012-07-11 13:22:35,https://api.github.com/repos/sq/JSIL/git/commits/a19f033c5c7c26d1d6f2b3a51375925588801a7d,a19f033c5c7c26d1d6f2b3a51375925588801a7d,Fix RunComparisonTest not rethrowing exceptions and making tests look like they passed.
kg,2012-07-11 13:06:01,https://api.github.com/repos/sq/JSIL/git/commits/4b5494fda8a4e57bfd0525be0e87cf5dc9fbf65c,4b5494fda8a4e57bfd0525be0e87cf5dc9fbf65c,"Represent enum values as instances of a custom type (TEnum.$Value) instead of modified instances of Number.
Replace JSIL.MakeEnumValue(TEnum, ...) with TEnum.$MakeValue(...)."
kg,2012-07-11 12:50:44,https://api.github.com/repos/sq/JSIL/git/commits/a0530262fd0a2b3c29c279c3cfdebc7aba026f9c,a0530262fd0a2b3c29c279c3cfdebc7aba026f9c,"Use value.valueOf() instead of Number(value) when the value is already known to be numeric or have a valueOf method.
( http://jsperf.com/custom-number-conversion )"
kg,2012-07-11 06:24:28,https://api.github.com/repos/sq/JSIL/git/commits/05665d9f7ce80942a19be2c418593d483e153529,05665d9f7ce80942a19be2c418593d483e153529,Throw FileNotFoundException instead of Exception when an asset is missing from the manifest so apps can respond to it.
kg,2012-07-09 16:57:27,https://api.github.com/repos/sq/JSIL/git/commits/2b752bfef8f6c17056ec2232c2e748c7b747aa77,2b752bfef8f6c17056ec2232c2e748c7b747aa77,Apply SpriteEffects after rotation instead of before. Fixes mirroring being broken when rotation is also applied.
kg,2012-07-09 10:27:10,https://api.github.com/repos/sq/JSIL/git/commits/50e35ed220d0b8b79d74a4a90d41ef05f3153eef,50e35ed220d0b8b79d74a4a90d41ef05f3153eef,Finish moving tests over to TestCaseSource.
kg,2012-07-09 08:03:40,https://api.github.com/repos/sq/JSIL/git/commits/5bdf6e37294f0c420660c6eba33c9e87bc80adca,5bdf6e37294f0c420660c6eba33c9e87bc80adca,Checkpoint test framework refactorings to use TestCaseSource.
kg,2012-07-08 15:35:05,https://api.github.com/repos/sq/JSIL/git/commits/527acb406f84cde5a10a9706b4bf9dd4703094d6,527acb406f84cde5a10a9706b4bf9dd4703094d6,Checkpoint partially implemented support for a faster version of $sig.get.
kg,2012-07-08 15:11:04,https://api.github.com/repos/sq/JSIL/git/commits/057938d39654f60c9f3309b1db39713083c2aac1,057938d39654f60c9f3309b1db39713083c2aac1,"Distinguish between defining and using a cached method signature, and assert that there are never two different definitions of a given cached signature.
Speed up .Of slightly."
kg,2012-07-08 13:31:57,https://api.github.com/repos/sq/JSIL/git/commits/ac2a71032d428da8de18673e6d7531fc4c72db25,ac2a71032d428da8de18673e6d7531fc4c72db25,"Don't ever explicitly call get_X or set_X because it breaks pre/post increment of properties. Instead, generate a name-mangled version of base class properties and use those instead.
Qualify auto property backing fields by type name.
Include whether a property is virtual in its descriptor."
kg,2012-07-08 12:14:51,https://api.github.com/repos/sq/JSIL/git/commits/13ff46ca311026dfecbc86a2fa138027eb3244f4,13ff46ca311026dfecbc86a2fa138027eb3244f4,Implement File.Delete.
kg,2012-07-08 11:50:33,https://api.github.com/repos/sq/JSIL/git/commits/b413862d7a048c6dfd674fc9db61714d69dea14c,b413862d7a048c6dfd674fc9db61714d69dea14c,"Add the JSIsArrayEnumerator attribute you can use to tell JSIL to replace uses of an enumerator type with an efficient for-loop that iterates over an array.
Tag some BCL enumerators as array enumerators."
kg,2012-07-08 03:11:17,https://api.github.com/repos/sq/JSIL/git/commits/615047198a409bae71f468279e081ab953c91b7a,615047198a409bae71f468279e081ab953c91b7a,"Implement XmlWriter WriteStartDocument/WriteEndDocument
Fix Directory GetFiles/GetDirectories not working for paths other than the root directory"
kg,2012-07-06 15:42:58,https://api.github.com/repos/sq/JSIL/git/commits/bfc8c1f2617c63ec29ba6cbc2b3ccc98d7897a51,bfc8c1f2617c63ec29ba6cbc2b3ccc98d7897a51,Flush the volume when closing a FileStream created directly (but still delay flushing of volumes until storage containers close).
kg,2012-07-06 15:37:49,https://api.github.com/repos/sq/JSIL/git/commits/eed244720cba8e42d6f4d017945ed725e5e4528f,eed244720cba8e42d6f4d017945ed725e5e4528f,Add support for using the storage root in FileStream::.ctor.
kg,2012-07-06 15:28:20,https://api.github.com/repos/sq/JSIL/git/commits/c4c9ed8336470f82a2519c27a1f2079792a48a3f,c4c9ed8336470f82a2519c27a1f2079792a48a3f,Suppress missing interface member warnings by default.
kg,2012-07-06 15:23:46,https://api.github.com/repos/sq/JSIL/git/commits/387e5ae6a6326238cd71cbdcaffb99b13acd8eea,387e5ae6a6326238cd71cbdcaffb99b13acd8eea,"Basic support for converting embedded resource files into JSON.
Basic support for ResourceManager/ResourceSet based on JSON resource files (.resj)."
kg,2012-07-05 10:37:40,https://api.github.com/repos/sq/JSIL/git/commits/d2dd9c4ad71e284c657e667249a66b8db04a839d,d2dd9c4ad71e284c657e667249a66b8db04a839d,"Fix null reference exception when calling GetMethod/GetMethods on a Type
Implement DirectoryInfo.Create
Fix InitResizableArray breaking some of the container type implementations"
kg,2012-07-05 10:22:20,https://api.github.com/repos/sq/JSIL/git/commits/7ff2b285d457079fd356e862897ca7f655ecaa88,7ff2b285d457079fd356e862897ca7f655ecaa88,Fix invalid strict mode reference in JSIL.Browser
kg,2012-07-05 09:55:20,https://api.github.com/repos/sq/JSIL/git/commits/1effd88e1cda2348f713479d6a13a3ededdc8ef9,1effd88e1cda2348f713479d6a13a3ededdc8ef9,"Add support for telling the static analyzer that a given type's Dispose method is pure.
If a try/finally block only contains constant/pure expressions, and there is no catch block, turn it into a regular block. This improves performance since exception handling deoptimizes functions in both V8 and SpiderMonkey."
kg,2012-07-05 09:22:02,https://api.github.com/repos/sq/JSIL/git/commits/ac9570622effd8be249afa364e5c1ad8e53fa80e,ac9570622effd8be249afa364e5c1ad8e53fa80e,Improve performance when using enums and object instances as keys in a dictionary. NOTE: May break using structs as dictionary keys since ValueType.GetHashCode is not implemented yet.
kg,2012-07-05 09:06:22,https://api.github.com/repos/sq/JSIL/git/commits/14b4ceb3911ce873bf3c8f2896334ab5633d6398,14b4ceb3911ce873bf3c8f2896334ab5633d6398,"Always construct TypeIdentifiers from TypeDefinitions instead of TypeReferences. Fixes weird type information bugs when two identically named types are defined in different assemblies.
Stub out some ResourceManager methods.
Handle forward slashes in System.IO.Path methods."
kg,2012-07-05 07:51:03,https://api.github.com/repos/sq/JSIL/git/commits/a2e259f056ae71eb881dcffdbd113fe0b0612089,a2e259f056ae71eb881dcffdbd113fe0b0612089,Fix $makeByteReader truncating the input byte sequence.
kg,2012-07-05 07:31:42,https://api.github.com/repos/sq/JSIL/git/commits/412a172558ecfce1021198bd9bd9e0fb59a02c74,412a172558ecfce1021198bd9bd9e0fb59a02c74,"Support the style parameter to the integer Parse method.
Implement NumberStyles.HexNumber."
kg,2012-07-05 07:19:44,https://api.github.com/repos/sq/JSIL/git/commits/f1b6b2ab903608ae292479e3b20ef4acdf9e1f8c,f1b6b2ab903608ae292479e3b20ef4acdf9e1f8c,"Implement LINQ Enumerable.Contains.
Implement XMLReader .ReadToFollowing, .ReadToNextSibling.
Handle strings in JSIL.GetEnumerator."
kg,2012-07-05 06:57:45,https://api.github.com/repos/sq/JSIL/git/commits/41449d3769297d0e76222fe93266e09032983763,41449d3769297d0e76222fe93266e09032983763,"Never use String.fromCharCode.apply because it's broken for large arrays in Chrome.
Use the storage root if one is available in JSIL.Host.getFile.
Change the name of the local storage root directory to ""/"" and the read only storage root directory to {fileRoot}. This ensures that the absolute paths created by the junction are valid.
Detect UTF-8 byte order marks in XML and strip them so that XML parsing succeeds."
kg,2012-07-05 06:15:55,https://api.github.com/repos/sq/JSIL/git/commits/fc2d293ef39bca111dc323ea9c749098a1ffe389,fc2d293ef39bca111dc323ea9c749098a1ffe389,"Implement a basic set of filesystem functionality:
  FileInfo/DirectoryInfo .Exists, .FullName, .Name, .Extension
  Directory .Exists, .CreateDirectory, .GetFiles, .GetDirectories
Implement File.Create"
kg,2012-07-05 03:49:40,https://api.github.com/repos/sq/JSIL/git/commits/db55f8b6619767b49e8d58fd3f087b2a73e2e3b1,db55f8b6619767b49e8d58fd3f087b2a73e2e3b1,Update more code to use Array.New
kg,2012-07-04 04:57:12,https://api.github.com/repos/sq/JSIL/git/commits/f3e9049c14c046b20349d8eacd29dcaadcbf13b7,f3e9049c14c046b20349d8eacd29dcaadcbf13b7,"Use typed arrays when feasible in JSIL.Array.New.
Update various array-related runtime APIs to work correctly for typed arrays (and use typed array specific APIs where possible)."
kg,2012-07-04 04:36:24,https://api.github.com/repos/sq/JSIL/git/commits/05ade20385032e7538292b67cf8d8a0561b9c724,05ade20385032e7538292b67cf8d8a0561b9c724,"Checkpoint work on using typed arrays when available
Fix bug in List.CopyTo."
kg,2012-07-03 09:50:46,https://api.github.com/repos/sq/JSIL/git/commits/6cf8588036be0b49813df5e1ee610eab958a0f1d,6cf8588036be0b49813df5e1ee610eab958a0f1d,"Uses of unconstrained generic parameters will produce calls to 'JSIL.CloneParameter' where a struct copy would normally go, to ensure that a conditional struct copy is performed when the generic parameter type is a struct. If the parameter is constrained with 'struct', an unconditional copy is generated instead, and if it is constrained with 'class', no copy is generated. Partial fix for issue #107.

Move StructGenericParameter.cs to FailingTestCases because it relies on object.ReferenceEquals returning false due to structs always being  implicitly copied."
kg,2012-07-03 09:33:36,https://api.github.com/repos/sq/JSIL/git/commits/86cf07cdc182bfb0d7d9b9e3f68c454f462d4476,86cf07cdc182bfb0d7d9b9e3f68c454f462d4476,Checkpoint work on conditional struct copies for generic parameters
kg,2012-06-27 20:56:20,https://api.github.com/repos/sq/JSIL/git/commits/9a2ada512c843b835f4276c1637df89df50218fe,9a2ada512c843b835f4276c1637df89df50218fe,Add another test case for struct generic parameters.
kg,2012-06-27 20:55:35,https://api.github.com/repos/sq/JSIL/git/commits/ebbc9859c8820152e94b0cfb8855af8a45a5c632,ebbc9859c8820152e94b0cfb8855af8a45a5c632,"Revert ""Checkpoint a higher performance rewrite of SpriteBatch_InternalDraw.""

This reverts commit 252e48d89b4cb5cd7da73c6d8397b4189226e060."
kg,2012-06-27 20:55:13,https://api.github.com/repos/sq/JSIL/git/commits/252e48d89b4cb5cd7da73c6d8397b4189226e060,252e48d89b4cb5cd7da73c6d8397b4189226e060,Checkpoint a higher performance rewrite of SpriteBatch_InternalDraw.
kg,2012-06-24 14:38:14,https://api.github.com/repos/sq/JSIL/git/commits/d5148b4dc94a4905225a897e5fced6e088fdad84,d5148b4dc94a4905225a897e5fced6e088fdad84,"Add test for copy-before-mutation in EmulateStructAssignment
Fix copy-before-mutation edge case."
kg,2012-06-24 13:28:48,https://api.github.com/repos/sq/JSIL/git/commits/51017112647ca45513c3da426c3ccde1fb6429ac,51017112647ca45513c3da426c3ccde1fb6429ac,"Checkpoint further progress on 'ref this'.
Expand struct assignment analysis to ensure that a copy is made for struct assignments where the target is never modified, but the source is."
kg,2012-06-24 13:08:35,https://api.github.com/repos/sq/JSIL/git/commits/723cc1d0d9204940f98dd4eb49ebbe7ae63589b7,723cc1d0d9204940f98dd4eb49ebbe7ae63589b7,Checkpoint work on supporting 'ref this' for structs.
markusjohnsson,2012-06-23 10:46:50,https://api.github.com/repos/sq/JSIL/git/commits/c2750d3edd4b57f45070f80d1de87ae5d244b0e6,c2750d3edd4b57f45070f80d1de87ae5d244b0e6,"Merge branch 'master' of github.com:/kevingadd/JSIL into int64

Conflicts:
	JSIL/ILBlockTranslator.cs
	Libraries/JSIL.Core.js
	Tests/TestUtil.cs
	Tests/Tests.csproj
	Upstream/ILSpy"
markusjohnsson,2012-06-23 10:36:56,https://api.github.com/repos/sq/JSIL/git/commits/9aa447391f898b6fafe028d7856dafd06c160128,9aa447391f898b6fafe028d7856dafd06c160128,Make boxed Int64 values possible to cast.
markusjohnsson,2012-06-23 09:11:53,https://api.github.com/repos/sq/JSIL/git/commits/4bf7e3f0f83444f873d06b10193be54080a77af2,4bf7e3f0f83444f873d06b10193be54080a77af2,Added some Int64 tests
kg,2012-06-21 11:39:42,https://api.github.com/repos/sq/JSIL/git/commits/7f0daf8e578f592b0489fe7c7b488768c7ef6020,7f0daf8e578f592b0489fe7c7b488768c7ef6020,Attempt to stop v8 from retaining the bodies of all functions constructed with eval().
kg,2012-06-21 11:21:08,https://api.github.com/repos/sq/JSIL/git/commits/179825f1d1c132b4409c53cbe17734043a8cb5eb,179825f1d1c132b4409c53cbe17734043a8cb5eb,"Lazily create the Is/As/Cast methods.
Make field initialization even lazier and ensure that fields aren't initialized on open types (their default value expressions might be invalid, otherwise)."
kg,2012-06-21 10:55:19,https://api.github.com/repos/sq/JSIL/git/commits/9fd6be12f4955b0fcdd7fb2f12b205587ae2a8f5,9fd6be12f4955b0fcdd7fb2f12b205587ae2a8f5,"Support overriding the purity, modified variables, and escaping variables lists for translated methods (via attributes).
Fix bug introduced by lazy default field fix."
kg,2012-06-21 10:39:25,https://api.github.com/repos/sq/JSIL/git/commits/c4e7819f62c9ff64d4a77f78230b734ca3744ad8,c4e7819f62c9ff64d4a77f78230b734ca3744ad8,Fix LazyDefaultProperty performance issue.
kg,2012-06-21 10:34:59,https://api.github.com/repos/sq/JSIL/git/commits/8877010b72734d7ea7431ed840769fc41521cb4c,8877010b72734d7ea7431ed840769fc41521cb4c,Revert ModifiedVariables optimization because it's broken somehow.
kg,2012-06-21 10:21:45,https://api.github.com/repos/sq/JSIL/git/commits/c118abffc68fa750558a55bf76e616b2b9153552,c118abffc68fa750558a55bf76e616b2b9153552,"Rename Object.Equals to Object.Object_Equals in generated JS so that it doesn't alias other Equals methods and cause them to require slow overload dispatch.
All object instances now have a __ThisTypeId__ property along with their __ThisType__ property to improve performance of $Is, $As and $Cast.
A reverse-direction type assignability table is now generated for all types to improve performance of $Is, $As and $Cast.
Each type's $Is and $As methods are generated with eval so that they have unique names for profiling/debugging purposes.
Improve precision of the ModifiedVariables list generated by the static analyzer, so that calling a pure method on a struct does not flag the struct as modified (unless it actually modifies the struct)."
kg,2012-06-21 08:53:10,https://api.github.com/repos/sq/JSIL/git/commits/b933738c4c8459ea017e2035546c9c1376fdcd32,b933738c4c8459ea017e2035546c9c1376fdcd32,"Fix broken Object.Equals proxy and add a test.
Handle String.Equals at runtime instead of with a broken proxy detection method.
Add JSReplacement for Object.ReferenceEquals.
Replace direct invocations of System.ValueType.Equals with an invocation of JSIL.StructEquals.
Never emit casts to System.ValueType."
kg,2012-06-21 08:49:55,https://api.github.com/repos/sq/JSIL/git/commits/2f777151806526911c98d94ff6ebd9f43faf0c5e,2f777151806526911c98d94ff6ebd9f43faf0c5e,Undo the method signatures for interfaces change; it breaks Dictionary.Values.GetEnumerator.
kg,2012-06-21 08:05:13,https://api.github.com/repos/sq/JSIL/git/commits/0e3f528cdc1b88f41be19e4f2102b0f5bfdd1527,0e3f528cdc1b88f41be19e4f2102b0f5bfdd1527,"Align SpriteBatch SamplerState behavior better with real XNA.
Fix webgl-2d not saving/restoring smoothing mode with the rest of the draw state."
kg,2012-06-21 07:50:03,https://api.github.com/repos/sq/JSIL/git/commits/0b1e4cf18e3356c703417527d4267c0f0480a8c5,0b1e4cf18e3356c703417527d4267c0f0480a8c5,Fix scaled text being misaligned when the text cache is being used.
kg,2012-06-21 07:34:21,https://api.github.com/repos/sq/JSIL/git/commits/d3d7556e269cfe16cd3b9db8f4b4b89550c7e09d,d3d7556e269cfe16cd3b9db8f4b4b89550c7e09d,"Based on issue #103, resolve generic method signatures before sorting the signatures in $ApplyMemberHiding.
Add .ToString() for MethodSignature and NamedMethodSignature.
For interface methods (IFoo.Test), also increment the overload count for the non-qualified method name (Test).
Add test case from issue #103."
kg,2012-06-21 07:05:27,https://api.github.com/repos/sq/JSIL/git/commits/1e1b9bd19b8c6344aac24f0cb427f3e70a7b120e,1e1b9bd19b8c6344aac24f0cb427f3e70a7b120e,The OptimizeStructCopies setting was broken. Whoops.
kg,2012-06-19 11:58:58,https://api.github.com/repos/sq/JSIL/git/commits/01c2d5fe15003b4af792334e2fc324b8dad0c74f,01c2d5fe15003b4af792334e2fc324b8dad0c74f,"Checkpoint work on creating a virtual filesystem out of File and Asset entries loaded by the preloader
VirtualVolume/VirtualDirectory.enumerate return nodes instead of names"
kg,2012-06-19 10:56:39,https://api.github.com/repos/sq/JSIL/git/commits/5d349fe657210d5950fab84d5ce1c5d33dbaf52c,5d349fe657210d5950fab84d5ce1c5d33dbaf52c,Fix stray references to window
kg,2012-06-19 10:49:21,https://api.github.com/repos/sq/JSIL/git/commits/b76bead44792922a220de1956c45b59098534818,b76bead44792922a220de1956c45b59098534818,Add fixme comments to read(u)int64.
kg,2012-06-19 10:46:26,https://api.github.com/repos/sq/JSIL/git/commits/0152e3b3742d845f1e94a3ae293e322af4949fd6,0152e3b3742d845f1e94a3ae293e322af4949fd6,Merge branch 'experimental' of https://github.com/xen2/JSIL into xen2_experimental
kg,2012-06-19 10:37:38,https://api.github.com/repos/sq/JSIL/git/commits/c7bcda5da029c49041a3dcde66dc32a1edfb248d,c7bcda5da029c49041a3dcde66dc32a1edfb248d,Disable text caching for IE since its canvas backend is broken
kg,2012-06-19 10:18:16,https://api.github.com/repos/sq/JSIL/git/commits/e7dcc083fa8af25b7679ca96ed8bd602a4e7912d,e7dcc083fa8af25b7679ca96ed8bd602a4e7912d,More scaffold improvements.
kg,2012-06-19 10:05:34,https://api.github.com/repos/sq/JSIL/git/commits/6c7f0be96ff9382d2f044df29592e5d8c1d4f5ed,6c7f0be96ff9382d2f044df29592e5d8c1d4f5ed,Move lumberjack to JSIL.js
kg,2012-06-19 09:45:10,https://api.github.com/repos/sq/JSIL/git/commits/14649a40b32b6e88d4248f8d010809992c5435a8,14649a40b32b6e88d4248f8d010809992c5435a8,"Convert the other demos to use JSIL.js
Fix XNAStorage not working in XNA 3"
kg,2012-06-19 09:36:27,https://api.github.com/repos/sq/JSIL/git/commits/e7467e9a0ee7745e23d785866fad5ba7059fbde6,e7467e9a0ee7745e23d785866fad5ba7059fbde6,Add a simple configurable preloader script that loads all the necessary libraries and data structures to run a game in the browser.
kg,2012-06-19 04:18:53,https://api.github.com/repos/sq/JSIL/git/commits/1f019eeaa662ca375c07723fc9199b3285c3166b,1f019eeaa662ca375c07723fc9199b3285c3166b,Remove TypedArray dependency so that IE9 works again
kg,2012-06-19 04:10:51,https://api.github.com/repos/sq/JSIL/git/commits/0f28929a513fc9433e4caab4bad4b57bb082600a,0f28929a513fc9433e4caab4bad4b57bb082600a,Update BinaryReader's ReadChar implementation to handle new JS UTF8 decoder
kg,2012-06-19 04:05:29,https://api.github.com/repos/sq/JSIL/git/commits/6150c8efd2da87595b20868a7b46bf1d2f4226dd,6150c8efd2da87595b20868a7b46bf1d2f4226dd,"Add a pure JS UTF8 decoder.
Change PrintString in the encoding tests to escape non-ASCII chars so that the console's encoding doesn't affect test results."
kg,2012-06-19 03:47:05,https://api.github.com/repos/sq/JSIL/git/commits/af475a3616c51bedb8a7a0e3b04ff18c3d52d34e,af475a3616c51bedb8a7a0e3b04ff18c3d52d34e,"Switch from using the browser to encode/decode text to doing it in pure JS.
Checkpoint: New pure JS implementation of UTF8 encode"
kg,2012-06-18 15:02:58,https://api.github.com/repos/sq/JSIL/git/commits/12f474f385a93f15504249f4e352b21cb689a2ca,12f474f385a93f15504249f4e352b21cb689a2ca,Fix smoothing enabled state not being updated in some cases
kg,2012-06-18 14:51:29,https://api.github.com/repos/sq/JSIL/git/commits/4e0b3d7224deb077d1420567668ca6811367cccf,4e0b3d7224deb077d1420567668ca6811367cccf,Fix UTF8 in IE10
kg,2012-06-18 14:44:35,https://api.github.com/repos/sq/JSIL/git/commits/0a115e40f76ae2d5e8a33ac3b71a1062954b756e,0a115e40f76ae2d5e8a33ac3b71a1062954b756e,"Implement the webkitImageSmoothingEnabled/mozImageSmoothingEnabled properties in webgl-2d
Re-enable WebGL for the demos that had it disabled, since it's all good now"
kg,2012-06-18 14:04:44,https://api.github.com/repos/sq/JSIL/git/commits/39e651535eae986ad72b0b58e31cfa036c71da33,39e651535eae986ad72b0b58e31cfa036c71da33,"Use BlobBuilder if available instead of new Blob because browser vendors can't figure their shit out.
Be more precise about how we use BlobBuilder.append because some browser implementations choke on being passed a typed array instead of an ArrayBuffer.
Add ?forceWebGL url parameter.
Force-disable antialiasing in webgl-2d. Improves performance and fixes ANGLE centroid sampling issue."
kg,2012-06-18 12:34:21,https://api.github.com/repos/sq/JSIL/git/commits/cc4d292405a43e378c2ef7996b9ee080b0c0b1ce,cc4d292405a43e378c2ef7996b9ee080b0c0b1ce,"Stub out parts of HashSet.
Implement Texture2D.Bounds.
Implement GameServiceContainer."
kg,2012-06-18 11:53:29,https://api.github.com/repos/sq/JSIL/git/commits/7aa804ac9715ca362cd4bf056857973a05ca3f97,7aa804ac9715ca362cd4bf056857973a05ca3f97,"Add JSIL.Builtins.IsJavascript for easy JS/C# conditionals.
Whoops. Move the encoding/decoding methods to externals.
Fix Encoding.$stringToChars.
Use UTF8Encoding to decode chars for BinaryReader.ReadChar. Fixes reading non-ASCII characters from binary files (like SpriteFonts).
Correctly defer BinaryReader.Read to BinaryReader.ReadChar."
kg,2012-06-18 10:58:28,https://api.github.com/repos/sq/JSIL/git/commits/899b8d2255b57a4cf2d8e2b818ba3f5d1d9d6f4d,899b8d2255b57a4cf2d8e2b818ba3f5d1d9d6f4d,Implement UTF8Encoding.GetString.
kg,2012-06-18 10:51:24,https://api.github.com/repos/sq/JSIL/git/commits/6d746bbe114bf17da97d5e72ff9566eb9c668cf5,6d746bbe114bf17da97d5e72ff9566eb9c668cf5,"Implement a nightmarishly complicated version of UTF8Encoding.GetBytes that at least works in Firefox and Chrome. No thanks to the actual browser vendors or the authors of the relevant W3C specs.
Add a test for UTF8Encoding.GetString (doesn't work yet)."
kg,2012-06-18 10:11:50,https://api.github.com/repos/sq/JSIL/git/commits/7f637769ec2331c6611c7107bfaa8c54ccebfcf9,7f637769ec2331c6611c7107bfaa8c54ccebfcf9,"Add a baseline implementation of ASCIIEncoding (that's actually correct) along with some tests.
Don't append canvases or images to the DOM in a few spots anymore."
kg,2012-06-17 12:24:33,https://api.github.com/repos/sq/JSIL/git/commits/33c767384e7a26a8a0ad3c394a49e032b6b390e3,33c767384e7a26a8a0ad3c394a49e032b6b390e3,"Fix GenerateChannels producing a bad cache in the AppData directory.
Disable GenerateChannels for Lumberjack because Firefox chokes on it."
kg,2012-06-17 11:57:04,https://api.github.com/repos/sq/JSIL/git/commits/f9a73a0cde637232f3f87ea2973e1c06d3c2b205,f9a73a0cde637232f3f87ea2973e1c06d3c2b205,More content changes.
kg,2012-06-17 11:52:57,https://api.github.com/repos/sq/JSIL/git/commits/5e079f32c125555879b45634e9077c30d05ec1ed,5e079f32c125555879b45634e9077c30d05ec1ed,Enlarge the padding on cached text so that descenders/ascenders aren't clipped off.
kg,2012-06-17 11:44:04,https://api.github.com/repos/sq/JSIL/git/commits/79ce78e4414716c7b6cdf29afd74670aa90f9e29,79ce78e4414716c7b6cdf29afd74670aa90f9e29,Random content changes :(
kg,2012-06-17 11:42:11,https://api.github.com/repos/sq/JSIL/git/commits/237d5f7a21bda361407d4cc5f4963cdec0678756,237d5f7a21bda361407d4cc5f4963cdec0678756,"Add support for glob wildcards in file settings.
Add the file setting 'GenerateChannels' to pre-generate the r/g/b/a channel images for textures. Eliminates the channel-generation stutters for that image that occur when using the canvas backend, at the cost of some extra download time and constant memory usage.
If pre-generated channels are included in the asset manifest, use them instead of generating channels using canvas."
kg,2012-06-17 09:55:43,https://api.github.com/repos/sq/JSIL/git/commits/8dc7fd6096d9d010ad57c27108e12be892a42256,8dc7fd6096d9d010ad57c27108e12be892a42256,Fix alignment of text when using text caching with SpriteFont.
kg,2012-06-17 09:53:32,https://api.github.com/repos/sq/JSIL/git/commits/78099ec5aa0a1e19a3e3cc688c0e789971b88be7,78099ec5aa0a1e19a3e3cc688c0e789971b88be7,Fix constants defined in externals. Fixes the integer ranges test.
kg,2012-06-17 09:29:21,https://api.github.com/repos/sq/JSIL/git/commits/a7fadea69a4c7b8a4c8e73d4e9e8539b9ce6931b,a7fadea69a4c7b8a4c8e73d4e9e8539b9ce6931b,Merge branch 'master' of github.com:kevingadd/JSIL
kg,2012-06-17 09:29:11,https://api.github.com/repos/sq/JSIL/git/commits/f138daf88c94be4ae8491d906ad8c547a1025408,f138daf88c94be4ae8491d906ad8c547a1025408,Add a test for the integer range constants.
kg,2012-06-17 07:39:21,https://api.github.com/repos/sq/JSIL/git/commits/c26db1cf864467b6c72b7d050a4a170df525adbd,c26db1cf864467b6c72b7d050a4a170df525adbd,Hard code integral type limits in IO so that int doesn't have to be initialized.
kg,2012-06-17 07:36:32,https://api.github.com/repos/sq/JSIL/git/commits/a00b8761d8251cd91c4924cd388c6f98be610475,a00b8761d8251cd91c4924cd388c6f98be610475,Allow defining constants in externals
kg,2012-06-17 07:22:45,https://api.github.com/repos/sq/JSIL/git/commits/e38b027b86f662c0690f41cc2292cca83f0af7be,e38b027b86f662c0690f41cc2292cca83f0af7be,Fix number types not having MinValue/MaxValue constants anymore because I made the mscorlib versions aliases. WHOOPS.
kg,2012-06-17 03:28:03,https://api.github.com/repos/sq/JSIL/git/commits/af22c022d715e3448242f3e293dc5721ff19c305,af22c022d715e3448242f3e293dc5721ff19c305,Minor library fixes
kg,2012-06-17 00:00:14,https://api.github.com/repos/sq/JSIL/git/commits/19855a3166506c11f3e7d161ce0e33f3b8c08fa7,19855a3166506c11f3e7d161ce0e33f3b8c08fa7,Write solution builder diagnostic information to a .buildlog file in the output directory.
kg,2012-06-16 23:53:19,https://api.github.com/repos/sq/JSIL/git/commits/dc5ac49691a34273e7b67dc17be84209d471bcfe,dc5ac49691a34273e7b67dc17be84209d471bcfe,Replace use of MSBuild's ResultsByTarget dictionary with a more extensive search of all outputs for build outputs. Fixes some build outputs being ignored in complex solution files.
kg,2012-06-16 23:38:41,https://api.github.com/repos/sq/JSIL/git/commits/abd69aaa701b36eb347622e670856c26df54c860,abd69aaa701b36eb347622e670856c26df54c860,Fix the --logVerbosity command line argument.
kg,2012-06-16 23:29:01,https://api.github.com/repos/sq/JSIL/git/commits/53cfb7aeeb1d2d8ef7fb1ef8b61ee23ad5ebc66d,53cfb7aeeb1d2d8ef7fb1ef8b61ee23ad5ebc66d,"Fix bug in FixupOutputDirectory when the parent directory is the empty string.
Implement .Equals for JSBreakExpression, JSContinueExpression and JSReturnExpression."
kg,2012-06-16 08:12:31,https://api.github.com/repos/sq/JSIL/git/commits/aa4bff38b652c8abcd127a426f59f9ba09e3bb55,aa4bff38b652c8abcd127a426f59f9ba09e3bb55,Fix window.performance.memory detection
kg,2012-06-16 07:59:52,https://api.github.com/repos/sq/JSIL/git/commits/1d6faa8b7cca90896fd179d90989026e7a697df1,1d6faa8b7cca90896fd179d90989026e7a697df1,"Split out a 'reserved identifier' list from the reserved word list, for identifiers that can't be used as type member names.
Add various built-in members of Function to the reserved identifier list so they get renamed."
kg,2012-06-16 07:46:40,https://api.github.com/repos/sq/JSIL/git/commits/6ef96822e585aeec7c3f28e58ec5045a29129aba,6ef96822e585aeec7c3f28e58ec5045a29129aba,Improve performance of lazy field default values
kg,2012-06-16 07:31:46,https://api.github.com/repos/sq/JSIL/git/commits/e74f2bf3b325e8ddb82443174c722ebe9e4e19b3,e74f2bf3b325e8ddb82443174c722ebe9e4e19b3,"Make 'name' a reserved word because Firefox won't let you create properties called 'name' on functions. Grr.
Cache named method signature hashes."
kg,2012-06-16 07:04:14,https://api.github.com/repos/sq/JSIL/git/commits/4cad4961391bdd575e5db7afca912e0c8a978941,4cad4961391bdd575e5db7afca912e0c8a978941,Check in Game Type files
kg,2012-06-16 06:28:33,https://api.github.com/repos/sq/JSIL/git/commits/f6cec82ddf23f9eab17ef6b37a787687b7c2e620,f6cec82ddf23f9eab17ef6b37a787687b7c2e620,"Expand support for the .Format(string) method on numbers and also add support for Format(string, IFormatProvider).
Implement Math.Round(double, int).
Stub out CultureInfo's ctor.
Fix vector operator (ref, scalar) and (scalar, ref) overloads returning NaN."
kg,2012-06-16 05:49:27,https://api.github.com/repos/sq/JSIL/git/commits/eee02f78815802ba519d168b93b13bd1c2cf28e6,eee02f78815802ba519d168b93b13bd1c2cf28e6,Fix too many break statements being eliminated in nested switch statements.
kg,2012-06-16 05:14:50,https://api.github.com/repos/sq/JSIL/git/commits/58e52e9096694f8612766fa43df461714ac79df6,58e52e9096694f8612766fa43df461714ac79df6,"When asked to draw the empty string using a SpriteFont, just return without doing any rendering.
Stub out Gamer.get_Gamertag and get_DisplayName."
kg,2012-06-16 05:04:40,https://api.github.com/repos/sq/JSIL/git/commits/9c73632c67a22c90222604f7d13d31ce72735b6b,9c73632c67a22c90222604f7d13d31ce72735b6b,Alias the numeric types to JSIL's versions when translating mscorlib. This ensures that their cast methods work correctly.
kg,2012-06-16 04:58:04,https://api.github.com/repos/sq/JSIL/git/commits/1e8c9ed916a079cb5158bb12a9fff98416b0f1b0,1e8c9ed916a079cb5158bb12a9fff98416b0f1b0,Allow casting ref enum to ref int.
kg,2012-06-16 04:55:15,https://api.github.com/repos/sq/JSIL/git/commits/7587d20c25d44215e5f3c9bd2ebdd7141ae4fe7e,7587d20c25d44215e5f3c9bd2ebdd7141ae4fe7e,"Fix JSIL.Cast's handling of boolean->integer and boolean->number casts.
Handle weird cast semantics (ILSpy issue #346) when using ref boolean parameters in expressions.
In any binary expression where one operand is a boolean and the other is integral, cast the boolean to an integral type.
Define SByte in bootstrap."
kg,2012-06-16 02:12:39,https://api.github.com/repos/sq/JSIL/git/commits/a454ec0cbfbc1af79092ef603ed65f103e3afdb6,a454ec0cbfbc1af79092ef603ed65f103e3afdb6,"Fix cycle problems in field initialization for types by making field default values lazily evaluated. This relies on ES5 spec edge cases, but it's well-specified, so it should be fine.
Remove InitializeFields and __FieldsToInitialize__ since lazy field default values eliminate the need for both."
kg,2012-06-15 08:35:04,https://api.github.com/repos/sq/JSIL/git/commits/6a21e7f07f2a1ade6a4bea90f208a813ba9d1af0,6a21e7f07f2a1ade6a4bea90f208a813ba9d1af0,"Implement Vector.Lerp(Vector, Vector, float)"
kg,2012-06-15 08:31:02,https://api.github.com/repos/sq/JSIL/git/commits/93c7b96bfd6e9a46957ee2f87525ee7b1555b3e8,93c7b96bfd6e9a46957ee2f87525ee7b1555b3e8,Fix static XNA vector operators with scalar arguments.
kg,2012-06-15 08:26:58,https://api.github.com/repos/sq/JSIL/git/commits/6c7d14f7accca5c8edb801e806031c3f8b9970e7,6c7d14f7accca5c8edb801e806031c3f8b9970e7,"Implement references to elements of jagged arrays and elements of jagged struct arrays.
Improve error feedback for unmaterialized references."
kg,2012-06-15 08:08:44,https://api.github.com/repos/sq/JSIL/git/commits/6e6cf331ab32afb28d9b7ee1500a9ebcc2ee437a,6e6cf331ab32afb28d9b7ee1500a9ebcc2ee437a,Stub some vertex type ctors so you don't get a huge spew of errors when constructing them.
kg,2012-06-15 08:02:47,https://api.github.com/repos/sq/JSIL/git/commits/9ddc49e3b92085330d908a56a0283623088264e0,9ddc49e3b92085330d908a56a0283623088264e0,"Represent construction of arrays as a special node type instead of a call to a constant method. The temporary eliminator isn't smart enough to cope with some of the edge cases otherwise, and making the method non-constant breaks field default values.
This breaks a formatting test :-("
kg,2012-06-15 07:19:49,https://api.github.com/repos/sq/JSIL/git/commits/8f9b71087c13b6316b958f11a1d45765dd03aaec,8f9b71087c13b6316b958f11a1d45765dd03aaec,"Fix handling of multiple adjacent slashes in asset paths.
Stub out System.GC memory usage query methods.
Stub out Path.GetFullPath (just returns the input path for now)
Implement GameTime.get_IsRunningSlowly."
kg,2012-06-15 07:13:43,https://api.github.com/repos/sq/JSIL/git/commits/ee33a84a36da923be738725b075505fa47069d90,ee33a84a36da923be738725b075505fa47069d90,Fix bad paths in sound bank JSON when the source sound files were outside the project directory.
kg,2012-06-15 06:37:50,https://api.github.com/repos/sq/JSIL/git/commits/77b7cf7a826f74a230c9a644b0c862e720aee1bc,77b7cf7a826f74a230c9a644b0c862e720aee1bc,Fix handling of ..\ in content projects.
kg,2012-06-14 14:23:51,https://api.github.com/repos/sq/JSIL/git/commits/1d4e8ecff3350a3c8202784a17ae5501c25eb5b1,1d4e8ecff3350a3c8202784a17ae5501c25eb5b1,Streamline HashTypeArgumentArray slightly
kg,2012-06-14 14:15:46,https://api.github.com/repos/sq/JSIL/git/commits/043db1837e5f0a605d7a57eb95c9c90dbdff9605,043db1837e5f0a605d7a57eb95c9c90dbdff9605,Simplify the cache hit path in $Of$NoInitialize.
kg,2012-06-14 13:54:18,https://api.github.com/repos/sq/JSIL/git/commits/58354f8e53f9218dc96a5932b78fe6b64a8afe32,58354f8e53f9218dc96a5932b78fe6b64a8afe32,Start simplifying overload dispatchers.
kg,2012-06-11 23:41:09,https://api.github.com/repos/sq/JSIL/git/commits/154cb8129b1e6398ccf469e6107068c9c15b5f0b,154cb8129b1e6398ccf469e6107068c9c15b5f0b,Implement KeyboardState.GetPressedKeys.
kg,2012-06-11 23:23:21,https://api.github.com/repos/sq/JSIL/git/commits/58d55e211f431137992a85d7ecd9fa6984beb548,58d55e211f431137992a85d7ecd9fa6984beb548,"Since canvas and webgl2d both have ridiculously expensive draw calls, maintain a cache of textures that each represent an entire string being drawn by SpriteBatch.DrawString. Dramatically improves performance of text rendering at the cost of some memory.
Report texture cache size in WebGL mode since it gets used now."
xen2,2012-06-11 16:13:53,https://api.github.com/repos/sq/JSIL/git/commits/043f0b6c9348be109f0f65f700190d98f02e7b02,043f0b6c9348be109f0f65f700190d98f02e7b02,"Add Enum.ToObject(Type, int) support."
xen2,2012-06-11 16:11:46,https://api.github.com/repos/sq/JSIL/git/commits/373d001048d4c6710e23b9d47bbad22febcd5abd,373d001048d4c6710e23b9d47bbad22febcd5abd,Add Type.GetElementType() and Type.IsArray.
xen2,2012-06-03 16:13:45,https://api.github.com/repos/sq/JSIL/git/commits/e8b5219046b7d5121d17e9e0004b5a1e11454a70,e8b5219046b7d5121d17e9e0004b5a1e11454a70,Add BinaryReader.ReadUInt64 and ReadInt64.
xen2,2012-06-03 16:11:59,https://api.github.com/repos/sq/JSIL/git/commits/71221441a3cf365445229283d9b13e53fb60f14c,71221441a3cf365445229283d9b13e53fb60f14c,Add FileStream.Seek and FileStream.CanSeek.
xen2,2012-06-03 16:11:08,https://api.github.com/repos/sq/JSIL/git/commits/0aac97a0ab28688e8a1ee168d003bc1af9584280,0aac97a0ab28688e8a1ee168d003bc1af9584280,"Add FileStream(string path, FileMode mode, FileAccess access) constructor."
xen2,2012-06-04 16:28:00,https://api.github.com/repos/sq/JSIL/git/commits/1561e0eba2eb116f5ee0765f673123cbbaa36814,1561e0eba2eb116f5ee0765f673123cbbaa36814,"Implemented Type.IsGenericType, Type.GetGenericTypeDefinition, Type.GetGenericArguments() and Type.MakeGenericType()."
xen2,2012-06-03 16:08:40,https://api.github.com/repos/sq/JSIL/git/commits/153b9b1759c4658386f64f1a6bdd23a5b456c536,153b9b1759c4658386f64f1a6bdd23a5b456c536,Add Type inequality operator.
xen2,2012-06-03 16:08:14,https://api.github.com/repos/sq/JSIL/git/commits/78c9da5d0a2ec31b3f576a54f3f38d75f01dd86f,78c9da5d0a2ec31b3f576a54f3f38d75f01dd86f,Add Type.IsValueType property.
xen2,2012-06-11 15:41:58,https://api.github.com/repos/sq/JSIL/git/commits/8ee375d9f204419d8d9247621f622e7337d65a48,8ee375d9f204419d8d9247621f622e7337d65a48,Default value for generic types.
xen2,2012-06-05 14:08:35,https://api.github.com/repos/sq/JSIL/git/commits/c29e4b3f5a16ba888218bd98e002a5c3a3801dc3,c29e4b3f5a16ba888218bd98e002a5c3a3801dc3,Enum comparison now uses loose equality operator.
kg,2012-06-11 07:02:20,https://api.github.com/repos/sq/JSIL/git/commits/63bdcb87de02803653e2fb6eeffe550cfb56c284,63bdcb87de02803653e2fb6eeffe550cfb56c284,Implement .ToString(format) for integers and floats.
kg,2012-06-11 06:40:03,https://api.github.com/repos/sq/JSIL/git/commits/e823ef99d3f63bd3286bd83c10b155a07798ddb3,e823ef99d3f63bd3286bd83c10b155a07798ddb3,Add basic support for commas in custom string formats
kg,2012-06-11 06:30:31,https://api.github.com/repos/sq/JSIL/git/commits/d3bd18037ed5a161e4919c6fca1e532599809e6c,d3bd18037ed5a161e4919c6fca1e532599809e6c,"Add basic support for custom numeric format strings (characters #0., quoted strings, whitespace)"
kg,2012-06-11 05:14:25,https://api.github.com/repos/sq/JSIL/git/commits/02a3fb55a62f1fcfa7b1cd88df19e050dc2a48ec,02a3fb55a62f1fcfa7b1cd88df19e050dc2a48ec,Implement the D and X string formats.
kg,2012-06-11 05:08:30,https://api.github.com/repos/sq/JSIL/git/commits/1427dccdf288c2c0e7bdcd82be178e78bfa5822d,1427dccdf288c2c0e7bdcd82be178e78bfa5822d,Fix some bugs in the F and N string formats and add tests.
kg,2012-06-11 04:54:59,https://api.github.com/repos/sq/JSIL/git/commits/df0bf4b3632da0d585cc4ab7e83694984dc2f2b8,df0bf4b3632da0d585cc4ab7e83694984dc2f2b8,Checkpoint support for junctions between virtual volumes
kg,2012-06-08 22:04:55,https://api.github.com/repos/sq/JSIL/git/commits/427a3a79cae6099b17e35d17cd0b52c561584771,427a3a79cae6099b17e35d17cd0b52c561584771,Implement the System.IO.FileModes that imply truncation and append behavior.
kg,2012-06-08 15:52:25,https://api.github.com/repos/sq/JSIL/git/commits/07db1008bdaf40f2c8e5d3460705e3440571d90e,07db1008bdaf40f2c8e5d3460705e3440571d90e,Fix HTML5 audio looping
kg,2012-06-08 03:42:15,https://api.github.com/repos/sq/JSIL/git/commits/0e232b8ae7df2d06806d301719905c0d37b38f8f,0e232b8ae7df2d06806d301719905c0d37b38f8f,Fix field initializers that refer to static methods in inheritance scenarios. Fixes secondary issue from issue #102.
kg,2012-06-07 20:06:20,https://api.github.com/repos/sq/JSIL/git/commits/9c76459868fae4424bf9cafd37c8f9ff314d5e73,9c76459868fae4424bf9cafd37c8f9ff314d5e73,"Add support for XmlSerializer assemblies that handle multiple types.
Fix wrong signature for Serialize."
kg,2012-06-07 19:42:34,https://api.github.com/repos/sq/JSIL/git/commits/b5fac813d8f14034a0323ac0d2dda5be1fbf7dce,b5fac813d8f14034a0323ac0d2dda5be1fbf7dce,Partial implementation for XmlSerializer.Serialize.
kg,2012-06-07 19:42:18,https://api.github.com/repos/sq/JSIL/git/commits/f920cb15a9bde71433d7296b1cc9876b52778b4b,f920cb15a9bde71433d7296b1cc9876b52778b4b,Fix broken codegen and implementation for type aliases.
kg,2012-06-07 16:07:55,https://api.github.com/repos/sq/JSIL/git/commits/5ce3dd8156f30ad30a28b27c5867c4a9dfab178b,5ce3dd8156f30ad30a28b27c5867c4a9dfab178b,"Partially implement file/directory enumeration for virtual volumes
Support the Create and CreateNew FileModes"
kg,2012-06-07 15:47:16,https://api.github.com/repos/sq/JSIL/git/commits/90c11ca28e40d03eb9716ce62d308e4065cc9e5a,90c11ca28e40d03eb9716ce62d308e4065cc9e5a,Improve the StorageDevice/StorageContainer stubs
kg,2012-06-07 15:37:55,https://api.github.com/repos/sq/JSIL/git/commits/cee85b49844746bad11eff8b6004af243882192a,cee85b49844746bad11eff8b6004af243882192a,Fix field initialization for open generic parameters
kg,2012-06-07 15:31:30,https://api.github.com/repos/sq/JSIL/git/commits/f478823ee2c6dfd98ba1db391469b60afdbcb7da,f478823ee2c6dfd98ba1db391469b60afdbcb7da,Add support for naming localstorage volumes.
kg,2012-06-07 15:22:05,https://api.github.com/repos/sq/JSIL/git/commits/5201330192c05a71361021117dfedd83774f9b61,5201330192c05a71361021117dfedd83774f9b61,Stub out ReadContentAsString
kg,2012-06-07 15:11:02,https://api.github.com/repos/sq/JSIL/git/commits/c46e0a17601d4484cc6e79360fd4731d734fcdbe,c46e0a17601d4484cc6e79360fd4731d734fcdbe,Fix some SoundEffect volume/loop control bugs
kg,2012-06-07 14:26:36,https://api.github.com/repos/sq/JSIL/git/commits/f3099aa00a3298776a4a1899055b5cba0ad11d88,f3099aa00a3298776a4a1899055b5cba0ad11d88,Implement XmlWriter.WriteElementString
kg,2012-06-07 14:22:39,https://api.github.com/repos/sq/JSIL/git/commits/c7c7811b144a64328db922c046f9077d859e8452,c7c7811b144a64328db922c046f9077d859e8452,"Implement XmlWriter.WriteAttributeString
Fix StorageContainer.CreateFile"
kg,2012-06-07 14:12:48,https://api.github.com/repos/sq/JSIL/git/commits/250b427ca77459243887827a57e8088d6377f7f3,250b427ca77459243887827a57e8088d6377f7f3,Implement XmlWriter.WriteString
kg,2012-06-07 14:04:57,https://api.github.com/repos/sq/JSIL/git/commits/2d7bf93a4e5cd0dfcb60494c79b26edf2a116950,2d7bf93a4e5cd0dfcb60494c79b26edf2a116950,Fix encoding nonsense for basic XMLWriter test case.
kg,2012-06-07 13:50:31,https://api.github.com/repos/sq/JSIL/git/commits/1b2389a1311b767e0bd273b13f1d6bca8e1c1fca,1b2389a1311b767e0bd273b13f1d6bca8e1c1fca,"Initialize fields from base classes when initializing fields from a derived class. Fixes fields from open base classes not being initialized. Fixes issue #102.
Checkpoint work on XMLWriter and virtual storage implementation."
kg,2012-06-05 13:26:35,https://api.github.com/repos/sq/JSIL/git/commits/eba33c1dd7edf2cfe70f00abce899a3c1c0700fb,eba33c1dd7edf2cfe70f00abce899a3c1c0700fb,"Add basic support for reading/writing files from virtual storage.
Add a localStorage backend for virtual storage.
Implement XNA StorageContainer.OpenFile via virtual storage."
kg,2012-06-05 12:16:22,https://api.github.com/repos/sq/JSIL/git/commits/49ba0b01b9d0aabc9e843b9bd4f62a5858ea4d7d,49ba0b01b9d0aabc9e843b9bd4f62a5858ea4d7d,"Some work on actual file storage
Allow specifying the path to the root directory
Replace backslashes with forward slashes in paths"
kg,2012-06-05 11:34:13,https://api.github.com/repos/sq/JSIL/git/commits/9dc196b34d625919728968684d2c23317d2ab085,9dc196b34d625919728968684d2c23317d2ab085,Maintain a list of inodes in VirtualVolume instances that can be used to reconstruct the volume structure
kg,2012-06-05 10:51:11,https://api.github.com/repos/sq/JSIL/git/commits/7fe0ca058ec93c4efb20a5864e21682d8be522a7,7fe0ca058ec93c4efb20a5864e21682d8be522a7,Add createFile method for creating a file within an existing directory.
kg,2012-06-05 10:45:36,https://api.github.com/repos/sq/JSIL/git/commits/709922bbef7d8e6394de65cb4352c6fccb8397d9,709922bbef7d8e6394de65cb4352c6fccb8397d9,"Add VirtualVolume.createDirectory for creating nested directory hierarchies
Lowercase file/directory names when placing them into a directory's files/directories collections"
kg,2012-06-05 10:39:14,https://api.github.com/repos/sq/JSIL/git/commits/2328c2e0e821dabbffb8bcb0de1a1eeeac1a1f2d,2328c2e0e821dabbffb8bcb0de1a1eeeac1a1f2d,Checkpoint beginning of a StorageContainer implementation
kg,2012-06-05 09:49:52,https://api.github.com/repos/sq/JSIL/git/commits/2c3a7fff9a4daaf7b10a30bf769937ec8c49a98e,2c3a7fff9a4daaf7b10a30bf769937ec8c49a98e,"Don't generate field, property and interface definitions in skeletons
Add ?forceSetTimeout query parameter to force-disable requestAnimationFrame"
kg,2012-06-04 10:16:47,https://api.github.com/repos/sq/JSIL/git/commits/1f3fbf148f7b26b7a6a416e38e833d6f03f02aab,1f3fbf148f7b26b7a6a416e38e833d6f03f02aab,Fix MemberwiseClone calls being generated for .GetEnumerator() on dictionary keys/values collections.
kg,2012-06-04 09:28:15,https://api.github.com/repos/sq/JSIL/git/commits/02ae90daef252f39e890b16b2ca343cf0cd96064,02ae90daef252f39e890b16b2ca343cf0cd96064,"Fix fullscreen mode for demos with resized canvases that don't manually set viewport geometry.
Preserve aspect ratio in fullscreen mode.
Add support for only selecting integral scale ratios in fullscreen mode.
Add support for overriding the original screen width/height in fullscreen mode (if you have a resized canvas)."
kg,2012-06-03 19:51:35,https://api.github.com/repos/sq/JSIL/git/commits/37633c302eb041df6496d7be7b742949a8c2fc4a,37633c302eb041df6496d7be7b742949a8c2fc4a,"Fix various viewport/transform mixups in canvas and webgl modes.
Fix various fullscreen bugs in canvas and webgl modes."
kg,2012-06-03 19:12:56,https://api.github.com/repos/sq/JSIL/git/commits/b6e86b91b2f924dcea8bc3515eb44bfd09fcc79a,b6e86b91b2f924dcea8bc3515eb44bfd09fcc79a,Disable WebGL for the mannux demo since WebGL-2d seems to be slower than firefox and chrome's canvas implementations for it
kg,2012-06-03 19:07:45,https://api.github.com/repos/sq/JSIL/git/commits/6b6decdd8386395aaaa0f027df229c950e246d77,6b6decdd8386395aaaa0f027df229c950e246d77,More miscellaneous tuning
kg,2012-06-03 18:51:18,https://api.github.com/repos/sq/JSIL/git/commits/179c207c2dcaacc5c065b4da305ce9e31b3dfdf1,179c207c2dcaacc5c065b4da305ce9e31b3dfdf1,"When creating types, generate the public interface function based on the precise characteristics of the type so that it's more efficient. Improves the performance of the common use case for object construction (MethodSignature.Construct and CreateInstanceOfType are still slow).
Don't use CreateInstanceOfType in struct field initializers anymore since the default ctor should be faster."
kg,2012-06-03 14:53:08,https://api.github.com/repos/sq/JSIL/git/commits/78fe519262691540927e09f3f8bf75efffd49164,78fe519262691540927e09f3f8bf75efffd49164,Detect broken Opera XHR implementation and try to work around it.
kg,2012-06-03 14:04:56,https://api.github.com/repos/sq/JSIL/git/commits/229e8cc5873fb12fac6ea19b27bd8698cc3ac743,229e8cc5873fb12fac6ea19b27bd8698cc3ac743,Allow forcing use of canvas instead of WebGL by appending '?forceCanvas' to a game URL.
kg,2012-06-03 12:54:53,https://api.github.com/repos/sq/JSIL/git/commits/52f0e735c6ddd21257d068bdafc7920ad0854195,52f0e735c6ddd21257d068bdafc7920ad0854195,"Improve SpriteBatch deferred modes to avoid creating garbage for each draw call by pooling the entry objects
Improve accuracy of deferred draw call sorting in SpriteBatch"
kg,2012-06-03 12:01:00,https://api.github.com/repos/sq/JSIL/git/commits/322faac3bcabef3200a22b6e9371403c5923ce07,322faac3bcabef3200a22b6e9371403c5923ce07,"Hide the render targets in the Sully demo since having them visible breaks image smoothing in webkit
Improve performance of cached image channels so that rendering of tinted images in canvas is faster"
kg,2012-06-03 11:24:15,https://api.github.com/repos/sq/JSIL/git/commits/69e746bc597580f737871ef2f99ca2192cb6dbd3,69e746bc597580f737871ef2f99ca2192cb6dbd3,"When omitting a type declaration for a mscorlib type, generate a type alias so GetTypeByName can still find the type.
Fix crazy bug where class types can be erroneously marked as struct types if the name of the base class is precisely the right length.
Fix Activator.CreateInstance not invoking constructors if passed a null argument list."
kg,2012-06-03 08:26:22,https://api.github.com/repos/sq/JSIL/git/commits/8277bea89f1d282df3e66e461a15b0095d3c3b19,8277bea89f1d282df3e66e461a15b0095d3c3b19,Fix some bad typerefs in the XNA stubs.
kg,2012-06-03 08:15:02,https://api.github.com/repos/sq/JSIL/git/commits/fe6a63447b231ca02dadeeef0b35e3d044bc5007,fe6a63447b231ca02dadeeef0b35e3d044bc5007,Fix field initialization forming type initialization cycles.
kg,2012-06-03 08:01:57,https://api.github.com/repos/sq/JSIL/git/commits/bab1d54bb2141724b28828db8141d058e006b099,bab1d54bb2141724b28828db8141d058e006b099,"Automatically generate default values for instance fields instead of explicitly generating the new-expression/default literal.
Fix up field types when closing generic types.
Add a test covering a case where a field's default value wasn't expressible in the interface builder context.
Fix JSIL.DefaultValue for delegates."
kg,2012-06-03 05:23:36,https://api.github.com/repos/sq/JSIL/git/commits/5a926f4e9ea507be6fc697b81c5c59aee68458d5,5a926f4e9ea507be6fc697b81c5c59aee68458d5,Performance tuning.
kg,2012-06-02 08:50:28,https://api.github.com/repos/sq/JSIL/git/commits/58328879a0ba78359fe743c577e81e4ba5c24fd6,58328879a0ba78359fe743c577e81e4ba5c24fd6,Hoist the exception throwing out of rangeCheckImpl. Improves performance in some JS implementations.
kg,2012-06-02 07:54:26,https://api.github.com/repos/sq/JSIL/git/commits/6a516de2b329c93facdf99d26965d6424de2b456,6a516de2b329c93facdf99d26965d6424de2b456,"Further optimizations to Is/As
Optimize ArrayEnumerator.MoveNext"
kg,2012-06-02 07:44:32,https://api.github.com/repos/sq/JSIL/git/commits/3faf3851d4f88a335d1cadb5d0184350ee84c446,3faf3851d4f88a335d1cadb5d0184350ee84c446,"Improve MakeCastMethods to generate implementations based on type characteristics for better performance.
Remove JSIL.CheckType/.TryCast/.Cast."
kg,2012-06-02 06:57:44,https://api.github.com/repos/sq/JSIL/git/commits/43fddf306eec7b1311d907eee57418b13e4b290c,43fddf306eec7b1311d907eee57418b13e4b290c,Clean up some direct references to JSIL.Cast/TryCast/CheckType
kg,2012-06-02 06:39:35,https://api.github.com/repos/sq/JSIL/git/commits/9c5e1c8f49c34f294cf303bbf061a551f6602724,9c5e1c8f49c34f294cf303bbf061a551f6602724,Replace most uses of JSIL.Cast/.TryCast/.CheckType with the new type.$Cast/$As/$Is methods.
kg,2012-06-02 06:34:08,https://api.github.com/repos/sq/JSIL/git/commits/2a050e10b232452517fffe02e71b1c92f27b1a04,2a050e10b232452517fffe02e71b1c92f27b1a04,"Replace JSIL.Cast(x, y), JSIL.TryCast(x, y) and JSIL.CheckType(x, y) with y.$Cast(x), y.$As(x), y.$Is(x)."
kg,2012-06-02 06:20:15,https://api.github.com/repos/sq/JSIL/git/commits/4a26355a4233123a648d481eb2da1d86290fbd57,4a26355a4233123a648d481eb2da1d86290fbd57,Replace the JSIL.Cast/TryCast/CheckType special identifiers with expression nodes.
kg,2012-05-31 14:14:31,https://api.github.com/repos/sq/JSIL/git/commits/d8b928b93834a4f47ac5c54286366b4f0c2386ec,d8b928b93834a4f47ac5c54286366b4f0c2386ec,Add the JSImmutable attribute which can be applied to a field in order to eliminate struct copies for reads from it and writes to it.
kg,2012-05-31 12:14:47,https://api.github.com/repos/sq/JSIL/git/commits/6349d6489e7f9e2f826e466d69bfa5a3ce8158eb,6349d6489e7f9e2f826e466d69bfa5a3ce8158eb,"Optimize JSIL.CheckType, JSIL.TryCast and JSIL.Cast.
Inline type assignability checks in the three places where they are used.
Add JSIL.IsSystemArray for checking to see whether a value is a .NET array (versus JSIL.IsArray, which checks to see whether a value is a JS array)."
kg,2012-05-31 10:59:31,https://api.github.com/repos/sq/JSIL/git/commits/c99ec6a70dfaacd2239c8648fc31b1ea47f516e8,c99ec6a70dfaacd2239c8648fc31b1ea47f516e8,"Fix static analyzer to treat byref passing of a variable as a mutation
Fix static analyzer treating all reference-taking of struct variables as byref passing of that variable"
kg,2012-05-31 10:20:40,https://api.github.com/repos/sq/JSIL/git/commits/f25545d8ae08fe07690425dfe635ec1d39b4e05f,f25545d8ae08fe07690425dfe635ec1d39b4e05f,"Update the old static analyzer to count the number of mutations to each variable and consider a local variable as not modified if it is only ever mutated once (i.e. assigned and then left alone).
Expand struct copy optimizations to elide copies if a variable is assigned once but never mutated."
kg,2012-05-31 09:13:52,https://api.github.com/repos/sq/JSIL/git/commits/5e86337c40579efba64c79ecb287863c5d82832e,5e86337c40579efba64c79ecb287863c5d82832e,"When a HTML5 sound fails to load, replace it with a null sound asset. Allows demos to work in Internet Explorer even if they use lots of sounds."
kg,2012-05-31 08:23:16,https://api.github.com/repos/sq/JSIL/git/commits/11f051719a681d85a51e118c894803a7b14f3837,11f051719a681d85a51e118c894803a7b14f3837,Improve browser preloader UX a little
kg,2012-05-31 07:37:41,https://api.github.com/repos/sq/JSIL/git/commits/a02ca75d45af6c0a9a95129fe4b309495f15286b,a02ca75d45af6c0a9a95129fe4b309495f15286b,"Clean up handling of failed type resolution.
Fix XNA3 graphics fallback.
Fix mscorlib 4 reference in Hud.xnb (from building Platformer in VS2010 instead of VS2008)"
kg,2012-05-31 06:45:29,https://api.github.com/repos/sq/JSIL/git/commits/6ce9961ba682102c8cc66448b1c4c4b1048e8dfc,6ce9961ba682102c8cc66448b1c4c4b1048e8dfc,"Always use lazy method group construction for types in the System namespace to prevent cyclical dependencies.
Detect duplicate declarations of assemblies.
Detect failed ResolveName.define invocations.
Don't invoke property getters in ResolvedName.exists() or JSIL.ResolveName.
No longer derive assembly objects from Windows.
Derive the assembly object for mscorlib from the assembly object for jsilcore so that they share a namespace.
Allow inheritance when resolving names in a few spots so that namespace sharing between mscorlib/jsilcore works.
Don't generate type definitions for objects essential to the JSIL type system, in order to prevent conflicts between mscorlib and JSIL.Core."
kg,2012-05-31 04:36:23,https://api.github.com/repos/sq/JSIL/git/commits/d43e64488efd0502300b8397cc8e399595445198,d43e64488efd0502300b8397cc8e399595445198,"Stop treating all generic parameters as AnyType in MemberIdentifiers.
Add a TypeUtil method for expanding positional generic parameters into named generic parameters.
Improve precision of TypesAreEqual for generic parameters.
Distinguish between ignored members and members with no type information.
Take generic parameters into account when comparing method signatures."
kg,2012-05-31 04:35:17,https://api.github.com/repos/sq/JSIL/git/commits/3ea3c2b835ad6b6c52982cc58f305ce9ab7de2b2,3ea3c2b835ad6b6c52982cc58f305ce9ab7de2b2,Allow configuring the snippet compiler to preserve temp files.
kg,2012-05-31 04:34:45,https://api.github.com/repos/sq/JSIL/git/commits/d497694b5816647547ca1e3588c8512ff28c8434,d497694b5816647547ca1e3588c8512ff28c8434,Ignore a few Microsoft assemblies for faster translation runs.
kg,2012-05-31 03:35:11,https://api.github.com/repos/sq/JSIL/git/commits/796536bdfcdc75c1e2c1acc98b3b57626e301af1,796536bdfcdc75c1e2c1acc98b3b57626e301af1,Add other test case from issue #98.
kg,2012-05-31 03:18:47,https://api.github.com/repos/sq/JSIL/git/commits/41e048f18216a1cb70946c3f48e5c695f096dfb1,41e048f18216a1cb70946c3f48e5c695f096dfb1,Consider generic argument lists in addition to normal argument lists when deciding whether to use fast overload dispatch. Fixes issue #98.
kg,2012-05-30 20:06:47,https://api.github.com/repos/sq/JSIL/git/commits/2afc37006016d87aa8d6c8de03241066ddf6e493,2afc37006016d87aa8d6c8de03241066ddf6e493,Fix uses of .Current/.MoveNext to be .IEnumerator_Current and .IEnumerator_MoveNext. Fixes issue #99.
kg,2012-05-30 08:45:47,https://api.github.com/repos/sq/JSIL/git/commits/d937ad4bcadc3b994a29c210c71ffc353fd64d6f,d937ad4bcadc3b994a29c210c71ffc353fd64d6f,Detect attempts to suppress texture resampling and try to honor them in SamplerStateCollection and SpriteBatch.
kg,2012-05-30 07:07:25,https://api.github.com/repos/sq/JSIL/git/commits/64ed4185e41597b62a42ecb503def26b99b03b1d,64ed4185e41597b62a42ecb503def26b99b03b1d,Implement String.PadLeft and PadRight
kg,2012-05-30 06:47:14,https://api.github.com/repos/sq/JSIL/git/commits/a377a00ed48d2cbbfebdd01e8a3108957065652a,a377a00ed48d2cbbfebdd01e8a3108957065652a,Disable lazy method group creation. This reduces JS heap size in v8 and firefox.
kg,2012-05-30 06:36:30,https://api.github.com/repos/sq/JSIL/git/commits/29aa68bddf6a2a4ae580fe07b89e82ebe4630aa2,29aa68bddf6a2a4ae580fe07b89e82ebe4630aa2,Host page updates
kg,2012-05-30 06:05:33,https://api.github.com/repos/sq/JSIL/git/commits/1e25da39c154922ea3d40f337bdc0084860f509f,1e25da39c154922ea3d40f337bdc0084860f509f,Implement GameWindow.set_Title/get_Title
kg,2012-05-30 06:03:15,https://api.github.com/repos/sq/JSIL/git/commits/9ec262ddbab67f8d2d11fdde1777550d34cd156f,9ec262ddbab67f8d2d11fdde1777550d34cd156f,Suppress frameskip on first frame
kg,2012-05-30 05:57:09,https://api.github.com/repos/sq/JSIL/git/commits/f478593585a7a424774a4ad6d8bef4856612f881,f478593585a7a424774a4ad6d8bef4856612f881,"Fix ObjectEquals on strings
Don't call Number() on enums in SpriteBatch"
kg,2012-05-30 05:49:20,https://api.github.com/repos/sq/JSIL/git/commits/b8fd9eaec0e85280b78aa410595eab566c1abe66,b8fd9eaec0e85280b78aa410595eab566c1abe66,Fix System.Array not being initialized in the Of implementation.
kg,2012-05-30 05:44:20,https://api.github.com/repos/sq/JSIL/git/commits/85bb66947c5635a67d337606c59c607711a83672,85bb66947c5635a67d337606c59c607711a83672,Stub out get_UpdateOrder and get_DrawOrder
kg,2012-05-30 05:38:58,https://api.github.com/repos/sq/JSIL/git/commits/0a7038c8157d8720158b6b40db9bcc16b71e7ef0,0a7038c8157d8720158b6b40db9bcc16b71e7ef0,"Fix 'asset was not built' error for XACT project files.
Minor library performance tweaks.
Detect and handle PNGQuant crashes.
Update demo content.
Fix failure if AllowWebGL is not set"
kg,2012-05-30 04:29:34,https://api.github.com/repos/sq/JSIL/git/commits/d670312beb92b4129217d88b85c71dca968f98e9,d670312beb92b4129217d88b85c71dca968f98e9,Whoops. Nested initializer fix was incomplete.
kg,2012-05-30 04:14:32,https://api.github.com/repos/sq/JSIL/git/commits/039c5a88561e48fd9f8434665624710cb0d5bc9a,039c5a88561e48fd9f8434665624710cb0d5bc9a,"Fix translation of nested initializers and add a test.
Implement basic forms of Debug.Assert.
Implement DrawOrder/UpdateOrder for XNA components."
kg,2012-05-30 02:49:43,https://api.github.com/repos/sq/JSIL/git/commits/8824b6bdd8e5264330bfd525eeaa10f5723e28ed,8824b6bdd8e5264330bfd525eeaa10f5723e28ed,"Merge branch 'interface_overloading'

Conflicts:
	build_skeletons.bat"
kg,2012-05-30 02:48:28,https://api.github.com/repos/sq/JSIL/git/commits/8a5b0f368694e5547c9d2ac5263118b40b6a9bd6,8a5b0f368694e5547c9d2ac5263118b40b6a9bd6,Check in some demo skeleton files
kg,2012-05-29 09:19:25,https://api.github.com/repos/sq/JSIL/git/commits/7b842a3041b01256c35f4a06444aaa3fd1acd691,7b842a3041b01256c35f4a06444aaa3fd1acd691,Explicitly sort enum members when generating enum definitions.
kg,2012-05-29 09:06:58,https://api.github.com/repos/sq/JSIL/git/commits/33a64001e20c9e2e415f6d25bf1fc8c831ea460f,33a64001e20c9e2e415f6d25bf1fc8c831ea460f,"Performance tweaks to runtime lib functions.
Fix generic parameters having integral type IDs instead of string type IDs. Helps SpiderMonkey.
Fix wrong signatures for AppendLine."
kg,2012-05-29 08:37:29,https://api.github.com/repos/sq/JSIL/git/commits/4dfc637afc2616938780e140a1ad9d19f16c715e,4dfc637afc2616938780e140a1ad9d19f16c715e,"Implement StringBuilder.AppendLine
Fix an error condition in JSIL.XML for attributes"
kg,2012-05-29 07:20:09,https://api.github.com/repos/sq/JSIL/git/commits/fbc29e6a7048662d8705d25968ad41f54f42c858,fbc29e6a7048662d8705d25968ad41f54f42c858,"Fix getter/setter methods from JSNeverReplace proxy properties/events replacing existing getter/setter methods.
Add a JSReplaceConstructor attribute you can use to force a proxy's constructor to replace the original type's constructor (this is normally not possible due to compiler-generated constructors getting in the way)."
kg,2012-05-29 06:50:09,https://api.github.com/repos/sq/JSIL/git/commits/ac42e81b9d14c7b1b3d1576e67dcd7d612e94558,ac42e81b9d14c7b1b3d1576e67dcd7d612e94558,"Implement XmlReader.ReadElementContentAsString
Improve performance and correctness of .Equals for ValueTypes"
kg,2012-05-29 05:48:08,https://api.github.com/repos/sq/JSIL/git/commits/a48a2e18667aeced894328c2e6ad955ee9510586,a48a2e18667aeced894328c2e6ad955ee9510586,"Fix dumb error in ParseInt and make it throw when given an invalid integer
Fix overloaded invocations of new String()
Unify handling of default values between JSIL.Array.New and JSIL.DefaultValue.
Correctly handle the default value for chars.
Implement List.Sort(IComparer) and List.Sort(IComparer<T>).
Implement Rectangle.Contains(Rectangle)."
kg,2012-05-29 05:16:55,https://api.github.com/repos/sq/JSIL/git/commits/d848d2d9975cd5a1a9491ab9420ba6ac71f71593,d848d2d9975cd5a1a9491ab9420ba6ac71f71593,"Fix Array.Clone and Array.CopyTo for multidimensional arrays
Implement Environment.get_NewLine
Fix multidimensional arrays not using the same default value rules as single-dimensional arrays
Fix JSIL.Cast for multidimensional arrays (note: does not assert that the elements are the same type)
Stub out some more XNA methods"
kg,2012-05-29 04:55:53,https://api.github.com/repos/sq/JSIL/git/commits/afbb7f2e331bad62168b48596d57144dcd70fad5,afbb7f2e331bad62168b48596d57144dcd70fad5,"Stub out some GameWindow methods/properties
Unify the Game proxy file"
kg,2012-05-29 04:36:19,https://api.github.com/repos/sq/JSIL/git/commits/b02a7d7cf156684856b64c3e128122d0123d0bbf,b02a7d7cf156684856b64c3e128122d0123d0bbf,"Add partial support for the ColorKey content processor parameter.
Update PNGQuant.
Stub out parts of System.Windows.Forms.Screen."
kg,2012-05-29 03:03:01,https://api.github.com/repos/sq/JSIL/git/commits/a1dcc827e2051dc9e3274145fb6c0069e13547fd,a1dcc827e2051dc9e3274145fb6c0069e13547fd,Update ignores
kg,2012-05-29 02:12:21,https://api.github.com/repos/sq/JSIL/git/commits/19f1414dff03839b306b31988fec10ef81a45c54,19f1414dff03839b306b31988fec10ef81a45c54,Simplify generated code for interface definitions
kg,2012-05-29 02:03:02,https://api.github.com/repos/sq/JSIL/git/commits/d56e9ba9bf3d7d594c251c34972bcce3b4f95f7b,d56e9ba9bf3d7d594c251c34972bcce3b4f95f7b,Update IList/ICollection to new interface format
kg,2012-05-29 01:52:09,https://api.github.com/repos/sq/JSIL/git/commits/3248b54a440c673b52b9fa0258868e3be1292b6e,3248b54a440c673b52b9fa0258868e3be1292b6e,"Merge branch 'interface_overloads' of github.com:xen2/JSIL into interface_overloading

Conflicts:
	Tests/Tests.csproj
	build_skeletons.bat"
kg,2012-05-29 01:47:36,https://api.github.com/repos/sq/JSIL/git/commits/c6f6732f1b18f5f9788273892ae7f2a0f8597e86,c6f6732f1b18f5f9788273892ae7f2a0f8597e86,"Merge branch 'master' of github.com:xen2/JSIL

Conflicts:
	build_skeletons.bat"
kg,2012-05-29 01:39:46,https://api.github.com/repos/sq/JSIL/git/commits/485e094c71d040fb89948b44e2ab3551256e8d5a,485e094c71d040fb89948b44e2ab3551256e8d5a,Fix broken merge artifact
matra774,2012-05-21 14:44:58,https://api.github.com/repos/sq/JSIL/git/commits/8d35cdeadb8e2fa1580498ae1eb3b7cccdc3dbf3,8d35cdeadb8e2fa1580498ae1eb3b7cccdc3dbf3,"Implemented set_Item for collections (List<T>,ArrayList). List<T> now implements IList<T>"
matra774,2012-05-10 21:03:13,https://api.github.com/repos/sq/JSIL/git/commits/07240975bdec5e35af0573088f23428fa2e835c3,07240975bdec5e35af0573088f23428fa2e835c3,Added tests for Enum comparison in anonymous methods
matra774,2012-05-09 21:19:36,https://api.github.com/repos/sq/JSIL/git/commits/df27a21c06c66213f6b712fe29ffe4af67b129c6,df27a21c06c66213f6b712fe29ffe4af67b129c6,"List<T>: implemented Insert and tests for IndexOf, Contains"
matra774,2012-05-09 21:18:35,https://api.github.com/repos/sq/JSIL/git/commits/9cf027dbea563c91b60d08b24cde73b805fd5c2d,9cf027dbea563c91b60d08b24cde73b805fd5c2d,Implemented ICollection<T> for List<T>. CopyTo currently does not support non-zero index. I hope I get the ICollection<T>.IsReadonly property declaration right
matra774,2012-05-07 21:46:02,https://api.github.com/repos/sq/JSIL/git/commits/e30c5ddee4dbc77cfed58f867f7960e81e8ff6f2,e30c5ddee4dbc77cfed58f867f7960e81e8ff6f2,"Implemented basic unit test for Dictionary. Complex version of test has commented out sections, that are not yet supported (Dictionary.Keys, Dictionary.Values)"
matra774,2012-05-07 21:02:19,https://api.github.com/repos/sq/JSIL/git/commits/6d335f753ce523482cb5d86f2f0d99c751d4a81d,6d335f753ce523482cb5d86f2f0d99c751d4a81d,Added ListToArray unit test
matra774,2012-05-07 20:40:19,https://api.github.com/repos/sq/JSIL/git/commits/46fdffb172bfb502c6a96f757707d3fdcaee976f,46fdffb172bfb502c6a96f757707d3fdcaee976f,Added test for 2d array
matra774,2012-05-07 20:30:03,https://api.github.com/repos/sq/JSIL/git/commits/af3dd2890cf827f359efb97b9a7ebe92075f744c,af3dd2890cf827f359efb97b9a7ebe92075f744c,Tests for List<T> constructors (By matra774)
kg,2012-05-27 08:47:15,https://api.github.com/repos/sq/JSIL/git/commits/5b8d43eeb3429e0dc7f57963264a1d63e61434ae,5b8d43eeb3429e0dc7f57963264a1d63e61434ae,"Implement Interlocked.CompareExchange(ref Int32, Int32, Int32). Fixes issue #90."
kg,2012-05-27 08:35:47,https://api.github.com/repos/sq/JSIL/git/commits/df56875d51d7d59cdb2f6e053db2c6a3ca921c18,df56875d51d7d59cdb2f6e053db2c6a3ca921c18,Fix .GetType() for booleans. Fixes issue #91.
kg,2012-05-18 16:28:07,https://api.github.com/repos/sq/JSIL/git/commits/703cefdbb4379dec2f8e708f9ad8a741765c0fab,703cefdbb4379dec2f8e708f9ad8a741765c0fab,"Merge pull request #88 from Expro/master

Add a simple example and starter project that can be used when building JSIL applications."
kg,2012-05-18 16:16:15,https://api.github.com/repos/sq/JSIL/git/commits/68c8d470601a9350be1559068d0dc407ffef667e,68c8d470601a9350be1559068d0dc407ffef667e,Pull default proxy assembly loading out into a static function
matra774,2012-05-16 20:32:55,https://api.github.com/repos/sq/JSIL/git/commits/97c736a1546c2905df225e334ece135a1f1b3874,97c736a1546c2905df225e334ece135a1f1b3874,Added config setting UseDefaultProxies which controls weather to include JSIL.Proxies.*.dll. See issue #92
kg,2012-05-15 15:04:03,https://api.github.com/repos/sq/JSIL/git/commits/432d3fb107aca6a61b78044dc76674180d961802,432d3fb107aca6a61b78044dc76674180d961802,"Stub out some StorageDevice and StorageContainer methods.
Include the Storage library when building skeletons.
Use the name $xnaasms for the assembly references in the XNA libraries so collisions with $asms from user-translated code don't occur."
kg,2012-05-15 14:25:17,https://api.github.com/repos/sq/JSIL/git/commits/fa6fa3808e6e73627f7669218d54d589395a44d5,fa6fa3808e6e73627f7669218d54d589395a44d5,Implement Boolean.Parse and Boolean.TryParse
kg,2012-05-15 14:18:23,https://api.github.com/repos/sq/JSIL/git/commits/07e0474a8fa42c1c47ef654f622fc8852276acfc,07e0474a8fa42c1c47ef654f622fc8852276acfc,"Make JSIL.Host.translateFilename cope better with weird paths.
Implement File.OpenRead.
Implement Path.GetDirectoryName.
Partial implementation of volume control for sounds.
Partial implementation of SoundEffect.CreateInstance.
Give all assemblies a Location property that evaluates to """".
Implement XmlReader.get_Item."
kg,2012-05-15 13:28:52,https://api.github.com/repos/sq/JSIL/git/commits/50a59a07aee982d1642942136c3f0cf91f220c6c,50a59a07aee982d1642942136c3f0cf91f220c6c,Fix fields with default values that are an array expression or an invocation expression
kg,2012-05-15 13:23:05,https://api.github.com/repos/sq/JSIL/git/commits/b1aacc223704ae8bf0af6ffb294b824da7ec5196,b1aacc223704ae8bf0af6ffb294b824da7ec5196,Fix default(char) translating as 'new System.Char()' instead of a value literal.
kg,2012-05-15 12:57:02,https://api.github.com/repos/sq/JSIL/git/commits/9abfbe04711a333c42d4be863850f42d5685fea7,9abfbe04711a333c42d4be863850f42d5685fea7,Submodules :|
kg,2012-05-15 12:55:52,https://api.github.com/repos/sq/JSIL/git/commits/4bb95228cd9ee4fdc45e90ed81d5014812ef34c6,4bb95228cd9ee4fdc45e90ed81d5014812ef34c6,Handle more cases where field default values have dependencies on each other.
kg,2012-05-14 17:48:16,https://api.github.com/repos/sq/JSIL/git/commits/7b607b57d9905f20a7dca26b364613376df95f7f,7b607b57d9905f20a7dca26b364613376df95f7f,"Partially implement GraphicsDevice.get_DisplayMode.
Register a global error handler in JSIL.Browser that prints a warning to the log element so that users without debuggers will know something happened."
kg,2012-05-14 17:34:18,https://api.github.com/repos/sq/JSIL/git/commits/132e0374594f3791f9989843e66400270eae3dfc,132e0374594f3791f9989843e66400270eae3dfc,"Detect PNGQuant failures and use the original, unquantized PNG."
kg,2012-05-14 17:16:27,https://api.github.com/repos/sq/JSIL/git/commits/8e7f885566267d74a292fb52315488f07fda34e9,8e7f885566267d74a292fb52315488f07fda34e9,Switch to a new method for locating XNB files built by content projects that is able to handle particularly unusual/broken project configurations.
kg,2012-05-14 12:16:21,https://api.github.com/repos/sq/JSIL/git/commits/0149a74ed3fc2022d882b138e06e06738b1d64a1,0149a74ed3fc2022d882b138e06e06738b1d64a1,Fix mangled output directories for the XNA3 and XNA4 profiles.
xen2,2012-05-10 17:25:20,https://api.github.com/repos/sq/JSIL/git/commits/6777d3f3037707afdd81e4060adf41a17b312a42,6777d3f3037707afdd81e4060adf41a17b312a42,Support for method overloads in interfaces.
xen2,2012-05-08 16:57:02,https://api.github.com/repos/sq/JSIL/git/commits/f430046692df862c6f6ffa850822d8e23f271982,f430046692df862c6f6ffa850822d8e23f271982,Implemented List<T>.Insert
xen2,2012-05-13 12:35:20,https://api.github.com/repos/sq/JSIL/git/commits/00907ccaa904c5b45abebaecbc740dded36625fe,00907ccaa904c5b45abebaecbc740dded36625fe,Build Skeletons batch file: use relative path.
matra774,2012-05-06 20:32:05,https://api.github.com/repos/sq/JSIL/git/commits/36498cbd5a942f83587eafd031ec6f9ca5a6e6a5,36498cbd5a942f83587eafd031ec6f9ca5a6e6a5,"Ups, forgotten commit for the new test cases (both for array and string)"
matra774,2012-05-06 20:31:11,https://api.github.com/repos/sq/JSIL/git/commits/e5b5e3e773ba77e67932a20cc3d06c3c78ab82ea,e5b5e3e773ba77e67932a20cc3d06c3c78ab82ea,TestUtil now prints out more detailed error message
matra774,2012-05-06 20:30:36,https://api.github.com/repos/sq/JSIL/git/commits/1c9b7cf8bbc6308fd3e2c6e34a32dc8aa87a5897,1c9b7cf8bbc6308fd3e2c6e34a32dc8aa87a5897,"Implemented String.Contains, String.ToLowerInvariant, String.ToUpperInvariant Tests for existing: String.Split, String.IsNullOrEmpty, String.SubString"
matra774,2012-05-06 20:24:21,https://api.github.com/repos/sq/JSIL/git/commits/30e85658b2c2729e469c92ac00d898a37d4cd1e9,30e85658b2c2729e469c92ac00d898a37d4cd1e9,"Implemented Array.LongLength and Array.Resize (with external method and not as part of MultiDimensionalArray, since I am not sure how to get type info into JsREplacement function)"
kg,2012-05-04 17:43:41,https://api.github.com/repos/sq/JSIL/git/commits/96f25f5eca40c444d523c7b37be81af022670756,96f25f5eca40c444d523c7b37be81af022670756,"If an overloaded/hidden method is defined in a generic class, ensure it has an explicit this-reference during invocation since argument types alone may not result in the invocation of the correct method. Fixes issue #85."
kg,2012-05-03 04:52:45,https://api.github.com/repos/sq/JSIL/git/commits/94ac9815710481d9bc1fdef1a4ce98be670c99d6,94ac9815710481d9bc1fdef1a4ce98be670c99d6,Never eliminate temporary struct variables. Fixes issue #86.
kg,2012-05-02 04:22:53,https://api.github.com/repos/sq/JSIL/git/commits/271d3a940ec34bd8eae4c4224d6eff1c33aa59a2,271d3a940ec34bd8eae4c4224d6eff1c33aa59a2,"Checkpoint more work on barriers.
Expand test coverage for generic interfaces."
kg,2012-05-02 03:59:02,https://api.github.com/repos/sq/JSIL/git/commits/f6ed9e8475090bc7d6bc111fe4f53565ea052a50,f6ed9e8475090bc7d6bc111fe4f53565ea052a50,"Blacklist a couple specific versions of Firefox for WebGL support.
Improve error messages for canvas fallback."
kg,2012-04-30 15:54:15,https://api.github.com/repos/sq/JSIL/git/commits/669ab54ce1e10344159a1ea2db38eaa86d30f895,669ab54ce1e10344159a1ea2db38eaa86d30f895,Checkpoint more work on barrier generator
kg,2012-04-30 13:30:17,https://api.github.com/repos/sq/JSIL/git/commits/75af40d9b6049783c3fd7254a52c0cc110b02f6c,75af40d9b6049783c3fd7254a52c0cc110b02f6c,"Checkpoint work on barrier generator.
Minor tweaks to Try site."
kg,2012-04-28 10:20:45,https://api.github.com/repos/sq/JSIL/git/commits/3bdd17eeb2f0f24fc03ec168845669dcc412228c,3bdd17eeb2f0f24fc03ec168845669dcc412228c,Just clear the state of all the lines...
kg,2012-04-28 10:17:24,https://api.github.com/repos/sq/JSIL/git/commits/0c00aa094b8110496e875e5858cc54a2f8c5854b,0c00aa094b8110496e875e5858cc54a2f8c5854b,Cope with some CodeMirror bugs
kg,2012-04-28 10:12:41,https://api.github.com/repos/sq/JSIL/git/commits/811baefe0f4c3d3892c654a75d3171dbd0d61450,811baefe0f4c3d3892c654a75d3171dbd0d61450,Make errors and warnings clickable in the status panel.
kg,2012-04-28 09:50:54,https://api.github.com/repos/sq/JSIL/git/commits/9638528421b0b4b0caed25717640405fcd3a013e,9638528421b0b4b0caed25717640405fcd3a013e,Display fork information in the snippet title and provide clickable links.
kg,2012-04-28 09:40:10,https://api.github.com/repos/sq/JSIL/git/commits/9a15d4c39a7ee9317a5798d6f0d053d591335d13,9a15d4c39a7ee9317a5798d6f0d053d591335d13,Actually use the GitHub fork verb so that forked gists show up as forks on the github site.
kg,2012-04-28 09:24:25,https://api.github.com/repos/sq/JSIL/git/commits/55b91f2473a56d0da817eb21c084cc2a6084afa7,55b91f2473a56d0da817eb21c084cc2a6084afa7,"Highlight compile errors and warnings in the CodeMirror editor.
Make it easier to share code snippets."
kg,2012-04-28 08:54:05,https://api.github.com/repos/sq/JSIL/git/commits/c2effb9edb6fc4b124467c8a8c83057e2271715c,c2effb9edb6fc4b124467c8a8c83057e2271715c,Try page lists some of your C# gists along with the examples
kg,2012-04-28 08:41:36,https://api.github.com/repos/sq/JSIL/git/commits/14c6c4983657526df9d50733c0cfa72412c07f99,14c6c4983657526df9d50733c0cfa72412c07f99,Handle expired login credentials
kg,2012-04-28 08:09:10,https://api.github.com/repos/sq/JSIL/git/commits/810261e569e4fcf901c6a03487191f8425127f99,810261e569e4fcf901c6a03487191f8425127f99,Add completed implementation of Gist integration.
kg,2012-04-28 07:48:22,https://api.github.com/repos/sq/JSIL/git/commits/12f0704e354be474f7e30b4d1cfe796746835f37,12f0704e354be474f7e30b4d1cfe796746835f37,"Partial gist save integration.
Make try URLs shareable to let people share a specific gist."
kg,2012-04-28 03:57:35,https://api.github.com/repos/sq/JSIL/git/commits/450f5b952b0c2d8f5b975da220e53aecd359de04,450f5b952b0c2d8f5b975da220e53aecd359de04,Don't explode if the output frame takes too long to load.
kg,2012-04-27 13:09:19,https://api.github.com/repos/sq/JSIL/git/commits/1498da90177e78717c5d97f21f5933771b5efa51,1498da90177e78717c5d97f21f5933771b5efa51,Use a thread local for type info providers in the snippet compiler so that simultaneous compiles don't trample each other.
kg,2012-04-27 12:21:50,https://api.github.com/repos/sq/JSIL/git/commits/b0317d72d24bf8c1c510545398d125c7b42f343e,b0317d72d24bf8c1c510545398d125c7b42f343e,"Disable request validation for the snippet compiler service.
Add an examples list to the Try page that lets you load example snippets from github."
kg,2012-04-26 22:50:16,https://api.github.com/repos/sq/JSIL/git/commits/cb9cd75c201e9bda6cbf12b4550031e0e12ff140,cb9cd75c201e9bda6cbf12b4550031e0e12ff140,Fix 'foo.__Type__.__PublicInterface__' being generated in specific cases.
kg,2012-04-26 22:37:16,https://api.github.com/repos/sq/JSIL/git/commits/1c87accad29292213432bd469009e3cde2ddaffb,1c87accad29292213432bd469009e3cde2ddaffb,"Clean up compile error output from the Try service.
Enable line numbers in the CodeMirror editors on the Try page and fix resizing logic."
kg,2012-04-26 21:55:18,https://api.github.com/repos/sq/JSIL/git/commits/ec1faa734557cdad386fe8b1cedfd27698f36102,ec1faa734557cdad386fe8b1cedfd27698f36102,Check in CodeMirror license
kg,2012-04-26 21:37:59,https://api.github.com/repos/sq/JSIL/git/commits/949672a770a87084629c9c4897414d39351887d9,949672a770a87084629c9c4897414d39351887d9,Add a better sample program.
kg,2012-04-26 21:33:54,https://api.github.com/repos/sq/JSIL/git/commits/1707b2ad767d79b6c597bf3787c2accaa29bef3f,1707b2ad767d79b6c597bf3787c2accaa29bef3f,"Use CodeMirror for the textareas on the Try page.
Add a link to the Try page to the main JSIL page."
kg,2012-04-26 20:39:31,https://api.github.com/repos/sq/JSIL/git/commits/6ef2f9fc79a84ade11923cc756286c59dfff4892,6ef2f9fc79a84ade11923cc756286c59dfff4892,Add linkspam buttons to the try page.
kg,2012-04-26 20:25:03,https://api.github.com/repos/sq/JSIL/git/commits/f0ae9936d46ad1110b077dca7d0ea2a9b1d95b3e,f0ae9936d46ad1110b077dca7d0ea2a9b1d95b3e,Minor page tweaks
kg,2012-04-26 20:17:28,https://api.github.com/repos/sq/JSIL/git/commits/2a3973088be4598451b108a94653e4081fc2b4a4,2a3973088be4598451b108a94653e4081fc2b4a4,Significantly reduce the amount of memory used by MethodSignatureCollection instances at the expense of a slight access speed hit.
kg,2012-04-26 19:32:02,https://api.github.com/repos/sq/JSIL/git/commits/48e4c23262645cba094da6c71fd3d56aaf09e7ba,48e4c23262645cba094da6c71fd3d56aaf09e7ba,Produce less spammy stack traces in Firefox and Chrome.
kg,2012-04-26 19:22:17,https://api.github.com/repos/sq/JSIL/git/commits/cbaa5d393b938bfc86ec96352b9a7befd22176ba,cbaa5d393b938bfc86ec96352b9a7befd22176ba,"Simplify signature caching so signature IDs don't get mixed up across invocations in the Try service.
Fix some busted assembly references in JSIL.Bootstrap.
Expand EventArgs and Delegate support in Bootstrap."
kg,2012-04-26 18:43:39,https://api.github.com/repos/sq/JSIL/git/commits/1c6a039dc00b8f74507b1d4fa248e1dfa05b9d4c,1c6a039dc00b8f74507b1d4fa248e1dfa05b9d4c,Improve the layout of the try page.
kg,2012-04-26 18:05:29,https://api.github.com/repos/sq/JSIL/git/commits/4b8ec1fcfb86982eb3cbfd721c75bea68f8ac10e,4b8ec1fcfb86982eb3cbfd721c75bea68f8ac10e,Fix a race in SnippetCompiler by using a unique temporary directory for each compile.
kg,2012-04-26 18:03:31,https://api.github.com/repos/sq/JSIL/git/commits/dd69b32594472ba5b316b1826ee565d98c91d7e7,dd69b32594472ba5b316b1826ee565d98c91d7e7,"Perform assembly compilation for the Try service inside of a temporary AppDomain. This is slower, but ensures that we don't leak an Assembly for every compile."
kg,2012-04-26 17:24:04,https://api.github.com/repos/sq/JSIL/git/commits/cedbad4887ff2aeaaed52828382bda2c81d99ec5,cedbad4887ff2aeaaed52828382bda2c81d99ec5,"Angrily reject snippet compile requests if too many requests are already pending.
Cache type info when compiling snippets.
Return timing info when compiling snippets."
kg,2012-04-26 16:36:48,https://api.github.com/repos/sq/JSIL/git/commits/f367af217c698ae1704be248a25b7a743f966e20,f367af217c698ae1704be248a25b7a743f966e20,"Add support for dynamic call sites generated by the mono C# compiler.
Tweak the try service so if it fails a compile, the temporary files stick around until the next compile."
kg,2012-04-26 15:47:32,https://api.github.com/repos/sq/JSIL/git/commits/311e0f23c2e0fb2e085e00a496fa2eacf6bbdd12,311e0f23c2e0fb2e085e00a496fa2eacf6bbdd12,Don't use BindToMethod when only one candidate method is available. Mono chokes on it sometimes.
kg,2012-04-26 15:43:07,https://api.github.com/repos/sq/JSIL/git/commits/f957d91d7f6d064f7a55eb3c9061c0230aaa8c0c,f957d91d7f6d064f7a55eb3c9061c0230aaa8c0c,"Improvements to the Try service.
Translator now spits most of its warning messages out via a Warning event so you can capture them.
Don't rely on the method binder to dispatch Ldc; Mono can't handle it."
kg,2012-04-26 13:03:47,https://api.github.com/repos/sq/JSIL/git/commits/4d54de5f333196e32fbc94c847a2f2f696e993c9,4d54de5f333196e32fbc94c847a2f2f696e993c9,"Add a basic implementation of an online 'Try JSIL' service.
Add a configuration setting to suppress generation of content manifests.
Various minor bug fixes related to running on Mono and inside the Try service."
kg,2012-04-26 08:21:41,https://api.github.com/repos/sq/JSIL/git/commits/074c2a89b9501e13e0092eb62941ed63baf5323d,074c2a89b9501e13e0092eb62941ed63baf5323d,"Show two demos at a time on the home page carousel
Scroll the demo carousel slower"
kg,2012-04-26 02:29:20,https://api.github.com/repos/sq/JSIL/git/commits/b766c48ef701d2b5f6192b57466dc178b3176e0c,b766c48ef701d2b5f6192b57466dc178b3176e0c,"Generate a cast on the outside of arithmetic expressions producing enumeration values.
Fix ToString for the result of number to enum casts.
Fix type info for NullableOf expressions being wrong.
Fix operator expressions not always having an expected type."
kg,2012-04-26 01:34:23,https://api.github.com/repos/sq/JSIL/git/commits/d6110414e2eea7abe681172d0b430d81868fa784,d6110414e2eea7abe681172d0b430d81868fa784,Add a test for issue #71.
kg,2012-04-26 01:21:45,https://api.github.com/repos/sq/JSIL/git/commits/8f4e5ee608ac43526dc8c4db29cac1ffd83b85e8,8f4e5ee608ac43526dc8c4db29cac1ffd83b85e8,Make the logic used for generating qualified method names match more closely between C# and JS. Fixes issue #79.
kg,2012-04-25 16:27:55,https://api.github.com/repos/sq/JSIL/git/commits/afd9beb3402faefa8a94b8d543349b108a138e48,afd9beb3402faefa8a94b8d543349b108a138e48,"Auto-generate an implementation of MemberwiseClone in InitializeType so that less indirection is needed to clone objects.
Change the signature of __CopyMembers__ to take (source, target).
Fix JSIL.GetType for arrays.
Add JSIL.CreateNamedFunction, for dynamically creating a function with a debugging-friendly name.
Replace all uses of 'new Function' with JSIL.CreateNamedFunction."
markusjohnsson,2012-04-25 15:29:40,https://api.github.com/repos/sq/JSIL/git/commits/5d7e7604ae8b9821cc84054820d7216879e18b05,5d7e7604ae8b9821cc84054820d7216879e18b05,Merge branch 'master' of github.com:/kevingadd/JSIL into int64
markusjohnsson,2012-04-25 15:25:50,https://api.github.com/repos/sq/JSIL/git/commits/a81fced186be7261a0e7ecac103aa144b3dd421d,a81fced186be7261a0e7ecac103aa144b3dd421d,Added negate and not unary operator support to Int64 emulation.
markusjohnsson,2012-04-25 14:34:50,https://api.github.com/repos/sq/JSIL/git/commits/8781ad285f67610895c13013d300e10dfdc37bb1,8781ad285f67610895c13013d300e10dfdc37bb1,Move numberic conversions from ILBlockTranslator to ExpandCastExpressions.
kg,2012-04-25 14:23:37,https://api.github.com/repos/sq/JSIL/git/commits/c41c5149f80dacc57218d9046fe345bfa4202540,c41c5149f80dacc57218d9046fe345bfa4202540,Fix CheckType on numbers
kg,2012-04-25 14:21:20,https://api.github.com/repos/sq/JSIL/git/commits/4d432512dc324a897c988fdf7e7174e76a3cb180,4d432512dc324a897c988fdf7e7174e76a3cb180,Stop calling CheckDerivation in JSIL.Cast.
kg,2012-04-25 13:55:46,https://api.github.com/repos/sq/JSIL/git/commits/9998f8697f1bf0745be363291783ffb0f8d19a17,9998f8697f1bf0745be363291783ffb0f8d19a17,"Don't permanently add images or sounds to the DOM anymore. The bug that made it necessary seems to be fixed.
Name some functions in XNACore for better debugger output."
kg,2012-04-25 13:37:10,https://api.github.com/repos/sq/JSIL/git/commits/164ed3e06e3d7e6c32455d73b0fd9fb508c1819c,164ed3e06e3d7e6c32455d73b0fd9fb508c1819c,"Take JSResultIsNew attribute into account when analyzing return statements that are invocations.
Switch from using single-element arrays as temporary slots to just using local variable closures, since it JITs better in SpiderMonkey.
Simplify JSIL.CheckType further.
Eliminate some dimorphism by using special constants for 'not initialized' and 'null'.
Introduce a JSIL.SetLazyValueProperty helper function for creating efficient lazily-evaluated properties, and use it in a few specific high-traffic cases (like method groups).
Change overload dispatcher method collections from extended arrays to objects, since extending arrays in SpiderMonkey deoptimizes them.
Various type stability cleanups for variables."
markusjohnsson,2012-04-25 13:37:27,https://api.github.com/repos/sq/JSIL/git/commits/2a829dd2f1c1848d6b5f276776c38f9ee90b7db5,2a829dd2f1c1848d6b5f276776c38f9ee90b7db5,Made things compile after merge
kg,2012-04-25 12:25:44,https://api.github.com/repos/sq/JSIL/git/commits/7f1ce71c0ac02199c870dd001973828cd6b98c00,7f1ce71c0ac02199c870dd001973828cd6b98c00,Fix infinite loop when computing ResultIsNew for recursive functions.
kg,2012-04-25 12:21:57,https://api.github.com/repos/sq/JSIL/git/commits/2382d24edc506c087c75f503801fcca110b6ba8d,2382d24edc506c087c75f503801fcca110b6ba8d,"Update the static analyzer to record when a function's return value is always the result of an invocation.
If a function's return value is always the result of an invocation, apply that invocation's ResultIsNew trait to the calling function as well."
kg,2012-04-25 11:39:08,https://api.github.com/repos/sq/JSIL/git/commits/531ee43775893137e6210cf57f29d437b6198868,531ee43775893137e6210cf57f29d437b6198868,"Add a proxy for the most common BCL collection types' GetEnumerator method(s) so that the result doesn't have to be cloned.
Flag Array.GetEnumerator as not needing to be cloned.
Flag Vector.Normalize(vector) as pure.
Flag static Matrix methods with JSIsPure and ResultIsNew."
kg,2012-04-25 11:23:03,https://api.github.com/repos/sq/JSIL/git/commits/f3c5083bb986e33d480aa3299f5c33860224dcdd,f3c5083bb986e33d480aa3299f5c33860224dcdd,"Don't allow public interfaces to be passed to CheckType, Cast, or TryCast. Improves performance.
Optimize the implementation of JSIL.GetType.
Make JSTypeOfExpression derive from JSType.
Improve handling of the isinst instruction for value types.
Fix interfaces being flagged as value types.
Expand the static analyzer's understanding of return values so that it can identify whether a function's return value is always the result of a 'new' expression.
Fix the static analyzer only using the last return statement in a function to determine the result variable of the function.
If a function's return value is the result of a 'new' expression, the return value does not need a struct copy.
If a function's return value is one of its arguments, and the argument did not need a struct copy, the return value does not need a struct copy either."
kg,2012-04-25 10:18:47,https://api.github.com/repos/sq/JSIL/git/commits/c70cfbec4b85acda91322018f8968d3e37cc6504,c70cfbec4b85acda91322018f8968d3e37cc6504,Fix missing context argument to some uses of ResolveTypeReference
kg,2012-04-25 10:12:33,https://api.github.com/repos/sq/JSIL/git/commits/3c19065917db2de6e2b189964fe52b4eaa0bb1d0,3c19065917db2de6e2b189964fe52b4eaa0bb1d0,"Optimize IsAssignableFrom and CheckType by pre-computing an assignable types list for each initialized type, and binary searching the list to determine assignability.
Fix JSIL.GetType returning public interfaces instead of type objects in some cases.
Always represent type IDs as strings, even though sometimes they are numeric."
markusjohnsson,2012-04-25 09:46:45,https://api.github.com/repos/sq/JSIL/git/commits/d228c75dfd8b1b8519723080d9157f44faa4ecc1,d228c75dfd8b1b8519723080d9157f44faa4ecc1,"Merge branch 'master' of github.com:/kevingadd/JSIL into HEAD

Conflicts:
	JSIL/ILBlockTranslator.cs
	JSIL/JSIL.csproj
	JSIL/SpecialIdentifiers.cs
	Tests/Tests.csproj
	Tests/Util.cs"
kg,2012-04-25 08:59:27,https://api.github.com/repos/sq/JSIL/git/commits/b2745825aa824504de4fd405961660eb5eebebda,b2745825aa824504de4fd405961660eb5eebebda,Fix unquoted space in build_demos
kg,2012-04-25 08:54:06,https://api.github.com/repos/sq/JSIL/git/commits/42add63f816e94f8c8fb688b3d4cb319980141e4,42add63f816e94f8c8fb688b3d4cb319980141e4,"Slight speed improvement to IsTypeIgnored.
Fix a threading issue in ConcurrentCache."
kg,2012-04-25 08:24:50,https://api.github.com/repos/sq/JSIL/git/commits/89b96d4c250260e06b37bec2cac02225f5f19b45,89b96d4c250260e06b37bec2cac02225f5f19b45,Run shorter FannkuchRedux and NBody tests since we're not forcing js.exe to fully optimize them anymore.
kg,2012-04-25 08:13:28,https://api.github.com/repos/sq/JSIL/git/commits/683f816e614af989218619bf428c7db898d44d48,683f816e614af989218619bf428c7db898d44d48,"Pre-create live instances of js.exe with the runtime libraries loaded so that tests can be run more quickly.
Update GenericTestFixture to maintain an EvaluatorPool for entire fixture runs so that live instances of js.exe will be available.
Don't force methodjit or type inference since it adds fixed overhead to the runtime of all tests."
kg,2012-04-25 07:24:07,https://api.github.com/repos/sq/JSIL/git/commits/f370c4540af6cdbd64cdd74c85d526b5b48101dc,f370c4540af6cdbd64cdd74c85d526b5b48101dc,"Checkpoint completely busted attempt at running automated tests in node.js.
Minor tweak to JSIL.IsArray. (Thanks ES5!)"
kg,2012-04-25 04:24:01,https://api.github.com/repos/sq/JSIL/git/commits/49b5a8a30df96d47b72a760af96822a2175db7eb,49b5a8a30df96d47b72a760af96822a2175db7eb,"Handle nested blocks in the static constructor analyzer so that field default values are extracted.
Attach certain flags globally to barriers instead of slots."
kg,2012-04-24 12:46:15,https://api.github.com/repos/sq/JSIL/git/commits/69e4688dc19124bce7f08067f1cc3a84668e757f,69e4688dc19124bce7f08067f1cc3a84668e757f,CSS tweaks
kg,2012-04-24 12:41:58,https://api.github.com/repos/sq/JSIL/git/commits/476ec1ca1e01b403c25b0ca23d931c22cc4bc55d,476ec1ca1e01b403c25b0ca23d931c22cc4bc55d,Put the demos on the website in a scrolling carousel.
kg,2012-04-24 11:42:40,https://api.github.com/repos/sq/JSIL/git/commits/9b0de0f24e5645e5cc1853ee992bd07602018289,9b0de0f24e5645e5cc1853ee992bd07602018289,Minor website tweaks.
kg,2012-04-24 10:15:39,https://api.github.com/repos/sq/JSIL/git/commits/40bb16ec8ca03608e6685b200c836ba65987a57f,40bb16ec8ca03608e6685b200c836ba65987a57f,Change the platform argument for the rpg starter kit so it builds correctly.
kg,2012-04-24 10:10:52,https://api.github.com/repos/sq/JSIL/git/commits/36d9f0e716401beea0d1bf7343048e34ed32180f,36d9f0e716401beea0d1bf7343048e34ed32180f,"Overhaul the SolutionBuilder to manually translate .sln files into MSBuild projects by fiddling around with undocumented MSBuild internals. Why? MSBuild sucks. Why? Because setting the Configuration and Platform global properties breaks project builds.
Improve SolutionBuilder diagnostic output.
Fix bug in node translator caching that would cause the method binder to choke.
Don't run all the optimization stages when generating an ILAst for static constructors.
Handle enums that don't contain any enumeration values."
kg,2012-04-24 07:46:28,https://api.github.com/repos/sq/JSIL/git/commits/9b0541e7ef5eabe24662b43b3a9715fd7c86b918,9b0541e7ef5eabe24662b43b3a9715fd7c86b918,"Cache calls to Type.GetMembers in ILBlockTranslator.TranslateNode.
Eliminate some lock contention in GetMethodsToAnalyze.
Don't create the corlibTypes HashSet on each use.
Remove some Debugger.Break calls."
kg,2012-04-24 06:34:55,https://api.github.com/repos/sq/JSIL/git/commits/f8f1581877ddfc8845a95c2b2d45c2356a186364,f8f1581877ddfc8845a95c2b2d45c2356a186364,Remove a stray Debugger.Break.
kg,2012-04-24 06:26:53,https://api.github.com/repos/sq/JSIL/git/commits/8443ee266293d358bef20f87df6c133453a772df,8443ee266293d358bef20f87df6c133453a772df,"Add support for annotating AST nodes with contextual nodes during traversal. Addresses confusing AST structures like how JSFunctionExpressions contain a bunch of loose JSParameter instances (from the parameter list).
Add two analysis test cases for nested structs and fix an analyzer bug revealed by one of them."
kg,2012-04-23 21:43:21,https://api.github.com/repos/sq/JSIL/git/commits/9322a07fd6adc1843474e002981661380253822e,9322a07fd6adc1843474e002981661380253822e,"Split JSDotExpression out into specialized types (JSFieldAccess, JSPropertyAccess, JSMethodAccess) and an abstract base class (JSDotExpressionBase). This allows VisitNode overrides for each type of access, and ensures that if you only define a VisitNode override for JSDotExpression you'll get warnings about the other forms.
Checkpoint work on barrier generator."
kg,2012-04-23 05:58:41,https://api.github.com/repos/sq/JSIL/git/commits/1af3ee2eb3f9f1d9660e502703c36c15266cbdd0,1af3ee2eb3f9f1d9660e502703c36c15266cbdd0,"Reuse a single AssemblyCache instance when translating multiple assemblies in a single JSILc invocation.
Move some more methods to TypeUtil.cs."
kg,2012-04-23 00:15:19,https://api.github.com/repos/sq/JSIL/git/commits/e2a23c6256255e374b60fb06f0fc115e49c3b3ea,e2a23c6256255e374b60fb06f0fc115e49c3b3ea,"Pull type information methods out of ILBlockTranslator into a TypeUtil static class.
Move static analysis transforms into a folder."
kg,2012-04-22 23:54:55,https://api.github.com/repos/sq/JSIL/git/commits/720b0af36f82ee722484b74b107e22102e653b4f,720b0af36f82ee722484b74b107e22102e653b4f,Split AST node types up into files
kg,2012-04-22 14:24:52,https://api.github.com/repos/sq/JSIL/git/commits/ab497fe77ff45fd48068e9398909eef3f2027679,ab497fe77ff45fd48068e9398909eef3f2027679,Fix CheckDelegateType choking on nulls.
kg,2012-04-22 14:16:46,https://api.github.com/repos/sq/JSIL/git/commits/bb63d9fcebf90f467eb653e1dc8339e8fcd753ac,bb63d9fcebf90f467eb653e1dc8339e8fcd753ac,"Fix CheckType for nullables.
Make isinst -> CheckType mapping for value types more precise. Fixes casting objects to nullable.
When applying an external RawMethod, add it to the type's __RawMethods__ list."
kg,2012-04-22 13:32:26,https://api.github.com/repos/sq/JSIL/git/commits/98e7a0125b6108bf7e949d151c8134c22cfa0994,98e7a0125b6108bf7e949d151c8134c22cfa0994,Build stability fixes.
kg,2012-04-22 12:28:31,https://api.github.com/repos/sq/JSIL/git/commits/f95f45410a6590747be995fe9ad83ecd8d3fb3e8,f95f45410a6590747be995fe9ad83ecd8d3fb3e8,"Fix nullable comparisons.
Fix nullable comparisons involving cast expressions.
Fix static initialization of fields to delegate expressions."
kg,2012-04-22 10:30:56,https://api.github.com/repos/sq/JSIL/git/commits/63cb75dbdf12628f87dac76e2a80edfa7dc9cf1f,63cb75dbdf12628f87dac76e2a80edfa7dc9cf1f,"Update to latest build of ILSpy.
More closely match the semantics of ILSpy's NullableOf/ValueOf meta-instructions. Fixes nullable arithmetic.
Fix visual studio build system copying XNA libraries to the bin\ directory, breaking type information resolution."
kg,2012-04-22 08:13:05,https://api.github.com/repos/sq/JSIL/git/commits/bdb53eebbaad3273db699eb0ca0a9c35f485f07f,bdb53eebbaad3273db699eb0ca0a9c35f485f07f,Fix ToString for constant flags enum expressions by using a method to create them instead of using the binary or operator.
kg,2012-04-22 08:03:34,https://api.github.com/repos/sq/JSIL/git/commits/970401a7a4027532f81c67e9faeaafeafffc4349,970401a7a4027532f81c67e9faeaafeafffc4349,Partial support for flags enums.
kg,2012-04-22 07:57:38,https://api.github.com/repos/sq/JSIL/git/commits/ebed206ef5df84522939ad51a2c3f5feef890fd3,ebed206ef5df84522939ad51a2c3f5feef890fd3,Implement more of Enum.Parse.
kg,2012-04-22 07:44:43,https://api.github.com/repos/sq/JSIL/git/commits/bc6b50e39576631fcd6d6ba610192ad409908817,bc6b50e39576631fcd6d6ba610192ad409908817,Name a bunch of function expressions in JSIL.Core for easier debugging.
kg,2012-04-22 07:28:10,https://api.github.com/repos/sq/JSIL/git/commits/609705f7d99fec878917e38b5194825f38191d5d,609705f7d99fec878917e38b5194825f38191d5d,"Fix JSIL.CheckType for enums.
Fix isinst opcode for enums."
kg,2012-04-22 07:18:41,https://api.github.com/repos/sq/JSIL/git/commits/45f0a1782d2c24503025c373b9c9c64b48ad0d8a,45f0a1782d2c24503025c373b9c9c64b48ad0d8a,"Fix JSIL.Reference.CheckType for generic parameters and positional generic parameters.
Fix makeMultipleMethodGroup ignoring the argument offset, causing generic method dispatch to break.
Clean up Array.CheckType slightly."
kg,2012-04-22 07:04:46,https://api.github.com/repos/sq/JSIL/git/commits/648384c3bccf4c0436cfdcebb84ff6c681093812,648384c3bccf4c0436cfdcebb84ff6c681093812,"Implement dynamic dispatch for overloaded methods based on argument type.
Implement dynamic dispatch for method groups that contain a mix of generic and non-generic methods.
Fix __FullName__ of positional generic parameters being undefined."
kg,2012-04-22 06:24:15,https://api.github.com/repos/sq/JSIL/git/commits/c93cf446c486c2ccae496b2aac5b2ec258c8d239,c93cf446c486c2ccae496b2aac5b2ec258c8d239,Defer construction of the dispatch function for a method group until the first time the method group is used. Reduces the amount of spam in 'all scripts' views like the Chrome Web Inspector's and makes BuildMethodGroups a bit faster.
kg,2012-04-22 06:16:05,https://api.github.com/repos/sq/JSIL/git/commits/9219b37aa391a610a4d3a95e1836b28b79bd07d8,9219b37aa391a610a4d3a95e1836b28b79bd07d8,Fix a couple static constructor tests possibly running twice in one test runner process.
kg,2012-04-22 06:12:28,https://api.github.com/repos/sq/JSIL/git/commits/ab454d73a1b6e1ab9b8f09398dd7bd34816b44fd,ab454d73a1b6e1ab9b8f09398dd7bd34816b44fd,Flush stdout when swapping streams for test runs.
kg,2012-04-22 06:01:02,https://api.github.com/repos/sq/JSIL/git/commits/21f34336b8efd1b58588491839d308c63564680b,21f34336b8efd1b58588491839d308c63564680b,"Cache type reference resolution to reduce the number of duplicate calls to MetadataResolver.Resolve(), since it does O(N) name searches in many cases.
Reuse a single AssemblyCache instance during batch comparison test runs.
Output a total timing and test count for batch test runs.
Move the GetTestMethod call in RunCSharp further forward to fix a race with the SetOut call."
kg,2012-04-22 05:21:58,https://api.github.com/repos/sq/JSIL/git/commits/1954563664d7d6486aed030dabb0d2a86c7de9e6,1954563664d7d6486aed030dabb0d2a86c7de9e6,Don't create a code provider if you're not going to use it
kg,2012-04-22 05:16:15,https://api.github.com/repos/sq/JSIL/git/commits/91a68b5d6c976fe672cf30d1e2a12512f20d4ca6,91a68b5d6c976fe672cf30d1e2a12512f20d4ca6,Fix NoUnnecessaryCasts
kg,2012-04-22 05:12:29,https://api.github.com/repos/sq/JSIL/git/commits/df22ab218de373da9dbdfc4c3f86ef04153d5018,df22ab218de373da9dbdfc4c3f86ef04153d5018,"Fix static initializer for the main test class being run before RunCSharp, and its stdout being missed as a result."
kg,2012-04-22 05:08:29,https://api.github.com/repos/sq/JSIL/git/commits/6dda8a2bec8bb8bc395a2e8da108d29d30fb340a,6dda8a2bec8bb8bc395a2e8da108d29d30fb340a,Improve the FailingTestCases harness.
kg,2012-04-22 05:02:51,https://api.github.com/repos/sq/JSIL/git/commits/ea1b8a4626c8b435cccbb423307346cbe6665baf,ea1b8a4626c8b435cccbb423307346cbe6665baf,Make subdirs in the JSIL Tests folder so that same-named tests in different test folders don't overwrite each other.
kg,2012-04-22 04:54:23,https://api.github.com/repos/sq/JSIL/git/commits/0503c07c0152bcfe4b87b936b8fdf63988cacf22,0503c07c0152bcfe4b87b936b8fdf63988cacf22,Reuse compiled assemblies from previous test runs if the write timestamps of the source files have not changed. Speeds up running automated tests by 50-60ms per test.
kg,2012-04-22 04:24:02,https://api.github.com/repos/sq/JSIL/git/commits/159dd5ea1220fa68f7126140983f9ace31a93217,159dd5ea1220fa68f7126140983f9ace31a93217,"Improve handling of temporary files in JSIL test fixture:
  Create a folder for each specific test case in the JSIL Tests folder and write the output assembly there.
  Run test cases from files instead of strings since running from a string just causes the compiler to generate a temporary source file.
  Rename output JS to 'foo.cs.js' instead of 'foo.js' so that same-named VB.net and C# tests can exist next to each other."
kg,2012-04-22 03:00:24,https://api.github.com/repos/sq/JSIL/git/commits/81c49501f2178364e83abfb0393d36649decae33,81c49501f2178364e83abfb0393d36649decae33,"Fix ConcurrentCache leaking ManualResetEvents.
Update some ConcurrentCache users to dispose the cache when done with it."
kg,2012-04-22 00:36:11,https://api.github.com/repos/sq/JSIL/git/commits/055b834f2ff8c920cb0009bac0a36f85668349c0,055b834f2ff8c920cb0009bac0a36f85668349c0,Some code cleanup based on analysis from VS11 and the Firefox JIT Inspector
kg,2012-04-19 01:27:05,https://api.github.com/repos/sq/JSIL/git/commits/008318b432699aa1bf8c0935e7bd2338ba8cb0f5,008318b432699aa1bf8c0935e7bd2338ba8cb0f5,"Fix keyboard event suppression due to wonky DOM activeElement semantics.
Never show a scrollbar in the demos since that suppresses events for arrow keys.
Slight perf improvement to overload dispatch and method signature invocation."
kg,2012-04-16 01:20:23,https://api.github.com/repos/sq/JSIL/git/commits/4a7c5a724ebff5bf0ac625716fa3df3a7f524e13,4a7c5a724ebff5bf0ac625716fa3df3a7f524e13,Simplify CrossProduct in the path tracer.
kg,2012-04-16 01:03:03,https://api.github.com/repos/sq/JSIL/git/commits/8fe6c77148c35e801066126b8b68e6a89d198f20,8fe6c77148c35e801066126b8b68e6a89d198f20,"Improve performance of the default ctor for generic type instances.
Add HTML and project files for the pathtracer example, and make it configurable.
Show perf stats in both the raytracer and pathtracer examples."
kg,2012-04-16 00:23:45,https://api.github.com/repos/sq/JSIL/git/commits/bc511ecf4cdcced69bd9318fc61a322bdf0b1748,bc511ecf4cdcced69bd9318fc61a322bdf0b1748,"Don't eat commonly used browser hotkeys in JSIL.Browser.
Add support for sealing types and their public interfaces when they are initialized. This will detect runtime reassignment errors. Unfortunately, it makes code slower, because JavaScript is insane.
Fix a few uses of type object members that are incompatible with Object.seal."
kg,2012-04-15 23:48:03,https://api.github.com/repos/sq/JSIL/git/commits/6e117740bed082b3e4aaf23e56f03611ccbd7d83,6e117740bed082b3e4aaf23e56f03611ccbd7d83,"Fix generic method renaming running multiple times when you inherit from a generic type.
Fix the interaction between method renaming, deeply nested inheritance, and method groups."
kg,2012-04-15 23:14:02,https://api.github.com/repos/sq/JSIL/git/commits/15cda5a18b744f32a0a4e64c057ab236ae6f4b35,15cda5a18b744f32a0a4e64c057ab236ae6f4b35,"Remove some uses of the JS delete statement since it supposedly deoptimizes objects in V8.
Change some uses of member assignment to use SetValueProperty so that they behave correctly in the presence of existing property accessors.
Fix method group construction not taking generic method renaming into account.
Fix indirect properties.
Set 'writable=false' in SetValueProperty, since writing to value properties is totally broken in some runtimes anyway.
When a test fails, spit out a URL you can use to run it in a browser.
Add an updated version of the spidermonkey command line shell."
kg,2012-04-15 19:34:24,https://api.github.com/repos/sq/JSIL/git/commits/2729557803b54f72d709e8217b797b5305c79082,2729557803b54f72d709e8217b797b5305c79082,"Improve various error messages to be clearer and contain more information.
Provide more context for particular error messages by logging when they are rethrown."
kg,2012-04-14 22:20:39,https://api.github.com/repos/sq/JSIL/git/commits/8ba29b266aff653171ae52fbdba917f6a28130ea,8ba29b266aff653171ae52fbdba917f6a28130ea,"Detect broken WebGL implementations and fall back to canvas with a warning message in the log.
Detect DOMParser parse errors and throw an exception."
kg,2012-04-14 19:38:50,https://api.github.com/repos/sq/JSIL/git/commits/dc9659ec1116a219f4c8832febba661eea5d27bf,dc9659ec1116a219f4c8832febba661eea5d27bf,Link to the wiki.
kg,2012-04-14 19:35:16,https://api.github.com/repos/sq/JSIL/git/commits/8a09251644196d90223a84e7ccbf62016749f348,8a09251644196d90223a84e7ccbf62016749f348,Update readme.
kg,2012-04-14 19:30:42,https://api.github.com/repos/sq/JSIL/git/commits/25228704a44d8d6bc5729474fae51eab5f610b44,25228704a44d8d6bc5729474fae51eab5f610b44,Error handling tweaks.
kg,2012-04-14 09:22:18,https://api.github.com/repos/sq/JSIL/git/commits/5aedd453ee7f914ba39975c0632f67293dcd3ff7,5aedd453ee7f914ba39975c0632f67293dcd3ff7,Add lumberjack to the JSIL site.
kg,2012-04-14 08:51:39,https://api.github.com/repos/sq/JSIL/git/commits/05f5e2487695c93ba690985cb2462ad8db282686,05f5e2487695c93ba690985cb2462ad8db282686,"Add support for HTML5 Full Screen
Don't show the fullscreen button or stats UI until the game has loaded"
kg,2012-04-14 07:57:36,https://api.github.com/repos/sq/JSIL/git/commits/078109635491d781f817bc68331b6b80aec74358,078109635491d781f817bc68331b6b80aec74358,Check in the lumberjack demo files
kg,2012-04-14 07:57:06,https://api.github.com/repos/sq/JSIL/git/commits/371e2ec49ed3a779dec7bb9a4fdb842a0ec60784,371e2ec49ed3a779dec7bb9a4fdb842a0ec60784,"Don't eat keypresses of F11, so that users can trigger fullscreen in their browser."
kg,2012-04-14 07:43:06,https://api.github.com/repos/sq/JSIL/git/commits/2678cc6d34956d010f6fcfc2e6d25e93e4833962,2678cc6d34956d010f6fcfc2e6d25e93e4833962,"Allow adding extra static constructors to a type from a proxy that will run after the type's original static constructors.
Fix incorrect type name in the 'implementation from' comment on proxies."
kg,2012-04-14 07:12:05,https://api.github.com/repos/sq/JSIL/git/commits/b499062a645ca4fe118f6c873cce97c91049f3a6,b499062a645ca4fe118f6c873cce97c91049f3a6,Fix field default value extraction when a type's static constructor has been proxied.
kg,2012-04-14 07:06:47,https://api.github.com/repos/sq/JSIL/git/commits/8abd06a3be01c0daffa68b04c6153f5056a66cfe,8abd06a3be01c0daffa68b04c6153f5056a66cfe,Fix translator crash when a proxy adds a static constructor to a type that previously did not have one.
kg,2012-04-14 07:03:26,https://api.github.com/repos/sq/JSIL/git/commits/9b45d2896d295f9cf3693894c9da7368b1df79c6,9b45d2896d295f9cf3693894c9da7368b1df79c6,"Unify some XNA proxy code and tag more vector methods as pure.
Correct the math for color multiplication of single-pixel textures. It was producing output that was too dark.
If a host page has no load button, autoload the game when the page is loaded."
kg,2012-04-13 20:43:30,https://api.github.com/repos/sq/JSIL/git/commits/b66135511b3fe0ee27d2c46a0e08a75fe1009ffd,b66135511b3fe0ee27d2c46a0e08a75fe1009ffd,"Enable WebGL for Mannux and Tetris since apparently it's not broken, my drivers are."
kg,2012-04-13 20:43:12,https://api.github.com/repos/sq/JSIL/git/commits/ba4aa32c56d2ce9b1dd73475b1b64056ace84260,ba4aa32c56d2ce9b1dd73475b1b64056ace84260,"Fix some RenderTarget2D bugs so sully works again.
Update WebGL-2d so that if you use a canvas as a texture, you can set 'canvas.isDirty = true' to force WebGL-2D to update its cached texture for it."
kg,2012-04-13 17:50:45,https://api.github.com/repos/sq/JSIL/git/commits/067c2523e5d9200b5650fdac5d0b09f1af68a203,067c2523e5d9200b5650fdac5d0b09f1af68a203,Disable WebGL in Mannux and Tetris because they demonstrate a bug in WebGL2D that I can't figure out how to fix. GL_CLAMP_TO_EDGE sucks.
kg,2012-04-13 16:44:11,https://api.github.com/repos/sq/JSIL/git/commits/9fab3da20f37781f21769b8e0a594a3d7fd6dcc9,9fab3da20f37781f21769b8e0a594a3d7fd6dcc9,Add webgl-2d to the other demo HTML files
kg,2012-04-13 16:33:59,https://api.github.com/repos/sq/JSIL/git/commits/c69f43cf685f62e1ea1b388f7fbb4ed636aadcef,c69f43cf685f62e1ea1b388f7fbb4ed636aadcef,"Fix WebGL-2D so it doesn't cause errors in browsers without WebGL. Instead, the attempt to get a webgl-2d context returns a normal 2d context.
Simplify the stats display HTML.
Show 'WebGL' in the stats display when using WebGL.
Fix various uses of getImageData to handle being passed canvases instead of images."
kg,2012-04-13 16:10:43,https://api.github.com/repos/sq/JSIL/git/commits/1010e2f11aa984b36cc9065b4b92f3f4a49ab71c,1010e2f11aa984b36cc9065b4b92f3f4a49ab71c,"Update webgl-2d to support globalCompositeOperation, globalAlpha and explicit tinting.
Update webgl-2d to use premultiplied alpha."
kg,2012-04-13 15:45:59,https://api.github.com/repos/sq/JSIL/git/commits/ad8f3abbef9a555f536db04c72b9ce2b59fbb142,ad8f3abbef9a555f536db04c72b9ce2b59fbb142,Add support for using webgl-2d instead of canvas if available.
kg,2012-04-13 02:43:04,https://api.github.com/repos/sq/JSIL/git/commits/09b8343a534a8842bc0964564f7eba225374d590,09b8343a534a8842bc0964564f7eba225374d590,Work around weird playback stopping/resuming issues in audiocontext.
kg,2012-04-13 02:14:26,https://api.github.com/repos/sq/JSIL/git/commits/888ad5a5101a86c141969816d53edc6f01e9225b,888ad5a5101a86c141969816d53edc6f01e9225b,"Fix various premultiplication mixups and 1x1 pixel texture issues.
Cast enums to ints/float using the Number() builtin instead of .value or .valueOf, since that's less fragile."
kg,2012-04-13 01:17:55,https://api.github.com/repos/sq/JSIL/git/commits/01f0138bc3a45b6b479689278fe18df736f74705,01f0138bc3a45b6b479689278fe18df736f74705,"Fix audiocontext sound implementation
Tune image caching parameters"
kg,2012-04-13 00:56:12,https://api.github.com/repos/sq/JSIL/git/commits/33a37c87d0dd91447782cbed6f368fe5f5055c3d,33a37c87d0dd91447782cbed6f368fe5f5055c3d,"Switch to a dramatically faster method for rendering multiplied images by caching four images (one per channel) and rendering each channel individually using alpha and the lighter blend mode.
Display the size of the image cache alongside frame rate/update rate."
kg,2012-04-12 23:35:17,https://api.github.com/repos/sq/JSIL/git/commits/7c5bff8ca6a74a86e172ebc34f75e08ebf6b8e0a,7c5bff8ca6a74a86e172ebc34f75e08ebf6b8e0a,"Fix XNA3 samples by stubbing out BlendState.
Fix canvas image scaling's interaction with origins.
Expand the multiplied image cache, and factor in color premultiplication when deciding whether to use it.
Centralize the logic for determining whether to truncate integral/float expressions."
kg,2012-04-12 22:19:07,https://api.github.com/repos/sq/JSIL/git/commits/b5e7a4ef7a2dbd9dab270e6ef4cb4d106ed5b9a1,b5e7a4ef7a2dbd9dab270e6ef4cb4d106ed5b9a1,"Clean up some unnecessary type casts in generated code by improving type information.
Add a test that ensures there aren't extra casts in certain problem files."
kg,2012-04-12 21:30:00,https://api.github.com/repos/sq/JSIL/git/commits/cf768d9db88bc536492dae053797a767a01981e2,cf768d9db88bc536492dae053797a767a01981e2,"Fixed break statements being eliminated in nested switch statements.
Overhaul the use of InferredType/ExpectedType to hopefully be more correct.
If CastExpression.New is called on a Null literal, just change the type of the literal.
Fix InitArray producing the wrong type information.
Stubbed out more XNA APIs."
kg,2012-04-12 18:50:41,https://api.github.com/repos/sq/JSIL/git/commits/47e295ce21862652bd0acb4e4ece0bb7e8ea97c6,47e295ce21862652bd0acb4e4ece0bb7e8ea97c6,"Fix Vector unary negation.
Implement more of XMLReader and support types."
kg,2012-04-12 18:26:06,https://api.github.com/repos/sq/JSIL/git/commits/df72ef2aafa397d6f8d57d6c4da32b12475f2d7b,df72ef2aafa397d6f8d57d6c4da32b12475f2d7b,"Implemented various XmlReader APIs, notably ReadElementString and dependencies, plus Skip"
kg,2012-04-12 17:09:51,https://api.github.com/repos/sq/JSIL/git/commits/ddd0a8e96670c4d61e267c159e55fefd8c43495b,ddd0a8e96670c4d61e267c159e55fefd8c43495b,Implement XmlNameTable
kg,2012-04-12 16:52:19,https://api.github.com/repos/sq/JSIL/git/commits/5a2b000f28628577bf1f326fb16f84377e8f683e,5a2b000f28628577bf1f326fb16f84377e8f683e,Implement namespaces and basic support for attributes
kg,2012-04-12 16:31:11,https://api.github.com/repos/sq/JSIL/git/commits/26c17c06070e5c22b53c0e5349336332eb86a424,26c17c06070e5c22b53c0e5349336332eb86a424,Implement MoveToContent and comments
kg,2012-04-12 15:46:47,https://api.github.com/repos/sq/JSIL/git/commits/d743720c9a1cb8663da71f2c884b614a0f82870a,d743720c9a1cb8663da71f2c884b614a0f82870a,Implement XmlReader.AttributeCount
kg,2012-04-12 15:36:42,https://api.github.com/repos/sq/JSIL/git/commits/84e12a6be786299c49ba8f27e22788a2ccfcd819,84e12a6be786299c49ba8f27e22788a2ccfcd819,"Implement Whitespace nodes
Implement String.IsNullOrWhiteSpace"
kg,2012-04-12 15:00:21,https://api.github.com/repos/sq/JSIL/git/commits/f81c9b6f1dd7d2932e2725028d37fb82125473cc,f81c9b6f1dd7d2932e2725028d37fb82125473cc,Fix test harness not updating output .js files
kg,2012-04-12 14:26:12,https://api.github.com/repos/sq/JSIL/git/commits/2b631ba1844c78727e4e118073d7cf1f6eaa6d00,2b631ba1844c78727e4e118073d7cf1f6eaa6d00,Further XML test harness improvements.
kg,2012-04-12 14:15:35,https://api.github.com/repos/sq/JSIL/git/commits/921d944a4f25d6171f60b0bd1105d3206a98eab6,921d944a4f25d6171f60b0bd1105d3206a98eab6,Improve the XML test harness.
kg,2012-04-12 14:12:39,https://api.github.com/repos/sq/JSIL/git/commits/45fff4fa771f5912fb6ce722e8c13bfe7e17376d,45fff4fa771f5912fb6ce722e8c13bfe7e17376d,Basic XMLReader test case passes now.
kg,2012-04-12 13:56:59,https://api.github.com/repos/sq/JSIL/git/commits/b37000001b33bc2a130ded245b4ca60c7a200993,b37000001b33bc2a130ded245b4ca60c7a200993,"Add basic support for running tests against the XMLReader stub. Since Spidermonkey doesn't have DOMParser, the test fixture spits out a list of URIs that you can load to run the individual tests in a browser."
kg,2012-04-12 13:28:34,https://api.github.com/repos/sq/JSIL/git/commits/2051403e49cfc6a2ed0bfc5460154c3d0eac4ca3,2051403e49cfc6a2ed0bfc5460154c3d0eac4ca3,Checkpoint XMLReader implementation.
kg,2012-04-12 06:22:31,https://api.github.com/repos/sq/JSIL/git/commits/a7f746484fe611eded799163b838edbedefe5066,a7f746484fe611eded799163b838edbedefe5066,Start stubbing out XML serialization
kg,2012-04-12 04:53:40,https://api.github.com/repos/sq/JSIL/git/commits/40bd3cb49cb8033f4ec3f67a6817219ac648dd31,40bd3cb49cb8033f4ec3f67a6817219ac648dd31,"Ensure that the framerate regulation logic always performs at least one Update before each Draw. Not doing so can break XNA games.
If the elapsed time since the last frame is less than the duration of a frame in Step, subtract the error from the accumulator so that we don't continually accumulate additional frames."
kg,2012-04-12 04:35:48,https://api.github.com/repos/sq/JSIL/git/commits/f2d55669cce320c621d48c7db673be2b90d2d086,f2d55669cce320c621d48c7db673be2b90d2d086,Fine tune framerate balancing behavior to avoid exposing game code to extremely long frame delays.
kg,2012-04-12 04:20:32,https://api.github.com/repos/sq/JSIL/git/commits/1fdb4b6a03fc2fae1f7543cffe7b2f657ce5f879,1fdb4b6a03fc2fae1f7543cffe7b2f657ce5f879,"Fix out-of-range values and Color.Multiply.
Implement rotation in SpriteBatch.Draw."
kg,2012-04-12 04:13:49,https://api.github.com/repos/sq/JSIL/git/commits/69077eb7bcc4818619073e82946a1d69054aeed1,69077eb7bcc4818619073e82946a1d69054aeed1,Partial support for BlendStates.
kg,2012-04-12 03:51:57,https://api.github.com/repos/sq/JSIL/git/commits/af1ca6e3c00399f7648a1baf0f6c05f24d1821b0,af1ca6e3c00399f7648a1baf0f6c05f24d1821b0,"Fix SpriteFont origin parameter.
Implement mousedown/mouseup handling."
kg,2012-04-12 03:42:11,https://api.github.com/repos/sq/JSIL/git/commits/7c46b41e68dd0ebffeecf25c6afded7255180e4b,7c46b41e68dd0ebffeecf25c6afded7255180e4b,"Handle dereferencing a reference that is nested within a cast expression by dereferencing the contents of the cast expression and then surrounding the result with a new cast expression.
More library updates."
kg,2012-04-12 03:13:18,https://api.github.com/repos/sq/JSIL/git/commits/b0811a34eb5153f337b6943dade25a0cf13502b9,b0811a34eb5153f337b6943dade25a0cf13502b9,"Fix various weird interactions between enums, nullables and casts.
More library updates."
kg,2012-04-12 02:38:55,https://api.github.com/repos/sq/JSIL/git/commits/8cbff9258034e1bc43f63e9bfc431b36deaa81b3,8cbff9258034e1bc43f63e9bfc431b36deaa81b3,"Fix arrays of nullable types.
Handle WMA compression quality setting in XACT projects.
Fix GameComponents not being initialized if added to the components collection after the game is initialized.
Copy effects to the output folder as raw XNBs so we can load them.
Stub out an effect loader."
kg,2012-04-12 01:48:53,https://api.github.com/repos/sq/JSIL/git/commits/85254faa41cf2293fe087fe87f260fe98103d0aa,85254faa41cf2293fe087fe87f260fe98103d0aa,Fix delegate casting for generic delegates.
kg,2012-04-12 00:19:14,https://api.github.com/repos/sq/JSIL/git/commits/3c2e55dab71b47ca793068b011e61eac86109658,3c2e55dab71b47ca793068b011e61eac86109658,"Fix TryCast/Cast failing on delegate types.
Fix rendering of single-pixel source textures as solid filled rectangles."
kg,2012-04-11 23:36:18,https://api.github.com/repos/sq/JSIL/git/commits/e3e743f4426a07786b972d21715ae55da9b596a6,e3e743f4426a07786b972d21715ae55da9b596a6,"Add basic support for Regexes.
Implement Dictionary.Remove.
Implement Rectangle.Union."
kg,2012-04-11 22:51:36,https://api.github.com/repos/sq/JSIL/git/commits/7f39ac9f4963c65fe1b9d3067711fc36a25b499d,7f39ac9f4963c65fe1b9d3067711fc36a25b499d,"Implement Dictionary.GetEnumerator.
Add a test for Array.GetEnumerator.
More library updates."
kg,2012-04-11 20:48:07,https://api.github.com/repos/sq/JSIL/git/commits/e5e94975d803aa043b428b37941381edb18852a0,e5e94975d803aa043b428b37941381edb18852a0,"Handle the 'PreserveNewest' option for content files.
Proxy Array.GetEnumerator.
Various fixes to libraries."
kg,2012-04-11 19:32:02,https://api.github.com/repos/sq/JSIL/git/commits/7af079d277aa92742977c2cd9ef6b07ea87edb0b,7af079d277aa92742977c2cd9ef6b07ea87edb0b,"Fix GameTime not updating for non-fixed-timestep XNA games.
Stub out Type.GetMethod."
kg,2012-04-11 19:26:12,https://api.github.com/repos/sq/JSIL/git/commits/38e4d00227a3d7fae730c1fc17cf6c5738c1982c,38e4d00227a3d7fae730c1fc17cf6c5738c1982c,"When translating multiple assemblies using a single manifest, skip translation of any assemblies that have already been translated and outputted to save time.
Fix MemberwiseClone for ArrayEnumerator and AbstractEnumerator.
Reduce XNA external error spew.
Fix Debug.WriteLine, String.IndexOfAny and String.LastIndexOfAny."
kg,2012-04-11 18:17:37,https://api.github.com/repos/sq/JSIL/git/commits/abde81f6e01695b9b7c7026410311a60c69ca9fe,abde81f6e01695b9b7c7026410311a60c69ca9fe,Remove some unnecessary externals lists.
kg,2012-04-11 18:14:03,https://api.github.com/repos/sq/JSIL/git/commits/2248f7b6b536c82501b0be4863820f415024e461,2248f7b6b536c82501b0be4863820f415024e461,"Fix List.RemoveAll not returning a count.
Detect long Game.Update calls and suppress frameskip immediately after them."
kg,2012-04-11 16:15:54,https://api.github.com/repos/sq/JSIL/git/commits/40e4958779819427a650bf9992c3d9b532d5f9b5,40e4958779819427a650bf9992c3d9b532d5f9b5,"Add support for reporting performance metrics every second to the host.
JSIL.Browser displays performance metrics in the page if an element with the right name exists.
Update all the samples to display performance metrics."
kg,2012-04-11 15:54:07,https://api.github.com/repos/sq/JSIL/git/commits/03398cde264fa09baaaa96cdf0350095f9377f66,03398cde264fa09baaaa96cdf0350095f9377f66,Fix depth sorting for spritebatch text.
kg,2012-04-11 15:45:21,https://api.github.com/repos/sq/JSIL/git/commits/59cbdbadc3db861b04aa63e13048aba8150b8f18,59cbdbadc3db861b04aa63e13048aba8150b8f18,Fix broken Vector Normalize method.
kg,2012-04-11 15:40:17,https://api.github.com/repos/sq/JSIL/git/commits/75fb4aa5665283aa326aafd55c67e4fc9f8126f7,75fb4aa5665283aa326aafd55c67e4fc9f8126f7,"Fix Integer.Compare/Float.Compare using the wrong name the JSIL version.
Fix busted StringBuilder.Replace overload.
Fix Game framerate balancing losing fractional frames."
kg,2012-04-11 15:27:28,https://api.github.com/repos/sq/JSIL/git/commits/7a5594d0127c5e94415b289a1fae8964acc5a2b4,7a5594d0127c5e94415b289a1fae8964acc5a2b4,"RPG sample works again.
Fix signature cache ID mismatches in multi-assembly translations.
Include XACT in the skeletons.
Various XNA lib fixes."
kg,2012-04-11 14:16:23,https://api.github.com/repos/sq/JSIL/git/commits/2abbc738c842a086188628e8f01d2d35755e068e,2abbc738c842a086188628e8f01d2d35755e068e,"Fix more list external problems.
Fix some of the WinForms error spew in Mannux.
Fix busted SpriteFont scaling."
kg,2012-04-11 13:50:22,https://api.github.com/repos/sq/JSIL/git/commits/e948b9b74f373ff2c13a6059f360d7eb1f389519,e948b9b74f373ff2c13a6059f360d7eb1f389519,"Factor in JSChangeName when building method signature sets and doing static analysis.
Dramatically improve the performance of SpriteBatch.Draw and DrawString."
kg,2012-04-11 12:51:42,https://api.github.com/repos/sq/JSIL/git/commits/aaf1b54f0ba4a4d35450e4dc54382a9473de1b3a,aaf1b54f0ba4a4d35450e4dc54382a9473de1b3a,Implement fast overload dispatch for constructors.
kg,2012-04-11 12:45:45,https://api.github.com/repos/sq/JSIL/git/commits/184f04491e799c4230bee25f23f2ca64ab3b2cf0,184f04491e799c4230bee25f23f2ca64ab3b2cf0,"Mannux sample works again.
When there is only one overload of a method with a given argument count, use fast dispatch instead of signature-based dispatch.
Fix some copy-and-paste errors from skeletons."
kg,2012-04-11 11:53:41,https://api.github.com/repos/sq/JSIL/git/commits/b0f6509acd49e07a04b0e7b2a5c2206112ef09c4,b0f6509acd49e07a04b0e7b2a5c2206112ef09c4,"Fix some ArrayList, Exception and BinaryReader problems."
kg,2012-04-11 11:26:33,https://api.github.com/repos/sq/JSIL/git/commits/701d60739e9f1e465dfdcf34f9c600d7a8d5020a,701d60739e9f1e465dfdcf34f9c600d7a8d5020a,"Platformer sample works again.
Improve stack traces for JSIL.Host.warning and JSIL.Host.log.
Autogenerate operators and instance methods for Vector2, Vector3 and Vector4.
Proxy out some FileStream constructors that won't work anyway.
Fix XNA4-specific TypeRefs to graphics members to use version-independent references."
kg,2012-04-10 19:25:56,https://api.github.com/repos/sq/JSIL/git/commits/938ca7198fad69372021e83a196879353bc3cc04,938ca7198fad69372021e83a196879353bc3cc04,Tetris demo works now
kg,2012-04-10 16:07:33,https://api.github.com/repos/sq/JSIL/git/commits/98e3559aa3ac2da1d3bffc776a0fa79053dfa857,98e3559aa3ac2da1d3bffc776a0fa79053dfa857,"Fix List<T>.AsReadOnly.
Checkpoint more XNA stub fixes."
kg,2012-04-10 16:03:26,https://api.github.com/repos/sq/JSIL/git/commits/ae344a53571db7b17a23419e74968f7040aabf61,ae344a53571db7b17a23419e74968f7040aabf61,"When generating skeletons, don't use $.Type to refer to the current type since it's invalid.
Checkpointing work on XNA externals"
kg,2012-04-10 15:49:22,https://api.github.com/repos/sq/JSIL/git/commits/1c45abd5c295cb3b836b25f6b065d1645898712a,1c45abd5c295cb3b836b25f6b065d1645898712a,"Fix overload resolution when a generic method has multiple overloads.
Report an error if a proxy assembly can't be found.
Add InterfaceBuilder.InheritDefaultConstructor() for cases where you want to use the default constructor from your base class as your default constructor.
Tweak the XNA proxies to ignore the abstract .Read methods of ContentTypeReader and ContentTypeReader<T>, since they force overload resolution.
Include XNA proxies when generating skeletons."
kg,2012-04-10 14:47:55,https://api.github.com/repos/sq/JSIL/git/commits/e1e4141ae8200397f8c0a7f86bf262ff6d3ac32b,e1e4141ae8200397f8c0a7f86bf262ff6d3ac32b,"Add JSIL.SetValueProperty convenience method for defining value properties.
Use SetValueProperty when mutating state in InterfaceBuilder instead of using assignment. Fixes various problems with reassigning properties, and also fixes InterfaceInheritanceDifferentNames.
Change various cases where a member (like 'toString') was assigned directly to use SetValueProperty instead."
kg,2012-04-10 14:07:10,https://api.github.com/repos/sq/JSIL/git/commits/b54d8b74de32c4c6dbec9649178d70a1767e6f19,b54d8b74de32c4c6dbec9649178d70a1767e6f19,Finish converting JSIL.Bootstrap externals.
kg,2012-04-10 13:59:12,https://api.github.com/repos/sq/JSIL/git/commits/364cc7a1884f60eeb828c8520895bfc4d08ec57c,364cc7a1884f60eeb828c8520895bfc4d08ec57c,"Fix exception messages for InvalidCastException and InvalidOperationException.
Slight tweaks to type initialization logic."
kg,2012-04-10 13:53:11,https://api.github.com/repos/sq/JSIL/git/commits/e781fd7b3202cdecb865df5357f0328e130346a5,e781fd7b3202cdecb865df5357f0328e130346a5,"Fix CreateInstanceOfType not initializing the type first.
Fix InitializeType not initializing base types."
kg,2012-04-10 13:48:42,https://api.github.com/repos/sq/JSIL/git/commits/5851d5ecb217b5ff0dbb47c5efe99feb35f213f2,5851d5ecb217b5ff0dbb47c5efe99feb35f213f2,"Eliminate some garbage creation and string escaping in Of$NoInitialize.
Cache calls to .Of() in various bootstrap methods."
kg,2012-04-10 13:32:21,https://api.github.com/repos/sq/JSIL/git/commits/f71225797305836c81515c4519bfea3173edc055,f71225797305836c81515c4519bfea3173edc055,"Improve MethodSignature HashCodes so they vary more.
Improve the performance of AssemblyManifest.AssignIdentifiers.
Change MethodSignatureCache to not maintain a dictionary mapping signatures to IDs, since it provided minimal benefit considering its tremendous cost. Instead, statically assign each signature an ID on first use.
Improve performance of Util.EscapeString by not trying to autodetect the best quote character, and by sizing the StringBuilder in advance."
kg,2012-04-10 12:52:10,https://api.github.com/repos/sq/JSIL/git/commits/db2bb4d41ba0154a9fc40c6724334813a41bf833,db2bb4d41ba0154a9fc40c6724334813a41bf833,"Track distinct overloads of a method separately from redefinitions of a given overload. This makes it possible to avoid using the overloaded method invocation path for a method that is merely redefined.
Rewrite the logic used for deciding whether an explicit this-reference is required when invoking methods, and give it clearer documentation (comments + additional test). This eliminates unnecessary call-through-prototype in a few cases.
Create a distinct JS expression type for InitObject expressions so that type information is preserved. (Using an UntranslatableExpression turns the type of the InitializedObject into void, which breaks some method resolution logic.)
Fix IsInvalidThisExpression returning true for InitializedObject.
Never use explicit this for members of System.Array since it doesn't have a regular JS prototype."
kg,2012-04-10 00:35:25,https://api.github.com/repos/sq/JSIL/git/commits/1df11fef3bc234a73d8040781ef6c6be079d176c,1df11fef3bc234a73d8040781ef6c6be079d176c,More library updates
kg,2012-04-10 00:14:17,https://api.github.com/repos/sq/JSIL/git/commits/ceae92bfb2fcd7868095c4f73dbe272f7fde54cf,ceae92bfb2fcd7868095c4f73dbe272f7fde54cf,"Fix Debug.WriteLine, Nullable.GetUnderlyingType, Monitor.Enter and the Stack`1/Queue`1/Dictionary`2 types."
kg,2012-04-09 15:08:07,https://api.github.com/repos/sq/JSIL/git/commits/955cc71687f4b1e8179c6410cfbeed9bc673b0ec,955cc71687f4b1e8179c6410cfbeed9bc673b0ec,"Don't build method groups, initialize properties, or fixup interfaces in Of$NoInitialize. That's done by InitializeType."
kg,2012-04-09 14:40:04,https://api.github.com/repos/sq/JSIL/git/commits/cae0844f609ae45dbce090eff6fd4f14094504b7,cae0844f609ae45dbce090eff6fd4f14094504b7,"Don't consider inherited constructors when building method groups, since for them to be accessible they must be exposed by a constructor for the current type."
kg,2012-04-09 14:34:12,https://api.github.com/repos/sq/JSIL/git/commits/bd8941567b3d731dacd9ae5aff376b3c99f26527,bd8941567b3d731dacd9ae5aff376b3c99f26527,Fix MultidimensionalArray.New.
kg,2012-04-09 14:32:13,https://api.github.com/repos/sq/JSIL/git/commits/24651527e0ec7530cd72a745ffb744c8fa86803a,24651527e0ec7530cd72a745ffb744c8fa86803a,Fix conflict between generic external methods and method group builder.
kg,2012-04-09 14:24:18,https://api.github.com/repos/sq/JSIL/git/commits/d2d21f5304d71eec38d5d4c440454014cb83201a,d2d21f5304d71eec38d5d4c440454014cb83201a,Don't build method groups for 'inherited' static members since they aren't actually accessible through the public interface.
kg,2012-04-09 14:18:18,https://api.github.com/repos/sq/JSIL/git/commits/4088173ef139dd203df7f7f74cad56600730efee,4088173ef139dd203df7f7f74cad56600730efee,Fix MulticastDelegate.GetInvocationList.
kg,2012-04-09 14:14:53,https://api.github.com/repos/sq/JSIL/git/commits/07d2715b359269ea2051a9e10156e7fdbcc8b433,07d2715b359269ea2051a9e10156e7fdbcc8b433,Fix incorrect use of TypeIdentifier in MethodSignature
kg,2012-04-09 14:08:15,https://api.github.com/repos/sq/JSIL/git/commits/f6ff21e4e5d2d001a9a4af566bbe3b730cba7802,f6ff21e4e5d2d001a9a4af566bbe3b730cba7802,"Eliminate calls to System.Object.ctor since it's a no-op and the explicit dispatch is kind of expensive.
Make InterfaceBuilder.DefineTypeAliases faster.
When emitting a method signature inside of a function body, use type identifiers instead of type references to reduce the cost of constructing the signature.
When emitting the generic arguments list for an overloaded call, use identifiers, not references."
kg,2012-04-09 13:39:16,https://api.github.com/repos/sq/JSIL/git/commits/ef11e31b9e8015173ff10f430b205ba0d2b1e3e4,ef11e31b9e8015173ff10f430b205ba0d2b1e3e4,Improve makeSingleMethodGroup so that it doesn't have to wrap the method. Cleans up profiler display in Chrome.
kg,2012-04-09 13:34:48,https://api.github.com/repos/sq/JSIL/git/commits/64d65b1d1ba3adacdb8dbbba1aac5c8047c68370,64d65b1d1ba3adacdb8dbbba1aac5c8047c68370,"Kill old-style ImplementExternals.
Proxies cleanup.
Checkpoint library improvements."
kg,2012-04-09 12:49:07,https://api.github.com/repos/sq/JSIL/git/commits/d84b9db6161dab2f0ae4c81bb250671188d6511c,d84b9db6161dab2f0ae4c81bb250671188d6511c,"Remove JSIL.GenericMethod and don't use it for mangled method names.
The unmangled form of a method is always a dispatcher (though for non-overloaded forms, it's a simple one).
Add InterfaceBuilder.RawMethod for defining signatureless methods like CheckType."
kg,2012-04-09 09:36:30,https://api.github.com/repos/sq/JSIL/git/commits/b0ca179b6670d5b000d6333246511aa2e344fd2c,b0ca179b6670d5b000d6333246511aa2e344fd2c,"Fix JSIL.CreateInstanceOfType not initializing struct fields if skipping the constructor
Checkpoint more library work"
kg,2012-04-09 09:24:49,https://api.github.com/repos/sq/JSIL/git/commits/0fcecf309c064c4df0cdff6f4b3fa57583ed95db,0fcecf309c064c4df0cdff6f4b3fa57583ed95db,"Implemented basic dispatch for overloaded methods where the argument count is sufficient to disambiguate. If there are multiple overloads with the same argument count, you still get a runtime error.
MethodSignature.Construct now accepts either a type or public interface as its first argument.
Checkpoint library porting."
kg,2012-04-09 07:49:39,https://api.github.com/repos/sq/JSIL/git/commits/9ff47a70acf1a310024944c731e16942a61e8ed8,9ff47a70acf1a310024944c731e16942a61e8ed8,Fix skeletons not including generic arguments
kg,2012-04-09 07:08:06,https://api.github.com/repos/sq/JSIL/git/commits/67b312f2dd8af03749656670b2cc7999daa295ae,67b312f2dd8af03749656670b2cc7999daa295ae,"When generating stubs and skeletons, include abstract methods."
kg,2012-04-09 06:57:06,https://api.github.com/repos/sq/JSIL/git/commits/78da8a818baba9dc131330951a8fce2d1759f69b,78da8a818baba9dc131330951a8fce2d1759f69b,"Add support for generating stubbed assemblies in 'skeleton' form to make it easier to write your own external implementation for them.
Add support for passing fully-qualified assembly names to JSILc on the command line instead of filenames.
Bump the app version"
kg,2012-04-09 06:11:09,https://api.github.com/repos/sq/JSIL/git/commits/0999e33c0f0a69f501f312cf8068eed05cc7014c,0999e33c0f0a69f501f312cf8068eed05cc7014c,"Don't cache method signatures containing open types, since their actual types will vary between invocations."
kg,2012-04-09 06:09:25,https://api.github.com/repos/sq/JSIL/git/commits/39500c94d70f8af9ddd5f53b1fcf018f8e1d121b,39500c94d70f8af9ddd5f53b1fcf018f8e1d121b,"Fix TypesAreEqual ignoring arguments to GenericInstanceTypes; correct behavior is now an opt-in parameter (default false).
Fix TypesAreEqual saying Base<T>.T != Derived<T>.T"
kg,2012-04-09 04:43:42,https://api.github.com/repos/sq/JSIL/git/commits/bac76be5f7109f84ba3e8d056d325982fbc883f8,bac76be5f7109f84ba3e8d056d325982fbc883f8,Use shorthand for references to common mscorlib types in generated JS.
kg,2012-04-09 04:33:42,https://api.github.com/repos/sq/JSIL/git/commits/75622a8953620a1aa37370473e23bca76adebf39,75622a8953620a1aa37370473e23bca76adebf39,Checkpoint
kg,2012-04-08 16:55:50,https://api.github.com/repos/sq/JSIL/git/commits/833d172d7474416b752ade4a982c23d1abf976a7,833d172d7474416b752ade4a982c23d1abf976a7,"Some more ease of use improvements to InterfaceBuilder
Checkpoint"
kg,2012-04-08 16:46:28,https://api.github.com/repos/sq/JSIL/git/commits/496f8f1679b2d9f5fd2bfff5144b3ab6dbf7fc19,496f8f1679b2d9f5fd2bfff5144b3ab6dbf7fc19,Checkpoint
kg,2012-04-08 16:26:09,https://api.github.com/repos/sq/JSIL/git/commits/3bed090564cb91e50315d15e17998427193cf8d8,3bed090564cb91e50315d15e17998427193cf8d8,Make the error for overloaded method groups more helpful.
kg,2012-04-08 15:38:13,https://api.github.com/repos/sq/JSIL/git/commits/0078ca9e41272f1aaa45c083bfaec0e412aaf935,0078ca9e41272f1aaa45c083bfaec0e412aaf935,Checkpoint
kg,2012-04-08 15:04:34,https://api.github.com/repos/sq/JSIL/git/commits/dd73834eb87f938a930d70fa24e98d186935147c,dd73834eb87f938a930d70fa24e98d186935147c,Checkpoint
kg,2012-04-08 14:14:39,https://api.github.com/repos/sq/JSIL/git/commits/5d46d82ce731155f5c1131d541dc9b6f7b3e3fb9,5d46d82ce731155f5c1131d541dc9b6f7b3e3fb9,Fix the Decimal stub missing a field definition necessary for MemberwiseClone to work
kg,2012-04-08 14:08:32,https://api.github.com/repos/sq/JSIL/git/commits/8c66bfd760323c99f9252fc371d17153f3dea55e,8c66bfd760323c99f9252fc371d17153f3dea55e,"For argument counts <= 4, don't use Array.slice or method.apply in MethodSignature.Call, CallVirtual, CallStatic and Construct."
kg,2012-04-08 14:00:39,https://api.github.com/repos/sq/JSIL/git/commits/7ff733e41f0ca29a7cd0f44ff436b9381ab33c01,7ff733e41f0ca29a7cd0f44ff436b9381ab33c01,"Generate a cached function to perform member copying in JSIL.CopyMembers. Speeds up the default MemberwiseClone implementation.
Eliminate some unnecessary code from InitializeStructFields."
kg,2012-04-08 13:47:29,https://api.github.com/repos/sq/JSIL/git/commits/0e08796adeb2ef105ac9a8f40c6688f394f3aa3a,0e08796adeb2ef105ac9a8f40c6688f394f3aa3a,Do simple in-place caching for MethodSignature.GetKey to reduce its average-case cost.
kg,2012-04-08 13:44:58,https://api.github.com/repos/sq/JSIL/git/commits/3d12b8901805fc79a165a279ab44792fdb51fe22,3d12b8901805fc79a165a279ab44792fdb51fe22,Implement a basic mechanism for assigning each unique method signature its own ID and caching it so that the cost of hashing it isn't incurred on every use.
kg,2012-04-08 13:15:20,https://api.github.com/repos/sq/JSIL/git/commits/eb163bf0e51790f1dcfbbb3fd37232f61f4043e1,eb163bf0e51790f1dcfbbb3fd37232f61f4043e1,"Fix translation issue with RPG starter kit sample (recursive generic parameter references)
Fix broken overloading of MemberwiseClone in System.Drawing"
kg,2012-04-08 12:55:09,https://api.github.com/repos/sq/JSIL/git/commits/f0112c1b00d75dd04a4347af2dacb0cf7ec593da,f0112c1b00d75dd04a4347af2dacb0cf7ec593da,"Fix inheriting an open generic interface, and add a test."
kg,2012-04-08 12:48:21,https://api.github.com/repos/sq/JSIL/git/commits/94f2412b9434c544e259fbdc6390d4b54e6c7512,94f2412b9434c544e259fbdc6390d4b54e6c7512,Fix error messages about replacing real methods with placeholders.
kg,2012-04-08 12:45:39,https://api.github.com/repos/sq/JSIL/git/commits/5c6517017fb839367c4515b82b0cd92270622ce7,5c6517017fb839367c4515b82b0cd92270622ce7,"Move tests using JSIgnore, JSReplacement and JSProxy out of SimpleTestCases since they pollute the type info container
Fix a busted error case in TypeReferenceInternal"
kg,2012-04-08 12:38:35,https://api.github.com/repos/sq/JSIL/git/commits/ae0114dd4f8866840bbfcd7cdb3682aa11cf253a,ae0114dd4f8866840bbfcd7cdb3682aa11cf253a,Fix decimal stubs
kg,2012-04-08 12:22:52,https://api.github.com/repos/sq/JSIL/git/commits/b7db4276440c9bc360fe174ce829c61bb390eb3a,b7db4276440c9bc360fe174ce829c61bb390eb3a,Fix typo
kg,2012-04-08 12:21:34,https://api.github.com/repos/sq/JSIL/git/commits/845b795fe6b0778cc78ac6f1cb8536c4684cea9c,845b795fe6b0778cc78ac6f1cb8536c4684cea9c,Fix broken LINQ query for identifying the position occupied by a generic parameter.
kg,2012-04-08 12:10:25,https://api.github.com/repos/sq/JSIL/git/commits/38e8b6a2d455b671dacb5cebf26507ad53133162,38e8b6a2d455b671dacb5cebf26507ad53133162,"Fix JSIL.Variable and JSIL.MemberReference
Fix Interlocked.CompareExchange
Fix static classes not having a __Members__ list
Fix MethodSignature.Call/CallStatic/CallVirtual not resolving generic type arguments"
kg,2012-04-08 12:02:48,https://api.github.com/repos/sq/JSIL/git/commits/9bcd4ceec63959af591177a64aaff54bcab276bf,9bcd4ceec63959af591177a64aaff54bcab276bf,"Fix external members not always being added to __Members__ and thus being ignored by generic method renaming and method group building.
Fix generic method renaming not escaping method names.
Fix the list building code in the ApplyMemberHiding."
kg,2012-04-08 11:20:15,https://api.github.com/repos/sq/JSIL/git/commits/1fd380d3486ba25e6b6d5f5a89a10d01f6cf85fc,1fd380d3486ba25e6b6d5f5a89a10d01f6cf85fc,Fix TranslateInterface not passing a TypeReferenceContext.
kg,2012-04-08 11:08:23,https://api.github.com/repos/sq/JSIL/git/commits/4d3080d0568dd38a38e59da498ec79ea5423e8a8,4d3080d0568dd38a38e59da498ec79ea5423e8a8,Fix busted TypeReference impl for ByReference types.
kg,2012-04-08 10:59:28,https://api.github.com/repos/sq/JSIL/git/commits/881f963f6d7665bdfb366bc9addef8d17103a9d7,881f963f6d7665bdfb366bc9addef8d17103a9d7,Handle more generic parameter permutations. Improve error handling.
kg,2012-04-08 10:47:13,https://api.github.com/repos/sq/JSIL/git/commits/4c1f9ad2a362deb789e7402e9341075ad2d76f68,4c1f9ad2a362deb789e7402e9341075ad2d76f68,Encapsulate the state of translation into a TypeReferenceContext and pass it around in all the appropriate places so that it's available when GenericParameters must be translated into meaningful tokens.
kg,2012-04-08 09:17:36,https://api.github.com/repos/sq/JSIL/git/commits/26082d9ac467a92ecde381c43194b94a5d86c58e,26082d9ac467a92ecde381c43194b94a5d86c58e,"Refactor JavascriptFormatter.TypeReference into a set of smaller type-specific functions
Make MethodSignature not a JSExpression anymore
Give MethodInfos a cached Signature member"
kg,2012-04-08 06:51:47,https://api.github.com/repos/sq/JSIL/git/commits/42ab68c99a3c3df05497491dfbabea30403b8602,42ab68c99a3c3df05497491dfbabea30403b8602,Work around a possible bug in Cecil that caused GenericParameters to compare as the same if their names were the same.
kg,2012-04-08 06:34:26,https://api.github.com/repos/sq/JSIL/git/commits/213b813d0777ab4f3229316b355b57bfd6b2a952,213b813d0777ab4f3229316b355b57bfd6b2a952,"Add focused test coverage for ILBlockTranslator.TypesAreEqual.
Tweak List.FindAll.
Make method signatures a node type."
kg,2012-04-08 05:22:54,https://api.github.com/repos/sq/JSIL/git/commits/cc9eb353bc918f405ab8277a77ab1d9cf5f441b5,cc9eb353bc918f405ab8277a77ab1d9cf5f441b5,"Add a hack to force bypassing constructors when creating default-value instances of structs in struct field initializers. Fixes various struct related test failures.
Fix field type checking being too strict
Fix remaining use of (now broken) 'this.GetType()'"
kg,2012-04-07 17:43:58,https://api.github.com/repos/sq/JSIL/git/commits/82c9a7cc08caf27a5f8b78f4509b89ac619ed4fc,82c9a7cc08caf27a5f8b78f4509b89ac619ed4fc,"Implement a hack that links the assembly IDs of $jsilcore and mscorlib so that types with the same names in each assembly have the same type IDs. Fixes various method signature issues caused by chicken-and-egg dependency problems.
Raytracer sample has no external problems now."
kg,2012-04-07 15:48:57,https://api.github.com/repos/sq/JSIL/git/commits/14034eddd2931a951e5794136839f0f6992b7233,14034eddd2931a951e5794136839f0f6992b7233,Fix Array.Of for positional generic parameters
kg,2012-04-07 15:23:02,https://api.github.com/repos/sq/JSIL/git/commits/2348390d49cf7e0a0b35e647a16a75eb83beb5ee,2348390d49cf7e0a0b35e647a16a75eb83beb5ee,Fix redundancy in struct field initializers.
kg,2012-04-07 15:18:20,https://api.github.com/repos/sq/JSIL/git/commits/61cd6dbe3e901472e47b6490825689e5232944cb,61cd6dbe3e901472e47b6490825689e5232944cb,"Fix primitive type definition translation (__IsIntegral__, __IsNumeric__, __IsNativeType__ weren't being set)
Make various efforts to detect and avoid infinite recursion in struct field initialization."
kg,2012-04-07 14:59:24,https://api.github.com/repos/sq/JSIL/git/commits/45ed97b2d26183a39345bd8210ec7aa2bcb28ac9,45ed97b2d26183a39345bd8210ec7aa2bcb28ac9,"Fix external method names not always being escaped.
Defer execution of externals functions until the type is first initialized, so that if the externals depend on other types/namespaces those dependencies are more likely to be available."
kg,2012-04-07 13:39:48,https://api.github.com/repos/sq/JSIL/git/commits/6e18a302ef04f7beed5e82512cafc9f33eae98ee,6e18a302ef04f7beed5e82512cafc9f33eae98ee,More work on the raytracer sample
kg,2012-04-07 13:17:01,https://api.github.com/repos/sq/JSIL/git/commits/d12d82f4f17237e6c45d1db8700678e6122aaa00,d12d82f4f17237e6c45d1db8700678e6122aaa00,Cleanup and bug fixes to get the raytracer sample running again.
kg,2012-04-07 12:57:57,https://api.github.com/repos/sq/JSIL/git/commits/895efd4442289ee643b3de3e0e1285213a450b31,895efd4442289ee643b3de3e0e1285213a450b31,"Fix the enum methods.
Change the proxy definition for Object.Equals and String.Split so that we don't have to add them to String's prototype."
kg,2012-04-07 12:07:24,https://api.github.com/repos/sq/JSIL/git/commits/8cc4f0bd99748d96d295bbae37b9b18fc27d338e,8cc4f0bd99748d96d295bbae37b9b18fc27d338e,"Give interfaces an actual .Of implementation so that closed forms of generic interfaces have distinct type IDs.
Fix LINQ stubs.
Fix __Interfaces__ list not inheriting members from base classes.
If a type inherits open generic interfaces, attempt to close them.
Make JSIL.ArrayEnumerator a generic type.
Fix some types not having an interface list."
kg,2012-04-07 10:43:54,https://api.github.com/repos/sq/JSIL/git/commits/baaee06404d6a779d8561e813784a536db447bda,baaee06404d6a779d8561e813784a536db447bda,"Implement conversion of generic parameters into positional parameters for arrays and generic instance types.
Add a test that ensures generic method signatures are correctly produced for various use cases.
Work around Mono.Cecil's broken handling of positional parameters by detecting them manually in GetTypeDefinition."
kg,2012-04-07 10:13:24,https://api.github.com/repos/sq/JSIL/git/commits/3839b2ac7b1e7bf4e9a9f11b259c5a064b5ba32d,3839b2ac7b1e7bf4e9a9f11b259c5a064b5ba32d,"When constructing method signatures, convert positional generic method parameters back to their original positional form so that overload resolution does not depend on the actual type parameters passed to the method at invocation time.
This means that the signature of T Foo<T> (T) will always be '!!0 Foo<T> (!!0)' regardless of the actual value of T for the purposes of overload resolution.
Fix Interlocked.CompareExchange.
Fix MethodSignature.toString's handling of positional generic method parameters.
Fix renaming a property to also rename its accessors.
Fix all the MetadataTests and FormattingTests."
kg,2012-04-07 08:57:31,https://api.github.com/repos/sq/JSIL/git/commits/88bffc2fd6540f438c53441c092afa9f66a2fece,88bffc2fd6540f438c53441c092afa9f66a2fece,Add support for invoking generic methods via dynamic and add a test.
kg,2012-04-07 08:37:06,https://api.github.com/repos/sq/JSIL/git/commits/1f197c25f108ab9f5c32993541fe2c00e5b71a9a,1f197c25f108ab9f5c32993541fe2c00e5b71a9a,"Don't treat the generic suffix as part of the actual method name, so that $b1 doesn't show up in simple method calls.
Add a test that actually covers using a generic method as a generic delegate. Correct the name of the old test (which actually covered using non-generic methods of generic types as delegates)"
kg,2012-04-07 08:30:02,https://api.github.com/repos/sq/JSIL/git/commits/6c8b111651438ae8fdc810b3a7c80fd964074701,6c8b111651438ae8fdc810b3a7c80fd964074701,"Make the generic argument count part of MethodSignatures
InterfaceBuilder.Method will automatically transform the passed-in method into a GenericMethod if the signature has generic arguments
Debuggability improvements by applying useful toStrings to various auto-generated method bodies
Checkpoint simplification of method names"
kg,2012-04-07 05:21:28,https://api.github.com/repos/sq/JSIL/git/commits/1912c9e594cec86668d9510802287154d97d2b1c,1912c9e594cec86668d9510802287154d97d2b1c,"Fix unbalanced indentation in label groups
Output readability improvements"
kg,2012-04-07 05:14:03,https://api.github.com/repos/sq/JSIL/git/commits/ec765573c9544903c8b0e7816ff06af7510c262c,ec765573c9544903c8b0e7816ff06af7510c262c,Simplify JavascriptFormatter and make it impossible for the indentation level to become negative.
kg,2012-04-06 15:38:06,https://api.github.com/repos/sq/JSIL/git/commits/1e8061e60ed2c9a3df5ae09552518ef9d27dfedd,1e8061e60ed2c9a3df5ae09552518ef9d27dfedd,Fix TypeRef.getTypeId being incorrect for array type references.
kg,2012-04-06 15:23:39,https://api.github.com/repos/sq/JSIL/git/commits/e6bb6ce326014c4e4a573916e6abde6e5a78d8e1,e6bb6ce326014c4e4a573916e6abde6e5a78d8e1,"Introduce a more concise syntax for type references: 'assembly.TypeRef(name, ga)' instead of 'new JSIL.TypeRef(assembly, name, ga)'"
kg,2012-04-06 15:19:44,https://api.github.com/repos/sq/JSIL/git/commits/b33b99c66ce5198df3ede205cf986f96f30684f0,b33b99c66ce5198df3ede205cf986f96f30684f0,"Emit fields, methods and properties in alphabetical order"
kg,2012-04-06 15:06:26,https://api.github.com/repos/sq/JSIL/git/commits/996523cc45ff63d2ca3847d7235250fb64d1b4c4,996523cc45ff63d2ca3847d7235250fb64d1b4c4,"Replace common uses of JSIL.New with MethodSignature.Construct.
JSIL.CreateInstanceOfType can accept a second argument that is the name of the constructor, to replace that special use of JSIL.New"
kg,2012-04-06 14:44:35,https://api.github.com/repos/sq/JSIL/git/commits/d82f61471ec5c07ac8002315973c0b2ee042113c,d82f61471ec5c07ac8002315973c0b2ee042113c,"Apply name mangling when generating $.Field calls.
Update the externals for Monitor.Enter/Exit"
kg,2012-04-06 14:39:56,https://api.github.com/repos/sq/JSIL/git/commits/5fe79ed03194056bc58b05e9794ec2ac67592bd5,5fe79ed03194056bc58b05e9794ec2ac67592bd5,Fix IsAssignableFrom
kg,2012-04-06 13:14:39,https://api.github.com/repos/sq/JSIL/git/commits/c6985b987373216985d76665029a4310dbdc2f5f,c6985b987373216985d76665029a4310dbdc2f5f,"Fix argument count for invocation of overloaded static methods.
Split overloaded static method invocations out into a CallStatic method for clarity."
kg,2012-04-06 13:04:23,https://api.github.com/repos/sq/JSIL/git/commits/e72198ab83ed26f13898dafb7d6577a331a1d0ec,e72198ab83ed26f13898dafb7d6577a331a1d0ec,"Fix auto-binding of interface properties by emitting unescaped method/property names into output JS and having the interface builder escape them instead, so that it can split interface-qualified names up into pieces appropriately."
kg,2012-04-06 12:43:14,https://api.github.com/repos/sq/JSIL/git/commits/114db3a35d9116ba34c5ca2a0587a08921712cbd,114db3a35d9116ba34c5ca2a0587a08921712cbd,Defer fixup of interface member qualified names until after fixup of properties. Fixes various missing interface members.
kg,2012-04-06 12:29:02,https://api.github.com/repos/sq/JSIL/git/commits/9d2799cd02fd1fa5bf56e408b30c44aaf8e1eb52,9d2799cd02fd1fa5bf56e408b30c44aaf8e1eb52,"Fix mixing of unescaped/escaped type names causing a type to be assigned multiple distinct type IDs.
Construct TypeRefs using unescaped type names instead of escaped type names."
kg,2012-04-06 12:15:45,https://api.github.com/repos/sq/JSIL/git/commits/b62a1a6852e94c76bf79a58f9754de2e9bfa681c,b62a1a6852e94c76bf79a58f9754de2e9bfa681c,"Fix ArrayOverload by emitting strongly-typed arrays in method signatures.
Fix ImplementExternals only copying over the mangled names of external methods.
Always defer definition of properties to type initialization.
Fix external member stubs displaying the wrong member names."
kg,2012-04-06 11:27:33,https://api.github.com/repos/sq/JSIL/git/commits/263cbf2f2ab4082a46ef67622f0f1f5bcafafe08,263cbf2f2ab4082a46ef67622f0f1f5bcafafe08,"Pull the method signature cache out of a static field so that it doesn't keep leaking memory indefinitely the more it's used.
Add support for manually emptying various cache data structures when they are no longer in use, to reduce GC complexity.
Change the unit tests so that their output directory is the same as everything else."
kg,2012-04-06 10:02:13,https://api.github.com/repos/sq/JSIL/git/commits/59907b8fca1f7985872807697a9028498d8eb13f,59907b8fca1f7985872807697a9028498d8eb13f,More static data cleanup
kg,2012-04-06 09:40:46,https://api.github.com/repos/sq/JSIL/git/commits/c0646515fc88c3c8200735baaf96cb763573f4db,c0646515fc88c3c8200735baaf96cb763573f4db,"Where possible, resolve generic parameters to real types when emitting JS for overloaded method invocations. This ensures that the signature used for the invocation matches the actual method signature.
When closing a generic type, rename any methods whose signatures have changed as a result of the type being closed."
kg,2012-04-06 07:28:45,https://api.github.com/repos/sq/JSIL/git/commits/fb2201c94e68e48c9027da1fdec3b328e81fbc7c,fb2201c94e68e48c9027da1fdec3b328e81fbc7c,Thread-safety fix for TypeInfo
kg,2012-04-06 07:08:55,https://api.github.com/repos/sq/JSIL/git/commits/b27c422035b1a6c4b87208b7a8effced2fc3e7ce,b27c422035b1a6c4b87208b7a8effced2fc3e7ce,Fix a use of the wrong Equals overload on an identifier
kg,2012-04-06 07:06:50,https://api.github.com/repos/sq/JSIL/git/commits/cb782e9332f441b0af215887142dd6598037da50,cb782e9332f441b0af215887142dd6598037da50,"Checkpoint work on building method groups for overloaded methods.
Move MemberIdentifier.Proxies into the type info provider so there aren't any static dependencies/state pollution issues
Fix IsSpecialName breaking reflection member filtering
Fix List<T>.FindAll"
kg,2012-04-06 01:16:30,https://api.github.com/repos/sq/JSIL/git/commits/ea597282c8cd61d92c23908b37632e2328b0fe1f,ea597282c8cd61d92c23908b37632e2328b0fe1f,"Construct all the MemberInfo instances for a type's members only once on first use, instead of on every invocation of GetMembersInternal."
kg,2012-04-05 10:00:59,https://api.github.com/repos/sq/JSIL/git/commits/29ea9c3084970711fb35f7c8d5306f6335fe2ee5,29ea9c3084970711fb35f7c8d5306f6335fe2ee5,Give static classes a context
kg,2012-04-05 09:25:34,https://api.github.com/repos/sq/JSIL/git/commits/14f0393c055dc8eeca09cc11f4f49e3cb9dbe196,14f0393c055dc8eeca09cc11f4f49e3cb9dbe196,"Make type IDs for generic type instances derived from the open form of the generic type, so that TypeRef.getTypeId can deterministically construct the right type ID without having to construct the type.
Produce strongly-typed JSIL.References where possible
Uniquely key generic parameters off the name+context combination so that if you construct the same parameter multiple times it always has the same type id."
kg,2012-04-05 07:13:48,https://api.github.com/repos/sq/JSIL/git/commits/86c0a8fb26da8cb16c73b0d6547f9d32a9312eec,86c0a8fb26da8cb16c73b0d6547f9d32a9312eec,Fix unnecessary $ argument to ExternalMembers
kg,2012-04-05 07:08:49,https://api.github.com/repos/sq/JSIL/git/commits/2e1bf06e9d7163b58c41170ee75e886e871cdb0a,2e1bf06e9d7163b58c41170ee75e886e871cdb0a,Update the System.Type externals to include method signatures.
kg,2012-04-05 07:00:04,https://api.github.com/repos/sq/JSIL/git/commits/ff0ee4fabfc4177de8c5c47878e79609096359e1,ff0ee4fabfc4177de8c5c47878e79609096359e1,Fix argument subscripting for Call/CallVirtual
kg,2012-04-05 06:57:45,https://api.github.com/repos/sq/JSIL/git/commits/298f9eff7445ad5e353b952599475818d15cd616,298f9eff7445ad5e353b952599475818d15cd616,Synthesize the struct fields list during type initialization so that $.Field doesn't form a cycle
kg,2012-04-05 06:12:52,https://api.github.com/repos/sq/JSIL/git/commits/c2a8964dc1999cfc811d0e34d933a6f3bf4dd65a,c2a8964dc1999cfc811d0e34d933a6f3bf4dd65a,Simplify JavascriptAstEmitter's handler for invocation expressions.
kg,2012-04-05 05:54:42,https://api.github.com/repos/sq/JSIL/git/commits/38e572bdd1e3ab78f94930f141bb4110499aae3f,38e572bdd1e3ab78f94930f141bb4110499aae3f,"MethodSignature has Call and CallVirtual methods for the two types of overloaded method invocations
Expand type information so that it is easier to detect whether a method has any overloads elsewhere in the type graph"
kg,2012-04-04 21:14:03,https://api.github.com/repos/sq/JSIL/git/commits/833297f06dd9f7293e9a67e4eb123126159bdffe,833297f06dd9f7293e9a67e4eb123126159bdffe,Fix delegate types not having __Context__
kg,2012-04-04 12:50:01,https://api.github.com/repos/sq/JSIL/git/commits/da6584d589d34d6e7e65e486b0eb234be4458587,da6584d589d34d6e7e65e486b0eb234be4458587,"Add a nasty hack for resolving unqualified type references to the correct type ID in basic cases instead of allocating a new ID for them.
Improve the error message for unimplemented externals when the external has a method signature."
kg,2012-04-04 12:25:01,https://api.github.com/repos/sq/JSIL/git/commits/c230c0ddc6f2e9971d0bddea1d78e7b4349c23f5,c230c0ddc6f2e9971d0bddea1d78e7b4349c23f5,Further progress on new overloading-aware implementation of external methods
kg,2012-04-04 11:47:43,https://api.github.com/repos/sq/JSIL/git/commits/6ce87be643ddeb201f6903b8832b68bdeeb318ed,6ce87be643ddeb201f6903b8832b68bdeeb318ed,"Don't instantiate types just to get their unique TypeID. Fixes various cyclical dependencies between methods/fields and their declaring types.
Various recursive initialization cleanup.
Partially implement support for InterfaceBuilder.ExternalMethod that allows specifying the precise signature of an external method.
List the tests that passed in FailingTests."
kg,2012-04-04 10:19:42,https://api.github.com/repos/sq/JSIL/git/commits/1aed7c870ba93199f8d60ed6f65025aa4971d2ec,1aed7c870ba93199f8d60ed6f65025aa4971d2ec,Fix usage of precise names when an invocation has no JSMethod
kg,2012-04-04 10:05:56,https://api.github.com/repos/sq/JSIL/git/commits/d43054ac6540800bf2d0ffb9e19df3c1a6d1ef5d,d43054ac6540800bf2d0ffb9e19df3c1a6d1ef5d,"Checkpoint method signature implementation
Checkpoint recursive construction cleanup"
kg,2012-04-04 07:51:33,https://api.github.com/repos/sq/JSIL/git/commits/c8429ad7d8ed21aa27183171e73db624b713020e,c8429ad7d8ed21aa27183171e73db624b713020e,Checkpointing work on providing full signatures of methods when declaring them so that overload resolvers and mangled names can be constructed automatically.
kg,2012-04-04 07:28:31,https://api.github.com/repos/sq/JSIL/git/commits/50e7a1a538add69a5338dedc060932012a79f07a,50e7a1a538add69a5338dedc060932012a79f07a,Clean up handling of references to types in field definitions
kg,2012-04-04 07:17:15,https://api.github.com/repos/sq/JSIL/git/commits/8a7c7f2b684406a78bb5ae494ef525c47075a280,8a7c7f2b684406a78bb5ae494ef525c47075a280,"Eliminate the need for manual $.StructFields() calls and automatically generate the list of struct fields by checking the types of declared fields
Solve various recursion issues with field definitions and default values."
kg,2012-04-04 06:37:15,https://api.github.com/repos/sq/JSIL/git/commits/112457dbb3c8c621a777140c5a61748847c1d637,112457dbb3c8c621a777140c5a61748847c1d637,"Fix incorrect signature for System.Func variants.
Pass type information when defining fields.
Extract out logic for hashing lists of types and for resolving lists of type references."
kg,2012-04-04 06:04:50,https://api.github.com/repos/sq/JSIL/git/commits/1b0c14071ef9110be982f333c051393baff4e853,1b0c14071ef9110be982f333c051393baff4e853,"Fix CurrentThread/ManagedThreadId
Put newlines between type names/ids in lists"
kg,2012-04-04 02:41:18,https://api.github.com/repos/sq/JSIL/git/commits/d246ca95cae0e1e324034fe019eed2d03ccc315c,d246ca95cae0e1e324034fe019eed2d03ccc315c,Fix generic properties.
kg,2012-04-04 02:30:46,https://api.github.com/repos/sq/JSIL/git/commits/bbc3012da51f39c5ff6d13920f5c58d2458a7faa,bbc3012da51f39c5ff6d13920f5c58d2458a7faa,"Fix struct field inheritance
Strip the [] from ImplementInterfaces and StructFields"
kg,2012-04-04 02:21:40,https://api.github.com/repos/sq/JSIL/git/commits/f27c93826adf2786e10ecbe4a350f85b872d0389,f27c93826adf2786e10ecbe4a350f85b872d0389,"Move ImplementInterfaces to the interface builder.
Bootstrap cleanup to get more tests passing."
kg,2012-04-04 02:12:34,https://api.github.com/repos/sq/JSIL/git/commits/68018e249d134cb2f859b4d95e8e082bf8a107f6,68018e249d134cb2f859b4d95e8e082bf8a107f6,Fix field renaming
kg,2012-04-04 02:05:10,https://api.github.com/repos/sq/JSIL/git/commits/e871ef2c61f3e387d91bbab85d7db91ed1844a91,e871ef2c61f3e387d91bbab85d7db91ed1844a91,"Move StructFields from object prototypes to type objects, and move AddStructFields to the interface builder.
Move property definitions to the interface builder, and automatically locate getters/setters instead of explicitly passing them in."
kg,2012-04-04 01:47:10,https://api.github.com/repos/sq/JSIL/git/commits/d716035d7bddd6e1fa381cd05a8d7fa70f5424fa,d716035d7bddd6e1fa381cd05a8d7fa70f5424fa,"Generalized reflection implementation a little.
GetFields works now."
kg,2012-04-04 01:30:42,https://api.github.com/repos/sq/JSIL/git/commits/c8f4c01db61b2363db5a23d4768008ac18cf7648,c8f4c01db61b2363db5a23d4768008ac18cf7648,"Checkpoint sweeping refactoring of reflection and interface-building.
Objects' public interfaces are no longer built piecemeal and are instead constructed by an 'interface builder' object that builds reflection metadata as it goes."
kg,2012-04-04 00:24:20,https://api.github.com/repos/sq/JSIL/git/commits/23149170bb37d014d6aa5f6f548fe8024517f02f,23149170bb37d014d6aa5f6f548fe8024517f02f,Add the build_demos script
kg,2012-04-03 22:21:53,https://api.github.com/repos/sq/JSIL/git/commits/0676a1b20dcea61453f175d13f43ab8f609e6c6d,0676a1b20dcea61453f175d13f43ab8f609e6c6d,Implement including inherited methods in GetMethods output
kg,2012-03-30 06:02:46,https://api.github.com/repos/sq/JSIL/git/commits/2be8a3e1e39a0b39ba72f1bb3bc35a257c07f005,2be8a3e1e39a0b39ba72f1bb3bc35a257c07f005,"Fix List<T>'s pre-size constructor.
Fix Dictionary<K, V>'s get_Values and get_Keys enumerables to stay in sync with the contents of the dictionary after they are retrieved.
Implement Enumerable.Any.
Don't use a temporary image/dataURL for multiplied images; just use the canvases. This eliminates flickering in certain browsers."
kg,2012-03-30 05:46:32,https://api.github.com/repos/sq/JSIL/git/commits/ccac0ba18d979507bbe07ea093abe9f17541f837,ccac0ba18d979507bbe07ea093abe9f17541f837,"Implement a hack that emulates SpriteBatch's behavior for 1x1 source images compatibly across all browsers (Since canvas implementations love to disagree on how to handle image upscaling and image edges and no browser works the same).
Implement Enumerable.First().
Stub out Matrix.CreateOrthographicOffCenter, Effect.get_CurrentTechnique and EffectTechnique.get_Passes.
Fix DrawUserPrimitives not working for lines.
Simplify render targets.
Simplify SetData for bytes, and drop support for int32/uint32 since they were busted and slower anyway."
kg,2012-03-30 04:22:53,https://api.github.com/repos/sq/JSIL/git/commits/cf357cef24104ef5d95563df24d18084e077bb01,cf357cef24104ef5d95563df24d18084e077bb01,"Fix various problems with the implementation of GraphicsDevice.Viewport.
Partially implement Matrix.CreateTranslation and Matrix.CreateScale.
Partially implement the transformMatrix argument to SpriteBatch.Begin."
kg,2012-03-29 08:51:03,https://api.github.com/repos/sq/JSIL/git/commits/07706aebe1af80809ada7e4cb8eafc0d1b217628,07706aebe1af80809ada7e4cb8eafc0d1b217628,Fix SpriteBatch.InternalDraw and InternalDrawString not cloning any struct arguments in deferred mode.
kg,2012-03-29 08:36:26,https://api.github.com/repos/sq/JSIL/git/commits/dd6a46a012b63f2a95a42e096433b67d5c68a3b1,dd6a46a012b63f2a95a42e096433b67d5c68a3b1,Fix some RGBA/BGRA nonsense
kg,2012-03-29 08:24:50,https://api.github.com/repos/sq/JSIL/git/commits/9f3b9b139f83ddf3ee50eb2404e3feab55161950,9f3b9b139f83ddf3ee50eb2404e3feab55161950,"Fix ReadUInt16 and ReadUInt32
Fix Color-from-Vector constructors
Fix SetData when passed Color[], Int32[] or UInt32[]"
kg,2012-03-29 06:46:47,https://api.github.com/repos/sq/JSIL/git/commits/106d7736987184a55c97ae4482c8557f59f6af1b,106d7736987184a55c97ae4482c8557f59f6af1b,"Partially implement render targets.
Clear the framebuffer before each call to Game.Draw().
Implement Rectangle.Offset."
kg,2012-03-29 06:24:56,https://api.github.com/repos/sq/JSIL/git/commits/8cbf88954add96be7d099e4783ab49f55594e778,8cbf88954add96be7d099e4783ab49f55594e778,"Make the Dictionary implementation more accurate.
Implement Dictionary.TryGetValue.
Implement Stopwatch.
Fix broken prototype in MakeEnum.
Fix various smaller enum bugs."
kg,2012-03-29 05:45:52,https://api.github.com/repos/sq/JSIL/git/commits/6cd4fdf8c875c9f7b0a1a1fb2ce5df5695e38975,6cd4fdf8c875c9f7b0a1a1fb2ce5df5695e38975,Fix Enum.Parse and implement Enum.TryParse
kg,2012-03-29 05:29:29,https://api.github.com/repos/sq/JSIL/git/commits/def09ebadc0a5c700f149775bd7aedb965b6deb5,def09ebadc0a5c700f149775bd7aedb965b6deb5,"Fix handling of an alternate form of switch statements with lookup dictionaries, and add a test.
Remove some Debugger.Break statements since they make tests slower.
Implement Ldvirtftn."
kg,2012-03-29 04:47:32,https://api.github.com/repos/sq/JSIL/git/commits/9b54559ea9d661d145a118832b523d2aaddf89e1,9b54559ea9d661d145a118832b523d2aaddf89e1,"Implement Rectangle.Intersect(Rectangle, Rectangle) and Intersect(ref Rectangle, ref Rectangle, ref Rectangle)"
kg,2012-03-29 04:38:52,https://api.github.com/repos/sq/JSIL/git/commits/0f4c4661ec6a718c86209ca6951081c7767bfa06,0f4c4661ec6a718c86209ca6951081c7767bfa06,"Implement Linq ToArray() and Select(Func<TSource, TResult>)
Add a test for an ILSpy control flow bug
Implement TryParse on integers"
kg,2012-03-28 17:03:30,https://api.github.com/repos/sq/JSIL/git/commits/a5fd3bf8b7097392bf55eafae64d542cf6a4fe3c,a5fd3bf8b7097392bf55eafae64d542cf6a4fe3c,"Fix XNACore reading from the wrong assembly in XNA 3.1 games.
Fix the raytracer sample using the wrong manifest."
kg,2012-03-28 16:49:28,https://api.github.com/repos/sq/JSIL/git/commits/bb8c8c10872ce7f1eb6f04242b53379625f084b3,bb8c8c10872ce7f1eb6f04242b53379625f084b3,"MemberwiseClone the draw position in InternalDrawString since we're mutating it after using it. Otherwise, if the draw gets deferred the characters will end up in the wrong place."
kg,2012-03-28 16:42:37,https://api.github.com/repos/sq/JSIL/git/commits/cc29ca4e7018a3a7e301a4ad1cfe4b7d86a211ec,cc29ca4e7018a3a7e301a4ad1cfe4b7d86a211ec,"Fix more strict mode errors.
Fix HideBaseMethod by ensuring non-virtual methods are called through the prototype unless they are sealed or the defining type has no derived types."
kg,2012-03-28 16:20:44,https://api.github.com/repos/sq/JSIL/git/commits/8ff0a4b1ab8a856e4c004773520566fec19d5392,8ff0a4b1ab8a856e4c004773520566fec19d5392,"Fixed AllFailingTests suppressing JS output
Fixed a few strict-mode errors in SpiderMonkey
Added markusjohnsson's test for overloaded virtual methods"
kg,2012-03-28 06:32:03,https://api.github.com/repos/sq/JSIL/git/commits/f04dca028669002751270107580283e1626ee613,f04dca028669002751270107580283e1626ee613,"If an assembly is in the ignore list, don't translate it even if it's produced by a build of a solution.
Implement Rectangle.get_Location, String.IndexOfAny/LastIndexOfAny/Substring, and Array.CopyTo(Array, int)."
kg,2012-03-28 06:05:50,https://api.github.com/repos/sq/JSIL/git/commits/d9e4ccf59154739149e8119db26a63002b1fd6a9,d9e4ccf59154739149e8119db26a63002b1fd6a9,"Never translate JSIL.Meta.
Make Dictionary.set_Item return the value.
Implement Type.get_Assembly, get_Name, get_Namespace, and IsSubclassOf.
Implement Activator.CreateInstance.
Implement Enum.GetNames and GetValues.
Fix GetTypeFromAssembly choking on non-generic types."
kg,2012-03-28 05:27:40,https://api.github.com/repos/sq/JSIL/git/commits/f8e3a392c112330b65fabe29d49ba4fbe6bc4734,f8e3a392c112330b65fabe29d49ba4fbe6bc4734,Fix TypeIds not being properly assigned to both public interfaces and type objects for specific cases
kg,2012-03-28 05:12:28,https://api.github.com/repos/sq/JSIL/git/commits/4ed1b679aa5907a2a595f66da67ac6d4cc19c07d,4ed1b679aa5907a2a595f66da67ac6d4cc19c07d,Mark vector comparison and arithmetic operators as pure
kg,2012-03-28 05:09:07,https://api.github.com/repos/sq/JSIL/git/commits/ae2f1dc3b002c6225839e92468736440d4d27183,ae2f1dc3b002c6225839e92468736440d4d27183,"Tag SpriteBatch methods as not mutating or storing their arguments (since this is true for the HTML5 versions, at least)"
kg,2012-03-28 05:03:22,https://api.github.com/repos/sq/JSIL/git/commits/9b84e3982c41c7725dde2812e7a132df7ccc6365,9b84e3982c41c7725dde2812e7a132df7ccc6365,"Update proxies to mark some XNA Rectangle and Point methods as Pure so that struct copies are not generated for their arguments. This dramatically improves performance in some cases.
Don't blow up if an XACT cue failed to load at runtime."
kg,2012-03-28 04:44:45,https://api.github.com/repos/sq/JSIL/git/commits/faf0a38f376f5a7fcbdc68108ee071386f6a8004,faf0a38f376f5a7fcbdc68108ee071386f6a8004,"Implement a new approach to generic parameter resolution that solves both name shadowing and global state pollution
Make the __IsClosed__ attribute of types more accurate
Fix numeric types to work with the new type system"
kg,2012-03-28 03:17:02,https://api.github.com/repos/sq/JSIL/git/commits/52edb3fda964408d87bb710343fb88f94590b0f2,52edb3fda964408d87bb710343fb88f94590b0f2,"More XNA tweaks
Expanded the parameter name shadowing test to fully cover the XNA problems"
kg,2012-03-28 02:48:05,https://api.github.com/repos/sq/JSIL/git/commits/38cc047fed64aa6f0a68f0768f53f35f966e51f6,38cc047fed64aa6f0a68f0768f53f35f966e51f6,Fix JSIL.DefaultValue
kg,2012-03-28 02:45:38,https://api.github.com/repos/sq/JSIL/git/commits/2b7971312c63e89f2d7d8f4c5b6dbc6f4172d96f,2b7971312c63e89f2d7d8f4c5b6dbc6f4172d96f,Fix strict mode error related to argument name
kg,2012-03-28 02:43:41,https://api.github.com/repos/sq/JSIL/git/commits/61406a3ea3033af4692845f05ab9886dc4e4d8b7,61406a3ea3033af4692845f05ab9886dc4e4d8b7,Fix JSIL.Array.New breaking on new-style type objects.
kg,2012-03-28 02:31:06,https://api.github.com/repos/sq/JSIL/git/commits/e4b4bae224630c015538c7816033860a3c503632,e4b4bae224630c015538c7816033860a3c503632,"Fix unhandled exception in GetTypeInternal on failure.
Fix Color implementation in XNA3 mode."
kg,2012-03-28 02:27:46,https://api.github.com/repos/sq/JSIL/git/commits/6fd0fdfc119d043e76210b48b593952f2bcf6f17,6fd0fdfc119d043e76210b48b593952f2bcf6f17,"Fix XNA Color implementation.
Fix List<T>.AsReadOnly.
Fix XNB loading."
kg,2012-03-28 02:19:32,https://api.github.com/repos/sq/JSIL/git/commits/cef09d1e201a3834ac2c99ec675008f293e0901b,cef09d1e201a3834ac2c99ec675008f293e0901b,Content changed
kg,2012-03-28 02:17:55,https://api.github.com/repos/sq/JSIL/git/commits/740d95510785a73de778dbb2b435486b2d04befe,740d95510785a73de778dbb2b435486b2d04befe,Fix erroneous error message when processing XACT projects.
kg,2012-03-28 02:16:23,https://api.github.com/repos/sq/JSIL/git/commits/c6eeba25bf90c4bc00dcbfa0d61cf4da4b6df23d,c6eeba25bf90c4bc00dcbfa0d61cf4da4b6df23d,Fix busted generic parameter property definition
kg,2012-03-28 02:11:46,https://api.github.com/repos/sq/JSIL/git/commits/224c6c7925a4f4202309a69d5afac66604252497,224c6c7925a4f4202309a69d5afac66604252497,Fix generic parameter name shadowing.
kg,2012-03-28 01:42:28,https://api.github.com/repos/sq/JSIL/git/commits/d71d05525f96eb5569da4e28757a3f21a43c66c1,d71d05525f96eb5569da4e28757a3f21a43c66c1,"Fix System.Array and System.Array.Of(T) not being usable as constructors
Fix System.Array.Of not defining CheckType"
kg,2012-03-28 01:32:48,https://api.github.com/repos/sq/JSIL/git/commits/05bae94f6c7ea5338d4ffe9632c0f0b5f1b08161,05bae94f6c7ea5338d4ffe9632c0f0b5f1b08161,Fix System.Array.Of binding arguments incorrectly.
kg,2012-03-28 01:29:17,https://api.github.com/repos/sq/JSIL/git/commits/c811bac6c57f34c714f7da5bdbbc51898f1f14b7,c811bac6c57f34c714f7da5bdbbc51898f1f14b7,Make System.Array respect the public interface/type object split.
kg,2012-03-28 01:17:55,https://api.github.com/repos/sq/JSIL/git/commits/a512e392b3b881852ec7eb8f3d529fd5753374a1,a512e392b3b881852ec7eb8f3d529fd5753374a1,Fix ResolveGenericParameters mutating global state
kg,2012-03-28 01:03:03,https://api.github.com/repos/sq/JSIL/git/commits/e83ec4a8ae28d729529b36730e3dbf18f687bef7,e83ec4a8ae28d729529b36730e3dbf18f687bef7,"Ensure that type arguments to generic classes and functions are both type objects, not public interfaces.
Fix some problems with JSIL.CheckType and the public interface/type object split.
Fix ResolveGenericParameters for the public interface/type object split.
Update MakeInterface to honor the public interface/type object split.
Fix IsAssignableFrom for interfaces that inherit other interfaces."
kg,2012-03-27 23:58:09,https://api.github.com/repos/sq/JSIL/git/commits/f132fcd166669d6a7ae8cd857a0b04ac5f620a22,f132fcd166669d6a7ae8cd857a0b04ac5f620a22,"Fix syntax errors from merge
Fix toString on generic delegate instances"
kg,2012-03-27 23:12:46,https://api.github.com/repos/sq/JSIL/git/commits/f92ac1abbf9179d0090b186d22e1996a812c9958,f92ac1abbf9179d0090b186d22e1996a812c9958,"Merge branch 'master' into reflection

Conflicts:
	Libraries/JSIL.Bootstrap.js
	Libraries/JSIL.Core.js
	Proxies/Array.cs"
kg,2012-03-27 20:08:14,https://api.github.com/repos/sq/JSIL/git/commits/1435b7d0645355a03dbf4956f7257f326e82674d,1435b7d0645355a03dbf4956f7257f326e82674d,"Implement Assembly.GetExecutingAssembly(), GetType(string), and GetType(string, bool).
Implement Debug.WriteLine(string)"
kg,2012-03-27 19:25:09,https://api.github.com/repos/sq/JSIL/git/commits/817ac618503286d07dd5dbef7f86ca1acd1b5363,817ac618503286d07dd5dbef7f86ca1acd1b5363,Fix JSIL.Array.New for enums.
kg,2012-03-27 19:20:49,https://api.github.com/repos/sq/JSIL/git/commits/5d7f7a4832b18283f318efa69b8b535742b4b6be,5d7f7a4832b18283f318efa69b8b535742b4b6be,Fix recursive constructor calls in the presence of inheritance causing infinite recursion.
kg,2012-03-27 19:20:28,https://api.github.com/repos/sq/JSIL/git/commits/873eed751377fc644957f1ec8888326412173eda,873eed751377fc644957f1ec8888326412173eda,Preserve specific load order for script assets and load them in that order.
kg,2012-03-27 18:38:24,https://api.github.com/repos/sq/JSIL/git/commits/9ad22c7c8f1959321889bd3238b6af32cbcd9276,9ad22c7c8f1959321889bd3238b6af32cbcd9276,Strict mode fucking sucks. So does loading scripts dynamically in JS. I give up.
kg,2012-03-27 17:50:02,https://api.github.com/repos/sq/JSIL/git/commits/b6e3ce32df2b9549805beafb2da5e503c2a2ea0a,b6e3ce32df2b9549805beafb2da5e503c2a2ea0a,"Provide a simple JSON deserialization stub.
Handle duplicate proxy loads better.
Implement a bunch of Vector3 static accessors.
Stub out some Matrix members.
Stub out RenderTarget2D(GraphicsDevice, int, int).
Implement Texture2D._ctor$1 and _ctor$2."
kg,2012-03-27 17:20:52,https://api.github.com/repos/sq/JSIL/git/commits/8f5ca23d5f2ed770e04cb255bea76352b95277f8,8f5ca23d5f2ed770e04cb255bea76352b95277f8,"Allow the use of %assemblypath% in the Assemblies.Proxies list in configuration files. If an %assemblypath% reference resolves to a nonexistent file, ignore it."
kg,2012-03-27 17:04:09,https://api.github.com/repos/sq/JSIL/git/commits/3c41e446158a1132632c5e477264033201d78d41,3c41e446158a1132632c5e477264033201d78d41,"Allow use of %configpath% in the Proxies list in configuration files
Produce a sensible error message if an assembly you ask to load doesn't exist
Implement StringBuilder.Length and StringBuilder.Append(char[], int, int)"
kg,2012-03-27 16:49:33,https://api.github.com/repos/sq/JSIL/git/commits/155d0a403307bc95a2753ffe47699a8449de22cc,155d0a403307bc95a2753ffe47699a8449de22cc,Remove unnecessary 'new' keywords on some proxies
kg,2012-03-27 16:48:18,https://api.github.com/repos/sq/JSIL/git/commits/9af36b66d85aaf9ba94d0f1289e7a679af5b0ef9,9af36b66d85aaf9ba94d0f1289e7a679af5b0ef9,"Implement String.ToCharArray()
Implement Dictionary.get_Keys and Dictionary.get_Values"
kg,2012-03-27 16:35:16,https://api.github.com/repos/sq/JSIL/git/commits/e87584325d70201c53c5bd83e7cbedc220bb460e,e87584325d70201c53c5bd83e7cbedc220bb460e,"Fix case sensitivity for file assets and properly strip the file root from their path
Implement Dictionary.get_Count
Implement File.ReadAllText(filename)
Partially stub out StackTrace and StackFrame and MemberInfo"
kg,2012-03-27 16:28:15,https://api.github.com/repos/sq/JSIL/git/commits/09c0c82ecdaf0e9d9c6a4dcb43ef4f3d17f7253c,09c0c82ecdaf0e9d9c6a4dcb43ef4f3d17f7253c,"Handle SoundEffectProcessor in addition to SongProcessor
Handle content project entries with no build step but with CopyToOutputDirectory set to Always"
kg,2012-03-27 16:05:24,https://api.github.com/repos/sq/JSIL/git/commits/42df01824bad2a9b13234ec44e061aec5ff9f5ac,42df01824bad2a9b13234ec44e061aec5ff9f5ac,"Tweak the default configuration a little.
Detect cases where Mono.Cecil has choked while loading an assembly and don't try to translate that assembly (it'll fail anyway).
Implement Conv_Ovf_I and Conv_Ovf_I_Un
Map untranslatable gotos into runtime errors."
kg,2012-03-27 16:03:44,https://api.github.com/repos/sq/JSIL/git/commits/ef0112b23a3b52b76296c74d94270e18918a3d13,ef0112b23a3b52b76296c74d94270e18918a3d13,Fix loading two versions of the same assembly.
kg,2012-03-27 15:43:24,https://api.github.com/repos/sq/JSIL/git/commits/035f1ddc41414896937b8112af039b784770757c,035f1ddc41414896937b8112af039b784770757c,"Handle references to structs in the valueof expression
Handle the Wrap IL node
Allow forcing use of the raw XNB for particular importers/processors
Treat all SongProcessor nodes as music files"
kg,2012-03-27 05:29:01,https://api.github.com/repos/sq/JSIL/git/commits/84479dbbe69c868ecea49f6947bb5d48e81646d6,84479dbbe69c868ecea49f6947bb5d48e81646d6,Add warning message about broken audio support in Safari and IE
kg,2012-03-27 05:21:42,https://api.github.com/repos/sq/JSIL/git/commits/adb95788de92170dd93087e11bd282f4d5770c03,adb95788de92170dd93087e11bd282f4d5770c03,Work around Safari bug that prevents sound loading. Sound is still pretty broken in IE.
kg,2012-03-27 04:59:18,https://api.github.com/repos/sq/JSIL/git/commits/0a427960ce19293f6383755da95e5b906aaff6fe,0a427960ce19293f6383755da95e5b906aaff6fe,"Add a basic implementation of XACT SoundBank and Cue.
Add support for processing XACT audio projects to generate .soundBank files along with audio for each wave in the project."
kg,2012-03-27 00:39:21,https://api.github.com/repos/sq/JSIL/git/commits/8f9016a7a23569feb5dcaaaafc6003abb3ab3496,8f9016a7a23569feb5dcaaaafc6003abb3ab3496,Fix struct copies erroneously being eliminated when an argument is aliased by a local variable. This fixes player/enemy statistics accumulating infinitely in the RPG Starter Kit.
kg,2012-03-27 00:01:49,https://api.github.com/repos/sq/JSIL/git/commits/43338ce72753ed051baa4e42249afd72f99ff30d,43338ce72753ed051baa4e42249afd72f99ff30d,"Preserve the case of asset names when exposing them to XNA code since altering the case of the names can change game behavior (it breaks the RPG starter kit's quest system, for example)"
kg,2012-03-26 22:37:27,https://api.github.com/repos/sq/JSIL/git/commits/8d7ec0d57f65ce53572c78241acd8b21bada8ac5,8d7ec0d57f65ce53572c78241acd8b21bada8ac5,"Abort the build via a pre-build event if the JSIL solution configuration is not Debug or Release.
Abort the build via a pre-build event if the JSIL solution platform is not x86."
kg,2012-03-26 21:29:14,https://api.github.com/repos/sq/JSIL/git/commits/cbf3b0671917e4e6b6f7d552edcadefe52f41c23,cbf3b0671917e4e6b6f7d552edcadefe52f41c23,"Opera shoves nulls into your response body if you ask for it in text/plain with a user-defined charset, so ask for it as application/octet-stream instead."
kg,2012-03-26 21:21:36,https://api.github.com/repos/sq/JSIL/git/commits/e4e4e47ea7258e23e59cf8b3e46942b5b6d973b1,e4e4e47ea7258e23e59cf8b3e46942b5b6d973b1,Fix parallel asset loader by making scripts participate in deferred loading.
kg,2012-03-26 20:27:55,https://api.github.com/repos/sq/JSIL/git/commits/e71c9eb88d086bf9712502424d34909fb1d3aa2e,e71c9eb88d086bf9712502424d34909fb1d3aa2e,Improve the asset loader to pull down multiple assets from the network in parallel and then initialize them all at once sequentially after they're all loaded.
kg,2012-03-26 19:44:46,https://api.github.com/repos/sq/JSIL/git/commits/adc7cc3f9a9a28f82678e499ccd5c8acb6006ef8,adc7cc3f9a9a28f82678e499ccd5c8acb6006ef8,"Working implementation of DXT4/DXT5
Fix various small bugs in the content project processing code"
kg,2012-03-26 19:01:59,https://api.github.com/repos/sq/JSIL/git/commits/ea4d3db103d80bfa33871b4a40ebd9cae115b901,ea4d3db103d80bfa33871b4a40ebd9cae115b901,"Partially implement DXT1 and DXT5
Fix incorrect byte order for 565 color decoding."
kg,2012-03-26 18:15:10,https://api.github.com/repos/sq/JSIL/git/commits/07f3996c13af248cefc3db4249095ba30fe29768,07f3996c13af248cefc3db4249095ba30fe29768,Fix looping for HTML5 audio sources
kg,2012-03-26 18:12:03,https://api.github.com/repos/sq/JSIL/git/commits/1e2cfdddbe632495486dc00629a2623786756f4b,1e2cfdddbe632495486dc00629a2623786756f4b,Process sound file content by converting it to mp3 and ogg files and adding both to the manifest
kg,2012-03-26 16:23:55,https://api.github.com/repos/sq/JSIL/git/commits/129c87ee671a2b1c893406613b7e4ab03a787196,129c87ee671a2b1c893406613b7e4ab03a787196,"Tweak Texture2D implementation to be compatible with XNA3.1 in addition to XNA4
Process XNA3 content projects in the XNA3 profile"
kg,2012-03-26 16:01:24,https://api.github.com/repos/sq/JSIL/git/commits/af0ab63e5887b3319486b3142b7f338dea4113c2,af0ab63e5887b3319486b3142b7f338dea4113c2,"Use webkitAudioContext if available, to work around Chrome's terrible support for <audio>
Use ArrayBuffers when fetching data over XHR if possible.
Make JSIL.IsArray return true for typed arrays.
Use async XHR when loading assets."
kg,2012-03-26 15:30:53,https://api.github.com/repos/sq/JSIL/git/commits/9421af4f4c189531fb7a00eff3201421c9391cc3,9421af4f4c189531fb7a00eff3201421c9391cc3,"Don't use the loop attribute of the Audio element since Firefox doesn't implement it.
Support multiple instances of sound effects by cloning the audio node and playing it. This doesn't work in WebKit since Chrome and Safari are terrible, but I can probably solve that some other way."
kg,2012-03-26 14:19:10,https://api.github.com/repos/sq/JSIL/git/commits/84dbc205ea78e0fcc8c172b41dc5f35f151c9af3,84dbc205ea78e0fcc8c172b41dc5f35f151c9af3,Fix an off-by-one error in the fixed time step implementation
kg,2012-03-26 14:15:24,https://api.github.com/repos/sq/JSIL/git/commits/dee6f46043da1e5c286ba5bba5510306e3a8ae4c,dee6f46043da1e5c286ba5bba5510306e3a8ae4c,Implement a workaround for Chrome being ridiculously slow at drawing canvases.
kg,2012-03-26 13:50:38,https://api.github.com/repos/sq/JSIL/git/commits/b595276856aa7ae78efa9ea11365bafc12d99ff8,b595276856aa7ae78efa9ea11365bafc12d99ff8,"Fix JSIL.CheckType not working when the value passed in is a function
Process .tga texture assets by copying the xnb to the output folder
Implement loading of raw Texture2D xnb assets"
kg,2012-03-26 13:21:55,https://api.github.com/repos/sq/JSIL/git/commits/d59b03090b229651b9d68d87f6ca0aaf6aac2d8d,d59b03090b229651b9d68d87f6ca0aaf6aac2d8d,Fix enum negation
kg,2012-03-26 13:08:06,https://api.github.com/repos/sq/JSIL/git/commits/140ab04a6687b8a31b1d374f7d57adeedb43c6ba,140ab04a6687b8a31b1d374f7d57adeedb43c6ba,Implement Game.IsFixedTimeStep and Game.TargetElapsedTime
kg,2012-03-26 12:50:51,https://api.github.com/repos/sq/JSIL/git/commits/185c093ef47df7df9f5dbfcd6227faf6580596b2,185c093ef47df7df9f5dbfcd6227faf6580596b2,"Finish DXT2/DXT3 implementation.
Fix XNB SpriteFont's implementation of the scale parameter."
kg,2012-03-26 12:39:56,https://api.github.com/repos/sq/JSIL/git/commits/ee107b2bf63eaf37d7abd0c9070a501f07b0c615,ee107b2bf63eaf37d7abd0c9070a501f07b0c615,"Partial DXTC decompression implementation for loading SpriteFonts generated from TTFs.
Fix XNB files being loaded from fileRoot instead of contentRoot."
kg,2012-03-26 11:50:03,https://api.github.com/repos/sq/JSIL/git/commits/0f86d3b9916798e4951c0f273f154dc6f12fbb2d,0f86d3b9916798e4951c0f273f154dc6f12fbb2d,"Emit line endings in a few places in output JS so it's more readable
Store a manifest in AppData\Local\JSIL containing information on compressed images from content project processing so that unchanged images don't have to be recompressed"
kg,2012-03-26 11:07:47,https://api.github.com/repos/sq/JSIL/git/commits/fb95ff32d4ea0ae1b85a6f82f0ea349b759cca20,fb95ff32d4ea0ae1b85a6f82f0ea349b759cca20,"Fix bug that caused gotos to emit an extra semicolon on a blank line.
Fix some bugs in the control flow simplifier and turn it back on by default."
kg,2012-03-26 10:55:37,https://api.github.com/repos/sq/JSIL/git/commits/ec882748c3017792ee778973d2f2b8a64d72aecc,ec882748c3017792ee778973d2f2b8a64d72aecc,"Add support for performing simple control flow analysis to eliminate unreachable gotos, breaks and continues. (Disabled for now since it has some bugs.)
Fix bug that causes label group statements to emit unnecessary default jumps at the end of labels."
kg,2012-03-26 10:01:12,https://api.github.com/repos/sq/JSIL/git/commits/2ea2402697073e98b8d8979767d5604b384b1ccb,2ea2402697073e98b8d8979767d5604b384b1ccb,Implement a simple LRU cache for multiplied image pixels that keeps the total image count and total pixel count below configurable thresholds.
kg,2012-03-25 21:18:05,https://api.github.com/repos/sq/JSIL/git/commits/823967ddfb4c5328551b22215916a5141e4bf61b,823967ddfb4c5328551b22215916a5141e4bf61b,"Add the RPG demo to the JSIL home page.
Bias unpremultiplication of pixels a little.
Show the progress text in the Mannux preloader."
kg,2012-03-25 20:46:34,https://api.github.com/repos/sq/JSIL/git/commits/cab39b64730ddfee5ca9eb4747c5e966dde262dc,cab39b64730ddfee5ca9eb4747c5e966dde262dc,"Add support for a PNGQuant blacklist that disables quantization of specific PNGs
Default PNGQuant to off"
kg,2012-03-25 20:25:52,https://api.github.com/repos/sq/JSIL/git/commits/a41c8863ae22e86e6572a3ee611b44aca03c9e24,a41c8863ae22e86e6572a3ee611b44aca03c9e24,"Fix GetAssembly requireExisting mode for short names
Unpremultiply texture pixels when setting them from a raw buffer"
kg,2012-03-25 20:13:52,https://api.github.com/repos/sq/JSIL/git/commits/9f9e6119b514fae6023d8ccbe8137bd08012a84c,9f9e6119b514fae6023d8ccbe8137bd08012a84c,"Fully-qualify type references to System.Array
Basic implementation of SpriteFont.MeasureString and drawing with a SpriteFont"
kg,2012-03-25 18:37:00,https://api.github.com/repos/sq/JSIL/git/commits/135c4d4875a81d9a432867e3caebb76f5820fd62,135c4d4875a81d9a432867e3caebb76f5820fd62,"Fix JSIL.Cast for enums returning a string instead of an enum instance.
Add partial implementations for Texture2DReader and SpriteFontReader.
Process sprite fonts as raw XNBs."
kg,2012-03-25 17:41:19,https://api.github.com/repos/sq/JSIL/git/commits/5520f49594a7b312483766eacff0e16e2e1241a6,5520f49594a7b312483766eacff0e16e2e1241a6,"When processing BMP content, extract alpha channels and convert to PNG.
Process SpriteFont textures."
kg,2012-03-25 16:15:14,https://api.github.com/repos/sq/JSIL/git/commits/75b9e4920203d8ba9eaa21fd98d48dc4054b9737,75b9e4920203d8ba9eaa21fd98d48dc4054b9737,"Expand manifest generation so it generates a content manifest for all output scripts just like the XNA4 profile does for assets.
Generate XNA.Colors.js earlier in the translation process so it ends up in the script manifest."
kg,2012-03-25 15:48:09,https://api.github.com/repos/sq/JSIL/git/commits/639a5f9b516db0b9a6deffecc74ca3b333940430,639a5f9b516db0b9a6deffecc74ca3b333940430,"Handle casts to boolean for value types in addition to reference types
Eliminate spurious casts between similar numeric types (float->double, int->int64, etc)
Expand float->int cast expressions into Math.floor calls
Defer SpriteBatch DrawString calls for sorting just like Draw calls
Improve the browser asset loader to display textual progress if a span is in the progress bar element (useful for really long loads)"
kg,2012-03-25 15:04:44,https://api.github.com/repos/sq/JSIL/git/commits/db18edaab1126699bff16dee2d8381ed3e48ed5d,db18edaab1126699bff16dee2d8381ed3e48ed5d,Fix sign confusion in sorted SpriteBatch render modes.
kg,2012-03-25 15:03:38,https://api.github.com/repos/sq/JSIL/git/commits/abeb6459c944720178807c78c32a855e5ccba5d5,abeb6459c944720178807c78c32a855e5ccba5d5,Eliminate spritebatch sorting log messages
kg,2012-03-25 15:02:41,https://api.github.com/repos/sq/JSIL/git/commits/53ced9302330ac97cee76e382bd7a73d88355861,53ced9302330ac97cee76e382bd7a73d88355861,Strip out casts from an enum type to System.Enum since they're meaningless
kg,2012-03-25 14:59:58,https://api.github.com/repos/sq/JSIL/git/commits/e2b91876cc76326d783219ff5d18d40121bc9111,e2b91876cc76326d783219ff5d18d40121bc9111,"Handle cast expressions in field default values
Handle casts from enum to float/double"
kg,2012-03-25 14:51:42,https://api.github.com/repos/sq/JSIL/git/commits/cd0a32b43e74406d4b1cc82cd2379393e6bf3c09,cd0a32b43e74406d4b1cc82cd2379393e6bf3c09,"When the inferred and expected types for an expression differ, insert an explicit cast expression. This fixes cases where, for example, an integer expression is directly assigned to an enumeration field.
Clean up handling of cast expressions.
Detect casts of object references to booleans and replace them with the correct expression.
Make JSCastExpression.New accept a TypeSystem as its third argument and ensure that duplicate casts are eliminated.
Fix switch statement deoptimizer expecting a JSDefaultValueLiteral when a JSNullLiteral would have been equally appropriate"
kg,2012-03-25 14:19:04,https://api.github.com/repos/sq/JSIL/git/commits/3a36249f7b01f80709650e7c0942e678540eda81,3a36249f7b01f80709650e7c0942e678540eda81,"Fix the String.Compare implementation's handling of enumerations
Fix JSIL.Cast producing mangled enum value instances
Fix enum fields having default values of 0 instead of an enum instance"
kg,2012-03-25 14:18:19,https://api.github.com/repos/sq/JSIL/git/commits/8e01ca90a079f342f320bd6d17177101fc845d38,8e01ca90a079f342f320bd6d17177101fc845d38,"Update SpriteBatch proxies to pass-through the layerDepth parameter
Implement deferred/sorted drawing modes in SpriteBatch"
kg,2012-03-25 13:10:29,https://api.github.com/repos/sq/JSIL/git/commits/8c8b704f584863fba5e15dd995666c673eb9c0be,8c8b704f584863fba5e15dd995666c673eb9c0be,Handle recursive initializations created by initializing one field statically to have the value of another field.
kg,2012-03-25 12:57:12,https://api.github.com/repos/sq/JSIL/git/commits/2aed2960c4741a5f4780b8feb36e38de35867ac0,2aed2960c4741a5f4780b8feb36e38de35867ac0,The XNA3 profile now generates a color list just like the XNA4 profile.
kg,2012-03-25 12:38:24,https://api.github.com/repos/sq/JSIL/git/commits/040ae210ea117675e3849b824cdb56a21f2bf39f,040ae210ea117675e3849b824cdb56a21f2bf39f,"The XNA4 profile now generates a list of color information that XNACore can use to initialize all the colors.
XNACore no longer has a short hard-coded list of colors. It's designed to pull colors out of the compiler-generated list instead.
Attempt to handle failed profile loads in the compiler."
kg,2012-03-25 12:06:46,https://api.github.com/repos/sq/JSIL/git/commits/48d231b1f1eee5ff215a0daaf4d9bf94a0b7fa8d,48d231b1f1eee5ff215a0daaf4d9bf94a0b7fa8d,Detect and work around an ILSpy bug (https://github.com/icsharpcode/ILSpy/issues/326) that causes ternary operators to have the wrong type information and generate spurious casts.
kg,2012-03-25 11:45:25,https://api.github.com/repos/sq/JSIL/git/commits/d7ea20e3ccfd4115666fe61b3ab26cd629ff1642,d7ea20e3ccfd4115666fe61b3ab26cd629ff1642,Implement System.SystemException's two basic constructors
kg,2012-03-25 11:39:00,https://api.github.com/repos/sq/JSIL/git/commits/10c2ed6df5606ae2f0e4552fbd429b1acf64fba9,10c2ed6df5606ae2f0e4552fbd429b1acf64fba9,Implement more overloads of StringBuilder.Append
kg,2012-03-25 11:33:36,https://api.github.com/repos/sq/JSIL/git/commits/bbbe7049294ed12aa257544cc0cebe78f248243a,bbbe7049294ed12aa257544cc0cebe78f248243a,Handle newlines in SpriteBatch.DrawString and SpriteFont.MeasureString
kg,2012-03-25 11:27:47,https://api.github.com/repos/sq/JSIL/git/commits/8940ad1e779f00e8ae641938c43e344c7d5f6a7d,8940ad1e779f00e8ae641938c43e344c7d5f6a7d,Implement String.Replace and StringBuilder.Replace
kg,2012-03-25 11:15:52,https://api.github.com/repos/sq/JSIL/git/commits/f97fd619e8f4a8a56c4f6cee3849aef595865e36,f97fd619e8f4a8a56c4f6cee3849aef595865e36,Turn off the DrawImage debug rects
kg,2012-03-25 11:13:44,https://api.github.com/repos/sq/JSIL/git/commits/f40f7ffe69c4b8c4830a0f95af1e46ab2e5d1d96,f40f7ffe69c4b8c4830a0f95af1e46ab2e5d1d96,Implement some overloads of String.IndexOf and String.LastIndexOf.
kg,2012-03-25 10:55:33,https://api.github.com/repos/sq/JSIL/git/commits/928a20caddd57710f7a4874105699f2885dc7299,928a20caddd57710f7a4874105699f2885dc7299,"Replace the thoroughly busted vjeux single/double decoder with one that seems to work correctly.
Add some basic test cases for single/double decoding based on the failure case I know about."
kg,2012-03-25 09:43:31,https://api.github.com/repos/sq/JSIL/git/commits/f8d24b4da3440c6b14a6f44063448e0ac1be1bbb,f8d24b4da3440c6b14a6f44063448e0ac1be1bbb,Fix MathHelper.Clamp not behaving the same as XNA's when max < min.
kg,2012-03-25 09:35:55,https://api.github.com/repos/sq/JSIL/git/commits/3ac8eb5a0d6fe477799560814f4ba24d7c43e38a,3ac8eb5a0d6fe477799560814f4ba24d7c43e38a,"Implement Stack<T>.get_Count and Dictionary<K, V>.Add.
Attach displayName/debugName properties to externals so that they're easier to understand in JS debuggers.
Fix .Peek erroneously being removed from the Stream externals, and rename it so that it's clear it's not an mscorlib method."
kg,2012-03-25 09:34:42,https://api.github.com/repos/sq/JSIL/git/commits/0e9dab420f3ea83eee35f213765015198cafd0e9,0e9dab420f3ea83eee35f213765015198cafd0e9,Generate asset size information in asset manifests so that the loading progress bar can be based on bytes instead of file count.
kg,2012-03-25 09:34:09,https://api.github.com/repos/sq/JSIL/git/commits/add817fc71586994e2fac523e4b6f7f82a32e99d,add817fc71586994e2fac523e4b6f7f82a32e99d,Simplify demo CSS
kg,2012-03-24 15:57:59,https://api.github.com/repos/sq/JSIL/git/commits/c56f08ba19df98ca719e3eb6920ac2642b66cab8,c56f08ba19df98ca719e3eb6920ac2642b66cab8,"Implement String.CompareTo(string)
Implement String.Compare(lhs, rhs) and String.Compare(lhs, rhs, ignoreCase)"
kg,2012-03-24 15:42:57,https://api.github.com/repos/sq/JSIL/git/commits/08bf89a26b6e1a3df9bfde35f500333af6fff5e7,08bf89a26b6e1a3df9bfde35f500333af6fff5e7,"Fix ImplementExternals ignoring externals inherited from prototypes.
Implement List<T>.Exists, TrueForAll, FindAll, and FindIndex.
Implement .CompareTo(value) for integers and floats.
Implement Vector2/3/4.Normalize(v) and Vector2/3/4.Length()"
kg,2012-03-24 15:41:37,https://api.github.com/repos/sq/JSIL/git/commits/f0ca16c7a7388a8adf29344dadd29af631440680,f0ca16c7a7388a8adf29344dadd29af631440680,Identify uses of enums in boolean logic and insert a .valueOf() call to work around the fact that !!(0) is different from !!(new Number(0)) in javascript.
kg,2012-03-24 13:26:32,https://api.github.com/repos/sq/JSIL/git/commits/6fa0cf35a30b9dfa39c2a51deab348113db779b7,6fa0cf35a30b9dfa39c2a51deab348113db779b7,"Correctness and strict-mode fixes to JSIL.IO
Implement List<T>.Sort(), Sort(comparison), RemoveAll(predicate)
Bounds-check List<T>.get_Item
Disable printStackTrace in RPG demo"
kg,2012-03-24 12:40:27,https://api.github.com/repos/sq/JSIL/git/commits/f5ce17867c7b26606f4dca03adb57d1fc259deb6,f5ce17867c7b26606f4dca03adb57d1fc259deb6,"Fix JSIL.AddStructFields
Implement String.Trim()"
kg,2012-03-24 12:32:19,https://api.github.com/repos/sq/JSIL/git/commits/7274364ef591f9754a563c04be0bf48730bd011c,7274364ef591f9754a563c04be0bf48730bd011c,"Implement some XNA MathHelper methods and more XNA Vector operators
Implement the 'n' string number format"
kg,2012-03-24 12:13:47,https://api.github.com/repos/sq/JSIL/git/commits/351113d12809f65ef7839361484de37853bcc399,351113d12809f65ef7839361484de37853bcc399,"Implement part of StringBuilder
Suppress 0x0 image blits to work around an exception in IE's canvas implementation
Expand ContentTypeReaderManager.GetTypeReader to match XNA better
Implement Xna.Framework.Rectangle.Empty, .op_Equality and .op_Inequality
Add a stub for System.Type.op_Equality"
kg,2012-03-24 11:52:49,https://api.github.com/repos/sq/JSIL/git/commits/3a89d5dd6d0d62efb9a8a6333c574b54cc861bbe,3a89d5dd6d0d62efb9a8a6333c574b54cc861bbe,Fix inheritance of struct fields
kg,2012-03-24 11:43:11,https://api.github.com/repos/sq/JSIL/git/commits/988ad0bcba87a1e91549770fcebb878de9c68fca,988ad0bcba87a1e91549770fcebb878de9c68fca,"Add implementations for List<T>.Find, List<T>.Contains and Stack<T>.Clear"
kg,2012-03-24 11:32:50,https://api.github.com/repos/sq/JSIL/git/commits/3d270872809f1ac65f2a742a86f37d0dcc5e9a7b,3d270872809f1ac65f2a742a86f37d0dcc5e9a7b,"Add JSIL.DefaultValue(type) for getting the appropriate default value for a type
Implement String.ToLower, String.ToUpper, and String.Compare(lhs, rhs, comparison)
Implement Array.Clone
Implement BinaryReader.ReadBoolean, ReadChar and PeekChar
Improvements to content reader implementation"
kg,2012-03-24 10:29:38,https://api.github.com/repos/sq/JSIL/git/commits/6dc7c4292c3584b57999a788a460fc946a736c1d,6dc7c4292c3584b57999a788a460fc946a736c1d,Fix JSIL.Host.translateFilename
kg,2012-03-24 10:24:47,https://api.github.com/repos/sq/JSIL/git/commits/61cd715cf17b8a18fec6243c41830bec3d103fd7,61cd715cf17b8a18fec6243c41830bec3d103fd7,"Qualify the names of generic type parameters with the name of the type containing them.
Store the values of generic type parameters in both a fully-qualified property and an unqualified property. This allows access to shadowed property names.
Invoke Of() on open types instead of just closed types, and explicitly suppress the invocation of cctors on open types instead. This ensures that open generic parameters are properly assigned to the right fields.
When Of() builds a closed type, it walks through the tree of base types and resolves any unresolved generic parameters based on the new closed context."
kg,2012-03-23 20:26:30,https://api.github.com/repos/sq/JSIL/git/commits/5df71b96f1c8a7b641cf68f6b4d15b4c1e96169f,5df71b96f1c8a7b641cf68f6b4d15b4c1e96169f,"Fix System.Array not being assigned a TypeID
Add a test case that covers generic parameter name shadowing"
kg,2012-03-23 20:21:24,https://api.github.com/repos/sq/JSIL/git/commits/eedbb036780df3e5f25658258a524892c06e9961,eedbb036780df3e5f25658258a524892c06e9961,"Fix incorrect cache keys being generated in Type.Of() due to it being passed TypeRefs by MakeProto instead of types
Temporarily work around generic parameter name shadowing problem in ContentTypeReaders"
kg,2012-03-23 18:34:55,https://api.github.com/repos/sq/JSIL/git/commits/d00f90c0a73cc27d88c2d6fa086b22698299d73c,d00f90c0a73cc27d88c2d6fa086b22698299d73c,Fix String StartsWith/EndsWith proxies being a little finicky
kg,2012-03-23 18:25:41,https://api.github.com/repos/sq/JSIL/git/commits/d085788975b7cbd82ab3d39349958198a30dae33,d085788975b7cbd82ab3d39349958198a30dae33,Implement more of XNB loading.
kg,2012-03-23 17:47:24,https://api.github.com/repos/sq/JSIL/git/commits/eeabdfc9307abd56523e7d5c2042993712a7893d,eeabdfc9307abd56523e7d5c2042993712a7893d,"Implement String.StartsWith(string) and String.EndsWith(string)
Implement XNA Content ListReader`1 and StringReader"
kg,2012-03-23 17:29:49,https://api.github.com/repos/sq/JSIL/git/commits/f291eb63621322cc5c4c59adaf0efd1ddd7fb75f,f291eb63621322cc5c4c59adaf0efd1ddd7fb75f,Fix ContentReader.ReadObject failing to resolve names that are private to the XNA Framework.
kg,2012-03-23 17:14:10,https://api.github.com/repos/sq/JSIL/git/commits/ad2fe21496f48d1f6c98d0802a75cd3763b7ddcc,ad2fe21496f48d1f6c98d0802a75cd3763b7ddcc,"If a type reader cannot be found in ContentReader.ReadObject, log a meaningful warning and return null"
kg,2012-03-23 17:10:49,https://api.github.com/repos/sq/JSIL/git/commits/57bfd39be55158416035c974a6deb35104842062,57bfd39be55158416035c974a6deb35104842062,"Fix System.Type.GetType(string)'s handling of stray spaces in type names
Fix System.Type.GetType(string) failing when it has valid generic arguments but can't resolve the type itself"
kg,2012-03-23 17:06:21,https://api.github.com/repos/sq/JSIL/git/commits/6a618065f68c5d75ce4cb8eb543bb0962980214d,6a618065f68c5d75ce4cb8eb543bb0962980214d,"Add partial implementation of XNA ContentReader
Fix handling of generic type arguments in System.Type.GetType(string)
Expand the test cases for System.Type.GetType(string) so that they cover assembly names as well"
kg,2012-03-23 16:41:57,https://api.github.com/repos/sq/JSIL/git/commits/9f62926ec71929eba04f62050277f9dfb2aa8c62,9f62926ec71929eba04f62050277f9dfb2aa8c62,Fix GenericMethod(T).call and GenericMethod(T).apply.
kg,2012-03-23 16:34:45,https://api.github.com/repos/sq/JSIL/git/commits/5fe68ff875798b9d037dd772bad231039b199d7f,5fe68ff875798b9d037dd772bad231039b199d7f,Fix FindOverload breaking when an overload's argument type is a generic parameter
kg,2012-03-23 16:26:45,https://api.github.com/repos/sq/JSIL/git/commits/2a8776056e6a4cab039a32f34f1dbb052f08c494,2a8776056e6a4cab039a32f34f1dbb052f08c494,Fix incorrect this-reference in overloaded generic methods and add a test.
kg,2012-03-23 15:55:34,https://api.github.com/repos/sq/JSIL/git/commits/c5e88654c23ffa337637e12c7120f094f8716949,c5e88654c23ffa337637e12c7120f094f8716949,"Implement basic support for System.Type.GetType(string)
Implement basic support for assembly short names
XNA 4 profile will copy XNB files to the output directory and add them to the content manifest as XNB if it can't do anything better with the content they contain
SolutionBuilder tracks project build dependencies so that profiles can retrieve information on parent projects (this enables the XNA 4 profile to locate the output directory and the XNB files)
Add partial support for loading XNB files to XNACore
Implement a basic stub for MemoryStream
Add a basic test for System.Type.GetType(string)"
kg,2012-03-23 14:18:20,https://api.github.com/repos/sq/JSIL/git/commits/d195a37002c4a12a02c8d480bb97049b93361cb7,d195a37002c4a12a02c8d480bb97049b93361cb7,"Separate out the 'File' asset type and 'PassThrough' content so that extensions are ignored when loading PassThrough content.
Implement List<T>.ToArray() in Bootstrap."
kg,2012-03-23 14:09:28,https://api.github.com/repos/sq/JSIL/git/commits/a48ecf7307800e564a7ef7e6490f73a20e475ca1,a48ecf7307800e564a7ef7e6490f73a20e475ca1,"The XNA4 profile now produces a content manifest for each content project it processes.
JSIL.Browser.js will now automatically load the assets listed within any content manifest included in the page."
kg,2012-03-23 13:49:49,https://api.github.com/repos/sq/JSIL/git/commits/eca802ccb96b38a7e2a04dce16e2debbb3b94784,eca802ccb96b38a7e2a04dce16e2debbb3b94784,"JSILc writes the names of output files to stdout so that you can easily get a list of outputs.
The XNA4 profile copies texture and passthrough content to the content output directory if one is set.
Add PNGQuant to the upstream folder."
kg,2012-03-23 13:07:33,https://api.github.com/repos/sq/JSIL/git/commits/721859412d97487772935939085b69a4e78f9561,721859412d97487772935939085b69a4e78f9561,"Implement a profile system that allows basic control over project configuration and post-processing of build results.
Automatically load all profiles from the compiler directory at startup.
Add profiles for XNA3 and XNA4 projects that detect use of the XNA framework build targets and automatically load the appropriate proxies for that version of XNA.
Simplify the configuration files for the demos since profile auto-detection is sufficient for them."
kg,2012-03-22 11:08:42,https://api.github.com/repos/sq/JSIL/git/commits/0ada5349b613457c363c5018ea8743270d2b9ef9,0ada5349b613457c363c5018ea8743270d2b9ef9,"Warn in the log when applying an HTML5 font to the canvas fails. This usually indicates that loading the CSS3 web font failed, so it's useful to know that (since the resulting behavior is bizarre in IE).
Temporarily make InternalDrawString ignore requests to render undefined or null as text. The RPG starter kit produces these since it's really low-quality code."
kg,2012-03-22 10:53:13,https://api.github.com/repos/sq/JSIL/git/commits/4664973e894896a999d3f3e765d7950e802b81bd,4664973e894896a999d3f3e765d7950e802b81bd,Implement the LineSpacing property for the XNA SpriteFont stub. Fixes the help screen in the RPG demo.
kg,2012-03-22 10:47:39,https://api.github.com/repos/sq/JSIL/git/commits/da2895f19b4e71f83102703b8ecf2efc8b3d522d,da2895f19b4e71f83102703b8ecf2efc8b3d522d,"Improve the new static constructor analysis to cope better with busted/unimplemented IL. This makes it possible to properly extract default values for static fields from assemblies like mscorlib.
Implement a few new IL expressions to return untranslatable expressions, and tweak a few previous 'abort translation' ones to return untranslatable expressions as well."
kg,2012-03-22 10:19:04,https://api.github.com/repos/sq/JSIL/git/commits/1dd29f0f9788cfce64e3e855761c6fbe500a1f90,1dd29f0f9788cfce64e3e855761c6fbe500a1f90,"Fix issue where translating mscorlib in stubbed mode produced String.Empty with a value of null instead of """". This is addressed by pulling static field initializers out of static constructors and lifting those values into the initial field definition. Note that the assignments will still live in the cctor, so there's some duplication, but this is necessary to preserve behavior if the cctor reassigns a static field during its execution.
Renamed JSExpression.IsStatic to JSExpression.HasGlobalStateDependency since the original name was so poorly chosen that I had already forgotten what it meant."
kg,2012-03-21 08:16:55,https://api.github.com/repos/sq/JSIL/git/commits/d30acc7484b6bef775734740b57f4ed49c7575cc,d30acc7484b6bef775734740b57f4ed49c7575cc,Expand asset manifest for RPG demo. Fixes controls screen.
kg,2012-03-21 08:10:18,https://api.github.com/repos/sq/JSIL/git/commits/328c5aa35b07d9c43df3424089d4303487f628c0,328c5aa35b07d9c43df3424089d4303487f628c0,"Don't invoke XNA games' Main() functions since they immediately dispose the game object (it's impossible for game.Run to block like it does in Windows Forms). Instead, manually construct and run a Game instance.
Implement more externals."
kg,2012-03-21 07:37:19,https://api.github.com/repos/sq/JSIL/git/commits/c4d96ee8f7ad9b06cd37a40fe22f974b52420acb,c4d96ee8f7ad9b06cd37a40fe22f974b52420acb,Replace backslashes in asset paths with forward slashes.
kg,2012-03-21 07:30:40,https://api.github.com/repos/sq/JSIL/git/commits/e247007fb12108bf620f6db0f22c58c1d59e73b6,e247007fb12108bf620f6db0f22c58c1d59e73b6,"Implement some Game/GameComponent/DrawableGameComponent externals and stub out some XACT ones.
Improve game to Initialize, Update and Draw components appropriately (though not in any particular order)."
kg,2012-03-21 07:04:46,https://api.github.com/repos/sq/JSIL/git/commits/2a96abb0b5219b84ef072c2be3bd752a6a6003d1,2a96abb0b5219b84ef072c2be3bd752a6a6003d1,Implement assorted external methods
kg,2012-03-21 06:11:21,https://api.github.com/repos/sq/JSIL/git/commits/cef50419abb4d9f72b3af1667256eddfed05a8ad,cef50419abb4d9f72b3af1667256eddfed05a8ad,Fix TypeAssignabilityCache thread-safety issue
kg,2012-03-20 18:51:15,https://api.github.com/repos/sq/JSIL/git/commits/a2d775184700c8e92d8e41e9c2fe8951c4de466a,a2d775184700c8e92d8e41e9c2fe8951c4de466a,Move StaticConstructorOrdering to FailingTestCases since it keeps breaking without providing any value.
kg,2012-03-20 18:41:10,https://api.github.com/repos/sq/JSIL/git/commits/d26014768b19d2082d472b4f0b25b7197970821e,d26014768b19d2082d472b4f0b25b7197970821e,Add ignores for the work-in-progress RPG demo
kg,2012-03-20 18:39:51,https://api.github.com/repos/sq/JSIL/git/commits/27eb4ee91ab3fd5d871416b59f1e9525ccb16282,27eb4ee91ab3fd5d871416b59f1e9525ccb16282,"When compiling multiple assemblies in a single JSIL invocation (For example, when a solution has multiple outputs), use a single AssemblyManifest for all of them.
Attempt to assign identifiers to assemblies in sorted name order instead of randomly.
Prefix manifest names with the name of the assembly they were generated for.
Always fully qualify type references, since omitting the assembly can cause confusing breakage when call stacks cross assemblies.
Fix System.Exception to use externals correctly.
Implement Game.get_Components in XNACore."
kg,2012-03-20 14:34:58,https://api.github.com/repos/sq/JSIL/git/commits/6c5509f675ea1434bb997d0cf5422a08fd66b340,6c5509f675ea1434bb997d0cf5422a08fd66b340,Add 3 new samples to the homepage
kg,2012-03-20 14:14:51,https://api.github.com/repos/sq/JSIL/git/commits/2842762fb8a48154b5fbb6c20e5bbbc9c4521c15,2842762fb8a48154b5fbb6c20e5bbbc9c4521c15,"Update to version 3 of the GitHub API.
Add a branch selector to the changelog so you can view the most recent commits from a particular branch."
kg,2012-03-20 13:32:41,https://api.github.com/repos/sq/JSIL/git/commits/bcc2587f0ec5ef2d759f121880ecfbb188ce1dd9,bcc2587f0ec5ef2d759f121880ecfbb188ce1dd9,"Implement BindingFlags.Static and BindingFlags.Instance.
Don't return constructors and static constructors from GetMethods."
kg,2012-03-20 13:28:55,https://api.github.com/repos/sq/JSIL/git/commits/6fc3288e95938845a91afbe7cfe8d5b969102c5f,6fc3288e95938845a91afbe7cfe8d5b969102c5f,Fix Console.WriteLine with 0 arguments
kg,2012-03-20 13:24:29,https://api.github.com/repos/sq/JSIL/git/commits/ea9a27e71f2b946e69d2467f5d314f3f68e14c32,ea9a27e71f2b946e69d2467f5d314f3f68e14c32,Implement BindingFlags.Public and BindingFlags.NonPublic
kg,2012-03-20 12:43:54,https://api.github.com/repos/sq/JSIL/git/commits/b290b73fd08d90eb75f8797781b0b6624c387caa,b290b73fd08d90eb75f8797781b0b6624c387caa,"Implement GetMethods' behavior for overloaded methods
Support putting common test infrastructure in a file named Common.cs or Common.vb"
kg,2012-03-20 12:22:38,https://api.github.com/repos/sq/JSIL/git/commits/af9bc0d289e4e73bedaeed18e01206e200f7724b,af9bc0d289e4e73bedaeed18e01206e200f7724b,Implement single-argument versions of Array.Sort and Array.Sort<T> using JS's Array.sort
kg,2012-03-20 11:39:54,https://api.github.com/repos/sq/JSIL/git/commits/c62b1686a4294eee4fecf717b628ef784de87078,c62b1686a4294eee4fecf717b628ef784de87078,Fix attempts to attach display names to untranslatable functions
kg,2012-03-20 11:34:32,https://api.github.com/repos/sq/JSIL/git/commits/4c265e6be80eef553e6b25b61bcadbdae32d7c80,4c265e6be80eef553e6b25b61bcadbdae32d7c80,Merge branch 'master' into reflection
kg,2012-03-20 11:21:50,https://api.github.com/repos/sq/JSIL/git/commits/0c432080cfbea3272f199a88c36a77bdf476f5ca,0c432080cfbea3272f199a88c36a77bdf476f5ca,"Usability improvements from markusjohnsson:
Surround post build event arguments in quotes.
Mark Object.GetType as external in proxies."
kg,2012-03-20 11:12:17,https://api.github.com/repos/sq/JSIL/git/commits/3f4f3ef43656a01379c51e7aac9fd8ee238e2365,3f4f3ef43656a01379c51e7aac9fd8ee238e2365,Add sourceURL annotations to struct field initializers so that they are clearly associated with the type they're generated for in Firebug and the Chrome Web Inspector
kg,2012-03-20 10:28:52,https://api.github.com/repos/sq/JSIL/git/commits/816f4dfe636762202f1be21553b72d2dde29e524,816f4dfe636762202f1be21553b72d2dde29e524,"Fix JSIL.Array.New failing on arrays of arrays because JSIL.Array.Of was not setting __IsReferenceType__ on the array type object.
Make System.Console a static class as is correct."
kg,2012-03-09 06:43:55,https://api.github.com/repos/sq/JSIL/git/commits/22cbd8c5afaccfda573ec2881dd825d155b54fb4,22cbd8c5afaccfda573ec2881dd825d155b54fb4,Simplify JSIL.GenericMethod implementation a little
kg,2012-03-08 20:35:53,https://api.github.com/repos/sq/JSIL/git/commits/eef5a188ff9326697e13e4f6bd5f7d7c0d19b34a,eef5a188ff9326697e13e4f6bd5f7d7c0d19b34a,Fix issue #74: Wrong this-reference for generic methods.
kg,2012-03-02 13:02:38,https://api.github.com/repos/sq/JSIL/git/commits/3def6c815bff3bc112e2a6dc391fda4332909efa,3def6c815bff3bc112e2a6dc391fda4332909efa,Attach display names to function expressions so that they have names in JS profilers/debuggers.
kg,2012-03-02 12:56:09,https://api.github.com/repos/sq/JSIL/git/commits/b87903757a6bc58ff2421147d5b046a6f432778a,b87903757a6bc58ff2421147d5b046a6f432778a,Beginning of reflection support: GetMethods works for a subset of cases
kg,2012-03-02 12:45:02,https://api.github.com/repos/sq/JSIL/git/commits/4e04cab5fd7d85050677934c48aabc408b2b8432,4e04cab5fd7d85050677934c48aabc408b2b8432,Checkpoint: Use JSIL.MakeMethod to add methods to types instead of direct assignment.
kg,2012-03-02 12:26:10,https://api.github.com/repos/sq/JSIL/git/commits/12534fc58ad23be387a1c478c0ec44f1d93b1e64,12534fc58ad23be387a1c478c0ec44f1d93b1e64,"Hack in a solution for using actual definitions for System.Reflection.MemberInfo, System.Type, and System.RuntimeType.
Expose a no-op version of System.Type.GetMethods(BindingFlags)"
kg,2012-03-02 11:48:49,https://api.github.com/repos/sq/JSIL/git/commits/4d75e6fef534ea256719702732eb61d8429df7b1,4d75e6fef534ea256719702732eb61d8429df7b1,Fixed IsAssignableFrom for instances of concrete types
kg,2012-03-02 11:32:57,https://api.github.com/repos/sq/JSIL/git/commits/5ee2603e2ee06e4fa8a87dfdc0e310d5a89f3a5a,5ee2603e2ee06e4fa8a87dfdc0e310d5a89f3a5a,"Checkpoint #2: Fix IsAssignableFrom for interfaces
Simplify the output from IsAssignableFrom so it's easier to debug"
kg,2012-03-02 11:18:53,https://api.github.com/repos/sq/JSIL/git/commits/2674f884f15ebe973382117d470ad5c1bf01b94c,2674f884f15ebe973382117d470ad5c1bf01b94c,Checkpoint: Fix IsAssignableFrom and interfaces
kg,2012-03-02 11:02:11,https://api.github.com/repos/sq/JSIL/git/commits/3b842d46c680829eaea54fc41622376f00a326f8,3b842d46c680829eaea54fc41622376f00a326f8,Hack so that enums have a __Type__ that points to them
kg,2012-03-02 11:01:06,https://api.github.com/repos/sq/JSIL/git/commits/bb14ab5f49e28f208a47c6918da3dd8fcf352fad,bb14ab5f49e28f208a47c6918da3dd8fcf352fad,"Fix UnwrapType not handling JSTypeOfExpressions.
Fix GetTypeFromHandle and inconsistency about whether or not to use .__Type__ for typeof expressions.
Improved consistency of handling type objects means that the generic argument fields are now public interfaces, not type objects.
Hack up System.Array.Of so that it has a faked __Type__.
Fix JSIL.GetTypeName."
kg,2012-03-02 10:33:04,https://api.github.com/repos/sq/JSIL/git/commits/2773dfd889ee370896837705f6aed5919c69a267,2773dfd889ee370896837705f6aed5919c69a267,Fix incorrectly passing the public interface object instead of the type object to InitializeStructFields
kg,2012-03-02 10:29:40,https://api.github.com/repos/sq/JSIL/git/commits/e1b3c6b7ed48abaf60fd95ca6caaabe617a76329,e1b3c6b7ed48abaf60fd95ca6caaabe617a76329,Remove the System.Object.GetType external since it isn't needed
kg,2012-03-02 10:26:22,https://api.github.com/repos/sq/JSIL/git/commits/45449cd9b7968267b936f055faa00e613aa2de27,45449cd9b7968267b936f055faa00e613aa2de27,Override the __FullName__ of the closed type's prototype in Of()
kg,2012-03-02 10:23:40,https://api.github.com/repos/sq/JSIL/git/commits/c4aa1ea9e00ad66e59d950afda7c7e378e666f4e,c4aa1ea9e00ad66e59d950afda7c7e378e666f4e,Redefine result.prototype.GetType() in Type.Of() so that it returns the closed type object instead of the open type object
kg,2012-03-02 09:57:18,https://api.github.com/repos/sq/JSIL/git/commits/7fef1f2acc5d0f1d6bb0c4bd792f6faa630c6311,7fef1f2acc5d0f1d6bb0c4bd792f6faa630c6311,Ensure that any type references in the argument list to .Of() are resolved before use
kg,2012-03-02 09:51:33,https://api.github.com/repos/sq/JSIL/git/commits/8a604ded555837310afd9d9908e04e1df3e0b8db,8a604ded555837310afd9d9908e04e1df3e0b8db,"When creating the properties that represent a type's generic parameters, set them to the type objects of the generic parameters, not the public interfaces."
kg,2012-03-02 09:45:27,https://api.github.com/repos/sq/JSIL/git/commits/6b763500c89885754fa7d94057406eeca2319159,6b763500c89885754fa7d94057406eeca2319159,Update more uses of type object members like __TypeInitialized__ to fetch them from the type object instead of the public interface object
kg,2012-03-02 09:36:31,https://api.github.com/repos/sq/JSIL/git/commits/e1e5d95e6f0ffcf321d594c38397c20b678da292,e1e5d95e6f0ffcf321d594c38397c20b678da292,"Fix typeObject.Of()'s generation of cache keys for type references (it was using the type reference's __TypeId__, which is always undefined)"
kg,2012-03-02 09:23:17,https://api.github.com/repos/sq/JSIL/git/commits/19a444b13507968977e6ff8f85105c1c005f8f39,19a444b13507968977e6ff8f85105c1c005f8f39,Checkpoint: Split out type objects (System.Type/System.RuntimeType/System.RuntimeTypeObject) from a type's public interface (where static methods live).
kg,2012-02-21 01:13:20,https://api.github.com/repos/sq/JSIL/git/commits/1d651b588d4dbb8b32eb1bac4328412e4e3d106e,1d651b588d4dbb8b32eb1bac4328412e4e3d106e,"Delegate type objects actually have generic arguments now and the arguments are stored when you call .Of.
JSIL.Delegate.New has been replaced with a static New method on the delegate type itself, because I'm lazy and the resulting code is cleaner.
Defer initialization of delegate type objects until first use, like classes, enums, etc. This prevents a cycle between MulticastDelegate and its interfaces from causing problems.
Addresses part of issue #70."
kg,2012-02-20 16:38:25,https://api.github.com/repos/sq/JSIL/git/commits/109c1def565b736e5ec08b2921e931ac93879265,109c1def565b736e5ec08b2921e931ac93879265,Add a test for VB.net event handlers
kg,2012-02-20 16:29:27,https://api.github.com/repos/sq/JSIL/git/commits/89b451240abd283bac86e180db9a08c45186e966,89b451240abd283bac86e180db9a08c45186e966,"Add support for running tests written in VB.net instead of C#
Add a simple VB.Net test"
kg,2012-02-19 23:10:09,https://api.github.com/repos/sq/JSIL/git/commits/2f5e31e0fc05cb99bd95d0056f2e5bc9e25e5cb4,2f5e31e0fc05cb99bd95d0056f2e5bc9e25e5cb4,"Defer initialization of interface and enumeration objects just like classes/structs, in order to resolve the cycle between enums and the definition of System.Enum. Addresses issue #70."
kg,2012-02-19 18:09:04,https://api.github.com/repos/sq/JSIL/git/commits/e6300ae6d90afec13bfcf08f8df42734f8678ae4,e6300ae6d90afec13bfcf08f8df42734f8678ae4,"Move recursive array initializer test since that bug was fixed in ILSpy.
Update switch statement deoptimizer to handle new switch decompilation behavior from latest ILSpy.
Represent initializer expression applications as a unique node type instead of as an invocation."
kg,2012-02-19 17:47:27,https://api.github.com/repos/sq/JSIL/git/commits/0d463c398a0be13dc32cd2f5f38d07c5c3a93ea1,0d463c398a0be13dc32cd2f5f38d07c5c3a93ea1,Update to latest ILSpy
markusjohnsson,2012-02-10 22:16:52,https://api.github.com/repos/sq/JSIL/git/commits/d9e4a6bb145f35989b06b19246ab741bb9fba747,d9e4a6bb145f35989b06b19246ab741bb9fba747,Don't close generic base types if arguments are JSIL.GenericParameter. Fixes second test in issue #68.
kg,2012-02-10 11:54:08,https://api.github.com/repos/sq/JSIL/git/commits/f758182fd01db329e25e48438c258ac3d2983eaa,f758182fd01db329e25e48438c258ac3d2983eaa,"Correct the implementations of System.Delegate.Combine/Remove/GetInvocationList/Invoke in JSIL.Bootstrap. Fixes issue #62.
Correct the implementations of System.Threading.Interlocked.CompareExchange`1 and System.Monitor.Enter/Exit in JSIL.Bootstrap."
kg,2012-02-09 05:45:12,https://api.github.com/repos/sq/JSIL/git/commits/b05d58a3cf8261a05d61deb0f51141214f98c8d1,b05d58a3cf8261a05d61deb0f51141214f98c8d1,"Don't initialize type objects inside GenericType.Of(...) when the Of method call is being triggered by TypeRef.get(...), because it can trigger a recursive construction of a type object. Fixes issue #68."
markusjohnsson,2012-02-07 21:30:20,https://api.github.com/repos/sq/JSIL/git/commits/9abbb67f787c692f68629e69df520a4dc117b906,9abbb67f787c692f68629e69df520a4dc117b906,"Handle the case of JSResultReferenceExpression.Referent is being
exchanged for a JSDelegateInvocationExpression by creating a common base
class for JSInvocationExpression and JSDelegateExpresson. Makes the test
in #67 pass, but might need cleanup."
markusjohnsson,2012-02-05 09:46:47,https://api.github.com/repos/sq/JSIL/git/commits/9dfb64ac939f8b40d17f429787a502577f4484aa,9dfb64ac939f8b40d17f429787a502577f4484aa,"Added missing comma output in AssemblyTranslator.TranslateInterface.
Simplified IsAssignableFrom when lhs is interface and rhs is not."
kg,2012-02-05 00:15:15,https://api.github.com/repos/sq/JSIL/git/commits/358f88c6ead176c7adcf6978ecfc5e3c76e82180,358f88c6ead176c7adcf6978ecfc5e3c76e82180,Merge branch 'IsAssignableFrom' of https://github.com/markusjohnsson/JSIL
markusjohnsson,2012-02-04 22:48:07,https://api.github.com/repos/sq/JSIL/git/commits/af844ca76da9a55e52b25c1fe149be2ad0006bdd,af844ca76da9a55e52b25c1fe149be2ad0006bdd,"Added support for IsAssignableFrom on class/struct and interface types.
Added ""inheritence"" info to interfaces."
kg,2012-02-03 01:52:37,https://api.github.com/repos/sq/JSIL/git/commits/c7f7449bcd67f8989727b63ba7bd6c27cc66acda,c7f7449bcd67f8989727b63ba7bd6c27cc66acda,"Replace direct uses of JSIL.Cast with a JSCastExpression node so that casts can be identified in transform passes
Handle casting enum values to Boolean by identifying an enum member equal to zero or one and using that member to perform an equivalent comparison. Fixes issue #65."
kg,2012-02-02 21:19:43,https://api.github.com/repos/sq/JSIL/git/commits/ecb85aa01edfff66ad8c3c6b8d16f55d0718c1ed,ecb85aa01edfff66ad8c3c6b8d16f55d0718c1ed,Overload JavascriptFormatter.GetNameOfType to handle GenericParameters. Fixes issue #64.
kg,2012-01-31 00:18:13,https://api.github.com/repos/sq/JSIL/git/commits/ae653fa52399d198cc618aaf9229dca8cfcda0f3,ae653fa52399d198cc618aaf9229dca8cfcda0f3,"Issue #61 points out that the proxy for String.Concat(string, char) was wrong."
kg,2012-01-31 00:05:27,https://api.github.com/repos/sq/JSIL/git/commits/9071cdf5334b4cbf941cdd81040999433055acb7,9071cdf5334b4cbf941cdd81040999433055acb7,Initialize elements of arrays-of-structs to default-initialized instances of that struct type instead of null. Fixes issue #63.
kg,2012-01-28 14:14:14,https://api.github.com/repos/sq/JSIL/git/commits/96b8448f98625e352b22ce82d1aba65f73d4d8ee,96b8448f98625e352b22ce82d1aba65f73d4d8ee,Adjust the tab size for the code sample gists so they're more readable
kg,2012-01-28 12:53:37,https://api.github.com/repos/sq/JSIL/git/commits/062fea34547081af554500aaf36c9f326fd79ad7,062fea34547081af554500aaf36c9f326fd79ad7,Disable large portions of the switch statement deoptimizer so that it does not break uses of flow control within switch statements. It still successfully removes the lookup dictionary so that the output JS is valid in the vast majority of cases. Fixes issue #59.
kg,2012-01-28 12:44:21,https://api.github.com/repos/sq/JSIL/git/commits/9c6ec18544a2217a07b9372685f5390e4242f769,9c6ec18544a2217a07b9372685f5390e4242f769,Add a test for using the continue statement from inside a switch statement.
kg,2012-01-28 12:32:40,https://api.github.com/repos/sq/JSIL/git/commits/a74402790aa483ea897513ddd8dbae418012ff64,a74402790aa483ea897513ddd8dbae418012ff64,"Add tests for doing arithmetic on chars and using chars as array indices
Introduce fromCharCode/charCodeAt calls in output JS so that arithmetic on chars works correctly. Fixes issue #61."
kg,2012-01-28 12:02:08,https://api.github.com/repos/sq/JSIL/git/commits/e1c8d21221665f2025b9e2af7c580f4b00b05b32,e1c8d21221665f2025b9e2af7c580f4b00b05b32,Implement String.Equals. Fixes issue #60.
kg,2012-01-04 09:10:56,https://api.github.com/repos/sq/JSIL/git/commits/5284bd754d140fe1a2186a88da3f5901a808e7d0,5284bd754d140fe1a2186a88da3f5901a808e7d0,Don't recurse into functions pointed to by JSLambda nodes during tree traversal.
kg,2012-01-04 09:00:38,https://api.github.com/repos/sq/JSIL/git/commits/9e0ea56c47fd2833af934f2748253bc61c787caa,9e0ea56c47fd2833af934f2748253bc61c787caa,"Fix problems with FunctionAnalysis2ndPass.IsPure. Treat re-entrant invocations as impure to avoid infinite recursion, and cache purity information after the first time it's calculated.
Minor fixes for degenerate code."
kg,2012-01-04 08:20:33,https://api.github.com/repos/sq/JSIL/git/commits/78343edf1b0542051f23ad1970542afdd953a754,78343edf1b0542051f23ad1970542afdd953a754,"Switch ILSpy into deferred module read mode to reduce memory usage.
Use a ConcurrentCache in the AssemblyResolver."
kg,2012-01-04 06:09:42,https://api.github.com/repos/sq/JSIL/git/commits/a92e886678cfed82977a84083c4bad1fcab6249a,a92e886678cfed82977a84083c4bad1fcab6249a,"Fix stray gotos being left behind after a switch statement is deoptimized.
Make untranslatable gotos throw when encountered instead of spitting out a warning."
kg,2012-01-04 05:59:35,https://api.github.com/repos/sq/JSIL/git/commits/cd7e7d82393cfb6538409b7c5b0d06d2ebf2a173,cd7e7d82393cfb6538409b7c5b0d06d2ebf2a173,"Fix label group builder hoisting label bodies out without leaving a goto to replace them, and add a test that detects it. Sadly, this can only be detected by analyzing output JavaScript - the IL that encounters this bug cannot be produced by the 'goto' construct in C#, only by the C# compiler. Related to issue #34."
kg,2012-01-04 05:37:26,https://api.github.com/repos/sq/JSIL/git/commits/c09eff2940fbd8bf8214d57294962dc7f5e7400d,c09eff2940fbd8bf8214d57294962dc7f5e7400d,Add RepeatIterator test case from issue #34.
kg,2012-01-04 05:16:31,https://api.github.com/repos/sq/JSIL/git/commits/94fe808683ba31848904970598bd7f9aeb74ae5b,94fe808683ba31848904970598bd7f9aeb74ae5b,"Instead of identifying loops for targeted break/continue with labels, use separate numeric indices
Eliminate numeric indices from loops that are not targeted by break or continue statements
Build label groups in a transform pass after a function is translated instead of building them during the translation process
Don't emit an unnecessary break at the end of switch cases that end with control flow (break/continue)
Generate better synthetic labels for blocks
Make all loop blocks derive from a common base class and remove the IsLoop property since it's not needed anymore
Fix the switch statement deoptimizer's handling of exit gotos"
kg,2012-01-04 05:28:06,https://api.github.com/repos/sq/JSIL/git/commits/7634786f0716597d0700ca2f542766f40b592f77,7634786f0716597d0700ca2f542766f40b592f77,Add test from issue #55
markusjohnsson,2012-01-02 22:34:41,https://api.github.com/repos/sq/JSIL/git/commits/0299bc1bfeeac5c20b88eb6b6a0676ba8a09dbae,0299bc1bfeeac5c20b88eb6b6a0676ba8a09dbae,Int64: Replaced exceptions with tracing
markusjohnsson,2012-01-02 21:38:25,https://api.github.com/repos/sq/JSIL/git/commits/86c415b08720d47dac2573aa345a151eb696179d,86c415b08720d47dac2573aa345a151eb696179d,Int64: Add support for comparison operators.
markusjohnsson,2012-01-02 21:23:52,https://api.github.com/repos/sq/JSIL/git/commits/f338d73416c163073d7ab473d3c4af34b00b646d,f338d73416c163073d7ab473d3c4af34b00b646d,Int64: restructuring
markusjohnsson,2012-01-02 00:07:05,https://api.github.com/repos/sq/JSIL/git/commits/7cbd8eb89ba9ac4cefd7b3edb71ffcd32ebe9828,7cbd8eb89ba9ac4cefd7b3edb71ffcd32ebe9828,Changed return type of Math.floor to Int32 (from Int64).
markusjohnsson,2012-01-01 23:46:34,https://api.github.com/repos/sq/JSIL/git/commits/b0fe2868e12babb216e76c164527cee02b63c4a8,b0fe2868e12babb216e76c164527cee02b63c4a8,Added int64-specific conversions to ILBlockTranslator.
markusjohnsson,2012-01-01 21:15:54,https://api.github.com/repos/sq/JSIL/git/commits/46eaa38b3869c685615251a60ae7ba3100e7bb7a,46eaa38b3869c685615251a60ae7ba3100e7bb7a,Added JSAstBuilder. Build proper expressions using JSDotExpression and JSStringLiteral in EmulateInt64. Fixes problem with static fields & methods. Catch NoExpectedTypeException in EmulateInt64 which caused (at least) ComplexRefOverload test to fail.
markusjohnsson,2011-12-31 00:37:07,https://api.github.com/repos/sq/JSIL/git/commits/85e211be3dc9fc476f981340d9d4cbfe2636d6ef,85e211be3dc9fc476f981340d9d4cbfe2636d6ef,Int64: Convert result to Int32 if that is the expected type.
kg,2011-12-12 04:48:35,https://api.github.com/repos/sq/JSIL/git/commits/09c3d0b5132dbbec377a830ee16e3f09da96cd2a,09c3d0b5132dbbec377a830ee16e3f09da96cd2a,"If a switch statement has cases that don't do anything except jump directly to the default case, eliminate them and then clean up the stray gotos that were left behind. Fixes issue #47.
Ensure that JSSwitchCase nodes cannot be created with an empty values array."
kg,2011-12-12 01:36:53,https://api.github.com/repos/sq/JSIL/git/commits/c9f0a38f7cf60a3aa3f16c678164ec52b66edb16,c9f0a38f7cf60a3aa3f16c678164ec52b66edb16,Update the bootstrap implementation of Thread to use externals. Should fix issue #43.
kg,2011-12-12 00:58:42,https://api.github.com/repos/sq/JSIL/git/commits/f7b2964644ed1f13ae4dd7a544b20104d9ad5f95,f7b2964644ed1f13ae4dd7a544b20104d9ad5f95,Reuse a single VisitorCache instance per JSAstVisitor type to avoid having to construct the cache every time a visitor is constructed.
kg,2011-12-11 08:06:09,https://api.github.com/repos/sq/JSIL/git/commits/c9b4325d046af0a72aa2fcee47cd3a48d9fedefb,c9b4325d046af0a72aa2fcee47cd3a48d9fedefb,"Improvements to fix for issue #39:
Overhaul how JSLabelGroupStatements work so that the switch deoptimizer can be simpler.
Eliminate stray gotos after deoptimizing switches.
Perform a pass over the AST after the switch statement deoptimization pass that eliminates any null statements, empty block statements, or label groups with a single label in them.
Perform a second, more thorough loop optimization pass after the switch statement optimization pass is complete. This makes it possible to correctly optimize loops that contain switch statements.
No longer flag goto expressions and ignored member references as null expressions.
Fix the ToString method for loop blocks
Expand test coverage for switch statements.
If the last statement in a loop is a continue statement for that loop, eliminate it.
Fix GetExpectedType for ignored member references"
kg,2011-12-11 04:04:30,https://api.github.com/repos/sq/JSIL/git/commits/418bb68785f62f17be3c77c36256b717d12c529a,418bb68785f62f17be3c77c36256b717d12c529a,"Merge branch 'master' of github.com:kevingadd/JSIL into deoptimize-switches

Conflicts:
	Tests/Tests.csproj"
kg,2011-12-11 00:14:33,https://api.github.com/repos/sq/JSIL/git/commits/a8dc459363469b4b1217678fe4b3f5bae5bd0699,a8dc459363469b4b1217678fe4b3f5bae5bd0699,"When generating the variable initialization for ref/out parameters, always do it inside the containing function's scope instead of the current block scope. This prevents the initialization from being erroneously introduced inside a loop or conditional. Fixes issue #44."
kg,2011-12-10 23:12:50,https://api.github.com/repos/sq/JSIL/git/commits/c16661832c3e0569b12c9e7c211b33c701074461,c16661832c3e0569b12c9e7c211b33c701074461,Remove left-over else clause from issue #37
kg,2011-12-10 23:07:43,https://api.github.com/repos/sq/JSIL/git/commits/92ca06b9747e4a4ce270e447fc199e3eaf1b39b5,92ca06b9747e4a4ce270e447fc199e3eaf1b39b5,Rework handling of comparison operators and trycast/checktype to fix issue #46
markusjohnsson,2011-12-10 21:57:31,https://api.github.com/repos/sq/JSIL/git/commits/478ef4aa6e52391529d20aa82b36a6fa6e6676fe,478ef4aa6e52391529d20aa82b36a6fa6e6676fe,"Add conversions from UInt64 (lossy), Single  and Double. Convert expressions from
Int32/Unit32/Char using fromNumber when expected type is Int64. Extend
test case with sample from mono's TimeSpan."
kg,2011-12-10 06:56:55,https://api.github.com/repos/sq/JSIL/git/commits/9299c38b8e071fcb9cacf70e490b163d86a29f2e,9299c38b8e071fcb9cacf70e490b163d86a29f2e,"If a method used as a delegate is an ignored method, always emit it inline since it will be impossible to construct a delegate for it otherwise, as suggested in issue #37"
kg,2011-12-10 06:51:57,https://api.github.com/repos/sq/JSIL/git/commits/fee952395fd924120c3badea02c475050c089cc8,fee952395fd924120c3badea02c475050c089cc8,Add a test for issue #45
markusjohnsson,2011-12-10 01:34:53,https://api.github.com/repos/sq/JSIL/git/commits/d3e1f419e5afdd4f7437ccc739afe4f472cf7017,d3e1f419e5afdd4f7437ccc739afe4f472cf7017,"Int64: use operand types instead of expected type. convert left or right
operand if needed."
markusjohnsson,2011-12-10 01:06:24,https://api.github.com/repos/sq/JSIL/git/commits/9974916935b38b1a812a9983205d8638cfb0e559,9974916935b38b1a812a9983205d8638cfb0e559,"Added support for left side being int32. Also use fromInt for small
literals."
markusjohnsson,2011-12-07 20:57:16,https://api.github.com/repos/sq/JSIL/git/commits/28446d72642bce76c84eff917de7f39651077956,28446d72642bce76c84eff917de7f39651077956,Initial work on int64 support using Google Closure Tools.
kg,2011-12-05 03:16:39,https://api.github.com/repos/sq/JSIL/git/commits/42a5265cbe69e33e41e3484d8f15fcb08109d143,42a5265cbe69e33e41e3484d8f15fcb08109d143,"Add a basic implementation of switch deoptimization as an AST transform.
Eliminate temporaries at the beginning and end of the code generation pass instead of just the beginning, to catch any stray temporaries."
kg,2011-12-03 22:19:13,https://api.github.com/repos/sq/JSIL/git/commits/091baa754c229aab291fd7825ebd546e60c76d16,091baa754c229aab291fd7825ebd546e60c76d16,Fix argument parsing for boolean arguments.
kg,2011-12-03 17:41:28,https://api.github.com/repos/sq/JSIL/git/commits/b6fd10149e16d611cab82b94cb7ad2530dcbc50b,b6fd10149e16d611cab82b94cb7ad2530dcbc50b,Checkpoint work on tests for deoptimizing large switch statements
kg,2011-12-03 17:34:22,https://api.github.com/repos/sq/JSIL/git/commits/e633b9e3a78a136a5775730033475835442334c7,e633b9e3a78a136a5775730033475835442334c7,"Allow applying the JSReplacement attribute to classes and structs.
Disallow JSReplacement on fields since it was never implemented correctly, and it breaks the semantics of fields."
kg,2011-12-03 16:32:48,https://api.github.com/repos/sq/JSIL/git/commits/d24c1ebc8bc35a654ee3e09cfcf5fbb0ef09bb4f,d24c1ebc8bc35a654ee3e09cfcf5fbb0ef09bb4f,"Improve behavior for external properties and document how they work in the JSExternal attribute's docstring.
Add support for marking classes and fields as external.
Add test coverage for various uses of JSExternal."
kg,2011-12-03 15:46:58,https://api.github.com/repos/sq/JSIL/git/commits/897c4a738c24b905960ca4274c9a7051bb36c4c5,897c4a738c24b905960ca4274c9a7051bb36c4c5,Split printStackTrace library out into its own JS file and only try to use it for diagnostic purposes if it is present. This allows you to opt into using it when needed by including it into the page(s) hosting your code.
kg,2011-12-03 15:40:01,https://api.github.com/repos/sq/JSIL/git/commits/4a3aa2f9edbb83ccb865ad536888d49bfb9c7300,4a3aa2f9edbb83ccb865ad536888d49bfb9c7300,Update the readme
kg,2011-12-03 14:20:52,https://api.github.com/repos/sq/JSIL/git/commits/252791a9d157f8d4b94458f0e1fbbd8a759e6c2a,252791a9d157f8d4b94458f0e1fbbd8a759e6c2a,"Allow use of JSChangeName on classes, structs and enums
Add tests covering usage of JSChangeName on various members and types
Detect deadlocks in ConcurrentCache's creation code
Explicitly detect incorrect ordering in type information construction"
kg,2011-12-03 13:54:28,https://api.github.com/repos/sq/JSIL/git/commits/6830cd927cf28f80f41842558b46dd275bde3615,6830cd927cf28f80f41842558b46dd275bde3615,Disable the AJAX portion of printStackTrace.
kg,2011-12-02 13:13:08,https://api.github.com/repos/sq/JSIL/git/commits/bf107bc83f8304955a334ce3fc339900a3e49eeb,bf107bc83f8304955a334ce3fc339900a3e49eeb,"Replace uses of the $outer_this hack with Function.bind.
Detect cases where a lambda's this-reference has a name that collides with the name of a local variable within the lambda. In such cases, use Function.bind to carry the this-reference in.
Inline closures in more cases by using IsCompilerGeneratedOrIsInCompilerGeneratedClass instead of IsCompilerGenerated."
kg,2011-12-02 11:19:41,https://api.github.com/repos/sq/JSIL/git/commits/725add9d63fb5139d78fc6ebdca10bcfdaf07031,725add9d63fb5139d78fc6ebdca10bcfdaf07031,Add a test for collection initializers on dictionary-like objects.
kg,2011-12-02 10:18:12,https://api.github.com/repos/sq/JSIL/git/commits/9fcb345c625b88a3b465bccdc14e19b59fe82abd,9fcb345c625b88a3b465bccdc14e19b59fe82abd,Add a failing test to cover an ILSpy bug
kg,2011-12-02 06:49:06,https://api.github.com/repos/sq/JSIL/git/commits/26d426ca758780271327d17b4171d35687518c92,26d426ca758780271327d17b4171d35687518c92,"Use properties for overriding array methods
Increase progress reporting detail
Use a more accurate progress reporting method for the Analyze stage"
kg,2011-12-01 21:24:23,https://api.github.com/repos/sq/JSIL/git/commits/268ac8125253a7ce61a192f7f68b107bd9731ae7,268ac8125253a7ce61a192f7f68b107bd9731ae7,"Add a test for compound assignments on structs with overloaded operators
Implement translation for compound assignment IL nodes that contain method calls instead of binary operator expressions"
kg,2011-12-01 20:56:36,https://api.github.com/repos/sq/JSIL/git/commits/1c911806e822e4f880f79289472bcd2033906637,1c911806e822e4f880f79289472bcd2033906637,"Add a test case that demonstrates a bug in IntroduceVariableDeclarations
Fix IntroduceVariableDeclarations erroneously declaring a variable after its first usage if the variable was a struct"
kg,2011-11-30 17:44:26,https://api.github.com/repos/sq/JSIL/git/commits/e1a962a1e7b60d9a623c97cfe5050a80990a441a,e1a962a1e7b60d9a623c97cfe5050a80990a441a,Fix unsafe use of TranslationResult.Files
kg,2011-11-30 17:36:46,https://api.github.com/repos/sq/JSIL/git/commits/9ad3afdc161cb5abc9eca9af73aba86e56ab92a9,9ad3afdc161cb5abc9eca9af73aba86e56ab92a9,Fix a minor race in MemberIdentifier's proxies collection
kg,2011-11-30 17:05:40,https://api.github.com/repos/sq/JSIL/git/commits/ab1b9642835af2e8b78139f36ca60ac360cb478e,ab1b9642835af2e8b78139f36ca60ac360cb478e,Fix MakeStructFieldInitializer for field names that contain characters that are invalid in JS identifiers
kg,2011-11-30 17:02:26,https://api.github.com/repos/sq/JSIL/git/commits/2b814f5d26cab574fc4100cdfe0698b6c9ebb355,2b814f5d26cab574fc4100cdfe0698b6c9ebb355,Change MemberIdentifier.Proxies to a concurrent dictionary
kg,2011-11-30 16:54:33,https://api.github.com/repos/sq/JSIL/git/commits/8ca9724cf3a47bc9d7be7d538d1424dc78dff3c2,8ca9724cf3a47bc9d7be7d538d1424dc78dff3c2,Optimize struct field initialization by caching the field type references and machine-generating a function to initialize the fields instead of using a for-loop
kg,2011-11-30 16:26:48,https://api.github.com/repos/sq/JSIL/git/commits/b9fa249a8b529ecedf9c83942056657c1121d8fb,b9fa249a8b529ecedf9c83942056657c1121d8fb,Do defineProperty fallback in ResolvedName.set as well to work around v8 restrictions
kg,2011-11-30 14:41:59,https://api.github.com/repos/sq/JSIL/git/commits/ea6bbb7c6ed3aa083be5c9fe7927d709c346d5ae,ea6bbb7c6ed3aa083be5c9fe7927d709c346d5ae,"Add a fallback to ApplyExternals for annoying edge cases in SpiderMonkey
Implement some Dispose methods in TextReader so it doesn't throw"
kg,2011-11-30 14:22:27,https://api.github.com/repos/sq/JSIL/git/commits/d76d232fe9df81350cd6f2060a0a90e719d1b1bd,d76d232fe9df81350cd6f2060a0a90e719d1b1bd,"Kill some unnecessary type filtering code
Simplify Translate a little"
kg,2011-11-30 14:12:39,https://api.github.com/repos/sq/JSIL/git/commits/67b3189102f142c1182d7d0c50145952eae0efc6,67b3189102f142c1182d7d0c50145952eae0efc6,Don't allocate a dictionary for empty MetadataCollections
kg,2011-11-30 14:00:12,https://api.github.com/repos/sq/JSIL/git/commits/f53deb0b7fa3f23603d9a89e98156ef185a6e234,f53deb0b7fa3f23603d9a89e98156ef185a6e234,"Minor GC optimizations
Speed up MemberIdentifier.New a little bit"
kg,2011-11-30 13:36:05,https://api.github.com/repos/sq/JSIL/git/commits/b0b027c2dd57923622ec750c0e69890ce203193b,b0b027c2dd57923622ec750c0e69890ce203193b,"Hoist the AstEmitter field into a local variable so it's not shared across threads
Use multiple threads to translate assemblies if threading is enabled
Performance tweaks to MemberIdentifier
Speed up TypeInfo.IsIgnoredName by using a single regex to scan for all the special keywords instead of cascading String.StartsWith/EndsWith/Contains calls"
kg,2011-11-30 12:55:59,https://api.github.com/repos/sq/JSIL/git/commits/c7ae4c80ac14d1d7b4a2d005559a74932b2367bd,c7ae4c80ac14d1d7b4a2d005559a74932b2367bd,"Allow disabling multi-threaded translation with a configuration/command-line flag
Make AssemblyManifest thread-safe"
kg,2011-11-30 12:47:16,https://api.github.com/repos/sq/JSIL/git/commits/af39a3764cc602fc317e5ce1c20744a5a3339378,af39a3764cc602fc317e5ce1c20744a5a3339378,"Hoist DeclaredTypes from a member of AssemblyTranslator into a local variable so that AssemblyTranslator.Translate(context, assembly, stream) can be called from multiple threads"
kg,2011-11-30 12:42:00,https://api.github.com/repos/sq/JSIL/git/commits/00c9118aa146a7db145f3a7c926a0196528c78d4,00c9118aa146a7db145f3a7c926a0196528c78d4,"Make TypeInfoProvider thread-safe
Make FunctionCache thread-safe
Switch JSExpression.ConstructDelegateType's cache to a thread safe cache
Multi-thread AssemblyTranslator.Analyze"
kg,2011-11-30 10:58:33,https://api.github.com/repos/sq/JSIL/git/commits/02e706ac77bc4c45f6961302f4040a202d4a77f1,02e706ac77bc4c45f6961302f4040a202d4a77f1,"Load assemblies in parallel
Better progress feedback"
kg,2011-11-29 19:54:42,https://api.github.com/repos/sq/JSIL/git/commits/a22a35392c9824aeb9b2a38f76bb5fdfc1c68d73,a22a35392c9824aeb9b2a38f76bb5fdfc1c68d73,Construct the dictionaries in TypeInfo with appropriately large capacities so that their internal buffers aren't grown as often during construction.
kg,2011-11-29 19:45:54,https://api.github.com/repos/sq/JSIL/git/commits/077f4f64f048a151e337465020d6bee93c710b8b,077f4f64f048a151e337465020d6bee93c710b8b,"Use a more precise caching strategy for finding proxies when constructing type information.
Various performance tweaks."
kg,2011-11-29 18:49:32,https://api.github.com/repos/sq/JSIL/git/commits/151ffe6be2b8a099990207377125228c1cbc56bf,151ffe6be2b8a099990207377125228c1cbc56bf,Add two tests covering some of the interaction between inheritable/uninheritable proxy objects and inherited methods
kg,2011-11-29 14:02:58,https://api.github.com/repos/sq/JSIL/git/commits/29666a9c3b2ff36b0f2472e3d3dcd945b6d7fe72,29666a9c3b2ff36b0f2472e3d3dcd945b6d7fe72,Fix incorrectly named Dispose externals in JSIL.IO that caused load failures by trying to replace an indirect interface getter
kg,2011-11-29 13:45:47,https://api.github.com/repos/sq/JSIL/git/commits/8d7612ab2088b24daf4b7ac1bd859ad3fb029577,8d7612ab2088b24daf4b7ac1bd859ad3fb029577,Update the JSIL.Browser and System.Drawing libraries so that the Raytracer demo will work again
kg,2011-11-29 13:09:20,https://api.github.com/repos/sq/JSIL/git/commits/b2a48da75e25ea80000e43a8d7dbecf7288339b0,b2a48da75e25ea80000e43a8d7dbecf7288339b0,"When translating 'foo.sln', if there is a configuration file named 'foo.sln.jsilconfig' next to it, that configuration is applied automatically for that solution.
Individual solution outputs can also have autoloaded configuration files in the same manner as solution files. The autoloaded configuration only applies for that output."
kg,2011-11-29 12:55:45,https://api.github.com/repos/sq/JSIL/git/commits/e6e59f84e1732c705b52a67703a9b5be37d672ec,e6e59f84e1732c705b52a67703a9b5be37d672ec,"Default settings are provided in the form of a .jsilconfig file instead of being hard-coded
Emit a log file during translation that specifies the configuration that was used and lists the files produced
When logging paths to stdout/stderr, convert them to relative paths so they're easier to read"
kg,2011-11-29 12:24:33,https://api.github.com/repos/sq/JSIL/git/commits/81104953fc290c31c7f50bdd373aa26756197184,81104953fc290c31c7f50bdd373aa26756197184,Implement %configpath% and %assemblypath% replacement values for the OutputDirectory configuration setting
kg,2011-11-29 12:04:11,https://api.github.com/repos/sq/JSIL/git/commits/bf0534cbd81cee92a7e0c5a9cbc4141be9ce3746,bf0534cbd81cee92a7e0c5a9cbc4141be9ce3746,"Make configurations use nullables so that it's possible to distinguish between omitted options and false values for booleans, so that partial configurations can be merged into other configurations
Implement loading configurations from disk and merging them into the default configuration"
kg,2011-11-29 11:02:50,https://api.github.com/repos/sq/JSIL/git/commits/e3633da25e545372d40e42b3c98839ffcdf70b57,e3633da25e545372d40e42b3c98839ffcdf70b57,Improved progress feedback
kg,2011-11-29 10:46:01,https://api.github.com/repos/sq/JSIL/git/commits/b09b5a4095e26bcfaf8df566a27d13da8bd80b7c,b09b5a4095e26bcfaf8df566a27d13da8bd80b7c,"Allow specifying a build platform and build configuration when passing a .sln file on the command line
Use Mono.Options to generate the usage text"
kg,2011-11-27 10:49:06,https://api.github.com/repos/sq/JSIL/git/commits/145c45b2c3606d6bb275b951cd57c65cfc49d911,145c45b2c3606d6bb275b951cd57c65cfc49d911,"Default stub pattern omitted the System assembly by erroneously requiring a dot.
Update the XNA4 proxy's unsafe methods list.
Split filename handling in JSILc out into two passes so configuration can be mutated."
kg,2011-11-27 08:57:19,https://api.github.com/repos/sq/JSIL/git/commits/a28e22d16c675f4fdfba4d3c896575801e4d1f0d,a28e22d16c675f4fdfba4d3c896575801e4d1f0d,"Finish moving command line parsing over to the new Configuration system. Loading/saving configs from disk doesn't work yet.
Add an omitted type name to the XNA proxies' unsafe native methods exclusions."
kg,2011-11-27 06:50:59,https://api.github.com/repos/sq/JSIL/git/commits/053e1788e7e1bad2763f3cb1f6de4daa07819546,053e1788e7e1bad2763f3cb1f6de4daa07819546,Update to newer ILSpy
kg,2011-11-02 12:36:52,https://api.github.com/repos/sq/JSIL/git/commits/9d9abe3c2059713d598906f03da9186bdd2a20e6,9d9abe3c2059713d598906f03da9186bdd2a20e6,"Split method/property replacement transform out from the operator simplification transform, since disabling the former will break important behavior
Implement Nullable.GetUnderlyingType and fix some related behavior, add a test
Surround generic arguments in type names with [] instead of <> to match .NET behavior
Change Object.GetType from a JSReplacement to a special method replacement so that it can be replaced with a type literal where necessary (currently only nullables)
Checkpoint work on storing compiler configuration in JSON files"
kg,2011-11-02 11:45:05,https://api.github.com/repos/sq/JSIL/git/commits/1ffe9dcea69b684f44dfa245a06e201238d9f939,1ffe9dcea69b684f44dfa245a06e201238d9f939,Add failing test case for hiding base methods contributed by aronmek
kg,2011-11-02 10:03:23,https://api.github.com/repos/sq/JSIL/git/commits/ddb0b9d7947cfb506ffc965a890c37d2462d50d7,ddb0b9d7947cfb506ffc965a890c37d2462d50d7,Update to more recent build of spidermonkey
kg,2011-10-31 08:30:00,https://api.github.com/repos/sq/JSIL/git/commits/715452a2ec8a3c16db73dc8ea378c8fd4f2c63dc,715452a2ec8a3c16db73dc8ea378c8fd4f2c63dc,"Explicitly specify the assembly that defined an overloaded method when providing its list of overloads, so that unqualified type names are resolved correctly if the $private assembly changes between the definition of the method and its first evaluation
Wire up the platformer demo again"
kg,2011-10-31 07:54:56,https://api.github.com/repos/sq/JSIL/git/commits/a80444a963de1a7c48f6de2678a4e5916a8eeb2e,a80444a963de1a7c48f6de2678a4e5916a8eeb2e,Remove the 'Any CPU' configuration added by Visual Studio
kg,2011-10-31 07:45:13,https://api.github.com/repos/sq/JSIL/git/commits/654eb1edd722042f64908bab8637f8f21a4a07af,654eb1edd722042f64908bab8637f8f21a4a07af,"When translating primitive types, generate the __IsIntegral__ and __IsNumeric__ constants so that Array.New will fill new arrays with zeroes instead of nulls for numeric types
Move members of String, Random and Math into externals"
kg,2011-10-31 07:20:44,https://api.github.com/repos/sq/JSIL/git/commits/26340eb793529813038a452881ad13ef3ee072c8,26340eb793529813038a452881ad13ef3ee072c8,Fix CheckType for integral and floating-point types
kg,2011-10-31 07:14:01,https://api.github.com/repos/sq/JSIL/git/commits/dc2fa3f6db149ec968a20ba42b5a90c2a4f95696,dc2fa3f6db149ec968a20ba42b5a90c2a4f95696,"More fixes to bootstrap implementation
Fixed XNA stub after the removal of MillisecondInTicks"
kg,2011-10-31 06:37:02,https://api.github.com/repos/sq/JSIL/git/commits/976146124614ade3fd17e5f465adf26ed8b556b1,976146124614ade3fd17e5f465adf26ed8b556b1,"Don't floor arguments to the Point and Rectangle constructors in the xna stubs since the arguments are already integers
Don't use arguments.callee in printStackTrace since JSIL.Core is a strict mode module"
kg,2011-10-31 06:31:11,https://api.github.com/repos/sq/JSIL/git/commits/d0a79ee30516c2028e70e9e44a65d354e8e0d354,d0a79ee30516c2028e70e9e44a65d354e8e0d354,"Ensure that the JSIL-only 'Of' method is within the external members list when translating System.Array
Emit external member lists in sorted order
Move Array and Enum special methods to externals so that they apply to translated definitions"
kg,2011-10-31 06:19:04,https://api.github.com/repos/sq/JSIL/git/commits/f4d725c3f8d887d968067122dfed611c2681d2a6,f4d725c3f8d887d968067122dfed611c2681d2a6,"Fixed code generator erroneously escaping backticks in type names when declaring types
Moved more bootstrap functions to externals"
kg,2011-10-31 05:40:28,https://api.github.com/repos/sq/JSIL/git/commits/728d62ebfa7f456d7a6bc59d6683f18e90619303,728d62ebfa7f456d7a6bc59d6683f18e90619303,Fix name collision warnings for delegate types
kg,2011-10-31 05:31:17,https://api.github.com/repos/sq/JSIL/git/commits/24413a4b276b8e6ec317f41578112b63b40e442c,24413a4b276b8e6ec317f41578112b63b40e442c,"Fix static constructor evaluation order
Add a simple browser test runner scaffold for debugging tests"
kg,2011-10-26 22:18:04,https://api.github.com/repos/sq/JSIL/git/commits/59eaa5005947762c248a384e3015b4384c152213,59eaa5005947762c248a384e3015b4384c152213,Website tweak
kg,2011-10-26 00:19:40,https://api.github.com/repos/sq/JSIL/git/commits/89385c3db3e170a8b09f3ceb616d9667afe6d0bc,89385c3db3e170a8b09f3ceb616d9667afe6d0bc,More bootstrap library cleanup
kg,2011-10-25 23:54:46,https://api.github.com/repos/sq/JSIL/git/commits/66b5d425c3e9f84e2b20a921b5c90ac725f4e4fe,66b5d425c3e9f84e2b20a921b5c90ac725f4e4fe,"Remove externals initialization code duplicated between MakeType and MakeStaticClass
Fix externals being ignored after the first time a type with a given name was initialized, since multiple types with the same name can exist in the global namespace
Tweak the bootstrap implementation of System.TimeSpan so that it is compatible with a stubbed mscorlib
Disable the bootstrap implementation of System.Nullable since it is unnecessary"
kg,2011-10-25 23:33:34,https://api.github.com/repos/sq/JSIL/git/commits/d0b23fc3e960d157df0b58bb70cbff7ff445ae28,d0b23fc3e960d157df0b58bb70cbff7ff445ae28,"MakeStruct now accepts a base type reference just like MakeClass, so that it can use the correct definition of System.ValueType."
kg,2011-10-25 23:26:24,https://api.github.com/repos/sq/JSIL/git/commits/4ff3b42fb5fa88d6a2713572897ffed99ad02109,4ff3b42fb5fa88d6a2713572897ffed99ad02109,Restore code generation for System.Object and properly handle its lack of a base class.
kg,2011-10-25 23:22:06,https://api.github.com/repos/sq/JSIL/git/commits/56fd8a3c78319f02c6a0550c9a5835b86dff34d3,56fd8a3c78319f02c6a0550c9a5835b86dff34d3,Better error handling in type initialization
kg,2011-10-25 23:00:24,https://api.github.com/repos/sq/JSIL/git/commits/73357c3df93a06f3c30a4c6f4fa4d0383c19cbbc,73357c3df93a06f3c30a4c6f4fa4d0383c19cbbc,Correct the logic for detecting whether types are defined in the current assembly
kg,2011-10-25 22:51:21,https://api.github.com/repos/sq/JSIL/git/commits/2ec7c649e80a220354f41e7ac9119fe51383e881,2ec7c649e80a220354f41e7ac9119fe51383e881,Check in content for the Mannux demo
kg,2011-10-25 22:50:47,https://api.github.com/repos/sq/JSIL/git/commits/02aec26db214cc52316bad5f60131f99782c68aa,02aec26db214cc52316bad5f60131f99782c68aa,"Slightly better error handling for the File asset loader
Use a more reliable method for locating the main assembly in the Mannux demo page"
kg,2011-10-25 09:01:15,https://api.github.com/repos/sq/JSIL/git/commits/edafbc4ee42f9389924f17bccc44b6fec48533b3,edafbc4ee42f9389924f17bccc44b6fec48533b3,"Translate returns a TranslationResult object containing all the generated files along with a manifest that should be loaded first in order to resolve assembly references
TranslationResult has methods for saving to a stream or a string for testing purposes"
kg,2011-10-25 04:31:28,https://api.github.com/repos/sq/JSIL/git/commits/f8f30d4316e77f4fc4de617bc101874f7582a1a7,f8f30d4316e77f4fc4de617bc101874f7582a1a7,Correct Cecil project configurations. Goddamn Visual Studio.
kg,2011-10-25 03:24:55,https://api.github.com/repos/sq/JSIL/git/commits/b1cefc3816a2bd73a6ece2ef517dc8835cc6e8b6,b1cefc3816a2bd73a6ece2ef517dc8835cc6e8b6,"Split out Proxies into Proxies.3.5 and Proxies.4.0 assemblies to avoid polluting the type information namespace with two copies of mscorlib
Checkpoint work on generating an application manifest and using it to resolve assembly references"
kg,2011-10-24 04:58:11,https://api.github.com/repos/sq/JSIL/git/commits/19bec06ed2e6bef89f65b4359e35d8cb91ed5093,19bec06ed2e6bef89f65b4359e35d8cb91ed5093,ImplementInterfaces now handles interfaces passed as TypeRefs
kg,2011-10-22 19:19:16,https://api.github.com/repos/sq/JSIL/git/commits/cd9ce66e99c36d639e8e11aa7203d965034989c6,cd9ce66e99c36d639e8e11aa7203d965034989c6,"Checkpoint
Do a more complete pass to collect assembly references before translating a module
Do some basic fixup to resolve references to the wrong version of mscorlib (these are mostly introduced by JSIL.Proxies being the wrong version)"
kg,2011-10-22 17:27:21,https://api.github.com/repos/sq/JSIL/git/commits/cc204f521bb82e7e7f94a6958d5d072530da8f14,cc204f521bb82e7e7f94a6958d5d072530da8f14,"Detect recursive type initialization and abort with a more meaningful exception
Never translate System.Object since the general translation logic produces a recursive initialization
Replace the bootstrap version of ArrayList with an actual class instead of a broken alias
Allow hex characters in the assembly id regex used in analysistests/formattingtests"
kg,2011-10-22 16:56:11,https://api.github.com/repos/sq/JSIL/git/commits/a8182b93b339129ce31632d3f24cd9eb8bc946eb,a8182b93b339129ce31632d3f24cd9eb8bc946eb,"Fixed bug that caused private types not to be defined if a public type with the same name already existed
Update some tests to work with the $asmXX prefix
Implement private enums"
kg,2011-10-21 15:38:58,https://api.github.com/repos/sq/JSIL/git/commits/15a15ab0ed2583c2a873354ad6245baf5d8ed50a,15a15ab0ed2583c2a873354ad6245baf5d8ed50a,"Fix the egregious bug in the public domain printStackTrace function that caused it to mutate every argument list on the stack. JESUS.
Use MakeNumericType for System.Boolean and System.Char's definitions in Bootstrap so that they can be found by overload resolution type lookup.
Generate a list of assembly references when emitting JS for each module so that it gets the right type for a given name in the presence of name collisions.
Add infrastructure to support assembly references so that public name collisions can be resolved.
Compare Cecil assemblies by fullname instead of reference."
kg,2011-10-19 13:52:17,https://api.github.com/repos/sq/JSIL/git/commits/4ba7dcf8c686febd34465bbdb47921dfaa94685b,4ba7dcf8c686febd34465bbdb47921dfaa94685b,Record a stack trace when defining types so that duplicate definition errors can provide both the current and original stacks
kg,2011-10-19 13:33:32,https://api.github.com/repos/sq/JSIL/git/commits/95618be46cba8bb5b2c4c8c2b742af8f5440c0bf,95618be46cba8bb5b2c4c8c2b742af8f5440c0bf,Distinguish between public and private interfaces
kg,2011-10-18 12:54:39,https://api.github.com/repos/sq/JSIL/git/commits/68f60960c28a9610f489d034f21e0a68fe78452d,68f60960c28a9610f489d034f21e0a68fe78452d,Checkpoint: Runs correctly in Firefox again (work around strict mode property differences)
kg,2011-10-06 07:19:57,https://api.github.com/repos/sq/JSIL/git/commits/7736b929a9e621ff2291dc585b4278c5ffc8beca,7736b929a9e621ff2291dc585b4278c5ffc8beca,"Update to current version of ILSpy:
  ILSpy now emits Cne, Cle and Cge instructions, so implement them.
  ILSpy now emits ValueOf and NullableOf instructions to represent 'nullable.Value' and 'T? foo = bar', respectively, so map those to the equivalent JavaScript
  A namespace was pulled out into its own assembly so add it to the project and references appropriately"
kg,2011-10-06 06:13:19,https://api.github.com/repos/sq/JSIL/git/commits/3dc5826aaeef9b70b3bc97448e0a95bc476631dc,3dc5826aaeef9b70b3bc97448e0a95bc476631dc,Merge branch 'master' of github.com:kevingadd/JSIL into order-independence
kg,2011-09-05 03:42:39,https://api.github.com/repos/sq/JSIL/git/commits/b6fc66b3ad88c2753850f745f1990197dff9b56a,b6fc66b3ad88c2753850f745f1990197dff9b56a,Add the content for the platformer and tetris demos
kg,2011-08-31 12:52:23,https://api.github.com/repos/sq/JSIL/git/commits/e504bc1b452c5cc9f9a35c1e74d2c8b9d910d973,e504bc1b452c5cc9f9a35c1e74d2c8b9d910d973,Various fixes to the handling of private names and assembly namespaces
kg,2011-08-31 10:21:04,https://api.github.com/repos/sq/JSIL/git/commits/e450a63f0e2490d5b28c1b1248f8661edbf76905,e450a63f0e2490d5b28c1b1248f8661edbf76905,Be more rigorous about detecting duplicate definitions.
kg,2011-08-31 09:55:55,https://api.github.com/repos/sq/JSIL/git/commits/574efeedee67be54db2079471a021d9fe60232ea,574efeedee67be54db2079471a021d9fe60232ea,Fixed external override issues from property/value mismatch
kg,2011-08-31 09:29:47,https://api.github.com/repos/sq/JSIL/git/commits/f34652330695c3c24c38ebf84757cec41cbcfaab,f34652330695c3c24c38ebf84757cec41cbcfaab,"Externals work better if you put them in the right type.
Mannux starts again."
kg,2011-08-31 09:17:22,https://api.github.com/repos/sq/JSIL/git/commits/f77a6ec32780d2da204de2f80fa1ee648766943f,f77a6ec32780d2da204de2f80fa1ee648766943f,"Updated more externals
Fixed some incorrect use of OverloadedMethod"
kg,2011-08-31 09:02:02,https://api.github.com/repos/sq/JSIL/git/commits/577f9ec400d57c3f628155baab9a9f4d499328a1,577f9ec400d57c3f628155baab9a9f4d499328a1,More XNA types converted to new external system
kg,2011-08-31 08:43:57,https://api.github.com/repos/sq/JSIL/git/commits/e63188bcbf9a8deaeb5a4f0e9281184a79d4ae58,e63188bcbf9a8deaeb5a4f0e9281184a79d4ae58,"Fixes to new externals implementation
Changed more externals to new implementation"
kg,2011-08-23 07:26:17,https://api.github.com/repos/sq/JSIL/git/commits/000c352c78cfb2cc47ede1b98c335b17d90157a8,000c352c78cfb2cc47ede1b98c335b17d90157a8,"Change the way external methods work so that it's compatible with the new order-independent initialization logic
Update some of the bootstrap library code"
kg,2011-08-23 02:31:11,https://api.github.com/repos/sq/JSIL/git/commits/1771213bcf1f8360117e5934eabaf5b00261c2d9,1771213bcf1f8360117e5934eabaf5b00261c2d9,"For nested types (Parent/Nested and Parent+Nested), generate mangled names instead of nesting the actual type within the parent type. This fixes some load ordering issues and eliminates some cyclic dependencies.

Fix various problems with JSIL.EscapeName. String.replace's semantics are COMPLETELY INSANE."
kg,2011-08-04 07:48:58,https://api.github.com/repos/sq/JSIL/git/commits/da41e59be9bb6cf86351cc57f4d58802dfe2492d,da41e59be9bb6cf86351cc57f4d58802dfe2492d,LocalName cleanup
kg,2011-08-04 05:24:39,https://api.github.com/repos/sq/JSIL/git/commits/94184fe57b3703a5eee914a5ba1b387ce391db70,94184fe57b3703a5eee914a5ba1b387ce391db70,Remove deferred base types. Defer construction of classes until first use.
kg,2011-07-31 07:14:08,https://api.github.com/repos/sq/JSIL/git/commits/3a96272044cbe3a8e0bc72ec74fa79389637eee7,3a96272044cbe3a8e0bc72ec74fa79389637eee7,Use a helper method for constants instead of invoking Object.defineProperty directly
kg,2011-07-25 10:19:52,https://api.github.com/repos/sq/JSIL/git/commits/147abf18ea6f454dfd1d7d3ca8f97a88d7473f59,147abf18ea6f454dfd1d7d3ca8f97a88d7473f59,"Correct the load order for System and the assemblies that depend on it in the demos
Use type references in the StructFields list instead of direct expressions to prevent cyclical references"
kg,2011-07-25 10:09:21,https://api.github.com/repos/sq/JSIL/git/commits/76ecaba0a6c2b8086d0e409742093201260ccec5,76ecaba0a6c2b8086d0e409742093201260ccec5,"Declare nested types outside of the parent type so that a nested type can be used without the outer type being constructed

Remove some references to SealTypes"
kg,2011-07-25 09:59:08,https://api.github.com/repos/sq/JSIL/git/commits/f7ab2d0beb04882f1e297aa20228e7e6dd328a25,f7ab2d0beb04882f1e297aa20228e7e6dd328a25,"All declared types are stored in a single, global table, keyed by name. This allows nested types to be used as base types without triggering the accessor(s) for their parent type(s) during type construction.
The argument types for overloaded methods are specified as type references instead of raw expressions, to avoid triggering their accessor(s) during type construction.
Use the $ local variable when defining external members and implementing interfaces, to avoid a cyclical reference"
kg,2011-07-23 05:41:21,https://api.github.com/repos/sq/JSIL/git/commits/b3f5179aa7590554af58874f20310d04499c1c5f,b3f5179aa7590554af58874f20310d04499c1c5f,"Merge pull request #28 from markusjohnsson/multiple_argument_initializers

Fixed issue with collection initializers with more than one argument"
markusjohnsson,2011-07-22 16:20:55,https://api.github.com/repos/sq/JSIL/git/commits/90c200282fc4417be2265c709c3a7370c6c4ff42,90c200282fc4417be2265c709c3a7370c6c4ff42,Fixed issue with collection initializers with more than one argument to Add.
kg,2011-07-17 23:42:02,https://api.github.com/repos/sq/JSIL/git/commits/ee45d6b2eabf8b6c967eeba825335b6d64fc591a,ee45d6b2eabf8b6c967eeba825335b6d64fc591a,Merge branch 'master' of github.com:kevingadd/JSIL into order-independence
markusjohnsson,2011-07-17 18:46:48,https://api.github.com/repos/sq/JSIL/git/commits/580ee141501ddd99dc20d126d94049cc30b5c5d5,580ee141501ddd99dc20d126d94049cc30b5c5d5,Added constructors and added declarations of properties to TimeSpan
markusjohnsson,2011-07-16 16:04:12,https://api.github.com/repos/sq/JSIL/git/commits/3a4753043e119e6b961120c604d3ee2a4fbe0376,3a4753043e119e6b961120c604d3ee2a4fbe0376,Added Math.Tan(double) to Proxies/Math
kg,2011-07-07 15:50:19,https://api.github.com/repos/sq/JSIL/git/commits/b3bf7786ae08ff5eed975b2038249ea56c50f7d5,b3bf7786ae08ff5eed975b2038249ea56c50f7d5,Update to ILSpy head
kg,2011-07-05 07:06:56,https://api.github.com/repos/sq/JSIL/git/commits/9b332250a3b8e537c424c7fd9edcaee9b492a40c,9b332250a3b8e537c424c7fd9edcaee9b492a40c,Checkpointing work on order-independent output JS
kg,2011-07-04 08:28:02,https://api.github.com/repos/sq/JSIL/git/commits/325b664241a8550abf6cf473662ad74a931d3135,325b664241a8550abf6cf473662ad74a931d3135,Don't construct a temporary MetadataCollection in LocateProxy just to check for a proxy attribute
kg,2011-07-04 08:15:17,https://api.github.com/repos/sq/JSIL/git/commits/c119d0f3235ecf804f204de0e6c65f1ea8b3a122,c119d0f3235ecf804f204de0e6c65f1ea8b3a122,Removed JSExpression.IsOpenGenericType
kg,2011-07-04 08:02:45,https://api.github.com/repos/sq/JSIL/git/commits/154fee5a6b0f93214732e32e72c0a6c4006f818e,154fee5a6b0f93214732e32e72c0a6c4006f818e,Eliminate more recursion from type info graph construction
kg,2011-07-04 07:38:31,https://api.github.com/repos/sq/JSIL/git/commits/3b0843b512c2a287a3da4f6f345c33c09747a069,3b0843b512c2a287a3da4f6f345c33c09747a069,"Less recursion when constructing the type information graph
Performance tweaks to TypesAreEqual
Use the RunComparisonTests batch runner for more tests"
kg,2011-07-04 05:17:14,https://api.github.com/repos/sq/JSIL/git/commits/571a2b927af407d48109c4560a96d33e2c3f9189,571a2b927af407d48109c4560a96d33e2c3f9189,"Fixed TypeInfoProvider.Remove not working on nested types
Added the default implementations of Object.Equals and ValueType.Equals
Escaping/modified values default to empty lists if a method has the JSIsPure attribute"
kg,2011-07-04 04:34:05,https://api.github.com/repos/sq/JSIL/git/commits/181cb86f816e4a0f3d4b3922d813d7302585e2b9,181cb86f816e4a0f3d4b3922d813d7302585e2b9,"Remember the list of failed tests after each batch test run, and run tests that previously failed first so that it is easier to debug them"
kg,2011-07-03 14:44:09,https://api.github.com/repos/sq/JSIL/git/commits/fd26d5720de32dbed13e39181a4cdb53f0b56693,fd26d5720de32dbed13e39181a4cdb53f0b56693,"Added project files for the raytracer sample so it's easier to build
Removed an unnecessary try/catch in XNACore"
kg,2011-07-03 13:41:46,https://api.github.com/repos/sq/JSIL/git/commits/0dd662396906f2e2ccd8a47fd6f466351f7edc8b,0dd662396906f2e2ccd8a47fd6f466351f7edc8b,Replace uses of Nullable<T> with equivalent expressions since a Nullable<T> can always be represented in JS by either a T or null.
kg,2011-07-03 12:45:15,https://api.github.com/repos/sq/JSIL/git/commits/f51b03b1ab312a5759958130a37744d7d9554c8a,f51b03b1ab312a5759958130a37744d7d9554c8a,"All type objects are assigned a unique ID that can be used for faster type lookups
Fixed System.Windows constructing List<T>'s without specifying T"
kg,2011-07-03 11:35:00,https://api.github.com/repos/sq/JSIL/git/commits/fd0a8503523494a7ce60a56302db5e4d26495095,fd0a8503523494a7ce60a56302db5e4d26495095,"Various performance improvements in XNACore.
getImageMultiplied no longer multiplies out the alpha channel, just r/g/b. This makes opacity fades of multiplied images much cheaper.
Fixed broken implementation of Color.op_Multiply. Whoops."
kg,2011-07-03 04:09:44,https://api.github.com/repos/sq/JSIL/git/commits/3acf89cd8e0cd2be393f28fbb5fc8d33ac1c49d1,3acf89cd8e0cd2be393f28fbb5fc8d33ac1c49d1,Fixed insertion of unnecessary parentheses around new-operator expressions when they are arguments of a method invocation
kg,2011-07-02 10:42:35,https://api.github.com/repos/sq/JSIL/git/commits/bf8c29d83b7ab5fc39ccc8b0bbc2083ccf4f653c,bf8c29d83b7ab5fc39ccc8b0bbc2083ccf4f653c,Add some basic support for building Visual Studio .sln files from the command line and automatically translating all their outputs.
kg,2011-07-02 10:10:48,https://api.github.com/repos/sq/JSIL/git/commits/c0a13cc24f14bfb853c91f42746d16b7ee7fd8bb,c0a13cc24f14bfb853c91f42746d16b7ee7fd8bb,Code cleanup
kg,2011-07-02 09:44:40,https://api.github.com/repos/sq/JSIL/git/commits/bf6398d53c6357ec2343bfc6061703f01a42f2e1,bf6398d53c6357ec2343bfc6061703f01a42f2e1,Try eliminating return value copies for structs in cases where it is safe
kg,2011-07-02 03:13:40,https://api.github.com/repos/sq/JSIL/git/commits/ce53ab7f9fcd049e05cdfce75fba0c0729ea2a68,ce53ab7f9fcd049e05cdfce75fba0c0729ea2a68,"Add support for IE10's requestAnimationFrame, but leave it disabled because it's broken in the latest platform preview."
kg,2011-07-02 02:47:18,https://api.github.com/repos/sq/JSIL/git/commits/81152e41ab84a3216334d824ad7ed89c50bf39ac,81152e41ab84a3216334d824ad7ed89c50bf39ac,"Detect attempts to retrieve static analysis data while it's currently being constructed (due to recursion) and return nothing, so that optimizations are suppressed"
kg,2011-07-02 02:43:34,https://api.github.com/repos/sq/JSIL/git/commits/84d5995a7401fcba92245c4f1ba1f7064248a2b5,84d5995a7401fcba92245c4f1ba1f7064248a2b5,"Added command line flags to JSILc for disabling specific optimization passes
Added a configuration variable to AssemblyTranslator for disabling struct copy optimization"
kg,2011-07-02 02:38:43,https://api.github.com/repos/sq/JSIL/git/commits/556b4be63834b9554f9ee6312a4ccedd542aedd4,556b4be63834b9554f9ee6312a4ccedd542aedd4,"Improved the accuracy of static analysis in various edge cases
Implemented some simple static analysis optimizations to eliminate struct copies
Added JSNode.SelfAndChildrenRecursive and replaced some incorrect uses of AllChildrenRecursive with it"
kg,2011-07-01 11:20:35,https://api.github.com/repos/sq/JSIL/git/commits/b99efe697b8d282f715580cbd99515d4b6739430,b99efe697b8d282f715580cbd99515d4b6739430,"Fix parens erroneously being omitted for invocation this references due to a bug in CountOfMatchingSubtrees
Add support for loading mdb symbols when present
Improved JSILc progress output"
kg,2011-07-01 06:30:26,https://api.github.com/repos/sq/JSIL/git/commits/ac6d02fb355761640b0a35345edfe9b5149f3427,ac6d02fb355761640b0a35345edfe9b5149f3427,Fix generation of method bodies for stubbed auto properties
kg,2011-07-01 06:24:18,https://api.github.com/repos/sq/JSIL/git/commits/36912a474eb74eb7236c7a170bcf529cbee3f962,36912a474eb74eb7236c7a170bcf529cbee3f962,Fixed a null reference exception when optimizing ignored method bodies
kg,2011-07-01 06:13:31,https://api.github.com/repos/sq/JSIL/git/commits/04a78429491f856122385a9fa0ff6c6772804f3f,04a78429491f856122385a9fa0ff6c6772804f3f,"More work on multipass optimization
Reworked progress reporting events on AssemblyTranslator
Fixed an assembly identifier mismatch issue with static constructors
Fixed stubbed methods being translated anyways in specific cases"
kg,2011-07-01 05:23:07,https://api.github.com/repos/sq/JSIL/git/commits/9072e2db7c53c123598edb90a04e7050a73e34db,9072e2db7c53c123598edb90a04e7050a73e34db,"Switched to up-front translation and analysis of all methods instead of doing on-the-fly translation while generating JS (with two exceptions: compiler-generated lambda methods, and translator-generated static constructors for structs). This should make multi-stage optimization possible."
kg,2011-07-01 04:35:37,https://api.github.com/repos/sq/JSIL/git/commits/4346a4fab295f44a1a39387179d50ceff7971e22,4346a4fab295f44a1a39387179d50ceff7971e22,"Introduced a new JSLambda AST node so that variable elimination isn't needed when using functions as lambdas, since that modifies the cached function expression.
Started adding the up-front analysis pass."
kg,2011-06-30 10:13:54,https://api.github.com/repos/sq/JSIL/git/commits/66ec65bb0af7095423be7dbf7521efa2730725d5,66ec65bb0af7095423be7dbf7521efa2730725d5,Cleanups and refactoring to ease static analysis work
kg,2011-06-29 21:58:52,https://api.github.com/repos/sq/JSIL/git/commits/5bef6c5a962d739da2adb15ae8eb7c43bc455855,5bef6c5a962d739da2adb15ae8eb7c43bc455855,"Add test coverage for nullables
Correct the implementation of GetValueOrDefault()
Numeric types have __IsNumeric__, in addition to integral types having __IsIntegral__"
robashton,2011-06-29 12:06:01,https://api.github.com/repos/sq/JSIL/git/commits/f52e721635413aedda6e9b5f3150ae48e81f955f,f52e721635413aedda6e9b5f3150ae48e81f955f,Added Value to NullableType
robashton,2011-06-29 11:27:16,https://api.github.com/repos/sq/JSIL/git/commits/42b9d49c3c69ff364d8da19e9badfc3255e396dc,42b9d49c3c69ff364d8da19e9badfc3255e396dc,Added String.Empty to System.String
kg,2011-06-29 21:42:45,https://api.github.com/repos/sq/JSIL/git/commits/a1f9854998bd56c2d38c4ef9d8e85afa01a2c1ce,a1f9854998bd56c2d38c4ef9d8e85afa01a2c1ce,Fix $outer_this being used even when a closure isn't being emitted inline
kg,2011-06-29 21:35:35,https://api.github.com/repos/sq/JSIL/git/commits/6cfa0e4182f34208ac3053a8741acfdd30ef2d01,6cfa0e4182f34208ac3053a8741acfdd30ef2d01,Fixed missing parens around ternary expressions
kg,2011-06-29 02:02:32,https://api.github.com/repos/sq/JSIL/git/commits/45a26424711b14c1b98e9173a59ca03d27fa1ee2,45a26424711b14c1b98e9173a59ca03d27fa1ee2,Updated ignore list
kg,2011-06-29 01:54:00,https://api.github.com/repos/sq/JSIL/git/commits/9c9c05e9da5acd518bbd04697e7e4e4cdd16f174,9c9c05e9da5acd518bbd04697e7e4e4cdd16f174,"Update to ILSpy head
Fixed array initializers to work with ILSpy's improved support for them
If the last argument to JSIL.MultidimensionalArray.New is an array, it's treated as an initializer for the new array
JSIL.Array.ShallowCopy throws errors on invalid source/destination arrays, and now handles multidimensional source arrays
Tweaked temporary elimination to work correctly with array expressions"
kg,2011-06-27 09:21:06,https://api.github.com/repos/sq/JSIL/git/commits/339f10d81717c19596200871f75c7c19686b7b0b,339f10d81717c19596200871f75c7c19686b7b0b,"Various changes so that sealing of generic types works correctly (the backtick was not being escaped, so SealTypes silently failed to seal them)
Always defer base types when they are generic. This fixes various ordering issues where a generic type is closed before it has been fully defined.
Overhaul the implementation of deferred base types so that the prototype is not replaced by a new prototype at runtime. This works around a race condition in javascript runtimes that causes the replacement prototype to be ignored."
kg,2011-06-27 08:05:24,https://api.github.com/repos/sq/JSIL/git/commits/0f81b80938d8255fe5d7d33ba17df304b03dcb67,0f81b80938d8255fe5d7d33ba17df304b03dcb67,"Run the static constructors of open generic types on an individual basis for each closed type, inside of .Of(T), instead of running the static constructor once on the first use of the open type."
kg,2011-06-27 07:51:40,https://api.github.com/repos/sq/JSIL/git/commits/46b3dd8bac280828b098694d86bf31b7704ab0c9,46b3dd8bac280828b098694d86bf31b7704ab0c9,Merge branch 'master' of github.com:kevingadd/JSIL
robashton,2011-06-26 12:39:01,https://api.github.com/repos/sq/JSIL/git/commits/b66e406bf4713b9a1d41fbd55d94191226cfd036,b66e406bf4713b9a1d41fbd55d94191226cfd036,Test case for static initializers on generic types setting fields
kg,2011-06-27 07:51:21,https://api.github.com/repos/sq/JSIL/git/commits/9f72b2aaf2143be6f6cc42e56589e5cc9d1e8f63,9f72b2aaf2143be6f6cc42e56589e5cc9d1e8f63,Add a test for the order in which static constructors run
robashton,2011-06-26 12:32:04,https://api.github.com/repos/sq/JSIL/git/commits/78da078d5e88783af09490f7951cc4c23a3ab44c,78da078d5e88783af09490f7951cc4c23a3ab44c,Added the ability to safely cast from a null source
kg,2011-06-26 03:15:13,https://api.github.com/repos/sq/JSIL/git/commits/421825471254795dd35ba4a53fd41bca22cd165c,421825471254795dd35ba4a53fd41bca22cd165c,Move the live demos into a subfolder of the website folder
kg,2011-06-26 03:09:37,https://api.github.com/repos/sq/JSIL/git/commits/7a400562d4b3a5d00b93a9b311c786d970b3b4ab,7a400562d4b3a5d00b93a9b311c786d970b3b4ab,"Restore the current culture at the end of the C# test run since the current thread is owned by the thread pool
Update readme"
markusjohnsson,2011-06-25 14:03:19,https://api.github.com/repos/sq/JSIL/git/commits/284c5de2b37bbd377d24276faf6dc35b5fb70f52,284c5de2b37bbd377d24276faf6dc35b5fb70f52,Minimal support for System.EventArgs.
markusjohnsson,2011-06-25 14:01:57,https://api.github.com/repos/sq/JSIL/git/commits/726585b523fa41ad15292dc5ebe5b6100d07f53f,726585b523fa41ad15292dc5ebe5b6100d07f53f,Run C# part of ComparisonTest using InvariantCulture.
markusjohnsson,2011-06-25 14:01:01,https://api.github.com/repos/sq/JSIL/git/commits/bfe8c4e18180e35f5bf802716caa919e2f495971,bfe8c4e18180e35f5bf802716caa919e2f495971,"Output numbers using InvariantCulture, fixes issue when using JSILc using e.g. Swedish culture (which uses comma as decimal separator)."
markusjohnsson,2011-06-25 13:58:32,https://api.github.com/repos/sq/JSIL/git/commits/ce356a4af1d58ab166fb84d1e15f74da1fa9cc05,ce356a4af1d58ab166fb84d1e15f74da1fa9cc05,Modify path resolution for PostBuildEvent in Compiler.csproj. Needed if the project is included from another solution.
kg,2011-06-26 02:49:15,https://api.github.com/repos/sq/JSIL/git/commits/66697e7302d855ab199d2c1160f8d42e0778e6ce,66697e7302d855ab199d2c1160f8d42e0778e6ce,"Split the type information provider out into a separate class
Use a shared type information provider when batch running unit tests. This speeds up tests dramatically since constructing type information takes a lot more time than actually translating msil to javascript."
kg,2011-06-26 02:02:02,https://api.github.com/repos/sq/JSIL/git/commits/d44841230761c1e5bc080574eb61ff5ba526fb91,d44841230761c1e5bc080574eb61ff5ba526fb91,"Attempt to detect and handle cases where an assembly's CodeBase is null (the MSDN documentation indicates this can happen when loading from the GAC), and fall back on Assembly.Location instead."
kg,2011-06-26 01:55:29,https://api.github.com/repos/sq/JSIL/git/commits/e4d63b1f72a89cef0272470edb4af2003649e1ca,e4d63b1f72a89cef0272470edb4af2003649e1ca,"Associate variables with the function they belong to for diagnostic purposes
When a lambda references the this-parameter of an outer function, store it into a temporary local to work around the way JS rebinds the 'this' keyword
Allow specifying the default value of a variable when declaring it so you don't need to explicitly assign it
Allow static analysis to descend into lambda expressions so that variables used by lambdas are not eliminated"
kg,2011-06-18 03:23:28,https://api.github.com/repos/sq/JSIL/git/commits/31cb4ac761d3d14c411621288728b2345d990749,31cb4ac761d3d14c411621288728b2345d990749,"Add support for static properties on generic classes
Fix type inference for property getters on generic classes
Add a test case for static analysis (not currently passing)"
kg,2011-06-17 12:15:39,https://api.github.com/repos/sq/JSIL/git/commits/e9207b8a1fe8f6b2c9764b6e2fc342db6d8c0158,e9207b8a1fe8f6b2c9764b6e2fc342db6d8c0158,Merge part of robashton's befa79d18950cc210d1a
kg,2011-06-15 06:44:50,https://api.github.com/repos/sq/JSIL/git/commits/0c9beb9a516f79359cc7d7f404dac244b0da3d47,0c9beb9a516f79359cc7d7f404dac244b0da3d47,Random tweaks
kg,2011-06-15 06:08:08,https://api.github.com/repos/sq/JSIL/git/commits/b643bb116e62d8545004da89c1cfc20083ed1a4b,b643bb116e62d8545004da89c1cfc20083ed1a4b,Add a simple list of default stub filters to JSILc (you can disable the list with --nodefaults if you actually want to translate those assemblies)
kg,2011-06-15 05:56:17,https://api.github.com/repos/sq/JSIL/git/commits/8ca50de4bab68a270e201cd693c86cad0da979af,8ca50de4bab68a270e201cd693c86cad0da979af,"Fix EliminateSingleUseTemporaries not properly replacing direct variable references (wow, how did I miss that one?)
Fix some translation failures in mscorlib"
kg,2011-06-15 02:38:41,https://api.github.com/repos/sq/JSIL/git/commits/f90231235e446065163d7c0836757bbf19ecc8ef,f90231235e446065163d7c0836757bbf19ecc8ef,Implement font scaling in DrawString
kg,2011-06-15 02:32:13,https://api.github.com/repos/sq/JSIL/git/commits/e645a9c436e9fd5b52778b7d00e9b6cef2491e93,e645a9c436e9fd5b52778b7d00e9b6cef2491e93,Update website content
kg,2011-06-14 12:47:26,https://api.github.com/repos/sq/JSIL/git/commits/7312075dc93e490800513a50871b892e977a0f1c,7312075dc93e490800513a50871b892e977a0f1c,Detect negative destination width/height and compensate for that causing an error in Firefox's canvas implementation
kg,2011-06-14 12:26:52,https://api.github.com/repos/sq/JSIL/git/commits/77308d81bc63813c4dba7d3f69ca7b58ee6e08ad,77308d81bc63813c4dba7d3f69ca7b58ee6e08ad,"Fix color multiply emulation not processing all image pixels
Fix compatibility issue when reassigning this.length in MultidimensionalArray"
kg,2011-06-14 12:18:30,https://api.github.com/repos/sq/JSIL/git/commits/7db9d8284211dcf1d21d0ea7d5c4ef9dd92ab214,7db9d8284211dcf1d21d0ea7d5c4ef9dd92ab214,"Fix IsStruct returning false for reference-to-struct (this fixes copies not being introduced for loads from struct fields and properties)
Split out the XNA proxies into XNA3 and XNA4 versions
Various fixes to XNA proxies and stubs"
kg,2011-06-14 11:24:19,https://api.github.com/repos/sq/JSIL/git/commits/da5ca31dac6bd4157a3414ac1a5f958c2b391f6e,da5ca31dac6bd4157a3414ac1a5f958c2b391f6e,"Fix method groups erroneously picking names based on filtered methods
Fix method groups erroneously including filtered methods"
kg,2011-06-14 11:22:53,https://api.github.com/repos/sq/JSIL/git/commits/49b6c5994fbdcd036100d4fe4d9a03464063d93e,49b6c5994fbdcd036100d4fe4d9a03464063d93e,"Cause JSChangeName to prevent the addition of generic and overload suffixes (this fixes Object.toString sometimes being named 'toString$0')
Unify more XNA stub code"
kg,2011-06-14 11:06:02,https://api.github.com/repos/sq/JSIL/git/commits/bf95bd91046807490f453823b363bc7eac9c2506,bf95bd91046807490f453823b363bc7eac9c2506,"Unify the Color implementation between the XNA3 and XNA4 stubs.
Partial stubs for Linq and Dictionary."
kg,2011-06-14 10:19:36,https://api.github.com/repos/sq/JSIL/git/commits/df04dc0dcd4a24beb0bb042019cbf78742550af5,df04dc0dcd4a24beb0bb042019cbf78742550af5,"Implement array initializers stored in field initialvalues
Fix the total size calculation in JSIL.MultidimensionalArray"
kg,2011-06-13 11:25:49,https://api.github.com/repos/sq/JSIL/git/commits/2143aa6cb714e98c8ca450e15c20fba9c15f6686,2143aa6cb714e98c8ca450e15c20fba9c15f6686,"Add basic support for replacing method bodies with method bodies from proxy methods
Removed the Tetris example external for now since it relies on a feature ILSpy doesn't support"
kg,2011-06-13 04:15:40,https://api.github.com/repos/sq/JSIL/git/commits/e1fe839ad92ac32361d269795cb39807f773dc34,e1fe839ad92ac32361d269795cb39807f773dc34,Fix NullReferenceException when ldobj's target is not a valid reference.
kg,2011-06-13 03:36:51,https://api.github.com/repos/sq/JSIL/git/commits/4b1739cedfcff63d1fd45ff93b402595eae3c040,4b1739cedfcff63d1fd45ff93b402595eae3c040,"Remove the clone repository link and provide a https url instead, since git read only URIs are apparently broken for some people"
kg,2011-06-13 02:29:15,https://api.github.com/repos/sq/JSIL/git/commits/cca80876f31e16273ff9eb5296ea1f9e01ddd755,cca80876f31e16273ff9eb5296ea1f9e01ddd755,Remove the mannux external since it being private breaks cloning
kg,2011-06-12 05:36:18,https://api.github.com/repos/sq/JSIL/git/commits/8400929de9191556528647b615fb9e50388bddef,8400929de9191556528647b615fb9e50388bddef,Add support for IL fault blocks
kg,2011-06-11 11:35:02,https://api.github.com/repos/sq/JSIL/git/commits/626af111faa98d4f72f56365487283d58a12135b,626af111faa98d4f72f56365487283d58a12135b,"Introduce a Number() cast when using an enum as an array index, because some JS runtimes fail to handle that correctly
Fix the Array.IndexOf proxy methods"
kg,2011-06-11 11:23:21,https://api.github.com/repos/sq/JSIL/git/commits/52d316c270066d055f474f331becfee69f84a67b,52d316c270066d055f474f331becfee69f84a67b,"Fix TypesAreEqual returning true when two types had the same core element type (T) but different reference depths (T& vs T&&).
Fix CopyOnReturn returning true for primitive types.
Improve correctness in various cases when taking a reference to the return value of a function.
Fix getters and virtual getters not returning structs by reference.
Fix IsStruct returning false for generic structs."
kg,2011-06-11 10:31:02,https://api.github.com/repos/sq/JSIL/git/commits/709f2a1951a9d65111cf722860d33d1c3c4dca07,709f2a1951a9d65111cf722860d33d1c3c4dca07,"Fix Translate(values, parameters) misaligning the parameter information when the first value is the this-reference"
kg,2011-06-11 09:55:45,https://api.github.com/repos/sq/JSIL/git/commits/e90de4a5e2308063c9c0f14e13633dbe7b4bcae0,e90de4a5e2308063c9c0f14e13633dbe7b4bcae0,Fix compiler-generated fields being ignored based on some local variable ignore rules
kg,2011-06-11 09:50:20,https://api.github.com/repos/sq/JSIL/git/commits/adc4f469273562f2f62f38077989c25f28150c94,adc4f469273562f2f62f38077989c25f28150c94,"Fix enum constants for flags enums containing an '| X' for every enum member 'X' with a value of 0.
Fix enum constants for flags enums not being wrapped in parentheses."
kg,2011-06-11 09:39:45,https://api.github.com/repos/sq/JSIL/git/commits/0a37e8835ca9e44480fbd74bbe209c00347ec195,0a37e8835ca9e44480fbd74bbe209c00347ec195,"Fix a few null reference exceptions in edge cases
Fix null constant field initializers causing an ambiguous overload exception"
kg,2011-06-11 09:29:46,https://api.github.com/repos/sq/JSIL/git/commits/851f5f8a4c1d860662739f32a34678d354875cdb,851f5f8a4c1d860662739f32a34678d354875cdb,Stop doing type substitution in the vast majority of cases.
kg,2011-06-11 09:17:42,https://api.github.com/repos/sq/JSIL/git/commits/ba866b3a9ef42e7d3eb828393cd556d6fcb2cd0f,ba866b3a9ef42e7d3eb828393cd556d6fcb2cd0f,Fix casting to/from open generic types
kg,2011-06-11 09:11:44,https://api.github.com/repos/sq/JSIL/git/commits/a382c26016baea7bd08dcb6ba4a2e50d7a2efc66,a382c26016baea7bd08dcb6ba4a2e50d7a2efc66,Fix child node replacement for switch statements
kg,2011-06-11 09:09:40,https://api.github.com/repos/sq/JSIL/git/commits/1f2cac87dbd69f60b9e027503dbbaa63c31009ba,1f2cac87dbd69f60b9e027503dbbaa63c31009ba,"Fix open generic types belonging to types being returned from methods
Removed ResolveGenericMethod as it is no longer needed
Fixed null reference exceptions when testing types without type definitions for enum-ness"
kg,2011-06-11 08:42:25,https://api.github.com/repos/sq/JSIL/git/commits/a8bad38bdf755fb8f664a7575518bb55ad145832,a8bad38bdf755fb8f664a7575518bb55ad145832,Fix type substitution logic when invoking a generic method using a generic parameter from a type
kg,2011-06-11 04:23:44,https://api.github.com/repos/sq/JSIL/git/commits/8d124e031362bf7809852f1c340c0c6fdafb94d0,8d124e031362bf7809852f1c340c0c6fdafb94d0,Add a test for generic structs
kg,2011-06-11 03:37:19,https://api.github.com/repos/sq/JSIL/git/commits/a92a6b705e36b9802b27522bc58929fe6f3afc7a,a92a6b705e36b9802b27522bc58929fe6f3afc7a,Fix handling of paths containing spaces
kg,2011-06-07 08:40:39,https://api.github.com/repos/sq/JSIL/git/commits/b302a2a3dfadebc5ba78e3ef5758d4bfabb0c506,b302a2a3dfadebc5ba78e3ef5758d4bfabb0c506,Updated website and added new logo
kg,2011-06-07 05:01:55,https://api.github.com/repos/sq/JSIL/git/commits/0bbbe67bfbbfbfc0c75a5888e240b72e65db4651,0bbbe67bfbbfbfc0c75a5888e240b72e65db4651,"Fix the do loop test
XNA3 color.toCss generates less garbage"
kg,2011-06-06 02:26:48,https://api.github.com/repos/sq/JSIL/git/commits/2a9183522ba5a1cce5f0693707bd0aa9a344654d,2a9183522ba5a1cce5f0693707bd0aa9a344654d,"Output a short version header at the top of each assembly file.
Add the website's source code."
kg,2011-06-05 22:41:45,https://api.github.com/repos/sq/JSIL/git/commits/4f5da2c9cbc54951d24a06a224267bf1081e4903,4f5da2c9cbc54951d24a06a224267bf1081e4903,Update to ILSpy head
kg,2011-06-05 19:44:15,https://api.github.com/repos/sq/JSIL/git/commits/e0591027fb6822ee2a1af6e3194c548af3c9b11c,e0591027fb6822ee2a1af6e3194c548af3c9b11c,Partial support for inheriting an open generic class (still kind of broken)
kg,2011-06-05 19:24:21,https://api.github.com/repos/sq/JSIL/git/commits/0c2327484e6e594e4780cd5239087ed09f44ed20,0c2327484e6e594e4780cd5239087ed09f44ed20,Support using a closed generic type as a base class
kg,2011-06-05 09:03:19,https://api.github.com/repos/sq/JSIL/git/commits/a24995c41d507b4e395da9711c93578a30bb6a6d,a24995c41d507b4e395da9711c93578a30bb6a6d,Add support for invoking static methods of generic types
kg,2011-06-05 08:51:19,https://api.github.com/repos/sq/JSIL/git/commits/6016ce3ee5121bd044187d022433f24c6d53f4f2,6016ce3ee5121bd044187d022433f24c6d53f4f2,Basic support for generic classes
kg,2011-06-04 23:27:32,https://api.github.com/repos/sq/JSIL/git/commits/84b4e437a950e6ac47f837266e3ae62bb8f845e0,84b4e437a950e6ac47f837266e3ae62bb8f845e0,Tweak XNACore's content manager so that it works now that generic methods are implemented
kg,2011-06-04 23:23:46,https://api.github.com/repos/sq/JSIL/git/commits/361b4545ed667b75e39ce560f0007d1088af0e84,361b4545ed667b75e39ce560f0007d1088af0e84,"Methods with generic arguments have their names mangled to distinguish them from non-generic methods
Overloaded methods where some of the overloads are generic methods and some are not now work correctly
Fix temporary elimination eliminating variables that are passed by reference"
kg,2011-06-04 22:22:13,https://api.github.com/repos/sq/JSIL/git/commits/82912c092f2985c5b899e3184104e9e3662f93df,82912c092f2985c5b899e3184104e9e3662f93df,Add support for simple generic methods
euphoria,2011-06-01 02:54:05,https://api.github.com/repos/sq/JSIL/git/commits/3b0e16bd4a771d340e26f6aba91b436fa6f6959b,3b0e16bd4a771d340e26f6aba91b436fa6f6959b,"Library cleanup for conformance

Fix use of reserved words 'char', 'byte', and 'long'
Avoid trailing comma, on which some tools choke"
kg,2011-06-01 14:30:21,https://api.github.com/repos/sq/JSIL/git/commits/3b955dc1aa72caea844e315a33a97c00a748ca94,3b955dc1aa72caea844e315a33a97c00a748ca94,"Use ActiveXObject to construct XHR instances in IE when running from file://, because native XHR in IE cannot load from disk
Drop the type equality cache"
kg,2011-06-01 14:26:12,https://api.github.com/repos/sq/JSIL/git/commits/8da98ccec3f02a3eee1f74233a06e56d26fd4816,8da98ccec3f02a3eee1f74233a06e56d26fd4816,"Type information construction performance improvements
List`1.Enumerator is faster"
kg,2011-06-01 03:33:46,https://api.github.com/repos/sq/JSIL/git/commits/eb0094d5cac38211d4944d9d17aaa714c54899f8,eb0094d5cac38211d4944d9d17aaa714c54899f8,"Fixed System.Drawing proxies
Suppress default behavior for keyDown/keyUp in-browser
Raytracer example works again"
kg,2011-05-31 23:34:52,https://api.github.com/repos/sq/JSIL/git/commits/aa47d36b2f1256dbfae9cf63a97ecb7a106c87a4,aa47d36b2f1256dbfae9cf63a97ecb7a106c87a4,"Stub out Function.prototype.bind if not available, so that Safari works.
Increase the load timeouts for sounds and fonts so that the error is not triggered on slow connections.
Always use native XMLHttpRequest (the ActiveX version is not actually necessary in IE9/IE10).
Tweak landing page."
kg,2011-05-31 12:59:28,https://api.github.com/repos/sq/JSIL/git/commits/a83ac12b5791eee7df905a62305326ce9623fad4,a83ac12b5791eee7df905a62305326ce9623fad4,Updated readme and platformer HTML
kg,2011-05-31 12:44:35,https://api.github.com/repos/sq/JSIL/git/commits/2a8c2ac3c683ff481cb9b26cfbb7f8fb11c5dc6e,2a8c2ac3c683ff481cb9b26cfbb7f8fb11c5dc6e,Various library updates to be compatible with broken versions of Google Chrome.
kg,2011-05-31 10:03:14,https://api.github.com/repos/sq/JSIL/git/commits/365e9fd51c924b955e0bebb750e3116ebedaa35f,365e9fd51c924b955e0bebb750e3116ebedaa35f,"Fixes to TimeSpan's accessors and StreamReader.ReadLine
Weak attempt to emulate color tinting in SpriteBatch"
kg,2011-05-31 09:07:45,https://api.github.com/repos/sq/JSIL/git/commits/5aea0ff70d05e457169f985d30f7bbd87bc2a27b,5aea0ff70d05e457169f985d30f7bbd87bc2a27b,"Ignored more native methods/types from the XNA libraries, so that System.Drawing and System.Windows.Forms aren't required."
kg,2011-05-31 08:43:14,https://api.github.com/repos/sq/JSIL/git/commits/f696134df5518cbbaceab439a6192e4903de9228,f696134df5518cbbaceab439a6192e4903de9228,"Fixed stobj when operating on an expression instead of a ref variable
Fixed enum->number and number->enum casts"
kg,2011-05-31 08:25:38,https://api.github.com/repos/sq/JSIL/git/commits/e9937cafa4a0090c0c36acb64ae151f539e81b00,e9937cafa4a0090c0c36acb64ae151f539e81b00,"Implement support for taking a reference to the return value of a function.
  This fixes the insane way C# writes into multidimensional struct arrays.
Clean up the semantics of variables that contain references a little.
Simplified the implementation of Enums and improved their support on the JS side (operators work on them now, though the result is no longer an Enum, just a Number)
Fixed JSRuntimeDispatch preventing the creation of method groups.
Fixed various proxies to work with the corrected runtime dispatch semantics"
kg,2011-05-30 12:55:05,https://api.github.com/repos/sq/JSIL/git/commits/c8b80743af824ea4351e267d42967e13dd100ad7,c8b80743af824ea4351e267d42967e13dd100ad7,Lots of stub and proxy improvements
kg,2011-05-30 12:12:47,https://api.github.com/repos/sq/JSIL/git/commits/455a06c063a1f33e89feccdbc7282fdf0ae27752,455a06c063a1f33e89feccdbc7282fdf0ae27752,"Fixed codegen for the String.Concat overloads that take a single array argument
Fixed Random.Next"
kg,2011-05-30 11:53:08,https://api.github.com/repos/sq/JSIL/git/commits/30af607bfd3f4af7370952e645c9f8322cf1ae68,30af607bfd3f4af7370952e645c9f8322cf1ae68,Checkpoint
kg,2011-05-30 10:30:52,https://api.github.com/repos/sq/JSIL/git/commits/a1218c6b2b6d8f36c679323406a75d1fe2aca38e,a1218c6b2b6d8f36c679323406a75d1fe2aca38e,"Fixed using char in switch statements
Checkpointing work on static analysis"
kg,2011-05-30 07:32:09,https://api.github.com/repos/sq/JSIL/git/commits/b9120cd6206edfd423d6faf7dc185a8b97f2027b,b9120cd6206edfd423d6faf7dc185a8b97f2027b,"Fixed do-while loop detection triggering incorrectly on loops that vaguely resembled do-while loops but did not precisely fulfill the criteria
Fixed AST traversal semantics when replacing the current node, by adding a VisitReplacement method that replaces the current node on the traversal stack
Fixed SimplifyOperators generating .toString calls on values of type System.Char"
kg,2011-05-30 06:47:28,https://api.github.com/repos/sq/JSIL/git/commits/ed9166f59ab00978eb83dc1b1294510fe042a076,ed9166f59ab00978eb83dc1b1294510fe042a076,"Refactored JSInvocationExpression so it explicitly specifies the type, method, this-reference, and arguments
JSDelegateInvocationExpression accepts the return type of the invocation instead of a reference to the invoke method, so that dynamic invokes can work despite not having an invoke method"
kg,2011-05-30 04:20:56,https://api.github.com/repos/sq/JSIL/git/commits/f3e0609f5b1d70d15e0cd2b9c4bb2aab928643a7,f3e0609f5b1d70d15e0cd2b9c4bb2aab928643a7,Transform while loops into do-while loops when possible
kg,2011-05-30 03:52:31,https://api.github.com/repos/sq/JSIL/git/commits/bd9897593b8591676ed436f3441958b7fed109f6,bd9897593b8591676ed436f3441958b7fed109f6,Checkpointing work on detecting function purity and escaping variables
kg,2011-05-30 03:15:31,https://api.github.com/repos/sq/JSIL/git/commits/15a74014281d431dc426c3518f1310720bcd5762,15a74014281d431dc426c3518f1310720bcd5762,Convert while loops into for loops when possible
kg,2011-05-30 02:13:10,https://api.github.com/repos/sq/JSIL/git/commits/a9eed3c6b38eaed61174b5c91e1cbabf896b4633,a9eed3c6b38eaed61174b5c91e1cbabf896b4633,"Turn String.Concat(a, b) into a binary add even if a or b are not strings
Fixed SimplifyOperators using VisitChildren when it should have used Visit"
kg,2011-05-30 02:04:57,https://api.github.com/repos/sq/JSIL/git/commits/aac2bd7007e17de9f7a14ae6ffb8052df6e5c834,aac2bd7007e17de9f7a14ae6ffb8052df6e5c834,Disable the type conversion check when eliminating temporaries since I don't think it's necessary anymore
kg,2011-05-30 02:01:58,https://api.github.com/repos/sq/JSIL/git/commits/8c56ae5502dd2f4e40ebadd3794531ec88571d3f,8c56ae5502dd2f4e40ebadd3794531ec88571d3f,Eliminate unused variables when eliminating temporaries
kg,2011-05-30 01:41:02,https://api.github.com/repos/sq/JSIL/git/commits/0af6cdd08bb39b26fc6adf578a23eb832a350434,0af6cdd08bb39b26fc6adf578a23eb832a350434,Checkpointing work on generalized static analysis
kg,2011-05-29 08:33:50,https://api.github.com/repos/sq/JSIL/git/commits/1fae5aa41493a21615cd9a7b3086779f75a37d91,1fae5aa41493a21615cd9a7b3086779f75a37d91,"Cache translated method bodies so that lambda expressions don't get retranslated every time they're used
Clear MemberIdentifier's proxy type cache when beginning translation of an assembly, so that the proxy list from a previous assembly is not erroneously used, and the list doesn't grow too much
Checkpointing the extraction of the flow analysis logic from EliminateSingleUseTemporaries into a reusable DataflowAnalyzer class
Clean up formatting for external members"
kg,2011-05-28 12:18:42,https://api.github.com/repos/sq/JSIL/git/commits/a63a9001b36e0acf1aace2509cbbf1ee7587a64d,a63a9001b36e0acf1aace2509cbbf1ee7587a64d,"JSIL.New detects being invoked on a native type (like string) and returns the value of the specified constructor
System.String's char-array constructors work now
Fixed ReadChars to return a valid char array
Use ReadBytes in ReadSingle/ReadDouble"
kg,2011-05-28 11:40:49,https://api.github.com/repos/sq/JSIL/git/commits/a98516fbf3fc3e3d51fa710f8e0cd73dffd889ee,a98516fbf3fc3e3d51fa710f8e0cd73dffd889ee,"Generate type sealing logic as a single initializer and always make it the last one
Handle newlines in JSIL.Browser's implementation of JSIL.Host.logWriteLine
Use array.shift() instead of array.pop() when pulling work items off of queues"
kg,2011-05-28 11:04:59,https://api.github.com/repos/sq/JSIL/git/commits/5cb3508e6db6d9359fe642b2a45d4182e6dfc650,5cb3508e6db6d9359fe642b2a45d4182e6dfc650,"Optimize System.Array's GetLength, GetUpperBound and GetLowerBound methods in the operator simplification pass so that they don't involve a runtime method call when invoked with constant arguments"
kg,2011-05-28 10:02:04,https://api.github.com/repos/sq/JSIL/git/commits/122aac06a877dc01a37cea9f31ea523e492727fa,122aac06a877dc01a37cea9f31ea523e492727fa,"Fix strict mode error in JSIL.Browser
Tweak log css"
kg,2011-05-28 09:58:31,https://api.github.com/repos/sq/JSIL/git/commits/1af2aee3ac1b73fdfc62f71eb6feecb05dbaefc6,1af2aee3ac1b73fdfc62f71eb6feecb05dbaefc6,Better formatting for arrays
kg,2011-05-28 09:48:46,https://api.github.com/repos/sq/JSIL/git/commits/5a4a4abfc2bfc1be917bd7a57931f002bc5d1195,5a4a4abfc2bfc1be917bd7a57931f002bc5d1195,Don't generate empty initializer functions for types without any overloads or properties
kg,2011-05-28 09:36:48,https://api.github.com/repos/sq/JSIL/git/commits/5457676fb0c3780dd25cd423060491cee3e64fe3,5457676fb0c3780dd25cd423060491cee3e64fe3,Try to recover the original names of fields that have mangled names
kg,2011-05-28 09:04:58,https://api.github.com/repos/sq/JSIL/git/commits/74f5e9d9925371ab69170dbadc2e3f7925aabadd,74f5e9d9925371ab69170dbadc2e3f7925aabadd,"Fix enum and char casts when references are involved
Work around the expected/inferred type of setter method calls being the type of the value being set instead of Void"
kg,2011-05-28 08:56:31,https://api.github.com/repos/sq/JSIL/git/commits/fca73d5aa80988fdb8c29fd7dcc91abcc6c29b14,fca73d5aa80988fdb8c29fd7dcc91abcc6c29b14,"Fixed EscapeCharacter using '\xFFFF' syntax for unicode chars when it should have been using '\uFFFF'
Improvements to ignored name rules
Expanded the chars test
Split the XNA stub out into XNA3.x and XNA4.x versions"
kg,2011-05-27 21:48:30,https://api.github.com/repos/sq/JSIL/git/commits/b440093a33eb23fef64bc1e78f29af424db6d86a,b440093a33eb23fef64bc1e78f29af424db6d86a,"Use asynchronous XHR
Write log messages as text nodes instead of appending them to a textarea, because large textarea contents crash IE9/IE10"
kg,2011-05-27 20:44:22,https://api.github.com/repos/sq/JSIL/git/commits/086c7f33e5d0dfb8a9e37acb6323b27cc81229d9,086c7f33e5d0dfb8a9e37acb6323b27cc81229d9,"Made the String.Concat proxies more precise in order to fix Concat(string, char)
Expanded the type casting logic for conversions between primitive types so that casts to char work correctly
Treat Cast, TryCast and CheckType as constant expressions if all of their arguments are constant
Ensure that a type cast is inserted when a local variable access implies one
Fixed type inference for JSNewExpression
Fixed IsDelegateType returning false for System.Delegate (whoops)
Fixed AreTypesAssignable returning false sometimes when the target type was object
Handle char <-> integer casts using String.fromCharCode and String.charCodeAt
Implement char literals
Fix character escaping behavior (javascript treats \x0000 as distinct from \x00)"
kg,2011-05-27 18:37:52,https://api.github.com/repos/sq/JSIL/git/commits/ffb4864fb32dd68419b3db1b65c19a3ca5b1686b,ffb4864fb32dd68419b3db1b65c19a3ca5b1686b,Fix using an enum as the condition of a switch statement
kg,2011-05-27 16:38:47,https://api.github.com/repos/sq/JSIL/git/commits/d0074c96a6a7d12b236be4f67e6b3dcbb7a57806,d0074c96a6a7d12b236be4f67e6b3dcbb7a57806,Work around some ridiculous bugs in Cecil that cause TypeDefinition.IsPrimitive to be wrong and randomly change their values when you access them. This fixes non-struct fields getting into the __StructFields__ list.
kg,2011-05-27 16:02:17,https://api.github.com/repos/sq/JSIL/git/commits/d32fbaa090bcf76b56e16c6973d5449a7a7e9be5,d32fbaa090bcf76b56e16c6973d5449a7a7e9be5,More tweaks
kg,2011-05-27 15:46:02,https://api.github.com/repos/sq/JSIL/git/commits/9d98380d591cb3406e3b6667e970b171f116ecfa,9d98380d591cb3406e3b6667e970b171f116ecfa,Fixes to keyboard input and rectangle implementations
kg,2011-05-27 15:20:47,https://api.github.com/repos/sq/JSIL/git/commits/e2f4fc6033a8581cf9b0b43a3259289e5969736f,e2f4fc6033a8581cf9b0b43a3259289e5969736f,"Fixed verbatim expressions producing bad JS when used inside binary/unary operator expressions
Added an initial formatting test for the output of switch statements on strings
Proxy tweaks"
kg,2011-05-27 14:31:17,https://api.github.com/repos/sq/JSIL/git/commits/6d3027e4f6af17e56de3871829d8cbcde44c962e,6d3027e4f6af17e56de3871829d8cbcde44c962e,"Disabled the struct pass-by-ref optimization because it was subtly breaking reference semantics
Fixed bug where a reference parameter could be 'dereferenced' into a non-ref parameter, breaking reference semantics
Fixed a couple bugs in JSIL.CopyMembers"
kg,2011-05-27 12:45:09,https://api.github.com/repos/sq/JSIL/git/commits/b33d2979b75f2088f70d6d36c7ae7321f3f5cbc0,b33d2979b75f2088f70d6d36c7ae7321f3f5cbc0,Don't do string concatenation in JSIL.New
kg,2011-05-27 12:36:03,https://api.github.com/repos/sq/JSIL/git/commits/5188224379b659933018367e074463f27ad168d5,5188224379b659933018367e074463f27ad168d5,Add workaround for chromium bug
kg,2011-05-27 12:26:15,https://api.github.com/repos/sq/JSIL/git/commits/81eafd26824a0bfb6235ff5a6bd23e86f1150cd6,81eafd26824a0bfb6235ff5a6bd23e86f1150cd6,"Store the struct field list as an array instead of an object so it's cheaper to iterate over
Sped up MultidimensionalArray._ComputeIndex
Optimize sealed types by replacing them with their raw value when possible
Fixed JSIL.New for structs"
kg,2011-05-27 11:34:42,https://api.github.com/repos/sq/JSIL/git/commits/e3087c727ae2955fc3350be24b3ef791c4b69186,e3087c727ae2955fc3350be24b3ef791c4b69186,Fix type sealing for private types
kg,2011-05-27 11:26:38,https://api.github.com/repos/sq/JSIL/git/commits/dbab716778bdd0ac2ff95651c00a03e70d4af0ce,dbab716778bdd0ac2ff95651c00a03e70d4af0ce,"Seal both the public and private versions of types instead of just the public version
Statically dispatch overloaded constructors using a helper function"
kg,2011-05-27 10:42:05,https://api.github.com/repos/sq/JSIL/git/commits/31af4723d66a6a08d2ce175bc35694449b3d9070,31af4723d66a6a08d2ce175bc35694449b3d9070,"Tweak timing logic
Don't bother trying to read image pixels when constructing a bitmap, since it's not used"
kg,2011-05-27 10:21:50,https://api.github.com/repos/sq/JSIL/git/commits/72e12a87bded3b187f719e4ce7d8dc427ed469cc,72e12a87bded3b187f719e4ce7d8dc427ed469cc,Use requestAnimationFrame when available instead of setTimeout
kg,2011-05-27 10:09:23,https://api.github.com/repos/sq/JSIL/git/commits/454328c9b55fdcc3d890013f99139760c8776fd3,454328c9b55fdcc3d890013f99139760c8776fd3,"Interface implementation correctly handles interface members inherited from parent classes
Proxy improvements"
kg,2011-05-27 08:58:56,https://api.github.com/repos/sq/JSIL/git/commits/9d9fc2f86ffae75e8bc86cb9a053deabd8617f3f,9d9fc2f86ffae75e8bc86cb9a053deabd8617f3f,More proxy improvements
kg,2011-05-27 08:43:59,https://api.github.com/repos/sq/JSIL/git/commits/7fe6116069ee2266009f547eb30030a33d7cff3b,7fe6116069ee2266009f547eb30030a33d7cff3b,"More proxy improvements
Mannux sample starts and runs"
kg,2011-05-27 08:05:39,https://api.github.com/repos/sq/JSIL/git/commits/540d724ded76a6b85d25c016a0c50e95c505d8e6,540d724ded76a6b85d25c016a0c50e95c505d8e6,"Implement delegate types as a special type instead of declaring them as classes derived from MulticastDelegate, so that overload resolution works correctly with them"
kg,2011-05-27 07:31:01,https://api.github.com/repos/sq/JSIL/git/commits/2b6422149dbda4a82876e8f07d00f95a5c1afbc8,2b6422149dbda4a82876e8f07d00f95a5c1afbc8,"Added a JSNeverInherit attribute so that you can override inheritability for specific proxy members
Proxy tweaks"
kg,2011-05-27 07:06:47,https://api.github.com/repos/sq/JSIL/git/commits/06a68052c7238f9c6e230309f95e1bebd82af295,06a68052c7238f9c6e230309f95e1bebd82af295,Proxy and bootstrap fixes
kg,2011-05-27 06:26:23,https://api.github.com/repos/sq/JSIL/git/commits/1240fce74f317993f8586451e052f97f7434e57f,1240fce74f317993f8586451e052f97f7434e57f,"Generate overload groups and property definitions for type stubs, but defer them into an initializer
More proxy updates"
kg,2011-05-27 04:16:50,https://api.github.com/repos/sq/JSIL/git/commits/66e8b0b5537f4eb2e86134180a6230b4a3cfa4a9,66e8b0b5537f4eb2e86134180a6230b4a3cfa4a9,"Detect attempts to index an array with an enum, since the CLR implicitly casts the enum to int in that case
When an external method is defined by a base class but not the target class, replace the method with a stub that emits a warning and then calls the base class method"
kg,2011-05-27 03:19:24,https://api.github.com/repos/sq/JSIL/git/commits/1585fdf6b4d7fb00caea550893f465bf449c67b9,1585fdf6b4d7fb00caea550893f465bf449c67b9,"Fix JSIL.IsArray in browsers that are finicky about __proto__
Stub improvements"
kg,2011-05-26 20:14:33,https://api.github.com/repos/sq/JSIL/git/commits/cdc155b1d0d9b0923d38cb8cf129875c80b66dc9,cdc155b1d0d9b0923d38cb8cf129875c80b66dc9,Proxy tweaks
kg,2011-05-26 19:33:20,https://api.github.com/repos/sq/JSIL/git/commits/c4cf1b5585433671229baeac6211c7da44725a47,c4cf1b5585433671229baeac6211c7da44725a47,Operators can be proxied now by using the proxy type as a stand-in for the actual type being proxied
kg,2011-05-26 18:40:07,https://api.github.com/repos/sq/JSIL/git/commits/9b855cd48a22fb8a8e1ad1ad46f9bd5778413346,9b855cd48a22fb8a8e1ad1ad46f9bd5778413346,"Proxy List<>.GetEnumerator and ArrayList.GetEnumerator
Added a ReplaceNone interface policy"
kg,2011-05-26 17:41:29,https://api.github.com/repos/sq/JSIL/git/commits/47132d805c1019e255abeb8cc8cf93893a45ea14,47132d805c1019e255abeb8cc8cf93893a45ea14,Handle IE10 strict mode error about redefining toString
kg,2011-05-26 17:38:34,https://api.github.com/repos/sq/JSIL/git/commits/f1e28253aa448b3c65f14062fbea73c13075dc5f,f1e28253aa448b3c65f14062fbea73c13075dc5f,"Store the interface list in type information and allow overriding it with proxies
More correctness fixes"
kg,2011-05-26 16:46:16,https://api.github.com/repos/sq/JSIL/git/commits/724df0a7bb0378fc38bff9225382b537c675aa14,724df0a7bb0378fc38bff9225382b537c675aa14,"Generate a unique name for each private namespace so that queued initializers reference the correct one
Type initialization correctness fixes"
kg,2011-05-26 14:52:14,https://api.github.com/repos/sq/JSIL/git/commits/bdd9445387f8dcc75ee79681a92a8ff269ba278e,bdd9445387f8dcc75ee79681a92a8ff269ba278e,"Fix open generic types not having their class definitions emitted in some cases
Various correctness fixes"
kg,2011-05-26 14:08:27,https://api.github.com/repos/sq/JSIL/git/commits/0aa2842d34edebc7efc81f309064844462c01cfe,0aa2842d34edebc7efc81f309064844462c01cfe,Attempt to handle private types by maintaining a 'private' global namespace for each assembly in parallel with the actual global namespace
kg,2011-05-26 12:11:25,https://api.github.com/repos/sq/JSIL/git/commits/5e2d339e432932ae42b0f3dac179493c4d7c4fa9,5e2d339e432932ae42b0f3dac179493c4d7c4fa9,"Recursively enumerate assembly dependencies
Some initial support for two-stage assembly initialization so that cyclical references between assemblies and types work
Generate external member placeholders more efficiently"
kg,2011-05-26 10:26:18,https://api.github.com/repos/sq/JSIL/git/commits/ccaae35a65fde799149ad7192b09659c7e1d371b,ccaae35a65fde799149ad7192b09659c7e1d371b,"Add support for translating an assembly in stub mode so that method bodies are not translated
Disable forward-declaring the types of struct members since it creates cyclical dependencies"
kg,2011-05-26 10:16:04,https://api.github.com/repos/sq/JSIL/git/commits/d04f790e257913167419ce84a367bcfcd1f2a723,d04f790e257913167419ce84a367bcfcd1f2a723,Add support for emitting assemblies without their method bodies by 'stubbing' them
kg,2011-05-26 09:19:09,https://api.github.com/repos/sq/JSIL/git/commits/c31ced1b43c55a1a07c06872a46a234dfff52f34,c31ced1b43c55a1a07c06872a46a234dfff52f34,Forward declare the types of struct fields
kg,2011-05-26 09:10:13,https://api.github.com/repos/sq/JSIL/git/commits/93b72d48e799e96daaffbb256f3409cf02831533,93b72d48e799e96daaffbb256f3409cf02831533,"If a type's base class is ignored, ignore the derived type as well"
kg,2011-05-26 04:49:01,https://api.github.com/repos/sq/JSIL/git/commits/0e2c3428b61c2f5a7c87b14bdedeeb0ccce5fbc2,0e2c3428b61c2f5a7c87b14bdedeeb0ccce5fbc2,"Correctness fixes to proxies
Fixed JSReplacement not working when the proxy's argument names did not match the argument names of the original method"
kg,2011-05-24 00:54:00,https://api.github.com/repos/sq/JSIL/git/commits/31e51d3ad6e92b449c4e007c726a23596683f1cb,31e51d3ad6e92b449c4e007c726a23596683f1cb,Properly eliminate the '!!' when using a reference to a boolean within an if statement
kg,2011-05-24 00:31:06,https://api.github.com/repos/sq/JSIL/git/commits/6cbbf8fccbb082714f8ddf9e568bd0db77bd6f3c,6cbbf8fccbb082714f8ddf9e568bd0db77bd6f3c,"Updated to latest ILSpy, minus a broken commit"
kg,2011-05-14 02:19:34,https://api.github.com/repos/sq/JSIL/git/commits/a9947d988af52d7ac47804d940e3547edba04860,a9947d988af52d7ac47804d940e3547edba04860,Implemented interface name prefixing for properties
kg,2011-05-13 22:11:02,https://api.github.com/repos/sq/JSIL/git/commits/ac1b7d8d7f4ac8e6106509750c9219591bd3e45a,ac1b7d8d7f4ac8e6106509750c9219591bd3e45a,Fixed pass-by-ref for members with escaped characters in their identifier
kg,2011-05-13 21:59:35,https://api.github.com/repos/sq/JSIL/git/commits/149c01604803e7d5f048f63a0f3c7ec098b34d69,149c01604803e7d5f048f63a0f3c7ec098b34d69,"Fix handling of ref parameters within nested lambdas
Fix mistaken TranslateField change"
kg,2011-05-13 21:59:07,https://api.github.com/repos/sq/JSIL/git/commits/86f455149a9c83ba5ba0070151b806834c7f5a6f,86f455149a9c83ba5ba0070151b806834c7f5a6f,Added a test for ref parameters in lambdas
kg,2011-05-13 21:45:34,https://api.github.com/repos/sq/JSIL/git/commits/cd80f892e34f7d32cd79f1de2b906848a87580bc,cd80f892e34f7d32cd79f1de2b906848a87580bc,"Fixed return type inference for nested method calls
Fixed GetTypeDeclaration for array types wrapped in optional/required modifiers
More compatibility fixes"
kg,2011-05-13 21:33:41,https://api.github.com/repos/sq/JSIL/git/commits/b2150fdf1ede6238182f609ad079b3fa617db68d,b2150fdf1ede6238182f609ad079b3fa617db68d,More compatibility fixes.
kg,2011-05-12 15:11:49,https://api.github.com/repos/sq/JSIL/git/commits/090e82f0d3760e61ca998fc1b2df69f2fcd6c602,090e82f0d3760e61ca998fc1b2df69f2fcd6c602,"Fixed various cases where try/catch blocks could interfere with temporary variable elimination
Reworked base property access again"
kg,2011-05-12 14:33:50,https://api.github.com/repos/sq/JSIL/git/commits/1943d35cd70e01987675698971a9ec28b617fa95,1943d35cd70e01987675698971a9ec28b617fa95,"Make the host.log/warn/error functions work more consistently across ie, firefox and chrome
Don't use a helper function for type initialization so we're a little less aggressive about eating stack frames"
kg,2011-05-11 14:00:53,https://api.github.com/repos/sq/JSIL/git/commits/8f2a08d24e2296c2742326e42c62507902b43cdf,8f2a08d24e2296c2742326e42c62507902b43cdf,"If all the methods in a method group are JSRuntimeDispatch, don't produce the overloaded method for it in emitted JS
Expanded bootstrapping library for System.Drawing
Made JSIL.Host.error dump stacks
Inlined the definitions of JSIL.Host.warning and JSIL.Host.logWriteLine"
kg,2011-05-11 12:54:13,https://api.github.com/repos/sq/JSIL/git/commits/64af7f2fc0cade127b7b1213e723130cb38c5b83,64af7f2fc0cade127b7b1213e723130cb38c5b83,"Fixed some JSIL.IsArray failure cases
Fixed JSIL.ExternalMember"
kg,2011-05-11 12:38:49,https://api.github.com/repos/sq/JSIL/git/commits/ea0bcd9767394470f919a38731db5d46981a913c,ea0bcd9767394470f919a38731db5d46981a913c,Fixed type inference for array literal nodes
kg,2011-05-11 12:12:40,https://api.github.com/repos/sq/JSIL/git/commits/7a435a1dc41313d038a494eac26aad329bbb4f04,7a435a1dc41313d038a494eac26aad329bbb4f04,"Trap open generic type exceptions produced by generic argument type substitution and abort translation of the current method
Fixed type inference for member reference expressions
Mark P/Invoke methods as external
Emit a verification check for external methods
Don't emit the external method check for methods with a replacement expression"
kg,2011-05-11 10:52:05,https://api.github.com/repos/sq/JSIL/git/commits/690b95d8da16e8973f50f9ce361a866710cdd1b8,690b95d8da16e8973f50f9ce361a866710cdd1b8,"Fixed ResolveGenericMethod not copying the generic method reference's properties
Resolve generic method references when translating ILAst nodes involving them"
kg,2011-05-11 10:30:51,https://api.github.com/repos/sq/JSIL/git/commits/249d5d6a52f331ce2565b35e1c57f6986d4802ee,249d5d6a52f331ce2565b35e1c57f6986d4802ee,"Switched to using TypeAnalysis.SubstituteTypeArgs where possible and eliminated ResolveGenericType since it's redundant
Created a distinct JS AST node type for delegate invocations since their semantics are different than regular invocations"
kg,2011-05-11 08:48:17,https://api.github.com/repos/sq/JSIL/git/commits/9441e3bf45fc76e436fa52a7ea12075aecc98be3,9441e3bf45fc76e436fa52a7ea12075aecc98be3,Pull new ILSpy fork
kg,2011-05-11 07:43:08,https://api.github.com/repos/sq/JSIL/git/commits/ae4d64d381f211961beb5f9700ccb2d1c7ce6f1b,ae4d64d381f211961beb5f9700ccb2d1c7ce6f1b,Performance improvements
kg,2011-05-11 06:57:55,https://api.github.com/repos/sq/JSIL/git/commits/4ede7486103f6d51b309067164d38b059955e51d,4ede7486103f6d51b309067164d38b059955e51d,"Stop using FullName for keying of types, since two types from different assemblies can have the same fullname
Cache MemberIdentifiers instead of constructing them on the fly for lookup purposes
Don't lookup proxied member metadata by name; look it up by identifier instead to avoid accidentally polluting members' metadata
Handle generic instance types when comparing member identifiers
Members are ignored if any of their parameter types are ignored, or if their return type is ignored. (This is really expensive, but it's necessary for correctness)
Initialize type information in two passes so that the overload lists can be built after full type information is available for all methods of a given type
Switch the meta, proxies and proxies.xna assemblies to build against .NET 3.5 so that they don't break translation of .NET 2.0/3.0/3.5 assemblies, since .NET 4 has a different mscorlib
Various proxy specificity fixes"
kg,2011-05-11 02:53:14,https://api.github.com/repos/sq/JSIL/git/commits/d23af9021e908bfdaf016d769647a595da2b53d9,d23af9021e908bfdaf016d769647a595da2b53d9,"Fixed cctors being decompiled twice
Fixed ignored members comparing as equal when they weren't"
kg,2011-05-11 02:44:51,https://api.github.com/repos/sq/JSIL/git/commits/f701a4909a8fe7671ef4c5eece9f90739bb2f9fa,f701a4909a8fe7671ef4c5eece9f90739bb2f9fa,Checkpoint
kg,2011-05-10 07:53:47,https://api.github.com/repos/sq/JSIL/git/commits/10ea815d72ac4d2d94438c0b08554b08cac621a4,10ea815d72ac4d2d94438c0b08554b08cac621a4,Checkpoint
kg,2011-05-10 05:07:23,https://api.github.com/repos/sq/JSIL/git/commits/af0d0bb7b9ef1052df26546d9c0e0211a72025be,af0d0bb7b9ef1052df26546d9c0e0211a72025be,"Don't factor in parameter count or return type in member information hashes, since it breaks their comparison behavior"
kg,2011-05-10 04:50:58,https://api.github.com/repos/sq/JSIL/git/commits/f65c8548c155fa0329494ea8a918a2c9169880b4,f65c8548c155fa0329494ea8a918a2c9169880b4,"Simplified naming rules for methods and properties
Fixed some problems with the proxies for integers/numbers"
kg,2011-05-10 04:20:30,https://api.github.com/repos/sq/JSIL/git/commits/f4727e71666577984a489b051df5958abe1b2add,f4727e71666577984a489b051df5958abe1b2add,"Implemented stind
More proxy compatibility fixes:
  Build method overload groups after applying proxy changes, so that proxies can be used to remove overloading
  Don't introduce instance members from proxy types into static types they're proxying"
kg,2011-05-10 03:37:56,https://api.github.com/repos/sq/JSIL/git/commits/c036a854653f52447e6ef5b31b71a4861916123c,c036a854653f52447e6ef5b31b71a4861916123c,"Handle ref parameters in proxy type resolution
Fixed the signature of the CompareExchange proxy"
kg,2011-05-10 03:04:35,https://api.github.com/repos/sq/JSIL/git/commits/21a1cf234ef2bc3b01b877e65e6ad2d206b6679f,21a1cf234ef2bc3b01b877e65e6ad2d206b6679f,Implemented support for argument references in the verbatim parser
kg,2011-05-10 02:20:00,https://api.github.com/repos/sq/JSIL/git/commits/8f20701290c2bea0152ed216d1a3731a4cec8ee7,8f20701290c2bea0152ed216d1a3731a4cec8ee7,Fix bug in codegen for some forms of 'x != null'
kg,2011-05-10 02:09:53,https://api.github.com/repos/sq/JSIL/git/commits/a2bff0b4c415b2d76b5d2e6b4bd9c7bf021c9c4d,a2bff0b4c415b2d76b5d2e6b4bd9c7bf021c9c4d,"Allow making a type proxy non-inheritable, so it only applies to the targeted type instead of types derived from that type
Fix some bugs in overloaded method dispatch"
kg,2011-05-10 01:39:52,https://api.github.com/repos/sq/JSIL/git/commits/ef8234279f88ccb475e28ccb293720475a0969dc,ef8234279f88ccb475e28ccb293720475a0969dc,"Detect directly-recursive overloaded method definitions, since they usually indicate a codegen bug"
kg,2011-05-10 01:18:39,https://api.github.com/repos/sq/JSIL/git/commits/45710325f4c9b8b9a1392dfeebab1c385deb43e1,45710325f4c9b8b9a1392dfeebab1c385deb43e1,Fix duplicate forward definitions of types
kg,2011-05-10 01:00:07,https://api.github.com/repos/sq/JSIL/git/commits/7563d63c7d3d1b4b95b0a76e78b89bc6119192b5,7563d63c7d3d1b4b95b0a76e78b89bc6119192b5,"Ensure a type has been forward-declared before using it in a method overload list
Add some more numeric types to bootstrap
Fixed increments/compound assignments to fields of this, and added test coverage for them"
kg,2011-05-10 00:40:40,https://api.github.com/repos/sq/JSIL/git/commits/bf414aadd94c939b0be87aa4fbc08c2458a58843,bf414aadd94c939b0be87aa4fbc08c2458a58843,Handle method invocations on expressions without an inferred type
kg,2011-05-10 00:36:34,https://api.github.com/repos/sq/JSIL/git/commits/34699c1fb8f911cede674f6dfb934c14b2c96554,34699c1fb8f911cede674f6dfb934c14b2c96554,"More compatibility fixes
Made FindParameterInContext and ResolveGenericType handle nested generics"
kg,2011-05-10 00:07:56,https://api.github.com/repos/sq/JSIL/git/commits/c4abaa300b32ec9517df77c576fbfc6194d6da5d,c4abaa300b32ec9517df77c576fbfc6194d6da5d,Centralized the logic for ignoring pointer types
kg,2011-05-09 23:56:37,https://api.github.com/repos/sq/JSIL/git/commits/ed6cb933201c519931b1abe5936ba82a637c73ef,ed6cb933201c519931b1abe5936ba82a637c73ef,Fix loads from fields of struct types to produce a reference
kg,2011-05-09 23:43:00,https://api.github.com/repos/sq/JSIL/git/commits/8db8e47171e4297270479818f494834f7e41e0a4,8db8e47171e4297270479818f494834f7e41e0a4,Generate runtime untranslatable expression error for is/as operators on unbound generic type parameters
kg,2011-05-09 23:38:29,https://api.github.com/repos/sq/JSIL/git/commits/8fb370b2f6b9abdd8a200695ef4c8bec22fdfccb,8fb370b2f6b9abdd8a200695ef4c8bec22fdfccb,Fixed exception when a JSVerbatimLiteral's this-variable got altered by local elimination
kg,2011-05-09 23:26:50,https://api.github.com/repos/sq/JSIL/git/commits/56e945de7dc660314e706081b7dba47bead47a37,56e945de7dc660314e706081b7dba47bead47a37,Fixed AnyParameterTypes not being defined
kg,2011-05-09 23:21:29,https://api.github.com/repos/sq/JSIL/git/commits/190a8340d820094dfbfed20b51b5a910f05ec8d8,190a8340d820094dfbfed20b51b5a910f05ec8d8,Handle cases where a single proxy member replaces multiple existing type members
kg,2011-05-09 23:16:45,https://api.github.com/repos/sq/JSIL/git/commits/406fec7f8a8b4168ffa60b3e6213e828f6003adf,406fec7f8a8b4168ffa60b3e6213e828f6003adf,Added NeverReplace attribute for excluding individual proxy members from a ReplaceDeclared proxy member policy
kg,2011-05-09 22:15:39,https://api.github.com/repos/sq/JSIL/git/commits/6c0c33813e066eec32ffb8a072cff520d2f1a808,6c0c33813e066eec32ffb8a072cff520d2f1a808,Expanded proxy infrastructure
kg,2011-05-09 21:45:49,https://api.github.com/repos/sq/JSIL/git/commits/62d315a05a559697e0b24cec5e4722dcb114ebea,62d315a05a559697e0b24cec5e4722dcb114ebea,"Added support for dynamically typed proxies via the AnyType stand-in type
Added JSExternal attribute for indicating that a method will be implemented by external javascript"
kg,2011-05-09 21:32:58,https://api.github.com/repos/sq/JSIL/git/commits/b05a58942c53db34732e9dd8f6cdbee094c50765,b05a58942c53db34732e9dd8f6cdbee094c50765,"Support overloaded properties/methods on type proxies, but ignore overloading when propagating attributes from proxy types"
kg,2011-05-09 21:15:29,https://api.github.com/repos/sq/JSIL/git/commits/410f99dbbd0ea6812901fa5cb769fe5e5d56903c,410f99dbbd0ea6812901fa5cb769fe5e5d56903c,Make constructed method signatures pretend to be nested in System.MulticastDelegate so they have a module
kg,2011-05-09 21:11:12,https://api.github.com/repos/sq/JSIL/git/commits/27b1e8a920b3ef036f08e27e12c244082cee7b78,27b1e8a920b3ef036f08e27e12c244082cee7b78,Implement member identifier comparison for fields
kg,2011-05-09 20:51:29,https://api.github.com/repos/sq/JSIL/git/commits/feff4240ac376c337f7682d1c9a707041f5efba9,feff4240ac376c337f7682d1c9a707041f5efba9,"Clone the interface list when deriving a class from another class
Only check the interface list in CheckType if the expected type is an interface"
kg,2011-05-09 19:42:27,https://api.github.com/repos/sq/JSIL/git/commits/7496dda8beed0e22409e4e866a3e0f56671d90e8,7496dda8beed0e22409e4e866a3e0f56671d90e8,"Fixed JSVerbatimLiteral this-references not counting in temporary elimination
Fixed JSReplacement leaving a trailing () in some cases when it shouldn't"
kg,2011-05-09 19:32:36,https://api.github.com/repos/sq/JSIL/git/commits/d2fec2da97952370fc796de91f9df326271571af,d2fec2da97952370fc796de91f9df326271571af,Fixed type information lookup for synthesized static constructors
kg,2011-05-09 19:27:10,https://api.github.com/repos/sq/JSIL/git/commits/6c2bcb7f5eb0552f538f9a149e5c90fea3d8aa9b,6c2bcb7f5eb0552f538f9a149e5c90fea3d8aa9b,"More type proxies
Fixed member lookup for references to generic parameters
Skip method info lookup for T[]::.ctor, since it will always fail
Fixed JSProxyMemberPolicy.ReplaceNone being ignored
Fixed TypesAreEqual for array, reference and pointer types
Fixed TypesAreAssignable for arrays
Fine tuned the rule for base property invocation"
kg,2011-05-09 18:59:41,https://api.github.com/repos/sq/JSIL/git/commits/9381cb45397177f50c022dec3e9d593104f3d5ce,9381cb45397177f50c022dec3e9d593104f3d5ce,Fixed return type inference for generic methods
kg,2011-05-09 18:35:04,https://api.github.com/repos/sq/JSIL/git/commits/560a2d47b7463d6cb6d42642672c763e8f6f378c,560a2d47b7463d6cb6d42642672c763e8f6f378c,"Fixed member lookup for properties and events (they could collide with fields)
Fixed base property invocation"
kg,2011-05-09 18:20:26,https://api.github.com/repos/sq/JSIL/git/commits/e38581e0e48183c0c6218600b70ccf70c8f6a845,e38581e0e48183c0c6218600b70ccf70c8f6a845,"Improved method information lookup for generic types/methods
Implemented PropertyInfo.GetName so interface properties are properly prefixed"
kg,2011-05-09 16:39:20,https://api.github.com/repos/sq/JSIL/git/commits/5e9412b60edb109eb08a6009d54d2481209fda1c,5e9412b60edb109eb08a6009d54d2481209fda1c,Checkpointing further work on proxies
kg,2011-05-09 16:04:41,https://api.github.com/repos/sq/JSIL/git/commits/8e1dac584abd7508e5adc623095ab3e34be8c5e1,8e1dac584abd7508e5adc623095ab3e34be8c5e1,Checkpointing more progress on type proxies
kg,2011-05-09 15:45:30,https://api.github.com/repos/sq/JSIL/git/commits/4572c2a5d4e8427a1787664f097ecb4f09d16d97,4572c2a5d4e8427a1787664f097ecb4f09d16d97,"Overhauled type information system
Basic support for type proxies"
kg,2011-05-09 09:57:32,https://api.github.com/repos/sq/JSIL/git/commits/78428288e15ce2cb8118dadfc1b944fcab823994,78428288e15ce2cb8118dadfc1b944fcab823994,Handle 'as' and 'is' for ignored interfaces by producing null/false
kg,2011-05-08 16:43:11,https://api.github.com/repos/sq/JSIL/git/commits/515426dc05b051a6e7d2453950b6fdcfb83daabc,515426dc05b051a6e7d2453950b6fdcfb83daabc,"Explicitly order overrides when assigning them indices
Split the bootstrapping type stubs out from the core runtime library"
kg,2011-05-08 14:09:08,https://api.github.com/repos/sq/JSIL/git/commits/9d91c97678485f48ca727d1f144ad3fc934f5f00,9d91c97678485f48ca727d1f144ad3fc934f5f00,"Fix unicode escape sequences
Tweak interface and overloading implementations"
kg,2011-05-08 13:28:13,https://api.github.com/repos/sq/JSIL/git/commits/86f57b5590eb9ff7be2dcc2b2a7eb032b1ffa517,86f57b5590eb9ff7be2dcc2b2a7eb032b1ffa517,Various adjustments to runtime library
kg,2011-05-08 12:33:13,https://api.github.com/repos/sq/JSIL/git/commits/f3da06e5cf3f37e1b1f69140797f2e5b1937069e,f3da06e5cf3f37e1b1f69140797f2e5b1937069e,Added simple load scaffolding for mannux example so it doesn't instantly hang broken browsers
kg,2011-05-08 12:13:44,https://api.github.com/repos/sq/JSIL/git/commits/83a91bb7911551d3ab892c56a8a74ead8bd07cdc,83a91bb7911551d3ab892c56a8a74ead8bd07cdc,"Solve the struct constructor problem with a solution that doesn't rely on single-function overload groups
Implement static constructors by using a temporary property getter that removes itself after first use
Don't move initialization of enum fields into the static constructor"
kg,2011-05-08 11:26:38,https://api.github.com/repos/sq/JSIL/git/commits/9cd57ec6f38cc156f7ee06242bdc630032ee8386,9cd57ec6f38cc156f7ee06242bdc630032ee8386,"Implement GetType on System.Object
Make the default implementations of Host.error/Host.warning work in Chrome instead of just Firefox"
kg,2011-05-08 11:04:42,https://api.github.com/repos/sq/JSIL/git/commits/bd086490fbe3e42dfe1dee1ff9b4c2e3931dcd54,bd086490fbe3e42dfe1dee1ff9b4c2e3931dcd54,Tweak type name logic
kg,2011-05-08 10:52:45,https://api.github.com/repos/sq/JSIL/git/commits/2e7b1c99641b30bc4410e1a13784751ab44a3b42,2e7b1c99641b30bc4410e1a13784751ab44a3b42,Use a helper function when defining properties
kg,2011-05-08 10:41:24,https://api.github.com/repos/sq/JSIL/git/commits/7875cfe65114c2c4e8abe0d43a79735d058860f0,7875cfe65114c2c4e8abe0d43a79735d058860f0,"Do type implementation with a static function instead of a method of Object, so that it works on things that don't inherit from object"
kg,2011-05-08 10:02:29,https://api.github.com/repos/sq/JSIL/git/commits/63a6e5708920fdefec571dcc6f00841e65b73895,63a6e5708920fdefec571dcc6f00841e65b73895,"Don't emit the .Of() part of type identifiers for generic types, since it doesn't do anything at present anyway
Change UntranslatableFunction to throw on invocation instead of throw on declaration
Change static constructor implementation to allow logging exceptions in static constructors instead of aborting (by overriding JSIL.Host.error, or running with firebug loaded)"
kg,2011-05-08 09:45:40,https://api.github.com/repos/sq/JSIL/git/commits/592b9f5c47cd10ef268301e6b1d60fddd7d10aad,592b9f5c47cd10ef268301e6b1d60fddd7d10aad,"When forward declaring a type, if its base class is contained within the assembly we're currently translating, ensure that the base class is declared first
Fix System.Drawing.Color's static fields to use a static constructor"
kg,2011-05-08 09:25:16,https://api.github.com/repos/sq/JSIL/git/commits/800f80c01ad44810170629ba5aadf81da40cecf0,800f80c01ad44810170629ba5aadf81da40cecf0,Treat duplicate definitions as warnings instead of errors
kg,2011-05-08 09:22:03,https://api.github.com/repos/sq/JSIL/git/commits/f018032e1f8153dec5bc26267ec20b4287e3f30e,f018032e1f8153dec5bc26267ec20b4287e3f30e,Wrap integer and number literals in parentheses when they participate in a dot expression
kg,2011-05-08 09:15:53,https://api.github.com/repos/sq/JSIL/git/commits/42c0c250193800526942a3102e08c7c148b6fcbf,42c0c250193800526942a3102e08c7c148b6fcbf,"Don't omit parentheses around assignments nested within other expressions, because it can cause a parse error
Expanded the reserved word list to include words reserved by spidermonkey"
kg,2011-05-08 09:07:21,https://api.github.com/repos/sq/JSIL/git/commits/73ba640af1cb59a2335e6cc17f0dcb8765564344,73ba640af1cb59a2335e6cc17f0dcb8765564344,"Fixed handling of by reference types (it turns out that ByReferenceType.GetElementType does the wrong thing)
Fixed MakeType not initializing type.__IsReferenceType__"
kg,2011-05-08 08:59:42,https://api.github.com/repos/sq/JSIL/git/commits/9536fcfec05c36d3acfc7427cc76d2cc535ac2bc,9536fcfec05c36d3acfc7427cc76d2cc535ac2bc,"Don't include ignored methods in method groups
Implement support for assigning to this inside a struct's constructors or methods"
kg,2011-05-08 08:10:14,https://api.github.com/repos/sq/JSIL/git/commits/5103e0d0f54050805fcb0db46bd488dc1c35a48f,5103e0d0f54050805fcb0db46bd488dc1c35a48f,Implement support for collection initializers outside of object initializers
kg,2011-05-08 07:52:18,https://api.github.com/repos/sq/JSIL/git/commits/170772cf026268e048cdadbe7c87826aa7b9452c,170772cf026268e048cdadbe7c87826aa7b9452c,Fix null reference exceptions in the ToString implementations of various node types
kg,2011-05-08 07:50:33,https://api.github.com/repos/sq/JSIL/git/commits/480b832808308b14546f64bdf402d769bec53958,480b832808308b14546f64bdf402d769bec53958,"Don't skip declaration introduction if a variable's first assignment is nested within another expression
Fix temporary elimination erroneously treating nested assignments as pure assignments instead of access assignments"
kg,2011-05-08 07:37:06,https://api.github.com/repos/sq/JSIL/git/commits/3a1b506ac2350d465331809ab416e6aa7e96b508,3a1b506ac2350d465331809ab416e6aa7e96b508,Generalize the mechanism used for translating typeof expressions so that it works when dealing with types stored in local variables
kg,2011-05-08 07:19:18,https://api.github.com/repos/sq/JSIL/git/commits/1f484902aace5b2abd48198d4b9b61fa0f902ee8,1f484902aace5b2abd48198d4b9b61fa0f902ee8,Improve the GetTypeFromHandle implementation
kg,2011-05-08 07:16:04,https://api.github.com/repos/sq/JSIL/git/commits/d55a7c0133f0b13284e2a8e4529cca3e8f696a52,d55a7c0133f0b13284e2a8e4529cca3e8f696a52,Fix type inference for JSType nodes so that their expected type is System.Type instead of the type they point to
kg,2011-05-08 07:03:07,https://api.github.com/repos/sq/JSIL/git/commits/a36283dec11462c1d2c57c19c388eee15abd7ae4,a36283dec11462c1d2c57c19c388eee15abd7ae4,Emit a warning when Monitor.Enter/Exit are used incorrectly
kg,2011-05-08 07:01:20,https://api.github.com/repos/sq/JSIL/git/commits/43ea4b8aad6c3097c8b97153b63a2e72556329ac,43ea4b8aad6c3097c8b97153b63a2e72556329ac,"Various fixes to ordering and semantics when dealing with static fields and static constructors
Fixed overload resolution when passing null for a reference type parameter"
kg,2011-05-08 04:03:42,https://api.github.com/repos/sq/JSIL/git/commits/b457029c4b8eb13688c9c52dc491162080bf8e0b,b457029c4b8eb13688c9c52dc491162080bf8e0b,Don't crash when comparing untranslatable instructions
kg,2011-05-08 04:01:03,https://api.github.com/repos/sq/JSIL/git/commits/37de08188cf86b845540edef8193019865e3f42a,37de08188cf86b845540edef8193019865e3f42a,Checkpointing work on mannux example
kg,2011-05-08 03:25:16,https://api.github.com/repos/sq/JSIL/git/commits/8dd2ccaf490cf4806f91de01fc67db8cd46eae6c,8dd2ccaf490cf4806f91de01fc67db8cd46eae6c,Moved bootstrap to a new libraries folder and renamed it
kg,2011-05-08 03:20:49,https://api.github.com/repos/sq/JSIL/git/commits/8b1de8bb47bcb4433655b49ab7605ed5069aea65,8b1de8bb47bcb4433655b49ab7605ed5069aea65,Check in some output for two examples
kg,2011-05-07 19:04:47,https://api.github.com/repos/sq/JSIL/git/commits/3698d2017263ff6b51f74705f6bef8f8b8264f51,3698d2017263ff6b51f74705f6bef8f8b8264f51,Simplified the code generation for cgt and isinst
kg,2011-05-07 18:49:13,https://api.github.com/repos/sq/JSIL/git/commits/ac6866b1c8af0a6cf552ca3506c4d48a931cabdf,ac6866b1c8af0a6cf552ca3506c4d48a931cabdf,"Temporary local elimination was ignoring the reference to z in 'x.y = z'
Ignore parameter list in a few visitors
Do struct assignment after temporary local elimination because that creates more opportunities for copy elimination"
kg,2011-05-07 18:30:01,https://api.github.com/repos/sq/JSIL/git/commits/fecb3b0bb8ae905985d93a4268297830062f47ba,fecb3b0bb8ae905985d93a4268297830062f47ba,"Flag the This parameter as constant
Make indirect variables constant if the variable they reference is constant
Use properties directly instead of invoking accessors in more cases"
kg,2011-05-07 17:53:03,https://api.github.com/repos/sq/JSIL/git/commits/cce64d1021c0b8e49334d1cdfffe989b07fb5928,cce64d1021c0b8e49334d1cdfffe989b07fb5928,Fix references to 'this' from inside value type members having the '.value' suffix emitted incorrectly
kg,2011-05-07 17:48:44,https://api.github.com/repos/sq/JSIL/git/commits/2a2f56b0709d11019a40cac5b6c171acb535b0fb,2a2f56b0709d11019a40cac5b6c171acb535b0fb,"If a non-ref struct parameter is only used once, omit the copy on that usage"
kg,2011-05-07 17:35:07,https://api.github.com/repos/sq/JSIL/git/commits/abe3de5e670c749acee1ddd697393a867535e133,abe3de5e670c749acee1ddd697393a867535e133,Tweak the line break heuristic for function calls
kg,2011-05-07 17:31:36,https://api.github.com/repos/sq/JSIL/git/commits/ba6e14b40dc75e69d363bda5e30156c3ffd9730e,ba6e14b40dc75e69d363bda5e30156c3ffd9730e,"When outputting nested logical operators, emit line breaks to make the JS more readable
For nested binary operator expressions that all share the same operator, the parentheses can be omitted"
kg,2011-05-07 17:17:45,https://api.github.com/repos/sq/JSIL/git/commits/128196a20f6acf82f40720a7b7360cdda55b77b8,128196a20f6acf82f40720a7b7360cdda55b77b8,"Correctness improvement to temporary elimination - when eliminating a temporary variable, if it previously aliased another variable, accesses to the temporary are now transferred to the aliased variable's access list so that it will not be erroneously eliminated later in the optimization pass"
kg,2011-05-07 17:08:08,https://api.github.com/repos/sq/JSIL/git/commits/bd6b011667521e9d9fc2a962da8edb16c60fbf3f,bd6b011667521e9d9fc2a962da8edb16c60fbf3f,"Unary and binary operator expressions are constant if all their contained values are constant
Expand the special case constant evaluation so that temporary elimination can act on more complex temporaries"
kg,2011-05-07 16:52:04,https://api.github.com/repos/sq/JSIL/git/commits/353f06ee72669f2a30aa36b3651a1cf93d053970,353f06ee72669f2a30aa36b3651a1cf93d053970,Remove the tuples from the temporary eliminator since they're unnecessary with statement indices
kg,2011-05-07 16:48:56,https://api.github.com/repos/sq/JSIL/git/commits/16db6c15ea6ba2d44e7fc370158b59e6e6cabe8c,16db6c15ea6ba2d44e7fc370158b59e6e6cabe8c,"JSAstVisitor maintains statement indices in addition to node indices
When doing variable elimination, use statement indices instead of node indices to perform usage analysis"
kg,2011-05-07 16:38:14,https://api.github.com/repos/sq/JSIL/git/commits/6c0ff18726d0642541ab06e7e0a8f6465a41a308,6c0ff18726d0642541ab06e7e0a8f6465a41a308,Fix cases where IntroduceVariableDeclarations would ignore assignments and introduce a declaration in the wrong place
kg,2011-05-07 16:32:40,https://api.github.com/repos/sq/JSIL/git/commits/79262048275b45f519de3e72910f857886909be8,79262048275b45f519de3e72910f857886909be8,Tweak JSChangeTypeExpression.New to not create a change type expression if the current and target types match (fixes more operator simplification cases)
kg,2011-05-07 16:28:33,https://api.github.com/repos/sq/JSIL/git/commits/e381db2e04dd2d739e31bea32c0417959c72144d,e381db2e04dd2d739e31bea32c0417959c72144d,"Moved operator simplification after temporary local elimination and reference introduction
Fixed JSChangeTypeExpressions not propagating the IsConstant attribute of the inner expression"
kg,2011-05-07 16:23:12,https://api.github.com/repos/sq/JSIL/git/commits/ea783475533a54881b25b2bb8956f2df690b38f9,ea783475533a54881b25b2bb8956f2df690b38f9,Also omit parentheses when a binary operator is the condition of a while loop or switch statement
kg,2011-05-07 16:21:06,https://api.github.com/repos/sq/JSIL/git/commits/cbd6899ff3847cdc38b0402d1e9924eeb2a80e05,cbd6899ff3847cdc38b0402d1e9924eeb2a80e05,"Fixed JSAstVisitor's ParentNode/CurrentNode members when a visitor does not use the VisitChildren method
Omit parens around binary operators that are contained within an if statement"
kg,2011-05-07 16:09:35,https://api.github.com/repos/sq/JSIL/git/commits/5aa86cb9ee24dc5d5650635b7e2c2be3e63ea4b7,5aa86cb9ee24dc5d5650635b7e2c2be3e63ea4b7,"Detect attempts to assign to the result of a binary operator (these usually indicate pointer arithmetic)
Fix escaping of backslashes in string literals
Always put parens around binary operators if they are enclosed in an unary operator
Translate expressions using the logical not operator to compare object references against null"
kg,2011-05-07 15:42:10,https://api.github.com/repos/sq/JSIL/git/commits/a99adba673da54f80cae55c39d9f40cf3917555a,a99adba673da54f80cae55c39d9f40cf3917555a,"Handle errors inside the ILSpy decompiler engine
Escape more characters in identifiers
Fix bug where namespace identifiers weren't escaped correctly
Use shorter escape sequences for ` < > : and ~
Handle try blocks that only have a fault block, no catch/finally
Fix JS generation for untranslatable instructions
If an expression's inferred or expected type is a pointer, don't translate it
Fixed escaping logic for reserved words"
kg,2011-05-07 14:17:11,https://api.github.com/repos/sq/JSIL/git/commits/4b87b8cef3384705cd824edc35b7ac0725252493,4b87b8cef3384705cd824edc35b7ac0725252493,"Emulate struct field semantics by storing a dictionary of them in a type's prototype, and using that to properly create/copy them when creating or copying an object instance"
kg,2011-05-07 13:24:44,https://api.github.com/repos/sq/JSIL/git/commits/d65b9a102b509cc5ff66b0ad120de027306be8a3,d65b9a102b509cc5ff66b0ad120de027306be8a3,Replace use of DLR dispatch in JSAstVisitor with a custom visitor cache to improve performance
kg,2011-05-07 12:33:52,https://api.github.com/repos/sq/JSIL/git/commits/58bcc820e3dbe0a9a5530050ca43654135ee1e7c,58bcc820e3dbe0a9a5530050ca43654135ee1e7c,"Implemented some more miscellaneous instructions
Extended reference-on-return semantics to all value types instead of just structs, since that seems to be correct"
kg,2011-05-07 12:24:41,https://api.github.com/repos/sq/JSIL/git/commits/e36e13fe431c600dfb7b69f559eb9e7d838dfbe1,e36e13fe431c600dfb7b69f559eb9e7d838dfbe1,"Compatibility fixes for object initializers
Handle cases where the disassembled IL contains multiple variables sharing a single name (WTF :|)"
kg,2011-05-07 11:56:31,https://api.github.com/repos/sq/JSIL/git/commits/db5854a70c89da899bff3d1d27f97bb40f1a1e73,db5854a70c89da899bff3d1d27f97bb40f1a1e73,Correct the semantics of properties/methods returning structs
kg,2011-05-07 11:49:56,https://api.github.com/repos/sq/JSIL/git/commits/7e7103cb656e4890b647393e5669698479d97853,7e7103cb656e4890b647393e5669698479d97853,"Represent untranslatable expressions/statements in the AST as specialized null nodes instead of constructing actual invocations, so that type inference mechanisms are not confused"
kg,2011-05-07 11:37:07,https://api.github.com/repos/sq/JSIL/git/commits/13efc166c92d2d6025e250546d2f6b818b86d9bd,13efc166c92d2d6025e250546d2f6b818b86d9bd,"Ignore entire methods if any of their locals are pointers
Abort translation when encountering a fixed statement or the arglist/localloc instructions
Implemented property support for object initializers"
kg,2011-05-07 11:17:30,https://api.github.com/repos/sq/JSIL/git/commits/e98b4ef65b4ab90ff4676e7ec2482943eb1438a0,e98b4ef65b4ab90ff4676e7ec2482943eb1438a0,"Made ConstructDelegateType more robust
Improvements to the type inference system's handling of delegates and methods"
kg,2011-05-07 10:18:31,https://api.github.com/repos/sq/JSIL/git/commits/3059d99b97dba7f53b1a44462a511e4ad07a12a5,3059d99b97dba7f53b1a44462a511e4ad07a12a5,"Fixed JS test timing implementation
Updated spidermonkey"
kg,2011-05-07 09:50:05,https://api.github.com/repos/sq/JSIL/git/commits/077d331baad108b6cd86c505dee8885199279933,077d331baad108b6cd86c505dee8885199279933,Seal classes and their prototypes after construction for correctness verification
kg,2011-05-07 08:27:54,https://api.github.com/repos/sq/JSIL/git/commits/3b4a131a5370d293452ba5391556af4419d873d4,3b4a131a5370d293452ba5391556af4419d873d4,"Fixed a bug in the way nested blocks were handled in a function that used goto
Compiler-generated iterator functions translate correctly now"
kg,2011-05-07 08:16:36,https://api.github.com/repos/sq/JSIL/git/commits/ab453aaac5870a70672bffff0837eb2f76eebb4f,ab453aaac5870a70672bffff0837eb2f76eebb4f,Overhauled naming rules for methods and properties to be more consistent
kg,2011-05-07 07:27:23,https://api.github.com/repos/sq/JSIL/git/commits/b9a03105d5f662e209c6698f3ef126f187b27423,b9a03105d5f662e209c6698f3ef126f187b27423,Basic support for goto implemented
kg,2011-05-07 05:41:21,https://api.github.com/repos/sq/JSIL/git/commits/277e3a59d7e3005bd1603f6361a56cb50f5e72ee,277e3a59d7e3005bd1603f6361a56cb50f5e72ee,Simplified implementation of labels
kg,2011-05-07 04:24:05,https://api.github.com/repos/sq/JSIL/git/commits/10abac32c35147dda38ce1952583acb7cb74e5af,10abac32c35147dda38ce1952583acb7cb74e5af,Formatting improvements when outputting verbatim expressions
kg,2011-05-07 04:18:37,https://api.github.com/repos/sq/JSIL/git/commits/4214fbe9a18699b2a389640d42db963d5cc47063,4214fbe9a18699b2a389640d42db963d5cc47063,"Improvements to temporary eliminator's constant analysis:
  Assignments are stored as node index intervals instead of the index of the first node, to account for mutation reassignments like 'x = (x + 1)'
  Indexer and Array expressions are treated as constant if all their elements are effectively constant"
kg,2011-05-07 04:00:45,https://api.github.com/repos/sq/JSIL/git/commits/786287112040b067362052f6a311914d827f4585,786287112040b067362052f6a311914d827f4585,"Correctness fixes to temporary variable elimination when a temporary variable aliases another variable that gets reassigned
JSVariable.IsConstant is false now
When introducing declarations, if possible the declaration is introduced at the point where a variable is first assigned"
kg,2011-05-07 03:21:09,https://api.github.com/repos/sq/JSIL/git/commits/52ca4570197c62ceb57e28f79e843fcca4f73746,52ca4570197c62ceb57e28f79e843fcca4f73746,Fixed cases where single use temporaries would be eliminated even though their value could be dependent on the state of the program
kg,2011-05-07 02:33:25,https://api.github.com/repos/sq/JSIL/git/commits/29232945c7acff39781342cb8097c3aacc8b3020,29232945c7acff39781342cb8097c3aacc8b3020,Fix the heuristic for surrounding function expressions with parens
kg,2011-05-07 02:28:27,https://api.github.com/repos/sq/JSIL/git/commits/df581def5d0815c3214002fe5c410acf9d6b9955,df581def5d0815c3214002fe5c410acf9d6b9955,"Don't blow up when confronted with a method that has more than 8 parameters
Don't generate the JSIL.NewArray(...) invocation when constructing a temporary array of type Object[], since the array literal will do fine"
kg,2011-05-07 02:19:57,https://api.github.com/repos/sq/JSIL/git/commits/1cbb3c06ec3aefe557f5034b2f54d3d6a5ebc185,1cbb3c06ec3aefe557f5034b2f54d3d6a5ebc185,"Partial support for lambdas that close over variables (the function part of them is translated, but not the variables part)"
kg,2011-05-07 01:57:21,https://api.github.com/repos/sq/JSIL/git/commits/b48de0febb2bdae9b0523c23b8dcacc134735a4d,b48de0febb2bdae9b0523c23b8dcacc134735a4d,Fix type inference for invocation expressions targeting delegates
kg,2011-05-07 01:38:53,https://api.github.com/repos/sq/JSIL/git/commits/83109ede0d4daff08eb034276ea33fc53c670dcc,83109ede0d4daff08eb034276ea33fc53c670dcc,"Lambdas that don't close over any values are translated into function expressions
Fixed EliminateSingleUseTemporaries and IntroduceVariableDeclarations' behavior when they encounter a nested function expression
SimplifyOperators turns Delegate.Invoke into a regular invocation
Tweaked the Delegate/MulticastDelegate implementations to handle being passed a regular function instead of a delegate instance"
kg,2011-05-06 14:18:23,https://api.github.com/repos/sq/JSIL/git/commits/fd6e1c3de4a7a0b548b7c83a1cb4faf338fe3081,fd6e1c3de4a7a0b548b7c83a1cb4faf338fe3081,"Fix incorrect definitions of JSReturnExpression and JSThrowExpression (they weren't passing their values to the base class, so they got ignored by optimization passes)
Return null when asked for type information for an unbound generic argument, instead of throwing
Fixed type inference logic for pointer arithmetic
Compatibility fixes for EliminateSingleUseTemporaries
Fix cases where the property accessor call transform failed to identify the type of property access being performed"
kg,2011-05-06 13:05:42,https://api.github.com/repos/sq/JSIL/git/commits/3d2e239d6ee4a0982552f612729fe130edd2fc5e,3d2e239d6ee4a0982552f612729fe130edd2fc5e,"Added a virtual IsConstant property to JSExpression, so that SimplifyOperators can identify constant expressions that aren't variables (like var.x or var[this.y])"
kg,2011-05-06 13:00:36,https://api.github.com/repos/sq/JSIL/git/commits/eddac9898c7335f5fdf3425f6949e6e56893d276,eddac9898c7335f5fdf3425f6949e6e56893d276,Update the examples to build against new verbatim syntax
kg,2011-05-06 12:51:41,https://api.github.com/repos/sq/JSIL/git/commits/4f4c3a0ecf3797450c9017b2e60bcd551b73a748,4f4c3a0ecf3797450c9017b2e60bcd551b73a748,"Fixed temporary elimination being broken when tracelevel is 0
Fixed some dynamic call site expressions having a type of Object when their type should have been a more specific one"
kg,2011-05-06 12:41:38,https://api.github.com/repos/sq/JSIL/git/commits/4fc8d046e0fd2167c67981b13d2f2130abac7405,4fc8d046e0fd2167c67981b13d2f2130abac7405,"JSAstVisitor now provides information on the state of the visitor in protected fields
Implement ToString for various node types
Eliminate local variables that are assigned once and then used once by moving their initialization value to their single usage point"
kg,2011-05-06 09:45:10,https://api.github.com/repos/sq/JSIL/git/commits/ba85cd54d0d5b2cd0c1719e35bc149f04dc98938,ba85cd54d0d5b2cd0c1719e35bc149f04dc98938,"More robust comparison logic in JSNode.Equals / JSIdentifier.Equals
Added simple optimization of binary and unary operators:
  !(!(x)) -> (x)
  !!(boolean) -> (boolean)
  !(x comparison y) -> (x !comparison y)
  x = (x + 1) -> (++x)
  x = (x * 2) -> (x *= 2)
  String.Concat(str, str, ...) -> (str + str + ...)"
kg,2011-05-06 07:15:25,https://api.github.com/repos/sq/JSIL/git/commits/bc177477cbb9f08a39481814339f09fbe0180a69,bc177477cbb9f08a39481814339f09fbe0180a69,Make the BuiltinThis test clearer
kg,2011-05-06 07:13:04,https://api.github.com/repos/sq/JSIL/git/commits/4fe452e827bac4e7d8d9527f133a73d407441630,4fe452e827bac4e7d8d9527f133a73d407441630,"Added a Local scope proxy to JSIL.Builtins
Added a This member to JSIL.Builtins that evaluates to the current JS this-reference"
kg,2011-05-06 06:56:06,https://api.github.com/repos/sq/JSIL/git/commits/2a53f61ec5f762c6f2cc3f120c2b86852e8ddb20,2a53f61ec5f762c6f2cc3f120c2b86852e8ddb20,"Dynamic GetIndex, SetIndex, Invoke and UnaryOperation call sites are now implemented
TypeInformation is now cached on a unique type basis, which means that each unique instance of a generic type has its own type information cache
Local variable declarations are not introduced for local variables of ignored types
JSIL.Builtins.Global provides dynamic access to the javascript global namespace"
kg,2011-05-06 06:14:05,https://api.github.com/repos/sq/JSIL/git/commits/e338b48ab06dc6be35aedb2299bad7f6a281d9a0,e338b48ab06dc6be35aedb2299bad7f6a281d9a0,"JSIL.Meta now contains a Builtins static class with members representing javascript builtin functions like eval
JSIL.Verbatim.Eval renamed to JSIL.Verbatim.Expression to be clearer"
kg,2011-05-06 05:39:52,https://api.github.com/repos/sq/JSIL/git/commits/599e97a215936d3919413ade8e3a9fc0cdae75c6,599e97a215936d3919413ade8e3a9fc0cdae75c6,Simplified the JSIgnore tests
kg,2011-05-06 05:36:38,https://api.github.com/repos/sq/JSIL/git/commits/bc98e851048e4deb24fe2477dbe880c57c56fb5e,bc98e851048e4deb24fe2477dbe880c57c56fb5e,"JSIgnore works on constructors now
Error expression generated for ignored method/constructor invocations includes the argument list"
kg,2011-05-06 05:26:35,https://api.github.com/repos/sq/JSIL/git/commits/b07be27558ba047f1843febb8a42d0a3f78c5286,b07be27558ba047f1843febb8a42d0a3f78c5286,"Centralized member/type ignoring logic
JSIgnore works on events now"
kg,2011-05-06 01:34:42,https://api.github.com/repos/sq/JSIL/git/commits/780b0028c791d19025d6798ee2176ac300e116fd,780b0028c791d19025d6798ee2176ac300e116fd,"Include properties in interface definitions
Failed generic parameter resolves don't throw"
kg,2011-05-06 01:17:19,https://api.github.com/repos/sq/JSIL/git/commits/9ac7f2a67eb72ff30ad2eb466d4f881a012cccc5,9ac7f2a67eb72ff30ad2eb466d4f881a012cccc5,Improve detection of cases where unqualified method invocation and property access can occur
kg,2011-05-05 13:52:48,https://api.github.com/repos/sq/JSIL/git/commits/db931c0b5a58e2d262c6dda2c39ed791a55d0abb,db931c0b5a58e2d262c6dda2c39ed791a55d0abb,"Methods accepting a pointer as a parameter are automatically ignored during translation
Unboxing a struct produces a reference
Correct type information for calls to base type methods (JS.call was always presenting a type of Object)"
kg,2011-05-05 13:33:30,https://api.github.com/repos/sq/JSIL/git/commits/20654b5d67cc6763954be191b5fd081d846434a5,20654b5d67cc6763954be191b5fd081d846434a5,"Implement TryDereference for binary assignment expressions by trying to dereference the right hand side
More compatibility fixes"
kg,2011-05-05 13:07:17,https://api.github.com/repos/sq/JSIL/git/commits/ac991adfdecd3cf09be4850eaaedadde6d043e94,ac991adfdecd3cf09be4850eaaedadde6d043e94,Compatibility fixes
kg,2011-05-05 12:41:20,https://api.github.com/repos/sq/JSIL/git/commits/5875e72cae87ba9fa7d998a1dafe5c981612c52c,5875e72cae87ba9fa7d998a1dafe5c981612c52c,"Don't assume that .GetElementType will do nothing on non-reference types
Generate an error expression when encountering pointer dereferences"
kg,2011-05-05 12:01:20,https://api.github.com/repos/sq/JSIL/git/commits/b5f6cb778c0d397c5123ffac82962badc4134eaa,b5f6cb778c0d397c5123ffac82962badc4134eaa,"Emit a comment inside the argument list of functions to tag ref parameters
Use JS property syntax for static properties in addition to instance properties"
kg,2011-05-05 11:52:10,https://api.github.com/repos/sq/JSIL/git/commits/1ee685a27eaaa51a649c5e8395455110b5d047dd,1ee685a27eaaa51a649c5e8395455110b5d047dd,"GetMember, SetMember, BinaryOperation and Convert dynamic invocation types implemented
Fixed Translate_InitializedObject's implementation so that it produces a valid expression"
kg,2011-05-05 11:23:52,https://api.github.com/repos/sq/JSIL/git/commits/559cab3ce5eccfc3a2677daaaac9b57624c80f28,559cab3ce5eccfc3a2677daaaac9b57624c80f28,"Don't use x.y.call(x) form for dynamic invocations, since it's meaningless"
kg,2011-05-05 11:22:20,https://api.github.com/repos/sq/JSIL/git/commits/f0957100b76e9447d6ab65b2cce1c9e109589e71,f0957100b76e9447d6ab65b2cce1c9e109589e71,Dynamic method invocations work even if the call site is stored in a temporary local
kg,2011-05-05 11:05:22,https://api.github.com/repos/sq/JSIL/git/commits/f74747e7de360772c7a0968c33f7c454fd2fb89f,f74747e7de360772c7a0968c33f7c454fd2fb89f,DynamicOverloadedMethods passes now
kg,2011-05-05 10:24:58,https://api.github.com/repos/sq/JSIL/git/commits/0fff4bea4b2201d4a2c7ddf2664644d3e6c77686,0fff4bea4b2201d4a2c7ddf2664644d3e6c77686,Basic support for switch statements and labels.
kg,2011-05-05 09:59:30,https://api.github.com/repos/sq/JSIL/git/commits/e87dad8c5e779db7ccf0ee87de075b5c3772728b,e87dad8c5e779db7ccf0ee87de075b5c3772728b,Emit constant-initialized fields as immutable data properties
kg,2011-05-05 09:43:43,https://api.github.com/repos/sq/JSIL/git/commits/b81a4b07fbc7e06d778ca311a7743e3757ef6f93,b81a4b07fbc7e06d778ca311a7743e3757ef6f93,Exclude /= from translation since it has different truncation semantics
kg,2011-05-05 09:37:41,https://api.github.com/repos/sq/JSIL/git/commits/1c04d1fb2d5b1d1b62d2cbc646e953d6ca46f1d3,1c04d1fb2d5b1d1b62d2cbc646e953d6ca46f1d3,Eliminate unnecessary casts on numeric types
kg,2011-05-05 09:31:21,https://api.github.com/repos/sq/JSIL/git/commits/907820df6d61151d6a1b5bf6a492905460d812a4,907820df6d61151d6a1b5bf6a492905460d812a4,Compound assignment and ternary operators are implemented
kg,2011-05-05 09:14:54,https://api.github.com/repos/sq/JSIL/git/commits/3e5efb24d8b6fc5b356a8db2a91356b25eabfb10,3e5efb24d8b6fc5b356a8db2a91356b25eabfb10,Emit bool default values
kg,2011-05-05 09:13:42,https://api.github.com/repos/sq/JSIL/git/commits/893c9bc904e060d2ac5bbece649b857e469a193d,893c9bc904e060d2ac5bbece649b857e469a193d,"JSField and JSMethod expressions resolve to concrete types where possible when they point to generic fields/methods
Integer division semantics are preserved by use of Math.floor"
kg,2011-05-05 08:49:12,https://api.github.com/repos/sq/JSIL/git/commits/1658b40eb6830e0e966729c93027938a8f19e7d6,1658b40eb6830e0e966729c93027938a8f19e7d6,"Where possible, rely on the JS property mechanism to access properties instead of invoking accessors"
kg,2011-05-05 08:25:06,https://api.github.com/repos/sq/JSIL/git/commits/80b04b2237ab9b89563674a3bf31cd46c3c02ba5,80b04b2237ab9b89563674a3bf31cd46c3c02ba5,Better support for some of the meta-attributes
kg,2011-05-05 08:13:32,https://api.github.com/repos/sq/JSIL/git/commits/917f0fb80c47de59cd7529586a1b0e310026a1eb,917f0fb80c47de59cd7529586a1b0e310026a1eb,"Wow, how did I not notice I forgot to rename the test case?"
kg,2011-05-05 08:12:07,https://api.github.com/repos/sq/JSIL/git/commits/42646234475758b4bdf88486ef94ca4cc12086fc,42646234475758b4bdf88486ef94ca4cc12086fc,"Basic support for decimals, using a struct containing a single double"
kg,2011-05-05 08:04:16,https://api.github.com/repos/sq/JSIL/git/commits/efbf7540b995b11b1deae80f040b54e02e5ac59e,efbf7540b995b11b1deae80f040b54e02e5ac59e,"Partial implementation of dynamic call site support
Partial implementation of flags enum support
Chained C# else ifs no longer emit nested JS ifs
Formatting improvements"
kg,2011-05-05 03:37:49,https://api.github.com/repos/sq/JSIL/git/commits/6ebb9a3191937d179684af1e2a2975ed1ff1c4a4,6ebb9a3191937d179684af1e2a2975ed1ff1c4a4,Passing parameters and local variables by reference fully implemented
kg,2011-05-05 03:27:49,https://api.github.com/repos/sq/JSIL/git/commits/61502ab3b600a6aa97d9256b3d1d3a1654352826,61502ab3b600a6aa97d9256b3d1d3a1654352826,Fixed some errors introduced by variable indirection
kg,2011-05-05 03:21:32,https://api.github.com/repos/sq/JSIL/git/commits/6d3331398cddedfdd5d2fa19b971f17034a39bca,6d3331398cddedfdd5d2fa19b971f17034a39bca,Added local variable indirection (through the new JSIndirectVariable type) to allow redefinition of variables by IntroduceVariableReferences.
kg,2011-05-05 03:01:23,https://api.github.com/repos/sq/JSIL/git/commits/ded83e6f48808ef4a5ce2b6315d01a02be31d55f,ded83e6f48808ef4a5ce2b6315d01a02be31d55f,Passing structs by ref works now
kg,2011-05-05 02:48:05,https://api.github.com/repos/sq/JSIL/git/commits/69e6febea097b2058f73154728f8a073dc504cc3,69e6febea097b2058f73154728f8a073dc504cc3,"Checkpointing work on variable reference transform
Fixed JSThisParameter.Dereference
JSParameter and JSThisParameter's Dereference/Reference methods will return a JSParameter/JSThisParameter instead of a constructed JSVariable"
kg,2011-05-05 02:08:22,https://api.github.com/repos/sq/JSIL/git/commits/9217293c3cea1155fe44fa7a73ea05be73795131,9217293c3cea1155fe44fa7a73ea05be73795131,"Local variables and parameters now always have one JSVariable associated with them, and the 'this' hidden parameter is of a special type, JSThisParameter
IL catch clauses generate variable declarations instead of assignments
JS catch clause variables are treated as variable declarations by the IntroduceVariableDeclarations transform"
kg,2011-05-05 01:35:05,https://api.github.com/repos/sq/JSIL/git/commits/f7c905e3f49e4093f099f9772ea5f17b82f73826,f7c905e3f49e4093f099f9772ea5f17b82f73826,Struct assignment semantics implemented
kg,2011-05-05 01:04:18,https://api.github.com/repos/sq/JSIL/git/commits/ab73c726a19dd6d6e6892ab4ae5057c46c1b2294,ab73c726a19dd6d6e6892ab4ae5057c46c1b2294,Accesses to fields of structs now properly dereference the struct's 'this' reference
kg,2011-05-05 00:59:01,https://api.github.com/repos/sq/JSIL/git/commits/50a71cc4276dc91ceb5fc508fe23f3cf69428acc,50a71cc4276dc91ceb5fc508fe23f3cf69428acc,Better comment formatting
kg,2011-05-05 00:57:55,https://api.github.com/repos/sq/JSIL/git/commits/d17431a55fb542c9f23bbf4b03b2de08cca10558,d17431a55fb542c9f23bbf4b03b2de08cca10558,"Namespaced types and nested namespaces are now implemented correctly
Added missing implementation of IEnumerator.Reset in JSIL.ArrayEnumerator
__ImplementInterface__ now ensures that all interface members are actually implemented
MakeType, MakeInterface and MakeEnum attempt to detect duplicate definitions"
kg,2011-05-05 00:28:26,https://api.github.com/repos/sq/JSIL/git/commits/ec1c25cae4b1a3537171dbce65307b8bdec7b0c4,ec1c25cae4b1a3537171dbce65307b8bdec7b0c4,Properly detect catch (System.Object) { } as equivalent to catch { }
kg,2011-05-05 00:24:58,https://api.github.com/repos/sq/JSIL/git/commits/2f18ef5da74623d2782747a7c8f0ac8febf4ee36,2f18ef5da74623d2782747a7c8f0ac8febf4ee36,Implemented collection initializers and String.Concat so the Initializers test passes fully
kg,2011-05-05 00:15:07,https://api.github.com/repos/sq/JSIL/git/commits/933ad3b6fbf23260f62b228c032057dee9544d1d,933ad3b6fbf23260f62b228c032057dee9544d1d,"Added a virtual GetExpectedType method to JSExpression.
Implemented GetExpectedType for most node types.
Added explicit 'expected type' parameters to the constructors of node types that needed them.
Created a few 'special identifiers' classes to simplify the representation of special, runtime-only types/identifiers like JSIL.CheckType in the AST."
kg,2011-05-04 22:54:29,https://api.github.com/repos/sq/JSIL/git/commits/eaa45f77e2b54264f667e5250dcf5f37edcb391a,eaa45f77e2b54264f667e5250dcf5f37edcb391a,"Updated to ILSpy trunk
Implement the AddressOf operator since ILSpy upstream generates it now
Added test cases for default value expressions"
kg,2011-05-04 09:40:36,https://api.github.com/repos/sq/JSIL/git/commits/455589e7a8f140602a05d2f1c2c0423bb3cd5d31,455589e7a8f140602a05d2f1c2c0423bb3cd5d31,"Implemented more missing operators, added basic test coverage for them"
kg,2011-05-04 08:42:35,https://api.github.com/repos/sq/JSIL/git/commits/1e58b00c40d88300eb3b82abbdb04bda3a174d25,1e58b00c40d88300eb3b82abbdb04bda3a174d25,"Adjust the decompiler configuration to produce more useful ILAst
Emit newlines in object initializers
Minor bugfixes"
kg,2011-05-04 08:20:25,https://api.github.com/repos/sq/JSIL/git/commits/439c73f94f790082ef294917dd43514dceb4af56,439c73f94f790082ef294917dd43514dceb4af56,"Only emit parentheses around type expressions when necessary
Forward-declare local variables at the top of function bodies, with appropriate default values"
kg,2011-05-04 05:01:58,https://api.github.com/repos/sq/JSIL/git/commits/c33621b7670de52e746a7f6f9bbd6c236d826269,c33621b7670de52e746a7f6f9bbd6c236d826269,Fixed Translate_EqualityComparison dropping part of the comparison
kg,2011-05-04 04:59:12,https://api.github.com/repos/sq/JSIL/git/commits/036e6eff391f52d0058ef5319b8a37079dbbdc66,036e6eff391f52d0058ef5319b8a37079dbbdc66,"When loading the this-pointer of a struct, load it as a value instead of a reference to the struct
Break statement works now
Partial support for object initializers
References now have materialized and unmaterialized states so that they can be passed as references"
kg,2011-05-04 03:29:13,https://api.github.com/repos/sq/JSIL/git/commits/013a3ef744445d6521e2d49110427288f03cb1a1,013a3ef744445d6521e2d49110427288f03cb1a1,Fixes to the way references are implemented
kg,2011-05-04 01:02:12,https://api.github.com/repos/sq/JSIL/git/commits/253cab9895fb3c55249781fdcae93fbe28f8e57d,253cab9895fb3c55249781fdcae93fbe28f8e57d,Fixed code generation for calls to base classes
kg,2011-05-04 00:57:07,https://api.github.com/repos/sq/JSIL/git/commits/cb76206ec673870e33b26d5d5f052821147a9a47,cb76206ec673870e33b26d5d5f052821147a9a47,"Fixed inverted if statement in System.Exception.toString
Fixed try blocks with a single catch clause"
kg,2011-05-04 00:51:53,https://api.github.com/repos/sq/JSIL/git/commits/5770c6d3df58cfd0a95ffda245dfb758995316f4,5770c6d3df58cfd0a95ffda245dfb758995316f4,Basic uses of member references work
kg,2011-05-04 00:41:15,https://api.github.com/repos/sq/JSIL/git/commits/70445f0798021714e728abfd0e876cb56fba429f,70445f0798021714e728abfd0e876cb56fba429f,"JSIL.Reference.Of can be used to get an abstract type object for a strongly typed reference, and it can be used with CheckType to check the type of a JSIL.Variable or JSIL.MemberReference"
kg,2011-05-04 00:22:41,https://api.github.com/repos/sq/JSIL/git/commits/17b60ca9145f02d124ffb87a31f3a7ad4ab5c0b5,17b60ca9145f02d124ffb87a31f3a7ad4ab5c0b5,"Fixed constructor overloading
Fixed castclass and unbox_any"
kg,2011-05-04 00:14:45,https://api.github.com/repos/sq/JSIL/git/commits/223298b772b3a7487846aa01b1b7f10e98a0d6a9,223298b772b3a7487846aa01b1b7f10e98a0d6a9,"Some work on support for ref parameters
Boolean literals work now"
kg,2011-05-03 23:49:55,https://api.github.com/repos/sq/JSIL/git/commits/8beee5139b6c57bb42fec44c066c5b593c79c0b2,8beee5139b6c57bb42fec44c066c5b593c79c0b2,"Non-flags enums work now
Added null statement and expression node types"
kg,2011-05-03 23:35:26,https://api.github.com/repos/sq/JSIL/git/commits/01da55691d3fc49228f315727e56446647376a64,01da55691d3fc49228f315727e56446647376a64,"Try catch blocks, throw and if statements work
Fixed some bugs in System.Exception
Fixed JavascriptFormatter.CloseAndReopenBrace"
kg,2011-05-03 20:07:43,https://api.github.com/repos/sq/JSIL/git/commits/3bd83278a3534036af78dd8b7cf4590d8509f06b,3bd83278a3534036af78dd8b7cf4590d8509f06b,"new TDelegate() expressions translate correctly
Postfix increment and decrement expressions translate correctly
Multidimensional array constructors translate correctly"
kg,2011-05-03 19:45:26,https://api.github.com/repos/sq/JSIL/git/commits/8fbf572262b47da5b1f8d68c2e0843f26cddeb38,8fbf572262b47da5b1f8d68c2e0843f26cddeb38,"Checkpoint:
  return statement works
  boxing works
  postfix unary operators work in addition to prefix unary operators
  basic field access works"
kg,2011-05-03 19:30:55,https://api.github.com/repos/sq/JSIL/git/commits/36c5cb1cf6138a6b8097793a1e5b0335f8e65900,36c5cb1cf6138a6b8097793a1e5b0335f8e65900,"Checkpoint:
  if and while blocks translate correctly now
  indexing expressions translate now
  more operators implemented
  changed the Output reference in ILBlockTranslator to be null so that code that attempts to write to output will throw at runtime and fail the test"
kg,2011-05-03 09:31:17,https://api.github.com/repos/sq/JSIL/git/commits/f7b893182cca36e69414cc9745a544903f225a58,f7b893182cca36e69414cc9745a544903f225a58,Checkpointing work on AST-based javascript emitter
kg,2011-05-03 06:41:34,https://api.github.com/repos/sq/JSIL/git/commits/367b3a5264270817569e959abcb0055809a4e06f,367b3a5264270817569e959abcb0055809a4e06f,"Remove dead code
Checkpointing work on a javascript AST to simplify code generation and allow transformation passes like the ones that were used on the C# AST"
kg,2011-05-03 06:02:06,https://api.github.com/repos/sq/JSIL/git/commits/4ba9abce1f0e2b1dc56c1d0e69d17ecf2bc9cc21,4ba9abce1f0e2b1dc56c1d0e69d17ecf2bc9cc21,Ldsflda is slightly less wrong now.
kg,2011-05-03 05:58:07,https://api.github.com/repos/sq/JSIL/git/commits/1f6f646cae5ed65a4a811ed7e28aa4fd3b59acb2,1f6f646cae5ed65a4a811ed7e28aa4fd3b59acb2,Simple optimizations to boolean comparisons
kg,2011-05-03 05:38:48,https://api.github.com/repos/sq/JSIL/git/commits/11dede5dacb7dca9abf6b7ae9b8c1c6571d7179e,11dede5dacb7dca9abf6b7ae9b8c1c6571d7179e,"MultiDimArrays passes now:
  Reworked JSIL.JaggedArray to be a wrapper around a single-dimensional JS array, with an interface closer to the CLR implementation's.
  Constants of type System.Boolean are emitted as true/false instead of 1/0"
kg,2011-05-03 05:13:58,https://api.github.com/repos/sq/JSIL/git/commits/646064302def970785b4f69524440e46dca3682d,646064302def970785b4f69524440e46dca3682d,"Fixed the ForEach test (JSIL.ArrayEnumerator wasn't properly implementing the right interfaces)
Made the List stub also implement the correct interfaces"
kg,2011-05-03 05:08:34,https://api.github.com/repos/sq/JSIL/git/commits/7e657aac7da992883bda92d4c995abee0d8035c0,7e657aac7da992883bda92d4c995abee0d8035c0,"Fix the interface definitions in bootstrap to use dicts so that __ImplementInterface__ works against them
Detect the MSIL pattern for 'x is y' and translate it to a JSIL.CheckType invocation
Emit interfaces using __ImplementInterface__ instead of directly assigning __Interfaces__"
kg,2011-05-02 09:56:29,https://api.github.com/repos/sq/JSIL/git/commits/a4931dfa1765d96bc7dfb7dd4b687954cf758996,a4931dfa1765d96bc7dfb7dd4b687954cf758996,CustomEnumerator passes now
kg,2011-05-02 09:38:33,https://api.github.com/repos/sq/JSIL/git/commits/ad51c747ca4f664d07b1ff75aedaeefd58fac554,ad51c747ca4f664d07b1ff75aedaeefd58fac554,Hack to allow direct method calls on structs
kg,2011-05-02 09:14:03,https://api.github.com/repos/sq/JSIL/git/commits/c16171e6ceca004ad4a1214ea2a37bebfe6a616e,c16171e6ceca004ad4a1214ea2a37bebfe6a616e,Implemented some more operators
kg,2011-05-02 09:08:32,https://api.github.com/repos/sq/JSIL/git/commits/d098040bb7d6ce4965584ebb5574e1ba6fb12e7b,d098040bb7d6ce4965584ebb5574e1ba6fb12e7b,"Fixed Delegate.Invoke
Fixed MulticastDelegate.Invoke"
kg,2011-05-02 08:57:38,https://api.github.com/repos/sq/JSIL/git/commits/6fd564258e5aa99ad6ce5fd4b1529f0157cd6c0e,6fd564258e5aa99ad6ce5fd4b1529f0157cd6c0e,Partial support for interfaces
kg,2011-05-02 08:41:51,https://api.github.com/repos/sq/JSIL/git/commits/15a2ce6433e8fe2beb5dbcdb5392f1f73e8dea0b,15a2ce6433e8fe2beb5dbcdb5392f1f73e8dea0b,ForEach test case works now after fixing some stupid mistakes in bootstrap
kg,2011-05-02 08:27:12,https://api.github.com/repos/sq/JSIL/git/commits/ee5b75043b174110c9055a3f0354b0a2415b3db1,ee5b75043b174110c9055a3f0354b0a2415b3db1,Fixed ExtensionMethods by forward-declaring types
kg,2011-05-02 08:24:45,https://api.github.com/repos/sq/JSIL/git/commits/e74b9857182dfc0042c9c1d73453e4f6b5f4ded9,e74b9857182dfc0042c9c1d73453e4f6b5f4ded9,"Corrected implementation of Ldflda to use JSIL.MemberReference
Added a simple implementation of CompareExchange so that compiler-generated events work"
kg,2011-05-02 08:11:58,https://api.github.com/repos/sq/JSIL/git/commits/783197ced9e856a8d55b9992a0ea5ee81e3842a0,783197ced9e856a8d55b9992a0ea5ee81e3842a0,Fix CustomEvents by including generic arguments in type name strings
kg,2011-05-02 08:06:25,https://api.github.com/repos/sq/JSIL/git/commits/ee502d163f136367b9eb06e72e12ca4da46c8c5b,ee502d163f136367b9eb06e72e12ca4da46c8c5b,"Fix CustomExceptions without breaking TryCatch
Delegates passes now"
kg,2011-05-02 07:24:15,https://api.github.com/repos/sq/JSIL/git/commits/880c2f97ee2d3d4e6990654db432ced8880a3e0f,880c2f97ee2d3d4e6990654db432ced8880a3e0f,"StructDefaults, TypeCasts, TryCatch fixed"
kg,2011-05-02 07:18:22,https://api.github.com/repos/sq/JSIL/git/commits/c92264e8b2098849fd0b360225dd9d609116a46c,c92264e8b2098849fd0b360225dd9d609116a46c,Null coalescing operator implemented
kg,2011-05-02 05:56:58,https://api.github.com/repos/sq/JSIL/git/commits/12dbe05d7a2d37d96b3d57a5e9d935f8672a0ec0,12dbe05d7a2d37d96b3d57a5e9d935f8672a0ec0,Various crash fixes
kg,2011-05-02 05:08:48,https://api.github.com/repos/sq/JSIL/git/commits/8ee422d00d99ef5db64c0742feb801e1ae90716e,8ee422d00d99ef5db64c0742feb801e1ae90716e,"Fixed backing field defaults not being emitted
Overloaded method name mangling now done via type information"
kg,2011-05-02 04:54:48,https://api.github.com/repos/sq/JSIL/git/commits/ee0357e21cdf34b82cfc599b7e9e4901889d95f7,ee0357e21cdf34b82cfc599b7e9e4901889d95f7,Non-flags enums work now
kg,2011-05-02 04:37:26,https://api.github.com/repos/sq/JSIL/git/commits/f967608857b3772a2a18dbca599642469c44e920,f967608857b3772a2a18dbca599642469c44e920,Some progress on supporting enums
kg,2011-05-02 04:17:46,https://api.github.com/repos/sq/JSIL/git/commits/d3e012a1053f25cfb6a91ccba9f4a39ba774a0fa,d3e012a1053f25cfb6a91ccba9f4a39ba774a0fa,Custom exceptions test passes
kg,2011-05-02 03:48:57,https://api.github.com/repos/sq/JSIL/git/commits/66f1015087df0d75c758a90682a7bb37b8a4af0c,66f1015087df0d75c758a90682a7bb37b8a4af0c,"Fixed the *fld instructions accepting FieldDefinition instead of FieldReference
Implemented div operator
Translation of typeof(T) implemented"
kg,2011-05-02 03:42:11,https://api.github.com/repos/sq/JSIL/git/commits/0547d6b92d5508904c9d8b61174c0c64a10d244c,0547d6b92d5508904c9d8b61174c0c64a10d244c,"When emitting a generic type instance as an identifier, transform the <T> part into an .Of(T) invocation"
kg,2011-05-02 03:31:21,https://api.github.com/repos/sq/JSIL/git/commits/64eb7155aff48b57053e952ec5c732b054e000bd,64eb7155aff48b57053e952ec5c732b054e000bd,Some basic array manipulation works
kg,2011-05-02 03:14:35,https://api.github.com/repos/sq/JSIL/git/commits/989cbddad26f3b28b7d5959a6c1f4e913d046b94,989cbddad26f3b28b7d5959a6c1f4e913d046b94,"Emit field defaults and cctor invocations
Handle virtual calls to getters/setters"
kg,2011-05-02 02:58:41,https://api.github.com/repos/sq/JSIL/git/commits/0dfb597ea7d883ae3c7760d02e0f95a44232d21f,0dfb597ea7d883ae3c7760d02e0f95a44232d21f,"Untranslatable nodes/instructions emit method calls that throw an exception, so that resulting javascript will not loop infinitely"
kg,2011-05-02 00:08:37,https://api.github.com/repos/sq/JSIL/git/commits/bb86da50ace30a94b6c4b0620f7ac3aa885b366c,bb86da50ace30a94b6c4b0620f7ac3aa885b366c,Fixed overload dispatching for arrays
kg,2011-05-01 23:26:17,https://api.github.com/repos/sq/JSIL/git/commits/28e869fe70beb7f9990e0e11cc61098b0cfadee9,28e869fe70beb7f9990e0e11cc61098b0cfadee9,"Checkpoint:
New test case for if statements.
Initial implementation of new ILAst based compiler."
kg,2011-05-01 00:07:35,https://api.github.com/repos/sq/JSIL/git/commits/7a285149f69f3534f6b2325b9f1f98c2f1e107c2,7a285149f69f3534f6b2325b9f1f98c2f1e107c2,Ignored overloads are not emitted
kg,2011-04-25 15:08:12,https://api.github.com/repos/sq/JSIL/git/commits/4a2173a0e7774c1cbafcf962d72c2d7e2ca14951,4a2173a0e7774c1cbafcf962d72c2d7e2ca14951,"Type detection for expressions involving comparisons works correctly now
GotoConverter replaces untranslatable blocks with a constant throw instead of aborting decompilation"
kg,2011-04-25 14:50:21,https://api.github.com/repos/sq/JSIL/git/commits/1e75a52df5d4b9b41db192cccbf957faf2a3d71b,1e75a52df5d4b9b41db192cccbf957faf2a3d71b,Implemented support for try blocks with multiple catch clauses
kg,2011-04-25 14:07:55,https://api.github.com/repos/sq/JSIL/git/commits/7741339b377da11f0aba4e8418b0a74fc7af9e90,7741339b377da11f0aba4e8418b0a74fc7af9e90,Type resolution implemented more completely for arrays and references
kg,2011-04-25 13:52:52,https://api.github.com/repos/sq/JSIL/git/commits/58e4d7818b2fe6a25040a34dec12bd567624ac54,58e4d7818b2fe6a25040a34dec12bd567624ac54,"Passing static and instance members as ref/out works now
Partial support for identifying dependencies and automatically translating them"
kg,2011-04-25 06:12:13,https://api.github.com/repos/sq/JSIL/git/commits/0dce3bf9a56704cd21912558cc9b3dd78257b145,0dce3bf9a56704cd21912558cc9b3dd78257b145,"Custom event declarations work
Attempt to generate fully qualified generic type names when possible"
kg,2011-04-24 15:26:20,https://api.github.com/repos/sq/JSIL/git/commits/c66cc42c3423510b8edafefd6a6d6bb4f5ce496c,c66cc42c3423510b8edafefd6a6d6bb4f5ce496c,Fixed some more goto converter edge cases
kg,2011-04-24 15:00:36,https://api.github.com/repos/sq/JSIL/git/commits/08c045f86c9b457bdf9d554e16782cb0a5235334,08c045f86c9b457bdf9d554e16782cb0a5235334,Fixes to declaration hoisting
kg,2011-04-24 13:35:25,https://api.github.com/repos/sq/JSIL/git/commits/78f2f09c264637170dd969004a4d5eadf1844b65,78f2f09c264637170dd969004a4d5eadf1844b65,Fix hoisting of null initializers
kg,2011-04-24 13:16:31,https://api.github.com/repos/sq/JSIL/git/commits/827877ec1189ff4d625cb44a4335067515e38246,827877ec1189ff4d625cb44a4335067515e38246,Implemented the null coalescing operator
kg,2011-04-24 13:05:18,https://api.github.com/repos/sq/JSIL/git/commits/1c4ddaf454dcc0875f58c743d19334dc839d69f6,1c4ddaf454dcc0875f58c743d19334dc839d69f6,Collection initializers work for object members now
kg,2011-04-24 11:41:03,https://api.github.com/repos/sq/JSIL/git/commits/f4edb572d2cec6c05499ef3f685644cbb85401f3,f4edb572d2cec6c05499ef3f685644cbb85401f3,"Fix ParameterModifier discarding annotations
Fix boolean missing from GetReferenceToPrimitiveType
Emit casts as Math.floor when appropriate"
kg,2011-04-24 11:08:35,https://api.github.com/repos/sq/JSIL/git/commits/3c73d4e9ffba8764baabda9c29efc665d2183a52,3c73d4e9ffba8764baabda9c29efc665d2183a52,"Clone structs when passing them as arguments, so that return statements do not need to clone them. This speeds up the common case of a function returning a new struct."
kg,2011-04-24 10:58:53,https://api.github.com/repos/sq/JSIL/git/commits/5d32a7dd7fb1915d00853cfde51f3ee066a5ace2,5d32a7dd7fb1915d00853cfde51f3ee066a5ace2,Eliminate unnecessary arithmetic casts from output JS
kg,2011-04-24 10:26:24,https://api.github.com/repos/sq/JSIL/git/commits/8687ed869d4b28098572d603f01cc12c5fd2ee5b,8687ed869d4b28098572d603f01cc12c5fd2ee5b,"Infer types for most expressions, and use them to identify cases where truncation must be performed on the result of a binary operator"
kg,2011-04-24 08:36:01,https://api.github.com/repos/sq/JSIL/git/commits/e0a3140e36c217592eea583c3c6dd735397a01d9,e0a3140e36c217592eea583c3c6dd735397a01d9,Added test case for passing structs by ref
kg,2011-04-24 07:36:09,https://api.github.com/repos/sq/JSIL/git/commits/6f8ab280ffe14f737755137f1f96c2cccd68df0f,6f8ab280ffe14f737755137f1f96c2cccd68df0f,Returning a struct from a function now makes a copy
kg,2011-04-24 07:18:22,https://api.github.com/repos/sq/JSIL/git/commits/57067299037a04feab7d1a21b499ac916f5c1612,57067299037a04feab7d1a21b499ac916f5c1612,Decide whether to do a struct copy for assignments based on the right hand side instead of the left. This eliminates unnecessary copies.
kg,2011-04-24 07:16:13,https://api.github.com/repos/sq/JSIL/git/commits/c60de7523bd06032436ba9d97747e9031f1a1003,c60de7523bd06032436ba9d97747e9031f1a1003,"In basic cases, struct assignment semantics are emulated by using MemberwiseClone"
kg,2011-04-23 08:58:49,https://api.github.com/repos/sq/JSIL/git/commits/63c86a46a8153aa31f8bbb91526787302351040b,63c86a46a8153aa31f8bbb91526787302351040b,"Closer to working support for yield return/yield break
Support for private interface method implementations"
kg,2011-04-23 07:50:02,https://api.github.com/repos/sq/JSIL/git/commits/b6ef3176744db1866a12ee0deb99f4d6d1125011,b6ef3176744db1866a12ee0deb99f4d6d1125011,References of array types are emitted properly
kg,2011-04-23 07:29:18,https://api.github.com/repos/sq/JSIL/git/commits/a78c793a19c159227a883edc93405610fc528dc6,a78c793a19c159227a883edc93405610fc528dc6,Implemented the Is operator
kg,2011-04-23 07:11:38,https://api.github.com/repos/sq/JSIL/git/commits/92155e4ee427ef817665d1c9f7ea6c50ba255f9a,92155e4ee427ef817665d1c9f7ea6c50ba255f9a,"Custom enumerators work now
Enumerators are disposed now
Using blocks work now
Newlines are emitted before significant blocks now to produce more readable JS"
kg,2011-04-23 06:17:26,https://api.github.com/repos/sq/JSIL/git/commits/18d475161f3bb77b6724263f72d2e564aeb8e7fc,18d475161f3bb77b6724263f72d2e564aeb8e7fc,Lambdas emit correct JS now
kg,2011-04-23 01:30:17,https://api.github.com/repos/sq/JSIL/git/commits/9432b769ffa11299995b95947df668844144636a,9432b769ffa11299995b95947df668844144636a,Updated to work against the new support for object initializers in ILSpy
kg,2011-04-21 06:22:57,https://api.github.com/repos/sq/JSIL/git/commits/fb01227bf5d7af212a01ddd22361c5d107ef942c,fb01227bf5d7af212a01ddd22361c5d107ef942c,"Casting to an integral type now floors the value
System.String.Format now works when passed more than four arguments"
kg,2011-04-21 03:40:50,https://api.github.com/repos/sq/JSIL/git/commits/e452131eac45a0118eb90bd8c9cb081daefc399e,e452131eac45a0118eb90bd8c9cb081daefc399e,Store field defaults in the object prototype instead of emitting them into the ctor
kg,2011-04-21 03:27:01,https://api.github.com/repos/sq/JSIL/git/commits/25173dabed4d13849f5045b8ae9395f8e5b6dddf,25173dabed4d13849f5045b8ae9395f8e5b6dddf,"Basic support for interfaces
Casts and the as operator now attempt to do type verification"
kg,2011-04-21 02:36:43,https://api.github.com/repos/sq/JSIL/git/commits/a7ef39f0c91bd83163d5d21a36ff05bfa6f69413,a7ef39f0c91bd83163d5d21a36ff05bfa6f69413,Custom indexers work now
kg,2011-04-21 02:17:00,https://api.github.com/repos/sq/JSIL/git/commits/ed50a702990d3090f405649c97426deefb7f5292,ed50a702990d3090f405649c97426deefb7f5292,"References to base properties are now translated into invocations of their getters/setters (they still won't work if they have a backing store field with the same name as the new property, though)"
kg,2011-04-19 13:09:41,https://api.github.com/repos/sq/JSIL/git/commits/f68f47f235c5f3c5288412885efd69ff55c2b846,f68f47f235c5f3c5288412885efd69ff55c2b846,Fix out/ref parameters not getting a Variable instance emitted if their initializer was omitted
kg,2011-04-19 12:58:52,https://api.github.com/repos/sq/JSIL/git/commits/174c998ef3648cc5ad029be5e0a96b5be2f3d779,174c998ef3648cc5ad029be5e0a96b5be2f3d779,"Reset block numbering at type and method boundaries
Fix bug that caused periods in namespaces to be escaped and broke nested namespaces"
kg,2011-04-19 12:46:01,https://api.github.com/repos/sq/JSIL/git/commits/62811561950b856f368be3dae78a9b98246b6f2b,62811561950b856f368be3dae78a9b98246b6f2b,Generate flat code for chained else ifs instead of deeply nested code
kg,2011-04-19 12:09:08,https://api.github.com/repos/sq/JSIL/git/commits/3eda8c0e91c5e211c22041d6d631879c731ed6a1,3eda8c0e91c5e211c22041d6d631879c731ed6a1,"Extension methods implemented
Don't crash when emitting a generic type identifier"
kg,2011-04-19 11:53:01,https://api.github.com/repos/sq/JSIL/git/commits/76b24e4bf25ab482b2442548e3b1a037999ceac3,76b24e4bf25ab482b2442548e3b1a037999ceac3,Enums are implemented
kg,2011-04-19 11:16:40,https://api.github.com/repos/sq/JSIL/git/commits/102cb6b9244f9c331f0dfcec824a1e97f0733a84,102cb6b9244f9c331f0dfcec824a1e97f0733a84,Basic support for 'params' parameters
kg,2011-04-18 03:33:13,https://api.github.com/repos/sq/JSIL/git/commits/14e0468271019c73365cb0e68e02e5ef3e09b684,14e0468271019c73365cb0e68e02e5ef3e09b684,Overloaded methods work with argument types that are arrays
kg,2011-04-18 03:14:14,https://api.github.com/repos/sq/JSIL/git/commits/f363d2cc5a6abae4b632aaae38cdcd2f5626ed7d,f363d2cc5a6abae4b632aaae38cdcd2f5626ed7d,Basic support for multidimensional arrays
kg,2011-04-18 02:54:16,https://api.github.com/repos/sq/JSIL/git/commits/19044cd414374153714c7b90bce2bb5e7bbe1f66,19044cd414374153714c7b90bce2bb5e7bbe1f66,Ignore methods actually containing unsafe code
kg,2011-04-18 02:27:25,https://api.github.com/repos/sq/JSIL/git/commits/a2e7466b74cd0e6063a79a7fb748d133aa030275,a2e7466b74cd0e6063a79a7fb748d133aa030275,"Basic support for multicast delegates along with Delegate.Combine and Delegate.Remove
Basic support for events"
kg,2011-04-17 21:12:00,https://api.github.com/repos/sq/JSIL/git/commits/5c99dc83295efa51e1283a01f6ed6b115f83e842,5c99dc83295efa51e1283a01f6ed6b115f83e842,Don't clamp colors to bytes
kg,2011-04-17 20:24:55,https://api.github.com/repos/sq/JSIL/git/commits/b038a7d21968a041adace8268f3dbb8261aaf015,b038a7d21968a041adace8268f3dbb8261aaf015,Basic support for overloaded constructors
kg,2011-04-17 19:31:48,https://api.github.com/repos/sq/JSIL/git/commits/1021701dde7ce3811aa087c6e0a8edd76190fdb6,1021701dde7ce3811aa087c6e0a8edd76190fdb6,Add a test for overload dispatch of dynamic instances
kg,2011-04-17 19:28:13,https://api.github.com/repos/sq/JSIL/git/commits/0985032a3d404777e40d688f6b7fbc5259445bf3,0985032a3d404777e40d688f6b7fbc5259445bf3,Attempt to use static dispatch for overloaded methods when the specific overload is known in advance
kg,2011-04-17 19:13:25,https://api.github.com/repos/sq/JSIL/git/commits/333d9c724dc2e17cca94d331f44c9754cf548f09,333d9c724dc2e17cca94d331f44c9754cf548f09,"Forward-declare bodies of namespaces and types so that generated JS is closer to order independent
Detect overloaded methods and emit uniquely named method bodies for each overload, along with a dispatcher method that does runtime overload resolution
Basic runtime type checking implementation
Basic runtime overload resolution implementation"
kg,2011-04-17 16:05:47,https://api.github.com/repos/sq/JSIL/git/commits/062cc1616412fa719f0deba085daddffac5f86ad,062cc1616412fa719f0deba085daddffac5f86ad,"Added SimplePathtracer example
Bootstrap improvements so SimplePathtracer works"
kg,2011-04-17 15:41:55,https://api.github.com/repos/sq/JSIL/git/commits/757e94d4e5470c5724c30d04d08b73799ecb6826,757e94d4e5470c5724c30d04d08b73799ecb6826,Updated readme
kg,2011-04-17 15:28:46,https://api.github.com/repos/sq/JSIL/git/commits/9a8dc9a8164ab8d8581ab5ac26b2863a0c117f8d,9a8dc9a8164ab8d8581ab5ac26b2863a0c117f8d,Fix seal safety/strict safety when dealing with uninitialized fields of non-value types
kg,2011-04-17 15:16:42,https://api.github.com/repos/sq/JSIL/git/commits/b1607b60c5571244cffb2ec60c6355e640c54d26,b1607b60c5571244cffb2ec60c6355e640c54d26,Generate correct code for namespaced types
kg,2011-04-17 15:07:37,https://api.github.com/repos/sq/JSIL/git/commits/721854b0db702b0bf4946eaf1b395c38d7419d4f,721854b0db702b0bf4946eaf1b395c38d7419d4f,Generated code quality improvements
kg,2011-04-17 14:11:54,https://api.github.com/repos/sq/JSIL/git/commits/5b0dd86abe0fde90a75b42f3ff4ac75b492c2b96,5b0dd86abe0fde90a75b42f3ff4ac75b492c2b96,Don't hoist the same name multiple times
kg,2011-04-17 14:10:30,https://api.github.com/repos/sq/JSIL/git/commits/3eb0fece8a723b780d11407105c440af4291555a,3eb0fece8a723b780d11407105c440af4291555a,Eliminate unnecessary extra block statement surrounding hoisted declarations
kg,2011-04-17 14:03:15,https://api.github.com/repos/sq/JSIL/git/commits/bbcbbb9fee43c349dee317facdf555122aaffa87,bbcbbb9fee43c349dee317facdf555122aaffa87,"Generate strict mode compliant JS
Declaration hoisting was broken; fixed it."
kg,2011-04-17 13:38:55,https://api.github.com/repos/sq/JSIL/git/commits/d7fc9ed79b6c45ea9ed2ba010eed8e8ab4aaba96,d7fc9ed79b6c45ea9ed2ba010eed8e8ab4aaba96,Seal generated type objects and their prototypes
kg,2011-04-17 13:21:55,https://api.github.com/repos/sq/JSIL/git/commits/77c368d26f2acb277b11d9e93c2ea333020b981e,77c368d26f2acb277b11d9e93c2ea333020b981e,Stop using 'let' for now since only Firefox supports it :-(
kg,2011-04-17 12:23:11,https://api.github.com/repos/sq/JSIL/git/commits/b2a436cc5dbf2e8ec205a385ba4904d8a3a2c6ae,b2a436cc5dbf2e8ec205a385ba4904d8a3a2c6ae,"Bootstrap expanded
Default value initializers now emitted for structs in addition to primitive types"
kg,2011-04-17 11:46:42,https://api.github.com/repos/sq/JSIL/git/commits/a6da9d167c3c87259c1dea1014c4060bcaf424be,a6da9d167c3c87259c1dea1014c4060bcaf424be,"Hoist initial declarations all the way up instead of one block up when converting gotos
More bootstrap implementations"
kg,2011-04-17 11:33:21,https://api.github.com/repos/sq/JSIL/git/commits/8d4ffe25d4cd654f5a0d058d40f85fff2e938c22,8d4ffe25d4cd654f5a0d058d40f85fff2e938c22,Ref/out parameter transformation works in more cases
kg,2011-04-17 09:59:05,https://api.github.com/repos/sq/JSIL/git/commits/0460eb6a3ca3071617549bf7b50daec211ecc359,0460eb6a3ca3071617549bf7b50daec211ecc359,Expanded bootstrap.js support so simpleray is closer to working
kg,2011-04-17 09:41:09,https://api.github.com/repos/sq/JSIL/git/commits/85aed2aefb8c46d037ef40e203d7d04096657dc7,85aed2aefb8c46d037ef40e203d7d04096657dc7,"Support for basic uses of foreach
Fix to the handling of braces and newlines in block statements"
kg,2011-04-17 08:11:11,https://api.github.com/repos/sq/JSIL/git/commits/21b6e8d34f7e064ddcc6aa5486b254a788fef9e6,21b6e8d34f7e064ddcc6aa5486b254a788fef9e6,Some improvements to handling of arrays.
kg,2011-04-17 06:47:53,https://api.github.com/repos/sq/JSIL/git/commits/104f7a757d91846be7ce82aa21232e4e32a1bd1c,104f7a757d91846be7ce82aa21232e4e32a1bd1c,Merge ILSpy/pdb into ILSpy/master
kg,2011-04-17 06:45:17,https://api.github.com/repos/sq/JSIL/git/commits/7a1a6b1b344951f438b4fb7d5d0e3cb7abce1dc9,7a1a6b1b344951f438b4fb7d5d0e3cb7abce1dc9,"Use 'let' instead of 'var' when converting variable declarations
Hoist variable declarations up when converting gotos into switches"
kg,2011-04-17 05:54:44,https://api.github.com/repos/sq/JSIL/git/commits/4023bd6c0dced87197da2154a8da0b28f807f38c,4023bd6c0dced87197da2154a8da0b28f807f38c,"Attempt to load PDBs when decompiling assemblies in order to recover original variable names.
Stop escaping existing underscores in names from the original C#; things get simpler that way.
Delete temporary files after running test cases."
kg,2011-04-16 10:43:44,https://api.github.com/repos/sq/JSIL/git/commits/fb384bffb262a7264873ee0615e030ca8de155fd,fb384bffb262a7264873ee0615e030ca8de155fd,Custom binary and unary operators are implemented
kg,2011-04-16 09:27:04,https://api.github.com/repos/sq/JSIL/git/commits/b00731a66eee4c30c62c3f120f37f63b294af4c1,b00731a66eee4c30c62c3f120f37f63b294af4c1,Moved base auto properties and base fields tests to failing test cases since making them pass is too expensive
kg,2011-04-16 09:24:03,https://api.github.com/repos/sq/JSIL/git/commits/b4340144342a2cd408be64951d65543d22cfb8e7,b4340144342a2cd408be64951d65543d22cfb8e7,New (not passing) inheritance tests
kg,2011-04-16 03:42:35,https://api.github.com/repos/sq/JSIL/git/commits/afd01b2eab324fe2a781b352afb7c573d27057b2,afd01b2eab324fe2a781b352afb7c573d27057b2,Basic support for delegates based on lambdas and references to instance methods
kg,2011-04-16 02:54:32,https://api.github.com/repos/sq/JSIL/git/commits/fed873a2733f1f7c379020a3244f7186fb75839d,fed873a2733f1f7c379020a3244f7186fb75839d,Base properties work now
kg,2011-04-16 02:11:02,https://api.github.com/repos/sq/JSIL/git/commits/fc5f080dd10f6f42ea99422df4b6fc9efd86708c,fc5f080dd10f6f42ea99422df4b6fc9efd86708c,Base method invocations work
kg,2011-04-16 01:50:06,https://api.github.com/repos/sq/JSIL/git/commits/2f6b91b219e82293ccd4fa6a43262f4c61dd243d,2f6b91b219e82293ccd4fa6a43262f4c61dd243d,JS elapsed time calculation fixed - forgot to escape the {0}
kg,2011-04-16 00:50:09,https://api.github.com/repos/sq/JSIL/git/commits/9d5ddd7dda001fd3b72468b4c723e204a23e53df,9d5ddd7dda001fd3b72468b4c723e204a23e53df,"Run the C# and JS comparison tests in parallel to speed up test runs

Attempt to record JS execution time from inside the interpreter to increase accuracy"
kg,2011-04-16 00:28:30,https://api.github.com/repos/sq/JSIL/git/commits/c0375d4d5d25cb329c13d85f4ee9c796084bd137,c0375d4d5d25cb329c13d85f4ee9c796084bd137,Constructors are now generated as Type.prototype.__ctor instead of inside the body of function Type (...)
kg,2011-04-14 10:38:38,https://api.github.com/repos/sq/JSIL/git/commits/65386edf31d7f82a1a220b89a68d0ac47037af8b,65386edf31d7f82a1a220b89a68d0ac47037af8b,Checkpointing support for custom exception types (doesn't work yet because it relies on invocation of base constructors)
kg,2011-04-14 10:27:49,https://api.github.com/repos/sq/JSIL/git/commits/19b022b0bec6cd033b2a66fe9247c8d055b148fa,19b022b0bec6cd033b2a66fe9247c8d055b148fa,"For clarity purposes, emit a comment before ref/out parameters"
kg,2011-04-14 10:00:32,https://api.github.com/repos/sq/JSIL/git/commits/977e9b15c9bdea748ee499eb47fb34f95cdaa170,977e9b15c9bdea748ee499eb47fb34f95cdaa170,"Basic try/catch translation works
Basic uses of exceptions work"
kg,2011-04-14 09:13:37,https://api.github.com/repos/sq/JSIL/git/commits/ea69ab7f51b6af07429a251a7c3fd482d17b5e07,ea69ab7f51b6af07429a251a7c3fd482d17b5e07,"Don't emit prototype initialization for static classes
Emit type casts as invocations of JSIL.Cast"
kg,2011-04-14 09:02:34,https://api.github.com/repos/sq/JSIL/git/commits/451a697ecd63538436d34c035a5b131f257f78dd,451a697ecd63538436d34c035a5b131f257f78dd,"Abstract methods do not cause a compiler error
Basic method inheritance is implemented
Default toString implementation in JS behaves like the default C# ToString implementation"
kg,2011-04-14 08:26:24,https://api.github.com/repos/sq/JSIL/git/commits/9930dd4b805bc384c1092f1eec51f3463a469605,9930dd4b805bc384c1092f1eec51f3463a469605,Throw when processing overloaded constructors
kg,2011-04-14 08:20:39,https://api.github.com/repos/sq/JSIL/git/commits/1673f416bd9a306ab0dcb1e03f09fda7c6dff640,1673f416bd9a306ab0dcb1e03f09fda7c6dff640,"Add a test case for out parameters
Throw when attempting to translate code that passes object members as ref or out"
kg,2011-04-14 08:12:59,https://api.github.com/repos/sq/JSIL/git/commits/9cd4a87e2ec5babbd1e9f7f61f845dc57b40d506,9cd4a87e2ec5babbd1e9f7f61f845dc57b40d506,Basic support for ref parameters
kg,2011-04-13 10:09:48,https://api.github.com/repos/sq/JSIL/git/commits/f8df1f332fee9f7d64f8e7d58d2ee74ee2a5f999,f8df1f332fee9f7d64f8e7d58d2ee74ee2a5f999,FannkuchRedux passes now
kg,2011-04-13 10:02:28,https://api.github.com/repos/sq/JSIL/git/commits/493bda0ad5bb3ed916b88fac65b96bdac6cf22d6,493bda0ad5bb3ed916b88fac65b96bdac6cf22d6,Goto and Switch tests pass
kg,2011-04-13 09:47:58,https://api.github.com/repos/sq/JSIL/git/commits/8c706e16123d78186e43abf79edbbdc84f7a1648,8c706e16123d78186e43abf79edbbdc84f7a1648,Closer to Goto.cs working right in JS
kg,2011-04-13 06:48:57,https://api.github.com/repos/sq/JSIL/git/commits/dca5946c2a956883b53dba66e8496acdee5cf7ba,dca5946c2a956883b53dba66e8496acdee5cf7ba,Checkpointing label transformation
kg,2011-04-11 11:04:57,https://api.github.com/repos/sq/JSIL/git/commits/1eab33f092a97bb81406933245a8289ee9cb6503,1eab33f092a97bb81406933245a8289ee9cb6503,Codegen tweaks
kg,2011-04-11 07:59:23,https://api.github.com/repos/sq/JSIL/git/commits/a2c9edee9c3fc589fc63524c3458554b36fb0e1c,a2c9edee9c3fc589fc63524c3458554b36fb0e1c,"Binary operators now work on dynamics
The JSReplacement attribute lets you replace a method with a raw javascript expression
Added a simple example that demonstrates interacting with the DOM from C#"
kg,2011-04-11 07:32:08,https://api.github.com/repos/sq/JSIL/git/commits/c4377fad8f58e68bbf3db878e6298fec340cb017,c4377fad8f58e68bbf3db878e6298fec340cb017,The JSReplacement attribute can now be used to replace a method with a JS expression
kg,2011-04-11 07:03:56,https://api.github.com/repos/sq/JSIL/git/commits/030608f9beb2a38a241c186e7670de617615a687,030608f9beb2a38a241c186e7670de617615a687,JSIL.Verbatim.Eval allows you to emit raw javascript into the body of a method
kg,2011-04-11 06:38:44,https://api.github.com/repos/sq/JSIL/git/commits/ce9a5a4bc1709b6d2d672146563d8fa756896e77,ce9a5a4bc1709b6d2d672146563d8fa756896e77,JSIgnore works on fields too
kg,2011-04-11 06:36:47,https://api.github.com/repos/sq/JSIL/git/commits/0ac1acb67debb736b5c700c75e14d19fdfff76f8,0ac1acb67debb736b5c700c75e14d19fdfff76f8,"Implemented JSIgnore attribute for excluding properties, methods and types from JS translation"
kg,2011-04-11 06:11:30,https://api.github.com/repos/sq/JSIL/git/commits/845c64bda4e0719b8e31c3ac3fdc187ac8157cb2,845c64bda4e0719b8e31c3ac3fdc187ac8157cb2,ILSpy upstream changed AstBuilder's constructor
kg,2011-04-11 06:07:06,https://api.github.com/repos/sq/JSIL/git/commits/8efc67c100910a0827a149fbe69fbda89c442355,8efc67c100910a0827a149fbe69fbda89c442355,Sigh.
kg,2011-04-11 06:06:27,https://api.github.com/repos/sq/JSIL/git/commits/d02f0134866700efe579bdf9fc75f20442c6541f,d02f0134866700efe579bdf9fc75f20442c6541f,Git submodules are trash :|
kg,2011-04-11 05:30:11,https://api.github.com/repos/sq/JSIL/git/commits/89243c63a0c8beb92ff0eaa85a3519feba7708b9,89243c63a0c8beb92ff0eaa85a3519feba7708b9,Added another test case for dynamic property usage and handling of temporary locals
kg,2011-04-11 05:28:19,https://api.github.com/repos/sq/JSIL/git/commits/0ee8ef26950ff3d38dbc3844658d2cce12004b99,0ee8ef26950ff3d38dbc3844658d2cce12004b99,Basic support for casting dynamic types to static types
kg,2011-04-11 04:40:25,https://api.github.com/repos/sq/JSIL/git/commits/e583d050d80a1f6bdbb77eb61eb4cb77b86d478f,e583d050d80a1f6bdbb77eb61eb4cb77b86d478f,"Implemented basic support for setting dynamic properties
DynamicCallExpression -> DynamicExpression"
kg,2011-04-11 04:10:20,https://api.github.com/repos/sq/JSIL/git/commits/259a42b7a22ddb48051bf6aaae5b7f3185d07b24,259a42b7a22ddb48051bf6aaae5b7f3185d07b24,Some forms of property access via dynamic are now implemented
kg,2011-04-11 03:30:31,https://api.github.com/repos/sq/JSIL/git/commits/5ceedc45eac99af0a35fb055bcea6f9cd2ecdb38,5ceedc45eac99af0a35fb055bcea6f9cd2ecdb38,Dynamic calls are detected and translated into regular javascript calls
kg,2011-04-11 02:56:58,https://api.github.com/repos/sq/JSIL/git/commits/f61ac941fab085f85ae4d1ad02168e8aeaeae3f3,f61ac941fab085f85ae4d1ad02168e8aeaeae3f3,Some work on transforming C# 'dynamic' calls into regular calls when building JS
kg,2011-04-10 17:10:37,https://api.github.com/repos/sq/JSIL/git/commits/edb112aa91c2ee60a218ed5d12d10b4d17385a54,edb112aa91c2ee60a218ed5d12d10b4d17385a54,"Fixed escaping of <>` characters
Added a test for dynamic (doesn't pass yet)"
kg,2011-04-10 16:19:13,https://api.github.com/repos/sq/JSIL/git/commits/6bbd7eb152da0ef6a50e569764bc0b2f9eece610,6bbd7eb152da0ef6a50e569764bc0b2f9eece610,Explicitly throw when generating a goto or label
kg,2011-04-10 16:10:42,https://api.github.com/repos/sq/JSIL/git/commits/f408e2cccbb676d0b8a6f79ed4590786b3e112ef,f408e2cccbb676d0b8a6f79ed4590786b3e112ef,Manually authored and machine-generated properties are both implemented
kg,2011-04-10 15:05:26,https://api.github.com/repos/sq/JSIL/git/commits/038ad7ef879f0842e870f4112d3999b7ea53d459,038ad7ef879f0842e870f4112d3999b7ea53d459,"Added a batch test runner for simple, argumentless test cases
Added a test based on the fannkuch redux benchmark (that doesn't currently pass, due to a goto)
Added a test for properties (doesn't currently pass)"
kg,2011-04-10 14:49:38,https://api.github.com/repos/sq/JSIL/git/commits/c07d9fd63458bde4e7797854262a7c2f0fd65783,c07d9fd63458bde4e7797854262a7c2f0fd65783,"NBody passes now
Outputs basic timing information for the C# and JS tests (though the JS test timing includes process startup overhead :/)"
kg,2011-04-10 14:40:20,https://api.github.com/repos/sq/JSIL/git/commits/79a007308522408e950453f5340d11ab040c5683,79a007308522408e950453f5340d11ab040c5683,"Emit default values for fields of primitive types
Add the NBody benchmark from benchmark shootout as a test that doesn't quite pass yet"
kg,2011-04-10 13:54:49,https://api.github.com/repos/sq/JSIL/git/commits/e85b303a6d87af64907e96ca12c7bb8dc2ee1c47,e85b303a6d87af64907e96ca12c7bb8dc2ee1c47,"References to primitive types are now converted to fully qualified type names
Binary Tree test is now run with an explicit depth in order to exercise the codepath for handling arguments"
kg,2011-04-10 13:33:32,https://api.github.com/repos/sq/JSIL/git/commits/2f03f9001eecdd7764ed385285605437d9d5240d,2f03f9001eecdd7764ed385285605437d9d5240d,Added automated comparison tests between C# and JS
kg,2011-04-10 11:30:21,https://api.github.com/repos/sq/JSIL/git/commits/4bfec47fcd6ad3bd0876e2b454ab3448d31a84eb,4bfec47fcd6ad3bd0876e2b454ab3448d31a84eb,Checkpoint
kg,2011-04-10 11:01:37,https://api.github.com/repos/sq/JSIL/git/commits/da09155d52107a934e9fe72c8305fc0a423ac7cb,da09155d52107a934e9fe72c8305fc0a423ac7cb,Checkpoint
kg,2011-04-10 09:44:33,https://api.github.com/repos/sq/JSIL/git/commits/49adc34da3da4e8ea028513236186c4453bde2f7,49adc34da3da4e8ea028513236186c4453bde2f7,Checkpoint
kg,2011-04-10 09:10:05,https://api.github.com/repos/sq/JSIL/git/commits/25401e0ebe4be975dfe2ffa8139ea13d8fb68c0b,25401e0ebe4be975dfe2ffa8139ea13d8fb68c0b,Project file changes
kg,2011-04-10 09:07:40,https://api.github.com/repos/sq/JSIL/git/commits/043bd117f475733dba6155618beaf31bd45175e8,043bd117f475733dba6155618beaf31bd45175e8,Checkpoint
kg,2011-04-10 08:11:49,https://api.github.com/repos/sq/JSIL/git/commits/63d4d2271d58a6cbfe2665fc552be001822f7b85,63d4d2271d58a6cbfe2665fc552be001822f7b85,"Updated ignore
Submodules moved to personal forks"
kg,2011-04-10 08:11:21,https://api.github.com/repos/sq/JSIL/git/commits/6f8476274608b50c3e524e18b60b6695e7d9e211,6f8476274608b50c3e524e18b60b6695e7d9e211,Submodules are a pain in the ass
kg,2011-04-10 08:09:29,https://api.github.com/repos/sq/JSIL/git/commits/2acaabab55f7709c761cabe4cd7136132b172d4e,2acaabab55f7709c761cabe4cd7136132b172d4e,Checkpoint
kg,2011-04-10 08:00:49,https://api.github.com/repos/sq/JSIL/git/commits/d9904d66151fe12fab7ecf6fe3df671c7ae2f0ba,d9904d66151fe12fab7ecf6fe3df671c7ae2f0ba,Fixed dead module
kg,2011-04-10 07:59:24,https://api.github.com/repos/sq/JSIL/git/commits/1f4509f264a835b085a5e93e909f4a7932f49a24,1f4509f264a835b085a5e93e909f4a7932f49a24,Checkpoint
kg,2011-04-10 07:31:10,https://api.github.com/repos/sq/JSIL/git/commits/7605212e787fbc1aa93c76184adfe6b4c1710949,7605212e787fbc1aa93c76184adfe6b4c1710949,Added gitignore and upstream pdbs
kg,2011-04-10 07:30:09,https://api.github.com/repos/sq/JSIL/git/commits/0b10bb9e58be6bfc9ece84a9b507490e7d2979bb,0b10bb9e58be6bfc9ece84a9b507490e7d2979bb,First commit
